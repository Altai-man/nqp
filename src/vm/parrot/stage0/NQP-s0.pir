.include 'cclass.pasm'
.include 'except_severity.pasm'
.include 'except_types.pasm'
.include 'iglobals.pasm'
.include 'interpinfo.pasm'
.include 'iterator.pasm'
.include 'sysinfo.pasm'
.include 'stat.pasm'
.include 'datatypes.pasm'
.include 'libpaths.pasm'
.include 'nqp_const.pir'
.loadlib "nqp_group"
.loadlib "nqp_ops"
.loadlib "nqp_bigint_ops"
.loadlib "trans_ops"
.loadlib "io_ops"
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_374_1367388600.55005") :anon :lex
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc _lex_param_0 :slurpy 
    .const 'Sub' $P5048 = 'cuid_373_1367388600.55005' 
    capture_lex $P5048 
    .const 'Sub' $P5048 = 'cuid_375_1367388600.55005' 
    capture_lex $P5048 
    .const 'Sub' $P5048 = 'cuid_377_1367388600.55005' 
    capture_lex $P5048 
    .const 'Sub' $P5048 = 'cuid_398_1367388600.55005' 
    capture_lex $P5048 
    .const 'Sub' $P5048 = 'cuid_417_1367388600.55005' 
    capture_lex $P5048 
    .const 'Sub' $P5048 = 'cuid_418_1367388600.55005' 
    capture_lex $P5048 
    .const 'Sub' $P5048 = 'cuid_419_1367388600.55005' 
    capture_lex $P5048 
    .const 'Sub' $P5048 = 'cuid_420_1367388600.55005' 
    capture_lex $P5048 
    .const 'Sub' $P5048 = 'cuid_421_1367388600.55005' 
    capture_lex $P5048 
    .const 'Sub' $P5048 = 'cuid_422_1367388600.55005' 
    capture_lex $P5048 
    .const 'Sub' $P5048 = 'cuid_423_1367388600.55005' 
    capture_lex $P5048 
    .const 'Sub' $P5048 = 'cuid_424_1367388600.55005' 
    capture_lex $P5048 
    .const 'Sub' $P5048 = 'cuid_425_1367388600.55005' 
    capture_lex $P5048 
    .const 'Sub' $P5048 = 'cuid_427_1367388600.55005' 
    capture_lex $P5048 
    .const 'Sub' $P5048 = 'cuid_505_1367388600.55005' 
    capture_lex $P5048 
    .const 'Sub' $P5048 = 'cuid_509_1367388600.55005' 
    capture_lex $P5048 
    .lex "GLOBALish", $P101 
    .lex "$?PACKAGE", $P102 
    .lex "EXPORT", $P103 
    .lex "$ops", $P104 
    .lex "$nqpcomp", $P105 
    .lex "@clo", $P106 
    .lex "&MAIN", $P107 
    .lex "&hll-config", $P108 
    .lex "@ARGS", _lex_param_0 
    .local pmc ctxsave 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P104, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P105, $P5002
    new $P5003, 'ResizablePMCArray'
    set $P106, $P5003
    .const 'Sub' $P5004 = 'cuid_373_1367388600.55005' 
    capture_lex $P5004
    set $P107, $P5004
    .const 'Sub' $P5005 = 'cuid_375_1367388600.55005' 
    capture_lex $P5005
    set $P108, $P5005
    find_dynamic_lex $P5006, "$*CTXSAVE"
    set ctxsave, $P5006
    isnull $I5001, ctxsave
    if $I5001 goto unless10_end11 
    can $I5002, ctxsave, "ctxsave"
    box $P5009, $I5002
    set $P5008, $P5009
    unless $I5002 goto if11_end13 
    $P5007 = ctxsave."ctxsave"()
    set $P5008, $P5007
  if11_end13:
  unless10_end11:
.annotate 'line', 1
    .const 'Sub' $P5010 = 'cuid_377_1367388600.55005' 
    capture_lex $P5010
    $P5011 = $P5010()
    .const 'Sub' $P5012 = 'cuid_398_1367388600.55005' 
    capture_lex $P5012
    $P5013 = $P5012()
    .const 'Sub' $P5014 = 'cuid_417_1367388600.55005' 
    capture_lex $P5014
    $P5015 = $P5014()
.annotate 'line', 1476
    nqp_get_sc_object $P5016, "1F55543DEC645FFA20AB3FBDCAAD529102443B83-1367388573.57212", 60
    $P5017 = $P5016."operations"()
    set $P104, $P5017
.annotate 'line', 1478
    .const 'Sub' $P5019 = 'cuid_418_1367388600.55005' 
    capture_lex $P5019
    newclosure $P5018, $P5019
    $P104."add_hll_op"("nqp", "preinc", $P5018)
.annotate 'line', 1493
    .const 'Sub' $P5021 = 'cuid_419_1367388600.55005' 
    capture_lex $P5021
    newclosure $P5020, $P5021
    $P104."add_hll_op"("nqp", "predec", $P5020)
.annotate 'line', 1508
    .const 'Sub' $P5023 = 'cuid_420_1367388600.55005' 
    capture_lex $P5023
    newclosure $P5022, $P5023
    $P104."add_hll_op"("nqp", "postinc", $P5022)
.annotate 'line', 1532
    .const 'Sub' $P5025 = 'cuid_421_1367388600.55005' 
    capture_lex $P5025
    newclosure $P5024, $P5025
    $P104."add_hll_op"("nqp", "postdec", $P5024)
.annotate 'line', 1556
    .const 'Sub' $P5027 = 'cuid_422_1367388600.55005' 
    capture_lex $P5027
    newclosure $P5026, $P5027
    $P104."add_hll_op"("nqp", "numify", $P5026)
.annotate 'line', 1560
    .const 'Sub' $P5029 = 'cuid_423_1367388600.55005' 
    capture_lex $P5029
    newclosure $P5028, $P5029
    $P104."add_hll_op"("nqp", "stringify", $P5028)
.annotate 'line', 1564
    .const 'Sub' $P5031 = 'cuid_424_1367388600.55005' 
    capture_lex $P5031
    newclosure $P5030, $P5031
    $P104."add_hll_op"("nqp", "eqaddr", $P5030)
.annotate 'line', 1572
    .const 'Sub' $P5033 = 'cuid_425_1367388600.55005' 
    capture_lex $P5033
    newclosure $P5032, $P5033
    $P104."add_hll_op"("nqp", "falsey", $P5032)
    .const 'Sub' $P5034 = 'cuid_427_1367388600.55005' 
    capture_lex $P5034
    $P5035 = $P5034()
    .const 'Sub' $P5036 = 'cuid_505_1367388600.55005' 
    capture_lex $P5036
    $P5037 = $P5036()
    .const 'Sub' $P5038 = 'cuid_509_1367388600.55005' 
    capture_lex $P5038
    $P5039 = $P5038()
.annotate 'line', 3387
    nqp_get_sc_object $P5040, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 380
    $P5041 = $P5040."new"()
    set $P105, $P5041
.annotate 'line', 3388
    $P105."language"("nqp")
.annotate 'line', 3389
    nqp_get_sc_object $P5042, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 38
    $P105."parsegrammar"($P5042)
.annotate 'line', 3390
    nqp_get_sc_object $P5043, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 253
    $P105."parseactions"($P5043)
.annotate 'line', 3391
    $P5044 = $P105."config"()
    "&hll-config"($P5044)
.annotate 'line', 3394
    $P5045 = $P105."commandline_options"()
    set $P106, $P5045
.annotate 'line', 3395
    $P106."push"("parsetrace")
.annotate 'line', 3396
    $P106."push"("setting=s")
.annotate 'line', 3397
    $P106."push"("setting-path=s")
.annotate 'line', 3398
    $P106."push"("module-path=s")
.annotate 'line', 3399
    $P106."push"("no-regex-lib")
.annotate 'line', 3400
    $P106."push"("stable-sc")
.annotate 'line', 3401
    $P106."push"("vmlibs=s")
.annotate 'line', 3402
    $P106."push"("dynext=s")
    unless _lex_param_0 goto if3370_end7104 
    .const 'Sub' $P5046 = "cuid_373_1367388600.55005" 
    $P5047 = $P5046(_lex_param_0 :flat)
  if3370_end7104:
    .return () 
.end
.HLL "nqp"
.namespace []
.sub "MAIN" :subid("cuid_373_1367388600.55005") :anon :lex :outer("cuid_374_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3405
    .param pmc _lex_param_0 
    .lex "@ARGS", _lex_param_0 
.annotate 'line', 3407
    find_lex $P5001, "$nqpcomp"
    $P5001."command_line"(_lex_param_0, "utf8" :named("encoding"), "ascii iso-8859-1" :named("transcode"))
.annotate 'line', 3410
    find_lex $P5002, "$nqpcomp"
    $P5003 = $P5002."nqpevent"()
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "hll-config" :subid("cuid_375_1367388600.55005") :anon :lex :outer("cuid_374_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3414
    .param pmc _lex_param_0 
    .lex "$config", _lex_param_0 
    box $P5001, "2013.04-113-gb48b5c3"
    set _lex_param_0["version"], $P5001
    box $P5002, "2013-05-01T06:10:00Z"
    set _lex_param_0["build-date"], $P5002
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_377_1367388600.55005") :anon :lex :outer("cuid_374_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 8
    .const 'Sub' $P5033 = 'cuid_376_1367388600.55005' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_1_1367388600.55005' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_2_1367388600.55005' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_3_1367388600.55005' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_4_1367388600.55005' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_5_1367388600.55005' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_6_1367388600.55005' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_7_1367388600.55005' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_8_1367388600.55005' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_9_1367388600.55005' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_10_1367388600.55005' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_11_1367388600.55005' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_17_1367388600.55005' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_18_1367388600.55005' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_19_1367388600.55005' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_20_1367388600.55005' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_21_1367388600.55005' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_22_1367388600.55005' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_23_1367388600.55005' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_24_1367388600.55005' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_25_1367388600.55005' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_26_1367388600.55005' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_27_1367388600.55005' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_28_1367388600.55005' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_29_1367388600.55005' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_30_1367388600.55005' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_31_1367388600.55005' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_32_1367388600.55005' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_33_1367388600.55005' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_34_1367388600.55005' 
    capture_lex $P5033 
    .lex "$loader", $P101 
    .lex "&compilee_list", $P102 
    .lex "$?PACKAGE", $P103 
    .lex "$?CLASS", $P104 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    .const 'Sub' $P5002 = 'cuid_376_1367388600.55005' 
    capture_lex $P5002
    set $P102, $P5002
    .const 'Sub' $P5003 = 'cuid_1_1367388600.55005' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_2_1367388600.55005' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_3_1367388600.55005' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_4_1367388600.55005' 
    capture_lex $P5006
    .const 'Sub' $P5007 = 'cuid_5_1367388600.55005' 
    capture_lex $P5007
    get_hll_global $P5008, "ModuleLoader"
    set $P101, $P5008
    .const 'Sub' $P5009 = 'cuid_6_1367388600.55005' 
    capture_lex $P5009
    .const 'Sub' $P5010 = 'cuid_7_1367388600.55005' 
    capture_lex $P5010
    .const 'Sub' $P5011 = 'cuid_8_1367388600.55005' 
    capture_lex $P5011
    .const 'Sub' $P5012 = 'cuid_9_1367388600.55005' 
    capture_lex $P5012
    .const 'Sub' $P5013 = 'cuid_10_1367388600.55005' 
    capture_lex $P5013
    .const 'Sub' $P5014 = 'cuid_11_1367388600.55005' 
    capture_lex $P5014
    .const 'Sub' $P5015 = 'cuid_17_1367388600.55005' 
    capture_lex $P5015
    .const 'Sub' $P5016 = 'cuid_18_1367388600.55005' 
    capture_lex $P5016
    .const 'Sub' $P5017 = 'cuid_19_1367388600.55005' 
    capture_lex $P5017
    .const 'Sub' $P5018 = 'cuid_20_1367388600.55005' 
    capture_lex $P5018
    .const 'Sub' $P5019 = 'cuid_21_1367388600.55005' 
    capture_lex $P5019
    .const 'Sub' $P5020 = 'cuid_22_1367388600.55005' 
    capture_lex $P5020
    .const 'Sub' $P5021 = 'cuid_23_1367388600.55005' 
    capture_lex $P5021
    .const 'Sub' $P5022 = 'cuid_24_1367388600.55005' 
    capture_lex $P5022
    .const 'Sub' $P5023 = 'cuid_25_1367388600.55005' 
    capture_lex $P5023
    .const 'Sub' $P5024 = 'cuid_26_1367388600.55005' 
    capture_lex $P5024
    .const 'Sub' $P5025 = 'cuid_27_1367388600.55005' 
    capture_lex $P5025
    .const 'Sub' $P5026 = 'cuid_28_1367388600.55005' 
    capture_lex $P5026
    .const 'Sub' $P5027 = 'cuid_29_1367388600.55005' 
    capture_lex $P5027
    .const 'Sub' $P5028 = 'cuid_30_1367388600.55005' 
    capture_lex $P5028
    .const 'Sub' $P5029 = 'cuid_31_1367388600.55005' 
    capture_lex $P5029
    .const 'Sub' $P5030 = 'cuid_32_1367388600.55005' 
    capture_lex $P5030
    .const 'Sub' $P5031 = 'cuid_33_1367388600.55005' 
    capture_lex $P5031
    .const 'Sub' $P5032 = 'cuid_34_1367388600.55005' 
    capture_lex $P5032
    .return ($P5032) 
.end
.HLL "nqp"
.namespace []
.sub "compilee_list" :subid("cuid_376_1367388600.55005") :anon :lex :outer("cuid_377_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 528
    .param pmc _lex_param_0 :optional 
    .param int haz_param_1 :opt_flag 
    .lex "@orig", _lex_param_0 
    if haz_param_1, default16
    new $P5003, 'ResizablePMCArray'
    set _lex_param_0, $P5003
  default16:
    nqp_islist $I5001, _lex_param_0
    unless $I5001 goto if12_else14 
    set $P5002, _lex_param_0
    goto if12_end15
  if12_else14:
    new $P5001, 'ResizablePMCArray'
    set $P5002, $P5001
  if12_end15:
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "BUILD" :subid("cuid_1_1367388600.55005") :anon :lex :outer("cuid_377_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 33
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :slurpy :named 
    .lex "self", _lex_param_0 
    .lex "%opts", _lex_param_1 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 3
    new $P5003, 'ResizablePMCArray'
    repr_bind_attr_obj $P5001, $P5002, "@!BLOCKS", $P5003
    nqp_decontainerize $P5004, _lex_param_0
    nqp_get_sc_object $P5005, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 3
    new $P5006, 'Hash'
    repr_bind_attr_obj $P5004, $P5005, "%!code_objects_to_fix_up", $P5006
    nqp_decontainerize $P5007, _lex_param_0
    nqp_get_sc_object $P5008, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 3
    new $P5009, 'Hash'
    repr_bind_attr_obj $P5007, $P5008, "%!code_object_types", $P5009
    nqp_decontainerize $P5010, _lex_param_0
    nqp_get_sc_object $P5011, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 3
    new $P5012, 'Hash'
    repr_bind_attr_obj $P5010, $P5011, "%!code_object_fixup_list", $P5012
    nqp_decontainerize $P5013, _lex_param_0
    nqp_get_sc_object $P5014, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 3
    new $P5015, 'Hash'
    repr_bind_attr_obj $P5013, $P5014, "%!code_stub_sc_idx", $P5015
    nqp_decontainerize $P5016, _lex_param_0
    nqp_get_sc_object $P5017, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 3
    new $P5018, 'ResizablePMCArray'
    repr_bind_attr_obj $P5016, $P5017, "@!clearup_tasks", $P5018
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "push_lexpad" :subid("cuid_2_1367388600.55005") :anon :lex :outer("cuid_377_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 43
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$pad", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
.annotate 'line', 45
    nqp_get_sc_object $P5002, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 103
    nqp_get_sc_object $P5003, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 93
    $P5004 = $P5003."new"()
    $P5005 = $P5002."new"($P5004, _lex_param_1 :named("node"))
    set $P101, $P5005
    nqp_decontainerize $P5006, _lex_param_0
    nqp_get_sc_object $P5007, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 3
    repr_get_attr_obj $P5008, $P5006, $P5007, "@!BLOCKS"
    set $N5001, $P5008
    unless $N5001 goto if13_end18 
.annotate 'line', 46
    nqp_decontainerize $P5009, _lex_param_0
    nqp_get_sc_object $P5010, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 3
    repr_get_attr_obj $P5011, $P5009, $P5010, "@!BLOCKS"
    set fb_tmp_1, $P5011
    repr_defined $I5001, fb_tmp_1
    unless $I5001 goto if14_else19 
    nqp_decontainerize $P5013, _lex_param_0
    nqp_get_sc_object $P5014, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 3
    repr_get_attr_obj $P5015, $P5013, $P5014, "@!BLOCKS"
    set $N5003, $P5015
    set $N5004, 1
    sub $N5002, $N5003, $N5004
    set $I5002, $N5002
    set $P5012, fb_tmp_1[$I5002]
    set $P5017, $P5012
    goto if14_end20
  if14_else19:
    null $P5016
    set $P5017, $P5016
  if14_end20:
    unless_null $P5017, vivi_1521
    nqp_get_sc_object $P5018, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5017, $P5018
  vivi_1521:
    set $P101["outer"], $P5017
  if13_end18:
    nqp_decontainerize $P5019, _lex_param_0
    nqp_get_sc_object $P5020, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 3
    repr_get_attr_obj $P5021, $P5019, $P5020, "@!BLOCKS"
    nqp_decontainerize $P5022, _lex_param_0
    nqp_get_sc_object $P5023, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 3
    repr_get_attr_obj $P5024, $P5022, $P5023, "@!BLOCKS"
    set $N5005, $P5024
    set $I5003, $N5005
    set $P5021[$I5003], $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "pop_lexpad" :subid("cuid_3_1367388600.55005") :anon :lex :outer("cuid_377_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 54
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
.annotate 'line', 55
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 3
    repr_get_attr_obj $P5003, $P5001, $P5002, "@!BLOCKS"
    $P5004 = $P5003."pop"()
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "cur_lexpad" :subid("cuid_4_1367388600.55005") :anon :lex :outer("cuid_377_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 59
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    .local pmc fb_tmp_2 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 3
    repr_get_attr_obj $P5003, $P5001, $P5002, "@!BLOCKS"
    set fb_tmp_2, $P5003
    repr_defined $I5001, fb_tmp_2
    unless $I5001 goto if16_else22 
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 3
    repr_get_attr_obj $P5007, $P5005, $P5006, "@!BLOCKS"
    set $N5002, $P5007
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    set $I5002, $N5001
    set $P5004, fb_tmp_2[$I5002]
    set $P5009, $P5004
    goto if16_end23
  if16_else22:
    null $P5008
    set $P5009, $P5008
  if16_end23:
    unless_null $P5009, vivi_1724
    nqp_get_sc_object $P5010, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5009, $P5010
  vivi_1724:
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "get_legacy_block_list" :subid("cuid_5_1367388600.55005") :anon :lex :outer("cuid_377_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 64
    .param pmc _lex_param_0 
    .lex "@x", $P101 
    .lex "self", _lex_param_0 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 3
    repr_get_attr_obj $P5005, $P5003, $P5004, "@!BLOCKS"
    repr_clone $P5002, $P5005
    set $P101, $P5002
.annotate 'line', 66
    $P101."reverse"()
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "load_setting" :subid("cuid_6_1367388600.55005") :anon :lex :outer("cuid_377_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 76
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5005 = 'cuid_378_1367388600.55005' 
    capture_lex $P5005 
    .lex "self", _lex_param_0 
    .lex "$setting_name", _lex_param_1 
    root_new $P101, ['parrot';'Continuation']
    set_label $P101, lexotic_25
    .lex "RETURN", $P101
    set $S5001, _lex_param_1
    isne $I5001, $S5001, "NULL"
    box $P5004, $I5001
    set $P5003, $P5004
    unless $I5001 goto if18_end28 
    .const 'Sub' $P5001 = 'cuid_378_1367388600.55005' 
    capture_lex $P5001
    $P5002 = $P5001()
    set $P5003, $P5002
  if18_end28:
    goto lexotic_26
  lexotic_25:
    .get_results ($P5003)
  lexotic_26:
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_378_1367388600.55005") :anon :lex :outer("cuid_6_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 78
    .lex "$setting", $P101 
    .lex "$set_outer", $P102 
    .local pmc fb_tmp_3 
    .local pmc fb_tmp_4 
    .local pmc pkg_viv_tmp_1 
    .local pmc fb_tmp_5 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
    find_dynamic_lex $P5003, "%*COMPILING"
    unless_null $P5003, fallback31
    nqp_get_sc_object $P5005, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5004, $P5005
    set pkg_viv_tmp_1, $P5004
    set fb_tmp_4, pkg_viv_tmp_1
    repr_defined $I5002, fb_tmp_4
    unless $I5002 goto if20_else32 
    set $P5006, fb_tmp_4["%COMPILING"]
    set $P5008, $P5006
    goto if20_end33
  if20_else32:
    null $P5007
    set $P5008, $P5007
  if20_end33:
    unless_null $P5008, vivi_2134
    new $P5009, 'Hash'
    set pkg_viv_tmp_1["%COMPILING"], $P5009
    set $P5008, $P5009
  vivi_2134:
    unless_null $P5008, vivi_2235
    die "Contextual %*COMPILING not found"
    box $P5010, "Contextual %*COMPILING not found"
    set $P5008, $P5010
  vivi_2235:
    set $P5003, $P5008
  fallback31:
    set fb_tmp_3, $P5003
    repr_defined $I5001, fb_tmp_3
    unless $I5001 goto if19_else29 
    set $P5011, fb_tmp_3["%?OPTIONS"]
    set $P5013, $P5011
    goto if19_end30
  if19_else29:
    null $P5012
    set $P5013, $P5012
  if19_end30:
    unless_null $P5013, vivi_2336
    nqp_get_sc_object $P5014, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5013, $P5014
  vivi_2336:
.annotate 'line', 83
    find_lex $P5015, "$loader"
    find_lex $P5016, "$setting_name"
    $P5017 = $P5015."load_setting"($P5016)
    set $P5013["outer_ctx"], $P5017
    set $P101, $P5017
.annotate 'line', 87
    nqp_get_sc_object $P5018, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 89
    nqp_get_sc_object $P5019, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 57
    find_dynamic_lex $P5020, "$*UNIT"
    unless_null $P5020, fallback37
    nqp_get_sc_object $P5022, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5021, $P5022
    set fb_tmp_5, $P5021
    repr_defined $I5003, fb_tmp_5
    unless $I5003 goto if24_else38 
    set $P5023, fb_tmp_5["$UNIT"]
    set $P5025, $P5023
    goto if24_end39
  if24_else38:
    null $P5024
    set $P5025, $P5024
  if24_end39:
    unless_null $P5025, vivi_2540
    nqp_get_sc_object $P5026, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5025, $P5026
  vivi_2540:
    unless_null $P5025, vivi_2641
    die "Contextual $*UNIT not found"
    box $P5027, "Contextual $*UNIT not found"
    set $P5025, $P5027
  vivi_2641:
    set $P5020, $P5025
  fallback37:
    $P5028 = $P5019."new"($P5020 :named("value"))
.annotate 'line', 90
    nqp_get_sc_object $P5029, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 92
    nqp_get_sc_object $P5030, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 94
    nqp_get_sc_object $P5031, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 52
    $P5032 = $P5031."new"("ModuleLoader" :named("value"))
    $P5033 = $P5030."new"($P5032, "getcurhllsym" :named("op"))
.annotate 'line', 96
    nqp_get_sc_object $P5034, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 52
    find_lex $P5035, "$setting_name"
    $P5036 = $P5034."new"($P5035 :named("value"))
    $P5037 = $P5029."new"($P5033, $P5036, "callmethod" :named("op"), "load_setting" :named("name"))
    $P5038 = $P5018."new"($P5028, $P5037, "forceouterctx" :named("op"))
    set $P102, $P5038
.annotate 'line', 98
    find_lex $P5040, "self"
    nqp_decontainerize $P5039, $P5040
    $P5041 = $P5039."is_precompilation_mode"()
    unless $P5041 goto if27_else42 
.annotate 'line', 99
    find_lex $P5043, "self"
    nqp_decontainerize $P5042, $P5043
    nqp_get_sc_object $P5044, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 93
.annotate 'line', 100
    nqp_get_sc_object $P5045, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 102
    nqp_get_sc_object $P5046, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 89
.annotate 'line', 103
    nqp_get_sc_object $P5047, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 52
    $P5048 = $P5047."new"("ModuleLoader.pbc" :named("value"))
.annotate 'line', 104
    nqp_get_sc_object $P5049, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 52
    $P5050 = $P5049."new"("ModuleLoader.class" :named("value"))
    $P5051 = $P5046."new"($P5048 :named("parrot"), $P5050 :named("jvm"))
    $P5052 = $P5045."new"($P5051, "loadbytecode" :named("op"))
    $P5053 = $P5044."new"($P5052, $P102)
    $P5054 = $P5042."add_load_dependency_task"($P5053 :named("deserialize_past"))
    goto if27_end43
  if27_else42:
.annotate 'line', 109
.annotate 'line', 110
    find_lex $P5056, "self"
    nqp_decontainerize $P5055, $P5056
    $P5057 = $P5055."add_fixup_task"($P102 :named("fixup_past"))
  if27_end43:
    getattribute $P5058, $P101, 'lex_pad'
    $P5059 = "RETURN"($P5058)
    .return ($P5059) 
.end
.HLL "nqp"
.namespace []
.sub "load_module" :subid("cuid_7_1367388600.55005") :anon :lex :outer("cuid_377_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 119
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$module", $P101 
    .lex "self", _lex_param_0 
    .lex "$module_name", _lex_param_1 
    .lex "$cur_GLOBALish", _lex_param_2 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_44
    .lex "RETURN", $P102
.annotate 'line', 121
    find_lex $P5002, "$loader"
    $P5003 = $P5002."load_module"(_lex_param_1, _lex_param_2)
    set $P101, $P5003
.annotate 'line', 124
    nqp_decontainerize $P5004, _lex_param_0
    $P5005 = $P5004."is_precompilation_mode"()
    unless $P5005 goto if28_end47 
.annotate 'line', 125
    nqp_decontainerize $P5006, _lex_param_0
    nqp_get_sc_object $P5007, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 93
.annotate 'line', 126
    nqp_get_sc_object $P5008, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 128
    nqp_get_sc_object $P5009, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 89
.annotate 'line', 129
    nqp_get_sc_object $P5010, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 52
    $P5011 = $P5010."new"("ModuleLoader.pbc" :named("value"))
.annotate 'line', 130
    nqp_get_sc_object $P5012, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 52
    $P5013 = $P5012."new"("ModuleLoader.class" :named("value"))
    $P5014 = $P5009."new"($P5011 :named("parrot"), $P5013 :named("jvm"))
    $P5015 = $P5008."new"($P5014, "loadbytecode" :named("op"))
.annotate 'line', 132
    nqp_get_sc_object $P5016, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 134
    nqp_get_sc_object $P5017, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 136
    nqp_get_sc_object $P5018, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 52
    $P5019 = $P5018."new"("ModuleLoader" :named("value"))
    $P5020 = $P5017."new"($P5019, "getcurhllsym" :named("op"))
.annotate 'line', 138
    nqp_get_sc_object $P5021, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 52
    $P5022 = $P5021."new"(_lex_param_1 :named("value"))
    $P5023 = $P5016."new"($P5020, $P5022, "callmethod" :named("op"), "load_module" :named("name"))
    $P5024 = $P5007."new"($P5015, $P5023)
    $P5025 = $P5006."add_load_dependency_task"($P5024 :named("deserialize_past"))
  if28_end47:
    getattribute $P5026, $P101, 'lex_pad'
    $P5027 = "RETURN"($P5026)
    goto lexotic_45
  lexotic_44:
    .get_results ($P5027)
  lexotic_45:
    .return ($P5027) 
.end
.HLL "nqp"
.namespace []
.sub "import" :subid("cuid_8_1367388600.55005") :anon :lex :outer("cuid_377_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 145
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5009 = 'cuid_379_1367388600.55005' 
    capture_lex $P5009 
    .lex "$target", $P101 
    .lex "self", _lex_param_0 
    .lex "$stash", _lex_param_1 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
.annotate 'line', 146
    nqp_decontainerize $P5002, _lex_param_0
    $P5003 = $P5002."cur_lexpad"()
    set $P101, $P5003
    set $P5004, _lex_param_1
    iter $P5006, _lex_param_1
  for_next48:
    unless $P5006, for_done50
    shift $P5008, $P5006
  for_redo49:
    .const 'Sub' $P5007 = 'cuid_379_1367388600.55005' 
    capture_lex $P5007
    $P5004 = $P5007($P5008)
    goto for_next48
  for_done50:
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_379_1367388600.55005") :anon :lex :outer("cuid_8_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 147
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 148
    find_lex $P5002, "self"
    nqp_decontainerize $P5001, $P5002
    find_lex $P5003, "$target"
    $P5004 = _lex_param_0."key"()
    $P5005 = _lex_param_0."value"()
    $P5006 = $P5001."install_lexical_symbol"($P5003, $P5004, $P5005)
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "install_package_symbol" :subid("cuid_9_1367388600.55005") :anon :lex :outer("cuid_377_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 154
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .const 'Sub' $P5012 = 'cuid_381_1367388600.55005' 
    capture_lex $P5012 
    .lex "$name", $P101 
    .lex "$target", $P102 
    .lex "self", _lex_param_0 
    .lex "$package", _lex_param_1 
    .lex "@sym", _lex_param_2 
    .lex "$obj", _lex_param_3 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
    repr_clone $P5003, _lex_param_2
    set _lex_param_2, $P5003
.annotate 'line', 156
    $P5004 = _lex_param_2."pop"()
    set $S5001, $P5004
    box $P5005, $S5001
    set $P101, $P5005
    set $P102, _lex_param_1
    set $P5006, _lex_param_2
    iter $P5008, _lex_param_2
  for_next70:
    unless $P5008, for_done72
    shift $P5010, $P5008
  for_redo71:
    .const 'Sub' $P5009 = 'cuid_381_1367388600.55005' 
    capture_lex $P5009
    $P5006 = $P5009($P5010)
    goto for_next70
  for_done72:
    get_who $P5011, $P102
    set $S5002, $P101
    set $P5011[$S5002], _lex_param_3
    .return (_lex_param_3) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_381_1367388600.55005") :anon :lex :outer("cuid_9_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 160
    .param pmc _lex_param_0 
    .const 'Sub' $P5011 = 'cuid_380_1367388600.55005' 
    capture_lex $P5011 
    .lex "$part", $P101 
    .lex "$_", _lex_param_0 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    set $S5001, _lex_param_0
    box $P5002, $S5001
    set $P101, $P5002
    find_lex $P5004, "$target"
    get_who $P5003, $P5004
    set $S5002, $P101
    exists $I5001, $P5003[$S5002]
    unless $I5001 goto if29_else51 
.annotate 'line', 162
    find_lex $P5007, "$target"
    get_who $P5006, $P5007
    set $S5003, $P101
    set $P5005, $P5006[$S5003]
    store_lex "$target", $P5005
    set $P5010, $P5005
    goto if29_end52
  if29_else51:
    .const 'Sub' $P5008 = 'cuid_380_1367388600.55005' 
    capture_lex $P5008
    $P5009 = $P5008()
    set $P5010, $P5009
  if29_end52:
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_380_1367388600.55005") :anon :lex :outer("cuid_381_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 165
    .lex "$pkgtype", $P101 
    .lex "$pkg", $P102 
    .local pmc fb_tmp_6 
    .local pmc pkg_viv_tmp_2 
    .local pmc fb_tmp_7 
    .local pmc pkg_viv_tmp_3 
    .local pmc fb_tmp_8 
    .local pmc pkg_viv_tmp_4 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
    find_dynamic_lex $P5003, "%*HOW"
    unless_null $P5003, fallback55
    nqp_get_sc_object $P5005, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5004, $P5005
    set pkg_viv_tmp_2, $P5004
    set fb_tmp_6, pkg_viv_tmp_2
    repr_defined $I5002, fb_tmp_6
    unless $I5002 goto if31_else56 
    set $P5006, fb_tmp_6["%HOW"]
    set $P5008, $P5006
    goto if31_end57
  if31_else56:
    null $P5007
    set $P5008, $P5007
  if31_end57:
    unless_null $P5008, vivi_3258
    new $P5009, 'Hash'
    set pkg_viv_tmp_2["%HOW"], $P5009
    set $P5008, $P5009
  vivi_3258:
    unless_null $P5008, vivi_3359
    die "Contextual %*HOW not found"
    box $P5010, "Contextual %*HOW not found"
    set $P5008, $P5010
  vivi_3359:
    set $P5003, $P5008
  fallback55:
    exists $I5001, $P5003["package"]
    unless $I5001 goto if30_else53 
    find_dynamic_lex $P5012, "%*HOW"
    unless_null $P5012, fallback60
    nqp_get_sc_object $P5014, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5013, $P5014
    set pkg_viv_tmp_3, $P5013
    set fb_tmp_7, pkg_viv_tmp_3
    repr_defined $I5003, fb_tmp_7
    unless $I5003 goto if34_else61 
    set $P5015, fb_tmp_7["%HOW"]
    set $P5017, $P5015
    goto if34_end62
  if34_else61:
    null $P5016
    set $P5017, $P5016
  if34_end62:
    unless_null $P5017, vivi_3563
    new $P5018, 'Hash'
    set pkg_viv_tmp_3["%HOW"], $P5018
    set $P5017, $P5018
  vivi_3563:
    unless_null $P5017, vivi_3664
    die "Contextual %*HOW not found"
    box $P5019, "Contextual %*HOW not found"
    set $P5017, $P5019
  vivi_3664:
    set $P5012, $P5017
  fallback60:
    set $P5011, $P5012["package"]
    set $P5029, $P5011
    goto if30_end54
  if30_else53:
    find_dynamic_lex $P5021, "%*HOW"
    unless_null $P5021, fallback65
    nqp_get_sc_object $P5023, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5022, $P5023
    set pkg_viv_tmp_4, $P5022
    set fb_tmp_8, pkg_viv_tmp_4
    repr_defined $I5004, fb_tmp_8
    unless $I5004 goto if37_else66 
    set $P5024, fb_tmp_8["%HOW"]
    set $P5026, $P5024
    goto if37_end67
  if37_else66:
    null $P5025
    set $P5026, $P5025
  if37_end67:
    unless_null $P5026, vivi_3868
    new $P5027, 'Hash'
    set pkg_viv_tmp_4["%HOW"], $P5027
    set $P5026, $P5027
  vivi_3868:
    unless_null $P5026, vivi_3969
    die "Contextual %*HOW not found"
    box $P5028, "Contextual %*HOW not found"
    set $P5026, $P5028
  vivi_3969:
    set $P5021, $P5026
  fallback65:
    set $P5020, $P5021["knowhow"]
    set $P5029, $P5020
  if30_end54:
    set $P101, $P5029
.annotate 'line', 169
    find_lex $P5030, "$part"
    $P5031 = $P101."new_type"($P5030 :named("name"))
    set $P102, $P5031
.annotate 'line', 170
    get_how $P5032, $P102
    $P5032."compose"($P102)
    find_lex $P5034, "$target"
    get_who $P5033, $P5034
    find_lex $P5035, "$part"
    set $S5001, $P5035
    set $P5033[$S5001], $P102
    store_lex "$target", $P102
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "install_lexical_symbol" :subid("cuid_10_1367388600.55005") :anon :lex :outer("cuid_377_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 181
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "$fixup", $P101 
    .lex "self", _lex_param_0 
    .lex "$block", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$obj", _lex_param_3 
    .local pmc fb_tmp_9 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
.annotate 'line', 183
    _lex_param_1."symbol"(_lex_param_2, "lexical" :named("scope"), _lex_param_3 :named("value"))
.annotate 'line', 184
    set fb_tmp_9, _lex_param_1
    repr_defined $I5001, fb_tmp_9
    unless $I5001 goto if40_else73 
    set $P5002, fb_tmp_9[0]
    set $P5004, $P5002
    goto if40_end74
  if40_else73:
    null $P5003
    set $P5004, $P5003
  if40_end74:
    unless_null $P5004, vivi_4175
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_4175:
    nqp_get_sc_object $P5006, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5007 = $P5006."new"("lexical" :named("scope"), _lex_param_2 :named("name"), "var" :named("decl"))
    $P5004."push"($P5007)
.annotate 'line', 187
    nqp_get_sc_object $P5008, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 190
    nqp_get_sc_object $P5009, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 52
    $P5010 = $P5009."new"(_lex_param_2 :named("value"))
.annotate 'line', 191
    nqp_get_sc_object $P5011, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 61
    $P5012 = $P5011."new"(_lex_param_3 :named("value"))
    $P5013 = $P5008."new"(_lex_param_1, $P5010, $P5012, "setstaticlex" :named("op"))
    set $P101, $P5013
.annotate 'line', 193
    nqp_decontainerize $P5014, _lex_param_0
    $P5015 = $P5014."add_fixup_task"($P101 :named("deserialize_past"), $P101 :named("fixup_past"))
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "install_package_routine" :subid("cuid_11_1367388600.55005") :anon :lex :outer("cuid_377_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 198
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "$fixup", $P101 
    .lex "self", _lex_param_0 
    .lex "$package", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$past_block", _lex_param_3 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
.annotate 'line', 199
    nqp_get_sc_object $P5002, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 201
    nqp_get_sc_object $P5003, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    nqp_get_sc_object $P5004, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 61
    $P5005 = $P5004."new"(_lex_param_1 :named("value"))
    $P5006 = $P5003."new"($P5005, "who" :named("op"))
.annotate 'line', 202
    nqp_get_sc_object $P5007, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 52
    set $S5001, _lex_param_2
    $P5008 = $P5007."new"($S5001 :named("value"))
.annotate 'line', 203
    nqp_get_sc_object $P5009, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 57
    $P5010 = $P5009."new"(_lex_param_3 :named("value"))
    $P5011 = $P5002."new"($P5006, $P5008, $P5010, "bindkey" :named("op"))
    set $P101, $P5011
.annotate 'line', 205
    nqp_decontainerize $P5012, _lex_param_0
    $P5013 = $P5012."add_fixup_task"($P101 :named("deserialize_past"), $P101 :named("fixup_past"))
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "create_code" :subid("cuid_17_1367388600.55005") :anon :lex :outer("cuid_377_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 210
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 :named("code_type_name") :optional 
    .param int haz_param_2 :opt_flag 
    .const 'Sub' $P5083 = 'cuid_12_1367388600.55005' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_385_1367388600.55005' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_386_1367388600.55005' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_387_1367388600.55005' 
    capture_lex $P5083 
    .lex "$code_type", $P101 
    .lex "$have_code_type", $P102 
    .lex "$stub_code", $P103 
    .lex "$code_obj", $P104 
    .lex "$fixups", $P105 
    .lex "$dummy", $P106 
    .lex "$code_ref_idx", $P107 
    .lex "self", _lex_param_0 
    .lex "$past", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$is_dispatcher", _lex_param_3 
    .lex "$code_type_name", _lex_param_4 
    .local pmc fb_tmp_10 
    .local pmc fb_tmp_11 
    .local pmc fb_tmp_28 
    .local pmc fb_tmp_29 
    if haz_param_2, default181
    box $P5082, "NQPRoutine"
    set _lex_param_4, $P5082
  default181:
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P105, $P5005
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P106, $P5006
    nqp_get_sc_object $P5007, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P107, $P5007
    root_new $P108, ['parrot';'Continuation']
    set_label $P108, lexotic_76
    .lex "RETURN", $P108
    box $P5008, 0
    set $P102, $P5008
    new $P5031, 'ExceptionHandler'
    set_label $P5031, catch_handler_4989
    $P5031.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5031
.annotate 'line', 214
.annotate 'line', 215
    nqp_decontainerize $P5009, _lex_param_0
    new $P5010, 'ResizablePMCArray'
    push $P5010, _lex_param_4
    $P5011 = $P5009."find_sym"($P5010)
    set $P101, $P5011
.annotate 'line', 216
    find_dynamic_lex $P5013, "$*PACKAGE"
    unless_null $P5013, fallback78
    nqp_get_sc_object $P5015, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5014, $P5015
    set fb_tmp_10, $P5014
    repr_defined $I5002, fb_tmp_10
    unless $I5002 goto if42_else79 
    set $P5016, fb_tmp_10["$PACKAGE"]
    set $P5018, $P5016
    goto if42_end80
  if42_else79:
    null $P5017
    set $P5018, $P5017
  if42_end80:
    unless_null $P5018, vivi_4381
    nqp_get_sc_object $P5019, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5018, $P5019
  vivi_4381:
    unless_null $P5018, vivi_4482
    die "Contextual $*PACKAGE not found"
    box $P5020, "Contextual $*PACKAGE not found"
    set $P5018, $P5020
  vivi_4482:
    set $P5013, $P5018
  fallback78:
    get_how $P5012, $P5013
    find_dynamic_lex $P5021, "$*PACKAGE"
    unless_null $P5021, fallback83
    nqp_get_sc_object $P5023, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5022, $P5023
    set fb_tmp_11, $P5022
    repr_defined $I5003, fb_tmp_11
    unless $I5003 goto if45_else84 
    set $P5024, fb_tmp_11["$PACKAGE"]
    set $P5026, $P5024
    goto if45_end85
  if45_else84:
    null $P5025
    set $P5026, $P5025
  if45_end85:
    unless_null $P5026, vivi_4686
    nqp_get_sc_object $P5027, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5026, $P5027
  vivi_4686:
    unless_null $P5026, vivi_4787
    die "Contextual $*PACKAGE not found"
    box $P5028, "Contextual $*PACKAGE not found"
    set $P5026, $P5028
  vivi_4787:
    set $P5021, $P5026
  fallback83:
    $P5029 = $P5012."name"($P5021)
    set $S5001, $P5029
    set $S5002, _lex_param_4
    isne $I5001, $S5001, $S5002
    box $P5030, $I5001
    set $P102, $P5030
    set $P5032, $P102
    pop_eh 
    goto skip_handler_4888
  catch_handler_4989:
    .get_results ($P5031) 
    set $I10001, 1
    set $P5031["handled"], $I10001
    nqp_get_sc_object $P10001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    finalize $P5031
    pop_upto_eh $P5031
    pop_eh 
    set $P5032, $P10001
    goto skip_handler_4888
  skip_handler_4888:
    .const 'Sub' $P5034 = 'cuid_12_1367388600.55005' 
    capture_lex $P5034
    newclosure $P5033, $P5034
    set $P103, $P5033
    unless $P102 goto if87_end158 
.annotate 'line', 265
    repr_instance_of $P5035, $P101
    set $P104, $P5035
  if87_end158:
.annotate 'line', 270
    nqp_get_sc_object $P5036, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 93
    $P5037 = $P5036."new"()
    set $P105, $P5037
    set fb_tmp_28, _lex_param_1
    repr_defined $I5005, fb_tmp_28
    unless $I5005 goto if89_else161 
    set $P5038, fb_tmp_28["compile_time_dummy"]
    set $P5040, $P5038
    goto if89_end162
  if89_else161:
    null $P5039
    set $P5040, $P5039
  if89_end162:
    unless_null $P5040, vivi_90163
    nqp_get_sc_object $P5041, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5040, $P5041
  vivi_90163:
    defined $I5004, $P5040
    unless $I5004 goto if88_else159 
.annotate 'line', 273
    set fb_tmp_29, _lex_param_1
    repr_defined $I5006, fb_tmp_29
    unless $I5006 goto if91_else164 
    set $P5042, fb_tmp_29["compile_time_dummy"]
    set $P5044, $P5042
    goto if91_end165
  if91_else164:
    null $P5043
    set $P5044, $P5043
  if91_end165:
    unless_null $P5044, vivi_92166
    nqp_get_sc_object $P5045, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5044, $P5045
  vivi_92166:
    set $P106, $P5044
    goto if88_end160
  if88_else159:
.annotate 'line', 276
    nqp_fresh_stub $P5046, $P103
    set $P106, $P5046
    set $S5003, _lex_param_2
    assign $P106, $S5003
    setprop $P106, 'STATIC_CODE_REF', $P106
    setprop $P106, 'COMPILER_STUB', $P106
.annotate 'line', 284
    nqp_decontainerize $P5047, _lex_param_0
    $P5048 = $P5047."add_root_code_ref"($P106, _lex_param_1)
    set $P107, $P5048
    nqp_decontainerize $P5049, _lex_param_0
    nqp_get_sc_object $P5050, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 3
    repr_get_attr_obj $P5051, $P5049, $P5050, "%!code_stub_sc_idx"
.annotate 'line', 285
    $P5052 = _lex_param_1."cuid"()
    set $S5004, $P5052
    set $P5051[$S5004], $P107
    set _lex_param_1["compile_time_dummy"], $P106
    set $P5064, $P102
    unless $P102 goto if93_end168 
.annotate 'line', 291
    nqp_decontainerize $P5053, _lex_param_0
    nqp_get_sc_object $P5054, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 3
    repr_get_attr_obj $P5055, $P5053, $P5054, "%!code_object_fixup_list"
.annotate 'line', 292
    $P5056 = _lex_param_1."cuid"()
    set $S5005, $P5056
    set $P5055[$S5005], $P105
.annotate 'line', 293
    nqp_decontainerize $P5057, _lex_param_0
    $P5058 = $P5057."is_precompilation_mode"()
    unless $P5058 goto if94_else169 
    .const 'Sub' $P5059 = 'cuid_385_1367388600.55005' 
    capture_lex $P5059
    $P5060 = $P5059()
    set $P5063, $P5060
    goto if94_end170
  if94_else169:
    .const 'Sub' $P5061 = 'cuid_386_1367388600.55005' 
    capture_lex $P5061
    $P5062 = $P5061()
    set $P5063, $P5062
  if94_end170:
    set $P5064, $P5063
  if93_end168:
  if88_end160:
.annotate 'line', 333
    nqp_decontainerize $P5065, _lex_param_0
    $P5065."add_fixup_task"($P105 :named("fixup_past"))
    unless $P102 goto if99_else177 
    .const 'Sub' $P5066 = 'cuid_387_1367388600.55005' 
    capture_lex $P5066
    $P5067 = $P5066()
    set $P5081, $P5067
    goto if99_end178
  if99_else177:
.annotate 'line', 372
.annotate 'line', 375
    nqp_get_sc_object $P5068, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 377
    nqp_get_sc_object $P5069, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 379
    nqp_get_sc_object $P5070, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 52
    nqp_decontainerize $P5071, _lex_param_0
    $P5072 = $P5071."handle"()
    $P5073 = $P5070."new"($P5072 :named("value"))
.annotate 'line', 380
    nqp_get_sc_object $P5074, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 42
    $P5075 = $P5074."new"($P107 :named("value"))
    $P5076 = $P5069."new"($P5073, $P5075, "scgetcode" :named("op"))
.annotate 'line', 382
    nqp_get_sc_object $P5077, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 57
    $P5078 = $P5077."new"(_lex_param_1 :named("value"))
    $P5079 = $P5068."new"($P5076, $P5078, "replacecoderef" :named("op"))
    $P105."push"($P5079)
    $P5080 = "RETURN"($P106)
    set $P5081, $P5080
  if99_end178:
    goto lexotic_77
  lexotic_76:
    .get_results ($P5081)
  lexotic_77:
    .return ($P5081) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_12_1367388600.55005") :anon :lex :outer("cuid_17_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 223
    .param pmc _lex_param_0 :slurpy 
    .param pmc _lex_param_1 :slurpy :named 
    .const 'Sub' $P5043 = 'cuid_384_1367388600.55005' 
    capture_lex $P5043 
    .lex "$compiler", $P101 
    .lex "$compiled", $P102 
    .lex "@allcodes", $P103 
    .lex "$c", $P104 
    .lex "$i", $P105 
    .lex "$mainline", $P106 
    .lex "@args", _lex_param_0 
    .lex "%named", _lex_param_1 
    .local pmc fb_tmp_12 
    .local pmc fb_tmp_13 
    .local pmc fb_tmp_14 
    .local pmc pkg_viv_tmp_5 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
    new $P5003, 'ResizablePMCArray'
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P105, $P5005
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P106, $P5006
.annotate 'line', 225
    find_lex $P5007, "$past"
    find_lex $P5009, "self"
    nqp_decontainerize $P5008, $P5009
    $P5010 = $P5008."libs"()
    $P5007."unshift"($P5010)
    compreg $P5011, "nqp"
    set $P101, $P5011
.annotate 'line', 227
.annotate 'line', 228
    nqp_get_sc_object $P5012, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 114
    find_lex $P5013, "$past"
    $P5014 = $P5012."new"($P5013, "nqp" :named("hll"))
    find_dynamic_lex $P5015, "%*COMPILING"
    unless_null $P5015, fallback96
    nqp_get_sc_object $P5017, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5016, $P5017
    set pkg_viv_tmp_5, $P5016
    set fb_tmp_14, pkg_viv_tmp_5
    repr_defined $I5003, fb_tmp_14
    unless $I5003 goto if53_else97 
    set $P5018, fb_tmp_14["%COMPILING"]
    set $P5020, $P5018
    goto if53_end98
  if53_else97:
    null $P5019
    set $P5020, $P5019
  if53_end98:
    unless_null $P5020, vivi_5499
    new $P5021, 'Hash'
    set pkg_viv_tmp_5["%COMPILING"], $P5021
    set $P5020, $P5021
  vivi_5499:
    unless_null $P5020, vivi_55100
    die "Contextual %*COMPILING not found"
    box $P5022, "Contextual %*COMPILING not found"
    set $P5020, $P5022
  vivi_55100:
    set $P5015, $P5020
  fallback96:
    set fb_tmp_13, $P5015
    repr_defined $I5002, fb_tmp_13
    unless $I5002 goto if52_else94 
    set $P5023, fb_tmp_13["%?OPTIONS"]
    set $P5025, $P5023
    goto if52_end95
  if52_else94:
    null $P5024
    set $P5025, $P5024
  if52_end95:
    unless_null $P5025, vivi_56101
    nqp_get_sc_object $P5026, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5025, $P5026
  vivi_56101:
    set fb_tmp_12, $P5025
    repr_defined $I5001, fb_tmp_12
    unless $I5001 goto if51_else92 
    set $P5027, fb_tmp_12["bootstrap"]
    set $P5029, $P5027
    goto if51_end93
  if51_else92:
    null $P5028
    set $P5029, $P5028
  if51_end93:
    unless_null $P5029, vivi_57102
    nqp_get_sc_object $P5030, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5029, $P5030
  vivi_57102:
    unless $P5029 goto if50_else90 
    set $I5004, 1
    goto if50_end91
  if50_else90:
    set $I5004, 0
  if50_end91:
    $P5031 = $P101."compile"($P5014, "ast" :named("from"), 1 :named("compunit_ok"), $I5004 :named("bootstrap"))
    set $P102, $P5031
.annotate 'line', 233
    $P5032 = $P101."backend"()
    $P5033 = $P5032."compunit_coderefs"($P102)
    set $P103, $P5033
    elements $I5005, $P103
    box $P5034, $I5005
    set $P104, $P5034
    box $P5035, 0
    set $P105, $P5035
  while58_test103:
    set $N5001, $P105
    set $N5002, $P104
    islt $I5006, $N5001, $N5002
    box $P5039, $I5006
    set $P5038, $P5039
    unless $I5006 goto while58_done107 
  while58_redo105:
    .const 'Sub' $P5036 = 'cuid_384_1367388600.55005' 
    capture_lex $P5036
    $P5037 = $P5036()
    set $P5038, $P5037
    goto while58_test103 
  while58_done107:
.annotate 'line', 259
    $P5040 = $P101."backend"()
    $P5041 = $P5040."compunit_mainline"($P102)
    set $P106, $P5041
.annotate 'line', 260
    $P5042 = $P106(_lex_param_0 :flat, _lex_param_1 :flat :named)
    .return ($P5042) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_384_1367388600.55005") :anon :lex :outer("cuid_12_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 236
    .const 'Sub' $P5017 = 'cuid_383_1367388600.55005' 
    capture_lex $P5017 
    .lex "$subid", $P101 
    .local pmc fb_tmp_15 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    find_lex $P5002, "@allcodes"
    set fb_tmp_15, $P5002
    repr_defined $I5001, fb_tmp_15
    unless $I5001 goto if59_else108 
    find_lex $P5004, "$i"
    set $I5002, $P5004
    set $P5003, fb_tmp_15[$I5002]
    set $P5006, $P5003
    goto if59_end109
  if59_else108:
    null $P5005
    set $P5006, $P5005
  if59_end109:
    unless_null $P5006, vivi_60110
    nqp_get_sc_object $P5007, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5006, $P5007
  vivi_60110:
    $P5008 = $P5006."get_subid"()
    set $P101, $P5008
    find_lex $P5010, "self"
    nqp_decontainerize $P5009, $P5010
    nqp_get_sc_object $P5011, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 3
    repr_get_attr_obj $P5012, $P5009, $P5011, "%!code_objects_to_fix_up"
    set $S5001, $P101
    exists $I5003, $P5012[$S5001]
    unless $I5003 goto if61_end112 
    .const 'Sub' $P5013 = 'cuid_383_1367388600.55005' 
    capture_lex $P5013
    $P5014 = $P5013()
  if61_end112:
    find_lex $P5015, "$i"
    set $N5002, $P5015
    set $N5003, 1
    add $N5001, $N5002, $N5003
    box $P5016, $N5001
    store_lex "$i", $P5016
    .return ($P5016) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_383_1367388600.55005") :anon :lex :outer("cuid_384_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 238
    .const 'Sub' $P5089 = 'cuid_382_1367388600.55005' 
    capture_lex $P5089 
    .lex "$static", $P101 
    .lex "$fixup_stmts", $P102 
    .local pmc fb_tmp_16 
    .local pmc fb_tmp_17 
    .local pmc fb_tmp_18 
    .local pmc fb_tmp_19 
    .local pmc fb_tmp_20 
    .local pmc fb_tmp_24 
    .local pmc fb_tmp_25 
    .local pmc fb_tmp_26 
    .local pmc fb_tmp_27 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
.annotate 'line', 242
    find_lex $P5004, "self"
    nqp_decontainerize $P5003, $P5004
    nqp_get_sc_object $P5005, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 3
    repr_get_attr_obj $P5006, $P5003, $P5005, "%!code_objects_to_fix_up"
    set fb_tmp_16, $P5006
    repr_defined $I5001, fb_tmp_16
    unless $I5001 goto if62_else113 
    find_lex $P5008, "$subid"
    set $S5001, $P5008
    set $P5007, fb_tmp_16[$S5001]
    set $P5010, $P5007
    goto if62_end114
  if62_else113:
    null $P5009
    set $P5010, $P5009
  if62_end114:
    unless_null $P5010, vivi_63115
    nqp_get_sc_object $P5011, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5010, $P5011
  vivi_63115:
    $P5012 = $P5010."shift"()
    set $P101, $P5012
    find_lex $P5014, "self"
    nqp_decontainerize $P5013, $P5014
    nqp_get_sc_object $P5015, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 3
    repr_get_attr_obj $P5016, $P5013, $P5015, "%!code_object_types"
    set fb_tmp_17, $P5016
    repr_defined $I5002, fb_tmp_17
    unless $I5002 goto if64_else116 
    find_lex $P5018, "$subid"
    set $S5002, $P5018
    set $P5017, fb_tmp_17[$S5002]
    set $P5020, $P5017
    goto if64_end117
  if64_else116:
    null $P5019
    set $P5020, $P5019
  if64_end117:
    unless_null $P5020, vivi_65118
    nqp_get_sc_object $P5021, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5020, $P5021
  vivi_65118:
    find_lex $P5022, "@allcodes"
    set fb_tmp_18, $P5022
    repr_defined $I5003, fb_tmp_18
    unless $I5003 goto if66_else119 
    find_lex $P5024, "$i"
    set $I5004, $P5024
    set $P5023, fb_tmp_18[$I5004]
    set $P5026, $P5023
    goto if66_end120
  if66_else119:
    null $P5025
    set $P5026, $P5025
  if66_end120:
    unless_null $P5026, vivi_67121
    nqp_get_sc_object $P5027, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5026, $P5027
  vivi_67121:
    setattribute $P101, $P5020, "$!do", $P5026
    find_lex $P5029, "self"
    nqp_decontainerize $P5028, $P5029
    nqp_get_sc_object $P5030, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 3
    repr_get_attr_obj $P5031, $P5028, $P5030, "%!code_object_types"
    set fb_tmp_19, $P5031
    repr_defined $I5005, fb_tmp_19
    unless $I5005 goto if68_else122 
    find_lex $P5033, "$subid"
    set $S5003, $P5033
    set $P5032, fb_tmp_19[$S5003]
    set $P5035, $P5032
    goto if68_end123
  if68_else122:
    null $P5034
    set $P5035, $P5034
  if68_end123:
    unless_null $P5035, vivi_69124
    nqp_get_sc_object $P5036, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5035, $P5036
  vivi_69124:
    null $P5037
    setattribute $P101, $P5035, "$!clone_callback", $P5037
    find_lex $P5042, "self"
    nqp_decontainerize $P5041, $P5042
    nqp_get_sc_object $P5043, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 3
    repr_get_attr_obj $P5044, $P5041, $P5043, "%!code_objects_to_fix_up"
    set fb_tmp_20, $P5044
    repr_defined $I5006, fb_tmp_20
    unless $I5006 goto if70_else125 
    find_lex $P5046, "$subid"
    set $S5004, $P5046
    set $P5045, fb_tmp_20[$S5004]
    set $P5048, $P5045
    goto if70_end126
  if70_else125:
    null $P5047
    set $P5048, $P5047
  if70_end126:
    unless_null $P5048, vivi_71127
    nqp_get_sc_object $P5049, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5048, $P5049
  vivi_71127:
    set $P5038, $P5048
    iter $P5040, $P5048
  for_next137:
    unless $P5040, for_done139
    shift $P5051, $P5040
  for_redo138:
    .const 'Sub' $P5050 = 'cuid_382_1367388600.55005' 
    capture_lex $P5050
    $P5038 = $P5050($P5051)
    goto for_next137
  for_done139:
    find_lex $P5052, "@allcodes"
    set fb_tmp_24, $P5052
    repr_defined $I5007, fb_tmp_24
    unless $I5007 goto if78_else140 
    find_lex $P5054, "$i"
    set $I5008, $P5054
    set $P5053, fb_tmp_24[$I5008]
    set $P5056, $P5053
    goto if78_end141
  if78_else140:
    null $P5055
    set $P5056, $P5055
  if78_end141:
    unless_null $P5056, vivi_79142
    nqp_get_sc_object $P5057, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5056, $P5057
  vivi_79142:
    setprop $P5056, 'STATIC_CODE_REF', $P5056
.annotate 'line', 250
    find_lex $P5059, "self"
    nqp_decontainerize $P5058, $P5059
    find_lex $P5061, "self"
    nqp_decontainerize $P5060, $P5061
    nqp_get_sc_object $P5062, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 3
    repr_get_attr_obj $P5063, $P5060, $P5062, "%!code_stub_sc_idx"
    set fb_tmp_25, $P5063
    repr_defined $I5009, fb_tmp_25
    unless $I5009 goto if80_else143 
    find_lex $P5065, "$subid"
    set $S5005, $P5065
    set $P5064, fb_tmp_25[$S5005]
    set $P5067, $P5064
    goto if80_end144
  if80_else143:
    null $P5066
    set $P5067, $P5066
  if80_end144:
    unless_null $P5067, vivi_81145
    nqp_get_sc_object $P5068, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5067, $P5068
  vivi_81145:
    find_lex $P5069, "@allcodes"
    set fb_tmp_26, $P5069
    repr_defined $I5010, fb_tmp_26
    unless $I5010 goto if82_else146 
    find_lex $P5071, "$i"
    set $I5011, $P5071
    set $P5070, fb_tmp_26[$I5011]
    set $P5073, $P5070
    goto if82_end147
  if82_else146:
    null $P5072
    set $P5073, $P5072
  if82_end147:
    unless_null $P5073, vivi_83148
    nqp_get_sc_object $P5074, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5073, $P5074
  vivi_83148:
    $P5058."update_root_code_ref"($P5067, $P5073)
    find_lex $P5076, "self"
    nqp_decontainerize $P5075, $P5076
    nqp_get_sc_object $P5077, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 3
    repr_get_attr_obj $P5078, $P5075, $P5077, "%!code_object_fixup_list"
    set fb_tmp_27, $P5078
    repr_defined $I5012, fb_tmp_27
    unless $I5012 goto if84_else149 
    find_lex $P5080, "$subid"
    set $S5006, $P5080
    set $P5079, fb_tmp_27[$S5006]
    set $P5082, $P5079
    goto if84_end150
  if84_else149:
    null $P5081
    set $P5082, $P5081
  if84_end150:
    unless_null $P5082, vivi_85151
    nqp_get_sc_object $P5083, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5082, $P5083
  vivi_85151:
    set $P102, $P5082
    new $P5087, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5087, while86_handlers155
    push_eh $P5087
  while86_test152:
    $P5084 = $P102."list"()
    set $N5001, $P5084
    box $P5088, $N5001
    set $P5086, $P5088
    unless $N5001 goto while86_done156 
  while86_redo154:
.annotate 'line', 254
    $P5085 = $P102."shift"()
    set $P5086, $P5085
    goto while86_test152 
  while86_handlers155:
    .get_results ($P5087)
    pop_upto_eh $P5087
    getattribute $P5087, $P5087, 'type'
    eq $P5087, .CONTROL_LOOP_NEXT, while86_test152
    eq $P5087, .CONTROL_LOOP_REDO, while86_redo154
  while86_done156:
    pop_eh 
    .return ($P5086) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_382_1367388600.55005") :anon :lex :outer("cuid_383_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 245
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_21 
    .local pmc fb_tmp_22 
    .local pmc fb_tmp_23 
    find_lex $P5002, "self"
    nqp_decontainerize $P5001, $P5002
    nqp_get_sc_object $P5003, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 3
    repr_get_attr_obj $P5004, $P5001, $P5003, "%!code_object_types"
    set fb_tmp_21, $P5004
    repr_defined $I5001, fb_tmp_21
    unless $I5001 goto if72_else128 
    find_lex $P5006, "$subid"
    set $S5001, $P5006
    set $P5005, fb_tmp_21[$S5001]
    set $P5008, $P5005
    goto if72_end129
  if72_else128:
    null $P5007
    set $P5008, $P5007
  if72_end129:
    unless_null $P5008, vivi_73130
    nqp_get_sc_object $P5009, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5008, $P5009
  vivi_73130:
    find_lex $P5011, "@allcodes"
    set fb_tmp_22, $P5011
    repr_defined $I5002, fb_tmp_22
    unless $I5002 goto if74_else131 
    find_lex $P5013, "$i"
    set $I5003, $P5013
    set $P5012, fb_tmp_22[$I5003]
    set $P5015, $P5012
    goto if74_end132
  if74_else131:
    null $P5014
    set $P5015, $P5014
  if74_end132:
    unless_null $P5015, vivi_75133
    nqp_get_sc_object $P5016, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5015, $P5016
  vivi_75133:
    repr_clone $P5010, $P5015
    setattribute _lex_param_0, $P5008, "$!do", $P5010
    find_lex $P5018, "self"
    nqp_decontainerize $P5017, $P5018
    nqp_get_sc_object $P5019, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 3
    repr_get_attr_obj $P5020, $P5017, $P5019, "%!code_object_types"
    set fb_tmp_23, $P5020
    repr_defined $I5004, fb_tmp_23
    unless $I5004 goto if76_else134 
    find_lex $P5022, "$subid"
    set $S5002, $P5022
    set $P5021, fb_tmp_23[$S5002]
    set $P5024, $P5021
    goto if76_end135
  if76_else134:
    null $P5023
    set $P5024, $P5023
  if76_end135:
    unless_null $P5024, vivi_77136
    nqp_get_sc_object $P5025, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5024, $P5025
  vivi_77136:
    null $P5026
    setattribute _lex_param_0, $P5024, "$!clone_callback", $P5026
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_385_1367388600.55005") :anon :lex :outer("cuid_17_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 293
    .const 'Sub' $P5012 = 'cuid_13_1367388600.55005' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_14_1367388600.55005' 
    capture_lex $P5012 
    .lex "$cb", $P101 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    .const 'Sub' $P5003 = 'cuid_13_1367388600.55005' 
    capture_lex $P5003
    newclosure $P5002, $P5003
    set $P101, $P5002
    find_lex $P5004, "$code_obj"
    find_lex $P5005, "$code_type"
    setattribute $P5004, $P5005, "$!clone_callback", $P101
    find_lex $P5007, "self"
    nqp_decontainerize $P5006, $P5007
    nqp_get_sc_object $P5008, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 3
    repr_get_attr_obj $P5009, $P5006, $P5008, "@!clearup_tasks"
    .const 'Sub' $P5011 = 'cuid_14_1367388600.55005' 
    capture_lex $P5011
    newclosure $P5010, $P5011
    push $P5009, $P5010
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_13_1367388600.55005") :anon :lex :outer("cuid_385_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 294
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$do", $P101 
    .lex "$orig", _lex_param_0 
    .lex "$clone", _lex_param_1 
    .lex "$code_obj", _lex_param_2 
    .local pmc fb_tmp_30 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
.annotate 'line', 295
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    nqp_get_sc_object $P5004, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 3
    repr_get_attr_obj $P5005, $P5002, $P5004, "%!code_objects_to_fix_up"
    set fb_tmp_30, $P5005
    repr_defined $I5001, fb_tmp_30
    unless $I5001 goto if95_else171 
    find_lex $P5007, "$past"
    $P5008 = $P5007."cuid"()
    set $S5001, $P5008
    set $P5006, fb_tmp_30[$S5001]
    set $P5010, $P5006
    goto if95_end172
  if95_else171:
    null $P5009
    set $P5010, $P5009
  if95_end172:
    unless_null $P5010, vivi_96173
    nqp_get_sc_object $P5011, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5010, $P5011
  vivi_96173:
    $P5010."push"(_lex_param_2)
    find_lex $P5012, "$code_type"
    null $P5013
    setattribute _lex_param_2, $P5012, "$!clone_callback", $P5013
    find_lex $P5015, "$code_type"
    getattribute $P5014, _lex_param_2, $P5015, "$!do"
    set $P101, $P5014
    setprop $P101, 'COMPILER_STUB', $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_14_1367388600.55005") :anon :lex :outer("cuid_385_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 301

    find_lex $P5001, "$code_obj"
    find_lex $P5002, "$code_type"
    null $P5003
    setattribute $P5001, $P5002, "$!clone_callback", $P5003
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_386_1367388600.55005") :anon :lex :outer("cuid_17_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 305
    .const 'Sub' $P5012 = 'cuid_15_1367388600.55005' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_16_1367388600.55005' 
    capture_lex $P5012 
    .lex "$cb", $P101 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    .const 'Sub' $P5003 = 'cuid_15_1367388600.55005' 
    capture_lex $P5003
    newclosure $P5002, $P5003
    set $P101, $P5002
    find_lex $P5004, "$code_obj"
    find_lex $P5005, "$code_type"
    setattribute $P5004, $P5005, "$!clone_callback", $P101
    find_lex $P5007, "self"
    nqp_decontainerize $P5006, $P5007
    nqp_get_sc_object $P5008, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 3
    repr_get_attr_obj $P5009, $P5006, $P5008, "@!clearup_tasks"
    .const 'Sub' $P5011 = 'cuid_16_1367388600.55005' 
    capture_lex $P5011
    newclosure $P5010, $P5011
    push $P5009, $P5010
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_15_1367388600.55005") :anon :lex :outer("cuid_386_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 306
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$orig", _lex_param_0 
    .lex "$clone", _lex_param_1 
    .lex "$code_obj", _lex_param_2 
    .local pmc fb_tmp_31 
.annotate 'line', 308
    find_lex $P5002, "self"
    nqp_decontainerize $P5001, $P5002
    $P5001."add_object"(_lex_param_2)
.annotate 'line', 309
    find_lex $P5003, "$fixups"
    nqp_get_sc_object $P5004, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 311
    nqp_get_sc_object $P5005, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 313
    nqp_get_sc_object $P5006, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 61
    $P5007 = $P5006."new"(_lex_param_2 :named("value"))
.annotate 'line', 314
    nqp_get_sc_object $P5008, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 61
    find_lex $P5009, "$code_type"
    $P5010 = $P5008."new"($P5009 :named("value"))
.annotate 'line', 315
    nqp_get_sc_object $P5011, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 52
    $P5012 = $P5011."new"("$!do" :named("value"))
.annotate 'line', 316
    nqp_get_sc_object $P5013, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    nqp_get_sc_object $P5014, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 57
    find_lex $P5015, "$past"
    $P5016 = $P5014."new"($P5015 :named("value"))
    $P5017 = $P5013."new"($P5016, "clone" :named("op"))
    $P5018 = $P5005."new"($P5007, $P5010, $P5012, $P5017, "bindattr" :named("op"))
.annotate 'line', 318
    nqp_get_sc_object $P5019, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 61
    $P5020 = $P5019."new"(_lex_param_2 :named("value"))
    $P5021 = $P5004."new"($P5018, $P5020, "setcodeobj" :named("op"))
    $P5003."push"($P5021)
.annotate 'line', 322
    find_lex $P5023, "self"
    nqp_decontainerize $P5022, $P5023
    nqp_get_sc_object $P5024, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 3
    repr_get_attr_obj $P5025, $P5022, $P5024, "%!code_objects_to_fix_up"
    set fb_tmp_31, $P5025
    repr_defined $I5001, fb_tmp_31
    unless $I5001 goto if97_else174 
    find_lex $P5027, "$past"
    $P5028 = $P5027."cuid"()
    set $S5001, $P5028
    set $P5026, fb_tmp_31[$S5001]
    set $P5030, $P5026
    goto if97_end175
  if97_else174:
    null $P5029
    set $P5030, $P5029
  if97_end175:
    unless_null $P5030, vivi_98176
    nqp_get_sc_object $P5031, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5030, $P5031
  vivi_98176:
    $P5032 = $P5030."push"(_lex_param_2)
    .return ($P5032) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_16_1367388600.55005") :anon :lex :outer("cuid_386_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 325

    find_lex $P5001, "$code_obj"
    find_lex $P5002, "$code_type"
    null $P5003
    setattribute $P5001, $P5002, "$!clone_callback", $P5003
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_387_1367388600.55005") :anon :lex :outer("cuid_17_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 337
    .lex "$slot", $P101 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    find_lex $P5002, "$code_obj"
    find_lex $P5003, "$code_type"
    find_lex $P5004, "$dummy"
    setattribute $P5002, $P5003, "$!do", $P5004
    find_lex $P5005, "$is_dispatcher"
    unless $P5005 goto if100_end180 
    find_lex $P5006, "$code_obj"
    find_lex $P5007, "$code_type"
.annotate 'line', 340
    $P5008 = "&compilee_list"()
    setattribute $P5006, $P5007, "$!dispatchees", $P5008
  if100_end180:
.annotate 'line', 342
    find_lex $P5010, "self"
    nqp_decontainerize $P5009, $P5010
    find_lex $P5011, "$code_obj"
    $P5012 = $P5009."add_object"($P5011)
    set $P101, $P5012
.annotate 'line', 345
    find_lex $P5014, "self"
    nqp_decontainerize $P5013, $P5014
.annotate 'line', 346
    nqp_get_sc_object $P5015, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 348
    nqp_get_sc_object $P5016, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 57
    find_lex $P5017, "$past"
    $P5018 = $P5016."new"($P5017 :named("value"))
.annotate 'line', 349
    nqp_get_sc_object $P5019, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 61
    find_lex $P5020, "$code_obj"
    $P5021 = $P5019."new"($P5020 :named("value"))
    $P5022 = $P5015."new"($P5018, $P5021, "setcodeobj" :named("op"))
    $P5013."add_fixup_task"($P5022 :named("deserialize_past"))
.annotate 'line', 353
    find_lex $P5023, "$fixups"
    nqp_get_sc_object $P5024, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 355
    nqp_get_sc_object $P5025, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 61
    find_lex $P5026, "$code_obj"
    $P5027 = $P5025."new"($P5026 :named("value"))
.annotate 'line', 356
    nqp_get_sc_object $P5028, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 61
    find_lex $P5029, "$code_type"
    $P5030 = $P5028."new"($P5029 :named("value"))
.annotate 'line', 357
    nqp_get_sc_object $P5031, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 52
    $P5032 = $P5031."new"("$!do" :named("value"))
.annotate 'line', 358
    nqp_get_sc_object $P5033, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 57
    find_lex $P5034, "$past"
    $P5035 = $P5033."new"($P5034 :named("value"))
    $P5036 = $P5024."new"($P5027, $P5030, $P5032, $P5035, "bindattr" :named("op"))
    $P5023."push"($P5036)
.annotate 'line', 360
    find_lex $P5037, "$fixups"
    nqp_get_sc_object $P5038, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 362
    nqp_get_sc_object $P5039, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 57
    find_lex $P5040, "$past"
    $P5041 = $P5039."new"($P5040 :named("value"))
.annotate 'line', 363
    nqp_get_sc_object $P5042, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 61
    find_lex $P5043, "$code_obj"
    $P5044 = $P5042."new"($P5043 :named("value"))
    $P5045 = $P5038."new"($P5041, $P5044, "setcodeobj" :named("op"))
    $P5037."push"($P5045)
    find_lex $P5047, "self"
    nqp_decontainerize $P5046, $P5047
    nqp_get_sc_object $P5048, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 3
    repr_get_attr_obj $P5049, $P5046, $P5048, "%!code_objects_to_fix_up"
.annotate 'line', 367
    find_lex $P5050, "$past"
    $P5051 = $P5050."cuid"()
    set $S5001, $P5051
    new $P5052, 'ResizablePMCArray'
    find_lex $P5053, "$code_obj"
    push $P5052, $P5053
    set $P5049[$S5001], $P5052
    find_lex $P5055, "self"
    nqp_decontainerize $P5054, $P5055
    nqp_get_sc_object $P5056, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 3
    repr_get_attr_obj $P5057, $P5054, $P5056, "%!code_object_types"
.annotate 'line', 368
    find_lex $P5058, "$past"
    $P5059 = $P5058."cuid"()
    set $S5002, $P5059
    find_lex $P5060, "$code_type"
    set $P5057[$S5002], $P5060
    find_lex $P5061, "$code_obj"
    .return ($P5061) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_create_mo" :subid("cuid_18_1367388600.55005") :anon :lex :outer("cuid_377_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 390
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("name") :optional 
    .param int haz_param_3 :opt_flag 
    .param pmc _lex_param_3 :named("repr") :optional 
    .param int haz_param_4 :opt_flag 
    .lex "%args", $P101 
    .lex "$mo", $P102 
    .lex "self", _lex_param_0 
    .lex "$how", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$repr", _lex_param_3 
    if haz_param_3, default188
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_2, $P5006
  default188:
    if haz_param_4, default189
    nqp_get_sc_object $P5007, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_3, $P5007
  default189:
    new $P5001, 'Hash'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
    root_new $P103, ['parrot';'Continuation']
    set_label $P103, lexotic_182
    .lex "RETURN", $P103
    defined $I5001, _lex_param_2
    unless $I5001 goto if101_end185 
.annotate 'line', 393
    set $P101["name"], _lex_param_2
  if101_end185:
    defined $I5002, _lex_param_3
    unless $I5002 goto if102_end187 
.annotate 'line', 394
    set $P101["repr"], _lex_param_3
  if102_end187:
.annotate 'line', 395
    $P5003 = _lex_param_1."new_type"($P101 :flat :named)
    set $P102, $P5003
.annotate 'line', 396
    nqp_decontainerize $P5004, _lex_param_0
    $P5004."add_object"($P102)
    $P5005 = "RETURN"($P102)
    goto lexotic_183
  lexotic_182:
    .get_results ($P5005)
  lexotic_183:
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_add_attribute" :subid("cuid_19_1367388600.55005") :anon :lex :outer("cuid_377_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 407
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 
    .lex "$attr", $P101 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$meta_attr", _lex_param_2 
    .lex "%lit_args", _lex_param_3 
    .lex "%obj_args", _lex_param_4 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
.annotate 'line', 408
    $P5002 = _lex_param_2."new"(_lex_param_3 :flat :named, _lex_param_4 :flat :named)
    set $P101, $P5002
.annotate 'line', 409
    get_how $P5003, _lex_param_1
    $P5003."add_attribute"(_lex_param_1, $P101)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_add_method" :subid("cuid_20_1367388600.55005") :anon :lex :outer("cuid_377_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 414
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$meta_method_name", _lex_param_2 
    .lex "$name", _lex_param_3 
    .lex "$code", _lex_param_4 
.annotate 'line', 415
    get_how $P5001, _lex_param_1
    set $S5001, _lex_param_2
    $P5002 = $P5001.$S5001(_lex_param_1, _lex_param_3, _lex_param_4)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "set_routine_signature" :subid("cuid_21_1367388600.55005") :anon :lex :outer("cuid_377_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 419
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "$sig_type", $P101 
    .lex "$code_type", $P102 
    .lex "$sig_obj", $P103 
    .lex "self", _lex_param_0 
    .lex "$code_obj", _lex_param_1 
    .lex "$types", _lex_param_2 
    .lex "$definednesses", _lex_param_3 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P103, $P5003
.annotate 'line', 420
    nqp_decontainerize $P5004, _lex_param_0
    new $P5005, 'ResizablePMCArray'
    box $P5006, "NQPSignature"
    push $P5005, $P5006
    $P5007 = $P5004."find_sym"($P5005)
    set $P101, $P5007
.annotate 'line', 421
    nqp_decontainerize $P5008, _lex_param_0
    new $P5009, 'ResizablePMCArray'
    box $P5010, "NQPRoutine"
    push $P5009, $P5010
    $P5011 = $P5008."find_sym"($P5009)
    set $P102, $P5011
    repr_instance_of $P5012, $P101
    set $P103, $P5012
.annotate 'line', 424
    $P5013 = "&compilee_list"(_lex_param_2)
    setattribute $P103, $P101, "$!types", $P5013
.annotate 'line', 426
    $P5014 = "&compilee_list"(_lex_param_3)
    setattribute $P103, $P101, "$!definednesses", $P5014
    setattribute _lex_param_1, $P102, "$!signature", $P103
    .return ($P103) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_set_body_block" :subid("cuid_22_1367388600.55005") :anon :lex :outer("cuid_377_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 431
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$body_code_obj", $P101 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$body_past", _lex_param_2 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
.annotate 'line', 433
    nqp_decontainerize $P5002, _lex_param_0
    $P5003 = _lex_param_2."name"()
    $P5004 = $P5002."create_code"(_lex_param_2, $P5003, 0)
    set $P101, $P5004
.annotate 'line', 436
    get_how $P5005, _lex_param_1
    $P5006 = $P5005."set_body_block"(_lex_param_1, $P101)
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_add_parent_or_role" :subid("cuid_23_1367388600.55005") :anon :lex :outer("cuid_377_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 440
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$meta_method_name", _lex_param_2 
    .lex "$to_add", _lex_param_3 
.annotate 'line', 441
    get_how $P5001, _lex_param_1
    set $S5001, _lex_param_2
    $P5002 = $P5001.$S5001(_lex_param_1, _lex_param_3)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_add_parrot_vtable_handler_mapping" :subid("cuid_24_1367388600.55005") :anon :lex :outer("cuid_377_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 444
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$att_name", _lex_param_3 
.annotate 'line', 445
    get_how $P5001, _lex_param_1
    $P5002 = $P5001."add_parrot_vtable_handler_mapping"(_lex_param_1, _lex_param_2, _lex_param_3)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_compose" :subid("cuid_25_1367388600.55005") :anon :lex :outer("cuid_377_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 449
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
.annotate 'line', 450
    get_how $P5001, _lex_param_1
    $P5002 = $P5001."compose"(_lex_param_1)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "run_begin_block" :subid("cuid_26_1367388600.55005") :anon :lex :outer("cuid_377_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 454
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5030 = 'cuid_389_1367388600.55005' 
    capture_lex $P5030 
    .lex "$wrapper", $P101 
    .lex "%seen", $P102 
    .lex "$i", $P103 
    .lex "$code", $P104 
    .lex "$old_global", $P105 
    .lex "self", _lex_param_0 
    .lex "$past", _lex_param_1 
    .local pmc fb_tmp_36 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    new $P5002, 'Hash'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P105, $P5005
    root_new $P106, ['parrot';'Continuation']
    set_label $P106, lexotic_190
    .lex "RETURN", $P106
.annotate 'line', 456
    nqp_get_sc_object $P5006, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 103
.annotate 'line', 457
    nqp_get_sc_object $P5007, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 93
    $P5008 = $P5007."new"()
    $P5009 = $P5006."new"($P5008, _lex_param_1)
    set $P101, $P5009
    nqp_decontainerize $P5010, _lex_param_0
    nqp_get_sc_object $P5011, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 3
    repr_get_attr_obj $P5012, $P5010, $P5011, "@!BLOCKS"
    set $N5001, $P5012
    box $P5013, $N5001
    set $P103, $P5013
  while103_test192:
    set $N5002, $P103
    set $N5003, 0
    isgt $I5001, $N5002, $N5003
    box $P5017, $I5001
    set $P5016, $P5017
    unless $I5001 goto while103_done196 
  while103_redo194:
    .const 'Sub' $P5014 = 'cuid_389_1367388600.55005' 
    capture_lex $P5014
    $P5015 = $P5014()
    set $P5016, $P5015
    goto while103_test192 
  while103_done196:
.annotate 'line', 480
    nqp_decontainerize $P5018, _lex_param_0
    $P5019 = $P5018."create_code"($P101, "BEGIN block", 0)
    set $P104, $P5019
    get_hll_global $P5020, "GLOBAL"
    set $P105, $P5020
    find_dynamic_lex $P5021, "$*GLOBALish"
    unless_null $P5021, fallback218
    nqp_get_sc_object $P5023, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5022, $P5023
    set fb_tmp_36, $P5022
    repr_defined $I5002, fb_tmp_36
    unless $I5002 goto if116_else219 
    set $P5024, fb_tmp_36["$GLOBALish"]
    set $P5026, $P5024
    goto if116_end220
  if116_else219:
    null $P5025
    set $P5026, $P5025
  if116_end220:
    unless_null $P5026, vivi_117221
    nqp_get_sc_object $P5027, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5026, $P5027
  vivi_117221:
    unless_null $P5026, vivi_118222
    die "Contextual $*GLOBALish not found"
    box $P5028, "Contextual $*GLOBALish not found"
    set $P5026, $P5028
  vivi_118222:
    set $P5021, $P5026
  fallback218:
    set_hll_global "GLOBAL", $P5021
.annotate 'line', 483
    $P104()
    set_hll_global "GLOBAL", $P105
.annotate 'line', 488
    $P101."shift"()
    $P5029 = "RETURN"($P101)
    goto lexotic_191
  lexotic_190:
    .get_results ($P5029)
  lexotic_191:
    .return ($P5029) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_389_1367388600.55005") :anon :lex :outer("cuid_26_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 462
    .const 'Sub' $P5019 = 'cuid_388_1367388600.55005' 
    capture_lex $P5019 
    .lex "%symbols", $P101 
    .local pmc fb_tmp_32 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $P5002, "$i"
    set $N5002, $P5002
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$i", $P5003
.annotate 'line', 464
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    nqp_get_sc_object $P5006, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 3
    repr_get_attr_obj $P5007, $P5004, $P5006, "@!BLOCKS"
    set fb_tmp_32, $P5007
    repr_defined $I5001, fb_tmp_32
    unless $I5001 goto if104_else197 
    find_lex $P5009, "$i"
    set $I5002, $P5009
    set $P5008, fb_tmp_32[$I5002]
    set $P5011, $P5008
    goto if104_end198
  if104_else197:
    null $P5010
    set $P5011, $P5010
  if104_end198:
    unless_null $P5011, vivi_105199
    nqp_get_sc_object $P5012, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5011, $P5012
  vivi_105199:
    $P5013 = $P5011."symtable"()
    set $P101, $P5013
    set $P5014, $P101
    iter $P5016, $P101
  for_next215:
    unless $P5016, for_done217
    shift $P5018, $P5016
  for_redo216:
    .const 'Sub' $P5017 = 'cuid_388_1367388600.55005' 
    capture_lex $P5017
    $P5014 = $P5017($P5018)
    goto for_next215
  for_done217:
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_388_1367388600.55005") :anon :lex :outer("cuid_389_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 465
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_33 
    .local pmc fb_tmp_34 
    .local pmc fb_tmp_35 
    find_lex $P5001, "%seen"
    set fb_tmp_33, $P5001
    repr_defined $I5002, fb_tmp_33
    unless $I5002 goto if108_else204 
.annotate 'line', 466
    $P5003 = _lex_param_0."key"()
    set $S5001, $P5003
    set $P5002, fb_tmp_33[$S5001]
    set $P5005, $P5002
    goto if108_end205
  if108_else204:
    null $P5004
    set $P5005, $P5004
  if108_end205:
    unless_null $P5005, vivi_109206
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5005, $P5006
  vivi_109206:
    isfalse $I5001, $P5005
    set $I5004, $I5001
    unless $I5001 goto if107_end203 
    $P5007 = _lex_param_0."value"()
    exists $I5003, $P5007["value"]
    set $I5004, $I5003
  if107_end203:
    box $P5032, $I5004
    set $P5031, $P5032
    unless $I5004 goto if106_end201 
    new $P5026, 'ExceptionHandler'
    set_label $P5026, catch_handler_115214
    $P5026.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5026
.annotate 'line', 467
.annotate 'line', 468
    find_lex $P5008, "$wrapper"
    set fb_tmp_34, $P5008
    repr_defined $I5005, fb_tmp_34
    unless $I5005 goto if110_else207 
    set $P5009, fb_tmp_34[0]
    set $P5011, $P5009
    goto if110_end208
  if110_else207:
    null $P5010
    set $P5011, $P5010
  if110_end208:
    unless_null $P5011, vivi_111209
    nqp_get_sc_object $P5012, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5011, $P5012
  vivi_111209:
    nqp_get_sc_object $P5013, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 470
    nqp_get_sc_object $P5014, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5015 = _lex_param_0."key"()
    $P5016 = $P5014."new"($P5015 :named("name"), "lexical" :named("scope"), "var" :named("isdecl"))
.annotate 'line', 471
    nqp_get_sc_object $P5017, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 61
    $P5018 = _lex_param_0."value"()
    set fb_tmp_35, $P5018
    repr_defined $I5006, fb_tmp_35
    unless $I5006 goto if112_else210 
    set $P5019, fb_tmp_35["value"]
    set $P5021, $P5019
    goto if112_end211
  if112_else210:
    null $P5020
    set $P5021, $P5020
  if112_end211:
    unless_null $P5021, vivi_113212
    nqp_get_sc_object $P5022, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5021, $P5022
  vivi_113212:
    $P5023 = $P5017."new"($P5021 :named("value"))
    $P5024 = $P5013."new"($P5016, $P5023, "bind" :named("op"))
    $P5025 = $P5011."push"($P5024)
    set $P5027, $P5025
    pop_eh 
    goto skip_handler_114213
  catch_handler_115214:
    .get_results ($P5026) 
    set $I10001, 1
    set $P5026["handled"], $I10001
    nqp_get_sc_object $P10001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    finalize $P5026
    pop_upto_eh $P5026
    pop_eh 
    set $P5027, $P10001
    goto skip_handler_114213
  skip_handler_114213:
    find_lex $P5028, "%seen"
.annotate 'line', 474
    $P5029 = _lex_param_0."key"()
    set $S5002, $P5029
    box $P5030, 1
    set $P5028[$S5002], $P5030
    set $P5031, $P5030
  if106_end201:
    .return ($P5031) 
.end
.HLL "nqp"
.namespace []
.sub "libs" :subid("cuid_27_1367388600.55005") :anon :lex :outer("cuid_377_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 493
    .param pmc _lex_param_0 
    .const 'Sub' $P5050 = 'cuid_390_1367388600.55005' 
    capture_lex $P5050 
    .lex "@loadlibs", $P101 
    .lex "self", _lex_param_0 
    .local pmc fb_tmp_37 
    .local pmc fb_tmp_38 
    .local pmc fb_tmp_39 
    .local pmc pkg_viv_tmp_6 
    .local pmc fb_tmp_40 
    .local pmc fb_tmp_41 
    .local pmc fb_tmp_42 
    .local pmc pkg_viv_tmp_7 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    new $P5002, 'ResizablePMCArray'
    box $P5003, "nqp_group"
    push $P5002, $P5003
    box $P5004, "nqp_ops"
    push $P5002, $P5004
    box $P5005, "nqp_bigint_ops"
    push $P5002, $P5005
    box $P5006, "trans_ops"
    push $P5002, $P5006
    box $P5007, "io_ops"
    push $P5002, $P5007
    set $P101, $P5002
    find_dynamic_lex $P5008, "%*COMPILING"
    unless_null $P5008, fallback229
    nqp_get_sc_object $P5010, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5009, $P5010
    set pkg_viv_tmp_6, $P5009
    set fb_tmp_39, pkg_viv_tmp_6
    repr_defined $I5003, fb_tmp_39
    unless $I5003 goto if122_else230 
    set $P5011, fb_tmp_39["%COMPILING"]
    set $P5013, $P5011
    goto if122_end231
  if122_else230:
    null $P5012
    set $P5013, $P5012
  if122_end231:
    unless_null $P5013, vivi_123232
    new $P5014, 'Hash'
    set pkg_viv_tmp_6["%COMPILING"], $P5014
    set $P5013, $P5014
  vivi_123232:
    unless_null $P5013, vivi_124233
    die "Contextual %*COMPILING not found"
    box $P5015, "Contextual %*COMPILING not found"
    set $P5013, $P5015
  vivi_124233:
    set $P5008, $P5013
  fallback229:
    set fb_tmp_38, $P5008
    repr_defined $I5002, fb_tmp_38
    unless $I5002 goto if121_else227 
    set $P5016, fb_tmp_38["%?OPTIONS"]
    set $P5018, $P5016
    goto if121_end228
  if121_else227:
    null $P5017
    set $P5018, $P5017
  if121_end228:
    unless_null $P5018, vivi_125234
    nqp_get_sc_object $P5019, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5018, $P5019
  vivi_125234:
    set fb_tmp_37, $P5018
    repr_defined $I5001, fb_tmp_37
    unless $I5001 goto if120_else225 
    set $P5020, fb_tmp_37["vmlibs"]
    set $P5022, $P5020
    goto if120_end226
  if120_else225:
    null $P5021
    set $P5022, $P5021
  if120_end226:
    unless_null $P5022, vivi_126235
    nqp_get_sc_object $P5023, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5022, $P5023
  vivi_126235:
    unless $P5022 goto if119_end224 
.annotate 'line', 496
    find_dynamic_lex $P5028, "%*COMPILING"
    unless_null $P5028, fallback240
    nqp_get_sc_object $P5030, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5029, $P5030
    set pkg_viv_tmp_7, $P5029
    set fb_tmp_42, pkg_viv_tmp_7
    repr_defined $I5006, fb_tmp_42
    unless $I5006 goto if129_else241 
    set $P5031, fb_tmp_42["%COMPILING"]
    set $P5033, $P5031
    goto if129_end242
  if129_else241:
    null $P5032
    set $P5033, $P5032
  if129_end242:
    unless_null $P5033, vivi_130243
    new $P5034, 'Hash'
    set pkg_viv_tmp_7["%COMPILING"], $P5034
    set $P5033, $P5034
  vivi_130243:
    unless_null $P5033, vivi_131244
    die "Contextual %*COMPILING not found"
    box $P5035, "Contextual %*COMPILING not found"
    set $P5033, $P5035
  vivi_131244:
    set $P5028, $P5033
  fallback240:
    set fb_tmp_41, $P5028
    repr_defined $I5005, fb_tmp_41
    unless $I5005 goto if128_else238 
    set $P5036, fb_tmp_41["%?OPTIONS"]
    set $P5038, $P5036
    goto if128_end239
  if128_else238:
    null $P5037
    set $P5038, $P5037
  if128_end239:
    unless_null $P5038, vivi_132245
    nqp_get_sc_object $P5039, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5038, $P5039
  vivi_132245:
    set fb_tmp_40, $P5038
    repr_defined $I5004, fb_tmp_40
    unless $I5004 goto if127_else236 
    set $P5040, fb_tmp_40["vmlibs"]
    set $P5042, $P5040
    goto if127_end237
  if127_else236:
    null $P5041
    set $P5042, $P5041
  if127_end237:
    unless_null $P5042, vivi_133246
    nqp_get_sc_object $P5043, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5042, $P5043
  vivi_133246:
    set $S5001, $P5042
    split $P5027, ",", $S5001
    set $P5024, $P5027
    iter $P5026, $P5027
  for_next247:
    unless $P5026, for_done249
    shift $P5045, $P5026
  for_redo248:
    .const 'Sub' $P5044 = 'cuid_390_1367388600.55005' 
    capture_lex $P5044
    $P5024 = $P5044($P5045)
    goto for_next247
  for_done249:
  if119_end224:
.annotate 'line', 501
    nqp_get_sc_object $P5046, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 89
.annotate 'line', 503
    nqp_get_sc_object $P5047, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    $P5048 = $P5047."new"("null" :named("op"))
    $P5049 = $P5046."new"($P101 :named("loadlibs"), $P5048 :named("jvm"))
    .return ($P5049) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_390_1367388600.55005") :anon :lex :outer("cuid_27_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 497
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 498
    find_lex $P5001, "@loadlibs"
    $P5002 = $P5001."push"(_lex_param_0)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "add_initializations" :subid("cuid_28_1367388600.55005") :anon :lex :outer("cuid_377_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 507
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
.annotate 'line', 508
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 89
.annotate 'line', 509
    nqp_get_sc_object $P5003, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 93
.annotate 'line', 510
    nqp_get_sc_object $P5004, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 89
    $P5005 = $P5004."new"("nqp_dynop_setup v" :named("pirop"))
.annotate 'line', 511
    nqp_get_sc_object $P5006, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 89
    $P5007 = $P5006."new"("nqp_bigint_setup v" :named("pirop"))
.annotate 'line', 512
    nqp_get_sc_object $P5008, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 514
    nqp_get_sc_object $P5009, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 89
    $P5010 = $P5009."new"("getinterp P" :named("pirop"))
.annotate 'line', 515
    nqp_get_sc_object $P5011, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 89
    nqp_get_sc_object $P5012, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 52
    $P5013 = $P5012."new"("LexPad" :named("value"))
    $P5014 = $P5011."new"($P5013, "get_class Ps" :named("pirop"))
.annotate 'line', 516
    nqp_get_sc_object $P5015, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 89
    nqp_get_sc_object $P5016, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 52
    $P5017 = $P5016."new"("NQPLexPad" :named("value"))
    $P5018 = $P5015."new"($P5017, "get_class Ps" :named("pirop"))
    $P5019 = $P5008."new"($P5010, $P5014, $P5018, "callmethod" :named("op"), "hll_map" :named("name"))
    $P5020 = $P5003."new"($P5005, $P5007, $P5019)
.annotate 'line', 518
    nqp_get_sc_object $P5021, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    $P5022 = $P5021."new"("null" :named("op"))
    $P5023 = $P5002."new"($P5020 :named("parrot"), $P5022 :named("jvm"))
    $P5024 = $P5001."add_load_dependency_task"($P5023 :named("deserialize_past"))
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "cleanup" :subid("cuid_29_1367388600.55005") :anon :lex :outer("cuid_377_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 523
    .param pmc _lex_param_0 
    .const 'Sub' $P5009 = 'cuid_391_1367388600.55005' 
    capture_lex $P5009 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5004, _lex_param_0
    nqp_get_sc_object $P5005, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 3
    repr_get_attr_obj $P5006, $P5004, $P5005, "@!clearup_tasks"
    set $P5001, $P5006
    iter $P5003, $P5006
  for_next250:
    unless $P5003, for_done252
    shift $P5008, $P5003
  for_redo251:
    .const 'Sub' $P5007 = 'cuid_391_1367388600.55005' 
    capture_lex $P5007
    $P5001 = $P5007($P5008)
    goto for_next250
  for_done252:
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_391_1367388600.55005") :anon :lex :outer("cuid_29_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 524
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    $P5001 = _lex_param_0()
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "is_lexical" :subid("cuid_30_1367388600.55005") :anon :lex :outer("cuid_377_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 534
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
.annotate 'line', 535
    nqp_decontainerize $P5001, _lex_param_0
    $P5002 = $P5001."is_scope"(_lex_param_1, "lexical")
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "is_package" :subid("cuid_31_1367388600.55005") :anon :lex :outer("cuid_377_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 540
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
.annotate 'line', 541
    nqp_decontainerize $P5001, _lex_param_0
    $P5002 = $P5001."is_scope"(_lex_param_1, "package")
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "is_scope" :subid("cuid_32_1367388600.55005") :anon :lex :outer("cuid_377_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 546
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .const 'Sub' $P5011 = 'cuid_392_1367388600.55005' 
    capture_lex $P5011 
    .lex "$i", $P101 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
    .lex "$wanted_scope", _lex_param_2 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_253
    .lex "RETURN", $P102
    nqp_decontainerize $P5002, _lex_param_0
    nqp_get_sc_object $P5003, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 3
    repr_get_attr_obj $P5004, $P5002, $P5003, "@!BLOCKS"
    set $N5001, $P5004
    box $P5005, $N5001
    set $P101, $P5005
  while134_test255:
    set $N5002, $P101
    set $N5003, 0
    isgt $I5001, $N5002, $N5003
    box $P5009, $I5001
    set $P5008, $P5009
    unless $I5001 goto while134_done259 
  while134_redo257:
    .const 'Sub' $P5006 = 'cuid_392_1367388600.55005' 
    capture_lex $P5006
    $P5007 = $P5006()
    set $P5008, $P5007
    goto while134_test255 
  while134_done259:
    box $P5010, 0
    goto lexotic_254
  lexotic_253:
    .get_results ($P5010)
  lexotic_254:
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_392_1367388600.55005") :anon :lex :outer("cuid_32_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 548
    .lex "%sym", $P101 
    .local pmc fb_tmp_43 
    .local pmc fb_tmp_44 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $P5002, "$i"
    set $N5002, $P5002
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$i", $P5003
.annotate 'line', 550
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    nqp_get_sc_object $P5006, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 3
    repr_get_attr_obj $P5007, $P5004, $P5006, "@!BLOCKS"
    set fb_tmp_43, $P5007
    repr_defined $I5001, fb_tmp_43
    unless $I5001 goto if135_else260 
    find_lex $P5009, "$i"
    set $I5002, $P5009
    set $P5008, fb_tmp_43[$I5002]
    set $P5011, $P5008
    goto if135_end261
  if135_else260:
    null $P5010
    set $P5011, $P5010
  if135_end261:
    unless_null $P5011, vivi_136262
    nqp_get_sc_object $P5012, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5011, $P5012
  vivi_136262:
    find_lex $P5013, "$name"
    $P5014 = $P5011."symbol"($P5013)
    set $P101, $P5014
    set $N5004, $P101
    box $P5022, $N5004
    set $P5021, $P5022
    unless $N5004 goto if137_end264 
.annotate 'line', 551
    set fb_tmp_44, $P101
    repr_defined $I5004, fb_tmp_44
    unless $I5004 goto if138_else265 
    set $P5015, fb_tmp_44["scope"]
    set $P5017, $P5015
    goto if138_end266
  if138_else265:
    null $P5016
    set $P5017, $P5016
  if138_end266:
    unless_null $P5017, vivi_139267
    nqp_get_sc_object $P5018, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5017, $P5018
  vivi_139267:
    set $S5001, $P5017
    find_lex $P5019, "$wanted_scope"
    set $S5002, $P5019
    iseq $I5003, $S5001, $S5002
    $P5020 = "RETURN"($I5003)
    set $P5021, $P5020
  if137_end264:
    .return ($P5021) 
.end
.HLL "nqp"
.namespace []
.sub "known_sym" :subid("cuid_33_1367388600.55005") :anon :lex :outer("cuid_377_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 559
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$known", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .lex "@name", _lex_param_2 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    box $P5002, 0
    set $P101, $P5002
    new $P5005, 'ExceptionHandler'
    set_label $P5005, catch_handler_141269
    $P5005.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5005
.annotate 'line', 561
.annotate 'line', 562
    nqp_decontainerize $P5003, _lex_param_0
    $P5003."find_sym"(_lex_param_2)
    box $P5004, 1
    set $P101, $P5004
    set $P5006, $P101
    pop_eh 
    goto skip_handler_140268
  catch_handler_141269:
    .get_results ($P5005) 
    set $I10001, 1
    set $P5005["handled"], $I10001
    nqp_get_sc_object $P10001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    finalize $P5005
    pop_upto_eh $P5005
    pop_eh 
    set $P5006, $P10001
    goto skip_handler_140268
  skip_handler_140268:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "find_sym" :subid("cuid_34_1367388600.55005") :anon :lex :outer("cuid_377_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 571
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5020 = 'cuid_394_1367388600.55005' 
    capture_lex $P5020 
    .const 'Sub' $P5020 = 'cuid_396_1367388600.55005' 
    capture_lex $P5020 
    .const 'Sub' $P5020 = 'cuid_397_1367388600.55005' 
    capture_lex $P5020 
    .lex "$result", $P101 
    .lex "self", _lex_param_0 
    .lex "@name", _lex_param_1 
    .local pmc fb_tmp_48 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_270
    .lex "RETURN", $P102
    set $N5001, _lex_param_1
    if $N5001 goto unless142_end273 
.annotate 'line', 573
    box $P5002, "Cannot look up empty name"
    die $P5002
  unless142_end273:
    set $N5002, _lex_param_1
    set $N5003, 1
    iseq $I5001, $N5002, $N5003
    unless $I5001 goto if143_end275 
    .const 'Sub' $P5003 = 'cuid_394_1367388600.55005' 
    capture_lex $P5003
    $P5004 = $P5003()
  if143_end275:
    find_dynamic_lex $P5005, "$*GLOBALish"
    unless_null $P5005, fallback294
    nqp_get_sc_object $P5007, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5006, $P5007
    set fb_tmp_48, $P5006
    repr_defined $I5002, fb_tmp_48
    unless $I5002 goto if153_else295 
    set $P5008, fb_tmp_48["$GLOBALish"]
    set $P5010, $P5008
    goto if153_end296
  if153_else295:
    null $P5009
    set $P5010, $P5009
  if153_end296:
    unless_null $P5010, vivi_154297
    nqp_get_sc_object $P5011, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5010, $P5011
  vivi_154297:
    unless_null $P5010, vivi_155298
    die "Contextual $*GLOBALish not found"
    box $P5012, "Contextual $*GLOBALish not found"
    set $P5010, $P5012
  vivi_155298:
    set $P5005, $P5010
  fallback294:
    set $P101, $P5005
    set $N5004, _lex_param_1
    set $N5005, 2
    isge $I5003, $N5004, $N5005
    unless $I5003 goto if156_end300 
    .const 'Sub' $P5013 = 'cuid_396_1367388600.55005' 
    capture_lex $P5013
    $P5014 = $P5013()
  if156_end300:
    set $P5015, _lex_param_1
    iter $P5017, _lex_param_1
  for_next324:
    unless $P5017, for_done326
    shift $P5019, $P5017
  for_redo325:
    .const 'Sub' $P5018 = 'cuid_397_1367388600.55005' 
    capture_lex $P5018
    $P5015 = $P5018($P5019)
    goto for_next324
  for_done326:
    goto lexotic_271
  lexotic_270:
    .get_results ($P101)
  lexotic_271:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_394_1367388600.55005") :anon :lex :outer("cuid_34_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 577
    .const 'Sub' $P5017 = 'cuid_393_1367388600.55005' 
    capture_lex $P5017 
    .lex "$final_name", $P101 
    .lex "$i", $P102 
    .local pmc fb_tmp_45 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
    find_lex $P5003, "@name"
    set fb_tmp_45, $P5003
    repr_defined $I5001, fb_tmp_45
    unless $I5001 goto if144_else276 
    set $P5004, fb_tmp_45[0]
    set $P5006, $P5004
    goto if144_end277
  if144_else276:
    null $P5005
    set $P5006, $P5005
  if144_end277:
    unless_null $P5006, vivi_145278
    nqp_get_sc_object $P5007, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5006, $P5007
  vivi_145278:
    set $P101, $P5006
    find_lex $P5009, "self"
    nqp_decontainerize $P5008, $P5009
    nqp_get_sc_object $P5010, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 3
    repr_get_attr_obj $P5011, $P5008, $P5010, "@!BLOCKS"
    set $N5001, $P5011
    box $P5012, $N5001
    set $P102, $P5012
  while146_test279:
    set $N5002, $P102
    set $N5003, 0
    isgt $I5002, $N5002, $N5003
    box $P5016, $I5002
    set $P5015, $P5016
    unless $I5002 goto while146_done283 
  while146_redo281:
    .const 'Sub' $P5013 = 'cuid_393_1367388600.55005' 
    capture_lex $P5013
    $P5014 = $P5013()
    set $P5015, $P5014
    goto while146_test279 
  while146_done283:
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_393_1367388600.55005") :anon :lex :outer("cuid_394_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 580
    .lex "%sym", $P101 
    .local pmc fb_tmp_46 
    .local pmc fb_tmp_47 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $P5002, "$i"
    set $N5002, $P5002
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$i", $P5003
.annotate 'line', 582
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    nqp_get_sc_object $P5006, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 3
    repr_get_attr_obj $P5007, $P5004, $P5006, "@!BLOCKS"
    set fb_tmp_46, $P5007
    repr_defined $I5001, fb_tmp_46
    unless $I5001 goto if147_else284 
    find_lex $P5009, "$i"
    set $I5002, $P5009
    set $P5008, fb_tmp_46[$I5002]
    set $P5011, $P5008
    goto if147_end285
  if147_else284:
    null $P5010
    set $P5011, $P5010
  if147_end285:
    unless_null $P5011, vivi_148286
    nqp_get_sc_object $P5012, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5011, $P5012
  vivi_148286:
    find_lex $P5013, "$final_name"
    $P5014 = $P5011."symbol"($P5013)
    set $P101, $P5014
    set $N5004, $P101
    box $P5024, $N5004
    set $P5023, $P5024
    unless $N5004 goto if149_end288 
.annotate 'line', 583
    exists $I5003, $P101["value"]
    unless $I5003 goto if150_else289 
.annotate 'line', 584
    set fb_tmp_47, $P101
    repr_defined $I5004, fb_tmp_47
    unless $I5004 goto if151_else291 
    set $P5015, fb_tmp_47["value"]
    set $P5017, $P5015
    goto if151_end292
  if151_else291:
    null $P5016
    set $P5017, $P5016
  if151_end292:
    unless_null $P5017, vivi_152293
    nqp_get_sc_object $P5018, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5017, $P5018
  vivi_152293:
    $P5019 = "RETURN"($P5017)
    set $P5022, $P5019
    goto if150_end290
  if150_else289:
.annotate 'line', 587
    find_lex $P5020, "$final_name"
    set $S5002, $P5020
    concat $S5001, "No compile-time value for ", $S5002
    box $P5021, $S5001
    die $P5021
    set $P5022, $P5021
  if150_end290:
    set $P5023, $P5022
  if149_end288:
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_396_1367388600.55005") :anon :lex :outer("cuid_34_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 598
    .const 'Sub' $P5017 = 'cuid_395_1367388600.55005' 
    capture_lex $P5017 
    .lex "$first", $P101 
    .lex "$i", $P102 
    .local pmc fb_tmp_49 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
    find_lex $P5003, "@name"
    set fb_tmp_49, $P5003
    repr_defined $I5001, fb_tmp_49
    unless $I5001 goto if157_else301 
    set $P5004, fb_tmp_49[0]
    set $P5006, $P5004
    goto if157_end302
  if157_else301:
    null $P5005
    set $P5006, $P5005
  if157_end302:
    unless_null $P5006, vivi_158303
    nqp_get_sc_object $P5007, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5006, $P5007
  vivi_158303:
    set $P101, $P5006
    find_lex $P5009, "self"
    nqp_decontainerize $P5008, $P5009
    nqp_get_sc_object $P5010, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 3
    repr_get_attr_obj $P5011, $P5008, $P5010, "@!BLOCKS"
    set $N5001, $P5011
    box $P5012, $N5001
    set $P102, $P5012
  while159_test304:
    set $N5002, $P102
    set $N5003, 0
    isgt $I5002, $N5002, $N5003
    box $P5016, $I5002
    set $P5015, $P5016
    unless $I5002 goto while159_done308 
  while159_redo306:
    .const 'Sub' $P5013 = 'cuid_395_1367388600.55005' 
    capture_lex $P5013
    $P5014 = $P5013()
    set $P5015, $P5014
    goto while159_test304 
  while159_done308:
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_395_1367388600.55005") :anon :lex :outer("cuid_396_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 601
    .lex "%sym", $P101 
    .local pmc fb_tmp_50 
    .local pmc fb_tmp_51 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $P5002, "$i"
    set $N5002, $P5002
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$i", $P5003
.annotate 'line', 603
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    nqp_get_sc_object $P5006, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 3
    repr_get_attr_obj $P5007, $P5004, $P5006, "@!BLOCKS"
    set fb_tmp_50, $P5007
    repr_defined $I5001, fb_tmp_50
    unless $I5001 goto if160_else309 
    find_lex $P5009, "$i"
    set $I5002, $P5009
    set $P5008, fb_tmp_50[$I5002]
    set $P5011, $P5008
    goto if160_end310
  if160_else309:
    null $P5010
    set $P5011, $P5010
  if160_end310:
    unless_null $P5011, vivi_161311
    nqp_get_sc_object $P5012, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5011, $P5012
  vivi_161311:
    find_lex $P5013, "$first"
    $P5014 = $P5011."symbol"($P5013)
    set $P101, $P5014
    set $N5004, $P101
    box $P5025, $N5004
    set $P5024, $P5025
    unless $N5004 goto if162_end313 
.annotate 'line', 604
    exists $I5003, $P101["value"]
    unless $I5003 goto if163_else314 
.annotate 'line', 605
    set fb_tmp_51, $P101
    repr_defined $I5004, fb_tmp_51
    unless $I5004 goto if164_else316 
    set $P5015, fb_tmp_51["value"]
    set $P5017, $P5015
    goto if164_end317
  if164_else316:
    null $P5016
    set $P5017, $P5016
  if164_end317:
    unless_null $P5017, vivi_165318
    nqp_get_sc_object $P5018, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5017, $P5018
  vivi_165318:
    store_lex "$result", $P5017
.annotate 'line', 607
    find_lex $P5019, "@name"
    $P5019."shift"()
    box $P5020, 0
    store_lex "$i", $P5020
    set $P5023, $P5020
    goto if163_end315
  if163_else314:
.annotate 'line', 610
    find_lex $P5021, "$first"
    set $S5002, $P5021
    concat $S5001, "No compile-time value for ", $S5002
    box $P5022, $S5001
    die $P5022
    set $P5023, $P5022
  if163_end315:
    set $P5024, $P5023
  if162_end313:
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_397_1367388600.55005") :anon :lex :outer("cuid_34_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 618
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_52 
    find_lex $P5002, "$result"
    get_who $P5001, $P5002
    set $S5001, _lex_param_0
    exists $I5001, $P5001[$S5001]
    unless $I5001 goto if166_else319 
.annotate 'line', 619
    find_lex $P5004, "$result"
    get_who $P5003, $P5004
    set fb_tmp_52, $P5003
    repr_defined $I5002, fb_tmp_52
    unless $I5002 goto if167_else321 
    set $S5002, _lex_param_0
    set $P5005, fb_tmp_52[$S5002]
    set $P5007, $P5005
    goto if167_end322
  if167_else321:
    null $P5006
    set $P5007, $P5006
  if167_end322:
    unless_null $P5007, vivi_168323
    nqp_get_sc_object $P5008, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5007, $P5008
  vivi_168323:
    store_lex "$result", $P5007
    set $P5012, $P5007
    goto if166_end320
  if166_else319:
.annotate 'line', 622
.annotate 'line', 624
    find_lex $P5009, "@name"
    $P5010 = "&join"("::", $P5009)
    set $S5004, $P5010
    concat $S5003, "Could not locate compile-time value for symbol ", $S5004
    box $P5011, $S5003
    die $P5011
    set $P5012, $P5011
  if166_end320:
    .return ($P5012) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_398_1367388600.55005") :anon :lex :outer("cuid_374_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 633
    .const 'Sub' $P5199 = 'cuid_35_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_36_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_37_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_38_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_39_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_40_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_41_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_43_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_45_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_46_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_47_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_49_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_50_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_51_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_52_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_53_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_54_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_55_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_56_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_57_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_58_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_59_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_60_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_61_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_62_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_63_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_64_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_65_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_67_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_68_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_69_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_70_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_71_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_72_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_73_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_74_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_75_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_76_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_77_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_78_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_79_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_80_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_81_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_82_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_83_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_84_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_85_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_86_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_87_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_88_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_89_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_90_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_93_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_94_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_95_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_96_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_97_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_98_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_99_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_100_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_101_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_102_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_103_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_104_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_105_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_106_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_107_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_108_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_109_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_110_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_111_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_112_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_113_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_114_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_115_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_116_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_117_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_118_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_119_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_120_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_121_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_122_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_123_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_124_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_125_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_126_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_127_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_128_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_129_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_131_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_132_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_133_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_134_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_135_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_136_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_137_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_138_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_139_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_140_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_141_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_142_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_143_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_144_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_145_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_146_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_147_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_148_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_149_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_150_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_151_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_152_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_153_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_154_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_155_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_156_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_157_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_158_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_159_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_160_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_161_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_162_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_163_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_164_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_165_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_166_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_167_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_168_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_169_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_170_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_171_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_172_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_173_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_174_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_175_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_176_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_177_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_178_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_179_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_180_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_181_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_182_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_183_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_184_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_185_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_186_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_187_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_188_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_189_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_190_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_191_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_192_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_193_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_194_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_195_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_196_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_197_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_198_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_199_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_200_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_201_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_202_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_203_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_204_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_205_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_206_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_207_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_208_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_209_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_210_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_211_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_212_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_213_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_214_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_215_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_216_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_217_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_218_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_219_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_220_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_221_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_223_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_225_1367388600.55005' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_227_1367388600.55005' 
    capture_lex $P5199 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
.annotate 'line', 1303
.annotate 'line', 1304
    nqp_get_sc_object $P5001, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 38
    $P5001."O"(":prec<y=>, :assoc<unary>", "%methodop")
.annotate 'line', 1305
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 38
    $P5002."O"(":prec<x=>, :assoc<unary>", "%autoincrement")
.annotate 'line', 1306
    nqp_get_sc_object $P5003, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 38
    $P5003."O"(":prec<w=>, :assoc<left>", "%exponentiation")
.annotate 'line', 1307
    nqp_get_sc_object $P5004, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 38
    $P5004."O"(":prec<v=>, :assoc<unary>", "%symbolic_unary")
.annotate 'line', 1308
    nqp_get_sc_object $P5005, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 38
    $P5005."O"(":prec<u=>, :assoc<left>", "%multiplicative")
.annotate 'line', 1309
    nqp_get_sc_object $P5006, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 38
    $P5006."O"(":prec<t=>, :assoc<left>", "%additive")
.annotate 'line', 1310
    nqp_get_sc_object $P5007, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 38
    $P5007."O"(":prec<r=>, :assoc<left>", "%concatenation")
.annotate 'line', 1311
    nqp_get_sc_object $P5008, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 38
    $P5008."O"(":prec<m=>, :assoc<left>", "%relational")
.annotate 'line', 1312
    nqp_get_sc_object $P5009, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 38
    $P5009."O"(":prec<l=>, :assoc<left>", "%tight_and")
.annotate 'line', 1313
    nqp_get_sc_object $P5010, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 38
    $P5010."O"(":prec<k=>, :assoc<left>", "%tight_or")
.annotate 'line', 1314
    nqp_get_sc_object $P5011, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 38
    $P5011."O"(":prec<j=>, :assoc<right>", "%conditional")
.annotate 'line', 1315
    nqp_get_sc_object $P5012, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 38
    $P5012."O"(":prec<i=>, :assoc<right>", "%assignment")
.annotate 'line', 1316
    nqp_get_sc_object $P5013, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 38
    $P5013."O"(":prec<g=>, :assoc<list>, :nextterm<nulltermish>", "%comma")
.annotate 'line', 1317
    nqp_get_sc_object $P5014, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 38
    $P5014."O"(":prec<f=>, :assoc<list>", "%list_infix")
.annotate 'line', 1318
    nqp_get_sc_object $P5015, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 38
    $P5015."O"(":prec<e=>, :assoc<unary>", "%list_prefix")
.annotate 'line', 633
    .const 'Sub' $P5016 = 'cuid_35_1367388600.55005' 
    capture_lex $P5016
    .const 'Sub' $P5017 = 'cuid_36_1367388600.55005' 
    capture_lex $P5017
    .const 'Sub' $P5018 = 'cuid_37_1367388600.55005' 
    capture_lex $P5018
    .const 'Sub' $P5019 = 'cuid_38_1367388600.55005' 
    capture_lex $P5019
    .const 'Sub' $P5020 = 'cuid_39_1367388600.55005' 
    capture_lex $P5020
    .const 'Sub' $P5021 = 'cuid_40_1367388600.55005' 
    capture_lex $P5021
    .const 'Sub' $P5022 = 'cuid_41_1367388600.55005' 
    capture_lex $P5022
    .const 'Sub' $P5023 = 'cuid_43_1367388600.55005' 
    capture_lex $P5023
    .const 'Sub' $P5024 = 'cuid_45_1367388600.55005' 
    capture_lex $P5024
    .const 'Sub' $P5025 = 'cuid_46_1367388600.55005' 
    capture_lex $P5025
    .const 'Sub' $P5026 = 'cuid_47_1367388600.55005' 
    capture_lex $P5026
    .const 'Sub' $P5027 = 'cuid_49_1367388600.55005' 
    capture_lex $P5027
    .const 'Sub' $P5028 = 'cuid_50_1367388600.55005' 
    capture_lex $P5028
    .const 'Sub' $P5029 = 'cuid_51_1367388600.55005' 
    capture_lex $P5029
    .const 'Sub' $P5030 = 'cuid_52_1367388600.55005' 
    capture_lex $P5030
    .const 'Sub' $P5031 = 'cuid_53_1367388600.55005' 
    capture_lex $P5031
    .const 'Sub' $P5032 = 'cuid_54_1367388600.55005' 
    capture_lex $P5032
    .const 'Sub' $P5033 = 'cuid_55_1367388600.55005' 
    capture_lex $P5033
    .const 'Sub' $P5034 = 'cuid_56_1367388600.55005' 
    capture_lex $P5034
    .const 'Sub' $P5035 = 'cuid_57_1367388600.55005' 
    capture_lex $P5035
    .const 'Sub' $P5036 = 'cuid_58_1367388600.55005' 
    capture_lex $P5036
    .const 'Sub' $P5037 = 'cuid_59_1367388600.55005' 
    capture_lex $P5037
    .const 'Sub' $P5038 = 'cuid_60_1367388600.55005' 
    capture_lex $P5038
    .const 'Sub' $P5039 = 'cuid_61_1367388600.55005' 
    capture_lex $P5039
    .const 'Sub' $P5040 = 'cuid_62_1367388600.55005' 
    capture_lex $P5040
    .const 'Sub' $P5041 = 'cuid_63_1367388600.55005' 
    capture_lex $P5041
    .const 'Sub' $P5042 = 'cuid_64_1367388600.55005' 
    capture_lex $P5042
    .const 'Sub' $P5043 = 'cuid_65_1367388600.55005' 
    capture_lex $P5043
    .const 'Sub' $P5044 = 'cuid_67_1367388600.55005' 
    capture_lex $P5044
    .const 'Sub' $P5045 = 'cuid_68_1367388600.55005' 
    capture_lex $P5045
    .const 'Sub' $P5046 = 'cuid_69_1367388600.55005' 
    capture_lex $P5046
    .const 'Sub' $P5047 = 'cuid_70_1367388600.55005' 
    capture_lex $P5047
    .const 'Sub' $P5048 = 'cuid_71_1367388600.55005' 
    capture_lex $P5048
    .const 'Sub' $P5049 = 'cuid_72_1367388600.55005' 
    capture_lex $P5049
    .const 'Sub' $P5050 = 'cuid_73_1367388600.55005' 
    capture_lex $P5050
    .const 'Sub' $P5051 = 'cuid_74_1367388600.55005' 
    capture_lex $P5051
    .const 'Sub' $P5052 = 'cuid_75_1367388600.55005' 
    capture_lex $P5052
    .const 'Sub' $P5053 = 'cuid_76_1367388600.55005' 
    capture_lex $P5053
    .const 'Sub' $P5054 = 'cuid_77_1367388600.55005' 
    capture_lex $P5054
    .const 'Sub' $P5055 = 'cuid_78_1367388600.55005' 
    capture_lex $P5055
    .const 'Sub' $P5056 = 'cuid_79_1367388600.55005' 
    capture_lex $P5056
    .const 'Sub' $P5057 = 'cuid_80_1367388600.55005' 
    capture_lex $P5057
    .const 'Sub' $P5058 = 'cuid_81_1367388600.55005' 
    capture_lex $P5058
    .const 'Sub' $P5059 = 'cuid_82_1367388600.55005' 
    capture_lex $P5059
    .const 'Sub' $P5060 = 'cuid_83_1367388600.55005' 
    capture_lex $P5060
    .const 'Sub' $P5061 = 'cuid_84_1367388600.55005' 
    capture_lex $P5061
    .const 'Sub' $P5062 = 'cuid_85_1367388600.55005' 
    capture_lex $P5062
    .const 'Sub' $P5063 = 'cuid_86_1367388600.55005' 
    capture_lex $P5063
    .const 'Sub' $P5064 = 'cuid_87_1367388600.55005' 
    capture_lex $P5064
    .const 'Sub' $P5065 = 'cuid_88_1367388600.55005' 
    capture_lex $P5065
    .const 'Sub' $P5066 = 'cuid_89_1367388600.55005' 
    capture_lex $P5066
    .const 'Sub' $P5067 = 'cuid_90_1367388600.55005' 
    capture_lex $P5067
    .const 'Sub' $P5068 = 'cuid_93_1367388600.55005' 
    capture_lex $P5068
    .const 'Sub' $P5069 = 'cuid_94_1367388600.55005' 
    capture_lex $P5069
    .const 'Sub' $P5070 = 'cuid_95_1367388600.55005' 
    capture_lex $P5070
    .const 'Sub' $P5071 = 'cuid_96_1367388600.55005' 
    capture_lex $P5071
    .const 'Sub' $P5072 = 'cuid_97_1367388600.55005' 
    capture_lex $P5072
    .const 'Sub' $P5073 = 'cuid_98_1367388600.55005' 
    capture_lex $P5073
    .const 'Sub' $P5074 = 'cuid_99_1367388600.55005' 
    capture_lex $P5074
    .const 'Sub' $P5075 = 'cuid_100_1367388600.55005' 
    capture_lex $P5075
    .const 'Sub' $P5076 = 'cuid_101_1367388600.55005' 
    capture_lex $P5076
    .const 'Sub' $P5077 = 'cuid_102_1367388600.55005' 
    capture_lex $P5077
    .const 'Sub' $P5078 = 'cuid_103_1367388600.55005' 
    capture_lex $P5078
    .const 'Sub' $P5079 = 'cuid_104_1367388600.55005' 
    capture_lex $P5079
    .const 'Sub' $P5080 = 'cuid_105_1367388600.55005' 
    capture_lex $P5080
    .const 'Sub' $P5081 = 'cuid_106_1367388600.55005' 
    capture_lex $P5081
    .const 'Sub' $P5082 = 'cuid_107_1367388600.55005' 
    capture_lex $P5082
    .const 'Sub' $P5083 = 'cuid_108_1367388600.55005' 
    capture_lex $P5083
    .const 'Sub' $P5084 = 'cuid_109_1367388600.55005' 
    capture_lex $P5084
    .const 'Sub' $P5085 = 'cuid_110_1367388600.55005' 
    capture_lex $P5085
    .const 'Sub' $P5086 = 'cuid_111_1367388600.55005' 
    capture_lex $P5086
    .const 'Sub' $P5087 = 'cuid_112_1367388600.55005' 
    capture_lex $P5087
    .const 'Sub' $P5088 = 'cuid_113_1367388600.55005' 
    capture_lex $P5088
    .const 'Sub' $P5089 = 'cuid_114_1367388600.55005' 
    capture_lex $P5089
    .const 'Sub' $P5090 = 'cuid_115_1367388600.55005' 
    capture_lex $P5090
    .const 'Sub' $P5091 = 'cuid_116_1367388600.55005' 
    capture_lex $P5091
    .const 'Sub' $P5092 = 'cuid_117_1367388600.55005' 
    capture_lex $P5092
    .const 'Sub' $P5093 = 'cuid_118_1367388600.55005' 
    capture_lex $P5093
    .const 'Sub' $P5094 = 'cuid_119_1367388600.55005' 
    capture_lex $P5094
    .const 'Sub' $P5095 = 'cuid_120_1367388600.55005' 
    capture_lex $P5095
    .const 'Sub' $P5096 = 'cuid_121_1367388600.55005' 
    capture_lex $P5096
    .const 'Sub' $P5097 = 'cuid_122_1367388600.55005' 
    capture_lex $P5097
    .const 'Sub' $P5098 = 'cuid_123_1367388600.55005' 
    capture_lex $P5098
    .const 'Sub' $P5099 = 'cuid_124_1367388600.55005' 
    capture_lex $P5099
    .const 'Sub' $P5100 = 'cuid_125_1367388600.55005' 
    capture_lex $P5100
    .const 'Sub' $P5101 = 'cuid_126_1367388600.55005' 
    capture_lex $P5101
    .const 'Sub' $P5102 = 'cuid_127_1367388600.55005' 
    capture_lex $P5102
    .const 'Sub' $P5103 = 'cuid_128_1367388600.55005' 
    capture_lex $P5103
    .const 'Sub' $P5104 = 'cuid_129_1367388600.55005' 
    capture_lex $P5104
    .const 'Sub' $P5105 = 'cuid_131_1367388600.55005' 
    capture_lex $P5105
    .const 'Sub' $P5106 = 'cuid_132_1367388600.55005' 
    capture_lex $P5106
    .const 'Sub' $P5107 = 'cuid_133_1367388600.55005' 
    capture_lex $P5107
    .const 'Sub' $P5108 = 'cuid_134_1367388600.55005' 
    capture_lex $P5108
    .const 'Sub' $P5109 = 'cuid_135_1367388600.55005' 
    capture_lex $P5109
    .const 'Sub' $P5110 = 'cuid_136_1367388600.55005' 
    capture_lex $P5110
    .const 'Sub' $P5111 = 'cuid_137_1367388600.55005' 
    capture_lex $P5111
    .const 'Sub' $P5112 = 'cuid_138_1367388600.55005' 
    capture_lex $P5112
    .const 'Sub' $P5113 = 'cuid_139_1367388600.55005' 
    capture_lex $P5113
    .const 'Sub' $P5114 = 'cuid_140_1367388600.55005' 
    capture_lex $P5114
    .const 'Sub' $P5115 = 'cuid_141_1367388600.55005' 
    capture_lex $P5115
    .const 'Sub' $P5116 = 'cuid_142_1367388600.55005' 
    capture_lex $P5116
    .const 'Sub' $P5117 = 'cuid_143_1367388600.55005' 
    capture_lex $P5117
    .const 'Sub' $P5118 = 'cuid_144_1367388600.55005' 
    capture_lex $P5118
    .const 'Sub' $P5119 = 'cuid_145_1367388600.55005' 
    capture_lex $P5119
    .const 'Sub' $P5120 = 'cuid_146_1367388600.55005' 
    capture_lex $P5120
    .const 'Sub' $P5121 = 'cuid_147_1367388600.55005' 
    capture_lex $P5121
    .const 'Sub' $P5122 = 'cuid_148_1367388600.55005' 
    capture_lex $P5122
    .const 'Sub' $P5123 = 'cuid_149_1367388600.55005' 
    capture_lex $P5123
    .const 'Sub' $P5124 = 'cuid_150_1367388600.55005' 
    capture_lex $P5124
    .const 'Sub' $P5125 = 'cuid_151_1367388600.55005' 
    capture_lex $P5125
    .const 'Sub' $P5126 = 'cuid_152_1367388600.55005' 
    capture_lex $P5126
    .const 'Sub' $P5127 = 'cuid_153_1367388600.55005' 
    capture_lex $P5127
    .const 'Sub' $P5128 = 'cuid_154_1367388600.55005' 
    capture_lex $P5128
    .const 'Sub' $P5129 = 'cuid_155_1367388600.55005' 
    capture_lex $P5129
    .const 'Sub' $P5130 = 'cuid_156_1367388600.55005' 
    capture_lex $P5130
    .const 'Sub' $P5131 = 'cuid_157_1367388600.55005' 
    capture_lex $P5131
    .const 'Sub' $P5132 = 'cuid_158_1367388600.55005' 
    capture_lex $P5132
    .const 'Sub' $P5133 = 'cuid_159_1367388600.55005' 
    capture_lex $P5133
    .const 'Sub' $P5134 = 'cuid_160_1367388600.55005' 
    capture_lex $P5134
    .const 'Sub' $P5135 = 'cuid_161_1367388600.55005' 
    capture_lex $P5135
    .const 'Sub' $P5136 = 'cuid_162_1367388600.55005' 
    capture_lex $P5136
    .const 'Sub' $P5137 = 'cuid_163_1367388600.55005' 
    capture_lex $P5137
    .const 'Sub' $P5138 = 'cuid_164_1367388600.55005' 
    capture_lex $P5138
    .const 'Sub' $P5139 = 'cuid_165_1367388600.55005' 
    capture_lex $P5139
    .const 'Sub' $P5140 = 'cuid_166_1367388600.55005' 
    capture_lex $P5140
    .const 'Sub' $P5141 = 'cuid_167_1367388600.55005' 
    capture_lex $P5141
    .const 'Sub' $P5142 = 'cuid_168_1367388600.55005' 
    capture_lex $P5142
    .const 'Sub' $P5143 = 'cuid_169_1367388600.55005' 
    capture_lex $P5143
    .const 'Sub' $P5144 = 'cuid_170_1367388600.55005' 
    capture_lex $P5144
    .const 'Sub' $P5145 = 'cuid_171_1367388600.55005' 
    capture_lex $P5145
    .const 'Sub' $P5146 = 'cuid_172_1367388600.55005' 
    capture_lex $P5146
    .const 'Sub' $P5147 = 'cuid_173_1367388600.55005' 
    capture_lex $P5147
    .const 'Sub' $P5148 = 'cuid_174_1367388600.55005' 
    capture_lex $P5148
    .const 'Sub' $P5149 = 'cuid_175_1367388600.55005' 
    capture_lex $P5149
    .const 'Sub' $P5150 = 'cuid_176_1367388600.55005' 
    capture_lex $P5150
    .const 'Sub' $P5151 = 'cuid_177_1367388600.55005' 
    capture_lex $P5151
    .const 'Sub' $P5152 = 'cuid_178_1367388600.55005' 
    capture_lex $P5152
    .const 'Sub' $P5153 = 'cuid_179_1367388600.55005' 
    capture_lex $P5153
    .const 'Sub' $P5154 = 'cuid_180_1367388600.55005' 
    capture_lex $P5154
    .const 'Sub' $P5155 = 'cuid_181_1367388600.55005' 
    capture_lex $P5155
    .const 'Sub' $P5156 = 'cuid_182_1367388600.55005' 
    capture_lex $P5156
    .const 'Sub' $P5157 = 'cuid_183_1367388600.55005' 
    capture_lex $P5157
    .const 'Sub' $P5158 = 'cuid_184_1367388600.55005' 
    capture_lex $P5158
    .const 'Sub' $P5159 = 'cuid_185_1367388600.55005' 
    capture_lex $P5159
    .const 'Sub' $P5160 = 'cuid_186_1367388600.55005' 
    capture_lex $P5160
    .const 'Sub' $P5161 = 'cuid_187_1367388600.55005' 
    capture_lex $P5161
    .const 'Sub' $P5162 = 'cuid_188_1367388600.55005' 
    capture_lex $P5162
    .const 'Sub' $P5163 = 'cuid_189_1367388600.55005' 
    capture_lex $P5163
    .const 'Sub' $P5164 = 'cuid_190_1367388600.55005' 
    capture_lex $P5164
    .const 'Sub' $P5165 = 'cuid_191_1367388600.55005' 
    capture_lex $P5165
    .const 'Sub' $P5166 = 'cuid_192_1367388600.55005' 
    capture_lex $P5166
    .const 'Sub' $P5167 = 'cuid_193_1367388600.55005' 
    capture_lex $P5167
    .const 'Sub' $P5168 = 'cuid_194_1367388600.55005' 
    capture_lex $P5168
    .const 'Sub' $P5169 = 'cuid_195_1367388600.55005' 
    capture_lex $P5169
    .const 'Sub' $P5170 = 'cuid_196_1367388600.55005' 
    capture_lex $P5170
    .const 'Sub' $P5171 = 'cuid_197_1367388600.55005' 
    capture_lex $P5171
    .const 'Sub' $P5172 = 'cuid_198_1367388600.55005' 
    capture_lex $P5172
    .const 'Sub' $P5173 = 'cuid_199_1367388600.55005' 
    capture_lex $P5173
    .const 'Sub' $P5174 = 'cuid_200_1367388600.55005' 
    capture_lex $P5174
    .const 'Sub' $P5175 = 'cuid_201_1367388600.55005' 
    capture_lex $P5175
    .const 'Sub' $P5176 = 'cuid_202_1367388600.55005' 
    capture_lex $P5176
    .const 'Sub' $P5177 = 'cuid_203_1367388600.55005' 
    capture_lex $P5177
    .const 'Sub' $P5178 = 'cuid_204_1367388600.55005' 
    capture_lex $P5178
    .const 'Sub' $P5179 = 'cuid_205_1367388600.55005' 
    capture_lex $P5179
    .const 'Sub' $P5180 = 'cuid_206_1367388600.55005' 
    capture_lex $P5180
    .const 'Sub' $P5181 = 'cuid_207_1367388600.55005' 
    capture_lex $P5181
    .const 'Sub' $P5182 = 'cuid_208_1367388600.55005' 
    capture_lex $P5182
    .const 'Sub' $P5183 = 'cuid_209_1367388600.55005' 
    capture_lex $P5183
    .const 'Sub' $P5184 = 'cuid_210_1367388600.55005' 
    capture_lex $P5184
    .const 'Sub' $P5185 = 'cuid_211_1367388600.55005' 
    capture_lex $P5185
    .const 'Sub' $P5186 = 'cuid_212_1367388600.55005' 
    capture_lex $P5186
    .const 'Sub' $P5187 = 'cuid_213_1367388600.55005' 
    capture_lex $P5187
    .const 'Sub' $P5188 = 'cuid_214_1367388600.55005' 
    capture_lex $P5188
    .const 'Sub' $P5189 = 'cuid_215_1367388600.55005' 
    capture_lex $P5189
    .const 'Sub' $P5190 = 'cuid_216_1367388600.55005' 
    capture_lex $P5190
    .const 'Sub' $P5191 = 'cuid_217_1367388600.55005' 
    capture_lex $P5191
    .const 'Sub' $P5192 = 'cuid_218_1367388600.55005' 
    capture_lex $P5192
    .const 'Sub' $P5193 = 'cuid_219_1367388600.55005' 
    capture_lex $P5193
    .const 'Sub' $P5194 = 'cuid_220_1367388600.55005' 
    capture_lex $P5194
    .const 'Sub' $P5195 = 'cuid_221_1367388600.55005' 
    capture_lex $P5195
    .const 'Sub' $P5196 = 'cuid_223_1367388600.55005' 
    capture_lex $P5196
    .const 'Sub' $P5197 = 'cuid_225_1367388600.55005' 
    capture_lex $P5197
    .const 'Sub' $P5198 = 'cuid_227_1367388600.55005' 
    capture_lex $P5198
    .return ($P5198) 
.end
.HLL "nqp"
.namespace []
.sub "TOP" :subid("cuid_35_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 634
    .param pmc _lex_param_0 
    .lex "%*LANG", $P101 
    .lex "%*HOW", $P102 
    .lex "$file", $P103 
    .lex "$source_id", $P104 
    .lex "$*W", $P105 
    .lex "$*SCOPE", $P106 
    .lex "$*MULTINESS", $P107 
    .lex "$*PKGDECL", $P108 
    .lex "$*INVOCANT_OK", $P109 
    .lex "$*RETURN_USED", $P110 
    .lex "$*CONTROL_USED", $P111 
    .lex "%*HANDLERS", $P112 
    .lex "self", _lex_param_0 
    .local pmc fb_tmp_53 
    .local pmc pkg_viv_tmp_8 
    .local pmc fb_tmp_54 
    .local pmc pkg_viv_tmp_9 
    .local pmc fb_tmp_55 
    .local pmc pkg_lookup_tmp_1 
    .local pmc fb_tmp_56 
    .local pmc pkg_viv_tmp_10 
    .local pmc fb_tmp_57 
    .local pmc pkg_lookup_tmp_2 
    .local pmc fb_tmp_58 
    .local pmc pkg_viv_tmp_11 
    .local pmc fb_tmp_59 
    .local pmc pkg_viv_tmp_12 
    .local pmc fb_tmp_60 
    .local pmc pkg_lookup_tmp_3 
    .local pmc fb_tmp_61 
    .local pmc pkg_viv_tmp_13 
    .local pmc fb_tmp_62 
    .local pmc pkg_viv_tmp_14 
    .local pmc fb_tmp_63 
    .local pmc pkg_viv_tmp_15 
    .local pmc fb_tmp_64 
    .local pmc fb_tmp_65 
    .local pmc fb_tmp_66 
    .local pmc pkg_viv_tmp_16 
    .local pmc fb_tmp_67 
    .local pmc pkg_viv_tmp_17 
    new $P5001, 'Hash'
    set $P101, $P5001
    new $P5002, 'Hash'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P105, $P5005
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P106, $P5006
    nqp_get_sc_object $P5007, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P107, $P5007
    nqp_get_sc_object $P5008, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P108, $P5008
    nqp_get_sc_object $P5009, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P109, $P5009
    nqp_get_sc_object $P5010, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P110, $P5010
    nqp_get_sc_object $P5011, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P111, $P5011
    new $P5012, 'Hash'
    set $P112, $P5012
    unless_null $P101, fallback332
    nqp_get_sc_object $P5021, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5020, $P5021
    set pkg_viv_tmp_9, $P5020
    set fb_tmp_54, pkg_viv_tmp_9
    repr_defined $I5002, fb_tmp_54
    unless $I5002 goto if172_else333 
    set $P5022, fb_tmp_54["%LANG"]
    set $P5024, $P5022
    goto if172_end334
  if172_else333:
    null $P5023
    set $P5024, $P5023
  if172_end334:
    unless_null $P5024, vivi_173335
    new $P5025, 'Hash'
    set pkg_viv_tmp_9["%LANG"], $P5025
    set $P5024, $P5025
  vivi_173335:
    unless_null $P5024, vivi_174336
    die "Contextual %*LANG not found"
    box $P5026, "Contextual %*LANG not found"
    set $P5024, $P5026
  vivi_174336:
    set $P101, $P5024
  fallback332:
    nqp_get_sc_object $P5028, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    set pkg_lookup_tmp_1, $P5028
    get_who $P5029, pkg_lookup_tmp_1
    exists $I5004, $P5029["NQP"]
    unless $I5004 goto if176_else339 
    get_who $P5031, pkg_lookup_tmp_1
    set $P5030, $P5031["NQP"]
    set $P5033, $P5030
    goto if176_end340
  if176_else339:
    nqp_get_sc_object $P5032, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5033, $P5032
  if176_end340:
    get_who $P5027, $P5033
    set fb_tmp_55, $P5027
    repr_defined $I5003, fb_tmp_55
    unless $I5003 goto if175_else337 
    set $P5034, fb_tmp_55["Regex"]
    set $P5036, $P5034
    goto if175_end338
  if175_else337:
    null $P5035
    set $P5036, $P5035
  if175_end338:
    unless_null $P5036, vivi_177341
    nqp_get_sc_object $P5037, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5036, $P5037
  vivi_177341:
    set $P101["Regex"], $P5036
    unless_null $P101, fallback342
    nqp_get_sc_object $P5039, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5038, $P5039
    set pkg_viv_tmp_10, $P5038
    set fb_tmp_56, pkg_viv_tmp_10
    repr_defined $I5005, fb_tmp_56
    unless $I5005 goto if178_else343 
    set $P5040, fb_tmp_56["%LANG"]
    set $P5042, $P5040
    goto if178_end344
  if178_else343:
    null $P5041
    set $P5042, $P5041
  if178_end344:
    unless_null $P5042, vivi_179345
    new $P5043, 'Hash'
    set pkg_viv_tmp_10["%LANG"], $P5043
    set $P5042, $P5043
  vivi_179345:
    unless_null $P5042, vivi_180346
    die "Contextual %*LANG not found"
    box $P5044, "Contextual %*LANG not found"
    set $P5042, $P5044
  vivi_180346:
    set $P101, $P5042
  fallback342:
    nqp_get_sc_object $P5046, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    set pkg_lookup_tmp_2, $P5046
    get_who $P5047, pkg_lookup_tmp_2
    exists $I5007, $P5047["NQP"]
    unless $I5007 goto if182_else349 
    get_who $P5049, pkg_lookup_tmp_2
    set $P5048, $P5049["NQP"]
    set $P5051, $P5048
    goto if182_end350
  if182_else349:
    nqp_get_sc_object $P5050, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5051, $P5050
  if182_end350:
    get_who $P5045, $P5051
    set fb_tmp_57, $P5045
    repr_defined $I5006, fb_tmp_57
    unless $I5006 goto if181_else347 
    set $P5052, fb_tmp_57["RegexActions"]
    set $P5054, $P5052
    goto if181_end348
  if181_else347:
    null $P5053
    set $P5054, $P5053
  if181_end348:
    unless_null $P5054, vivi_183351
    nqp_get_sc_object $P5055, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5054, $P5055
  vivi_183351:
    set $P101["Regex-actions"], $P5054
    unless_null $P101, fallback352
    nqp_get_sc_object $P5057, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5056, $P5057
    set pkg_viv_tmp_11, $P5056
    set fb_tmp_58, pkg_viv_tmp_11
    repr_defined $I5008, fb_tmp_58
    unless $I5008 goto if184_else353 
    set $P5058, fb_tmp_58["%LANG"]
    set $P5060, $P5058
    goto if184_end354
  if184_else353:
    null $P5059
    set $P5060, $P5059
  if184_end354:
    unless_null $P5060, vivi_185355
    new $P5061, 'Hash'
    set pkg_viv_tmp_11["%LANG"], $P5061
    set $P5060, $P5061
  vivi_185355:
    unless_null $P5060, vivi_186356
    die "Contextual %*LANG not found"
    box $P5062, "Contextual %*LANG not found"
    set $P5060, $P5062
  vivi_186356:
    set $P101, $P5060
  fallback352:
    nqp_get_sc_object $P5063, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 38
    set $P101["MAIN"], $P5063
    unless_null $P101, fallback357
    nqp_get_sc_object $P5065, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5064, $P5065
    set pkg_viv_tmp_12, $P5064
    set fb_tmp_59, pkg_viv_tmp_12
    repr_defined $I5009, fb_tmp_59
    unless $I5009 goto if187_else358 
    set $P5066, fb_tmp_59["%LANG"]
    set $P5068, $P5066
    goto if187_end359
  if187_else358:
    null $P5067
    set $P5068, $P5067
  if187_end359:
    unless_null $P5068, vivi_188360
    new $P5069, 'Hash'
    set pkg_viv_tmp_12["%LANG"], $P5069
    set $P5068, $P5069
  vivi_188360:
    unless_null $P5068, vivi_189361
    die "Contextual %*LANG not found"
    box $P5070, "Contextual %*LANG not found"
    set $P5068, $P5070
  vivi_189361:
    set $P101, $P5068
  fallback357:
    nqp_get_sc_object $P5072, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    set pkg_lookup_tmp_3, $P5072
    get_who $P5073, pkg_lookup_tmp_3
    exists $I5011, $P5073["NQP"]
    unless $I5011 goto if191_else364 
    get_who $P5075, pkg_lookup_tmp_3
    set $P5074, $P5075["NQP"]
    set $P5077, $P5074
    goto if191_end365
  if191_else364:
    nqp_get_sc_object $P5076, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5077, $P5076
  if191_end365:
    get_who $P5071, $P5077
    set fb_tmp_60, $P5071
    repr_defined $I5010, fb_tmp_60
    unless $I5010 goto if190_else362 
    set $P5078, fb_tmp_60["Actions"]
    set $P5080, $P5078
    goto if190_end363
  if190_else362:
    null $P5079
    set $P5080, $P5079
  if190_end363:
    unless_null $P5080, vivi_192366
    nqp_get_sc_object $P5081, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5080, $P5081
  vivi_192366:
    set $P101["MAIN-actions"], $P5080
    unless_null $P102, fallback372
    nqp_get_sc_object $P5090, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5089, $P5090
    set pkg_viv_tmp_14, $P5089
    set fb_tmp_62, pkg_viv_tmp_14
    repr_defined $I5013, fb_tmp_62
    unless $I5013 goto if196_else373 
    set $P5091, fb_tmp_62["%HOW"]
    set $P5093, $P5091
    goto if196_end374
  if196_else373:
    null $P5092
    set $P5093, $P5092
  if196_end374:
    unless_null $P5093, vivi_197375
    new $P5094, 'Hash'
    set pkg_viv_tmp_14["%HOW"], $P5094
    set $P5093, $P5094
  vivi_197375:
    unless_null $P5093, vivi_198376
    die "Contextual %*HOW not found"
    box $P5095, "Contextual %*HOW not found"
    set $P5093, $P5095
  vivi_198376:
    set $P102, $P5093
  fallback372:
    get_knowhow $P5096
    set $P102["knowhow"], $P5096
    unless_null $P102, fallback377
    nqp_get_sc_object $P5098, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5097, $P5098
    set pkg_viv_tmp_15, $P5097
    set fb_tmp_63, pkg_viv_tmp_15
    repr_defined $I5014, fb_tmp_63
    unless $I5014 goto if199_else378 
    set $P5099, fb_tmp_63["%HOW"]
    set $P5101, $P5099
    goto if199_end379
  if199_else378:
    null $P5100
    set $P5101, $P5100
  if199_end379:
    unless_null $P5101, vivi_200380
    new $P5102, 'Hash'
    set pkg_viv_tmp_15["%HOW"], $P5102
    set $P5101, $P5102
  vivi_200380:
    unless_null $P5101, vivi_201381
    die "Contextual %*HOW not found"
    box $P5103, "Contextual %*HOW not found"
    set $P5101, $P5103
  vivi_201381:
    set $P102, $P5101
  fallback377:
    get_knowhow_attribute $P5104
    set $P102["knowhow-attr"], $P5104
    find_dynamic_lex $P5105, "$?FILES"
    set $P103, $P5105
.annotate 'line', 653
    nqp_decontainerize $P5106, _lex_param_0
    $P5107 = $P5106."target"()
    set $S5003, $P5107
    nqp_sha1 $S5002, $S5003
    find_dynamic_lex $P5108, "%*COMPILING"
    unless_null $P5108, fallback388
    nqp_get_sc_object $P5110, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5109, $P5110
    set pkg_viv_tmp_16, $P5109
    set fb_tmp_66, pkg_viv_tmp_16
    repr_defined $I5017, fb_tmp_66
    unless $I5017 goto if205_else389 
    set $P5111, fb_tmp_66["%COMPILING"]
    set $P5113, $P5111
    goto if205_end390
  if205_else389:
    null $P5112
    set $P5113, $P5112
  if205_end390:
    unless_null $P5113, vivi_206391
    new $P5114, 'Hash'
    set pkg_viv_tmp_16["%COMPILING"], $P5114
    set $P5113, $P5114
  vivi_206391:
    unless_null $P5113, vivi_207392
    die "Contextual %*COMPILING not found"
    box $P5115, "Contextual %*COMPILING not found"
    set $P5113, $P5115
  vivi_207392:
    set $P5108, $P5113
  fallback388:
    set fb_tmp_65, $P5108
    repr_defined $I5016, fb_tmp_65
    unless $I5016 goto if204_else386 
    set $P5116, fb_tmp_65["%?OPTIONS"]
    set $P5118, $P5116
    goto if204_end387
  if204_else386:
    null $P5117
    set $P5118, $P5117
  if204_end387:
    unless_null $P5118, vivi_208393
    nqp_get_sc_object $P5119, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5118, $P5119
  vivi_208393:
    set fb_tmp_64, $P5118
    repr_defined $I5015, fb_tmp_64
    unless $I5015 goto if203_else384 
    set $P5120, fb_tmp_64["stable-sc"]
    set $P5122, $P5120
    goto if203_end385
  if203_else384:
    null $P5121
    set $P5122, $P5121
  if203_end385:
    unless_null $P5122, vivi_209394
    nqp_get_sc_object $P5123, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5122, $P5123
  vivi_209394:
    unless $P5122 goto if202_else382 
    set $S5006, ""
    goto if202_end383
  if202_else382:
    time $N5001
    set $S5005, $N5001
    concat $S5004, "-", $S5005
    set $S5006, $S5004
  if202_end383:
    concat $S5001, $S5002, $S5006
    box $P5124, $S5001
    set $P104, $P5124
    isnull $I5018, $P103
    unless $I5018 goto if210_else395 
.annotate 'line', 656
    nqp_get_sc_object $P5125, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 3
    $P5126 = $P5125."new"($P104 :named("handle"))
    set $P5129, $P5126
    goto if210_end396
  if210_else395:
.annotate 'line', 657
    nqp_get_sc_object $P5127, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 3
    $P5128 = $P5127."new"($P104 :named("handle"), $P103 :named("description"))
    set $P5129, $P5128
  if210_end396:
    set $P105, $P5129
    box $P5130, ""
    set $P106, $P5130
    box $P5131, ""
    set $P107, $P5131
    box $P5132, ""
    set $P108, $P5132
    box $P5133, 0
    set $P109, $P5133
    box $P5134, 0
    set $P110, $P5134
    box $P5135, 0
    set $P111, $P5135
.annotate 'line', 666
    nqp_decontainerize $P5143, _lex_param_0
    $P5144 = $P5143."comp_unit"()
    .return ($P5144) 
.end
.HLL "nqp"
.namespace []
.sub "identifier" :subid("cuid_36_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 671
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx214_start
    .local string rx214_tgt
    .local int rx214_pos
    .local int rx214_off
    .local int rx214_eos
    .local int rx214_rep
    .local pmc rx214_cur
    .local pmc rx214_curclass
    .local pmc rx214_bstack
    .local pmc rx214_cstack
    rx214_start = self."!cursor_start_all"()
    set rx214_cur, rx214_start[0]
    set rx214_tgt, rx214_start[1]
    set rx214_pos, rx214_start[2]
    set rx214_curclass, rx214_start[3]
    set rx214_bstack, rx214_start[4]
    set $I19, rx214_start[5]
    store_lex unicode:"$\x{a2}", rx214_cur
    length rx214_eos, rx214_tgt
    eq $I19, 1, rx214_restart404
    gt rx214_pos, rx214_eos, rx214_fail405
    repr_get_attr_int $I11, self, rx214_curclass, "$!from"
    ne $I11, -1, rxscan215_done411
    goto rxscan215_scan410
  rxscan215_loop409:
    inc rx214_pos
    gt rx214_pos, rx214_eos, rx214_fail405
    repr_bind_attr_int rx214_cur, rx214_curclass, "$!from", rx214_pos
  rxscan215_scan410:
    nqp_rxmark rx214_bstack, rxscan215_loop409, rx214_pos, 0
  rxscan215_done411:
    repr_bind_attr_int rx214_cur, rx214_curclass, "$!pos", rx214_pos
    $P11 = rx214_cur."ident"()
    repr_get_attr_int $I11, $P11, rx214_curclass, "$!pos"
    lt $I11, 0, rx214_fail405
    repr_get_attr_int rx214_pos, $P11, rx214_curclass, "$!pos"
    nqp_rxmark rx214_bstack, rxquantr217_done414, rx214_pos, 0
  rxquantr217_loop413:
  alt218_0416:
    nqp_rxmark rx214_bstack, alt218_1417, rx214_pos, 0
    add $I11, rx214_pos, 1
    gt $I11, rx214_eos, rx214_fail405
    substr $S10, rx214_tgt, rx214_pos, 1
    ne $S10, ucs4:"-", rx214_fail405
    add rx214_pos, 1
    goto alt218_end415
  alt218_1417:
    ge rx214_pos, rx214_eos, rx214_fail405
    substr $S11, rx214_tgt, rx214_pos, 1
    index $I11, ucs4:"'", $S11
    lt $I11, 0, rx214_fail405
    inc rx214_pos
  alt218_end415:
    repr_bind_attr_int rx214_cur, rx214_curclass, "$!pos", rx214_pos
    $P11 = rx214_cur."ident"()
    repr_get_attr_int $I11, $P11, rx214_curclass, "$!pos"
    lt $I11, 0, rx214_fail405
    repr_get_attr_int rx214_pos, $P11, rx214_curclass, "$!pos"
    nqp_rxpeek $I19, rx214_bstack, rxquantr217_done414
    inc $I19
    inc $I19
    set rx214_rep, rx214_bstack[$I19]
    nqp_rxcommit rx214_bstack, rxquantr217_done414
    inc rx214_rep
    nqp_rxmark rx214_bstack, rxquantr217_done414, rx214_pos, rx214_rep
    goto rxquantr217_loop413
  rxquantr217_done414:
    rx214_cur."!cursor_pass"(rx214_pos, "identifier", 'backtrack'=>1)
    .return (rx214_cur)
  rx214_restart404:
    repr_get_attr_obj rx214_cstack, rx214_cur, rx214_curclass, "$!cstack"
  rx214_fail405:
    unless rx214_bstack, rx214_done403
    pop $I19, rx214_bstack
    if_null rx214_cstack, rx214_cstack_done408
    unless rx214_cstack, rx214_cstack_done408
    dec $I19
    set $P11, rx214_cstack[$I19]
  rx214_cstack_done408:
    pop rx214_rep, rx214_bstack
    pop rx214_pos, rx214_bstack
    pop $I19, rx214_bstack
    lt rx214_pos, -1, rx214_done403
    lt rx214_pos, 0, rx214_fail405
    eq $I19, 0, rx214_fail405
    nqp_islist $I20, rx214_cstack
    unless $I20, rx214_jump406
    elements $I18, rx214_bstack
    le $I18, 0, rx214_cut407
    dec $I18
    set $I18, rx214_bstack[$I18]
  rx214_cut407:
    assign rx214_cstack, $I18
  rx214_jump406:
    jump $I19
  rx214_done403:
    rx214_cur."!cursor_fail"()
    .return (rx214_cur) 
.end
.HLL "nqp"
.namespace []
.sub "name" :subid("cuid_37_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 673
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx220_start
    .local string rx220_tgt
    .local int rx220_pos
    .local int rx220_off
    .local int rx220_eos
    .local int rx220_rep
    .local pmc rx220_cur
    .local pmc rx220_curclass
    .local pmc rx220_bstack
    .local pmc rx220_cstack
    rx220_start = self."!cursor_start_all"()
    set rx220_cur, rx220_start[0]
    set rx220_tgt, rx220_start[1]
    set rx220_pos, rx220_start[2]
    set rx220_curclass, rx220_start[3]
    set rx220_bstack, rx220_start[4]
    set $I19, rx220_start[5]
    store_lex unicode:"$\x{a2}", rx220_cur
    length rx220_eos, rx220_tgt
    eq $I19, 1, rx220_restart421
    gt rx220_pos, rx220_eos, rx220_fail422
    repr_get_attr_int $I11, self, rx220_curclass, "$!from"
    ne $I11, -1, rxscan221_done428
    goto rxscan221_scan427
  rxscan221_loop426:
    inc rx220_pos
    gt rx220_pos, rx220_eos, rx220_fail422
    repr_bind_attr_int rx220_cur, rx220_curclass, "$!from", rx220_pos
  rxscan221_scan427:
    nqp_rxmark rx220_bstack, rxscan221_loop426, rx220_pos, 0
  rxscan221_done428:
    repr_bind_attr_int rx220_cur, rx220_curclass, "$!pos", rx220_pos
    $P11 = rx220_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx220_curclass, "$!pos"
    lt $I11, 0, rx220_fail422
    nqp_rxmark rx220_bstack, rxsubrule222_pass429, -1, 0
  rxsubrule222_pass429:
    rx220_cstack = rx220_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx220_pos, $P11, rx220_curclass, "$!pos"
    nqp_rxmark rx220_bstack, rxquantr223_done431, rx220_pos, 0
  rxquantr223_loop430:
    add $I11, rx220_pos, 2
    gt $I11, rx220_eos, rx220_fail422
    substr $S10, rx220_tgt, rx220_pos, 2
    ne $S10, ucs4:"::", rx220_fail422
    add rx220_pos, 2
    repr_bind_attr_int rx220_cur, rx220_curclass, "$!pos", rx220_pos
    $P11 = rx220_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx220_curclass, "$!pos"
    lt $I11, 0, rx220_fail422
    nqp_rxmark rx220_bstack, rxsubrule224_pass432, -1, 0
  rxsubrule224_pass432:
    rx220_cstack = rx220_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx220_pos, $P11, rx220_curclass, "$!pos"
    nqp_rxpeek $I19, rx220_bstack, rxquantr223_done431
    inc $I19
    inc $I19
    set rx220_rep, rx220_bstack[$I19]
    nqp_rxcommit rx220_bstack, rxquantr223_done431
    inc rx220_rep
    nqp_rxmark rx220_bstack, rxquantr223_done431, rx220_pos, rx220_rep
    goto rxquantr223_loop430
  rxquantr223_done431:
    rx220_cur."!cursor_pass"(rx220_pos, "name", 'backtrack'=>1)
    .return (rx220_cur)
  rx220_restart421:
    repr_get_attr_obj rx220_cstack, rx220_cur, rx220_curclass, "$!cstack"
  rx220_fail422:
    unless rx220_bstack, rx220_done420
    pop $I19, rx220_bstack
    if_null rx220_cstack, rx220_cstack_done425
    unless rx220_cstack, rx220_cstack_done425
    dec $I19
    set $P11, rx220_cstack[$I19]
  rx220_cstack_done425:
    pop rx220_rep, rx220_bstack
    pop rx220_pos, rx220_bstack
    pop $I19, rx220_bstack
    lt rx220_pos, -1, rx220_done420
    lt rx220_pos, 0, rx220_fail422
    eq $I19, 0, rx220_fail422
    nqp_islist $I20, rx220_cstack
    unless $I20, rx220_jump423
    elements $I18, rx220_bstack
    le $I18, 0, rx220_cut424
    dec $I18
    set $I18, rx220_bstack[$I18]
  rx220_cut424:
    assign rx220_cstack, $I18
  rx220_jump423:
    jump $I19
  rx220_done420:
    rx220_cur."!cursor_fail"()
    .return (rx220_cur) 
.end
.HLL "nqp"
.namespace []
.sub "deflongname" :subid("cuid_38_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 675
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx225_start
    .local string rx225_tgt
    .local int rx225_pos
    .local int rx225_off
    .local int rx225_eos
    .local int rx225_rep
    .local pmc rx225_cur
    .local pmc rx225_curclass
    .local pmc rx225_bstack
    .local pmc rx225_cstack
    rx225_start = self."!cursor_start_all"()
    set rx225_cur, rx225_start[0]
    set rx225_tgt, rx225_start[1]
    set rx225_pos, rx225_start[2]
    set rx225_curclass, rx225_start[3]
    set rx225_bstack, rx225_start[4]
    set $I19, rx225_start[5]
    store_lex unicode:"$\x{a2}", rx225_cur
    length rx225_eos, rx225_tgt
    eq $I19, 1, rx225_restart435
    gt rx225_pos, rx225_eos, rx225_fail436
    repr_get_attr_int $I11, self, rx225_curclass, "$!from"
    ne $I11, -1, rxscan226_done442
    goto rxscan226_scan441
  rxscan226_loop440:
    inc rx225_pos
    gt rx225_pos, rx225_eos, rx225_fail436
    repr_bind_attr_int rx225_cur, rx225_curclass, "$!from", rx225_pos
  rxscan226_scan441:
    nqp_rxmark rx225_bstack, rxscan226_loop440, rx225_pos, 0
  rxscan226_done442:
    repr_bind_attr_int rx225_cur, rx225_curclass, "$!pos", rx225_pos
    $P11 = rx225_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx225_curclass, "$!pos"
    lt $I11, 0, rx225_fail436
    nqp_rxmark rx225_bstack, rxsubrule227_pass443, -1, 0
  rxsubrule227_pass443:
    rx225_cstack = rx225_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx225_pos, $P11, rx225_curclass, "$!pos"
    nqp_rxmark rx225_bstack, rxquantr228_done445, rx225_pos, 0
  rxquantr228_loop444:
    repr_bind_attr_int rx225_cur, rx225_curclass, "$!pos", rx225_pos
    $P11 = rx225_cur."colonpair"()
    repr_get_attr_int $I11, $P11, rx225_curclass, "$!pos"
    lt $I11, 0, rx225_fail436
    goto rxsubrule229_pass446
  rxsubrule229_back447:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx225_curclass, "$!pos"
    lt $I11, 0, rx225_fail436
  rxsubrule229_pass446:
    rx225_cstack = rx225_cur."!cursor_capture"($P11, "colonpair")
    set_addr $I11, rxsubrule229_back447
    push rx225_bstack, $I11
    push rx225_bstack, 0
    push rx225_bstack, rx225_pos
    elements $I11, rx225_cstack
    push rx225_bstack, $I11
    repr_get_attr_int rx225_pos, $P11, rx225_curclass, "$!pos"
    nqp_rxpeek $I19, rx225_bstack, rxquantr228_done445
    inc $I19
    inc $I19
    set rx225_rep, rx225_bstack[$I19]
    nqp_rxcommit rx225_bstack, rxquantr228_done445
    inc rx225_rep
  rxquantr228_done445:
    rx225_cur."!cursor_pass"(rx225_pos, "deflongname", 'backtrack'=>1)
    .return (rx225_cur)
  rx225_restart435:
    repr_get_attr_obj rx225_cstack, rx225_cur, rx225_curclass, "$!cstack"
  rx225_fail436:
    unless rx225_bstack, rx225_done434
    pop $I19, rx225_bstack
    if_null rx225_cstack, rx225_cstack_done439
    unless rx225_cstack, rx225_cstack_done439
    dec $I19
    set $P11, rx225_cstack[$I19]
  rx225_cstack_done439:
    pop rx225_rep, rx225_bstack
    pop rx225_pos, rx225_bstack
    pop $I19, rx225_bstack
    lt rx225_pos, -1, rx225_done434
    lt rx225_pos, 0, rx225_fail436
    eq $I19, 0, rx225_fail436
    nqp_islist $I20, rx225_cstack
    unless $I20, rx225_jump437
    elements $I18, rx225_bstack
    le $I18, 0, rx225_cut438
    dec $I18
    set $I18, rx225_bstack[$I18]
  rx225_cut438:
    assign rx225_cstack, $I18
  rx225_jump437:
    jump $I19
  rx225_done434:
    rx225_cur."!cursor_fail"()
    .return (rx225_cur) 
.end
.HLL "nqp"
.namespace []
.sub "ENDSTMT" :subid("cuid_39_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 679
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx230_start
    .local string rx230_tgt
    .local int rx230_pos
    .local int rx230_off
    .local int rx230_eos
    .local int rx230_rep
    .local pmc rx230_cur
    .local pmc rx230_curclass
    .local pmc rx230_bstack
    .local pmc rx230_cstack
    rx230_start = self."!cursor_start_all"()
    set rx230_cur, rx230_start[0]
    set rx230_tgt, rx230_start[1]
    set rx230_pos, rx230_start[2]
    set rx230_curclass, rx230_start[3]
    set rx230_bstack, rx230_start[4]
    set $I19, rx230_start[5]
    store_lex unicode:"$\x{a2}", rx230_cur
    length rx230_eos, rx230_tgt
    eq $I19, 1, rx230_restart450
    gt rx230_pos, rx230_eos, rx230_fail451
    repr_get_attr_int $I11, self, rx230_curclass, "$!from"
    ne $I11, -1, rxscan231_done457
    goto rxscan231_scan456
  rxscan231_loop455:
    inc rx230_pos
    gt rx230_pos, rx230_eos, rx230_fail451
    repr_bind_attr_int rx230_cur, rx230_curclass, "$!from", rx230_pos
  rxscan231_scan456:
    nqp_rxmark rx230_bstack, rxscan231_loop455, rx230_pos, 0
  rxscan231_done457:
    nqp_rxmark rx230_bstack, rxquantr232_done459, rx230_pos, 0
  rxquantr232_loop458:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt233_0461
    nqp_push_label $P11, alt233_1466
    nqp_rxmark rx230_bstack, alt233_end460, -1, 0
    rx230_cur."!alt"(rx230_pos, "alt_nfa__1_1367388602.29743", $P11)
    goto rx230_fail451
  alt233_0461:
    nqp_rxmark rx230_bstack, rxquantr234_done463, rx230_pos, 0
  rxquantr234_loop462:
    ge rx230_pos, rx230_eos, rx230_fail451
    substr $S11, rx230_tgt, rx230_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx230_fail451
    inc rx230_pos
    nqp_rxpeek $I19, rx230_bstack, rxquantr234_done463
    inc $I19
    inc $I19
    set rx230_rep, rx230_bstack[$I19]
    nqp_rxcommit rx230_bstack, rxquantr234_done463
    inc rx230_rep
    nqp_rxmark rx230_bstack, rxquantr234_done463, rx230_pos, rx230_rep
    goto rxquantr234_loop462
  rxquantr234_done463:
    is_cclass $I11, .CCLASS_NEWLINE, rx230_tgt, rx230_pos
    if $I11, rxanchor235_done464
    ne rx230_pos, rx230_eos, rx230_fail451
    eq rx230_pos, 0, rxanchor235_done464
    sub $I11, rx230_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx230_tgt, $I11
    if $I11, rx230_fail451
  rxanchor235_done464:
    repr_bind_attr_int rx230_cur, rx230_curclass, "$!pos", rx230_pos
    $P11 = rx230_cur."ws"()
    repr_get_attr_int $I11, $P11, rx230_curclass, "$!pos"
    lt $I11, 0, rx230_fail451
    repr_get_attr_int rx230_pos, $P11, rx230_curclass, "$!pos"
    repr_bind_attr_int rx230_cur, rx230_curclass, "$!pos", rx230_pos
    $P11 = rx230_cur."MARKER"("endstmt")
    repr_get_attr_int $I11, $P11, rx230_curclass, "$!pos"
    lt $I11, 0, rx230_fail451
    goto alt233_end460
  alt233_1466:
    nqp_rxmark rx230_bstack, rxquantr237_done468, rx230_pos, 0
  rxquantr237_loop467:
    repr_bind_attr_int rx230_cur, rx230_curclass, "$!pos", rx230_pos
    $P11 = rx230_cur."unv"()
    repr_get_attr_int $I11, $P11, rx230_curclass, "$!pos"
    lt $I11, 0, rx230_fail451
    goto rxsubrule238_pass469
  rxsubrule238_back470:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx230_curclass, "$!pos"
    lt $I11, 0, rx230_fail451
  rxsubrule238_pass469:
    rx230_cstack = rx230_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule238_back470
    push rx230_bstack, $I11
    push rx230_bstack, 0
    push rx230_bstack, rx230_pos
    elements $I11, rx230_cstack
    push rx230_bstack, $I11
    repr_get_attr_int rx230_pos, $P11, rx230_curclass, "$!pos"
    nqp_rxpeek $I19, rx230_bstack, rxquantr237_done468
    inc $I19
    inc $I19
    set rx230_rep, rx230_bstack[$I19]
    nqp_rxcommit rx230_bstack, rxquantr237_done468
    inc rx230_rep
  rxquantr237_done468:
    is_cclass $I11, .CCLASS_NEWLINE, rx230_tgt, rx230_pos
    if $I11, rxanchor239_done471
    ne rx230_pos, rx230_eos, rx230_fail451
    eq rx230_pos, 0, rxanchor239_done471
    sub $I11, rx230_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx230_tgt, $I11
    if $I11, rx230_fail451
  rxanchor239_done471:
    repr_bind_attr_int rx230_cur, rx230_curclass, "$!pos", rx230_pos
    $P11 = rx230_cur."ws"()
    repr_get_attr_int $I11, $P11, rx230_curclass, "$!pos"
    lt $I11, 0, rx230_fail451
    repr_get_attr_int rx230_pos, $P11, rx230_curclass, "$!pos"
    repr_bind_attr_int rx230_cur, rx230_curclass, "$!pos", rx230_pos
    $P11 = rx230_cur."MARKER"("endstmt")
    repr_get_attr_int $I11, $P11, rx230_curclass, "$!pos"
    lt $I11, 0, rx230_fail451
    goto alt233_end460
  alt233_end460:
    nqp_rxpeek $I19, rx230_bstack, rxquantr232_done459
    inc $I19
    inc $I19
    set rx230_rep, rx230_bstack[$I19]
    nqp_rxcommit rx230_bstack, rxquantr232_done459
    inc rx230_rep
  rxquantr232_done459:
    rx230_cur."!cursor_pass"(rx230_pos, "ENDSTMT", 'backtrack'=>1)
    .return (rx230_cur)
  rx230_restart450:
    repr_get_attr_obj rx230_cstack, rx230_cur, rx230_curclass, "$!cstack"
  rx230_fail451:
    unless rx230_bstack, rx230_done449
    pop $I19, rx230_bstack
    if_null rx230_cstack, rx230_cstack_done454
    unless rx230_cstack, rx230_cstack_done454
    dec $I19
    set $P11, rx230_cstack[$I19]
  rx230_cstack_done454:
    pop rx230_rep, rx230_bstack
    pop rx230_pos, rx230_bstack
    pop $I19, rx230_bstack
    lt rx230_pos, -1, rx230_done449
    lt rx230_pos, 0, rx230_fail451
    eq $I19, 0, rx230_fail451
    nqp_islist $I20, rx230_cstack
    unless $I20, rx230_jump452
    elements $I18, rx230_bstack
    le $I18, 0, rx230_cut453
    dec $I18
    set $I18, rx230_bstack[$I18]
  rx230_cut453:
    assign rx230_cstack, $I18
  rx230_jump452:
    jump $I19
  rx230_done449:
    rx230_cur."!cursor_fail"()
    .return (rx230_cur) 
.end
.HLL "nqp"
.namespace []
.sub "ws" :subid("cuid_40_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 686
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx241_start
    .local string rx241_tgt
    .local int rx241_pos
    .local int rx241_off
    .local int rx241_eos
    .local int rx241_rep
    .local pmc rx241_cur
    .local pmc rx241_curclass
    .local pmc rx241_bstack
    .local pmc rx241_cstack
    rx241_start = self."!cursor_start_all"()
    set rx241_cur, rx241_start[0]
    set rx241_tgt, rx241_start[1]
    set rx241_pos, rx241_start[2]
    set rx241_curclass, rx241_start[3]
    set rx241_bstack, rx241_start[4]
    set $I19, rx241_start[5]
    store_lex unicode:"$\x{a2}", rx241_cur
    length rx241_eos, rx241_tgt
    eq $I19, 1, rx241_restart475
    gt rx241_pos, rx241_eos, rx241_fail476
    repr_get_attr_int $I11, self, rx241_curclass, "$!from"
    ne $I11, -1, rxscan242_done482
    goto rxscan242_scan481
  rxscan242_loop480:
    inc rx241_pos
    gt rx241_pos, rx241_eos, rx241_fail476
    repr_bind_attr_int rx241_cur, rx241_curclass, "$!from", rx241_pos
  rxscan242_scan481:
    nqp_rxmark rx241_bstack, rxscan242_loop480, rx241_pos, 0
  rxscan242_done482:
  alt243_0484:
    nqp_rxmark rx241_bstack, alt243_1485, rx241_pos, 0
    repr_bind_attr_int rx241_cur, rx241_curclass, "$!pos", rx241_pos
    $P11 = rx241_cur."MARKED"("ws")
    repr_get_attr_int $I11, $P11, rx241_curclass, "$!pos"
    lt $I11, 0, rx241_fail476
    goto alt243_end483
  alt243_1485:
    repr_bind_attr_int rx241_cur, rx241_curclass, "$!pos", rx241_pos
    $P11 = rx241_cur."ww"()
    repr_get_attr_int $I11, $P11, rx241_curclass, "$!pos"
    ge $I11, 0, rx241_fail476
    nqp_rxmark rx241_bstack, rxquantr244_done487, rx241_pos, 0
  rxquantr244_loop486:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt245_0489
    nqp_push_label $P11, alt245_1492
    nqp_push_label $P11, alt245_2495
    nqp_push_label $P11, alt245_3498
    nqp_rxmark rx241_bstack, alt245_end488, -1, 0
    rx241_cur."!alt"(rx241_pos, "alt_nfa__2_1367388602.31925", $P11)
    goto rx241_fail476
  alt245_0489:
    nqp_rxmark rx241_bstack, rxquantr246_done491, -1, 0
  rxquantr246_loop490:
    ge rx241_pos, rx241_eos, rx241_fail476
    substr $S11, rx241_tgt, rx241_pos, 1
    index $I11, ucs4:"\n\x{b}\f\r\x{85}\u2028\u2029", $S11
    lt $I11, 0, rx241_fail476
    inc rx241_pos
    nqp_rxpeek $I19, rx241_bstack, rxquantr246_done491
    inc $I19
    inc $I19
    set rx241_rep, rx241_bstack[$I19]
    nqp_rxcommit rx241_bstack, rxquantr246_done491
    inc rx241_rep
    nqp_rxmark rx241_bstack, rxquantr246_done491, rx241_pos, rx241_rep
    goto rxquantr246_loop490
  rxquantr246_done491:
    goto alt245_end488
  alt245_1492:
    add $I11, rx241_pos, 1
    gt $I11, rx241_eos, rx241_fail476
    substr $S10, rx241_tgt, rx241_pos, 1
    ne $S10, ucs4:"#", rx241_fail476
    add rx241_pos, 1
    nqp_rxmark rx241_bstack, rxquantr247_done494, rx241_pos, 0
  rxquantr247_loop493:
    ge rx241_pos, rx241_eos, rx241_fail476
    is_cclass $I11, .CCLASS_NEWLINE, rx241_tgt, rx241_pos
    if $I11, rx241_fail476
    substr $S10, rx241_tgt, rx241_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx241_pos, $I11
    add rx241_pos, 1
    nqp_rxpeek $I19, rx241_bstack, rxquantr247_done494
    inc $I19
    inc $I19
    set rx241_rep, rx241_bstack[$I19]
    nqp_rxcommit rx241_bstack, rxquantr247_done494
    inc rx241_rep
    nqp_rxmark rx241_bstack, rxquantr247_done494, rx241_pos, rx241_rep
    goto rxquantr247_loop493
  rxquantr247_done494:
    goto alt245_end488
  alt245_2495:
    eq rx241_pos, 0, rxanchor248_done496
    ge rx241_pos, rx241_eos, rx241_fail476
    sub $I11, rx241_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx241_tgt, $I11
    unless $I11, rx241_fail476
  rxanchor248_done496:
    repr_bind_attr_int rx241_cur, rx241_curclass, "$!pos", rx241_pos
    $P11 = rx241_cur."pod_comment"()
    repr_get_attr_int $I11, $P11, rx241_curclass, "$!pos"
    lt $I11, 0, rx241_fail476
    repr_get_attr_int rx241_pos, $P11, rx241_curclass, "$!pos"
    goto alt245_end488
  alt245_3498:
    nqp_rxmark rx241_bstack, rxquantr250_done500, -1, 0
  rxquantr250_loop499:
    ge rx241_pos, rx241_eos, rx241_fail476
    substr $S11, rx241_tgt, rx241_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx241_fail476
    inc rx241_pos
    nqp_rxpeek $I19, rx241_bstack, rxquantr250_done500
    inc $I19
    inc $I19
    set rx241_rep, rx241_bstack[$I19]
    nqp_rxcommit rx241_bstack, rxquantr250_done500
    inc rx241_rep
    nqp_rxmark rx241_bstack, rxquantr250_done500, rx241_pos, rx241_rep
    goto rxquantr250_loop499
  rxquantr250_done500:
    goto alt245_end488
  alt245_end488:
    nqp_rxpeek $I19, rx241_bstack, rxquantr244_done487
    inc $I19
    inc $I19
    set rx241_rep, rx241_bstack[$I19]
    nqp_rxcommit rx241_bstack, rxquantr244_done487
    inc rx241_rep
    nqp_rxmark rx241_bstack, rxquantr244_done487, rx241_pos, rx241_rep
    goto rxquantr244_loop486
  rxquantr244_done487:
    repr_bind_attr_int rx241_cur, rx241_curclass, "$!pos", rx241_pos
    $P11 = rx241_cur."MARKER"("ws")
    repr_get_attr_int $I11, $P11, rx241_curclass, "$!pos"
    lt $I11, 0, rx241_fail476
  alt243_end483:
    rx241_cur."!cursor_pass"(rx241_pos, "ws", 'backtrack'=>1)
    .return (rx241_cur)
  rx241_restart475:
    repr_get_attr_obj rx241_cstack, rx241_cur, rx241_curclass, "$!cstack"
  rx241_fail476:
    unless rx241_bstack, rx241_done474
    pop $I19, rx241_bstack
    if_null rx241_cstack, rx241_cstack_done479
    unless rx241_cstack, rx241_cstack_done479
    dec $I19
    set $P11, rx241_cstack[$I19]
  rx241_cstack_done479:
    pop rx241_rep, rx241_bstack
    pop rx241_pos, rx241_bstack
    pop $I19, rx241_bstack
    lt rx241_pos, -1, rx241_done474
    lt rx241_pos, 0, rx241_fail476
    eq $I19, 0, rx241_fail476
    nqp_islist $I20, rx241_cstack
    unless $I20, rx241_jump477
    elements $I18, rx241_bstack
    le $I18, 0, rx241_cut478
    dec $I18
    set $I18, rx241_bstack[$I18]
  rx241_cut478:
    assign rx241_cstack, $I18
  rx241_jump477:
    jump $I19
  rx241_done474:
    rx241_cur."!cursor_fail"()
    .return (rx241_cur) 
.end
.HLL "nqp"
.namespace []
.sub "unv" :subid("cuid_41_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 697
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_42_1367388600.55005' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx251_start
    .local string rx251_tgt
    .local int rx251_pos
    .local int rx251_off
    .local int rx251_eos
    .local int rx251_rep
    .local pmc rx251_cur
    .local pmc rx251_curclass
    .local pmc rx251_bstack
    .local pmc rx251_cstack
    rx251_start = self."!cursor_start_all"()
    set rx251_cur, rx251_start[0]
    set rx251_tgt, rx251_start[1]
    set rx251_pos, rx251_start[2]
    set rx251_curclass, rx251_start[3]
    set rx251_bstack, rx251_start[4]
    set $I19, rx251_start[5]
    store_lex unicode:"$\x{a2}", rx251_cur
    length rx251_eos, rx251_tgt
    eq $I19, 1, rx251_restart503
    gt rx251_pos, rx251_eos, rx251_fail504
    repr_get_attr_int $I11, self, rx251_curclass, "$!from"
    ne $I11, -1, rxscan252_done510
    goto rxscan252_scan509
  rxscan252_loop508:
    inc rx251_pos
    gt rx251_pos, rx251_eos, rx251_fail504
    repr_bind_attr_int rx251_cur, rx251_curclass, "$!from", rx251_pos
  rxscan252_scan509:
    nqp_rxmark rx251_bstack, rxscan252_loop508, rx251_pos, 0
  rxscan252_done510:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt253_0512
    nqp_push_label $P11, alt253_1530
    nqp_push_label $P11, alt253_2535
    nqp_rxmark rx251_bstack, alt253_end511, -1, 0
    rx251_cur."!alt"(rx251_pos, "alt_nfa__4_1367388602.34405", $P11)
    goto rx251_fail504
  alt253_0512:
    eq rx251_pos, 0, rxanchor254_done513
    ge rx251_pos, rx251_eos, rx251_fail504
    sub $I11, rx251_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx251_tgt, $I11
    unless $I11, rx251_fail504
  rxanchor254_done513:
    .const 'Sub' $P5001 = 'cuid_42_1367388600.55005' 
    capture_lex $P5001
    repr_bind_attr_int rx251_cur, rx251_curclass, "$!pos", rx251_pos
    $P11 = rx251_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx251_curclass, "$!pos"
    lt $I11, 0, rx251_fail504
    repr_bind_attr_int rx251_cur, rx251_curclass, "$!pos", rx251_pos
    $P11 = rx251_cur."pod_comment"()
    repr_get_attr_int $I11, $P11, rx251_curclass, "$!pos"
    lt $I11, 0, rx251_fail504
    repr_get_attr_int rx251_pos, $P11, rx251_curclass, "$!pos"
    goto alt253_end511
  alt253_1530:
    nqp_rxmark rx251_bstack, rxquantr260_done532, rx251_pos, 0
  rxquantr260_loop531:
    ge rx251_pos, rx251_eos, rx251_fail504
    substr $S11, rx251_tgt, rx251_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx251_fail504
    inc rx251_pos
    nqp_rxpeek $I19, rx251_bstack, rxquantr260_done532
    inc $I19
    inc $I19
    set rx251_rep, rx251_bstack[$I19]
    nqp_rxcommit rx251_bstack, rxquantr260_done532
    inc rx251_rep
    nqp_rxmark rx251_bstack, rxquantr260_done532, rx251_pos, rx251_rep
    goto rxquantr260_loop531
  rxquantr260_done532:
    add $I11, rx251_pos, 1
    gt $I11, rx251_eos, rx251_fail504
    substr $S10, rx251_tgt, rx251_pos, 1
    ne $S10, ucs4:"#", rx251_fail504
    add rx251_pos, 1
    nqp_rxmark rx251_bstack, rxquantr261_done534, rx251_pos, 0
  rxquantr261_loop533:
    ge rx251_pos, rx251_eos, rx251_fail504
    is_cclass $I11, .CCLASS_NEWLINE, rx251_tgt, rx251_pos
    if $I11, rx251_fail504
    substr $S10, rx251_tgt, rx251_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx251_pos, $I11
    add rx251_pos, 1
    nqp_rxpeek $I19, rx251_bstack, rxquantr261_done534
    inc $I19
    inc $I19
    set rx251_rep, rx251_bstack[$I19]
    nqp_rxcommit rx251_bstack, rxquantr261_done534
    inc rx251_rep
    nqp_rxmark rx251_bstack, rxquantr261_done534, rx251_pos, rx251_rep
    goto rxquantr261_loop533
  rxquantr261_done534:
    goto alt253_end511
  alt253_2535:
    nqp_rxmark rx251_bstack, rxquantr262_done537, -1, 0
  rxquantr262_loop536:
    ge rx251_pos, rx251_eos, rx251_fail504
    substr $S11, rx251_tgt, rx251_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx251_fail504
    inc rx251_pos
    nqp_rxpeek $I19, rx251_bstack, rxquantr262_done537
    inc $I19
    inc $I19
    set rx251_rep, rx251_bstack[$I19]
    nqp_rxcommit rx251_bstack, rxquantr262_done537
    inc rx251_rep
    nqp_rxmark rx251_bstack, rxquantr262_done537, rx251_pos, rx251_rep
    goto rxquantr262_loop536
  rxquantr262_done537:
    goto alt253_end511
  alt253_end511:
    nqp_rxcommit rx251_bstack, alt253_end511
    rx251_cur."!cursor_pass"(rx251_pos, "unv", 'backtrack'=>1)
    .return (rx251_cur)
  rx251_restart503:
    repr_get_attr_obj rx251_cstack, rx251_cur, rx251_curclass, "$!cstack"
  rx251_fail504:
    unless rx251_bstack, rx251_done502
    pop $I19, rx251_bstack
    if_null rx251_cstack, rx251_cstack_done507
    unless rx251_cstack, rx251_cstack_done507
    dec $I19
    set $P11, rx251_cstack[$I19]
  rx251_cstack_done507:
    pop rx251_rep, rx251_bstack
    pop rx251_pos, rx251_bstack
    pop $I19, rx251_bstack
    lt rx251_pos, -1, rx251_done502
    lt rx251_pos, 0, rx251_fail504
    eq $I19, 0, rx251_fail504
    nqp_islist $I20, rx251_cstack
    unless $I20, rx251_jump505
    elements $I18, rx251_bstack
    le $I18, 0, rx251_cut506
    dec $I18
    set $I18, rx251_bstack[$I18]
  rx251_cut506:
    assign rx251_cstack, $I18
  rx251_jump505:
    jump $I19
  rx251_done502:
    rx251_cur."!cursor_fail"()
    .return (rx251_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_42_1367388600.55005") :anon :lex :outer("cuid_41_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx255_start
    .local string rx255_tgt
    .local int rx255_pos
    .local int rx255_off
    .local int rx255_eos
    .local int rx255_rep
    .local pmc rx255_cur
    .local pmc rx255_curclass
    .local pmc rx255_bstack
    .local pmc rx255_cstack
    rx255_start = self."!cursor_start_all"()
    set rx255_cur, rx255_start[0]
    set rx255_tgt, rx255_start[1]
    set rx255_pos, rx255_start[2]
    set rx255_curclass, rx255_start[3]
    set rx255_bstack, rx255_start[4]
    set $I19, rx255_start[5]
    store_lex unicode:"$\x{a2}", rx255_cur
    length rx255_eos, rx255_tgt
    eq $I19, 1, rx255_restart516
    gt rx255_pos, rx255_eos, rx255_fail517
    repr_get_attr_int $I11, self, rx255_curclass, "$!from"
    ne $I11, -1, rxscan256_done523
    goto rxscan256_scan522
  rxscan256_loop521:
    inc rx255_pos
    gt rx255_pos, rx255_eos, rx255_fail517
    repr_bind_attr_int rx255_cur, rx255_curclass, "$!from", rx255_pos
  rxscan256_scan522:
    nqp_rxmark rx255_bstack, rxscan256_loop521, rx255_pos, 0
  rxscan256_done523:
    nqp_rxmark rx255_bstack, rxquantr257_done525, rx255_pos, 0
  rxquantr257_loop524:
    ge rx255_pos, rx255_eos, rx255_fail517
    substr $S11, rx255_tgt, rx255_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx255_fail517
    inc rx255_pos
    nqp_rxpeek $I19, rx255_bstack, rxquantr257_done525
    inc $I19
    inc $I19
    set rx255_rep, rx255_bstack[$I19]
    nqp_rxcommit rx255_bstack, rxquantr257_done525
    inc rx255_rep
    nqp_rxmark rx255_bstack, rxquantr257_done525, rx255_pos, rx255_rep
    goto rxquantr257_loop524
  rxquantr257_done525:
    add $I11, rx255_pos, 1
    gt $I11, rx255_eos, rx255_fail517
    substr $S10, rx255_tgt, rx255_pos, 1
    ne $S10, ucs4:"=", rx255_fail517
    add rx255_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt258_0527
    nqp_push_label $P11, alt258_1528
    nqp_rxmark rx255_bstack, alt258_end526, -1, 0
    rx255_cur."!alt"(rx255_pos, "alt_nfa__3_1367388602.33236", $P11)
    goto rx255_fail517
  alt258_0527:
    ge rx255_pos, rx255_eos, rx255_fail517
    is_cclass $I11, .CCLASS_WORD, rx255_tgt, rx255_pos
    unless $I11, rx255_fail517
    add rx255_pos, 1
    goto alt258_end526
  alt258_1528:
    add $I11, rx255_pos, 1
    gt $I11, rx255_eos, rx255_fail517
    substr $S10, rx255_tgt, rx255_pos, 1
    ne $S10, ucs4:"\\", rx255_fail517
    add rx255_pos, 1
    goto alt258_end526
  alt258_end526:
    nqp_rxcommit rx255_bstack, alt258_end526
    rx255_cur."!cursor_pass"(rx255_pos, 'backtrack'=>1)
    .return (rx255_cur)
  rx255_restart516:
    repr_get_attr_obj rx255_cstack, rx255_cur, rx255_curclass, "$!cstack"
  rx255_fail517:
    unless rx255_bstack, rx255_done515
    pop $I19, rx255_bstack
    if_null rx255_cstack, rx255_cstack_done520
    unless rx255_cstack, rx255_cstack_done520
    dec $I19
    set $P11, rx255_cstack[$I19]
  rx255_cstack_done520:
    pop rx255_rep, rx255_bstack
    pop rx255_pos, rx255_bstack
    pop $I19, rx255_bstack
    lt rx255_pos, -1, rx255_done515
    lt rx255_pos, 0, rx255_fail517
    eq $I19, 0, rx255_fail517
    nqp_islist $I20, rx255_cstack
    unless $I20, rx255_jump518
    elements $I18, rx255_bstack
    le $I18, 0, rx255_cut519
    dec $I18
    set $I18, rx255_bstack[$I18]
  rx255_cut519:
    assign rx255_cstack, $I18
  rx255_jump518:
    jump $I19
  rx255_done515:
    rx255_cur."!cursor_fail"()
    .return (rx255_cur) 
.end
.HLL "nqp"
.namespace []
.sub "pod_comment" :subid("cuid_43_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 706
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_44_1367388600.55005' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx263_start
    .local string rx263_tgt
    .local int rx263_pos
    .local int rx263_off
    .local int rx263_eos
    .local int rx263_rep
    .local pmc rx263_cur
    .local pmc rx263_curclass
    .local pmc rx263_bstack
    .local pmc rx263_cstack
    rx263_start = self."!cursor_start_all"()
    set rx263_cur, rx263_start[0]
    set rx263_tgt, rx263_start[1]
    set rx263_pos, rx263_start[2]
    set rx263_curclass, rx263_start[3]
    set rx263_bstack, rx263_start[4]
    set $I19, rx263_start[5]
    store_lex unicode:"$\x{a2}", rx263_cur
    length rx263_eos, rx263_tgt
    eq $I19, 1, rx263_restart540
    gt rx263_pos, rx263_eos, rx263_fail541
    repr_get_attr_int $I11, self, rx263_curclass, "$!from"
    ne $I11, -1, rxscan264_done547
    goto rxscan264_scan546
  rxscan264_loop545:
    inc rx263_pos
    gt rx263_pos, rx263_eos, rx263_fail541
    repr_bind_attr_int rx263_cur, rx263_curclass, "$!from", rx263_pos
  rxscan264_scan546:
    nqp_rxmark rx263_bstack, rxscan264_loop545, rx263_pos, 0
  rxscan264_done547:
    eq rx263_pos, 0, rxanchor265_done548
    ge rx263_pos, rx263_eos, rx263_fail541
    sub $I11, rx263_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx263_tgt, $I11
    unless $I11, rx263_fail541
  rxanchor265_done548:
    nqp_rxmark rx263_bstack, rxquantr266_done550, rx263_pos, 0
  rxquantr266_loop549:
    ge rx263_pos, rx263_eos, rx263_fail541
    substr $S11, rx263_tgt, rx263_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx263_fail541
    inc rx263_pos
    nqp_rxpeek $I19, rx263_bstack, rxquantr266_done550
    inc $I19
    inc $I19
    set rx263_rep, rx263_bstack[$I19]
    nqp_rxcommit rx263_bstack, rxquantr266_done550
    inc rx263_rep
    nqp_rxmark rx263_bstack, rxquantr266_done550, rx263_pos, rx263_rep
    goto rxquantr266_loop549
  rxquantr266_done550:
    add $I11, rx263_pos, 1
    gt $I11, rx263_eos, rx263_fail541
    substr $S10, rx263_tgt, rx263_pos, 1
    ne $S10, ucs4:"=", rx263_fail541
    add rx263_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt267_0552
    nqp_push_label $P11, alt267_1571
    nqp_push_label $P11, alt267_2590
    nqp_push_label $P11, alt267_3612
    nqp_push_label $P11, alt267_4637
    nqp_rxmark rx263_bstack, alt267_end551, -1, 0
    rx263_cur."!alt"(rx263_pos, "alt_nfa__6_1367388602.45474", $P11)
    goto rx263_fail541
  alt267_0552:
    add $I11, rx263_pos, 5
    gt $I11, rx263_eos, rx263_fail541
    substr $S10, rx263_tgt, rx263_pos, 5
    ne $S10, ucs4:"begin", rx263_fail541
    add rx263_pos, 5
    nqp_rxmark rx263_bstack, rxquantr268_done554, -1, 0
  rxquantr268_loop553:
    ge rx263_pos, rx263_eos, rx263_fail541
    substr $S11, rx263_tgt, rx263_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx263_fail541
    inc rx263_pos
    nqp_rxpeek $I19, rx263_bstack, rxquantr268_done554
    inc $I19
    inc $I19
    set rx263_rep, rx263_bstack[$I19]
    nqp_rxcommit rx263_bstack, rxquantr268_done554
    inc rx263_rep
    nqp_rxmark rx263_bstack, rxquantr268_done554, rx263_pos, rx263_rep
    goto rxquantr268_loop553
  rxquantr268_done554:
    add $I11, rx263_pos, 3
    gt $I11, rx263_eos, rx263_fail541
    substr $S10, rx263_tgt, rx263_pos, 3
    ne $S10, ucs4:"END", rx263_fail541
    add rx263_pos, 3
    le rx263_pos, 0, rx263_fail541
    is_cclass $I11, .CCLASS_WORD, rx263_tgt, rx263_pos
    if $I11, rx263_fail541
    sub $I11, rx263_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx263_tgt, $I11
    unless $I11, rx263_fail541
  alt270_0557:
    nqp_rxmark rx263_bstack, alt270_1568, rx263_pos, 0
    set rx263_rep, 0
    nqp_rxmark rx263_bstack, rxquantf271_loop558, rx263_pos, rx263_rep
    goto rxquantf271_done559
  rxquantf271_loop558:
    set $I12, rx263_rep
    ge rx263_pos, rx263_eos, rx263_fail541
    add rx263_pos, 1
    set rx263_rep, $I12
    inc rx263_rep
    nqp_rxmark rx263_bstack, rxquantf271_loop558, rx263_pos, rx263_rep
  rxquantf271_done559:
    ge rx263_pos, rx263_eos, rx263_fail541
    is_cclass $I11, .CCLASS_NEWLINE, rx263_tgt, rx263_pos
    unless $I11, rx263_fail541
    substr $S10, rx263_tgt, rx263_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx263_pos, $I11
    add rx263_pos, 1
    nqp_rxmark rx263_bstack, rxquantr272_done562, rx263_pos, 0
  rxquantr272_loop561:
    ge rx263_pos, rx263_eos, rx263_fail541
    substr $S11, rx263_tgt, rx263_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx263_fail541
    inc rx263_pos
    nqp_rxpeek $I19, rx263_bstack, rxquantr272_done562
    inc $I19
    inc $I19
    set rx263_rep, rx263_bstack[$I19]
    nqp_rxcommit rx263_bstack, rxquantr272_done562
    inc rx263_rep
    nqp_rxmark rx263_bstack, rxquantr272_done562, rx263_pos, rx263_rep
    goto rxquantr272_loop561
  rxquantr272_done562:
    add $I11, rx263_pos, 4
    gt $I11, rx263_eos, rx263_fail541
    substr $S10, rx263_tgt, rx263_pos, 4
    ne $S10, ucs4:"=end", rx263_fail541
    add rx263_pos, 4
    nqp_rxmark rx263_bstack, rxquantr273_done564, -1, 0
  rxquantr273_loop563:
    ge rx263_pos, rx263_eos, rx263_fail541
    substr $S11, rx263_tgt, rx263_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx263_fail541
    inc rx263_pos
    nqp_rxpeek $I19, rx263_bstack, rxquantr273_done564
    inc $I19
    inc $I19
    set rx263_rep, rx263_bstack[$I19]
    nqp_rxcommit rx263_bstack, rxquantr273_done564
    inc rx263_rep
    nqp_rxmark rx263_bstack, rxquantr273_done564, rx263_pos, rx263_rep
    goto rxquantr273_loop563
  rxquantr273_done564:
    add $I11, rx263_pos, 3
    gt $I11, rx263_eos, rx263_fail541
    substr $S10, rx263_tgt, rx263_pos, 3
    ne $S10, ucs4:"END", rx263_fail541
    add rx263_pos, 3
    le rx263_pos, 0, rx263_fail541
    is_cclass $I11, .CCLASS_WORD, rx263_tgt, rx263_pos
    if $I11, rx263_fail541
    sub $I11, rx263_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx263_tgt, $I11
    unless $I11, rx263_fail541
    nqp_rxmark rx263_bstack, rxquantr275_done567, rx263_pos, 0
  rxquantr275_loop566:
    ge rx263_pos, rx263_eos, rx263_fail541
    is_cclass $I11, .CCLASS_NEWLINE, rx263_tgt, rx263_pos
    if $I11, rx263_fail541
    substr $S10, rx263_tgt, rx263_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx263_pos, $I11
    add rx263_pos, 1
    nqp_rxpeek $I19, rx263_bstack, rxquantr275_done567
    inc $I19
    inc $I19
    set rx263_rep, rx263_bstack[$I19]
    nqp_rxcommit rx263_bstack, rxquantr275_done567
    inc rx263_rep
    nqp_rxmark rx263_bstack, rxquantr275_done567, rx263_pos, rx263_rep
    goto rxquantr275_loop566
  rxquantr275_done567:
    goto alt270_end556
  alt270_1568:
    nqp_rxmark rx263_bstack, rxquantr276_done570, rx263_pos, 0
  rxquantr276_loop569:
    ge rx263_pos, rx263_eos, rx263_fail541
    add rx263_pos, 1
    nqp_rxpeek $I19, rx263_bstack, rxquantr276_done570
    inc $I19
    inc $I19
    set rx263_rep, rx263_bstack[$I19]
    nqp_rxcommit rx263_bstack, rxquantr276_done570
    inc rx263_rep
    nqp_rxmark rx263_bstack, rxquantr276_done570, rx263_pos, rx263_rep
    goto rxquantr276_loop569
  rxquantr276_done570:
  alt270_end556:
    goto alt267_end551
  alt267_1571:
    add $I11, rx263_pos, 5
    gt $I11, rx263_eos, rx263_fail541
    substr $S10, rx263_tgt, rx263_pos, 5
    ne $S10, ucs4:"begin", rx263_fail541
    add rx263_pos, 5
    nqp_rxmark rx263_bstack, rxquantr277_done573, -1, 0
  rxquantr277_loop572:
    ge rx263_pos, rx263_eos, rx263_fail541
    substr $S11, rx263_tgt, rx263_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx263_fail541
    inc rx263_pos
    nqp_rxpeek $I19, rx263_bstack, rxquantr277_done573
    inc $I19
    inc $I19
    set rx263_rep, rx263_bstack[$I19]
    nqp_rxcommit rx263_bstack, rxquantr277_done573
    inc rx263_rep
    nqp_rxmark rx263_bstack, rxquantr277_done573, rx263_pos, rx263_rep
    goto rxquantr277_loop572
  rxquantr277_done573:
    repr_bind_attr_int rx263_cur, rx263_curclass, "$!pos", rx263_pos
    $P11 = rx263_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx263_curclass, "$!pos"
    lt $I11, 0, rx263_fail541
    nqp_rxmark rx263_bstack, rxsubrule278_pass574, -1, 0
  rxsubrule278_pass574:
    rx263_cstack = rx263_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx263_pos, $P11, rx263_curclass, "$!pos"
  alt279_0576:
    nqp_rxmark rx263_bstack, alt279_1588, rx263_pos, 0
    set rx263_rep, 0
    nqp_rxmark rx263_bstack, rxquantf280_loop577, rx263_pos, rx263_rep
    goto rxquantf280_done578
  rxquantf280_loop577:
    set $I12, rx263_rep
    ge rx263_pos, rx263_eos, rx263_fail541
    add rx263_pos, 1
    set rx263_rep, $I12
    inc rx263_rep
    nqp_rxmark rx263_bstack, rxquantf280_loop577, rx263_pos, rx263_rep
  rxquantf280_done578:
    ge rx263_pos, rx263_eos, rx263_fail541
    is_cclass $I11, .CCLASS_NEWLINE, rx263_tgt, rx263_pos
    unless $I11, rx263_fail541
    substr $S10, rx263_tgt, rx263_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx263_pos, $I11
    add rx263_pos, 1
    nqp_rxmark rx263_bstack, rxquantr281_done581, rx263_pos, 0
  rxquantr281_loop580:
    ge rx263_pos, rx263_eos, rx263_fail541
    substr $S11, rx263_tgt, rx263_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx263_fail541
    inc rx263_pos
    nqp_rxpeek $I19, rx263_bstack, rxquantr281_done581
    inc $I19
    inc $I19
    set rx263_rep, rx263_bstack[$I19]
    nqp_rxcommit rx263_bstack, rxquantr281_done581
    inc rx263_rep
    nqp_rxmark rx263_bstack, rxquantr281_done581, rx263_pos, rx263_rep
    goto rxquantr281_loop580
  rxquantr281_done581:
    add $I11, rx263_pos, 4
    gt $I11, rx263_eos, rx263_fail541
    substr $S10, rx263_tgt, rx263_pos, 4
    ne $S10, ucs4:"=end", rx263_fail541
    add rx263_pos, 4
    nqp_rxmark rx263_bstack, rxquantr282_done583, -1, 0
  rxquantr282_loop582:
    ge rx263_pos, rx263_eos, rx263_fail541
    substr $S11, rx263_tgt, rx263_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx263_fail541
    inc rx263_pos
    nqp_rxpeek $I19, rx263_bstack, rxquantr282_done583
    inc $I19
    inc $I19
    set rx263_rep, rx263_bstack[$I19]
    nqp_rxcommit rx263_bstack, rxquantr282_done583
    inc rx263_rep
    nqp_rxmark rx263_bstack, rxquantr282_done583, rx263_pos, rx263_rep
    goto rxquantr282_loop582
  rxquantr282_done583:
    repr_bind_attr_int rx263_cur, rx263_curclass, "$!pos", rx263_pos
    $P11 = rx263_cur."!BACKREF"("identifier")
    repr_get_attr_int $I11, $P11, rx263_curclass, "$!pos"
    lt $I11, 0, rx263_fail541
    repr_get_attr_int rx263_pos, $P11, rx263_curclass, "$!pos"
    le rx263_pos, 0, rx263_fail541
    is_cclass $I11, .CCLASS_WORD, rx263_tgt, rx263_pos
    if $I11, rx263_fail541
    sub $I11, rx263_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx263_tgt, $I11
    unless $I11, rx263_fail541
    nqp_rxmark rx263_bstack, rxquantr285_done587, rx263_pos, 0
  rxquantr285_loop586:
    ge rx263_pos, rx263_eos, rx263_fail541
    is_cclass $I11, .CCLASS_NEWLINE, rx263_tgt, rx263_pos
    if $I11, rx263_fail541
    substr $S10, rx263_tgt, rx263_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx263_pos, $I11
    add rx263_pos, 1
    nqp_rxpeek $I19, rx263_bstack, rxquantr285_done587
    inc $I19
    inc $I19
    set rx263_rep, rx263_bstack[$I19]
    nqp_rxcommit rx263_bstack, rxquantr285_done587
    inc rx263_rep
    nqp_rxmark rx263_bstack, rxquantr285_done587, rx263_pos, rx263_rep
    goto rxquantr285_loop586
  rxquantr285_done587:
    goto alt279_end575
  alt279_1588:
    repr_bind_attr_int rx263_cur, rx263_curclass, "$!pos", rx263_pos
    $P11 = rx263_cur."panic"("=begin without matching =end")
    repr_get_attr_int $I11, $P11, rx263_curclass, "$!pos"
    lt $I11, 0, rx263_fail541
    repr_get_attr_int rx263_pos, $P11, rx263_curclass, "$!pos"
  alt279_end575:
    goto alt267_end551
  alt267_2590:
    add $I11, rx263_pos, 5
    gt $I11, rx263_eos, rx263_fail541
    substr $S10, rx263_tgt, rx263_pos, 5
    ne $S10, ucs4:"begin", rx263_fail541
    add rx263_pos, 5
    le rx263_pos, 0, rx263_fail541
    is_cclass $I11, .CCLASS_WORD, rx263_tgt, rx263_pos
    if $I11, rx263_fail541
    sub $I11, rx263_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx263_tgt, $I11
    unless $I11, rx263_fail541
    nqp_rxmark rx263_bstack, rxquantr288_done593, rx263_pos, 0
  rxquantr288_loop592:
    ge rx263_pos, rx263_eos, rx263_fail541
    substr $S11, rx263_tgt, rx263_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx263_fail541
    inc rx263_pos
    nqp_rxpeek $I19, rx263_bstack, rxquantr288_done593
    inc $I19
    inc $I19
    set rx263_rep, rx263_bstack[$I19]
    nqp_rxcommit rx263_bstack, rxquantr288_done593
    inc rx263_rep
    nqp_rxmark rx263_bstack, rxquantr288_done593, rx263_pos, rx263_rep
    goto rxquantr288_loop592
  rxquantr288_done593:
  alt289_0595:
    nqp_rxmark rx263_bstack, alt289_1597, rx263_pos, 0
    is_cclass $I11, .CCLASS_NEWLINE, rx263_tgt, rx263_pos
    if $I11, rxanchor290_done596
    ne rx263_pos, rx263_eos, rx263_fail541
    eq rx263_pos, 0, rxanchor290_done596
    sub $I11, rx263_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx263_tgt, $I11
    if $I11, rx263_fail541
  rxanchor290_done596:
    goto alt289_end594
  alt289_1597:
    nqp_rxmark rx263_bstack, alt289_2598, rx263_pos, 0
    add $I11, rx263_pos, 1
    gt $I11, rx263_eos, rx263_fail541
    substr $S10, rx263_tgt, rx263_pos, 1
    ne $S10, ucs4:"#", rx263_fail541
    add rx263_pos, 1
    goto alt289_end594
  alt289_2598:
    repr_bind_attr_int rx263_cur, rx263_curclass, "$!pos", rx263_pos
    $P11 = rx263_cur."panic"("Unrecognized token after =begin")
    repr_get_attr_int $I11, $P11, rx263_curclass, "$!pos"
    lt $I11, 0, rx263_fail541
    repr_get_attr_int rx263_pos, $P11, rx263_curclass, "$!pos"
  alt289_end594:
  alt292_0601:
    nqp_rxmark rx263_bstack, alt292_1610, rx263_pos, 0
    set rx263_rep, 0
    nqp_rxmark rx263_bstack, rxquantf293_loop602, rx263_pos, rx263_rep
    goto rxquantf293_done603
  rxquantf293_loop602:
    set $I12, rx263_rep
    ge rx263_pos, rx263_eos, rx263_fail541
    add rx263_pos, 1
    set rx263_rep, $I12
    inc rx263_rep
    nqp_rxmark rx263_bstack, rxquantf293_loop602, rx263_pos, rx263_rep
  rxquantf293_done603:
    ge rx263_pos, rx263_eos, rx263_fail541
    is_cclass $I11, .CCLASS_NEWLINE, rx263_tgt, rx263_pos
    unless $I11, rx263_fail541
    substr $S10, rx263_tgt, rx263_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx263_pos, $I11
    add rx263_pos, 1
    nqp_rxmark rx263_bstack, rxquantr294_done606, rx263_pos, 0
  rxquantr294_loop605:
    ge rx263_pos, rx263_eos, rx263_fail541
    substr $S11, rx263_tgt, rx263_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx263_fail541
    inc rx263_pos
    nqp_rxpeek $I19, rx263_bstack, rxquantr294_done606
    inc $I19
    inc $I19
    set rx263_rep, rx263_bstack[$I19]
    nqp_rxcommit rx263_bstack, rxquantr294_done606
    inc rx263_rep
    nqp_rxmark rx263_bstack, rxquantr294_done606, rx263_pos, rx263_rep
    goto rxquantr294_loop605
  rxquantr294_done606:
    add $I11, rx263_pos, 4
    gt $I11, rx263_eos, rx263_fail541
    substr $S10, rx263_tgt, rx263_pos, 4
    ne $S10, ucs4:"=end", rx263_fail541
    add rx263_pos, 4
    le rx263_pos, 0, rx263_fail541
    is_cclass $I11, .CCLASS_WORD, rx263_tgt, rx263_pos
    if $I11, rx263_fail541
    sub $I11, rx263_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx263_tgt, $I11
    unless $I11, rx263_fail541
    nqp_rxmark rx263_bstack, rxquantr296_done609, rx263_pos, 0
  rxquantr296_loop608:
    ge rx263_pos, rx263_eos, rx263_fail541
    is_cclass $I11, .CCLASS_NEWLINE, rx263_tgt, rx263_pos
    if $I11, rx263_fail541
    substr $S10, rx263_tgt, rx263_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx263_pos, $I11
    add rx263_pos, 1
    nqp_rxpeek $I19, rx263_bstack, rxquantr296_done609
    inc $I19
    inc $I19
    set rx263_rep, rx263_bstack[$I19]
    nqp_rxcommit rx263_bstack, rxquantr296_done609
    inc rx263_rep
    nqp_rxmark rx263_bstack, rxquantr296_done609, rx263_pos, rx263_rep
    goto rxquantr296_loop608
  rxquantr296_done609:
    goto alt292_end600
  alt292_1610:
    repr_bind_attr_int rx263_cur, rx263_curclass, "$!pos", rx263_pos
    $P11 = rx263_cur."panic"("=begin without matching =end")
    repr_get_attr_int $I11, $P11, rx263_curclass, "$!pos"
    lt $I11, 0, rx263_fail541
    repr_get_attr_int rx263_pos, $P11, rx263_curclass, "$!pos"
  alt292_end600:
    goto alt267_end551
  alt267_3612:
    repr_bind_attr_int rx263_cur, rx263_curclass, "$!pos", rx263_pos
    $P11 = rx263_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx263_curclass, "$!pos"
    lt $I11, 0, rx263_fail541
    nqp_rxmark rx263_bstack, rxsubrule298_pass613, -1, 0
  rxsubrule298_pass613:
    rx263_cstack = rx263_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx263_pos, $P11, rx263_curclass, "$!pos"
    set rx263_rep, 0
    nqp_rxmark rx263_bstack, rxquantf299_loop614, rx263_pos, rx263_rep
    goto rxquantf299_done615
  rxquantf299_loop614:
    set $I12, rx263_rep
    ge rx263_pos, rx263_eos, rx263_fail541
    add rx263_pos, 1
    set rx263_rep, $I12
    inc rx263_rep
    nqp_rxmark rx263_bstack, rxquantf299_loop614, rx263_pos, rx263_rep
  rxquantf299_done615:
    eq rx263_pos, 0, rxanchor300_done617
    ge rx263_pos, rx263_eos, rx263_fail541
    sub $I11, rx263_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx263_tgt, $I11
    unless $I11, rx263_fail541
  rxanchor300_done617:
    .const 'Sub' $P5001 = 'cuid_44_1367388600.55005' 
    capture_lex $P5001
    repr_bind_attr_int rx263_cur, rx263_curclass, "$!pos", rx263_pos
    $P11 = rx263_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx263_curclass, "$!pos"
    lt $I11, 0, rx263_fail541
    goto alt267_end551
  alt267_4637:
  alt308_0639:
    nqp_rxmark rx263_bstack, alt308_1640, rx263_pos, 0
    ge rx263_pos, rx263_eos, rx263_fail541
    is_cclass $I11, .CCLASS_WHITESPACE, rx263_tgt, rx263_pos
    unless $I11, rx263_fail541
    add rx263_pos, 1
    goto alt308_end638
  alt308_1640:
    repr_bind_attr_int rx263_cur, rx263_curclass, "$!pos", rx263_pos
    $P11 = rx263_cur."panic"("Illegal pod directive")
    repr_get_attr_int $I11, $P11, rx263_curclass, "$!pos"
    lt $I11, 0, rx263_fail541
    repr_get_attr_int rx263_pos, $P11, rx263_curclass, "$!pos"
  alt308_end638:
    nqp_rxmark rx263_bstack, rxquantr310_done643, rx263_pos, 0
  rxquantr310_loop642:
    ge rx263_pos, rx263_eos, rx263_fail541
    is_cclass $I11, .CCLASS_NEWLINE, rx263_tgt, rx263_pos
    if $I11, rx263_fail541
    substr $S10, rx263_tgt, rx263_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx263_pos, $I11
    add rx263_pos, 1
    nqp_rxpeek $I19, rx263_bstack, rxquantr310_done643
    inc $I19
    inc $I19
    set rx263_rep, rx263_bstack[$I19]
    nqp_rxcommit rx263_bstack, rxquantr310_done643
    inc rx263_rep
    nqp_rxmark rx263_bstack, rxquantr310_done643, rx263_pos, rx263_rep
    goto rxquantr310_loop642
  rxquantr310_done643:
    goto alt267_end551
  alt267_end551:
    nqp_rxcommit rx263_bstack, alt267_end551
    rx263_cur."!cursor_pass"(rx263_pos, "pod_comment", 'backtrack'=>1)
    .return (rx263_cur)
  rx263_restart540:
    repr_get_attr_obj rx263_cstack, rx263_cur, rx263_curclass, "$!cstack"
  rx263_fail541:
    unless rx263_bstack, rx263_done539
    pop $I19, rx263_bstack
    if_null rx263_cstack, rx263_cstack_done544
    unless rx263_cstack, rx263_cstack_done544
    dec $I19
    set $P11, rx263_cstack[$I19]
  rx263_cstack_done544:
    pop rx263_rep, rx263_bstack
    pop rx263_pos, rx263_bstack
    pop $I19, rx263_bstack
    lt rx263_pos, -1, rx263_done539
    lt rx263_pos, 0, rx263_fail541
    eq $I19, 0, rx263_fail541
    nqp_islist $I20, rx263_cstack
    unless $I20, rx263_jump542
    elements $I18, rx263_bstack
    le $I18, 0, rx263_cut543
    dec $I18
    set $I18, rx263_bstack[$I18]
  rx263_cut543:
    assign rx263_cstack, $I18
  rx263_jump542:
    jump $I19
  rx263_done539:
    rx263_cur."!cursor_fail"()
    .return (rx263_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_44_1367388600.55005") :anon :lex :outer("cuid_43_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx301_start
    .local string rx301_tgt
    .local int rx301_pos
    .local int rx301_off
    .local int rx301_eos
    .local int rx301_rep
    .local pmc rx301_cur
    .local pmc rx301_curclass
    .local pmc rx301_bstack
    .local pmc rx301_cstack
    rx301_start = self."!cursor_start_all"()
    set rx301_cur, rx301_start[0]
    set rx301_tgt, rx301_start[1]
    set rx301_pos, rx301_start[2]
    set rx301_curclass, rx301_start[3]
    set rx301_bstack, rx301_start[4]
    set $I19, rx301_start[5]
    store_lex unicode:"$\x{a2}", rx301_cur
    length rx301_eos, rx301_tgt
    eq $I19, 1, rx301_restart620
    gt rx301_pos, rx301_eos, rx301_fail621
    repr_get_attr_int $I11, self, rx301_curclass, "$!from"
    ne $I11, -1, rxscan302_done627
    goto rxscan302_scan626
  rxscan302_loop625:
    inc rx301_pos
    gt rx301_pos, rx301_eos, rx301_fail621
    repr_bind_attr_int rx301_cur, rx301_curclass, "$!from", rx301_pos
  rxscan302_scan626:
    nqp_rxmark rx301_bstack, rxscan302_loop625, rx301_pos, 0
  rxscan302_done627:
    nqp_rxmark rx301_bstack, rxquantr303_done629, rx301_pos, 0
  rxquantr303_loop628:
    ge rx301_pos, rx301_eos, rx301_fail621
    substr $S11, rx301_tgt, rx301_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx301_fail621
    inc rx301_pos
    nqp_rxpeek $I19, rx301_bstack, rxquantr303_done629
    inc $I19
    inc $I19
    set rx301_rep, rx301_bstack[$I19]
    nqp_rxcommit rx301_bstack, rxquantr303_done629
    inc rx301_rep
    nqp_rxmark rx301_bstack, rxquantr303_done629, rx301_pos, rx301_rep
    goto rxquantr303_loop628
  rxquantr303_done629:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt304_0631
    nqp_push_label $P11, alt304_1636
    nqp_rxmark rx301_bstack, alt304_end630, -1, 0
    rx301_cur."!alt"(rx301_pos, "alt_nfa__5_1367388602.43877", $P11)
    goto rx301_fail621
  alt304_0631:
    add $I11, rx301_pos, 1
    gt $I11, rx301_eos, rx301_fail621
    substr $S10, rx301_tgt, rx301_pos, 1
    ne $S10, ucs4:"=", rx301_fail621
    add rx301_pos, 1
    nqp_rxmark rx301_bstack, rxquantr305_done633, rx301_pos, 0
  rxquantr305_loop632:
    add $I11, rx301_pos, 3
    gt $I11, rx301_eos, rx301_fail621
    substr $S10, rx301_tgt, rx301_pos, 3
    ne $S10, ucs4:"cut", rx301_fail621
    add rx301_pos, 3
    le rx301_pos, 0, rx301_fail621
    is_cclass $I11, .CCLASS_WORD, rx301_tgt, rx301_pos
    if $I11, rx301_fail621
    sub $I11, rx301_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx301_tgt, $I11
    unless $I11, rx301_fail621
    repr_bind_attr_int rx301_cur, rx301_curclass, "$!pos", rx301_pos
    $P11 = rx301_cur."panic"("Obsolete pod format, please use =begin/=end instead")
    repr_get_attr_int $I11, $P11, rx301_curclass, "$!pos"
    lt $I11, 0, rx301_fail621
    repr_get_attr_int rx301_pos, $P11, rx301_curclass, "$!pos"
    nqp_rxpeek $I19, rx301_bstack, rxquantr305_done633
    inc $I19
    inc $I19
    set rx301_rep, rx301_bstack[$I19]
    nqp_rxcommit rx301_bstack, rxquantr305_done633
    inc rx301_rep
  rxquantr305_done633:
    goto alt304_end630
  alt304_1636:
    ge rx301_pos, rx301_eos, rx301_fail621
    is_cclass $I11, .CCLASS_NEWLINE, rx301_tgt, rx301_pos
    unless $I11, rx301_fail621
    substr $S10, rx301_tgt, rx301_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx301_pos, $I11
    add rx301_pos, 1
    goto alt304_end630
  alt304_end630:
    nqp_rxcommit rx301_bstack, alt304_end630
    rx301_cur."!cursor_pass"(rx301_pos, 'backtrack'=>1)
    .return (rx301_cur)
  rx301_restart620:
    repr_get_attr_obj rx301_cstack, rx301_cur, rx301_curclass, "$!cstack"
  rx301_fail621:
    unless rx301_bstack, rx301_done619
    pop $I19, rx301_bstack
    if_null rx301_cstack, rx301_cstack_done624
    unless rx301_cstack, rx301_cstack_done624
    dec $I19
    set $P11, rx301_cstack[$I19]
  rx301_cstack_done624:
    pop rx301_rep, rx301_bstack
    pop rx301_pos, rx301_bstack
    pop $I19, rx301_bstack
    lt rx301_pos, -1, rx301_done619
    lt rx301_pos, 0, rx301_fail621
    eq $I19, 0, rx301_fail621
    nqp_islist $I20, rx301_cstack
    unless $I20, rx301_jump622
    elements $I18, rx301_bstack
    le $I18, 0, rx301_cut623
    dec $I18
    set $I18, rx301_bstack[$I18]
  rx301_cut623:
    assign rx301_cstack, $I18
  rx301_jump622:
    jump $I19
  rx301_done619:
    rx301_cur."!cursor_fail"()
    .return (rx301_cur) 
.end
.HLL "nqp"
.namespace []
.sub "comp_unit" :subid("cuid_45_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 737
    .param pmc _lex_param_0 
    .const 'Sub' $P5073 = 'cuid_399_1367388600.55005' 
    capture_lex $P5073 
    .const 'Sub' $P5073 = 'cuid_400_1367388600.55005' 
    capture_lex $P5073 
    .const 'Sub' $P5073 = 'cuid_402_1367388600.55005' 
    capture_lex $P5073 
    .const 'Sub' $P5073 = 'cuid_403_1367388600.55005' 
    capture_lex $P5073 
    .lex "$*IN_DECL", $P101 
    .lex "$*HAS_YOU_ARE_HERE", $P102 
    .lex "$*MAIN_SUB", $P103 
    .lex "$*UNIT", $P104 
    .lex "$*GLOBALish", $P105 
    .lex "$*PACKAGE", $P106 
    .lex "$*EXPORT", $P107 
    .lex utf8:"$\x{a2}", $P108 
    .lex "$/", $P109 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_68 
    .local pmc fb_tmp_69 
    .local pmc fb_tmp_70 
    .local pmc fb_tmp_71 
    .local pmc fb_tmp_72 
    .local pmc pkg_viv_tmp_18 
    .local pmc fb_tmp_78 
    .local pmc fb_tmp_82 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P105, $P5005
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P106, $P5006
    nqp_get_sc_object $P5007, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P107, $P5007
    set self, _lex_param_0
    .local pmc rx311_start
    .local string rx311_tgt
    .local int rx311_pos
    .local int rx311_off
    .local int rx311_eos
    .local int rx311_rep
    .local pmc rx311_cur
    .local pmc rx311_curclass
    .local pmc rx311_bstack
    .local pmc rx311_cstack
    rx311_start = self."!cursor_start_all"()
    set rx311_cur, rx311_start[0]
    set rx311_tgt, rx311_start[1]
    set rx311_pos, rx311_start[2]
    set rx311_curclass, rx311_start[3]
    set rx311_bstack, rx311_start[4]
    set $I19, rx311_start[5]
    store_lex unicode:"$\x{a2}", rx311_cur
    length rx311_eos, rx311_tgt
    eq $I19, 1, rx311_restart646
    gt rx311_pos, rx311_eos, rx311_fail647
    repr_get_attr_int $I11, self, rx311_curclass, "$!from"
    ne $I11, -1, rxscan312_done653
    goto rxscan312_scan652
  rxscan312_loop651:
    inc rx311_pos
    gt rx311_pos, rx311_eos, rx311_fail647
    repr_bind_attr_int rx311_cur, rx311_curclass, "$!from", rx311_pos
  rxscan312_scan652:
    nqp_rxmark rx311_bstack, rxscan312_loop651, rx311_pos, 0
  rxscan312_done653:
    repr_bind_attr_int rx311_cur, rx311_curclass, "$!pos", rx311_pos
    store_lex unicode:"$\x{a2}", rx311_cur
    box $P5008, ""
    set $P101, $P5008
    repr_bind_attr_int rx311_cur, rx311_curclass, "$!pos", rx311_pos
    store_lex unicode:"$\x{a2}", rx311_cur
    box $P5009, 0
    set $P102, $P5009
    repr_bind_attr_int rx311_cur, rx311_curclass, "$!pos", rx311_pos
    store_lex unicode:"$\x{a2}", rx311_cur
    unless_null $P103, fallback654
    nqp_get_sc_object $P5011, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5010, $P5011
    set fb_tmp_68, $P5010
    repr_defined $I5001, fb_tmp_68
    unless $I5001 goto if313_else655 
    set $P5012, fb_tmp_68["$MAIN_SUB"]
    set $P5014, $P5012
    goto if313_end656
  if313_else655:
    null $P5013
    set $P5014, $P5013
  if313_end656:
    unless_null $P5014, vivi_314657
    nqp_get_sc_object $P5015, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5014, $P5015
  vivi_314657:
    unless_null $P5014, vivi_315658
    die "Contextual $*MAIN_SUB not found"
    box $P5016, "Contextual $*MAIN_SUB not found"
    set $P5014, $P5016
  vivi_315658:
    set $P103, $P5014
  fallback654:
    repr_bind_attr_int rx311_cur, rx311_curclass, "$!pos", rx311_pos
    store_lex unicode:"$\x{a2}", rx311_cur
.annotate 'line', 742
    find_dynamic_lex $P5017, "$*W"
    unless_null $P5017, fallback659
    nqp_get_sc_object $P5019, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5018, $P5019
    set fb_tmp_69, $P5018
    repr_defined $I5002, fb_tmp_69
    unless $I5002 goto if316_else660 
    set $P5020, fb_tmp_69["$W"]
    set $P5022, $P5020
    goto if316_end661
  if316_else660:
    null $P5021
    set $P5022, $P5021
  if316_end661:
    unless_null $P5022, vivi_317662
    nqp_get_sc_object $P5023, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5022, $P5023
  vivi_317662:
    unless_null $P5022, vivi_318663
    die "Contextual $*W not found"
    box $P5024, "Contextual $*W not found"
    set $P5022, $P5024
  vivi_318663:
    set $P5017, $P5022
  fallback659:
    $P5025 = $P5017."push_lexpad"($P109)
    set $P104, $P5025
    repr_bind_attr_int rx311_cur, rx311_curclass, "$!pos", rx311_pos
    store_lex unicode:"$\x{a2}", rx311_cur
.annotate 'line', 746
    find_dynamic_lex $P5026, "$*W"
    unless_null $P5026, fallback664
    nqp_get_sc_object $P5028, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5027, $P5028
    set fb_tmp_70, $P5027
    repr_defined $I5003, fb_tmp_70
    unless $I5003 goto if319_else665 
    set $P5029, fb_tmp_70["$W"]
    set $P5031, $P5029
    goto if319_end666
  if319_else665:
    null $P5030
    set $P5031, $P5030
  if319_end666:
    unless_null $P5031, vivi_320667
    nqp_get_sc_object $P5032, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5031, $P5032
  vivi_320667:
    unless_null $P5031, vivi_321668
    die "Contextual $*W not found"
    box $P5033, "Contextual $*W not found"
    set $P5031, $P5033
  vivi_321668:
    set $P5026, $P5031
  fallback664:
    find_dynamic_lex $P5034, "%*HOW"
    unless_null $P5034, fallback671
    nqp_get_sc_object $P5036, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5035, $P5036
    set pkg_viv_tmp_18, $P5035
    set fb_tmp_72, pkg_viv_tmp_18
    repr_defined $I5005, fb_tmp_72
    unless $I5005 goto if323_else672 
    set $P5037, fb_tmp_72["%HOW"]
    set $P5039, $P5037
    goto if323_end673
  if323_else672:
    null $P5038
    set $P5039, $P5038
  if323_end673:
    unless_null $P5039, vivi_324674
    new $P5040, 'Hash'
    set pkg_viv_tmp_18["%HOW"], $P5040
    set $P5039, $P5040
  vivi_324674:
    unless_null $P5039, vivi_325675
    die "Contextual %*HOW not found"
    box $P5041, "Contextual %*HOW not found"
    set $P5039, $P5041
  vivi_325675:
    set $P5034, $P5039
  fallback671:
    set fb_tmp_71, $P5034
    repr_defined $I5004, fb_tmp_71
    unless $I5004 goto if322_else669 
    set $P5042, fb_tmp_71["knowhow"]
    set $P5044, $P5042
    goto if322_end670
  if322_else669:
    null $P5043
    set $P5044, $P5043
  if322_end670:
    unless_null $P5044, vivi_326676
    nqp_get_sc_object $P5045, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5044, $P5045
  vivi_326676:
    $P5046 = $P5026."pkg_create_mo"($P5044, "GLOBALish" :named("name"))
    set $P105, $P5046
    repr_bind_attr_int rx311_cur, rx311_curclass, "$!pos", rx311_pos
    store_lex unicode:"$\x{a2}", rx311_cur
    $P5047 = $P108."MATCH"()
    set $P109, $P5047
    .const 'Sub' $P5048 = 'cuid_399_1367388600.55005' 
    capture_lex $P5048
    $P5049 = $P5048()
    repr_bind_attr_int rx311_cur, rx311_curclass, "$!pos", rx311_pos
    store_lex unicode:"$\x{a2}", rx311_cur
    unless_null $P105, fallback702
    nqp_get_sc_object $P5051, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5050, $P5051
    set fb_tmp_78, $P5050
    repr_defined $I5006, fb_tmp_78
    unless $I5006 goto if342_else703 
    set $P5052, fb_tmp_78["$GLOBALish"]
    set $P5054, $P5052
    goto if342_end704
  if342_else703:
    null $P5053
    set $P5054, $P5053
  if342_end704:
    unless_null $P5054, vivi_343705
    nqp_get_sc_object $P5055, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5054, $P5055
  vivi_343705:
    unless_null $P5054, vivi_344706
    die "Contextual $*GLOBALish not found"
    box $P5056, "Contextual $*GLOBALish not found"
    set $P5054, $P5056
  vivi_344706:
    set $P105, $P5054
  fallback702:
    set $P106, $P105
    repr_bind_attr_int rx311_cur, rx311_curclass, "$!pos", rx311_pos
    store_lex unicode:"$\x{a2}", rx311_cur
    $P5057 = $P108."MATCH"()
    set $P109, $P5057
    .const 'Sub' $P5058 = 'cuid_400_1367388600.55005' 
    capture_lex $P5058
    $P5059 = $P5058()
    repr_bind_attr_int rx311_cur, rx311_curclass, "$!pos", rx311_pos
    store_lex unicode:"$\x{a2}", rx311_cur
    unless_null $P107, fallback722
    nqp_get_sc_object $P5061, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5060, $P5061
    set fb_tmp_82, $P5060
    repr_defined $I5007, fb_tmp_82
    unless $I5007 goto if354_else723 
    set $P5062, fb_tmp_82["$EXPORT"]
    set $P5064, $P5062
    goto if354_end724
  if354_else723:
    null $P5063
    set $P5064, $P5063
  if354_end724:
    unless_null $P5064, vivi_355725
    nqp_get_sc_object $P5065, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5064, $P5065
  vivi_355725:
    unless_null $P5064, vivi_356726
    die "Contextual $*EXPORT not found"
    box $P5066, "Contextual $*EXPORT not found"
    set $P5064, $P5066
  vivi_356726:
    set $P107, $P5064
  fallback722:
    repr_bind_attr_int rx311_cur, rx311_curclass, "$!pos", rx311_pos
    store_lex unicode:"$\x{a2}", rx311_cur
    $P5067 = $P108."MATCH"()
    set $P109, $P5067
    .const 'Sub' $P5068 = 'cuid_402_1367388600.55005' 
    capture_lex $P5068
    $P5069 = $P5068()
    repr_bind_attr_int rx311_cur, rx311_curclass, "$!pos", rx311_pos
    store_lex unicode:"$\x{a2}", rx311_cur
    $P5070 = $P108."MATCH"()
    set $P109, $P5070
    .const 'Sub' $P5071 = 'cuid_403_1367388600.55005' 
    capture_lex $P5071
    $P5072 = $P5071()
    repr_bind_attr_int rx311_cur, rx311_curclass, "$!pos", rx311_pos
    $P11 = rx311_cur."outerctx"()
    repr_get_attr_int $I11, $P11, rx311_curclass, "$!pos"
    lt $I11, 0, rx311_fail647
    repr_get_attr_int rx311_pos, $P11, rx311_curclass, "$!pos"
    repr_bind_attr_int rx311_cur, rx311_curclass, "$!pos", rx311_pos
    $P11 = rx311_cur."statementlist"()
    repr_get_attr_int $I11, $P11, rx311_curclass, "$!pos"
    lt $I11, 0, rx311_fail647
    nqp_rxmark rx311_bstack, rxsubrule403_pass802, -1, 0
  rxsubrule403_pass802:
    rx311_cstack = rx311_cur."!cursor_capture"($P11, "statementlist")
    repr_get_attr_int rx311_pos, $P11, rx311_curclass, "$!pos"
  alt404_0804:
    nqp_rxmark rx311_bstack, alt404_1806, rx311_pos, 0
    lt rx311_pos, rx311_eos, rx311_fail647
    goto alt404_end803
  alt404_1806:
    repr_bind_attr_int rx311_cur, rx311_curclass, "$!pos", rx311_pos
    $P11 = rx311_cur."panic"("Confused")
    repr_get_attr_int $I11, $P11, rx311_curclass, "$!pos"
    lt $I11, 0, rx311_fail647
    repr_get_attr_int rx311_pos, $P11, rx311_curclass, "$!pos"
  alt404_end803:
    rx311_cur."!cursor_pass"(rx311_pos, "comp_unit", 'backtrack'=>1)
    .return (rx311_cur)
  rx311_restart646:
    repr_get_attr_obj rx311_cstack, rx311_cur, rx311_curclass, "$!cstack"
  rx311_fail647:
    unless rx311_bstack, rx311_done645
    pop $I19, rx311_bstack
    if_null rx311_cstack, rx311_cstack_done650
    unless rx311_cstack, rx311_cstack_done650
    dec $I19
    set $P11, rx311_cstack[$I19]
  rx311_cstack_done650:
    pop rx311_rep, rx311_bstack
    pop rx311_pos, rx311_bstack
    pop $I19, rx311_bstack
    lt rx311_pos, -1, rx311_done645
    lt rx311_pos, 0, rx311_fail647
    eq $I19, 0, rx311_fail647
    nqp_islist $I20, rx311_cstack
    unless $I20, rx311_jump648
    elements $I18, rx311_bstack
    le $I18, 0, rx311_cut649
    dec $I18
    set $I18, rx311_bstack[$I18]
  rx311_cut649:
    assign rx311_cstack, $I18
  rx311_jump648:
    jump $I19
  rx311_done645:
    rx311_cur."!cursor_fail"()
    .return (rx311_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_399_1367388600.55005") :anon :lex :outer("cuid_45_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 747
    .local pmc fb_tmp_73 
    .local pmc fb_tmp_74 
    .local pmc fb_tmp_75 
    .local pmc fb_tmp_76 
    .local pmc fb_tmp_77 
.annotate 'line', 748
    find_dynamic_lex $P5002, "$*GLOBALish"
    unless_null $P5002, fallback677
    nqp_get_sc_object $P5004, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5003, $P5004
    set fb_tmp_73, $P5003
    repr_defined $I5001, fb_tmp_73
    unless $I5001 goto if327_else678 
    set $P5005, fb_tmp_73["$GLOBALish"]
    set $P5007, $P5005
    goto if327_end679
  if327_else678:
    null $P5006
    set $P5007, $P5006
  if327_end679:
    unless_null $P5007, vivi_328680
    nqp_get_sc_object $P5008, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5007, $P5008
  vivi_328680:
    unless_null $P5007, vivi_329681
    die "Contextual $*GLOBALish not found"
    box $P5009, "Contextual $*GLOBALish not found"
    set $P5007, $P5009
  vivi_329681:
    set $P5002, $P5007
  fallback677:
    get_how $P5001, $P5002
    find_dynamic_lex $P5010, "$*GLOBALish"
    unless_null $P5010, fallback682
    nqp_get_sc_object $P5012, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5011, $P5012
    set fb_tmp_74, $P5011
    repr_defined $I5002, fb_tmp_74
    unless $I5002 goto if330_else683 
    set $P5013, fb_tmp_74["$GLOBALish"]
    set $P5015, $P5013
    goto if330_end684
  if330_else683:
    null $P5014
    set $P5015, $P5014
  if330_end684:
    unless_null $P5015, vivi_331685
    nqp_get_sc_object $P5016, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5015, $P5016
  vivi_331685:
    unless_null $P5015, vivi_332686
    die "Contextual $*GLOBALish not found"
    box $P5017, "Contextual $*GLOBALish not found"
    set $P5015, $P5017
  vivi_332686:
    set $P5010, $P5015
  fallback682:
    $P5001."compose"($P5010)
.annotate 'line', 749
    find_dynamic_lex $P5018, "$*W"
    unless_null $P5018, fallback687
    nqp_get_sc_object $P5020, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5019, $P5020
    set fb_tmp_75, $P5019
    repr_defined $I5003, fb_tmp_75
    unless $I5003 goto if333_else688 
    set $P5021, fb_tmp_75["$W"]
    set $P5023, $P5021
    goto if333_end689
  if333_else688:
    null $P5022
    set $P5023, $P5022
  if333_end689:
    unless_null $P5023, vivi_334690
    nqp_get_sc_object $P5024, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5023, $P5024
  vivi_334690:
    unless_null $P5023, vivi_335691
    die "Contextual $*W not found"
    box $P5025, "Contextual $*W not found"
    set $P5023, $P5025
  vivi_335691:
    set $P5018, $P5023
  fallback687:
    find_dynamic_lex $P5026, "$*UNIT"
    unless_null $P5026, fallback692
    nqp_get_sc_object $P5028, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5027, $P5028
    set fb_tmp_76, $P5027
    repr_defined $I5004, fb_tmp_76
    unless $I5004 goto if336_else693 
    set $P5029, fb_tmp_76["$UNIT"]
    set $P5031, $P5029
    goto if336_end694
  if336_else693:
    null $P5030
    set $P5031, $P5030
  if336_end694:
    unless_null $P5031, vivi_337695
    nqp_get_sc_object $P5032, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5031, $P5032
  vivi_337695:
    unless_null $P5031, vivi_338696
    die "Contextual $*UNIT not found"
    box $P5033, "Contextual $*UNIT not found"
    set $P5031, $P5033
  vivi_338696:
    set $P5026, $P5031
  fallback692:
    find_dynamic_lex $P5034, "$*GLOBALish"
    unless_null $P5034, fallback697
    nqp_get_sc_object $P5036, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5035, $P5036
    set fb_tmp_77, $P5035
    repr_defined $I5005, fb_tmp_77
    unless $I5005 goto if339_else698 
    set $P5037, fb_tmp_77["$GLOBALish"]
    set $P5039, $P5037
    goto if339_end699
  if339_else698:
    null $P5038
    set $P5039, $P5038
  if339_end699:
    unless_null $P5039, vivi_340700
    nqp_get_sc_object $P5040, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5039, $P5040
  vivi_340700:
    unless_null $P5039, vivi_341701
    die "Contextual $*GLOBALish not found"
    box $P5041, "Contextual $*GLOBALish not found"
    set $P5039, $P5041
  vivi_341701:
    set $P5034, $P5039
  fallback697:
    $P5042 = $P5018."install_lexical_symbol"($P5026, "GLOBALish", $P5034)
    .return ($P5042) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_400_1367388600.55005") :anon :lex :outer("cuid_45_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 754
    .local pmc fb_tmp_79 
    .local pmc fb_tmp_80 
    .local pmc fb_tmp_81 
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback707
    nqp_get_sc_object $P5003, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5002, $P5003
    set fb_tmp_79, $P5002
    repr_defined $I5001, fb_tmp_79
    unless $I5001 goto if345_else708 
    set $P5004, fb_tmp_79["$W"]
    set $P5006, $P5004
    goto if345_end709
  if345_else708:
    null $P5005
    set $P5006, $P5005
  if345_end709:
    unless_null $P5006, vivi_346710
    nqp_get_sc_object $P5007, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5006, $P5007
  vivi_346710:
    unless_null $P5006, vivi_347711
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_347711:
    set $P5001, $P5006
  fallback707:
    find_dynamic_lex $P5009, "$*UNIT"
    unless_null $P5009, fallback712
    nqp_get_sc_object $P5011, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5010, $P5011
    set fb_tmp_80, $P5010
    repr_defined $I5002, fb_tmp_80
    unless $I5002 goto if348_else713 
    set $P5012, fb_tmp_80["$UNIT"]
    set $P5014, $P5012
    goto if348_end714
  if348_else713:
    null $P5013
    set $P5014, $P5013
  if348_end714:
    unless_null $P5014, vivi_349715
    nqp_get_sc_object $P5015, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5014, $P5015
  vivi_349715:
    unless_null $P5014, vivi_350716
    die "Contextual $*UNIT not found"
    box $P5016, "Contextual $*UNIT not found"
    set $P5014, $P5016
  vivi_350716:
    set $P5009, $P5014
  fallback712:
    find_dynamic_lex $P5017, "$*PACKAGE"
    unless_null $P5017, fallback717
    nqp_get_sc_object $P5019, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5018, $P5019
    set fb_tmp_81, $P5018
    repr_defined $I5003, fb_tmp_81
    unless $I5003 goto if351_else718 
    set $P5020, fb_tmp_81["$PACKAGE"]
    set $P5022, $P5020
    goto if351_end719
  if351_else718:
    null $P5021
    set $P5022, $P5021
  if351_end719:
    unless_null $P5022, vivi_352720
    nqp_get_sc_object $P5023, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5022, $P5023
  vivi_352720:
    unless_null $P5022, vivi_353721
    die "Contextual $*PACKAGE not found"
    box $P5024, "Contextual $*PACKAGE not found"
    set $P5022, $P5024
  vivi_353721:
    set $P5017, $P5022
  fallback717:
    $P5025 = $P5001."install_lexical_symbol"($P5009, "$?PACKAGE", $P5017)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_402_1367388600.55005") :anon :lex :outer("cuid_45_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 758
    .const 'Sub' $P5021 = 'cuid_401_1367388600.55005' 
    capture_lex $P5021 
    .local pmc fb_tmp_83 
    .local pmc fb_tmp_84 
    .local pmc fb_tmp_85 
    .local pmc pkg_viv_tmp_19 
    find_dynamic_lex $P5001, "%*COMPILING"
    unless_null $P5001, fallback733
    nqp_get_sc_object $P5003, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_19, $P5002
    set fb_tmp_85, pkg_viv_tmp_19
    repr_defined $I5004, fb_tmp_85
    unless $I5004 goto if360_else734 
    set $P5004, fb_tmp_85["%COMPILING"]
    set $P5006, $P5004
    goto if360_end735
  if360_else734:
    null $P5005
    set $P5006, $P5005
  if360_end735:
    unless_null $P5006, vivi_361736
    new $P5007, 'Hash'
    set pkg_viv_tmp_19["%COMPILING"], $P5007
    set $P5006, $P5007
  vivi_361736:
    unless_null $P5006, vivi_362737
    die "Contextual %*COMPILING not found"
    box $P5008, "Contextual %*COMPILING not found"
    set $P5006, $P5008
  vivi_362737:
    set $P5001, $P5006
  fallback733:
    set fb_tmp_84, $P5001
    repr_defined $I5003, fb_tmp_84
    unless $I5003 goto if359_else731 
    set $P5009, fb_tmp_84["%?OPTIONS"]
    set $P5011, $P5009
    goto if359_end732
  if359_else731:
    null $P5010
    set $P5011, $P5010
  if359_end732:
    unless_null $P5011, vivi_363738
    nqp_get_sc_object $P5012, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5011, $P5012
  vivi_363738:
    set fb_tmp_83, $P5011
    repr_defined $I5002, fb_tmp_83
    unless $I5002 goto if358_else729 
    set $P5013, fb_tmp_83["setting"]
    set $P5015, $P5013
    goto if358_end730
  if358_else729:
    null $P5014
    set $P5015, $P5014
  if358_end730:
    unless_null $P5015, vivi_364739
    nqp_get_sc_object $P5016, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5015, $P5016
  vivi_364739:
    set $S5001, $P5015
    iseq $I5001, $S5001, "NULL"
    box $P5020, $I5001
    set $P5019, $P5020
    if $I5001 goto unless357_end728 
    .const 'Sub' $P5017 = 'cuid_401_1367388600.55005' 
    capture_lex $P5017
    $P5018 = $P5017()
    set $P5019, $P5018
  unless357_end728:
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_401_1367388600.55005") :anon :lex :outer("cuid_402_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 759
    .lex "$DEFAULT", $P101 
    .local pmc fb_tmp_86 
    .local pmc fb_tmp_87 
    .local pmc fb_tmp_88 
    .local pmc pkg_viv_tmp_20 
    .local pmc fb_tmp_89 
    .local pmc fb_tmp_90 
    .local pmc fb_tmp_91 
    .local pmc fb_tmp_92 
    .local pmc fb_tmp_93 
    .local pmc fb_tmp_94 
    .local pmc fb_tmp_95 
    .local pmc fb_tmp_96 
    .local pmc pkg_viv_tmp_21 
    .local pmc fb_tmp_97 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
.annotate 'line', 760
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback740
    nqp_get_sc_object $P5004, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5003, $P5004
    set fb_tmp_86, $P5003
    repr_defined $I5001, fb_tmp_86
    unless $I5001 goto if365_else741 
    set $P5005, fb_tmp_86["$W"]
    set $P5007, $P5005
    goto if365_end742
  if365_else741:
    null $P5006
    set $P5007, $P5006
  if365_end742:
    unless_null $P5007, vivi_366743
    nqp_get_sc_object $P5008, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5007, $P5008
  vivi_366743:
    unless_null $P5007, vivi_367744
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_367744:
    set $P5002, $P5007
  fallback740:
    find_dynamic_lex $P5010, "%*HOW"
    unless_null $P5010, fallback747
    nqp_get_sc_object $P5012, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5011, $P5012
    set pkg_viv_tmp_20, $P5011
    set fb_tmp_88, pkg_viv_tmp_20
    repr_defined $I5003, fb_tmp_88
    unless $I5003 goto if369_else748 
    set $P5013, fb_tmp_88["%HOW"]
    set $P5015, $P5013
    goto if369_end749
  if369_else748:
    null $P5014
    set $P5015, $P5014
  if369_end749:
    unless_null $P5015, vivi_370750
    new $P5016, 'Hash'
    set pkg_viv_tmp_20["%HOW"], $P5016
    set $P5015, $P5016
  vivi_370750:
    unless_null $P5015, vivi_371751
    die "Contextual %*HOW not found"
    box $P5017, "Contextual %*HOW not found"
    set $P5015, $P5017
  vivi_371751:
    set $P5010, $P5015
  fallback747:
    set fb_tmp_87, $P5010
    repr_defined $I5002, fb_tmp_87
    unless $I5002 goto if368_else745 
    set $P5018, fb_tmp_87["knowhow"]
    set $P5020, $P5018
    goto if368_end746
  if368_else745:
    null $P5019
    set $P5020, $P5019
  if368_end746:
    unless_null $P5020, vivi_372752
    nqp_get_sc_object $P5021, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5020, $P5021
  vivi_372752:
    $P5022 = $P5002."pkg_create_mo"($P5020, "EXPORT" :named("name"))
    store_dynamic_lex "$*EXPORT", $P5022
.annotate 'line', 761
    find_dynamic_lex $P5024, "$*EXPORT"
    unless_null $P5024, fallback753
    nqp_get_sc_object $P5026, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5025, $P5026
    set fb_tmp_89, $P5025
    repr_defined $I5004, fb_tmp_89
    unless $I5004 goto if373_else754 
    set $P5027, fb_tmp_89["$EXPORT"]
    set $P5029, $P5027
    goto if373_end755
  if373_else754:
    null $P5028
    set $P5029, $P5028
  if373_end755:
    unless_null $P5029, vivi_374756
    nqp_get_sc_object $P5030, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5029, $P5030
  vivi_374756:
    unless_null $P5029, vivi_375757
    die "Contextual $*EXPORT not found"
    box $P5031, "Contextual $*EXPORT not found"
    set $P5029, $P5031
  vivi_375757:
    set $P5024, $P5029
  fallback753:
    get_how $P5023, $P5024
    find_dynamic_lex $P5032, "$*EXPORT"
    unless_null $P5032, fallback758
    nqp_get_sc_object $P5034, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5033, $P5034
    set fb_tmp_90, $P5033
    repr_defined $I5005, fb_tmp_90
    unless $I5005 goto if376_else759 
    set $P5035, fb_tmp_90["$EXPORT"]
    set $P5037, $P5035
    goto if376_end760
  if376_else759:
    null $P5036
    set $P5037, $P5036
  if376_end760:
    unless_null $P5037, vivi_377761
    nqp_get_sc_object $P5038, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5037, $P5038
  vivi_377761:
    unless_null $P5037, vivi_378762
    die "Contextual $*EXPORT not found"
    box $P5039, "Contextual $*EXPORT not found"
    set $P5037, $P5039
  vivi_378762:
    set $P5032, $P5037
  fallback758:
    $P5023."compose"($P5032)
.annotate 'line', 762
    find_dynamic_lex $P5040, "$*W"
    unless_null $P5040, fallback763
    nqp_get_sc_object $P5042, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5041, $P5042
    set fb_tmp_91, $P5041
    repr_defined $I5006, fb_tmp_91
    unless $I5006 goto if379_else764 
    set $P5043, fb_tmp_91["$W"]
    set $P5045, $P5043
    goto if379_end765
  if379_else764:
    null $P5044
    set $P5045, $P5044
  if379_end765:
    unless_null $P5045, vivi_380766
    nqp_get_sc_object $P5046, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5045, $P5046
  vivi_380766:
    unless_null $P5045, vivi_381767
    die "Contextual $*W not found"
    box $P5047, "Contextual $*W not found"
    set $P5045, $P5047
  vivi_381767:
    set $P5040, $P5045
  fallback763:
    find_dynamic_lex $P5048, "$*UNIT"
    unless_null $P5048, fallback768
    nqp_get_sc_object $P5050, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5049, $P5050
    set fb_tmp_92, $P5049
    repr_defined $I5007, fb_tmp_92
    unless $I5007 goto if382_else769 
    set $P5051, fb_tmp_92["$UNIT"]
    set $P5053, $P5051
    goto if382_end770
  if382_else769:
    null $P5052
    set $P5053, $P5052
  if382_end770:
    unless_null $P5053, vivi_383771
    nqp_get_sc_object $P5054, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5053, $P5054
  vivi_383771:
    unless_null $P5053, vivi_384772
    die "Contextual $*UNIT not found"
    box $P5055, "Contextual $*UNIT not found"
    set $P5053, $P5055
  vivi_384772:
    set $P5048, $P5053
  fallback768:
    find_dynamic_lex $P5056, "$*EXPORT"
    unless_null $P5056, fallback773
    nqp_get_sc_object $P5058, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5057, $P5058
    set fb_tmp_93, $P5057
    repr_defined $I5008, fb_tmp_93
    unless $I5008 goto if385_else774 
    set $P5059, fb_tmp_93["$EXPORT"]
    set $P5061, $P5059
    goto if385_end775
  if385_else774:
    null $P5060
    set $P5061, $P5060
  if385_end775:
    unless_null $P5061, vivi_386776
    nqp_get_sc_object $P5062, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5061, $P5062
  vivi_386776:
    unless_null $P5061, vivi_387777
    die "Contextual $*EXPORT not found"
    box $P5063, "Contextual $*EXPORT not found"
    set $P5061, $P5063
  vivi_387777:
    set $P5056, $P5061
  fallback773:
    $P5040."install_lexical_symbol"($P5048, "EXPORT", $P5056)
.annotate 'line', 763
    find_dynamic_lex $P5064, "$*W"
    unless_null $P5064, fallback778
    nqp_get_sc_object $P5066, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5065, $P5066
    set fb_tmp_94, $P5065
    repr_defined $I5009, fb_tmp_94
    unless $I5009 goto if388_else779 
    set $P5067, fb_tmp_94["$W"]
    set $P5069, $P5067
    goto if388_end780
  if388_else779:
    null $P5068
    set $P5069, $P5068
  if388_end780:
    unless_null $P5069, vivi_389781
    nqp_get_sc_object $P5070, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5069, $P5070
  vivi_389781:
    unless_null $P5069, vivi_390782
    die "Contextual $*W not found"
    box $P5071, "Contextual $*W not found"
    set $P5069, $P5071
  vivi_390782:
    set $P5064, $P5069
  fallback778:
    find_dynamic_lex $P5072, "%*HOW"
    unless_null $P5072, fallback785
    nqp_get_sc_object $P5074, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5073, $P5074
    set pkg_viv_tmp_21, $P5073
    set fb_tmp_96, pkg_viv_tmp_21
    repr_defined $I5011, fb_tmp_96
    unless $I5011 goto if392_else786 
    set $P5075, fb_tmp_96["%HOW"]
    set $P5077, $P5075
    goto if392_end787
  if392_else786:
    null $P5076
    set $P5077, $P5076
  if392_end787:
    unless_null $P5077, vivi_393788
    new $P5078, 'Hash'
    set pkg_viv_tmp_21["%HOW"], $P5078
    set $P5077, $P5078
  vivi_393788:
    unless_null $P5077, vivi_394789
    die "Contextual %*HOW not found"
    box $P5079, "Contextual %*HOW not found"
    set $P5077, $P5079
  vivi_394789:
    set $P5072, $P5077
  fallback785:
    set fb_tmp_95, $P5072
    repr_defined $I5010, fb_tmp_95
    unless $I5010 goto if391_else783 
    set $P5080, fb_tmp_95["knowhow"]
    set $P5082, $P5080
    goto if391_end784
  if391_else783:
    null $P5081
    set $P5082, $P5081
  if391_end784:
    unless_null $P5082, vivi_395790
    nqp_get_sc_object $P5083, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5082, $P5083
  vivi_395790:
    $P5084 = $P5064."pkg_create_mo"($P5082, "DEFAULT" :named("name"))
    set $P101, $P5084
.annotate 'line', 764
    get_how $P5085, $P101
    $P5085."compose"($P101)
    find_dynamic_lex $P5087, "$*EXPORT"
    unless_null $P5087, fallback791
    nqp_get_sc_object $P5089, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5088, $P5089
    set fb_tmp_97, $P5088
    repr_defined $I5012, fb_tmp_97
    unless $I5012 goto if396_else792 
    set $P5090, fb_tmp_97["$EXPORT"]
    set $P5092, $P5090
    goto if396_end793
  if396_else792:
    null $P5091
    set $P5092, $P5091
  if396_end793:
    unless_null $P5092, vivi_397794
    nqp_get_sc_object $P5093, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5092, $P5093
  vivi_397794:
    unless_null $P5092, vivi_398795
    die "Contextual $*EXPORT not found"
    box $P5094, "Contextual $*EXPORT not found"
    set $P5092, $P5094
  vivi_398795:
    set $P5087, $P5092
  fallback791:
    get_who $P5086, $P5087
    set $P5086["DEFAULT"], $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_403_1367388600.55005") :anon :lex :outer("cuid_45_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 769
    .local pmc fb_tmp_98 
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback796
    nqp_get_sc_object $P5003, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5002, $P5003
    set fb_tmp_98, $P5002
    repr_defined $I5001, fb_tmp_98
    unless $I5001 goto if399_else797 
    set $P5004, fb_tmp_98["$W"]
    set $P5006, $P5004
    goto if399_end798
  if399_else797:
    null $P5005
    set $P5006, $P5005
  if399_end798:
    unless_null $P5006, vivi_400799
    nqp_get_sc_object $P5007, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5006, $P5007
  vivi_400799:
    unless_null $P5006, vivi_401800
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_401800:
    set $P5001, $P5006
  fallback796:
    $P5009 = $P5001."add_initializations"()
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "statementlist" :subid("cuid_46_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 777
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx407_start
    .local string rx407_tgt
    .local int rx407_pos
    .local int rx407_off
    .local int rx407_eos
    .local int rx407_rep
    .local pmc rx407_cur
    .local pmc rx407_curclass
    .local pmc rx407_bstack
    .local pmc rx407_cstack
    rx407_start = self."!cursor_start_all"()
    set rx407_cur, rx407_start[0]
    set rx407_tgt, rx407_start[1]
    set rx407_pos, rx407_start[2]
    set rx407_curclass, rx407_start[3]
    set rx407_bstack, rx407_start[4]
    set $I19, rx407_start[5]
    store_lex unicode:"$\x{a2}", rx407_cur
    length rx407_eos, rx407_tgt
    eq $I19, 1, rx407_restart810
    gt rx407_pos, rx407_eos, rx407_fail811
    repr_get_attr_int $I11, self, rx407_curclass, "$!from"
    ne $I11, -1, rxscan408_done817
    goto rxscan408_scan816
  rxscan408_loop815:
    inc rx407_pos
    gt rx407_pos, rx407_eos, rx407_fail811
    repr_bind_attr_int rx407_cur, rx407_curclass, "$!from", rx407_pos
  rxscan408_scan816:
    nqp_rxmark rx407_bstack, rxscan408_loop815, rx407_pos, 0
  rxscan408_done817:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt409_0819
    nqp_push_label $P11, alt409_1823
    nqp_rxmark rx407_bstack, alt409_end818, -1, 0
    rx407_cur."!alt"(rx407_pos, "alt_nfa__7_1367388602.65809", $P11)
    goto rx407_fail811
  alt409_0819:
    repr_bind_attr_int rx407_cur, rx407_curclass, "$!pos", rx407_pos
    $P11 = rx407_cur."ws"()
    repr_get_attr_int $I11, $P11, rx407_curclass, "$!pos"
    lt $I11, 0, rx407_fail811
    repr_get_attr_int rx407_pos, $P11, rx407_curclass, "$!pos"
    lt rx407_pos, rx407_eos, rx407_fail811
    repr_bind_attr_int rx407_cur, rx407_curclass, "$!pos", rx407_pos
    $P11 = rx407_cur."ws"()
    repr_get_attr_int $I11, $P11, rx407_curclass, "$!pos"
    lt $I11, 0, rx407_fail811
    repr_get_attr_int rx407_pos, $P11, rx407_curclass, "$!pos"
    goto alt409_end818
  alt409_1823:
    repr_bind_attr_int rx407_cur, rx407_curclass, "$!pos", rx407_pos
    $P11 = rx407_cur."ws"()
    repr_get_attr_int $I11, $P11, rx407_curclass, "$!pos"
    lt $I11, 0, rx407_fail811
    repr_get_attr_int rx407_pos, $P11, rx407_curclass, "$!pos"
    nqp_rxmark rx407_bstack, rxquantr414_done826, rx407_pos, 0
  rxquantr414_loop825:
    repr_bind_attr_int rx407_cur, rx407_curclass, "$!pos", rx407_pos
    $P11 = rx407_cur."statement"()
    repr_get_attr_int $I11, $P11, rx407_curclass, "$!pos"
    lt $I11, 0, rx407_fail811
    nqp_rxmark rx407_bstack, rxsubrule415_pass827, -1, 0
  rxsubrule415_pass827:
    rx407_cstack = rx407_cur."!cursor_capture"($P11, "statement")
    repr_get_attr_int rx407_pos, $P11, rx407_curclass, "$!pos"
    repr_bind_attr_int rx407_cur, rx407_curclass, "$!pos", rx407_pos
    $P11 = rx407_cur."eat_terminator"()
    repr_get_attr_int $I11, $P11, rx407_curclass, "$!pos"
    lt $I11, 0, rx407_fail811
    repr_get_attr_int rx407_pos, $P11, rx407_curclass, "$!pos"
    repr_bind_attr_int rx407_cur, rx407_curclass, "$!pos", rx407_pos
    $P11 = rx407_cur."ws"()
    repr_get_attr_int $I11, $P11, rx407_curclass, "$!pos"
    lt $I11, 0, rx407_fail811
    repr_get_attr_int rx407_pos, $P11, rx407_curclass, "$!pos"
    nqp_rxpeek $I19, rx407_bstack, rxquantr414_done826
    inc $I19
    inc $I19
    set rx407_rep, rx407_bstack[$I19]
    nqp_rxcommit rx407_bstack, rxquantr414_done826
    inc rx407_rep
    nqp_rxmark rx407_bstack, rxquantr414_done826, rx407_pos, rx407_rep
    goto rxquantr414_loop825
  rxquantr414_done826:
    repr_bind_attr_int rx407_cur, rx407_curclass, "$!pos", rx407_pos
    $P11 = rx407_cur."ws"()
    repr_get_attr_int $I11, $P11, rx407_curclass, "$!pos"
    lt $I11, 0, rx407_fail811
    repr_get_attr_int rx407_pos, $P11, rx407_curclass, "$!pos"
    goto alt409_end818
  alt409_end818:
    rx407_cur."!cursor_pass"(rx407_pos, "statementlist", 'backtrack'=>1)
    .return (rx407_cur)
  rx407_restart810:
    repr_get_attr_obj rx407_cstack, rx407_cur, rx407_curclass, "$!cstack"
  rx407_fail811:
    unless rx407_bstack, rx407_done809
    pop $I19, rx407_bstack
    if_null rx407_cstack, rx407_cstack_done814
    unless rx407_cstack, rx407_cstack_done814
    dec $I19
    set $P11, rx407_cstack[$I19]
  rx407_cstack_done814:
    pop rx407_rep, rx407_bstack
    pop rx407_pos, rx407_bstack
    pop $I19, rx407_bstack
    lt rx407_pos, -1, rx407_done809
    lt rx407_pos, 0, rx407_fail811
    eq $I19, 0, rx407_fail811
    nqp_islist $I20, rx407_cstack
    unless $I20, rx407_jump812
    elements $I18, rx407_bstack
    le $I18, 0, rx407_cut813
    dec $I18
    set $I18, rx407_bstack[$I18]
  rx407_cut813:
    assign rx407_cstack, $I18
  rx407_jump812:
    jump $I19
  rx407_done809:
    rx407_cur."!cursor_fail"()
    .return (rx407_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement" :subid("cuid_47_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 782
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_48_1367388600.55005' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx419_start
    .local string rx419_tgt
    .local int rx419_pos
    .local int rx419_off
    .local int rx419_eos
    .local int rx419_rep
    .local pmc rx419_cur
    .local pmc rx419_curclass
    .local pmc rx419_bstack
    .local pmc rx419_cstack
    rx419_start = self."!cursor_start_all"()
    set rx419_cur, rx419_start[0]
    set rx419_tgt, rx419_start[1]
    set rx419_pos, rx419_start[2]
    set rx419_curclass, rx419_start[3]
    set rx419_bstack, rx419_start[4]
    set $I19, rx419_start[5]
    store_lex unicode:"$\x{a2}", rx419_cur
    length rx419_eos, rx419_tgt
    eq $I19, 1, rx419_restart833
    gt rx419_pos, rx419_eos, rx419_fail834
    repr_get_attr_int $I11, self, rx419_curclass, "$!from"
    ne $I11, -1, rxscan420_done840
    goto rxscan420_scan839
  rxscan420_loop838:
    inc rx419_pos
    gt rx419_pos, rx419_eos, rx419_fail834
    repr_bind_attr_int rx419_cur, rx419_curclass, "$!from", rx419_pos
  rxscan420_scan839:
    nqp_rxmark rx419_bstack, rxscan420_loop838, rx419_pos, 0
  rxscan420_done840:
    .const 'Sub' $P5001 = 'cuid_48_1367388600.55005' 
    capture_lex $P5001
    repr_bind_attr_int rx419_cur, rx419_curclass, "$!pos", rx419_pos
    $P11 = rx419_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx419_curclass, "$!pos"
    ge $I11, 0, rx419_fail834
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt426_0859
    nqp_push_label $P11, alt426_1861
    nqp_rxmark rx419_bstack, alt426_end858, -1, 0
    rx419_cur."!alt"(rx419_pos, "alt_nfa__9_1367388602.68417", $P11)
    goto rx419_fail834
  alt426_0859:
    repr_bind_attr_int rx419_cur, rx419_curclass, "$!pos", rx419_pos
    $P11 = rx419_cur."statement_control"()
    repr_get_attr_int $I11, $P11, rx419_curclass, "$!pos"
    lt $I11, 0, rx419_fail834
    nqp_rxmark rx419_bstack, rxsubrule427_pass860, -1, 0
  rxsubrule427_pass860:
    rx419_cstack = rx419_cur."!cursor_capture"($P11, "statement_control")
    repr_get_attr_int rx419_pos, $P11, rx419_curclass, "$!pos"
    goto alt426_end858
  alt426_1861:
    repr_bind_attr_int rx419_cur, rx419_curclass, "$!pos", rx419_pos
    $P11 = rx419_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx419_curclass, "$!pos"
    lt $I11, 0, rx419_fail834
    nqp_rxmark rx419_bstack, rxsubrule428_pass862, -1, 0
  rxsubrule428_pass862:
    rx419_cstack = rx419_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx419_pos, $P11, rx419_curclass, "$!pos"
    repr_bind_attr_int rx419_cur, rx419_curclass, "$!pos", rx419_pos
    $P11 = rx419_cur."ws"()
    repr_get_attr_int $I11, $P11, rx419_curclass, "$!pos"
    lt $I11, 0, rx419_fail834
    repr_get_attr_int rx419_pos, $P11, rx419_curclass, "$!pos"
    nqp_rxmark rx419_bstack, rxquantr430_done865, rx419_pos, 0
  rxquantr430_loop864:
  alt431_0867:
    nqp_rxmark rx419_bstack, alt431_1868, rx419_pos, 0
    repr_bind_attr_int rx419_cur, rx419_curclass, "$!pos", rx419_pos
    $P11 = rx419_cur."MARKED"("endstmt")
    repr_get_attr_int $I11, $P11, rx419_curclass, "$!pos"
    lt $I11, 0, rx419_fail834
    goto alt431_end866
  alt431_1868:
    nqp_rxmark rx419_bstack, alt431_2874, rx419_pos, 0
    repr_bind_attr_int rx419_cur, rx419_curclass, "$!pos", rx419_pos
    $P11 = rx419_cur."statement_mod_cond"()
    repr_get_attr_int $I11, $P11, rx419_curclass, "$!pos"
    lt $I11, 0, rx419_fail834
    nqp_rxmark rx419_bstack, rxsubrule432_pass869, -1, 0
  rxsubrule432_pass869:
    rx419_cstack = rx419_cur."!cursor_capture"($P11, "statement_mod_cond")
    repr_get_attr_int rx419_pos, $P11, rx419_curclass, "$!pos"
    nqp_rxmark rx419_bstack, rxquantr433_done871, rx419_pos, 0
  rxquantr433_loop870:
    repr_bind_attr_int rx419_cur, rx419_curclass, "$!pos", rx419_pos
    $P11 = rx419_cur."statement_mod_loop"()
    repr_get_attr_int $I11, $P11, rx419_curclass, "$!pos"
    lt $I11, 0, rx419_fail834
    goto rxsubrule434_pass872
  rxsubrule434_back873:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx419_curclass, "$!pos"
    lt $I11, 0, rx419_fail834
  rxsubrule434_pass872:
    rx419_cstack = rx419_cur."!cursor_capture"($P11, "statement_mod_loop")
    set_addr $I11, rxsubrule434_back873
    push rx419_bstack, $I11
    push rx419_bstack, 0
    push rx419_bstack, rx419_pos
    elements $I11, rx419_cstack
    push rx419_bstack, $I11
    repr_get_attr_int rx419_pos, $P11, rx419_curclass, "$!pos"
    nqp_rxpeek $I19, rx419_bstack, rxquantr433_done871
    inc $I19
    inc $I19
    set rx419_rep, rx419_bstack[$I19]
    nqp_rxcommit rx419_bstack, rxquantr433_done871
    inc rx419_rep
  rxquantr433_done871:
    goto alt431_end866
  alt431_2874:
    repr_bind_attr_int rx419_cur, rx419_curclass, "$!pos", rx419_pos
    $P11 = rx419_cur."statement_mod_loop"()
    repr_get_attr_int $I11, $P11, rx419_curclass, "$!pos"
    lt $I11, 0, rx419_fail834
    nqp_rxmark rx419_bstack, rxsubrule435_pass875, -1, 0
  rxsubrule435_pass875:
    rx419_cstack = rx419_cur."!cursor_capture"($P11, "statement_mod_loop")
    repr_get_attr_int rx419_pos, $P11, rx419_curclass, "$!pos"
  alt431_end866:
    nqp_rxpeek $I19, rx419_bstack, rxquantr430_done865
    inc $I19
    inc $I19
    set rx419_rep, rx419_bstack[$I19]
    nqp_rxcommit rx419_bstack, rxquantr430_done865
    inc rx419_rep
  rxquantr430_done865:
    goto alt426_end858
  alt426_end858:
    nqp_rxcommit rx419_bstack, alt426_end858
    rx419_cur."!cursor_pass"(rx419_pos, "statement", 'backtrack'=>1)
    .return (rx419_cur)
  rx419_restart833:
    repr_get_attr_obj rx419_cstack, rx419_cur, rx419_curclass, "$!cstack"
  rx419_fail834:
    unless rx419_bstack, rx419_done832
    pop $I19, rx419_bstack
    if_null rx419_cstack, rx419_cstack_done837
    unless rx419_cstack, rx419_cstack_done837
    dec $I19
    set $P11, rx419_cstack[$I19]
  rx419_cstack_done837:
    pop rx419_rep, rx419_bstack
    pop rx419_pos, rx419_bstack
    pop $I19, rx419_bstack
    lt rx419_pos, -1, rx419_done832
    lt rx419_pos, 0, rx419_fail834
    eq $I19, 0, rx419_fail834
    nqp_islist $I20, rx419_cstack
    unless $I20, rx419_jump835
    elements $I18, rx419_bstack
    le $I18, 0, rx419_cut836
    dec $I18
    set $I18, rx419_bstack[$I18]
  rx419_cut836:
    assign rx419_cstack, $I18
  rx419_jump835:
    jump $I19
  rx419_done832:
    rx419_cur."!cursor_fail"()
    .return (rx419_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_48_1367388600.55005") :anon :lex :outer("cuid_47_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx421_start
    .local string rx421_tgt
    .local int rx421_pos
    .local int rx421_off
    .local int rx421_eos
    .local int rx421_rep
    .local pmc rx421_cur
    .local pmc rx421_curclass
    .local pmc rx421_bstack
    .local pmc rx421_cstack
    rx421_start = self."!cursor_start_all"()
    set rx421_cur, rx421_start[0]
    set rx421_tgt, rx421_start[1]
    set rx421_pos, rx421_start[2]
    set rx421_curclass, rx421_start[3]
    set rx421_bstack, rx421_start[4]
    set $I19, rx421_start[5]
    store_lex unicode:"$\x{a2}", rx421_cur
    length rx421_eos, rx421_tgt
    eq $I19, 1, rx421_restart843
    gt rx421_pos, rx421_eos, rx421_fail844
    repr_get_attr_int $I11, self, rx421_curclass, "$!from"
    ne $I11, -1, rxscan422_done850
    goto rxscan422_scan849
  rxscan422_loop848:
    inc rx421_pos
    gt rx421_pos, rx421_eos, rx421_fail844
    repr_bind_attr_int rx421_cur, rx421_curclass, "$!from", rx421_pos
  rxscan422_scan849:
    nqp_rxmark rx421_bstack, rxscan422_loop848, rx421_pos, 0
  rxscan422_done850:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt423_0852
    nqp_push_label $P11, alt423_1856
    nqp_rxmark rx421_bstack, alt423_end851, -1, 0
    rx421_cur."!alt"(rx421_pos, "alt_nfa__8_1367388602.66579", $P11)
    goto rx421_fail844
  alt423_0852:
  alt424_0854:
    nqp_rxmark rx421_bstack, alt424_1855, rx421_pos, 0
    add $I11, rx421_pos, 1
    gt $I11, rx421_eos, rx421_fail844
    substr $S10, rx421_tgt, rx421_pos, 1
    ne $S10, ucs4:"]", rx421_fail844
    add rx421_pos, 1
    goto alt424_end853
  alt424_1855:
    ge rx421_pos, rx421_eos, rx421_fail844
    substr $S11, rx421_tgt, rx421_pos, 1
    index $I11, ucs4:")}", $S11
    lt $I11, 0, rx421_fail844
    inc rx421_pos
  alt424_end853:
    goto alt423_end851
  alt423_1856:
    lt rx421_pos, rx421_eos, rx421_fail844
    goto alt423_end851
  alt423_end851:
    rx421_cur."!cursor_pass"(rx421_pos, 'backtrack'=>1)
    .return (rx421_cur)
  rx421_restart843:
    repr_get_attr_obj rx421_cstack, rx421_cur, rx421_curclass, "$!cstack"
  rx421_fail844:
    unless rx421_bstack, rx421_done842
    pop $I19, rx421_bstack
    if_null rx421_cstack, rx421_cstack_done847
    unless rx421_cstack, rx421_cstack_done847
    dec $I19
    set $P11, rx421_cstack[$I19]
  rx421_cstack_done847:
    pop rx421_rep, rx421_bstack
    pop rx421_pos, rx421_bstack
    pop $I19, rx421_bstack
    lt rx421_pos, -1, rx421_done842
    lt rx421_pos, 0, rx421_fail844
    eq $I19, 0, rx421_fail844
    nqp_islist $I20, rx421_cstack
    unless $I20, rx421_jump845
    elements $I18, rx421_bstack
    le $I18, 0, rx421_cut846
    dec $I18
    set $I18, rx421_bstack[$I18]
  rx421_cut846:
    assign rx421_cstack, $I18
  rx421_jump845:
    jump $I19
  rx421_done842:
    rx421_cur."!cursor_fail"()
    .return (rx421_cur) 
.end
.HLL "nqp"
.namespace []
.sub "eat_terminator" :subid("cuid_49_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 795
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx436_start
    .local string rx436_tgt
    .local int rx436_pos
    .local int rx436_off
    .local int rx436_eos
    .local int rx436_rep
    .local pmc rx436_cur
    .local pmc rx436_curclass
    .local pmc rx436_bstack
    .local pmc rx436_cstack
    rx436_start = self."!cursor_start_all"()
    set rx436_cur, rx436_start[0]
    set rx436_tgt, rx436_start[1]
    set rx436_pos, rx436_start[2]
    set rx436_curclass, rx436_start[3]
    set rx436_bstack, rx436_start[4]
    set $I19, rx436_start[5]
    store_lex unicode:"$\x{a2}", rx436_cur
    length rx436_eos, rx436_tgt
    eq $I19, 1, rx436_restart878
    gt rx436_pos, rx436_eos, rx436_fail879
    repr_get_attr_int $I11, self, rx436_curclass, "$!from"
    ne $I11, -1, rxscan437_done885
    goto rxscan437_scan884
  rxscan437_loop883:
    inc rx436_pos
    gt rx436_pos, rx436_eos, rx436_fail879
    repr_bind_attr_int rx436_cur, rx436_curclass, "$!from", rx436_pos
  rxscan437_scan884:
    nqp_rxmark rx436_bstack, rxscan437_loop883, rx436_pos, 0
  rxscan437_done885:
  alt438_0887:
    nqp_rxmark rx436_bstack, alt438_1888, rx436_pos, 0
    add $I11, rx436_pos, 1
    gt $I11, rx436_eos, rx436_fail879
    substr $S10, rx436_tgt, rx436_pos, 1
    ne $S10, ucs4:";", rx436_fail879
    add rx436_pos, 1
    goto alt438_end886
  alt438_1888:
    nqp_rxmark rx436_bstack, alt438_2889, rx436_pos, 0
    repr_bind_attr_int rx436_cur, rx436_curclass, "$!pos", rx436_pos
    $P11 = rx436_cur."MARKED"("endstmt")
    repr_get_attr_int $I11, $P11, rx436_curclass, "$!pos"
    lt $I11, 0, rx436_fail879
    goto alt438_end886
  alt438_2889:
    nqp_rxmark rx436_bstack, alt438_3890, rx436_pos, 0
    repr_bind_attr_int rx436_cur, rx436_curclass, "$!pos", rx436_pos
    $P11 = rx436_cur."terminator"()
    repr_get_attr_int $I11, $P11, rx436_curclass, "$!pos"
    lt $I11, 0, rx436_fail879
    goto alt438_end886
  alt438_3890:
    lt rx436_pos, rx436_eos, rx436_fail879
  alt438_end886:
    rx436_cur."!cursor_pass"(rx436_pos, "eat_terminator", 'backtrack'=>1)
    .return (rx436_cur)
  rx436_restart878:
    repr_get_attr_obj rx436_cstack, rx436_cur, rx436_curclass, "$!cstack"
  rx436_fail879:
    unless rx436_bstack, rx436_done877
    pop $I19, rx436_bstack
    if_null rx436_cstack, rx436_cstack_done882
    unless rx436_cstack, rx436_cstack_done882
    dec $I19
    set $P11, rx436_cstack[$I19]
  rx436_cstack_done882:
    pop rx436_rep, rx436_bstack
    pop rx436_pos, rx436_bstack
    pop $I19, rx436_bstack
    lt rx436_pos, -1, rx436_done877
    lt rx436_pos, 0, rx436_fail879
    eq $I19, 0, rx436_fail879
    nqp_islist $I20, rx436_cstack
    unless $I20, rx436_jump880
    elements $I18, rx436_bstack
    le $I18, 0, rx436_cut881
    dec $I18
    set $I18, rx436_bstack[$I18]
  rx436_cut881:
    assign rx436_cstack, $I18
  rx436_jump880:
    jump $I19
  rx436_done877:
    rx436_cur."!cursor_fail"()
    .return (rx436_cur) 
.end
.HLL "nqp"
.namespace []
.sub "xblock" :subid("cuid_50_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 802
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx440_start
    .local string rx440_tgt
    .local int rx440_pos
    .local int rx440_off
    .local int rx440_eos
    .local int rx440_rep
    .local pmc rx440_cur
    .local pmc rx440_curclass
    .local pmc rx440_bstack
    .local pmc rx440_cstack
    rx440_start = self."!cursor_start_all"()
    set rx440_cur, rx440_start[0]
    set rx440_tgt, rx440_start[1]
    set rx440_pos, rx440_start[2]
    set rx440_curclass, rx440_start[3]
    set rx440_bstack, rx440_start[4]
    set $I19, rx440_start[5]
    store_lex unicode:"$\x{a2}", rx440_cur
    length rx440_eos, rx440_tgt
    eq $I19, 1, rx440_restart894
    gt rx440_pos, rx440_eos, rx440_fail895
    repr_get_attr_int $I11, self, rx440_curclass, "$!from"
    ne $I11, -1, rxscan441_done901
    goto rxscan441_scan900
  rxscan441_loop899:
    inc rx440_pos
    gt rx440_pos, rx440_eos, rx440_fail895
    repr_bind_attr_int rx440_cur, rx440_curclass, "$!from", rx440_pos
  rxscan441_scan900:
    nqp_rxmark rx440_bstack, rxscan441_loop899, rx440_pos, 0
  rxscan441_done901:
    repr_bind_attr_int rx440_cur, rx440_curclass, "$!pos", rx440_pos
    $P11 = rx440_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx440_curclass, "$!pos"
    lt $I11, 0, rx440_fail895
    nqp_rxmark rx440_bstack, rxsubrule442_pass902, -1, 0
  rxsubrule442_pass902:
    rx440_cstack = rx440_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx440_pos, $P11, rx440_curclass, "$!pos"
    repr_bind_attr_int rx440_cur, rx440_curclass, "$!pos", rx440_pos
    $P11 = rx440_cur."ws"()
    repr_get_attr_int $I11, $P11, rx440_curclass, "$!pos"
    lt $I11, 0, rx440_fail895
    repr_get_attr_int rx440_pos, $P11, rx440_curclass, "$!pos"
    repr_bind_attr_int rx440_cur, rx440_curclass, "$!pos", rx440_pos
    $P11 = rx440_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx440_curclass, "$!pos"
    lt $I11, 0, rx440_fail895
    nqp_rxmark rx440_bstack, rxsubrule444_pass904, -1, 0
  rxsubrule444_pass904:
    rx440_cstack = rx440_cur."!cursor_capture"($P11, "pblock")
    repr_get_attr_int rx440_pos, $P11, rx440_curclass, "$!pos"
    rx440_cur."!cursor_pass"(rx440_pos, "xblock", 'backtrack'=>1)
    .return (rx440_cur)
  rx440_restart894:
    repr_get_attr_obj rx440_cstack, rx440_cur, rx440_curclass, "$!cstack"
  rx440_fail895:
    unless rx440_bstack, rx440_done893
    pop $I19, rx440_bstack
    if_null rx440_cstack, rx440_cstack_done898
    unless rx440_cstack, rx440_cstack_done898
    dec $I19
    set $P11, rx440_cstack[$I19]
  rx440_cstack_done898:
    pop rx440_rep, rx440_bstack
    pop rx440_pos, rx440_bstack
    pop $I19, rx440_bstack
    lt rx440_pos, -1, rx440_done893
    lt rx440_pos, 0, rx440_fail895
    eq $I19, 0, rx440_fail895
    nqp_islist $I20, rx440_cstack
    unless $I20, rx440_jump896
    elements $I18, rx440_bstack
    le $I18, 0, rx440_cut897
    dec $I18
    set $I18, rx440_bstack[$I18]
  rx440_cut897:
    assign rx440_cstack, $I18
  rx440_jump896:
    jump $I19
  rx440_done893:
    rx440_cur."!cursor_fail"()
    .return (rx440_cur) 
.end
.HLL "nqp"
.namespace []
.sub "pblock" :subid("cuid_51_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 806
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx445_start
    .local string rx445_tgt
    .local int rx445_pos
    .local int rx445_off
    .local int rx445_eos
    .local int rx445_rep
    .local pmc rx445_cur
    .local pmc rx445_curclass
    .local pmc rx445_bstack
    .local pmc rx445_cstack
    rx445_start = self."!cursor_start_all"()
    set rx445_cur, rx445_start[0]
    set rx445_tgt, rx445_start[1]
    set rx445_pos, rx445_start[2]
    set rx445_curclass, rx445_start[3]
    set rx445_bstack, rx445_start[4]
    set $I19, rx445_start[5]
    store_lex unicode:"$\x{a2}", rx445_cur
    length rx445_eos, rx445_tgt
    eq $I19, 1, rx445_restart907
    gt rx445_pos, rx445_eos, rx445_fail908
    repr_get_attr_int $I11, self, rx445_curclass, "$!from"
    ne $I11, -1, rxscan446_done914
    goto rxscan446_scan913
  rxscan446_loop912:
    inc rx445_pos
    gt rx445_pos, rx445_eos, rx445_fail908
    repr_bind_attr_int rx445_cur, rx445_curclass, "$!from", rx445_pos
  rxscan446_scan913:
    nqp_rxmark rx445_bstack, rxscan446_loop912, rx445_pos, 0
  rxscan446_done914:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt447_0916
    nqp_push_label $P11, alt447_1922
    nqp_push_label $P11, alt447_2925
    nqp_rxmark rx445_bstack, alt447_end915, -1, 0
    rx445_cur."!alt"(rx445_pos, "alt_nfa__10_1367388602.72042", $P11)
    goto rx445_fail908
  alt447_0916:
    repr_bind_attr_int rx445_cur, rx445_curclass, "$!pos", rx445_pos
    $P11 = rx445_cur."lambda"()
    repr_get_attr_int $I11, $P11, rx445_curclass, "$!pos"
    lt $I11, 0, rx445_fail908
    repr_get_attr_int rx445_pos, $P11, rx445_curclass, "$!pos"
    repr_bind_attr_int rx445_cur, rx445_curclass, "$!pos", rx445_pos
    $P11 = rx445_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx445_curclass, "$!pos"
    lt $I11, 0, rx445_fail908
    repr_get_attr_int rx445_pos, $P11, rx445_curclass, "$!pos"
    repr_bind_attr_int rx445_cur, rx445_curclass, "$!pos", rx445_pos
    $P11 = rx445_cur."signature"()
    repr_get_attr_int $I11, $P11, rx445_curclass, "$!pos"
    lt $I11, 0, rx445_fail908
    nqp_rxmark rx445_bstack, rxsubrule450_pass919, -1, 0
  rxsubrule450_pass919:
    rx445_cstack = rx445_cur."!cursor_capture"($P11, "signature")
    repr_get_attr_int rx445_pos, $P11, rx445_curclass, "$!pos"
    repr_bind_attr_int rx445_cur, rx445_curclass, "$!pos", rx445_pos
    $P11 = rx445_cur."ws"()
    repr_get_attr_int $I11, $P11, rx445_curclass, "$!pos"
    lt $I11, 0, rx445_fail908
    repr_get_attr_int rx445_pos, $P11, rx445_curclass, "$!pos"
    repr_bind_attr_int rx445_cur, rx445_curclass, "$!pos", rx445_pos
    $P11 = rx445_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx445_curclass, "$!pos"
    lt $I11, 0, rx445_fail908
    nqp_rxmark rx445_bstack, rxsubrule452_pass921, -1, 0
  rxsubrule452_pass921:
    rx445_cstack = rx445_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx445_pos, $P11, rx445_curclass, "$!pos"
    goto alt447_end915
  alt447_1922:
    ge rx445_pos, rx445_eos, rx445_fail908
    substr $S11, rx445_tgt, rx445_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx445_fail908
    repr_bind_attr_int rx445_cur, rx445_curclass, "$!pos", rx445_pos
    $P11 = rx445_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx445_curclass, "$!pos"
    lt $I11, 0, rx445_fail908
    repr_get_attr_int rx445_pos, $P11, rx445_curclass, "$!pos"
    repr_bind_attr_int rx445_cur, rx445_curclass, "$!pos", rx445_pos
    $P11 = rx445_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx445_curclass, "$!pos"
    lt $I11, 0, rx445_fail908
    nqp_rxmark rx445_bstack, rxsubrule454_pass924, -1, 0
  rxsubrule454_pass924:
    rx445_cstack = rx445_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx445_pos, $P11, rx445_curclass, "$!pos"
    goto alt447_end915
  alt447_2925:
    repr_bind_attr_int rx445_cur, rx445_curclass, "$!pos", rx445_pos
    $P11 = rx445_cur."panic"("Missing block")
    repr_get_attr_int $I11, $P11, rx445_curclass, "$!pos"
    lt $I11, 0, rx445_fail908
    repr_get_attr_int rx445_pos, $P11, rx445_curclass, "$!pos"
    goto alt447_end915
  alt447_end915:
    rx445_cur."!cursor_pass"(rx445_pos, "pblock", 'backtrack'=>1)
    .return (rx445_cur)
  rx445_restart907:
    repr_get_attr_obj rx445_cstack, rx445_cur, rx445_curclass, "$!cstack"
  rx445_fail908:
    unless rx445_bstack, rx445_done906
    pop $I19, rx445_bstack
    if_null rx445_cstack, rx445_cstack_done911
    unless rx445_cstack, rx445_cstack_done911
    dec $I19
    set $P11, rx445_cstack[$I19]
  rx445_cstack_done911:
    pop rx445_rep, rx445_bstack
    pop rx445_pos, rx445_bstack
    pop $I19, rx445_bstack
    lt rx445_pos, -1, rx445_done906
    lt rx445_pos, 0, rx445_fail908
    eq $I19, 0, rx445_fail908
    nqp_islist $I20, rx445_cstack
    unless $I20, rx445_jump909
    elements $I18, rx445_bstack
    le $I18, 0, rx445_cut910
    dec $I18
    set $I18, rx445_bstack[$I18]
  rx445_cut910:
    assign rx445_cstack, $I18
  rx445_jump909:
    jump $I19
  rx445_done906:
    rx445_cur."!cursor_fail"()
    .return (rx445_cur) 
.end
.HLL "nqp"
.namespace []
.sub "lambda" :subid("cuid_52_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 817
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx456_start
    .local string rx456_tgt
    .local int rx456_pos
    .local int rx456_off
    .local int rx456_eos
    .local int rx456_rep
    .local pmc rx456_cur
    .local pmc rx456_curclass
    .local pmc rx456_bstack
    .local pmc rx456_cstack
    rx456_start = self."!cursor_start_all"()
    set rx456_cur, rx456_start[0]
    set rx456_tgt, rx456_start[1]
    set rx456_pos, rx456_start[2]
    set rx456_curclass, rx456_start[3]
    set rx456_bstack, rx456_start[4]
    set $I19, rx456_start[5]
    store_lex unicode:"$\x{a2}", rx456_cur
    length rx456_eos, rx456_tgt
    eq $I19, 1, rx456_restart929
    gt rx456_pos, rx456_eos, rx456_fail930
    repr_get_attr_int $I11, self, rx456_curclass, "$!from"
    ne $I11, -1, rxscan457_done936
    goto rxscan457_scan935
  rxscan457_loop934:
    inc rx456_pos
    gt rx456_pos, rx456_eos, rx456_fail930
    repr_bind_attr_int rx456_cur, rx456_curclass, "$!from", rx456_pos
  rxscan457_scan935:
    nqp_rxmark rx456_bstack, rxscan457_loop934, rx456_pos, 0
  rxscan457_done936:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt458_0938
    nqp_push_label $P11, alt458_1939
    nqp_rxmark rx456_bstack, alt458_end937, -1, 0
    rx456_cur."!alt"(rx456_pos, "alt_nfa__11_1367388602.72809", $P11)
    goto rx456_fail930
  alt458_0938:
    add $I11, rx456_pos, 2
    gt $I11, rx456_eos, rx456_fail930
    substr $S10, rx456_tgt, rx456_pos, 2
    ne $S10, ucs4:"->", rx456_fail930
    add rx456_pos, 2
    goto alt458_end937
  alt458_1939:
    add $I11, rx456_pos, 3
    gt $I11, rx456_eos, rx456_fail930
    substr $S10, rx456_tgt, rx456_pos, 3
    ne $S10, ucs4:"<->", rx456_fail930
    add rx456_pos, 3
    goto alt458_end937
  alt458_end937:
    rx456_cur."!cursor_pass"(rx456_pos, "lambda", 'backtrack'=>1)
    .return (rx456_cur)
  rx456_restart929:
    repr_get_attr_obj rx456_cstack, rx456_cur, rx456_curclass, "$!cstack"
  rx456_fail930:
    unless rx456_bstack, rx456_done928
    pop $I19, rx456_bstack
    if_null rx456_cstack, rx456_cstack_done933
    unless rx456_cstack, rx456_cstack_done933
    dec $I19
    set $P11, rx456_cstack[$I19]
  rx456_cstack_done933:
    pop rx456_rep, rx456_bstack
    pop rx456_pos, rx456_bstack
    pop $I19, rx456_bstack
    lt rx456_pos, -1, rx456_done928
    lt rx456_pos, 0, rx456_fail930
    eq $I19, 0, rx456_fail930
    nqp_islist $I20, rx456_cstack
    unless $I20, rx456_jump931
    elements $I18, rx456_bstack
    le $I18, 0, rx456_cut932
    dec $I18
    set $I18, rx456_bstack[$I18]
  rx456_cut932:
    assign rx456_cstack, $I18
  rx456_jump931:
    jump $I19
  rx456_done928:
    rx456_cur."!cursor_fail"()
    .return (rx456_cur) 
.end
.HLL "nqp"
.namespace []
.sub "block" :subid("cuid_53_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 819
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx459_start
    .local string rx459_tgt
    .local int rx459_pos
    .local int rx459_off
    .local int rx459_eos
    .local int rx459_rep
    .local pmc rx459_cur
    .local pmc rx459_curclass
    .local pmc rx459_bstack
    .local pmc rx459_cstack
    rx459_start = self."!cursor_start_all"()
    set rx459_cur, rx459_start[0]
    set rx459_tgt, rx459_start[1]
    set rx459_pos, rx459_start[2]
    set rx459_curclass, rx459_start[3]
    set rx459_bstack, rx459_start[4]
    set $I19, rx459_start[5]
    store_lex unicode:"$\x{a2}", rx459_cur
    length rx459_eos, rx459_tgt
    eq $I19, 1, rx459_restart942
    gt rx459_pos, rx459_eos, rx459_fail943
    repr_get_attr_int $I11, self, rx459_curclass, "$!from"
    ne $I11, -1, rxscan460_done949
    goto rxscan460_scan948
  rxscan460_loop947:
    inc rx459_pos
    gt rx459_pos, rx459_eos, rx459_fail943
    repr_bind_attr_int rx459_cur, rx459_curclass, "$!from", rx459_pos
  rxscan460_scan948:
    nqp_rxmark rx459_bstack, rxscan460_loop947, rx459_pos, 0
  rxscan460_done949:
  alt461_0951:
    nqp_rxmark rx459_bstack, alt461_1952, rx459_pos, 0
    ge rx459_pos, rx459_eos, rx459_fail943
    substr $S11, rx459_tgt, rx459_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx459_fail943
    goto alt461_end950
  alt461_1952:
    repr_bind_attr_int rx459_cur, rx459_curclass, "$!pos", rx459_pos
    $P11 = rx459_cur."panic"("Missing block")
    repr_get_attr_int $I11, $P11, rx459_curclass, "$!pos"
    lt $I11, 0, rx459_fail943
    repr_get_attr_int rx459_pos, $P11, rx459_curclass, "$!pos"
  alt461_end950:
    repr_bind_attr_int rx459_cur, rx459_curclass, "$!pos", rx459_pos
    $P11 = rx459_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx459_curclass, "$!pos"
    lt $I11, 0, rx459_fail943
    repr_get_attr_int rx459_pos, $P11, rx459_curclass, "$!pos"
    repr_bind_attr_int rx459_cur, rx459_curclass, "$!pos", rx459_pos
    $P11 = rx459_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx459_curclass, "$!pos"
    lt $I11, 0, rx459_fail943
    nqp_rxmark rx459_bstack, rxsubrule464_pass955, -1, 0
  rxsubrule464_pass955:
    rx459_cstack = rx459_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx459_pos, $P11, rx459_curclass, "$!pos"
    rx459_cur."!cursor_pass"(rx459_pos, "block", 'backtrack'=>1)
    .return (rx459_cur)
  rx459_restart942:
    repr_get_attr_obj rx459_cstack, rx459_cur, rx459_curclass, "$!cstack"
  rx459_fail943:
    unless rx459_bstack, rx459_done941
    pop $I19, rx459_bstack
    if_null rx459_cstack, rx459_cstack_done946
    unless rx459_cstack, rx459_cstack_done946
    dec $I19
    set $P11, rx459_cstack[$I19]
  rx459_cstack_done946:
    pop rx459_rep, rx459_bstack
    pop rx459_pos, rx459_bstack
    pop $I19, rx459_bstack
    lt rx459_pos, -1, rx459_done941
    lt rx459_pos, 0, rx459_fail943
    eq $I19, 0, rx459_fail943
    nqp_islist $I20, rx459_cstack
    unless $I20, rx459_jump944
    elements $I18, rx459_bstack
    le $I18, 0, rx459_cut945
    dec $I18
    set $I18, rx459_bstack[$I18]
  rx459_cut945:
    assign rx459_cstack, $I18
  rx459_jump944:
    jump $I19
  rx459_done941:
    rx459_cur."!cursor_fail"()
    .return (rx459_cur) 
.end
.HLL "nqp"
.namespace []
.sub "blockoid" :subid("cuid_54_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 825
    .param pmc _lex_param_0 
    .lex "%*HANDLERS", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_99 
    .local pmc pkg_viv_tmp_22 
    new $P5001, 'Hash'
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx465_start
    .local string rx465_tgt
    .local int rx465_pos
    .local int rx465_off
    .local int rx465_eos
    .local int rx465_rep
    .local pmc rx465_cur
    .local pmc rx465_curclass
    .local pmc rx465_bstack
    .local pmc rx465_cstack
    rx465_start = self."!cursor_start_all"()
    set rx465_cur, rx465_start[0]
    set rx465_tgt, rx465_start[1]
    set rx465_pos, rx465_start[2]
    set rx465_curclass, rx465_start[3]
    set rx465_bstack, rx465_start[4]
    set $I19, rx465_start[5]
    store_lex unicode:"$\x{a2}", rx465_cur
    length rx465_eos, rx465_tgt
    eq $I19, 1, rx465_restart958
    gt rx465_pos, rx465_eos, rx465_fail959
    repr_get_attr_int $I11, self, rx465_curclass, "$!from"
    ne $I11, -1, rxscan466_done965
    goto rxscan466_scan964
  rxscan466_loop963:
    inc rx465_pos
    gt rx465_pos, rx465_eos, rx465_fail959
    repr_bind_attr_int rx465_cur, rx465_curclass, "$!from", rx465_pos
  rxscan466_scan964:
    nqp_rxmark rx465_bstack, rxscan466_loop963, rx465_pos, 0
  rxscan466_done965:
    repr_bind_attr_int rx465_cur, rx465_curclass, "$!pos", rx465_pos
    store_lex unicode:"$\x{a2}", rx465_cur
    unless_null $P101, fallback966
    nqp_get_sc_object $P5003, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_22, $P5002
    set fb_tmp_99, pkg_viv_tmp_22
    repr_defined $I5001, fb_tmp_99
    unless $I5001 goto if467_else967 
    set $P5004, fb_tmp_99["%HANDLERS"]
    set $P5006, $P5004
    goto if467_end968
  if467_else967:
    null $P5005
    set $P5006, $P5005
  if467_end968:
    unless_null $P5006, vivi_468969
    new $P5007, 'Hash'
    set pkg_viv_tmp_22["%HANDLERS"], $P5007
    set $P5006, $P5007
  vivi_468969:
    unless_null $P5006, vivi_469970
    die "Contextual %*HANDLERS not found"
    box $P5008, "Contextual %*HANDLERS not found"
    set $P5006, $P5008
  vivi_469970:
    set $P101, $P5006
  fallback966:
    repr_bind_attr_int rx465_cur, rx465_curclass, "$!pos", rx465_pos
    $P11 = rx465_cur."finishpad"()
    repr_get_attr_int $I11, $P11, rx465_curclass, "$!pos"
    lt $I11, 0, rx465_fail959
    repr_get_attr_int rx465_pos, $P11, rx465_curclass, "$!pos"
  alt471_0973:
    nqp_rxmark rx465_bstack, alt471_1975, rx465_pos, 0
    add $I11, rx465_pos, 14
    gt $I11, rx465_eos, rx465_fail959
    substr $S10, rx465_tgt, rx465_pos, 14
    ne $S10, ucs4:"{YOU_ARE_HERE}", rx465_fail959
    add rx465_pos, 14
    repr_bind_attr_int rx465_cur, rx465_curclass, "$!pos", rx465_pos
    $P11 = rx465_cur."you_are_here"()
    repr_get_attr_int $I11, $P11, rx465_curclass, "$!pos"
    lt $I11, 0, rx465_fail959
    nqp_rxmark rx465_bstack, rxsubrule472_pass974, -1, 0
  rxsubrule472_pass974:
    rx465_cstack = rx465_cur."!cursor_capture"($P11, "you_are_here")
    repr_get_attr_int rx465_pos, $P11, rx465_curclass, "$!pos"
    goto alt471_end972
  alt471_1975:
    add $I11, rx465_pos, 1
    gt $I11, rx465_eos, rx465_fail959
    substr $S10, rx465_tgt, rx465_pos, 1
    ne $S10, ucs4:"{", rx465_fail959
    add rx465_pos, 1
    repr_bind_attr_int rx465_cur, rx465_curclass, "$!pos", rx465_pos
    $P11 = rx465_cur."statementlist"()
    repr_get_attr_int $I11, $P11, rx465_curclass, "$!pos"
    lt $I11, 0, rx465_fail959
    nqp_rxmark rx465_bstack, rxsubrule473_pass976, -1, 0
  rxsubrule473_pass976:
    rx465_cstack = rx465_cur."!cursor_capture"($P11, "statementlist")
    repr_get_attr_int rx465_pos, $P11, rx465_curclass, "$!pos"
  alt474_0978:
    nqp_rxmark rx465_bstack, alt474_1979, rx465_pos, 0
    add $I11, rx465_pos, 1
    gt $I11, rx465_eos, rx465_fail959
    substr $S10, rx465_tgt, rx465_pos, 1
    ne $S10, ucs4:"}", rx465_fail959
    add rx465_pos, 1
    goto alt474_end977
  alt474_1979:
    repr_bind_attr_int rx465_cur, rx465_curclass, "$!pos", rx465_pos
    $P11 = rx465_cur."FAILGOAL"("'}'")
    repr_get_attr_int $I11, $P11, rx465_curclass, "$!pos"
    lt $I11, 0, rx465_fail959
    goto rxsubrule475_pass980
  rxsubrule475_back981:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx465_curclass, "$!pos"
    lt $I11, 0, rx465_fail959
  rxsubrule475_pass980:
    rx465_cstack = rx465_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule475_back981
    push rx465_bstack, $I11
    push rx465_bstack, 0
    push rx465_bstack, rx465_pos
    elements $I11, rx465_cstack
    push rx465_bstack, $I11
    repr_get_attr_int rx465_pos, $P11, rx465_curclass, "$!pos"
  alt474_end977:
  alt471_end972:
    repr_bind_attr_int rx465_cur, rx465_curclass, "$!pos", rx465_pos
    $P11 = rx465_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx465_curclass, "$!pos"
    lt $I11, 0, rx465_fail959
    rx465_cur."!cursor_pass"(rx465_pos, "blockoid", 'backtrack'=>1)
    .return (rx465_cur)
  rx465_restart958:
    repr_get_attr_obj rx465_cstack, rx465_cur, rx465_curclass, "$!cstack"
  rx465_fail959:
    unless rx465_bstack, rx465_done957
    pop $I19, rx465_bstack
    if_null rx465_cstack, rx465_cstack_done962
    unless rx465_cstack, rx465_cstack_done962
    dec $I19
    set $P11, rx465_cstack[$I19]
  rx465_cstack_done962:
    pop rx465_rep, rx465_bstack
    pop rx465_pos, rx465_bstack
    pop $I19, rx465_bstack
    lt rx465_pos, -1, rx465_done957
    lt rx465_pos, 0, rx465_fail959
    eq $I19, 0, rx465_fail959
    nqp_islist $I20, rx465_cstack
    unless $I20, rx465_jump960
    elements $I18, rx465_bstack
    le $I18, 0, rx465_cut961
    dec $I18
    set $I18, rx465_bstack[$I18]
  rx465_cut961:
    assign rx465_cstack, $I18
  rx465_jump960:
    jump $I19
  rx465_done957:
    rx465_cur."!cursor_fail"()
    .return (rx465_cur) 
.end
.HLL "nqp"
.namespace []
.sub "newpad" :subid("cuid_55_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 835
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx476_start
    .local string rx476_tgt
    .local int rx476_pos
    .local int rx476_off
    .local int rx476_eos
    .local int rx476_rep
    .local pmc rx476_cur
    .local pmc rx476_curclass
    .local pmc rx476_bstack
    .local pmc rx476_cstack
    rx476_start = self."!cursor_start_all"()
    set rx476_cur, rx476_start[0]
    set rx476_tgt, rx476_start[1]
    set rx476_pos, rx476_start[2]
    set rx476_curclass, rx476_start[3]
    set rx476_bstack, rx476_start[4]
    set $I19, rx476_start[5]
    store_lex unicode:"$\x{a2}", rx476_cur
    length rx476_eos, rx476_tgt
    eq $I19, 1, rx476_restart984
    gt rx476_pos, rx476_eos, rx476_fail985
    repr_get_attr_int $I11, self, rx476_curclass, "$!from"
    ne $I11, -1, rxscan477_done991
    goto rxscan477_scan990
  rxscan477_loop989:
    inc rx476_pos
    gt rx476_pos, rx476_eos, rx476_fail985
    repr_bind_attr_int rx476_cur, rx476_curclass, "$!from", rx476_pos
  rxscan477_scan990:
    nqp_rxmark rx476_bstack, rxscan477_loop989, rx476_pos, 0
  rxscan477_done991:
    rx476_cur."!cursor_pass"(rx476_pos, "newpad", 'backtrack'=>1)
    .return (rx476_cur)
  rx476_restart984:
    repr_get_attr_obj rx476_cstack, rx476_cur, rx476_curclass, "$!cstack"
  rx476_fail985:
    unless rx476_bstack, rx476_done983
    pop $I19, rx476_bstack
    if_null rx476_cstack, rx476_cstack_done988
    unless rx476_cstack, rx476_cstack_done988
    dec $I19
    set $P11, rx476_cstack[$I19]
  rx476_cstack_done988:
    pop rx476_rep, rx476_bstack
    pop rx476_pos, rx476_bstack
    pop $I19, rx476_bstack
    lt rx476_pos, -1, rx476_done983
    lt rx476_pos, 0, rx476_fail985
    eq $I19, 0, rx476_fail985
    nqp_islist $I20, rx476_cstack
    unless $I20, rx476_jump986
    elements $I18, rx476_bstack
    le $I18, 0, rx476_cut987
    dec $I18
    set $I18, rx476_bstack[$I18]
  rx476_cut987:
    assign rx476_cstack, $I18
  rx476_jump986:
    jump $I19
  rx476_done983:
    rx476_cur."!cursor_fail"()
    .return (rx476_cur) 
.end
.HLL "nqp"
.namespace []
.sub "outerctx" :subid("cuid_56_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 836
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx479_start
    .local string rx479_tgt
    .local int rx479_pos
    .local int rx479_off
    .local int rx479_eos
    .local int rx479_rep
    .local pmc rx479_cur
    .local pmc rx479_curclass
    .local pmc rx479_bstack
    .local pmc rx479_cstack
    rx479_start = self."!cursor_start_all"()
    set rx479_cur, rx479_start[0]
    set rx479_tgt, rx479_start[1]
    set rx479_pos, rx479_start[2]
    set rx479_curclass, rx479_start[3]
    set rx479_bstack, rx479_start[4]
    set $I19, rx479_start[5]
    store_lex unicode:"$\x{a2}", rx479_cur
    length rx479_eos, rx479_tgt
    eq $I19, 1, rx479_restart995
    gt rx479_pos, rx479_eos, rx479_fail996
    repr_get_attr_int $I11, self, rx479_curclass, "$!from"
    ne $I11, -1, rxscan480_done1002
    goto rxscan480_scan1001
  rxscan480_loop1000:
    inc rx479_pos
    gt rx479_pos, rx479_eos, rx479_fail996
    repr_bind_attr_int rx479_cur, rx479_curclass, "$!from", rx479_pos
  rxscan480_scan1001:
    nqp_rxmark rx479_bstack, rxscan480_loop1000, rx479_pos, 0
  rxscan480_done1002:
    rx479_cur."!cursor_pass"(rx479_pos, "outerctx", 'backtrack'=>1)
    .return (rx479_cur)
  rx479_restart995:
    repr_get_attr_obj rx479_cstack, rx479_cur, rx479_curclass, "$!cstack"
  rx479_fail996:
    unless rx479_bstack, rx479_done994
    pop $I19, rx479_bstack
    if_null rx479_cstack, rx479_cstack_done999
    unless rx479_cstack, rx479_cstack_done999
    dec $I19
    set $P11, rx479_cstack[$I19]
  rx479_cstack_done999:
    pop rx479_rep, rx479_bstack
    pop rx479_pos, rx479_bstack
    pop $I19, rx479_bstack
    lt rx479_pos, -1, rx479_done994
    lt rx479_pos, 0, rx479_fail996
    eq $I19, 0, rx479_fail996
    nqp_islist $I20, rx479_cstack
    unless $I20, rx479_jump997
    elements $I18, rx479_bstack
    le $I18, 0, rx479_cut998
    dec $I18
    set $I18, rx479_bstack[$I18]
  rx479_cut998:
    assign rx479_cstack, $I18
  rx479_jump997:
    jump $I19
  rx479_done994:
    rx479_cur."!cursor_fail"()
    .return (rx479_cur) 
.end
.HLL "nqp"
.namespace []
.sub "finishpad" :subid("cuid_57_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 837
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx482_start
    .local string rx482_tgt
    .local int rx482_pos
    .local int rx482_off
    .local int rx482_eos
    .local int rx482_rep
    .local pmc rx482_cur
    .local pmc rx482_curclass
    .local pmc rx482_bstack
    .local pmc rx482_cstack
    rx482_start = self."!cursor_start_all"()
    set rx482_cur, rx482_start[0]
    set rx482_tgt, rx482_start[1]
    set rx482_pos, rx482_start[2]
    set rx482_curclass, rx482_start[3]
    set rx482_bstack, rx482_start[4]
    set $I19, rx482_start[5]
    store_lex unicode:"$\x{a2}", rx482_cur
    length rx482_eos, rx482_tgt
    eq $I19, 1, rx482_restart1006
    gt rx482_pos, rx482_eos, rx482_fail1007
    repr_get_attr_int $I11, self, rx482_curclass, "$!from"
    ne $I11, -1, rxscan483_done1013
    goto rxscan483_scan1012
  rxscan483_loop1011:
    inc rx482_pos
    gt rx482_pos, rx482_eos, rx482_fail1007
    repr_bind_attr_int rx482_cur, rx482_curclass, "$!from", rx482_pos
  rxscan483_scan1012:
    nqp_rxmark rx482_bstack, rxscan483_loop1011, rx482_pos, 0
  rxscan483_done1013:
    rx482_cur."!cursor_pass"(rx482_pos, "finishpad", 'backtrack'=>1)
    .return (rx482_cur)
  rx482_restart1006:
    repr_get_attr_obj rx482_cstack, rx482_cur, rx482_curclass, "$!cstack"
  rx482_fail1007:
    unless rx482_bstack, rx482_done1005
    pop $I19, rx482_bstack
    if_null rx482_cstack, rx482_cstack_done1010
    unless rx482_cstack, rx482_cstack_done1010
    dec $I19
    set $P11, rx482_cstack[$I19]
  rx482_cstack_done1010:
    pop rx482_rep, rx482_bstack
    pop rx482_pos, rx482_bstack
    pop $I19, rx482_bstack
    lt rx482_pos, -1, rx482_done1005
    lt rx482_pos, 0, rx482_fail1007
    eq $I19, 0, rx482_fail1007
    nqp_islist $I20, rx482_cstack
    unless $I20, rx482_jump1008
    elements $I18, rx482_bstack
    le $I18, 0, rx482_cut1009
    dec $I18
    set $I18, rx482_bstack[$I18]
  rx482_cut1009:
    assign rx482_cstack, $I18
  rx482_jump1008:
    jump $I19
  rx482_done1005:
    rx482_cur."!cursor_fail"()
    .return (rx482_cur) 
.end
.HLL "nqp"
.namespace []
.sub "you_are_here" :subid("cuid_58_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 838
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx485_start
    .local string rx485_tgt
    .local int rx485_pos
    .local int rx485_off
    .local int rx485_eos
    .local int rx485_rep
    .local pmc rx485_cur
    .local pmc rx485_curclass
    .local pmc rx485_bstack
    .local pmc rx485_cstack
    rx485_start = self."!cursor_start_all"()
    set rx485_cur, rx485_start[0]
    set rx485_tgt, rx485_start[1]
    set rx485_pos, rx485_start[2]
    set rx485_curclass, rx485_start[3]
    set rx485_bstack, rx485_start[4]
    set $I19, rx485_start[5]
    store_lex unicode:"$\x{a2}", rx485_cur
    length rx485_eos, rx485_tgt
    eq $I19, 1, rx485_restart1017
    gt rx485_pos, rx485_eos, rx485_fail1018
    repr_get_attr_int $I11, self, rx485_curclass, "$!from"
    ne $I11, -1, rxscan486_done1024
    goto rxscan486_scan1023
  rxscan486_loop1022:
    inc rx485_pos
    gt rx485_pos, rx485_eos, rx485_fail1018
    repr_bind_attr_int rx485_cur, rx485_curclass, "$!from", rx485_pos
  rxscan486_scan1023:
    nqp_rxmark rx485_bstack, rxscan486_loop1022, rx485_pos, 0
  rxscan486_done1024:
    rx485_cur."!cursor_pass"(rx485_pos, "you_are_here", 'backtrack'=>1)
    .return (rx485_cur)
  rx485_restart1017:
    repr_get_attr_obj rx485_cstack, rx485_cur, rx485_curclass, "$!cstack"
  rx485_fail1018:
    unless rx485_bstack, rx485_done1016
    pop $I19, rx485_bstack
    if_null rx485_cstack, rx485_cstack_done1021
    unless rx485_cstack, rx485_cstack_done1021
    dec $I19
    set $P11, rx485_cstack[$I19]
  rx485_cstack_done1021:
    pop rx485_rep, rx485_bstack
    pop rx485_pos, rx485_bstack
    pop $I19, rx485_bstack
    lt rx485_pos, -1, rx485_done1016
    lt rx485_pos, 0, rx485_fail1018
    eq $I19, 0, rx485_fail1018
    nqp_islist $I20, rx485_cstack
    unless $I20, rx485_jump1019
    elements $I18, rx485_bstack
    le $I18, 0, rx485_cut1020
    dec $I18
    set $I18, rx485_bstack[$I18]
  rx485_cut1020:
    assign rx485_cstack, $I18
  rx485_jump1019:
    jump $I19
  rx485_done1016:
    rx485_cur."!cursor_fail"()
    .return (rx485_cur) 
.end
.HLL "nqp"
.namespace []
.sub "terminator" :subid("cuid_59_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 840
    .param pmc self 
    $P5001 = self."!protoregex"("terminator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "terminator:sym<;>" :subid("cuid_60_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 842
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx488_start
    .local string rx488_tgt
    .local int rx488_pos
    .local int rx488_off
    .local int rx488_eos
    .local int rx488_rep
    .local pmc rx488_cur
    .local pmc rx488_curclass
    .local pmc rx488_bstack
    .local pmc rx488_cstack
    rx488_start = self."!cursor_start_all"()
    set rx488_cur, rx488_start[0]
    set rx488_tgt, rx488_start[1]
    set rx488_pos, rx488_start[2]
    set rx488_curclass, rx488_start[3]
    set rx488_bstack, rx488_start[4]
    set $I19, rx488_start[5]
    store_lex unicode:"$\x{a2}", rx488_cur
    length rx488_eos, rx488_tgt
    eq $I19, 1, rx488_restart1028
    gt rx488_pos, rx488_eos, rx488_fail1029
    repr_get_attr_int $I11, self, rx488_curclass, "$!from"
    ne $I11, -1, rxscan489_done1035
    goto rxscan489_scan1034
  rxscan489_loop1033:
    inc rx488_pos
    gt rx488_pos, rx488_eos, rx488_fail1029
    repr_bind_attr_int rx488_cur, rx488_curclass, "$!from", rx488_pos
  rxscan489_scan1034:
    nqp_rxmark rx488_bstack, rxscan489_loop1033, rx488_pos, 0
  rxscan489_done1035:
    ge rx488_pos, rx488_eos, rx488_fail1029
    substr $S11, rx488_tgt, rx488_pos, 1
    index $I11, ucs4:";", $S11
    lt $I11, 0, rx488_fail1029
    rx488_cur."!cursor_pass"(rx488_pos, "terminator:sym<;>", 'backtrack'=>1)
    .return (rx488_cur)
  rx488_restart1028:
    repr_get_attr_obj rx488_cstack, rx488_cur, rx488_curclass, "$!cstack"
  rx488_fail1029:
    unless rx488_bstack, rx488_done1027
    pop $I19, rx488_bstack
    if_null rx488_cstack, rx488_cstack_done1032
    unless rx488_cstack, rx488_cstack_done1032
    dec $I19
    set $P11, rx488_cstack[$I19]
  rx488_cstack_done1032:
    pop rx488_rep, rx488_bstack
    pop rx488_pos, rx488_bstack
    pop $I19, rx488_bstack
    lt rx488_pos, -1, rx488_done1027
    lt rx488_pos, 0, rx488_fail1029
    eq $I19, 0, rx488_fail1029
    nqp_islist $I20, rx488_cstack
    unless $I20, rx488_jump1030
    elements $I18, rx488_bstack
    le $I18, 0, rx488_cut1031
    dec $I18
    set $I18, rx488_bstack[$I18]
  rx488_cut1031:
    assign rx488_cstack, $I18
  rx488_jump1030:
    jump $I19
  rx488_done1027:
    rx488_cur."!cursor_fail"()
    .return (rx488_cur) 
.end
.HLL "nqp"
.namespace []
.sub "terminator:sym<}>" :subid("cuid_61_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 843
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx490_start
    .local string rx490_tgt
    .local int rx490_pos
    .local int rx490_off
    .local int rx490_eos
    .local int rx490_rep
    .local pmc rx490_cur
    .local pmc rx490_curclass
    .local pmc rx490_bstack
    .local pmc rx490_cstack
    rx490_start = self."!cursor_start_all"()
    set rx490_cur, rx490_start[0]
    set rx490_tgt, rx490_start[1]
    set rx490_pos, rx490_start[2]
    set rx490_curclass, rx490_start[3]
    set rx490_bstack, rx490_start[4]
    set $I19, rx490_start[5]
    store_lex unicode:"$\x{a2}", rx490_cur
    length rx490_eos, rx490_tgt
    eq $I19, 1, rx490_restart1038
    gt rx490_pos, rx490_eos, rx490_fail1039
    repr_get_attr_int $I11, self, rx490_curclass, "$!from"
    ne $I11, -1, rxscan491_done1045
    goto rxscan491_scan1044
  rxscan491_loop1043:
    inc rx490_pos
    gt rx490_pos, rx490_eos, rx490_fail1039
    repr_bind_attr_int rx490_cur, rx490_curclass, "$!from", rx490_pos
  rxscan491_scan1044:
    nqp_rxmark rx490_bstack, rxscan491_loop1043, rx490_pos, 0
  rxscan491_done1045:
    ge rx490_pos, rx490_eos, rx490_fail1039
    substr $S11, rx490_tgt, rx490_pos, 1
    index $I11, ucs4:"}", $S11
    lt $I11, 0, rx490_fail1039
    rx490_cur."!cursor_pass"(rx490_pos, "terminator:sym<}>", 'backtrack'=>1)
    .return (rx490_cur)
  rx490_restart1038:
    repr_get_attr_obj rx490_cstack, rx490_cur, rx490_curclass, "$!cstack"
  rx490_fail1039:
    unless rx490_bstack, rx490_done1037
    pop $I19, rx490_bstack
    if_null rx490_cstack, rx490_cstack_done1042
    unless rx490_cstack, rx490_cstack_done1042
    dec $I19
    set $P11, rx490_cstack[$I19]
  rx490_cstack_done1042:
    pop rx490_rep, rx490_bstack
    pop rx490_pos, rx490_bstack
    pop $I19, rx490_bstack
    lt rx490_pos, -1, rx490_done1037
    lt rx490_pos, 0, rx490_fail1039
    eq $I19, 0, rx490_fail1039
    nqp_islist $I20, rx490_cstack
    unless $I20, rx490_jump1040
    elements $I18, rx490_bstack
    le $I18, 0, rx490_cut1041
    dec $I18
    set $I18, rx490_bstack[$I18]
  rx490_cut1041:
    assign rx490_cstack, $I18
  rx490_jump1040:
    jump $I19
  rx490_done1037:
    rx490_cur."!cursor_fail"()
    .return (rx490_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control" :subid("cuid_62_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 847
    .param pmc self 
    $P5001 = self."!protoregex"("statement_control")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<use>" :subid("cuid_63_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 849
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx492_start
    .local string rx492_tgt
    .local int rx492_pos
    .local int rx492_off
    .local int rx492_eos
    .local int rx492_rep
    .local pmc rx492_cur
    .local pmc rx492_curclass
    .local pmc rx492_bstack
    .local pmc rx492_cstack
    rx492_start = self."!cursor_start_all"()
    set rx492_cur, rx492_start[0]
    set rx492_tgt, rx492_start[1]
    set rx492_pos, rx492_start[2]
    set rx492_curclass, rx492_start[3]
    set rx492_bstack, rx492_start[4]
    set $I19, rx492_start[5]
    store_lex unicode:"$\x{a2}", rx492_cur
    length rx492_eos, rx492_tgt
    eq $I19, 1, rx492_restart1048
    gt rx492_pos, rx492_eos, rx492_fail1049
    repr_get_attr_int $I11, self, rx492_curclass, "$!from"
    ne $I11, -1, rxscan493_done1055
    goto rxscan493_scan1054
  rxscan493_loop1053:
    inc rx492_pos
    gt rx492_pos, rx492_eos, rx492_fail1049
    repr_bind_attr_int rx492_cur, rx492_curclass, "$!from", rx492_pos
  rxscan493_scan1054:
    nqp_rxmark rx492_bstack, rxscan493_loop1053, rx492_pos, 0
  rxscan493_done1055:
    nqp_rxmark rx492_bstack, rxcap494_fail1057, rx492_pos, 0
    add $I11, rx492_pos, 3
    gt $I11, rx492_eos, rx492_fail1049
    substr $S10, rx492_tgt, rx492_pos, 3
    ne $S10, ucs4:"use", rx492_fail1049
    add rx492_pos, 3
    nqp_rxpeek $I19, rx492_bstack, rxcap494_fail1057
    inc $I19
    set $I11, rx492_bstack[$I19]
    repr_bind_attr_int rx492_cur, rx492_curclass, "$!pos", rx492_pos
    $P11 = rx492_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx492_pos)
    rx492_cstack = rx492_cur."!cursor_capture"($P11, "sym")
    goto rxcap494_done1056
  rxcap494_fail1057:
    goto rx492_fail1049
  rxcap494_done1056:
    ge rx492_pos, rx492_eos, rx492_fail1049
    is_cclass $I11, .CCLASS_WHITESPACE, rx492_tgt, rx492_pos
    unless $I11, rx492_fail1049
    add rx492_pos, 1
    repr_bind_attr_int rx492_cur, rx492_curclass, "$!pos", rx492_pos
    $P11 = rx492_cur."ws"()
    repr_get_attr_int $I11, $P11, rx492_curclass, "$!pos"
    lt $I11, 0, rx492_fail1049
    repr_get_attr_int rx492_pos, $P11, rx492_curclass, "$!pos"
    repr_bind_attr_int rx492_cur, rx492_curclass, "$!pos", rx492_pos
    $P11 = rx492_cur."name"()
    repr_get_attr_int $I11, $P11, rx492_curclass, "$!pos"
    lt $I11, 0, rx492_fail1049
    nqp_rxmark rx492_bstack, rxsubrule496_pass1059, -1, 0
  rxsubrule496_pass1059:
    rx492_cstack = rx492_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx492_pos, $P11, rx492_curclass, "$!pos"
    repr_bind_attr_int rx492_cur, rx492_curclass, "$!pos", rx492_pos
    $P11 = rx492_cur."ws"()
    repr_get_attr_int $I11, $P11, rx492_curclass, "$!pos"
    lt $I11, 0, rx492_fail1049
    repr_get_attr_int rx492_pos, $P11, rx492_curclass, "$!pos"
    rx492_cur."!cursor_pass"(rx492_pos, "statement_control:sym<use>", 'backtrack'=>1)
    .return (rx492_cur)
  rx492_restart1048:
    repr_get_attr_obj rx492_cstack, rx492_cur, rx492_curclass, "$!cstack"
  rx492_fail1049:
    unless rx492_bstack, rx492_done1047
    pop $I19, rx492_bstack
    if_null rx492_cstack, rx492_cstack_done1052
    unless rx492_cstack, rx492_cstack_done1052
    dec $I19
    set $P11, rx492_cstack[$I19]
  rx492_cstack_done1052:
    pop rx492_rep, rx492_bstack
    pop rx492_pos, rx492_bstack
    pop $I19, rx492_bstack
    lt rx492_pos, -1, rx492_done1047
    lt rx492_pos, 0, rx492_fail1049
    eq $I19, 0, rx492_fail1049
    nqp_islist $I20, rx492_cstack
    unless $I20, rx492_jump1050
    elements $I18, rx492_bstack
    le $I18, 0, rx492_cut1051
    dec $I18
    set $I18, rx492_bstack[$I18]
  rx492_cut1051:
    assign rx492_cstack, $I18
  rx492_jump1050:
    jump $I19
  rx492_done1047:
    rx492_cur."!cursor_fail"()
    .return (rx492_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<if>" :subid("cuid_64_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 853
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx498_start
    .local string rx498_tgt
    .local int rx498_pos
    .local int rx498_off
    .local int rx498_eos
    .local int rx498_rep
    .local pmc rx498_cur
    .local pmc rx498_curclass
    .local pmc rx498_bstack
    .local pmc rx498_cstack
    rx498_start = self."!cursor_start_all"()
    set rx498_cur, rx498_start[0]
    set rx498_tgt, rx498_start[1]
    set rx498_pos, rx498_start[2]
    set rx498_curclass, rx498_start[3]
    set rx498_bstack, rx498_start[4]
    set $I19, rx498_start[5]
    store_lex unicode:"$\x{a2}", rx498_cur
    length rx498_eos, rx498_tgt
    eq $I19, 1, rx498_restart1063
    gt rx498_pos, rx498_eos, rx498_fail1064
    repr_get_attr_int $I11, self, rx498_curclass, "$!from"
    ne $I11, -1, rxscan499_done1070
    goto rxscan499_scan1069
  rxscan499_loop1068:
    inc rx498_pos
    gt rx498_pos, rx498_eos, rx498_fail1064
    repr_bind_attr_int rx498_cur, rx498_curclass, "$!from", rx498_pos
  rxscan499_scan1069:
    nqp_rxmark rx498_bstack, rxscan499_loop1068, rx498_pos, 0
  rxscan499_done1070:
    nqp_rxmark rx498_bstack, rxcap500_fail1072, rx498_pos, 0
    add $I11, rx498_pos, 2
    gt $I11, rx498_eos, rx498_fail1064
    substr $S10, rx498_tgt, rx498_pos, 2
    ne $S10, ucs4:"if", rx498_fail1064
    add rx498_pos, 2
    nqp_rxpeek $I19, rx498_bstack, rxcap500_fail1072
    inc $I19
    set $I11, rx498_bstack[$I19]
    repr_bind_attr_int rx498_cur, rx498_curclass, "$!pos", rx498_pos
    $P11 = rx498_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx498_pos)
    rx498_cstack = rx498_cur."!cursor_capture"($P11, "sym")
    goto rxcap500_done1071
  rxcap500_fail1072:
    goto rx498_fail1064
  rxcap500_done1071:
    ge rx498_pos, rx498_eos, rx498_fail1064
    is_cclass $I11, .CCLASS_WHITESPACE, rx498_tgt, rx498_pos
    unless $I11, rx498_fail1064
    add rx498_pos, 1
    repr_bind_attr_int rx498_cur, rx498_curclass, "$!pos", rx498_pos
    $P11 = rx498_cur."ws"()
    repr_get_attr_int $I11, $P11, rx498_curclass, "$!pos"
    lt $I11, 0, rx498_fail1064
    repr_get_attr_int rx498_pos, $P11, rx498_curclass, "$!pos"
    repr_bind_attr_int rx498_cur, rx498_curclass, "$!pos", rx498_pos
    $P11 = rx498_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx498_curclass, "$!pos"
    lt $I11, 0, rx498_fail1064
    nqp_rxmark rx498_bstack, rxsubrule502_pass1074, -1, 0
  rxsubrule502_pass1074:
    rx498_cstack = rx498_cur."!cursor_capture"($P11, "xblock")
    repr_get_attr_int rx498_pos, $P11, rx498_curclass, "$!pos"
    repr_bind_attr_int rx498_cur, rx498_curclass, "$!pos", rx498_pos
    $P11 = rx498_cur."ws"()
    repr_get_attr_int $I11, $P11, rx498_curclass, "$!pos"
    lt $I11, 0, rx498_fail1064
    repr_get_attr_int rx498_pos, $P11, rx498_curclass, "$!pos"
    nqp_rxmark rx498_bstack, rxquantr504_done1077, rx498_pos, 0
  rxquantr504_loop1076:
    repr_bind_attr_int rx498_cur, rx498_curclass, "$!pos", rx498_pos
    $P11 = rx498_cur."ws"()
    repr_get_attr_int $I11, $P11, rx498_curclass, "$!pos"
    lt $I11, 0, rx498_fail1064
    repr_get_attr_int rx498_pos, $P11, rx498_curclass, "$!pos"
    add $I11, rx498_pos, 5
    gt $I11, rx498_eos, rx498_fail1064
    substr $S10, rx498_tgt, rx498_pos, 5
    ne $S10, ucs4:"elsif", rx498_fail1064
    add rx498_pos, 5
    ge rx498_pos, rx498_eos, rx498_fail1064
    is_cclass $I11, .CCLASS_WHITESPACE, rx498_tgt, rx498_pos
    unless $I11, rx498_fail1064
    add rx498_pos, 1
    repr_bind_attr_int rx498_cur, rx498_curclass, "$!pos", rx498_pos
    $P11 = rx498_cur."ws"()
    repr_get_attr_int $I11, $P11, rx498_curclass, "$!pos"
    lt $I11, 0, rx498_fail1064
    repr_get_attr_int rx498_pos, $P11, rx498_curclass, "$!pos"
    repr_bind_attr_int rx498_cur, rx498_curclass, "$!pos", rx498_pos
    $P11 = rx498_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx498_curclass, "$!pos"
    lt $I11, 0, rx498_fail1064
    nqp_rxmark rx498_bstack, rxsubrule507_pass1080, -1, 0
  rxsubrule507_pass1080:
    rx498_cstack = rx498_cur."!cursor_capture"($P11, "xblock")
    repr_get_attr_int rx498_pos, $P11, rx498_curclass, "$!pos"
    repr_bind_attr_int rx498_cur, rx498_curclass, "$!pos", rx498_pos
    $P11 = rx498_cur."ws"()
    repr_get_attr_int $I11, $P11, rx498_curclass, "$!pos"
    lt $I11, 0, rx498_fail1064
    repr_get_attr_int rx498_pos, $P11, rx498_curclass, "$!pos"
    nqp_rxpeek $I19, rx498_bstack, rxquantr504_done1077
    inc $I19
    inc $I19
    set rx498_rep, rx498_bstack[$I19]
    nqp_rxcommit rx498_bstack, rxquantr504_done1077
    inc rx498_rep
    nqp_rxmark rx498_bstack, rxquantr504_done1077, rx498_pos, rx498_rep
    goto rxquantr504_loop1076
  rxquantr504_done1077:
    repr_bind_attr_int rx498_cur, rx498_curclass, "$!pos", rx498_pos
    $P11 = rx498_cur."ws"()
    repr_get_attr_int $I11, $P11, rx498_curclass, "$!pos"
    lt $I11, 0, rx498_fail1064
    repr_get_attr_int rx498_pos, $P11, rx498_curclass, "$!pos"
    nqp_rxmark rx498_bstack, rxquantr510_done1084, rx498_pos, 0
  rxquantr510_loop1083:
    repr_bind_attr_int rx498_cur, rx498_curclass, "$!pos", rx498_pos
    $P11 = rx498_cur."ws"()
    repr_get_attr_int $I11, $P11, rx498_curclass, "$!pos"
    lt $I11, 0, rx498_fail1064
    repr_get_attr_int rx498_pos, $P11, rx498_curclass, "$!pos"
    add $I11, rx498_pos, 4
    gt $I11, rx498_eos, rx498_fail1064
    substr $S10, rx498_tgt, rx498_pos, 4
    ne $S10, ucs4:"else", rx498_fail1064
    add rx498_pos, 4
    ge rx498_pos, rx498_eos, rx498_fail1064
    is_cclass $I11, .CCLASS_WHITESPACE, rx498_tgt, rx498_pos
    unless $I11, rx498_fail1064
    add rx498_pos, 1
    repr_bind_attr_int rx498_cur, rx498_curclass, "$!pos", rx498_pos
    $P11 = rx498_cur."ws"()
    repr_get_attr_int $I11, $P11, rx498_curclass, "$!pos"
    lt $I11, 0, rx498_fail1064
    repr_get_attr_int rx498_pos, $P11, rx498_curclass, "$!pos"
    repr_bind_attr_int rx498_cur, rx498_curclass, "$!pos", rx498_pos
    $P11 = rx498_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx498_curclass, "$!pos"
    lt $I11, 0, rx498_fail1064
    nqp_rxmark rx498_bstack, rxsubrule513_pass1087, -1, 0
  rxsubrule513_pass1087:
    rx498_cstack = rx498_cur."!cursor_capture"($P11, "else")
    repr_get_attr_int rx498_pos, $P11, rx498_curclass, "$!pos"
    repr_bind_attr_int rx498_cur, rx498_curclass, "$!pos", rx498_pos
    $P11 = rx498_cur."ws"()
    repr_get_attr_int $I11, $P11, rx498_curclass, "$!pos"
    lt $I11, 0, rx498_fail1064
    repr_get_attr_int rx498_pos, $P11, rx498_curclass, "$!pos"
    nqp_rxpeek $I19, rx498_bstack, rxquantr510_done1084
    inc $I19
    inc $I19
    set rx498_rep, rx498_bstack[$I19]
    nqp_rxcommit rx498_bstack, rxquantr510_done1084
    inc rx498_rep
  rxquantr510_done1084:
    repr_bind_attr_int rx498_cur, rx498_curclass, "$!pos", rx498_pos
    $P11 = rx498_cur."ws"()
    repr_get_attr_int $I11, $P11, rx498_curclass, "$!pos"
    lt $I11, 0, rx498_fail1064
    repr_get_attr_int rx498_pos, $P11, rx498_curclass, "$!pos"
    rx498_cur."!cursor_pass"(rx498_pos, "statement_control:sym<if>", 'backtrack'=>1)
    .return (rx498_cur)
  rx498_restart1063:
    repr_get_attr_obj rx498_cstack, rx498_cur, rx498_curclass, "$!cstack"
  rx498_fail1064:
    unless rx498_bstack, rx498_done1062
    pop $I19, rx498_bstack
    if_null rx498_cstack, rx498_cstack_done1067
    unless rx498_cstack, rx498_cstack_done1067
    dec $I19
    set $P11, rx498_cstack[$I19]
  rx498_cstack_done1067:
    pop rx498_rep, rx498_bstack
    pop rx498_pos, rx498_bstack
    pop $I19, rx498_bstack
    lt rx498_pos, -1, rx498_done1062
    lt rx498_pos, 0, rx498_fail1064
    eq $I19, 0, rx498_fail1064
    nqp_islist $I20, rx498_cstack
    unless $I20, rx498_jump1065
    elements $I18, rx498_bstack
    le $I18, 0, rx498_cut1066
    dec $I18
    set $I18, rx498_bstack[$I18]
  rx498_cut1066:
    assign rx498_cstack, $I18
  rx498_jump1065:
    jump $I19
  rx498_done1062:
    rx498_cur."!cursor_fail"()
    .return (rx498_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<unless>" :subid("cuid_65_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 860
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_66_1367388600.55005' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx516_start
    .local string rx516_tgt
    .local int rx516_pos
    .local int rx516_off
    .local int rx516_eos
    .local int rx516_rep
    .local pmc rx516_cur
    .local pmc rx516_curclass
    .local pmc rx516_bstack
    .local pmc rx516_cstack
    rx516_start = self."!cursor_start_all"()
    set rx516_cur, rx516_start[0]
    set rx516_tgt, rx516_start[1]
    set rx516_pos, rx516_start[2]
    set rx516_curclass, rx516_start[3]
    set rx516_bstack, rx516_start[4]
    set $I19, rx516_start[5]
    store_lex unicode:"$\x{a2}", rx516_cur
    length rx516_eos, rx516_tgt
    eq $I19, 1, rx516_restart1092
    gt rx516_pos, rx516_eos, rx516_fail1093
    repr_get_attr_int $I11, self, rx516_curclass, "$!from"
    ne $I11, -1, rxscan517_done1099
    goto rxscan517_scan1098
  rxscan517_loop1097:
    inc rx516_pos
    gt rx516_pos, rx516_eos, rx516_fail1093
    repr_bind_attr_int rx516_cur, rx516_curclass, "$!from", rx516_pos
  rxscan517_scan1098:
    nqp_rxmark rx516_bstack, rxscan517_loop1097, rx516_pos, 0
  rxscan517_done1099:
    nqp_rxmark rx516_bstack, rxcap518_fail1101, rx516_pos, 0
    add $I11, rx516_pos, 6
    gt $I11, rx516_eos, rx516_fail1093
    substr $S10, rx516_tgt, rx516_pos, 6
    ne $S10, ucs4:"unless", rx516_fail1093
    add rx516_pos, 6
    nqp_rxpeek $I19, rx516_bstack, rxcap518_fail1101
    inc $I19
    set $I11, rx516_bstack[$I19]
    repr_bind_attr_int rx516_cur, rx516_curclass, "$!pos", rx516_pos
    $P11 = rx516_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx516_pos)
    rx516_cstack = rx516_cur."!cursor_capture"($P11, "sym")
    goto rxcap518_done1100
  rxcap518_fail1101:
    goto rx516_fail1093
  rxcap518_done1100:
    ge rx516_pos, rx516_eos, rx516_fail1093
    is_cclass $I11, .CCLASS_WHITESPACE, rx516_tgt, rx516_pos
    unless $I11, rx516_fail1093
    add rx516_pos, 1
    repr_bind_attr_int rx516_cur, rx516_curclass, "$!pos", rx516_pos
    $P11 = rx516_cur."ws"()
    repr_get_attr_int $I11, $P11, rx516_curclass, "$!pos"
    lt $I11, 0, rx516_fail1093
    repr_get_attr_int rx516_pos, $P11, rx516_curclass, "$!pos"
    repr_bind_attr_int rx516_cur, rx516_curclass, "$!pos", rx516_pos
    $P11 = rx516_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx516_curclass, "$!pos"
    lt $I11, 0, rx516_fail1093
    nqp_rxmark rx516_bstack, rxsubrule520_pass1103, -1, 0
  rxsubrule520_pass1103:
    rx516_cstack = rx516_cur."!cursor_capture"($P11, "xblock")
    repr_get_attr_int rx516_pos, $P11, rx516_curclass, "$!pos"
    repr_bind_attr_int rx516_cur, rx516_curclass, "$!pos", rx516_pos
    $P11 = rx516_cur."ws"()
    repr_get_attr_int $I11, $P11, rx516_curclass, "$!pos"
    lt $I11, 0, rx516_fail1093
    repr_get_attr_int rx516_pos, $P11, rx516_curclass, "$!pos"
  alt522_01106:
    nqp_rxmark rx516_bstack, alt522_11119, rx516_pos, 0
    repr_bind_attr_int rx516_cur, rx516_curclass, "$!pos", rx516_pos
    $P11 = rx516_cur."ws"()
    repr_get_attr_int $I11, $P11, rx516_curclass, "$!pos"
    lt $I11, 0, rx516_fail1093
    repr_get_attr_int rx516_pos, $P11, rx516_curclass, "$!pos"
    .const 'Sub' $P5001 = 'cuid_66_1367388600.55005' 
    capture_lex $P5001
    repr_bind_attr_int rx516_cur, rx516_curclass, "$!pos", rx516_pos
    $P11 = rx516_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx516_curclass, "$!pos"
    ge $I11, 0, rx516_fail1093
    repr_bind_attr_int rx516_cur, rx516_curclass, "$!pos", rx516_pos
    $P11 = rx516_cur."ws"()
    repr_get_attr_int $I11, $P11, rx516_curclass, "$!pos"
    lt $I11, 0, rx516_fail1093
    repr_get_attr_int rx516_pos, $P11, rx516_curclass, "$!pos"
    goto alt522_end1105
  alt522_11119:
    repr_bind_attr_int rx516_cur, rx516_curclass, "$!pos", rx516_pos
    $P11 = rx516_cur."ws"()
    repr_get_attr_int $I11, $P11, rx516_curclass, "$!pos"
    lt $I11, 0, rx516_fail1093
    repr_get_attr_int rx516_pos, $P11, rx516_curclass, "$!pos"
    repr_bind_attr_int rx516_cur, rx516_curclass, "$!pos", rx516_pos
    $P11 = rx516_cur."panic"("unless does not take \"else\", please rewrite using \"if\"")
    repr_get_attr_int $I11, $P11, rx516_curclass, "$!pos"
    lt $I11, 0, rx516_fail1093
    repr_get_attr_int rx516_pos, $P11, rx516_curclass, "$!pos"
    repr_bind_attr_int rx516_cur, rx516_curclass, "$!pos", rx516_pos
    $P11 = rx516_cur."ws"()
    repr_get_attr_int $I11, $P11, rx516_curclass, "$!pos"
    lt $I11, 0, rx516_fail1093
    repr_get_attr_int rx516_pos, $P11, rx516_curclass, "$!pos"
  alt522_end1105:
    repr_bind_attr_int rx516_cur, rx516_curclass, "$!pos", rx516_pos
    $P11 = rx516_cur."ws"()
    repr_get_attr_int $I11, $P11, rx516_curclass, "$!pos"
    lt $I11, 0, rx516_fail1093
    repr_get_attr_int rx516_pos, $P11, rx516_curclass, "$!pos"
    rx516_cur."!cursor_pass"(rx516_pos, "statement_control:sym<unless>", 'backtrack'=>1)
    .return (rx516_cur)
  rx516_restart1092:
    repr_get_attr_obj rx516_cstack, rx516_cur, rx516_curclass, "$!cstack"
  rx516_fail1093:
    unless rx516_bstack, rx516_done1091
    pop $I19, rx516_bstack
    if_null rx516_cstack, rx516_cstack_done1096
    unless rx516_cstack, rx516_cstack_done1096
    dec $I19
    set $P11, rx516_cstack[$I19]
  rx516_cstack_done1096:
    pop rx516_rep, rx516_bstack
    pop rx516_pos, rx516_bstack
    pop $I19, rx516_bstack
    lt rx516_pos, -1, rx516_done1091
    lt rx516_pos, 0, rx516_fail1093
    eq $I19, 0, rx516_fail1093
    nqp_islist $I20, rx516_cstack
    unless $I20, rx516_jump1094
    elements $I18, rx516_bstack
    le $I18, 0, rx516_cut1095
    dec $I18
    set $I18, rx516_bstack[$I18]
  rx516_cut1095:
    assign rx516_cstack, $I18
  rx516_jump1094:
    jump $I19
  rx516_done1091:
    rx516_cur."!cursor_fail"()
    .return (rx516_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_66_1367388600.55005") :anon :lex :outer("cuid_65_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx524_start
    .local string rx524_tgt
    .local int rx524_pos
    .local int rx524_off
    .local int rx524_eos
    .local int rx524_rep
    .local pmc rx524_cur
    .local pmc rx524_curclass
    .local pmc rx524_bstack
    .local pmc rx524_cstack
    rx524_start = self."!cursor_start_all"()
    set rx524_cur, rx524_start[0]
    set rx524_tgt, rx524_start[1]
    set rx524_pos, rx524_start[2]
    set rx524_curclass, rx524_start[3]
    set rx524_bstack, rx524_start[4]
    set $I19, rx524_start[5]
    store_lex unicode:"$\x{a2}", rx524_cur
    length rx524_eos, rx524_tgt
    eq $I19, 1, rx524_restart1110
    gt rx524_pos, rx524_eos, rx524_fail1111
    repr_get_attr_int $I11, self, rx524_curclass, "$!from"
    ne $I11, -1, rxscan525_done1117
    goto rxscan525_scan1116
  rxscan525_loop1115:
    inc rx524_pos
    gt rx524_pos, rx524_eos, rx524_fail1111
    repr_bind_attr_int rx524_cur, rx524_curclass, "$!from", rx524_pos
  rxscan525_scan1116:
    nqp_rxmark rx524_bstack, rxscan525_loop1115, rx524_pos, 0
  rxscan525_done1117:
    add $I11, rx524_pos, 4
    gt $I11, rx524_eos, rx524_fail1111
    substr $S10, rx524_tgt, rx524_pos, 4
    ne $S10, ucs4:"else", rx524_fail1111
    add rx524_pos, 4
    rx524_cur."!cursor_pass"(rx524_pos, 'backtrack'=>1)
    .return (rx524_cur)
  rx524_restart1110:
    repr_get_attr_obj rx524_cstack, rx524_cur, rx524_curclass, "$!cstack"
  rx524_fail1111:
    unless rx524_bstack, rx524_done1109
    pop $I19, rx524_bstack
    if_null rx524_cstack, rx524_cstack_done1114
    unless rx524_cstack, rx524_cstack_done1114
    dec $I19
    set $P11, rx524_cstack[$I19]
  rx524_cstack_done1114:
    pop rx524_rep, rx524_bstack
    pop rx524_pos, rx524_bstack
    pop $I19, rx524_bstack
    lt rx524_pos, -1, rx524_done1109
    lt rx524_pos, 0, rx524_fail1111
    eq $I19, 0, rx524_fail1111
    nqp_islist $I20, rx524_cstack
    unless $I20, rx524_jump1112
    elements $I18, rx524_bstack
    le $I18, 0, rx524_cut1113
    dec $I18
    set $I18, rx524_bstack[$I18]
  rx524_cut1113:
    assign rx524_cstack, $I18
  rx524_jump1112:
    jump $I19
  rx524_done1109:
    rx524_cur."!cursor_fail"()
    .return (rx524_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<while>" :subid("cuid_67_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 866
    .param pmc _lex_param_0 
    .lex "$*CONTROL_USED", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx531_start
    .local string rx531_tgt
    .local int rx531_pos
    .local int rx531_off
    .local int rx531_eos
    .local int rx531_rep
    .local pmc rx531_cur
    .local pmc rx531_curclass
    .local pmc rx531_bstack
    .local pmc rx531_cstack
    rx531_start = self."!cursor_start_all"()
    set rx531_cur, rx531_start[0]
    set rx531_tgt, rx531_start[1]
    set rx531_pos, rx531_start[2]
    set rx531_curclass, rx531_start[3]
    set rx531_bstack, rx531_start[4]
    set $I19, rx531_start[5]
    store_lex unicode:"$\x{a2}", rx531_cur
    length rx531_eos, rx531_tgt
    eq $I19, 1, rx531_restart1126
    gt rx531_pos, rx531_eos, rx531_fail1127
    repr_get_attr_int $I11, self, rx531_curclass, "$!from"
    ne $I11, -1, rxscan532_done1133
    goto rxscan532_scan1132
  rxscan532_loop1131:
    inc rx531_pos
    gt rx531_pos, rx531_eos, rx531_fail1127
    repr_bind_attr_int rx531_cur, rx531_curclass, "$!from", rx531_pos
  rxscan532_scan1132:
    nqp_rxmark rx531_bstack, rxscan532_loop1131, rx531_pos, 0
  rxscan532_done1133:
    repr_bind_attr_int rx531_cur, rx531_curclass, "$!pos", rx531_pos
    store_lex unicode:"$\x{a2}", rx531_cur
    box $P5002, 0
    set $P101, $P5002
    nqp_rxmark rx531_bstack, rxcap533_fail1135, rx531_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt534_01137
    nqp_push_label $P11, alt534_11138
    nqp_rxmark rx531_bstack, alt534_end1136, -1, 0
    rx531_cur."!alt"(rx531_pos, "alt_nfa__12_1367388602.85977", $P11)
    goto rx531_fail1127
  alt534_01137:
    add $I11, rx531_pos, 5
    gt $I11, rx531_eos, rx531_fail1127
    substr $S10, rx531_tgt, rx531_pos, 5
    ne $S10, ucs4:"while", rx531_fail1127
    add rx531_pos, 5
    goto alt534_end1136
  alt534_11138:
    add $I11, rx531_pos, 5
    gt $I11, rx531_eos, rx531_fail1127
    substr $S10, rx531_tgt, rx531_pos, 5
    ne $S10, ucs4:"until", rx531_fail1127
    add rx531_pos, 5
    goto alt534_end1136
  alt534_end1136:
    nqp_rxcommit rx531_bstack, alt534_end1136
    nqp_rxpeek $I19, rx531_bstack, rxcap533_fail1135
    inc $I19
    set $I11, rx531_bstack[$I19]
    repr_bind_attr_int rx531_cur, rx531_curclass, "$!pos", rx531_pos
    $P11 = rx531_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx531_pos)
    rx531_cstack = rx531_cur."!cursor_capture"($P11, "sym")
    goto rxcap533_done1134
  rxcap533_fail1135:
    goto rx531_fail1127
  rxcap533_done1134:
    ge rx531_pos, rx531_eos, rx531_fail1127
    is_cclass $I11, .CCLASS_WHITESPACE, rx531_tgt, rx531_pos
    unless $I11, rx531_fail1127
    add rx531_pos, 1
    repr_bind_attr_int rx531_cur, rx531_curclass, "$!pos", rx531_pos
    $P11 = rx531_cur."ws"()
    repr_get_attr_int $I11, $P11, rx531_curclass, "$!pos"
    lt $I11, 0, rx531_fail1127
    repr_get_attr_int rx531_pos, $P11, rx531_curclass, "$!pos"
    repr_bind_attr_int rx531_cur, rx531_curclass, "$!pos", rx531_pos
    $P11 = rx531_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx531_curclass, "$!pos"
    lt $I11, 0, rx531_fail1127
    nqp_rxmark rx531_bstack, rxsubrule536_pass1140, -1, 0
  rxsubrule536_pass1140:
    rx531_cstack = rx531_cur."!cursor_capture"($P11, "xblock")
    repr_get_attr_int rx531_pos, $P11, rx531_curclass, "$!pos"
    repr_bind_attr_int rx531_cur, rx531_curclass, "$!pos", rx531_pos
    $P11 = rx531_cur."ws"()
    repr_get_attr_int $I11, $P11, rx531_curclass, "$!pos"
    lt $I11, 0, rx531_fail1127
    repr_get_attr_int rx531_pos, $P11, rx531_curclass, "$!pos"
    rx531_cur."!cursor_pass"(rx531_pos, "statement_control:sym<while>", 'backtrack'=>1)
    .return (rx531_cur)
  rx531_restart1126:
    repr_get_attr_obj rx531_cstack, rx531_cur, rx531_curclass, "$!cstack"
  rx531_fail1127:
    unless rx531_bstack, rx531_done1125
    pop $I19, rx531_bstack
    if_null rx531_cstack, rx531_cstack_done1130
    unless rx531_cstack, rx531_cstack_done1130
    dec $I19
    set $P11, rx531_cstack[$I19]
  rx531_cstack_done1130:
    pop rx531_rep, rx531_bstack
    pop rx531_pos, rx531_bstack
    pop $I19, rx531_bstack
    lt rx531_pos, -1, rx531_done1125
    lt rx531_pos, 0, rx531_fail1127
    eq $I19, 0, rx531_fail1127
    nqp_islist $I20, rx531_cstack
    unless $I20, rx531_jump1128
    elements $I18, rx531_bstack
    le $I18, 0, rx531_cut1129
    dec $I18
    set $I18, rx531_bstack[$I18]
  rx531_cut1129:
    assign rx531_cstack, $I18
  rx531_jump1128:
    jump $I19
  rx531_done1125:
    rx531_cur."!cursor_fail"()
    .return (rx531_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<repeat>" :subid("cuid_68_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 872
    .param pmc _lex_param_0 
    .lex "$*CONTROL_USED", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx538_start
    .local string rx538_tgt
    .local int rx538_pos
    .local int rx538_off
    .local int rx538_eos
    .local int rx538_rep
    .local pmc rx538_cur
    .local pmc rx538_curclass
    .local pmc rx538_bstack
    .local pmc rx538_cstack
    rx538_start = self."!cursor_start_all"()
    set rx538_cur, rx538_start[0]
    set rx538_tgt, rx538_start[1]
    set rx538_pos, rx538_start[2]
    set rx538_curclass, rx538_start[3]
    set rx538_bstack, rx538_start[4]
    set $I19, rx538_start[5]
    store_lex unicode:"$\x{a2}", rx538_cur
    length rx538_eos, rx538_tgt
    eq $I19, 1, rx538_restart1144
    gt rx538_pos, rx538_eos, rx538_fail1145
    repr_get_attr_int $I11, self, rx538_curclass, "$!from"
    ne $I11, -1, rxscan539_done1151
    goto rxscan539_scan1150
  rxscan539_loop1149:
    inc rx538_pos
    gt rx538_pos, rx538_eos, rx538_fail1145
    repr_bind_attr_int rx538_cur, rx538_curclass, "$!from", rx538_pos
  rxscan539_scan1150:
    nqp_rxmark rx538_bstack, rxscan539_loop1149, rx538_pos, 0
  rxscan539_done1151:
    repr_bind_attr_int rx538_cur, rx538_curclass, "$!pos", rx538_pos
    store_lex unicode:"$\x{a2}", rx538_cur
    box $P5002, 0
    set $P101, $P5002
    nqp_rxmark rx538_bstack, rxcap540_fail1153, rx538_pos, 0
    add $I11, rx538_pos, 6
    gt $I11, rx538_eos, rx538_fail1145
    substr $S10, rx538_tgt, rx538_pos, 6
    ne $S10, ucs4:"repeat", rx538_fail1145
    add rx538_pos, 6
    nqp_rxpeek $I19, rx538_bstack, rxcap540_fail1153
    inc $I19
    set $I11, rx538_bstack[$I19]
    repr_bind_attr_int rx538_cur, rx538_curclass, "$!pos", rx538_pos
    $P11 = rx538_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx538_pos)
    rx538_cstack = rx538_cur."!cursor_capture"($P11, "sym")
    goto rxcap540_done1152
  rxcap540_fail1153:
    goto rx538_fail1145
  rxcap540_done1152:
    ge rx538_pos, rx538_eos, rx538_fail1145
    is_cclass $I11, .CCLASS_WHITESPACE, rx538_tgt, rx538_pos
    unless $I11, rx538_fail1145
    add rx538_pos, 1
    repr_bind_attr_int rx538_cur, rx538_curclass, "$!pos", rx538_pos
    $P11 = rx538_cur."ws"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1145
    repr_get_attr_int rx538_pos, $P11, rx538_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt542_01156
    nqp_push_label $P11, alt542_11166
    nqp_rxmark rx538_bstack, alt542_end1155, -1, 0
    rx538_cur."!alt"(rx538_pos, "alt_nfa__15_1367388602.88735", $P11)
    goto rx538_fail1145
  alt542_01156:
    repr_bind_attr_int rx538_cur, rx538_curclass, "$!pos", rx538_pos
    $P11 = rx538_cur."ws"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1145
    repr_get_attr_int rx538_pos, $P11, rx538_curclass, "$!pos"
    nqp_rxmark rx538_bstack, rxcap544_fail1159, rx538_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt545_01161
    nqp_push_label $P11, alt545_11162
    nqp_rxmark rx538_bstack, alt545_end1160, -1, 0
    rx538_cur."!alt"(rx538_pos, "alt_nfa__13_1367388602.88662", $P11)
    goto rx538_fail1145
  alt545_01161:
    add $I11, rx538_pos, 5
    gt $I11, rx538_eos, rx538_fail1145
    substr $S10, rx538_tgt, rx538_pos, 5
    ne $S10, ucs4:"while", rx538_fail1145
    add rx538_pos, 5
    goto alt545_end1160
  alt545_11162:
    add $I11, rx538_pos, 5
    gt $I11, rx538_eos, rx538_fail1145
    substr $S10, rx538_tgt, rx538_pos, 5
    ne $S10, ucs4:"until", rx538_fail1145
    add rx538_pos, 5
    goto alt545_end1160
  alt545_end1160:
    nqp_rxcommit rx538_bstack, alt545_end1160
    nqp_rxpeek $I19, rx538_bstack, rxcap544_fail1159
    inc $I19
    set $I11, rx538_bstack[$I19]
    repr_bind_attr_int rx538_cur, rx538_curclass, "$!pos", rx538_pos
    $P11 = rx538_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx538_pos)
    rx538_cstack = rx538_cur."!cursor_capture"($P11, "wu")
    goto rxcap544_done1158
  rxcap544_fail1159:
    goto rx538_fail1145
  rxcap544_done1158:
    ge rx538_pos, rx538_eos, rx538_fail1145
    is_cclass $I11, .CCLASS_WHITESPACE, rx538_tgt, rx538_pos
    unless $I11, rx538_fail1145
    add rx538_pos, 1
    repr_bind_attr_int rx538_cur, rx538_curclass, "$!pos", rx538_pos
    $P11 = rx538_cur."ws"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1145
    repr_get_attr_int rx538_pos, $P11, rx538_curclass, "$!pos"
    repr_bind_attr_int rx538_cur, rx538_curclass, "$!pos", rx538_pos
    $P11 = rx538_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1145
    nqp_rxmark rx538_bstack, rxsubrule547_pass1164, -1, 0
  rxsubrule547_pass1164:
    rx538_cstack = rx538_cur."!cursor_capture"($P11, "xblock")
    repr_get_attr_int rx538_pos, $P11, rx538_curclass, "$!pos"
    repr_bind_attr_int rx538_cur, rx538_curclass, "$!pos", rx538_pos
    $P11 = rx538_cur."ws"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1145
    repr_get_attr_int rx538_pos, $P11, rx538_curclass, "$!pos"
    goto alt542_end1155
  alt542_11166:
    repr_bind_attr_int rx538_cur, rx538_curclass, "$!pos", rx538_pos
    $P11 = rx538_cur."ws"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1145
    repr_get_attr_int rx538_pos, $P11, rx538_curclass, "$!pos"
    repr_bind_attr_int rx538_cur, rx538_curclass, "$!pos", rx538_pos
    $P11 = rx538_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1145
    nqp_rxmark rx538_bstack, rxsubrule550_pass1168, -1, 0
  rxsubrule550_pass1168:
    rx538_cstack = rx538_cur."!cursor_capture"($P11, "pblock")
    repr_get_attr_int rx538_pos, $P11, rx538_curclass, "$!pos"
    repr_bind_attr_int rx538_cur, rx538_curclass, "$!pos", rx538_pos
    $P11 = rx538_cur."ws"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1145
    repr_get_attr_int rx538_pos, $P11, rx538_curclass, "$!pos"
    nqp_rxmark rx538_bstack, rxcap552_fail1171, rx538_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt553_01173
    nqp_push_label $P11, alt553_11174
    nqp_rxmark rx538_bstack, alt553_end1172, -1, 0
    rx538_cur."!alt"(rx538_pos, "alt_nfa__14_1367388602.88711", $P11)
    goto rx538_fail1145
  alt553_01173:
    add $I11, rx538_pos, 5
    gt $I11, rx538_eos, rx538_fail1145
    substr $S10, rx538_tgt, rx538_pos, 5
    ne $S10, ucs4:"while", rx538_fail1145
    add rx538_pos, 5
    goto alt553_end1172
  alt553_11174:
    add $I11, rx538_pos, 5
    gt $I11, rx538_eos, rx538_fail1145
    substr $S10, rx538_tgt, rx538_pos, 5
    ne $S10, ucs4:"until", rx538_fail1145
    add rx538_pos, 5
    goto alt553_end1172
  alt553_end1172:
    nqp_rxcommit rx538_bstack, alt553_end1172
    nqp_rxpeek $I19, rx538_bstack, rxcap552_fail1171
    inc $I19
    set $I11, rx538_bstack[$I19]
    repr_bind_attr_int rx538_cur, rx538_curclass, "$!pos", rx538_pos
    $P11 = rx538_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx538_pos)
    rx538_cstack = rx538_cur."!cursor_capture"($P11, "wu")
    goto rxcap552_done1170
  rxcap552_fail1171:
    goto rx538_fail1145
  rxcap552_done1170:
    ge rx538_pos, rx538_eos, rx538_fail1145
    is_cclass $I11, .CCLASS_WHITESPACE, rx538_tgt, rx538_pos
    unless $I11, rx538_fail1145
    add rx538_pos, 1
    repr_bind_attr_int rx538_cur, rx538_curclass, "$!pos", rx538_pos
    $P11 = rx538_cur."ws"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1145
    repr_get_attr_int rx538_pos, $P11, rx538_curclass, "$!pos"
    repr_bind_attr_int rx538_cur, rx538_curclass, "$!pos", rx538_pos
    $P11 = rx538_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1145
    nqp_rxmark rx538_bstack, rxsubrule555_pass1176, -1, 0
  rxsubrule555_pass1176:
    rx538_cstack = rx538_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx538_pos, $P11, rx538_curclass, "$!pos"
    repr_bind_attr_int rx538_cur, rx538_curclass, "$!pos", rx538_pos
    $P11 = rx538_cur."ws"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1145
    repr_get_attr_int rx538_pos, $P11, rx538_curclass, "$!pos"
    goto alt542_end1155
  alt542_end1155:
    nqp_rxcommit rx538_bstack, alt542_end1155
    repr_bind_attr_int rx538_cur, rx538_curclass, "$!pos", rx538_pos
    $P11 = rx538_cur."ws"()
    repr_get_attr_int $I11, $P11, rx538_curclass, "$!pos"
    lt $I11, 0, rx538_fail1145
    repr_get_attr_int rx538_pos, $P11, rx538_curclass, "$!pos"
    rx538_cur."!cursor_pass"(rx538_pos, "statement_control:sym<repeat>", 'backtrack'=>1)
    .return (rx538_cur)
  rx538_restart1144:
    repr_get_attr_obj rx538_cstack, rx538_cur, rx538_curclass, "$!cstack"
  rx538_fail1145:
    unless rx538_bstack, rx538_done1143
    pop $I19, rx538_bstack
    if_null rx538_cstack, rx538_cstack_done1148
    unless rx538_cstack, rx538_cstack_done1148
    dec $I19
    set $P11, rx538_cstack[$I19]
  rx538_cstack_done1148:
    pop rx538_rep, rx538_bstack
    pop rx538_pos, rx538_bstack
    pop $I19, rx538_bstack
    lt rx538_pos, -1, rx538_done1143
    lt rx538_pos, 0, rx538_fail1145
    eq $I19, 0, rx538_fail1145
    nqp_islist $I20, rx538_cstack
    unless $I20, rx538_jump1146
    elements $I18, rx538_bstack
    le $I18, 0, rx538_cut1147
    dec $I18
    set $I18, rx538_bstack[$I18]
  rx538_cut1147:
    assign rx538_cstack, $I18
  rx538_jump1146:
    jump $I19
  rx538_done1143:
    rx538_cur."!cursor_fail"()
    .return (rx538_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<for>" :subid("cuid_69_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 881
    .param pmc _lex_param_0 
    .lex "$*CONTROL_USED", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx558_start
    .local string rx558_tgt
    .local int rx558_pos
    .local int rx558_off
    .local int rx558_eos
    .local int rx558_rep
    .local pmc rx558_cur
    .local pmc rx558_curclass
    .local pmc rx558_bstack
    .local pmc rx558_cstack
    rx558_start = self."!cursor_start_all"()
    set rx558_cur, rx558_start[0]
    set rx558_tgt, rx558_start[1]
    set rx558_pos, rx558_start[2]
    set rx558_curclass, rx558_start[3]
    set rx558_bstack, rx558_start[4]
    set $I19, rx558_start[5]
    store_lex unicode:"$\x{a2}", rx558_cur
    length rx558_eos, rx558_tgt
    eq $I19, 1, rx558_restart1181
    gt rx558_pos, rx558_eos, rx558_fail1182
    repr_get_attr_int $I11, self, rx558_curclass, "$!from"
    ne $I11, -1, rxscan559_done1188
    goto rxscan559_scan1187
  rxscan559_loop1186:
    inc rx558_pos
    gt rx558_pos, rx558_eos, rx558_fail1182
    repr_bind_attr_int rx558_cur, rx558_curclass, "$!from", rx558_pos
  rxscan559_scan1187:
    nqp_rxmark rx558_bstack, rxscan559_loop1186, rx558_pos, 0
  rxscan559_done1188:
    repr_bind_attr_int rx558_cur, rx558_curclass, "$!pos", rx558_pos
    store_lex unicode:"$\x{a2}", rx558_cur
    box $P5002, 0
    set $P101, $P5002
    nqp_rxmark rx558_bstack, rxcap560_fail1190, rx558_pos, 0
    add $I11, rx558_pos, 3
    gt $I11, rx558_eos, rx558_fail1182
    substr $S10, rx558_tgt, rx558_pos, 3
    ne $S10, ucs4:"for", rx558_fail1182
    add rx558_pos, 3
    nqp_rxpeek $I19, rx558_bstack, rxcap560_fail1190
    inc $I19
    set $I11, rx558_bstack[$I19]
    repr_bind_attr_int rx558_cur, rx558_curclass, "$!pos", rx558_pos
    $P11 = rx558_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx558_pos)
    rx558_cstack = rx558_cur."!cursor_capture"($P11, "sym")
    goto rxcap560_done1189
  rxcap560_fail1190:
    goto rx558_fail1182
  rxcap560_done1189:
    ge rx558_pos, rx558_eos, rx558_fail1182
    is_cclass $I11, .CCLASS_WHITESPACE, rx558_tgt, rx558_pos
    unless $I11, rx558_fail1182
    add rx558_pos, 1
    repr_bind_attr_int rx558_cur, rx558_curclass, "$!pos", rx558_pos
    $P11 = rx558_cur."ws"()
    repr_get_attr_int $I11, $P11, rx558_curclass, "$!pos"
    lt $I11, 0, rx558_fail1182
    repr_get_attr_int rx558_pos, $P11, rx558_curclass, "$!pos"
    repr_bind_attr_int rx558_cur, rx558_curclass, "$!pos", rx558_pos
    $P11 = rx558_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx558_curclass, "$!pos"
    lt $I11, 0, rx558_fail1182
    nqp_rxmark rx558_bstack, rxsubrule562_pass1192, -1, 0
  rxsubrule562_pass1192:
    rx558_cstack = rx558_cur."!cursor_capture"($P11, "xblock")
    repr_get_attr_int rx558_pos, $P11, rx558_curclass, "$!pos"
    repr_bind_attr_int rx558_cur, rx558_curclass, "$!pos", rx558_pos
    $P11 = rx558_cur."ws"()
    repr_get_attr_int $I11, $P11, rx558_curclass, "$!pos"
    lt $I11, 0, rx558_fail1182
    repr_get_attr_int rx558_pos, $P11, rx558_curclass, "$!pos"
    rx558_cur."!cursor_pass"(rx558_pos, "statement_control:sym<for>", 'backtrack'=>1)
    .return (rx558_cur)
  rx558_restart1181:
    repr_get_attr_obj rx558_cstack, rx558_cur, rx558_curclass, "$!cstack"
  rx558_fail1182:
    unless rx558_bstack, rx558_done1180
    pop $I19, rx558_bstack
    if_null rx558_cstack, rx558_cstack_done1185
    unless rx558_cstack, rx558_cstack_done1185
    dec $I19
    set $P11, rx558_cstack[$I19]
  rx558_cstack_done1185:
    pop rx558_rep, rx558_bstack
    pop rx558_pos, rx558_bstack
    pop $I19, rx558_bstack
    lt rx558_pos, -1, rx558_done1180
    lt rx558_pos, 0, rx558_fail1182
    eq $I19, 0, rx558_fail1182
    nqp_islist $I20, rx558_cstack
    unless $I20, rx558_jump1183
    elements $I18, rx558_bstack
    le $I18, 0, rx558_cut1184
    dec $I18
    set $I18, rx558_bstack[$I18]
  rx558_cut1184:
    assign rx558_cstack, $I18
  rx558_jump1183:
    jump $I19
  rx558_done1180:
    rx558_cur."!cursor_fail"()
    .return (rx558_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<CATCH>" :subid("cuid_70_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 887
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx564_start
    .local string rx564_tgt
    .local int rx564_pos
    .local int rx564_off
    .local int rx564_eos
    .local int rx564_rep
    .local pmc rx564_cur
    .local pmc rx564_curclass
    .local pmc rx564_bstack
    .local pmc rx564_cstack
    rx564_start = self."!cursor_start_all"()
    set rx564_cur, rx564_start[0]
    set rx564_tgt, rx564_start[1]
    set rx564_pos, rx564_start[2]
    set rx564_curclass, rx564_start[3]
    set rx564_bstack, rx564_start[4]
    set $I19, rx564_start[5]
    store_lex unicode:"$\x{a2}", rx564_cur
    length rx564_eos, rx564_tgt
    eq $I19, 1, rx564_restart1196
    gt rx564_pos, rx564_eos, rx564_fail1197
    repr_get_attr_int $I11, self, rx564_curclass, "$!from"
    ne $I11, -1, rxscan565_done1203
    goto rxscan565_scan1202
  rxscan565_loop1201:
    inc rx564_pos
    gt rx564_pos, rx564_eos, rx564_fail1197
    repr_bind_attr_int rx564_cur, rx564_curclass, "$!from", rx564_pos
  rxscan565_scan1202:
    nqp_rxmark rx564_bstack, rxscan565_loop1201, rx564_pos, 0
  rxscan565_done1203:
    nqp_rxmark rx564_bstack, rxcap566_fail1205, rx564_pos, 0
    add $I11, rx564_pos, 5
    gt $I11, rx564_eos, rx564_fail1197
    substr $S10, rx564_tgt, rx564_pos, 5
    ne $S10, ucs4:"CATCH", rx564_fail1197
    add rx564_pos, 5
    nqp_rxpeek $I19, rx564_bstack, rxcap566_fail1205
    inc $I19
    set $I11, rx564_bstack[$I19]
    repr_bind_attr_int rx564_cur, rx564_curclass, "$!pos", rx564_pos
    $P11 = rx564_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx564_pos)
    rx564_cstack = rx564_cur."!cursor_capture"($P11, "sym")
    goto rxcap566_done1204
  rxcap566_fail1205:
    goto rx564_fail1197
  rxcap566_done1204:
    ge rx564_pos, rx564_eos, rx564_fail1197
    is_cclass $I11, .CCLASS_WHITESPACE, rx564_tgt, rx564_pos
    unless $I11, rx564_fail1197
    add rx564_pos, 1
    repr_bind_attr_int rx564_cur, rx564_curclass, "$!pos", rx564_pos
    $P11 = rx564_cur."ws"()
    repr_get_attr_int $I11, $P11, rx564_curclass, "$!pos"
    lt $I11, 0, rx564_fail1197
    repr_get_attr_int rx564_pos, $P11, rx564_curclass, "$!pos"
    repr_bind_attr_int rx564_cur, rx564_curclass, "$!pos", rx564_pos
    $P11 = rx564_cur."block"()
    repr_get_attr_int $I11, $P11, rx564_curclass, "$!pos"
    lt $I11, 0, rx564_fail1197
    nqp_rxmark rx564_bstack, rxsubrule568_pass1207, -1, 0
  rxsubrule568_pass1207:
    rx564_cstack = rx564_cur."!cursor_capture"($P11, "block")
    repr_get_attr_int rx564_pos, $P11, rx564_curclass, "$!pos"
    repr_bind_attr_int rx564_cur, rx564_curclass, "$!pos", rx564_pos
    $P11 = rx564_cur."ws"()
    repr_get_attr_int $I11, $P11, rx564_curclass, "$!pos"
    lt $I11, 0, rx564_fail1197
    repr_get_attr_int rx564_pos, $P11, rx564_curclass, "$!pos"
    rx564_cur."!cursor_pass"(rx564_pos, "statement_control:sym<CATCH>", 'backtrack'=>1)
    .return (rx564_cur)
  rx564_restart1196:
    repr_get_attr_obj rx564_cstack, rx564_cur, rx564_curclass, "$!cstack"
  rx564_fail1197:
    unless rx564_bstack, rx564_done1195
    pop $I19, rx564_bstack
    if_null rx564_cstack, rx564_cstack_done1200
    unless rx564_cstack, rx564_cstack_done1200
    dec $I19
    set $P11, rx564_cstack[$I19]
  rx564_cstack_done1200:
    pop rx564_rep, rx564_bstack
    pop rx564_pos, rx564_bstack
    pop $I19, rx564_bstack
    lt rx564_pos, -1, rx564_done1195
    lt rx564_pos, 0, rx564_fail1197
    eq $I19, 0, rx564_fail1197
    nqp_islist $I20, rx564_cstack
    unless $I20, rx564_jump1198
    elements $I18, rx564_bstack
    le $I18, 0, rx564_cut1199
    dec $I18
    set $I18, rx564_bstack[$I18]
  rx564_cut1199:
    assign rx564_cstack, $I18
  rx564_jump1198:
    jump $I19
  rx564_done1195:
    rx564_cur."!cursor_fail"()
    .return (rx564_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<CONTROL>" :subid("cuid_71_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 892
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx570_start
    .local string rx570_tgt
    .local int rx570_pos
    .local int rx570_off
    .local int rx570_eos
    .local int rx570_rep
    .local pmc rx570_cur
    .local pmc rx570_curclass
    .local pmc rx570_bstack
    .local pmc rx570_cstack
    rx570_start = self."!cursor_start_all"()
    set rx570_cur, rx570_start[0]
    set rx570_tgt, rx570_start[1]
    set rx570_pos, rx570_start[2]
    set rx570_curclass, rx570_start[3]
    set rx570_bstack, rx570_start[4]
    set $I19, rx570_start[5]
    store_lex unicode:"$\x{a2}", rx570_cur
    length rx570_eos, rx570_tgt
    eq $I19, 1, rx570_restart1211
    gt rx570_pos, rx570_eos, rx570_fail1212
    repr_get_attr_int $I11, self, rx570_curclass, "$!from"
    ne $I11, -1, rxscan571_done1218
    goto rxscan571_scan1217
  rxscan571_loop1216:
    inc rx570_pos
    gt rx570_pos, rx570_eos, rx570_fail1212
    repr_bind_attr_int rx570_cur, rx570_curclass, "$!from", rx570_pos
  rxscan571_scan1217:
    nqp_rxmark rx570_bstack, rxscan571_loop1216, rx570_pos, 0
  rxscan571_done1218:
    nqp_rxmark rx570_bstack, rxcap572_fail1220, rx570_pos, 0
    add $I11, rx570_pos, 7
    gt $I11, rx570_eos, rx570_fail1212
    substr $S10, rx570_tgt, rx570_pos, 7
    ne $S10, ucs4:"CONTROL", rx570_fail1212
    add rx570_pos, 7
    nqp_rxpeek $I19, rx570_bstack, rxcap572_fail1220
    inc $I19
    set $I11, rx570_bstack[$I19]
    repr_bind_attr_int rx570_cur, rx570_curclass, "$!pos", rx570_pos
    $P11 = rx570_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx570_pos)
    rx570_cstack = rx570_cur."!cursor_capture"($P11, "sym")
    goto rxcap572_done1219
  rxcap572_fail1220:
    goto rx570_fail1212
  rxcap572_done1219:
    ge rx570_pos, rx570_eos, rx570_fail1212
    is_cclass $I11, .CCLASS_WHITESPACE, rx570_tgt, rx570_pos
    unless $I11, rx570_fail1212
    add rx570_pos, 1
    repr_bind_attr_int rx570_cur, rx570_curclass, "$!pos", rx570_pos
    $P11 = rx570_cur."ws"()
    repr_get_attr_int $I11, $P11, rx570_curclass, "$!pos"
    lt $I11, 0, rx570_fail1212
    repr_get_attr_int rx570_pos, $P11, rx570_curclass, "$!pos"
    repr_bind_attr_int rx570_cur, rx570_curclass, "$!pos", rx570_pos
    $P11 = rx570_cur."block"()
    repr_get_attr_int $I11, $P11, rx570_curclass, "$!pos"
    lt $I11, 0, rx570_fail1212
    nqp_rxmark rx570_bstack, rxsubrule574_pass1222, -1, 0
  rxsubrule574_pass1222:
    rx570_cstack = rx570_cur."!cursor_capture"($P11, "block")
    repr_get_attr_int rx570_pos, $P11, rx570_curclass, "$!pos"
    repr_bind_attr_int rx570_cur, rx570_curclass, "$!pos", rx570_pos
    $P11 = rx570_cur."ws"()
    repr_get_attr_int $I11, $P11, rx570_curclass, "$!pos"
    lt $I11, 0, rx570_fail1212
    repr_get_attr_int rx570_pos, $P11, rx570_curclass, "$!pos"
    rx570_cur."!cursor_pass"(rx570_pos, "statement_control:sym<CONTROL>", 'backtrack'=>1)
    .return (rx570_cur)
  rx570_restart1211:
    repr_get_attr_obj rx570_cstack, rx570_cur, rx570_curclass, "$!cstack"
  rx570_fail1212:
    unless rx570_bstack, rx570_done1210
    pop $I19, rx570_bstack
    if_null rx570_cstack, rx570_cstack_done1215
    unless rx570_cstack, rx570_cstack_done1215
    dec $I19
    set $P11, rx570_cstack[$I19]
  rx570_cstack_done1215:
    pop rx570_rep, rx570_bstack
    pop rx570_pos, rx570_bstack
    pop $I19, rx570_bstack
    lt rx570_pos, -1, rx570_done1210
    lt rx570_pos, 0, rx570_fail1212
    eq $I19, 0, rx570_fail1212
    nqp_islist $I20, rx570_cstack
    unless $I20, rx570_jump1213
    elements $I18, rx570_bstack
    le $I18, 0, rx570_cut1214
    dec $I18
    set $I18, rx570_bstack[$I18]
  rx570_cut1214:
    assign rx570_cstack, $I18
  rx570_jump1213:
    jump $I19
  rx570_done1210:
    rx570_cur."!cursor_fail"()
    .return (rx570_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix" :subid("cuid_72_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 897
    .param pmc self 
    $P5001 = self."!protoregex"("statement_prefix")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<BEGIN>" :subid("cuid_73_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 898
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx576_start
    .local string rx576_tgt
    .local int rx576_pos
    .local int rx576_off
    .local int rx576_eos
    .local int rx576_rep
    .local pmc rx576_cur
    .local pmc rx576_curclass
    .local pmc rx576_bstack
    .local pmc rx576_cstack
    rx576_start = self."!cursor_start_all"()
    set rx576_cur, rx576_start[0]
    set rx576_tgt, rx576_start[1]
    set rx576_pos, rx576_start[2]
    set rx576_curclass, rx576_start[3]
    set rx576_bstack, rx576_start[4]
    set $I19, rx576_start[5]
    store_lex unicode:"$\x{a2}", rx576_cur
    length rx576_eos, rx576_tgt
    eq $I19, 1, rx576_restart1226
    gt rx576_pos, rx576_eos, rx576_fail1227
    repr_get_attr_int $I11, self, rx576_curclass, "$!from"
    ne $I11, -1, rxscan577_done1233
    goto rxscan577_scan1232
  rxscan577_loop1231:
    inc rx576_pos
    gt rx576_pos, rx576_eos, rx576_fail1227
    repr_bind_attr_int rx576_cur, rx576_curclass, "$!from", rx576_pos
  rxscan577_scan1232:
    nqp_rxmark rx576_bstack, rxscan577_loop1231, rx576_pos, 0
  rxscan577_done1233:
    nqp_rxmark rx576_bstack, rxcap578_fail1235, rx576_pos, 0
    add $I11, rx576_pos, 5
    gt $I11, rx576_eos, rx576_fail1227
    substr $S10, rx576_tgt, rx576_pos, 5
    ne $S10, ucs4:"BEGIN", rx576_fail1227
    add rx576_pos, 5
    nqp_rxpeek $I19, rx576_bstack, rxcap578_fail1235
    inc $I19
    set $I11, rx576_bstack[$I19]
    repr_bind_attr_int rx576_cur, rx576_curclass, "$!pos", rx576_pos
    $P11 = rx576_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx576_pos)
    rx576_cstack = rx576_cur."!cursor_capture"($P11, "sym")
    goto rxcap578_done1234
  rxcap578_fail1235:
    goto rx576_fail1227
  rxcap578_done1234:
    repr_bind_attr_int rx576_cur, rx576_curclass, "$!pos", rx576_pos
    $P11 = rx576_cur."blorst"()
    repr_get_attr_int $I11, $P11, rx576_curclass, "$!pos"
    lt $I11, 0, rx576_fail1227
    nqp_rxmark rx576_bstack, rxsubrule579_pass1236, -1, 0
  rxsubrule579_pass1236:
    rx576_cstack = rx576_cur."!cursor_capture"($P11, "blorst")
    repr_get_attr_int rx576_pos, $P11, rx576_curclass, "$!pos"
    rx576_cur."!cursor_pass"(rx576_pos, "statement_prefix:sym<BEGIN>", 'backtrack'=>1)
    .return (rx576_cur)
  rx576_restart1226:
    repr_get_attr_obj rx576_cstack, rx576_cur, rx576_curclass, "$!cstack"
  rx576_fail1227:
    unless rx576_bstack, rx576_done1225
    pop $I19, rx576_bstack
    if_null rx576_cstack, rx576_cstack_done1230
    unless rx576_cstack, rx576_cstack_done1230
    dec $I19
    set $P11, rx576_cstack[$I19]
  rx576_cstack_done1230:
    pop rx576_rep, rx576_bstack
    pop rx576_pos, rx576_bstack
    pop $I19, rx576_bstack
    lt rx576_pos, -1, rx576_done1225
    lt rx576_pos, 0, rx576_fail1227
    eq $I19, 0, rx576_fail1227
    nqp_islist $I20, rx576_cstack
    unless $I20, rx576_jump1228
    elements $I18, rx576_bstack
    le $I18, 0, rx576_cut1229
    dec $I18
    set $I18, rx576_bstack[$I18]
  rx576_cut1229:
    assign rx576_cstack, $I18
  rx576_jump1228:
    jump $I19
  rx576_done1225:
    rx576_cur."!cursor_fail"()
    .return (rx576_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<INIT>" :subid("cuid_74_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 899
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx580_start
    .local string rx580_tgt
    .local int rx580_pos
    .local int rx580_off
    .local int rx580_eos
    .local int rx580_rep
    .local pmc rx580_cur
    .local pmc rx580_curclass
    .local pmc rx580_bstack
    .local pmc rx580_cstack
    rx580_start = self."!cursor_start_all"()
    set rx580_cur, rx580_start[0]
    set rx580_tgt, rx580_start[1]
    set rx580_pos, rx580_start[2]
    set rx580_curclass, rx580_start[3]
    set rx580_bstack, rx580_start[4]
    set $I19, rx580_start[5]
    store_lex unicode:"$\x{a2}", rx580_cur
    length rx580_eos, rx580_tgt
    eq $I19, 1, rx580_restart1239
    gt rx580_pos, rx580_eos, rx580_fail1240
    repr_get_attr_int $I11, self, rx580_curclass, "$!from"
    ne $I11, -1, rxscan581_done1246
    goto rxscan581_scan1245
  rxscan581_loop1244:
    inc rx580_pos
    gt rx580_pos, rx580_eos, rx580_fail1240
    repr_bind_attr_int rx580_cur, rx580_curclass, "$!from", rx580_pos
  rxscan581_scan1245:
    nqp_rxmark rx580_bstack, rxscan581_loop1244, rx580_pos, 0
  rxscan581_done1246:
    nqp_rxmark rx580_bstack, rxcap582_fail1248, rx580_pos, 0
    add $I11, rx580_pos, 4
    gt $I11, rx580_eos, rx580_fail1240
    substr $S10, rx580_tgt, rx580_pos, 4
    ne $S10, ucs4:"INIT", rx580_fail1240
    add rx580_pos, 4
    nqp_rxpeek $I19, rx580_bstack, rxcap582_fail1248
    inc $I19
    set $I11, rx580_bstack[$I19]
    repr_bind_attr_int rx580_cur, rx580_curclass, "$!pos", rx580_pos
    $P11 = rx580_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx580_pos)
    rx580_cstack = rx580_cur."!cursor_capture"($P11, "sym")
    goto rxcap582_done1247
  rxcap582_fail1248:
    goto rx580_fail1240
  rxcap582_done1247:
    repr_bind_attr_int rx580_cur, rx580_curclass, "$!pos", rx580_pos
    $P11 = rx580_cur."blorst"()
    repr_get_attr_int $I11, $P11, rx580_curclass, "$!pos"
    lt $I11, 0, rx580_fail1240
    nqp_rxmark rx580_bstack, rxsubrule583_pass1249, -1, 0
  rxsubrule583_pass1249:
    rx580_cstack = rx580_cur."!cursor_capture"($P11, "blorst")
    repr_get_attr_int rx580_pos, $P11, rx580_curclass, "$!pos"
    rx580_cur."!cursor_pass"(rx580_pos, "statement_prefix:sym<INIT>", 'backtrack'=>1)
    .return (rx580_cur)
  rx580_restart1239:
    repr_get_attr_obj rx580_cstack, rx580_cur, rx580_curclass, "$!cstack"
  rx580_fail1240:
    unless rx580_bstack, rx580_done1238
    pop $I19, rx580_bstack
    if_null rx580_cstack, rx580_cstack_done1243
    unless rx580_cstack, rx580_cstack_done1243
    dec $I19
    set $P11, rx580_cstack[$I19]
  rx580_cstack_done1243:
    pop rx580_rep, rx580_bstack
    pop rx580_pos, rx580_bstack
    pop $I19, rx580_bstack
    lt rx580_pos, -1, rx580_done1238
    lt rx580_pos, 0, rx580_fail1240
    eq $I19, 0, rx580_fail1240
    nqp_islist $I20, rx580_cstack
    unless $I20, rx580_jump1241
    elements $I18, rx580_bstack
    le $I18, 0, rx580_cut1242
    dec $I18
    set $I18, rx580_bstack[$I18]
  rx580_cut1242:
    assign rx580_cstack, $I18
  rx580_jump1241:
    jump $I19
  rx580_done1238:
    rx580_cur."!cursor_fail"()
    .return (rx580_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<try>" :subid("cuid_75_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 901
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx584_start
    .local string rx584_tgt
    .local int rx584_pos
    .local int rx584_off
    .local int rx584_eos
    .local int rx584_rep
    .local pmc rx584_cur
    .local pmc rx584_curclass
    .local pmc rx584_bstack
    .local pmc rx584_cstack
    rx584_start = self."!cursor_start_all"()
    set rx584_cur, rx584_start[0]
    set rx584_tgt, rx584_start[1]
    set rx584_pos, rx584_start[2]
    set rx584_curclass, rx584_start[3]
    set rx584_bstack, rx584_start[4]
    set $I19, rx584_start[5]
    store_lex unicode:"$\x{a2}", rx584_cur
    length rx584_eos, rx584_tgt
    eq $I19, 1, rx584_restart1252
    gt rx584_pos, rx584_eos, rx584_fail1253
    repr_get_attr_int $I11, self, rx584_curclass, "$!from"
    ne $I11, -1, rxscan585_done1259
    goto rxscan585_scan1258
  rxscan585_loop1257:
    inc rx584_pos
    gt rx584_pos, rx584_eos, rx584_fail1253
    repr_bind_attr_int rx584_cur, rx584_curclass, "$!from", rx584_pos
  rxscan585_scan1258:
    nqp_rxmark rx584_bstack, rxscan585_loop1257, rx584_pos, 0
  rxscan585_done1259:
    nqp_rxmark rx584_bstack, rxcap586_fail1261, rx584_pos, 0
    add $I11, rx584_pos, 3
    gt $I11, rx584_eos, rx584_fail1253
    substr $S10, rx584_tgt, rx584_pos, 3
    ne $S10, ucs4:"try", rx584_fail1253
    add rx584_pos, 3
    nqp_rxpeek $I19, rx584_bstack, rxcap586_fail1261
    inc $I19
    set $I11, rx584_bstack[$I19]
    repr_bind_attr_int rx584_cur, rx584_curclass, "$!pos", rx584_pos
    $P11 = rx584_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx584_pos)
    rx584_cstack = rx584_cur."!cursor_capture"($P11, "sym")
    goto rxcap586_done1260
  rxcap586_fail1261:
    goto rx584_fail1253
  rxcap586_done1260:
    repr_bind_attr_int rx584_cur, rx584_curclass, "$!pos", rx584_pos
    $P11 = rx584_cur."blorst"()
    repr_get_attr_int $I11, $P11, rx584_curclass, "$!pos"
    lt $I11, 0, rx584_fail1253
    nqp_rxmark rx584_bstack, rxsubrule587_pass1262, -1, 0
  rxsubrule587_pass1262:
    rx584_cstack = rx584_cur."!cursor_capture"($P11, "blorst")
    repr_get_attr_int rx584_pos, $P11, rx584_curclass, "$!pos"
    rx584_cur."!cursor_pass"(rx584_pos, "statement_prefix:sym<try>", 'backtrack'=>1)
    .return (rx584_cur)
  rx584_restart1252:
    repr_get_attr_obj rx584_cstack, rx584_cur, rx584_curclass, "$!cstack"
  rx584_fail1253:
    unless rx584_bstack, rx584_done1251
    pop $I19, rx584_bstack
    if_null rx584_cstack, rx584_cstack_done1256
    unless rx584_cstack, rx584_cstack_done1256
    dec $I19
    set $P11, rx584_cstack[$I19]
  rx584_cstack_done1256:
    pop rx584_rep, rx584_bstack
    pop rx584_pos, rx584_bstack
    pop $I19, rx584_bstack
    lt rx584_pos, -1, rx584_done1251
    lt rx584_pos, 0, rx584_fail1253
    eq $I19, 0, rx584_fail1253
    nqp_islist $I20, rx584_cstack
    unless $I20, rx584_jump1254
    elements $I18, rx584_bstack
    le $I18, 0, rx584_cut1255
    dec $I18
    set $I18, rx584_bstack[$I18]
  rx584_cut1255:
    assign rx584_cstack, $I18
  rx584_jump1254:
    jump $I19
  rx584_done1251:
    rx584_cur."!cursor_fail"()
    .return (rx584_cur) 
.end
.HLL "nqp"
.namespace []
.sub "blorst" :subid("cuid_76_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 906
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx588_start
    .local string rx588_tgt
    .local int rx588_pos
    .local int rx588_off
    .local int rx588_eos
    .local int rx588_rep
    .local pmc rx588_cur
    .local pmc rx588_curclass
    .local pmc rx588_bstack
    .local pmc rx588_cstack
    rx588_start = self."!cursor_start_all"()
    set rx588_cur, rx588_start[0]
    set rx588_tgt, rx588_start[1]
    set rx588_pos, rx588_start[2]
    set rx588_curclass, rx588_start[3]
    set rx588_bstack, rx588_start[4]
    set $I19, rx588_start[5]
    store_lex unicode:"$\x{a2}", rx588_cur
    length rx588_eos, rx588_tgt
    eq $I19, 1, rx588_restart1265
    gt rx588_pos, rx588_eos, rx588_fail1266
    repr_get_attr_int $I11, self, rx588_curclass, "$!from"
    ne $I11, -1, rxscan589_done1272
    goto rxscan589_scan1271
  rxscan589_loop1270:
    inc rx588_pos
    gt rx588_pos, rx588_eos, rx588_fail1266
    repr_bind_attr_int rx588_cur, rx588_curclass, "$!from", rx588_pos
  rxscan589_scan1271:
    nqp_rxmark rx588_bstack, rxscan589_loop1270, rx588_pos, 0
  rxscan589_done1272:
    ge rx588_pos, rx588_eos, rx588_fail1266
    is_cclass $I11, .CCLASS_WHITESPACE, rx588_tgt, rx588_pos
    unless $I11, rx588_fail1266
    add rx588_pos, 1
    repr_bind_attr_int rx588_cur, rx588_curclass, "$!pos", rx588_pos
    $P11 = rx588_cur."ws"()
    repr_get_attr_int $I11, $P11, rx588_curclass, "$!pos"
    lt $I11, 0, rx588_fail1266
    repr_get_attr_int rx588_pos, $P11, rx588_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt591_01275
    nqp_push_label $P11, alt591_11277
    nqp_rxmark rx588_bstack, alt591_end1274, -1, 0
    rx588_cur."!alt"(rx588_pos, "alt_nfa__16_1367388602.95248", $P11)
    goto rx588_fail1266
  alt591_01275:
    ge rx588_pos, rx588_eos, rx588_fail1266
    substr $S11, rx588_tgt, rx588_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx588_fail1266
    repr_bind_attr_int rx588_cur, rx588_curclass, "$!pos", rx588_pos
    $P11 = rx588_cur."block"()
    repr_get_attr_int $I11, $P11, rx588_curclass, "$!pos"
    lt $I11, 0, rx588_fail1266
    nqp_rxmark rx588_bstack, rxsubrule592_pass1276, -1, 0
  rxsubrule592_pass1276:
    rx588_cstack = rx588_cur."!cursor_capture"($P11, "block")
    repr_get_attr_int rx588_pos, $P11, rx588_curclass, "$!pos"
    goto alt591_end1274
  alt591_11277:
    repr_bind_attr_int rx588_cur, rx588_curclass, "$!pos", rx588_pos
    $P11 = rx588_cur."statement"()
    repr_get_attr_int $I11, $P11, rx588_curclass, "$!pos"
    lt $I11, 0, rx588_fail1266
    nqp_rxmark rx588_bstack, rxsubrule593_pass1278, -1, 0
  rxsubrule593_pass1278:
    rx588_cstack = rx588_cur."!cursor_capture"($P11, "statement")
    repr_get_attr_int rx588_pos, $P11, rx588_curclass, "$!pos"
    goto alt591_end1274
  alt591_end1274:
    nqp_rxcommit rx588_bstack, alt591_end1274
    rx588_cur."!cursor_pass"(rx588_pos, "blorst", 'backtrack'=>1)
    .return (rx588_cur)
  rx588_restart1265:
    repr_get_attr_obj rx588_cstack, rx588_cur, rx588_curclass, "$!cstack"
  rx588_fail1266:
    unless rx588_bstack, rx588_done1264
    pop $I19, rx588_bstack
    if_null rx588_cstack, rx588_cstack_done1269
    unless rx588_cstack, rx588_cstack_done1269
    dec $I19
    set $P11, rx588_cstack[$I19]
  rx588_cstack_done1269:
    pop rx588_rep, rx588_bstack
    pop rx588_pos, rx588_bstack
    pop $I19, rx588_bstack
    lt rx588_pos, -1, rx588_done1264
    lt rx588_pos, 0, rx588_fail1266
    eq $I19, 0, rx588_fail1266
    nqp_islist $I20, rx588_cstack
    unless $I20, rx588_jump1267
    elements $I18, rx588_bstack
    le $I18, 0, rx588_cut1268
    dec $I18
    set $I18, rx588_bstack[$I18]
  rx588_cut1268:
    assign rx588_cstack, $I18
  rx588_jump1267:
    jump $I19
  rx588_done1264:
    rx588_cur."!cursor_fail"()
    .return (rx588_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond" :subid("cuid_77_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 912
    .param pmc self 
    $P5001 = self."!protoregex"("statement_mod_cond")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond:sym<if>" :subid("cuid_78_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 914
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx594_start
    .local string rx594_tgt
    .local int rx594_pos
    .local int rx594_off
    .local int rx594_eos
    .local int rx594_rep
    .local pmc rx594_cur
    .local pmc rx594_curclass
    .local pmc rx594_bstack
    .local pmc rx594_cstack
    rx594_start = self."!cursor_start_all"()
    set rx594_cur, rx594_start[0]
    set rx594_tgt, rx594_start[1]
    set rx594_pos, rx594_start[2]
    set rx594_curclass, rx594_start[3]
    set rx594_bstack, rx594_start[4]
    set $I19, rx594_start[5]
    store_lex unicode:"$\x{a2}", rx594_cur
    length rx594_eos, rx594_tgt
    eq $I19, 1, rx594_restart1281
    gt rx594_pos, rx594_eos, rx594_fail1282
    repr_get_attr_int $I11, self, rx594_curclass, "$!from"
    ne $I11, -1, rxscan595_done1288
    goto rxscan595_scan1287
  rxscan595_loop1286:
    inc rx594_pos
    gt rx594_pos, rx594_eos, rx594_fail1282
    repr_bind_attr_int rx594_cur, rx594_curclass, "$!from", rx594_pos
  rxscan595_scan1287:
    nqp_rxmark rx594_bstack, rxscan595_loop1286, rx594_pos, 0
  rxscan595_done1288:
    nqp_rxmark rx594_bstack, rxcap596_fail1290, rx594_pos, 0
    add $I11, rx594_pos, 2
    gt $I11, rx594_eos, rx594_fail1282
    substr $S10, rx594_tgt, rx594_pos, 2
    ne $S10, ucs4:"if", rx594_fail1282
    add rx594_pos, 2
    nqp_rxpeek $I19, rx594_bstack, rxcap596_fail1290
    inc $I19
    set $I11, rx594_bstack[$I19]
    repr_bind_attr_int rx594_cur, rx594_curclass, "$!pos", rx594_pos
    $P11 = rx594_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx594_pos)
    rx594_cstack = rx594_cur."!cursor_capture"($P11, "sym")
    goto rxcap596_done1289
  rxcap596_fail1290:
    goto rx594_fail1282
  rxcap596_done1289:
    repr_bind_attr_int rx594_cur, rx594_curclass, "$!pos", rx594_pos
    $P11 = rx594_cur."ws"()
    repr_get_attr_int $I11, $P11, rx594_curclass, "$!pos"
    lt $I11, 0, rx594_fail1282
    repr_get_attr_int rx594_pos, $P11, rx594_curclass, "$!pos"
    repr_bind_attr_int rx594_cur, rx594_curclass, "$!pos", rx594_pos
    $P11 = rx594_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx594_curclass, "$!pos"
    lt $I11, 0, rx594_fail1282
    nqp_rxmark rx594_bstack, rxsubrule598_pass1292, -1, 0
  rxsubrule598_pass1292:
    rx594_cstack = rx594_cur."!cursor_capture"($P11, "cond")
    repr_get_attr_int rx594_pos, $P11, rx594_curclass, "$!pos"
    repr_bind_attr_int rx594_cur, rx594_curclass, "$!pos", rx594_pos
    $P11 = rx594_cur."ws"()
    repr_get_attr_int $I11, $P11, rx594_curclass, "$!pos"
    lt $I11, 0, rx594_fail1282
    repr_get_attr_int rx594_pos, $P11, rx594_curclass, "$!pos"
    rx594_cur."!cursor_pass"(rx594_pos, "statement_mod_cond:sym<if>", 'backtrack'=>1)
    .return (rx594_cur)
  rx594_restart1281:
    repr_get_attr_obj rx594_cstack, rx594_cur, rx594_curclass, "$!cstack"
  rx594_fail1282:
    unless rx594_bstack, rx594_done1280
    pop $I19, rx594_bstack
    if_null rx594_cstack, rx594_cstack_done1285
    unless rx594_cstack, rx594_cstack_done1285
    dec $I19
    set $P11, rx594_cstack[$I19]
  rx594_cstack_done1285:
    pop rx594_rep, rx594_bstack
    pop rx594_pos, rx594_bstack
    pop $I19, rx594_bstack
    lt rx594_pos, -1, rx594_done1280
    lt rx594_pos, 0, rx594_fail1282
    eq $I19, 0, rx594_fail1282
    nqp_islist $I20, rx594_cstack
    unless $I20, rx594_jump1283
    elements $I18, rx594_bstack
    le $I18, 0, rx594_cut1284
    dec $I18
    set $I18, rx594_bstack[$I18]
  rx594_cut1284:
    assign rx594_cstack, $I18
  rx594_jump1283:
    jump $I19
  rx594_done1280:
    rx594_cur."!cursor_fail"()
    .return (rx594_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond:sym<unless>" :subid("cuid_79_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 915
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx600_start
    .local string rx600_tgt
    .local int rx600_pos
    .local int rx600_off
    .local int rx600_eos
    .local int rx600_rep
    .local pmc rx600_cur
    .local pmc rx600_curclass
    .local pmc rx600_bstack
    .local pmc rx600_cstack
    rx600_start = self."!cursor_start_all"()
    set rx600_cur, rx600_start[0]
    set rx600_tgt, rx600_start[1]
    set rx600_pos, rx600_start[2]
    set rx600_curclass, rx600_start[3]
    set rx600_bstack, rx600_start[4]
    set $I19, rx600_start[5]
    store_lex unicode:"$\x{a2}", rx600_cur
    length rx600_eos, rx600_tgt
    eq $I19, 1, rx600_restart1296
    gt rx600_pos, rx600_eos, rx600_fail1297
    repr_get_attr_int $I11, self, rx600_curclass, "$!from"
    ne $I11, -1, rxscan601_done1303
    goto rxscan601_scan1302
  rxscan601_loop1301:
    inc rx600_pos
    gt rx600_pos, rx600_eos, rx600_fail1297
    repr_bind_attr_int rx600_cur, rx600_curclass, "$!from", rx600_pos
  rxscan601_scan1302:
    nqp_rxmark rx600_bstack, rxscan601_loop1301, rx600_pos, 0
  rxscan601_done1303:
    nqp_rxmark rx600_bstack, rxcap602_fail1305, rx600_pos, 0
    add $I11, rx600_pos, 6
    gt $I11, rx600_eos, rx600_fail1297
    substr $S10, rx600_tgt, rx600_pos, 6
    ne $S10, ucs4:"unless", rx600_fail1297
    add rx600_pos, 6
    nqp_rxpeek $I19, rx600_bstack, rxcap602_fail1305
    inc $I19
    set $I11, rx600_bstack[$I19]
    repr_bind_attr_int rx600_cur, rx600_curclass, "$!pos", rx600_pos
    $P11 = rx600_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx600_pos)
    rx600_cstack = rx600_cur."!cursor_capture"($P11, "sym")
    goto rxcap602_done1304
  rxcap602_fail1305:
    goto rx600_fail1297
  rxcap602_done1304:
    repr_bind_attr_int rx600_cur, rx600_curclass, "$!pos", rx600_pos
    $P11 = rx600_cur."ws"()
    repr_get_attr_int $I11, $P11, rx600_curclass, "$!pos"
    lt $I11, 0, rx600_fail1297
    repr_get_attr_int rx600_pos, $P11, rx600_curclass, "$!pos"
    repr_bind_attr_int rx600_cur, rx600_curclass, "$!pos", rx600_pos
    $P11 = rx600_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx600_curclass, "$!pos"
    lt $I11, 0, rx600_fail1297
    nqp_rxmark rx600_bstack, rxsubrule604_pass1307, -1, 0
  rxsubrule604_pass1307:
    rx600_cstack = rx600_cur."!cursor_capture"($P11, "cond")
    repr_get_attr_int rx600_pos, $P11, rx600_curclass, "$!pos"
    repr_bind_attr_int rx600_cur, rx600_curclass, "$!pos", rx600_pos
    $P11 = rx600_cur."ws"()
    repr_get_attr_int $I11, $P11, rx600_curclass, "$!pos"
    lt $I11, 0, rx600_fail1297
    repr_get_attr_int rx600_pos, $P11, rx600_curclass, "$!pos"
    rx600_cur."!cursor_pass"(rx600_pos, "statement_mod_cond:sym<unless>", 'backtrack'=>1)
    .return (rx600_cur)
  rx600_restart1296:
    repr_get_attr_obj rx600_cstack, rx600_cur, rx600_curclass, "$!cstack"
  rx600_fail1297:
    unless rx600_bstack, rx600_done1295
    pop $I19, rx600_bstack
    if_null rx600_cstack, rx600_cstack_done1300
    unless rx600_cstack, rx600_cstack_done1300
    dec $I19
    set $P11, rx600_cstack[$I19]
  rx600_cstack_done1300:
    pop rx600_rep, rx600_bstack
    pop rx600_pos, rx600_bstack
    pop $I19, rx600_bstack
    lt rx600_pos, -1, rx600_done1295
    lt rx600_pos, 0, rx600_fail1297
    eq $I19, 0, rx600_fail1297
    nqp_islist $I20, rx600_cstack
    unless $I20, rx600_jump1298
    elements $I18, rx600_bstack
    le $I18, 0, rx600_cut1299
    dec $I18
    set $I18, rx600_bstack[$I18]
  rx600_cut1299:
    assign rx600_cstack, $I18
  rx600_jump1298:
    jump $I19
  rx600_done1295:
    rx600_cur."!cursor_fail"()
    .return (rx600_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop" :subid("cuid_80_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 917
    .param pmc self 
    $P5001 = self."!protoregex"("statement_mod_loop")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<while>" :subid("cuid_81_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 919
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx606_start
    .local string rx606_tgt
    .local int rx606_pos
    .local int rx606_off
    .local int rx606_eos
    .local int rx606_rep
    .local pmc rx606_cur
    .local pmc rx606_curclass
    .local pmc rx606_bstack
    .local pmc rx606_cstack
    rx606_start = self."!cursor_start_all"()
    set rx606_cur, rx606_start[0]
    set rx606_tgt, rx606_start[1]
    set rx606_pos, rx606_start[2]
    set rx606_curclass, rx606_start[3]
    set rx606_bstack, rx606_start[4]
    set $I19, rx606_start[5]
    store_lex unicode:"$\x{a2}", rx606_cur
    length rx606_eos, rx606_tgt
    eq $I19, 1, rx606_restart1311
    gt rx606_pos, rx606_eos, rx606_fail1312
    repr_get_attr_int $I11, self, rx606_curclass, "$!from"
    ne $I11, -1, rxscan607_done1318
    goto rxscan607_scan1317
  rxscan607_loop1316:
    inc rx606_pos
    gt rx606_pos, rx606_eos, rx606_fail1312
    repr_bind_attr_int rx606_cur, rx606_curclass, "$!from", rx606_pos
  rxscan607_scan1317:
    nqp_rxmark rx606_bstack, rxscan607_loop1316, rx606_pos, 0
  rxscan607_done1318:
    nqp_rxmark rx606_bstack, rxcap608_fail1320, rx606_pos, 0
    add $I11, rx606_pos, 5
    gt $I11, rx606_eos, rx606_fail1312
    substr $S10, rx606_tgt, rx606_pos, 5
    ne $S10, ucs4:"while", rx606_fail1312
    add rx606_pos, 5
    nqp_rxpeek $I19, rx606_bstack, rxcap608_fail1320
    inc $I19
    set $I11, rx606_bstack[$I19]
    repr_bind_attr_int rx606_cur, rx606_curclass, "$!pos", rx606_pos
    $P11 = rx606_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx606_pos)
    rx606_cstack = rx606_cur."!cursor_capture"($P11, "sym")
    goto rxcap608_done1319
  rxcap608_fail1320:
    goto rx606_fail1312
  rxcap608_done1319:
    repr_bind_attr_int rx606_cur, rx606_curclass, "$!pos", rx606_pos
    $P11 = rx606_cur."ws"()
    repr_get_attr_int $I11, $P11, rx606_curclass, "$!pos"
    lt $I11, 0, rx606_fail1312
    repr_get_attr_int rx606_pos, $P11, rx606_curclass, "$!pos"
    repr_bind_attr_int rx606_cur, rx606_curclass, "$!pos", rx606_pos
    $P11 = rx606_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx606_curclass, "$!pos"
    lt $I11, 0, rx606_fail1312
    nqp_rxmark rx606_bstack, rxsubrule610_pass1322, -1, 0
  rxsubrule610_pass1322:
    rx606_cstack = rx606_cur."!cursor_capture"($P11, "cond")
    repr_get_attr_int rx606_pos, $P11, rx606_curclass, "$!pos"
    repr_bind_attr_int rx606_cur, rx606_curclass, "$!pos", rx606_pos
    $P11 = rx606_cur."ws"()
    repr_get_attr_int $I11, $P11, rx606_curclass, "$!pos"
    lt $I11, 0, rx606_fail1312
    repr_get_attr_int rx606_pos, $P11, rx606_curclass, "$!pos"
    rx606_cur."!cursor_pass"(rx606_pos, "statement_mod_loop:sym<while>", 'backtrack'=>1)
    .return (rx606_cur)
  rx606_restart1311:
    repr_get_attr_obj rx606_cstack, rx606_cur, rx606_curclass, "$!cstack"
  rx606_fail1312:
    unless rx606_bstack, rx606_done1310
    pop $I19, rx606_bstack
    if_null rx606_cstack, rx606_cstack_done1315
    unless rx606_cstack, rx606_cstack_done1315
    dec $I19
    set $P11, rx606_cstack[$I19]
  rx606_cstack_done1315:
    pop rx606_rep, rx606_bstack
    pop rx606_pos, rx606_bstack
    pop $I19, rx606_bstack
    lt rx606_pos, -1, rx606_done1310
    lt rx606_pos, 0, rx606_fail1312
    eq $I19, 0, rx606_fail1312
    nqp_islist $I20, rx606_cstack
    unless $I20, rx606_jump1313
    elements $I18, rx606_bstack
    le $I18, 0, rx606_cut1314
    dec $I18
    set $I18, rx606_bstack[$I18]
  rx606_cut1314:
    assign rx606_cstack, $I18
  rx606_jump1313:
    jump $I19
  rx606_done1310:
    rx606_cur."!cursor_fail"()
    .return (rx606_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<until>" :subid("cuid_82_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 920
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx612_start
    .local string rx612_tgt
    .local int rx612_pos
    .local int rx612_off
    .local int rx612_eos
    .local int rx612_rep
    .local pmc rx612_cur
    .local pmc rx612_curclass
    .local pmc rx612_bstack
    .local pmc rx612_cstack
    rx612_start = self."!cursor_start_all"()
    set rx612_cur, rx612_start[0]
    set rx612_tgt, rx612_start[1]
    set rx612_pos, rx612_start[2]
    set rx612_curclass, rx612_start[3]
    set rx612_bstack, rx612_start[4]
    set $I19, rx612_start[5]
    store_lex unicode:"$\x{a2}", rx612_cur
    length rx612_eos, rx612_tgt
    eq $I19, 1, rx612_restart1326
    gt rx612_pos, rx612_eos, rx612_fail1327
    repr_get_attr_int $I11, self, rx612_curclass, "$!from"
    ne $I11, -1, rxscan613_done1333
    goto rxscan613_scan1332
  rxscan613_loop1331:
    inc rx612_pos
    gt rx612_pos, rx612_eos, rx612_fail1327
    repr_bind_attr_int rx612_cur, rx612_curclass, "$!from", rx612_pos
  rxscan613_scan1332:
    nqp_rxmark rx612_bstack, rxscan613_loop1331, rx612_pos, 0
  rxscan613_done1333:
    nqp_rxmark rx612_bstack, rxcap614_fail1335, rx612_pos, 0
    add $I11, rx612_pos, 5
    gt $I11, rx612_eos, rx612_fail1327
    substr $S10, rx612_tgt, rx612_pos, 5
    ne $S10, ucs4:"until", rx612_fail1327
    add rx612_pos, 5
    nqp_rxpeek $I19, rx612_bstack, rxcap614_fail1335
    inc $I19
    set $I11, rx612_bstack[$I19]
    repr_bind_attr_int rx612_cur, rx612_curclass, "$!pos", rx612_pos
    $P11 = rx612_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx612_pos)
    rx612_cstack = rx612_cur."!cursor_capture"($P11, "sym")
    goto rxcap614_done1334
  rxcap614_fail1335:
    goto rx612_fail1327
  rxcap614_done1334:
    repr_bind_attr_int rx612_cur, rx612_curclass, "$!pos", rx612_pos
    $P11 = rx612_cur."ws"()
    repr_get_attr_int $I11, $P11, rx612_curclass, "$!pos"
    lt $I11, 0, rx612_fail1327
    repr_get_attr_int rx612_pos, $P11, rx612_curclass, "$!pos"
    repr_bind_attr_int rx612_cur, rx612_curclass, "$!pos", rx612_pos
    $P11 = rx612_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx612_curclass, "$!pos"
    lt $I11, 0, rx612_fail1327
    nqp_rxmark rx612_bstack, rxsubrule616_pass1337, -1, 0
  rxsubrule616_pass1337:
    rx612_cstack = rx612_cur."!cursor_capture"($P11, "cond")
    repr_get_attr_int rx612_pos, $P11, rx612_curclass, "$!pos"
    repr_bind_attr_int rx612_cur, rx612_curclass, "$!pos", rx612_pos
    $P11 = rx612_cur."ws"()
    repr_get_attr_int $I11, $P11, rx612_curclass, "$!pos"
    lt $I11, 0, rx612_fail1327
    repr_get_attr_int rx612_pos, $P11, rx612_curclass, "$!pos"
    rx612_cur."!cursor_pass"(rx612_pos, "statement_mod_loop:sym<until>", 'backtrack'=>1)
    .return (rx612_cur)
  rx612_restart1326:
    repr_get_attr_obj rx612_cstack, rx612_cur, rx612_curclass, "$!cstack"
  rx612_fail1327:
    unless rx612_bstack, rx612_done1325
    pop $I19, rx612_bstack
    if_null rx612_cstack, rx612_cstack_done1330
    unless rx612_cstack, rx612_cstack_done1330
    dec $I19
    set $P11, rx612_cstack[$I19]
  rx612_cstack_done1330:
    pop rx612_rep, rx612_bstack
    pop rx612_pos, rx612_bstack
    pop $I19, rx612_bstack
    lt rx612_pos, -1, rx612_done1325
    lt rx612_pos, 0, rx612_fail1327
    eq $I19, 0, rx612_fail1327
    nqp_islist $I20, rx612_cstack
    unless $I20, rx612_jump1328
    elements $I18, rx612_bstack
    le $I18, 0, rx612_cut1329
    dec $I18
    set $I18, rx612_bstack[$I18]
  rx612_cut1329:
    assign rx612_cstack, $I18
  rx612_jump1328:
    jump $I19
  rx612_done1325:
    rx612_cur."!cursor_fail"()
    .return (rx612_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<for>" :subid("cuid_83_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 921
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx618_start
    .local string rx618_tgt
    .local int rx618_pos
    .local int rx618_off
    .local int rx618_eos
    .local int rx618_rep
    .local pmc rx618_cur
    .local pmc rx618_curclass
    .local pmc rx618_bstack
    .local pmc rx618_cstack
    rx618_start = self."!cursor_start_all"()
    set rx618_cur, rx618_start[0]
    set rx618_tgt, rx618_start[1]
    set rx618_pos, rx618_start[2]
    set rx618_curclass, rx618_start[3]
    set rx618_bstack, rx618_start[4]
    set $I19, rx618_start[5]
    store_lex unicode:"$\x{a2}", rx618_cur
    length rx618_eos, rx618_tgt
    eq $I19, 1, rx618_restart1341
    gt rx618_pos, rx618_eos, rx618_fail1342
    repr_get_attr_int $I11, self, rx618_curclass, "$!from"
    ne $I11, -1, rxscan619_done1348
    goto rxscan619_scan1347
  rxscan619_loop1346:
    inc rx618_pos
    gt rx618_pos, rx618_eos, rx618_fail1342
    repr_bind_attr_int rx618_cur, rx618_curclass, "$!from", rx618_pos
  rxscan619_scan1347:
    nqp_rxmark rx618_bstack, rxscan619_loop1346, rx618_pos, 0
  rxscan619_done1348:
    nqp_rxmark rx618_bstack, rxcap620_fail1350, rx618_pos, 0
    add $I11, rx618_pos, 3
    gt $I11, rx618_eos, rx618_fail1342
    substr $S10, rx618_tgt, rx618_pos, 3
    ne $S10, ucs4:"for", rx618_fail1342
    add rx618_pos, 3
    nqp_rxpeek $I19, rx618_bstack, rxcap620_fail1350
    inc $I19
    set $I11, rx618_bstack[$I19]
    repr_bind_attr_int rx618_cur, rx618_curclass, "$!pos", rx618_pos
    $P11 = rx618_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx618_pos)
    rx618_cstack = rx618_cur."!cursor_capture"($P11, "sym")
    goto rxcap620_done1349
  rxcap620_fail1350:
    goto rx618_fail1342
  rxcap620_done1349:
    repr_bind_attr_int rx618_cur, rx618_curclass, "$!pos", rx618_pos
    $P11 = rx618_cur."ws"()
    repr_get_attr_int $I11, $P11, rx618_curclass, "$!pos"
    lt $I11, 0, rx618_fail1342
    repr_get_attr_int rx618_pos, $P11, rx618_curclass, "$!pos"
    repr_bind_attr_int rx618_cur, rx618_curclass, "$!pos", rx618_pos
    $P11 = rx618_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx618_curclass, "$!pos"
    lt $I11, 0, rx618_fail1342
    nqp_rxmark rx618_bstack, rxsubrule622_pass1352, -1, 0
  rxsubrule622_pass1352:
    rx618_cstack = rx618_cur."!cursor_capture"($P11, "cond")
    repr_get_attr_int rx618_pos, $P11, rx618_curclass, "$!pos"
    repr_bind_attr_int rx618_cur, rx618_curclass, "$!pos", rx618_pos
    $P11 = rx618_cur."ws"()
    repr_get_attr_int $I11, $P11, rx618_curclass, "$!pos"
    lt $I11, 0, rx618_fail1342
    repr_get_attr_int rx618_pos, $P11, rx618_curclass, "$!pos"
    rx618_cur."!cursor_pass"(rx618_pos, "statement_mod_loop:sym<for>", 'backtrack'=>1)
    .return (rx618_cur)
  rx618_restart1341:
    repr_get_attr_obj rx618_cstack, rx618_cur, rx618_curclass, "$!cstack"
  rx618_fail1342:
    unless rx618_bstack, rx618_done1340
    pop $I19, rx618_bstack
    if_null rx618_cstack, rx618_cstack_done1345
    unless rx618_cstack, rx618_cstack_done1345
    dec $I19
    set $P11, rx618_cstack[$I19]
  rx618_cstack_done1345:
    pop rx618_rep, rx618_bstack
    pop rx618_pos, rx618_bstack
    pop $I19, rx618_bstack
    lt rx618_pos, -1, rx618_done1340
    lt rx618_pos, 0, rx618_fail1342
    eq $I19, 0, rx618_fail1342
    nqp_islist $I20, rx618_cstack
    unless $I20, rx618_jump1343
    elements $I18, rx618_bstack
    le $I18, 0, rx618_cut1344
    dec $I18
    set $I18, rx618_bstack[$I18]
  rx618_cut1344:
    assign rx618_cstack, $I18
  rx618_jump1343:
    jump $I19
  rx618_done1340:
    rx618_cur."!cursor_fail"()
    .return (rx618_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<fatarrow>" :subid("cuid_84_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 925
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx624_start
    .local string rx624_tgt
    .local int rx624_pos
    .local int rx624_off
    .local int rx624_eos
    .local int rx624_rep
    .local pmc rx624_cur
    .local pmc rx624_curclass
    .local pmc rx624_bstack
    .local pmc rx624_cstack
    rx624_start = self."!cursor_start_all"()
    set rx624_cur, rx624_start[0]
    set rx624_tgt, rx624_start[1]
    set rx624_pos, rx624_start[2]
    set rx624_curclass, rx624_start[3]
    set rx624_bstack, rx624_start[4]
    set $I19, rx624_start[5]
    store_lex unicode:"$\x{a2}", rx624_cur
    length rx624_eos, rx624_tgt
    eq $I19, 1, rx624_restart1356
    gt rx624_pos, rx624_eos, rx624_fail1357
    repr_get_attr_int $I11, self, rx624_curclass, "$!from"
    ne $I11, -1, rxscan625_done1363
    goto rxscan625_scan1362
  rxscan625_loop1361:
    inc rx624_pos
    gt rx624_pos, rx624_eos, rx624_fail1357
    repr_bind_attr_int rx624_cur, rx624_curclass, "$!from", rx624_pos
  rxscan625_scan1362:
    nqp_rxmark rx624_bstack, rxscan625_loop1361, rx624_pos, 0
  rxscan625_done1363:
    repr_bind_attr_int rx624_cur, rx624_curclass, "$!pos", rx624_pos
    $P11 = rx624_cur."fatarrow"()
    repr_get_attr_int $I11, $P11, rx624_curclass, "$!pos"
    lt $I11, 0, rx624_fail1357
    nqp_rxmark rx624_bstack, rxsubrule626_pass1364, -1, 0
  rxsubrule626_pass1364:
    rx624_cstack = rx624_cur."!cursor_capture"($P11, "fatarrow")
    repr_get_attr_int rx624_pos, $P11, rx624_curclass, "$!pos"
    rx624_cur."!cursor_pass"(rx624_pos, "term:sym<fatarrow>", 'backtrack'=>1)
    .return (rx624_cur)
  rx624_restart1356:
    repr_get_attr_obj rx624_cstack, rx624_cur, rx624_curclass, "$!cstack"
  rx624_fail1357:
    unless rx624_bstack, rx624_done1355
    pop $I19, rx624_bstack
    if_null rx624_cstack, rx624_cstack_done1360
    unless rx624_cstack, rx624_cstack_done1360
    dec $I19
    set $P11, rx624_cstack[$I19]
  rx624_cstack_done1360:
    pop rx624_rep, rx624_bstack
    pop rx624_pos, rx624_bstack
    pop $I19, rx624_bstack
    lt rx624_pos, -1, rx624_done1355
    lt rx624_pos, 0, rx624_fail1357
    eq $I19, 0, rx624_fail1357
    nqp_islist $I20, rx624_cstack
    unless $I20, rx624_jump1358
    elements $I18, rx624_bstack
    le $I18, 0, rx624_cut1359
    dec $I18
    set $I18, rx624_bstack[$I18]
  rx624_cut1359:
    assign rx624_cstack, $I18
  rx624_jump1358:
    jump $I19
  rx624_done1355:
    rx624_cur."!cursor_fail"()
    .return (rx624_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<colonpair>" :subid("cuid_85_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 926
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx627_start
    .local string rx627_tgt
    .local int rx627_pos
    .local int rx627_off
    .local int rx627_eos
    .local int rx627_rep
    .local pmc rx627_cur
    .local pmc rx627_curclass
    .local pmc rx627_bstack
    .local pmc rx627_cstack
    rx627_start = self."!cursor_start_all"()
    set rx627_cur, rx627_start[0]
    set rx627_tgt, rx627_start[1]
    set rx627_pos, rx627_start[2]
    set rx627_curclass, rx627_start[3]
    set rx627_bstack, rx627_start[4]
    set $I19, rx627_start[5]
    store_lex unicode:"$\x{a2}", rx627_cur
    length rx627_eos, rx627_tgt
    eq $I19, 1, rx627_restart1367
    gt rx627_pos, rx627_eos, rx627_fail1368
    repr_get_attr_int $I11, self, rx627_curclass, "$!from"
    ne $I11, -1, rxscan628_done1374
    goto rxscan628_scan1373
  rxscan628_loop1372:
    inc rx627_pos
    gt rx627_pos, rx627_eos, rx627_fail1368
    repr_bind_attr_int rx627_cur, rx627_curclass, "$!from", rx627_pos
  rxscan628_scan1373:
    nqp_rxmark rx627_bstack, rxscan628_loop1372, rx627_pos, 0
  rxscan628_done1374:
    repr_bind_attr_int rx627_cur, rx627_curclass, "$!pos", rx627_pos
    $P11 = rx627_cur."colonpair"()
    repr_get_attr_int $I11, $P11, rx627_curclass, "$!pos"
    lt $I11, 0, rx627_fail1368
    nqp_rxmark rx627_bstack, rxsubrule629_pass1375, -1, 0
  rxsubrule629_pass1375:
    rx627_cstack = rx627_cur."!cursor_capture"($P11, "colonpair")
    repr_get_attr_int rx627_pos, $P11, rx627_curclass, "$!pos"
    rx627_cur."!cursor_pass"(rx627_pos, "term:sym<colonpair>", 'backtrack'=>1)
    .return (rx627_cur)
  rx627_restart1367:
    repr_get_attr_obj rx627_cstack, rx627_cur, rx627_curclass, "$!cstack"
  rx627_fail1368:
    unless rx627_bstack, rx627_done1366
    pop $I19, rx627_bstack
    if_null rx627_cstack, rx627_cstack_done1371
    unless rx627_cstack, rx627_cstack_done1371
    dec $I19
    set $P11, rx627_cstack[$I19]
  rx627_cstack_done1371:
    pop rx627_rep, rx627_bstack
    pop rx627_pos, rx627_bstack
    pop $I19, rx627_bstack
    lt rx627_pos, -1, rx627_done1366
    lt rx627_pos, 0, rx627_fail1368
    eq $I19, 0, rx627_fail1368
    nqp_islist $I20, rx627_cstack
    unless $I20, rx627_jump1369
    elements $I18, rx627_bstack
    le $I18, 0, rx627_cut1370
    dec $I18
    set $I18, rx627_bstack[$I18]
  rx627_cut1370:
    assign rx627_cstack, $I18
  rx627_jump1369:
    jump $I19
  rx627_done1366:
    rx627_cur."!cursor_fail"()
    .return (rx627_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<variable>" :subid("cuid_86_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 927
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx630_start
    .local string rx630_tgt
    .local int rx630_pos
    .local int rx630_off
    .local int rx630_eos
    .local int rx630_rep
    .local pmc rx630_cur
    .local pmc rx630_curclass
    .local pmc rx630_bstack
    .local pmc rx630_cstack
    rx630_start = self."!cursor_start_all"()
    set rx630_cur, rx630_start[0]
    set rx630_tgt, rx630_start[1]
    set rx630_pos, rx630_start[2]
    set rx630_curclass, rx630_start[3]
    set rx630_bstack, rx630_start[4]
    set $I19, rx630_start[5]
    store_lex unicode:"$\x{a2}", rx630_cur
    length rx630_eos, rx630_tgt
    eq $I19, 1, rx630_restart1378
    gt rx630_pos, rx630_eos, rx630_fail1379
    repr_get_attr_int $I11, self, rx630_curclass, "$!from"
    ne $I11, -1, rxscan631_done1385
    goto rxscan631_scan1384
  rxscan631_loop1383:
    inc rx630_pos
    gt rx630_pos, rx630_eos, rx630_fail1379
    repr_bind_attr_int rx630_cur, rx630_curclass, "$!from", rx630_pos
  rxscan631_scan1384:
    nqp_rxmark rx630_bstack, rxscan631_loop1383, rx630_pos, 0
  rxscan631_done1385:
    repr_bind_attr_int rx630_cur, rx630_curclass, "$!pos", rx630_pos
    $P11 = rx630_cur."variable"()
    repr_get_attr_int $I11, $P11, rx630_curclass, "$!pos"
    lt $I11, 0, rx630_fail1379
    nqp_rxmark rx630_bstack, rxsubrule632_pass1386, -1, 0
  rxsubrule632_pass1386:
    rx630_cstack = rx630_cur."!cursor_capture"($P11, "variable")
    repr_get_attr_int rx630_pos, $P11, rx630_curclass, "$!pos"
    rx630_cur."!cursor_pass"(rx630_pos, "term:sym<variable>", 'backtrack'=>1)
    .return (rx630_cur)
  rx630_restart1378:
    repr_get_attr_obj rx630_cstack, rx630_cur, rx630_curclass, "$!cstack"
  rx630_fail1379:
    unless rx630_bstack, rx630_done1377
    pop $I19, rx630_bstack
    if_null rx630_cstack, rx630_cstack_done1382
    unless rx630_cstack, rx630_cstack_done1382
    dec $I19
    set $P11, rx630_cstack[$I19]
  rx630_cstack_done1382:
    pop rx630_rep, rx630_bstack
    pop rx630_pos, rx630_bstack
    pop $I19, rx630_bstack
    lt rx630_pos, -1, rx630_done1377
    lt rx630_pos, 0, rx630_fail1379
    eq $I19, 0, rx630_fail1379
    nqp_islist $I20, rx630_cstack
    unless $I20, rx630_jump1380
    elements $I18, rx630_bstack
    le $I18, 0, rx630_cut1381
    dec $I18
    set $I18, rx630_bstack[$I18]
  rx630_cut1381:
    assign rx630_cstack, $I18
  rx630_jump1380:
    jump $I19
  rx630_done1377:
    rx630_cur."!cursor_fail"()
    .return (rx630_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<package_declarator>" :subid("cuid_87_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 928
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx633_start
    .local string rx633_tgt
    .local int rx633_pos
    .local int rx633_off
    .local int rx633_eos
    .local int rx633_rep
    .local pmc rx633_cur
    .local pmc rx633_curclass
    .local pmc rx633_bstack
    .local pmc rx633_cstack
    rx633_start = self."!cursor_start_all"()
    set rx633_cur, rx633_start[0]
    set rx633_tgt, rx633_start[1]
    set rx633_pos, rx633_start[2]
    set rx633_curclass, rx633_start[3]
    set rx633_bstack, rx633_start[4]
    set $I19, rx633_start[5]
    store_lex unicode:"$\x{a2}", rx633_cur
    length rx633_eos, rx633_tgt
    eq $I19, 1, rx633_restart1389
    gt rx633_pos, rx633_eos, rx633_fail1390
    repr_get_attr_int $I11, self, rx633_curclass, "$!from"
    ne $I11, -1, rxscan634_done1396
    goto rxscan634_scan1395
  rxscan634_loop1394:
    inc rx633_pos
    gt rx633_pos, rx633_eos, rx633_fail1390
    repr_bind_attr_int rx633_cur, rx633_curclass, "$!from", rx633_pos
  rxscan634_scan1395:
    nqp_rxmark rx633_bstack, rxscan634_loop1394, rx633_pos, 0
  rxscan634_done1396:
    repr_bind_attr_int rx633_cur, rx633_curclass, "$!pos", rx633_pos
    $P11 = rx633_cur."package_declarator"()
    repr_get_attr_int $I11, $P11, rx633_curclass, "$!pos"
    lt $I11, 0, rx633_fail1390
    nqp_rxmark rx633_bstack, rxsubrule635_pass1397, -1, 0
  rxsubrule635_pass1397:
    rx633_cstack = rx633_cur."!cursor_capture"($P11, "package_declarator")
    repr_get_attr_int rx633_pos, $P11, rx633_curclass, "$!pos"
    rx633_cur."!cursor_pass"(rx633_pos, "term:sym<package_declarator>", 'backtrack'=>1)
    .return (rx633_cur)
  rx633_restart1389:
    repr_get_attr_obj rx633_cstack, rx633_cur, rx633_curclass, "$!cstack"
  rx633_fail1390:
    unless rx633_bstack, rx633_done1388
    pop $I19, rx633_bstack
    if_null rx633_cstack, rx633_cstack_done1393
    unless rx633_cstack, rx633_cstack_done1393
    dec $I19
    set $P11, rx633_cstack[$I19]
  rx633_cstack_done1393:
    pop rx633_rep, rx633_bstack
    pop rx633_pos, rx633_bstack
    pop $I19, rx633_bstack
    lt rx633_pos, -1, rx633_done1388
    lt rx633_pos, 0, rx633_fail1390
    eq $I19, 0, rx633_fail1390
    nqp_islist $I20, rx633_cstack
    unless $I20, rx633_jump1391
    elements $I18, rx633_bstack
    le $I18, 0, rx633_cut1392
    dec $I18
    set $I18, rx633_bstack[$I18]
  rx633_cut1392:
    assign rx633_cstack, $I18
  rx633_jump1391:
    jump $I19
  rx633_done1388:
    rx633_cur."!cursor_fail"()
    .return (rx633_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<scope_declarator>" :subid("cuid_88_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 929
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx636_start
    .local string rx636_tgt
    .local int rx636_pos
    .local int rx636_off
    .local int rx636_eos
    .local int rx636_rep
    .local pmc rx636_cur
    .local pmc rx636_curclass
    .local pmc rx636_bstack
    .local pmc rx636_cstack
    rx636_start = self."!cursor_start_all"()
    set rx636_cur, rx636_start[0]
    set rx636_tgt, rx636_start[1]
    set rx636_pos, rx636_start[2]
    set rx636_curclass, rx636_start[3]
    set rx636_bstack, rx636_start[4]
    set $I19, rx636_start[5]
    store_lex unicode:"$\x{a2}", rx636_cur
    length rx636_eos, rx636_tgt
    eq $I19, 1, rx636_restart1400
    gt rx636_pos, rx636_eos, rx636_fail1401
    repr_get_attr_int $I11, self, rx636_curclass, "$!from"
    ne $I11, -1, rxscan637_done1407
    goto rxscan637_scan1406
  rxscan637_loop1405:
    inc rx636_pos
    gt rx636_pos, rx636_eos, rx636_fail1401
    repr_bind_attr_int rx636_cur, rx636_curclass, "$!from", rx636_pos
  rxscan637_scan1406:
    nqp_rxmark rx636_bstack, rxscan637_loop1405, rx636_pos, 0
  rxscan637_done1407:
    repr_bind_attr_int rx636_cur, rx636_curclass, "$!pos", rx636_pos
    $P11 = rx636_cur."scope_declarator"()
    repr_get_attr_int $I11, $P11, rx636_curclass, "$!pos"
    lt $I11, 0, rx636_fail1401
    nqp_rxmark rx636_bstack, rxsubrule638_pass1408, -1, 0
  rxsubrule638_pass1408:
    rx636_cstack = rx636_cur."!cursor_capture"($P11, "scope_declarator")
    repr_get_attr_int rx636_pos, $P11, rx636_curclass, "$!pos"
    rx636_cur."!cursor_pass"(rx636_pos, "term:sym<scope_declarator>", 'backtrack'=>1)
    .return (rx636_cur)
  rx636_restart1400:
    repr_get_attr_obj rx636_cstack, rx636_cur, rx636_curclass, "$!cstack"
  rx636_fail1401:
    unless rx636_bstack, rx636_done1399
    pop $I19, rx636_bstack
    if_null rx636_cstack, rx636_cstack_done1404
    unless rx636_cstack, rx636_cstack_done1404
    dec $I19
    set $P11, rx636_cstack[$I19]
  rx636_cstack_done1404:
    pop rx636_rep, rx636_bstack
    pop rx636_pos, rx636_bstack
    pop $I19, rx636_bstack
    lt rx636_pos, -1, rx636_done1399
    lt rx636_pos, 0, rx636_fail1401
    eq $I19, 0, rx636_fail1401
    nqp_islist $I20, rx636_cstack
    unless $I20, rx636_jump1402
    elements $I18, rx636_bstack
    le $I18, 0, rx636_cut1403
    dec $I18
    set $I18, rx636_bstack[$I18]
  rx636_cut1403:
    assign rx636_cstack, $I18
  rx636_jump1402:
    jump $I19
  rx636_done1399:
    rx636_cur."!cursor_fail"()
    .return (rx636_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<routine_declarator>" :subid("cuid_89_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 930
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx639_start
    .local string rx639_tgt
    .local int rx639_pos
    .local int rx639_off
    .local int rx639_eos
    .local int rx639_rep
    .local pmc rx639_cur
    .local pmc rx639_curclass
    .local pmc rx639_bstack
    .local pmc rx639_cstack
    rx639_start = self."!cursor_start_all"()
    set rx639_cur, rx639_start[0]
    set rx639_tgt, rx639_start[1]
    set rx639_pos, rx639_start[2]
    set rx639_curclass, rx639_start[3]
    set rx639_bstack, rx639_start[4]
    set $I19, rx639_start[5]
    store_lex unicode:"$\x{a2}", rx639_cur
    length rx639_eos, rx639_tgt
    eq $I19, 1, rx639_restart1411
    gt rx639_pos, rx639_eos, rx639_fail1412
    repr_get_attr_int $I11, self, rx639_curclass, "$!from"
    ne $I11, -1, rxscan640_done1418
    goto rxscan640_scan1417
  rxscan640_loop1416:
    inc rx639_pos
    gt rx639_pos, rx639_eos, rx639_fail1412
    repr_bind_attr_int rx639_cur, rx639_curclass, "$!from", rx639_pos
  rxscan640_scan1417:
    nqp_rxmark rx639_bstack, rxscan640_loop1416, rx639_pos, 0
  rxscan640_done1418:
    repr_bind_attr_int rx639_cur, rx639_curclass, "$!pos", rx639_pos
    $P11 = rx639_cur."routine_declarator"()
    repr_get_attr_int $I11, $P11, rx639_curclass, "$!pos"
    lt $I11, 0, rx639_fail1412
    nqp_rxmark rx639_bstack, rxsubrule641_pass1419, -1, 0
  rxsubrule641_pass1419:
    rx639_cstack = rx639_cur."!cursor_capture"($P11, "routine_declarator")
    repr_get_attr_int rx639_pos, $P11, rx639_curclass, "$!pos"
    rx639_cur."!cursor_pass"(rx639_pos, "term:sym<routine_declarator>", 'backtrack'=>1)
    .return (rx639_cur)
  rx639_restart1411:
    repr_get_attr_obj rx639_cstack, rx639_cur, rx639_curclass, "$!cstack"
  rx639_fail1412:
    unless rx639_bstack, rx639_done1410
    pop $I19, rx639_bstack
    if_null rx639_cstack, rx639_cstack_done1415
    unless rx639_cstack, rx639_cstack_done1415
    dec $I19
    set $P11, rx639_cstack[$I19]
  rx639_cstack_done1415:
    pop rx639_rep, rx639_bstack
    pop rx639_pos, rx639_bstack
    pop $I19, rx639_bstack
    lt rx639_pos, -1, rx639_done1410
    lt rx639_pos, 0, rx639_fail1412
    eq $I19, 0, rx639_fail1412
    nqp_islist $I20, rx639_cstack
    unless $I20, rx639_jump1413
    elements $I18, rx639_bstack
    le $I18, 0, rx639_cut1414
    dec $I18
    set $I18, rx639_bstack[$I18]
  rx639_cut1414:
    assign rx639_cstack, $I18
  rx639_jump1413:
    jump $I19
  rx639_done1410:
    rx639_cur."!cursor_fail"()
    .return (rx639_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<multi_declarator>" :subid("cuid_90_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 931
    .param pmc _lex_param_0 
    .const 'Sub' $P5003 = 'cuid_91_1367388600.55005' 
    capture_lex $P5003 
    .const 'Sub' $P5003 = 'cuid_92_1367388600.55005' 
    capture_lex $P5003 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx642_start
    .local string rx642_tgt
    .local int rx642_pos
    .local int rx642_off
    .local int rx642_eos
    .local int rx642_rep
    .local pmc rx642_cur
    .local pmc rx642_curclass
    .local pmc rx642_bstack
    .local pmc rx642_cstack
    rx642_start = self."!cursor_start_all"()
    set rx642_cur, rx642_start[0]
    set rx642_tgt, rx642_start[1]
    set rx642_pos, rx642_start[2]
    set rx642_curclass, rx642_start[3]
    set rx642_bstack, rx642_start[4]
    set $I19, rx642_start[5]
    store_lex unicode:"$\x{a2}", rx642_cur
    length rx642_eos, rx642_tgt
    eq $I19, 1, rx642_restart1422
    gt rx642_pos, rx642_eos, rx642_fail1423
    repr_get_attr_int $I11, self, rx642_curclass, "$!from"
    ne $I11, -1, rxscan643_done1429
    goto rxscan643_scan1428
  rxscan643_loop1427:
    inc rx642_pos
    gt rx642_pos, rx642_eos, rx642_fail1423
    repr_bind_attr_int rx642_cur, rx642_curclass, "$!from", rx642_pos
  rxscan643_scan1428:
    nqp_rxmark rx642_bstack, rxscan643_loop1427, rx642_pos, 0
  rxscan643_done1429:
    .const 'Sub' $P5001 = 'cuid_91_1367388600.55005' 
    capture_lex $P5001
    repr_bind_attr_int rx642_cur, rx642_curclass, "$!pos", rx642_pos
    $P11 = rx642_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx642_curclass, "$!pos"
    lt $I11, 0, rx642_fail1423
    .const 'Sub' $P5002 = 'cuid_92_1367388600.55005' 
    capture_lex $P5002
    repr_bind_attr_int rx642_cur, rx642_curclass, "$!pos", rx642_pos
    $P11 = rx642_cur."before"($P5002)
    repr_get_attr_int $I11, $P11, rx642_curclass, "$!pos"
    ge $I11, 0, rx642_fail1423
    repr_bind_attr_int rx642_cur, rx642_curclass, "$!pos", rx642_pos
    $P11 = rx642_cur."multi_declarator"()
    repr_get_attr_int $I11, $P11, rx642_curclass, "$!pos"
    lt $I11, 0, rx642_fail1423
    nqp_rxmark rx642_bstack, rxsubrule651_pass1459, -1, 0
  rxsubrule651_pass1459:
    rx642_cstack = rx642_cur."!cursor_capture"($P11, "multi_declarator")
    repr_get_attr_int rx642_pos, $P11, rx642_curclass, "$!pos"
    rx642_cur."!cursor_pass"(rx642_pos, "term:sym<multi_declarator>", 'backtrack'=>1)
    .return (rx642_cur)
  rx642_restart1422:
    repr_get_attr_obj rx642_cstack, rx642_cur, rx642_curclass, "$!cstack"
  rx642_fail1423:
    unless rx642_bstack, rx642_done1421
    pop $I19, rx642_bstack
    if_null rx642_cstack, rx642_cstack_done1426
    unless rx642_cstack, rx642_cstack_done1426
    dec $I19
    set $P11, rx642_cstack[$I19]
  rx642_cstack_done1426:
    pop rx642_rep, rx642_bstack
    pop rx642_pos, rx642_bstack
    pop $I19, rx642_bstack
    lt rx642_pos, -1, rx642_done1421
    lt rx642_pos, 0, rx642_fail1423
    eq $I19, 0, rx642_fail1423
    nqp_islist $I20, rx642_cstack
    unless $I20, rx642_jump1424
    elements $I18, rx642_bstack
    le $I18, 0, rx642_cut1425
    dec $I18
    set $I18, rx642_bstack[$I18]
  rx642_cut1425:
    assign rx642_cstack, $I18
  rx642_jump1424:
    jump $I19
  rx642_done1421:
    rx642_cur."!cursor_fail"()
    .return (rx642_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_91_1367388600.55005") :anon :lex :outer("cuid_90_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx644_start
    .local string rx644_tgt
    .local int rx644_pos
    .local int rx644_off
    .local int rx644_eos
    .local int rx644_rep
    .local pmc rx644_cur
    .local pmc rx644_curclass
    .local pmc rx644_bstack
    .local pmc rx644_cstack
    rx644_start = self."!cursor_start_all"()
    set rx644_cur, rx644_start[0]
    set rx644_tgt, rx644_start[1]
    set rx644_pos, rx644_start[2]
    set rx644_curclass, rx644_start[3]
    set rx644_bstack, rx644_start[4]
    set $I19, rx644_start[5]
    store_lex unicode:"$\x{a2}", rx644_cur
    length rx644_eos, rx644_tgt
    eq $I19, 1, rx644_restart1432
    gt rx644_pos, rx644_eos, rx644_fail1433
    repr_get_attr_int $I11, self, rx644_curclass, "$!from"
    ne $I11, -1, rxscan645_done1439
    goto rxscan645_scan1438
  rxscan645_loop1437:
    inc rx644_pos
    gt rx644_pos, rx644_eos, rx644_fail1433
    repr_bind_attr_int rx644_cur, rx644_curclass, "$!from", rx644_pos
  rxscan645_scan1438:
    nqp_rxmark rx644_bstack, rxscan645_loop1437, rx644_pos, 0
  rxscan645_done1439:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt646_01441
    nqp_push_label $P11, alt646_11442
    nqp_push_label $P11, alt646_21443
    nqp_rxmark rx644_bstack, alt646_end1440, -1, 0
    rx644_cur."!alt"(rx644_pos, "alt_nfa__17_1367388603.04605", $P11)
    goto rx644_fail1433
  alt646_01441:
    add $I11, rx644_pos, 5
    gt $I11, rx644_eos, rx644_fail1433
    substr $S10, rx644_tgt, rx644_pos, 5
    ne $S10, ucs4:"multi", rx644_fail1433
    add rx644_pos, 5
    goto alt646_end1440
  alt646_11442:
    add $I11, rx644_pos, 5
    gt $I11, rx644_eos, rx644_fail1433
    substr $S10, rx644_tgt, rx644_pos, 5
    ne $S10, ucs4:"proto", rx644_fail1433
    add rx644_pos, 5
    goto alt646_end1440
  alt646_21443:
    add $I11, rx644_pos, 4
    gt $I11, rx644_eos, rx644_fail1433
    substr $S10, rx644_tgt, rx644_pos, 4
    ne $S10, ucs4:"only", rx644_fail1433
    add rx644_pos, 4
    goto alt646_end1440
  alt646_end1440:
    rx644_cur."!cursor_pass"(rx644_pos, 'backtrack'=>1)
    .return (rx644_cur)
  rx644_restart1432:
    repr_get_attr_obj rx644_cstack, rx644_cur, rx644_curclass, "$!cstack"
  rx644_fail1433:
    unless rx644_bstack, rx644_done1431
    pop $I19, rx644_bstack
    if_null rx644_cstack, rx644_cstack_done1436
    unless rx644_cstack, rx644_cstack_done1436
    dec $I19
    set $P11, rx644_cstack[$I19]
  rx644_cstack_done1436:
    pop rx644_rep, rx644_bstack
    pop rx644_pos, rx644_bstack
    pop $I19, rx644_bstack
    lt rx644_pos, -1, rx644_done1431
    lt rx644_pos, 0, rx644_fail1433
    eq $I19, 0, rx644_fail1433
    nqp_islist $I20, rx644_cstack
    unless $I20, rx644_jump1434
    elements $I18, rx644_bstack
    le $I18, 0, rx644_cut1435
    dec $I18
    set $I18, rx644_bstack[$I18]
  rx644_cut1435:
    assign rx644_cstack, $I18
  rx644_jump1434:
    jump $I19
  rx644_done1431:
    rx644_cur."!cursor_fail"()
    .return (rx644_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_92_1367388600.55005") :anon :lex :outer("cuid_90_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx647_start
    .local string rx647_tgt
    .local int rx647_pos
    .local int rx647_off
    .local int rx647_eos
    .local int rx647_rep
    .local pmc rx647_cur
    .local pmc rx647_curclass
    .local pmc rx647_bstack
    .local pmc rx647_cstack
    rx647_start = self."!cursor_start_all"()
    set rx647_cur, rx647_start[0]
    set rx647_tgt, rx647_start[1]
    set rx647_pos, rx647_start[2]
    set rx647_curclass, rx647_start[3]
    set rx647_bstack, rx647_start[4]
    set $I19, rx647_start[5]
    store_lex unicode:"$\x{a2}", rx647_cur
    length rx647_eos, rx647_tgt
    eq $I19, 1, rx647_restart1446
    gt rx647_pos, rx647_eos, rx647_fail1447
    repr_get_attr_int $I11, self, rx647_curclass, "$!from"
    ne $I11, -1, rxscan648_done1453
    goto rxscan648_scan1452
  rxscan648_loop1451:
    inc rx647_pos
    gt rx647_pos, rx647_eos, rx647_fail1447
    repr_bind_attr_int rx647_cur, rx647_curclass, "$!from", rx647_pos
  rxscan648_scan1452:
    nqp_rxmark rx647_bstack, rxscan648_loop1451, rx647_pos, 0
  rxscan648_done1453:
    add $I11, rx647_pos, 5
    gt $I11, rx647_eos, rx647_fail1447
    substr $S10, rx647_tgt, rx647_pos, 5
    ne $S10, ucs4:"proto", rx647_fail1447
    add rx647_pos, 5
    repr_bind_attr_int rx647_cur, rx647_curclass, "$!pos", rx647_pos
    $P11 = rx647_cur."ws"()
    repr_get_attr_int $I11, $P11, rx647_curclass, "$!pos"
    lt $I11, 0, rx647_fail1447
    repr_get_attr_int rx647_pos, $P11, rx647_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt650_01456
    nqp_push_label $P11, alt650_11457
    nqp_push_label $P11, alt650_21458
    nqp_rxmark rx647_bstack, alt650_end1455, -1, 0
    rx647_cur."!alt"(rx647_pos, "alt_nfa__18_1367388603.05695", $P11)
    goto rx647_fail1447
  alt650_01456:
    add $I11, rx647_pos, 5
    gt $I11, rx647_eos, rx647_fail1447
    substr $S10, rx647_tgt, rx647_pos, 5
    ne $S10, ucs4:"regex", rx647_fail1447
    add rx647_pos, 5
    goto alt650_end1455
  alt650_11457:
    add $I11, rx647_pos, 5
    gt $I11, rx647_eos, rx647_fail1447
    substr $S10, rx647_tgt, rx647_pos, 5
    ne $S10, ucs4:"token", rx647_fail1447
    add rx647_pos, 5
    goto alt650_end1455
  alt650_21458:
    add $I11, rx647_pos, 4
    gt $I11, rx647_eos, rx647_fail1447
    substr $S10, rx647_tgt, rx647_pos, 4
    ne $S10, ucs4:"rule", rx647_fail1447
    add rx647_pos, 4
    goto alt650_end1455
  alt650_end1455:
    nqp_rxcommit rx647_bstack, alt650_end1455
    rx647_cur."!cursor_pass"(rx647_pos, 'backtrack'=>1)
    .return (rx647_cur)
  rx647_restart1446:
    repr_get_attr_obj rx647_cstack, rx647_cur, rx647_curclass, "$!cstack"
  rx647_fail1447:
    unless rx647_bstack, rx647_done1445
    pop $I19, rx647_bstack
    if_null rx647_cstack, rx647_cstack_done1450
    unless rx647_cstack, rx647_cstack_done1450
    dec $I19
    set $P11, rx647_cstack[$I19]
  rx647_cstack_done1450:
    pop rx647_rep, rx647_bstack
    pop rx647_pos, rx647_bstack
    pop $I19, rx647_bstack
    lt rx647_pos, -1, rx647_done1445
    lt rx647_pos, 0, rx647_fail1447
    eq $I19, 0, rx647_fail1447
    nqp_islist $I20, rx647_cstack
    unless $I20, rx647_jump1448
    elements $I18, rx647_bstack
    le $I18, 0, rx647_cut1449
    dec $I18
    set $I18, rx647_bstack[$I18]
  rx647_cut1449:
    assign rx647_cstack, $I18
  rx647_jump1448:
    jump $I19
  rx647_done1445:
    rx647_cur."!cursor_fail"()
    .return (rx647_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<regex_declarator>" :subid("cuid_93_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 936
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx652_start
    .local string rx652_tgt
    .local int rx652_pos
    .local int rx652_off
    .local int rx652_eos
    .local int rx652_rep
    .local pmc rx652_cur
    .local pmc rx652_curclass
    .local pmc rx652_bstack
    .local pmc rx652_cstack
    rx652_start = self."!cursor_start_all"()
    set rx652_cur, rx652_start[0]
    set rx652_tgt, rx652_start[1]
    set rx652_pos, rx652_start[2]
    set rx652_curclass, rx652_start[3]
    set rx652_bstack, rx652_start[4]
    set $I19, rx652_start[5]
    store_lex unicode:"$\x{a2}", rx652_cur
    length rx652_eos, rx652_tgt
    eq $I19, 1, rx652_restart1462
    gt rx652_pos, rx652_eos, rx652_fail1463
    repr_get_attr_int $I11, self, rx652_curclass, "$!from"
    ne $I11, -1, rxscan653_done1469
    goto rxscan653_scan1468
  rxscan653_loop1467:
    inc rx652_pos
    gt rx652_pos, rx652_eos, rx652_fail1463
    repr_bind_attr_int rx652_cur, rx652_curclass, "$!from", rx652_pos
  rxscan653_scan1468:
    nqp_rxmark rx652_bstack, rxscan653_loop1467, rx652_pos, 0
  rxscan653_done1469:
    repr_bind_attr_int rx652_cur, rx652_curclass, "$!pos", rx652_pos
    $P11 = rx652_cur."regex_declarator"()
    repr_get_attr_int $I11, $P11, rx652_curclass, "$!pos"
    lt $I11, 0, rx652_fail1463
    nqp_rxmark rx652_bstack, rxsubrule654_pass1470, -1, 0
  rxsubrule654_pass1470:
    rx652_cstack = rx652_cur."!cursor_capture"($P11, "regex_declarator")
    repr_get_attr_int rx652_pos, $P11, rx652_curclass, "$!pos"
    rx652_cur."!cursor_pass"(rx652_pos, "term:sym<regex_declarator>", 'backtrack'=>1)
    .return (rx652_cur)
  rx652_restart1462:
    repr_get_attr_obj rx652_cstack, rx652_cur, rx652_curclass, "$!cstack"
  rx652_fail1463:
    unless rx652_bstack, rx652_done1461
    pop $I19, rx652_bstack
    if_null rx652_cstack, rx652_cstack_done1466
    unless rx652_cstack, rx652_cstack_done1466
    dec $I19
    set $P11, rx652_cstack[$I19]
  rx652_cstack_done1466:
    pop rx652_rep, rx652_bstack
    pop rx652_pos, rx652_bstack
    pop $I19, rx652_bstack
    lt rx652_pos, -1, rx652_done1461
    lt rx652_pos, 0, rx652_fail1463
    eq $I19, 0, rx652_fail1463
    nqp_islist $I20, rx652_cstack
    unless $I20, rx652_jump1464
    elements $I18, rx652_bstack
    le $I18, 0, rx652_cut1465
    dec $I18
    set $I18, rx652_bstack[$I18]
  rx652_cut1465:
    assign rx652_cstack, $I18
  rx652_jump1464:
    jump $I19
  rx652_done1461:
    rx652_cur."!cursor_fail"()
    .return (rx652_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<statement_prefix>" :subid("cuid_94_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 937
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx655_start
    .local string rx655_tgt
    .local int rx655_pos
    .local int rx655_off
    .local int rx655_eos
    .local int rx655_rep
    .local pmc rx655_cur
    .local pmc rx655_curclass
    .local pmc rx655_bstack
    .local pmc rx655_cstack
    rx655_start = self."!cursor_start_all"()
    set rx655_cur, rx655_start[0]
    set rx655_tgt, rx655_start[1]
    set rx655_pos, rx655_start[2]
    set rx655_curclass, rx655_start[3]
    set rx655_bstack, rx655_start[4]
    set $I19, rx655_start[5]
    store_lex unicode:"$\x{a2}", rx655_cur
    length rx655_eos, rx655_tgt
    eq $I19, 1, rx655_restart1473
    gt rx655_pos, rx655_eos, rx655_fail1474
    repr_get_attr_int $I11, self, rx655_curclass, "$!from"
    ne $I11, -1, rxscan656_done1480
    goto rxscan656_scan1479
  rxscan656_loop1478:
    inc rx655_pos
    gt rx655_pos, rx655_eos, rx655_fail1474
    repr_bind_attr_int rx655_cur, rx655_curclass, "$!from", rx655_pos
  rxscan656_scan1479:
    nqp_rxmark rx655_bstack, rxscan656_loop1478, rx655_pos, 0
  rxscan656_done1480:
    repr_bind_attr_int rx655_cur, rx655_curclass, "$!pos", rx655_pos
    $P11 = rx655_cur."statement_prefix"()
    repr_get_attr_int $I11, $P11, rx655_curclass, "$!pos"
    lt $I11, 0, rx655_fail1474
    nqp_rxmark rx655_bstack, rxsubrule657_pass1481, -1, 0
  rxsubrule657_pass1481:
    rx655_cstack = rx655_cur."!cursor_capture"($P11, "statement_prefix")
    repr_get_attr_int rx655_pos, $P11, rx655_curclass, "$!pos"
    rx655_cur."!cursor_pass"(rx655_pos, "term:sym<statement_prefix>", 'backtrack'=>1)
    .return (rx655_cur)
  rx655_restart1473:
    repr_get_attr_obj rx655_cstack, rx655_cur, rx655_curclass, "$!cstack"
  rx655_fail1474:
    unless rx655_bstack, rx655_done1472
    pop $I19, rx655_bstack
    if_null rx655_cstack, rx655_cstack_done1477
    unless rx655_cstack, rx655_cstack_done1477
    dec $I19
    set $P11, rx655_cstack[$I19]
  rx655_cstack_done1477:
    pop rx655_rep, rx655_bstack
    pop rx655_pos, rx655_bstack
    pop $I19, rx655_bstack
    lt rx655_pos, -1, rx655_done1472
    lt rx655_pos, 0, rx655_fail1474
    eq $I19, 0, rx655_fail1474
    nqp_islist $I20, rx655_cstack
    unless $I20, rx655_jump1475
    elements $I18, rx655_bstack
    le $I18, 0, rx655_cut1476
    dec $I18
    set $I18, rx655_bstack[$I18]
  rx655_cut1476:
    assign rx655_cstack, $I18
  rx655_jump1475:
    jump $I19
  rx655_done1472:
    rx655_cur."!cursor_fail"()
    .return (rx655_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<lambda>" :subid("cuid_95_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 938
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx658_start
    .local string rx658_tgt
    .local int rx658_pos
    .local int rx658_off
    .local int rx658_eos
    .local int rx658_rep
    .local pmc rx658_cur
    .local pmc rx658_curclass
    .local pmc rx658_bstack
    .local pmc rx658_cstack
    rx658_start = self."!cursor_start_all"()
    set rx658_cur, rx658_start[0]
    set rx658_tgt, rx658_start[1]
    set rx658_pos, rx658_start[2]
    set rx658_curclass, rx658_start[3]
    set rx658_bstack, rx658_start[4]
    set $I19, rx658_start[5]
    store_lex unicode:"$\x{a2}", rx658_cur
    length rx658_eos, rx658_tgt
    eq $I19, 1, rx658_restart1484
    gt rx658_pos, rx658_eos, rx658_fail1485
    repr_get_attr_int $I11, self, rx658_curclass, "$!from"
    ne $I11, -1, rxscan659_done1491
    goto rxscan659_scan1490
  rxscan659_loop1489:
    inc rx658_pos
    gt rx658_pos, rx658_eos, rx658_fail1485
    repr_bind_attr_int rx658_cur, rx658_curclass, "$!from", rx658_pos
  rxscan659_scan1490:
    nqp_rxmark rx658_bstack, rxscan659_loop1489, rx658_pos, 0
  rxscan659_done1491:
    repr_bind_attr_int rx658_cur, rx658_curclass, "$!pos", rx658_pos
    $P11 = rx658_cur."lambda"()
    repr_get_attr_int $I11, $P11, rx658_curclass, "$!pos"
    lt $I11, 0, rx658_fail1485
    repr_bind_attr_int rx658_cur, rx658_curclass, "$!pos", rx658_pos
    $P11 = rx658_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx658_curclass, "$!pos"
    lt $I11, 0, rx658_fail1485
    nqp_rxmark rx658_bstack, rxsubrule660_pass1492, -1, 0
  rxsubrule660_pass1492:
    rx658_cstack = rx658_cur."!cursor_capture"($P11, "pblock")
    repr_get_attr_int rx658_pos, $P11, rx658_curclass, "$!pos"
    rx658_cur."!cursor_pass"(rx658_pos, "term:sym<lambda>", 'backtrack'=>1)
    .return (rx658_cur)
  rx658_restart1484:
    repr_get_attr_obj rx658_cstack, rx658_cur, rx658_curclass, "$!cstack"
  rx658_fail1485:
    unless rx658_bstack, rx658_done1483
    pop $I19, rx658_bstack
    if_null rx658_cstack, rx658_cstack_done1488
    unless rx658_cstack, rx658_cstack_done1488
    dec $I19
    set $P11, rx658_cstack[$I19]
  rx658_cstack_done1488:
    pop rx658_rep, rx658_bstack
    pop rx658_pos, rx658_bstack
    pop $I19, rx658_bstack
    lt rx658_pos, -1, rx658_done1483
    lt rx658_pos, 0, rx658_fail1485
    eq $I19, 0, rx658_fail1485
    nqp_islist $I20, rx658_cstack
    unless $I20, rx658_jump1486
    elements $I18, rx658_bstack
    le $I18, 0, rx658_cut1487
    dec $I18
    set $I18, rx658_bstack[$I18]
  rx658_cut1487:
    assign rx658_cstack, $I18
  rx658_jump1486:
    jump $I19
  rx658_done1483:
    rx658_cur."!cursor_fail"()
    .return (rx658_cur) 
.end
.HLL "nqp"
.namespace []
.sub "fatarrow" :subid("cuid_96_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 940
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx661_start
    .local string rx661_tgt
    .local int rx661_pos
    .local int rx661_off
    .local int rx661_eos
    .local int rx661_rep
    .local pmc rx661_cur
    .local pmc rx661_curclass
    .local pmc rx661_bstack
    .local pmc rx661_cstack
    rx661_start = self."!cursor_start_all"()
    set rx661_cur, rx661_start[0]
    set rx661_tgt, rx661_start[1]
    set rx661_pos, rx661_start[2]
    set rx661_curclass, rx661_start[3]
    set rx661_bstack, rx661_start[4]
    set $I19, rx661_start[5]
    store_lex unicode:"$\x{a2}", rx661_cur
    length rx661_eos, rx661_tgt
    eq $I19, 1, rx661_restart1495
    gt rx661_pos, rx661_eos, rx661_fail1496
    repr_get_attr_int $I11, self, rx661_curclass, "$!from"
    ne $I11, -1, rxscan662_done1502
    goto rxscan662_scan1501
  rxscan662_loop1500:
    inc rx661_pos
    gt rx661_pos, rx661_eos, rx661_fail1496
    repr_bind_attr_int rx661_cur, rx661_curclass, "$!from", rx661_pos
  rxscan662_scan1501:
    nqp_rxmark rx661_bstack, rxscan662_loop1500, rx661_pos, 0
  rxscan662_done1502:
    repr_bind_attr_int rx661_cur, rx661_curclass, "$!pos", rx661_pos
    $P11 = rx661_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx661_curclass, "$!pos"
    lt $I11, 0, rx661_fail1496
    nqp_rxmark rx661_bstack, rxsubrule663_pass1503, -1, 0
  rxsubrule663_pass1503:
    rx661_cstack = rx661_cur."!cursor_capture"($P11, "key")
    repr_get_attr_int rx661_pos, $P11, rx661_curclass, "$!pos"
    nqp_rxmark rx661_bstack, rxquantr664_done1505, rx661_pos, 0
  rxquantr664_loop1504:
    ge rx661_pos, rx661_eos, rx661_fail1496
    substr $S11, rx661_tgt, rx661_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx661_fail1496
    inc rx661_pos
    nqp_rxpeek $I19, rx661_bstack, rxquantr664_done1505
    inc $I19
    inc $I19
    set rx661_rep, rx661_bstack[$I19]
    nqp_rxcommit rx661_bstack, rxquantr664_done1505
    inc rx661_rep
    nqp_rxmark rx661_bstack, rxquantr664_done1505, rx661_pos, rx661_rep
    goto rxquantr664_loop1504
  rxquantr664_done1505:
    add $I11, rx661_pos, 2
    gt $I11, rx661_eos, rx661_fail1496
    substr $S10, rx661_tgt, rx661_pos, 2
    ne $S10, ucs4:"=>", rx661_fail1496
    add rx661_pos, 2
    repr_bind_attr_int rx661_cur, rx661_curclass, "$!pos", rx661_pos
    $P11 = rx661_cur."ws"()
    repr_get_attr_int $I11, $P11, rx661_curclass, "$!pos"
    lt $I11, 0, rx661_fail1496
    repr_get_attr_int rx661_pos, $P11, rx661_curclass, "$!pos"
    repr_bind_attr_int rx661_cur, rx661_curclass, "$!pos", rx661_pos
    $P11 = rx661_cur."EXPR"("i=")
    repr_get_attr_int $I11, $P11, rx661_curclass, "$!pos"
    lt $I11, 0, rx661_fail1496
    nqp_rxmark rx661_bstack, rxsubrule666_pass1507, -1, 0
  rxsubrule666_pass1507:
    rx661_cstack = rx661_cur."!cursor_capture"($P11, "val")
    repr_get_attr_int rx661_pos, $P11, rx661_curclass, "$!pos"
    rx661_cur."!cursor_pass"(rx661_pos, "fatarrow", 'backtrack'=>1)
    .return (rx661_cur)
  rx661_restart1495:
    repr_get_attr_obj rx661_cstack, rx661_cur, rx661_curclass, "$!cstack"
  rx661_fail1496:
    unless rx661_bstack, rx661_done1494
    pop $I19, rx661_bstack
    if_null rx661_cstack, rx661_cstack_done1499
    unless rx661_cstack, rx661_cstack_done1499
    dec $I19
    set $P11, rx661_cstack[$I19]
  rx661_cstack_done1499:
    pop rx661_rep, rx661_bstack
    pop rx661_pos, rx661_bstack
    pop $I19, rx661_bstack
    lt rx661_pos, -1, rx661_done1494
    lt rx661_pos, 0, rx661_fail1496
    eq $I19, 0, rx661_fail1496
    nqp_islist $I20, rx661_cstack
    unless $I20, rx661_jump1497
    elements $I18, rx661_bstack
    le $I18, 0, rx661_cut1498
    dec $I18
    set $I18, rx661_bstack[$I18]
  rx661_cut1498:
    assign rx661_cstack, $I18
  rx661_jump1497:
    jump $I19
  rx661_done1494:
    rx661_cur."!cursor_fail"()
    .return (rx661_cur) 
.end
.HLL "nqp"
.namespace []
.sub "colonpair" :subid("cuid_97_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 944
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx667_start
    .local string rx667_tgt
    .local int rx667_pos
    .local int rx667_off
    .local int rx667_eos
    .local int rx667_rep
    .local pmc rx667_cur
    .local pmc rx667_curclass
    .local pmc rx667_bstack
    .local pmc rx667_cstack
    rx667_start = self."!cursor_start_all"()
    set rx667_cur, rx667_start[0]
    set rx667_tgt, rx667_start[1]
    set rx667_pos, rx667_start[2]
    set rx667_curclass, rx667_start[3]
    set rx667_bstack, rx667_start[4]
    set $I19, rx667_start[5]
    store_lex unicode:"$\x{a2}", rx667_cur
    length rx667_eos, rx667_tgt
    eq $I19, 1, rx667_restart1510
    gt rx667_pos, rx667_eos, rx667_fail1511
    repr_get_attr_int $I11, self, rx667_curclass, "$!from"
    ne $I11, -1, rxscan668_done1517
    goto rxscan668_scan1516
  rxscan668_loop1515:
    inc rx667_pos
    gt rx667_pos, rx667_eos, rx667_fail1511
    repr_bind_attr_int rx667_cur, rx667_curclass, "$!from", rx667_pos
  rxscan668_scan1516:
    nqp_rxmark rx667_bstack, rxscan668_loop1515, rx667_pos, 0
  rxscan668_done1517:
    add $I11, rx667_pos, 1
    gt $I11, rx667_eos, rx667_fail1511
    substr $S10, rx667_tgt, rx667_pos, 1
    ne $S10, ucs4:":", rx667_fail1511
    add rx667_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt669_01519
    nqp_push_label $P11, alt669_11523
    nqp_push_label $P11, alt669_21529
    nqp_push_label $P11, alt669_31531
    nqp_rxmark rx667_bstack, alt669_end1518, -1, 0
    rx667_cur."!alt"(rx667_pos, "alt_nfa__19_1367388603.20306", $P11)
    goto rx667_fail1511
  alt669_01519:
    nqp_rxmark rx667_bstack, rxcap670_fail1521, rx667_pos, 0
    add $I11, rx667_pos, 1
    gt $I11, rx667_eos, rx667_fail1511
    substr $S10, rx667_tgt, rx667_pos, 1
    ne $S10, ucs4:"!", rx667_fail1511
    add rx667_pos, 1
    nqp_rxpeek $I19, rx667_bstack, rxcap670_fail1521
    inc $I19
    set $I11, rx667_bstack[$I19]
    repr_bind_attr_int rx667_cur, rx667_curclass, "$!pos", rx667_pos
    $P11 = rx667_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx667_pos)
    rx667_cstack = rx667_cur."!cursor_capture"($P11, "not")
    goto rxcap670_done1520
  rxcap670_fail1521:
    goto rx667_fail1511
  rxcap670_done1520:
    repr_bind_attr_int rx667_cur, rx667_curclass, "$!pos", rx667_pos
    $P11 = rx667_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx667_curclass, "$!pos"
    lt $I11, 0, rx667_fail1511
    nqp_rxmark rx667_bstack, rxsubrule671_pass1522, -1, 0
  rxsubrule671_pass1522:
    rx667_cstack = rx667_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx667_pos, $P11, rx667_curclass, "$!pos"
    goto alt669_end1518
  alt669_11523:
    repr_bind_attr_int rx667_cur, rx667_curclass, "$!pos", rx667_pos
    $P11 = rx667_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx667_curclass, "$!pos"
    lt $I11, 0, rx667_fail1511
    nqp_rxmark rx667_bstack, rxsubrule672_pass1524, -1, 0
  rxsubrule672_pass1524:
    rx667_cstack = rx667_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx667_pos, $P11, rx667_curclass, "$!pos"
    nqp_rxmark rx667_bstack, rxquantr673_done1526, rx667_pos, 0
  rxquantr673_loop1525:
    repr_bind_attr_int rx667_cur, rx667_curclass, "$!pos", rx667_pos
    $P11 = rx667_cur."circumfix"()
    repr_get_attr_int $I11, $P11, rx667_curclass, "$!pos"
    lt $I11, 0, rx667_fail1511
    goto rxsubrule674_pass1527
  rxsubrule674_back1528:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx667_curclass, "$!pos"
    lt $I11, 0, rx667_fail1511
  rxsubrule674_pass1527:
    rx667_cstack = rx667_cur."!cursor_capture"($P11, "circumfix")
    set_addr $I11, rxsubrule674_back1528
    push rx667_bstack, $I11
    push rx667_bstack, 0
    push rx667_bstack, rx667_pos
    elements $I11, rx667_cstack
    push rx667_bstack, $I11
    repr_get_attr_int rx667_pos, $P11, rx667_curclass, "$!pos"
    nqp_rxpeek $I19, rx667_bstack, rxquantr673_done1526
    inc $I19
    inc $I19
    set rx667_rep, rx667_bstack[$I19]
    nqp_rxcommit rx667_bstack, rxquantr673_done1526
    inc rx667_rep
  rxquantr673_done1526:
    goto alt669_end1518
  alt669_21529:
    repr_bind_attr_int rx667_cur, rx667_curclass, "$!pos", rx667_pos
    $P11 = rx667_cur."circumfix"()
    repr_get_attr_int $I11, $P11, rx667_curclass, "$!pos"
    lt $I11, 0, rx667_fail1511
    nqp_rxmark rx667_bstack, rxsubrule675_pass1530, -1, 0
  rxsubrule675_pass1530:
    rx667_cstack = rx667_cur."!cursor_capture"($P11, "circumfix")
    repr_get_attr_int rx667_pos, $P11, rx667_curclass, "$!pos"
    goto alt669_end1518
  alt669_31531:
    repr_bind_attr_int rx667_cur, rx667_curclass, "$!pos", rx667_pos
    $P11 = rx667_cur."variable"()
    repr_get_attr_int $I11, $P11, rx667_curclass, "$!pos"
    lt $I11, 0, rx667_fail1511
    nqp_rxmark rx667_bstack, rxsubrule676_pass1532, -1, 0
  rxsubrule676_pass1532:
    rx667_cstack = rx667_cur."!cursor_capture"($P11, "variable")
    repr_get_attr_int rx667_pos, $P11, rx667_curclass, "$!pos"
    goto alt669_end1518
  alt669_end1518:
    nqp_rxcommit rx667_bstack, alt669_end1518
    rx667_cur."!cursor_pass"(rx667_pos, "colonpair", 'backtrack'=>1)
    .return (rx667_cur)
  rx667_restart1510:
    repr_get_attr_obj rx667_cstack, rx667_cur, rx667_curclass, "$!cstack"
  rx667_fail1511:
    unless rx667_bstack, rx667_done1509
    pop $I19, rx667_bstack
    if_null rx667_cstack, rx667_cstack_done1514
    unless rx667_cstack, rx667_cstack_done1514
    dec $I19
    set $P11, rx667_cstack[$I19]
  rx667_cstack_done1514:
    pop rx667_rep, rx667_bstack
    pop rx667_pos, rx667_bstack
    pop $I19, rx667_bstack
    lt rx667_pos, -1, rx667_done1509
    lt rx667_pos, 0, rx667_fail1511
    eq $I19, 0, rx667_fail1511
    nqp_islist $I20, rx667_cstack
    unless $I20, rx667_jump1512
    elements $I18, rx667_bstack
    le $I18, 0, rx667_cut1513
    dec $I18
    set $I18, rx667_bstack[$I18]
  rx667_cut1513:
    assign rx667_cstack, $I18
  rx667_jump1512:
    jump $I19
  rx667_done1509:
    rx667_cur."!cursor_fail"()
    .return (rx667_cur) 
.end
.HLL "nqp"
.namespace []
.sub "variable" :subid("cuid_98_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 954
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx677_start
    .local string rx677_tgt
    .local int rx677_pos
    .local int rx677_off
    .local int rx677_eos
    .local int rx677_rep
    .local pmc rx677_cur
    .local pmc rx677_curclass
    .local pmc rx677_bstack
    .local pmc rx677_cstack
    rx677_start = self."!cursor_start_all"()
    set rx677_cur, rx677_start[0]
    set rx677_tgt, rx677_start[1]
    set rx677_pos, rx677_start[2]
    set rx677_curclass, rx677_start[3]
    set rx677_bstack, rx677_start[4]
    set $I19, rx677_start[5]
    store_lex unicode:"$\x{a2}", rx677_cur
    length rx677_eos, rx677_tgt
    eq $I19, 1, rx677_restart1535
    gt rx677_pos, rx677_eos, rx677_fail1536
    repr_get_attr_int $I11, self, rx677_curclass, "$!from"
    ne $I11, -1, rxscan678_done1542
    goto rxscan678_scan1541
  rxscan678_loop1540:
    inc rx677_pos
    gt rx677_pos, rx677_eos, rx677_fail1536
    repr_bind_attr_int rx677_cur, rx677_curclass, "$!from", rx677_pos
  rxscan678_scan1541:
    nqp_rxmark rx677_bstack, rxscan678_loop1540, rx677_pos, 0
  rxscan678_done1542:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt679_01544
    nqp_push_label $P11, alt679_11551
    nqp_push_label $P11, alt679_21554
    nqp_push_label $P11, alt679_31562
    nqp_rxmark rx677_bstack, alt679_end1543, -1, 0
    rx677_cur."!alt"(rx677_pos, "alt_nfa__20_1367388603.22857", $P11)
    goto rx677_fail1536
  alt679_01544:
    repr_bind_attr_int rx677_cur, rx677_curclass, "$!pos", rx677_pos
    $P11 = rx677_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx677_curclass, "$!pos"
    lt $I11, 0, rx677_fail1536
    nqp_rxmark rx677_bstack, rxsubrule680_pass1545, -1, 0
  rxsubrule680_pass1545:
    rx677_cstack = rx677_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx677_pos, $P11, rx677_curclass, "$!pos"
    nqp_rxmark rx677_bstack, rxquantr681_done1547, rx677_pos, 0
  rxquantr681_loop1546:
    repr_bind_attr_int rx677_cur, rx677_curclass, "$!pos", rx677_pos
    $P11 = rx677_cur."twigil"()
    repr_get_attr_int $I11, $P11, rx677_curclass, "$!pos"
    lt $I11, 0, rx677_fail1536
    goto rxsubrule682_pass1548
  rxsubrule682_back1549:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx677_curclass, "$!pos"
    lt $I11, 0, rx677_fail1536
  rxsubrule682_pass1548:
    rx677_cstack = rx677_cur."!cursor_capture"($P11, "twigil")
    set_addr $I11, rxsubrule682_back1549
    push rx677_bstack, $I11
    push rx677_bstack, 0
    push rx677_bstack, rx677_pos
    elements $I11, rx677_cstack
    push rx677_bstack, $I11
    repr_get_attr_int rx677_pos, $P11, rx677_curclass, "$!pos"
    nqp_rxpeek $I19, rx677_bstack, rxquantr681_done1547
    inc $I19
    inc $I19
    set rx677_rep, rx677_bstack[$I19]
    nqp_rxcommit rx677_bstack, rxquantr681_done1547
    inc rx677_rep
  rxquantr681_done1547:
    repr_bind_attr_int rx677_cur, rx677_curclass, "$!pos", rx677_pos
    $P11 = rx677_cur."name"()
    repr_get_attr_int $I11, $P11, rx677_curclass, "$!pos"
    lt $I11, 0, rx677_fail1536
    nqp_rxmark rx677_bstack, rxsubrule683_pass1550, -1, 0
  rxsubrule683_pass1550:
    rx677_cstack = rx677_cur."!cursor_capture"($P11, "desigilname")
    repr_get_attr_int rx677_pos, $P11, rx677_curclass, "$!pos"
    goto alt679_end1543
  alt679_11551:
    repr_bind_attr_int rx677_cur, rx677_curclass, "$!pos", rx677_pos
    $P11 = rx677_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx677_curclass, "$!pos"
    lt $I11, 0, rx677_fail1536
    nqp_rxmark rx677_bstack, rxsubrule684_pass1552, -1, 0
  rxsubrule684_pass1552:
    rx677_cstack = rx677_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx677_pos, $P11, rx677_curclass, "$!pos"
    ge rx677_pos, rx677_eos, rx677_fail1536
    substr $S11, rx677_tgt, rx677_pos, 1
    index $I11, ucs4:"<", $S11
    lt $I11, 0, rx677_fail1536
    repr_bind_attr_int rx677_cur, rx677_curclass, "$!pos", rx677_pos
    $P11 = rx677_cur."postcircumfix"()
    repr_get_attr_int $I11, $P11, rx677_curclass, "$!pos"
    lt $I11, 0, rx677_fail1536
    nqp_rxmark rx677_bstack, rxsubrule685_pass1553, -1, 0
  rxsubrule685_pass1553:
    rx677_cstack = rx677_cur."!cursor_capture"($P11, "postcircumfix")
    repr_get_attr_int rx677_pos, $P11, rx677_curclass, "$!pos"
    goto alt679_end1543
  alt679_21554:
    repr_bind_attr_int rx677_cur, rx677_curclass, "$!pos", rx677_pos
    $P11 = rx677_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx677_curclass, "$!pos"
    lt $I11, 0, rx677_fail1536
    nqp_rxmark rx677_bstack, rxsubrule686_pass1555, -1, 0
  rxsubrule686_pass1555:
    rx677_cstack = rx677_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx677_pos, $P11, rx677_curclass, "$!pos"
    add $I11, rx677_pos, 1
    gt $I11, rx677_eos, rx677_fail1536
    substr $S10, rx677_tgt, rx677_pos, 1
    ne $S10, ucs4:"(", rx677_fail1536
    add rx677_pos, 1
    repr_bind_attr_int rx677_cur, rx677_curclass, "$!pos", rx677_pos
    $P11 = rx677_cur."semilist"()
    repr_get_attr_int $I11, $P11, rx677_curclass, "$!pos"
    lt $I11, 0, rx677_fail1536
    nqp_rxmark rx677_bstack, rxsubrule687_pass1556, -1, 0
  rxsubrule687_pass1556:
    rx677_cstack = rx677_cur."!cursor_capture"($P11, "semilist")
    repr_get_attr_int rx677_pos, $P11, rx677_curclass, "$!pos"
  alt688_01558:
    nqp_rxmark rx677_bstack, alt688_11559, rx677_pos, 0
    add $I11, rx677_pos, 1
    gt $I11, rx677_eos, rx677_fail1536
    substr $S10, rx677_tgt, rx677_pos, 1
    ne $S10, ucs4:")", rx677_fail1536
    add rx677_pos, 1
    goto alt688_end1557
  alt688_11559:
    repr_bind_attr_int rx677_cur, rx677_curclass, "$!pos", rx677_pos
    $P11 = rx677_cur."FAILGOAL"("')'")
    repr_get_attr_int $I11, $P11, rx677_curclass, "$!pos"
    lt $I11, 0, rx677_fail1536
    goto rxsubrule689_pass1560
  rxsubrule689_back1561:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx677_curclass, "$!pos"
    lt $I11, 0, rx677_fail1536
  rxsubrule689_pass1560:
    rx677_cstack = rx677_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule689_back1561
    push rx677_bstack, $I11
    push rx677_bstack, 0
    push rx677_bstack, rx677_pos
    elements $I11, rx677_cstack
    push rx677_bstack, $I11
    repr_get_attr_int rx677_pos, $P11, rx677_curclass, "$!pos"
  alt688_end1557:
    goto alt679_end1543
  alt679_31562:
    nqp_rxmark rx677_bstack, rxcap690_fail1564, rx677_pos, 0
    add $I11, rx677_pos, 1
    gt $I11, rx677_eos, rx677_fail1536
    substr $S10, rx677_tgt, rx677_pos, 1
    ne $S10, ucs4:"$", rx677_fail1536
    add rx677_pos, 1
    nqp_rxpeek $I19, rx677_bstack, rxcap690_fail1564
    inc $I19
    set $I11, rx677_bstack[$I19]
    repr_bind_attr_int rx677_cur, rx677_curclass, "$!pos", rx677_pos
    $P11 = rx677_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx677_pos)
    rx677_cstack = rx677_cur."!cursor_capture"($P11, "sigil")
    goto rxcap690_done1563
  rxcap690_fail1564:
    goto rx677_fail1536
  rxcap690_done1563:
    nqp_rxmark rx677_bstack, rxcap691_fail1566, rx677_pos, 0
    ge rx677_pos, rx677_eos, rx677_fail1536
    substr $S11, rx677_tgt, rx677_pos, 1
    index $I11, ucs4:"/_!", $S11
    lt $I11, 0, rx677_fail1536
    inc rx677_pos
    nqp_rxpeek $I19, rx677_bstack, rxcap691_fail1566
    inc $I19
    set $I11, rx677_bstack[$I19]
    repr_bind_attr_int rx677_cur, rx677_curclass, "$!pos", rx677_pos
    $P11 = rx677_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx677_pos)
    rx677_cstack = rx677_cur."!cursor_capture"($P11, "desigilname")
    goto rxcap691_done1565
  rxcap691_fail1566:
    goto rx677_fail1536
  rxcap691_done1565:
    goto alt679_end1543
  alt679_end1543:
    rx677_cur."!cursor_pass"(rx677_pos, "variable", 'backtrack'=>1)
    .return (rx677_cur)
  rx677_restart1535:
    repr_get_attr_obj rx677_cstack, rx677_cur, rx677_curclass, "$!cstack"
  rx677_fail1536:
    unless rx677_bstack, rx677_done1534
    pop $I19, rx677_bstack
    if_null rx677_cstack, rx677_cstack_done1539
    unless rx677_cstack, rx677_cstack_done1539
    dec $I19
    set $P11, rx677_cstack[$I19]
  rx677_cstack_done1539:
    pop rx677_rep, rx677_bstack
    pop rx677_pos, rx677_bstack
    pop $I19, rx677_bstack
    lt rx677_pos, -1, rx677_done1534
    lt rx677_pos, 0, rx677_fail1536
    eq $I19, 0, rx677_fail1536
    nqp_islist $I20, rx677_cstack
    unless $I20, rx677_jump1537
    elements $I18, rx677_bstack
    le $I18, 0, rx677_cut1538
    dec $I18
    set $I18, rx677_bstack[$I18]
  rx677_cut1538:
    assign rx677_cstack, $I18
  rx677_jump1537:
    jump $I19
  rx677_done1534:
    rx677_cur."!cursor_fail"()
    .return (rx677_cur) 
.end
.HLL "nqp"
.namespace []
.sub "sigil" :subid("cuid_99_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 961
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx692_start
    .local string rx692_tgt
    .local int rx692_pos
    .local int rx692_off
    .local int rx692_eos
    .local int rx692_rep
    .local pmc rx692_cur
    .local pmc rx692_curclass
    .local pmc rx692_bstack
    .local pmc rx692_cstack
    rx692_start = self."!cursor_start_all"()
    set rx692_cur, rx692_start[0]
    set rx692_tgt, rx692_start[1]
    set rx692_pos, rx692_start[2]
    set rx692_curclass, rx692_start[3]
    set rx692_bstack, rx692_start[4]
    set $I19, rx692_start[5]
    store_lex unicode:"$\x{a2}", rx692_cur
    length rx692_eos, rx692_tgt
    eq $I19, 1, rx692_restart1569
    gt rx692_pos, rx692_eos, rx692_fail1570
    repr_get_attr_int $I11, self, rx692_curclass, "$!from"
    ne $I11, -1, rxscan693_done1576
    goto rxscan693_scan1575
  rxscan693_loop1574:
    inc rx692_pos
    gt rx692_pos, rx692_eos, rx692_fail1570
    repr_bind_attr_int rx692_cur, rx692_curclass, "$!from", rx692_pos
  rxscan693_scan1575:
    nqp_rxmark rx692_bstack, rxscan693_loop1574, rx692_pos, 0
  rxscan693_done1576:
    ge rx692_pos, rx692_eos, rx692_fail1570
    substr $S11, rx692_tgt, rx692_pos, 1
    index $I11, ucs4:"$@%&", $S11
    lt $I11, 0, rx692_fail1570
    inc rx692_pos
    rx692_cur."!cursor_pass"(rx692_pos, "sigil", 'backtrack'=>1)
    .return (rx692_cur)
  rx692_restart1569:
    repr_get_attr_obj rx692_cstack, rx692_cur, rx692_curclass, "$!cstack"
  rx692_fail1570:
    unless rx692_bstack, rx692_done1568
    pop $I19, rx692_bstack
    if_null rx692_cstack, rx692_cstack_done1573
    unless rx692_cstack, rx692_cstack_done1573
    dec $I19
    set $P11, rx692_cstack[$I19]
  rx692_cstack_done1573:
    pop rx692_rep, rx692_bstack
    pop rx692_pos, rx692_bstack
    pop $I19, rx692_bstack
    lt rx692_pos, -1, rx692_done1568
    lt rx692_pos, 0, rx692_fail1570
    eq $I19, 0, rx692_fail1570
    nqp_islist $I20, rx692_cstack
    unless $I20, rx692_jump1571
    elements $I18, rx692_bstack
    le $I18, 0, rx692_cut1572
    dec $I18
    set $I18, rx692_bstack[$I18]
  rx692_cut1572:
    assign rx692_cstack, $I18
  rx692_jump1571:
    jump $I19
  rx692_done1568:
    rx692_cur."!cursor_fail"()
    .return (rx692_cur) 
.end
.HLL "nqp"
.namespace []
.sub "twigil" :subid("cuid_100_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 963
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx694_start
    .local string rx694_tgt
    .local int rx694_pos
    .local int rx694_off
    .local int rx694_eos
    .local int rx694_rep
    .local pmc rx694_cur
    .local pmc rx694_curclass
    .local pmc rx694_bstack
    .local pmc rx694_cstack
    rx694_start = self."!cursor_start_all"()
    set rx694_cur, rx694_start[0]
    set rx694_tgt, rx694_start[1]
    set rx694_pos, rx694_start[2]
    set rx694_curclass, rx694_start[3]
    set rx694_bstack, rx694_start[4]
    set $I19, rx694_start[5]
    store_lex unicode:"$\x{a2}", rx694_cur
    length rx694_eos, rx694_tgt
    eq $I19, 1, rx694_restart1579
    gt rx694_pos, rx694_eos, rx694_fail1580
    repr_get_attr_int $I11, self, rx694_curclass, "$!from"
    ne $I11, -1, rxscan695_done1586
    goto rxscan695_scan1585
  rxscan695_loop1584:
    inc rx694_pos
    gt rx694_pos, rx694_eos, rx694_fail1580
    repr_bind_attr_int rx694_cur, rx694_curclass, "$!from", rx694_pos
  rxscan695_scan1585:
    nqp_rxmark rx694_bstack, rxscan695_loop1584, rx694_pos, 0
  rxscan695_done1586:
    ge rx694_pos, rx694_eos, rx694_fail1580
    substr $S11, rx694_tgt, rx694_pos, 1
    index $I11, ucs4:"*!?", $S11
    lt $I11, 0, rx694_fail1580
    inc rx694_pos
    rx694_cur."!cursor_pass"(rx694_pos, "twigil", 'backtrack'=>1)
    .return (rx694_cur)
  rx694_restart1579:
    repr_get_attr_obj rx694_cstack, rx694_cur, rx694_curclass, "$!cstack"
  rx694_fail1580:
    unless rx694_bstack, rx694_done1578
    pop $I19, rx694_bstack
    if_null rx694_cstack, rx694_cstack_done1583
    unless rx694_cstack, rx694_cstack_done1583
    dec $I19
    set $P11, rx694_cstack[$I19]
  rx694_cstack_done1583:
    pop rx694_rep, rx694_bstack
    pop rx694_pos, rx694_bstack
    pop $I19, rx694_bstack
    lt rx694_pos, -1, rx694_done1578
    lt rx694_pos, 0, rx694_fail1580
    eq $I19, 0, rx694_fail1580
    nqp_islist $I20, rx694_cstack
    unless $I20, rx694_jump1581
    elements $I18, rx694_bstack
    le $I18, 0, rx694_cut1582
    dec $I18
    set $I18, rx694_bstack[$I18]
  rx694_cut1582:
    assign rx694_cstack, $I18
  rx694_jump1581:
    jump $I19
  rx694_done1578:
    rx694_cur."!cursor_fail"()
    .return (rx694_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator" :subid("cuid_101_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 965
    .param pmc self 
    $P5001 = self."!protoregex"("package_declarator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<module>" :subid("cuid_102_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 966
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_100 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx696_start
    .local string rx696_tgt
    .local int rx696_pos
    .local int rx696_off
    .local int rx696_eos
    .local int rx696_rep
    .local pmc rx696_cur
    .local pmc rx696_curclass
    .local pmc rx696_bstack
    .local pmc rx696_cstack
    rx696_start = self."!cursor_start_all"()
    set rx696_cur, rx696_start[0]
    set rx696_tgt, rx696_start[1]
    set rx696_pos, rx696_start[2]
    set rx696_curclass, rx696_start[3]
    set rx696_bstack, rx696_start[4]
    set $I19, rx696_start[5]
    store_lex unicode:"$\x{a2}", rx696_cur
    length rx696_eos, rx696_tgt
    eq $I19, 1, rx696_restart1589
    gt rx696_pos, rx696_eos, rx696_fail1590
    repr_get_attr_int $I11, self, rx696_curclass, "$!from"
    ne $I11, -1, rxscan697_done1596
    goto rxscan697_scan1595
  rxscan697_loop1594:
    inc rx696_pos
    gt rx696_pos, rx696_eos, rx696_fail1590
    repr_bind_attr_int rx696_cur, rx696_curclass, "$!from", rx696_pos
  rxscan697_scan1595:
    nqp_rxmark rx696_bstack, rxscan697_loop1594, rx696_pos, 0
  rxscan697_done1596:
    repr_bind_attr_int rx696_cur, rx696_curclass, "$!pos", rx696_pos
    store_lex unicode:"$\x{a2}", rx696_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1597
    nqp_get_sc_object $P5005, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5004, $P5005
    set fb_tmp_100, $P5004
    repr_defined $I5001, fb_tmp_100
    unless $I5001 goto if698_else1598 
    set $P5006, fb_tmp_100["$PACKAGE"]
    set $P5008, $P5006
    goto if698_end1599
  if698_else1598:
    null $P5007
    set $P5008, $P5007
  if698_end1599:
    unless_null $P5008, vivi_6991600
    nqp_get_sc_object $P5009, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5008, $P5009
  vivi_6991600:
    unless_null $P5008, vivi_7001601
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7001601:
    set $P5003, $P5008
  fallback1597:
    set $P101, $P5003
    repr_bind_attr_int rx696_cur, rx696_curclass, "$!pos", rx696_pos
    store_lex unicode:"$\x{a2}", rx696_cur
    box $P5011, "module"
    set $P102, $P5011
    nqp_rxmark rx696_bstack, rxcap701_fail1603, rx696_pos, 0
    add $I11, rx696_pos, 6
    gt $I11, rx696_eos, rx696_fail1590
    substr $S10, rx696_tgt, rx696_pos, 6
    ne $S10, ucs4:"module", rx696_fail1590
    add rx696_pos, 6
    nqp_rxpeek $I19, rx696_bstack, rxcap701_fail1603
    inc $I19
    set $I11, rx696_bstack[$I19]
    repr_bind_attr_int rx696_cur, rx696_curclass, "$!pos", rx696_pos
    $P11 = rx696_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx696_pos)
    rx696_cstack = rx696_cur."!cursor_capture"($P11, "sym")
    goto rxcap701_done1602
  rxcap701_fail1603:
    goto rx696_fail1590
  rxcap701_done1602:
    repr_bind_attr_int rx696_cur, rx696_curclass, "$!pos", rx696_pos
    $P11 = rx696_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx696_curclass, "$!pos"
    lt $I11, 0, rx696_fail1590
    nqp_rxmark rx696_bstack, rxsubrule702_pass1604, -1, 0
  rxsubrule702_pass1604:
    rx696_cstack = rx696_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx696_pos, $P11, rx696_curclass, "$!pos"
    rx696_cur."!cursor_pass"(rx696_pos, "package_declarator:sym<module>", 'backtrack'=>1)
    .return (rx696_cur)
  rx696_restart1589:
    repr_get_attr_obj rx696_cstack, rx696_cur, rx696_curclass, "$!cstack"
  rx696_fail1590:
    unless rx696_bstack, rx696_done1588
    pop $I19, rx696_bstack
    if_null rx696_cstack, rx696_cstack_done1593
    unless rx696_cstack, rx696_cstack_done1593
    dec $I19
    set $P11, rx696_cstack[$I19]
  rx696_cstack_done1593:
    pop rx696_rep, rx696_bstack
    pop rx696_pos, rx696_bstack
    pop $I19, rx696_bstack
    lt rx696_pos, -1, rx696_done1588
    lt rx696_pos, 0, rx696_fail1590
    eq $I19, 0, rx696_fail1590
    nqp_islist $I20, rx696_cstack
    unless $I20, rx696_jump1591
    elements $I18, rx696_bstack
    le $I18, 0, rx696_cut1592
    dec $I18
    set $I18, rx696_bstack[$I18]
  rx696_cut1592:
    assign rx696_cstack, $I18
  rx696_jump1591:
    jump $I19
  rx696_done1588:
    rx696_cur."!cursor_fail"()
    .return (rx696_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<knowhow>" :subid("cuid_103_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 971
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_101 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx703_start
    .local string rx703_tgt
    .local int rx703_pos
    .local int rx703_off
    .local int rx703_eos
    .local int rx703_rep
    .local pmc rx703_cur
    .local pmc rx703_curclass
    .local pmc rx703_bstack
    .local pmc rx703_cstack
    rx703_start = self."!cursor_start_all"()
    set rx703_cur, rx703_start[0]
    set rx703_tgt, rx703_start[1]
    set rx703_pos, rx703_start[2]
    set rx703_curclass, rx703_start[3]
    set rx703_bstack, rx703_start[4]
    set $I19, rx703_start[5]
    store_lex unicode:"$\x{a2}", rx703_cur
    length rx703_eos, rx703_tgt
    eq $I19, 1, rx703_restart1607
    gt rx703_pos, rx703_eos, rx703_fail1608
    repr_get_attr_int $I11, self, rx703_curclass, "$!from"
    ne $I11, -1, rxscan704_done1614
    goto rxscan704_scan1613
  rxscan704_loop1612:
    inc rx703_pos
    gt rx703_pos, rx703_eos, rx703_fail1608
    repr_bind_attr_int rx703_cur, rx703_curclass, "$!from", rx703_pos
  rxscan704_scan1613:
    nqp_rxmark rx703_bstack, rxscan704_loop1612, rx703_pos, 0
  rxscan704_done1614:
    repr_bind_attr_int rx703_cur, rx703_curclass, "$!pos", rx703_pos
    store_lex unicode:"$\x{a2}", rx703_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1615
    nqp_get_sc_object $P5005, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5004, $P5005
    set fb_tmp_101, $P5004
    repr_defined $I5001, fb_tmp_101
    unless $I5001 goto if705_else1616 
    set $P5006, fb_tmp_101["$PACKAGE"]
    set $P5008, $P5006
    goto if705_end1617
  if705_else1616:
    null $P5007
    set $P5008, $P5007
  if705_end1617:
    unless_null $P5008, vivi_7061618
    nqp_get_sc_object $P5009, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5008, $P5009
  vivi_7061618:
    unless_null $P5008, vivi_7071619
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7071619:
    set $P5003, $P5008
  fallback1615:
    set $P101, $P5003
    repr_bind_attr_int rx703_cur, rx703_curclass, "$!pos", rx703_pos
    store_lex unicode:"$\x{a2}", rx703_cur
    box $P5011, "knowhow"
    set $P102, $P5011
    nqp_rxmark rx703_bstack, rxcap708_fail1621, rx703_pos, 0
    add $I11, rx703_pos, 7
    gt $I11, rx703_eos, rx703_fail1608
    substr $S10, rx703_tgt, rx703_pos, 7
    ne $S10, ucs4:"knowhow", rx703_fail1608
    add rx703_pos, 7
    nqp_rxpeek $I19, rx703_bstack, rxcap708_fail1621
    inc $I19
    set $I11, rx703_bstack[$I19]
    repr_bind_attr_int rx703_cur, rx703_curclass, "$!pos", rx703_pos
    $P11 = rx703_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx703_pos)
    rx703_cstack = rx703_cur."!cursor_capture"($P11, "sym")
    goto rxcap708_done1620
  rxcap708_fail1621:
    goto rx703_fail1608
  rxcap708_done1620:
    repr_bind_attr_int rx703_cur, rx703_curclass, "$!pos", rx703_pos
    $P11 = rx703_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx703_curclass, "$!pos"
    lt $I11, 0, rx703_fail1608
    nqp_rxmark rx703_bstack, rxsubrule709_pass1622, -1, 0
  rxsubrule709_pass1622:
    rx703_cstack = rx703_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx703_pos, $P11, rx703_curclass, "$!pos"
    rx703_cur."!cursor_pass"(rx703_pos, "package_declarator:sym<knowhow>", 'backtrack'=>1)
    .return (rx703_cur)
  rx703_restart1607:
    repr_get_attr_obj rx703_cstack, rx703_cur, rx703_curclass, "$!cstack"
  rx703_fail1608:
    unless rx703_bstack, rx703_done1606
    pop $I19, rx703_bstack
    if_null rx703_cstack, rx703_cstack_done1611
    unless rx703_cstack, rx703_cstack_done1611
    dec $I19
    set $P11, rx703_cstack[$I19]
  rx703_cstack_done1611:
    pop rx703_rep, rx703_bstack
    pop rx703_pos, rx703_bstack
    pop $I19, rx703_bstack
    lt rx703_pos, -1, rx703_done1606
    lt rx703_pos, 0, rx703_fail1608
    eq $I19, 0, rx703_fail1608
    nqp_islist $I20, rx703_cstack
    unless $I20, rx703_jump1609
    elements $I18, rx703_bstack
    le $I18, 0, rx703_cut1610
    dec $I18
    set $I18, rx703_bstack[$I18]
  rx703_cut1610:
    assign rx703_cstack, $I18
  rx703_jump1609:
    jump $I19
  rx703_done1606:
    rx703_cur."!cursor_fail"()
    .return (rx703_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<class>" :subid("cuid_104_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 976
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_102 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx710_start
    .local string rx710_tgt
    .local int rx710_pos
    .local int rx710_off
    .local int rx710_eos
    .local int rx710_rep
    .local pmc rx710_cur
    .local pmc rx710_curclass
    .local pmc rx710_bstack
    .local pmc rx710_cstack
    rx710_start = self."!cursor_start_all"()
    set rx710_cur, rx710_start[0]
    set rx710_tgt, rx710_start[1]
    set rx710_pos, rx710_start[2]
    set rx710_curclass, rx710_start[3]
    set rx710_bstack, rx710_start[4]
    set $I19, rx710_start[5]
    store_lex unicode:"$\x{a2}", rx710_cur
    length rx710_eos, rx710_tgt
    eq $I19, 1, rx710_restart1625
    gt rx710_pos, rx710_eos, rx710_fail1626
    repr_get_attr_int $I11, self, rx710_curclass, "$!from"
    ne $I11, -1, rxscan711_done1632
    goto rxscan711_scan1631
  rxscan711_loop1630:
    inc rx710_pos
    gt rx710_pos, rx710_eos, rx710_fail1626
    repr_bind_attr_int rx710_cur, rx710_curclass, "$!from", rx710_pos
  rxscan711_scan1631:
    nqp_rxmark rx710_bstack, rxscan711_loop1630, rx710_pos, 0
  rxscan711_done1632:
    repr_bind_attr_int rx710_cur, rx710_curclass, "$!pos", rx710_pos
    store_lex unicode:"$\x{a2}", rx710_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1633
    nqp_get_sc_object $P5005, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5004, $P5005
    set fb_tmp_102, $P5004
    repr_defined $I5001, fb_tmp_102
    unless $I5001 goto if712_else1634 
    set $P5006, fb_tmp_102["$PACKAGE"]
    set $P5008, $P5006
    goto if712_end1635
  if712_else1634:
    null $P5007
    set $P5008, $P5007
  if712_end1635:
    unless_null $P5008, vivi_7131636
    nqp_get_sc_object $P5009, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5008, $P5009
  vivi_7131636:
    unless_null $P5008, vivi_7141637
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7141637:
    set $P5003, $P5008
  fallback1633:
    set $P101, $P5003
    repr_bind_attr_int rx710_cur, rx710_curclass, "$!pos", rx710_pos
    store_lex unicode:"$\x{a2}", rx710_cur
    box $P5011, "class"
    set $P102, $P5011
    nqp_rxmark rx710_bstack, rxcap715_fail1639, rx710_pos, 0
    add $I11, rx710_pos, 5
    gt $I11, rx710_eos, rx710_fail1626
    substr $S10, rx710_tgt, rx710_pos, 5
    ne $S10, ucs4:"class", rx710_fail1626
    add rx710_pos, 5
    nqp_rxpeek $I19, rx710_bstack, rxcap715_fail1639
    inc $I19
    set $I11, rx710_bstack[$I19]
    repr_bind_attr_int rx710_cur, rx710_curclass, "$!pos", rx710_pos
    $P11 = rx710_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx710_pos)
    rx710_cstack = rx710_cur."!cursor_capture"($P11, "sym")
    goto rxcap715_done1638
  rxcap715_fail1639:
    goto rx710_fail1626
  rxcap715_done1638:
    repr_bind_attr_int rx710_cur, rx710_curclass, "$!pos", rx710_pos
    $P11 = rx710_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx710_curclass, "$!pos"
    lt $I11, 0, rx710_fail1626
    nqp_rxmark rx710_bstack, rxsubrule716_pass1640, -1, 0
  rxsubrule716_pass1640:
    rx710_cstack = rx710_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx710_pos, $P11, rx710_curclass, "$!pos"
    rx710_cur."!cursor_pass"(rx710_pos, "package_declarator:sym<class>", 'backtrack'=>1)
    .return (rx710_cur)
  rx710_restart1625:
    repr_get_attr_obj rx710_cstack, rx710_cur, rx710_curclass, "$!cstack"
  rx710_fail1626:
    unless rx710_bstack, rx710_done1624
    pop $I19, rx710_bstack
    if_null rx710_cstack, rx710_cstack_done1629
    unless rx710_cstack, rx710_cstack_done1629
    dec $I19
    set $P11, rx710_cstack[$I19]
  rx710_cstack_done1629:
    pop rx710_rep, rx710_bstack
    pop rx710_pos, rx710_bstack
    pop $I19, rx710_bstack
    lt rx710_pos, -1, rx710_done1624
    lt rx710_pos, 0, rx710_fail1626
    eq $I19, 0, rx710_fail1626
    nqp_islist $I20, rx710_cstack
    unless $I20, rx710_jump1627
    elements $I18, rx710_bstack
    le $I18, 0, rx710_cut1628
    dec $I18
    set $I18, rx710_bstack[$I18]
  rx710_cut1628:
    assign rx710_cstack, $I18
  rx710_jump1627:
    jump $I19
  rx710_done1624:
    rx710_cur."!cursor_fail"()
    .return (rx710_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<grammar>" :subid("cuid_105_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 981
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_103 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx717_start
    .local string rx717_tgt
    .local int rx717_pos
    .local int rx717_off
    .local int rx717_eos
    .local int rx717_rep
    .local pmc rx717_cur
    .local pmc rx717_curclass
    .local pmc rx717_bstack
    .local pmc rx717_cstack
    rx717_start = self."!cursor_start_all"()
    set rx717_cur, rx717_start[0]
    set rx717_tgt, rx717_start[1]
    set rx717_pos, rx717_start[2]
    set rx717_curclass, rx717_start[3]
    set rx717_bstack, rx717_start[4]
    set $I19, rx717_start[5]
    store_lex unicode:"$\x{a2}", rx717_cur
    length rx717_eos, rx717_tgt
    eq $I19, 1, rx717_restart1643
    gt rx717_pos, rx717_eos, rx717_fail1644
    repr_get_attr_int $I11, self, rx717_curclass, "$!from"
    ne $I11, -1, rxscan718_done1650
    goto rxscan718_scan1649
  rxscan718_loop1648:
    inc rx717_pos
    gt rx717_pos, rx717_eos, rx717_fail1644
    repr_bind_attr_int rx717_cur, rx717_curclass, "$!from", rx717_pos
  rxscan718_scan1649:
    nqp_rxmark rx717_bstack, rxscan718_loop1648, rx717_pos, 0
  rxscan718_done1650:
    repr_bind_attr_int rx717_cur, rx717_curclass, "$!pos", rx717_pos
    store_lex unicode:"$\x{a2}", rx717_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1651
    nqp_get_sc_object $P5005, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5004, $P5005
    set fb_tmp_103, $P5004
    repr_defined $I5001, fb_tmp_103
    unless $I5001 goto if719_else1652 
    set $P5006, fb_tmp_103["$PACKAGE"]
    set $P5008, $P5006
    goto if719_end1653
  if719_else1652:
    null $P5007
    set $P5008, $P5007
  if719_end1653:
    unless_null $P5008, vivi_7201654
    nqp_get_sc_object $P5009, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5008, $P5009
  vivi_7201654:
    unless_null $P5008, vivi_7211655
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7211655:
    set $P5003, $P5008
  fallback1651:
    set $P101, $P5003
    repr_bind_attr_int rx717_cur, rx717_curclass, "$!pos", rx717_pos
    store_lex unicode:"$\x{a2}", rx717_cur
    box $P5011, "grammar"
    set $P102, $P5011
    nqp_rxmark rx717_bstack, rxcap722_fail1657, rx717_pos, 0
    add $I11, rx717_pos, 7
    gt $I11, rx717_eos, rx717_fail1644
    substr $S10, rx717_tgt, rx717_pos, 7
    ne $S10, ucs4:"grammar", rx717_fail1644
    add rx717_pos, 7
    nqp_rxpeek $I19, rx717_bstack, rxcap722_fail1657
    inc $I19
    set $I11, rx717_bstack[$I19]
    repr_bind_attr_int rx717_cur, rx717_curclass, "$!pos", rx717_pos
    $P11 = rx717_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx717_pos)
    rx717_cstack = rx717_cur."!cursor_capture"($P11, "sym")
    goto rxcap722_done1656
  rxcap722_fail1657:
    goto rx717_fail1644
  rxcap722_done1656:
    repr_bind_attr_int rx717_cur, rx717_curclass, "$!pos", rx717_pos
    $P11 = rx717_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx717_curclass, "$!pos"
    lt $I11, 0, rx717_fail1644
    nqp_rxmark rx717_bstack, rxsubrule723_pass1658, -1, 0
  rxsubrule723_pass1658:
    rx717_cstack = rx717_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx717_pos, $P11, rx717_curclass, "$!pos"
    rx717_cur."!cursor_pass"(rx717_pos, "package_declarator:sym<grammar>", 'backtrack'=>1)
    .return (rx717_cur)
  rx717_restart1643:
    repr_get_attr_obj rx717_cstack, rx717_cur, rx717_curclass, "$!cstack"
  rx717_fail1644:
    unless rx717_bstack, rx717_done1642
    pop $I19, rx717_bstack
    if_null rx717_cstack, rx717_cstack_done1647
    unless rx717_cstack, rx717_cstack_done1647
    dec $I19
    set $P11, rx717_cstack[$I19]
  rx717_cstack_done1647:
    pop rx717_rep, rx717_bstack
    pop rx717_pos, rx717_bstack
    pop $I19, rx717_bstack
    lt rx717_pos, -1, rx717_done1642
    lt rx717_pos, 0, rx717_fail1644
    eq $I19, 0, rx717_fail1644
    nqp_islist $I20, rx717_cstack
    unless $I20, rx717_jump1645
    elements $I18, rx717_bstack
    le $I18, 0, rx717_cut1646
    dec $I18
    set $I18, rx717_bstack[$I18]
  rx717_cut1646:
    assign rx717_cstack, $I18
  rx717_jump1645:
    jump $I19
  rx717_done1642:
    rx717_cur."!cursor_fail"()
    .return (rx717_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<role>" :subid("cuid_106_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 986
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_104 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx724_start
    .local string rx724_tgt
    .local int rx724_pos
    .local int rx724_off
    .local int rx724_eos
    .local int rx724_rep
    .local pmc rx724_cur
    .local pmc rx724_curclass
    .local pmc rx724_bstack
    .local pmc rx724_cstack
    rx724_start = self."!cursor_start_all"()
    set rx724_cur, rx724_start[0]
    set rx724_tgt, rx724_start[1]
    set rx724_pos, rx724_start[2]
    set rx724_curclass, rx724_start[3]
    set rx724_bstack, rx724_start[4]
    set $I19, rx724_start[5]
    store_lex unicode:"$\x{a2}", rx724_cur
    length rx724_eos, rx724_tgt
    eq $I19, 1, rx724_restart1661
    gt rx724_pos, rx724_eos, rx724_fail1662
    repr_get_attr_int $I11, self, rx724_curclass, "$!from"
    ne $I11, -1, rxscan725_done1668
    goto rxscan725_scan1667
  rxscan725_loop1666:
    inc rx724_pos
    gt rx724_pos, rx724_eos, rx724_fail1662
    repr_bind_attr_int rx724_cur, rx724_curclass, "$!from", rx724_pos
  rxscan725_scan1667:
    nqp_rxmark rx724_bstack, rxscan725_loop1666, rx724_pos, 0
  rxscan725_done1668:
    repr_bind_attr_int rx724_cur, rx724_curclass, "$!pos", rx724_pos
    store_lex unicode:"$\x{a2}", rx724_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1669
    nqp_get_sc_object $P5005, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5004, $P5005
    set fb_tmp_104, $P5004
    repr_defined $I5001, fb_tmp_104
    unless $I5001 goto if726_else1670 
    set $P5006, fb_tmp_104["$PACKAGE"]
    set $P5008, $P5006
    goto if726_end1671
  if726_else1670:
    null $P5007
    set $P5008, $P5007
  if726_end1671:
    unless_null $P5008, vivi_7271672
    nqp_get_sc_object $P5009, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5008, $P5009
  vivi_7271672:
    unless_null $P5008, vivi_7281673
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7281673:
    set $P5003, $P5008
  fallback1669:
    set $P101, $P5003
    repr_bind_attr_int rx724_cur, rx724_curclass, "$!pos", rx724_pos
    store_lex unicode:"$\x{a2}", rx724_cur
    box $P5011, "role"
    set $P102, $P5011
    nqp_rxmark rx724_bstack, rxcap729_fail1675, rx724_pos, 0
    add $I11, rx724_pos, 4
    gt $I11, rx724_eos, rx724_fail1662
    substr $S10, rx724_tgt, rx724_pos, 4
    ne $S10, ucs4:"role", rx724_fail1662
    add rx724_pos, 4
    nqp_rxpeek $I19, rx724_bstack, rxcap729_fail1675
    inc $I19
    set $I11, rx724_bstack[$I19]
    repr_bind_attr_int rx724_cur, rx724_curclass, "$!pos", rx724_pos
    $P11 = rx724_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx724_pos)
    rx724_cstack = rx724_cur."!cursor_capture"($P11, "sym")
    goto rxcap729_done1674
  rxcap729_fail1675:
    goto rx724_fail1662
  rxcap729_done1674:
    repr_bind_attr_int rx724_cur, rx724_curclass, "$!pos", rx724_pos
    $P11 = rx724_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx724_curclass, "$!pos"
    lt $I11, 0, rx724_fail1662
    nqp_rxmark rx724_bstack, rxsubrule730_pass1676, -1, 0
  rxsubrule730_pass1676:
    rx724_cstack = rx724_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx724_pos, $P11, rx724_curclass, "$!pos"
    rx724_cur."!cursor_pass"(rx724_pos, "package_declarator:sym<role>", 'backtrack'=>1)
    .return (rx724_cur)
  rx724_restart1661:
    repr_get_attr_obj rx724_cstack, rx724_cur, rx724_curclass, "$!cstack"
  rx724_fail1662:
    unless rx724_bstack, rx724_done1660
    pop $I19, rx724_bstack
    if_null rx724_cstack, rx724_cstack_done1665
    unless rx724_cstack, rx724_cstack_done1665
    dec $I19
    set $P11, rx724_cstack[$I19]
  rx724_cstack_done1665:
    pop rx724_rep, rx724_bstack
    pop rx724_pos, rx724_bstack
    pop $I19, rx724_bstack
    lt rx724_pos, -1, rx724_done1660
    lt rx724_pos, 0, rx724_fail1662
    eq $I19, 0, rx724_fail1662
    nqp_islist $I20, rx724_cstack
    unless $I20, rx724_jump1663
    elements $I18, rx724_bstack
    le $I18, 0, rx724_cut1664
    dec $I18
    set $I18, rx724_bstack[$I18]
  rx724_cut1664:
    assign rx724_cstack, $I18
  rx724_jump1663:
    jump $I19
  rx724_done1660:
    rx724_cur."!cursor_fail"()
    .return (rx724_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<native>" :subid("cuid_107_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 991
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_105 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx731_start
    .local string rx731_tgt
    .local int rx731_pos
    .local int rx731_off
    .local int rx731_eos
    .local int rx731_rep
    .local pmc rx731_cur
    .local pmc rx731_curclass
    .local pmc rx731_bstack
    .local pmc rx731_cstack
    rx731_start = self."!cursor_start_all"()
    set rx731_cur, rx731_start[0]
    set rx731_tgt, rx731_start[1]
    set rx731_pos, rx731_start[2]
    set rx731_curclass, rx731_start[3]
    set rx731_bstack, rx731_start[4]
    set $I19, rx731_start[5]
    store_lex unicode:"$\x{a2}", rx731_cur
    length rx731_eos, rx731_tgt
    eq $I19, 1, rx731_restart1679
    gt rx731_pos, rx731_eos, rx731_fail1680
    repr_get_attr_int $I11, self, rx731_curclass, "$!from"
    ne $I11, -1, rxscan732_done1686
    goto rxscan732_scan1685
  rxscan732_loop1684:
    inc rx731_pos
    gt rx731_pos, rx731_eos, rx731_fail1680
    repr_bind_attr_int rx731_cur, rx731_curclass, "$!from", rx731_pos
  rxscan732_scan1685:
    nqp_rxmark rx731_bstack, rxscan732_loop1684, rx731_pos, 0
  rxscan732_done1686:
    repr_bind_attr_int rx731_cur, rx731_curclass, "$!pos", rx731_pos
    store_lex unicode:"$\x{a2}", rx731_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1687
    nqp_get_sc_object $P5005, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5004, $P5005
    set fb_tmp_105, $P5004
    repr_defined $I5001, fb_tmp_105
    unless $I5001 goto if733_else1688 
    set $P5006, fb_tmp_105["$PACKAGE"]
    set $P5008, $P5006
    goto if733_end1689
  if733_else1688:
    null $P5007
    set $P5008, $P5007
  if733_end1689:
    unless_null $P5008, vivi_7341690
    nqp_get_sc_object $P5009, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5008, $P5009
  vivi_7341690:
    unless_null $P5008, vivi_7351691
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7351691:
    set $P5003, $P5008
  fallback1687:
    set $P101, $P5003
    repr_bind_attr_int rx731_cur, rx731_curclass, "$!pos", rx731_pos
    store_lex unicode:"$\x{a2}", rx731_cur
    box $P5011, "native"
    set $P102, $P5011
    nqp_rxmark rx731_bstack, rxcap736_fail1693, rx731_pos, 0
    add $I11, rx731_pos, 6
    gt $I11, rx731_eos, rx731_fail1680
    substr $S10, rx731_tgt, rx731_pos, 6
    ne $S10, ucs4:"native", rx731_fail1680
    add rx731_pos, 6
    nqp_rxpeek $I19, rx731_bstack, rxcap736_fail1693
    inc $I19
    set $I11, rx731_bstack[$I19]
    repr_bind_attr_int rx731_cur, rx731_curclass, "$!pos", rx731_pos
    $P11 = rx731_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx731_pos)
    rx731_cstack = rx731_cur."!cursor_capture"($P11, "sym")
    goto rxcap736_done1692
  rxcap736_fail1693:
    goto rx731_fail1680
  rxcap736_done1692:
    repr_bind_attr_int rx731_cur, rx731_curclass, "$!pos", rx731_pos
    $P11 = rx731_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx731_curclass, "$!pos"
    lt $I11, 0, rx731_fail1680
    nqp_rxmark rx731_bstack, rxsubrule737_pass1694, -1, 0
  rxsubrule737_pass1694:
    rx731_cstack = rx731_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx731_pos, $P11, rx731_curclass, "$!pos"
    rx731_cur."!cursor_pass"(rx731_pos, "package_declarator:sym<native>", 'backtrack'=>1)
    .return (rx731_cur)
  rx731_restart1679:
    repr_get_attr_obj rx731_cstack, rx731_cur, rx731_curclass, "$!cstack"
  rx731_fail1680:
    unless rx731_bstack, rx731_done1678
    pop $I19, rx731_bstack
    if_null rx731_cstack, rx731_cstack_done1683
    unless rx731_cstack, rx731_cstack_done1683
    dec $I19
    set $P11, rx731_cstack[$I19]
  rx731_cstack_done1683:
    pop rx731_rep, rx731_bstack
    pop rx731_pos, rx731_bstack
    pop $I19, rx731_bstack
    lt rx731_pos, -1, rx731_done1678
    lt rx731_pos, 0, rx731_fail1680
    eq $I19, 0, rx731_fail1680
    nqp_islist $I20, rx731_cstack
    unless $I20, rx731_jump1681
    elements $I18, rx731_bstack
    le $I18, 0, rx731_cut1682
    dec $I18
    set $I18, rx731_bstack[$I18]
  rx731_cut1682:
    assign rx731_cstack, $I18
  rx731_jump1681:
    jump $I19
  rx731_done1678:
    rx731_cur."!cursor_fail"()
    .return (rx731_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<stub>" :subid("cuid_108_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 996
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_106 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx738_start
    .local string rx738_tgt
    .local int rx738_pos
    .local int rx738_off
    .local int rx738_eos
    .local int rx738_rep
    .local pmc rx738_cur
    .local pmc rx738_curclass
    .local pmc rx738_bstack
    .local pmc rx738_cstack
    rx738_start = self."!cursor_start_all"()
    set rx738_cur, rx738_start[0]
    set rx738_tgt, rx738_start[1]
    set rx738_pos, rx738_start[2]
    set rx738_curclass, rx738_start[3]
    set rx738_bstack, rx738_start[4]
    set $I19, rx738_start[5]
    store_lex unicode:"$\x{a2}", rx738_cur
    length rx738_eos, rx738_tgt
    eq $I19, 1, rx738_restart1697
    gt rx738_pos, rx738_eos, rx738_fail1698
    repr_get_attr_int $I11, self, rx738_curclass, "$!from"
    ne $I11, -1, rxscan739_done1704
    goto rxscan739_scan1703
  rxscan739_loop1702:
    inc rx738_pos
    gt rx738_pos, rx738_eos, rx738_fail1698
    repr_bind_attr_int rx738_cur, rx738_curclass, "$!from", rx738_pos
  rxscan739_scan1703:
    nqp_rxmark rx738_bstack, rxscan739_loop1702, rx738_pos, 0
  rxscan739_done1704:
    repr_bind_attr_int rx738_cur, rx738_curclass, "$!pos", rx738_pos
    store_lex unicode:"$\x{a2}", rx738_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1705
    nqp_get_sc_object $P5005, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5004, $P5005
    set fb_tmp_106, $P5004
    repr_defined $I5001, fb_tmp_106
    unless $I5001 goto if740_else1706 
    set $P5006, fb_tmp_106["$PACKAGE"]
    set $P5008, $P5006
    goto if740_end1707
  if740_else1706:
    null $P5007
    set $P5008, $P5007
  if740_end1707:
    unless_null $P5008, vivi_7411708
    nqp_get_sc_object $P5009, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5008, $P5009
  vivi_7411708:
    unless_null $P5008, vivi_7421709
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7421709:
    set $P5003, $P5008
  fallback1705:
    set $P101, $P5003
    repr_bind_attr_int rx738_cur, rx738_curclass, "$!pos", rx738_pos
    store_lex unicode:"$\x{a2}", rx738_cur
    box $P5011, "stub"
    set $P102, $P5011
    nqp_rxmark rx738_bstack, rxcap743_fail1711, rx738_pos, 0
    add $I11, rx738_pos, 4
    gt $I11, rx738_eos, rx738_fail1698
    substr $S10, rx738_tgt, rx738_pos, 4
    ne $S10, ucs4:"stub", rx738_fail1698
    add rx738_pos, 4
    nqp_rxpeek $I19, rx738_bstack, rxcap743_fail1711
    inc $I19
    set $I11, rx738_bstack[$I19]
    repr_bind_attr_int rx738_cur, rx738_curclass, "$!pos", rx738_pos
    $P11 = rx738_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx738_pos)
    rx738_cstack = rx738_cur."!cursor_capture"($P11, "sym")
    goto rxcap743_done1710
  rxcap743_fail1711:
    goto rx738_fail1698
  rxcap743_done1710:
    repr_bind_attr_int rx738_cur, rx738_curclass, "$!pos", rx738_pos
    $P11 = rx738_cur."ws"()
    repr_get_attr_int $I11, $P11, rx738_curclass, "$!pos"
    lt $I11, 0, rx738_fail1698
    repr_get_attr_int rx738_pos, $P11, rx738_curclass, "$!pos"
    repr_bind_attr_int rx738_cur, rx738_curclass, "$!pos", rx738_pos
    $P11 = rx738_cur."name"()
    repr_get_attr_int $I11, $P11, rx738_curclass, "$!pos"
    lt $I11, 0, rx738_fail1698
    nqp_rxmark rx738_bstack, rxsubrule745_pass1713, -1, 0
  rxsubrule745_pass1713:
    rx738_cstack = rx738_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx738_pos, $P11, rx738_curclass, "$!pos"
    repr_bind_attr_int rx738_cur, rx738_curclass, "$!pos", rx738_pos
    $P11 = rx738_cur."ws"()
    repr_get_attr_int $I11, $P11, rx738_curclass, "$!pos"
    lt $I11, 0, rx738_fail1698
    repr_get_attr_int rx738_pos, $P11, rx738_curclass, "$!pos"
    add $I11, rx738_pos, 9
    gt $I11, rx738_eos, rx738_fail1698
    substr $S10, rx738_tgt, rx738_pos, 9
    ne $S10, ucs4:"metaclass", rx738_fail1698
    add rx738_pos, 9
    repr_bind_attr_int rx738_cur, rx738_curclass, "$!pos", rx738_pos
    $P11 = rx738_cur."ws"()
    repr_get_attr_int $I11, $P11, rx738_curclass, "$!pos"
    lt $I11, 0, rx738_fail1698
    repr_get_attr_int rx738_pos, $P11, rx738_curclass, "$!pos"
    repr_bind_attr_int rx738_cur, rx738_curclass, "$!pos", rx738_pos
    $P11 = rx738_cur."name"()
    repr_get_attr_int $I11, $P11, rx738_curclass, "$!pos"
    lt $I11, 0, rx738_fail1698
    nqp_rxmark rx738_bstack, rxsubrule748_pass1716, -1, 0
  rxsubrule748_pass1716:
    rx738_cstack = rx738_cur."!cursor_capture"($P11, "metaclass")
    repr_get_attr_int rx738_pos, $P11, rx738_curclass, "$!pos"
    repr_bind_attr_int rx738_cur, rx738_curclass, "$!pos", rx738_pos
    $P11 = rx738_cur."ws"()
    repr_get_attr_int $I11, $P11, rx738_curclass, "$!pos"
    lt $I11, 0, rx738_fail1698
    repr_get_attr_int rx738_pos, $P11, rx738_curclass, "$!pos"
    add $I11, rx738_pos, 1
    gt $I11, rx738_eos, rx738_fail1698
    substr $S10, rx738_tgt, rx738_pos, 1
    ne $S10, ucs4:"{", rx738_fail1698
    add rx738_pos, 1
    repr_bind_attr_int rx738_cur, rx738_curclass, "$!pos", rx738_pos
    $P11 = rx738_cur."ws"()
    repr_get_attr_int $I11, $P11, rx738_curclass, "$!pos"
    lt $I11, 0, rx738_fail1698
    repr_get_attr_int rx738_pos, $P11, rx738_curclass, "$!pos"
    add $I11, rx738_pos, 3
    gt $I11, rx738_eos, rx738_fail1698
    substr $S10, rx738_tgt, rx738_pos, 3
    ne $S10, ucs4:"...", rx738_fail1698
    add rx738_pos, 3
    repr_bind_attr_int rx738_cur, rx738_curclass, "$!pos", rx738_pos
    $P11 = rx738_cur."ws"()
    repr_get_attr_int $I11, $P11, rx738_curclass, "$!pos"
    lt $I11, 0, rx738_fail1698
    repr_get_attr_int rx738_pos, $P11, rx738_curclass, "$!pos"
    add $I11, rx738_pos, 1
    gt $I11, rx738_eos, rx738_fail1698
    substr $S10, rx738_tgt, rx738_pos, 1
    ne $S10, ucs4:"}", rx738_fail1698
    add rx738_pos, 1
    repr_bind_attr_int rx738_cur, rx738_curclass, "$!pos", rx738_pos
    $P11 = rx738_cur."ws"()
    repr_get_attr_int $I11, $P11, rx738_curclass, "$!pos"
    lt $I11, 0, rx738_fail1698
    repr_get_attr_int rx738_pos, $P11, rx738_curclass, "$!pos"
    rx738_cur."!cursor_pass"(rx738_pos, "package_declarator:sym<stub>", 'backtrack'=>1)
    .return (rx738_cur)
  rx738_restart1697:
    repr_get_attr_obj rx738_cstack, rx738_cur, rx738_curclass, "$!cstack"
  rx738_fail1698:
    unless rx738_bstack, rx738_done1696
    pop $I19, rx738_bstack
    if_null rx738_cstack, rx738_cstack_done1701
    unless rx738_cstack, rx738_cstack_done1701
    dec $I19
    set $P11, rx738_cstack[$I19]
  rx738_cstack_done1701:
    pop rx738_rep, rx738_bstack
    pop rx738_pos, rx738_bstack
    pop $I19, rx738_bstack
    lt rx738_pos, -1, rx738_done1696
    lt rx738_pos, 0, rx738_fail1698
    eq $I19, 0, rx738_fail1698
    nqp_islist $I20, rx738_cstack
    unless $I20, rx738_jump1699
    elements $I18, rx738_bstack
    le $I18, 0, rx738_cut1700
    dec $I18
    set $I18, rx738_bstack[$I18]
  rx738_cut1700:
    assign rx738_cstack, $I18
  rx738_jump1699:
    jump $I19
  rx738_done1696:
    rx738_cur."!cursor_fail"()
    .return (rx738_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_def" :subid("cuid_109_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1004
    .param pmc _lex_param_0 
    .const 'Sub' $P5025 = 'cuid_404_1367388600.55005' 
    capture_lex $P5025 
    .const 'Sub' $P5025 = 'cuid_405_1367388600.55005' 
    capture_lex $P5025 
    .lex "$*PACKAGE", $P101 
    .lex "$OUTER", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_107 
    .local pmc fb_tmp_108 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx753_start
    .local string rx753_tgt
    .local int rx753_pos
    .local int rx753_off
    .local int rx753_eos
    .local int rx753_rep
    .local pmc rx753_cur
    .local pmc rx753_curclass
    .local pmc rx753_bstack
    .local pmc rx753_cstack
    rx753_start = self."!cursor_start_all"()
    set rx753_cur, rx753_start[0]
    set rx753_tgt, rx753_start[1]
    set rx753_pos, rx753_start[2]
    set rx753_curclass, rx753_start[3]
    set rx753_bstack, rx753_start[4]
    set $I19, rx753_start[5]
    store_lex unicode:"$\x{a2}", rx753_cur
    length rx753_eos, rx753_tgt
    eq $I19, 1, rx753_restart1723
    gt rx753_pos, rx753_eos, rx753_fail1724
    repr_get_attr_int $I11, self, rx753_curclass, "$!from"
    ne $I11, -1, rxscan754_done1730
    goto rxscan754_scan1729
  rxscan754_loop1728:
    inc rx753_pos
    gt rx753_pos, rx753_eos, rx753_fail1724
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!from", rx753_pos
  rxscan754_scan1729:
    nqp_rxmark rx753_bstack, rxscan754_loop1728, rx753_pos, 0
  rxscan754_done1730:
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."ws"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    store_lex unicode:"$\x{a2}", rx753_cur
    unless_null $P101, fallback1732
    nqp_get_sc_object $P5004, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5003, $P5004
    set fb_tmp_107, $P5003
    repr_defined $I5001, fb_tmp_107
    unless $I5001 goto if756_else1733 
    set $P5005, fb_tmp_107["$PACKAGE"]
    set $P5007, $P5005
    goto if756_end1734
  if756_else1733:
    null $P5006
    set $P5007, $P5006
  if756_end1734:
    unless_null $P5007, vivi_7571735
    nqp_get_sc_object $P5008, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5007, $P5008
  vivi_7571735:
    unless_null $P5007, vivi_7581736
    die "Contextual $*PACKAGE not found"
    box $P5009, "Contextual $*PACKAGE not found"
    set $P5007, $P5009
  vivi_7581736:
    set $P101, $P5007
  fallback1732:
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."ws"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    store_lex unicode:"$\x{a2}", rx753_cur
.annotate 'line', 1006
    find_dynamic_lex $P5010, "$*W"
    unless_null $P5010, fallback1738
    nqp_get_sc_object $P5012, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5011, $P5012
    set fb_tmp_108, $P5011
    repr_defined $I5002, fb_tmp_108
    unless $I5002 goto if760_else1739 
    set $P5013, fb_tmp_108["$W"]
    set $P5015, $P5013
    goto if760_end1740
  if760_else1739:
    null $P5014
    set $P5015, $P5014
  if760_end1740:
    unless_null $P5015, vivi_7611741
    nqp_get_sc_object $P5016, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5015, $P5016
  vivi_7611741:
    unless_null $P5015, vivi_7621742
    die "Contextual $*W not found"
    box $P5017, "Contextual $*W not found"
    set $P5015, $P5017
  vivi_7621742:
    set $P5010, $P5015
  fallback1738:
    $P5018 = $P5010."cur_lexpad"()
    set $P102, $P5018
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."ws"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."name"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    nqp_rxmark rx753_bstack, rxsubrule764_pass1744, -1, 0
  rxsubrule764_pass1744:
    rx753_cstack = rx753_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."ws"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."ws"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    nqp_rxmark rx753_bstack, rxquantr768_done1749, rx753_pos, 0
  rxquantr768_loop1748:
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."ws"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    store_lex unicode:"$\x{a2}", rx753_cur
    $P5019 = $P103."MATCH"()
    set $P104, $P5019
    .const 'Sub' $P5020 = 'cuid_404_1367388600.55005' 
    capture_lex $P5020
    $P5021 = $P5020()
    unless $P5021, rx753_fail1724
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."ws"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    add $I11, rx753_pos, 1
    gt $I11, rx753_eos, rx753_fail1724
    substr $S10, rx753_tgt, rx753_pos, 1
    ne $S10, ucs4:"[", rx753_fail1724
    add rx753_pos, 1
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."ws"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."role_params"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    nqp_rxmark rx753_bstack, rxsubrule775_pass1758, -1, 0
  rxsubrule775_pass1758:
    rx753_cstack = rx753_cur."!cursor_capture"($P11, "role_params")
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
  alt776_01760:
    nqp_rxmark rx753_bstack, alt776_11761, rx753_pos, 0
    add $I11, rx753_pos, 1
    gt $I11, rx753_eos, rx753_fail1724
    substr $S10, rx753_tgt, rx753_pos, 1
    ne $S10, ucs4:"]", rx753_fail1724
    add rx753_pos, 1
    goto alt776_end1759
  alt776_11761:
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."FAILGOAL"("']'")
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    goto rxsubrule777_pass1762
  rxsubrule777_back1763:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
  rxsubrule777_pass1762:
    rx753_cstack = rx753_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule777_back1763
    push rx753_bstack, $I11
    push rx753_bstack, 0
    push rx753_bstack, rx753_pos
    elements $I11, rx753_cstack
    push rx753_bstack, $I11
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
  alt776_end1759:
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."ws"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    nqp_rxpeek $I19, rx753_bstack, rxquantr768_done1749
    inc $I19
    inc $I19
    set rx753_rep, rx753_bstack[$I19]
    nqp_rxcommit rx753_bstack, rxquantr768_done1749
    inc rx753_rep
  rxquantr768_done1749:
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."ws"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    nqp_rxmark rx753_bstack, rxquantr780_done1767, rx753_pos, 0
  rxquantr780_loop1766:
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."ws"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    add $I11, rx753_pos, 2
    gt $I11, rx753_eos, rx753_fail1724
    substr $S10, rx753_tgt, rx753_pos, 2
    ne $S10, ucs4:"is", rx753_fail1724
    add rx753_pos, 2
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."ws"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    add $I11, rx753_pos, 5
    gt $I11, rx753_eos, rx753_fail1724
    substr $S10, rx753_tgt, rx753_pos, 5
    ne $S10, ucs4:"repr(", rx753_fail1724
    add rx753_pos, 5
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."ws"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."quote_EXPR"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    nqp_rxmark rx753_bstack, rxsubrule784_pass1771, -1, 0
  rxsubrule784_pass1771:
    rx753_cstack = rx753_cur."!cursor_capture"($P11, "repr")
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."ws"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    add $I11, rx753_pos, 1
    gt $I11, rx753_eos, rx753_fail1724
    substr $S10, rx753_tgt, rx753_pos, 1
    ne $S10, ucs4:")", rx753_fail1724
    add rx753_pos, 1
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."ws"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    nqp_rxpeek $I19, rx753_bstack, rxquantr780_done1767
    inc $I19
    inc $I19
    set rx753_rep, rx753_bstack[$I19]
    nqp_rxcommit rx753_bstack, rxquantr780_done1767
    inc rx753_rep
  rxquantr780_done1767:
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."ws"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    store_lex unicode:"$\x{a2}", rx753_cur
    $P5022 = $P103."MATCH"()
    set $P104, $P5022
    .const 'Sub' $P5023 = 'cuid_405_1367388600.55005' 
    capture_lex $P5023
    $P5024 = $P5023()
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."ws"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    nqp_rxmark rx753_bstack, rxquantr879_done1931, rx753_pos, 0
  rxquantr879_loop1930:
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."ws"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    nqp_rxmark rx753_bstack, rxcap881_fail1934, rx753_pos, 0
    add $I11, rx753_pos, 9
    gt $I11, rx753_eos, rx753_fail1724
    substr $S10, rx753_tgt, rx753_pos, 9
    ne $S10, ucs4:"is export", rx753_fail1724
    add rx753_pos, 9
    nqp_rxpeek $I19, rx753_bstack, rxcap881_fail1934
    inc $I19
    set $I11, rx753_bstack[$I19]
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx753_pos)
    rx753_cstack = rx753_cur."!cursor_capture"($P11, "export")
    goto rxcap881_done1933
  rxcap881_fail1934:
    goto rx753_fail1724
  rxcap881_done1933:
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."ws"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    nqp_rxpeek $I19, rx753_bstack, rxquantr879_done1931
    inc $I19
    inc $I19
    set rx753_rep, rx753_bstack[$I19]
    nqp_rxcommit rx753_bstack, rxquantr879_done1931
    inc rx753_rep
  rxquantr879_done1931:
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."ws"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    nqp_rxmark rx753_bstack, rxquantr884_done1938, rx753_pos, 0
  rxquantr884_loop1937:
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."ws"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    add $I11, rx753_pos, 2
    gt $I11, rx753_eos, rx753_fail1724
    substr $S10, rx753_tgt, rx753_pos, 2
    ne $S10, ucs4:"is", rx753_fail1724
    add rx753_pos, 2
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."ws"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."name"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    nqp_rxmark rx753_bstack, rxsubrule887_pass1941, -1, 0
  rxsubrule887_pass1941:
    rx753_cstack = rx753_cur."!cursor_capture"($P11, "parent")
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."ws"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    nqp_rxpeek $I19, rx753_bstack, rxquantr884_done1938
    inc $I19
    inc $I19
    set rx753_rep, rx753_bstack[$I19]
    nqp_rxcommit rx753_bstack, rxquantr884_done1938
    inc rx753_rep
  rxquantr884_done1938:
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."ws"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    nqp_rxmark rx753_bstack, rxquantr890_done1945, rx753_pos, 0
  rxquantr890_loop1944:
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."ws"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    add $I11, rx753_pos, 4
    gt $I11, rx753_eos, rx753_fail1724
    substr $S10, rx753_tgt, rx753_pos, 4
    ne $S10, ucs4:"does", rx753_fail1724
    add rx753_pos, 4
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."ws"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."name"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    nqp_rxmark rx753_bstack, rxsubrule893_pass1948, -1, 0
  rxsubrule893_pass1948:
    rx753_cstack = rx753_cur."!cursor_capture"($P11, "role")
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."ws"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    nqp_rxpeek $I19, rx753_bstack, rxquantr890_done1945
    inc $I19
    inc $I19
    set rx753_rep, rx753_bstack[$I19]
    nqp_rxcommit rx753_bstack, rxquantr890_done1945
    inc rx753_rep
    nqp_rxmark rx753_bstack, rxquantr890_done1945, rx753_pos, rx753_rep
    goto rxquantr890_loop1944
  rxquantr890_done1945:
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."ws"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
  alt896_01952:
    nqp_rxmark rx753_bstack, alt896_11967, rx753_pos, 0
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."ws"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    add $I11, rx753_pos, 1
    gt $I11, rx753_eos, rx753_fail1724
    substr $S10, rx753_tgt, rx753_pos, 1
    ne $S10, ucs4:";", rx753_fail1724
    add rx753_pos, 1
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."ws"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."statementlist"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    nqp_rxmark rx753_bstack, rxsubrule899_pass1955, -1, 0
  rxsubrule899_pass1955:
    rx753_cstack = rx753_cur."!cursor_capture"($P11, "statementlist")
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."ws"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
  alt901_01958:
    nqp_rxmark rx753_bstack, alt901_11962, rx753_pos, 0
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."ws"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    lt rx753_pos, rx753_eos, rx753_fail1724
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."ws"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    goto alt901_end1957
  alt901_11962:
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."ws"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."panic"("Confused")
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."ws"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
  alt901_end1957:
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."ws"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    goto alt896_end1951
  alt896_11967:
    nqp_rxmark rx753_bstack, alt896_21972, rx753_pos, 0
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."ws"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    ge rx753_pos, rx753_eos, rx753_fail1724
    substr $S11, rx753_tgt, rx753_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx753_fail1724
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."ws"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    nqp_rxmark rx753_bstack, rxsubrule911_pass1970, -1, 0
  rxsubrule911_pass1970:
    rx753_cstack = rx753_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."ws"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    goto alt896_end1951
  alt896_21972:
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."ws"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."panic"("Malformed package declaration")
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."ws"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
  alt896_end1951:
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."ws"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1724
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    rx753_cur."!cursor_pass"(rx753_pos, "package_def", 'backtrack'=>1)
    .return (rx753_cur)
  rx753_restart1723:
    repr_get_attr_obj rx753_cstack, rx753_cur, rx753_curclass, "$!cstack"
  rx753_fail1724:
    unless rx753_bstack, rx753_done1722
    pop $I19, rx753_bstack
    if_null rx753_cstack, rx753_cstack_done1727
    unless rx753_cstack, rx753_cstack_done1727
    dec $I19
    set $P11, rx753_cstack[$I19]
  rx753_cstack_done1727:
    pop rx753_rep, rx753_bstack
    pop rx753_pos, rx753_bstack
    pop $I19, rx753_bstack
    lt rx753_pos, -1, rx753_done1722
    lt rx753_pos, 0, rx753_fail1724
    eq $I19, 0, rx753_fail1724
    nqp_islist $I20, rx753_cstack
    unless $I20, rx753_jump1725
    elements $I18, rx753_bstack
    le $I18, 0, rx753_cut1726
    dec $I18
    set $I18, rx753_bstack[$I18]
  rx753_cut1726:
    assign rx753_cstack, $I18
  rx753_jump1725:
    jump $I19
  rx753_done1722:
    rx753_cur."!cursor_fail"()
    .return (rx753_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_404_1367388600.55005") :anon :lex :outer("cuid_109_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1010
    .local pmc fb_tmp_109 
    find_dynamic_lex $P5001, "$*PKGDECL"
    unless_null $P5001, fallback1751
    nqp_get_sc_object $P5003, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5002, $P5003
    set fb_tmp_109, $P5002
    repr_defined $I5002, fb_tmp_109
    unless $I5002 goto if770_else1752 
    set $P5004, fb_tmp_109["$PKGDECL"]
    set $P5006, $P5004
    goto if770_end1753
  if770_else1752:
    null $P5005
    set $P5006, $P5005
  if770_end1753:
    unless_null $P5006, vivi_7711754
    nqp_get_sc_object $P5007, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5006, $P5007
  vivi_7711754:
    unless_null $P5006, vivi_7721755
    die "Contextual $*PKGDECL not found"
    box $P5008, "Contextual $*PKGDECL not found"
    set $P5006, $P5008
  vivi_7721755:
    set $P5001, $P5006
  fallback1751:
    set $S5001, $P5001
    iseq $I5001, $S5001, "role"
    .return ($I5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_405_1367388600.55005") :anon :lex :outer("cuid_109_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1013
    .lex "%args", $P101 
    .local pmc fb_tmp_110 
    .local pmc fb_tmp_111 
    .local pmc fb_tmp_112 
    .local pmc fb_tmp_113 
    .local pmc fb_tmp_114 
    .local pmc fb_tmp_115 
    .local pmc fb_tmp_116 
    .local pmc fb_tmp_117 
    .local pmc fb_tmp_118 
    .local pmc fb_tmp_119 
    .local pmc pkg_viv_tmp_23 
    .local pmc fb_tmp_120 
    .local pmc fb_tmp_121 
    .local pmc fb_tmp_122 
    .local pmc fb_tmp_123 
    .local pmc fb_tmp_124 
    .local pmc fb_tmp_125 
    .local pmc fb_tmp_126 
    .local pmc fb_tmp_127 
    .local pmc fb_tmp_128 
    .local pmc fb_tmp_129 
    .local pmc fb_tmp_130 
    .local pmc fb_tmp_131 
    .local pmc fb_tmp_132 
    .local pmc fb_tmp_133 
    .local pmc fb_tmp_134 
    .local pmc fb_tmp_135 
    .local pmc fb_tmp_136 
    .local pmc fb_tmp_137 
    .local pmc fb_tmp_138 
    .local pmc fb_tmp_139 
    .local pmc fb_tmp_140 
    .local pmc fb_tmp_141 
    .local pmc fb_tmp_142 
    .local pmc fb_tmp_143 
    .local pmc fb_tmp_144 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $P5002, "$/"
    unless_null $P5002, fallback1777
    nqp_get_sc_object $P5003, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5002, $P5003
  fallback1777:
    set fb_tmp_110, $P5002
    repr_defined $I5001, fb_tmp_110
    unless $I5001 goto if788_else1775 
    set $P5004, fb_tmp_110["name"]
    set $P5006, $P5004
    goto if788_end1776
  if788_else1775:
    null $P5005
    set $P5006, $P5005
  if788_end1776:
    unless_null $P5006, vivi_7891778
    nqp_get_sc_object $P5007, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5006, $P5007
  vivi_7891778:
    set $S5001, $P5006
    box $P5008, $S5001
    set $P101["name"], $P5008
    find_lex $P5009, "$/"
    unless_null $P5009, fallback1783
    nqp_get_sc_object $P5010, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5009, $P5010
  fallback1783:
    set fb_tmp_111, $P5009
    repr_defined $I5002, fb_tmp_111
    unless $I5002 goto if791_else1781 
    set $P5011, fb_tmp_111["repr"]
    set $P5013, $P5011
    goto if791_end1782
  if791_else1781:
    null $P5012
    set $P5013, $P5012
  if791_end1782:
    unless_null $P5013, vivi_7921784
    nqp_get_sc_object $P5014, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5013, $P5014
  vivi_7921784:
    unless $P5013 goto if790_end1780 
.annotate 'line', 1018
    find_lex $P5015, "$/"
    unless_null $P5015, fallback1795
    nqp_get_sc_object $P5016, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5015, $P5016
  fallback1795:
    set fb_tmp_116, $P5015
    repr_defined $I5007, fb_tmp_116
    unless $I5007 goto if797_else1793 
    set $P5017, fb_tmp_116["repr"]
    set $P5019, $P5017
    goto if797_end1794
  if797_else1793:
    null $P5018
    set $P5019, $P5018
  if797_end1794:
    unless_null $P5019, vivi_7981796
    nqp_get_sc_object $P5020, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5019, $P5020
  vivi_7981796:
    set fb_tmp_115, $P5019
    repr_defined $I5006, fb_tmp_115
    unless $I5006 goto if796_else1791 
    set $P5021, fb_tmp_115[0]
    set $P5023, $P5021
    goto if796_end1792
  if796_else1791:
    null $P5022
    set $P5023, $P5022
  if796_end1792:
    unless_null $P5023, vivi_7991797
    nqp_get_sc_object $P5024, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5023, $P5024
  vivi_7991797:
    set fb_tmp_114, $P5023
    repr_defined $I5005, fb_tmp_114
    unless $I5005 goto if795_else1789 
    set $P5025, fb_tmp_114["quote_delimited"]
    set $P5027, $P5025
    goto if795_end1790
  if795_else1789:
    null $P5026
    set $P5027, $P5026
  if795_end1790:
    unless_null $P5027, vivi_8001798
    nqp_get_sc_object $P5028, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5027, $P5028
  vivi_8001798:
    set fb_tmp_113, $P5027
    repr_defined $I5004, fb_tmp_113
    unless $I5004 goto if794_else1787 
    set $P5029, fb_tmp_113["quote_atom"]
    set $P5031, $P5029
    goto if794_end1788
  if794_else1787:
    null $P5030
    set $P5031, $P5030
  if794_end1788:
    unless_null $P5031, vivi_8011799
    nqp_get_sc_object $P5032, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5031, $P5032
  vivi_8011799:
    set fb_tmp_112, $P5031
    repr_defined $I5003, fb_tmp_112
    unless $I5003 goto if793_else1785 
    set $P5033, fb_tmp_112[0]
    set $P5035, $P5033
    goto if793_end1786
  if793_else1785:
    null $P5034
    set $P5035, $P5034
  if793_end1786:
    unless_null $P5035, vivi_8021800
    nqp_get_sc_object $P5036, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5035, $P5036
  vivi_8021800:
    set $S5002, $P5035
    box $P5037, $S5002
    set $P101["repr"], $P5037
  if790_end1780:
.annotate 'line', 1021
    find_dynamic_lex $P5038, "$*W"
    unless_null $P5038, fallback1801
    nqp_get_sc_object $P5040, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5039, $P5040
    set fb_tmp_117, $P5039
    repr_defined $I5008, fb_tmp_117
    unless $I5008 goto if803_else1802 
    set $P5041, fb_tmp_117["$W"]
    set $P5043, $P5041
    goto if803_end1803
  if803_else1802:
    null $P5042
    set $P5043, $P5042
  if803_end1803:
    unless_null $P5043, vivi_8041804
    nqp_get_sc_object $P5044, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5043, $P5044
  vivi_8041804:
    unless_null $P5043, vivi_8051805
    die "Contextual $*W not found"
    box $P5045, "Contextual $*W not found"
    set $P5043, $P5045
  vivi_8051805:
    set $P5038, $P5043
  fallback1801:
    find_dynamic_lex $P5046, "%*HOW"
    unless_null $P5046, fallback1808
    nqp_get_sc_object $P5048, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5047, $P5048
    set pkg_viv_tmp_23, $P5047
    set fb_tmp_119, pkg_viv_tmp_23
    repr_defined $I5010, fb_tmp_119
    unless $I5010 goto if807_else1809 
    set $P5049, fb_tmp_119["%HOW"]
    set $P5051, $P5049
    goto if807_end1810
  if807_else1809:
    null $P5050
    set $P5051, $P5050
  if807_end1810:
    unless_null $P5051, vivi_8081811
    new $P5052, 'Hash'
    set pkg_viv_tmp_23["%HOW"], $P5052
    set $P5051, $P5052
  vivi_8081811:
    unless_null $P5051, vivi_8091812
    die "Contextual %*HOW not found"
    box $P5053, "Contextual %*HOW not found"
    set $P5051, $P5053
  vivi_8091812:
    set $P5046, $P5051
  fallback1808:
    set fb_tmp_118, $P5046
    repr_defined $I5009, fb_tmp_118
    unless $I5009 goto if806_else1806 
    find_dynamic_lex $P5055, "$*PKGDECL"
    unless_null $P5055, fallback1813
    nqp_get_sc_object $P5057, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5056, $P5057
    set fb_tmp_120, $P5056
    repr_defined $I5011, fb_tmp_120
    unless $I5011 goto if810_else1814 
    set $P5058, fb_tmp_120["$PKGDECL"]
    set $P5060, $P5058
    goto if810_end1815
  if810_else1814:
    null $P5059
    set $P5060, $P5059
  if810_end1815:
    unless_null $P5060, vivi_8111816
    nqp_get_sc_object $P5061, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5060, $P5061
  vivi_8111816:
    unless_null $P5060, vivi_8121817
    die "Contextual $*PKGDECL not found"
    box $P5062, "Contextual $*PKGDECL not found"
    set $P5060, $P5062
  vivi_8121817:
    set $P5055, $P5060
  fallback1813:
    set $S5003, $P5055
    set $P5054, fb_tmp_118[$S5003]
    set $P5064, $P5054
    goto if806_end1807
  if806_else1806:
    null $P5063
    set $P5064, $P5063
  if806_end1807:
    unless_null $P5064, vivi_8131818
    nqp_get_sc_object $P5065, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5064, $P5065
  vivi_8131818:
    $P5066 = $P5038."pkg_create_mo"($P5064, $P101 :flat :named)
    store_dynamic_lex "$*PACKAGE", $P5066
    find_dynamic_lex $P5067, "$*SCOPE"
    unless_null $P5067, fallback1823
    nqp_get_sc_object $P5069, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5068, $P5069
    set fb_tmp_121, $P5068
    repr_defined $I5013, fb_tmp_121
    unless $I5013 goto if816_else1824 
    set $P5070, fb_tmp_121["$SCOPE"]
    set $P5072, $P5070
    goto if816_end1825
  if816_else1824:
    null $P5071
    set $P5072, $P5071
  if816_end1825:
    unless_null $P5072, vivi_8171826
    nqp_get_sc_object $P5073, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5072, $P5073
  vivi_8171826:
    unless_null $P5072, vivi_8181827
    die "Contextual $*SCOPE not found"
    box $P5074, "Contextual $*SCOPE not found"
    set $P5072, $P5074
  vivi_8181827:
    set $P5067, $P5072
  fallback1823:
    set $S5004, $P5067
    iseq $I5012, $S5004, "our"
    set $I5016, $I5012
    if $I5012 goto unless815_end1822 
    find_dynamic_lex $P5075, "$*SCOPE"
    unless_null $P5075, fallback1828
    nqp_get_sc_object $P5077, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5076, $P5077
    set fb_tmp_122, $P5076
    repr_defined $I5015, fb_tmp_122
    unless $I5015 goto if819_else1829 
    set $P5078, fb_tmp_122["$SCOPE"]
    set $P5080, $P5078
    goto if819_end1830
  if819_else1829:
    null $P5079
    set $P5080, $P5079
  if819_end1830:
    unless_null $P5080, vivi_8201831
    nqp_get_sc_object $P5081, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5080, $P5081
  vivi_8201831:
    unless_null $P5080, vivi_8211832
    die "Contextual $*SCOPE not found"
    box $P5082, "Contextual $*SCOPE not found"
    set $P5080, $P5082
  vivi_8211832:
    set $P5075, $P5080
  fallback1828:
    set $S5005, $P5075
    iseq $I5014, $S5005, ""
    set $I5016, $I5014
  unless815_end1822:
    unless $I5016 goto if814_else1819 
.annotate 'line', 1024
.annotate 'line', 1025
    find_dynamic_lex $P5083, "$*W"
    unless_null $P5083, fallback1833
    nqp_get_sc_object $P5085, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5084, $P5085
    set fb_tmp_123, $P5084
    repr_defined $I5017, fb_tmp_123
    unless $I5017 goto if822_else1834 
    set $P5086, fb_tmp_123["$W"]
    set $P5088, $P5086
    goto if822_end1835
  if822_else1834:
    null $P5087
    set $P5088, $P5087
  if822_end1835:
    unless_null $P5088, vivi_8231836
    nqp_get_sc_object $P5089, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5088, $P5089
  vivi_8231836:
    unless_null $P5088, vivi_8241837
    die "Contextual $*W not found"
    box $P5090, "Contextual $*W not found"
    set $P5088, $P5090
  vivi_8241837:
    set $P5083, $P5088
  fallback1833:
    find_dynamic_lex $P5091, "$*OUTERPACKAGE"
    unless_null $P5091, fallback1838
    nqp_get_sc_object $P5093, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5092, $P5093
    set fb_tmp_124, $P5092
    repr_defined $I5018, fb_tmp_124
    unless $I5018 goto if825_else1839 
    set $P5094, fb_tmp_124["$OUTERPACKAGE"]
    set $P5096, $P5094
    goto if825_end1840
  if825_else1839:
    null $P5095
    set $P5096, $P5095
  if825_end1840:
    unless_null $P5096, vivi_8261841
    nqp_get_sc_object $P5097, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5096, $P5097
  vivi_8261841:
    unless_null $P5096, vivi_8271842
    die "Contextual $*OUTERPACKAGE not found"
    box $P5098, "Contextual $*OUTERPACKAGE not found"
    set $P5096, $P5098
  vivi_8271842:
    set $P5091, $P5096
  fallback1838:
    find_lex $P5099, "$/"
    unless_null $P5099, fallback1847
    nqp_get_sc_object $P5100, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5099, $P5100
  fallback1847:
    set fb_tmp_126, $P5099
    repr_defined $I5020, fb_tmp_126
    unless $I5020 goto if829_else1845 
    set $P5101, fb_tmp_126["name"]
    set $P5103, $P5101
    goto if829_end1846
  if829_else1845:
    null $P5102
    set $P5103, $P5102
  if829_end1846:
    unless_null $P5103, vivi_8301848
    nqp_get_sc_object $P5104, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5103, $P5104
  vivi_8301848:
    set fb_tmp_125, $P5103
    repr_defined $I5019, fb_tmp_125
    unless $I5019 goto if828_else1843 
    set $P5105, fb_tmp_125["identifier"]
    set $P5107, $P5105
    goto if828_end1844
  if828_else1843:
    null $P5106
    set $P5107, $P5106
  if828_end1844:
    unless_null $P5107, vivi_8311849
    nqp_get_sc_object $P5108, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5107, $P5108
  vivi_8311849:
    find_dynamic_lex $P5109, "$*PACKAGE"
    unless_null $P5109, fallback1850
    nqp_get_sc_object $P5111, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5110, $P5111
    set fb_tmp_127, $P5110
    repr_defined $I5021, fb_tmp_127
    unless $I5021 goto if832_else1851 
    set $P5112, fb_tmp_127["$PACKAGE"]
    set $P5114, $P5112
    goto if832_end1852
  if832_else1851:
    null $P5113
    set $P5114, $P5113
  if832_end1852:
    unless_null $P5114, vivi_8331853
    nqp_get_sc_object $P5115, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5114, $P5115
  vivi_8331853:
    unless_null $P5114, vivi_8341854
    die "Contextual $*PACKAGE not found"
    box $P5116, "Contextual $*PACKAGE not found"
    set $P5114, $P5116
  vivi_8341854:
    set $P5109, $P5114
  fallback1850:
    $P5083."install_package_symbol"($P5091, $P5107, $P5109)
    find_lex $P5117, "$/"
    unless_null $P5117, fallback1861
    nqp_get_sc_object $P5118, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5117, $P5118
  fallback1861:
    set fb_tmp_129, $P5117
    repr_defined $I5024, fb_tmp_129
    unless $I5024 goto if837_else1859 
    set $P5119, fb_tmp_129["name"]
    set $P5121, $P5119
    goto if837_end1860
  if837_else1859:
    null $P5120
    set $P5121, $P5120
  if837_end1860:
    unless_null $P5121, vivi_8381862
    nqp_get_sc_object $P5122, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5121, $P5122
  vivi_8381862:
    set fb_tmp_128, $P5121
    repr_defined $I5023, fb_tmp_128
    unless $I5023 goto if836_else1857 
    set $P5123, fb_tmp_128["identifier"]
    set $P5125, $P5123
    goto if836_end1858
  if836_else1857:
    null $P5124
    set $P5125, $P5124
  if836_end1858:
    unless_null $P5125, vivi_8391863
    nqp_get_sc_object $P5126, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5125, $P5126
  vivi_8391863:
    set $N5001, $P5125
    set $N5002, 1
    iseq $I5022, $N5001, $N5002
    box $P5160, $I5022
    set $P5159, $P5160
    unless $I5022 goto if835_end1856 
.annotate 'line', 1026
.annotate 'line', 1027
    find_dynamic_lex $P5127, "$*W"
    unless_null $P5127, fallback1864
    nqp_get_sc_object $P5129, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5128, $P5129
    set fb_tmp_130, $P5128
    repr_defined $I5025, fb_tmp_130
    unless $I5025 goto if840_else1865 
    set $P5130, fb_tmp_130["$W"]
    set $P5132, $P5130
    goto if840_end1866
  if840_else1865:
    null $P5131
    set $P5132, $P5131
  if840_end1866:
    unless_null $P5132, vivi_8411867
    nqp_get_sc_object $P5133, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5132, $P5133
  vivi_8411867:
    unless_null $P5132, vivi_8421868
    die "Contextual $*W not found"
    box $P5134, "Contextual $*W not found"
    set $P5132, $P5134
  vivi_8421868:
    set $P5127, $P5132
  fallback1864:
    find_lex $P5135, "$OUTER"
    find_lex $P5136, "$/"
    unless_null $P5136, fallback1875
    nqp_get_sc_object $P5137, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5136, $P5137
  fallback1875:
    set fb_tmp_133, $P5136
    repr_defined $I5028, fb_tmp_133
    unless $I5028 goto if845_else1873 
    set $P5138, fb_tmp_133["name"]
    set $P5140, $P5138
    goto if845_end1874
  if845_else1873:
    null $P5139
    set $P5140, $P5139
  if845_end1874:
    unless_null $P5140, vivi_8461876
    nqp_get_sc_object $P5141, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5140, $P5141
  vivi_8461876:
    set fb_tmp_132, $P5140
    repr_defined $I5027, fb_tmp_132
    unless $I5027 goto if844_else1871 
    set $P5142, fb_tmp_132["identifier"]
    set $P5144, $P5142
    goto if844_end1872
  if844_else1871:
    null $P5143
    set $P5144, $P5143
  if844_end1872:
    unless_null $P5144, vivi_8471877
    nqp_get_sc_object $P5145, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5144, $P5145
  vivi_8471877:
    set fb_tmp_131, $P5144
    repr_defined $I5026, fb_tmp_131
    unless $I5026 goto if843_else1869 
    set $P5146, fb_tmp_131[0]
    set $P5148, $P5146
    goto if843_end1870
  if843_else1869:
    null $P5147
    set $P5148, $P5147
  if843_end1870:
    unless_null $P5148, vivi_8481878
    nqp_get_sc_object $P5149, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5148, $P5149
  vivi_8481878:
    find_dynamic_lex $P5150, "$*PACKAGE"
    unless_null $P5150, fallback1879
    nqp_get_sc_object $P5152, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5151, $P5152
    set fb_tmp_134, $P5151
    repr_defined $I5029, fb_tmp_134
    unless $I5029 goto if849_else1880 
    set $P5153, fb_tmp_134["$PACKAGE"]
    set $P5155, $P5153
    goto if849_end1881
  if849_else1880:
    null $P5154
    set $P5155, $P5154
  if849_end1881:
    unless_null $P5155, vivi_8501882
    nqp_get_sc_object $P5156, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5155, $P5156
  vivi_8501882:
    unless_null $P5155, vivi_8511883
    die "Contextual $*PACKAGE not found"
    box $P5157, "Contextual $*PACKAGE not found"
    set $P5155, $P5157
  vivi_8511883:
    set $P5150, $P5155
  fallback1879:
    $P5158 = $P5127."install_lexical_symbol"($P5135, $P5148, $P5150)
    set $P5159, $P5158
  if835_end1856:
    set $P5231, $P5159
    goto if814_end1820
  if814_else1819:
    find_dynamic_lex $P5161, "$*SCOPE"
    unless_null $P5161, fallback1886
    nqp_get_sc_object $P5163, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5162, $P5163
    set fb_tmp_135, $P5162
    repr_defined $I5031, fb_tmp_135
    unless $I5031 goto if853_else1887 
    set $P5164, fb_tmp_135["$SCOPE"]
    set $P5166, $P5164
    goto if853_end1888
  if853_else1887:
    null $P5165
    set $P5166, $P5165
  if853_end1888:
    unless_null $P5166, vivi_8541889
    nqp_get_sc_object $P5167, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5166, $P5167
  vivi_8541889:
    unless_null $P5166, vivi_8551890
    die "Contextual $*SCOPE not found"
    box $P5168, "Contextual $*SCOPE not found"
    set $P5166, $P5168
  vivi_8551890:
    set $P5161, $P5166
  fallback1886:
    set $S5006, $P5161
    iseq $I5030, $S5006, "my"
    unless $I5030 goto if852_else1884 
.annotate 'line', 1030
    find_lex $P5169, "$/"
    unless_null $P5169, fallback1897
    nqp_get_sc_object $P5170, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5169, $P5170
  fallback1897:
    set fb_tmp_137, $P5169
    repr_defined $I5034, fb_tmp_137
    unless $I5034 goto if858_else1895 
    set $P5171, fb_tmp_137["name"]
    set $P5173, $P5171
    goto if858_end1896
  if858_else1895:
    null $P5172
    set $P5173, $P5172
  if858_end1896:
    unless_null $P5173, vivi_8591898
    nqp_get_sc_object $P5174, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5173, $P5174
  vivi_8591898:
    set fb_tmp_136, $P5173
    repr_defined $I5033, fb_tmp_136
    unless $I5033 goto if857_else1893 
    set $P5175, fb_tmp_136["identifier"]
    set $P5177, $P5175
    goto if857_end1894
  if857_else1893:
    null $P5176
    set $P5177, $P5176
  if857_end1894:
    unless_null $P5177, vivi_8601899
    nqp_get_sc_object $P5178, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5177, $P5178
  vivi_8601899:
    set $N5003, $P5177
    set $N5004, 1
    isne $I5032, $N5003, $N5004
    unless $I5032 goto if856_end1892 
.annotate 'line', 1031
.annotate 'line', 1032
    find_lex $P5179, "$/"
    unless_null $P5179, fallback1902
    nqp_get_sc_object $P5180, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5179, $P5180
  fallback1902:
    set fb_tmp_138, $P5179
    repr_defined $I5035, fb_tmp_138
    unless $I5035 goto if861_else1900 
    set $P5181, fb_tmp_138["name"]
    set $P5183, $P5181
    goto if861_end1901
  if861_else1900:
    null $P5182
    set $P5183, $P5182
  if861_end1901:
    unless_null $P5183, vivi_8621903
    nqp_get_sc_object $P5184, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5183, $P5184
  vivi_8621903:
    $P5185 = $P5183."CURSOR"()
    $P5186 = $P5185."panic"("A my scoped package cannot have a multi-part name yet")
  if856_end1892:
.annotate 'line', 1034
    find_dynamic_lex $P5187, "$*W"
    unless_null $P5187, fallback1904
    nqp_get_sc_object $P5189, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5188, $P5189
    set fb_tmp_139, $P5188
    repr_defined $I5036, fb_tmp_139
    unless $I5036 goto if863_else1905 
    set $P5190, fb_tmp_139["$W"]
    set $P5192, $P5190
    goto if863_end1906
  if863_else1905:
    null $P5191
    set $P5192, $P5191
  if863_end1906:
    unless_null $P5192, vivi_8641907
    nqp_get_sc_object $P5193, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5192, $P5193
  vivi_8641907:
    unless_null $P5192, vivi_8651908
    die "Contextual $*W not found"
    box $P5194, "Contextual $*W not found"
    set $P5192, $P5194
  vivi_8651908:
    set $P5187, $P5192
  fallback1904:
    find_lex $P5195, "$OUTER"
    find_lex $P5196, "$/"
    unless_null $P5196, fallback1915
    nqp_get_sc_object $P5197, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5196, $P5197
  fallback1915:
    set fb_tmp_142, $P5196
    repr_defined $I5039, fb_tmp_142
    unless $I5039 goto if868_else1913 
    set $P5198, fb_tmp_142["name"]
    set $P5200, $P5198
    goto if868_end1914
  if868_else1913:
    null $P5199
    set $P5200, $P5199
  if868_end1914:
    unless_null $P5200, vivi_8691916
    nqp_get_sc_object $P5201, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5200, $P5201
  vivi_8691916:
    set fb_tmp_141, $P5200
    repr_defined $I5038, fb_tmp_141
    unless $I5038 goto if867_else1911 
    set $P5202, fb_tmp_141["identifier"]
    set $P5204, $P5202
    goto if867_end1912
  if867_else1911:
    null $P5203
    set $P5204, $P5203
  if867_end1912:
    unless_null $P5204, vivi_8701917
    nqp_get_sc_object $P5205, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5204, $P5205
  vivi_8701917:
    set fb_tmp_140, $P5204
    repr_defined $I5037, fb_tmp_140
    unless $I5037 goto if866_else1909 
    set $P5206, fb_tmp_140[0]
    set $P5208, $P5206
    goto if866_end1910
  if866_else1909:
    null $P5207
    set $P5208, $P5207
  if866_end1910:
    unless_null $P5208, vivi_8711918
    nqp_get_sc_object $P5209, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5208, $P5209
  vivi_8711918:
    find_dynamic_lex $P5210, "$*PACKAGE"
    unless_null $P5210, fallback1919
    nqp_get_sc_object $P5212, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5211, $P5212
    set fb_tmp_143, $P5211
    repr_defined $I5040, fb_tmp_143
    unless $I5040 goto if872_else1920 
    set $P5213, fb_tmp_143["$PACKAGE"]
    set $P5215, $P5213
    goto if872_end1921
  if872_else1920:
    null $P5214
    set $P5215, $P5214
  if872_end1921:
    unless_null $P5215, vivi_8731922
    nqp_get_sc_object $P5216, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5215, $P5216
  vivi_8731922:
    unless_null $P5215, vivi_8741923
    die "Contextual $*PACKAGE not found"
    box $P5217, "Contextual $*PACKAGE not found"
    set $P5215, $P5217
  vivi_8741923:
    set $P5210, $P5215
  fallback1919:
    $P5218 = $P5187."install_lexical_symbol"($P5195, $P5208, $P5210)
    set $P5230, $P5218
    goto if852_end1885
  if852_else1884:
.annotate 'line', 1036
.annotate 'line', 1037
    find_lex $P5219, "$/"
    $P5220 = $P5219."CURSOR"()
    find_dynamic_lex $P5221, "$*SCOPE"
    unless_null $P5221, fallback1924
    nqp_get_sc_object $P5223, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5222, $P5223
    set fb_tmp_144, $P5222
    repr_defined $I5041, fb_tmp_144
    unless $I5041 goto if875_else1925 
    set $P5224, fb_tmp_144["$SCOPE"]
    set $P5226, $P5224
    goto if875_end1926
  if875_else1925:
    null $P5225
    set $P5226, $P5225
  if875_end1926:
    unless_null $P5226, vivi_8761927
    nqp_get_sc_object $P5227, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5226, $P5227
  vivi_8761927:
    unless_null $P5226, vivi_8771928
    die "Contextual $*SCOPE not found"
    box $P5228, "Contextual $*SCOPE not found"
    set $P5226, $P5228
  vivi_8771928:
    set $P5221, $P5226
  fallback1924:
    set $S5008, $P5221
    concat $S5007, $S5008, " scoped packages are not supported"
    $P5229 = $P5220."panic"($S5007)
    set $P5230, $P5229
  if852_end1885:
    set $P5231, $P5230
  if814_end1820:
    .return ($P5231) 
.end
.HLL "nqp"
.namespace []
.sub "role_params" :subid("cuid_110_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1051
    .param pmc _lex_param_0 
    .lex "$*SCOPE", $P101 
    .lex "$*IN_DECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx917_start
    .local string rx917_tgt
    .local int rx917_pos
    .local int rx917_off
    .local int rx917_eos
    .local int rx917_rep
    .local pmc rx917_cur
    .local pmc rx917_curclass
    .local pmc rx917_bstack
    .local pmc rx917_cstack
    rx917_start = self."!cursor_start_all"()
    set rx917_cur, rx917_start[0]
    set rx917_tgt, rx917_start[1]
    set rx917_pos, rx917_start[2]
    set rx917_curclass, rx917_start[3]
    set rx917_bstack, rx917_start[4]
    set $I19, rx917_start[5]
    store_lex unicode:"$\x{a2}", rx917_cur
    length rx917_eos, rx917_tgt
    eq $I19, 1, rx917_restart1979
    gt rx917_pos, rx917_eos, rx917_fail1980
    repr_get_attr_int $I11, self, rx917_curclass, "$!from"
    ne $I11, -1, rxscan918_done1986
    goto rxscan918_scan1985
  rxscan918_loop1984:
    inc rx917_pos
    gt rx917_pos, rx917_eos, rx917_fail1980
    repr_bind_attr_int rx917_cur, rx917_curclass, "$!from", rx917_pos
  rxscan918_scan1985:
    nqp_rxmark rx917_bstack, rxscan918_loop1984, rx917_pos, 0
  rxscan918_done1986:
    repr_bind_attr_int rx917_cur, rx917_curclass, "$!pos", rx917_pos
    $P11 = rx917_cur."ws"()
    repr_get_attr_int $I11, $P11, rx917_curclass, "$!pos"
    lt $I11, 0, rx917_fail1980
    repr_get_attr_int rx917_pos, $P11, rx917_curclass, "$!pos"
    repr_bind_attr_int rx917_cur, rx917_curclass, "$!pos", rx917_pos
    store_lex unicode:"$\x{a2}", rx917_cur
    box $P5003, "my"
    set $P101, $P5003
    repr_bind_attr_int rx917_cur, rx917_curclass, "$!pos", rx917_pos
    $P11 = rx917_cur."ws"()
    repr_get_attr_int $I11, $P11, rx917_curclass, "$!pos"
    lt $I11, 0, rx917_fail1980
    repr_get_attr_int rx917_pos, $P11, rx917_curclass, "$!pos"
    repr_bind_attr_int rx917_cur, rx917_curclass, "$!pos", rx917_pos
    store_lex unicode:"$\x{a2}", rx917_cur
    box $P5004, "variable"
    set $P102, $P5004
    repr_bind_attr_int rx917_cur, rx917_curclass, "$!pos", rx917_pos
    $P11 = rx917_cur."ws"()
    repr_get_attr_int $I11, $P11, rx917_curclass, "$!pos"
    lt $I11, 0, rx917_fail1980
    repr_get_attr_int rx917_pos, $P11, rx917_curclass, "$!pos"
    nqp_rxmark rx917_bstack, rxquantr922_done1991, -1, 0
  rxquantr922_loop1990:
    repr_bind_attr_int rx917_cur, rx917_curclass, "$!pos", rx917_pos
    $P11 = rx917_cur."ws"()
    repr_get_attr_int $I11, $P11, rx917_curclass, "$!pos"
    lt $I11, 0, rx917_fail1980
    repr_get_attr_int rx917_pos, $P11, rx917_curclass, "$!pos"
    repr_bind_attr_int rx917_cur, rx917_curclass, "$!pos", rx917_pos
    $P11 = rx917_cur."variable"()
    repr_get_attr_int $I11, $P11, rx917_curclass, "$!pos"
    lt $I11, 0, rx917_fail1980
    nqp_rxmark rx917_bstack, rxsubrule924_pass1993, -1, 0
  rxsubrule924_pass1993:
    rx917_cstack = rx917_cur."!cursor_capture"($P11, "variable")
    repr_get_attr_int rx917_pos, $P11, rx917_curclass, "$!pos"
    repr_bind_attr_int rx917_cur, rx917_curclass, "$!pos", rx917_pos
    $P11 = rx917_cur."ws"()
    repr_get_attr_int $I11, $P11, rx917_curclass, "$!pos"
    lt $I11, 0, rx917_fail1980
    repr_get_attr_int rx917_pos, $P11, rx917_curclass, "$!pos"
    nqp_rxpeek $I19, rx917_bstack, rxquantr922_done1991
    inc $I19
    inc $I19
    set rx917_rep, rx917_bstack[$I19]
    nqp_rxcommit rx917_bstack, rxquantr922_done1991
    inc rx917_rep
    nqp_rxmark rx917_bstack, rxquantr922_done1991, rx917_pos, rx917_rep
    repr_bind_attr_int rx917_cur, rx917_curclass, "$!pos", rx917_pos
    $P11 = rx917_cur."ws"()
    repr_get_attr_int $I11, $P11, rx917_curclass, "$!pos"
    lt $I11, 0, rx917_fail1980
    repr_get_attr_int rx917_pos, $P11, rx917_curclass, "$!pos"
    add $I11, rx917_pos, 1
    gt $I11, rx917_eos, rx917_fail1980
    substr $S10, rx917_tgt, rx917_pos, 1
    ne $S10, ucs4:",", rx917_fail1980
    add rx917_pos, 1
    repr_bind_attr_int rx917_cur, rx917_curclass, "$!pos", rx917_pos
    $P11 = rx917_cur."ws"()
    repr_get_attr_int $I11, $P11, rx917_curclass, "$!pos"
    lt $I11, 0, rx917_fail1980
    repr_get_attr_int rx917_pos, $P11, rx917_curclass, "$!pos"
    goto rxquantr922_loop1990
  rxquantr922_done1991:
    repr_bind_attr_int rx917_cur, rx917_curclass, "$!pos", rx917_pos
    $P11 = rx917_cur."ws"()
    repr_get_attr_int $I11, $P11, rx917_curclass, "$!pos"
    lt $I11, 0, rx917_fail1980
    repr_get_attr_int rx917_pos, $P11, rx917_curclass, "$!pos"
    rx917_cur."!cursor_pass"(rx917_pos, "role_params", 'backtrack'=>1)
    .return (rx917_cur)
  rx917_restart1979:
    repr_get_attr_obj rx917_cstack, rx917_cur, rx917_curclass, "$!cstack"
  rx917_fail1980:
    unless rx917_bstack, rx917_done1978
    pop $I19, rx917_bstack
    if_null rx917_cstack, rx917_cstack_done1983
    unless rx917_cstack, rx917_cstack_done1983
    dec $I19
    set $P11, rx917_cstack[$I19]
  rx917_cstack_done1983:
    pop rx917_rep, rx917_bstack
    pop rx917_pos, rx917_bstack
    pop $I19, rx917_bstack
    lt rx917_pos, -1, rx917_done1978
    lt rx917_pos, 0, rx917_fail1980
    eq $I19, 0, rx917_fail1980
    nqp_islist $I20, rx917_cstack
    unless $I20, rx917_jump1981
    elements $I18, rx917_bstack
    le $I18, 0, rx917_cut1982
    dec $I18
    set $I18, rx917_bstack[$I18]
  rx917_cut1982:
    assign rx917_cstack, $I18
  rx917_jump1981:
    jump $I19
  rx917_done1978:
    rx917_cur."!cursor_fail"()
    .return (rx917_cur) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator" :subid("cuid_111_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1057
    .param pmc self 
    $P5001 = self."!protoregex"("scope_declarator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<my>" :subid("cuid_112_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1058
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx929_start
    .local string rx929_tgt
    .local int rx929_pos
    .local int rx929_off
    .local int rx929_eos
    .local int rx929_rep
    .local pmc rx929_cur
    .local pmc rx929_curclass
    .local pmc rx929_bstack
    .local pmc rx929_cstack
    rx929_start = self."!cursor_start_all"()
    set rx929_cur, rx929_start[0]
    set rx929_tgt, rx929_start[1]
    set rx929_pos, rx929_start[2]
    set rx929_curclass, rx929_start[3]
    set rx929_bstack, rx929_start[4]
    set $I19, rx929_start[5]
    store_lex unicode:"$\x{a2}", rx929_cur
    length rx929_eos, rx929_tgt
    eq $I19, 1, rx929_restart2000
    gt rx929_pos, rx929_eos, rx929_fail2001
    repr_get_attr_int $I11, self, rx929_curclass, "$!from"
    ne $I11, -1, rxscan930_done2007
    goto rxscan930_scan2006
  rxscan930_loop2005:
    inc rx929_pos
    gt rx929_pos, rx929_eos, rx929_fail2001
    repr_bind_attr_int rx929_cur, rx929_curclass, "$!from", rx929_pos
  rxscan930_scan2006:
    nqp_rxmark rx929_bstack, rxscan930_loop2005, rx929_pos, 0
  rxscan930_done2007:
    nqp_rxmark rx929_bstack, rxcap931_fail2009, rx929_pos, 0
    add $I11, rx929_pos, 2
    gt $I11, rx929_eos, rx929_fail2001
    substr $S10, rx929_tgt, rx929_pos, 2
    ne $S10, ucs4:"my", rx929_fail2001
    add rx929_pos, 2
    nqp_rxpeek $I19, rx929_bstack, rxcap931_fail2009
    inc $I19
    set $I11, rx929_bstack[$I19]
    repr_bind_attr_int rx929_cur, rx929_curclass, "$!pos", rx929_pos
    $P11 = rx929_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx929_pos)
    rx929_cstack = rx929_cur."!cursor_capture"($P11, "sym")
    goto rxcap931_done2008
  rxcap931_fail2009:
    goto rx929_fail2001
  rxcap931_done2008:
    repr_bind_attr_int rx929_cur, rx929_curclass, "$!pos", rx929_pos
    $P11 = rx929_cur."scoped"("my")
    repr_get_attr_int $I11, $P11, rx929_curclass, "$!pos"
    lt $I11, 0, rx929_fail2001
    nqp_rxmark rx929_bstack, rxsubrule932_pass2010, -1, 0
  rxsubrule932_pass2010:
    rx929_cstack = rx929_cur."!cursor_capture"($P11, "scoped")
    repr_get_attr_int rx929_pos, $P11, rx929_curclass, "$!pos"
    rx929_cur."!cursor_pass"(rx929_pos, "scope_declarator:sym<my>", 'backtrack'=>1)
    .return (rx929_cur)
  rx929_restart2000:
    repr_get_attr_obj rx929_cstack, rx929_cur, rx929_curclass, "$!cstack"
  rx929_fail2001:
    unless rx929_bstack, rx929_done1999
    pop $I19, rx929_bstack
    if_null rx929_cstack, rx929_cstack_done2004
    unless rx929_cstack, rx929_cstack_done2004
    dec $I19
    set $P11, rx929_cstack[$I19]
  rx929_cstack_done2004:
    pop rx929_rep, rx929_bstack
    pop rx929_pos, rx929_bstack
    pop $I19, rx929_bstack
    lt rx929_pos, -1, rx929_done1999
    lt rx929_pos, 0, rx929_fail2001
    eq $I19, 0, rx929_fail2001
    nqp_islist $I20, rx929_cstack
    unless $I20, rx929_jump2002
    elements $I18, rx929_bstack
    le $I18, 0, rx929_cut2003
    dec $I18
    set $I18, rx929_bstack[$I18]
  rx929_cut2003:
    assign rx929_cstack, $I18
  rx929_jump2002:
    jump $I19
  rx929_done1999:
    rx929_cur."!cursor_fail"()
    .return (rx929_cur) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<our>" :subid("cuid_113_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1059
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx933_start
    .local string rx933_tgt
    .local int rx933_pos
    .local int rx933_off
    .local int rx933_eos
    .local int rx933_rep
    .local pmc rx933_cur
    .local pmc rx933_curclass
    .local pmc rx933_bstack
    .local pmc rx933_cstack
    rx933_start = self."!cursor_start_all"()
    set rx933_cur, rx933_start[0]
    set rx933_tgt, rx933_start[1]
    set rx933_pos, rx933_start[2]
    set rx933_curclass, rx933_start[3]
    set rx933_bstack, rx933_start[4]
    set $I19, rx933_start[5]
    store_lex unicode:"$\x{a2}", rx933_cur
    length rx933_eos, rx933_tgt
    eq $I19, 1, rx933_restart2013
    gt rx933_pos, rx933_eos, rx933_fail2014
    repr_get_attr_int $I11, self, rx933_curclass, "$!from"
    ne $I11, -1, rxscan934_done2020
    goto rxscan934_scan2019
  rxscan934_loop2018:
    inc rx933_pos
    gt rx933_pos, rx933_eos, rx933_fail2014
    repr_bind_attr_int rx933_cur, rx933_curclass, "$!from", rx933_pos
  rxscan934_scan2019:
    nqp_rxmark rx933_bstack, rxscan934_loop2018, rx933_pos, 0
  rxscan934_done2020:
    nqp_rxmark rx933_bstack, rxcap935_fail2022, rx933_pos, 0
    add $I11, rx933_pos, 3
    gt $I11, rx933_eos, rx933_fail2014
    substr $S10, rx933_tgt, rx933_pos, 3
    ne $S10, ucs4:"our", rx933_fail2014
    add rx933_pos, 3
    nqp_rxpeek $I19, rx933_bstack, rxcap935_fail2022
    inc $I19
    set $I11, rx933_bstack[$I19]
    repr_bind_attr_int rx933_cur, rx933_curclass, "$!pos", rx933_pos
    $P11 = rx933_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx933_pos)
    rx933_cstack = rx933_cur."!cursor_capture"($P11, "sym")
    goto rxcap935_done2021
  rxcap935_fail2022:
    goto rx933_fail2014
  rxcap935_done2021:
    repr_bind_attr_int rx933_cur, rx933_curclass, "$!pos", rx933_pos
    $P11 = rx933_cur."scoped"("our")
    repr_get_attr_int $I11, $P11, rx933_curclass, "$!pos"
    lt $I11, 0, rx933_fail2014
    nqp_rxmark rx933_bstack, rxsubrule936_pass2023, -1, 0
  rxsubrule936_pass2023:
    rx933_cstack = rx933_cur."!cursor_capture"($P11, "scoped")
    repr_get_attr_int rx933_pos, $P11, rx933_curclass, "$!pos"
    rx933_cur."!cursor_pass"(rx933_pos, "scope_declarator:sym<our>", 'backtrack'=>1)
    .return (rx933_cur)
  rx933_restart2013:
    repr_get_attr_obj rx933_cstack, rx933_cur, rx933_curclass, "$!cstack"
  rx933_fail2014:
    unless rx933_bstack, rx933_done2012
    pop $I19, rx933_bstack
    if_null rx933_cstack, rx933_cstack_done2017
    unless rx933_cstack, rx933_cstack_done2017
    dec $I19
    set $P11, rx933_cstack[$I19]
  rx933_cstack_done2017:
    pop rx933_rep, rx933_bstack
    pop rx933_pos, rx933_bstack
    pop $I19, rx933_bstack
    lt rx933_pos, -1, rx933_done2012
    lt rx933_pos, 0, rx933_fail2014
    eq $I19, 0, rx933_fail2014
    nqp_islist $I20, rx933_cstack
    unless $I20, rx933_jump2015
    elements $I18, rx933_bstack
    le $I18, 0, rx933_cut2016
    dec $I18
    set $I18, rx933_bstack[$I18]
  rx933_cut2016:
    assign rx933_cstack, $I18
  rx933_jump2015:
    jump $I19
  rx933_done2012:
    rx933_cur."!cursor_fail"()
    .return (rx933_cur) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<has>" :subid("cuid_114_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1060
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx937_start
    .local string rx937_tgt
    .local int rx937_pos
    .local int rx937_off
    .local int rx937_eos
    .local int rx937_rep
    .local pmc rx937_cur
    .local pmc rx937_curclass
    .local pmc rx937_bstack
    .local pmc rx937_cstack
    rx937_start = self."!cursor_start_all"()
    set rx937_cur, rx937_start[0]
    set rx937_tgt, rx937_start[1]
    set rx937_pos, rx937_start[2]
    set rx937_curclass, rx937_start[3]
    set rx937_bstack, rx937_start[4]
    set $I19, rx937_start[5]
    store_lex unicode:"$\x{a2}", rx937_cur
    length rx937_eos, rx937_tgt
    eq $I19, 1, rx937_restart2026
    gt rx937_pos, rx937_eos, rx937_fail2027
    repr_get_attr_int $I11, self, rx937_curclass, "$!from"
    ne $I11, -1, rxscan938_done2033
    goto rxscan938_scan2032
  rxscan938_loop2031:
    inc rx937_pos
    gt rx937_pos, rx937_eos, rx937_fail2027
    repr_bind_attr_int rx937_cur, rx937_curclass, "$!from", rx937_pos
  rxscan938_scan2032:
    nqp_rxmark rx937_bstack, rxscan938_loop2031, rx937_pos, 0
  rxscan938_done2033:
    nqp_rxmark rx937_bstack, rxcap939_fail2035, rx937_pos, 0
    add $I11, rx937_pos, 3
    gt $I11, rx937_eos, rx937_fail2027
    substr $S10, rx937_tgt, rx937_pos, 3
    ne $S10, ucs4:"has", rx937_fail2027
    add rx937_pos, 3
    nqp_rxpeek $I19, rx937_bstack, rxcap939_fail2035
    inc $I19
    set $I11, rx937_bstack[$I19]
    repr_bind_attr_int rx937_cur, rx937_curclass, "$!pos", rx937_pos
    $P11 = rx937_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx937_pos)
    rx937_cstack = rx937_cur."!cursor_capture"($P11, "sym")
    goto rxcap939_done2034
  rxcap939_fail2035:
    goto rx937_fail2027
  rxcap939_done2034:
    repr_bind_attr_int rx937_cur, rx937_curclass, "$!pos", rx937_pos
    $P11 = rx937_cur."scoped"("has")
    repr_get_attr_int $I11, $P11, rx937_curclass, "$!pos"
    lt $I11, 0, rx937_fail2027
    nqp_rxmark rx937_bstack, rxsubrule940_pass2036, -1, 0
  rxsubrule940_pass2036:
    rx937_cstack = rx937_cur."!cursor_capture"($P11, "scoped")
    repr_get_attr_int rx937_pos, $P11, rx937_curclass, "$!pos"
    rx937_cur."!cursor_pass"(rx937_pos, "scope_declarator:sym<has>", 'backtrack'=>1)
    .return (rx937_cur)
  rx937_restart2026:
    repr_get_attr_obj rx937_cstack, rx937_cur, rx937_curclass, "$!cstack"
  rx937_fail2027:
    unless rx937_bstack, rx937_done2025
    pop $I19, rx937_bstack
    if_null rx937_cstack, rx937_cstack_done2030
    unless rx937_cstack, rx937_cstack_done2030
    dec $I19
    set $P11, rx937_cstack[$I19]
  rx937_cstack_done2030:
    pop rx937_rep, rx937_bstack
    pop rx937_pos, rx937_bstack
    pop $I19, rx937_bstack
    lt rx937_pos, -1, rx937_done2025
    lt rx937_pos, 0, rx937_fail2027
    eq $I19, 0, rx937_fail2027
    nqp_islist $I20, rx937_cstack
    unless $I20, rx937_jump2028
    elements $I18, rx937_bstack
    le $I18, 0, rx937_cut2029
    dec $I18
    set $I18, rx937_bstack[$I18]
  rx937_cut2029:
    assign rx937_cstack, $I18
  rx937_jump2028:
    jump $I19
  rx937_done2025:
    rx937_cur."!cursor_fail"()
    .return (rx937_cur) 
.end
.HLL "nqp"
.namespace []
.sub "scoped" :subid("cuid_115_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1062
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .lex "$*SCOPE", _lex_param_1 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx941_start
    .local string rx941_tgt
    .local int rx941_pos
    .local int rx941_off
    .local int rx941_eos
    .local int rx941_rep
    .local pmc rx941_cur
    .local pmc rx941_curclass
    .local pmc rx941_bstack
    .local pmc rx941_cstack
    rx941_start = self."!cursor_start_all"()
    set rx941_cur, rx941_start[0]
    set rx941_tgt, rx941_start[1]
    set rx941_pos, rx941_start[2]
    set rx941_curclass, rx941_start[3]
    set rx941_bstack, rx941_start[4]
    set $I19, rx941_start[5]
    store_lex unicode:"$\x{a2}", rx941_cur
    length rx941_eos, rx941_tgt
    eq $I19, 1, rx941_restart2039
    gt rx941_pos, rx941_eos, rx941_fail2040
    repr_get_attr_int $I11, self, rx941_curclass, "$!from"
    ne $I11, -1, rxscan942_done2046
    goto rxscan942_scan2045
  rxscan942_loop2044:
    inc rx941_pos
    gt rx941_pos, rx941_eos, rx941_fail2040
    repr_bind_attr_int rx941_cur, rx941_curclass, "$!from", rx941_pos
  rxscan942_scan2045:
    nqp_rxmark rx941_bstack, rxscan942_loop2044, rx941_pos, 0
  rxscan942_done2046:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt943_02048
    nqp_push_label $P11, alt943_12052
    nqp_push_label $P11, alt943_22056
    nqp_rxmark rx941_bstack, alt943_end2047, -1, 0
    rx941_cur."!alt"(rx941_pos, "alt_nfa__21_1367388603.56922", $P11)
    goto rx941_fail2040
  alt943_02048:
    repr_bind_attr_int rx941_cur, rx941_curclass, "$!pos", rx941_pos
    $P11 = rx941_cur."ws"()
    repr_get_attr_int $I11, $P11, rx941_curclass, "$!pos"
    lt $I11, 0, rx941_fail2040
    repr_get_attr_int rx941_pos, $P11, rx941_curclass, "$!pos"
    repr_bind_attr_int rx941_cur, rx941_curclass, "$!pos", rx941_pos
    $P11 = rx941_cur."declarator"()
    repr_get_attr_int $I11, $P11, rx941_curclass, "$!pos"
    lt $I11, 0, rx941_fail2040
    nqp_rxmark rx941_bstack, rxsubrule945_pass2050, -1, 0
  rxsubrule945_pass2050:
    rx941_cstack = rx941_cur."!cursor_capture"($P11, "declarator")
    repr_get_attr_int rx941_pos, $P11, rx941_curclass, "$!pos"
    repr_bind_attr_int rx941_cur, rx941_curclass, "$!pos", rx941_pos
    $P11 = rx941_cur."ws"()
    repr_get_attr_int $I11, $P11, rx941_curclass, "$!pos"
    lt $I11, 0, rx941_fail2040
    repr_get_attr_int rx941_pos, $P11, rx941_curclass, "$!pos"
    goto alt943_end2047
  alt943_12052:
    repr_bind_attr_int rx941_cur, rx941_curclass, "$!pos", rx941_pos
    $P11 = rx941_cur."ws"()
    repr_get_attr_int $I11, $P11, rx941_curclass, "$!pos"
    lt $I11, 0, rx941_fail2040
    repr_get_attr_int rx941_pos, $P11, rx941_curclass, "$!pos"
    repr_bind_attr_int rx941_cur, rx941_curclass, "$!pos", rx941_pos
    $P11 = rx941_cur."multi_declarator"()
    repr_get_attr_int $I11, $P11, rx941_curclass, "$!pos"
    lt $I11, 0, rx941_fail2040
    nqp_rxmark rx941_bstack, rxsubrule948_pass2054, -1, 0
  rxsubrule948_pass2054:
    rx941_cstack = rx941_cur."!cursor_capture"($P11, "multi_declarator")
    repr_get_attr_int rx941_pos, $P11, rx941_curclass, "$!pos"
    repr_bind_attr_int rx941_cur, rx941_curclass, "$!pos", rx941_pos
    $P11 = rx941_cur."ws"()
    repr_get_attr_int $I11, $P11, rx941_curclass, "$!pos"
    lt $I11, 0, rx941_fail2040
    repr_get_attr_int rx941_pos, $P11, rx941_curclass, "$!pos"
    goto alt943_end2047
  alt943_22056:
    repr_bind_attr_int rx941_cur, rx941_curclass, "$!pos", rx941_pos
    $P11 = rx941_cur."ws"()
    repr_get_attr_int $I11, $P11, rx941_curclass, "$!pos"
    lt $I11, 0, rx941_fail2040
    repr_get_attr_int rx941_pos, $P11, rx941_curclass, "$!pos"
    repr_bind_attr_int rx941_cur, rx941_curclass, "$!pos", rx941_pos
    $P11 = rx941_cur."package_declarator"()
    repr_get_attr_int $I11, $P11, rx941_curclass, "$!pos"
    lt $I11, 0, rx941_fail2040
    nqp_rxmark rx941_bstack, rxsubrule951_pass2058, -1, 0
  rxsubrule951_pass2058:
    rx941_cstack = rx941_cur."!cursor_capture"($P11, "package_declarator")
    repr_get_attr_int rx941_pos, $P11, rx941_curclass, "$!pos"
    repr_bind_attr_int rx941_cur, rx941_curclass, "$!pos", rx941_pos
    $P11 = rx941_cur."ws"()
    repr_get_attr_int $I11, $P11, rx941_curclass, "$!pos"
    lt $I11, 0, rx941_fail2040
    repr_get_attr_int rx941_pos, $P11, rx941_curclass, "$!pos"
    goto alt943_end2047
  alt943_end2047:
    rx941_cur."!cursor_pass"(rx941_pos, "scoped", 'backtrack'=>1)
    .return (rx941_cur)
  rx941_restart2039:
    repr_get_attr_obj rx941_cstack, rx941_cur, rx941_curclass, "$!cstack"
  rx941_fail2040:
    unless rx941_bstack, rx941_done2038
    pop $I19, rx941_bstack
    if_null rx941_cstack, rx941_cstack_done2043
    unless rx941_cstack, rx941_cstack_done2043
    dec $I19
    set $P11, rx941_cstack[$I19]
  rx941_cstack_done2043:
    pop rx941_rep, rx941_bstack
    pop rx941_pos, rx941_bstack
    pop $I19, rx941_bstack
    lt rx941_pos, -1, rx941_done2038
    lt rx941_pos, 0, rx941_fail2040
    eq $I19, 0, rx941_fail2040
    nqp_islist $I20, rx941_cstack
    unless $I20, rx941_jump2041
    elements $I18, rx941_bstack
    le $I18, 0, rx941_cut2042
    dec $I18
    set $I18, rx941_bstack[$I18]
  rx941_cut2042:
    assign rx941_cstack, $I18
  rx941_jump2041:
    jump $I19
  rx941_done2038:
    rx941_cur."!cursor_fail"()
    .return (rx941_cur) 
.end
.HLL "nqp"
.namespace []
.sub "typename" :subid("cuid_116_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1068
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_406_1367388600.55005' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx953_start
    .local string rx953_tgt
    .local int rx953_pos
    .local int rx953_off
    .local int rx953_eos
    .local int rx953_rep
    .local pmc rx953_cur
    .local pmc rx953_curclass
    .local pmc rx953_bstack
    .local pmc rx953_cstack
    rx953_start = self."!cursor_start_all"()
    set rx953_cur, rx953_start[0]
    set rx953_tgt, rx953_start[1]
    set rx953_pos, rx953_start[2]
    set rx953_curclass, rx953_start[3]
    set rx953_bstack, rx953_start[4]
    set $I19, rx953_start[5]
    store_lex unicode:"$\x{a2}", rx953_cur
    length rx953_eos, rx953_tgt
    eq $I19, 1, rx953_restart2062
    gt rx953_pos, rx953_eos, rx953_fail2063
    repr_get_attr_int $I11, self, rx953_curclass, "$!from"
    ne $I11, -1, rxscan954_done2069
    goto rxscan954_scan2068
  rxscan954_loop2067:
    inc rx953_pos
    gt rx953_pos, rx953_eos, rx953_fail2063
    repr_bind_attr_int rx953_cur, rx953_curclass, "$!from", rx953_pos
  rxscan954_scan2068:
    nqp_rxmark rx953_bstack, rxscan954_loop2067, rx953_pos, 0
  rxscan954_done2069:
    repr_bind_attr_int rx953_cur, rx953_curclass, "$!pos", rx953_pos
    $P11 = rx953_cur."name"()
    repr_get_attr_int $I11, $P11, rx953_curclass, "$!pos"
    lt $I11, 0, rx953_fail2063
    nqp_rxmark rx953_bstack, rxsubrule955_pass2070, -1, 0
  rxsubrule955_pass2070:
    rx953_cstack = rx953_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx953_pos, $P11, rx953_curclass, "$!pos"
    repr_bind_attr_int rx953_cur, rx953_curclass, "$!pos", rx953_pos
    store_lex unicode:"$\x{a2}", rx953_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_406_1367388600.55005' 
    capture_lex $P5002
    $P5003 = $P5002()
    unless $P5003, rx953_fail2063
    rx953_cur."!cursor_pass"(rx953_pos, "typename", 'backtrack'=>1)
    .return (rx953_cur)
  rx953_restart2062:
    repr_get_attr_obj rx953_cstack, rx953_cur, rx953_curclass, "$!cstack"
  rx953_fail2063:
    unless rx953_bstack, rx953_done2061
    pop $I19, rx953_bstack
    if_null rx953_cstack, rx953_cstack_done2066
    unless rx953_cstack, rx953_cstack_done2066
    dec $I19
    set $P11, rx953_cstack[$I19]
  rx953_cstack_done2066:
    pop rx953_rep, rx953_bstack
    pop rx953_pos, rx953_bstack
    pop $I19, rx953_bstack
    lt rx953_pos, -1, rx953_done2061
    lt rx953_pos, 0, rx953_fail2063
    eq $I19, 0, rx953_fail2063
    nqp_islist $I20, rx953_cstack
    unless $I20, rx953_jump2064
    elements $I18, rx953_bstack
    le $I18, 0, rx953_cut2065
    dec $I18
    set $I18, rx953_bstack[$I18]
  rx953_cut2065:
    assign rx953_cstack, $I18
  rx953_jump2064:
    jump $I19
  rx953_done2061:
    rx953_cur."!cursor_fail"()
    .return (rx953_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_406_1367388600.55005") :anon :lex :outer("cuid_116_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1070
    .local pmc fb_tmp_145 
    .local pmc fb_tmp_146 
    .local pmc fb_tmp_147 
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback2071
    nqp_get_sc_object $P5003, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5002, $P5003
    set fb_tmp_145, $P5002
    repr_defined $I5001, fb_tmp_145
    unless $I5001 goto if956_else2072 
    set $P5004, fb_tmp_145["$W"]
    set $P5006, $P5004
    goto if956_end2073
  if956_else2072:
    null $P5005
    set $P5006, $P5005
  if956_end2073:
    unless_null $P5006, vivi_9572074
    nqp_get_sc_object $P5007, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5006, $P5007
  vivi_9572074:
    unless_null $P5006, vivi_9582075
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_9582075:
    set $P5001, $P5006
  fallback2071:
    find_lex $P5009, "$/"
    find_lex $P5010, "$/"
    unless_null $P5010, fallback2080
    nqp_get_sc_object $P5011, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5010, $P5011
  fallback2080:
    set fb_tmp_147, $P5010
    repr_defined $I5003, fb_tmp_147
    unless $I5003 goto if960_else2078 
    set $P5012, fb_tmp_147["name"]
    set $P5014, $P5012
    goto if960_end2079
  if960_else2078:
    null $P5013
    set $P5014, $P5013
  if960_end2079:
    unless_null $P5014, vivi_9612081
    nqp_get_sc_object $P5015, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5014, $P5015
  vivi_9612081:
    set fb_tmp_146, $P5014
    repr_defined $I5002, fb_tmp_146
    unless $I5002 goto if959_else2076 
    set $P5016, fb_tmp_146["identifier"]
    set $P5018, $P5016
    goto if959_end2077
  if959_else2076:
    null $P5017
    set $P5018, $P5017
  if959_end2077:
    unless_null $P5018, vivi_9622082
    nqp_get_sc_object $P5019, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5018, $P5019
  vivi_9622082:
    $P5020 = $P5001."known_sym"($P5009, $P5018)
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "declarator" :subid("cuid_117_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1073
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx963_start
    .local string rx963_tgt
    .local int rx963_pos
    .local int rx963_off
    .local int rx963_eos
    .local int rx963_rep
    .local pmc rx963_cur
    .local pmc rx963_curclass
    .local pmc rx963_bstack
    .local pmc rx963_cstack
    rx963_start = self."!cursor_start_all"()
    set rx963_cur, rx963_start[0]
    set rx963_tgt, rx963_start[1]
    set rx963_pos, rx963_start[2]
    set rx963_curclass, rx963_start[3]
    set rx963_bstack, rx963_start[4]
    set $I19, rx963_start[5]
    store_lex unicode:"$\x{a2}", rx963_cur
    length rx963_eos, rx963_tgt
    eq $I19, 1, rx963_restart2085
    gt rx963_pos, rx963_eos, rx963_fail2086
    repr_get_attr_int $I11, self, rx963_curclass, "$!from"
    ne $I11, -1, rxscan964_done2092
    goto rxscan964_scan2091
  rxscan964_loop2090:
    inc rx963_pos
    gt rx963_pos, rx963_eos, rx963_fail2086
    repr_bind_attr_int rx963_cur, rx963_curclass, "$!from", rx963_pos
  rxscan964_scan2091:
    nqp_rxmark rx963_bstack, rxscan964_loop2090, rx963_pos, 0
  rxscan964_done2092:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt965_02094
    nqp_push_label $P11, alt965_12096
    nqp_rxmark rx963_bstack, alt965_end2093, -1, 0
    rx963_cur."!alt"(rx963_pos, "alt_nfa__22_1367388603.58791", $P11)
    goto rx963_fail2086
  alt965_02094:
    repr_bind_attr_int rx963_cur, rx963_curclass, "$!pos", rx963_pos
    $P11 = rx963_cur."variable_declarator"()
    repr_get_attr_int $I11, $P11, rx963_curclass, "$!pos"
    lt $I11, 0, rx963_fail2086
    nqp_rxmark rx963_bstack, rxsubrule966_pass2095, -1, 0
  rxsubrule966_pass2095:
    rx963_cstack = rx963_cur."!cursor_capture"($P11, "variable_declarator")
    repr_get_attr_int rx963_pos, $P11, rx963_curclass, "$!pos"
    goto alt965_end2093
  alt965_12096:
    repr_bind_attr_int rx963_cur, rx963_curclass, "$!pos", rx963_pos
    $P11 = rx963_cur."routine_declarator"()
    repr_get_attr_int $I11, $P11, rx963_curclass, "$!pos"
    lt $I11, 0, rx963_fail2086
    nqp_rxmark rx963_bstack, rxsubrule967_pass2097, -1, 0
  rxsubrule967_pass2097:
    rx963_cstack = rx963_cur."!cursor_capture"($P11, "routine_declarator")
    repr_get_attr_int rx963_pos, $P11, rx963_curclass, "$!pos"
    goto alt965_end2093
  alt965_end2093:
    rx963_cur."!cursor_pass"(rx963_pos, "declarator", 'backtrack'=>1)
    .return (rx963_cur)
  rx963_restart2085:
    repr_get_attr_obj rx963_cstack, rx963_cur, rx963_curclass, "$!cstack"
  rx963_fail2086:
    unless rx963_bstack, rx963_done2084
    pop $I19, rx963_bstack
    if_null rx963_cstack, rx963_cstack_done2089
    unless rx963_cstack, rx963_cstack_done2089
    dec $I19
    set $P11, rx963_cstack[$I19]
  rx963_cstack_done2089:
    pop rx963_rep, rx963_bstack
    pop rx963_pos, rx963_bstack
    pop $I19, rx963_bstack
    lt rx963_pos, -1, rx963_done2084
    lt rx963_pos, 0, rx963_fail2086
    eq $I19, 0, rx963_fail2086
    nqp_islist $I20, rx963_cstack
    unless $I20, rx963_jump2087
    elements $I18, rx963_bstack
    le $I18, 0, rx963_cut2088
    dec $I18
    set $I18, rx963_bstack[$I18]
  rx963_cut2088:
    assign rx963_cstack, $I18
  rx963_jump2087:
    jump $I19
  rx963_done2084:
    rx963_cur."!cursor_fail"()
    .return (rx963_cur) 
.end
.HLL "nqp"
.namespace []
.sub "variable_declarator" :subid("cuid_118_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1078
    .param pmc _lex_param_0 
    .const 'Sub' $P5006 = 'cuid_407_1367388600.55005' 
    capture_lex $P5006 
    .lex "$*IN_DECL", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx968_start
    .local string rx968_tgt
    .local int rx968_pos
    .local int rx968_off
    .local int rx968_eos
    .local int rx968_rep
    .local pmc rx968_cur
    .local pmc rx968_curclass
    .local pmc rx968_bstack
    .local pmc rx968_cstack
    rx968_start = self."!cursor_start_all"()
    set rx968_cur, rx968_start[0]
    set rx968_tgt, rx968_start[1]
    set rx968_pos, rx968_start[2]
    set rx968_curclass, rx968_start[3]
    set rx968_bstack, rx968_start[4]
    set $I19, rx968_start[5]
    store_lex unicode:"$\x{a2}", rx968_cur
    length rx968_eos, rx968_tgt
    eq $I19, 1, rx968_restart2100
    gt rx968_pos, rx968_eos, rx968_fail2101
    repr_get_attr_int $I11, self, rx968_curclass, "$!from"
    ne $I11, -1, rxscan969_done2107
    goto rxscan969_scan2106
  rxscan969_loop2105:
    inc rx968_pos
    gt rx968_pos, rx968_eos, rx968_fail2101
    repr_bind_attr_int rx968_cur, rx968_curclass, "$!from", rx968_pos
  rxscan969_scan2106:
    nqp_rxmark rx968_bstack, rxscan969_loop2105, rx968_pos, 0
  rxscan969_done2107:
    repr_bind_attr_int rx968_cur, rx968_curclass, "$!pos", rx968_pos
    $P11 = rx968_cur."ws"()
    repr_get_attr_int $I11, $P11, rx968_curclass, "$!pos"
    lt $I11, 0, rx968_fail2101
    repr_get_attr_int rx968_pos, $P11, rx968_curclass, "$!pos"
    nqp_rxmark rx968_bstack, rxquantr971_done2110, rx968_pos, 0
  rxquantr971_loop2109:
    repr_bind_attr_int rx968_cur, rx968_curclass, "$!pos", rx968_pos
    $P11 = rx968_cur."typename"()
    repr_get_attr_int $I11, $P11, rx968_curclass, "$!pos"
    lt $I11, 0, rx968_fail2101
    goto rxsubrule972_pass2111
  rxsubrule972_back2112:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx968_curclass, "$!pos"
    lt $I11, 0, rx968_fail2101
  rxsubrule972_pass2111:
    rx968_cstack = rx968_cur."!cursor_capture"($P11, "typename")
    set_addr $I11, rxsubrule972_back2112
    push rx968_bstack, $I11
    push rx968_bstack, 0
    push rx968_bstack, rx968_pos
    elements $I11, rx968_cstack
    push rx968_bstack, $I11
    repr_get_attr_int rx968_pos, $P11, rx968_curclass, "$!pos"
    nqp_rxpeek $I19, rx968_bstack, rxquantr971_done2110
    inc $I19
    inc $I19
    set rx968_rep, rx968_bstack[$I19]
    nqp_rxcommit rx968_bstack, rxquantr971_done2110
    inc rx968_rep
  rxquantr971_done2110:
    repr_bind_attr_int rx968_cur, rx968_curclass, "$!pos", rx968_pos
    $P11 = rx968_cur."ws"()
    repr_get_attr_int $I11, $P11, rx968_curclass, "$!pos"
    lt $I11, 0, rx968_fail2101
    repr_get_attr_int rx968_pos, $P11, rx968_curclass, "$!pos"
    repr_bind_attr_int rx968_cur, rx968_curclass, "$!pos", rx968_pos
    store_lex unicode:"$\x{a2}", rx968_cur
    box $P5002, "variable"
    set $P101, $P5002
    repr_bind_attr_int rx968_cur, rx968_curclass, "$!pos", rx968_pos
    $P11 = rx968_cur."ws"()
    repr_get_attr_int $I11, $P11, rx968_curclass, "$!pos"
    lt $I11, 0, rx968_fail2101
    repr_get_attr_int rx968_pos, $P11, rx968_curclass, "$!pos"
    repr_bind_attr_int rx968_cur, rx968_curclass, "$!pos", rx968_pos
    $P11 = rx968_cur."variable"()
    repr_get_attr_int $I11, $P11, rx968_curclass, "$!pos"
    lt $I11, 0, rx968_fail2101
    nqp_rxmark rx968_bstack, rxsubrule975_pass2115, -1, 0
  rxsubrule975_pass2115:
    rx968_cstack = rx968_cur."!cursor_capture"($P11, "variable")
    repr_get_attr_int rx968_pos, $P11, rx968_curclass, "$!pos"
    repr_bind_attr_int rx968_cur, rx968_curclass, "$!pos", rx968_pos
    $P11 = rx968_cur."ws"()
    repr_get_attr_int $I11, $P11, rx968_curclass, "$!pos"
    lt $I11, 0, rx968_fail2101
    repr_get_attr_int rx968_pos, $P11, rx968_curclass, "$!pos"
    repr_bind_attr_int rx968_cur, rx968_curclass, "$!pos", rx968_pos
    store_lex unicode:"$\x{a2}", rx968_cur
    $P5003 = $P102."MATCH"()
    set $P103, $P5003
    .const 'Sub' $P5004 = 'cuid_407_1367388600.55005' 
    capture_lex $P5004
    $P5005 = $P5004()
    repr_bind_attr_int rx968_cur, rx968_curclass, "$!pos", rx968_pos
    $P11 = rx968_cur."ws"()
    repr_get_attr_int $I11, $P11, rx968_curclass, "$!pos"
    lt $I11, 0, rx968_fail2101
    repr_get_attr_int rx968_pos, $P11, rx968_curclass, "$!pos"
    nqp_rxmark rx968_bstack, rxquantr978_done2119, rx968_pos, 0
  rxquantr978_loop2118:
    repr_bind_attr_int rx968_cur, rx968_curclass, "$!pos", rx968_pos
    $P11 = rx968_cur."trait"()
    repr_get_attr_int $I11, $P11, rx968_curclass, "$!pos"
    lt $I11, 0, rx968_fail2101
    goto rxsubrule979_pass2120
  rxsubrule979_back2121:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx968_curclass, "$!pos"
    lt $I11, 0, rx968_fail2101
  rxsubrule979_pass2120:
    rx968_cstack = rx968_cur."!cursor_capture"($P11, "trait")
    set_addr $I11, rxsubrule979_back2121
    push rx968_bstack, $I11
    push rx968_bstack, 0
    push rx968_bstack, rx968_pos
    elements $I11, rx968_cstack
    push rx968_bstack, $I11
    repr_get_attr_int rx968_pos, $P11, rx968_curclass, "$!pos"
    nqp_rxpeek $I19, rx968_bstack, rxquantr978_done2119
    inc $I19
    inc $I19
    set rx968_rep, rx968_bstack[$I19]
    nqp_rxcommit rx968_bstack, rxquantr978_done2119
    inc rx968_rep
    nqp_rxmark rx968_bstack, rxquantr978_done2119, rx968_pos, rx968_rep
    goto rxquantr978_loop2118
  rxquantr978_done2119:
    repr_bind_attr_int rx968_cur, rx968_curclass, "$!pos", rx968_pos
    $P11 = rx968_cur."ws"()
    repr_get_attr_int $I11, $P11, rx968_curclass, "$!pos"
    lt $I11, 0, rx968_fail2101
    repr_get_attr_int rx968_pos, $P11, rx968_curclass, "$!pos"
    rx968_cur."!cursor_pass"(rx968_pos, "variable_declarator", 'backtrack'=>1)
    .return (rx968_cur)
  rx968_restart2100:
    repr_get_attr_obj rx968_cstack, rx968_cur, rx968_curclass, "$!cstack"
  rx968_fail2101:
    unless rx968_bstack, rx968_done2099
    pop $I19, rx968_bstack
    if_null rx968_cstack, rx968_cstack_done2104
    unless rx968_cstack, rx968_cstack_done2104
    dec $I19
    set $P11, rx968_cstack[$I19]
  rx968_cstack_done2104:
    pop rx968_rep, rx968_bstack
    pop rx968_pos, rx968_bstack
    pop $I19, rx968_bstack
    lt rx968_pos, -1, rx968_done2099
    lt rx968_pos, 0, rx968_fail2101
    eq $I19, 0, rx968_fail2101
    nqp_islist $I20, rx968_cstack
    unless $I20, rx968_jump2102
    elements $I18, rx968_bstack
    le $I18, 0, rx968_cut2103
    dec $I18
    set $I18, rx968_bstack[$I18]
  rx968_cut2103:
    assign rx968_cstack, $I18
  rx968_jump2102:
    jump $I19
  rx968_done2099:
    rx968_cur."!cursor_fail"()
    .return (rx968_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_407_1367388600.55005") :anon :lex :outer("cuid_118_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1082

    box $P5001, 0
    store_dynamic_lex "$*IN_DECL", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator" :subid("cuid_119_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1086
    .param pmc self 
    $P5001 = self."!protoregex"("routine_declarator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator:sym<sub>" :subid("cuid_120_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1087
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx981_start
    .local string rx981_tgt
    .local int rx981_pos
    .local int rx981_off
    .local int rx981_eos
    .local int rx981_rep
    .local pmc rx981_cur
    .local pmc rx981_curclass
    .local pmc rx981_bstack
    .local pmc rx981_cstack
    rx981_start = self."!cursor_start_all"()
    set rx981_cur, rx981_start[0]
    set rx981_tgt, rx981_start[1]
    set rx981_pos, rx981_start[2]
    set rx981_curclass, rx981_start[3]
    set rx981_bstack, rx981_start[4]
    set $I19, rx981_start[5]
    store_lex unicode:"$\x{a2}", rx981_cur
    length rx981_eos, rx981_tgt
    eq $I19, 1, rx981_restart2125
    gt rx981_pos, rx981_eos, rx981_fail2126
    repr_get_attr_int $I11, self, rx981_curclass, "$!from"
    ne $I11, -1, rxscan982_done2132
    goto rxscan982_scan2131
  rxscan982_loop2130:
    inc rx981_pos
    gt rx981_pos, rx981_eos, rx981_fail2126
    repr_bind_attr_int rx981_cur, rx981_curclass, "$!from", rx981_pos
  rxscan982_scan2131:
    nqp_rxmark rx981_bstack, rxscan982_loop2130, rx981_pos, 0
  rxscan982_done2132:
    nqp_rxmark rx981_bstack, rxcap983_fail2134, rx981_pos, 0
    add $I11, rx981_pos, 3
    gt $I11, rx981_eos, rx981_fail2126
    substr $S10, rx981_tgt, rx981_pos, 3
    ne $S10, ucs4:"sub", rx981_fail2126
    add rx981_pos, 3
    nqp_rxpeek $I19, rx981_bstack, rxcap983_fail2134
    inc $I19
    set $I11, rx981_bstack[$I19]
    repr_bind_attr_int rx981_cur, rx981_curclass, "$!pos", rx981_pos
    $P11 = rx981_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx981_pos)
    rx981_cstack = rx981_cur."!cursor_capture"($P11, "sym")
    goto rxcap983_done2133
  rxcap983_fail2134:
    goto rx981_fail2126
  rxcap983_done2133:
    repr_bind_attr_int rx981_cur, rx981_curclass, "$!pos", rx981_pos
    $P11 = rx981_cur."routine_def"()
    repr_get_attr_int $I11, $P11, rx981_curclass, "$!pos"
    lt $I11, 0, rx981_fail2126
    nqp_rxmark rx981_bstack, rxsubrule984_pass2135, -1, 0
  rxsubrule984_pass2135:
    rx981_cstack = rx981_cur."!cursor_capture"($P11, "routine_def")
    repr_get_attr_int rx981_pos, $P11, rx981_curclass, "$!pos"
    rx981_cur."!cursor_pass"(rx981_pos, "routine_declarator:sym<sub>", 'backtrack'=>1)
    .return (rx981_cur)
  rx981_restart2125:
    repr_get_attr_obj rx981_cstack, rx981_cur, rx981_curclass, "$!cstack"
  rx981_fail2126:
    unless rx981_bstack, rx981_done2124
    pop $I19, rx981_bstack
    if_null rx981_cstack, rx981_cstack_done2129
    unless rx981_cstack, rx981_cstack_done2129
    dec $I19
    set $P11, rx981_cstack[$I19]
  rx981_cstack_done2129:
    pop rx981_rep, rx981_bstack
    pop rx981_pos, rx981_bstack
    pop $I19, rx981_bstack
    lt rx981_pos, -1, rx981_done2124
    lt rx981_pos, 0, rx981_fail2126
    eq $I19, 0, rx981_fail2126
    nqp_islist $I20, rx981_cstack
    unless $I20, rx981_jump2127
    elements $I18, rx981_bstack
    le $I18, 0, rx981_cut2128
    dec $I18
    set $I18, rx981_bstack[$I18]
  rx981_cut2128:
    assign rx981_cstack, $I18
  rx981_jump2127:
    jump $I19
  rx981_done2124:
    rx981_cur."!cursor_fail"()
    .return (rx981_cur) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator:sym<method>" :subid("cuid_121_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1088
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx985_start
    .local string rx985_tgt
    .local int rx985_pos
    .local int rx985_off
    .local int rx985_eos
    .local int rx985_rep
    .local pmc rx985_cur
    .local pmc rx985_curclass
    .local pmc rx985_bstack
    .local pmc rx985_cstack
    rx985_start = self."!cursor_start_all"()
    set rx985_cur, rx985_start[0]
    set rx985_tgt, rx985_start[1]
    set rx985_pos, rx985_start[2]
    set rx985_curclass, rx985_start[3]
    set rx985_bstack, rx985_start[4]
    set $I19, rx985_start[5]
    store_lex unicode:"$\x{a2}", rx985_cur
    length rx985_eos, rx985_tgt
    eq $I19, 1, rx985_restart2138
    gt rx985_pos, rx985_eos, rx985_fail2139
    repr_get_attr_int $I11, self, rx985_curclass, "$!from"
    ne $I11, -1, rxscan986_done2145
    goto rxscan986_scan2144
  rxscan986_loop2143:
    inc rx985_pos
    gt rx985_pos, rx985_eos, rx985_fail2139
    repr_bind_attr_int rx985_cur, rx985_curclass, "$!from", rx985_pos
  rxscan986_scan2144:
    nqp_rxmark rx985_bstack, rxscan986_loop2143, rx985_pos, 0
  rxscan986_done2145:
    nqp_rxmark rx985_bstack, rxcap987_fail2147, rx985_pos, 0
    add $I11, rx985_pos, 6
    gt $I11, rx985_eos, rx985_fail2139
    substr $S10, rx985_tgt, rx985_pos, 6
    ne $S10, ucs4:"method", rx985_fail2139
    add rx985_pos, 6
    nqp_rxpeek $I19, rx985_bstack, rxcap987_fail2147
    inc $I19
    set $I11, rx985_bstack[$I19]
    repr_bind_attr_int rx985_cur, rx985_curclass, "$!pos", rx985_pos
    $P11 = rx985_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx985_pos)
    rx985_cstack = rx985_cur."!cursor_capture"($P11, "sym")
    goto rxcap987_done2146
  rxcap987_fail2147:
    goto rx985_fail2139
  rxcap987_done2146:
    repr_bind_attr_int rx985_cur, rx985_curclass, "$!pos", rx985_pos
    $P11 = rx985_cur."method_def"()
    repr_get_attr_int $I11, $P11, rx985_curclass, "$!pos"
    lt $I11, 0, rx985_fail2139
    nqp_rxmark rx985_bstack, rxsubrule988_pass2148, -1, 0
  rxsubrule988_pass2148:
    rx985_cstack = rx985_cur."!cursor_capture"($P11, "method_def")
    repr_get_attr_int rx985_pos, $P11, rx985_curclass, "$!pos"
    rx985_cur."!cursor_pass"(rx985_pos, "routine_declarator:sym<method>", 'backtrack'=>1)
    .return (rx985_cur)
  rx985_restart2138:
    repr_get_attr_obj rx985_cstack, rx985_cur, rx985_curclass, "$!cstack"
  rx985_fail2139:
    unless rx985_bstack, rx985_done2137
    pop $I19, rx985_bstack
    if_null rx985_cstack, rx985_cstack_done2142
    unless rx985_cstack, rx985_cstack_done2142
    dec $I19
    set $P11, rx985_cstack[$I19]
  rx985_cstack_done2142:
    pop rx985_rep, rx985_bstack
    pop rx985_pos, rx985_bstack
    pop $I19, rx985_bstack
    lt rx985_pos, -1, rx985_done2137
    lt rx985_pos, 0, rx985_fail2139
    eq $I19, 0, rx985_fail2139
    nqp_islist $I20, rx985_cstack
    unless $I20, rx985_jump2140
    elements $I18, rx985_bstack
    le $I18, 0, rx985_cut2141
    dec $I18
    set $I18, rx985_bstack[$I18]
  rx985_cut2141:
    assign rx985_cstack, $I18
  rx985_jump2140:
    jump $I19
  rx985_done2137:
    rx985_cur."!cursor_fail"()
    .return (rx985_cur) 
.end
.HLL "nqp"
.namespace []
.sub "routine_def" :subid("cuid_122_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1090
    .param pmc _lex_param_0 
    .lex "$*RETURN_USED", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx989_start
    .local string rx989_tgt
    .local int rx989_pos
    .local int rx989_off
    .local int rx989_eos
    .local int rx989_rep
    .local pmc rx989_cur
    .local pmc rx989_curclass
    .local pmc rx989_bstack
    .local pmc rx989_cstack
    rx989_start = self."!cursor_start_all"()
    set rx989_cur, rx989_start[0]
    set rx989_tgt, rx989_start[1]
    set rx989_pos, rx989_start[2]
    set rx989_curclass, rx989_start[3]
    set rx989_bstack, rx989_start[4]
    set $I19, rx989_start[5]
    store_lex unicode:"$\x{a2}", rx989_cur
    length rx989_eos, rx989_tgt
    eq $I19, 1, rx989_restart2151
    gt rx989_pos, rx989_eos, rx989_fail2152
    repr_get_attr_int $I11, self, rx989_curclass, "$!from"
    ne $I11, -1, rxscan990_done2158
    goto rxscan990_scan2157
  rxscan990_loop2156:
    inc rx989_pos
    gt rx989_pos, rx989_eos, rx989_fail2152
    repr_bind_attr_int rx989_cur, rx989_curclass, "$!from", rx989_pos
  rxscan990_scan2157:
    nqp_rxmark rx989_bstack, rxscan990_loop2156, rx989_pos, 0
  rxscan990_done2158:
    repr_bind_attr_int rx989_cur, rx989_curclass, "$!pos", rx989_pos
    $P11 = rx989_cur."ws"()
    repr_get_attr_int $I11, $P11, rx989_curclass, "$!pos"
    lt $I11, 0, rx989_fail2152
    repr_get_attr_int rx989_pos, $P11, rx989_curclass, "$!pos"
    repr_bind_attr_int rx989_cur, rx989_curclass, "$!pos", rx989_pos
    store_lex unicode:"$\x{a2}", rx989_cur
    box $P5002, 0
    set $P101, $P5002
    repr_bind_attr_int rx989_cur, rx989_curclass, "$!pos", rx989_pos
    $P11 = rx989_cur."ws"()
    repr_get_attr_int $I11, $P11, rx989_curclass, "$!pos"
    lt $I11, 0, rx989_fail2152
    repr_get_attr_int rx989_pos, $P11, rx989_curclass, "$!pos"
    nqp_rxmark rx989_bstack, rxquantr993_done2162, rx989_pos, 0
  rxquantr993_loop2161:
    repr_bind_attr_int rx989_cur, rx989_curclass, "$!pos", rx989_pos
    $P11 = rx989_cur."ws"()
    repr_get_attr_int $I11, $P11, rx989_curclass, "$!pos"
    lt $I11, 0, rx989_fail2152
    repr_get_attr_int rx989_pos, $P11, rx989_curclass, "$!pos"
    nqp_rxmark rx989_bstack, rxcap995_fail2165, rx989_pos, 0
    nqp_rxmark rx989_bstack, rxquantr996_done2167, rx989_pos, 0
  rxquantr996_loop2166:
    add $I11, rx989_pos, 1
    gt $I11, rx989_eos, rx989_fail2152
    substr $S10, rx989_tgt, rx989_pos, 1
    ne $S10, ucs4:"&", rx989_fail2152
    add rx989_pos, 1
    nqp_rxpeek $I19, rx989_bstack, rxquantr996_done2167
    inc $I19
    inc $I19
    set rx989_rep, rx989_bstack[$I19]
    nqp_rxcommit rx989_bstack, rxquantr996_done2167
    inc rx989_rep
  rxquantr996_done2167:
    nqp_rxpeek $I19, rx989_bstack, rxcap995_fail2165
    inc $I19
    set $I11, rx989_bstack[$I19]
    repr_bind_attr_int rx989_cur, rx989_curclass, "$!pos", rx989_pos
    $P11 = rx989_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx989_pos)
    rx989_cstack = rx989_cur."!cursor_capture"($P11, "sigil")
    goto rxcap995_done2164
  rxcap995_fail2165:
    goto rx989_fail2152
  rxcap995_done2164:
    repr_bind_attr_int rx989_cur, rx989_curclass, "$!pos", rx989_pos
    $P11 = rx989_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx989_curclass, "$!pos"
    lt $I11, 0, rx989_fail2152
    nqp_rxmark rx989_bstack, rxsubrule997_pass2168, -1, 0
  rxsubrule997_pass2168:
    rx989_cstack = rx989_cur."!cursor_capture"($P11, "deflongname")
    repr_get_attr_int rx989_pos, $P11, rx989_curclass, "$!pos"
    repr_bind_attr_int rx989_cur, rx989_curclass, "$!pos", rx989_pos
    $P11 = rx989_cur."ws"()
    repr_get_attr_int $I11, $P11, rx989_curclass, "$!pos"
    lt $I11, 0, rx989_fail2152
    repr_get_attr_int rx989_pos, $P11, rx989_curclass, "$!pos"
    nqp_rxpeek $I19, rx989_bstack, rxquantr993_done2162
    inc $I19
    inc $I19
    set rx989_rep, rx989_bstack[$I19]
    nqp_rxcommit rx989_bstack, rxquantr993_done2162
    inc rx989_rep
  rxquantr993_done2162:
    repr_bind_attr_int rx989_cur, rx989_curclass, "$!pos", rx989_pos
    $P11 = rx989_cur."ws"()
    repr_get_attr_int $I11, $P11, rx989_curclass, "$!pos"
    lt $I11, 0, rx989_fail2152
    repr_get_attr_int rx989_pos, $P11, rx989_curclass, "$!pos"
    repr_bind_attr_int rx989_cur, rx989_curclass, "$!pos", rx989_pos
    $P11 = rx989_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx989_curclass, "$!pos"
    lt $I11, 0, rx989_fail2152
    repr_get_attr_int rx989_pos, $P11, rx989_curclass, "$!pos"
    repr_bind_attr_int rx989_cur, rx989_curclass, "$!pos", rx989_pos
    $P11 = rx989_cur."ws"()
    repr_get_attr_int $I11, $P11, rx989_curclass, "$!pos"
    lt $I11, 0, rx989_fail2152
    repr_get_attr_int rx989_pos, $P11, rx989_curclass, "$!pos"
  alt1002_02174:
    nqp_rxmark rx989_bstack, alt1002_12180, rx989_pos, 0
    repr_bind_attr_int rx989_cur, rx989_curclass, "$!pos", rx989_pos
    $P11 = rx989_cur."ws"()
    repr_get_attr_int $I11, $P11, rx989_curclass, "$!pos"
    lt $I11, 0, rx989_fail2152
    repr_get_attr_int rx989_pos, $P11, rx989_curclass, "$!pos"
    add $I11, rx989_pos, 1
    gt $I11, rx989_eos, rx989_fail2152
    substr $S10, rx989_tgt, rx989_pos, 1
    ne $S10, ucs4:"(", rx989_fail2152
    add rx989_pos, 1
    repr_bind_attr_int rx989_cur, rx989_curclass, "$!pos", rx989_pos
    $P11 = rx989_cur."ws"()
    repr_get_attr_int $I11, $P11, rx989_curclass, "$!pos"
    lt $I11, 0, rx989_fail2152
    repr_get_attr_int rx989_pos, $P11, rx989_curclass, "$!pos"
    repr_bind_attr_int rx989_cur, rx989_curclass, "$!pos", rx989_pos
    $P11 = rx989_cur."signature"()
    repr_get_attr_int $I11, $P11, rx989_curclass, "$!pos"
    lt $I11, 0, rx989_fail2152
    nqp_rxmark rx989_bstack, rxsubrule1005_pass2177, -1, 0
  rxsubrule1005_pass2177:
    rx989_cstack = rx989_cur."!cursor_capture"($P11, "signature")
    repr_get_attr_int rx989_pos, $P11, rx989_curclass, "$!pos"
    repr_bind_attr_int rx989_cur, rx989_curclass, "$!pos", rx989_pos
    $P11 = rx989_cur."ws"()
    repr_get_attr_int $I11, $P11, rx989_curclass, "$!pos"
    lt $I11, 0, rx989_fail2152
    repr_get_attr_int rx989_pos, $P11, rx989_curclass, "$!pos"
    add $I11, rx989_pos, 1
    gt $I11, rx989_eos, rx989_fail2152
    substr $S10, rx989_tgt, rx989_pos, 1
    ne $S10, ucs4:")", rx989_fail2152
    add rx989_pos, 1
    repr_bind_attr_int rx989_cur, rx989_curclass, "$!pos", rx989_pos
    $P11 = rx989_cur."ws"()
    repr_get_attr_int $I11, $P11, rx989_curclass, "$!pos"
    lt $I11, 0, rx989_fail2152
    repr_get_attr_int rx989_pos, $P11, rx989_curclass, "$!pos"
    goto alt1002_end2173
  alt1002_12180:
    repr_bind_attr_int rx989_cur, rx989_curclass, "$!pos", rx989_pos
    $P11 = rx989_cur."ws"()
    repr_get_attr_int $I11, $P11, rx989_curclass, "$!pos"
    lt $I11, 0, rx989_fail2152
    repr_get_attr_int rx989_pos, $P11, rx989_curclass, "$!pos"
    repr_bind_attr_int rx989_cur, rx989_curclass, "$!pos", rx989_pos
    $P11 = rx989_cur."panic"("Routine declaration requires a signature")
    repr_get_attr_int $I11, $P11, rx989_curclass, "$!pos"
    lt $I11, 0, rx989_fail2152
    repr_get_attr_int rx989_pos, $P11, rx989_curclass, "$!pos"
    repr_bind_attr_int rx989_cur, rx989_curclass, "$!pos", rx989_pos
    $P11 = rx989_cur."ws"()
    repr_get_attr_int $I11, $P11, rx989_curclass, "$!pos"
    lt $I11, 0, rx989_fail2152
    repr_get_attr_int rx989_pos, $P11, rx989_curclass, "$!pos"
  alt1002_end2173:
    repr_bind_attr_int rx989_cur, rx989_curclass, "$!pos", rx989_pos
    $P11 = rx989_cur."ws"()
    repr_get_attr_int $I11, $P11, rx989_curclass, "$!pos"
    lt $I11, 0, rx989_fail2152
    repr_get_attr_int rx989_pos, $P11, rx989_curclass, "$!pos"
    nqp_rxmark rx989_bstack, rxquantr1012_done2186, rx989_pos, 0
  rxquantr1012_loop2185:
    repr_bind_attr_int rx989_cur, rx989_curclass, "$!pos", rx989_pos
    $P11 = rx989_cur."trait"()
    repr_get_attr_int $I11, $P11, rx989_curclass, "$!pos"
    lt $I11, 0, rx989_fail2152
    goto rxsubrule1013_pass2187
  rxsubrule1013_back2188:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx989_curclass, "$!pos"
    lt $I11, 0, rx989_fail2152
  rxsubrule1013_pass2187:
    rx989_cstack = rx989_cur."!cursor_capture"($P11, "trait")
    set_addr $I11, rxsubrule1013_back2188
    push rx989_bstack, $I11
    push rx989_bstack, 0
    push rx989_bstack, rx989_pos
    elements $I11, rx989_cstack
    push rx989_bstack, $I11
    repr_get_attr_int rx989_pos, $P11, rx989_curclass, "$!pos"
    nqp_rxpeek $I19, rx989_bstack, rxquantr1012_done2186
    inc $I19
    inc $I19
    set rx989_rep, rx989_bstack[$I19]
    nqp_rxcommit rx989_bstack, rxquantr1012_done2186
    inc rx989_rep
    nqp_rxmark rx989_bstack, rxquantr1012_done2186, rx989_pos, rx989_rep
    goto rxquantr1012_loop2185
  rxquantr1012_done2186:
    repr_bind_attr_int rx989_cur, rx989_curclass, "$!pos", rx989_pos
    $P11 = rx989_cur."ws"()
    repr_get_attr_int $I11, $P11, rx989_curclass, "$!pos"
    lt $I11, 0, rx989_fail2152
    repr_get_attr_int rx989_pos, $P11, rx989_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1015_02191
    nqp_push_label $P11, alt1015_12195
    nqp_rxmark rx989_bstack, alt1015_end2190, -1, 0
    rx989_cur."!alt"(rx989_pos, "alt_nfa__23_1367388603.65284", $P11)
    goto rx989_fail2152
  alt1015_02191:
    repr_bind_attr_int rx989_cur, rx989_curclass, "$!pos", rx989_pos
    $P11 = rx989_cur."ws"()
    repr_get_attr_int $I11, $P11, rx989_curclass, "$!pos"
    lt $I11, 0, rx989_fail2152
    repr_get_attr_int rx989_pos, $P11, rx989_curclass, "$!pos"
    repr_bind_attr_int rx989_cur, rx989_curclass, "$!pos", rx989_pos
    $P11 = rx989_cur."onlystar"()
    repr_get_attr_int $I11, $P11, rx989_curclass, "$!pos"
    lt $I11, 0, rx989_fail2152
    nqp_rxmark rx989_bstack, rxsubrule1017_pass2193, -1, 0
  rxsubrule1017_pass2193:
    rx989_cstack = rx989_cur."!cursor_capture"($P11, "onlystar")
    repr_get_attr_int rx989_pos, $P11, rx989_curclass, "$!pos"
    repr_bind_attr_int rx989_cur, rx989_curclass, "$!pos", rx989_pos
    $P11 = rx989_cur."ws"()
    repr_get_attr_int $I11, $P11, rx989_curclass, "$!pos"
    lt $I11, 0, rx989_fail2152
    repr_get_attr_int rx989_pos, $P11, rx989_curclass, "$!pos"
    goto alt1015_end2190
  alt1015_12195:
    repr_bind_attr_int rx989_cur, rx989_curclass, "$!pos", rx989_pos
    $P11 = rx989_cur."ws"()
    repr_get_attr_int $I11, $P11, rx989_curclass, "$!pos"
    lt $I11, 0, rx989_fail2152
    repr_get_attr_int rx989_pos, $P11, rx989_curclass, "$!pos"
    repr_bind_attr_int rx989_cur, rx989_curclass, "$!pos", rx989_pos
    $P11 = rx989_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx989_curclass, "$!pos"
    lt $I11, 0, rx989_fail2152
    nqp_rxmark rx989_bstack, rxsubrule1020_pass2197, -1, 0
  rxsubrule1020_pass2197:
    rx989_cstack = rx989_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx989_pos, $P11, rx989_curclass, "$!pos"
    repr_bind_attr_int rx989_cur, rx989_curclass, "$!pos", rx989_pos
    $P11 = rx989_cur."ws"()
    repr_get_attr_int $I11, $P11, rx989_curclass, "$!pos"
    lt $I11, 0, rx989_fail2152
    repr_get_attr_int rx989_pos, $P11, rx989_curclass, "$!pos"
    goto alt1015_end2190
  alt1015_end2190:
    nqp_rxcommit rx989_bstack, alt1015_end2190
    repr_bind_attr_int rx989_cur, rx989_curclass, "$!pos", rx989_pos
    $P11 = rx989_cur."ws"()
    repr_get_attr_int $I11, $P11, rx989_curclass, "$!pos"
    lt $I11, 0, rx989_fail2152
    repr_get_attr_int rx989_pos, $P11, rx989_curclass, "$!pos"
    rx989_cur."!cursor_pass"(rx989_pos, "routine_def", 'backtrack'=>1)
    .return (rx989_cur)
  rx989_restart2151:
    repr_get_attr_obj rx989_cstack, rx989_cur, rx989_curclass, "$!cstack"
  rx989_fail2152:
    unless rx989_bstack, rx989_done2150
    pop $I19, rx989_bstack
    if_null rx989_cstack, rx989_cstack_done2155
    unless rx989_cstack, rx989_cstack_done2155
    dec $I19
    set $P11, rx989_cstack[$I19]
  rx989_cstack_done2155:
    pop rx989_rep, rx989_bstack
    pop rx989_pos, rx989_bstack
    pop $I19, rx989_bstack
    lt rx989_pos, -1, rx989_done2150
    lt rx989_pos, 0, rx989_fail2152
    eq $I19, 0, rx989_fail2152
    nqp_islist $I20, rx989_cstack
    unless $I20, rx989_jump2153
    elements $I18, rx989_bstack
    le $I18, 0, rx989_cut2154
    dec $I18
    set $I18, rx989_bstack[$I18]
  rx989_cut2154:
    assign rx989_cstack, $I18
  rx989_jump2153:
    jump $I19
  rx989_done2150:
    rx989_cur."!cursor_fail"()
    .return (rx989_cur) 
.end
.HLL "nqp"
.namespace []
.sub "method_def" :subid("cuid_123_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1103
    .param pmc _lex_param_0 
    .const 'Sub' $P5008 = 'cuid_408_1367388600.55005' 
    capture_lex $P5008 
    .lex "$*RETURN_USED", $P101 
    .lex "$*INVOCANT_OK", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx1023_start
    .local string rx1023_tgt
    .local int rx1023_pos
    .local int rx1023_off
    .local int rx1023_eos
    .local int rx1023_rep
    .local pmc rx1023_cur
    .local pmc rx1023_curclass
    .local pmc rx1023_bstack
    .local pmc rx1023_cstack
    rx1023_start = self."!cursor_start_all"()
    set rx1023_cur, rx1023_start[0]
    set rx1023_tgt, rx1023_start[1]
    set rx1023_pos, rx1023_start[2]
    set rx1023_curclass, rx1023_start[3]
    set rx1023_bstack, rx1023_start[4]
    set $I19, rx1023_start[5]
    store_lex unicode:"$\x{a2}", rx1023_cur
    length rx1023_eos, rx1023_tgt
    eq $I19, 1, rx1023_restart2202
    gt rx1023_pos, rx1023_eos, rx1023_fail2203
    repr_get_attr_int $I11, self, rx1023_curclass, "$!from"
    ne $I11, -1, rxscan1024_done2209
    goto rxscan1024_scan2208
  rxscan1024_loop2207:
    inc rx1023_pos
    gt rx1023_pos, rx1023_eos, rx1023_fail2203
    repr_bind_attr_int rx1023_cur, rx1023_curclass, "$!from", rx1023_pos
  rxscan1024_scan2208:
    nqp_rxmark rx1023_bstack, rxscan1024_loop2207, rx1023_pos, 0
  rxscan1024_done2209:
    repr_bind_attr_int rx1023_cur, rx1023_curclass, "$!pos", rx1023_pos
    $P11 = rx1023_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1023_curclass, "$!pos"
    lt $I11, 0, rx1023_fail2203
    repr_get_attr_int rx1023_pos, $P11, rx1023_curclass, "$!pos"
    repr_bind_attr_int rx1023_cur, rx1023_curclass, "$!pos", rx1023_pos
    store_lex unicode:"$\x{a2}", rx1023_cur
    box $P5003, 0
    set $P101, $P5003
    repr_bind_attr_int rx1023_cur, rx1023_curclass, "$!pos", rx1023_pos
    $P11 = rx1023_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1023_curclass, "$!pos"
    lt $I11, 0, rx1023_fail2203
    repr_get_attr_int rx1023_pos, $P11, rx1023_curclass, "$!pos"
    repr_bind_attr_int rx1023_cur, rx1023_curclass, "$!pos", rx1023_pos
    store_lex unicode:"$\x{a2}", rx1023_cur
    box $P5004, 1
    set $P102, $P5004
    repr_bind_attr_int rx1023_cur, rx1023_curclass, "$!pos", rx1023_pos
    $P11 = rx1023_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1023_curclass, "$!pos"
    lt $I11, 0, rx1023_fail2203
    repr_get_attr_int rx1023_pos, $P11, rx1023_curclass, "$!pos"
  alt1028_02214:
    nqp_rxmark rx1023_bstack, alt1028_12220, rx1023_pos, 0
    repr_bind_attr_int rx1023_cur, rx1023_curclass, "$!pos", rx1023_pos
    $P11 = rx1023_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1023_curclass, "$!pos"
    lt $I11, 0, rx1023_fail2203
    repr_get_attr_int rx1023_pos, $P11, rx1023_curclass, "$!pos"
    add $I11, rx1023_pos, 3
    gt $I11, rx1023_eos, rx1023_fail2203
    substr $S10, rx1023_tgt, rx1023_pos, 3
    ne $S10, ucs4:"::(", rx1023_fail2203
    add rx1023_pos, 3
    repr_bind_attr_int rx1023_cur, rx1023_curclass, "$!pos", rx1023_pos
    $P11 = rx1023_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1023_curclass, "$!pos"
    lt $I11, 0, rx1023_fail2203
    repr_get_attr_int rx1023_pos, $P11, rx1023_curclass, "$!pos"
    repr_bind_attr_int rx1023_cur, rx1023_curclass, "$!pos", rx1023_pos
    $P11 = rx1023_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1023_curclass, "$!pos"
    lt $I11, 0, rx1023_fail2203
    nqp_rxmark rx1023_bstack, rxsubrule1031_pass2217, -1, 0
  rxsubrule1031_pass2217:
    rx1023_cstack = rx1023_cur."!cursor_capture"($P11, "latename=variable")
    repr_get_attr_int rx1023_pos, $P11, rx1023_curclass, "$!pos"
    repr_bind_attr_int rx1023_cur, rx1023_curclass, "$!pos", rx1023_pos
    $P11 = rx1023_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1023_curclass, "$!pos"
    lt $I11, 0, rx1023_fail2203
    repr_get_attr_int rx1023_pos, $P11, rx1023_curclass, "$!pos"
    add $I11, rx1023_pos, 1
    gt $I11, rx1023_eos, rx1023_fail2203
    substr $S10, rx1023_tgt, rx1023_pos, 1
    ne $S10, ucs4:")", rx1023_fail2203
    add rx1023_pos, 1
    repr_bind_attr_int rx1023_cur, rx1023_curclass, "$!pos", rx1023_pos
    $P11 = rx1023_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1023_curclass, "$!pos"
    lt $I11, 0, rx1023_fail2203
    repr_get_attr_int rx1023_pos, $P11, rx1023_curclass, "$!pos"
    goto alt1028_end2213
  alt1028_12220:
    repr_bind_attr_int rx1023_cur, rx1023_curclass, "$!pos", rx1023_pos
    $P11 = rx1023_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1023_curclass, "$!pos"
    lt $I11, 0, rx1023_fail2203
    repr_get_attr_int rx1023_pos, $P11, rx1023_curclass, "$!pos"
    nqp_rxmark rx1023_bstack, rxcap1035_fail2223, rx1023_pos, 0
    nqp_rxmark rx1023_bstack, rxquantr1036_done2225, rx1023_pos, 0
  rxquantr1036_loop2224:
    add $I11, rx1023_pos, 1
    gt $I11, rx1023_eos, rx1023_fail2203
    substr $S10, rx1023_tgt, rx1023_pos, 1
    ne $S10, ucs4:"!", rx1023_fail2203
    add rx1023_pos, 1
    nqp_rxpeek $I19, rx1023_bstack, rxquantr1036_done2225
    inc $I19
    inc $I19
    set rx1023_rep, rx1023_bstack[$I19]
    nqp_rxcommit rx1023_bstack, rxquantr1036_done2225
    inc rx1023_rep
  rxquantr1036_done2225:
    nqp_rxpeek $I19, rx1023_bstack, rxcap1035_fail2223
    inc $I19
    set $I11, rx1023_bstack[$I19]
    repr_bind_attr_int rx1023_cur, rx1023_curclass, "$!pos", rx1023_pos
    $P11 = rx1023_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1023_pos)
    rx1023_cstack = rx1023_cur."!cursor_capture"($P11, "private")
    goto rxcap1035_done2222
  rxcap1035_fail2223:
    goto rx1023_fail2203
  rxcap1035_done2222:
    repr_bind_attr_int rx1023_cur, rx1023_curclass, "$!pos", rx1023_pos
    $P11 = rx1023_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1023_curclass, "$!pos"
    lt $I11, 0, rx1023_fail2203
    repr_get_attr_int rx1023_pos, $P11, rx1023_curclass, "$!pos"
    nqp_rxmark rx1023_bstack, rxquantr1038_done2228, rx1023_pos, 0
  rxquantr1038_loop2227:
    repr_bind_attr_int rx1023_cur, rx1023_curclass, "$!pos", rx1023_pos
    $P11 = rx1023_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1023_curclass, "$!pos"
    lt $I11, 0, rx1023_fail2203
    goto rxsubrule1039_pass2229
  rxsubrule1039_back2230:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1023_curclass, "$!pos"
    lt $I11, 0, rx1023_fail2203
  rxsubrule1039_pass2229:
    rx1023_cstack = rx1023_cur."!cursor_capture"($P11, "deflongname")
    set_addr $I11, rxsubrule1039_back2230
    push rx1023_bstack, $I11
    push rx1023_bstack, 0
    push rx1023_bstack, rx1023_pos
    elements $I11, rx1023_cstack
    push rx1023_bstack, $I11
    repr_get_attr_int rx1023_pos, $P11, rx1023_curclass, "$!pos"
    nqp_rxpeek $I19, rx1023_bstack, rxquantr1038_done2228
    inc $I19
    inc $I19
    set rx1023_rep, rx1023_bstack[$I19]
    nqp_rxcommit rx1023_bstack, rxquantr1038_done2228
    inc rx1023_rep
  rxquantr1038_done2228:
    repr_bind_attr_int rx1023_cur, rx1023_curclass, "$!pos", rx1023_pos
    $P11 = rx1023_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1023_curclass, "$!pos"
    lt $I11, 0, rx1023_fail2203
    repr_get_attr_int rx1023_pos, $P11, rx1023_curclass, "$!pos"
  alt1028_end2213:
    repr_bind_attr_int rx1023_cur, rx1023_curclass, "$!pos", rx1023_pos
    $P11 = rx1023_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1023_curclass, "$!pos"
    lt $I11, 0, rx1023_fail2203
    repr_get_attr_int rx1023_pos, $P11, rx1023_curclass, "$!pos"
    repr_bind_attr_int rx1023_cur, rx1023_curclass, "$!pos", rx1023_pos
    $P11 = rx1023_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx1023_curclass, "$!pos"
    lt $I11, 0, rx1023_fail2203
    repr_get_attr_int rx1023_pos, $P11, rx1023_curclass, "$!pos"
    repr_bind_attr_int rx1023_cur, rx1023_curclass, "$!pos", rx1023_pos
    $P11 = rx1023_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1023_curclass, "$!pos"
    lt $I11, 0, rx1023_fail2203
    repr_get_attr_int rx1023_pos, $P11, rx1023_curclass, "$!pos"
  alt1044_02236:
    nqp_rxmark rx1023_bstack, alt1044_12242, rx1023_pos, 0
    repr_bind_attr_int rx1023_cur, rx1023_curclass, "$!pos", rx1023_pos
    $P11 = rx1023_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1023_curclass, "$!pos"
    lt $I11, 0, rx1023_fail2203
    repr_get_attr_int rx1023_pos, $P11, rx1023_curclass, "$!pos"
    add $I11, rx1023_pos, 1
    gt $I11, rx1023_eos, rx1023_fail2203
    substr $S10, rx1023_tgt, rx1023_pos, 1
    ne $S10, ucs4:"(", rx1023_fail2203
    add rx1023_pos, 1
    repr_bind_attr_int rx1023_cur, rx1023_curclass, "$!pos", rx1023_pos
    $P11 = rx1023_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1023_curclass, "$!pos"
    lt $I11, 0, rx1023_fail2203
    repr_get_attr_int rx1023_pos, $P11, rx1023_curclass, "$!pos"
    repr_bind_attr_int rx1023_cur, rx1023_curclass, "$!pos", rx1023_pos
    $P11 = rx1023_cur."signature"()
    repr_get_attr_int $I11, $P11, rx1023_curclass, "$!pos"
    lt $I11, 0, rx1023_fail2203
    nqp_rxmark rx1023_bstack, rxsubrule1047_pass2239, -1, 0
  rxsubrule1047_pass2239:
    rx1023_cstack = rx1023_cur."!cursor_capture"($P11, "signature")
    repr_get_attr_int rx1023_pos, $P11, rx1023_curclass, "$!pos"
    repr_bind_attr_int rx1023_cur, rx1023_curclass, "$!pos", rx1023_pos
    $P11 = rx1023_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1023_curclass, "$!pos"
    lt $I11, 0, rx1023_fail2203
    repr_get_attr_int rx1023_pos, $P11, rx1023_curclass, "$!pos"
    add $I11, rx1023_pos, 1
    gt $I11, rx1023_eos, rx1023_fail2203
    substr $S10, rx1023_tgt, rx1023_pos, 1
    ne $S10, ucs4:")", rx1023_fail2203
    add rx1023_pos, 1
    repr_bind_attr_int rx1023_cur, rx1023_curclass, "$!pos", rx1023_pos
    $P11 = rx1023_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1023_curclass, "$!pos"
    lt $I11, 0, rx1023_fail2203
    repr_get_attr_int rx1023_pos, $P11, rx1023_curclass, "$!pos"
    goto alt1044_end2235
  alt1044_12242:
    repr_bind_attr_int rx1023_cur, rx1023_curclass, "$!pos", rx1023_pos
    $P11 = rx1023_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1023_curclass, "$!pos"
    lt $I11, 0, rx1023_fail2203
    repr_get_attr_int rx1023_pos, $P11, rx1023_curclass, "$!pos"
    repr_bind_attr_int rx1023_cur, rx1023_curclass, "$!pos", rx1023_pos
    $P11 = rx1023_cur."panic"("Routine declaration requires a signature")
    repr_get_attr_int $I11, $P11, rx1023_curclass, "$!pos"
    lt $I11, 0, rx1023_fail2203
    repr_get_attr_int rx1023_pos, $P11, rx1023_curclass, "$!pos"
    repr_bind_attr_int rx1023_cur, rx1023_curclass, "$!pos", rx1023_pos
    $P11 = rx1023_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1023_curclass, "$!pos"
    lt $I11, 0, rx1023_fail2203
    repr_get_attr_int rx1023_pos, $P11, rx1023_curclass, "$!pos"
  alt1044_end2235:
    repr_bind_attr_int rx1023_cur, rx1023_curclass, "$!pos", rx1023_pos
    $P11 = rx1023_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1023_curclass, "$!pos"
    lt $I11, 0, rx1023_fail2203
    repr_get_attr_int rx1023_pos, $P11, rx1023_curclass, "$!pos"
    repr_bind_attr_int rx1023_cur, rx1023_curclass, "$!pos", rx1023_pos
    store_lex unicode:"$\x{a2}", rx1023_cur
    $P5005 = $P103."MATCH"()
    set $P104, $P5005
    .const 'Sub' $P5006 = 'cuid_408_1367388600.55005' 
    capture_lex $P5006
    $P5007 = $P5006()
    repr_bind_attr_int rx1023_cur, rx1023_curclass, "$!pos", rx1023_pos
    $P11 = rx1023_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1023_curclass, "$!pos"
    lt $I11, 0, rx1023_fail2203
    repr_get_attr_int rx1023_pos, $P11, rx1023_curclass, "$!pos"
    nqp_rxmark rx1023_bstack, rxquantr1055_done2249, rx1023_pos, 0
  rxquantr1055_loop2248:
    repr_bind_attr_int rx1023_cur, rx1023_curclass, "$!pos", rx1023_pos
    $P11 = rx1023_cur."trait"()
    repr_get_attr_int $I11, $P11, rx1023_curclass, "$!pos"
    lt $I11, 0, rx1023_fail2203
    goto rxsubrule1056_pass2250
  rxsubrule1056_back2251:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1023_curclass, "$!pos"
    lt $I11, 0, rx1023_fail2203
  rxsubrule1056_pass2250:
    rx1023_cstack = rx1023_cur."!cursor_capture"($P11, "trait")
    set_addr $I11, rxsubrule1056_back2251
    push rx1023_bstack, $I11
    push rx1023_bstack, 0
    push rx1023_bstack, rx1023_pos
    elements $I11, rx1023_cstack
    push rx1023_bstack, $I11
    repr_get_attr_int rx1023_pos, $P11, rx1023_curclass, "$!pos"
    nqp_rxpeek $I19, rx1023_bstack, rxquantr1055_done2249
    inc $I19
    inc $I19
    set rx1023_rep, rx1023_bstack[$I19]
    nqp_rxcommit rx1023_bstack, rxquantr1055_done2249
    inc rx1023_rep
    nqp_rxmark rx1023_bstack, rxquantr1055_done2249, rx1023_pos, rx1023_rep
    goto rxquantr1055_loop2248
  rxquantr1055_done2249:
    repr_bind_attr_int rx1023_cur, rx1023_curclass, "$!pos", rx1023_pos
    $P11 = rx1023_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1023_curclass, "$!pos"
    lt $I11, 0, rx1023_fail2203
    repr_get_attr_int rx1023_pos, $P11, rx1023_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1058_02254
    nqp_push_label $P11, alt1058_12258
    nqp_rxmark rx1023_bstack, alt1058_end2253, -1, 0
    rx1023_cur."!alt"(rx1023_pos, "alt_nfa__24_1367388603.69841", $P11)
    goto rx1023_fail2203
  alt1058_02254:
    repr_bind_attr_int rx1023_cur, rx1023_curclass, "$!pos", rx1023_pos
    $P11 = rx1023_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1023_curclass, "$!pos"
    lt $I11, 0, rx1023_fail2203
    repr_get_attr_int rx1023_pos, $P11, rx1023_curclass, "$!pos"
    repr_bind_attr_int rx1023_cur, rx1023_curclass, "$!pos", rx1023_pos
    $P11 = rx1023_cur."onlystar"()
    repr_get_attr_int $I11, $P11, rx1023_curclass, "$!pos"
    lt $I11, 0, rx1023_fail2203
    nqp_rxmark rx1023_bstack, rxsubrule1060_pass2256, -1, 0
  rxsubrule1060_pass2256:
    rx1023_cstack = rx1023_cur."!cursor_capture"($P11, "onlystar")
    repr_get_attr_int rx1023_pos, $P11, rx1023_curclass, "$!pos"
    repr_bind_attr_int rx1023_cur, rx1023_curclass, "$!pos", rx1023_pos
    $P11 = rx1023_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1023_curclass, "$!pos"
    lt $I11, 0, rx1023_fail2203
    repr_get_attr_int rx1023_pos, $P11, rx1023_curclass, "$!pos"
    goto alt1058_end2253
  alt1058_12258:
    repr_bind_attr_int rx1023_cur, rx1023_curclass, "$!pos", rx1023_pos
    $P11 = rx1023_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1023_curclass, "$!pos"
    lt $I11, 0, rx1023_fail2203
    repr_get_attr_int rx1023_pos, $P11, rx1023_curclass, "$!pos"
    repr_bind_attr_int rx1023_cur, rx1023_curclass, "$!pos", rx1023_pos
    $P11 = rx1023_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx1023_curclass, "$!pos"
    lt $I11, 0, rx1023_fail2203
    nqp_rxmark rx1023_bstack, rxsubrule1063_pass2260, -1, 0
  rxsubrule1063_pass2260:
    rx1023_cstack = rx1023_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx1023_pos, $P11, rx1023_curclass, "$!pos"
    repr_bind_attr_int rx1023_cur, rx1023_curclass, "$!pos", rx1023_pos
    $P11 = rx1023_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1023_curclass, "$!pos"
    lt $I11, 0, rx1023_fail2203
    repr_get_attr_int rx1023_pos, $P11, rx1023_curclass, "$!pos"
    goto alt1058_end2253
  alt1058_end2253:
    nqp_rxcommit rx1023_bstack, alt1058_end2253
    repr_bind_attr_int rx1023_cur, rx1023_curclass, "$!pos", rx1023_pos
    $P11 = rx1023_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1023_curclass, "$!pos"
    lt $I11, 0, rx1023_fail2203
    repr_get_attr_int rx1023_pos, $P11, rx1023_curclass, "$!pos"
    rx1023_cur."!cursor_pass"(rx1023_pos, "method_def", 'backtrack'=>1)
    .return (rx1023_cur)
  rx1023_restart2202:
    repr_get_attr_obj rx1023_cstack, rx1023_cur, rx1023_curclass, "$!cstack"
  rx1023_fail2203:
    unless rx1023_bstack, rx1023_done2201
    pop $I19, rx1023_bstack
    if_null rx1023_cstack, rx1023_cstack_done2206
    unless rx1023_cstack, rx1023_cstack_done2206
    dec $I19
    set $P11, rx1023_cstack[$I19]
  rx1023_cstack_done2206:
    pop rx1023_rep, rx1023_bstack
    pop rx1023_pos, rx1023_bstack
    pop $I19, rx1023_bstack
    lt rx1023_pos, -1, rx1023_done2201
    lt rx1023_pos, 0, rx1023_fail2203
    eq $I19, 0, rx1023_fail2203
    nqp_islist $I20, rx1023_cstack
    unless $I20, rx1023_jump2204
    elements $I18, rx1023_bstack
    le $I18, 0, rx1023_cut2205
    dec $I18
    set $I18, rx1023_bstack[$I18]
  rx1023_cut2205:
    assign rx1023_cstack, $I18
  rx1023_jump2204:
    jump $I19
  rx1023_done2201:
    rx1023_cur."!cursor_fail"()
    .return (rx1023_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_408_1367388600.55005") :anon :lex :outer("cuid_123_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1113

    box $P5001, 0
    store_dynamic_lex "$*INVOCANT_OK", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "onlystar" :subid("cuid_124_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1121
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_409_1367388600.55005' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1066_start
    .local string rx1066_tgt
    .local int rx1066_pos
    .local int rx1066_off
    .local int rx1066_eos
    .local int rx1066_rep
    .local pmc rx1066_cur
    .local pmc rx1066_curclass
    .local pmc rx1066_bstack
    .local pmc rx1066_cstack
    rx1066_start = self."!cursor_start_all"()
    set rx1066_cur, rx1066_start[0]
    set rx1066_tgt, rx1066_start[1]
    set rx1066_pos, rx1066_start[2]
    set rx1066_curclass, rx1066_start[3]
    set rx1066_bstack, rx1066_start[4]
    set $I19, rx1066_start[5]
    store_lex unicode:"$\x{a2}", rx1066_cur
    length rx1066_eos, rx1066_tgt
    eq $I19, 1, rx1066_restart2265
    gt rx1066_pos, rx1066_eos, rx1066_fail2266
    repr_get_attr_int $I11, self, rx1066_curclass, "$!from"
    ne $I11, -1, rxscan1067_done2272
    goto rxscan1067_scan2271
  rxscan1067_loop2270:
    inc rx1066_pos
    gt rx1066_pos, rx1066_eos, rx1066_fail2266
    repr_bind_attr_int rx1066_cur, rx1066_curclass, "$!from", rx1066_pos
  rxscan1067_scan2271:
    nqp_rxmark rx1066_bstack, rxscan1067_loop2270, rx1066_pos, 0
  rxscan1067_done2272:
    repr_bind_attr_int rx1066_cur, rx1066_curclass, "$!pos", rx1066_pos
    store_lex unicode:"$\x{a2}", rx1066_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_409_1367388600.55005' 
    capture_lex $P5002
    $P5003 = $P5002()
    unless $P5003, rx1066_fail2266
    add $I11, rx1066_pos, 1
    gt $I11, rx1066_eos, rx1066_fail2266
    substr $S10, rx1066_tgt, rx1066_pos, 1
    ne $S10, ucs4:"{", rx1066_fail2266
    add rx1066_pos, 1
    repr_bind_attr_int rx1066_cur, rx1066_curclass, "$!pos", rx1066_pos
    $P11 = rx1066_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1066_curclass, "$!pos"
    lt $I11, 0, rx1066_fail2266
    repr_get_attr_int rx1066_pos, $P11, rx1066_curclass, "$!pos"
    add $I11, rx1066_pos, 1
    gt $I11, rx1066_eos, rx1066_fail2266
    substr $S10, rx1066_tgt, rx1066_pos, 1
    ne $S10, ucs4:"*", rx1066_fail2266
    add rx1066_pos, 1
    repr_bind_attr_int rx1066_cur, rx1066_curclass, "$!pos", rx1066_pos
    $P11 = rx1066_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1066_curclass, "$!pos"
    lt $I11, 0, rx1066_fail2266
    repr_get_attr_int rx1066_pos, $P11, rx1066_curclass, "$!pos"
    add $I11, rx1066_pos, 1
    gt $I11, rx1066_eos, rx1066_fail2266
    substr $S10, rx1066_tgt, rx1066_pos, 1
    ne $S10, ucs4:"}", rx1066_fail2266
    add rx1066_pos, 1
    repr_bind_attr_int rx1066_cur, rx1066_curclass, "$!pos", rx1066_pos
    $P11 = rx1066_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1066_curclass, "$!pos"
    lt $I11, 0, rx1066_fail2266
    repr_bind_attr_int rx1066_cur, rx1066_curclass, "$!pos", rx1066_pos
    $P11 = rx1066_cur."finishpad"()
    repr_get_attr_int $I11, $P11, rx1066_curclass, "$!pos"
    lt $I11, 0, rx1066_fail2266
    repr_get_attr_int rx1066_pos, $P11, rx1066_curclass, "$!pos"
    rx1066_cur."!cursor_pass"(rx1066_pos, "onlystar", 'backtrack'=>1)
    .return (rx1066_cur)
  rx1066_restart2265:
    repr_get_attr_obj rx1066_cstack, rx1066_cur, rx1066_curclass, "$!cstack"
  rx1066_fail2266:
    unless rx1066_bstack, rx1066_done2264
    pop $I19, rx1066_bstack
    if_null rx1066_cstack, rx1066_cstack_done2269
    unless rx1066_cstack, rx1066_cstack_done2269
    dec $I19
    set $P11, rx1066_cstack[$I19]
  rx1066_cstack_done2269:
    pop rx1066_rep, rx1066_bstack
    pop rx1066_pos, rx1066_bstack
    pop $I19, rx1066_bstack
    lt rx1066_pos, -1, rx1066_done2264
    lt rx1066_pos, 0, rx1066_fail2266
    eq $I19, 0, rx1066_fail2266
    nqp_islist $I20, rx1066_cstack
    unless $I20, rx1066_jump2267
    elements $I18, rx1066_bstack
    le $I18, 0, rx1066_cut2268
    dec $I18
    set $I18, rx1066_bstack[$I18]
  rx1066_cut2268:
    assign rx1066_cstack, $I18
  rx1066_jump2267:
    jump $I19
  rx1066_done2264:
    rx1066_cur."!cursor_fail"()
    .return (rx1066_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_409_1367388600.55005") :anon :lex :outer("cuid_124_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1122
    .local pmc fb_tmp_148 
    find_dynamic_lex $P5001, "$*MULTINESS"
    unless_null $P5001, fallback2273
    nqp_get_sc_object $P5003, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5002, $P5003
    set fb_tmp_148, $P5002
    repr_defined $I5002, fb_tmp_148
    unless $I5002 goto if1068_else2274 
    set $P5004, fb_tmp_148["$MULTINESS"]
    set $P5006, $P5004
    goto if1068_end2275
  if1068_else2274:
    null $P5005
    set $P5006, $P5005
  if1068_end2275:
    unless_null $P5006, vivi_10692276
    nqp_get_sc_object $P5007, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5006, $P5007
  vivi_10692276:
    unless_null $P5006, vivi_10702277
    die "Contextual $*MULTINESS not found"
    box $P5008, "Contextual $*MULTINESS not found"
    set $P5006, $P5008
  vivi_10702277:
    set $P5001, $P5006
  fallback2273:
    set $S5001, $P5001
    iseq $I5001, $S5001, "proto"
    .return ($I5001) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator" :subid("cuid_125_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1128
    .param pmc self 
    $P5001 = self."!protoregex"("multi_declarator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<multi>" :subid("cuid_126_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1129
    .param pmc _lex_param_0 
    .lex "$*MULTINESS", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1074_start
    .local string rx1074_tgt
    .local int rx1074_pos
    .local int rx1074_off
    .local int rx1074_eos
    .local int rx1074_rep
    .local pmc rx1074_cur
    .local pmc rx1074_curclass
    .local pmc rx1074_bstack
    .local pmc rx1074_cstack
    rx1074_start = self."!cursor_start_all"()
    set rx1074_cur, rx1074_start[0]
    set rx1074_tgt, rx1074_start[1]
    set rx1074_pos, rx1074_start[2]
    set rx1074_curclass, rx1074_start[3]
    set rx1074_bstack, rx1074_start[4]
    set $I19, rx1074_start[5]
    store_lex unicode:"$\x{a2}", rx1074_cur
    length rx1074_eos, rx1074_tgt
    eq $I19, 1, rx1074_restart2283
    gt rx1074_pos, rx1074_eos, rx1074_fail2284
    repr_get_attr_int $I11, self, rx1074_curclass, "$!from"
    ne $I11, -1, rxscan1075_done2290
    goto rxscan1075_scan2289
  rxscan1075_loop2288:
    inc rx1074_pos
    gt rx1074_pos, rx1074_eos, rx1074_fail2284
    repr_bind_attr_int rx1074_cur, rx1074_curclass, "$!from", rx1074_pos
  rxscan1075_scan2289:
    nqp_rxmark rx1074_bstack, rxscan1075_loop2288, rx1074_pos, 0
  rxscan1075_done2290:
    repr_bind_attr_int rx1074_cur, rx1074_curclass, "$!pos", rx1074_pos
    store_lex unicode:"$\x{a2}", rx1074_cur
    box $P5002, "multi"
    set $P101, $P5002
    nqp_rxmark rx1074_bstack, rxcap1076_fail2292, rx1074_pos, 0
    add $I11, rx1074_pos, 5
    gt $I11, rx1074_eos, rx1074_fail2284
    substr $S10, rx1074_tgt, rx1074_pos, 5
    ne $S10, ucs4:"multi", rx1074_fail2284
    add rx1074_pos, 5
    nqp_rxpeek $I19, rx1074_bstack, rxcap1076_fail2292
    inc $I19
    set $I11, rx1074_bstack[$I19]
    repr_bind_attr_int rx1074_cur, rx1074_curclass, "$!pos", rx1074_pos
    $P11 = rx1074_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1074_pos)
    rx1074_cstack = rx1074_cur."!cursor_capture"($P11, "sym")
    goto rxcap1076_done2291
  rxcap1076_fail2292:
    goto rx1074_fail2284
  rxcap1076_done2291:
    repr_bind_attr_int rx1074_cur, rx1074_curclass, "$!pos", rx1074_pos
    $P11 = rx1074_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1074_curclass, "$!pos"
    lt $I11, 0, rx1074_fail2284
    repr_get_attr_int rx1074_pos, $P11, rx1074_curclass, "$!pos"
  alt1078_02295:
    nqp_rxmark rx1074_bstack, alt1078_12297, rx1074_pos, 0
    repr_bind_attr_int rx1074_cur, rx1074_curclass, "$!pos", rx1074_pos
    $P11 = rx1074_cur."declarator"()
    repr_get_attr_int $I11, $P11, rx1074_curclass, "$!pos"
    lt $I11, 0, rx1074_fail2284
    nqp_rxmark rx1074_bstack, rxsubrule1079_pass2296, -1, 0
  rxsubrule1079_pass2296:
    rx1074_cstack = rx1074_cur."!cursor_capture"($P11, "declarator")
    repr_get_attr_int rx1074_pos, $P11, rx1074_curclass, "$!pos"
    goto alt1078_end2294
  alt1078_12297:
    nqp_rxmark rx1074_bstack, alt1078_22299, rx1074_pos, 0
    repr_bind_attr_int rx1074_cur, rx1074_curclass, "$!pos", rx1074_pos
    $P11 = rx1074_cur."routine_def"()
    repr_get_attr_int $I11, $P11, rx1074_curclass, "$!pos"
    lt $I11, 0, rx1074_fail2284
    nqp_rxmark rx1074_bstack, rxsubrule1080_pass2298, -1, 0
  rxsubrule1080_pass2298:
    rx1074_cstack = rx1074_cur."!cursor_capture"($P11, "routine_def")
    repr_get_attr_int rx1074_pos, $P11, rx1074_curclass, "$!pos"
    goto alt1078_end2294
  alt1078_22299:
    repr_bind_attr_int rx1074_cur, rx1074_curclass, "$!pos", rx1074_pos
    $P11 = rx1074_cur."panic"("Malformed multi")
    repr_get_attr_int $I11, $P11, rx1074_curclass, "$!pos"
    lt $I11, 0, rx1074_fail2284
    repr_get_attr_int rx1074_pos, $P11, rx1074_curclass, "$!pos"
  alt1078_end2294:
    rx1074_cur."!cursor_pass"(rx1074_pos, "multi_declarator:sym<multi>", 'backtrack'=>1)
    .return (rx1074_cur)
  rx1074_restart2283:
    repr_get_attr_obj rx1074_cstack, rx1074_cur, rx1074_curclass, "$!cstack"
  rx1074_fail2284:
    unless rx1074_bstack, rx1074_done2282
    pop $I19, rx1074_bstack
    if_null rx1074_cstack, rx1074_cstack_done2287
    unless rx1074_cstack, rx1074_cstack_done2287
    dec $I19
    set $P11, rx1074_cstack[$I19]
  rx1074_cstack_done2287:
    pop rx1074_rep, rx1074_bstack
    pop rx1074_pos, rx1074_bstack
    pop $I19, rx1074_bstack
    lt rx1074_pos, -1, rx1074_done2282
    lt rx1074_pos, 0, rx1074_fail2284
    eq $I19, 0, rx1074_fail2284
    nqp_islist $I20, rx1074_cstack
    unless $I20, rx1074_jump2285
    elements $I18, rx1074_bstack
    le $I18, 0, rx1074_cut2286
    dec $I18
    set $I18, rx1074_bstack[$I18]
  rx1074_cut2286:
    assign rx1074_cstack, $I18
  rx1074_jump2285:
    jump $I19
  rx1074_done2282:
    rx1074_cur."!cursor_fail"()
    .return (rx1074_cur) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<proto>" :subid("cuid_127_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1134
    .param pmc _lex_param_0 
    .lex "$*MULTINESS", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1082_start
    .local string rx1082_tgt
    .local int rx1082_pos
    .local int rx1082_off
    .local int rx1082_eos
    .local int rx1082_rep
    .local pmc rx1082_cur
    .local pmc rx1082_curclass
    .local pmc rx1082_bstack
    .local pmc rx1082_cstack
    rx1082_start = self."!cursor_start_all"()
    set rx1082_cur, rx1082_start[0]
    set rx1082_tgt, rx1082_start[1]
    set rx1082_pos, rx1082_start[2]
    set rx1082_curclass, rx1082_start[3]
    set rx1082_bstack, rx1082_start[4]
    set $I19, rx1082_start[5]
    store_lex unicode:"$\x{a2}", rx1082_cur
    length rx1082_eos, rx1082_tgt
    eq $I19, 1, rx1082_restart2303
    gt rx1082_pos, rx1082_eos, rx1082_fail2304
    repr_get_attr_int $I11, self, rx1082_curclass, "$!from"
    ne $I11, -1, rxscan1083_done2310
    goto rxscan1083_scan2309
  rxscan1083_loop2308:
    inc rx1082_pos
    gt rx1082_pos, rx1082_eos, rx1082_fail2304
    repr_bind_attr_int rx1082_cur, rx1082_curclass, "$!from", rx1082_pos
  rxscan1083_scan2309:
    nqp_rxmark rx1082_bstack, rxscan1083_loop2308, rx1082_pos, 0
  rxscan1083_done2310:
    repr_bind_attr_int rx1082_cur, rx1082_curclass, "$!pos", rx1082_pos
    store_lex unicode:"$\x{a2}", rx1082_cur
    box $P5002, "proto"
    set $P101, $P5002
    nqp_rxmark rx1082_bstack, rxcap1084_fail2312, rx1082_pos, 0
    add $I11, rx1082_pos, 5
    gt $I11, rx1082_eos, rx1082_fail2304
    substr $S10, rx1082_tgt, rx1082_pos, 5
    ne $S10, ucs4:"proto", rx1082_fail2304
    add rx1082_pos, 5
    nqp_rxpeek $I19, rx1082_bstack, rxcap1084_fail2312
    inc $I19
    set $I11, rx1082_bstack[$I19]
    repr_bind_attr_int rx1082_cur, rx1082_curclass, "$!pos", rx1082_pos
    $P11 = rx1082_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1082_pos)
    rx1082_cstack = rx1082_cur."!cursor_capture"($P11, "sym")
    goto rxcap1084_done2311
  rxcap1084_fail2312:
    goto rx1082_fail2304
  rxcap1084_done2311:
    repr_bind_attr_int rx1082_cur, rx1082_curclass, "$!pos", rx1082_pos
    $P11 = rx1082_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1082_curclass, "$!pos"
    lt $I11, 0, rx1082_fail2304
    repr_get_attr_int rx1082_pos, $P11, rx1082_curclass, "$!pos"
  alt1086_02315:
    nqp_rxmark rx1082_bstack, alt1086_12317, rx1082_pos, 0
    repr_bind_attr_int rx1082_cur, rx1082_curclass, "$!pos", rx1082_pos
    $P11 = rx1082_cur."declarator"()
    repr_get_attr_int $I11, $P11, rx1082_curclass, "$!pos"
    lt $I11, 0, rx1082_fail2304
    nqp_rxmark rx1082_bstack, rxsubrule1087_pass2316, -1, 0
  rxsubrule1087_pass2316:
    rx1082_cstack = rx1082_cur."!cursor_capture"($P11, "declarator")
    repr_get_attr_int rx1082_pos, $P11, rx1082_curclass, "$!pos"
    goto alt1086_end2314
  alt1086_12317:
    nqp_rxmark rx1082_bstack, alt1086_22319, rx1082_pos, 0
    repr_bind_attr_int rx1082_cur, rx1082_curclass, "$!pos", rx1082_pos
    $P11 = rx1082_cur."routine_def"()
    repr_get_attr_int $I11, $P11, rx1082_curclass, "$!pos"
    lt $I11, 0, rx1082_fail2304
    nqp_rxmark rx1082_bstack, rxsubrule1088_pass2318, -1, 0
  rxsubrule1088_pass2318:
    rx1082_cstack = rx1082_cur."!cursor_capture"($P11, "routine_def")
    repr_get_attr_int rx1082_pos, $P11, rx1082_curclass, "$!pos"
    goto alt1086_end2314
  alt1086_22319:
    repr_bind_attr_int rx1082_cur, rx1082_curclass, "$!pos", rx1082_pos
    $P11 = rx1082_cur."panic"("Malformed proto")
    repr_get_attr_int $I11, $P11, rx1082_curclass, "$!pos"
    lt $I11, 0, rx1082_fail2304
    repr_get_attr_int rx1082_pos, $P11, rx1082_curclass, "$!pos"
  alt1086_end2314:
    rx1082_cur."!cursor_pass"(rx1082_pos, "multi_declarator:sym<proto>", 'backtrack'=>1)
    .return (rx1082_cur)
  rx1082_restart2303:
    repr_get_attr_obj rx1082_cstack, rx1082_cur, rx1082_curclass, "$!cstack"
  rx1082_fail2304:
    unless rx1082_bstack, rx1082_done2302
    pop $I19, rx1082_bstack
    if_null rx1082_cstack, rx1082_cstack_done2307
    unless rx1082_cstack, rx1082_cstack_done2307
    dec $I19
    set $P11, rx1082_cstack[$I19]
  rx1082_cstack_done2307:
    pop rx1082_rep, rx1082_bstack
    pop rx1082_pos, rx1082_bstack
    pop $I19, rx1082_bstack
    lt rx1082_pos, -1, rx1082_done2302
    lt rx1082_pos, 0, rx1082_fail2304
    eq $I19, 0, rx1082_fail2304
    nqp_islist $I20, rx1082_cstack
    unless $I20, rx1082_jump2305
    elements $I18, rx1082_bstack
    le $I18, 0, rx1082_cut2306
    dec $I18
    set $I18, rx1082_bstack[$I18]
  rx1082_cut2306:
    assign rx1082_cstack, $I18
  rx1082_jump2305:
    jump $I19
  rx1082_done2302:
    rx1082_cur."!cursor_fail"()
    .return (rx1082_cur) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<null>" :subid("cuid_128_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1139
    .param pmc _lex_param_0 
    .lex "$*MULTINESS", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1090_start
    .local string rx1090_tgt
    .local int rx1090_pos
    .local int rx1090_off
    .local int rx1090_eos
    .local int rx1090_rep
    .local pmc rx1090_cur
    .local pmc rx1090_curclass
    .local pmc rx1090_bstack
    .local pmc rx1090_cstack
    rx1090_start = self."!cursor_start_all"()
    set rx1090_cur, rx1090_start[0]
    set rx1090_tgt, rx1090_start[1]
    set rx1090_pos, rx1090_start[2]
    set rx1090_curclass, rx1090_start[3]
    set rx1090_bstack, rx1090_start[4]
    set $I19, rx1090_start[5]
    store_lex unicode:"$\x{a2}", rx1090_cur
    length rx1090_eos, rx1090_tgt
    eq $I19, 1, rx1090_restart2323
    gt rx1090_pos, rx1090_eos, rx1090_fail2324
    repr_get_attr_int $I11, self, rx1090_curclass, "$!from"
    ne $I11, -1, rxscan1091_done2330
    goto rxscan1091_scan2329
  rxscan1091_loop2328:
    inc rx1090_pos
    gt rx1090_pos, rx1090_eos, rx1090_fail2324
    repr_bind_attr_int rx1090_cur, rx1090_curclass, "$!from", rx1090_pos
  rxscan1091_scan2329:
    nqp_rxmark rx1090_bstack, rxscan1091_loop2328, rx1090_pos, 0
  rxscan1091_done2330:
    repr_bind_attr_int rx1090_cur, rx1090_curclass, "$!pos", rx1090_pos
    store_lex unicode:"$\x{a2}", rx1090_cur
    box $P5002, ""
    set $P101, $P5002
    repr_bind_attr_int rx1090_cur, rx1090_curclass, "$!pos", rx1090_pos
    $P11 = rx1090_cur."declarator"()
    repr_get_attr_int $I11, $P11, rx1090_curclass, "$!pos"
    lt $I11, 0, rx1090_fail2324
    nqp_rxmark rx1090_bstack, rxsubrule1092_pass2331, -1, 0
  rxsubrule1092_pass2331:
    rx1090_cstack = rx1090_cur."!cursor_capture"($P11, "declarator")
    repr_get_attr_int rx1090_pos, $P11, rx1090_curclass, "$!pos"
    rx1090_cur."!cursor_pass"(rx1090_pos, "multi_declarator:sym<null>", 'backtrack'=>1)
    .return (rx1090_cur)
  rx1090_restart2323:
    repr_get_attr_obj rx1090_cstack, rx1090_cur, rx1090_curclass, "$!cstack"
  rx1090_fail2324:
    unless rx1090_bstack, rx1090_done2322
    pop $I19, rx1090_bstack
    if_null rx1090_cstack, rx1090_cstack_done2327
    unless rx1090_cstack, rx1090_cstack_done2327
    dec $I19
    set $P11, rx1090_cstack[$I19]
  rx1090_cstack_done2327:
    pop rx1090_rep, rx1090_bstack
    pop rx1090_pos, rx1090_bstack
    pop $I19, rx1090_bstack
    lt rx1090_pos, -1, rx1090_done2322
    lt rx1090_pos, 0, rx1090_fail2324
    eq $I19, 0, rx1090_fail2324
    nqp_islist $I20, rx1090_cstack
    unless $I20, rx1090_jump2325
    elements $I18, rx1090_bstack
    le $I18, 0, rx1090_cut2326
    dec $I18
    set $I18, rx1090_bstack[$I18]
  rx1090_cut2326:
    assign rx1090_cstack, $I18
  rx1090_jump2325:
    jump $I19
  rx1090_done2322:
    rx1090_cur."!cursor_fail"()
    .return (rx1090_cur) 
.end
.HLL "nqp"
.namespace []
.sub "signature" :subid("cuid_129_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1144
    .param pmc _lex_param_0 
    .const 'Sub' $P5005 = 'cuid_410_1367388600.55005' 
    capture_lex $P5005 
    .const 'Sub' $P5005 = 'cuid_130_1367388600.55005' 
    capture_lex $P5005 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1093_start
    .local string rx1093_tgt
    .local int rx1093_pos
    .local int rx1093_off
    .local int rx1093_eos
    .local int rx1093_rep
    .local pmc rx1093_cur
    .local pmc rx1093_curclass
    .local pmc rx1093_bstack
    .local pmc rx1093_cstack
    rx1093_start = self."!cursor_start_all"()
    set rx1093_cur, rx1093_start[0]
    set rx1093_tgt, rx1093_start[1]
    set rx1093_pos, rx1093_start[2]
    set rx1093_curclass, rx1093_start[3]
    set rx1093_bstack, rx1093_start[4]
    set $I19, rx1093_start[5]
    store_lex unicode:"$\x{a2}", rx1093_cur
    length rx1093_eos, rx1093_tgt
    eq $I19, 1, rx1093_restart2334
    gt rx1093_pos, rx1093_eos, rx1093_fail2335
    repr_get_attr_int $I11, self, rx1093_curclass, "$!from"
    ne $I11, -1, rxscan1094_done2341
    goto rxscan1094_scan2340
  rxscan1094_loop2339:
    inc rx1093_pos
    gt rx1093_pos, rx1093_eos, rx1093_fail2335
    repr_bind_attr_int rx1093_cur, rx1093_curclass, "$!from", rx1093_pos
  rxscan1094_scan2340:
    nqp_rxmark rx1093_bstack, rxscan1094_loop2339, rx1093_pos, 0
  rxscan1094_done2341:
    nqp_rxmark rx1093_bstack, rxquantr1095_done2343, rx1093_pos, 0
  rxquantr1095_loop2342:
    repr_bind_attr_int rx1093_cur, rx1093_curclass, "$!pos", rx1093_pos
    store_lex unicode:"$\x{a2}", rx1093_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_410_1367388600.55005' 
    capture_lex $P5002
    $P5003 = $P5002()
    unless $P5003, rx1093_fail2335
    repr_bind_attr_int rx1093_cur, rx1093_curclass, "$!pos", rx1093_pos
    $P11 = rx1093_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1093_curclass, "$!pos"
    lt $I11, 0, rx1093_fail2335
    repr_get_attr_int rx1093_pos, $P11, rx1093_curclass, "$!pos"
    repr_bind_attr_int rx1093_cur, rx1093_curclass, "$!pos", rx1093_pos
    $P11 = rx1093_cur."parameter"()
    repr_get_attr_int $I11, $P11, rx1093_curclass, "$!pos"
    lt $I11, 0, rx1093_fail2335
    nqp_rxmark rx1093_bstack, rxsubrule1100_pass2350, -1, 0
  rxsubrule1100_pass2350:
    rx1093_cstack = rx1093_cur."!cursor_capture"($P11, "invocant")
    repr_get_attr_int rx1093_pos, $P11, rx1093_curclass, "$!pos"
    repr_bind_attr_int rx1093_cur, rx1093_curclass, "$!pos", rx1093_pos
    $P11 = rx1093_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1093_curclass, "$!pos"
    lt $I11, 0, rx1093_fail2335
    repr_get_attr_int rx1093_pos, $P11, rx1093_curclass, "$!pos"
    add $I11, rx1093_pos, 1
    gt $I11, rx1093_eos, rx1093_fail2335
    substr $S10, rx1093_tgt, rx1093_pos, 1
    ne $S10, ucs4:":", rx1093_fail2335
    add rx1093_pos, 1
    nqp_rxpeek $I19, rx1093_bstack, rxquantr1095_done2343
    inc $I19
    inc $I19
    set rx1093_rep, rx1093_bstack[$I19]
    nqp_rxcommit rx1093_bstack, rxquantr1095_done2343
    inc rx1093_rep
  rxquantr1095_done2343:
    nqp_rxmark rx1093_bstack, rxquantr1102_done2353, rx1093_pos, 0
  rxquantr1102_loop2352:
    nqp_rxmark rx1093_bstack, rxquantr1103_done2355, rx1093_pos, 0
  rxquantr1103_loop2354:
    repr_bind_attr_int rx1093_cur, rx1093_curclass, "$!pos", rx1093_pos
    $P11 = rx1093_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1093_curclass, "$!pos"
    lt $I11, 0, rx1093_fail2335
    repr_get_attr_int rx1093_pos, $P11, rx1093_curclass, "$!pos"
    repr_bind_attr_int rx1093_cur, rx1093_curclass, "$!pos", rx1093_pos
    $P11 = rx1093_cur."parameter"()
    repr_get_attr_int $I11, $P11, rx1093_curclass, "$!pos"
    lt $I11, 0, rx1093_fail2335
    nqp_rxmark rx1093_bstack, rxsubrule1105_pass2357, -1, 0
  rxsubrule1105_pass2357:
    rx1093_cstack = rx1093_cur."!cursor_capture"($P11, "parameter")
    repr_get_attr_int rx1093_pos, $P11, rx1093_curclass, "$!pos"
    repr_bind_attr_int rx1093_cur, rx1093_curclass, "$!pos", rx1093_pos
    $P11 = rx1093_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1093_curclass, "$!pos"
    lt $I11, 0, rx1093_fail2335
    repr_get_attr_int rx1093_pos, $P11, rx1093_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1107_02360
    nqp_push_label $P11, alt1107_12361
    nqp_rxmark rx1093_bstack, alt1107_end2359, -1, 0
    rx1093_cur."!alt"(rx1093_pos, "alt_nfa__26_1367388603.89126", $P11)
    goto rx1093_fail2335
  alt1107_02360:
    add $I11, rx1093_pos, 1
    gt $I11, rx1093_eos, rx1093_fail2335
    substr $S10, rx1093_tgt, rx1093_pos, 1
    ne $S10, ucs4:",", rx1093_fail2335
    add rx1093_pos, 1
    goto alt1107_end2359
  alt1107_12361:
    .const 'Sub' $P5004 = 'cuid_130_1367388600.55005' 
    capture_lex $P5004
    repr_bind_attr_int rx1093_cur, rx1093_curclass, "$!pos", rx1093_pos
    $P11 = rx1093_cur."before"($P5004)
    repr_get_attr_int $I11, $P11, rx1093_curclass, "$!pos"
    lt $I11, 0, rx1093_fail2335
    nqp_rxmark rx1093_bstack, rxsubrule1112_pass2377, -1, 0
  rxsubrule1112_pass2377:
    rx1093_cstack = rx1093_cur."!cursor_capture"($P11, "before")
    repr_get_attr_int rx1093_pos, $P11, rx1093_curclass, "$!pos"
    goto alt1107_end2359
  alt1107_end2359:
    nqp_rxcommit rx1093_bstack, alt1107_end2359
    nqp_rxpeek $I19, rx1093_bstack, rxquantr1103_done2355
    inc $I19
    inc $I19
    set rx1093_rep, rx1093_bstack[$I19]
    nqp_rxcommit rx1093_bstack, rxquantr1103_done2355
    inc rx1093_rep
    nqp_rxmark rx1093_bstack, rxquantr1103_done2355, rx1093_pos, rx1093_rep
    goto rxquantr1103_loop2354
  rxquantr1103_done2355:
    nqp_rxpeek $I19, rx1093_bstack, rxquantr1102_done2353
    inc $I19
    inc $I19
    set rx1093_rep, rx1093_bstack[$I19]
    nqp_rxcommit rx1093_bstack, rxquantr1102_done2353
    inc rx1093_rep
  rxquantr1102_done2353:
    rx1093_cur."!cursor_pass"(rx1093_pos, "signature", 'backtrack'=>1)
    .return (rx1093_cur)
  rx1093_restart2334:
    repr_get_attr_obj rx1093_cstack, rx1093_cur, rx1093_curclass, "$!cstack"
  rx1093_fail2335:
    unless rx1093_bstack, rx1093_done2333
    pop $I19, rx1093_bstack
    if_null rx1093_cstack, rx1093_cstack_done2338
    unless rx1093_cstack, rx1093_cstack_done2338
    dec $I19
    set $P11, rx1093_cstack[$I19]
  rx1093_cstack_done2338:
    pop rx1093_rep, rx1093_bstack
    pop rx1093_pos, rx1093_bstack
    pop $I19, rx1093_bstack
    lt rx1093_pos, -1, rx1093_done2333
    lt rx1093_pos, 0, rx1093_fail2335
    eq $I19, 0, rx1093_fail2335
    nqp_islist $I20, rx1093_cstack
    unless $I20, rx1093_jump2336
    elements $I18, rx1093_bstack
    le $I18, 0, rx1093_cut2337
    dec $I18
    set $I18, rx1093_bstack[$I18]
  rx1093_cut2337:
    assign rx1093_cstack, $I18
  rx1093_jump2336:
    jump $I19
  rx1093_done2333:
    rx1093_cur."!cursor_fail"()
    .return (rx1093_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_410_1367388600.55005") :anon :lex :outer("cuid_129_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1145
    .local pmc fb_tmp_149 
    find_dynamic_lex $P5001, "$*INVOCANT_OK"
    unless_null $P5001, fallback2344
    nqp_get_sc_object $P5003, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5002, $P5003
    set fb_tmp_149, $P5002
    repr_defined $I5001, fb_tmp_149
    unless $I5001 goto if1096_else2345 
    set $P5004, fb_tmp_149["$INVOCANT_OK"]
    set $P5006, $P5004
    goto if1096_end2346
  if1096_else2345:
    null $P5005
    set $P5006, $P5005
  if1096_end2346:
    unless_null $P5006, vivi_10972347
    nqp_get_sc_object $P5007, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5006, $P5007
  vivi_10972347:
    unless_null $P5006, vivi_10982348
    die "Contextual $*INVOCANT_OK not found"
    box $P5008, "Contextual $*INVOCANT_OK not found"
    set $P5006, $P5008
  vivi_10982348:
    set $P5001, $P5006
  fallback2344:
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_130_1367388600.55005") :anon :lex :outer("cuid_129_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1108_start
    .local string rx1108_tgt
    .local int rx1108_pos
    .local int rx1108_off
    .local int rx1108_eos
    .local int rx1108_rep
    .local pmc rx1108_cur
    .local pmc rx1108_curclass
    .local pmc rx1108_bstack
    .local pmc rx1108_cstack
    rx1108_start = self."!cursor_start_all"()
    set rx1108_cur, rx1108_start[0]
    set rx1108_tgt, rx1108_start[1]
    set rx1108_pos, rx1108_start[2]
    set rx1108_curclass, rx1108_start[3]
    set rx1108_bstack, rx1108_start[4]
    set $I19, rx1108_start[5]
    store_lex unicode:"$\x{a2}", rx1108_cur
    length rx1108_eos, rx1108_tgt
    eq $I19, 1, rx1108_restart2364
    gt rx1108_pos, rx1108_eos, rx1108_fail2365
    repr_get_attr_int $I11, self, rx1108_curclass, "$!from"
    ne $I11, -1, rxscan1109_done2371
    goto rxscan1109_scan2370
  rxscan1109_loop2369:
    inc rx1108_pos
    gt rx1108_pos, rx1108_eos, rx1108_fail2365
    repr_bind_attr_int rx1108_cur, rx1108_curclass, "$!from", rx1108_pos
  rxscan1109_scan2370:
    nqp_rxmark rx1108_bstack, rxscan1109_loop2369, rx1108_pos, 0
  rxscan1109_done2371:
    nqp_rxmark rx1108_bstack, rxquantr1110_done2373, rx1108_pos, 0
  rxquantr1110_loop2372:
    ge rx1108_pos, rx1108_eos, rx1108_fail2365
    is_cclass $I11, .CCLASS_WHITESPACE, rx1108_tgt, rx1108_pos
    unless $I11, rx1108_fail2365
    add rx1108_pos, 1
    nqp_rxpeek $I19, rx1108_bstack, rxquantr1110_done2373
    inc $I19
    inc $I19
    set rx1108_rep, rx1108_bstack[$I19]
    nqp_rxcommit rx1108_bstack, rxquantr1110_done2373
    inc rx1108_rep
    nqp_rxmark rx1108_bstack, rxquantr1110_done2373, rx1108_pos, rx1108_rep
    goto rxquantr1110_loop2372
  rxquantr1110_done2373:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1111_02375
    nqp_push_label $P11, alt1111_12376
    nqp_rxmark rx1108_bstack, alt1111_end2374, -1, 0
    rx1108_cur."!alt"(rx1108_pos, "alt_nfa__25_1367388603.88425", $P11)
    goto rx1108_fail2365
  alt1111_02375:
    add $I11, rx1108_pos, 1
    gt $I11, rx1108_eos, rx1108_fail2365
    substr $S10, rx1108_tgt, rx1108_pos, 1
    ne $S10, ucs4:")", rx1108_fail2365
    add rx1108_pos, 1
    goto alt1111_end2374
  alt1111_12376:
    add $I11, rx1108_pos, 1
    gt $I11, rx1108_eos, rx1108_fail2365
    substr $S10, rx1108_tgt, rx1108_pos, 1
    ne $S10, ucs4:"{", rx1108_fail2365
    add rx1108_pos, 1
    goto alt1111_end2374
  alt1111_end2374:
    nqp_rxcommit rx1108_bstack, alt1111_end2374
    rx1108_cur."!cursor_pass"(rx1108_pos, 'backtrack'=>1)
    .return (rx1108_cur)
  rx1108_restart2364:
    repr_get_attr_obj rx1108_cstack, rx1108_cur, rx1108_curclass, "$!cstack"
  rx1108_fail2365:
    unless rx1108_bstack, rx1108_done2363
    pop $I19, rx1108_bstack
    if_null rx1108_cstack, rx1108_cstack_done2368
    unless rx1108_cstack, rx1108_cstack_done2368
    dec $I19
    set $P11, rx1108_cstack[$I19]
  rx1108_cstack_done2368:
    pop rx1108_rep, rx1108_bstack
    pop rx1108_pos, rx1108_bstack
    pop $I19, rx1108_bstack
    lt rx1108_pos, -1, rx1108_done2363
    lt rx1108_pos, 0, rx1108_fail2365
    eq $I19, 0, rx1108_fail2365
    nqp_islist $I20, rx1108_cstack
    unless $I20, rx1108_jump2366
    elements $I18, rx1108_bstack
    le $I18, 0, rx1108_cut2367
    dec $I18
    set $I18, rx1108_bstack[$I18]
  rx1108_cut2367:
    assign rx1108_cstack, $I18
  rx1108_jump2366:
    jump $I19
  rx1108_done2363:
    rx1108_cur."!cursor_fail"()
    .return (rx1108_cur) 
.end
.HLL "nqp"
.namespace []
.sub "parameter" :subid("cuid_131_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1149
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1113_start
    .local string rx1113_tgt
    .local int rx1113_pos
    .local int rx1113_off
    .local int rx1113_eos
    .local int rx1113_rep
    .local pmc rx1113_cur
    .local pmc rx1113_curclass
    .local pmc rx1113_bstack
    .local pmc rx1113_cstack
    rx1113_start = self."!cursor_start_all"()
    set rx1113_cur, rx1113_start[0]
    set rx1113_tgt, rx1113_start[1]
    set rx1113_pos, rx1113_start[2]
    set rx1113_curclass, rx1113_start[3]
    set rx1113_bstack, rx1113_start[4]
    set $I19, rx1113_start[5]
    store_lex unicode:"$\x{a2}", rx1113_cur
    length rx1113_eos, rx1113_tgt
    eq $I19, 1, rx1113_restart2380
    gt rx1113_pos, rx1113_eos, rx1113_fail2381
    repr_get_attr_int $I11, self, rx1113_curclass, "$!from"
    ne $I11, -1, rxscan1114_done2387
    goto rxscan1114_scan2386
  rxscan1114_loop2385:
    inc rx1113_pos
    gt rx1113_pos, rx1113_eos, rx1113_fail2381
    repr_bind_attr_int rx1113_cur, rx1113_curclass, "$!from", rx1113_pos
  rxscan1114_scan2386:
    nqp_rxmark rx1113_bstack, rxscan1114_loop2385, rx1113_pos, 0
  rxscan1114_done2387:
    nqp_rxmark rx1113_bstack, rxquantr1115_done2389, rx1113_pos, 0
  rxquantr1115_loop2388:
    repr_bind_attr_int rx1113_cur, rx1113_curclass, "$!pos", rx1113_pos
    $P11 = rx1113_cur."typename"()
    repr_get_attr_int $I11, $P11, rx1113_curclass, "$!pos"
    lt $I11, 0, rx1113_fail2381
    nqp_rxmark rx1113_bstack, rxsubrule1116_pass2390, -1, 0
  rxsubrule1116_pass2390:
    rx1113_cstack = rx1113_cur."!cursor_capture"($P11, "typename")
    repr_get_attr_int rx1113_pos, $P11, rx1113_curclass, "$!pos"
    nqp_rxmark rx1113_bstack, rxquantr1117_done2392, rx1113_pos, 0
  rxquantr1117_loop2391:
    add $I11, rx1113_pos, 1
    gt $I11, rx1113_eos, rx1113_fail2381
    substr $S10, rx1113_tgt, rx1113_pos, 1
    ne $S10, ucs4:":", rx1113_fail2381
    add rx1113_pos, 1
    nqp_rxmark rx1113_bstack, rxcap1118_fail2394, rx1113_pos, 0
    ge rx1113_pos, rx1113_eos, rx1113_fail2381
    substr $S11, rx1113_tgt, rx1113_pos, 1
    index $I11, ucs4:"_DU", $S11
    lt $I11, 0, rx1113_fail2381
    inc rx1113_pos
    nqp_rxpeek $I19, rx1113_bstack, rxcap1118_fail2394
    inc $I19
    set $I11, rx1113_bstack[$I19]
    repr_bind_attr_int rx1113_cur, rx1113_curclass, "$!pos", rx1113_pos
    $P11 = rx1113_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1113_pos)
    rx1113_cstack = rx1113_cur."!cursor_capture"($P11, "definedness")
    goto rxcap1118_done2393
  rxcap1118_fail2394:
    goto rx1113_fail2381
  rxcap1118_done2393:
    nqp_rxpeek $I19, rx1113_bstack, rxquantr1117_done2392
    inc $I19
    inc $I19
    set rx1113_rep, rx1113_bstack[$I19]
    nqp_rxcommit rx1113_bstack, rxquantr1117_done2392
    inc rx1113_rep
  rxquantr1117_done2392:
    repr_bind_attr_int rx1113_cur, rx1113_curclass, "$!pos", rx1113_pos
    $P11 = rx1113_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1113_curclass, "$!pos"
    lt $I11, 0, rx1113_fail2381
    repr_get_attr_int rx1113_pos, $P11, rx1113_curclass, "$!pos"
    nqp_rxpeek $I19, rx1113_bstack, rxquantr1115_done2389
    inc $I19
    inc $I19
    set rx1113_rep, rx1113_bstack[$I19]
    nqp_rxcommit rx1113_bstack, rxquantr1115_done2389
    inc rx1113_rep
    nqp_rxmark rx1113_bstack, rxquantr1115_done2389, rx1113_pos, rx1113_rep
    goto rxquantr1115_loop2388
  rxquantr1115_done2389:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1120_02397
    nqp_push_label $P11, alt1120_12401
    nqp_rxmark rx1113_bstack, alt1120_end2396, -1, 0
    rx1113_cur."!alt"(rx1113_pos, "alt_nfa__29_1367388603.92463", $P11)
    goto rx1113_fail2381
  alt1120_02397:
    nqp_rxmark rx1113_bstack, rxcap1121_fail2399, rx1113_pos, 0
    add $I11, rx1113_pos, 1
    gt $I11, rx1113_eos, rx1113_fail2381
    substr $S10, rx1113_tgt, rx1113_pos, 1
    ne $S10, ucs4:"*", rx1113_fail2381
    add rx1113_pos, 1
    nqp_rxpeek $I19, rx1113_bstack, rxcap1121_fail2399
    inc $I19
    set $I11, rx1113_bstack[$I19]
    repr_bind_attr_int rx1113_cur, rx1113_curclass, "$!pos", rx1113_pos
    $P11 = rx1113_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1113_pos)
    rx1113_cstack = rx1113_cur."!cursor_capture"($P11, "quant")
    goto rxcap1121_done2398
  rxcap1121_fail2399:
    goto rx1113_fail2381
  rxcap1121_done2398:
    repr_bind_attr_int rx1113_cur, rx1113_curclass, "$!pos", rx1113_pos
    $P11 = rx1113_cur."param_var"()
    repr_get_attr_int $I11, $P11, rx1113_curclass, "$!pos"
    lt $I11, 0, rx1113_fail2381
    nqp_rxmark rx1113_bstack, rxsubrule1122_pass2400, -1, 0
  rxsubrule1122_pass2400:
    rx1113_cstack = rx1113_cur."!cursor_capture"($P11, "param_var")
    repr_get_attr_int rx1113_pos, $P11, rx1113_curclass, "$!pos"
    goto alt1120_end2396
  alt1120_12401:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1123_02403
    nqp_push_label $P11, alt1123_12405
    nqp_rxmark rx1113_bstack, alt1123_end2402, -1, 0
    rx1113_cur."!alt"(rx1113_pos, "alt_nfa__27_1367388603.92396", $P11)
    goto rx1113_fail2381
  alt1123_02403:
    repr_bind_attr_int rx1113_cur, rx1113_curclass, "$!pos", rx1113_pos
    $P11 = rx1113_cur."param_var"()
    repr_get_attr_int $I11, $P11, rx1113_curclass, "$!pos"
    lt $I11, 0, rx1113_fail2381
    nqp_rxmark rx1113_bstack, rxsubrule1124_pass2404, -1, 0
  rxsubrule1124_pass2404:
    rx1113_cstack = rx1113_cur."!cursor_capture"($P11, "param_var")
    repr_get_attr_int rx1113_pos, $P11, rx1113_curclass, "$!pos"
    goto alt1123_end2402
  alt1123_12405:
    repr_bind_attr_int rx1113_cur, rx1113_curclass, "$!pos", rx1113_pos
    $P11 = rx1113_cur."named_param"()
    repr_get_attr_int $I11, $P11, rx1113_curclass, "$!pos"
    lt $I11, 0, rx1113_fail2381
    nqp_rxmark rx1113_bstack, rxsubrule1125_pass2406, -1, 0
  rxsubrule1125_pass2406:
    rx1113_cstack = rx1113_cur."!cursor_capture"($P11, "named_param")
    repr_get_attr_int rx1113_pos, $P11, rx1113_curclass, "$!pos"
    goto alt1123_end2402
  alt1123_end2402:
    nqp_rxcommit rx1113_bstack, alt1123_end2402
    nqp_rxmark rx1113_bstack, rxcap1126_fail2408, rx1113_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1127_02410
    nqp_push_label $P11, alt1127_12411
    nqp_push_label $P11, alt1127_22412
    nqp_rxmark rx1113_bstack, alt1127_end2409, -1, 0
    rx1113_cur."!alt"(rx1113_pos, "alt_nfa__28_1367388603.92428", $P11)
    goto rx1113_fail2381
  alt1127_02410:
    add $I11, rx1113_pos, 1
    gt $I11, rx1113_eos, rx1113_fail2381
    substr $S10, rx1113_tgt, rx1113_pos, 1
    ne $S10, ucs4:"?", rx1113_fail2381
    add rx1113_pos, 1
    goto alt1127_end2409
  alt1127_12411:
    add $I11, rx1113_pos, 1
    gt $I11, rx1113_eos, rx1113_fail2381
    substr $S10, rx1113_tgt, rx1113_pos, 1
    ne $S10, ucs4:"!", rx1113_fail2381
    add rx1113_pos, 1
    goto alt1127_end2409
  alt1127_22412:
    goto alt1127_end2409
  alt1127_end2409:
    nqp_rxcommit rx1113_bstack, alt1127_end2409
    nqp_rxpeek $I19, rx1113_bstack, rxcap1126_fail2408
    inc $I19
    set $I11, rx1113_bstack[$I19]
    repr_bind_attr_int rx1113_cur, rx1113_curclass, "$!pos", rx1113_pos
    $P11 = rx1113_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1113_pos)
    rx1113_cstack = rx1113_cur."!cursor_capture"($P11, "quant")
    goto rxcap1126_done2407
  rxcap1126_fail2408:
    goto rx1113_fail2381
  rxcap1126_done2407:
    goto alt1120_end2396
  alt1120_end2396:
    nqp_rxcommit rx1113_bstack, alt1120_end2396
    nqp_rxmark rx1113_bstack, rxquantr1129_done2415, rx1113_pos, 0
  rxquantr1129_loop2414:
    repr_bind_attr_int rx1113_cur, rx1113_curclass, "$!pos", rx1113_pos
    $P11 = rx1113_cur."default_value"()
    repr_get_attr_int $I11, $P11, rx1113_curclass, "$!pos"
    lt $I11, 0, rx1113_fail2381
    goto rxsubrule1130_pass2416
  rxsubrule1130_back2417:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1113_curclass, "$!pos"
    lt $I11, 0, rx1113_fail2381
  rxsubrule1130_pass2416:
    rx1113_cstack = rx1113_cur."!cursor_capture"($P11, "default_value")
    set_addr $I11, rxsubrule1130_back2417
    push rx1113_bstack, $I11
    push rx1113_bstack, 0
    push rx1113_bstack, rx1113_pos
    elements $I11, rx1113_cstack
    push rx1113_bstack, $I11
    repr_get_attr_int rx1113_pos, $P11, rx1113_curclass, "$!pos"
    nqp_rxpeek $I19, rx1113_bstack, rxquantr1129_done2415
    inc $I19
    inc $I19
    set rx1113_rep, rx1113_bstack[$I19]
    nqp_rxcommit rx1113_bstack, rxquantr1129_done2415
    inc rx1113_rep
  rxquantr1129_done2415:
    rx1113_cur."!cursor_pass"(rx1113_pos, "parameter", 'backtrack'=>1)
    .return (rx1113_cur)
  rx1113_restart2380:
    repr_get_attr_obj rx1113_cstack, rx1113_cur, rx1113_curclass, "$!cstack"
  rx1113_fail2381:
    unless rx1113_bstack, rx1113_done2379
    pop $I19, rx1113_bstack
    if_null rx1113_cstack, rx1113_cstack_done2384
    unless rx1113_cstack, rx1113_cstack_done2384
    dec $I19
    set $P11, rx1113_cstack[$I19]
  rx1113_cstack_done2384:
    pop rx1113_rep, rx1113_bstack
    pop rx1113_pos, rx1113_bstack
    pop $I19, rx1113_bstack
    lt rx1113_pos, -1, rx1113_done2379
    lt rx1113_pos, 0, rx1113_fail2381
    eq $I19, 0, rx1113_fail2381
    nqp_islist $I20, rx1113_cstack
    unless $I20, rx1113_jump2382
    elements $I18, rx1113_bstack
    le $I18, 0, rx1113_cut2383
    dec $I18
    set $I18, rx1113_bstack[$I18]
  rx1113_cut2383:
    assign rx1113_cstack, $I18
  rx1113_jump2382:
    jump $I19
  rx1113_done2379:
    rx1113_cur."!cursor_fail"()
    .return (rx1113_cur) 
.end
.HLL "nqp"
.namespace []
.sub "param_var" :subid("cuid_132_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1158
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1131_start
    .local string rx1131_tgt
    .local int rx1131_pos
    .local int rx1131_off
    .local int rx1131_eos
    .local int rx1131_rep
    .local pmc rx1131_cur
    .local pmc rx1131_curclass
    .local pmc rx1131_bstack
    .local pmc rx1131_cstack
    rx1131_start = self."!cursor_start_all"()
    set rx1131_cur, rx1131_start[0]
    set rx1131_tgt, rx1131_start[1]
    set rx1131_pos, rx1131_start[2]
    set rx1131_curclass, rx1131_start[3]
    set rx1131_bstack, rx1131_start[4]
    set $I19, rx1131_start[5]
    store_lex unicode:"$\x{a2}", rx1131_cur
    length rx1131_eos, rx1131_tgt
    eq $I19, 1, rx1131_restart2420
    gt rx1131_pos, rx1131_eos, rx1131_fail2421
    repr_get_attr_int $I11, self, rx1131_curclass, "$!from"
    ne $I11, -1, rxscan1132_done2427
    goto rxscan1132_scan2426
  rxscan1132_loop2425:
    inc rx1131_pos
    gt rx1131_pos, rx1131_eos, rx1131_fail2421
    repr_bind_attr_int rx1131_cur, rx1131_curclass, "$!from", rx1131_pos
  rxscan1132_scan2426:
    nqp_rxmark rx1131_bstack, rxscan1132_loop2425, rx1131_pos, 0
  rxscan1132_done2427:
    repr_bind_attr_int rx1131_cur, rx1131_curclass, "$!pos", rx1131_pos
    $P11 = rx1131_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx1131_curclass, "$!pos"
    lt $I11, 0, rx1131_fail2421
    nqp_rxmark rx1131_bstack, rxsubrule1133_pass2428, -1, 0
  rxsubrule1133_pass2428:
    rx1131_cstack = rx1131_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx1131_pos, $P11, rx1131_curclass, "$!pos"
    nqp_rxmark rx1131_bstack, rxquantr1134_done2430, rx1131_pos, 0
  rxquantr1134_loop2429:
    repr_bind_attr_int rx1131_cur, rx1131_curclass, "$!pos", rx1131_pos
    $P11 = rx1131_cur."twigil"()
    repr_get_attr_int $I11, $P11, rx1131_curclass, "$!pos"
    lt $I11, 0, rx1131_fail2421
    goto rxsubrule1135_pass2431
  rxsubrule1135_back2432:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1131_curclass, "$!pos"
    lt $I11, 0, rx1131_fail2421
  rxsubrule1135_pass2431:
    rx1131_cstack = rx1131_cur."!cursor_capture"($P11, "twigil")
    set_addr $I11, rxsubrule1135_back2432
    push rx1131_bstack, $I11
    push rx1131_bstack, 0
    push rx1131_bstack, rx1131_pos
    elements $I11, rx1131_cstack
    push rx1131_bstack, $I11
    repr_get_attr_int rx1131_pos, $P11, rx1131_curclass, "$!pos"
    nqp_rxpeek $I19, rx1131_bstack, rxquantr1134_done2430
    inc $I19
    inc $I19
    set rx1131_rep, rx1131_bstack[$I19]
    nqp_rxcommit rx1131_bstack, rxquantr1134_done2430
    inc rx1131_rep
  rxquantr1134_done2430:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1136_02434
    nqp_push_label $P11, alt1136_12436
    nqp_rxmark rx1131_bstack, alt1136_end2433, -1, 0
    rx1131_cur."!alt"(rx1131_pos, "alt_nfa__30_1367388603.93839", $P11)
    goto rx1131_fail2421
  alt1136_02434:
    repr_bind_attr_int rx1131_cur, rx1131_curclass, "$!pos", rx1131_pos
    $P11 = rx1131_cur."ident"()
    repr_get_attr_int $I11, $P11, rx1131_curclass, "$!pos"
    lt $I11, 0, rx1131_fail2421
    nqp_rxmark rx1131_bstack, rxsubrule1137_pass2435, -1, 0
  rxsubrule1137_pass2435:
    rx1131_cstack = rx1131_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx1131_pos, $P11, rx1131_curclass, "$!pos"
    goto alt1136_end2433
  alt1136_12436:
    nqp_rxmark rx1131_bstack, rxcap1138_fail2438, rx1131_pos, 0
    ge rx1131_pos, rx1131_eos, rx1131_fail2421
    substr $S11, rx1131_tgt, rx1131_pos, 1
    index $I11, ucs4:"/!", $S11
    lt $I11, 0, rx1131_fail2421
    inc rx1131_pos
    nqp_rxpeek $I19, rx1131_bstack, rxcap1138_fail2438
    inc $I19
    set $I11, rx1131_bstack[$I19]
    repr_bind_attr_int rx1131_cur, rx1131_curclass, "$!pos", rx1131_pos
    $P11 = rx1131_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1131_pos)
    rx1131_cstack = rx1131_cur."!cursor_capture"($P11, "name")
    goto rxcap1138_done2437
  rxcap1138_fail2438:
    goto rx1131_fail2421
  rxcap1138_done2437:
    goto alt1136_end2433
  alt1136_end2433:
    nqp_rxcommit rx1131_bstack, alt1136_end2433
    rx1131_cur."!cursor_pass"(rx1131_pos, "param_var", 'backtrack'=>1)
    .return (rx1131_cur)
  rx1131_restart2420:
    repr_get_attr_obj rx1131_cstack, rx1131_cur, rx1131_curclass, "$!cstack"
  rx1131_fail2421:
    unless rx1131_bstack, rx1131_done2419
    pop $I19, rx1131_bstack
    if_null rx1131_cstack, rx1131_cstack_done2424
    unless rx1131_cstack, rx1131_cstack_done2424
    dec $I19
    set $P11, rx1131_cstack[$I19]
  rx1131_cstack_done2424:
    pop rx1131_rep, rx1131_bstack
    pop rx1131_pos, rx1131_bstack
    pop $I19, rx1131_bstack
    lt rx1131_pos, -1, rx1131_done2419
    lt rx1131_pos, 0, rx1131_fail2421
    eq $I19, 0, rx1131_fail2421
    nqp_islist $I20, rx1131_cstack
    unless $I20, rx1131_jump2422
    elements $I18, rx1131_bstack
    le $I18, 0, rx1131_cut2423
    dec $I18
    set $I18, rx1131_bstack[$I18]
  rx1131_cut2423:
    assign rx1131_cstack, $I18
  rx1131_jump2422:
    jump $I19
  rx1131_done2419:
    rx1131_cur."!cursor_fail"()
    .return (rx1131_cur) 
.end
.HLL "nqp"
.namespace []
.sub "named_param" :subid("cuid_133_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1163
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1139_start
    .local string rx1139_tgt
    .local int rx1139_pos
    .local int rx1139_off
    .local int rx1139_eos
    .local int rx1139_rep
    .local pmc rx1139_cur
    .local pmc rx1139_curclass
    .local pmc rx1139_bstack
    .local pmc rx1139_cstack
    rx1139_start = self."!cursor_start_all"()
    set rx1139_cur, rx1139_start[0]
    set rx1139_tgt, rx1139_start[1]
    set rx1139_pos, rx1139_start[2]
    set rx1139_curclass, rx1139_start[3]
    set rx1139_bstack, rx1139_start[4]
    set $I19, rx1139_start[5]
    store_lex unicode:"$\x{a2}", rx1139_cur
    length rx1139_eos, rx1139_tgt
    eq $I19, 1, rx1139_restart2441
    gt rx1139_pos, rx1139_eos, rx1139_fail2442
    repr_get_attr_int $I11, self, rx1139_curclass, "$!from"
    ne $I11, -1, rxscan1140_done2448
    goto rxscan1140_scan2447
  rxscan1140_loop2446:
    inc rx1139_pos
    gt rx1139_pos, rx1139_eos, rx1139_fail2442
    repr_bind_attr_int rx1139_cur, rx1139_curclass, "$!from", rx1139_pos
  rxscan1140_scan2447:
    nqp_rxmark rx1139_bstack, rxscan1140_loop2446, rx1139_pos, 0
  rxscan1140_done2448:
    add $I11, rx1139_pos, 1
    gt $I11, rx1139_eos, rx1139_fail2442
    substr $S10, rx1139_tgt, rx1139_pos, 1
    ne $S10, ucs4:":", rx1139_fail2442
    add rx1139_pos, 1
    repr_bind_attr_int rx1139_cur, rx1139_curclass, "$!pos", rx1139_pos
    $P11 = rx1139_cur."param_var"()
    repr_get_attr_int $I11, $P11, rx1139_curclass, "$!pos"
    lt $I11, 0, rx1139_fail2442
    nqp_rxmark rx1139_bstack, rxsubrule1141_pass2449, -1, 0
  rxsubrule1141_pass2449:
    rx1139_cstack = rx1139_cur."!cursor_capture"($P11, "param_var")
    repr_get_attr_int rx1139_pos, $P11, rx1139_curclass, "$!pos"
    rx1139_cur."!cursor_pass"(rx1139_pos, "named_param", 'backtrack'=>1)
    .return (rx1139_cur)
  rx1139_restart2441:
    repr_get_attr_obj rx1139_cstack, rx1139_cur, rx1139_curclass, "$!cstack"
  rx1139_fail2442:
    unless rx1139_bstack, rx1139_done2440
    pop $I19, rx1139_bstack
    if_null rx1139_cstack, rx1139_cstack_done2445
    unless rx1139_cstack, rx1139_cstack_done2445
    dec $I19
    set $P11, rx1139_cstack[$I19]
  rx1139_cstack_done2445:
    pop rx1139_rep, rx1139_bstack
    pop rx1139_pos, rx1139_bstack
    pop $I19, rx1139_bstack
    lt rx1139_pos, -1, rx1139_done2440
    lt rx1139_pos, 0, rx1139_fail2442
    eq $I19, 0, rx1139_fail2442
    nqp_islist $I20, rx1139_cstack
    unless $I20, rx1139_jump2443
    elements $I18, rx1139_bstack
    le $I18, 0, rx1139_cut2444
    dec $I18
    set $I18, rx1139_bstack[$I18]
  rx1139_cut2444:
    assign rx1139_cstack, $I18
  rx1139_jump2443:
    jump $I19
  rx1139_done2440:
    rx1139_cur."!cursor_fail"()
    .return (rx1139_cur) 
.end
.HLL "nqp"
.namespace []
.sub "default_value" :subid("cuid_134_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1167
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1142_start
    .local string rx1142_tgt
    .local int rx1142_pos
    .local int rx1142_off
    .local int rx1142_eos
    .local int rx1142_rep
    .local pmc rx1142_cur
    .local pmc rx1142_curclass
    .local pmc rx1142_bstack
    .local pmc rx1142_cstack
    rx1142_start = self."!cursor_start_all"()
    set rx1142_cur, rx1142_start[0]
    set rx1142_tgt, rx1142_start[1]
    set rx1142_pos, rx1142_start[2]
    set rx1142_curclass, rx1142_start[3]
    set rx1142_bstack, rx1142_start[4]
    set $I19, rx1142_start[5]
    store_lex unicode:"$\x{a2}", rx1142_cur
    length rx1142_eos, rx1142_tgt
    eq $I19, 1, rx1142_restart2452
    gt rx1142_pos, rx1142_eos, rx1142_fail2453
    repr_get_attr_int $I11, self, rx1142_curclass, "$!from"
    ne $I11, -1, rxscan1143_done2459
    goto rxscan1143_scan2458
  rxscan1143_loop2457:
    inc rx1142_pos
    gt rx1142_pos, rx1142_eos, rx1142_fail2453
    repr_bind_attr_int rx1142_cur, rx1142_curclass, "$!from", rx1142_pos
  rxscan1143_scan2458:
    nqp_rxmark rx1142_bstack, rxscan1143_loop2457, rx1142_pos, 0
  rxscan1143_done2459:
    repr_bind_attr_int rx1142_cur, rx1142_curclass, "$!pos", rx1142_pos
    $P11 = rx1142_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1142_curclass, "$!pos"
    lt $I11, 0, rx1142_fail2453
    repr_get_attr_int rx1142_pos, $P11, rx1142_curclass, "$!pos"
    add $I11, rx1142_pos, 1
    gt $I11, rx1142_eos, rx1142_fail2453
    substr $S10, rx1142_tgt, rx1142_pos, 1
    ne $S10, ucs4:"=", rx1142_fail2453
    add rx1142_pos, 1
    repr_bind_attr_int rx1142_cur, rx1142_curclass, "$!pos", rx1142_pos
    $P11 = rx1142_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1142_curclass, "$!pos"
    lt $I11, 0, rx1142_fail2453
    repr_get_attr_int rx1142_pos, $P11, rx1142_curclass, "$!pos"
    repr_bind_attr_int rx1142_cur, rx1142_curclass, "$!pos", rx1142_pos
    $P11 = rx1142_cur."EXPR"("i=")
    repr_get_attr_int $I11, $P11, rx1142_curclass, "$!pos"
    lt $I11, 0, rx1142_fail2453
    nqp_rxmark rx1142_bstack, rxsubrule1146_pass2462, -1, 0
  rxsubrule1146_pass2462:
    rx1142_cstack = rx1142_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx1142_pos, $P11, rx1142_curclass, "$!pos"
    repr_bind_attr_int rx1142_cur, rx1142_curclass, "$!pos", rx1142_pos
    $P11 = rx1142_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1142_curclass, "$!pos"
    lt $I11, 0, rx1142_fail2453
    repr_get_attr_int rx1142_pos, $P11, rx1142_curclass, "$!pos"
    rx1142_cur."!cursor_pass"(rx1142_pos, "default_value", 'backtrack'=>1)
    .return (rx1142_cur)
  rx1142_restart2452:
    repr_get_attr_obj rx1142_cstack, rx1142_cur, rx1142_curclass, "$!cstack"
  rx1142_fail2453:
    unless rx1142_bstack, rx1142_done2451
    pop $I19, rx1142_bstack
    if_null rx1142_cstack, rx1142_cstack_done2456
    unless rx1142_cstack, rx1142_cstack_done2456
    dec $I19
    set $P11, rx1142_cstack[$I19]
  rx1142_cstack_done2456:
    pop rx1142_rep, rx1142_bstack
    pop rx1142_pos, rx1142_bstack
    pop $I19, rx1142_bstack
    lt rx1142_pos, -1, rx1142_done2451
    lt rx1142_pos, 0, rx1142_fail2453
    eq $I19, 0, rx1142_fail2453
    nqp_islist $I20, rx1142_cstack
    unless $I20, rx1142_jump2454
    elements $I18, rx1142_bstack
    le $I18, 0, rx1142_cut2455
    dec $I18
    set $I18, rx1142_bstack[$I18]
  rx1142_cut2455:
    assign rx1142_cstack, $I18
  rx1142_jump2454:
    jump $I19
  rx1142_done2451:
    rx1142_cur."!cursor_fail"()
    .return (rx1142_cur) 
.end
.HLL "nqp"
.namespace []
.sub "trait" :subid("cuid_135_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1169
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1148_start
    .local string rx1148_tgt
    .local int rx1148_pos
    .local int rx1148_off
    .local int rx1148_eos
    .local int rx1148_rep
    .local pmc rx1148_cur
    .local pmc rx1148_curclass
    .local pmc rx1148_bstack
    .local pmc rx1148_cstack
    rx1148_start = self."!cursor_start_all"()
    set rx1148_cur, rx1148_start[0]
    set rx1148_tgt, rx1148_start[1]
    set rx1148_pos, rx1148_start[2]
    set rx1148_curclass, rx1148_start[3]
    set rx1148_bstack, rx1148_start[4]
    set $I19, rx1148_start[5]
    store_lex unicode:"$\x{a2}", rx1148_cur
    length rx1148_eos, rx1148_tgt
    eq $I19, 1, rx1148_restart2466
    gt rx1148_pos, rx1148_eos, rx1148_fail2467
    repr_get_attr_int $I11, self, rx1148_curclass, "$!from"
    ne $I11, -1, rxscan1149_done2473
    goto rxscan1149_scan2472
  rxscan1149_loop2471:
    inc rx1148_pos
    gt rx1148_pos, rx1148_eos, rx1148_fail2467
    repr_bind_attr_int rx1148_cur, rx1148_curclass, "$!from", rx1148_pos
  rxscan1149_scan2472:
    nqp_rxmark rx1148_bstack, rxscan1149_loop2471, rx1148_pos, 0
  rxscan1149_done2473:
    repr_bind_attr_int rx1148_cur, rx1148_curclass, "$!pos", rx1148_pos
    $P11 = rx1148_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1148_curclass, "$!pos"
    lt $I11, 0, rx1148_fail2467
    repr_get_attr_int rx1148_pos, $P11, rx1148_curclass, "$!pos"
    repr_bind_attr_int rx1148_cur, rx1148_curclass, "$!pos", rx1148_pos
    $P11 = rx1148_cur."trait_mod"()
    repr_get_attr_int $I11, $P11, rx1148_curclass, "$!pos"
    lt $I11, 0, rx1148_fail2467
    nqp_rxmark rx1148_bstack, rxsubrule1151_pass2475, -1, 0
  rxsubrule1151_pass2475:
    rx1148_cstack = rx1148_cur."!cursor_capture"($P11, "trait_mod")
    repr_get_attr_int rx1148_pos, $P11, rx1148_curclass, "$!pos"
    repr_bind_attr_int rx1148_cur, rx1148_curclass, "$!pos", rx1148_pos
    $P11 = rx1148_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1148_curclass, "$!pos"
    lt $I11, 0, rx1148_fail2467
    repr_get_attr_int rx1148_pos, $P11, rx1148_curclass, "$!pos"
    rx1148_cur."!cursor_pass"(rx1148_pos, "trait", 'backtrack'=>1)
    .return (rx1148_cur)
  rx1148_restart2466:
    repr_get_attr_obj rx1148_cstack, rx1148_cur, rx1148_curclass, "$!cstack"
  rx1148_fail2467:
    unless rx1148_bstack, rx1148_done2465
    pop $I19, rx1148_bstack
    if_null rx1148_cstack, rx1148_cstack_done2470
    unless rx1148_cstack, rx1148_cstack_done2470
    dec $I19
    set $P11, rx1148_cstack[$I19]
  rx1148_cstack_done2470:
    pop rx1148_rep, rx1148_bstack
    pop rx1148_pos, rx1148_bstack
    pop $I19, rx1148_bstack
    lt rx1148_pos, -1, rx1148_done2465
    lt rx1148_pos, 0, rx1148_fail2467
    eq $I19, 0, rx1148_fail2467
    nqp_islist $I20, rx1148_cstack
    unless $I20, rx1148_jump2468
    elements $I18, rx1148_bstack
    le $I18, 0, rx1148_cut2469
    dec $I18
    set $I18, rx1148_bstack[$I18]
  rx1148_cut2469:
    assign rx1148_cstack, $I18
  rx1148_jump2468:
    jump $I19
  rx1148_done2465:
    rx1148_cur."!cursor_fail"()
    .return (rx1148_cur) 
.end
.HLL "nqp"
.namespace []
.sub "trait_mod" :subid("cuid_136_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1171
    .param pmc self 
    $P5001 = self."!protoregex"("trait_mod")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "trait_mod:sym<is>" :subid("cuid_137_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1172
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1153_start
    .local string rx1153_tgt
    .local int rx1153_pos
    .local int rx1153_off
    .local int rx1153_eos
    .local int rx1153_rep
    .local pmc rx1153_cur
    .local pmc rx1153_curclass
    .local pmc rx1153_bstack
    .local pmc rx1153_cstack
    rx1153_start = self."!cursor_start_all"()
    set rx1153_cur, rx1153_start[0]
    set rx1153_tgt, rx1153_start[1]
    set rx1153_pos, rx1153_start[2]
    set rx1153_curclass, rx1153_start[3]
    set rx1153_bstack, rx1153_start[4]
    set $I19, rx1153_start[5]
    store_lex unicode:"$\x{a2}", rx1153_cur
    length rx1153_eos, rx1153_tgt
    eq $I19, 1, rx1153_restart2479
    gt rx1153_pos, rx1153_eos, rx1153_fail2480
    repr_get_attr_int $I11, self, rx1153_curclass, "$!from"
    ne $I11, -1, rxscan1154_done2486
    goto rxscan1154_scan2485
  rxscan1154_loop2484:
    inc rx1153_pos
    gt rx1153_pos, rx1153_eos, rx1153_fail2480
    repr_bind_attr_int rx1153_cur, rx1153_curclass, "$!from", rx1153_pos
  rxscan1154_scan2485:
    nqp_rxmark rx1153_bstack, rxscan1154_loop2484, rx1153_pos, 0
  rxscan1154_done2486:
    nqp_rxmark rx1153_bstack, rxcap1155_fail2488, rx1153_pos, 0
    add $I11, rx1153_pos, 2
    gt $I11, rx1153_eos, rx1153_fail2480
    substr $S10, rx1153_tgt, rx1153_pos, 2
    ne $S10, ucs4:"is", rx1153_fail2480
    add rx1153_pos, 2
    nqp_rxpeek $I19, rx1153_bstack, rxcap1155_fail2488
    inc $I19
    set $I11, rx1153_bstack[$I19]
    repr_bind_attr_int rx1153_cur, rx1153_curclass, "$!pos", rx1153_pos
    $P11 = rx1153_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1153_pos)
    rx1153_cstack = rx1153_cur."!cursor_capture"($P11, "sym")
    goto rxcap1155_done2487
  rxcap1155_fail2488:
    goto rx1153_fail2480
  rxcap1155_done2487:
    repr_bind_attr_int rx1153_cur, rx1153_curclass, "$!pos", rx1153_pos
    $P11 = rx1153_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1153_curclass, "$!pos"
    lt $I11, 0, rx1153_fail2480
    repr_get_attr_int rx1153_pos, $P11, rx1153_curclass, "$!pos"
    repr_bind_attr_int rx1153_cur, rx1153_curclass, "$!pos", rx1153_pos
    $P11 = rx1153_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1153_curclass, "$!pos"
    lt $I11, 0, rx1153_fail2480
    nqp_rxmark rx1153_bstack, rxsubrule1157_pass2490, -1, 0
  rxsubrule1157_pass2490:
    rx1153_cstack = rx1153_cur."!cursor_capture"($P11, "longname")
    repr_get_attr_int rx1153_pos, $P11, rx1153_curclass, "$!pos"
    nqp_rxmark rx1153_bstack, rxquantr1158_done2492, rx1153_pos, 0
  rxquantr1158_loop2491:
    repr_bind_attr_int rx1153_cur, rx1153_curclass, "$!pos", rx1153_pos
    $P11 = rx1153_cur."circumfix"()
    repr_get_attr_int $I11, $P11, rx1153_curclass, "$!pos"
    lt $I11, 0, rx1153_fail2480
    goto rxsubrule1159_pass2493
  rxsubrule1159_back2494:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1153_curclass, "$!pos"
    lt $I11, 0, rx1153_fail2480
  rxsubrule1159_pass2493:
    rx1153_cstack = rx1153_cur."!cursor_capture"($P11, "circumfix")
    set_addr $I11, rxsubrule1159_back2494
    push rx1153_bstack, $I11
    push rx1153_bstack, 0
    push rx1153_bstack, rx1153_pos
    elements $I11, rx1153_cstack
    push rx1153_bstack, $I11
    repr_get_attr_int rx1153_pos, $P11, rx1153_curclass, "$!pos"
    nqp_rxpeek $I19, rx1153_bstack, rxquantr1158_done2492
    inc $I19
    inc $I19
    set rx1153_rep, rx1153_bstack[$I19]
    nqp_rxcommit rx1153_bstack, rxquantr1158_done2492
    inc rx1153_rep
  rxquantr1158_done2492:
    repr_bind_attr_int rx1153_cur, rx1153_curclass, "$!pos", rx1153_pos
    $P11 = rx1153_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1153_curclass, "$!pos"
    lt $I11, 0, rx1153_fail2480
    repr_get_attr_int rx1153_pos, $P11, rx1153_curclass, "$!pos"
    rx1153_cur."!cursor_pass"(rx1153_pos, "trait_mod:sym<is>", 'backtrack'=>1)
    .return (rx1153_cur)
  rx1153_restart2479:
    repr_get_attr_obj rx1153_cstack, rx1153_cur, rx1153_curclass, "$!cstack"
  rx1153_fail2480:
    unless rx1153_bstack, rx1153_done2478
    pop $I19, rx1153_bstack
    if_null rx1153_cstack, rx1153_cstack_done2483
    unless rx1153_cstack, rx1153_cstack_done2483
    dec $I19
    set $P11, rx1153_cstack[$I19]
  rx1153_cstack_done2483:
    pop rx1153_rep, rx1153_bstack
    pop rx1153_pos, rx1153_bstack
    pop $I19, rx1153_bstack
    lt rx1153_pos, -1, rx1153_done2478
    lt rx1153_pos, 0, rx1153_fail2480
    eq $I19, 0, rx1153_fail2480
    nqp_islist $I20, rx1153_cstack
    unless $I20, rx1153_jump2481
    elements $I18, rx1153_bstack
    le $I18, 0, rx1153_cut2482
    dec $I18
    set $I18, rx1153_bstack[$I18]
  rx1153_cut2482:
    assign rx1153_cstack, $I18
  rx1153_jump2481:
    jump $I19
  rx1153_done2478:
    rx1153_cur."!cursor_fail"()
    .return (rx1153_cur) 
.end
.HLL "nqp"
.namespace []
.sub "regex_declarator" :subid("cuid_138_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1174
    .param pmc _lex_param_0 
    .const 'Sub' $P5012 = 'cuid_411_1367388600.55005' 
    capture_lex $P5012 
    .lex "%*RX", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_150 
    .local pmc pkg_viv_tmp_24 
    new $P5001, 'Hash'
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1161_start
    .local string rx1161_tgt
    .local int rx1161_pos
    .local int rx1161_off
    .local int rx1161_eos
    .local int rx1161_rep
    .local pmc rx1161_cur
    .local pmc rx1161_curclass
    .local pmc rx1161_bstack
    .local pmc rx1161_cstack
    rx1161_start = self."!cursor_start_all"()
    set rx1161_cur, rx1161_start[0]
    set rx1161_tgt, rx1161_start[1]
    set rx1161_pos, rx1161_start[2]
    set rx1161_curclass, rx1161_start[3]
    set rx1161_bstack, rx1161_start[4]
    set $I19, rx1161_start[5]
    store_lex unicode:"$\x{a2}", rx1161_cur
    length rx1161_eos, rx1161_tgt
    eq $I19, 1, rx1161_restart2498
    gt rx1161_pos, rx1161_eos, rx1161_fail2499
    repr_get_attr_int $I11, self, rx1161_curclass, "$!from"
    ne $I11, -1, rxscan1162_done2505
    goto rxscan1162_scan2504
  rxscan1162_loop2503:
    inc rx1161_pos
    gt rx1161_pos, rx1161_eos, rx1161_fail2499
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!from", rx1161_pos
  rxscan1162_scan2504:
    nqp_rxmark rx1161_bstack, rxscan1162_loop2503, rx1161_pos, 0
  rxscan1162_done2505:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1163_02507
    nqp_push_label $P11, alt1163_12547
    nqp_rxmark rx1161_bstack, alt1163_end2506, -1, 0
    rx1161_cur."!alt"(rx1161_pos, "alt_nfa__33_1367388604.08706", $P11)
    goto rx1161_fail2499
  alt1163_02507:
    nqp_rxmark rx1161_bstack, rxcap1164_fail2509, rx1161_pos, 0
    add $I11, rx1161_pos, 5
    gt $I11, rx1161_eos, rx1161_fail2499
    substr $S10, rx1161_tgt, rx1161_pos, 5
    ne $S10, ucs4:"proto", rx1161_fail2499
    add rx1161_pos, 5
    nqp_rxpeek $I19, rx1161_bstack, rxcap1164_fail2509
    inc $I19
    set $I11, rx1161_bstack[$I19]
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1161_pos)
    rx1161_cstack = rx1161_cur."!cursor_capture"($P11, "proto")
    goto rxcap1164_done2508
  rxcap1164_fail2509:
    goto rx1161_fail2499
  rxcap1164_done2508:
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1166_02512
    nqp_push_label $P11, alt1166_12513
    nqp_push_label $P11, alt1166_22514
    nqp_rxmark rx1161_bstack, alt1166_end2511, -1, 0
    rx1161_cur."!alt"(rx1161_pos, "alt_nfa__31_1367388604.08565", $P11)
    goto rx1161_fail2499
  alt1166_02512:
    add $I11, rx1161_pos, 5
    gt $I11, rx1161_eos, rx1161_fail2499
    substr $S10, rx1161_tgt, rx1161_pos, 5
    ne $S10, ucs4:"regex", rx1161_fail2499
    add rx1161_pos, 5
    goto alt1166_end2511
  alt1166_12513:
    add $I11, rx1161_pos, 5
    gt $I11, rx1161_eos, rx1161_fail2499
    substr $S10, rx1161_tgt, rx1161_pos, 5
    ne $S10, ucs4:"token", rx1161_fail2499
    add rx1161_pos, 5
    goto alt1166_end2511
  alt1166_22514:
    add $I11, rx1161_pos, 4
    gt $I11, rx1161_eos, rx1161_fail2499
    substr $S10, rx1161_tgt, rx1161_pos, 4
    ne $S10, ucs4:"rule", rx1161_fail2499
    add rx1161_pos, 4
    goto alt1166_end2511
  alt1166_end2511:
    nqp_rxcommit rx1161_bstack, alt1166_end2511
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
  alt1168_02517:
    nqp_rxmark rx1161_bstack, alt1168_12523, rx1161_pos, 0
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
    add $I11, rx1161_pos, 3
    gt $I11, rx1161_eos, rx1161_fail2499
    substr $S10, rx1161_tgt, rx1161_pos, 3
    ne $S10, ucs4:"::(", rx1161_fail2499
    add rx1161_pos, 3
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    nqp_rxmark rx1161_bstack, rxsubrule1171_pass2520, -1, 0
  rxsubrule1171_pass2520:
    rx1161_cstack = rx1161_cur."!cursor_capture"($P11, "latename=variable")
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
    add $I11, rx1161_pos, 1
    gt $I11, rx1161_eos, rx1161_fail2499
    substr $S10, rx1161_tgt, rx1161_pos, 1
    ne $S10, ucs4:")", rx1161_fail2499
    add rx1161_pos, 1
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
    goto alt1168_end2516
  alt1168_12523:
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    nqp_rxmark rx1161_bstack, rxsubrule1175_pass2525, -1, 0
  rxsubrule1175_pass2525:
    rx1161_cstack = rx1161_cur."!cursor_capture"($P11, "deflongname")
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
  alt1168_end2516:
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
  alt1178_02529:
    nqp_rxmark rx1161_bstack, alt1178_12532, rx1161_pos, 0
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
    add $I11, rx1161_pos, 3
    gt $I11, rx1161_eos, rx1161_fail2499
    substr $S10, rx1161_tgt, rx1161_pos, 3
    ne $S10, ucs4:"{*}", rx1161_fail2499
    add rx1161_pos, 3
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
    goto alt1178_end2528
  alt1178_12532:
    nqp_rxmark rx1161_bstack, alt1178_22537, rx1161_pos, 0
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
    add $I11, rx1161_pos, 1
    gt $I11, rx1161_eos, rx1161_fail2499
    substr $S10, rx1161_tgt, rx1161_pos, 1
    ne $S10, ucs4:"{", rx1161_fail2499
    add rx1161_pos, 1
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
    add $I11, rx1161_pos, 5
    gt $I11, rx1161_eos, rx1161_fail2499
    substr $S10, rx1161_tgt, rx1161_pos, 5
    ne $S10, ucs4:"<...>", rx1161_fail2499
    add rx1161_pos, 5
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
    add $I11, rx1161_pos, 1
    gt $I11, rx1161_eos, rx1161_fail2499
    substr $S10, rx1161_tgt, rx1161_pos, 1
    ne $S10, ucs4:"}", rx1161_fail2499
    add rx1161_pos, 1
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
    goto alt1178_end2528
  alt1178_22537:
    nqp_rxmark rx1161_bstack, alt1178_32542, rx1161_pos, 0
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
    add $I11, rx1161_pos, 1
    gt $I11, rx1161_eos, rx1161_fail2499
    substr $S10, rx1161_tgt, rx1161_pos, 1
    ne $S10, ucs4:"{", rx1161_fail2499
    add rx1161_pos, 1
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
    add $I11, rx1161_pos, 3
    gt $I11, rx1161_eos, rx1161_fail2499
    substr $S10, rx1161_tgt, rx1161_pos, 3
    ne $S10, ucs4:"<*>", rx1161_fail2499
    add rx1161_pos, 3
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
    add $I11, rx1161_pos, 1
    gt $I11, rx1161_eos, rx1161_fail2499
    substr $S10, rx1161_tgt, rx1161_pos, 1
    ne $S10, ucs4:"}", rx1161_fail2499
    add rx1161_pos, 1
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
    goto alt1178_end2528
  alt1178_32542:
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."panic"("Proto regex body must be \\{*\\} (or <*> or <...>, which are deprecated)")
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
  alt1178_end2528:
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
    goto alt1163_end2506
  alt1163_12547:
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
    nqp_rxmark rx1161_bstack, rxcap1194_fail2550, rx1161_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1195_02552
    nqp_push_label $P11, alt1195_12553
    nqp_push_label $P11, alt1195_22554
    nqp_rxmark rx1161_bstack, alt1195_end2551, -1, 0
    rx1161_cur."!alt"(rx1161_pos, "alt_nfa__32_1367388604.08657", $P11)
    goto rx1161_fail2499
  alt1195_02552:
    add $I11, rx1161_pos, 5
    gt $I11, rx1161_eos, rx1161_fail2499
    substr $S10, rx1161_tgt, rx1161_pos, 5
    ne $S10, ucs4:"regex", rx1161_fail2499
    add rx1161_pos, 5
    goto alt1195_end2551
  alt1195_12553:
    add $I11, rx1161_pos, 5
    gt $I11, rx1161_eos, rx1161_fail2499
    substr $S10, rx1161_tgt, rx1161_pos, 5
    ne $S10, ucs4:"token", rx1161_fail2499
    add rx1161_pos, 5
    goto alt1195_end2551
  alt1195_22554:
    add $I11, rx1161_pos, 4
    gt $I11, rx1161_eos, rx1161_fail2499
    substr $S10, rx1161_tgt, rx1161_pos, 4
    ne $S10, ucs4:"rule", rx1161_fail2499
    add rx1161_pos, 4
    goto alt1195_end2551
  alt1195_end2551:
    nqp_rxcommit rx1161_bstack, alt1195_end2551
    nqp_rxpeek $I19, rx1161_bstack, rxcap1194_fail2550
    inc $I19
    set $I11, rx1161_bstack[$I19]
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1161_pos)
    rx1161_cstack = rx1161_cur."!cursor_capture"($P11, "sym")
    goto rxcap1194_done2549
  rxcap1194_fail2550:
    goto rx1161_fail2499
  rxcap1194_done2549:
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
  alt1198_02558:
    nqp_rxmark rx1161_bstack, alt1198_12564, rx1161_pos, 0
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
    add $I11, rx1161_pos, 3
    gt $I11, rx1161_eos, rx1161_fail2499
    substr $S10, rx1161_tgt, rx1161_pos, 3
    ne $S10, ucs4:"::(", rx1161_fail2499
    add rx1161_pos, 3
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    nqp_rxmark rx1161_bstack, rxsubrule1201_pass2561, -1, 0
  rxsubrule1201_pass2561:
    rx1161_cstack = rx1161_cur."!cursor_capture"($P11, "latename=variable")
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
    add $I11, rx1161_pos, 1
    gt $I11, rx1161_eos, rx1161_fail2499
    substr $S10, rx1161_tgt, rx1161_pos, 1
    ne $S10, ucs4:")", rx1161_fail2499
    add rx1161_pos, 1
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
    goto alt1198_end2557
  alt1198_12564:
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    nqp_rxmark rx1161_bstack, rxsubrule1205_pass2566, -1, 0
  rxsubrule1205_pass2566:
    rx1161_cstack = rx1161_cur."!cursor_capture"($P11, "deflongname")
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
  alt1198_end2557:
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
    nqp_rxmark rx1161_bstack, rxquantr1210_done2572, rx1161_pos, 0
  rxquantr1210_loop2571:
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
    add $I11, rx1161_pos, 1
    gt $I11, rx1161_eos, rx1161_fail2499
    substr $S10, rx1161_tgt, rx1161_pos, 1
    ne $S10, ucs4:"(", rx1161_fail2499
    add rx1161_pos, 1
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."signature"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    nqp_rxmark rx1161_bstack, rxsubrule1213_pass2575, -1, 0
  rxsubrule1213_pass2575:
    rx1161_cstack = rx1161_cur."!cursor_capture"($P11, "signature")
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
    add $I11, rx1161_pos, 1
    gt $I11, rx1161_eos, rx1161_fail2499
    substr $S10, rx1161_tgt, rx1161_pos, 1
    ne $S10, ucs4:")", rx1161_fail2499
    add rx1161_pos, 1
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
    nqp_rxpeek $I19, rx1161_bstack, rxquantr1210_done2572
    inc $I19
    inc $I19
    set rx1161_rep, rx1161_bstack[$I19]
    nqp_rxcommit rx1161_bstack, rxquantr1210_done2572
    inc rx1161_rep
  rxquantr1210_done2572:
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    store_lex unicode:"$\x{a2}", rx1161_cur
    unless_null $P101, fallback2579
    nqp_get_sc_object $P5003, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_24, $P5002
    set fb_tmp_150, pkg_viv_tmp_24
    repr_defined $I5001, fb_tmp_150
    unless $I5001 goto if1217_else2580 
    set $P5004, fb_tmp_150["%RX"]
    set $P5006, $P5004
    goto if1217_end2581
  if1217_else2580:
    null $P5005
    set $P5006, $P5005
  if1217_end2581:
    unless_null $P5006, vivi_12182582
    new $P5007, 'Hash'
    set pkg_viv_tmp_24["%RX"], $P5007
    set $P5006, $P5007
  vivi_12182582:
    unless_null $P5006, vivi_12192583
    die "Contextual %*RX not found"
    box $P5008, "Contextual %*RX not found"
    set $P5006, $P5008
  vivi_12192583:
    set $P101, $P5006
  fallback2579:
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    store_lex unicode:"$\x{a2}", rx1161_cur
    $P5009 = $P102."MATCH"()
    set $P103, $P5009
    .const 'Sub' $P5010 = 'cuid_411_1367388600.55005' 
    capture_lex $P5010
    $P5011 = $P5010()
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
    add $I11, rx1161_pos, 1
    gt $I11, rx1161_eos, rx1161_fail2499
    substr $S10, rx1161_tgt, rx1161_pos, 1
    ne $S10, ucs4:"{", rx1161_fail2499
    add rx1161_pos, 1
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."LANG"("Regex", "nibbler")
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    nqp_rxmark rx1161_bstack, rxsubrule1259_pass2652, -1, 0
  rxsubrule1259_pass2652:
    rx1161_cstack = rx1161_cur."!cursor_capture"($P11, "p6regex")
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
    add $I11, rx1161_pos, 1
    gt $I11, rx1161_eos, rx1161_fail2499
    substr $S10, rx1161_tgt, rx1161_pos, 1
    ne $S10, ucs4:"}", rx1161_fail2499
    add rx1161_pos, 1
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    repr_bind_attr_int rx1161_cur, rx1161_curclass, "$!pos", rx1161_pos
    $P11 = rx1161_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1161_curclass, "$!pos"
    lt $I11, 0, rx1161_fail2499
    repr_get_attr_int rx1161_pos, $P11, rx1161_curclass, "$!pos"
    goto alt1163_end2506
  alt1163_end2506:
    nqp_rxcommit rx1161_bstack, alt1163_end2506
    rx1161_cur."!cursor_pass"(rx1161_pos, "regex_declarator", 'backtrack'=>1)
    .return (rx1161_cur)
  rx1161_restart2498:
    repr_get_attr_obj rx1161_cstack, rx1161_cur, rx1161_curclass, "$!cstack"
  rx1161_fail2499:
    unless rx1161_bstack, rx1161_done2497
    pop $I19, rx1161_bstack
    if_null rx1161_cstack, rx1161_cstack_done2502
    unless rx1161_cstack, rx1161_cstack_done2502
    dec $I19
    set $P11, rx1161_cstack[$I19]
  rx1161_cstack_done2502:
    pop rx1161_rep, rx1161_bstack
    pop rx1161_pos, rx1161_bstack
    pop $I19, rx1161_bstack
    lt rx1161_pos, -1, rx1161_done2497
    lt rx1161_pos, 0, rx1161_fail2499
    eq $I19, 0, rx1161_fail2499
    nqp_islist $I20, rx1161_cstack
    unless $I20, rx1161_jump2500
    elements $I18, rx1161_bstack
    le $I18, 0, rx1161_cut2501
    dec $I18
    set $I18, rx1161_bstack[$I18]
  rx1161_cut2501:
    assign rx1161_cstack, $I18
  rx1161_jump2500:
    jump $I19
  rx1161_done2497:
    rx1161_cur."!cursor_fail"()
    .return (rx1161_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_411_1367388600.55005") :anon :lex :outer("cuid_138_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1195
    .local pmc fb_tmp_151 
    .local pmc pkg_viv_tmp_25 
    .local pmc fb_tmp_152 
    .local pmc fb_tmp_153 
    .local pmc pkg_viv_tmp_26 
    .local pmc fb_tmp_154 
    .local pmc fb_tmp_155 
    .local pmc fb_tmp_156 
    .local pmc pkg_viv_tmp_27 
    .local pmc fb_tmp_157 
    .local pmc fb_tmp_158 
    .local pmc fb_tmp_159 
    .local pmc fb_tmp_160 
    .local pmc pkg_viv_tmp_28 
    .local pmc fb_tmp_161 
    .local pmc fb_tmp_162 
    .local pmc fb_tmp_163 
    .local pmc fb_tmp_164 
    .local pmc pkg_viv_tmp_29 
    find_dynamic_lex $P5001, "%*RX"
    unless_null $P5001, fallback2585
    nqp_get_sc_object $P5003, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_25, $P5002
    set fb_tmp_151, pkg_viv_tmp_25
    repr_defined $I5001, fb_tmp_151
    unless $I5001 goto if1221_else2586 
    set $P5004, fb_tmp_151["%RX"]
    set $P5006, $P5004
    goto if1221_end2587
  if1221_else2586:
    null $P5005
    set $P5006, $P5005
  if1221_end2587:
    unless_null $P5006, vivi_12222588
    new $P5007, 'Hash'
    set pkg_viv_tmp_25["%RX"], $P5007
    set $P5006, $P5007
  vivi_12222588:
    unless_null $P5006, vivi_12232589
    die "Contextual %*RX not found"
    box $P5008, "Contextual %*RX not found"
    set $P5006, $P5008
  vivi_12232589:
    set $P5001, $P5006
  fallback2585:
    find_lex $P5009, "$/"
    unless_null $P5009, fallback2592
    nqp_get_sc_object $P5010, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5009, $P5010
  fallback2592:
    set fb_tmp_152, $P5009
    repr_defined $I5003, fb_tmp_152
    unless $I5003 goto if1224_else2590 
    set $P5011, fb_tmp_152["sym"]
    set $P5013, $P5011
    goto if1224_end2591
  if1224_else2590:
    null $P5012
    set $P5013, $P5012
  if1224_end2591:
    unless_null $P5013, vivi_12252593
    nqp_get_sc_object $P5014, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5013, $P5014
  vivi_12252593:
    set $S5001, $P5013
    iseq $I5002, $S5001, "rule"
    box $P5015, $I5002
    set $P5001["s"], $P5015
    find_dynamic_lex $P5016, "%*RX"
    unless_null $P5016, fallback2594
    nqp_get_sc_object $P5018, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5017, $P5018
    set pkg_viv_tmp_26, $P5017
    set fb_tmp_153, pkg_viv_tmp_26
    repr_defined $I5004, fb_tmp_153
    unless $I5004 goto if1226_else2595 
    set $P5019, fb_tmp_153["%RX"]
    set $P5021, $P5019
    goto if1226_end2596
  if1226_else2595:
    null $P5020
    set $P5021, $P5020
  if1226_end2596:
    unless_null $P5021, vivi_12272597
    new $P5022, 'Hash'
    set pkg_viv_tmp_26["%RX"], $P5022
    set $P5021, $P5022
  vivi_12272597:
    unless_null $P5021, vivi_12282598
    die "Contextual %*RX not found"
    box $P5023, "Contextual %*RX not found"
    set $P5021, $P5023
  vivi_12282598:
    set $P5016, $P5021
  fallback2594:
    find_lex $P5024, "$/"
    unless_null $P5024, fallback2603
    nqp_get_sc_object $P5025, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5024, $P5025
  fallback2603:
    set fb_tmp_154, $P5024
    repr_defined $I5006, fb_tmp_154
    unless $I5006 goto if1230_else2601 
    set $P5026, fb_tmp_154["sym"]
    set $P5028, $P5026
    goto if1230_end2602
  if1230_else2601:
    null $P5027
    set $P5028, $P5027
  if1230_end2602:
    unless_null $P5028, vivi_12312604
    nqp_get_sc_object $P5029, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5028, $P5029
  vivi_12312604:
    set $S5002, $P5028
    iseq $I5005, $S5002, "token"
    set $I5009, $I5005
    if $I5005 goto unless1229_end2600 
    find_lex $P5030, "$/"
    unless_null $P5030, fallback2607
    nqp_get_sc_object $P5031, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5030, $P5031
  fallback2607:
    set fb_tmp_155, $P5030
    repr_defined $I5008, fb_tmp_155
    unless $I5008 goto if1232_else2605 
    set $P5032, fb_tmp_155["sym"]
    set $P5034, $P5032
    goto if1232_end2606
  if1232_else2605:
    null $P5033
    set $P5034, $P5033
  if1232_end2606:
    unless_null $P5034, vivi_12332608
    nqp_get_sc_object $P5035, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5034, $P5035
  vivi_12332608:
    set $S5003, $P5034
    iseq $I5007, $S5003, "rule"
    set $I5009, $I5007
  unless1229_end2600:
    box $P5036, $I5009
    set $P5016["r"], $P5036
    find_dynamic_lex $P5037, "%*RX"
    unless_null $P5037, fallback2609
    nqp_get_sc_object $P5039, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5038, $P5039
    set pkg_viv_tmp_27, $P5038
    set fb_tmp_156, pkg_viv_tmp_27
    repr_defined $I5010, fb_tmp_156
    unless $I5010 goto if1234_else2610 
    set $P5040, fb_tmp_156["%RX"]
    set $P5042, $P5040
    goto if1234_end2611
  if1234_else2610:
    null $P5041
    set $P5042, $P5041
  if1234_end2611:
    unless_null $P5042, vivi_12352612
    new $P5043, 'Hash'
    set pkg_viv_tmp_27["%RX"], $P5043
    set $P5042, $P5043
  vivi_12352612:
    unless_null $P5042, vivi_12362613
    die "Contextual %*RX not found"
    box $P5044, "Contextual %*RX not found"
    set $P5042, $P5044
  vivi_12362613:
    set $P5037, $P5042
  fallback2609:
    find_lex $P5045, "$/"
    unless_null $P5045, fallback2618
    nqp_get_sc_object $P5046, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5045, $P5046
  fallback2618:
    set fb_tmp_157, $P5045
    repr_defined $I5011, fb_tmp_157
    unless $I5011 goto if1238_else2616 
    set $P5047, fb_tmp_157["deflongname"]
    set $P5049, $P5047
    goto if1238_end2617
  if1238_else2616:
    null $P5048
    set $P5049, $P5048
  if1238_end2617:
    unless_null $P5049, vivi_12392619
    nqp_get_sc_object $P5050, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5049, $P5050
  vivi_12392619:
    unless $P5049 goto if1237_else2614 
.annotate 'line', 1198
    find_lex $P5051, "$/"
    unless_null $P5051, fallback2622
    nqp_get_sc_object $P5052, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5051, $P5052
  fallback2622:
    set fb_tmp_158, $P5051
    repr_defined $I5012, fb_tmp_158
    unless $I5012 goto if1240_else2620 
    set $P5053, fb_tmp_158["deflongname"]
    set $P5055, $P5053
    goto if1240_end2621
  if1240_else2620:
    null $P5054
    set $P5055, $P5054
  if1240_end2621:
    unless_null $P5055, vivi_12412623
    nqp_get_sc_object $P5056, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5055, $P5056
  vivi_12412623:
    $P5057 = $P5055."ast"()
    set $P5064, $P5057
    goto if1237_end2615
  if1237_else2614:
    find_lex $P5058, "$/"
    unless_null $P5058, fallback2626
    nqp_get_sc_object $P5059, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5058, $P5059
  fallback2626:
    set fb_tmp_159, $P5058
    repr_defined $I5013, fb_tmp_159
    unless $I5013 goto if1242_else2624 
    set $P5060, fb_tmp_159["latename"]
    set $P5062, $P5060
    goto if1242_end2625
  if1242_else2624:
    null $P5061
    set $P5062, $P5061
  if1242_end2625:
    unless_null $P5062, vivi_12432627
    nqp_get_sc_object $P5063, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5062, $P5063
  vivi_12432627:
    set $S5005, $P5062
    concat $S5004, "!!LATENAME!!", $S5005
    box $P5065, $S5004
    set $P5064, $P5065
  if1237_end2615:
    set $P5037["name"], $P5064
    find_dynamic_lex $P5066, "%*RX"
    unless_null $P5066, fallback2628
    nqp_get_sc_object $P5068, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5067, $P5068
    set pkg_viv_tmp_28, $P5067
    set fb_tmp_160, pkg_viv_tmp_28
    repr_defined $I5014, fb_tmp_160
    unless $I5014 goto if1244_else2629 
    set $P5069, fb_tmp_160["%RX"]
    set $P5071, $P5069
    goto if1244_end2630
  if1244_else2629:
    null $P5070
    set $P5071, $P5070
  if1244_end2630:
    unless_null $P5071, vivi_12452631
    new $P5072, 'Hash'
    set pkg_viv_tmp_28["%RX"], $P5072
    set $P5071, $P5072
  vivi_12452631:
    unless_null $P5071, vivi_12462632
    die "Contextual %*RX not found"
    box $P5073, "Contextual %*RX not found"
    set $P5071, $P5073
  vivi_12462632:
    set $P5066, $P5071
  fallback2628:
.annotate 'line', 1199
    find_dynamic_lex $P5074, "$*W"
    unless_null $P5074, fallback2633
    nqp_get_sc_object $P5076, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5075, $P5076
    set fb_tmp_161, $P5075
    repr_defined $I5015, fb_tmp_161
    unless $I5015 goto if1247_else2634 
    set $P5077, fb_tmp_161["$W"]
    set $P5079, $P5077
    goto if1247_end2635
  if1247_else2634:
    null $P5078
    set $P5079, $P5078
  if1247_end2635:
    unless_null $P5079, vivi_12482636
    nqp_get_sc_object $P5080, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5079, $P5080
  vivi_12482636:
    unless_null $P5079, vivi_12492637
    die "Contextual $*W not found"
    box $P5081, "Contextual $*W not found"
    set $P5079, $P5081
  vivi_12492637:
    set $P5074, $P5079
  fallback2633:
    find_dynamic_lex $P5082, "$*W"
    unless_null $P5082, fallback2638
    nqp_get_sc_object $P5084, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5083, $P5084
    set fb_tmp_162, $P5083
    repr_defined $I5016, fb_tmp_162
    unless $I5016 goto if1250_else2639 
    set $P5085, fb_tmp_162["$W"]
    set $P5087, $P5085
    goto if1250_end2640
  if1250_else2639:
    null $P5086
    set $P5087, $P5086
  if1250_end2640:
    unless_null $P5087, vivi_12512641
    nqp_get_sc_object $P5088, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5087, $P5088
  vivi_12512641:
    unless_null $P5087, vivi_12522642
    die "Contextual $*W not found"
    box $P5089, "Contextual $*W not found"
    set $P5087, $P5089
  vivi_12522642:
    set $P5082, $P5087
  fallback2638:
    $P5090 = $P5082."cur_lexpad"()
    find_dynamic_lex $P5091, "%*RX"
    unless_null $P5091, fallback2645
    nqp_get_sc_object $P5093, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5092, $P5093
    set pkg_viv_tmp_29, $P5092
    set fb_tmp_164, pkg_viv_tmp_29
    repr_defined $I5018, fb_tmp_164
    unless $I5018 goto if1254_else2646 
    set $P5094, fb_tmp_164["%RX"]
    set $P5096, $P5094
    goto if1254_end2647
  if1254_else2646:
    null $P5095
    set $P5096, $P5095
  if1254_end2647:
    unless_null $P5096, vivi_12552648
    new $P5097, 'Hash'
    set pkg_viv_tmp_29["%RX"], $P5097
    set $P5096, $P5097
  vivi_12552648:
    unless_null $P5096, vivi_12562649
    die "Contextual %*RX not found"
    box $P5098, "Contextual %*RX not found"
    set $P5096, $P5098
  vivi_12562649:
    set $P5091, $P5096
  fallback2645:
    set fb_tmp_163, $P5091
    repr_defined $I5017, fb_tmp_163
    unless $I5017 goto if1253_else2643 
    set $P5099, fb_tmp_163["name"]
    set $P5101, $P5099
    goto if1253_end2644
  if1253_else2643:
    null $P5100
    set $P5101, $P5100
  if1253_end2644:
    unless_null $P5101, vivi_12572650
    nqp_get_sc_object $P5102, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5101, $P5102
  vivi_12572650:
    $P5103 = $P5074."create_code"($P5090, $P5101, 0, "NQPRegex" :named("code_type_name"))
    set $P5066["code"], $P5103
    .return ($P5103) 
.end
.HLL "nqp"
.namespace []
.sub "dotty" :subid("cuid_139_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1205
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1261_start
    .local string rx1261_tgt
    .local int rx1261_pos
    .local int rx1261_off
    .local int rx1261_eos
    .local int rx1261_rep
    .local pmc rx1261_cur
    .local pmc rx1261_curclass
    .local pmc rx1261_bstack
    .local pmc rx1261_cstack
    rx1261_start = self."!cursor_start_all"()
    set rx1261_cur, rx1261_start[0]
    set rx1261_tgt, rx1261_start[1]
    set rx1261_pos, rx1261_start[2]
    set rx1261_curclass, rx1261_start[3]
    set rx1261_bstack, rx1261_start[4]
    set $I19, rx1261_start[5]
    store_lex unicode:"$\x{a2}", rx1261_cur
    length rx1261_eos, rx1261_tgt
    eq $I19, 1, rx1261_restart2656
    gt rx1261_pos, rx1261_eos, rx1261_fail2657
    repr_get_attr_int $I11, self, rx1261_curclass, "$!from"
    ne $I11, -1, rxscan1262_done2663
    goto rxscan1262_scan2662
  rxscan1262_loop2661:
    inc rx1261_pos
    gt rx1261_pos, rx1261_eos, rx1261_fail2657
    repr_bind_attr_int rx1261_cur, rx1261_curclass, "$!from", rx1261_pos
  rxscan1262_scan2662:
    nqp_rxmark rx1261_bstack, rxscan1262_loop2661, rx1261_pos, 0
  rxscan1262_done2663:
    add $I11, rx1261_pos, 1
    gt $I11, rx1261_eos, rx1261_fail2657
    substr $S10, rx1261_tgt, rx1261_pos, 1
    ne $S10, ucs4:".", rx1261_fail2657
    add rx1261_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1263_02665
    nqp_push_label $P11, alt1263_12667
    nqp_rxmark rx1261_bstack, alt1263_end2664, -1, 0
    rx1261_cur."!alt"(rx1261_pos, "alt_nfa__34_1367388604.11794", $P11)
    goto rx1261_fail2657
  alt1263_02665:
    repr_bind_attr_int rx1261_cur, rx1261_curclass, "$!pos", rx1261_pos
    $P11 = rx1261_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1261_curclass, "$!pos"
    lt $I11, 0, rx1261_fail2657
    nqp_rxmark rx1261_bstack, rxsubrule1264_pass2666, -1, 0
  rxsubrule1264_pass2666:
    rx1261_cstack = rx1261_cur."!cursor_capture"($P11, "longname=deflongname")
    repr_get_attr_int rx1261_pos, $P11, rx1261_curclass, "$!pos"
    goto alt1263_end2664
  alt1263_12667:
    ge rx1261_pos, rx1261_eos, rx1261_fail2657
    substr $S11, rx1261_tgt, rx1261_pos, 1
    index $I11, ucs4:"'\"", $S11
    lt $I11, 0, rx1261_fail2657
    repr_bind_attr_int rx1261_cur, rx1261_curclass, "$!pos", rx1261_pos
    $P11 = rx1261_cur."quote"()
    repr_get_attr_int $I11, $P11, rx1261_curclass, "$!pos"
    lt $I11, 0, rx1261_fail2657
    nqp_rxmark rx1261_bstack, rxsubrule1265_pass2668, -1, 0
  rxsubrule1265_pass2668:
    rx1261_cstack = rx1261_cur."!cursor_capture"($P11, "quote")
    repr_get_attr_int rx1261_pos, $P11, rx1261_curclass, "$!pos"
  alt1266_02670:
    nqp_rxmark rx1261_bstack, alt1266_12671, rx1261_pos, 0
    ge rx1261_pos, rx1261_eos, rx1261_fail2657
    substr $S11, rx1261_tgt, rx1261_pos, 1
    index $I11, ucs4:"(", $S11
    lt $I11, 0, rx1261_fail2657
    goto alt1266_end2669
  alt1266_12671:
    repr_bind_attr_int rx1261_cur, rx1261_curclass, "$!pos", rx1261_pos
    $P11 = rx1261_cur."panic"("Quoted method name requires parenthesized arguments")
    repr_get_attr_int $I11, $P11, rx1261_curclass, "$!pos"
    lt $I11, 0, rx1261_fail2657
    repr_get_attr_int rx1261_pos, $P11, rx1261_curclass, "$!pos"
  alt1266_end2669:
    goto alt1263_end2664
  alt1263_end2664:
    nqp_rxcommit rx1261_bstack, alt1263_end2664
    nqp_rxmark rx1261_bstack, rxquantr1268_done2674, rx1261_pos, 0
  rxquantr1268_loop2673:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1269_02676
    nqp_push_label $P11, alt1269_12678
    nqp_rxmark rx1261_bstack, alt1269_end2675, -1, 0
    rx1261_cur."!alt"(rx1261_pos, "alt_nfa__35_1367388604.11837", $P11)
    goto rx1261_fail2657
  alt1269_02676:
    ge rx1261_pos, rx1261_eos, rx1261_fail2657
    substr $S11, rx1261_tgt, rx1261_pos, 1
    index $I11, ucs4:"(", $S11
    lt $I11, 0, rx1261_fail2657
    repr_bind_attr_int rx1261_cur, rx1261_curclass, "$!pos", rx1261_pos
    $P11 = rx1261_cur."args"()
    repr_get_attr_int $I11, $P11, rx1261_curclass, "$!pos"
    lt $I11, 0, rx1261_fail2657
    nqp_rxmark rx1261_bstack, rxsubrule1270_pass2677, -1, 0
  rxsubrule1270_pass2677:
    rx1261_cstack = rx1261_cur."!cursor_capture"($P11, "args")
    repr_get_attr_int rx1261_pos, $P11, rx1261_curclass, "$!pos"
    goto alt1269_end2675
  alt1269_12678:
    add $I11, rx1261_pos, 1
    gt $I11, rx1261_eos, rx1261_fail2657
    substr $S10, rx1261_tgt, rx1261_pos, 1
    ne $S10, ucs4:":", rx1261_fail2657
    add rx1261_pos, 1
    ge rx1261_pos, rx1261_eos, rx1261_fail2657
    is_cclass $I11, .CCLASS_WHITESPACE, rx1261_tgt, rx1261_pos
    unless $I11, rx1261_fail2657
    add rx1261_pos, 1
    repr_bind_attr_int rx1261_cur, rx1261_curclass, "$!pos", rx1261_pos
    $P11 = rx1261_cur."arglist"()
    repr_get_attr_int $I11, $P11, rx1261_curclass, "$!pos"
    lt $I11, 0, rx1261_fail2657
    nqp_rxmark rx1261_bstack, rxsubrule1271_pass2679, -1, 0
  rxsubrule1271_pass2679:
    rx1261_cstack = rx1261_cur."!cursor_capture"($P11, "args")
    repr_get_attr_int rx1261_pos, $P11, rx1261_curclass, "$!pos"
    goto alt1269_end2675
  alt1269_end2675:
    nqp_rxpeek $I19, rx1261_bstack, rxquantr1268_done2674
    inc $I19
    inc $I19
    set rx1261_rep, rx1261_bstack[$I19]
    nqp_rxcommit rx1261_bstack, rxquantr1268_done2674
    inc rx1261_rep
  rxquantr1268_done2674:
    rx1261_cur."!cursor_pass"(rx1261_pos, "dotty", 'backtrack'=>1)
    .return (rx1261_cur)
  rx1261_restart2656:
    repr_get_attr_obj rx1261_cstack, rx1261_cur, rx1261_curclass, "$!cstack"
  rx1261_fail2657:
    unless rx1261_bstack, rx1261_done2655
    pop $I19, rx1261_bstack
    if_null rx1261_cstack, rx1261_cstack_done2660
    unless rx1261_cstack, rx1261_cstack_done2660
    dec $I19
    set $P11, rx1261_cstack[$I19]
  rx1261_cstack_done2660:
    pop rx1261_rep, rx1261_bstack
    pop rx1261_pos, rx1261_bstack
    pop $I19, rx1261_bstack
    lt rx1261_pos, -1, rx1261_done2655
    lt rx1261_pos, 0, rx1261_fail2657
    eq $I19, 0, rx1261_fail2657
    nqp_islist $I20, rx1261_cstack
    unless $I20, rx1261_jump2658
    elements $I18, rx1261_bstack
    le $I18, 0, rx1261_cut2659
    dec $I18
    set $I18, rx1261_bstack[$I18]
  rx1261_cut2659:
    assign rx1261_cstack, $I18
  rx1261_jump2658:
    jump $I19
  rx1261_done2655:
    rx1261_cur."!cursor_fail"()
    .return (rx1261_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<self>" :subid("cuid_140_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1218
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1272_start
    .local string rx1272_tgt
    .local int rx1272_pos
    .local int rx1272_off
    .local int rx1272_eos
    .local int rx1272_rep
    .local pmc rx1272_cur
    .local pmc rx1272_curclass
    .local pmc rx1272_bstack
    .local pmc rx1272_cstack
    rx1272_start = self."!cursor_start_all"()
    set rx1272_cur, rx1272_start[0]
    set rx1272_tgt, rx1272_start[1]
    set rx1272_pos, rx1272_start[2]
    set rx1272_curclass, rx1272_start[3]
    set rx1272_bstack, rx1272_start[4]
    set $I19, rx1272_start[5]
    store_lex unicode:"$\x{a2}", rx1272_cur
    length rx1272_eos, rx1272_tgt
    eq $I19, 1, rx1272_restart2682
    gt rx1272_pos, rx1272_eos, rx1272_fail2683
    repr_get_attr_int $I11, self, rx1272_curclass, "$!from"
    ne $I11, -1, rxscan1273_done2689
    goto rxscan1273_scan2688
  rxscan1273_loop2687:
    inc rx1272_pos
    gt rx1272_pos, rx1272_eos, rx1272_fail2683
    repr_bind_attr_int rx1272_cur, rx1272_curclass, "$!from", rx1272_pos
  rxscan1273_scan2688:
    nqp_rxmark rx1272_bstack, rxscan1273_loop2687, rx1272_pos, 0
  rxscan1273_done2689:
    nqp_rxmark rx1272_bstack, rxcap1274_fail2691, rx1272_pos, 0
    add $I11, rx1272_pos, 4
    gt $I11, rx1272_eos, rx1272_fail2683
    substr $S10, rx1272_tgt, rx1272_pos, 4
    ne $S10, ucs4:"self", rx1272_fail2683
    add rx1272_pos, 4
    nqp_rxpeek $I19, rx1272_bstack, rxcap1274_fail2691
    inc $I19
    set $I11, rx1272_bstack[$I19]
    repr_bind_attr_int rx1272_cur, rx1272_curclass, "$!pos", rx1272_pos
    $P11 = rx1272_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1272_pos)
    rx1272_cstack = rx1272_cur."!cursor_capture"($P11, "sym")
    goto rxcap1274_done2690
  rxcap1274_fail2691:
    goto rx1272_fail2683
  rxcap1274_done2690:
    le rx1272_pos, 0, rx1272_fail2683
    is_cclass $I11, .CCLASS_WORD, rx1272_tgt, rx1272_pos
    if $I11, rx1272_fail2683
    sub $I11, rx1272_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx1272_tgt, $I11
    unless $I11, rx1272_fail2683
    rx1272_cur."!cursor_pass"(rx1272_pos, "term:sym<self>", 'backtrack'=>1)
    .return (rx1272_cur)
  rx1272_restart2682:
    repr_get_attr_obj rx1272_cstack, rx1272_cur, rx1272_curclass, "$!cstack"
  rx1272_fail2683:
    unless rx1272_bstack, rx1272_done2681
    pop $I19, rx1272_bstack
    if_null rx1272_cstack, rx1272_cstack_done2686
    unless rx1272_cstack, rx1272_cstack_done2686
    dec $I19
    set $P11, rx1272_cstack[$I19]
  rx1272_cstack_done2686:
    pop rx1272_rep, rx1272_bstack
    pop rx1272_pos, rx1272_bstack
    pop $I19, rx1272_bstack
    lt rx1272_pos, -1, rx1272_done2681
    lt rx1272_pos, 0, rx1272_fail2683
    eq $I19, 0, rx1272_fail2683
    nqp_islist $I20, rx1272_cstack
    unless $I20, rx1272_jump2684
    elements $I18, rx1272_bstack
    le $I18, 0, rx1272_cut2685
    dec $I18
    set $I18, rx1272_bstack[$I18]
  rx1272_cut2685:
    assign rx1272_cstack, $I18
  rx1272_jump2684:
    jump $I19
  rx1272_done2681:
    rx1272_cur."!cursor_fail"()
    .return (rx1272_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<identifier>" :subid("cuid_141_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1220
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1276_start
    .local string rx1276_tgt
    .local int rx1276_pos
    .local int rx1276_off
    .local int rx1276_eos
    .local int rx1276_rep
    .local pmc rx1276_cur
    .local pmc rx1276_curclass
    .local pmc rx1276_bstack
    .local pmc rx1276_cstack
    rx1276_start = self."!cursor_start_all"()
    set rx1276_cur, rx1276_start[0]
    set rx1276_tgt, rx1276_start[1]
    set rx1276_pos, rx1276_start[2]
    set rx1276_curclass, rx1276_start[3]
    set rx1276_bstack, rx1276_start[4]
    set $I19, rx1276_start[5]
    store_lex unicode:"$\x{a2}", rx1276_cur
    length rx1276_eos, rx1276_tgt
    eq $I19, 1, rx1276_restart2695
    gt rx1276_pos, rx1276_eos, rx1276_fail2696
    repr_get_attr_int $I11, self, rx1276_curclass, "$!from"
    ne $I11, -1, rxscan1277_done2702
    goto rxscan1277_scan2701
  rxscan1277_loop2700:
    inc rx1276_pos
    gt rx1276_pos, rx1276_eos, rx1276_fail2696
    repr_bind_attr_int rx1276_cur, rx1276_curclass, "$!from", rx1276_pos
  rxscan1277_scan2701:
    nqp_rxmark rx1276_bstack, rxscan1277_loop2700, rx1276_pos, 0
  rxscan1277_done2702:
    repr_bind_attr_int rx1276_cur, rx1276_curclass, "$!pos", rx1276_pos
    $P11 = rx1276_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1276_curclass, "$!pos"
    lt $I11, 0, rx1276_fail2696
    nqp_rxmark rx1276_bstack, rxsubrule1278_pass2703, -1, 0
  rxsubrule1278_pass2703:
    rx1276_cstack = rx1276_cur."!cursor_capture"($P11, "deflongname")
    repr_get_attr_int rx1276_pos, $P11, rx1276_curclass, "$!pos"
    ge rx1276_pos, rx1276_eos, rx1276_fail2696
    substr $S11, rx1276_tgt, rx1276_pos, 1
    index $I11, ucs4:"(", $S11
    lt $I11, 0, rx1276_fail2696
    repr_bind_attr_int rx1276_cur, rx1276_curclass, "$!pos", rx1276_pos
    $P11 = rx1276_cur."args"()
    repr_get_attr_int $I11, $P11, rx1276_curclass, "$!pos"
    lt $I11, 0, rx1276_fail2696
    nqp_rxmark rx1276_bstack, rxsubrule1279_pass2704, -1, 0
  rxsubrule1279_pass2704:
    rx1276_cstack = rx1276_cur."!cursor_capture"($P11, "args")
    repr_get_attr_int rx1276_pos, $P11, rx1276_curclass, "$!pos"
    rx1276_cur."!cursor_pass"(rx1276_pos, "term:sym<identifier>", 'backtrack'=>1)
    .return (rx1276_cur)
  rx1276_restart2695:
    repr_get_attr_obj rx1276_cstack, rx1276_cur, rx1276_curclass, "$!cstack"
  rx1276_fail2696:
    unless rx1276_bstack, rx1276_done2694
    pop $I19, rx1276_bstack
    if_null rx1276_cstack, rx1276_cstack_done2699
    unless rx1276_cstack, rx1276_cstack_done2699
    dec $I19
    set $P11, rx1276_cstack[$I19]
  rx1276_cstack_done2699:
    pop rx1276_rep, rx1276_bstack
    pop rx1276_pos, rx1276_bstack
    pop $I19, rx1276_bstack
    lt rx1276_pos, -1, rx1276_done2694
    lt rx1276_pos, 0, rx1276_fail2696
    eq $I19, 0, rx1276_fail2696
    nqp_islist $I20, rx1276_cstack
    unless $I20, rx1276_jump2697
    elements $I18, rx1276_bstack
    le $I18, 0, rx1276_cut2698
    dec $I18
    set $I18, rx1276_bstack[$I18]
  rx1276_cut2698:
    assign rx1276_cstack, $I18
  rx1276_jump2697:
    jump $I19
  rx1276_done2694:
    rx1276_cur."!cursor_fail"()
    .return (rx1276_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<name>" :subid("cuid_142_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1224
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1280_start
    .local string rx1280_tgt
    .local int rx1280_pos
    .local int rx1280_off
    .local int rx1280_eos
    .local int rx1280_rep
    .local pmc rx1280_cur
    .local pmc rx1280_curclass
    .local pmc rx1280_bstack
    .local pmc rx1280_cstack
    rx1280_start = self."!cursor_start_all"()
    set rx1280_cur, rx1280_start[0]
    set rx1280_tgt, rx1280_start[1]
    set rx1280_pos, rx1280_start[2]
    set rx1280_curclass, rx1280_start[3]
    set rx1280_bstack, rx1280_start[4]
    set $I19, rx1280_start[5]
    store_lex unicode:"$\x{a2}", rx1280_cur
    length rx1280_eos, rx1280_tgt
    eq $I19, 1, rx1280_restart2707
    gt rx1280_pos, rx1280_eos, rx1280_fail2708
    repr_get_attr_int $I11, self, rx1280_curclass, "$!from"
    ne $I11, -1, rxscan1281_done2714
    goto rxscan1281_scan2713
  rxscan1281_loop2712:
    inc rx1280_pos
    gt rx1280_pos, rx1280_eos, rx1280_fail2708
    repr_bind_attr_int rx1280_cur, rx1280_curclass, "$!from", rx1280_pos
  rxscan1281_scan2713:
    nqp_rxmark rx1280_bstack, rxscan1281_loop2712, rx1280_pos, 0
  rxscan1281_done2714:
    repr_bind_attr_int rx1280_cur, rx1280_curclass, "$!pos", rx1280_pos
    $P11 = rx1280_cur."name"()
    repr_get_attr_int $I11, $P11, rx1280_curclass, "$!pos"
    lt $I11, 0, rx1280_fail2708
    nqp_rxmark rx1280_bstack, rxsubrule1282_pass2715, -1, 0
  rxsubrule1282_pass2715:
    rx1280_cstack = rx1280_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx1280_pos, $P11, rx1280_curclass, "$!pos"
    nqp_rxmark rx1280_bstack, rxquantr1283_done2717, rx1280_pos, 0
  rxquantr1283_loop2716:
    repr_bind_attr_int rx1280_cur, rx1280_curclass, "$!pos", rx1280_pos
    $P11 = rx1280_cur."args"()
    repr_get_attr_int $I11, $P11, rx1280_curclass, "$!pos"
    lt $I11, 0, rx1280_fail2708
    goto rxsubrule1284_pass2718
  rxsubrule1284_back2719:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1280_curclass, "$!pos"
    lt $I11, 0, rx1280_fail2708
  rxsubrule1284_pass2718:
    rx1280_cstack = rx1280_cur."!cursor_capture"($P11, "args")
    set_addr $I11, rxsubrule1284_back2719
    push rx1280_bstack, $I11
    push rx1280_bstack, 0
    push rx1280_bstack, rx1280_pos
    elements $I11, rx1280_cstack
    push rx1280_bstack, $I11
    repr_get_attr_int rx1280_pos, $P11, rx1280_curclass, "$!pos"
    nqp_rxpeek $I19, rx1280_bstack, rxquantr1283_done2717
    inc $I19
    inc $I19
    set rx1280_rep, rx1280_bstack[$I19]
    nqp_rxcommit rx1280_bstack, rxquantr1283_done2717
    inc rx1280_rep
  rxquantr1283_done2717:
    rx1280_cur."!cursor_pass"(rx1280_pos, "term:sym<name>", 'backtrack'=>1)
    .return (rx1280_cur)
  rx1280_restart2707:
    repr_get_attr_obj rx1280_cstack, rx1280_cur, rx1280_curclass, "$!cstack"
  rx1280_fail2708:
    unless rx1280_bstack, rx1280_done2706
    pop $I19, rx1280_bstack
    if_null rx1280_cstack, rx1280_cstack_done2711
    unless rx1280_cstack, rx1280_cstack_done2711
    dec $I19
    set $P11, rx1280_cstack[$I19]
  rx1280_cstack_done2711:
    pop rx1280_rep, rx1280_bstack
    pop rx1280_pos, rx1280_bstack
    pop $I19, rx1280_bstack
    lt rx1280_pos, -1, rx1280_done2706
    lt rx1280_pos, 0, rx1280_fail2708
    eq $I19, 0, rx1280_fail2708
    nqp_islist $I20, rx1280_cstack
    unless $I20, rx1280_jump2709
    elements $I18, rx1280_bstack
    le $I18, 0, rx1280_cut2710
    dec $I18
    set $I18, rx1280_bstack[$I18]
  rx1280_cut2710:
    assign rx1280_cstack, $I18
  rx1280_jump2709:
    jump $I19
  rx1280_done2706:
    rx1280_cur."!cursor_fail"()
    .return (rx1280_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<pir::op>" :subid("cuid_143_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1228
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1285_start
    .local string rx1285_tgt
    .local int rx1285_pos
    .local int rx1285_off
    .local int rx1285_eos
    .local int rx1285_rep
    .local pmc rx1285_cur
    .local pmc rx1285_curclass
    .local pmc rx1285_bstack
    .local pmc rx1285_cstack
    rx1285_start = self."!cursor_start_all"()
    set rx1285_cur, rx1285_start[0]
    set rx1285_tgt, rx1285_start[1]
    set rx1285_pos, rx1285_start[2]
    set rx1285_curclass, rx1285_start[3]
    set rx1285_bstack, rx1285_start[4]
    set $I19, rx1285_start[5]
    store_lex unicode:"$\x{a2}", rx1285_cur
    length rx1285_eos, rx1285_tgt
    eq $I19, 1, rx1285_restart2722
    gt rx1285_pos, rx1285_eos, rx1285_fail2723
    repr_get_attr_int $I11, self, rx1285_curclass, "$!from"
    ne $I11, -1, rxscan1286_done2729
    goto rxscan1286_scan2728
  rxscan1286_loop2727:
    inc rx1285_pos
    gt rx1285_pos, rx1285_eos, rx1285_fail2723
    repr_bind_attr_int rx1285_cur, rx1285_curclass, "$!from", rx1285_pos
  rxscan1286_scan2728:
    nqp_rxmark rx1285_bstack, rxscan1286_loop2727, rx1285_pos, 0
  rxscan1286_done2729:
    add $I11, rx1285_pos, 5
    gt $I11, rx1285_eos, rx1285_fail2723
    substr $S10, rx1285_tgt, rx1285_pos, 5
    ne $S10, ucs4:"pir::", rx1285_fail2723
    add rx1285_pos, 5
    nqp_rxmark rx1285_bstack, rxcap1287_fail2731, rx1285_pos, 0
    nqp_rxmark rx1285_bstack, rxquantr1288_done2733, -1, 0
  rxquantr1288_loop2732:
    ge rx1285_pos, rx1285_eos, rx1285_fail2723
    is_cclass $I11, .CCLASS_WORD, rx1285_tgt, rx1285_pos
    unless $I11, rx1285_fail2723
    add rx1285_pos, 1
    nqp_rxpeek $I19, rx1285_bstack, rxquantr1288_done2733
    inc $I19
    inc $I19
    set rx1285_rep, rx1285_bstack[$I19]
    nqp_rxcommit rx1285_bstack, rxquantr1288_done2733
    inc rx1285_rep
    nqp_rxmark rx1285_bstack, rxquantr1288_done2733, rx1285_pos, rx1285_rep
    goto rxquantr1288_loop2732
  rxquantr1288_done2733:
    nqp_rxpeek $I19, rx1285_bstack, rxcap1287_fail2731
    inc $I19
    set $I11, rx1285_bstack[$I19]
    repr_bind_attr_int rx1285_cur, rx1285_curclass, "$!pos", rx1285_pos
    $P11 = rx1285_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1285_pos)
    rx1285_cstack = rx1285_cur."!cursor_capture"($P11, "op")
    goto rxcap1287_done2730
  rxcap1287_fail2731:
    goto rx1285_fail2723
  rxcap1287_done2730:
    nqp_rxmark rx1285_bstack, rxquantr1289_done2735, rx1285_pos, 0
  rxquantr1289_loop2734:
    repr_bind_attr_int rx1285_cur, rx1285_curclass, "$!pos", rx1285_pos
    $P11 = rx1285_cur."args"()
    repr_get_attr_int $I11, $P11, rx1285_curclass, "$!pos"
    lt $I11, 0, rx1285_fail2723
    goto rxsubrule1290_pass2736
  rxsubrule1290_back2737:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1285_curclass, "$!pos"
    lt $I11, 0, rx1285_fail2723
  rxsubrule1290_pass2736:
    rx1285_cstack = rx1285_cur."!cursor_capture"($P11, "args")
    set_addr $I11, rxsubrule1290_back2737
    push rx1285_bstack, $I11
    push rx1285_bstack, 0
    push rx1285_bstack, rx1285_pos
    elements $I11, rx1285_cstack
    push rx1285_bstack, $I11
    repr_get_attr_int rx1285_pos, $P11, rx1285_curclass, "$!pos"
    nqp_rxpeek $I19, rx1285_bstack, rxquantr1289_done2735
    inc $I19
    inc $I19
    set rx1285_rep, rx1285_bstack[$I19]
    nqp_rxcommit rx1285_bstack, rxquantr1289_done2735
    inc rx1285_rep
  rxquantr1289_done2735:
    rx1285_cur."!cursor_pass"(rx1285_pos, "term:sym<pir::op>", 'backtrack'=>1)
    .return (rx1285_cur)
  rx1285_restart2722:
    repr_get_attr_obj rx1285_cstack, rx1285_cur, rx1285_curclass, "$!cstack"
  rx1285_fail2723:
    unless rx1285_bstack, rx1285_done2721
    pop $I19, rx1285_bstack
    if_null rx1285_cstack, rx1285_cstack_done2726
    unless rx1285_cstack, rx1285_cstack_done2726
    dec $I19
    set $P11, rx1285_cstack[$I19]
  rx1285_cstack_done2726:
    pop rx1285_rep, rx1285_bstack
    pop rx1285_pos, rx1285_bstack
    pop $I19, rx1285_bstack
    lt rx1285_pos, -1, rx1285_done2721
    lt rx1285_pos, 0, rx1285_fail2723
    eq $I19, 0, rx1285_fail2723
    nqp_islist $I20, rx1285_cstack
    unless $I20, rx1285_jump2724
    elements $I18, rx1285_bstack
    le $I18, 0, rx1285_cut2725
    dec $I18
    set $I18, rx1285_bstack[$I18]
  rx1285_cut2725:
    assign rx1285_cstack, $I18
  rx1285_jump2724:
    jump $I19
  rx1285_done2721:
    rx1285_cur."!cursor_fail"()
    .return (rx1285_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<pir::const>" :subid("cuid_144_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1232
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1291_start
    .local string rx1291_tgt
    .local int rx1291_pos
    .local int rx1291_off
    .local int rx1291_eos
    .local int rx1291_rep
    .local pmc rx1291_cur
    .local pmc rx1291_curclass
    .local pmc rx1291_bstack
    .local pmc rx1291_cstack
    rx1291_start = self."!cursor_start_all"()
    set rx1291_cur, rx1291_start[0]
    set rx1291_tgt, rx1291_start[1]
    set rx1291_pos, rx1291_start[2]
    set rx1291_curclass, rx1291_start[3]
    set rx1291_bstack, rx1291_start[4]
    set $I19, rx1291_start[5]
    store_lex unicode:"$\x{a2}", rx1291_cur
    length rx1291_eos, rx1291_tgt
    eq $I19, 1, rx1291_restart2740
    gt rx1291_pos, rx1291_eos, rx1291_fail2741
    repr_get_attr_int $I11, self, rx1291_curclass, "$!from"
    ne $I11, -1, rxscan1292_done2747
    goto rxscan1292_scan2746
  rxscan1292_loop2745:
    inc rx1291_pos
    gt rx1291_pos, rx1291_eos, rx1291_fail2741
    repr_bind_attr_int rx1291_cur, rx1291_curclass, "$!from", rx1291_pos
  rxscan1292_scan2746:
    nqp_rxmark rx1291_bstack, rxscan1292_loop2745, rx1291_pos, 0
  rxscan1292_done2747:
    add $I11, rx1291_pos, 12
    gt $I11, rx1291_eos, rx1291_fail2741
    substr $S10, rx1291_tgt, rx1291_pos, 12
    ne $S10, ucs4:"pir::const::", rx1291_fail2741
    add rx1291_pos, 12
    nqp_rxmark rx1291_bstack, rxcap1293_fail2749, rx1291_pos, 0
    nqp_rxmark rx1291_bstack, rxquantr1294_done2751, -1, 0
  rxquantr1294_loop2750:
    ge rx1291_pos, rx1291_eos, rx1291_fail2741
    is_cclass $I11, .CCLASS_WORD, rx1291_tgt, rx1291_pos
    unless $I11, rx1291_fail2741
    add rx1291_pos, 1
    nqp_rxpeek $I19, rx1291_bstack, rxquantr1294_done2751
    inc $I19
    inc $I19
    set rx1291_rep, rx1291_bstack[$I19]
    nqp_rxcommit rx1291_bstack, rxquantr1294_done2751
    inc rx1291_rep
    nqp_rxmark rx1291_bstack, rxquantr1294_done2751, rx1291_pos, rx1291_rep
    goto rxquantr1294_loop2750
  rxquantr1294_done2751:
    nqp_rxpeek $I19, rx1291_bstack, rxcap1293_fail2749
    inc $I19
    set $I11, rx1291_bstack[$I19]
    repr_bind_attr_int rx1291_cur, rx1291_curclass, "$!pos", rx1291_pos
    $P11 = rx1291_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1291_pos)
    rx1291_cstack = rx1291_cur."!cursor_capture"($P11, "const")
    goto rxcap1293_done2748
  rxcap1293_fail2749:
    goto rx1291_fail2741
  rxcap1293_done2748:
    rx1291_cur."!cursor_pass"(rx1291_pos, "term:sym<pir::const>", 'backtrack'=>1)
    .return (rx1291_cur)
  rx1291_restart2740:
    repr_get_attr_obj rx1291_cstack, rx1291_cur, rx1291_curclass, "$!cstack"
  rx1291_fail2741:
    unless rx1291_bstack, rx1291_done2739
    pop $I19, rx1291_bstack
    if_null rx1291_cstack, rx1291_cstack_done2744
    unless rx1291_cstack, rx1291_cstack_done2744
    dec $I19
    set $P11, rx1291_cstack[$I19]
  rx1291_cstack_done2744:
    pop rx1291_rep, rx1291_bstack
    pop rx1291_pos, rx1291_bstack
    pop $I19, rx1291_bstack
    lt rx1291_pos, -1, rx1291_done2739
    lt rx1291_pos, 0, rx1291_fail2741
    eq $I19, 0, rx1291_fail2741
    nqp_islist $I20, rx1291_cstack
    unless $I20, rx1291_jump2742
    elements $I18, rx1291_bstack
    le $I18, 0, rx1291_cut2743
    dec $I18
    set $I18, rx1291_bstack[$I18]
  rx1291_cut2743:
    assign rx1291_cstack, $I18
  rx1291_jump2742:
    jump $I19
  rx1291_done2739:
    rx1291_cur."!cursor_fail"()
    .return (rx1291_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<nqp::op>" :subid("cuid_145_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1236
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1295_start
    .local string rx1295_tgt
    .local int rx1295_pos
    .local int rx1295_off
    .local int rx1295_eos
    .local int rx1295_rep
    .local pmc rx1295_cur
    .local pmc rx1295_curclass
    .local pmc rx1295_bstack
    .local pmc rx1295_cstack
    rx1295_start = self."!cursor_start_all"()
    set rx1295_cur, rx1295_start[0]
    set rx1295_tgt, rx1295_start[1]
    set rx1295_pos, rx1295_start[2]
    set rx1295_curclass, rx1295_start[3]
    set rx1295_bstack, rx1295_start[4]
    set $I19, rx1295_start[5]
    store_lex unicode:"$\x{a2}", rx1295_cur
    length rx1295_eos, rx1295_tgt
    eq $I19, 1, rx1295_restart2754
    gt rx1295_pos, rx1295_eos, rx1295_fail2755
    repr_get_attr_int $I11, self, rx1295_curclass, "$!from"
    ne $I11, -1, rxscan1296_done2761
    goto rxscan1296_scan2760
  rxscan1296_loop2759:
    inc rx1295_pos
    gt rx1295_pos, rx1295_eos, rx1295_fail2755
    repr_bind_attr_int rx1295_cur, rx1295_curclass, "$!from", rx1295_pos
  rxscan1296_scan2760:
    nqp_rxmark rx1295_bstack, rxscan1296_loop2759, rx1295_pos, 0
  rxscan1296_done2761:
    add $I11, rx1295_pos, 5
    gt $I11, rx1295_eos, rx1295_fail2755
    substr $S10, rx1295_tgt, rx1295_pos, 5
    ne $S10, ucs4:"nqp::", rx1295_fail2755
    add rx1295_pos, 5
    nqp_rxmark rx1295_bstack, rxcap1297_fail2763, rx1295_pos, 0
    nqp_rxmark rx1295_bstack, rxquantr1298_done2765, -1, 0
  rxquantr1298_loop2764:
    ge rx1295_pos, rx1295_eos, rx1295_fail2755
    is_cclass $I11, .CCLASS_WORD, rx1295_tgt, rx1295_pos
    unless $I11, rx1295_fail2755
    add rx1295_pos, 1
    nqp_rxpeek $I19, rx1295_bstack, rxquantr1298_done2765
    inc $I19
    inc $I19
    set rx1295_rep, rx1295_bstack[$I19]
    nqp_rxcommit rx1295_bstack, rxquantr1298_done2765
    inc rx1295_rep
    nqp_rxmark rx1295_bstack, rxquantr1298_done2765, rx1295_pos, rx1295_rep
    goto rxquantr1298_loop2764
  rxquantr1298_done2765:
    nqp_rxpeek $I19, rx1295_bstack, rxcap1297_fail2763
    inc $I19
    set $I11, rx1295_bstack[$I19]
    repr_bind_attr_int rx1295_cur, rx1295_curclass, "$!pos", rx1295_pos
    $P11 = rx1295_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1295_pos)
    rx1295_cstack = rx1295_cur."!cursor_capture"($P11, "op")
    goto rxcap1297_done2762
  rxcap1297_fail2763:
    goto rx1295_fail2755
  rxcap1297_done2762:
    nqp_rxmark rx1295_bstack, rxquantr1299_done2767, rx1295_pos, 0
  rxquantr1299_loop2766:
    repr_bind_attr_int rx1295_cur, rx1295_curclass, "$!pos", rx1295_pos
    $P11 = rx1295_cur."args"()
    repr_get_attr_int $I11, $P11, rx1295_curclass, "$!pos"
    lt $I11, 0, rx1295_fail2755
    goto rxsubrule1300_pass2768
  rxsubrule1300_back2769:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1295_curclass, "$!pos"
    lt $I11, 0, rx1295_fail2755
  rxsubrule1300_pass2768:
    rx1295_cstack = rx1295_cur."!cursor_capture"($P11, "args")
    set_addr $I11, rxsubrule1300_back2769
    push rx1295_bstack, $I11
    push rx1295_bstack, 0
    push rx1295_bstack, rx1295_pos
    elements $I11, rx1295_cstack
    push rx1295_bstack, $I11
    repr_get_attr_int rx1295_pos, $P11, rx1295_curclass, "$!pos"
    nqp_rxpeek $I19, rx1295_bstack, rxquantr1299_done2767
    inc $I19
    inc $I19
    set rx1295_rep, rx1295_bstack[$I19]
    nqp_rxcommit rx1295_bstack, rxquantr1299_done2767
    inc rx1295_rep
  rxquantr1299_done2767:
    rx1295_cur."!cursor_pass"(rx1295_pos, "term:sym<nqp::op>", 'backtrack'=>1)
    .return (rx1295_cur)
  rx1295_restart2754:
    repr_get_attr_obj rx1295_cstack, rx1295_cur, rx1295_curclass, "$!cstack"
  rx1295_fail2755:
    unless rx1295_bstack, rx1295_done2753
    pop $I19, rx1295_bstack
    if_null rx1295_cstack, rx1295_cstack_done2758
    unless rx1295_cstack, rx1295_cstack_done2758
    dec $I19
    set $P11, rx1295_cstack[$I19]
  rx1295_cstack_done2758:
    pop rx1295_rep, rx1295_bstack
    pop rx1295_pos, rx1295_bstack
    pop $I19, rx1295_bstack
    lt rx1295_pos, -1, rx1295_done2753
    lt rx1295_pos, 0, rx1295_fail2755
    eq $I19, 0, rx1295_fail2755
    nqp_islist $I20, rx1295_cstack
    unless $I20, rx1295_jump2756
    elements $I18, rx1295_bstack
    le $I18, 0, rx1295_cut2757
    dec $I18
    set $I18, rx1295_bstack[$I18]
  rx1295_cut2757:
    assign rx1295_cstack, $I18
  rx1295_jump2756:
    jump $I19
  rx1295_done2753:
    rx1295_cur."!cursor_fail"()
    .return (rx1295_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<nqp::const>" :subid("cuid_146_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1240
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1301_start
    .local string rx1301_tgt
    .local int rx1301_pos
    .local int rx1301_off
    .local int rx1301_eos
    .local int rx1301_rep
    .local pmc rx1301_cur
    .local pmc rx1301_curclass
    .local pmc rx1301_bstack
    .local pmc rx1301_cstack
    rx1301_start = self."!cursor_start_all"()
    set rx1301_cur, rx1301_start[0]
    set rx1301_tgt, rx1301_start[1]
    set rx1301_pos, rx1301_start[2]
    set rx1301_curclass, rx1301_start[3]
    set rx1301_bstack, rx1301_start[4]
    set $I19, rx1301_start[5]
    store_lex unicode:"$\x{a2}", rx1301_cur
    length rx1301_eos, rx1301_tgt
    eq $I19, 1, rx1301_restart2772
    gt rx1301_pos, rx1301_eos, rx1301_fail2773
    repr_get_attr_int $I11, self, rx1301_curclass, "$!from"
    ne $I11, -1, rxscan1302_done2779
    goto rxscan1302_scan2778
  rxscan1302_loop2777:
    inc rx1301_pos
    gt rx1301_pos, rx1301_eos, rx1301_fail2773
    repr_bind_attr_int rx1301_cur, rx1301_curclass, "$!from", rx1301_pos
  rxscan1302_scan2778:
    nqp_rxmark rx1301_bstack, rxscan1302_loop2777, rx1301_pos, 0
  rxscan1302_done2779:
    add $I11, rx1301_pos, 12
    gt $I11, rx1301_eos, rx1301_fail2773
    substr $S10, rx1301_tgt, rx1301_pos, 12
    ne $S10, ucs4:"nqp::const::", rx1301_fail2773
    add rx1301_pos, 12
    nqp_rxmark rx1301_bstack, rxcap1303_fail2781, rx1301_pos, 0
    nqp_rxmark rx1301_bstack, rxquantr1304_done2783, -1, 0
  rxquantr1304_loop2782:
    ge rx1301_pos, rx1301_eos, rx1301_fail2773
    is_cclass $I11, .CCLASS_WORD, rx1301_tgt, rx1301_pos
    unless $I11, rx1301_fail2773
    add rx1301_pos, 1
    nqp_rxpeek $I19, rx1301_bstack, rxquantr1304_done2783
    inc $I19
    inc $I19
    set rx1301_rep, rx1301_bstack[$I19]
    nqp_rxcommit rx1301_bstack, rxquantr1304_done2783
    inc rx1301_rep
    nqp_rxmark rx1301_bstack, rxquantr1304_done2783, rx1301_pos, rx1301_rep
    goto rxquantr1304_loop2782
  rxquantr1304_done2783:
    nqp_rxpeek $I19, rx1301_bstack, rxcap1303_fail2781
    inc $I19
    set $I11, rx1301_bstack[$I19]
    repr_bind_attr_int rx1301_cur, rx1301_curclass, "$!pos", rx1301_pos
    $P11 = rx1301_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1301_pos)
    rx1301_cstack = rx1301_cur."!cursor_capture"($P11, "const")
    goto rxcap1303_done2780
  rxcap1303_fail2781:
    goto rx1301_fail2773
  rxcap1303_done2780:
    rx1301_cur."!cursor_pass"(rx1301_pos, "term:sym<nqp::const>", 'backtrack'=>1)
    .return (rx1301_cur)
  rx1301_restart2772:
    repr_get_attr_obj rx1301_cstack, rx1301_cur, rx1301_curclass, "$!cstack"
  rx1301_fail2773:
    unless rx1301_bstack, rx1301_done2771
    pop $I19, rx1301_bstack
    if_null rx1301_cstack, rx1301_cstack_done2776
    unless rx1301_cstack, rx1301_cstack_done2776
    dec $I19
    set $P11, rx1301_cstack[$I19]
  rx1301_cstack_done2776:
    pop rx1301_rep, rx1301_bstack
    pop rx1301_pos, rx1301_bstack
    pop $I19, rx1301_bstack
    lt rx1301_pos, -1, rx1301_done2771
    lt rx1301_pos, 0, rx1301_fail2773
    eq $I19, 0, rx1301_fail2773
    nqp_islist $I20, rx1301_cstack
    unless $I20, rx1301_jump2774
    elements $I18, rx1301_bstack
    le $I18, 0, rx1301_cut2775
    dec $I18
    set $I18, rx1301_bstack[$I18]
  rx1301_cut2775:
    assign rx1301_cstack, $I18
  rx1301_jump2774:
    jump $I19
  rx1301_done2771:
    rx1301_cur."!cursor_fail"()
    .return (rx1301_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<onlystar>" :subid("cuid_147_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1244
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_412_1367388600.55005' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1305_start
    .local string rx1305_tgt
    .local int rx1305_pos
    .local int rx1305_off
    .local int rx1305_eos
    .local int rx1305_rep
    .local pmc rx1305_cur
    .local pmc rx1305_curclass
    .local pmc rx1305_bstack
    .local pmc rx1305_cstack
    rx1305_start = self."!cursor_start_all"()
    set rx1305_cur, rx1305_start[0]
    set rx1305_tgt, rx1305_start[1]
    set rx1305_pos, rx1305_start[2]
    set rx1305_curclass, rx1305_start[3]
    set rx1305_bstack, rx1305_start[4]
    set $I19, rx1305_start[5]
    store_lex unicode:"$\x{a2}", rx1305_cur
    length rx1305_eos, rx1305_tgt
    eq $I19, 1, rx1305_restart2786
    gt rx1305_pos, rx1305_eos, rx1305_fail2787
    repr_get_attr_int $I11, self, rx1305_curclass, "$!from"
    ne $I11, -1, rxscan1306_done2793
    goto rxscan1306_scan2792
  rxscan1306_loop2791:
    inc rx1305_pos
    gt rx1305_pos, rx1305_eos, rx1305_fail2787
    repr_bind_attr_int rx1305_cur, rx1305_curclass, "$!from", rx1305_pos
  rxscan1306_scan2792:
    nqp_rxmark rx1305_bstack, rxscan1306_loop2791, rx1305_pos, 0
  rxscan1306_done2793:
    add $I11, rx1305_pos, 3
    gt $I11, rx1305_eos, rx1305_fail2787
    substr $S10, rx1305_tgt, rx1305_pos, 3
    ne $S10, ucs4:"{*}", rx1305_fail2787
    add rx1305_pos, 3
    repr_bind_attr_int rx1305_cur, rx1305_curclass, "$!pos", rx1305_pos
    $P11 = rx1305_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1305_curclass, "$!pos"
    lt $I11, 0, rx1305_fail2787
  alt1307_02795:
    nqp_rxmark rx1305_bstack, alt1307_12801, rx1305_pos, 0
    repr_bind_attr_int rx1305_cur, rx1305_curclass, "$!pos", rx1305_pos
    store_lex unicode:"$\x{a2}", rx1305_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_412_1367388600.55005' 
    capture_lex $P5002
    $P5003 = $P5002()
    unless $P5003, rx1305_fail2787
    goto alt1307_end2794
  alt1307_12801:
    repr_bind_attr_int rx1305_cur, rx1305_curclass, "$!pos", rx1305_pos
    $P11 = rx1305_cur."panic"("{*} may only appear in proto")
    repr_get_attr_int $I11, $P11, rx1305_curclass, "$!pos"
    lt $I11, 0, rx1305_fail2787
    repr_get_attr_int rx1305_pos, $P11, rx1305_curclass, "$!pos"
  alt1307_end2794:
    rx1305_cur."!cursor_pass"(rx1305_pos, "term:sym<onlystar>", 'backtrack'=>1)
    .return (rx1305_cur)
  rx1305_restart2786:
    repr_get_attr_obj rx1305_cstack, rx1305_cur, rx1305_curclass, "$!cstack"
  rx1305_fail2787:
    unless rx1305_bstack, rx1305_done2785
    pop $I19, rx1305_bstack
    if_null rx1305_cstack, rx1305_cstack_done2790
    unless rx1305_cstack, rx1305_cstack_done2790
    dec $I19
    set $P11, rx1305_cstack[$I19]
  rx1305_cstack_done2790:
    pop rx1305_rep, rx1305_bstack
    pop rx1305_pos, rx1305_bstack
    pop $I19, rx1305_bstack
    lt rx1305_pos, -1, rx1305_done2785
    lt rx1305_pos, 0, rx1305_fail2787
    eq $I19, 0, rx1305_fail2787
    nqp_islist $I20, rx1305_cstack
    unless $I20, rx1305_jump2788
    elements $I18, rx1305_bstack
    le $I18, 0, rx1305_cut2789
    dec $I18
    set $I18, rx1305_bstack[$I18]
  rx1305_cut2789:
    assign rx1305_cstack, $I18
  rx1305_jump2788:
    jump $I19
  rx1305_done2785:
    rx1305_cur."!cursor_fail"()
    .return (rx1305_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_412_1367388600.55005") :anon :lex :outer("cuid_147_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1246
    .local pmc fb_tmp_165 
    find_dynamic_lex $P5001, "$*MULTINESS"
    unless_null $P5001, fallback2796
    nqp_get_sc_object $P5003, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5002, $P5003
    set fb_tmp_165, $P5002
    repr_defined $I5002, fb_tmp_165
    unless $I5002 goto if1308_else2797 
    set $P5004, fb_tmp_165["$MULTINESS"]
    set $P5006, $P5004
    goto if1308_end2798
  if1308_else2797:
    null $P5005
    set $P5006, $P5005
  if1308_end2798:
    unless_null $P5006, vivi_13092799
    nqp_get_sc_object $P5007, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5006, $P5007
  vivi_13092799:
    unless_null $P5006, vivi_13102800
    die "Contextual $*MULTINESS not found"
    box $P5008, "Contextual $*MULTINESS not found"
    set $P5006, $P5008
  vivi_13102800:
    set $P5001, $P5006
  fallback2796:
    set $S5001, $P5001
    iseq $I5001, $S5001, "proto"
    .return ($I5001) 
.end
.HLL "nqp"
.namespace []
.sub "args" :subid("cuid_148_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1249
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1312_start
    .local string rx1312_tgt
    .local int rx1312_pos
    .local int rx1312_off
    .local int rx1312_eos
    .local int rx1312_rep
    .local pmc rx1312_cur
    .local pmc rx1312_curclass
    .local pmc rx1312_bstack
    .local pmc rx1312_cstack
    rx1312_start = self."!cursor_start_all"()
    set rx1312_cur, rx1312_start[0]
    set rx1312_tgt, rx1312_start[1]
    set rx1312_pos, rx1312_start[2]
    set rx1312_curclass, rx1312_start[3]
    set rx1312_bstack, rx1312_start[4]
    set $I19, rx1312_start[5]
    store_lex unicode:"$\x{a2}", rx1312_cur
    length rx1312_eos, rx1312_tgt
    eq $I19, 1, rx1312_restart2805
    gt rx1312_pos, rx1312_eos, rx1312_fail2806
    repr_get_attr_int $I11, self, rx1312_curclass, "$!from"
    ne $I11, -1, rxscan1313_done2812
    goto rxscan1313_scan2811
  rxscan1313_loop2810:
    inc rx1312_pos
    gt rx1312_pos, rx1312_eos, rx1312_fail2806
    repr_bind_attr_int rx1312_cur, rx1312_curclass, "$!from", rx1312_pos
  rxscan1313_scan2811:
    nqp_rxmark rx1312_bstack, rxscan1313_loop2810, rx1312_pos, 0
  rxscan1313_done2812:
    add $I11, rx1312_pos, 1
    gt $I11, rx1312_eos, rx1312_fail2806
    substr $S10, rx1312_tgt, rx1312_pos, 1
    ne $S10, ucs4:"(", rx1312_fail2806
    add rx1312_pos, 1
    repr_bind_attr_int rx1312_cur, rx1312_curclass, "$!pos", rx1312_pos
    $P11 = rx1312_cur."arglist"()
    repr_get_attr_int $I11, $P11, rx1312_curclass, "$!pos"
    lt $I11, 0, rx1312_fail2806
    nqp_rxmark rx1312_bstack, rxsubrule1314_pass2813, -1, 0
  rxsubrule1314_pass2813:
    rx1312_cstack = rx1312_cur."!cursor_capture"($P11, "arglist")
    repr_get_attr_int rx1312_pos, $P11, rx1312_curclass, "$!pos"
    add $I11, rx1312_pos, 1
    gt $I11, rx1312_eos, rx1312_fail2806
    substr $S10, rx1312_tgt, rx1312_pos, 1
    ne $S10, ucs4:")", rx1312_fail2806
    add rx1312_pos, 1
    rx1312_cur."!cursor_pass"(rx1312_pos, "args", 'backtrack'=>1)
    .return (rx1312_cur)
  rx1312_restart2805:
    repr_get_attr_obj rx1312_cstack, rx1312_cur, rx1312_curclass, "$!cstack"
  rx1312_fail2806:
    unless rx1312_bstack, rx1312_done2804
    pop $I19, rx1312_bstack
    if_null rx1312_cstack, rx1312_cstack_done2809
    unless rx1312_cstack, rx1312_cstack_done2809
    dec $I19
    set $P11, rx1312_cstack[$I19]
  rx1312_cstack_done2809:
    pop rx1312_rep, rx1312_bstack
    pop rx1312_pos, rx1312_bstack
    pop $I19, rx1312_bstack
    lt rx1312_pos, -1, rx1312_done2804
    lt rx1312_pos, 0, rx1312_fail2806
    eq $I19, 0, rx1312_fail2806
    nqp_islist $I20, rx1312_cstack
    unless $I20, rx1312_jump2807
    elements $I18, rx1312_bstack
    le $I18, 0, rx1312_cut2808
    dec $I18
    set $I18, rx1312_bstack[$I18]
  rx1312_cut2808:
    assign rx1312_cstack, $I18
  rx1312_jump2807:
    jump $I19
  rx1312_done2804:
    rx1312_cur."!cursor_fail"()
    .return (rx1312_cur) 
.end
.HLL "nqp"
.namespace []
.sub "arglist" :subid("cuid_149_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1253
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1315_start
    .local string rx1315_tgt
    .local int rx1315_pos
    .local int rx1315_off
    .local int rx1315_eos
    .local int rx1315_rep
    .local pmc rx1315_cur
    .local pmc rx1315_curclass
    .local pmc rx1315_bstack
    .local pmc rx1315_cstack
    rx1315_start = self."!cursor_start_all"()
    set rx1315_cur, rx1315_start[0]
    set rx1315_tgt, rx1315_start[1]
    set rx1315_pos, rx1315_start[2]
    set rx1315_curclass, rx1315_start[3]
    set rx1315_bstack, rx1315_start[4]
    set $I19, rx1315_start[5]
    store_lex unicode:"$\x{a2}", rx1315_cur
    length rx1315_eos, rx1315_tgt
    eq $I19, 1, rx1315_restart2816
    gt rx1315_pos, rx1315_eos, rx1315_fail2817
    repr_get_attr_int $I11, self, rx1315_curclass, "$!from"
    ne $I11, -1, rxscan1316_done2823
    goto rxscan1316_scan2822
  rxscan1316_loop2821:
    inc rx1315_pos
    gt rx1315_pos, rx1315_eos, rx1315_fail2817
    repr_bind_attr_int rx1315_cur, rx1315_curclass, "$!from", rx1315_pos
  rxscan1316_scan2822:
    nqp_rxmark rx1315_bstack, rxscan1316_loop2821, rx1315_pos, 0
  rxscan1316_done2823:
    repr_bind_attr_int rx1315_cur, rx1315_curclass, "$!pos", rx1315_pos
    $P11 = rx1315_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1315_curclass, "$!pos"
    lt $I11, 0, rx1315_fail2817
    repr_get_attr_int rx1315_pos, $P11, rx1315_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1318_02826
    nqp_push_label $P11, alt1318_12828
    nqp_rxmark rx1315_bstack, alt1318_end2825, -1, 0
    rx1315_cur."!alt"(rx1315_pos, "alt_nfa__36_1367388604.21907", $P11)
    goto rx1315_fail2817
  alt1318_02826:
    repr_bind_attr_int rx1315_cur, rx1315_curclass, "$!pos", rx1315_pos
    $P11 = rx1315_cur."EXPR"("f=")
    repr_get_attr_int $I11, $P11, rx1315_curclass, "$!pos"
    lt $I11, 0, rx1315_fail2817
    nqp_rxmark rx1315_bstack, rxsubrule1319_pass2827, -1, 0
  rxsubrule1319_pass2827:
    rx1315_cstack = rx1315_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx1315_pos, $P11, rx1315_curclass, "$!pos"
    goto alt1318_end2825
  alt1318_12828:
    goto alt1318_end2825
  alt1318_end2825:
    nqp_rxcommit rx1315_bstack, alt1318_end2825
    rx1315_cur."!cursor_pass"(rx1315_pos, "arglist", 'backtrack'=>1)
    .return (rx1315_cur)
  rx1315_restart2816:
    repr_get_attr_obj rx1315_cstack, rx1315_cur, rx1315_curclass, "$!cstack"
  rx1315_fail2817:
    unless rx1315_bstack, rx1315_done2815
    pop $I19, rx1315_bstack
    if_null rx1315_cstack, rx1315_cstack_done2820
    unless rx1315_cstack, rx1315_cstack_done2820
    dec $I19
    set $P11, rx1315_cstack[$I19]
  rx1315_cstack_done2820:
    pop rx1315_rep, rx1315_bstack
    pop rx1315_pos, rx1315_bstack
    pop $I19, rx1315_bstack
    lt rx1315_pos, -1, rx1315_done2815
    lt rx1315_pos, 0, rx1315_fail2817
    eq $I19, 0, rx1315_fail2817
    nqp_islist $I20, rx1315_cstack
    unless $I20, rx1315_jump2818
    elements $I18, rx1315_bstack
    le $I18, 0, rx1315_cut2819
    dec $I18
    set $I18, rx1315_bstack[$I18]
  rx1315_cut2819:
    assign rx1315_cstack, $I18
  rx1315_jump2818:
    jump $I19
  rx1315_done2815:
    rx1315_cur."!cursor_fail"()
    .return (rx1315_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<value>" :subid("cuid_150_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1262
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1321_start
    .local string rx1321_tgt
    .local int rx1321_pos
    .local int rx1321_off
    .local int rx1321_eos
    .local int rx1321_rep
    .local pmc rx1321_cur
    .local pmc rx1321_curclass
    .local pmc rx1321_bstack
    .local pmc rx1321_cstack
    rx1321_start = self."!cursor_start_all"()
    set rx1321_cur, rx1321_start[0]
    set rx1321_tgt, rx1321_start[1]
    set rx1321_pos, rx1321_start[2]
    set rx1321_curclass, rx1321_start[3]
    set rx1321_bstack, rx1321_start[4]
    set $I19, rx1321_start[5]
    store_lex unicode:"$\x{a2}", rx1321_cur
    length rx1321_eos, rx1321_tgt
    eq $I19, 1, rx1321_restart2832
    gt rx1321_pos, rx1321_eos, rx1321_fail2833
    repr_get_attr_int $I11, self, rx1321_curclass, "$!from"
    ne $I11, -1, rxscan1322_done2839
    goto rxscan1322_scan2838
  rxscan1322_loop2837:
    inc rx1321_pos
    gt rx1321_pos, rx1321_eos, rx1321_fail2833
    repr_bind_attr_int rx1321_cur, rx1321_curclass, "$!from", rx1321_pos
  rxscan1322_scan2838:
    nqp_rxmark rx1321_bstack, rxscan1322_loop2837, rx1321_pos, 0
  rxscan1322_done2839:
    repr_bind_attr_int rx1321_cur, rx1321_curclass, "$!pos", rx1321_pos
    $P11 = rx1321_cur."value"()
    repr_get_attr_int $I11, $P11, rx1321_curclass, "$!pos"
    lt $I11, 0, rx1321_fail2833
    nqp_rxmark rx1321_bstack, rxsubrule1323_pass2840, -1, 0
  rxsubrule1323_pass2840:
    rx1321_cstack = rx1321_cur."!cursor_capture"($P11, "value")
    repr_get_attr_int rx1321_pos, $P11, rx1321_curclass, "$!pos"
    rx1321_cur."!cursor_pass"(rx1321_pos, "term:sym<value>", 'backtrack'=>1)
    .return (rx1321_cur)
  rx1321_restart2832:
    repr_get_attr_obj rx1321_cstack, rx1321_cur, rx1321_curclass, "$!cstack"
  rx1321_fail2833:
    unless rx1321_bstack, rx1321_done2831
    pop $I19, rx1321_bstack
    if_null rx1321_cstack, rx1321_cstack_done2836
    unless rx1321_cstack, rx1321_cstack_done2836
    dec $I19
    set $P11, rx1321_cstack[$I19]
  rx1321_cstack_done2836:
    pop rx1321_rep, rx1321_bstack
    pop rx1321_pos, rx1321_bstack
    pop $I19, rx1321_bstack
    lt rx1321_pos, -1, rx1321_done2831
    lt rx1321_pos, 0, rx1321_fail2833
    eq $I19, 0, rx1321_fail2833
    nqp_islist $I20, rx1321_cstack
    unless $I20, rx1321_jump2834
    elements $I18, rx1321_bstack
    le $I18, 0, rx1321_cut2835
    dec $I18
    set $I18, rx1321_bstack[$I18]
  rx1321_cut2835:
    assign rx1321_cstack, $I18
  rx1321_jump2834:
    jump $I19
  rx1321_done2831:
    rx1321_cur."!cursor_fail"()
    .return (rx1321_cur) 
.end
.HLL "nqp"
.namespace []
.sub "value" :subid("cuid_151_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1264
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1324_start
    .local string rx1324_tgt
    .local int rx1324_pos
    .local int rx1324_off
    .local int rx1324_eos
    .local int rx1324_rep
    .local pmc rx1324_cur
    .local pmc rx1324_curclass
    .local pmc rx1324_bstack
    .local pmc rx1324_cstack
    rx1324_start = self."!cursor_start_all"()
    set rx1324_cur, rx1324_start[0]
    set rx1324_tgt, rx1324_start[1]
    set rx1324_pos, rx1324_start[2]
    set rx1324_curclass, rx1324_start[3]
    set rx1324_bstack, rx1324_start[4]
    set $I19, rx1324_start[5]
    store_lex unicode:"$\x{a2}", rx1324_cur
    length rx1324_eos, rx1324_tgt
    eq $I19, 1, rx1324_restart2843
    gt rx1324_pos, rx1324_eos, rx1324_fail2844
    repr_get_attr_int $I11, self, rx1324_curclass, "$!from"
    ne $I11, -1, rxscan1325_done2850
    goto rxscan1325_scan2849
  rxscan1325_loop2848:
    inc rx1324_pos
    gt rx1324_pos, rx1324_eos, rx1324_fail2844
    repr_bind_attr_int rx1324_cur, rx1324_curclass, "$!from", rx1324_pos
  rxscan1325_scan2849:
    nqp_rxmark rx1324_bstack, rxscan1325_loop2848, rx1324_pos, 0
  rxscan1325_done2850:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1326_02852
    nqp_push_label $P11, alt1326_12854
    nqp_rxmark rx1324_bstack, alt1326_end2851, -1, 0
    rx1324_cur."!alt"(rx1324_pos, "alt_nfa__37_1367388604.23148", $P11)
    goto rx1324_fail2844
  alt1326_02852:
    repr_bind_attr_int rx1324_cur, rx1324_curclass, "$!pos", rx1324_pos
    $P11 = rx1324_cur."quote"()
    repr_get_attr_int $I11, $P11, rx1324_curclass, "$!pos"
    lt $I11, 0, rx1324_fail2844
    nqp_rxmark rx1324_bstack, rxsubrule1327_pass2853, -1, 0
  rxsubrule1327_pass2853:
    rx1324_cstack = rx1324_cur."!cursor_capture"($P11, "quote")
    repr_get_attr_int rx1324_pos, $P11, rx1324_curclass, "$!pos"
    goto alt1326_end2851
  alt1326_12854:
    repr_bind_attr_int rx1324_cur, rx1324_curclass, "$!pos", rx1324_pos
    $P11 = rx1324_cur."number"()
    repr_get_attr_int $I11, $P11, rx1324_curclass, "$!pos"
    lt $I11, 0, rx1324_fail2844
    nqp_rxmark rx1324_bstack, rxsubrule1328_pass2855, -1, 0
  rxsubrule1328_pass2855:
    rx1324_cstack = rx1324_cur."!cursor_capture"($P11, "number")
    repr_get_attr_int rx1324_pos, $P11, rx1324_curclass, "$!pos"
    goto alt1326_end2851
  alt1326_end2851:
    rx1324_cur."!cursor_pass"(rx1324_pos, "value", 'backtrack'=>1)
    .return (rx1324_cur)
  rx1324_restart2843:
    repr_get_attr_obj rx1324_cstack, rx1324_cur, rx1324_curclass, "$!cstack"
  rx1324_fail2844:
    unless rx1324_bstack, rx1324_done2842
    pop $I19, rx1324_bstack
    if_null rx1324_cstack, rx1324_cstack_done2847
    unless rx1324_cstack, rx1324_cstack_done2847
    dec $I19
    set $P11, rx1324_cstack[$I19]
  rx1324_cstack_done2847:
    pop rx1324_rep, rx1324_bstack
    pop rx1324_pos, rx1324_bstack
    pop $I19, rx1324_bstack
    lt rx1324_pos, -1, rx1324_done2842
    lt rx1324_pos, 0, rx1324_fail2844
    eq $I19, 0, rx1324_fail2844
    nqp_islist $I20, rx1324_cstack
    unless $I20, rx1324_jump2845
    elements $I18, rx1324_bstack
    le $I18, 0, rx1324_cut2846
    dec $I18
    set $I18, rx1324_bstack[$I18]
  rx1324_cut2846:
    assign rx1324_cstack, $I18
  rx1324_jump2845:
    jump $I19
  rx1324_done2842:
    rx1324_cur."!cursor_fail"()
    .return (rx1324_cur) 
.end
.HLL "nqp"
.namespace []
.sub "number" :subid("cuid_152_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1269
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1329_start
    .local string rx1329_tgt
    .local int rx1329_pos
    .local int rx1329_off
    .local int rx1329_eos
    .local int rx1329_rep
    .local pmc rx1329_cur
    .local pmc rx1329_curclass
    .local pmc rx1329_bstack
    .local pmc rx1329_cstack
    rx1329_start = self."!cursor_start_all"()
    set rx1329_cur, rx1329_start[0]
    set rx1329_tgt, rx1329_start[1]
    set rx1329_pos, rx1329_start[2]
    set rx1329_curclass, rx1329_start[3]
    set rx1329_bstack, rx1329_start[4]
    set $I19, rx1329_start[5]
    store_lex unicode:"$\x{a2}", rx1329_cur
    length rx1329_eos, rx1329_tgt
    eq $I19, 1, rx1329_restart2858
    gt rx1329_pos, rx1329_eos, rx1329_fail2859
    repr_get_attr_int $I11, self, rx1329_curclass, "$!from"
    ne $I11, -1, rxscan1330_done2865
    goto rxscan1330_scan2864
  rxscan1330_loop2863:
    inc rx1329_pos
    gt rx1329_pos, rx1329_eos, rx1329_fail2859
    repr_bind_attr_int rx1329_cur, rx1329_curclass, "$!from", rx1329_pos
  rxscan1330_scan2864:
    nqp_rxmark rx1329_bstack, rxscan1330_loop2863, rx1329_pos, 0
  rxscan1330_done2865:
    nqp_rxmark rx1329_bstack, rxcap1331_fail2867, rx1329_pos, 0
    nqp_rxmark rx1329_bstack, rxquantr1332_done2869, rx1329_pos, 0
  rxquantr1332_loop2868:
  alt1333_02871:
    nqp_rxmark rx1329_bstack, alt1333_12872, rx1329_pos, 0
    add $I11, rx1329_pos, 1
    gt $I11, rx1329_eos, rx1329_fail2859
    substr $S10, rx1329_tgt, rx1329_pos, 1
    ne $S10, ucs4:"-", rx1329_fail2859
    add rx1329_pos, 1
    goto alt1333_end2870
  alt1333_12872:
    ge rx1329_pos, rx1329_eos, rx1329_fail2859
    substr $S11, rx1329_tgt, rx1329_pos, 1
    index $I11, ucs4:"+", $S11
    lt $I11, 0, rx1329_fail2859
    inc rx1329_pos
  alt1333_end2870:
    nqp_rxpeek $I19, rx1329_bstack, rxquantr1332_done2869
    inc $I19
    inc $I19
    set rx1329_rep, rx1329_bstack[$I19]
    nqp_rxcommit rx1329_bstack, rxquantr1332_done2869
    inc rx1329_rep
  rxquantr1332_done2869:
    nqp_rxpeek $I19, rx1329_bstack, rxcap1331_fail2867
    inc $I19
    set $I11, rx1329_bstack[$I19]
    repr_bind_attr_int rx1329_cur, rx1329_curclass, "$!pos", rx1329_pos
    $P11 = rx1329_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1329_pos)
    rx1329_cstack = rx1329_cur."!cursor_capture"($P11, "sign")
    goto rxcap1331_done2866
  rxcap1331_fail2867:
    goto rx1329_fail2859
  rxcap1331_done2866:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1334_02874
    nqp_push_label $P11, alt1334_12876
    nqp_rxmark rx1329_bstack, alt1334_end2873, -1, 0
    rx1329_cur."!alt"(rx1329_pos, "alt_nfa__38_1367388604.2436", $P11)
    goto rx1329_fail2859
  alt1334_02874:
    repr_bind_attr_int rx1329_cur, rx1329_curclass, "$!pos", rx1329_pos
    $P11 = rx1329_cur."dec_number"()
    repr_get_attr_int $I11, $P11, rx1329_curclass, "$!pos"
    lt $I11, 0, rx1329_fail2859
    nqp_rxmark rx1329_bstack, rxsubrule1335_pass2875, -1, 0
  rxsubrule1335_pass2875:
    rx1329_cstack = rx1329_cur."!cursor_capture"($P11, "dec_number")
    repr_get_attr_int rx1329_pos, $P11, rx1329_curclass, "$!pos"
    goto alt1334_end2873
  alt1334_12876:
    repr_bind_attr_int rx1329_cur, rx1329_curclass, "$!pos", rx1329_pos
    $P11 = rx1329_cur."integer"()
    repr_get_attr_int $I11, $P11, rx1329_curclass, "$!pos"
    lt $I11, 0, rx1329_fail2859
    nqp_rxmark rx1329_bstack, rxsubrule1336_pass2877, -1, 0
  rxsubrule1336_pass2877:
    rx1329_cstack = rx1329_cur."!cursor_capture"($P11, "integer")
    repr_get_attr_int rx1329_pos, $P11, rx1329_curclass, "$!pos"
    goto alt1334_end2873
  alt1334_end2873:
    nqp_rxcommit rx1329_bstack, alt1334_end2873
    rx1329_cur."!cursor_pass"(rx1329_pos, "number", 'backtrack'=>1)
    .return (rx1329_cur)
  rx1329_restart2858:
    repr_get_attr_obj rx1329_cstack, rx1329_cur, rx1329_curclass, "$!cstack"
  rx1329_fail2859:
    unless rx1329_bstack, rx1329_done2857
    pop $I19, rx1329_bstack
    if_null rx1329_cstack, rx1329_cstack_done2862
    unless rx1329_cstack, rx1329_cstack_done2862
    dec $I19
    set $P11, rx1329_cstack[$I19]
  rx1329_cstack_done2862:
    pop rx1329_rep, rx1329_bstack
    pop rx1329_pos, rx1329_bstack
    pop $I19, rx1329_bstack
    lt rx1329_pos, -1, rx1329_done2857
    lt rx1329_pos, 0, rx1329_fail2859
    eq $I19, 0, rx1329_fail2859
    nqp_islist $I20, rx1329_cstack
    unless $I20, rx1329_jump2860
    elements $I18, rx1329_bstack
    le $I18, 0, rx1329_cut2861
    dec $I18
    set $I18, rx1329_bstack[$I18]
  rx1329_cut2861:
    assign rx1329_cstack, $I18
  rx1329_jump2860:
    jump $I19
  rx1329_done2857:
    rx1329_cur."!cursor_fail"()
    .return (rx1329_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote" :subid("cuid_153_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1274
    .param pmc self 
    $P5001 = self."!protoregex"("quote")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<apos>" :subid("cuid_154_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1275
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1337_start
    .local string rx1337_tgt
    .local int rx1337_pos
    .local int rx1337_off
    .local int rx1337_eos
    .local int rx1337_rep
    .local pmc rx1337_cur
    .local pmc rx1337_curclass
    .local pmc rx1337_bstack
    .local pmc rx1337_cstack
    rx1337_start = self."!cursor_start_all"()
    set rx1337_cur, rx1337_start[0]
    set rx1337_tgt, rx1337_start[1]
    set rx1337_pos, rx1337_start[2]
    set rx1337_curclass, rx1337_start[3]
    set rx1337_bstack, rx1337_start[4]
    set $I19, rx1337_start[5]
    store_lex unicode:"$\x{a2}", rx1337_cur
    length rx1337_eos, rx1337_tgt
    eq $I19, 1, rx1337_restart2880
    gt rx1337_pos, rx1337_eos, rx1337_fail2881
    repr_get_attr_int $I11, self, rx1337_curclass, "$!from"
    ne $I11, -1, rxscan1338_done2887
    goto rxscan1338_scan2886
  rxscan1338_loop2885:
    inc rx1337_pos
    gt rx1337_pos, rx1337_eos, rx1337_fail2881
    repr_bind_attr_int rx1337_cur, rx1337_curclass, "$!from", rx1337_pos
  rxscan1338_scan2886:
    nqp_rxmark rx1337_bstack, rxscan1338_loop2885, rx1337_pos, 0
  rxscan1338_done2887:
    ge rx1337_pos, rx1337_eos, rx1337_fail2881
    substr $S11, rx1337_tgt, rx1337_pos, 1
    index $I11, ucs4:"'", $S11
    lt $I11, 0, rx1337_fail2881
    repr_bind_attr_int rx1337_cur, rx1337_curclass, "$!pos", rx1337_pos
    $P11 = rx1337_cur."quote_EXPR"(":q")
    repr_get_attr_int $I11, $P11, rx1337_curclass, "$!pos"
    lt $I11, 0, rx1337_fail2881
    nqp_rxmark rx1337_bstack, rxsubrule1339_pass2888, -1, 0
  rxsubrule1339_pass2888:
    rx1337_cstack = rx1337_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1337_pos, $P11, rx1337_curclass, "$!pos"
    rx1337_cur."!cursor_pass"(rx1337_pos, "quote:sym<apos>", 'backtrack'=>1)
    .return (rx1337_cur)
  rx1337_restart2880:
    repr_get_attr_obj rx1337_cstack, rx1337_cur, rx1337_curclass, "$!cstack"
  rx1337_fail2881:
    unless rx1337_bstack, rx1337_done2879
    pop $I19, rx1337_bstack
    if_null rx1337_cstack, rx1337_cstack_done2884
    unless rx1337_cstack, rx1337_cstack_done2884
    dec $I19
    set $P11, rx1337_cstack[$I19]
  rx1337_cstack_done2884:
    pop rx1337_rep, rx1337_bstack
    pop rx1337_pos, rx1337_bstack
    pop $I19, rx1337_bstack
    lt rx1337_pos, -1, rx1337_done2879
    lt rx1337_pos, 0, rx1337_fail2881
    eq $I19, 0, rx1337_fail2881
    nqp_islist $I20, rx1337_cstack
    unless $I20, rx1337_jump2882
    elements $I18, rx1337_bstack
    le $I18, 0, rx1337_cut2883
    dec $I18
    set $I18, rx1337_bstack[$I18]
  rx1337_cut2883:
    assign rx1337_cstack, $I18
  rx1337_jump2882:
    jump $I19
  rx1337_done2879:
    rx1337_cur."!cursor_fail"()
    .return (rx1337_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<dblq>" :subid("cuid_155_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1276
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1340_start
    .local string rx1340_tgt
    .local int rx1340_pos
    .local int rx1340_off
    .local int rx1340_eos
    .local int rx1340_rep
    .local pmc rx1340_cur
    .local pmc rx1340_curclass
    .local pmc rx1340_bstack
    .local pmc rx1340_cstack
    rx1340_start = self."!cursor_start_all"()
    set rx1340_cur, rx1340_start[0]
    set rx1340_tgt, rx1340_start[1]
    set rx1340_pos, rx1340_start[2]
    set rx1340_curclass, rx1340_start[3]
    set rx1340_bstack, rx1340_start[4]
    set $I19, rx1340_start[5]
    store_lex unicode:"$\x{a2}", rx1340_cur
    length rx1340_eos, rx1340_tgt
    eq $I19, 1, rx1340_restart2891
    gt rx1340_pos, rx1340_eos, rx1340_fail2892
    repr_get_attr_int $I11, self, rx1340_curclass, "$!from"
    ne $I11, -1, rxscan1341_done2898
    goto rxscan1341_scan2897
  rxscan1341_loop2896:
    inc rx1340_pos
    gt rx1340_pos, rx1340_eos, rx1340_fail2892
    repr_bind_attr_int rx1340_cur, rx1340_curclass, "$!from", rx1340_pos
  rxscan1341_scan2897:
    nqp_rxmark rx1340_bstack, rxscan1341_loop2896, rx1340_pos, 0
  rxscan1341_done2898:
    ge rx1340_pos, rx1340_eos, rx1340_fail2892
    substr $S11, rx1340_tgt, rx1340_pos, 1
    index $I11, ucs4:"\"", $S11
    lt $I11, 0, rx1340_fail2892
    repr_bind_attr_int rx1340_cur, rx1340_curclass, "$!pos", rx1340_pos
    $P11 = rx1340_cur."quote_EXPR"(":qq")
    repr_get_attr_int $I11, $P11, rx1340_curclass, "$!pos"
    lt $I11, 0, rx1340_fail2892
    nqp_rxmark rx1340_bstack, rxsubrule1342_pass2899, -1, 0
  rxsubrule1342_pass2899:
    rx1340_cstack = rx1340_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1340_pos, $P11, rx1340_curclass, "$!pos"
    rx1340_cur."!cursor_pass"(rx1340_pos, "quote:sym<dblq>", 'backtrack'=>1)
    .return (rx1340_cur)
  rx1340_restart2891:
    repr_get_attr_obj rx1340_cstack, rx1340_cur, rx1340_curclass, "$!cstack"
  rx1340_fail2892:
    unless rx1340_bstack, rx1340_done2890
    pop $I19, rx1340_bstack
    if_null rx1340_cstack, rx1340_cstack_done2895
    unless rx1340_cstack, rx1340_cstack_done2895
    dec $I19
    set $P11, rx1340_cstack[$I19]
  rx1340_cstack_done2895:
    pop rx1340_rep, rx1340_bstack
    pop rx1340_pos, rx1340_bstack
    pop $I19, rx1340_bstack
    lt rx1340_pos, -1, rx1340_done2890
    lt rx1340_pos, 0, rx1340_fail2892
    eq $I19, 0, rx1340_fail2892
    nqp_islist $I20, rx1340_cstack
    unless $I20, rx1340_jump2893
    elements $I18, rx1340_bstack
    le $I18, 0, rx1340_cut2894
    dec $I18
    set $I18, rx1340_bstack[$I18]
  rx1340_cut2894:
    assign rx1340_cstack, $I18
  rx1340_jump2893:
    jump $I19
  rx1340_done2890:
    rx1340_cur."!cursor_fail"()
    .return (rx1340_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<q>" :subid("cuid_156_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1277
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1343_start
    .local string rx1343_tgt
    .local int rx1343_pos
    .local int rx1343_off
    .local int rx1343_eos
    .local int rx1343_rep
    .local pmc rx1343_cur
    .local pmc rx1343_curclass
    .local pmc rx1343_bstack
    .local pmc rx1343_cstack
    rx1343_start = self."!cursor_start_all"()
    set rx1343_cur, rx1343_start[0]
    set rx1343_tgt, rx1343_start[1]
    set rx1343_pos, rx1343_start[2]
    set rx1343_curclass, rx1343_start[3]
    set rx1343_bstack, rx1343_start[4]
    set $I19, rx1343_start[5]
    store_lex unicode:"$\x{a2}", rx1343_cur
    length rx1343_eos, rx1343_tgt
    eq $I19, 1, rx1343_restart2902
    gt rx1343_pos, rx1343_eos, rx1343_fail2903
    repr_get_attr_int $I11, self, rx1343_curclass, "$!from"
    ne $I11, -1, rxscan1344_done2909
    goto rxscan1344_scan2908
  rxscan1344_loop2907:
    inc rx1343_pos
    gt rx1343_pos, rx1343_eos, rx1343_fail2903
    repr_bind_attr_int rx1343_cur, rx1343_curclass, "$!from", rx1343_pos
  rxscan1344_scan2908:
    nqp_rxmark rx1343_bstack, rxscan1344_loop2907, rx1343_pos, 0
  rxscan1344_done2909:
    nqp_rxmark rx1343_bstack, rxcap1345_fail2911, rx1343_pos, 0
    add $I11, rx1343_pos, 1
    gt $I11, rx1343_eos, rx1343_fail2903
    substr $S10, rx1343_tgt, rx1343_pos, 1
    ne $S10, ucs4:"q", rx1343_fail2903
    add rx1343_pos, 1
    nqp_rxpeek $I19, rx1343_bstack, rxcap1345_fail2911
    inc $I19
    set $I11, rx1343_bstack[$I19]
    repr_bind_attr_int rx1343_cur, rx1343_curclass, "$!pos", rx1343_pos
    $P11 = rx1343_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1343_pos)
    rx1343_cstack = rx1343_cur."!cursor_capture"($P11, "sym")
    goto rxcap1345_done2910
  rxcap1345_fail2911:
    goto rx1343_fail2903
  rxcap1345_done2910:
    le rx1343_pos, 0, rx1343_fail2903
    is_cclass $I11, .CCLASS_WORD, rx1343_tgt, rx1343_pos
    if $I11, rx1343_fail2903
    sub $I11, rx1343_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx1343_tgt, $I11
    unless $I11, rx1343_fail2903
    ge rx1343_pos, rx1343_eos, rx1343_fail2903
    substr $S11, rx1343_tgt, rx1343_pos, 1
    index $I11, ucs4:"(", $S11
    ge $I11, 0, rx1343_fail2903
    repr_bind_attr_int rx1343_cur, rx1343_curclass, "$!pos", rx1343_pos
    $P11 = rx1343_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1343_curclass, "$!pos"
    lt $I11, 0, rx1343_fail2903
    repr_get_attr_int rx1343_pos, $P11, rx1343_curclass, "$!pos"
    repr_bind_attr_int rx1343_cur, rx1343_curclass, "$!pos", rx1343_pos
    $P11 = rx1343_cur."quote_EXPR"(":q")
    repr_get_attr_int $I11, $P11, rx1343_curclass, "$!pos"
    lt $I11, 0, rx1343_fail2903
    nqp_rxmark rx1343_bstack, rxsubrule1348_pass2914, -1, 0
  rxsubrule1348_pass2914:
    rx1343_cstack = rx1343_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1343_pos, $P11, rx1343_curclass, "$!pos"
    rx1343_cur."!cursor_pass"(rx1343_pos, "quote:sym<q>", 'backtrack'=>1)
    .return (rx1343_cur)
  rx1343_restart2902:
    repr_get_attr_obj rx1343_cstack, rx1343_cur, rx1343_curclass, "$!cstack"
  rx1343_fail2903:
    unless rx1343_bstack, rx1343_done2901
    pop $I19, rx1343_bstack
    if_null rx1343_cstack, rx1343_cstack_done2906
    unless rx1343_cstack, rx1343_cstack_done2906
    dec $I19
    set $P11, rx1343_cstack[$I19]
  rx1343_cstack_done2906:
    pop rx1343_rep, rx1343_bstack
    pop rx1343_pos, rx1343_bstack
    pop $I19, rx1343_bstack
    lt rx1343_pos, -1, rx1343_done2901
    lt rx1343_pos, 0, rx1343_fail2903
    eq $I19, 0, rx1343_fail2903
    nqp_islist $I20, rx1343_cstack
    unless $I20, rx1343_jump2904
    elements $I18, rx1343_bstack
    le $I18, 0, rx1343_cut2905
    dec $I18
    set $I18, rx1343_bstack[$I18]
  rx1343_cut2905:
    assign rx1343_cstack, $I18
  rx1343_jump2904:
    jump $I19
  rx1343_done2901:
    rx1343_cur."!cursor_fail"()
    .return (rx1343_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<qq>" :subid("cuid_157_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1278
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1349_start
    .local string rx1349_tgt
    .local int rx1349_pos
    .local int rx1349_off
    .local int rx1349_eos
    .local int rx1349_rep
    .local pmc rx1349_cur
    .local pmc rx1349_curclass
    .local pmc rx1349_bstack
    .local pmc rx1349_cstack
    rx1349_start = self."!cursor_start_all"()
    set rx1349_cur, rx1349_start[0]
    set rx1349_tgt, rx1349_start[1]
    set rx1349_pos, rx1349_start[2]
    set rx1349_curclass, rx1349_start[3]
    set rx1349_bstack, rx1349_start[4]
    set $I19, rx1349_start[5]
    store_lex unicode:"$\x{a2}", rx1349_cur
    length rx1349_eos, rx1349_tgt
    eq $I19, 1, rx1349_restart2917
    gt rx1349_pos, rx1349_eos, rx1349_fail2918
    repr_get_attr_int $I11, self, rx1349_curclass, "$!from"
    ne $I11, -1, rxscan1350_done2924
    goto rxscan1350_scan2923
  rxscan1350_loop2922:
    inc rx1349_pos
    gt rx1349_pos, rx1349_eos, rx1349_fail2918
    repr_bind_attr_int rx1349_cur, rx1349_curclass, "$!from", rx1349_pos
  rxscan1350_scan2923:
    nqp_rxmark rx1349_bstack, rxscan1350_loop2922, rx1349_pos, 0
  rxscan1350_done2924:
    nqp_rxmark rx1349_bstack, rxcap1351_fail2926, rx1349_pos, 0
    add $I11, rx1349_pos, 2
    gt $I11, rx1349_eos, rx1349_fail2918
    substr $S10, rx1349_tgt, rx1349_pos, 2
    ne $S10, ucs4:"qq", rx1349_fail2918
    add rx1349_pos, 2
    nqp_rxpeek $I19, rx1349_bstack, rxcap1351_fail2926
    inc $I19
    set $I11, rx1349_bstack[$I19]
    repr_bind_attr_int rx1349_cur, rx1349_curclass, "$!pos", rx1349_pos
    $P11 = rx1349_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1349_pos)
    rx1349_cstack = rx1349_cur."!cursor_capture"($P11, "sym")
    goto rxcap1351_done2925
  rxcap1351_fail2926:
    goto rx1349_fail2918
  rxcap1351_done2925:
    le rx1349_pos, 0, rx1349_fail2918
    is_cclass $I11, .CCLASS_WORD, rx1349_tgt, rx1349_pos
    if $I11, rx1349_fail2918
    sub $I11, rx1349_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx1349_tgt, $I11
    unless $I11, rx1349_fail2918
    ge rx1349_pos, rx1349_eos, rx1349_fail2918
    substr $S11, rx1349_tgt, rx1349_pos, 1
    index $I11, ucs4:"(", $S11
    ge $I11, 0, rx1349_fail2918
    repr_bind_attr_int rx1349_cur, rx1349_curclass, "$!pos", rx1349_pos
    $P11 = rx1349_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1349_curclass, "$!pos"
    lt $I11, 0, rx1349_fail2918
    repr_get_attr_int rx1349_pos, $P11, rx1349_curclass, "$!pos"
    repr_bind_attr_int rx1349_cur, rx1349_curclass, "$!pos", rx1349_pos
    $P11 = rx1349_cur."quote_EXPR"(":qq")
    repr_get_attr_int $I11, $P11, rx1349_curclass, "$!pos"
    lt $I11, 0, rx1349_fail2918
    nqp_rxmark rx1349_bstack, rxsubrule1354_pass2929, -1, 0
  rxsubrule1354_pass2929:
    rx1349_cstack = rx1349_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1349_pos, $P11, rx1349_curclass, "$!pos"
    rx1349_cur."!cursor_pass"(rx1349_pos, "quote:sym<qq>", 'backtrack'=>1)
    .return (rx1349_cur)
  rx1349_restart2917:
    repr_get_attr_obj rx1349_cstack, rx1349_cur, rx1349_curclass, "$!cstack"
  rx1349_fail2918:
    unless rx1349_bstack, rx1349_done2916
    pop $I19, rx1349_bstack
    if_null rx1349_cstack, rx1349_cstack_done2921
    unless rx1349_cstack, rx1349_cstack_done2921
    dec $I19
    set $P11, rx1349_cstack[$I19]
  rx1349_cstack_done2921:
    pop rx1349_rep, rx1349_bstack
    pop rx1349_pos, rx1349_bstack
    pop $I19, rx1349_bstack
    lt rx1349_pos, -1, rx1349_done2916
    lt rx1349_pos, 0, rx1349_fail2918
    eq $I19, 0, rx1349_fail2918
    nqp_islist $I20, rx1349_cstack
    unless $I20, rx1349_jump2919
    elements $I18, rx1349_bstack
    le $I18, 0, rx1349_cut2920
    dec $I18
    set $I18, rx1349_bstack[$I18]
  rx1349_cut2920:
    assign rx1349_cstack, $I18
  rx1349_jump2919:
    jump $I19
  rx1349_done2916:
    rx1349_cur."!cursor_fail"()
    .return (rx1349_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<Q>" :subid("cuid_158_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1279
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1355_start
    .local string rx1355_tgt
    .local int rx1355_pos
    .local int rx1355_off
    .local int rx1355_eos
    .local int rx1355_rep
    .local pmc rx1355_cur
    .local pmc rx1355_curclass
    .local pmc rx1355_bstack
    .local pmc rx1355_cstack
    rx1355_start = self."!cursor_start_all"()
    set rx1355_cur, rx1355_start[0]
    set rx1355_tgt, rx1355_start[1]
    set rx1355_pos, rx1355_start[2]
    set rx1355_curclass, rx1355_start[3]
    set rx1355_bstack, rx1355_start[4]
    set $I19, rx1355_start[5]
    store_lex unicode:"$\x{a2}", rx1355_cur
    length rx1355_eos, rx1355_tgt
    eq $I19, 1, rx1355_restart2932
    gt rx1355_pos, rx1355_eos, rx1355_fail2933
    repr_get_attr_int $I11, self, rx1355_curclass, "$!from"
    ne $I11, -1, rxscan1356_done2939
    goto rxscan1356_scan2938
  rxscan1356_loop2937:
    inc rx1355_pos
    gt rx1355_pos, rx1355_eos, rx1355_fail2933
    repr_bind_attr_int rx1355_cur, rx1355_curclass, "$!from", rx1355_pos
  rxscan1356_scan2938:
    nqp_rxmark rx1355_bstack, rxscan1356_loop2937, rx1355_pos, 0
  rxscan1356_done2939:
    nqp_rxmark rx1355_bstack, rxcap1357_fail2941, rx1355_pos, 0
    add $I11, rx1355_pos, 1
    gt $I11, rx1355_eos, rx1355_fail2933
    substr $S10, rx1355_tgt, rx1355_pos, 1
    ne $S10, ucs4:"Q", rx1355_fail2933
    add rx1355_pos, 1
    nqp_rxpeek $I19, rx1355_bstack, rxcap1357_fail2941
    inc $I19
    set $I11, rx1355_bstack[$I19]
    repr_bind_attr_int rx1355_cur, rx1355_curclass, "$!pos", rx1355_pos
    $P11 = rx1355_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1355_pos)
    rx1355_cstack = rx1355_cur."!cursor_capture"($P11, "sym")
    goto rxcap1357_done2940
  rxcap1357_fail2941:
    goto rx1355_fail2933
  rxcap1357_done2940:
    le rx1355_pos, 0, rx1355_fail2933
    is_cclass $I11, .CCLASS_WORD, rx1355_tgt, rx1355_pos
    if $I11, rx1355_fail2933
    sub $I11, rx1355_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx1355_tgt, $I11
    unless $I11, rx1355_fail2933
    ge rx1355_pos, rx1355_eos, rx1355_fail2933
    substr $S11, rx1355_tgt, rx1355_pos, 1
    index $I11, ucs4:"(", $S11
    ge $I11, 0, rx1355_fail2933
    repr_bind_attr_int rx1355_cur, rx1355_curclass, "$!pos", rx1355_pos
    $P11 = rx1355_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1355_curclass, "$!pos"
    lt $I11, 0, rx1355_fail2933
    repr_get_attr_int rx1355_pos, $P11, rx1355_curclass, "$!pos"
    repr_bind_attr_int rx1355_cur, rx1355_curclass, "$!pos", rx1355_pos
    $P11 = rx1355_cur."quote_EXPR"()
    repr_get_attr_int $I11, $P11, rx1355_curclass, "$!pos"
    lt $I11, 0, rx1355_fail2933
    nqp_rxmark rx1355_bstack, rxsubrule1360_pass2944, -1, 0
  rxsubrule1360_pass2944:
    rx1355_cstack = rx1355_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1355_pos, $P11, rx1355_curclass, "$!pos"
    rx1355_cur."!cursor_pass"(rx1355_pos, "quote:sym<Q>", 'backtrack'=>1)
    .return (rx1355_cur)
  rx1355_restart2932:
    repr_get_attr_obj rx1355_cstack, rx1355_cur, rx1355_curclass, "$!cstack"
  rx1355_fail2933:
    unless rx1355_bstack, rx1355_done2931
    pop $I19, rx1355_bstack
    if_null rx1355_cstack, rx1355_cstack_done2936
    unless rx1355_cstack, rx1355_cstack_done2936
    dec $I19
    set $P11, rx1355_cstack[$I19]
  rx1355_cstack_done2936:
    pop rx1355_rep, rx1355_bstack
    pop rx1355_pos, rx1355_bstack
    pop $I19, rx1355_bstack
    lt rx1355_pos, -1, rx1355_done2931
    lt rx1355_pos, 0, rx1355_fail2933
    eq $I19, 0, rx1355_fail2933
    nqp_islist $I20, rx1355_cstack
    unless $I20, rx1355_jump2934
    elements $I18, rx1355_bstack
    le $I18, 0, rx1355_cut2935
    dec $I18
    set $I18, rx1355_bstack[$I18]
  rx1355_cut2935:
    assign rx1355_cstack, $I18
  rx1355_jump2934:
    jump $I19
  rx1355_done2931:
    rx1355_cur."!cursor_fail"()
    .return (rx1355_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<Q:PIR>" :subid("cuid_159_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1280
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1361_start
    .local string rx1361_tgt
    .local int rx1361_pos
    .local int rx1361_off
    .local int rx1361_eos
    .local int rx1361_rep
    .local pmc rx1361_cur
    .local pmc rx1361_curclass
    .local pmc rx1361_bstack
    .local pmc rx1361_cstack
    rx1361_start = self."!cursor_start_all"()
    set rx1361_cur, rx1361_start[0]
    set rx1361_tgt, rx1361_start[1]
    set rx1361_pos, rx1361_start[2]
    set rx1361_curclass, rx1361_start[3]
    set rx1361_bstack, rx1361_start[4]
    set $I19, rx1361_start[5]
    store_lex unicode:"$\x{a2}", rx1361_cur
    length rx1361_eos, rx1361_tgt
    eq $I19, 1, rx1361_restart2947
    gt rx1361_pos, rx1361_eos, rx1361_fail2948
    repr_get_attr_int $I11, self, rx1361_curclass, "$!from"
    ne $I11, -1, rxscan1362_done2954
    goto rxscan1362_scan2953
  rxscan1362_loop2952:
    inc rx1361_pos
    gt rx1361_pos, rx1361_eos, rx1361_fail2948
    repr_bind_attr_int rx1361_cur, rx1361_curclass, "$!from", rx1361_pos
  rxscan1362_scan2953:
    nqp_rxmark rx1361_bstack, rxscan1362_loop2952, rx1361_pos, 0
  rxscan1362_done2954:
    nqp_rxmark rx1361_bstack, rxcap1363_fail2956, rx1361_pos, 0
    add $I11, rx1361_pos, 5
    gt $I11, rx1361_eos, rx1361_fail2948
    substr $S10, rx1361_tgt, rx1361_pos, 5
    ne $S10, ucs4:"Q:PIR", rx1361_fail2948
    add rx1361_pos, 5
    nqp_rxpeek $I19, rx1361_bstack, rxcap1363_fail2956
    inc $I19
    set $I11, rx1361_bstack[$I19]
    repr_bind_attr_int rx1361_cur, rx1361_curclass, "$!pos", rx1361_pos
    $P11 = rx1361_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1361_pos)
    rx1361_cstack = rx1361_cur."!cursor_capture"($P11, "sym")
    goto rxcap1363_done2955
  rxcap1363_fail2956:
    goto rx1361_fail2948
  rxcap1363_done2955:
    repr_bind_attr_int rx1361_cur, rx1361_curclass, "$!pos", rx1361_pos
    $P11 = rx1361_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1361_curclass, "$!pos"
    lt $I11, 0, rx1361_fail2948
    repr_get_attr_int rx1361_pos, $P11, rx1361_curclass, "$!pos"
    repr_bind_attr_int rx1361_cur, rx1361_curclass, "$!pos", rx1361_pos
    $P11 = rx1361_cur."quote_EXPR"()
    repr_get_attr_int $I11, $P11, rx1361_curclass, "$!pos"
    lt $I11, 0, rx1361_fail2948
    nqp_rxmark rx1361_bstack, rxsubrule1365_pass2958, -1, 0
  rxsubrule1365_pass2958:
    rx1361_cstack = rx1361_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1361_pos, $P11, rx1361_curclass, "$!pos"
    rx1361_cur."!cursor_pass"(rx1361_pos, "quote:sym<Q:PIR>", 'backtrack'=>1)
    .return (rx1361_cur)
  rx1361_restart2947:
    repr_get_attr_obj rx1361_cstack, rx1361_cur, rx1361_curclass, "$!cstack"
  rx1361_fail2948:
    unless rx1361_bstack, rx1361_done2946
    pop $I19, rx1361_bstack
    if_null rx1361_cstack, rx1361_cstack_done2951
    unless rx1361_cstack, rx1361_cstack_done2951
    dec $I19
    set $P11, rx1361_cstack[$I19]
  rx1361_cstack_done2951:
    pop rx1361_rep, rx1361_bstack
    pop rx1361_pos, rx1361_bstack
    pop $I19, rx1361_bstack
    lt rx1361_pos, -1, rx1361_done2946
    lt rx1361_pos, 0, rx1361_fail2948
    eq $I19, 0, rx1361_fail2948
    nqp_islist $I20, rx1361_cstack
    unless $I20, rx1361_jump2949
    elements $I18, rx1361_bstack
    le $I18, 0, rx1361_cut2950
    dec $I18
    set $I18, rx1361_bstack[$I18]
  rx1361_cut2950:
    assign rx1361_cstack, $I18
  rx1361_jump2949:
    jump $I19
  rx1361_done2946:
    rx1361_cur."!cursor_fail"()
    .return (rx1361_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym</ />" :subid("cuid_160_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1281
    .param pmc _lex_param_0 
    .lex "%*RX", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_166 
    .local pmc pkg_viv_tmp_30 
    new $P5001, 'Hash'
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1366_start
    .local string rx1366_tgt
    .local int rx1366_pos
    .local int rx1366_off
    .local int rx1366_eos
    .local int rx1366_rep
    .local pmc rx1366_cur
    .local pmc rx1366_curclass
    .local pmc rx1366_bstack
    .local pmc rx1366_cstack
    rx1366_start = self."!cursor_start_all"()
    set rx1366_cur, rx1366_start[0]
    set rx1366_tgt, rx1366_start[1]
    set rx1366_pos, rx1366_start[2]
    set rx1366_curclass, rx1366_start[3]
    set rx1366_bstack, rx1366_start[4]
    set $I19, rx1366_start[5]
    store_lex unicode:"$\x{a2}", rx1366_cur
    length rx1366_eos, rx1366_tgt
    eq $I19, 1, rx1366_restart2961
    gt rx1366_pos, rx1366_eos, rx1366_fail2962
    repr_get_attr_int $I11, self, rx1366_curclass, "$!from"
    ne $I11, -1, rxscan1367_done2968
    goto rxscan1367_scan2967
  rxscan1367_loop2966:
    inc rx1366_pos
    gt rx1366_pos, rx1366_eos, rx1366_fail2962
    repr_bind_attr_int rx1366_cur, rx1366_curclass, "$!from", rx1366_pos
  rxscan1367_scan2967:
    nqp_rxmark rx1366_bstack, rxscan1367_loop2966, rx1366_pos, 0
  rxscan1367_done2968:
    add $I11, rx1366_pos, 1
    gt $I11, rx1366_eos, rx1366_fail2962
    substr $S10, rx1366_tgt, rx1366_pos, 1
    ne $S10, ucs4:"/", rx1366_fail2962
    add rx1366_pos, 1
    repr_bind_attr_int rx1366_cur, rx1366_curclass, "$!pos", rx1366_pos
    $P11 = rx1366_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx1366_curclass, "$!pos"
    lt $I11, 0, rx1366_fail2962
    repr_get_attr_int rx1366_pos, $P11, rx1366_curclass, "$!pos"
    repr_bind_attr_int rx1366_cur, rx1366_curclass, "$!pos", rx1366_pos
    store_lex unicode:"$\x{a2}", rx1366_cur
    unless_null $P101, fallback2970
    nqp_get_sc_object $P5003, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_30, $P5002
    set fb_tmp_166, pkg_viv_tmp_30
    repr_defined $I5001, fb_tmp_166
    unless $I5001 goto if1369_else2971 
    set $P5004, fb_tmp_166["%RX"]
    set $P5006, $P5004
    goto if1369_end2972
  if1369_else2971:
    null $P5005
    set $P5006, $P5005
  if1369_end2972:
    unless_null $P5006, vivi_13702973
    new $P5007, 'Hash'
    set pkg_viv_tmp_30["%RX"], $P5007
    set $P5006, $P5007
  vivi_13702973:
    unless_null $P5006, vivi_13712974
    die "Contextual %*RX not found"
    box $P5008, "Contextual %*RX not found"
    set $P5006, $P5008
  vivi_13712974:
    set $P101, $P5006
  fallback2970:
    repr_bind_attr_int rx1366_cur, rx1366_curclass, "$!pos", rx1366_pos
    $P11 = rx1366_cur."LANG"("Regex", "nibbler")
    repr_get_attr_int $I11, $P11, rx1366_curclass, "$!pos"
    lt $I11, 0, rx1366_fail2962
    nqp_rxmark rx1366_bstack, rxsubrule1372_pass2975, -1, 0
  rxsubrule1372_pass2975:
    rx1366_cstack = rx1366_cur."!cursor_capture"($P11, "p6regex")
    repr_get_attr_int rx1366_pos, $P11, rx1366_curclass, "$!pos"
    add $I11, rx1366_pos, 1
    gt $I11, rx1366_eos, rx1366_fail2962
    substr $S10, rx1366_tgt, rx1366_pos, 1
    ne $S10, ucs4:"/", rx1366_fail2962
    add rx1366_pos, 1
    rx1366_cur."!cursor_pass"(rx1366_pos, "quote:sym</ />", 'backtrack'=>1)
    .return (rx1366_cur)
  rx1366_restart2961:
    repr_get_attr_obj rx1366_cstack, rx1366_cur, rx1366_curclass, "$!cstack"
  rx1366_fail2962:
    unless rx1366_bstack, rx1366_done2960
    pop $I19, rx1366_bstack
    if_null rx1366_cstack, rx1366_cstack_done2965
    unless rx1366_cstack, rx1366_cstack_done2965
    dec $I19
    set $P11, rx1366_cstack[$I19]
  rx1366_cstack_done2965:
    pop rx1366_rep, rx1366_bstack
    pop rx1366_pos, rx1366_bstack
    pop $I19, rx1366_bstack
    lt rx1366_pos, -1, rx1366_done2960
    lt rx1366_pos, 0, rx1366_fail2962
    eq $I19, 0, rx1366_fail2962
    nqp_islist $I20, rx1366_cstack
    unless $I20, rx1366_jump2963
    elements $I18, rx1366_bstack
    le $I18, 0, rx1366_cut2964
    dec $I18
    set $I18, rx1366_bstack[$I18]
  rx1366_cut2964:
    assign rx1366_cstack, $I18
  rx1366_jump2963:
    jump $I19
  rx1366_done2960:
    rx1366_cur."!cursor_fail"()
    .return (rx1366_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<$>" :subid("cuid_161_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1289
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1373_start
    .local string rx1373_tgt
    .local int rx1373_pos
    .local int rx1373_off
    .local int rx1373_eos
    .local int rx1373_rep
    .local pmc rx1373_cur
    .local pmc rx1373_curclass
    .local pmc rx1373_bstack
    .local pmc rx1373_cstack
    rx1373_start = self."!cursor_start_all"()
    set rx1373_cur, rx1373_start[0]
    set rx1373_tgt, rx1373_start[1]
    set rx1373_pos, rx1373_start[2]
    set rx1373_curclass, rx1373_start[3]
    set rx1373_bstack, rx1373_start[4]
    set $I19, rx1373_start[5]
    store_lex unicode:"$\x{a2}", rx1373_cur
    length rx1373_eos, rx1373_tgt
    eq $I19, 1, rx1373_restart2978
    gt rx1373_pos, rx1373_eos, rx1373_fail2979
    repr_get_attr_int $I11, self, rx1373_curclass, "$!from"
    ne $I11, -1, rxscan1374_done2985
    goto rxscan1374_scan2984
  rxscan1374_loop2983:
    inc rx1373_pos
    gt rx1373_pos, rx1373_eos, rx1373_fail2979
    repr_bind_attr_int rx1373_cur, rx1373_curclass, "$!from", rx1373_pos
  rxscan1374_scan2984:
    nqp_rxmark rx1373_bstack, rxscan1374_loop2983, rx1373_pos, 0
  rxscan1374_done2985:
    ge rx1373_pos, rx1373_eos, rx1373_fail2979
    substr $S11, rx1373_tgt, rx1373_pos, 1
    index $I11, ucs4:"$", $S11
    lt $I11, 0, rx1373_fail2979
    repr_bind_attr_int rx1373_cur, rx1373_curclass, "$!pos", rx1373_pos
    $P11 = rx1373_cur."quotemod_check"("s")
    repr_get_attr_int $I11, $P11, rx1373_curclass, "$!pos"
    lt $I11, 0, rx1373_fail2979
    repr_bind_attr_int rx1373_cur, rx1373_curclass, "$!pos", rx1373_pos
    $P11 = rx1373_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1373_curclass, "$!pos"
    lt $I11, 0, rx1373_fail2979
    nqp_rxmark rx1373_bstack, rxsubrule1375_pass2986, -1, 0
  rxsubrule1375_pass2986:
    rx1373_cstack = rx1373_cur."!cursor_capture"($P11, "variable")
    repr_get_attr_int rx1373_pos, $P11, rx1373_curclass, "$!pos"
    rx1373_cur."!cursor_pass"(rx1373_pos, "quote_escape:sym<$>", 'backtrack'=>1)
    .return (rx1373_cur)
  rx1373_restart2978:
    repr_get_attr_obj rx1373_cstack, rx1373_cur, rx1373_curclass, "$!cstack"
  rx1373_fail2979:
    unless rx1373_bstack, rx1373_done2977
    pop $I19, rx1373_bstack
    if_null rx1373_cstack, rx1373_cstack_done2982
    unless rx1373_cstack, rx1373_cstack_done2982
    dec $I19
    set $P11, rx1373_cstack[$I19]
  rx1373_cstack_done2982:
    pop rx1373_rep, rx1373_bstack
    pop rx1373_pos, rx1373_bstack
    pop $I19, rx1373_bstack
    lt rx1373_pos, -1, rx1373_done2977
    lt rx1373_pos, 0, rx1373_fail2979
    eq $I19, 0, rx1373_fail2979
    nqp_islist $I20, rx1373_cstack
    unless $I20, rx1373_jump2980
    elements $I18, rx1373_bstack
    le $I18, 0, rx1373_cut2981
    dec $I18
    set $I18, rx1373_bstack[$I18]
  rx1373_cut2981:
    assign rx1373_cstack, $I18
  rx1373_jump2980:
    jump $I19
  rx1373_done2977:
    rx1373_cur."!cursor_fail"()
    .return (rx1373_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<{ }>" :subid("cuid_162_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1290
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1376_start
    .local string rx1376_tgt
    .local int rx1376_pos
    .local int rx1376_off
    .local int rx1376_eos
    .local int rx1376_rep
    .local pmc rx1376_cur
    .local pmc rx1376_curclass
    .local pmc rx1376_bstack
    .local pmc rx1376_cstack
    rx1376_start = self."!cursor_start_all"()
    set rx1376_cur, rx1376_start[0]
    set rx1376_tgt, rx1376_start[1]
    set rx1376_pos, rx1376_start[2]
    set rx1376_curclass, rx1376_start[3]
    set rx1376_bstack, rx1376_start[4]
    set $I19, rx1376_start[5]
    store_lex unicode:"$\x{a2}", rx1376_cur
    length rx1376_eos, rx1376_tgt
    eq $I19, 1, rx1376_restart2989
    gt rx1376_pos, rx1376_eos, rx1376_fail2990
    repr_get_attr_int $I11, self, rx1376_curclass, "$!from"
    ne $I11, -1, rxscan1377_done2996
    goto rxscan1377_scan2995
  rxscan1377_loop2994:
    inc rx1376_pos
    gt rx1376_pos, rx1376_eos, rx1376_fail2990
    repr_bind_attr_int rx1376_cur, rx1376_curclass, "$!from", rx1376_pos
  rxscan1377_scan2995:
    nqp_rxmark rx1376_bstack, rxscan1377_loop2994, rx1376_pos, 0
  rxscan1377_done2996:
    ge rx1376_pos, rx1376_eos, rx1376_fail2990
    substr $S11, rx1376_tgt, rx1376_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx1376_fail2990
    repr_bind_attr_int rx1376_cur, rx1376_curclass, "$!pos", rx1376_pos
    $P11 = rx1376_cur."quotemod_check"("c")
    repr_get_attr_int $I11, $P11, rx1376_curclass, "$!pos"
    lt $I11, 0, rx1376_fail2990
    repr_bind_attr_int rx1376_cur, rx1376_curclass, "$!pos", rx1376_pos
    $P11 = rx1376_cur."block"()
    repr_get_attr_int $I11, $P11, rx1376_curclass, "$!pos"
    lt $I11, 0, rx1376_fail2990
    nqp_rxmark rx1376_bstack, rxsubrule1378_pass2997, -1, 0
  rxsubrule1378_pass2997:
    rx1376_cstack = rx1376_cur."!cursor_capture"($P11, "block")
    repr_get_attr_int rx1376_pos, $P11, rx1376_curclass, "$!pos"
    rx1376_cur."!cursor_pass"(rx1376_pos, "quote_escape:sym<{ }>", 'backtrack'=>1)
    .return (rx1376_cur)
  rx1376_restart2989:
    repr_get_attr_obj rx1376_cstack, rx1376_cur, rx1376_curclass, "$!cstack"
  rx1376_fail2990:
    unless rx1376_bstack, rx1376_done2988
    pop $I19, rx1376_bstack
    if_null rx1376_cstack, rx1376_cstack_done2993
    unless rx1376_cstack, rx1376_cstack_done2993
    dec $I19
    set $P11, rx1376_cstack[$I19]
  rx1376_cstack_done2993:
    pop rx1376_rep, rx1376_bstack
    pop rx1376_pos, rx1376_bstack
    pop $I19, rx1376_bstack
    lt rx1376_pos, -1, rx1376_done2988
    lt rx1376_pos, 0, rx1376_fail2990
    eq $I19, 0, rx1376_fail2990
    nqp_islist $I20, rx1376_cstack
    unless $I20, rx1376_jump2991
    elements $I18, rx1376_bstack
    le $I18, 0, rx1376_cut2992
    dec $I18
    set $I18, rx1376_bstack[$I18]
  rx1376_cut2992:
    assign rx1376_cstack, $I18
  rx1376_jump2991:
    jump $I19
  rx1376_done2988:
    rx1376_cur."!cursor_fail"()
    .return (rx1376_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<esc>" :subid("cuid_163_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1291
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1379_start
    .local string rx1379_tgt
    .local int rx1379_pos
    .local int rx1379_off
    .local int rx1379_eos
    .local int rx1379_rep
    .local pmc rx1379_cur
    .local pmc rx1379_curclass
    .local pmc rx1379_bstack
    .local pmc rx1379_cstack
    rx1379_start = self."!cursor_start_all"()
    set rx1379_cur, rx1379_start[0]
    set rx1379_tgt, rx1379_start[1]
    set rx1379_pos, rx1379_start[2]
    set rx1379_curclass, rx1379_start[3]
    set rx1379_bstack, rx1379_start[4]
    set $I19, rx1379_start[5]
    store_lex unicode:"$\x{a2}", rx1379_cur
    length rx1379_eos, rx1379_tgt
    eq $I19, 1, rx1379_restart3000
    gt rx1379_pos, rx1379_eos, rx1379_fail3001
    repr_get_attr_int $I11, self, rx1379_curclass, "$!from"
    ne $I11, -1, rxscan1380_done3007
    goto rxscan1380_scan3006
  rxscan1380_loop3005:
    inc rx1379_pos
    gt rx1379_pos, rx1379_eos, rx1379_fail3001
    repr_bind_attr_int rx1379_cur, rx1379_curclass, "$!from", rx1379_pos
  rxscan1380_scan3006:
    nqp_rxmark rx1379_bstack, rxscan1380_loop3005, rx1379_pos, 0
  rxscan1380_done3007:
    add $I11, rx1379_pos, 2
    gt $I11, rx1379_eos, rx1379_fail3001
    substr $S10, rx1379_tgt, rx1379_pos, 2
    ne $S10, ucs4:"\\e", rx1379_fail3001
    add rx1379_pos, 2
    repr_bind_attr_int rx1379_cur, rx1379_curclass, "$!pos", rx1379_pos
    $P11 = rx1379_cur."quotemod_check"("b")
    repr_get_attr_int $I11, $P11, rx1379_curclass, "$!pos"
    lt $I11, 0, rx1379_fail3001
    rx1379_cur."!cursor_pass"(rx1379_pos, "quote_escape:sym<esc>", 'backtrack'=>1)
    .return (rx1379_cur)
  rx1379_restart3000:
    repr_get_attr_obj rx1379_cstack, rx1379_cur, rx1379_curclass, "$!cstack"
  rx1379_fail3001:
    unless rx1379_bstack, rx1379_done2999
    pop $I19, rx1379_bstack
    if_null rx1379_cstack, rx1379_cstack_done3004
    unless rx1379_cstack, rx1379_cstack_done3004
    dec $I19
    set $P11, rx1379_cstack[$I19]
  rx1379_cstack_done3004:
    pop rx1379_rep, rx1379_bstack
    pop rx1379_pos, rx1379_bstack
    pop $I19, rx1379_bstack
    lt rx1379_pos, -1, rx1379_done2999
    lt rx1379_pos, 0, rx1379_fail3001
    eq $I19, 0, rx1379_fail3001
    nqp_islist $I20, rx1379_cstack
    unless $I20, rx1379_jump3002
    elements $I18, rx1379_bstack
    le $I18, 0, rx1379_cut3003
    dec $I18
    set $I18, rx1379_bstack[$I18]
  rx1379_cut3003:
    assign rx1379_cstack, $I18
  rx1379_jump3002:
    jump $I19
  rx1379_done2999:
    rx1379_cur."!cursor_fail"()
    .return (rx1379_cur) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<( )>" :subid("cuid_164_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1293
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1381_start
    .local string rx1381_tgt
    .local int rx1381_pos
    .local int rx1381_off
    .local int rx1381_eos
    .local int rx1381_rep
    .local pmc rx1381_cur
    .local pmc rx1381_curclass
    .local pmc rx1381_bstack
    .local pmc rx1381_cstack
    rx1381_start = self."!cursor_start_all"()
    set rx1381_cur, rx1381_start[0]
    set rx1381_tgt, rx1381_start[1]
    set rx1381_pos, rx1381_start[2]
    set rx1381_curclass, rx1381_start[3]
    set rx1381_bstack, rx1381_start[4]
    set $I19, rx1381_start[5]
    store_lex unicode:"$\x{a2}", rx1381_cur
    length rx1381_eos, rx1381_tgt
    eq $I19, 1, rx1381_restart3010
    gt rx1381_pos, rx1381_eos, rx1381_fail3011
    repr_get_attr_int $I11, self, rx1381_curclass, "$!from"
    ne $I11, -1, rxscan1382_done3017
    goto rxscan1382_scan3016
  rxscan1382_loop3015:
    inc rx1381_pos
    gt rx1381_pos, rx1381_eos, rx1381_fail3011
    repr_bind_attr_int rx1381_cur, rx1381_curclass, "$!from", rx1381_pos
  rxscan1382_scan3016:
    nqp_rxmark rx1381_bstack, rxscan1382_loop3015, rx1381_pos, 0
  rxscan1382_done3017:
    add $I11, rx1381_pos, 1
    gt $I11, rx1381_eos, rx1381_fail3011
    substr $S10, rx1381_tgt, rx1381_pos, 1
    ne $S10, ucs4:"(", rx1381_fail3011
    add rx1381_pos, 1
    repr_bind_attr_int rx1381_cur, rx1381_curclass, "$!pos", rx1381_pos
    $P11 = rx1381_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1381_curclass, "$!pos"
    lt $I11, 0, rx1381_fail3011
    repr_get_attr_int rx1381_pos, $P11, rx1381_curclass, "$!pos"
    nqp_rxmark rx1381_bstack, rxquantr1384_done3020, rx1381_pos, 0
  rxquantr1384_loop3019:
    repr_bind_attr_int rx1381_cur, rx1381_curclass, "$!pos", rx1381_pos
    $P11 = rx1381_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx1381_curclass, "$!pos"
    lt $I11, 0, rx1381_fail3011
    goto rxsubrule1385_pass3021
  rxsubrule1385_back3022:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1381_curclass, "$!pos"
    lt $I11, 0, rx1381_fail3011
  rxsubrule1385_pass3021:
    rx1381_cstack = rx1381_cur."!cursor_capture"($P11, "EXPR")
    set_addr $I11, rxsubrule1385_back3022
    push rx1381_bstack, $I11
    push rx1381_bstack, 0
    push rx1381_bstack, rx1381_pos
    elements $I11, rx1381_cstack
    push rx1381_bstack, $I11
    repr_get_attr_int rx1381_pos, $P11, rx1381_curclass, "$!pos"
    nqp_rxpeek $I19, rx1381_bstack, rxquantr1384_done3020
    inc $I19
    inc $I19
    set rx1381_rep, rx1381_bstack[$I19]
    nqp_rxcommit rx1381_bstack, rxquantr1384_done3020
    inc rx1381_rep
  rxquantr1384_done3020:
    add $I11, rx1381_pos, 1
    gt $I11, rx1381_eos, rx1381_fail3011
    substr $S10, rx1381_tgt, rx1381_pos, 1
    ne $S10, ucs4:")", rx1381_fail3011
    add rx1381_pos, 1
    rx1381_cur."!cursor_pass"(rx1381_pos, "circumfix:sym<( )>", 'backtrack'=>1)
    .return (rx1381_cur)
  rx1381_restart3010:
    repr_get_attr_obj rx1381_cstack, rx1381_cur, rx1381_curclass, "$!cstack"
  rx1381_fail3011:
    unless rx1381_bstack, rx1381_done3009
    pop $I19, rx1381_bstack
    if_null rx1381_cstack, rx1381_cstack_done3014
    unless rx1381_cstack, rx1381_cstack_done3014
    dec $I19
    set $P11, rx1381_cstack[$I19]
  rx1381_cstack_done3014:
    pop rx1381_rep, rx1381_bstack
    pop rx1381_pos, rx1381_bstack
    pop $I19, rx1381_bstack
    lt rx1381_pos, -1, rx1381_done3009
    lt rx1381_pos, 0, rx1381_fail3011
    eq $I19, 0, rx1381_fail3011
    nqp_islist $I20, rx1381_cstack
    unless $I20, rx1381_jump3012
    elements $I18, rx1381_bstack
    le $I18, 0, rx1381_cut3013
    dec $I18
    set $I18, rx1381_bstack[$I18]
  rx1381_cut3013:
    assign rx1381_cstack, $I18
  rx1381_jump3012:
    jump $I19
  rx1381_done3009:
    rx1381_cur."!cursor_fail"()
    .return (rx1381_cur) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<[ ]>" :subid("cuid_165_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1294
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1386_start
    .local string rx1386_tgt
    .local int rx1386_pos
    .local int rx1386_off
    .local int rx1386_eos
    .local int rx1386_rep
    .local pmc rx1386_cur
    .local pmc rx1386_curclass
    .local pmc rx1386_bstack
    .local pmc rx1386_cstack
    rx1386_start = self."!cursor_start_all"()
    set rx1386_cur, rx1386_start[0]
    set rx1386_tgt, rx1386_start[1]
    set rx1386_pos, rx1386_start[2]
    set rx1386_curclass, rx1386_start[3]
    set rx1386_bstack, rx1386_start[4]
    set $I19, rx1386_start[5]
    store_lex unicode:"$\x{a2}", rx1386_cur
    length rx1386_eos, rx1386_tgt
    eq $I19, 1, rx1386_restart3025
    gt rx1386_pos, rx1386_eos, rx1386_fail3026
    repr_get_attr_int $I11, self, rx1386_curclass, "$!from"
    ne $I11, -1, rxscan1387_done3032
    goto rxscan1387_scan3031
  rxscan1387_loop3030:
    inc rx1386_pos
    gt rx1386_pos, rx1386_eos, rx1386_fail3026
    repr_bind_attr_int rx1386_cur, rx1386_curclass, "$!from", rx1386_pos
  rxscan1387_scan3031:
    nqp_rxmark rx1386_bstack, rxscan1387_loop3030, rx1386_pos, 0
  rxscan1387_done3032:
    add $I11, rx1386_pos, 1
    gt $I11, rx1386_eos, rx1386_fail3026
    substr $S10, rx1386_tgt, rx1386_pos, 1
    ne $S10, ucs4:"[", rx1386_fail3026
    add rx1386_pos, 1
    repr_bind_attr_int rx1386_cur, rx1386_curclass, "$!pos", rx1386_pos
    $P11 = rx1386_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1386_curclass, "$!pos"
    lt $I11, 0, rx1386_fail3026
    repr_get_attr_int rx1386_pos, $P11, rx1386_curclass, "$!pos"
    nqp_rxmark rx1386_bstack, rxquantr1389_done3035, rx1386_pos, 0
  rxquantr1389_loop3034:
    repr_bind_attr_int rx1386_cur, rx1386_curclass, "$!pos", rx1386_pos
    $P11 = rx1386_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx1386_curclass, "$!pos"
    lt $I11, 0, rx1386_fail3026
    goto rxsubrule1390_pass3036
  rxsubrule1390_back3037:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1386_curclass, "$!pos"
    lt $I11, 0, rx1386_fail3026
  rxsubrule1390_pass3036:
    rx1386_cstack = rx1386_cur."!cursor_capture"($P11, "EXPR")
    set_addr $I11, rxsubrule1390_back3037
    push rx1386_bstack, $I11
    push rx1386_bstack, 0
    push rx1386_bstack, rx1386_pos
    elements $I11, rx1386_cstack
    push rx1386_bstack, $I11
    repr_get_attr_int rx1386_pos, $P11, rx1386_curclass, "$!pos"
    nqp_rxpeek $I19, rx1386_bstack, rxquantr1389_done3035
    inc $I19
    inc $I19
    set rx1386_rep, rx1386_bstack[$I19]
    nqp_rxcommit rx1386_bstack, rxquantr1389_done3035
    inc rx1386_rep
  rxquantr1389_done3035:
    add $I11, rx1386_pos, 1
    gt $I11, rx1386_eos, rx1386_fail3026
    substr $S10, rx1386_tgt, rx1386_pos, 1
    ne $S10, ucs4:"]", rx1386_fail3026
    add rx1386_pos, 1
    rx1386_cur."!cursor_pass"(rx1386_pos, "circumfix:sym<[ ]>", 'backtrack'=>1)
    .return (rx1386_cur)
  rx1386_restart3025:
    repr_get_attr_obj rx1386_cstack, rx1386_cur, rx1386_curclass, "$!cstack"
  rx1386_fail3026:
    unless rx1386_bstack, rx1386_done3024
    pop $I19, rx1386_bstack
    if_null rx1386_cstack, rx1386_cstack_done3029
    unless rx1386_cstack, rx1386_cstack_done3029
    dec $I19
    set $P11, rx1386_cstack[$I19]
  rx1386_cstack_done3029:
    pop rx1386_rep, rx1386_bstack
    pop rx1386_pos, rx1386_bstack
    pop $I19, rx1386_bstack
    lt rx1386_pos, -1, rx1386_done3024
    lt rx1386_pos, 0, rx1386_fail3026
    eq $I19, 0, rx1386_fail3026
    nqp_islist $I20, rx1386_cstack
    unless $I20, rx1386_jump3027
    elements $I18, rx1386_bstack
    le $I18, 0, rx1386_cut3028
    dec $I18
    set $I18, rx1386_bstack[$I18]
  rx1386_cut3028:
    assign rx1386_cstack, $I18
  rx1386_jump3027:
    jump $I19
  rx1386_done3024:
    rx1386_cur."!cursor_fail"()
    .return (rx1386_cur) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<ang>" :subid("cuid_166_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1295
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1391_start
    .local string rx1391_tgt
    .local int rx1391_pos
    .local int rx1391_off
    .local int rx1391_eos
    .local int rx1391_rep
    .local pmc rx1391_cur
    .local pmc rx1391_curclass
    .local pmc rx1391_bstack
    .local pmc rx1391_cstack
    rx1391_start = self."!cursor_start_all"()
    set rx1391_cur, rx1391_start[0]
    set rx1391_tgt, rx1391_start[1]
    set rx1391_pos, rx1391_start[2]
    set rx1391_curclass, rx1391_start[3]
    set rx1391_bstack, rx1391_start[4]
    set $I19, rx1391_start[5]
    store_lex unicode:"$\x{a2}", rx1391_cur
    length rx1391_eos, rx1391_tgt
    eq $I19, 1, rx1391_restart3040
    gt rx1391_pos, rx1391_eos, rx1391_fail3041
    repr_get_attr_int $I11, self, rx1391_curclass, "$!from"
    ne $I11, -1, rxscan1392_done3047
    goto rxscan1392_scan3046
  rxscan1392_loop3045:
    inc rx1391_pos
    gt rx1391_pos, rx1391_eos, rx1391_fail3041
    repr_bind_attr_int rx1391_cur, rx1391_curclass, "$!from", rx1391_pos
  rxscan1392_scan3046:
    nqp_rxmark rx1391_bstack, rxscan1392_loop3045, rx1391_pos, 0
  rxscan1392_done3047:
    ge rx1391_pos, rx1391_eos, rx1391_fail3041
    substr $S11, rx1391_tgt, rx1391_pos, 1
    index $I11, ucs4:"<", $S11
    lt $I11, 0, rx1391_fail3041
    repr_bind_attr_int rx1391_cur, rx1391_curclass, "$!pos", rx1391_pos
    $P11 = rx1391_cur."quote_EXPR"(":q", ":w")
    repr_get_attr_int $I11, $P11, rx1391_curclass, "$!pos"
    lt $I11, 0, rx1391_fail3041
    nqp_rxmark rx1391_bstack, rxsubrule1393_pass3048, -1, 0
  rxsubrule1393_pass3048:
    rx1391_cstack = rx1391_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1391_pos, $P11, rx1391_curclass, "$!pos"
    rx1391_cur."!cursor_pass"(rx1391_pos, "circumfix:sym<ang>", 'backtrack'=>1)
    .return (rx1391_cur)
  rx1391_restart3040:
    repr_get_attr_obj rx1391_cstack, rx1391_cur, rx1391_curclass, "$!cstack"
  rx1391_fail3041:
    unless rx1391_bstack, rx1391_done3039
    pop $I19, rx1391_bstack
    if_null rx1391_cstack, rx1391_cstack_done3044
    unless rx1391_cstack, rx1391_cstack_done3044
    dec $I19
    set $P11, rx1391_cstack[$I19]
  rx1391_cstack_done3044:
    pop rx1391_rep, rx1391_bstack
    pop rx1391_pos, rx1391_bstack
    pop $I19, rx1391_bstack
    lt rx1391_pos, -1, rx1391_done3039
    lt rx1391_pos, 0, rx1391_fail3041
    eq $I19, 0, rx1391_fail3041
    nqp_islist $I20, rx1391_cstack
    unless $I20, rx1391_jump3042
    elements $I18, rx1391_bstack
    le $I18, 0, rx1391_cut3043
    dec $I18
    set $I18, rx1391_bstack[$I18]
  rx1391_cut3043:
    assign rx1391_cstack, $I18
  rx1391_jump3042:
    jump $I19
  rx1391_done3039:
    rx1391_cur."!cursor_fail"()
    .return (rx1391_cur) 
.end
.HLL "nqp"
.namespace []
.sub utf8:"circumfix:sym<\x{ab} \x{bb}>" :subid("cuid_167_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1296
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1394_start
    .local string rx1394_tgt
    .local int rx1394_pos
    .local int rx1394_off
    .local int rx1394_eos
    .local int rx1394_rep
    .local pmc rx1394_cur
    .local pmc rx1394_curclass
    .local pmc rx1394_bstack
    .local pmc rx1394_cstack
    rx1394_start = self."!cursor_start_all"()
    set rx1394_cur, rx1394_start[0]
    set rx1394_tgt, rx1394_start[1]
    set rx1394_pos, rx1394_start[2]
    set rx1394_curclass, rx1394_start[3]
    set rx1394_bstack, rx1394_start[4]
    set $I19, rx1394_start[5]
    store_lex unicode:"$\x{a2}", rx1394_cur
    length rx1394_eos, rx1394_tgt
    eq $I19, 1, rx1394_restart3051
    gt rx1394_pos, rx1394_eos, rx1394_fail3052
    repr_get_attr_int $I11, self, rx1394_curclass, "$!from"
    ne $I11, -1, rxscan1395_done3058
    goto rxscan1395_scan3057
  rxscan1395_loop3056:
    inc rx1394_pos
    gt rx1394_pos, rx1394_eos, rx1394_fail3052
    repr_bind_attr_int rx1394_cur, rx1394_curclass, "$!from", rx1394_pos
  rxscan1395_scan3057:
    nqp_rxmark rx1394_bstack, rxscan1395_loop3056, rx1394_pos, 0
  rxscan1395_done3058:
    ge rx1394_pos, rx1394_eos, rx1394_fail3052
    substr $S11, rx1394_tgt, rx1394_pos, 1
    index $I11, ucs4:"\x{ab}", $S11
    lt $I11, 0, rx1394_fail3052
    repr_bind_attr_int rx1394_cur, rx1394_curclass, "$!pos", rx1394_pos
    $P11 = rx1394_cur."quote_EXPR"(":qq", ":w")
    repr_get_attr_int $I11, $P11, rx1394_curclass, "$!pos"
    lt $I11, 0, rx1394_fail3052
    nqp_rxmark rx1394_bstack, rxsubrule1396_pass3059, -1, 0
  rxsubrule1396_pass3059:
    rx1394_cstack = rx1394_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1394_pos, $P11, rx1394_curclass, "$!pos"
    rx1394_cur."!cursor_pass"(rx1394_pos, utf8:"circumfix:sym<\x{ab} \x{bb}>", 'backtrack'=>1)
    .return (rx1394_cur)
  rx1394_restart3051:
    repr_get_attr_obj rx1394_cstack, rx1394_cur, rx1394_curclass, "$!cstack"
  rx1394_fail3052:
    unless rx1394_bstack, rx1394_done3050
    pop $I19, rx1394_bstack
    if_null rx1394_cstack, rx1394_cstack_done3055
    unless rx1394_cstack, rx1394_cstack_done3055
    dec $I19
    set $P11, rx1394_cstack[$I19]
  rx1394_cstack_done3055:
    pop rx1394_rep, rx1394_bstack
    pop rx1394_pos, rx1394_bstack
    pop $I19, rx1394_bstack
    lt rx1394_pos, -1, rx1394_done3050
    lt rx1394_pos, 0, rx1394_fail3052
    eq $I19, 0, rx1394_fail3052
    nqp_islist $I20, rx1394_cstack
    unless $I20, rx1394_jump3053
    elements $I18, rx1394_bstack
    le $I18, 0, rx1394_cut3054
    dec $I18
    set $I18, rx1394_bstack[$I18]
  rx1394_cut3054:
    assign rx1394_cstack, $I18
  rx1394_jump3053:
    jump $I19
  rx1394_done3050:
    rx1394_cur."!cursor_fail"()
    .return (rx1394_cur) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<{ }>" :subid("cuid_168_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1297
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1397_start
    .local string rx1397_tgt
    .local int rx1397_pos
    .local int rx1397_off
    .local int rx1397_eos
    .local int rx1397_rep
    .local pmc rx1397_cur
    .local pmc rx1397_curclass
    .local pmc rx1397_bstack
    .local pmc rx1397_cstack
    rx1397_start = self."!cursor_start_all"()
    set rx1397_cur, rx1397_start[0]
    set rx1397_tgt, rx1397_start[1]
    set rx1397_pos, rx1397_start[2]
    set rx1397_curclass, rx1397_start[3]
    set rx1397_bstack, rx1397_start[4]
    set $I19, rx1397_start[5]
    store_lex unicode:"$\x{a2}", rx1397_cur
    length rx1397_eos, rx1397_tgt
    eq $I19, 1, rx1397_restart3062
    gt rx1397_pos, rx1397_eos, rx1397_fail3063
    repr_get_attr_int $I11, self, rx1397_curclass, "$!from"
    ne $I11, -1, rxscan1398_done3069
    goto rxscan1398_scan3068
  rxscan1398_loop3067:
    inc rx1397_pos
    gt rx1397_pos, rx1397_eos, rx1397_fail3063
    repr_bind_attr_int rx1397_cur, rx1397_curclass, "$!from", rx1397_pos
  rxscan1398_scan3068:
    nqp_rxmark rx1397_bstack, rxscan1398_loop3067, rx1397_pos, 0
  rxscan1398_done3069:
    ge rx1397_pos, rx1397_eos, rx1397_fail3063
    substr $S11, rx1397_tgt, rx1397_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx1397_fail3063
    repr_bind_attr_int rx1397_cur, rx1397_curclass, "$!pos", rx1397_pos
    $P11 = rx1397_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx1397_curclass, "$!pos"
    lt $I11, 0, rx1397_fail3063
    nqp_rxmark rx1397_bstack, rxsubrule1399_pass3070, -1, 0
  rxsubrule1399_pass3070:
    rx1397_cstack = rx1397_cur."!cursor_capture"($P11, "pblock")
    repr_get_attr_int rx1397_pos, $P11, rx1397_curclass, "$!pos"
    rx1397_cur."!cursor_pass"(rx1397_pos, "circumfix:sym<{ }>", 'backtrack'=>1)
    .return (rx1397_cur)
  rx1397_restart3062:
    repr_get_attr_obj rx1397_cstack, rx1397_cur, rx1397_curclass, "$!cstack"
  rx1397_fail3063:
    unless rx1397_bstack, rx1397_done3061
    pop $I19, rx1397_bstack
    if_null rx1397_cstack, rx1397_cstack_done3066
    unless rx1397_cstack, rx1397_cstack_done3066
    dec $I19
    set $P11, rx1397_cstack[$I19]
  rx1397_cstack_done3066:
    pop rx1397_rep, rx1397_bstack
    pop rx1397_pos, rx1397_bstack
    pop $I19, rx1397_bstack
    lt rx1397_pos, -1, rx1397_done3061
    lt rx1397_pos, 0, rx1397_fail3063
    eq $I19, 0, rx1397_fail3063
    nqp_islist $I20, rx1397_cstack
    unless $I20, rx1397_jump3064
    elements $I18, rx1397_bstack
    le $I18, 0, rx1397_cut3065
    dec $I18
    set $I18, rx1397_bstack[$I18]
  rx1397_cut3065:
    assign rx1397_cstack, $I18
  rx1397_jump3064:
    jump $I19
  rx1397_done3061:
    rx1397_cur."!cursor_fail"()
    .return (rx1397_cur) 
.end
.HLL "nqp"
.namespace []
.sub "semilist" :subid("cuid_169_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1299
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1400_start
    .local string rx1400_tgt
    .local int rx1400_pos
    .local int rx1400_off
    .local int rx1400_eos
    .local int rx1400_rep
    .local pmc rx1400_cur
    .local pmc rx1400_curclass
    .local pmc rx1400_bstack
    .local pmc rx1400_cstack
    rx1400_start = self."!cursor_start_all"()
    set rx1400_cur, rx1400_start[0]
    set rx1400_tgt, rx1400_start[1]
    set rx1400_pos, rx1400_start[2]
    set rx1400_curclass, rx1400_start[3]
    set rx1400_bstack, rx1400_start[4]
    set $I19, rx1400_start[5]
    store_lex unicode:"$\x{a2}", rx1400_cur
    length rx1400_eos, rx1400_tgt
    eq $I19, 1, rx1400_restart3073
    gt rx1400_pos, rx1400_eos, rx1400_fail3074
    repr_get_attr_int $I11, self, rx1400_curclass, "$!from"
    ne $I11, -1, rxscan1401_done3080
    goto rxscan1401_scan3079
  rxscan1401_loop3078:
    inc rx1400_pos
    gt rx1400_pos, rx1400_eos, rx1400_fail3074
    repr_bind_attr_int rx1400_cur, rx1400_curclass, "$!from", rx1400_pos
  rxscan1401_scan3079:
    nqp_rxmark rx1400_bstack, rxscan1401_loop3078, rx1400_pos, 0
  rxscan1401_done3080:
    repr_bind_attr_int rx1400_cur, rx1400_curclass, "$!pos", rx1400_pos
    $P11 = rx1400_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1400_curclass, "$!pos"
    lt $I11, 0, rx1400_fail3074
    repr_get_attr_int rx1400_pos, $P11, rx1400_curclass, "$!pos"
    repr_bind_attr_int rx1400_cur, rx1400_curclass, "$!pos", rx1400_pos
    $P11 = rx1400_cur."statement"()
    repr_get_attr_int $I11, $P11, rx1400_curclass, "$!pos"
    lt $I11, 0, rx1400_fail3074
    nqp_rxmark rx1400_bstack, rxsubrule1403_pass3082, -1, 0
  rxsubrule1403_pass3082:
    rx1400_cstack = rx1400_cur."!cursor_capture"($P11, "statement")
    repr_get_attr_int rx1400_pos, $P11, rx1400_curclass, "$!pos"
    repr_bind_attr_int rx1400_cur, rx1400_curclass, "$!pos", rx1400_pos
    $P11 = rx1400_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1400_curclass, "$!pos"
    lt $I11, 0, rx1400_fail3074
    repr_get_attr_int rx1400_pos, $P11, rx1400_curclass, "$!pos"
    rx1400_cur."!cursor_pass"(rx1400_pos, "semilist", 'backtrack'=>1)
    .return (rx1400_cur)
  rx1400_restart3073:
    repr_get_attr_obj rx1400_cstack, rx1400_cur, rx1400_curclass, "$!cstack"
  rx1400_fail3074:
    unless rx1400_bstack, rx1400_done3072
    pop $I19, rx1400_bstack
    if_null rx1400_cstack, rx1400_cstack_done3077
    unless rx1400_cstack, rx1400_cstack_done3077
    dec $I19
    set $P11, rx1400_cstack[$I19]
  rx1400_cstack_done3077:
    pop rx1400_rep, rx1400_bstack
    pop rx1400_pos, rx1400_bstack
    pop $I19, rx1400_bstack
    lt rx1400_pos, -1, rx1400_done3072
    lt rx1400_pos, 0, rx1400_fail3074
    eq $I19, 0, rx1400_fail3074
    nqp_islist $I20, rx1400_cstack
    unless $I20, rx1400_jump3075
    elements $I18, rx1400_bstack
    le $I18, 0, rx1400_cut3076
    dec $I18
    set $I18, rx1400_bstack[$I18]
  rx1400_cut3076:
    assign rx1400_cstack, $I18
  rx1400_jump3075:
    jump $I19
  rx1400_done3072:
    rx1400_cur."!cursor_fail"()
    .return (rx1400_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infixish" :subid("cuid_170_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1322
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1405_start
    .local string rx1405_tgt
    .local int rx1405_pos
    .local int rx1405_off
    .local int rx1405_eos
    .local int rx1405_rep
    .local pmc rx1405_cur
    .local pmc rx1405_curclass
    .local pmc rx1405_bstack
    .local pmc rx1405_cstack
    rx1405_start = self."!cursor_start_all"()
    set rx1405_cur, rx1405_start[0]
    set rx1405_tgt, rx1405_start[1]
    set rx1405_pos, rx1405_start[2]
    set rx1405_curclass, rx1405_start[3]
    set rx1405_bstack, rx1405_start[4]
    set $I19, rx1405_start[5]
    store_lex unicode:"$\x{a2}", rx1405_cur
    length rx1405_eos, rx1405_tgt
    eq $I19, 1, rx1405_restart3086
    gt rx1405_pos, rx1405_eos, rx1405_fail3087
    repr_get_attr_int $I11, self, rx1405_curclass, "$!from"
    ne $I11, -1, rxscan1406_done3093
    goto rxscan1406_scan3092
  rxscan1406_loop3091:
    inc rx1405_pos
    gt rx1405_pos, rx1405_eos, rx1405_fail3087
    repr_bind_attr_int rx1405_cur, rx1405_curclass, "$!from", rx1405_pos
  rxscan1406_scan3092:
    nqp_rxmark rx1405_bstack, rxscan1406_loop3091, rx1405_pos, 0
  rxscan1406_done3093:
    repr_bind_attr_int rx1405_cur, rx1405_curclass, "$!pos", rx1405_pos
    $P11 = rx1405_cur."infixstopper"()
    repr_get_attr_int $I11, $P11, rx1405_curclass, "$!pos"
    ge $I11, 0, rx1405_fail3087
    repr_bind_attr_int rx1405_cur, rx1405_curclass, "$!pos", rx1405_pos
    $P11 = rx1405_cur."infix"()
    repr_get_attr_int $I11, $P11, rx1405_curclass, "$!pos"
    lt $I11, 0, rx1405_fail3087
    nqp_rxmark rx1405_bstack, rxsubrule1407_pass3094, -1, 0
  rxsubrule1407_pass3094:
    rx1405_cstack = rx1405_cur."!cursor_capture"($P11, "OPER=infix")
    repr_get_attr_int rx1405_pos, $P11, rx1405_curclass, "$!pos"
    rx1405_cur."!cursor_pass"(rx1405_pos, "infixish", 'backtrack'=>1)
    .return (rx1405_cur)
  rx1405_restart3086:
    repr_get_attr_obj rx1405_cstack, rx1405_cur, rx1405_curclass, "$!cstack"
  rx1405_fail3087:
    unless rx1405_bstack, rx1405_done3085
    pop $I19, rx1405_bstack
    if_null rx1405_cstack, rx1405_cstack_done3090
    unless rx1405_cstack, rx1405_cstack_done3090
    dec $I19
    set $P11, rx1405_cstack[$I19]
  rx1405_cstack_done3090:
    pop rx1405_rep, rx1405_bstack
    pop rx1405_pos, rx1405_bstack
    pop $I19, rx1405_bstack
    lt rx1405_pos, -1, rx1405_done3085
    lt rx1405_pos, 0, rx1405_fail3087
    eq $I19, 0, rx1405_fail3087
    nqp_islist $I20, rx1405_cstack
    unless $I20, rx1405_jump3088
    elements $I18, rx1405_bstack
    le $I18, 0, rx1405_cut3089
    dec $I18
    set $I18, rx1405_bstack[$I18]
  rx1405_cut3089:
    assign rx1405_cstack, $I18
  rx1405_jump3088:
    jump $I19
  rx1405_done3085:
    rx1405_cur."!cursor_fail"()
    .return (rx1405_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infixstopper" :subid("cuid_171_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1323
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1408_start
    .local string rx1408_tgt
    .local int rx1408_pos
    .local int rx1408_off
    .local int rx1408_eos
    .local int rx1408_rep
    .local pmc rx1408_cur
    .local pmc rx1408_curclass
    .local pmc rx1408_bstack
    .local pmc rx1408_cstack
    rx1408_start = self."!cursor_start_all"()
    set rx1408_cur, rx1408_start[0]
    set rx1408_tgt, rx1408_start[1]
    set rx1408_pos, rx1408_start[2]
    set rx1408_curclass, rx1408_start[3]
    set rx1408_bstack, rx1408_start[4]
    set $I19, rx1408_start[5]
    store_lex unicode:"$\x{a2}", rx1408_cur
    length rx1408_eos, rx1408_tgt
    eq $I19, 1, rx1408_restart3097
    gt rx1408_pos, rx1408_eos, rx1408_fail3098
    repr_get_attr_int $I11, self, rx1408_curclass, "$!from"
    ne $I11, -1, rxscan1409_done3104
    goto rxscan1409_scan3103
  rxscan1409_loop3102:
    inc rx1408_pos
    gt rx1408_pos, rx1408_eos, rx1408_fail3098
    repr_bind_attr_int rx1408_cur, rx1408_curclass, "$!from", rx1408_pos
  rxscan1409_scan3103:
    nqp_rxmark rx1408_bstack, rxscan1409_loop3102, rx1408_pos, 0
  rxscan1409_done3104:
    repr_bind_attr_int rx1408_cur, rx1408_curclass, "$!pos", rx1408_pos
    $P11 = rx1408_cur."lambda"()
    repr_get_attr_int $I11, $P11, rx1408_curclass, "$!pos"
    lt $I11, 0, rx1408_fail3098
    rx1408_cur."!cursor_pass"(rx1408_pos, "infixstopper", 'backtrack'=>1)
    .return (rx1408_cur)
  rx1408_restart3097:
    repr_get_attr_obj rx1408_cstack, rx1408_cur, rx1408_curclass, "$!cstack"
  rx1408_fail3098:
    unless rx1408_bstack, rx1408_done3096
    pop $I19, rx1408_bstack
    if_null rx1408_cstack, rx1408_cstack_done3101
    unless rx1408_cstack, rx1408_cstack_done3101
    dec $I19
    set $P11, rx1408_cstack[$I19]
  rx1408_cstack_done3101:
    pop rx1408_rep, rx1408_bstack
    pop rx1408_pos, rx1408_bstack
    pop $I19, rx1408_bstack
    lt rx1408_pos, -1, rx1408_done3096
    lt rx1408_pos, 0, rx1408_fail3098
    eq $I19, 0, rx1408_fail3098
    nqp_islist $I20, rx1408_cstack
    unless $I20, rx1408_jump3099
    elements $I18, rx1408_bstack
    le $I18, 0, rx1408_cut3100
    dec $I18
    set $I18, rx1408_bstack[$I18]
  rx1408_cut3100:
    assign rx1408_cstack, $I18
  rx1408_jump3099:
    jump $I19
  rx1408_done3096:
    rx1408_cur."!cursor_fail"()
    .return (rx1408_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<[ ]>" :subid("cuid_172_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1325
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1410_start
    .local string rx1410_tgt
    .local int rx1410_pos
    .local int rx1410_off
    .local int rx1410_eos
    .local int rx1410_rep
    .local pmc rx1410_cur
    .local pmc rx1410_curclass
    .local pmc rx1410_bstack
    .local pmc rx1410_cstack
    rx1410_start = self."!cursor_start_all"()
    set rx1410_cur, rx1410_start[0]
    set rx1410_tgt, rx1410_start[1]
    set rx1410_pos, rx1410_start[2]
    set rx1410_curclass, rx1410_start[3]
    set rx1410_bstack, rx1410_start[4]
    set $I19, rx1410_start[5]
    store_lex unicode:"$\x{a2}", rx1410_cur
    length rx1410_eos, rx1410_tgt
    eq $I19, 1, rx1410_restart3107
    gt rx1410_pos, rx1410_eos, rx1410_fail3108
    repr_get_attr_int $I11, self, rx1410_curclass, "$!from"
    ne $I11, -1, rxscan1411_done3114
    goto rxscan1411_scan3113
  rxscan1411_loop3112:
    inc rx1410_pos
    gt rx1410_pos, rx1410_eos, rx1410_fail3108
    repr_bind_attr_int rx1410_cur, rx1410_curclass, "$!from", rx1410_pos
  rxscan1411_scan3113:
    nqp_rxmark rx1410_bstack, rxscan1411_loop3112, rx1410_pos, 0
  rxscan1411_done3114:
    add $I11, rx1410_pos, 1
    gt $I11, rx1410_eos, rx1410_fail3108
    substr $S10, rx1410_tgt, rx1410_pos, 1
    ne $S10, ucs4:"[", rx1410_fail3108
    add rx1410_pos, 1
    repr_bind_attr_int rx1410_cur, rx1410_curclass, "$!pos", rx1410_pos
    $P11 = rx1410_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1410_curclass, "$!pos"
    lt $I11, 0, rx1410_fail3108
    repr_get_attr_int rx1410_pos, $P11, rx1410_curclass, "$!pos"
    repr_bind_attr_int rx1410_cur, rx1410_curclass, "$!pos", rx1410_pos
    $P11 = rx1410_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx1410_curclass, "$!pos"
    lt $I11, 0, rx1410_fail3108
    nqp_rxmark rx1410_bstack, rxsubrule1413_pass3116, -1, 0
  rxsubrule1413_pass3116:
    rx1410_cstack = rx1410_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx1410_pos, $P11, rx1410_curclass, "$!pos"
    add $I11, rx1410_pos, 1
    gt $I11, rx1410_eos, rx1410_fail3108
    substr $S10, rx1410_tgt, rx1410_pos, 1
    ne $S10, ucs4:"]", rx1410_fail3108
    add rx1410_pos, 1
    repr_bind_attr_int rx1410_cur, rx1410_curclass, "$!pos", rx1410_pos
    $P11 = rx1410_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1410_curclass, "$!pos"
    lt $I11, 0, rx1410_fail3108
    nqp_rxmark rx1410_bstack, rxsubrule1414_pass3117, -1, 0
  rxsubrule1414_pass3117:
    rx1410_cstack = rx1410_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1410_pos, $P11, rx1410_curclass, "$!pos"
    rx1410_cur."!cursor_pass"(rx1410_pos, "postcircumfix:sym<[ ]>", 'backtrack'=>1)
    .return (rx1410_cur)
  rx1410_restart3107:
    repr_get_attr_obj rx1410_cstack, rx1410_cur, rx1410_curclass, "$!cstack"
  rx1410_fail3108:
    unless rx1410_bstack, rx1410_done3106
    pop $I19, rx1410_bstack
    if_null rx1410_cstack, rx1410_cstack_done3111
    unless rx1410_cstack, rx1410_cstack_done3111
    dec $I19
    set $P11, rx1410_cstack[$I19]
  rx1410_cstack_done3111:
    pop rx1410_rep, rx1410_bstack
    pop rx1410_pos, rx1410_bstack
    pop $I19, rx1410_bstack
    lt rx1410_pos, -1, rx1410_done3106
    lt rx1410_pos, 0, rx1410_fail3108
    eq $I19, 0, rx1410_fail3108
    nqp_islist $I20, rx1410_cstack
    unless $I20, rx1410_jump3109
    elements $I18, rx1410_bstack
    le $I18, 0, rx1410_cut3110
    dec $I18
    set $I18, rx1410_bstack[$I18]
  rx1410_cut3110:
    assign rx1410_cstack, $I18
  rx1410_jump3109:
    jump $I19
  rx1410_done3106:
    rx1410_cur."!cursor_fail"()
    .return (rx1410_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<{ }>" :subid("cuid_173_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1330
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1415_start
    .local string rx1415_tgt
    .local int rx1415_pos
    .local int rx1415_off
    .local int rx1415_eos
    .local int rx1415_rep
    .local pmc rx1415_cur
    .local pmc rx1415_curclass
    .local pmc rx1415_bstack
    .local pmc rx1415_cstack
    rx1415_start = self."!cursor_start_all"()
    set rx1415_cur, rx1415_start[0]
    set rx1415_tgt, rx1415_start[1]
    set rx1415_pos, rx1415_start[2]
    set rx1415_curclass, rx1415_start[3]
    set rx1415_bstack, rx1415_start[4]
    set $I19, rx1415_start[5]
    store_lex unicode:"$\x{a2}", rx1415_cur
    length rx1415_eos, rx1415_tgt
    eq $I19, 1, rx1415_restart3120
    gt rx1415_pos, rx1415_eos, rx1415_fail3121
    repr_get_attr_int $I11, self, rx1415_curclass, "$!from"
    ne $I11, -1, rxscan1416_done3127
    goto rxscan1416_scan3126
  rxscan1416_loop3125:
    inc rx1415_pos
    gt rx1415_pos, rx1415_eos, rx1415_fail3121
    repr_bind_attr_int rx1415_cur, rx1415_curclass, "$!from", rx1415_pos
  rxscan1416_scan3126:
    nqp_rxmark rx1415_bstack, rxscan1416_loop3125, rx1415_pos, 0
  rxscan1416_done3127:
    add $I11, rx1415_pos, 1
    gt $I11, rx1415_eos, rx1415_fail3121
    substr $S10, rx1415_tgt, rx1415_pos, 1
    ne $S10, ucs4:"{", rx1415_fail3121
    add rx1415_pos, 1
    repr_bind_attr_int rx1415_cur, rx1415_curclass, "$!pos", rx1415_pos
    $P11 = rx1415_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1415_curclass, "$!pos"
    lt $I11, 0, rx1415_fail3121
    repr_get_attr_int rx1415_pos, $P11, rx1415_curclass, "$!pos"
    repr_bind_attr_int rx1415_cur, rx1415_curclass, "$!pos", rx1415_pos
    $P11 = rx1415_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx1415_curclass, "$!pos"
    lt $I11, 0, rx1415_fail3121
    nqp_rxmark rx1415_bstack, rxsubrule1418_pass3129, -1, 0
  rxsubrule1418_pass3129:
    rx1415_cstack = rx1415_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx1415_pos, $P11, rx1415_curclass, "$!pos"
    add $I11, rx1415_pos, 1
    gt $I11, rx1415_eos, rx1415_fail3121
    substr $S10, rx1415_tgt, rx1415_pos, 1
    ne $S10, ucs4:"}", rx1415_fail3121
    add rx1415_pos, 1
    repr_bind_attr_int rx1415_cur, rx1415_curclass, "$!pos", rx1415_pos
    $P11 = rx1415_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1415_curclass, "$!pos"
    lt $I11, 0, rx1415_fail3121
    nqp_rxmark rx1415_bstack, rxsubrule1419_pass3130, -1, 0
  rxsubrule1419_pass3130:
    rx1415_cstack = rx1415_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1415_pos, $P11, rx1415_curclass, "$!pos"
    rx1415_cur."!cursor_pass"(rx1415_pos, "postcircumfix:sym<{ }>", 'backtrack'=>1)
    .return (rx1415_cur)
  rx1415_restart3120:
    repr_get_attr_obj rx1415_cstack, rx1415_cur, rx1415_curclass, "$!cstack"
  rx1415_fail3121:
    unless rx1415_bstack, rx1415_done3119
    pop $I19, rx1415_bstack
    if_null rx1415_cstack, rx1415_cstack_done3124
    unless rx1415_cstack, rx1415_cstack_done3124
    dec $I19
    set $P11, rx1415_cstack[$I19]
  rx1415_cstack_done3124:
    pop rx1415_rep, rx1415_bstack
    pop rx1415_pos, rx1415_bstack
    pop $I19, rx1415_bstack
    lt rx1415_pos, -1, rx1415_done3119
    lt rx1415_pos, 0, rx1415_fail3121
    eq $I19, 0, rx1415_fail3121
    nqp_islist $I20, rx1415_cstack
    unless $I20, rx1415_jump3122
    elements $I18, rx1415_bstack
    le $I18, 0, rx1415_cut3123
    dec $I18
    set $I18, rx1415_bstack[$I18]
  rx1415_cut3123:
    assign rx1415_cstack, $I18
  rx1415_jump3122:
    jump $I19
  rx1415_done3119:
    rx1415_cur."!cursor_fail"()
    .return (rx1415_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<ang>" :subid("cuid_174_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1335
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1420_start
    .local string rx1420_tgt
    .local int rx1420_pos
    .local int rx1420_off
    .local int rx1420_eos
    .local int rx1420_rep
    .local pmc rx1420_cur
    .local pmc rx1420_curclass
    .local pmc rx1420_bstack
    .local pmc rx1420_cstack
    rx1420_start = self."!cursor_start_all"()
    set rx1420_cur, rx1420_start[0]
    set rx1420_tgt, rx1420_start[1]
    set rx1420_pos, rx1420_start[2]
    set rx1420_curclass, rx1420_start[3]
    set rx1420_bstack, rx1420_start[4]
    set $I19, rx1420_start[5]
    store_lex unicode:"$\x{a2}", rx1420_cur
    length rx1420_eos, rx1420_tgt
    eq $I19, 1, rx1420_restart3133
    gt rx1420_pos, rx1420_eos, rx1420_fail3134
    repr_get_attr_int $I11, self, rx1420_curclass, "$!from"
    ne $I11, -1, rxscan1421_done3140
    goto rxscan1421_scan3139
  rxscan1421_loop3138:
    inc rx1420_pos
    gt rx1420_pos, rx1420_eos, rx1420_fail3134
    repr_bind_attr_int rx1420_cur, rx1420_curclass, "$!from", rx1420_pos
  rxscan1421_scan3139:
    nqp_rxmark rx1420_bstack, rxscan1421_loop3138, rx1420_pos, 0
  rxscan1421_done3140:
    ge rx1420_pos, rx1420_eos, rx1420_fail3134
    substr $S11, rx1420_tgt, rx1420_pos, 1
    index $I11, ucs4:"<", $S11
    lt $I11, 0, rx1420_fail3134
    repr_bind_attr_int rx1420_cur, rx1420_curclass, "$!pos", rx1420_pos
    $P11 = rx1420_cur."quote_EXPR"(":q")
    repr_get_attr_int $I11, $P11, rx1420_curclass, "$!pos"
    lt $I11, 0, rx1420_fail3134
    nqp_rxmark rx1420_bstack, rxsubrule1422_pass3141, -1, 0
  rxsubrule1422_pass3141:
    rx1420_cstack = rx1420_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1420_pos, $P11, rx1420_curclass, "$!pos"
    repr_bind_attr_int rx1420_cur, rx1420_curclass, "$!pos", rx1420_pos
    $P11 = rx1420_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1420_curclass, "$!pos"
    lt $I11, 0, rx1420_fail3134
    nqp_rxmark rx1420_bstack, rxsubrule1423_pass3142, -1, 0
  rxsubrule1423_pass3142:
    rx1420_cstack = rx1420_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1420_pos, $P11, rx1420_curclass, "$!pos"
    rx1420_cur."!cursor_pass"(rx1420_pos, "postcircumfix:sym<ang>", 'backtrack'=>1)
    .return (rx1420_cur)
  rx1420_restart3133:
    repr_get_attr_obj rx1420_cstack, rx1420_cur, rx1420_curclass, "$!cstack"
  rx1420_fail3134:
    unless rx1420_bstack, rx1420_done3132
    pop $I19, rx1420_bstack
    if_null rx1420_cstack, rx1420_cstack_done3137
    unless rx1420_cstack, rx1420_cstack_done3137
    dec $I19
    set $P11, rx1420_cstack[$I19]
  rx1420_cstack_done3137:
    pop rx1420_rep, rx1420_bstack
    pop rx1420_pos, rx1420_bstack
    pop $I19, rx1420_bstack
    lt rx1420_pos, -1, rx1420_done3132
    lt rx1420_pos, 0, rx1420_fail3134
    eq $I19, 0, rx1420_fail3134
    nqp_islist $I20, rx1420_cstack
    unless $I20, rx1420_jump3135
    elements $I18, rx1420_bstack
    le $I18, 0, rx1420_cut3136
    dec $I18
    set $I18, rx1420_bstack[$I18]
  rx1420_cut3136:
    assign rx1420_cstack, $I18
  rx1420_jump3135:
    jump $I19
  rx1420_done3132:
    rx1420_cur."!cursor_fail"()
    .return (rx1420_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<( )>" :subid("cuid_175_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1340
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1424_start
    .local string rx1424_tgt
    .local int rx1424_pos
    .local int rx1424_off
    .local int rx1424_eos
    .local int rx1424_rep
    .local pmc rx1424_cur
    .local pmc rx1424_curclass
    .local pmc rx1424_bstack
    .local pmc rx1424_cstack
    rx1424_start = self."!cursor_start_all"()
    set rx1424_cur, rx1424_start[0]
    set rx1424_tgt, rx1424_start[1]
    set rx1424_pos, rx1424_start[2]
    set rx1424_curclass, rx1424_start[3]
    set rx1424_bstack, rx1424_start[4]
    set $I19, rx1424_start[5]
    store_lex unicode:"$\x{a2}", rx1424_cur
    length rx1424_eos, rx1424_tgt
    eq $I19, 1, rx1424_restart3145
    gt rx1424_pos, rx1424_eos, rx1424_fail3146
    repr_get_attr_int $I11, self, rx1424_curclass, "$!from"
    ne $I11, -1, rxscan1425_done3152
    goto rxscan1425_scan3151
  rxscan1425_loop3150:
    inc rx1424_pos
    gt rx1424_pos, rx1424_eos, rx1424_fail3146
    repr_bind_attr_int rx1424_cur, rx1424_curclass, "$!from", rx1424_pos
  rxscan1425_scan3151:
    nqp_rxmark rx1424_bstack, rxscan1425_loop3150, rx1424_pos, 0
  rxscan1425_done3152:
    add $I11, rx1424_pos, 1
    gt $I11, rx1424_eos, rx1424_fail3146
    substr $S10, rx1424_tgt, rx1424_pos, 1
    ne $S10, ucs4:"(", rx1424_fail3146
    add rx1424_pos, 1
    repr_bind_attr_int rx1424_cur, rx1424_curclass, "$!pos", rx1424_pos
    $P11 = rx1424_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1424_curclass, "$!pos"
    lt $I11, 0, rx1424_fail3146
    repr_get_attr_int rx1424_pos, $P11, rx1424_curclass, "$!pos"
    repr_bind_attr_int rx1424_cur, rx1424_curclass, "$!pos", rx1424_pos
    $P11 = rx1424_cur."arglist"()
    repr_get_attr_int $I11, $P11, rx1424_curclass, "$!pos"
    lt $I11, 0, rx1424_fail3146
    nqp_rxmark rx1424_bstack, rxsubrule1427_pass3154, -1, 0
  rxsubrule1427_pass3154:
    rx1424_cstack = rx1424_cur."!cursor_capture"($P11, "arglist")
    repr_get_attr_int rx1424_pos, $P11, rx1424_curclass, "$!pos"
    add $I11, rx1424_pos, 1
    gt $I11, rx1424_eos, rx1424_fail3146
    substr $S10, rx1424_tgt, rx1424_pos, 1
    ne $S10, ucs4:")", rx1424_fail3146
    add rx1424_pos, 1
    repr_bind_attr_int rx1424_cur, rx1424_curclass, "$!pos", rx1424_pos
    $P11 = rx1424_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1424_curclass, "$!pos"
    lt $I11, 0, rx1424_fail3146
    nqp_rxmark rx1424_bstack, rxsubrule1428_pass3155, -1, 0
  rxsubrule1428_pass3155:
    rx1424_cstack = rx1424_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1424_pos, $P11, rx1424_curclass, "$!pos"
    rx1424_cur."!cursor_pass"(rx1424_pos, "postcircumfix:sym<( )>", 'backtrack'=>1)
    .return (rx1424_cur)
  rx1424_restart3145:
    repr_get_attr_obj rx1424_cstack, rx1424_cur, rx1424_curclass, "$!cstack"
  rx1424_fail3146:
    unless rx1424_bstack, rx1424_done3144
    pop $I19, rx1424_bstack
    if_null rx1424_cstack, rx1424_cstack_done3149
    unless rx1424_cstack, rx1424_cstack_done3149
    dec $I19
    set $P11, rx1424_cstack[$I19]
  rx1424_cstack_done3149:
    pop rx1424_rep, rx1424_bstack
    pop rx1424_pos, rx1424_bstack
    pop $I19, rx1424_bstack
    lt rx1424_pos, -1, rx1424_done3144
    lt rx1424_pos, 0, rx1424_fail3146
    eq $I19, 0, rx1424_fail3146
    nqp_islist $I20, rx1424_cstack
    unless $I20, rx1424_jump3147
    elements $I18, rx1424_bstack
    le $I18, 0, rx1424_cut3148
    dec $I18
    set $I18, rx1424_bstack[$I18]
  rx1424_cut3148:
    assign rx1424_cstack, $I18
  rx1424_jump3147:
    jump $I19
  rx1424_done3144:
    rx1424_cur."!cursor_fail"()
    .return (rx1424_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postfix:sym<.>" :subid("cuid_176_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1345
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1429_start
    .local string rx1429_tgt
    .local int rx1429_pos
    .local int rx1429_off
    .local int rx1429_eos
    .local int rx1429_rep
    .local pmc rx1429_cur
    .local pmc rx1429_curclass
    .local pmc rx1429_bstack
    .local pmc rx1429_cstack
    rx1429_start = self."!cursor_start_all"()
    set rx1429_cur, rx1429_start[0]
    set rx1429_tgt, rx1429_start[1]
    set rx1429_pos, rx1429_start[2]
    set rx1429_curclass, rx1429_start[3]
    set rx1429_bstack, rx1429_start[4]
    set $I19, rx1429_start[5]
    store_lex unicode:"$\x{a2}", rx1429_cur
    length rx1429_eos, rx1429_tgt
    eq $I19, 1, rx1429_restart3158
    gt rx1429_pos, rx1429_eos, rx1429_fail3159
    repr_get_attr_int $I11, self, rx1429_curclass, "$!from"
    ne $I11, -1, rxscan1430_done3165
    goto rxscan1430_scan3164
  rxscan1430_loop3163:
    inc rx1429_pos
    gt rx1429_pos, rx1429_eos, rx1429_fail3159
    repr_bind_attr_int rx1429_cur, rx1429_curclass, "$!from", rx1429_pos
  rxscan1430_scan3164:
    nqp_rxmark rx1429_bstack, rxscan1430_loop3163, rx1429_pos, 0
  rxscan1430_done3165:
    repr_bind_attr_int rx1429_cur, rx1429_curclass, "$!pos", rx1429_pos
    $P11 = rx1429_cur."dotty"()
    repr_get_attr_int $I11, $P11, rx1429_curclass, "$!pos"
    lt $I11, 0, rx1429_fail3159
    nqp_rxmark rx1429_bstack, rxsubrule1431_pass3166, -1, 0
  rxsubrule1431_pass3166:
    rx1429_cstack = rx1429_cur."!cursor_capture"($P11, "dotty")
    repr_get_attr_int rx1429_pos, $P11, rx1429_curclass, "$!pos"
    repr_bind_attr_int rx1429_cur, rx1429_curclass, "$!pos", rx1429_pos
    $P11 = rx1429_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1429_curclass, "$!pos"
    lt $I11, 0, rx1429_fail3159
    nqp_rxmark rx1429_bstack, rxsubrule1432_pass3167, -1, 0
  rxsubrule1432_pass3167:
    rx1429_cstack = rx1429_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1429_pos, $P11, rx1429_curclass, "$!pos"
    rx1429_cur."!cursor_pass"(rx1429_pos, "postfix:sym<.>", 'backtrack'=>1)
    .return (rx1429_cur)
  rx1429_restart3158:
    repr_get_attr_obj rx1429_cstack, rx1429_cur, rx1429_curclass, "$!cstack"
  rx1429_fail3159:
    unless rx1429_bstack, rx1429_done3157
    pop $I19, rx1429_bstack
    if_null rx1429_cstack, rx1429_cstack_done3162
    unless rx1429_cstack, rx1429_cstack_done3162
    dec $I19
    set $P11, rx1429_cstack[$I19]
  rx1429_cstack_done3162:
    pop rx1429_rep, rx1429_bstack
    pop rx1429_pos, rx1429_bstack
    pop $I19, rx1429_bstack
    lt rx1429_pos, -1, rx1429_done3157
    lt rx1429_pos, 0, rx1429_fail3159
    eq $I19, 0, rx1429_fail3159
    nqp_islist $I20, rx1429_cstack
    unless $I20, rx1429_jump3160
    elements $I18, rx1429_bstack
    le $I18, 0, rx1429_cut3161
    dec $I18
    set $I18, rx1429_bstack[$I18]
  rx1429_cut3161:
    assign rx1429_cstack, $I18
  rx1429_jump3160:
    jump $I19
  rx1429_done3157:
    rx1429_cur."!cursor_fail"()
    .return (rx1429_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<++>" :subid("cuid_177_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1347
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1433_start
    .local string rx1433_tgt
    .local int rx1433_pos
    .local int rx1433_off
    .local int rx1433_eos
    .local int rx1433_rep
    .local pmc rx1433_cur
    .local pmc rx1433_curclass
    .local pmc rx1433_bstack
    .local pmc rx1433_cstack
    rx1433_start = self."!cursor_start_all"()
    set rx1433_cur, rx1433_start[0]
    set rx1433_tgt, rx1433_start[1]
    set rx1433_pos, rx1433_start[2]
    set rx1433_curclass, rx1433_start[3]
    set rx1433_bstack, rx1433_start[4]
    set $I19, rx1433_start[5]
    store_lex unicode:"$\x{a2}", rx1433_cur
    length rx1433_eos, rx1433_tgt
    eq $I19, 1, rx1433_restart3170
    gt rx1433_pos, rx1433_eos, rx1433_fail3171
    repr_get_attr_int $I11, self, rx1433_curclass, "$!from"
    ne $I11, -1, rxscan1434_done3177
    goto rxscan1434_scan3176
  rxscan1434_loop3175:
    inc rx1433_pos
    gt rx1433_pos, rx1433_eos, rx1433_fail3171
    repr_bind_attr_int rx1433_cur, rx1433_curclass, "$!from", rx1433_pos
  rxscan1434_scan3176:
    nqp_rxmark rx1433_bstack, rxscan1434_loop3175, rx1433_pos, 0
  rxscan1434_done3177:
    nqp_rxmark rx1433_bstack, rxcap1435_fail3179, rx1433_pos, 0
    add $I11, rx1433_pos, 2
    gt $I11, rx1433_eos, rx1433_fail3171
    substr $S10, rx1433_tgt, rx1433_pos, 2
    ne $S10, ucs4:"++", rx1433_fail3171
    add rx1433_pos, 2
    nqp_rxpeek $I19, rx1433_bstack, rxcap1435_fail3179
    inc $I19
    set $I11, rx1433_bstack[$I19]
    repr_bind_attr_int rx1433_cur, rx1433_curclass, "$!pos", rx1433_pos
    $P11 = rx1433_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1433_pos)
    rx1433_cstack = rx1433_cur."!cursor_capture"($P11, "sym")
    goto rxcap1435_done3178
  rxcap1435_fail3179:
    goto rx1433_fail3171
  rxcap1435_done3178:
    repr_bind_attr_int rx1433_cur, rx1433_curclass, "$!pos", rx1433_pos
    $P11 = rx1433_cur."O"("%autoincrement, :op<preinc>")
    repr_get_attr_int $I11, $P11, rx1433_curclass, "$!pos"
    lt $I11, 0, rx1433_fail3171
    nqp_rxmark rx1433_bstack, rxsubrule1436_pass3180, -1, 0
  rxsubrule1436_pass3180:
    rx1433_cstack = rx1433_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1433_pos, $P11, rx1433_curclass, "$!pos"
    rx1433_cur."!cursor_pass"(rx1433_pos, "prefix:sym<++>", 'backtrack'=>1)
    .return (rx1433_cur)
  rx1433_restart3170:
    repr_get_attr_obj rx1433_cstack, rx1433_cur, rx1433_curclass, "$!cstack"
  rx1433_fail3171:
    unless rx1433_bstack, rx1433_done3169
    pop $I19, rx1433_bstack
    if_null rx1433_cstack, rx1433_cstack_done3174
    unless rx1433_cstack, rx1433_cstack_done3174
    dec $I19
    set $P11, rx1433_cstack[$I19]
  rx1433_cstack_done3174:
    pop rx1433_rep, rx1433_bstack
    pop rx1433_pos, rx1433_bstack
    pop $I19, rx1433_bstack
    lt rx1433_pos, -1, rx1433_done3169
    lt rx1433_pos, 0, rx1433_fail3171
    eq $I19, 0, rx1433_fail3171
    nqp_islist $I20, rx1433_cstack
    unless $I20, rx1433_jump3172
    elements $I18, rx1433_bstack
    le $I18, 0, rx1433_cut3173
    dec $I18
    set $I18, rx1433_bstack[$I18]
  rx1433_cut3173:
    assign rx1433_cstack, $I18
  rx1433_jump3172:
    jump $I19
  rx1433_done3169:
    rx1433_cur."!cursor_fail"()
    .return (rx1433_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<-->" :subid("cuid_178_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1348
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1437_start
    .local string rx1437_tgt
    .local int rx1437_pos
    .local int rx1437_off
    .local int rx1437_eos
    .local int rx1437_rep
    .local pmc rx1437_cur
    .local pmc rx1437_curclass
    .local pmc rx1437_bstack
    .local pmc rx1437_cstack
    rx1437_start = self."!cursor_start_all"()
    set rx1437_cur, rx1437_start[0]
    set rx1437_tgt, rx1437_start[1]
    set rx1437_pos, rx1437_start[2]
    set rx1437_curclass, rx1437_start[3]
    set rx1437_bstack, rx1437_start[4]
    set $I19, rx1437_start[5]
    store_lex unicode:"$\x{a2}", rx1437_cur
    length rx1437_eos, rx1437_tgt
    eq $I19, 1, rx1437_restart3183
    gt rx1437_pos, rx1437_eos, rx1437_fail3184
    repr_get_attr_int $I11, self, rx1437_curclass, "$!from"
    ne $I11, -1, rxscan1438_done3190
    goto rxscan1438_scan3189
  rxscan1438_loop3188:
    inc rx1437_pos
    gt rx1437_pos, rx1437_eos, rx1437_fail3184
    repr_bind_attr_int rx1437_cur, rx1437_curclass, "$!from", rx1437_pos
  rxscan1438_scan3189:
    nqp_rxmark rx1437_bstack, rxscan1438_loop3188, rx1437_pos, 0
  rxscan1438_done3190:
    nqp_rxmark rx1437_bstack, rxcap1439_fail3192, rx1437_pos, 0
    add $I11, rx1437_pos, 2
    gt $I11, rx1437_eos, rx1437_fail3184
    substr $S10, rx1437_tgt, rx1437_pos, 2
    ne $S10, ucs4:"--", rx1437_fail3184
    add rx1437_pos, 2
    nqp_rxpeek $I19, rx1437_bstack, rxcap1439_fail3192
    inc $I19
    set $I11, rx1437_bstack[$I19]
    repr_bind_attr_int rx1437_cur, rx1437_curclass, "$!pos", rx1437_pos
    $P11 = rx1437_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1437_pos)
    rx1437_cstack = rx1437_cur."!cursor_capture"($P11, "sym")
    goto rxcap1439_done3191
  rxcap1439_fail3192:
    goto rx1437_fail3184
  rxcap1439_done3191:
    repr_bind_attr_int rx1437_cur, rx1437_curclass, "$!pos", rx1437_pos
    $P11 = rx1437_cur."O"("%autoincrement, :op<predec>")
    repr_get_attr_int $I11, $P11, rx1437_curclass, "$!pos"
    lt $I11, 0, rx1437_fail3184
    nqp_rxmark rx1437_bstack, rxsubrule1440_pass3193, -1, 0
  rxsubrule1440_pass3193:
    rx1437_cstack = rx1437_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1437_pos, $P11, rx1437_curclass, "$!pos"
    rx1437_cur."!cursor_pass"(rx1437_pos, "prefix:sym<-->", 'backtrack'=>1)
    .return (rx1437_cur)
  rx1437_restart3183:
    repr_get_attr_obj rx1437_cstack, rx1437_cur, rx1437_curclass, "$!cstack"
  rx1437_fail3184:
    unless rx1437_bstack, rx1437_done3182
    pop $I19, rx1437_bstack
    if_null rx1437_cstack, rx1437_cstack_done3187
    unless rx1437_cstack, rx1437_cstack_done3187
    dec $I19
    set $P11, rx1437_cstack[$I19]
  rx1437_cstack_done3187:
    pop rx1437_rep, rx1437_bstack
    pop rx1437_pos, rx1437_bstack
    pop $I19, rx1437_bstack
    lt rx1437_pos, -1, rx1437_done3182
    lt rx1437_pos, 0, rx1437_fail3184
    eq $I19, 0, rx1437_fail3184
    nqp_islist $I20, rx1437_cstack
    unless $I20, rx1437_jump3185
    elements $I18, rx1437_bstack
    le $I18, 0, rx1437_cut3186
    dec $I18
    set $I18, rx1437_bstack[$I18]
  rx1437_cut3186:
    assign rx1437_cstack, $I18
  rx1437_jump3185:
    jump $I19
  rx1437_done3182:
    rx1437_cur."!cursor_fail"()
    .return (rx1437_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postfix:sym<++>" :subid("cuid_179_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1350
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1441_start
    .local string rx1441_tgt
    .local int rx1441_pos
    .local int rx1441_off
    .local int rx1441_eos
    .local int rx1441_rep
    .local pmc rx1441_cur
    .local pmc rx1441_curclass
    .local pmc rx1441_bstack
    .local pmc rx1441_cstack
    rx1441_start = self."!cursor_start_all"()
    set rx1441_cur, rx1441_start[0]
    set rx1441_tgt, rx1441_start[1]
    set rx1441_pos, rx1441_start[2]
    set rx1441_curclass, rx1441_start[3]
    set rx1441_bstack, rx1441_start[4]
    set $I19, rx1441_start[5]
    store_lex unicode:"$\x{a2}", rx1441_cur
    length rx1441_eos, rx1441_tgt
    eq $I19, 1, rx1441_restart3196
    gt rx1441_pos, rx1441_eos, rx1441_fail3197
    repr_get_attr_int $I11, self, rx1441_curclass, "$!from"
    ne $I11, -1, rxscan1442_done3203
    goto rxscan1442_scan3202
  rxscan1442_loop3201:
    inc rx1441_pos
    gt rx1441_pos, rx1441_eos, rx1441_fail3197
    repr_bind_attr_int rx1441_cur, rx1441_curclass, "$!from", rx1441_pos
  rxscan1442_scan3202:
    nqp_rxmark rx1441_bstack, rxscan1442_loop3201, rx1441_pos, 0
  rxscan1442_done3203:
    nqp_rxmark rx1441_bstack, rxcap1443_fail3205, rx1441_pos, 0
    add $I11, rx1441_pos, 2
    gt $I11, rx1441_eos, rx1441_fail3197
    substr $S10, rx1441_tgt, rx1441_pos, 2
    ne $S10, ucs4:"++", rx1441_fail3197
    add rx1441_pos, 2
    nqp_rxpeek $I19, rx1441_bstack, rxcap1443_fail3205
    inc $I19
    set $I11, rx1441_bstack[$I19]
    repr_bind_attr_int rx1441_cur, rx1441_curclass, "$!pos", rx1441_pos
    $P11 = rx1441_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1441_pos)
    rx1441_cstack = rx1441_cur."!cursor_capture"($P11, "sym")
    goto rxcap1443_done3204
  rxcap1443_fail3205:
    goto rx1441_fail3197
  rxcap1443_done3204:
    repr_bind_attr_int rx1441_cur, rx1441_curclass, "$!pos", rx1441_pos
    $P11 = rx1441_cur."O"("%autoincrement, :op<postinc>")
    repr_get_attr_int $I11, $P11, rx1441_curclass, "$!pos"
    lt $I11, 0, rx1441_fail3197
    nqp_rxmark rx1441_bstack, rxsubrule1444_pass3206, -1, 0
  rxsubrule1444_pass3206:
    rx1441_cstack = rx1441_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1441_pos, $P11, rx1441_curclass, "$!pos"
    rx1441_cur."!cursor_pass"(rx1441_pos, "postfix:sym<++>", 'backtrack'=>1)
    .return (rx1441_cur)
  rx1441_restart3196:
    repr_get_attr_obj rx1441_cstack, rx1441_cur, rx1441_curclass, "$!cstack"
  rx1441_fail3197:
    unless rx1441_bstack, rx1441_done3195
    pop $I19, rx1441_bstack
    if_null rx1441_cstack, rx1441_cstack_done3200
    unless rx1441_cstack, rx1441_cstack_done3200
    dec $I19
    set $P11, rx1441_cstack[$I19]
  rx1441_cstack_done3200:
    pop rx1441_rep, rx1441_bstack
    pop rx1441_pos, rx1441_bstack
    pop $I19, rx1441_bstack
    lt rx1441_pos, -1, rx1441_done3195
    lt rx1441_pos, 0, rx1441_fail3197
    eq $I19, 0, rx1441_fail3197
    nqp_islist $I20, rx1441_cstack
    unless $I20, rx1441_jump3198
    elements $I18, rx1441_bstack
    le $I18, 0, rx1441_cut3199
    dec $I18
    set $I18, rx1441_bstack[$I18]
  rx1441_cut3199:
    assign rx1441_cstack, $I18
  rx1441_jump3198:
    jump $I19
  rx1441_done3195:
    rx1441_cur."!cursor_fail"()
    .return (rx1441_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postfix:sym<-->" :subid("cuid_180_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1351
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1445_start
    .local string rx1445_tgt
    .local int rx1445_pos
    .local int rx1445_off
    .local int rx1445_eos
    .local int rx1445_rep
    .local pmc rx1445_cur
    .local pmc rx1445_curclass
    .local pmc rx1445_bstack
    .local pmc rx1445_cstack
    rx1445_start = self."!cursor_start_all"()
    set rx1445_cur, rx1445_start[0]
    set rx1445_tgt, rx1445_start[1]
    set rx1445_pos, rx1445_start[2]
    set rx1445_curclass, rx1445_start[3]
    set rx1445_bstack, rx1445_start[4]
    set $I19, rx1445_start[5]
    store_lex unicode:"$\x{a2}", rx1445_cur
    length rx1445_eos, rx1445_tgt
    eq $I19, 1, rx1445_restart3209
    gt rx1445_pos, rx1445_eos, rx1445_fail3210
    repr_get_attr_int $I11, self, rx1445_curclass, "$!from"
    ne $I11, -1, rxscan1446_done3216
    goto rxscan1446_scan3215
  rxscan1446_loop3214:
    inc rx1445_pos
    gt rx1445_pos, rx1445_eos, rx1445_fail3210
    repr_bind_attr_int rx1445_cur, rx1445_curclass, "$!from", rx1445_pos
  rxscan1446_scan3215:
    nqp_rxmark rx1445_bstack, rxscan1446_loop3214, rx1445_pos, 0
  rxscan1446_done3216:
    nqp_rxmark rx1445_bstack, rxcap1447_fail3218, rx1445_pos, 0
    add $I11, rx1445_pos, 2
    gt $I11, rx1445_eos, rx1445_fail3210
    substr $S10, rx1445_tgt, rx1445_pos, 2
    ne $S10, ucs4:"--", rx1445_fail3210
    add rx1445_pos, 2
    nqp_rxpeek $I19, rx1445_bstack, rxcap1447_fail3218
    inc $I19
    set $I11, rx1445_bstack[$I19]
    repr_bind_attr_int rx1445_cur, rx1445_curclass, "$!pos", rx1445_pos
    $P11 = rx1445_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1445_pos)
    rx1445_cstack = rx1445_cur."!cursor_capture"($P11, "sym")
    goto rxcap1447_done3217
  rxcap1447_fail3218:
    goto rx1445_fail3210
  rxcap1447_done3217:
    repr_bind_attr_int rx1445_cur, rx1445_curclass, "$!pos", rx1445_pos
    $P11 = rx1445_cur."O"("%autoincrement, :op<postdec>")
    repr_get_attr_int $I11, $P11, rx1445_curclass, "$!pos"
    lt $I11, 0, rx1445_fail3210
    nqp_rxmark rx1445_bstack, rxsubrule1448_pass3219, -1, 0
  rxsubrule1448_pass3219:
    rx1445_cstack = rx1445_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1445_pos, $P11, rx1445_curclass, "$!pos"
    rx1445_cur."!cursor_pass"(rx1445_pos, "postfix:sym<-->", 'backtrack'=>1)
    .return (rx1445_cur)
  rx1445_restart3209:
    repr_get_attr_obj rx1445_cstack, rx1445_cur, rx1445_curclass, "$!cstack"
  rx1445_fail3210:
    unless rx1445_bstack, rx1445_done3208
    pop $I19, rx1445_bstack
    if_null rx1445_cstack, rx1445_cstack_done3213
    unless rx1445_cstack, rx1445_cstack_done3213
    dec $I19
    set $P11, rx1445_cstack[$I19]
  rx1445_cstack_done3213:
    pop rx1445_rep, rx1445_bstack
    pop rx1445_pos, rx1445_bstack
    pop $I19, rx1445_bstack
    lt rx1445_pos, -1, rx1445_done3208
    lt rx1445_pos, 0, rx1445_fail3210
    eq $I19, 0, rx1445_fail3210
    nqp_islist $I20, rx1445_cstack
    unless $I20, rx1445_jump3211
    elements $I18, rx1445_bstack
    le $I18, 0, rx1445_cut3212
    dec $I18
    set $I18, rx1445_bstack[$I18]
  rx1445_cut3212:
    assign rx1445_cstack, $I18
  rx1445_jump3211:
    jump $I19
  rx1445_done3208:
    rx1445_cur."!cursor_fail"()
    .return (rx1445_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<**>" :subid("cuid_181_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1353
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1449_start
    .local string rx1449_tgt
    .local int rx1449_pos
    .local int rx1449_off
    .local int rx1449_eos
    .local int rx1449_rep
    .local pmc rx1449_cur
    .local pmc rx1449_curclass
    .local pmc rx1449_bstack
    .local pmc rx1449_cstack
    rx1449_start = self."!cursor_start_all"()
    set rx1449_cur, rx1449_start[0]
    set rx1449_tgt, rx1449_start[1]
    set rx1449_pos, rx1449_start[2]
    set rx1449_curclass, rx1449_start[3]
    set rx1449_bstack, rx1449_start[4]
    set $I19, rx1449_start[5]
    store_lex unicode:"$\x{a2}", rx1449_cur
    length rx1449_eos, rx1449_tgt
    eq $I19, 1, rx1449_restart3222
    gt rx1449_pos, rx1449_eos, rx1449_fail3223
    repr_get_attr_int $I11, self, rx1449_curclass, "$!from"
    ne $I11, -1, rxscan1450_done3229
    goto rxscan1450_scan3228
  rxscan1450_loop3227:
    inc rx1449_pos
    gt rx1449_pos, rx1449_eos, rx1449_fail3223
    repr_bind_attr_int rx1449_cur, rx1449_curclass, "$!from", rx1449_pos
  rxscan1450_scan3228:
    nqp_rxmark rx1449_bstack, rxscan1450_loop3227, rx1449_pos, 0
  rxscan1450_done3229:
    nqp_rxmark rx1449_bstack, rxcap1451_fail3231, rx1449_pos, 0
    add $I11, rx1449_pos, 2
    gt $I11, rx1449_eos, rx1449_fail3223
    substr $S10, rx1449_tgt, rx1449_pos, 2
    ne $S10, ucs4:"**", rx1449_fail3223
    add rx1449_pos, 2
    nqp_rxpeek $I19, rx1449_bstack, rxcap1451_fail3231
    inc $I19
    set $I11, rx1449_bstack[$I19]
    repr_bind_attr_int rx1449_cur, rx1449_curclass, "$!pos", rx1449_pos
    $P11 = rx1449_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1449_pos)
    rx1449_cstack = rx1449_cur."!cursor_capture"($P11, "sym")
    goto rxcap1451_done3230
  rxcap1451_fail3231:
    goto rx1449_fail3223
  rxcap1451_done3230:
    repr_bind_attr_int rx1449_cur, rx1449_curclass, "$!pos", rx1449_pos
    $P11 = rx1449_cur."O"("%exponentiation, :op<pow_n>")
    repr_get_attr_int $I11, $P11, rx1449_curclass, "$!pos"
    lt $I11, 0, rx1449_fail3223
    nqp_rxmark rx1449_bstack, rxsubrule1452_pass3232, -1, 0
  rxsubrule1452_pass3232:
    rx1449_cstack = rx1449_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1449_pos, $P11, rx1449_curclass, "$!pos"
    rx1449_cur."!cursor_pass"(rx1449_pos, "infix:sym<**>", 'backtrack'=>1)
    .return (rx1449_cur)
  rx1449_restart3222:
    repr_get_attr_obj rx1449_cstack, rx1449_cur, rx1449_curclass, "$!cstack"
  rx1449_fail3223:
    unless rx1449_bstack, rx1449_done3221
    pop $I19, rx1449_bstack
    if_null rx1449_cstack, rx1449_cstack_done3226
    unless rx1449_cstack, rx1449_cstack_done3226
    dec $I19
    set $P11, rx1449_cstack[$I19]
  rx1449_cstack_done3226:
    pop rx1449_rep, rx1449_bstack
    pop rx1449_pos, rx1449_bstack
    pop $I19, rx1449_bstack
    lt rx1449_pos, -1, rx1449_done3221
    lt rx1449_pos, 0, rx1449_fail3223
    eq $I19, 0, rx1449_fail3223
    nqp_islist $I20, rx1449_cstack
    unless $I20, rx1449_jump3224
    elements $I18, rx1449_bstack
    le $I18, 0, rx1449_cut3225
    dec $I18
    set $I18, rx1449_bstack[$I18]
  rx1449_cut3225:
    assign rx1449_cstack, $I18
  rx1449_jump3224:
    jump $I19
  rx1449_done3221:
    rx1449_cur."!cursor_fail"()
    .return (rx1449_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<+>" :subid("cuid_182_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1355
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1453_start
    .local string rx1453_tgt
    .local int rx1453_pos
    .local int rx1453_off
    .local int rx1453_eos
    .local int rx1453_rep
    .local pmc rx1453_cur
    .local pmc rx1453_curclass
    .local pmc rx1453_bstack
    .local pmc rx1453_cstack
    rx1453_start = self."!cursor_start_all"()
    set rx1453_cur, rx1453_start[0]
    set rx1453_tgt, rx1453_start[1]
    set rx1453_pos, rx1453_start[2]
    set rx1453_curclass, rx1453_start[3]
    set rx1453_bstack, rx1453_start[4]
    set $I19, rx1453_start[5]
    store_lex unicode:"$\x{a2}", rx1453_cur
    length rx1453_eos, rx1453_tgt
    eq $I19, 1, rx1453_restart3235
    gt rx1453_pos, rx1453_eos, rx1453_fail3236
    repr_get_attr_int $I11, self, rx1453_curclass, "$!from"
    ne $I11, -1, rxscan1454_done3242
    goto rxscan1454_scan3241
  rxscan1454_loop3240:
    inc rx1453_pos
    gt rx1453_pos, rx1453_eos, rx1453_fail3236
    repr_bind_attr_int rx1453_cur, rx1453_curclass, "$!from", rx1453_pos
  rxscan1454_scan3241:
    nqp_rxmark rx1453_bstack, rxscan1454_loop3240, rx1453_pos, 0
  rxscan1454_done3242:
    nqp_rxmark rx1453_bstack, rxcap1455_fail3244, rx1453_pos, 0
    add $I11, rx1453_pos, 1
    gt $I11, rx1453_eos, rx1453_fail3236
    substr $S10, rx1453_tgt, rx1453_pos, 1
    ne $S10, ucs4:"+", rx1453_fail3236
    add rx1453_pos, 1
    nqp_rxpeek $I19, rx1453_bstack, rxcap1455_fail3244
    inc $I19
    set $I11, rx1453_bstack[$I19]
    repr_bind_attr_int rx1453_cur, rx1453_curclass, "$!pos", rx1453_pos
    $P11 = rx1453_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1453_pos)
    rx1453_cstack = rx1453_cur."!cursor_capture"($P11, "sym")
    goto rxcap1455_done3243
  rxcap1455_fail3244:
    goto rx1453_fail3236
  rxcap1455_done3243:
    repr_bind_attr_int rx1453_cur, rx1453_curclass, "$!pos", rx1453_pos
    $P11 = rx1453_cur."O"("%symbolic_unary, :op<numify>")
    repr_get_attr_int $I11, $P11, rx1453_curclass, "$!pos"
    lt $I11, 0, rx1453_fail3236
    nqp_rxmark rx1453_bstack, rxsubrule1456_pass3245, -1, 0
  rxsubrule1456_pass3245:
    rx1453_cstack = rx1453_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1453_pos, $P11, rx1453_curclass, "$!pos"
    rx1453_cur."!cursor_pass"(rx1453_pos, "prefix:sym<+>", 'backtrack'=>1)
    .return (rx1453_cur)
  rx1453_restart3235:
    repr_get_attr_obj rx1453_cstack, rx1453_cur, rx1453_curclass, "$!cstack"
  rx1453_fail3236:
    unless rx1453_bstack, rx1453_done3234
    pop $I19, rx1453_bstack
    if_null rx1453_cstack, rx1453_cstack_done3239
    unless rx1453_cstack, rx1453_cstack_done3239
    dec $I19
    set $P11, rx1453_cstack[$I19]
  rx1453_cstack_done3239:
    pop rx1453_rep, rx1453_bstack
    pop rx1453_pos, rx1453_bstack
    pop $I19, rx1453_bstack
    lt rx1453_pos, -1, rx1453_done3234
    lt rx1453_pos, 0, rx1453_fail3236
    eq $I19, 0, rx1453_fail3236
    nqp_islist $I20, rx1453_cstack
    unless $I20, rx1453_jump3237
    elements $I18, rx1453_bstack
    le $I18, 0, rx1453_cut3238
    dec $I18
    set $I18, rx1453_bstack[$I18]
  rx1453_cut3238:
    assign rx1453_cstack, $I18
  rx1453_jump3237:
    jump $I19
  rx1453_done3234:
    rx1453_cur."!cursor_fail"()
    .return (rx1453_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<~>" :subid("cuid_183_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1356
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1457_start
    .local string rx1457_tgt
    .local int rx1457_pos
    .local int rx1457_off
    .local int rx1457_eos
    .local int rx1457_rep
    .local pmc rx1457_cur
    .local pmc rx1457_curclass
    .local pmc rx1457_bstack
    .local pmc rx1457_cstack
    rx1457_start = self."!cursor_start_all"()
    set rx1457_cur, rx1457_start[0]
    set rx1457_tgt, rx1457_start[1]
    set rx1457_pos, rx1457_start[2]
    set rx1457_curclass, rx1457_start[3]
    set rx1457_bstack, rx1457_start[4]
    set $I19, rx1457_start[5]
    store_lex unicode:"$\x{a2}", rx1457_cur
    length rx1457_eos, rx1457_tgt
    eq $I19, 1, rx1457_restart3248
    gt rx1457_pos, rx1457_eos, rx1457_fail3249
    repr_get_attr_int $I11, self, rx1457_curclass, "$!from"
    ne $I11, -1, rxscan1458_done3255
    goto rxscan1458_scan3254
  rxscan1458_loop3253:
    inc rx1457_pos
    gt rx1457_pos, rx1457_eos, rx1457_fail3249
    repr_bind_attr_int rx1457_cur, rx1457_curclass, "$!from", rx1457_pos
  rxscan1458_scan3254:
    nqp_rxmark rx1457_bstack, rxscan1458_loop3253, rx1457_pos, 0
  rxscan1458_done3255:
    nqp_rxmark rx1457_bstack, rxcap1459_fail3257, rx1457_pos, 0
    add $I11, rx1457_pos, 1
    gt $I11, rx1457_eos, rx1457_fail3249
    substr $S10, rx1457_tgt, rx1457_pos, 1
    ne $S10, ucs4:"~", rx1457_fail3249
    add rx1457_pos, 1
    nqp_rxpeek $I19, rx1457_bstack, rxcap1459_fail3257
    inc $I19
    set $I11, rx1457_bstack[$I19]
    repr_bind_attr_int rx1457_cur, rx1457_curclass, "$!pos", rx1457_pos
    $P11 = rx1457_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1457_pos)
    rx1457_cstack = rx1457_cur."!cursor_capture"($P11, "sym")
    goto rxcap1459_done3256
  rxcap1459_fail3257:
    goto rx1457_fail3249
  rxcap1459_done3256:
    repr_bind_attr_int rx1457_cur, rx1457_curclass, "$!pos", rx1457_pos
    $P11 = rx1457_cur."O"("%symbolic_unary, :op<stringify>")
    repr_get_attr_int $I11, $P11, rx1457_curclass, "$!pos"
    lt $I11, 0, rx1457_fail3249
    nqp_rxmark rx1457_bstack, rxsubrule1460_pass3258, -1, 0
  rxsubrule1460_pass3258:
    rx1457_cstack = rx1457_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1457_pos, $P11, rx1457_curclass, "$!pos"
    rx1457_cur."!cursor_pass"(rx1457_pos, "prefix:sym<~>", 'backtrack'=>1)
    .return (rx1457_cur)
  rx1457_restart3248:
    repr_get_attr_obj rx1457_cstack, rx1457_cur, rx1457_curclass, "$!cstack"
  rx1457_fail3249:
    unless rx1457_bstack, rx1457_done3247
    pop $I19, rx1457_bstack
    if_null rx1457_cstack, rx1457_cstack_done3252
    unless rx1457_cstack, rx1457_cstack_done3252
    dec $I19
    set $P11, rx1457_cstack[$I19]
  rx1457_cstack_done3252:
    pop rx1457_rep, rx1457_bstack
    pop rx1457_pos, rx1457_bstack
    pop $I19, rx1457_bstack
    lt rx1457_pos, -1, rx1457_done3247
    lt rx1457_pos, 0, rx1457_fail3249
    eq $I19, 0, rx1457_fail3249
    nqp_islist $I20, rx1457_cstack
    unless $I20, rx1457_jump3250
    elements $I18, rx1457_bstack
    le $I18, 0, rx1457_cut3251
    dec $I18
    set $I18, rx1457_bstack[$I18]
  rx1457_cut3251:
    assign rx1457_cstack, $I18
  rx1457_jump3250:
    jump $I19
  rx1457_done3247:
    rx1457_cur."!cursor_fail"()
    .return (rx1457_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<->" :subid("cuid_184_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1357
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1461_start
    .local string rx1461_tgt
    .local int rx1461_pos
    .local int rx1461_off
    .local int rx1461_eos
    .local int rx1461_rep
    .local pmc rx1461_cur
    .local pmc rx1461_curclass
    .local pmc rx1461_bstack
    .local pmc rx1461_cstack
    rx1461_start = self."!cursor_start_all"()
    set rx1461_cur, rx1461_start[0]
    set rx1461_tgt, rx1461_start[1]
    set rx1461_pos, rx1461_start[2]
    set rx1461_curclass, rx1461_start[3]
    set rx1461_bstack, rx1461_start[4]
    set $I19, rx1461_start[5]
    store_lex unicode:"$\x{a2}", rx1461_cur
    length rx1461_eos, rx1461_tgt
    eq $I19, 1, rx1461_restart3261
    gt rx1461_pos, rx1461_eos, rx1461_fail3262
    repr_get_attr_int $I11, self, rx1461_curclass, "$!from"
    ne $I11, -1, rxscan1462_done3268
    goto rxscan1462_scan3267
  rxscan1462_loop3266:
    inc rx1461_pos
    gt rx1461_pos, rx1461_eos, rx1461_fail3262
    repr_bind_attr_int rx1461_cur, rx1461_curclass, "$!from", rx1461_pos
  rxscan1462_scan3267:
    nqp_rxmark rx1461_bstack, rxscan1462_loop3266, rx1461_pos, 0
  rxscan1462_done3268:
    nqp_rxmark rx1461_bstack, rxcap1463_fail3270, rx1461_pos, 0
    add $I11, rx1461_pos, 1
    gt $I11, rx1461_eos, rx1461_fail3262
    substr $S10, rx1461_tgt, rx1461_pos, 1
    ne $S10, ucs4:"-", rx1461_fail3262
    add rx1461_pos, 1
    nqp_rxpeek $I19, rx1461_bstack, rxcap1463_fail3270
    inc $I19
    set $I11, rx1461_bstack[$I19]
    repr_bind_attr_int rx1461_cur, rx1461_curclass, "$!pos", rx1461_pos
    $P11 = rx1461_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1461_pos)
    rx1461_cstack = rx1461_cur."!cursor_capture"($P11, "sym")
    goto rxcap1463_done3269
  rxcap1463_fail3270:
    goto rx1461_fail3262
  rxcap1463_done3269:
    ge rx1461_pos, rx1461_eos, rx1461_fail3262
    substr $S11, rx1461_tgt, rx1461_pos, 1
    index $I11, ucs4:">", $S11
    ge $I11, 0, rx1461_fail3262
    repr_bind_attr_int rx1461_cur, rx1461_curclass, "$!pos", rx1461_pos
    $P11 = rx1461_cur."number"()
    repr_get_attr_int $I11, $P11, rx1461_curclass, "$!pos"
    ge $I11, 0, rx1461_fail3262
    repr_bind_attr_int rx1461_cur, rx1461_curclass, "$!pos", rx1461_pos
    $P11 = rx1461_cur."O"("%symbolic_unary, :op<neg_n>")
    repr_get_attr_int $I11, $P11, rx1461_curclass, "$!pos"
    lt $I11, 0, rx1461_fail3262
    nqp_rxmark rx1461_bstack, rxsubrule1464_pass3271, -1, 0
  rxsubrule1464_pass3271:
    rx1461_cstack = rx1461_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1461_pos, $P11, rx1461_curclass, "$!pos"
    rx1461_cur."!cursor_pass"(rx1461_pos, "prefix:sym<->", 'backtrack'=>1)
    .return (rx1461_cur)
  rx1461_restart3261:
    repr_get_attr_obj rx1461_cstack, rx1461_cur, rx1461_curclass, "$!cstack"
  rx1461_fail3262:
    unless rx1461_bstack, rx1461_done3260
    pop $I19, rx1461_bstack
    if_null rx1461_cstack, rx1461_cstack_done3265
    unless rx1461_cstack, rx1461_cstack_done3265
    dec $I19
    set $P11, rx1461_cstack[$I19]
  rx1461_cstack_done3265:
    pop rx1461_rep, rx1461_bstack
    pop rx1461_pos, rx1461_bstack
    pop $I19, rx1461_bstack
    lt rx1461_pos, -1, rx1461_done3260
    lt rx1461_pos, 0, rx1461_fail3262
    eq $I19, 0, rx1461_fail3262
    nqp_islist $I20, rx1461_cstack
    unless $I20, rx1461_jump3263
    elements $I18, rx1461_bstack
    le $I18, 0, rx1461_cut3264
    dec $I18
    set $I18, rx1461_bstack[$I18]
  rx1461_cut3264:
    assign rx1461_cstack, $I18
  rx1461_jump3263:
    jump $I19
  rx1461_done3260:
    rx1461_cur."!cursor_fail"()
    .return (rx1461_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<?>" :subid("cuid_185_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1358
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1465_start
    .local string rx1465_tgt
    .local int rx1465_pos
    .local int rx1465_off
    .local int rx1465_eos
    .local int rx1465_rep
    .local pmc rx1465_cur
    .local pmc rx1465_curclass
    .local pmc rx1465_bstack
    .local pmc rx1465_cstack
    rx1465_start = self."!cursor_start_all"()
    set rx1465_cur, rx1465_start[0]
    set rx1465_tgt, rx1465_start[1]
    set rx1465_pos, rx1465_start[2]
    set rx1465_curclass, rx1465_start[3]
    set rx1465_bstack, rx1465_start[4]
    set $I19, rx1465_start[5]
    store_lex unicode:"$\x{a2}", rx1465_cur
    length rx1465_eos, rx1465_tgt
    eq $I19, 1, rx1465_restart3274
    gt rx1465_pos, rx1465_eos, rx1465_fail3275
    repr_get_attr_int $I11, self, rx1465_curclass, "$!from"
    ne $I11, -1, rxscan1466_done3281
    goto rxscan1466_scan3280
  rxscan1466_loop3279:
    inc rx1465_pos
    gt rx1465_pos, rx1465_eos, rx1465_fail3275
    repr_bind_attr_int rx1465_cur, rx1465_curclass, "$!from", rx1465_pos
  rxscan1466_scan3280:
    nqp_rxmark rx1465_bstack, rxscan1466_loop3279, rx1465_pos, 0
  rxscan1466_done3281:
    nqp_rxmark rx1465_bstack, rxcap1467_fail3283, rx1465_pos, 0
    add $I11, rx1465_pos, 1
    gt $I11, rx1465_eos, rx1465_fail3275
    substr $S10, rx1465_tgt, rx1465_pos, 1
    ne $S10, ucs4:"?", rx1465_fail3275
    add rx1465_pos, 1
    nqp_rxpeek $I19, rx1465_bstack, rxcap1467_fail3283
    inc $I19
    set $I11, rx1465_bstack[$I19]
    repr_bind_attr_int rx1465_cur, rx1465_curclass, "$!pos", rx1465_pos
    $P11 = rx1465_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1465_pos)
    rx1465_cstack = rx1465_cur."!cursor_capture"($P11, "sym")
    goto rxcap1467_done3282
  rxcap1467_fail3283:
    goto rx1465_fail3275
  rxcap1467_done3282:
    repr_bind_attr_int rx1465_cur, rx1465_curclass, "$!pos", rx1465_pos
    $P11 = rx1465_cur."O"("%symbolic_unary, :op<istrue>")
    repr_get_attr_int $I11, $P11, rx1465_curclass, "$!pos"
    lt $I11, 0, rx1465_fail3275
    nqp_rxmark rx1465_bstack, rxsubrule1468_pass3284, -1, 0
  rxsubrule1468_pass3284:
    rx1465_cstack = rx1465_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1465_pos, $P11, rx1465_curclass, "$!pos"
    rx1465_cur."!cursor_pass"(rx1465_pos, "prefix:sym<?>", 'backtrack'=>1)
    .return (rx1465_cur)
  rx1465_restart3274:
    repr_get_attr_obj rx1465_cstack, rx1465_cur, rx1465_curclass, "$!cstack"
  rx1465_fail3275:
    unless rx1465_bstack, rx1465_done3273
    pop $I19, rx1465_bstack
    if_null rx1465_cstack, rx1465_cstack_done3278
    unless rx1465_cstack, rx1465_cstack_done3278
    dec $I19
    set $P11, rx1465_cstack[$I19]
  rx1465_cstack_done3278:
    pop rx1465_rep, rx1465_bstack
    pop rx1465_pos, rx1465_bstack
    pop $I19, rx1465_bstack
    lt rx1465_pos, -1, rx1465_done3273
    lt rx1465_pos, 0, rx1465_fail3275
    eq $I19, 0, rx1465_fail3275
    nqp_islist $I20, rx1465_cstack
    unless $I20, rx1465_jump3276
    elements $I18, rx1465_bstack
    le $I18, 0, rx1465_cut3277
    dec $I18
    set $I18, rx1465_bstack[$I18]
  rx1465_cut3277:
    assign rx1465_cstack, $I18
  rx1465_jump3276:
    jump $I19
  rx1465_done3273:
    rx1465_cur."!cursor_fail"()
    .return (rx1465_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<!>" :subid("cuid_186_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1359
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1469_start
    .local string rx1469_tgt
    .local int rx1469_pos
    .local int rx1469_off
    .local int rx1469_eos
    .local int rx1469_rep
    .local pmc rx1469_cur
    .local pmc rx1469_curclass
    .local pmc rx1469_bstack
    .local pmc rx1469_cstack
    rx1469_start = self."!cursor_start_all"()
    set rx1469_cur, rx1469_start[0]
    set rx1469_tgt, rx1469_start[1]
    set rx1469_pos, rx1469_start[2]
    set rx1469_curclass, rx1469_start[3]
    set rx1469_bstack, rx1469_start[4]
    set $I19, rx1469_start[5]
    store_lex unicode:"$\x{a2}", rx1469_cur
    length rx1469_eos, rx1469_tgt
    eq $I19, 1, rx1469_restart3287
    gt rx1469_pos, rx1469_eos, rx1469_fail3288
    repr_get_attr_int $I11, self, rx1469_curclass, "$!from"
    ne $I11, -1, rxscan1470_done3294
    goto rxscan1470_scan3293
  rxscan1470_loop3292:
    inc rx1469_pos
    gt rx1469_pos, rx1469_eos, rx1469_fail3288
    repr_bind_attr_int rx1469_cur, rx1469_curclass, "$!from", rx1469_pos
  rxscan1470_scan3293:
    nqp_rxmark rx1469_bstack, rxscan1470_loop3292, rx1469_pos, 0
  rxscan1470_done3294:
    nqp_rxmark rx1469_bstack, rxcap1471_fail3296, rx1469_pos, 0
    add $I11, rx1469_pos, 1
    gt $I11, rx1469_eos, rx1469_fail3288
    substr $S10, rx1469_tgt, rx1469_pos, 1
    ne $S10, ucs4:"!", rx1469_fail3288
    add rx1469_pos, 1
    nqp_rxpeek $I19, rx1469_bstack, rxcap1471_fail3296
    inc $I19
    set $I11, rx1469_bstack[$I19]
    repr_bind_attr_int rx1469_cur, rx1469_curclass, "$!pos", rx1469_pos
    $P11 = rx1469_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1469_pos)
    rx1469_cstack = rx1469_cur."!cursor_capture"($P11, "sym")
    goto rxcap1471_done3295
  rxcap1471_fail3296:
    goto rx1469_fail3288
  rxcap1471_done3295:
    repr_bind_attr_int rx1469_cur, rx1469_curclass, "$!pos", rx1469_pos
    $P11 = rx1469_cur."O"("%symbolic_unary, :op<falsey>")
    repr_get_attr_int $I11, $P11, rx1469_curclass, "$!pos"
    lt $I11, 0, rx1469_fail3288
    nqp_rxmark rx1469_bstack, rxsubrule1472_pass3297, -1, 0
  rxsubrule1472_pass3297:
    rx1469_cstack = rx1469_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1469_pos, $P11, rx1469_curclass, "$!pos"
    rx1469_cur."!cursor_pass"(rx1469_pos, "prefix:sym<!>", 'backtrack'=>1)
    .return (rx1469_cur)
  rx1469_restart3287:
    repr_get_attr_obj rx1469_cstack, rx1469_cur, rx1469_curclass, "$!cstack"
  rx1469_fail3288:
    unless rx1469_bstack, rx1469_done3286
    pop $I19, rx1469_bstack
    if_null rx1469_cstack, rx1469_cstack_done3291
    unless rx1469_cstack, rx1469_cstack_done3291
    dec $I19
    set $P11, rx1469_cstack[$I19]
  rx1469_cstack_done3291:
    pop rx1469_rep, rx1469_bstack
    pop rx1469_pos, rx1469_bstack
    pop $I19, rx1469_bstack
    lt rx1469_pos, -1, rx1469_done3286
    lt rx1469_pos, 0, rx1469_fail3288
    eq $I19, 0, rx1469_fail3288
    nqp_islist $I20, rx1469_cstack
    unless $I20, rx1469_jump3289
    elements $I18, rx1469_bstack
    le $I18, 0, rx1469_cut3290
    dec $I18
    set $I18, rx1469_bstack[$I18]
  rx1469_cut3290:
    assign rx1469_cstack, $I18
  rx1469_jump3289:
    jump $I19
  rx1469_done3286:
    rx1469_cur."!cursor_fail"()
    .return (rx1469_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<|>" :subid("cuid_187_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1360
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1473_start
    .local string rx1473_tgt
    .local int rx1473_pos
    .local int rx1473_off
    .local int rx1473_eos
    .local int rx1473_rep
    .local pmc rx1473_cur
    .local pmc rx1473_curclass
    .local pmc rx1473_bstack
    .local pmc rx1473_cstack
    rx1473_start = self."!cursor_start_all"()
    set rx1473_cur, rx1473_start[0]
    set rx1473_tgt, rx1473_start[1]
    set rx1473_pos, rx1473_start[2]
    set rx1473_curclass, rx1473_start[3]
    set rx1473_bstack, rx1473_start[4]
    set $I19, rx1473_start[5]
    store_lex unicode:"$\x{a2}", rx1473_cur
    length rx1473_eos, rx1473_tgt
    eq $I19, 1, rx1473_restart3300
    gt rx1473_pos, rx1473_eos, rx1473_fail3301
    repr_get_attr_int $I11, self, rx1473_curclass, "$!from"
    ne $I11, -1, rxscan1474_done3307
    goto rxscan1474_scan3306
  rxscan1474_loop3305:
    inc rx1473_pos
    gt rx1473_pos, rx1473_eos, rx1473_fail3301
    repr_bind_attr_int rx1473_cur, rx1473_curclass, "$!from", rx1473_pos
  rxscan1474_scan3306:
    nqp_rxmark rx1473_bstack, rxscan1474_loop3305, rx1473_pos, 0
  rxscan1474_done3307:
    nqp_rxmark rx1473_bstack, rxcap1475_fail3309, rx1473_pos, 0
    add $I11, rx1473_pos, 1
    gt $I11, rx1473_eos, rx1473_fail3301
    substr $S10, rx1473_tgt, rx1473_pos, 1
    ne $S10, ucs4:"|", rx1473_fail3301
    add rx1473_pos, 1
    nqp_rxpeek $I19, rx1473_bstack, rxcap1475_fail3309
    inc $I19
    set $I11, rx1473_bstack[$I19]
    repr_bind_attr_int rx1473_cur, rx1473_curclass, "$!pos", rx1473_pos
    $P11 = rx1473_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1473_pos)
    rx1473_cstack = rx1473_cur."!cursor_capture"($P11, "sym")
    goto rxcap1475_done3308
  rxcap1475_fail3309:
    goto rx1473_fail3301
  rxcap1475_done3308:
    repr_bind_attr_int rx1473_cur, rx1473_curclass, "$!pos", rx1473_pos
    $P11 = rx1473_cur."O"("%symbolic_unary")
    repr_get_attr_int $I11, $P11, rx1473_curclass, "$!pos"
    lt $I11, 0, rx1473_fail3301
    nqp_rxmark rx1473_bstack, rxsubrule1476_pass3310, -1, 0
  rxsubrule1476_pass3310:
    rx1473_cstack = rx1473_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1473_pos, $P11, rx1473_curclass, "$!pos"
    rx1473_cur."!cursor_pass"(rx1473_pos, "prefix:sym<|>", 'backtrack'=>1)
    .return (rx1473_cur)
  rx1473_restart3300:
    repr_get_attr_obj rx1473_cstack, rx1473_cur, rx1473_curclass, "$!cstack"
  rx1473_fail3301:
    unless rx1473_bstack, rx1473_done3299
    pop $I19, rx1473_bstack
    if_null rx1473_cstack, rx1473_cstack_done3304
    unless rx1473_cstack, rx1473_cstack_done3304
    dec $I19
    set $P11, rx1473_cstack[$I19]
  rx1473_cstack_done3304:
    pop rx1473_rep, rx1473_bstack
    pop rx1473_pos, rx1473_bstack
    pop $I19, rx1473_bstack
    lt rx1473_pos, -1, rx1473_done3299
    lt rx1473_pos, 0, rx1473_fail3301
    eq $I19, 0, rx1473_fail3301
    nqp_islist $I20, rx1473_cstack
    unless $I20, rx1473_jump3302
    elements $I18, rx1473_bstack
    le $I18, 0, rx1473_cut3303
    dec $I18
    set $I18, rx1473_bstack[$I18]
  rx1473_cut3303:
    assign rx1473_cstack, $I18
  rx1473_jump3302:
    jump $I19
  rx1473_done3299:
    rx1473_cur."!cursor_fail"()
    .return (rx1473_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<*>" :subid("cuid_188_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1362
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1477_start
    .local string rx1477_tgt
    .local int rx1477_pos
    .local int rx1477_off
    .local int rx1477_eos
    .local int rx1477_rep
    .local pmc rx1477_cur
    .local pmc rx1477_curclass
    .local pmc rx1477_bstack
    .local pmc rx1477_cstack
    rx1477_start = self."!cursor_start_all"()
    set rx1477_cur, rx1477_start[0]
    set rx1477_tgt, rx1477_start[1]
    set rx1477_pos, rx1477_start[2]
    set rx1477_curclass, rx1477_start[3]
    set rx1477_bstack, rx1477_start[4]
    set $I19, rx1477_start[5]
    store_lex unicode:"$\x{a2}", rx1477_cur
    length rx1477_eos, rx1477_tgt
    eq $I19, 1, rx1477_restart3313
    gt rx1477_pos, rx1477_eos, rx1477_fail3314
    repr_get_attr_int $I11, self, rx1477_curclass, "$!from"
    ne $I11, -1, rxscan1478_done3320
    goto rxscan1478_scan3319
  rxscan1478_loop3318:
    inc rx1477_pos
    gt rx1477_pos, rx1477_eos, rx1477_fail3314
    repr_bind_attr_int rx1477_cur, rx1477_curclass, "$!from", rx1477_pos
  rxscan1478_scan3319:
    nqp_rxmark rx1477_bstack, rxscan1478_loop3318, rx1477_pos, 0
  rxscan1478_done3320:
    nqp_rxmark rx1477_bstack, rxcap1479_fail3322, rx1477_pos, 0
    add $I11, rx1477_pos, 1
    gt $I11, rx1477_eos, rx1477_fail3314
    substr $S10, rx1477_tgt, rx1477_pos, 1
    ne $S10, ucs4:"*", rx1477_fail3314
    add rx1477_pos, 1
    nqp_rxpeek $I19, rx1477_bstack, rxcap1479_fail3322
    inc $I19
    set $I11, rx1477_bstack[$I19]
    repr_bind_attr_int rx1477_cur, rx1477_curclass, "$!pos", rx1477_pos
    $P11 = rx1477_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1477_pos)
    rx1477_cstack = rx1477_cur."!cursor_capture"($P11, "sym")
    goto rxcap1479_done3321
  rxcap1479_fail3322:
    goto rx1477_fail3314
  rxcap1479_done3321:
    repr_bind_attr_int rx1477_cur, rx1477_curclass, "$!pos", rx1477_pos
    $P11 = rx1477_cur."O"("%multiplicative, :op<mul_n>")
    repr_get_attr_int $I11, $P11, rx1477_curclass, "$!pos"
    lt $I11, 0, rx1477_fail3314
    nqp_rxmark rx1477_bstack, rxsubrule1480_pass3323, -1, 0
  rxsubrule1480_pass3323:
    rx1477_cstack = rx1477_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1477_pos, $P11, rx1477_curclass, "$!pos"
    rx1477_cur."!cursor_pass"(rx1477_pos, "infix:sym<*>", 'backtrack'=>1)
    .return (rx1477_cur)
  rx1477_restart3313:
    repr_get_attr_obj rx1477_cstack, rx1477_cur, rx1477_curclass, "$!cstack"
  rx1477_fail3314:
    unless rx1477_bstack, rx1477_done3312
    pop $I19, rx1477_bstack
    if_null rx1477_cstack, rx1477_cstack_done3317
    unless rx1477_cstack, rx1477_cstack_done3317
    dec $I19
    set $P11, rx1477_cstack[$I19]
  rx1477_cstack_done3317:
    pop rx1477_rep, rx1477_bstack
    pop rx1477_pos, rx1477_bstack
    pop $I19, rx1477_bstack
    lt rx1477_pos, -1, rx1477_done3312
    lt rx1477_pos, 0, rx1477_fail3314
    eq $I19, 0, rx1477_fail3314
    nqp_islist $I20, rx1477_cstack
    unless $I20, rx1477_jump3315
    elements $I18, rx1477_bstack
    le $I18, 0, rx1477_cut3316
    dec $I18
    set $I18, rx1477_bstack[$I18]
  rx1477_cut3316:
    assign rx1477_cstack, $I18
  rx1477_jump3315:
    jump $I19
  rx1477_done3312:
    rx1477_cur."!cursor_fail"()
    .return (rx1477_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym</>" :subid("cuid_189_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1363
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1481_start
    .local string rx1481_tgt
    .local int rx1481_pos
    .local int rx1481_off
    .local int rx1481_eos
    .local int rx1481_rep
    .local pmc rx1481_cur
    .local pmc rx1481_curclass
    .local pmc rx1481_bstack
    .local pmc rx1481_cstack
    rx1481_start = self."!cursor_start_all"()
    set rx1481_cur, rx1481_start[0]
    set rx1481_tgt, rx1481_start[1]
    set rx1481_pos, rx1481_start[2]
    set rx1481_curclass, rx1481_start[3]
    set rx1481_bstack, rx1481_start[4]
    set $I19, rx1481_start[5]
    store_lex unicode:"$\x{a2}", rx1481_cur
    length rx1481_eos, rx1481_tgt
    eq $I19, 1, rx1481_restart3326
    gt rx1481_pos, rx1481_eos, rx1481_fail3327
    repr_get_attr_int $I11, self, rx1481_curclass, "$!from"
    ne $I11, -1, rxscan1482_done3333
    goto rxscan1482_scan3332
  rxscan1482_loop3331:
    inc rx1481_pos
    gt rx1481_pos, rx1481_eos, rx1481_fail3327
    repr_bind_attr_int rx1481_cur, rx1481_curclass, "$!from", rx1481_pos
  rxscan1482_scan3332:
    nqp_rxmark rx1481_bstack, rxscan1482_loop3331, rx1481_pos, 0
  rxscan1482_done3333:
    nqp_rxmark rx1481_bstack, rxcap1483_fail3335, rx1481_pos, 0
    add $I11, rx1481_pos, 1
    gt $I11, rx1481_eos, rx1481_fail3327
    substr $S10, rx1481_tgt, rx1481_pos, 1
    ne $S10, ucs4:"/", rx1481_fail3327
    add rx1481_pos, 1
    nqp_rxpeek $I19, rx1481_bstack, rxcap1483_fail3335
    inc $I19
    set $I11, rx1481_bstack[$I19]
    repr_bind_attr_int rx1481_cur, rx1481_curclass, "$!pos", rx1481_pos
    $P11 = rx1481_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1481_pos)
    rx1481_cstack = rx1481_cur."!cursor_capture"($P11, "sym")
    goto rxcap1483_done3334
  rxcap1483_fail3335:
    goto rx1481_fail3327
  rxcap1483_done3334:
    repr_bind_attr_int rx1481_cur, rx1481_curclass, "$!pos", rx1481_pos
    $P11 = rx1481_cur."O"("%multiplicative, :op<div_n>")
    repr_get_attr_int $I11, $P11, rx1481_curclass, "$!pos"
    lt $I11, 0, rx1481_fail3327
    nqp_rxmark rx1481_bstack, rxsubrule1484_pass3336, -1, 0
  rxsubrule1484_pass3336:
    rx1481_cstack = rx1481_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1481_pos, $P11, rx1481_curclass, "$!pos"
    rx1481_cur."!cursor_pass"(rx1481_pos, "infix:sym</>", 'backtrack'=>1)
    .return (rx1481_cur)
  rx1481_restart3326:
    repr_get_attr_obj rx1481_cstack, rx1481_cur, rx1481_curclass, "$!cstack"
  rx1481_fail3327:
    unless rx1481_bstack, rx1481_done3325
    pop $I19, rx1481_bstack
    if_null rx1481_cstack, rx1481_cstack_done3330
    unless rx1481_cstack, rx1481_cstack_done3330
    dec $I19
    set $P11, rx1481_cstack[$I19]
  rx1481_cstack_done3330:
    pop rx1481_rep, rx1481_bstack
    pop rx1481_pos, rx1481_bstack
    pop $I19, rx1481_bstack
    lt rx1481_pos, -1, rx1481_done3325
    lt rx1481_pos, 0, rx1481_fail3327
    eq $I19, 0, rx1481_fail3327
    nqp_islist $I20, rx1481_cstack
    unless $I20, rx1481_jump3328
    elements $I18, rx1481_bstack
    le $I18, 0, rx1481_cut3329
    dec $I18
    set $I18, rx1481_bstack[$I18]
  rx1481_cut3329:
    assign rx1481_cstack, $I18
  rx1481_jump3328:
    jump $I19
  rx1481_done3325:
    rx1481_cur."!cursor_fail"()
    .return (rx1481_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<%>" :subid("cuid_190_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1364
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1485_start
    .local string rx1485_tgt
    .local int rx1485_pos
    .local int rx1485_off
    .local int rx1485_eos
    .local int rx1485_rep
    .local pmc rx1485_cur
    .local pmc rx1485_curclass
    .local pmc rx1485_bstack
    .local pmc rx1485_cstack
    rx1485_start = self."!cursor_start_all"()
    set rx1485_cur, rx1485_start[0]
    set rx1485_tgt, rx1485_start[1]
    set rx1485_pos, rx1485_start[2]
    set rx1485_curclass, rx1485_start[3]
    set rx1485_bstack, rx1485_start[4]
    set $I19, rx1485_start[5]
    store_lex unicode:"$\x{a2}", rx1485_cur
    length rx1485_eos, rx1485_tgt
    eq $I19, 1, rx1485_restart3339
    gt rx1485_pos, rx1485_eos, rx1485_fail3340
    repr_get_attr_int $I11, self, rx1485_curclass, "$!from"
    ne $I11, -1, rxscan1486_done3346
    goto rxscan1486_scan3345
  rxscan1486_loop3344:
    inc rx1485_pos
    gt rx1485_pos, rx1485_eos, rx1485_fail3340
    repr_bind_attr_int rx1485_cur, rx1485_curclass, "$!from", rx1485_pos
  rxscan1486_scan3345:
    nqp_rxmark rx1485_bstack, rxscan1486_loop3344, rx1485_pos, 0
  rxscan1486_done3346:
    nqp_rxmark rx1485_bstack, rxcap1487_fail3348, rx1485_pos, 0
    add $I11, rx1485_pos, 1
    gt $I11, rx1485_eos, rx1485_fail3340
    substr $S10, rx1485_tgt, rx1485_pos, 1
    ne $S10, ucs4:"%", rx1485_fail3340
    add rx1485_pos, 1
    nqp_rxpeek $I19, rx1485_bstack, rxcap1487_fail3348
    inc $I19
    set $I11, rx1485_bstack[$I19]
    repr_bind_attr_int rx1485_cur, rx1485_curclass, "$!pos", rx1485_pos
    $P11 = rx1485_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1485_pos)
    rx1485_cstack = rx1485_cur."!cursor_capture"($P11, "sym")
    goto rxcap1487_done3347
  rxcap1487_fail3348:
    goto rx1485_fail3340
  rxcap1487_done3347:
    repr_bind_attr_int rx1485_cur, rx1485_curclass, "$!pos", rx1485_pos
    $P11 = rx1485_cur."O"("%multiplicative, :op<mod_n>")
    repr_get_attr_int $I11, $P11, rx1485_curclass, "$!pos"
    lt $I11, 0, rx1485_fail3340
    nqp_rxmark rx1485_bstack, rxsubrule1488_pass3349, -1, 0
  rxsubrule1488_pass3349:
    rx1485_cstack = rx1485_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1485_pos, $P11, rx1485_curclass, "$!pos"
    rx1485_cur."!cursor_pass"(rx1485_pos, "infix:sym<%>", 'backtrack'=>1)
    .return (rx1485_cur)
  rx1485_restart3339:
    repr_get_attr_obj rx1485_cstack, rx1485_cur, rx1485_curclass, "$!cstack"
  rx1485_fail3340:
    unless rx1485_bstack, rx1485_done3338
    pop $I19, rx1485_bstack
    if_null rx1485_cstack, rx1485_cstack_done3343
    unless rx1485_cstack, rx1485_cstack_done3343
    dec $I19
    set $P11, rx1485_cstack[$I19]
  rx1485_cstack_done3343:
    pop rx1485_rep, rx1485_bstack
    pop rx1485_pos, rx1485_bstack
    pop $I19, rx1485_bstack
    lt rx1485_pos, -1, rx1485_done3338
    lt rx1485_pos, 0, rx1485_fail3340
    eq $I19, 0, rx1485_fail3340
    nqp_islist $I20, rx1485_cstack
    unless $I20, rx1485_jump3341
    elements $I18, rx1485_bstack
    le $I18, 0, rx1485_cut3342
    dec $I18
    set $I18, rx1485_bstack[$I18]
  rx1485_cut3342:
    assign rx1485_cstack, $I18
  rx1485_jump3341:
    jump $I19
  rx1485_done3338:
    rx1485_cur."!cursor_fail"()
    .return (rx1485_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<+&>" :subid("cuid_191_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1365
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1489_start
    .local string rx1489_tgt
    .local int rx1489_pos
    .local int rx1489_off
    .local int rx1489_eos
    .local int rx1489_rep
    .local pmc rx1489_cur
    .local pmc rx1489_curclass
    .local pmc rx1489_bstack
    .local pmc rx1489_cstack
    rx1489_start = self."!cursor_start_all"()
    set rx1489_cur, rx1489_start[0]
    set rx1489_tgt, rx1489_start[1]
    set rx1489_pos, rx1489_start[2]
    set rx1489_curclass, rx1489_start[3]
    set rx1489_bstack, rx1489_start[4]
    set $I19, rx1489_start[5]
    store_lex unicode:"$\x{a2}", rx1489_cur
    length rx1489_eos, rx1489_tgt
    eq $I19, 1, rx1489_restart3352
    gt rx1489_pos, rx1489_eos, rx1489_fail3353
    repr_get_attr_int $I11, self, rx1489_curclass, "$!from"
    ne $I11, -1, rxscan1490_done3359
    goto rxscan1490_scan3358
  rxscan1490_loop3357:
    inc rx1489_pos
    gt rx1489_pos, rx1489_eos, rx1489_fail3353
    repr_bind_attr_int rx1489_cur, rx1489_curclass, "$!from", rx1489_pos
  rxscan1490_scan3358:
    nqp_rxmark rx1489_bstack, rxscan1490_loop3357, rx1489_pos, 0
  rxscan1490_done3359:
    nqp_rxmark rx1489_bstack, rxcap1491_fail3361, rx1489_pos, 0
    add $I11, rx1489_pos, 2
    gt $I11, rx1489_eos, rx1489_fail3353
    substr $S10, rx1489_tgt, rx1489_pos, 2
    ne $S10, ucs4:"+&", rx1489_fail3353
    add rx1489_pos, 2
    nqp_rxpeek $I19, rx1489_bstack, rxcap1491_fail3361
    inc $I19
    set $I11, rx1489_bstack[$I19]
    repr_bind_attr_int rx1489_cur, rx1489_curclass, "$!pos", rx1489_pos
    $P11 = rx1489_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1489_pos)
    rx1489_cstack = rx1489_cur."!cursor_capture"($P11, "sym")
    goto rxcap1491_done3360
  rxcap1491_fail3361:
    goto rx1489_fail3353
  rxcap1491_done3360:
    repr_bind_attr_int rx1489_cur, rx1489_curclass, "$!pos", rx1489_pos
    $P11 = rx1489_cur."O"("%multiplicative, :op<bitand_i>")
    repr_get_attr_int $I11, $P11, rx1489_curclass, "$!pos"
    lt $I11, 0, rx1489_fail3353
    nqp_rxmark rx1489_bstack, rxsubrule1492_pass3362, -1, 0
  rxsubrule1492_pass3362:
    rx1489_cstack = rx1489_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1489_pos, $P11, rx1489_curclass, "$!pos"
    rx1489_cur."!cursor_pass"(rx1489_pos, "infix:sym<+&>", 'backtrack'=>1)
    .return (rx1489_cur)
  rx1489_restart3352:
    repr_get_attr_obj rx1489_cstack, rx1489_cur, rx1489_curclass, "$!cstack"
  rx1489_fail3353:
    unless rx1489_bstack, rx1489_done3351
    pop $I19, rx1489_bstack
    if_null rx1489_cstack, rx1489_cstack_done3356
    unless rx1489_cstack, rx1489_cstack_done3356
    dec $I19
    set $P11, rx1489_cstack[$I19]
  rx1489_cstack_done3356:
    pop rx1489_rep, rx1489_bstack
    pop rx1489_pos, rx1489_bstack
    pop $I19, rx1489_bstack
    lt rx1489_pos, -1, rx1489_done3351
    lt rx1489_pos, 0, rx1489_fail3353
    eq $I19, 0, rx1489_fail3353
    nqp_islist $I20, rx1489_cstack
    unless $I20, rx1489_jump3354
    elements $I18, rx1489_bstack
    le $I18, 0, rx1489_cut3355
    dec $I18
    set $I18, rx1489_bstack[$I18]
  rx1489_cut3355:
    assign rx1489_cstack, $I18
  rx1489_jump3354:
    jump $I19
  rx1489_done3351:
    rx1489_cur."!cursor_fail"()
    .return (rx1489_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<+>" :subid("cuid_192_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1367
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1493_start
    .local string rx1493_tgt
    .local int rx1493_pos
    .local int rx1493_off
    .local int rx1493_eos
    .local int rx1493_rep
    .local pmc rx1493_cur
    .local pmc rx1493_curclass
    .local pmc rx1493_bstack
    .local pmc rx1493_cstack
    rx1493_start = self."!cursor_start_all"()
    set rx1493_cur, rx1493_start[0]
    set rx1493_tgt, rx1493_start[1]
    set rx1493_pos, rx1493_start[2]
    set rx1493_curclass, rx1493_start[3]
    set rx1493_bstack, rx1493_start[4]
    set $I19, rx1493_start[5]
    store_lex unicode:"$\x{a2}", rx1493_cur
    length rx1493_eos, rx1493_tgt
    eq $I19, 1, rx1493_restart3365
    gt rx1493_pos, rx1493_eos, rx1493_fail3366
    repr_get_attr_int $I11, self, rx1493_curclass, "$!from"
    ne $I11, -1, rxscan1494_done3372
    goto rxscan1494_scan3371
  rxscan1494_loop3370:
    inc rx1493_pos
    gt rx1493_pos, rx1493_eos, rx1493_fail3366
    repr_bind_attr_int rx1493_cur, rx1493_curclass, "$!from", rx1493_pos
  rxscan1494_scan3371:
    nqp_rxmark rx1493_bstack, rxscan1494_loop3370, rx1493_pos, 0
  rxscan1494_done3372:
    nqp_rxmark rx1493_bstack, rxcap1495_fail3374, rx1493_pos, 0
    add $I11, rx1493_pos, 1
    gt $I11, rx1493_eos, rx1493_fail3366
    substr $S10, rx1493_tgt, rx1493_pos, 1
    ne $S10, ucs4:"+", rx1493_fail3366
    add rx1493_pos, 1
    nqp_rxpeek $I19, rx1493_bstack, rxcap1495_fail3374
    inc $I19
    set $I11, rx1493_bstack[$I19]
    repr_bind_attr_int rx1493_cur, rx1493_curclass, "$!pos", rx1493_pos
    $P11 = rx1493_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1493_pos)
    rx1493_cstack = rx1493_cur."!cursor_capture"($P11, "sym")
    goto rxcap1495_done3373
  rxcap1495_fail3374:
    goto rx1493_fail3366
  rxcap1495_done3373:
    repr_bind_attr_int rx1493_cur, rx1493_curclass, "$!pos", rx1493_pos
    $P11 = rx1493_cur."O"("%additive, :op<add_n>")
    repr_get_attr_int $I11, $P11, rx1493_curclass, "$!pos"
    lt $I11, 0, rx1493_fail3366
    nqp_rxmark rx1493_bstack, rxsubrule1496_pass3375, -1, 0
  rxsubrule1496_pass3375:
    rx1493_cstack = rx1493_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1493_pos, $P11, rx1493_curclass, "$!pos"
    rx1493_cur."!cursor_pass"(rx1493_pos, "infix:sym<+>", 'backtrack'=>1)
    .return (rx1493_cur)
  rx1493_restart3365:
    repr_get_attr_obj rx1493_cstack, rx1493_cur, rx1493_curclass, "$!cstack"
  rx1493_fail3366:
    unless rx1493_bstack, rx1493_done3364
    pop $I19, rx1493_bstack
    if_null rx1493_cstack, rx1493_cstack_done3369
    unless rx1493_cstack, rx1493_cstack_done3369
    dec $I19
    set $P11, rx1493_cstack[$I19]
  rx1493_cstack_done3369:
    pop rx1493_rep, rx1493_bstack
    pop rx1493_pos, rx1493_bstack
    pop $I19, rx1493_bstack
    lt rx1493_pos, -1, rx1493_done3364
    lt rx1493_pos, 0, rx1493_fail3366
    eq $I19, 0, rx1493_fail3366
    nqp_islist $I20, rx1493_cstack
    unless $I20, rx1493_jump3367
    elements $I18, rx1493_bstack
    le $I18, 0, rx1493_cut3368
    dec $I18
    set $I18, rx1493_bstack[$I18]
  rx1493_cut3368:
    assign rx1493_cstack, $I18
  rx1493_jump3367:
    jump $I19
  rx1493_done3364:
    rx1493_cur."!cursor_fail"()
    .return (rx1493_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<->" :subid("cuid_193_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1368
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1497_start
    .local string rx1497_tgt
    .local int rx1497_pos
    .local int rx1497_off
    .local int rx1497_eos
    .local int rx1497_rep
    .local pmc rx1497_cur
    .local pmc rx1497_curclass
    .local pmc rx1497_bstack
    .local pmc rx1497_cstack
    rx1497_start = self."!cursor_start_all"()
    set rx1497_cur, rx1497_start[0]
    set rx1497_tgt, rx1497_start[1]
    set rx1497_pos, rx1497_start[2]
    set rx1497_curclass, rx1497_start[3]
    set rx1497_bstack, rx1497_start[4]
    set $I19, rx1497_start[5]
    store_lex unicode:"$\x{a2}", rx1497_cur
    length rx1497_eos, rx1497_tgt
    eq $I19, 1, rx1497_restart3378
    gt rx1497_pos, rx1497_eos, rx1497_fail3379
    repr_get_attr_int $I11, self, rx1497_curclass, "$!from"
    ne $I11, -1, rxscan1498_done3385
    goto rxscan1498_scan3384
  rxscan1498_loop3383:
    inc rx1497_pos
    gt rx1497_pos, rx1497_eos, rx1497_fail3379
    repr_bind_attr_int rx1497_cur, rx1497_curclass, "$!from", rx1497_pos
  rxscan1498_scan3384:
    nqp_rxmark rx1497_bstack, rxscan1498_loop3383, rx1497_pos, 0
  rxscan1498_done3385:
    nqp_rxmark rx1497_bstack, rxcap1499_fail3387, rx1497_pos, 0
    add $I11, rx1497_pos, 1
    gt $I11, rx1497_eos, rx1497_fail3379
    substr $S10, rx1497_tgt, rx1497_pos, 1
    ne $S10, ucs4:"-", rx1497_fail3379
    add rx1497_pos, 1
    nqp_rxpeek $I19, rx1497_bstack, rxcap1499_fail3387
    inc $I19
    set $I11, rx1497_bstack[$I19]
    repr_bind_attr_int rx1497_cur, rx1497_curclass, "$!pos", rx1497_pos
    $P11 = rx1497_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1497_pos)
    rx1497_cstack = rx1497_cur."!cursor_capture"($P11, "sym")
    goto rxcap1499_done3386
  rxcap1499_fail3387:
    goto rx1497_fail3379
  rxcap1499_done3386:
    repr_bind_attr_int rx1497_cur, rx1497_curclass, "$!pos", rx1497_pos
    $P11 = rx1497_cur."O"("%additive, :op<sub_n>")
    repr_get_attr_int $I11, $P11, rx1497_curclass, "$!pos"
    lt $I11, 0, rx1497_fail3379
    nqp_rxmark rx1497_bstack, rxsubrule1500_pass3388, -1, 0
  rxsubrule1500_pass3388:
    rx1497_cstack = rx1497_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1497_pos, $P11, rx1497_curclass, "$!pos"
    rx1497_cur."!cursor_pass"(rx1497_pos, "infix:sym<->", 'backtrack'=>1)
    .return (rx1497_cur)
  rx1497_restart3378:
    repr_get_attr_obj rx1497_cstack, rx1497_cur, rx1497_curclass, "$!cstack"
  rx1497_fail3379:
    unless rx1497_bstack, rx1497_done3377
    pop $I19, rx1497_bstack
    if_null rx1497_cstack, rx1497_cstack_done3382
    unless rx1497_cstack, rx1497_cstack_done3382
    dec $I19
    set $P11, rx1497_cstack[$I19]
  rx1497_cstack_done3382:
    pop rx1497_rep, rx1497_bstack
    pop rx1497_pos, rx1497_bstack
    pop $I19, rx1497_bstack
    lt rx1497_pos, -1, rx1497_done3377
    lt rx1497_pos, 0, rx1497_fail3379
    eq $I19, 0, rx1497_fail3379
    nqp_islist $I20, rx1497_cstack
    unless $I20, rx1497_jump3380
    elements $I18, rx1497_bstack
    le $I18, 0, rx1497_cut3381
    dec $I18
    set $I18, rx1497_bstack[$I18]
  rx1497_cut3381:
    assign rx1497_cstack, $I18
  rx1497_jump3380:
    jump $I19
  rx1497_done3377:
    rx1497_cur."!cursor_fail"()
    .return (rx1497_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<+|>" :subid("cuid_194_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1369
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1501_start
    .local string rx1501_tgt
    .local int rx1501_pos
    .local int rx1501_off
    .local int rx1501_eos
    .local int rx1501_rep
    .local pmc rx1501_cur
    .local pmc rx1501_curclass
    .local pmc rx1501_bstack
    .local pmc rx1501_cstack
    rx1501_start = self."!cursor_start_all"()
    set rx1501_cur, rx1501_start[0]
    set rx1501_tgt, rx1501_start[1]
    set rx1501_pos, rx1501_start[2]
    set rx1501_curclass, rx1501_start[3]
    set rx1501_bstack, rx1501_start[4]
    set $I19, rx1501_start[5]
    store_lex unicode:"$\x{a2}", rx1501_cur
    length rx1501_eos, rx1501_tgt
    eq $I19, 1, rx1501_restart3391
    gt rx1501_pos, rx1501_eos, rx1501_fail3392
    repr_get_attr_int $I11, self, rx1501_curclass, "$!from"
    ne $I11, -1, rxscan1502_done3398
    goto rxscan1502_scan3397
  rxscan1502_loop3396:
    inc rx1501_pos
    gt rx1501_pos, rx1501_eos, rx1501_fail3392
    repr_bind_attr_int rx1501_cur, rx1501_curclass, "$!from", rx1501_pos
  rxscan1502_scan3397:
    nqp_rxmark rx1501_bstack, rxscan1502_loop3396, rx1501_pos, 0
  rxscan1502_done3398:
    nqp_rxmark rx1501_bstack, rxcap1503_fail3400, rx1501_pos, 0
    add $I11, rx1501_pos, 2
    gt $I11, rx1501_eos, rx1501_fail3392
    substr $S10, rx1501_tgt, rx1501_pos, 2
    ne $S10, ucs4:"+|", rx1501_fail3392
    add rx1501_pos, 2
    nqp_rxpeek $I19, rx1501_bstack, rxcap1503_fail3400
    inc $I19
    set $I11, rx1501_bstack[$I19]
    repr_bind_attr_int rx1501_cur, rx1501_curclass, "$!pos", rx1501_pos
    $P11 = rx1501_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1501_pos)
    rx1501_cstack = rx1501_cur."!cursor_capture"($P11, "sym")
    goto rxcap1503_done3399
  rxcap1503_fail3400:
    goto rx1501_fail3392
  rxcap1503_done3399:
    repr_bind_attr_int rx1501_cur, rx1501_curclass, "$!pos", rx1501_pos
    $P11 = rx1501_cur."O"("%additive, :op<bitor_i>")
    repr_get_attr_int $I11, $P11, rx1501_curclass, "$!pos"
    lt $I11, 0, rx1501_fail3392
    nqp_rxmark rx1501_bstack, rxsubrule1504_pass3401, -1, 0
  rxsubrule1504_pass3401:
    rx1501_cstack = rx1501_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1501_pos, $P11, rx1501_curclass, "$!pos"
    rx1501_cur."!cursor_pass"(rx1501_pos, "infix:sym<+|>", 'backtrack'=>1)
    .return (rx1501_cur)
  rx1501_restart3391:
    repr_get_attr_obj rx1501_cstack, rx1501_cur, rx1501_curclass, "$!cstack"
  rx1501_fail3392:
    unless rx1501_bstack, rx1501_done3390
    pop $I19, rx1501_bstack
    if_null rx1501_cstack, rx1501_cstack_done3395
    unless rx1501_cstack, rx1501_cstack_done3395
    dec $I19
    set $P11, rx1501_cstack[$I19]
  rx1501_cstack_done3395:
    pop rx1501_rep, rx1501_bstack
    pop rx1501_pos, rx1501_bstack
    pop $I19, rx1501_bstack
    lt rx1501_pos, -1, rx1501_done3390
    lt rx1501_pos, 0, rx1501_fail3392
    eq $I19, 0, rx1501_fail3392
    nqp_islist $I20, rx1501_cstack
    unless $I20, rx1501_jump3393
    elements $I18, rx1501_bstack
    le $I18, 0, rx1501_cut3394
    dec $I18
    set $I18, rx1501_bstack[$I18]
  rx1501_cut3394:
    assign rx1501_cstack, $I18
  rx1501_jump3393:
    jump $I19
  rx1501_done3390:
    rx1501_cur."!cursor_fail"()
    .return (rx1501_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<+^>" :subid("cuid_195_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1370
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1505_start
    .local string rx1505_tgt
    .local int rx1505_pos
    .local int rx1505_off
    .local int rx1505_eos
    .local int rx1505_rep
    .local pmc rx1505_cur
    .local pmc rx1505_curclass
    .local pmc rx1505_bstack
    .local pmc rx1505_cstack
    rx1505_start = self."!cursor_start_all"()
    set rx1505_cur, rx1505_start[0]
    set rx1505_tgt, rx1505_start[1]
    set rx1505_pos, rx1505_start[2]
    set rx1505_curclass, rx1505_start[3]
    set rx1505_bstack, rx1505_start[4]
    set $I19, rx1505_start[5]
    store_lex unicode:"$\x{a2}", rx1505_cur
    length rx1505_eos, rx1505_tgt
    eq $I19, 1, rx1505_restart3404
    gt rx1505_pos, rx1505_eos, rx1505_fail3405
    repr_get_attr_int $I11, self, rx1505_curclass, "$!from"
    ne $I11, -1, rxscan1506_done3411
    goto rxscan1506_scan3410
  rxscan1506_loop3409:
    inc rx1505_pos
    gt rx1505_pos, rx1505_eos, rx1505_fail3405
    repr_bind_attr_int rx1505_cur, rx1505_curclass, "$!from", rx1505_pos
  rxscan1506_scan3410:
    nqp_rxmark rx1505_bstack, rxscan1506_loop3409, rx1505_pos, 0
  rxscan1506_done3411:
    nqp_rxmark rx1505_bstack, rxcap1507_fail3413, rx1505_pos, 0
    add $I11, rx1505_pos, 2
    gt $I11, rx1505_eos, rx1505_fail3405
    substr $S10, rx1505_tgt, rx1505_pos, 2
    ne $S10, ucs4:"+^", rx1505_fail3405
    add rx1505_pos, 2
    nqp_rxpeek $I19, rx1505_bstack, rxcap1507_fail3413
    inc $I19
    set $I11, rx1505_bstack[$I19]
    repr_bind_attr_int rx1505_cur, rx1505_curclass, "$!pos", rx1505_pos
    $P11 = rx1505_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1505_pos)
    rx1505_cstack = rx1505_cur."!cursor_capture"($P11, "sym")
    goto rxcap1507_done3412
  rxcap1507_fail3413:
    goto rx1505_fail3405
  rxcap1507_done3412:
    repr_bind_attr_int rx1505_cur, rx1505_curclass, "$!pos", rx1505_pos
    $P11 = rx1505_cur."O"("%additive, :op<bitxor_i>")
    repr_get_attr_int $I11, $P11, rx1505_curclass, "$!pos"
    lt $I11, 0, rx1505_fail3405
    nqp_rxmark rx1505_bstack, rxsubrule1508_pass3414, -1, 0
  rxsubrule1508_pass3414:
    rx1505_cstack = rx1505_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1505_pos, $P11, rx1505_curclass, "$!pos"
    rx1505_cur."!cursor_pass"(rx1505_pos, "infix:sym<+^>", 'backtrack'=>1)
    .return (rx1505_cur)
  rx1505_restart3404:
    repr_get_attr_obj rx1505_cstack, rx1505_cur, rx1505_curclass, "$!cstack"
  rx1505_fail3405:
    unless rx1505_bstack, rx1505_done3403
    pop $I19, rx1505_bstack
    if_null rx1505_cstack, rx1505_cstack_done3408
    unless rx1505_cstack, rx1505_cstack_done3408
    dec $I19
    set $P11, rx1505_cstack[$I19]
  rx1505_cstack_done3408:
    pop rx1505_rep, rx1505_bstack
    pop rx1505_pos, rx1505_bstack
    pop $I19, rx1505_bstack
    lt rx1505_pos, -1, rx1505_done3403
    lt rx1505_pos, 0, rx1505_fail3405
    eq $I19, 0, rx1505_fail3405
    nqp_islist $I20, rx1505_cstack
    unless $I20, rx1505_jump3406
    elements $I18, rx1505_bstack
    le $I18, 0, rx1505_cut3407
    dec $I18
    set $I18, rx1505_bstack[$I18]
  rx1505_cut3407:
    assign rx1505_cstack, $I18
  rx1505_jump3406:
    jump $I19
  rx1505_done3403:
    rx1505_cur."!cursor_fail"()
    .return (rx1505_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<~>" :subid("cuid_196_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1372
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1509_start
    .local string rx1509_tgt
    .local int rx1509_pos
    .local int rx1509_off
    .local int rx1509_eos
    .local int rx1509_rep
    .local pmc rx1509_cur
    .local pmc rx1509_curclass
    .local pmc rx1509_bstack
    .local pmc rx1509_cstack
    rx1509_start = self."!cursor_start_all"()
    set rx1509_cur, rx1509_start[0]
    set rx1509_tgt, rx1509_start[1]
    set rx1509_pos, rx1509_start[2]
    set rx1509_curclass, rx1509_start[3]
    set rx1509_bstack, rx1509_start[4]
    set $I19, rx1509_start[5]
    store_lex unicode:"$\x{a2}", rx1509_cur
    length rx1509_eos, rx1509_tgt
    eq $I19, 1, rx1509_restart3417
    gt rx1509_pos, rx1509_eos, rx1509_fail3418
    repr_get_attr_int $I11, self, rx1509_curclass, "$!from"
    ne $I11, -1, rxscan1510_done3424
    goto rxscan1510_scan3423
  rxscan1510_loop3422:
    inc rx1509_pos
    gt rx1509_pos, rx1509_eos, rx1509_fail3418
    repr_bind_attr_int rx1509_cur, rx1509_curclass, "$!from", rx1509_pos
  rxscan1510_scan3423:
    nqp_rxmark rx1509_bstack, rxscan1510_loop3422, rx1509_pos, 0
  rxscan1510_done3424:
    nqp_rxmark rx1509_bstack, rxcap1511_fail3426, rx1509_pos, 0
    add $I11, rx1509_pos, 1
    gt $I11, rx1509_eos, rx1509_fail3418
    substr $S10, rx1509_tgt, rx1509_pos, 1
    ne $S10, ucs4:"~", rx1509_fail3418
    add rx1509_pos, 1
    nqp_rxpeek $I19, rx1509_bstack, rxcap1511_fail3426
    inc $I19
    set $I11, rx1509_bstack[$I19]
    repr_bind_attr_int rx1509_cur, rx1509_curclass, "$!pos", rx1509_pos
    $P11 = rx1509_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1509_pos)
    rx1509_cstack = rx1509_cur."!cursor_capture"($P11, "sym")
    goto rxcap1511_done3425
  rxcap1511_fail3426:
    goto rx1509_fail3418
  rxcap1511_done3425:
    repr_bind_attr_int rx1509_cur, rx1509_curclass, "$!pos", rx1509_pos
    $P11 = rx1509_cur."O"("%concatenation , :op<concat>")
    repr_get_attr_int $I11, $P11, rx1509_curclass, "$!pos"
    lt $I11, 0, rx1509_fail3418
    nqp_rxmark rx1509_bstack, rxsubrule1512_pass3427, -1, 0
  rxsubrule1512_pass3427:
    rx1509_cstack = rx1509_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1509_pos, $P11, rx1509_curclass, "$!pos"
    rx1509_cur."!cursor_pass"(rx1509_pos, "infix:sym<~>", 'backtrack'=>1)
    .return (rx1509_cur)
  rx1509_restart3417:
    repr_get_attr_obj rx1509_cstack, rx1509_cur, rx1509_curclass, "$!cstack"
  rx1509_fail3418:
    unless rx1509_bstack, rx1509_done3416
    pop $I19, rx1509_bstack
    if_null rx1509_cstack, rx1509_cstack_done3421
    unless rx1509_cstack, rx1509_cstack_done3421
    dec $I19
    set $P11, rx1509_cstack[$I19]
  rx1509_cstack_done3421:
    pop rx1509_rep, rx1509_bstack
    pop rx1509_pos, rx1509_bstack
    pop $I19, rx1509_bstack
    lt rx1509_pos, -1, rx1509_done3416
    lt rx1509_pos, 0, rx1509_fail3418
    eq $I19, 0, rx1509_fail3418
    nqp_islist $I20, rx1509_cstack
    unless $I20, rx1509_jump3419
    elements $I18, rx1509_bstack
    le $I18, 0, rx1509_cut3420
    dec $I18
    set $I18, rx1509_bstack[$I18]
  rx1509_cut3420:
    assign rx1509_cstack, $I18
  rx1509_jump3419:
    jump $I19
  rx1509_done3416:
    rx1509_cur."!cursor_fail"()
    .return (rx1509_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<==>" :subid("cuid_197_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1374
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1513_start
    .local string rx1513_tgt
    .local int rx1513_pos
    .local int rx1513_off
    .local int rx1513_eos
    .local int rx1513_rep
    .local pmc rx1513_cur
    .local pmc rx1513_curclass
    .local pmc rx1513_bstack
    .local pmc rx1513_cstack
    rx1513_start = self."!cursor_start_all"()
    set rx1513_cur, rx1513_start[0]
    set rx1513_tgt, rx1513_start[1]
    set rx1513_pos, rx1513_start[2]
    set rx1513_curclass, rx1513_start[3]
    set rx1513_bstack, rx1513_start[4]
    set $I19, rx1513_start[5]
    store_lex unicode:"$\x{a2}", rx1513_cur
    length rx1513_eos, rx1513_tgt
    eq $I19, 1, rx1513_restart3430
    gt rx1513_pos, rx1513_eos, rx1513_fail3431
    repr_get_attr_int $I11, self, rx1513_curclass, "$!from"
    ne $I11, -1, rxscan1514_done3437
    goto rxscan1514_scan3436
  rxscan1514_loop3435:
    inc rx1513_pos
    gt rx1513_pos, rx1513_eos, rx1513_fail3431
    repr_bind_attr_int rx1513_cur, rx1513_curclass, "$!from", rx1513_pos
  rxscan1514_scan3436:
    nqp_rxmark rx1513_bstack, rxscan1514_loop3435, rx1513_pos, 0
  rxscan1514_done3437:
    nqp_rxmark rx1513_bstack, rxcap1515_fail3439, rx1513_pos, 0
    add $I11, rx1513_pos, 2
    gt $I11, rx1513_eos, rx1513_fail3431
    substr $S10, rx1513_tgt, rx1513_pos, 2
    ne $S10, ucs4:"==", rx1513_fail3431
    add rx1513_pos, 2
    nqp_rxpeek $I19, rx1513_bstack, rxcap1515_fail3439
    inc $I19
    set $I11, rx1513_bstack[$I19]
    repr_bind_attr_int rx1513_cur, rx1513_curclass, "$!pos", rx1513_pos
    $P11 = rx1513_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1513_pos)
    rx1513_cstack = rx1513_cur."!cursor_capture"($P11, "sym")
    goto rxcap1515_done3438
  rxcap1515_fail3439:
    goto rx1513_fail3431
  rxcap1515_done3438:
    repr_bind_attr_int rx1513_cur, rx1513_curclass, "$!pos", rx1513_pos
    $P11 = rx1513_cur."O"("%relational, :op<iseq_n>")
    repr_get_attr_int $I11, $P11, rx1513_curclass, "$!pos"
    lt $I11, 0, rx1513_fail3431
    nqp_rxmark rx1513_bstack, rxsubrule1516_pass3440, -1, 0
  rxsubrule1516_pass3440:
    rx1513_cstack = rx1513_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1513_pos, $P11, rx1513_curclass, "$!pos"
    rx1513_cur."!cursor_pass"(rx1513_pos, "infix:sym<==>", 'backtrack'=>1)
    .return (rx1513_cur)
  rx1513_restart3430:
    repr_get_attr_obj rx1513_cstack, rx1513_cur, rx1513_curclass, "$!cstack"
  rx1513_fail3431:
    unless rx1513_bstack, rx1513_done3429
    pop $I19, rx1513_bstack
    if_null rx1513_cstack, rx1513_cstack_done3434
    unless rx1513_cstack, rx1513_cstack_done3434
    dec $I19
    set $P11, rx1513_cstack[$I19]
  rx1513_cstack_done3434:
    pop rx1513_rep, rx1513_bstack
    pop rx1513_pos, rx1513_bstack
    pop $I19, rx1513_bstack
    lt rx1513_pos, -1, rx1513_done3429
    lt rx1513_pos, 0, rx1513_fail3431
    eq $I19, 0, rx1513_fail3431
    nqp_islist $I20, rx1513_cstack
    unless $I20, rx1513_jump3432
    elements $I18, rx1513_bstack
    le $I18, 0, rx1513_cut3433
    dec $I18
    set $I18, rx1513_bstack[$I18]
  rx1513_cut3433:
    assign rx1513_cstack, $I18
  rx1513_jump3432:
    jump $I19
  rx1513_done3429:
    rx1513_cur."!cursor_fail"()
    .return (rx1513_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<!=>" :subid("cuid_198_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1375
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1517_start
    .local string rx1517_tgt
    .local int rx1517_pos
    .local int rx1517_off
    .local int rx1517_eos
    .local int rx1517_rep
    .local pmc rx1517_cur
    .local pmc rx1517_curclass
    .local pmc rx1517_bstack
    .local pmc rx1517_cstack
    rx1517_start = self."!cursor_start_all"()
    set rx1517_cur, rx1517_start[0]
    set rx1517_tgt, rx1517_start[1]
    set rx1517_pos, rx1517_start[2]
    set rx1517_curclass, rx1517_start[3]
    set rx1517_bstack, rx1517_start[4]
    set $I19, rx1517_start[5]
    store_lex unicode:"$\x{a2}", rx1517_cur
    length rx1517_eos, rx1517_tgt
    eq $I19, 1, rx1517_restart3443
    gt rx1517_pos, rx1517_eos, rx1517_fail3444
    repr_get_attr_int $I11, self, rx1517_curclass, "$!from"
    ne $I11, -1, rxscan1518_done3450
    goto rxscan1518_scan3449
  rxscan1518_loop3448:
    inc rx1517_pos
    gt rx1517_pos, rx1517_eos, rx1517_fail3444
    repr_bind_attr_int rx1517_cur, rx1517_curclass, "$!from", rx1517_pos
  rxscan1518_scan3449:
    nqp_rxmark rx1517_bstack, rxscan1518_loop3448, rx1517_pos, 0
  rxscan1518_done3450:
    nqp_rxmark rx1517_bstack, rxcap1519_fail3452, rx1517_pos, 0
    add $I11, rx1517_pos, 2
    gt $I11, rx1517_eos, rx1517_fail3444
    substr $S10, rx1517_tgt, rx1517_pos, 2
    ne $S10, ucs4:"!=", rx1517_fail3444
    add rx1517_pos, 2
    nqp_rxpeek $I19, rx1517_bstack, rxcap1519_fail3452
    inc $I19
    set $I11, rx1517_bstack[$I19]
    repr_bind_attr_int rx1517_cur, rx1517_curclass, "$!pos", rx1517_pos
    $P11 = rx1517_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1517_pos)
    rx1517_cstack = rx1517_cur."!cursor_capture"($P11, "sym")
    goto rxcap1519_done3451
  rxcap1519_fail3452:
    goto rx1517_fail3444
  rxcap1519_done3451:
    repr_bind_attr_int rx1517_cur, rx1517_curclass, "$!pos", rx1517_pos
    $P11 = rx1517_cur."O"("%relational, :op<isne_n>")
    repr_get_attr_int $I11, $P11, rx1517_curclass, "$!pos"
    lt $I11, 0, rx1517_fail3444
    nqp_rxmark rx1517_bstack, rxsubrule1520_pass3453, -1, 0
  rxsubrule1520_pass3453:
    rx1517_cstack = rx1517_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1517_pos, $P11, rx1517_curclass, "$!pos"
    rx1517_cur."!cursor_pass"(rx1517_pos, "infix:sym<!=>", 'backtrack'=>1)
    .return (rx1517_cur)
  rx1517_restart3443:
    repr_get_attr_obj rx1517_cstack, rx1517_cur, rx1517_curclass, "$!cstack"
  rx1517_fail3444:
    unless rx1517_bstack, rx1517_done3442
    pop $I19, rx1517_bstack
    if_null rx1517_cstack, rx1517_cstack_done3447
    unless rx1517_cstack, rx1517_cstack_done3447
    dec $I19
    set $P11, rx1517_cstack[$I19]
  rx1517_cstack_done3447:
    pop rx1517_rep, rx1517_bstack
    pop rx1517_pos, rx1517_bstack
    pop $I19, rx1517_bstack
    lt rx1517_pos, -1, rx1517_done3442
    lt rx1517_pos, 0, rx1517_fail3444
    eq $I19, 0, rx1517_fail3444
    nqp_islist $I20, rx1517_cstack
    unless $I20, rx1517_jump3445
    elements $I18, rx1517_bstack
    le $I18, 0, rx1517_cut3446
    dec $I18
    set $I18, rx1517_bstack[$I18]
  rx1517_cut3446:
    assign rx1517_cstack, $I18
  rx1517_jump3445:
    jump $I19
  rx1517_done3442:
    rx1517_cur."!cursor_fail"()
    .return (rx1517_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<<=>" :subid("cuid_199_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1376
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1521_start
    .local string rx1521_tgt
    .local int rx1521_pos
    .local int rx1521_off
    .local int rx1521_eos
    .local int rx1521_rep
    .local pmc rx1521_cur
    .local pmc rx1521_curclass
    .local pmc rx1521_bstack
    .local pmc rx1521_cstack
    rx1521_start = self."!cursor_start_all"()
    set rx1521_cur, rx1521_start[0]
    set rx1521_tgt, rx1521_start[1]
    set rx1521_pos, rx1521_start[2]
    set rx1521_curclass, rx1521_start[3]
    set rx1521_bstack, rx1521_start[4]
    set $I19, rx1521_start[5]
    store_lex unicode:"$\x{a2}", rx1521_cur
    length rx1521_eos, rx1521_tgt
    eq $I19, 1, rx1521_restart3456
    gt rx1521_pos, rx1521_eos, rx1521_fail3457
    repr_get_attr_int $I11, self, rx1521_curclass, "$!from"
    ne $I11, -1, rxscan1522_done3463
    goto rxscan1522_scan3462
  rxscan1522_loop3461:
    inc rx1521_pos
    gt rx1521_pos, rx1521_eos, rx1521_fail3457
    repr_bind_attr_int rx1521_cur, rx1521_curclass, "$!from", rx1521_pos
  rxscan1522_scan3462:
    nqp_rxmark rx1521_bstack, rxscan1522_loop3461, rx1521_pos, 0
  rxscan1522_done3463:
    nqp_rxmark rx1521_bstack, rxcap1523_fail3465, rx1521_pos, 0
    add $I11, rx1521_pos, 2
    gt $I11, rx1521_eos, rx1521_fail3457
    substr $S10, rx1521_tgt, rx1521_pos, 2
    ne $S10, ucs4:"<=", rx1521_fail3457
    add rx1521_pos, 2
    nqp_rxpeek $I19, rx1521_bstack, rxcap1523_fail3465
    inc $I19
    set $I11, rx1521_bstack[$I19]
    repr_bind_attr_int rx1521_cur, rx1521_curclass, "$!pos", rx1521_pos
    $P11 = rx1521_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1521_pos)
    rx1521_cstack = rx1521_cur."!cursor_capture"($P11, "sym")
    goto rxcap1523_done3464
  rxcap1523_fail3465:
    goto rx1521_fail3457
  rxcap1523_done3464:
    repr_bind_attr_int rx1521_cur, rx1521_curclass, "$!pos", rx1521_pos
    $P11 = rx1521_cur."O"("%relational, :op<isle_n>")
    repr_get_attr_int $I11, $P11, rx1521_curclass, "$!pos"
    lt $I11, 0, rx1521_fail3457
    nqp_rxmark rx1521_bstack, rxsubrule1524_pass3466, -1, 0
  rxsubrule1524_pass3466:
    rx1521_cstack = rx1521_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1521_pos, $P11, rx1521_curclass, "$!pos"
    rx1521_cur."!cursor_pass"(rx1521_pos, "infix:sym<<=>", 'backtrack'=>1)
    .return (rx1521_cur)
  rx1521_restart3456:
    repr_get_attr_obj rx1521_cstack, rx1521_cur, rx1521_curclass, "$!cstack"
  rx1521_fail3457:
    unless rx1521_bstack, rx1521_done3455
    pop $I19, rx1521_bstack
    if_null rx1521_cstack, rx1521_cstack_done3460
    unless rx1521_cstack, rx1521_cstack_done3460
    dec $I19
    set $P11, rx1521_cstack[$I19]
  rx1521_cstack_done3460:
    pop rx1521_rep, rx1521_bstack
    pop rx1521_pos, rx1521_bstack
    pop $I19, rx1521_bstack
    lt rx1521_pos, -1, rx1521_done3455
    lt rx1521_pos, 0, rx1521_fail3457
    eq $I19, 0, rx1521_fail3457
    nqp_islist $I20, rx1521_cstack
    unless $I20, rx1521_jump3458
    elements $I18, rx1521_bstack
    le $I18, 0, rx1521_cut3459
    dec $I18
    set $I18, rx1521_bstack[$I18]
  rx1521_cut3459:
    assign rx1521_cstack, $I18
  rx1521_jump3458:
    jump $I19
  rx1521_done3455:
    rx1521_cur."!cursor_fail"()
    .return (rx1521_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<>=>" :subid("cuid_200_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1377
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1525_start
    .local string rx1525_tgt
    .local int rx1525_pos
    .local int rx1525_off
    .local int rx1525_eos
    .local int rx1525_rep
    .local pmc rx1525_cur
    .local pmc rx1525_curclass
    .local pmc rx1525_bstack
    .local pmc rx1525_cstack
    rx1525_start = self."!cursor_start_all"()
    set rx1525_cur, rx1525_start[0]
    set rx1525_tgt, rx1525_start[1]
    set rx1525_pos, rx1525_start[2]
    set rx1525_curclass, rx1525_start[3]
    set rx1525_bstack, rx1525_start[4]
    set $I19, rx1525_start[5]
    store_lex unicode:"$\x{a2}", rx1525_cur
    length rx1525_eos, rx1525_tgt
    eq $I19, 1, rx1525_restart3469
    gt rx1525_pos, rx1525_eos, rx1525_fail3470
    repr_get_attr_int $I11, self, rx1525_curclass, "$!from"
    ne $I11, -1, rxscan1526_done3476
    goto rxscan1526_scan3475
  rxscan1526_loop3474:
    inc rx1525_pos
    gt rx1525_pos, rx1525_eos, rx1525_fail3470
    repr_bind_attr_int rx1525_cur, rx1525_curclass, "$!from", rx1525_pos
  rxscan1526_scan3475:
    nqp_rxmark rx1525_bstack, rxscan1526_loop3474, rx1525_pos, 0
  rxscan1526_done3476:
    nqp_rxmark rx1525_bstack, rxcap1527_fail3478, rx1525_pos, 0
    add $I11, rx1525_pos, 2
    gt $I11, rx1525_eos, rx1525_fail3470
    substr $S10, rx1525_tgt, rx1525_pos, 2
    ne $S10, ucs4:">=", rx1525_fail3470
    add rx1525_pos, 2
    nqp_rxpeek $I19, rx1525_bstack, rxcap1527_fail3478
    inc $I19
    set $I11, rx1525_bstack[$I19]
    repr_bind_attr_int rx1525_cur, rx1525_curclass, "$!pos", rx1525_pos
    $P11 = rx1525_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1525_pos)
    rx1525_cstack = rx1525_cur."!cursor_capture"($P11, "sym")
    goto rxcap1527_done3477
  rxcap1527_fail3478:
    goto rx1525_fail3470
  rxcap1527_done3477:
    repr_bind_attr_int rx1525_cur, rx1525_curclass, "$!pos", rx1525_pos
    $P11 = rx1525_cur."O"("%relational, :op<isge_n>")
    repr_get_attr_int $I11, $P11, rx1525_curclass, "$!pos"
    lt $I11, 0, rx1525_fail3470
    nqp_rxmark rx1525_bstack, rxsubrule1528_pass3479, -1, 0
  rxsubrule1528_pass3479:
    rx1525_cstack = rx1525_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1525_pos, $P11, rx1525_curclass, "$!pos"
    rx1525_cur."!cursor_pass"(rx1525_pos, "infix:sym<>=>", 'backtrack'=>1)
    .return (rx1525_cur)
  rx1525_restart3469:
    repr_get_attr_obj rx1525_cstack, rx1525_cur, rx1525_curclass, "$!cstack"
  rx1525_fail3470:
    unless rx1525_bstack, rx1525_done3468
    pop $I19, rx1525_bstack
    if_null rx1525_cstack, rx1525_cstack_done3473
    unless rx1525_cstack, rx1525_cstack_done3473
    dec $I19
    set $P11, rx1525_cstack[$I19]
  rx1525_cstack_done3473:
    pop rx1525_rep, rx1525_bstack
    pop rx1525_pos, rx1525_bstack
    pop $I19, rx1525_bstack
    lt rx1525_pos, -1, rx1525_done3468
    lt rx1525_pos, 0, rx1525_fail3470
    eq $I19, 0, rx1525_fail3470
    nqp_islist $I20, rx1525_cstack
    unless $I20, rx1525_jump3471
    elements $I18, rx1525_bstack
    le $I18, 0, rx1525_cut3472
    dec $I18
    set $I18, rx1525_bstack[$I18]
  rx1525_cut3472:
    assign rx1525_cstack, $I18
  rx1525_jump3471:
    jump $I19
  rx1525_done3468:
    rx1525_cur."!cursor_fail"()
    .return (rx1525_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<<>" :subid("cuid_201_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1378
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1529_start
    .local string rx1529_tgt
    .local int rx1529_pos
    .local int rx1529_off
    .local int rx1529_eos
    .local int rx1529_rep
    .local pmc rx1529_cur
    .local pmc rx1529_curclass
    .local pmc rx1529_bstack
    .local pmc rx1529_cstack
    rx1529_start = self."!cursor_start_all"()
    set rx1529_cur, rx1529_start[0]
    set rx1529_tgt, rx1529_start[1]
    set rx1529_pos, rx1529_start[2]
    set rx1529_curclass, rx1529_start[3]
    set rx1529_bstack, rx1529_start[4]
    set $I19, rx1529_start[5]
    store_lex unicode:"$\x{a2}", rx1529_cur
    length rx1529_eos, rx1529_tgt
    eq $I19, 1, rx1529_restart3482
    gt rx1529_pos, rx1529_eos, rx1529_fail3483
    repr_get_attr_int $I11, self, rx1529_curclass, "$!from"
    ne $I11, -1, rxscan1530_done3489
    goto rxscan1530_scan3488
  rxscan1530_loop3487:
    inc rx1529_pos
    gt rx1529_pos, rx1529_eos, rx1529_fail3483
    repr_bind_attr_int rx1529_cur, rx1529_curclass, "$!from", rx1529_pos
  rxscan1530_scan3488:
    nqp_rxmark rx1529_bstack, rxscan1530_loop3487, rx1529_pos, 0
  rxscan1530_done3489:
    nqp_rxmark rx1529_bstack, rxcap1531_fail3491, rx1529_pos, 0
    add $I11, rx1529_pos, 1
    gt $I11, rx1529_eos, rx1529_fail3483
    substr $S10, rx1529_tgt, rx1529_pos, 1
    ne $S10, ucs4:"<", rx1529_fail3483
    add rx1529_pos, 1
    nqp_rxpeek $I19, rx1529_bstack, rxcap1531_fail3491
    inc $I19
    set $I11, rx1529_bstack[$I19]
    repr_bind_attr_int rx1529_cur, rx1529_curclass, "$!pos", rx1529_pos
    $P11 = rx1529_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1529_pos)
    rx1529_cstack = rx1529_cur."!cursor_capture"($P11, "sym")
    goto rxcap1531_done3490
  rxcap1531_fail3491:
    goto rx1529_fail3483
  rxcap1531_done3490:
    repr_bind_attr_int rx1529_cur, rx1529_curclass, "$!pos", rx1529_pos
    $P11 = rx1529_cur."O"("%relational, :op<islt_n>")
    repr_get_attr_int $I11, $P11, rx1529_curclass, "$!pos"
    lt $I11, 0, rx1529_fail3483
    nqp_rxmark rx1529_bstack, rxsubrule1532_pass3492, -1, 0
  rxsubrule1532_pass3492:
    rx1529_cstack = rx1529_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1529_pos, $P11, rx1529_curclass, "$!pos"
    rx1529_cur."!cursor_pass"(rx1529_pos, "infix:sym<<>", 'backtrack'=>1)
    .return (rx1529_cur)
  rx1529_restart3482:
    repr_get_attr_obj rx1529_cstack, rx1529_cur, rx1529_curclass, "$!cstack"
  rx1529_fail3483:
    unless rx1529_bstack, rx1529_done3481
    pop $I19, rx1529_bstack
    if_null rx1529_cstack, rx1529_cstack_done3486
    unless rx1529_cstack, rx1529_cstack_done3486
    dec $I19
    set $P11, rx1529_cstack[$I19]
  rx1529_cstack_done3486:
    pop rx1529_rep, rx1529_bstack
    pop rx1529_pos, rx1529_bstack
    pop $I19, rx1529_bstack
    lt rx1529_pos, -1, rx1529_done3481
    lt rx1529_pos, 0, rx1529_fail3483
    eq $I19, 0, rx1529_fail3483
    nqp_islist $I20, rx1529_cstack
    unless $I20, rx1529_jump3484
    elements $I18, rx1529_bstack
    le $I18, 0, rx1529_cut3485
    dec $I18
    set $I18, rx1529_bstack[$I18]
  rx1529_cut3485:
    assign rx1529_cstack, $I18
  rx1529_jump3484:
    jump $I19
  rx1529_done3481:
    rx1529_cur."!cursor_fail"()
    .return (rx1529_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<>>" :subid("cuid_202_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1379
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1533_start
    .local string rx1533_tgt
    .local int rx1533_pos
    .local int rx1533_off
    .local int rx1533_eos
    .local int rx1533_rep
    .local pmc rx1533_cur
    .local pmc rx1533_curclass
    .local pmc rx1533_bstack
    .local pmc rx1533_cstack
    rx1533_start = self."!cursor_start_all"()
    set rx1533_cur, rx1533_start[0]
    set rx1533_tgt, rx1533_start[1]
    set rx1533_pos, rx1533_start[2]
    set rx1533_curclass, rx1533_start[3]
    set rx1533_bstack, rx1533_start[4]
    set $I19, rx1533_start[5]
    store_lex unicode:"$\x{a2}", rx1533_cur
    length rx1533_eos, rx1533_tgt
    eq $I19, 1, rx1533_restart3495
    gt rx1533_pos, rx1533_eos, rx1533_fail3496
    repr_get_attr_int $I11, self, rx1533_curclass, "$!from"
    ne $I11, -1, rxscan1534_done3502
    goto rxscan1534_scan3501
  rxscan1534_loop3500:
    inc rx1533_pos
    gt rx1533_pos, rx1533_eos, rx1533_fail3496
    repr_bind_attr_int rx1533_cur, rx1533_curclass, "$!from", rx1533_pos
  rxscan1534_scan3501:
    nqp_rxmark rx1533_bstack, rxscan1534_loop3500, rx1533_pos, 0
  rxscan1534_done3502:
    nqp_rxmark rx1533_bstack, rxcap1535_fail3504, rx1533_pos, 0
    add $I11, rx1533_pos, 1
    gt $I11, rx1533_eos, rx1533_fail3496
    substr $S10, rx1533_tgt, rx1533_pos, 1
    ne $S10, ucs4:">", rx1533_fail3496
    add rx1533_pos, 1
    nqp_rxpeek $I19, rx1533_bstack, rxcap1535_fail3504
    inc $I19
    set $I11, rx1533_bstack[$I19]
    repr_bind_attr_int rx1533_cur, rx1533_curclass, "$!pos", rx1533_pos
    $P11 = rx1533_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1533_pos)
    rx1533_cstack = rx1533_cur."!cursor_capture"($P11, "sym")
    goto rxcap1535_done3503
  rxcap1535_fail3504:
    goto rx1533_fail3496
  rxcap1535_done3503:
    repr_bind_attr_int rx1533_cur, rx1533_curclass, "$!pos", rx1533_pos
    $P11 = rx1533_cur."O"("%relational, :op<isgt_n>")
    repr_get_attr_int $I11, $P11, rx1533_curclass, "$!pos"
    lt $I11, 0, rx1533_fail3496
    nqp_rxmark rx1533_bstack, rxsubrule1536_pass3505, -1, 0
  rxsubrule1536_pass3505:
    rx1533_cstack = rx1533_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1533_pos, $P11, rx1533_curclass, "$!pos"
    rx1533_cur."!cursor_pass"(rx1533_pos, "infix:sym<>>", 'backtrack'=>1)
    .return (rx1533_cur)
  rx1533_restart3495:
    repr_get_attr_obj rx1533_cstack, rx1533_cur, rx1533_curclass, "$!cstack"
  rx1533_fail3496:
    unless rx1533_bstack, rx1533_done3494
    pop $I19, rx1533_bstack
    if_null rx1533_cstack, rx1533_cstack_done3499
    unless rx1533_cstack, rx1533_cstack_done3499
    dec $I19
    set $P11, rx1533_cstack[$I19]
  rx1533_cstack_done3499:
    pop rx1533_rep, rx1533_bstack
    pop rx1533_pos, rx1533_bstack
    pop $I19, rx1533_bstack
    lt rx1533_pos, -1, rx1533_done3494
    lt rx1533_pos, 0, rx1533_fail3496
    eq $I19, 0, rx1533_fail3496
    nqp_islist $I20, rx1533_cstack
    unless $I20, rx1533_jump3497
    elements $I18, rx1533_bstack
    le $I18, 0, rx1533_cut3498
    dec $I18
    set $I18, rx1533_bstack[$I18]
  rx1533_cut3498:
    assign rx1533_cstack, $I18
  rx1533_jump3497:
    jump $I19
  rx1533_done3494:
    rx1533_cur."!cursor_fail"()
    .return (rx1533_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<eq>" :subid("cuid_203_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1380
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1537_start
    .local string rx1537_tgt
    .local int rx1537_pos
    .local int rx1537_off
    .local int rx1537_eos
    .local int rx1537_rep
    .local pmc rx1537_cur
    .local pmc rx1537_curclass
    .local pmc rx1537_bstack
    .local pmc rx1537_cstack
    rx1537_start = self."!cursor_start_all"()
    set rx1537_cur, rx1537_start[0]
    set rx1537_tgt, rx1537_start[1]
    set rx1537_pos, rx1537_start[2]
    set rx1537_curclass, rx1537_start[3]
    set rx1537_bstack, rx1537_start[4]
    set $I19, rx1537_start[5]
    store_lex unicode:"$\x{a2}", rx1537_cur
    length rx1537_eos, rx1537_tgt
    eq $I19, 1, rx1537_restart3508
    gt rx1537_pos, rx1537_eos, rx1537_fail3509
    repr_get_attr_int $I11, self, rx1537_curclass, "$!from"
    ne $I11, -1, rxscan1538_done3515
    goto rxscan1538_scan3514
  rxscan1538_loop3513:
    inc rx1537_pos
    gt rx1537_pos, rx1537_eos, rx1537_fail3509
    repr_bind_attr_int rx1537_cur, rx1537_curclass, "$!from", rx1537_pos
  rxscan1538_scan3514:
    nqp_rxmark rx1537_bstack, rxscan1538_loop3513, rx1537_pos, 0
  rxscan1538_done3515:
    nqp_rxmark rx1537_bstack, rxcap1539_fail3517, rx1537_pos, 0
    add $I11, rx1537_pos, 2
    gt $I11, rx1537_eos, rx1537_fail3509
    substr $S10, rx1537_tgt, rx1537_pos, 2
    ne $S10, ucs4:"eq", rx1537_fail3509
    add rx1537_pos, 2
    nqp_rxpeek $I19, rx1537_bstack, rxcap1539_fail3517
    inc $I19
    set $I11, rx1537_bstack[$I19]
    repr_bind_attr_int rx1537_cur, rx1537_curclass, "$!pos", rx1537_pos
    $P11 = rx1537_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1537_pos)
    rx1537_cstack = rx1537_cur."!cursor_capture"($P11, "sym")
    goto rxcap1539_done3516
  rxcap1539_fail3517:
    goto rx1537_fail3509
  rxcap1539_done3516:
    repr_bind_attr_int rx1537_cur, rx1537_curclass, "$!pos", rx1537_pos
    $P11 = rx1537_cur."O"("%relational, :op<iseq_s>")
    repr_get_attr_int $I11, $P11, rx1537_curclass, "$!pos"
    lt $I11, 0, rx1537_fail3509
    nqp_rxmark rx1537_bstack, rxsubrule1540_pass3518, -1, 0
  rxsubrule1540_pass3518:
    rx1537_cstack = rx1537_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1537_pos, $P11, rx1537_curclass, "$!pos"
    rx1537_cur."!cursor_pass"(rx1537_pos, "infix:sym<eq>", 'backtrack'=>1)
    .return (rx1537_cur)
  rx1537_restart3508:
    repr_get_attr_obj rx1537_cstack, rx1537_cur, rx1537_curclass, "$!cstack"
  rx1537_fail3509:
    unless rx1537_bstack, rx1537_done3507
    pop $I19, rx1537_bstack
    if_null rx1537_cstack, rx1537_cstack_done3512
    unless rx1537_cstack, rx1537_cstack_done3512
    dec $I19
    set $P11, rx1537_cstack[$I19]
  rx1537_cstack_done3512:
    pop rx1537_rep, rx1537_bstack
    pop rx1537_pos, rx1537_bstack
    pop $I19, rx1537_bstack
    lt rx1537_pos, -1, rx1537_done3507
    lt rx1537_pos, 0, rx1537_fail3509
    eq $I19, 0, rx1537_fail3509
    nqp_islist $I20, rx1537_cstack
    unless $I20, rx1537_jump3510
    elements $I18, rx1537_bstack
    le $I18, 0, rx1537_cut3511
    dec $I18
    set $I18, rx1537_bstack[$I18]
  rx1537_cut3511:
    assign rx1537_cstack, $I18
  rx1537_jump3510:
    jump $I19
  rx1537_done3507:
    rx1537_cur."!cursor_fail"()
    .return (rx1537_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<ne>" :subid("cuid_204_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1381
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1541_start
    .local string rx1541_tgt
    .local int rx1541_pos
    .local int rx1541_off
    .local int rx1541_eos
    .local int rx1541_rep
    .local pmc rx1541_cur
    .local pmc rx1541_curclass
    .local pmc rx1541_bstack
    .local pmc rx1541_cstack
    rx1541_start = self."!cursor_start_all"()
    set rx1541_cur, rx1541_start[0]
    set rx1541_tgt, rx1541_start[1]
    set rx1541_pos, rx1541_start[2]
    set rx1541_curclass, rx1541_start[3]
    set rx1541_bstack, rx1541_start[4]
    set $I19, rx1541_start[5]
    store_lex unicode:"$\x{a2}", rx1541_cur
    length rx1541_eos, rx1541_tgt
    eq $I19, 1, rx1541_restart3521
    gt rx1541_pos, rx1541_eos, rx1541_fail3522
    repr_get_attr_int $I11, self, rx1541_curclass, "$!from"
    ne $I11, -1, rxscan1542_done3528
    goto rxscan1542_scan3527
  rxscan1542_loop3526:
    inc rx1541_pos
    gt rx1541_pos, rx1541_eos, rx1541_fail3522
    repr_bind_attr_int rx1541_cur, rx1541_curclass, "$!from", rx1541_pos
  rxscan1542_scan3527:
    nqp_rxmark rx1541_bstack, rxscan1542_loop3526, rx1541_pos, 0
  rxscan1542_done3528:
    nqp_rxmark rx1541_bstack, rxcap1543_fail3530, rx1541_pos, 0
    add $I11, rx1541_pos, 2
    gt $I11, rx1541_eos, rx1541_fail3522
    substr $S10, rx1541_tgt, rx1541_pos, 2
    ne $S10, ucs4:"ne", rx1541_fail3522
    add rx1541_pos, 2
    nqp_rxpeek $I19, rx1541_bstack, rxcap1543_fail3530
    inc $I19
    set $I11, rx1541_bstack[$I19]
    repr_bind_attr_int rx1541_cur, rx1541_curclass, "$!pos", rx1541_pos
    $P11 = rx1541_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1541_pos)
    rx1541_cstack = rx1541_cur."!cursor_capture"($P11, "sym")
    goto rxcap1543_done3529
  rxcap1543_fail3530:
    goto rx1541_fail3522
  rxcap1543_done3529:
    repr_bind_attr_int rx1541_cur, rx1541_curclass, "$!pos", rx1541_pos
    $P11 = rx1541_cur."O"("%relational, :op<isne_s>")
    repr_get_attr_int $I11, $P11, rx1541_curclass, "$!pos"
    lt $I11, 0, rx1541_fail3522
    nqp_rxmark rx1541_bstack, rxsubrule1544_pass3531, -1, 0
  rxsubrule1544_pass3531:
    rx1541_cstack = rx1541_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1541_pos, $P11, rx1541_curclass, "$!pos"
    rx1541_cur."!cursor_pass"(rx1541_pos, "infix:sym<ne>", 'backtrack'=>1)
    .return (rx1541_cur)
  rx1541_restart3521:
    repr_get_attr_obj rx1541_cstack, rx1541_cur, rx1541_curclass, "$!cstack"
  rx1541_fail3522:
    unless rx1541_bstack, rx1541_done3520
    pop $I19, rx1541_bstack
    if_null rx1541_cstack, rx1541_cstack_done3525
    unless rx1541_cstack, rx1541_cstack_done3525
    dec $I19
    set $P11, rx1541_cstack[$I19]
  rx1541_cstack_done3525:
    pop rx1541_rep, rx1541_bstack
    pop rx1541_pos, rx1541_bstack
    pop $I19, rx1541_bstack
    lt rx1541_pos, -1, rx1541_done3520
    lt rx1541_pos, 0, rx1541_fail3522
    eq $I19, 0, rx1541_fail3522
    nqp_islist $I20, rx1541_cstack
    unless $I20, rx1541_jump3523
    elements $I18, rx1541_bstack
    le $I18, 0, rx1541_cut3524
    dec $I18
    set $I18, rx1541_bstack[$I18]
  rx1541_cut3524:
    assign rx1541_cstack, $I18
  rx1541_jump3523:
    jump $I19
  rx1541_done3520:
    rx1541_cur."!cursor_fail"()
    .return (rx1541_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<le>" :subid("cuid_205_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1382
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1545_start
    .local string rx1545_tgt
    .local int rx1545_pos
    .local int rx1545_off
    .local int rx1545_eos
    .local int rx1545_rep
    .local pmc rx1545_cur
    .local pmc rx1545_curclass
    .local pmc rx1545_bstack
    .local pmc rx1545_cstack
    rx1545_start = self."!cursor_start_all"()
    set rx1545_cur, rx1545_start[0]
    set rx1545_tgt, rx1545_start[1]
    set rx1545_pos, rx1545_start[2]
    set rx1545_curclass, rx1545_start[3]
    set rx1545_bstack, rx1545_start[4]
    set $I19, rx1545_start[5]
    store_lex unicode:"$\x{a2}", rx1545_cur
    length rx1545_eos, rx1545_tgt
    eq $I19, 1, rx1545_restart3534
    gt rx1545_pos, rx1545_eos, rx1545_fail3535
    repr_get_attr_int $I11, self, rx1545_curclass, "$!from"
    ne $I11, -1, rxscan1546_done3541
    goto rxscan1546_scan3540
  rxscan1546_loop3539:
    inc rx1545_pos
    gt rx1545_pos, rx1545_eos, rx1545_fail3535
    repr_bind_attr_int rx1545_cur, rx1545_curclass, "$!from", rx1545_pos
  rxscan1546_scan3540:
    nqp_rxmark rx1545_bstack, rxscan1546_loop3539, rx1545_pos, 0
  rxscan1546_done3541:
    nqp_rxmark rx1545_bstack, rxcap1547_fail3543, rx1545_pos, 0
    add $I11, rx1545_pos, 2
    gt $I11, rx1545_eos, rx1545_fail3535
    substr $S10, rx1545_tgt, rx1545_pos, 2
    ne $S10, ucs4:"le", rx1545_fail3535
    add rx1545_pos, 2
    nqp_rxpeek $I19, rx1545_bstack, rxcap1547_fail3543
    inc $I19
    set $I11, rx1545_bstack[$I19]
    repr_bind_attr_int rx1545_cur, rx1545_curclass, "$!pos", rx1545_pos
    $P11 = rx1545_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1545_pos)
    rx1545_cstack = rx1545_cur."!cursor_capture"($P11, "sym")
    goto rxcap1547_done3542
  rxcap1547_fail3543:
    goto rx1545_fail3535
  rxcap1547_done3542:
    repr_bind_attr_int rx1545_cur, rx1545_curclass, "$!pos", rx1545_pos
    $P11 = rx1545_cur."O"("%relational, :op<isle_s>")
    repr_get_attr_int $I11, $P11, rx1545_curclass, "$!pos"
    lt $I11, 0, rx1545_fail3535
    nqp_rxmark rx1545_bstack, rxsubrule1548_pass3544, -1, 0
  rxsubrule1548_pass3544:
    rx1545_cstack = rx1545_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1545_pos, $P11, rx1545_curclass, "$!pos"
    rx1545_cur."!cursor_pass"(rx1545_pos, "infix:sym<le>", 'backtrack'=>1)
    .return (rx1545_cur)
  rx1545_restart3534:
    repr_get_attr_obj rx1545_cstack, rx1545_cur, rx1545_curclass, "$!cstack"
  rx1545_fail3535:
    unless rx1545_bstack, rx1545_done3533
    pop $I19, rx1545_bstack
    if_null rx1545_cstack, rx1545_cstack_done3538
    unless rx1545_cstack, rx1545_cstack_done3538
    dec $I19
    set $P11, rx1545_cstack[$I19]
  rx1545_cstack_done3538:
    pop rx1545_rep, rx1545_bstack
    pop rx1545_pos, rx1545_bstack
    pop $I19, rx1545_bstack
    lt rx1545_pos, -1, rx1545_done3533
    lt rx1545_pos, 0, rx1545_fail3535
    eq $I19, 0, rx1545_fail3535
    nqp_islist $I20, rx1545_cstack
    unless $I20, rx1545_jump3536
    elements $I18, rx1545_bstack
    le $I18, 0, rx1545_cut3537
    dec $I18
    set $I18, rx1545_bstack[$I18]
  rx1545_cut3537:
    assign rx1545_cstack, $I18
  rx1545_jump3536:
    jump $I19
  rx1545_done3533:
    rx1545_cur."!cursor_fail"()
    .return (rx1545_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<ge>" :subid("cuid_206_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1383
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1549_start
    .local string rx1549_tgt
    .local int rx1549_pos
    .local int rx1549_off
    .local int rx1549_eos
    .local int rx1549_rep
    .local pmc rx1549_cur
    .local pmc rx1549_curclass
    .local pmc rx1549_bstack
    .local pmc rx1549_cstack
    rx1549_start = self."!cursor_start_all"()
    set rx1549_cur, rx1549_start[0]
    set rx1549_tgt, rx1549_start[1]
    set rx1549_pos, rx1549_start[2]
    set rx1549_curclass, rx1549_start[3]
    set rx1549_bstack, rx1549_start[4]
    set $I19, rx1549_start[5]
    store_lex unicode:"$\x{a2}", rx1549_cur
    length rx1549_eos, rx1549_tgt
    eq $I19, 1, rx1549_restart3547
    gt rx1549_pos, rx1549_eos, rx1549_fail3548
    repr_get_attr_int $I11, self, rx1549_curclass, "$!from"
    ne $I11, -1, rxscan1550_done3554
    goto rxscan1550_scan3553
  rxscan1550_loop3552:
    inc rx1549_pos
    gt rx1549_pos, rx1549_eos, rx1549_fail3548
    repr_bind_attr_int rx1549_cur, rx1549_curclass, "$!from", rx1549_pos
  rxscan1550_scan3553:
    nqp_rxmark rx1549_bstack, rxscan1550_loop3552, rx1549_pos, 0
  rxscan1550_done3554:
    nqp_rxmark rx1549_bstack, rxcap1551_fail3556, rx1549_pos, 0
    add $I11, rx1549_pos, 2
    gt $I11, rx1549_eos, rx1549_fail3548
    substr $S10, rx1549_tgt, rx1549_pos, 2
    ne $S10, ucs4:"ge", rx1549_fail3548
    add rx1549_pos, 2
    nqp_rxpeek $I19, rx1549_bstack, rxcap1551_fail3556
    inc $I19
    set $I11, rx1549_bstack[$I19]
    repr_bind_attr_int rx1549_cur, rx1549_curclass, "$!pos", rx1549_pos
    $P11 = rx1549_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1549_pos)
    rx1549_cstack = rx1549_cur."!cursor_capture"($P11, "sym")
    goto rxcap1551_done3555
  rxcap1551_fail3556:
    goto rx1549_fail3548
  rxcap1551_done3555:
    repr_bind_attr_int rx1549_cur, rx1549_curclass, "$!pos", rx1549_pos
    $P11 = rx1549_cur."O"("%relational, :op<isge_s>")
    repr_get_attr_int $I11, $P11, rx1549_curclass, "$!pos"
    lt $I11, 0, rx1549_fail3548
    nqp_rxmark rx1549_bstack, rxsubrule1552_pass3557, -1, 0
  rxsubrule1552_pass3557:
    rx1549_cstack = rx1549_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1549_pos, $P11, rx1549_curclass, "$!pos"
    rx1549_cur."!cursor_pass"(rx1549_pos, "infix:sym<ge>", 'backtrack'=>1)
    .return (rx1549_cur)
  rx1549_restart3547:
    repr_get_attr_obj rx1549_cstack, rx1549_cur, rx1549_curclass, "$!cstack"
  rx1549_fail3548:
    unless rx1549_bstack, rx1549_done3546
    pop $I19, rx1549_bstack
    if_null rx1549_cstack, rx1549_cstack_done3551
    unless rx1549_cstack, rx1549_cstack_done3551
    dec $I19
    set $P11, rx1549_cstack[$I19]
  rx1549_cstack_done3551:
    pop rx1549_rep, rx1549_bstack
    pop rx1549_pos, rx1549_bstack
    pop $I19, rx1549_bstack
    lt rx1549_pos, -1, rx1549_done3546
    lt rx1549_pos, 0, rx1549_fail3548
    eq $I19, 0, rx1549_fail3548
    nqp_islist $I20, rx1549_cstack
    unless $I20, rx1549_jump3549
    elements $I18, rx1549_bstack
    le $I18, 0, rx1549_cut3550
    dec $I18
    set $I18, rx1549_bstack[$I18]
  rx1549_cut3550:
    assign rx1549_cstack, $I18
  rx1549_jump3549:
    jump $I19
  rx1549_done3546:
    rx1549_cur."!cursor_fail"()
    .return (rx1549_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<lt>" :subid("cuid_207_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1384
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1553_start
    .local string rx1553_tgt
    .local int rx1553_pos
    .local int rx1553_off
    .local int rx1553_eos
    .local int rx1553_rep
    .local pmc rx1553_cur
    .local pmc rx1553_curclass
    .local pmc rx1553_bstack
    .local pmc rx1553_cstack
    rx1553_start = self."!cursor_start_all"()
    set rx1553_cur, rx1553_start[0]
    set rx1553_tgt, rx1553_start[1]
    set rx1553_pos, rx1553_start[2]
    set rx1553_curclass, rx1553_start[3]
    set rx1553_bstack, rx1553_start[4]
    set $I19, rx1553_start[5]
    store_lex unicode:"$\x{a2}", rx1553_cur
    length rx1553_eos, rx1553_tgt
    eq $I19, 1, rx1553_restart3560
    gt rx1553_pos, rx1553_eos, rx1553_fail3561
    repr_get_attr_int $I11, self, rx1553_curclass, "$!from"
    ne $I11, -1, rxscan1554_done3567
    goto rxscan1554_scan3566
  rxscan1554_loop3565:
    inc rx1553_pos
    gt rx1553_pos, rx1553_eos, rx1553_fail3561
    repr_bind_attr_int rx1553_cur, rx1553_curclass, "$!from", rx1553_pos
  rxscan1554_scan3566:
    nqp_rxmark rx1553_bstack, rxscan1554_loop3565, rx1553_pos, 0
  rxscan1554_done3567:
    nqp_rxmark rx1553_bstack, rxcap1555_fail3569, rx1553_pos, 0
    add $I11, rx1553_pos, 2
    gt $I11, rx1553_eos, rx1553_fail3561
    substr $S10, rx1553_tgt, rx1553_pos, 2
    ne $S10, ucs4:"lt", rx1553_fail3561
    add rx1553_pos, 2
    nqp_rxpeek $I19, rx1553_bstack, rxcap1555_fail3569
    inc $I19
    set $I11, rx1553_bstack[$I19]
    repr_bind_attr_int rx1553_cur, rx1553_curclass, "$!pos", rx1553_pos
    $P11 = rx1553_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1553_pos)
    rx1553_cstack = rx1553_cur."!cursor_capture"($P11, "sym")
    goto rxcap1555_done3568
  rxcap1555_fail3569:
    goto rx1553_fail3561
  rxcap1555_done3568:
    repr_bind_attr_int rx1553_cur, rx1553_curclass, "$!pos", rx1553_pos
    $P11 = rx1553_cur."O"("%relational, :op<islt_s>")
    repr_get_attr_int $I11, $P11, rx1553_curclass, "$!pos"
    lt $I11, 0, rx1553_fail3561
    nqp_rxmark rx1553_bstack, rxsubrule1556_pass3570, -1, 0
  rxsubrule1556_pass3570:
    rx1553_cstack = rx1553_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1553_pos, $P11, rx1553_curclass, "$!pos"
    rx1553_cur."!cursor_pass"(rx1553_pos, "infix:sym<lt>", 'backtrack'=>1)
    .return (rx1553_cur)
  rx1553_restart3560:
    repr_get_attr_obj rx1553_cstack, rx1553_cur, rx1553_curclass, "$!cstack"
  rx1553_fail3561:
    unless rx1553_bstack, rx1553_done3559
    pop $I19, rx1553_bstack
    if_null rx1553_cstack, rx1553_cstack_done3564
    unless rx1553_cstack, rx1553_cstack_done3564
    dec $I19
    set $P11, rx1553_cstack[$I19]
  rx1553_cstack_done3564:
    pop rx1553_rep, rx1553_bstack
    pop rx1553_pos, rx1553_bstack
    pop $I19, rx1553_bstack
    lt rx1553_pos, -1, rx1553_done3559
    lt rx1553_pos, 0, rx1553_fail3561
    eq $I19, 0, rx1553_fail3561
    nqp_islist $I20, rx1553_cstack
    unless $I20, rx1553_jump3562
    elements $I18, rx1553_bstack
    le $I18, 0, rx1553_cut3563
    dec $I18
    set $I18, rx1553_bstack[$I18]
  rx1553_cut3563:
    assign rx1553_cstack, $I18
  rx1553_jump3562:
    jump $I19
  rx1553_done3559:
    rx1553_cur."!cursor_fail"()
    .return (rx1553_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<gt>" :subid("cuid_208_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1385
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1557_start
    .local string rx1557_tgt
    .local int rx1557_pos
    .local int rx1557_off
    .local int rx1557_eos
    .local int rx1557_rep
    .local pmc rx1557_cur
    .local pmc rx1557_curclass
    .local pmc rx1557_bstack
    .local pmc rx1557_cstack
    rx1557_start = self."!cursor_start_all"()
    set rx1557_cur, rx1557_start[0]
    set rx1557_tgt, rx1557_start[1]
    set rx1557_pos, rx1557_start[2]
    set rx1557_curclass, rx1557_start[3]
    set rx1557_bstack, rx1557_start[4]
    set $I19, rx1557_start[5]
    store_lex unicode:"$\x{a2}", rx1557_cur
    length rx1557_eos, rx1557_tgt
    eq $I19, 1, rx1557_restart3573
    gt rx1557_pos, rx1557_eos, rx1557_fail3574
    repr_get_attr_int $I11, self, rx1557_curclass, "$!from"
    ne $I11, -1, rxscan1558_done3580
    goto rxscan1558_scan3579
  rxscan1558_loop3578:
    inc rx1557_pos
    gt rx1557_pos, rx1557_eos, rx1557_fail3574
    repr_bind_attr_int rx1557_cur, rx1557_curclass, "$!from", rx1557_pos
  rxscan1558_scan3579:
    nqp_rxmark rx1557_bstack, rxscan1558_loop3578, rx1557_pos, 0
  rxscan1558_done3580:
    nqp_rxmark rx1557_bstack, rxcap1559_fail3582, rx1557_pos, 0
    add $I11, rx1557_pos, 2
    gt $I11, rx1557_eos, rx1557_fail3574
    substr $S10, rx1557_tgt, rx1557_pos, 2
    ne $S10, ucs4:"gt", rx1557_fail3574
    add rx1557_pos, 2
    nqp_rxpeek $I19, rx1557_bstack, rxcap1559_fail3582
    inc $I19
    set $I11, rx1557_bstack[$I19]
    repr_bind_attr_int rx1557_cur, rx1557_curclass, "$!pos", rx1557_pos
    $P11 = rx1557_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1557_pos)
    rx1557_cstack = rx1557_cur."!cursor_capture"($P11, "sym")
    goto rxcap1559_done3581
  rxcap1559_fail3582:
    goto rx1557_fail3574
  rxcap1559_done3581:
    repr_bind_attr_int rx1557_cur, rx1557_curclass, "$!pos", rx1557_pos
    $P11 = rx1557_cur."O"("%relational, :op<isgt_s>")
    repr_get_attr_int $I11, $P11, rx1557_curclass, "$!pos"
    lt $I11, 0, rx1557_fail3574
    nqp_rxmark rx1557_bstack, rxsubrule1560_pass3583, -1, 0
  rxsubrule1560_pass3583:
    rx1557_cstack = rx1557_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1557_pos, $P11, rx1557_curclass, "$!pos"
    rx1557_cur."!cursor_pass"(rx1557_pos, "infix:sym<gt>", 'backtrack'=>1)
    .return (rx1557_cur)
  rx1557_restart3573:
    repr_get_attr_obj rx1557_cstack, rx1557_cur, rx1557_curclass, "$!cstack"
  rx1557_fail3574:
    unless rx1557_bstack, rx1557_done3572
    pop $I19, rx1557_bstack
    if_null rx1557_cstack, rx1557_cstack_done3577
    unless rx1557_cstack, rx1557_cstack_done3577
    dec $I19
    set $P11, rx1557_cstack[$I19]
  rx1557_cstack_done3577:
    pop rx1557_rep, rx1557_bstack
    pop rx1557_pos, rx1557_bstack
    pop $I19, rx1557_bstack
    lt rx1557_pos, -1, rx1557_done3572
    lt rx1557_pos, 0, rx1557_fail3574
    eq $I19, 0, rx1557_fail3574
    nqp_islist $I20, rx1557_cstack
    unless $I20, rx1557_jump3575
    elements $I18, rx1557_bstack
    le $I18, 0, rx1557_cut3576
    dec $I18
    set $I18, rx1557_bstack[$I18]
  rx1557_cut3576:
    assign rx1557_cstack, $I18
  rx1557_jump3575:
    jump $I19
  rx1557_done3572:
    rx1557_cur."!cursor_fail"()
    .return (rx1557_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<=:=>" :subid("cuid_209_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1386
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1561_start
    .local string rx1561_tgt
    .local int rx1561_pos
    .local int rx1561_off
    .local int rx1561_eos
    .local int rx1561_rep
    .local pmc rx1561_cur
    .local pmc rx1561_curclass
    .local pmc rx1561_bstack
    .local pmc rx1561_cstack
    rx1561_start = self."!cursor_start_all"()
    set rx1561_cur, rx1561_start[0]
    set rx1561_tgt, rx1561_start[1]
    set rx1561_pos, rx1561_start[2]
    set rx1561_curclass, rx1561_start[3]
    set rx1561_bstack, rx1561_start[4]
    set $I19, rx1561_start[5]
    store_lex unicode:"$\x{a2}", rx1561_cur
    length rx1561_eos, rx1561_tgt
    eq $I19, 1, rx1561_restart3586
    gt rx1561_pos, rx1561_eos, rx1561_fail3587
    repr_get_attr_int $I11, self, rx1561_curclass, "$!from"
    ne $I11, -1, rxscan1562_done3593
    goto rxscan1562_scan3592
  rxscan1562_loop3591:
    inc rx1561_pos
    gt rx1561_pos, rx1561_eos, rx1561_fail3587
    repr_bind_attr_int rx1561_cur, rx1561_curclass, "$!from", rx1561_pos
  rxscan1562_scan3592:
    nqp_rxmark rx1561_bstack, rxscan1562_loop3591, rx1561_pos, 0
  rxscan1562_done3593:
    nqp_rxmark rx1561_bstack, rxcap1563_fail3595, rx1561_pos, 0
    add $I11, rx1561_pos, 3
    gt $I11, rx1561_eos, rx1561_fail3587
    substr $S10, rx1561_tgt, rx1561_pos, 3
    ne $S10, ucs4:"=:=", rx1561_fail3587
    add rx1561_pos, 3
    nqp_rxpeek $I19, rx1561_bstack, rxcap1563_fail3595
    inc $I19
    set $I11, rx1561_bstack[$I19]
    repr_bind_attr_int rx1561_cur, rx1561_curclass, "$!pos", rx1561_pos
    $P11 = rx1561_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1561_pos)
    rx1561_cstack = rx1561_cur."!cursor_capture"($P11, "sym")
    goto rxcap1563_done3594
  rxcap1563_fail3595:
    goto rx1561_fail3587
  rxcap1563_done3594:
    repr_bind_attr_int rx1561_cur, rx1561_curclass, "$!pos", rx1561_pos
    $P11 = rx1561_cur."O"("%relational, :op<eqaddr>")
    repr_get_attr_int $I11, $P11, rx1561_curclass, "$!pos"
    lt $I11, 0, rx1561_fail3587
    nqp_rxmark rx1561_bstack, rxsubrule1564_pass3596, -1, 0
  rxsubrule1564_pass3596:
    rx1561_cstack = rx1561_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1561_pos, $P11, rx1561_curclass, "$!pos"
    rx1561_cur."!cursor_pass"(rx1561_pos, "infix:sym<=:=>", 'backtrack'=>1)
    .return (rx1561_cur)
  rx1561_restart3586:
    repr_get_attr_obj rx1561_cstack, rx1561_cur, rx1561_curclass, "$!cstack"
  rx1561_fail3587:
    unless rx1561_bstack, rx1561_done3585
    pop $I19, rx1561_bstack
    if_null rx1561_cstack, rx1561_cstack_done3590
    unless rx1561_cstack, rx1561_cstack_done3590
    dec $I19
    set $P11, rx1561_cstack[$I19]
  rx1561_cstack_done3590:
    pop rx1561_rep, rx1561_bstack
    pop rx1561_pos, rx1561_bstack
    pop $I19, rx1561_bstack
    lt rx1561_pos, -1, rx1561_done3585
    lt rx1561_pos, 0, rx1561_fail3587
    eq $I19, 0, rx1561_fail3587
    nqp_islist $I20, rx1561_cstack
    unless $I20, rx1561_jump3588
    elements $I18, rx1561_bstack
    le $I18, 0, rx1561_cut3589
    dec $I18
    set $I18, rx1561_bstack[$I18]
  rx1561_cut3589:
    assign rx1561_cstack, $I18
  rx1561_jump3588:
    jump $I19
  rx1561_done3585:
    rx1561_cur."!cursor_fail"()
    .return (rx1561_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<~~>" :subid("cuid_210_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1387
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1565_start
    .local string rx1565_tgt
    .local int rx1565_pos
    .local int rx1565_off
    .local int rx1565_eos
    .local int rx1565_rep
    .local pmc rx1565_cur
    .local pmc rx1565_curclass
    .local pmc rx1565_bstack
    .local pmc rx1565_cstack
    rx1565_start = self."!cursor_start_all"()
    set rx1565_cur, rx1565_start[0]
    set rx1565_tgt, rx1565_start[1]
    set rx1565_pos, rx1565_start[2]
    set rx1565_curclass, rx1565_start[3]
    set rx1565_bstack, rx1565_start[4]
    set $I19, rx1565_start[5]
    store_lex unicode:"$\x{a2}", rx1565_cur
    length rx1565_eos, rx1565_tgt
    eq $I19, 1, rx1565_restart3599
    gt rx1565_pos, rx1565_eos, rx1565_fail3600
    repr_get_attr_int $I11, self, rx1565_curclass, "$!from"
    ne $I11, -1, rxscan1566_done3606
    goto rxscan1566_scan3605
  rxscan1566_loop3604:
    inc rx1565_pos
    gt rx1565_pos, rx1565_eos, rx1565_fail3600
    repr_bind_attr_int rx1565_cur, rx1565_curclass, "$!from", rx1565_pos
  rxscan1566_scan3605:
    nqp_rxmark rx1565_bstack, rxscan1566_loop3604, rx1565_pos, 0
  rxscan1566_done3606:
    nqp_rxmark rx1565_bstack, rxcap1567_fail3608, rx1565_pos, 0
    add $I11, rx1565_pos, 2
    gt $I11, rx1565_eos, rx1565_fail3600
    substr $S10, rx1565_tgt, rx1565_pos, 2
    ne $S10, ucs4:"~~", rx1565_fail3600
    add rx1565_pos, 2
    nqp_rxpeek $I19, rx1565_bstack, rxcap1567_fail3608
    inc $I19
    set $I11, rx1565_bstack[$I19]
    repr_bind_attr_int rx1565_cur, rx1565_curclass, "$!pos", rx1565_pos
    $P11 = rx1565_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1565_pos)
    rx1565_cstack = rx1565_cur."!cursor_capture"($P11, "sym")
    goto rxcap1567_done3607
  rxcap1567_fail3608:
    goto rx1565_fail3600
  rxcap1567_done3607:
    repr_bind_attr_int rx1565_cur, rx1565_curclass, "$!pos", rx1565_pos
    $P11 = rx1565_cur."O"("%relational, :reducecheck<smartmatch>")
    repr_get_attr_int $I11, $P11, rx1565_curclass, "$!pos"
    lt $I11, 0, rx1565_fail3600
    nqp_rxmark rx1565_bstack, rxsubrule1568_pass3609, -1, 0
  rxsubrule1568_pass3609:
    rx1565_cstack = rx1565_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1565_pos, $P11, rx1565_curclass, "$!pos"
    rx1565_cur."!cursor_pass"(rx1565_pos, "infix:sym<~~>", 'backtrack'=>1)
    .return (rx1565_cur)
  rx1565_restart3599:
    repr_get_attr_obj rx1565_cstack, rx1565_cur, rx1565_curclass, "$!cstack"
  rx1565_fail3600:
    unless rx1565_bstack, rx1565_done3598
    pop $I19, rx1565_bstack
    if_null rx1565_cstack, rx1565_cstack_done3603
    unless rx1565_cstack, rx1565_cstack_done3603
    dec $I19
    set $P11, rx1565_cstack[$I19]
  rx1565_cstack_done3603:
    pop rx1565_rep, rx1565_bstack
    pop rx1565_pos, rx1565_bstack
    pop $I19, rx1565_bstack
    lt rx1565_pos, -1, rx1565_done3598
    lt rx1565_pos, 0, rx1565_fail3600
    eq $I19, 0, rx1565_fail3600
    nqp_islist $I20, rx1565_cstack
    unless $I20, rx1565_jump3601
    elements $I18, rx1565_bstack
    le $I18, 0, rx1565_cut3602
    dec $I18
    set $I18, rx1565_bstack[$I18]
  rx1565_cut3602:
    assign rx1565_cstack, $I18
  rx1565_jump3601:
    jump $I19
  rx1565_done3598:
    rx1565_cur."!cursor_fail"()
    .return (rx1565_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<&&>" :subid("cuid_211_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1389
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1569_start
    .local string rx1569_tgt
    .local int rx1569_pos
    .local int rx1569_off
    .local int rx1569_eos
    .local int rx1569_rep
    .local pmc rx1569_cur
    .local pmc rx1569_curclass
    .local pmc rx1569_bstack
    .local pmc rx1569_cstack
    rx1569_start = self."!cursor_start_all"()
    set rx1569_cur, rx1569_start[0]
    set rx1569_tgt, rx1569_start[1]
    set rx1569_pos, rx1569_start[2]
    set rx1569_curclass, rx1569_start[3]
    set rx1569_bstack, rx1569_start[4]
    set $I19, rx1569_start[5]
    store_lex unicode:"$\x{a2}", rx1569_cur
    length rx1569_eos, rx1569_tgt
    eq $I19, 1, rx1569_restart3612
    gt rx1569_pos, rx1569_eos, rx1569_fail3613
    repr_get_attr_int $I11, self, rx1569_curclass, "$!from"
    ne $I11, -1, rxscan1570_done3619
    goto rxscan1570_scan3618
  rxscan1570_loop3617:
    inc rx1569_pos
    gt rx1569_pos, rx1569_eos, rx1569_fail3613
    repr_bind_attr_int rx1569_cur, rx1569_curclass, "$!from", rx1569_pos
  rxscan1570_scan3618:
    nqp_rxmark rx1569_bstack, rxscan1570_loop3617, rx1569_pos, 0
  rxscan1570_done3619:
    nqp_rxmark rx1569_bstack, rxcap1571_fail3621, rx1569_pos, 0
    add $I11, rx1569_pos, 2
    gt $I11, rx1569_eos, rx1569_fail3613
    substr $S10, rx1569_tgt, rx1569_pos, 2
    ne $S10, ucs4:"&&", rx1569_fail3613
    add rx1569_pos, 2
    nqp_rxpeek $I19, rx1569_bstack, rxcap1571_fail3621
    inc $I19
    set $I11, rx1569_bstack[$I19]
    repr_bind_attr_int rx1569_cur, rx1569_curclass, "$!pos", rx1569_pos
    $P11 = rx1569_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1569_pos)
    rx1569_cstack = rx1569_cur."!cursor_capture"($P11, "sym")
    goto rxcap1571_done3620
  rxcap1571_fail3621:
    goto rx1569_fail3613
  rxcap1571_done3620:
    repr_bind_attr_int rx1569_cur, rx1569_curclass, "$!pos", rx1569_pos
    $P11 = rx1569_cur."O"("%tight_and, :op<if>")
    repr_get_attr_int $I11, $P11, rx1569_curclass, "$!pos"
    lt $I11, 0, rx1569_fail3613
    nqp_rxmark rx1569_bstack, rxsubrule1572_pass3622, -1, 0
  rxsubrule1572_pass3622:
    rx1569_cstack = rx1569_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1569_pos, $P11, rx1569_curclass, "$!pos"
    rx1569_cur."!cursor_pass"(rx1569_pos, "infix:sym<&&>", 'backtrack'=>1)
    .return (rx1569_cur)
  rx1569_restart3612:
    repr_get_attr_obj rx1569_cstack, rx1569_cur, rx1569_curclass, "$!cstack"
  rx1569_fail3613:
    unless rx1569_bstack, rx1569_done3611
    pop $I19, rx1569_bstack
    if_null rx1569_cstack, rx1569_cstack_done3616
    unless rx1569_cstack, rx1569_cstack_done3616
    dec $I19
    set $P11, rx1569_cstack[$I19]
  rx1569_cstack_done3616:
    pop rx1569_rep, rx1569_bstack
    pop rx1569_pos, rx1569_bstack
    pop $I19, rx1569_bstack
    lt rx1569_pos, -1, rx1569_done3611
    lt rx1569_pos, 0, rx1569_fail3613
    eq $I19, 0, rx1569_fail3613
    nqp_islist $I20, rx1569_cstack
    unless $I20, rx1569_jump3614
    elements $I18, rx1569_bstack
    le $I18, 0, rx1569_cut3615
    dec $I18
    set $I18, rx1569_bstack[$I18]
  rx1569_cut3615:
    assign rx1569_cstack, $I18
  rx1569_jump3614:
    jump $I19
  rx1569_done3611:
    rx1569_cur."!cursor_fail"()
    .return (rx1569_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<||>" :subid("cuid_212_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1391
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1573_start
    .local string rx1573_tgt
    .local int rx1573_pos
    .local int rx1573_off
    .local int rx1573_eos
    .local int rx1573_rep
    .local pmc rx1573_cur
    .local pmc rx1573_curclass
    .local pmc rx1573_bstack
    .local pmc rx1573_cstack
    rx1573_start = self."!cursor_start_all"()
    set rx1573_cur, rx1573_start[0]
    set rx1573_tgt, rx1573_start[1]
    set rx1573_pos, rx1573_start[2]
    set rx1573_curclass, rx1573_start[3]
    set rx1573_bstack, rx1573_start[4]
    set $I19, rx1573_start[5]
    store_lex unicode:"$\x{a2}", rx1573_cur
    length rx1573_eos, rx1573_tgt
    eq $I19, 1, rx1573_restart3625
    gt rx1573_pos, rx1573_eos, rx1573_fail3626
    repr_get_attr_int $I11, self, rx1573_curclass, "$!from"
    ne $I11, -1, rxscan1574_done3632
    goto rxscan1574_scan3631
  rxscan1574_loop3630:
    inc rx1573_pos
    gt rx1573_pos, rx1573_eos, rx1573_fail3626
    repr_bind_attr_int rx1573_cur, rx1573_curclass, "$!from", rx1573_pos
  rxscan1574_scan3631:
    nqp_rxmark rx1573_bstack, rxscan1574_loop3630, rx1573_pos, 0
  rxscan1574_done3632:
    nqp_rxmark rx1573_bstack, rxcap1575_fail3634, rx1573_pos, 0
    add $I11, rx1573_pos, 2
    gt $I11, rx1573_eos, rx1573_fail3626
    substr $S10, rx1573_tgt, rx1573_pos, 2
    ne $S10, ucs4:"||", rx1573_fail3626
    add rx1573_pos, 2
    nqp_rxpeek $I19, rx1573_bstack, rxcap1575_fail3634
    inc $I19
    set $I11, rx1573_bstack[$I19]
    repr_bind_attr_int rx1573_cur, rx1573_curclass, "$!pos", rx1573_pos
    $P11 = rx1573_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1573_pos)
    rx1573_cstack = rx1573_cur."!cursor_capture"($P11, "sym")
    goto rxcap1575_done3633
  rxcap1575_fail3634:
    goto rx1573_fail3626
  rxcap1575_done3633:
    repr_bind_attr_int rx1573_cur, rx1573_curclass, "$!pos", rx1573_pos
    $P11 = rx1573_cur."O"("%tight_or, :op<unless>")
    repr_get_attr_int $I11, $P11, rx1573_curclass, "$!pos"
    lt $I11, 0, rx1573_fail3626
    nqp_rxmark rx1573_bstack, rxsubrule1576_pass3635, -1, 0
  rxsubrule1576_pass3635:
    rx1573_cstack = rx1573_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1573_pos, $P11, rx1573_curclass, "$!pos"
    rx1573_cur."!cursor_pass"(rx1573_pos, "infix:sym<||>", 'backtrack'=>1)
    .return (rx1573_cur)
  rx1573_restart3625:
    repr_get_attr_obj rx1573_cstack, rx1573_cur, rx1573_curclass, "$!cstack"
  rx1573_fail3626:
    unless rx1573_bstack, rx1573_done3624
    pop $I19, rx1573_bstack
    if_null rx1573_cstack, rx1573_cstack_done3629
    unless rx1573_cstack, rx1573_cstack_done3629
    dec $I19
    set $P11, rx1573_cstack[$I19]
  rx1573_cstack_done3629:
    pop rx1573_rep, rx1573_bstack
    pop rx1573_pos, rx1573_bstack
    pop $I19, rx1573_bstack
    lt rx1573_pos, -1, rx1573_done3624
    lt rx1573_pos, 0, rx1573_fail3626
    eq $I19, 0, rx1573_fail3626
    nqp_islist $I20, rx1573_cstack
    unless $I20, rx1573_jump3627
    elements $I18, rx1573_bstack
    le $I18, 0, rx1573_cut3628
    dec $I18
    set $I18, rx1573_bstack[$I18]
  rx1573_cut3628:
    assign rx1573_cstack, $I18
  rx1573_jump3627:
    jump $I19
  rx1573_done3624:
    rx1573_cur."!cursor_fail"()
    .return (rx1573_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<//>" :subid("cuid_213_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1392
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1577_start
    .local string rx1577_tgt
    .local int rx1577_pos
    .local int rx1577_off
    .local int rx1577_eos
    .local int rx1577_rep
    .local pmc rx1577_cur
    .local pmc rx1577_curclass
    .local pmc rx1577_bstack
    .local pmc rx1577_cstack
    rx1577_start = self."!cursor_start_all"()
    set rx1577_cur, rx1577_start[0]
    set rx1577_tgt, rx1577_start[1]
    set rx1577_pos, rx1577_start[2]
    set rx1577_curclass, rx1577_start[3]
    set rx1577_bstack, rx1577_start[4]
    set $I19, rx1577_start[5]
    store_lex unicode:"$\x{a2}", rx1577_cur
    length rx1577_eos, rx1577_tgt
    eq $I19, 1, rx1577_restart3638
    gt rx1577_pos, rx1577_eos, rx1577_fail3639
    repr_get_attr_int $I11, self, rx1577_curclass, "$!from"
    ne $I11, -1, rxscan1578_done3645
    goto rxscan1578_scan3644
  rxscan1578_loop3643:
    inc rx1577_pos
    gt rx1577_pos, rx1577_eos, rx1577_fail3639
    repr_bind_attr_int rx1577_cur, rx1577_curclass, "$!from", rx1577_pos
  rxscan1578_scan3644:
    nqp_rxmark rx1577_bstack, rxscan1578_loop3643, rx1577_pos, 0
  rxscan1578_done3645:
    nqp_rxmark rx1577_bstack, rxcap1579_fail3647, rx1577_pos, 0
    add $I11, rx1577_pos, 2
    gt $I11, rx1577_eos, rx1577_fail3639
    substr $S10, rx1577_tgt, rx1577_pos, 2
    ne $S10, ucs4:"//", rx1577_fail3639
    add rx1577_pos, 2
    nqp_rxpeek $I19, rx1577_bstack, rxcap1579_fail3647
    inc $I19
    set $I11, rx1577_bstack[$I19]
    repr_bind_attr_int rx1577_cur, rx1577_curclass, "$!pos", rx1577_pos
    $P11 = rx1577_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1577_pos)
    rx1577_cstack = rx1577_cur."!cursor_capture"($P11, "sym")
    goto rxcap1579_done3646
  rxcap1579_fail3647:
    goto rx1577_fail3639
  rxcap1579_done3646:
    repr_bind_attr_int rx1577_cur, rx1577_curclass, "$!pos", rx1577_pos
    $P11 = rx1577_cur."O"("%tight_or, :op<defor>")
    repr_get_attr_int $I11, $P11, rx1577_curclass, "$!pos"
    lt $I11, 0, rx1577_fail3639
    nqp_rxmark rx1577_bstack, rxsubrule1580_pass3648, -1, 0
  rxsubrule1580_pass3648:
    rx1577_cstack = rx1577_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1577_pos, $P11, rx1577_curclass, "$!pos"
    rx1577_cur."!cursor_pass"(rx1577_pos, "infix:sym<//>", 'backtrack'=>1)
    .return (rx1577_cur)
  rx1577_restart3638:
    repr_get_attr_obj rx1577_cstack, rx1577_cur, rx1577_curclass, "$!cstack"
  rx1577_fail3639:
    unless rx1577_bstack, rx1577_done3637
    pop $I19, rx1577_bstack
    if_null rx1577_cstack, rx1577_cstack_done3642
    unless rx1577_cstack, rx1577_cstack_done3642
    dec $I19
    set $P11, rx1577_cstack[$I19]
  rx1577_cstack_done3642:
    pop rx1577_rep, rx1577_bstack
    pop rx1577_pos, rx1577_bstack
    pop $I19, rx1577_bstack
    lt rx1577_pos, -1, rx1577_done3637
    lt rx1577_pos, 0, rx1577_fail3639
    eq $I19, 0, rx1577_fail3639
    nqp_islist $I20, rx1577_cstack
    unless $I20, rx1577_jump3640
    elements $I18, rx1577_bstack
    le $I18, 0, rx1577_cut3641
    dec $I18
    set $I18, rx1577_bstack[$I18]
  rx1577_cut3641:
    assign rx1577_cstack, $I18
  rx1577_jump3640:
    jump $I19
  rx1577_done3637:
    rx1577_cur."!cursor_fail"()
    .return (rx1577_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<?? !!>" :subid("cuid_214_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1394
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1581_start
    .local string rx1581_tgt
    .local int rx1581_pos
    .local int rx1581_off
    .local int rx1581_eos
    .local int rx1581_rep
    .local pmc rx1581_cur
    .local pmc rx1581_curclass
    .local pmc rx1581_bstack
    .local pmc rx1581_cstack
    rx1581_start = self."!cursor_start_all"()
    set rx1581_cur, rx1581_start[0]
    set rx1581_tgt, rx1581_start[1]
    set rx1581_pos, rx1581_start[2]
    set rx1581_curclass, rx1581_start[3]
    set rx1581_bstack, rx1581_start[4]
    set $I19, rx1581_start[5]
    store_lex unicode:"$\x{a2}", rx1581_cur
    length rx1581_eos, rx1581_tgt
    eq $I19, 1, rx1581_restart3651
    gt rx1581_pos, rx1581_eos, rx1581_fail3652
    repr_get_attr_int $I11, self, rx1581_curclass, "$!from"
    ne $I11, -1, rxscan1582_done3658
    goto rxscan1582_scan3657
  rxscan1582_loop3656:
    inc rx1581_pos
    gt rx1581_pos, rx1581_eos, rx1581_fail3652
    repr_bind_attr_int rx1581_cur, rx1581_curclass, "$!from", rx1581_pos
  rxscan1582_scan3657:
    nqp_rxmark rx1581_bstack, rxscan1582_loop3656, rx1581_pos, 0
  rxscan1582_done3658:
    add $I11, rx1581_pos, 2
    gt $I11, rx1581_eos, rx1581_fail3652
    substr $S10, rx1581_tgt, rx1581_pos, 2
    ne $S10, ucs4:"??", rx1581_fail3652
    add rx1581_pos, 2
    repr_bind_attr_int rx1581_cur, rx1581_curclass, "$!pos", rx1581_pos
    $P11 = rx1581_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1581_curclass, "$!pos"
    lt $I11, 0, rx1581_fail3652
    repr_get_attr_int rx1581_pos, $P11, rx1581_curclass, "$!pos"
    repr_bind_attr_int rx1581_cur, rx1581_curclass, "$!pos", rx1581_pos
    $P11 = rx1581_cur."EXPR"("i=")
    repr_get_attr_int $I11, $P11, rx1581_curclass, "$!pos"
    lt $I11, 0, rx1581_fail3652
    nqp_rxmark rx1581_bstack, rxsubrule1584_pass3660, -1, 0
  rxsubrule1584_pass3660:
    rx1581_cstack = rx1581_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx1581_pos, $P11, rx1581_curclass, "$!pos"
    add $I11, rx1581_pos, 2
    gt $I11, rx1581_eos, rx1581_fail3652
    substr $S10, rx1581_tgt, rx1581_pos, 2
    ne $S10, ucs4:"!!", rx1581_fail3652
    add rx1581_pos, 2
    repr_bind_attr_int rx1581_cur, rx1581_curclass, "$!pos", rx1581_pos
    $P11 = rx1581_cur."O"("%conditional, :reducecheck<ternary>, :op<if>")
    repr_get_attr_int $I11, $P11, rx1581_curclass, "$!pos"
    lt $I11, 0, rx1581_fail3652
    nqp_rxmark rx1581_bstack, rxsubrule1585_pass3661, -1, 0
  rxsubrule1585_pass3661:
    rx1581_cstack = rx1581_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1581_pos, $P11, rx1581_curclass, "$!pos"
    rx1581_cur."!cursor_pass"(rx1581_pos, "infix:sym<?? !!>", 'backtrack'=>1)
    .return (rx1581_cur)
  rx1581_restart3651:
    repr_get_attr_obj rx1581_cstack, rx1581_cur, rx1581_curclass, "$!cstack"
  rx1581_fail3652:
    unless rx1581_bstack, rx1581_done3650
    pop $I19, rx1581_bstack
    if_null rx1581_cstack, rx1581_cstack_done3655
    unless rx1581_cstack, rx1581_cstack_done3655
    dec $I19
    set $P11, rx1581_cstack[$I19]
  rx1581_cstack_done3655:
    pop rx1581_rep, rx1581_bstack
    pop rx1581_pos, rx1581_bstack
    pop $I19, rx1581_bstack
    lt rx1581_pos, -1, rx1581_done3650
    lt rx1581_pos, 0, rx1581_fail3652
    eq $I19, 0, rx1581_fail3652
    nqp_islist $I20, rx1581_cstack
    unless $I20, rx1581_jump3653
    elements $I18, rx1581_bstack
    le $I18, 0, rx1581_cut3654
    dec $I18
    set $I18, rx1581_bstack[$I18]
  rx1581_cut3654:
    assign rx1581_cstack, $I18
  rx1581_jump3653:
    jump $I19
  rx1581_done3650:
    rx1581_cur."!cursor_fail"()
    .return (rx1581_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<=>" :subid("cuid_215_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1402
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1586_start
    .local string rx1586_tgt
    .local int rx1586_pos
    .local int rx1586_off
    .local int rx1586_eos
    .local int rx1586_rep
    .local pmc rx1586_cur
    .local pmc rx1586_curclass
    .local pmc rx1586_bstack
    .local pmc rx1586_cstack
    rx1586_start = self."!cursor_start_all"()
    set rx1586_cur, rx1586_start[0]
    set rx1586_tgt, rx1586_start[1]
    set rx1586_pos, rx1586_start[2]
    set rx1586_curclass, rx1586_start[3]
    set rx1586_bstack, rx1586_start[4]
    set $I19, rx1586_start[5]
    store_lex unicode:"$\x{a2}", rx1586_cur
    length rx1586_eos, rx1586_tgt
    eq $I19, 1, rx1586_restart3664
    gt rx1586_pos, rx1586_eos, rx1586_fail3665
    repr_get_attr_int $I11, self, rx1586_curclass, "$!from"
    ne $I11, -1, rxscan1587_done3671
    goto rxscan1587_scan3670
  rxscan1587_loop3669:
    inc rx1586_pos
    gt rx1586_pos, rx1586_eos, rx1586_fail3665
    repr_bind_attr_int rx1586_cur, rx1586_curclass, "$!from", rx1586_pos
  rxscan1587_scan3670:
    nqp_rxmark rx1586_bstack, rxscan1587_loop3669, rx1586_pos, 0
  rxscan1587_done3671:
    nqp_rxmark rx1586_bstack, rxcap1588_fail3673, rx1586_pos, 0
    add $I11, rx1586_pos, 1
    gt $I11, rx1586_eos, rx1586_fail3665
    substr $S10, rx1586_tgt, rx1586_pos, 1
    ne $S10, ucs4:"=", rx1586_fail3665
    add rx1586_pos, 1
    nqp_rxpeek $I19, rx1586_bstack, rxcap1588_fail3673
    inc $I19
    set $I11, rx1586_bstack[$I19]
    repr_bind_attr_int rx1586_cur, rx1586_curclass, "$!pos", rx1586_pos
    $P11 = rx1586_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1586_pos)
    rx1586_cstack = rx1586_cur."!cursor_capture"($P11, "sym")
    goto rxcap1588_done3672
  rxcap1588_fail3673:
    goto rx1586_fail3665
  rxcap1588_done3672:
    repr_bind_attr_int rx1586_cur, rx1586_curclass, "$!pos", rx1586_pos
    $P11 = rx1586_cur."panic"("Assignment (\"=\") not supported in NQP, use \":=\" instead")
    repr_get_attr_int $I11, $P11, rx1586_curclass, "$!pos"
    lt $I11, 0, rx1586_fail3665
    repr_get_attr_int rx1586_pos, $P11, rx1586_curclass, "$!pos"
    rx1586_cur."!cursor_pass"(rx1586_pos, "infix:sym<=>", 'backtrack'=>1)
    .return (rx1586_cur)
  rx1586_restart3664:
    repr_get_attr_obj rx1586_cstack, rx1586_cur, rx1586_curclass, "$!cstack"
  rx1586_fail3665:
    unless rx1586_bstack, rx1586_done3663
    pop $I19, rx1586_bstack
    if_null rx1586_cstack, rx1586_cstack_done3668
    unless rx1586_cstack, rx1586_cstack_done3668
    dec $I19
    set $P11, rx1586_cstack[$I19]
  rx1586_cstack_done3668:
    pop rx1586_rep, rx1586_bstack
    pop rx1586_pos, rx1586_bstack
    pop $I19, rx1586_bstack
    lt rx1586_pos, -1, rx1586_done3663
    lt rx1586_pos, 0, rx1586_fail3665
    eq $I19, 0, rx1586_fail3665
    nqp_islist $I20, rx1586_cstack
    unless $I20, rx1586_jump3666
    elements $I18, rx1586_bstack
    le $I18, 0, rx1586_cut3667
    dec $I18
    set $I18, rx1586_bstack[$I18]
  rx1586_cut3667:
    assign rx1586_cstack, $I18
  rx1586_jump3666:
    jump $I19
  rx1586_done3663:
    rx1586_cur."!cursor_fail"()
    .return (rx1586_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<:=>" :subid("cuid_216_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1405
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1590_start
    .local string rx1590_tgt
    .local int rx1590_pos
    .local int rx1590_off
    .local int rx1590_eos
    .local int rx1590_rep
    .local pmc rx1590_cur
    .local pmc rx1590_curclass
    .local pmc rx1590_bstack
    .local pmc rx1590_cstack
    rx1590_start = self."!cursor_start_all"()
    set rx1590_cur, rx1590_start[0]
    set rx1590_tgt, rx1590_start[1]
    set rx1590_pos, rx1590_start[2]
    set rx1590_curclass, rx1590_start[3]
    set rx1590_bstack, rx1590_start[4]
    set $I19, rx1590_start[5]
    store_lex unicode:"$\x{a2}", rx1590_cur
    length rx1590_eos, rx1590_tgt
    eq $I19, 1, rx1590_restart3677
    gt rx1590_pos, rx1590_eos, rx1590_fail3678
    repr_get_attr_int $I11, self, rx1590_curclass, "$!from"
    ne $I11, -1, rxscan1591_done3684
    goto rxscan1591_scan3683
  rxscan1591_loop3682:
    inc rx1590_pos
    gt rx1590_pos, rx1590_eos, rx1590_fail3678
    repr_bind_attr_int rx1590_cur, rx1590_curclass, "$!from", rx1590_pos
  rxscan1591_scan3683:
    nqp_rxmark rx1590_bstack, rxscan1591_loop3682, rx1590_pos, 0
  rxscan1591_done3684:
    nqp_rxmark rx1590_bstack, rxcap1592_fail3686, rx1590_pos, 0
    add $I11, rx1590_pos, 2
    gt $I11, rx1590_eos, rx1590_fail3678
    substr $S10, rx1590_tgt, rx1590_pos, 2
    ne $S10, ucs4:":=", rx1590_fail3678
    add rx1590_pos, 2
    nqp_rxpeek $I19, rx1590_bstack, rxcap1592_fail3686
    inc $I19
    set $I11, rx1590_bstack[$I19]
    repr_bind_attr_int rx1590_cur, rx1590_curclass, "$!pos", rx1590_pos
    $P11 = rx1590_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1590_pos)
    rx1590_cstack = rx1590_cur."!cursor_capture"($P11, "sym")
    goto rxcap1592_done3685
  rxcap1592_fail3686:
    goto rx1590_fail3678
  rxcap1592_done3685:
    repr_bind_attr_int rx1590_cur, rx1590_curclass, "$!pos", rx1590_pos
    $P11 = rx1590_cur."O"("%assignment, :op<bind>")
    repr_get_attr_int $I11, $P11, rx1590_curclass, "$!pos"
    lt $I11, 0, rx1590_fail3678
    nqp_rxmark rx1590_bstack, rxsubrule1593_pass3687, -1, 0
  rxsubrule1593_pass3687:
    rx1590_cstack = rx1590_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1590_pos, $P11, rx1590_curclass, "$!pos"
    rx1590_cur."!cursor_pass"(rx1590_pos, "infix:sym<:=>", 'backtrack'=>1)
    .return (rx1590_cur)
  rx1590_restart3677:
    repr_get_attr_obj rx1590_cstack, rx1590_cur, rx1590_curclass, "$!cstack"
  rx1590_fail3678:
    unless rx1590_bstack, rx1590_done3676
    pop $I19, rx1590_bstack
    if_null rx1590_cstack, rx1590_cstack_done3681
    unless rx1590_cstack, rx1590_cstack_done3681
    dec $I19
    set $P11, rx1590_cstack[$I19]
  rx1590_cstack_done3681:
    pop rx1590_rep, rx1590_bstack
    pop rx1590_pos, rx1590_bstack
    pop $I19, rx1590_bstack
    lt rx1590_pos, -1, rx1590_done3676
    lt rx1590_pos, 0, rx1590_fail3678
    eq $I19, 0, rx1590_fail3678
    nqp_islist $I20, rx1590_cstack
    unless $I20, rx1590_jump3679
    elements $I18, rx1590_bstack
    le $I18, 0, rx1590_cut3680
    dec $I18
    set $I18, rx1590_bstack[$I18]
  rx1590_cut3680:
    assign rx1590_cstack, $I18
  rx1590_jump3679:
    jump $I19
  rx1590_done3676:
    rx1590_cur."!cursor_fail"()
    .return (rx1590_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<::=>" :subid("cuid_217_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1406
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1594_start
    .local string rx1594_tgt
    .local int rx1594_pos
    .local int rx1594_off
    .local int rx1594_eos
    .local int rx1594_rep
    .local pmc rx1594_cur
    .local pmc rx1594_curclass
    .local pmc rx1594_bstack
    .local pmc rx1594_cstack
    rx1594_start = self."!cursor_start_all"()
    set rx1594_cur, rx1594_start[0]
    set rx1594_tgt, rx1594_start[1]
    set rx1594_pos, rx1594_start[2]
    set rx1594_curclass, rx1594_start[3]
    set rx1594_bstack, rx1594_start[4]
    set $I19, rx1594_start[5]
    store_lex unicode:"$\x{a2}", rx1594_cur
    length rx1594_eos, rx1594_tgt
    eq $I19, 1, rx1594_restart3690
    gt rx1594_pos, rx1594_eos, rx1594_fail3691
    repr_get_attr_int $I11, self, rx1594_curclass, "$!from"
    ne $I11, -1, rxscan1595_done3697
    goto rxscan1595_scan3696
  rxscan1595_loop3695:
    inc rx1594_pos
    gt rx1594_pos, rx1594_eos, rx1594_fail3691
    repr_bind_attr_int rx1594_cur, rx1594_curclass, "$!from", rx1594_pos
  rxscan1595_scan3696:
    nqp_rxmark rx1594_bstack, rxscan1595_loop3695, rx1594_pos, 0
  rxscan1595_done3697:
    nqp_rxmark rx1594_bstack, rxcap1596_fail3699, rx1594_pos, 0
    add $I11, rx1594_pos, 3
    gt $I11, rx1594_eos, rx1594_fail3691
    substr $S10, rx1594_tgt, rx1594_pos, 3
    ne $S10, ucs4:"::=", rx1594_fail3691
    add rx1594_pos, 3
    nqp_rxpeek $I19, rx1594_bstack, rxcap1596_fail3699
    inc $I19
    set $I11, rx1594_bstack[$I19]
    repr_bind_attr_int rx1594_cur, rx1594_curclass, "$!pos", rx1594_pos
    $P11 = rx1594_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1594_pos)
    rx1594_cstack = rx1594_cur."!cursor_capture"($P11, "sym")
    goto rxcap1596_done3698
  rxcap1596_fail3699:
    goto rx1594_fail3691
  rxcap1596_done3698:
    repr_bind_attr_int rx1594_cur, rx1594_curclass, "$!pos", rx1594_pos
    $P11 = rx1594_cur."O"("%assignment, :op<bind>")
    repr_get_attr_int $I11, $P11, rx1594_curclass, "$!pos"
    lt $I11, 0, rx1594_fail3691
    nqp_rxmark rx1594_bstack, rxsubrule1597_pass3700, -1, 0
  rxsubrule1597_pass3700:
    rx1594_cstack = rx1594_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1594_pos, $P11, rx1594_curclass, "$!pos"
    rx1594_cur."!cursor_pass"(rx1594_pos, "infix:sym<::=>", 'backtrack'=>1)
    .return (rx1594_cur)
  rx1594_restart3690:
    repr_get_attr_obj rx1594_cstack, rx1594_cur, rx1594_curclass, "$!cstack"
  rx1594_fail3691:
    unless rx1594_bstack, rx1594_done3689
    pop $I19, rx1594_bstack
    if_null rx1594_cstack, rx1594_cstack_done3694
    unless rx1594_cstack, rx1594_cstack_done3694
    dec $I19
    set $P11, rx1594_cstack[$I19]
  rx1594_cstack_done3694:
    pop rx1594_rep, rx1594_bstack
    pop rx1594_pos, rx1594_bstack
    pop $I19, rx1594_bstack
    lt rx1594_pos, -1, rx1594_done3689
    lt rx1594_pos, 0, rx1594_fail3691
    eq $I19, 0, rx1594_fail3691
    nqp_islist $I20, rx1594_cstack
    unless $I20, rx1594_jump3692
    elements $I18, rx1594_bstack
    le $I18, 0, rx1594_cut3693
    dec $I18
    set $I18, rx1594_bstack[$I18]
  rx1594_cut3693:
    assign rx1594_cstack, $I18
  rx1594_jump3692:
    jump $I19
  rx1594_done3689:
    rx1594_cur."!cursor_fail"()
    .return (rx1594_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<,>" :subid("cuid_218_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1408
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1598_start
    .local string rx1598_tgt
    .local int rx1598_pos
    .local int rx1598_off
    .local int rx1598_eos
    .local int rx1598_rep
    .local pmc rx1598_cur
    .local pmc rx1598_curclass
    .local pmc rx1598_bstack
    .local pmc rx1598_cstack
    rx1598_start = self."!cursor_start_all"()
    set rx1598_cur, rx1598_start[0]
    set rx1598_tgt, rx1598_start[1]
    set rx1598_pos, rx1598_start[2]
    set rx1598_curclass, rx1598_start[3]
    set rx1598_bstack, rx1598_start[4]
    set $I19, rx1598_start[5]
    store_lex unicode:"$\x{a2}", rx1598_cur
    length rx1598_eos, rx1598_tgt
    eq $I19, 1, rx1598_restart3703
    gt rx1598_pos, rx1598_eos, rx1598_fail3704
    repr_get_attr_int $I11, self, rx1598_curclass, "$!from"
    ne $I11, -1, rxscan1599_done3710
    goto rxscan1599_scan3709
  rxscan1599_loop3708:
    inc rx1598_pos
    gt rx1598_pos, rx1598_eos, rx1598_fail3704
    repr_bind_attr_int rx1598_cur, rx1598_curclass, "$!from", rx1598_pos
  rxscan1599_scan3709:
    nqp_rxmark rx1598_bstack, rxscan1599_loop3708, rx1598_pos, 0
  rxscan1599_done3710:
    nqp_rxmark rx1598_bstack, rxcap1600_fail3712, rx1598_pos, 0
    add $I11, rx1598_pos, 1
    gt $I11, rx1598_eos, rx1598_fail3704
    substr $S10, rx1598_tgt, rx1598_pos, 1
    ne $S10, ucs4:",", rx1598_fail3704
    add rx1598_pos, 1
    nqp_rxpeek $I19, rx1598_bstack, rxcap1600_fail3712
    inc $I19
    set $I11, rx1598_bstack[$I19]
    repr_bind_attr_int rx1598_cur, rx1598_curclass, "$!pos", rx1598_pos
    $P11 = rx1598_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1598_pos)
    rx1598_cstack = rx1598_cur."!cursor_capture"($P11, "sym")
    goto rxcap1600_done3711
  rxcap1600_fail3712:
    goto rx1598_fail3704
  rxcap1600_done3711:
    repr_bind_attr_int rx1598_cur, rx1598_curclass, "$!pos", rx1598_pos
    $P11 = rx1598_cur."O"("%comma, :op<list>")
    repr_get_attr_int $I11, $P11, rx1598_curclass, "$!pos"
    lt $I11, 0, rx1598_fail3704
    nqp_rxmark rx1598_bstack, rxsubrule1601_pass3713, -1, 0
  rxsubrule1601_pass3713:
    rx1598_cstack = rx1598_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1598_pos, $P11, rx1598_curclass, "$!pos"
    rx1598_cur."!cursor_pass"(rx1598_pos, "infix:sym<,>", 'backtrack'=>1)
    .return (rx1598_cur)
  rx1598_restart3703:
    repr_get_attr_obj rx1598_cstack, rx1598_cur, rx1598_curclass, "$!cstack"
  rx1598_fail3704:
    unless rx1598_bstack, rx1598_done3702
    pop $I19, rx1598_bstack
    if_null rx1598_cstack, rx1598_cstack_done3707
    unless rx1598_cstack, rx1598_cstack_done3707
    dec $I19
    set $P11, rx1598_cstack[$I19]
  rx1598_cstack_done3707:
    pop rx1598_rep, rx1598_bstack
    pop rx1598_pos, rx1598_bstack
    pop $I19, rx1598_bstack
    lt rx1598_pos, -1, rx1598_done3702
    lt rx1598_pos, 0, rx1598_fail3704
    eq $I19, 0, rx1598_fail3704
    nqp_islist $I20, rx1598_cstack
    unless $I20, rx1598_jump3705
    elements $I18, rx1598_bstack
    le $I18, 0, rx1598_cut3706
    dec $I18
    set $I18, rx1598_bstack[$I18]
  rx1598_cut3706:
    assign rx1598_cstack, $I18
  rx1598_jump3705:
    jump $I19
  rx1598_done3702:
    rx1598_cur."!cursor_fail"()
    .return (rx1598_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<return>" :subid("cuid_219_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1410
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_413_1367388600.55005' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1602_start
    .local string rx1602_tgt
    .local int rx1602_pos
    .local int rx1602_off
    .local int rx1602_eos
    .local int rx1602_rep
    .local pmc rx1602_cur
    .local pmc rx1602_curclass
    .local pmc rx1602_bstack
    .local pmc rx1602_cstack
    rx1602_start = self."!cursor_start_all"()
    set rx1602_cur, rx1602_start[0]
    set rx1602_tgt, rx1602_start[1]
    set rx1602_pos, rx1602_start[2]
    set rx1602_curclass, rx1602_start[3]
    set rx1602_bstack, rx1602_start[4]
    set $I19, rx1602_start[5]
    store_lex unicode:"$\x{a2}", rx1602_cur
    length rx1602_eos, rx1602_tgt
    eq $I19, 1, rx1602_restart3716
    gt rx1602_pos, rx1602_eos, rx1602_fail3717
    repr_get_attr_int $I11, self, rx1602_curclass, "$!from"
    ne $I11, -1, rxscan1603_done3723
    goto rxscan1603_scan3722
  rxscan1603_loop3721:
    inc rx1602_pos
    gt rx1602_pos, rx1602_eos, rx1602_fail3717
    repr_bind_attr_int rx1602_cur, rx1602_curclass, "$!from", rx1602_pos
  rxscan1603_scan3722:
    nqp_rxmark rx1602_bstack, rxscan1603_loop3721, rx1602_pos, 0
  rxscan1603_done3723:
    nqp_rxmark rx1602_bstack, rxcap1604_fail3725, rx1602_pos, 0
    add $I11, rx1602_pos, 6
    gt $I11, rx1602_eos, rx1602_fail3717
    substr $S10, rx1602_tgt, rx1602_pos, 6
    ne $S10, ucs4:"return", rx1602_fail3717
    add rx1602_pos, 6
    nqp_rxpeek $I19, rx1602_bstack, rxcap1604_fail3725
    inc $I19
    set $I11, rx1602_bstack[$I19]
    repr_bind_attr_int rx1602_cur, rx1602_curclass, "$!pos", rx1602_pos
    $P11 = rx1602_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1602_pos)
    rx1602_cstack = rx1602_cur."!cursor_capture"($P11, "sym")
    goto rxcap1604_done3724
  rxcap1604_fail3725:
    goto rx1602_fail3717
  rxcap1604_done3724:
    ge rx1602_pos, rx1602_eos, rx1602_fail3717
    is_cclass $I11, .CCLASS_WHITESPACE, rx1602_tgt, rx1602_pos
    unless $I11, rx1602_fail3717
    add rx1602_pos, 1
    repr_bind_attr_int rx1602_cur, rx1602_curclass, "$!pos", rx1602_pos
    $P11 = rx1602_cur."O"("%list_prefix")
    repr_get_attr_int $I11, $P11, rx1602_curclass, "$!pos"
    lt $I11, 0, rx1602_fail3717
    nqp_rxmark rx1602_bstack, rxsubrule1605_pass3726, -1, 0
  rxsubrule1605_pass3726:
    rx1602_cstack = rx1602_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1602_pos, $P11, rx1602_curclass, "$!pos"
    repr_bind_attr_int rx1602_cur, rx1602_curclass, "$!pos", rx1602_pos
    store_lex unicode:"$\x{a2}", rx1602_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_413_1367388600.55005' 
    capture_lex $P5002
    $P5003 = $P5002()
    rx1602_cur."!cursor_pass"(rx1602_pos, "prefix:sym<return>", 'backtrack'=>1)
    .return (rx1602_cur)
  rx1602_restart3716:
    repr_get_attr_obj rx1602_cstack, rx1602_cur, rx1602_curclass, "$!cstack"
  rx1602_fail3717:
    unless rx1602_bstack, rx1602_done3715
    pop $I19, rx1602_bstack
    if_null rx1602_cstack, rx1602_cstack_done3720
    unless rx1602_cstack, rx1602_cstack_done3720
    dec $I19
    set $P11, rx1602_cstack[$I19]
  rx1602_cstack_done3720:
    pop rx1602_rep, rx1602_bstack
    pop rx1602_pos, rx1602_bstack
    pop $I19, rx1602_bstack
    lt rx1602_pos, -1, rx1602_done3715
    lt rx1602_pos, 0, rx1602_fail3717
    eq $I19, 0, rx1602_fail3717
    nqp_islist $I20, rx1602_cstack
    unless $I20, rx1602_jump3718
    elements $I18, rx1602_bstack
    le $I18, 0, rx1602_cut3719
    dec $I18
    set $I18, rx1602_bstack[$I18]
  rx1602_cut3719:
    assign rx1602_cstack, $I18
  rx1602_jump3718:
    jump $I19
  rx1602_done3715:
    rx1602_cur."!cursor_fail"()
    .return (rx1602_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_413_1367388600.55005") :anon :lex :outer("cuid_219_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1410

    box $P5001, 1
    store_dynamic_lex "$*RETURN_USED", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<make>" :subid("cuid_220_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1411
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1606_start
    .local string rx1606_tgt
    .local int rx1606_pos
    .local int rx1606_off
    .local int rx1606_eos
    .local int rx1606_rep
    .local pmc rx1606_cur
    .local pmc rx1606_curclass
    .local pmc rx1606_bstack
    .local pmc rx1606_cstack
    rx1606_start = self."!cursor_start_all"()
    set rx1606_cur, rx1606_start[0]
    set rx1606_tgt, rx1606_start[1]
    set rx1606_pos, rx1606_start[2]
    set rx1606_curclass, rx1606_start[3]
    set rx1606_bstack, rx1606_start[4]
    set $I19, rx1606_start[5]
    store_lex unicode:"$\x{a2}", rx1606_cur
    length rx1606_eos, rx1606_tgt
    eq $I19, 1, rx1606_restart3729
    gt rx1606_pos, rx1606_eos, rx1606_fail3730
    repr_get_attr_int $I11, self, rx1606_curclass, "$!from"
    ne $I11, -1, rxscan1607_done3736
    goto rxscan1607_scan3735
  rxscan1607_loop3734:
    inc rx1606_pos
    gt rx1606_pos, rx1606_eos, rx1606_fail3730
    repr_bind_attr_int rx1606_cur, rx1606_curclass, "$!from", rx1606_pos
  rxscan1607_scan3735:
    nqp_rxmark rx1606_bstack, rxscan1607_loop3734, rx1606_pos, 0
  rxscan1607_done3736:
    nqp_rxmark rx1606_bstack, rxcap1608_fail3738, rx1606_pos, 0
    add $I11, rx1606_pos, 4
    gt $I11, rx1606_eos, rx1606_fail3730
    substr $S10, rx1606_tgt, rx1606_pos, 4
    ne $S10, ucs4:"make", rx1606_fail3730
    add rx1606_pos, 4
    nqp_rxpeek $I19, rx1606_bstack, rxcap1608_fail3738
    inc $I19
    set $I11, rx1606_bstack[$I19]
    repr_bind_attr_int rx1606_cur, rx1606_curclass, "$!pos", rx1606_pos
    $P11 = rx1606_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1606_pos)
    rx1606_cstack = rx1606_cur."!cursor_capture"($P11, "sym")
    goto rxcap1608_done3737
  rxcap1608_fail3738:
    goto rx1606_fail3730
  rxcap1608_done3737:
    ge rx1606_pos, rx1606_eos, rx1606_fail3730
    is_cclass $I11, .CCLASS_WHITESPACE, rx1606_tgt, rx1606_pos
    unless $I11, rx1606_fail3730
    add rx1606_pos, 1
    repr_bind_attr_int rx1606_cur, rx1606_curclass, "$!pos", rx1606_pos
    $P11 = rx1606_cur."O"("%list_prefix")
    repr_get_attr_int $I11, $P11, rx1606_curclass, "$!pos"
    lt $I11, 0, rx1606_fail3730
    nqp_rxmark rx1606_bstack, rxsubrule1609_pass3739, -1, 0
  rxsubrule1609_pass3739:
    rx1606_cstack = rx1606_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1606_pos, $P11, rx1606_curclass, "$!pos"
    rx1606_cur."!cursor_pass"(rx1606_pos, "prefix:sym<make>", 'backtrack'=>1)
    .return (rx1606_cur)
  rx1606_restart3729:
    repr_get_attr_obj rx1606_cstack, rx1606_cur, rx1606_curclass, "$!cstack"
  rx1606_fail3730:
    unless rx1606_bstack, rx1606_done3728
    pop $I19, rx1606_bstack
    if_null rx1606_cstack, rx1606_cstack_done3733
    unless rx1606_cstack, rx1606_cstack_done3733
    dec $I19
    set $P11, rx1606_cstack[$I19]
  rx1606_cstack_done3733:
    pop rx1606_rep, rx1606_bstack
    pop rx1606_pos, rx1606_bstack
    pop $I19, rx1606_bstack
    lt rx1606_pos, -1, rx1606_done3728
    lt rx1606_pos, 0, rx1606_fail3730
    eq $I19, 0, rx1606_fail3730
    nqp_islist $I20, rx1606_cstack
    unless $I20, rx1606_jump3731
    elements $I18, rx1606_bstack
    le $I18, 0, rx1606_cut3732
    dec $I18
    set $I18, rx1606_bstack[$I18]
  rx1606_cut3732:
    assign rx1606_cstack, $I18
  rx1606_jump3731:
    jump $I19
  rx1606_done3728:
    rx1606_cur."!cursor_fail"()
    .return (rx1606_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<last>" :subid("cuid_221_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1412
    .param pmc _lex_param_0 
    .const 'Sub' $P5005 = 'cuid_222_1367388600.55005' 
    capture_lex $P5005 
    .const 'Sub' $P5005 = 'cuid_414_1367388600.55005' 
    capture_lex $P5005 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1610_start
    .local string rx1610_tgt
    .local int rx1610_pos
    .local int rx1610_off
    .local int rx1610_eos
    .local int rx1610_rep
    .local pmc rx1610_cur
    .local pmc rx1610_curclass
    .local pmc rx1610_bstack
    .local pmc rx1610_cstack
    rx1610_start = self."!cursor_start_all"()
    set rx1610_cur, rx1610_start[0]
    set rx1610_tgt, rx1610_start[1]
    set rx1610_pos, rx1610_start[2]
    set rx1610_curclass, rx1610_start[3]
    set rx1610_bstack, rx1610_start[4]
    set $I19, rx1610_start[5]
    store_lex unicode:"$\x{a2}", rx1610_cur
    length rx1610_eos, rx1610_tgt
    eq $I19, 1, rx1610_restart3742
    gt rx1610_pos, rx1610_eos, rx1610_fail3743
    repr_get_attr_int $I11, self, rx1610_curclass, "$!from"
    ne $I11, -1, rxscan1611_done3749
    goto rxscan1611_scan3748
  rxscan1611_loop3747:
    inc rx1610_pos
    gt rx1610_pos, rx1610_eos, rx1610_fail3743
    repr_bind_attr_int rx1610_cur, rx1610_curclass, "$!from", rx1610_pos
  rxscan1611_scan3748:
    nqp_rxmark rx1610_bstack, rxscan1611_loop3747, rx1610_pos, 0
  rxscan1611_done3749:
    nqp_rxmark rx1610_bstack, rxcap1612_fail3751, rx1610_pos, 0
    add $I11, rx1610_pos, 4
    gt $I11, rx1610_eos, rx1610_fail3743
    substr $S10, rx1610_tgt, rx1610_pos, 4
    ne $S10, ucs4:"last", rx1610_fail3743
    add rx1610_pos, 4
    nqp_rxpeek $I19, rx1610_bstack, rxcap1612_fail3751
    inc $I19
    set $I11, rx1610_bstack[$I19]
    repr_bind_attr_int rx1610_cur, rx1610_curclass, "$!pos", rx1610_pos
    $P11 = rx1610_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1610_pos)
    rx1610_cstack = rx1610_cur."!cursor_capture"($P11, "sym")
    goto rxcap1612_done3750
  rxcap1612_fail3751:
    goto rx1610_fail3743
  rxcap1612_done3750:
    .const 'Sub' $P5001 = 'cuid_222_1367388600.55005' 
    capture_lex $P5001
    repr_bind_attr_int rx1610_cur, rx1610_curclass, "$!pos", rx1610_pos
    $P11 = rx1610_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1610_curclass, "$!pos"
    ge $I11, 0, rx1610_fail3743
    repr_bind_attr_int rx1610_cur, rx1610_curclass, "$!pos", rx1610_pos
    store_lex unicode:"$\x{a2}", rx1610_cur
    $P5002 = $P101."MATCH"()
    set $P102, $P5002
    .const 'Sub' $P5003 = 'cuid_414_1367388600.55005' 
    capture_lex $P5003
    $P5004 = $P5003()
    rx1610_cur."!cursor_pass"(rx1610_pos, "term:sym<last>", 'backtrack'=>1)
    .return (rx1610_cur)
  rx1610_restart3742:
    repr_get_attr_obj rx1610_cstack, rx1610_cur, rx1610_curclass, "$!cstack"
  rx1610_fail3743:
    unless rx1610_bstack, rx1610_done3741
    pop $I19, rx1610_bstack
    if_null rx1610_cstack, rx1610_cstack_done3746
    unless rx1610_cstack, rx1610_cstack_done3746
    dec $I19
    set $P11, rx1610_cstack[$I19]
  rx1610_cstack_done3746:
    pop rx1610_rep, rx1610_bstack
    pop rx1610_pos, rx1610_bstack
    pop $I19, rx1610_bstack
    lt rx1610_pos, -1, rx1610_done3741
    lt rx1610_pos, 0, rx1610_fail3743
    eq $I19, 0, rx1610_fail3743
    nqp_islist $I20, rx1610_cstack
    unless $I20, rx1610_jump3744
    elements $I18, rx1610_bstack
    le $I18, 0, rx1610_cut3745
    dec $I18
    set $I18, rx1610_bstack[$I18]
  rx1610_cut3745:
    assign rx1610_cstack, $I18
  rx1610_jump3744:
    jump $I19
  rx1610_done3741:
    rx1610_cur."!cursor_fail"()
    .return (rx1610_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_222_1367388600.55005") :anon :lex :outer("cuid_221_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1613_start
    .local string rx1613_tgt
    .local int rx1613_pos
    .local int rx1613_off
    .local int rx1613_eos
    .local int rx1613_rep
    .local pmc rx1613_cur
    .local pmc rx1613_curclass
    .local pmc rx1613_bstack
    .local pmc rx1613_cstack
    rx1613_start = self."!cursor_start_all"()
    set rx1613_cur, rx1613_start[0]
    set rx1613_tgt, rx1613_start[1]
    set rx1613_pos, rx1613_start[2]
    set rx1613_curclass, rx1613_start[3]
    set rx1613_bstack, rx1613_start[4]
    set $I19, rx1613_start[5]
    store_lex unicode:"$\x{a2}", rx1613_cur
    length rx1613_eos, rx1613_tgt
    eq $I19, 1, rx1613_restart3754
    gt rx1613_pos, rx1613_eos, rx1613_fail3755
    repr_get_attr_int $I11, self, rx1613_curclass, "$!from"
    ne $I11, -1, rxscan1614_done3761
    goto rxscan1614_scan3760
  rxscan1614_loop3759:
    inc rx1613_pos
    gt rx1613_pos, rx1613_eos, rx1613_fail3755
    repr_bind_attr_int rx1613_cur, rx1613_curclass, "$!from", rx1613_pos
  rxscan1614_scan3760:
    nqp_rxmark rx1613_bstack, rxscan1614_loop3759, rx1613_pos, 0
  rxscan1614_done3761:
    repr_bind_attr_int rx1613_cur, rx1613_curclass, "$!pos", rx1613_pos
    $P11 = rx1613_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx1613_curclass, "$!pos"
    lt $I11, 0, rx1613_fail3755
    nqp_rxmark rx1613_bstack, rxsubrule1615_pass3762, -1, 0
  rxsubrule1615_pass3762:
    rx1613_cstack = rx1613_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx1613_pos, $P11, rx1613_curclass, "$!pos"
    rx1613_cur."!cursor_pass"(rx1613_pos, 'backtrack'=>1)
    .return (rx1613_cur)
  rx1613_restart3754:
    repr_get_attr_obj rx1613_cstack, rx1613_cur, rx1613_curclass, "$!cstack"
  rx1613_fail3755:
    unless rx1613_bstack, rx1613_done3753
    pop $I19, rx1613_bstack
    if_null rx1613_cstack, rx1613_cstack_done3758
    unless rx1613_cstack, rx1613_cstack_done3758
    dec $I19
    set $P11, rx1613_cstack[$I19]
  rx1613_cstack_done3758:
    pop rx1613_rep, rx1613_bstack
    pop rx1613_pos, rx1613_bstack
    pop $I19, rx1613_bstack
    lt rx1613_pos, -1, rx1613_done3753
    lt rx1613_pos, 0, rx1613_fail3755
    eq $I19, 0, rx1613_fail3755
    nqp_islist $I20, rx1613_cstack
    unless $I20, rx1613_jump3756
    elements $I18, rx1613_bstack
    le $I18, 0, rx1613_cut3757
    dec $I18
    set $I18, rx1613_bstack[$I18]
  rx1613_cut3757:
    assign rx1613_cstack, $I18
  rx1613_jump3756:
    jump $I19
  rx1613_done3753:
    rx1613_cur."!cursor_fail"()
    .return (rx1613_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_414_1367388600.55005") :anon :lex :outer("cuid_221_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1412

    box $P5001, 1
    store_dynamic_lex "$*CONTROL_USED", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<next>" :subid("cuid_223_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1413
    .param pmc _lex_param_0 
    .const 'Sub' $P5005 = 'cuid_224_1367388600.55005' 
    capture_lex $P5005 
    .const 'Sub' $P5005 = 'cuid_415_1367388600.55005' 
    capture_lex $P5005 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1616_start
    .local string rx1616_tgt
    .local int rx1616_pos
    .local int rx1616_off
    .local int rx1616_eos
    .local int rx1616_rep
    .local pmc rx1616_cur
    .local pmc rx1616_curclass
    .local pmc rx1616_bstack
    .local pmc rx1616_cstack
    rx1616_start = self."!cursor_start_all"()
    set rx1616_cur, rx1616_start[0]
    set rx1616_tgt, rx1616_start[1]
    set rx1616_pos, rx1616_start[2]
    set rx1616_curclass, rx1616_start[3]
    set rx1616_bstack, rx1616_start[4]
    set $I19, rx1616_start[5]
    store_lex unicode:"$\x{a2}", rx1616_cur
    length rx1616_eos, rx1616_tgt
    eq $I19, 1, rx1616_restart3765
    gt rx1616_pos, rx1616_eos, rx1616_fail3766
    repr_get_attr_int $I11, self, rx1616_curclass, "$!from"
    ne $I11, -1, rxscan1617_done3772
    goto rxscan1617_scan3771
  rxscan1617_loop3770:
    inc rx1616_pos
    gt rx1616_pos, rx1616_eos, rx1616_fail3766
    repr_bind_attr_int rx1616_cur, rx1616_curclass, "$!from", rx1616_pos
  rxscan1617_scan3771:
    nqp_rxmark rx1616_bstack, rxscan1617_loop3770, rx1616_pos, 0
  rxscan1617_done3772:
    nqp_rxmark rx1616_bstack, rxcap1618_fail3774, rx1616_pos, 0
    add $I11, rx1616_pos, 4
    gt $I11, rx1616_eos, rx1616_fail3766
    substr $S10, rx1616_tgt, rx1616_pos, 4
    ne $S10, ucs4:"next", rx1616_fail3766
    add rx1616_pos, 4
    nqp_rxpeek $I19, rx1616_bstack, rxcap1618_fail3774
    inc $I19
    set $I11, rx1616_bstack[$I19]
    repr_bind_attr_int rx1616_cur, rx1616_curclass, "$!pos", rx1616_pos
    $P11 = rx1616_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1616_pos)
    rx1616_cstack = rx1616_cur."!cursor_capture"($P11, "sym")
    goto rxcap1618_done3773
  rxcap1618_fail3774:
    goto rx1616_fail3766
  rxcap1618_done3773:
    .const 'Sub' $P5001 = 'cuid_224_1367388600.55005' 
    capture_lex $P5001
    repr_bind_attr_int rx1616_cur, rx1616_curclass, "$!pos", rx1616_pos
    $P11 = rx1616_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1616_curclass, "$!pos"
    ge $I11, 0, rx1616_fail3766
    repr_bind_attr_int rx1616_cur, rx1616_curclass, "$!pos", rx1616_pos
    store_lex unicode:"$\x{a2}", rx1616_cur
    $P5002 = $P101."MATCH"()
    set $P102, $P5002
    .const 'Sub' $P5003 = 'cuid_415_1367388600.55005' 
    capture_lex $P5003
    $P5004 = $P5003()
    rx1616_cur."!cursor_pass"(rx1616_pos, "term:sym<next>", 'backtrack'=>1)
    .return (rx1616_cur)
  rx1616_restart3765:
    repr_get_attr_obj rx1616_cstack, rx1616_cur, rx1616_curclass, "$!cstack"
  rx1616_fail3766:
    unless rx1616_bstack, rx1616_done3764
    pop $I19, rx1616_bstack
    if_null rx1616_cstack, rx1616_cstack_done3769
    unless rx1616_cstack, rx1616_cstack_done3769
    dec $I19
    set $P11, rx1616_cstack[$I19]
  rx1616_cstack_done3769:
    pop rx1616_rep, rx1616_bstack
    pop rx1616_pos, rx1616_bstack
    pop $I19, rx1616_bstack
    lt rx1616_pos, -1, rx1616_done3764
    lt rx1616_pos, 0, rx1616_fail3766
    eq $I19, 0, rx1616_fail3766
    nqp_islist $I20, rx1616_cstack
    unless $I20, rx1616_jump3767
    elements $I18, rx1616_bstack
    le $I18, 0, rx1616_cut3768
    dec $I18
    set $I18, rx1616_bstack[$I18]
  rx1616_cut3768:
    assign rx1616_cstack, $I18
  rx1616_jump3767:
    jump $I19
  rx1616_done3764:
    rx1616_cur."!cursor_fail"()
    .return (rx1616_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_224_1367388600.55005") :anon :lex :outer("cuid_223_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1619_start
    .local string rx1619_tgt
    .local int rx1619_pos
    .local int rx1619_off
    .local int rx1619_eos
    .local int rx1619_rep
    .local pmc rx1619_cur
    .local pmc rx1619_curclass
    .local pmc rx1619_bstack
    .local pmc rx1619_cstack
    rx1619_start = self."!cursor_start_all"()
    set rx1619_cur, rx1619_start[0]
    set rx1619_tgt, rx1619_start[1]
    set rx1619_pos, rx1619_start[2]
    set rx1619_curclass, rx1619_start[3]
    set rx1619_bstack, rx1619_start[4]
    set $I19, rx1619_start[5]
    store_lex unicode:"$\x{a2}", rx1619_cur
    length rx1619_eos, rx1619_tgt
    eq $I19, 1, rx1619_restart3777
    gt rx1619_pos, rx1619_eos, rx1619_fail3778
    repr_get_attr_int $I11, self, rx1619_curclass, "$!from"
    ne $I11, -1, rxscan1620_done3784
    goto rxscan1620_scan3783
  rxscan1620_loop3782:
    inc rx1619_pos
    gt rx1619_pos, rx1619_eos, rx1619_fail3778
    repr_bind_attr_int rx1619_cur, rx1619_curclass, "$!from", rx1619_pos
  rxscan1620_scan3783:
    nqp_rxmark rx1619_bstack, rxscan1620_loop3782, rx1619_pos, 0
  rxscan1620_done3784:
    repr_bind_attr_int rx1619_cur, rx1619_curclass, "$!pos", rx1619_pos
    $P11 = rx1619_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx1619_curclass, "$!pos"
    lt $I11, 0, rx1619_fail3778
    nqp_rxmark rx1619_bstack, rxsubrule1621_pass3785, -1, 0
  rxsubrule1621_pass3785:
    rx1619_cstack = rx1619_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx1619_pos, $P11, rx1619_curclass, "$!pos"
    rx1619_cur."!cursor_pass"(rx1619_pos, 'backtrack'=>1)
    .return (rx1619_cur)
  rx1619_restart3777:
    repr_get_attr_obj rx1619_cstack, rx1619_cur, rx1619_curclass, "$!cstack"
  rx1619_fail3778:
    unless rx1619_bstack, rx1619_done3776
    pop $I19, rx1619_bstack
    if_null rx1619_cstack, rx1619_cstack_done3781
    unless rx1619_cstack, rx1619_cstack_done3781
    dec $I19
    set $P11, rx1619_cstack[$I19]
  rx1619_cstack_done3781:
    pop rx1619_rep, rx1619_bstack
    pop rx1619_pos, rx1619_bstack
    pop $I19, rx1619_bstack
    lt rx1619_pos, -1, rx1619_done3776
    lt rx1619_pos, 0, rx1619_fail3778
    eq $I19, 0, rx1619_fail3778
    nqp_islist $I20, rx1619_cstack
    unless $I20, rx1619_jump3779
    elements $I18, rx1619_bstack
    le $I18, 0, rx1619_cut3780
    dec $I18
    set $I18, rx1619_bstack[$I18]
  rx1619_cut3780:
    assign rx1619_cstack, $I18
  rx1619_jump3779:
    jump $I19
  rx1619_done3776:
    rx1619_cur."!cursor_fail"()
    .return (rx1619_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_415_1367388600.55005") :anon :lex :outer("cuid_223_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1413

    box $P5001, 1
    store_dynamic_lex "$*CONTROL_USED", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<redo>" :subid("cuid_225_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1414
    .param pmc _lex_param_0 
    .const 'Sub' $P5005 = 'cuid_226_1367388600.55005' 
    capture_lex $P5005 
    .const 'Sub' $P5005 = 'cuid_416_1367388600.55005' 
    capture_lex $P5005 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1622_start
    .local string rx1622_tgt
    .local int rx1622_pos
    .local int rx1622_off
    .local int rx1622_eos
    .local int rx1622_rep
    .local pmc rx1622_cur
    .local pmc rx1622_curclass
    .local pmc rx1622_bstack
    .local pmc rx1622_cstack
    rx1622_start = self."!cursor_start_all"()
    set rx1622_cur, rx1622_start[0]
    set rx1622_tgt, rx1622_start[1]
    set rx1622_pos, rx1622_start[2]
    set rx1622_curclass, rx1622_start[3]
    set rx1622_bstack, rx1622_start[4]
    set $I19, rx1622_start[5]
    store_lex unicode:"$\x{a2}", rx1622_cur
    length rx1622_eos, rx1622_tgt
    eq $I19, 1, rx1622_restart3788
    gt rx1622_pos, rx1622_eos, rx1622_fail3789
    repr_get_attr_int $I11, self, rx1622_curclass, "$!from"
    ne $I11, -1, rxscan1623_done3795
    goto rxscan1623_scan3794
  rxscan1623_loop3793:
    inc rx1622_pos
    gt rx1622_pos, rx1622_eos, rx1622_fail3789
    repr_bind_attr_int rx1622_cur, rx1622_curclass, "$!from", rx1622_pos
  rxscan1623_scan3794:
    nqp_rxmark rx1622_bstack, rxscan1623_loop3793, rx1622_pos, 0
  rxscan1623_done3795:
    nqp_rxmark rx1622_bstack, rxcap1624_fail3797, rx1622_pos, 0
    add $I11, rx1622_pos, 4
    gt $I11, rx1622_eos, rx1622_fail3789
    substr $S10, rx1622_tgt, rx1622_pos, 4
    ne $S10, ucs4:"redo", rx1622_fail3789
    add rx1622_pos, 4
    nqp_rxpeek $I19, rx1622_bstack, rxcap1624_fail3797
    inc $I19
    set $I11, rx1622_bstack[$I19]
    repr_bind_attr_int rx1622_cur, rx1622_curclass, "$!pos", rx1622_pos
    $P11 = rx1622_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1622_pos)
    rx1622_cstack = rx1622_cur."!cursor_capture"($P11, "sym")
    goto rxcap1624_done3796
  rxcap1624_fail3797:
    goto rx1622_fail3789
  rxcap1624_done3796:
    .const 'Sub' $P5001 = 'cuid_226_1367388600.55005' 
    capture_lex $P5001
    repr_bind_attr_int rx1622_cur, rx1622_curclass, "$!pos", rx1622_pos
    $P11 = rx1622_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1622_curclass, "$!pos"
    ge $I11, 0, rx1622_fail3789
    repr_bind_attr_int rx1622_cur, rx1622_curclass, "$!pos", rx1622_pos
    store_lex unicode:"$\x{a2}", rx1622_cur
    $P5002 = $P101."MATCH"()
    set $P102, $P5002
    .const 'Sub' $P5003 = 'cuid_416_1367388600.55005' 
    capture_lex $P5003
    $P5004 = $P5003()
    rx1622_cur."!cursor_pass"(rx1622_pos, "term:sym<redo>", 'backtrack'=>1)
    .return (rx1622_cur)
  rx1622_restart3788:
    repr_get_attr_obj rx1622_cstack, rx1622_cur, rx1622_curclass, "$!cstack"
  rx1622_fail3789:
    unless rx1622_bstack, rx1622_done3787
    pop $I19, rx1622_bstack
    if_null rx1622_cstack, rx1622_cstack_done3792
    unless rx1622_cstack, rx1622_cstack_done3792
    dec $I19
    set $P11, rx1622_cstack[$I19]
  rx1622_cstack_done3792:
    pop rx1622_rep, rx1622_bstack
    pop rx1622_pos, rx1622_bstack
    pop $I19, rx1622_bstack
    lt rx1622_pos, -1, rx1622_done3787
    lt rx1622_pos, 0, rx1622_fail3789
    eq $I19, 0, rx1622_fail3789
    nqp_islist $I20, rx1622_cstack
    unless $I20, rx1622_jump3790
    elements $I18, rx1622_bstack
    le $I18, 0, rx1622_cut3791
    dec $I18
    set $I18, rx1622_bstack[$I18]
  rx1622_cut3791:
    assign rx1622_cstack, $I18
  rx1622_jump3790:
    jump $I19
  rx1622_done3787:
    rx1622_cur."!cursor_fail"()
    .return (rx1622_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_226_1367388600.55005") :anon :lex :outer("cuid_225_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1625_start
    .local string rx1625_tgt
    .local int rx1625_pos
    .local int rx1625_off
    .local int rx1625_eos
    .local int rx1625_rep
    .local pmc rx1625_cur
    .local pmc rx1625_curclass
    .local pmc rx1625_bstack
    .local pmc rx1625_cstack
    rx1625_start = self."!cursor_start_all"()
    set rx1625_cur, rx1625_start[0]
    set rx1625_tgt, rx1625_start[1]
    set rx1625_pos, rx1625_start[2]
    set rx1625_curclass, rx1625_start[3]
    set rx1625_bstack, rx1625_start[4]
    set $I19, rx1625_start[5]
    store_lex unicode:"$\x{a2}", rx1625_cur
    length rx1625_eos, rx1625_tgt
    eq $I19, 1, rx1625_restart3800
    gt rx1625_pos, rx1625_eos, rx1625_fail3801
    repr_get_attr_int $I11, self, rx1625_curclass, "$!from"
    ne $I11, -1, rxscan1626_done3807
    goto rxscan1626_scan3806
  rxscan1626_loop3805:
    inc rx1625_pos
    gt rx1625_pos, rx1625_eos, rx1625_fail3801
    repr_bind_attr_int rx1625_cur, rx1625_curclass, "$!from", rx1625_pos
  rxscan1626_scan3806:
    nqp_rxmark rx1625_bstack, rxscan1626_loop3805, rx1625_pos, 0
  rxscan1626_done3807:
    repr_bind_attr_int rx1625_cur, rx1625_curclass, "$!pos", rx1625_pos
    $P11 = rx1625_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx1625_curclass, "$!pos"
    lt $I11, 0, rx1625_fail3801
    nqp_rxmark rx1625_bstack, rxsubrule1627_pass3808, -1, 0
  rxsubrule1627_pass3808:
    rx1625_cstack = rx1625_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx1625_pos, $P11, rx1625_curclass, "$!pos"
    rx1625_cur."!cursor_pass"(rx1625_pos, 'backtrack'=>1)
    .return (rx1625_cur)
  rx1625_restart3800:
    repr_get_attr_obj rx1625_cstack, rx1625_cur, rx1625_curclass, "$!cstack"
  rx1625_fail3801:
    unless rx1625_bstack, rx1625_done3799
    pop $I19, rx1625_bstack
    if_null rx1625_cstack, rx1625_cstack_done3804
    unless rx1625_cstack, rx1625_cstack_done3804
    dec $I19
    set $P11, rx1625_cstack[$I19]
  rx1625_cstack_done3804:
    pop rx1625_rep, rx1625_bstack
    pop rx1625_pos, rx1625_bstack
    pop $I19, rx1625_bstack
    lt rx1625_pos, -1, rx1625_done3799
    lt rx1625_pos, 0, rx1625_fail3801
    eq $I19, 0, rx1625_fail3801
    nqp_islist $I20, rx1625_cstack
    unless $I20, rx1625_jump3802
    elements $I18, rx1625_bstack
    le $I18, 0, rx1625_cut3803
    dec $I18
    set $I18, rx1625_bstack[$I18]
  rx1625_cut3803:
    assign rx1625_cstack, $I18
  rx1625_jump3802:
    jump $I19
  rx1625_done3799:
    rx1625_cur."!cursor_fail"()
    .return (rx1625_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_416_1367388600.55005") :anon :lex :outer("cuid_225_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1414

    box $P5001, 1
    store_dynamic_lex "$*CONTROL_USED", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "smartmatch" :subid("cuid_227_1367388600.55005") :anon :lex :outer("cuid_398_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1416
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$t", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_167 
    .local pmc fb_tmp_168 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    set fb_tmp_167, _lex_param_1
    repr_defined $I5001, fb_tmp_167
    unless $I5001 goto if1628_else3809 
    set $P5002, fb_tmp_167[0]
    set $P5004, $P5002
    goto if1628_end3810
  if1628_else3809:
    null $P5003
    set $P5004, $P5003
  if1628_end3810:
    unless_null $P5004, vivi_16293811
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_16293811:
    set $P101, $P5004
    set fb_tmp_168, _lex_param_1
    repr_defined $I5002, fb_tmp_168
    unless $I5002 goto if1630_else3812 
    set $P5006, fb_tmp_168[1]
    set $P5008, $P5006
    goto if1630_end3813
  if1630_else3812:
    null $P5007
    set $P5008, $P5007
  if1630_end3813:
    unless_null $P5008, vivi_16313814
    nqp_get_sc_object $P5009, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5008, $P5009
  vivi_16313814:
    set _lex_param_1[0], $P5008
    set _lex_param_1[1], $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_417_1367388600.55005") :anon :lex :outer("cuid_374_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1422
    .const 'Sub' $P5013 = 'cuid_228_1367388600.55005' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_229_1367388600.55005' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_231_1367388600.55005' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_232_1367388600.55005' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_234_1367388600.55005' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_235_1367388600.55005' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_238_1367388600.55005' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_241_1367388600.55005' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_243_1367388600.55005' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_245_1367388600.55005' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_246_1367388600.55005' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_247_1367388600.55005' 
    capture_lex $P5013 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .const 'Sub' $P5001 = 'cuid_228_1367388600.55005' 
    capture_lex $P5001
    .const 'Sub' $P5002 = 'cuid_229_1367388600.55005' 
    capture_lex $P5002
    .const 'Sub' $P5003 = 'cuid_231_1367388600.55005' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_232_1367388600.55005' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_234_1367388600.55005' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_235_1367388600.55005' 
    capture_lex $P5006
    .const 'Sub' $P5007 = 'cuid_238_1367388600.55005' 
    capture_lex $P5007
    .const 'Sub' $P5008 = 'cuid_241_1367388600.55005' 
    capture_lex $P5008
    .const 'Sub' $P5009 = 'cuid_243_1367388600.55005' 
    capture_lex $P5009
    .const 'Sub' $P5010 = 'cuid_245_1367388600.55005' 
    capture_lex $P5010
    .const 'Sub' $P5011 = 'cuid_246_1367388600.55005' 
    capture_lex $P5011
    .const 'Sub' $P5012 = 'cuid_247_1367388600.55005' 
    capture_lex $P5012
    .return ($P5012) 
.end
.HLL "nqp"
.namespace []
.sub "rxstopper" :subid("cuid_228_1367388600.55005") :anon :lex :outer("cuid_417_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1423
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1632_start
    .local string rx1632_tgt
    .local int rx1632_pos
    .local int rx1632_off
    .local int rx1632_eos
    .local int rx1632_rep
    .local pmc rx1632_cur
    .local pmc rx1632_curclass
    .local pmc rx1632_bstack
    .local pmc rx1632_cstack
    rx1632_start = self."!cursor_start_all"()
    set rx1632_cur, rx1632_start[0]
    set rx1632_tgt, rx1632_start[1]
    set rx1632_pos, rx1632_start[2]
    set rx1632_curclass, rx1632_start[3]
    set rx1632_bstack, rx1632_start[4]
    set $I19, rx1632_start[5]
    store_lex unicode:"$\x{a2}", rx1632_cur
    length rx1632_eos, rx1632_tgt
    eq $I19, 1, rx1632_restart3817
    gt rx1632_pos, rx1632_eos, rx1632_fail3818
    repr_get_attr_int $I11, self, rx1632_curclass, "$!from"
    ne $I11, -1, rxscan1633_done3824
    goto rxscan1633_scan3823
  rxscan1633_loop3822:
    inc rx1632_pos
    gt rx1632_pos, rx1632_eos, rx1632_fail3818
    repr_bind_attr_int rx1632_cur, rx1632_curclass, "$!from", rx1632_pos
  rxscan1633_scan3823:
    nqp_rxmark rx1632_bstack, rxscan1633_loop3822, rx1632_pos, 0
  rxscan1633_done3824:
    ge rx1632_pos, rx1632_eos, rx1632_fail3818
    substr $S11, rx1632_tgt, rx1632_pos, 1
    index $I11, ucs4:"}/", $S11
    lt $I11, 0, rx1632_fail3818
    inc rx1632_pos
    rx1632_cur."!cursor_pass"(rx1632_pos, "rxstopper", 'backtrack'=>1)
    .return (rx1632_cur)
  rx1632_restart3817:
    repr_get_attr_obj rx1632_cstack, rx1632_cur, rx1632_curclass, "$!cstack"
  rx1632_fail3818:
    unless rx1632_bstack, rx1632_done3816
    pop $I19, rx1632_bstack
    if_null rx1632_cstack, rx1632_cstack_done3821
    unless rx1632_cstack, rx1632_cstack_done3821
    dec $I19
    set $P11, rx1632_cstack[$I19]
  rx1632_cstack_done3821:
    pop rx1632_rep, rx1632_bstack
    pop rx1632_pos, rx1632_bstack
    pop $I19, rx1632_bstack
    lt rx1632_pos, -1, rx1632_done3816
    lt rx1632_pos, 0, rx1632_fail3818
    eq $I19, 0, rx1632_fail3818
    nqp_islist $I20, rx1632_cstack
    unless $I20, rx1632_jump3819
    elements $I18, rx1632_bstack
    le $I18, 0, rx1632_cut3820
    dec $I18
    set $I18, rx1632_bstack[$I18]
  rx1632_cut3820:
    assign rx1632_cstack, $I18
  rx1632_jump3819:
    jump $I19
  rx1632_done3816:
    rx1632_cur."!cursor_fail"()
    .return (rx1632_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<:my>" :subid("cuid_229_1367388600.55005") :anon :lex :outer("cuid_417_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1427
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_230_1367388600.55005' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1634_start
    .local string rx1634_tgt
    .local int rx1634_pos
    .local int rx1634_off
    .local int rx1634_eos
    .local int rx1634_rep
    .local pmc rx1634_cur
    .local pmc rx1634_curclass
    .local pmc rx1634_bstack
    .local pmc rx1634_cstack
    rx1634_start = self."!cursor_start_all"()
    set rx1634_cur, rx1634_start[0]
    set rx1634_tgt, rx1634_start[1]
    set rx1634_pos, rx1634_start[2]
    set rx1634_curclass, rx1634_start[3]
    set rx1634_bstack, rx1634_start[4]
    set $I19, rx1634_start[5]
    store_lex unicode:"$\x{a2}", rx1634_cur
    length rx1634_eos, rx1634_tgt
    eq $I19, 1, rx1634_restart3827
    gt rx1634_pos, rx1634_eos, rx1634_fail3828
    repr_get_attr_int $I11, self, rx1634_curclass, "$!from"
    ne $I11, -1, rxscan1635_done3834
    goto rxscan1635_scan3833
  rxscan1635_loop3832:
    inc rx1634_pos
    gt rx1634_pos, rx1634_eos, rx1634_fail3828
    repr_bind_attr_int rx1634_cur, rx1634_curclass, "$!from", rx1634_pos
  rxscan1635_scan3833:
    nqp_rxmark rx1634_bstack, rxscan1635_loop3832, rx1634_pos, 0
  rxscan1635_done3834:
    add $I11, rx1634_pos, 1
    gt $I11, rx1634_eos, rx1634_fail3828
    substr $S10, rx1634_tgt, rx1634_pos, 1
    ne $S10, ucs4:":", rx1634_fail3828
    add rx1634_pos, 1
    .const 'Sub' $P5001 = 'cuid_230_1367388600.55005' 
    capture_lex $P5001
    repr_bind_attr_int rx1634_cur, rx1634_curclass, "$!pos", rx1634_pos
    $P11 = rx1634_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1634_curclass, "$!pos"
    lt $I11, 0, rx1634_fail3828
    repr_bind_attr_int rx1634_cur, rx1634_curclass, "$!pos", rx1634_pos
    $P11 = rx1634_cur."LANG"("MAIN", "statement")
    repr_get_attr_int $I11, $P11, rx1634_curclass, "$!pos"
    lt $I11, 0, rx1634_fail3828
    nqp_rxmark rx1634_bstack, rxsubrule1638_pass3845, -1, 0
  rxsubrule1638_pass3845:
    rx1634_cstack = rx1634_cur."!cursor_capture"($P11, "statement")
    repr_get_attr_int rx1634_pos, $P11, rx1634_curclass, "$!pos"
    repr_bind_attr_int rx1634_cur, rx1634_curclass, "$!pos", rx1634_pos
    $P11 = rx1634_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1634_curclass, "$!pos"
    lt $I11, 0, rx1634_fail3828
    repr_get_attr_int rx1634_pos, $P11, rx1634_curclass, "$!pos"
    add $I11, rx1634_pos, 1
    gt $I11, rx1634_eos, rx1634_fail3828
    substr $S10, rx1634_tgt, rx1634_pos, 1
    ne $S10, ucs4:";", rx1634_fail3828
    add rx1634_pos, 1
    rx1634_cur."!cursor_pass"(rx1634_pos, "metachar:sym<:my>", 'backtrack'=>1)
    .return (rx1634_cur)
  rx1634_restart3827:
    repr_get_attr_obj rx1634_cstack, rx1634_cur, rx1634_curclass, "$!cstack"
  rx1634_fail3828:
    unless rx1634_bstack, rx1634_done3826
    pop $I19, rx1634_bstack
    if_null rx1634_cstack, rx1634_cstack_done3831
    unless rx1634_cstack, rx1634_cstack_done3831
    dec $I19
    set $P11, rx1634_cstack[$I19]
  rx1634_cstack_done3831:
    pop rx1634_rep, rx1634_bstack
    pop rx1634_pos, rx1634_bstack
    pop $I19, rx1634_bstack
    lt rx1634_pos, -1, rx1634_done3826
    lt rx1634_pos, 0, rx1634_fail3828
    eq $I19, 0, rx1634_fail3828
    nqp_islist $I20, rx1634_cstack
    unless $I20, rx1634_jump3829
    elements $I18, rx1634_bstack
    le $I18, 0, rx1634_cut3830
    dec $I18
    set $I18, rx1634_bstack[$I18]
  rx1634_cut3830:
    assign rx1634_cstack, $I18
  rx1634_jump3829:
    jump $I19
  rx1634_done3826:
    rx1634_cur."!cursor_fail"()
    .return (rx1634_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_230_1367388600.55005") :anon :lex :outer("cuid_229_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1636_start
    .local string rx1636_tgt
    .local int rx1636_pos
    .local int rx1636_off
    .local int rx1636_eos
    .local int rx1636_rep
    .local pmc rx1636_cur
    .local pmc rx1636_curclass
    .local pmc rx1636_bstack
    .local pmc rx1636_cstack
    rx1636_start = self."!cursor_start_all"()
    set rx1636_cur, rx1636_start[0]
    set rx1636_tgt, rx1636_start[1]
    set rx1636_pos, rx1636_start[2]
    set rx1636_curclass, rx1636_start[3]
    set rx1636_bstack, rx1636_start[4]
    set $I19, rx1636_start[5]
    store_lex unicode:"$\x{a2}", rx1636_cur
    length rx1636_eos, rx1636_tgt
    eq $I19, 1, rx1636_restart3837
    gt rx1636_pos, rx1636_eos, rx1636_fail3838
    repr_get_attr_int $I11, self, rx1636_curclass, "$!from"
    ne $I11, -1, rxscan1637_done3844
    goto rxscan1637_scan3843
  rxscan1637_loop3842:
    inc rx1636_pos
    gt rx1636_pos, rx1636_eos, rx1636_fail3838
    repr_bind_attr_int rx1636_cur, rx1636_curclass, "$!from", rx1636_pos
  rxscan1637_scan3843:
    nqp_rxmark rx1636_bstack, rxscan1637_loop3842, rx1636_pos, 0
  rxscan1637_done3844:
    add $I11, rx1636_pos, 2
    gt $I11, rx1636_eos, rx1636_fail3838
    substr $S10, rx1636_tgt, rx1636_pos, 2
    ne $S10, ucs4:"my", rx1636_fail3838
    add rx1636_pos, 2
    rx1636_cur."!cursor_pass"(rx1636_pos, 'backtrack'=>1)
    .return (rx1636_cur)
  rx1636_restart3837:
    repr_get_attr_obj rx1636_cstack, rx1636_cur, rx1636_curclass, "$!cstack"
  rx1636_fail3838:
    unless rx1636_bstack, rx1636_done3836
    pop $I19, rx1636_bstack
    if_null rx1636_cstack, rx1636_cstack_done3841
    unless rx1636_cstack, rx1636_cstack_done3841
    dec $I19
    set $P11, rx1636_cstack[$I19]
  rx1636_cstack_done3841:
    pop rx1636_rep, rx1636_bstack
    pop rx1636_pos, rx1636_bstack
    pop $I19, rx1636_bstack
    lt rx1636_pos, -1, rx1636_done3836
    lt rx1636_pos, 0, rx1636_fail3838
    eq $I19, 0, rx1636_fail3838
    nqp_islist $I20, rx1636_cstack
    unless $I20, rx1636_jump3839
    elements $I18, rx1636_bstack
    le $I18, 0, rx1636_cut3840
    dec $I18
    set $I18, rx1636_bstack[$I18]
  rx1636_cut3840:
    assign rx1636_cstack, $I18
  rx1636_jump3839:
    jump $I19
  rx1636_done3836:
    rx1636_cur."!cursor_fail"()
    .return (rx1636_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<{ }>" :subid("cuid_231_1367388600.55005") :anon :lex :outer("cuid_417_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1431
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1640_start
    .local string rx1640_tgt
    .local int rx1640_pos
    .local int rx1640_off
    .local int rx1640_eos
    .local int rx1640_rep
    .local pmc rx1640_cur
    .local pmc rx1640_curclass
    .local pmc rx1640_bstack
    .local pmc rx1640_cstack
    rx1640_start = self."!cursor_start_all"()
    set rx1640_cur, rx1640_start[0]
    set rx1640_tgt, rx1640_start[1]
    set rx1640_pos, rx1640_start[2]
    set rx1640_curclass, rx1640_start[3]
    set rx1640_bstack, rx1640_start[4]
    set $I19, rx1640_start[5]
    store_lex unicode:"$\x{a2}", rx1640_cur
    length rx1640_eos, rx1640_tgt
    eq $I19, 1, rx1640_restart3849
    gt rx1640_pos, rx1640_eos, rx1640_fail3850
    repr_get_attr_int $I11, self, rx1640_curclass, "$!from"
    ne $I11, -1, rxscan1641_done3856
    goto rxscan1641_scan3855
  rxscan1641_loop3854:
    inc rx1640_pos
    gt rx1640_pos, rx1640_eos, rx1640_fail3850
    repr_bind_attr_int rx1640_cur, rx1640_curclass, "$!from", rx1640_pos
  rxscan1641_scan3855:
    nqp_rxmark rx1640_bstack, rxscan1641_loop3854, rx1640_pos, 0
  rxscan1641_done3856:
    ge rx1640_pos, rx1640_eos, rx1640_fail3850
    substr $S11, rx1640_tgt, rx1640_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx1640_fail3850
    repr_bind_attr_int rx1640_cur, rx1640_curclass, "$!pos", rx1640_pos
    $P11 = rx1640_cur."codeblock"()
    repr_get_attr_int $I11, $P11, rx1640_curclass, "$!pos"
    lt $I11, 0, rx1640_fail3850
    nqp_rxmark rx1640_bstack, rxsubrule1642_pass3857, -1, 0
  rxsubrule1642_pass3857:
    rx1640_cstack = rx1640_cur."!cursor_capture"($P11, "codeblock")
    repr_get_attr_int rx1640_pos, $P11, rx1640_curclass, "$!pos"
    rx1640_cur."!cursor_pass"(rx1640_pos, "metachar:sym<{ }>", 'backtrack'=>1)
    .return (rx1640_cur)
  rx1640_restart3849:
    repr_get_attr_obj rx1640_cstack, rx1640_cur, rx1640_curclass, "$!cstack"
  rx1640_fail3850:
    unless rx1640_bstack, rx1640_done3848
    pop $I19, rx1640_bstack
    if_null rx1640_cstack, rx1640_cstack_done3853
    unless rx1640_cstack, rx1640_cstack_done3853
    dec $I19
    set $P11, rx1640_cstack[$I19]
  rx1640_cstack_done3853:
    pop rx1640_rep, rx1640_bstack
    pop rx1640_pos, rx1640_bstack
    pop $I19, rx1640_bstack
    lt rx1640_pos, -1, rx1640_done3848
    lt rx1640_pos, 0, rx1640_fail3850
    eq $I19, 0, rx1640_fail3850
    nqp_islist $I20, rx1640_cstack
    unless $I20, rx1640_jump3851
    elements $I18, rx1640_bstack
    le $I18, 0, rx1640_cut3852
    dec $I18
    set $I18, rx1640_bstack[$I18]
  rx1640_cut3852:
    assign rx1640_cstack, $I18
  rx1640_jump3851:
    jump $I19
  rx1640_done3848:
    rx1640_cur."!cursor_fail"()
    .return (rx1640_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<nqpvar>" :subid("cuid_232_1367388600.55005") :anon :lex :outer("cuid_417_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1435
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_233_1367388600.55005' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1643_start
    .local string rx1643_tgt
    .local int rx1643_pos
    .local int rx1643_off
    .local int rx1643_eos
    .local int rx1643_rep
    .local pmc rx1643_cur
    .local pmc rx1643_curclass
    .local pmc rx1643_bstack
    .local pmc rx1643_cstack
    rx1643_start = self."!cursor_start_all"()
    set rx1643_cur, rx1643_start[0]
    set rx1643_tgt, rx1643_start[1]
    set rx1643_pos, rx1643_start[2]
    set rx1643_curclass, rx1643_start[3]
    set rx1643_bstack, rx1643_start[4]
    set $I19, rx1643_start[5]
    store_lex unicode:"$\x{a2}", rx1643_cur
    length rx1643_eos, rx1643_tgt
    eq $I19, 1, rx1643_restart3860
    gt rx1643_pos, rx1643_eos, rx1643_fail3861
    repr_get_attr_int $I11, self, rx1643_curclass, "$!from"
    ne $I11, -1, rxscan1644_done3867
    goto rxscan1644_scan3866
  rxscan1644_loop3865:
    inc rx1643_pos
    gt rx1643_pos, rx1643_eos, rx1643_fail3861
    repr_bind_attr_int rx1643_cur, rx1643_curclass, "$!from", rx1643_pos
  rxscan1644_scan3866:
    nqp_rxmark rx1643_bstack, rxscan1644_loop3865, rx1643_pos, 0
  rxscan1644_done3867:
    .const 'Sub' $P5001 = 'cuid_233_1367388600.55005' 
    capture_lex $P5001
    repr_bind_attr_int rx1643_cur, rx1643_curclass, "$!pos", rx1643_pos
    $P11 = rx1643_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1643_curclass, "$!pos"
    lt $I11, 0, rx1643_fail3861
    repr_bind_attr_int rx1643_cur, rx1643_curclass, "$!pos", rx1643_pos
    $P11 = rx1643_cur."LANG"("MAIN", "variable")
    repr_get_attr_int $I11, $P11, rx1643_curclass, "$!pos"
    lt $I11, 0, rx1643_fail3861
    nqp_rxmark rx1643_bstack, rxsubrule1649_pass3882, -1, 0
  rxsubrule1649_pass3882:
    rx1643_cstack = rx1643_cur."!cursor_capture"($P11, "var")
    repr_get_attr_int rx1643_pos, $P11, rx1643_curclass, "$!pos"
    rx1643_cur."!cursor_pass"(rx1643_pos, "metachar:sym<nqpvar>", 'backtrack'=>1)
    .return (rx1643_cur)
  rx1643_restart3860:
    repr_get_attr_obj rx1643_cstack, rx1643_cur, rx1643_curclass, "$!cstack"
  rx1643_fail3861:
    unless rx1643_bstack, rx1643_done3859
    pop $I19, rx1643_bstack
    if_null rx1643_cstack, rx1643_cstack_done3864
    unless rx1643_cstack, rx1643_cstack_done3864
    dec $I19
    set $P11, rx1643_cstack[$I19]
  rx1643_cstack_done3864:
    pop rx1643_rep, rx1643_bstack
    pop rx1643_pos, rx1643_bstack
    pop $I19, rx1643_bstack
    lt rx1643_pos, -1, rx1643_done3859
    lt rx1643_pos, 0, rx1643_fail3861
    eq $I19, 0, rx1643_fail3861
    nqp_islist $I20, rx1643_cstack
    unless $I20, rx1643_jump3862
    elements $I18, rx1643_bstack
    le $I18, 0, rx1643_cut3863
    dec $I18
    set $I18, rx1643_bstack[$I18]
  rx1643_cut3863:
    assign rx1643_cstack, $I18
  rx1643_jump3862:
    jump $I19
  rx1643_done3859:
    rx1643_cur."!cursor_fail"()
    .return (rx1643_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_233_1367388600.55005") :anon :lex :outer("cuid_232_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1645_start
    .local string rx1645_tgt
    .local int rx1645_pos
    .local int rx1645_off
    .local int rx1645_eos
    .local int rx1645_rep
    .local pmc rx1645_cur
    .local pmc rx1645_curclass
    .local pmc rx1645_bstack
    .local pmc rx1645_cstack
    rx1645_start = self."!cursor_start_all"()
    set rx1645_cur, rx1645_start[0]
    set rx1645_tgt, rx1645_start[1]
    set rx1645_pos, rx1645_start[2]
    set rx1645_curclass, rx1645_start[3]
    set rx1645_bstack, rx1645_start[4]
    set $I19, rx1645_start[5]
    store_lex unicode:"$\x{a2}", rx1645_cur
    length rx1645_eos, rx1645_tgt
    eq $I19, 1, rx1645_restart3870
    gt rx1645_pos, rx1645_eos, rx1645_fail3871
    repr_get_attr_int $I11, self, rx1645_curclass, "$!from"
    ne $I11, -1, rxscan1646_done3877
    goto rxscan1646_scan3876
  rxscan1646_loop3875:
    inc rx1645_pos
    gt rx1645_pos, rx1645_eos, rx1645_fail3871
    repr_bind_attr_int rx1645_cur, rx1645_curclass, "$!from", rx1645_pos
  rxscan1646_scan3876:
    nqp_rxmark rx1645_bstack, rxscan1646_loop3875, rx1645_pos, 0
  rxscan1646_done3877:
    repr_bind_attr_int rx1645_cur, rx1645_curclass, "$!pos", rx1645_pos
    $P11 = rx1645_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx1645_curclass, "$!pos"
    lt $I11, 0, rx1645_fail3871
    nqp_rxmark rx1645_bstack, rxsubrule1647_pass3878, -1, 0
  rxsubrule1647_pass3878:
    rx1645_cstack = rx1645_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx1645_pos, $P11, rx1645_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1648_03880
    nqp_push_label $P11, alt1648_13881
    nqp_rxmark rx1645_bstack, alt1648_end3879, -1, 0
    rx1645_cur."!alt"(rx1645_pos, "alt_nfa__39_1367388605.34778", $P11)
    goto rx1645_fail3871
  alt1648_03880:
    ge rx1645_pos, rx1645_eos, rx1645_fail3871
    is_cclass $I11, .CCLASS_WORD, rx1645_tgt, rx1645_pos
    if $I11, rx1645_fail3871
    add rx1645_pos, 1
    ge rx1645_pos, rx1645_eos, rx1645_fail3871
    is_cclass $I11, .CCLASS_WORD, rx1645_tgt, rx1645_pos
    unless $I11, rx1645_fail3871
    add rx1645_pos, 1
    goto alt1648_end3879
  alt1648_13881:
    ge rx1645_pos, rx1645_eos, rx1645_fail3871
    is_cclass $I11, .CCLASS_WORD, rx1645_tgt, rx1645_pos
    unless $I11, rx1645_fail3871
    add rx1645_pos, 1
    goto alt1648_end3879
  alt1648_end3879:
    nqp_rxcommit rx1645_bstack, alt1648_end3879
    rx1645_cur."!cursor_pass"(rx1645_pos, 'backtrack'=>1)
    .return (rx1645_cur)
  rx1645_restart3870:
    repr_get_attr_obj rx1645_cstack, rx1645_cur, rx1645_curclass, "$!cstack"
  rx1645_fail3871:
    unless rx1645_bstack, rx1645_done3869
    pop $I19, rx1645_bstack
    if_null rx1645_cstack, rx1645_cstack_done3874
    unless rx1645_cstack, rx1645_cstack_done3874
    dec $I19
    set $P11, rx1645_cstack[$I19]
  rx1645_cstack_done3874:
    pop rx1645_rep, rx1645_bstack
    pop rx1645_pos, rx1645_bstack
    pop $I19, rx1645_bstack
    lt rx1645_pos, -1, rx1645_done3869
    lt rx1645_pos, 0, rx1645_fail3871
    eq $I19, 0, rx1645_fail3871
    nqp_islist $I20, rx1645_cstack
    unless $I20, rx1645_jump3872
    elements $I18, rx1645_bstack
    le $I18, 0, rx1645_cut3873
    dec $I18
    set $I18, rx1645_bstack[$I18]
  rx1645_cut3873:
    assign rx1645_cstack, $I18
  rx1645_jump3872:
    jump $I19
  rx1645_done3869:
    rx1645_cur."!cursor_fail"()
    .return (rx1645_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<{ }>" :subid("cuid_234_1367388600.55005") :anon :lex :outer("cuid_417_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1439
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1650_start
    .local string rx1650_tgt
    .local int rx1650_pos
    .local int rx1650_off
    .local int rx1650_eos
    .local int rx1650_rep
    .local pmc rx1650_cur
    .local pmc rx1650_curclass
    .local pmc rx1650_bstack
    .local pmc rx1650_cstack
    rx1650_start = self."!cursor_start_all"()
    set rx1650_cur, rx1650_start[0]
    set rx1650_tgt, rx1650_start[1]
    set rx1650_pos, rx1650_start[2]
    set rx1650_curclass, rx1650_start[3]
    set rx1650_bstack, rx1650_start[4]
    set $I19, rx1650_start[5]
    store_lex unicode:"$\x{a2}", rx1650_cur
    length rx1650_eos, rx1650_tgt
    eq $I19, 1, rx1650_restart3885
    gt rx1650_pos, rx1650_eos, rx1650_fail3886
    repr_get_attr_int $I11, self, rx1650_curclass, "$!from"
    ne $I11, -1, rxscan1651_done3892
    goto rxscan1651_scan3891
  rxscan1651_loop3890:
    inc rx1650_pos
    gt rx1650_pos, rx1650_eos, rx1650_fail3886
    repr_bind_attr_int rx1650_cur, rx1650_curclass, "$!from", rx1650_pos
  rxscan1651_scan3891:
    nqp_rxmark rx1650_bstack, rxscan1651_loop3890, rx1650_pos, 0
  rxscan1651_done3892:
    ge rx1650_pos, rx1650_eos, rx1650_fail3886
    substr $S11, rx1650_tgt, rx1650_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx1650_fail3886
    repr_bind_attr_int rx1650_cur, rx1650_curclass, "$!pos", rx1650_pos
    $P11 = rx1650_cur."codeblock"()
    repr_get_attr_int $I11, $P11, rx1650_curclass, "$!pos"
    lt $I11, 0, rx1650_fail3886
    nqp_rxmark rx1650_bstack, rxsubrule1652_pass3893, -1, 0
  rxsubrule1652_pass3893:
    rx1650_cstack = rx1650_cur."!cursor_capture"($P11, "codeblock")
    repr_get_attr_int rx1650_pos, $P11, rx1650_curclass, "$!pos"
    rx1650_cur."!cursor_pass"(rx1650_pos, "assertion:sym<{ }>", 'backtrack'=>1)
    .return (rx1650_cur)
  rx1650_restart3885:
    repr_get_attr_obj rx1650_cstack, rx1650_cur, rx1650_curclass, "$!cstack"
  rx1650_fail3886:
    unless rx1650_bstack, rx1650_done3884
    pop $I19, rx1650_bstack
    if_null rx1650_cstack, rx1650_cstack_done3889
    unless rx1650_cstack, rx1650_cstack_done3889
    dec $I19
    set $P11, rx1650_cstack[$I19]
  rx1650_cstack_done3889:
    pop rx1650_rep, rx1650_bstack
    pop rx1650_pos, rx1650_bstack
    pop $I19, rx1650_bstack
    lt rx1650_pos, -1, rx1650_done3884
    lt rx1650_pos, 0, rx1650_fail3886
    eq $I19, 0, rx1650_fail3886
    nqp_islist $I20, rx1650_cstack
    unless $I20, rx1650_jump3887
    elements $I18, rx1650_bstack
    le $I18, 0, rx1650_cut3888
    dec $I18
    set $I18, rx1650_bstack[$I18]
  rx1650_cut3888:
    assign rx1650_cstack, $I18
  rx1650_jump3887:
    jump $I19
  rx1650_done3884:
    rx1650_cur."!cursor_fail"()
    .return (rx1650_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<?>" :subid("cuid_235_1367388600.55005") :anon :lex :outer("cuid_417_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1443
    .param pmc _lex_param_0 
    .const 'Sub' $P5003 = 'cuid_236_1367388600.55005' 
    capture_lex $P5003 
    .const 'Sub' $P5003 = 'cuid_237_1367388600.55005' 
    capture_lex $P5003 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1653_start
    .local string rx1653_tgt
    .local int rx1653_pos
    .local int rx1653_off
    .local int rx1653_eos
    .local int rx1653_rep
    .local pmc rx1653_cur
    .local pmc rx1653_curclass
    .local pmc rx1653_bstack
    .local pmc rx1653_cstack
    rx1653_start = self."!cursor_start_all"()
    set rx1653_cur, rx1653_start[0]
    set rx1653_tgt, rx1653_start[1]
    set rx1653_pos, rx1653_start[2]
    set rx1653_curclass, rx1653_start[3]
    set rx1653_bstack, rx1653_start[4]
    set $I19, rx1653_start[5]
    store_lex unicode:"$\x{a2}", rx1653_cur
    length rx1653_eos, rx1653_tgt
    eq $I19, 1, rx1653_restart3896
    gt rx1653_pos, rx1653_eos, rx1653_fail3897
    repr_get_attr_int $I11, self, rx1653_curclass, "$!from"
    ne $I11, -1, rxscan1654_done3903
    goto rxscan1654_scan3902
  rxscan1654_loop3901:
    inc rx1653_pos
    gt rx1653_pos, rx1653_eos, rx1653_fail3897
    repr_bind_attr_int rx1653_cur, rx1653_curclass, "$!from", rx1653_pos
  rxscan1654_scan3902:
    nqp_rxmark rx1653_bstack, rxscan1654_loop3901, rx1653_pos, 0
  rxscan1654_done3903:
    add $I11, rx1653_pos, 1
    gt $I11, rx1653_eos, rx1653_fail3897
    substr $S10, rx1653_tgt, rx1653_pos, 1
    ne $S10, ucs4:"?", rx1653_fail3897
    add rx1653_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1655_03905
    nqp_push_label $P11, alt1655_13916
    nqp_rxmark rx1653_bstack, alt1655_end3904, -1, 0
    rx1653_cur."!alt"(rx1653_pos, "alt_nfa__40_1367388605.37939", $P11)
    goto rx1653_fail3897
  alt1655_03905:
    .const 'Sub' $P5001 = 'cuid_236_1367388600.55005' 
    capture_lex $P5001
    repr_bind_attr_int rx1653_cur, rx1653_curclass, "$!pos", rx1653_pos
    $P11 = rx1653_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1653_curclass, "$!pos"
    lt $I11, 0, rx1653_fail3897
    goto alt1655_end3904
  alt1655_13916:
    .const 'Sub' $P5002 = 'cuid_237_1367388600.55005' 
    capture_lex $P5002
    repr_bind_attr_int rx1653_cur, rx1653_curclass, "$!pos", rx1653_pos
    $P11 = rx1653_cur."before"($P5002)
    repr_get_attr_int $I11, $P11, rx1653_curclass, "$!pos"
    ge $I11, 0, rx1653_fail3897
    repr_bind_attr_int rx1653_cur, rx1653_curclass, "$!pos", rx1653_pos
    $P11 = rx1653_cur."assertion"()
    repr_get_attr_int $I11, $P11, rx1653_curclass, "$!pos"
    lt $I11, 0, rx1653_fail3897
    nqp_rxmark rx1653_bstack, rxsubrule1660_pass3927, -1, 0
  rxsubrule1660_pass3927:
    rx1653_cstack = rx1653_cur."!cursor_capture"($P11, "assertion")
    repr_get_attr_int rx1653_pos, $P11, rx1653_curclass, "$!pos"
    goto alt1655_end3904
  alt1655_end3904:
    nqp_rxcommit rx1653_bstack, alt1655_end3904
    rx1653_cur."!cursor_pass"(rx1653_pos, "assertion:sym<?>", 'backtrack'=>1)
    .return (rx1653_cur)
  rx1653_restart3896:
    repr_get_attr_obj rx1653_cstack, rx1653_cur, rx1653_curclass, "$!cstack"
  rx1653_fail3897:
    unless rx1653_bstack, rx1653_done3895
    pop $I19, rx1653_bstack
    if_null rx1653_cstack, rx1653_cstack_done3900
    unless rx1653_cstack, rx1653_cstack_done3900
    dec $I19
    set $P11, rx1653_cstack[$I19]
  rx1653_cstack_done3900:
    pop rx1653_rep, rx1653_bstack
    pop rx1653_pos, rx1653_bstack
    pop $I19, rx1653_bstack
    lt rx1653_pos, -1, rx1653_done3895
    lt rx1653_pos, 0, rx1653_fail3897
    eq $I19, 0, rx1653_fail3897
    nqp_islist $I20, rx1653_cstack
    unless $I20, rx1653_jump3898
    elements $I18, rx1653_bstack
    le $I18, 0, rx1653_cut3899
    dec $I18
    set $I18, rx1653_bstack[$I18]
  rx1653_cut3899:
    assign rx1653_cstack, $I18
  rx1653_jump3898:
    jump $I19
  rx1653_done3895:
    rx1653_cur."!cursor_fail"()
    .return (rx1653_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_236_1367388600.55005") :anon :lex :outer("cuid_235_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1656_start
    .local string rx1656_tgt
    .local int rx1656_pos
    .local int rx1656_off
    .local int rx1656_eos
    .local int rx1656_rep
    .local pmc rx1656_cur
    .local pmc rx1656_curclass
    .local pmc rx1656_bstack
    .local pmc rx1656_cstack
    rx1656_start = self."!cursor_start_all"()
    set rx1656_cur, rx1656_start[0]
    set rx1656_tgt, rx1656_start[1]
    set rx1656_pos, rx1656_start[2]
    set rx1656_curclass, rx1656_start[3]
    set rx1656_bstack, rx1656_start[4]
    set $I19, rx1656_start[5]
    store_lex unicode:"$\x{a2}", rx1656_cur
    length rx1656_eos, rx1656_tgt
    eq $I19, 1, rx1656_restart3908
    gt rx1656_pos, rx1656_eos, rx1656_fail3909
    repr_get_attr_int $I11, self, rx1656_curclass, "$!from"
    ne $I11, -1, rxscan1657_done3915
    goto rxscan1657_scan3914
  rxscan1657_loop3913:
    inc rx1656_pos
    gt rx1656_pos, rx1656_eos, rx1656_fail3909
    repr_bind_attr_int rx1656_cur, rx1656_curclass, "$!from", rx1656_pos
  rxscan1657_scan3914:
    nqp_rxmark rx1656_bstack, rxscan1657_loop3913, rx1656_pos, 0
  rxscan1657_done3915:
    add $I11, rx1656_pos, 1
    gt $I11, rx1656_eos, rx1656_fail3909
    substr $S10, rx1656_tgt, rx1656_pos, 1
    ne $S10, ucs4:">", rx1656_fail3909
    add rx1656_pos, 1
    rx1656_cur."!cursor_pass"(rx1656_pos, 'backtrack'=>1)
    .return (rx1656_cur)
  rx1656_restart3908:
    repr_get_attr_obj rx1656_cstack, rx1656_cur, rx1656_curclass, "$!cstack"
  rx1656_fail3909:
    unless rx1656_bstack, rx1656_done3907
    pop $I19, rx1656_bstack
    if_null rx1656_cstack, rx1656_cstack_done3912
    unless rx1656_cstack, rx1656_cstack_done3912
    dec $I19
    set $P11, rx1656_cstack[$I19]
  rx1656_cstack_done3912:
    pop rx1656_rep, rx1656_bstack
    pop rx1656_pos, rx1656_bstack
    pop $I19, rx1656_bstack
    lt rx1656_pos, -1, rx1656_done3907
    lt rx1656_pos, 0, rx1656_fail3909
    eq $I19, 0, rx1656_fail3909
    nqp_islist $I20, rx1656_cstack
    unless $I20, rx1656_jump3910
    elements $I18, rx1656_bstack
    le $I18, 0, rx1656_cut3911
    dec $I18
    set $I18, rx1656_bstack[$I18]
  rx1656_cut3911:
    assign rx1656_cstack, $I18
  rx1656_jump3910:
    jump $I19
  rx1656_done3907:
    rx1656_cur."!cursor_fail"()
    .return (rx1656_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_237_1367388600.55005") :anon :lex :outer("cuid_235_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1658_start
    .local string rx1658_tgt
    .local int rx1658_pos
    .local int rx1658_off
    .local int rx1658_eos
    .local int rx1658_rep
    .local pmc rx1658_cur
    .local pmc rx1658_curclass
    .local pmc rx1658_bstack
    .local pmc rx1658_cstack
    rx1658_start = self."!cursor_start_all"()
    set rx1658_cur, rx1658_start[0]
    set rx1658_tgt, rx1658_start[1]
    set rx1658_pos, rx1658_start[2]
    set rx1658_curclass, rx1658_start[3]
    set rx1658_bstack, rx1658_start[4]
    set $I19, rx1658_start[5]
    store_lex unicode:"$\x{a2}", rx1658_cur
    length rx1658_eos, rx1658_tgt
    eq $I19, 1, rx1658_restart3919
    gt rx1658_pos, rx1658_eos, rx1658_fail3920
    repr_get_attr_int $I11, self, rx1658_curclass, "$!from"
    ne $I11, -1, rxscan1659_done3926
    goto rxscan1659_scan3925
  rxscan1659_loop3924:
    inc rx1658_pos
    gt rx1658_pos, rx1658_eos, rx1658_fail3920
    repr_bind_attr_int rx1658_cur, rx1658_curclass, "$!from", rx1658_pos
  rxscan1659_scan3925:
    nqp_rxmark rx1658_bstack, rxscan1659_loop3924, rx1658_pos, 0
  rxscan1659_done3926:
    add $I11, rx1658_pos, 1
    gt $I11, rx1658_eos, rx1658_fail3920
    substr $S10, rx1658_tgt, rx1658_pos, 1
    ne $S10, ucs4:"{", rx1658_fail3920
    add rx1658_pos, 1
    rx1658_cur."!cursor_pass"(rx1658_pos, 'backtrack'=>1)
    .return (rx1658_cur)
  rx1658_restart3919:
    repr_get_attr_obj rx1658_cstack, rx1658_cur, rx1658_curclass, "$!cstack"
  rx1658_fail3920:
    unless rx1658_bstack, rx1658_done3918
    pop $I19, rx1658_bstack
    if_null rx1658_cstack, rx1658_cstack_done3923
    unless rx1658_cstack, rx1658_cstack_done3923
    dec $I19
    set $P11, rx1658_cstack[$I19]
  rx1658_cstack_done3923:
    pop rx1658_rep, rx1658_bstack
    pop rx1658_pos, rx1658_bstack
    pop $I19, rx1658_bstack
    lt rx1658_pos, -1, rx1658_done3918
    lt rx1658_pos, 0, rx1658_fail3920
    eq $I19, 0, rx1658_fail3920
    nqp_islist $I20, rx1658_cstack
    unless $I20, rx1658_jump3921
    elements $I18, rx1658_bstack
    le $I18, 0, rx1658_cut3922
    dec $I18
    set $I18, rx1658_bstack[$I18]
  rx1658_cut3922:
    assign rx1658_cstack, $I18
  rx1658_jump3921:
    jump $I19
  rx1658_done3918:
    rx1658_cur."!cursor_fail"()
    .return (rx1658_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<!>" :subid("cuid_238_1367388600.55005") :anon :lex :outer("cuid_417_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1444
    .param pmc _lex_param_0 
    .const 'Sub' $P5003 = 'cuid_239_1367388600.55005' 
    capture_lex $P5003 
    .const 'Sub' $P5003 = 'cuid_240_1367388600.55005' 
    capture_lex $P5003 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1661_start
    .local string rx1661_tgt
    .local int rx1661_pos
    .local int rx1661_off
    .local int rx1661_eos
    .local int rx1661_rep
    .local pmc rx1661_cur
    .local pmc rx1661_curclass
    .local pmc rx1661_bstack
    .local pmc rx1661_cstack
    rx1661_start = self."!cursor_start_all"()
    set rx1661_cur, rx1661_start[0]
    set rx1661_tgt, rx1661_start[1]
    set rx1661_pos, rx1661_start[2]
    set rx1661_curclass, rx1661_start[3]
    set rx1661_bstack, rx1661_start[4]
    set $I19, rx1661_start[5]
    store_lex unicode:"$\x{a2}", rx1661_cur
    length rx1661_eos, rx1661_tgt
    eq $I19, 1, rx1661_restart3930
    gt rx1661_pos, rx1661_eos, rx1661_fail3931
    repr_get_attr_int $I11, self, rx1661_curclass, "$!from"
    ne $I11, -1, rxscan1662_done3937
    goto rxscan1662_scan3936
  rxscan1662_loop3935:
    inc rx1661_pos
    gt rx1661_pos, rx1661_eos, rx1661_fail3931
    repr_bind_attr_int rx1661_cur, rx1661_curclass, "$!from", rx1661_pos
  rxscan1662_scan3936:
    nqp_rxmark rx1661_bstack, rxscan1662_loop3935, rx1661_pos, 0
  rxscan1662_done3937:
    add $I11, rx1661_pos, 1
    gt $I11, rx1661_eos, rx1661_fail3931
    substr $S10, rx1661_tgt, rx1661_pos, 1
    ne $S10, ucs4:"!", rx1661_fail3931
    add rx1661_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1663_03939
    nqp_push_label $P11, alt1663_13950
    nqp_rxmark rx1661_bstack, alt1663_end3938, -1, 0
    rx1661_cur."!alt"(rx1661_pos, "alt_nfa__41_1367388605.3966", $P11)
    goto rx1661_fail3931
  alt1663_03939:
    .const 'Sub' $P5001 = 'cuid_239_1367388600.55005' 
    capture_lex $P5001
    repr_bind_attr_int rx1661_cur, rx1661_curclass, "$!pos", rx1661_pos
    $P11 = rx1661_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1661_curclass, "$!pos"
    lt $I11, 0, rx1661_fail3931
    goto alt1663_end3938
  alt1663_13950:
    .const 'Sub' $P5002 = 'cuid_240_1367388600.55005' 
    capture_lex $P5002
    repr_bind_attr_int rx1661_cur, rx1661_curclass, "$!pos", rx1661_pos
    $P11 = rx1661_cur."before"($P5002)
    repr_get_attr_int $I11, $P11, rx1661_curclass, "$!pos"
    ge $I11, 0, rx1661_fail3931
    repr_bind_attr_int rx1661_cur, rx1661_curclass, "$!pos", rx1661_pos
    $P11 = rx1661_cur."assertion"()
    repr_get_attr_int $I11, $P11, rx1661_curclass, "$!pos"
    lt $I11, 0, rx1661_fail3931
    nqp_rxmark rx1661_bstack, rxsubrule1668_pass3961, -1, 0
  rxsubrule1668_pass3961:
    rx1661_cstack = rx1661_cur."!cursor_capture"($P11, "assertion")
    repr_get_attr_int rx1661_pos, $P11, rx1661_curclass, "$!pos"
    goto alt1663_end3938
  alt1663_end3938:
    nqp_rxcommit rx1661_bstack, alt1663_end3938
    rx1661_cur."!cursor_pass"(rx1661_pos, "assertion:sym<!>", 'backtrack'=>1)
    .return (rx1661_cur)
  rx1661_restart3930:
    repr_get_attr_obj rx1661_cstack, rx1661_cur, rx1661_curclass, "$!cstack"
  rx1661_fail3931:
    unless rx1661_bstack, rx1661_done3929
    pop $I19, rx1661_bstack
    if_null rx1661_cstack, rx1661_cstack_done3934
    unless rx1661_cstack, rx1661_cstack_done3934
    dec $I19
    set $P11, rx1661_cstack[$I19]
  rx1661_cstack_done3934:
    pop rx1661_rep, rx1661_bstack
    pop rx1661_pos, rx1661_bstack
    pop $I19, rx1661_bstack
    lt rx1661_pos, -1, rx1661_done3929
    lt rx1661_pos, 0, rx1661_fail3931
    eq $I19, 0, rx1661_fail3931
    nqp_islist $I20, rx1661_cstack
    unless $I20, rx1661_jump3932
    elements $I18, rx1661_bstack
    le $I18, 0, rx1661_cut3933
    dec $I18
    set $I18, rx1661_bstack[$I18]
  rx1661_cut3933:
    assign rx1661_cstack, $I18
  rx1661_jump3932:
    jump $I19
  rx1661_done3929:
    rx1661_cur."!cursor_fail"()
    .return (rx1661_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_239_1367388600.55005") :anon :lex :outer("cuid_238_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1664_start
    .local string rx1664_tgt
    .local int rx1664_pos
    .local int rx1664_off
    .local int rx1664_eos
    .local int rx1664_rep
    .local pmc rx1664_cur
    .local pmc rx1664_curclass
    .local pmc rx1664_bstack
    .local pmc rx1664_cstack
    rx1664_start = self."!cursor_start_all"()
    set rx1664_cur, rx1664_start[0]
    set rx1664_tgt, rx1664_start[1]
    set rx1664_pos, rx1664_start[2]
    set rx1664_curclass, rx1664_start[3]
    set rx1664_bstack, rx1664_start[4]
    set $I19, rx1664_start[5]
    store_lex unicode:"$\x{a2}", rx1664_cur
    length rx1664_eos, rx1664_tgt
    eq $I19, 1, rx1664_restart3942
    gt rx1664_pos, rx1664_eos, rx1664_fail3943
    repr_get_attr_int $I11, self, rx1664_curclass, "$!from"
    ne $I11, -1, rxscan1665_done3949
    goto rxscan1665_scan3948
  rxscan1665_loop3947:
    inc rx1664_pos
    gt rx1664_pos, rx1664_eos, rx1664_fail3943
    repr_bind_attr_int rx1664_cur, rx1664_curclass, "$!from", rx1664_pos
  rxscan1665_scan3948:
    nqp_rxmark rx1664_bstack, rxscan1665_loop3947, rx1664_pos, 0
  rxscan1665_done3949:
    add $I11, rx1664_pos, 1
    gt $I11, rx1664_eos, rx1664_fail3943
    substr $S10, rx1664_tgt, rx1664_pos, 1
    ne $S10, ucs4:">", rx1664_fail3943
    add rx1664_pos, 1
    rx1664_cur."!cursor_pass"(rx1664_pos, 'backtrack'=>1)
    .return (rx1664_cur)
  rx1664_restart3942:
    repr_get_attr_obj rx1664_cstack, rx1664_cur, rx1664_curclass, "$!cstack"
  rx1664_fail3943:
    unless rx1664_bstack, rx1664_done3941
    pop $I19, rx1664_bstack
    if_null rx1664_cstack, rx1664_cstack_done3946
    unless rx1664_cstack, rx1664_cstack_done3946
    dec $I19
    set $P11, rx1664_cstack[$I19]
  rx1664_cstack_done3946:
    pop rx1664_rep, rx1664_bstack
    pop rx1664_pos, rx1664_bstack
    pop $I19, rx1664_bstack
    lt rx1664_pos, -1, rx1664_done3941
    lt rx1664_pos, 0, rx1664_fail3943
    eq $I19, 0, rx1664_fail3943
    nqp_islist $I20, rx1664_cstack
    unless $I20, rx1664_jump3944
    elements $I18, rx1664_bstack
    le $I18, 0, rx1664_cut3945
    dec $I18
    set $I18, rx1664_bstack[$I18]
  rx1664_cut3945:
    assign rx1664_cstack, $I18
  rx1664_jump3944:
    jump $I19
  rx1664_done3941:
    rx1664_cur."!cursor_fail"()
    .return (rx1664_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_240_1367388600.55005") :anon :lex :outer("cuid_238_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1666_start
    .local string rx1666_tgt
    .local int rx1666_pos
    .local int rx1666_off
    .local int rx1666_eos
    .local int rx1666_rep
    .local pmc rx1666_cur
    .local pmc rx1666_curclass
    .local pmc rx1666_bstack
    .local pmc rx1666_cstack
    rx1666_start = self."!cursor_start_all"()
    set rx1666_cur, rx1666_start[0]
    set rx1666_tgt, rx1666_start[1]
    set rx1666_pos, rx1666_start[2]
    set rx1666_curclass, rx1666_start[3]
    set rx1666_bstack, rx1666_start[4]
    set $I19, rx1666_start[5]
    store_lex unicode:"$\x{a2}", rx1666_cur
    length rx1666_eos, rx1666_tgt
    eq $I19, 1, rx1666_restart3953
    gt rx1666_pos, rx1666_eos, rx1666_fail3954
    repr_get_attr_int $I11, self, rx1666_curclass, "$!from"
    ne $I11, -1, rxscan1667_done3960
    goto rxscan1667_scan3959
  rxscan1667_loop3958:
    inc rx1666_pos
    gt rx1666_pos, rx1666_eos, rx1666_fail3954
    repr_bind_attr_int rx1666_cur, rx1666_curclass, "$!from", rx1666_pos
  rxscan1667_scan3959:
    nqp_rxmark rx1666_bstack, rxscan1667_loop3958, rx1666_pos, 0
  rxscan1667_done3960:
    add $I11, rx1666_pos, 1
    gt $I11, rx1666_eos, rx1666_fail3954
    substr $S10, rx1666_tgt, rx1666_pos, 1
    ne $S10, ucs4:"{", rx1666_fail3954
    add rx1666_pos, 1
    rx1666_cur."!cursor_pass"(rx1666_pos, 'backtrack'=>1)
    .return (rx1666_cur)
  rx1666_restart3953:
    repr_get_attr_obj rx1666_cstack, rx1666_cur, rx1666_curclass, "$!cstack"
  rx1666_fail3954:
    unless rx1666_bstack, rx1666_done3952
    pop $I19, rx1666_bstack
    if_null rx1666_cstack, rx1666_cstack_done3957
    unless rx1666_cstack, rx1666_cstack_done3957
    dec $I19
    set $P11, rx1666_cstack[$I19]
  rx1666_cstack_done3957:
    pop rx1666_rep, rx1666_bstack
    pop rx1666_pos, rx1666_bstack
    pop $I19, rx1666_bstack
    lt rx1666_pos, -1, rx1666_done3952
    lt rx1666_pos, 0, rx1666_fail3954
    eq $I19, 0, rx1666_fail3954
    nqp_islist $I20, rx1666_cstack
    unless $I20, rx1666_jump3955
    elements $I18, rx1666_bstack
    le $I18, 0, rx1666_cut3956
    dec $I18
    set $I18, rx1666_bstack[$I18]
  rx1666_cut3956:
    assign rx1666_cstack, $I18
  rx1666_jump3955:
    jump $I19
  rx1666_done3952:
    rx1666_cur."!cursor_fail"()
    .return (rx1666_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<?{ }>" :subid("cuid_241_1367388600.55005") :anon :lex :outer("cuid_417_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1446
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_242_1367388600.55005' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1669_start
    .local string rx1669_tgt
    .local int rx1669_pos
    .local int rx1669_off
    .local int rx1669_eos
    .local int rx1669_rep
    .local pmc rx1669_cur
    .local pmc rx1669_curclass
    .local pmc rx1669_bstack
    .local pmc rx1669_cstack
    rx1669_start = self."!cursor_start_all"()
    set rx1669_cur, rx1669_start[0]
    set rx1669_tgt, rx1669_start[1]
    set rx1669_pos, rx1669_start[2]
    set rx1669_curclass, rx1669_start[3]
    set rx1669_bstack, rx1669_start[4]
    set $I19, rx1669_start[5]
    store_lex unicode:"$\x{a2}", rx1669_cur
    length rx1669_eos, rx1669_tgt
    eq $I19, 1, rx1669_restart3964
    gt rx1669_pos, rx1669_eos, rx1669_fail3965
    repr_get_attr_int $I11, self, rx1669_curclass, "$!from"
    ne $I11, -1, rxscan1670_done3971
    goto rxscan1670_scan3970
  rxscan1670_loop3969:
    inc rx1669_pos
    gt rx1669_pos, rx1669_eos, rx1669_fail3965
    repr_bind_attr_int rx1669_cur, rx1669_curclass, "$!from", rx1669_pos
  rxscan1670_scan3970:
    nqp_rxmark rx1669_bstack, rxscan1670_loop3969, rx1669_pos, 0
  rxscan1670_done3971:
    nqp_rxmark rx1669_bstack, rxcap1671_fail3973, rx1669_pos, 0
    ge rx1669_pos, rx1669_eos, rx1669_fail3965
    substr $S11, rx1669_tgt, rx1669_pos, 1
    index $I11, ucs4:"?!", $S11
    lt $I11, 0, rx1669_fail3965
    inc rx1669_pos
    .const 'Sub' $P5001 = 'cuid_242_1367388600.55005' 
    capture_lex $P5001
    repr_bind_attr_int rx1669_cur, rx1669_curclass, "$!pos", rx1669_pos
    $P11 = rx1669_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1669_curclass, "$!pos"
    lt $I11, 0, rx1669_fail3965
    nqp_rxpeek $I19, rx1669_bstack, rxcap1671_fail3973
    inc $I19
    set $I11, rx1669_bstack[$I19]
    repr_bind_attr_int rx1669_cur, rx1669_curclass, "$!pos", rx1669_pos
    $P11 = rx1669_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1669_pos)
    rx1669_cstack = rx1669_cur."!cursor_capture"($P11, "zw")
    goto rxcap1671_done3972
  rxcap1671_fail3973:
    goto rx1669_fail3965
  rxcap1671_done3972:
    repr_bind_attr_int rx1669_cur, rx1669_curclass, "$!pos", rx1669_pos
    $P11 = rx1669_cur."codeblock"()
    repr_get_attr_int $I11, $P11, rx1669_curclass, "$!pos"
    lt $I11, 0, rx1669_fail3965
    nqp_rxmark rx1669_bstack, rxsubrule1674_pass3984, -1, 0
  rxsubrule1674_pass3984:
    rx1669_cstack = rx1669_cur."!cursor_capture"($P11, "codeblock")
    repr_get_attr_int rx1669_pos, $P11, rx1669_curclass, "$!pos"
    rx1669_cur."!cursor_pass"(rx1669_pos, "assertion:sym<?{ }>", 'backtrack'=>1)
    .return (rx1669_cur)
  rx1669_restart3964:
    repr_get_attr_obj rx1669_cstack, rx1669_cur, rx1669_curclass, "$!cstack"
  rx1669_fail3965:
    unless rx1669_bstack, rx1669_done3963
    pop $I19, rx1669_bstack
    if_null rx1669_cstack, rx1669_cstack_done3968
    unless rx1669_cstack, rx1669_cstack_done3968
    dec $I19
    set $P11, rx1669_cstack[$I19]
  rx1669_cstack_done3968:
    pop rx1669_rep, rx1669_bstack
    pop rx1669_pos, rx1669_bstack
    pop $I19, rx1669_bstack
    lt rx1669_pos, -1, rx1669_done3963
    lt rx1669_pos, 0, rx1669_fail3965
    eq $I19, 0, rx1669_fail3965
    nqp_islist $I20, rx1669_cstack
    unless $I20, rx1669_jump3966
    elements $I18, rx1669_bstack
    le $I18, 0, rx1669_cut3967
    dec $I18
    set $I18, rx1669_bstack[$I18]
  rx1669_cut3967:
    assign rx1669_cstack, $I18
  rx1669_jump3966:
    jump $I19
  rx1669_done3963:
    rx1669_cur."!cursor_fail"()
    .return (rx1669_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_242_1367388600.55005") :anon :lex :outer("cuid_241_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1672_start
    .local string rx1672_tgt
    .local int rx1672_pos
    .local int rx1672_off
    .local int rx1672_eos
    .local int rx1672_rep
    .local pmc rx1672_cur
    .local pmc rx1672_curclass
    .local pmc rx1672_bstack
    .local pmc rx1672_cstack
    rx1672_start = self."!cursor_start_all"()
    set rx1672_cur, rx1672_start[0]
    set rx1672_tgt, rx1672_start[1]
    set rx1672_pos, rx1672_start[2]
    set rx1672_curclass, rx1672_start[3]
    set rx1672_bstack, rx1672_start[4]
    set $I19, rx1672_start[5]
    store_lex unicode:"$\x{a2}", rx1672_cur
    length rx1672_eos, rx1672_tgt
    eq $I19, 1, rx1672_restart3976
    gt rx1672_pos, rx1672_eos, rx1672_fail3977
    repr_get_attr_int $I11, self, rx1672_curclass, "$!from"
    ne $I11, -1, rxscan1673_done3983
    goto rxscan1673_scan3982
  rxscan1673_loop3981:
    inc rx1672_pos
    gt rx1672_pos, rx1672_eos, rx1672_fail3977
    repr_bind_attr_int rx1672_cur, rx1672_curclass, "$!from", rx1672_pos
  rxscan1673_scan3982:
    nqp_rxmark rx1672_bstack, rxscan1673_loop3981, rx1672_pos, 0
  rxscan1673_done3983:
    add $I11, rx1672_pos, 1
    gt $I11, rx1672_eos, rx1672_fail3977
    substr $S10, rx1672_tgt, rx1672_pos, 1
    ne $S10, ucs4:"{", rx1672_fail3977
    add rx1672_pos, 1
    rx1672_cur."!cursor_pass"(rx1672_pos, 'backtrack'=>1)
    .return (rx1672_cur)
  rx1672_restart3976:
    repr_get_attr_obj rx1672_cstack, rx1672_cur, rx1672_curclass, "$!cstack"
  rx1672_fail3977:
    unless rx1672_bstack, rx1672_done3975
    pop $I19, rx1672_bstack
    if_null rx1672_cstack, rx1672_cstack_done3980
    unless rx1672_cstack, rx1672_cstack_done3980
    dec $I19
    set $P11, rx1672_cstack[$I19]
  rx1672_cstack_done3980:
    pop rx1672_rep, rx1672_bstack
    pop rx1672_pos, rx1672_bstack
    pop $I19, rx1672_bstack
    lt rx1672_pos, -1, rx1672_done3975
    lt rx1672_pos, 0, rx1672_fail3977
    eq $I19, 0, rx1672_fail3977
    nqp_islist $I20, rx1672_cstack
    unless $I20, rx1672_jump3978
    elements $I18, rx1672_bstack
    le $I18, 0, rx1672_cut3979
    dec $I18
    set $I18, rx1672_bstack[$I18]
  rx1672_cut3979:
    assign rx1672_cstack, $I18
  rx1672_jump3978:
    jump $I19
  rx1672_done3975:
    rx1672_cur."!cursor_fail"()
    .return (rx1672_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<name>" :subid("cuid_243_1367388600.55005") :anon :lex :outer("cuid_417_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1450
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_244_1367388600.55005' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1675_start
    .local string rx1675_tgt
    .local int rx1675_pos
    .local int rx1675_off
    .local int rx1675_eos
    .local int rx1675_rep
    .local pmc rx1675_cur
    .local pmc rx1675_curclass
    .local pmc rx1675_bstack
    .local pmc rx1675_cstack
    rx1675_start = self."!cursor_start_all"()
    set rx1675_cur, rx1675_start[0]
    set rx1675_tgt, rx1675_start[1]
    set rx1675_pos, rx1675_start[2]
    set rx1675_curclass, rx1675_start[3]
    set rx1675_bstack, rx1675_start[4]
    set $I19, rx1675_start[5]
    store_lex unicode:"$\x{a2}", rx1675_cur
    length rx1675_eos, rx1675_tgt
    eq $I19, 1, rx1675_restart3987
    gt rx1675_pos, rx1675_eos, rx1675_fail3988
    repr_get_attr_int $I11, self, rx1675_curclass, "$!from"
    ne $I11, -1, rxscan1676_done3994
    goto rxscan1676_scan3993
  rxscan1676_loop3992:
    inc rx1675_pos
    gt rx1675_pos, rx1675_eos, rx1675_fail3988
    repr_bind_attr_int rx1675_cur, rx1675_curclass, "$!from", rx1675_pos
  rxscan1676_scan3993:
    nqp_rxmark rx1675_bstack, rxscan1676_loop3992, rx1675_pos, 0
  rxscan1676_done3994:
    repr_bind_attr_int rx1675_cur, rx1675_curclass, "$!pos", rx1675_pos
    $P11 = rx1675_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx1675_curclass, "$!pos"
    lt $I11, 0, rx1675_fail3988
    nqp_rxmark rx1675_bstack, rxsubrule1677_pass3995, -1, 0
  rxsubrule1677_pass3995:
    rx1675_cstack = rx1675_cur."!cursor_capture"($P11, "longname")
    repr_get_attr_int rx1675_pos, $P11, rx1675_curclass, "$!pos"
    nqp_rxmark rx1675_bstack, rxquantr1678_done3997, rx1675_pos, 0
  rxquantr1678_loop3996:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1679_03999
    nqp_push_label $P11, alt1679_14010
    nqp_push_label $P11, alt1679_24012
    nqp_push_label $P11, alt1679_34014
    nqp_push_label $P11, alt1679_44016
    nqp_rxmark rx1675_bstack, alt1679_end3998, -1, 0
    rx1675_cur."!alt"(rx1675_pos, "alt_nfa__42_1367388605.44003", $P11)
    goto rx1675_fail3988
  alt1679_03999:
    .const 'Sub' $P5001 = 'cuid_244_1367388600.55005' 
    capture_lex $P5001
    repr_bind_attr_int rx1675_cur, rx1675_curclass, "$!pos", rx1675_pos
    $P11 = rx1675_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1675_curclass, "$!pos"
    lt $I11, 0, rx1675_fail3988
    goto alt1679_end3998
  alt1679_14010:
    add $I11, rx1675_pos, 1
    gt $I11, rx1675_eos, rx1675_fail3988
    substr $S10, rx1675_tgt, rx1675_pos, 1
    ne $S10, ucs4:"=", rx1675_fail3988
    add rx1675_pos, 1
    repr_bind_attr_int rx1675_cur, rx1675_curclass, "$!pos", rx1675_pos
    $P11 = rx1675_cur."assertion"()
    repr_get_attr_int $I11, $P11, rx1675_curclass, "$!pos"
    lt $I11, 0, rx1675_fail3988
    nqp_rxmark rx1675_bstack, rxsubrule1682_pass4011, -1, 0
  rxsubrule1682_pass4011:
    rx1675_cstack = rx1675_cur."!cursor_capture"($P11, "assertion")
    repr_get_attr_int rx1675_pos, $P11, rx1675_curclass, "$!pos"
    goto alt1679_end3998
  alt1679_24012:
    add $I11, rx1675_pos, 1
    gt $I11, rx1675_eos, rx1675_fail3988
    substr $S10, rx1675_tgt, rx1675_pos, 1
    ne $S10, ucs4:":", rx1675_fail3988
    add rx1675_pos, 1
    repr_bind_attr_int rx1675_cur, rx1675_curclass, "$!pos", rx1675_pos
    $P11 = rx1675_cur."arglist"()
    repr_get_attr_int $I11, $P11, rx1675_curclass, "$!pos"
    lt $I11, 0, rx1675_fail3988
    nqp_rxmark rx1675_bstack, rxsubrule1683_pass4013, -1, 0
  rxsubrule1683_pass4013:
    rx1675_cstack = rx1675_cur."!cursor_capture"($P11, "arglist")
    repr_get_attr_int rx1675_pos, $P11, rx1675_curclass, "$!pos"
    goto alt1679_end3998
  alt1679_34014:
    add $I11, rx1675_pos, 1
    gt $I11, rx1675_eos, rx1675_fail3988
    substr $S10, rx1675_tgt, rx1675_pos, 1
    ne $S10, ucs4:"(", rx1675_fail3988
    add rx1675_pos, 1
    repr_bind_attr_int rx1675_cur, rx1675_curclass, "$!pos", rx1675_pos
    $P11 = rx1675_cur."LANG"("MAIN", "arglist")
    repr_get_attr_int $I11, $P11, rx1675_curclass, "$!pos"
    lt $I11, 0, rx1675_fail3988
    nqp_rxmark rx1675_bstack, rxsubrule1684_pass4015, -1, 0
  rxsubrule1684_pass4015:
    rx1675_cstack = rx1675_cur."!cursor_capture"($P11, "arglist")
    repr_get_attr_int rx1675_pos, $P11, rx1675_curclass, "$!pos"
    add $I11, rx1675_pos, 1
    gt $I11, rx1675_eos, rx1675_fail3988
    substr $S10, rx1675_tgt, rx1675_pos, 1
    ne $S10, ucs4:")", rx1675_fail3988
    add rx1675_pos, 1
    goto alt1679_end3998
  alt1679_44016:
    repr_bind_attr_int rx1675_cur, rx1675_curclass, "$!pos", rx1675_pos
    $P11 = rx1675_cur."normspace"()
    repr_get_attr_int $I11, $P11, rx1675_curclass, "$!pos"
    lt $I11, 0, rx1675_fail3988
    repr_get_attr_int rx1675_pos, $P11, rx1675_curclass, "$!pos"
    repr_bind_attr_int rx1675_cur, rx1675_curclass, "$!pos", rx1675_pos
    $P11 = rx1675_cur."nibbler"()
    repr_get_attr_int $I11, $P11, rx1675_curclass, "$!pos"
    lt $I11, 0, rx1675_fail3988
    nqp_rxmark rx1675_bstack, rxsubrule1686_pass4018, -1, 0
  rxsubrule1686_pass4018:
    rx1675_cstack = rx1675_cur."!cursor_capture"($P11, "nibbler")
    repr_get_attr_int rx1675_pos, $P11, rx1675_curclass, "$!pos"
    goto alt1679_end3998
  alt1679_end3998:
    nqp_rxpeek $I19, rx1675_bstack, rxquantr1678_done3997
    inc $I19
    inc $I19
    set rx1675_rep, rx1675_bstack[$I19]
    nqp_rxcommit rx1675_bstack, rxquantr1678_done3997
    inc rx1675_rep
  rxquantr1678_done3997:
    rx1675_cur."!cursor_pass"(rx1675_pos, "assertion:sym<name>", 'backtrack'=>1)
    .return (rx1675_cur)
  rx1675_restart3987:
    repr_get_attr_obj rx1675_cstack, rx1675_cur, rx1675_curclass, "$!cstack"
  rx1675_fail3988:
    unless rx1675_bstack, rx1675_done3986
    pop $I19, rx1675_bstack
    if_null rx1675_cstack, rx1675_cstack_done3991
    unless rx1675_cstack, rx1675_cstack_done3991
    dec $I19
    set $P11, rx1675_cstack[$I19]
  rx1675_cstack_done3991:
    pop rx1675_rep, rx1675_bstack
    pop rx1675_pos, rx1675_bstack
    pop $I19, rx1675_bstack
    lt rx1675_pos, -1, rx1675_done3986
    lt rx1675_pos, 0, rx1675_fail3988
    eq $I19, 0, rx1675_fail3988
    nqp_islist $I20, rx1675_cstack
    unless $I20, rx1675_jump3989
    elements $I18, rx1675_bstack
    le $I18, 0, rx1675_cut3990
    dec $I18
    set $I18, rx1675_bstack[$I18]
  rx1675_cut3990:
    assign rx1675_cstack, $I18
  rx1675_jump3989:
    jump $I19
  rx1675_done3986:
    rx1675_cur."!cursor_fail"()
    .return (rx1675_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_244_1367388600.55005") :anon :lex :outer("cuid_243_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1680_start
    .local string rx1680_tgt
    .local int rx1680_pos
    .local int rx1680_off
    .local int rx1680_eos
    .local int rx1680_rep
    .local pmc rx1680_cur
    .local pmc rx1680_curclass
    .local pmc rx1680_bstack
    .local pmc rx1680_cstack
    rx1680_start = self."!cursor_start_all"()
    set rx1680_cur, rx1680_start[0]
    set rx1680_tgt, rx1680_start[1]
    set rx1680_pos, rx1680_start[2]
    set rx1680_curclass, rx1680_start[3]
    set rx1680_bstack, rx1680_start[4]
    set $I19, rx1680_start[5]
    store_lex unicode:"$\x{a2}", rx1680_cur
    length rx1680_eos, rx1680_tgt
    eq $I19, 1, rx1680_restart4002
    gt rx1680_pos, rx1680_eos, rx1680_fail4003
    repr_get_attr_int $I11, self, rx1680_curclass, "$!from"
    ne $I11, -1, rxscan1681_done4009
    goto rxscan1681_scan4008
  rxscan1681_loop4007:
    inc rx1680_pos
    gt rx1680_pos, rx1680_eos, rx1680_fail4003
    repr_bind_attr_int rx1680_cur, rx1680_curclass, "$!from", rx1680_pos
  rxscan1681_scan4008:
    nqp_rxmark rx1680_bstack, rxscan1681_loop4007, rx1680_pos, 0
  rxscan1681_done4009:
    add $I11, rx1680_pos, 1
    gt $I11, rx1680_eos, rx1680_fail4003
    substr $S10, rx1680_tgt, rx1680_pos, 1
    ne $S10, ucs4:">", rx1680_fail4003
    add rx1680_pos, 1
    rx1680_cur."!cursor_pass"(rx1680_pos, 'backtrack'=>1)
    .return (rx1680_cur)
  rx1680_restart4002:
    repr_get_attr_obj rx1680_cstack, rx1680_cur, rx1680_curclass, "$!cstack"
  rx1680_fail4003:
    unless rx1680_bstack, rx1680_done4001
    pop $I19, rx1680_bstack
    if_null rx1680_cstack, rx1680_cstack_done4006
    unless rx1680_cstack, rx1680_cstack_done4006
    dec $I19
    set $P11, rx1680_cstack[$I19]
  rx1680_cstack_done4006:
    pop rx1680_rep, rx1680_bstack
    pop rx1680_pos, rx1680_bstack
    pop $I19, rx1680_bstack
    lt rx1680_pos, -1, rx1680_done4001
    lt rx1680_pos, 0, rx1680_fail4003
    eq $I19, 0, rx1680_fail4003
    nqp_islist $I20, rx1680_cstack
    unless $I20, rx1680_jump4004
    elements $I18, rx1680_bstack
    le $I18, 0, rx1680_cut4005
    dec $I18
    set $I18, rx1680_bstack[$I18]
  rx1680_cut4005:
    assign rx1680_cstack, $I18
  rx1680_jump4004:
    jump $I19
  rx1680_done4001:
    rx1680_cur."!cursor_fail"()
    .return (rx1680_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<var>" :subid("cuid_245_1367388600.55005") :anon :lex :outer("cuid_417_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1461
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1687_start
    .local string rx1687_tgt
    .local int rx1687_pos
    .local int rx1687_off
    .local int rx1687_eos
    .local int rx1687_rep
    .local pmc rx1687_cur
    .local pmc rx1687_curclass
    .local pmc rx1687_bstack
    .local pmc rx1687_cstack
    rx1687_start = self."!cursor_start_all"()
    set rx1687_cur, rx1687_start[0]
    set rx1687_tgt, rx1687_start[1]
    set rx1687_pos, rx1687_start[2]
    set rx1687_curclass, rx1687_start[3]
    set rx1687_bstack, rx1687_start[4]
    set $I19, rx1687_start[5]
    store_lex unicode:"$\x{a2}", rx1687_cur
    length rx1687_eos, rx1687_tgt
    eq $I19, 1, rx1687_restart4021
    gt rx1687_pos, rx1687_eos, rx1687_fail4022
    repr_get_attr_int $I11, self, rx1687_curclass, "$!from"
    ne $I11, -1, rxscan1688_done4028
    goto rxscan1688_scan4027
  rxscan1688_loop4026:
    inc rx1687_pos
    gt rx1687_pos, rx1687_eos, rx1687_fail4022
    repr_bind_attr_int rx1687_cur, rx1687_curclass, "$!from", rx1687_pos
  rxscan1688_scan4027:
    nqp_rxmark rx1687_bstack, rxscan1688_loop4026, rx1687_pos, 0
  rxscan1688_done4028:
    ge rx1687_pos, rx1687_eos, rx1687_fail4022
    substr $S11, rx1687_tgt, rx1687_pos, 1
    index $I11, ucs4:"$@", $S11
    lt $I11, 0, rx1687_fail4022
    repr_bind_attr_int rx1687_cur, rx1687_curclass, "$!pos", rx1687_pos
    $P11 = rx1687_cur."LANG"("MAIN", "variable")
    repr_get_attr_int $I11, $P11, rx1687_curclass, "$!pos"
    lt $I11, 0, rx1687_fail4022
    nqp_rxmark rx1687_bstack, rxsubrule1689_pass4029, -1, 0
  rxsubrule1689_pass4029:
    rx1687_cstack = rx1687_cur."!cursor_capture"($P11, "var")
    repr_get_attr_int rx1687_pos, $P11, rx1687_curclass, "$!pos"
    rx1687_cur."!cursor_pass"(rx1687_pos, "assertion:sym<var>", 'backtrack'=>1)
    .return (rx1687_cur)
  rx1687_restart4021:
    repr_get_attr_obj rx1687_cstack, rx1687_cur, rx1687_curclass, "$!cstack"
  rx1687_fail4022:
    unless rx1687_bstack, rx1687_done4020
    pop $I19, rx1687_bstack
    if_null rx1687_cstack, rx1687_cstack_done4025
    unless rx1687_cstack, rx1687_cstack_done4025
    dec $I19
    set $P11, rx1687_cstack[$I19]
  rx1687_cstack_done4025:
    pop rx1687_rep, rx1687_bstack
    pop rx1687_pos, rx1687_bstack
    pop $I19, rx1687_bstack
    lt rx1687_pos, -1, rx1687_done4020
    lt rx1687_pos, 0, rx1687_fail4022
    eq $I19, 0, rx1687_fail4022
    nqp_islist $I20, rx1687_cstack
    unless $I20, rx1687_jump4023
    elements $I18, rx1687_bstack
    le $I18, 0, rx1687_cut4024
    dec $I18
    set $I18, rx1687_bstack[$I18]
  rx1687_cut4024:
    assign rx1687_cstack, $I18
  rx1687_jump4023:
    jump $I19
  rx1687_done4020:
    rx1687_cur."!cursor_fail"()
    .return (rx1687_cur) 
.end
.HLL "nqp"
.namespace []
.sub "codeblock" :subid("cuid_246_1367388600.55005") :anon :lex :outer("cuid_417_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1465
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1690_start
    .local string rx1690_tgt
    .local int rx1690_pos
    .local int rx1690_off
    .local int rx1690_eos
    .local int rx1690_rep
    .local pmc rx1690_cur
    .local pmc rx1690_curclass
    .local pmc rx1690_bstack
    .local pmc rx1690_cstack
    rx1690_start = self."!cursor_start_all"()
    set rx1690_cur, rx1690_start[0]
    set rx1690_tgt, rx1690_start[1]
    set rx1690_pos, rx1690_start[2]
    set rx1690_curclass, rx1690_start[3]
    set rx1690_bstack, rx1690_start[4]
    set $I19, rx1690_start[5]
    store_lex unicode:"$\x{a2}", rx1690_cur
    length rx1690_eos, rx1690_tgt
    eq $I19, 1, rx1690_restart4032
    gt rx1690_pos, rx1690_eos, rx1690_fail4033
    repr_get_attr_int $I11, self, rx1690_curclass, "$!from"
    ne $I11, -1, rxscan1691_done4039
    goto rxscan1691_scan4038
  rxscan1691_loop4037:
    inc rx1690_pos
    gt rx1690_pos, rx1690_eos, rx1690_fail4033
    repr_bind_attr_int rx1690_cur, rx1690_curclass, "$!from", rx1690_pos
  rxscan1691_scan4038:
    nqp_rxmark rx1690_bstack, rxscan1691_loop4037, rx1690_pos, 0
  rxscan1691_done4039:
    repr_bind_attr_int rx1690_cur, rx1690_curclass, "$!pos", rx1690_pos
    $P11 = rx1690_cur."LANG"("MAIN", "pblock")
    repr_get_attr_int $I11, $P11, rx1690_curclass, "$!pos"
    lt $I11, 0, rx1690_fail4033
    nqp_rxmark rx1690_bstack, rxsubrule1692_pass4040, -1, 0
  rxsubrule1692_pass4040:
    rx1690_cstack = rx1690_cur."!cursor_capture"($P11, "block")
    repr_get_attr_int rx1690_pos, $P11, rx1690_curclass, "$!pos"
    rx1690_cur."!cursor_pass"(rx1690_pos, "codeblock", 'backtrack'=>1)
    .return (rx1690_cur)
  rx1690_restart4032:
    repr_get_attr_obj rx1690_cstack, rx1690_cur, rx1690_curclass, "$!cstack"
  rx1690_fail4033:
    unless rx1690_bstack, rx1690_done4031
    pop $I19, rx1690_bstack
    if_null rx1690_cstack, rx1690_cstack_done4036
    unless rx1690_cstack, rx1690_cstack_done4036
    dec $I19
    set $P11, rx1690_cstack[$I19]
  rx1690_cstack_done4036:
    pop rx1690_rep, rx1690_bstack
    pop rx1690_pos, rx1690_bstack
    pop $I19, rx1690_bstack
    lt rx1690_pos, -1, rx1690_done4031
    lt rx1690_pos, 0, rx1690_fail4033
    eq $I19, 0, rx1690_fail4033
    nqp_islist $I20, rx1690_cstack
    unless $I20, rx1690_jump4034
    elements $I18, rx1690_bstack
    le $I18, 0, rx1690_cut4035
    dec $I18
    set $I18, rx1690_bstack[$I18]
  rx1690_cut4035:
    assign rx1690_cstack, $I18
  rx1690_jump4034:
    jump $I19
  rx1690_done4031:
    rx1690_cur."!cursor_fail"()
    .return (rx1690_cur) 
.end
.HLL "nqp"
.namespace []
.sub "arg" :subid("cuid_247_1367388600.55005") :anon :lex :outer("cuid_417_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1469
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1693_start
    .local string rx1693_tgt
    .local int rx1693_pos
    .local int rx1693_off
    .local int rx1693_eos
    .local int rx1693_rep
    .local pmc rx1693_cur
    .local pmc rx1693_curclass
    .local pmc rx1693_bstack
    .local pmc rx1693_cstack
    rx1693_start = self."!cursor_start_all"()
    set rx1693_cur, rx1693_start[0]
    set rx1693_tgt, rx1693_start[1]
    set rx1693_pos, rx1693_start[2]
    set rx1693_curclass, rx1693_start[3]
    set rx1693_bstack, rx1693_start[4]
    set $I19, rx1693_start[5]
    store_lex unicode:"$\x{a2}", rx1693_cur
    length rx1693_eos, rx1693_tgt
    eq $I19, 1, rx1693_restart4043
    gt rx1693_pos, rx1693_eos, rx1693_fail4044
    repr_get_attr_int $I11, self, rx1693_curclass, "$!from"
    ne $I11, -1, rxscan1694_done4050
    goto rxscan1694_scan4049
  rxscan1694_loop4048:
    inc rx1693_pos
    gt rx1693_pos, rx1693_eos, rx1693_fail4044
    repr_bind_attr_int rx1693_cur, rx1693_curclass, "$!from", rx1693_pos
  rxscan1694_scan4049:
    nqp_rxmark rx1693_bstack, rxscan1694_loop4048, rx1693_pos, 0
  rxscan1694_done4050:
    repr_bind_attr_int rx1693_cur, rx1693_curclass, "$!pos", rx1693_pos
    $P11 = rx1693_cur."LANG"("MAIN", "quote_EXPR")
    repr_get_attr_int $I11, $P11, rx1693_curclass, "$!pos"
    lt $I11, 0, rx1693_fail4044
    nqp_rxmark rx1693_bstack, rxsubrule1695_pass4051, -1, 0
  rxsubrule1695_pass4051:
    rx1693_cstack = rx1693_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1693_pos, $P11, rx1693_curclass, "$!pos"
    rx1693_cur."!cursor_pass"(rx1693_pos, "arg", 'backtrack'=>1)
    .return (rx1693_cur)
  rx1693_restart4043:
    repr_get_attr_obj rx1693_cstack, rx1693_cur, rx1693_curclass, "$!cstack"
  rx1693_fail4044:
    unless rx1693_bstack, rx1693_done4042
    pop $I19, rx1693_bstack
    if_null rx1693_cstack, rx1693_cstack_done4047
    unless rx1693_cstack, rx1693_cstack_done4047
    dec $I19
    set $P11, rx1693_cstack[$I19]
  rx1693_cstack_done4047:
    pop rx1693_rep, rx1693_bstack
    pop rx1693_pos, rx1693_bstack
    pop $I19, rx1693_bstack
    lt rx1693_pos, -1, rx1693_done4042
    lt rx1693_pos, 0, rx1693_fail4044
    eq $I19, 0, rx1693_fail4044
    nqp_islist $I20, rx1693_cstack
    unless $I20, rx1693_jump4045
    elements $I18, rx1693_bstack
    le $I18, 0, rx1693_cut4046
    dec $I18
    set $I18, rx1693_bstack[$I18]
  rx1693_cut4046:
    assign rx1693_cstack, $I18
  rx1693_jump4045:
    jump $I19
  rx1693_done4042:
    rx1693_cur."!cursor_fail"()
    .return (rx1693_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_418_1367388600.55005") :anon :lex :outer("cuid_374_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1478
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$var", $P101 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_169 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    set fb_tmp_169, _lex_param_1
    repr_defined $I5001, fb_tmp_169
    unless $I5001 goto if1696_else4052 
    set $P5002, fb_tmp_169[0]
    set $P5004, $P5002
    goto if1696_end4053
  if1696_else4052:
    null $P5003
    set $P5004, $P5003
  if1696_end4053:
    unless_null $P5004, vivi_16974054
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_16974054:
    set $P101, $P5004
    nqp_get_sc_object $P5006, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    type_check $I5002, $P101, $P5006
    if $I5002 goto unless1698_end4056 
.annotate 'line', 1480
    box $P5007, "Pre-increment can only work on a variable"
    die $P5007
  unless1698_end4056:
.annotate 'line', 1483
    nqp_get_sc_object $P5008, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 1486
    nqp_get_sc_object $P5009, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 1489
    nqp_get_sc_object $P5010, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 42
    $P5011 = $P5010."new"(1 :named("value"))
    $P5012 = $P5009."new"($P101, $P5011, "add_n" :named("op"))
    $P5013 = $P5008."new"($P101, $P5012, "bind" :named("op"))
    $P5014 = _lex_param_0."as_post"($P5013)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_419_1367388600.55005") :anon :lex :outer("cuid_374_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1493
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$var", $P101 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_170 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    set fb_tmp_170, _lex_param_1
    repr_defined $I5001, fb_tmp_170
    unless $I5001 goto if1699_else4057 
    set $P5002, fb_tmp_170[0]
    set $P5004, $P5002
    goto if1699_end4058
  if1699_else4057:
    null $P5003
    set $P5004, $P5003
  if1699_end4058:
    unless_null $P5004, vivi_17004059
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_17004059:
    set $P101, $P5004
    nqp_get_sc_object $P5006, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    type_check $I5002, $P101, $P5006
    if $I5002 goto unless1701_end4061 
.annotate 'line', 1495
    box $P5007, "Pre-decrement can only work on a variable"
    die $P5007
  unless1701_end4061:
.annotate 'line', 1498
    nqp_get_sc_object $P5008, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 1501
    nqp_get_sc_object $P5009, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 1504
    nqp_get_sc_object $P5010, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 42
    $P5011 = $P5010."new"(1 :named("value"))
    $P5012 = $P5009."new"($P101, $P5011, "sub_n" :named("op"))
    $P5013 = $P5008."new"($P101, $P5012, "bind" :named("op"))
    $P5014 = _lex_param_0."as_post"($P5013)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_420_1367388600.55005") :anon :lex :outer("cuid_374_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1508
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$var", $P101 
    .lex "$tmp", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_171 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
    set fb_tmp_171, _lex_param_1
    repr_defined $I5001, fb_tmp_171
    unless $I5001 goto if1702_else4062 
    set $P5003, fb_tmp_171[0]
    set $P5005, $P5003
    goto if1702_end4063
  if1702_else4062:
    null $P5004
    set $P5005, $P5004
  if1702_end4063:
    unless_null $P5005, vivi_17034064
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5005, $P5006
  vivi_17034064:
    set $P101, $P5005
.annotate 'line', 1510
    nqp_get_sc_object $P5007, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    $P5008 = $P5007."unique"("tmp")
    set $P102, $P5008
    nqp_get_sc_object $P5009, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    type_check $I5002, $P101, $P5009
    if $I5002 goto unless1704_end4066 
.annotate 'line', 1511
    box $P5010, "Post-increment can only work on a variable"
    die $P5010
  unless1704_end4066:
.annotate 'line', 1514
    nqp_get_sc_object $P5011, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 98
.annotate 'line', 1516
    nqp_get_sc_object $P5012, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 1518
    nqp_get_sc_object $P5013, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5014 = $P101."returns"()
    $P5015 = $P5013."new"($P102 :named("name"), "local" :named("scope"), "var" :named("decl"), $P5014 :named("returns"))
    $P5016 = $P5012."new"($P5015, $P101, "bind" :named("op"))
.annotate 'line', 1521
    nqp_get_sc_object $P5017, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 1524
    nqp_get_sc_object $P5018, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 1526
    nqp_get_sc_object $P5019, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5020 = $P101."returns"()
    $P5021 = $P5019."new"($P102 :named("name"), "local" :named("scope"), $P5020 :named("returns"))
.annotate 'line', 1527
    nqp_get_sc_object $P5022, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 42
    $P5023 = $P5022."new"(1 :named("value"))
    $P5024 = $P5018."new"($P5021, $P5023, "add_n" :named("op"))
    $P5025 = $P5017."new"($P101, $P5024, "bind" :named("op"))
    $P5026 = $P5011."new"($P5016, $P5025, 0 :named("resultchild"))
    $P5027 = _lex_param_0."as_post"($P5026)
    .return ($P5027) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_421_1367388600.55005") :anon :lex :outer("cuid_374_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1532
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$var", $P101 
    .lex "$tmp", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_172 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
    set fb_tmp_172, _lex_param_1
    repr_defined $I5001, fb_tmp_172
    unless $I5001 goto if1705_else4067 
    set $P5003, fb_tmp_172[0]
    set $P5005, $P5003
    goto if1705_end4068
  if1705_else4067:
    null $P5004
    set $P5005, $P5004
  if1705_end4068:
    unless_null $P5005, vivi_17064069
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5005, $P5006
  vivi_17064069:
    set $P101, $P5005
.annotate 'line', 1534
    nqp_get_sc_object $P5007, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    $P5008 = $P5007."unique"("tmp")
    set $P102, $P5008
    nqp_get_sc_object $P5009, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    type_check $I5002, $P101, $P5009
    if $I5002 goto unless1707_end4071 
.annotate 'line', 1535
    box $P5010, "Post-decrement can only work on a variable"
    die $P5010
  unless1707_end4071:
.annotate 'line', 1538
    nqp_get_sc_object $P5011, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 98
.annotate 'line', 1540
    nqp_get_sc_object $P5012, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 1542
    nqp_get_sc_object $P5013, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5014 = $P5013."new"($P102 :named("name"), "local" :named("scope"), "var" :named("decl"))
    $P5015 = $P5012."new"($P5014, $P101, "bind" :named("op"))
.annotate 'line', 1545
    nqp_get_sc_object $P5016, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 1548
    nqp_get_sc_object $P5017, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 1550
    nqp_get_sc_object $P5018, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5019 = $P5018."new"($P102 :named("name"), "local" :named("scope"))
.annotate 'line', 1551
    nqp_get_sc_object $P5020, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 42
    $P5021 = $P5020."new"(1 :named("value"))
    $P5022 = $P5017."new"($P5019, $P5021, "sub_n" :named("op"))
    $P5023 = $P5016."new"($P101, $P5022, "bind" :named("op"))
    $P5024 = $P5011."new"($P5015, $P5023, 0 :named("resultchild"))
    $P5025 = _lex_param_0."as_post"($P5024)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_422_1367388600.55005") :anon :lex :outer("cuid_374_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1556
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_173 
.annotate 'line', 1557
    set fb_tmp_173, _lex_param_1
    repr_defined $I5001, fb_tmp_173
    unless $I5001 goto if1708_else4072 
    set $P5001, fb_tmp_173[0]
    set $P5003, $P5001
    goto if1708_end4073
  if1708_else4072:
    null $P5002
    set $P5003, $P5002
  if1708_end4073:
    unless_null $P5003, vivi_17094074
    nqp_get_sc_object $P5004, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5003, $P5004
  vivi_17094074:
    $P5005 = _lex_param_0."as_post"($P5003, "n" :named("want"))
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_423_1367388600.55005") :anon :lex :outer("cuid_374_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1560
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_174 
.annotate 'line', 1561
    set fb_tmp_174, _lex_param_1
    repr_defined $I5001, fb_tmp_174
    unless $I5001 goto if1710_else4075 
    set $P5001, fb_tmp_174[0]
    set $P5003, $P5001
    goto if1710_end4076
  if1710_else4075:
    null $P5002
    set $P5003, $P5002
  if1710_end4076:
    unless_null $P5003, vivi_17114077
    nqp_get_sc_object $P5004, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5003, $P5004
  vivi_17114077:
    $P5005 = _lex_param_0."as_post"($P5003, "s" :named("want"))
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_424_1367388600.55005") :anon :lex :outer("cuid_374_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1564
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_175 
    .local pmc fb_tmp_176 
.annotate 'line', 1565
    nqp_get_sc_object $P5001, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 1567
    nqp_get_sc_object $P5002, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    set fb_tmp_175, _lex_param_1
    repr_defined $I5001, fb_tmp_175
    unless $I5001 goto if1712_else4078 
    set $P5003, fb_tmp_175[0]
    set $P5005, $P5003
    goto if1712_end4079
  if1712_else4078:
    null $P5004
    set $P5005, $P5004
  if1712_end4079:
    unless_null $P5005, vivi_17134080
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5005, $P5006
  vivi_17134080:
    $P5007 = $P5002."new"($P5005, "where" :named("op"))
.annotate 'line', 1568
    nqp_get_sc_object $P5008, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    set fb_tmp_176, _lex_param_1
    repr_defined $I5002, fb_tmp_176
    unless $I5002 goto if1714_else4081 
    set $P5009, fb_tmp_176[1]
    set $P5011, $P5009
    goto if1714_end4082
  if1714_else4081:
    null $P5010
    set $P5011, $P5010
  if1714_end4082:
    unless_null $P5011, vivi_17154083
    nqp_get_sc_object $P5012, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5011, $P5012
  vivi_17154083:
    $P5013 = $P5008."new"($P5011, "where" :named("op"))
    $P5014 = $P5001."new"($P5007, $P5013, "iseq_i" :named("op"))
    $P5015 = _lex_param_0."as_post"($P5014)
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_425_1367388600.55005") :anon :lex :outer("cuid_374_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1572
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$res", $P101 
    .lex "$ops", $P102 
    .lex "$arg_post", $P103 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_177 
    .local pmc fb_tmp_178 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P103, $P5003
.annotate 'line', 1573
    find_dynamic_lex $P5004, "$*REGALLOC"
    unless_null $P5004, fallback4084
    nqp_get_sc_object $P5006, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5005, $P5006
    set fb_tmp_177, $P5005
    repr_defined $I5001, fb_tmp_177
    unless $I5001 goto if1716_else4085 
    set $P5007, fb_tmp_177["$REGALLOC"]
    set $P5009, $P5007
    goto if1716_end4086
  if1716_else4085:
    null $P5008
    set $P5009, $P5008
  if1716_end4086:
    unless_null $P5009, vivi_17174087
    nqp_get_sc_object $P5010, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5009, $P5010
  vivi_17174087:
    unless_null $P5009, vivi_17184088
    die "Contextual $*REGALLOC not found"
    box $P5011, "Contextual $*REGALLOC not found"
    set $P5009, $P5011
  vivi_17184088:
    set $P5004, $P5009
  fallback4084:
    $P5012 = $P5004."fresh_i"()
    set $P101, $P5012
.annotate 'line', 1574
    nqp_get_sc_object $P5013, "1F55543DEC645FFA20AB3FBDCAAD529102443B83-1367388573.57212", 31
    $P5014 = $P5013."new"($P101 :named("result"))
    set $P102, $P5014
.annotate 'line', 1575
    set fb_tmp_178, _lex_param_1
    repr_defined $I5002, fb_tmp_178
    unless $I5002 goto if1719_else4089 
    set $P5015, fb_tmp_178[0]
    set $P5017, $P5015
    goto if1719_end4090
  if1719_else4089:
    null $P5016
    set $P5017, $P5016
  if1719_end4090:
    unless_null $P5017, vivi_17204091
    nqp_get_sc_object $P5018, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5017, $P5018
  vivi_17204091:
    $P5019 = _lex_param_0."as_post"($P5017)
    set $P103, $P5019
.annotate 'line', 1576
    $P5020 = $P103."result"()
    $P5021 = _lex_param_0."infer_type"($P5020)
    set $S5002, $P5021
    downcase $S5001, $S5002
    iseq $I5003, $S5001, "i"
    unless $I5003 goto if1721_else4092 
.annotate 'line', 1577
    $P102."push"($P103)
.annotate 'line', 1578
    $P5022 = $P102."push_pirop"("not", $P101, $P103)
    goto if1721_end4093
  if1721_else4092:
.annotate 'line', 1580
.annotate 'line', 1581
    $P5023 = _lex_param_0."coerce"($P103, "P")
    set $P103, $P5023
.annotate 'line', 1582
    $P102."push"($P103)
.annotate 'line', 1583
    $P5024 = $P102."push_pirop"("isfalse", $P101, $P103)
  if1721_end4093:
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_427_1367388600.55005") :anon :lex :outer("cuid_374_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1589
    .const 'Sub' $P5124 = 'cuid_426_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_430_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_433_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_434_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_437_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_439_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_440_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_441_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_443_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_444_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_450_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_248_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_249_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_250_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_251_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_252_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_253_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_254_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_255_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_256_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_257_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_258_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_259_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_260_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_261_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_262_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_263_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_264_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_265_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_266_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_267_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_268_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_269_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_270_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_271_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_272_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_273_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_274_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_275_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_276_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_277_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_278_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_279_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_280_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_281_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_282_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_283_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_284_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_285_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_286_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_287_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_288_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_289_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_290_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_291_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_292_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_293_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_294_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_295_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_296_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_297_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_298_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_299_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_300_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_301_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_302_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_303_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_304_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_305_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_306_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_307_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_308_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_309_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_310_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_311_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_312_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_313_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_314_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_315_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_316_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_317_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_318_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_319_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_320_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_321_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_322_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_323_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_324_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_325_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_326_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_327_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_328_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_329_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_330_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_331_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_332_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_333_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_334_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_335_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_336_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_337_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_338_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_339_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_340_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_341_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_342_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_343_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_344_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_345_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_346_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_347_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_348_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_349_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_350_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_351_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_352_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_353_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_354_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_355_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_356_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_357_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_358_1367388600.55005' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_359_1367388600.55005' 
    capture_lex $P5124 
    .lex "&xblock_immediate", $P101 
    .lex "&block_immediate", $P102 
    .lex "&default_for", $P103 
    .lex "&default_value_for_prim", $P104 
    .lex "&colonpair_str", $P105 
    .lex "&import_HOW_exports", $P106 
    .lex "&set_block_handler", $P107 
    .lex "&only_star_block", $P108 
    .lex "&attach_multi_signature", $P109 
    .lex "&wrap_return_handler", $P110 
    .lex "&lexical_package_lookup", $P111 
    .lex "$?PACKAGE", $P112 
    .lex "$?CLASS", $P113 
    .const 'Sub' $P5001 = 'cuid_426_1367388600.55005' 
    capture_lex $P5001
    set $P101, $P5001
    .const 'Sub' $P5002 = 'cuid_430_1367388600.55005' 
    capture_lex $P5002
    set $P102, $P5002
    .const 'Sub' $P5003 = 'cuid_433_1367388600.55005' 
    capture_lex $P5003
    set $P103, $P5003
    .const 'Sub' $P5004 = 'cuid_434_1367388600.55005' 
    capture_lex $P5004
    set $P104, $P5004
    .const 'Sub' $P5005 = 'cuid_437_1367388600.55005' 
    capture_lex $P5005
    set $P105, $P5005
    .const 'Sub' $P5006 = 'cuid_439_1367388600.55005' 
    capture_lex $P5006
    set $P106, $P5006
    .const 'Sub' $P5007 = 'cuid_440_1367388600.55005' 
    capture_lex $P5007
    set $P107, $P5007
    .const 'Sub' $P5008 = 'cuid_441_1367388600.55005' 
    capture_lex $P5008
    set $P108, $P5008
    .const 'Sub' $P5009 = 'cuid_443_1367388600.55005' 
    capture_lex $P5009
    set $P109, $P5009
    .const 'Sub' $P5010 = 'cuid_444_1367388600.55005' 
    capture_lex $P5010
    set $P110, $P5010
    .const 'Sub' $P5011 = 'cuid_450_1367388600.55005' 
    capture_lex $P5011
    set $P111, $P5011
    .const 'Sub' $P5012 = 'cuid_248_1367388600.55005' 
    capture_lex $P5012
    .const 'Sub' $P5013 = 'cuid_249_1367388600.55005' 
    capture_lex $P5013
    .const 'Sub' $P5014 = 'cuid_250_1367388600.55005' 
    capture_lex $P5014
    .const 'Sub' $P5015 = 'cuid_251_1367388600.55005' 
    capture_lex $P5015
    .const 'Sub' $P5016 = 'cuid_252_1367388600.55005' 
    capture_lex $P5016
    .const 'Sub' $P5017 = 'cuid_253_1367388600.55005' 
    capture_lex $P5017
    .const 'Sub' $P5018 = 'cuid_254_1367388600.55005' 
    capture_lex $P5018
    .const 'Sub' $P5019 = 'cuid_255_1367388600.55005' 
    capture_lex $P5019
    .const 'Sub' $P5020 = 'cuid_256_1367388600.55005' 
    capture_lex $P5020
    .const 'Sub' $P5021 = 'cuid_257_1367388600.55005' 
    capture_lex $P5021
    .const 'Sub' $P5022 = 'cuid_258_1367388600.55005' 
    capture_lex $P5022
    .const 'Sub' $P5023 = 'cuid_259_1367388600.55005' 
    capture_lex $P5023
    .const 'Sub' $P5024 = 'cuid_260_1367388600.55005' 
    capture_lex $P5024
    .const 'Sub' $P5025 = 'cuid_261_1367388600.55005' 
    capture_lex $P5025
    .const 'Sub' $P5026 = 'cuid_262_1367388600.55005' 
    capture_lex $P5026
    .const 'Sub' $P5027 = 'cuid_263_1367388600.55005' 
    capture_lex $P5027
    .const 'Sub' $P5028 = 'cuid_264_1367388600.55005' 
    capture_lex $P5028
    .const 'Sub' $P5029 = 'cuid_265_1367388600.55005' 
    capture_lex $P5029
    .const 'Sub' $P5030 = 'cuid_266_1367388600.55005' 
    capture_lex $P5030
    .const 'Sub' $P5031 = 'cuid_267_1367388600.55005' 
    capture_lex $P5031
    .const 'Sub' $P5032 = 'cuid_268_1367388600.55005' 
    capture_lex $P5032
    .const 'Sub' $P5033 = 'cuid_269_1367388600.55005' 
    capture_lex $P5033
    .const 'Sub' $P5034 = 'cuid_270_1367388600.55005' 
    capture_lex $P5034
    .const 'Sub' $P5035 = 'cuid_271_1367388600.55005' 
    capture_lex $P5035
    .const 'Sub' $P5036 = 'cuid_272_1367388600.55005' 
    capture_lex $P5036
    .const 'Sub' $P5037 = 'cuid_273_1367388600.55005' 
    capture_lex $P5037
    .const 'Sub' $P5038 = 'cuid_274_1367388600.55005' 
    capture_lex $P5038
    .const 'Sub' $P5039 = 'cuid_275_1367388600.55005' 
    capture_lex $P5039
    .const 'Sub' $P5040 = 'cuid_276_1367388600.55005' 
    capture_lex $P5040
    .const 'Sub' $P5041 = 'cuid_277_1367388600.55005' 
    capture_lex $P5041
    .const 'Sub' $P5042 = 'cuid_278_1367388600.55005' 
    capture_lex $P5042
    .const 'Sub' $P5043 = 'cuid_279_1367388600.55005' 
    capture_lex $P5043
    .const 'Sub' $P5044 = 'cuid_280_1367388600.55005' 
    capture_lex $P5044
    .const 'Sub' $P5045 = 'cuid_281_1367388600.55005' 
    capture_lex $P5045
    .const 'Sub' $P5046 = 'cuid_282_1367388600.55005' 
    capture_lex $P5046
    .const 'Sub' $P5047 = 'cuid_283_1367388600.55005' 
    capture_lex $P5047
    .const 'Sub' $P5048 = 'cuid_284_1367388600.55005' 
    capture_lex $P5048
    .const 'Sub' $P5049 = 'cuid_285_1367388600.55005' 
    capture_lex $P5049
    .const 'Sub' $P5050 = 'cuid_286_1367388600.55005' 
    capture_lex $P5050
    .const 'Sub' $P5051 = 'cuid_287_1367388600.55005' 
    capture_lex $P5051
    .const 'Sub' $P5052 = 'cuid_288_1367388600.55005' 
    capture_lex $P5052
    .const 'Sub' $P5053 = 'cuid_289_1367388600.55005' 
    capture_lex $P5053
    .const 'Sub' $P5054 = 'cuid_290_1367388600.55005' 
    capture_lex $P5054
    .const 'Sub' $P5055 = 'cuid_291_1367388600.55005' 
    capture_lex $P5055
    .const 'Sub' $P5056 = 'cuid_292_1367388600.55005' 
    capture_lex $P5056
    .const 'Sub' $P5057 = 'cuid_293_1367388600.55005' 
    capture_lex $P5057
    .const 'Sub' $P5058 = 'cuid_294_1367388600.55005' 
    capture_lex $P5058
    .const 'Sub' $P5059 = 'cuid_295_1367388600.55005' 
    capture_lex $P5059
    .const 'Sub' $P5060 = 'cuid_296_1367388600.55005' 
    capture_lex $P5060
    .const 'Sub' $P5061 = 'cuid_297_1367388600.55005' 
    capture_lex $P5061
    .const 'Sub' $P5062 = 'cuid_298_1367388600.55005' 
    capture_lex $P5062
    .const 'Sub' $P5063 = 'cuid_299_1367388600.55005' 
    capture_lex $P5063
    .const 'Sub' $P5064 = 'cuid_300_1367388600.55005' 
    capture_lex $P5064
    .const 'Sub' $P5065 = 'cuid_301_1367388600.55005' 
    capture_lex $P5065
    .const 'Sub' $P5066 = 'cuid_302_1367388600.55005' 
    capture_lex $P5066
    .const 'Sub' $P5067 = 'cuid_303_1367388600.55005' 
    capture_lex $P5067
    .const 'Sub' $P5068 = 'cuid_304_1367388600.55005' 
    capture_lex $P5068
    .const 'Sub' $P5069 = 'cuid_305_1367388600.55005' 
    capture_lex $P5069
    .const 'Sub' $P5070 = 'cuid_306_1367388600.55005' 
    capture_lex $P5070
    .const 'Sub' $P5071 = 'cuid_307_1367388600.55005' 
    capture_lex $P5071
    .const 'Sub' $P5072 = 'cuid_308_1367388600.55005' 
    capture_lex $P5072
    .const 'Sub' $P5073 = 'cuid_309_1367388600.55005' 
    capture_lex $P5073
    .const 'Sub' $P5074 = 'cuid_310_1367388600.55005' 
    capture_lex $P5074
    .const 'Sub' $P5075 = 'cuid_311_1367388600.55005' 
    capture_lex $P5075
    .const 'Sub' $P5076 = 'cuid_312_1367388600.55005' 
    capture_lex $P5076
    .const 'Sub' $P5077 = 'cuid_313_1367388600.55005' 
    capture_lex $P5077
    .const 'Sub' $P5078 = 'cuid_314_1367388600.55005' 
    capture_lex $P5078
    .const 'Sub' $P5079 = 'cuid_315_1367388600.55005' 
    capture_lex $P5079
    .const 'Sub' $P5080 = 'cuid_316_1367388600.55005' 
    capture_lex $P5080
    .const 'Sub' $P5081 = 'cuid_317_1367388600.55005' 
    capture_lex $P5081
    .const 'Sub' $P5082 = 'cuid_318_1367388600.55005' 
    capture_lex $P5082
    .const 'Sub' $P5083 = 'cuid_319_1367388600.55005' 
    capture_lex $P5083
    .const 'Sub' $P5084 = 'cuid_320_1367388600.55005' 
    capture_lex $P5084
    .const 'Sub' $P5085 = 'cuid_321_1367388600.55005' 
    capture_lex $P5085
    .const 'Sub' $P5086 = 'cuid_322_1367388600.55005' 
    capture_lex $P5086
    .const 'Sub' $P5087 = 'cuid_323_1367388600.55005' 
    capture_lex $P5087
    .const 'Sub' $P5088 = 'cuid_324_1367388600.55005' 
    capture_lex $P5088
    .const 'Sub' $P5089 = 'cuid_325_1367388600.55005' 
    capture_lex $P5089
    .const 'Sub' $P5090 = 'cuid_326_1367388600.55005' 
    capture_lex $P5090
    .const 'Sub' $P5091 = 'cuid_327_1367388600.55005' 
    capture_lex $P5091
    .const 'Sub' $P5092 = 'cuid_328_1367388600.55005' 
    capture_lex $P5092
    .const 'Sub' $P5093 = 'cuid_329_1367388600.55005' 
    capture_lex $P5093
    .const 'Sub' $P5094 = 'cuid_330_1367388600.55005' 
    capture_lex $P5094
    .const 'Sub' $P5095 = 'cuid_331_1367388600.55005' 
    capture_lex $P5095
    .const 'Sub' $P5096 = 'cuid_332_1367388600.55005' 
    capture_lex $P5096
    .const 'Sub' $P5097 = 'cuid_333_1367388600.55005' 
    capture_lex $P5097
    .const 'Sub' $P5098 = 'cuid_334_1367388600.55005' 
    capture_lex $P5098
    .const 'Sub' $P5099 = 'cuid_335_1367388600.55005' 
    capture_lex $P5099
    .const 'Sub' $P5100 = 'cuid_336_1367388600.55005' 
    capture_lex $P5100
    .const 'Sub' $P5101 = 'cuid_337_1367388600.55005' 
    capture_lex $P5101
    .const 'Sub' $P5102 = 'cuid_338_1367388600.55005' 
    capture_lex $P5102
    .const 'Sub' $P5103 = 'cuid_339_1367388600.55005' 
    capture_lex $P5103
    .const 'Sub' $P5104 = 'cuid_340_1367388600.55005' 
    capture_lex $P5104
    .const 'Sub' $P5105 = 'cuid_341_1367388600.55005' 
    capture_lex $P5105
    .const 'Sub' $P5106 = 'cuid_342_1367388600.55005' 
    capture_lex $P5106
    .const 'Sub' $P5107 = 'cuid_343_1367388600.55005' 
    capture_lex $P5107
    .const 'Sub' $P5108 = 'cuid_344_1367388600.55005' 
    capture_lex $P5108
    .const 'Sub' $P5109 = 'cuid_345_1367388600.55005' 
    capture_lex $P5109
    .const 'Sub' $P5110 = 'cuid_346_1367388600.55005' 
    capture_lex $P5110
    .const 'Sub' $P5111 = 'cuid_347_1367388600.55005' 
    capture_lex $P5111
    .const 'Sub' $P5112 = 'cuid_348_1367388600.55005' 
    capture_lex $P5112
    .const 'Sub' $P5113 = 'cuid_349_1367388600.55005' 
    capture_lex $P5113
    .const 'Sub' $P5114 = 'cuid_350_1367388600.55005' 
    capture_lex $P5114
    .const 'Sub' $P5115 = 'cuid_351_1367388600.55005' 
    capture_lex $P5115
    .const 'Sub' $P5116 = 'cuid_352_1367388600.55005' 
    capture_lex $P5116
    .const 'Sub' $P5117 = 'cuid_353_1367388600.55005' 
    capture_lex $P5117
    .const 'Sub' $P5118 = 'cuid_354_1367388600.55005' 
    capture_lex $P5118
    .const 'Sub' $P5119 = 'cuid_355_1367388600.55005' 
    capture_lex $P5119
    .const 'Sub' $P5120 = 'cuid_356_1367388600.55005' 
    capture_lex $P5120
    .const 'Sub' $P5121 = 'cuid_357_1367388600.55005' 
    capture_lex $P5121
    .const 'Sub' $P5122 = 'cuid_358_1367388600.55005' 
    capture_lex $P5122
    .const 'Sub' $P5123 = 'cuid_359_1367388600.55005' 
    capture_lex $P5123
    .return ($P111) 
.end
.HLL "nqp"
.namespace []
.sub "xblock_immediate" :subid("cuid_426_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1590
    .param pmc _lex_param_0 
    .lex "$xblock", _lex_param_0 
    .local pmc fb_tmp_179 
.annotate 'line', 1591
    set fb_tmp_179, _lex_param_0
    repr_defined $I5001, fb_tmp_179
    unless $I5001 goto if1722_else4094 
    set $P5001, fb_tmp_179[1]
    set $P5003, $P5001
    goto if1722_end4095
  if1722_else4094:
    null $P5002
    set $P5003, $P5002
  if1722_end4095:
    unless_null $P5003, vivi_17234096
    nqp_get_sc_object $P5004, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5003, $P5004
  vivi_17234096:
    $P5005 = "&block_immediate"($P5003)
    set _lex_param_0[1], $P5005
    .return (_lex_param_0) 
.end
.HLL "nqp"
.namespace []
.sub "block_immediate" :subid("cuid_430_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1595
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_429_1367388600.55005' 
    capture_lex $P5004 
    .lex "$block", _lex_param_0 
.annotate 'line', 1596
    _lex_param_0."blocktype"("immediate")
.annotate 'line', 1597
    $P5001 = _lex_param_0."symtable"()
    if $P5001 goto unless1724_end4098 
    .const 'Sub' $P5002 = 'cuid_429_1367388600.55005' 
    capture_lex $P5002
    $P5003 = $P5002()
  unless1724_end4098:
    .return (_lex_param_0) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_429_1367388600.55005") :anon :lex :outer("cuid_430_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1597
    .const 'Sub' $P5013 = 'cuid_428_1367388600.55005' 
    capture_lex $P5013 
    .lex "$stmts", $P101 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
.annotate 'line', 1598
    nqp_get_sc_object $P5002, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 93
    find_lex $P5003, "$block"
    $P5004 = $P5003."node"()
    $P5005 = $P5002."new"($P5004 :named("node"))
    set $P101, $P5005
.annotate 'line', 1599
    find_lex $P5009, "$block"
    $P5010 = $P5009."list"()
    set $P5006, $P5010
    iter $P5008, $P5010
  for_next4099:
    unless $P5008, for_done4101
    shift $P5012, $P5008
  for_redo4100:
    .const 'Sub' $P5011 = 'cuid_428_1367388600.55005' 
    capture_lex $P5011
    $P5006 = $P5011($P5012)
    goto for_next4099
  for_done4101:
    store_lex "$block", $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_428_1367388600.55005") :anon :lex :outer("cuid_429_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1599
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "$stmts"
    $P5002 = $P5001."push"(_lex_param_0)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "default_for" :subid("cuid_433_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1605
    .param pmc _lex_param_0 
    .const 'Sub' $P5009 = 'cuid_432_1367388600.55005' 
    capture_lex $P5009 
    .lex "$sigil", _lex_param_0 
    set $S5001, _lex_param_0
    iseq $I5001, $S5001, "@"
    unless $I5001 goto if1725_else4102 
.annotate 'line', 1606
.annotate 'line', 1607
    nqp_get_sc_object $P5001, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    $P5002 = $P5001."new"("list" :named("op"))
    set $P5008, $P5002
    goto if1725_end4103
  if1725_else4102:
    set $S5002, _lex_param_0
    iseq $I5002, $S5002, "%"
    unless $I5002 goto if1726_else4104 
.annotate 'line', 1609
.annotate 'line', 1610
    nqp_get_sc_object $P5003, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    $P5004 = $P5003."new"("hash" :named("op"))
    set $P5007, $P5004
    goto if1726_end4105
  if1726_else4104:
    .const 'Sub' $P5005 = 'cuid_432_1367388600.55005' 
    capture_lex $P5005
    $P5006 = $P5005()
    set $P5007, $P5006
  if1726_end4105:
    set $P5008, $P5007
  if1725_end4103:
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_432_1367388600.55005") :anon :lex :outer("cuid_433_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1612
    .const 'Sub' $P5020 = 'cuid_431_1367388600.55005' 
    capture_lex $P5020 
    .lex "$default", $P101 
    .local pmc fb_tmp_180 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    new $P5018, 'ExceptionHandler'
    set_label $P5018, catch_handler_17334114
    $P5018.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5018
.annotate 'line', 1614
    new $P5016, 'ExceptionHandler'
    set_label $P5016, catch_handler_17314112
    $P5016.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5016
.annotate 'line', 1615
    nqp_get_sc_object $P5002, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 61
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback4106
    nqp_get_sc_object $P5005, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5004, $P5005
    set fb_tmp_180, $P5004
    repr_defined $I5001, fb_tmp_180
    unless $I5001 goto if1727_else4107 
    set $P5006, fb_tmp_180["$W"]
    set $P5008, $P5006
    goto if1727_end4108
  if1727_else4107:
    null $P5007
    set $P5008, $P5007
  if1727_end4108:
    unless_null $P5008, vivi_17284109
    nqp_get_sc_object $P5009, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5008, $P5009
  vivi_17284109:
    unless_null $P5008, vivi_17294110
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_17294110:
    set $P5003, $P5008
  fallback4106:
    new $P5011, 'ResizablePMCArray'
    box $P5012, "NQPMu"
    push $P5011, $P5012
    $P5013 = $P5003."find_sym"($P5011)
    $P5014 = $P5002."new"($P5013 :named("value"))
    set $P101, $P5014
    nqp_get_sc_object $P5015, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5017, $P5015
    pop_eh 
    goto skip_handler_17304111
  catch_handler_17314112:
    .get_results ($P5016) 
    .const 'Sub' $P10001 = 'cuid_431_1367388600.55005' 
    capture_lex $P10001
    $P10001($P5016)
    set $I10001, 1
    set $P5016["handled"], $I10001
    nqp_get_sc_object $P10002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    finalize $P5016
    pop_upto_eh $P5016
    pop_eh 
    set $P5017, $P10002
    goto skip_handler_17304111
  skip_handler_17304111:
    set $P5019, $P5017
    pop_eh 
    goto skip_handler_17324113
  catch_handler_17334114:
    .get_results ($P5018) 
    set $I10001, 1
    set $P5018["handled"], $I10001
    nqp_get_sc_object $P10001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    finalize $P5018
    pop_upto_eh $P5018
    pop_eh 
    set $P5019, $P10001
    goto skip_handler_17324113
  skip_handler_17324113:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_431_1367388600.55005") :anon :lex :outer("cuid_432_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1616
    .param pmc _lex_param_0 
    .lex "$!", $P101 
    .lex "$_", _lex_param_0 
    set $P101, _lex_param_0
    nqp_get_sc_object $P5001, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    $P5002 = $P5001."new"("null" :named("op"))
    store_lex "$default", $P5002
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "default_value_for_prim" :subid("cuid_434_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1622
    .param pmc _lex_param_0 
    .lex "$prim", _lex_param_0 
    set $N5001, _lex_param_0
    set $N5002, 1
    iseq $I5001, $N5001, $N5002
    unless $I5001 goto if1734_else4115 
.annotate 'line', 1623
    nqp_get_sc_object $P5001, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 42
    $P5002 = $P5001."new"(0 :named("value"))
    set $P5008, $P5002
    goto if1734_end4116
  if1734_else4115:
    set $N5003, _lex_param_0
    set $N5004, 2
    iseq $I5002, $N5003, $N5004
    unless $I5002 goto if1735_else4117 
.annotate 'line', 1624
    nqp_get_sc_object $P5003, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 47
    $P5004 = $P5003."new"(0.0 :named("value"))
    set $P5007, $P5004
    goto if1735_end4118
  if1735_else4117:
.annotate 'line', 1625
    nqp_get_sc_object $P5005, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 52
    $P5006 = $P5005."new"("" :named("value"))
    set $P5007, $P5006
  if1735_end4118:
    set $P5008, $P5007
  if1734_end4116:
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "colonpair_str" :subid("cuid_437_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1637
    .param pmc _lex_param_0 
    .const 'Sub' $P5006 = 'cuid_436_1367388600.55005' 
    capture_lex $P5006 
    .lex "$ast", _lex_param_0 
    nqp_get_sc_object $P5001, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    type_check $I5001, _lex_param_0, $P5001
    unless $I5001 goto if1736_else4119 
    .const 'Sub' $P5002 = 'cuid_436_1367388600.55005' 
    capture_lex $P5002
    $P5003 = $P5002()
    set $P5005, $P5003
    goto if1736_end4120
  if1736_else4119:
.annotate 'line', 1642
.annotate 'line', 1643
    $P5004 = _lex_param_0."value"()
    set $P5005, $P5004
  if1736_end4120:
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_436_1367388600.55005") :anon :lex :outer("cuid_437_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1638
    .const 'Sub' $P5010 = 'cuid_435_1367388600.55005' 
    capture_lex $P5010 
    .lex "@parts", $P101 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
.annotate 'line', 1640
    find_lex $P5005, "$ast"
    $P5006 = $P5005."list"()
    set $P5002, $P5006
    iter $P5004, $P5006
  for_next4121:
    unless $P5004, for_done4123
    shift $P5008, $P5004
  for_redo4122:
    .const 'Sub' $P5007 = 'cuid_435_1367388600.55005' 
    capture_lex $P5007
    $P5002 = $P5007($P5008)
    goto for_next4121
  for_done4123:
.annotate 'line', 1641
    $P5009 = "&join"(" ", $P101)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_435_1367388600.55005") :anon :lex :outer("cuid_436_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1640
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "@parts"
    $P5002 = _lex_param_0."value"()
    $P5003 = $P5001."push"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "import_HOW_exports" :subid("cuid_439_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1829
    .param pmc _lex_param_0 
    .const 'Sub' $P5013 = 'cuid_438_1367388600.55005' 
    capture_lex $P5013 
    .lex "$UNIT", _lex_param_0 
    .local pmc fb_tmp_181 
    exists $I5001, _lex_param_0["EXPORTHOW"]
    box $P5012, $I5001
    set $P5011, $P5012
    unless $I5001 goto if1737_end4125 
.annotate 'line', 1831
    set fb_tmp_181, _lex_param_0
    repr_defined $I5002, fb_tmp_181
    unless $I5002 goto if1738_else4126 
    set $P5005, fb_tmp_181["EXPORTHOW"]
    set $P5007, $P5005
    goto if1738_end4127
  if1738_else4126:
    null $P5006
    set $P5007, $P5006
  if1738_end4127:
    unless_null $P5007, vivi_17394128
    nqp_get_sc_object $P5008, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5007, $P5008
  vivi_17394128:
    get_who $P5004, $P5007
    set $P5001, $P5004
    iter $P5003, $P5004
  for_next4134:
    unless $P5003, for_done4136
    shift $P5010, $P5003
  for_redo4135:
    .const 'Sub' $P5009 = 'cuid_438_1367388600.55005' 
    capture_lex $P5009
    $P5001 = $P5009($P5010)
    goto for_next4134
  for_done4136:
    set $P5011, $P5001
  if1737_end4125:
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_438_1367388600.55005") :anon :lex :outer("cuid_439_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1832
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_182 
    .local pmc pkg_viv_tmp_40 
    find_dynamic_lex $P5001, "%*HOW"
    unless_null $P5001, fallback4129
    nqp_get_sc_object $P5003, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_40, $P5002
    set fb_tmp_182, pkg_viv_tmp_40
    repr_defined $I5001, fb_tmp_182
    unless $I5001 goto if1740_else4130 
    set $P5004, fb_tmp_182["%HOW"]
    set $P5006, $P5004
    goto if1740_end4131
  if1740_else4130:
    null $P5005
    set $P5006, $P5005
  if1740_end4131:
    unless_null $P5006, vivi_17414132
    new $P5007, 'Hash'
    set pkg_viv_tmp_40["%HOW"], $P5007
    set $P5006, $P5007
  vivi_17414132:
    unless_null $P5006, vivi_17424133
    die "Contextual %*HOW not found"
    box $P5008, "Contextual %*HOW not found"
    set $P5006, $P5008
  vivi_17424133:
    set $P5001, $P5006
  fallback4129:
.annotate 'line', 1833
    $P5009 = _lex_param_0."key"()
    set $S5001, $P5009
    $P5010 = _lex_param_0."value"()
    set $P5001[$S5001], $P5010
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "set_block_handler" :subid("cuid_440_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1931
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$/", _lex_param_0 
    .lex "$block", _lex_param_1 
    .lex "$type", _lex_param_2 
    .local pmc fb_tmp_183 
    .local pmc pkg_viv_tmp_41 
    .local pmc fb_tmp_184 
    .local pmc pkg_viv_tmp_42 
    find_dynamic_lex $P5001, "%*HANDLERS"
    unless_null $P5001, fallback4139
    nqp_get_sc_object $P5003, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_41, $P5002
    set fb_tmp_183, pkg_viv_tmp_41
    repr_defined $I5002, fb_tmp_183
    unless $I5002 goto if1744_else4140 
    set $P5004, fb_tmp_183["%HANDLERS"]
    set $P5006, $P5004
    goto if1744_end4141
  if1744_else4140:
    null $P5005
    set $P5006, $P5005
  if1744_end4141:
    unless_null $P5006, vivi_17454142
    new $P5007, 'Hash'
    set pkg_viv_tmp_41["%HANDLERS"], $P5007
    set $P5006, $P5007
  vivi_17454142:
    unless_null $P5006, vivi_17464143
    die "Contextual %*HANDLERS not found"
    box $P5008, "Contextual %*HANDLERS not found"
    set $P5006, $P5008
  vivi_17464143:
    set $P5001, $P5006
  fallback4139:
    set $S5001, _lex_param_2
    exists $I5001, $P5001[$S5001]
    unless $I5001 goto if1743_end4138 
.annotate 'line', 1932
    set $S5004, _lex_param_2
    concat $S5003, "Duplicate ", $S5004
    concat $S5002, $S5003, " handler in block"
    box $P5009, $S5002
    die $P5009
  if1743_end4138:
.annotate 'line', 1935
    $P5010 = _lex_param_1."arity"()
    if $P5010 goto unless1747_end4145 
.annotate 'line', 1936
.annotate 'line', 1937
    nqp_get_sc_object $P5011, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 1938
    nqp_get_sc_object $P5012, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5013 = $P5012."new"("lexical" :named("scope"), "$!" :named("name"), "var" :named("decl"))
.annotate 'line', 1939
    nqp_get_sc_object $P5014, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5015 = $P5014."new"("lexical" :named("scope"), "$_" :named("name"))
    $P5016 = $P5011."new"($P5013, $P5015, "bind" :named("op"))
    _lex_param_1."unshift"($P5016)
.annotate 'line', 1942
    nqp_get_sc_object $P5017, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5018 = $P5017."new"("$_" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    _lex_param_1."unshift"($P5018)
.annotate 'line', 1943
    _lex_param_1."symbol"("$_", "lexical" :named("scope"))
.annotate 'line', 1944
    _lex_param_1."symbol"("$!", "lexical" :named("scope"))
.annotate 'line', 1945
    $P5019 = _lex_param_1."arity"(1)
  unless1747_end4145:
.annotate 'line', 1947
    _lex_param_1."blocktype"("declaration")
    find_dynamic_lex $P5020, "%*HANDLERS"
    unless_null $P5020, fallback4146
    nqp_get_sc_object $P5022, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5021, $P5022
    set pkg_viv_tmp_42, $P5021
    set fb_tmp_184, pkg_viv_tmp_42
    repr_defined $I5003, fb_tmp_184
    unless $I5003 goto if1748_else4147 
    set $P5023, fb_tmp_184["%HANDLERS"]
    set $P5025, $P5023
    goto if1748_end4148
  if1748_else4147:
    null $P5024
    set $P5025, $P5024
  if1748_end4148:
    unless_null $P5025, vivi_17494149
    new $P5026, 'Hash'
    set pkg_viv_tmp_42["%HANDLERS"], $P5026
    set $P5025, $P5026
  vivi_17494149:
    unless_null $P5025, vivi_17504150
    die "Contextual %*HANDLERS not found"
    box $P5027, "Contextual %*HANDLERS not found"
    set $P5025, $P5027
  vivi_17504150:
    set $P5020, $P5025
  fallback4146:
    set $S5005, _lex_param_2
.annotate 'line', 1948
    nqp_get_sc_object $P5028, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 93
.annotate 'line', 1949
    nqp_get_sc_object $P5029, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 1951
    nqp_get_sc_object $P5030, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    $P5031 = $P5030."new"("exception" :named("op"))
    $P5032 = $P5029."new"(_lex_param_1, $P5031, "call" :named("op"))
.annotate 'line', 1953
    nqp_get_sc_object $P5033, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 89
.annotate 'line', 1954
    nqp_get_sc_object $P5034, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 1956
    nqp_get_sc_object $P5035, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    $P5036 = $P5035."new"("exception" :named("op"))
.annotate 'line', 1957
    nqp_get_sc_object $P5037, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 52
    $P5038 = $P5037."new"("handled" :named("value"))
.annotate 'line', 1958
    nqp_get_sc_object $P5039, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 42
    $P5040 = $P5039."new"(1 :named("value"))
    $P5041 = $P5034."new"($P5036, $P5038, $P5040, "bindkey_i" :named("op"))
.annotate 'line', 1960
    nqp_get_sc_object $P5042, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    $P5043 = $P5042."new"("null" :named("op"))
    $P5044 = $P5033."new"($P5041 :named("parrot"), $P5043 :named("jvm"))
.annotate 'line', 1962
    $P5045 = "&default_for"("$")
    $P5046 = $P5028."new"($P5032, $P5044, $P5045)
    set $P5020[$S5005], $P5046
    .return ($P5046) 
.end
.HLL "nqp"
.namespace []
.sub "only_star_block" :subid("cuid_441_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2606
    .lex "$past", $P101 
    .local pmc fb_tmp_185 
    .local pmc fb_tmp_186 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
.annotate 'line', 2607
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback4151
    nqp_get_sc_object $P5004, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5003, $P5004
    set fb_tmp_185, $P5003
    repr_defined $I5001, fb_tmp_185
    unless $I5001 goto if1751_else4152 
    set $P5005, fb_tmp_185["$W"]
    set $P5007, $P5005
    goto if1751_end4153
  if1751_else4152:
    null $P5006
    set $P5007, $P5006
  if1751_end4153:
    unless_null $P5007, vivi_17524154
    nqp_get_sc_object $P5008, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5007, $P5008
  vivi_17524154:
    unless_null $P5007, vivi_17534155
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_17534155:
    set $P5002, $P5007
  fallback4151:
    $P5010 = $P5002."pop_lexpad"()
    set $P101, $P5010
.annotate 'line', 2608
    nqp_get_sc_object $P5011, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 2610
    nqp_get_sc_object $P5012, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 2612
    nqp_get_sc_object $P5013, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 2614
    nqp_get_sc_object $P5014, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
.annotate 'line', 2616
    nqp_get_sc_object $P5015, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    nqp_get_sc_object $P5016, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    $P5017 = $P5016."new"("curcode" :named("op"))
    $P5018 = $P5015."new"($P5017, "getcodeobj" :named("op"))
.annotate 'line', 2617
    nqp_get_sc_object $P5019, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 61
    find_dynamic_lex $P5020, "$*W"
    unless_null $P5020, fallback4156
    nqp_get_sc_object $P5022, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5021, $P5022
    set fb_tmp_186, $P5021
    repr_defined $I5002, fb_tmp_186
    unless $I5002 goto if1754_else4157 
    set $P5023, fb_tmp_186["$W"]
    set $P5025, $P5023
    goto if1754_end4158
  if1754_else4157:
    null $P5024
    set $P5025, $P5024
  if1754_end4158:
    unless_null $P5025, vivi_17554159
    nqp_get_sc_object $P5026, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5025, $P5026
  vivi_17554159:
    unless_null $P5025, vivi_17564160
    die "Contextual $*W not found"
    box $P5027, "Contextual $*W not found"
    set $P5025, $P5027
  vivi_17564160:
    set $P5020, $P5025
  fallback4156:
    new $P5028, 'ResizablePMCArray'
    box $P5029, "NQPRoutine"
    push $P5028, $P5029
    $P5030 = $P5020."find_sym"($P5028)
    $P5031 = $P5019."new"($P5030 :named("value"))
    $P5032 = $P5014."new"($P5018, $P5031, "$!dispatch_cache" :named("name"), "attribute" :named("scope"))
.annotate 'line', 2619
    nqp_get_sc_object $P5033, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    $P5034 = $P5033."new"("usecapture" :named("op"))
    $P5035 = $P5013."new"($P5032, $P5034, "multicachefind" :named("op"))
.annotate 'line', 2621
    nqp_get_sc_object $P5036, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 2623
    nqp_get_sc_object $P5037, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    nqp_get_sc_object $P5038, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    $P5039 = $P5038."new"("curcode" :named("op"))
    $P5040 = $P5037."new"($P5039, "getcodeobj" :named("op"))
.annotate 'line', 2624
    nqp_get_sc_object $P5041, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    $P5042 = $P5041."new"("usecapture" :named("op"))
    $P5043 = $P5036."new"($P5040, $P5042, "callmethod" :named("op"), "dispatch" :named("name"))
    $P5044 = $P5012."new"($P5035, $P5043, "ifnull" :named("op"))
.annotate 'line', 2627
    nqp_get_sc_object $P5045, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    $P5046 = $P5045."new"("usecapture" :named("op"))
    $P5047 = $P5011."new"($P5044, $P5046, "invokewithcapture" :named("op"))
    $P101."push"($P5047)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "attach_multi_signature" :subid("cuid_443_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2632
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5024 = 'cuid_442_1367388600.55005' 
    capture_lex $P5024 
    .lex "$types", $P101 
    .lex "$definednesses", $P102 
    .lex "$code_obj", _lex_param_0 
    .lex "$routine", _lex_param_1 
    .local pmc fb_tmp_187 
    .local pmc fb_tmp_190 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
    new $P5003, 'ResizablePMCArray'
    set $P101, $P5003
    new $P5004, 'ResizablePMCArray'
    set $P102, $P5004
    set fb_tmp_187, _lex_param_1
    repr_defined $I5001, fb_tmp_187
    unless $I5001 goto if1757_else4161 
    set $P5008, fb_tmp_187[0]
    set $P5010, $P5008
    goto if1757_end4162
  if1757_else4161:
    null $P5009
    set $P5010, $P5009
  if1757_end4162:
    unless_null $P5010, vivi_17584163
    nqp_get_sc_object $P5011, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5010, $P5011
  vivi_17584163:
    $P5012 = $P5010."list"()
    set $P5005, $P5012
    iter $P5007, $P5012
  for_next4182:
    unless $P5007, for_done4184
    shift $P5014, $P5007
  for_redo4183:
    .const 'Sub' $P5013 = 'cuid_442_1367388600.55005' 
    capture_lex $P5013
    $P5005 = $P5013($P5014)
    goto for_next4182
  for_done4184:
.annotate 'line', 2644
    find_dynamic_lex $P5015, "$*W"
    unless_null $P5015, fallback4185
    nqp_get_sc_object $P5017, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5016, $P5017
    set fb_tmp_190, $P5016
    repr_defined $I5002, fb_tmp_190
    unless $I5002 goto if1769_else4186 
    set $P5018, fb_tmp_190["$W"]
    set $P5020, $P5018
    goto if1769_end4187
  if1769_else4186:
    null $P5019
    set $P5020, $P5019
  if1769_end4187:
    unless_null $P5020, vivi_17704188
    nqp_get_sc_object $P5021, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5020, $P5021
  vivi_17704188:
    unless_null $P5020, vivi_17714189
    die "Contextual $*W not found"
    box $P5022, "Contextual $*W not found"
    set $P5020, $P5022
  vivi_17714189:
    set $P5015, $P5020
  fallback4185:
    $P5023 = $P5015."set_routine_signature"(_lex_param_0, $P101, $P102)
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_442_1367388600.55005") :anon :lex :outer("cuid_443_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2635
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_188 
    .local pmc fb_tmp_189 
    nqp_get_sc_object $P5001, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    type_check $I5001, _lex_param_0, $P5001
    set $I5003, $I5001
    unless $I5001 goto if1761_end4169 
.annotate 'line', 2636
    $P5002 = _lex_param_0."decl"()
    set $S5001, $P5002
    iseq $I5002, $S5001, "param"
    set $I5003, $I5002
  if1761_end4169:
    set $I5005, $I5003
    unless $I5003 goto if1760_end4167 
    $P5003 = _lex_param_0."named"()
    isfalse $I5004, $P5003
    set $I5005, $I5004
  if1760_end4167:
    box $P5021, $I5005
    set $P5020, $P5021
    unless $I5005 goto if1759_end4165 
.annotate 'line', 2637
    find_lex $P5004, "$types"
    $P5005 = _lex_param_0."returns"()
    get_id $I5007, $P5005
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    get_id $I5008, $P5006
    iseq $I5006, $I5007, $I5008
    unless $I5006 goto if1762_else4170 
    null $P5007
    set $P5009, $P5007
    goto if1762_end4171
  if1762_else4170:
.annotate 'line', 2639
    $P5008 = _lex_param_0."returns"()
    set $P5009, $P5008
  if1762_end4171:
    $P5004."push"($P5009)
.annotate 'line', 2640
    find_lex $P5010, "$definednesses"
    set fb_tmp_188, _lex_param_0
    repr_defined $I5010, fb_tmp_188
    unless $I5010 goto if1764_else4174 
    set $P5011, fb_tmp_188["definedness"]
    set $P5013, $P5011
    goto if1764_end4175
  if1764_else4174:
    null $P5012
    set $P5013, $P5012
  if1764_end4175:
    unless_null $P5013, vivi_17654176
    nqp_get_sc_object $P5014, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5013, $P5014
  vivi_17654176:
    set $S5002, $P5013
    iseq $I5009, $S5002, "D"
    unless $I5009 goto if1763_else4172 
    set $I5014, 1
    goto if1763_end4173
  if1763_else4172:
    set fb_tmp_189, _lex_param_0
    repr_defined $I5012, fb_tmp_189
    unless $I5012 goto if1767_else4179 
    set $P5015, fb_tmp_189["definedness"]
    set $P5017, $P5015
    goto if1767_end4180
  if1767_else4179:
    null $P5016
    set $P5017, $P5016
  if1767_end4180:
    unless_null $P5017, vivi_17684181
    nqp_get_sc_object $P5018, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5017, $P5018
  vivi_17684181:
    set $S5003, $P5017
    iseq $I5011, $S5003, "U"
    unless $I5011 goto if1766_else4177 
    set $I5013, 2
    goto if1766_end4178
  if1766_else4177:
    set $I5013, 0
  if1766_end4178:
    set $I5014, $I5013
  if1763_end4173:
    $P5019 = $P5010."push"($I5014)
    set $P5020, $P5019
  if1759_end4165:
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "wrap_return_handler" :subid("cuid_444_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2647
    .param pmc _lex_param_0 
    .lex "$past", _lex_param_0 
.annotate 'line', 2648
    nqp_get_sc_object $P5001, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    $P5002 = $P5001."new"(_lex_param_0, "lexotic" :named("op"), "RETURN" :named("name"))
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "lexical_package_lookup" :subid("cuid_450_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3162
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5037 = 'cuid_447_1367388600.55005' 
    capture_lex $P5037 
    .lex "$final_name", $P101 
    .lex "$lookup", $P102 
    .lex "@name", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_191 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
    root_new $P103, ['parrot';'Continuation']
    set_label $P103, lexotic_4190
    .lex "RETURN", $P103
    set $N5001, _lex_param_0
    set $N5002, 0
    iseq $I5001, $N5001, $N5002
    unless $I5001 goto if1772_end4193 
.annotate 'line', 3164
    $P5003 = _lex_param_1."CURSOR"()
    $P5004 = $P5003."panic"("Cannot compile empty name")
  if1772_end4193:
.annotate 'line', 3168
    $P5005 = _lex_param_0."pop"()
    set $P101, $P5005
.annotate 'line', 3169
    nqp_get_sc_object $P5006, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 80
.annotate 'line', 3171
    nqp_get_sc_object $P5007, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 52
    set $S5001, $P101
    $P5008 = $P5007."new"($S5001 :named("value"))
    $P5009 = $P5006."new"($P5008, "associative" :named("scope"))
    set $P102, $P5009
    set $N5003, _lex_param_0
    set $N5004, 0
    iseq $I5002, $N5003, $N5004
    unless $I5002 goto if1773_else4194 
.annotate 'line', 3176
.annotate 'line', 3177
    nqp_get_sc_object $P5010, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 3179
    nqp_get_sc_object $P5011, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5012 = $P5011."new"("$?PACKAGE" :named("name"), "lexical" :named("scope"))
    $P5013 = $P5010."new"($P5012, "who" :named("op"))
    $P102."unshift"($P5013)
.annotate 'line', 3181
    nqp_get_sc_object $P5014, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 3183
    nqp_get_sc_object $P5015, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 3185
    nqp_get_sc_object $P5016, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 3187
    nqp_get_sc_object $P5017, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 61
    find_dynamic_lex $P5018, "$*GLOBALish"
    unless_null $P5018, fallback4196
    nqp_get_sc_object $P5020, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5019, $P5020
    set fb_tmp_191, $P5019
    repr_defined $I5003, fb_tmp_191
    unless $I5003 goto if1774_else4197 
    set $P5021, fb_tmp_191["$GLOBALish"]
    set $P5023, $P5021
    goto if1774_end4198
  if1774_else4197:
    null $P5022
    set $P5023, $P5022
  if1774_end4198:
    unless_null $P5023, vivi_17754199
    nqp_get_sc_object $P5024, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5023, $P5024
  vivi_17754199:
    unless_null $P5023, vivi_17764200
    die "Contextual $*GLOBALish not found"
    box $P5025, "Contextual $*GLOBALish not found"
    set $P5023, $P5025
  vivi_17764200:
    set $P5018, $P5023
  fallback4196:
    $P5026 = $P5017."new"($P5018 :named("value"))
    $P5027 = $P5016."new"($P5026, "who" :named("op"))
.annotate 'line', 3189
    nqp_get_sc_object $P5028, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 52
    set $S5002, $P101
    $P5029 = $P5028."new"($S5002 :named("value"))
    $P5030 = $P5015."new"($P5027, $P5029, "atkey" :named("op"))
.annotate 'line', 3191
    set $S5004, $P101
    substr $S5003, $S5004, 0, 1
    $P5031 = "&default_for"($S5003)
    $P5032 = $P5014."new"($P5030, $P5031, "ifnull" :named("op"))
    $P5033 = $P102."fallback"($P5032)
    goto if1773_end4195
  if1773_else4194:
    .const 'Sub' $P5034 = 'cuid_447_1367388600.55005' 
    capture_lex $P5034
    $P5035 = $P5034()
  if1773_end4195:
    $P5036 = "RETURN"($P102)
    goto lexotic_4191
  lexotic_4190:
    .get_results ($P5036)
  lexotic_4191:
    .return ($P5036) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_447_1367388600.55005") :anon :lex :outer("cuid_450_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3197
    .const 'Sub' $P5053 = 'cuid_446_1367388600.55005' 
    capture_lex $P5053 
    .const 'Sub' $P5053 = 'cuid_448_1367388600.55005' 
    capture_lex $P5053 
    .const 'Sub' $P5053 = 'cuid_449_1367388600.55005' 
    capture_lex $P5053 
    .lex "$path", $P101 
    .lex "$sigil", $P102 
    .local pmc fb_tmp_192 
    .local pmc fb_tmp_193 
    .local pmc fb_tmp_195 
    .local pmc fb_tmp_196 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
.annotate 'line', 3199
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback4203
    nqp_get_sc_object $P5005, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5004, $P5005
    set fb_tmp_192, $P5004
    repr_defined $I5001, fb_tmp_192
    unless $I5001 goto if1778_else4204 
    set $P5006, fb_tmp_192["$W"]
    set $P5008, $P5006
    goto if1778_end4205
  if1778_else4204:
    null $P5007
    set $P5008, $P5007
  if1778_end4205:
    unless_null $P5008, vivi_17794206
    nqp_get_sc_object $P5009, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5008, $P5009
  vivi_17794206:
    unless_null $P5008, vivi_17804207
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_17804207:
    set $P5003, $P5008
  fallback4203:
    find_lex $P5011, "@name"
    set fb_tmp_193, $P5011
    repr_defined $I5002, fb_tmp_193
    unless $I5002 goto if1781_else4208 
    set $P5012, fb_tmp_193[0]
    set $P5014, $P5012
    goto if1781_end4209
  if1781_else4208:
    null $P5013
    set $P5014, $P5013
  if1781_end4209:
    unless_null $P5014, vivi_17824210
    nqp_get_sc_object $P5015, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5014, $P5015
  vivi_17824210:
    $P5016 = $P5003."is_lexical"($P5014)
    unless $P5016 goto if1777_else4201 
    .const 'Sub' $P5017 = 'cuid_446_1367388600.55005' 
    capture_lex $P5017
    $P5018 = $P5017()
    goto if1777_end4202
  if1777_else4201:
.annotate 'line', 3208
.annotate 'line', 3209
    nqp_get_sc_object $P5019, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 61
    find_dynamic_lex $P5020, "$*GLOBALish"
    unless_null $P5020, fallback4218
    nqp_get_sc_object $P5022, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5021, $P5022
    set fb_tmp_195, $P5021
    repr_defined $I5003, fb_tmp_195
    unless $I5003 goto if1788_else4219 
    set $P5023, fb_tmp_195["$GLOBALish"]
    set $P5025, $P5023
    goto if1788_end4220
  if1788_else4219:
    null $P5024
    set $P5025, $P5024
  if1788_end4220:
    unless_null $P5025, vivi_17894221
    nqp_get_sc_object $P5026, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5025, $P5026
  vivi_17894221:
    unless_null $P5025, vivi_17904222
    die "Contextual $*GLOBALish not found"
    box $P5027, "Contextual $*GLOBALish not found"
    set $P5025, $P5027
  vivi_17904222:
    set $P5020, $P5025
  fallback4218:
    $P5028 = $P5019."new"($P5020 :named("value"))
    set $P101, $P5028
  if1777_end4202:
    find_lex $P5029, "@name"
    set fb_tmp_196, $P5029
    repr_defined $I5005, fb_tmp_196
    unless $I5005 goto if1792_else4225 
    set $P5030, fb_tmp_196[0]
    set $P5032, $P5030
    goto if1792_end4226
  if1792_else4225:
    null $P5031
    set $P5032, $P5031
  if1792_end4226:
    unless_null $P5032, vivi_17934227
    nqp_get_sc_object $P5033, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5032, $P5033
  vivi_17934227:
    set $S5001, $P5032
    iseq $I5004, $S5001, "GLOBAL"
    unless $I5004 goto if1791_end4224 
.annotate 'line', 3211
.annotate 'line', 3212
    find_lex $P5034, "@name"
    $P5035 = $P5034."shift"()
  if1791_end4224:
    find_lex $P5039, "@name"
    set $P5036, $P5039
    iter $P5038, $P5039
  for_next4228:
    unless $P5038, for_done4230
    shift $P5041, $P5038
  for_redo4229:
    .const 'Sub' $P5040 = 'cuid_448_1367388600.55005' 
    capture_lex $P5040
    $P5036 = $P5040($P5041)
    goto for_next4228
  for_done4230:
.annotate 'line', 3237
    find_lex $P5042, "$lookup"
    nqp_get_sc_object $P5043, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    $P5044 = $P5043."new"($P101, "who" :named("op"))
    $P5042."unshift"($P5044)
    find_lex $P5045, "$final_name"
    set $S5003, $P5045
    substr $S5002, $S5003, 0, 1
    box $P5046, $S5002
    set $P102, $P5046
    set $S5004, $P102
    iseq $I5006, $S5004, "@"
    set $I5008, $I5006
    if $I5006 goto unless1795_end4234 
    set $S5005, $P102
    iseq $I5007, $S5005, "%"
    set $I5008, $I5007
  unless1795_end4234:
    unless $I5008 goto if1794_else4231 
    .const 'Sub' $P5047 = 'cuid_449_1367388600.55005' 
    capture_lex $P5047
    $P5048 = $P5047()
    set $P5052, $P5048
    goto if1794_end4232
  if1794_else4231:
.annotate 'line', 3252
.annotate 'line', 3253
    find_lex $P5049, "$lookup"
    $P5050 = "&default_for"($P102)
    $P5051 = $P5049."fallback"($P5050)
    set $P5052, $P5051
  if1794_end4232:
    .return ($P5052) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_446_1367388600.55005") :anon :lex :outer("cuid_447_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3200
    .const 'Sub' $P5019 = 'cuid_445_1367388600.55005' 
    capture_lex $P5019 
    .lex "$first", $P101 
    .local pmc fb_tmp_194 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    new $P5017, 'ExceptionHandler'
    set_label $P5017, catch_handler_17874217
    $P5017.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5017
.annotate 'line', 3201
    find_lex $P5002, "@name"
    $P5003 = $P5002."shift"()
    set $P101, $P5003
.annotate 'line', 3202
    nqp_get_sc_object $P5004, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 61
    find_dynamic_lex $P5005, "$*W"
    unless_null $P5005, fallback4211
    nqp_get_sc_object $P5007, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5006, $P5007
    set fb_tmp_194, $P5006
    repr_defined $I5001, fb_tmp_194
    unless $I5001 goto if1783_else4212 
    set $P5008, fb_tmp_194["$W"]
    set $P5010, $P5008
    goto if1783_end4213
  if1783_else4212:
    null $P5009
    set $P5010, $P5009
  if1783_end4213:
    unless_null $P5010, vivi_17844214
    nqp_get_sc_object $P5011, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5010, $P5011
  vivi_17844214:
    unless_null $P5010, vivi_17854215
    die "Contextual $*W not found"
    box $P5012, "Contextual $*W not found"
    set $P5010, $P5012
  vivi_17854215:
    set $P5005, $P5010
  fallback4211:
    new $P5013, 'ResizablePMCArray'
    push $P5013, $P101
    $P5014 = $P5005."find_sym"($P5013)
    $P5015 = $P5004."new"($P5014 :named("value"))
    store_lex "$path", $P5015
    nqp_get_sc_object $P5016, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5018, $P5016
    pop_eh 
    goto skip_handler_17864216
  catch_handler_17874217:
    .get_results ($P5017) 
    .const 'Sub' $P10001 = 'cuid_445_1367388600.55005' 
    capture_lex $P10001
    $P10001($P5017)
    set $I10001, 1
    set $P5017["handled"], $I10001
    nqp_get_sc_object $P10002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    finalize $P5017
    pop_upto_eh $P5017
    pop_eh 
    set $P5018, $P10002
    goto skip_handler_17864216
  skip_handler_17864216:
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_445_1367388600.55005") :anon :lex :outer("cuid_446_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3203
    .param pmc _lex_param_0 
    .lex "$!", $P101 
    .lex "$_", _lex_param_0 
    set $P101, _lex_param_0
.annotate 'line', 3204
    nqp_get_sc_object $P5001, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    find_lex $P5002, "$first"
    $P5003 = $P5001."new"($P5002 :named("name"), "lexical" :named("scope"))
    store_lex "$path", $P5003
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_448_1367388600.55005") :anon :lex :outer("cuid_447_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3214
    .param pmc _lex_param_0 
    .lex "$path_temp", $P101 
    .lex "$_", _lex_param_0 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
.annotate 'line', 3215
    nqp_get_sc_object $P5002, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 12
    $P5003 = $P5002."unique"("pkg_lookup_tmp")
    set $P101, $P5003
.annotate 'line', 3216
    nqp_get_sc_object $P5004, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 93
.annotate 'line', 3217
    nqp_get_sc_object $P5005, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 3219
    nqp_get_sc_object $P5006, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5007 = $P5006."new"($P101 :named("name"), "local" :named("scope"), "var" :named("decl"))
    find_lex $P5008, "$path"
    $P5009 = $P5005."new"($P5007, $P5008, "bind" :named("op"))
.annotate 'line', 3222
    nqp_get_sc_object $P5010, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 3224
    nqp_get_sc_object $P5011, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 3226
    nqp_get_sc_object $P5012, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    nqp_get_sc_object $P5013, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5014 = $P5013."new"($P101 :named("name"), "local" :named("scope"))
    $P5015 = $P5012."new"($P5014, "who" :named("op"))
.annotate 'line', 3227
    nqp_get_sc_object $P5016, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 52
    set $S5001, _lex_param_0
    $P5017 = $P5016."new"($S5001 :named("value"))
    $P5018 = $P5011."new"($P5015, $P5017, "existskey" :named("op"))
.annotate 'line', 3229
    nqp_get_sc_object $P5019, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 3231
    nqp_get_sc_object $P5020, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    nqp_get_sc_object $P5021, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5022 = $P5021."new"($P101 :named("name"), "local" :named("scope"))
    $P5023 = $P5020."new"($P5022, "who" :named("op"))
.annotate 'line', 3232
    nqp_get_sc_object $P5024, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 52
    set $S5002, _lex_param_0
    $P5025 = $P5024."new"($S5002 :named("value"))
    $P5026 = $P5019."new"($P5023, $P5025, "atkey" :named("op"))
.annotate 'line', 3234
    $P5027 = "&default_for"("$")
    $P5028 = $P5010."new"($P5018, $P5026, $P5027, "if" :named("op"))
    $P5029 = $P5004."new"($P5009, $P5028)
    store_lex "$path", $P5029
    .return ($P5029) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_449_1367388600.55005") :anon :lex :outer("cuid_447_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3239
    .lex "$viv_temp", $P101 
    .local pmc fb_tmp_197 
    .local pmc fb_tmp_198 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
.annotate 'line', 3240
    nqp_get_sc_object $P5002, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 12
    $P5003 = $P5002."unique"("pkg_viv_tmp")
    set $P101, $P5003
    find_lex $P5004, "$lookup"
.annotate 'line', 3241
    nqp_get_sc_object $P5005, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 3243
    nqp_get_sc_object $P5006, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5007 = $P5006."new"($P101 :named("name"), "local" :named("scope"), "var" :named("decl"))
    find_lex $P5008, "$lookup"
    set fb_tmp_197, $P5008
    repr_defined $I5001, fb_tmp_197
    unless $I5001 goto if1796_else4235 
    set $P5009, fb_tmp_197[0]
    set $P5011, $P5009
    goto if1796_end4236
  if1796_else4235:
    null $P5010
    set $P5011, $P5010
  if1796_end4236:
    unless_null $P5011, vivi_17974237
    nqp_get_sc_object $P5012, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5011, $P5012
  vivi_17974237:
    $P5013 = $P5005."new"($P5007, $P5011, "bind" :named("op"))
    set $P5004[0], $P5013
.annotate 'line', 3245
    find_lex $P5014, "$lookup"
    nqp_get_sc_object $P5015, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 3247
    nqp_get_sc_object $P5016, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5017 = $P5016."new"($P101 :named("name"), "local" :named("scope"))
    find_lex $P5018, "$lookup"
    set fb_tmp_198, $P5018
    repr_defined $I5002, fb_tmp_198
    unless $I5002 goto if1798_else4238 
    set $P5019, fb_tmp_198[1]
    set $P5021, $P5019
    goto if1798_end4239
  if1798_else4238:
    null $P5020
    set $P5021, $P5020
  if1798_end4239:
    unless_null $P5021, vivi_17994240
    nqp_get_sc_object $P5022, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5021, $P5022
  vivi_17994240:
.annotate 'line', 3249
    find_lex $P5023, "$sigil"
    $P5024 = "&default_for"($P5023)
    $P5025 = $P5015."new"($P5017, $P5021, $P5024, "bindkey" :named("op"))
    $P5026 = $P5014."fallback"($P5025)
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "TOP" :subid("cuid_248_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1628
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_199 
    unless_null _lex_param_1, fallback4243
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback4243:
    set fb_tmp_199, _lex_param_1
    repr_defined $I5001, fb_tmp_199
    unless $I5001 goto if1800_else4241 
    set $P5002, fb_tmp_199["comp_unit"]
    set $P5004, $P5002
    goto if1800_end4242
  if1800_else4241:
    null $P5003
    set $P5004, $P5003
  if1800_end4242:
    unless_null $P5004, vivi_18014244
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_18014244:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "deflongname" :subid("cuid_249_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1630
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_200 
    .local pmc fb_tmp_201 
    .local pmc fb_tmp_202 
    .local pmc fb_tmp_203 
    .local pmc fb_tmp_204 
    .local pmc fb_tmp_205 
.annotate 'line', 1631
    unless_null _lex_param_1, fallback4249
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback4249:
    set fb_tmp_200, _lex_param_1
    repr_defined $I5001, fb_tmp_200
    unless $I5001 goto if1803_else4247 
    set $P5002, fb_tmp_200["colonpair"]
    set $P5004, $P5002
    goto if1803_end4248
  if1803_else4247:
    null $P5003
    set $P5004, $P5003
  if1803_end4248:
    unless_null $P5004, vivi_18044250
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_18044250:
    unless $P5004 goto if1802_else4245 
    unless_null _lex_param_1, fallback4253
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5006
  fallback4253:
    set fb_tmp_201, _lex_param_1
    repr_defined $I5002, fb_tmp_201
    unless $I5002 goto if1805_else4251 
    set $P5007, fb_tmp_201["identifier"]
    set $P5009, $P5007
    goto if1805_end4252
  if1805_else4251:
    null $P5008
    set $P5009, $P5008
  if1805_end4252:
    unless_null $P5009, vivi_18064254
    nqp_get_sc_object $P5010, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5009, $P5010
  vivi_18064254:
    set $S5006, $P5009
    concat $S5005, $S5006, ":"
.annotate 'line', 1632
    unless_null _lex_param_1, fallback4259
    nqp_get_sc_object $P5011, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5011
  fallback4259:
    set fb_tmp_203, _lex_param_1
    repr_defined $I5004, fb_tmp_203
    unless $I5004 goto if1808_else4257 
    set $P5012, fb_tmp_203["colonpair"]
    set $P5014, $P5012
    goto if1808_end4258
  if1808_else4257:
    null $P5013
    set $P5014, $P5013
  if1808_end4258:
    unless_null $P5014, vivi_18094260
    nqp_get_sc_object $P5015, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5014, $P5015
  vivi_18094260:
    set fb_tmp_202, $P5014
    repr_defined $I5003, fb_tmp_202
    unless $I5003 goto if1807_else4255 
    set $P5016, fb_tmp_202[0]
    set $P5018, $P5016
    goto if1807_end4256
  if1807_else4255:
    null $P5017
    set $P5018, $P5017
  if1807_end4256:
    unless_null $P5018, vivi_18104261
    nqp_get_sc_object $P5019, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5018, $P5019
  vivi_18104261:
    $P5020 = $P5018."ast"()
    $P5021 = $P5020."named"()
    set $S5007, $P5021
    concat $S5004, $S5005, $S5007
    concat $S5003, $S5004, "<"
.annotate 'line', 1633
    unless_null _lex_param_1, fallback4266
    nqp_get_sc_object $P5022, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5022
  fallback4266:
    set fb_tmp_205, _lex_param_1
    repr_defined $I5006, fb_tmp_205
    unless $I5006 goto if1812_else4264 
    set $P5023, fb_tmp_205["colonpair"]
    set $P5025, $P5023
    goto if1812_end4265
  if1812_else4264:
    null $P5024
    set $P5025, $P5024
  if1812_end4265:
    unless_null $P5025, vivi_18134267
    nqp_get_sc_object $P5026, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5025, $P5026
  vivi_18134267:
    set fb_tmp_204, $P5025
    repr_defined $I5005, fb_tmp_204
    unless $I5005 goto if1811_else4262 
    set $P5027, fb_tmp_204[0]
    set $P5029, $P5027
    goto if1811_end4263
  if1811_else4262:
    null $P5028
    set $P5029, $P5028
  if1811_end4263:
    unless_null $P5029, vivi_18144268
    nqp_get_sc_object $P5030, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5029, $P5030
  vivi_18144268:
    $P5031 = $P5029."ast"()
    $P5032 = "&colonpair_str"($P5031)
    set $S5008, $P5032
    concat $S5002, $S5003, $S5008
    concat $S5001, $S5002, ">"
    set $S5010, $S5001
    goto if1802_end4246
  if1802_else4245:
    set $S5009, _lex_param_1
    set $S5010, $S5009
  if1802_end4246:
    $P5033 = _lex_param_1."!make"($S5010)
    .return ($P5033) 
.end
.HLL "nqp"
.namespace []
.sub "comp_unit" :subid("cuid_250_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1647
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$mainline", $P101 
    .lex "$unit", $P102 
    .lex "$compunit", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_206 
    .local pmc fb_tmp_207 
    .local pmc fb_tmp_208 
    .local pmc fb_tmp_209 
    .local pmc fb_tmp_210 
    .local pmc fb_tmp_211 
    .local pmc fb_tmp_212 
    .local pmc fb_tmp_213 
    .local pmc fb_tmp_214 
    .local pmc fb_tmp_215 
    .local pmc fb_tmp_216 
    .local pmc fb_tmp_217 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P103, $P5003
.annotate 'line', 1648
    unless_null _lex_param_1, fallback4271
    nqp_get_sc_object $P5004, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5004
  fallback4271:
    set fb_tmp_206, _lex_param_1
    repr_defined $I5001, fb_tmp_206
    unless $I5001 goto if1815_else4269 
    set $P5005, fb_tmp_206["statementlist"]
    set $P5007, $P5005
    goto if1815_end4270
  if1815_else4269:
    null $P5006
    set $P5007, $P5006
  if1815_end4270:
    unless_null $P5007, vivi_18164272
    nqp_get_sc_object $P5008, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5007, $P5008
  vivi_18164272:
    $P5009 = $P5007."ast"()
    set $P101, $P5009
.annotate 'line', 1649
    find_dynamic_lex $P5010, "$*W"
    unless_null $P5010, fallback4273
    nqp_get_sc_object $P5012, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5011, $P5012
    set fb_tmp_207, $P5011
    repr_defined $I5002, fb_tmp_207
    unless $I5002 goto if1817_else4274 
    set $P5013, fb_tmp_207["$W"]
    set $P5015, $P5013
    goto if1817_end4275
  if1817_else4274:
    null $P5014
    set $P5015, $P5014
  if1817_end4275:
    unless_null $P5015, vivi_18184276
    nqp_get_sc_object $P5016, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5015, $P5016
  vivi_18184276:
    unless_null $P5015, vivi_18194277
    die "Contextual $*W not found"
    box $P5017, "Contextual $*W not found"
    set $P5015, $P5017
  vivi_18194277:
    set $P5010, $P5015
  fallback4273:
    $P5018 = $P5010."pop_lexpad"()
    set $P102, $P5018
    find_dynamic_lex $P5019, "$*HAS_YOU_ARE_HERE"
    unless_null $P5019, fallback4280
    nqp_get_sc_object $P5021, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5020, $P5021
    set fb_tmp_208, $P5020
    repr_defined $I5003, fb_tmp_208
    unless $I5003 goto if1821_else4281 
    set $P5022, fb_tmp_208["$HAS_YOU_ARE_HERE"]
    set $P5024, $P5022
    goto if1821_end4282
  if1821_else4281:
    null $P5023
    set $P5024, $P5023
  if1821_end4282:
    unless_null $P5024, vivi_18224283
    nqp_get_sc_object $P5025, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5024, $P5025
  vivi_18224283:
    unless_null $P5024, vivi_18234284
    die "Contextual $*HAS_YOU_ARE_HERE not found"
    box $P5026, "Contextual $*HAS_YOU_ARE_HERE not found"
    set $P5024, $P5026
  vivi_18234284:
    set $P5019, $P5024
  fallback4280:
    if $P5019 goto unless1820_end4279 
.annotate 'line', 1654
.annotate 'line', 1655
    nqp_decontainerize $P5027, _lex_param_0
    $P5028 = $P5027."CTXSAVE"()
    $P5029 = $P102."push"($P5028)
  unless1820_end4279:
.annotate 'line', 1662
    nqp_get_sc_object $P5030, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5031 = $P5030."new"("lexical" :named("scope"), "@ARGS" :named("name"), "param" :named("decl"), 1 :named("slurpy"))
    $P102."unshift"($P5031)
    find_dynamic_lex $P5032, "$*MAIN_SUB"
    unless_null $P5032, fallback4287
    nqp_get_sc_object $P5034, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5033, $P5034
    set fb_tmp_209, $P5033
    repr_defined $I5004, fb_tmp_209
    unless $I5004 goto if1825_else4288 
    set $P5035, fb_tmp_209["$MAIN_SUB"]
    set $P5037, $P5035
    goto if1825_end4289
  if1825_else4288:
    null $P5036
    set $P5037, $P5036
  if1825_end4289:
    unless_null $P5037, vivi_18264290
    nqp_get_sc_object $P5038, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5037, $P5038
  vivi_18264290:
    unless_null $P5037, vivi_18274291
    die "Contextual $*MAIN_SUB not found"
    box $P5039, "Contextual $*MAIN_SUB not found"
    set $P5037, $P5039
  vivi_18274291:
    set $P5032, $P5037
  fallback4287:
    unless $P5032 goto if1824_end4286 
.annotate 'line', 1663
.annotate 'line', 1664
    nqp_get_sc_object $P5040, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 1666
    nqp_get_sc_object $P5041, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5042 = $P5041."new"("lexical" :named("scope"), "@ARGS" :named("name"))
.annotate 'line', 1667
    nqp_get_sc_object $P5043, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 1668
    nqp_get_sc_object $P5044, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 57
    find_dynamic_lex $P5045, "$*MAIN_SUB"
    unless_null $P5045, fallback4292
    nqp_get_sc_object $P5047, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5046, $P5047
    set fb_tmp_210, $P5046
    repr_defined $I5005, fb_tmp_210
    unless $I5005 goto if1828_else4293 
    set $P5048, fb_tmp_210["$MAIN_SUB"]
    set $P5050, $P5048
    goto if1828_end4294
  if1828_else4293:
    null $P5049
    set $P5050, $P5049
  if1828_end4294:
    unless_null $P5050, vivi_18294295
    nqp_get_sc_object $P5051, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5050, $P5051
  vivi_18294295:
    unless_null $P5050, vivi_18304296
    die "Contextual $*MAIN_SUB not found"
    box $P5052, "Contextual $*MAIN_SUB not found"
    set $P5050, $P5052
  vivi_18304296:
    set $P5045, $P5050
  fallback4292:
    $P5053 = $P5044."new"($P5045 :named("value"))
.annotate 'line', 1669
    nqp_get_sc_object $P5054, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5055 = $P5054."new"("lexical" :named("scope"), "@ARGS" :named("name"), 1 :named("flat"))
    $P5056 = $P5043."new"($P5053, $P5055, "call" :named("op"))
    $P5057 = $P5040."new"($P5042, $P5056, "if" :named("op"))
    $P5058 = $P101."push"($P5057)
  if1824_end4286:
.annotate 'line', 1675
    $P102."push"($P101)
.annotate 'line', 1678
    find_dynamic_lex $P5059, "$*W"
    unless_null $P5059, fallback4297
    nqp_get_sc_object $P5061, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5060, $P5061
    set fb_tmp_211, $P5060
    repr_defined $I5006, fb_tmp_211
    unless $I5006 goto if1831_else4298 
    set $P5062, fb_tmp_211["$W"]
    set $P5064, $P5062
    goto if1831_end4299
  if1831_else4298:
    null $P5063
    set $P5064, $P5063
  if1831_end4299:
    unless_null $P5064, vivi_18324300
    nqp_get_sc_object $P5065, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5064, $P5065
  vivi_18324300:
    unless_null $P5064, vivi_18334301
    die "Contextual $*W not found"
    box $P5066, "Contextual $*W not found"
    set $P5064, $P5066
  vivi_18334301:
    set $P5059, $P5064
  fallback4297:
    $P5067 = $P5059."libs"()
    $P102."push"($P5067)
.annotate 'line', 1681
    nqp_get_sc_object $P5068, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 114
.annotate 'line', 1685
    find_dynamic_lex $P5069, "$*W"
    unless_null $P5069, fallback4302
    nqp_get_sc_object $P5071, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5070, $P5071
    set fb_tmp_212, $P5070
    repr_defined $I5007, fb_tmp_212
    unless $I5007 goto if1834_else4303 
    set $P5072, fb_tmp_212["$W"]
    set $P5074, $P5072
    goto if1834_end4304
  if1834_else4303:
    null $P5073
    set $P5074, $P5073
  if1834_end4304:
    unless_null $P5074, vivi_18354305
    nqp_get_sc_object $P5075, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5074, $P5075
  vivi_18354305:
    unless_null $P5074, vivi_18364306
    die "Contextual $*W not found"
    box $P5076, "Contextual $*W not found"
    set $P5074, $P5076
  vivi_18364306:
    set $P5069, $P5074
  fallback4302:
    $P5077 = $P5069."sc"()
.annotate 'line', 1686
    find_dynamic_lex $P5078, "$*W"
    unless_null $P5078, fallback4307
    nqp_get_sc_object $P5080, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5079, $P5080
    set fb_tmp_213, $P5079
    repr_defined $I5008, fb_tmp_213
    unless $I5008 goto if1837_else4308 
    set $P5081, fb_tmp_213["$W"]
    set $P5083, $P5081
    goto if1837_end4309
  if1837_else4308:
    null $P5082
    set $P5083, $P5082
  if1837_end4309:
    unless_null $P5083, vivi_18384310
    nqp_get_sc_object $P5084, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5083, $P5084
  vivi_18384310:
    unless_null $P5083, vivi_18394311
    die "Contextual $*W not found"
    box $P5085, "Contextual $*W not found"
    set $P5083, $P5085
  vivi_18394311:
    set $P5078, $P5083
  fallback4307:
    $P5086 = $P5078."code_ref_blocks"()
.annotate 'line', 1687
    find_dynamic_lex $P5087, "$*W"
    unless_null $P5087, fallback4312
    nqp_get_sc_object $P5089, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5088, $P5089
    set fb_tmp_214, $P5088
    repr_defined $I5009, fb_tmp_214
    unless $I5009 goto if1840_else4313 
    set $P5090, fb_tmp_214["$W"]
    set $P5092, $P5090
    goto if1840_end4314
  if1840_else4313:
    null $P5091
    set $P5092, $P5091
  if1840_end4314:
    unless_null $P5092, vivi_18414315
    nqp_get_sc_object $P5093, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5092, $P5093
  vivi_18414315:
    unless_null $P5092, vivi_18424316
    die "Contextual $*W not found"
    box $P5094, "Contextual $*W not found"
    set $P5092, $P5094
  vivi_18424316:
    set $P5087, $P5092
  fallback4312:
    $P5095 = $P5087."is_precompilation_mode"()
.annotate 'line', 1688
    find_dynamic_lex $P5096, "$*W"
    unless_null $P5096, fallback4317
    nqp_get_sc_object $P5098, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5097, $P5098
    set fb_tmp_215, $P5097
    repr_defined $I5010, fb_tmp_215
    unless $I5010 goto if1843_else4318 
    set $P5099, fb_tmp_215["$W"]
    set $P5101, $P5099
    goto if1843_end4319
  if1843_else4318:
    null $P5100
    set $P5101, $P5100
  if1843_end4319:
    unless_null $P5101, vivi_18444320
    nqp_get_sc_object $P5102, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5101, $P5102
  vivi_18444320:
    unless_null $P5101, vivi_18454321
    die "Contextual $*W not found"
    box $P5103, "Contextual $*W not found"
    set $P5101, $P5103
  vivi_18454321:
    set $P5096, $P5101
  fallback4317:
    $P5104 = $P5096."load_dependency_tasks"()
.annotate 'line', 1689
    find_dynamic_lex $P5105, "$*W"
    unless_null $P5105, fallback4322
    nqp_get_sc_object $P5107, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5106, $P5107
    set fb_tmp_216, $P5106
    repr_defined $I5011, fb_tmp_216
    unless $I5011 goto if1846_else4323 
    set $P5108, fb_tmp_216["$W"]
    set $P5110, $P5108
    goto if1846_end4324
  if1846_else4323:
    null $P5109
    set $P5110, $P5109
  if1846_end4324:
    unless_null $P5110, vivi_18474325
    nqp_get_sc_object $P5111, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5110, $P5111
  vivi_18474325:
    unless_null $P5110, vivi_18484326
    die "Contextual $*W not found"
    box $P5112, "Contextual $*W not found"
    set $P5110, $P5112
  vivi_18484326:
    set $P5105, $P5110
  fallback4322:
    $P5113 = $P5105."fixup_tasks"()
.annotate 'line', 1694
    nqp_get_sc_object $P5114, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 1696
    nqp_get_sc_object $P5115, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 57
    $P5116 = $P5115."new"($P102 :named("value"))
    $P5117 = $P5114."new"($P5116, "call" :named("op"))
.annotate 'line', 1701
    nqp_get_sc_object $P5118, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 93
.annotate 'line', 1702
    nqp_get_sc_object $P5119, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 1704
    nqp_get_sc_object $P5120, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 57
    $P5121 = $P5120."new"($P102 :named("value"))
.annotate 'line', 1705
    nqp_get_sc_object $P5122, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5123 = $P5122."new"("ARGS" :named("name"), "local" :named("scope"), "param" :named("decl"), 1 :named("slurpy"), 1 :named("flat"))
    $P5124 = $P5119."new"($P5121, $P5123, "call" :named("op"))
    $P5125 = $P5118."new"($P5124)
    $P5126 = $P5068."new"($P102, "nqp" :named("hll"), $P5077 :named("sc"), $P5086 :named("code_ref_blocks"), $P5095 :named("compilation_mode"), $P5104 :named("pre_deserialize"), $P5113 :named("post_deserialize"), $P5117 :named("load"), $P5125 :named("main"))
    set $P103, $P5126
.annotate 'line', 1714
    find_dynamic_lex $P5127, "$*W"
    unless_null $P5127, fallback4327
    nqp_get_sc_object $P5129, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5128, $P5129
    set fb_tmp_217, $P5128
    repr_defined $I5012, fb_tmp_217
    unless $I5012 goto if1849_else4328 
    set $P5130, fb_tmp_217["$W"]
    set $P5132, $P5130
    goto if1849_end4329
  if1849_else4328:
    null $P5131
    set $P5132, $P5131
  if1849_end4329:
    unless_null $P5132, vivi_18504330
    nqp_get_sc_object $P5133, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5132, $P5133
  vivi_18504330:
    unless_null $P5132, vivi_18514331
    die "Contextual $*W not found"
    box $P5134, "Contextual $*W not found"
    set $P5132, $P5134
  vivi_18514331:
    set $P5127, $P5132
  fallback4327:
    $P5127."cleanup"()
.annotate 'line', 1716
    $P5135 = _lex_param_1."!make"($P103)
    .return ($P5135) 
.end
.HLL "nqp"
.namespace []
.sub "statementlist" :subid("cuid_251_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1719
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5022 = 'cuid_451_1367388600.55005' 
    capture_lex $P5022 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_218 
    .local pmc fb_tmp_219 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
.annotate 'line', 1720
    nqp_get_sc_object $P5002, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 93
    $P5003 = $P5002."new"(_lex_param_1 :named("node"))
    set $P101, $P5003
    unless_null _lex_param_1, fallback4336
    nqp_get_sc_object $P5004, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5004
  fallback4336:
    set fb_tmp_218, _lex_param_1
    repr_defined $I5001, fb_tmp_218
    unless $I5001 goto if1853_else4334 
    set $P5005, fb_tmp_218["statement"]
    set $P5007, $P5005
    goto if1853_end4335
  if1853_else4334:
    null $P5006
    set $P5007, $P5006
  if1853_end4335:
    unless_null $P5007, vivi_18544337
    nqp_get_sc_object $P5008, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5007, $P5008
  vivi_18544337:
    unless $P5007 goto if1852_else4332 
.annotate 'line', 1721
    unless_null _lex_param_1, fallback4340
    nqp_get_sc_object $P5012, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5012
  fallback4340:
    set fb_tmp_219, _lex_param_1
    repr_defined $I5002, fb_tmp_219
    unless $I5002 goto if1855_else4338 
    set $P5013, fb_tmp_219["statement"]
    set $P5015, $P5013
    goto if1855_end4339
  if1855_else4338:
    null $P5014
    set $P5015, $P5014
  if1855_end4339:
    unless_null $P5015, vivi_18564341
    nqp_get_sc_object $P5016, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5015, $P5016
  vivi_18564341:
    set $P5009, $P5015
    iter $P5011, $P5015
  for_next4360:
    unless $P5011, for_done4362
    shift $P5018, $P5011
  for_redo4361:
    .const 'Sub' $P5017 = 'cuid_451_1367388600.55005' 
    capture_lex $P5017
    $P5009 = $P5017($P5018)
    goto for_next4360
  for_done4362:
    goto if1852_end4333
  if1852_else4332:
.annotate 'line', 1730
.annotate 'line', 1731
    $P5019 = "&default_for"("$")
    $P5020 = $P101."push"($P5019)
  if1852_end4333:
.annotate 'line', 1733
    $P5021 = _lex_param_1."!make"($P101)
    .return ($P5021) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_451_1367388600.55005") :anon :lex :outer("cuid_251_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1722
    .param pmc _lex_param_0 
    .lex "$ast", $P101 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_220 
    .local pmc fb_tmp_221 
    .local pmc fb_tmp_222 
    .local pmc fb_tmp_223 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
.annotate 'line', 1723
    $P5002 = _lex_param_0."ast"()
    set $P101, $P5002
    set fb_tmp_220, $P101
    repr_defined $I5002, fb_tmp_220
    unless $I5002 goto if1858_else4344 
    set $P5003, fb_tmp_220["sink"]
    set $P5005, $P5003
    goto if1858_end4345
  if1858_else4344:
    null $P5004
    set $P5005, $P5004
  if1858_end4345:
    unless_null $P5005, vivi_18594346
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5005, $P5006
  vivi_18594346:
    defined $I5001, $P5005
    unless $I5001 goto if1857_end4343 
    set fb_tmp_221, $P101
    repr_defined $I5003, fb_tmp_221
    unless $I5003 goto if1860_else4347 
    set $P5007, fb_tmp_221["sink"]
    set $P5009, $P5007
    goto if1860_end4348
  if1860_else4347:
    null $P5008
    set $P5009, $P5008
  if1860_end4348:
    unless_null $P5009, vivi_18614349
    nqp_get_sc_object $P5010, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5009, $P5010
  vivi_18614349:
    set $P101, $P5009
  if1857_end4343:
    set fb_tmp_222, $P101
    repr_defined $I5004, fb_tmp_222
    unless $I5004 goto if1863_else4352 
    set $P5011, fb_tmp_222["bareblock"]
    set $P5013, $P5011
    goto if1863_end4353
  if1863_else4352:
    null $P5012
    set $P5013, $P5012
  if1863_end4353:
    unless_null $P5013, vivi_18644354
    nqp_get_sc_object $P5014, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5013, $P5014
  vivi_18644354:
    unless $P5013 goto if1862_end4351 
.annotate 'line', 1725
    set fb_tmp_223, $P101
    repr_defined $I5005, fb_tmp_223
    unless $I5005 goto if1865_else4355 
    set $P5015, fb_tmp_223[0]
    set $P5017, $P5015
    goto if1865_end4356
  if1865_else4355:
    null $P5016
    set $P5017, $P5016
  if1865_end4356:
    unless_null $P5017, vivi_18664357
    nqp_get_sc_object $P5018, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5017, $P5018
  vivi_18664357:
    $P5019 = "&block_immediate"($P5017)
    set $P101, $P5019
  if1862_end4351:
    nqp_get_sc_object $P5020, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 12
    type_check $I5006, $P101, $P5020
    unless $I5006 goto if1867_end4359 
.annotate 'line', 1726
    nqp_get_sc_object $P5021, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 93
    $P5022 = $P5021."new"($P101)
    set $P101, $P5022
  if1867_end4359:
.annotate 'line', 1727
    find_lex $P5023, "$past"
    $P5024 = $P5023."push"($P101)
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "statement" :subid("cuid_252_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1736
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :optional 
    .param int haz_param_5 :opt_flag 
    .const 'Sub' $P5024 = 'cuid_452_1367388600.55005' 
    capture_lex $P5024 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .lex "$key", _lex_param_2 
    .local pmc fb_tmp_224 
    .local pmc fb_tmp_237 
    .local pmc fb_tmp_238 
    if haz_param_5, default4424
    nqp_get_sc_object $P5023, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_2, $P5023
  default4424:
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    unless_null _lex_param_1, fallback4367
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5002
  fallback4367:
    set fb_tmp_224, _lex_param_1
    repr_defined $I5001, fb_tmp_224
    unless $I5001 goto if1869_else4365 
    set $P5003, fb_tmp_224["EXPR"]
    set $P5005, $P5003
    goto if1869_end4366
  if1869_else4365:
    null $P5004
    set $P5005, $P5004
  if1869_end4366:
    unless_null $P5005, vivi_18704368
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5005, $P5006
  vivi_18704368:
    unless $P5005 goto if1868_else4363 
    .const 'Sub' $P5007 = 'cuid_452_1367388600.55005' 
    capture_lex $P5007
    $P5008 = $P5007()
    goto if1868_end4364
  if1868_else4363:
    unless_null _lex_param_1, fallback4418
    nqp_get_sc_object $P5009, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5009
  fallback4418:
    set fb_tmp_237, _lex_param_1
    repr_defined $I5002, fb_tmp_237
    unless $I5002 goto if1899_else4416 
    set $P5010, fb_tmp_237["statement_control"]
    set $P5012, $P5010
    goto if1899_end4417
  if1899_else4416:
    null $P5011
    set $P5012, $P5011
  if1899_end4417:
    unless_null $P5012, vivi_19004419
    nqp_get_sc_object $P5013, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5012, $P5013
  vivi_19004419:
    unless $P5012 goto if1898_else4414 
.annotate 'line', 1759
    unless_null _lex_param_1, fallback4422
    nqp_get_sc_object $P5014, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5014
  fallback4422:
    set fb_tmp_238, _lex_param_1
    repr_defined $I5003, fb_tmp_238
    unless $I5003 goto if1901_else4420 
    set $P5015, fb_tmp_238["statement_control"]
    set $P5017, $P5015
    goto if1901_end4421
  if1901_else4420:
    null $P5016
    set $P5017, $P5016
  if1901_end4421:
    unless_null $P5017, vivi_19024423
    nqp_get_sc_object $P5018, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5017, $P5018
  vivi_19024423:
    $P5019 = $P5017."ast"()
    set $P101, $P5019
    set $P5021, $P101
    goto if1898_end4415
  if1898_else4414:
.annotate 'line', 1760
    box $P5020, 0
    set $P101, $P5020
    set $P5021, $P101
  if1898_end4415:
  if1868_end4364:
.annotate 'line', 1761
    $P5022 = _lex_param_1."!make"($P101)
    .return ($P5022) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_452_1367388600.55005") :anon :lex :outer("cuid_252_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1738
    .lex "$mc", $P101 
    .lex "$ml", $P102 
    .local pmc fb_tmp_225 
    .local pmc fb_tmp_226 
    .local pmc fb_tmp_227 
    .local pmc fb_tmp_228 
    .local pmc fb_tmp_229 
    .local pmc fb_tmp_230 
    .local pmc fb_tmp_231 
    .local pmc fb_tmp_232 
    .local pmc fb_tmp_233 
    .local pmc fb_tmp_234 
    .local pmc fb_tmp_235 
    .local pmc fb_tmp_236 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
    find_lex $P5003, "$/"
    unless_null $P5003, fallback4373
    nqp_get_sc_object $P5004, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5003, $P5004
  fallback4373:
    set fb_tmp_226, $P5003
    repr_defined $I5002, fb_tmp_226
    unless $I5002 goto if1872_else4371 
    set $P5005, fb_tmp_226["statement_mod_cond"]
    set $P5007, $P5005
    goto if1872_end4372
  if1872_else4371:
    null $P5006
    set $P5007, $P5006
  if1872_end4372:
    unless_null $P5007, vivi_18734374
    nqp_get_sc_object $P5008, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5007, $P5008
  vivi_18734374:
    set fb_tmp_225, $P5007
    repr_defined $I5001, fb_tmp_225
    unless $I5001 goto if1871_else4369 
    set $P5009, fb_tmp_225[0]
    set $P5011, $P5009
    goto if1871_end4370
  if1871_else4369:
    null $P5010
    set $P5011, $P5010
  if1871_end4370:
    unless_null $P5011, vivi_18744375
    nqp_get_sc_object $P5012, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5011, $P5012
  vivi_18744375:
    set $P101, $P5011
    find_lex $P5013, "$/"
    unless_null $P5013, fallback4380
    nqp_get_sc_object $P5014, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5013, $P5014
  fallback4380:
    set fb_tmp_228, $P5013
    repr_defined $I5004, fb_tmp_228
    unless $I5004 goto if1876_else4378 
    set $P5015, fb_tmp_228["statement_mod_loop"]
    set $P5017, $P5015
    goto if1876_end4379
  if1876_else4378:
    null $P5016
    set $P5017, $P5016
  if1876_end4379:
    unless_null $P5017, vivi_18774381
    nqp_get_sc_object $P5018, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5017, $P5018
  vivi_18774381:
    set fb_tmp_227, $P5017
    repr_defined $I5003, fb_tmp_227
    unless $I5003 goto if1875_else4376 
    set $P5019, fb_tmp_227[0]
    set $P5021, $P5019
    goto if1875_end4377
  if1875_else4376:
    null $P5020
    set $P5021, $P5020
  if1875_end4377:
    unless_null $P5021, vivi_18784382
    nqp_get_sc_object $P5022, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5021, $P5022
  vivi_18784382:
    set $P102, $P5021
.annotate 'line', 1741
    find_lex $P5023, "$/"
    unless_null $P5023, fallback4385
    nqp_get_sc_object $P5024, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5023, $P5024
  fallback4385:
    set fb_tmp_229, $P5023
    repr_defined $I5005, fb_tmp_229
    unless $I5005 goto if1879_else4383 
    set $P5025, fb_tmp_229["EXPR"]
    set $P5027, $P5025
    goto if1879_end4384
  if1879_else4383:
    null $P5026
    set $P5027, $P5026
  if1879_end4384:
    unless_null $P5027, vivi_18804386
    nqp_get_sc_object $P5028, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5027, $P5028
  vivi_18804386:
    $P5029 = $P5027."ast"()
    store_lex "$past", $P5029
    unless $P101 goto if1881_end4388 
.annotate 'line', 1742
.annotate 'line', 1743
    nqp_get_sc_object $P5030, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    set fb_tmp_230, $P101
    repr_defined $I5006, fb_tmp_230
    unless $I5006 goto if1882_else4389 
    set $P5031, fb_tmp_230["cond"]
    set $P5033, $P5031
    goto if1882_end4390
  if1882_else4389:
    null $P5032
    set $P5033, $P5032
  if1882_end4390:
    unless_null $P5033, vivi_18834391
    nqp_get_sc_object $P5034, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5033, $P5034
  vivi_18834391:
    $P5035 = $P5033."ast"()
    find_lex $P5036, "$past"
    set fb_tmp_231, $P101
    repr_defined $I5007, fb_tmp_231
    unless $I5007 goto if1884_else4392 
    set $P5037, fb_tmp_231["sym"]
    set $P5039, $P5037
    goto if1884_end4393
  if1884_else4392:
    null $P5038
    set $P5039, $P5038
  if1884_end4393:
    unless_null $P5039, vivi_18854394
    nqp_get_sc_object $P5040, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5039, $P5040
  vivi_18854394:
    set $S5001, $P5039
    find_lex $P5041, "$/"
    $P5042 = $P5030."new"($P5035, $P5036, $S5001 :named("op"), $P5041 :named("node"))
    store_lex "$past", $P5042
  if1881_end4388:
    set $P5081, $P102
    unless $P102 goto if1886_end4396 
.annotate 'line', 1745
    set fb_tmp_232, $P102
    repr_defined $I5009, fb_tmp_232
    unless $I5009 goto if1888_else4399 
    set $P5043, fb_tmp_232["sym"]
    set $P5045, $P5043
    goto if1888_end4400
  if1888_else4399:
    null $P5044
    set $P5045, $P5044
  if1888_end4400:
    unless_null $P5045, vivi_18894401
    nqp_get_sc_object $P5046, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5045, $P5046
  vivi_18894401:
    set $S5002, $P5045
    iseq $I5008, $S5002, "for"
    unless $I5008 goto if1887_else4397 
.annotate 'line', 1746
.annotate 'line', 1747
    nqp_get_sc_object $P5047, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 103
.annotate 'line', 1748
    nqp_get_sc_object $P5048, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5049 = $P5048."new"("$_" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    find_lex $P5050, "$past"
    $P5051 = $P5047."new"($P5049, $P5050, "immediate" :named("blocktype"))
    store_lex "$past", $P5051
.annotate 'line', 1750
    find_lex $P5052, "$past"
    $P5052."symbol"("$_", "lexical" :named("scope"))
.annotate 'line', 1751
    find_lex $P5053, "$past"
    $P5053."arity"(1)
.annotate 'line', 1752
    nqp_get_sc_object $P5054, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    set fb_tmp_233, $P102
    repr_defined $I5010, fb_tmp_233
    unless $I5010 goto if1890_else4402 
    set $P5055, fb_tmp_233["cond"]
    set $P5057, $P5055
    goto if1890_end4403
  if1890_else4402:
    null $P5056
    set $P5057, $P5056
  if1890_end4403:
    unless_null $P5057, vivi_18914404
    nqp_get_sc_object $P5058, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5057, $P5058
  vivi_18914404:
    $P5059 = $P5057."ast"()
    find_lex $P5060, "$past"
    set fb_tmp_234, $P102
    repr_defined $I5011, fb_tmp_234
    unless $I5011 goto if1892_else4405 
    set $P5061, fb_tmp_234["sym"]
    set $P5063, $P5061
    goto if1892_end4406
  if1892_else4405:
    null $P5062
    set $P5063, $P5062
  if1892_end4406:
    unless_null $P5063, vivi_18934407
    nqp_get_sc_object $P5064, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5063, $P5064
  vivi_18934407:
    set $S5003, $P5063
    find_lex $P5065, "$/"
    $P5066 = $P5054."new"($P5059, $P5060, $S5003 :named("op"), $P5065 :named("node"))
    store_lex "$past", $P5066
    set $P5080, $P5066
    goto if1887_end4398
  if1887_else4397:
.annotate 'line', 1754
.annotate 'line', 1755
    nqp_get_sc_object $P5067, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    set fb_tmp_235, $P102
    repr_defined $I5012, fb_tmp_235
    unless $I5012 goto if1894_else4408 
    set $P5068, fb_tmp_235["cond"]
    set $P5070, $P5068
    goto if1894_end4409
  if1894_else4408:
    null $P5069
    set $P5070, $P5069
  if1894_end4409:
    unless_null $P5070, vivi_18954410
    nqp_get_sc_object $P5071, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5070, $P5071
  vivi_18954410:
    $P5072 = $P5070."ast"()
    find_lex $P5073, "$past"
    set fb_tmp_236, $P102
    repr_defined $I5013, fb_tmp_236
    unless $I5013 goto if1896_else4411 
    set $P5074, fb_tmp_236["sym"]
    set $P5076, $P5074
    goto if1896_end4412
  if1896_else4411:
    null $P5075
    set $P5076, $P5075
  if1896_end4412:
    unless_null $P5076, vivi_18974413
    nqp_get_sc_object $P5077, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5076, $P5077
  vivi_18974413:
    set $S5004, $P5076
    find_lex $P5078, "$/"
    $P5079 = $P5067."new"($P5072, $P5073, $S5004 :named("op"), $P5078 :named("node"))
    store_lex "$past", $P5079
    set $P5080, $P5079
  if1887_end4398:
    set $P5081, $P5080
  if1886_end4396:
    .return ($P5081) 
.end
.HLL "nqp"
.namespace []
.sub "xblock" :subid("cuid_253_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1764
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_239 
    .local pmc fb_tmp_240 
.annotate 'line', 1765
    nqp_get_sc_object $P5001, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    unless_null _lex_param_1, fallback4427
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5002
  fallback4427:
    set fb_tmp_239, _lex_param_1
    repr_defined $I5001, fb_tmp_239
    unless $I5001 goto if1903_else4425 
    set $P5003, fb_tmp_239["EXPR"]
    set $P5005, $P5003
    goto if1903_end4426
  if1903_else4425:
    null $P5004
    set $P5005, $P5004
  if1903_end4426:
    unless_null $P5005, vivi_19044428
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5005, $P5006
  vivi_19044428:
    $P5007 = $P5005."ast"()
    unless_null _lex_param_1, fallback4431
    nqp_get_sc_object $P5008, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5008
  fallback4431:
    set fb_tmp_240, _lex_param_1
    repr_defined $I5002, fb_tmp_240
    unless $I5002 goto if1905_else4429 
    set $P5009, fb_tmp_240["pblock"]
    set $P5011, $P5009
    goto if1905_end4430
  if1905_else4429:
    null $P5010
    set $P5011, $P5010
  if1905_end4430:
    unless_null $P5011, vivi_19064432
    nqp_get_sc_object $P5012, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5011, $P5012
  vivi_19064432:
    $P5013 = $P5011."ast"()
    $P5014 = $P5001."new"($P5007, $P5013, "if" :named("op"), _lex_param_1 :named("node"))
    $P5015 = _lex_param_1."!make"($P5014)
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "pblock" :subid("cuid_254_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1768
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_241 
.annotate 'line', 1769
    unless_null _lex_param_1, fallback4435
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback4435:
    set fb_tmp_241, _lex_param_1
    repr_defined $I5001, fb_tmp_241
    unless $I5001 goto if1907_else4433 
    set $P5002, fb_tmp_241["blockoid"]
    set $P5004, $P5002
    goto if1907_end4434
  if1907_else4433:
    null $P5003
    set $P5004, $P5003
  if1907_end4434:
    unless_null $P5004, vivi_19084436
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_19084436:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "block" :subid("cuid_255_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1772
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_242 
.annotate 'line', 1773
    unless_null _lex_param_1, fallback4439
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback4439:
    set fb_tmp_242, _lex_param_1
    repr_defined $I5001, fb_tmp_242
    unless $I5001 goto if1909_else4437 
    set $P5002, fb_tmp_242["blockoid"]
    set $P5004, $P5002
    goto if1909_end4438
  if1909_else4437:
    null $P5003
    set $P5004, $P5003
  if1909_end4438:
    unless_null $P5004, vivi_19104440
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_19104440:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "blockoid" :subid("cuid_256_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1776
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5037 = 'cuid_454_1367388600.55005' 
    capture_lex $P5037 
    .lex "$BLOCK", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_243 
    .local pmc fb_tmp_244 
    .local pmc fb_tmp_250 
    .local pmc fb_tmp_251 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
.annotate 'line', 1777
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback4441
    nqp_get_sc_object $P5004, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5003, $P5004
    set fb_tmp_243, $P5003
    repr_defined $I5001, fb_tmp_243
    unless $I5001 goto if1911_else4442 
    set $P5005, fb_tmp_243["$W"]
    set $P5007, $P5005
    goto if1911_end4443
  if1911_else4442:
    null $P5006
    set $P5007, $P5006
  if1911_end4443:
    unless_null $P5007, vivi_19124444
    nqp_get_sc_object $P5008, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5007, $P5008
  vivi_19124444:
    unless_null $P5007, vivi_19134445
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_19134445:
    set $P5002, $P5007
  fallback4441:
    $P5010 = $P5002."pop_lexpad"()
    set $P101, $P5010
    unless_null _lex_param_1, fallback4450
    nqp_get_sc_object $P5011, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5011
  fallback4450:
    set fb_tmp_244, _lex_param_1
    repr_defined $I5002, fb_tmp_244
    unless $I5002 goto if1915_else4448 
    set $P5012, fb_tmp_244["statementlist"]
    set $P5014, $P5012
    goto if1915_end4449
  if1915_else4448:
    null $P5013
    set $P5014, $P5013
  if1915_end4449:
    unless_null $P5014, vivi_19164451
    nqp_get_sc_object $P5015, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5014, $P5015
  vivi_19164451:
    unless $P5014 goto if1914_else4446 
    .const 'Sub' $P5016 = 'cuid_454_1367388600.55005' 
    capture_lex $P5016
    $P5017 = $P5016()
    set $P5036, $P5017
    goto if1914_end4447
  if1914_else4446:
.annotate 'line', 1792
    find_dynamic_lex $P5018, "$*HAS_YOU_ARE_HERE"
    unless_null $P5018, fallback4485
    nqp_get_sc_object $P5020, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5019, $P5020
    set fb_tmp_250, $P5019
    repr_defined $I5003, fb_tmp_250
    unless $I5003 goto if1934_else4486 
    set $P5021, fb_tmp_250["$HAS_YOU_ARE_HERE"]
    set $P5023, $P5021
    goto if1934_end4487
  if1934_else4486:
    null $P5022
    set $P5023, $P5022
  if1934_end4487:
    unless_null $P5023, vivi_19354488
    nqp_get_sc_object $P5024, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5023, $P5024
  vivi_19354488:
    unless_null $P5023, vivi_19364489
    die "Contextual $*HAS_YOU_ARE_HERE not found"
    box $P5025, "Contextual $*HAS_YOU_ARE_HERE not found"
    set $P5023, $P5025
  vivi_19364489:
    set $P5018, $P5023
  fallback4485:
    unless $P5018 goto if1933_end4484 
.annotate 'line', 1793
.annotate 'line', 1794
    $P5026 = _lex_param_1."CURSOR"()
    $P5027 = $P5026."panic"("{YOU_ARE_HERE} may only appear once in a setting")
  if1933_end4484:
    box $P5028, 1
    store_dynamic_lex "$*HAS_YOU_ARE_HERE", $P5028
.annotate 'line', 1797
    unless_null _lex_param_1, fallback4492
    nqp_get_sc_object $P5029, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5029
  fallback4492:
    set fb_tmp_251, _lex_param_1
    repr_defined $I5004, fb_tmp_251
    unless $I5004 goto if1937_else4490 
    set $P5030, fb_tmp_251["you_are_here"]
    set $P5032, $P5030
    goto if1937_end4491
  if1937_else4490:
    null $P5031
    set $P5032, $P5031
  if1937_end4491:
    unless_null $P5032, vivi_19384493
    nqp_get_sc_object $P5033, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5032, $P5033
  vivi_19384493:
    $P5034 = $P5032."ast"()
    $P5035 = _lex_param_1."!make"($P5034)
    set $P5036, $P5035
  if1914_end4447:
    .return ($P5036) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_454_1367388600.55005") :anon :lex :outer("cuid_256_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1778
    .const 'Sub' $P5055 = 'cuid_453_1367388600.55005' 
    capture_lex $P5055 
    .lex "$past", $P101 
    .local pmc fb_tmp_245 
    .local pmc fb_tmp_246 
    .local pmc pkg_viv_tmp_31 
    .local pmc fb_tmp_247 
    .local pmc pkg_viv_tmp_32 
    .local pmc fb_tmp_248 
    .local pmc pkg_viv_tmp_34 
    .local pmc fb_tmp_249 
    .local pmc pkg_viv_tmp_33 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
.annotate 'line', 1779
    find_lex $P5002, "$/"
    unless_null $P5002, fallback4454
    nqp_get_sc_object $P5003, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5002, $P5003
  fallback4454:
    set fb_tmp_245, $P5002
    repr_defined $I5001, fb_tmp_245
    unless $I5001 goto if1917_else4452 
    set $P5004, fb_tmp_245["statementlist"]
    set $P5006, $P5004
    goto if1917_end4453
  if1917_else4452:
    null $P5005
    set $P5006, $P5005
  if1917_end4453:
    unless_null $P5006, vivi_19184455
    nqp_get_sc_object $P5007, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5006, $P5007
  vivi_19184455:
    $P5008 = $P5006."ast"()
    set $P101, $P5008
    find_dynamic_lex $P5009, "%*HANDLERS"
    unless_null $P5009, fallback4458
    nqp_get_sc_object $P5011, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5010, $P5011
    set pkg_viv_tmp_31, $P5010
    set fb_tmp_246, pkg_viv_tmp_31
    repr_defined $I5002, fb_tmp_246
    unless $I5002 goto if1920_else4459 
    set $P5012, fb_tmp_246["%HANDLERS"]
    set $P5014, $P5012
    goto if1920_end4460
  if1920_else4459:
    null $P5013
    set $P5014, $P5013
  if1920_end4460:
    unless_null $P5014, vivi_19214461
    new $P5015, 'Hash'
    set pkg_viv_tmp_31["%HANDLERS"], $P5015
    set $P5014, $P5015
  vivi_19214461:
    unless_null $P5014, vivi_19224462
    die "Contextual %*HANDLERS not found"
    box $P5016, "Contextual %*HANDLERS not found"
    set $P5014, $P5016
  vivi_19224462:
    set $P5009, $P5014
  fallback4458:
    unless $P5009 goto if1919_end4457 
.annotate 'line', 1780
.annotate 'line', 1781
    nqp_get_sc_object $P5017, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    $P5018 = $P5017."new"($P101, "handle" :named("op"))
    set $P101, $P5018
    find_dynamic_lex $P5022, "%*HANDLERS"
    unless_null $P5022, fallback4463
    nqp_get_sc_object $P5024, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5023, $P5024
    set pkg_viv_tmp_32, $P5023
    set fb_tmp_247, pkg_viv_tmp_32
    repr_defined $I5003, fb_tmp_247
    unless $I5003 goto if1923_else4464 
    set $P5025, fb_tmp_247["%HANDLERS"]
    set $P5027, $P5025
    goto if1923_end4465
  if1923_else4464:
    null $P5026
    set $P5027, $P5026
  if1923_end4465:
    unless_null $P5027, vivi_19244466
    new $P5028, 'Hash'
    set pkg_viv_tmp_32["%HANDLERS"], $P5028
    set $P5027, $P5028
  vivi_19244466:
    unless_null $P5027, vivi_19254467
    die "Contextual %*HANDLERS not found"
    box $P5029, "Contextual %*HANDLERS not found"
    set $P5027, $P5029
  vivi_19254467:
    set $P5022, $P5027
  fallback4463:
    set $P5019, $P5022
    iter $P5021, $P5022
  for_next4468:
    unless $P5021, for_done4470
    shift $P5031, $P5021
  for_redo4469:
    .const 'Sub' $P5030 = 'cuid_453_1367388600.55005' 
    capture_lex $P5030
    $P5019 = $P5030($P5031)
    goto for_next4468
  for_done4470:
  if1919_end4457:
.annotate 'line', 1787
    find_lex $P5032, "$BLOCK"
    $P5032."push"($P101)
.annotate 'line', 1788
    find_lex $P5033, "$BLOCK"
    find_lex $P5034, "$/"
    $P5033."node"($P5034)
    find_dynamic_lex $P5035, "%*HANDLERS"
    unless_null $P5035, fallback4473
    nqp_get_sc_object $P5037, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5036, $P5037
    set pkg_viv_tmp_34, $P5036
    set fb_tmp_248, pkg_viv_tmp_34
    repr_defined $I5004, fb_tmp_248
    unless $I5004 goto if1927_else4474 
    set $P5038, fb_tmp_248["%HANDLERS"]
    set $P5040, $P5038
    goto if1927_end4475
  if1927_else4474:
    null $P5039
    set $P5040, $P5039
  if1927_end4475:
    unless_null $P5040, vivi_19284476
    new $P5041, 'Hash'
    set pkg_viv_tmp_34["%HANDLERS"], $P5041
    set $P5040, $P5041
  vivi_19284476:
    unless_null $P5040, vivi_19294477
    die "Contextual %*HANDLERS not found"
    box $P5042, "Contextual %*HANDLERS not found"
    set $P5040, $P5042
  vivi_19294477:
    set $P5035, $P5040
  fallback4473:
    unless $P5035 goto if1926_end4472 
    find_lex $P5043, "$BLOCK"
    find_dynamic_lex $P5044, "%*HANDLERS"
    unless_null $P5044, fallback4478
    nqp_get_sc_object $P5046, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5045, $P5046
    set pkg_viv_tmp_33, $P5045
    set fb_tmp_249, pkg_viv_tmp_33
    repr_defined $I5005, fb_tmp_249
    unless $I5005 goto if1930_else4479 
    set $P5047, fb_tmp_249["%HANDLERS"]
    set $P5049, $P5047
    goto if1930_end4480
  if1930_else4479:
    null $P5048
    set $P5049, $P5048
  if1930_end4480:
    unless_null $P5049, vivi_19314481
    new $P5050, 'Hash'
    set pkg_viv_tmp_33["%HANDLERS"], $P5050
    set $P5049, $P5050
  vivi_19314481:
    unless_null $P5049, vivi_19324482
    die "Contextual %*HANDLERS not found"
    box $P5051, "Contextual %*HANDLERS not found"
    set $P5049, $P5051
  vivi_19324482:
    set $P5044, $P5049
  fallback4478:
    set $P5043["handlers"], $P5044
  if1926_end4472:
.annotate 'line', 1790
    find_dynamic_lex $P5052, "$/"
    find_lex $P5053, "$BLOCK"
    $P5054 = $P5052."!make"($P5053)
    .return ($P5054) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_453_1367388600.55005") :anon :lex :outer("cuid_454_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1782
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 1783
    find_lex $P5001, "$past"
    $P5002 = _lex_param_0."key"()
    $P5001."push"($P5002)
.annotate 'line', 1784
    find_lex $P5003, "$past"
    $P5004 = _lex_param_0."value"()
    $P5005 = $P5003."push"($P5004)
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "newpad" :subid("cuid_257_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1801
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_252 
.annotate 'line', 1802
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback4494
    nqp_get_sc_object $P5003, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5002, $P5003
    set fb_tmp_252, $P5002
    repr_defined $I5001, fb_tmp_252
    unless $I5001 goto if1939_else4495 
    set $P5004, fb_tmp_252["$W"]
    set $P5006, $P5004
    goto if1939_end4496
  if1939_else4495:
    null $P5005
    set $P5006, $P5005
  if1939_end4496:
    unless_null $P5006, vivi_19404497
    nqp_get_sc_object $P5007, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5006, $P5007
  vivi_19404497:
    unless_null $P5006, vivi_19414498
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_19414498:
    set $P5001, $P5006
  fallback4494:
    $P5009 = $P5001."push_lexpad"(_lex_param_1)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "outerctx" :subid("cuid_258_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1805
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5030 = 'cuid_456_1367388600.55005' 
    capture_lex $P5030 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_253 
    .local pmc fb_tmp_254 
    .local pmc fb_tmp_255 
    .local pmc pkg_viv_tmp_35 
    .local pmc fb_tmp_273 
    find_dynamic_lex $P5001, "%*COMPILING"
    unless_null $P5001, fallback4505
    nqp_get_sc_object $P5003, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_35, $P5002
    set fb_tmp_255, pkg_viv_tmp_35
    repr_defined $I5004, fb_tmp_255
    unless $I5004 goto if1945_else4506 
    set $P5004, fb_tmp_255["%COMPILING"]
    set $P5006, $P5004
    goto if1945_end4507
  if1945_else4506:
    null $P5005
    set $P5006, $P5005
  if1945_end4507:
    unless_null $P5006, vivi_19464508
    new $P5007, 'Hash'
    set pkg_viv_tmp_35["%COMPILING"], $P5007
    set $P5006, $P5007
  vivi_19464508:
    unless_null $P5006, vivi_19474509
    die "Contextual %*COMPILING not found"
    box $P5008, "Contextual %*COMPILING not found"
    set $P5006, $P5008
  vivi_19474509:
    set $P5001, $P5006
  fallback4505:
    set fb_tmp_254, $P5001
    repr_defined $I5003, fb_tmp_254
    unless $I5003 goto if1944_else4503 
    set $P5009, fb_tmp_254["%?OPTIONS"]
    set $P5011, $P5009
    goto if1944_end4504
  if1944_else4503:
    null $P5010
    set $P5011, $P5010
  if1944_end4504:
    unless_null $P5011, vivi_19484510
    nqp_get_sc_object $P5012, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5011, $P5012
  vivi_19484510:
    set fb_tmp_253, $P5011
    repr_defined $I5002, fb_tmp_253
    unless $I5002 goto if1943_else4501 
    set $P5013, fb_tmp_253["outer_ctx"]
    set $P5015, $P5013
    goto if1943_end4502
  if1943_else4501:
    null $P5014
    set $P5015, $P5014
  if1943_end4502:
    unless_null $P5015, vivi_19494511
    nqp_get_sc_object $P5016, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5015, $P5016
  vivi_19494511:
    defined $I5001, $P5015
    if $I5001 goto unless1942_end4500 
    .const 'Sub' $P5017 = 'cuid_456_1367388600.55005' 
    capture_lex $P5017
    $P5018 = $P5017()
  unless1942_end4500:
.annotate 'line', 1826
    nqp_decontainerize $P5019, _lex_param_0
    find_dynamic_lex $P5020, "$*W"
    unless_null $P5020, fallback4588
    nqp_get_sc_object $P5022, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5021, $P5022
    set fb_tmp_273, $P5021
    repr_defined $I5005, fb_tmp_273
    unless $I5005 goto if1996_else4589 
    set $P5023, fb_tmp_273["$W"]
    set $P5025, $P5023
    goto if1996_end4590
  if1996_else4589:
    null $P5024
    set $P5025, $P5024
  if1996_end4590:
    unless_null $P5025, vivi_19974591
    nqp_get_sc_object $P5026, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5025, $P5026
  vivi_19974591:
    unless_null $P5025, vivi_19984592
    die "Contextual $*W not found"
    box $P5027, "Contextual $*W not found"
    set $P5025, $P5027
  vivi_19984592:
    set $P5020, $P5025
  fallback4588:
    $P5028 = $P5020."cur_lexpad"()
    $P5029 = $P5019."SET_BLOCK_OUTER_CTX"($P5028)
    .return ($P5029) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_456_1367388600.55005") :anon :lex :outer("cuid_258_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1806
    .const 'Sub' $P5100 = 'cuid_455_1367388600.55005' 
    capture_lex $P5100 
    .lex "$SETTING", $P101 
    .local pmc fb_tmp_256 
    .local pmc fb_tmp_257 
    .local pmc fb_tmp_258 
    .local pmc fb_tmp_259 
    .local pmc pkg_viv_tmp_36 
    .local pmc fb_tmp_260 
    .local pmc fb_tmp_261 
    .local pmc fb_tmp_262 
    .local pmc pkg_viv_tmp_37 
    .local pmc fb_tmp_263 
    .local pmc fb_tmp_264 
    .local pmc fb_tmp_265 
    .local pmc pkg_viv_tmp_38 
    .local pmc fb_tmp_266 
    .local pmc fb_tmp_267 
    .local pmc fb_tmp_268 
    .local pmc pkg_viv_tmp_39 
    .local pmc fb_tmp_271 
    .local pmc fb_tmp_272 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
.annotate 'line', 1809
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback4512
    nqp_get_sc_object $P5004, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5003, $P5004
    set fb_tmp_256, $P5003
    repr_defined $I5001, fb_tmp_256
    unless $I5001 goto if1950_else4513 
    set $P5005, fb_tmp_256["$W"]
    set $P5007, $P5005
    goto if1950_end4514
  if1950_else4513:
    null $P5006
    set $P5007, $P5006
  if1950_end4514:
    unless_null $P5007, vivi_19514515
    nqp_get_sc_object $P5008, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5007, $P5008
  vivi_19514515:
    unless_null $P5007, vivi_19524516
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_19524516:
    set $P5002, $P5007
  fallback4512:
    find_dynamic_lex $P5011, "%*COMPILING"
    unless_null $P5011, fallback4522
    nqp_get_sc_object $P5013, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5012, $P5013
    set pkg_viv_tmp_36, $P5012
    set fb_tmp_259, pkg_viv_tmp_36
    repr_defined $I5005, fb_tmp_259
    unless $I5005 goto if1955_else4523 
    set $P5014, fb_tmp_259["%COMPILING"]
    set $P5016, $P5014
    goto if1955_end4524
  if1955_else4523:
    null $P5015
    set $P5016, $P5015
  if1955_end4524:
    unless_null $P5016, vivi_19564525
    new $P5017, 'Hash'
    set pkg_viv_tmp_36["%COMPILING"], $P5017
    set $P5016, $P5017
  vivi_19564525:
    unless_null $P5016, vivi_19574526
    die "Contextual %*COMPILING not found"
    box $P5018, "Contextual %*COMPILING not found"
    set $P5016, $P5018
  vivi_19574526:
    set $P5011, $P5016
  fallback4522:
    set fb_tmp_258, $P5011
    repr_defined $I5004, fb_tmp_258
    unless $I5004 goto if1954_else4520 
    set $P5019, fb_tmp_258["%?OPTIONS"]
    set $P5021, $P5019
    goto if1954_end4521
  if1954_else4520:
    null $P5020
    set $P5021, $P5020
  if1954_end4521:
    unless_null $P5021, vivi_19584527
    nqp_get_sc_object $P5022, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5021, $P5022
  vivi_19584527:
    set fb_tmp_257, $P5021
    repr_defined $I5003, fb_tmp_257
    unless $I5003 goto if1953_else4518 
    set $P5023, fb_tmp_257["setting"]
    set $P5025, $P5023
    goto if1953_end4519
  if1953_else4518:
    null $P5024
    set $P5025, $P5024
  if1953_end4519:
    unless_null $P5025, vivi_19594528
    nqp_get_sc_object $P5026, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5025, $P5026
  vivi_19594528:
    set $P5010, $P5025
    defined $I5002, $P5010
    if $I5002, defor4517
    box $P5027, "NQPCORE"
    set $P5010, $P5027
  defor4517:
    $P5028 = $P5002."load_setting"($P5010)
    set $P101, $P5028
    find_dynamic_lex $P5029, "%*COMPILING"
    unless_null $P5029, fallback4535
    nqp_get_sc_object $P5031, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5030, $P5031
    set pkg_viv_tmp_37, $P5030
    set fb_tmp_262, pkg_viv_tmp_37
    repr_defined $I5009, fb_tmp_262
    unless $I5009 goto if1963_else4536 
    set $P5032, fb_tmp_262["%COMPILING"]
    set $P5034, $P5032
    goto if1963_end4537
  if1963_else4536:
    null $P5033
    set $P5034, $P5033
  if1963_end4537:
    unless_null $P5034, vivi_19644538
    new $P5035, 'Hash'
    set pkg_viv_tmp_37["%COMPILING"], $P5035
    set $P5034, $P5035
  vivi_19644538:
    unless_null $P5034, vivi_19654539
    die "Contextual %*COMPILING not found"
    box $P5036, "Contextual %*COMPILING not found"
    set $P5034, $P5036
  vivi_19654539:
    set $P5029, $P5034
  fallback4535:
    set fb_tmp_261, $P5029
    repr_defined $I5008, fb_tmp_261
    unless $I5008 goto if1962_else4533 
    set $P5037, fb_tmp_261["%?OPTIONS"]
    set $P5039, $P5037
    goto if1962_end4534
  if1962_else4533:
    null $P5038
    set $P5039, $P5038
  if1962_end4534:
    unless_null $P5039, vivi_19664540
    nqp_get_sc_object $P5040, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5039, $P5040
  vivi_19664540:
    set fb_tmp_260, $P5039
    repr_defined $I5007, fb_tmp_260
    unless $I5007 goto if1961_else4531 
    set $P5041, fb_tmp_260["setting"]
    set $P5043, $P5041
    goto if1961_end4532
  if1961_else4531:
    null $P5042
    set $P5043, $P5042
  if1961_end4532:
    unless_null $P5043, vivi_19674541
    nqp_get_sc_object $P5044, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5043, $P5044
  vivi_19674541:
    set $S5001, $P5043
    iseq $I5006, $S5001, "NULL"
    box $P5099, $I5006
    set $P5098, $P5099
    if $I5006 goto unless1960_end4530 
.annotate 'line', 1814
.annotate 'line', 1815
    "&import_HOW_exports"($P101)
    find_dynamic_lex $P5045, "%*COMPILING"
    unless_null $P5045, fallback4548
    nqp_get_sc_object $P5047, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5046, $P5047
    set pkg_viv_tmp_38, $P5046
    set fb_tmp_265, pkg_viv_tmp_38
    repr_defined $I5012, fb_tmp_265
    unless $I5012 goto if1971_else4549 
    set $P5048, fb_tmp_265["%COMPILING"]
    set $P5050, $P5048
    goto if1971_end4550
  if1971_else4549:
    null $P5049
    set $P5050, $P5049
  if1971_end4550:
    unless_null $P5050, vivi_19724551
    new $P5051, 'Hash'
    set pkg_viv_tmp_38["%COMPILING"], $P5051
    set $P5050, $P5051
  vivi_19724551:
    unless_null $P5050, vivi_19734552
    die "Contextual %*COMPILING not found"
    box $P5052, "Contextual %*COMPILING not found"
    set $P5050, $P5052
  vivi_19734552:
    set $P5045, $P5050
  fallback4548:
    set fb_tmp_264, $P5045
    repr_defined $I5011, fb_tmp_264
    unless $I5011 goto if1970_else4546 
    set $P5053, fb_tmp_264["%?OPTIONS"]
    set $P5055, $P5053
    goto if1970_end4547
  if1970_else4546:
    null $P5054
    set $P5055, $P5054
  if1970_end4547:
    unless_null $P5055, vivi_19744553
    nqp_get_sc_object $P5056, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5055, $P5056
  vivi_19744553:
    set fb_tmp_263, $P5055
    repr_defined $I5010, fb_tmp_263
    unless $I5010 goto if1969_else4544 
    set $P5057, fb_tmp_263["no-regex-lib"]
    set $P5059, $P5057
    goto if1969_end4545
  if1969_else4544:
    null $P5058
    set $P5059, $P5058
  if1969_end4545:
    unless_null $P5059, vivi_19754554
    nqp_get_sc_object $P5060, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5059, $P5060
  vivi_19754554:
    set $P5097, $P5059
    if $P5059 goto unless1968_end4543 
.annotate 'line', 1816
    find_dynamic_lex $P5061, "%*COMPILING"
    unless_null $P5061, fallback4561
    nqp_get_sc_object $P5063, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5062, $P5063
    set pkg_viv_tmp_39, $P5062
    set fb_tmp_268, pkg_viv_tmp_39
    repr_defined $I5015, fb_tmp_268
    unless $I5015 goto if1979_else4562 
    set $P5064, fb_tmp_268["%COMPILING"]
    set $P5066, $P5064
    goto if1979_end4563
  if1979_else4562:
    null $P5065
    set $P5066, $P5065
  if1979_end4563:
    unless_null $P5066, vivi_19804564
    new $P5067, 'Hash'
    set pkg_viv_tmp_39["%COMPILING"], $P5067
    set $P5066, $P5067
  vivi_19804564:
    unless_null $P5066, vivi_19814565
    die "Contextual %*COMPILING not found"
    box $P5068, "Contextual %*COMPILING not found"
    set $P5066, $P5068
  vivi_19814565:
    set $P5061, $P5066
  fallback4561:
    set fb_tmp_267, $P5061
    repr_defined $I5014, fb_tmp_267
    unless $I5014 goto if1978_else4559 
    set $P5069, fb_tmp_267["%?OPTIONS"]
    set $P5071, $P5069
    goto if1978_end4560
  if1978_else4559:
    null $P5070
    set $P5071, $P5070
  if1978_end4560:
    unless_null $P5071, vivi_19824566
    nqp_get_sc_object $P5072, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5071, $P5072
  vivi_19824566:
    set fb_tmp_266, $P5071
    repr_defined $I5013, fb_tmp_266
    unless $I5013 goto if1977_else4557 
    set $P5073, fb_tmp_266["custom-regex-lib"]
    set $P5075, $P5073
    goto if1977_end4558
  if1977_else4557:
    null $P5074
    set $P5075, $P5074
  if1977_end4558:
    unless_null $P5075, vivi_19834567
    nqp_get_sc_object $P5076, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5075, $P5076
  vivi_19834567:
    unless $P5075 goto if1976_else4555 
    .const 'Sub' $P5077 = 'cuid_455_1367388600.55005' 
    capture_lex $P5077
    $P5078 = $P5077($P5075)
    set $P5096, $P5078
    goto if1976_end4556
  if1976_else4555:
.annotate 'line', 1820
.annotate 'line', 1821
    find_dynamic_lex $P5079, "$*W"
    unless_null $P5079, fallback4578
    nqp_get_sc_object $P5081, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5080, $P5081
    set fb_tmp_271, $P5080
    repr_defined $I5016, fb_tmp_271
    unless $I5016 goto if1990_else4579 
    set $P5082, fb_tmp_271["$W"]
    set $P5084, $P5082
    goto if1990_end4580
  if1990_else4579:
    null $P5083
    set $P5084, $P5083
  if1990_end4580:
    unless_null $P5084, vivi_19914581
    nqp_get_sc_object $P5085, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5084, $P5085
  vivi_19914581:
    unless_null $P5084, vivi_19924582
    die "Contextual $*W not found"
    box $P5086, "Contextual $*W not found"
    set $P5084, $P5086
  vivi_19924582:
    set $P5079, $P5084
  fallback4578:
    find_dynamic_lex $P5087, "$*GLOBALish"
    unless_null $P5087, fallback4583
    nqp_get_sc_object $P5089, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5088, $P5089
    set fb_tmp_272, $P5088
    repr_defined $I5017, fb_tmp_272
    unless $I5017 goto if1993_else4584 
    set $P5090, fb_tmp_272["$GLOBALish"]
    set $P5092, $P5090
    goto if1993_end4585
  if1993_else4584:
    null $P5091
    set $P5092, $P5091
  if1993_end4585:
    unless_null $P5092, vivi_19944586
    nqp_get_sc_object $P5093, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5092, $P5093
  vivi_19944586:
    unless_null $P5092, vivi_19954587
    die "Contextual $*GLOBALish not found"
    box $P5094, "Contextual $*GLOBALish not found"
    set $P5092, $P5094
  vivi_19954587:
    set $P5087, $P5092
  fallback4583:
    $P5095 = $P5079."load_module"("NQPP6QRegex", $P5087)
    set $P5096, $P5095
  if1976_end4556:
    set $P5097, $P5096
  unless1968_end4543:
    set $P5098, $P5097
  unless1960_end4530:
    .return ($P5098) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_455_1367388600.55005") :anon :lex :outer("cuid_456_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1817
    .param pmc _lex_param_0 
    .lex "$lib", _lex_param_0 
    .local pmc fb_tmp_269 
    .local pmc fb_tmp_270 
.annotate 'line', 1818
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback4568
    nqp_get_sc_object $P5003, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5002, $P5003
    set fb_tmp_269, $P5002
    repr_defined $I5001, fb_tmp_269
    unless $I5001 goto if1984_else4569 
    set $P5004, fb_tmp_269["$W"]
    set $P5006, $P5004
    goto if1984_end4570
  if1984_else4569:
    null $P5005
    set $P5006, $P5005
  if1984_end4570:
    unless_null $P5006, vivi_19854571
    nqp_get_sc_object $P5007, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5006, $P5007
  vivi_19854571:
    unless_null $P5006, vivi_19864572
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_19864572:
    set $P5001, $P5006
  fallback4568:
    find_dynamic_lex $P5009, "$*GLOBALish"
    unless_null $P5009, fallback4573
    nqp_get_sc_object $P5011, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5010, $P5011
    set fb_tmp_270, $P5010
    repr_defined $I5002, fb_tmp_270
    unless $I5002 goto if1987_else4574 
    set $P5012, fb_tmp_270["$GLOBALish"]
    set $P5014, $P5012
    goto if1987_end4575
  if1987_else4574:
    null $P5013
    set $P5014, $P5013
  if1987_end4575:
    unless_null $P5014, vivi_19884576
    nqp_get_sc_object $P5015, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5014, $P5015
  vivi_19884576:
    unless_null $P5014, vivi_19894577
    die "Contextual $*GLOBALish not found"
    box $P5016, "Contextual $*GLOBALish not found"
    set $P5014, $P5016
  vivi_19894577:
    set $P5009, $P5014
  fallback4573:
    $P5017 = $P5001."load_module"(_lex_param_0, $P5009)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "you_are_here" :subid("cuid_259_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1838
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
.annotate 'line', 1839
    nqp_decontainerize $P5001, _lex_param_0
    $P5002 = $P5001."CTXSAVE"()
    $P5003 = _lex_param_1."!make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<use>" :subid("cuid_260_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1844
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$module", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_274 
    .local pmc fb_tmp_275 
    .local pmc fb_tmp_276 
    .local pmc fb_tmp_277 
    .local pmc fb_tmp_278 
    .local pmc fb_tmp_279 
    .local pmc fb_tmp_280 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
.annotate 'line', 1845
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback4593
    nqp_get_sc_object $P5004, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5003, $P5004
    set fb_tmp_274, $P5003
    repr_defined $I5001, fb_tmp_274
    unless $I5001 goto if1999_else4594 
    set $P5005, fb_tmp_274["$W"]
    set $P5007, $P5005
    goto if1999_end4595
  if1999_else4594:
    null $P5006
    set $P5007, $P5006
  if1999_end4595:
    unless_null $P5007, vivi_20004596
    nqp_get_sc_object $P5008, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5007, $P5008
  vivi_20004596:
    unless_null $P5007, vivi_20014597
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_20014597:
    set $P5002, $P5007
  fallback4593:
    unless_null _lex_param_1, fallback4600
    nqp_get_sc_object $P5010, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5010
  fallback4600:
    set fb_tmp_275, _lex_param_1
    repr_defined $I5002, fb_tmp_275
    unless $I5002 goto if2002_else4598 
    set $P5011, fb_tmp_275["name"]
    set $P5013, $P5011
    goto if2002_end4599
  if2002_else4598:
    null $P5012
    set $P5013, $P5012
  if2002_end4599:
    unless_null $P5013, vivi_20034601
    nqp_get_sc_object $P5014, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5013, $P5014
  vivi_20034601:
    set $S5001, $P5013
    find_dynamic_lex $P5015, "$*GLOBALish"
    unless_null $P5015, fallback4602
    nqp_get_sc_object $P5017, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5016, $P5017
    set fb_tmp_276, $P5016
    repr_defined $I5003, fb_tmp_276
    unless $I5003 goto if2004_else4603 
    set $P5018, fb_tmp_276["$GLOBALish"]
    set $P5020, $P5018
    goto if2004_end4604
  if2004_else4603:
    null $P5019
    set $P5020, $P5019
  if2004_end4604:
    unless_null $P5020, vivi_20054605
    nqp_get_sc_object $P5021, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5020, $P5021
  vivi_20054605:
    unless_null $P5020, vivi_20064606
    die "Contextual $*GLOBALish not found"
    box $P5022, "Contextual $*GLOBALish not found"
    set $P5020, $P5022
  vivi_20064606:
    set $P5015, $P5020
  fallback4602:
    $P5023 = $P5002."load_module"($S5001, $P5015)
    set $P101, $P5023
    defined $I5004, $P101
    unless $I5004 goto if2007_end4608 
.annotate 'line', 1846
    exists $I5005, $P101["EXPORT"]
    set $I5008, $I5005
    unless $I5005 goto if2009_end4612 
    set fb_tmp_277, $P101
    repr_defined $I5007, fb_tmp_277
    unless $I5007 goto if2010_else4613 
    set $P5025, fb_tmp_277["EXPORT"]
    set $P5027, $P5025
    goto if2010_end4614
  if2010_else4613:
    null $P5026
    set $P5027, $P5026
  if2010_end4614:
    unless_null $P5027, vivi_20114615
    nqp_get_sc_object $P5028, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5027, $P5028
  vivi_20114615:
    get_who $P5024, $P5027
    exists $I5006, $P5024["DEFAULT"]
    set $I5008, $I5006
  if2009_end4612:
    unless $I5008 goto if2008_end4610 
.annotate 'line', 1847
    find_dynamic_lex $P5029, "$*W"
    unless_null $P5029, fallback4616
    nqp_get_sc_object $P5031, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5030, $P5031
    set fb_tmp_278, $P5030
    repr_defined $I5009, fb_tmp_278
    unless $I5009 goto if2012_else4617 
    set $P5032, fb_tmp_278["$W"]
    set $P5034, $P5032
    goto if2012_end4618
  if2012_else4617:
    null $P5033
    set $P5034, $P5033
  if2012_end4618:
    unless_null $P5034, vivi_20134619
    nqp_get_sc_object $P5035, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5034, $P5035
  vivi_20134619:
    unless_null $P5034, vivi_20144620
    die "Contextual $*W not found"
    box $P5036, "Contextual $*W not found"
    set $P5034, $P5036
  vivi_20144620:
    set $P5029, $P5034
  fallback4616:
    set fb_tmp_280, $P101
    repr_defined $I5011, fb_tmp_280
    unless $I5011 goto if2016_else4623 
    set $P5039, fb_tmp_280["EXPORT"]
    set $P5041, $P5039
    goto if2016_end4624
  if2016_else4623:
    null $P5040
    set $P5041, $P5040
  if2016_end4624:
    unless_null $P5041, vivi_20174625
    nqp_get_sc_object $P5042, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5041, $P5042
  vivi_20174625:
    get_who $P5038, $P5041
    set fb_tmp_279, $P5038
    repr_defined $I5010, fb_tmp_279
    unless $I5010 goto if2015_else4621 
    set $P5043, fb_tmp_279["DEFAULT"]
    set $P5045, $P5043
    goto if2015_end4622
  if2015_else4621:
    null $P5044
    set $P5045, $P5044
  if2015_end4622:
    unless_null $P5045, vivi_20184626
    nqp_get_sc_object $P5046, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5045, $P5046
  vivi_20184626:
    get_who $P5037, $P5045
    $P5047 = $P5029."import"($P5037)
  if2008_end4610:
.annotate 'line', 1850
    $P5048 = "&import_HOW_exports"($P101)
  if2007_end4608:
.annotate 'line', 1852
    nqp_get_sc_object $P5049, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 93
    $P5050 = $P5049."new"()
    $P5051 = _lex_param_1."!make"($P5050)
    .return ($P5051) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<if>" :subid("cuid_261_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1855
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5042 = 'cuid_457_1367388600.55005' 
    capture_lex $P5042 
    .lex "$count", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_281 
    .local pmc fb_tmp_282 
    .local pmc fb_tmp_283 
    .local pmc fb_tmp_284 
    .local pmc fb_tmp_285 
    .local pmc fb_tmp_286 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
    unless_null _lex_param_1, fallback4629
    nqp_get_sc_object $P5003, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5003
  fallback4629:
    set fb_tmp_281, _lex_param_1
    repr_defined $I5001, fb_tmp_281
    unless $I5001 goto if2019_else4627 
    set $P5004, fb_tmp_281["xblock"]
    set $P5006, $P5004
    goto if2019_end4628
  if2019_else4627:
    null $P5005
    set $P5006, $P5005
  if2019_end4628:
    unless_null $P5006, vivi_20204630
    nqp_get_sc_object $P5007, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5006, $P5007
  vivi_20204630:
    set $N5002, $P5006
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5008, $N5001
    set $P101, $P5008
.annotate 'line', 1857
    unless_null _lex_param_1, fallback4635
    nqp_get_sc_object $P5009, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5009
  fallback4635:
    set fb_tmp_283, _lex_param_1
    repr_defined $I5003, fb_tmp_283
    unless $I5003 goto if2022_else4633 
    set $P5010, fb_tmp_283["xblock"]
    set $P5012, $P5010
    goto if2022_end4634
  if2022_else4633:
    null $P5011
    set $P5012, $P5011
  if2022_end4634:
    unless_null $P5012, vivi_20234636
    nqp_get_sc_object $P5013, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5012, $P5013
  vivi_20234636:
    set fb_tmp_282, $P5012
    repr_defined $I5002, fb_tmp_282
    unless $I5002 goto if2021_else4631 
    set $I5004, $P101
    set $P5014, fb_tmp_282[$I5004]
    set $P5016, $P5014
    goto if2021_end4632
  if2021_else4631:
    null $P5015
    set $P5016, $P5015
  if2021_end4632:
    unless_null $P5016, vivi_20244637
    nqp_get_sc_object $P5017, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5016, $P5017
  vivi_20244637:
    $P5018 = $P5016."ast"()
    $P5019 = "&xblock_immediate"($P5018)
    set $P102, $P5019
    unless_null _lex_param_1, fallback4642
    nqp_get_sc_object $P5020, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5020
  fallback4642:
    set fb_tmp_284, _lex_param_1
    repr_defined $I5005, fb_tmp_284
    unless $I5005 goto if2026_else4640 
    set $P5021, fb_tmp_284["else"]
    set $P5023, $P5021
    goto if2026_end4641
  if2026_else4640:
    null $P5022
    set $P5023, $P5022
  if2026_end4641:
    unless_null $P5023, vivi_20274643
    nqp_get_sc_object $P5024, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5023, $P5024
  vivi_20274643:
    unless $P5023 goto if2025_end4639 
.annotate 'line', 1858
.annotate 'line', 1859
    unless_null _lex_param_1, fallback4648
    nqp_get_sc_object $P5025, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5025
  fallback4648:
    set fb_tmp_286, _lex_param_1
    repr_defined $I5007, fb_tmp_286
    unless $I5007 goto if2029_else4646 
    set $P5026, fb_tmp_286["else"]
    set $P5028, $P5026
    goto if2029_end4647
  if2029_else4646:
    null $P5027
    set $P5028, $P5027
  if2029_end4647:
    unless_null $P5028, vivi_20304649
    nqp_get_sc_object $P5029, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5028, $P5029
  vivi_20304649:
    set fb_tmp_285, $P5028
    repr_defined $I5006, fb_tmp_285
    unless $I5006 goto if2028_else4644 
    set $P5030, fb_tmp_285[0]
    set $P5032, $P5030
    goto if2028_end4645
  if2028_else4644:
    null $P5031
    set $P5032, $P5031
  if2028_end4645:
    unless_null $P5032, vivi_20314650
    nqp_get_sc_object $P5033, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5032, $P5033
  vivi_20314650:
    $P5034 = $P5032."ast"()
    $P5035 = "&block_immediate"($P5034)
    $P5036 = $P102."push"($P5035)
  if2025_end4639:
  while2032_test4651:
    set $N5004, $P101
    set $N5005, 0
    isgt $I5008, $N5004, $N5005
    box $P5040, $I5008
    set $P5039, $P5040
    unless $I5008 goto while2032_done4655 
  while2032_redo4653:
    .const 'Sub' $P5037 = 'cuid_457_1367388600.55005' 
    capture_lex $P5037
    $P5038 = $P5037()
    set $P5039, $P5038
    goto while2032_test4651 
  while2032_done4655:
.annotate 'line', 1868
    $P5041 = _lex_param_1."!make"($P102)
    .return ($P5041) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_457_1367388600.55005") :anon :lex :outer("cuid_261_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1862
    .lex "$else", $P101 
    .local pmc tmp_1 
    .local pmc fb_tmp_287 
    .local pmc fb_tmp_288 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    find_lex $P5002, "$count"
    set tmp_1, $P5002
    set $N5002, tmp_1
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$count", $P5003
    find_lex $P5002, "$past"
    set $P101, $P5002
.annotate 'line', 1865
    find_lex $P5003, "$/"
    unless_null $P5003, fallback4660
    nqp_get_sc_object $P5004, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5003, $P5004
  fallback4660:
    set fb_tmp_288, $P5003
    repr_defined $I5002, fb_tmp_288
    unless $I5002 goto if2034_else4658 
    set $P5005, fb_tmp_288["xblock"]
    set $P5007, $P5005
    goto if2034_end4659
  if2034_else4658:
    null $P5006
    set $P5007, $P5006
  if2034_end4659:
    unless_null $P5007, vivi_20354661
    nqp_get_sc_object $P5008, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5007, $P5008
  vivi_20354661:
    set fb_tmp_287, $P5007
    repr_defined $I5001, fb_tmp_287
    unless $I5001 goto if2033_else4656 
    find_lex $P5010, "$count"
    set $I5003, $P5010
    set $P5009, fb_tmp_287[$I5003]
    set $P5012, $P5009
    goto if2033_end4657
  if2033_else4656:
    null $P5011
    set $P5012, $P5011
  if2033_end4657:
    unless_null $P5012, vivi_20364662
    nqp_get_sc_object $P5013, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5012, $P5013
  vivi_20364662:
    $P5014 = $P5012."ast"()
    $P5015 = "&xblock_immediate"($P5014)
    store_lex "$past", $P5015
.annotate 'line', 1866
    find_lex $P5016, "$past"
    $P5017 = $P5016."push"($P101)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<unless>" :subid("cuid_262_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1871
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_289 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
.annotate 'line', 1872
    unless_null _lex_param_1, fallback4665
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5002
  fallback4665:
    set fb_tmp_289, _lex_param_1
    repr_defined $I5001, fb_tmp_289
    unless $I5001 goto if2037_else4663 
    set $P5003, fb_tmp_289["xblock"]
    set $P5005, $P5003
    goto if2037_end4664
  if2037_else4663:
    null $P5004
    set $P5005, $P5004
  if2037_end4664:
    unless_null $P5005, vivi_20384666
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5005, $P5006
  vivi_20384666:
    $P5007 = $P5005."ast"()
    $P5008 = "&xblock_immediate"($P5007)
    set $P101, $P5008
.annotate 'line', 1873
    $P101."op"("unless")
.annotate 'line', 1874
    $P5009 = _lex_param_1."!make"($P101)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<while>" :subid("cuid_263_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1877
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_290 
    .local pmc fb_tmp_291 
    .local pmc fb_tmp_292 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
.annotate 'line', 1878
    unless_null _lex_param_1, fallback4669
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5002
  fallback4669:
    set fb_tmp_290, _lex_param_1
    repr_defined $I5001, fb_tmp_290
    unless $I5001 goto if2039_else4667 
    set $P5003, fb_tmp_290["xblock"]
    set $P5005, $P5003
    goto if2039_end4668
  if2039_else4667:
    null $P5004
    set $P5005, $P5004
  if2039_end4668:
    unless_null $P5005, vivi_20404670
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5005, $P5006
  vivi_20404670:
    $P5007 = $P5005."ast"()
    $P5008 = "&xblock_immediate"($P5007)
    set $P101, $P5008
.annotate 'line', 1879
    unless_null _lex_param_1, fallback4673
    nqp_get_sc_object $P5009, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5009
  fallback4673:
    set fb_tmp_291, _lex_param_1
    repr_defined $I5002, fb_tmp_291
    unless $I5002 goto if2041_else4671 
    set $P5010, fb_tmp_291["sym"]
    set $P5012, $P5010
    goto if2041_end4672
  if2041_else4671:
    null $P5011
    set $P5012, $P5011
  if2041_end4672:
    unless_null $P5012, vivi_20424674
    nqp_get_sc_object $P5013, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5012, $P5013
  vivi_20424674:
    set $S5001, $P5012
    $P101."op"($S5001)
    find_dynamic_lex $P5014, "$*CONTROL_USED"
    unless_null $P5014, fallback4677
    nqp_get_sc_object $P5016, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5015, $P5016
    set fb_tmp_292, $P5015
    repr_defined $I5003, fb_tmp_292
    unless $I5003 goto if2044_else4678 
    set $P5017, fb_tmp_292["$CONTROL_USED"]
    set $P5019, $P5017
    goto if2044_end4679
  if2044_else4678:
    null $P5018
    set $P5019, $P5018
  if2044_end4679:
    unless_null $P5019, vivi_20454680
    nqp_get_sc_object $P5020, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5019, $P5020
  vivi_20454680:
    unless_null $P5019, vivi_20464681
    die "Contextual $*CONTROL_USED not found"
    box $P5021, "Contextual $*CONTROL_USED not found"
    set $P5019, $P5021
  vivi_20464681:
    set $P5014, $P5019
  fallback4677:
    if $P5014 goto unless2043_end4676 
.annotate 'line', 1880
.annotate 'line', 1881
    nqp_get_sc_object $P5022, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 42
    $P5023 = $P5022."new"(1 :named("value"), "nohandler" :named("named"))
    $P5024 = $P101."push"($P5023)
  unless2043_end4676:
.annotate 'line', 1883
    $P5025 = _lex_param_1."!make"($P101)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<repeat>" :subid("cuid_264_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1886
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$op", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_293 
    .local pmc fb_tmp_294 
    .local pmc fb_tmp_295 
    .local pmc fb_tmp_296 
    .local pmc fb_tmp_297 
    .local pmc fb_tmp_298 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
    unless_null _lex_param_1, fallback4684
    nqp_get_sc_object $P5003, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5003
  fallback4684:
    set fb_tmp_293, _lex_param_1
    repr_defined $I5001, fb_tmp_293
    unless $I5001 goto if2047_else4682 
    set $P5004, fb_tmp_293["wu"]
    set $P5006, $P5004
    goto if2047_end4683
  if2047_else4682:
    null $P5005
    set $P5006, $P5005
  if2047_end4683:
    unless_null $P5006, vivi_20484685
    nqp_get_sc_object $P5007, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5006, $P5007
  vivi_20484685:
    set $S5002, $P5006
    concat $S5001, "repeat_", $S5002
    box $P5008, $S5001
    set $P101, $P5008
    unless_null _lex_param_1, fallback4690
    nqp_get_sc_object $P5009, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5009
  fallback4690:
    set fb_tmp_294, _lex_param_1
    repr_defined $I5002, fb_tmp_294
    unless $I5002 goto if2050_else4688 
    set $P5010, fb_tmp_294["xblock"]
    set $P5012, $P5010
    goto if2050_end4689
  if2050_else4688:
    null $P5011
    set $P5012, $P5011
  if2050_end4689:
    unless_null $P5012, vivi_20514691
    nqp_get_sc_object $P5013, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5012, $P5013
  vivi_20514691:
    unless $P5012 goto if2049_else4686 
.annotate 'line', 1889
.annotate 'line', 1890
    unless_null _lex_param_1, fallback4694
    nqp_get_sc_object $P5014, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5014
  fallback4694:
    set fb_tmp_295, _lex_param_1
    repr_defined $I5003, fb_tmp_295
    unless $I5003 goto if2052_else4692 
    set $P5015, fb_tmp_295["xblock"]
    set $P5017, $P5015
    goto if2052_end4693
  if2052_else4692:
    null $P5016
    set $P5017, $P5016
  if2052_end4693:
    unless_null $P5017, vivi_20534695
    nqp_get_sc_object $P5018, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5017, $P5018
  vivi_20534695:
    $P5019 = $P5017."ast"()
    $P5020 = "&xblock_immediate"($P5019)
    set $P102, $P5020
.annotate 'line', 1891
    $P5021 = $P102."op"($P101)
    goto if2049_end4687
  if2049_else4686:
.annotate 'line', 1893
.annotate 'line', 1894
    nqp_get_sc_object $P5022, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    unless_null _lex_param_1, fallback4698
    nqp_get_sc_object $P5023, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5023
  fallback4698:
    set fb_tmp_296, _lex_param_1
    repr_defined $I5004, fb_tmp_296
    unless $I5004 goto if2054_else4696 
    set $P5024, fb_tmp_296["EXPR"]
    set $P5026, $P5024
    goto if2054_end4697
  if2054_else4696:
    null $P5025
    set $P5026, $P5025
  if2054_end4697:
    unless_null $P5026, vivi_20554699
    nqp_get_sc_object $P5027, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5026, $P5027
  vivi_20554699:
    $P5028 = $P5026."ast"()
    unless_null _lex_param_1, fallback4702
    nqp_get_sc_object $P5029, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5029
  fallback4702:
    set fb_tmp_297, _lex_param_1
    repr_defined $I5005, fb_tmp_297
    unless $I5005 goto if2056_else4700 
    set $P5030, fb_tmp_297["pblock"]
    set $P5032, $P5030
    goto if2056_end4701
  if2056_else4700:
    null $P5031
    set $P5032, $P5031
  if2056_end4701:
    unless_null $P5032, vivi_20574703
    nqp_get_sc_object $P5033, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5032, $P5033
  vivi_20574703:
    $P5034 = $P5032."ast"()
    $P5035 = "&block_immediate"($P5034)
    $P5036 = $P5022."new"($P5028, $P5035, $P101 :named("op"), _lex_param_1 :named("node"))
    set $P102, $P5036
  if2049_end4687:
    find_dynamic_lex $P5037, "$*CONTROL_USED"
    unless_null $P5037, fallback4706
    nqp_get_sc_object $P5039, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5038, $P5039
    set fb_tmp_298, $P5038
    repr_defined $I5006, fb_tmp_298
    unless $I5006 goto if2059_else4707 
    set $P5040, fb_tmp_298["$CONTROL_USED"]
    set $P5042, $P5040
    goto if2059_end4708
  if2059_else4707:
    null $P5041
    set $P5042, $P5041
  if2059_end4708:
    unless_null $P5042, vivi_20604709
    nqp_get_sc_object $P5043, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5042, $P5043
  vivi_20604709:
    unless_null $P5042, vivi_20614710
    die "Contextual $*CONTROL_USED not found"
    box $P5044, "Contextual $*CONTROL_USED not found"
    set $P5042, $P5044
  vivi_20614710:
    set $P5037, $P5042
  fallback4706:
    if $P5037 goto unless2058_end4705 
.annotate 'line', 1897
.annotate 'line', 1898
    nqp_get_sc_object $P5045, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 42
    $P5046 = $P5045."new"(1 :named("value"), "nohandler" :named("named"))
    $P5047 = $P102."push"($P5046)
  unless2058_end4705:
.annotate 'line', 1900
    $P5048 = _lex_param_1."!make"($P102)
    .return ($P5048) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<for>" :subid("cuid_265_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1903
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "$block", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_299 
    .local pmc fb_tmp_300 
    .local pmc fb_tmp_301 
    .local pmc fb_tmp_302 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
.annotate 'line', 1904
    unless_null _lex_param_1, fallback4713
    nqp_get_sc_object $P5003, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5003
  fallback4713:
    set fb_tmp_299, _lex_param_1
    repr_defined $I5001, fb_tmp_299
    unless $I5001 goto if2062_else4711 
    set $P5004, fb_tmp_299["xblock"]
    set $P5006, $P5004
    goto if2062_end4712
  if2062_else4711:
    null $P5005
    set $P5006, $P5005
  if2062_end4712:
    unless_null $P5006, vivi_20634714
    nqp_get_sc_object $P5007, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5006, $P5007
  vivi_20634714:
    $P5008 = $P5006."ast"()
    set $P101, $P5008
.annotate 'line', 1905
    $P101."op"("for")
    set fb_tmp_300, $P101
    repr_defined $I5002, fb_tmp_300
    unless $I5002 goto if2064_else4715 
    set $P5009, fb_tmp_300[1]
    set $P5011, $P5009
    goto if2064_end4716
  if2064_else4715:
    null $P5010
    set $P5011, $P5010
  if2064_end4716:
    unless_null $P5011, vivi_20654717
    nqp_get_sc_object $P5012, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5011, $P5012
  vivi_20654717:
    set $P102, $P5011
.annotate 'line', 1907
    $P5013 = $P102."arity"()
    if $P5013 goto unless2066_end4719 
.annotate 'line', 1908
    set fb_tmp_301, $P102
    repr_defined $I5003, fb_tmp_301
    unless $I5003 goto if2067_else4720 
    set $P5014, fb_tmp_301[0]
    set $P5016, $P5014
    goto if2067_end4721
  if2067_else4720:
    null $P5015
    set $P5016, $P5015
  if2067_end4721:
    unless_null $P5016, vivi_20684722
    nqp_get_sc_object $P5017, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5016, $P5017
  vivi_20684722:
    nqp_get_sc_object $P5018, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5019 = $P5018."new"("$_" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    $P5016."push"($P5019)
.annotate 'line', 1909
    $P102."symbol"("$_", "lexical" :named("scope"))
.annotate 'line', 1910
    $P5020 = $P102."arity"(1)
  unless2066_end4719:
.annotate 'line', 1912
    $P102."blocktype"("immediate")
    find_dynamic_lex $P5021, "$*CONTROL_USED"
    unless_null $P5021, fallback4725
    nqp_get_sc_object $P5023, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5022, $P5023
    set fb_tmp_302, $P5022
    repr_defined $I5004, fb_tmp_302
    unless $I5004 goto if2070_else4726 
    set $P5024, fb_tmp_302["$CONTROL_USED"]
    set $P5026, $P5024
    goto if2070_end4727
  if2070_else4726:
    null $P5025
    set $P5026, $P5025
  if2070_end4727:
    unless_null $P5026, vivi_20714728
    nqp_get_sc_object $P5027, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5026, $P5027
  vivi_20714728:
    unless_null $P5026, vivi_20724729
    die "Contextual $*CONTROL_USED not found"
    box $P5028, "Contextual $*CONTROL_USED not found"
    set $P5026, $P5028
  vivi_20724729:
    set $P5021, $P5026
  fallback4725:
    if $P5021 goto unless2069_end4724 
.annotate 'line', 1913
.annotate 'line', 1914
    nqp_get_sc_object $P5029, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 42
    $P5030 = $P5029."new"(1 :named("value"), "nohandler" :named("named"))
    $P5031 = $P101."push"($P5030)
  unless2069_end4724:
.annotate 'line', 1916
    $P5032 = _lex_param_1."!make"($P101)
    .return ($P5032) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<CATCH>" :subid("cuid_266_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1919
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$block", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_303 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
.annotate 'line', 1920
    unless_null _lex_param_1, fallback4732
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5002
  fallback4732:
    set fb_tmp_303, _lex_param_1
    repr_defined $I5001, fb_tmp_303
    unless $I5001 goto if2073_else4730 
    set $P5003, fb_tmp_303["block"]
    set $P5005, $P5003
    goto if2073_end4731
  if2073_else4730:
    null $P5004
    set $P5005, $P5004
  if2073_end4731:
    unless_null $P5005, vivi_20744733
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5005, $P5006
  vivi_20744733:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 1921
    "&set_block_handler"(_lex_param_1, $P101, "CATCH")
.annotate 'line', 1922
    $P5008 = "&default_for"("$")
    $P5009 = _lex_param_1."!make"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<CONTROL>" :subid("cuid_267_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1925
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$block", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_304 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
.annotate 'line', 1926
    unless_null _lex_param_1, fallback4736
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5002
  fallback4736:
    set fb_tmp_304, _lex_param_1
    repr_defined $I5001, fb_tmp_304
    unless $I5001 goto if2075_else4734 
    set $P5003, fb_tmp_304["block"]
    set $P5005, $P5003
    goto if2075_end4735
  if2075_else4734:
    null $P5004
    set $P5005, $P5004
  if2075_end4735:
    unless_null $P5005, vivi_20764737
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5005, $P5006
  vivi_20764737:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 1927
    "&set_block_handler"(_lex_param_1, $P101, "CONTROL")
.annotate 'line', 1928
    $P5008 = "&default_for"("$")
    $P5009 = _lex_param_1."!make"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<BEGIN>" :subid("cuid_268_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1965
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_305 
    .local pmc fb_tmp_306 
.annotate 'line', 1966
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback4738
    nqp_get_sc_object $P5003, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5002, $P5003
    set fb_tmp_305, $P5002
    repr_defined $I5001, fb_tmp_305
    unless $I5001 goto if2077_else4739 
    set $P5004, fb_tmp_305["$W"]
    set $P5006, $P5004
    goto if2077_end4740
  if2077_else4739:
    null $P5005
    set $P5006, $P5005
  if2077_end4740:
    unless_null $P5006, vivi_20784741
    nqp_get_sc_object $P5007, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5006, $P5007
  vivi_20784741:
    unless_null $P5006, vivi_20794742
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_20794742:
    set $P5001, $P5006
  fallback4738:
    unless_null _lex_param_1, fallback4745
    nqp_get_sc_object $P5009, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5009
  fallback4745:
    set fb_tmp_306, _lex_param_1
    repr_defined $I5002, fb_tmp_306
    unless $I5002 goto if2080_else4743 
    set $P5010, fb_tmp_306["blorst"]
    set $P5012, $P5010
    goto if2080_end4744
  if2080_else4743:
    null $P5011
    set $P5012, $P5011
  if2080_end4744:
    unless_null $P5012, vivi_20814746
    nqp_get_sc_object $P5013, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5012, $P5013
  vivi_20814746:
    $P5014 = $P5012."ast"()
    $P5015 = $P5001."run_begin_block"($P5014)
    $P5016 = _lex_param_1."!make"($P5015)
    .return ($P5016) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<INIT>" :subid("cuid_269_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1969
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_307 
    .local pmc fb_tmp_308 
.annotate 'line', 1970
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback4747
    nqp_get_sc_object $P5003, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5002, $P5003
    set fb_tmp_307, $P5002
    repr_defined $I5001, fb_tmp_307
    unless $I5001 goto if2082_else4748 
    set $P5004, fb_tmp_307["$W"]
    set $P5006, $P5004
    goto if2082_end4749
  if2082_else4748:
    null $P5005
    set $P5006, $P5005
  if2082_end4749:
    unless_null $P5006, vivi_20834750
    nqp_get_sc_object $P5007, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5006, $P5007
  vivi_20834750:
    unless_null $P5006, vivi_20844751
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_20844751:
    set $P5001, $P5006
  fallback4747:
    $P5009 = $P5001."cur_lexpad"()
    unless_null _lex_param_1, fallback4754
    nqp_get_sc_object $P5010, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5010
  fallback4754:
    set fb_tmp_308, _lex_param_1
    repr_defined $I5002, fb_tmp_308
    unless $I5002 goto if2085_else4752 
    set $P5011, fb_tmp_308["blorst"]
    set $P5013, $P5011
    goto if2085_end4753
  if2085_else4752:
    null $P5012
    set $P5013, $P5012
  if2085_end4753:
    unless_null $P5013, vivi_20864755
    nqp_get_sc_object $P5014, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5013, $P5014
  vivi_20864755:
    $P5015 = $P5013."ast"()
    $P5009."push"($P5015)
.annotate 'line', 1971
    nqp_get_sc_object $P5016, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 93
    $P5017 = $P5016."new"()
    $P5018 = _lex_param_1."!make"($P5017)
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<try>" :subid("cuid_270_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1974
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_309 
    .local pmc fb_tmp_310 
    .local pmc fb_tmp_311 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_4756
    .lex "RETURN", $P102
.annotate 'line', 1975
    unless_null _lex_param_1, fallback4760
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5002
  fallback4760:
    set fb_tmp_309, _lex_param_1
    repr_defined $I5001, fb_tmp_309
    unless $I5001 goto if2087_else4758 
    set $P5003, fb_tmp_309["blorst"]
    set $P5005, $P5003
    goto if2087_end4759
  if2087_else4758:
    null $P5004
    set $P5005, $P5004
  if2087_end4759:
    unless_null $P5005, vivi_20884761
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5005, $P5006
  vivi_20884761:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
    nqp_get_sc_object $P5008, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 103
    type_check $I5002, $P101, $P5008
    unless $I5002 goto if2089_end4763 
.annotate 'line', 1976
    set fb_tmp_310, $P101
    repr_defined $I5003, fb_tmp_310
    unless $I5003 goto if2092_else4768 
    set $P5009, fb_tmp_310["handlers"]
    set $P5011, $P5009
    goto if2092_end4769
  if2092_else4768:
    null $P5010
    set $P5011, $P5010
  if2092_end4769:
    unless_null $P5011, vivi_20934770
    nqp_get_sc_object $P5012, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5011, $P5012
  vivi_20934770:
    set $P5017, $P5011
    unless $P5011 goto if2091_end4767 
    set fb_tmp_311, $P101
    repr_defined $I5005, fb_tmp_311
    unless $I5005 goto if2094_else4771 
    set $P5013, fb_tmp_311["handlers"]
    set $P5015, $P5013
    goto if2094_end4772
  if2094_else4771:
    null $P5014
    set $P5015, $P5014
  if2094_end4772:
    unless_null $P5015, vivi_20954773
    nqp_get_sc_object $P5016, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5015, $P5016
  vivi_20954773:
    exists $I5004, $P5015["CATCH"]
    box $P5018, $I5004
    set $P5017, $P5018
  if2091_end4767:
    unless $P5017 goto if2090_else4764 
.annotate 'line', 1977
.annotate 'line', 1978
    _lex_param_1."!make"($P101)
    $P5019 = "RETURN"(1)
    set $P5021, $P5019
    goto if2090_end4765
  if2090_else4764:
.annotate 'line', 1981
.annotate 'line', 1982
    $P5020 = $P101."blocktype"("immediate")
    set $P5021, $P5020
  if2090_end4765:
  if2089_end4763:
.annotate 'line', 1985
    nqp_get_sc_object $P5022, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 1989
    nqp_get_sc_object $P5023, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 93
.annotate 'line', 1990
    nqp_get_sc_object $P5024, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 89
.annotate 'line', 1991
    nqp_get_sc_object $P5025, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 1993
    nqp_get_sc_object $P5026, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    $P5027 = $P5026."new"("exception" :named("op"))
.annotate 'line', 1994
    nqp_get_sc_object $P5028, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 52
    $P5029 = $P5028."new"("handled" :named("value"))
.annotate 'line', 1995
    nqp_get_sc_object $P5030, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 42
    $P5031 = $P5030."new"(1 :named("value"))
    $P5032 = $P5025."new"($P5027, $P5029, $P5031, "bindkey_i" :named("op"))
.annotate 'line', 1997
    nqp_get_sc_object $P5033, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    $P5034 = $P5033."new"("null" :named("op"))
    $P5035 = $P5024."new"($P5032 :named("parrot"), $P5034 :named("jvm"))
.annotate 'line', 1999
    $P5036 = "&default_for"("$")
    $P5037 = $P5023."new"($P5035, $P5036)
    $P5038 = $P5022."new"($P101, "CATCH", $P5037, "handle" :named("op"))
    $P5039 = _lex_param_1."!make"($P5038)
    goto lexotic_4757
  lexotic_4756:
    .get_results ($P5039)
  lexotic_4757:
    .return ($P5039) 
.end
.HLL "nqp"
.namespace []
.sub "blorst" :subid("cuid_271_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2003
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_312 
    .local pmc fb_tmp_313 
    .local pmc fb_tmp_314 
.annotate 'line', 2004
    unless_null _lex_param_1, fallback4778
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback4778:
    set fb_tmp_312, _lex_param_1
    repr_defined $I5001, fb_tmp_312
    unless $I5001 goto if2097_else4776 
    set $P5002, fb_tmp_312["block"]
    set $P5004, $P5002
    goto if2097_end4777
  if2097_else4776:
    null $P5003
    set $P5004, $P5003
  if2097_end4777:
    unless_null $P5004, vivi_20984779
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_20984779:
    unless $P5004 goto if2096_else4774 
.annotate 'line', 2005
    unless_null _lex_param_1, fallback4782
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5006
  fallback4782:
    set fb_tmp_313, _lex_param_1
    repr_defined $I5002, fb_tmp_313
    unless $I5002 goto if2099_else4780 
    set $P5007, fb_tmp_313["block"]
    set $P5009, $P5007
    goto if2099_end4781
  if2099_else4780:
    null $P5008
    set $P5009, $P5008
  if2099_end4781:
    unless_null $P5009, vivi_21004783
    nqp_get_sc_object $P5010, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5009, $P5010
  vivi_21004783:
    $P5011 = $P5009."ast"()
    $P5012 = "&block_immediate"($P5011)
    set $P5019, $P5012
    goto if2096_end4775
  if2096_else4774:
.annotate 'line', 2006
    unless_null _lex_param_1, fallback4786
    nqp_get_sc_object $P5013, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5013
  fallback4786:
    set fb_tmp_314, _lex_param_1
    repr_defined $I5003, fb_tmp_314
    unless $I5003 goto if2101_else4784 
    set $P5014, fb_tmp_314["statement"]
    set $P5016, $P5014
    goto if2101_end4785
  if2101_else4784:
    null $P5015
    set $P5016, $P5015
  if2101_end4785:
    unless_null $P5016, vivi_21024787
    nqp_get_sc_object $P5017, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5016, $P5017
  vivi_21024787:
    $P5018 = $P5016."ast"()
    set $P5019, $P5018
  if2096_end4775:
    $P5020 = _lex_param_1."!make"($P5019)
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond:sym<if>" :subid("cuid_272_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2011
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_315 
    unless_null _lex_param_1, fallback4790
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback4790:
    set fb_tmp_315, _lex_param_1
    repr_defined $I5001, fb_tmp_315
    unless $I5001 goto if2103_else4788 
    set $P5002, fb_tmp_315["cond"]
    set $P5004, $P5002
    goto if2103_end4789
  if2103_else4788:
    null $P5003
    set $P5004, $P5003
  if2103_end4789:
    unless_null $P5004, vivi_21044791
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_21044791:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond:sym<unless>" :subid("cuid_273_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2012
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_316 
    unless_null _lex_param_1, fallback4794
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback4794:
    set fb_tmp_316, _lex_param_1
    repr_defined $I5001, fb_tmp_316
    unless $I5001 goto if2105_else4792 
    set $P5002, fb_tmp_316["cond"]
    set $P5004, $P5002
    goto if2105_end4793
  if2105_else4792:
    null $P5003
    set $P5004, $P5003
  if2105_end4793:
    unless_null $P5004, vivi_21064795
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_21064795:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<while>" :subid("cuid_274_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2014
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_317 
    unless_null _lex_param_1, fallback4798
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback4798:
    set fb_tmp_317, _lex_param_1
    repr_defined $I5001, fb_tmp_317
    unless $I5001 goto if2107_else4796 
    set $P5002, fb_tmp_317["cond"]
    set $P5004, $P5002
    goto if2107_end4797
  if2107_else4796:
    null $P5003
    set $P5004, $P5003
  if2107_end4797:
    unless_null $P5004, vivi_21084799
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_21084799:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<until>" :subid("cuid_275_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2015
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_318 
    unless_null _lex_param_1, fallback4802
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback4802:
    set fb_tmp_318, _lex_param_1
    repr_defined $I5001, fb_tmp_318
    unless $I5001 goto if2109_else4800 
    set $P5002, fb_tmp_318["cond"]
    set $P5004, $P5002
    goto if2109_end4801
  if2109_else4800:
    null $P5003
    set $P5004, $P5003
  if2109_end4801:
    unless_null $P5004, vivi_21104803
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_21104803:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<fatarrow>" :subid("cuid_276_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2019
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_319 
    unless_null _lex_param_1, fallback4806
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback4806:
    set fb_tmp_319, _lex_param_1
    repr_defined $I5001, fb_tmp_319
    unless $I5001 goto if2111_else4804 
    set $P5002, fb_tmp_319["fatarrow"]
    set $P5004, $P5002
    goto if2111_end4805
  if2111_else4804:
    null $P5003
    set $P5004, $P5003
  if2111_end4805:
    unless_null $P5004, vivi_21124807
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_21124807:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<colonpair>" :subid("cuid_277_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2020
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_320 
    unless_null _lex_param_1, fallback4810
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback4810:
    set fb_tmp_320, _lex_param_1
    repr_defined $I5001, fb_tmp_320
    unless $I5001 goto if2113_else4808 
    set $P5002, fb_tmp_320["colonpair"]
    set $P5004, $P5002
    goto if2113_end4809
  if2113_else4808:
    null $P5003
    set $P5004, $P5003
  if2113_end4809:
    unless_null $P5004, vivi_21144811
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_21144811:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<variable>" :subid("cuid_278_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2021
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_321 
    unless_null _lex_param_1, fallback4814
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback4814:
    set fb_tmp_321, _lex_param_1
    repr_defined $I5001, fb_tmp_321
    unless $I5001 goto if2115_else4812 
    set $P5002, fb_tmp_321["variable"]
    set $P5004, $P5002
    goto if2115_end4813
  if2115_else4812:
    null $P5003
    set $P5004, $P5003
  if2115_end4813:
    unless_null $P5004, vivi_21164815
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_21164815:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<package_declarator>" :subid("cuid_279_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2022
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_322 
    unless_null _lex_param_1, fallback4818
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback4818:
    set fb_tmp_322, _lex_param_1
    repr_defined $I5001, fb_tmp_322
    unless $I5001 goto if2117_else4816 
    set $P5002, fb_tmp_322["package_declarator"]
    set $P5004, $P5002
    goto if2117_end4817
  if2117_else4816:
    null $P5003
    set $P5004, $P5003
  if2117_end4817:
    unless_null $P5004, vivi_21184819
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_21184819:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<scope_declarator>" :subid("cuid_280_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2023
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_323 
    unless_null _lex_param_1, fallback4822
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback4822:
    set fb_tmp_323, _lex_param_1
    repr_defined $I5001, fb_tmp_323
    unless $I5001 goto if2119_else4820 
    set $P5002, fb_tmp_323["scope_declarator"]
    set $P5004, $P5002
    goto if2119_end4821
  if2119_else4820:
    null $P5003
    set $P5004, $P5003
  if2119_end4821:
    unless_null $P5004, vivi_21204823
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_21204823:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<routine_declarator>" :subid("cuid_281_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2024
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_324 
    unless_null _lex_param_1, fallback4826
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback4826:
    set fb_tmp_324, _lex_param_1
    repr_defined $I5001, fb_tmp_324
    unless $I5001 goto if2121_else4824 
    set $P5002, fb_tmp_324["routine_declarator"]
    set $P5004, $P5002
    goto if2121_end4825
  if2121_else4824:
    null $P5003
    set $P5004, $P5003
  if2121_end4825:
    unless_null $P5004, vivi_21224827
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_21224827:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<regex_declarator>" :subid("cuid_282_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2025
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_325 
    unless_null _lex_param_1, fallback4830
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback4830:
    set fb_tmp_325, _lex_param_1
    repr_defined $I5001, fb_tmp_325
    unless $I5001 goto if2123_else4828 
    set $P5002, fb_tmp_325["regex_declarator"]
    set $P5004, $P5002
    goto if2123_end4829
  if2123_else4828:
    null $P5003
    set $P5004, $P5003
  if2123_end4829:
    unless_null $P5004, vivi_21244831
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_21244831:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<statement_prefix>" :subid("cuid_283_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2026
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_326 
    unless_null _lex_param_1, fallback4834
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback4834:
    set fb_tmp_326, _lex_param_1
    repr_defined $I5001, fb_tmp_326
    unless $I5001 goto if2125_else4832 
    set $P5002, fb_tmp_326["statement_prefix"]
    set $P5004, $P5002
    goto if2125_end4833
  if2125_else4832:
    null $P5003
    set $P5004, $P5003
  if2125_end4833:
    unless_null $P5004, vivi_21264835
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_21264835:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<lambda>" :subid("cuid_284_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2027
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_327 
.annotate 'line', 2028
    nqp_get_sc_object $P5001, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    unless_null _lex_param_1, fallback4838
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5002
  fallback4838:
    set fb_tmp_327, _lex_param_1
    repr_defined $I5001, fb_tmp_327
    unless $I5001 goto if2127_else4836 
    set $P5003, fb_tmp_327["pblock"]
    set $P5005, $P5003
    goto if2127_end4837
  if2127_else4836:
    null $P5004
    set $P5005, $P5004
  if2127_end4837:
    unless_null $P5005, vivi_21284839
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5005, $P5006
  vivi_21284839:
    $P5007 = $P5005."ast"()
    $P5008 = $P5001."new"($P5007, "takeclosure" :named("op"))
    $P5009 = _lex_param_1."!make"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "fatarrow" :subid("cuid_285_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2031
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_328 
    .local pmc fb_tmp_329 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
.annotate 'line', 2032
    unless_null _lex_param_1, fallback4842
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5002
  fallback4842:
    set fb_tmp_328, _lex_param_1
    repr_defined $I5001, fb_tmp_328
    unless $I5001 goto if2129_else4840 
    set $P5003, fb_tmp_328["val"]
    set $P5005, $P5003
    goto if2129_end4841
  if2129_else4840:
    null $P5004
    set $P5005, $P5004
  if2129_end4841:
    unless_null $P5005, vivi_21304843
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5005, $P5006
  vivi_21304843:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 2033
    unless_null _lex_param_1, fallback4846
    nqp_get_sc_object $P5008, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5008
  fallback4846:
    set fb_tmp_329, _lex_param_1
    repr_defined $I5002, fb_tmp_329
    unless $I5002 goto if2131_else4844 
    set $P5009, fb_tmp_329["key"]
    set $P5011, $P5009
    goto if2131_end4845
  if2131_else4844:
    null $P5010
    set $P5011, $P5010
  if2131_end4845:
    unless_null $P5011, vivi_21324847
    nqp_get_sc_object $P5012, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5011, $P5012
  vivi_21324847:
    $P5013 = $P5011."Str"()
    $P101."named"($P5013)
.annotate 'line', 2034
    $P5014 = _lex_param_1."!make"($P101)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "colonpair" :subid("cuid_286_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2037
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5031 = 'cuid_458_1367388600.55005' 
    capture_lex $P5031 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_330 
    .local pmc fb_tmp_331 
    .local pmc fb_tmp_332 
    .local pmc fb_tmp_333 
    .local pmc fb_tmp_334 
    unless_null _lex_param_1, fallback4852
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback4852:
    set fb_tmp_330, _lex_param_1
    repr_defined $I5001, fb_tmp_330
    unless $I5001 goto if2134_else4850 
    set $P5002, fb_tmp_330["variable"]
    set $P5004, $P5002
    goto if2134_end4851
  if2134_else4850:
    null $P5003
    set $P5004, $P5003
  if2134_end4851:
    unless_null $P5004, vivi_21354853
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_21354853:
    unless $P5004 goto if2133_else4848 
.annotate 'line', 2038
.annotate 'line', 2039
    unless_null _lex_param_1, fallback4856
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5006
  fallback4856:
    set fb_tmp_331, _lex_param_1
    repr_defined $I5002, fb_tmp_331
    unless $I5002 goto if2136_else4854 
    set $P5007, fb_tmp_331["variable"]
    set $P5009, $P5007
    goto if2136_end4855
  if2136_else4854:
    null $P5008
    set $P5009, $P5008
  if2136_end4855:
    unless_null $P5009, vivi_21374857
    nqp_get_sc_object $P5010, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5009, $P5010
  vivi_21374857:
    $P5011 = $P5009."ast"()
    unless_null _lex_param_1, fallback4862
    nqp_get_sc_object $P5012, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5012
  fallback4862:
    set fb_tmp_333, _lex_param_1
    repr_defined $I5004, fb_tmp_333
    unless $I5004 goto if2139_else4860 
    set $P5013, fb_tmp_333["variable"]
    set $P5015, $P5013
    goto if2139_end4861
  if2139_else4860:
    null $P5014
    set $P5015, $P5014
  if2139_end4861:
    unless_null $P5015, vivi_21404863
    nqp_get_sc_object $P5016, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5015, $P5016
  vivi_21404863:
    set fb_tmp_332, $P5015
    repr_defined $I5003, fb_tmp_332
    unless $I5003 goto if2138_else4858 
    set $P5017, fb_tmp_332["desigilname"]
    set $P5019, $P5017
    goto if2138_end4859
  if2138_else4858:
    null $P5018
    set $P5019, $P5018
  if2138_end4859:
    unless_null $P5019, vivi_21414864
    nqp_get_sc_object $P5020, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5019, $P5020
  vivi_21414864:
    set $S5001, $P5019
    $P5011."named"($S5001)
.annotate 'line', 2040
    unless_null _lex_param_1, fallback4867
    nqp_get_sc_object $P5021, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5021
  fallback4867:
    set fb_tmp_334, _lex_param_1
    repr_defined $I5005, fb_tmp_334
    unless $I5005 goto if2142_else4865 
    set $P5022, fb_tmp_334["variable"]
    set $P5024, $P5022
    goto if2142_end4866
  if2142_else4865:
    null $P5023
    set $P5024, $P5023
  if2142_end4866:
    unless_null $P5024, vivi_21434868
    nqp_get_sc_object $P5025, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5024, $P5025
  vivi_21434868:
    $P5026 = $P5024."ast"()
    $P5027 = _lex_param_1."!make"($P5026)
    set $P5030, $P5027
    goto if2133_end4849
  if2133_else4848:
    .const 'Sub' $P5028 = 'cuid_458_1367388600.55005' 
    capture_lex $P5028
    $P5029 = $P5028()
    set $P5030, $P5029
  if2133_end4849:
    .return ($P5030) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_458_1367388600.55005") :anon :lex :outer("cuid_286_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2041
    .lex "$past", $P101 
    .local pmc fb_tmp_335 
    .local pmc fb_tmp_336 
    .local pmc fb_tmp_337 
    .local pmc fb_tmp_338 
    .local pmc fb_tmp_339 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    find_lex $P5002, "$/"
    unless_null $P5002, fallback4873
    nqp_get_sc_object $P5003, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5002, $P5003
  fallback4873:
    set fb_tmp_335, $P5002
    repr_defined $I5001, fb_tmp_335
    unless $I5001 goto if2145_else4871 
    set $P5004, fb_tmp_335["circumfix"]
    set $P5006, $P5004
    goto if2145_end4872
  if2145_else4871:
    null $P5005
    set $P5006, $P5005
  if2145_end4872:
    unless_null $P5006, vivi_21464874
    nqp_get_sc_object $P5007, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5006, $P5007
  vivi_21464874:
    unless $P5006 goto if2144_else4869 
.annotate 'line', 2043
    find_lex $P5008, "$/"
    unless_null $P5008, fallback4879
    nqp_get_sc_object $P5009, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5008, $P5009
  fallback4879:
    set fb_tmp_337, $P5008
    repr_defined $I5003, fb_tmp_337
    unless $I5003 goto if2148_else4877 
    set $P5010, fb_tmp_337["circumfix"]
    set $P5012, $P5010
    goto if2148_end4878
  if2148_else4877:
    null $P5011
    set $P5012, $P5011
  if2148_end4878:
    unless_null $P5012, vivi_21494880
    nqp_get_sc_object $P5013, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5012, $P5013
  vivi_21494880:
    set fb_tmp_336, $P5012
    repr_defined $I5002, fb_tmp_336
    unless $I5002 goto if2147_else4875 
    set $P5014, fb_tmp_336[0]
    set $P5016, $P5014
    goto if2147_end4876
  if2147_else4875:
    null $P5015
    set $P5016, $P5015
  if2147_end4876:
    unless_null $P5016, vivi_21504881
    nqp_get_sc_object $P5017, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5016, $P5017
  vivi_21504881:
    $P5018 = $P5016."ast"()
    set $P5027, $P5018
    goto if2144_end4870
  if2144_else4869:
.annotate 'line', 2044
    nqp_get_sc_object $P5019, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 42
    find_lex $P5020, "$/"
    unless_null $P5020, fallback4884
    nqp_get_sc_object $P5021, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5020, $P5021
  fallback4884:
    set fb_tmp_338, $P5020
    repr_defined $I5005, fb_tmp_338
    unless $I5005 goto if2151_else4882 
    set $P5022, fb_tmp_338["not"]
    set $P5024, $P5022
    goto if2151_end4883
  if2151_else4882:
    null $P5023
    set $P5024, $P5023
  if2151_end4883:
    unless_null $P5024, vivi_21524885
    nqp_get_sc_object $P5025, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5024, $P5025
  vivi_21524885:
    isfalse $I5004, $P5024
    $P5026 = $P5019."new"($I5004 :named("value"))
    set $P5027, $P5026
  if2144_end4870:
    set $P101, $P5027
.annotate 'line', 2045
    find_lex $P5028, "$/"
    unless_null $P5028, fallback4888
    nqp_get_sc_object $P5029, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5028, $P5029
  fallback4888:
    set fb_tmp_339, $P5028
    repr_defined $I5006, fb_tmp_339
    unless $I5006 goto if2153_else4886 
    set $P5030, fb_tmp_339["identifier"]
    set $P5032, $P5030
    goto if2153_end4887
  if2153_else4886:
    null $P5031
    set $P5032, $P5031
  if2153_end4887:
    unless_null $P5032, vivi_21544889
    nqp_get_sc_object $P5033, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5032, $P5033
  vivi_21544889:
    set $S5001, $P5032
    $P101."named"($S5001)
.annotate 'line', 2046
    find_dynamic_lex $P5034, "$/"
    $P5035 = $P5034."!make"($P101)
    .return ($P5035) 
.end
.HLL "nqp"
.namespace []
.sub "variable" :subid("cuid_287_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2050
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5020 = 'cuid_460_1367388600.55005' 
    capture_lex $P5020 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_340 
    .local pmc fb_tmp_341 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    unless_null _lex_param_1, fallback4894
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5002
  fallback4894:
    set fb_tmp_340, _lex_param_1
    repr_defined $I5001, fb_tmp_340
    unless $I5001 goto if2156_else4892 
    set $P5003, fb_tmp_340["postcircumfix"]
    set $P5005, $P5003
    goto if2156_end4893
  if2156_else4892:
    null $P5004
    set $P5005, $P5004
  if2156_end4893:
    unless_null $P5005, vivi_21574895
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5005, $P5006
  vivi_21574895:
    unless $P5005 goto if2155_else4890 
.annotate 'line', 2052
.annotate 'line', 2053
    unless_null _lex_param_1, fallback4898
    nqp_get_sc_object $P5007, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5007
  fallback4898:
    set fb_tmp_341, _lex_param_1
    repr_defined $I5002, fb_tmp_341
    unless $I5002 goto if2158_else4896 
    set $P5008, fb_tmp_341["postcircumfix"]
    set $P5010, $P5008
    goto if2158_end4897
  if2158_else4896:
    null $P5009
    set $P5010, $P5009
  if2158_end4897:
    unless_null $P5010, vivi_21594899
    nqp_get_sc_object $P5011, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5010, $P5011
  vivi_21594899:
    $P5012 = $P5010."ast"()
    set $P101, $P5012
.annotate 'line', 2054
    nqp_get_sc_object $P5013, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 80
.annotate 'line', 2055
    $P5014 = "&default_for"("$")
    $P5015 = $P5013."new"("$/" :named("name"), "lexical" :named("scope"), $P5014 :named("fallback"))
    $P5016 = $P101."unshift"($P5015)
    goto if2155_end4891
  if2155_else4890:
    .const 'Sub' $P5017 = 'cuid_460_1367388600.55005' 
    capture_lex $P5017
    $P5018 = $P5017()
  if2155_end4891:
.annotate 'line', 2136
    $P5019 = _lex_param_1."!make"($P101)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_460_1367388600.55005") :anon :lex :outer("cuid_287_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2058
    .const 'Sub' $P5089 = 'cuid_459_1367388600.55005' 
    capture_lex $P5089 
    .const 'Sub' $P5089 = 'cuid_463_1367388600.55005' 
    capture_lex $P5089 
    .const 'Sub' $P5089 = 'cuid_464_1367388600.55005' 
    capture_lex $P5089 
    .const 'Sub' $P5089 = 'cuid_465_1367388600.55005' 
    capture_lex $P5089 
    .lex "@name", $P101 
    .local pmc fb_tmp_342 
    .local pmc pkg_lookup_tmp_4 
    .local pmc fb_tmp_343 
    .local pmc fb_tmp_344 
    .local pmc fb_tmp_345 
    .local pmc fb_tmp_348 
    .local pmc fb_tmp_349 
    .local pmc fb_tmp_356 
    .local pmc fb_tmp_360 
    .local pmc fb_tmp_361 
    .local pmc fb_tmp_362 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
.annotate 'line', 2059
    nqp_get_sc_object $P5003, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    set pkg_lookup_tmp_4, $P5003
    get_who $P5004, pkg_lookup_tmp_4
    exists $I5002, $P5004["NQP"]
    unless $I5002 goto if2161_else4902 
    get_who $P5006, pkg_lookup_tmp_4
    set $P5005, $P5006["NQP"]
    set $P5008, $P5005
    goto if2161_end4903
  if2161_else4902:
    nqp_get_sc_object $P5007, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5008, $P5007
  if2161_end4903:
    get_who $P5002, $P5008
    set fb_tmp_342, $P5002
    repr_defined $I5001, fb_tmp_342
    unless $I5001 goto if2160_else4900 
    set $P5009, fb_tmp_342["Compiler"]
    set $P5011, $P5009
    goto if2160_end4901
  if2160_else4900:
    null $P5010
    set $P5011, $P5010
  if2160_end4901:
    unless_null $P5011, vivi_21624904
    nqp_get_sc_object $P5012, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5011, $P5012
  vivi_21624904:
    find_lex $P5013, "$/"
    set $S5001, $P5013
    $P5014 = $P5011."parse_name"($S5001)
    set $P101, $P5014
    set $N5001, $P101
    set $N5002, 1
    isgt $I5003, $N5001, $N5002
    unless $I5003 goto if2163_else4905 
.annotate 'line', 2060
    find_lex $P5015, "$/"
    unless_null $P5015, fallback4911
    nqp_get_sc_object $P5016, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5015, $P5016
  fallback4911:
    set fb_tmp_343, $P5015
    repr_defined $I5004, fb_tmp_343
    unless $I5004 goto if2165_else4909 
    set $P5017, fb_tmp_343["twigil"]
    set $P5019, $P5017
    goto if2165_end4910
  if2165_else4909:
    null $P5018
    set $P5019, $P5018
  if2165_end4910:
    unless_null $P5019, vivi_21664912
    nqp_get_sc_object $P5020, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5019, $P5020
  vivi_21664912:
    unless $P5019 goto if2164_end4908 
.annotate 'line', 2061
.annotate 'line', 2062
    find_lex $P5021, "$/"
    $P5022 = $P5021."CURSOR"()
    $P5023 = $P5022."panic"("Twigil not allowed on multi-part name")
  if2164_end4908:
.annotate 'line', 2064
    find_lex $P5024, "$/"
    $P5025 = "&lexical_package_lookup"($P101, $P5024)
    store_lex "$past", $P5025
    set $P5088, $P5025
    goto if2163_end4906
  if2163_else4905:
    find_lex $P5026, "$/"
    unless_null $P5026, fallback4919
    nqp_get_sc_object $P5027, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5026, $P5027
  fallback4919:
    set fb_tmp_345, $P5026
    repr_defined $I5007, fb_tmp_345
    unless $I5007 goto if2169_else4917 
    set $P5028, fb_tmp_345["twigil"]
    set $P5030, $P5028
    goto if2169_end4918
  if2169_else4917:
    null $P5029
    set $P5030, $P5029
  if2169_end4918:
    unless_null $P5030, vivi_21704920
    nqp_get_sc_object $P5031, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5030, $P5031
  vivi_21704920:
    set fb_tmp_344, $P5030
    repr_defined $I5006, fb_tmp_344
    unless $I5006 goto if2168_else4915 
    set $P5032, fb_tmp_344[0]
    set $P5034, $P5032
    goto if2168_end4916
  if2168_else4915:
    null $P5033
    set $P5034, $P5033
  if2168_end4916:
    unless_null $P5034, vivi_21714921
    nqp_get_sc_object $P5035, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5034, $P5035
  vivi_21714921:
    set $S5002, $P5034
    iseq $I5005, $S5002, "*"
    unless $I5005 goto if2167_else4913 
    .const 'Sub' $P5036 = 'cuid_459_1367388600.55005' 
    capture_lex $P5036
    $P5037 = $P5036()
    set $P5087, $P5037
    goto if2167_end4914
  if2167_else4913:
    find_lex $P5038, "$/"
    unless_null $P5038, fallback4936
    nqp_get_sc_object $P5039, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5038, $P5039
  fallback4936:
    set fb_tmp_349, $P5038
    repr_defined $I5010, fb_tmp_349
    unless $I5010 goto if2178_else4934 
    set $P5040, fb_tmp_349["twigil"]
    set $P5042, $P5040
    goto if2178_end4935
  if2178_else4934:
    null $P5041
    set $P5042, $P5041
  if2178_end4935:
    unless_null $P5042, vivi_21794937
    nqp_get_sc_object $P5043, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5042, $P5043
  vivi_21794937:
    set fb_tmp_348, $P5042
    repr_defined $I5009, fb_tmp_348
    unless $I5009 goto if2177_else4932 
    set $P5044, fb_tmp_348[0]
    set $P5046, $P5044
    goto if2177_end4933
  if2177_else4932:
    null $P5045
    set $P5046, $P5045
  if2177_end4933:
    unless_null $P5046, vivi_21804938
    nqp_get_sc_object $P5047, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5046, $P5047
  vivi_21804938:
    set $S5003, $P5046
    iseq $I5008, $S5003, "!"
    unless $I5008 goto if2176_else4930 
    .const 'Sub' $P5048 = 'cuid_463_1367388600.55005' 
    capture_lex $P5048
    $P5049 = $P5048()
    set $P5086, $P5049
    goto if2176_end4931
  if2176_else4930:
    find_lex $P5050, "$/"
    unless_null $P5050, fallback4987
    nqp_get_sc_object $P5051, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5050, $P5051
  fallback4987:
    set fb_tmp_356, $P5050
    repr_defined $I5011, fb_tmp_356
    unless $I5011 goto if2205_else4985 
    set $P5052, fb_tmp_356["semilist"]
    set $P5054, $P5052
    goto if2205_end4986
  if2205_else4985:
    null $P5053
    set $P5054, $P5053
  if2205_end4986:
    unless_null $P5054, vivi_22064988
    nqp_get_sc_object $P5055, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5054, $P5055
  vivi_22064988:
    unless $P5054 goto if2204_else4983 
    .const 'Sub' $P5056 = 'cuid_464_1367388600.55005' 
    capture_lex $P5056
    $P5057 = $P5056()
    set $P5085, $P5057
    goto if2204_end4984
  if2204_else4983:
.annotate 'line', 2121
    find_dynamic_lex $P5058, "$*W"
    unless_null $P5058, fallback5007
    nqp_get_sc_object $P5060, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5059, $P5060
    set fb_tmp_360, $P5059
    repr_defined $I5012, fb_tmp_360
    unless $I5012 goto if2216_else5008 
    set $P5061, fb_tmp_360["$W"]
    set $P5063, $P5061
    goto if2216_end5009
  if2216_else5008:
    null $P5062
    set $P5063, $P5062
  if2216_end5009:
    unless_null $P5063, vivi_22175010
    nqp_get_sc_object $P5064, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5063, $P5064
  vivi_22175010:
    unless_null $P5063, vivi_22185011
    die "Contextual $*W not found"
    box $P5065, "Contextual $*W not found"
    set $P5063, $P5065
  vivi_22185011:
    set $P5058, $P5063
  fallback5007:
    set fb_tmp_361, $P101
    repr_defined $I5013, fb_tmp_361
    unless $I5013 goto if2219_else5012 
    set $P5066, fb_tmp_361[0]
    set $P5068, $P5066
    goto if2219_end5013
  if2219_else5012:
    null $P5067
    set $P5068, $P5067
  if2219_end5013:
    unless_null $P5068, vivi_22205014
    nqp_get_sc_object $P5069, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5068, $P5069
  vivi_22205014:
    set $S5004, $P5068
    $P5070 = $P5058."is_package"($S5004)
    unless $P5070 goto if2215_else5005 
.annotate 'line', 2122
    find_lex $P5071, "$/"
    $P5072 = "&lexical_package_lookup"($P101, $P5071)
    store_lex "$past", $P5072
.annotate 'line', 2123
    find_lex $P5073, "$past"
    find_lex $P5074, "$/"
    unless_null $P5074, fallback5017
    nqp_get_sc_object $P5075, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5074, $P5075
  fallback5017:
    set fb_tmp_362, $P5074
    repr_defined $I5014, fb_tmp_362
    unless $I5014 goto if2221_else5015 
    set $P5076, fb_tmp_362["sigil"]
    set $P5078, $P5076
    goto if2221_end5016
  if2221_else5015:
    null $P5077
    set $P5078, $P5077
  if2221_end5016:
    unless_null $P5078, vivi_22225018
    nqp_get_sc_object $P5079, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5078, $P5079
  vivi_22225018:
    $P5080 = "&default_for"($P5078)
    $P5081 = $P5073."fallback"($P5080)
    set $P5084, $P5081
    goto if2215_end5006
  if2215_else5005:
    .const 'Sub' $P5082 = 'cuid_465_1367388600.55005' 
    capture_lex $P5082
    $P5083 = $P5082()
    set $P5084, $P5083
  if2215_end5006:
    set $P5085, $P5084
  if2204_end4984:
    set $P5086, $P5085
  if2176_end4931:
    set $P5087, $P5086
  if2167_end4914:
    set $P5088, $P5087
  if2163_end4906:
    .return ($P5088) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_459_1367388600.55005") :anon :lex :outer("cuid_460_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2066
    .lex "$global_fallback", $P101 
    .local pmc fb_tmp_346 
    .local pmc fb_tmp_347 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
.annotate 'line', 2067
    nqp_get_sc_object $P5002, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 2069
    new $P5003, 'ResizablePMCArray'
    box $P5004, "GLOBAL"
    push $P5003, $P5004
    find_lex $P5005, "$/"
    unless_null $P5005, fallback4924
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5005, $P5006
  fallback4924:
    set fb_tmp_346, $P5005
    repr_defined $I5001, fb_tmp_346
    unless $I5001 goto if2172_else4922 
    set $P5007, fb_tmp_346["sigil"]
    set $P5009, $P5007
    goto if2172_end4923
  if2172_else4922:
    null $P5008
    set $P5009, $P5008
  if2172_end4923:
    unless_null $P5009, vivi_21734925
    nqp_get_sc_object $P5010, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5009, $P5010
  vivi_21734925:
    set $S5002, $P5009
    find_lex $P5011, "$/"
    unless_null $P5011, fallback4928
    nqp_get_sc_object $P5012, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5011, $P5012
  fallback4928:
    set fb_tmp_347, $P5011
    repr_defined $I5002, fb_tmp_347
    unless $I5002 goto if2174_else4926 
    set $P5013, fb_tmp_347["desigilname"]
    set $P5015, $P5013
    goto if2174_end4927
  if2174_else4926:
    null $P5014
    set $P5015, $P5014
  if2174_end4927:
    unless_null $P5015, vivi_21754929
    nqp_get_sc_object $P5016, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5015, $P5016
  vivi_21754929:
    set $S5003, $P5015
    concat $S5001, $S5002, $S5003
    box $P5017, $S5001
    push $P5003, $P5017
    find_lex $P5018, "$/"
    $P5019 = "&lexical_package_lookup"($P5003, $P5018)
.annotate 'line', 2070
    nqp_get_sc_object $P5020, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 2072
    nqp_get_sc_object $P5021, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 52
    find_lex $P5022, "$/"
    set $S5006, $P5022
    concat $S5005, "Contextual ", $S5006
    concat $S5004, $S5005, " not found"
    $P5023 = $P5021."new"($S5004 :named("value"))
    $P5024 = $P5020."new"($P5023, "die_s" :named("op"))
    $P5025 = $P5002."new"($P5019, $P5024, "ifnull" :named("op"))
    set $P101, $P5025
.annotate 'line', 2074
    nqp_get_sc_object $P5026, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 80
.annotate 'line', 2075
    find_lex $P5027, "@name"
    $P5028 = $P5027."pop"()
    set $S5007, $P5028
    $P5029 = $P5026."new"($S5007 :named("name"), "contextual" :named("scope"), $P101 :named("fallback"))
    store_lex "$past", $P5029
    .return ($P5029) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_463_1367388600.55005") :anon :lex :outer("cuid_460_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2079
    .const 'Sub' $P5052 = 'cuid_462_1367388600.55005' 
    capture_lex $P5052 
    .lex "$name", $P101 
    .lex "$ch", $P102 
    .local pmc fb_tmp_350 
    .local pmc fb_tmp_351 
    .local pmc fb_tmp_352 
    .local pmc fb_tmp_353 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
.annotate 'line', 2080
    find_lex $P5003, "@name"
    $P5004 = $P5003."pop"()
    set $S5001, $P5004
    box $P5005, $S5001
    set $P101, $P5005
    find_dynamic_lex $P5006, "$*PKGDECL"
    unless_null $P5006, fallback4941
    nqp_get_sc_object $P5008, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5007, $P5008
    set fb_tmp_350, $P5007
    repr_defined $I5002, fb_tmp_350
    unless $I5002 goto if2182_else4942 
    set $P5009, fb_tmp_350["$PKGDECL"]
    set $P5011, $P5009
    goto if2182_end4943
  if2182_else4942:
    null $P5010
    set $P5011, $P5010
  if2182_end4943:
    unless_null $P5011, vivi_21834944
    nqp_get_sc_object $P5012, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5011, $P5012
  vivi_21834944:
    unless_null $P5011, vivi_21844945
    die "Contextual $*PKGDECL not found"
    box $P5013, "Contextual $*PKGDECL not found"
    set $P5011, $P5013
  vivi_21844945:
    set $P5006, $P5011
  fallback4941:
    set $S5002, $P5006
    iseq $I5001, $S5002, "role"
    unless $I5001 goto if2181_else4939 
.annotate 'line', 2082
.annotate 'line', 2083
    nqp_get_sc_object $P5014, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5015 = $P5014."new"("$?CLASS" :named("name"), "lexical" :named("scope"))
    set $P102, $P5015
.annotate 'line', 2084
    find_dynamic_lex $P5016, "$*PACKAGE"
    unless_null $P5016, fallback4946
    nqp_get_sc_object $P5018, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5017, $P5018
    set fb_tmp_351, $P5017
    repr_defined $I5003, fb_tmp_351
    unless $I5003 goto if2185_else4947 
    set $P5019, fb_tmp_351["$PACKAGE"]
    set $P5021, $P5019
    goto if2185_end4948
  if2185_else4947:
    null $P5020
    set $P5021, $P5020
  if2185_end4948:
    unless_null $P5021, vivi_21864949
    nqp_get_sc_object $P5022, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5021, $P5022
  vivi_21864949:
    unless_null $P5021, vivi_21874950
    die "Contextual $*PACKAGE not found"
    box $P5023, "Contextual $*PACKAGE not found"
    set $P5021, $P5023
  vivi_21874950:
    set $P5016, $P5021
  fallback4946:
    $P5024 = $P102."set_compile_time_value"($P5016)
    goto if2181_end4940
  if2181_else4939:
.annotate 'line', 2086
.annotate 'line', 2087
    nqp_get_sc_object $P5025, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 61
    find_dynamic_lex $P5026, "$*PACKAGE"
    unless_null $P5026, fallback4951
    nqp_get_sc_object $P5028, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5027, $P5028
    set fb_tmp_352, $P5027
    repr_defined $I5004, fb_tmp_352
    unless $I5004 goto if2188_else4952 
    set $P5029, fb_tmp_352["$PACKAGE"]
    set $P5031, $P5029
    goto if2188_end4953
  if2188_else4952:
    null $P5030
    set $P5031, $P5030
  if2188_end4953:
    unless_null $P5031, vivi_21894954
    nqp_get_sc_object $P5032, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5031, $P5032
  vivi_21894954:
    unless_null $P5031, vivi_21904955
    die "Contextual $*PACKAGE not found"
    box $P5033, "Contextual $*PACKAGE not found"
    set $P5031, $P5033
  vivi_21904955:
    set $P5026, $P5031
  fallback4951:
    $P5034 = $P5025."new"($P5026 :named("value"))
    set $P102, $P5034
  if2181_end4940:
.annotate 'line', 2089
    nqp_get_sc_object $P5035, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
.annotate 'line', 2091
    nqp_get_sc_object $P5036, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 2092
    nqp_get_sc_object $P5037, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5038 = $P5037."new"("self" :named("name"), "lexical" :named("scope"))
    $P5039 = $P5036."new"($P5038, "decont" :named("op"))
    $P5040 = $P5035."new"($P5039, $P102, $P101 :named("name"), "attribute" :named("scope"))
    store_lex "$past", $P5040
    find_dynamic_lex $P5041, "$*IN_DECL"
    unless_null $P5041, fallback4958
    nqp_get_sc_object $P5043, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5042, $P5043
    set fb_tmp_353, $P5042
    repr_defined $I5005, fb_tmp_353
    unless $I5005 goto if2192_else4959 
    set $P5044, fb_tmp_353["$IN_DECL"]
    set $P5046, $P5044
    goto if2192_end4960
  if2192_else4959:
    null $P5045
    set $P5046, $P5045
  if2192_end4960:
    unless_null $P5046, vivi_21934961
    nqp_get_sc_object $P5047, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5046, $P5047
  vivi_21934961:
    unless_null $P5046, vivi_21944962
    die "Contextual $*IN_DECL not found"
    box $P5048, "Contextual $*IN_DECL not found"
    set $P5046, $P5048
  vivi_21944962:
    set $P5041, $P5046
  fallback4958:
    set $P5051, $P5041
    if $P5041 goto unless2191_end4957 
    .const 'Sub' $P5049 = 'cuid_462_1367388600.55005' 
    capture_lex $P5049
    $P5050 = $P5049()
    set $P5051, $P5050
  unless2191_end4957:
    .return ($P5051) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_462_1367388600.55005") :anon :lex :outer("cuid_463_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2097
    .const 'Sub' $P5036 = 'cuid_461_1367388600.55005' 
    capture_lex $P5036 
    .lex "$attr", $P101 
    .local pmc fb_tmp_354 
    .local pmc fb_tmp_355 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
.annotate 'line', 2099
    find_dynamic_lex $P5006, "$*PACKAGE"
    unless_null $P5006, fallback4963
    nqp_get_sc_object $P5008, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5007, $P5008
    set fb_tmp_354, $P5007
    repr_defined $I5001, fb_tmp_354
    unless $I5001 goto if2195_else4964 
    set $P5009, fb_tmp_354["$PACKAGE"]
    set $P5011, $P5009
    goto if2195_end4965
  if2195_else4964:
    null $P5010
    set $P5011, $P5010
  if2195_end4965:
    unless_null $P5011, vivi_21964966
    nqp_get_sc_object $P5012, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5011, $P5012
  vivi_21964966:
    unless_null $P5011, vivi_21974967
    die "Contextual $*PACKAGE not found"
    box $P5013, "Contextual $*PACKAGE not found"
    set $P5011, $P5013
  vivi_21974967:
    set $P5006, $P5011
  fallback4963:
    get_how $P5005, $P5006
    find_dynamic_lex $P5014, "$*PACKAGE"
    unless_null $P5014, fallback4968
    nqp_get_sc_object $P5016, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5015, $P5016
    set fb_tmp_355, $P5015
    repr_defined $I5002, fb_tmp_355
    unless $I5002 goto if2198_else4969 
    set $P5017, fb_tmp_355["$PACKAGE"]
    set $P5019, $P5017
    goto if2198_end4970
  if2198_else4969:
    null $P5018
    set $P5019, $P5018
  if2198_end4970:
    unless_null $P5019, vivi_21994971
    nqp_get_sc_object $P5020, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5019, $P5020
  vivi_21994971:
    unless_null $P5019, vivi_22004972
    die "Contextual $*PACKAGE not found"
    box $P5021, "Contextual $*PACKAGE not found"
    set $P5019, $P5021
  vivi_22004972:
    set $P5014, $P5019
  fallback4968:
    $P5022 = $P5005."attributes"($P5014, 1 :named("local"))
    set $P5002, $P5022
    iter $P5004, $P5022
    new $P5024, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5024, for_handlers4975
    push_eh $P5024
  for_next4976:
    unless $P5004, for_done4978
    shift $P5025, $P5004
  for_redo4977:
    .const 'Sub' $P5023 = 'cuid_461_1367388600.55005' 
    capture_lex $P5023
    $P5002 = $P5023($P5025)
    goto for_next4976
  for_handlers4975:
    .get_results ($P5024)
    pop_upto_eh $P5024
    getattribute $P5024, $P5024, 'type'
    eq $P5024, .CONTROL_LOOP_NEXT, for_next4976
    eq $P5024, .CONTROL_LOOP_REDO, for_redo4977
  for_done4978:
    pop_eh 
    defined $I5003, $P101
    unless $I5003 goto if2202_else4979 
.annotate 'line', 2105
    can $I5004, $P101, "type"
    box $P5030, $I5004
    set $P5029, $P5030
    unless $I5004 goto if2203_end4982 
.annotate 'line', 2106
.annotate 'line', 2107
    find_lex $P5026, "$past"
    $P5027 = $P101."type"()
    $P5028 = $P5026."returns"($P5027)
    set $P5029, $P5028
  if2203_end4982:
    set $P5035, $P5029
    goto if2202_end4980
  if2202_else4979:
.annotate 'line', 2110
.annotate 'line', 2111
    find_lex $P5031, "$/"
    $P5032 = $P5031."CURSOR"()
    find_lex $P5033, "$name"
    set $S5003, $P5033
    concat $S5002, "Attribute '", $S5003
    concat $S5001, $S5002, "' not declared"
    $P5034 = $P5032."panic"($S5001)
    set $P5035, $P5034
  if2202_end4980:
    .return ($P5035) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_461_1367388600.55005") :anon :lex :outer("cuid_462_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2099
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 2100
    $P5001 = _lex_param_0."name"()
    set $S5001, $P5001
    find_lex $P5002, "$name"
    set $S5002, $P5002
    iseq $I5001, $S5001, $S5002
    set $I5002, $I5001
    unless $I5001 goto if2201_end4974 
    store_lex "$attr", _lex_param_0
    die 0, .CONTROL_LOOP_LAST
    set $I5002, 0
  if2201_end4974:
    .return ($I5002) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_464_1367388600.55005") :anon :lex :outer("cuid_460_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2115
    .lex "$name", $P101 
    .local pmc fb_tmp_357 
    .local pmc fb_tmp_358 
    .local pmc fb_tmp_359 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    find_lex $P5002, "$/"
    unless_null $P5002, fallback4993
    nqp_get_sc_object $P5003, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5002, $P5003
  fallback4993:
    set fb_tmp_357, $P5002
    repr_defined $I5002, fb_tmp_357
    unless $I5002 goto if2208_else4991 
    set $P5004, fb_tmp_357["sigil"]
    set $P5006, $P5004
    goto if2208_end4992
  if2208_else4991:
    null $P5005
    set $P5006, $P5005
  if2208_end4992:
    unless_null $P5006, vivi_22094994
    nqp_get_sc_object $P5007, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5006, $P5007
  vivi_22094994:
    set $S5001, $P5006
    iseq $I5001, $S5001, "@"
    unless $I5001 goto if2207_else4989 
    set $S5004, "list"
    goto if2207_end4990
  if2207_else4989:
    find_lex $P5008, "$/"
    unless_null $P5008, fallback4999
    nqp_get_sc_object $P5009, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5008, $P5009
  fallback4999:
    set fb_tmp_358, $P5008
    repr_defined $I5004, fb_tmp_358
    unless $I5004 goto if2211_else4997 
    set $P5010, fb_tmp_358["sigil"]
    set $P5012, $P5010
    goto if2211_end4998
  if2211_else4997:
    null $P5011
    set $P5012, $P5011
  if2211_end4998:
    unless_null $P5012, vivi_22125000
    nqp_get_sc_object $P5013, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5012, $P5013
  vivi_22125000:
    set $S5002, $P5012
    iseq $I5003, $S5002, "%"
    unless $I5003 goto if2210_else4995 
    set $S5003, "hash"
    goto if2210_end4996
  if2210_else4995:
    set $S5003, "item"
  if2210_end4996:
    set $S5004, $S5003
  if2207_end4990:
    box $P5014, $S5004
    set $P101, $P5014
.annotate 'line', 2119
    nqp_get_sc_object $P5015, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    find_lex $P5016, "$/"
    unless_null $P5016, fallback5003
    nqp_get_sc_object $P5017, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5016, $P5017
  fallback5003:
    set fb_tmp_359, $P5016
    repr_defined $I5005, fb_tmp_359
    unless $I5005 goto if2213_else5001 
    set $P5018, fb_tmp_359["semilist"]
    set $P5020, $P5018
    goto if2213_end5002
  if2213_else5001:
    null $P5019
    set $P5020, $P5019
  if2213_end5002:
    unless_null $P5020, vivi_22145004
    nqp_get_sc_object $P5021, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5020, $P5021
  vivi_22145004:
    $P5022 = $P5020."ast"()
    $P5023 = $P5015."new"($P5022, "callmethod" :named("op"), $P101 :named("name"))
    store_lex "$past", $P5023
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_465_1367388600.55005") :anon :lex :outer("cuid_460_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2125
    .lex "$name", $P101 
    .local pmc fb_tmp_363 
    .local pmc fb_tmp_364 
    .local pmc fb_tmp_365 
    .local pmc fb_tmp_366 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
.annotate 'line', 2126
    find_lex $P5002, "@name"
    $P5003 = $P5002."pop"()
    set $S5001, $P5003
    box $P5004, $S5001
    set $P101, $P5004
    find_dynamic_lex $P5005, "$*IN_DECL"
    unless_null $P5005, fallback5031
    nqp_get_sc_object $P5007, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5006, $P5007
    set fb_tmp_363, $P5006
    repr_defined $I5002, fb_tmp_363
    unless $I5002 goto if2229_else5032 
    set $P5008, fb_tmp_363["$IN_DECL"]
    set $P5010, $P5008
    goto if2229_end5033
  if2229_else5032:
    null $P5009
    set $P5010, $P5009
  if2229_end5033:
    unless_null $P5010, vivi_22305034
    nqp_get_sc_object $P5011, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5010, $P5011
  vivi_22305034:
    unless_null $P5010, vivi_22315035
    die "Contextual $*IN_DECL not found"
    box $P5012, "Contextual $*IN_DECL not found"
    set $P5010, $P5012
  vivi_22315035:
    set $P5005, $P5010
  fallback5031:
    set $S5002, $P5005
    iseq $I5001, $S5002, "variable"
    set $I5004, $I5001
    if $I5001 goto unless2228_end5030 
    set $S5003, $P101
    iseq $I5003, $S5003, "$_"
    set $I5004, $I5003
  unless2228_end5030:
    set $I5006, $I5004
    if $I5004 goto unless2227_end5028 
    set $S5004, $P101
    iseq $I5005, $S5004, "$/"
    set $I5006, $I5005
  unless2227_end5028:
    set $I5008, $I5006
    if $I5006 goto unless2226_end5026 
    set $S5005, $P101
    iseq $I5007, $S5005, "$!"
    set $I5008, $I5007
  unless2226_end5026:
    set $I5012, $I5008
    if $I5008 goto unless2225_end5024 
    find_lex $P5013, "$/"
    unless_null $P5013, fallback5040
    nqp_get_sc_object $P5014, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5013, $P5014
  fallback5040:
    set fb_tmp_365, $P5013
    repr_defined $I5011, fb_tmp_365
    unless $I5011 goto if2233_else5038 
    set $P5015, fb_tmp_365["twigil"]
    set $P5017, $P5015
    goto if2233_end5039
  if2233_else5038:
    null $P5016
    set $P5017, $P5016
  if2233_end5039:
    unless_null $P5017, vivi_22345041
    nqp_get_sc_object $P5018, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5017, $P5018
  vivi_22345041:
    set fb_tmp_364, $P5017
    repr_defined $I5010, fb_tmp_364
    unless $I5010 goto if2232_else5036 
    set $P5019, fb_tmp_364[0]
    set $P5021, $P5019
    goto if2232_end5037
  if2232_else5036:
    null $P5020
    set $P5021, $P5020
  if2232_end5037:
    unless_null $P5021, vivi_22355042
    nqp_get_sc_object $P5022, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5021, $P5022
  vivi_22355042:
    set $S5006, $P5021
    iseq $I5009, $S5006, "?"
    set $I5012, $I5009
  unless2225_end5024:
    box $P5033, $I5012
    set $P5032, $P5033
    if $I5012 goto unless2224_end5022 
.annotate 'line', 2128
    find_dynamic_lex $P5023, "$*W"
    unless_null $P5023, fallback5043
    nqp_get_sc_object $P5025, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5024, $P5025
    set fb_tmp_366, $P5024
    repr_defined $I5013, fb_tmp_366
    unless $I5013 goto if2236_else5044 
    set $P5026, fb_tmp_366["$W"]
    set $P5028, $P5026
    goto if2236_end5045
  if2236_else5044:
    null $P5027
    set $P5028, $P5027
  if2236_end5045:
    unless_null $P5028, vivi_22375046
    nqp_get_sc_object $P5029, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5028, $P5029
  vivi_22375046:
    unless_null $P5028, vivi_22385047
    die "Contextual $*W not found"
    box $P5030, "Contextual $*W not found"
    set $P5028, $P5030
  vivi_22385047:
    set $P5023, $P5028
  fallback5043:
    $P5031 = $P5023."is_lexical"($P101)
    set $P5032, $P5031
  unless2224_end5022:
    unless $P5032 goto if2223_else5019 
.annotate 'line', 2129
    nqp_get_sc_object $P5034, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5035 = $P5034."new"($P101 :named("name"), "lexical" :named("scope"))
    store_lex "$past", $P5035
    set $P5039, $P5035
    goto if2223_end5020
  if2223_else5019:
.annotate 'line', 2131
.annotate 'line', 2132
    find_lex $P5036, "$/"
    $P5037 = $P5036."CURSOR"()
    set $S5009, $P101
    concat $S5008, "Use of undeclared variable '", $S5009
    concat $S5007, $S5008, "'"
    $P5038 = $P5037."panic"($S5007)
    set $P5039, $P5038
  if2223_end5020:
    .return ($P5039) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<module>" :subid("cuid_288_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2139
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_367 
    unless_null _lex_param_1, fallback5050
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback5050:
    set fb_tmp_367, _lex_param_1
    repr_defined $I5001, fb_tmp_367
    unless $I5001 goto if2239_else5048 
    set $P5002, fb_tmp_367["package_def"]
    set $P5004, $P5002
    goto if2239_end5049
  if2239_else5048:
    null $P5003
    set $P5004, $P5003
  if2239_end5049:
    unless_null $P5004, vivi_22405051
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_22405051:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<knowhow>" :subid("cuid_289_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2140
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_368 
    unless_null _lex_param_1, fallback5054
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback5054:
    set fb_tmp_368, _lex_param_1
    repr_defined $I5001, fb_tmp_368
    unless $I5001 goto if2241_else5052 
    set $P5002, fb_tmp_368["package_def"]
    set $P5004, $P5002
    goto if2241_end5053
  if2241_else5052:
    null $P5003
    set $P5004, $P5003
  if2241_end5053:
    unless_null $P5004, vivi_22425055
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_22425055:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<class>" :subid("cuid_290_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2141
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_369 
    unless_null _lex_param_1, fallback5058
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback5058:
    set fb_tmp_369, _lex_param_1
    repr_defined $I5001, fb_tmp_369
    unless $I5001 goto if2243_else5056 
    set $P5002, fb_tmp_369["package_def"]
    set $P5004, $P5002
    goto if2243_end5057
  if2243_else5056:
    null $P5003
    set $P5004, $P5003
  if2243_end5057:
    unless_null $P5004, vivi_22445059
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_22445059:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<grammar>" :subid("cuid_291_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2142
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_370 
    unless_null _lex_param_1, fallback5062
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback5062:
    set fb_tmp_370, _lex_param_1
    repr_defined $I5001, fb_tmp_370
    unless $I5001 goto if2245_else5060 
    set $P5002, fb_tmp_370["package_def"]
    set $P5004, $P5002
    goto if2245_end5061
  if2245_else5060:
    null $P5003
    set $P5004, $P5003
  if2245_end5061:
    unless_null $P5004, vivi_22465063
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_22465063:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<role>" :subid("cuid_292_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2143
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_371 
    unless_null _lex_param_1, fallback5066
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback5066:
    set fb_tmp_371, _lex_param_1
    repr_defined $I5001, fb_tmp_371
    unless $I5001 goto if2247_else5064 
    set $P5002, fb_tmp_371["package_def"]
    set $P5004, $P5002
    goto if2247_end5065
  if2247_else5064:
    null $P5003
    set $P5004, $P5003
  if2247_end5065:
    unless_null $P5004, vivi_22485067
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_22485067:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<native>" :subid("cuid_293_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2144
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_372 
    unless_null _lex_param_1, fallback5070
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback5070:
    set fb_tmp_372, _lex_param_1
    repr_defined $I5001, fb_tmp_372
    unless $I5001 goto if2249_else5068 
    set $P5002, fb_tmp_372["package_def"]
    set $P5004, $P5002
    goto if2249_end5069
  if2249_else5068:
    null $P5003
    set $P5004, $P5003
  if2249_end5069:
    unless_null $P5004, vivi_22505071
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_22505071:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<stub>" :subid("cuid_294_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2146
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$HOW", $P101 
    .lex "$PACKAGE", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_373 
    .local pmc fb_tmp_374 
    .local pmc fb_tmp_375 
    .local pmc fb_tmp_376 
    .local pmc fb_tmp_377 
    .local pmc fb_tmp_378 
    .local pmc fb_tmp_379 
    .local pmc fb_tmp_380 
    .local pmc fb_tmp_381 
    .local pmc fb_tmp_382 
    .local pmc fb_tmp_383 
    .local pmc fb_tmp_384 
    .local pmc fb_tmp_385 
    .local pmc fb_tmp_386 
    .local pmc fb_tmp_387 
    .local pmc fb_tmp_388 
    .local pmc fb_tmp_389 
    .local pmc fb_tmp_390 
    .local pmc fb_tmp_391 
    .local pmc fb_tmp_392 
    .local pmc fb_tmp_393 
    .local pmc fb_tmp_394 
    .local pmc fb_tmp_395 
    .local pmc fb_tmp_396 
    .local pmc fb_tmp_397 
    .local pmc fb_tmp_398 
    .local pmc fb_tmp_399 
    .local pmc fb_tmp_400 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
.annotate 'line', 2149
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback5072
    nqp_get_sc_object $P5005, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5004, $P5005
    set fb_tmp_373, $P5004
    repr_defined $I5001, fb_tmp_373
    unless $I5001 goto if2251_else5073 
    set $P5006, fb_tmp_373["$W"]
    set $P5008, $P5006
    goto if2251_end5074
  if2251_else5073:
    null $P5007
    set $P5008, $P5007
  if2251_end5074:
    unless_null $P5008, vivi_22525075
    nqp_get_sc_object $P5009, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5008, $P5009
  vivi_22525075:
    unless_null $P5008, vivi_22535076
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_22535076:
    set $P5003, $P5008
  fallback5072:
    unless_null _lex_param_1, fallback5081
    nqp_get_sc_object $P5011, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5011
  fallback5081:
    set fb_tmp_375, _lex_param_1
    repr_defined $I5003, fb_tmp_375
    unless $I5003 goto if2255_else5079 
    set $P5012, fb_tmp_375["metaclass"]
    set $P5014, $P5012
    goto if2255_end5080
  if2255_else5079:
    null $P5013
    set $P5014, $P5013
  if2255_end5080:
    unless_null $P5014, vivi_22565082
    nqp_get_sc_object $P5015, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5014, $P5015
  vivi_22565082:
    set fb_tmp_374, $P5014
    repr_defined $I5002, fb_tmp_374
    unless $I5002 goto if2254_else5077 
    set $P5016, fb_tmp_374["identifier"]
    set $P5018, $P5016
    goto if2254_end5078
  if2254_else5077:
    null $P5017
    set $P5018, $P5017
  if2254_end5078:
    unless_null $P5018, vivi_22575083
    nqp_get_sc_object $P5019, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5018, $P5019
  vivi_22575083:
    $P5020 = $P5003."find_sym"($P5018)
    set $P101, $P5020
.annotate 'line', 2150
    find_dynamic_lex $P5021, "$*W"
    unless_null $P5021, fallback5084
    nqp_get_sc_object $P5023, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5022, $P5023
    set fb_tmp_376, $P5022
    repr_defined $I5004, fb_tmp_376
    unless $I5004 goto if2258_else5085 
    set $P5024, fb_tmp_376["$W"]
    set $P5026, $P5024
    goto if2258_end5086
  if2258_else5085:
    null $P5025
    set $P5026, $P5025
  if2258_end5086:
    unless_null $P5026, vivi_22595087
    nqp_get_sc_object $P5027, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5026, $P5027
  vivi_22595087:
    unless_null $P5026, vivi_22605088
    die "Contextual $*W not found"
    box $P5028, "Contextual $*W not found"
    set $P5026, $P5028
  vivi_22605088:
    set $P5021, $P5026
  fallback5084:
    unless_null _lex_param_1, fallback5091
    nqp_get_sc_object $P5029, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5029
  fallback5091:
    set fb_tmp_377, _lex_param_1
    repr_defined $I5005, fb_tmp_377
    unless $I5005 goto if2261_else5089 
    set $P5030, fb_tmp_377["name"]
    set $P5032, $P5030
    goto if2261_end5090
  if2261_else5089:
    null $P5031
    set $P5032, $P5031
  if2261_end5090:
    unless_null $P5032, vivi_22625092
    nqp_get_sc_object $P5033, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5032, $P5033
  vivi_22625092:
    set $S5001, $P5032
    $P5034 = $P5021."pkg_create_mo"($P101, $S5001 :named("name"))
    set $P102, $P5034
    find_dynamic_lex $P5035, "$*SCOPE"
    unless_null $P5035, fallback5097
    nqp_get_sc_object $P5037, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5036, $P5037
    set fb_tmp_378, $P5036
    repr_defined $I5007, fb_tmp_378
    unless $I5007 goto if2265_else5098 
    set $P5038, fb_tmp_378["$SCOPE"]
    set $P5040, $P5038
    goto if2265_end5099
  if2265_else5098:
    null $P5039
    set $P5040, $P5039
  if2265_end5099:
    unless_null $P5040, vivi_22665100
    nqp_get_sc_object $P5041, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5040, $P5041
  vivi_22665100:
    unless_null $P5040, vivi_22675101
    die "Contextual $*SCOPE not found"
    box $P5042, "Contextual $*SCOPE not found"
    set $P5040, $P5042
  vivi_22675101:
    set $P5035, $P5040
  fallback5097:
    set $S5002, $P5035
    iseq $I5006, $S5002, "our"
    set $I5010, $I5006
    if $I5006 goto unless2264_end5096 
    find_dynamic_lex $P5043, "$*SCOPE"
    unless_null $P5043, fallback5102
    nqp_get_sc_object $P5045, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5044, $P5045
    set fb_tmp_379, $P5044
    repr_defined $I5009, fb_tmp_379
    unless $I5009 goto if2268_else5103 
    set $P5046, fb_tmp_379["$SCOPE"]
    set $P5048, $P5046
    goto if2268_end5104
  if2268_else5103:
    null $P5047
    set $P5048, $P5047
  if2268_end5104:
    unless_null $P5048, vivi_22695105
    nqp_get_sc_object $P5049, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5048, $P5049
  vivi_22695105:
    unless_null $P5048, vivi_22705106
    die "Contextual $*SCOPE not found"
    box $P5050, "Contextual $*SCOPE not found"
    set $P5048, $P5050
  vivi_22705106:
    set $P5043, $P5048
  fallback5102:
    set $S5003, $P5043
    iseq $I5008, $S5003, ""
    set $I5010, $I5008
  unless2264_end5096:
    unless $I5010 goto if2263_else5093 
.annotate 'line', 2153
.annotate 'line', 2154
    find_dynamic_lex $P5051, "$*W"
    unless_null $P5051, fallback5107
    nqp_get_sc_object $P5053, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5052, $P5053
    set fb_tmp_380, $P5052
    repr_defined $I5011, fb_tmp_380
    unless $I5011 goto if2271_else5108 
    set $P5054, fb_tmp_380["$W"]
    set $P5056, $P5054
    goto if2271_end5109
  if2271_else5108:
    null $P5055
    set $P5056, $P5055
  if2271_end5109:
    unless_null $P5056, vivi_22725110
    nqp_get_sc_object $P5057, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5056, $P5057
  vivi_22725110:
    unless_null $P5056, vivi_22735111
    die "Contextual $*W not found"
    box $P5058, "Contextual $*W not found"
    set $P5056, $P5058
  vivi_22735111:
    set $P5051, $P5056
  fallback5107:
    find_dynamic_lex $P5059, "$*OUTERPACKAGE"
    unless_null $P5059, fallback5112
    nqp_get_sc_object $P5061, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5060, $P5061
    set fb_tmp_381, $P5060
    repr_defined $I5012, fb_tmp_381
    unless $I5012 goto if2274_else5113 
    set $P5062, fb_tmp_381["$OUTERPACKAGE"]
    set $P5064, $P5062
    goto if2274_end5114
  if2274_else5113:
    null $P5063
    set $P5064, $P5063
  if2274_end5114:
    unless_null $P5064, vivi_22755115
    nqp_get_sc_object $P5065, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5064, $P5065
  vivi_22755115:
    unless_null $P5064, vivi_22765116
    die "Contextual $*OUTERPACKAGE not found"
    box $P5066, "Contextual $*OUTERPACKAGE not found"
    set $P5064, $P5066
  vivi_22765116:
    set $P5059, $P5064
  fallback5112:
    unless_null _lex_param_1, fallback5121
    nqp_get_sc_object $P5067, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5067
  fallback5121:
    set fb_tmp_383, _lex_param_1
    repr_defined $I5014, fb_tmp_383
    unless $I5014 goto if2278_else5119 
    set $P5068, fb_tmp_383["name"]
    set $P5070, $P5068
    goto if2278_end5120
  if2278_else5119:
    null $P5069
    set $P5070, $P5069
  if2278_end5120:
    unless_null $P5070, vivi_22795122
    nqp_get_sc_object $P5071, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5070, $P5071
  vivi_22795122:
    set fb_tmp_382, $P5070
    repr_defined $I5013, fb_tmp_382
    unless $I5013 goto if2277_else5117 
    set $P5072, fb_tmp_382["identifier"]
    set $P5074, $P5072
    goto if2277_end5118
  if2277_else5117:
    null $P5073
    set $P5074, $P5073
  if2277_end5118:
    unless_null $P5074, vivi_22805123
    nqp_get_sc_object $P5075, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5074, $P5075
  vivi_22805123:
    $P5051."install_package_symbol"($P5059, $P5074, $P102)
    unless_null _lex_param_1, fallback5130
    nqp_get_sc_object $P5076, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5076
  fallback5130:
    set fb_tmp_385, _lex_param_1
    repr_defined $I5017, fb_tmp_385
    unless $I5017 goto if2283_else5128 
    set $P5077, fb_tmp_385["name"]
    set $P5079, $P5077
    goto if2283_end5129
  if2283_else5128:
    null $P5078
    set $P5079, $P5078
  if2283_end5129:
    unless_null $P5079, vivi_22845131
    nqp_get_sc_object $P5080, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5079, $P5080
  vivi_22845131:
    set fb_tmp_384, $P5079
    repr_defined $I5016, fb_tmp_384
    unless $I5016 goto if2282_else5126 
    set $P5081, fb_tmp_384["identifier"]
    set $P5083, $P5081
    goto if2282_end5127
  if2282_else5126:
    null $P5082
    set $P5083, $P5082
  if2282_end5127:
    unless_null $P5083, vivi_22855132
    nqp_get_sc_object $P5084, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5083, $P5084
  vivi_22855132:
    set $N5001, $P5083
    set $N5002, 1
    iseq $I5015, $N5001, $N5002
    box $P5117, $I5015
    set $P5116, $P5117
    unless $I5015 goto if2281_end5125 
.annotate 'line', 2155
.annotate 'line', 2156
    find_dynamic_lex $P5085, "$*W"
    unless_null $P5085, fallback5133
    nqp_get_sc_object $P5087, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5086, $P5087
    set fb_tmp_386, $P5086
    repr_defined $I5018, fb_tmp_386
    unless $I5018 goto if2286_else5134 
    set $P5088, fb_tmp_386["$W"]
    set $P5090, $P5088
    goto if2286_end5135
  if2286_else5134:
    null $P5089
    set $P5090, $P5089
  if2286_end5135:
    unless_null $P5090, vivi_22875136
    nqp_get_sc_object $P5091, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5090, $P5091
  vivi_22875136:
    unless_null $P5090, vivi_22885137
    die "Contextual $*W not found"
    box $P5092, "Contextual $*W not found"
    set $P5090, $P5092
  vivi_22885137:
    set $P5085, $P5090
  fallback5133:
    find_dynamic_lex $P5093, "$*W"
    unless_null $P5093, fallback5138
    nqp_get_sc_object $P5095, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5094, $P5095
    set fb_tmp_387, $P5094
    repr_defined $I5019, fb_tmp_387
    unless $I5019 goto if2289_else5139 
    set $P5096, fb_tmp_387["$W"]
    set $P5098, $P5096
    goto if2289_end5140
  if2289_else5139:
    null $P5097
    set $P5098, $P5097
  if2289_end5140:
    unless_null $P5098, vivi_22905141
    nqp_get_sc_object $P5099, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5098, $P5099
  vivi_22905141:
    unless_null $P5098, vivi_22915142
    die "Contextual $*W not found"
    box $P5100, "Contextual $*W not found"
    set $P5098, $P5100
  vivi_22915142:
    set $P5093, $P5098
  fallback5138:
    $P5101 = $P5093."cur_lexpad"()
    unless_null _lex_param_1, fallback5149
    nqp_get_sc_object $P5102, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5102
  fallback5149:
    set fb_tmp_390, _lex_param_1
    repr_defined $I5022, fb_tmp_390
    unless $I5022 goto if2294_else5147 
    set $P5103, fb_tmp_390["name"]
    set $P5105, $P5103
    goto if2294_end5148
  if2294_else5147:
    null $P5104
    set $P5105, $P5104
  if2294_end5148:
    unless_null $P5105, vivi_22955150
    nqp_get_sc_object $P5106, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5105, $P5106
  vivi_22955150:
    set fb_tmp_389, $P5105
    repr_defined $I5021, fb_tmp_389
    unless $I5021 goto if2293_else5145 
    set $P5107, fb_tmp_389["identifier"]
    set $P5109, $P5107
    goto if2293_end5146
  if2293_else5145:
    null $P5108
    set $P5109, $P5108
  if2293_end5146:
    unless_null $P5109, vivi_22965151
    nqp_get_sc_object $P5110, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5109, $P5110
  vivi_22965151:
    set fb_tmp_388, $P5109
    repr_defined $I5020, fb_tmp_388
    unless $I5020 goto if2292_else5143 
    set $P5111, fb_tmp_388[0]
    set $P5113, $P5111
    goto if2292_end5144
  if2292_else5143:
    null $P5112
    set $P5113, $P5112
  if2292_end5144:
    unless_null $P5113, vivi_22975152
    nqp_get_sc_object $P5114, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5113, $P5114
  vivi_22975152:
    $P5115 = $P5085."install_lexical_symbol"($P5101, $P5113, $P102)
    set $P5116, $P5115
  if2281_end5125:
    goto if2263_end5094
  if2263_else5093:
    find_dynamic_lex $P5118, "$*SCOPE"
    unless_null $P5118, fallback5155
    nqp_get_sc_object $P5120, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5119, $P5120
    set fb_tmp_391, $P5119
    repr_defined $I5024, fb_tmp_391
    unless $I5024 goto if2299_else5156 
    set $P5121, fb_tmp_391["$SCOPE"]
    set $P5123, $P5121
    goto if2299_end5157
  if2299_else5156:
    null $P5122
    set $P5123, $P5122
  if2299_end5157:
    unless_null $P5123, vivi_23005158
    nqp_get_sc_object $P5124, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5123, $P5124
  vivi_23005158:
    unless_null $P5123, vivi_23015159
    die "Contextual $*SCOPE not found"
    box $P5125, "Contextual $*SCOPE not found"
    set $P5123, $P5125
  vivi_23015159:
    set $P5118, $P5123
  fallback5155:
    set $S5004, $P5118
    iseq $I5023, $S5004, "my"
    unless $I5023 goto if2298_else5153 
.annotate 'line', 2159
    unless_null _lex_param_1, fallback5166
    nqp_get_sc_object $P5126, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5126
  fallback5166:
    set fb_tmp_393, _lex_param_1
    repr_defined $I5027, fb_tmp_393
    unless $I5027 goto if2304_else5164 
    set $P5127, fb_tmp_393["name"]
    set $P5129, $P5127
    goto if2304_end5165
  if2304_else5164:
    null $P5128
    set $P5129, $P5128
  if2304_end5165:
    unless_null $P5129, vivi_23055167
    nqp_get_sc_object $P5130, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5129, $P5130
  vivi_23055167:
    set fb_tmp_392, $P5129
    repr_defined $I5026, fb_tmp_392
    unless $I5026 goto if2303_else5162 
    set $P5131, fb_tmp_392["identifier"]
    set $P5133, $P5131
    goto if2303_end5163
  if2303_else5162:
    null $P5132
    set $P5133, $P5132
  if2303_end5163:
    unless_null $P5133, vivi_23065168
    nqp_get_sc_object $P5134, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5133, $P5134
  vivi_23065168:
    set $N5003, $P5133
    set $N5004, 1
    isne $I5025, $N5003, $N5004
    unless $I5025 goto if2302_end5161 
.annotate 'line', 2160
.annotate 'line', 2161
    unless_null _lex_param_1, fallback5171
    nqp_get_sc_object $P5135, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5135
  fallback5171:
    set fb_tmp_394, _lex_param_1
    repr_defined $I5028, fb_tmp_394
    unless $I5028 goto if2307_else5169 
    set $P5136, fb_tmp_394["name"]
    set $P5138, $P5136
    goto if2307_end5170
  if2307_else5169:
    null $P5137
    set $P5138, $P5137
  if2307_end5170:
    unless_null $P5138, vivi_23085172
    nqp_get_sc_object $P5139, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5138, $P5139
  vivi_23085172:
    $P5140 = $P5138."CURSOR"()
    $P5141 = $P5140."panic"("A my scoped package cannot have a multi-part name yet")
  if2302_end5161:
.annotate 'line', 2163
    find_dynamic_lex $P5142, "$*W"
    unless_null $P5142, fallback5173
    nqp_get_sc_object $P5144, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5143, $P5144
    set fb_tmp_395, $P5143
    repr_defined $I5029, fb_tmp_395
    unless $I5029 goto if2309_else5174 
    set $P5145, fb_tmp_395["$W"]
    set $P5147, $P5145
    goto if2309_end5175
  if2309_else5174:
    null $P5146
    set $P5147, $P5146
  if2309_end5175:
    unless_null $P5147, vivi_23105176
    nqp_get_sc_object $P5148, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5147, $P5148
  vivi_23105176:
    unless_null $P5147, vivi_23115177
    die "Contextual $*W not found"
    box $P5149, "Contextual $*W not found"
    set $P5147, $P5149
  vivi_23115177:
    set $P5142, $P5147
  fallback5173:
    find_dynamic_lex $P5150, "$*W"
    unless_null $P5150, fallback5178
    nqp_get_sc_object $P5152, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5151, $P5152
    set fb_tmp_396, $P5151
    repr_defined $I5030, fb_tmp_396
    unless $I5030 goto if2312_else5179 
    set $P5153, fb_tmp_396["$W"]
    set $P5155, $P5153
    goto if2312_end5180
  if2312_else5179:
    null $P5154
    set $P5155, $P5154
  if2312_end5180:
    unless_null $P5155, vivi_23135181
    nqp_get_sc_object $P5156, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5155, $P5156
  vivi_23135181:
    unless_null $P5155, vivi_23145182
    die "Contextual $*W not found"
    box $P5157, "Contextual $*W not found"
    set $P5155, $P5157
  vivi_23145182:
    set $P5150, $P5155
  fallback5178:
    $P5158 = $P5150."cur_lexpad"()
    unless_null _lex_param_1, fallback5189
    nqp_get_sc_object $P5159, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5159
  fallback5189:
    set fb_tmp_399, _lex_param_1
    repr_defined $I5033, fb_tmp_399
    unless $I5033 goto if2317_else5187 
    set $P5160, fb_tmp_399["name"]
    set $P5162, $P5160
    goto if2317_end5188
  if2317_else5187:
    null $P5161
    set $P5162, $P5161
  if2317_end5188:
    unless_null $P5162, vivi_23185190
    nqp_get_sc_object $P5163, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5162, $P5163
  vivi_23185190:
    set fb_tmp_398, $P5162
    repr_defined $I5032, fb_tmp_398
    unless $I5032 goto if2316_else5185 
    set $P5164, fb_tmp_398["identifier"]
    set $P5166, $P5164
    goto if2316_end5186
  if2316_else5185:
    null $P5165
    set $P5166, $P5165
  if2316_end5186:
    unless_null $P5166, vivi_23195191
    nqp_get_sc_object $P5167, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5166, $P5167
  vivi_23195191:
    set fb_tmp_397, $P5166
    repr_defined $I5031, fb_tmp_397
    unless $I5031 goto if2315_else5183 
    set $P5168, fb_tmp_397[0]
    set $P5170, $P5168
    goto if2315_end5184
  if2315_else5183:
    null $P5169
    set $P5170, $P5169
  if2315_end5184:
    unless_null $P5170, vivi_23205192
    nqp_get_sc_object $P5171, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5170, $P5171
  vivi_23205192:
    $P5172 = $P5142."install_lexical_symbol"($P5158, $P5170, $P102)
    set $P5183, $P5172
    goto if2298_end5154
  if2298_else5153:
.annotate 'line', 2165
.annotate 'line', 2166
    $P5173 = _lex_param_1."CURSOR"()
    find_dynamic_lex $P5174, "$*SCOPE"
    unless_null $P5174, fallback5193
    nqp_get_sc_object $P5176, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5175, $P5176
    set fb_tmp_400, $P5175
    repr_defined $I5034, fb_tmp_400
    unless $I5034 goto if2321_else5194 
    set $P5177, fb_tmp_400["$SCOPE"]
    set $P5179, $P5177
    goto if2321_end5195
  if2321_else5194:
    null $P5178
    set $P5179, $P5178
  if2321_end5195:
    unless_null $P5179, vivi_23225196
    nqp_get_sc_object $P5180, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5179, $P5180
  vivi_23225196:
    unless_null $P5179, vivi_23235197
    die "Contextual $*SCOPE not found"
    box $P5181, "Contextual $*SCOPE not found"
    set $P5179, $P5181
  vivi_23235197:
    set $P5174, $P5179
  fallback5193:
    set $S5006, $P5174
    concat $S5005, $S5006, " scoped packages are not supported"
    $P5182 = $P5173."panic"($S5005)
    set $P5183, $P5182
  if2298_end5154:
  if2263_end5094:
.annotate 'line', 2169
    nqp_get_sc_object $P5184, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 93
    $P5185 = $P5184."new"()
    $P5186 = _lex_param_1."!make"($P5185)
    .return ($P5186) 
.end
.HLL "nqp"
.namespace []
.sub "package_def" :subid("cuid_295_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2172
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5197 = 'cuid_467_1367388600.55005' 
    capture_lex $P5197 
    .const 'Sub' $P5197 = 'cuid_468_1367388600.55005' 
    capture_lex $P5197 
    .const 'Sub' $P5197 = 'cuid_469_1367388600.55005' 
    capture_lex $P5197 
    .const 'Sub' $P5197 = 'cuid_470_1367388600.55005' 
    capture_lex $P5197 
    .lex "@ns", $P101 
    .lex "$name", $P102 
    .lex "$how", $P103 
    .lex "$past", $P104 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_401 
    .local pmc fb_tmp_402 
    .local pmc fb_tmp_403 
    .local pmc fb_tmp_404 
    .local pmc pkg_viv_tmp_43 
    .local pmc fb_tmp_405 
    .local pmc fb_tmp_406 
    .local pmc fb_tmp_407 
    .local pmc fb_tmp_408 
    .local pmc fb_tmp_409 
    .local pmc fb_tmp_420 
    .local pmc fb_tmp_421 
    .local pmc fb_tmp_422 
    .local pmc fb_tmp_423 
    .local pmc fb_tmp_424 
    .local pmc fb_tmp_437 
    .local pmc fb_tmp_438 
    .local pmc fb_tmp_443 
    .local pmc fb_tmp_444 
    .local pmc fb_tmp_445 
    .local pmc fb_tmp_446 
    .local pmc fb_tmp_447 
    .local pmc fb_tmp_448 
    .local pmc fb_tmp_449 
    .local pmc fb_tmp_450 
    .local pmc fb_tmp_451 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P104, $P5004
    unless_null _lex_param_1, fallback5202
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5006
  fallback5202:
    set fb_tmp_402, _lex_param_1
    repr_defined $I5002, fb_tmp_402
    unless $I5002 goto if2325_else5200 
    set $P5007, fb_tmp_402["name"]
    set $P5009, $P5007
    goto if2325_end5201
  if2325_else5200:
    null $P5008
    set $P5009, $P5008
  if2325_end5201:
    unless_null $P5009, vivi_23265203
    nqp_get_sc_object $P5010, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5009, $P5010
  vivi_23265203:
    set fb_tmp_401, $P5009
    repr_defined $I5001, fb_tmp_401
    unless $I5001 goto if2324_else5198 
    set $P5011, fb_tmp_401["identifier"]
    set $P5013, $P5011
    goto if2324_end5199
  if2324_else5198:
    null $P5012
    set $P5013, $P5012
  if2324_end5199:
    unless_null $P5013, vivi_23275204
    nqp_get_sc_object $P5014, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5013, $P5014
  vivi_23275204:
    repr_clone $P5005, $P5013
    set $P101, $P5005
.annotate 'line', 2175
    $P5015 = $P101."pop"()
    set $S5001, $P5015
    box $P5016, $S5001
    set $P102, $P5016
    find_dynamic_lex $P5017, "%*HOW"
    unless_null $P5017, fallback5207
    nqp_get_sc_object $P5019, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5018, $P5019
    set pkg_viv_tmp_43, $P5018
    set fb_tmp_404, pkg_viv_tmp_43
    repr_defined $I5004, fb_tmp_404
    unless $I5004 goto if2329_else5208 
    set $P5020, fb_tmp_404["%HOW"]
    set $P5022, $P5020
    goto if2329_end5209
  if2329_else5208:
    null $P5021
    set $P5022, $P5021
  if2329_end5209:
    unless_null $P5022, vivi_23305210
    new $P5023, 'Hash'
    set pkg_viv_tmp_43["%HOW"], $P5023
    set $P5022, $P5023
  vivi_23305210:
    unless_null $P5022, vivi_23315211
    die "Contextual %*HOW not found"
    box $P5024, "Contextual %*HOW not found"
    set $P5022, $P5024
  vivi_23315211:
    set $P5017, $P5022
  fallback5207:
    set fb_tmp_403, $P5017
    repr_defined $I5003, fb_tmp_403
    unless $I5003 goto if2328_else5205 
    find_dynamic_lex $P5026, "$*PKGDECL"
    unless_null $P5026, fallback5212
    nqp_get_sc_object $P5028, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5027, $P5028
    set fb_tmp_405, $P5027
    repr_defined $I5005, fb_tmp_405
    unless $I5005 goto if2332_else5213 
    set $P5029, fb_tmp_405["$PKGDECL"]
    set $P5031, $P5029
    goto if2332_end5214
  if2332_else5213:
    null $P5030
    set $P5031, $P5030
  if2332_end5214:
    unless_null $P5031, vivi_23335215
    nqp_get_sc_object $P5032, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5031, $P5032
  vivi_23335215:
    unless_null $P5031, vivi_23345216
    die "Contextual $*PKGDECL not found"
    box $P5033, "Contextual $*PKGDECL not found"
    set $P5031, $P5033
  vivi_23345216:
    set $P5026, $P5031
  fallback5212:
    set $S5002, $P5026
    set $P5025, fb_tmp_403[$S5002]
    set $P5035, $P5025
    goto if2328_end5206
  if2328_else5205:
    null $P5034
    set $P5035, $P5034
  if2328_end5206:
    unless_null $P5035, vivi_23355217
    nqp_get_sc_object $P5036, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5035, $P5036
  vivi_23355217:
    set $P103, $P5035
    unless_null _lex_param_1, fallback5222
    nqp_get_sc_object $P5037, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5037
  fallback5222:
    set fb_tmp_406, _lex_param_1
    repr_defined $I5006, fb_tmp_406
    unless $I5006 goto if2337_else5220 
    set $P5038, fb_tmp_406["blockoid"]
    set $P5040, $P5038
    goto if2337_end5221
  if2337_else5220:
    null $P5039
    set $P5040, $P5039
  if2337_end5221:
    unless_null $P5040, vivi_23385223
    nqp_get_sc_object $P5041, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5040, $P5041
  vivi_23385223:
    unless $P5040 goto if2336_else5218 
.annotate 'line', 2180
.annotate 'line', 2181
    unless_null _lex_param_1, fallback5226
    nqp_get_sc_object $P5042, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5042
  fallback5226:
    set fb_tmp_407, _lex_param_1
    repr_defined $I5007, fb_tmp_407
    unless $I5007 goto if2339_else5224 
    set $P5043, fb_tmp_407["blockoid"]
    set $P5045, $P5043
    goto if2339_end5225
  if2339_else5224:
    null $P5044
    set $P5045, $P5044
  if2339_end5225:
    unless_null $P5045, vivi_23405227
    nqp_get_sc_object $P5046, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5045, $P5046
  vivi_23405227:
    $P5047 = $P5045."ast"()
    set $P104, $P5047
    goto if2336_end5219
  if2336_else5218:
.annotate 'line', 2183
.annotate 'line', 2184
    find_dynamic_lex $P5048, "$*W"
    unless_null $P5048, fallback5228
    nqp_get_sc_object $P5050, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5049, $P5050
    set fb_tmp_408, $P5049
    repr_defined $I5008, fb_tmp_408
    unless $I5008 goto if2341_else5229 
    set $P5051, fb_tmp_408["$W"]
    set $P5053, $P5051
    goto if2341_end5230
  if2341_else5229:
    null $P5052
    set $P5053, $P5052
  if2341_end5230:
    unless_null $P5053, vivi_23425231
    nqp_get_sc_object $P5054, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5053, $P5054
  vivi_23425231:
    unless_null $P5053, vivi_23435232
    die "Contextual $*W not found"
    box $P5055, "Contextual $*W not found"
    set $P5053, $P5055
  vivi_23435232:
    set $P5048, $P5053
  fallback5228:
    $P5056 = $P5048."pop_lexpad"()
    set $P104, $P5056
.annotate 'line', 2185
    unless_null _lex_param_1, fallback5235
    nqp_get_sc_object $P5057, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5057
  fallback5235:
    set fb_tmp_409, _lex_param_1
    repr_defined $I5009, fb_tmp_409
    unless $I5009 goto if2344_else5233 
    set $P5058, fb_tmp_409["statementlist"]
    set $P5060, $P5058
    goto if2344_end5234
  if2344_else5233:
    null $P5059
    set $P5060, $P5059
  if2344_end5234:
    unless_null $P5060, vivi_23455236
    nqp_get_sc_object $P5061, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5060, $P5061
  vivi_23455236:
    $P5062 = $P5060."ast"()
    $P5063 = $P104."push"($P5062)
  if2336_end5219:
    can $I5010, $P103, "parametric"
    box $P5066, $I5010
    set $P5065, $P5066
    unless $I5010 goto if2347_end5240 
.annotate 'line', 2192
    $P5064 = $P103."parametric"($P103)
    set $P5065, $P5064
  if2347_end5240:
    unless $P5065 goto if2346_else5237 
    .const 'Sub' $P5067 = 'cuid_467_1367388600.55005' 
    capture_lex $P5067
    $P5068 = $P5067()
    goto if2346_end5238
  if2346_else5237:
.annotate 'line', 2209
.annotate 'line', 2210
    $P104."blocktype"("immediate")
.annotate 'line', 2211
    find_dynamic_lex $P5069, "$*W"
    unless_null $P5069, fallback5290
    nqp_get_sc_object $P5071, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5070, $P5071
    set fb_tmp_420, $P5070
    repr_defined $I5011, fb_tmp_420
    unless $I5011 goto if2375_else5291 
    set $P5072, fb_tmp_420["$W"]
    set $P5074, $P5072
    goto if2375_end5292
  if2375_else5291:
    null $P5073
    set $P5074, $P5073
  if2375_end5292:
    unless_null $P5074, vivi_23765293
    nqp_get_sc_object $P5075, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5074, $P5075
  vivi_23765293:
    unless_null $P5074, vivi_23775294
    die "Contextual $*W not found"
    box $P5076, "Contextual $*W not found"
    set $P5074, $P5076
  vivi_23775294:
    set $P5069, $P5074
  fallback5290:
    find_dynamic_lex $P5077, "$*PACKAGE"
    unless_null $P5077, fallback5295
    nqp_get_sc_object $P5079, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5078, $P5079
    set fb_tmp_421, $P5078
    repr_defined $I5012, fb_tmp_421
    unless $I5012 goto if2378_else5296 
    set $P5080, fb_tmp_421["$PACKAGE"]
    set $P5082, $P5080
    goto if2378_end5297
  if2378_else5296:
    null $P5081
    set $P5082, $P5081
  if2378_end5297:
    unless_null $P5082, vivi_23795298
    nqp_get_sc_object $P5083, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5082, $P5083
  vivi_23795298:
    unless_null $P5082, vivi_23805299
    die "Contextual $*PACKAGE not found"
    box $P5084, "Contextual $*PACKAGE not found"
    set $P5082, $P5084
  vivi_23805299:
    set $P5077, $P5082
  fallback5295:
    $P5069."install_lexical_symbol"($P104, "$?PACKAGE", $P5077)
.annotate 'line', 2212
    find_dynamic_lex $P5085, "$*W"
    unless_null $P5085, fallback5300
    nqp_get_sc_object $P5087, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5086, $P5087
    set fb_tmp_422, $P5086
    repr_defined $I5013, fb_tmp_422
    unless $I5013 goto if2381_else5301 
    set $P5088, fb_tmp_422["$W"]
    set $P5090, $P5088
    goto if2381_end5302
  if2381_else5301:
    null $P5089
    set $P5090, $P5089
  if2381_end5302:
    unless_null $P5090, vivi_23825303
    nqp_get_sc_object $P5091, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5090, $P5091
  vivi_23825303:
    unless_null $P5090, vivi_23835304
    die "Contextual $*W not found"
    box $P5092, "Contextual $*W not found"
    set $P5090, $P5092
  vivi_23835304:
    set $P5085, $P5090
  fallback5300:
    find_dynamic_lex $P5093, "$*PACKAGE"
    unless_null $P5093, fallback5305
    nqp_get_sc_object $P5095, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5094, $P5095
    set fb_tmp_423, $P5094
    repr_defined $I5014, fb_tmp_423
    unless $I5014 goto if2384_else5306 
    set $P5096, fb_tmp_423["$PACKAGE"]
    set $P5098, $P5096
    goto if2384_end5307
  if2384_else5306:
    null $P5097
    set $P5098, $P5097
  if2384_end5307:
    unless_null $P5098, vivi_23855308
    nqp_get_sc_object $P5099, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5098, $P5099
  vivi_23855308:
    unless_null $P5098, vivi_23865309
    die "Contextual $*PACKAGE not found"
    box $P5100, "Contextual $*PACKAGE not found"
    set $P5098, $P5100
  vivi_23865309:
    set $P5093, $P5098
  fallback5305:
    $P5101 = $P5085."install_lexical_symbol"($P104, "$?CLASS", $P5093)
  if2346_end5238:
    unless_null _lex_param_1, fallback5314
    nqp_get_sc_object $P5102, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5102
  fallback5314:
    set fb_tmp_424, _lex_param_1
    repr_defined $I5015, fb_tmp_424
    unless $I5015 goto if2388_else5312 
    set $P5103, fb_tmp_424["parent"]
    set $P5105, $P5103
    goto if2388_end5313
  if2388_else5312:
    null $P5104
    set $P5105, $P5104
  if2388_end5313:
    unless_null $P5105, vivi_23895315
    nqp_get_sc_object $P5106, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5105, $P5106
  vivi_23895315:
    unless $P5105 goto if2387_else5310 
    .const 'Sub' $P5107 = 'cuid_468_1367388600.55005' 
    capture_lex $P5107
    $P5108 = $P5107()
    goto if2387_end5311
  if2387_else5310:
    can $I5016, $P103, "set_default_parent"
    box $P5112, $I5016
    set $P5111, $P5112
    unless $I5016 goto if2412_end5353 
    .const 'Sub' $P5109 = 'cuid_469_1367388600.55005' 
    capture_lex $P5109
    $P5110 = $P5109()
    set $P5111, $P5110
  if2412_end5353:
  if2387_end5311:
    unless_null _lex_param_1, fallback5380
    nqp_get_sc_object $P5113, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5113
  fallback5380:
    set fb_tmp_437, _lex_param_1
    repr_defined $I5017, fb_tmp_437
    unless $I5017 goto if2427_else5378 
    set $P5114, fb_tmp_437["role"]
    set $P5116, $P5114
    goto if2427_end5379
  if2427_else5378:
    null $P5115
    set $P5116, $P5115
  if2427_end5379:
    unless_null $P5116, vivi_24285381
    nqp_get_sc_object $P5117, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5116, $P5117
  vivi_24285381:
    unless $P5116 goto if2426_end5377 
.annotate 'line', 2237
    unless_null _lex_param_1, fallback5384
    nqp_get_sc_object $P5121, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5121
  fallback5384:
    set fb_tmp_438, _lex_param_1
    repr_defined $I5018, fb_tmp_438
    unless $I5018 goto if2429_else5382 
    set $P5122, fb_tmp_438["role"]
    set $P5124, $P5122
    goto if2429_end5383
  if2429_else5382:
    null $P5123
    set $P5124, $P5123
  if2429_end5383:
    unless_null $P5124, vivi_24305385
    nqp_get_sc_object $P5125, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5124, $P5125
  vivi_24305385:
    set $P5118, $P5124
    iter $P5120, $P5124
  for_next5408:
    unless $P5120, for_done5410
    shift $P5127, $P5120
  for_redo5409:
    .const 'Sub' $P5126 = 'cuid_470_1367388600.55005' 
    capture_lex $P5126
    $P5118 = $P5126($P5127)
    goto for_next5408
  for_done5410:
  if2426_end5377:
.annotate 'line', 2255
    find_dynamic_lex $P5128, "$*W"
    unless_null $P5128, fallback5411
    nqp_get_sc_object $P5130, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5129, $P5130
    set fb_tmp_443, $P5129
    repr_defined $I5019, fb_tmp_443
    unless $I5019 goto if2445_else5412 
    set $P5131, fb_tmp_443["$W"]
    set $P5133, $P5131
    goto if2445_end5413
  if2445_else5412:
    null $P5132
    set $P5133, $P5132
  if2445_end5413:
    unless_null $P5133, vivi_24465414
    nqp_get_sc_object $P5134, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5133, $P5134
  vivi_24465414:
    unless_null $P5133, vivi_24475415
    die "Contextual $*W not found"
    box $P5135, "Contextual $*W not found"
    set $P5133, $P5135
  vivi_24475415:
    set $P5128, $P5133
  fallback5411:
    find_dynamic_lex $P5136, "$*PACKAGE"
    unless_null $P5136, fallback5416
    nqp_get_sc_object $P5138, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5137, $P5138
    set fb_tmp_444, $P5137
    repr_defined $I5020, fb_tmp_444
    unless $I5020 goto if2448_else5417 
    set $P5139, fb_tmp_444["$PACKAGE"]
    set $P5141, $P5139
    goto if2448_end5418
  if2448_else5417:
    null $P5140
    set $P5141, $P5140
  if2448_end5418:
    unless_null $P5141, vivi_24495419
    nqp_get_sc_object $P5142, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5141, $P5142
  vivi_24495419:
    unless_null $P5141, vivi_24505420
    die "Contextual $*PACKAGE not found"
    box $P5143, "Contextual $*PACKAGE not found"
    set $P5141, $P5143
  vivi_24505420:
    set $P5136, $P5141
  fallback5416:
    $P5128."pkg_compose"($P5136)
    find_dynamic_lex $P5144, "$*PKGDECL"
    unless_null $P5144, fallback5425
    nqp_get_sc_object $P5146, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5145, $P5146
    set fb_tmp_445, $P5145
    repr_defined $I5022, fb_tmp_445
    unless $I5022 goto if2453_else5426 
    set $P5147, fb_tmp_445["$PKGDECL"]
    set $P5149, $P5147
    goto if2453_end5427
  if2453_else5426:
    null $P5148
    set $P5149, $P5148
  if2453_end5427:
    unless_null $P5149, vivi_24545428
    nqp_get_sc_object $P5150, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5149, $P5150
  vivi_24545428:
    unless_null $P5149, vivi_24555429
    die "Contextual $*PKGDECL not found"
    box $P5151, "Contextual $*PKGDECL not found"
    set $P5149, $P5151
  vivi_24555429:
    set $P5144, $P5149
  fallback5425:
    set $S5003, $P5144
    iseq $I5021, $S5003, "grammar"
    set $I5025, $I5021
    unless $I5021 goto if2452_end5424 
    find_dynamic_lex $P5152, "$*PACKAGE"
    unless_null $P5152, fallback5430
    nqp_get_sc_object $P5154, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5153, $P5154
    set fb_tmp_446, $P5153
    repr_defined $I5024, fb_tmp_446
    unless $I5024 goto if2456_else5431 
    set $P5155, fb_tmp_446["$PACKAGE"]
    set $P5157, $P5155
    goto if2456_end5432
  if2456_else5431:
    null $P5156
    set $P5157, $P5156
  if2456_end5432:
    unless_null $P5157, vivi_24575433
    nqp_get_sc_object $P5158, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5157, $P5158
  vivi_24575433:
    unless_null $P5157, vivi_24585434
    die "Contextual $*PACKAGE not found"
    box $P5159, "Contextual $*PACKAGE not found"
    set $P5157, $P5159
  vivi_24585434:
    set $P5152, $P5157
  fallback5430:
    can $I5023, $P5152, "!precompute_nfas"
    set $I5025, $I5023
  if2452_end5424:
    unless $I5025 goto if2451_end5422 
.annotate 'line', 2258
.annotate 'line', 2259
    find_dynamic_lex $P5160, "$*PACKAGE"
    unless_null $P5160, fallback5435
    nqp_get_sc_object $P5162, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5161, $P5162
    set fb_tmp_447, $P5161
    repr_defined $I5026, fb_tmp_447
    unless $I5026 goto if2459_else5436 
    set $P5163, fb_tmp_447["$PACKAGE"]
    set $P5165, $P5163
    goto if2459_end5437
  if2459_else5436:
    null $P5164
    set $P5165, $P5164
  if2459_end5437:
    unless_null $P5165, vivi_24605438
    nqp_get_sc_object $P5166, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5165, $P5166
  vivi_24605438:
    unless_null $P5165, vivi_24615439
    die "Contextual $*PACKAGE not found"
    box $P5167, "Contextual $*PACKAGE not found"
    set $P5165, $P5167
  vivi_24615439:
    set $P5160, $P5165
  fallback5435:
    $P5168 = $P5160."!precompute_nfas"()
  if2451_end5422:
    unless_null _lex_param_1, fallback5444
    nqp_get_sc_object $P5169, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5169
  fallback5444:
    set fb_tmp_448, _lex_param_1
    repr_defined $I5027, fb_tmp_448
    unless $I5027 goto if2463_else5442 
    set $P5170, fb_tmp_448["export"]
    set $P5172, $P5170
    goto if2463_end5443
  if2463_else5442:
    null $P5171
    set $P5172, $P5171
  if2463_end5443:
    unless_null $P5172, vivi_24645445
    nqp_get_sc_object $P5173, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5172, $P5173
  vivi_24645445:
    unless $P5172 goto if2462_end5441 
.annotate 'line', 2263
    find_dynamic_lex $P5176, "$*EXPORT"
    unless_null $P5176, fallback5448
    nqp_get_sc_object $P5178, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5177, $P5178
    set fb_tmp_450, $P5177
    repr_defined $I5029, fb_tmp_450
    unless $I5029 goto if2466_else5449 
    set $P5179, fb_tmp_450["$EXPORT"]
    set $P5181, $P5179
    goto if2466_end5450
  if2466_else5449:
    null $P5180
    set $P5181, $P5180
  if2466_end5450:
    unless_null $P5181, vivi_24675451
    nqp_get_sc_object $P5182, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5181, $P5182
  vivi_24675451:
    unless_null $P5181, vivi_24685452
    die "Contextual $*EXPORT not found"
    box $P5183, "Contextual $*EXPORT not found"
    set $P5181, $P5183
  vivi_24685452:
    set $P5176, $P5181
  fallback5448:
    get_who $P5175, $P5176
    set fb_tmp_449, $P5175
    repr_defined $I5028, fb_tmp_449
    unless $I5028 goto if2465_else5446 
    set $P5184, fb_tmp_449["DEFAULT"]
    set $P5186, $P5184
    goto if2465_end5447
  if2465_else5446:
    null $P5185
    set $P5186, $P5185
  if2465_end5447:
    unless_null $P5186, vivi_24695453
    nqp_get_sc_object $P5187, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5186, $P5187
  vivi_24695453:
    get_who $P5174, $P5186
    set $S5004, $P102
    find_dynamic_lex $P5188, "$*PACKAGE"
    unless_null $P5188, fallback5454
    nqp_get_sc_object $P5190, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5189, $P5190
    set fb_tmp_451, $P5189
    repr_defined $I5030, fb_tmp_451
    unless $I5030 goto if2470_else5455 
    set $P5191, fb_tmp_451["$PACKAGE"]
    set $P5193, $P5191
    goto if2470_end5456
  if2470_else5455:
    null $P5192
    set $P5193, $P5192
  if2470_end5456:
    unless_null $P5193, vivi_24715457
    nqp_get_sc_object $P5194, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5193, $P5194
  vivi_24715457:
    unless_null $P5193, vivi_24725458
    die "Contextual $*PACKAGE not found"
    box $P5195, "Contextual $*PACKAGE not found"
    set $P5193, $P5195
  vivi_24725458:
    set $P5188, $P5193
  fallback5454:
    set $P5174[$S5004], $P5188
  if2462_end5441:
.annotate 'line', 2267
    $P5196 = _lex_param_1."!make"($P104)
    .return ($P5196) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_467_1367388600.55005") :anon :lex :outer("cuid_295_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2192
    .const 'Sub' $P5089 = 'cuid_466_1367388600.55005' 
    capture_lex $P5089 
    .lex "$params", $P101 
    .local pmc fb_tmp_410 
    .local pmc fb_tmp_411 
    .local pmc fb_tmp_412 
    .local pmc fb_tmp_413 
    .local pmc fb_tmp_414 
    .local pmc fb_tmp_415 
    .local pmc fb_tmp_416 
    .local pmc fb_tmp_417 
    .local pmc fb_tmp_418 
    .local pmc fb_tmp_419 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
.annotate 'line', 2193
    find_lex $P5002, "$past"
    $P5002."blocktype"("declaration")
.annotate 'line', 2194
    nqp_get_sc_object $P5003, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 93
.annotate 'line', 2195
    nqp_get_sc_object $P5004, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5005 = $P5004."new"("$?CLASS" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    $P5006 = $P5003."new"($P5005)
    set $P101, $P5006
    find_lex $P5007, "$/"
    unless_null $P5007, fallback5245
    nqp_get_sc_object $P5008, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5007, $P5008
  fallback5245:
    set fb_tmp_410, $P5007
    repr_defined $I5001, fb_tmp_410
    unless $I5001 goto if2349_else5243 
    set $P5009, fb_tmp_410["role_params"]
    set $P5011, $P5009
    goto if2349_end5244
  if2349_else5243:
    null $P5010
    set $P5011, $P5010
  if2349_end5244:
    unless_null $P5011, vivi_23505246
    nqp_get_sc_object $P5012, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5011, $P5012
  vivi_23505246:
    unless $P5011 goto if2348_end5242 
.annotate 'line', 2197
    find_lex $P5016, "$/"
    unless_null $P5016, fallback5253
    nqp_get_sc_object $P5017, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5016, $P5017
  fallback5253:
    set fb_tmp_413, $P5016
    repr_defined $I5004, fb_tmp_413
    unless $I5004 goto if2353_else5251 
    set $P5018, fb_tmp_413["role_params"]
    set $P5020, $P5018
    goto if2353_end5252
  if2353_else5251:
    null $P5019
    set $P5020, $P5019
  if2353_end5252:
    unless_null $P5020, vivi_23545254
    nqp_get_sc_object $P5021, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5020, $P5021
  vivi_23545254:
    set fb_tmp_412, $P5020
    repr_defined $I5003, fb_tmp_412
    unless $I5003 goto if2352_else5249 
    set $P5022, fb_tmp_412[0]
    set $P5024, $P5022
    goto if2352_end5250
  if2352_else5249:
    null $P5023
    set $P5024, $P5023
  if2352_end5250:
    unless_null $P5024, vivi_23555255
    nqp_get_sc_object $P5025, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5024, $P5025
  vivi_23555255:
    set fb_tmp_411, $P5024
    repr_defined $I5002, fb_tmp_411
    unless $I5002 goto if2351_else5247 
    set $P5026, fb_tmp_411["variable"]
    set $P5028, $P5026
    goto if2351_end5248
  if2351_else5247:
    null $P5027
    set $P5028, $P5027
  if2351_end5248:
    unless_null $P5028, vivi_23565256
    nqp_get_sc_object $P5029, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5028, $P5029
  vivi_23565256:
    set $P5013, $P5028
    iter $P5015, $P5028
  for_next5257:
    unless $P5015, for_done5259
    shift $P5031, $P5015
  for_redo5258:
    .const 'Sub' $P5030 = 'cuid_466_1367388600.55005' 
    capture_lex $P5030
    $P5013 = $P5030($P5031)
    goto for_next5257
  for_done5259:
  if2348_end5242:
.annotate 'line', 2202
    find_lex $P5032, "$past"
    $P5032."unshift"($P101)
.annotate 'line', 2203
    find_lex $P5033, "$past"
    nqp_get_sc_object $P5034, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    $P5035 = $P5034."new"("curlexpad" :named("op"))
    $P5033."push"($P5035)
.annotate 'line', 2204
    find_lex $P5036, "$past"
    $P5036."symbol"("$?CLASS", "lexical" :named("scope"))
.annotate 'line', 2205
    find_dynamic_lex $P5037, "$*W"
    unless_null $P5037, fallback5260
    nqp_get_sc_object $P5039, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5038, $P5039
    set fb_tmp_414, $P5038
    repr_defined $I5005, fb_tmp_414
    unless $I5005 goto if2357_else5261 
    set $P5040, fb_tmp_414["$W"]
    set $P5042, $P5040
    goto if2357_end5262
  if2357_else5261:
    null $P5041
    set $P5042, $P5041
  if2357_end5262:
    unless_null $P5042, vivi_23585263
    nqp_get_sc_object $P5043, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5042, $P5043
  vivi_23585263:
    unless_null $P5042, vivi_23595264
    die "Contextual $*W not found"
    box $P5044, "Contextual $*W not found"
    set $P5042, $P5044
  vivi_23595264:
    set $P5037, $P5042
  fallback5260:
    find_dynamic_lex $P5045, "$*PACKAGE"
    unless_null $P5045, fallback5265
    nqp_get_sc_object $P5047, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5046, $P5047
    set fb_tmp_415, $P5046
    repr_defined $I5006, fb_tmp_415
    unless $I5006 goto if2360_else5266 
    set $P5048, fb_tmp_415["$PACKAGE"]
    set $P5050, $P5048
    goto if2360_end5267
  if2360_else5266:
    null $P5049
    set $P5050, $P5049
  if2360_end5267:
    unless_null $P5050, vivi_23615268
    nqp_get_sc_object $P5051, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5050, $P5051
  vivi_23615268:
    unless_null $P5050, vivi_23625269
    die "Contextual $*PACKAGE not found"
    box $P5052, "Contextual $*PACKAGE not found"
    set $P5050, $P5052
  vivi_23625269:
    set $P5045, $P5050
  fallback5265:
    find_lex $P5053, "$past"
    $P5037."pkg_set_body_block"($P5045, $P5053)
.annotate 'line', 2206
    find_dynamic_lex $P5054, "$*W"
    unless_null $P5054, fallback5270
    nqp_get_sc_object $P5056, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5055, $P5056
    set fb_tmp_416, $P5055
    repr_defined $I5007, fb_tmp_416
    unless $I5007 goto if2363_else5271 
    set $P5057, fb_tmp_416["$W"]
    set $P5059, $P5057
    goto if2363_end5272
  if2363_else5271:
    null $P5058
    set $P5059, $P5058
  if2363_end5272:
    unless_null $P5059, vivi_23645273
    nqp_get_sc_object $P5060, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5059, $P5060
  vivi_23645273:
    unless_null $P5059, vivi_23655274
    die "Contextual $*W not found"
    box $P5061, "Contextual $*W not found"
    set $P5059, $P5061
  vivi_23655274:
    set $P5054, $P5059
  fallback5270:
    find_lex $P5062, "$past"
    find_dynamic_lex $P5063, "$*PACKAGE"
    unless_null $P5063, fallback5275
    nqp_get_sc_object $P5065, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5064, $P5065
    set fb_tmp_417, $P5064
    repr_defined $I5008, fb_tmp_417
    unless $I5008 goto if2366_else5276 
    set $P5066, fb_tmp_417["$PACKAGE"]
    set $P5068, $P5066
    goto if2366_end5277
  if2366_else5276:
    null $P5067
    set $P5068, $P5067
  if2366_end5277:
    unless_null $P5068, vivi_23675278
    nqp_get_sc_object $P5069, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5068, $P5069
  vivi_23675278:
    unless_null $P5068, vivi_23685279
    die "Contextual $*PACKAGE not found"
    box $P5070, "Contextual $*PACKAGE not found"
    set $P5068, $P5070
  vivi_23685279:
    set $P5063, $P5068
  fallback5275:
    $P5054."install_lexical_symbol"($P5062, "$?PACKAGE", $P5063)
.annotate 'line', 2207
    find_dynamic_lex $P5071, "$*W"
    unless_null $P5071, fallback5280
    nqp_get_sc_object $P5073, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5072, $P5073
    set fb_tmp_418, $P5072
    repr_defined $I5009, fb_tmp_418
    unless $I5009 goto if2369_else5281 
    set $P5074, fb_tmp_418["$W"]
    set $P5076, $P5074
    goto if2369_end5282
  if2369_else5281:
    null $P5075
    set $P5076, $P5075
  if2369_end5282:
    unless_null $P5076, vivi_23705283
    nqp_get_sc_object $P5077, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5076, $P5077
  vivi_23705283:
    unless_null $P5076, vivi_23715284
    die "Contextual $*W not found"
    box $P5078, "Contextual $*W not found"
    set $P5076, $P5078
  vivi_23715284:
    set $P5071, $P5076
  fallback5280:
    find_lex $P5079, "$past"
    find_dynamic_lex $P5080, "$*PACKAGE"
    unless_null $P5080, fallback5285
    nqp_get_sc_object $P5082, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5081, $P5082
    set fb_tmp_419, $P5081
    repr_defined $I5010, fb_tmp_419
    unless $I5010 goto if2372_else5286 
    set $P5083, fb_tmp_419["$PACKAGE"]
    set $P5085, $P5083
    goto if2372_end5287
  if2372_else5286:
    null $P5084
    set $P5085, $P5084
  if2372_end5287:
    unless_null $P5085, vivi_23735288
    nqp_get_sc_object $P5086, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5085, $P5086
  vivi_23735288:
    unless_null $P5085, vivi_23745289
    die "Contextual $*PACKAGE not found"
    box $P5087, "Contextual $*PACKAGE not found"
    set $P5085, $P5087
  vivi_23745289:
    set $P5080, $P5085
  fallback5285:
    $P5088 = $P5071."install_lexical_symbol"($P5079, "$?ROLE", $P5080)
    .return ($P5088) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_466_1367388600.55005") :anon :lex :outer("cuid_467_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2198
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 2199
    find_lex $P5001, "$params"
    $P5002 = _lex_param_0."ast"()
    $P5003 = $P5001."push"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_468_1367388600.55005") :anon :lex :outer("cuid_295_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2216
    .lex "$parent", $P101 
    .lex "$parent_found", $P102 
    .local pmc fb_tmp_425 
    .local pmc fb_tmp_426 
    .local pmc fb_tmp_427 
    .local pmc fb_tmp_428 
    .local pmc fb_tmp_429 
    .local pmc fb_tmp_430 
    .local pmc fb_tmp_431 
    .local pmc fb_tmp_432 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
    new $P5028, 'ExceptionHandler'
    set_label $P5028, catch_handler_24005332
    $P5028.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5028
.annotate 'line', 2219
.annotate 'line', 2220
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback5316
    nqp_get_sc_object $P5005, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5004, $P5005
    set fb_tmp_425, $P5004
    repr_defined $I5001, fb_tmp_425
    unless $I5001 goto if2390_else5317 
    set $P5006, fb_tmp_425["$W"]
    set $P5008, $P5006
    goto if2390_end5318
  if2390_else5317:
    null $P5007
    set $P5008, $P5007
  if2390_end5318:
    unless_null $P5008, vivi_23915319
    nqp_get_sc_object $P5009, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5008, $P5009
  vivi_23915319:
    unless_null $P5008, vivi_23925320
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_23925320:
    set $P5003, $P5008
  fallback5316:
    find_lex $P5012, "$/"
    unless_null $P5012, fallback5327
    nqp_get_sc_object $P5013, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5012, $P5013
  fallback5327:
    set fb_tmp_428, $P5012
    repr_defined $I5004, fb_tmp_428
    unless $I5004 goto if2395_else5325 
    set $P5014, fb_tmp_428["parent"]
    set $P5016, $P5014
    goto if2395_end5326
  if2395_else5325:
    null $P5015
    set $P5016, $P5015
  if2395_end5326:
    unless_null $P5016, vivi_23965328
    nqp_get_sc_object $P5017, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5016, $P5017
  vivi_23965328:
    set fb_tmp_427, $P5016
    repr_defined $I5003, fb_tmp_427
    unless $I5003 goto if2394_else5323 
    set $P5018, fb_tmp_427[0]
    set $P5020, $P5018
    goto if2394_end5324
  if2394_else5323:
    null $P5019
    set $P5020, $P5019
  if2394_end5324:
    unless_null $P5020, vivi_23975329
    nqp_get_sc_object $P5021, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5020, $P5021
  vivi_23975329:
    set fb_tmp_426, $P5020
    repr_defined $I5002, fb_tmp_426
    unless $I5002 goto if2393_else5321 
    set $P5022, fb_tmp_426["identifier"]
    set $P5024, $P5022
    goto if2393_end5322
  if2393_else5321:
    null $P5023
    set $P5024, $P5023
  if2393_end5322:
    unless_null $P5024, vivi_23985330
    nqp_get_sc_object $P5025, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5024, $P5025
  vivi_23985330:
    repr_clone $P5011, $P5024
    $P5026 = $P5003."find_sym"($P5011)
    set $P101, $P5026
    box $P5027, 1
    set $P102, $P5027
    set $P5029, $P102
    pop_eh 
    goto skip_handler_23995331
  catch_handler_24005332:
    .get_results ($P5028) 
    set $I10001, 1
    set $P5028["handled"], $I10001
    nqp_get_sc_object $P10001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    finalize $P5028
    pop_upto_eh $P5028
    pop_eh 
    set $P5029, $P10001
    goto skip_handler_23995331
  skip_handler_23995331:
    unless $P102 goto if2401_else5333 
.annotate 'line', 2223
.annotate 'line', 2224
    find_dynamic_lex $P5030, "$*W"
    unless_null $P5030, fallback5335
    nqp_get_sc_object $P5032, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5031, $P5032
    set fb_tmp_429, $P5031
    repr_defined $I5005, fb_tmp_429
    unless $I5005 goto if2402_else5336 
    set $P5033, fb_tmp_429["$W"]
    set $P5035, $P5033
    goto if2402_end5337
  if2402_else5336:
    null $P5034
    set $P5035, $P5034
  if2402_end5337:
    unless_null $P5035, vivi_24035338
    nqp_get_sc_object $P5036, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5035, $P5036
  vivi_24035338:
    unless_null $P5035, vivi_24045339
    die "Contextual $*W not found"
    box $P5037, "Contextual $*W not found"
    set $P5035, $P5037
  vivi_24045339:
    set $P5030, $P5035
  fallback5335:
    find_dynamic_lex $P5038, "$*PACKAGE"
    unless_null $P5038, fallback5340
    nqp_get_sc_object $P5040, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5039, $P5040
    set fb_tmp_430, $P5039
    repr_defined $I5006, fb_tmp_430
    unless $I5006 goto if2405_else5341 
    set $P5041, fb_tmp_430["$PACKAGE"]
    set $P5043, $P5041
    goto if2405_end5342
  if2405_else5341:
    null $P5042
    set $P5043, $P5042
  if2405_end5342:
    unless_null $P5043, vivi_24065343
    nqp_get_sc_object $P5044, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5043, $P5044
  vivi_24065343:
    unless_null $P5043, vivi_24075344
    die "Contextual $*PACKAGE not found"
    box $P5045, "Contextual $*PACKAGE not found"
    set $P5043, $P5045
  vivi_24075344:
    set $P5038, $P5043
  fallback5340:
    $P5046 = $P5030."pkg_add_parent_or_role"($P5038, "add_parent", $P101)
    set $P5060, $P5046
    goto if2401_end5334
  if2401_else5333:
.annotate 'line', 2226
.annotate 'line', 2227
    find_lex $P5047, "$/"
    $P5048 = $P5047."CURSOR"()
    find_lex $P5049, "$/"
    unless_null $P5049, fallback5349
    nqp_get_sc_object $P5050, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5049, $P5050
  fallback5349:
    set fb_tmp_432, $P5049
    repr_defined $I5008, fb_tmp_432
    unless $I5008 goto if2409_else5347 
    set $P5051, fb_tmp_432["parent"]
    set $P5053, $P5051
    goto if2409_end5348
  if2409_else5347:
    null $P5052
    set $P5053, $P5052
  if2409_end5348:
    unless_null $P5053, vivi_24105350
    nqp_get_sc_object $P5054, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5053, $P5054
  vivi_24105350:
    set fb_tmp_431, $P5053
    repr_defined $I5007, fb_tmp_431
    unless $I5007 goto if2408_else5345 
    set $P5055, fb_tmp_431[0]
    set $P5057, $P5055
    goto if2408_end5346
  if2408_else5345:
    null $P5056
    set $P5057, $P5056
  if2408_end5346:
    unless_null $P5057, vivi_24115351
    nqp_get_sc_object $P5058, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5057, $P5058
  vivi_24115351:
    set $S5003, $P5057
    concat $S5002, "Could not find parent class '", $S5003
    concat $S5001, $S5002, "'"
    $P5059 = $P5048."panic"($S5001)
    set $P5060, $P5059
  if2401_end5334:
    .return ($P5060) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_469_1367388600.55005") :anon :lex :outer("cuid_295_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2230
    .lex "$default", $P101 
    .local pmc fb_tmp_433 
    .local pmc fb_tmp_434 
    .local pmc fb_tmp_435 
    .local pmc fb_tmp_436 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    find_dynamic_lex $P5002, "$*PKGDECL"
    unless_null $P5002, fallback5356
    nqp_get_sc_object $P5004, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5003, $P5004
    set fb_tmp_433, $P5003
    repr_defined $I5002, fb_tmp_433
    unless $I5002 goto if2414_else5357 
    set $P5005, fb_tmp_433["$PKGDECL"]
    set $P5007, $P5005
    goto if2414_end5358
  if2414_else5357:
    null $P5006
    set $P5007, $P5006
  if2414_end5358:
    unless_null $P5007, vivi_24155359
    nqp_get_sc_object $P5008, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5007, $P5008
  vivi_24155359:
    unless_null $P5007, vivi_24165360
    die "Contextual $*PKGDECL not found"
    box $P5009, "Contextual $*PKGDECL not found"
    set $P5007, $P5009
  vivi_24165360:
    set $P5002, $P5007
  fallback5356:
    set $S5001, $P5002
    iseq $I5001, $S5001, "grammar"
    unless $I5001 goto if2413_else5354 
    new $P5010, 'ResizablePMCArray'
    box $P5011, "NQPCursor"
    push $P5010, $P5011
    set $P5014, $P5010
    goto if2413_end5355
  if2413_else5354:
    new $P5012, 'ResizablePMCArray'
    box $P5013, "NQPMu"
    push $P5012, $P5013
    set $P5014, $P5012
  if2413_end5355:
    set $P101, $P5014
.annotate 'line', 2232
    find_dynamic_lex $P5015, "$*W"
    unless_null $P5015, fallback5361
    nqp_get_sc_object $P5017, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5016, $P5017
    set fb_tmp_434, $P5016
    repr_defined $I5003, fb_tmp_434
    unless $I5003 goto if2417_else5362 
    set $P5018, fb_tmp_434["$W"]
    set $P5020, $P5018
    goto if2417_end5363
  if2417_else5362:
    null $P5019
    set $P5020, $P5019
  if2417_end5363:
    unless_null $P5020, vivi_24185364
    nqp_get_sc_object $P5021, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5020, $P5021
  vivi_24185364:
    unless_null $P5020, vivi_24195365
    die "Contextual $*W not found"
    box $P5022, "Contextual $*W not found"
    set $P5020, $P5022
  vivi_24195365:
    set $P5015, $P5020
  fallback5361:
    find_dynamic_lex $P5023, "$*PACKAGE"
    unless_null $P5023, fallback5366
    nqp_get_sc_object $P5025, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5024, $P5025
    set fb_tmp_435, $P5024
    repr_defined $I5004, fb_tmp_435
    unless $I5004 goto if2420_else5367 
    set $P5026, fb_tmp_435["$PACKAGE"]
    set $P5028, $P5026
    goto if2420_end5368
  if2420_else5367:
    null $P5027
    set $P5028, $P5027
  if2420_end5368:
    unless_null $P5028, vivi_24215369
    nqp_get_sc_object $P5029, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5028, $P5029
  vivi_24215369:
    unless_null $P5028, vivi_24225370
    die "Contextual $*PACKAGE not found"
    box $P5030, "Contextual $*PACKAGE not found"
    set $P5028, $P5030
  vivi_24225370:
    set $P5023, $P5028
  fallback5366:
.annotate 'line', 2233
    find_dynamic_lex $P5031, "$*W"
    unless_null $P5031, fallback5371
    nqp_get_sc_object $P5033, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5032, $P5033
    set fb_tmp_436, $P5032
    repr_defined $I5005, fb_tmp_436
    unless $I5005 goto if2423_else5372 
    set $P5034, fb_tmp_436["$W"]
    set $P5036, $P5034
    goto if2423_end5373
  if2423_else5372:
    null $P5035
    set $P5036, $P5035
  if2423_end5373:
    unless_null $P5036, vivi_24245374
    nqp_get_sc_object $P5037, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5036, $P5037
  vivi_24245374:
    unless_null $P5036, vivi_24255375
    die "Contextual $*W not found"
    box $P5038, "Contextual $*W not found"
    set $P5036, $P5038
  vivi_24255375:
    set $P5031, $P5036
  fallback5371:
    $P5039 = $P5031."find_sym"($P101)
    $P5040 = $P5015."pkg_add_parent_or_role"($P5023, "set_default_parent", $P5039)
    .return ($P5040) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_470_1367388600.55005") :anon :lex :outer("cuid_295_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2238
    .param pmc _lex_param_0 
    .lex "$role", $P101 
    .lex "$role_found", $P102 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_439 
    .local pmc fb_tmp_440 
    .local pmc fb_tmp_441 
    .local pmc fb_tmp_442 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
    new $P5018, 'ExceptionHandler'
    set_label $P5018, catch_handler_24375395
    $P5018.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5018
.annotate 'line', 2241
.annotate 'line', 2242
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback5386
    nqp_get_sc_object $P5005, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5004, $P5005
    set fb_tmp_439, $P5004
    repr_defined $I5001, fb_tmp_439
    unless $I5001 goto if2431_else5387 
    set $P5006, fb_tmp_439["$W"]
    set $P5008, $P5006
    goto if2431_end5388
  if2431_else5387:
    null $P5007
    set $P5008, $P5007
  if2431_end5388:
    unless_null $P5008, vivi_24325389
    nqp_get_sc_object $P5009, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5008, $P5009
  vivi_24325389:
    unless_null $P5008, vivi_24335390
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_24335390:
    set $P5003, $P5008
  fallback5386:
    set fb_tmp_440, _lex_param_0
    repr_defined $I5002, fb_tmp_440
    unless $I5002 goto if2434_else5391 
    set $P5012, fb_tmp_440["identifier"]
    set $P5014, $P5012
    goto if2434_end5392
  if2434_else5391:
    null $P5013
    set $P5014, $P5013
  if2434_end5392:
    unless_null $P5014, vivi_24355393
    nqp_get_sc_object $P5015, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5014, $P5015
  vivi_24355393:
    repr_clone $P5011, $P5014
    $P5016 = $P5003."find_sym"($P5011)
    set $P101, $P5016
    box $P5017, 1
    set $P102, $P5017
    set $P5019, $P102
    pop_eh 
    goto skip_handler_24365394
  catch_handler_24375395:
    .get_results ($P5018) 
    set $I10001, 1
    set $P5018["handled"], $I10001
    nqp_get_sc_object $P10001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    finalize $P5018
    pop_upto_eh $P5018
    pop_eh 
    set $P5019, $P10001
    goto skip_handler_24365394
  skip_handler_24365394:
    unless $P102 goto if2438_else5396 
.annotate 'line', 2245
.annotate 'line', 2246
    find_dynamic_lex $P5020, "$*W"
    unless_null $P5020, fallback5398
    nqp_get_sc_object $P5022, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5021, $P5022
    set fb_tmp_441, $P5021
    repr_defined $I5003, fb_tmp_441
    unless $I5003 goto if2439_else5399 
    set $P5023, fb_tmp_441["$W"]
    set $P5025, $P5023
    goto if2439_end5400
  if2439_else5399:
    null $P5024
    set $P5025, $P5024
  if2439_end5400:
    unless_null $P5025, vivi_24405401
    nqp_get_sc_object $P5026, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5025, $P5026
  vivi_24405401:
    unless_null $P5025, vivi_24415402
    die "Contextual $*W not found"
    box $P5027, "Contextual $*W not found"
    set $P5025, $P5027
  vivi_24415402:
    set $P5020, $P5025
  fallback5398:
    find_dynamic_lex $P5028, "$*PACKAGE"
    unless_null $P5028, fallback5403
    nqp_get_sc_object $P5030, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5029, $P5030
    set fb_tmp_442, $P5029
    repr_defined $I5004, fb_tmp_442
    unless $I5004 goto if2442_else5404 
    set $P5031, fb_tmp_442["$PACKAGE"]
    set $P5033, $P5031
    goto if2442_end5405
  if2442_else5404:
    null $P5032
    set $P5033, $P5032
  if2442_end5405:
    unless_null $P5033, vivi_24435406
    nqp_get_sc_object $P5034, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5033, $P5034
  vivi_24435406:
    unless_null $P5033, vivi_24445407
    die "Contextual $*PACKAGE not found"
    box $P5035, "Contextual $*PACKAGE not found"
    set $P5033, $P5035
  vivi_24445407:
    set $P5028, $P5033
  fallback5403:
    $P5036 = $P5020."pkg_add_parent_or_role"($P5028, "add_role", $P101)
    set $P5040, $P5036
    goto if2438_end5397
  if2438_else5396:
.annotate 'line', 2248
.annotate 'line', 2249
    find_lex $P5037, "$/"
    $P5038 = $P5037."CURSOR"()
    set $S5003, _lex_param_0
    concat $S5002, "Could not find role '", $S5003
    concat $S5001, $S5002, "'"
    $P5039 = $P5038."panic"($S5001)
    set $P5040, $P5039
  if2438_end5397:
    .return ($P5040) 
.end
.HLL "nqp"
.namespace []
.sub "role_params" :subid("cuid_296_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2270
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5011 = 'cuid_471_1367388600.55005' 
    capture_lex $P5011 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_452 
    unless_null _lex_param_1, fallback5461
    nqp_get_sc_object $P5004, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5004
  fallback5461:
    set fb_tmp_452, _lex_param_1
    repr_defined $I5001, fb_tmp_452
    unless $I5001 goto if2473_else5459 
    set $P5005, fb_tmp_452["variable"]
    set $P5007, $P5005
    goto if2473_end5460
  if2473_else5459:
    null $P5006
    set $P5007, $P5006
  if2473_end5460:
    unless_null $P5007, vivi_24745462
    nqp_get_sc_object $P5008, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5007, $P5008
  vivi_24745462:
    set $P5001, $P5007
    iter $P5003, $P5007
  for_next5468:
    unless $P5003, for_done5470
    shift $P5010, $P5003
  for_redo5469:
    .const 'Sub' $P5009 = 'cuid_471_1367388600.55005' 
    capture_lex $P5009
    $P5001 = $P5009($P5010)
    goto for_next5468
  for_done5470:
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_471_1367388600.55005") :anon :lex :outer("cuid_296_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2271
    .param pmc _lex_param_0 
    .lex "$var", $P101 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_453 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
.annotate 'line', 2272
    $P5002 = _lex_param_0."ast"()
    set $P101, $P5002
.annotate 'line', 2273
    $P101."scope"("lexical")
.annotate 'line', 2274
    $P101."decl"("param")
.annotate 'line', 2275
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback5463
    nqp_get_sc_object $P5005, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5004, $P5005
    set fb_tmp_453, $P5004
    repr_defined $I5001, fb_tmp_453
    unless $I5001 goto if2475_else5464 
    set $P5006, fb_tmp_453["$W"]
    set $P5008, $P5006
    goto if2475_end5465
  if2475_else5464:
    null $P5007
    set $P5008, $P5007
  if2475_end5465:
    unless_null $P5008, vivi_24765466
    nqp_get_sc_object $P5009, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5008, $P5009
  vivi_24765466:
    unless_null $P5008, vivi_24775467
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_24775467:
    set $P5003, $P5008
  fallback5463:
    $P5011 = $P5003."cur_lexpad"()
    $P5012 = $P101."name"()
    $P5013 = $P5011."symbol"($P5012, "lexical" :named("scope"))
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<my>" :subid("cuid_297_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2279
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_454 
    unless_null _lex_param_1, fallback5473
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback5473:
    set fb_tmp_454, _lex_param_1
    repr_defined $I5001, fb_tmp_454
    unless $I5001 goto if2478_else5471 
    set $P5002, fb_tmp_454["scoped"]
    set $P5004, $P5002
    goto if2478_end5472
  if2478_else5471:
    null $P5003
    set $P5004, $P5003
  if2478_end5472:
    unless_null $P5004, vivi_24795474
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_24795474:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<our>" :subid("cuid_298_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2280
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_455 
    unless_null _lex_param_1, fallback5477
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback5477:
    set fb_tmp_455, _lex_param_1
    repr_defined $I5001, fb_tmp_455
    unless $I5001 goto if2480_else5475 
    set $P5002, fb_tmp_455["scoped"]
    set $P5004, $P5002
    goto if2480_end5476
  if2480_else5475:
    null $P5003
    set $P5004, $P5003
  if2480_end5476:
    unless_null $P5004, vivi_24815478
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_24815478:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<has>" :subid("cuid_299_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2281
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_456 
    unless_null _lex_param_1, fallback5481
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback5481:
    set fb_tmp_456, _lex_param_1
    repr_defined $I5001, fb_tmp_456
    unless $I5001 goto if2482_else5479 
    set $P5002, fb_tmp_456["scoped"]
    set $P5004, $P5002
    goto if2482_end5480
  if2482_else5479:
    null $P5003
    set $P5004, $P5003
  if2482_end5480:
    unless_null $P5004, vivi_24835482
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_24835482:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "scoped" :subid("cuid_300_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2283
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_457 
    .local pmc fb_tmp_458 
    .local pmc fb_tmp_459 
    .local pmc fb_tmp_460 
    .local pmc fb_tmp_461 
.annotate 'line', 2284
    unless_null _lex_param_1, fallback5487
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback5487:
    set fb_tmp_457, _lex_param_1
    repr_defined $I5001, fb_tmp_457
    unless $I5001 goto if2485_else5485 
    set $P5002, fb_tmp_457["declarator"]
    set $P5004, $P5002
    goto if2485_end5486
  if2485_else5485:
    null $P5003
    set $P5004, $P5003
  if2485_end5486:
    unless_null $P5004, vivi_24865488
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_24865488:
    unless $P5004 goto if2484_else5483 
    unless_null _lex_param_1, fallback5491
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5006
  fallback5491:
    set fb_tmp_458, _lex_param_1
    repr_defined $I5002, fb_tmp_458
    unless $I5002 goto if2487_else5489 
    set $P5007, fb_tmp_458["declarator"]
    set $P5009, $P5007
    goto if2487_end5490
  if2487_else5489:
    null $P5008
    set $P5009, $P5008
  if2487_end5490:
    unless_null $P5009, vivi_24885492
    nqp_get_sc_object $P5010, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5009, $P5010
  vivi_24885492:
    $P5011 = $P5009."ast"()
    set $P5030, $P5011
    goto if2484_end5484
  if2484_else5483:
    unless_null _lex_param_1, fallback5497
    nqp_get_sc_object $P5012, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5012
  fallback5497:
    set fb_tmp_459, _lex_param_1
    repr_defined $I5003, fb_tmp_459
    unless $I5003 goto if2490_else5495 
    set $P5013, fb_tmp_459["multi_declarator"]
    set $P5015, $P5013
    goto if2490_end5496
  if2490_else5495:
    null $P5014
    set $P5015, $P5014
  if2490_end5496:
    unless_null $P5015, vivi_24915498
    nqp_get_sc_object $P5016, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5015, $P5016
  vivi_24915498:
    unless $P5015 goto if2489_else5493 
.annotate 'line', 2285
    unless_null _lex_param_1, fallback5501
    nqp_get_sc_object $P5017, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5017
  fallback5501:
    set fb_tmp_460, _lex_param_1
    repr_defined $I5004, fb_tmp_460
    unless $I5004 goto if2492_else5499 
    set $P5018, fb_tmp_460["multi_declarator"]
    set $P5020, $P5018
    goto if2492_end5500
  if2492_else5499:
    null $P5019
    set $P5020, $P5019
  if2492_end5500:
    unless_null $P5020, vivi_24935502
    nqp_get_sc_object $P5021, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5020, $P5021
  vivi_24935502:
    $P5022 = $P5020."ast"()
    set $P5029, $P5022
    goto if2489_end5494
  if2489_else5493:
.annotate 'line', 2286
    unless_null _lex_param_1, fallback5505
    nqp_get_sc_object $P5023, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5023
  fallback5505:
    set fb_tmp_461, _lex_param_1
    repr_defined $I5005, fb_tmp_461
    unless $I5005 goto if2494_else5503 
    set $P5024, fb_tmp_461["package_declarator"]
    set $P5026, $P5024
    goto if2494_end5504
  if2494_else5503:
    null $P5025
    set $P5026, $P5025
  if2494_end5504:
    unless_null $P5026, vivi_24955506
    nqp_get_sc_object $P5027, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5026, $P5027
  vivi_24955506:
    $P5028 = $P5026."ast"()
    set $P5029, $P5028
  if2489_end5494:
    set $P5030, $P5029
  if2484_end5484:
    $P5031 = _lex_param_1."!make"($P5030)
    .return ($P5031) 
.end
.HLL "nqp"
.namespace []
.sub "declarator" :subid("cuid_301_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2289
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_462 
    .local pmc fb_tmp_463 
    .local pmc fb_tmp_464 
.annotate 'line', 2290
    unless_null _lex_param_1, fallback5511
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback5511:
    set fb_tmp_462, _lex_param_1
    repr_defined $I5001, fb_tmp_462
    unless $I5001 goto if2497_else5509 
    set $P5002, fb_tmp_462["routine_declarator"]
    set $P5004, $P5002
    goto if2497_end5510
  if2497_else5509:
    null $P5003
    set $P5004, $P5003
  if2497_end5510:
    unless_null $P5004, vivi_24985512
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_24985512:
    unless $P5004 goto if2496_else5507 
.annotate 'line', 2291
    unless_null _lex_param_1, fallback5515
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5006
  fallback5515:
    set fb_tmp_463, _lex_param_1
    repr_defined $I5002, fb_tmp_463
    unless $I5002 goto if2499_else5513 
    set $P5007, fb_tmp_463["routine_declarator"]
    set $P5009, $P5007
    goto if2499_end5514
  if2499_else5513:
    null $P5008
    set $P5009, $P5008
  if2499_end5514:
    unless_null $P5009, vivi_25005516
    nqp_get_sc_object $P5010, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5009, $P5010
  vivi_25005516:
    $P5011 = $P5009."ast"()
    set $P5018, $P5011
    goto if2496_end5508
  if2496_else5507:
.annotate 'line', 2292
    unless_null _lex_param_1, fallback5519
    nqp_get_sc_object $P5012, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5012
  fallback5519:
    set fb_tmp_464, _lex_param_1
    repr_defined $I5003, fb_tmp_464
    unless $I5003 goto if2501_else5517 
    set $P5013, fb_tmp_464["variable_declarator"]
    set $P5015, $P5013
    goto if2501_end5518
  if2501_else5517:
    null $P5014
    set $P5015, $P5014
  if2501_end5518:
    unless_null $P5015, vivi_25025520
    nqp_get_sc_object $P5016, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5015, $P5016
  vivi_25025520:
    $P5017 = $P5015."ast"()
    set $P5018, $P5017
  if2496_end5508:
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<multi>" :subid("cuid_302_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2295
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_465 
    .local pmc fb_tmp_466 
    .local pmc fb_tmp_467 
    unless_null _lex_param_1, fallback5525
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback5525:
    set fb_tmp_465, _lex_param_1
    repr_defined $I5001, fb_tmp_465
    unless $I5001 goto if2504_else5523 
    set $P5002, fb_tmp_465["declarator"]
    set $P5004, $P5002
    goto if2504_end5524
  if2504_else5523:
    null $P5003
    set $P5004, $P5003
  if2504_end5524:
    unless_null $P5004, vivi_25055526
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_25055526:
    unless $P5004 goto if2503_else5521 
    unless_null _lex_param_1, fallback5529
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5006
  fallback5529:
    set fb_tmp_466, _lex_param_1
    repr_defined $I5002, fb_tmp_466
    unless $I5002 goto if2506_else5527 
    set $P5007, fb_tmp_466["declarator"]
    set $P5009, $P5007
    goto if2506_end5528
  if2506_else5527:
    null $P5008
    set $P5009, $P5008
  if2506_end5528:
    unless_null $P5009, vivi_25075530
    nqp_get_sc_object $P5010, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5009, $P5010
  vivi_25075530:
    $P5011 = $P5009."ast"()
    set $P5018, $P5011
    goto if2503_end5522
  if2503_else5521:
    unless_null _lex_param_1, fallback5533
    nqp_get_sc_object $P5012, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5012
  fallback5533:
    set fb_tmp_467, _lex_param_1
    repr_defined $I5003, fb_tmp_467
    unless $I5003 goto if2508_else5531 
    set $P5013, fb_tmp_467["routine_def"]
    set $P5015, $P5013
    goto if2508_end5532
  if2508_else5531:
    null $P5014
    set $P5015, $P5014
  if2508_end5532:
    unless_null $P5015, vivi_25095534
    nqp_get_sc_object $P5016, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5015, $P5016
  vivi_25095534:
    $P5017 = $P5015."ast"()
    set $P5018, $P5017
  if2503_end5522:
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<proto>" :subid("cuid_303_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2296
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_468 
    .local pmc fb_tmp_469 
    .local pmc fb_tmp_470 
    unless_null _lex_param_1, fallback5539
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback5539:
    set fb_tmp_468, _lex_param_1
    repr_defined $I5001, fb_tmp_468
    unless $I5001 goto if2511_else5537 
    set $P5002, fb_tmp_468["declarator"]
    set $P5004, $P5002
    goto if2511_end5538
  if2511_else5537:
    null $P5003
    set $P5004, $P5003
  if2511_end5538:
    unless_null $P5004, vivi_25125540
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_25125540:
    unless $P5004 goto if2510_else5535 
    unless_null _lex_param_1, fallback5543
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5006
  fallback5543:
    set fb_tmp_469, _lex_param_1
    repr_defined $I5002, fb_tmp_469
    unless $I5002 goto if2513_else5541 
    set $P5007, fb_tmp_469["declarator"]
    set $P5009, $P5007
    goto if2513_end5542
  if2513_else5541:
    null $P5008
    set $P5009, $P5008
  if2513_end5542:
    unless_null $P5009, vivi_25145544
    nqp_get_sc_object $P5010, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5009, $P5010
  vivi_25145544:
    $P5011 = $P5009."ast"()
    set $P5018, $P5011
    goto if2510_end5536
  if2510_else5535:
    unless_null _lex_param_1, fallback5547
    nqp_get_sc_object $P5012, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5012
  fallback5547:
    set fb_tmp_470, _lex_param_1
    repr_defined $I5003, fb_tmp_470
    unless $I5003 goto if2515_else5545 
    set $P5013, fb_tmp_470["routine_def"]
    set $P5015, $P5013
    goto if2515_end5546
  if2515_else5545:
    null $P5014
    set $P5015, $P5014
  if2515_end5546:
    unless_null $P5015, vivi_25165548
    nqp_get_sc_object $P5016, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5015, $P5016
  vivi_25165548:
    $P5017 = $P5015."ast"()
    set $P5018, $P5017
  if2510_end5536:
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<null>" :subid("cuid_304_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2297
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_471 
    unless_null _lex_param_1, fallback5551
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback5551:
    set fb_tmp_471, _lex_param_1
    repr_defined $I5001, fb_tmp_471
    unless $I5001 goto if2517_else5549 
    set $P5002, fb_tmp_471["declarator"]
    set $P5004, $P5002
    goto if2517_end5550
  if2517_else5549:
    null $P5003
    set $P5004, $P5003
  if2517_end5550:
    unless_null $P5004, vivi_25185552
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_25185552:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "variable_declarator" :subid("cuid_305_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2300
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5095 = 'cuid_472_1367388600.55005' 
    capture_lex $P5095 
    .const 'Sub' $P5095 = 'cuid_474_1367388600.55005' 
    capture_lex $P5095 
    .const 'Sub' $P5095 = 'cuid_475_1367388600.55005' 
    capture_lex $P5095 
    .lex "$past", $P101 
    .lex "$sigil", $P102 
    .lex "$name", $P103 
    .lex "$BLOCK", $P104 
    .lex "$*DECLARAND_ATTR", $P105 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_472 
    .local pmc fb_tmp_473 
    .local pmc fb_tmp_474 
    .local pmc fb_tmp_475 
    .local pmc fb_tmp_476 
    .local pmc fb_tmp_477 
    .local pmc fb_tmp_493 
    .local pmc fb_tmp_494 
    .local pmc fb_tmp_495 
    .local pmc fb_tmp_501 
    .local pmc fb_tmp_502 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P105, $P5005
.annotate 'line', 2301
    unless_null _lex_param_1, fallback5555
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5006
  fallback5555:
    set fb_tmp_472, _lex_param_1
    repr_defined $I5001, fb_tmp_472
    unless $I5001 goto if2519_else5553 
    set $P5007, fb_tmp_472["variable"]
    set $P5009, $P5007
    goto if2519_end5554
  if2519_else5553:
    null $P5008
    set $P5009, $P5008
  if2519_end5554:
    unless_null $P5009, vivi_25205556
    nqp_get_sc_object $P5010, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5009, $P5010
  vivi_25205556:
    $P5011 = $P5009."ast"()
    set $P101, $P5011
    unless_null _lex_param_1, fallback5561
    nqp_get_sc_object $P5012, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5012
  fallback5561:
    set fb_tmp_474, _lex_param_1
    repr_defined $I5003, fb_tmp_474
    unless $I5003 goto if2522_else5559 
    set $P5013, fb_tmp_474["variable"]
    set $P5015, $P5013
    goto if2522_end5560
  if2522_else5559:
    null $P5014
    set $P5015, $P5014
  if2522_end5560:
    unless_null $P5015, vivi_25235562
    nqp_get_sc_object $P5016, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5015, $P5016
  vivi_25235562:
    set fb_tmp_473, $P5015
    repr_defined $I5002, fb_tmp_473
    unless $I5002 goto if2521_else5557 
    set $P5017, fb_tmp_473["sigil"]
    set $P5019, $P5017
    goto if2521_end5558
  if2521_else5557:
    null $P5018
    set $P5019, $P5018
  if2521_end5558:
    unless_null $P5019, vivi_25245563
    nqp_get_sc_object $P5020, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5019, $P5020
  vivi_25245563:
    set $P102, $P5019
.annotate 'line', 2303
    $P5021 = $P101."name"()
    set $P103, $P5021
.annotate 'line', 2304
    find_dynamic_lex $P5022, "$*W"
    unless_null $P5022, fallback5564
    nqp_get_sc_object $P5024, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5023, $P5024
    set fb_tmp_475, $P5023
    repr_defined $I5004, fb_tmp_475
    unless $I5004 goto if2525_else5565 
    set $P5025, fb_tmp_475["$W"]
    set $P5027, $P5025
    goto if2525_end5566
  if2525_else5565:
    null $P5026
    set $P5027, $P5026
  if2525_end5566:
    unless_null $P5027, vivi_25265567
    nqp_get_sc_object $P5028, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5027, $P5028
  vivi_25265567:
    unless_null $P5027, vivi_25275568
    die "Contextual $*W not found"
    box $P5029, "Contextual $*W not found"
    set $P5027, $P5029
  vivi_25275568:
    set $P5022, $P5027
  fallback5564:
    $P5030 = $P5022."cur_lexpad"()
    set $P104, $P5030
    set $P5039, $P103
    unless $P103 goto if2532_end5577 
.annotate 'line', 2306
    $P5038 = $P104."symbol"($P103)
    set $P5039, $P5038
  if2532_end5577:
    unless $P5039 goto if2531_end5575 
.annotate 'line', 2307
    $P5040 = _lex_param_1."CURSOR"()
    $P5041 = $P5040."panic"("Redeclaration of symbol ", $P103)
  if2531_end5575:
    find_dynamic_lex $P5042, "$*SCOPE"
    unless_null $P5042, fallback5580
    nqp_get_sc_object $P5044, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5043, $P5044
    set fb_tmp_477, $P5043
    repr_defined $I5007, fb_tmp_477
    unless $I5007 goto if2534_else5581 
    set $P5045, fb_tmp_477["$SCOPE"]
    set $P5047, $P5045
    goto if2534_end5582
  if2534_else5581:
    null $P5046
    set $P5047, $P5046
  if2534_end5582:
    unless_null $P5047, vivi_25355583
    nqp_get_sc_object $P5048, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5047, $P5048
  vivi_25355583:
    unless_null $P5047, vivi_25365584
    die "Contextual $*SCOPE not found"
    box $P5049, "Contextual $*SCOPE not found"
    set $P5047, $P5049
  vivi_25365584:
    set $P5042, $P5047
  fallback5580:
    set $S5001, $P5042
    iseq $I5006, $S5001, "has"
    unless $I5006 goto if2533_else5578 
    .const 'Sub' $P5050 = 'cuid_472_1367388600.55005' 
    capture_lex $P5050
    $P5051 = $P5050()
    goto if2533_end5579
  if2533_else5578:
    find_dynamic_lex $P5052, "$*SCOPE"
    unless_null $P5052, fallback5665
    nqp_get_sc_object $P5054, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5053, $P5054
    set fb_tmp_493, $P5053
    repr_defined $I5009, fb_tmp_493
    unless $I5009 goto if2584_else5666 
    set $P5055, fb_tmp_493["$SCOPE"]
    set $P5057, $P5055
    goto if2584_end5667
  if2584_else5666:
    null $P5056
    set $P5057, $P5056
  if2584_end5667:
    unless_null $P5057, vivi_25855668
    nqp_get_sc_object $P5058, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5057, $P5058
  vivi_25855668:
    unless_null $P5057, vivi_25865669
    die "Contextual $*SCOPE not found"
    box $P5059, "Contextual $*SCOPE not found"
    set $P5057, $P5059
  vivi_25865669:
    set $P5052, $P5057
  fallback5665:
    set $S5002, $P5052
    iseq $I5008, $S5002, "our"
    unless $I5008 goto if2583_else5663 
.annotate 'line', 2337
    unless_null _lex_param_1, fallback5674
    nqp_get_sc_object $P5060, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5060
  fallback5674:
    set fb_tmp_494, _lex_param_1
    repr_defined $I5010, fb_tmp_494
    unless $I5010 goto if2588_else5672 
    set $P5061, fb_tmp_494["typename"]
    set $P5063, $P5061
    goto if2588_end5673
  if2588_else5672:
    null $P5062
    set $P5063, $P5062
  if2588_end5673:
    unless_null $P5063, vivi_25895675
    nqp_get_sc_object $P5064, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5063, $P5064
  vivi_25895675:
    unless $P5063 goto if2587_end5671 
.annotate 'line', 2341
.annotate 'line', 2342
    $P5065 = _lex_param_1."CURSOR"()
    $P5066 = $P5065."panic"("Cannot put types on our-scoped variables")
  if2587_end5671:
    unless_null _lex_param_1, fallback5678
    nqp_get_sc_object $P5067, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5067
  fallback5678:
    set fb_tmp_495, _lex_param_1
    repr_defined $I5011, fb_tmp_495
    unless $I5011 goto if2590_else5676 
    set $P5068, fb_tmp_495["variable"]
    set $P5070, $P5068
    goto if2590_end5677
  if2590_else5676:
    null $P5069
    set $P5070, $P5069
  if2590_end5677:
    unless_null $P5070, vivi_25915679
    nqp_get_sc_object $P5071, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5070, $P5071
  vivi_25915679:
    set $S5003, $P5070
    box $P5072, $S5003
    set $P103, $P5072
.annotate 'line', 2345
    new $P5073, 'ResizablePMCArray'
    push $P5073, $P103
    $P5074 = "&lexical_package_lookup"($P5073, _lex_param_1)
    set $P101, $P5074
.annotate 'line', 2346
    $P5075 = $P104."symbol"($P103, "package" :named("scope"))
    set $P5078, $P5075
    goto if2583_end5664
  if2583_else5663:
    .const 'Sub' $P5076 = 'cuid_474_1367388600.55005' 
    capture_lex $P5076
    $P5077 = $P5076()
    set $P5078, $P5077
  if2583_end5664:
  if2533_end5579:
    unless_null _lex_param_1, fallback5709
    nqp_get_sc_object $P5079, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5079
  fallback5709:
    set fb_tmp_501, _lex_param_1
    repr_defined $I5012, fb_tmp_501
    unless $I5012 goto if2607_else5707 
    set $P5080, fb_tmp_501["trait"]
    set $P5082, $P5080
    goto if2607_end5708
  if2607_else5707:
    null $P5081
    set $P5082, $P5081
  if2607_end5708:
    unless_null $P5082, vivi_26085710
    nqp_get_sc_object $P5083, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5082, $P5083
  vivi_26085710:
    unless $P5082 goto if2606_end5706 
.annotate 'line', 2375
    unless_null _lex_param_1, fallback5713
    nqp_get_sc_object $P5087, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5087
  fallback5713:
    set fb_tmp_502, _lex_param_1
    repr_defined $I5013, fb_tmp_502
    unless $I5013 goto if2609_else5711 
    set $P5088, fb_tmp_502["trait"]
    set $P5090, $P5088
    goto if2609_end5712
  if2609_else5711:
    null $P5089
    set $P5090, $P5089
  if2609_end5712:
    unless_null $P5090, vivi_26105714
    nqp_get_sc_object $P5091, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5090, $P5091
  vivi_26105714:
    set $P5084, $P5090
    iter $P5086, $P5090
  for_next5715:
    unless $P5086, for_done5717
    shift $P5093, $P5086
  for_redo5716:
    .const 'Sub' $P5092 = 'cuid_475_1367388600.55005' 
    capture_lex $P5092
    $P5084 = $P5092($P5093)
    goto for_next5715
  for_done5717:
  if2606_end5706:
.annotate 'line', 2379
    $P5094 = _lex_param_1."!make"($P101)
    .return ($P5094) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_472_1367388600.55005") :anon :lex :outer("cuid_305_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2309
    .lex "%lit_args", $P101 
    .lex "%obj_args", $P102 
    .local pmc fb_tmp_478 
    .local pmc pkg_viv_tmp_44 
    .local pmc fb_tmp_479 
    .local pmc fb_tmp_480 
    .local pmc fb_tmp_481 
    .local pmc fb_tmp_482 
    .local pmc fb_tmp_483 
    .local pmc fb_tmp_484 
    .local pmc fb_tmp_485 
    .local pmc fb_tmp_486 
    .local pmc fb_tmp_487 
    .local pmc fb_tmp_488 
    .local pmc fb_tmp_489 
    .local pmc fb_tmp_490 
    .local pmc fb_tmp_491 
    .local pmc pkg_viv_tmp_45 
    .local pmc fb_tmp_492 
    new $P5001, 'Hash'
    set $P101, $P5001
    new $P5002, 'Hash'
    set $P102, $P5002
    find_dynamic_lex $P5003, "%*HOW"
    unless_null $P5003, fallback5587
    nqp_get_sc_object $P5005, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5004, $P5005
    set pkg_viv_tmp_44, $P5004
    set fb_tmp_478, pkg_viv_tmp_44
    repr_defined $I5002, fb_tmp_478
    unless $I5002 goto if2538_else5588 
    set $P5006, fb_tmp_478["%HOW"]
    set $P5008, $P5006
    goto if2538_end5589
  if2538_else5588:
    null $P5007
    set $P5008, $P5007
  if2538_end5589:
    unless_null $P5008, vivi_25395590
    new $P5009, 'Hash'
    set pkg_viv_tmp_44["%HOW"], $P5009
    set $P5008, $P5009
  vivi_25395590:
    unless_null $P5008, vivi_25405591
    die "Contextual %*HOW not found"
    box $P5010, "Contextual %*HOW not found"
    set $P5008, $P5010
  vivi_25405591:
    set $P5003, $P5008
  fallback5587:
    find_dynamic_lex $P5011, "$*PKGDECL"
    unless_null $P5011, fallback5592
    nqp_get_sc_object $P5013, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5012, $P5013
    set fb_tmp_479, $P5012
    repr_defined $I5003, fb_tmp_479
    unless $I5003 goto if2541_else5593 
    set $P5014, fb_tmp_479["$PKGDECL"]
    set $P5016, $P5014
    goto if2541_end5594
  if2541_else5593:
    null $P5015
    set $P5016, $P5015
  if2541_end5594:
    unless_null $P5016, vivi_25425595
    nqp_get_sc_object $P5017, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5016, $P5017
  vivi_25425595:
    unless_null $P5016, vivi_25435596
    die "Contextual $*PKGDECL not found"
    box $P5018, "Contextual $*PKGDECL not found"
    set $P5016, $P5018
  vivi_25435596:
    set $P5011, $P5016
  fallback5592:
    set $S5002, $P5011
    concat $S5001, $S5002, "-attr"
    exists $I5001, $P5003[$S5001]
    if $I5001 goto unless2537_end5586 
.annotate 'line', 2311
.annotate 'line', 2312
    find_lex $P5019, "$/"
    $P5020 = $P5019."CURSOR"()
    find_dynamic_lex $P5021, "$*PKGDECL"
    unless_null $P5021, fallback5597
    nqp_get_sc_object $P5023, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5022, $P5023
    set fb_tmp_480, $P5022
    repr_defined $I5004, fb_tmp_480
    unless $I5004 goto if2544_else5598 
    set $P5024, fb_tmp_480["$PKGDECL"]
    set $P5026, $P5024
    goto if2544_end5599
  if2544_else5598:
    null $P5025
    set $P5026, $P5025
  if2544_end5599:
    unless_null $P5026, vivi_25455600
    nqp_get_sc_object $P5027, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5026, $P5027
  vivi_25455600:
    unless_null $P5026, vivi_25465601
    die "Contextual $*PKGDECL not found"
    box $P5028, "Contextual $*PKGDECL not found"
    set $P5026, $P5028
  vivi_25465601:
    set $P5021, $P5026
  fallback5597:
    set $S5004, $P5021
    concat $S5003, $S5004, " packages do not support attributes"
    $P5029 = $P5020."panic"($S5003)
  unless2537_end5586:
    find_lex $P5030, "$name"
    set $P101["name"], $P5030
    find_lex $P5031, "$/"
    unless_null $P5031, fallback5606
    nqp_get_sc_object $P5032, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5031, $P5032
  fallback5606:
    set fb_tmp_481, $P5031
    repr_defined $I5005, fb_tmp_481
    unless $I5005 goto if2548_else5604 
    set $P5033, fb_tmp_481["typename"]
    set $P5035, $P5033
    goto if2548_end5605
  if2548_else5604:
    null $P5034
    set $P5035, $P5034
  if2548_end5605:
    unless_null $P5035, vivi_25495607
    nqp_get_sc_object $P5036, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5035, $P5036
  vivi_25495607:
    unless $P5035 goto if2547_end5603 
.annotate 'line', 2319
.annotate 'line', 2320
    find_dynamic_lex $P5037, "$*W"
    unless_null $P5037, fallback5608
    nqp_get_sc_object $P5039, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5038, $P5039
    set fb_tmp_482, $P5038
    repr_defined $I5006, fb_tmp_482
    unless $I5006 goto if2550_else5609 
    set $P5040, fb_tmp_482["$W"]
    set $P5042, $P5040
    goto if2550_end5610
  if2550_else5609:
    null $P5041
    set $P5042, $P5041
  if2550_end5610:
    unless_null $P5042, vivi_25515611
    nqp_get_sc_object $P5043, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5042, $P5043
  vivi_25515611:
    unless_null $P5042, vivi_25525612
    die "Contextual $*W not found"
    box $P5044, "Contextual $*W not found"
    set $P5042, $P5044
  vivi_25525612:
    set $P5037, $P5042
  fallback5608:
    new $P5045, 'ResizablePMCArray'
    find_lex $P5046, "$/"
    unless_null $P5046, fallback5617
    nqp_get_sc_object $P5047, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5046, $P5047
  fallback5617:
    set fb_tmp_484, $P5046
    repr_defined $I5008, fb_tmp_484
    unless $I5008 goto if2554_else5615 
    set $P5048, fb_tmp_484["typename"]
    set $P5050, $P5048
    goto if2554_end5616
  if2554_else5615:
    null $P5049
    set $P5050, $P5049
  if2554_end5616:
    unless_null $P5050, vivi_25555618
    nqp_get_sc_object $P5051, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5050, $P5051
  vivi_25555618:
    set fb_tmp_483, $P5050
    repr_defined $I5007, fb_tmp_483
    unless $I5007 goto if2553_else5613 
    set $P5052, fb_tmp_483[0]
    set $P5054, $P5052
    goto if2553_end5614
  if2553_else5613:
    null $P5053
    set $P5054, $P5053
  if2553_end5614:
    unless_null $P5054, vivi_25565619
    nqp_get_sc_object $P5055, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5054, $P5055
  vivi_25565619:
    set $S5005, $P5054
    box $P5056, $S5005
    push $P5045, $P5056
    $P5057 = $P5037."find_sym"($P5045)
    set $P102["type"], $P5057
  if2547_end5603:
    find_lex $P5058, "$sigil"
    set $S5006, $P5058
    iseq $I5009, $S5006, "$"
    set $I5011, $I5009
    if $I5009 goto unless2558_end5623 
    find_lex $P5059, "$sigil"
    set $S5007, $P5059
    iseq $I5010, $S5007, "&"
    set $I5011, $I5010
  unless2558_end5623:
    unless $I5011 goto if2557_end5621 
.annotate 'line', 2322
    find_lex $P5060, "$/"
    unless_null $P5060, fallback5628
    nqp_get_sc_object $P5061, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5060, $P5061
  fallback5628:
    set fb_tmp_485, $P5060
    repr_defined $I5012, fb_tmp_485
    unless $I5012 goto if2560_else5626 
    set $P5062, fb_tmp_485["typename"]
    set $P5064, $P5062
    goto if2560_end5627
  if2560_else5626:
    null $P5063
    set $P5064, $P5063
  if2560_end5627:
    unless_null $P5064, vivi_25615629
    nqp_get_sc_object $P5065, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5064, $P5065
  vivi_25615629:
    unless $P5064 goto if2559_else5624 
.annotate 'line', 2323
    set fb_tmp_486, $P102
    repr_defined $I5013, fb_tmp_486
    unless $I5013 goto if2562_else5630 
    set $P5066, fb_tmp_486["type"]
    set $P5068, $P5066
    goto if2562_end5631
  if2562_else5630:
    null $P5067
    set $P5068, $P5067
  if2562_end5631:
    unless_null $P5068, vivi_25635632
    nqp_get_sc_object $P5069, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5068, $P5069
  vivi_25635632:
    set $P102["default"], $P5068
    set $P5083, $P5068
    goto if2559_end5625
  if2559_else5624:
.annotate 'line', 2326
    new $P5081, 'ExceptionHandler'
    set_label $P5081, catch_handler_25685639
    $P5081.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5081
.annotate 'line', 2327
    find_dynamic_lex $P5070, "$*W"
    unless_null $P5070, fallback5633
    nqp_get_sc_object $P5072, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5071, $P5072
    set fb_tmp_487, $P5071
    repr_defined $I5014, fb_tmp_487
    unless $I5014 goto if2564_else5634 
    set $P5073, fb_tmp_487["$W"]
    set $P5075, $P5073
    goto if2564_end5635
  if2564_else5634:
    null $P5074
    set $P5075, $P5074
  if2564_end5635:
    unless_null $P5075, vivi_25655636
    nqp_get_sc_object $P5076, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5075, $P5076
  vivi_25655636:
    unless_null $P5075, vivi_25665637
    die "Contextual $*W not found"
    box $P5077, "Contextual $*W not found"
    set $P5075, $P5077
  vivi_25665637:
    set $P5070, $P5075
  fallback5633:
    new $P5078, 'ResizablePMCArray'
    box $P5079, "NQPMu"
    push $P5078, $P5079
    $P5080 = $P5070."find_sym"($P5078)
    set $P102["default"], $P5080
    set $P5082, $P5080
    pop_eh 
    goto skip_handler_25675638
  catch_handler_25685639:
    .get_results ($P5081) 
    set $I10001, 1
    set $P5081["handled"], $I10001
    nqp_get_sc_object $P10001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    finalize $P5081
    pop_upto_eh $P5081
    pop_eh 
    set $P5082, $P10001
    goto skip_handler_25675638
  skip_handler_25675638:
    set $P5083, $P5082
  if2559_end5625:
  if2557_end5621:
.annotate 'line', 2332
    find_dynamic_lex $P5084, "$*W"
    unless_null $P5084, fallback5640
    nqp_get_sc_object $P5086, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5085, $P5086
    set fb_tmp_488, $P5085
    repr_defined $I5015, fb_tmp_488
    unless $I5015 goto if2569_else5641 
    set $P5087, fb_tmp_488["$W"]
    set $P5089, $P5087
    goto if2569_end5642
  if2569_else5641:
    null $P5088
    set $P5089, $P5088
  if2569_end5642:
    unless_null $P5089, vivi_25705643
    nqp_get_sc_object $P5090, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5089, $P5090
  vivi_25705643:
    unless_null $P5089, vivi_25715644
    die "Contextual $*W not found"
    box $P5091, "Contextual $*W not found"
    set $P5089, $P5091
  vivi_25715644:
    set $P5084, $P5089
  fallback5640:
    find_dynamic_lex $P5092, "$*PACKAGE"
    unless_null $P5092, fallback5645
    nqp_get_sc_object $P5094, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5093, $P5094
    set fb_tmp_489, $P5093
    repr_defined $I5016, fb_tmp_489
    unless $I5016 goto if2572_else5646 
    set $P5095, fb_tmp_489["$PACKAGE"]
    set $P5097, $P5095
    goto if2572_end5647
  if2572_else5646:
    null $P5096
    set $P5097, $P5096
  if2572_end5647:
    unless_null $P5097, vivi_25735648
    nqp_get_sc_object $P5098, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5097, $P5098
  vivi_25735648:
    unless_null $P5097, vivi_25745649
    die "Contextual $*PACKAGE not found"
    box $P5099, "Contextual $*PACKAGE not found"
    set $P5097, $P5099
  vivi_25745649:
    set $P5092, $P5097
  fallback5645:
    find_dynamic_lex $P5100, "%*HOW"
    unless_null $P5100, fallback5652
    nqp_get_sc_object $P5102, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5101, $P5102
    set pkg_viv_tmp_45, $P5101
    set fb_tmp_491, pkg_viv_tmp_45
    repr_defined $I5018, fb_tmp_491
    unless $I5018 goto if2576_else5653 
    set $P5103, fb_tmp_491["%HOW"]
    set $P5105, $P5103
    goto if2576_end5654
  if2576_else5653:
    null $P5104
    set $P5105, $P5104
  if2576_end5654:
    unless_null $P5105, vivi_25775655
    new $P5106, 'Hash'
    set pkg_viv_tmp_45["%HOW"], $P5106
    set $P5105, $P5106
  vivi_25775655:
    unless_null $P5105, vivi_25785656
    die "Contextual %*HOW not found"
    box $P5107, "Contextual %*HOW not found"
    set $P5105, $P5107
  vivi_25785656:
    set $P5100, $P5105
  fallback5652:
    set fb_tmp_490, $P5100
    repr_defined $I5017, fb_tmp_490
    unless $I5017 goto if2575_else5650 
    find_dynamic_lex $P5109, "$*PKGDECL"
    unless_null $P5109, fallback5657
    nqp_get_sc_object $P5111, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5110, $P5111
    set fb_tmp_492, $P5110
    repr_defined $I5019, fb_tmp_492
    unless $I5019 goto if2579_else5658 
    set $P5112, fb_tmp_492["$PKGDECL"]
    set $P5114, $P5112
    goto if2579_end5659
  if2579_else5658:
    null $P5113
    set $P5114, $P5113
  if2579_end5659:
    unless_null $P5114, vivi_25805660
    nqp_get_sc_object $P5115, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5114, $P5115
  vivi_25805660:
    unless_null $P5114, vivi_25815661
    die "Contextual $*PKGDECL not found"
    box $P5116, "Contextual $*PKGDECL not found"
    set $P5114, $P5116
  vivi_25815661:
    set $P5109, $P5114
  fallback5657:
    set $S5009, $P5109
    concat $S5008, $S5009, "-attr"
    set $P5108, fb_tmp_490[$S5008]
    set $P5118, $P5108
    goto if2575_end5651
  if2575_else5650:
    null $P5117
    set $P5118, $P5117
  if2575_end5651:
    unless_null $P5118, vivi_25825662
    nqp_get_sc_object $P5119, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5118, $P5119
  vivi_25825662:
    $P5120 = $P5084."pkg_add_attribute"($P5092, $P5118, $P101, $P102)
    store_dynamic_lex "$*DECLARAND_ATTR", $P5120
.annotate 'line', 2335
    nqp_get_sc_object $P5121, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 93
    $P5122 = $P5121."new"()
    store_lex "$past", $P5122
    .return ($P5122) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_474_1367388600.55005") :anon :lex :outer("cuid_305_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2348
    .const 'Sub' $P5056 = 'cuid_473_1367388600.55005' 
    capture_lex $P5056 
    .lex "$type", $P101 
    .lex "$default", $P102 
    .local pmc fb_tmp_496 
    .local pmc fb_tmp_497 
    .local pmc fb_tmp_498 
    .local pmc fb_tmp_499 
    .local pmc fb_tmp_500 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
    find_lex $P5003, "$/"
    unless_null $P5003, fallback5684
    nqp_get_sc_object $P5004, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5003, $P5004
  fallback5684:
    set fb_tmp_496, $P5003
    repr_defined $I5001, fb_tmp_496
    unless $I5001 goto if2593_else5682 
    set $P5005, fb_tmp_496["typename"]
    set $P5007, $P5005
    goto if2593_end5683
  if2593_else5682:
    null $P5006
    set $P5007, $P5006
  if2593_end5683:
    unless_null $P5007, vivi_25945685
    nqp_get_sc_object $P5008, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5007, $P5008
  vivi_25945685:
    unless $P5007 goto if2592_else5680 
.annotate 'line', 2351
    find_lex $P5009, "$sigil"
    set $S5001, $P5009
    iseq $I5002, $S5001, "$"
    if $I5002 goto unless2595_end5687 
.annotate 'line', 2352
.annotate 'line', 2353
    find_lex $P5010, "$/"
    $P5011 = $P5010."CURSOR"()
    $P5012 = $P5011."panic"("Only typed scalars are currently supported in NQP")
  unless2595_end5687:
.annotate 'line', 2355
    find_dynamic_lex $P5013, "$*W"
    unless_null $P5013, fallback5688
    nqp_get_sc_object $P5015, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5014, $P5015
    set fb_tmp_497, $P5014
    repr_defined $I5003, fb_tmp_497
    unless $I5003 goto if2596_else5689 
    set $P5016, fb_tmp_497["$W"]
    set $P5018, $P5016
    goto if2596_end5690
  if2596_else5689:
    null $P5017
    set $P5018, $P5017
  if2596_end5690:
    unless_null $P5018, vivi_25975691
    nqp_get_sc_object $P5019, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5018, $P5019
  vivi_25975691:
    unless_null $P5018, vivi_25985692
    die "Contextual $*W not found"
    box $P5020, "Contextual $*W not found"
    set $P5018, $P5020
  vivi_25985692:
    set $P5013, $P5018
  fallback5688:
    new $P5021, 'ResizablePMCArray'
    find_lex $P5022, "$/"
    unless_null $P5022, fallback5697
    nqp_get_sc_object $P5023, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5022, $P5023
  fallback5697:
    set fb_tmp_499, $P5022
    repr_defined $I5005, fb_tmp_499
    unless $I5005 goto if2600_else5695 
    set $P5024, fb_tmp_499["typename"]
    set $P5026, $P5024
    goto if2600_end5696
  if2600_else5695:
    null $P5025
    set $P5026, $P5025
  if2600_end5696:
    unless_null $P5026, vivi_26015698
    nqp_get_sc_object $P5027, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5026, $P5027
  vivi_26015698:
    set fb_tmp_498, $P5026
    repr_defined $I5004, fb_tmp_498
    unless $I5004 goto if2599_else5693 
    set $P5028, fb_tmp_498[0]
    set $P5030, $P5028
    goto if2599_end5694
  if2599_else5693:
    null $P5029
    set $P5030, $P5029
  if2599_end5694:
    unless_null $P5030, vivi_26025699
    nqp_get_sc_object $P5031, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5030, $P5031
  vivi_26025699:
    set $S5002, $P5030
    box $P5032, $S5002
    push $P5021, $P5032
    $P5033 = $P5013."find_sym"($P5021)
    set $P101, $P5033
    repr_get_primitive_type_spec $I5006, $P101
    unless $I5006 goto if2603_else5700 
    .const 'Sub' $P5034 = 'cuid_473_1367388600.55005' 
    capture_lex $P5034
    $P5035 = $P5034($I5006)
    set $P5039, $P5035
    goto if2603_end5701
  if2603_else5700:
.annotate 'line', 2359
.annotate 'line', 2360
    find_lex $P5036, "$/"
    $P5037 = $P5036."CURSOR"()
    $P5038 = $P5037."panic"("Only native types are currently supported/checked")
    set $P5039, $P5038
  if2603_end5701:
    goto if2592_end5681
  if2592_else5680:
.annotate 'line', 2363
.annotate 'line', 2364
    find_lex $P5040, "$sigil"
    $P5041 = "&default_for"($P5040)
    set $P102, $P5041
  if2592_end5681:
.annotate 'line', 2366
    find_lex $P5042, "$BLOCK"
    set fb_tmp_500, $P5042
    repr_defined $I5007, fb_tmp_500
    unless $I5007 goto if2604_else5702 
    set $P5043, fb_tmp_500[0]
    set $P5045, $P5043
    goto if2604_end5703
  if2604_else5702:
    null $P5044
    set $P5045, $P5044
  if2604_end5703:
    unless_null $P5045, vivi_26055704
    nqp_get_sc_object $P5046, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5045, $P5046
  vivi_26055704:
    nqp_get_sc_object $P5047, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    find_lex $P5048, "$/"
.annotate 'line', 2368
    nqp_get_sc_object $P5049, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    find_lex $P5050, "$name"
    $P5051 = $P5049."new"($P5050 :named("name"), "lexical" :named("scope"), "var" :named("decl"), $P101 :named("returns"))
    $P5052 = $P5047."new"($P5051, $P102, "bind" :named("op"), $P5048 :named("node"))
    $P5045."push"($P5052)
.annotate 'line', 2371
    find_lex $P5053, "$BLOCK"
    find_lex $P5054, "$name"
    $P5055 = $P5053."symbol"($P5054, "lexical" :named("scope"), $P101 :named("type"))
    .return ($P5055) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_473_1367388600.55005") :anon :lex :outer("cuid_474_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2356
    .param pmc _lex_param_0 
    .lex "$prim_spec", _lex_param_0 
.annotate 'line', 2357
    $P5001 = "&default_value_for_prim"(_lex_param_0)
    store_lex "$default", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_475_1367388600.55005") :anon :lex :outer("cuid_305_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2376
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5002, "$/"
    $P5001 = _lex_param_0."ast"()
    $P5003 = $P5001($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator:sym<sub>" :subid("cuid_306_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2382
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_503 
    unless_null _lex_param_1, fallback5720
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback5720:
    set fb_tmp_503, _lex_param_1
    repr_defined $I5001, fb_tmp_503
    unless $I5001 goto if2611_else5718 
    set $P5002, fb_tmp_503["routine_def"]
    set $P5004, $P5002
    goto if2611_end5719
  if2611_else5718:
    null $P5003
    set $P5004, $P5003
  if2611_end5719:
    unless_null $P5004, vivi_26125721
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_26125721:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator:sym<method>" :subid("cuid_307_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2383
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_504 
    unless_null _lex_param_1, fallback5724
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback5724:
    set fb_tmp_504, _lex_param_1
    repr_defined $I5001, fb_tmp_504
    unless $I5001 goto if2613_else5722 
    set $P5002, fb_tmp_504["method_def"]
    set $P5004, $P5002
    goto if2613_end5723
  if2613_else5722:
    null $P5003
    set $P5004, $P5003
  if2613_end5723:
    unless_null $P5004, vivi_26145725
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_26145725:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "routine_def" :subid("cuid_308_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2385
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5074 = 'cuid_479_1367388600.55005' 
    capture_lex $P5074 
    .const 'Sub' $P5074 = 'cuid_482_1367388600.55005' 
    capture_lex $P5074 
    .lex "$past", $P101 
    .lex "$block", $P102 
    .lex "$lexpast", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_505 
    .local pmc fb_tmp_506 
    .local pmc fb_tmp_507 
    .local pmc fb_tmp_508 
    .local pmc fb_tmp_509 
    .local pmc fb_tmp_544 
    .local pmc fb_tmp_545 
    .local pmc fb_tmp_546 
    .local pmc fb_tmp_547 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P103, $P5003
    unless_null _lex_param_1, fallback5730
    nqp_get_sc_object $P5004, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5004
  fallback5730:
    set fb_tmp_505, _lex_param_1
    repr_defined $I5001, fb_tmp_505
    unless $I5001 goto if2616_else5728 
    set $P5005, fb_tmp_505["onlystar"]
    set $P5007, $P5005
    goto if2616_end5729
  if2616_else5728:
    null $P5006
    set $P5007, $P5006
  if2616_end5729:
    unless_null $P5007, vivi_26175731
    nqp_get_sc_object $P5008, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5007, $P5008
  vivi_26175731:
    unless $P5007 goto if2615_else5726 
.annotate 'line', 2389
.annotate 'line', 2390
    $P5009 = "&only_star_block"()
    set $P101, $P5009
    goto if2615_end5727
  if2615_else5726:
.annotate 'line', 2392
.annotate 'line', 2393
    unless_null _lex_param_1, fallback5734
    nqp_get_sc_object $P5010, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5010
  fallback5734:
    set fb_tmp_506, _lex_param_1
    repr_defined $I5002, fb_tmp_506
    unless $I5002 goto if2618_else5732 
    set $P5011, fb_tmp_506["blockoid"]
    set $P5013, $P5011
    goto if2618_end5733
  if2618_else5732:
    null $P5012
    set $P5013, $P5012
  if2618_end5733:
    unless_null $P5013, vivi_26195735
    nqp_get_sc_object $P5014, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5013, $P5014
  vivi_26195735:
    $P5015 = $P5013."ast"()
    set $P101, $P5015
.annotate 'line', 2394
    $P101."blocktype"("declaration")
    find_dynamic_lex $P5016, "$*RETURN_USED"
    unless_null $P5016, fallback5738
    nqp_get_sc_object $P5018, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5017, $P5018
    set fb_tmp_507, $P5017
    repr_defined $I5003, fb_tmp_507
    unless $I5003 goto if2621_else5739 
    set $P5019, fb_tmp_507["$RETURN_USED"]
    set $P5021, $P5019
    goto if2621_end5740
  if2621_else5739:
    null $P5020
    set $P5021, $P5020
  if2621_end5740:
    unless_null $P5021, vivi_26225741
    nqp_get_sc_object $P5022, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5021, $P5022
  vivi_26225741:
    unless_null $P5021, vivi_26235742
    die "Contextual $*RETURN_USED not found"
    box $P5023, "Contextual $*RETURN_USED not found"
    set $P5021, $P5023
  vivi_26235742:
    set $P5016, $P5021
  fallback5738:
    set $P5029, $P5016
    unless $P5016 goto if2620_end5737 
.annotate 'line', 2395
.annotate 'line', 2396
    set fb_tmp_508, $P101
    repr_defined $I5004, fb_tmp_508
    unless $I5004 goto if2624_else5743 
    set $P5024, fb_tmp_508[1]
    set $P5026, $P5024
    goto if2624_end5744
  if2624_else5743:
    null $P5025
    set $P5026, $P5025
  if2624_end5744:
    unless_null $P5026, vivi_26255745
    nqp_get_sc_object $P5027, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5026, $P5027
  vivi_26255745:
    $P5028 = "&wrap_return_handler"($P5026)
    set $P101[1], $P5028
    set $P5029, $P5028
  if2620_end5737:
  if2615_end5727:
    set $P102, $P101
    unless_null _lex_param_1, fallback5750
    nqp_get_sc_object $P5030, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5030
  fallback5750:
    set fb_tmp_509, _lex_param_1
    repr_defined $I5005, fb_tmp_509
    unless $I5005 goto if2627_else5748 
    set $P5031, fb_tmp_509["deflongname"]
    set $P5033, $P5031
    goto if2627_end5749
  if2627_else5748:
    null $P5032
    set $P5033, $P5032
  if2627_end5749:
    unless_null $P5033, vivi_26285751
    nqp_get_sc_object $P5034, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5033, $P5034
  vivi_26285751:
    unless $P5033 goto if2626_else5746 
    .const 'Sub' $P5035 = 'cuid_479_1367388600.55005' 
    capture_lex $P5035
    $P5036 = $P5035()
    goto if2626_end5747
  if2626_else5746:
.annotate 'line', 2510
.annotate 'line', 2511
    find_dynamic_lex $P5037, "$*W"
    unless_null $P5037, fallback5929
    nqp_get_sc_object $P5039, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5038, $P5039
    set fb_tmp_544, $P5038
    repr_defined $I5006, fb_tmp_544
    unless $I5006 goto if2732_else5930 
    set $P5040, fb_tmp_544["$W"]
    set $P5042, $P5040
    goto if2732_end5931
  if2732_else5930:
    null $P5041
    set $P5042, $P5041
  if2732_end5931:
    unless_null $P5042, vivi_27335932
    nqp_get_sc_object $P5043, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5042, $P5043
  vivi_27335932:
    unless_null $P5042, vivi_27345933
    die "Contextual $*W not found"
    box $P5044, "Contextual $*W not found"
    set $P5042, $P5044
  vivi_27345933:
    set $P5037, $P5042
  fallback5929:
    $P5045 = $P5037."is_precompilation_mode"()
    set $P5055, $P5045
    unless $P5045 goto if2731_end5928 
.annotate 'line', 2512
    find_dynamic_lex $P5046, "$*W"
    unless_null $P5046, fallback5934
    nqp_get_sc_object $P5048, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5047, $P5048
    set fb_tmp_545, $P5047
    repr_defined $I5007, fb_tmp_545
    unless $I5007 goto if2735_else5935 
    set $P5049, fb_tmp_545["$W"]
    set $P5051, $P5049
    goto if2735_end5936
  if2735_else5935:
    null $P5050
    set $P5051, $P5050
  if2735_end5936:
    unless_null $P5051, vivi_27365937
    nqp_get_sc_object $P5052, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5051, $P5052
  vivi_27365937:
    unless_null $P5051, vivi_27375938
    die "Contextual $*W not found"
    box $P5053, "Contextual $*W not found"
    set $P5051, $P5053
  vivi_27375938:
    set $P5046, $P5051
  fallback5934:
    $P5054 = $P5046."create_code"($P101, "<anon>", 0)
    set $P5055, $P5054
  if2731_end5928:
  if2626_end5747:
.annotate 'line', 2516
    nqp_get_sc_object $P5056, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    $P5057 = $P5056."new"($P101, "takeclosure" :named("op"))
    set $P103, $P5057
    set $P103["sink"], $P101
    set $P103["block_past"], $P102
.annotate 'line', 2519
    _lex_param_1."!make"($P103)
    unless_null _lex_param_1, fallback5943
    nqp_get_sc_object $P5058, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5058
  fallback5943:
    set fb_tmp_546, _lex_param_1
    repr_defined $I5008, fb_tmp_546
    unless $I5008 goto if2739_else5941 
    set $P5059, fb_tmp_546["trait"]
    set $P5061, $P5059
    goto if2739_end5942
  if2739_else5941:
    null $P5060
    set $P5061, $P5060
  if2739_end5942:
    unless_null $P5061, vivi_27405944
    nqp_get_sc_object $P5062, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5061, $P5062
  vivi_27405944:
    set $P5073, $P5061
    unless $P5061 goto if2738_end5940 
.annotate 'line', 2522
    unless_null _lex_param_1, fallback5947
    nqp_get_sc_object $P5066, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5066
  fallback5947:
    set fb_tmp_547, _lex_param_1
    repr_defined $I5009, fb_tmp_547
    unless $I5009 goto if2741_else5945 
    set $P5067, fb_tmp_547["trait"]
    set $P5069, $P5067
    goto if2741_end5946
  if2741_else5945:
    null $P5068
    set $P5069, $P5068
  if2741_end5946:
    unless_null $P5069, vivi_27425948
    nqp_get_sc_object $P5070, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5069, $P5070
  vivi_27425948:
    set $P5063, $P5069
    iter $P5065, $P5069
  for_next5949:
    unless $P5065, for_done5951
    shift $P5072, $P5065
  for_redo5950:
    .const 'Sub' $P5071 = 'cuid_482_1367388600.55005' 
    capture_lex $P5071
    $P5063 = $P5071($P5072)
    goto for_next5949
  for_done5951:
    set $P5073, $P5063
  if2738_end5940:
    .return ($P5073) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_479_1367388600.55005") :anon :lex :outer("cuid_308_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2401
    .const 'Sub' $P5096 = 'cuid_478_1367388600.55005' 
    capture_lex $P5096 
    .const 'Sub' $P5096 = 'cuid_480_1367388600.55005' 
    capture_lex $P5096 
    .const 'Sub' $P5096 = 'cuid_481_1367388600.55005' 
    capture_lex $P5096 
    .lex "$name", $P101 
    .local pmc fb_tmp_510 
    .local pmc fb_tmp_511 
    .local pmc fb_tmp_512 
    .local pmc fb_tmp_513 
    .local pmc fb_tmp_514 
    .local pmc fb_tmp_515 
    .local pmc fb_tmp_516 
    .local pmc fb_tmp_517 
    .local pmc fb_tmp_528 
    .local pmc fb_tmp_542 
    .local pmc fb_tmp_543 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    find_lex $P5002, "$/"
    unless_null $P5002, fallback5756
    nqp_get_sc_object $P5003, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5002, $P5003
  fallback5756:
    set fb_tmp_511, $P5002
    repr_defined $I5002, fb_tmp_511
    unless $I5002 goto if2630_else5754 
    set $P5004, fb_tmp_511["sigil"]
    set $P5006, $P5004
    goto if2630_end5755
  if2630_else5754:
    null $P5005
    set $P5006, $P5005
  if2630_end5755:
    unless_null $P5006, vivi_26315757
    nqp_get_sc_object $P5007, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5006, $P5007
  vivi_26315757:
    set fb_tmp_510, $P5006
    repr_defined $I5001, fb_tmp_510
    unless $I5001 goto if2629_else5752 
    set $P5008, fb_tmp_510[0]
    set $P5010, $P5008
    goto if2629_end5753
  if2629_else5752:
    null $P5009
    set $P5010, $P5009
  if2629_end5753:
    unless_null $P5010, vivi_26325758
    nqp_get_sc_object $P5011, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5010, $P5011
  vivi_26325758:
    set $S5002, $P5010
.annotate 'line', 2402
    find_lex $P5012, "$/"
    unless_null $P5012, fallback5763
    nqp_get_sc_object $P5013, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5012, $P5013
  fallback5763:
    set fb_tmp_513, $P5012
    repr_defined $I5004, fb_tmp_513
    unless $I5004 goto if2634_else5761 
    set $P5014, fb_tmp_513["deflongname"]
    set $P5016, $P5014
    goto if2634_end5762
  if2634_else5761:
    null $P5015
    set $P5016, $P5015
  if2634_end5762:
    unless_null $P5016, vivi_26355764
    nqp_get_sc_object $P5017, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5016, $P5017
  vivi_26355764:
    set fb_tmp_512, $P5016
    repr_defined $I5003, fb_tmp_512
    unless $I5003 goto if2633_else5759 
    set $P5018, fb_tmp_512[0]
    set $P5020, $P5018
    goto if2633_end5760
  if2633_else5759:
    null $P5019
    set $P5020, $P5019
  if2633_end5760:
    unless_null $P5020, vivi_26365765
    nqp_get_sc_object $P5021, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5020, $P5021
  vivi_26365765:
    $P5022 = $P5020."ast"()
    set $S5003, $P5022
    concat $S5001, $S5002, $S5003
    box $P5023, $S5001
    set $P101, $P5023
.annotate 'line', 2403
    find_lex $P5024, "$past"
    $P5024."name"($P101)
    find_dynamic_lex $P5025, "$*SCOPE"
    unless_null $P5025, fallback5772
    nqp_get_sc_object $P5027, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5026, $P5027
    set fb_tmp_514, $P5026
    repr_defined $I5006, fb_tmp_514
    unless $I5006 goto if2640_else5773 
    set $P5028, fb_tmp_514["$SCOPE"]
    set $P5030, $P5028
    goto if2640_end5774
  if2640_else5773:
    null $P5029
    set $P5030, $P5029
  if2640_end5774:
    unless_null $P5030, vivi_26415775
    nqp_get_sc_object $P5031, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5030, $P5031
  vivi_26415775:
    unless_null $P5030, vivi_26425776
    die "Contextual $*SCOPE not found"
    box $P5032, "Contextual $*SCOPE not found"
    set $P5030, $P5032
  vivi_26425776:
    set $P5025, $P5030
  fallback5772:
    set $S5004, $P5025
    iseq $I5005, $S5004, ""
    set $I5009, $I5005
    if $I5005 goto unless2639_end5771 
    find_dynamic_lex $P5033, "$*SCOPE"
    unless_null $P5033, fallback5777
    nqp_get_sc_object $P5035, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5034, $P5035
    set fb_tmp_515, $P5034
    repr_defined $I5008, fb_tmp_515
    unless $I5008 goto if2643_else5778 
    set $P5036, fb_tmp_515["$SCOPE"]
    set $P5038, $P5036
    goto if2643_end5779
  if2643_else5778:
    null $P5037
    set $P5038, $P5037
  if2643_end5779:
    unless_null $P5038, vivi_26445780
    nqp_get_sc_object $P5039, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5038, $P5039
  vivi_26445780:
    unless_null $P5038, vivi_26455781
    die "Contextual $*SCOPE not found"
    box $P5040, "Contextual $*SCOPE not found"
    set $P5038, $P5040
  vivi_26455781:
    set $P5033, $P5038
  fallback5777:
    set $S5005, $P5033
    iseq $I5007, $S5005, "my"
    set $I5009, $I5007
  unless2639_end5771:
    set $I5012, $I5009
    if $I5009 goto unless2638_end5769 
    find_dynamic_lex $P5041, "$*SCOPE"
    unless_null $P5041, fallback5782
    nqp_get_sc_object $P5043, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5042, $P5043
    set fb_tmp_516, $P5042
    repr_defined $I5011, fb_tmp_516
    unless $I5011 goto if2646_else5783 
    set $P5044, fb_tmp_516["$SCOPE"]
    set $P5046, $P5044
    goto if2646_end5784
  if2646_else5783:
    null $P5045
    set $P5046, $P5045
  if2646_end5784:
    unless_null $P5046, vivi_26475785
    nqp_get_sc_object $P5047, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5046, $P5047
  vivi_26475785:
    unless_null $P5046, vivi_26485786
    die "Contextual $*SCOPE not found"
    box $P5048, "Contextual $*SCOPE not found"
    set $P5046, $P5048
  vivi_26485786:
    set $P5041, $P5046
  fallback5782:
    set $S5006, $P5041
    iseq $I5010, $S5006, "our"
    set $I5012, $I5010
  unless2638_end5769:
    unless $I5012 goto if2637_else5766 
.annotate 'line', 2404
    find_dynamic_lex $P5049, "$*MULTINESS"
    unless_null $P5049, fallback5789
    nqp_get_sc_object $P5051, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5050, $P5051
    set fb_tmp_517, $P5050
    repr_defined $I5014, fb_tmp_517
    unless $I5014 goto if2650_else5790 
    set $P5052, fb_tmp_517["$MULTINESS"]
    set $P5054, $P5052
    goto if2650_end5791
  if2650_else5790:
    null $P5053
    set $P5054, $P5053
  if2650_end5791:
    unless_null $P5054, vivi_26515792
    nqp_get_sc_object $P5055, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5054, $P5055
  vivi_26515792:
    unless_null $P5054, vivi_26525793
    die "Contextual $*MULTINESS not found"
    box $P5056, "Contextual $*MULTINESS not found"
    set $P5054, $P5056
  vivi_26525793:
    set $P5049, $P5054
  fallback5789:
    set $S5007, $P5049
    iseq $I5013, $S5007, "multi"
    unless $I5013 goto if2649_else5787 
    .const 'Sub' $P5057 = 'cuid_478_1367388600.55005' 
    capture_lex $P5057
    $P5058 = $P5057()
    goto if2649_end5788
  if2649_else5787:
    find_dynamic_lex $P5059, "$*MULTINESS"
    unless_null $P5059, fallback5849
    nqp_get_sc_object $P5061, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5060, $P5061
    set fb_tmp_528, $P5060
    repr_defined $I5016, fb_tmp_528
    unless $I5016 goto if2684_else5850 
    set $P5062, fb_tmp_528["$MULTINESS"]
    set $P5064, $P5062
    goto if2684_end5851
  if2684_else5850:
    null $P5063
    set $P5064, $P5063
  if2684_end5851:
    unless_null $P5064, vivi_26855852
    nqp_get_sc_object $P5065, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5064, $P5065
  vivi_26855852:
    unless_null $P5064, vivi_26865853
    die "Contextual $*MULTINESS not found"
    box $P5066, "Contextual $*MULTINESS not found"
    set $P5064, $P5066
  vivi_26865853:
    set $P5059, $P5064
  fallback5849:
    set $S5008, $P5059
    iseq $I5015, $S5008, "proto"
    unless $I5015 goto if2683_else5847 
    .const 'Sub' $P5067 = 'cuid_480_1367388600.55005' 
    capture_lex $P5067
    $P5068 = $P5067()
    set $P5071, $P5068
    goto if2683_end5848
  if2683_else5847:
    .const 'Sub' $P5069 = 'cuid_481_1367388600.55005' 
    capture_lex $P5069
    $P5070 = $P5069()
    set $P5071, $P5070
  if2683_end5848:
  if2649_end5788:
.annotate 'line', 2499
    nqp_get_sc_object $P5072, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    set $S5010, $P101
    concat $S5009, "&", $S5010
    $P5073 = $P5072."new"($S5009 :named("name"), "lexical" :named("scope"))
    store_lex "$past", $P5073
    goto if2637_end5767
  if2637_else5766:
.annotate 'line', 2501
.annotate 'line', 2502
    find_lex $P5074, "$/"
    $P5075 = $P5074."CURSOR"()
    find_dynamic_lex $P5076, "$*SCOPE"
    unless_null $P5076, fallback5913
    nqp_get_sc_object $P5078, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5077, $P5078
    set fb_tmp_542, $P5077
    repr_defined $I5017, fb_tmp_542
    unless $I5017 goto if2723_else5914 
    set $P5079, fb_tmp_542["$SCOPE"]
    set $P5081, $P5079
    goto if2723_end5915
  if2723_else5914:
    null $P5080
    set $P5081, $P5080
  if2723_end5915:
    unless_null $P5081, vivi_27245916
    nqp_get_sc_object $P5082, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5081, $P5082
  vivi_27245916:
    unless_null $P5081, vivi_27255917
    die "Contextual $*SCOPE not found"
    box $P5083, "Contextual $*SCOPE not found"
    set $P5081, $P5083
  vivi_27255917:
    set $P5076, $P5081
  fallback5913:
    set $S5012, $P5076
    concat $S5011, $S5012, " scoped routines are not supported yet"
    $P5084 = $P5075."panic"($S5011)
  if2637_end5767:
    set $S5013, $P101
    iseq $I5018, $S5013, "MAIN"
    set $I5021, $I5018
    unless $I5018 goto if2727_end5921 
    find_dynamic_lex $P5085, "$*MULTINESS"
    unless_null $P5085, fallback5922
    nqp_get_sc_object $P5087, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5086, $P5087
    set fb_tmp_543, $P5086
    repr_defined $I5020, fb_tmp_543
    unless $I5020 goto if2728_else5923 
    set $P5088, fb_tmp_543["$MULTINESS"]
    set $P5090, $P5088
    goto if2728_end5924
  if2728_else5923:
    null $P5089
    set $P5090, $P5089
  if2728_end5924:
    unless_null $P5090, vivi_27295925
    nqp_get_sc_object $P5091, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5090, $P5091
  vivi_27295925:
    unless_null $P5090, vivi_27305926
    die "Contextual $*MULTINESS not found"
    box $P5092, "Contextual $*MULTINESS not found"
    set $P5090, $P5092
  vivi_27305926:
    set $P5085, $P5090
  fallback5922:
    set $S5014, $P5085
    isne $I5019, $S5014, "multi"
    set $I5021, $I5019
  if2727_end5921:
    box $P5095, $I5021
    set $P5094, $P5095
    unless $I5021 goto if2726_end5919 
.annotate 'line', 2506
    find_lex $P5093, "$block"
    store_dynamic_lex "$*MAIN_SUB", $P5093
    set $P5094, $P5093
  if2726_end5919:
    .return ($P5094) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_478_1367388600.55005") :anon :lex :outer("cuid_479_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2405
    .const 'Sub' $P5062 = 'cuid_477_1367388600.55005' 
    capture_lex $P5062 
    .lex "$proto", $P101 
    .lex "%sym", $P102 
    .lex "$code", $P103 
    .lex "$BLOCK", $P104 
    .local pmc fb_tmp_518 
    .local pmc fb_tmp_519 
    .local pmc fb_tmp_520 
    .local pmc fb_tmp_521 
    .local pmc fb_tmp_525 
    .local pmc fb_tmp_526 
    .local pmc fb_tmp_527 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    new $P5002, 'Hash'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P104, $P5004
    find_dynamic_lex $P5005, "$*SCOPE"
    unless_null $P5005, fallback5796
    nqp_get_sc_object $P5007, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5006, $P5007
    set fb_tmp_518, $P5006
    repr_defined $I5002, fb_tmp_518
    unless $I5002 goto if2654_else5797 
    set $P5008, fb_tmp_518["$SCOPE"]
    set $P5010, $P5008
    goto if2654_end5798
  if2654_else5797:
    null $P5009
    set $P5010, $P5009
  if2654_end5798:
    unless_null $P5010, vivi_26555799
    nqp_get_sc_object $P5011, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5010, $P5011
  vivi_26555799:
    unless_null $P5010, vivi_26565800
    die "Contextual $*SCOPE not found"
    box $P5012, "Contextual $*SCOPE not found"
    set $P5010, $P5012
  vivi_26565800:
    set $P5005, $P5010
  fallback5796:
    set $S5001, $P5005
    iseq $I5001, $S5001, "our"
    unless $I5001 goto if2653_end5795 
.annotate 'line', 2407
    box $P5013, "a multi can not be our-scoped"
    die $P5013
  if2653_end5795:
.annotate 'line', 2409
    find_dynamic_lex $P5014, "$*W"
    unless_null $P5014, fallback5801
    nqp_get_sc_object $P5016, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5015, $P5016
    set fb_tmp_519, $P5015
    repr_defined $I5003, fb_tmp_519
    unless $I5003 goto if2657_else5802 
    set $P5017, fb_tmp_519["$W"]
    set $P5019, $P5017
    goto if2657_end5803
  if2657_else5802:
    null $P5018
    set $P5019, $P5018
  if2657_end5803:
    unless_null $P5019, vivi_26585804
    nqp_get_sc_object $P5020, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5019, $P5020
  vivi_26585804:
    unless_null $P5019, vivi_26595805
    die "Contextual $*W not found"
    box $P5021, "Contextual $*W not found"
    set $P5019, $P5021
  vivi_26595805:
    set $P5014, $P5019
  fallback5801:
    $P5022 = $P5014."cur_lexpad"()
    find_lex $P5023, "$name"
    set $S5003, $P5023
    concat $S5002, "&", $S5003
    $P5024 = $P5022."symbol"($S5002)
    set $P102, $P5024
    set fb_tmp_520, $P102
    repr_defined $I5004, fb_tmp_520
    unless $I5004 goto if2661_else5808 
    set $P5025, fb_tmp_520["proto"]
    set $P5027, $P5025
    goto if2661_end5809
  if2661_else5808:
    null $P5026
    set $P5027, $P5026
  if2661_end5809:
    unless_null $P5027, vivi_26625810
    nqp_get_sc_object $P5028, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5027, $P5028
  vivi_26625810:
    unless $P5027 goto if2660_else5806 
.annotate 'line', 2410
    set fb_tmp_521, $P102
    repr_defined $I5005, fb_tmp_521
    unless $I5005 goto if2663_else5811 
    set $P5029, fb_tmp_521["value"]
    set $P5031, $P5029
    goto if2663_end5812
  if2663_else5811:
    null $P5030
    set $P5031, $P5030
  if2663_end5812:
    unless_null $P5031, vivi_26645813
    nqp_get_sc_object $P5032, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5031, $P5032
  vivi_26645813:
    set $P101, $P5031
    goto if2660_end5807
  if2660_else5806:
    .const 'Sub' $P5033 = 'cuid_477_1367388600.55005' 
    capture_lex $P5033
    $P5034 = $P5033()
  if2660_end5807:
.annotate 'line', 2439
    find_dynamic_lex $P5035, "$*W"
    unless_null $P5035, fallback5834
    nqp_get_sc_object $P5037, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5036, $P5037
    set fb_tmp_525, $P5036
    repr_defined $I5006, fb_tmp_525
    unless $I5006 goto if2675_else5835 
    set $P5038, fb_tmp_525["$W"]
    set $P5040, $P5038
    goto if2675_end5836
  if2675_else5835:
    null $P5039
    set $P5040, $P5039
  if2675_end5836:
    unless_null $P5040, vivi_26765837
    nqp_get_sc_object $P5041, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5040, $P5041
  vivi_26765837:
    unless_null $P5040, vivi_26775838
    die "Contextual $*W not found"
    box $P5042, "Contextual $*W not found"
    set $P5040, $P5042
  vivi_26775838:
    set $P5035, $P5040
  fallback5834:
    find_lex $P5043, "$past"
    find_lex $P5044, "$name"
    $P5045 = $P5035."create_code"($P5043, $P5044, 0)
    set $P103, $P5045
.annotate 'line', 2440
    find_lex $P5046, "$past"
    "&attach_multi_signature"($P103, $P5046)
.annotate 'line', 2443
    $P101."add_dispatchee"($P103)
.annotate 'line', 2446
    find_dynamic_lex $P5047, "$*W"
    unless_null $P5047, fallback5839
    nqp_get_sc_object $P5049, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5048, $P5049
    set fb_tmp_526, $P5048
    repr_defined $I5007, fb_tmp_526
    unless $I5007 goto if2678_else5840 
    set $P5050, fb_tmp_526["$W"]
    set $P5052, $P5050
    goto if2678_end5841
  if2678_else5840:
    null $P5051
    set $P5052, $P5051
  if2678_end5841:
    unless_null $P5052, vivi_26795842
    nqp_get_sc_object $P5053, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5052, $P5053
  vivi_26795842:
    unless_null $P5052, vivi_26805843
    die "Contextual $*W not found"
    box $P5054, "Contextual $*W not found"
    set $P5052, $P5054
  vivi_26805843:
    set $P5047, $P5052
  fallback5839:
    $P5055 = $P5047."cur_lexpad"()
    set $P104, $P5055
.annotate 'line', 2447
    set fb_tmp_527, $P104
    repr_defined $I5008, fb_tmp_527
    unless $I5008 goto if2681_else5844 
    set $P5056, fb_tmp_527[0]
    set $P5058, $P5056
    goto if2681_end5845
  if2681_else5844:
    null $P5057
    set $P5058, $P5057
  if2681_end5845:
    unless_null $P5058, vivi_26825846
    nqp_get_sc_object $P5059, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5058, $P5059
  vivi_26825846:
    find_lex $P5060, "$past"
    $P5061 = $P5058."push"($P5060)
    .return ($P5061) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_477_1367388600.55005") :anon :lex :outer("cuid_478_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2415
    .const 'Sub' $P5020 = 'cuid_476_1367388600.55005' 
    capture_lex $P5020 
    .lex "$found_proto", $P101 
    .local pmc fb_tmp_522 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
.annotate 'line', 2418
    find_dynamic_lex $P5005, "$*W"
    unless_null $P5005, fallback5814
    nqp_get_sc_object $P5007, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5006, $P5007
    set fb_tmp_522, $P5006
    repr_defined $I5001, fb_tmp_522
    unless $I5001 goto if2665_else5815 
    set $P5008, fb_tmp_522["$W"]
    set $P5010, $P5008
    goto if2665_end5816
  if2665_else5815:
    null $P5009
    set $P5010, $P5009
  if2665_end5816:
    unless_null $P5010, vivi_26665817
    nqp_get_sc_object $P5011, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5010, $P5011
  vivi_26665817:
    unless_null $P5010, vivi_26675818
    die "Contextual $*W not found"
    box $P5012, "Contextual $*W not found"
    set $P5010, $P5012
  vivi_26675818:
    set $P5005, $P5010
  fallback5814:
    $P5013 = $P5005."get_legacy_block_list"()
    set $P5002, $P5013
    iter $P5004, $P5013
  for_next5829:
    unless $P5004, for_done5831
    shift $P5015, $P5004
  for_redo5830:
    .const 'Sub' $P5014 = 'cuid_476_1367388600.55005' 
    capture_lex $P5014
    $P5002 = $P5014($P5015)
    goto for_next5829
  for_done5831:
    if $P101 goto unless2674_end5833 
.annotate 'line', 2430
.annotate 'line', 2431
    find_lex $P5016, "$/"
    $P5017 = $P5016."CURSOR"()
    $P5018 = $P5017."panic"("Sorry, no proto sub in scope, and auto-generation of protos is not yet implemented.")
  unless2674_end5833:
    box $P5019, "Dispatcher derivation NYI"
    die $P5019
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_476_1367388600.55005") :anon :lex :outer("cuid_477_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2418
    .param pmc _lex_param_0 
    .lex "%sym", $P101 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_523 
    .local pmc fb_tmp_524 
    new $P5001, 'Hash'
    set $P101, $P5001
.annotate 'line', 2419
    find_lex $P5002, "$name"
    set $S5002, $P5002
    concat $S5001, "&", $S5002
    $P5003 = _lex_param_0."symbol"($S5001)
    set $P101, $P5003
    set fb_tmp_523, $P101
    repr_defined $I5001, fb_tmp_523
    unless $I5001 goto if2669_else5821 
    set $P5004, fb_tmp_523["proto"]
    set $P5006, $P5004
    goto if2669_end5822
  if2669_else5821:
    null $P5005
    set $P5006, $P5005
  if2669_end5822:
    unless_null $P5006, vivi_26705823
    nqp_get_sc_object $P5007, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5006, $P5007
  vivi_26705823:
    unless $P5006 goto if2668_else5819 
.annotate 'line', 2420
    set fb_tmp_524, $P101
    repr_defined $I5002, fb_tmp_524
    unless $I5002 goto if2671_else5824 
    set $P5008, fb_tmp_524["value"]
    set $P5010, $P5008
    goto if2671_end5825
  if2671_else5824:
    null $P5009
    set $P5010, $P5009
  if2671_end5825:
    unless_null $P5010, vivi_26725826
    nqp_get_sc_object $P5011, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5010, $P5011
  vivi_26725826:
    store_lex "$proto", $P5010
    box $P5012, 1
    store_lex "$found_proto", $P5012
    set $P5017, $P5012
    goto if2668_end5820
  if2668_else5819:
    set $P5016, $P101
    unless $P101 goto if2673_end5828 
.annotate 'line', 2424
.annotate 'line', 2425
    find_lex $P5013, "$/"
    $P5014 = $P5013."CURSOR"()
    $P5015 = $P5014."panic"("Cannot declare a multi when an only is already in scope.")
    set $P5016, $P5015
  if2673_end5828:
    set $P5017, $P5016
  if2668_end5820:
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_480_1367388600.55005") :anon :lex :outer("cuid_479_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2449
    .lex "$code", $P101 
    .lex "$BLOCK", $P102 
    .local pmc fb_tmp_529 
    .local pmc fb_tmp_530 
    .local pmc fb_tmp_531 
    .local pmc fb_tmp_532 
    .local pmc fb_tmp_533 
    .local pmc fb_tmp_534 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
    find_dynamic_lex $P5003, "$*SCOPE"
    unless_null $P5003, fallback5856
    nqp_get_sc_object $P5005, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5004, $P5005
    set fb_tmp_529, $P5004
    repr_defined $I5002, fb_tmp_529
    unless $I5002 goto if2688_else5857 
    set $P5006, fb_tmp_529["$SCOPE"]
    set $P5008, $P5006
    goto if2688_end5858
  if2688_else5857:
    null $P5007
    set $P5008, $P5007
  if2688_end5858:
    unless_null $P5008, vivi_26895859
    nqp_get_sc_object $P5009, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5008, $P5009
  vivi_26895859:
    unless_null $P5008, vivi_26905860
    die "Contextual $*SCOPE not found"
    box $P5010, "Contextual $*SCOPE not found"
    set $P5008, $P5010
  vivi_26905860:
    set $P5003, $P5008
  fallback5856:
    set $S5001, $P5003
    iseq $I5001, $S5001, "our"
    unless $I5001 goto if2687_end5855 
.annotate 'line', 2453
    box $P5011, "our-scoped protos not yet implemented"
    die $P5011
  if2687_end5855:
.annotate 'line', 2454
    find_dynamic_lex $P5012, "$*W"
    unless_null $P5012, fallback5861
    nqp_get_sc_object $P5014, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5013, $P5014
    set fb_tmp_530, $P5013
    repr_defined $I5003, fb_tmp_530
    unless $I5003 goto if2691_else5862 
    set $P5015, fb_tmp_530["$W"]
    set $P5017, $P5015
    goto if2691_end5863
  if2691_else5862:
    null $P5016
    set $P5017, $P5016
  if2691_end5863:
    unless_null $P5017, vivi_26925864
    nqp_get_sc_object $P5018, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5017, $P5018
  vivi_26925864:
    unless_null $P5017, vivi_26935865
    die "Contextual $*W not found"
    box $P5019, "Contextual $*W not found"
    set $P5017, $P5019
  vivi_26935865:
    set $P5012, $P5017
  fallback5861:
    find_lex $P5020, "$past"
    find_lex $P5021, "$name"
    $P5022 = $P5012."create_code"($P5020, $P5021, 1)
    set $P101, $P5022
.annotate 'line', 2455
    find_dynamic_lex $P5023, "$*W"
    unless_null $P5023, fallback5866
    nqp_get_sc_object $P5025, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5024, $P5025
    set fb_tmp_531, $P5024
    repr_defined $I5004, fb_tmp_531
    unless $I5004 goto if2694_else5867 
    set $P5026, fb_tmp_531["$W"]
    set $P5028, $P5026
    goto if2694_end5868
  if2694_else5867:
    null $P5027
    set $P5028, $P5027
  if2694_end5868:
    unless_null $P5028, vivi_26955869
    nqp_get_sc_object $P5029, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5028, $P5029
  vivi_26955869:
    unless_null $P5028, vivi_26965870
    die "Contextual $*W not found"
    box $P5030, "Contextual $*W not found"
    set $P5028, $P5030
  vivi_26965870:
    set $P5023, $P5028
  fallback5866:
    $P5031 = $P5023."cur_lexpad"()
    set $P102, $P5031
.annotate 'line', 2456
    set fb_tmp_532, $P102
    repr_defined $I5005, fb_tmp_532
    unless $I5005 goto if2697_else5871 
    set $P5032, fb_tmp_532[0]
    set $P5034, $P5032
    goto if2697_end5872
  if2697_else5871:
    null $P5033
    set $P5034, $P5033
  if2697_end5872:
    unless_null $P5034, vivi_26985873
    nqp_get_sc_object $P5035, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5034, $P5035
  vivi_26985873:
    nqp_get_sc_object $P5036, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 2458
    nqp_get_sc_object $P5037, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    find_lex $P5038, "$name"
    set $S5003, $P5038
    concat $S5002, "&", $S5003
    $P5039 = $P5037."new"($S5002 :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    find_lex $P5040, "$past"
    $P5041 = $P5036."new"($P5039, $P5040, "bind" :named("op"))
    $P5034."push"($P5041)
.annotate 'line', 2461
    find_lex $P5042, "$name"
    set $S5005, $P5042
    concat $S5004, "&", $S5005
    $P102."symbol"($S5004, "lexical" :named("scope"), 1 :named("proto"), $P101 :named("value"))
.annotate 'line', 2465
    find_lex $P5043, "$block"
    set fb_tmp_533, $P5043
    repr_defined $I5006, fb_tmp_533
    unless $I5006 goto if2699_else5874 
    set $P5044, fb_tmp_533[0]
    set $P5046, $P5044
    goto if2699_end5875
  if2699_else5874:
    null $P5045
    set $P5046, $P5045
  if2699_end5875:
    unless_null $P5046, vivi_27005876
    nqp_get_sc_object $P5047, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5046, $P5047
  vivi_27005876:
    nqp_get_sc_object $P5048, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 2467
    nqp_get_sc_object $P5049, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5050 = $P5049."new"("CURRENT_DISPATCH_CAPTURE" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2468
    nqp_get_sc_object $P5051, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    $P5052 = $P5051."new"("savecapture" :named("op"))
    $P5053 = $P5048."new"($P5050, $P5052, "bind" :named("op"))
    $P5046."push"($P5053)
.annotate 'line', 2470
    find_lex $P5054, "$block"
    set fb_tmp_534, $P5054
    repr_defined $I5007, fb_tmp_534
    unless $I5007 goto if2701_else5877 
    set $P5055, fb_tmp_534[0]
    set $P5057, $P5055
    goto if2701_end5878
  if2701_else5877:
    null $P5056
    set $P5057, $P5056
  if2701_end5878:
    unless_null $P5057, vivi_27025879
    nqp_get_sc_object $P5058, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5057, $P5058
  vivi_27025879:
    nqp_get_sc_object $P5059, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 2472
    nqp_get_sc_object $P5060, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5061 = $P5060."new"("&*CURRENT_DISPATCHER" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2473
    nqp_get_sc_object $P5062, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    nqp_get_sc_object $P5063, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    $P5064 = $P5063."new"("curcode" :named("op"))
    $P5065 = $P5062."new"($P5064, "getcodeobj" :named("op"))
    $P5066 = $P5059."new"($P5061, $P5065, "bind" :named("op"))
    $P5067 = $P5057."push"($P5066)
    .return ($P5067) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_481_1367388600.55005") :anon :lex :outer("cuid_479_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2476
    .lex "$BLOCK", $P101 
    .local pmc fb_tmp_535 
    .local pmc fb_tmp_536 
    .local pmc fb_tmp_537 
    .local pmc fb_tmp_538 
    .local pmc fb_tmp_539 
    .local pmc fb_tmp_540 
    .local pmc fb_tmp_541 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
.annotate 'line', 2477
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback5880
    nqp_get_sc_object $P5004, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5003, $P5004
    set fb_tmp_535, $P5003
    repr_defined $I5001, fb_tmp_535
    unless $I5001 goto if2703_else5881 
    set $P5005, fb_tmp_535["$W"]
    set $P5007, $P5005
    goto if2703_end5882
  if2703_else5881:
    null $P5006
    set $P5007, $P5006
  if2703_end5882:
    unless_null $P5007, vivi_27045883
    nqp_get_sc_object $P5008, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5007, $P5008
  vivi_27045883:
    unless_null $P5007, vivi_27055884
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_27055884:
    set $P5002, $P5007
  fallback5880:
    $P5010 = $P5002."cur_lexpad"()
    set $P101, $P5010
.annotate 'line', 2478
    set fb_tmp_536, $P101
    repr_defined $I5002, fb_tmp_536
    unless $I5002 goto if2706_else5885 
    set $P5011, fb_tmp_536[0]
    set $P5013, $P5011
    goto if2706_end5886
  if2706_else5885:
    null $P5012
    set $P5013, $P5012
  if2706_end5886:
    unless_null $P5013, vivi_27075887
    nqp_get_sc_object $P5014, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5013, $P5014
  vivi_27075887:
    nqp_get_sc_object $P5015, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 2480
    nqp_get_sc_object $P5016, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    find_lex $P5017, "$name"
    set $S5002, $P5017
    concat $S5001, "&", $S5002
    $P5018 = $P5016."new"($S5001 :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    find_lex $P5019, "$past"
    $P5020 = $P5015."new"($P5018, $P5019, "bind" :named("op"))
    $P5013."push"($P5020)
.annotate 'line', 2483
    find_lex $P5021, "$name"
    set $S5004, $P5021
    concat $S5003, "&", $S5004
    $P101."symbol"($S5003, "lexical" :named("scope"))
    find_dynamic_lex $P5022, "$*SCOPE"
    unless_null $P5022, fallback5890
    nqp_get_sc_object $P5024, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5023, $P5024
    set fb_tmp_537, $P5023
    repr_defined $I5004, fb_tmp_537
    unless $I5004 goto if2709_else5891 
    set $P5025, fb_tmp_537["$SCOPE"]
    set $P5027, $P5025
    goto if2709_end5892
  if2709_else5891:
    null $P5026
    set $P5027, $P5026
  if2709_end5892:
    unless_null $P5027, vivi_27105893
    nqp_get_sc_object $P5028, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5027, $P5028
  vivi_27105893:
    unless_null $P5027, vivi_27115894
    die "Contextual $*SCOPE not found"
    box $P5029, "Contextual $*SCOPE not found"
    set $P5027, $P5029
  vivi_27115894:
    set $P5022, $P5027
  fallback5890:
    set $S5005, $P5022
    iseq $I5003, $S5005, "our"
    box $P5073, $I5003
    set $P5072, $P5073
    unless $I5003 goto if2708_end5889 
.annotate 'line', 2484
.annotate 'line', 2487
    find_dynamic_lex $P5030, "$*W"
    unless_null $P5030, fallback5895
    nqp_get_sc_object $P5032, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5031, $P5032
    set fb_tmp_538, $P5031
    repr_defined $I5005, fb_tmp_538
    unless $I5005 goto if2712_else5896 
    set $P5033, fb_tmp_538["$W"]
    set $P5035, $P5033
    goto if2712_end5897
  if2712_else5896:
    null $P5034
    set $P5035, $P5034
  if2712_end5897:
    unless_null $P5035, vivi_27135898
    nqp_get_sc_object $P5036, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5035, $P5036
  vivi_27135898:
    unless_null $P5035, vivi_27145899
    die "Contextual $*W not found"
    box $P5037, "Contextual $*W not found"
    set $P5035, $P5037
  vivi_27145899:
    set $P5030, $P5035
  fallback5895:
    find_dynamic_lex $P5038, "$*PACKAGE"
    unless_null $P5038, fallback5900
    nqp_get_sc_object $P5040, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5039, $P5040
    set fb_tmp_539, $P5039
    repr_defined $I5006, fb_tmp_539
    unless $I5006 goto if2715_else5901 
    set $P5041, fb_tmp_539["$PACKAGE"]
    set $P5043, $P5041
    goto if2715_end5902
  if2715_else5901:
    null $P5042
    set $P5043, $P5042
  if2715_end5902:
    unless_null $P5043, vivi_27165903
    nqp_get_sc_object $P5044, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5043, $P5044
  vivi_27165903:
    unless_null $P5043, vivi_27175904
    die "Contextual $*PACKAGE not found"
    box $P5045, "Contextual $*PACKAGE not found"
    set $P5043, $P5045
  vivi_27175904:
    set $P5038, $P5043
  fallback5900:
    find_lex $P5046, "$name"
    find_lex $P5047, "$past"
    $P5030."install_package_routine"($P5038, $P5046, $P5047)
.annotate 'line', 2488
    set fb_tmp_540, $P101
    repr_defined $I5007, fb_tmp_540
    unless $I5007 goto if2718_else5905 
    set $P5048, fb_tmp_540[0]
    set $P5050, $P5048
    goto if2718_end5906
  if2718_else5905:
    null $P5049
    set $P5050, $P5049
  if2718_end5906:
    unless_null $P5050, vivi_27195907
    nqp_get_sc_object $P5051, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5050, $P5051
  vivi_27195907:
    nqp_get_sc_object $P5052, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 2490
    new $P5053, 'ResizablePMCArray'
    find_lex $P5054, "$name"
    push $P5053, $P5054
    find_lex $P5055, "$/"
    $P5056 = "&lexical_package_lookup"($P5053, $P5055)
.annotate 'line', 2491
    nqp_get_sc_object $P5057, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    find_lex $P5058, "$name"
    set $S5007, $P5058
    concat $S5006, "&", $S5007
    $P5059 = $P5057."new"($S5006 :named("name"), "lexical" :named("scope"))
    $P5060 = $P5052."new"($P5056, $P5059, "bind" :named("op"))
    $P5050."push"($P5060)
.annotate 'line', 2496
    find_dynamic_lex $P5061, "$*W"
    unless_null $P5061, fallback5908
    nqp_get_sc_object $P5063, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5062, $P5063
    set fb_tmp_541, $P5062
    repr_defined $I5008, fb_tmp_541
    unless $I5008 goto if2720_else5909 
    set $P5064, fb_tmp_541["$W"]
    set $P5066, $P5064
    goto if2720_end5910
  if2720_else5909:
    null $P5065
    set $P5066, $P5065
  if2720_end5910:
    unless_null $P5066, vivi_27215911
    nqp_get_sc_object $P5067, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5066, $P5067
  vivi_27215911:
    unless_null $P5066, vivi_27225912
    die "Contextual $*W not found"
    box $P5068, "Contextual $*W not found"
    set $P5066, $P5068
  vivi_27225912:
    set $P5061, $P5066
  fallback5908:
    find_lex $P5069, "$past"
    find_lex $P5070, "$name"
    $P5071 = $P5061."create_code"($P5069, $P5070, 0)
    set $P5072, $P5071
  if2708_end5889:
    .return ($P5072) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_482_1367388600.55005") :anon :lex :outer("cuid_308_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2523
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5002, "$/"
    $P5001 = _lex_param_0."ast"()
    $P5003 = $P5001($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "method_def" :subid("cuid_309_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2527
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5117 = 'cuid_483_1367388600.55005' 
    capture_lex $P5117 
    .const 'Sub' $P5117 = 'cuid_484_1367388600.55005' 
    capture_lex $P5117 
    .lex "$past", $P101 
    .lex "$name", $P102 
    .lex "$lexpast", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_548 
    .local pmc fb_tmp_549 
    .local pmc fb_tmp_550 
    .local pmc fb_tmp_551 
    .local pmc fb_tmp_552 
    .local pmc fb_tmp_553 
    .local pmc fb_tmp_554 
    .local pmc fb_tmp_555 
    .local pmc fb_tmp_556 
    .local pmc fb_tmp_557 
    .local pmc fb_tmp_558 
    .local pmc fb_tmp_559 
    .local pmc fb_tmp_560 
    .local pmc fb_tmp_561 
    .local pmc fb_tmp_573 
    .local pmc fb_tmp_574 
    .local pmc fb_tmp_575 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P103, $P5003
    unless_null _lex_param_1, fallback5956
    nqp_get_sc_object $P5004, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5004
  fallback5956:
    set fb_tmp_548, _lex_param_1
    repr_defined $I5001, fb_tmp_548
    unless $I5001 goto if2744_else5954 
    set $P5005, fb_tmp_548["onlystar"]
    set $P5007, $P5005
    goto if2744_end5955
  if2744_else5954:
    null $P5006
    set $P5007, $P5006
  if2744_end5955:
    unless_null $P5007, vivi_27455957
    nqp_get_sc_object $P5008, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5007, $P5008
  vivi_27455957:
    unless $P5007 goto if2743_else5952 
.annotate 'line', 2531
.annotate 'line', 2532
    $P5009 = "&only_star_block"()
    set $P101, $P5009
    goto if2743_end5953
  if2743_else5952:
.annotate 'line', 2534
.annotate 'line', 2535
    unless_null _lex_param_1, fallback5960
    nqp_get_sc_object $P5010, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5010
  fallback5960:
    set fb_tmp_549, _lex_param_1
    repr_defined $I5002, fb_tmp_549
    unless $I5002 goto if2746_else5958 
    set $P5011, fb_tmp_549["blockoid"]
    set $P5013, $P5011
    goto if2746_end5959
  if2746_else5958:
    null $P5012
    set $P5013, $P5012
  if2746_end5959:
    unless_null $P5013, vivi_27475961
    nqp_get_sc_object $P5014, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5013, $P5014
  vivi_27475961:
    $P5015 = $P5013."ast"()
    set $P101, $P5015
.annotate 'line', 2536
    $P101."blocktype"("declaration")
    find_dynamic_lex $P5016, "$*RETURN_USED"
    unless_null $P5016, fallback5964
    nqp_get_sc_object $P5018, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5017, $P5018
    set fb_tmp_550, $P5017
    repr_defined $I5003, fb_tmp_550
    unless $I5003 goto if2749_else5965 
    set $P5019, fb_tmp_550["$RETURN_USED"]
    set $P5021, $P5019
    goto if2749_end5966
  if2749_else5965:
    null $P5020
    set $P5021, $P5020
  if2749_end5966:
    unless_null $P5021, vivi_27505967
    nqp_get_sc_object $P5022, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5021, $P5022
  vivi_27505967:
    unless_null $P5021, vivi_27515968
    die "Contextual $*RETURN_USED not found"
    box $P5023, "Contextual $*RETURN_USED not found"
    set $P5021, $P5023
  vivi_27515968:
    set $P5016, $P5021
  fallback5964:
    set $P5029, $P5016
    unless $P5016 goto if2748_end5963 
.annotate 'line', 2537
.annotate 'line', 2538
    set fb_tmp_551, $P101
    repr_defined $I5004, fb_tmp_551
    unless $I5004 goto if2752_else5969 
    set $P5024, fb_tmp_551[1]
    set $P5026, $P5024
    goto if2752_end5970
  if2752_else5969:
    null $P5025
    set $P5026, $P5025
  if2752_end5970:
    unless_null $P5026, vivi_27535971
    nqp_get_sc_object $P5027, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5026, $P5027
  vivi_27535971:
    $P5028 = "&wrap_return_handler"($P5026)
    set $P101[1], $P5028
    set $P5029, $P5028
  if2748_end5963:
  if2743_end5953:
    set fb_tmp_552, $P101
    repr_defined $I5005, fb_tmp_552
    unless $I5005 goto if2755_else5974 
    set $P5030, fb_tmp_552["signature_has_invocant"]
    set $P5032, $P5030
    goto if2755_end5975
  if2755_else5974:
    null $P5031
    set $P5032, $P5031
  if2755_end5975:
    unless_null $P5032, vivi_27565976
    nqp_get_sc_object $P5033, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5032, $P5033
  vivi_27565976:
    if $P5032 goto unless2754_end5973 
.annotate 'line', 2543
.annotate 'line', 2544
    set fb_tmp_553, $P101
    repr_defined $I5006, fb_tmp_553
    unless $I5006 goto if2757_else5977 
    set $P5034, fb_tmp_553[0]
    set $P5036, $P5034
    goto if2757_end5978
  if2757_else5977:
    null $P5035
    set $P5036, $P5035
  if2757_end5978:
    unless_null $P5036, vivi_27585979
    nqp_get_sc_object $P5037, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5036, $P5037
  vivi_27585979:
    nqp_get_sc_object $P5038, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    find_dynamic_lex $P5039, "$*PACKAGE"
    unless_null $P5039, fallback5980
    nqp_get_sc_object $P5041, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5040, $P5041
    set fb_tmp_554, $P5040
    repr_defined $I5007, fb_tmp_554
    unless $I5007 goto if2759_else5981 
    set $P5042, fb_tmp_554["$PACKAGE"]
    set $P5044, $P5042
    goto if2759_end5982
  if2759_else5981:
    null $P5043
    set $P5044, $P5043
  if2759_end5982:
    unless_null $P5044, vivi_27605983
    nqp_get_sc_object $P5045, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5044, $P5045
  vivi_27605983:
    unless_null $P5044, vivi_27615984
    die "Contextual $*PACKAGE not found"
    box $P5046, "Contextual $*PACKAGE not found"
    set $P5044, $P5046
  vivi_27615984:
    set $P5039, $P5044
  fallback5980:
    $P5047 = $P5038."new"("self" :named("name"), "lexical" :named("scope"), "param" :named("decl"), $P5039 :named("returns"))
    $P5048 = $P5036."unshift"($P5047)
  unless2754_end5973:
.annotate 'line', 2549
    $P101."symbol"("self", "lexical" :named("scope"))
    box $P5049, ""
    set $P102, $P5049
    unless_null _lex_param_1, fallback5989
    nqp_get_sc_object $P5050, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5050
  fallback5989:
    set fb_tmp_555, _lex_param_1
    repr_defined $I5008, fb_tmp_555
    unless $I5008 goto if2763_else5987 
    set $P5051, fb_tmp_555["deflongname"]
    set $P5053, $P5051
    goto if2763_end5988
  if2763_else5987:
    null $P5052
    set $P5053, $P5052
  if2763_end5988:
    unless_null $P5053, vivi_27645990
    nqp_get_sc_object $P5054, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5053, $P5054
  vivi_27645990:
    unless $P5053 goto if2762_else5985 
.annotate 'line', 2553
    unless_null _lex_param_1, fallback5993
    nqp_get_sc_object $P5055, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5055
  fallback5993:
    set fb_tmp_556, _lex_param_1
    repr_defined $I5009, fb_tmp_556
    unless $I5009 goto if2765_else5991 
    set $P5056, fb_tmp_556["private"]
    set $P5058, $P5056
    goto if2765_end5992
  if2765_else5991:
    null $P5057
    set $P5058, $P5057
  if2765_end5992:
    unless_null $P5058, vivi_27665994
    nqp_get_sc_object $P5059, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5058, $P5059
  vivi_27665994:
    set $S5002, $P5058
.annotate 'line', 2554
    unless_null _lex_param_1, fallback5999
    nqp_get_sc_object $P5060, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5060
  fallback5999:
    set fb_tmp_558, _lex_param_1
    repr_defined $I5011, fb_tmp_558
    unless $I5011 goto if2768_else5997 
    set $P5061, fb_tmp_558["deflongname"]
    set $P5063, $P5061
    goto if2768_end5998
  if2768_else5997:
    null $P5062
    set $P5063, $P5062
  if2768_end5998:
    unless_null $P5063, vivi_27696000
    nqp_get_sc_object $P5064, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5063, $P5064
  vivi_27696000:
    set fb_tmp_557, $P5063
    repr_defined $I5010, fb_tmp_557
    unless $I5010 goto if2767_else5995 
    set $P5065, fb_tmp_557[0]
    set $P5067, $P5065
    goto if2767_end5996
  if2767_else5995:
    null $P5066
    set $P5067, $P5066
  if2767_end5996:
    unless_null $P5067, vivi_27706001
    nqp_get_sc_object $P5068, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5067, $P5068
  vivi_27706001:
    $P5069 = $P5067."ast"()
    set $S5003, $P5069
    concat $S5001, $S5002, $S5003
    box $P5070, $S5001
    set $P102, $P5070
    goto if2762_end5986
  if2762_else5985:
    unless_null _lex_param_1, fallback6006
    nqp_get_sc_object $P5071, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5071
  fallback6006:
    set fb_tmp_559, _lex_param_1
    repr_defined $I5012, fb_tmp_559
    unless $I5012 goto if2772_else6004 
    set $P5072, fb_tmp_559["latename"]
    set $P5074, $P5072
    goto if2772_end6005
  if2772_else6004:
    null $P5073
    set $P5074, $P5073
  if2772_end6005:
    unless_null $P5074, vivi_27736007
    nqp_get_sc_object $P5075, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5074, $P5075
  vivi_27736007:
    set $P5092, $P5074
    unless $P5074 goto if2771_end6003 
.annotate 'line', 2556
    find_dynamic_lex $P5076, "$*PKGDECL"
    unless_null $P5076, fallback6010
    nqp_get_sc_object $P5078, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5077, $P5078
    set fb_tmp_560, $P5077
    repr_defined $I5014, fb_tmp_560
    unless $I5014 goto if2775_else6011 
    set $P5079, fb_tmp_560["$PKGDECL"]
    set $P5081, $P5079
    goto if2775_end6012
  if2775_else6011:
    null $P5080
    set $P5081, $P5080
  if2775_end6012:
    unless_null $P5081, vivi_27766013
    nqp_get_sc_object $P5082, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5081, $P5082
  vivi_27766013:
    unless_null $P5081, vivi_27776014
    die "Contextual $*PKGDECL not found"
    box $P5083, "Contextual $*PKGDECL not found"
    set $P5081, $P5083
  vivi_27776014:
    set $P5076, $P5081
  fallback6010:
    set $S5004, $P5076
    isne $I5013, $S5004, "role"
    unless $I5013 goto if2774_end6009 
.annotate 'line', 2557
.annotate 'line', 2558
    $P5084 = _lex_param_1."CURSOR"()
    $P5085 = $P5084."panic"("Late-bound method name only valid in role")
  if2774_end6009:
    unless_null _lex_param_1, fallback6017
    nqp_get_sc_object $P5086, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5086
  fallback6017:
    set fb_tmp_561, _lex_param_1
    repr_defined $I5015, fb_tmp_561
    unless $I5015 goto if2778_else6015 
    set $P5087, fb_tmp_561["latename"]
    set $P5089, $P5087
    goto if2778_end6016
  if2778_else6015:
    null $P5088
    set $P5089, $P5088
  if2778_end6016:
    unless_null $P5089, vivi_27796018
    nqp_get_sc_object $P5090, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5089, $P5090
  vivi_27796018:
    set $S5006, $P5089
    concat $S5005, "!!LATENAME!!", $S5006
    box $P5091, $S5005
    set $P102, $P5091
    set $P5092, $P102
  if2771_end6003:
  if2762_end5986:
    set $S5007, $P102
    isne $I5016, $S5007, ""
    unless $I5016 goto if2780_end6020 
    .const 'Sub' $P5093 = 'cuid_483_1367388600.55005' 
    capture_lex $P5093
    $P5094 = $P5093()
  if2780_end6020:
.annotate 'line', 2596
    nqp_get_sc_object $P5095, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    $P5096 = $P5095."new"($P101, "takeclosure" :named("op"))
    set $P103, $P5096
    set $P103["sink"], $P101
    set $P103["block_past"], $P101
    set fb_tmp_573, $P101
    repr_defined $I5017, fb_tmp_573
    unless $I5017 goto if2816_else6080 
    set $P5097, fb_tmp_573["code_obj"]
    set $P5099, $P5097
    goto if2816_end6081
  if2816_else6080:
    null $P5098
    set $P5099, $P5098
  if2816_end6081:
    unless_null $P5099, vivi_28176082
    nqp_get_sc_object $P5100, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5099, $P5100
  vivi_28176082:
    set $P103["code_obj"], $P5099
.annotate 'line', 2600
    _lex_param_1."!make"($P103)
    unless_null _lex_param_1, fallback6087
    nqp_get_sc_object $P5101, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5101
  fallback6087:
    set fb_tmp_574, _lex_param_1
    repr_defined $I5018, fb_tmp_574
    unless $I5018 goto if2819_else6085 
    set $P5102, fb_tmp_574["trait"]
    set $P5104, $P5102
    goto if2819_end6086
  if2819_else6085:
    null $P5103
    set $P5104, $P5103
  if2819_end6086:
    unless_null $P5104, vivi_28206088
    nqp_get_sc_object $P5105, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5104, $P5105
  vivi_28206088:
    set $P5116, $P5104
    unless $P5104 goto if2818_end6084 
.annotate 'line', 2601
    unless_null _lex_param_1, fallback6091
    nqp_get_sc_object $P5109, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5109
  fallback6091:
    set fb_tmp_575, _lex_param_1
    repr_defined $I5019, fb_tmp_575
    unless $I5019 goto if2821_else6089 
    set $P5110, fb_tmp_575["trait"]
    set $P5112, $P5110
    goto if2821_end6090
  if2821_else6089:
    null $P5111
    set $P5112, $P5111
  if2821_end6090:
    unless_null $P5112, vivi_28226092
    nqp_get_sc_object $P5113, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5112, $P5113
  vivi_28226092:
    set $P5106, $P5112
    iter $P5108, $P5112
  for_next6093:
    unless $P5108, for_done6095
    shift $P5115, $P5108
  for_redo6094:
    .const 'Sub' $P5114 = 'cuid_484_1367388600.55005' 
    capture_lex $P5114
    $P5106 = $P5114($P5115)
    goto for_next6093
  for_done6095:
    set $P5116, $P5106
  if2818_end6084:
    .return ($P5116) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_483_1367388600.55005") :anon :lex :outer("cuid_309_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2562
    .lex "$meta_meth", $P101 
    .lex "$is_dispatcher", $P102 
    .lex "$code", $P103 
    .local pmc fb_tmp_562 
    .local pmc fb_tmp_563 
    .local pmc fb_tmp_564 
    .local pmc fb_tmp_565 
    .local pmc fb_tmp_566 
    .local pmc fb_tmp_567 
    .local pmc fb_tmp_568 
    .local pmc fb_tmp_569 
    .local pmc fb_tmp_570 
    .local pmc fb_tmp_571 
    .local pmc fb_tmp_572 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P103, $P5003
.annotate 'line', 2564
    find_lex $P5004, "$past"
    find_lex $P5005, "$name"
    $P5004."name"($P5005)
    find_dynamic_lex $P5006, "$*MULTINESS"
    unless_null $P5006, fallback6023
    nqp_get_sc_object $P5008, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5007, $P5008
    set fb_tmp_562, $P5007
    repr_defined $I5002, fb_tmp_562
    unless $I5002 goto if2782_else6024 
    set $P5009, fb_tmp_562["$MULTINESS"]
    set $P5011, $P5009
    goto if2782_end6025
  if2782_else6024:
    null $P5010
    set $P5011, $P5010
  if2782_end6025:
    unless_null $P5011, vivi_27836026
    nqp_get_sc_object $P5012, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5011, $P5012
  vivi_27836026:
    unless_null $P5011, vivi_27846027
    die "Contextual $*MULTINESS not found"
    box $P5013, "Contextual $*MULTINESS not found"
    set $P5011, $P5013
  vivi_27846027:
    set $P5006, $P5011
  fallback6023:
    set $S5001, $P5006
    iseq $I5001, $S5001, "multi"
    unless $I5001 goto if2781_else6021 
    set $S5002, "add_multi_method"
    goto if2781_end6022
  if2781_else6021:
    set $S5002, "add_method"
  if2781_end6022:
    box $P5014, $S5002
    set $P101, $P5014
    find_dynamic_lex $P5015, "$*MULTINESS"
    unless_null $P5015, fallback6028
    nqp_get_sc_object $P5017, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5016, $P5017
    set fb_tmp_563, $P5016
    repr_defined $I5004, fb_tmp_563
    unless $I5004 goto if2785_else6029 
    set $P5018, fb_tmp_563["$MULTINESS"]
    set $P5020, $P5018
    goto if2785_end6030
  if2785_else6029:
    null $P5019
    set $P5020, $P5019
  if2785_end6030:
    unless_null $P5020, vivi_27866031
    nqp_get_sc_object $P5021, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5020, $P5021
  vivi_27866031:
    unless_null $P5020, vivi_27876032
    die "Contextual $*MULTINESS not found"
    box $P5022, "Contextual $*MULTINESS not found"
    set $P5020, $P5022
  vivi_27876032:
    set $P5015, $P5020
  fallback6028:
    set $S5003, $P5015
    iseq $I5003, $S5003, "proto"
    box $P5023, $I5003
    set $P102, $P5023
.annotate 'line', 2569
    find_dynamic_lex $P5024, "$*W"
    unless_null $P5024, fallback6033
    nqp_get_sc_object $P5026, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5025, $P5026
    set fb_tmp_564, $P5025
    repr_defined $I5005, fb_tmp_564
    unless $I5005 goto if2788_else6034 
    set $P5027, fb_tmp_564["$W"]
    set $P5029, $P5027
    goto if2788_end6035
  if2788_else6034:
    null $P5028
    set $P5029, $P5028
  if2788_end6035:
    unless_null $P5029, vivi_27896036
    nqp_get_sc_object $P5030, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5029, $P5030
  vivi_27896036:
    unless_null $P5029, vivi_27906037
    die "Contextual $*W not found"
    box $P5031, "Contextual $*W not found"
    set $P5029, $P5031
  vivi_27906037:
    set $P5024, $P5029
  fallback6033:
    find_lex $P5032, "$past"
    find_lex $P5033, "$name"
    $P5034 = $P5024."create_code"($P5032, $P5033, $P102)
    set $P103, $P5034
    find_dynamic_lex $P5035, "$*MULTINESS"
    unless_null $P5035, fallback6040
    nqp_get_sc_object $P5037, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5036, $P5037
    set fb_tmp_565, $P5036
    repr_defined $I5007, fb_tmp_565
    unless $I5007 goto if2792_else6041 
    set $P5038, fb_tmp_565["$MULTINESS"]
    set $P5040, $P5038
    goto if2792_end6042
  if2792_else6041:
    null $P5039
    set $P5040, $P5039
  if2792_end6042:
    unless_null $P5040, vivi_27936043
    nqp_get_sc_object $P5041, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5040, $P5041
  vivi_27936043:
    unless_null $P5040, vivi_27946044
    die "Contextual $*MULTINESS not found"
    box $P5042, "Contextual $*MULTINESS not found"
    set $P5040, $P5042
  vivi_27946044:
    set $P5035, $P5040
  fallback6040:
    set $S5004, $P5035
    iseq $I5006, $S5004, "multi"
    unless $I5006 goto if2791_end6039 
.annotate 'line', 2570
    find_lex $P5043, "$past"
    $P5044 = "&attach_multi_signature"($P103, $P5043)
  if2791_end6039:
.annotate 'line', 2571
    find_dynamic_lex $P5045, "$*W"
    unless_null $P5045, fallback6045
    nqp_get_sc_object $P5047, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5046, $P5047
    set fb_tmp_566, $P5046
    repr_defined $I5008, fb_tmp_566
    unless $I5008 goto if2795_else6046 
    set $P5048, fb_tmp_566["$W"]
    set $P5050, $P5048
    goto if2795_end6047
  if2795_else6046:
    null $P5049
    set $P5050, $P5049
  if2795_end6047:
    unless_null $P5050, vivi_27966048
    nqp_get_sc_object $P5051, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5050, $P5051
  vivi_27966048:
    unless_null $P5050, vivi_27976049
    die "Contextual $*W not found"
    box $P5052, "Contextual $*W not found"
    set $P5050, $P5052
  vivi_27976049:
    set $P5045, $P5050
  fallback6045:
    find_dynamic_lex $P5053, "$*PACKAGE"
    unless_null $P5053, fallback6050
    nqp_get_sc_object $P5055, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5054, $P5055
    set fb_tmp_567, $P5054
    repr_defined $I5009, fb_tmp_567
    unless $I5009 goto if2798_else6051 
    set $P5056, fb_tmp_567["$PACKAGE"]
    set $P5058, $P5056
    goto if2798_end6052
  if2798_else6051:
    null $P5057
    set $P5058, $P5057
  if2798_end6052:
    unless_null $P5058, vivi_27996053
    nqp_get_sc_object $P5059, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5058, $P5059
  vivi_27996053:
    unless_null $P5058, vivi_28006054
    die "Contextual $*PACKAGE not found"
    box $P5060, "Contextual $*PACKAGE not found"
    set $P5058, $P5060
  vivi_28006054:
    set $P5053, $P5058
  fallback6050:
    find_lex $P5061, "$name"
    $P5045."pkg_add_method"($P5053, $P101, $P5061, $P103)
    find_lex $P5062, "$past"
    set $P5062["code_obj"], $P103
    find_dynamic_lex $P5063, "$*SCOPE"
    unless_null $P5063, fallback6057
    nqp_get_sc_object $P5065, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5064, $P5065
    set fb_tmp_568, $P5064
    repr_defined $I5011, fb_tmp_568
    unless $I5011 goto if2802_else6058 
    set $P5066, fb_tmp_568["$SCOPE"]
    set $P5068, $P5066
    goto if2802_end6059
  if2802_else6058:
    null $P5067
    set $P5068, $P5067
  if2802_end6059:
    unless_null $P5068, vivi_28036060
    nqp_get_sc_object $P5069, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5068, $P5069
  vivi_28036060:
    unless_null $P5068, vivi_28046061
    die "Contextual $*SCOPE not found"
    box $P5070, "Contextual $*SCOPE not found"
    set $P5068, $P5070
  vivi_28046061:
    set $P5063, $P5068
  fallback6057:
    set $S5005, $P5063
    iseq $I5010, $S5005, "our"
    unless $I5010 goto if2801_end6056 
.annotate 'line', 2575
.annotate 'line', 2576
    find_dynamic_lex $P5071, "$*W"
    unless_null $P5071, fallback6062
    nqp_get_sc_object $P5073, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5072, $P5073
    set fb_tmp_569, $P5072
    repr_defined $I5012, fb_tmp_569
    unless $I5012 goto if2805_else6063 
    set $P5074, fb_tmp_569["$W"]
    set $P5076, $P5074
    goto if2805_end6064
  if2805_else6063:
    null $P5075
    set $P5076, $P5075
  if2805_end6064:
    unless_null $P5076, vivi_28066065
    nqp_get_sc_object $P5077, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5076, $P5077
  vivi_28066065:
    unless_null $P5076, vivi_28076066
    die "Contextual $*W not found"
    box $P5078, "Contextual $*W not found"
    set $P5076, $P5078
  vivi_28076066:
    set $P5071, $P5076
  fallback6062:
    find_dynamic_lex $P5079, "$*PACKAGE"
    unless_null $P5079, fallback6067
    nqp_get_sc_object $P5081, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5080, $P5081
    set fb_tmp_570, $P5080
    repr_defined $I5013, fb_tmp_570
    unless $I5013 goto if2808_else6068 
    set $P5082, fb_tmp_570["$PACKAGE"]
    set $P5084, $P5082
    goto if2808_end6069
  if2808_else6068:
    null $P5083
    set $P5084, $P5083
  if2808_end6069:
    unless_null $P5084, vivi_28096070
    nqp_get_sc_object $P5085, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5084, $P5085
  vivi_28096070:
    unless_null $P5084, vivi_28106071
    die "Contextual $*PACKAGE not found"
    box $P5086, "Contextual $*PACKAGE not found"
    set $P5084, $P5086
  vivi_28106071:
    set $P5079, $P5084
  fallback6067:
    find_lex $P5087, "$name"
    find_lex $P5088, "$past"
    $P5089 = $P5071."install_package_routine"($P5079, $P5087, $P5088)
  if2801_end6056:
    set $P5115, $P102
    unless $P102 goto if2811_end6073 
.annotate 'line', 2581
.annotate 'line', 2582
    find_lex $P5090, "$past"
    set fb_tmp_571, $P5090
    repr_defined $I5014, fb_tmp_571
    unless $I5014 goto if2812_else6074 
    set $P5091, fb_tmp_571[0]
    set $P5093, $P5091
    goto if2812_end6075
  if2812_else6074:
    null $P5092
    set $P5093, $P5092
  if2812_end6075:
    unless_null $P5093, vivi_28136076
    nqp_get_sc_object $P5094, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5093, $P5094
  vivi_28136076:
    nqp_get_sc_object $P5095, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 2584
    nqp_get_sc_object $P5096, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5097 = $P5096."new"("CURRENT_DISPATCH_CAPTURE" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2585
    nqp_get_sc_object $P5098, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    $P5099 = $P5098."new"("savecapture" :named("op"))
    $P5100 = $P5095."new"($P5097, $P5099, "bind" :named("op"))
    $P5093."push"($P5100)
.annotate 'line', 2587
    find_lex $P5101, "$past"
    set fb_tmp_572, $P5101
    repr_defined $I5015, fb_tmp_572
    unless $I5015 goto if2814_else6077 
    set $P5102, fb_tmp_572[0]
    set $P5104, $P5102
    goto if2814_end6078
  if2814_else6077:
    null $P5103
    set $P5104, $P5103
  if2814_end6078:
    unless_null $P5104, vivi_28156079
    nqp_get_sc_object $P5105, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5104, $P5105
  vivi_28156079:
    nqp_get_sc_object $P5106, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 2589
    nqp_get_sc_object $P5107, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5108 = $P5107."new"("&*CURRENT_DISPATCHER" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2590
    nqp_get_sc_object $P5109, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    nqp_get_sc_object $P5110, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    $P5111 = $P5110."new"("curcode" :named("op"))
    $P5112 = $P5109."new"($P5111, "getcodeobj" :named("op"))
    $P5113 = $P5106."new"($P5108, $P5112, "bind" :named("op"))
    $P5114 = $P5104."push"($P5113)
    set $P5115, $P5114
  if2811_end6073:
    .return ($P5115) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_484_1367388600.55005") :anon :lex :outer("cuid_309_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2602
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5002, "$/"
    $P5001 = _lex_param_0."ast"()
    $P5003 = $P5001($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "signature" :subid("cuid_310_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2654
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5033 = 'cuid_485_1367388600.55005' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_486_1367388600.55005' 
    capture_lex $P5033 
    .lex "$BLOCK", $P101 
    .lex "$BLOCKINIT", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_576 
    .local pmc fb_tmp_577 
    .local pmc fb_tmp_578 
    .local pmc fb_tmp_581 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
.annotate 'line', 2655
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback6096
    nqp_get_sc_object $P5005, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5004, $P5005
    set fb_tmp_576, $P5004
    repr_defined $I5001, fb_tmp_576
    unless $I5001 goto if2823_else6097 
    set $P5006, fb_tmp_576["$W"]
    set $P5008, $P5006
    goto if2823_end6098
  if2823_else6097:
    null $P5007
    set $P5008, $P5007
  if2823_end6098:
    unless_null $P5008, vivi_28246099
    nqp_get_sc_object $P5009, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5008, $P5009
  vivi_28246099:
    unless_null $P5008, vivi_28256100
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_28256100:
    set $P5003, $P5008
  fallback6096:
    $P5011 = $P5003."cur_lexpad"()
    set $P101, $P5011
    set fb_tmp_577, $P101
    repr_defined $I5002, fb_tmp_577
    unless $I5002 goto if2826_else6101 
    set $P5012, fb_tmp_577[0]
    set $P5014, $P5012
    goto if2826_end6102
  if2826_else6101:
    null $P5013
    set $P5014, $P5013
  if2826_end6102:
    unless_null $P5014, vivi_28276103
    nqp_get_sc_object $P5015, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5014, $P5015
  vivi_28276103:
    set $P102, $P5014
    unless_null _lex_param_1, fallback6108
    nqp_get_sc_object $P5016, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5016
  fallback6108:
    set fb_tmp_578, _lex_param_1
    repr_defined $I5003, fb_tmp_578
    unless $I5003 goto if2829_else6106 
    set $P5017, fb_tmp_578["invocant"]
    set $P5019, $P5017
    goto if2829_end6107
  if2829_else6106:
    null $P5018
    set $P5019, $P5018
  if2829_end6107:
    unless_null $P5019, vivi_28306109
    nqp_get_sc_object $P5020, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5019, $P5020
  vivi_28306109:
    unless $P5019 goto if2828_end6105 
    .const 'Sub' $P5021 = 'cuid_485_1367388600.55005' 
    capture_lex $P5021
    $P5022 = $P5021()
  if2828_end6105:
    unless_null _lex_param_1, fallback6119
    nqp_get_sc_object $P5026, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5026
  fallback6119:
    set fb_tmp_581, _lex_param_1
    repr_defined $I5004, fb_tmp_581
    unless $I5004 goto if2835_else6117 
    set $P5027, fb_tmp_581["parameter"]
    set $P5029, $P5027
    goto if2835_end6118
  if2835_else6117:
    null $P5028
    set $P5029, $P5028
  if2835_end6118:
    unless_null $P5029, vivi_28366120
    nqp_get_sc_object $P5030, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5029, $P5030
  vivi_28366120:
    set $P5023, $P5029
    iter $P5025, $P5029
  for_next6121:
    unless $P5025, for_done6123
    shift $P5032, $P5025
  for_redo6122:
    .const 'Sub' $P5031 = 'cuid_486_1367388600.55005' 
    capture_lex $P5031
    $P5023 = $P5031($P5032)
    goto for_next6121
  for_done6123:
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_485_1367388600.55005") :anon :lex :outer("cuid_310_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2657
    .lex "$inv", $P101 
    .local pmc fb_tmp_579 
    .local pmc fb_tmp_580 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
.annotate 'line', 2658
    find_lex $P5002, "$/"
    unless_null $P5002, fallback6114
    nqp_get_sc_object $P5003, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5002, $P5003
  fallback6114:
    set fb_tmp_580, $P5002
    repr_defined $I5002, fb_tmp_580
    unless $I5002 goto if2832_else6112 
    set $P5004, fb_tmp_580["invocant"]
    set $P5006, $P5004
    goto if2832_end6113
  if2832_else6112:
    null $P5005
    set $P5006, $P5005
  if2832_end6113:
    unless_null $P5006, vivi_28336115
    nqp_get_sc_object $P5007, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5006, $P5007
  vivi_28336115:
    set fb_tmp_579, $P5006
    repr_defined $I5001, fb_tmp_579
    unless $I5001 goto if2831_else6110 
    set $P5008, fb_tmp_579[0]
    set $P5010, $P5008
    goto if2831_end6111
  if2831_else6110:
    null $P5009
    set $P5010, $P5009
  if2831_end6111:
    unless_null $P5010, vivi_28346116
    nqp_get_sc_object $P5011, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5010, $P5011
  vivi_28346116:
    $P5012 = $P5010."ast"()
    set $P101, $P5012
.annotate 'line', 2659
    find_lex $P5013, "$BLOCKINIT"
    $P5013."push"($P101)
.annotate 'line', 2660
    find_lex $P5014, "$BLOCKINIT"
    nqp_get_sc_object $P5015, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 2662
    nqp_get_sc_object $P5016, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5017 = $P5016."new"("self" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2663
    nqp_get_sc_object $P5018, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5019 = $P101."name"()
    $P5020 = $P5018."new"("lexical" :named("scope"), $P5019 :named("name"))
    $P5021 = $P5015."new"($P5017, $P5020, "bind" :named("op"))
    $P5014."push"($P5021)
    find_lex $P5022, "$BLOCK"
    box $P5023, 1
    set $P5022["signature_has_invocant"], $P5023
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_486_1367388600.55005") :anon :lex :outer("cuid_310_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2667
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "$BLOCKINIT"
    $P5002 = _lex_param_0."ast"()
    $P5003 = $P5001."push"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "parameter" :subid("cuid_311_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2670
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5134 = 'cuid_488_1367388600.55005' 
    capture_lex $P5134 
    .lex "$quant", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_582 
    .local pmc fb_tmp_583 
    .local pmc fb_tmp_584 
    .local pmc fb_tmp_585 
    .local pmc fb_tmp_586 
    .local pmc fb_tmp_587 
    .local pmc fb_tmp_588 
    .local pmc fb_tmp_589 
    .local pmc fb_tmp_590 
    .local pmc fb_tmp_591 
    .local pmc fb_tmp_592 
    .local pmc fb_tmp_593 
    .local pmc fb_tmp_594 
    .local pmc fb_tmp_595 
    .local pmc fb_tmp_596 
    .local pmc fb_tmp_597 
    .local pmc fb_tmp_598 
    .local pmc fb_tmp_599 
    .local pmc fb_tmp_604 
    .local pmc fb_tmp_605 
    .local pmc fb_tmp_606 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
    unless_null _lex_param_1, fallback6126
    nqp_get_sc_object $P5003, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5003
  fallback6126:
    set fb_tmp_582, _lex_param_1
    repr_defined $I5001, fb_tmp_582
    unless $I5001 goto if2837_else6124 
    set $P5004, fb_tmp_582["quant"]
    set $P5006, $P5004
    goto if2837_end6125
  if2837_else6124:
    null $P5005
    set $P5006, $P5005
  if2837_end6125:
    unless_null $P5006, vivi_28386127
    nqp_get_sc_object $P5007, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5006, $P5007
  vivi_28386127:
    set $P101, $P5006
    unless_null _lex_param_1, fallback6132
    nqp_get_sc_object $P5008, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5008
  fallback6132:
    set fb_tmp_583, _lex_param_1
    repr_defined $I5002, fb_tmp_583
    unless $I5002 goto if2840_else6130 
    set $P5009, fb_tmp_583["named_param"]
    set $P5011, $P5009
    goto if2840_end6131
  if2840_else6130:
    null $P5010
    set $P5011, $P5010
  if2840_end6131:
    unless_null $P5011, vivi_28416133
    nqp_get_sc_object $P5012, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5011, $P5012
  vivi_28416133:
    unless $P5011 goto if2839_else6128 
.annotate 'line', 2673
.annotate 'line', 2674
    unless_null _lex_param_1, fallback6136
    nqp_get_sc_object $P5013, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5013
  fallback6136:
    set fb_tmp_584, _lex_param_1
    repr_defined $I5003, fb_tmp_584
    unless $I5003 goto if2842_else6134 
    set $P5014, fb_tmp_584["named_param"]
    set $P5016, $P5014
    goto if2842_end6135
  if2842_else6134:
    null $P5015
    set $P5016, $P5015
  if2842_end6135:
    unless_null $P5016, vivi_28436137
    nqp_get_sc_object $P5017, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5016, $P5017
  vivi_28436137:
    $P5018 = $P5016."ast"()
    set $P102, $P5018
    set $S5001, $P101
    isne $I5004, $S5001, "!"
    box $P5035, $I5004
    set $P5034, $P5035
    unless $I5004 goto if2844_end6139 
.annotate 'line', 2675
.annotate 'line', 2676
    unless_null _lex_param_1, fallback6146
    nqp_get_sc_object $P5019, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5019
  fallback6146:
    set fb_tmp_587, _lex_param_1
    repr_defined $I5007, fb_tmp_587
    unless $I5007 goto if2847_else6144 
    set $P5020, fb_tmp_587["named_param"]
    set $P5022, $P5020
    goto if2847_end6145
  if2847_else6144:
    null $P5021
    set $P5022, $P5021
  if2847_end6145:
    unless_null $P5022, vivi_28486147
    nqp_get_sc_object $P5023, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5022, $P5023
  vivi_28486147:
    set fb_tmp_586, $P5022
    repr_defined $I5006, fb_tmp_586
    unless $I5006 goto if2846_else6142 
    set $P5024, fb_tmp_586["param_var"]
    set $P5026, $P5024
    goto if2846_end6143
  if2846_else6142:
    null $P5025
    set $P5026, $P5025
  if2846_end6143:
    unless_null $P5026, vivi_28496148
    nqp_get_sc_object $P5027, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5026, $P5027
  vivi_28496148:
    set fb_tmp_585, $P5026
    repr_defined $I5005, fb_tmp_585
    unless $I5005 goto if2845_else6140 
    set $P5028, fb_tmp_585["sigil"]
    set $P5030, $P5028
    goto if2845_end6141
  if2845_else6140:
    null $P5029
    set $P5030, $P5029
  if2845_end6141:
    unless_null $P5030, vivi_28506149
    nqp_get_sc_object $P5031, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5030, $P5031
  vivi_28506149:
    $P5032 = "&default_for"($P5030)
    $P5033 = $P102."default"($P5032)
    set $P5034, $P5033
  if2844_end6139:
    goto if2839_end6129
  if2839_else6128:
.annotate 'line', 2679
.annotate 'line', 2680
    unless_null _lex_param_1, fallback6152
    nqp_get_sc_object $P5036, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5036
  fallback6152:
    set fb_tmp_588, _lex_param_1
    repr_defined $I5008, fb_tmp_588
    unless $I5008 goto if2851_else6150 
    set $P5037, fb_tmp_588["param_var"]
    set $P5039, $P5037
    goto if2851_end6151
  if2851_else6150:
    null $P5038
    set $P5039, $P5038
  if2851_end6151:
    unless_null $P5039, vivi_28526153
    nqp_get_sc_object $P5040, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5039, $P5040
  vivi_28526153:
    $P5041 = $P5039."ast"()
    set $P102, $P5041
    set $S5002, $P101
    iseq $I5009, $S5002, "*"
    unless $I5009 goto if2853_else6154 
.annotate 'line', 2681
.annotate 'line', 2682
    $P102."slurpy"(1)
.annotate 'line', 2683
    unless_null _lex_param_1, fallback6160
    nqp_get_sc_object $P5042, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5042
  fallback6160:
    set fb_tmp_590, _lex_param_1
    repr_defined $I5012, fb_tmp_590
    unless $I5012 goto if2855_else6158 
    set $P5043, fb_tmp_590["param_var"]
    set $P5045, $P5043
    goto if2855_end6159
  if2855_else6158:
    null $P5044
    set $P5045, $P5044
  if2855_end6159:
    unless_null $P5045, vivi_28566161
    nqp_get_sc_object $P5046, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5045, $P5046
  vivi_28566161:
    set fb_tmp_589, $P5045
    repr_defined $I5011, fb_tmp_589
    unless $I5011 goto if2854_else6156 
    set $P5047, fb_tmp_589["sigil"]
    set $P5049, $P5047
    goto if2854_end6157
  if2854_else6156:
    null $P5048
    set $P5049, $P5048
  if2854_end6157:
    unless_null $P5049, vivi_28576162
    nqp_get_sc_object $P5050, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5049, $P5050
  vivi_28576162:
    set $S5003, $P5049
    iseq $I5010, $S5003, "%"
    $P5051 = $P102."named"($I5010)
    set $P5065, $P5051
    goto if2853_end6155
  if2853_else6154:
    set $S5004, $P101
    iseq $I5013, $S5004, "?"
    box $P5064, $I5013
    set $P5063, $P5064
    unless $I5013 goto if2858_end6164 
.annotate 'line', 2685
.annotate 'line', 2686
    unless_null _lex_param_1, fallback6169
    nqp_get_sc_object $P5052, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5052
  fallback6169:
    set fb_tmp_592, _lex_param_1
    repr_defined $I5015, fb_tmp_592
    unless $I5015 goto if2860_else6167 
    set $P5053, fb_tmp_592["param_var"]
    set $P5055, $P5053
    goto if2860_end6168
  if2860_else6167:
    null $P5054
    set $P5055, $P5054
  if2860_end6168:
    unless_null $P5055, vivi_28616170
    nqp_get_sc_object $P5056, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5055, $P5056
  vivi_28616170:
    set fb_tmp_591, $P5055
    repr_defined $I5014, fb_tmp_591
    unless $I5014 goto if2859_else6165 
    set $P5057, fb_tmp_591["sigil"]
    set $P5059, $P5057
    goto if2859_end6166
  if2859_else6165:
    null $P5058
    set $P5059, $P5058
  if2859_end6166:
    unless_null $P5059, vivi_28626171
    nqp_get_sc_object $P5060, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5059, $P5060
  vivi_28626171:
    $P5061 = "&default_for"($P5059)
    $P5062 = $P102."default"($P5061)
    set $P5063, $P5062
  if2858_end6164:
    set $P5065, $P5063
  if2853_end6155:
  if2839_end6129:
    unless_null _lex_param_1, fallback6176
    nqp_get_sc_object $P5066, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5066
  fallback6176:
    set fb_tmp_593, _lex_param_1
    repr_defined $I5016, fb_tmp_593
    unless $I5016 goto if2864_else6174 
    set $P5067, fb_tmp_593["default_value"]
    set $P5069, $P5067
    goto if2864_end6175
  if2864_else6174:
    null $P5068
    set $P5069, $P5068
  if2864_end6175:
    unless_null $P5069, vivi_28656177
    nqp_get_sc_object $P5070, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5069, $P5070
  vivi_28656177:
    unless $P5069 goto if2863_end6173 
.annotate 'line', 2689
    set $S5005, $P101
    iseq $I5017, $S5005, "*"
    unless $I5017 goto if2866_end6179 
.annotate 'line', 2690
.annotate 'line', 2691
    $P5071 = _lex_param_1."CURSOR"()
    $P5072 = $P5071."panic"("Can't put default on slurpy parameter")
  if2866_end6179:
    set $S5006, $P101
    iseq $I5018, $S5006, "!"
    unless $I5018 goto if2867_end6181 
.annotate 'line', 2693
.annotate 'line', 2694
    $P5073 = _lex_param_1."CURSOR"()
    $P5074 = $P5073."panic"("Can't put default on required parameter")
  if2867_end6181:
.annotate 'line', 2696
    unless_null _lex_param_1, fallback6188
    nqp_get_sc_object $P5075, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5075
  fallback6188:
    set fb_tmp_596, _lex_param_1
    repr_defined $I5021, fb_tmp_596
    unless $I5021 goto if2870_else6186 
    set $P5076, fb_tmp_596["default_value"]
    set $P5078, $P5076
    goto if2870_end6187
  if2870_else6186:
    null $P5077
    set $P5078, $P5077
  if2870_end6187:
    unless_null $P5078, vivi_28716189
    nqp_get_sc_object $P5079, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5078, $P5079
  vivi_28716189:
    set fb_tmp_595, $P5078
    repr_defined $I5020, fb_tmp_595
    unless $I5020 goto if2869_else6184 
    set $P5080, fb_tmp_595[0]
    set $P5082, $P5080
    goto if2869_end6185
  if2869_else6184:
    null $P5081
    set $P5082, $P5081
  if2869_end6185:
    unless_null $P5082, vivi_28726190
    nqp_get_sc_object $P5083, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5082, $P5083
  vivi_28726190:
    set fb_tmp_594, $P5082
    repr_defined $I5019, fb_tmp_594
    unless $I5019 goto if2868_else6182 
    set $P5084, fb_tmp_594["EXPR"]
    set $P5086, $P5084
    goto if2868_end6183
  if2868_else6182:
    null $P5085
    set $P5086, $P5085
  if2868_end6183:
    unless_null $P5086, vivi_28736191
    nqp_get_sc_object $P5087, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5086, $P5087
  vivi_28736191:
    $P5088 = $P5086."ast"()
    $P5089 = $P102."default"($P5088)
  if2863_end6173:
.annotate 'line', 2698
    $P5090 = $P102."default"()
    if $P5090 goto unless2874_end6193 
    find_dynamic_lex $P5091, "$*W"
    unless_null $P5091, fallback6194
    nqp_get_sc_object $P5093, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5092, $P5093
    set fb_tmp_597, $P5092
    repr_defined $I5022, fb_tmp_597
    unless $I5022 goto if2875_else6195 
    set $P5094, fb_tmp_597["$W"]
    set $P5096, $P5094
    goto if2875_end6196
  if2875_else6195:
    null $P5095
    set $P5096, $P5095
  if2875_end6196:
    unless_null $P5096, vivi_28766197
    nqp_get_sc_object $P5097, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5096, $P5097
  vivi_28766197:
    unless_null $P5096, vivi_28776198
    die "Contextual $*W not found"
    box $P5098, "Contextual $*W not found"
    set $P5096, $P5098
  vivi_28776198:
    set $P5091, $P5096
  fallback6194:
    $P5099 = $P5091."cur_lexpad"()
    find_dynamic_lex $P5100, "$*W"
    unless_null $P5100, fallback6199
    nqp_get_sc_object $P5102, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5101, $P5102
    set fb_tmp_598, $P5101
    repr_defined $I5023, fb_tmp_598
    unless $I5023 goto if2878_else6200 
    set $P5103, fb_tmp_598["$W"]
    set $P5105, $P5103
    goto if2878_end6201
  if2878_else6200:
    null $P5104
    set $P5105, $P5104
  if2878_end6201:
    unless_null $P5105, vivi_28796202
    nqp_get_sc_object $P5106, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5105, $P5106
  vivi_28796202:
    unless_null $P5105, vivi_28806203
    die "Contextual $*W not found"
    box $P5107, "Contextual $*W not found"
    set $P5105, $P5107
  vivi_28806203:
    set $P5100, $P5105
  fallback6199:
    $P5108 = $P5100."cur_lexpad"()
    $P5109 = $P5108."arity"()
    set $N5002, $P5109
    set $N5003, 1
    add $N5001, $N5002, $N5003
    $P5110 = $P5099."arity"($N5001)
  unless2874_end6193:
    unless_null _lex_param_1, fallback6208
    nqp_get_sc_object $P5111, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5111
  fallback6208:
    set fb_tmp_599, _lex_param_1
    repr_defined $I5024, fb_tmp_599
    unless $I5024 goto if2882_else6206 
    set $P5112, fb_tmp_599["typename"]
    set $P5114, $P5112
    goto if2882_end6207
  if2882_else6206:
    null $P5113
    set $P5114, $P5113
  if2882_end6207:
    unless_null $P5114, vivi_28836209
    nqp_get_sc_object $P5115, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5114, $P5115
  vivi_28836209:
    unless $P5114 goto if2881_end6205 
    .const 'Sub' $P5116 = 'cuid_488_1367388600.55005' 
    capture_lex $P5116
    $P5117 = $P5116()
  if2881_end6205:
    unless_null _lex_param_1, fallback6236
    nqp_get_sc_object $P5118, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5118
  fallback6236:
    set fb_tmp_604, _lex_param_1
    repr_defined $I5025, fb_tmp_604
    unless $I5025 goto if2897_else6234 
    set $P5119, fb_tmp_604["definedness"]
    set $P5121, $P5119
    goto if2897_end6235
  if2897_else6234:
    null $P5120
    set $P5121, $P5120
  if2897_end6235:
    unless_null $P5121, vivi_28986237
    nqp_get_sc_object $P5122, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5121, $P5122
  vivi_28986237:
    unless $P5121 goto if2896_end6233 
.annotate 'line', 2713
    unless_null _lex_param_1, fallback6242
    nqp_get_sc_object $P5123, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5123
  fallback6242:
    set fb_tmp_606, _lex_param_1
    repr_defined $I5027, fb_tmp_606
    unless $I5027 goto if2900_else6240 
    set $P5124, fb_tmp_606["definedness"]
    set $P5126, $P5124
    goto if2900_end6241
  if2900_else6240:
    null $P5125
    set $P5126, $P5125
  if2900_end6241:
    unless_null $P5126, vivi_29016243
    nqp_get_sc_object $P5127, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5126, $P5127
  vivi_29016243:
    set fb_tmp_605, $P5126
    repr_defined $I5026, fb_tmp_605
    unless $I5026 goto if2899_else6238 
    set $P5128, fb_tmp_605[0]
    set $P5130, $P5128
    goto if2899_end6239
  if2899_else6238:
    null $P5129
    set $P5130, $P5129
  if2899_end6239:
    unless_null $P5130, vivi_29026244
    nqp_get_sc_object $P5131, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5130, $P5131
  vivi_29026244:
    set $S5007, $P5130
    box $P5132, $S5007
    set $P102["definedness"], $P5132
  if2896_end6233:
.annotate 'line', 2717
    $P5133 = _lex_param_1."!make"($P102)
    .return ($P5133) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_488_1367388600.55005") :anon :lex :outer("cuid_311_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2701
    .const 'Sub' $P5019 = 'cuid_487_1367388600.55005' 
    capture_lex $P5019 
    .lex "$type", $P101 
    .local pmc fb_tmp_600 
    .local pmc fb_tmp_601 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
.annotate 'line', 2702
    find_lex $P5002, "$/"
    unless_null $P5002, fallback6214
    nqp_get_sc_object $P5003, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5002, $P5003
  fallback6214:
    set fb_tmp_601, $P5002
    repr_defined $I5002, fb_tmp_601
    unless $I5002 goto if2885_else6212 
    set $P5004, fb_tmp_601["typename"]
    set $P5006, $P5004
    goto if2885_end6213
  if2885_else6212:
    null $P5005
    set $P5006, $P5005
  if2885_end6213:
    unless_null $P5006, vivi_28866215
    nqp_get_sc_object $P5007, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5006, $P5007
  vivi_28866215:
    set fb_tmp_600, $P5006
    repr_defined $I5001, fb_tmp_600
    unless $I5001 goto if2884_else6210 
    set $P5008, fb_tmp_600[0]
    set $P5010, $P5008
    goto if2884_end6211
  if2884_else6210:
    null $P5009
    set $P5010, $P5009
  if2884_end6211:
    unless_null $P5010, vivi_28876216
    nqp_get_sc_object $P5011, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5010, $P5011
  vivi_28876216:
    $P5012 = $P5010."ast"()
    $P5013 = $P5012."value"()
    set $P101, $P5013
.annotate 'line', 2703
    find_lex $P5014, "$past"
    $P5014."returns"($P101)
    repr_get_primitive_type_spec $I5003, $P101
    box $P5018, $I5003
    set $P5017, $P5018
    unless $I5003 goto if2888_end6218 
    .const 'Sub' $P5015 = 'cuid_487_1367388600.55005' 
    capture_lex $P5015
    $P5016 = $P5015($P5018)
    set $P5017, $P5016
  if2888_end6218:
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_487_1367388600.55005") :anon :lex :outer("cuid_488_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2704
    .param pmc _lex_param_0 
    .lex "$prim", _lex_param_0 
    .local pmc fb_tmp_602 
    .local pmc fb_tmp_603 
.annotate 'line', 2705
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback6219
    nqp_get_sc_object $P5003, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5002, $P5003
    set fb_tmp_602, $P5002
    repr_defined $I5001, fb_tmp_602
    unless $I5001 goto if2889_else6220 
    set $P5004, fb_tmp_602["$W"]
    set $P5006, $P5004
    goto if2889_end6221
  if2889_else6220:
    null $P5005
    set $P5006, $P5005
  if2889_end6221:
    unless_null $P5006, vivi_28906222
    nqp_get_sc_object $P5007, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5006, $P5007
  vivi_28906222:
    unless_null $P5006, vivi_28916223
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_28916223:
    set $P5001, $P5006
  fallback6219:
    $P5009 = $P5001."cur_lexpad"()
    find_lex $P5010, "$past"
    $P5011 = $P5010."name"()
    find_lex $P5012, "$type"
    $P5009."symbol"($P5011, $P5012 :named("type"))
.annotate 'line', 2706
    find_lex $P5013, "$past"
    $P5014 = $P5013."default"()
    set $P5021, $P5014
    unless $P5014 goto if2893_end6227 
    find_lex $P5015, "$/"
    unless_null $P5015, fallback6230
    nqp_get_sc_object $P5016, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5015, $P5016
  fallback6230:
    set fb_tmp_603, $P5015
    repr_defined $I5003, fb_tmp_603
    unless $I5003 goto if2894_else6228 
    set $P5017, fb_tmp_603["default_value"]
    set $P5019, $P5017
    goto if2894_end6229
  if2894_else6228:
    null $P5018
    set $P5019, $P5018
  if2894_end6229:
    unless_null $P5019, vivi_28956231
    nqp_get_sc_object $P5020, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5019, $P5020
  vivi_28956231:
    isfalse $I5002, $P5019
    box $P5022, $I5002
    set $P5021, $P5022
  if2893_end6227:
    set $P5026, $P5021
    unless $P5021 goto if2892_end6225 
.annotate 'line', 2707
    find_lex $P5023, "$past"
    $P5024 = "&default_value_for_prim"(_lex_param_0)
    $P5025 = $P5023."default"($P5024)
    set $P5026, $P5025
  if2892_end6225:
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "param_var" :subid("cuid_312_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2720
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$name", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_607 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
    set $S5001, _lex_param_1
    box $P5003, $S5001
    set $P101, $P5003
.annotate 'line', 2722
    nqp_get_sc_object $P5004, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5005 = $P5004."new"($P101 :named("name"), "lexical" :named("scope"), "param" :named("decl"), _lex_param_1 :named("node"))
    set $P102, $P5005
.annotate 'line', 2724
    find_dynamic_lex $P5006, "$*W"
    unless_null $P5006, fallback6245
    nqp_get_sc_object $P5008, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5007, $P5008
    set fb_tmp_607, $P5007
    repr_defined $I5001, fb_tmp_607
    unless $I5001 goto if2903_else6246 
    set $P5009, fb_tmp_607["$W"]
    set $P5011, $P5009
    goto if2903_end6247
  if2903_else6246:
    null $P5010
    set $P5011, $P5010
  if2903_end6247:
    unless_null $P5011, vivi_29046248
    nqp_get_sc_object $P5012, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5011, $P5012
  vivi_29046248:
    unless_null $P5011, vivi_29056249
    die "Contextual $*W not found"
    box $P5013, "Contextual $*W not found"
    set $P5011, $P5013
  vivi_29056249:
    set $P5006, $P5011
  fallback6245:
    $P5014 = $P5006."cur_lexpad"()
    $P5014."symbol"($P101, "lexical" :named("scope"))
.annotate 'line', 2725
    $P5015 = _lex_param_1."!make"($P102)
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "named_param" :subid("cuid_313_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2728
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_608 
    .local pmc fb_tmp_609 
    .local pmc fb_tmp_610 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
.annotate 'line', 2729
    unless_null _lex_param_1, fallback6252
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5002
  fallback6252:
    set fb_tmp_608, _lex_param_1
    repr_defined $I5001, fb_tmp_608
    unless $I5001 goto if2906_else6250 
    set $P5003, fb_tmp_608["param_var"]
    set $P5005, $P5003
    goto if2906_end6251
  if2906_else6250:
    null $P5004
    set $P5005, $P5004
  if2906_end6251:
    unless_null $P5005, vivi_29076253
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5005, $P5006
  vivi_29076253:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 2730
    unless_null _lex_param_1, fallback6258
    nqp_get_sc_object $P5008, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5008
  fallback6258:
    set fb_tmp_610, _lex_param_1
    repr_defined $I5003, fb_tmp_610
    unless $I5003 goto if2909_else6256 
    set $P5009, fb_tmp_610["param_var"]
    set $P5011, $P5009
    goto if2909_end6257
  if2909_else6256:
    null $P5010
    set $P5011, $P5010
  if2909_end6257:
    unless_null $P5011, vivi_29106259
    nqp_get_sc_object $P5012, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5011, $P5012
  vivi_29106259:
    set fb_tmp_609, $P5011
    repr_defined $I5002, fb_tmp_609
    unless $I5002 goto if2908_else6254 
    set $P5013, fb_tmp_609["name"]
    set $P5015, $P5013
    goto if2908_end6255
  if2908_else6254:
    null $P5014
    set $P5015, $P5014
  if2908_end6255:
    unless_null $P5015, vivi_29116260
    nqp_get_sc_object $P5016, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5015, $P5016
  vivi_29116260:
    set $S5001, $P5015
    $P101."named"($S5001)
.annotate 'line', 2731
    $P5017 = _lex_param_1."!make"($P101)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "typename" :subid("cuid_314_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2734
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5013 = 'cuid_489_1367388600.55005' 
    capture_lex $P5013 
    .lex "@name", $P101 
    .lex "$found", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
.annotate 'line', 2738
    nqp_get_sc_object $P5003, "CAD7667229FADB246BF8592D21A076CDE373EC5D-1367388566.32003", 126
    set $S5001, _lex_param_1
    $P5004 = $P5003."parse_name"($S5001)
    set $P101, $P5004
    box $P5005, 0
    set $P102, $P5005
    new $P5008, 'ExceptionHandler'
    set_label $P5008, catch_handler_29166267
    $P5008.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5008
    .const 'Sub' $P5006 = 'cuid_489_1367388600.55005' 
    capture_lex $P5006
    $P5007 = $P5006()
    set $P5009, $P5007
    pop_eh 
    goto skip_handler_29156266
  catch_handler_29166267:
    .get_results ($P5008) 
    set $I10001, 1
    set $P5008["handled"], $I10001
    nqp_get_sc_object $P10001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    finalize $P5008
    pop_upto_eh $P5008
    pop_eh 
    set $P5009, $P10001
    goto skip_handler_29156266
  skip_handler_29156266:
    set $P5012, $P102
    if $P102 goto unless2917_end6269 
.annotate 'line', 2745
.annotate 'line', 2746
    $P5010 = _lex_param_1."CURSOR"()
    set $S5004, _lex_param_1
    concat $S5003, "Use of undeclared type '", $S5004
    concat $S5002, $S5003, "'"
    $P5011 = $P5010."panic"($S5002)
    set $P5012, $P5011
  unless2917_end6269:
    .return ($P5012) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_489_1367388600.55005") :anon :lex :outer("cuid_314_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2740
    .lex "$sym", $P101 
    .local pmc fb_tmp_611 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
.annotate 'line', 2741
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback6261
    nqp_get_sc_object $P5004, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5003, $P5004
    set fb_tmp_611, $P5003
    repr_defined $I5001, fb_tmp_611
    unless $I5001 goto if2912_else6262 
    set $P5005, fb_tmp_611["$W"]
    set $P5007, $P5005
    goto if2912_end6263
  if2912_else6262:
    null $P5006
    set $P5007, $P5006
  if2912_end6263:
    unless_null $P5007, vivi_29136264
    nqp_get_sc_object $P5008, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5007, $P5008
  vivi_29136264:
    unless_null $P5007, vivi_29146265
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_29146265:
    set $P5002, $P5007
  fallback6261:
    find_lex $P5010, "@name"
    $P5011 = $P5002."find_sym"($P5010)
    set $P101, $P5011
.annotate 'line', 2742
    find_dynamic_lex $P5012, "$/"
    nqp_get_sc_object $P5013, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 61
    $P5014 = $P5013."new"($P101 :named("value"))
    $P5012."!make"($P5014)
    box $P5015, 1
    store_lex "$found", $P5015
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "trait" :subid("cuid_315_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2750
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_612 
.annotate 'line', 2751
    unless_null _lex_param_1, fallback6272
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback6272:
    set fb_tmp_612, _lex_param_1
    repr_defined $I5001, fb_tmp_612
    unless $I5001 goto if2918_else6270 
    set $P5002, fb_tmp_612["trait_mod"]
    set $P5004, $P5002
    goto if2918_end6271
  if2918_else6270:
    null $P5003
    set $P5004, $P5003
  if2918_end6271:
    unless_null $P5004, vivi_29196273
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_29196273:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "trait_mod:sym<is>" :subid("cuid_316_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2754
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5051 = 'cuid_491_1367388600.55005' 
    capture_lex $P5051 
    .const 'Sub' $P5051 = 'cuid_493_1367388600.55005' 
    capture_lex $P5051 
    .const 'Sub' $P5051 = 'cuid_494_1367388600.55005' 
    capture_lex $P5051 
    .const 'Sub' $P5051 = 'cuid_495_1367388600.55005' 
    capture_lex $P5051 
    .const 'Sub' $P5051 = 'cuid_496_1367388600.55005' 
    capture_lex $P5051 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_613 
    .local pmc fb_tmp_622 
    .local pmc fb_tmp_628 
    .local pmc fb_tmp_630 
    .local pmc fb_tmp_632 
    .local pmc fb_tmp_639 
    unless_null _lex_param_1, fallback6278
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback6278:
    set fb_tmp_613, _lex_param_1
    repr_defined $I5002, fb_tmp_613
    unless $I5002 goto if2921_else6276 
    set $P5002, fb_tmp_613["longname"]
    set $P5004, $P5002
    goto if2921_end6277
  if2921_else6276:
    null $P5003
    set $P5004, $P5003
  if2921_end6277:
    unless_null $P5004, vivi_29226279
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_29226279:
    set $S5001, $P5004
    iseq $I5001, $S5001, "parrot_vtable"
    unless $I5001 goto if2920_else6274 
    .const 'Sub' $P5006 = 'cuid_491_1367388600.55005' 
    capture_lex $P5006
    $P5007 = $P5006()
    set $P5050, $P5007
    goto if2920_end6275
  if2920_else6274:
    unless_null _lex_param_1, fallback6320
    nqp_get_sc_object $P5008, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5008
  fallback6320:
    set fb_tmp_622, _lex_param_1
    repr_defined $I5004, fb_tmp_622
    unless $I5004 goto if2945_else6318 
    set $P5009, fb_tmp_622["longname"]
    set $P5011, $P5009
    goto if2945_end6319
  if2945_else6318:
    null $P5010
    set $P5011, $P5010
  if2945_end6319:
    unless_null $P5011, vivi_29466321
    nqp_get_sc_object $P5012, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5011, $P5012
  vivi_29466321:
    set $S5002, $P5011
    iseq $I5003, $S5002, "parrot_vtable_handler"
    unless $I5003 goto if2944_else6316 
    .const 'Sub' $P5013 = 'cuid_493_1367388600.55005' 
    capture_lex $P5013
    $P5014 = $P5013()
    set $P5049, $P5014
    goto if2944_end6317
  if2944_else6316:
    unless_null _lex_param_1, fallback6348
    nqp_get_sc_object $P5015, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5015
  fallback6348:
    set fb_tmp_628, _lex_param_1
    repr_defined $I5006, fb_tmp_628
    unless $I5006 goto if2961_else6346 
    set $P5016, fb_tmp_628["longname"]
    set $P5018, $P5016
    goto if2961_end6347
  if2961_else6346:
    null $P5017
    set $P5018, $P5017
  if2961_end6347:
    unless_null $P5018, vivi_29626349
    nqp_get_sc_object $P5019, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5018, $P5019
  vivi_29626349:
    set $S5003, $P5018
    iseq $I5005, $S5003, "positional_delegate"
    unless $I5005 goto if2960_else6344 
.annotate 'line', 2780
.annotate 'line', 2781
    .const 'Sub' $P5021 = 'cuid_494_1367388600.55005' 
    capture_lex $P5021
    newclosure $P5020, $P5021
    $P5022 = _lex_param_1."!make"($P5020)
    set $P5048, $P5022
    goto if2960_end6345
  if2960_else6344:
    unless_null _lex_param_1, fallback6359
    nqp_get_sc_object $P5023, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5023
  fallback6359:
    set fb_tmp_630, _lex_param_1
    repr_defined $I5008, fb_tmp_630
    unless $I5008 goto if2967_else6357 
    set $P5024, fb_tmp_630["longname"]
    set $P5026, $P5024
    goto if2967_end6358
  if2967_else6357:
    null $P5025
    set $P5026, $P5025
  if2967_end6358:
    unless_null $P5026, vivi_29686360
    nqp_get_sc_object $P5027, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5026, $P5027
  vivi_29686360:
    set $S5004, $P5026
    iseq $I5007, $S5004, "associative_delegate"
    unless $I5007 goto if2966_else6355 
.annotate 'line', 2783
.annotate 'line', 2784
    .const 'Sub' $P5029 = 'cuid_495_1367388600.55005' 
    capture_lex $P5029
    newclosure $P5028, $P5029
    $P5030 = _lex_param_1."!make"($P5028)
    set $P5047, $P5030
    goto if2966_end6356
  if2966_else6355:
    unless_null _lex_param_1, fallback6370
    nqp_get_sc_object $P5031, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5031
  fallback6370:
    set fb_tmp_632, _lex_param_1
    repr_defined $I5010, fb_tmp_632
    unless $I5010 goto if2973_else6368 
    set $P5032, fb_tmp_632["longname"]
    set $P5034, $P5032
    goto if2973_end6369
  if2973_else6368:
    null $P5033
    set $P5034, $P5033
  if2973_end6369:
    unless_null $P5034, vivi_29746371
    nqp_get_sc_object $P5035, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5034, $P5035
  vivi_29746371:
    set $S5005, $P5034
    iseq $I5009, $S5005, "export"
    unless $I5009 goto if2972_else6366 
.annotate 'line', 2786
.annotate 'line', 2787
    .const 'Sub' $P5037 = 'cuid_496_1367388600.55005' 
    capture_lex $P5037
    newclosure $P5036, $P5037
    $P5038 = _lex_param_1."!make"($P5036)
    set $P5046, $P5038
    goto if2972_end6367
  if2972_else6366:
.annotate 'line', 2794
.annotate 'line', 2795
    $P5039 = _lex_param_1."CURSOR"()
    unless_null _lex_param_1, fallback6397
    nqp_get_sc_object $P5040, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5040
  fallback6397:
    set fb_tmp_639, _lex_param_1
    repr_defined $I5011, fb_tmp_639
    unless $I5011 goto if2989_else6395 
    set $P5041, fb_tmp_639["longname"]
    set $P5043, $P5041
    goto if2989_end6396
  if2989_else6395:
    null $P5042
    set $P5043, $P5042
  if2989_end6396:
    unless_null $P5043, vivi_29906398
    nqp_get_sc_object $P5044, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5043, $P5044
  vivi_29906398:
    set $S5008, $P5043
    concat $S5007, "Trait '", $S5008
    concat $S5006, $S5007, "' not implemented"
    $P5045 = $P5039."panic"($S5006)
    set $P5046, $P5045
  if2972_end6367:
    set $P5047, $P5046
  if2966_end6356:
    set $P5048, $P5047
  if2960_end6345:
    set $P5049, $P5048
  if2944_end6317:
    set $P5050, $P5049
  if2920_end6275:
    .return ($P5050) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_491_1367388600.55005") :anon :lex :outer("cuid_316_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2755
    .const 'Sub' $P5043 = 'cuid_490_1367388600.55005' 
    capture_lex $P5043 
    .lex "$cpast", $P101 
    .lex "$name", $P102 
    .lex "$package", $P103 
    .lex "$is_dispatcher", $P104 
    .local pmc fb_tmp_614 
    .local pmc fb_tmp_615 
    .local pmc fb_tmp_616 
    .local pmc fb_tmp_617 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P104, $P5004
.annotate 'line', 2757
    find_lex $P5005, "$/"
    unless_null $P5005, fallback6284
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5005, $P5006
  fallback6284:
    set fb_tmp_615, $P5005
    repr_defined $I5002, fb_tmp_615
    unless $I5002 goto if2924_else6282 
    set $P5007, fb_tmp_615["circumfix"]
    set $P5009, $P5007
    goto if2924_end6283
  if2924_else6282:
    null $P5008
    set $P5009, $P5008
  if2924_end6283:
    unless_null $P5009, vivi_29256285
    nqp_get_sc_object $P5010, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5009, $P5010
  vivi_29256285:
    set fb_tmp_614, $P5009
    repr_defined $I5001, fb_tmp_614
    unless $I5001 goto if2923_else6280 
    set $P5011, fb_tmp_614[0]
    set $P5013, $P5011
    goto if2923_end6281
  if2923_else6280:
    null $P5012
    set $P5013, $P5012
  if2923_end6281:
    unless_null $P5013, vivi_29266286
    nqp_get_sc_object $P5014, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5013, $P5014
  vivi_29266286:
    $P5015 = $P5013."ast"()
    set $P101, $P5015
.annotate 'line', 2759
    nqp_get_sc_object $P5016, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 52
    $P5017 = $P5016."ACCEPTS"($P101)
    if $P5017 goto unless2927_end6288 
.annotate 'line', 2758
    find_lex $P5018, "$/"
    $P5019 = $P5018."CURSOR"()
    $P5020 = $P5019."panic"("Trait 'parrot_vtable' requires constant scalar argument")
  unless2927_end6288:
.annotate 'line', 2760
    $P5021 = $P101."value"()
    set $P102, $P5021
    find_dynamic_lex $P5022, "$*PACKAGE"
    unless_null $P5022, fallback6289
    nqp_get_sc_object $P5024, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5023, $P5024
    set fb_tmp_616, $P5023
    repr_defined $I5003, fb_tmp_616
    unless $I5003 goto if2928_else6290 
    set $P5025, fb_tmp_616["$PACKAGE"]
    set $P5027, $P5025
    goto if2928_end6291
  if2928_else6290:
    null $P5026
    set $P5027, $P5026
  if2928_end6291:
    unless_null $P5027, vivi_29296292
    nqp_get_sc_object $P5028, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5027, $P5028
  vivi_29296292:
    unless_null $P5027, vivi_29306293
    die "Contextual $*PACKAGE not found"
    box $P5029, "Contextual $*PACKAGE not found"
    set $P5027, $P5029
  vivi_29306293:
    set $P5022, $P5027
  fallback6289:
    set $P103, $P5022
    find_dynamic_lex $P5030, "$*SCOPE"
    unless_null $P5030, fallback6294
    nqp_get_sc_object $P5032, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5031, $P5032
    set fb_tmp_617, $P5031
    repr_defined $I5005, fb_tmp_617
    unless $I5005 goto if2931_else6295 
    set $P5033, fb_tmp_617["$SCOPE"]
    set $P5035, $P5033
    goto if2931_end6296
  if2931_else6295:
    null $P5034
    set $P5035, $P5034
  if2931_end6296:
    unless_null $P5035, vivi_29326297
    nqp_get_sc_object $P5036, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5035, $P5036
  vivi_29326297:
    unless_null $P5035, vivi_29336298
    die "Contextual $*SCOPE not found"
    box $P5037, "Contextual $*SCOPE not found"
    set $P5035, $P5037
  vivi_29336298:
    set $P5030, $P5035
  fallback6294:
    set $S5001, $P5030
    iseq $I5004, $S5001, "proto"
    box $P5038, $I5004
    set $P104, $P5038
.annotate 'line', 2763
    find_dynamic_lex $P5039, "$/"
    .const 'Sub' $P5041 = 'cuid_490_1367388600.55005' 
    capture_lex $P5041
    newclosure $P5040, $P5041
    $P5042 = $P5039."!make"($P5040)
    .return ($P5042) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_490_1367388600.55005") :anon :lex :outer("cuid_491_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2763
    .param pmc _lex_param_0 
    .lex "$match", _lex_param_0 
    .local pmc fb_tmp_618 
    .local pmc fb_tmp_619 
    .local pmc fb_tmp_620 
    .local pmc fb_tmp_621 
.annotate 'line', 2764
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback6299
    nqp_get_sc_object $P5003, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5002, $P5003
    set fb_tmp_618, $P5002
    repr_defined $I5001, fb_tmp_618
    unless $I5001 goto if2934_else6300 
    set $P5004, fb_tmp_618["$W"]
    set $P5006, $P5004
    goto if2934_end6301
  if2934_else6300:
    null $P5005
    set $P5006, $P5005
  if2934_end6301:
    unless_null $P5006, vivi_29356302
    nqp_get_sc_object $P5007, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5006, $P5007
  vivi_29356302:
    unless_null $P5006, vivi_29366303
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_29366303:
    set $P5001, $P5006
  fallback6299:
    find_lex $P5009, "$package"
    find_lex $P5010, "$name"
.annotate 'line', 2765
    $P5012 = _lex_param_0."ast"()
    set fb_tmp_619, $P5012
    repr_defined $I5003, fb_tmp_619
    unless $I5003 goto if2937_else6305 
    set $P5013, fb_tmp_619["code_obj"]
    set $P5015, $P5013
    goto if2937_end6306
  if2937_else6305:
    null $P5014
    set $P5015, $P5014
  if2937_end6306:
    unless_null $P5015, vivi_29386307
    nqp_get_sc_object $P5016, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5015, $P5016
  vivi_29386307:
    set $P5011, $P5015
    defined $I5002, $P5011
    if $I5002, defor6304
.annotate 'line', 2766
    find_dynamic_lex $P5017, "$*W"
    unless_null $P5017, fallback6308
    nqp_get_sc_object $P5019, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5018, $P5019
    set fb_tmp_620, $P5018
    repr_defined $I5004, fb_tmp_620
    unless $I5004 goto if2939_else6309 
    set $P5020, fb_tmp_620["$W"]
    set $P5022, $P5020
    goto if2939_end6310
  if2939_else6309:
    null $P5021
    set $P5022, $P5021
  if2939_end6310:
    unless_null $P5022, vivi_29406311
    nqp_get_sc_object $P5023, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5022, $P5023
  vivi_29406311:
    unless_null $P5022, vivi_29416312
    die "Contextual $*W not found"
    box $P5024, "Contextual $*W not found"
    set $P5022, $P5024
  vivi_29416312:
    set $P5017, $P5022
  fallback6308:
    $P5025 = _lex_param_0."ast"()
    set fb_tmp_621, $P5025
    repr_defined $I5005, fb_tmp_621
    unless $I5005 goto if2942_else6313 
    set $P5026, fb_tmp_621["block_past"]
    set $P5028, $P5026
    goto if2942_end6314
  if2942_else6313:
    null $P5027
    set $P5028, $P5027
  if2942_end6314:
    unless_null $P5028, vivi_29436315
    nqp_get_sc_object $P5029, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5028, $P5029
  vivi_29436315:
    find_lex $P5030, "$name"
    find_lex $P5031, "$is_dispatcher"
    $P5032 = $P5017."create_code"($P5028, $P5030, $P5031)
    set $P5011, $P5032
  defor6304:
    $P5033 = $P5001."pkg_add_method"($P5009, "add_parrot_vtable_mapping", $P5010, $P5011)
    .return ($P5033) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_493_1367388600.55005") :anon :lex :outer("cuid_316_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2769
    .const 'Sub' $P5033 = 'cuid_492_1367388600.55005' 
    capture_lex $P5033 
    .lex "$cpast", $P101 
    .lex "$name", $P102 
    .lex "$package", $P103 
    .local pmc fb_tmp_623 
    .local pmc fb_tmp_624 
    .local pmc fb_tmp_625 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P103, $P5003
.annotate 'line', 2771
    find_lex $P5004, "$/"
    unless_null $P5004, fallback6326
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  fallback6326:
    set fb_tmp_624, $P5004
    repr_defined $I5002, fb_tmp_624
    unless $I5002 goto if2948_else6324 
    set $P5006, fb_tmp_624["circumfix"]
    set $P5008, $P5006
    goto if2948_end6325
  if2948_else6324:
    null $P5007
    set $P5008, $P5007
  if2948_end6325:
    unless_null $P5008, vivi_29496327
    nqp_get_sc_object $P5009, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5008, $P5009
  vivi_29496327:
    set fb_tmp_623, $P5008
    repr_defined $I5001, fb_tmp_623
    unless $I5001 goto if2947_else6322 
    set $P5010, fb_tmp_623[0]
    set $P5012, $P5010
    goto if2947_end6323
  if2947_else6322:
    null $P5011
    set $P5012, $P5011
  if2947_end6323:
    unless_null $P5012, vivi_29506328
    nqp_get_sc_object $P5013, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5012, $P5013
  vivi_29506328:
    $P5014 = $P5012."ast"()
    set $P101, $P5014
.annotate 'line', 2773
    nqp_get_sc_object $P5015, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 52
    $P5016 = $P5015."ACCEPTS"($P101)
    if $P5016 goto unless2951_end6330 
.annotate 'line', 2772
    find_lex $P5017, "$/"
    $P5018 = $P5017."CURSOR"()
    $P5019 = $P5018."panic"("Trait 'parrot_vtable_handler' requires constant scalar argument")
  unless2951_end6330:
.annotate 'line', 2774
    $P5020 = $P101."value"()
    set $P102, $P5020
    find_dynamic_lex $P5021, "$*PACKAGE"
    unless_null $P5021, fallback6331
    nqp_get_sc_object $P5023, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5022, $P5023
    set fb_tmp_625, $P5022
    repr_defined $I5003, fb_tmp_625
    unless $I5003 goto if2952_else6332 
    set $P5024, fb_tmp_625["$PACKAGE"]
    set $P5026, $P5024
    goto if2952_end6333
  if2952_else6332:
    null $P5025
    set $P5026, $P5025
  if2952_end6333:
    unless_null $P5026, vivi_29536334
    nqp_get_sc_object $P5027, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5026, $P5027
  vivi_29536334:
    unless_null $P5026, vivi_29546335
    die "Contextual $*PACKAGE not found"
    box $P5028, "Contextual $*PACKAGE not found"
    set $P5026, $P5028
  vivi_29546335:
    set $P5021, $P5026
  fallback6331:
    set $P103, $P5021
.annotate 'line', 2776
    find_dynamic_lex $P5029, "$/"
    .const 'Sub' $P5031 = 'cuid_492_1367388600.55005' 
    capture_lex $P5031
    newclosure $P5030, $P5031
    $P5032 = $P5029."!make"($P5030)
    .return ($P5032) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_492_1367388600.55005") :anon :lex :outer("cuid_493_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2776
    .param pmc _lex_param_0 
    .lex "$match", _lex_param_0 
    .local pmc fb_tmp_626 
    .local pmc fb_tmp_627 
.annotate 'line', 2777
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback6336
    nqp_get_sc_object $P5003, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5002, $P5003
    set fb_tmp_626, $P5002
    repr_defined $I5001, fb_tmp_626
    unless $I5001 goto if2955_else6337 
    set $P5004, fb_tmp_626["$W"]
    set $P5006, $P5004
    goto if2955_end6338
  if2955_else6337:
    null $P5005
    set $P5006, $P5005
  if2955_end6338:
    unless_null $P5006, vivi_29566339
    nqp_get_sc_object $P5007, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5006, $P5007
  vivi_29566339:
    unless_null $P5006, vivi_29576340
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_29576340:
    set $P5001, $P5006
  fallback6336:
    find_lex $P5009, "$package"
    find_lex $P5010, "$name"
    set fb_tmp_627, _lex_param_0
    repr_defined $I5002, fb_tmp_627
    unless $I5002 goto if2958_else6341 
    set $P5011, fb_tmp_627["variable"]
    set $P5013, $P5011
    goto if2958_end6342
  if2958_else6341:
    null $P5012
    set $P5013, $P5012
  if2958_end6342:
    unless_null $P5013, vivi_29596343
    nqp_get_sc_object $P5014, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5013, $P5014
  vivi_29596343:
    set $S5001, $P5013
    $P5015 = $P5001."pkg_add_parrot_vtable_handler_mapping"($P5009, $P5010, $S5001)
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_494_1367388600.55005") :anon :lex :outer("cuid_316_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2781
    .param pmc _lex_param_0 
    .lex "$m", _lex_param_0 
    .local pmc fb_tmp_629 
    find_dynamic_lex $P5001, "$*DECLARAND_ATTR"
    unless_null $P5001, fallback6350
    nqp_get_sc_object $P5003, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5002, $P5003
    set fb_tmp_629, $P5002
    repr_defined $I5001, fb_tmp_629
    unless $I5001 goto if2963_else6351 
    set $P5004, fb_tmp_629["$DECLARAND_ATTR"]
    set $P5006, $P5004
    goto if2963_end6352
  if2963_else6351:
    null $P5005
    set $P5006, $P5005
  if2963_end6352:
    unless_null $P5006, vivi_29646353
    nqp_get_sc_object $P5007, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5006, $P5007
  vivi_29646353:
    unless_null $P5006, vivi_29656354
    die "Contextual $*DECLARAND_ATTR not found"
    box $P5008, "Contextual $*DECLARAND_ATTR not found"
    set $P5006, $P5008
  vivi_29656354:
    set $P5001, $P5006
  fallback6350:
    $P5009 = $P5001."set_positional_delegate"(1)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_495_1367388600.55005") :anon :lex :outer("cuid_316_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2784
    .param pmc _lex_param_0 
    .lex "$m", _lex_param_0 
    .local pmc fb_tmp_631 
    find_dynamic_lex $P5001, "$*DECLARAND_ATTR"
    unless_null $P5001, fallback6361
    nqp_get_sc_object $P5003, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5002, $P5003
    set fb_tmp_631, $P5002
    repr_defined $I5001, fb_tmp_631
    unless $I5001 goto if2969_else6362 
    set $P5004, fb_tmp_631["$DECLARAND_ATTR"]
    set $P5006, $P5004
    goto if2969_end6363
  if2969_else6362:
    null $P5005
    set $P5006, $P5005
  if2969_end6363:
    unless_null $P5006, vivi_29706364
    nqp_get_sc_object $P5007, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5006, $P5007
  vivi_29706364:
    unless_null $P5006, vivi_29716365
    die "Contextual $*DECLARAND_ATTR not found"
    box $P5008, "Contextual $*DECLARAND_ATTR not found"
    set $P5006, $P5008
  vivi_29716365:
    set $P5001, $P5006
  fallback6361:
    $P5009 = $P5001."set_associative_delegate"(1)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_496_1367388600.55005") :anon :lex :outer("cuid_316_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2787
    .param pmc _lex_param_0 
    .lex "$ast", $P101 
    .lex "$name", $P102 
    .lex "$match", _lex_param_0 
    .local pmc fb_tmp_633 
    .local pmc fb_tmp_634 
    .local pmc fb_tmp_635 
    .local pmc fb_tmp_636 
    .local pmc fb_tmp_637 
    .local pmc fb_tmp_638 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
.annotate 'line', 2788
    $P5003 = _lex_param_0."ast"()
    set $P101, $P5003
.annotate 'line', 2789
    set fb_tmp_633, $P101
    repr_defined $I5001, fb_tmp_633
    unless $I5001 goto if2975_else6372 
    set $P5004, fb_tmp_633["block_past"]
    set $P5006, $P5004
    goto if2975_end6373
  if2975_else6372:
    null $P5005
    set $P5006, $P5005
  if2975_end6373:
    unless_null $P5006, vivi_29766374
    nqp_get_sc_object $P5007, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5006, $P5007
  vivi_29766374:
    $P5008 = $P5006."name"()
    set $P102, $P5008
    find_dynamic_lex $P5011, "$*EXPORT"
    unless_null $P5011, fallback6377
    nqp_get_sc_object $P5013, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5012, $P5013
    set fb_tmp_635, $P5012
    repr_defined $I5003, fb_tmp_635
    unless $I5003 goto if2978_else6378 
    set $P5014, fb_tmp_635["$EXPORT"]
    set $P5016, $P5014
    goto if2978_end6379
  if2978_else6378:
    null $P5015
    set $P5016, $P5015
  if2978_end6379:
    unless_null $P5016, vivi_29796380
    nqp_get_sc_object $P5017, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5016, $P5017
  vivi_29796380:
    unless_null $P5016, vivi_29806381
    die "Contextual $*EXPORT not found"
    box $P5018, "Contextual $*EXPORT not found"
    set $P5016, $P5018
  vivi_29806381:
    set $P5011, $P5016
  fallback6377:
    get_who $P5010, $P5011
    set fb_tmp_634, $P5010
    repr_defined $I5002, fb_tmp_634
    unless $I5002 goto if2977_else6375 
    set $P5019, fb_tmp_634["DEFAULT"]
    set $P5021, $P5019
    goto if2977_end6376
  if2977_else6375:
    null $P5020
    set $P5021, $P5020
  if2977_end6376:
    unless_null $P5021, vivi_29816382
    nqp_get_sc_object $P5022, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5021, $P5022
  vivi_29816382:
    get_who $P5009, $P5021
    set $S5002, $P102
    concat $S5001, "&", $S5002
    set fb_tmp_636, $P101
    repr_defined $I5005, fb_tmp_636
    unless $I5005 goto if2982_else6384 
    set $P5024, fb_tmp_636["code_obj"]
    set $P5026, $P5024
    goto if2982_end6385
  if2982_else6384:
    null $P5025
    set $P5026, $P5025
  if2982_end6385:
    unless_null $P5026, vivi_29836386
    nqp_get_sc_object $P5027, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5026, $P5027
  vivi_29836386:
    set $P5023, $P5026
    defined $I5004, $P5023
    if $I5004, defor6383
.annotate 'line', 2791
    find_dynamic_lex $P5028, "$*W"
    unless_null $P5028, fallback6387
    nqp_get_sc_object $P5030, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5029, $P5030
    set fb_tmp_637, $P5029
    repr_defined $I5006, fb_tmp_637
    unless $I5006 goto if2984_else6388 
    set $P5031, fb_tmp_637["$W"]
    set $P5033, $P5031
    goto if2984_end6389
  if2984_else6388:
    null $P5032
    set $P5033, $P5032
  if2984_end6389:
    unless_null $P5033, vivi_29856390
    nqp_get_sc_object $P5034, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5033, $P5034
  vivi_29856390:
    unless_null $P5033, vivi_29866391
    die "Contextual $*W not found"
    box $P5035, "Contextual $*W not found"
    set $P5033, $P5035
  vivi_29866391:
    set $P5028, $P5033
  fallback6387:
    set fb_tmp_638, $P101
    repr_defined $I5007, fb_tmp_638
    unless $I5007 goto if2987_else6392 
    set $P5036, fb_tmp_638["block_past"]
    set $P5038, $P5036
    goto if2987_end6393
  if2987_else6392:
    null $P5037
    set $P5038, $P5037
  if2987_end6393:
    unless_null $P5038, vivi_29886394
    nqp_get_sc_object $P5039, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5038, $P5039
  vivi_29886394:
    $P5040 = $P5028."create_code"($P5038, $P102, 0)
    set $P5023, $P5040
  defor6383:
    set $P5009[$S5001], $P5023
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "regex_declarator" :subid("cuid_317_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2799
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :optional 
    .param int haz_param_6 :opt_flag 
    .const 'Sub' $P5074 = 'cuid_498_1367388600.55005' 
    capture_lex $P5074 
    .lex "$name", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .lex "$key", _lex_param_2 
    .local pmc fb_tmp_640 
    .local pmc fb_tmp_641 
    .local pmc fb_tmp_642 
    .local pmc fb_tmp_643 
    .local pmc fb_tmp_644 
    .local pmc fb_tmp_645 
    .local pmc fb_tmp_646 
    .local pmc fb_tmp_647 
    if haz_param_6, default6515
    nqp_get_sc_object $P5073, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_2, $P5073
  default6515:
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
    unless_null _lex_param_1, fallback6403
    nqp_get_sc_object $P5003, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5003
  fallback6403:
    set fb_tmp_640, _lex_param_1
    repr_defined $I5001, fb_tmp_640
    unless $I5001 goto if2992_else6401 
    set $P5004, fb_tmp_640["deflongname"]
    set $P5006, $P5004
    goto if2992_end6402
  if2992_else6401:
    null $P5005
    set $P5006, $P5005
  if2992_end6402:
    unless_null $P5006, vivi_29936404
    nqp_get_sc_object $P5007, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5006, $P5007
  vivi_29936404:
    unless $P5006 goto if2991_else6399 
.annotate 'line', 2801
.annotate 'line', 2802
    unless_null _lex_param_1, fallback6407
    nqp_get_sc_object $P5008, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5008
  fallback6407:
    set fb_tmp_641, _lex_param_1
    repr_defined $I5002, fb_tmp_641
    unless $I5002 goto if2994_else6405 
    set $P5009, fb_tmp_641["deflongname"]
    set $P5011, $P5009
    goto if2994_end6406
  if2994_else6405:
    null $P5010
    set $P5011, $P5010
  if2994_end6406:
    unless_null $P5011, vivi_29956408
    nqp_get_sc_object $P5012, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5011, $P5012
  vivi_29956408:
    $P5013 = $P5011."ast"()
    set $S5001, $P5013
    box $P5014, $S5001
    set $P101, $P5014
    goto if2991_end6400
  if2991_else6399:
.annotate 'line', 2804
    find_dynamic_lex $P5015, "$*PKGDECL"
    unless_null $P5015, fallback6411
    nqp_get_sc_object $P5017, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5016, $P5017
    set fb_tmp_642, $P5016
    repr_defined $I5004, fb_tmp_642
    unless $I5004 goto if2997_else6412 
    set $P5018, fb_tmp_642["$PKGDECL"]
    set $P5020, $P5018
    goto if2997_end6413
  if2997_else6412:
    null $P5019
    set $P5020, $P5019
  if2997_end6413:
    unless_null $P5020, vivi_29986414
    nqp_get_sc_object $P5021, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5020, $P5021
  vivi_29986414:
    unless_null $P5020, vivi_29996415
    die "Contextual $*PKGDECL not found"
    box $P5022, "Contextual $*PKGDECL not found"
    set $P5020, $P5022
  vivi_29996415:
    set $P5015, $P5020
  fallback6411:
    set $S5002, $P5015
    isne $I5003, $S5002, "role"
    unless $I5003 goto if2996_end6410 
.annotate 'line', 2805
.annotate 'line', 2806
    $P5023 = _lex_param_1."CURSOR"()
    $P5024 = $P5023."panic"("Late-bound method name only valid in role")
  if2996_end6410:
    unless_null _lex_param_1, fallback6418
    nqp_get_sc_object $P5025, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5025
  fallback6418:
    set fb_tmp_643, _lex_param_1
    repr_defined $I5005, fb_tmp_643
    unless $I5005 goto if3000_else6416 
    set $P5026, fb_tmp_643["latename"]
    set $P5028, $P5026
    goto if3000_end6417
  if3000_else6416:
    null $P5027
    set $P5028, $P5027
  if3000_end6417:
    unless_null $P5028, vivi_30016419
    nqp_get_sc_object $P5029, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5028, $P5029
  vivi_30016419:
    set $S5004, $P5028
    concat $S5003, "!!LATENAME!!", $S5004
    box $P5030, $S5003
    set $P101, $P5030
  if2991_end6400:
    unless_null _lex_param_1, fallback6424
    nqp_get_sc_object $P5031, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5031
  fallback6424:
    set fb_tmp_644, _lex_param_1
    repr_defined $I5006, fb_tmp_644
    unless $I5006 goto if3003_else6422 
    set $P5032, fb_tmp_644["proto"]
    set $P5034, $P5032
    goto if3003_end6423
  if3003_else6422:
    null $P5033
    set $P5034, $P5033
  if3003_end6423:
    unless_null $P5034, vivi_30046425
    nqp_get_sc_object $P5035, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5034, $P5035
  vivi_30046425:
    unless $P5034 goto if3002_else6420 
.annotate 'line', 2811
.annotate 'line', 2812
    nqp_get_sc_object $P5036, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 103
.annotate 'line', 2814
    nqp_get_sc_object $P5037, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 2815
    nqp_get_sc_object $P5038, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5039 = $P5038."new"("self" :named("name"), "local" :named("scope"), "param" :named("decl"))
.annotate 'line', 2816
    nqp_get_sc_object $P5040, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 52
    $P5041 = $P5040."new"($P101 :named("value"))
    $P5042 = $P5037."new"($P5039, $P5041, "!protoregex" :named("name"), "callmethod" :named("op"))
    $P5043 = $P5036."new"($P5042, $P101 :named("name"), "declaration" :named("blocktype"), _lex_param_1 :named("node"))
    set $P102, $P5043
.annotate 'line', 2823
    find_dynamic_lex $P5044, "$*W"
    unless_null $P5044, fallback6426
    nqp_get_sc_object $P5046, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5045, $P5046
    set fb_tmp_645, $P5045
    repr_defined $I5007, fb_tmp_645
    unless $I5007 goto if3005_else6427 
    set $P5047, fb_tmp_645["$W"]
    set $P5049, $P5047
    goto if3005_end6428
  if3005_else6427:
    null $P5048
    set $P5049, $P5048
  if3005_end6428:
    unless_null $P5049, vivi_30066429
    nqp_get_sc_object $P5050, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5049, $P5050
  vivi_30066429:
    unless_null $P5049, vivi_30076430
    die "Contextual $*W not found"
    box $P5051, "Contextual $*W not found"
    set $P5049, $P5051
  vivi_30076430:
    set $P5044, $P5049
  fallback6426:
    find_dynamic_lex $P5052, "$*PACKAGE"
    unless_null $P5052, fallback6431
    nqp_get_sc_object $P5054, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5053, $P5054
    set fb_tmp_646, $P5053
    repr_defined $I5008, fb_tmp_646
    unless $I5008 goto if3008_else6432 
    set $P5055, fb_tmp_646["$PACKAGE"]
    set $P5057, $P5055
    goto if3008_end6433
  if3008_else6432:
    null $P5056
    set $P5057, $P5056
  if3008_end6433:
    unless_null $P5057, vivi_30096434
    nqp_get_sc_object $P5058, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5057, $P5058
  vivi_30096434:
    unless_null $P5057, vivi_30106435
    die "Contextual $*PACKAGE not found"
    box $P5059, "Contextual $*PACKAGE not found"
    set $P5057, $P5059
  vivi_30106435:
    set $P5052, $P5057
  fallback6431:
.annotate 'line', 2824
    find_dynamic_lex $P5060, "$*W"
    unless_null $P5060, fallback6436
    nqp_get_sc_object $P5062, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5061, $P5062
    set fb_tmp_647, $P5061
    repr_defined $I5009, fb_tmp_647
    unless $I5009 goto if3011_else6437 
    set $P5063, fb_tmp_647["$W"]
    set $P5065, $P5063
    goto if3011_end6438
  if3011_else6437:
    null $P5064
    set $P5065, $P5064
  if3011_end6438:
    unless_null $P5065, vivi_30126439
    nqp_get_sc_object $P5066, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5065, $P5066
  vivi_30126439:
    unless_null $P5065, vivi_30136440
    die "Contextual $*W not found"
    box $P5067, "Contextual $*W not found"
    set $P5065, $P5067
  vivi_30136440:
    set $P5060, $P5065
  fallback6436:
    $P5068 = $P5060."create_code"($P102, $P101, 0, "NQPRegex" :named("code_type_name"))
    $P5069 = $P5044."pkg_add_method"($P5052, "add_method", $P101, $P5068)
    goto if3002_end6421
  if3002_else6420:
    .const 'Sub' $P5070 = 'cuid_498_1367388600.55005' 
    capture_lex $P5070
    $P5071 = $P5070()
  if3002_end6421:
.annotate 'line', 2863
    $P5072 = _lex_param_1."!make"($P102)
    .return ($P5072) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_498_1367388600.55005") :anon :lex :outer("cuid_317_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2826
    .const 'Sub' $P5128 = 'cuid_497_1367388600.55005' 
    capture_lex $P5128 
    .lex "$block", $P101 
    .lex "$code", $P102 
    .lex "$regex", $P103 
    .local pmc fb_tmp_648 
    .local pmc fb_tmp_649 
    .local pmc fb_tmp_650 
    .local pmc fb_tmp_651 
    .local pmc fb_tmp_652 
    .local pmc fb_tmp_653 
    .local pmc fb_tmp_654 
    .local pmc pkg_viv_tmp_46 
    .local pmc fb_tmp_655 
    .local pmc fb_tmp_656 
    .local pmc pkg_viv_tmp_47 
    .local pmc fb_tmp_657 
    .local pmc fb_tmp_658 
    .local pmc fb_tmp_659 
    .local pmc fb_tmp_660 
    .local pmc fb_tmp_661 
    .local pmc fb_tmp_662 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P103, $P5003
.annotate 'line', 2827
    find_dynamic_lex $P5004, "$*W"
    unless_null $P5004, fallback6441
    nqp_get_sc_object $P5006, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5005, $P5006
    set fb_tmp_648, $P5005
    repr_defined $I5001, fb_tmp_648
    unless $I5001 goto if3014_else6442 
    set $P5007, fb_tmp_648["$W"]
    set $P5009, $P5007
    goto if3014_end6443
  if3014_else6442:
    null $P5008
    set $P5009, $P5008
  if3014_end6443:
    unless_null $P5009, vivi_30156444
    nqp_get_sc_object $P5010, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5009, $P5010
  vivi_30156444:
    unless_null $P5009, vivi_30166445
    die "Contextual $*W not found"
    box $P5011, "Contextual $*W not found"
    set $P5009, $P5011
  vivi_30166445:
    set $P5004, $P5009
  fallback6441:
    $P5012 = $P5004."pop_lexpad"()
    set $P101, $P5012
.annotate 'line', 2828
    set fb_tmp_649, $P101
    repr_defined $I5002, fb_tmp_649
    unless $I5002 goto if3017_else6446 
    set $P5013, fb_tmp_649[0]
    set $P5015, $P5013
    goto if3017_end6447
  if3017_else6446:
    null $P5014
    set $P5015, $P5014
  if3017_end6447:
    unless_null $P5015, vivi_30186448
    nqp_get_sc_object $P5016, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5015, $P5016
  vivi_30186448:
    nqp_get_sc_object $P5017, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5018 = $P5017."new"("self" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    $P5015."unshift"($P5018)
.annotate 'line', 2829
    set fb_tmp_650, $P101
    repr_defined $I5003, fb_tmp_650
    unless $I5003 goto if3019_else6449 
    set $P5019, fb_tmp_650[0]
    set $P5021, $P5019
    goto if3019_end6450
  if3019_else6449:
    null $P5020
    set $P5021, $P5020
  if3019_end6450:
    unless_null $P5021, vivi_30206451
    nqp_get_sc_object $P5022, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5021, $P5022
  vivi_30206451:
    nqp_get_sc_object $P5023, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 2831
    nqp_get_sc_object $P5024, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5025 = $P5024."new"("self" :named("name"), "local" :named("scope"), "var" :named("decl"))
.annotate 'line', 2832
    nqp_get_sc_object $P5026, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5027 = $P5026."new"("self" :named("name"), "lexical" :named("scope"))
    $P5028 = $P5023."new"($P5025, $P5027, "bind" :named("op"))
    $P5021."push"($P5028)
.annotate 'line', 2833
    set fb_tmp_651, $P101
    repr_defined $I5004, fb_tmp_651
    unless $I5004 goto if3021_else6452 
    set $P5029, fb_tmp_651[0]
    set $P5031, $P5029
    goto if3021_end6453
  if3021_else6452:
    null $P5030
    set $P5031, $P5030
  if3021_end6453:
    unless_null $P5031, vivi_30226454
    nqp_get_sc_object $P5032, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5031, $P5032
  vivi_30226454:
    nqp_get_sc_object $P5033, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5034 = $P5033."new"(utf8:"$\x{a2}" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    $P5031."push"($P5034)
.annotate 'line', 2834
    set fb_tmp_652, $P101
    repr_defined $I5005, fb_tmp_652
    unless $I5005 goto if3023_else6455 
    set $P5035, fb_tmp_652[0]
    set $P5037, $P5035
    goto if3023_end6456
  if3023_else6455:
    null $P5036
    set $P5037, $P5036
  if3023_end6456:
    unless_null $P5037, vivi_30246457
    nqp_get_sc_object $P5038, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5037, $P5038
  vivi_30246457:
    nqp_get_sc_object $P5039, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5040 = $P5039."new"("$/" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    $P5037."push"($P5040)
.annotate 'line', 2835
    $P101."symbol"(utf8:"$\x{a2}", "lexical" :named("scope"))
.annotate 'line', 2836
    $P101."symbol"("$/", "lexical" :named("scope"))
    find_dynamic_lex $P5041, "%*RX"
    unless_null $P5041, fallback6460
    nqp_get_sc_object $P5043, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5042, $P5043
    set pkg_viv_tmp_46, $P5042
    set fb_tmp_654, pkg_viv_tmp_46
    repr_defined $I5007, fb_tmp_654
    unless $I5007 goto if3026_else6461 
    set $P5044, fb_tmp_654["%RX"]
    set $P5046, $P5044
    goto if3026_end6462
  if3026_else6461:
    null $P5045
    set $P5046, $P5045
  if3026_end6462:
    unless_null $P5046, vivi_30276463
    new $P5047, 'Hash'
    set pkg_viv_tmp_46["%RX"], $P5047
    set $P5046, $P5047
  vivi_30276463:
    unless_null $P5046, vivi_30286464
    die "Contextual %*RX not found"
    box $P5048, "Contextual %*RX not found"
    set $P5046, $P5048
  vivi_30286464:
    set $P5041, $P5046
  fallback6460:
    set fb_tmp_653, $P5041
    repr_defined $I5006, fb_tmp_653
    unless $I5006 goto if3025_else6458 
    set $P5049, fb_tmp_653["code"]
    set $P5051, $P5049
    goto if3025_end6459
  if3025_else6458:
    null $P5050
    set $P5051, $P5050
  if3025_end6459:
    unless_null $P5051, vivi_30296465
    nqp_get_sc_object $P5052, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5051, $P5052
  vivi_30296465:
    set $P102, $P5051
.annotate 'line', 2838
    find_dynamic_lex $P5053, "%*LANG"
    unless_null $P5053, fallback6468
    nqp_get_sc_object $P5055, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5054, $P5055
    set pkg_viv_tmp_47, $P5054
    set fb_tmp_656, pkg_viv_tmp_47
    repr_defined $I5009, fb_tmp_656
    unless $I5009 goto if3031_else6469 
    set $P5056, fb_tmp_656["%LANG"]
    set $P5058, $P5056
    goto if3031_end6470
  if3031_else6469:
    null $P5057
    set $P5058, $P5057
  if3031_end6470:
    unless_null $P5058, vivi_30326471
    new $P5059, 'Hash'
    set pkg_viv_tmp_47["%LANG"], $P5059
    set $P5058, $P5059
  vivi_30326471:
    unless_null $P5058, vivi_30336472
    die "Contextual %*LANG not found"
    box $P5060, "Contextual %*LANG not found"
    set $P5058, $P5060
  vivi_30336472:
    set $P5053, $P5058
  fallback6468:
    set fb_tmp_655, $P5053
    repr_defined $I5008, fb_tmp_655
    unless $I5008 goto if3030_else6466 
    set $P5061, fb_tmp_655["Regex-actions"]
    set $P5063, $P5061
    goto if3030_end6467
  if3030_else6466:
    null $P5062
    set $P5063, $P5062
  if3030_end6467:
    unless_null $P5063, vivi_30346473
    nqp_get_sc_object $P5064, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5063, $P5064
  vivi_30346473:
    find_lex $P5065, "$/"
    unless_null $P5065, fallback6476
    nqp_get_sc_object $P5066, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5065, $P5066
  fallback6476:
    set fb_tmp_657, $P5065
    repr_defined $I5010, fb_tmp_657
    unless $I5010 goto if3035_else6474 
    set $P5067, fb_tmp_657["p6regex"]
    set $P5069, $P5067
    goto if3035_end6475
  if3035_else6474:
    null $P5068
    set $P5069, $P5068
  if3035_end6475:
    unless_null $P5069, vivi_30366477
    nqp_get_sc_object $P5070, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5069, $P5070
  vivi_30366477:
    $P5071 = $P5069."ast"()
    $P5072 = $P5063."qbuildsub"($P5071, $P101, $P102 :named("code_obj"))
    set $P103, $P5072
.annotate 'line', 2839
    find_lex $P5073, "$name"
    $P103."name"($P5073)
    find_dynamic_lex $P5074, "$*PKGDECL"
    unless_null $P5074, fallback6482
    nqp_get_sc_object $P5076, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5075, $P5076
    set fb_tmp_658, $P5075
    repr_defined $I5011, fb_tmp_658
    unless $I5011 goto if3039_else6483 
    set $P5077, fb_tmp_658["$PKGDECL"]
    set $P5079, $P5077
    goto if3039_end6484
  if3039_else6483:
    null $P5078
    set $P5079, $P5078
  if3039_end6484:
    unless_null $P5079, vivi_30406485
    nqp_get_sc_object $P5080, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5079, $P5080
  vivi_30406485:
    unless_null $P5079, vivi_30416486
    die "Contextual $*PKGDECL not found"
    box $P5081, "Contextual $*PKGDECL not found"
    set $P5079, $P5081
  vivi_30416486:
    set $P5074, $P5079
  fallback6482:
    set $P5091, $P5074
    unless $P5074 goto if3038_end6481 
    find_dynamic_lex $P5083, "$*PACKAGE"
    unless_null $P5083, fallback6487
    nqp_get_sc_object $P5085, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5084, $P5085
    set fb_tmp_659, $P5084
    repr_defined $I5013, fb_tmp_659
    unless $I5013 goto if3042_else6488 
    set $P5086, fb_tmp_659["$PACKAGE"]
    set $P5088, $P5086
    goto if3042_end6489
  if3042_else6488:
    null $P5087
    set $P5088, $P5087
  if3042_end6489:
    unless_null $P5088, vivi_30436490
    nqp_get_sc_object $P5089, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5088, $P5089
  vivi_30436490:
    unless_null $P5088, vivi_30446491
    die "Contextual $*PACKAGE not found"
    box $P5090, "Contextual $*PACKAGE not found"
    set $P5088, $P5090
  vivi_30446491:
    set $P5083, $P5088
  fallback6487:
    get_how $P5082, $P5083
    can $I5012, $P5082, "add_method"
    box $P5092, $I5012
    set $P5091, $P5092
  if3038_end6481:
    unless $P5091 goto if3037_end6479 
.annotate 'line', 2841
.annotate 'line', 2843
    find_dynamic_lex $P5093, "$*W"
    unless_null $P5093, fallback6492
    nqp_get_sc_object $P5095, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5094, $P5095
    set fb_tmp_660, $P5094
    repr_defined $I5014, fb_tmp_660
    unless $I5014 goto if3045_else6493 
    set $P5096, fb_tmp_660["$W"]
    set $P5098, $P5096
    goto if3045_end6494
  if3045_else6493:
    null $P5097
    set $P5098, $P5097
  if3045_end6494:
    unless_null $P5098, vivi_30466495
    nqp_get_sc_object $P5099, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5098, $P5099
  vivi_30466495:
    unless_null $P5098, vivi_30476496
    die "Contextual $*W not found"
    box $P5100, "Contextual $*W not found"
    set $P5098, $P5100
  vivi_30476496:
    set $P5093, $P5098
  fallback6492:
    find_dynamic_lex $P5101, "$*PACKAGE"
    unless_null $P5101, fallback6497
    nqp_get_sc_object $P5103, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5102, $P5103
    set fb_tmp_661, $P5102
    repr_defined $I5015, fb_tmp_661
    unless $I5015 goto if3048_else6498 
    set $P5104, fb_tmp_661["$PACKAGE"]
    set $P5106, $P5104
    goto if3048_end6499
  if3048_else6498:
    null $P5105
    set $P5106, $P5105
  if3048_end6499:
    unless_null $P5106, vivi_30496500
    nqp_get_sc_object $P5107, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5106, $P5107
  vivi_30496500:
    unless_null $P5106, vivi_30506501
    die "Contextual $*PACKAGE not found"
    box $P5108, "Contextual $*PACKAGE not found"
    set $P5106, $P5108
  vivi_30506501:
    set $P5101, $P5106
  fallback6497:
    find_lex $P5109, "$name"
    $P5110 = $P5093."pkg_add_method"($P5101, "add_method", $P5109, $P102)
  if3037_end6479:
    find_dynamic_lex $P5111, "$*PKGDECL"
    unless_null $P5111, fallback6504
    nqp_get_sc_object $P5113, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5112, $P5113
    set fb_tmp_662, $P5112
    repr_defined $I5017, fb_tmp_662
    unless $I5017 goto if3052_else6505 
    set $P5114, fb_tmp_662["$PKGDECL"]
    set $P5116, $P5114
    goto if3052_end6506
  if3052_else6505:
    null $P5115
    set $P5116, $P5115
  if3052_end6506:
    unless_null $P5116, vivi_30536507
    nqp_get_sc_object $P5117, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5116, $P5117
  vivi_30536507:
    unless_null $P5116, vivi_30546508
    die "Contextual $*PKGDECL not found"
    box $P5118, "Contextual $*PKGDECL not found"
    set $P5116, $P5118
  vivi_30546508:
    set $P5111, $P5116
  fallback6504:
    set $S5001, $P5111
    iseq $I5016, $S5001, "role"
    unless $I5016 goto if3051_end6503 
    .const 'Sub' $P5119 = 'cuid_497_1367388600.55005' 
    capture_lex $P5119
    $P5120 = $P5119()
  if3051_end6503:
.annotate 'line', 2857
    nqp_get_sc_object $P5121, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 2859
    new $P5122, 'ResizablePMCArray'
    box $P5123, "NQPRegexMethod"
    push $P5122, $P5123
    find_lex $P5124, "$/"
    $P5125 = "&lexical_package_lookup"($P5122, $P5124)
    $P5126 = $P5121."new"($P5125, $P103, "callmethod" :named("op"), "new" :named("name"))
    store_lex "$past", $P5126
    find_lex $P5127, "$past"
    set $P5127["sink"], $P103
    .return ($P103) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_497_1367388600.55005") :anon :lex :outer("cuid_498_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2848
    .lex "$gen_nfa", $P101 
    .local pmc fb_tmp_663 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
.annotate 'line', 2849
    nqp_get_sc_object $P5002, "8FFA7946C43E61F88541F98801326AC6461610E9-1367388560.19962", 3
    $P5003 = $P5002."new"()
    set $P101, $P5003
.annotate 'line', 2850
    find_lex $P5004, "$/"
    unless_null $P5004, fallback6511
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  fallback6511:
    set fb_tmp_663, $P5004
    repr_defined $I5001, fb_tmp_663
    unless $I5001 goto if3055_else6509 
    set $P5006, fb_tmp_663["p6regex"]
    set $P5008, $P5006
    goto if3055_end6510
  if3055_else6509:
    null $P5007
    set $P5008, $P5007
  if3055_end6510:
    unless_null $P5008, vivi_30566512
    nqp_get_sc_object $P5009, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5008, $P5009
  vivi_30566512:
    $P5010 = $P5008."ast"()
    $P101."addnode"($P5010, 1 :named("vars_as_generic"))
.annotate 'line', 2851
    $P5011 = $P101."generic"()
    set $P5014, $P5011
    unless $P5011 goto if3057_end6514 
.annotate 'line', 2852
    find_lex $P5012, "$code"
    $P5013 = $P5012."SET_GENERIC_NFA"($P101)
    set $P5014, $P5013
  if3057_end6514:
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "dotty" :subid("cuid_318_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2867
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_664 
    .local pmc fb_tmp_665 
    .local pmc fb_tmp_666 
    .local pmc fb_tmp_667 
    .local pmc fb_tmp_668 
    .local pmc fb_tmp_669 
    .local pmc fb_tmp_670 
    .local pmc fb_tmp_671 
    .local pmc fb_tmp_672 
    .local pmc fb_tmp_673 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    unless_null _lex_param_1, fallback6520
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5002
  fallback6520:
    set fb_tmp_664, _lex_param_1
    repr_defined $I5001, fb_tmp_664
    unless $I5001 goto if3059_else6518 
    set $P5003, fb_tmp_664["args"]
    set $P5005, $P5003
    goto if3059_end6519
  if3059_else6518:
    null $P5004
    set $P5005, $P5004
  if3059_end6519:
    unless_null $P5005, vivi_30606521
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5005, $P5006
  vivi_30606521:
    unless $P5005 goto if3058_else6516 
.annotate 'line', 2868
    unless_null _lex_param_1, fallback6526
    nqp_get_sc_object $P5007, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5007
  fallback6526:
    set fb_tmp_666, _lex_param_1
    repr_defined $I5003, fb_tmp_666
    unless $I5003 goto if3062_else6524 
    set $P5008, fb_tmp_666["args"]
    set $P5010, $P5008
    goto if3062_end6525
  if3062_else6524:
    null $P5009
    set $P5010, $P5009
  if3062_end6525:
    unless_null $P5010, vivi_30636527
    nqp_get_sc_object $P5011, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5010, $P5011
  vivi_30636527:
    set fb_tmp_665, $P5010
    repr_defined $I5002, fb_tmp_665
    unless $I5002 goto if3061_else6522 
    set $P5012, fb_tmp_665[0]
    set $P5014, $P5012
    goto if3061_end6523
  if3061_else6522:
    null $P5013
    set $P5014, $P5013
  if3061_end6523:
    unless_null $P5014, vivi_30646528
    nqp_get_sc_object $P5015, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5014, $P5015
  vivi_30646528:
    $P5016 = $P5014."ast"()
    set $P5019, $P5016
    goto if3058_end6517
  if3058_else6516:
    nqp_get_sc_object $P5017, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    $P5018 = $P5017."new"(_lex_param_1 :named("node"))
    set $P5019, $P5018
  if3058_end6517:
    set $P101, $P5019
    unless_null _lex_param_1, fallback6533
    nqp_get_sc_object $P5020, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5020
  fallback6533:
    set fb_tmp_667, _lex_param_1
    repr_defined $I5004, fb_tmp_667
    unless $I5004 goto if3066_else6531 
    set $P5021, fb_tmp_667["quote"]
    set $P5023, $P5021
    goto if3066_end6532
  if3066_else6531:
    null $P5022
    set $P5023, $P5022
  if3066_end6532:
    unless_null $P5023, vivi_30676534
    nqp_get_sc_object $P5024, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5023, $P5024
  vivi_30676534:
    unless $P5023 goto if3065_else6529 
.annotate 'line', 2869
.annotate 'line', 2870
    unless_null _lex_param_1, fallback6537
    nqp_get_sc_object $P5025, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5025
  fallback6537:
    set fb_tmp_668, _lex_param_1
    repr_defined $I5005, fb_tmp_668
    unless $I5005 goto if3068_else6535 
    set $P5026, fb_tmp_668["quote"]
    set $P5028, $P5026
    goto if3068_end6536
  if3068_else6535:
    null $P5027
    set $P5028, $P5027
  if3068_end6536:
    unless_null $P5028, vivi_30696538
    nqp_get_sc_object $P5029, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5028, $P5029
  vivi_30696538:
    $P5030 = $P5028."ast"()
    $P101."unshift"($P5030)
.annotate 'line', 2871
    $P5031 = $P101."op"("callmethod")
    goto if3065_end6530
  if3065_else6529:
    unless_null _lex_param_1, fallback6543
    nqp_get_sc_object $P5032, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5032
  fallback6543:
    set fb_tmp_669, _lex_param_1
    repr_defined $I5007, fb_tmp_669
    unless $I5007 goto if3071_else6541 
    set $P5033, fb_tmp_669["longname"]
    set $P5035, $P5033
    goto if3071_end6542
  if3071_else6541:
    null $P5034
    set $P5035, $P5034
  if3071_end6542:
    unless_null $P5035, vivi_30726544
    nqp_get_sc_object $P5036, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5035, $P5036
  vivi_30726544:
    set $S5001, $P5035
    iseq $I5006, $S5001, "HOW"
    unless $I5006 goto if3070_else6539 
.annotate 'line', 2873
.annotate 'line', 2874
    $P5037 = $P101."op"("how")
    set $P5065, $P5037
    goto if3070_end6540
  if3070_else6539:
    unless_null _lex_param_1, fallback6549
    nqp_get_sc_object $P5038, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5038
  fallback6549:
    set fb_tmp_670, _lex_param_1
    repr_defined $I5009, fb_tmp_670
    unless $I5009 goto if3074_else6547 
    set $P5039, fb_tmp_670["longname"]
    set $P5041, $P5039
    goto if3074_end6548
  if3074_else6547:
    null $P5040
    set $P5041, $P5040
  if3074_end6548:
    unless_null $P5041, vivi_30756550
    nqp_get_sc_object $P5042, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5041, $P5042
  vivi_30756550:
    set $S5002, $P5041
    iseq $I5008, $S5002, "WHAT"
    unless $I5008 goto if3073_else6545 
.annotate 'line', 2876
.annotate 'line', 2877
    $P5043 = $P101."op"("what")
    set $P5064, $P5043
    goto if3073_end6546
  if3073_else6545:
    unless_null _lex_param_1, fallback6555
    nqp_get_sc_object $P5044, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5044
  fallback6555:
    set fb_tmp_671, _lex_param_1
    repr_defined $I5011, fb_tmp_671
    unless $I5011 goto if3077_else6553 
    set $P5045, fb_tmp_671["longname"]
    set $P5047, $P5045
    goto if3077_end6554
  if3077_else6553:
    null $P5046
    set $P5047, $P5046
  if3077_end6554:
    unless_null $P5047, vivi_30786556
    nqp_get_sc_object $P5048, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5047, $P5048
  vivi_30786556:
    set $S5003, $P5047
    iseq $I5010, $S5003, "WHO"
    unless $I5010 goto if3076_else6551 
.annotate 'line', 2879
.annotate 'line', 2880
    $P5049 = $P101."op"("who")
    set $P5063, $P5049
    goto if3076_end6552
  if3076_else6551:
    unless_null _lex_param_1, fallback6561
    nqp_get_sc_object $P5050, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5050
  fallback6561:
    set fb_tmp_672, _lex_param_1
    repr_defined $I5013, fb_tmp_672
    unless $I5013 goto if3080_else6559 
    set $P5051, fb_tmp_672["longname"]
    set $P5053, $P5051
    goto if3080_end6560
  if3080_else6559:
    null $P5052
    set $P5053, $P5052
  if3080_end6560:
    unless_null $P5053, vivi_30816562
    nqp_get_sc_object $P5054, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5053, $P5054
  vivi_30816562:
    set $S5004, $P5053
    iseq $I5012, $S5004, "REPR"
    unless $I5012 goto if3079_else6557 
.annotate 'line', 2882
.annotate 'line', 2883
    $P5055 = $P101."op"("reprname")
    set $P5062, $P5055
    goto if3079_end6558
  if3079_else6557:
.annotate 'line', 2885
.annotate 'line', 2886
    unless_null _lex_param_1, fallback6565
    nqp_get_sc_object $P5056, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5056
  fallback6565:
    set fb_tmp_673, _lex_param_1
    repr_defined $I5014, fb_tmp_673
    unless $I5014 goto if3082_else6563 
    set $P5057, fb_tmp_673["longname"]
    set $P5059, $P5057
    goto if3082_end6564
  if3082_else6563:
    null $P5058
    set $P5059, $P5058
  if3082_end6564:
    unless_null $P5059, vivi_30836566
    nqp_get_sc_object $P5060, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5059, $P5060
  vivi_30836566:
    set $S5005, $P5059
    $P101."name"($S5005)
.annotate 'line', 2887
    $P5061 = $P101."op"("callmethod")
    set $P5062, $P5061
  if3079_end6558:
    set $P5063, $P5062
  if3076_end6552:
    set $P5064, $P5063
  if3073_end6546:
    set $P5065, $P5064
  if3070_end6540:
  if3065_end6530:
.annotate 'line', 2889
    $P5066 = _lex_param_1."!make"($P101)
    .return ($P5066) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<self>" :subid("cuid_319_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2894
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
.annotate 'line', 2895
    nqp_get_sc_object $P5001, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 2896
    nqp_get_sc_object $P5002, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5003 = $P5002."new"("self" :named("name"), "lexical" :named("scope"))
    $P5004 = $P5001."new"($P5003, "decont" :named("op"))
    $P5005 = _lex_param_1."!make"($P5004)
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<identifier>" :subid("cuid_320_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2899
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_674 
    .local pmc fb_tmp_675 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
.annotate 'line', 2900
    unless_null _lex_param_1, fallback6569
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5002
  fallback6569:
    set fb_tmp_674, _lex_param_1
    repr_defined $I5001, fb_tmp_674
    unless $I5001 goto if3084_else6567 
    set $P5003, fb_tmp_674["args"]
    set $P5005, $P5003
    goto if3084_end6568
  if3084_else6567:
    null $P5004
    set $P5005, $P5004
  if3084_end6568:
    unless_null $P5005, vivi_30856570
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5005, $P5006
  vivi_30856570:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 2901
    unless_null _lex_param_1, fallback6573
    nqp_get_sc_object $P5008, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5008
  fallback6573:
    set fb_tmp_675, _lex_param_1
    repr_defined $I5002, fb_tmp_675
    unless $I5002 goto if3086_else6571 
    set $P5009, fb_tmp_675["deflongname"]
    set $P5011, $P5009
    goto if3086_end6572
  if3086_else6571:
    null $P5010
    set $P5011, $P5010
  if3086_end6572:
    unless_null $P5011, vivi_30876574
    nqp_get_sc_object $P5012, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5011, $P5012
  vivi_30876574:
    set $S5002, $P5011
    concat $S5001, "&", $S5002
    $P101."name"($S5001)
.annotate 'line', 2902
    $P5013 = _lex_param_1."!make"($P101)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<name>" :subid("cuid_321_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2905
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5053 = 'cuid_499_1367388600.55005' 
    capture_lex $P5053 
    .const 'Sub' $P5053 = 'cuid_501_1367388600.55005' 
    capture_lex $P5053 
    .lex "$var", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_676 
    .local pmc fb_tmp_677 
    .local pmc fb_tmp_678 
    .local pmc fb_tmp_681 
    .local pmc fb_tmp_686 
    .local pmc fb_tmp_687 
    .local pmc fb_tmp_688 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
.annotate 'line', 2908
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback6577
    nqp_get_sc_object $P5005, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5004, $P5005
    set fb_tmp_676, $P5004
    repr_defined $I5001, fb_tmp_676
    unless $I5001 goto if3089_else6578 
    set $P5006, fb_tmp_676["$W"]
    set $P5008, $P5006
    goto if3089_end6579
  if3089_else6578:
    null $P5007
    set $P5008, $P5007
  if3089_end6579:
    unless_null $P5008, vivi_30906580
    nqp_get_sc_object $P5009, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5008, $P5009
  vivi_30906580:
    unless_null $P5008, vivi_30916581
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_30916581:
    set $P5003, $P5008
  fallback6577:
    unless_null _lex_param_1, fallback6584
    nqp_get_sc_object $P5011, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5011
  fallback6584:
    set fb_tmp_677, _lex_param_1
    repr_defined $I5002, fb_tmp_677
    unless $I5002 goto if3092_else6582 
    set $P5012, fb_tmp_677["name"]
    set $P5014, $P5012
    goto if3092_end6583
  if3092_else6582:
    null $P5013
    set $P5014, $P5013
  if3092_end6583:
    unless_null $P5014, vivi_30936585
    nqp_get_sc_object $P5015, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5014, $P5015
  vivi_30936585:
    set $S5001, $P5014
    $P5016 = $P5003."is_lexical"($S5001)
    unless $P5016 goto if3088_else6575 
    unless_null _lex_param_1, fallback6590
    nqp_get_sc_object $P5017, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5017
  fallback6590:
    set fb_tmp_678, _lex_param_1
    repr_defined $I5003, fb_tmp_678
    unless $I5003 goto if3095_else6588 
    set $P5018, fb_tmp_678["args"]
    set $P5020, $P5018
    goto if3095_end6589
  if3095_else6588:
    null $P5019
    set $P5020, $P5019
  if3095_end6589:
    unless_null $P5020, vivi_30966591
    nqp_get_sc_object $P5021, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5020, $P5021
  vivi_30966591:
    if $P5020 goto unless3094_end6587 
.annotate 'line', 2909
    new $P5024, 'ExceptionHandler'
    set_label $P5024, catch_handler_31046604
    $P5024.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5024
    .const 'Sub' $P5022 = 'cuid_499_1367388600.55005' 
    capture_lex $P5022
    $P5023 = $P5022()
    set $P5025, $P5023
    pop_eh 
    goto skip_handler_31036603
  catch_handler_31046604:
    .get_results ($P5024) 
    set $I10001, 1
    set $P5024["handled"], $I10001
    nqp_get_sc_object $P10001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    finalize $P5024
    pop_upto_eh $P5024
    pop_eh 
    set $P5025, $P10001
    goto skip_handler_31036603
  skip_handler_31036603:
  unless3094_end6587:
    set $P5033, $P101
    if $P101 goto unless3105_end6606 
.annotate 'line', 2917
.annotate 'line', 2918
    nqp_get_sc_object $P5026, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    unless_null _lex_param_1, fallback6609
    nqp_get_sc_object $P5027, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5027
  fallback6609:
    set fb_tmp_681, _lex_param_1
    repr_defined $I5004, fb_tmp_681
    unless $I5004 goto if3106_else6607 
    set $P5028, fb_tmp_681["name"]
    set $P5030, $P5028
    goto if3106_end6608
  if3106_else6607:
    null $P5029
    set $P5030, $P5029
  if3106_end6608:
    unless_null $P5030, vivi_31076610
    nqp_get_sc_object $P5031, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5030, $P5031
  vivi_31076610:
    set $S5002, $P5030
    $P5032 = $P5026."new"($S5002 :named("name"), "lexical" :named("scope"))
    set $P101, $P5032
    set $P5033, $P101
  unless3105_end6606:
    goto if3088_end6576
  if3088_else6575:
    .const 'Sub' $P5034 = 'cuid_501_1367388600.55005' 
    capture_lex $P5034
    $P5035 = $P5034()
  if3088_end6576:
    set $P102, $P101
    unless_null _lex_param_1, fallback6639
    nqp_get_sc_object $P5036, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5036
  fallback6639:
    set fb_tmp_686, _lex_param_1
    repr_defined $I5005, fb_tmp_686
    unless $I5005 goto if3123_else6637 
    set $P5037, fb_tmp_686["args"]
    set $P5039, $P5037
    goto if3123_end6638
  if3123_else6637:
    null $P5038
    set $P5039, $P5038
  if3123_end6638:
    unless_null $P5039, vivi_31246640
    nqp_get_sc_object $P5040, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5039, $P5040
  vivi_31246640:
    unless $P5039 goto if3122_end6636 
.annotate 'line', 2938
.annotate 'line', 2939
    unless_null _lex_param_1, fallback6645
    nqp_get_sc_object $P5041, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5041
  fallback6645:
    set fb_tmp_688, _lex_param_1
    repr_defined $I5007, fb_tmp_688
    unless $I5007 goto if3126_else6643 
    set $P5042, fb_tmp_688["args"]
    set $P5044, $P5042
    goto if3126_end6644
  if3126_else6643:
    null $P5043
    set $P5044, $P5043
  if3126_end6644:
    unless_null $P5044, vivi_31276646
    nqp_get_sc_object $P5045, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5044, $P5045
  vivi_31276646:
    set fb_tmp_687, $P5044
    repr_defined $I5006, fb_tmp_687
    unless $I5006 goto if3125_else6641 
    set $P5046, fb_tmp_687[0]
    set $P5048, $P5046
    goto if3125_end6642
  if3125_else6641:
    null $P5047
    set $P5048, $P5047
  if3125_end6642:
    unless_null $P5048, vivi_31286647
    nqp_get_sc_object $P5049, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5048, $P5049
  vivi_31286647:
    $P5050 = $P5048."ast"()
    set $P102, $P5050
.annotate 'line', 2940
    $P5051 = $P102."unshift"($P101)
  if3122_end6636:
.annotate 'line', 2942
    $P5052 = _lex_param_1."!make"($P102)
    .return ($P5052) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_499_1367388600.55005") :anon :lex :outer("cuid_321_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2910
    .lex "$sym", $P101 
    .local pmc fb_tmp_679 
    .local pmc fb_tmp_680 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
.annotate 'line', 2911
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback6592
    nqp_get_sc_object $P5004, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5003, $P5004
    set fb_tmp_679, $P5003
    repr_defined $I5001, fb_tmp_679
    unless $I5001 goto if3097_else6593 
    set $P5005, fb_tmp_679["$W"]
    set $P5007, $P5005
    goto if3097_end6594
  if3097_else6593:
    null $P5006
    set $P5007, $P5006
  if3097_end6594:
    unless_null $P5007, vivi_30986595
    nqp_get_sc_object $P5008, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5007, $P5008
  vivi_30986595:
    unless_null $P5007, vivi_30996596
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_30996596:
    set $P5002, $P5007
  fallback6592:
    new $P5010, 'ResizablePMCArray'
    find_lex $P5011, "$/"
    unless_null $P5011, fallback6599
    nqp_get_sc_object $P5012, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5011, $P5012
  fallback6599:
    set fb_tmp_680, $P5011
    repr_defined $I5002, fb_tmp_680
    unless $I5002 goto if3100_else6597 
    set $P5013, fb_tmp_680["name"]
    set $P5015, $P5013
    goto if3100_end6598
  if3100_else6597:
    null $P5014
    set $P5015, $P5014
  if3100_end6598:
    unless_null $P5015, vivi_31016600
    nqp_get_sc_object $P5016, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5015, $P5016
  vivi_31016600:
    set $S5001, $P5015
    box $P5017, $S5001
    push $P5010, $P5017
    $P5018 = $P5002."find_sym"($P5010)
    set $P101, $P5018
    nqp_get_sc_for_object $P5019, $P101
    isnull $I5003, $P5019
    box $P5023, $I5003
    set $P5022, $P5023
    if $I5003 goto unless3102_end6602 
.annotate 'line', 2912
.annotate 'line', 2913
    nqp_get_sc_object $P5020, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 61
    $P5021 = $P5020."new"($P101 :named("value"))
    store_lex "$var", $P5021
    set $P5022, $P5021
  unless3102_end6602:
    .return ($P5022) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_501_1367388600.55005") :anon :lex :outer("cuid_321_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2921
    .const 'Sub' $P5027 = 'cuid_500_1367388600.55005' 
    capture_lex $P5027 
    .lex "@ns", $P101 
    .local pmc fb_tmp_682 
    .local pmc fb_tmp_683 
    .local pmc fb_tmp_684 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    find_lex $P5003, "$/"
    unless_null $P5003, fallback6615
    nqp_get_sc_object $P5004, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5003, $P5004
  fallback6615:
    set fb_tmp_683, $P5003
    repr_defined $I5002, fb_tmp_683
    unless $I5002 goto if3109_else6613 
    set $P5005, fb_tmp_683["name"]
    set $P5007, $P5005
    goto if3109_end6614
  if3109_else6613:
    null $P5006
    set $P5007, $P5006
  if3109_end6614:
    unless_null $P5007, vivi_31106616
    nqp_get_sc_object $P5008, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5007, $P5008
  vivi_31106616:
    set fb_tmp_682, $P5007
    repr_defined $I5001, fb_tmp_682
    unless $I5001 goto if3108_else6611 
    set $P5009, fb_tmp_682["identifier"]
    set $P5011, $P5009
    goto if3108_end6612
  if3108_else6611:
    null $P5010
    set $P5011, $P5010
  if3108_end6612:
    unless_null $P5011, vivi_31116617
    nqp_get_sc_object $P5012, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5011, $P5012
  vivi_31116617:
    repr_clone $P5002, $P5011
    set $P101, $P5002
    find_lex $P5013, "$/"
    unless_null $P5013, fallback6622
    nqp_get_sc_object $P5014, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5013, $P5014
  fallback6622:
    set fb_tmp_684, $P5013
    repr_defined $I5003, fb_tmp_684
    unless $I5003 goto if3113_else6620 
    set $P5015, fb_tmp_684["args"]
    set $P5017, $P5015
    goto if3113_end6621
  if3113_else6620:
    null $P5016
    set $P5017, $P5016
  if3113_end6621:
    unless_null $P5017, vivi_31146623
    nqp_get_sc_object $P5018, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5017, $P5018
  vivi_31146623:
    if $P5017 goto unless3112_end6619 
.annotate 'line', 2923
    new $P5021, 'ExceptionHandler'
    set_label $P5021, catch_handler_31206632
    $P5021.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5021
    .const 'Sub' $P5019 = 'cuid_500_1367388600.55005' 
    capture_lex $P5019
    $P5020 = $P5019()
    set $P5022, $P5020
    pop_eh 
    goto skip_handler_31196631
  catch_handler_31206632:
    .get_results ($P5021) 
    set $I10001, 1
    set $P5021["handled"], $I10001
    nqp_get_sc_object $P10001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    finalize $P5021
    pop_upto_eh $P5021
    pop_eh 
    set $P5022, $P10001
    goto skip_handler_31196631
  skip_handler_31196631:
  unless3112_end6619:
    find_lex $P5023, "$var"
    set $P5026, $P5023
    if $P5023 goto unless3121_end6634 
.annotate 'line', 2931
.annotate 'line', 2932
    find_lex $P5024, "$/"
    $P5025 = "&lexical_package_lookup"($P101, $P5024)
    store_lex "$var", $P5025
    set $P5026, $P5025
  unless3121_end6634:
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_500_1367388600.55005") :anon :lex :outer("cuid_501_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2924
    .lex "$sym", $P101 
    .local pmc fb_tmp_685 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
.annotate 'line', 2925
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback6624
    nqp_get_sc_object $P5004, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5003, $P5004
    set fb_tmp_685, $P5003
    repr_defined $I5001, fb_tmp_685
    unless $I5001 goto if3115_else6625 
    set $P5005, fb_tmp_685["$W"]
    set $P5007, $P5005
    goto if3115_end6626
  if3115_else6625:
    null $P5006
    set $P5007, $P5006
  if3115_end6626:
    unless_null $P5007, vivi_31166627
    nqp_get_sc_object $P5008, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5007, $P5008
  vivi_31166627:
    unless_null $P5007, vivi_31176628
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_31176628:
    set $P5002, $P5007
  fallback6624:
    find_lex $P5010, "@ns"
    $P5011 = $P5002."find_sym"($P5010)
    set $P101, $P5011
    nqp_get_sc_for_object $P5012, $P101
    isnull $I5002, $P5012
    box $P5016, $I5002
    set $P5015, $P5016
    if $I5002 goto unless3118_end6630 
.annotate 'line', 2926
.annotate 'line', 2927
    nqp_get_sc_object $P5013, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 61
    $P5014 = $P5013."new"($P101 :named("value"))
    store_lex "$var", $P5014
    set $P5015, $P5014
  unless3118_end6630:
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<pir::op>" :subid("cuid_322_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2945
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "@args", $P101 
    .lex "$pirop", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_689 
    .local pmc fb_tmp_690 
    .local pmc fb_tmp_691 
    .local pmc fb_tmp_692 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
    unless_null _lex_param_1, fallback6652
    nqp_get_sc_object $P5003, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5003
  fallback6652:
    set fb_tmp_689, _lex_param_1
    repr_defined $I5001, fb_tmp_689
    unless $I5001 goto if3130_else6650 
    set $P5004, fb_tmp_689["args"]
    set $P5006, $P5004
    goto if3130_end6651
  if3130_else6650:
    null $P5005
    set $P5006, $P5005
  if3130_end6651:
    unless_null $P5006, vivi_31316653
    nqp_get_sc_object $P5007, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5006, $P5007
  vivi_31316653:
    unless $P5006 goto if3129_else6648 
.annotate 'line', 2946
    unless_null _lex_param_1, fallback6658
    nqp_get_sc_object $P5008, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5008
  fallback6658:
    set fb_tmp_691, _lex_param_1
    repr_defined $I5003, fb_tmp_691
    unless $I5003 goto if3133_else6656 
    set $P5009, fb_tmp_691["args"]
    set $P5011, $P5009
    goto if3133_end6657
  if3133_else6656:
    null $P5010
    set $P5011, $P5010
  if3133_end6657:
    unless_null $P5011, vivi_31346659
    nqp_get_sc_object $P5012, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5011, $P5012
  vivi_31346659:
    set fb_tmp_690, $P5011
    repr_defined $I5002, fb_tmp_690
    unless $I5002 goto if3132_else6654 
    set $P5013, fb_tmp_690[0]
    set $P5015, $P5013
    goto if3132_end6655
  if3132_else6654:
    null $P5014
    set $P5015, $P5014
  if3132_end6655:
    unless_null $P5015, vivi_31356660
    nqp_get_sc_object $P5016, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5015, $P5016
  vivi_31356660:
    $P5017 = $P5015."ast"()
    $P5018 = $P5017."list"()
    set $P5020, $P5018
    goto if3129_end6649
  if3129_else6648:
    new $P5019, 'ResizablePMCArray'
    set $P5020, $P5019
  if3129_end6649:
    set $P101, $P5020
    unless_null _lex_param_1, fallback6663
    nqp_get_sc_object $P5021, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5021
  fallback6663:
    set fb_tmp_692, _lex_param_1
    repr_defined $I5004, fb_tmp_692
    unless $I5004 goto if3136_else6661 
    set $P5022, fb_tmp_692["op"]
    set $P5024, $P5022
    goto if3136_end6662
  if3136_else6661:
    null $P5023
    set $P5024, $P5023
  if3136_end6662:
    unless_null $P5024, vivi_31376664
    nqp_get_sc_object $P5025, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5024, $P5025
  vivi_31376664:
    set $S5001, $P5024
    box $P5026, $S5001
    set $P102, $P5026
.annotate 'line', 2948
    set $S5002, $P102
    split $P5027, "__", $S5002
    $P5028 = "&join"(" ", $P5027)
    set $P102, $P5028
.annotate 'line', 2949
    nqp_get_sc_object $P5029, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 89
    $P5030 = $P5029."new"($P101 :flat, $P102 :named("pirop"), _lex_param_1 :named("node"))
    $P5031 = _lex_param_1."!make"($P5030)
    .return ($P5031) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<pir::const>" :subid("cuid_323_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2952
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_693 
.annotate 'line', 2953
    nqp_get_sc_object $P5001, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 89
    unless_null _lex_param_1, fallback6667
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5002
  fallback6667:
    set fb_tmp_693, _lex_param_1
    repr_defined $I5001, fb_tmp_693
    unless $I5001 goto if3138_else6665 
    set $P5003, fb_tmp_693["const"]
    set $P5005, $P5003
    goto if3138_end6666
  if3138_else6665:
    null $P5004
    set $P5005, $P5004
  if3138_end6666:
    unless_null $P5005, vivi_31396668
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5005, $P5006
  vivi_31396668:
    set $S5001, $P5005
    $P5007 = $P5001."new"($S5001 :named("pirconst"))
    $P5008 = _lex_param_1."!make"($P5007)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<nqp::op>" :subid("cuid_324_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2956
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$op", $P101 
    .lex "@args", $P102 
    .lex "$past", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_694 
    .local pmc fb_tmp_695 
    .local pmc fb_tmp_696 
    .local pmc fb_tmp_697 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    new $P5002, 'ResizablePMCArray'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P103, $P5003
    unless_null _lex_param_1, fallback6671
    nqp_get_sc_object $P5004, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5004
  fallback6671:
    set fb_tmp_694, _lex_param_1
    repr_defined $I5001, fb_tmp_694
    unless $I5001 goto if3140_else6669 
    set $P5005, fb_tmp_694["op"]
    set $P5007, $P5005
    goto if3140_end6670
  if3140_else6669:
    null $P5006
    set $P5007, $P5006
  if3140_end6670:
    unless_null $P5007, vivi_31416672
    nqp_get_sc_object $P5008, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5007, $P5008
  vivi_31416672:
    set $S5001, $P5007
    box $P5009, $S5001
    set $P101, $P5009
    unless_null _lex_param_1, fallback6677
    nqp_get_sc_object $P5010, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5010
  fallback6677:
    set fb_tmp_695, _lex_param_1
    repr_defined $I5002, fb_tmp_695
    unless $I5002 goto if3143_else6675 
    set $P5011, fb_tmp_695["args"]
    set $P5013, $P5011
    goto if3143_end6676
  if3143_else6675:
    null $P5012
    set $P5013, $P5012
  if3143_end6676:
    unless_null $P5013, vivi_31446678
    nqp_get_sc_object $P5014, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5013, $P5014
  vivi_31446678:
    unless $P5013 goto if3142_else6673 
.annotate 'line', 2958
    unless_null _lex_param_1, fallback6683
    nqp_get_sc_object $P5015, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5015
  fallback6683:
    set fb_tmp_697, _lex_param_1
    repr_defined $I5004, fb_tmp_697
    unless $I5004 goto if3146_else6681 
    set $P5016, fb_tmp_697["args"]
    set $P5018, $P5016
    goto if3146_end6682
  if3146_else6681:
    null $P5017
    set $P5018, $P5017
  if3146_end6682:
    unless_null $P5018, vivi_31476684
    nqp_get_sc_object $P5019, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5018, $P5019
  vivi_31476684:
    set fb_tmp_696, $P5018
    repr_defined $I5003, fb_tmp_696
    unless $I5003 goto if3145_else6679 
    set $P5020, fb_tmp_696[0]
    set $P5022, $P5020
    goto if3145_end6680
  if3145_else6679:
    null $P5021
    set $P5022, $P5021
  if3145_end6680:
    unless_null $P5022, vivi_31486685
    nqp_get_sc_object $P5023, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5022, $P5023
  vivi_31486685:
    $P5024 = $P5022."ast"()
    $P5025 = $P5024."list"()
    set $P5027, $P5025
    goto if3142_end6674
  if3142_else6673:
    new $P5026, 'ResizablePMCArray'
    set $P5027, $P5026
  if3142_end6674:
    set $P102, $P5027
.annotate 'line', 2959
    nqp_get_sc_object $P5028, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    $P5029 = $P5028."new"($P102 :flat, $P101 :named("op"), _lex_param_1 :named("node"))
    set $P103, $P5029
.annotate 'line', 2960
    $P5030 = _lex_param_1."!make"($P103)
    .return ($P5030) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<nqp::const>" :subid("cuid_325_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2963
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_698 
.annotate 'line', 2964
    nqp_get_sc_object $P5001, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    unless_null _lex_param_1, fallback6688
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5002
  fallback6688:
    set fb_tmp_698, _lex_param_1
    repr_defined $I5001, fb_tmp_698
    unless $I5001 goto if3149_else6686 
    set $P5003, fb_tmp_698["const"]
    set $P5005, $P5003
    goto if3149_end6687
  if3149_else6686:
    null $P5004
    set $P5005, $P5004
  if3149_end6687:
    unless_null $P5005, vivi_31506689
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5005, $P5006
  vivi_31506689:
    set $S5001, $P5005
    $P5007 = $P5001."new"("const" :named("op"), $S5001 :named("name"))
    $P5008 = _lex_param_1."!make"($P5007)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<onlystar>" :subid("cuid_326_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2967
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$dc_name", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_699 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
.annotate 'line', 2968
    nqp_get_sc_object $P5002, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 12
    $P5003 = $P5002."unique"("dispatch_cap")
    set $P101, $P5003
.annotate 'line', 2969
    nqp_get_sc_object $P5004, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 93
.annotate 'line', 2970
    nqp_get_sc_object $P5005, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 2972
    nqp_get_sc_object $P5006, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5007 = $P5006."new"($P101 :named("name"), "local" :named("scope"), "var" :named("decl"))
.annotate 'line', 2973
    nqp_get_sc_object $P5008, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5009 = $P5008."new"("CURRENT_DISPATCH_CAPTURE" :named("name"), "lexical" :named("scope"))
    $P5010 = $P5005."new"($P5007, $P5009, "bind" :named("op"))
.annotate 'line', 2975
    nqp_get_sc_object $P5011, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 2977
    nqp_get_sc_object $P5012, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 2979
    nqp_get_sc_object $P5013, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 2981
    nqp_get_sc_object $P5014, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
.annotate 'line', 2983
    nqp_get_sc_object $P5015, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5016 = $P5015."new"("&*CURRENT_DISPATCHER" :named("name"), "lexical" :named("scope"))
.annotate 'line', 2984
    nqp_get_sc_object $P5017, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 61
    find_dynamic_lex $P5018, "$*W"
    unless_null $P5018, fallback6690
    nqp_get_sc_object $P5020, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5019, $P5020
    set fb_tmp_699, $P5019
    repr_defined $I5001, fb_tmp_699
    unless $I5001 goto if3151_else6691 
    set $P5021, fb_tmp_699["$W"]
    set $P5023, $P5021
    goto if3151_end6692
  if3151_else6691:
    null $P5022
    set $P5023, $P5022
  if3151_end6692:
    unless_null $P5023, vivi_31526693
    nqp_get_sc_object $P5024, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5023, $P5024
  vivi_31526693:
    unless_null $P5023, vivi_31536694
    die "Contextual $*W not found"
    box $P5025, "Contextual $*W not found"
    set $P5023, $P5025
  vivi_31536694:
    set $P5018, $P5023
  fallback6690:
    new $P5026, 'ResizablePMCArray'
    box $P5027, "NQPRoutine"
    push $P5026, $P5027
    $P5028 = $P5018."find_sym"($P5026)
    $P5029 = $P5017."new"($P5028 :named("value"))
    $P5030 = $P5014."new"($P5016, $P5029, "$!dispatch_cache" :named("name"), "attribute" :named("scope"))
.annotate 'line', 2986
    nqp_get_sc_object $P5031, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5032 = $P5031."new"($P101 :named("name"), "local" :named("scope"))
    $P5033 = $P5013."new"($P5030, $P5032, "multicachefind" :named("op"))
.annotate 'line', 2988
    nqp_get_sc_object $P5034, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 2990
    nqp_get_sc_object $P5035, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5036 = $P5035."new"("&*CURRENT_DISPATCHER" :named("name"), "lexical" :named("scope"))
.annotate 'line', 2991
    nqp_get_sc_object $P5037, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5038 = $P5037."new"($P101 :named("name"), "local" :named("scope"))
    $P5039 = $P5034."new"($P5036, $P5038, "callmethod" :named("op"), "dispatch" :named("name"))
    $P5040 = $P5012."new"($P5033, $P5039, "ifnull" :named("op"))
.annotate 'line', 2994
    nqp_get_sc_object $P5041, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5042 = $P5041."new"($P101 :named("name"), "local" :named("scope"))
    $P5043 = $P5011."new"($P5040, $P5042, "invokewithcapture" :named("op"))
    $P5044 = $P5004."new"($P5010, $P5043)
    $P5045 = _lex_param_1."!make"($P5044)
    .return ($P5045) 
.end
.HLL "nqp"
.namespace []
.sub "args" :subid("cuid_327_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2998
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_700 
    unless_null _lex_param_1, fallback6697
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback6697:
    set fb_tmp_700, _lex_param_1
    repr_defined $I5001, fb_tmp_700
    unless $I5001 goto if3154_else6695 
    set $P5002, fb_tmp_700["arglist"]
    set $P5004, $P5002
    goto if3154_end6696
  if3154_else6695:
    null $P5003
    set $P5004, $P5003
  if3154_end6696:
    unless_null $P5004, vivi_31556698
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_31556698:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "arglist" :subid("cuid_328_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3000
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5058 = 'cuid_503_1367388600.55005' 
    capture_lex $P5058 
    .lex "$past", $P101 
    .lex "$i", $P102 
    .lex "$n", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_701 
    .local pmc fb_tmp_703 
    .local pmc fb_tmp_704 
    .local pmc fb_tmp_705 
    .local pmc fb_tmp_706 
    .local pmc fb_tmp_707 
    .local pmc fb_tmp_708 
    .local pmc fb_tmp_709 
    .local pmc fb_tmp_710 
    .local pmc tmp_2 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P103, $P5003
.annotate 'line', 3001
    nqp_get_sc_object $P5004, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    $P5005 = $P5004."new"("call" :named("op"), _lex_param_1 :named("node"))
    set $P101, $P5005
    unless_null _lex_param_1, fallback6703
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5006
  fallback6703:
    set fb_tmp_701, _lex_param_1
    repr_defined $I5001, fb_tmp_701
    unless $I5001 goto if3157_else6701 
    set $P5007, fb_tmp_701["EXPR"]
    set $P5009, $P5007
    goto if3157_end6702
  if3157_else6701:
    null $P5008
    set $P5009, $P5008
  if3157_end6702:
    unless_null $P5009, vivi_31586704
    nqp_get_sc_object $P5010, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5009, $P5010
  vivi_31586704:
    unless $P5009 goto if3156_end6700 
    .const 'Sub' $P5011 = 'cuid_503_1367388600.55005' 
    capture_lex $P5011
    $P5012 = $P5011()
  if3156_end6700:
    box $P5013, 0
    set $P102, $P5013
.annotate 'line', 3010
    $P5014 = $P101."list"()
    set $N5001, $P5014
    box $P5015, $N5001
    set $P103, $P5015
  while3164_test6718:
    set $N5002, $P102
    set $N5003, $P103
    islt $I5002, $N5002, $N5003
    box $P5056, $I5002
    set $P5055, $P5056
    unless $I5002 goto while3164_done6722 
  while3164_redo6720:
.annotate 'line', 3011
    set fb_tmp_703, $P101
    repr_defined $I5004, fb_tmp_703
    unless $I5004 goto if3167_else6727 
    set $I5005, $P102
    set $P5016, fb_tmp_703[$I5005]
    set $P5018, $P5016
    goto if3167_end6728
  if3167_else6727:
    null $P5017
    set $P5018, $P5017
  if3167_end6728:
    unless_null $P5018, vivi_31686729
    nqp_get_sc_object $P5019, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5018, $P5019
  vivi_31686729:
    nqp_get_sc_object $P5020, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    type_check $I5003, $P5018, $P5020
    set $I5009, $I5003
    unless $I5003 goto if3166_end6726 
.annotate 'line', 3012
    set fb_tmp_704, $P101
    repr_defined $I5007, fb_tmp_704
    unless $I5007 goto if3169_else6730 
    set $I5008, $P102
    set $P5021, fb_tmp_704[$I5008]
    set $P5023, $P5021
    goto if3169_end6731
  if3169_else6730:
    null $P5022
    set $P5023, $P5022
  if3169_end6731:
    unless_null $P5023, vivi_31706732
    nqp_get_sc_object $P5024, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5023, $P5024
  vivi_31706732:
    $P5025 = $P5023."name"()
    set $S5001, $P5025
    iseq $I5006, $S5001, "&prefix:<|>"
    set $I5009, $I5006
  if3166_end6726:
    unless $I5009 goto if3165_end6724 
    set $I5010, $P102
    set fb_tmp_706, $P101
    repr_defined $I5012, fb_tmp_706
    unless $I5012 goto if3172_else6735 
    set $I5013, $P102
    set $P5026, fb_tmp_706[$I5013]
    set $P5028, $P5026
    goto if3172_end6736
  if3172_else6735:
    null $P5027
    set $P5028, $P5027
  if3172_end6736:
    unless_null $P5028, vivi_31736737
    nqp_get_sc_object $P5029, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5028, $P5029
  vivi_31736737:
    set fb_tmp_705, $P5028
    repr_defined $I5011, fb_tmp_705
    unless $I5011 goto if3171_else6733 
    set $P5030, fb_tmp_705[0]
    set $P5032, $P5030
    goto if3171_end6734
  if3171_else6733:
    null $P5031
    set $P5032, $P5031
  if3171_end6734:
    unless_null $P5032, vivi_31746738
    nqp_get_sc_object $P5033, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5032, $P5033
  vivi_31746738:
    set $P101[$I5010], $P5032
.annotate 'line', 3014
    set fb_tmp_707, $P101
    repr_defined $I5014, fb_tmp_707
    unless $I5014 goto if3175_else6739 
    set $I5015, $P102
    set $P5034, fb_tmp_707[$I5015]
    set $P5036, $P5034
    goto if3175_end6740
  if3175_else6739:
    null $P5035
    set $P5036, $P5035
  if3175_end6740:
    unless_null $P5036, vivi_31766741
    nqp_get_sc_object $P5037, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5036, $P5037
  vivi_31766741:
    $P5036."flat"(1)
    set fb_tmp_708, $P101
    repr_defined $I5017, fb_tmp_708
    unless $I5017 goto if3179_else6746 
    set $I5018, $P102
    set $P5038, fb_tmp_708[$I5018]
    set $P5040, $P5038
    goto if3179_end6747
  if3179_else6746:
    null $P5039
    set $P5040, $P5039
  if3179_end6747:
    unless_null $P5040, vivi_31806748
    nqp_get_sc_object $P5041, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5040, $P5041
  vivi_31806748:
    nqp_get_sc_object $P5042, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    type_check $I5016, $P5040, $P5042
    set $I5022, $I5016
    unless $I5016 goto if3178_end6745 
.annotate 'line', 3016
    set fb_tmp_709, $P101
    repr_defined $I5020, fb_tmp_709
    unless $I5020 goto if3181_else6749 
    set $I5021, $P102
    set $P5043, fb_tmp_709[$I5021]
    set $P5045, $P5043
    goto if3181_end6750
  if3181_else6749:
    null $P5044
    set $P5045, $P5044
  if3181_end6750:
    unless_null $P5045, vivi_31826751
    nqp_get_sc_object $P5046, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5045, $P5046
  vivi_31826751:
    $P5047 = $P5045."name"()
    set $S5003, $P5047
    substr $S5002, $S5003, 0, 1
    iseq $I5019, $S5002, "%"
    set $I5022, $I5019
  if3178_end6745:
    box $P5054, $I5022
    set $P5053, $P5054
    unless $I5022 goto if3177_end6743 
.annotate 'line', 3015
    set fb_tmp_710, $P101
    repr_defined $I5023, fb_tmp_710
    unless $I5023 goto if3183_else6752 
    set $I5024, $P102
    set $P5048, fb_tmp_710[$I5024]
    set $P5050, $P5048
    goto if3183_end6753
  if3183_else6752:
    null $P5049
    set $P5050, $P5049
  if3183_end6753:
    unless_null $P5050, vivi_31846754
    nqp_get_sc_object $P5051, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5050, $P5051
  vivi_31846754:
    $P5052 = $P5050."named"(1)
    set $P5053, $P5052
  if3177_end6743:
  if3165_end6724:
    set tmp_2, $P102
    set $N5005, tmp_2
    set $N5006, 1
    add $N5004, $N5005, $N5006
    box $P5055, $N5004
    set $P102, $P5055
    set $P5055, tmp_2
    goto while3164_test6718 
  while3164_done6722:
.annotate 'line', 3020
    $P5057 = _lex_param_1."!make"($P101)
    .return ($P5057) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_503_1367388600.55005") :anon :lex :outer("cuid_328_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3002
    .const 'Sub' $P5021 = 'cuid_502_1367388600.55005' 
    capture_lex $P5021 
    .lex "$expr", $P101 
    .local pmc fb_tmp_702 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
.annotate 'line', 3003
    find_lex $P5002, "$/"
    unless_null $P5002, fallback6707
    nqp_get_sc_object $P5003, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5002, $P5003
  fallback6707:
    set fb_tmp_702, $P5002
    repr_defined $I5001, fb_tmp_702
    unless $I5001 goto if3159_else6705 
    set $P5004, fb_tmp_702["EXPR"]
    set $P5006, $P5004
    goto if3159_end6706
  if3159_else6705:
    null $P5005
    set $P5006, $P5005
  if3159_end6706:
    unless_null $P5006, vivi_31606708
    nqp_get_sc_object $P5007, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5006, $P5007
  vivi_31606708:
    $P5008 = $P5006."ast"()
    set $P101, $P5008
    nqp_get_sc_object $P5009, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    type_check $I5002, $P101, $P5009
    set $I5004, $I5002
    unless $I5002 goto if3163_end6714 
.annotate 'line', 3004
    $P5010 = $P101."name"()
    set $S5001, $P5010
    iseq $I5003, $S5001, "&infix:<,>"
    set $I5004, $I5003
  if3163_end6714:
    set $I5006, $I5004
    unless $I5004 goto if3162_end6712 
    $P5011 = $P101."named"()
    isfalse $I5005, $P5011
    set $I5006, $I5005
  if3162_end6712:
    unless $I5006 goto if3161_else6709 
.annotate 'line', 3005
    $P5015 = $P101."list"()
    set $P5012, $P5015
    iter $P5014, $P5015
  for_next6715:
    unless $P5014, for_done6717
    shift $P5017, $P5014
  for_redo6716:
    .const 'Sub' $P5016 = 'cuid_502_1367388600.55005' 
    capture_lex $P5016
    $P5012 = $P5016($P5017)
    goto for_next6715
  for_done6717:
    set $P5020, $P5012
    goto if3161_end6710
  if3161_else6709:
.annotate 'line', 3007
    find_lex $P5018, "$past"
    $P5019 = $P5018."push"($P101)
    set $P5020, $P5019
  if3161_end6710:
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_502_1367388600.55005") :anon :lex :outer("cuid_503_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3005
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "$past"
    $P5002 = $P5001."push"(_lex_param_0)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<multi_declarator>" :subid("cuid_329_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3023
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_711 
    unless_null _lex_param_1, fallback6757
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback6757:
    set fb_tmp_711, _lex_param_1
    repr_defined $I5001, fb_tmp_711
    unless $I5001 goto if3185_else6755 
    set $P5002, fb_tmp_711["multi_declarator"]
    set $P5004, $P5002
    goto if3185_end6756
  if3185_else6755:
    null $P5003
    set $P5004, $P5003
  if3185_end6756:
    unless_null $P5004, vivi_31866758
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_31866758:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<value>" :subid("cuid_330_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3025
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_712 
    unless_null _lex_param_1, fallback6761
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback6761:
    set fb_tmp_712, _lex_param_1
    repr_defined $I5001, fb_tmp_712
    unless $I5001 goto if3187_else6759 
    set $P5002, fb_tmp_712["value"]
    set $P5004, $P5002
    goto if3187_end6760
  if3187_else6759:
    null $P5003
    set $P5004, $P5003
  if3187_end6760:
    unless_null $P5004, vivi_31886762
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_31886762:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<( )>" :subid("cuid_331_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3027
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_713 
    .local pmc fb_tmp_714 
    .local pmc fb_tmp_715 
.annotate 'line', 3028
    unless_null _lex_param_1, fallback6767
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback6767:
    set fb_tmp_713, _lex_param_1
    repr_defined $I5001, fb_tmp_713
    unless $I5001 goto if3190_else6765 
    set $P5002, fb_tmp_713["EXPR"]
    set $P5004, $P5002
    goto if3190_end6766
  if3190_else6765:
    null $P5003
    set $P5004, $P5003
  if3190_end6766:
    unless_null $P5004, vivi_31916768
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_31916768:
    unless $P5004 goto if3189_else6763 
.annotate 'line', 3029
    unless_null _lex_param_1, fallback6773
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5006
  fallback6773:
    set fb_tmp_715, _lex_param_1
    repr_defined $I5003, fb_tmp_715
    unless $I5003 goto if3193_else6771 
    set $P5007, fb_tmp_715["EXPR"]
    set $P5009, $P5007
    goto if3193_end6772
  if3193_else6771:
    null $P5008
    set $P5009, $P5008
  if3193_end6772:
    unless_null $P5009, vivi_31946774
    nqp_get_sc_object $P5010, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5009, $P5010
  vivi_31946774:
    set fb_tmp_714, $P5009
    repr_defined $I5002, fb_tmp_714
    unless $I5002 goto if3192_else6769 
    set $P5011, fb_tmp_714[0]
    set $P5013, $P5011
    goto if3192_end6770
  if3192_else6769:
    null $P5012
    set $P5013, $P5012
  if3192_end6770:
    unless_null $P5013, vivi_31956775
    nqp_get_sc_object $P5014, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5013, $P5014
  vivi_31956775:
    $P5015 = $P5013."ast"()
    set $P5018, $P5015
    goto if3189_end6764
  if3189_else6763:
.annotate 'line', 3030
    nqp_get_sc_object $P5016, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    $P5017 = $P5016."new"("list" :named("op"), _lex_param_1 :named("node"))
    set $P5018, $P5017
  if3189_end6764:
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<[ ]>" :subid("cuid_332_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3033
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_716 
    .local pmc fb_tmp_717 
    .local pmc fb_tmp_718 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    unless_null _lex_param_1, fallback6780
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5002
  fallback6780:
    set fb_tmp_716, _lex_param_1
    repr_defined $I5001, fb_tmp_716
    unless $I5001 goto if3197_else6778 
    set $P5003, fb_tmp_716["EXPR"]
    set $P5005, $P5003
    goto if3197_end6779
  if3197_else6778:
    null $P5004
    set $P5005, $P5004
  if3197_end6779:
    unless_null $P5005, vivi_31986781
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5005, $P5006
  vivi_31986781:
    unless $P5005 goto if3196_else6776 
.annotate 'line', 3035
.annotate 'line', 3036
    unless_null _lex_param_1, fallback6786
    nqp_get_sc_object $P5007, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5007
  fallback6786:
    set fb_tmp_718, _lex_param_1
    repr_defined $I5003, fb_tmp_718
    unless $I5003 goto if3200_else6784 
    set $P5008, fb_tmp_718["EXPR"]
    set $P5010, $P5008
    goto if3200_end6785
  if3200_else6784:
    null $P5009
    set $P5010, $P5009
  if3200_end6785:
    unless_null $P5010, vivi_32016787
    nqp_get_sc_object $P5011, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5010, $P5011
  vivi_32016787:
    set fb_tmp_717, $P5010
    repr_defined $I5002, fb_tmp_717
    unless $I5002 goto if3199_else6782 
    set $P5012, fb_tmp_717[0]
    set $P5014, $P5012
    goto if3199_end6783
  if3199_else6782:
    null $P5013
    set $P5014, $P5013
  if3199_end6783:
    unless_null $P5014, vivi_32026788
    nqp_get_sc_object $P5015, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5014, $P5015
  vivi_32026788:
    $P5016 = $P5014."ast"()
    set $P101, $P5016
    nqp_get_sc_object $P5017, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    type_check $I5004, $P101, $P5017
    set $I5006, $I5004
    unless $I5004 goto if3204_end6792 
.annotate 'line', 3037
    $P5018 = $P101."name"()
    set $S5001, $P5018
    iseq $I5005, $S5001, "&infix:<,>"
    set $I5006, $I5005
  if3204_end6792:
    box $P5022, $I5006
    set $P5021, $P5022
    if $I5006 goto unless3203_end6790 
.annotate 'line', 3038
    nqp_get_sc_object $P5019, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    $P5020 = $P5019."new"($P101, "list" :named("op"))
    set $P101, $P5020
    set $P5021, $P101
  unless3203_end6790:
    goto if3196_end6777
  if3196_else6776:
.annotate 'line', 3041
.annotate 'line', 3042
    nqp_get_sc_object $P5023, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    $P5024 = $P5023."new"("list" :named("op"))
    set $P101, $P5024
  if3196_end6777:
.annotate 'line', 3044
    $P101."name"("&circumfix:<[ ]>")
.annotate 'line', 3045
    $P5025 = _lex_param_1."!make"($P101)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<ang>" :subid("cuid_333_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3048
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_719 
    unless_null _lex_param_1, fallback6795
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback6795:
    set fb_tmp_719, _lex_param_1
    repr_defined $I5001, fb_tmp_719
    unless $I5001 goto if3205_else6793 
    set $P5002, fb_tmp_719["quote_EXPR"]
    set $P5004, $P5002
    goto if3205_end6794
  if3205_else6793:
    null $P5003
    set $P5004, $P5003
  if3205_end6794:
    unless_null $P5004, vivi_32066796
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_32066796:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub utf8:"circumfix:sym<\x{ab} \x{bb}>" :subid("cuid_334_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3049
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_720 
    unless_null _lex_param_1, fallback6799
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback6799:
    set fb_tmp_720, _lex_param_1
    repr_defined $I5001, fb_tmp_720
    unless $I5001 goto if3207_else6797 
    set $P5002, fb_tmp_720["quote_EXPR"]
    set $P5004, $P5002
    goto if3207_end6798
  if3207_else6797:
    null $P5003
    set $P5004, $P5003
  if3207_end6798:
    unless_null $P5004, vivi_32086800
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_32086800:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<{ }>" :subid("cuid_335_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3051
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5044 = 'cuid_504_1367388600.55005' 
    capture_lex $P5044 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_721 
    .local pmc fb_tmp_722 
    .local pmc fb_tmp_723 
    .local pmc fb_tmp_724 
    .local pmc fb_tmp_726 
    .local pmc fb_tmp_727 
    .local pmc fb_tmp_728 
    .local pmc fb_tmp_729 
    unless_null _lex_param_1, fallback6811
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback6811:
    set fb_tmp_724, _lex_param_1
    repr_defined $I5005, fb_tmp_724
    unless $I5005 goto if3213_else6809 
    set $P5002, fb_tmp_724["pblock"]
    set $P5004, $P5002
    goto if3213_end6810
  if3213_else6809:
    null $P5003
    set $P5004, $P5003
  if3213_end6810:
    unless_null $P5004, vivi_32146812
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_32146812:
    set fb_tmp_723, $P5004
    repr_defined $I5004, fb_tmp_723
    unless $I5004 goto if3212_else6807 
    set $P5006, fb_tmp_723["blockoid"]
    set $P5008, $P5006
    goto if3212_end6808
  if3212_else6807:
    null $P5007
    set $P5008, $P5007
  if3212_end6808:
    unless_null $P5008, vivi_32156813
    nqp_get_sc_object $P5009, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5008, $P5009
  vivi_32156813:
    set fb_tmp_722, $P5008
    repr_defined $I5003, fb_tmp_722
    unless $I5003 goto if3211_else6805 
    set $P5010, fb_tmp_722["statementlist"]
    set $P5012, $P5010
    goto if3211_end6806
  if3211_else6805:
    null $P5011
    set $P5012, $P5011
  if3211_end6806:
    unless_null $P5012, vivi_32166814
    nqp_get_sc_object $P5013, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5012, $P5013
  vivi_32166814:
    set fb_tmp_721, $P5012
    repr_defined $I5002, fb_tmp_721
    unless $I5002 goto if3210_else6803 
    set $P5014, fb_tmp_721["statement"]
    set $P5016, $P5014
    goto if3210_end6804
  if3210_else6803:
    null $P5015
    set $P5016, $P5015
  if3210_end6804:
    unless_null $P5016, vivi_32176815
    nqp_get_sc_object $P5017, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5016, $P5017
  vivi_32176815:
    set $N5001, $P5016
    set $N5002, 0
    isgt $I5001, $N5001, $N5002
    unless $I5001 goto if3209_else6801 
    .const 'Sub' $P5018 = 'cuid_504_1367388600.55005' 
    capture_lex $P5018
    $P5019 = $P5018()
    set $P5043, $P5019
    goto if3209_end6802
  if3209_else6801:
    unless_null _lex_param_1, fallback6828
    nqp_get_sc_object $P5020, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5020
  fallback6828:
    set fb_tmp_728, _lex_param_1
    repr_defined $I5008, fb_tmp_728
    unless $I5008 goto if3223_else6826 
    set $P5021, fb_tmp_728["pblock"]
    set $P5023, $P5021
    goto if3223_end6827
  if3223_else6826:
    null $P5022
    set $P5023, $P5022
  if3223_end6827:
    unless_null $P5023, vivi_32246829
    nqp_get_sc_object $P5024, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5023, $P5024
  vivi_32246829:
    set fb_tmp_727, $P5023
    repr_defined $I5007, fb_tmp_727
    unless $I5007 goto if3222_else6824 
    set $P5025, fb_tmp_727["blockoid"]
    set $P5027, $P5025
    goto if3222_end6825
  if3222_else6824:
    null $P5026
    set $P5027, $P5026
  if3222_end6825:
    unless_null $P5027, vivi_32256830
    nqp_get_sc_object $P5028, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5027, $P5028
  vivi_32256830:
    set fb_tmp_726, $P5027
    repr_defined $I5006, fb_tmp_726
    unless $I5006 goto if3221_else6822 
    set $P5029, fb_tmp_726["you_are_here"]
    set $P5031, $P5029
    goto if3221_end6823
  if3221_else6822:
    null $P5030
    set $P5031, $P5030
  if3221_end6823:
    unless_null $P5031, vivi_32266831
    nqp_get_sc_object $P5032, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5031, $P5032
  vivi_32266831:
    unless $P5031 goto if3220_else6820 
.annotate 'line', 3057
.annotate 'line', 3058
    unless_null _lex_param_1, fallback6834
    nqp_get_sc_object $P5033, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5033
  fallback6834:
    set fb_tmp_729, _lex_param_1
    repr_defined $I5009, fb_tmp_729
    unless $I5009 goto if3227_else6832 
    set $P5034, fb_tmp_729["pblock"]
    set $P5036, $P5034
    goto if3227_end6833
  if3227_else6832:
    null $P5035
    set $P5036, $P5035
  if3227_end6833:
    unless_null $P5036, vivi_32286835
    nqp_get_sc_object $P5037, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5036, $P5037
  vivi_32286835:
    $P5038 = $P5036."ast"()
    $P5039 = _lex_param_1."!make"($P5038)
    set $P5042, $P5039
    goto if3220_end6821
  if3220_else6820:
.annotate 'line', 3060
.annotate 'line', 3061
    $P5040 = "&default_for"("%")
    $P5041 = _lex_param_1."!make"($P5040)
    set $P5042, $P5041
  if3220_end6821:
    set $P5043, $P5042
  if3209_end6802:
    .return ($P5043) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_504_1367388600.55005") :anon :lex :outer("cuid_335_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3052
    .lex "$past", $P101 
    .local pmc fb_tmp_725 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
.annotate 'line', 3053
    nqp_get_sc_object $P5002, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    find_lex $P5003, "$/"
    unless_null $P5003, fallback6818
    nqp_get_sc_object $P5004, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5003, $P5004
  fallback6818:
    set fb_tmp_725, $P5003
    repr_defined $I5001, fb_tmp_725
    unless $I5001 goto if3218_else6816 
    set $P5005, fb_tmp_725["pblock"]
    set $P5007, $P5005
    goto if3218_end6817
  if3218_else6816:
    null $P5006
    set $P5007, $P5006
  if3218_end6817:
    unless_null $P5007, vivi_32196819
    nqp_get_sc_object $P5008, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5007, $P5008
  vivi_32196819:
    $P5009 = $P5007."ast"()
    $P5010 = $P5002."new"($P5009, "takeclosure" :named("op"))
    set $P101, $P5010
    box $P5011, 1
    set $P101["bareblock"], $P5011
.annotate 'line', 3055
    find_dynamic_lex $P5012, "$/"
    $P5013 = $P5012."!make"($P101)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "semilist" :subid("cuid_336_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3065
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_730 
    unless_null _lex_param_1, fallback6838
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback6838:
    set fb_tmp_730, _lex_param_1
    repr_defined $I5001, fb_tmp_730
    unless $I5001 goto if3229_else6836 
    set $P5002, fb_tmp_730["statement"]
    set $P5004, $P5002
    goto if3229_end6837
  if3229_else6836:
    null $P5003
    set $P5004, $P5003
  if3229_end6837:
    unless_null $P5004, vivi_32306839
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_32306839:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<[ ]>" :subid("cuid_337_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3067
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_731 
.annotate 'line', 3068
    nqp_get_sc_object $P5001, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 80
    unless_null _lex_param_1, fallback6842
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5002
  fallback6842:
    set fb_tmp_731, _lex_param_1
    repr_defined $I5001, fb_tmp_731
    unless $I5001 goto if3231_else6840 
    set $P5003, fb_tmp_731["EXPR"]
    set $P5005, $P5003
    goto if3231_end6841
  if3231_else6840:
    null $P5004
    set $P5005, $P5004
  if3231_end6841:
    unless_null $P5005, vivi_32326843
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5005, $P5006
  vivi_32326843:
    $P5007 = $P5005."ast"()
    $P5008 = "&default_for"("$")
    $P5009 = $P5001."new"($P5007, "positional" :named("scope"), $P5008 :named("fallback"))
    $P5010 = _lex_param_1."!make"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<{ }>" :subid("cuid_338_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3071
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_732 
.annotate 'line', 3072
    nqp_get_sc_object $P5001, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 80
    unless_null _lex_param_1, fallback6846
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5002
  fallback6846:
    set fb_tmp_732, _lex_param_1
    repr_defined $I5001, fb_tmp_732
    unless $I5001 goto if3233_else6844 
    set $P5003, fb_tmp_732["EXPR"]
    set $P5005, $P5003
    goto if3233_end6845
  if3233_else6844:
    null $P5004
    set $P5005, $P5004
  if3233_end6845:
    unless_null $P5005, vivi_32346847
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5005, $P5006
  vivi_32346847:
    $P5007 = $P5005."ast"()
    $P5008 = "&default_for"("$")
    $P5009 = $P5001."new"($P5007, "associative" :named("scope"), $P5008 :named("fallback"))
    $P5010 = _lex_param_1."!make"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<ang>" :subid("cuid_339_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3075
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_733 
.annotate 'line', 3076
    nqp_get_sc_object $P5001, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 80
    unless_null _lex_param_1, fallback6850
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5002
  fallback6850:
    set fb_tmp_733, _lex_param_1
    repr_defined $I5001, fb_tmp_733
    unless $I5001 goto if3235_else6848 
    set $P5003, fb_tmp_733["quote_EXPR"]
    set $P5005, $P5003
    goto if3235_end6849
  if3235_else6848:
    null $P5004
    set $P5005, $P5004
  if3235_end6849:
    unless_null $P5005, vivi_32366851
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5005, $P5006
  vivi_32366851:
    $P5007 = $P5005."ast"()
    $P5008 = "&default_for"("$")
    $P5009 = $P5001."new"($P5007, "associative" :named("scope"), $P5008 :named("fallback"))
    $P5010 = _lex_param_1."!make"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<( )>" :subid("cuid_340_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3079
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_734 
.annotate 'line', 3080
    unless_null _lex_param_1, fallback6854
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback6854:
    set fb_tmp_734, _lex_param_1
    repr_defined $I5001, fb_tmp_734
    unless $I5001 goto if3237_else6852 
    set $P5002, fb_tmp_734["arglist"]
    set $P5004, $P5002
    goto if3237_end6853
  if3237_else6852:
    null $P5003
    set $P5004, $P5003
  if3237_end6853:
    unless_null $P5004, vivi_32386855
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_32386855:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "value" :subid("cuid_341_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3083
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_735 
    .local pmc fb_tmp_736 
    .local pmc fb_tmp_737 
.annotate 'line', 3084
    unless_null _lex_param_1, fallback6860
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback6860:
    set fb_tmp_735, _lex_param_1
    repr_defined $I5001, fb_tmp_735
    unless $I5001 goto if3240_else6858 
    set $P5002, fb_tmp_735["quote"]
    set $P5004, $P5002
    goto if3240_end6859
  if3240_else6858:
    null $P5003
    set $P5004, $P5003
  if3240_end6859:
    unless_null $P5004, vivi_32416861
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_32416861:
    unless $P5004 goto if3239_else6856 
    unless_null _lex_param_1, fallback6864
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5006
  fallback6864:
    set fb_tmp_736, _lex_param_1
    repr_defined $I5002, fb_tmp_736
    unless $I5002 goto if3242_else6862 
    set $P5007, fb_tmp_736["quote"]
    set $P5009, $P5007
    goto if3242_end6863
  if3242_else6862:
    null $P5008
    set $P5009, $P5008
  if3242_end6863:
    unless_null $P5009, vivi_32436865
    nqp_get_sc_object $P5010, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5009, $P5010
  vivi_32436865:
    $P5011 = $P5009."ast"()
    set $P5018, $P5011
    goto if3239_end6857
  if3239_else6856:
    unless_null _lex_param_1, fallback6868
    nqp_get_sc_object $P5012, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5012
  fallback6868:
    set fb_tmp_737, _lex_param_1
    repr_defined $I5003, fb_tmp_737
    unless $I5003 goto if3244_else6866 
    set $P5013, fb_tmp_737["number"]
    set $P5015, $P5013
    goto if3244_end6867
  if3244_else6866:
    null $P5014
    set $P5015, $P5014
  if3244_end6867:
    unless_null $P5015, vivi_32456869
    nqp_get_sc_object $P5016, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5015, $P5016
  vivi_32456869:
    $P5017 = $P5015."ast"()
    set $P5018, $P5017
  if3239_end6857:
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "number" :subid("cuid_342_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3087
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$value", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_738 
    .local pmc fb_tmp_739 
    .local pmc fb_tmp_740 
    .local pmc fb_tmp_741 
    .local pmc fb_tmp_742 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    unless_null _lex_param_1, fallback6874
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5002
  fallback6874:
    set fb_tmp_738, _lex_param_1
    repr_defined $I5001, fb_tmp_738
    unless $I5001 goto if3247_else6872 
    set $P5003, fb_tmp_738["dec_number"]
    set $P5005, $P5003
    goto if3247_end6873
  if3247_else6872:
    null $P5004
    set $P5005, $P5004
  if3247_end6873:
    unless_null $P5005, vivi_32486875
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5005, $P5006
  vivi_32486875:
    unless $P5005 goto if3246_else6870 
.annotate 'line', 3088
    unless_null _lex_param_1, fallback6878
    nqp_get_sc_object $P5007, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5007
  fallback6878:
    set fb_tmp_739, _lex_param_1
    repr_defined $I5002, fb_tmp_739
    unless $I5002 goto if3249_else6876 
    set $P5008, fb_tmp_739["dec_number"]
    set $P5010, $P5008
    goto if3249_end6877
  if3249_else6876:
    null $P5009
    set $P5010, $P5009
  if3249_end6877:
    unless_null $P5010, vivi_32506879
    nqp_get_sc_object $P5011, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5010, $P5011
  vivi_32506879:
    $P5012 = $P5010."ast"()
    set $P5019, $P5012
    goto if3246_end6871
  if3246_else6870:
    unless_null _lex_param_1, fallback6882
    nqp_get_sc_object $P5013, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5013
  fallback6882:
    set fb_tmp_740, _lex_param_1
    repr_defined $I5003, fb_tmp_740
    unless $I5003 goto if3251_else6880 
    set $P5014, fb_tmp_740["integer"]
    set $P5016, $P5014
    goto if3251_end6881
  if3251_else6880:
    null $P5015
    set $P5016, $P5015
  if3251_end6881:
    unless_null $P5016, vivi_32526883
    nqp_get_sc_object $P5017, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5016, $P5017
  vivi_32526883:
    $P5018 = $P5016."ast"()
    set $P5019, $P5018
  if3246_end6871:
    set $P101, $P5019
    unless_null _lex_param_1, fallback6888
    nqp_get_sc_object $P5020, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5020
  fallback6888:
    set fb_tmp_741, _lex_param_1
    repr_defined $I5005, fb_tmp_741
    unless $I5005 goto if3254_else6886 
    set $P5021, fb_tmp_741["sign"]
    set $P5023, $P5021
    goto if3254_end6887
  if3254_else6886:
    null $P5022
    set $P5023, $P5022
  if3254_end6887:
    unless_null $P5023, vivi_32556889
    nqp_get_sc_object $P5024, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5023, $P5024
  vivi_32556889:
    set $S5001, $P5023
    iseq $I5004, $S5001, "-"
    unless $I5004 goto if3253_end6885 
.annotate 'line', 3089
    set $N5002, $P101
    neg $N5001, $N5002
    box $P5025, $N5001
    set $P101, $P5025
  if3253_end6885:
.annotate 'line', 3090
    unless_null _lex_param_1, fallback6894
    nqp_get_sc_object $P5026, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5026
  fallback6894:
    set fb_tmp_742, _lex_param_1
    repr_defined $I5006, fb_tmp_742
    unless $I5006 goto if3257_else6892 
    set $P5027, fb_tmp_742["dec_number"]
    set $P5029, $P5027
    goto if3257_end6893
  if3257_else6892:
    null $P5028
    set $P5029, $P5028
  if3257_end6893:
    unless_null $P5029, vivi_32586895
    nqp_get_sc_object $P5030, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5029, $P5030
  vivi_32586895:
    unless $P5029 goto if3256_else6890 
.annotate 'line', 3091
    nqp_get_sc_object $P5031, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 47
    $P5032 = $P5031."new"($P101 :named("value"))
    set $P5035, $P5032
    goto if3256_end6891
  if3256_else6890:
.annotate 'line', 3092
    nqp_get_sc_object $P5033, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 42
    $P5034 = $P5033."new"($P101 :named("value"))
    set $P5035, $P5034
  if3256_end6891:
    $P5036 = _lex_param_1."!make"($P5035)
    .return ($P5036) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<apos>" :subid("cuid_343_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3095
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_743 
    unless_null _lex_param_1, fallback6898
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback6898:
    set fb_tmp_743, _lex_param_1
    repr_defined $I5001, fb_tmp_743
    unless $I5001 goto if3259_else6896 
    set $P5002, fb_tmp_743["quote_EXPR"]
    set $P5004, $P5002
    goto if3259_end6897
  if3259_else6896:
    null $P5003
    set $P5004, $P5003
  if3259_end6897:
    unless_null $P5004, vivi_32606899
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_32606899:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<dblq>" :subid("cuid_344_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3096
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_744 
    unless_null _lex_param_1, fallback6902
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback6902:
    set fb_tmp_744, _lex_param_1
    repr_defined $I5001, fb_tmp_744
    unless $I5001 goto if3261_else6900 
    set $P5002, fb_tmp_744["quote_EXPR"]
    set $P5004, $P5002
    goto if3261_end6901
  if3261_else6900:
    null $P5003
    set $P5004, $P5003
  if3261_end6901:
    unless_null $P5004, vivi_32626903
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_32626903:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<qq>" :subid("cuid_345_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3097
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_745 
    unless_null _lex_param_1, fallback6906
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback6906:
    set fb_tmp_745, _lex_param_1
    repr_defined $I5001, fb_tmp_745
    unless $I5001 goto if3263_else6904 
    set $P5002, fb_tmp_745["quote_EXPR"]
    set $P5004, $P5002
    goto if3263_end6905
  if3263_else6904:
    null $P5003
    set $P5004, $P5003
  if3263_end6905:
    unless_null $P5004, vivi_32646907
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_32646907:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<q>" :subid("cuid_346_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3098
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_746 
    unless_null _lex_param_1, fallback6910
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback6910:
    set fb_tmp_746, _lex_param_1
    repr_defined $I5001, fb_tmp_746
    unless $I5001 goto if3265_else6908 
    set $P5002, fb_tmp_746["quote_EXPR"]
    set $P5004, $P5002
    goto if3265_end6909
  if3265_else6908:
    null $P5003
    set $P5004, $P5003
  if3265_end6909:
    unless_null $P5004, vivi_32666911
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_32666911:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<Q>" :subid("cuid_347_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3099
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_747 
    unless_null _lex_param_1, fallback6914
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback6914:
    set fb_tmp_747, _lex_param_1
    repr_defined $I5001, fb_tmp_747
    unless $I5001 goto if3267_else6912 
    set $P5002, fb_tmp_747["quote_EXPR"]
    set $P5004, $P5002
    goto if3267_end6913
  if3267_else6912:
    null $P5003
    set $P5004, $P5003
  if3267_end6913:
    unless_null $P5004, vivi_32686915
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_32686915:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<Q:PIR>" :subid("cuid_348_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3100
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_748 
.annotate 'line', 3101
    nqp_get_sc_object $P5001, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 89
    unless_null _lex_param_1, fallback6918
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5002
  fallback6918:
    set fb_tmp_748, _lex_param_1
    repr_defined $I5001, fb_tmp_748
    unless $I5001 goto if3269_else6916 
    set $P5003, fb_tmp_748["quote_EXPR"]
    set $P5005, $P5003
    goto if3269_end6917
  if3269_else6916:
    null $P5004
    set $P5005, $P5004
  if3269_end6917:
    unless_null $P5005, vivi_32706919
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5005, $P5006
  vivi_32706919:
    $P5007 = $P5005."ast"()
    $P5008 = $P5007."value"()
    $P5009 = $P5001."new"($P5008 :named("pir"), _lex_param_1 :named("node"))
    $P5010 = _lex_param_1."!make"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym</ />" :subid("cuid_349_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3104
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$block", $P101 
    .lex "$regex", $P102 
    .lex "$past", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_749 
    .local pmc fb_tmp_750 
    .local pmc fb_tmp_751 
    .local pmc fb_tmp_752 
    .local pmc fb_tmp_753 
    .local pmc fb_tmp_754 
    .local pmc fb_tmp_755 
    .local pmc pkg_viv_tmp_48 
    .local pmc fb_tmp_756 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P103, $P5003
.annotate 'line', 3105
    find_dynamic_lex $P5004, "$*W"
    unless_null $P5004, fallback6920
    nqp_get_sc_object $P5006, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5005, $P5006
    set fb_tmp_749, $P5005
    repr_defined $I5001, fb_tmp_749
    unless $I5001 goto if3271_else6921 
    set $P5007, fb_tmp_749["$W"]
    set $P5009, $P5007
    goto if3271_end6922
  if3271_else6921:
    null $P5008
    set $P5009, $P5008
  if3271_end6922:
    unless_null $P5009, vivi_32726923
    nqp_get_sc_object $P5010, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5009, $P5010
  vivi_32726923:
    unless_null $P5009, vivi_32736924
    die "Contextual $*W not found"
    box $P5011, "Contextual $*W not found"
    set $P5009, $P5011
  vivi_32736924:
    set $P5004, $P5009
  fallback6920:
    $P5012 = $P5004."pop_lexpad"()
    set $P101, $P5012
.annotate 'line', 3106
    set fb_tmp_750, $P101
    repr_defined $I5002, fb_tmp_750
    unless $I5002 goto if3274_else6925 
    set $P5013, fb_tmp_750[0]
    set $P5015, $P5013
    goto if3274_end6926
  if3274_else6925:
    null $P5014
    set $P5015, $P5014
  if3274_end6926:
    unless_null $P5015, vivi_32756927
    nqp_get_sc_object $P5016, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5015, $P5016
  vivi_32756927:
    nqp_get_sc_object $P5017, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5018 = $P5017."new"("self" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    $P5015."push"($P5018)
.annotate 'line', 3107
    set fb_tmp_751, $P101
    repr_defined $I5003, fb_tmp_751
    unless $I5003 goto if3276_else6928 
    set $P5019, fb_tmp_751[0]
    set $P5021, $P5019
    goto if3276_end6929
  if3276_else6928:
    null $P5020
    set $P5021, $P5020
  if3276_end6929:
    unless_null $P5021, vivi_32776930
    nqp_get_sc_object $P5022, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5021, $P5022
  vivi_32776930:
    nqp_get_sc_object $P5023, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 3109
    nqp_get_sc_object $P5024, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5025 = $P5024."new"("self" :named("name"), "local" :named("scope"), "var" :named("decl"))
.annotate 'line', 3110
    nqp_get_sc_object $P5026, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5027 = $P5026."new"("self" :named("name"), "lexical" :named("scope"))
    $P5028 = $P5023."new"($P5025, $P5027, "bind" :named("op"))
    $P5021."push"($P5028)
.annotate 'line', 3111
    set fb_tmp_752, $P101
    repr_defined $I5004, fb_tmp_752
    unless $I5004 goto if3278_else6931 
    set $P5029, fb_tmp_752[0]
    set $P5031, $P5029
    goto if3278_end6932
  if3278_else6931:
    null $P5030
    set $P5031, $P5030
  if3278_end6932:
    unless_null $P5031, vivi_32796933
    nqp_get_sc_object $P5032, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5031, $P5032
  vivi_32796933:
    nqp_get_sc_object $P5033, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5034 = $P5033."new"(utf8:"$\x{a2}" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    $P5031."push"($P5034)
.annotate 'line', 3112
    set fb_tmp_753, $P101
    repr_defined $I5005, fb_tmp_753
    unless $I5005 goto if3280_else6934 
    set $P5035, fb_tmp_753[0]
    set $P5037, $P5035
    goto if3280_end6935
  if3280_else6934:
    null $P5036
    set $P5037, $P5036
  if3280_end6935:
    unless_null $P5037, vivi_32816936
    nqp_get_sc_object $P5038, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5037, $P5038
  vivi_32816936:
    nqp_get_sc_object $P5039, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5040 = $P5039."new"("$/" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    $P5037."push"($P5040)
.annotate 'line', 3113
    $P101."symbol"(utf8:"$\x{a2}", "lexical" :named("scope"))
.annotate 'line', 3114
    $P101."symbol"("$/", "lexical" :named("scope"))
.annotate 'line', 3116
    find_dynamic_lex $P5041, "%*LANG"
    unless_null $P5041, fallback6939
    nqp_get_sc_object $P5043, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5042, $P5043
    set pkg_viv_tmp_48, $P5042
    set fb_tmp_755, pkg_viv_tmp_48
    repr_defined $I5007, fb_tmp_755
    unless $I5007 goto if3283_else6940 
    set $P5044, fb_tmp_755["%LANG"]
    set $P5046, $P5044
    goto if3283_end6941
  if3283_else6940:
    null $P5045
    set $P5046, $P5045
  if3283_end6941:
    unless_null $P5046, vivi_32846942
    new $P5047, 'Hash'
    set pkg_viv_tmp_48["%LANG"], $P5047
    set $P5046, $P5047
  vivi_32846942:
    unless_null $P5046, vivi_32856943
    die "Contextual %*LANG not found"
    box $P5048, "Contextual %*LANG not found"
    set $P5046, $P5048
  vivi_32856943:
    set $P5041, $P5046
  fallback6939:
    set fb_tmp_754, $P5041
    repr_defined $I5006, fb_tmp_754
    unless $I5006 goto if3282_else6937 
    set $P5049, fb_tmp_754["Regex-actions"]
    set $P5051, $P5049
    goto if3282_end6938
  if3282_else6937:
    null $P5050
    set $P5051, $P5050
  if3282_end6938:
    unless_null $P5051, vivi_32866944
    nqp_get_sc_object $P5052, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5051, $P5052
  vivi_32866944:
    unless_null _lex_param_1, fallback6947
    nqp_get_sc_object $P5053, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5053
  fallback6947:
    set fb_tmp_756, _lex_param_1
    repr_defined $I5008, fb_tmp_756
    unless $I5008 goto if3287_else6945 
    set $P5054, fb_tmp_756["p6regex"]
    set $P5056, $P5054
    goto if3287_end6946
  if3287_else6945:
    null $P5055
    set $P5056, $P5055
  if3287_end6946:
    unless_null $P5056, vivi_32886948
    nqp_get_sc_object $P5057, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5056, $P5057
  vivi_32886948:
    $P5058 = $P5056."ast"()
    $P5059 = $P5051."qbuildsub"($P5058, $P101)
    set $P102, $P5059
.annotate 'line', 3117
    nqp_get_sc_object $P5060, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 3119
    new $P5061, 'ResizablePMCArray'
    box $P5062, "NQPRegex"
    push $P5061, $P5062
    $P5063 = "&lexical_package_lookup"($P5061, _lex_param_1)
    $P5064 = $P5060."new"($P5063, $P102, "callmethod" :named("op"), "new" :named("name"))
    set $P103, $P5064
    set $P103["sink"], $P102
.annotate 'line', 3124
    $P5065 = _lex_param_1."!make"($P103)
    .return ($P5065) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<$>" :subid("cuid_350_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3127
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_757 
    unless_null _lex_param_1, fallback6951
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback6951:
    set fb_tmp_757, _lex_param_1
    repr_defined $I5001, fb_tmp_757
    unless $I5001 goto if3289_else6949 
    set $P5002, fb_tmp_757["variable"]
    set $P5004, $P5002
    goto if3289_end6950
  if3289_else6949:
    null $P5003
    set $P5004, $P5003
  if3289_end6950:
    unless_null $P5004, vivi_32906952
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_32906952:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<{ }>" :subid("cuid_351_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3128
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_758 
.annotate 'line', 3129
    nqp_get_sc_object $P5001, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 3130
    unless_null _lex_param_1, fallback6955
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5002
  fallback6955:
    set fb_tmp_758, _lex_param_1
    repr_defined $I5001, fb_tmp_758
    unless $I5001 goto if3291_else6953 
    set $P5003, fb_tmp_758["block"]
    set $P5005, $P5003
    goto if3291_end6954
  if3291_else6953:
    null $P5004
    set $P5005, $P5004
  if3291_end6954:
    unless_null $P5005, vivi_32926956
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5005, $P5006
  vivi_32926956:
    $P5007 = $P5005."ast"()
    $P5008 = "&block_immediate"($P5007)
    $P5009 = $P5001."new"($P5008, "stringify" :named("op"), _lex_param_1 :named("node"))
    $P5010 = _lex_param_1."!make"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<esc>" :subid("cuid_352_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3133
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    $P5001 = _lex_param_1."!make"("\e")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "postfix:sym<.>" :subid("cuid_353_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3137
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_759 
    unless_null _lex_param_1, fallback6959
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback6959:
    set fb_tmp_759, _lex_param_1
    repr_defined $I5001, fb_tmp_759
    unless $I5001 goto if3293_else6957 
    set $P5002, fb_tmp_759["dotty"]
    set $P5004, $P5002
    goto if3293_end6958
  if3293_else6957:
    null $P5003
    set $P5004, $P5003
  if3293_end6958:
    unless_null $P5004, vivi_32946960
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_32946960:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<return>" :subid("cuid_354_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3139
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
.annotate 'line', 3140
    nqp_get_sc_object $P5001, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    $P5002 = $P5001."new"("call" :named("op"), "RETURN" :named("name"))
    $P5003 = _lex_param_1."!make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<make>" :subid("cuid_355_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3143
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
.annotate 'line', 3144
    nqp_get_sc_object $P5001, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 3145
    nqp_get_sc_object $P5002, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5003 = $P5002."new"("$/" :named("name"), "contextual" :named("scope"))
    $P5004 = $P5001."new"($P5003, "callmethod" :named("op"), "!make" :named("name"), _lex_param_1 :named("node"))
    $P5005 = _lex_param_1."!make"($P5004)
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<next>" :subid("cuid_356_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3152
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    nqp_get_sc_object $P5001, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    $P5002 = $P5001."new"("control" :named("op"), "next" :named("name"))
    $P5003 = _lex_param_1."!make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<last>" :subid("cuid_357_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3153
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    nqp_get_sc_object $P5001, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    $P5002 = $P5001."new"("control" :named("op"), "last" :named("name"))
    $P5003 = _lex_param_1."!make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<redo>" :subid("cuid_358_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3154
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    nqp_get_sc_object $P5001, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    $P5002 = $P5001."new"("control" :named("op"), "redo" :named("name"))
    $P5003 = _lex_param_1."!make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<~~>" :subid("cuid_359_1367388600.55005") :anon :lex :outer("cuid_427_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3156
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
.annotate 'line', 3157
    nqp_get_sc_object $P5001, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
    $P5002 = $P5001."new"("callmethod" :named("op"), "ACCEPTS" :named("name"), _lex_param_1 :named("node"))
    $P5003 = _lex_param_1."!make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_505_1367388600.55005") :anon :lex :outer("cuid_374_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3261
    .const 'Sub' $P5014 = 'cuid_360_1367388600.55005' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_361_1367388600.55005' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_362_1367388600.55005' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_363_1367388600.55005' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_364_1367388600.55005' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_365_1367388600.55005' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_366_1367388600.55005' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_367_1367388600.55005' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_368_1367388600.55005' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_369_1367388600.55005' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_370_1367388600.55005' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_371_1367388600.55005' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_372_1367388600.55005' 
    capture_lex $P5014 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .const 'Sub' $P5001 = 'cuid_360_1367388600.55005' 
    capture_lex $P5001
    .const 'Sub' $P5002 = 'cuid_361_1367388600.55005' 
    capture_lex $P5002
    .const 'Sub' $P5003 = 'cuid_362_1367388600.55005' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_363_1367388600.55005' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_364_1367388600.55005' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_365_1367388600.55005' 
    capture_lex $P5006
    .const 'Sub' $P5007 = 'cuid_366_1367388600.55005' 
    capture_lex $P5007
    .const 'Sub' $P5008 = 'cuid_367_1367388600.55005' 
    capture_lex $P5008
    .const 'Sub' $P5009 = 'cuid_368_1367388600.55005' 
    capture_lex $P5009
    .const 'Sub' $P5010 = 'cuid_369_1367388600.55005' 
    capture_lex $P5010
    .const 'Sub' $P5011 = 'cuid_370_1367388600.55005' 
    capture_lex $P5011
    .const 'Sub' $P5012 = 'cuid_371_1367388600.55005' 
    capture_lex $P5012
    .const 'Sub' $P5013 = 'cuid_372_1367388600.55005' 
    capture_lex $P5013
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<:my>" :subid("cuid_360_1367388600.55005") :anon :lex :outer("cuid_505_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3263
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_760 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
.annotate 'line', 3264
    unless_null _lex_param_1, fallback6963
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5002
  fallback6963:
    set fb_tmp_760, _lex_param_1
    repr_defined $I5001, fb_tmp_760
    unless $I5001 goto if3295_else6961 
    set $P5003, fb_tmp_760["statement"]
    set $P5005, $P5003
    goto if3295_end6962
  if3295_else6961:
    null $P5004
    set $P5005, $P5004
  if3295_end6962:
    unless_null $P5005, vivi_32966964
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5005, $P5006
  vivi_32966964:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 3265
    nqp_get_sc_object $P5008, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 34
    $P5009 = $P5008."new"($P101, "qastnode" :named("rxtype"), "declarative" :named("subtype"), _lex_param_1 :named("node"))
    $P5010 = _lex_param_1."!make"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<{ }>" :subid("cuid_361_1367388600.55005") :anon :lex :outer("cuid_505_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3269
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_761 
.annotate 'line', 3270
    nqp_get_sc_object $P5001, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 34
    unless_null _lex_param_1, fallback6967
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5002
  fallback6967:
    set fb_tmp_761, _lex_param_1
    repr_defined $I5001, fb_tmp_761
    unless $I5001 goto if3297_else6965 
    set $P5003, fb_tmp_761["codeblock"]
    set $P5005, $P5003
    goto if3297_end6966
  if3297_else6965:
    null $P5004
    set $P5005, $P5004
  if3297_end6966:
    unless_null $P5005, vivi_32986968
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5005, $P5006
  vivi_32986968:
    $P5007 = $P5005."ast"()
    $P5008 = $P5001."new"($P5007, "qastnode" :named("rxtype"), _lex_param_1 :named("node"))
    $P5009 = _lex_param_1."!make"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<nqpvar>" :subid("cuid_362_1367388600.55005") :anon :lex :outer("cuid_505_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3274
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_762 
    .local pmc fb_tmp_763 
.annotate 'line', 3275
    nqp_get_sc_object $P5001, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 34
    nqp_get_sc_object $P5002, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 12
.annotate 'line', 3276
    nqp_get_sc_object $P5003, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 52
    $P5004 = $P5003."new"("!INTERPOLATE" :named("value"))
.annotate 'line', 3277
    unless_null _lex_param_1, fallback6971
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5005
  fallback6971:
    set fb_tmp_762, _lex_param_1
    repr_defined $I5001, fb_tmp_762
    unless $I5001 goto if3299_else6969 
    set $P5006, fb_tmp_762["var"]
    set $P5008, $P5006
    goto if3299_end6970
  if3299_else6969:
    null $P5007
    set $P5008, $P5007
  if3299_end6970:
    unless_null $P5008, vivi_33006972
    nqp_get_sc_object $P5009, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5008, $P5009
  vivi_33006972:
    $P5010 = $P5008."ast"()
.annotate 'line', 3278
    nqp_get_sc_object $P5011, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 42
    find_dynamic_lex $P5012, "$*SEQ"
    unless_null $P5012, fallback6975
    nqp_get_sc_object $P5014, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5013, $P5014
    set fb_tmp_763, $P5013
    repr_defined $I5002, fb_tmp_763
    unless $I5002 goto if3302_else6976 
    set $P5015, fb_tmp_763["$SEQ"]
    set $P5017, $P5015
    goto if3302_end6977
  if3302_else6976:
    null $P5016
    set $P5017, $P5016
  if3302_end6977:
    unless_null $P5017, vivi_33036978
    nqp_get_sc_object $P5018, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5017, $P5018
  vivi_33036978:
    unless_null $P5017, vivi_33046979
    die "Contextual $*SEQ not found"
    box $P5019, "Contextual $*SEQ not found"
    set $P5017, $P5019
  vivi_33046979:
    set $P5012, $P5017
  fallback6975:
    unless $P5012 goto if3301_else6973 
    set $I5003, 1
    goto if3301_end6974
  if3301_else6973:
    set $I5003, 0
  if3301_end6974:
    $P5020 = $P5011."new"($I5003 :named("value"))
    $P5021 = $P5002."new"($P5004, $P5010, $P5020)
    $P5022 = $P5001."new"($P5021, "subrule" :named("rxtype"), "method" :named("subtype"), _lex_param_1 :named("node"))
    $P5023 = _lex_param_1."!make"($P5022)
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<{ }>" :subid("cuid_363_1367388600.55005") :anon :lex :outer("cuid_505_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3282
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_764 
.annotate 'line', 3283
    nqp_get_sc_object $P5001, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 34
    nqp_get_sc_object $P5002, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 12
.annotate 'line', 3284
    nqp_get_sc_object $P5003, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 52
    $P5004 = $P5003."new"("!INTERPOLATE_REGEX" :named("value"))
.annotate 'line', 3285
    unless_null _lex_param_1, fallback6982
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5005
  fallback6982:
    set fb_tmp_764, _lex_param_1
    repr_defined $I5001, fb_tmp_764
    unless $I5001 goto if3305_else6980 
    set $P5006, fb_tmp_764["codeblock"]
    set $P5008, $P5006
    goto if3305_end6981
  if3305_else6980:
    null $P5007
    set $P5008, $P5007
  if3305_end6981:
    unless_null $P5008, vivi_33066983
    nqp_get_sc_object $P5009, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5008, $P5009
  vivi_33066983:
    $P5010 = $P5008."ast"()
    $P5011 = $P5002."new"($P5004, $P5010)
    $P5012 = $P5001."new"($P5011, "subrule" :named("rxtype"), "method" :named("subtype"), _lex_param_1 :named("node"))
    $P5013 = _lex_param_1."!make"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<?{ }>" :subid("cuid_364_1367388600.55005") :anon :lex :outer("cuid_505_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3289
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_765 
    .local pmc fb_tmp_766 
.annotate 'line', 3290
    nqp_get_sc_object $P5001, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 34
    unless_null _lex_param_1, fallback6986
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5002
  fallback6986:
    set fb_tmp_765, _lex_param_1
    repr_defined $I5001, fb_tmp_765
    unless $I5001 goto if3307_else6984 
    set $P5003, fb_tmp_765["codeblock"]
    set $P5005, $P5003
    goto if3307_end6985
  if3307_else6984:
    null $P5004
    set $P5005, $P5004
  if3307_end6985:
    unless_null $P5005, vivi_33086987
    nqp_get_sc_object $P5006, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5005, $P5006
  vivi_33086987:
    $P5007 = $P5005."ast"()
    unless_null _lex_param_1, fallback6990
    nqp_get_sc_object $P5008, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5008
  fallback6990:
    set fb_tmp_766, _lex_param_1
    repr_defined $I5003, fb_tmp_766
    unless $I5003 goto if3309_else6988 
    set $P5009, fb_tmp_766["zw"]
    set $P5011, $P5009
    goto if3309_end6989
  if3309_else6988:
    null $P5010
    set $P5011, $P5010
  if3309_end6989:
    unless_null $P5011, vivi_33106991
    nqp_get_sc_object $P5012, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5011, $P5012
  vivi_33106991:
    set $S5001, $P5011
    iseq $I5002, $S5001, "!"
    $P5013 = $P5001."new"($P5007, "zerowidth" :named("subtype"), $I5002 :named("negate"), "qastnode" :named("rxtype"), _lex_param_1 :named("node"))
    $P5014 = _lex_param_1."!make"($P5013)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<var>" :subid("cuid_365_1367388600.55005") :anon :lex :outer("cuid_505_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3295
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_767 
.annotate 'line', 3296
    nqp_get_sc_object $P5001, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 34
    nqp_get_sc_object $P5002, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 12
.annotate 'line', 3297
    nqp_get_sc_object $P5003, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 52
    $P5004 = $P5003."new"("!INTERPOLATE_REGEX" :named("value"))
.annotate 'line', 3298
    unless_null _lex_param_1, fallback6994
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5005
  fallback6994:
    set fb_tmp_767, _lex_param_1
    repr_defined $I5001, fb_tmp_767
    unless $I5001 goto if3311_else6992 
    set $P5006, fb_tmp_767["var"]
    set $P5008, $P5006
    goto if3311_end6993
  if3311_else6992:
    null $P5007
    set $P5008, $P5007
  if3311_end6993:
    unless_null $P5008, vivi_33126995
    nqp_get_sc_object $P5009, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5008, $P5009
  vivi_33126995:
    $P5010 = $P5008."ast"()
    $P5011 = $P5002."new"($P5004, $P5010)
    $P5012 = $P5001."new"($P5011, "subrule" :named("rxtype"), "method" :named("subtype"), _lex_param_1 :named("node"))
    $P5013 = _lex_param_1."!make"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "codeblock" :subid("cuid_366_1367388600.55005") :anon :lex :outer("cuid_505_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3302
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$block", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_768 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
.annotate 'line', 3303
    unless_null _lex_param_1, fallback6998
    nqp_get_sc_object $P5003, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5003
  fallback6998:
    set fb_tmp_768, _lex_param_1
    repr_defined $I5001, fb_tmp_768
    unless $I5001 goto if3313_else6996 
    set $P5004, fb_tmp_768["block"]
    set $P5006, $P5004
    goto if3313_end6997
  if3313_else6996:
    null $P5005
    set $P5006, $P5005
  if3313_end6997:
    unless_null $P5006, vivi_33146999
    nqp_get_sc_object $P5007, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5006, $P5007
  vivi_33146999:
    $P5008 = $P5006."ast"()
    set $P101, $P5008
.annotate 'line', 3304
    $P101."blocktype"("immediate")
.annotate 'line', 3306
    nqp_get_sc_object $P5009, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 93
.annotate 'line', 3307
    nqp_get_sc_object $P5010, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 3309
    nqp_get_sc_object $P5011, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5012 = $P5011."new"("$/" :named("name"), "contextual" :named("scope"))
.annotate 'line', 3310
    nqp_get_sc_object $P5013, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 82
.annotate 'line', 3311
    nqp_get_sc_object $P5014, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 71
    $P5015 = $P5014."new"(utf8:"$\x{a2}" :named("name"), "contextual" :named("scope"))
    $P5016 = $P5013."new"($P5015, "MATCH" :named("name"), "callmethod" :named("op"))
    $P5017 = $P5010."new"($P5012, $P5016, "bind" :named("op"))
    $P5018 = $P5009."new"($P5017, $P101)
    set $P102, $P5018
.annotate 'line', 3318
    $P5019 = _lex_param_1."!make"($P102)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<name>" :subid("cuid_367_1367388600.55005") :anon :lex :outer("cuid_505_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3321
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5101 = 'cuid_506_1367388600.55005' 
    capture_lex $P5101 
    .const 'Sub' $P5101 = 'cuid_507_1367388600.55005' 
    capture_lex $P5101 
    .lex "$name", $P101 
    .lex "$qast", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_769 
    .local pmc fb_tmp_770 
    .local pmc fb_tmp_771 
    .local pmc fb_tmp_772 
    .local pmc fb_tmp_775 
    .local pmc fb_tmp_776 
    .local pmc fb_tmp_777 
    .local pmc fb_tmp_779 
    .local pmc fb_tmp_780 
    .local pmc fb_tmp_781 
    .local pmc fb_tmp_782 
    .local pmc fb_tmp_783 
    .local pmc fb_tmp_784 
    .local pmc fb_tmp_785 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P102, $P5002
    unless_null _lex_param_1, fallback7002
    nqp_get_sc_object $P5003, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5003
  fallback7002:
    set fb_tmp_769, _lex_param_1
    repr_defined $I5001, fb_tmp_769
    unless $I5001 goto if3315_else7000 
    set $P5004, fb_tmp_769["longname"]
    set $P5006, $P5004
    goto if3315_end7001
  if3315_else7000:
    null $P5005
    set $P5006, $P5005
  if3315_end7001:
    unless_null $P5006, vivi_33167003
    nqp_get_sc_object $P5007, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5006, $P5007
  vivi_33167003:
    set $S5001, $P5006
    box $P5008, $S5001
    set $P101, $P5008
    unless_null _lex_param_1, fallback7008
    nqp_get_sc_object $P5009, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5009
  fallback7008:
    set fb_tmp_770, _lex_param_1
    repr_defined $I5002, fb_tmp_770
    unless $I5002 goto if3318_else7006 
    set $P5010, fb_tmp_770["assertion"]
    set $P5012, $P5010
    goto if3318_end7007
  if3318_else7006:
    null $P5011
    set $P5012, $P5011
  if3318_end7007:
    unless_null $P5012, vivi_33197009
    nqp_get_sc_object $P5013, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5012, $P5013
  vivi_33197009:
    unless $P5012 goto if3317_else7004 
.annotate 'line', 3324
.annotate 'line', 3325
    unless_null _lex_param_1, fallback7014
    nqp_get_sc_object $P5014, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5014
  fallback7014:
    set fb_tmp_772, _lex_param_1
    repr_defined $I5004, fb_tmp_772
    unless $I5004 goto if3321_else7012 
    set $P5015, fb_tmp_772["assertion"]
    set $P5017, $P5015
    goto if3321_end7013
  if3321_else7012:
    null $P5016
    set $P5017, $P5016
  if3321_end7013:
    unless_null $P5017, vivi_33227015
    nqp_get_sc_object $P5018, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5017, $P5018
  vivi_33227015:
    set fb_tmp_771, $P5017
    repr_defined $I5003, fb_tmp_771
    unless $I5003 goto if3320_else7010 
    set $P5019, fb_tmp_771[0]
    set $P5021, $P5019
    goto if3320_end7011
  if3320_else7010:
    null $P5020
    set $P5021, $P5020
  if3320_end7011:
    unless_null $P5021, vivi_33237016
    nqp_get_sc_object $P5022, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5021, $P5022
  vivi_33237016:
    $P5023 = $P5021."ast"()
    set $P102, $P5023
.annotate 'line', 3326
    nqp_decontainerize $P5024, _lex_param_0
    $P5025 = $P5024."subrule_alias"($P102, $P101)
    goto if3317_end7005
  if3317_else7004:
    set $S5002, $P101
    iseq $I5005, $S5002, "sym"
    unless $I5005 goto if3324_else7017 
    .const 'Sub' $P5026 = 'cuid_506_1367388600.55005' 
    capture_lex $P5026
    $P5027 = $P5026()
    set $P5099, $P5027
    goto if3324_end7018
  if3324_else7017:
.annotate 'line', 3337
.annotate 'line', 3338
    nqp_get_sc_object $P5028, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 34
.annotate 'line', 3340
    nqp_get_sc_object $P5029, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 12
    nqp_get_sc_object $P5030, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 52
    $P5031 = $P5030."new"($P101 :named("value"))
    $P5032 = $P5029."new"($P5031)
    $P5033 = $P5028."new"($P5032, "subrule" :named("rxtype"), "capture" :named("subtype"), _lex_param_1 :named("node"), $P101 :named("name"))
    set $P102, $P5033
    unless_null _lex_param_1, fallback7033
    nqp_get_sc_object $P5034, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5034
  fallback7033:
    set fb_tmp_775, _lex_param_1
    repr_defined $I5006, fb_tmp_775
    unless $I5006 goto if3332_else7031 
    set $P5035, fb_tmp_775["arglist"]
    set $P5037, $P5035
    goto if3332_end7032
  if3332_else7031:
    null $P5036
    set $P5037, $P5036
  if3332_end7032:
    unless_null $P5037, vivi_33337034
    nqp_get_sc_object $P5038, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5037, $P5038
  vivi_33337034:
    unless $P5037 goto if3331_else7029 
.annotate 'line', 3341
.annotate 'line', 3342
    unless_null _lex_param_1, fallback7039
    nqp_get_sc_object $P5042, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5042
  fallback7039:
    set fb_tmp_777, _lex_param_1
    repr_defined $I5008, fb_tmp_777
    unless $I5008 goto if3335_else7037 
    set $P5043, fb_tmp_777["arglist"]
    set $P5045, $P5043
    goto if3335_end7038
  if3335_else7037:
    null $P5044
    set $P5045, $P5044
  if3335_end7038:
    unless_null $P5045, vivi_33367040
    nqp_get_sc_object $P5046, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5045, $P5046
  vivi_33367040:
    set fb_tmp_776, $P5045
    repr_defined $I5007, fb_tmp_776
    unless $I5007 goto if3334_else7035 
    set $P5047, fb_tmp_776[0]
    set $P5049, $P5047
    goto if3334_end7036
  if3334_else7035:
    null $P5048
    set $P5049, $P5048
  if3334_end7036:
    unless_null $P5049, vivi_33377041
    nqp_get_sc_object $P5050, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5049, $P5050
  vivi_33377041:
    $P5051 = $P5049."ast"()
    $P5052 = $P5051."list"()
    set $P5039, $P5052
    iter $P5041, $P5052
  for_next7045:
    unless $P5041, for_done7047
    shift $P5054, $P5041
  for_redo7046:
    .const 'Sub' $P5053 = 'cuid_507_1367388600.55005' 
    capture_lex $P5053
    $P5039 = $P5053($P5054)
    goto for_next7045
  for_done7047:
    set $P5098, $P5039
    goto if3331_end7030
  if3331_else7029:
    unless_null _lex_param_1, fallback7052
    nqp_get_sc_object $P5055, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5055
  fallback7052:
    set fb_tmp_779, _lex_param_1
    repr_defined $I5009, fb_tmp_779
    unless $I5009 goto if3341_else7050 
    set $P5056, fb_tmp_779["nibbler"]
    set $P5058, $P5056
    goto if3341_end7051
  if3341_else7050:
    null $P5057
    set $P5058, $P5057
  if3341_end7051:
    unless_null $P5058, vivi_33427053
    nqp_get_sc_object $P5059, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5058, $P5059
  vivi_33427053:
    set $P5097, $P5058
    unless $P5058 goto if3340_end7049 
.annotate 'line', 3344
    set $S5003, $P101
    iseq $I5010, $S5003, "after"
    unless $I5010 goto if3343_else7054 
.annotate 'line', 3346
    set fb_tmp_780, $P102
    repr_defined $I5011, fb_tmp_780
    unless $I5011 goto if3344_else7056 
    set $P5060, fb_tmp_780[0]
    set $P5062, $P5060
    goto if3344_end7057
  if3344_else7056:
    null $P5061
    set $P5062, $P5061
  if3344_end7057:
    unless_null $P5062, vivi_33457058
    nqp_get_sc_object $P5063, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5062, $P5063
  vivi_33457058:
    nqp_decontainerize $P5064, _lex_param_0
    nqp_decontainerize $P5065, _lex_param_0
    unless_null _lex_param_1, fallback7063
    nqp_get_sc_object $P5066, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5066
  fallback7063:
    set fb_tmp_782, _lex_param_1
    repr_defined $I5013, fb_tmp_782
    unless $I5013 goto if3347_else7061 
    set $P5067, fb_tmp_782["nibbler"]
    set $P5069, $P5067
    goto if3347_end7062
  if3347_else7061:
    null $P5068
    set $P5069, $P5068
  if3347_end7062:
    unless_null $P5069, vivi_33487064
    nqp_get_sc_object $P5070, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5069, $P5070
  vivi_33487064:
    set fb_tmp_781, $P5069
    repr_defined $I5012, fb_tmp_781
    unless $I5012 goto if3346_else7059 
    set $P5071, fb_tmp_781[0]
    set $P5073, $P5071
    goto if3346_end7060
  if3346_else7059:
    null $P5072
    set $P5073, $P5072
  if3346_end7060:
    unless_null $P5073, vivi_33497065
    nqp_get_sc_object $P5074, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5073, $P5074
  vivi_33497065:
    $P5075 = $P5073."ast"()
    $P5076 = $P5065."flip_ast"($P5075)
    $P5077 = $P5064."qbuildsub"($P5076, 1 :named("anon"), 1 :named("addself"))
    $P5078 = $P5062."push"($P5077)
    set $P5096, $P5078
    goto if3343_end7055
  if3343_else7054:
.annotate 'line', 3347
    set fb_tmp_783, $P102
    repr_defined $I5014, fb_tmp_783
    unless $I5014 goto if3350_else7066 
    set $P5079, fb_tmp_783[0]
    set $P5081, $P5079
    goto if3350_end7067
  if3350_else7066:
    null $P5080
    set $P5081, $P5080
  if3350_end7067:
    unless_null $P5081, vivi_33517068
    nqp_get_sc_object $P5082, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5081, $P5082
  vivi_33517068:
    nqp_decontainerize $P5083, _lex_param_0
    unless_null _lex_param_1, fallback7073
    nqp_get_sc_object $P5084, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5084
  fallback7073:
    set fb_tmp_785, _lex_param_1
    repr_defined $I5016, fb_tmp_785
    unless $I5016 goto if3353_else7071 
    set $P5085, fb_tmp_785["nibbler"]
    set $P5087, $P5085
    goto if3353_end7072
  if3353_else7071:
    null $P5086
    set $P5087, $P5086
  if3353_end7072:
    unless_null $P5087, vivi_33547074
    nqp_get_sc_object $P5088, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5087, $P5088
  vivi_33547074:
    set fb_tmp_784, $P5087
    repr_defined $I5015, fb_tmp_784
    unless $I5015 goto if3352_else7069 
    set $P5089, fb_tmp_784[0]
    set $P5091, $P5089
    goto if3352_end7070
  if3352_else7069:
    null $P5090
    set $P5091, $P5090
  if3352_end7070:
    unless_null $P5091, vivi_33557075
    nqp_get_sc_object $P5092, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5091, $P5092
  vivi_33557075:
    $P5093 = $P5091."ast"()
    $P5094 = $P5083."qbuildsub"($P5093, 1 :named("anon"), 1 :named("addself"))
    $P5095 = $P5081."push"($P5094)
    set $P5096, $P5095
  if3343_end7055:
    set $P5097, $P5096
  if3340_end7049:
    set $P5098, $P5097
  if3331_end7030:
    set $P5099, $P5098
  if3324_end7018:
  if3317_end7005:
.annotate 'line', 3350
    $P5100 = _lex_param_1."!make"($P102)
    .return ($P5100) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_506_1367388600.55005") :anon :lex :outer("cuid_367_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3328
    .lex "$fullrxname", $S101 
    .lex "$loc", $I101 
    .lex "$rxname", $S102 
    .local pmc fb_tmp_773 
    .local pmc fb_tmp_774 
    .local pmc pkg_viv_tmp_49 
    set $S101, ""
    set $I101, 0
    set $S102, ""
    find_dynamic_lex $P5001, "%*RX"
    unless_null $P5001, fallback7021
    nqp_get_sc_object $P5003, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_49, $P5002
    set fb_tmp_774, pkg_viv_tmp_49
    repr_defined $I5002, fb_tmp_774
    unless $I5002 goto if3326_else7022 
    set $P5004, fb_tmp_774["%RX"]
    set $P5006, $P5004
    goto if3326_end7023
  if3326_else7022:
    null $P5005
    set $P5006, $P5005
  if3326_end7023:
    unless_null $P5006, vivi_33277024
    new $P5007, 'Hash'
    set pkg_viv_tmp_49["%RX"], $P5007
    set $P5006, $P5007
  vivi_33277024:
    unless_null $P5006, vivi_33287025
    die "Contextual %*RX not found"
    box $P5008, "Contextual %*RX not found"
    set $P5006, $P5008
  vivi_33287025:
    set $P5001, $P5006
  fallback7021:
    set fb_tmp_773, $P5001
    repr_defined $I5001, fb_tmp_773
    unless $I5001 goto if3325_else7019 
    set $P5009, fb_tmp_773["name"]
    set $P5011, $P5009
    goto if3325_end7020
  if3325_else7019:
    null $P5010
    set $P5011, $P5010
  if3325_end7020:
    unless_null $P5011, vivi_33297026
    nqp_get_sc_object $P5012, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5011, $P5012
  vivi_33297026:
    set $S5001, $P5011
    set $S101, $S5001
    index $I5003, $S101, ":sym<", 0
    set $I101, $I5003
    set $N5001, $I101
    set $N5002, 0
    islt $I5004, $N5001, $N5002
    unless $I5004 goto if3330_end7028 
    index $I5005, $S101, utf8:":sym\x{ab}", 0
    set $I101, $I5005
  if3330_end7028:
    set $N5004, $I101
    set $N5005, 5
    add $N5003, $N5004, $N5005
    set $I5006, $N5003
    length $I5007, $S101
    set $N5008, $I5007
    set $N5009, $I101
    sub $N5007, $N5008, $N5009
    set $N5010, 6
    sub $N5006, $N5007, $N5010
    set $I5008, $N5006
    substr $S5002, $S101, $I5006, $I5008
    set $S102, $S5002
.annotate 'line', 3334
    nqp_get_sc_object $P5013, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 34
    find_lex $P5014, "$/"
.annotate 'line', 3335
    nqp_get_sc_object $P5015, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108", 34
    find_lex $P5016, "$/"
    $P5017 = $P5015."new"($S102, "literal" :named("rxtype"), $P5016 :named("node"))
    $P5018 = $P5013."new"($P5017, "sym" :named("name"), "subcapture" :named("rxtype"), $P5014 :named("node"))
    store_lex "$qast", $P5018
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_507_1367388600.55005") :anon :lex :outer("cuid_367_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3342
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_778 
    find_lex $P5001, "$qast"
    set fb_tmp_778, $P5001
    repr_defined $I5001, fb_tmp_778
    unless $I5001 goto if3338_else7042 
    set $P5002, fb_tmp_778[0]
    set $P5004, $P5002
    goto if3338_end7043
  if3338_else7042:
    null $P5003
    set $P5004, $P5003
  if3338_end7043:
    unless_null $P5004, vivi_33397044
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_33397044:
    $P5006 = $P5004."push"(_lex_param_0)
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "arg" :subid("cuid_368_1367388600.55005") :anon :lex :outer("cuid_505_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3353
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_786 
.annotate 'line', 3354
    unless_null _lex_param_1, fallback7078
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set _lex_param_1, $P5001
  fallback7078:
    set fb_tmp_786, _lex_param_1
    repr_defined $I5001, fb_tmp_786
    unless $I5001 goto if3356_else7076 
    set $P5002, fb_tmp_786["quote_EXPR"]
    set $P5004, $P5002
    goto if3356_end7077
  if3356_else7076:
    null $P5003
    set $P5004, $P5003
  if3356_end7077:
    unless_null $P5004, vivi_33577079
    nqp_get_sc_object $P5005, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5004, $P5005
  vivi_33577079:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "create_regex_code_object" :subid("cuid_369_1367388600.55005") :anon :lex :outer("cuid_505_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3357
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$code", $P101 
    .lex "self", _lex_param_0 
    .lex "$block", _lex_param_1 
    .local pmc fb_tmp_787 
    .local pmc fb_tmp_788 
    .local pmc pkg_viv_tmp_50 
    .local pmc fb_tmp_789 
    .local pmc fb_tmp_790 
    .local pmc pkg_viv_tmp_51 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P101, $P5001
.annotate 'line', 3358
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback7080
    nqp_get_sc_object $P5004, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5003, $P5004
    set fb_tmp_787, $P5003
    repr_defined $I5001, fb_tmp_787
    unless $I5001 goto if3358_else7081 
    set $P5005, fb_tmp_787["$W"]
    set $P5007, $P5005
    goto if3358_end7082
  if3358_else7081:
    null $P5006
    set $P5007, $P5006
  if3358_end7082:
    unless_null $P5007, vivi_33597083
    nqp_get_sc_object $P5008, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5007, $P5008
  vivi_33597083:
    unless_null $P5007, vivi_33607084
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_33607084:
    set $P5002, $P5007
  fallback7080:
    $P5010 = $P5002."create_code"(_lex_param_1, "", 0, "NQPRegex" :named("code_type_name"))
    set $P101, $P5010
    find_dynamic_lex $P5011, "%*RX"
    unless_null $P5011, fallback7087
    nqp_get_sc_object $P5013, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5012, $P5013
    set pkg_viv_tmp_50, $P5012
    set fb_tmp_788, pkg_viv_tmp_50
    repr_defined $I5003, fb_tmp_788
    unless $I5003 goto if3362_else7088 
    set $P5014, fb_tmp_788["%RX"]
    set $P5016, $P5014
    goto if3362_end7089
  if3362_else7088:
    null $P5015
    set $P5016, $P5015
  if3362_end7089:
    unless_null $P5016, vivi_33637090
    new $P5017, 'Hash'
    set pkg_viv_tmp_50["%RX"], $P5017
    set $P5016, $P5017
  vivi_33637090:
    unless_null $P5016, vivi_33647091
    die "Contextual %*RX not found"
    box $P5018, "Contextual %*RX not found"
    set $P5016, $P5018
  vivi_33647091:
    set $P5011, $P5016
  fallback7087:
    exists $I5002, $P5011["code"]
    unless $I5002 goto if3361_end7086 
.annotate 'line', 3359
.annotate 'line', 3360
    find_dynamic_lex $P5019, "%*RX"
    unless_null $P5019, fallback7094
    nqp_get_sc_object $P5021, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    get_who $P5020, $P5021
    set pkg_viv_tmp_51, $P5020
    set fb_tmp_790, pkg_viv_tmp_51
    repr_defined $I5005, fb_tmp_790
    unless $I5005 goto if3366_else7095 
    set $P5022, fb_tmp_790["%RX"]
    set $P5024, $P5022
    goto if3366_end7096
  if3366_else7095:
    null $P5023
    set $P5024, $P5023
  if3366_end7096:
    unless_null $P5024, vivi_33677097
    new $P5025, 'Hash'
    set pkg_viv_tmp_51["%RX"], $P5025
    set $P5024, $P5025
  vivi_33677097:
    unless_null $P5024, vivi_33687098
    die "Contextual %*RX not found"
    box $P5026, "Contextual %*RX not found"
    set $P5024, $P5026
  vivi_33687098:
    set $P5019, $P5024
  fallback7094:
    set fb_tmp_789, $P5019
    repr_defined $I5004, fb_tmp_789
    unless $I5004 goto if3365_else7092 
    set $P5027, fb_tmp_789["code"]
    set $P5029, $P5027
    goto if3365_end7093
  if3365_else7092:
    null $P5028
    set $P5029, $P5028
  if3365_end7093:
    unless_null $P5029, vivi_33697099
    nqp_get_sc_object $P5030, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    set $P5029, $P5030
  vivi_33697099:
    $P5031 = $P5029."ADD_NESTED_CODE"($P101)
  if3361_end7086:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "store_regex_nfa" :subid("cuid_370_1367388600.55005") :anon :lex :outer("cuid_505_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3365
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$code_obj", _lex_param_1 
    .lex "$block", _lex_param_2 
    .lex "$nfa", _lex_param_3 
.annotate 'line', 3366
    $P5001 = _lex_param_3."save"()
    $P5002 = _lex_param_1."SET_NFA"($P5001)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "store_regex_caps" :subid("cuid_371_1367388600.55005") :anon :lex :outer("cuid_505_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3369
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$code_obj", _lex_param_1 
    .lex "$block", _lex_param_2 
    .lex "%caps", _lex_param_3 
.annotate 'line', 3370
    $P5001 = _lex_param_1."SET_CAPS"(_lex_param_3)
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "store_regex_alt_nfa" :subid("cuid_372_1367388600.55005") :anon :lex :outer("cuid_505_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3373
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 
    .const 'Sub' $P5008 = 'cuid_508_1367388600.55005' 
    capture_lex $P5008 
    .lex "@saved", $P101 
    .lex "self", _lex_param_0 
    .lex "$code_obj", _lex_param_1 
    .lex "$block", _lex_param_2 
    .lex "$key", _lex_param_3 
    .lex "@alternatives", _lex_param_4 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    set $P5002, _lex_param_4
    iter $P5004, _lex_param_4
  for_next7100:
    unless $P5004, for_done7102
    shift $P5006, $P5004
  for_redo7101:
    .const 'Sub' $P5005 = 'cuid_508_1367388600.55005' 
    capture_lex $P5005
    $P5002 = $P5005($P5006)
    goto for_next7100
  for_done7102:
.annotate 'line', 3378
    $P5007 = _lex_param_1."SET_ALT_NFA"(_lex_param_3, $P101)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_508_1367388600.55005") :anon :lex :outer("cuid_372_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3375
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 3376
    find_lex $P5001, "@saved"
    $P5002 = _lex_param_0."save"(1 :named("non_empty"))
    $P5003 = $P5001."push"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_509_1367388600.55005") :anon :lex :outer("cuid_374_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3383
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    nqp_get_sc_object $P5001, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205", 26
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_511_1367388600.55005") :load :init
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .const 'Sub' $P5001 = 'cuid_510_1367388600.55005' 
    capture_lex $P5001 
    .local pmc cur_sc 
    .local pmc conflicts 
    nqp_dynop_setup 
    nqp_bigint_setup 
    getinterp $P5001
    get_class $P5002, "LexPad"
    get_class $P5003, "NQPLexPad"
    $P5004 = $P5001."hll_map"($P5002, $P5003)
    load_bytecode "ModuleLoader.pbc"
    .const 'Sub' $P5001 = "cuid_374_1367388600.55005" 
    get_hll_global $P5002, "ModuleLoader"
    $P5003 = $P5002."load_setting"("NQPCORE")
    $P5004 = $P5001."set_outer_ctx"($P5003)
    load_bytecode "ModuleLoader.pbc"
    get_hll_global $P5001, "ModuleLoader"
    $P5001."load_module"("NQPP6QRegex")
    load_bytecode "ModuleLoader.pbc"
    get_hll_global $P5001, "ModuleLoader"
    $P5001."load_module"("NQPP6QRegex")
    load_bytecode "ModuleLoader.pbc"
    get_hll_global $P5001, "ModuleLoader"
    $P5001."load_module"("QAST")
    nqp_create_sc $P5001, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747"
    set cur_sc, $P5001
    $P5002 = cur_sc."set_description"("src/stage2/gen/NQP.nqp")
    new $P5003, 'ResizablePMCArray'
    set conflicts, $P5003
    new $P5004, 'ResizableStringArray'
    null $S5001
    push $P5004, $S5001
    push $P5004, "P6opaque"
    push $P5004, "QAST"
    push $P5004, "QRegex"
    push $P5004, "NQPCursorRole"
    push $P5004, "8FFA7946C43E61F88541F98801326AC6461610E9-1367388560.19962"
    push $P5004, "src/stage2/QRegex.nqp"
    push $P5004, "NQPMatch"
    push $P5004, "NQPCursor"
    push $P5004, "NQPRegexMethod"
    push $P5004, "NQPRegex"
    push $P5004, "HLL"
    push $P5004, "PIRT"
    push $P5004, "NQP"
    push $P5004, "DEFAULT"
    push $P5004, "CREATE"
    push $P5004, "7F84F8382504A31A75E1C1CEC98F637F8AC4A313-1367388555.16205"
    push $P5004, "src/stage2/NQPCORE.setting"
    push $P5004, "bless"
    push $P5004, "BUILDALL"
    push $P5004, "new"
    push $P5004, "Str"
    push $P5004, "Numeric"
    push $P5004, "Int"
    push $P5004, "defined"
    push $P5004, "ACCEPTS"
    push $P5004, "isa"
    push $P5004, "BUILD"
    push $P5004, "slot_for_object"
    push $P5004, "CAD7667229FADB246BF8592D21A076CDE373EC5D-1367388566.32003"
    push $P5004, "src/stage2/gen/NQPHLL.nqp"
    push $P5004, "add_object"
    push $P5004, "add_root_code_ref"
    push $P5004, "update_root_code_ref"
    push $P5004, "is_precompilation_mode"
    push $P5004, "add_load_dependency_task"
    push $P5004, "add_fixup_task"
    push $P5004, "sc"
    push $P5004, "handle"
    push $P5004, "code_ref_blocks"
    push $P5004, "load_dependency_tasks"
    push $P5004, "fixup_tasks"
    push $P5004, "push_lexpad"
    push $P5004, "pop_lexpad"
    push $P5004, "cur_lexpad"
    push $P5004, "get_legacy_block_list"
    push $P5004, "load_setting"
    push $P5004, "load_module"
    push $P5004, "import"
    push $P5004, "install_package_symbol"
    push $P5004, "install_lexical_symbol"
    push $P5004, "install_package_routine"
    push $P5004, "create_code"
    push $P5004, "pkg_create_mo"
    push $P5004, "pkg_add_attribute"
    push $P5004, "pkg_add_method"
    push $P5004, "set_routine_signature"
    push $P5004, "pkg_set_body_block"
    push $P5004, "pkg_add_parent_or_role"
    push $P5004, "pkg_add_parrot_vtable_handler_mapping"
    push $P5004, "pkg_compose"
    push $P5004, "run_begin_block"
    push $P5004, "libs"
    push $P5004, "add_initializations"
    push $P5004, "cleanup"
    push $P5004, "is_lexical"
    push $P5004, "is_package"
    push $P5004, "is_scope"
    push $P5004, "known_sym"
    push $P5004, "find_sym"
    push $P5004, "$!sc"
    push $P5004, "$!handle"
    push $P5004, "$!precomp_mode"
    push $P5004, "$!num_code_refs"
    push $P5004, "$!code_ref_blocks"
    push $P5004, "@!load_dependency_tasks"
    push $P5004, "@!fixup_tasks"
    push $P5004, "%!addr_to_slot"
    push $P5004, "@!BLOCKS"
    push $P5004, "%!code_objects_to_fix_up"
    push $P5004, "%!code_object_types"
    push $P5004, "%!code_object_fixup_list"
    push $P5004, "%!code_stub_sc_idx"
    push $P5004, "@!clearup_tasks"
    push $P5004, "MATCH"
    push $P5004, "Bool"
    push $P5004, "parse"
    push $P5004, "!INTERPOLATE"
    push $P5004, "!INTERPOLATE_REGEX"
    push $P5004, "orig"
    push $P5004, "target"
    push $P5004, "from"
    push $P5004, "pos"
    push $P5004, "CAPHASH"
    push $P5004, "!cursor_init"
    push $P5004, "!cursor_start_all"
    push $P5004, "!cursor_start_cur"
    push $P5004, "!cursor_start_subcapture"
    push $P5004, "!cursor_capture"
    push $P5004, "!cursor_push_cstack"
    push $P5004, "!cursor_pass"
    push $P5004, "!cursor_fail"
    push $P5004, "!cursor_pos"
    push $P5004, "!cursor_next"
    push $P5004, "!cursor_more"
    push $P5004, "!reduce"
    push $P5004, "!reduce_with_match"
    push $P5004, "!shared"
    push $P5004, "!protoregex"
    push $P5004, "!protoregex_nfa"
    push $P5004, "!protoregex_table"
    push $P5004, "!alt"
    push $P5004, "!alt_nfa"
    push $P5004, "!precompute_nfas"
    push $P5004, "!dba"
    push $P5004, "!highwater"
    push $P5004, "!highexpect"
    push $P5004, "!fresh_highexpect"
    push $P5004, "!set_highexpect"
    push $P5004, "!clear_highwater"
    push $P5004, "!BACKREF"
    push $P5004, "!LITERAL"
    push $P5004, "at"
    push $P5004, "before"
    push $P5004, "after"
    push $P5004, "ws"
    push $P5004, "ww"
    push $P5004, "wb"
    push $P5004, "ident"
    push $P5004, "alpha"
    push $P5004, "alnum"
    push $P5004, "upper"
    push $P5004, "lower"
    push $P5004, "digit"
    push $P5004, "xdigit"
    push $P5004, "space"
    push $P5004, "blank"
    push $P5004, "cntrl"
    push $P5004, "punct"
    push $P5004, "FAILGOAL"
    push $P5004, "throw_unrecog_backslash_seq"
    push $P5004, "termish"
    push $P5004, "term"
    push $P5004, "infix"
    push $P5004, "prefix"
    push $P5004, "postfix"
    push $P5004, "circumfix"
    push $P5004, "postcircumfix"
    push $P5004, "term:sym<circumfix>"
    push $P5004, "infixish"
    push $P5004, "prefixish"
    push $P5004, "postfixish"
    push $P5004, "nullterm"
    push $P5004, "nullterm_alt"
    push $P5004, "nulltermish"
    push $P5004, "quote_delimited"
    push $P5004, "quote_atom"
    push $P5004, "decint"
    push $P5004, "decints"
    push $P5004, "hexint"
    push $P5004, "hexints"
    push $P5004, "octint"
    push $P5004, "octints"
    push $P5004, "binint"
    push $P5004, "binints"
    push $P5004, "integer"
    push $P5004, "dec_number"
    push $P5004, "escale"
    push $P5004, "quote_escape"
    push $P5004, "quote_escape:sym<backslash>"
    push $P5004, "quote_escape:sym<stopper>"
    push $P5004, "quote_escape:sym<bs>"
    push $P5004, "quote_escape:sym<nl>"
    push $P5004, "quote_escape:sym<cr>"
    push $P5004, "quote_escape:sym<tab>"
    push $P5004, "quote_escape:sym<ff>"
    push $P5004, "quote_escape:sym<esc>"
    push $P5004, "quote_escape:sym<hex>"
    push $P5004, "quote_escape:sym<oct>"
    push $P5004, "quote_escape:sym<chr>"
    push $P5004, "quote_escape:sym<0>"
    push $P5004, "quote_escape:sym<misc>"
    push $P5004, "charname"
    push $P5004, "charnames"
    push $P5004, "charspec"
    push $P5004, "O"
    push $P5004, "panic"
    push $P5004, "peek_delimiters"
    push $P5004, "quote_EXPR"
    push $P5004, "quotemod_check"
    push $P5004, "starter"
    push $P5004, "stopper"
    push $P5004, "split_words"
    push $P5004, "EXPR"
    push $P5004, "EXPR_reduce"
    push $P5004, "EXPR_nonassoc"
    push $P5004, "ternary"
    push $P5004, "MARKER"
    push $P5004, "MARKED"
    push $P5004, "LANG"
    push $P5004, "TOP"
    push $P5004, "identifier"
    push $P5004, "name"
    push $P5004, "deflongname"
    push $P5004, "ENDSTMT"
    push $P5004, "unv"
    push $P5004, "pod_comment"
    push $P5004, "comp_unit"
    push $P5004, "statementlist"
    push $P5004, "statement"
    push $P5004, "eat_terminator"
    push $P5004, "xblock"
    push $P5004, "pblock"
    push $P5004, "lambda"
    push $P5004, "block"
    push $P5004, "blockoid"
    push $P5004, "newpad"
    push $P5004, "outerctx"
    push $P5004, "finishpad"
    push $P5004, "you_are_here"
    push $P5004, "terminator"
    push $P5004, "terminator:sym<;>"
    push $P5004, "terminator:sym<}>"
    push $P5004, "statement_control"
    push $P5004, "statement_control:sym<use>"
    push $P5004, "statement_control:sym<if>"
    push $P5004, "statement_control:sym<unless>"
    push $P5004, "statement_control:sym<while>"
    push $P5004, "statement_control:sym<repeat>"
    push $P5004, "statement_control:sym<for>"
    push $P5004, "statement_control:sym<CATCH>"
    push $P5004, "statement_control:sym<CONTROL>"
    push $P5004, "statement_prefix"
    push $P5004, "statement_prefix:sym<BEGIN>"
    push $P5004, "statement_prefix:sym<INIT>"
    push $P5004, "statement_prefix:sym<try>"
    push $P5004, "blorst"
    push $P5004, "statement_mod_cond"
    push $P5004, "statement_mod_cond:sym<if>"
    push $P5004, "statement_mod_cond:sym<unless>"
    push $P5004, "statement_mod_loop"
    push $P5004, "statement_mod_loop:sym<while>"
    push $P5004, "statement_mod_loop:sym<until>"
    push $P5004, "statement_mod_loop:sym<for>"
    push $P5004, "term:sym<fatarrow>"
    push $P5004, "term:sym<colonpair>"
    push $P5004, "term:sym<variable>"
    push $P5004, "term:sym<package_declarator>"
    push $P5004, "term:sym<scope_declarator>"
    push $P5004, "term:sym<routine_declarator>"
    push $P5004, "term:sym<multi_declarator>"
    push $P5004, "term:sym<regex_declarator>"
    push $P5004, "term:sym<statement_prefix>"
    push $P5004, "term:sym<lambda>"
    push $P5004, "fatarrow"
    push $P5004, "colonpair"
    push $P5004, "variable"
    push $P5004, "sigil"
    push $P5004, "twigil"
    push $P5004, "package_declarator"
    push $P5004, "package_declarator:sym<module>"
    push $P5004, "package_declarator:sym<knowhow>"
    push $P5004, "package_declarator:sym<class>"
    push $P5004, "package_declarator:sym<grammar>"
    push $P5004, "package_declarator:sym<role>"
    push $P5004, "package_declarator:sym<native>"
    push $P5004, "package_declarator:sym<stub>"
    push $P5004, "package_def"
    push $P5004, "role_params"
    push $P5004, "scope_declarator"
    push $P5004, "scope_declarator:sym<my>"
    push $P5004, "scope_declarator:sym<our>"
    push $P5004, "scope_declarator:sym<has>"
    push $P5004, "scoped"
    push $P5004, "typename"
    push $P5004, "declarator"
    push $P5004, "variable_declarator"
    push $P5004, "routine_declarator"
    push $P5004, "routine_declarator:sym<sub>"
    push $P5004, "routine_declarator:sym<method>"
    push $P5004, "routine_def"
    push $P5004, "method_def"
    push $P5004, "onlystar"
    push $P5004, "multi_declarator"
    push $P5004, "multi_declarator:sym<multi>"
    push $P5004, "multi_declarator:sym<proto>"
    push $P5004, "multi_declarator:sym<null>"
    push $P5004, "signature"
    push $P5004, "parameter"
    push $P5004, "param_var"
    push $P5004, "named_param"
    push $P5004, "default_value"
    push $P5004, "trait"
    push $P5004, "trait_mod"
    push $P5004, "trait_mod:sym<is>"
    push $P5004, "regex_declarator"
    push $P5004, "dotty"
    push $P5004, "term:sym<self>"
    push $P5004, "term:sym<identifier>"
    push $P5004, "term:sym<name>"
    push $P5004, "term:sym<pir::op>"
    push $P5004, "term:sym<pir::const>"
    push $P5004, "term:sym<nqp::op>"
    push $P5004, "term:sym<nqp::const>"
    push $P5004, "term:sym<onlystar>"
    push $P5004, "args"
    push $P5004, "arglist"
    push $P5004, "term:sym<value>"
    push $P5004, "value"
    push $P5004, "number"
    push $P5004, "quote"
    push $P5004, "quote:sym<apos>"
    push $P5004, "quote:sym<dblq>"
    push $P5004, "quote:sym<q>"
    push $P5004, "quote:sym<qq>"
    push $P5004, "quote:sym<Q>"
    push $P5004, "quote:sym<Q:PIR>"
    push $P5004, "quote:sym</ />"
    push $P5004, "quote_escape:sym<$>"
    push $P5004, "quote_escape:sym<{ }>"
    push $P5004, "circumfix:sym<( )>"
    push $P5004, "circumfix:sym<[ ]>"
    push $P5004, "circumfix:sym<ang>"
    push $P5004, utf8:"circumfix:sym<\x{ab} \x{bb}>"
    push $P5004, "circumfix:sym<{ }>"
    push $P5004, "semilist"
    push $P5004, "infixstopper"
    push $P5004, "postcircumfix:sym<[ ]>"
    push $P5004, "postcircumfix:sym<{ }>"
    push $P5004, "postcircumfix:sym<ang>"
    push $P5004, "postcircumfix:sym<( )>"
    push $P5004, "postfix:sym<.>"
    push $P5004, "prefix:sym<++>"
    push $P5004, "prefix:sym<-->"
    push $P5004, "postfix:sym<++>"
    push $P5004, "postfix:sym<-->"
    push $P5004, "infix:sym<**>"
    push $P5004, "prefix:sym<+>"
    push $P5004, "prefix:sym<~>"
    push $P5004, "prefix:sym<->"
    push $P5004, "prefix:sym<?>"
    push $P5004, "prefix:sym<!>"
    push $P5004, "prefix:sym<|>"
    push $P5004, "infix:sym<*>"
    push $P5004, "infix:sym</>"
    push $P5004, "infix:sym<%>"
    push $P5004, "infix:sym<+&>"
    push $P5004, "infix:sym<+>"
    push $P5004, "infix:sym<->"
    push $P5004, "infix:sym<+|>"
    push $P5004, "infix:sym<+^>"
    push $P5004, "infix:sym<~>"
    push $P5004, "infix:sym<==>"
    push $P5004, "infix:sym<!=>"
    push $P5004, "infix:sym<<=>"
    push $P5004, "infix:sym<>=>"
    push $P5004, "infix:sym<<>"
    push $P5004, "infix:sym<>>"
    push $P5004, "infix:sym<eq>"
    push $P5004, "infix:sym<ne>"
    push $P5004, "infix:sym<le>"
    push $P5004, "infix:sym<ge>"
    push $P5004, "infix:sym<lt>"
    push $P5004, "infix:sym<gt>"
    push $P5004, "infix:sym<=:=>"
    push $P5004, "infix:sym<~~>"
    push $P5004, "infix:sym<&&>"
    push $P5004, "infix:sym<||>"
    push $P5004, "infix:sym<//>"
    push $P5004, "infix:sym<?? !!>"
    push $P5004, "infix:sym<=>"
    push $P5004, "infix:sym<:=>"
    push $P5004, "infix:sym<::=>"
    push $P5004, "infix:sym<,>"
    push $P5004, "prefix:sym<return>"
    push $P5004, "prefix:sym<make>"
    push $P5004, "term:sym<last>"
    push $P5004, "term:sym<next>"
    push $P5004, "term:sym<redo>"
    push $P5004, "smartmatch"
    push $P5004, "$!shared"
    push $P5004, "$!from"
    push $P5004, "$!pos"
    push $P5004, "$!match"
    push $P5004, "$!name"
    push $P5004, "$!bstack"
    push $P5004, "$!cstack"
    push $P5004, "$!regexsub"
    push $P5004, "$!restart"
    push $P5004, "16445D4686A72BC34373CEFACF559476DD012ACF-1367388594.47346"
    push $P5004, "src/stage2/gen/NQPP6QRegex.nqp"
    push $P5004, "obs"
    push $P5004, "throw_unrecognized_metachar"
    push $P5004, "throw_null_pattern"
    push $P5004, "normspace"
    push $P5004, "arg"
    push $P5004, "nibbler"
    push $P5004, "rxstopper"
    push $P5004, "termaltseq"
    push $P5004, "termconjseq"
    push $P5004, "termalt"
    push $P5004, "termconj"
    push $P5004, "quantified_atom"
    push $P5004, "separator"
    push $P5004, "atom"
    push $P5004, "quantifier"
    push $P5004, "quantifier:sym<*>"
    push $P5004, "quantifier:sym<+>"
    push $P5004, "quantifier:sym<?>"
    push $P5004, "quantifier:sym<{N,M}>"
    push $P5004, "quantifier:sym<**>"
    push $P5004, "backmod"
    push $P5004, "metachar"
    push $P5004, "metachar:sym<ws>"
    push $P5004, "metachar:sym<[ ]>"
    push $P5004, "metachar:sym<( )>"
    push $P5004, "metachar:sym<'>"
    push $P5004, "metachar:sym<\">"
    push $P5004, "metachar:sym<.>"
    push $P5004, "metachar:sym<^>"
    push $P5004, "metachar:sym<^^>"
    push $P5004, "metachar:sym<$>"
    push $P5004, "metachar:sym<$$>"
    push $P5004, "metachar:sym<:::>"
    push $P5004, "metachar:sym<::>"
    push $P5004, "metachar:sym<lwb>"
    push $P5004, "metachar:sym<rwb>"
    push $P5004, "metachar:sym<from>"
    push $P5004, "metachar:sym<to>"
    push $P5004, "metachar:sym<bs>"
    push $P5004, "metachar:sym<mod>"
    push $P5004, "metachar:sym<quantifier>"
    push $P5004, "metachar:sym<~>"
    push $P5004, "metachar:sym<{*}>"
    push $P5004, "metachar:sym<assert>"
    push $P5004, "metachar:sym<var>"
    push $P5004, "backslash"
    push $P5004, "backslash:sym<s>"
    push $P5004, "backslash:sym<b>"
    push $P5004, "backslash:sym<e>"
    push $P5004, "backslash:sym<f>"
    push $P5004, "backslash:sym<h>"
    push $P5004, "backslash:sym<r>"
    push $P5004, "backslash:sym<t>"
    push $P5004, "backslash:sym<v>"
    push $P5004, "backslash:sym<o>"
    push $P5004, "backslash:sym<x>"
    push $P5004, "backslash:sym<c>"
    push $P5004, "backslash:sym<A>"
    push $P5004, "backslash:sym<z>"
    push $P5004, "backslash:sym<Z>"
    push $P5004, "backslash:sym<Q>"
    push $P5004, "backslash:sym<unrec>"
    push $P5004, "backslash:sym<misc>"
    push $P5004, "assertion"
    push $P5004, "assertion:sym<?>"
    push $P5004, "assertion:sym<!>"
    push $P5004, "assertion:sym<|>"
    push $P5004, "assertion:sym<method>"
    push $P5004, "assertion:sym<name>"
    push $P5004, "assertion:sym<[>"
    push $P5004, "cclass_elem"
    push $P5004, "mod_internal"
    push $P5004, "mod_ident"
    push $P5004, "mod_ident:sym<ignorecase>"
    push $P5004, "mod_ident:sym<ratchet>"
    push $P5004, "mod_ident:sym<sigspace>"
    push $P5004, "mod_ident:sym<dba>"
    push $P5004, "mod_ident:sym<oops>"
    push $P5004, "metachar:sym<:my>"
    push $P5004, "metachar:sym<{ }>"
    push $P5004, "metachar:sym<nqpvar>"
    push $P5004, "assertion:sym<{ }>"
    push $P5004, "assertion:sym<?{ }>"
    push $P5004, "assertion:sym<var>"
    push $P5004, "codeblock"
    push $P5004, "string_to_int"
    push $P5004, "ints_to_string"
    push $P5004, "CTXSAVE"
    push $P5004, "SET_BLOCK_OUTER_CTX"
    push $P5004, "qbuildsub"
    push $P5004, "alt_nfas"
    push $P5004, "subrule_alias"
    push $P5004, "flip_ast"
    push $P5004, "create_regex_code_object"
    push $P5004, "store_regex_caps"
    push $P5004, "store_regex_nfa"
    push $P5004, "store_regex_alt_nfa"
    push $P5004, "backend"
    push $P5004, "language"
    push $P5004, "compiler"
    push $P5004, "config"
    push $P5004, "autoprint"
    push $P5004, "interactive"
    push $P5004, "interactive_result"
    push $P5004, "interactive_exception"
    push $P5004, "eval"
    push $P5004, "ctxsave"
    push $P5004, "stages"
    push $P5004, "parsegrammar"
    push $P5004, "parseactions"
    push $P5004, "interactive_banner"
    push $P5004, "interactive_prompt"
    push $P5004, "compiler_progname"
    push $P5004, "commandline_options"
    push $P5004, "command_line"
    push $P5004, "command_eval"
    push $P5004, "process_args"
    push $P5004, "evalfiles"
    push $P5004, "exists_stage"
    push $P5004, "compile"
    push $P5004, "start"
    push $P5004, "ast"
    push $P5004, "dumper"
    push $P5004, "usage"
    push $P5004, "version"
    push $P5004, "show-config"
    push $P5004, "verbose-config"
    push $P5004, "nqpevent"
    push $P5004, "removestage"
    push $P5004, "addstage"
    push $P5004, "parse_name"
    push $P5004, "lineof"
    push $P5004, "user-progname"
    push $P5004, "cli-options"
    push $P5004, "cli-arguments"
    push $P5004, "default_backend"
    push $P5004, "@!stages"
    push $P5004, "$!parsegrammar"
    push $P5004, "$!parseactions"
    push $P5004, "@!cmdoptions"
    push $P5004, "$!usage"
    push $P5004, "$!compiler_progname"
    push $P5004, "$!language"
    push $P5004, "%!config"
    push $P5004, "$!user_progname"
    push $P5004, "@!cli-arguments"
    push $P5004, "%!cli-options"
    push $P5004, "$!backend"
    push $P5004, ""
    push $P5004, utf8:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000"
    push $P5004, "alt_nfa__1_1367388602.29743"
    push $P5004, "alt_nfa__2_1367388602.31925"
    push $P5004, utf8:"\n\x{b}\f\r\x{85}\u2028\u2029"
    push $P5004, "alt_nfa__4_1367388602.34405"
    push $P5004, "alt_nfa__3_1367388602.33236"
    push $P5004, "alt_nfa__6_1367388602.45474"
    push $P5004, "alt_nfa__5_1367388602.43877"
    push $P5004, "alt_nfa__7_1367388602.65809"
    push $P5004, "alt_nfa__9_1367388602.68417"
    push $P5004, "alt_nfa__8_1367388602.66579"
    push $P5004, "{"
    push $P5004, "alt_nfa__10_1367388602.72042"
    push $P5004, "alt_nfa__11_1367388602.72809"
    push $P5004, ";"
    push $P5004, "}"
    push $P5004, "sym"
    push $P5004, "else"
    push $P5004, "alt_nfa__12_1367388602.85977"
    push $P5004, "wu"
    push $P5004, "alt_nfa__13_1367388602.88662"
    push $P5004, "alt_nfa__14_1367388602.88711"
    push $P5004, "alt_nfa__15_1367388602.88735"
    push $P5004, "alt_nfa__16_1367388602.95248"
    push $P5004, "cond"
    push $P5004, "alt_nfa__17_1367388603.04605"
    push $P5004, "alt_nfa__18_1367388603.05695"
    push $P5004, "key"
    push $P5004, "val"
    push $P5004, "not"
    push $P5004, "alt_nfa__19_1367388603.20306"
    push $P5004, "desigilname"
    push $P5004, "<"
    push $P5004, "/_!"
    push $P5004, "alt_nfa__20_1367388603.22857"
    push $P5004, "$@%&"
    push $P5004, "*!?"
    push $P5004, "metaclass"
    push $P5004, "repr"
    push $P5004, "export"
    push $P5004, "parent"
    push $P5004, "role"
    push $P5004, "alt_nfa__21_1367388603.56922"
    push $P5004, "alt_nfa__22_1367388603.58791"
    push $P5004, "alt_nfa__23_1367388603.65284"
    push $P5004, "latename"
    push $P5004, "private"
    push $P5004, "alt_nfa__24_1367388603.69841"
    push $P5004, "invocant"
    push $P5004, "alt_nfa__26_1367388603.89126"
    push $P5004, "alt_nfa__25_1367388603.88425"
    push $P5004, "definedness"
    push $P5004, "quant"
    push $P5004, "_DU"
    push $P5004, "alt_nfa__27_1367388603.92396"
    push $P5004, "alt_nfa__28_1367388603.92428"
    push $P5004, "alt_nfa__29_1367388603.92463"
    push $P5004, "/!"
    push $P5004, "alt_nfa__30_1367388603.93839"
    push $P5004, "longname"
    push $P5004, "proto"
    push $P5004, "p6regex"
    push $P5004, "alt_nfa__31_1367388604.08565"
    push $P5004, "alt_nfa__32_1367388604.08657"
    push $P5004, "alt_nfa__33_1367388604.08706"
    push $P5004, "'\""
    push $P5004, "("
    push $P5004, "alt_nfa__34_1367388604.11794"
    push $P5004, "alt_nfa__35_1367388604.11837"
    push $P5004, "op"
    push $P5004, "const"
    push $P5004, "alt_nfa__36_1367388604.21907"
    push $P5004, "alt_nfa__37_1367388604.23148"
    push $P5004, "sign"
    push $P5004, "alt_nfa__38_1367388604.2436"
    push $P5004, "'"
    push $P5004, "\""
    push $P5004, "$"
    push $P5004, utf8:"\x{ab}"
    push $P5004, "OPER"
    push $P5004, ">"
    push $P5004, "}/"
    push $P5004, "var"
    push $P5004, "alt_nfa__39_1367388605.34778"
    push $P5004, "alt_nfa__40_1367388605.37939"
    push $P5004, "alt_nfa__41_1367388605.3966"
    push $P5004, "zw"
    push $P5004, "?!"
    push $P5004, "alt_nfa__42_1367388605.44003"
    push $P5004, "$@"
    push $P5004, "__6MODEL_CORE__"
    push $P5004, "GLOBALish"
    push $P5004, "EXPORT"
    push $P5004, "EB4CFE3B370DC9D11C7FABA2BC19713A2F558480-1367388550.21637"
    push $P5004, "src/stage2/gen/nqp-mo.nqp"
    push $P5004, "NQP::World"
    push $P5004, "NQP::Grammar"
    push $P5004, "alt_nfa__1_1367388566.47589"
    push $P5004, "alt_nfa__2_1367388566.51825"
    push $P5004, "alt_nfa__3_1367388566.61209"
    push $P5004, "alt_nfa__4_1367388566.61276"
    push $P5004, "alt_nfa__5_1367388566.63983"
    push $P5004, "alt_nfa__6_1367388566.74481"
    push $P5004, "alt_nfa__7_1367388566.76308"
    push $P5004, "alt_nfa__8_1367388566.81512"
    push $P5004, "alt_nfa__9_1367388566.86965"
    push $P5004, "shared"
    push $P5004, "match"
    push $P5004, "bstack"
    push $P5004, "cstack"
    push $P5004, "regexsub"
    push $P5004, "restart"
    push $P5004, "NQP::Regex"
    push $P5004, "alt_nfa__1_1367388594.66098"
    push $P5004, "alt_nfa__2_1367388594.66922"
    push $P5004, "alt_nfa__3_1367388594.70242"
    push $P5004, "alt_nfa__4_1367388594.8146"
    push $P5004, "alt_nfa__5_1367388594.84029"
    push $P5004, "alt_nfa__6_1367388594.93467"
    push $P5004, "alt_nfa__7_1367388594.97169"
    push $P5004, "alt_nfa__8_1367388594.99956"
    push $P5004, "alt_nfa__9_1367388595.20845"
    push $P5004, "alt_nfa__10_1367388595.29965"
    push $P5004, "alt_nfa__11_1367388595.30832"
    push $P5004, "alt_nfa__12_1367388595.41314"
    push $P5004, "alt_nfa__13_1367388595.48764"
    push $P5004, "alt_nfa__14_1367388595.50225"
    push $P5004, "alt_nfa__15_1367388595.58652"
    push $P5004, "alt_nfa__16_1367388595.5999"
    push $P5004, "alt_nfa__17_1367388595.64171"
    push $P5004, "alt_nfa__18_1367388595.6532"
    push $P5004, "alt_nfa__19_1367388595.82183"
    push $P5004, "alt_nfa__20_1367388595.82252"
    push $P5004, "alt_nfa__21_1367388595.82285"
    push $P5004, "alt_nfa__23_1367388595.85933"
    push $P5004, "alt_nfa__24_1367388595.85983"
    push $P5004, "alt_nfa__22_1367388595.83184"
    push $P5004, "NQP::Actions"
    push $P5004, "NQP::RegexActions"
    push $P5004, "NQP::Compiler"
    push $P5004, "CompileTimeValue"
    push $P5004, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1367388557.72108"
    push $P5004, "src/stage2/QASTNode.nqp"
    push $P5004, "SpecialArg"
    push $P5004, "Node"
    push $P5004, "Regex"
    push $P5004, "IVal"
    push $P5004, "NVal"
    push $P5004, "SVal"
    push $P5004, "BVal"
    push $P5004, "WVal"
    push $P5004, "Want"
    push $P5004, "Var"
    push $P5004, "VarWithFallback"
    push $P5004, "Op"
    push $P5004, "VM"
    push $P5004, "Stmts"
    push $P5004, "Stmt"
    push $P5004, "Block"
    push $P5004, "Unquote"
    push $P5004, "CompUnit"
    push $P5004, "InlinePlaceholder"
    push $P5004, "Operations"
    push $P5004, "1F55543DEC645FFA20AB3FBDCAAD529102443B83-1367388573.57212"
    push $P5004, "src/stage2/QAST.nqp"
    push $P5004, "Compiler"
    push $P5004, "NFA"
    push $P5004, "P6Regex"
    push $P5004, "Grammar"
    push $P5004, "Actions"
    push $P5004, "Backend"
    push $P5004, "CommandLine"
    push $P5004, "World"
    push $P5004, "CallResult"
    push $P5004, "Sub"
    push $P5004, "Ops"
    push $P5004, "Label"
    push $P5004, "RegexActions"
    push $P5004, "Ee"
    push $P5004, "01"
    push $P5004, "01234567"
    push $P5004, "0123456789abcdefABCDEF"
    push $P5004, "?@ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    push $P5004, "dDnNsSwW"
    push $P5004, "bB"
    push $P5004, "eE"
    push $P5004, "fF"
    push $P5004, "hH"
    push $P5004, "rR"
    push $P5004, "tT"
    push $P5004, "vV"
    push $P5004, "oO"
    push $P5004, "xX"
    push $P5004, "cC"
    push $P5004, "&|~"
    .const 'Sub' $P5005 = 'cuid_510_1367388600.55005' 
    capture_lex $P5005
    $P5006 = $P5005()
    nqp_deserialize_sc "", cur_sc, $P5004, $P5006, conflicts
    unless conflicts goto if3371_end7106 
    die "Repossession conflicts occurred during deserialization"
  if3371_end7106:
    .const "LexInfo" $P5001 = "cuid_374_1367388600.55005"
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    $P5001."set_static_lexpad_value"("GLOBALish", $P5002)
    .const "LexInfo" $P5003 = "cuid_374_1367388600.55005"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_374_1367388600.55005"
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 0
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_374_1367388600.55005"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_374_1367388600.55005"
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 1
    $P5001."set_static_lexpad_value"("EXPORT", $P5002)
    .const "LexInfo" $P5003 = "cuid_374_1367388600.55005"
    $P5004 = $P5003."finish_static_lexpad"()
    .const 'Sub' $P5001 = "cuid_1_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 4
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_2_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 5
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_3_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 6
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_4_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 7
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_5_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 8
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_6_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 9
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_7_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 10
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_8_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 11
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_9_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 12
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_10_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 13
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_11_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 14
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_12_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 15
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_13_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 16
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_14_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 17
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_15_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 18
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_16_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 19
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_17_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 20
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_18_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 21
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_19_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 22
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_20_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 23
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_21_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 24
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_22_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 25
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_23_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 26
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_24_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 27
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_25_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 28
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_26_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 29
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_27_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 30
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_28_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 31
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_29_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 32
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_30_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 33
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_31_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 34
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_32_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 35
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_33_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 36
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_34_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 37
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_377_1367388600.55005"
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 3
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_377_1367388600.55005"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_377_1367388600.55005"
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 3
    $P5001."set_static_lexpad_value"("$?CLASS", $P5002)
    .const "LexInfo" $P5003 = "cuid_377_1367388600.55005"
    $P5004 = $P5003."finish_static_lexpad"()
    .const 'Sub' $P5001 = "cuid_35_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 39
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_36_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 40
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_37_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 41
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_38_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 42
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_39_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 43
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_40_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 44
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_41_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 45
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_42_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 46
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_43_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 47
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_44_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 48
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_45_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 49
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_46_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 50
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_47_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 51
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_48_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 52
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_49_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 53
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_50_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 54
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_51_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 55
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_52_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 56
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_53_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 57
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_54_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 58
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_55_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 59
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_56_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 60
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_57_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 61
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_58_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 62
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_59_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 63
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_60_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 64
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_61_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 65
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_62_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 66
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_63_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 67
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_64_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 68
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_65_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 69
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_66_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 70
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_67_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 71
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_68_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 72
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_69_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 73
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_70_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 74
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_71_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 75
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_72_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 76
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_73_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 77
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_74_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 78
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_75_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 79
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_76_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 80
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_77_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 81
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_78_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 82
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_79_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 83
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_80_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 84
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_81_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 85
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_82_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 86
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_83_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 87
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_84_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 88
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_85_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 89
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_86_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 90
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_87_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 91
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_88_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 92
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_89_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 93
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_90_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 94
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_91_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 95
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_92_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 96
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_93_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 97
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_94_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 98
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_95_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 99
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_96_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 100
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_97_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 101
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_98_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 102
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_99_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 103
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_100_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 104
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_101_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 105
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_102_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 106
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_103_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 107
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_104_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 108
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_105_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 109
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_106_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 110
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_107_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 111
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_108_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 112
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_109_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 113
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_110_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 114
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_111_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 115
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_112_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 116
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_113_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 117
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_114_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 118
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_115_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 119
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_116_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 120
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_117_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 121
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_118_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 122
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_119_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 123
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_120_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 124
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_121_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 125
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_122_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 126
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_123_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 127
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_124_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 128
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_125_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 129
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_126_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 130
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_127_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 131
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_128_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 132
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_129_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 133
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_130_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 134
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_131_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 135
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_132_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 136
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_133_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 137
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_134_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 138
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_135_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 139
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_136_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 140
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_137_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 141
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_138_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 142
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_139_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 143
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_140_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 144
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_141_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 145
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_142_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 146
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_143_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 147
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_144_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 148
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_145_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 149
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_146_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 150
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_147_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 151
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_148_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 152
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_149_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 153
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_150_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 154
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_151_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 155
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_152_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 156
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_153_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 157
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_154_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 158
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_155_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 159
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_156_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 160
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_157_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 161
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_158_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 162
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_159_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 163
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_160_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 164
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_161_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 165
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_162_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 166
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_163_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 167
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_164_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 168
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_165_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 169
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_166_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 170
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_167_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 171
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_168_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 172
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_169_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 173
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_170_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 174
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_171_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 175
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_172_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 176
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_173_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 177
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_174_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 178
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_175_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 179
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_176_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 180
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_177_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 181
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_178_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 182
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_179_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 183
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_180_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 184
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_181_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 185
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_182_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 186
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_183_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 187
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_184_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 188
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_185_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 189
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_186_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 190
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_187_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 191
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_188_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 192
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_189_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 193
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_190_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 194
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_191_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 195
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_192_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 196
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_193_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 197
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_194_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 198
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_195_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 199
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_196_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 200
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_197_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 201
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_198_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 202
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_199_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 203
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_200_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 204
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_201_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 205
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_202_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 206
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_203_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 207
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_204_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 208
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_205_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 209
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_206_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 210
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_207_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 211
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_208_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 212
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_209_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 213
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_210_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 214
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_211_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 215
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_212_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 216
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_213_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 217
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_214_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 218
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_215_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 219
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_216_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 220
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_217_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 221
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_218_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 222
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_219_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 223
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_220_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 224
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_221_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 225
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_222_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 226
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_223_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 227
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_224_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 228
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_225_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 229
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_226_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 230
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_227_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 231
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_398_1367388600.55005"
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 38
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_398_1367388600.55005"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_398_1367388600.55005"
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 38
    $P5001."set_static_lexpad_value"("$?CLASS", $P5002)
    .const "LexInfo" $P5003 = "cuid_398_1367388600.55005"
    $P5004 = $P5003."finish_static_lexpad"()
    .const 'Sub' $P5001 = "cuid_228_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 233
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_229_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 234
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_230_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 235
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_231_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 236
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_232_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 237
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_233_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 238
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_234_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 239
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_235_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 240
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_236_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 241
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_237_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 242
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_238_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 243
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_239_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 244
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_240_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 245
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_241_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 246
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_242_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 247
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_243_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 248
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_244_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 249
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_245_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 250
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_246_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 251
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_247_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 252
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_417_1367388600.55005"
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 232
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_417_1367388600.55005"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_417_1367388600.55005"
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 232
    $P5001."set_static_lexpad_value"("$?CLASS", $P5002)
    .const "LexInfo" $P5003 = "cuid_417_1367388600.55005"
    $P5004 = $P5003."finish_static_lexpad"()
    .const 'Sub' $P5001 = "cuid_248_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 254
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_249_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 255
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_250_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 256
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_251_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 257
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_252_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 258
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_253_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 259
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_254_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 260
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_255_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 261
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_256_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 262
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_257_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 263
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_258_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 264
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_259_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 265
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_260_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 266
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_261_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 267
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_262_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 268
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_263_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 269
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_264_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 270
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_265_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 271
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_266_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 272
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_267_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 273
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_268_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 274
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_269_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 275
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_270_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 276
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_271_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 277
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_272_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 278
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_273_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 279
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_274_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 280
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_275_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 281
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_276_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 282
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_277_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 283
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_278_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 284
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_279_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 285
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_280_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 286
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_281_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 287
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_282_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 288
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_283_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 289
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_284_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 290
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_285_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 291
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_286_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 292
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_287_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 293
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_288_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 294
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_289_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 295
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_290_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 296
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_291_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 297
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_292_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 298
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_293_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 299
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_294_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 300
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_295_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 301
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_296_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 302
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_297_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 303
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_298_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 304
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_299_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 305
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_300_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 306
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_301_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 307
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_302_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 308
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_303_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 309
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_304_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 310
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_305_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 311
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_306_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 312
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_307_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 313
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_308_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 314
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_309_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 315
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_310_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 316
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_311_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 317
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_312_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 318
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_313_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 319
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_314_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 320
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_315_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 321
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_316_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 322
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_317_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 323
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_318_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 324
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_319_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 325
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_320_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 326
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_321_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 327
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_322_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 328
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_323_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 329
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_324_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 330
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_325_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 331
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_326_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 332
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_327_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 333
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_328_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 334
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_329_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 335
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_330_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 336
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_331_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 337
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_332_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 338
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_333_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 339
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_334_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 340
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_335_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 341
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_336_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 342
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_337_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 343
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_338_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 344
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_339_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 345
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_340_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 346
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_341_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 347
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_342_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 348
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_343_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 349
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_344_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 350
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_345_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 351
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_346_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 352
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_347_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 353
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_348_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 354
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_349_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 355
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_350_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 356
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_351_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 357
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_352_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 358
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_353_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 359
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_354_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 360
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_355_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 361
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_356_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 362
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_357_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 363
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_358_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 364
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_359_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 365
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_427_1367388600.55005"
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 253
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_427_1367388600.55005"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_427_1367388600.55005"
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 253
    $P5001."set_static_lexpad_value"("$?CLASS", $P5002)
    .const "LexInfo" $P5003 = "cuid_427_1367388600.55005"
    $P5004 = $P5003."finish_static_lexpad"()
    .const 'Sub' $P5001 = "cuid_360_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 367
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_361_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 368
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_362_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 369
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_363_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 370
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_364_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 371
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_365_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 372
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_366_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 373
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_367_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 374
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_368_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 375
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_369_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 376
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_370_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 377
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_371_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 378
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_372_1367388600.55005" 
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 379
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_505_1367388600.55005"
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 366
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_505_1367388600.55005"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_505_1367388600.55005"
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 366
    $P5001."set_static_lexpad_value"("$?CLASS", $P5002)
    .const "LexInfo" $P5003 = "cuid_505_1367388600.55005"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_509_1367388600.55005"
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 380
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_509_1367388600.55005"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_509_1367388600.55005"
    nqp_get_sc_object $P5002, "D50C0C83B7ECA581B7787A5F819F7A3EFDB9F30E-1367388600.58747", 380
    $P5001."set_static_lexpad_value"("$?CLASS", $P5002)
    .const "LexInfo" $P5003 = "cuid_509_1367388600.55005"
    $P5004 = $P5003."finish_static_lexpad"()
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_510_1367388600.55005") :anon :lex :outer("cuid_511_1367388600.55005")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    new $P5001, 'ResizablePMCArray'
    .const 'Sub' $P5002 = "cuid_1_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_2_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_3_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_4_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_5_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_6_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_7_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_8_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_9_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_10_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_11_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_12_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_13_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_14_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_15_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_16_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_17_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_18_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_19_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_20_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_21_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_22_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_23_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_24_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_25_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_26_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_27_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_28_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_29_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_30_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_31_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_32_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_33_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_34_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_35_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_36_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_37_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_38_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_39_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_40_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_41_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_42_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_43_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_44_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_45_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_46_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_47_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_48_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_49_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_50_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_51_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_52_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_53_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_54_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_55_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_56_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_57_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_58_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_59_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_60_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_61_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_62_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_63_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_64_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_65_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_66_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_67_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_68_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_69_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_70_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_71_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_72_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_73_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_74_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_75_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_76_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_77_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_78_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_79_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_80_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_81_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_82_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_83_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_84_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_85_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_86_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_87_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_88_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_89_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_90_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_91_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_92_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_93_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_94_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_95_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_96_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_97_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_98_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_99_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_100_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_101_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_102_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_103_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_104_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_105_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_106_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_107_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_108_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_109_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_110_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_111_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_112_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_113_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_114_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_115_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_116_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_117_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_118_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_119_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_120_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_121_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_122_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_123_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_124_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_125_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_126_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_127_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_128_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_129_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_130_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_131_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_132_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_133_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_134_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_135_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_136_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_137_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_138_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_139_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_140_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_141_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_142_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_143_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_144_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_145_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_146_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_147_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_148_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_149_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_150_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_151_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_152_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_153_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_154_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_155_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_156_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_157_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_158_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_159_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_160_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_161_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_162_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_163_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_164_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_165_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_166_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_167_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_168_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_169_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_170_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_171_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_172_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_173_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_174_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_175_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_176_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_177_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_178_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_179_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_180_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_181_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_182_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_183_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_184_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_185_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_186_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_187_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_188_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_189_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_190_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_191_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_192_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_193_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_194_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_195_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_196_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_197_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_198_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_199_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_200_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_201_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_202_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_203_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_204_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_205_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_206_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_207_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_208_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_209_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_210_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_211_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_212_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_213_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_214_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_215_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_216_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_217_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_218_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_219_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_220_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_221_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_222_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_223_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_224_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_225_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_226_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_227_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_228_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_229_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_230_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_231_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_232_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_233_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_234_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_235_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_236_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_237_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_238_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_239_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_240_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_241_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_242_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_243_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_244_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_245_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_246_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_247_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_248_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_249_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_250_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_251_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_252_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_253_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_254_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_255_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_256_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_257_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_258_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_259_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_260_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_261_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_262_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_263_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_264_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_265_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_266_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_267_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_268_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_269_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_270_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_271_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_272_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_273_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_274_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_275_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_276_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_277_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_278_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_279_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_280_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_281_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_282_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_283_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_284_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_285_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_286_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_287_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_288_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_289_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_290_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_291_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_292_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_293_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_294_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_295_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_296_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_297_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_298_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_299_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_300_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_301_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_302_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_303_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_304_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_305_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_306_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_307_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_308_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_309_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_310_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_311_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_312_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_313_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_314_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_315_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_316_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_317_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_318_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_319_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_320_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_321_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_322_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_323_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_324_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_325_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_326_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_327_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_328_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_329_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_330_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_331_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_332_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_333_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_334_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_335_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_336_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_337_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_338_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_339_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_340_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_341_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_342_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_343_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_344_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_345_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_346_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_347_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_348_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_349_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_350_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_351_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_352_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_353_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_354_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_355_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_356_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_357_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_358_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_359_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_360_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_361_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_362_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_363_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_364_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_365_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_366_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_367_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_368_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_369_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_370_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_371_1367388600.55005" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_372_1367388600.55005" 
    push $P5001, $P5002
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_512_1367388600.55005") :load
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .const 'Sub' $P5001 = "cuid_374_1367388600.55005" 
    $P5002 = $P5001()
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_513_1367388600.55005") :main
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc ARGS :slurpy 
    .const 'Sub' $P5001 = "cuid_374_1367388600.55005" 
    $P5002 = $P5001(ARGS :flat)
    .return ($P5002) 
.end