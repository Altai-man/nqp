sub print(*@args) {
    nqp::print(nqp::join("", @args));
    1;
}
sub say(*@args) {
    nqp::say(nqp::join("", @args));
    1;
}

sub plan($quantity) {
    nqp::say("1..$quantity");
}

sub ok($condition, $desc?) {
    nqp::say(($condition ?? "ok" !! "not ok") ~ ($desc ?? " - $desc" !! ""));
}

sub is($got, $expected, $desc?) {
    ok($got eq $expected, $desc);
    if $got ne $expected {
        my $out := "";
        for nqp::split("\n", "     got: \'$got\'\nexpected: \'$expected\'") -> $line {
            $out := $out ~ "# $line\n";
        }
        print($out);
    }
}

sub skip($desc, $count=1) {
    my $i := 0;
    while $i < $count {
        say("ok# SKIP $desc");
        $i := $i + 1;
    }
}

# vim: ft=perl6
# From src/core/YOUAREHERE.nqp


1;
{YOU_ARE_HERE}

# vim: set ft=perl6 nomodifiable :
