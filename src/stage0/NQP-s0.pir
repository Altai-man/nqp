.include 'cclass.pasm'
.include 'except_severity.pasm'
.include 'except_types.pasm'
.include 'iglobals.pasm'
.include 'interpinfo.pasm'
.include 'iterator.pasm'
.include 'sysinfo.pasm'
.include 'stat.pasm'
.include 'datatypes.pasm'
.include 'libpaths.pasm'
.loadlib "nqp_group"
.loadlib "nqp_ops"
.loadlib "nqp_bigint_ops"
.loadlib "trans_ops"
.loadlib "io_ops"
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_372_1360432459.413") :anon :lex
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc _lex_param_0 :slurpy 
    .const 'Sub' $P5072 = 'cuid_371_1360432459.413' 
    capture_lex $P5072 
    .const 'Sub' $P5072 = 'cuid_373_1360432459.413' 
    capture_lex $P5072 
    .const 'Sub' $P5072 = 'cuid_375_1360432459.413' 
    capture_lex $P5072 
    .const 'Sub' $P5072 = 'cuid_395_1360432459.413' 
    capture_lex $P5072 
    .const 'Sub' $P5072 = 'cuid_414_1360432459.413' 
    capture_lex $P5072 
    .const 'Sub' $P5072 = 'cuid_415_1360432459.413' 
    capture_lex $P5072 
    .const 'Sub' $P5072 = 'cuid_416_1360432459.413' 
    capture_lex $P5072 
    .const 'Sub' $P5072 = 'cuid_417_1360432459.413' 
    capture_lex $P5072 
    .const 'Sub' $P5072 = 'cuid_418_1360432459.413' 
    capture_lex $P5072 
    .const 'Sub' $P5072 = 'cuid_419_1360432459.413' 
    capture_lex $P5072 
    .const 'Sub' $P5072 = 'cuid_420_1360432459.413' 
    capture_lex $P5072 
    .const 'Sub' $P5072 = 'cuid_421_1360432459.413' 
    capture_lex $P5072 
    .const 'Sub' $P5072 = 'cuid_422_1360432459.413' 
    capture_lex $P5072 
    .const 'Sub' $P5072 = 'cuid_424_1360432459.413' 
    capture_lex $P5072 
    .const 'Sub' $P5072 = 'cuid_499_1360432459.413' 
    capture_lex $P5072 
    .const 'Sub' $P5072 = 'cuid_503_1360432459.413' 
    capture_lex $P5072 
    .lex "GLOBALish", $P101 
    .lex "$?PACKAGE", $P102 
    .lex "EXPORT", $P103 
    .lex "$ops", $P104 
    .lex "$nqpcomp", $P105 
    .lex "@clo", $P106 
    .lex "&MAIN", $P107 
    .lex "&hll-config", $P108 
    .lex "@ARGS", _lex_param_0 
    .local pmc ctxsave 
    .local pmc fb_tmp_273 
    .local pmc fb_tmp_1159 
    .local pmc fb_tmp_1160 
    .local pmc fb_tmp_1161 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P104, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P105, $P5002
    new $P5003, 'ResizablePMCArray'
    set $P106, $P5003
    .const 'Sub' $P5004 = 'cuid_371_1360432459.413' 
    capture_lex $P5004
    set $P107, $P5004
    .const 'Sub' $P5005 = 'cuid_373_1360432459.413' 
    capture_lex $P5005
    set $P108, $P5005
    find_dynamic_lex $P5006, "$*CTXSAVE"
    set ctxsave, $P5006
    isnull $I5001, ctxsave
    if $I5001 goto unless10_end11 
    can $I5002, ctxsave, "ctxsave"
    box $P5009, $I5002
    set $P5008, $P5009
    unless $I5002 goto if11_end13 
    $P5007 = ctxsave."ctxsave"()
    set $P5008, $P5007
  if11_end13:
  unless10_end11:
.annotate 'line', 1
    .const 'Sub' $P5010 = 'cuid_375_1360432459.413' 
    capture_lex $P5010
    $P5011 = $P5010()
    .const 'Sub' $P5012 = 'cuid_395_1360432459.413' 
    capture_lex $P5012
    $P5013 = $P5012()
    .const 'Sub' $P5014 = 'cuid_414_1360432459.413' 
    capture_lex $P5014
    $P5015 = $P5014()
.annotate 'line', 1471
    nqp_get_sc_object $P5018, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5017, $P5018, "QAST"
    get_who $P5016, $P5017
    set fb_tmp_273, $P5016
    repr_defined $I5003, fb_tmp_273
    unless $I5003 goto if1893_else4335 
    set $P5019, fb_tmp_273["Compiler"]
    set $P5021, $P5019
    goto if1893_end4336
  if1893_else4335:
    null $P5020
    set $P5021, $P5020
  if1893_end4336:
    unless_null $P5021, vivi_18944337
    nqp_get_sc_object $P5022, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5021, $P5022
  vivi_18944337:
    $P5023 = $P5021."operations"()
    set $P104, $P5023
.annotate 'line', 1473
    .const 'Sub' $P5025 = 'cuid_415_1360432459.413' 
    capture_lex $P5025
    newclosure $P5024, $P5025
    $P104."add_hll_op"("nqp", "preinc", $P5024)
.annotate 'line', 1488
    .const 'Sub' $P5027 = 'cuid_416_1360432459.413' 
    capture_lex $P5027
    newclosure $P5026, $P5027
    $P104."add_hll_op"("nqp", "predec", $P5026)
.annotate 'line', 1503
    .const 'Sub' $P5029 = 'cuid_417_1360432459.413' 
    capture_lex $P5029
    newclosure $P5028, $P5029
    $P104."add_hll_op"("nqp", "postinc", $P5028)
.annotate 'line', 1527
    .const 'Sub' $P5031 = 'cuid_418_1360432459.413' 
    capture_lex $P5031
    newclosure $P5030, $P5031
    $P104."add_hll_op"("nqp", "postdec", $P5030)
.annotate 'line', 1551
    .const 'Sub' $P5033 = 'cuid_419_1360432459.413' 
    capture_lex $P5033
    newclosure $P5032, $P5033
    $P104."add_hll_op"("nqp", "numify", $P5032)
.annotate 'line', 1555
    .const 'Sub' $P5035 = 'cuid_420_1360432459.413' 
    capture_lex $P5035
    newclosure $P5034, $P5035
    $P104."add_hll_op"("nqp", "stringify", $P5034)
.annotate 'line', 1559
    .const 'Sub' $P5037 = 'cuid_421_1360432459.413' 
    capture_lex $P5037
    newclosure $P5036, $P5037
    $P104."add_hll_op"("nqp", "eqaddr", $P5036)
.annotate 'line', 1567
    .const 'Sub' $P5039 = 'cuid_422_1360432459.413' 
    capture_lex $P5039
    newclosure $P5038, $P5039
    $P104."add_hll_op"("nqp", "falsey", $P5038)
    .const 'Sub' $P5040 = 'cuid_424_1360432459.413' 
    capture_lex $P5040
    $P5041 = $P5040()
    .const 'Sub' $P5042 = 'cuid_499_1360432459.413' 
    capture_lex $P5042
    $P5043 = $P5042()
    .const 'Sub' $P5044 = 'cuid_503_1360432459.413' 
    capture_lex $P5044
    $P5045 = $P5044()
.annotate 'line', 3332
    nqp_get_sc_object $P5048, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5047, $P5048, "NQP"
    get_who $P5046, $P5047
    set fb_tmp_1159, $P5046
    repr_defined $I5004, fb_tmp_1159
    unless $I5004 goto if4090_else8165 
    set $P5049, fb_tmp_1159["Compiler"]
    set $P5051, $P5049
    goto if4090_end8166
  if4090_else8165:
    null $P5050
    set $P5051, $P5050
  if4090_end8166:
    unless_null $P5051, vivi_40918167
    nqp_get_sc_object $P5052, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5051, $P5052
  vivi_40918167:
    $P5053 = $P5051."new"()
    set $P105, $P5053
.annotate 'line', 3333
    $P105."language"("nqp")
.annotate 'line', 3334
    nqp_get_sc_object $P5056, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5055, $P5056, "NQP"
    get_who $P5054, $P5055
    set fb_tmp_1160, $P5054
    repr_defined $I5005, fb_tmp_1160
    unless $I5005 goto if4092_else8168 
    set $P5057, fb_tmp_1160["Grammar"]
    set $P5059, $P5057
    goto if4092_end8169
  if4092_else8168:
    null $P5058
    set $P5059, $P5058
  if4092_end8169:
    unless_null $P5059, vivi_40938170
    nqp_get_sc_object $P5060, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5059, $P5060
  vivi_40938170:
    $P105."parsegrammar"($P5059)
.annotate 'line', 3335
    nqp_get_sc_object $P5063, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5062, $P5063, "NQP"
    get_who $P5061, $P5062
    set fb_tmp_1161, $P5061
    repr_defined $I5006, fb_tmp_1161
    unless $I5006 goto if4094_else8171 
    set $P5064, fb_tmp_1161["Actions"]
    set $P5066, $P5064
    goto if4094_end8172
  if4094_else8171:
    null $P5065
    set $P5066, $P5065
  if4094_end8172:
    unless_null $P5066, vivi_40958173
    nqp_get_sc_object $P5067, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5066, $P5067
  vivi_40958173:
    $P105."parseactions"($P5066)
.annotate 'line', 3336
    $P5068 = $P105."config"()
    "&hll-config"($P5068)
.annotate 'line', 3339
    $P5069 = $P105."commandline_options"()
    set $P106, $P5069
.annotate 'line', 3340
    $P106."push"("parsetrace")
.annotate 'line', 3341
    $P106."push"("setting=s")
.annotate 'line', 3342
    $P106."push"("setting-path=s")
.annotate 'line', 3343
    $P106."push"("module-path=s")
.annotate 'line', 3344
    $P106."push"("vmlibs=s")
.annotate 'line', 3345
    $P106."push"("no-regex-lib")
.annotate 'line', 3346
    $P106."push"("old-regex-lib")
.annotate 'line', 3347
    $P106."push"("dynext=s")
.annotate 'line', 3348
    $P106."push"("stable-sc")
    unless _lex_param_0 goto if4096_end8175 
    .const 'Sub' $P5070 = "cuid_371_1360432459.413" 
    $P5071 = $P5070(_lex_param_0 :flat)
  if4096_end8175:
    .return () 
.end
.HLL "nqp"
.namespace []
.sub "MAIN" :subid("cuid_371_1360432459.413") :anon :lex :outer("cuid_372_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3350
    .param pmc _lex_param_0 
    .lex "@ARGS", _lex_param_0 
.annotate 'line', 3352
    find_lex $P5001, "$nqpcomp"
    $P5001."command_line"(_lex_param_0, "utf8" :named("encoding"), "ascii iso-8859-1" :named("transcode"))
.annotate 'line', 3355
    find_lex $P5002, "$nqpcomp"
    $P5003 = $P5002."nqpevent"()
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "hll-config" :subid("cuid_373_1360432459.413") :anon :lex :outer("cuid_372_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3359
    .param pmc _lex_param_0 
    .lex "$config", _lex_param_0 
    box $P5001, "2013.01-132-g27c96a9"
    set _lex_param_0["version"], $P5001
    box $P5002, "2013-02-09T17:54:19Z"
    set _lex_param_0["build-date"], $P5002
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_375_1360432459.413") :anon :lex :outer("cuid_372_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 8
    .const 'Sub' $P5032 = 'cuid_1_1360432459.413' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_2_1360432459.413' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_3_1360432459.413' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_4_1360432459.413' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_5_1360432459.413' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_6_1360432459.413' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_7_1360432459.413' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_8_1360432459.413' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_9_1360432459.413' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_10_1360432459.413' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_11_1360432459.413' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_17_1360432459.413' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_18_1360432459.413' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_19_1360432459.413' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_20_1360432459.413' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_21_1360432459.413' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_22_1360432459.413' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_23_1360432459.413' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_24_1360432459.413' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_25_1360432459.413' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_26_1360432459.413' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_27_1360432459.413' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_28_1360432459.413' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_29_1360432459.413' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_30_1360432459.413' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_31_1360432459.413' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_32_1360432459.413' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_33_1360432459.413' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_34_1360432459.413' 
    capture_lex $P5032 
    .lex "$loader", $P101 
    .lex "$?PACKAGE", $P102 
    .lex "$?CLASS", $P103 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    .const 'Sub' $P5002 = 'cuid_1_1360432459.413' 
    capture_lex $P5002
    .const 'Sub' $P5003 = 'cuid_2_1360432459.413' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_3_1360432459.413' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_4_1360432459.413' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_5_1360432459.413' 
    capture_lex $P5006
    get_hll_global $P5007, "ModuleLoader"
    set $P101, $P5007
    .const 'Sub' $P5008 = 'cuid_6_1360432459.413' 
    capture_lex $P5008
    .const 'Sub' $P5009 = 'cuid_7_1360432459.413' 
    capture_lex $P5009
    .const 'Sub' $P5010 = 'cuid_8_1360432459.413' 
    capture_lex $P5010
    .const 'Sub' $P5011 = 'cuid_9_1360432459.413' 
    capture_lex $P5011
    .const 'Sub' $P5012 = 'cuid_10_1360432459.413' 
    capture_lex $P5012
    .const 'Sub' $P5013 = 'cuid_11_1360432459.413' 
    capture_lex $P5013
    .const 'Sub' $P5014 = 'cuid_17_1360432459.413' 
    capture_lex $P5014
    .const 'Sub' $P5015 = 'cuid_18_1360432459.413' 
    capture_lex $P5015
    .const 'Sub' $P5016 = 'cuid_19_1360432459.413' 
    capture_lex $P5016
    .const 'Sub' $P5017 = 'cuid_20_1360432459.413' 
    capture_lex $P5017
    .const 'Sub' $P5018 = 'cuid_21_1360432459.413' 
    capture_lex $P5018
    .const 'Sub' $P5019 = 'cuid_22_1360432459.413' 
    capture_lex $P5019
    .const 'Sub' $P5020 = 'cuid_23_1360432459.413' 
    capture_lex $P5020
    .const 'Sub' $P5021 = 'cuid_24_1360432459.413' 
    capture_lex $P5021
    .const 'Sub' $P5022 = 'cuid_25_1360432459.413' 
    capture_lex $P5022
    .const 'Sub' $P5023 = 'cuid_26_1360432459.413' 
    capture_lex $P5023
    .const 'Sub' $P5024 = 'cuid_27_1360432459.413' 
    capture_lex $P5024
    .const 'Sub' $P5025 = 'cuid_28_1360432459.413' 
    capture_lex $P5025
    .const 'Sub' $P5026 = 'cuid_29_1360432459.413' 
    capture_lex $P5026
    .const 'Sub' $P5027 = 'cuid_30_1360432459.413' 
    capture_lex $P5027
    .const 'Sub' $P5028 = 'cuid_31_1360432459.413' 
    capture_lex $P5028
    .const 'Sub' $P5029 = 'cuid_32_1360432459.413' 
    capture_lex $P5029
    .const 'Sub' $P5030 = 'cuid_33_1360432459.413' 
    capture_lex $P5030
    .const 'Sub' $P5031 = 'cuid_34_1360432459.413' 
    capture_lex $P5031
    .return ($P5031) 
.end
.HLL "nqp"
.namespace []
.sub "BUILD" :subid("cuid_1_1360432459.413") :anon :lex :outer("cuid_375_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 33
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :slurpy :named 
    .const 'Sub' $P5041 = 'cuid_374_1360432459.413' 
    capture_lex $P5041 
    .lex "self", _lex_param_0 
    .lex "%opts", _lex_param_1 
    .local pmc fb_tmp_1 
    .local pmc fb_tmp_2 
    .local pmc fb_tmp_3 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 3
    new $P5003, 'ResizablePMCArray'
    repr_bind_attr_obj $P5001, $P5002, "@!BLOCKS", $P5003
    nqp_decontainerize $P5004, _lex_param_0
    nqp_get_sc_object $P5005, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 3
    new $P5006, 'Hash'
    repr_bind_attr_obj $P5004, $P5005, "%!code_objects_to_fix_up", $P5006
    nqp_decontainerize $P5007, _lex_param_0
    nqp_get_sc_object $P5008, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 3
    new $P5009, 'Hash'
    repr_bind_attr_obj $P5007, $P5008, "%!code_object_types", $P5009
    nqp_decontainerize $P5010, _lex_param_0
    nqp_get_sc_object $P5011, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 3
    new $P5012, 'Hash'
    repr_bind_attr_obj $P5010, $P5011, "%!code_object_fixup_list", $P5012
    nqp_decontainerize $P5013, _lex_param_0
    nqp_get_sc_object $P5014, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 3
    new $P5015, 'Hash'
    repr_bind_attr_obj $P5013, $P5014, "%!code_stub_sc_idx", $P5015
    nqp_decontainerize $P5016, _lex_param_0
    nqp_get_sc_object $P5017, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 3
    new $P5018, 'ResizablePMCArray'
    repr_bind_attr_obj $P5016, $P5017, "@!clearup_tasks", $P5018
    find_dynamic_lex $P5019, "%*COMPILING"
    unless_null $P5019, fallback20
    nqp_get_sc_object $P5021, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5020, $P5021
    set fb_tmp_3, $P5020
    repr_defined $I5004, fb_tmp_3
    unless $I5004 goto if15_else21 
    set $P5022, fb_tmp_3["%COMPILING"]
    set $P5024, $P5022
    goto if15_end22
  if15_else21:
    null $P5023
    set $P5024, $P5023
  if15_end22:
    unless_null $P5024, vivi_1623
    nqp_get_sc_object $P5026, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5025, $P5026
    new $P5027, 'Hash'
    set $P5025["%COMPILING"], $P5027
    set $P5024, $P5027
  vivi_1623:
    unless_null $P5024, vivi_1724
    die "Contextual %*COMPILING not found"
    box $P5028, "Contextual %*COMPILING not found"
    set $P5024, $P5028
  vivi_1724:
    set $P5019, $P5024
  fallback20:
    set fb_tmp_2, $P5019
    repr_defined $I5003, fb_tmp_2
    unless $I5003 goto if14_else18 
    set $P5029, fb_tmp_2["%?OPTIONS"]
    set $P5031, $P5029
    goto if14_end19
  if14_else18:
    null $P5030
    set $P5031, $P5030
  if14_end19:
    unless_null $P5031, vivi_1825
    nqp_get_sc_object $P5032, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5031, $P5032
  vivi_1825:
    set fb_tmp_1, $P5031
    repr_defined $I5002, fb_tmp_1
    unless $I5002 goto if13_else16 
    set $P5033, fb_tmp_1["dynext"]
    set $P5035, $P5033
    goto if13_end17
  if13_else16:
    null $P5034
    set $P5035, $P5034
  if13_end17:
    unless_null $P5035, vivi_1926
    nqp_get_sc_object $P5036, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5035, $P5036
  vivi_1926:
    defined $I5001, $P5035
    box $P5040, $I5001
    set $P5039, $P5040
    unless $I5001 goto if12_end15 
    .const 'Sub' $P5037 = 'cuid_374_1360432459.413' 
    capture_lex $P5037
    $P5038 = $P5037()
    set $P5039, $P5038
  if12_end15:
    .return ($P5039) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_374_1360432459.413") :anon :lex :outer("cuid_1_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 41
    .lex "$dynext_path", $P101 
    .lex "@dynext_paths", $P102 
    .local pmc fb_tmp_4 
    .local pmc fb_tmp_5 
    .local pmc fb_tmp_6 
    .local pmc fb_tmp_7 
    .local pmc fb_tmp_8 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    new $P5002, 'ResizablePMCArray'
    set $P102, $P5002
    find_dynamic_lex $P5003, "%*COMPILING"
    unless_null $P5003, fallback31
    nqp_get_sc_object $P5005, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5004, $P5005
    set fb_tmp_6, $P5004
    repr_defined $I5003, fb_tmp_6
    unless $I5003 goto if22_else32 
    set $P5006, fb_tmp_6["%COMPILING"]
    set $P5008, $P5006
    goto if22_end33
  if22_else32:
    null $P5007
    set $P5008, $P5007
  if22_end33:
    unless_null $P5008, vivi_2334
    nqp_get_sc_object $P5010, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5009, $P5010
    new $P5011, 'Hash'
    set $P5009["%COMPILING"], $P5011
    set $P5008, $P5011
  vivi_2334:
    unless_null $P5008, vivi_2435
    die "Contextual %*COMPILING not found"
    box $P5012, "Contextual %*COMPILING not found"
    set $P5008, $P5012
  vivi_2435:
    set $P5003, $P5008
  fallback31:
    set fb_tmp_5, $P5003
    repr_defined $I5002, fb_tmp_5
    unless $I5002 goto if21_else29 
    set $P5013, fb_tmp_5["%?OPTIONS"]
    set $P5015, $P5013
    goto if21_end30
  if21_else29:
    null $P5014
    set $P5015, $P5014
  if21_end30:
    unless_null $P5015, vivi_2536
    nqp_get_sc_object $P5016, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5015, $P5016
  vivi_2536:
    set fb_tmp_4, $P5015
    repr_defined $I5001, fb_tmp_4
    unless $I5001 goto if20_else27 
    set $P5017, fb_tmp_4["dynext"]
    set $P5019, $P5017
    goto if20_end28
  if20_else27:
    null $P5018
    set $P5019, $P5018
  if20_end28:
    unless_null $P5019, vivi_2637
    nqp_get_sc_object $P5020, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5019, $P5020
  vivi_2637:
    set $P101, $P5019
    getinterp $P5021
    set fb_tmp_8, $P5021
    repr_defined $I5005, fb_tmp_8
    unless $I5005 goto if28_else40 
    set $P5022, fb_tmp_8[.IGLOBALS_LIB_PATHS]
    set $P5024, $P5022
    goto if28_end41
  if28_else40:
    null $P5023
    set $P5024, $P5023
  if28_end41:
    unless_null $P5024, vivi_2942
    nqp_get_sc_object $P5025, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5024, $P5025
  vivi_2942:
    set fb_tmp_7, $P5024
    repr_defined $I5004, fb_tmp_7
    unless $I5004 goto if27_else38 
    set $P5026, fb_tmp_7[.PARROT_LIB_PATH_DYNEXT]
    set $P5028, $P5026
    goto if27_end39
  if27_else38:
    null $P5027
    set $P5028, $P5027
  if27_end39:
    unless_null $P5028, vivi_3043
    nqp_get_sc_object $P5029, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5028, $P5029
  vivi_3043:
    set $P102, $P5028
.annotate 'line', 45
    $P5030 = $P102."push"($P101)
    .return ($P5030) 
.end
.HLL "nqp"
.namespace []
.sub "push_lexpad" :subid("cuid_2_1360432459.413") :anon :lex :outer("cuid_375_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 50
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$pad", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_9 
    .local pmc fb_tmp_10 
    .local pmc fb_tmp_11 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
.annotate 'line', 52
    nqp_get_sc_object $P5004, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5003, $P5004, "QAST"
    get_who $P5002, $P5003
    set fb_tmp_9, $P5002
    repr_defined $I5001, fb_tmp_9
    unless $I5001 goto if31_else44 
    set $P5005, fb_tmp_9["Block"]
    set $P5007, $P5005
    goto if31_end45
  if31_else44:
    null $P5006
    set $P5007, $P5006
  if31_end45:
    unless_null $P5007, vivi_3246
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5007, $P5008
  vivi_3246:
    nqp_get_sc_object $P5011, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5010, $P5011, "QAST"
    get_who $P5009, $P5010
    set fb_tmp_10, $P5009
    repr_defined $I5002, fb_tmp_10
    unless $I5002 goto if33_else47 
    set $P5012, fb_tmp_10["Stmts"]
    set $P5014, $P5012
    goto if33_end48
  if33_else47:
    null $P5013
    set $P5014, $P5013
  if33_end48:
    unless_null $P5014, vivi_3449
    nqp_get_sc_object $P5015, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5014, $P5015
  vivi_3449:
    $P5016 = $P5014."new"()
    $P5017 = $P5007."new"($P5016, _lex_param_1 :named("node"))
    set $P101, $P5017
    nqp_decontainerize $P5018, _lex_param_0
    nqp_get_sc_object $P5019, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 3
    repr_get_attr_obj $P5020, $P5018, $P5019, "@!BLOCKS"
    set $N5001, $P5020
    unless $N5001 goto if35_end51 
.annotate 'line', 53
    nqp_decontainerize $P5021, _lex_param_0
    nqp_get_sc_object $P5022, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 3
    repr_get_attr_obj $P5023, $P5021, $P5022, "@!BLOCKS"
    set fb_tmp_11, $P5023
    repr_defined $I5003, fb_tmp_11
    unless $I5003 goto if36_else52 
    nqp_decontainerize $P5025, _lex_param_0
    nqp_get_sc_object $P5026, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 3
    repr_get_attr_obj $P5027, $P5025, $P5026, "@!BLOCKS"
    set $N5003, $P5027
    set $N5004, 1
    sub $N5002, $N5003, $N5004
    set $I5004, $N5002
    set $P5024, fb_tmp_11[$I5004]
    set $P5029, $P5024
    goto if36_end53
  if36_else52:
    null $P5028
    set $P5029, $P5028
  if36_end53:
    unless_null $P5029, vivi_3754
    nqp_get_sc_object $P5030, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5029, $P5030
  vivi_3754:
    set $P101["outer"], $P5029
  if35_end51:
    nqp_decontainerize $P5031, _lex_param_0
    nqp_get_sc_object $P5032, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 3
    repr_get_attr_obj $P5033, $P5031, $P5032, "@!BLOCKS"
    nqp_decontainerize $P5034, _lex_param_0
    nqp_get_sc_object $P5035, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 3
    repr_get_attr_obj $P5036, $P5034, $P5035, "@!BLOCKS"
    set $N5005, $P5036
    set $I5005, $N5005
    set $P5033[$I5005], $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "pop_lexpad" :subid("cuid_3_1360432459.413") :anon :lex :outer("cuid_375_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 61
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
.annotate 'line', 62
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 3
    repr_get_attr_obj $P5003, $P5001, $P5002, "@!BLOCKS"
    $P5004 = $P5003."pop"()
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "cur_lexpad" :subid("cuid_4_1360432459.413") :anon :lex :outer("cuid_375_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 66
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    .local pmc fb_tmp_12 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 3
    repr_get_attr_obj $P5003, $P5001, $P5002, "@!BLOCKS"
    set fb_tmp_12, $P5003
    repr_defined $I5001, fb_tmp_12
    unless $I5001 goto if38_else55 
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 3
    repr_get_attr_obj $P5007, $P5005, $P5006, "@!BLOCKS"
    set $N5002, $P5007
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    set $I5002, $N5001
    set $P5004, fb_tmp_12[$I5002]
    set $P5009, $P5004
    goto if38_end56
  if38_else55:
    null $P5008
    set $P5009, $P5008
  if38_end56:
    unless_null $P5009, vivi_3957
    nqp_get_sc_object $P5010, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5009, $P5010
  vivi_3957:
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "get_legacy_block_list" :subid("cuid_5_1360432459.413") :anon :lex :outer("cuid_375_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 71
    .param pmc _lex_param_0 
    .lex "@x", $P101 
    .lex "self", _lex_param_0 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 3
    repr_get_attr_obj $P5005, $P5003, $P5004, "@!BLOCKS"
    repr_clone $P5002, $P5005
    set $P101, $P5002
.annotate 'line', 73
    $P101."reverse"()
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "load_setting" :subid("cuid_6_1360432459.413") :anon :lex :outer("cuid_375_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 84
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5005 = 'cuid_376_1360432459.413' 
    capture_lex $P5005 
    .lex "self", _lex_param_0 
    .lex "$setting_name", _lex_param_1 
    root_new $P101, ['parrot';'Continuation']
    set_label $P101, lexotic_58
    .lex "RETURN", $P101
    set $S5001, _lex_param_1
    isne $I5001, $S5001, "NULL"
    box $P5004, $I5001
    set $P5003, $P5004
    unless $I5001 goto if40_end61 
    .const 'Sub' $P5001 = 'cuid_376_1360432459.413' 
    capture_lex $P5001
    $P5002 = $P5001()
    set $P5003, $P5002
  if40_end61:
    goto lexotic_59
  lexotic_58:
    .get_results ($P5003)
  lexotic_59:
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_376_1360432459.413") :anon :lex :outer("cuid_6_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 86
    .lex "$setting", $P101 
    .lex "$set_outer", $P102 
    .local pmc fb_tmp_13 
    .local pmc fb_tmp_14 
    .local pmc fb_tmp_15 
    .local pmc fb_tmp_16 
    .local pmc fb_tmp_17 
    .local pmc fb_tmp_18 
    .local pmc fb_tmp_19 
    .local pmc fb_tmp_20 
    .local pmc fb_tmp_21 
    .local pmc fb_tmp_22 
    .local pmc fb_tmp_23 
    .local pmc fb_tmp_24 
    .local pmc fb_tmp_25 
    .local pmc fb_tmp_26 
    .local pmc fb_tmp_27 
    .local pmc fb_tmp_28 
    .local pmc fb_tmp_29 
    .local pmc fb_tmp_30 
    .local pmc fb_tmp_31 
    .local pmc fb_tmp_32 
    .local pmc fb_tmp_33 
    .local pmc fb_tmp_34 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
    find_dynamic_lex $P5003, "%*COMPILING"
    unless_null $P5003, fallback64
    nqp_get_sc_object $P5005, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5004, $P5005
    set fb_tmp_14, $P5004
    repr_defined $I5002, fb_tmp_14
    unless $I5002 goto if42_else65 
    set $P5006, fb_tmp_14["%COMPILING"]
    set $P5008, $P5006
    goto if42_end66
  if42_else65:
    null $P5007
    set $P5008, $P5007
  if42_end66:
    unless_null $P5008, vivi_4367
    nqp_get_sc_object $P5010, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5009, $P5010
    new $P5011, 'Hash'
    set $P5009["%COMPILING"], $P5011
    set $P5008, $P5011
  vivi_4367:
    unless_null $P5008, vivi_4468
    die "Contextual %*COMPILING not found"
    box $P5012, "Contextual %*COMPILING not found"
    set $P5008, $P5012
  vivi_4468:
    set $P5003, $P5008
  fallback64:
    set fb_tmp_13, $P5003
    repr_defined $I5001, fb_tmp_13
    unless $I5001 goto if41_else62 
    set $P5013, fb_tmp_13["%?OPTIONS"]
    set $P5015, $P5013
    goto if41_end63
  if41_else62:
    null $P5014
    set $P5015, $P5014
  if41_end63:
    unless_null $P5015, vivi_4569
    nqp_get_sc_object $P5016, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5015, $P5016
  vivi_4569:
.annotate 'line', 91
    find_lex $P5017, "$loader"
    find_lex $P5018, "$setting_name"
    $P5019 = $P5017."load_setting"($P5018)
    set $P5015["outer_ctx"], $P5019
    set $P101, $P5019
.annotate 'line', 95
    nqp_get_sc_object $P5022, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5021, $P5022, "QAST"
    get_who $P5020, $P5021
    set fb_tmp_15, $P5020
    repr_defined $I5003, fb_tmp_15
    unless $I5003 goto if46_else70 
    set $P5023, fb_tmp_15["VM"]
    set $P5025, $P5023
    goto if46_end71
  if46_else70:
    null $P5024
    set $P5025, $P5024
  if46_end71:
    unless_null $P5025, vivi_4772
    nqp_get_sc_object $P5026, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5025, $P5026
  vivi_4772:
.annotate 'line', 96
    nqp_get_sc_object $P5029, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5028, $P5029, "QAST"
    get_who $P5027, $P5028
    set fb_tmp_16, $P5027
    repr_defined $I5004, fb_tmp_16
    unless $I5004 goto if48_else73 
    set $P5030, fb_tmp_16["Op"]
    set $P5032, $P5030
    goto if48_end74
  if48_else73:
    null $P5031
    set $P5032, $P5031
  if48_end74:
    unless_null $P5032, vivi_4975
    nqp_get_sc_object $P5033, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5032, $P5033
  vivi_4975:
.annotate 'line', 98
    nqp_get_sc_object $P5036, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5035, $P5036, "QAST"
    get_who $P5034, $P5035
    set fb_tmp_17, $P5034
    repr_defined $I5005, fb_tmp_17
    unless $I5005 goto if50_else76 
    set $P5037, fb_tmp_17["BVal"]
    set $P5039, $P5037
    goto if50_end77
  if50_else76:
    null $P5038
    set $P5039, $P5038
  if50_end77:
    unless_null $P5039, vivi_5178
    nqp_get_sc_object $P5040, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5039, $P5040
  vivi_5178:
    find_dynamic_lex $P5041, "$*UNIT"
    unless_null $P5041, fallback79
    nqp_get_sc_object $P5043, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5042, $P5043
    set fb_tmp_18, $P5042
    repr_defined $I5006, fb_tmp_18
    unless $I5006 goto if52_else80 
    set $P5044, fb_tmp_18["$UNIT"]
    set $P5046, $P5044
    goto if52_end81
  if52_else80:
    null $P5045
    set $P5046, $P5045
  if52_end81:
    unless_null $P5046, vivi_5382
    nqp_get_sc_object $P5047, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5046, $P5047
  vivi_5382:
    unless_null $P5046, vivi_5483
    die "Contextual $*UNIT not found"
    box $P5048, "Contextual $*UNIT not found"
    set $P5046, $P5048
  vivi_5483:
    set $P5041, $P5046
  fallback79:
    $P5049 = $P5039."new"($P5041 :named("value"))
.annotate 'line', 99
    nqp_get_sc_object $P5052, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5051, $P5052, "QAST"
    get_who $P5050, $P5051
    set fb_tmp_19, $P5050
    repr_defined $I5007, fb_tmp_19
    unless $I5007 goto if55_else84 
    set $P5053, fb_tmp_19["Op"]
    set $P5055, $P5053
    goto if55_end85
  if55_else84:
    null $P5054
    set $P5055, $P5054
  if55_end85:
    unless_null $P5055, vivi_5686
    nqp_get_sc_object $P5056, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5055, $P5056
  vivi_5686:
.annotate 'line', 101
    nqp_get_sc_object $P5059, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5058, $P5059, "QAST"
    get_who $P5057, $P5058
    set fb_tmp_20, $P5057
    repr_defined $I5008, fb_tmp_20
    unless $I5008 goto if57_else87 
    set $P5060, fb_tmp_20["Op"]
    set $P5062, $P5060
    goto if57_end88
  if57_else87:
    null $P5061
    set $P5062, $P5061
  if57_end88:
    unless_null $P5062, vivi_5889
    nqp_get_sc_object $P5063, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5062, $P5063
  vivi_5889:
.annotate 'line', 103
    nqp_get_sc_object $P5066, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5065, $P5066, "QAST"
    get_who $P5064, $P5065
    set fb_tmp_21, $P5064
    repr_defined $I5009, fb_tmp_21
    unless $I5009 goto if59_else90 
    set $P5067, fb_tmp_21["SVal"]
    set $P5069, $P5067
    goto if59_end91
  if59_else90:
    null $P5068
    set $P5069, $P5068
  if59_end91:
    unless_null $P5069, vivi_6092
    nqp_get_sc_object $P5070, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5069, $P5070
  vivi_6092:
    $P5071 = $P5069."new"("ModuleLoader" :named("value"))
    $P5072 = $P5062."new"($P5071, "getcurhllsym" :named("op"))
.annotate 'line', 105
    nqp_get_sc_object $P5075, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5074, $P5075, "QAST"
    get_who $P5073, $P5074
    set fb_tmp_22, $P5073
    repr_defined $I5010, fb_tmp_22
    unless $I5010 goto if61_else93 
    set $P5076, fb_tmp_22["SVal"]
    set $P5078, $P5076
    goto if61_end94
  if61_else93:
    null $P5077
    set $P5078, $P5077
  if61_end94:
    unless_null $P5078, vivi_6295
    nqp_get_sc_object $P5079, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5078, $P5079
  vivi_6295:
    find_lex $P5080, "$setting_name"
    $P5081 = $P5078."new"($P5080 :named("value"))
    $P5082 = $P5055."new"($P5072, $P5081, "callmethod" :named("op"), "load_setting" :named("name"))
    $P5083 = $P5032."new"($P5049, $P5082, "callmethod" :named("op"), "set_outer_ctx" :named("name"))
.annotate 'line', 107
    nqp_get_sc_object $P5086, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5085, $P5086, "QAST"
    get_who $P5084, $P5085
    set fb_tmp_23, $P5084
    repr_defined $I5011, fb_tmp_23
    unless $I5011 goto if63_else96 
    set $P5087, fb_tmp_23["Op"]
    set $P5089, $P5087
    goto if63_end97
  if63_else96:
    null $P5088
    set $P5089, $P5088
  if63_end97:
    unless_null $P5089, vivi_6498
    nqp_get_sc_object $P5090, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5089, $P5090
  vivi_6498:
.annotate 'line', 109
    nqp_get_sc_object $P5093, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5092, $P5093, "QAST"
    get_who $P5091, $P5092
    set fb_tmp_24, $P5091
    repr_defined $I5012, fb_tmp_24
    unless $I5012 goto if65_else99 
    set $P5094, fb_tmp_24["BVal"]
    set $P5096, $P5094
    goto if65_end100
  if65_else99:
    null $P5095
    set $P5096, $P5095
  if65_end100:
    unless_null $P5096, vivi_66101
    nqp_get_sc_object $P5097, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5096, $P5097
  vivi_66101:
    find_dynamic_lex $P5098, "$*UNIT"
    unless_null $P5098, fallback102
    nqp_get_sc_object $P5100, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5099, $P5100
    set fb_tmp_25, $P5099
    repr_defined $I5013, fb_tmp_25
    unless $I5013 goto if67_else103 
    set $P5101, fb_tmp_25["$UNIT"]
    set $P5103, $P5101
    goto if67_end104
  if67_else103:
    null $P5102
    set $P5103, $P5102
  if67_end104:
    unless_null $P5103, vivi_68105
    nqp_get_sc_object $P5104, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5103, $P5104
  vivi_68105:
    unless_null $P5103, vivi_69106
    die "Contextual $*UNIT not found"
    box $P5105, "Contextual $*UNIT not found"
    set $P5103, $P5105
  vivi_69106:
    set $P5098, $P5103
  fallback102:
    $P5106 = $P5096."new"($P5098 :named("value"))
.annotate 'line', 110
    nqp_get_sc_object $P5109, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5108, $P5109, "QAST"
    get_who $P5107, $P5108
    set fb_tmp_26, $P5107
    repr_defined $I5014, fb_tmp_26
    unless $I5014 goto if70_else107 
    set $P5110, fb_tmp_26["Op"]
    set $P5112, $P5110
    goto if70_end108
  if70_else107:
    null $P5111
    set $P5112, $P5111
  if70_end108:
    unless_null $P5112, vivi_71109
    nqp_get_sc_object $P5113, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5112, $P5113
  vivi_71109:
.annotate 'line', 112
    nqp_get_sc_object $P5116, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5115, $P5116, "QAST"
    get_who $P5114, $P5115
    set fb_tmp_27, $P5114
    repr_defined $I5015, fb_tmp_27
    unless $I5015 goto if72_else110 
    set $P5117, fb_tmp_27["Op"]
    set $P5119, $P5117
    goto if72_end111
  if72_else110:
    null $P5118
    set $P5119, $P5118
  if72_end111:
    unless_null $P5119, vivi_73112
    nqp_get_sc_object $P5120, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5119, $P5120
  vivi_73112:
.annotate 'line', 114
    nqp_get_sc_object $P5123, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5122, $P5123, "QAST"
    get_who $P5121, $P5122
    set fb_tmp_28, $P5121
    repr_defined $I5016, fb_tmp_28
    unless $I5016 goto if74_else113 
    set $P5124, fb_tmp_28["SVal"]
    set $P5126, $P5124
    goto if74_end114
  if74_else113:
    null $P5125
    set $P5126, $P5125
  if74_end114:
    unless_null $P5126, vivi_75115
    nqp_get_sc_object $P5127, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5126, $P5127
  vivi_75115:
    $P5128 = $P5126."new"("ModuleLoader" :named("value"))
    $P5129 = $P5119."new"($P5128, "getcurhllsym" :named("op"))
.annotate 'line', 116
    nqp_get_sc_object $P5132, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5131, $P5132, "QAST"
    get_who $P5130, $P5131
    set fb_tmp_29, $P5130
    repr_defined $I5017, fb_tmp_29
    unless $I5017 goto if76_else116 
    set $P5133, fb_tmp_29["SVal"]
    set $P5135, $P5133
    goto if76_end117
  if76_else116:
    null $P5134
    set $P5135, $P5134
  if76_end117:
    unless_null $P5135, vivi_77118
    nqp_get_sc_object $P5136, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5135, $P5136
  vivi_77118:
    find_lex $P5137, "$setting_name"
    $P5138 = $P5135."new"($P5137 :named("value"))
    $P5139 = $P5112."new"($P5129, $P5138, "callmethod" :named("op"), "load_setting" :named("name"))
    $P5140 = $P5089."new"($P5106, $P5139, "forceouterctx" :named("op"))
    $P5141 = $P5025."new"($P5083 :named("parrot"), $P5140 :named("jvm"))
    set $P102, $P5141
.annotate 'line', 118
    find_lex $P5143, "self"
    nqp_decontainerize $P5142, $P5143
    $P5144 = $P5142."is_precompilation_mode"()
    unless $P5144 goto if78_else119 
.annotate 'line', 119
    find_lex $P5146, "self"
    nqp_decontainerize $P5145, $P5146
    nqp_get_sc_object $P5149, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5148, $P5149, "QAST"
    get_who $P5147, $P5148
    set fb_tmp_30, $P5147
    repr_defined $I5018, fb_tmp_30
    unless $I5018 goto if79_else121 
    set $P5150, fb_tmp_30["Stmts"]
    set $P5152, $P5150
    goto if79_end122
  if79_else121:
    null $P5151
    set $P5152, $P5151
  if79_end122:
    unless_null $P5152, vivi_80123
    nqp_get_sc_object $P5153, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5152, $P5153
  vivi_80123:
.annotate 'line', 120
    nqp_get_sc_object $P5156, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5155, $P5156, "QAST"
    get_who $P5154, $P5155
    set fb_tmp_31, $P5154
    repr_defined $I5019, fb_tmp_31
    unless $I5019 goto if81_else124 
    set $P5157, fb_tmp_31["Op"]
    set $P5159, $P5157
    goto if81_end125
  if81_else124:
    null $P5158
    set $P5159, $P5158
  if81_end125:
    unless_null $P5159, vivi_82126
    nqp_get_sc_object $P5160, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5159, $P5160
  vivi_82126:
.annotate 'line', 122
    nqp_get_sc_object $P5163, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5162, $P5163, "QAST"
    get_who $P5161, $P5162
    set fb_tmp_32, $P5161
    repr_defined $I5020, fb_tmp_32
    unless $I5020 goto if83_else127 
    set $P5164, fb_tmp_32["VM"]
    set $P5166, $P5164
    goto if83_end128
  if83_else127:
    null $P5165
    set $P5166, $P5165
  if83_end128:
    unless_null $P5166, vivi_84129
    nqp_get_sc_object $P5167, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5166, $P5167
  vivi_84129:
.annotate 'line', 123
    nqp_get_sc_object $P5170, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5169, $P5170, "QAST"
    get_who $P5168, $P5169
    set fb_tmp_33, $P5168
    repr_defined $I5021, fb_tmp_33
    unless $I5021 goto if85_else130 
    set $P5171, fb_tmp_33["SVal"]
    set $P5173, $P5171
    goto if85_end131
  if85_else130:
    null $P5172
    set $P5173, $P5172
  if85_end131:
    unless_null $P5173, vivi_86132
    nqp_get_sc_object $P5174, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5173, $P5174
  vivi_86132:
    $P5175 = $P5173."new"("ModuleLoader.pbc" :named("value"))
.annotate 'line', 124
    nqp_get_sc_object $P5178, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5177, $P5178, "QAST"
    get_who $P5176, $P5177
    set fb_tmp_34, $P5176
    repr_defined $I5022, fb_tmp_34
    unless $I5022 goto if87_else133 
    set $P5179, fb_tmp_34["SVal"]
    set $P5181, $P5179
    goto if87_end134
  if87_else133:
    null $P5180
    set $P5181, $P5180
  if87_end134:
    unless_null $P5181, vivi_88135
    nqp_get_sc_object $P5182, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5181, $P5182
  vivi_88135:
    $P5183 = $P5181."new"("ModuleLoader.class" :named("value"))
    $P5184 = $P5166."new"($P5175 :named("parrot"), $P5183 :named("jvm"))
    $P5185 = $P5159."new"($P5184, "loadbytecode" :named("op"))
    $P5186 = $P5152."new"($P5185, $P102)
    $P5187 = $P5145."add_load_dependency_task"($P5186 :named("deserialize_past"))
    goto if78_end120
  if78_else119:
.annotate 'line', 129
.annotate 'line', 130
    find_lex $P5189, "self"
    nqp_decontainerize $P5188, $P5189
    $P5190 = $P5188."add_fixup_task"($P102 :named("fixup_past"))
  if78_end120:
    getattribute $P5192, $P101, "lex_pad"
    find_lex $P5191, "RETURN"
    $P5193 = $P5191($P5192)
    .return ($P5193) 
.end
.HLL "nqp"
.namespace []
.sub "load_module" :subid("cuid_7_1360432459.413") :anon :lex :outer("cuid_375_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 139
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$module", $P101 
    .lex "self", _lex_param_0 
    .lex "$module_name", _lex_param_1 
    .lex "$cur_GLOBALish", _lex_param_2 
    .local pmc fb_tmp_35 
    .local pmc fb_tmp_36 
    .local pmc fb_tmp_37 
    .local pmc fb_tmp_38 
    .local pmc fb_tmp_39 
    .local pmc fb_tmp_40 
    .local pmc fb_tmp_41 
    .local pmc fb_tmp_42 
    .local pmc fb_tmp_43 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_136
    .lex "RETURN", $P102
.annotate 'line', 141
    find_lex $P5002, "$loader"
    $P5003 = $P5002."load_module"(_lex_param_1, _lex_param_2)
    set $P101, $P5003
.annotate 'line', 144
    nqp_decontainerize $P5004, _lex_param_0
    $P5005 = $P5004."is_precompilation_mode"()
    unless $P5005 goto if89_end139 
.annotate 'line', 145
    nqp_decontainerize $P5006, _lex_param_0
    nqp_get_sc_object $P5009, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5008, $P5009, "QAST"
    get_who $P5007, $P5008
    set fb_tmp_35, $P5007
    repr_defined $I5001, fb_tmp_35
    unless $I5001 goto if90_else140 
    set $P5010, fb_tmp_35["Stmts"]
    set $P5012, $P5010
    goto if90_end141
  if90_else140:
    null $P5011
    set $P5012, $P5011
  if90_end141:
    unless_null $P5012, vivi_91142
    nqp_get_sc_object $P5013, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5012, $P5013
  vivi_91142:
.annotate 'line', 146
    nqp_get_sc_object $P5016, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5015, $P5016, "QAST"
    get_who $P5014, $P5015
    set fb_tmp_36, $P5014
    repr_defined $I5002, fb_tmp_36
    unless $I5002 goto if92_else143 
    set $P5017, fb_tmp_36["Op"]
    set $P5019, $P5017
    goto if92_end144
  if92_else143:
    null $P5018
    set $P5019, $P5018
  if92_end144:
    unless_null $P5019, vivi_93145
    nqp_get_sc_object $P5020, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5019, $P5020
  vivi_93145:
.annotate 'line', 148
    nqp_get_sc_object $P5023, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5022, $P5023, "QAST"
    get_who $P5021, $P5022
    set fb_tmp_37, $P5021
    repr_defined $I5003, fb_tmp_37
    unless $I5003 goto if94_else146 
    set $P5024, fb_tmp_37["VM"]
    set $P5026, $P5024
    goto if94_end147
  if94_else146:
    null $P5025
    set $P5026, $P5025
  if94_end147:
    unless_null $P5026, vivi_95148
    nqp_get_sc_object $P5027, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5026, $P5027
  vivi_95148:
.annotate 'line', 149
    nqp_get_sc_object $P5030, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5029, $P5030, "QAST"
    get_who $P5028, $P5029
    set fb_tmp_38, $P5028
    repr_defined $I5004, fb_tmp_38
    unless $I5004 goto if96_else149 
    set $P5031, fb_tmp_38["SVal"]
    set $P5033, $P5031
    goto if96_end150
  if96_else149:
    null $P5032
    set $P5033, $P5032
  if96_end150:
    unless_null $P5033, vivi_97151
    nqp_get_sc_object $P5034, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5033, $P5034
  vivi_97151:
    $P5035 = $P5033."new"("ModuleLoader.pbc" :named("value"))
.annotate 'line', 150
    nqp_get_sc_object $P5038, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5037, $P5038, "QAST"
    get_who $P5036, $P5037
    set fb_tmp_39, $P5036
    repr_defined $I5005, fb_tmp_39
    unless $I5005 goto if98_else152 
    set $P5039, fb_tmp_39["SVal"]
    set $P5041, $P5039
    goto if98_end153
  if98_else152:
    null $P5040
    set $P5041, $P5040
  if98_end153:
    unless_null $P5041, vivi_99154
    nqp_get_sc_object $P5042, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5041, $P5042
  vivi_99154:
    $P5043 = $P5041."new"("ModuleLoader.class" :named("value"))
    $P5044 = $P5026."new"($P5035 :named("parrot"), $P5043 :named("jvm"))
    $P5045 = $P5019."new"($P5044, "loadbytecode" :named("op"))
.annotate 'line', 152
    nqp_get_sc_object $P5048, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5047, $P5048, "QAST"
    get_who $P5046, $P5047
    set fb_tmp_40, $P5046
    repr_defined $I5006, fb_tmp_40
    unless $I5006 goto if100_else155 
    set $P5049, fb_tmp_40["Op"]
    set $P5051, $P5049
    goto if100_end156
  if100_else155:
    null $P5050
    set $P5051, $P5050
  if100_end156:
    unless_null $P5051, vivi_101157
    nqp_get_sc_object $P5052, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5051, $P5052
  vivi_101157:
.annotate 'line', 154
    nqp_get_sc_object $P5055, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5054, $P5055, "QAST"
    get_who $P5053, $P5054
    set fb_tmp_41, $P5053
    repr_defined $I5007, fb_tmp_41
    unless $I5007 goto if102_else158 
    set $P5056, fb_tmp_41["Op"]
    set $P5058, $P5056
    goto if102_end159
  if102_else158:
    null $P5057
    set $P5058, $P5057
  if102_end159:
    unless_null $P5058, vivi_103160
    nqp_get_sc_object $P5059, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5058, $P5059
  vivi_103160:
.annotate 'line', 156
    nqp_get_sc_object $P5062, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5061, $P5062, "QAST"
    get_who $P5060, $P5061
    set fb_tmp_42, $P5060
    repr_defined $I5008, fb_tmp_42
    unless $I5008 goto if104_else161 
    set $P5063, fb_tmp_42["SVal"]
    set $P5065, $P5063
    goto if104_end162
  if104_else161:
    null $P5064
    set $P5065, $P5064
  if104_end162:
    unless_null $P5065, vivi_105163
    nqp_get_sc_object $P5066, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5065, $P5066
  vivi_105163:
    $P5067 = $P5065."new"("ModuleLoader" :named("value"))
    $P5068 = $P5058."new"($P5067, "getcurhllsym" :named("op"))
.annotate 'line', 158
    nqp_get_sc_object $P5071, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5070, $P5071, "QAST"
    get_who $P5069, $P5070
    set fb_tmp_43, $P5069
    repr_defined $I5009, fb_tmp_43
    unless $I5009 goto if106_else164 
    set $P5072, fb_tmp_43["SVal"]
    set $P5074, $P5072
    goto if106_end165
  if106_else164:
    null $P5073
    set $P5074, $P5073
  if106_end165:
    unless_null $P5074, vivi_107166
    nqp_get_sc_object $P5075, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5074, $P5075
  vivi_107166:
    $P5076 = $P5074."new"(_lex_param_1 :named("value"))
    $P5077 = $P5051."new"($P5068, $P5076, "callmethod" :named("op"), "load_module" :named("name"))
    $P5078 = $P5012."new"($P5045, $P5077)
    $P5079 = $P5006."add_load_dependency_task"($P5078 :named("deserialize_past"))
  if89_end139:
    getattribute $P5081, $P101, "lex_pad"
    find_lex $P5080, "RETURN"
    $P5082 = $P5080($P5081)
    goto lexotic_137
  lexotic_136:
    .get_results ($P5082)
  lexotic_137:
    .return ($P5082) 
.end
.HLL "nqp"
.namespace []
.sub "import" :subid("cuid_8_1360432459.413") :anon :lex :outer("cuid_375_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 165
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5009 = 'cuid_377_1360432459.413' 
    capture_lex $P5009 
    .lex "$target", $P101 
    .lex "self", _lex_param_0 
    .lex "$stash", _lex_param_1 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
.annotate 'line', 166
    nqp_decontainerize $P5002, _lex_param_0
    $P5003 = $P5002."cur_lexpad"()
    set $P101, $P5003
    set $P5004, _lex_param_1
    iter $P5006, _lex_param_1
  for_next167:
    unless $P5006, for_done169
    shift $P5008, $P5006
  for_redo168:
    .const 'Sub' $P5007 = 'cuid_377_1360432459.413' 
    capture_lex $P5007
    $P5004 = $P5007($P5008)
    goto for_next167
  for_done169:
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_377_1360432459.413") :anon :lex :outer("cuid_8_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 167
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 168
    find_lex $P5002, "self"
    nqp_decontainerize $P5001, $P5002
    find_lex $P5003, "$target"
    $P5004 = _lex_param_0."key"()
    $P5005 = _lex_param_0."value"()
    $P5006 = $P5001."install_lexical_symbol"($P5003, $P5004, $P5005)
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "install_package_symbol" :subid("cuid_9_1360432459.413") :anon :lex :outer("cuid_375_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 174
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .const 'Sub' $P5012 = 'cuid_378_1360432459.413' 
    capture_lex $P5012 
    .lex "$name", $P101 
    .lex "$target", $P102 
    .lex "self", _lex_param_0 
    .lex "$package", _lex_param_1 
    .lex "@sym", _lex_param_2 
    .lex "$obj", _lex_param_3 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
    repr_clone $P5003, _lex_param_2
    set _lex_param_2, $P5003
.annotate 'line', 176
    $P5004 = _lex_param_2."pop"()
    set $S5001, $P5004
    box $P5005, $S5001
    set $P101, $P5005
    set $P102, _lex_param_1
    set $P5006, _lex_param_2
    iter $P5008, _lex_param_2
  for_next170:
    unless $P5008, for_done172
    shift $P5010, $P5008
  for_redo171:
    .const 'Sub' $P5009 = 'cuid_378_1360432459.413' 
    capture_lex $P5009
    $P5006 = $P5009($P5010)
    goto for_next170
  for_done172:
    get_who $P5011, $P102
    set $S5002, $P101
    set $P5011[$S5002], _lex_param_3
    .return (_lex_param_3) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_378_1360432459.413") :anon :lex :outer("cuid_9_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 180
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5002, "$target"
    set $S5001, _lex_param_0
    nqp_get_package_through_who $P5001, $P5002, $S5001
    store_lex "$target", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "install_lexical_symbol" :subid("cuid_10_1360432459.413") :anon :lex :outer("cuid_375_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 190
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "$fixup", $P101 
    .lex "self", _lex_param_0 
    .lex "$block", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$obj", _lex_param_3 
    .local pmc fb_tmp_44 
    .local pmc fb_tmp_45 
    .local pmc fb_tmp_46 
    .local pmc fb_tmp_47 
    .local pmc fb_tmp_48 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
.annotate 'line', 192
    _lex_param_1."symbol"(_lex_param_2, "lexical" :named("scope"), _lex_param_3 :named("value"))
.annotate 'line', 193
    set fb_tmp_44, _lex_param_1
    repr_defined $I5001, fb_tmp_44
    unless $I5001 goto if108_else173 
    set $P5002, fb_tmp_44[0]
    set $P5004, $P5002
    goto if108_end174
  if108_else173:
    null $P5003
    set $P5004, $P5003
  if108_end174:
    unless_null $P5004, vivi_109175
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_109175:
    nqp_get_sc_object $P5008, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5007, $P5008, "QAST"
    get_who $P5006, $P5007
    set fb_tmp_45, $P5006
    repr_defined $I5002, fb_tmp_45
    unless $I5002 goto if110_else176 
    set $P5009, fb_tmp_45["Var"]
    set $P5011, $P5009
    goto if110_end177
  if110_else176:
    null $P5010
    set $P5011, $P5010
  if110_end177:
    unless_null $P5011, vivi_111178
    nqp_get_sc_object $P5012, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5011, $P5012
  vivi_111178:
    $P5013 = $P5011."new"("lexical" :named("scope"), _lex_param_2 :named("name"), "var" :named("decl"))
    $P5004."push"($P5013)
.annotate 'line', 196
    nqp_get_sc_object $P5016, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5015, $P5016, "QAST"
    get_who $P5014, $P5015
    set fb_tmp_46, $P5014
    repr_defined $I5003, fb_tmp_46
    unless $I5003 goto if112_else179 
    set $P5017, fb_tmp_46["Op"]
    set $P5019, $P5017
    goto if112_end180
  if112_else179:
    null $P5018
    set $P5019, $P5018
  if112_end180:
    unless_null $P5019, vivi_113181
    nqp_get_sc_object $P5020, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5019, $P5020
  vivi_113181:
.annotate 'line', 199
    nqp_get_sc_object $P5023, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5022, $P5023, "QAST"
    get_who $P5021, $P5022
    set fb_tmp_47, $P5021
    repr_defined $I5004, fb_tmp_47
    unless $I5004 goto if114_else182 
    set $P5024, fb_tmp_47["SVal"]
    set $P5026, $P5024
    goto if114_end183
  if114_else182:
    null $P5025
    set $P5026, $P5025
  if114_end183:
    unless_null $P5026, vivi_115184
    nqp_get_sc_object $P5027, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5026, $P5027
  vivi_115184:
    $P5028 = $P5026."new"(_lex_param_2 :named("value"))
.annotate 'line', 200
    nqp_get_sc_object $P5031, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5030, $P5031, "QAST"
    get_who $P5029, $P5030
    set fb_tmp_48, $P5029
    repr_defined $I5005, fb_tmp_48
    unless $I5005 goto if116_else185 
    set $P5032, fb_tmp_48["WVal"]
    set $P5034, $P5032
    goto if116_end186
  if116_else185:
    null $P5033
    set $P5034, $P5033
  if116_end186:
    unless_null $P5034, vivi_117187
    nqp_get_sc_object $P5035, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5034, $P5035
  vivi_117187:
    $P5036 = $P5034."new"(_lex_param_3 :named("value"))
    $P5037 = $P5019."new"(_lex_param_1, $P5028, $P5036, "setstaticlex" :named("op"))
    set $P101, $P5037
.annotate 'line', 202
    nqp_decontainerize $P5038, _lex_param_0
    $P5039 = $P5038."add_fixup_task"($P101 :named("deserialize_past"), $P101 :named("fixup_past"))
    .return ($P5039) 
.end
.HLL "nqp"
.namespace []
.sub "install_package_routine" :subid("cuid_11_1360432459.413") :anon :lex :outer("cuid_375_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 207
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "$fixup", $P101 
    .lex "self", _lex_param_0 
    .lex "$package", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$past_block", _lex_param_3 
    .local pmc fb_tmp_49 
    .local pmc fb_tmp_50 
    .local pmc fb_tmp_51 
    .local pmc fb_tmp_52 
    .local pmc fb_tmp_53 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
.annotate 'line', 208
    nqp_get_sc_object $P5004, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5003, $P5004, "QAST"
    get_who $P5002, $P5003
    set fb_tmp_49, $P5002
    repr_defined $I5001, fb_tmp_49
    unless $I5001 goto if118_else188 
    set $P5005, fb_tmp_49["Op"]
    set $P5007, $P5005
    goto if118_end189
  if118_else188:
    null $P5006
    set $P5007, $P5006
  if118_end189:
    unless_null $P5007, vivi_119190
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5007, $P5008
  vivi_119190:
.annotate 'line', 210
    nqp_get_sc_object $P5011, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5010, $P5011, "QAST"
    get_who $P5009, $P5010
    set fb_tmp_50, $P5009
    repr_defined $I5002, fb_tmp_50
    unless $I5002 goto if120_else191 
    set $P5012, fb_tmp_50["Op"]
    set $P5014, $P5012
    goto if120_end192
  if120_else191:
    null $P5013
    set $P5014, $P5013
  if120_end192:
    unless_null $P5014, vivi_121193
    nqp_get_sc_object $P5015, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5014, $P5015
  vivi_121193:
    nqp_get_sc_object $P5018, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5017, $P5018, "QAST"
    get_who $P5016, $P5017
    set fb_tmp_51, $P5016
    repr_defined $I5003, fb_tmp_51
    unless $I5003 goto if122_else194 
    set $P5019, fb_tmp_51["WVal"]
    set $P5021, $P5019
    goto if122_end195
  if122_else194:
    null $P5020
    set $P5021, $P5020
  if122_end195:
    unless_null $P5021, vivi_123196
    nqp_get_sc_object $P5022, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5021, $P5022
  vivi_123196:
    $P5023 = $P5021."new"(_lex_param_1 :named("value"))
    $P5024 = $P5014."new"($P5023, "who" :named("op"))
.annotate 'line', 211
    nqp_get_sc_object $P5027, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5026, $P5027, "QAST"
    get_who $P5025, $P5026
    set fb_tmp_52, $P5025
    repr_defined $I5004, fb_tmp_52
    unless $I5004 goto if124_else197 
    set $P5028, fb_tmp_52["SVal"]
    set $P5030, $P5028
    goto if124_end198
  if124_else197:
    null $P5029
    set $P5030, $P5029
  if124_end198:
    unless_null $P5030, vivi_125199
    nqp_get_sc_object $P5031, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5030, $P5031
  vivi_125199:
    set $S5001, _lex_param_2
    $P5032 = $P5030."new"($S5001 :named("value"))
.annotate 'line', 212
    nqp_get_sc_object $P5035, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5034, $P5035, "QAST"
    get_who $P5033, $P5034
    set fb_tmp_53, $P5033
    repr_defined $I5005, fb_tmp_53
    unless $I5005 goto if126_else200 
    set $P5036, fb_tmp_53["BVal"]
    set $P5038, $P5036
    goto if126_end201
  if126_else200:
    null $P5037
    set $P5038, $P5037
  if126_end201:
    unless_null $P5038, vivi_127202
    nqp_get_sc_object $P5039, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5038, $P5039
  vivi_127202:
    $P5040 = $P5038."new"(_lex_param_3 :named("value"))
    $P5041 = $P5007."new"($P5024, $P5032, $P5040, "bindkey" :named("op"))
    set $P101, $P5041
.annotate 'line', 214
    nqp_decontainerize $P5042, _lex_param_0
    $P5043 = $P5042."add_fixup_task"($P101 :named("deserialize_past"), $P101 :named("fixup_past"))
    .return ($P5043) 
.end
.HLL "nqp"
.namespace []
.sub "create_code" :subid("cuid_17_1360432459.413") :anon :lex :outer("cuid_375_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 219
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 :named("code_type_name") :optional 
    .param int haz_param_1 :opt_flag 
    .const 'Sub' $P5120 = 'cuid_12_1360432459.413' 
    capture_lex $P5120 
    .const 'Sub' $P5120 = 'cuid_382_1360432459.413' 
    capture_lex $P5120 
    .const 'Sub' $P5120 = 'cuid_383_1360432459.413' 
    capture_lex $P5120 
    .const 'Sub' $P5120 = 'cuid_384_1360432459.413' 
    capture_lex $P5120 
    .lex "$code_type", $P101 
    .lex "$have_code_type", $P102 
    .lex "$stub_code", $P103 
    .lex "$code_obj", $P104 
    .lex "$fixups", $P105 
    .lex "$dummy", $P106 
    .lex "$code_ref_idx", $P107 
    .lex "self", _lex_param_0 
    .lex "$past", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$is_dispatcher", _lex_param_3 
    .lex "$code_type_name", _lex_param_4 
    .local pmc fb_tmp_54 
    .local pmc fb_tmp_55 
    .local pmc fb_tmp_71 
    .local pmc fb_tmp_72 
    .local pmc fb_tmp_73 
    .local pmc fb_tmp_95 
    .local pmc fb_tmp_96 
    .local pmc fb_tmp_97 
    .local pmc fb_tmp_98 
    .local pmc fb_tmp_99 
    if haz_param_1, default376
    box $P5119, "NQPRoutine"
    set _lex_param_4, $P5119
  default376:
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P105, $P5005
    nqp_get_sc_object $P5006, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P106, $P5006
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P107, $P5007
    root_new $P108, ['parrot';'Continuation']
    set_label $P108, lexotic_203
    .lex "RETURN", $P108
    box $P5008, 0
    set $P102, $P5008
    new $P5031, 'ExceptionHandler'
    set_label $P5031, catch_handler_135216
    $P5031.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5031
.annotate 'line', 223
.annotate 'line', 224
    nqp_decontainerize $P5009, _lex_param_0
    new $P5010, 'ResizablePMCArray'
    push $P5010, _lex_param_4
    $P5011 = $P5009."find_sym"($P5010)
    set $P101, $P5011
.annotate 'line', 225
    find_dynamic_lex $P5013, "$*PACKAGE"
    unless_null $P5013, fallback205
    nqp_get_sc_object $P5015, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5014, $P5015
    set fb_tmp_54, $P5014
    repr_defined $I5002, fb_tmp_54
    unless $I5002 goto if128_else206 
    set $P5016, fb_tmp_54["$PACKAGE"]
    set $P5018, $P5016
    goto if128_end207
  if128_else206:
    null $P5017
    set $P5018, $P5017
  if128_end207:
    unless_null $P5018, vivi_129208
    nqp_get_sc_object $P5019, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5018, $P5019
  vivi_129208:
    unless_null $P5018, vivi_130209
    die "Contextual $*PACKAGE not found"
    box $P5020, "Contextual $*PACKAGE not found"
    set $P5018, $P5020
  vivi_130209:
    set $P5013, $P5018
  fallback205:
    get_how $P5012, $P5013
    find_dynamic_lex $P5021, "$*PACKAGE"
    unless_null $P5021, fallback210
    nqp_get_sc_object $P5023, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5022, $P5023
    set fb_tmp_55, $P5022
    repr_defined $I5003, fb_tmp_55
    unless $I5003 goto if131_else211 
    set $P5024, fb_tmp_55["$PACKAGE"]
    set $P5026, $P5024
    goto if131_end212
  if131_else211:
    null $P5025
    set $P5026, $P5025
  if131_end212:
    unless_null $P5026, vivi_132213
    nqp_get_sc_object $P5027, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5026, $P5027
  vivi_132213:
    unless_null $P5026, vivi_133214
    die "Contextual $*PACKAGE not found"
    box $P5028, "Contextual $*PACKAGE not found"
    set $P5026, $P5028
  vivi_133214:
    set $P5021, $P5026
  fallback210:
    $P5029 = $P5012."name"($P5021)
    set $S5001, $P5029
    set $S5002, _lex_param_4
    isne $I5001, $S5001, $S5002
    box $P5030, $I5001
    set $P102, $P5030
    set $P5032, $P102
    pop_eh 
    goto skip_handler_134215
  catch_handler_135216:
    .get_results ($P5031) 
    set $I10001, 1
    set $P5031["handled"], $I10001
    nqp_get_sc_object $P10001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    finalize $P5031
    pop_upto_eh $P5031
    pop_eh 
    set $P5032, $P10001
    goto skip_handler_134215
  skip_handler_134215:
    .const 'Sub' $P5034 = 'cuid_12_1360432459.413' 
    capture_lex $P5034
    newclosure $P5033, $P5034
    set $P103, $P5033
    unless $P102 goto if169_end278 
.annotate 'line', 271
    repr_instance_of $P5035, $P101
    set $P104, $P5035
  if169_end278:
.annotate 'line', 276
    nqp_get_sc_object $P5038, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5037, $P5038, "QAST"
    get_who $P5036, $P5037
    set fb_tmp_71, $P5036
    repr_defined $I5004, fb_tmp_71
    unless $I5004 goto if170_else279 
    set $P5039, fb_tmp_71["Stmts"]
    set $P5041, $P5039
    goto if170_end280
  if170_else279:
    null $P5040
    set $P5041, $P5040
  if170_end280:
    unless_null $P5041, vivi_171281
    nqp_get_sc_object $P5042, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5041, $P5042
  vivi_171281:
    $P5043 = $P5041."new"()
    set $P105, $P5043
    set fb_tmp_72, _lex_param_1
    repr_defined $I5006, fb_tmp_72
    unless $I5006 goto if173_else284 
    set $P5044, fb_tmp_72["compile_time_dummy"]
    set $P5046, $P5044
    goto if173_end285
  if173_else284:
    null $P5045
    set $P5046, $P5045
  if173_end285:
    unless_null $P5046, vivi_174286
    nqp_get_sc_object $P5047, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5046, $P5047
  vivi_174286:
    defined $I5005, $P5046
    unless $I5005 goto if172_else282 
.annotate 'line', 279
    set fb_tmp_73, _lex_param_1
    repr_defined $I5007, fb_tmp_73
    unless $I5007 goto if175_else287 
    set $P5048, fb_tmp_73["compile_time_dummy"]
    set $P5050, $P5048
    goto if175_end288
  if175_else287:
    null $P5049
    set $P5050, $P5049
  if175_end288:
    unless_null $P5050, vivi_176289
    nqp_get_sc_object $P5051, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5050, $P5051
  vivi_176289:
    set $P106, $P5050
    goto if172_end283
  if172_else282:
.annotate 'line', 282
    nqp_fresh_stub $P5052, $P103
    set $P106, $P5052
    set $S5003, _lex_param_2
    assign $P106, $S5003
    setprop $P106, "STATIC_CODE_REF", $P106
    setprop $P106, "COMPILER_STUB", $P106
.annotate 'line', 290
    nqp_decontainerize $P5053, _lex_param_0
    $P5054 = $P5053."add_root_code_ref"($P106, _lex_param_1)
    set $P107, $P5054
    nqp_decontainerize $P5055, _lex_param_0
    nqp_get_sc_object $P5056, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 3
    repr_get_attr_obj $P5057, $P5055, $P5056, "%!code_stub_sc_idx"
.annotate 'line', 291
    $P5058 = _lex_param_1."cuid"()
    set $S5004, $P5058
    set $P5057[$S5004], $P107
    set _lex_param_1["compile_time_dummy"], $P106
    set $P5070, $P102
    unless $P102 goto if177_end291 
.annotate 'line', 297
    nqp_decontainerize $P5059, _lex_param_0
    nqp_get_sc_object $P5060, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 3
    repr_get_attr_obj $P5061, $P5059, $P5060, "%!code_object_fixup_list"
.annotate 'line', 298
    $P5062 = _lex_param_1."cuid"()
    set $S5005, $P5062
    set $P5061[$S5005], $P105
.annotate 'line', 299
    nqp_decontainerize $P5063, _lex_param_0
    $P5064 = $P5063."is_precompilation_mode"()
    unless $P5064 goto if178_else292 
    .const 'Sub' $P5065 = 'cuid_382_1360432459.413' 
    capture_lex $P5065
    $P5066 = $P5065()
    set $P5069, $P5066
    goto if178_end293
  if178_else292:
    .const 'Sub' $P5067 = 'cuid_383_1360432459.413' 
    capture_lex $P5067
    $P5068 = $P5067()
    set $P5069, $P5068
  if178_end293:
    set $P5070, $P5069
  if177_end291:
  if172_end283:
.annotate 'line', 339
    nqp_decontainerize $P5071, _lex_param_0
    $P5071."add_fixup_task"($P105 :named("fixup_past"))
    unless $P102 goto if199_else324 
    .const 'Sub' $P5072 = 'cuid_384_1360432459.413' 
    capture_lex $P5072
    $P5073 = $P5072()
    set $P5118, $P5073
    goto if199_end325
  if199_else324:
.annotate 'line', 378
.annotate 'line', 381
    nqp_get_sc_object $P5076, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5075, $P5076, "QAST"
    get_who $P5074, $P5075
    set fb_tmp_95, $P5074
    repr_defined $I5008, fb_tmp_95
    unless $I5008 goto if223_else361 
    set $P5077, fb_tmp_95["VM"]
    set $P5079, $P5077
    goto if223_end362
  if223_else361:
    null $P5078
    set $P5079, $P5078
  if223_end362:
    unless_null $P5079, vivi_224363
    nqp_get_sc_object $P5080, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5079, $P5080
  vivi_224363:
.annotate 'line', 383
    nqp_get_sc_object $P5083, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5082, $P5083, "QAST"
    get_who $P5081, $P5082
    set fb_tmp_96, $P5081
    repr_defined $I5009, fb_tmp_96
    unless $I5009 goto if225_else364 
    set $P5084, fb_tmp_96["VM"]
    set $P5086, $P5084
    goto if225_end365
  if225_else364:
    null $P5085
    set $P5086, $P5085
  if225_end365:
    unless_null $P5086, vivi_226366
    nqp_get_sc_object $P5087, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5086, $P5087
  vivi_226366:
.annotate 'line', 385
    nqp_get_sc_object $P5090, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5089, $P5090, "QAST"
    get_who $P5088, $P5089
    set fb_tmp_97, $P5088
    repr_defined $I5010, fb_tmp_97
    unless $I5010 goto if227_else367 
    set $P5091, fb_tmp_97["SVal"]
    set $P5093, $P5091
    goto if227_end368
  if227_else367:
    null $P5092
    set $P5093, $P5092
  if227_end368:
    unless_null $P5093, vivi_228369
    nqp_get_sc_object $P5094, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5093, $P5094
  vivi_228369:
    nqp_decontainerize $P5095, _lex_param_0
    $P5096 = $P5095."handle"()
    $P5097 = $P5093."new"($P5096 :named("value"))
.annotate 'line', 386
    nqp_get_sc_object $P5100, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5099, $P5100, "QAST"
    get_who $P5098, $P5099
    set fb_tmp_98, $P5098
    repr_defined $I5011, fb_tmp_98
    unless $I5011 goto if229_else370 
    set $P5101, fb_tmp_98["IVal"]
    set $P5103, $P5101
    goto if229_end371
  if229_else370:
    null $P5102
    set $P5103, $P5102
  if229_end371:
    unless_null $P5103, vivi_230372
    nqp_get_sc_object $P5104, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5103, $P5104
  vivi_230372:
    $P5105 = $P5103."new"($P107 :named("value"))
    $P5106 = $P5086."new"($P5097, $P5105, "nqp_get_sc_code_ref Psi" :named("pirop"))
.annotate 'line', 388
    nqp_get_sc_object $P5109, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5108, $P5109, "QAST"
    get_who $P5107, $P5108
    set fb_tmp_99, $P5107
    repr_defined $I5012, fb_tmp_99
    unless $I5012 goto if231_else373 
    set $P5110, fb_tmp_99["BVal"]
    set $P5112, $P5110
    goto if231_end374
  if231_else373:
    null $P5111
    set $P5112, $P5111
  if231_end374:
    unless_null $P5112, vivi_232375
    nqp_get_sc_object $P5113, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5112, $P5113
  vivi_232375:
    $P5114 = $P5112."new"(_lex_param_1 :named("value"))
    $P5115 = $P5079."new"($P5106, $P5114, "assign vPP" :named("pirop"))
    $P105."push"($P5115)
    find_lex $P5116, "RETURN"
    $P5117 = $P5116($P106)
    set $P5118, $P5117
  if199_end325:
    goto lexotic_204
  lexotic_203:
    .get_results ($P5118)
  lexotic_204:
    .return ($P5118) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_12_1360432459.413") :anon :lex :outer("cuid_17_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 232
    .param pmc _lex_param_0 :slurpy 
    .param pmc _lex_param_1 :slurpy :named 
    .const 'Sub' $P5031 = 'cuid_381_1360432459.413' 
    capture_lex $P5031 
    .lex "$nqpcomp", $P101 
    .lex "$post", $P102 
    .lex "$pir", $P103 
    .lex "$compiled", $P104 
    .lex "$c", $P105 
    .lex "$i", $P106 
    .lex "@args", _lex_param_0 
    .lex "%named", _lex_param_1 
    .local pmc fb_tmp_56 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P105, $P5005
    nqp_get_sc_object $P5006, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P106, $P5006
.annotate 'line', 234
    find_lex $P5007, "$past"
    find_lex $P5009, "self"
    nqp_decontainerize $P5008, $P5009
    $P5010 = $P5008."libs"()
    $P5007."unshift"($P5010)
    compreg $P5011, "nqp"
    set $P101, $P5011
.annotate 'line', 236
    nqp_get_sc_object $P5014, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5013, $P5014, "QAST"
    get_who $P5012, $P5013
    set fb_tmp_56, $P5012
    repr_defined $I5001, fb_tmp_56
    unless $I5001 goto if136_else217 
    set $P5015, fb_tmp_56["CompUnit"]
    set $P5017, $P5015
    goto if136_end218
  if136_else217:
    null $P5016
    set $P5017, $P5016
  if136_end218:
    unless_null $P5017, vivi_137219
    nqp_get_sc_object $P5018, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5017, $P5018
  vivi_137219:
    find_lex $P5019, "$past"
    $P5020 = $P5017."new"($P5019, "nqp" :named("hll"))
    $P5021 = $P101."post"($P5020)
    set $P102, $P5021
.annotate 'line', 237
    $P5022 = $P101."pir"($P102)
    set $P103, $P5022
.annotate 'line', 238
    $P5023 = $P101."evalpmc"($P103)
    set $P104, $P5023
    elements $I5002, $P104
    box $P5024, $I5002
    set $P105, $P5024
    box $P5025, 0
    set $P106, $P5025
  while138_test220:
    set $N5001, $P106
    set $N5002, $P105
    islt $I5003, $N5001, $N5002
    box $P5029, $I5003
    set $P5028, $P5029
    unless $I5003 goto while138_done224 
  while138_redo222:
    .const 'Sub' $P5026 = 'cuid_381_1360432459.413' 
    capture_lex $P5026
    $P5027 = $P5026()
    set $P5028, $P5027
    goto while138_test220 
  while138_done224:
.annotate 'line', 266
    $P5030 = $P104(_lex_param_0 :flat, _lex_param_1 :flat :named)
    .return ($P5030) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_381_1360432459.413") :anon :lex :outer("cuid_12_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 243
    .const 'Sub' $P5017 = 'cuid_380_1360432459.413' 
    capture_lex $P5017 
    .lex "$subid", $P101 
    .local pmc fb_tmp_57 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
.annotate 'line', 244
    find_lex $P5002, "$compiled"
    set fb_tmp_57, $P5002
    repr_defined $I5001, fb_tmp_57
    unless $I5001 goto if139_else225 
    find_lex $P5004, "$i"
    set $I5002, $P5004
    set $P5003, fb_tmp_57[$I5002]
    set $P5006, $P5003
    goto if139_end226
  if139_else225:
    null $P5005
    set $P5006, $P5005
  if139_end226:
    unless_null $P5006, vivi_140227
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_140227:
    $P5008 = $P5006."get_subid"()
    set $P101, $P5008
    find_lex $P5010, "self"
    nqp_decontainerize $P5009, $P5010
    nqp_get_sc_object $P5011, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 3
    repr_get_attr_obj $P5012, $P5009, $P5011, "%!code_objects_to_fix_up"
    set $S5001, $P101
    exists $I5003, $P5012[$S5001]
    unless $I5003 goto if141_end229 
    .const 'Sub' $P5013 = 'cuid_380_1360432459.413' 
    capture_lex $P5013
    $P5014 = $P5013()
  if141_end229:
    find_lex $P5015, "$i"
    set $N5002, $P5015
    set $N5003, 1
    add $N5001, $N5002, $N5003
    box $P5016, $N5001
    store_lex "$i", $P5016
    .return ($P5016) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_380_1360432459.413") :anon :lex :outer("cuid_381_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 245
    .const 'Sub' $P5095 = 'cuid_379_1360432459.413' 
    capture_lex $P5095 
    .lex "$static", $P101 
    .lex "$fixup_stmts", $P102 
    .local pmc fb_tmp_58 
    .local pmc fb_tmp_59 
    .local pmc fb_tmp_60 
    .local pmc fb_tmp_61 
    .local pmc fb_tmp_62 
    .local pmc fb_tmp_66 
    .local pmc fb_tmp_67 
    .local pmc fb_tmp_68 
    .local pmc fb_tmp_69 
    .local pmc fb_tmp_70 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
.annotate 'line', 249
    find_lex $P5004, "self"
    nqp_decontainerize $P5003, $P5004
    nqp_get_sc_object $P5005, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 3
    repr_get_attr_obj $P5006, $P5003, $P5005, "%!code_objects_to_fix_up"
    set fb_tmp_58, $P5006
    repr_defined $I5001, fb_tmp_58
    unless $I5001 goto if142_else230 
    find_lex $P5008, "$subid"
    set $S5001, $P5008
    set $P5007, fb_tmp_58[$S5001]
    set $P5010, $P5007
    goto if142_end231
  if142_else230:
    null $P5009
    set $P5010, $P5009
  if142_end231:
    unless_null $P5010, vivi_143232
    nqp_get_sc_object $P5011, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5010, $P5011
  vivi_143232:
    $P5012 = $P5010."shift"()
    set $P101, $P5012
    find_lex $P5014, "self"
    nqp_decontainerize $P5013, $P5014
    nqp_get_sc_object $P5015, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 3
    repr_get_attr_obj $P5016, $P5013, $P5015, "%!code_object_types"
    set fb_tmp_59, $P5016
    repr_defined $I5002, fb_tmp_59
    unless $I5002 goto if144_else233 
    find_lex $P5018, "$subid"
    set $S5002, $P5018
    set $P5017, fb_tmp_59[$S5002]
    set $P5020, $P5017
    goto if144_end234
  if144_else233:
    null $P5019
    set $P5020, $P5019
  if144_end234:
    unless_null $P5020, vivi_145235
    nqp_get_sc_object $P5021, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5020, $P5021
  vivi_145235:
    find_lex $P5022, "$compiled"
    set fb_tmp_60, $P5022
    repr_defined $I5003, fb_tmp_60
    unless $I5003 goto if146_else236 
    find_lex $P5024, "$i"
    set $I5004, $P5024
    set $P5023, fb_tmp_60[$I5004]
    set $P5026, $P5023
    goto if146_end237
  if146_else236:
    null $P5025
    set $P5026, $P5025
  if146_end237:
    unless_null $P5026, vivi_147238
    nqp_get_sc_object $P5027, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5026, $P5027
  vivi_147238:
    setattribute $P101, $P5020, "$!do", $P5026
    find_lex $P5029, "self"
    nqp_decontainerize $P5028, $P5029
    nqp_get_sc_object $P5030, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 3
    repr_get_attr_obj $P5031, $P5028, $P5030, "%!code_object_types"
    set fb_tmp_61, $P5031
    repr_defined $I5005, fb_tmp_61
    unless $I5005 goto if148_else239 
    find_lex $P5033, "$subid"
    set $S5003, $P5033
    set $P5032, fb_tmp_61[$S5003]
    set $P5035, $P5032
    goto if148_end240
  if148_else239:
    null $P5034
    set $P5035, $P5034
  if148_end240:
    unless_null $P5035, vivi_149241
    nqp_get_sc_object $P5036, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5035, $P5036
  vivi_149241:
    null $P5037
    setattribute $P101, $P5035, "$!clone_callback", $P5037
    find_lex $P5042, "self"
    nqp_decontainerize $P5041, $P5042
    nqp_get_sc_object $P5043, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 3
    repr_get_attr_obj $P5044, $P5041, $P5043, "%!code_objects_to_fix_up"
    set fb_tmp_62, $P5044
    repr_defined $I5006, fb_tmp_62
    unless $I5006 goto if150_else242 
    find_lex $P5046, "$subid"
    set $S5004, $P5046
    set $P5045, fb_tmp_62[$S5004]
    set $P5048, $P5045
    goto if150_end243
  if150_else242:
    null $P5047
    set $P5048, $P5047
  if150_end243:
    unless_null $P5048, vivi_151244
    nqp_get_sc_object $P5049, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5048, $P5049
  vivi_151244:
    set $P5038, $P5048
    iter $P5040, $P5048
  for_next254:
    unless $P5040, for_done256
    shift $P5051, $P5040
  for_redo255:
    .const 'Sub' $P5050 = 'cuid_379_1360432459.413' 
    capture_lex $P5050
    $P5038 = $P5050($P5051)
    goto for_next254
  for_done256:
    find_lex $P5052, "$compiled"
    set fb_tmp_66, $P5052
    repr_defined $I5007, fb_tmp_66
    unless $I5007 goto if158_else257 
    find_lex $P5054, "$i"
    set $I5008, $P5054
    set $P5053, fb_tmp_66[$I5008]
    set $P5056, $P5053
    goto if158_end258
  if158_else257:
    null $P5055
    set $P5056, $P5055
  if158_end258:
    unless_null $P5056, vivi_159259
    nqp_get_sc_object $P5057, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5056, $P5057
  vivi_159259:
    find_lex $P5058, "$compiled"
    set fb_tmp_67, $P5058
    repr_defined $I5009, fb_tmp_67
    unless $I5009 goto if160_else260 
    find_lex $P5060, "$i"
    set $I5010, $P5060
    set $P5059, fb_tmp_67[$I5010]
    set $P5062, $P5059
    goto if160_end261
  if160_else260:
    null $P5061
    set $P5062, $P5061
  if160_end261:
    unless_null $P5062, vivi_161262
    nqp_get_sc_object $P5063, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5062, $P5063
  vivi_161262:
    setprop $P5056, "STATIC_CODE_REF", $P5062
.annotate 'line', 257
    find_lex $P5065, "self"
    nqp_decontainerize $P5064, $P5065
    find_lex $P5067, "self"
    nqp_decontainerize $P5066, $P5067
    nqp_get_sc_object $P5068, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 3
    repr_get_attr_obj $P5069, $P5066, $P5068, "%!code_stub_sc_idx"
    set fb_tmp_68, $P5069
    repr_defined $I5011, fb_tmp_68
    unless $I5011 goto if162_else263 
    find_lex $P5071, "$subid"
    set $S5005, $P5071
    set $P5070, fb_tmp_68[$S5005]
    set $P5073, $P5070
    goto if162_end264
  if162_else263:
    null $P5072
    set $P5073, $P5072
  if162_end264:
    unless_null $P5073, vivi_163265
    nqp_get_sc_object $P5074, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5073, $P5074
  vivi_163265:
    find_lex $P5075, "$compiled"
    set fb_tmp_69, $P5075
    repr_defined $I5012, fb_tmp_69
    unless $I5012 goto if164_else266 
    find_lex $P5077, "$i"
    set $I5013, $P5077
    set $P5076, fb_tmp_69[$I5013]
    set $P5079, $P5076
    goto if164_end267
  if164_else266:
    null $P5078
    set $P5079, $P5078
  if164_end267:
    unless_null $P5079, vivi_165268
    nqp_get_sc_object $P5080, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5079, $P5080
  vivi_165268:
    $P5064."update_root_code_ref"($P5073, $P5079)
    find_lex $P5082, "self"
    nqp_decontainerize $P5081, $P5082
    nqp_get_sc_object $P5083, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 3
    repr_get_attr_obj $P5084, $P5081, $P5083, "%!code_object_fixup_list"
    set fb_tmp_70, $P5084
    repr_defined $I5014, fb_tmp_70
    unless $I5014 goto if166_else269 
    find_lex $P5086, "$subid"
    set $S5006, $P5086
    set $P5085, fb_tmp_70[$S5006]
    set $P5088, $P5085
    goto if166_end270
  if166_else269:
    null $P5087
    set $P5088, $P5087
  if166_end270:
    unless_null $P5088, vivi_167271
    nqp_get_sc_object $P5089, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5088, $P5089
  vivi_167271:
    set $P102, $P5088
    new $P5093, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5093, while168_handlers275
    push_eh $P5093
  while168_test272:
    $P5090 = $P102."list"()
    set $N5001, $P5090
    box $P5094, $N5001
    set $P5092, $P5094
    unless $N5001 goto while168_done276 
  while168_redo274:
.annotate 'line', 261
    $P5091 = $P102."shift"()
    set $P5092, $P5091
    goto while168_test272 
  while168_handlers275:
    .get_results ($P5093)
    pop_upto_eh $P5093
    getattribute $P5093, $P5093, 'type'
    eq $P5093, .CONTROL_LOOP_NEXT, while168_test272
    eq $P5093, .CONTROL_LOOP_REDO, while168_redo274
  while168_done276:
    pop_eh 
    .return ($P5092) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_379_1360432459.413") :anon :lex :outer("cuid_380_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 252
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_63 
    .local pmc fb_tmp_64 
    .local pmc fb_tmp_65 
    find_lex $P5002, "self"
    nqp_decontainerize $P5001, $P5002
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 3
    repr_get_attr_obj $P5004, $P5001, $P5003, "%!code_object_types"
    set fb_tmp_63, $P5004
    repr_defined $I5001, fb_tmp_63
    unless $I5001 goto if152_else245 
    find_lex $P5006, "$subid"
    set $S5001, $P5006
    set $P5005, fb_tmp_63[$S5001]
    set $P5008, $P5005
    goto if152_end246
  if152_else245:
    null $P5007
    set $P5008, $P5007
  if152_end246:
    unless_null $P5008, vivi_153247
    nqp_get_sc_object $P5009, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5008, $P5009
  vivi_153247:
    find_lex $P5011, "$compiled"
    set fb_tmp_64, $P5011
    repr_defined $I5002, fb_tmp_64
    unless $I5002 goto if154_else248 
    find_lex $P5013, "$i"
    set $I5003, $P5013
    set $P5012, fb_tmp_64[$I5003]
    set $P5015, $P5012
    goto if154_end249
  if154_else248:
    null $P5014
    set $P5015, $P5014
  if154_end249:
    unless_null $P5015, vivi_155250
    nqp_get_sc_object $P5016, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5015, $P5016
  vivi_155250:
    repr_clone $P5010, $P5015
    setattribute _lex_param_0, $P5008, "$!do", $P5010
    find_lex $P5018, "self"
    nqp_decontainerize $P5017, $P5018
    nqp_get_sc_object $P5019, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 3
    repr_get_attr_obj $P5020, $P5017, $P5019, "%!code_object_types"
    set fb_tmp_65, $P5020
    repr_defined $I5004, fb_tmp_65
    unless $I5004 goto if156_else251 
    find_lex $P5022, "$subid"
    set $S5002, $P5022
    set $P5021, fb_tmp_65[$S5002]
    set $P5024, $P5021
    goto if156_end252
  if156_else251:
    null $P5023
    set $P5024, $P5023
  if156_end252:
    unless_null $P5024, vivi_157253
    nqp_get_sc_object $P5025, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5024, $P5025
  vivi_157253:
    null $P5026
    setattribute _lex_param_0, $P5024, "$!clone_callback", $P5026
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_382_1360432459.413") :anon :lex :outer("cuid_17_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 299
    .const 'Sub' $P5012 = 'cuid_13_1360432459.413' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_14_1360432459.413' 
    capture_lex $P5012 
    .lex "$cb", $P101 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    .const 'Sub' $P5003 = 'cuid_13_1360432459.413' 
    capture_lex $P5003
    newclosure $P5002, $P5003
    set $P101, $P5002
    find_lex $P5004, "$code_obj"
    find_lex $P5005, "$code_type"
    setattribute $P5004, $P5005, "$!clone_callback", $P101
    find_lex $P5007, "self"
    nqp_decontainerize $P5006, $P5007
    nqp_get_sc_object $P5008, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 3
    repr_get_attr_obj $P5009, $P5006, $P5008, "@!clearup_tasks"
    .const 'Sub' $P5011 = 'cuid_14_1360432459.413' 
    capture_lex $P5011
    newclosure $P5010, $P5011
    push $P5009, $P5010
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_13_1360432459.413") :anon :lex :outer("cuid_382_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 300
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$do", $P101 
    .lex "$orig", _lex_param_0 
    .lex "$clone", _lex_param_1 
    .lex "$code_obj", _lex_param_2 
    .local pmc fb_tmp_74 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
.annotate 'line', 301
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    nqp_get_sc_object $P5004, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 3
    repr_get_attr_obj $P5005, $P5002, $P5004, "%!code_objects_to_fix_up"
    set fb_tmp_74, $P5005
    repr_defined $I5001, fb_tmp_74
    unless $I5001 goto if179_else294 
    find_lex $P5007, "$past"
    $P5008 = $P5007."cuid"()
    set $S5001, $P5008
    set $P5006, fb_tmp_74[$S5001]
    set $P5010, $P5006
    goto if179_end295
  if179_else294:
    null $P5009
    set $P5010, $P5009
  if179_end295:
    unless_null $P5010, vivi_180296
    nqp_get_sc_object $P5011, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5010, $P5011
  vivi_180296:
    $P5010."push"(_lex_param_2)
    find_lex $P5012, "$code_type"
    null $P5013
    setattribute _lex_param_2, $P5012, "$!clone_callback", $P5013
    find_lex $P5015, "$code_type"
    getattribute $P5014, _lex_param_2, $P5015, "$!do"
    set $P101, $P5014
    setprop $P101, "COMPILER_STUB", $P101
    .return () 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_14_1360432459.413") :anon :lex :outer("cuid_382_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 307

    find_lex $P5001, "$code_obj"
    find_lex $P5002, "$code_type"
    null $P5003
    setattribute $P5001, $P5002, "$!clone_callback", $P5003
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_383_1360432459.413") :anon :lex :outer("cuid_17_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 311
    .const 'Sub' $P5012 = 'cuid_15_1360432459.413' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_16_1360432459.413' 
    capture_lex $P5012 
    .lex "$cb", $P101 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    .const 'Sub' $P5003 = 'cuid_15_1360432459.413' 
    capture_lex $P5003
    newclosure $P5002, $P5003
    set $P101, $P5002
    find_lex $P5004, "$code_obj"
    find_lex $P5005, "$code_type"
    setattribute $P5004, $P5005, "$!clone_callback", $P101
    find_lex $P5007, "self"
    nqp_decontainerize $P5006, $P5007
    nqp_get_sc_object $P5008, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 3
    repr_get_attr_obj $P5009, $P5006, $P5008, "@!clearup_tasks"
    .const 'Sub' $P5011 = 'cuid_16_1360432459.413' 
    capture_lex $P5011
    newclosure $P5010, $P5011
    push $P5009, $P5010
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_15_1360432459.413") :anon :lex :outer("cuid_383_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 312
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$orig", _lex_param_0 
    .lex "$clone", _lex_param_1 
    .lex "$code_obj", _lex_param_2 
    .local pmc fb_tmp_75 
    .local pmc fb_tmp_76 
    .local pmc fb_tmp_77 
    .local pmc fb_tmp_78 
    .local pmc fb_tmp_79 
    .local pmc fb_tmp_80 
    .local pmc fb_tmp_81 
    .local pmc fb_tmp_82 
    .local pmc fb_tmp_83 
.annotate 'line', 314
    find_lex $P5002, "self"
    nqp_decontainerize $P5001, $P5002
    $P5001."add_object"(_lex_param_2)
.annotate 'line', 315
    find_lex $P5003, "$fixups"
    nqp_get_sc_object $P5006, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5005, $P5006, "QAST"
    get_who $P5004, $P5005
    set fb_tmp_75, $P5004
    repr_defined $I5001, fb_tmp_75
    unless $I5001 goto if181_else297 
    set $P5007, fb_tmp_75["Op"]
    set $P5009, $P5007
    goto if181_end298
  if181_else297:
    null $P5008
    set $P5009, $P5008
  if181_end298:
    unless_null $P5009, vivi_182299
    nqp_get_sc_object $P5010, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5009, $P5010
  vivi_182299:
.annotate 'line', 317
    nqp_get_sc_object $P5013, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5012, $P5013, "QAST"
    get_who $P5011, $P5012
    set fb_tmp_76, $P5011
    repr_defined $I5002, fb_tmp_76
    unless $I5002 goto if183_else300 
    set $P5014, fb_tmp_76["WVal"]
    set $P5016, $P5014
    goto if183_end301
  if183_else300:
    null $P5015
    set $P5016, $P5015
  if183_end301:
    unless_null $P5016, vivi_184302
    nqp_get_sc_object $P5017, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5016, $P5017
  vivi_184302:
    $P5018 = $P5016."new"(_lex_param_2 :named("value"))
.annotate 'line', 318
    nqp_get_sc_object $P5021, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5020, $P5021, "QAST"
    get_who $P5019, $P5020
    set fb_tmp_77, $P5019
    repr_defined $I5003, fb_tmp_77
    unless $I5003 goto if185_else303 
    set $P5022, fb_tmp_77["WVal"]
    set $P5024, $P5022
    goto if185_end304
  if185_else303:
    null $P5023
    set $P5024, $P5023
  if185_end304:
    unless_null $P5024, vivi_186305
    nqp_get_sc_object $P5025, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5024, $P5025
  vivi_186305:
    find_lex $P5026, "$code_type"
    $P5027 = $P5024."new"($P5026 :named("value"))
.annotate 'line', 319
    nqp_get_sc_object $P5030, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5029, $P5030, "QAST"
    get_who $P5028, $P5029
    set fb_tmp_78, $P5028
    repr_defined $I5004, fb_tmp_78
    unless $I5004 goto if187_else306 
    set $P5031, fb_tmp_78["SVal"]
    set $P5033, $P5031
    goto if187_end307
  if187_else306:
    null $P5032
    set $P5033, $P5032
  if187_end307:
    unless_null $P5033, vivi_188308
    nqp_get_sc_object $P5034, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5033, $P5034
  vivi_188308:
    $P5035 = $P5033."new"("$!do" :named("value"))
.annotate 'line', 320
    nqp_get_sc_object $P5038, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5037, $P5038, "QAST"
    get_who $P5036, $P5037
    set fb_tmp_79, $P5036
    repr_defined $I5005, fb_tmp_79
    unless $I5005 goto if189_else309 
    set $P5039, fb_tmp_79["VM"]
    set $P5041, $P5039
    goto if189_end310
  if189_else309:
    null $P5040
    set $P5041, $P5040
  if189_end310:
    unless_null $P5041, vivi_190311
    nqp_get_sc_object $P5042, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5041, $P5042
  vivi_190311:
.annotate 'line', 322
    nqp_get_sc_object $P5045, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5044, $P5045, "QAST"
    get_who $P5043, $P5044
    set fb_tmp_80, $P5043
    repr_defined $I5006, fb_tmp_80
    unless $I5006 goto if191_else312 
    set $P5046, fb_tmp_80["Op"]
    set $P5048, $P5046
    goto if191_end313
  if191_else312:
    null $P5047
    set $P5048, $P5047
  if191_end313:
    unless_null $P5048, vivi_192314
    nqp_get_sc_object $P5049, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5048, $P5049
  vivi_192314:
    nqp_get_sc_object $P5052, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5051, $P5052, "QAST"
    get_who $P5050, $P5051
    set fb_tmp_81, $P5050
    repr_defined $I5007, fb_tmp_81
    unless $I5007 goto if193_else315 
    set $P5053, fb_tmp_81["BVal"]
    set $P5055, $P5053
    goto if193_end316
  if193_else315:
    null $P5054
    set $P5055, $P5054
  if193_end316:
    unless_null $P5055, vivi_194317
    nqp_get_sc_object $P5056, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5055, $P5056
  vivi_194317:
    find_lex $P5057, "$past"
    $P5058 = $P5055."new"($P5057 :named("value"))
    $P5059 = $P5048."new"($P5058, "clone" :named("op"))
.annotate 'line', 323
    nqp_get_sc_object $P5062, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5061, $P5062, "QAST"
    get_who $P5060, $P5061
    set fb_tmp_82, $P5060
    repr_defined $I5008, fb_tmp_82
    unless $I5008 goto if195_else318 
    set $P5063, fb_tmp_82["WVal"]
    set $P5065, $P5063
    goto if195_end319
  if195_else318:
    null $P5064
    set $P5065, $P5064
  if195_end319:
    unless_null $P5065, vivi_196320
    nqp_get_sc_object $P5066, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5065, $P5066
  vivi_196320:
    $P5067 = $P5065."new"(_lex_param_2 :named("value"))
    $P5068 = $P5041."new"($P5059, $P5067, "set_sub_code_object 0PP" :named("pirop"))
    $P5069 = $P5009."new"($P5018, $P5027, $P5035, $P5068, "bindattr" :named("op"))
    $P5003."push"($P5069)
.annotate 'line', 328
    find_lex $P5071, "self"
    nqp_decontainerize $P5070, $P5071
    nqp_get_sc_object $P5072, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 3
    repr_get_attr_obj $P5073, $P5070, $P5072, "%!code_objects_to_fix_up"
    set fb_tmp_83, $P5073
    repr_defined $I5009, fb_tmp_83
    unless $I5009 goto if197_else321 
    find_lex $P5075, "$past"
    $P5076 = $P5075."cuid"()
    set $S5001, $P5076
    set $P5074, fb_tmp_83[$S5001]
    set $P5078, $P5074
    goto if197_end322
  if197_else321:
    null $P5077
    set $P5078, $P5077
  if197_end322:
    unless_null $P5078, vivi_198323
    nqp_get_sc_object $P5079, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5078, $P5079
  vivi_198323:
    $P5080 = $P5078."push"(_lex_param_2)
    .return ($P5080) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_16_1360432459.413") :anon :lex :outer("cuid_383_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 331

    find_lex $P5001, "$code_obj"
    find_lex $P5002, "$code_type"
    null $P5003
    setattribute $P5001, $P5002, "$!clone_callback", $P5003
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_384_1360432459.413") :anon :lex :outer("cuid_17_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 343
    .lex "$slot", $P101 
    .local pmc fb_tmp_84 
    .local pmc fb_tmp_85 
    .local pmc fb_tmp_86 
    .local pmc fb_tmp_87 
    .local pmc fb_tmp_88 
    .local pmc fb_tmp_89 
    .local pmc fb_tmp_90 
    .local pmc fb_tmp_91 
    .local pmc fb_tmp_92 
    .local pmc fb_tmp_93 
    .local pmc fb_tmp_94 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    find_lex $P5002, "$code_obj"
    find_lex $P5003, "$code_type"
    find_lex $P5004, "$dummy"
    setattribute $P5002, $P5003, "$!do", $P5004
    find_lex $P5005, "$is_dispatcher"
    unless $P5005 goto if200_end327 
    find_lex $P5006, "$code_obj"
    find_lex $P5007, "$code_type"
    new $P5008, 'ResizablePMCArray'
    setattribute $P5006, $P5007, "$!dispatchees", $P5008
  if200_end327:
.annotate 'line', 348
    find_lex $P5010, "self"
    nqp_decontainerize $P5009, $P5010
    find_lex $P5011, "$code_obj"
    $P5012 = $P5009."add_object"($P5011)
    set $P101, $P5012
.annotate 'line', 351
    find_lex $P5014, "self"
    nqp_decontainerize $P5013, $P5014
.annotate 'line', 352
    nqp_get_sc_object $P5017, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5016, $P5017, "QAST"
    get_who $P5015, $P5016
    set fb_tmp_84, $P5015
    repr_defined $I5001, fb_tmp_84
    unless $I5001 goto if201_else328 
    set $P5018, fb_tmp_84["Op"]
    set $P5020, $P5018
    goto if201_end329
  if201_else328:
    null $P5019
    set $P5020, $P5019
  if201_end329:
    unless_null $P5020, vivi_202330
    nqp_get_sc_object $P5021, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5020, $P5021
  vivi_202330:
.annotate 'line', 354
    nqp_get_sc_object $P5024, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5023, $P5024, "QAST"
    get_who $P5022, $P5023
    set fb_tmp_85, $P5022
    repr_defined $I5002, fb_tmp_85
    unless $I5002 goto if203_else331 
    set $P5025, fb_tmp_85["BVal"]
    set $P5027, $P5025
    goto if203_end332
  if203_else331:
    null $P5026
    set $P5027, $P5026
  if203_end332:
    unless_null $P5027, vivi_204333
    nqp_get_sc_object $P5028, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5027, $P5028
  vivi_204333:
    find_lex $P5029, "$past"
    $P5030 = $P5027."new"($P5029 :named("value"))
.annotate 'line', 355
    nqp_get_sc_object $P5033, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5032, $P5033, "QAST"
    get_who $P5031, $P5032
    set fb_tmp_86, $P5031
    repr_defined $I5003, fb_tmp_86
    unless $I5003 goto if205_else334 
    set $P5034, fb_tmp_86["WVal"]
    set $P5036, $P5034
    goto if205_end335
  if205_else334:
    null $P5035
    set $P5036, $P5035
  if205_end335:
    unless_null $P5036, vivi_206336
    nqp_get_sc_object $P5037, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5036, $P5037
  vivi_206336:
    find_lex $P5038, "$code_obj"
    $P5039 = $P5036."new"($P5038 :named("value"))
    $P5040 = $P5020."new"($P5030, $P5039, "setcodeobj" :named("op"))
    $P5013."add_fixup_task"($P5040 :named("deserialize_past"))
.annotate 'line', 359
    find_lex $P5041, "$fixups"
    nqp_get_sc_object $P5044, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5043, $P5044, "QAST"
    get_who $P5042, $P5043
    set fb_tmp_87, $P5042
    repr_defined $I5004, fb_tmp_87
    unless $I5004 goto if207_else337 
    set $P5045, fb_tmp_87["Op"]
    set $P5047, $P5045
    goto if207_end338
  if207_else337:
    null $P5046
    set $P5047, $P5046
  if207_end338:
    unless_null $P5047, vivi_208339
    nqp_get_sc_object $P5048, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5047, $P5048
  vivi_208339:
.annotate 'line', 361
    nqp_get_sc_object $P5051, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5050, $P5051, "QAST"
    get_who $P5049, $P5050
    set fb_tmp_88, $P5049
    repr_defined $I5005, fb_tmp_88
    unless $I5005 goto if209_else340 
    set $P5052, fb_tmp_88["WVal"]
    set $P5054, $P5052
    goto if209_end341
  if209_else340:
    null $P5053
    set $P5054, $P5053
  if209_end341:
    unless_null $P5054, vivi_210342
    nqp_get_sc_object $P5055, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5054, $P5055
  vivi_210342:
    find_lex $P5056, "$code_obj"
    $P5057 = $P5054."new"($P5056 :named("value"))
.annotate 'line', 362
    nqp_get_sc_object $P5060, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5059, $P5060, "QAST"
    get_who $P5058, $P5059
    set fb_tmp_89, $P5058
    repr_defined $I5006, fb_tmp_89
    unless $I5006 goto if211_else343 
    set $P5061, fb_tmp_89["WVal"]
    set $P5063, $P5061
    goto if211_end344
  if211_else343:
    null $P5062
    set $P5063, $P5062
  if211_end344:
    unless_null $P5063, vivi_212345
    nqp_get_sc_object $P5064, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5063, $P5064
  vivi_212345:
    find_lex $P5065, "$code_type"
    $P5066 = $P5063."new"($P5065 :named("value"))
.annotate 'line', 363
    nqp_get_sc_object $P5069, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5068, $P5069, "QAST"
    get_who $P5067, $P5068
    set fb_tmp_90, $P5067
    repr_defined $I5007, fb_tmp_90
    unless $I5007 goto if213_else346 
    set $P5070, fb_tmp_90["SVal"]
    set $P5072, $P5070
    goto if213_end347
  if213_else346:
    null $P5071
    set $P5072, $P5071
  if213_end347:
    unless_null $P5072, vivi_214348
    nqp_get_sc_object $P5073, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5072, $P5073
  vivi_214348:
    $P5074 = $P5072."new"("$!do" :named("value"))
.annotate 'line', 364
    nqp_get_sc_object $P5077, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5076, $P5077, "QAST"
    get_who $P5075, $P5076
    set fb_tmp_91, $P5075
    repr_defined $I5008, fb_tmp_91
    unless $I5008 goto if215_else349 
    set $P5078, fb_tmp_91["BVal"]
    set $P5080, $P5078
    goto if215_end350
  if215_else349:
    null $P5079
    set $P5080, $P5079
  if215_end350:
    unless_null $P5080, vivi_216351
    nqp_get_sc_object $P5081, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5080, $P5081
  vivi_216351:
    find_lex $P5082, "$past"
    $P5083 = $P5080."new"($P5082 :named("value"))
    $P5084 = $P5047."new"($P5057, $P5066, $P5074, $P5083, "bindattr" :named("op"))
    $P5041."push"($P5084)
.annotate 'line', 366
    find_lex $P5085, "$fixups"
    nqp_get_sc_object $P5088, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5087, $P5088, "QAST"
    get_who $P5086, $P5087
    set fb_tmp_92, $P5086
    repr_defined $I5009, fb_tmp_92
    unless $I5009 goto if217_else352 
    set $P5089, fb_tmp_92["Op"]
    set $P5091, $P5089
    goto if217_end353
  if217_else352:
    null $P5090
    set $P5091, $P5090
  if217_end353:
    unless_null $P5091, vivi_218354
    nqp_get_sc_object $P5092, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5091, $P5092
  vivi_218354:
.annotate 'line', 368
    nqp_get_sc_object $P5095, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5094, $P5095, "QAST"
    get_who $P5093, $P5094
    set fb_tmp_93, $P5093
    repr_defined $I5010, fb_tmp_93
    unless $I5010 goto if219_else355 
    set $P5096, fb_tmp_93["BVal"]
    set $P5098, $P5096
    goto if219_end356
  if219_else355:
    null $P5097
    set $P5098, $P5097
  if219_end356:
    unless_null $P5098, vivi_220357
    nqp_get_sc_object $P5099, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5098, $P5099
  vivi_220357:
    find_lex $P5100, "$past"
    $P5101 = $P5098."new"($P5100 :named("value"))
.annotate 'line', 369
    nqp_get_sc_object $P5104, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5103, $P5104, "QAST"
    get_who $P5102, $P5103
    set fb_tmp_94, $P5102
    repr_defined $I5011, fb_tmp_94
    unless $I5011 goto if221_else358 
    set $P5105, fb_tmp_94["WVal"]
    set $P5107, $P5105
    goto if221_end359
  if221_else358:
    null $P5106
    set $P5107, $P5106
  if221_end359:
    unless_null $P5107, vivi_222360
    nqp_get_sc_object $P5108, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5107, $P5108
  vivi_222360:
    find_lex $P5109, "$code_obj"
    $P5110 = $P5107."new"($P5109 :named("value"))
    $P5111 = $P5091."new"($P5101, $P5110, "setcodeobj" :named("op"))
    $P5085."push"($P5111)
    find_lex $P5113, "self"
    nqp_decontainerize $P5112, $P5113
    nqp_get_sc_object $P5114, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 3
    repr_get_attr_obj $P5115, $P5112, $P5114, "%!code_objects_to_fix_up"
.annotate 'line', 373
    find_lex $P5116, "$past"
    $P5117 = $P5116."cuid"()
    set $S5001, $P5117
    new $P5118, 'ResizablePMCArray'
    find_lex $P5119, "$code_obj"
    push $P5118, $P5119
    set $P5115[$S5001], $P5118
    find_lex $P5121, "self"
    nqp_decontainerize $P5120, $P5121
    nqp_get_sc_object $P5122, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 3
    repr_get_attr_obj $P5123, $P5120, $P5122, "%!code_object_types"
.annotate 'line', 374
    find_lex $P5124, "$past"
    $P5125 = $P5124."cuid"()
    set $S5002, $P5125
    find_lex $P5126, "$code_type"
    set $P5123[$S5002], $P5126
    find_lex $P5127, "$code_obj"
    .return ($P5127) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_create_mo" :subid("cuid_18_1360432459.413") :anon :lex :outer("cuid_375_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 396
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("name") :optional 
    .param int haz_param_2 :opt_flag 
    .param pmc _lex_param_3 :named("repr") :optional 
    .param int haz_param_3 :opt_flag 
    .lex "%args", $P101 
    .lex "$mo", $P102 
    .lex "self", _lex_param_0 
    .lex "$how", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$repr", _lex_param_3 
    if haz_param_2, default383
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_2, $P5007
  default383:
    if haz_param_3, default384
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_3, $P5008
  default384:
    new $P5001, 'Hash'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
    root_new $P103, ['parrot';'Continuation']
    set_label $P103, lexotic_377
    .lex "RETURN", $P103
    defined $I5001, _lex_param_2
    unless $I5001 goto if233_end380 
.annotate 'line', 399
    set $P101["name"], _lex_param_2
  if233_end380:
    defined $I5002, _lex_param_3
    unless $I5002 goto if234_end382 
.annotate 'line', 400
    set $P101["repr"], _lex_param_3
  if234_end382:
.annotate 'line', 401
    $P5003 = _lex_param_1."new_type"($P101 :flat :named)
    set $P102, $P5003
.annotate 'line', 402
    nqp_decontainerize $P5004, _lex_param_0
    $P5004."add_object"($P102)
    find_lex $P5005, "RETURN"
    $P5006 = $P5005($P102)
    goto lexotic_378
  lexotic_377:
    .get_results ($P5006)
  lexotic_378:
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_add_attribute" :subid("cuid_19_1360432459.413") :anon :lex :outer("cuid_375_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 413
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 
    .lex "$attr", $P101 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$meta_attr", _lex_param_2 
    .lex "%lit_args", _lex_param_3 
    .lex "%obj_args", _lex_param_4 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
.annotate 'line', 414
    $P5002 = _lex_param_2."new"(_lex_param_3 :flat :named, _lex_param_4 :flat :named)
    set $P101, $P5002
.annotate 'line', 415
    get_how $P5003, _lex_param_1
    $P5003."add_attribute"(_lex_param_1, $P101)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_add_method" :subid("cuid_20_1360432459.413") :anon :lex :outer("cuid_375_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 420
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$meta_method_name", _lex_param_2 
    .lex "$name", _lex_param_3 
    .lex "$code", _lex_param_4 
.annotate 'line', 421
    get_how $P5001, _lex_param_1
    set $S5001, _lex_param_2
    $P5002 = $P5001.$S5001(_lex_param_1, _lex_param_3, _lex_param_4)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "set_routine_signature" :subid("cuid_21_1360432459.413") :anon :lex :outer("cuid_375_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 425
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "$sig_type", $P101 
    .lex "$code_type", $P102 
    .lex "$sig_obj", $P103 
    .lex "self", _lex_param_0 
    .lex "$code_obj", _lex_param_1 
    .lex "$types", _lex_param_2 
    .lex "$definednesses", _lex_param_3 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P103, $P5003
.annotate 'line', 426
    nqp_decontainerize $P5004, _lex_param_0
    new $P5005, 'ResizablePMCArray'
    box $P5006, "NQPSignature"
    push $P5005, $P5006
    $P5007 = $P5004."find_sym"($P5005)
    set $P101, $P5007
.annotate 'line', 427
    nqp_decontainerize $P5008, _lex_param_0
    new $P5009, 'ResizablePMCArray'
    box $P5010, "NQPRoutine"
    push $P5009, $P5010
    $P5011 = $P5008."find_sym"($P5009)
    set $P102, $P5011
    repr_instance_of $P5012, $P101
    set $P103, $P5012
    setattribute $P103, $P101, "$!types", _lex_param_2
    setattribute $P103, $P101, "$!definednesses", _lex_param_3
    setattribute _lex_param_1, $P102, "$!signature", $P103
    .return ($P103) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_set_body_block" :subid("cuid_22_1360432459.413") :anon :lex :outer("cuid_375_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 435
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$body_code_obj", $P101 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$body_past", _lex_param_2 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
.annotate 'line', 437
    nqp_decontainerize $P5002, _lex_param_0
    $P5003 = _lex_param_2."name"()
    $P5004 = $P5002."create_code"(_lex_param_2, $P5003, 0)
    set $P101, $P5004
.annotate 'line', 440
    get_how $P5005, _lex_param_1
    $P5006 = $P5005."set_body_block"(_lex_param_1, $P101)
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_add_parent_or_role" :subid("cuid_23_1360432459.413") :anon :lex :outer("cuid_375_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 444
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$meta_method_name", _lex_param_2 
    .lex "$to_add", _lex_param_3 
.annotate 'line', 445
    get_how $P5001, _lex_param_1
    set $S5001, _lex_param_2
    $P5002 = $P5001.$S5001(_lex_param_1, _lex_param_3)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_add_parrot_vtable_handler_mapping" :subid("cuid_24_1360432459.413") :anon :lex :outer("cuid_375_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 448
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$att_name", _lex_param_3 
.annotate 'line', 449
    get_how $P5001, _lex_param_1
    $P5002 = $P5001."add_parrot_vtable_handler_mapping"(_lex_param_1, _lex_param_2, _lex_param_3)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_compose" :subid("cuid_25_1360432459.413") :anon :lex :outer("cuid_375_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 453
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
.annotate 'line', 454
    get_how $P5001, _lex_param_1
    $P5002 = $P5001."compose"(_lex_param_1)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "run_begin_block" :subid("cuid_26_1360432459.413") :anon :lex :outer("cuid_375_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 458
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5046 = 'cuid_386_1360432459.413' 
    capture_lex $P5046 
    .lex "$wrapper", $P101 
    .lex "%seen", $P102 
    .lex "$i", $P103 
    .lex "$code", $P104 
    .lex "$old_global", $P105 
    .lex "self", _lex_param_0 
    .lex "$past", _lex_param_1 
    .local pmc fb_tmp_100 
    .local pmc fb_tmp_101 
    .local pmc fb_tmp_109 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    new $P5002, 'Hash'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P105, $P5005
    root_new $P106, ['parrot';'Continuation']
    set_label $P106, lexotic_385
    .lex "RETURN", $P106
.annotate 'line', 460
    nqp_get_sc_object $P5008, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5007, $P5008, "QAST"
    get_who $P5006, $P5007
    set fb_tmp_100, $P5006
    repr_defined $I5001, fb_tmp_100
    unless $I5001 goto if235_else387 
    set $P5009, fb_tmp_100["Block"]
    set $P5011, $P5009
    goto if235_end388
  if235_else387:
    null $P5010
    set $P5011, $P5010
  if235_end388:
    unless_null $P5011, vivi_236389
    nqp_get_sc_object $P5012, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5011, $P5012
  vivi_236389:
.annotate 'line', 461
    nqp_get_sc_object $P5015, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5014, $P5015, "QAST"
    get_who $P5013, $P5014
    set fb_tmp_101, $P5013
    repr_defined $I5002, fb_tmp_101
    unless $I5002 goto if237_else390 
    set $P5016, fb_tmp_101["Stmts"]
    set $P5018, $P5016
    goto if237_end391
  if237_else390:
    null $P5017
    set $P5018, $P5017
  if237_end391:
    unless_null $P5018, vivi_238392
    nqp_get_sc_object $P5019, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5018, $P5019
  vivi_238392:
    $P5020 = $P5018."new"()
    $P5021 = $P5011."new"($P5020, _lex_param_1)
    set $P101, $P5021
    nqp_decontainerize $P5022, _lex_param_0
    nqp_get_sc_object $P5023, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 3
    repr_get_attr_obj $P5024, $P5022, $P5023, "@!BLOCKS"
    set $N5001, $P5024
    box $P5025, $N5001
    set $P103, $P5025
  while239_test393:
    set $N5002, $P103
    set $N5003, 0
    isgt $I5003, $N5002, $N5003
    box $P5029, $I5003
    set $P5028, $P5029
    unless $I5003 goto while239_done397 
  while239_redo395:
    .const 'Sub' $P5026 = 'cuid_386_1360432459.413' 
    capture_lex $P5026
    $P5027 = $P5026()
    set $P5028, $P5027
    goto while239_test393 
  while239_done397:
.annotate 'line', 484
    nqp_decontainerize $P5030, _lex_param_0
    $P5031 = $P5030."create_code"($P101, "BEGIN block", 0)
    set $P104, $P5031
    new $P5033, 'ResizablePMCArray'
    get_hll_global $P5032, $P5033, "GLOBAL"
    set $P105, $P5032
    new $P5034, 'ResizablePMCArray'
    find_dynamic_lex $P5035, "$*GLOBALish"
    unless_null $P5035, fallback428
    nqp_get_sc_object $P5037, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5036, $P5037
    set fb_tmp_109, $P5036
    repr_defined $I5004, fb_tmp_109
    unless $I5004 goto if258_else429 
    set $P5038, fb_tmp_109["$GLOBALish"]
    set $P5040, $P5038
    goto if258_end430
  if258_else429:
    null $P5039
    set $P5040, $P5039
  if258_end430:
    unless_null $P5040, vivi_259431
    nqp_get_sc_object $P5041, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5040, $P5041
  vivi_259431:
    unless_null $P5040, vivi_260432
    die "Contextual $*GLOBALish not found"
    box $P5042, "Contextual $*GLOBALish not found"
    set $P5040, $P5042
  vivi_260432:
    set $P5035, $P5040
  fallback428:
    set_hll_global $P5034, "GLOBAL", $P5035
.annotate 'line', 487
    $P104()
    new $P5043, 'ResizablePMCArray'
    set_hll_global $P5043, "GLOBAL", $P105
.annotate 'line', 492
    $P101."shift"()
    find_lex $P5044, "RETURN"
    $P5045 = $P5044($P101)
    goto lexotic_386
  lexotic_385:
    .get_results ($P5045)
  lexotic_386:
    .return ($P5045) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_386_1360432459.413") :anon :lex :outer("cuid_26_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 466
    .const 'Sub' $P5019 = 'cuid_385_1360432459.413' 
    capture_lex $P5019 
    .lex "%symbols", $P101 
    .local pmc fb_tmp_102 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $P5002, "$i"
    set $N5002, $P5002
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$i", $P5003
.annotate 'line', 468
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    nqp_get_sc_object $P5006, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 3
    repr_get_attr_obj $P5007, $P5004, $P5006, "@!BLOCKS"
    set fb_tmp_102, $P5007
    repr_defined $I5001, fb_tmp_102
    unless $I5001 goto if240_else398 
    find_lex $P5009, "$i"
    set $I5002, $P5009
    set $P5008, fb_tmp_102[$I5002]
    set $P5011, $P5008
    goto if240_end399
  if240_else398:
    null $P5010
    set $P5011, $P5010
  if240_end399:
    unless_null $P5011, vivi_241400
    nqp_get_sc_object $P5012, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5011, $P5012
  vivi_241400:
    $P5013 = $P5011."symtable"()
    set $P101, $P5013
    set $P5014, $P101
    iter $P5016, $P101
  for_next425:
    unless $P5016, for_done427
    shift $P5018, $P5016
  for_redo426:
    .const 'Sub' $P5017 = 'cuid_385_1360432459.413' 
    capture_lex $P5017
    $P5014 = $P5017($P5018)
    goto for_next425
  for_done427:
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_385_1360432459.413") :anon :lex :outer("cuid_386_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 469
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_103 
    .local pmc fb_tmp_104 
    .local pmc fb_tmp_105 
    .local pmc fb_tmp_106 
    .local pmc fb_tmp_107 
    .local pmc fb_tmp_108 
    find_lex $P5001, "%seen"
    set fb_tmp_103, $P5001
    repr_defined $I5002, fb_tmp_103
    unless $I5002 goto if244_else405 
.annotate 'line', 470
    $P5003 = _lex_param_0."key"()
    set $S5001, $P5003
    set $P5002, fb_tmp_103[$S5001]
    set $P5005, $P5002
    goto if244_end406
  if244_else405:
    null $P5004
    set $P5005, $P5004
  if244_end406:
    unless_null $P5005, vivi_245407
    nqp_get_sc_object $P5006, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5005, $P5006
  vivi_245407:
    isfalse $I5001, $P5005
    set $I5004, $I5001
    unless $I5001 goto if243_end404 
    $P5007 = _lex_param_0."value"()
    exists $I5003, $P5007["value"]
    set $I5004, $I5003
  if243_end404:
    box $P5050, $I5004
    set $P5049, $P5050
    unless $I5004 goto if242_end402 
    new $P5044, 'ExceptionHandler'
    set_label $P5044, catch_handler_257424
    $P5044.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5044
.annotate 'line', 471
.annotate 'line', 472
    find_lex $P5008, "$wrapper"
    set fb_tmp_104, $P5008
    repr_defined $I5005, fb_tmp_104
    unless $I5005 goto if246_else408 
    set $P5009, fb_tmp_104[0]
    set $P5011, $P5009
    goto if246_end409
  if246_else408:
    null $P5010
    set $P5011, $P5010
  if246_end409:
    unless_null $P5011, vivi_247410
    nqp_get_sc_object $P5012, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5011, $P5012
  vivi_247410:
    nqp_get_sc_object $P5015, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5014, $P5015, "QAST"
    get_who $P5013, $P5014
    set fb_tmp_105, $P5013
    repr_defined $I5006, fb_tmp_105
    unless $I5006 goto if248_else411 
    set $P5016, fb_tmp_105["Op"]
    set $P5018, $P5016
    goto if248_end412
  if248_else411:
    null $P5017
    set $P5018, $P5017
  if248_end412:
    unless_null $P5018, vivi_249413
    nqp_get_sc_object $P5019, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5018, $P5019
  vivi_249413:
.annotate 'line', 474
    nqp_get_sc_object $P5022, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5021, $P5022, "QAST"
    get_who $P5020, $P5021
    set fb_tmp_106, $P5020
    repr_defined $I5007, fb_tmp_106
    unless $I5007 goto if250_else414 
    set $P5023, fb_tmp_106["Var"]
    set $P5025, $P5023
    goto if250_end415
  if250_else414:
    null $P5024
    set $P5025, $P5024
  if250_end415:
    unless_null $P5025, vivi_251416
    nqp_get_sc_object $P5026, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5025, $P5026
  vivi_251416:
    $P5027 = _lex_param_0."key"()
    $P5028 = $P5025."new"($P5027 :named("name"), "lexical" :named("scope"), "var" :named("isdecl"))
.annotate 'line', 475
    nqp_get_sc_object $P5031, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5030, $P5031, "QAST"
    get_who $P5029, $P5030
    set fb_tmp_107, $P5029
    repr_defined $I5008, fb_tmp_107
    unless $I5008 goto if252_else417 
    set $P5032, fb_tmp_107["WVal"]
    set $P5034, $P5032
    goto if252_end418
  if252_else417:
    null $P5033
    set $P5034, $P5033
  if252_end418:
    unless_null $P5034, vivi_253419
    nqp_get_sc_object $P5035, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5034, $P5035
  vivi_253419:
    $P5036 = _lex_param_0."value"()
    set fb_tmp_108, $P5036
    repr_defined $I5009, fb_tmp_108
    unless $I5009 goto if254_else420 
    set $P5037, fb_tmp_108["value"]
    set $P5039, $P5037
    goto if254_end421
  if254_else420:
    null $P5038
    set $P5039, $P5038
  if254_end421:
    unless_null $P5039, vivi_255422
    nqp_get_sc_object $P5040, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5039, $P5040
  vivi_255422:
    $P5041 = $P5034."new"($P5039 :named("value"))
    $P5042 = $P5018."new"($P5028, $P5041, "bind" :named("op"))
    $P5043 = $P5011."push"($P5042)
    set $P5045, $P5043
    pop_eh 
    goto skip_handler_256423
  catch_handler_257424:
    .get_results ($P5044) 
    set $I10001, 1
    set $P5044["handled"], $I10001
    nqp_get_sc_object $P10001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    finalize $P5044
    pop_upto_eh $P5044
    pop_eh 
    set $P5045, $P10001
    goto skip_handler_256423
  skip_handler_256423:
    find_lex $P5046, "%seen"
.annotate 'line', 478
    $P5047 = _lex_param_0."key"()
    set $S5002, $P5047
    box $P5048, 1
    set $P5046[$S5002], $P5048
    set $P5049, $P5048
  if242_end402:
    .return ($P5049) 
.end
.HLL "nqp"
.namespace []
.sub "libs" :subid("cuid_27_1360432459.413") :anon :lex :outer("cuid_375_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 497
    .param pmc _lex_param_0 
    .const 'Sub' $P5066 = 'cuid_387_1360432459.413' 
    capture_lex $P5066 
    .lex "@loadlibs", $P101 
    .lex "self", _lex_param_0 
    .local pmc fb_tmp_110 
    .local pmc fb_tmp_111 
    .local pmc fb_tmp_112 
    .local pmc fb_tmp_113 
    .local pmc fb_tmp_114 
    .local pmc fb_tmp_115 
    .local pmc fb_tmp_116 
    .local pmc fb_tmp_117 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    new $P5002, 'ResizablePMCArray'
    box $P5003, "nqp_group"
    push $P5002, $P5003
    box $P5004, "nqp_ops"
    push $P5002, $P5004
    box $P5005, "nqp_bigint_ops"
    push $P5002, $P5005
    box $P5006, "trans_ops"
    push $P5002, $P5006
    box $P5007, "io_ops"
    push $P5002, $P5007
    set $P101, $P5002
    find_dynamic_lex $P5008, "%*COMPILING"
    unless_null $P5008, fallback439
    nqp_get_sc_object $P5010, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5009, $P5010
    set fb_tmp_112, $P5009
    repr_defined $I5003, fb_tmp_112
    unless $I5003 goto if264_else440 
    set $P5011, fb_tmp_112["%COMPILING"]
    set $P5013, $P5011
    goto if264_end441
  if264_else440:
    null $P5012
    set $P5013, $P5012
  if264_end441:
    unless_null $P5013, vivi_265442
    nqp_get_sc_object $P5015, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5014, $P5015
    new $P5016, 'Hash'
    set $P5014["%COMPILING"], $P5016
    set $P5013, $P5016
  vivi_265442:
    unless_null $P5013, vivi_266443
    die "Contextual %*COMPILING not found"
    box $P5017, "Contextual %*COMPILING not found"
    set $P5013, $P5017
  vivi_266443:
    set $P5008, $P5013
  fallback439:
    set fb_tmp_111, $P5008
    repr_defined $I5002, fb_tmp_111
    unless $I5002 goto if263_else437 
    set $P5018, fb_tmp_111["%?OPTIONS"]
    set $P5020, $P5018
    goto if263_end438
  if263_else437:
    null $P5019
    set $P5020, $P5019
  if263_end438:
    unless_null $P5020, vivi_267444
    nqp_get_sc_object $P5021, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5020, $P5021
  vivi_267444:
    set fb_tmp_110, $P5020
    repr_defined $I5001, fb_tmp_110
    unless $I5001 goto if262_else435 
    set $P5022, fb_tmp_110["vmlibs"]
    set $P5024, $P5022
    goto if262_end436
  if262_else435:
    null $P5023
    set $P5024, $P5023
  if262_end436:
    unless_null $P5024, vivi_268445
    nqp_get_sc_object $P5025, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5024, $P5025
  vivi_268445:
    unless $P5024 goto if261_end434 
.annotate 'line', 500
    find_dynamic_lex $P5030, "%*COMPILING"
    unless_null $P5030, fallback450
    nqp_get_sc_object $P5032, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5031, $P5032
    set fb_tmp_115, $P5031
    repr_defined $I5006, fb_tmp_115
    unless $I5006 goto if271_else451 
    set $P5033, fb_tmp_115["%COMPILING"]
    set $P5035, $P5033
    goto if271_end452
  if271_else451:
    null $P5034
    set $P5035, $P5034
  if271_end452:
    unless_null $P5035, vivi_272453
    nqp_get_sc_object $P5037, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5036, $P5037
    new $P5038, 'Hash'
    set $P5036["%COMPILING"], $P5038
    set $P5035, $P5038
  vivi_272453:
    unless_null $P5035, vivi_273454
    die "Contextual %*COMPILING not found"
    box $P5039, "Contextual %*COMPILING not found"
    set $P5035, $P5039
  vivi_273454:
    set $P5030, $P5035
  fallback450:
    set fb_tmp_114, $P5030
    repr_defined $I5005, fb_tmp_114
    unless $I5005 goto if270_else448 
    set $P5040, fb_tmp_114["%?OPTIONS"]
    set $P5042, $P5040
    goto if270_end449
  if270_else448:
    null $P5041
    set $P5042, $P5041
  if270_end449:
    unless_null $P5042, vivi_274455
    nqp_get_sc_object $P5043, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5042, $P5043
  vivi_274455:
    set fb_tmp_113, $P5042
    repr_defined $I5004, fb_tmp_113
    unless $I5004 goto if269_else446 
    set $P5044, fb_tmp_113["vmlibs"]
    set $P5046, $P5044
    goto if269_end447
  if269_else446:
    null $P5045
    set $P5046, $P5045
  if269_end447:
    unless_null $P5046, vivi_275456
    nqp_get_sc_object $P5047, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5046, $P5047
  vivi_275456:
    set $S5001, $P5046
    split $P5029, ",", $S5001
    set $P5026, $P5029
    iter $P5028, $P5029
  for_next457:
    unless $P5028, for_done459
    shift $P5049, $P5028
  for_redo458:
    .const 'Sub' $P5048 = 'cuid_387_1360432459.413' 
    capture_lex $P5048
    $P5026 = $P5048($P5049)
    goto for_next457
  for_done459:
  if261_end434:
.annotate 'line', 505
    nqp_get_sc_object $P5052, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5051, $P5052, "QAST"
    get_who $P5050, $P5051
    set fb_tmp_116, $P5050
    repr_defined $I5007, fb_tmp_116
    unless $I5007 goto if276_else460 
    set $P5053, fb_tmp_116["VM"]
    set $P5055, $P5053
    goto if276_end461
  if276_else460:
    null $P5054
    set $P5055, $P5054
  if276_end461:
    unless_null $P5055, vivi_277462
    nqp_get_sc_object $P5056, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5055, $P5056
  vivi_277462:
.annotate 'line', 507
    nqp_get_sc_object $P5059, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5058, $P5059, "QAST"
    get_who $P5057, $P5058
    set fb_tmp_117, $P5057
    repr_defined $I5008, fb_tmp_117
    unless $I5008 goto if278_else463 
    set $P5060, fb_tmp_117["Op"]
    set $P5062, $P5060
    goto if278_end464
  if278_else463:
    null $P5061
    set $P5062, $P5061
  if278_end464:
    unless_null $P5062, vivi_279465
    nqp_get_sc_object $P5063, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5062, $P5063
  vivi_279465:
    $P5064 = $P5062."new"("null" :named("op"))
    $P5065 = $P5055."new"($P101 :named("loadlibs"), $P5064 :named("jvm"))
    .return ($P5065) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_387_1360432459.413") :anon :lex :outer("cuid_27_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 501
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 502
    find_lex $P5001, "@loadlibs"
    $P5002 = $P5001."push"(_lex_param_0)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "add_initializations" :subid("cuid_28_1360432459.413") :anon :lex :outer("cuid_375_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 511
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    .local pmc fb_tmp_118 
    .local pmc fb_tmp_119 
    .local pmc fb_tmp_120 
    .local pmc fb_tmp_121 
    .local pmc fb_tmp_122 
    .local pmc fb_tmp_123 
    .local pmc fb_tmp_124 
    .local pmc fb_tmp_125 
    .local pmc fb_tmp_126 
    .local pmc fb_tmp_127 
    .local pmc fb_tmp_128 
.annotate 'line', 512
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5004, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5003, $P5004, "QAST"
    get_who $P5002, $P5003
    set fb_tmp_118, $P5002
    repr_defined $I5001, fb_tmp_118
    unless $I5001 goto if280_else466 
    set $P5005, fb_tmp_118["VM"]
    set $P5007, $P5005
    goto if280_end467
  if280_else466:
    null $P5006
    set $P5007, $P5006
  if280_end467:
    unless_null $P5007, vivi_281468
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5007, $P5008
  vivi_281468:
.annotate 'line', 513
    nqp_get_sc_object $P5011, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5010, $P5011, "QAST"
    get_who $P5009, $P5010
    set fb_tmp_119, $P5009
    repr_defined $I5002, fb_tmp_119
    unless $I5002 goto if282_else469 
    set $P5012, fb_tmp_119["Stmts"]
    set $P5014, $P5012
    goto if282_end470
  if282_else469:
    null $P5013
    set $P5014, $P5013
  if282_end470:
    unless_null $P5014, vivi_283471
    nqp_get_sc_object $P5015, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5014, $P5015
  vivi_283471:
.annotate 'line', 514
    nqp_get_sc_object $P5018, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5017, $P5018, "QAST"
    get_who $P5016, $P5017
    set fb_tmp_120, $P5016
    repr_defined $I5003, fb_tmp_120
    unless $I5003 goto if284_else472 
    set $P5019, fb_tmp_120["VM"]
    set $P5021, $P5019
    goto if284_end473
  if284_else472:
    null $P5020
    set $P5021, $P5020
  if284_end473:
    unless_null $P5021, vivi_285474
    nqp_get_sc_object $P5022, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5021, $P5022
  vivi_285474:
    $P5023 = $P5021."new"("nqp_dynop_setup v" :named("pirop"))
.annotate 'line', 515
    nqp_get_sc_object $P5026, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5025, $P5026, "QAST"
    get_who $P5024, $P5025
    set fb_tmp_121, $P5024
    repr_defined $I5004, fb_tmp_121
    unless $I5004 goto if286_else475 
    set $P5027, fb_tmp_121["VM"]
    set $P5029, $P5027
    goto if286_end476
  if286_else475:
    null $P5028
    set $P5029, $P5028
  if286_end476:
    unless_null $P5029, vivi_287477
    nqp_get_sc_object $P5030, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5029, $P5030
  vivi_287477:
    $P5031 = $P5029."new"("nqp_bigint_setup v" :named("pirop"))
.annotate 'line', 516
    nqp_get_sc_object $P5034, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5033, $P5034, "QAST"
    get_who $P5032, $P5033
    set fb_tmp_122, $P5032
    repr_defined $I5005, fb_tmp_122
    unless $I5005 goto if288_else478 
    set $P5035, fb_tmp_122["Op"]
    set $P5037, $P5035
    goto if288_end479
  if288_else478:
    null $P5036
    set $P5037, $P5036
  if288_end479:
    unless_null $P5037, vivi_289480
    nqp_get_sc_object $P5038, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5037, $P5038
  vivi_289480:
.annotate 'line', 518
    nqp_get_sc_object $P5041, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5040, $P5041, "QAST"
    get_who $P5039, $P5040
    set fb_tmp_123, $P5039
    repr_defined $I5006, fb_tmp_123
    unless $I5006 goto if290_else481 
    set $P5042, fb_tmp_123["VM"]
    set $P5044, $P5042
    goto if290_end482
  if290_else481:
    null $P5043
    set $P5044, $P5043
  if290_end482:
    unless_null $P5044, vivi_291483
    nqp_get_sc_object $P5045, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5044, $P5045
  vivi_291483:
    $P5046 = $P5044."new"("getinterp P" :named("pirop"))
.annotate 'line', 519
    nqp_get_sc_object $P5049, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5048, $P5049, "QAST"
    get_who $P5047, $P5048
    set fb_tmp_124, $P5047
    repr_defined $I5007, fb_tmp_124
    unless $I5007 goto if292_else484 
    set $P5050, fb_tmp_124["VM"]
    set $P5052, $P5050
    goto if292_end485
  if292_else484:
    null $P5051
    set $P5052, $P5051
  if292_end485:
    unless_null $P5052, vivi_293486
    nqp_get_sc_object $P5053, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5052, $P5053
  vivi_293486:
    nqp_get_sc_object $P5056, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5055, $P5056, "QAST"
    get_who $P5054, $P5055
    set fb_tmp_125, $P5054
    repr_defined $I5008, fb_tmp_125
    unless $I5008 goto if294_else487 
    set $P5057, fb_tmp_125["SVal"]
    set $P5059, $P5057
    goto if294_end488
  if294_else487:
    null $P5058
    set $P5059, $P5058
  if294_end488:
    unless_null $P5059, vivi_295489
    nqp_get_sc_object $P5060, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5059, $P5060
  vivi_295489:
    $P5061 = $P5059."new"("LexPad" :named("value"))
    $P5062 = $P5052."new"($P5061, "get_class Ps" :named("pirop"))
.annotate 'line', 520
    nqp_get_sc_object $P5065, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5064, $P5065, "QAST"
    get_who $P5063, $P5064
    set fb_tmp_126, $P5063
    repr_defined $I5009, fb_tmp_126
    unless $I5009 goto if296_else490 
    set $P5066, fb_tmp_126["VM"]
    set $P5068, $P5066
    goto if296_end491
  if296_else490:
    null $P5067
    set $P5068, $P5067
  if296_end491:
    unless_null $P5068, vivi_297492
    nqp_get_sc_object $P5069, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5068, $P5069
  vivi_297492:
    nqp_get_sc_object $P5072, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5071, $P5072, "QAST"
    get_who $P5070, $P5071
    set fb_tmp_127, $P5070
    repr_defined $I5010, fb_tmp_127
    unless $I5010 goto if298_else493 
    set $P5073, fb_tmp_127["SVal"]
    set $P5075, $P5073
    goto if298_end494
  if298_else493:
    null $P5074
    set $P5075, $P5074
  if298_end494:
    unless_null $P5075, vivi_299495
    nqp_get_sc_object $P5076, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5075, $P5076
  vivi_299495:
    $P5077 = $P5075."new"("NQPLexPad" :named("value"))
    $P5078 = $P5068."new"($P5077, "get_class Ps" :named("pirop"))
    $P5079 = $P5037."new"($P5046, $P5062, $P5078, "callmethod" :named("op"), "hll_map" :named("name"))
    $P5080 = $P5014."new"($P5023, $P5031, $P5079)
.annotate 'line', 522
    nqp_get_sc_object $P5083, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5082, $P5083, "QAST"
    get_who $P5081, $P5082
    set fb_tmp_128, $P5081
    repr_defined $I5011, fb_tmp_128
    unless $I5011 goto if300_else496 
    set $P5084, fb_tmp_128["Op"]
    set $P5086, $P5084
    goto if300_end497
  if300_else496:
    null $P5085
    set $P5086, $P5085
  if300_end497:
    unless_null $P5086, vivi_301498
    nqp_get_sc_object $P5087, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5086, $P5087
  vivi_301498:
    $P5088 = $P5086."new"("null" :named("op"))
    $P5089 = $P5007."new"($P5080 :named("parrot"), $P5088 :named("jvm"))
    $P5090 = $P5001."add_load_dependency_task"($P5089 :named("deserialize_past"))
    .return ($P5090) 
.end
.HLL "nqp"
.namespace []
.sub "cleanup" :subid("cuid_29_1360432459.413") :anon :lex :outer("cuid_375_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 527
    .param pmc _lex_param_0 
    .const 'Sub' $P5009 = 'cuid_388_1360432459.413' 
    capture_lex $P5009 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5004, _lex_param_0
    nqp_get_sc_object $P5005, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 3
    repr_get_attr_obj $P5006, $P5004, $P5005, "@!clearup_tasks"
    set $P5001, $P5006
    iter $P5003, $P5006
  for_next499:
    unless $P5003, for_done501
    shift $P5008, $P5003
  for_redo500:
    .const 'Sub' $P5007 = 'cuid_388_1360432459.413' 
    capture_lex $P5007
    $P5001 = $P5007($P5008)
    goto for_next499
  for_done501:
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_388_1360432459.413") :anon :lex :outer("cuid_29_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 528
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    $P5001 = _lex_param_0()
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "is_lexical" :subid("cuid_30_1360432459.413") :anon :lex :outer("cuid_375_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 533
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
.annotate 'line', 534
    nqp_decontainerize $P5001, _lex_param_0
    $P5002 = $P5001."is_scope"(_lex_param_1, "lexical")
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "is_package" :subid("cuid_31_1360432459.413") :anon :lex :outer("cuid_375_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 539
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
.annotate 'line', 540
    nqp_decontainerize $P5001, _lex_param_0
    $P5002 = $P5001."is_scope"(_lex_param_1, "package")
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "is_scope" :subid("cuid_32_1360432459.413") :anon :lex :outer("cuid_375_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 545
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .const 'Sub' $P5011 = 'cuid_389_1360432459.413' 
    capture_lex $P5011 
    .lex "$i", $P101 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
    .lex "$wanted_scope", _lex_param_2 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_502
    .lex "RETURN", $P102
    nqp_decontainerize $P5002, _lex_param_0
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 3
    repr_get_attr_obj $P5004, $P5002, $P5003, "@!BLOCKS"
    set $N5001, $P5004
    box $P5005, $N5001
    set $P101, $P5005
  while302_test504:
    set $N5002, $P101
    set $N5003, 0
    isgt $I5001, $N5002, $N5003
    box $P5009, $I5001
    set $P5008, $P5009
    unless $I5001 goto while302_done508 
  while302_redo506:
    .const 'Sub' $P5006 = 'cuid_389_1360432459.413' 
    capture_lex $P5006
    $P5007 = $P5006()
    set $P5008, $P5007
    goto while302_test504 
  while302_done508:
    box $P5010, 0
    goto lexotic_503
  lexotic_502:
    .get_results ($P5010)
  lexotic_503:
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_389_1360432459.413") :anon :lex :outer("cuid_32_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 547
    .lex "%sym", $P101 
    .local pmc fb_tmp_129 
    .local pmc fb_tmp_130 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $P5002, "$i"
    set $N5002, $P5002
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$i", $P5003
.annotate 'line', 549
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    nqp_get_sc_object $P5006, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 3
    repr_get_attr_obj $P5007, $P5004, $P5006, "@!BLOCKS"
    set fb_tmp_129, $P5007
    repr_defined $I5001, fb_tmp_129
    unless $I5001 goto if303_else509 
    find_lex $P5009, "$i"
    set $I5002, $P5009
    set $P5008, fb_tmp_129[$I5002]
    set $P5011, $P5008
    goto if303_end510
  if303_else509:
    null $P5010
    set $P5011, $P5010
  if303_end510:
    unless_null $P5011, vivi_304511
    nqp_get_sc_object $P5012, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5011, $P5012
  vivi_304511:
    find_lex $P5013, "$name"
    $P5014 = $P5011."symbol"($P5013)
    set $P101, $P5014
    set $N5004, $P101
    box $P5023, $N5004
    set $P5022, $P5023
    unless $N5004 goto if305_end513 
.annotate 'line', 550
    set fb_tmp_130, $P101
    repr_defined $I5004, fb_tmp_130
    unless $I5004 goto if306_else514 
    set $P5016, fb_tmp_130["scope"]
    set $P5018, $P5016
    goto if306_end515
  if306_else514:
    null $P5017
    set $P5018, $P5017
  if306_end515:
    unless_null $P5018, vivi_307516
    nqp_get_sc_object $P5019, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5018, $P5019
  vivi_307516:
    set $S5001, $P5018
    find_lex $P5020, "$wanted_scope"
    set $S5002, $P5020
    iseq $I5003, $S5001, $S5002
    find_lex $P5015, "RETURN"
    $P5021 = $P5015($I5003)
    set $P5022, $P5021
  if305_end513:
    .return ($P5022) 
.end
.HLL "nqp"
.namespace []
.sub "known_sym" :subid("cuid_33_1360432459.413") :anon :lex :outer("cuid_375_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 558
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$known", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .lex "@name", _lex_param_2 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    box $P5002, 0
    set $P101, $P5002
    new $P5005, 'ExceptionHandler'
    set_label $P5005, catch_handler_309518
    $P5005.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5005
.annotate 'line', 560
.annotate 'line', 561
    nqp_decontainerize $P5003, _lex_param_0
    $P5003."find_sym"(_lex_param_2)
    box $P5004, 1
    set $P101, $P5004
    set $P5006, $P101
    pop_eh 
    goto skip_handler_308517
  catch_handler_309518:
    .get_results ($P5005) 
    set $I10001, 1
    set $P5005["handled"], $I10001
    nqp_get_sc_object $P10001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    finalize $P5005
    pop_upto_eh $P5005
    pop_eh 
    set $P5006, $P10001
    goto skip_handler_308517
  skip_handler_308517:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "find_sym" :subid("cuid_34_1360432459.413") :anon :lex :outer("cuid_375_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 570
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5020 = 'cuid_391_1360432459.413' 
    capture_lex $P5020 
    .const 'Sub' $P5020 = 'cuid_393_1360432459.413' 
    capture_lex $P5020 
    .const 'Sub' $P5020 = 'cuid_394_1360432459.413' 
    capture_lex $P5020 
    .lex "$result", $P101 
    .lex "self", _lex_param_0 
    .lex "@name", _lex_param_1 
    .local pmc fb_tmp_134 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_519
    .lex "RETURN", $P102
    set $N5001, _lex_param_1
    if $N5001 goto unless310_end522 
.annotate 'line', 572
    box $P5002, "Cannot look up empty name"
    die $P5002
  unless310_end522:
    set $N5002, _lex_param_1
    set $N5003, 1
    iseq $I5001, $N5002, $N5003
    unless $I5001 goto if311_end524 
    .const 'Sub' $P5003 = 'cuid_391_1360432459.413' 
    capture_lex $P5003
    $P5004 = $P5003()
  if311_end524:
    find_dynamic_lex $P5005, "$*GLOBALish"
    unless_null $P5005, fallback543
    nqp_get_sc_object $P5007, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5006, $P5007
    set fb_tmp_134, $P5006
    repr_defined $I5002, fb_tmp_134
    unless $I5002 goto if321_else544 
    set $P5008, fb_tmp_134["$GLOBALish"]
    set $P5010, $P5008
    goto if321_end545
  if321_else544:
    null $P5009
    set $P5010, $P5009
  if321_end545:
    unless_null $P5010, vivi_322546
    nqp_get_sc_object $P5011, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5010, $P5011
  vivi_322546:
    unless_null $P5010, vivi_323547
    die "Contextual $*GLOBALish not found"
    box $P5012, "Contextual $*GLOBALish not found"
    set $P5010, $P5012
  vivi_323547:
    set $P5005, $P5010
  fallback543:
    set $P101, $P5005
    set $N5004, _lex_param_1
    set $N5005, 2
    isge $I5003, $N5004, $N5005
    unless $I5003 goto if324_end549 
    .const 'Sub' $P5013 = 'cuid_393_1360432459.413' 
    capture_lex $P5013
    $P5014 = $P5013()
  if324_end549:
    set $P5015, _lex_param_1
    iter $P5017, _lex_param_1
  for_next573:
    unless $P5017, for_done575
    shift $P5019, $P5017
  for_redo574:
    .const 'Sub' $P5018 = 'cuid_394_1360432459.413' 
    capture_lex $P5018
    $P5015 = $P5018($P5019)
    goto for_next573
  for_done575:
    goto lexotic_520
  lexotic_519:
    .get_results ($P101)
  lexotic_520:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_391_1360432459.413") :anon :lex :outer("cuid_34_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 576
    .const 'Sub' $P5017 = 'cuid_390_1360432459.413' 
    capture_lex $P5017 
    .lex "$final_name", $P101 
    .lex "$i", $P102 
    .local pmc fb_tmp_131 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
    find_lex $P5003, "@name"
    set fb_tmp_131, $P5003
    repr_defined $I5001, fb_tmp_131
    unless $I5001 goto if312_else525 
    set $P5004, fb_tmp_131[0]
    set $P5006, $P5004
    goto if312_end526
  if312_else525:
    null $P5005
    set $P5006, $P5005
  if312_end526:
    unless_null $P5006, vivi_313527
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_313527:
    set $P101, $P5006
    find_lex $P5009, "self"
    nqp_decontainerize $P5008, $P5009
    nqp_get_sc_object $P5010, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 3
    repr_get_attr_obj $P5011, $P5008, $P5010, "@!BLOCKS"
    set $N5001, $P5011
    box $P5012, $N5001
    set $P102, $P5012
  while314_test528:
    set $N5002, $P102
    set $N5003, 0
    isgt $I5002, $N5002, $N5003
    box $P5016, $I5002
    set $P5015, $P5016
    unless $I5002 goto while314_done532 
  while314_redo530:
    .const 'Sub' $P5013 = 'cuid_390_1360432459.413' 
    capture_lex $P5013
    $P5014 = $P5013()
    set $P5015, $P5014
    goto while314_test528 
  while314_done532:
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_390_1360432459.413") :anon :lex :outer("cuid_391_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 579
    .lex "%sym", $P101 
    .local pmc fb_tmp_132 
    .local pmc fb_tmp_133 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $P5002, "$i"
    set $N5002, $P5002
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$i", $P5003
.annotate 'line', 581
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    nqp_get_sc_object $P5006, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 3
    repr_get_attr_obj $P5007, $P5004, $P5006, "@!BLOCKS"
    set fb_tmp_132, $P5007
    repr_defined $I5001, fb_tmp_132
    unless $I5001 goto if315_else533 
    find_lex $P5009, "$i"
    set $I5002, $P5009
    set $P5008, fb_tmp_132[$I5002]
    set $P5011, $P5008
    goto if315_end534
  if315_else533:
    null $P5010
    set $P5011, $P5010
  if315_end534:
    unless_null $P5011, vivi_316535
    nqp_get_sc_object $P5012, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5011, $P5012
  vivi_316535:
    find_lex $P5013, "$final_name"
    $P5014 = $P5011."symbol"($P5013)
    set $P101, $P5014
    set $N5004, $P101
    box $P5025, $N5004
    set $P5024, $P5025
    unless $N5004 goto if317_end537 
.annotate 'line', 582
    exists $I5003, $P101["value"]
    unless $I5003 goto if318_else538 
.annotate 'line', 583
    set fb_tmp_133, $P101
    repr_defined $I5004, fb_tmp_133
    unless $I5004 goto if319_else540 
    set $P5016, fb_tmp_133["value"]
    set $P5018, $P5016
    goto if319_end541
  if319_else540:
    null $P5017
    set $P5018, $P5017
  if319_end541:
    unless_null $P5018, vivi_320542
    nqp_get_sc_object $P5019, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5018, $P5019
  vivi_320542:
    find_lex $P5015, "RETURN"
    $P5020 = $P5015($P5018)
    set $P5023, $P5020
    goto if318_end539
  if318_else538:
.annotate 'line', 586
    find_lex $P5021, "$final_name"
    set $S5002, $P5021
    concat $S5001, "No compile-time value for ", $S5002
    box $P5022, $S5001
    die $P5022
    set $P5023, $P5022
  if318_end539:
    set $P5024, $P5023
  if317_end537:
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_393_1360432459.413") :anon :lex :outer("cuid_34_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 597
    .const 'Sub' $P5017 = 'cuid_392_1360432459.413' 
    capture_lex $P5017 
    .lex "$first", $P101 
    .lex "$i", $P102 
    .local pmc fb_tmp_135 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
    find_lex $P5003, "@name"
    set fb_tmp_135, $P5003
    repr_defined $I5001, fb_tmp_135
    unless $I5001 goto if325_else550 
    set $P5004, fb_tmp_135[0]
    set $P5006, $P5004
    goto if325_end551
  if325_else550:
    null $P5005
    set $P5006, $P5005
  if325_end551:
    unless_null $P5006, vivi_326552
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_326552:
    set $P101, $P5006
    find_lex $P5009, "self"
    nqp_decontainerize $P5008, $P5009
    nqp_get_sc_object $P5010, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 3
    repr_get_attr_obj $P5011, $P5008, $P5010, "@!BLOCKS"
    set $N5001, $P5011
    box $P5012, $N5001
    set $P102, $P5012
  while327_test553:
    set $N5002, $P102
    set $N5003, 0
    isgt $I5002, $N5002, $N5003
    box $P5016, $I5002
    set $P5015, $P5016
    unless $I5002 goto while327_done557 
  while327_redo555:
    .const 'Sub' $P5013 = 'cuid_392_1360432459.413' 
    capture_lex $P5013
    $P5014 = $P5013()
    set $P5015, $P5014
    goto while327_test553 
  while327_done557:
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_392_1360432459.413") :anon :lex :outer("cuid_393_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 600
    .lex "%sym", $P101 
    .local pmc fb_tmp_136 
    .local pmc fb_tmp_137 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $P5002, "$i"
    set $N5002, $P5002
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$i", $P5003
.annotate 'line', 602
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    nqp_get_sc_object $P5006, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 3
    repr_get_attr_obj $P5007, $P5004, $P5006, "@!BLOCKS"
    set fb_tmp_136, $P5007
    repr_defined $I5001, fb_tmp_136
    unless $I5001 goto if328_else558 
    find_lex $P5009, "$i"
    set $I5002, $P5009
    set $P5008, fb_tmp_136[$I5002]
    set $P5011, $P5008
    goto if328_end559
  if328_else558:
    null $P5010
    set $P5011, $P5010
  if328_end559:
    unless_null $P5011, vivi_329560
    nqp_get_sc_object $P5012, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5011, $P5012
  vivi_329560:
    find_lex $P5013, "$first"
    $P5014 = $P5011."symbol"($P5013)
    set $P101, $P5014
    set $N5004, $P101
    box $P5025, $N5004
    set $P5024, $P5025
    unless $N5004 goto if330_end562 
.annotate 'line', 603
    exists $I5003, $P101["value"]
    unless $I5003 goto if331_else563 
.annotate 'line', 604
    set fb_tmp_137, $P101
    repr_defined $I5004, fb_tmp_137
    unless $I5004 goto if332_else565 
    set $P5015, fb_tmp_137["value"]
    set $P5017, $P5015
    goto if332_end566
  if332_else565:
    null $P5016
    set $P5017, $P5016
  if332_end566:
    unless_null $P5017, vivi_333567
    nqp_get_sc_object $P5018, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5017, $P5018
  vivi_333567:
    store_lex "$result", $P5017
.annotate 'line', 606
    find_lex $P5019, "@name"
    $P5019."shift"()
    box $P5020, 0
    store_lex "$i", $P5020
    set $P5023, $P5020
    goto if331_end564
  if331_else563:
.annotate 'line', 609
    find_lex $P5021, "$first"
    set $S5002, $P5021
    concat $S5001, "No compile-time value for ", $S5002
    box $P5022, $S5001
    die $P5022
    set $P5023, $P5022
  if331_end564:
    set $P5024, $P5023
  if330_end562:
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_394_1360432459.413") :anon :lex :outer("cuid_34_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 617
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_138 
    find_lex $P5002, "$result"
    get_who $P5001, $P5002
    set $S5001, _lex_param_0
    exists $I5001, $P5001[$S5001]
    unless $I5001 goto if334_else568 
.annotate 'line', 618
    find_lex $P5004, "$result"
    get_who $P5003, $P5004
    set fb_tmp_138, $P5003
    repr_defined $I5002, fb_tmp_138
    unless $I5002 goto if335_else570 
    set $S5002, _lex_param_0
    set $P5005, fb_tmp_138[$S5002]
    set $P5007, $P5005
    goto if335_end571
  if335_else570:
    null $P5006
    set $P5007, $P5006
  if335_end571:
    unless_null $P5007, vivi_336572
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5007, $P5008
  vivi_336572:
    store_lex "$result", $P5007
    set $P5011, $P5007
    goto if334_end569
  if334_else568:
.annotate 'line', 621
    find_lex $P5009, "@name"
    join $S5004, "::", $P5009
    concat $S5003, "Could not locate compile-time value for symbol ", $S5004
    box $P5010, $S5003
    die $P5010
    set $P5011, $P5010
  if334_end569:
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_395_1360432459.413") :anon :lex :outer("cuid_372_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 632
    .const 'Sub' $P5288 = 'cuid_35_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_36_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_37_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_38_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_39_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_40_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_41_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_43_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_45_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_46_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_47_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_49_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_50_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_51_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_52_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_53_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_54_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_55_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_56_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_57_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_58_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_59_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_60_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_61_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_62_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_63_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_64_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_65_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_67_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_68_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_69_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_70_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_71_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_72_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_73_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_74_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_75_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_76_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_77_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_78_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_79_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_80_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_81_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_82_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_83_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_84_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_85_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_86_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_87_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_88_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_89_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_90_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_93_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_94_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_95_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_96_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_97_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_98_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_99_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_100_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_101_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_102_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_103_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_104_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_105_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_106_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_107_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_108_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_109_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_110_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_111_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_112_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_113_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_114_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_115_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_116_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_117_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_118_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_119_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_120_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_121_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_122_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_123_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_124_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_125_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_126_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_127_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_128_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_129_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_131_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_132_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_133_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_134_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_135_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_136_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_137_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_138_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_139_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_140_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_141_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_142_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_143_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_144_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_145_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_146_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_147_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_148_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_149_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_150_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_151_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_152_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_153_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_154_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_155_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_156_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_157_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_158_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_159_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_160_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_161_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_162_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_163_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_164_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_165_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_166_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_167_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_168_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_169_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_170_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_171_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_172_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_173_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_174_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_175_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_176_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_177_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_178_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_179_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_180_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_181_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_182_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_183_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_184_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_185_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_186_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_187_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_188_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_189_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_190_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_191_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_192_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_193_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_194_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_195_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_196_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_197_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_198_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_199_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_200_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_201_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_202_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_203_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_204_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_205_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_206_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_207_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_208_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_209_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_210_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_211_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_212_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_213_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_214_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_215_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_216_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_217_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_218_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_219_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_220_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_222_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_224_1360432459.413' 
    capture_lex $P5288 
    .const 'Sub' $P5288 = 'cuid_226_1360432459.413' 
    capture_lex $P5288 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .local pmc fb_tmp_139 
    .local pmc fb_tmp_140 
    .local pmc fb_tmp_141 
    .local pmc fb_tmp_142 
    .local pmc fb_tmp_143 
    .local pmc fb_tmp_144 
    .local pmc fb_tmp_145 
    .local pmc fb_tmp_146 
    .local pmc fb_tmp_147 
    .local pmc fb_tmp_148 
    .local pmc fb_tmp_149 
    .local pmc fb_tmp_150 
    .local pmc fb_tmp_151 
    .local pmc fb_tmp_152 
    .local pmc fb_tmp_153 
.annotate 'line', 1298
.annotate 'line', 1299
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5002, $P5003, "NQP"
    get_who $P5001, $P5002
    set fb_tmp_139, $P5001
    repr_defined $I5001, fb_tmp_139
    unless $I5001 goto if337_else576 
    set $P5004, fb_tmp_139["Grammar"]
    set $P5006, $P5004
    goto if337_end577
  if337_else576:
    null $P5005
    set $P5006, $P5005
  if337_end577:
    unless_null $P5006, vivi_338578
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_338578:
    $P5006."O"(":prec<y=>, :assoc<unary>", "%methodop")
.annotate 'line', 1300
    nqp_get_sc_object $P5010, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5009, $P5010, "NQP"
    get_who $P5008, $P5009
    set fb_tmp_140, $P5008
    repr_defined $I5002, fb_tmp_140
    unless $I5002 goto if339_else579 
    set $P5011, fb_tmp_140["Grammar"]
    set $P5013, $P5011
    goto if339_end580
  if339_else579:
    null $P5012
    set $P5013, $P5012
  if339_end580:
    unless_null $P5013, vivi_340581
    nqp_get_sc_object $P5014, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5013, $P5014
  vivi_340581:
    $P5013."O"(":prec<x=>, :assoc<unary>", "%autoincrement")
.annotate 'line', 1301
    nqp_get_sc_object $P5017, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5016, $P5017, "NQP"
    get_who $P5015, $P5016
    set fb_tmp_141, $P5015
    repr_defined $I5003, fb_tmp_141
    unless $I5003 goto if341_else582 
    set $P5018, fb_tmp_141["Grammar"]
    set $P5020, $P5018
    goto if341_end583
  if341_else582:
    null $P5019
    set $P5020, $P5019
  if341_end583:
    unless_null $P5020, vivi_342584
    nqp_get_sc_object $P5021, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5020, $P5021
  vivi_342584:
    $P5020."O"(":prec<w=>, :assoc<left>", "%exponentiation")
.annotate 'line', 1302
    nqp_get_sc_object $P5024, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5023, $P5024, "NQP"
    get_who $P5022, $P5023
    set fb_tmp_142, $P5022
    repr_defined $I5004, fb_tmp_142
    unless $I5004 goto if343_else585 
    set $P5025, fb_tmp_142["Grammar"]
    set $P5027, $P5025
    goto if343_end586
  if343_else585:
    null $P5026
    set $P5027, $P5026
  if343_end586:
    unless_null $P5027, vivi_344587
    nqp_get_sc_object $P5028, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5027, $P5028
  vivi_344587:
    $P5027."O"(":prec<v=>, :assoc<unary>", "%symbolic_unary")
.annotate 'line', 1303
    nqp_get_sc_object $P5031, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5030, $P5031, "NQP"
    get_who $P5029, $P5030
    set fb_tmp_143, $P5029
    repr_defined $I5005, fb_tmp_143
    unless $I5005 goto if345_else588 
    set $P5032, fb_tmp_143["Grammar"]
    set $P5034, $P5032
    goto if345_end589
  if345_else588:
    null $P5033
    set $P5034, $P5033
  if345_end589:
    unless_null $P5034, vivi_346590
    nqp_get_sc_object $P5035, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5034, $P5035
  vivi_346590:
    $P5034."O"(":prec<u=>, :assoc<left>", "%multiplicative")
.annotate 'line', 1304
    nqp_get_sc_object $P5038, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5037, $P5038, "NQP"
    get_who $P5036, $P5037
    set fb_tmp_144, $P5036
    repr_defined $I5006, fb_tmp_144
    unless $I5006 goto if347_else591 
    set $P5039, fb_tmp_144["Grammar"]
    set $P5041, $P5039
    goto if347_end592
  if347_else591:
    null $P5040
    set $P5041, $P5040
  if347_end592:
    unless_null $P5041, vivi_348593
    nqp_get_sc_object $P5042, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5041, $P5042
  vivi_348593:
    $P5041."O"(":prec<t=>, :assoc<left>", "%additive")
.annotate 'line', 1305
    nqp_get_sc_object $P5045, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5044, $P5045, "NQP"
    get_who $P5043, $P5044
    set fb_tmp_145, $P5043
    repr_defined $I5007, fb_tmp_145
    unless $I5007 goto if349_else594 
    set $P5046, fb_tmp_145["Grammar"]
    set $P5048, $P5046
    goto if349_end595
  if349_else594:
    null $P5047
    set $P5048, $P5047
  if349_end595:
    unless_null $P5048, vivi_350596
    nqp_get_sc_object $P5049, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5048, $P5049
  vivi_350596:
    $P5048."O"(":prec<r=>, :assoc<left>", "%concatenation")
.annotate 'line', 1306
    nqp_get_sc_object $P5052, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5051, $P5052, "NQP"
    get_who $P5050, $P5051
    set fb_tmp_146, $P5050
    repr_defined $I5008, fb_tmp_146
    unless $I5008 goto if351_else597 
    set $P5053, fb_tmp_146["Grammar"]
    set $P5055, $P5053
    goto if351_end598
  if351_else597:
    null $P5054
    set $P5055, $P5054
  if351_end598:
    unless_null $P5055, vivi_352599
    nqp_get_sc_object $P5056, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5055, $P5056
  vivi_352599:
    $P5055."O"(":prec<m=>, :assoc<left>", "%relational")
.annotate 'line', 1307
    nqp_get_sc_object $P5059, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5058, $P5059, "NQP"
    get_who $P5057, $P5058
    set fb_tmp_147, $P5057
    repr_defined $I5009, fb_tmp_147
    unless $I5009 goto if353_else600 
    set $P5060, fb_tmp_147["Grammar"]
    set $P5062, $P5060
    goto if353_end601
  if353_else600:
    null $P5061
    set $P5062, $P5061
  if353_end601:
    unless_null $P5062, vivi_354602
    nqp_get_sc_object $P5063, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5062, $P5063
  vivi_354602:
    $P5062."O"(":prec<l=>, :assoc<left>", "%tight_and")
.annotate 'line', 1308
    nqp_get_sc_object $P5066, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5065, $P5066, "NQP"
    get_who $P5064, $P5065
    set fb_tmp_148, $P5064
    repr_defined $I5010, fb_tmp_148
    unless $I5010 goto if355_else603 
    set $P5067, fb_tmp_148["Grammar"]
    set $P5069, $P5067
    goto if355_end604
  if355_else603:
    null $P5068
    set $P5069, $P5068
  if355_end604:
    unless_null $P5069, vivi_356605
    nqp_get_sc_object $P5070, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5069, $P5070
  vivi_356605:
    $P5069."O"(":prec<k=>, :assoc<left>", "%tight_or")
.annotate 'line', 1309
    nqp_get_sc_object $P5073, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5072, $P5073, "NQP"
    get_who $P5071, $P5072
    set fb_tmp_149, $P5071
    repr_defined $I5011, fb_tmp_149
    unless $I5011 goto if357_else606 
    set $P5074, fb_tmp_149["Grammar"]
    set $P5076, $P5074
    goto if357_end607
  if357_else606:
    null $P5075
    set $P5076, $P5075
  if357_end607:
    unless_null $P5076, vivi_358608
    nqp_get_sc_object $P5077, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5076, $P5077
  vivi_358608:
    $P5076."O"(":prec<j=>, :assoc<right>", "%conditional")
.annotate 'line', 1310
    nqp_get_sc_object $P5080, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5079, $P5080, "NQP"
    get_who $P5078, $P5079
    set fb_tmp_150, $P5078
    repr_defined $I5012, fb_tmp_150
    unless $I5012 goto if359_else609 
    set $P5081, fb_tmp_150["Grammar"]
    set $P5083, $P5081
    goto if359_end610
  if359_else609:
    null $P5082
    set $P5083, $P5082
  if359_end610:
    unless_null $P5083, vivi_360611
    nqp_get_sc_object $P5084, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5083, $P5084
  vivi_360611:
    $P5083."O"(":prec<i=>, :assoc<right>", "%assignment")
.annotate 'line', 1311
    nqp_get_sc_object $P5087, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5086, $P5087, "NQP"
    get_who $P5085, $P5086
    set fb_tmp_151, $P5085
    repr_defined $I5013, fb_tmp_151
    unless $I5013 goto if361_else612 
    set $P5088, fb_tmp_151["Grammar"]
    set $P5090, $P5088
    goto if361_end613
  if361_else612:
    null $P5089
    set $P5090, $P5089
  if361_end613:
    unless_null $P5090, vivi_362614
    nqp_get_sc_object $P5091, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5090, $P5091
  vivi_362614:
    $P5090."O"(":prec<g=>, :assoc<list>, :nextterm<nulltermish>", "%comma")
.annotate 'line', 1312
    nqp_get_sc_object $P5094, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5093, $P5094, "NQP"
    get_who $P5092, $P5093
    set fb_tmp_152, $P5092
    repr_defined $I5014, fb_tmp_152
    unless $I5014 goto if363_else615 
    set $P5095, fb_tmp_152["Grammar"]
    set $P5097, $P5095
    goto if363_end616
  if363_else615:
    null $P5096
    set $P5097, $P5096
  if363_end616:
    unless_null $P5097, vivi_364617
    nqp_get_sc_object $P5098, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5097, $P5098
  vivi_364617:
    $P5097."O"(":prec<f=>, :assoc<list>", "%list_infix")
.annotate 'line', 1313
    nqp_get_sc_object $P5101, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5100, $P5101, "NQP"
    get_who $P5099, $P5100
    set fb_tmp_153, $P5099
    repr_defined $I5015, fb_tmp_153
    unless $I5015 goto if365_else618 
    set $P5102, fb_tmp_153["Grammar"]
    set $P5104, $P5102
    goto if365_end619
  if365_else618:
    null $P5103
    set $P5104, $P5103
  if365_end619:
    unless_null $P5104, vivi_366620
    nqp_get_sc_object $P5105, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5104, $P5105
  vivi_366620:
    $P5104."O"(":prec<e=>, :assoc<unary>", "%list_prefix")
.annotate 'line', 632
    .const 'Sub' $P5106 = 'cuid_35_1360432459.413' 
    capture_lex $P5106
    .const 'Sub' $P5107 = 'cuid_36_1360432459.413' 
    capture_lex $P5107
    .const 'Sub' $P5108 = 'cuid_37_1360432459.413' 
    capture_lex $P5108
    .const 'Sub' $P5109 = 'cuid_38_1360432459.413' 
    capture_lex $P5109
    .const 'Sub' $P5110 = 'cuid_39_1360432459.413' 
    capture_lex $P5110
    .const 'Sub' $P5111 = 'cuid_40_1360432459.413' 
    capture_lex $P5111
    .const 'Sub' $P5112 = 'cuid_41_1360432459.413' 
    capture_lex $P5112
    .const 'Sub' $P5113 = 'cuid_43_1360432459.413' 
    capture_lex $P5113
    .const 'Sub' $P5114 = 'cuid_45_1360432459.413' 
    capture_lex $P5114
    .const 'Sub' $P5115 = 'cuid_46_1360432459.413' 
    capture_lex $P5115
    .const 'Sub' $P5116 = 'cuid_47_1360432459.413' 
    capture_lex $P5116
    .const 'Sub' $P5117 = 'cuid_49_1360432459.413' 
    capture_lex $P5117
    .const 'Sub' $P5118 = 'cuid_50_1360432459.413' 
    capture_lex $P5118
    .const 'Sub' $P5119 = 'cuid_51_1360432459.413' 
    capture_lex $P5119
    .const 'Sub' $P5120 = 'cuid_52_1360432459.413' 
    capture_lex $P5120
    .const 'Sub' $P5121 = 'cuid_53_1360432459.413' 
    capture_lex $P5121
    .const 'Sub' $P5122 = 'cuid_54_1360432459.413' 
    capture_lex $P5122
    .const 'Sub' $P5123 = 'cuid_55_1360432459.413' 
    capture_lex $P5123
    .const 'Sub' $P5124 = 'cuid_56_1360432459.413' 
    capture_lex $P5124
    .const 'Sub' $P5125 = 'cuid_57_1360432459.413' 
    capture_lex $P5125
    .const 'Sub' $P5126 = 'cuid_58_1360432459.413' 
    capture_lex $P5126
    .const 'Sub' $P5127 = 'cuid_59_1360432459.413' 
    capture_lex $P5127
    .const 'Sub' $P5128 = 'cuid_60_1360432459.413' 
    capture_lex $P5128
    .const 'Sub' $P5129 = 'cuid_61_1360432459.413' 
    capture_lex $P5129
    .const 'Sub' $P5130 = 'cuid_62_1360432459.413' 
    capture_lex $P5130
    .const 'Sub' $P5131 = 'cuid_63_1360432459.413' 
    capture_lex $P5131
    .const 'Sub' $P5132 = 'cuid_64_1360432459.413' 
    capture_lex $P5132
    .const 'Sub' $P5133 = 'cuid_65_1360432459.413' 
    capture_lex $P5133
    .const 'Sub' $P5134 = 'cuid_67_1360432459.413' 
    capture_lex $P5134
    .const 'Sub' $P5135 = 'cuid_68_1360432459.413' 
    capture_lex $P5135
    .const 'Sub' $P5136 = 'cuid_69_1360432459.413' 
    capture_lex $P5136
    .const 'Sub' $P5137 = 'cuid_70_1360432459.413' 
    capture_lex $P5137
    .const 'Sub' $P5138 = 'cuid_71_1360432459.413' 
    capture_lex $P5138
    .const 'Sub' $P5139 = 'cuid_72_1360432459.413' 
    capture_lex $P5139
    .const 'Sub' $P5140 = 'cuid_73_1360432459.413' 
    capture_lex $P5140
    .const 'Sub' $P5141 = 'cuid_74_1360432459.413' 
    capture_lex $P5141
    .const 'Sub' $P5142 = 'cuid_75_1360432459.413' 
    capture_lex $P5142
    .const 'Sub' $P5143 = 'cuid_76_1360432459.413' 
    capture_lex $P5143
    .const 'Sub' $P5144 = 'cuid_77_1360432459.413' 
    capture_lex $P5144
    .const 'Sub' $P5145 = 'cuid_78_1360432459.413' 
    capture_lex $P5145
    .const 'Sub' $P5146 = 'cuid_79_1360432459.413' 
    capture_lex $P5146
    .const 'Sub' $P5147 = 'cuid_80_1360432459.413' 
    capture_lex $P5147
    .const 'Sub' $P5148 = 'cuid_81_1360432459.413' 
    capture_lex $P5148
    .const 'Sub' $P5149 = 'cuid_82_1360432459.413' 
    capture_lex $P5149
    .const 'Sub' $P5150 = 'cuid_83_1360432459.413' 
    capture_lex $P5150
    .const 'Sub' $P5151 = 'cuid_84_1360432459.413' 
    capture_lex $P5151
    .const 'Sub' $P5152 = 'cuid_85_1360432459.413' 
    capture_lex $P5152
    .const 'Sub' $P5153 = 'cuid_86_1360432459.413' 
    capture_lex $P5153
    .const 'Sub' $P5154 = 'cuid_87_1360432459.413' 
    capture_lex $P5154
    .const 'Sub' $P5155 = 'cuid_88_1360432459.413' 
    capture_lex $P5155
    .const 'Sub' $P5156 = 'cuid_89_1360432459.413' 
    capture_lex $P5156
    .const 'Sub' $P5157 = 'cuid_90_1360432459.413' 
    capture_lex $P5157
    .const 'Sub' $P5158 = 'cuid_93_1360432459.413' 
    capture_lex $P5158
    .const 'Sub' $P5159 = 'cuid_94_1360432459.413' 
    capture_lex $P5159
    .const 'Sub' $P5160 = 'cuid_95_1360432459.413' 
    capture_lex $P5160
    .const 'Sub' $P5161 = 'cuid_96_1360432459.413' 
    capture_lex $P5161
    .const 'Sub' $P5162 = 'cuid_97_1360432459.413' 
    capture_lex $P5162
    .const 'Sub' $P5163 = 'cuid_98_1360432459.413' 
    capture_lex $P5163
    .const 'Sub' $P5164 = 'cuid_99_1360432459.413' 
    capture_lex $P5164
    .const 'Sub' $P5165 = 'cuid_100_1360432459.413' 
    capture_lex $P5165
    .const 'Sub' $P5166 = 'cuid_101_1360432459.413' 
    capture_lex $P5166
    .const 'Sub' $P5167 = 'cuid_102_1360432459.413' 
    capture_lex $P5167
    .const 'Sub' $P5168 = 'cuid_103_1360432459.413' 
    capture_lex $P5168
    .const 'Sub' $P5169 = 'cuid_104_1360432459.413' 
    capture_lex $P5169
    .const 'Sub' $P5170 = 'cuid_105_1360432459.413' 
    capture_lex $P5170
    .const 'Sub' $P5171 = 'cuid_106_1360432459.413' 
    capture_lex $P5171
    .const 'Sub' $P5172 = 'cuid_107_1360432459.413' 
    capture_lex $P5172
    .const 'Sub' $P5173 = 'cuid_108_1360432459.413' 
    capture_lex $P5173
    .const 'Sub' $P5174 = 'cuid_109_1360432459.413' 
    capture_lex $P5174
    .const 'Sub' $P5175 = 'cuid_110_1360432459.413' 
    capture_lex $P5175
    .const 'Sub' $P5176 = 'cuid_111_1360432459.413' 
    capture_lex $P5176
    .const 'Sub' $P5177 = 'cuid_112_1360432459.413' 
    capture_lex $P5177
    .const 'Sub' $P5178 = 'cuid_113_1360432459.413' 
    capture_lex $P5178
    .const 'Sub' $P5179 = 'cuid_114_1360432459.413' 
    capture_lex $P5179
    .const 'Sub' $P5180 = 'cuid_115_1360432459.413' 
    capture_lex $P5180
    .const 'Sub' $P5181 = 'cuid_116_1360432459.413' 
    capture_lex $P5181
    .const 'Sub' $P5182 = 'cuid_117_1360432459.413' 
    capture_lex $P5182
    .const 'Sub' $P5183 = 'cuid_118_1360432459.413' 
    capture_lex $P5183
    .const 'Sub' $P5184 = 'cuid_119_1360432459.413' 
    capture_lex $P5184
    .const 'Sub' $P5185 = 'cuid_120_1360432459.413' 
    capture_lex $P5185
    .const 'Sub' $P5186 = 'cuid_121_1360432459.413' 
    capture_lex $P5186
    .const 'Sub' $P5187 = 'cuid_122_1360432459.413' 
    capture_lex $P5187
    .const 'Sub' $P5188 = 'cuid_123_1360432459.413' 
    capture_lex $P5188
    .const 'Sub' $P5189 = 'cuid_124_1360432459.413' 
    capture_lex $P5189
    .const 'Sub' $P5190 = 'cuid_125_1360432459.413' 
    capture_lex $P5190
    .const 'Sub' $P5191 = 'cuid_126_1360432459.413' 
    capture_lex $P5191
    .const 'Sub' $P5192 = 'cuid_127_1360432459.413' 
    capture_lex $P5192
    .const 'Sub' $P5193 = 'cuid_128_1360432459.413' 
    capture_lex $P5193
    .const 'Sub' $P5194 = 'cuid_129_1360432459.413' 
    capture_lex $P5194
    .const 'Sub' $P5195 = 'cuid_131_1360432459.413' 
    capture_lex $P5195
    .const 'Sub' $P5196 = 'cuid_132_1360432459.413' 
    capture_lex $P5196
    .const 'Sub' $P5197 = 'cuid_133_1360432459.413' 
    capture_lex $P5197
    .const 'Sub' $P5198 = 'cuid_134_1360432459.413' 
    capture_lex $P5198
    .const 'Sub' $P5199 = 'cuid_135_1360432459.413' 
    capture_lex $P5199
    .const 'Sub' $P5200 = 'cuid_136_1360432459.413' 
    capture_lex $P5200
    .const 'Sub' $P5201 = 'cuid_137_1360432459.413' 
    capture_lex $P5201
    .const 'Sub' $P5202 = 'cuid_138_1360432459.413' 
    capture_lex $P5202
    .const 'Sub' $P5203 = 'cuid_139_1360432459.413' 
    capture_lex $P5203
    .const 'Sub' $P5204 = 'cuid_140_1360432459.413' 
    capture_lex $P5204
    .const 'Sub' $P5205 = 'cuid_141_1360432459.413' 
    capture_lex $P5205
    .const 'Sub' $P5206 = 'cuid_142_1360432459.413' 
    capture_lex $P5206
    .const 'Sub' $P5207 = 'cuid_143_1360432459.413' 
    capture_lex $P5207
    .const 'Sub' $P5208 = 'cuid_144_1360432459.413' 
    capture_lex $P5208
    .const 'Sub' $P5209 = 'cuid_145_1360432459.413' 
    capture_lex $P5209
    .const 'Sub' $P5210 = 'cuid_146_1360432459.413' 
    capture_lex $P5210
    .const 'Sub' $P5211 = 'cuid_147_1360432459.413' 
    capture_lex $P5211
    .const 'Sub' $P5212 = 'cuid_148_1360432459.413' 
    capture_lex $P5212
    .const 'Sub' $P5213 = 'cuid_149_1360432459.413' 
    capture_lex $P5213
    .const 'Sub' $P5214 = 'cuid_150_1360432459.413' 
    capture_lex $P5214
    .const 'Sub' $P5215 = 'cuid_151_1360432459.413' 
    capture_lex $P5215
    .const 'Sub' $P5216 = 'cuid_152_1360432459.413' 
    capture_lex $P5216
    .const 'Sub' $P5217 = 'cuid_153_1360432459.413' 
    capture_lex $P5217
    .const 'Sub' $P5218 = 'cuid_154_1360432459.413' 
    capture_lex $P5218
    .const 'Sub' $P5219 = 'cuid_155_1360432459.413' 
    capture_lex $P5219
    .const 'Sub' $P5220 = 'cuid_156_1360432459.413' 
    capture_lex $P5220
    .const 'Sub' $P5221 = 'cuid_157_1360432459.413' 
    capture_lex $P5221
    .const 'Sub' $P5222 = 'cuid_158_1360432459.413' 
    capture_lex $P5222
    .const 'Sub' $P5223 = 'cuid_159_1360432459.413' 
    capture_lex $P5223
    .const 'Sub' $P5224 = 'cuid_160_1360432459.413' 
    capture_lex $P5224
    .const 'Sub' $P5225 = 'cuid_161_1360432459.413' 
    capture_lex $P5225
    .const 'Sub' $P5226 = 'cuid_162_1360432459.413' 
    capture_lex $P5226
    .const 'Sub' $P5227 = 'cuid_163_1360432459.413' 
    capture_lex $P5227
    .const 'Sub' $P5228 = 'cuid_164_1360432459.413' 
    capture_lex $P5228
    .const 'Sub' $P5229 = 'cuid_165_1360432459.413' 
    capture_lex $P5229
    .const 'Sub' $P5230 = 'cuid_166_1360432459.413' 
    capture_lex $P5230
    .const 'Sub' $P5231 = 'cuid_167_1360432459.413' 
    capture_lex $P5231
    .const 'Sub' $P5232 = 'cuid_168_1360432459.413' 
    capture_lex $P5232
    .const 'Sub' $P5233 = 'cuid_169_1360432459.413' 
    capture_lex $P5233
    .const 'Sub' $P5234 = 'cuid_170_1360432459.413' 
    capture_lex $P5234
    .const 'Sub' $P5235 = 'cuid_171_1360432459.413' 
    capture_lex $P5235
    .const 'Sub' $P5236 = 'cuid_172_1360432459.413' 
    capture_lex $P5236
    .const 'Sub' $P5237 = 'cuid_173_1360432459.413' 
    capture_lex $P5237
    .const 'Sub' $P5238 = 'cuid_174_1360432459.413' 
    capture_lex $P5238
    .const 'Sub' $P5239 = 'cuid_175_1360432459.413' 
    capture_lex $P5239
    .const 'Sub' $P5240 = 'cuid_176_1360432459.413' 
    capture_lex $P5240
    .const 'Sub' $P5241 = 'cuid_177_1360432459.413' 
    capture_lex $P5241
    .const 'Sub' $P5242 = 'cuid_178_1360432459.413' 
    capture_lex $P5242
    .const 'Sub' $P5243 = 'cuid_179_1360432459.413' 
    capture_lex $P5243
    .const 'Sub' $P5244 = 'cuid_180_1360432459.413' 
    capture_lex $P5244
    .const 'Sub' $P5245 = 'cuid_181_1360432459.413' 
    capture_lex $P5245
    .const 'Sub' $P5246 = 'cuid_182_1360432459.413' 
    capture_lex $P5246
    .const 'Sub' $P5247 = 'cuid_183_1360432459.413' 
    capture_lex $P5247
    .const 'Sub' $P5248 = 'cuid_184_1360432459.413' 
    capture_lex $P5248
    .const 'Sub' $P5249 = 'cuid_185_1360432459.413' 
    capture_lex $P5249
    .const 'Sub' $P5250 = 'cuid_186_1360432459.413' 
    capture_lex $P5250
    .const 'Sub' $P5251 = 'cuid_187_1360432459.413' 
    capture_lex $P5251
    .const 'Sub' $P5252 = 'cuid_188_1360432459.413' 
    capture_lex $P5252
    .const 'Sub' $P5253 = 'cuid_189_1360432459.413' 
    capture_lex $P5253
    .const 'Sub' $P5254 = 'cuid_190_1360432459.413' 
    capture_lex $P5254
    .const 'Sub' $P5255 = 'cuid_191_1360432459.413' 
    capture_lex $P5255
    .const 'Sub' $P5256 = 'cuid_192_1360432459.413' 
    capture_lex $P5256
    .const 'Sub' $P5257 = 'cuid_193_1360432459.413' 
    capture_lex $P5257
    .const 'Sub' $P5258 = 'cuid_194_1360432459.413' 
    capture_lex $P5258
    .const 'Sub' $P5259 = 'cuid_195_1360432459.413' 
    capture_lex $P5259
    .const 'Sub' $P5260 = 'cuid_196_1360432459.413' 
    capture_lex $P5260
    .const 'Sub' $P5261 = 'cuid_197_1360432459.413' 
    capture_lex $P5261
    .const 'Sub' $P5262 = 'cuid_198_1360432459.413' 
    capture_lex $P5262
    .const 'Sub' $P5263 = 'cuid_199_1360432459.413' 
    capture_lex $P5263
    .const 'Sub' $P5264 = 'cuid_200_1360432459.413' 
    capture_lex $P5264
    .const 'Sub' $P5265 = 'cuid_201_1360432459.413' 
    capture_lex $P5265
    .const 'Sub' $P5266 = 'cuid_202_1360432459.413' 
    capture_lex $P5266
    .const 'Sub' $P5267 = 'cuid_203_1360432459.413' 
    capture_lex $P5267
    .const 'Sub' $P5268 = 'cuid_204_1360432459.413' 
    capture_lex $P5268
    .const 'Sub' $P5269 = 'cuid_205_1360432459.413' 
    capture_lex $P5269
    .const 'Sub' $P5270 = 'cuid_206_1360432459.413' 
    capture_lex $P5270
    .const 'Sub' $P5271 = 'cuid_207_1360432459.413' 
    capture_lex $P5271
    .const 'Sub' $P5272 = 'cuid_208_1360432459.413' 
    capture_lex $P5272
    .const 'Sub' $P5273 = 'cuid_209_1360432459.413' 
    capture_lex $P5273
    .const 'Sub' $P5274 = 'cuid_210_1360432459.413' 
    capture_lex $P5274
    .const 'Sub' $P5275 = 'cuid_211_1360432459.413' 
    capture_lex $P5275
    .const 'Sub' $P5276 = 'cuid_212_1360432459.413' 
    capture_lex $P5276
    .const 'Sub' $P5277 = 'cuid_213_1360432459.413' 
    capture_lex $P5277
    .const 'Sub' $P5278 = 'cuid_214_1360432459.413' 
    capture_lex $P5278
    .const 'Sub' $P5279 = 'cuid_215_1360432459.413' 
    capture_lex $P5279
    .const 'Sub' $P5280 = 'cuid_216_1360432459.413' 
    capture_lex $P5280
    .const 'Sub' $P5281 = 'cuid_217_1360432459.413' 
    capture_lex $P5281
    .const 'Sub' $P5282 = 'cuid_218_1360432459.413' 
    capture_lex $P5282
    .const 'Sub' $P5283 = 'cuid_219_1360432459.413' 
    capture_lex $P5283
    .const 'Sub' $P5284 = 'cuid_220_1360432459.413' 
    capture_lex $P5284
    .const 'Sub' $P5285 = 'cuid_222_1360432459.413' 
    capture_lex $P5285
    .const 'Sub' $P5286 = 'cuid_224_1360432459.413' 
    capture_lex $P5286
    .const 'Sub' $P5287 = 'cuid_226_1360432459.413' 
    capture_lex $P5287
    .return ($P5287) 
.end
.HLL "nqp"
.namespace []
.sub "TOP" :subid("cuid_35_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 633
    .param pmc _lex_param_0 
    .lex "%*LANG", $P101 
    .lex "%*HOW", $P102 
    .lex "$file", $P103 
    .lex "$source_id", $P104 
    .lex "$*W", $P105 
    .lex "$*SCOPE", $P106 
    .lex "$*MULTINESS", $P107 
    .lex "$*PKGDECL", $P108 
    .lex "$*INVOCANT_OK", $P109 
    .lex "$*RETURN_USED", $P110 
    .lex "$*CONTROL_USED", $P111 
    .lex "%*HANDLERS", $P112 
    .lex "self", _lex_param_0 
    .local pmc fb_tmp_154 
    .local pmc fb_tmp_155 
    .local pmc fb_tmp_156 
    .local pmc fb_tmp_157 
    .local pmc fb_tmp_158 
    .local pmc fb_tmp_159 
    .local pmc fb_tmp_160 
    .local pmc fb_tmp_161 
    .local pmc fb_tmp_162 
    .local pmc fb_tmp_163 
    .local pmc fb_tmp_164 
    .local pmc fb_tmp_165 
    .local pmc fb_tmp_166 
    .local pmc fb_tmp_167 
    .local pmc fb_tmp_168 
    .local pmc fb_tmp_169 
    .local pmc fb_tmp_170 
    .local pmc fb_tmp_171 
    new $P5001, 'Hash'
    set $P101, $P5001
    new $P5002, 'Hash'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P105, $P5005
    nqp_get_sc_object $P5006, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P106, $P5006
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P107, $P5007
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P108, $P5008
    nqp_get_sc_object $P5009, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P109, $P5009
    nqp_get_sc_object $P5010, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P110, $P5010
    nqp_get_sc_object $P5011, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P111, $P5011
    new $P5012, 'Hash'
    set $P112, $P5012
    unless_null $P101, fallback626
    nqp_get_sc_object $P5023, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5022, $P5023
    set fb_tmp_155, $P5022
    repr_defined $I5002, fb_tmp_155
    unless $I5002 goto if370_else627 
    set $P5024, fb_tmp_155["%LANG"]
    set $P5026, $P5024
    goto if370_end628
  if370_else627:
    null $P5025
    set $P5026, $P5025
  if370_end628:
    unless_null $P5026, vivi_371629
    nqp_get_sc_object $P5028, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5027, $P5028
    new $P5029, 'Hash'
    set $P5027["%LANG"], $P5029
    set $P5026, $P5029
  vivi_371629:
    unless_null $P5026, vivi_372630
    die "Contextual %*LANG not found"
    box $P5030, "Contextual %*LANG not found"
    set $P5026, $P5030
  vivi_372630:
    set $P101, $P5026
  fallback626:
    nqp_get_sc_object $P5033, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5032, $P5033, "NQP"
    get_who $P5031, $P5032
    set fb_tmp_156, $P5031
    repr_defined $I5003, fb_tmp_156
    unless $I5003 goto if373_else631 
    set $P5034, fb_tmp_156["Regex"]
    set $P5036, $P5034
    goto if373_end632
  if373_else631:
    null $P5035
    set $P5036, $P5035
  if373_end632:
    unless_null $P5036, vivi_374633
    nqp_get_sc_object $P5037, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5036, $P5037
  vivi_374633:
    set $P101["Regex"], $P5036
    unless_null $P101, fallback634
    nqp_get_sc_object $P5039, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5038, $P5039
    set fb_tmp_157, $P5038
    repr_defined $I5004, fb_tmp_157
    unless $I5004 goto if375_else635 
    set $P5040, fb_tmp_157["%LANG"]
    set $P5042, $P5040
    goto if375_end636
  if375_else635:
    null $P5041
    set $P5042, $P5041
  if375_end636:
    unless_null $P5042, vivi_376637
    nqp_get_sc_object $P5044, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5043, $P5044
    new $P5045, 'Hash'
    set $P5043["%LANG"], $P5045
    set $P5042, $P5045
  vivi_376637:
    unless_null $P5042, vivi_377638
    die "Contextual %*LANG not found"
    box $P5046, "Contextual %*LANG not found"
    set $P5042, $P5046
  vivi_377638:
    set $P101, $P5042
  fallback634:
    nqp_get_sc_object $P5049, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5048, $P5049, "NQP"
    get_who $P5047, $P5048
    set fb_tmp_158, $P5047
    repr_defined $I5005, fb_tmp_158
    unless $I5005 goto if378_else639 
    set $P5050, fb_tmp_158["RegexActions"]
    set $P5052, $P5050
    goto if378_end640
  if378_else639:
    null $P5051
    set $P5052, $P5051
  if378_end640:
    unless_null $P5052, vivi_379641
    nqp_get_sc_object $P5053, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5052, $P5053
  vivi_379641:
    set $P101["Regex-actions"], $P5052
    unless_null $P101, fallback642
    nqp_get_sc_object $P5055, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5054, $P5055
    set fb_tmp_159, $P5054
    repr_defined $I5006, fb_tmp_159
    unless $I5006 goto if380_else643 
    set $P5056, fb_tmp_159["%LANG"]
    set $P5058, $P5056
    goto if380_end644
  if380_else643:
    null $P5057
    set $P5058, $P5057
  if380_end644:
    unless_null $P5058, vivi_381645
    nqp_get_sc_object $P5060, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5059, $P5060
    new $P5061, 'Hash'
    set $P5059["%LANG"], $P5061
    set $P5058, $P5061
  vivi_381645:
    unless_null $P5058, vivi_382646
    die "Contextual %*LANG not found"
    box $P5062, "Contextual %*LANG not found"
    set $P5058, $P5062
  vivi_382646:
    set $P101, $P5058
  fallback642:
    nqp_get_sc_object $P5065, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5064, $P5065, "NQP"
    get_who $P5063, $P5064
    set fb_tmp_160, $P5063
    repr_defined $I5007, fb_tmp_160
    unless $I5007 goto if383_else647 
    set $P5066, fb_tmp_160["Grammar"]
    set $P5068, $P5066
    goto if383_end648
  if383_else647:
    null $P5067
    set $P5068, $P5067
  if383_end648:
    unless_null $P5068, vivi_384649
    nqp_get_sc_object $P5069, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5068, $P5069
  vivi_384649:
    set $P101["MAIN"], $P5068
    unless_null $P101, fallback650
    nqp_get_sc_object $P5071, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5070, $P5071
    set fb_tmp_161, $P5070
    repr_defined $I5008, fb_tmp_161
    unless $I5008 goto if385_else651 
    set $P5072, fb_tmp_161["%LANG"]
    set $P5074, $P5072
    goto if385_end652
  if385_else651:
    null $P5073
    set $P5074, $P5073
  if385_end652:
    unless_null $P5074, vivi_386653
    nqp_get_sc_object $P5076, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5075, $P5076
    new $P5077, 'Hash'
    set $P5075["%LANG"], $P5077
    set $P5074, $P5077
  vivi_386653:
    unless_null $P5074, vivi_387654
    die "Contextual %*LANG not found"
    box $P5078, "Contextual %*LANG not found"
    set $P5074, $P5078
  vivi_387654:
    set $P101, $P5074
  fallback650:
    nqp_get_sc_object $P5081, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5080, $P5081, "NQP"
    get_who $P5079, $P5080
    set fb_tmp_162, $P5079
    repr_defined $I5009, fb_tmp_162
    unless $I5009 goto if388_else655 
    set $P5082, fb_tmp_162["Actions"]
    set $P5084, $P5082
    goto if388_end656
  if388_else655:
    null $P5083
    set $P5084, $P5083
  if388_end656:
    unless_null $P5084, vivi_389657
    nqp_get_sc_object $P5085, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5084, $P5085
  vivi_389657:
    set $P101["MAIN-actions"], $P5084
    unless_null $P102, fallback663
    nqp_get_sc_object $P5096, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5095, $P5096
    set fb_tmp_164, $P5095
    repr_defined $I5011, fb_tmp_164
    unless $I5011 goto if393_else664 
    set $P5097, fb_tmp_164["%HOW"]
    set $P5099, $P5097
    goto if393_end665
  if393_else664:
    null $P5098
    set $P5099, $P5098
  if393_end665:
    unless_null $P5099, vivi_394666
    nqp_get_sc_object $P5101, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5100, $P5101
    new $P5102, 'Hash'
    set $P5100["%HOW"], $P5102
    set $P5099, $P5102
  vivi_394666:
    unless_null $P5099, vivi_395667
    die "Contextual %*HOW not found"
    box $P5103, "Contextual %*HOW not found"
    set $P5099, $P5103
  vivi_395667:
    set $P102, $P5099
  fallback663:
    get_knowhow $P5104
    set $P102["knowhow"], $P5104
    unless_null $P102, fallback668
    nqp_get_sc_object $P5106, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5105, $P5106
    set fb_tmp_165, $P5105
    repr_defined $I5012, fb_tmp_165
    unless $I5012 goto if396_else669 
    set $P5107, fb_tmp_165["%HOW"]
    set $P5109, $P5107
    goto if396_end670
  if396_else669:
    null $P5108
    set $P5109, $P5108
  if396_end670:
    unless_null $P5109, vivi_397671
    nqp_get_sc_object $P5111, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5110, $P5111
    new $P5112, 'Hash'
    set $P5110["%HOW"], $P5112
    set $P5109, $P5112
  vivi_397671:
    unless_null $P5109, vivi_398672
    die "Contextual %*HOW not found"
    box $P5113, "Contextual %*HOW not found"
    set $P5109, $P5113
  vivi_398672:
    set $P102, $P5109
  fallback668:
    get_knowhow_attribute $P5114
    set $P102["knowhow-attr"], $P5114
    find_caller_lex $P5115, "$?FILES"
    set $P103, $P5115
.annotate 'line', 652
    nqp_decontainerize $P5116, _lex_param_0
    $P5117 = $P5116."target"()
    set $S5003, $P5117
    nqp_sha1 $S5002, $S5003
    find_dynamic_lex $P5118, "%*COMPILING"
    unless_null $P5118, fallback679
    nqp_get_sc_object $P5120, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5119, $P5120
    set fb_tmp_168, $P5119
    repr_defined $I5015, fb_tmp_168
    unless $I5015 goto if402_else680 
    set $P5121, fb_tmp_168["%COMPILING"]
    set $P5123, $P5121
    goto if402_end681
  if402_else680:
    null $P5122
    set $P5123, $P5122
  if402_end681:
    unless_null $P5123, vivi_403682
    nqp_get_sc_object $P5125, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5124, $P5125
    new $P5126, 'Hash'
    set $P5124["%COMPILING"], $P5126
    set $P5123, $P5126
  vivi_403682:
    unless_null $P5123, vivi_404683
    die "Contextual %*COMPILING not found"
    box $P5127, "Contextual %*COMPILING not found"
    set $P5123, $P5127
  vivi_404683:
    set $P5118, $P5123
  fallback679:
    set fb_tmp_167, $P5118
    repr_defined $I5014, fb_tmp_167
    unless $I5014 goto if401_else677 
    set $P5128, fb_tmp_167["%?OPTIONS"]
    set $P5130, $P5128
    goto if401_end678
  if401_else677:
    null $P5129
    set $P5130, $P5129
  if401_end678:
    unless_null $P5130, vivi_405684
    nqp_get_sc_object $P5131, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5130, $P5131
  vivi_405684:
    set fb_tmp_166, $P5130
    repr_defined $I5013, fb_tmp_166
    unless $I5013 goto if400_else675 
    set $P5132, fb_tmp_166["stable-sc"]
    set $P5134, $P5132
    goto if400_end676
  if400_else675:
    null $P5133
    set $P5134, $P5133
  if400_end676:
    unless_null $P5134, vivi_406685
    nqp_get_sc_object $P5135, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5134, $P5135
  vivi_406685:
    unless $P5134 goto if399_else673 
    set $S5006, ""
    goto if399_end674
  if399_else673:
    time $N5001
    set $S5005, $N5001
    concat $S5004, "-", $S5005
    set $S5006, $S5004
  if399_end674:
    concat $S5001, $S5002, $S5006
    box $P5136, $S5001
    set $P104, $P5136
    isnull $I5016, $P103
    unless $I5016 goto if407_else686 
.annotate 'line', 655
    nqp_get_sc_object $P5139, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5138, $P5139, "NQP"
    get_who $P5137, $P5138
    set fb_tmp_169, $P5137
    repr_defined $I5017, fb_tmp_169
    unless $I5017 goto if408_else688 
    set $P5140, fb_tmp_169["World"]
    set $P5142, $P5140
    goto if408_end689
  if408_else688:
    null $P5141
    set $P5142, $P5141
  if408_end689:
    unless_null $P5142, vivi_409690
    nqp_get_sc_object $P5143, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5142, $P5143
  vivi_409690:
    $P5144 = $P5142."new"($P104 :named("handle"))
    set $P5153, $P5144
    goto if407_end687
  if407_else686:
.annotate 'line', 656
    nqp_get_sc_object $P5147, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5146, $P5147, "NQP"
    get_who $P5145, $P5146
    set fb_tmp_170, $P5145
    repr_defined $I5018, fb_tmp_170
    unless $I5018 goto if410_else691 
    set $P5148, fb_tmp_170["World"]
    set $P5150, $P5148
    goto if410_end692
  if410_else691:
    null $P5149
    set $P5150, $P5149
  if410_end692:
    unless_null $P5150, vivi_411693
    nqp_get_sc_object $P5151, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5150, $P5151
  vivi_411693:
    $P5152 = $P5150."new"($P104 :named("handle"), $P103 :named("description"))
    set $P5153, $P5152
  if407_end687:
    set $P105, $P5153
    box $P5154, ""
    set $P106, $P5154
    box $P5155, ""
    set $P107, $P5155
    box $P5156, ""
    set $P108, $P5156
    box $P5157, 0
    set $P109, $P5157
    box $P5158, 0
    set $P110, $P5158
    box $P5159, 0
    set $P111, $P5159
.annotate 'line', 665
    nqp_decontainerize $P5169, _lex_param_0
    $P5170 = $P5169."comp_unit"()
    .return ($P5170) 
.end
.HLL "nqp"
.namespace []
.sub "identifier" :subid("cuid_36_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 670
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx415_tgt
    .local int rx415_pos
    .local int rx415_off
    .local int rx415_eos
    .local int rx415_rep
    .local pmc rx415_cur
    .local pmc rx415_curclass
    .local pmc rx415_bstack
    .local pmc rx415_cstack
    (rx415_cur, rx415_tgt, rx415_pos, rx415_curclass, rx415_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx415_cur
    length rx415_eos, rx415_tgt
    eq $I19, 1, rx415_restart701
    gt rx415_pos, rx415_eos, rx415_fail702
    repr_get_attr_int $I11, self, rx415_curclass, "$!from"
    ne $I11, -1, rxscan416_done708
    goto rxscan416_scan707
  rxscan416_loop706:
    inc rx415_pos
    gt rx415_pos, rx415_eos, rx415_fail702
    repr_bind_attr_int rx415_cur, rx415_curclass, "$!from", rx415_pos
  rxscan416_scan707:
    nqp_rxmark rx415_bstack, rxscan416_loop706, rx415_pos, 0
  rxscan416_done708:
    repr_bind_attr_int rx415_cur, rx415_curclass, "$!pos", rx415_pos
    $P11 = rx415_cur."ident"()
    repr_get_attr_int $I11, $P11, rx415_curclass, "$!pos"
    lt $I11, 0, rx415_fail702
    repr_get_attr_int rx415_pos, $P11, rx415_curclass, "$!pos"
    nqp_rxmark rx415_bstack, rxquantr418_done711, rx415_pos, 0
  rxquantr418_loop710:
  alt419_0713:
    nqp_rxmark rx415_bstack, alt419_1714, rx415_pos, 0
    add $I11, rx415_pos, 1
    gt $I11, rx415_eos, rx415_fail702
    substr $S10, rx415_tgt, rx415_pos, 1
    ne $S10, ucs4:"-", rx415_fail702
    add rx415_pos, 1
    goto alt419_end712
  alt419_1714:
    ge rx415_pos, rx415_eos, rx415_fail702
    substr $S11, rx415_tgt, rx415_pos, 1
    index $I11, ucs4:"'", $S11
    lt $I11, 0, rx415_fail702
    inc rx415_pos
  alt419_end712:
    repr_bind_attr_int rx415_cur, rx415_curclass, "$!pos", rx415_pos
    $P11 = rx415_cur."ident"()
    repr_get_attr_int $I11, $P11, rx415_curclass, "$!pos"
    lt $I11, 0, rx415_fail702
    repr_get_attr_int rx415_pos, $P11, rx415_curclass, "$!pos"
    nqp_rxpeek $I19, rx415_bstack, rxquantr418_done711
    inc $I19
    inc $I19
    set rx415_rep, rx415_bstack[$I19]
    nqp_rxcommit rx415_bstack, rxquantr418_done711
    inc rx415_rep
    nqp_rxmark rx415_bstack, rxquantr418_done711, rx415_pos, rx415_rep
    goto rxquantr418_loop710
  rxquantr418_done711:
    rx415_cur."!cursor_pass"(rx415_pos, "identifier", 'backtrack'=>1)
    .return (rx415_cur)
  rx415_restart701:
    repr_get_attr_obj rx415_cstack, rx415_cur, rx415_curclass, "$!cstack"
  rx415_fail702:
    unless rx415_bstack, rx415_done700
    pop $I19, rx415_bstack
    if_null rx415_cstack, rx415_cstack_done705
    unless rx415_cstack, rx415_cstack_done705
    dec $I19
    set $P11, rx415_cstack[$I19]
  rx415_cstack_done705:
    pop rx415_rep, rx415_bstack
    pop rx415_pos, rx415_bstack
    pop $I19, rx415_bstack
    lt rx415_pos, -1, rx415_done700
    lt rx415_pos, 0, rx415_fail702
    eq $I19, 0, rx415_fail702
    nqp_islist $I20, rx415_cstack
    unless $I20, rx415_jump703
    elements $I18, rx415_bstack
    le $I18, 0, rx415_cut704
    dec $I18
    set $I18, rx415_bstack[$I18]
  rx415_cut704:
    assign rx415_cstack, $I18
  rx415_jump703:
    jump $I19
  rx415_done700:
    rx415_cur."!cursor_fail"()
    .return (rx415_cur) 
.end
.HLL "nqp"
.namespace []
.sub "name" :subid("cuid_37_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 672
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx421_tgt
    .local int rx421_pos
    .local int rx421_off
    .local int rx421_eos
    .local int rx421_rep
    .local pmc rx421_cur
    .local pmc rx421_curclass
    .local pmc rx421_bstack
    .local pmc rx421_cstack
    (rx421_cur, rx421_tgt, rx421_pos, rx421_curclass, rx421_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx421_cur
    length rx421_eos, rx421_tgt
    eq $I19, 1, rx421_restart718
    gt rx421_pos, rx421_eos, rx421_fail719
    repr_get_attr_int $I11, self, rx421_curclass, "$!from"
    ne $I11, -1, rxscan422_done725
    goto rxscan422_scan724
  rxscan422_loop723:
    inc rx421_pos
    gt rx421_pos, rx421_eos, rx421_fail719
    repr_bind_attr_int rx421_cur, rx421_curclass, "$!from", rx421_pos
  rxscan422_scan724:
    nqp_rxmark rx421_bstack, rxscan422_loop723, rx421_pos, 0
  rxscan422_done725:
    repr_bind_attr_int rx421_cur, rx421_curclass, "$!pos", rx421_pos
    $P11 = rx421_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx421_curclass, "$!pos"
    lt $I11, 0, rx421_fail719
    nqp_rxmark rx421_bstack, rxsubrule423_pass726, -1, 0
  rxsubrule423_pass726:
    rx421_cstack = rx421_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx421_pos, $P11, rx421_curclass, "$!pos"
    nqp_rxmark rx421_bstack, rxquantr424_done728, rx421_pos, 0
  rxquantr424_loop727:
    add $I11, rx421_pos, 2
    gt $I11, rx421_eos, rx421_fail719
    substr $S10, rx421_tgt, rx421_pos, 2
    ne $S10, ucs4:"::", rx421_fail719
    add rx421_pos, 2
    repr_bind_attr_int rx421_cur, rx421_curclass, "$!pos", rx421_pos
    $P11 = rx421_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx421_curclass, "$!pos"
    lt $I11, 0, rx421_fail719
    nqp_rxmark rx421_bstack, rxsubrule425_pass729, -1, 0
  rxsubrule425_pass729:
    rx421_cstack = rx421_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx421_pos, $P11, rx421_curclass, "$!pos"
    nqp_rxpeek $I19, rx421_bstack, rxquantr424_done728
    inc $I19
    inc $I19
    set rx421_rep, rx421_bstack[$I19]
    nqp_rxcommit rx421_bstack, rxquantr424_done728
    inc rx421_rep
    nqp_rxmark rx421_bstack, rxquantr424_done728, rx421_pos, rx421_rep
    goto rxquantr424_loop727
  rxquantr424_done728:
    rx421_cur."!cursor_pass"(rx421_pos, "name", 'backtrack'=>1)
    .return (rx421_cur)
  rx421_restart718:
    repr_get_attr_obj rx421_cstack, rx421_cur, rx421_curclass, "$!cstack"
  rx421_fail719:
    unless rx421_bstack, rx421_done717
    pop $I19, rx421_bstack
    if_null rx421_cstack, rx421_cstack_done722
    unless rx421_cstack, rx421_cstack_done722
    dec $I19
    set $P11, rx421_cstack[$I19]
  rx421_cstack_done722:
    pop rx421_rep, rx421_bstack
    pop rx421_pos, rx421_bstack
    pop $I19, rx421_bstack
    lt rx421_pos, -1, rx421_done717
    lt rx421_pos, 0, rx421_fail719
    eq $I19, 0, rx421_fail719
    nqp_islist $I20, rx421_cstack
    unless $I20, rx421_jump720
    elements $I18, rx421_bstack
    le $I18, 0, rx421_cut721
    dec $I18
    set $I18, rx421_bstack[$I18]
  rx421_cut721:
    assign rx421_cstack, $I18
  rx421_jump720:
    jump $I19
  rx421_done717:
    rx421_cur."!cursor_fail"()
    .return (rx421_cur) 
.end
.HLL "nqp"
.namespace []
.sub "deflongname" :subid("cuid_38_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 674
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx426_tgt
    .local int rx426_pos
    .local int rx426_off
    .local int rx426_eos
    .local int rx426_rep
    .local pmc rx426_cur
    .local pmc rx426_curclass
    .local pmc rx426_bstack
    .local pmc rx426_cstack
    (rx426_cur, rx426_tgt, rx426_pos, rx426_curclass, rx426_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx426_cur
    length rx426_eos, rx426_tgt
    eq $I19, 1, rx426_restart732
    gt rx426_pos, rx426_eos, rx426_fail733
    repr_get_attr_int $I11, self, rx426_curclass, "$!from"
    ne $I11, -1, rxscan427_done739
    goto rxscan427_scan738
  rxscan427_loop737:
    inc rx426_pos
    gt rx426_pos, rx426_eos, rx426_fail733
    repr_bind_attr_int rx426_cur, rx426_curclass, "$!from", rx426_pos
  rxscan427_scan738:
    nqp_rxmark rx426_bstack, rxscan427_loop737, rx426_pos, 0
  rxscan427_done739:
    repr_bind_attr_int rx426_cur, rx426_curclass, "$!pos", rx426_pos
    $P11 = rx426_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx426_curclass, "$!pos"
    lt $I11, 0, rx426_fail733
    nqp_rxmark rx426_bstack, rxsubrule428_pass740, -1, 0
  rxsubrule428_pass740:
    rx426_cstack = rx426_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx426_pos, $P11, rx426_curclass, "$!pos"
    nqp_rxmark rx426_bstack, rxquantr429_done742, rx426_pos, 0
  rxquantr429_loop741:
    repr_bind_attr_int rx426_cur, rx426_curclass, "$!pos", rx426_pos
    $P11 = rx426_cur."colonpair"()
    repr_get_attr_int $I11, $P11, rx426_curclass, "$!pos"
    lt $I11, 0, rx426_fail733
    goto rxsubrule430_pass743
  rxsubrule430_back744:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx426_curclass, "$!pos"
    lt $I11, 0, rx426_fail733
  rxsubrule430_pass743:
    rx426_cstack = rx426_cur."!cursor_capture"($P11, "colonpair")
    set_addr $I11, rxsubrule430_back744
    push rx426_bstack, $I11
    push rx426_bstack, 0
    push rx426_bstack, rx426_pos
    elements $I11, rx426_cstack
    push rx426_bstack, $I11
    repr_get_attr_int rx426_pos, $P11, rx426_curclass, "$!pos"
    nqp_rxpeek $I19, rx426_bstack, rxquantr429_done742
    inc $I19
    inc $I19
    set rx426_rep, rx426_bstack[$I19]
    nqp_rxcommit rx426_bstack, rxquantr429_done742
    inc rx426_rep
  rxquantr429_done742:
    rx426_cur."!cursor_pass"(rx426_pos, "deflongname", 'backtrack'=>1)
    .return (rx426_cur)
  rx426_restart732:
    repr_get_attr_obj rx426_cstack, rx426_cur, rx426_curclass, "$!cstack"
  rx426_fail733:
    unless rx426_bstack, rx426_done731
    pop $I19, rx426_bstack
    if_null rx426_cstack, rx426_cstack_done736
    unless rx426_cstack, rx426_cstack_done736
    dec $I19
    set $P11, rx426_cstack[$I19]
  rx426_cstack_done736:
    pop rx426_rep, rx426_bstack
    pop rx426_pos, rx426_bstack
    pop $I19, rx426_bstack
    lt rx426_pos, -1, rx426_done731
    lt rx426_pos, 0, rx426_fail733
    eq $I19, 0, rx426_fail733
    nqp_islist $I20, rx426_cstack
    unless $I20, rx426_jump734
    elements $I18, rx426_bstack
    le $I18, 0, rx426_cut735
    dec $I18
    set $I18, rx426_bstack[$I18]
  rx426_cut735:
    assign rx426_cstack, $I18
  rx426_jump734:
    jump $I19
  rx426_done731:
    rx426_cur."!cursor_fail"()
    .return (rx426_cur) 
.end
.HLL "nqp"
.namespace []
.sub "ENDSTMT" :subid("cuid_39_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 678
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx431_tgt
    .local int rx431_pos
    .local int rx431_off
    .local int rx431_eos
    .local int rx431_rep
    .local pmc rx431_cur
    .local pmc rx431_curclass
    .local pmc rx431_bstack
    .local pmc rx431_cstack
    (rx431_cur, rx431_tgt, rx431_pos, rx431_curclass, rx431_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx431_cur
    length rx431_eos, rx431_tgt
    eq $I19, 1, rx431_restart747
    gt rx431_pos, rx431_eos, rx431_fail748
    repr_get_attr_int $I11, self, rx431_curclass, "$!from"
    ne $I11, -1, rxscan432_done754
    goto rxscan432_scan753
  rxscan432_loop752:
    inc rx431_pos
    gt rx431_pos, rx431_eos, rx431_fail748
    repr_bind_attr_int rx431_cur, rx431_curclass, "$!from", rx431_pos
  rxscan432_scan753:
    nqp_rxmark rx431_bstack, rxscan432_loop752, rx431_pos, 0
  rxscan432_done754:
    nqp_rxmark rx431_bstack, rxquantr433_done756, rx431_pos, 0
  rxquantr433_loop755:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt434_0758
    nqp_push_label $P11, alt434_1763
    nqp_rxmark rx431_bstack, alt434_end757, -1, 0
    rx431_cur."!alt"(rx431_pos, "alt_nfa__1_1360432460.611", $P11)
    goto rx431_fail748
  alt434_0758:
    nqp_rxmark rx431_bstack, rxquantr435_done760, rx431_pos, 0
  rxquantr435_loop759:
    ge rx431_pos, rx431_eos, rx431_fail748
    substr $S11, rx431_tgt, rx431_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx431_fail748
    inc rx431_pos
    nqp_rxpeek $I19, rx431_bstack, rxquantr435_done760
    inc $I19
    inc $I19
    set rx431_rep, rx431_bstack[$I19]
    nqp_rxcommit rx431_bstack, rxquantr435_done760
    inc rx431_rep
    nqp_rxmark rx431_bstack, rxquantr435_done760, rx431_pos, rx431_rep
    goto rxquantr435_loop759
  rxquantr435_done760:
    is_cclass $I11, .CCLASS_NEWLINE, rx431_tgt, rx431_pos
    if $I11, rxanchor436_done761
    ne rx431_pos, rx431_eos, rx431_fail748
    eq rx431_pos, 0, rxanchor436_done761
    sub $I11, rx431_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx431_tgt, $I11
    if $I11, rx431_fail748
  rxanchor436_done761:
    repr_bind_attr_int rx431_cur, rx431_curclass, "$!pos", rx431_pos
    $P11 = rx431_cur."ws"()
    repr_get_attr_int $I11, $P11, rx431_curclass, "$!pos"
    lt $I11, 0, rx431_fail748
    repr_get_attr_int rx431_pos, $P11, rx431_curclass, "$!pos"
    repr_bind_attr_int rx431_cur, rx431_curclass, "$!pos", rx431_pos
    $P11 = rx431_cur."MARKER"("endstmt")
    repr_get_attr_int $I11, $P11, rx431_curclass, "$!pos"
    lt $I11, 0, rx431_fail748
    goto alt434_end757
  alt434_1763:
    nqp_rxmark rx431_bstack, rxquantr438_done765, rx431_pos, 0
  rxquantr438_loop764:
    repr_bind_attr_int rx431_cur, rx431_curclass, "$!pos", rx431_pos
    $P11 = rx431_cur."unv"()
    repr_get_attr_int $I11, $P11, rx431_curclass, "$!pos"
    lt $I11, 0, rx431_fail748
    goto rxsubrule439_pass766
  rxsubrule439_back767:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx431_curclass, "$!pos"
    lt $I11, 0, rx431_fail748
  rxsubrule439_pass766:
    rx431_cstack = rx431_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule439_back767
    push rx431_bstack, $I11
    push rx431_bstack, 0
    push rx431_bstack, rx431_pos
    elements $I11, rx431_cstack
    push rx431_bstack, $I11
    repr_get_attr_int rx431_pos, $P11, rx431_curclass, "$!pos"
    nqp_rxpeek $I19, rx431_bstack, rxquantr438_done765
    inc $I19
    inc $I19
    set rx431_rep, rx431_bstack[$I19]
    nqp_rxcommit rx431_bstack, rxquantr438_done765
    inc rx431_rep
  rxquantr438_done765:
    is_cclass $I11, .CCLASS_NEWLINE, rx431_tgt, rx431_pos
    if $I11, rxanchor440_done768
    ne rx431_pos, rx431_eos, rx431_fail748
    eq rx431_pos, 0, rxanchor440_done768
    sub $I11, rx431_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx431_tgt, $I11
    if $I11, rx431_fail748
  rxanchor440_done768:
    repr_bind_attr_int rx431_cur, rx431_curclass, "$!pos", rx431_pos
    $P11 = rx431_cur."ws"()
    repr_get_attr_int $I11, $P11, rx431_curclass, "$!pos"
    lt $I11, 0, rx431_fail748
    repr_get_attr_int rx431_pos, $P11, rx431_curclass, "$!pos"
    repr_bind_attr_int rx431_cur, rx431_curclass, "$!pos", rx431_pos
    $P11 = rx431_cur."MARKER"("endstmt")
    repr_get_attr_int $I11, $P11, rx431_curclass, "$!pos"
    lt $I11, 0, rx431_fail748
    goto alt434_end757
  alt434_end757:
    nqp_rxpeek $I19, rx431_bstack, rxquantr433_done756
    inc $I19
    inc $I19
    set rx431_rep, rx431_bstack[$I19]
    nqp_rxcommit rx431_bstack, rxquantr433_done756
    inc rx431_rep
  rxquantr433_done756:
    rx431_cur."!cursor_pass"(rx431_pos, "ENDSTMT", 'backtrack'=>1)
    .return (rx431_cur)
  rx431_restart747:
    repr_get_attr_obj rx431_cstack, rx431_cur, rx431_curclass, "$!cstack"
  rx431_fail748:
    unless rx431_bstack, rx431_done746
    pop $I19, rx431_bstack
    if_null rx431_cstack, rx431_cstack_done751
    unless rx431_cstack, rx431_cstack_done751
    dec $I19
    set $P11, rx431_cstack[$I19]
  rx431_cstack_done751:
    pop rx431_rep, rx431_bstack
    pop rx431_pos, rx431_bstack
    pop $I19, rx431_bstack
    lt rx431_pos, -1, rx431_done746
    lt rx431_pos, 0, rx431_fail748
    eq $I19, 0, rx431_fail748
    nqp_islist $I20, rx431_cstack
    unless $I20, rx431_jump749
    elements $I18, rx431_bstack
    le $I18, 0, rx431_cut750
    dec $I18
    set $I18, rx431_bstack[$I18]
  rx431_cut750:
    assign rx431_cstack, $I18
  rx431_jump749:
    jump $I19
  rx431_done746:
    rx431_cur."!cursor_fail"()
    .return (rx431_cur) 
.end
.HLL "nqp"
.namespace []
.sub "ws" :subid("cuid_40_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 685
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx442_tgt
    .local int rx442_pos
    .local int rx442_off
    .local int rx442_eos
    .local int rx442_rep
    .local pmc rx442_cur
    .local pmc rx442_curclass
    .local pmc rx442_bstack
    .local pmc rx442_cstack
    (rx442_cur, rx442_tgt, rx442_pos, rx442_curclass, rx442_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx442_cur
    length rx442_eos, rx442_tgt
    eq $I19, 1, rx442_restart772
    gt rx442_pos, rx442_eos, rx442_fail773
    repr_get_attr_int $I11, self, rx442_curclass, "$!from"
    ne $I11, -1, rxscan443_done779
    goto rxscan443_scan778
  rxscan443_loop777:
    inc rx442_pos
    gt rx442_pos, rx442_eos, rx442_fail773
    repr_bind_attr_int rx442_cur, rx442_curclass, "$!from", rx442_pos
  rxscan443_scan778:
    nqp_rxmark rx442_bstack, rxscan443_loop777, rx442_pos, 0
  rxscan443_done779:
  alt444_0781:
    nqp_rxmark rx442_bstack, alt444_1782, rx442_pos, 0
    repr_bind_attr_int rx442_cur, rx442_curclass, "$!pos", rx442_pos
    $P11 = rx442_cur."MARKED"("ws")
    repr_get_attr_int $I11, $P11, rx442_curclass, "$!pos"
    lt $I11, 0, rx442_fail773
    goto alt444_end780
  alt444_1782:
    repr_bind_attr_int rx442_cur, rx442_curclass, "$!pos", rx442_pos
    $P11 = rx442_cur."ww"()
    repr_get_attr_int $I11, $P11, rx442_curclass, "$!pos"
    ge $I11, 0, rx442_fail773
    nqp_rxmark rx442_bstack, rxquantr445_done784, rx442_pos, 0
  rxquantr445_loop783:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt446_0786
    nqp_push_label $P11, alt446_1789
    nqp_push_label $P11, alt446_2792
    nqp_push_label $P11, alt446_3795
    nqp_rxmark rx442_bstack, alt446_end785, -1, 0
    rx442_cur."!alt"(rx442_pos, "alt_nfa__2_1360432460.626", $P11)
    goto rx442_fail773
  alt446_0786:
    nqp_rxmark rx442_bstack, rxquantr447_done788, -1, 0
  rxquantr447_loop787:
    ge rx442_pos, rx442_eos, rx442_fail773
    substr $S11, rx442_tgt, rx442_pos, 1
    index $I11, ucs4:"\n\x{b}\f\r\x{85}\u2028\u2029", $S11
    lt $I11, 0, rx442_fail773
    inc rx442_pos
    nqp_rxpeek $I19, rx442_bstack, rxquantr447_done788
    inc $I19
    inc $I19
    set rx442_rep, rx442_bstack[$I19]
    nqp_rxcommit rx442_bstack, rxquantr447_done788
    inc rx442_rep
    nqp_rxmark rx442_bstack, rxquantr447_done788, rx442_pos, rx442_rep
    goto rxquantr447_loop787
  rxquantr447_done788:
    goto alt446_end785
  alt446_1789:
    add $I11, rx442_pos, 1
    gt $I11, rx442_eos, rx442_fail773
    substr $S10, rx442_tgt, rx442_pos, 1
    ne $S10, ucs4:"#", rx442_fail773
    add rx442_pos, 1
    nqp_rxmark rx442_bstack, rxquantr448_done791, rx442_pos, 0
  rxquantr448_loop790:
    ge rx442_pos, rx442_eos, rx442_fail773
    is_cclass $I11, .CCLASS_NEWLINE, rx442_tgt, rx442_pos
    if $I11, rx442_fail773
    add rx442_pos, 1
    nqp_rxpeek $I19, rx442_bstack, rxquantr448_done791
    inc $I19
    inc $I19
    set rx442_rep, rx442_bstack[$I19]
    nqp_rxcommit rx442_bstack, rxquantr448_done791
    inc rx442_rep
    nqp_rxmark rx442_bstack, rxquantr448_done791, rx442_pos, rx442_rep
    goto rxquantr448_loop790
  rxquantr448_done791:
    goto alt446_end785
  alt446_2792:
    eq rx442_pos, 0, rxanchor449_done793
    ge rx442_pos, rx442_eos, rx442_fail773
    sub $I11, rx442_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx442_tgt, $I11
    unless $I11, rx442_fail773
  rxanchor449_done793:
    repr_bind_attr_int rx442_cur, rx442_curclass, "$!pos", rx442_pos
    $P11 = rx442_cur."pod_comment"()
    repr_get_attr_int $I11, $P11, rx442_curclass, "$!pos"
    lt $I11, 0, rx442_fail773
    repr_get_attr_int rx442_pos, $P11, rx442_curclass, "$!pos"
    goto alt446_end785
  alt446_3795:
    nqp_rxmark rx442_bstack, rxquantr451_done797, -1, 0
  rxquantr451_loop796:
    ge rx442_pos, rx442_eos, rx442_fail773
    substr $S11, rx442_tgt, rx442_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx442_fail773
    inc rx442_pos
    nqp_rxpeek $I19, rx442_bstack, rxquantr451_done797
    inc $I19
    inc $I19
    set rx442_rep, rx442_bstack[$I19]
    nqp_rxcommit rx442_bstack, rxquantr451_done797
    inc rx442_rep
    nqp_rxmark rx442_bstack, rxquantr451_done797, rx442_pos, rx442_rep
    goto rxquantr451_loop796
  rxquantr451_done797:
    goto alt446_end785
  alt446_end785:
    nqp_rxpeek $I19, rx442_bstack, rxquantr445_done784
    inc $I19
    inc $I19
    set rx442_rep, rx442_bstack[$I19]
    nqp_rxcommit rx442_bstack, rxquantr445_done784
    inc rx442_rep
    nqp_rxmark rx442_bstack, rxquantr445_done784, rx442_pos, rx442_rep
    goto rxquantr445_loop783
  rxquantr445_done784:
    repr_bind_attr_int rx442_cur, rx442_curclass, "$!pos", rx442_pos
    $P11 = rx442_cur."MARKER"("ws")
    repr_get_attr_int $I11, $P11, rx442_curclass, "$!pos"
    lt $I11, 0, rx442_fail773
  alt444_end780:
    rx442_cur."!cursor_pass"(rx442_pos, "ws", 'backtrack'=>1)
    .return (rx442_cur)
  rx442_restart772:
    repr_get_attr_obj rx442_cstack, rx442_cur, rx442_curclass, "$!cstack"
  rx442_fail773:
    unless rx442_bstack, rx442_done771
    pop $I19, rx442_bstack
    if_null rx442_cstack, rx442_cstack_done776
    unless rx442_cstack, rx442_cstack_done776
    dec $I19
    set $P11, rx442_cstack[$I19]
  rx442_cstack_done776:
    pop rx442_rep, rx442_bstack
    pop rx442_pos, rx442_bstack
    pop $I19, rx442_bstack
    lt rx442_pos, -1, rx442_done771
    lt rx442_pos, 0, rx442_fail773
    eq $I19, 0, rx442_fail773
    nqp_islist $I20, rx442_cstack
    unless $I20, rx442_jump774
    elements $I18, rx442_bstack
    le $I18, 0, rx442_cut775
    dec $I18
    set $I18, rx442_bstack[$I18]
  rx442_cut775:
    assign rx442_cstack, $I18
  rx442_jump774:
    jump $I19
  rx442_done771:
    rx442_cur."!cursor_fail"()
    .return (rx442_cur) 
.end
.HLL "nqp"
.namespace []
.sub "unv" :subid("cuid_41_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 696
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_42_1360432459.413' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx452_tgt
    .local int rx452_pos
    .local int rx452_off
    .local int rx452_eos
    .local int rx452_rep
    .local pmc rx452_cur
    .local pmc rx452_curclass
    .local pmc rx452_bstack
    .local pmc rx452_cstack
    (rx452_cur, rx452_tgt, rx452_pos, rx452_curclass, rx452_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx452_cur
    length rx452_eos, rx452_tgt
    eq $I19, 1, rx452_restart800
    gt rx452_pos, rx452_eos, rx452_fail801
    repr_get_attr_int $I11, self, rx452_curclass, "$!from"
    ne $I11, -1, rxscan453_done807
    goto rxscan453_scan806
  rxscan453_loop805:
    inc rx452_pos
    gt rx452_pos, rx452_eos, rx452_fail801
    repr_bind_attr_int rx452_cur, rx452_curclass, "$!from", rx452_pos
  rxscan453_scan806:
    nqp_rxmark rx452_bstack, rxscan453_loop805, rx452_pos, 0
  rxscan453_done807:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt454_0809
    nqp_push_label $P11, alt454_1827
    nqp_push_label $P11, alt454_2832
    nqp_rxmark rx452_bstack, alt454_end808, -1, 0
    rx452_cur."!alt"(rx452_pos, "alt_nfa__4_1360432460.644", $P11)
    goto rx452_fail801
  alt454_0809:
    eq rx452_pos, 0, rxanchor455_done810
    ge rx452_pos, rx452_eos, rx452_fail801
    sub $I11, rx452_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx452_tgt, $I11
    unless $I11, rx452_fail801
  rxanchor455_done810:
    .const 'Sub' $P5001 = 'cuid_42_1360432459.413' 
    capture_lex $P5001
    repr_bind_attr_int rx452_cur, rx452_curclass, "$!pos", rx452_pos
    $P11 = rx452_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx452_curclass, "$!pos"
    lt $I11, 0, rx452_fail801
    repr_bind_attr_int rx452_cur, rx452_curclass, "$!pos", rx452_pos
    $P11 = rx452_cur."pod_comment"()
    repr_get_attr_int $I11, $P11, rx452_curclass, "$!pos"
    lt $I11, 0, rx452_fail801
    repr_get_attr_int rx452_pos, $P11, rx452_curclass, "$!pos"
    goto alt454_end808
  alt454_1827:
    nqp_rxmark rx452_bstack, rxquantr461_done829, rx452_pos, 0
  rxquantr461_loop828:
    ge rx452_pos, rx452_eos, rx452_fail801
    substr $S11, rx452_tgt, rx452_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx452_fail801
    inc rx452_pos
    nqp_rxpeek $I19, rx452_bstack, rxquantr461_done829
    inc $I19
    inc $I19
    set rx452_rep, rx452_bstack[$I19]
    nqp_rxcommit rx452_bstack, rxquantr461_done829
    inc rx452_rep
    nqp_rxmark rx452_bstack, rxquantr461_done829, rx452_pos, rx452_rep
    goto rxquantr461_loop828
  rxquantr461_done829:
    add $I11, rx452_pos, 1
    gt $I11, rx452_eos, rx452_fail801
    substr $S10, rx452_tgt, rx452_pos, 1
    ne $S10, ucs4:"#", rx452_fail801
    add rx452_pos, 1
    nqp_rxmark rx452_bstack, rxquantr462_done831, rx452_pos, 0
  rxquantr462_loop830:
    ge rx452_pos, rx452_eos, rx452_fail801
    is_cclass $I11, .CCLASS_NEWLINE, rx452_tgt, rx452_pos
    if $I11, rx452_fail801
    add rx452_pos, 1
    nqp_rxpeek $I19, rx452_bstack, rxquantr462_done831
    inc $I19
    inc $I19
    set rx452_rep, rx452_bstack[$I19]
    nqp_rxcommit rx452_bstack, rxquantr462_done831
    inc rx452_rep
    nqp_rxmark rx452_bstack, rxquantr462_done831, rx452_pos, rx452_rep
    goto rxquantr462_loop830
  rxquantr462_done831:
    goto alt454_end808
  alt454_2832:
    nqp_rxmark rx452_bstack, rxquantr463_done834, -1, 0
  rxquantr463_loop833:
    ge rx452_pos, rx452_eos, rx452_fail801
    substr $S11, rx452_tgt, rx452_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx452_fail801
    inc rx452_pos
    nqp_rxpeek $I19, rx452_bstack, rxquantr463_done834
    inc $I19
    inc $I19
    set rx452_rep, rx452_bstack[$I19]
    nqp_rxcommit rx452_bstack, rxquantr463_done834
    inc rx452_rep
    nqp_rxmark rx452_bstack, rxquantr463_done834, rx452_pos, rx452_rep
    goto rxquantr463_loop833
  rxquantr463_done834:
    goto alt454_end808
  alt454_end808:
    nqp_rxcommit rx452_bstack, alt454_end808
    rx452_cur."!cursor_pass"(rx452_pos, "unv", 'backtrack'=>1)
    .return (rx452_cur)
  rx452_restart800:
    repr_get_attr_obj rx452_cstack, rx452_cur, rx452_curclass, "$!cstack"
  rx452_fail801:
    unless rx452_bstack, rx452_done799
    pop $I19, rx452_bstack
    if_null rx452_cstack, rx452_cstack_done804
    unless rx452_cstack, rx452_cstack_done804
    dec $I19
    set $P11, rx452_cstack[$I19]
  rx452_cstack_done804:
    pop rx452_rep, rx452_bstack
    pop rx452_pos, rx452_bstack
    pop $I19, rx452_bstack
    lt rx452_pos, -1, rx452_done799
    lt rx452_pos, 0, rx452_fail801
    eq $I19, 0, rx452_fail801
    nqp_islist $I20, rx452_cstack
    unless $I20, rx452_jump802
    elements $I18, rx452_bstack
    le $I18, 0, rx452_cut803
    dec $I18
    set $I18, rx452_bstack[$I18]
  rx452_cut803:
    assign rx452_cstack, $I18
  rx452_jump802:
    jump $I19
  rx452_done799:
    rx452_cur."!cursor_fail"()
    .return (rx452_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_42_1360432459.413") :anon :lex :outer("cuid_41_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local string rx456_tgt
    .local int rx456_pos
    .local int rx456_off
    .local int rx456_eos
    .local int rx456_rep
    .local pmc rx456_cur
    .local pmc rx456_curclass
    .local pmc rx456_bstack
    .local pmc rx456_cstack
    (rx456_cur, rx456_tgt, rx456_pos, rx456_curclass, rx456_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx456_cur
    length rx456_eos, rx456_tgt
    eq $I19, 1, rx456_restart813
    gt rx456_pos, rx456_eos, rx456_fail814
    repr_get_attr_int $I11, self, rx456_curclass, "$!from"
    ne $I11, -1, rxscan457_done820
    goto rxscan457_scan819
  rxscan457_loop818:
    inc rx456_pos
    gt rx456_pos, rx456_eos, rx456_fail814
    repr_bind_attr_int rx456_cur, rx456_curclass, "$!from", rx456_pos
  rxscan457_scan819:
    nqp_rxmark rx456_bstack, rxscan457_loop818, rx456_pos, 0
  rxscan457_done820:
    nqp_rxmark rx456_bstack, rxquantr458_done822, rx456_pos, 0
  rxquantr458_loop821:
    ge rx456_pos, rx456_eos, rx456_fail814
    substr $S11, rx456_tgt, rx456_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx456_fail814
    inc rx456_pos
    nqp_rxpeek $I19, rx456_bstack, rxquantr458_done822
    inc $I19
    inc $I19
    set rx456_rep, rx456_bstack[$I19]
    nqp_rxcommit rx456_bstack, rxquantr458_done822
    inc rx456_rep
    nqp_rxmark rx456_bstack, rxquantr458_done822, rx456_pos, rx456_rep
    goto rxquantr458_loop821
  rxquantr458_done822:
    add $I11, rx456_pos, 1
    gt $I11, rx456_eos, rx456_fail814
    substr $S10, rx456_tgt, rx456_pos, 1
    ne $S10, ucs4:"=", rx456_fail814
    add rx456_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt459_0824
    nqp_push_label $P11, alt459_1825
    nqp_rxmark rx456_bstack, alt459_end823, -1, 0
    rx456_cur."!alt"(rx456_pos, "alt_nfa__3_1360432460.636", $P11)
    goto rx456_fail814
  alt459_0824:
    ge rx456_pos, rx456_eos, rx456_fail814
    is_cclass $I11, .CCLASS_WORD, rx456_tgt, rx456_pos
    unless $I11, rx456_fail814
    add rx456_pos, 1
    goto alt459_end823
  alt459_1825:
    add $I11, rx456_pos, 1
    gt $I11, rx456_eos, rx456_fail814
    substr $S10, rx456_tgt, rx456_pos, 1
    ne $S10, ucs4:"\\", rx456_fail814
    add rx456_pos, 1
    goto alt459_end823
  alt459_end823:
    nqp_rxcommit rx456_bstack, alt459_end823
    rx456_cur."!cursor_pass"(rx456_pos, 'backtrack'=>1)
    .return (rx456_cur)
  rx456_restart813:
    repr_get_attr_obj rx456_cstack, rx456_cur, rx456_curclass, "$!cstack"
  rx456_fail814:
    unless rx456_bstack, rx456_done812
    pop $I19, rx456_bstack
    if_null rx456_cstack, rx456_cstack_done817
    unless rx456_cstack, rx456_cstack_done817
    dec $I19
    set $P11, rx456_cstack[$I19]
  rx456_cstack_done817:
    pop rx456_rep, rx456_bstack
    pop rx456_pos, rx456_bstack
    pop $I19, rx456_bstack
    lt rx456_pos, -1, rx456_done812
    lt rx456_pos, 0, rx456_fail814
    eq $I19, 0, rx456_fail814
    nqp_islist $I20, rx456_cstack
    unless $I20, rx456_jump815
    elements $I18, rx456_bstack
    le $I18, 0, rx456_cut816
    dec $I18
    set $I18, rx456_bstack[$I18]
  rx456_cut816:
    assign rx456_cstack, $I18
  rx456_jump815:
    jump $I19
  rx456_done812:
    rx456_cur."!cursor_fail"()
    .return (rx456_cur) 
.end
.HLL "nqp"
.namespace []
.sub "pod_comment" :subid("cuid_43_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 705
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_44_1360432459.413' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx464_tgt
    .local int rx464_pos
    .local int rx464_off
    .local int rx464_eos
    .local int rx464_rep
    .local pmc rx464_cur
    .local pmc rx464_curclass
    .local pmc rx464_bstack
    .local pmc rx464_cstack
    (rx464_cur, rx464_tgt, rx464_pos, rx464_curclass, rx464_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx464_cur
    length rx464_eos, rx464_tgt
    eq $I19, 1, rx464_restart837
    gt rx464_pos, rx464_eos, rx464_fail838
    repr_get_attr_int $I11, self, rx464_curclass, "$!from"
    ne $I11, -1, rxscan465_done844
    goto rxscan465_scan843
  rxscan465_loop842:
    inc rx464_pos
    gt rx464_pos, rx464_eos, rx464_fail838
    repr_bind_attr_int rx464_cur, rx464_curclass, "$!from", rx464_pos
  rxscan465_scan843:
    nqp_rxmark rx464_bstack, rxscan465_loop842, rx464_pos, 0
  rxscan465_done844:
    eq rx464_pos, 0, rxanchor466_done845
    ge rx464_pos, rx464_eos, rx464_fail838
    sub $I11, rx464_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx464_tgt, $I11
    unless $I11, rx464_fail838
  rxanchor466_done845:
    nqp_rxmark rx464_bstack, rxquantr467_done847, rx464_pos, 0
  rxquantr467_loop846:
    ge rx464_pos, rx464_eos, rx464_fail838
    substr $S11, rx464_tgt, rx464_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx464_fail838
    inc rx464_pos
    nqp_rxpeek $I19, rx464_bstack, rxquantr467_done847
    inc $I19
    inc $I19
    set rx464_rep, rx464_bstack[$I19]
    nqp_rxcommit rx464_bstack, rxquantr467_done847
    inc rx464_rep
    nqp_rxmark rx464_bstack, rxquantr467_done847, rx464_pos, rx464_rep
    goto rxquantr467_loop846
  rxquantr467_done847:
    add $I11, rx464_pos, 1
    gt $I11, rx464_eos, rx464_fail838
    substr $S10, rx464_tgt, rx464_pos, 1
    ne $S10, ucs4:"=", rx464_fail838
    add rx464_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt468_0849
    nqp_push_label $P11, alt468_1868
    nqp_push_label $P11, alt468_2887
    nqp_push_label $P11, alt468_3909
    nqp_push_label $P11, alt468_4934
    nqp_rxmark rx464_bstack, alt468_end848, -1, 0
    rx464_cur."!alt"(rx464_pos, "alt_nfa__6_1360432460.723", $P11)
    goto rx464_fail838
  alt468_0849:
    add $I11, rx464_pos, 5
    gt $I11, rx464_eos, rx464_fail838
    substr $S10, rx464_tgt, rx464_pos, 5
    ne $S10, ucs4:"begin", rx464_fail838
    add rx464_pos, 5
    nqp_rxmark rx464_bstack, rxquantr469_done851, -1, 0
  rxquantr469_loop850:
    ge rx464_pos, rx464_eos, rx464_fail838
    substr $S11, rx464_tgt, rx464_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx464_fail838
    inc rx464_pos
    nqp_rxpeek $I19, rx464_bstack, rxquantr469_done851
    inc $I19
    inc $I19
    set rx464_rep, rx464_bstack[$I19]
    nqp_rxcommit rx464_bstack, rxquantr469_done851
    inc rx464_rep
    nqp_rxmark rx464_bstack, rxquantr469_done851, rx464_pos, rx464_rep
    goto rxquantr469_loop850
  rxquantr469_done851:
    add $I11, rx464_pos, 3
    gt $I11, rx464_eos, rx464_fail838
    substr $S10, rx464_tgt, rx464_pos, 3
    ne $S10, ucs4:"END", rx464_fail838
    add rx464_pos, 3
    le rx464_pos, 0, rx464_fail838
    is_cclass $I11, .CCLASS_WORD, rx464_tgt, rx464_pos
    if $I11, rx464_fail838
    sub $I11, rx464_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx464_tgt, $I11
    unless $I11, rx464_fail838
  alt471_0854:
    nqp_rxmark rx464_bstack, alt471_1865, rx464_pos, 0
    set rx464_rep, 0
    nqp_rxmark rx464_bstack, rxquantf472_loop855, rx464_pos, rx464_rep
    goto rxquantf472_done856
  rxquantf472_loop855:
    set $I12, rx464_rep
    ge rx464_pos, rx464_eos, rx464_fail838
    add rx464_pos, 1
    set rx464_rep, $I12
    inc rx464_rep
    nqp_rxmark rx464_bstack, rxquantf472_loop855, rx464_pos, rx464_rep
  rxquantf472_done856:
    ge rx464_pos, rx464_eos, rx464_fail838
    is_cclass $I11, .CCLASS_NEWLINE, rx464_tgt, rx464_pos
    unless $I11, rx464_fail838
    substr $S10, rx464_tgt, rx464_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx464_pos, $I11
    add rx464_pos, 1
    nqp_rxmark rx464_bstack, rxquantr473_done859, rx464_pos, 0
  rxquantr473_loop858:
    ge rx464_pos, rx464_eos, rx464_fail838
    substr $S11, rx464_tgt, rx464_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx464_fail838
    inc rx464_pos
    nqp_rxpeek $I19, rx464_bstack, rxquantr473_done859
    inc $I19
    inc $I19
    set rx464_rep, rx464_bstack[$I19]
    nqp_rxcommit rx464_bstack, rxquantr473_done859
    inc rx464_rep
    nqp_rxmark rx464_bstack, rxquantr473_done859, rx464_pos, rx464_rep
    goto rxquantr473_loop858
  rxquantr473_done859:
    add $I11, rx464_pos, 4
    gt $I11, rx464_eos, rx464_fail838
    substr $S10, rx464_tgt, rx464_pos, 4
    ne $S10, ucs4:"=end", rx464_fail838
    add rx464_pos, 4
    nqp_rxmark rx464_bstack, rxquantr474_done861, -1, 0
  rxquantr474_loop860:
    ge rx464_pos, rx464_eos, rx464_fail838
    substr $S11, rx464_tgt, rx464_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx464_fail838
    inc rx464_pos
    nqp_rxpeek $I19, rx464_bstack, rxquantr474_done861
    inc $I19
    inc $I19
    set rx464_rep, rx464_bstack[$I19]
    nqp_rxcommit rx464_bstack, rxquantr474_done861
    inc rx464_rep
    nqp_rxmark rx464_bstack, rxquantr474_done861, rx464_pos, rx464_rep
    goto rxquantr474_loop860
  rxquantr474_done861:
    add $I11, rx464_pos, 3
    gt $I11, rx464_eos, rx464_fail838
    substr $S10, rx464_tgt, rx464_pos, 3
    ne $S10, ucs4:"END", rx464_fail838
    add rx464_pos, 3
    le rx464_pos, 0, rx464_fail838
    is_cclass $I11, .CCLASS_WORD, rx464_tgt, rx464_pos
    if $I11, rx464_fail838
    sub $I11, rx464_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx464_tgt, $I11
    unless $I11, rx464_fail838
    nqp_rxmark rx464_bstack, rxquantr476_done864, rx464_pos, 0
  rxquantr476_loop863:
    ge rx464_pos, rx464_eos, rx464_fail838
    is_cclass $I11, .CCLASS_NEWLINE, rx464_tgt, rx464_pos
    if $I11, rx464_fail838
    add rx464_pos, 1
    nqp_rxpeek $I19, rx464_bstack, rxquantr476_done864
    inc $I19
    inc $I19
    set rx464_rep, rx464_bstack[$I19]
    nqp_rxcommit rx464_bstack, rxquantr476_done864
    inc rx464_rep
    nqp_rxmark rx464_bstack, rxquantr476_done864, rx464_pos, rx464_rep
    goto rxquantr476_loop863
  rxquantr476_done864:
    goto alt471_end853
  alt471_1865:
    nqp_rxmark rx464_bstack, rxquantr477_done867, rx464_pos, 0
  rxquantr477_loop866:
    ge rx464_pos, rx464_eos, rx464_fail838
    add rx464_pos, 1
    nqp_rxpeek $I19, rx464_bstack, rxquantr477_done867
    inc $I19
    inc $I19
    set rx464_rep, rx464_bstack[$I19]
    nqp_rxcommit rx464_bstack, rxquantr477_done867
    inc rx464_rep
    nqp_rxmark rx464_bstack, rxquantr477_done867, rx464_pos, rx464_rep
    goto rxquantr477_loop866
  rxquantr477_done867:
  alt471_end853:
    goto alt468_end848
  alt468_1868:
    add $I11, rx464_pos, 5
    gt $I11, rx464_eos, rx464_fail838
    substr $S10, rx464_tgt, rx464_pos, 5
    ne $S10, ucs4:"begin", rx464_fail838
    add rx464_pos, 5
    nqp_rxmark rx464_bstack, rxquantr478_done870, -1, 0
  rxquantr478_loop869:
    ge rx464_pos, rx464_eos, rx464_fail838
    substr $S11, rx464_tgt, rx464_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx464_fail838
    inc rx464_pos
    nqp_rxpeek $I19, rx464_bstack, rxquantr478_done870
    inc $I19
    inc $I19
    set rx464_rep, rx464_bstack[$I19]
    nqp_rxcommit rx464_bstack, rxquantr478_done870
    inc rx464_rep
    nqp_rxmark rx464_bstack, rxquantr478_done870, rx464_pos, rx464_rep
    goto rxquantr478_loop869
  rxquantr478_done870:
    repr_bind_attr_int rx464_cur, rx464_curclass, "$!pos", rx464_pos
    $P11 = rx464_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx464_curclass, "$!pos"
    lt $I11, 0, rx464_fail838
    nqp_rxmark rx464_bstack, rxsubrule479_pass871, -1, 0
  rxsubrule479_pass871:
    rx464_cstack = rx464_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx464_pos, $P11, rx464_curclass, "$!pos"
  alt480_0873:
    nqp_rxmark rx464_bstack, alt480_1885, rx464_pos, 0
    set rx464_rep, 0
    nqp_rxmark rx464_bstack, rxquantf481_loop874, rx464_pos, rx464_rep
    goto rxquantf481_done875
  rxquantf481_loop874:
    set $I12, rx464_rep
    ge rx464_pos, rx464_eos, rx464_fail838
    add rx464_pos, 1
    set rx464_rep, $I12
    inc rx464_rep
    nqp_rxmark rx464_bstack, rxquantf481_loop874, rx464_pos, rx464_rep
  rxquantf481_done875:
    ge rx464_pos, rx464_eos, rx464_fail838
    is_cclass $I11, .CCLASS_NEWLINE, rx464_tgt, rx464_pos
    unless $I11, rx464_fail838
    substr $S10, rx464_tgt, rx464_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx464_pos, $I11
    add rx464_pos, 1
    nqp_rxmark rx464_bstack, rxquantr482_done878, rx464_pos, 0
  rxquantr482_loop877:
    ge rx464_pos, rx464_eos, rx464_fail838
    substr $S11, rx464_tgt, rx464_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx464_fail838
    inc rx464_pos
    nqp_rxpeek $I19, rx464_bstack, rxquantr482_done878
    inc $I19
    inc $I19
    set rx464_rep, rx464_bstack[$I19]
    nqp_rxcommit rx464_bstack, rxquantr482_done878
    inc rx464_rep
    nqp_rxmark rx464_bstack, rxquantr482_done878, rx464_pos, rx464_rep
    goto rxquantr482_loop877
  rxquantr482_done878:
    add $I11, rx464_pos, 4
    gt $I11, rx464_eos, rx464_fail838
    substr $S10, rx464_tgt, rx464_pos, 4
    ne $S10, ucs4:"=end", rx464_fail838
    add rx464_pos, 4
    nqp_rxmark rx464_bstack, rxquantr483_done880, -1, 0
  rxquantr483_loop879:
    ge rx464_pos, rx464_eos, rx464_fail838
    substr $S11, rx464_tgt, rx464_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx464_fail838
    inc rx464_pos
    nqp_rxpeek $I19, rx464_bstack, rxquantr483_done880
    inc $I19
    inc $I19
    set rx464_rep, rx464_bstack[$I19]
    nqp_rxcommit rx464_bstack, rxquantr483_done880
    inc rx464_rep
    nqp_rxmark rx464_bstack, rxquantr483_done880, rx464_pos, rx464_rep
    goto rxquantr483_loop879
  rxquantr483_done880:
    repr_bind_attr_int rx464_cur, rx464_curclass, "$!pos", rx464_pos
    $P11 = rx464_cur."!BACKREF"("identifier")
    repr_get_attr_int $I11, $P11, rx464_curclass, "$!pos"
    lt $I11, 0, rx464_fail838
    repr_get_attr_int rx464_pos, $P11, rx464_curclass, "$!pos"
    le rx464_pos, 0, rx464_fail838
    is_cclass $I11, .CCLASS_WORD, rx464_tgt, rx464_pos
    if $I11, rx464_fail838
    sub $I11, rx464_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx464_tgt, $I11
    unless $I11, rx464_fail838
    nqp_rxmark rx464_bstack, rxquantr486_done884, rx464_pos, 0
  rxquantr486_loop883:
    ge rx464_pos, rx464_eos, rx464_fail838
    is_cclass $I11, .CCLASS_NEWLINE, rx464_tgt, rx464_pos
    if $I11, rx464_fail838
    add rx464_pos, 1
    nqp_rxpeek $I19, rx464_bstack, rxquantr486_done884
    inc $I19
    inc $I19
    set rx464_rep, rx464_bstack[$I19]
    nqp_rxcommit rx464_bstack, rxquantr486_done884
    inc rx464_rep
    nqp_rxmark rx464_bstack, rxquantr486_done884, rx464_pos, rx464_rep
    goto rxquantr486_loop883
  rxquantr486_done884:
    goto alt480_end872
  alt480_1885:
    repr_bind_attr_int rx464_cur, rx464_curclass, "$!pos", rx464_pos
    $P11 = rx464_cur."panic"("=begin without matching =end")
    repr_get_attr_int $I11, $P11, rx464_curclass, "$!pos"
    lt $I11, 0, rx464_fail838
    repr_get_attr_int rx464_pos, $P11, rx464_curclass, "$!pos"
  alt480_end872:
    goto alt468_end848
  alt468_2887:
    add $I11, rx464_pos, 5
    gt $I11, rx464_eos, rx464_fail838
    substr $S10, rx464_tgt, rx464_pos, 5
    ne $S10, ucs4:"begin", rx464_fail838
    add rx464_pos, 5
    le rx464_pos, 0, rx464_fail838
    is_cclass $I11, .CCLASS_WORD, rx464_tgt, rx464_pos
    if $I11, rx464_fail838
    sub $I11, rx464_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx464_tgt, $I11
    unless $I11, rx464_fail838
    nqp_rxmark rx464_bstack, rxquantr489_done890, rx464_pos, 0
  rxquantr489_loop889:
    ge rx464_pos, rx464_eos, rx464_fail838
    substr $S11, rx464_tgt, rx464_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx464_fail838
    inc rx464_pos
    nqp_rxpeek $I19, rx464_bstack, rxquantr489_done890
    inc $I19
    inc $I19
    set rx464_rep, rx464_bstack[$I19]
    nqp_rxcommit rx464_bstack, rxquantr489_done890
    inc rx464_rep
    nqp_rxmark rx464_bstack, rxquantr489_done890, rx464_pos, rx464_rep
    goto rxquantr489_loop889
  rxquantr489_done890:
  alt490_0892:
    nqp_rxmark rx464_bstack, alt490_1894, rx464_pos, 0
    is_cclass $I11, .CCLASS_NEWLINE, rx464_tgt, rx464_pos
    if $I11, rxanchor491_done893
    ne rx464_pos, rx464_eos, rx464_fail838
    eq rx464_pos, 0, rxanchor491_done893
    sub $I11, rx464_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx464_tgt, $I11
    if $I11, rx464_fail838
  rxanchor491_done893:
    goto alt490_end891
  alt490_1894:
    nqp_rxmark rx464_bstack, alt490_2895, rx464_pos, 0
    add $I11, rx464_pos, 1
    gt $I11, rx464_eos, rx464_fail838
    substr $S10, rx464_tgt, rx464_pos, 1
    ne $S10, ucs4:"#", rx464_fail838
    add rx464_pos, 1
    goto alt490_end891
  alt490_2895:
    repr_bind_attr_int rx464_cur, rx464_curclass, "$!pos", rx464_pos
    $P11 = rx464_cur."panic"("Unrecognized token after =begin")
    repr_get_attr_int $I11, $P11, rx464_curclass, "$!pos"
    lt $I11, 0, rx464_fail838
    repr_get_attr_int rx464_pos, $P11, rx464_curclass, "$!pos"
  alt490_end891:
  alt493_0898:
    nqp_rxmark rx464_bstack, alt493_1907, rx464_pos, 0
    set rx464_rep, 0
    nqp_rxmark rx464_bstack, rxquantf494_loop899, rx464_pos, rx464_rep
    goto rxquantf494_done900
  rxquantf494_loop899:
    set $I12, rx464_rep
    ge rx464_pos, rx464_eos, rx464_fail838
    add rx464_pos, 1
    set rx464_rep, $I12
    inc rx464_rep
    nqp_rxmark rx464_bstack, rxquantf494_loop899, rx464_pos, rx464_rep
  rxquantf494_done900:
    ge rx464_pos, rx464_eos, rx464_fail838
    is_cclass $I11, .CCLASS_NEWLINE, rx464_tgt, rx464_pos
    unless $I11, rx464_fail838
    substr $S10, rx464_tgt, rx464_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx464_pos, $I11
    add rx464_pos, 1
    nqp_rxmark rx464_bstack, rxquantr495_done903, rx464_pos, 0
  rxquantr495_loop902:
    ge rx464_pos, rx464_eos, rx464_fail838
    substr $S11, rx464_tgt, rx464_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx464_fail838
    inc rx464_pos
    nqp_rxpeek $I19, rx464_bstack, rxquantr495_done903
    inc $I19
    inc $I19
    set rx464_rep, rx464_bstack[$I19]
    nqp_rxcommit rx464_bstack, rxquantr495_done903
    inc rx464_rep
    nqp_rxmark rx464_bstack, rxquantr495_done903, rx464_pos, rx464_rep
    goto rxquantr495_loop902
  rxquantr495_done903:
    add $I11, rx464_pos, 4
    gt $I11, rx464_eos, rx464_fail838
    substr $S10, rx464_tgt, rx464_pos, 4
    ne $S10, ucs4:"=end", rx464_fail838
    add rx464_pos, 4
    le rx464_pos, 0, rx464_fail838
    is_cclass $I11, .CCLASS_WORD, rx464_tgt, rx464_pos
    if $I11, rx464_fail838
    sub $I11, rx464_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx464_tgt, $I11
    unless $I11, rx464_fail838
    nqp_rxmark rx464_bstack, rxquantr497_done906, rx464_pos, 0
  rxquantr497_loop905:
    ge rx464_pos, rx464_eos, rx464_fail838
    is_cclass $I11, .CCLASS_NEWLINE, rx464_tgt, rx464_pos
    if $I11, rx464_fail838
    add rx464_pos, 1
    nqp_rxpeek $I19, rx464_bstack, rxquantr497_done906
    inc $I19
    inc $I19
    set rx464_rep, rx464_bstack[$I19]
    nqp_rxcommit rx464_bstack, rxquantr497_done906
    inc rx464_rep
    nqp_rxmark rx464_bstack, rxquantr497_done906, rx464_pos, rx464_rep
    goto rxquantr497_loop905
  rxquantr497_done906:
    goto alt493_end897
  alt493_1907:
    repr_bind_attr_int rx464_cur, rx464_curclass, "$!pos", rx464_pos
    $P11 = rx464_cur."panic"("=begin without matching =end")
    repr_get_attr_int $I11, $P11, rx464_curclass, "$!pos"
    lt $I11, 0, rx464_fail838
    repr_get_attr_int rx464_pos, $P11, rx464_curclass, "$!pos"
  alt493_end897:
    goto alt468_end848
  alt468_3909:
    repr_bind_attr_int rx464_cur, rx464_curclass, "$!pos", rx464_pos
    $P11 = rx464_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx464_curclass, "$!pos"
    lt $I11, 0, rx464_fail838
    nqp_rxmark rx464_bstack, rxsubrule499_pass910, -1, 0
  rxsubrule499_pass910:
    rx464_cstack = rx464_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx464_pos, $P11, rx464_curclass, "$!pos"
    set rx464_rep, 0
    nqp_rxmark rx464_bstack, rxquantf500_loop911, rx464_pos, rx464_rep
    goto rxquantf500_done912
  rxquantf500_loop911:
    set $I12, rx464_rep
    ge rx464_pos, rx464_eos, rx464_fail838
    add rx464_pos, 1
    set rx464_rep, $I12
    inc rx464_rep
    nqp_rxmark rx464_bstack, rxquantf500_loop911, rx464_pos, rx464_rep
  rxquantf500_done912:
    eq rx464_pos, 0, rxanchor501_done914
    ge rx464_pos, rx464_eos, rx464_fail838
    sub $I11, rx464_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx464_tgt, $I11
    unless $I11, rx464_fail838
  rxanchor501_done914:
    .const 'Sub' $P5001 = 'cuid_44_1360432459.413' 
    capture_lex $P5001
    repr_bind_attr_int rx464_cur, rx464_curclass, "$!pos", rx464_pos
    $P11 = rx464_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx464_curclass, "$!pos"
    lt $I11, 0, rx464_fail838
    goto alt468_end848
  alt468_4934:
  alt509_0936:
    nqp_rxmark rx464_bstack, alt509_1937, rx464_pos, 0
    ge rx464_pos, rx464_eos, rx464_fail838
    is_cclass $I11, .CCLASS_WHITESPACE, rx464_tgt, rx464_pos
    unless $I11, rx464_fail838
    add rx464_pos, 1
    goto alt509_end935
  alt509_1937:
    repr_bind_attr_int rx464_cur, rx464_curclass, "$!pos", rx464_pos
    $P11 = rx464_cur."panic"("Illegal pod directive")
    repr_get_attr_int $I11, $P11, rx464_curclass, "$!pos"
    lt $I11, 0, rx464_fail838
    repr_get_attr_int rx464_pos, $P11, rx464_curclass, "$!pos"
  alt509_end935:
    nqp_rxmark rx464_bstack, rxquantr511_done940, rx464_pos, 0
  rxquantr511_loop939:
    ge rx464_pos, rx464_eos, rx464_fail838
    is_cclass $I11, .CCLASS_NEWLINE, rx464_tgt, rx464_pos
    if $I11, rx464_fail838
    add rx464_pos, 1
    nqp_rxpeek $I19, rx464_bstack, rxquantr511_done940
    inc $I19
    inc $I19
    set rx464_rep, rx464_bstack[$I19]
    nqp_rxcommit rx464_bstack, rxquantr511_done940
    inc rx464_rep
    nqp_rxmark rx464_bstack, rxquantr511_done940, rx464_pos, rx464_rep
    goto rxquantr511_loop939
  rxquantr511_done940:
    goto alt468_end848
  alt468_end848:
    nqp_rxcommit rx464_bstack, alt468_end848
    rx464_cur."!cursor_pass"(rx464_pos, "pod_comment", 'backtrack'=>1)
    .return (rx464_cur)
  rx464_restart837:
    repr_get_attr_obj rx464_cstack, rx464_cur, rx464_curclass, "$!cstack"
  rx464_fail838:
    unless rx464_bstack, rx464_done836
    pop $I19, rx464_bstack
    if_null rx464_cstack, rx464_cstack_done841
    unless rx464_cstack, rx464_cstack_done841
    dec $I19
    set $P11, rx464_cstack[$I19]
  rx464_cstack_done841:
    pop rx464_rep, rx464_bstack
    pop rx464_pos, rx464_bstack
    pop $I19, rx464_bstack
    lt rx464_pos, -1, rx464_done836
    lt rx464_pos, 0, rx464_fail838
    eq $I19, 0, rx464_fail838
    nqp_islist $I20, rx464_cstack
    unless $I20, rx464_jump839
    elements $I18, rx464_bstack
    le $I18, 0, rx464_cut840
    dec $I18
    set $I18, rx464_bstack[$I18]
  rx464_cut840:
    assign rx464_cstack, $I18
  rx464_jump839:
    jump $I19
  rx464_done836:
    rx464_cur."!cursor_fail"()
    .return (rx464_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_44_1360432459.413") :anon :lex :outer("cuid_43_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local string rx502_tgt
    .local int rx502_pos
    .local int rx502_off
    .local int rx502_eos
    .local int rx502_rep
    .local pmc rx502_cur
    .local pmc rx502_curclass
    .local pmc rx502_bstack
    .local pmc rx502_cstack
    (rx502_cur, rx502_tgt, rx502_pos, rx502_curclass, rx502_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx502_cur
    length rx502_eos, rx502_tgt
    eq $I19, 1, rx502_restart917
    gt rx502_pos, rx502_eos, rx502_fail918
    repr_get_attr_int $I11, self, rx502_curclass, "$!from"
    ne $I11, -1, rxscan503_done924
    goto rxscan503_scan923
  rxscan503_loop922:
    inc rx502_pos
    gt rx502_pos, rx502_eos, rx502_fail918
    repr_bind_attr_int rx502_cur, rx502_curclass, "$!from", rx502_pos
  rxscan503_scan923:
    nqp_rxmark rx502_bstack, rxscan503_loop922, rx502_pos, 0
  rxscan503_done924:
    nqp_rxmark rx502_bstack, rxquantr504_done926, rx502_pos, 0
  rxquantr504_loop925:
    ge rx502_pos, rx502_eos, rx502_fail918
    substr $S11, rx502_tgt, rx502_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx502_fail918
    inc rx502_pos
    nqp_rxpeek $I19, rx502_bstack, rxquantr504_done926
    inc $I19
    inc $I19
    set rx502_rep, rx502_bstack[$I19]
    nqp_rxcommit rx502_bstack, rxquantr504_done926
    inc rx502_rep
    nqp_rxmark rx502_bstack, rxquantr504_done926, rx502_pos, rx502_rep
    goto rxquantr504_loop925
  rxquantr504_done926:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt505_0928
    nqp_push_label $P11, alt505_1933
    nqp_rxmark rx502_bstack, alt505_end927, -1, 0
    rx502_cur."!alt"(rx502_pos, "alt_nfa__5_1360432460.711", $P11)
    goto rx502_fail918
  alt505_0928:
    add $I11, rx502_pos, 1
    gt $I11, rx502_eos, rx502_fail918
    substr $S10, rx502_tgt, rx502_pos, 1
    ne $S10, ucs4:"=", rx502_fail918
    add rx502_pos, 1
    nqp_rxmark rx502_bstack, rxquantr506_done930, rx502_pos, 0
  rxquantr506_loop929:
    add $I11, rx502_pos, 3
    gt $I11, rx502_eos, rx502_fail918
    substr $S10, rx502_tgt, rx502_pos, 3
    ne $S10, ucs4:"cut", rx502_fail918
    add rx502_pos, 3
    le rx502_pos, 0, rx502_fail918
    is_cclass $I11, .CCLASS_WORD, rx502_tgt, rx502_pos
    if $I11, rx502_fail918
    sub $I11, rx502_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx502_tgt, $I11
    unless $I11, rx502_fail918
    repr_bind_attr_int rx502_cur, rx502_curclass, "$!pos", rx502_pos
    $P11 = rx502_cur."panic"("Obsolete pod format, please use =begin/=end instead")
    repr_get_attr_int $I11, $P11, rx502_curclass, "$!pos"
    lt $I11, 0, rx502_fail918
    repr_get_attr_int rx502_pos, $P11, rx502_curclass, "$!pos"
    nqp_rxpeek $I19, rx502_bstack, rxquantr506_done930
    inc $I19
    inc $I19
    set rx502_rep, rx502_bstack[$I19]
    nqp_rxcommit rx502_bstack, rxquantr506_done930
    inc rx502_rep
  rxquantr506_done930:
    goto alt505_end927
  alt505_1933:
    ge rx502_pos, rx502_eos, rx502_fail918
    is_cclass $I11, .CCLASS_NEWLINE, rx502_tgt, rx502_pos
    unless $I11, rx502_fail918
    substr $S10, rx502_tgt, rx502_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx502_pos, $I11
    add rx502_pos, 1
    goto alt505_end927
  alt505_end927:
    nqp_rxcommit rx502_bstack, alt505_end927
    rx502_cur."!cursor_pass"(rx502_pos, 'backtrack'=>1)
    .return (rx502_cur)
  rx502_restart917:
    repr_get_attr_obj rx502_cstack, rx502_cur, rx502_curclass, "$!cstack"
  rx502_fail918:
    unless rx502_bstack, rx502_done916
    pop $I19, rx502_bstack
    if_null rx502_cstack, rx502_cstack_done921
    unless rx502_cstack, rx502_cstack_done921
    dec $I19
    set $P11, rx502_cstack[$I19]
  rx502_cstack_done921:
    pop rx502_rep, rx502_bstack
    pop rx502_pos, rx502_bstack
    pop $I19, rx502_bstack
    lt rx502_pos, -1, rx502_done916
    lt rx502_pos, 0, rx502_fail918
    eq $I19, 0, rx502_fail918
    nqp_islist $I20, rx502_cstack
    unless $I20, rx502_jump919
    elements $I18, rx502_bstack
    le $I18, 0, rx502_cut920
    dec $I18
    set $I18, rx502_bstack[$I18]
  rx502_cut920:
    assign rx502_cstack, $I18
  rx502_jump919:
    jump $I19
  rx502_done916:
    rx502_cur."!cursor_fail"()
    .return (rx502_cur) 
.end
.HLL "nqp"
.namespace []
.sub "comp_unit" :subid("cuid_45_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 736
    .param pmc _lex_param_0 
    .const 'Sub' $P5075 = 'cuid_396_1360432459.413' 
    capture_lex $P5075 
    .const 'Sub' $P5075 = 'cuid_397_1360432459.413' 
    capture_lex $P5075 
    .const 'Sub' $P5075 = 'cuid_399_1360432459.413' 
    capture_lex $P5075 
    .const 'Sub' $P5075 = 'cuid_400_1360432459.413' 
    capture_lex $P5075 
    .lex "$*IN_DECL", $P101 
    .lex "$*HAS_YOU_ARE_HERE", $P102 
    .lex "$*MAIN_SUB", $P103 
    .lex "$*UNIT", $P104 
    .lex "$*GLOBALish", $P105 
    .lex "$*PACKAGE", $P106 
    .lex "$*EXPORT", $P107 
    .lex utf8:"$\x{a2}", $P108 
    .lex "$/", $P109 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_172 
    .local pmc fb_tmp_173 
    .local pmc fb_tmp_174 
    .local pmc fb_tmp_175 
    .local pmc fb_tmp_176 
    .local pmc fb_tmp_182 
    .local pmc fb_tmp_186 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P105, $P5005
    nqp_get_sc_object $P5006, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P106, $P5006
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P107, $P5007
    set self, _lex_param_0
    .local string rx512_tgt
    .local int rx512_pos
    .local int rx512_off
    .local int rx512_eos
    .local int rx512_rep
    .local pmc rx512_cur
    .local pmc rx512_curclass
    .local pmc rx512_bstack
    .local pmc rx512_cstack
    (rx512_cur, rx512_tgt, rx512_pos, rx512_curclass, rx512_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx512_cur
    length rx512_eos, rx512_tgt
    eq $I19, 1, rx512_restart943
    gt rx512_pos, rx512_eos, rx512_fail944
    repr_get_attr_int $I11, self, rx512_curclass, "$!from"
    ne $I11, -1, rxscan513_done950
    goto rxscan513_scan949
  rxscan513_loop948:
    inc rx512_pos
    gt rx512_pos, rx512_eos, rx512_fail944
    repr_bind_attr_int rx512_cur, rx512_curclass, "$!from", rx512_pos
  rxscan513_scan949:
    nqp_rxmark rx512_bstack, rxscan513_loop948, rx512_pos, 0
  rxscan513_done950:
    repr_bind_attr_int rx512_cur, rx512_curclass, "$!pos", rx512_pos
    store_lex unicode:"$\x{a2}", rx512_cur
    box $P5008, ""
    set $P101, $P5008
    repr_bind_attr_int rx512_cur, rx512_curclass, "$!pos", rx512_pos
    store_lex unicode:"$\x{a2}", rx512_cur
    box $P5009, 0
    set $P102, $P5009
    repr_bind_attr_int rx512_cur, rx512_curclass, "$!pos", rx512_pos
    store_lex unicode:"$\x{a2}", rx512_cur
    unless_null $P103, fallback951
    nqp_get_sc_object $P5011, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5010, $P5011
    set fb_tmp_172, $P5010
    repr_defined $I5001, fb_tmp_172
    unless $I5001 goto if514_else952 
    set $P5012, fb_tmp_172["$MAIN_SUB"]
    set $P5014, $P5012
    goto if514_end953
  if514_else952:
    null $P5013
    set $P5014, $P5013
  if514_end953:
    unless_null $P5014, vivi_515954
    nqp_get_sc_object $P5015, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5014, $P5015
  vivi_515954:
    unless_null $P5014, vivi_516955
    die "Contextual $*MAIN_SUB not found"
    box $P5016, "Contextual $*MAIN_SUB not found"
    set $P5014, $P5016
  vivi_516955:
    set $P103, $P5014
  fallback951:
    repr_bind_attr_int rx512_cur, rx512_curclass, "$!pos", rx512_pos
    store_lex unicode:"$\x{a2}", rx512_cur
.annotate 'line', 741
    find_dynamic_lex $P5017, "$*W"
    unless_null $P5017, fallback956
    nqp_get_sc_object $P5019, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5018, $P5019
    set fb_tmp_173, $P5018
    repr_defined $I5002, fb_tmp_173
    unless $I5002 goto if517_else957 
    set $P5020, fb_tmp_173["$W"]
    set $P5022, $P5020
    goto if517_end958
  if517_else957:
    null $P5021
    set $P5022, $P5021
  if517_end958:
    unless_null $P5022, vivi_518959
    nqp_get_sc_object $P5023, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5022, $P5023
  vivi_518959:
    unless_null $P5022, vivi_519960
    die "Contextual $*W not found"
    box $P5024, "Contextual $*W not found"
    set $P5022, $P5024
  vivi_519960:
    set $P5017, $P5022
  fallback956:
    $P5025 = $P5017."push_lexpad"($P109)
    set $P104, $P5025
    repr_bind_attr_int rx512_cur, rx512_curclass, "$!pos", rx512_pos
    store_lex unicode:"$\x{a2}", rx512_cur
.annotate 'line', 745
    find_dynamic_lex $P5026, "$*W"
    unless_null $P5026, fallback961
    nqp_get_sc_object $P5028, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5027, $P5028
    set fb_tmp_174, $P5027
    repr_defined $I5003, fb_tmp_174
    unless $I5003 goto if520_else962 
    set $P5029, fb_tmp_174["$W"]
    set $P5031, $P5029
    goto if520_end963
  if520_else962:
    null $P5030
    set $P5031, $P5030
  if520_end963:
    unless_null $P5031, vivi_521964
    nqp_get_sc_object $P5032, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5031, $P5032
  vivi_521964:
    unless_null $P5031, vivi_522965
    die "Contextual $*W not found"
    box $P5033, "Contextual $*W not found"
    set $P5031, $P5033
  vivi_522965:
    set $P5026, $P5031
  fallback961:
    find_dynamic_lex $P5034, "%*HOW"
    unless_null $P5034, fallback968
    nqp_get_sc_object $P5036, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5035, $P5036
    set fb_tmp_176, $P5035
    repr_defined $I5005, fb_tmp_176
    unless $I5005 goto if524_else969 
    set $P5037, fb_tmp_176["%HOW"]
    set $P5039, $P5037
    goto if524_end970
  if524_else969:
    null $P5038
    set $P5039, $P5038
  if524_end970:
    unless_null $P5039, vivi_525971
    nqp_get_sc_object $P5041, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5040, $P5041
    new $P5042, 'Hash'
    set $P5040["%HOW"], $P5042
    set $P5039, $P5042
  vivi_525971:
    unless_null $P5039, vivi_526972
    die "Contextual %*HOW not found"
    box $P5043, "Contextual %*HOW not found"
    set $P5039, $P5043
  vivi_526972:
    set $P5034, $P5039
  fallback968:
    set fb_tmp_175, $P5034
    repr_defined $I5004, fb_tmp_175
    unless $I5004 goto if523_else966 
    set $P5044, fb_tmp_175["knowhow"]
    set $P5046, $P5044
    goto if523_end967
  if523_else966:
    null $P5045
    set $P5046, $P5045
  if523_end967:
    unless_null $P5046, vivi_527973
    nqp_get_sc_object $P5047, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5046, $P5047
  vivi_527973:
    $P5048 = $P5026."pkg_create_mo"($P5046, "GLOBALish" :named("name"))
    set $P105, $P5048
    repr_bind_attr_int rx512_cur, rx512_curclass, "$!pos", rx512_pos
    store_lex unicode:"$\x{a2}", rx512_cur
    $P5049 = $P108."MATCH"()
    set $P109, $P5049
    .const 'Sub' $P5050 = 'cuid_396_1360432459.413' 
    capture_lex $P5050
    $P5051 = $P5050()
    repr_bind_attr_int rx512_cur, rx512_curclass, "$!pos", rx512_pos
    store_lex unicode:"$\x{a2}", rx512_cur
    unless_null $P105, fallback999
    nqp_get_sc_object $P5053, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5052, $P5053
    set fb_tmp_182, $P5052
    repr_defined $I5006, fb_tmp_182
    unless $I5006 goto if543_else1000 
    set $P5054, fb_tmp_182["$GLOBALish"]
    set $P5056, $P5054
    goto if543_end1001
  if543_else1000:
    null $P5055
    set $P5056, $P5055
  if543_end1001:
    unless_null $P5056, vivi_5441002
    nqp_get_sc_object $P5057, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5056, $P5057
  vivi_5441002:
    unless_null $P5056, vivi_5451003
    die "Contextual $*GLOBALish not found"
    box $P5058, "Contextual $*GLOBALish not found"
    set $P5056, $P5058
  vivi_5451003:
    set $P105, $P5056
  fallback999:
    set $P106, $P105
    repr_bind_attr_int rx512_cur, rx512_curclass, "$!pos", rx512_pos
    store_lex unicode:"$\x{a2}", rx512_cur
    $P5059 = $P108."MATCH"()
    set $P109, $P5059
    .const 'Sub' $P5060 = 'cuid_397_1360432459.413' 
    capture_lex $P5060
    $P5061 = $P5060()
    repr_bind_attr_int rx512_cur, rx512_curclass, "$!pos", rx512_pos
    store_lex unicode:"$\x{a2}", rx512_cur
    unless_null $P107, fallback1019
    nqp_get_sc_object $P5063, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5062, $P5063
    set fb_tmp_186, $P5062
    repr_defined $I5007, fb_tmp_186
    unless $I5007 goto if555_else1020 
    set $P5064, fb_tmp_186["$EXPORT"]
    set $P5066, $P5064
    goto if555_end1021
  if555_else1020:
    null $P5065
    set $P5066, $P5065
  if555_end1021:
    unless_null $P5066, vivi_5561022
    nqp_get_sc_object $P5067, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5066, $P5067
  vivi_5561022:
    unless_null $P5066, vivi_5571023
    die "Contextual $*EXPORT not found"
    box $P5068, "Contextual $*EXPORT not found"
    set $P5066, $P5068
  vivi_5571023:
    set $P107, $P5066
  fallback1019:
    repr_bind_attr_int rx512_cur, rx512_curclass, "$!pos", rx512_pos
    store_lex unicode:"$\x{a2}", rx512_cur
    $P5069 = $P108."MATCH"()
    set $P109, $P5069
    .const 'Sub' $P5070 = 'cuid_399_1360432459.413' 
    capture_lex $P5070
    $P5071 = $P5070()
    repr_bind_attr_int rx512_cur, rx512_curclass, "$!pos", rx512_pos
    store_lex unicode:"$\x{a2}", rx512_cur
    $P5072 = $P108."MATCH"()
    set $P109, $P5072
    .const 'Sub' $P5073 = 'cuid_400_1360432459.413' 
    capture_lex $P5073
    $P5074 = $P5073()
    repr_bind_attr_int rx512_cur, rx512_curclass, "$!pos", rx512_pos
    $P11 = rx512_cur."outerctx"()
    repr_get_attr_int $I11, $P11, rx512_curclass, "$!pos"
    lt $I11, 0, rx512_fail944
    repr_get_attr_int rx512_pos, $P11, rx512_curclass, "$!pos"
    repr_bind_attr_int rx512_cur, rx512_curclass, "$!pos", rx512_pos
    $P11 = rx512_cur."statementlist"()
    repr_get_attr_int $I11, $P11, rx512_curclass, "$!pos"
    lt $I11, 0, rx512_fail944
    nqp_rxmark rx512_bstack, rxsubrule604_pass1099, -1, 0
  rxsubrule604_pass1099:
    rx512_cstack = rx512_cur."!cursor_capture"($P11, "statementlist")
    repr_get_attr_int rx512_pos, $P11, rx512_curclass, "$!pos"
  alt605_01101:
    nqp_rxmark rx512_bstack, alt605_11103, rx512_pos, 0
    lt rx512_pos, rx512_eos, rx512_fail944
    goto alt605_end1100
  alt605_11103:
    repr_bind_attr_int rx512_cur, rx512_curclass, "$!pos", rx512_pos
    $P11 = rx512_cur."panic"("Confused")
    repr_get_attr_int $I11, $P11, rx512_curclass, "$!pos"
    lt $I11, 0, rx512_fail944
    repr_get_attr_int rx512_pos, $P11, rx512_curclass, "$!pos"
  alt605_end1100:
    rx512_cur."!cursor_pass"(rx512_pos, "comp_unit", 'backtrack'=>1)
    .return (rx512_cur)
  rx512_restart943:
    repr_get_attr_obj rx512_cstack, rx512_cur, rx512_curclass, "$!cstack"
  rx512_fail944:
    unless rx512_bstack, rx512_done942
    pop $I19, rx512_bstack
    if_null rx512_cstack, rx512_cstack_done947
    unless rx512_cstack, rx512_cstack_done947
    dec $I19
    set $P11, rx512_cstack[$I19]
  rx512_cstack_done947:
    pop rx512_rep, rx512_bstack
    pop rx512_pos, rx512_bstack
    pop $I19, rx512_bstack
    lt rx512_pos, -1, rx512_done942
    lt rx512_pos, 0, rx512_fail944
    eq $I19, 0, rx512_fail944
    nqp_islist $I20, rx512_cstack
    unless $I20, rx512_jump945
    elements $I18, rx512_bstack
    le $I18, 0, rx512_cut946
    dec $I18
    set $I18, rx512_bstack[$I18]
  rx512_cut946:
    assign rx512_cstack, $I18
  rx512_jump945:
    jump $I19
  rx512_done942:
    rx512_cur."!cursor_fail"()
    .return (rx512_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_396_1360432459.413") :anon :lex :outer("cuid_45_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 746
    .local pmc fb_tmp_177 
    .local pmc fb_tmp_178 
    .local pmc fb_tmp_179 
    .local pmc fb_tmp_180 
    .local pmc fb_tmp_181 
.annotate 'line', 747
    find_dynamic_lex $P5002, "$*GLOBALish"
    unless_null $P5002, fallback974
    nqp_get_sc_object $P5004, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5003, $P5004
    set fb_tmp_177, $P5003
    repr_defined $I5001, fb_tmp_177
    unless $I5001 goto if528_else975 
    set $P5005, fb_tmp_177["$GLOBALish"]
    set $P5007, $P5005
    goto if528_end976
  if528_else975:
    null $P5006
    set $P5007, $P5006
  if528_end976:
    unless_null $P5007, vivi_529977
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5007, $P5008
  vivi_529977:
    unless_null $P5007, vivi_530978
    die "Contextual $*GLOBALish not found"
    box $P5009, "Contextual $*GLOBALish not found"
    set $P5007, $P5009
  vivi_530978:
    set $P5002, $P5007
  fallback974:
    get_how $P5001, $P5002
    find_dynamic_lex $P5010, "$*GLOBALish"
    unless_null $P5010, fallback979
    nqp_get_sc_object $P5012, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5011, $P5012
    set fb_tmp_178, $P5011
    repr_defined $I5002, fb_tmp_178
    unless $I5002 goto if531_else980 
    set $P5013, fb_tmp_178["$GLOBALish"]
    set $P5015, $P5013
    goto if531_end981
  if531_else980:
    null $P5014
    set $P5015, $P5014
  if531_end981:
    unless_null $P5015, vivi_532982
    nqp_get_sc_object $P5016, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5015, $P5016
  vivi_532982:
    unless_null $P5015, vivi_533983
    die "Contextual $*GLOBALish not found"
    box $P5017, "Contextual $*GLOBALish not found"
    set $P5015, $P5017
  vivi_533983:
    set $P5010, $P5015
  fallback979:
    $P5001."compose"($P5010)
.annotate 'line', 748
    find_dynamic_lex $P5018, "$*W"
    unless_null $P5018, fallback984
    nqp_get_sc_object $P5020, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5019, $P5020
    set fb_tmp_179, $P5019
    repr_defined $I5003, fb_tmp_179
    unless $I5003 goto if534_else985 
    set $P5021, fb_tmp_179["$W"]
    set $P5023, $P5021
    goto if534_end986
  if534_else985:
    null $P5022
    set $P5023, $P5022
  if534_end986:
    unless_null $P5023, vivi_535987
    nqp_get_sc_object $P5024, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5023, $P5024
  vivi_535987:
    unless_null $P5023, vivi_536988
    die "Contextual $*W not found"
    box $P5025, "Contextual $*W not found"
    set $P5023, $P5025
  vivi_536988:
    set $P5018, $P5023
  fallback984:
    find_dynamic_lex $P5026, "$*UNIT"
    unless_null $P5026, fallback989
    nqp_get_sc_object $P5028, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5027, $P5028
    set fb_tmp_180, $P5027
    repr_defined $I5004, fb_tmp_180
    unless $I5004 goto if537_else990 
    set $P5029, fb_tmp_180["$UNIT"]
    set $P5031, $P5029
    goto if537_end991
  if537_else990:
    null $P5030
    set $P5031, $P5030
  if537_end991:
    unless_null $P5031, vivi_538992
    nqp_get_sc_object $P5032, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5031, $P5032
  vivi_538992:
    unless_null $P5031, vivi_539993
    die "Contextual $*UNIT not found"
    box $P5033, "Contextual $*UNIT not found"
    set $P5031, $P5033
  vivi_539993:
    set $P5026, $P5031
  fallback989:
    find_dynamic_lex $P5034, "$*GLOBALish"
    unless_null $P5034, fallback994
    nqp_get_sc_object $P5036, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5035, $P5036
    set fb_tmp_181, $P5035
    repr_defined $I5005, fb_tmp_181
    unless $I5005 goto if540_else995 
    set $P5037, fb_tmp_181["$GLOBALish"]
    set $P5039, $P5037
    goto if540_end996
  if540_else995:
    null $P5038
    set $P5039, $P5038
  if540_end996:
    unless_null $P5039, vivi_541997
    nqp_get_sc_object $P5040, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5039, $P5040
  vivi_541997:
    unless_null $P5039, vivi_542998
    die "Contextual $*GLOBALish not found"
    box $P5041, "Contextual $*GLOBALish not found"
    set $P5039, $P5041
  vivi_542998:
    set $P5034, $P5039
  fallback994:
    $P5042 = $P5018."install_lexical_symbol"($P5026, "GLOBALish", $P5034)
    .return ($P5042) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_397_1360432459.413") :anon :lex :outer("cuid_45_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 753
    .local pmc fb_tmp_183 
    .local pmc fb_tmp_184 
    .local pmc fb_tmp_185 
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback1004
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5002, $P5003
    set fb_tmp_183, $P5002
    repr_defined $I5001, fb_tmp_183
    unless $I5001 goto if546_else1005 
    set $P5004, fb_tmp_183["$W"]
    set $P5006, $P5004
    goto if546_end1006
  if546_else1005:
    null $P5005
    set $P5006, $P5005
  if546_end1006:
    unless_null $P5006, vivi_5471007
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_5471007:
    unless_null $P5006, vivi_5481008
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_5481008:
    set $P5001, $P5006
  fallback1004:
    find_dynamic_lex $P5009, "$*UNIT"
    unless_null $P5009, fallback1009
    nqp_get_sc_object $P5011, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5010, $P5011
    set fb_tmp_184, $P5010
    repr_defined $I5002, fb_tmp_184
    unless $I5002 goto if549_else1010 
    set $P5012, fb_tmp_184["$UNIT"]
    set $P5014, $P5012
    goto if549_end1011
  if549_else1010:
    null $P5013
    set $P5014, $P5013
  if549_end1011:
    unless_null $P5014, vivi_5501012
    nqp_get_sc_object $P5015, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5014, $P5015
  vivi_5501012:
    unless_null $P5014, vivi_5511013
    die "Contextual $*UNIT not found"
    box $P5016, "Contextual $*UNIT not found"
    set $P5014, $P5016
  vivi_5511013:
    set $P5009, $P5014
  fallback1009:
    find_dynamic_lex $P5017, "$*PACKAGE"
    unless_null $P5017, fallback1014
    nqp_get_sc_object $P5019, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5018, $P5019
    set fb_tmp_185, $P5018
    repr_defined $I5003, fb_tmp_185
    unless $I5003 goto if552_else1015 
    set $P5020, fb_tmp_185["$PACKAGE"]
    set $P5022, $P5020
    goto if552_end1016
  if552_else1015:
    null $P5021
    set $P5022, $P5021
  if552_end1016:
    unless_null $P5022, vivi_5531017
    nqp_get_sc_object $P5023, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5022, $P5023
  vivi_5531017:
    unless_null $P5022, vivi_5541018
    die "Contextual $*PACKAGE not found"
    box $P5024, "Contextual $*PACKAGE not found"
    set $P5022, $P5024
  vivi_5541018:
    set $P5017, $P5022
  fallback1014:
    $P5025 = $P5001."install_lexical_symbol"($P5009, "$?PACKAGE", $P5017)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_399_1360432459.413") :anon :lex :outer("cuid_45_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 757
    .const 'Sub' $P5023 = 'cuid_398_1360432459.413' 
    capture_lex $P5023 
    .local pmc fb_tmp_187 
    .local pmc fb_tmp_188 
    .local pmc fb_tmp_189 
    find_dynamic_lex $P5001, "%*COMPILING"
    unless_null $P5001, fallback1030
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5002, $P5003
    set fb_tmp_189, $P5002
    repr_defined $I5004, fb_tmp_189
    unless $I5004 goto if561_else1031 
    set $P5004, fb_tmp_189["%COMPILING"]
    set $P5006, $P5004
    goto if561_end1032
  if561_else1031:
    null $P5005
    set $P5006, $P5005
  if561_end1032:
    unless_null $P5006, vivi_5621033
    nqp_get_sc_object $P5008, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5007, $P5008
    new $P5009, 'Hash'
    set $P5007["%COMPILING"], $P5009
    set $P5006, $P5009
  vivi_5621033:
    unless_null $P5006, vivi_5631034
    die "Contextual %*COMPILING not found"
    box $P5010, "Contextual %*COMPILING not found"
    set $P5006, $P5010
  vivi_5631034:
    set $P5001, $P5006
  fallback1030:
    set fb_tmp_188, $P5001
    repr_defined $I5003, fb_tmp_188
    unless $I5003 goto if560_else1028 
    set $P5011, fb_tmp_188["%?OPTIONS"]
    set $P5013, $P5011
    goto if560_end1029
  if560_else1028:
    null $P5012
    set $P5013, $P5012
  if560_end1029:
    unless_null $P5013, vivi_5641035
    nqp_get_sc_object $P5014, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5013, $P5014
  vivi_5641035:
    set fb_tmp_187, $P5013
    repr_defined $I5002, fb_tmp_187
    unless $I5002 goto if559_else1026 
    set $P5015, fb_tmp_187["setting"]
    set $P5017, $P5015
    goto if559_end1027
  if559_else1026:
    null $P5016
    set $P5017, $P5016
  if559_end1027:
    unless_null $P5017, vivi_5651036
    nqp_get_sc_object $P5018, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5017, $P5018
  vivi_5651036:
    set $S5001, $P5017
    iseq $I5001, $S5001, "NULL"
    box $P5022, $I5001
    set $P5021, $P5022
    if $I5001 goto unless558_end1025 
    .const 'Sub' $P5019 = 'cuid_398_1360432459.413' 
    capture_lex $P5019
    $P5020 = $P5019()
    set $P5021, $P5020
  unless558_end1025:
    .return ($P5021) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_398_1360432459.413") :anon :lex :outer("cuid_399_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 758
    .lex "$DEFAULT", $P101 
    .local pmc fb_tmp_190 
    .local pmc fb_tmp_191 
    .local pmc fb_tmp_192 
    .local pmc fb_tmp_193 
    .local pmc fb_tmp_194 
    .local pmc fb_tmp_195 
    .local pmc fb_tmp_196 
    .local pmc fb_tmp_197 
    .local pmc fb_tmp_198 
    .local pmc fb_tmp_199 
    .local pmc fb_tmp_200 
    .local pmc fb_tmp_201 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
.annotate 'line', 759
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback1037
    nqp_get_sc_object $P5004, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5003, $P5004
    set fb_tmp_190, $P5003
    repr_defined $I5001, fb_tmp_190
    unless $I5001 goto if566_else1038 
    set $P5005, fb_tmp_190["$W"]
    set $P5007, $P5005
    goto if566_end1039
  if566_else1038:
    null $P5006
    set $P5007, $P5006
  if566_end1039:
    unless_null $P5007, vivi_5671040
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5007, $P5008
  vivi_5671040:
    unless_null $P5007, vivi_5681041
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_5681041:
    set $P5002, $P5007
  fallback1037:
    find_dynamic_lex $P5010, "%*HOW"
    unless_null $P5010, fallback1044
    nqp_get_sc_object $P5012, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5011, $P5012
    set fb_tmp_192, $P5011
    repr_defined $I5003, fb_tmp_192
    unless $I5003 goto if570_else1045 
    set $P5013, fb_tmp_192["%HOW"]
    set $P5015, $P5013
    goto if570_end1046
  if570_else1045:
    null $P5014
    set $P5015, $P5014
  if570_end1046:
    unless_null $P5015, vivi_5711047
    nqp_get_sc_object $P5017, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5016, $P5017
    new $P5018, 'Hash'
    set $P5016["%HOW"], $P5018
    set $P5015, $P5018
  vivi_5711047:
    unless_null $P5015, vivi_5721048
    die "Contextual %*HOW not found"
    box $P5019, "Contextual %*HOW not found"
    set $P5015, $P5019
  vivi_5721048:
    set $P5010, $P5015
  fallback1044:
    set fb_tmp_191, $P5010
    repr_defined $I5002, fb_tmp_191
    unless $I5002 goto if569_else1042 
    set $P5020, fb_tmp_191["knowhow"]
    set $P5022, $P5020
    goto if569_end1043
  if569_else1042:
    null $P5021
    set $P5022, $P5021
  if569_end1043:
    unless_null $P5022, vivi_5731049
    nqp_get_sc_object $P5023, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5022, $P5023
  vivi_5731049:
    $P5024 = $P5002."pkg_create_mo"($P5022, "EXPORT" :named("name"))
    store_dynamic_lex "$*EXPORT", $P5024
.annotate 'line', 760
    find_dynamic_lex $P5026, "$*EXPORT"
    unless_null $P5026, fallback1050
    nqp_get_sc_object $P5028, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5027, $P5028
    set fb_tmp_193, $P5027
    repr_defined $I5004, fb_tmp_193
    unless $I5004 goto if574_else1051 
    set $P5029, fb_tmp_193["$EXPORT"]
    set $P5031, $P5029
    goto if574_end1052
  if574_else1051:
    null $P5030
    set $P5031, $P5030
  if574_end1052:
    unless_null $P5031, vivi_5751053
    nqp_get_sc_object $P5032, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5031, $P5032
  vivi_5751053:
    unless_null $P5031, vivi_5761054
    die "Contextual $*EXPORT not found"
    box $P5033, "Contextual $*EXPORT not found"
    set $P5031, $P5033
  vivi_5761054:
    set $P5026, $P5031
  fallback1050:
    get_how $P5025, $P5026
    find_dynamic_lex $P5034, "$*EXPORT"
    unless_null $P5034, fallback1055
    nqp_get_sc_object $P5036, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5035, $P5036
    set fb_tmp_194, $P5035
    repr_defined $I5005, fb_tmp_194
    unless $I5005 goto if577_else1056 
    set $P5037, fb_tmp_194["$EXPORT"]
    set $P5039, $P5037
    goto if577_end1057
  if577_else1056:
    null $P5038
    set $P5039, $P5038
  if577_end1057:
    unless_null $P5039, vivi_5781058
    nqp_get_sc_object $P5040, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5039, $P5040
  vivi_5781058:
    unless_null $P5039, vivi_5791059
    die "Contextual $*EXPORT not found"
    box $P5041, "Contextual $*EXPORT not found"
    set $P5039, $P5041
  vivi_5791059:
    set $P5034, $P5039
  fallback1055:
    $P5025."compose"($P5034)
.annotate 'line', 761
    find_dynamic_lex $P5042, "$*W"
    unless_null $P5042, fallback1060
    nqp_get_sc_object $P5044, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5043, $P5044
    set fb_tmp_195, $P5043
    repr_defined $I5006, fb_tmp_195
    unless $I5006 goto if580_else1061 
    set $P5045, fb_tmp_195["$W"]
    set $P5047, $P5045
    goto if580_end1062
  if580_else1061:
    null $P5046
    set $P5047, $P5046
  if580_end1062:
    unless_null $P5047, vivi_5811063
    nqp_get_sc_object $P5048, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5047, $P5048
  vivi_5811063:
    unless_null $P5047, vivi_5821064
    die "Contextual $*W not found"
    box $P5049, "Contextual $*W not found"
    set $P5047, $P5049
  vivi_5821064:
    set $P5042, $P5047
  fallback1060:
    find_dynamic_lex $P5050, "$*UNIT"
    unless_null $P5050, fallback1065
    nqp_get_sc_object $P5052, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5051, $P5052
    set fb_tmp_196, $P5051
    repr_defined $I5007, fb_tmp_196
    unless $I5007 goto if583_else1066 
    set $P5053, fb_tmp_196["$UNIT"]
    set $P5055, $P5053
    goto if583_end1067
  if583_else1066:
    null $P5054
    set $P5055, $P5054
  if583_end1067:
    unless_null $P5055, vivi_5841068
    nqp_get_sc_object $P5056, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5055, $P5056
  vivi_5841068:
    unless_null $P5055, vivi_5851069
    die "Contextual $*UNIT not found"
    box $P5057, "Contextual $*UNIT not found"
    set $P5055, $P5057
  vivi_5851069:
    set $P5050, $P5055
  fallback1065:
    find_dynamic_lex $P5058, "$*EXPORT"
    unless_null $P5058, fallback1070
    nqp_get_sc_object $P5060, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5059, $P5060
    set fb_tmp_197, $P5059
    repr_defined $I5008, fb_tmp_197
    unless $I5008 goto if586_else1071 
    set $P5061, fb_tmp_197["$EXPORT"]
    set $P5063, $P5061
    goto if586_end1072
  if586_else1071:
    null $P5062
    set $P5063, $P5062
  if586_end1072:
    unless_null $P5063, vivi_5871073
    nqp_get_sc_object $P5064, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5063, $P5064
  vivi_5871073:
    unless_null $P5063, vivi_5881074
    die "Contextual $*EXPORT not found"
    box $P5065, "Contextual $*EXPORT not found"
    set $P5063, $P5065
  vivi_5881074:
    set $P5058, $P5063
  fallback1070:
    $P5042."install_lexical_symbol"($P5050, "EXPORT", $P5058)
.annotate 'line', 762
    find_dynamic_lex $P5066, "$*W"
    unless_null $P5066, fallback1075
    nqp_get_sc_object $P5068, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5067, $P5068
    set fb_tmp_198, $P5067
    repr_defined $I5009, fb_tmp_198
    unless $I5009 goto if589_else1076 
    set $P5069, fb_tmp_198["$W"]
    set $P5071, $P5069
    goto if589_end1077
  if589_else1076:
    null $P5070
    set $P5071, $P5070
  if589_end1077:
    unless_null $P5071, vivi_5901078
    nqp_get_sc_object $P5072, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5071, $P5072
  vivi_5901078:
    unless_null $P5071, vivi_5911079
    die "Contextual $*W not found"
    box $P5073, "Contextual $*W not found"
    set $P5071, $P5073
  vivi_5911079:
    set $P5066, $P5071
  fallback1075:
    find_dynamic_lex $P5074, "%*HOW"
    unless_null $P5074, fallback1082
    nqp_get_sc_object $P5076, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5075, $P5076
    set fb_tmp_200, $P5075
    repr_defined $I5011, fb_tmp_200
    unless $I5011 goto if593_else1083 
    set $P5077, fb_tmp_200["%HOW"]
    set $P5079, $P5077
    goto if593_end1084
  if593_else1083:
    null $P5078
    set $P5079, $P5078
  if593_end1084:
    unless_null $P5079, vivi_5941085
    nqp_get_sc_object $P5081, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5080, $P5081
    new $P5082, 'Hash'
    set $P5080["%HOW"], $P5082
    set $P5079, $P5082
  vivi_5941085:
    unless_null $P5079, vivi_5951086
    die "Contextual %*HOW not found"
    box $P5083, "Contextual %*HOW not found"
    set $P5079, $P5083
  vivi_5951086:
    set $P5074, $P5079
  fallback1082:
    set fb_tmp_199, $P5074
    repr_defined $I5010, fb_tmp_199
    unless $I5010 goto if592_else1080 
    set $P5084, fb_tmp_199["knowhow"]
    set $P5086, $P5084
    goto if592_end1081
  if592_else1080:
    null $P5085
    set $P5086, $P5085
  if592_end1081:
    unless_null $P5086, vivi_5961087
    nqp_get_sc_object $P5087, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5086, $P5087
  vivi_5961087:
    $P5088 = $P5066."pkg_create_mo"($P5086, "DEFAULT" :named("name"))
    set $P101, $P5088
.annotate 'line', 763
    get_how $P5089, $P101
    $P5089."compose"($P101)
    find_dynamic_lex $P5091, "$*EXPORT"
    unless_null $P5091, fallback1088
    nqp_get_sc_object $P5093, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5092, $P5093
    set fb_tmp_201, $P5092
    repr_defined $I5012, fb_tmp_201
    unless $I5012 goto if597_else1089 
    set $P5094, fb_tmp_201["$EXPORT"]
    set $P5096, $P5094
    goto if597_end1090
  if597_else1089:
    null $P5095
    set $P5096, $P5095
  if597_end1090:
    unless_null $P5096, vivi_5981091
    nqp_get_sc_object $P5097, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5096, $P5097
  vivi_5981091:
    unless_null $P5096, vivi_5991092
    die "Contextual $*EXPORT not found"
    box $P5098, "Contextual $*EXPORT not found"
    set $P5096, $P5098
  vivi_5991092:
    set $P5091, $P5096
  fallback1088:
    get_who $P5090, $P5091
    set $P5090["DEFAULT"], $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_400_1360432459.413") :anon :lex :outer("cuid_45_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 768
    .local pmc fb_tmp_202 
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback1093
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5002, $P5003
    set fb_tmp_202, $P5002
    repr_defined $I5001, fb_tmp_202
    unless $I5001 goto if600_else1094 
    set $P5004, fb_tmp_202["$W"]
    set $P5006, $P5004
    goto if600_end1095
  if600_else1094:
    null $P5005
    set $P5006, $P5005
  if600_end1095:
    unless_null $P5006, vivi_6011096
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_6011096:
    unless_null $P5006, vivi_6021097
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_6021097:
    set $P5001, $P5006
  fallback1093:
    $P5009 = $P5001."add_initializations"()
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "statementlist" :subid("cuid_46_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 776
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx608_tgt
    .local int rx608_pos
    .local int rx608_off
    .local int rx608_eos
    .local int rx608_rep
    .local pmc rx608_cur
    .local pmc rx608_curclass
    .local pmc rx608_bstack
    .local pmc rx608_cstack
    (rx608_cur, rx608_tgt, rx608_pos, rx608_curclass, rx608_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx608_cur
    length rx608_eos, rx608_tgt
    eq $I19, 1, rx608_restart1107
    gt rx608_pos, rx608_eos, rx608_fail1108
    repr_get_attr_int $I11, self, rx608_curclass, "$!from"
    ne $I11, -1, rxscan609_done1114
    goto rxscan609_scan1113
  rxscan609_loop1112:
    inc rx608_pos
    gt rx608_pos, rx608_eos, rx608_fail1108
    repr_bind_attr_int rx608_cur, rx608_curclass, "$!from", rx608_pos
  rxscan609_scan1113:
    nqp_rxmark rx608_bstack, rxscan609_loop1112, rx608_pos, 0
  rxscan609_done1114:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt610_01116
    nqp_push_label $P11, alt610_11120
    nqp_rxmark rx608_bstack, alt610_end1115, -1, 0
    rx608_cur."!alt"(rx608_pos, "alt_nfa__7_1360432460.806", $P11)
    goto rx608_fail1108
  alt610_01116:
    repr_bind_attr_int rx608_cur, rx608_curclass, "$!pos", rx608_pos
    $P11 = rx608_cur."ws"()
    repr_get_attr_int $I11, $P11, rx608_curclass, "$!pos"
    lt $I11, 0, rx608_fail1108
    repr_get_attr_int rx608_pos, $P11, rx608_curclass, "$!pos"
    lt rx608_pos, rx608_eos, rx608_fail1108
    repr_bind_attr_int rx608_cur, rx608_curclass, "$!pos", rx608_pos
    $P11 = rx608_cur."ws"()
    repr_get_attr_int $I11, $P11, rx608_curclass, "$!pos"
    lt $I11, 0, rx608_fail1108
    repr_get_attr_int rx608_pos, $P11, rx608_curclass, "$!pos"
    goto alt610_end1115
  alt610_11120:
    repr_bind_attr_int rx608_cur, rx608_curclass, "$!pos", rx608_pos
    $P11 = rx608_cur."ws"()
    repr_get_attr_int $I11, $P11, rx608_curclass, "$!pos"
    lt $I11, 0, rx608_fail1108
    repr_get_attr_int rx608_pos, $P11, rx608_curclass, "$!pos"
    nqp_rxmark rx608_bstack, rxquantr615_done1123, rx608_pos, 0
  rxquantr615_loop1122:
    repr_bind_attr_int rx608_cur, rx608_curclass, "$!pos", rx608_pos
    $P11 = rx608_cur."statement"()
    repr_get_attr_int $I11, $P11, rx608_curclass, "$!pos"
    lt $I11, 0, rx608_fail1108
    nqp_rxmark rx608_bstack, rxsubrule616_pass1124, -1, 0
  rxsubrule616_pass1124:
    rx608_cstack = rx608_cur."!cursor_capture"($P11, "statement")
    repr_get_attr_int rx608_pos, $P11, rx608_curclass, "$!pos"
    repr_bind_attr_int rx608_cur, rx608_curclass, "$!pos", rx608_pos
    $P11 = rx608_cur."eat_terminator"()
    repr_get_attr_int $I11, $P11, rx608_curclass, "$!pos"
    lt $I11, 0, rx608_fail1108
    repr_get_attr_int rx608_pos, $P11, rx608_curclass, "$!pos"
    repr_bind_attr_int rx608_cur, rx608_curclass, "$!pos", rx608_pos
    $P11 = rx608_cur."ws"()
    repr_get_attr_int $I11, $P11, rx608_curclass, "$!pos"
    lt $I11, 0, rx608_fail1108
    repr_get_attr_int rx608_pos, $P11, rx608_curclass, "$!pos"
    nqp_rxpeek $I19, rx608_bstack, rxquantr615_done1123
    inc $I19
    inc $I19
    set rx608_rep, rx608_bstack[$I19]
    nqp_rxcommit rx608_bstack, rxquantr615_done1123
    inc rx608_rep
    nqp_rxmark rx608_bstack, rxquantr615_done1123, rx608_pos, rx608_rep
    goto rxquantr615_loop1122
  rxquantr615_done1123:
    repr_bind_attr_int rx608_cur, rx608_curclass, "$!pos", rx608_pos
    $P11 = rx608_cur."ws"()
    repr_get_attr_int $I11, $P11, rx608_curclass, "$!pos"
    lt $I11, 0, rx608_fail1108
    repr_get_attr_int rx608_pos, $P11, rx608_curclass, "$!pos"
    goto alt610_end1115
  alt610_end1115:
    rx608_cur."!cursor_pass"(rx608_pos, "statementlist", 'backtrack'=>1)
    .return (rx608_cur)
  rx608_restart1107:
    repr_get_attr_obj rx608_cstack, rx608_cur, rx608_curclass, "$!cstack"
  rx608_fail1108:
    unless rx608_bstack, rx608_done1106
    pop $I19, rx608_bstack
    if_null rx608_cstack, rx608_cstack_done1111
    unless rx608_cstack, rx608_cstack_done1111
    dec $I19
    set $P11, rx608_cstack[$I19]
  rx608_cstack_done1111:
    pop rx608_rep, rx608_bstack
    pop rx608_pos, rx608_bstack
    pop $I19, rx608_bstack
    lt rx608_pos, -1, rx608_done1106
    lt rx608_pos, 0, rx608_fail1108
    eq $I19, 0, rx608_fail1108
    nqp_islist $I20, rx608_cstack
    unless $I20, rx608_jump1109
    elements $I18, rx608_bstack
    le $I18, 0, rx608_cut1110
    dec $I18
    set $I18, rx608_bstack[$I18]
  rx608_cut1110:
    assign rx608_cstack, $I18
  rx608_jump1109:
    jump $I19
  rx608_done1106:
    rx608_cur."!cursor_fail"()
    .return (rx608_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement" :subid("cuid_47_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 781
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_48_1360432459.413' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx620_tgt
    .local int rx620_pos
    .local int rx620_off
    .local int rx620_eos
    .local int rx620_rep
    .local pmc rx620_cur
    .local pmc rx620_curclass
    .local pmc rx620_bstack
    .local pmc rx620_cstack
    (rx620_cur, rx620_tgt, rx620_pos, rx620_curclass, rx620_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx620_cur
    length rx620_eos, rx620_tgt
    eq $I19, 1, rx620_restart1130
    gt rx620_pos, rx620_eos, rx620_fail1131
    repr_get_attr_int $I11, self, rx620_curclass, "$!from"
    ne $I11, -1, rxscan621_done1137
    goto rxscan621_scan1136
  rxscan621_loop1135:
    inc rx620_pos
    gt rx620_pos, rx620_eos, rx620_fail1131
    repr_bind_attr_int rx620_cur, rx620_curclass, "$!from", rx620_pos
  rxscan621_scan1136:
    nqp_rxmark rx620_bstack, rxscan621_loop1135, rx620_pos, 0
  rxscan621_done1137:
    .const 'Sub' $P5001 = 'cuid_48_1360432459.413' 
    capture_lex $P5001
    repr_bind_attr_int rx620_cur, rx620_curclass, "$!pos", rx620_pos
    $P11 = rx620_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx620_curclass, "$!pos"
    ge $I11, 0, rx620_fail1131
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt627_01156
    nqp_push_label $P11, alt627_11158
    nqp_rxmark rx620_bstack, alt627_end1155, -1, 0
    rx620_cur."!alt"(rx620_pos, "alt_nfa__9_1360432460.825", $P11)
    goto rx620_fail1131
  alt627_01156:
    repr_bind_attr_int rx620_cur, rx620_curclass, "$!pos", rx620_pos
    $P11 = rx620_cur."statement_control"()
    repr_get_attr_int $I11, $P11, rx620_curclass, "$!pos"
    lt $I11, 0, rx620_fail1131
    nqp_rxmark rx620_bstack, rxsubrule628_pass1157, -1, 0
  rxsubrule628_pass1157:
    rx620_cstack = rx620_cur."!cursor_capture"($P11, "statement_control")
    repr_get_attr_int rx620_pos, $P11, rx620_curclass, "$!pos"
    goto alt627_end1155
  alt627_11158:
    repr_bind_attr_int rx620_cur, rx620_curclass, "$!pos", rx620_pos
    $P11 = rx620_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx620_curclass, "$!pos"
    lt $I11, 0, rx620_fail1131
    nqp_rxmark rx620_bstack, rxsubrule629_pass1159, -1, 0
  rxsubrule629_pass1159:
    rx620_cstack = rx620_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx620_pos, $P11, rx620_curclass, "$!pos"
    repr_bind_attr_int rx620_cur, rx620_curclass, "$!pos", rx620_pos
    $P11 = rx620_cur."ws"()
    repr_get_attr_int $I11, $P11, rx620_curclass, "$!pos"
    lt $I11, 0, rx620_fail1131
    repr_get_attr_int rx620_pos, $P11, rx620_curclass, "$!pos"
    nqp_rxmark rx620_bstack, rxquantr631_done1162, rx620_pos, 0
  rxquantr631_loop1161:
  alt632_01164:
    nqp_rxmark rx620_bstack, alt632_11165, rx620_pos, 0
    repr_bind_attr_int rx620_cur, rx620_curclass, "$!pos", rx620_pos
    $P11 = rx620_cur."MARKED"("endstmt")
    repr_get_attr_int $I11, $P11, rx620_curclass, "$!pos"
    lt $I11, 0, rx620_fail1131
    goto alt632_end1163
  alt632_11165:
    nqp_rxmark rx620_bstack, alt632_21171, rx620_pos, 0
    repr_bind_attr_int rx620_cur, rx620_curclass, "$!pos", rx620_pos
    $P11 = rx620_cur."statement_mod_cond"()
    repr_get_attr_int $I11, $P11, rx620_curclass, "$!pos"
    lt $I11, 0, rx620_fail1131
    nqp_rxmark rx620_bstack, rxsubrule633_pass1166, -1, 0
  rxsubrule633_pass1166:
    rx620_cstack = rx620_cur."!cursor_capture"($P11, "statement_mod_cond")
    repr_get_attr_int rx620_pos, $P11, rx620_curclass, "$!pos"
    nqp_rxmark rx620_bstack, rxquantr634_done1168, rx620_pos, 0
  rxquantr634_loop1167:
    repr_bind_attr_int rx620_cur, rx620_curclass, "$!pos", rx620_pos
    $P11 = rx620_cur."statement_mod_loop"()
    repr_get_attr_int $I11, $P11, rx620_curclass, "$!pos"
    lt $I11, 0, rx620_fail1131
    goto rxsubrule635_pass1169
  rxsubrule635_back1170:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx620_curclass, "$!pos"
    lt $I11, 0, rx620_fail1131
  rxsubrule635_pass1169:
    rx620_cstack = rx620_cur."!cursor_capture"($P11, "statement_mod_loop")
    set_addr $I11, rxsubrule635_back1170
    push rx620_bstack, $I11
    push rx620_bstack, 0
    push rx620_bstack, rx620_pos
    elements $I11, rx620_cstack
    push rx620_bstack, $I11
    repr_get_attr_int rx620_pos, $P11, rx620_curclass, "$!pos"
    nqp_rxpeek $I19, rx620_bstack, rxquantr634_done1168
    inc $I19
    inc $I19
    set rx620_rep, rx620_bstack[$I19]
    nqp_rxcommit rx620_bstack, rxquantr634_done1168
    inc rx620_rep
  rxquantr634_done1168:
    goto alt632_end1163
  alt632_21171:
    repr_bind_attr_int rx620_cur, rx620_curclass, "$!pos", rx620_pos
    $P11 = rx620_cur."statement_mod_loop"()
    repr_get_attr_int $I11, $P11, rx620_curclass, "$!pos"
    lt $I11, 0, rx620_fail1131
    nqp_rxmark rx620_bstack, rxsubrule636_pass1172, -1, 0
  rxsubrule636_pass1172:
    rx620_cstack = rx620_cur."!cursor_capture"($P11, "statement_mod_loop")
    repr_get_attr_int rx620_pos, $P11, rx620_curclass, "$!pos"
  alt632_end1163:
    nqp_rxpeek $I19, rx620_bstack, rxquantr631_done1162
    inc $I19
    inc $I19
    set rx620_rep, rx620_bstack[$I19]
    nqp_rxcommit rx620_bstack, rxquantr631_done1162
    inc rx620_rep
  rxquantr631_done1162:
    goto alt627_end1155
  alt627_end1155:
    nqp_rxcommit rx620_bstack, alt627_end1155
    rx620_cur."!cursor_pass"(rx620_pos, "statement", 'backtrack'=>1)
    .return (rx620_cur)
  rx620_restart1130:
    repr_get_attr_obj rx620_cstack, rx620_cur, rx620_curclass, "$!cstack"
  rx620_fail1131:
    unless rx620_bstack, rx620_done1129
    pop $I19, rx620_bstack
    if_null rx620_cstack, rx620_cstack_done1134
    unless rx620_cstack, rx620_cstack_done1134
    dec $I19
    set $P11, rx620_cstack[$I19]
  rx620_cstack_done1134:
    pop rx620_rep, rx620_bstack
    pop rx620_pos, rx620_bstack
    pop $I19, rx620_bstack
    lt rx620_pos, -1, rx620_done1129
    lt rx620_pos, 0, rx620_fail1131
    eq $I19, 0, rx620_fail1131
    nqp_islist $I20, rx620_cstack
    unless $I20, rx620_jump1132
    elements $I18, rx620_bstack
    le $I18, 0, rx620_cut1133
    dec $I18
    set $I18, rx620_bstack[$I18]
  rx620_cut1133:
    assign rx620_cstack, $I18
  rx620_jump1132:
    jump $I19
  rx620_done1129:
    rx620_cur."!cursor_fail"()
    .return (rx620_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_48_1360432459.413") :anon :lex :outer("cuid_47_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local string rx622_tgt
    .local int rx622_pos
    .local int rx622_off
    .local int rx622_eos
    .local int rx622_rep
    .local pmc rx622_cur
    .local pmc rx622_curclass
    .local pmc rx622_bstack
    .local pmc rx622_cstack
    (rx622_cur, rx622_tgt, rx622_pos, rx622_curclass, rx622_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx622_cur
    length rx622_eos, rx622_tgt
    eq $I19, 1, rx622_restart1140
    gt rx622_pos, rx622_eos, rx622_fail1141
    repr_get_attr_int $I11, self, rx622_curclass, "$!from"
    ne $I11, -1, rxscan623_done1147
    goto rxscan623_scan1146
  rxscan623_loop1145:
    inc rx622_pos
    gt rx622_pos, rx622_eos, rx622_fail1141
    repr_bind_attr_int rx622_cur, rx622_curclass, "$!from", rx622_pos
  rxscan623_scan1146:
    nqp_rxmark rx622_bstack, rxscan623_loop1145, rx622_pos, 0
  rxscan623_done1147:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt624_01149
    nqp_push_label $P11, alt624_11153
    nqp_rxmark rx622_bstack, alt624_end1148, -1, 0
    rx622_cur."!alt"(rx622_pos, "alt_nfa__8_1360432460.812", $P11)
    goto rx622_fail1141
  alt624_01149:
  alt625_01151:
    nqp_rxmark rx622_bstack, alt625_11152, rx622_pos, 0
    add $I11, rx622_pos, 1
    gt $I11, rx622_eos, rx622_fail1141
    substr $S10, rx622_tgt, rx622_pos, 1
    ne $S10, ucs4:"]", rx622_fail1141
    add rx622_pos, 1
    goto alt625_end1150
  alt625_11152:
    ge rx622_pos, rx622_eos, rx622_fail1141
    substr $S11, rx622_tgt, rx622_pos, 1
    index $I11, ucs4:")}", $S11
    lt $I11, 0, rx622_fail1141
    inc rx622_pos
  alt625_end1150:
    goto alt624_end1148
  alt624_11153:
    lt rx622_pos, rx622_eos, rx622_fail1141
    goto alt624_end1148
  alt624_end1148:
    rx622_cur."!cursor_pass"(rx622_pos, 'backtrack'=>1)
    .return (rx622_cur)
  rx622_restart1140:
    repr_get_attr_obj rx622_cstack, rx622_cur, rx622_curclass, "$!cstack"
  rx622_fail1141:
    unless rx622_bstack, rx622_done1139
    pop $I19, rx622_bstack
    if_null rx622_cstack, rx622_cstack_done1144
    unless rx622_cstack, rx622_cstack_done1144
    dec $I19
    set $P11, rx622_cstack[$I19]
  rx622_cstack_done1144:
    pop rx622_rep, rx622_bstack
    pop rx622_pos, rx622_bstack
    pop $I19, rx622_bstack
    lt rx622_pos, -1, rx622_done1139
    lt rx622_pos, 0, rx622_fail1141
    eq $I19, 0, rx622_fail1141
    nqp_islist $I20, rx622_cstack
    unless $I20, rx622_jump1142
    elements $I18, rx622_bstack
    le $I18, 0, rx622_cut1143
    dec $I18
    set $I18, rx622_bstack[$I18]
  rx622_cut1143:
    assign rx622_cstack, $I18
  rx622_jump1142:
    jump $I19
  rx622_done1139:
    rx622_cur."!cursor_fail"()
    .return (rx622_cur) 
.end
.HLL "nqp"
.namespace []
.sub "eat_terminator" :subid("cuid_49_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 794
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx637_tgt
    .local int rx637_pos
    .local int rx637_off
    .local int rx637_eos
    .local int rx637_rep
    .local pmc rx637_cur
    .local pmc rx637_curclass
    .local pmc rx637_bstack
    .local pmc rx637_cstack
    (rx637_cur, rx637_tgt, rx637_pos, rx637_curclass, rx637_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx637_cur
    length rx637_eos, rx637_tgt
    eq $I19, 1, rx637_restart1175
    gt rx637_pos, rx637_eos, rx637_fail1176
    repr_get_attr_int $I11, self, rx637_curclass, "$!from"
    ne $I11, -1, rxscan638_done1182
    goto rxscan638_scan1181
  rxscan638_loop1180:
    inc rx637_pos
    gt rx637_pos, rx637_eos, rx637_fail1176
    repr_bind_attr_int rx637_cur, rx637_curclass, "$!from", rx637_pos
  rxscan638_scan1181:
    nqp_rxmark rx637_bstack, rxscan638_loop1180, rx637_pos, 0
  rxscan638_done1182:
  alt639_01184:
    nqp_rxmark rx637_bstack, alt639_11185, rx637_pos, 0
    add $I11, rx637_pos, 1
    gt $I11, rx637_eos, rx637_fail1176
    substr $S10, rx637_tgt, rx637_pos, 1
    ne $S10, ucs4:";", rx637_fail1176
    add rx637_pos, 1
    goto alt639_end1183
  alt639_11185:
    nqp_rxmark rx637_bstack, alt639_21186, rx637_pos, 0
    repr_bind_attr_int rx637_cur, rx637_curclass, "$!pos", rx637_pos
    $P11 = rx637_cur."MARKED"("endstmt")
    repr_get_attr_int $I11, $P11, rx637_curclass, "$!pos"
    lt $I11, 0, rx637_fail1176
    goto alt639_end1183
  alt639_21186:
    nqp_rxmark rx637_bstack, alt639_31187, rx637_pos, 0
    repr_bind_attr_int rx637_cur, rx637_curclass, "$!pos", rx637_pos
    $P11 = rx637_cur."terminator"()
    repr_get_attr_int $I11, $P11, rx637_curclass, "$!pos"
    lt $I11, 0, rx637_fail1176
    goto alt639_end1183
  alt639_31187:
    lt rx637_pos, rx637_eos, rx637_fail1176
  alt639_end1183:
    rx637_cur."!cursor_pass"(rx637_pos, "eat_terminator", 'backtrack'=>1)
    .return (rx637_cur)
  rx637_restart1175:
    repr_get_attr_obj rx637_cstack, rx637_cur, rx637_curclass, "$!cstack"
  rx637_fail1176:
    unless rx637_bstack, rx637_done1174
    pop $I19, rx637_bstack
    if_null rx637_cstack, rx637_cstack_done1179
    unless rx637_cstack, rx637_cstack_done1179
    dec $I19
    set $P11, rx637_cstack[$I19]
  rx637_cstack_done1179:
    pop rx637_rep, rx637_bstack
    pop rx637_pos, rx637_bstack
    pop $I19, rx637_bstack
    lt rx637_pos, -1, rx637_done1174
    lt rx637_pos, 0, rx637_fail1176
    eq $I19, 0, rx637_fail1176
    nqp_islist $I20, rx637_cstack
    unless $I20, rx637_jump1177
    elements $I18, rx637_bstack
    le $I18, 0, rx637_cut1178
    dec $I18
    set $I18, rx637_bstack[$I18]
  rx637_cut1178:
    assign rx637_cstack, $I18
  rx637_jump1177:
    jump $I19
  rx637_done1174:
    rx637_cur."!cursor_fail"()
    .return (rx637_cur) 
.end
.HLL "nqp"
.namespace []
.sub "xblock" :subid("cuid_50_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 801
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx641_tgt
    .local int rx641_pos
    .local int rx641_off
    .local int rx641_eos
    .local int rx641_rep
    .local pmc rx641_cur
    .local pmc rx641_curclass
    .local pmc rx641_bstack
    .local pmc rx641_cstack
    (rx641_cur, rx641_tgt, rx641_pos, rx641_curclass, rx641_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx641_cur
    length rx641_eos, rx641_tgt
    eq $I19, 1, rx641_restart1191
    gt rx641_pos, rx641_eos, rx641_fail1192
    repr_get_attr_int $I11, self, rx641_curclass, "$!from"
    ne $I11, -1, rxscan642_done1198
    goto rxscan642_scan1197
  rxscan642_loop1196:
    inc rx641_pos
    gt rx641_pos, rx641_eos, rx641_fail1192
    repr_bind_attr_int rx641_cur, rx641_curclass, "$!from", rx641_pos
  rxscan642_scan1197:
    nqp_rxmark rx641_bstack, rxscan642_loop1196, rx641_pos, 0
  rxscan642_done1198:
    repr_bind_attr_int rx641_cur, rx641_curclass, "$!pos", rx641_pos
    $P11 = rx641_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx641_curclass, "$!pos"
    lt $I11, 0, rx641_fail1192
    nqp_rxmark rx641_bstack, rxsubrule643_pass1199, -1, 0
  rxsubrule643_pass1199:
    rx641_cstack = rx641_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx641_pos, $P11, rx641_curclass, "$!pos"
    repr_bind_attr_int rx641_cur, rx641_curclass, "$!pos", rx641_pos
    $P11 = rx641_cur."ws"()
    repr_get_attr_int $I11, $P11, rx641_curclass, "$!pos"
    lt $I11, 0, rx641_fail1192
    repr_get_attr_int rx641_pos, $P11, rx641_curclass, "$!pos"
    repr_bind_attr_int rx641_cur, rx641_curclass, "$!pos", rx641_pos
    $P11 = rx641_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx641_curclass, "$!pos"
    lt $I11, 0, rx641_fail1192
    nqp_rxmark rx641_bstack, rxsubrule645_pass1201, -1, 0
  rxsubrule645_pass1201:
    rx641_cstack = rx641_cur."!cursor_capture"($P11, "pblock")
    repr_get_attr_int rx641_pos, $P11, rx641_curclass, "$!pos"
    rx641_cur."!cursor_pass"(rx641_pos, "xblock", 'backtrack'=>1)
    .return (rx641_cur)
  rx641_restart1191:
    repr_get_attr_obj rx641_cstack, rx641_cur, rx641_curclass, "$!cstack"
  rx641_fail1192:
    unless rx641_bstack, rx641_done1190
    pop $I19, rx641_bstack
    if_null rx641_cstack, rx641_cstack_done1195
    unless rx641_cstack, rx641_cstack_done1195
    dec $I19
    set $P11, rx641_cstack[$I19]
  rx641_cstack_done1195:
    pop rx641_rep, rx641_bstack
    pop rx641_pos, rx641_bstack
    pop $I19, rx641_bstack
    lt rx641_pos, -1, rx641_done1190
    lt rx641_pos, 0, rx641_fail1192
    eq $I19, 0, rx641_fail1192
    nqp_islist $I20, rx641_cstack
    unless $I20, rx641_jump1193
    elements $I18, rx641_bstack
    le $I18, 0, rx641_cut1194
    dec $I18
    set $I18, rx641_bstack[$I18]
  rx641_cut1194:
    assign rx641_cstack, $I18
  rx641_jump1193:
    jump $I19
  rx641_done1190:
    rx641_cur."!cursor_fail"()
    .return (rx641_cur) 
.end
.HLL "nqp"
.namespace []
.sub "pblock" :subid("cuid_51_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 805
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx646_tgt
    .local int rx646_pos
    .local int rx646_off
    .local int rx646_eos
    .local int rx646_rep
    .local pmc rx646_cur
    .local pmc rx646_curclass
    .local pmc rx646_bstack
    .local pmc rx646_cstack
    (rx646_cur, rx646_tgt, rx646_pos, rx646_curclass, rx646_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx646_cur
    length rx646_eos, rx646_tgt
    eq $I19, 1, rx646_restart1204
    gt rx646_pos, rx646_eos, rx646_fail1205
    repr_get_attr_int $I11, self, rx646_curclass, "$!from"
    ne $I11, -1, rxscan647_done1211
    goto rxscan647_scan1210
  rxscan647_loop1209:
    inc rx646_pos
    gt rx646_pos, rx646_eos, rx646_fail1205
    repr_bind_attr_int rx646_cur, rx646_curclass, "$!from", rx646_pos
  rxscan647_scan1210:
    nqp_rxmark rx646_bstack, rxscan647_loop1209, rx646_pos, 0
  rxscan647_done1211:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt648_01213
    nqp_push_label $P11, alt648_11219
    nqp_push_label $P11, alt648_21222
    nqp_rxmark rx646_bstack, alt648_end1212, -1, 0
    rx646_cur."!alt"(rx646_pos, "alt_nfa__10_1360432460.851", $P11)
    goto rx646_fail1205
  alt648_01213:
    repr_bind_attr_int rx646_cur, rx646_curclass, "$!pos", rx646_pos
    $P11 = rx646_cur."lambda"()
    repr_get_attr_int $I11, $P11, rx646_curclass, "$!pos"
    lt $I11, 0, rx646_fail1205
    repr_get_attr_int rx646_pos, $P11, rx646_curclass, "$!pos"
    repr_bind_attr_int rx646_cur, rx646_curclass, "$!pos", rx646_pos
    $P11 = rx646_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx646_curclass, "$!pos"
    lt $I11, 0, rx646_fail1205
    repr_get_attr_int rx646_pos, $P11, rx646_curclass, "$!pos"
    repr_bind_attr_int rx646_cur, rx646_curclass, "$!pos", rx646_pos
    $P11 = rx646_cur."signature"()
    repr_get_attr_int $I11, $P11, rx646_curclass, "$!pos"
    lt $I11, 0, rx646_fail1205
    nqp_rxmark rx646_bstack, rxsubrule651_pass1216, -1, 0
  rxsubrule651_pass1216:
    rx646_cstack = rx646_cur."!cursor_capture"($P11, "signature")
    repr_get_attr_int rx646_pos, $P11, rx646_curclass, "$!pos"
    repr_bind_attr_int rx646_cur, rx646_curclass, "$!pos", rx646_pos
    $P11 = rx646_cur."ws"()
    repr_get_attr_int $I11, $P11, rx646_curclass, "$!pos"
    lt $I11, 0, rx646_fail1205
    repr_get_attr_int rx646_pos, $P11, rx646_curclass, "$!pos"
    repr_bind_attr_int rx646_cur, rx646_curclass, "$!pos", rx646_pos
    $P11 = rx646_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx646_curclass, "$!pos"
    lt $I11, 0, rx646_fail1205
    nqp_rxmark rx646_bstack, rxsubrule653_pass1218, -1, 0
  rxsubrule653_pass1218:
    rx646_cstack = rx646_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx646_pos, $P11, rx646_curclass, "$!pos"
    goto alt648_end1212
  alt648_11219:
    ge rx646_pos, rx646_eos, rx646_fail1205
    substr $S11, rx646_tgt, rx646_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx646_fail1205
    repr_bind_attr_int rx646_cur, rx646_curclass, "$!pos", rx646_pos
    $P11 = rx646_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx646_curclass, "$!pos"
    lt $I11, 0, rx646_fail1205
    repr_get_attr_int rx646_pos, $P11, rx646_curclass, "$!pos"
    repr_bind_attr_int rx646_cur, rx646_curclass, "$!pos", rx646_pos
    $P11 = rx646_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx646_curclass, "$!pos"
    lt $I11, 0, rx646_fail1205
    nqp_rxmark rx646_bstack, rxsubrule655_pass1221, -1, 0
  rxsubrule655_pass1221:
    rx646_cstack = rx646_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx646_pos, $P11, rx646_curclass, "$!pos"
    goto alt648_end1212
  alt648_21222:
    repr_bind_attr_int rx646_cur, rx646_curclass, "$!pos", rx646_pos
    $P11 = rx646_cur."panic"("Missing block")
    repr_get_attr_int $I11, $P11, rx646_curclass, "$!pos"
    lt $I11, 0, rx646_fail1205
    repr_get_attr_int rx646_pos, $P11, rx646_curclass, "$!pos"
    goto alt648_end1212
  alt648_end1212:
    rx646_cur."!cursor_pass"(rx646_pos, "pblock", 'backtrack'=>1)
    .return (rx646_cur)
  rx646_restart1204:
    repr_get_attr_obj rx646_cstack, rx646_cur, rx646_curclass, "$!cstack"
  rx646_fail1205:
    unless rx646_bstack, rx646_done1203
    pop $I19, rx646_bstack
    if_null rx646_cstack, rx646_cstack_done1208
    unless rx646_cstack, rx646_cstack_done1208
    dec $I19
    set $P11, rx646_cstack[$I19]
  rx646_cstack_done1208:
    pop rx646_rep, rx646_bstack
    pop rx646_pos, rx646_bstack
    pop $I19, rx646_bstack
    lt rx646_pos, -1, rx646_done1203
    lt rx646_pos, 0, rx646_fail1205
    eq $I19, 0, rx646_fail1205
    nqp_islist $I20, rx646_cstack
    unless $I20, rx646_jump1206
    elements $I18, rx646_bstack
    le $I18, 0, rx646_cut1207
    dec $I18
    set $I18, rx646_bstack[$I18]
  rx646_cut1207:
    assign rx646_cstack, $I18
  rx646_jump1206:
    jump $I19
  rx646_done1203:
    rx646_cur."!cursor_fail"()
    .return (rx646_cur) 
.end
.HLL "nqp"
.namespace []
.sub "lambda" :subid("cuid_52_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 816
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx657_tgt
    .local int rx657_pos
    .local int rx657_off
    .local int rx657_eos
    .local int rx657_rep
    .local pmc rx657_cur
    .local pmc rx657_curclass
    .local pmc rx657_bstack
    .local pmc rx657_cstack
    (rx657_cur, rx657_tgt, rx657_pos, rx657_curclass, rx657_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx657_cur
    length rx657_eos, rx657_tgt
    eq $I19, 1, rx657_restart1226
    gt rx657_pos, rx657_eos, rx657_fail1227
    repr_get_attr_int $I11, self, rx657_curclass, "$!from"
    ne $I11, -1, rxscan658_done1233
    goto rxscan658_scan1232
  rxscan658_loop1231:
    inc rx657_pos
    gt rx657_pos, rx657_eos, rx657_fail1227
    repr_bind_attr_int rx657_cur, rx657_curclass, "$!from", rx657_pos
  rxscan658_scan1232:
    nqp_rxmark rx657_bstack, rxscan658_loop1231, rx657_pos, 0
  rxscan658_done1233:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt659_01235
    nqp_push_label $P11, alt659_11236
    nqp_rxmark rx657_bstack, alt659_end1234, -1, 0
    rx657_cur."!alt"(rx657_pos, "alt_nfa__11_1360432460.856", $P11)
    goto rx657_fail1227
  alt659_01235:
    add $I11, rx657_pos, 2
    gt $I11, rx657_eos, rx657_fail1227
    substr $S10, rx657_tgt, rx657_pos, 2
    ne $S10, ucs4:"->", rx657_fail1227
    add rx657_pos, 2
    goto alt659_end1234
  alt659_11236:
    add $I11, rx657_pos, 3
    gt $I11, rx657_eos, rx657_fail1227
    substr $S10, rx657_tgt, rx657_pos, 3
    ne $S10, ucs4:"<->", rx657_fail1227
    add rx657_pos, 3
    goto alt659_end1234
  alt659_end1234:
    rx657_cur."!cursor_pass"(rx657_pos, "lambda", 'backtrack'=>1)
    .return (rx657_cur)
  rx657_restart1226:
    repr_get_attr_obj rx657_cstack, rx657_cur, rx657_curclass, "$!cstack"
  rx657_fail1227:
    unless rx657_bstack, rx657_done1225
    pop $I19, rx657_bstack
    if_null rx657_cstack, rx657_cstack_done1230
    unless rx657_cstack, rx657_cstack_done1230
    dec $I19
    set $P11, rx657_cstack[$I19]
  rx657_cstack_done1230:
    pop rx657_rep, rx657_bstack
    pop rx657_pos, rx657_bstack
    pop $I19, rx657_bstack
    lt rx657_pos, -1, rx657_done1225
    lt rx657_pos, 0, rx657_fail1227
    eq $I19, 0, rx657_fail1227
    nqp_islist $I20, rx657_cstack
    unless $I20, rx657_jump1228
    elements $I18, rx657_bstack
    le $I18, 0, rx657_cut1229
    dec $I18
    set $I18, rx657_bstack[$I18]
  rx657_cut1229:
    assign rx657_cstack, $I18
  rx657_jump1228:
    jump $I19
  rx657_done1225:
    rx657_cur."!cursor_fail"()
    .return (rx657_cur) 
.end
.HLL "nqp"
.namespace []
.sub "block" :subid("cuid_53_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 818
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx660_tgt
    .local int rx660_pos
    .local int rx660_off
    .local int rx660_eos
    .local int rx660_rep
    .local pmc rx660_cur
    .local pmc rx660_curclass
    .local pmc rx660_bstack
    .local pmc rx660_cstack
    (rx660_cur, rx660_tgt, rx660_pos, rx660_curclass, rx660_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx660_cur
    length rx660_eos, rx660_tgt
    eq $I19, 1, rx660_restart1239
    gt rx660_pos, rx660_eos, rx660_fail1240
    repr_get_attr_int $I11, self, rx660_curclass, "$!from"
    ne $I11, -1, rxscan661_done1246
    goto rxscan661_scan1245
  rxscan661_loop1244:
    inc rx660_pos
    gt rx660_pos, rx660_eos, rx660_fail1240
    repr_bind_attr_int rx660_cur, rx660_curclass, "$!from", rx660_pos
  rxscan661_scan1245:
    nqp_rxmark rx660_bstack, rxscan661_loop1244, rx660_pos, 0
  rxscan661_done1246:
  alt662_01248:
    nqp_rxmark rx660_bstack, alt662_11249, rx660_pos, 0
    ge rx660_pos, rx660_eos, rx660_fail1240
    substr $S11, rx660_tgt, rx660_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx660_fail1240
    goto alt662_end1247
  alt662_11249:
    repr_bind_attr_int rx660_cur, rx660_curclass, "$!pos", rx660_pos
    $P11 = rx660_cur."panic"("Missing block")
    repr_get_attr_int $I11, $P11, rx660_curclass, "$!pos"
    lt $I11, 0, rx660_fail1240
    repr_get_attr_int rx660_pos, $P11, rx660_curclass, "$!pos"
  alt662_end1247:
    repr_bind_attr_int rx660_cur, rx660_curclass, "$!pos", rx660_pos
    $P11 = rx660_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx660_curclass, "$!pos"
    lt $I11, 0, rx660_fail1240
    repr_get_attr_int rx660_pos, $P11, rx660_curclass, "$!pos"
    repr_bind_attr_int rx660_cur, rx660_curclass, "$!pos", rx660_pos
    $P11 = rx660_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx660_curclass, "$!pos"
    lt $I11, 0, rx660_fail1240
    nqp_rxmark rx660_bstack, rxsubrule665_pass1252, -1, 0
  rxsubrule665_pass1252:
    rx660_cstack = rx660_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx660_pos, $P11, rx660_curclass, "$!pos"
    rx660_cur."!cursor_pass"(rx660_pos, "block", 'backtrack'=>1)
    .return (rx660_cur)
  rx660_restart1239:
    repr_get_attr_obj rx660_cstack, rx660_cur, rx660_curclass, "$!cstack"
  rx660_fail1240:
    unless rx660_bstack, rx660_done1238
    pop $I19, rx660_bstack
    if_null rx660_cstack, rx660_cstack_done1243
    unless rx660_cstack, rx660_cstack_done1243
    dec $I19
    set $P11, rx660_cstack[$I19]
  rx660_cstack_done1243:
    pop rx660_rep, rx660_bstack
    pop rx660_pos, rx660_bstack
    pop $I19, rx660_bstack
    lt rx660_pos, -1, rx660_done1238
    lt rx660_pos, 0, rx660_fail1240
    eq $I19, 0, rx660_fail1240
    nqp_islist $I20, rx660_cstack
    unless $I20, rx660_jump1241
    elements $I18, rx660_bstack
    le $I18, 0, rx660_cut1242
    dec $I18
    set $I18, rx660_bstack[$I18]
  rx660_cut1242:
    assign rx660_cstack, $I18
  rx660_jump1241:
    jump $I19
  rx660_done1238:
    rx660_cur."!cursor_fail"()
    .return (rx660_cur) 
.end
.HLL "nqp"
.namespace []
.sub "blockoid" :subid("cuid_54_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 824
    .param pmc _lex_param_0 
    .lex "%*HANDLERS", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_203 
    new $P5001, 'Hash'
    set $P101, $P5001
    set self, _lex_param_0
    .local string rx666_tgt
    .local int rx666_pos
    .local int rx666_off
    .local int rx666_eos
    .local int rx666_rep
    .local pmc rx666_cur
    .local pmc rx666_curclass
    .local pmc rx666_bstack
    .local pmc rx666_cstack
    (rx666_cur, rx666_tgt, rx666_pos, rx666_curclass, rx666_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx666_cur
    length rx666_eos, rx666_tgt
    eq $I19, 1, rx666_restart1255
    gt rx666_pos, rx666_eos, rx666_fail1256
    repr_get_attr_int $I11, self, rx666_curclass, "$!from"
    ne $I11, -1, rxscan667_done1262
    goto rxscan667_scan1261
  rxscan667_loop1260:
    inc rx666_pos
    gt rx666_pos, rx666_eos, rx666_fail1256
    repr_bind_attr_int rx666_cur, rx666_curclass, "$!from", rx666_pos
  rxscan667_scan1261:
    nqp_rxmark rx666_bstack, rxscan667_loop1260, rx666_pos, 0
  rxscan667_done1262:
    repr_bind_attr_int rx666_cur, rx666_curclass, "$!pos", rx666_pos
    store_lex unicode:"$\x{a2}", rx666_cur
    unless_null $P101, fallback1263
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5002, $P5003
    set fb_tmp_203, $P5002
    repr_defined $I5001, fb_tmp_203
    unless $I5001 goto if668_else1264 
    set $P5004, fb_tmp_203["%HANDLERS"]
    set $P5006, $P5004
    goto if668_end1265
  if668_else1264:
    null $P5005
    set $P5006, $P5005
  if668_end1265:
    unless_null $P5006, vivi_6691266
    nqp_get_sc_object $P5008, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5007, $P5008
    new $P5009, 'Hash'
    set $P5007["%HANDLERS"], $P5009
    set $P5006, $P5009
  vivi_6691266:
    unless_null $P5006, vivi_6701267
    die "Contextual %*HANDLERS not found"
    box $P5010, "Contextual %*HANDLERS not found"
    set $P5006, $P5010
  vivi_6701267:
    set $P101, $P5006
  fallback1263:
    repr_bind_attr_int rx666_cur, rx666_curclass, "$!pos", rx666_pos
    $P11 = rx666_cur."finishpad"()
    repr_get_attr_int $I11, $P11, rx666_curclass, "$!pos"
    lt $I11, 0, rx666_fail1256
    repr_get_attr_int rx666_pos, $P11, rx666_curclass, "$!pos"
  alt672_01270:
    nqp_rxmark rx666_bstack, alt672_11272, rx666_pos, 0
    add $I11, rx666_pos, 14
    gt $I11, rx666_eos, rx666_fail1256
    substr $S10, rx666_tgt, rx666_pos, 14
    ne $S10, ucs4:"{YOU_ARE_HERE}", rx666_fail1256
    add rx666_pos, 14
    repr_bind_attr_int rx666_cur, rx666_curclass, "$!pos", rx666_pos
    $P11 = rx666_cur."you_are_here"()
    repr_get_attr_int $I11, $P11, rx666_curclass, "$!pos"
    lt $I11, 0, rx666_fail1256
    nqp_rxmark rx666_bstack, rxsubrule673_pass1271, -1, 0
  rxsubrule673_pass1271:
    rx666_cstack = rx666_cur."!cursor_capture"($P11, "you_are_here")
    repr_get_attr_int rx666_pos, $P11, rx666_curclass, "$!pos"
    goto alt672_end1269
  alt672_11272:
    add $I11, rx666_pos, 1
    gt $I11, rx666_eos, rx666_fail1256
    substr $S10, rx666_tgt, rx666_pos, 1
    ne $S10, ucs4:"{", rx666_fail1256
    add rx666_pos, 1
    repr_bind_attr_int rx666_cur, rx666_curclass, "$!pos", rx666_pos
    $P11 = rx666_cur."statementlist"()
    repr_get_attr_int $I11, $P11, rx666_curclass, "$!pos"
    lt $I11, 0, rx666_fail1256
    nqp_rxmark rx666_bstack, rxsubrule674_pass1273, -1, 0
  rxsubrule674_pass1273:
    rx666_cstack = rx666_cur."!cursor_capture"($P11, "statementlist")
    repr_get_attr_int rx666_pos, $P11, rx666_curclass, "$!pos"
  alt675_01275:
    nqp_rxmark rx666_bstack, alt675_11276, rx666_pos, 0
    add $I11, rx666_pos, 1
    gt $I11, rx666_eos, rx666_fail1256
    substr $S10, rx666_tgt, rx666_pos, 1
    ne $S10, ucs4:"}", rx666_fail1256
    add rx666_pos, 1
    goto alt675_end1274
  alt675_11276:
    repr_bind_attr_int rx666_cur, rx666_curclass, "$!pos", rx666_pos
    $P11 = rx666_cur."FAILGOAL"("'}'")
    repr_get_attr_int $I11, $P11, rx666_curclass, "$!pos"
    lt $I11, 0, rx666_fail1256
    goto rxsubrule676_pass1277
  rxsubrule676_back1278:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx666_curclass, "$!pos"
    lt $I11, 0, rx666_fail1256
  rxsubrule676_pass1277:
    rx666_cstack = rx666_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule676_back1278
    push rx666_bstack, $I11
    push rx666_bstack, 0
    push rx666_bstack, rx666_pos
    elements $I11, rx666_cstack
    push rx666_bstack, $I11
    repr_get_attr_int rx666_pos, $P11, rx666_curclass, "$!pos"
  alt675_end1274:
  alt672_end1269:
    repr_bind_attr_int rx666_cur, rx666_curclass, "$!pos", rx666_pos
    $P11 = rx666_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx666_curclass, "$!pos"
    lt $I11, 0, rx666_fail1256
    rx666_cur."!cursor_pass"(rx666_pos, "blockoid", 'backtrack'=>1)
    .return (rx666_cur)
  rx666_restart1255:
    repr_get_attr_obj rx666_cstack, rx666_cur, rx666_curclass, "$!cstack"
  rx666_fail1256:
    unless rx666_bstack, rx666_done1254
    pop $I19, rx666_bstack
    if_null rx666_cstack, rx666_cstack_done1259
    unless rx666_cstack, rx666_cstack_done1259
    dec $I19
    set $P11, rx666_cstack[$I19]
  rx666_cstack_done1259:
    pop rx666_rep, rx666_bstack
    pop rx666_pos, rx666_bstack
    pop $I19, rx666_bstack
    lt rx666_pos, -1, rx666_done1254
    lt rx666_pos, 0, rx666_fail1256
    eq $I19, 0, rx666_fail1256
    nqp_islist $I20, rx666_cstack
    unless $I20, rx666_jump1257
    elements $I18, rx666_bstack
    le $I18, 0, rx666_cut1258
    dec $I18
    set $I18, rx666_bstack[$I18]
  rx666_cut1258:
    assign rx666_cstack, $I18
  rx666_jump1257:
    jump $I19
  rx666_done1254:
    rx666_cur."!cursor_fail"()
    .return (rx666_cur) 
.end
.HLL "nqp"
.namespace []
.sub "newpad" :subid("cuid_55_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 834
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx677_tgt
    .local int rx677_pos
    .local int rx677_off
    .local int rx677_eos
    .local int rx677_rep
    .local pmc rx677_cur
    .local pmc rx677_curclass
    .local pmc rx677_bstack
    .local pmc rx677_cstack
    (rx677_cur, rx677_tgt, rx677_pos, rx677_curclass, rx677_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx677_cur
    length rx677_eos, rx677_tgt
    eq $I19, 1, rx677_restart1281
    gt rx677_pos, rx677_eos, rx677_fail1282
    repr_get_attr_int $I11, self, rx677_curclass, "$!from"
    ne $I11, -1, rxscan678_done1288
    goto rxscan678_scan1287
  rxscan678_loop1286:
    inc rx677_pos
    gt rx677_pos, rx677_eos, rx677_fail1282
    repr_bind_attr_int rx677_cur, rx677_curclass, "$!from", rx677_pos
  rxscan678_scan1287:
    nqp_rxmark rx677_bstack, rxscan678_loop1286, rx677_pos, 0
  rxscan678_done1288:
    rx677_cur."!cursor_pass"(rx677_pos, "newpad", 'backtrack'=>1)
    .return (rx677_cur)
  rx677_restart1281:
    repr_get_attr_obj rx677_cstack, rx677_cur, rx677_curclass, "$!cstack"
  rx677_fail1282:
    unless rx677_bstack, rx677_done1280
    pop $I19, rx677_bstack
    if_null rx677_cstack, rx677_cstack_done1285
    unless rx677_cstack, rx677_cstack_done1285
    dec $I19
    set $P11, rx677_cstack[$I19]
  rx677_cstack_done1285:
    pop rx677_rep, rx677_bstack
    pop rx677_pos, rx677_bstack
    pop $I19, rx677_bstack
    lt rx677_pos, -1, rx677_done1280
    lt rx677_pos, 0, rx677_fail1282
    eq $I19, 0, rx677_fail1282
    nqp_islist $I20, rx677_cstack
    unless $I20, rx677_jump1283
    elements $I18, rx677_bstack
    le $I18, 0, rx677_cut1284
    dec $I18
    set $I18, rx677_bstack[$I18]
  rx677_cut1284:
    assign rx677_cstack, $I18
  rx677_jump1283:
    jump $I19
  rx677_done1280:
    rx677_cur."!cursor_fail"()
    .return (rx677_cur) 
.end
.HLL "nqp"
.namespace []
.sub "outerctx" :subid("cuid_56_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 835
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx680_tgt
    .local int rx680_pos
    .local int rx680_off
    .local int rx680_eos
    .local int rx680_rep
    .local pmc rx680_cur
    .local pmc rx680_curclass
    .local pmc rx680_bstack
    .local pmc rx680_cstack
    (rx680_cur, rx680_tgt, rx680_pos, rx680_curclass, rx680_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx680_cur
    length rx680_eos, rx680_tgt
    eq $I19, 1, rx680_restart1292
    gt rx680_pos, rx680_eos, rx680_fail1293
    repr_get_attr_int $I11, self, rx680_curclass, "$!from"
    ne $I11, -1, rxscan681_done1299
    goto rxscan681_scan1298
  rxscan681_loop1297:
    inc rx680_pos
    gt rx680_pos, rx680_eos, rx680_fail1293
    repr_bind_attr_int rx680_cur, rx680_curclass, "$!from", rx680_pos
  rxscan681_scan1298:
    nqp_rxmark rx680_bstack, rxscan681_loop1297, rx680_pos, 0
  rxscan681_done1299:
    rx680_cur."!cursor_pass"(rx680_pos, "outerctx", 'backtrack'=>1)
    .return (rx680_cur)
  rx680_restart1292:
    repr_get_attr_obj rx680_cstack, rx680_cur, rx680_curclass, "$!cstack"
  rx680_fail1293:
    unless rx680_bstack, rx680_done1291
    pop $I19, rx680_bstack
    if_null rx680_cstack, rx680_cstack_done1296
    unless rx680_cstack, rx680_cstack_done1296
    dec $I19
    set $P11, rx680_cstack[$I19]
  rx680_cstack_done1296:
    pop rx680_rep, rx680_bstack
    pop rx680_pos, rx680_bstack
    pop $I19, rx680_bstack
    lt rx680_pos, -1, rx680_done1291
    lt rx680_pos, 0, rx680_fail1293
    eq $I19, 0, rx680_fail1293
    nqp_islist $I20, rx680_cstack
    unless $I20, rx680_jump1294
    elements $I18, rx680_bstack
    le $I18, 0, rx680_cut1295
    dec $I18
    set $I18, rx680_bstack[$I18]
  rx680_cut1295:
    assign rx680_cstack, $I18
  rx680_jump1294:
    jump $I19
  rx680_done1291:
    rx680_cur."!cursor_fail"()
    .return (rx680_cur) 
.end
.HLL "nqp"
.namespace []
.sub "finishpad" :subid("cuid_57_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 836
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx683_tgt
    .local int rx683_pos
    .local int rx683_off
    .local int rx683_eos
    .local int rx683_rep
    .local pmc rx683_cur
    .local pmc rx683_curclass
    .local pmc rx683_bstack
    .local pmc rx683_cstack
    (rx683_cur, rx683_tgt, rx683_pos, rx683_curclass, rx683_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx683_cur
    length rx683_eos, rx683_tgt
    eq $I19, 1, rx683_restart1303
    gt rx683_pos, rx683_eos, rx683_fail1304
    repr_get_attr_int $I11, self, rx683_curclass, "$!from"
    ne $I11, -1, rxscan684_done1310
    goto rxscan684_scan1309
  rxscan684_loop1308:
    inc rx683_pos
    gt rx683_pos, rx683_eos, rx683_fail1304
    repr_bind_attr_int rx683_cur, rx683_curclass, "$!from", rx683_pos
  rxscan684_scan1309:
    nqp_rxmark rx683_bstack, rxscan684_loop1308, rx683_pos, 0
  rxscan684_done1310:
    rx683_cur."!cursor_pass"(rx683_pos, "finishpad", 'backtrack'=>1)
    .return (rx683_cur)
  rx683_restart1303:
    repr_get_attr_obj rx683_cstack, rx683_cur, rx683_curclass, "$!cstack"
  rx683_fail1304:
    unless rx683_bstack, rx683_done1302
    pop $I19, rx683_bstack
    if_null rx683_cstack, rx683_cstack_done1307
    unless rx683_cstack, rx683_cstack_done1307
    dec $I19
    set $P11, rx683_cstack[$I19]
  rx683_cstack_done1307:
    pop rx683_rep, rx683_bstack
    pop rx683_pos, rx683_bstack
    pop $I19, rx683_bstack
    lt rx683_pos, -1, rx683_done1302
    lt rx683_pos, 0, rx683_fail1304
    eq $I19, 0, rx683_fail1304
    nqp_islist $I20, rx683_cstack
    unless $I20, rx683_jump1305
    elements $I18, rx683_bstack
    le $I18, 0, rx683_cut1306
    dec $I18
    set $I18, rx683_bstack[$I18]
  rx683_cut1306:
    assign rx683_cstack, $I18
  rx683_jump1305:
    jump $I19
  rx683_done1302:
    rx683_cur."!cursor_fail"()
    .return (rx683_cur) 
.end
.HLL "nqp"
.namespace []
.sub "you_are_here" :subid("cuid_58_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 837
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx686_tgt
    .local int rx686_pos
    .local int rx686_off
    .local int rx686_eos
    .local int rx686_rep
    .local pmc rx686_cur
    .local pmc rx686_curclass
    .local pmc rx686_bstack
    .local pmc rx686_cstack
    (rx686_cur, rx686_tgt, rx686_pos, rx686_curclass, rx686_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx686_cur
    length rx686_eos, rx686_tgt
    eq $I19, 1, rx686_restart1314
    gt rx686_pos, rx686_eos, rx686_fail1315
    repr_get_attr_int $I11, self, rx686_curclass, "$!from"
    ne $I11, -1, rxscan687_done1321
    goto rxscan687_scan1320
  rxscan687_loop1319:
    inc rx686_pos
    gt rx686_pos, rx686_eos, rx686_fail1315
    repr_bind_attr_int rx686_cur, rx686_curclass, "$!from", rx686_pos
  rxscan687_scan1320:
    nqp_rxmark rx686_bstack, rxscan687_loop1319, rx686_pos, 0
  rxscan687_done1321:
    rx686_cur."!cursor_pass"(rx686_pos, "you_are_here", 'backtrack'=>1)
    .return (rx686_cur)
  rx686_restart1314:
    repr_get_attr_obj rx686_cstack, rx686_cur, rx686_curclass, "$!cstack"
  rx686_fail1315:
    unless rx686_bstack, rx686_done1313
    pop $I19, rx686_bstack
    if_null rx686_cstack, rx686_cstack_done1318
    unless rx686_cstack, rx686_cstack_done1318
    dec $I19
    set $P11, rx686_cstack[$I19]
  rx686_cstack_done1318:
    pop rx686_rep, rx686_bstack
    pop rx686_pos, rx686_bstack
    pop $I19, rx686_bstack
    lt rx686_pos, -1, rx686_done1313
    lt rx686_pos, 0, rx686_fail1315
    eq $I19, 0, rx686_fail1315
    nqp_islist $I20, rx686_cstack
    unless $I20, rx686_jump1316
    elements $I18, rx686_bstack
    le $I18, 0, rx686_cut1317
    dec $I18
    set $I18, rx686_bstack[$I18]
  rx686_cut1317:
    assign rx686_cstack, $I18
  rx686_jump1316:
    jump $I19
  rx686_done1313:
    rx686_cur."!cursor_fail"()
    .return (rx686_cur) 
.end
.HLL "nqp"
.namespace []
.sub "terminator" :subid("cuid_59_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 839
    .param pmc self 
    $P5001 = self."!protoregex"("terminator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "terminator:sym<;>" :subid("cuid_60_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 841
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx689_tgt
    .local int rx689_pos
    .local int rx689_off
    .local int rx689_eos
    .local int rx689_rep
    .local pmc rx689_cur
    .local pmc rx689_curclass
    .local pmc rx689_bstack
    .local pmc rx689_cstack
    (rx689_cur, rx689_tgt, rx689_pos, rx689_curclass, rx689_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx689_cur
    length rx689_eos, rx689_tgt
    eq $I19, 1, rx689_restart1325
    gt rx689_pos, rx689_eos, rx689_fail1326
    repr_get_attr_int $I11, self, rx689_curclass, "$!from"
    ne $I11, -1, rxscan690_done1332
    goto rxscan690_scan1331
  rxscan690_loop1330:
    inc rx689_pos
    gt rx689_pos, rx689_eos, rx689_fail1326
    repr_bind_attr_int rx689_cur, rx689_curclass, "$!from", rx689_pos
  rxscan690_scan1331:
    nqp_rxmark rx689_bstack, rxscan690_loop1330, rx689_pos, 0
  rxscan690_done1332:
    ge rx689_pos, rx689_eos, rx689_fail1326
    substr $S11, rx689_tgt, rx689_pos, 1
    index $I11, ucs4:";", $S11
    lt $I11, 0, rx689_fail1326
    rx689_cur."!cursor_pass"(rx689_pos, "terminator:sym<;>", 'backtrack'=>1)
    .return (rx689_cur)
  rx689_restart1325:
    repr_get_attr_obj rx689_cstack, rx689_cur, rx689_curclass, "$!cstack"
  rx689_fail1326:
    unless rx689_bstack, rx689_done1324
    pop $I19, rx689_bstack
    if_null rx689_cstack, rx689_cstack_done1329
    unless rx689_cstack, rx689_cstack_done1329
    dec $I19
    set $P11, rx689_cstack[$I19]
  rx689_cstack_done1329:
    pop rx689_rep, rx689_bstack
    pop rx689_pos, rx689_bstack
    pop $I19, rx689_bstack
    lt rx689_pos, -1, rx689_done1324
    lt rx689_pos, 0, rx689_fail1326
    eq $I19, 0, rx689_fail1326
    nqp_islist $I20, rx689_cstack
    unless $I20, rx689_jump1327
    elements $I18, rx689_bstack
    le $I18, 0, rx689_cut1328
    dec $I18
    set $I18, rx689_bstack[$I18]
  rx689_cut1328:
    assign rx689_cstack, $I18
  rx689_jump1327:
    jump $I19
  rx689_done1324:
    rx689_cur."!cursor_fail"()
    .return (rx689_cur) 
.end
.HLL "nqp"
.namespace []
.sub "terminator:sym<}>" :subid("cuid_61_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 842
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx691_tgt
    .local int rx691_pos
    .local int rx691_off
    .local int rx691_eos
    .local int rx691_rep
    .local pmc rx691_cur
    .local pmc rx691_curclass
    .local pmc rx691_bstack
    .local pmc rx691_cstack
    (rx691_cur, rx691_tgt, rx691_pos, rx691_curclass, rx691_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx691_cur
    length rx691_eos, rx691_tgt
    eq $I19, 1, rx691_restart1335
    gt rx691_pos, rx691_eos, rx691_fail1336
    repr_get_attr_int $I11, self, rx691_curclass, "$!from"
    ne $I11, -1, rxscan692_done1342
    goto rxscan692_scan1341
  rxscan692_loop1340:
    inc rx691_pos
    gt rx691_pos, rx691_eos, rx691_fail1336
    repr_bind_attr_int rx691_cur, rx691_curclass, "$!from", rx691_pos
  rxscan692_scan1341:
    nqp_rxmark rx691_bstack, rxscan692_loop1340, rx691_pos, 0
  rxscan692_done1342:
    ge rx691_pos, rx691_eos, rx691_fail1336
    substr $S11, rx691_tgt, rx691_pos, 1
    index $I11, ucs4:"}", $S11
    lt $I11, 0, rx691_fail1336
    rx691_cur."!cursor_pass"(rx691_pos, "terminator:sym<}>", 'backtrack'=>1)
    .return (rx691_cur)
  rx691_restart1335:
    repr_get_attr_obj rx691_cstack, rx691_cur, rx691_curclass, "$!cstack"
  rx691_fail1336:
    unless rx691_bstack, rx691_done1334
    pop $I19, rx691_bstack
    if_null rx691_cstack, rx691_cstack_done1339
    unless rx691_cstack, rx691_cstack_done1339
    dec $I19
    set $P11, rx691_cstack[$I19]
  rx691_cstack_done1339:
    pop rx691_rep, rx691_bstack
    pop rx691_pos, rx691_bstack
    pop $I19, rx691_bstack
    lt rx691_pos, -1, rx691_done1334
    lt rx691_pos, 0, rx691_fail1336
    eq $I19, 0, rx691_fail1336
    nqp_islist $I20, rx691_cstack
    unless $I20, rx691_jump1337
    elements $I18, rx691_bstack
    le $I18, 0, rx691_cut1338
    dec $I18
    set $I18, rx691_bstack[$I18]
  rx691_cut1338:
    assign rx691_cstack, $I18
  rx691_jump1337:
    jump $I19
  rx691_done1334:
    rx691_cur."!cursor_fail"()
    .return (rx691_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control" :subid("cuid_62_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 846
    .param pmc self 
    $P5001 = self."!protoregex"("statement_control")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<use>" :subid("cuid_63_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 848
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx693_tgt
    .local int rx693_pos
    .local int rx693_off
    .local int rx693_eos
    .local int rx693_rep
    .local pmc rx693_cur
    .local pmc rx693_curclass
    .local pmc rx693_bstack
    .local pmc rx693_cstack
    (rx693_cur, rx693_tgt, rx693_pos, rx693_curclass, rx693_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx693_cur
    length rx693_eos, rx693_tgt
    eq $I19, 1, rx693_restart1345
    gt rx693_pos, rx693_eos, rx693_fail1346
    repr_get_attr_int $I11, self, rx693_curclass, "$!from"
    ne $I11, -1, rxscan694_done1352
    goto rxscan694_scan1351
  rxscan694_loop1350:
    inc rx693_pos
    gt rx693_pos, rx693_eos, rx693_fail1346
    repr_bind_attr_int rx693_cur, rx693_curclass, "$!from", rx693_pos
  rxscan694_scan1351:
    nqp_rxmark rx693_bstack, rxscan694_loop1350, rx693_pos, 0
  rxscan694_done1352:
    nqp_rxmark rx693_bstack, rxcap695_fail1354, rx693_pos, 0
    add $I11, rx693_pos, 3
    gt $I11, rx693_eos, rx693_fail1346
    substr $S10, rx693_tgt, rx693_pos, 3
    ne $S10, ucs4:"use", rx693_fail1346
    add rx693_pos, 3
    nqp_rxpeek $I19, rx693_bstack, rxcap695_fail1354
    inc $I19
    set $I11, rx693_bstack[$I19]
    repr_bind_attr_int rx693_cur, rx693_curclass, "$!pos", rx693_pos
    $P11 = rx693_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx693_pos)
    rx693_cstack = rx693_cur."!cursor_capture"($P11, "sym")
    goto rxcap695_done1353
  rxcap695_fail1354:
    goto rx693_fail1346
  rxcap695_done1353:
    ge rx693_pos, rx693_eos, rx693_fail1346
    is_cclass $I11, .CCLASS_WHITESPACE, rx693_tgt, rx693_pos
    unless $I11, rx693_fail1346
    add rx693_pos, 1
    repr_bind_attr_int rx693_cur, rx693_curclass, "$!pos", rx693_pos
    $P11 = rx693_cur."ws"()
    repr_get_attr_int $I11, $P11, rx693_curclass, "$!pos"
    lt $I11, 0, rx693_fail1346
    repr_get_attr_int rx693_pos, $P11, rx693_curclass, "$!pos"
    repr_bind_attr_int rx693_cur, rx693_curclass, "$!pos", rx693_pos
    $P11 = rx693_cur."name"()
    repr_get_attr_int $I11, $P11, rx693_curclass, "$!pos"
    lt $I11, 0, rx693_fail1346
    nqp_rxmark rx693_bstack, rxsubrule697_pass1356, -1, 0
  rxsubrule697_pass1356:
    rx693_cstack = rx693_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx693_pos, $P11, rx693_curclass, "$!pos"
    repr_bind_attr_int rx693_cur, rx693_curclass, "$!pos", rx693_pos
    $P11 = rx693_cur."ws"()
    repr_get_attr_int $I11, $P11, rx693_curclass, "$!pos"
    lt $I11, 0, rx693_fail1346
    repr_get_attr_int rx693_pos, $P11, rx693_curclass, "$!pos"
    rx693_cur."!cursor_pass"(rx693_pos, "statement_control:sym<use>", 'backtrack'=>1)
    .return (rx693_cur)
  rx693_restart1345:
    repr_get_attr_obj rx693_cstack, rx693_cur, rx693_curclass, "$!cstack"
  rx693_fail1346:
    unless rx693_bstack, rx693_done1344
    pop $I19, rx693_bstack
    if_null rx693_cstack, rx693_cstack_done1349
    unless rx693_cstack, rx693_cstack_done1349
    dec $I19
    set $P11, rx693_cstack[$I19]
  rx693_cstack_done1349:
    pop rx693_rep, rx693_bstack
    pop rx693_pos, rx693_bstack
    pop $I19, rx693_bstack
    lt rx693_pos, -1, rx693_done1344
    lt rx693_pos, 0, rx693_fail1346
    eq $I19, 0, rx693_fail1346
    nqp_islist $I20, rx693_cstack
    unless $I20, rx693_jump1347
    elements $I18, rx693_bstack
    le $I18, 0, rx693_cut1348
    dec $I18
    set $I18, rx693_bstack[$I18]
  rx693_cut1348:
    assign rx693_cstack, $I18
  rx693_jump1347:
    jump $I19
  rx693_done1344:
    rx693_cur."!cursor_fail"()
    .return (rx693_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<if>" :subid("cuid_64_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 852
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx699_tgt
    .local int rx699_pos
    .local int rx699_off
    .local int rx699_eos
    .local int rx699_rep
    .local pmc rx699_cur
    .local pmc rx699_curclass
    .local pmc rx699_bstack
    .local pmc rx699_cstack
    (rx699_cur, rx699_tgt, rx699_pos, rx699_curclass, rx699_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx699_cur
    length rx699_eos, rx699_tgt
    eq $I19, 1, rx699_restart1360
    gt rx699_pos, rx699_eos, rx699_fail1361
    repr_get_attr_int $I11, self, rx699_curclass, "$!from"
    ne $I11, -1, rxscan700_done1367
    goto rxscan700_scan1366
  rxscan700_loop1365:
    inc rx699_pos
    gt rx699_pos, rx699_eos, rx699_fail1361
    repr_bind_attr_int rx699_cur, rx699_curclass, "$!from", rx699_pos
  rxscan700_scan1366:
    nqp_rxmark rx699_bstack, rxscan700_loop1365, rx699_pos, 0
  rxscan700_done1367:
    nqp_rxmark rx699_bstack, rxcap701_fail1369, rx699_pos, 0
    add $I11, rx699_pos, 2
    gt $I11, rx699_eos, rx699_fail1361
    substr $S10, rx699_tgt, rx699_pos, 2
    ne $S10, ucs4:"if", rx699_fail1361
    add rx699_pos, 2
    nqp_rxpeek $I19, rx699_bstack, rxcap701_fail1369
    inc $I19
    set $I11, rx699_bstack[$I19]
    repr_bind_attr_int rx699_cur, rx699_curclass, "$!pos", rx699_pos
    $P11 = rx699_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx699_pos)
    rx699_cstack = rx699_cur."!cursor_capture"($P11, "sym")
    goto rxcap701_done1368
  rxcap701_fail1369:
    goto rx699_fail1361
  rxcap701_done1368:
    ge rx699_pos, rx699_eos, rx699_fail1361
    is_cclass $I11, .CCLASS_WHITESPACE, rx699_tgt, rx699_pos
    unless $I11, rx699_fail1361
    add rx699_pos, 1
    repr_bind_attr_int rx699_cur, rx699_curclass, "$!pos", rx699_pos
    $P11 = rx699_cur."ws"()
    repr_get_attr_int $I11, $P11, rx699_curclass, "$!pos"
    lt $I11, 0, rx699_fail1361
    repr_get_attr_int rx699_pos, $P11, rx699_curclass, "$!pos"
    repr_bind_attr_int rx699_cur, rx699_curclass, "$!pos", rx699_pos
    $P11 = rx699_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx699_curclass, "$!pos"
    lt $I11, 0, rx699_fail1361
    nqp_rxmark rx699_bstack, rxsubrule703_pass1371, -1, 0
  rxsubrule703_pass1371:
    rx699_cstack = rx699_cur."!cursor_capture"($P11, "xblock")
    repr_get_attr_int rx699_pos, $P11, rx699_curclass, "$!pos"
    repr_bind_attr_int rx699_cur, rx699_curclass, "$!pos", rx699_pos
    $P11 = rx699_cur."ws"()
    repr_get_attr_int $I11, $P11, rx699_curclass, "$!pos"
    lt $I11, 0, rx699_fail1361
    repr_get_attr_int rx699_pos, $P11, rx699_curclass, "$!pos"
    nqp_rxmark rx699_bstack, rxquantr705_done1374, rx699_pos, 0
  rxquantr705_loop1373:
    repr_bind_attr_int rx699_cur, rx699_curclass, "$!pos", rx699_pos
    $P11 = rx699_cur."ws"()
    repr_get_attr_int $I11, $P11, rx699_curclass, "$!pos"
    lt $I11, 0, rx699_fail1361
    repr_get_attr_int rx699_pos, $P11, rx699_curclass, "$!pos"
    add $I11, rx699_pos, 5
    gt $I11, rx699_eos, rx699_fail1361
    substr $S10, rx699_tgt, rx699_pos, 5
    ne $S10, ucs4:"elsif", rx699_fail1361
    add rx699_pos, 5
    ge rx699_pos, rx699_eos, rx699_fail1361
    is_cclass $I11, .CCLASS_WHITESPACE, rx699_tgt, rx699_pos
    unless $I11, rx699_fail1361
    add rx699_pos, 1
    repr_bind_attr_int rx699_cur, rx699_curclass, "$!pos", rx699_pos
    $P11 = rx699_cur."ws"()
    repr_get_attr_int $I11, $P11, rx699_curclass, "$!pos"
    lt $I11, 0, rx699_fail1361
    repr_get_attr_int rx699_pos, $P11, rx699_curclass, "$!pos"
    repr_bind_attr_int rx699_cur, rx699_curclass, "$!pos", rx699_pos
    $P11 = rx699_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx699_curclass, "$!pos"
    lt $I11, 0, rx699_fail1361
    nqp_rxmark rx699_bstack, rxsubrule708_pass1377, -1, 0
  rxsubrule708_pass1377:
    rx699_cstack = rx699_cur."!cursor_capture"($P11, "xblock")
    repr_get_attr_int rx699_pos, $P11, rx699_curclass, "$!pos"
    repr_bind_attr_int rx699_cur, rx699_curclass, "$!pos", rx699_pos
    $P11 = rx699_cur."ws"()
    repr_get_attr_int $I11, $P11, rx699_curclass, "$!pos"
    lt $I11, 0, rx699_fail1361
    repr_get_attr_int rx699_pos, $P11, rx699_curclass, "$!pos"
    nqp_rxpeek $I19, rx699_bstack, rxquantr705_done1374
    inc $I19
    inc $I19
    set rx699_rep, rx699_bstack[$I19]
    nqp_rxcommit rx699_bstack, rxquantr705_done1374
    inc rx699_rep
    nqp_rxmark rx699_bstack, rxquantr705_done1374, rx699_pos, rx699_rep
    goto rxquantr705_loop1373
  rxquantr705_done1374:
    repr_bind_attr_int rx699_cur, rx699_curclass, "$!pos", rx699_pos
    $P11 = rx699_cur."ws"()
    repr_get_attr_int $I11, $P11, rx699_curclass, "$!pos"
    lt $I11, 0, rx699_fail1361
    repr_get_attr_int rx699_pos, $P11, rx699_curclass, "$!pos"
    nqp_rxmark rx699_bstack, rxquantr711_done1381, rx699_pos, 0
  rxquantr711_loop1380:
    repr_bind_attr_int rx699_cur, rx699_curclass, "$!pos", rx699_pos
    $P11 = rx699_cur."ws"()
    repr_get_attr_int $I11, $P11, rx699_curclass, "$!pos"
    lt $I11, 0, rx699_fail1361
    repr_get_attr_int rx699_pos, $P11, rx699_curclass, "$!pos"
    add $I11, rx699_pos, 4
    gt $I11, rx699_eos, rx699_fail1361
    substr $S10, rx699_tgt, rx699_pos, 4
    ne $S10, ucs4:"else", rx699_fail1361
    add rx699_pos, 4
    ge rx699_pos, rx699_eos, rx699_fail1361
    is_cclass $I11, .CCLASS_WHITESPACE, rx699_tgt, rx699_pos
    unless $I11, rx699_fail1361
    add rx699_pos, 1
    repr_bind_attr_int rx699_cur, rx699_curclass, "$!pos", rx699_pos
    $P11 = rx699_cur."ws"()
    repr_get_attr_int $I11, $P11, rx699_curclass, "$!pos"
    lt $I11, 0, rx699_fail1361
    repr_get_attr_int rx699_pos, $P11, rx699_curclass, "$!pos"
    repr_bind_attr_int rx699_cur, rx699_curclass, "$!pos", rx699_pos
    $P11 = rx699_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx699_curclass, "$!pos"
    lt $I11, 0, rx699_fail1361
    nqp_rxmark rx699_bstack, rxsubrule714_pass1384, -1, 0
  rxsubrule714_pass1384:
    rx699_cstack = rx699_cur."!cursor_capture"($P11, "else")
    repr_get_attr_int rx699_pos, $P11, rx699_curclass, "$!pos"
    repr_bind_attr_int rx699_cur, rx699_curclass, "$!pos", rx699_pos
    $P11 = rx699_cur."ws"()
    repr_get_attr_int $I11, $P11, rx699_curclass, "$!pos"
    lt $I11, 0, rx699_fail1361
    repr_get_attr_int rx699_pos, $P11, rx699_curclass, "$!pos"
    nqp_rxpeek $I19, rx699_bstack, rxquantr711_done1381
    inc $I19
    inc $I19
    set rx699_rep, rx699_bstack[$I19]
    nqp_rxcommit rx699_bstack, rxquantr711_done1381
    inc rx699_rep
  rxquantr711_done1381:
    repr_bind_attr_int rx699_cur, rx699_curclass, "$!pos", rx699_pos
    $P11 = rx699_cur."ws"()
    repr_get_attr_int $I11, $P11, rx699_curclass, "$!pos"
    lt $I11, 0, rx699_fail1361
    repr_get_attr_int rx699_pos, $P11, rx699_curclass, "$!pos"
    rx699_cur."!cursor_pass"(rx699_pos, "statement_control:sym<if>", 'backtrack'=>1)
    .return (rx699_cur)
  rx699_restart1360:
    repr_get_attr_obj rx699_cstack, rx699_cur, rx699_curclass, "$!cstack"
  rx699_fail1361:
    unless rx699_bstack, rx699_done1359
    pop $I19, rx699_bstack
    if_null rx699_cstack, rx699_cstack_done1364
    unless rx699_cstack, rx699_cstack_done1364
    dec $I19
    set $P11, rx699_cstack[$I19]
  rx699_cstack_done1364:
    pop rx699_rep, rx699_bstack
    pop rx699_pos, rx699_bstack
    pop $I19, rx699_bstack
    lt rx699_pos, -1, rx699_done1359
    lt rx699_pos, 0, rx699_fail1361
    eq $I19, 0, rx699_fail1361
    nqp_islist $I20, rx699_cstack
    unless $I20, rx699_jump1362
    elements $I18, rx699_bstack
    le $I18, 0, rx699_cut1363
    dec $I18
    set $I18, rx699_bstack[$I18]
  rx699_cut1363:
    assign rx699_cstack, $I18
  rx699_jump1362:
    jump $I19
  rx699_done1359:
    rx699_cur."!cursor_fail"()
    .return (rx699_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<unless>" :subid("cuid_65_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 859
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_66_1360432459.413' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx717_tgt
    .local int rx717_pos
    .local int rx717_off
    .local int rx717_eos
    .local int rx717_rep
    .local pmc rx717_cur
    .local pmc rx717_curclass
    .local pmc rx717_bstack
    .local pmc rx717_cstack
    (rx717_cur, rx717_tgt, rx717_pos, rx717_curclass, rx717_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx717_cur
    length rx717_eos, rx717_tgt
    eq $I19, 1, rx717_restart1389
    gt rx717_pos, rx717_eos, rx717_fail1390
    repr_get_attr_int $I11, self, rx717_curclass, "$!from"
    ne $I11, -1, rxscan718_done1396
    goto rxscan718_scan1395
  rxscan718_loop1394:
    inc rx717_pos
    gt rx717_pos, rx717_eos, rx717_fail1390
    repr_bind_attr_int rx717_cur, rx717_curclass, "$!from", rx717_pos
  rxscan718_scan1395:
    nqp_rxmark rx717_bstack, rxscan718_loop1394, rx717_pos, 0
  rxscan718_done1396:
    nqp_rxmark rx717_bstack, rxcap719_fail1398, rx717_pos, 0
    add $I11, rx717_pos, 6
    gt $I11, rx717_eos, rx717_fail1390
    substr $S10, rx717_tgt, rx717_pos, 6
    ne $S10, ucs4:"unless", rx717_fail1390
    add rx717_pos, 6
    nqp_rxpeek $I19, rx717_bstack, rxcap719_fail1398
    inc $I19
    set $I11, rx717_bstack[$I19]
    repr_bind_attr_int rx717_cur, rx717_curclass, "$!pos", rx717_pos
    $P11 = rx717_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx717_pos)
    rx717_cstack = rx717_cur."!cursor_capture"($P11, "sym")
    goto rxcap719_done1397
  rxcap719_fail1398:
    goto rx717_fail1390
  rxcap719_done1397:
    ge rx717_pos, rx717_eos, rx717_fail1390
    is_cclass $I11, .CCLASS_WHITESPACE, rx717_tgt, rx717_pos
    unless $I11, rx717_fail1390
    add rx717_pos, 1
    repr_bind_attr_int rx717_cur, rx717_curclass, "$!pos", rx717_pos
    $P11 = rx717_cur."ws"()
    repr_get_attr_int $I11, $P11, rx717_curclass, "$!pos"
    lt $I11, 0, rx717_fail1390
    repr_get_attr_int rx717_pos, $P11, rx717_curclass, "$!pos"
    repr_bind_attr_int rx717_cur, rx717_curclass, "$!pos", rx717_pos
    $P11 = rx717_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx717_curclass, "$!pos"
    lt $I11, 0, rx717_fail1390
    nqp_rxmark rx717_bstack, rxsubrule721_pass1400, -1, 0
  rxsubrule721_pass1400:
    rx717_cstack = rx717_cur."!cursor_capture"($P11, "xblock")
    repr_get_attr_int rx717_pos, $P11, rx717_curclass, "$!pos"
    repr_bind_attr_int rx717_cur, rx717_curclass, "$!pos", rx717_pos
    $P11 = rx717_cur."ws"()
    repr_get_attr_int $I11, $P11, rx717_curclass, "$!pos"
    lt $I11, 0, rx717_fail1390
    repr_get_attr_int rx717_pos, $P11, rx717_curclass, "$!pos"
  alt723_01403:
    nqp_rxmark rx717_bstack, alt723_11416, rx717_pos, 0
    repr_bind_attr_int rx717_cur, rx717_curclass, "$!pos", rx717_pos
    $P11 = rx717_cur."ws"()
    repr_get_attr_int $I11, $P11, rx717_curclass, "$!pos"
    lt $I11, 0, rx717_fail1390
    repr_get_attr_int rx717_pos, $P11, rx717_curclass, "$!pos"
    .const 'Sub' $P5001 = 'cuid_66_1360432459.413' 
    capture_lex $P5001
    repr_bind_attr_int rx717_cur, rx717_curclass, "$!pos", rx717_pos
    $P11 = rx717_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx717_curclass, "$!pos"
    ge $I11, 0, rx717_fail1390
    repr_bind_attr_int rx717_cur, rx717_curclass, "$!pos", rx717_pos
    $P11 = rx717_cur."ws"()
    repr_get_attr_int $I11, $P11, rx717_curclass, "$!pos"
    lt $I11, 0, rx717_fail1390
    repr_get_attr_int rx717_pos, $P11, rx717_curclass, "$!pos"
    goto alt723_end1402
  alt723_11416:
    repr_bind_attr_int rx717_cur, rx717_curclass, "$!pos", rx717_pos
    $P11 = rx717_cur."ws"()
    repr_get_attr_int $I11, $P11, rx717_curclass, "$!pos"
    lt $I11, 0, rx717_fail1390
    repr_get_attr_int rx717_pos, $P11, rx717_curclass, "$!pos"
    repr_bind_attr_int rx717_cur, rx717_curclass, "$!pos", rx717_pos
    $P11 = rx717_cur."panic"("unless does not take \"else\", please rewrite using \"if\"")
    repr_get_attr_int $I11, $P11, rx717_curclass, "$!pos"
    lt $I11, 0, rx717_fail1390
    repr_get_attr_int rx717_pos, $P11, rx717_curclass, "$!pos"
    repr_bind_attr_int rx717_cur, rx717_curclass, "$!pos", rx717_pos
    $P11 = rx717_cur."ws"()
    repr_get_attr_int $I11, $P11, rx717_curclass, "$!pos"
    lt $I11, 0, rx717_fail1390
    repr_get_attr_int rx717_pos, $P11, rx717_curclass, "$!pos"
  alt723_end1402:
    repr_bind_attr_int rx717_cur, rx717_curclass, "$!pos", rx717_pos
    $P11 = rx717_cur."ws"()
    repr_get_attr_int $I11, $P11, rx717_curclass, "$!pos"
    lt $I11, 0, rx717_fail1390
    repr_get_attr_int rx717_pos, $P11, rx717_curclass, "$!pos"
    rx717_cur."!cursor_pass"(rx717_pos, "statement_control:sym<unless>", 'backtrack'=>1)
    .return (rx717_cur)
  rx717_restart1389:
    repr_get_attr_obj rx717_cstack, rx717_cur, rx717_curclass, "$!cstack"
  rx717_fail1390:
    unless rx717_bstack, rx717_done1388
    pop $I19, rx717_bstack
    if_null rx717_cstack, rx717_cstack_done1393
    unless rx717_cstack, rx717_cstack_done1393
    dec $I19
    set $P11, rx717_cstack[$I19]
  rx717_cstack_done1393:
    pop rx717_rep, rx717_bstack
    pop rx717_pos, rx717_bstack
    pop $I19, rx717_bstack
    lt rx717_pos, -1, rx717_done1388
    lt rx717_pos, 0, rx717_fail1390
    eq $I19, 0, rx717_fail1390
    nqp_islist $I20, rx717_cstack
    unless $I20, rx717_jump1391
    elements $I18, rx717_bstack
    le $I18, 0, rx717_cut1392
    dec $I18
    set $I18, rx717_bstack[$I18]
  rx717_cut1392:
    assign rx717_cstack, $I18
  rx717_jump1391:
    jump $I19
  rx717_done1388:
    rx717_cur."!cursor_fail"()
    .return (rx717_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_66_1360432459.413") :anon :lex :outer("cuid_65_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local string rx725_tgt
    .local int rx725_pos
    .local int rx725_off
    .local int rx725_eos
    .local int rx725_rep
    .local pmc rx725_cur
    .local pmc rx725_curclass
    .local pmc rx725_bstack
    .local pmc rx725_cstack
    (rx725_cur, rx725_tgt, rx725_pos, rx725_curclass, rx725_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx725_cur
    length rx725_eos, rx725_tgt
    eq $I19, 1, rx725_restart1407
    gt rx725_pos, rx725_eos, rx725_fail1408
    repr_get_attr_int $I11, self, rx725_curclass, "$!from"
    ne $I11, -1, rxscan726_done1414
    goto rxscan726_scan1413
  rxscan726_loop1412:
    inc rx725_pos
    gt rx725_pos, rx725_eos, rx725_fail1408
    repr_bind_attr_int rx725_cur, rx725_curclass, "$!from", rx725_pos
  rxscan726_scan1413:
    nqp_rxmark rx725_bstack, rxscan726_loop1412, rx725_pos, 0
  rxscan726_done1414:
    add $I11, rx725_pos, 4
    gt $I11, rx725_eos, rx725_fail1408
    substr $S10, rx725_tgt, rx725_pos, 4
    ne $S10, ucs4:"else", rx725_fail1408
    add rx725_pos, 4
    rx725_cur."!cursor_pass"(rx725_pos, 'backtrack'=>1)
    .return (rx725_cur)
  rx725_restart1407:
    repr_get_attr_obj rx725_cstack, rx725_cur, rx725_curclass, "$!cstack"
  rx725_fail1408:
    unless rx725_bstack, rx725_done1406
    pop $I19, rx725_bstack
    if_null rx725_cstack, rx725_cstack_done1411
    unless rx725_cstack, rx725_cstack_done1411
    dec $I19
    set $P11, rx725_cstack[$I19]
  rx725_cstack_done1411:
    pop rx725_rep, rx725_bstack
    pop rx725_pos, rx725_bstack
    pop $I19, rx725_bstack
    lt rx725_pos, -1, rx725_done1406
    lt rx725_pos, 0, rx725_fail1408
    eq $I19, 0, rx725_fail1408
    nqp_islist $I20, rx725_cstack
    unless $I20, rx725_jump1409
    elements $I18, rx725_bstack
    le $I18, 0, rx725_cut1410
    dec $I18
    set $I18, rx725_bstack[$I18]
  rx725_cut1410:
    assign rx725_cstack, $I18
  rx725_jump1409:
    jump $I19
  rx725_done1406:
    rx725_cur."!cursor_fail"()
    .return (rx725_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<while>" :subid("cuid_67_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 865
    .param pmc _lex_param_0 
    .lex "$*CONTROL_USED", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    set self, _lex_param_0
    .local string rx732_tgt
    .local int rx732_pos
    .local int rx732_off
    .local int rx732_eos
    .local int rx732_rep
    .local pmc rx732_cur
    .local pmc rx732_curclass
    .local pmc rx732_bstack
    .local pmc rx732_cstack
    (rx732_cur, rx732_tgt, rx732_pos, rx732_curclass, rx732_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx732_cur
    length rx732_eos, rx732_tgt
    eq $I19, 1, rx732_restart1423
    gt rx732_pos, rx732_eos, rx732_fail1424
    repr_get_attr_int $I11, self, rx732_curclass, "$!from"
    ne $I11, -1, rxscan733_done1430
    goto rxscan733_scan1429
  rxscan733_loop1428:
    inc rx732_pos
    gt rx732_pos, rx732_eos, rx732_fail1424
    repr_bind_attr_int rx732_cur, rx732_curclass, "$!from", rx732_pos
  rxscan733_scan1429:
    nqp_rxmark rx732_bstack, rxscan733_loop1428, rx732_pos, 0
  rxscan733_done1430:
    repr_bind_attr_int rx732_cur, rx732_curclass, "$!pos", rx732_pos
    store_lex unicode:"$\x{a2}", rx732_cur
    box $P5002, 0
    set $P101, $P5002
    nqp_rxmark rx732_bstack, rxcap734_fail1432, rx732_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt735_01434
    nqp_push_label $P11, alt735_11435
    nqp_rxmark rx732_bstack, alt735_end1433, -1, 0
    rx732_cur."!alt"(rx732_pos, "alt_nfa__12_1360432460.949", $P11)
    goto rx732_fail1424
  alt735_01434:
    add $I11, rx732_pos, 5
    gt $I11, rx732_eos, rx732_fail1424
    substr $S10, rx732_tgt, rx732_pos, 5
    ne $S10, ucs4:"while", rx732_fail1424
    add rx732_pos, 5
    goto alt735_end1433
  alt735_11435:
    add $I11, rx732_pos, 5
    gt $I11, rx732_eos, rx732_fail1424
    substr $S10, rx732_tgt, rx732_pos, 5
    ne $S10, ucs4:"until", rx732_fail1424
    add rx732_pos, 5
    goto alt735_end1433
  alt735_end1433:
    nqp_rxcommit rx732_bstack, alt735_end1433
    nqp_rxpeek $I19, rx732_bstack, rxcap734_fail1432
    inc $I19
    set $I11, rx732_bstack[$I19]
    repr_bind_attr_int rx732_cur, rx732_curclass, "$!pos", rx732_pos
    $P11 = rx732_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx732_pos)
    rx732_cstack = rx732_cur."!cursor_capture"($P11, "sym")
    goto rxcap734_done1431
  rxcap734_fail1432:
    goto rx732_fail1424
  rxcap734_done1431:
    ge rx732_pos, rx732_eos, rx732_fail1424
    is_cclass $I11, .CCLASS_WHITESPACE, rx732_tgt, rx732_pos
    unless $I11, rx732_fail1424
    add rx732_pos, 1
    repr_bind_attr_int rx732_cur, rx732_curclass, "$!pos", rx732_pos
    $P11 = rx732_cur."ws"()
    repr_get_attr_int $I11, $P11, rx732_curclass, "$!pos"
    lt $I11, 0, rx732_fail1424
    repr_get_attr_int rx732_pos, $P11, rx732_curclass, "$!pos"
    repr_bind_attr_int rx732_cur, rx732_curclass, "$!pos", rx732_pos
    $P11 = rx732_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx732_curclass, "$!pos"
    lt $I11, 0, rx732_fail1424
    nqp_rxmark rx732_bstack, rxsubrule737_pass1437, -1, 0
  rxsubrule737_pass1437:
    rx732_cstack = rx732_cur."!cursor_capture"($P11, "xblock")
    repr_get_attr_int rx732_pos, $P11, rx732_curclass, "$!pos"
    repr_bind_attr_int rx732_cur, rx732_curclass, "$!pos", rx732_pos
    $P11 = rx732_cur."ws"()
    repr_get_attr_int $I11, $P11, rx732_curclass, "$!pos"
    lt $I11, 0, rx732_fail1424
    repr_get_attr_int rx732_pos, $P11, rx732_curclass, "$!pos"
    rx732_cur."!cursor_pass"(rx732_pos, "statement_control:sym<while>", 'backtrack'=>1)
    .return (rx732_cur)
  rx732_restart1423:
    repr_get_attr_obj rx732_cstack, rx732_cur, rx732_curclass, "$!cstack"
  rx732_fail1424:
    unless rx732_bstack, rx732_done1422
    pop $I19, rx732_bstack
    if_null rx732_cstack, rx732_cstack_done1427
    unless rx732_cstack, rx732_cstack_done1427
    dec $I19
    set $P11, rx732_cstack[$I19]
  rx732_cstack_done1427:
    pop rx732_rep, rx732_bstack
    pop rx732_pos, rx732_bstack
    pop $I19, rx732_bstack
    lt rx732_pos, -1, rx732_done1422
    lt rx732_pos, 0, rx732_fail1424
    eq $I19, 0, rx732_fail1424
    nqp_islist $I20, rx732_cstack
    unless $I20, rx732_jump1425
    elements $I18, rx732_bstack
    le $I18, 0, rx732_cut1426
    dec $I18
    set $I18, rx732_bstack[$I18]
  rx732_cut1426:
    assign rx732_cstack, $I18
  rx732_jump1425:
    jump $I19
  rx732_done1422:
    rx732_cur."!cursor_fail"()
    .return (rx732_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<repeat>" :subid("cuid_68_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 871
    .param pmc _lex_param_0 
    .lex "$*CONTROL_USED", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    set self, _lex_param_0
    .local string rx739_tgt
    .local int rx739_pos
    .local int rx739_off
    .local int rx739_eos
    .local int rx739_rep
    .local pmc rx739_cur
    .local pmc rx739_curclass
    .local pmc rx739_bstack
    .local pmc rx739_cstack
    (rx739_cur, rx739_tgt, rx739_pos, rx739_curclass, rx739_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx739_cur
    length rx739_eos, rx739_tgt
    eq $I19, 1, rx739_restart1441
    gt rx739_pos, rx739_eos, rx739_fail1442
    repr_get_attr_int $I11, self, rx739_curclass, "$!from"
    ne $I11, -1, rxscan740_done1448
    goto rxscan740_scan1447
  rxscan740_loop1446:
    inc rx739_pos
    gt rx739_pos, rx739_eos, rx739_fail1442
    repr_bind_attr_int rx739_cur, rx739_curclass, "$!from", rx739_pos
  rxscan740_scan1447:
    nqp_rxmark rx739_bstack, rxscan740_loop1446, rx739_pos, 0
  rxscan740_done1448:
    repr_bind_attr_int rx739_cur, rx739_curclass, "$!pos", rx739_pos
    store_lex unicode:"$\x{a2}", rx739_cur
    box $P5002, 0
    set $P101, $P5002
    nqp_rxmark rx739_bstack, rxcap741_fail1450, rx739_pos, 0
    add $I11, rx739_pos, 6
    gt $I11, rx739_eos, rx739_fail1442
    substr $S10, rx739_tgt, rx739_pos, 6
    ne $S10, ucs4:"repeat", rx739_fail1442
    add rx739_pos, 6
    nqp_rxpeek $I19, rx739_bstack, rxcap741_fail1450
    inc $I19
    set $I11, rx739_bstack[$I19]
    repr_bind_attr_int rx739_cur, rx739_curclass, "$!pos", rx739_pos
    $P11 = rx739_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx739_pos)
    rx739_cstack = rx739_cur."!cursor_capture"($P11, "sym")
    goto rxcap741_done1449
  rxcap741_fail1450:
    goto rx739_fail1442
  rxcap741_done1449:
    ge rx739_pos, rx739_eos, rx739_fail1442
    is_cclass $I11, .CCLASS_WHITESPACE, rx739_tgt, rx739_pos
    unless $I11, rx739_fail1442
    add rx739_pos, 1
    repr_bind_attr_int rx739_cur, rx739_curclass, "$!pos", rx739_pos
    $P11 = rx739_cur."ws"()
    repr_get_attr_int $I11, $P11, rx739_curclass, "$!pos"
    lt $I11, 0, rx739_fail1442
    repr_get_attr_int rx739_pos, $P11, rx739_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt743_01453
    nqp_push_label $P11, alt743_11463
    nqp_rxmark rx739_bstack, alt743_end1452, -1, 0
    rx739_cur."!alt"(rx739_pos, "alt_nfa__15_1360432460.969", $P11)
    goto rx739_fail1442
  alt743_01453:
    repr_bind_attr_int rx739_cur, rx739_curclass, "$!pos", rx739_pos
    $P11 = rx739_cur."ws"()
    repr_get_attr_int $I11, $P11, rx739_curclass, "$!pos"
    lt $I11, 0, rx739_fail1442
    repr_get_attr_int rx739_pos, $P11, rx739_curclass, "$!pos"
    nqp_rxmark rx739_bstack, rxcap745_fail1456, rx739_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt746_01458
    nqp_push_label $P11, alt746_11459
    nqp_rxmark rx739_bstack, alt746_end1457, -1, 0
    rx739_cur."!alt"(rx739_pos, "alt_nfa__13_1360432460.968", $P11)
    goto rx739_fail1442
  alt746_01458:
    add $I11, rx739_pos, 5
    gt $I11, rx739_eos, rx739_fail1442
    substr $S10, rx739_tgt, rx739_pos, 5
    ne $S10, ucs4:"while", rx739_fail1442
    add rx739_pos, 5
    goto alt746_end1457
  alt746_11459:
    add $I11, rx739_pos, 5
    gt $I11, rx739_eos, rx739_fail1442
    substr $S10, rx739_tgt, rx739_pos, 5
    ne $S10, ucs4:"until", rx739_fail1442
    add rx739_pos, 5
    goto alt746_end1457
  alt746_end1457:
    nqp_rxcommit rx739_bstack, alt746_end1457
    nqp_rxpeek $I19, rx739_bstack, rxcap745_fail1456
    inc $I19
    set $I11, rx739_bstack[$I19]
    repr_bind_attr_int rx739_cur, rx739_curclass, "$!pos", rx739_pos
    $P11 = rx739_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx739_pos)
    rx739_cstack = rx739_cur."!cursor_capture"($P11, "wu")
    goto rxcap745_done1455
  rxcap745_fail1456:
    goto rx739_fail1442
  rxcap745_done1455:
    ge rx739_pos, rx739_eos, rx739_fail1442
    is_cclass $I11, .CCLASS_WHITESPACE, rx739_tgt, rx739_pos
    unless $I11, rx739_fail1442
    add rx739_pos, 1
    repr_bind_attr_int rx739_cur, rx739_curclass, "$!pos", rx739_pos
    $P11 = rx739_cur."ws"()
    repr_get_attr_int $I11, $P11, rx739_curclass, "$!pos"
    lt $I11, 0, rx739_fail1442
    repr_get_attr_int rx739_pos, $P11, rx739_curclass, "$!pos"
    repr_bind_attr_int rx739_cur, rx739_curclass, "$!pos", rx739_pos
    $P11 = rx739_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx739_curclass, "$!pos"
    lt $I11, 0, rx739_fail1442
    nqp_rxmark rx739_bstack, rxsubrule748_pass1461, -1, 0
  rxsubrule748_pass1461:
    rx739_cstack = rx739_cur."!cursor_capture"($P11, "xblock")
    repr_get_attr_int rx739_pos, $P11, rx739_curclass, "$!pos"
    repr_bind_attr_int rx739_cur, rx739_curclass, "$!pos", rx739_pos
    $P11 = rx739_cur."ws"()
    repr_get_attr_int $I11, $P11, rx739_curclass, "$!pos"
    lt $I11, 0, rx739_fail1442
    repr_get_attr_int rx739_pos, $P11, rx739_curclass, "$!pos"
    goto alt743_end1452
  alt743_11463:
    repr_bind_attr_int rx739_cur, rx739_curclass, "$!pos", rx739_pos
    $P11 = rx739_cur."ws"()
    repr_get_attr_int $I11, $P11, rx739_curclass, "$!pos"
    lt $I11, 0, rx739_fail1442
    repr_get_attr_int rx739_pos, $P11, rx739_curclass, "$!pos"
    repr_bind_attr_int rx739_cur, rx739_curclass, "$!pos", rx739_pos
    $P11 = rx739_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx739_curclass, "$!pos"
    lt $I11, 0, rx739_fail1442
    nqp_rxmark rx739_bstack, rxsubrule751_pass1465, -1, 0
  rxsubrule751_pass1465:
    rx739_cstack = rx739_cur."!cursor_capture"($P11, "pblock")
    repr_get_attr_int rx739_pos, $P11, rx739_curclass, "$!pos"
    repr_bind_attr_int rx739_cur, rx739_curclass, "$!pos", rx739_pos
    $P11 = rx739_cur."ws"()
    repr_get_attr_int $I11, $P11, rx739_curclass, "$!pos"
    lt $I11, 0, rx739_fail1442
    repr_get_attr_int rx739_pos, $P11, rx739_curclass, "$!pos"
    nqp_rxmark rx739_bstack, rxcap753_fail1468, rx739_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt754_01470
    nqp_push_label $P11, alt754_11471
    nqp_rxmark rx739_bstack, alt754_end1469, -1, 0
    rx739_cur."!alt"(rx739_pos, "alt_nfa__14_1360432460.969", $P11)
    goto rx739_fail1442
  alt754_01470:
    add $I11, rx739_pos, 5
    gt $I11, rx739_eos, rx739_fail1442
    substr $S10, rx739_tgt, rx739_pos, 5
    ne $S10, ucs4:"while", rx739_fail1442
    add rx739_pos, 5
    goto alt754_end1469
  alt754_11471:
    add $I11, rx739_pos, 5
    gt $I11, rx739_eos, rx739_fail1442
    substr $S10, rx739_tgt, rx739_pos, 5
    ne $S10, ucs4:"until", rx739_fail1442
    add rx739_pos, 5
    goto alt754_end1469
  alt754_end1469:
    nqp_rxcommit rx739_bstack, alt754_end1469
    nqp_rxpeek $I19, rx739_bstack, rxcap753_fail1468
    inc $I19
    set $I11, rx739_bstack[$I19]
    repr_bind_attr_int rx739_cur, rx739_curclass, "$!pos", rx739_pos
    $P11 = rx739_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx739_pos)
    rx739_cstack = rx739_cur."!cursor_capture"($P11, "wu")
    goto rxcap753_done1467
  rxcap753_fail1468:
    goto rx739_fail1442
  rxcap753_done1467:
    ge rx739_pos, rx739_eos, rx739_fail1442
    is_cclass $I11, .CCLASS_WHITESPACE, rx739_tgt, rx739_pos
    unless $I11, rx739_fail1442
    add rx739_pos, 1
    repr_bind_attr_int rx739_cur, rx739_curclass, "$!pos", rx739_pos
    $P11 = rx739_cur."ws"()
    repr_get_attr_int $I11, $P11, rx739_curclass, "$!pos"
    lt $I11, 0, rx739_fail1442
    repr_get_attr_int rx739_pos, $P11, rx739_curclass, "$!pos"
    repr_bind_attr_int rx739_cur, rx739_curclass, "$!pos", rx739_pos
    $P11 = rx739_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx739_curclass, "$!pos"
    lt $I11, 0, rx739_fail1442
    nqp_rxmark rx739_bstack, rxsubrule756_pass1473, -1, 0
  rxsubrule756_pass1473:
    rx739_cstack = rx739_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx739_pos, $P11, rx739_curclass, "$!pos"
    repr_bind_attr_int rx739_cur, rx739_curclass, "$!pos", rx739_pos
    $P11 = rx739_cur."ws"()
    repr_get_attr_int $I11, $P11, rx739_curclass, "$!pos"
    lt $I11, 0, rx739_fail1442
    repr_get_attr_int rx739_pos, $P11, rx739_curclass, "$!pos"
    goto alt743_end1452
  alt743_end1452:
    nqp_rxcommit rx739_bstack, alt743_end1452
    repr_bind_attr_int rx739_cur, rx739_curclass, "$!pos", rx739_pos
    $P11 = rx739_cur."ws"()
    repr_get_attr_int $I11, $P11, rx739_curclass, "$!pos"
    lt $I11, 0, rx739_fail1442
    repr_get_attr_int rx739_pos, $P11, rx739_curclass, "$!pos"
    rx739_cur."!cursor_pass"(rx739_pos, "statement_control:sym<repeat>", 'backtrack'=>1)
    .return (rx739_cur)
  rx739_restart1441:
    repr_get_attr_obj rx739_cstack, rx739_cur, rx739_curclass, "$!cstack"
  rx739_fail1442:
    unless rx739_bstack, rx739_done1440
    pop $I19, rx739_bstack
    if_null rx739_cstack, rx739_cstack_done1445
    unless rx739_cstack, rx739_cstack_done1445
    dec $I19
    set $P11, rx739_cstack[$I19]
  rx739_cstack_done1445:
    pop rx739_rep, rx739_bstack
    pop rx739_pos, rx739_bstack
    pop $I19, rx739_bstack
    lt rx739_pos, -1, rx739_done1440
    lt rx739_pos, 0, rx739_fail1442
    eq $I19, 0, rx739_fail1442
    nqp_islist $I20, rx739_cstack
    unless $I20, rx739_jump1443
    elements $I18, rx739_bstack
    le $I18, 0, rx739_cut1444
    dec $I18
    set $I18, rx739_bstack[$I18]
  rx739_cut1444:
    assign rx739_cstack, $I18
  rx739_jump1443:
    jump $I19
  rx739_done1440:
    rx739_cur."!cursor_fail"()
    .return (rx739_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<for>" :subid("cuid_69_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 880
    .param pmc _lex_param_0 
    .lex "$*CONTROL_USED", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    set self, _lex_param_0
    .local string rx759_tgt
    .local int rx759_pos
    .local int rx759_off
    .local int rx759_eos
    .local int rx759_rep
    .local pmc rx759_cur
    .local pmc rx759_curclass
    .local pmc rx759_bstack
    .local pmc rx759_cstack
    (rx759_cur, rx759_tgt, rx759_pos, rx759_curclass, rx759_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx759_cur
    length rx759_eos, rx759_tgt
    eq $I19, 1, rx759_restart1478
    gt rx759_pos, rx759_eos, rx759_fail1479
    repr_get_attr_int $I11, self, rx759_curclass, "$!from"
    ne $I11, -1, rxscan760_done1485
    goto rxscan760_scan1484
  rxscan760_loop1483:
    inc rx759_pos
    gt rx759_pos, rx759_eos, rx759_fail1479
    repr_bind_attr_int rx759_cur, rx759_curclass, "$!from", rx759_pos
  rxscan760_scan1484:
    nqp_rxmark rx759_bstack, rxscan760_loop1483, rx759_pos, 0
  rxscan760_done1485:
    repr_bind_attr_int rx759_cur, rx759_curclass, "$!pos", rx759_pos
    store_lex unicode:"$\x{a2}", rx759_cur
    box $P5002, 0
    set $P101, $P5002
    nqp_rxmark rx759_bstack, rxcap761_fail1487, rx759_pos, 0
    add $I11, rx759_pos, 3
    gt $I11, rx759_eos, rx759_fail1479
    substr $S10, rx759_tgt, rx759_pos, 3
    ne $S10, ucs4:"for", rx759_fail1479
    add rx759_pos, 3
    nqp_rxpeek $I19, rx759_bstack, rxcap761_fail1487
    inc $I19
    set $I11, rx759_bstack[$I19]
    repr_bind_attr_int rx759_cur, rx759_curclass, "$!pos", rx759_pos
    $P11 = rx759_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx759_pos)
    rx759_cstack = rx759_cur."!cursor_capture"($P11, "sym")
    goto rxcap761_done1486
  rxcap761_fail1487:
    goto rx759_fail1479
  rxcap761_done1486:
    ge rx759_pos, rx759_eos, rx759_fail1479
    is_cclass $I11, .CCLASS_WHITESPACE, rx759_tgt, rx759_pos
    unless $I11, rx759_fail1479
    add rx759_pos, 1
    repr_bind_attr_int rx759_cur, rx759_curclass, "$!pos", rx759_pos
    $P11 = rx759_cur."ws"()
    repr_get_attr_int $I11, $P11, rx759_curclass, "$!pos"
    lt $I11, 0, rx759_fail1479
    repr_get_attr_int rx759_pos, $P11, rx759_curclass, "$!pos"
    repr_bind_attr_int rx759_cur, rx759_curclass, "$!pos", rx759_pos
    $P11 = rx759_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx759_curclass, "$!pos"
    lt $I11, 0, rx759_fail1479
    nqp_rxmark rx759_bstack, rxsubrule763_pass1489, -1, 0
  rxsubrule763_pass1489:
    rx759_cstack = rx759_cur."!cursor_capture"($P11, "xblock")
    repr_get_attr_int rx759_pos, $P11, rx759_curclass, "$!pos"
    repr_bind_attr_int rx759_cur, rx759_curclass, "$!pos", rx759_pos
    $P11 = rx759_cur."ws"()
    repr_get_attr_int $I11, $P11, rx759_curclass, "$!pos"
    lt $I11, 0, rx759_fail1479
    repr_get_attr_int rx759_pos, $P11, rx759_curclass, "$!pos"
    rx759_cur."!cursor_pass"(rx759_pos, "statement_control:sym<for>", 'backtrack'=>1)
    .return (rx759_cur)
  rx759_restart1478:
    repr_get_attr_obj rx759_cstack, rx759_cur, rx759_curclass, "$!cstack"
  rx759_fail1479:
    unless rx759_bstack, rx759_done1477
    pop $I19, rx759_bstack
    if_null rx759_cstack, rx759_cstack_done1482
    unless rx759_cstack, rx759_cstack_done1482
    dec $I19
    set $P11, rx759_cstack[$I19]
  rx759_cstack_done1482:
    pop rx759_rep, rx759_bstack
    pop rx759_pos, rx759_bstack
    pop $I19, rx759_bstack
    lt rx759_pos, -1, rx759_done1477
    lt rx759_pos, 0, rx759_fail1479
    eq $I19, 0, rx759_fail1479
    nqp_islist $I20, rx759_cstack
    unless $I20, rx759_jump1480
    elements $I18, rx759_bstack
    le $I18, 0, rx759_cut1481
    dec $I18
    set $I18, rx759_bstack[$I18]
  rx759_cut1481:
    assign rx759_cstack, $I18
  rx759_jump1480:
    jump $I19
  rx759_done1477:
    rx759_cur."!cursor_fail"()
    .return (rx759_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<CATCH>" :subid("cuid_70_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 886
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx765_tgt
    .local int rx765_pos
    .local int rx765_off
    .local int rx765_eos
    .local int rx765_rep
    .local pmc rx765_cur
    .local pmc rx765_curclass
    .local pmc rx765_bstack
    .local pmc rx765_cstack
    (rx765_cur, rx765_tgt, rx765_pos, rx765_curclass, rx765_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx765_cur
    length rx765_eos, rx765_tgt
    eq $I19, 1, rx765_restart1493
    gt rx765_pos, rx765_eos, rx765_fail1494
    repr_get_attr_int $I11, self, rx765_curclass, "$!from"
    ne $I11, -1, rxscan766_done1500
    goto rxscan766_scan1499
  rxscan766_loop1498:
    inc rx765_pos
    gt rx765_pos, rx765_eos, rx765_fail1494
    repr_bind_attr_int rx765_cur, rx765_curclass, "$!from", rx765_pos
  rxscan766_scan1499:
    nqp_rxmark rx765_bstack, rxscan766_loop1498, rx765_pos, 0
  rxscan766_done1500:
    nqp_rxmark rx765_bstack, rxcap767_fail1502, rx765_pos, 0
    add $I11, rx765_pos, 5
    gt $I11, rx765_eos, rx765_fail1494
    substr $S10, rx765_tgt, rx765_pos, 5
    ne $S10, ucs4:"CATCH", rx765_fail1494
    add rx765_pos, 5
    nqp_rxpeek $I19, rx765_bstack, rxcap767_fail1502
    inc $I19
    set $I11, rx765_bstack[$I19]
    repr_bind_attr_int rx765_cur, rx765_curclass, "$!pos", rx765_pos
    $P11 = rx765_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx765_pos)
    rx765_cstack = rx765_cur."!cursor_capture"($P11, "sym")
    goto rxcap767_done1501
  rxcap767_fail1502:
    goto rx765_fail1494
  rxcap767_done1501:
    ge rx765_pos, rx765_eos, rx765_fail1494
    is_cclass $I11, .CCLASS_WHITESPACE, rx765_tgt, rx765_pos
    unless $I11, rx765_fail1494
    add rx765_pos, 1
    repr_bind_attr_int rx765_cur, rx765_curclass, "$!pos", rx765_pos
    $P11 = rx765_cur."ws"()
    repr_get_attr_int $I11, $P11, rx765_curclass, "$!pos"
    lt $I11, 0, rx765_fail1494
    repr_get_attr_int rx765_pos, $P11, rx765_curclass, "$!pos"
    repr_bind_attr_int rx765_cur, rx765_curclass, "$!pos", rx765_pos
    $P11 = rx765_cur."block"()
    repr_get_attr_int $I11, $P11, rx765_curclass, "$!pos"
    lt $I11, 0, rx765_fail1494
    nqp_rxmark rx765_bstack, rxsubrule769_pass1504, -1, 0
  rxsubrule769_pass1504:
    rx765_cstack = rx765_cur."!cursor_capture"($P11, "block")
    repr_get_attr_int rx765_pos, $P11, rx765_curclass, "$!pos"
    repr_bind_attr_int rx765_cur, rx765_curclass, "$!pos", rx765_pos
    $P11 = rx765_cur."ws"()
    repr_get_attr_int $I11, $P11, rx765_curclass, "$!pos"
    lt $I11, 0, rx765_fail1494
    repr_get_attr_int rx765_pos, $P11, rx765_curclass, "$!pos"
    rx765_cur."!cursor_pass"(rx765_pos, "statement_control:sym<CATCH>", 'backtrack'=>1)
    .return (rx765_cur)
  rx765_restart1493:
    repr_get_attr_obj rx765_cstack, rx765_cur, rx765_curclass, "$!cstack"
  rx765_fail1494:
    unless rx765_bstack, rx765_done1492
    pop $I19, rx765_bstack
    if_null rx765_cstack, rx765_cstack_done1497
    unless rx765_cstack, rx765_cstack_done1497
    dec $I19
    set $P11, rx765_cstack[$I19]
  rx765_cstack_done1497:
    pop rx765_rep, rx765_bstack
    pop rx765_pos, rx765_bstack
    pop $I19, rx765_bstack
    lt rx765_pos, -1, rx765_done1492
    lt rx765_pos, 0, rx765_fail1494
    eq $I19, 0, rx765_fail1494
    nqp_islist $I20, rx765_cstack
    unless $I20, rx765_jump1495
    elements $I18, rx765_bstack
    le $I18, 0, rx765_cut1496
    dec $I18
    set $I18, rx765_bstack[$I18]
  rx765_cut1496:
    assign rx765_cstack, $I18
  rx765_jump1495:
    jump $I19
  rx765_done1492:
    rx765_cur."!cursor_fail"()
    .return (rx765_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<CONTROL>" :subid("cuid_71_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 891
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx771_tgt
    .local int rx771_pos
    .local int rx771_off
    .local int rx771_eos
    .local int rx771_rep
    .local pmc rx771_cur
    .local pmc rx771_curclass
    .local pmc rx771_bstack
    .local pmc rx771_cstack
    (rx771_cur, rx771_tgt, rx771_pos, rx771_curclass, rx771_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx771_cur
    length rx771_eos, rx771_tgt
    eq $I19, 1, rx771_restart1508
    gt rx771_pos, rx771_eos, rx771_fail1509
    repr_get_attr_int $I11, self, rx771_curclass, "$!from"
    ne $I11, -1, rxscan772_done1515
    goto rxscan772_scan1514
  rxscan772_loop1513:
    inc rx771_pos
    gt rx771_pos, rx771_eos, rx771_fail1509
    repr_bind_attr_int rx771_cur, rx771_curclass, "$!from", rx771_pos
  rxscan772_scan1514:
    nqp_rxmark rx771_bstack, rxscan772_loop1513, rx771_pos, 0
  rxscan772_done1515:
    nqp_rxmark rx771_bstack, rxcap773_fail1517, rx771_pos, 0
    add $I11, rx771_pos, 7
    gt $I11, rx771_eos, rx771_fail1509
    substr $S10, rx771_tgt, rx771_pos, 7
    ne $S10, ucs4:"CONTROL", rx771_fail1509
    add rx771_pos, 7
    nqp_rxpeek $I19, rx771_bstack, rxcap773_fail1517
    inc $I19
    set $I11, rx771_bstack[$I19]
    repr_bind_attr_int rx771_cur, rx771_curclass, "$!pos", rx771_pos
    $P11 = rx771_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx771_pos)
    rx771_cstack = rx771_cur."!cursor_capture"($P11, "sym")
    goto rxcap773_done1516
  rxcap773_fail1517:
    goto rx771_fail1509
  rxcap773_done1516:
    ge rx771_pos, rx771_eos, rx771_fail1509
    is_cclass $I11, .CCLASS_WHITESPACE, rx771_tgt, rx771_pos
    unless $I11, rx771_fail1509
    add rx771_pos, 1
    repr_bind_attr_int rx771_cur, rx771_curclass, "$!pos", rx771_pos
    $P11 = rx771_cur."ws"()
    repr_get_attr_int $I11, $P11, rx771_curclass, "$!pos"
    lt $I11, 0, rx771_fail1509
    repr_get_attr_int rx771_pos, $P11, rx771_curclass, "$!pos"
    repr_bind_attr_int rx771_cur, rx771_curclass, "$!pos", rx771_pos
    $P11 = rx771_cur."block"()
    repr_get_attr_int $I11, $P11, rx771_curclass, "$!pos"
    lt $I11, 0, rx771_fail1509
    nqp_rxmark rx771_bstack, rxsubrule775_pass1519, -1, 0
  rxsubrule775_pass1519:
    rx771_cstack = rx771_cur."!cursor_capture"($P11, "block")
    repr_get_attr_int rx771_pos, $P11, rx771_curclass, "$!pos"
    repr_bind_attr_int rx771_cur, rx771_curclass, "$!pos", rx771_pos
    $P11 = rx771_cur."ws"()
    repr_get_attr_int $I11, $P11, rx771_curclass, "$!pos"
    lt $I11, 0, rx771_fail1509
    repr_get_attr_int rx771_pos, $P11, rx771_curclass, "$!pos"
    rx771_cur."!cursor_pass"(rx771_pos, "statement_control:sym<CONTROL>", 'backtrack'=>1)
    .return (rx771_cur)
  rx771_restart1508:
    repr_get_attr_obj rx771_cstack, rx771_cur, rx771_curclass, "$!cstack"
  rx771_fail1509:
    unless rx771_bstack, rx771_done1507
    pop $I19, rx771_bstack
    if_null rx771_cstack, rx771_cstack_done1512
    unless rx771_cstack, rx771_cstack_done1512
    dec $I19
    set $P11, rx771_cstack[$I19]
  rx771_cstack_done1512:
    pop rx771_rep, rx771_bstack
    pop rx771_pos, rx771_bstack
    pop $I19, rx771_bstack
    lt rx771_pos, -1, rx771_done1507
    lt rx771_pos, 0, rx771_fail1509
    eq $I19, 0, rx771_fail1509
    nqp_islist $I20, rx771_cstack
    unless $I20, rx771_jump1510
    elements $I18, rx771_bstack
    le $I18, 0, rx771_cut1511
    dec $I18
    set $I18, rx771_bstack[$I18]
  rx771_cut1511:
    assign rx771_cstack, $I18
  rx771_jump1510:
    jump $I19
  rx771_done1507:
    rx771_cur."!cursor_fail"()
    .return (rx771_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix" :subid("cuid_72_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 896
    .param pmc self 
    $P5001 = self."!protoregex"("statement_prefix")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<BEGIN>" :subid("cuid_73_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 897
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx777_tgt
    .local int rx777_pos
    .local int rx777_off
    .local int rx777_eos
    .local int rx777_rep
    .local pmc rx777_cur
    .local pmc rx777_curclass
    .local pmc rx777_bstack
    .local pmc rx777_cstack
    (rx777_cur, rx777_tgt, rx777_pos, rx777_curclass, rx777_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx777_cur
    length rx777_eos, rx777_tgt
    eq $I19, 1, rx777_restart1523
    gt rx777_pos, rx777_eos, rx777_fail1524
    repr_get_attr_int $I11, self, rx777_curclass, "$!from"
    ne $I11, -1, rxscan778_done1530
    goto rxscan778_scan1529
  rxscan778_loop1528:
    inc rx777_pos
    gt rx777_pos, rx777_eos, rx777_fail1524
    repr_bind_attr_int rx777_cur, rx777_curclass, "$!from", rx777_pos
  rxscan778_scan1529:
    nqp_rxmark rx777_bstack, rxscan778_loop1528, rx777_pos, 0
  rxscan778_done1530:
    nqp_rxmark rx777_bstack, rxcap779_fail1532, rx777_pos, 0
    add $I11, rx777_pos, 5
    gt $I11, rx777_eos, rx777_fail1524
    substr $S10, rx777_tgt, rx777_pos, 5
    ne $S10, ucs4:"BEGIN", rx777_fail1524
    add rx777_pos, 5
    nqp_rxpeek $I19, rx777_bstack, rxcap779_fail1532
    inc $I19
    set $I11, rx777_bstack[$I19]
    repr_bind_attr_int rx777_cur, rx777_curclass, "$!pos", rx777_pos
    $P11 = rx777_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx777_pos)
    rx777_cstack = rx777_cur."!cursor_capture"($P11, "sym")
    goto rxcap779_done1531
  rxcap779_fail1532:
    goto rx777_fail1524
  rxcap779_done1531:
    repr_bind_attr_int rx777_cur, rx777_curclass, "$!pos", rx777_pos
    $P11 = rx777_cur."blorst"()
    repr_get_attr_int $I11, $P11, rx777_curclass, "$!pos"
    lt $I11, 0, rx777_fail1524
    nqp_rxmark rx777_bstack, rxsubrule780_pass1533, -1, 0
  rxsubrule780_pass1533:
    rx777_cstack = rx777_cur."!cursor_capture"($P11, "blorst")
    repr_get_attr_int rx777_pos, $P11, rx777_curclass, "$!pos"
    rx777_cur."!cursor_pass"(rx777_pos, "statement_prefix:sym<BEGIN>", 'backtrack'=>1)
    .return (rx777_cur)
  rx777_restart1523:
    repr_get_attr_obj rx777_cstack, rx777_cur, rx777_curclass, "$!cstack"
  rx777_fail1524:
    unless rx777_bstack, rx777_done1522
    pop $I19, rx777_bstack
    if_null rx777_cstack, rx777_cstack_done1527
    unless rx777_cstack, rx777_cstack_done1527
    dec $I19
    set $P11, rx777_cstack[$I19]
  rx777_cstack_done1527:
    pop rx777_rep, rx777_bstack
    pop rx777_pos, rx777_bstack
    pop $I19, rx777_bstack
    lt rx777_pos, -1, rx777_done1522
    lt rx777_pos, 0, rx777_fail1524
    eq $I19, 0, rx777_fail1524
    nqp_islist $I20, rx777_cstack
    unless $I20, rx777_jump1525
    elements $I18, rx777_bstack
    le $I18, 0, rx777_cut1526
    dec $I18
    set $I18, rx777_bstack[$I18]
  rx777_cut1526:
    assign rx777_cstack, $I18
  rx777_jump1525:
    jump $I19
  rx777_done1522:
    rx777_cur."!cursor_fail"()
    .return (rx777_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<INIT>" :subid("cuid_74_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 898
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx781_tgt
    .local int rx781_pos
    .local int rx781_off
    .local int rx781_eos
    .local int rx781_rep
    .local pmc rx781_cur
    .local pmc rx781_curclass
    .local pmc rx781_bstack
    .local pmc rx781_cstack
    (rx781_cur, rx781_tgt, rx781_pos, rx781_curclass, rx781_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx781_cur
    length rx781_eos, rx781_tgt
    eq $I19, 1, rx781_restart1536
    gt rx781_pos, rx781_eos, rx781_fail1537
    repr_get_attr_int $I11, self, rx781_curclass, "$!from"
    ne $I11, -1, rxscan782_done1543
    goto rxscan782_scan1542
  rxscan782_loop1541:
    inc rx781_pos
    gt rx781_pos, rx781_eos, rx781_fail1537
    repr_bind_attr_int rx781_cur, rx781_curclass, "$!from", rx781_pos
  rxscan782_scan1542:
    nqp_rxmark rx781_bstack, rxscan782_loop1541, rx781_pos, 0
  rxscan782_done1543:
    nqp_rxmark rx781_bstack, rxcap783_fail1545, rx781_pos, 0
    add $I11, rx781_pos, 4
    gt $I11, rx781_eos, rx781_fail1537
    substr $S10, rx781_tgt, rx781_pos, 4
    ne $S10, ucs4:"INIT", rx781_fail1537
    add rx781_pos, 4
    nqp_rxpeek $I19, rx781_bstack, rxcap783_fail1545
    inc $I19
    set $I11, rx781_bstack[$I19]
    repr_bind_attr_int rx781_cur, rx781_curclass, "$!pos", rx781_pos
    $P11 = rx781_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx781_pos)
    rx781_cstack = rx781_cur."!cursor_capture"($P11, "sym")
    goto rxcap783_done1544
  rxcap783_fail1545:
    goto rx781_fail1537
  rxcap783_done1544:
    repr_bind_attr_int rx781_cur, rx781_curclass, "$!pos", rx781_pos
    $P11 = rx781_cur."blorst"()
    repr_get_attr_int $I11, $P11, rx781_curclass, "$!pos"
    lt $I11, 0, rx781_fail1537
    nqp_rxmark rx781_bstack, rxsubrule784_pass1546, -1, 0
  rxsubrule784_pass1546:
    rx781_cstack = rx781_cur."!cursor_capture"($P11, "blorst")
    repr_get_attr_int rx781_pos, $P11, rx781_curclass, "$!pos"
    rx781_cur."!cursor_pass"(rx781_pos, "statement_prefix:sym<INIT>", 'backtrack'=>1)
    .return (rx781_cur)
  rx781_restart1536:
    repr_get_attr_obj rx781_cstack, rx781_cur, rx781_curclass, "$!cstack"
  rx781_fail1537:
    unless rx781_bstack, rx781_done1535
    pop $I19, rx781_bstack
    if_null rx781_cstack, rx781_cstack_done1540
    unless rx781_cstack, rx781_cstack_done1540
    dec $I19
    set $P11, rx781_cstack[$I19]
  rx781_cstack_done1540:
    pop rx781_rep, rx781_bstack
    pop rx781_pos, rx781_bstack
    pop $I19, rx781_bstack
    lt rx781_pos, -1, rx781_done1535
    lt rx781_pos, 0, rx781_fail1537
    eq $I19, 0, rx781_fail1537
    nqp_islist $I20, rx781_cstack
    unless $I20, rx781_jump1538
    elements $I18, rx781_bstack
    le $I18, 0, rx781_cut1539
    dec $I18
    set $I18, rx781_bstack[$I18]
  rx781_cut1539:
    assign rx781_cstack, $I18
  rx781_jump1538:
    jump $I19
  rx781_done1535:
    rx781_cur."!cursor_fail"()
    .return (rx781_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<try>" :subid("cuid_75_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 900
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx785_tgt
    .local int rx785_pos
    .local int rx785_off
    .local int rx785_eos
    .local int rx785_rep
    .local pmc rx785_cur
    .local pmc rx785_curclass
    .local pmc rx785_bstack
    .local pmc rx785_cstack
    (rx785_cur, rx785_tgt, rx785_pos, rx785_curclass, rx785_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx785_cur
    length rx785_eos, rx785_tgt
    eq $I19, 1, rx785_restart1549
    gt rx785_pos, rx785_eos, rx785_fail1550
    repr_get_attr_int $I11, self, rx785_curclass, "$!from"
    ne $I11, -1, rxscan786_done1556
    goto rxscan786_scan1555
  rxscan786_loop1554:
    inc rx785_pos
    gt rx785_pos, rx785_eos, rx785_fail1550
    repr_bind_attr_int rx785_cur, rx785_curclass, "$!from", rx785_pos
  rxscan786_scan1555:
    nqp_rxmark rx785_bstack, rxscan786_loop1554, rx785_pos, 0
  rxscan786_done1556:
    nqp_rxmark rx785_bstack, rxcap787_fail1558, rx785_pos, 0
    add $I11, rx785_pos, 3
    gt $I11, rx785_eos, rx785_fail1550
    substr $S10, rx785_tgt, rx785_pos, 3
    ne $S10, ucs4:"try", rx785_fail1550
    add rx785_pos, 3
    nqp_rxpeek $I19, rx785_bstack, rxcap787_fail1558
    inc $I19
    set $I11, rx785_bstack[$I19]
    repr_bind_attr_int rx785_cur, rx785_curclass, "$!pos", rx785_pos
    $P11 = rx785_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx785_pos)
    rx785_cstack = rx785_cur."!cursor_capture"($P11, "sym")
    goto rxcap787_done1557
  rxcap787_fail1558:
    goto rx785_fail1550
  rxcap787_done1557:
    repr_bind_attr_int rx785_cur, rx785_curclass, "$!pos", rx785_pos
    $P11 = rx785_cur."blorst"()
    repr_get_attr_int $I11, $P11, rx785_curclass, "$!pos"
    lt $I11, 0, rx785_fail1550
    nqp_rxmark rx785_bstack, rxsubrule788_pass1559, -1, 0
  rxsubrule788_pass1559:
    rx785_cstack = rx785_cur."!cursor_capture"($P11, "blorst")
    repr_get_attr_int rx785_pos, $P11, rx785_curclass, "$!pos"
    rx785_cur."!cursor_pass"(rx785_pos, "statement_prefix:sym<try>", 'backtrack'=>1)
    .return (rx785_cur)
  rx785_restart1549:
    repr_get_attr_obj rx785_cstack, rx785_cur, rx785_curclass, "$!cstack"
  rx785_fail1550:
    unless rx785_bstack, rx785_done1548
    pop $I19, rx785_bstack
    if_null rx785_cstack, rx785_cstack_done1553
    unless rx785_cstack, rx785_cstack_done1553
    dec $I19
    set $P11, rx785_cstack[$I19]
  rx785_cstack_done1553:
    pop rx785_rep, rx785_bstack
    pop rx785_pos, rx785_bstack
    pop $I19, rx785_bstack
    lt rx785_pos, -1, rx785_done1548
    lt rx785_pos, 0, rx785_fail1550
    eq $I19, 0, rx785_fail1550
    nqp_islist $I20, rx785_cstack
    unless $I20, rx785_jump1551
    elements $I18, rx785_bstack
    le $I18, 0, rx785_cut1552
    dec $I18
    set $I18, rx785_bstack[$I18]
  rx785_cut1552:
    assign rx785_cstack, $I18
  rx785_jump1551:
    jump $I19
  rx785_done1548:
    rx785_cur."!cursor_fail"()
    .return (rx785_cur) 
.end
.HLL "nqp"
.namespace []
.sub "blorst" :subid("cuid_76_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 905
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx789_tgt
    .local int rx789_pos
    .local int rx789_off
    .local int rx789_eos
    .local int rx789_rep
    .local pmc rx789_cur
    .local pmc rx789_curclass
    .local pmc rx789_bstack
    .local pmc rx789_cstack
    (rx789_cur, rx789_tgt, rx789_pos, rx789_curclass, rx789_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx789_cur
    length rx789_eos, rx789_tgt
    eq $I19, 1, rx789_restart1562
    gt rx789_pos, rx789_eos, rx789_fail1563
    repr_get_attr_int $I11, self, rx789_curclass, "$!from"
    ne $I11, -1, rxscan790_done1569
    goto rxscan790_scan1568
  rxscan790_loop1567:
    inc rx789_pos
    gt rx789_pos, rx789_eos, rx789_fail1563
    repr_bind_attr_int rx789_cur, rx789_curclass, "$!from", rx789_pos
  rxscan790_scan1568:
    nqp_rxmark rx789_bstack, rxscan790_loop1567, rx789_pos, 0
  rxscan790_done1569:
    ge rx789_pos, rx789_eos, rx789_fail1563
    is_cclass $I11, .CCLASS_WHITESPACE, rx789_tgt, rx789_pos
    unless $I11, rx789_fail1563
    add rx789_pos, 1
    repr_bind_attr_int rx789_cur, rx789_curclass, "$!pos", rx789_pos
    $P11 = rx789_cur."ws"()
    repr_get_attr_int $I11, $P11, rx789_curclass, "$!pos"
    lt $I11, 0, rx789_fail1563
    repr_get_attr_int rx789_pos, $P11, rx789_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt792_01572
    nqp_push_label $P11, alt792_11574
    nqp_rxmark rx789_bstack, alt792_end1571, -1, 0
    rx789_cur."!alt"(rx789_pos, "alt_nfa__16_1360432461.016", $P11)
    goto rx789_fail1563
  alt792_01572:
    ge rx789_pos, rx789_eos, rx789_fail1563
    substr $S11, rx789_tgt, rx789_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx789_fail1563
    repr_bind_attr_int rx789_cur, rx789_curclass, "$!pos", rx789_pos
    $P11 = rx789_cur."block"()
    repr_get_attr_int $I11, $P11, rx789_curclass, "$!pos"
    lt $I11, 0, rx789_fail1563
    nqp_rxmark rx789_bstack, rxsubrule793_pass1573, -1, 0
  rxsubrule793_pass1573:
    rx789_cstack = rx789_cur."!cursor_capture"($P11, "block")
    repr_get_attr_int rx789_pos, $P11, rx789_curclass, "$!pos"
    goto alt792_end1571
  alt792_11574:
    repr_bind_attr_int rx789_cur, rx789_curclass, "$!pos", rx789_pos
    $P11 = rx789_cur."statement"()
    repr_get_attr_int $I11, $P11, rx789_curclass, "$!pos"
    lt $I11, 0, rx789_fail1563
    nqp_rxmark rx789_bstack, rxsubrule794_pass1575, -1, 0
  rxsubrule794_pass1575:
    rx789_cstack = rx789_cur."!cursor_capture"($P11, "statement")
    repr_get_attr_int rx789_pos, $P11, rx789_curclass, "$!pos"
    goto alt792_end1571
  alt792_end1571:
    nqp_rxcommit rx789_bstack, alt792_end1571
    rx789_cur."!cursor_pass"(rx789_pos, "blorst", 'backtrack'=>1)
    .return (rx789_cur)
  rx789_restart1562:
    repr_get_attr_obj rx789_cstack, rx789_cur, rx789_curclass, "$!cstack"
  rx789_fail1563:
    unless rx789_bstack, rx789_done1561
    pop $I19, rx789_bstack
    if_null rx789_cstack, rx789_cstack_done1566
    unless rx789_cstack, rx789_cstack_done1566
    dec $I19
    set $P11, rx789_cstack[$I19]
  rx789_cstack_done1566:
    pop rx789_rep, rx789_bstack
    pop rx789_pos, rx789_bstack
    pop $I19, rx789_bstack
    lt rx789_pos, -1, rx789_done1561
    lt rx789_pos, 0, rx789_fail1563
    eq $I19, 0, rx789_fail1563
    nqp_islist $I20, rx789_cstack
    unless $I20, rx789_jump1564
    elements $I18, rx789_bstack
    le $I18, 0, rx789_cut1565
    dec $I18
    set $I18, rx789_bstack[$I18]
  rx789_cut1565:
    assign rx789_cstack, $I18
  rx789_jump1564:
    jump $I19
  rx789_done1561:
    rx789_cur."!cursor_fail"()
    .return (rx789_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond" :subid("cuid_77_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 911
    .param pmc self 
    $P5001 = self."!protoregex"("statement_mod_cond")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond:sym<if>" :subid("cuid_78_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 913
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx795_tgt
    .local int rx795_pos
    .local int rx795_off
    .local int rx795_eos
    .local int rx795_rep
    .local pmc rx795_cur
    .local pmc rx795_curclass
    .local pmc rx795_bstack
    .local pmc rx795_cstack
    (rx795_cur, rx795_tgt, rx795_pos, rx795_curclass, rx795_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx795_cur
    length rx795_eos, rx795_tgt
    eq $I19, 1, rx795_restart1578
    gt rx795_pos, rx795_eos, rx795_fail1579
    repr_get_attr_int $I11, self, rx795_curclass, "$!from"
    ne $I11, -1, rxscan796_done1585
    goto rxscan796_scan1584
  rxscan796_loop1583:
    inc rx795_pos
    gt rx795_pos, rx795_eos, rx795_fail1579
    repr_bind_attr_int rx795_cur, rx795_curclass, "$!from", rx795_pos
  rxscan796_scan1584:
    nqp_rxmark rx795_bstack, rxscan796_loop1583, rx795_pos, 0
  rxscan796_done1585:
    nqp_rxmark rx795_bstack, rxcap797_fail1587, rx795_pos, 0
    add $I11, rx795_pos, 2
    gt $I11, rx795_eos, rx795_fail1579
    substr $S10, rx795_tgt, rx795_pos, 2
    ne $S10, ucs4:"if", rx795_fail1579
    add rx795_pos, 2
    nqp_rxpeek $I19, rx795_bstack, rxcap797_fail1587
    inc $I19
    set $I11, rx795_bstack[$I19]
    repr_bind_attr_int rx795_cur, rx795_curclass, "$!pos", rx795_pos
    $P11 = rx795_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx795_pos)
    rx795_cstack = rx795_cur."!cursor_capture"($P11, "sym")
    goto rxcap797_done1586
  rxcap797_fail1587:
    goto rx795_fail1579
  rxcap797_done1586:
    repr_bind_attr_int rx795_cur, rx795_curclass, "$!pos", rx795_pos
    $P11 = rx795_cur."ws"()
    repr_get_attr_int $I11, $P11, rx795_curclass, "$!pos"
    lt $I11, 0, rx795_fail1579
    repr_get_attr_int rx795_pos, $P11, rx795_curclass, "$!pos"
    repr_bind_attr_int rx795_cur, rx795_curclass, "$!pos", rx795_pos
    $P11 = rx795_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx795_curclass, "$!pos"
    lt $I11, 0, rx795_fail1579
    nqp_rxmark rx795_bstack, rxsubrule799_pass1589, -1, 0
  rxsubrule799_pass1589:
    rx795_cstack = rx795_cur."!cursor_capture"($P11, "cond")
    repr_get_attr_int rx795_pos, $P11, rx795_curclass, "$!pos"
    repr_bind_attr_int rx795_cur, rx795_curclass, "$!pos", rx795_pos
    $P11 = rx795_cur."ws"()
    repr_get_attr_int $I11, $P11, rx795_curclass, "$!pos"
    lt $I11, 0, rx795_fail1579
    repr_get_attr_int rx795_pos, $P11, rx795_curclass, "$!pos"
    rx795_cur."!cursor_pass"(rx795_pos, "statement_mod_cond:sym<if>", 'backtrack'=>1)
    .return (rx795_cur)
  rx795_restart1578:
    repr_get_attr_obj rx795_cstack, rx795_cur, rx795_curclass, "$!cstack"
  rx795_fail1579:
    unless rx795_bstack, rx795_done1577
    pop $I19, rx795_bstack
    if_null rx795_cstack, rx795_cstack_done1582
    unless rx795_cstack, rx795_cstack_done1582
    dec $I19
    set $P11, rx795_cstack[$I19]
  rx795_cstack_done1582:
    pop rx795_rep, rx795_bstack
    pop rx795_pos, rx795_bstack
    pop $I19, rx795_bstack
    lt rx795_pos, -1, rx795_done1577
    lt rx795_pos, 0, rx795_fail1579
    eq $I19, 0, rx795_fail1579
    nqp_islist $I20, rx795_cstack
    unless $I20, rx795_jump1580
    elements $I18, rx795_bstack
    le $I18, 0, rx795_cut1581
    dec $I18
    set $I18, rx795_bstack[$I18]
  rx795_cut1581:
    assign rx795_cstack, $I18
  rx795_jump1580:
    jump $I19
  rx795_done1577:
    rx795_cur."!cursor_fail"()
    .return (rx795_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond:sym<unless>" :subid("cuid_79_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 914
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx801_tgt
    .local int rx801_pos
    .local int rx801_off
    .local int rx801_eos
    .local int rx801_rep
    .local pmc rx801_cur
    .local pmc rx801_curclass
    .local pmc rx801_bstack
    .local pmc rx801_cstack
    (rx801_cur, rx801_tgt, rx801_pos, rx801_curclass, rx801_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx801_cur
    length rx801_eos, rx801_tgt
    eq $I19, 1, rx801_restart1593
    gt rx801_pos, rx801_eos, rx801_fail1594
    repr_get_attr_int $I11, self, rx801_curclass, "$!from"
    ne $I11, -1, rxscan802_done1600
    goto rxscan802_scan1599
  rxscan802_loop1598:
    inc rx801_pos
    gt rx801_pos, rx801_eos, rx801_fail1594
    repr_bind_attr_int rx801_cur, rx801_curclass, "$!from", rx801_pos
  rxscan802_scan1599:
    nqp_rxmark rx801_bstack, rxscan802_loop1598, rx801_pos, 0
  rxscan802_done1600:
    nqp_rxmark rx801_bstack, rxcap803_fail1602, rx801_pos, 0
    add $I11, rx801_pos, 6
    gt $I11, rx801_eos, rx801_fail1594
    substr $S10, rx801_tgt, rx801_pos, 6
    ne $S10, ucs4:"unless", rx801_fail1594
    add rx801_pos, 6
    nqp_rxpeek $I19, rx801_bstack, rxcap803_fail1602
    inc $I19
    set $I11, rx801_bstack[$I19]
    repr_bind_attr_int rx801_cur, rx801_curclass, "$!pos", rx801_pos
    $P11 = rx801_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx801_pos)
    rx801_cstack = rx801_cur."!cursor_capture"($P11, "sym")
    goto rxcap803_done1601
  rxcap803_fail1602:
    goto rx801_fail1594
  rxcap803_done1601:
    repr_bind_attr_int rx801_cur, rx801_curclass, "$!pos", rx801_pos
    $P11 = rx801_cur."ws"()
    repr_get_attr_int $I11, $P11, rx801_curclass, "$!pos"
    lt $I11, 0, rx801_fail1594
    repr_get_attr_int rx801_pos, $P11, rx801_curclass, "$!pos"
    repr_bind_attr_int rx801_cur, rx801_curclass, "$!pos", rx801_pos
    $P11 = rx801_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx801_curclass, "$!pos"
    lt $I11, 0, rx801_fail1594
    nqp_rxmark rx801_bstack, rxsubrule805_pass1604, -1, 0
  rxsubrule805_pass1604:
    rx801_cstack = rx801_cur."!cursor_capture"($P11, "cond")
    repr_get_attr_int rx801_pos, $P11, rx801_curclass, "$!pos"
    repr_bind_attr_int rx801_cur, rx801_curclass, "$!pos", rx801_pos
    $P11 = rx801_cur."ws"()
    repr_get_attr_int $I11, $P11, rx801_curclass, "$!pos"
    lt $I11, 0, rx801_fail1594
    repr_get_attr_int rx801_pos, $P11, rx801_curclass, "$!pos"
    rx801_cur."!cursor_pass"(rx801_pos, "statement_mod_cond:sym<unless>", 'backtrack'=>1)
    .return (rx801_cur)
  rx801_restart1593:
    repr_get_attr_obj rx801_cstack, rx801_cur, rx801_curclass, "$!cstack"
  rx801_fail1594:
    unless rx801_bstack, rx801_done1592
    pop $I19, rx801_bstack
    if_null rx801_cstack, rx801_cstack_done1597
    unless rx801_cstack, rx801_cstack_done1597
    dec $I19
    set $P11, rx801_cstack[$I19]
  rx801_cstack_done1597:
    pop rx801_rep, rx801_bstack
    pop rx801_pos, rx801_bstack
    pop $I19, rx801_bstack
    lt rx801_pos, -1, rx801_done1592
    lt rx801_pos, 0, rx801_fail1594
    eq $I19, 0, rx801_fail1594
    nqp_islist $I20, rx801_cstack
    unless $I20, rx801_jump1595
    elements $I18, rx801_bstack
    le $I18, 0, rx801_cut1596
    dec $I18
    set $I18, rx801_bstack[$I18]
  rx801_cut1596:
    assign rx801_cstack, $I18
  rx801_jump1595:
    jump $I19
  rx801_done1592:
    rx801_cur."!cursor_fail"()
    .return (rx801_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop" :subid("cuid_80_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 916
    .param pmc self 
    $P5001 = self."!protoregex"("statement_mod_loop")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<while>" :subid("cuid_81_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 918
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx807_tgt
    .local int rx807_pos
    .local int rx807_off
    .local int rx807_eos
    .local int rx807_rep
    .local pmc rx807_cur
    .local pmc rx807_curclass
    .local pmc rx807_bstack
    .local pmc rx807_cstack
    (rx807_cur, rx807_tgt, rx807_pos, rx807_curclass, rx807_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx807_cur
    length rx807_eos, rx807_tgt
    eq $I19, 1, rx807_restart1608
    gt rx807_pos, rx807_eos, rx807_fail1609
    repr_get_attr_int $I11, self, rx807_curclass, "$!from"
    ne $I11, -1, rxscan808_done1615
    goto rxscan808_scan1614
  rxscan808_loop1613:
    inc rx807_pos
    gt rx807_pos, rx807_eos, rx807_fail1609
    repr_bind_attr_int rx807_cur, rx807_curclass, "$!from", rx807_pos
  rxscan808_scan1614:
    nqp_rxmark rx807_bstack, rxscan808_loop1613, rx807_pos, 0
  rxscan808_done1615:
    nqp_rxmark rx807_bstack, rxcap809_fail1617, rx807_pos, 0
    add $I11, rx807_pos, 5
    gt $I11, rx807_eos, rx807_fail1609
    substr $S10, rx807_tgt, rx807_pos, 5
    ne $S10, ucs4:"while", rx807_fail1609
    add rx807_pos, 5
    nqp_rxpeek $I19, rx807_bstack, rxcap809_fail1617
    inc $I19
    set $I11, rx807_bstack[$I19]
    repr_bind_attr_int rx807_cur, rx807_curclass, "$!pos", rx807_pos
    $P11 = rx807_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx807_pos)
    rx807_cstack = rx807_cur."!cursor_capture"($P11, "sym")
    goto rxcap809_done1616
  rxcap809_fail1617:
    goto rx807_fail1609
  rxcap809_done1616:
    repr_bind_attr_int rx807_cur, rx807_curclass, "$!pos", rx807_pos
    $P11 = rx807_cur."ws"()
    repr_get_attr_int $I11, $P11, rx807_curclass, "$!pos"
    lt $I11, 0, rx807_fail1609
    repr_get_attr_int rx807_pos, $P11, rx807_curclass, "$!pos"
    repr_bind_attr_int rx807_cur, rx807_curclass, "$!pos", rx807_pos
    $P11 = rx807_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx807_curclass, "$!pos"
    lt $I11, 0, rx807_fail1609
    nqp_rxmark rx807_bstack, rxsubrule811_pass1619, -1, 0
  rxsubrule811_pass1619:
    rx807_cstack = rx807_cur."!cursor_capture"($P11, "cond")
    repr_get_attr_int rx807_pos, $P11, rx807_curclass, "$!pos"
    repr_bind_attr_int rx807_cur, rx807_curclass, "$!pos", rx807_pos
    $P11 = rx807_cur."ws"()
    repr_get_attr_int $I11, $P11, rx807_curclass, "$!pos"
    lt $I11, 0, rx807_fail1609
    repr_get_attr_int rx807_pos, $P11, rx807_curclass, "$!pos"
    rx807_cur."!cursor_pass"(rx807_pos, "statement_mod_loop:sym<while>", 'backtrack'=>1)
    .return (rx807_cur)
  rx807_restart1608:
    repr_get_attr_obj rx807_cstack, rx807_cur, rx807_curclass, "$!cstack"
  rx807_fail1609:
    unless rx807_bstack, rx807_done1607
    pop $I19, rx807_bstack
    if_null rx807_cstack, rx807_cstack_done1612
    unless rx807_cstack, rx807_cstack_done1612
    dec $I19
    set $P11, rx807_cstack[$I19]
  rx807_cstack_done1612:
    pop rx807_rep, rx807_bstack
    pop rx807_pos, rx807_bstack
    pop $I19, rx807_bstack
    lt rx807_pos, -1, rx807_done1607
    lt rx807_pos, 0, rx807_fail1609
    eq $I19, 0, rx807_fail1609
    nqp_islist $I20, rx807_cstack
    unless $I20, rx807_jump1610
    elements $I18, rx807_bstack
    le $I18, 0, rx807_cut1611
    dec $I18
    set $I18, rx807_bstack[$I18]
  rx807_cut1611:
    assign rx807_cstack, $I18
  rx807_jump1610:
    jump $I19
  rx807_done1607:
    rx807_cur."!cursor_fail"()
    .return (rx807_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<until>" :subid("cuid_82_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 919
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx813_tgt
    .local int rx813_pos
    .local int rx813_off
    .local int rx813_eos
    .local int rx813_rep
    .local pmc rx813_cur
    .local pmc rx813_curclass
    .local pmc rx813_bstack
    .local pmc rx813_cstack
    (rx813_cur, rx813_tgt, rx813_pos, rx813_curclass, rx813_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx813_cur
    length rx813_eos, rx813_tgt
    eq $I19, 1, rx813_restart1623
    gt rx813_pos, rx813_eos, rx813_fail1624
    repr_get_attr_int $I11, self, rx813_curclass, "$!from"
    ne $I11, -1, rxscan814_done1630
    goto rxscan814_scan1629
  rxscan814_loop1628:
    inc rx813_pos
    gt rx813_pos, rx813_eos, rx813_fail1624
    repr_bind_attr_int rx813_cur, rx813_curclass, "$!from", rx813_pos
  rxscan814_scan1629:
    nqp_rxmark rx813_bstack, rxscan814_loop1628, rx813_pos, 0
  rxscan814_done1630:
    nqp_rxmark rx813_bstack, rxcap815_fail1632, rx813_pos, 0
    add $I11, rx813_pos, 5
    gt $I11, rx813_eos, rx813_fail1624
    substr $S10, rx813_tgt, rx813_pos, 5
    ne $S10, ucs4:"until", rx813_fail1624
    add rx813_pos, 5
    nqp_rxpeek $I19, rx813_bstack, rxcap815_fail1632
    inc $I19
    set $I11, rx813_bstack[$I19]
    repr_bind_attr_int rx813_cur, rx813_curclass, "$!pos", rx813_pos
    $P11 = rx813_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx813_pos)
    rx813_cstack = rx813_cur."!cursor_capture"($P11, "sym")
    goto rxcap815_done1631
  rxcap815_fail1632:
    goto rx813_fail1624
  rxcap815_done1631:
    repr_bind_attr_int rx813_cur, rx813_curclass, "$!pos", rx813_pos
    $P11 = rx813_cur."ws"()
    repr_get_attr_int $I11, $P11, rx813_curclass, "$!pos"
    lt $I11, 0, rx813_fail1624
    repr_get_attr_int rx813_pos, $P11, rx813_curclass, "$!pos"
    repr_bind_attr_int rx813_cur, rx813_curclass, "$!pos", rx813_pos
    $P11 = rx813_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx813_curclass, "$!pos"
    lt $I11, 0, rx813_fail1624
    nqp_rxmark rx813_bstack, rxsubrule817_pass1634, -1, 0
  rxsubrule817_pass1634:
    rx813_cstack = rx813_cur."!cursor_capture"($P11, "cond")
    repr_get_attr_int rx813_pos, $P11, rx813_curclass, "$!pos"
    repr_bind_attr_int rx813_cur, rx813_curclass, "$!pos", rx813_pos
    $P11 = rx813_cur."ws"()
    repr_get_attr_int $I11, $P11, rx813_curclass, "$!pos"
    lt $I11, 0, rx813_fail1624
    repr_get_attr_int rx813_pos, $P11, rx813_curclass, "$!pos"
    rx813_cur."!cursor_pass"(rx813_pos, "statement_mod_loop:sym<until>", 'backtrack'=>1)
    .return (rx813_cur)
  rx813_restart1623:
    repr_get_attr_obj rx813_cstack, rx813_cur, rx813_curclass, "$!cstack"
  rx813_fail1624:
    unless rx813_bstack, rx813_done1622
    pop $I19, rx813_bstack
    if_null rx813_cstack, rx813_cstack_done1627
    unless rx813_cstack, rx813_cstack_done1627
    dec $I19
    set $P11, rx813_cstack[$I19]
  rx813_cstack_done1627:
    pop rx813_rep, rx813_bstack
    pop rx813_pos, rx813_bstack
    pop $I19, rx813_bstack
    lt rx813_pos, -1, rx813_done1622
    lt rx813_pos, 0, rx813_fail1624
    eq $I19, 0, rx813_fail1624
    nqp_islist $I20, rx813_cstack
    unless $I20, rx813_jump1625
    elements $I18, rx813_bstack
    le $I18, 0, rx813_cut1626
    dec $I18
    set $I18, rx813_bstack[$I18]
  rx813_cut1626:
    assign rx813_cstack, $I18
  rx813_jump1625:
    jump $I19
  rx813_done1622:
    rx813_cur."!cursor_fail"()
    .return (rx813_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<for>" :subid("cuid_83_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 920
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx819_tgt
    .local int rx819_pos
    .local int rx819_off
    .local int rx819_eos
    .local int rx819_rep
    .local pmc rx819_cur
    .local pmc rx819_curclass
    .local pmc rx819_bstack
    .local pmc rx819_cstack
    (rx819_cur, rx819_tgt, rx819_pos, rx819_curclass, rx819_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx819_cur
    length rx819_eos, rx819_tgt
    eq $I19, 1, rx819_restart1638
    gt rx819_pos, rx819_eos, rx819_fail1639
    repr_get_attr_int $I11, self, rx819_curclass, "$!from"
    ne $I11, -1, rxscan820_done1645
    goto rxscan820_scan1644
  rxscan820_loop1643:
    inc rx819_pos
    gt rx819_pos, rx819_eos, rx819_fail1639
    repr_bind_attr_int rx819_cur, rx819_curclass, "$!from", rx819_pos
  rxscan820_scan1644:
    nqp_rxmark rx819_bstack, rxscan820_loop1643, rx819_pos, 0
  rxscan820_done1645:
    nqp_rxmark rx819_bstack, rxcap821_fail1647, rx819_pos, 0
    add $I11, rx819_pos, 3
    gt $I11, rx819_eos, rx819_fail1639
    substr $S10, rx819_tgt, rx819_pos, 3
    ne $S10, ucs4:"for", rx819_fail1639
    add rx819_pos, 3
    nqp_rxpeek $I19, rx819_bstack, rxcap821_fail1647
    inc $I19
    set $I11, rx819_bstack[$I19]
    repr_bind_attr_int rx819_cur, rx819_curclass, "$!pos", rx819_pos
    $P11 = rx819_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx819_pos)
    rx819_cstack = rx819_cur."!cursor_capture"($P11, "sym")
    goto rxcap821_done1646
  rxcap821_fail1647:
    goto rx819_fail1639
  rxcap821_done1646:
    repr_bind_attr_int rx819_cur, rx819_curclass, "$!pos", rx819_pos
    $P11 = rx819_cur."ws"()
    repr_get_attr_int $I11, $P11, rx819_curclass, "$!pos"
    lt $I11, 0, rx819_fail1639
    repr_get_attr_int rx819_pos, $P11, rx819_curclass, "$!pos"
    repr_bind_attr_int rx819_cur, rx819_curclass, "$!pos", rx819_pos
    $P11 = rx819_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx819_curclass, "$!pos"
    lt $I11, 0, rx819_fail1639
    nqp_rxmark rx819_bstack, rxsubrule823_pass1649, -1, 0
  rxsubrule823_pass1649:
    rx819_cstack = rx819_cur."!cursor_capture"($P11, "cond")
    repr_get_attr_int rx819_pos, $P11, rx819_curclass, "$!pos"
    repr_bind_attr_int rx819_cur, rx819_curclass, "$!pos", rx819_pos
    $P11 = rx819_cur."ws"()
    repr_get_attr_int $I11, $P11, rx819_curclass, "$!pos"
    lt $I11, 0, rx819_fail1639
    repr_get_attr_int rx819_pos, $P11, rx819_curclass, "$!pos"
    rx819_cur."!cursor_pass"(rx819_pos, "statement_mod_loop:sym<for>", 'backtrack'=>1)
    .return (rx819_cur)
  rx819_restart1638:
    repr_get_attr_obj rx819_cstack, rx819_cur, rx819_curclass, "$!cstack"
  rx819_fail1639:
    unless rx819_bstack, rx819_done1637
    pop $I19, rx819_bstack
    if_null rx819_cstack, rx819_cstack_done1642
    unless rx819_cstack, rx819_cstack_done1642
    dec $I19
    set $P11, rx819_cstack[$I19]
  rx819_cstack_done1642:
    pop rx819_rep, rx819_bstack
    pop rx819_pos, rx819_bstack
    pop $I19, rx819_bstack
    lt rx819_pos, -1, rx819_done1637
    lt rx819_pos, 0, rx819_fail1639
    eq $I19, 0, rx819_fail1639
    nqp_islist $I20, rx819_cstack
    unless $I20, rx819_jump1640
    elements $I18, rx819_bstack
    le $I18, 0, rx819_cut1641
    dec $I18
    set $I18, rx819_bstack[$I18]
  rx819_cut1641:
    assign rx819_cstack, $I18
  rx819_jump1640:
    jump $I19
  rx819_done1637:
    rx819_cur."!cursor_fail"()
    .return (rx819_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<fatarrow>" :subid("cuid_84_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 924
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx825_tgt
    .local int rx825_pos
    .local int rx825_off
    .local int rx825_eos
    .local int rx825_rep
    .local pmc rx825_cur
    .local pmc rx825_curclass
    .local pmc rx825_bstack
    .local pmc rx825_cstack
    (rx825_cur, rx825_tgt, rx825_pos, rx825_curclass, rx825_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx825_cur
    length rx825_eos, rx825_tgt
    eq $I19, 1, rx825_restart1653
    gt rx825_pos, rx825_eos, rx825_fail1654
    repr_get_attr_int $I11, self, rx825_curclass, "$!from"
    ne $I11, -1, rxscan826_done1660
    goto rxscan826_scan1659
  rxscan826_loop1658:
    inc rx825_pos
    gt rx825_pos, rx825_eos, rx825_fail1654
    repr_bind_attr_int rx825_cur, rx825_curclass, "$!from", rx825_pos
  rxscan826_scan1659:
    nqp_rxmark rx825_bstack, rxscan826_loop1658, rx825_pos, 0
  rxscan826_done1660:
    repr_bind_attr_int rx825_cur, rx825_curclass, "$!pos", rx825_pos
    $P11 = rx825_cur."fatarrow"()
    repr_get_attr_int $I11, $P11, rx825_curclass, "$!pos"
    lt $I11, 0, rx825_fail1654
    nqp_rxmark rx825_bstack, rxsubrule827_pass1661, -1, 0
  rxsubrule827_pass1661:
    rx825_cstack = rx825_cur."!cursor_capture"($P11, "fatarrow")
    repr_get_attr_int rx825_pos, $P11, rx825_curclass, "$!pos"
    rx825_cur."!cursor_pass"(rx825_pos, "term:sym<fatarrow>", 'backtrack'=>1)
    .return (rx825_cur)
  rx825_restart1653:
    repr_get_attr_obj rx825_cstack, rx825_cur, rx825_curclass, "$!cstack"
  rx825_fail1654:
    unless rx825_bstack, rx825_done1652
    pop $I19, rx825_bstack
    if_null rx825_cstack, rx825_cstack_done1657
    unless rx825_cstack, rx825_cstack_done1657
    dec $I19
    set $P11, rx825_cstack[$I19]
  rx825_cstack_done1657:
    pop rx825_rep, rx825_bstack
    pop rx825_pos, rx825_bstack
    pop $I19, rx825_bstack
    lt rx825_pos, -1, rx825_done1652
    lt rx825_pos, 0, rx825_fail1654
    eq $I19, 0, rx825_fail1654
    nqp_islist $I20, rx825_cstack
    unless $I20, rx825_jump1655
    elements $I18, rx825_bstack
    le $I18, 0, rx825_cut1656
    dec $I18
    set $I18, rx825_bstack[$I18]
  rx825_cut1656:
    assign rx825_cstack, $I18
  rx825_jump1655:
    jump $I19
  rx825_done1652:
    rx825_cur."!cursor_fail"()
    .return (rx825_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<colonpair>" :subid("cuid_85_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 925
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx828_tgt
    .local int rx828_pos
    .local int rx828_off
    .local int rx828_eos
    .local int rx828_rep
    .local pmc rx828_cur
    .local pmc rx828_curclass
    .local pmc rx828_bstack
    .local pmc rx828_cstack
    (rx828_cur, rx828_tgt, rx828_pos, rx828_curclass, rx828_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx828_cur
    length rx828_eos, rx828_tgt
    eq $I19, 1, rx828_restart1664
    gt rx828_pos, rx828_eos, rx828_fail1665
    repr_get_attr_int $I11, self, rx828_curclass, "$!from"
    ne $I11, -1, rxscan829_done1671
    goto rxscan829_scan1670
  rxscan829_loop1669:
    inc rx828_pos
    gt rx828_pos, rx828_eos, rx828_fail1665
    repr_bind_attr_int rx828_cur, rx828_curclass, "$!from", rx828_pos
  rxscan829_scan1670:
    nqp_rxmark rx828_bstack, rxscan829_loop1669, rx828_pos, 0
  rxscan829_done1671:
    repr_bind_attr_int rx828_cur, rx828_curclass, "$!pos", rx828_pos
    $P11 = rx828_cur."colonpair"()
    repr_get_attr_int $I11, $P11, rx828_curclass, "$!pos"
    lt $I11, 0, rx828_fail1665
    nqp_rxmark rx828_bstack, rxsubrule830_pass1672, -1, 0
  rxsubrule830_pass1672:
    rx828_cstack = rx828_cur."!cursor_capture"($P11, "colonpair")
    repr_get_attr_int rx828_pos, $P11, rx828_curclass, "$!pos"
    rx828_cur."!cursor_pass"(rx828_pos, "term:sym<colonpair>", 'backtrack'=>1)
    .return (rx828_cur)
  rx828_restart1664:
    repr_get_attr_obj rx828_cstack, rx828_cur, rx828_curclass, "$!cstack"
  rx828_fail1665:
    unless rx828_bstack, rx828_done1663
    pop $I19, rx828_bstack
    if_null rx828_cstack, rx828_cstack_done1668
    unless rx828_cstack, rx828_cstack_done1668
    dec $I19
    set $P11, rx828_cstack[$I19]
  rx828_cstack_done1668:
    pop rx828_rep, rx828_bstack
    pop rx828_pos, rx828_bstack
    pop $I19, rx828_bstack
    lt rx828_pos, -1, rx828_done1663
    lt rx828_pos, 0, rx828_fail1665
    eq $I19, 0, rx828_fail1665
    nqp_islist $I20, rx828_cstack
    unless $I20, rx828_jump1666
    elements $I18, rx828_bstack
    le $I18, 0, rx828_cut1667
    dec $I18
    set $I18, rx828_bstack[$I18]
  rx828_cut1667:
    assign rx828_cstack, $I18
  rx828_jump1666:
    jump $I19
  rx828_done1663:
    rx828_cur."!cursor_fail"()
    .return (rx828_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<variable>" :subid("cuid_86_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 926
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx831_tgt
    .local int rx831_pos
    .local int rx831_off
    .local int rx831_eos
    .local int rx831_rep
    .local pmc rx831_cur
    .local pmc rx831_curclass
    .local pmc rx831_bstack
    .local pmc rx831_cstack
    (rx831_cur, rx831_tgt, rx831_pos, rx831_curclass, rx831_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx831_cur
    length rx831_eos, rx831_tgt
    eq $I19, 1, rx831_restart1675
    gt rx831_pos, rx831_eos, rx831_fail1676
    repr_get_attr_int $I11, self, rx831_curclass, "$!from"
    ne $I11, -1, rxscan832_done1682
    goto rxscan832_scan1681
  rxscan832_loop1680:
    inc rx831_pos
    gt rx831_pos, rx831_eos, rx831_fail1676
    repr_bind_attr_int rx831_cur, rx831_curclass, "$!from", rx831_pos
  rxscan832_scan1681:
    nqp_rxmark rx831_bstack, rxscan832_loop1680, rx831_pos, 0
  rxscan832_done1682:
    repr_bind_attr_int rx831_cur, rx831_curclass, "$!pos", rx831_pos
    $P11 = rx831_cur."variable"()
    repr_get_attr_int $I11, $P11, rx831_curclass, "$!pos"
    lt $I11, 0, rx831_fail1676
    nqp_rxmark rx831_bstack, rxsubrule833_pass1683, -1, 0
  rxsubrule833_pass1683:
    rx831_cstack = rx831_cur."!cursor_capture"($P11, "variable")
    repr_get_attr_int rx831_pos, $P11, rx831_curclass, "$!pos"
    rx831_cur."!cursor_pass"(rx831_pos, "term:sym<variable>", 'backtrack'=>1)
    .return (rx831_cur)
  rx831_restart1675:
    repr_get_attr_obj rx831_cstack, rx831_cur, rx831_curclass, "$!cstack"
  rx831_fail1676:
    unless rx831_bstack, rx831_done1674
    pop $I19, rx831_bstack
    if_null rx831_cstack, rx831_cstack_done1679
    unless rx831_cstack, rx831_cstack_done1679
    dec $I19
    set $P11, rx831_cstack[$I19]
  rx831_cstack_done1679:
    pop rx831_rep, rx831_bstack
    pop rx831_pos, rx831_bstack
    pop $I19, rx831_bstack
    lt rx831_pos, -1, rx831_done1674
    lt rx831_pos, 0, rx831_fail1676
    eq $I19, 0, rx831_fail1676
    nqp_islist $I20, rx831_cstack
    unless $I20, rx831_jump1677
    elements $I18, rx831_bstack
    le $I18, 0, rx831_cut1678
    dec $I18
    set $I18, rx831_bstack[$I18]
  rx831_cut1678:
    assign rx831_cstack, $I18
  rx831_jump1677:
    jump $I19
  rx831_done1674:
    rx831_cur."!cursor_fail"()
    .return (rx831_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<package_declarator>" :subid("cuid_87_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 927
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx834_tgt
    .local int rx834_pos
    .local int rx834_off
    .local int rx834_eos
    .local int rx834_rep
    .local pmc rx834_cur
    .local pmc rx834_curclass
    .local pmc rx834_bstack
    .local pmc rx834_cstack
    (rx834_cur, rx834_tgt, rx834_pos, rx834_curclass, rx834_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx834_cur
    length rx834_eos, rx834_tgt
    eq $I19, 1, rx834_restart1686
    gt rx834_pos, rx834_eos, rx834_fail1687
    repr_get_attr_int $I11, self, rx834_curclass, "$!from"
    ne $I11, -1, rxscan835_done1693
    goto rxscan835_scan1692
  rxscan835_loop1691:
    inc rx834_pos
    gt rx834_pos, rx834_eos, rx834_fail1687
    repr_bind_attr_int rx834_cur, rx834_curclass, "$!from", rx834_pos
  rxscan835_scan1692:
    nqp_rxmark rx834_bstack, rxscan835_loop1691, rx834_pos, 0
  rxscan835_done1693:
    repr_bind_attr_int rx834_cur, rx834_curclass, "$!pos", rx834_pos
    $P11 = rx834_cur."package_declarator"()
    repr_get_attr_int $I11, $P11, rx834_curclass, "$!pos"
    lt $I11, 0, rx834_fail1687
    nqp_rxmark rx834_bstack, rxsubrule836_pass1694, -1, 0
  rxsubrule836_pass1694:
    rx834_cstack = rx834_cur."!cursor_capture"($P11, "package_declarator")
    repr_get_attr_int rx834_pos, $P11, rx834_curclass, "$!pos"
    rx834_cur."!cursor_pass"(rx834_pos, "term:sym<package_declarator>", 'backtrack'=>1)
    .return (rx834_cur)
  rx834_restart1686:
    repr_get_attr_obj rx834_cstack, rx834_cur, rx834_curclass, "$!cstack"
  rx834_fail1687:
    unless rx834_bstack, rx834_done1685
    pop $I19, rx834_bstack
    if_null rx834_cstack, rx834_cstack_done1690
    unless rx834_cstack, rx834_cstack_done1690
    dec $I19
    set $P11, rx834_cstack[$I19]
  rx834_cstack_done1690:
    pop rx834_rep, rx834_bstack
    pop rx834_pos, rx834_bstack
    pop $I19, rx834_bstack
    lt rx834_pos, -1, rx834_done1685
    lt rx834_pos, 0, rx834_fail1687
    eq $I19, 0, rx834_fail1687
    nqp_islist $I20, rx834_cstack
    unless $I20, rx834_jump1688
    elements $I18, rx834_bstack
    le $I18, 0, rx834_cut1689
    dec $I18
    set $I18, rx834_bstack[$I18]
  rx834_cut1689:
    assign rx834_cstack, $I18
  rx834_jump1688:
    jump $I19
  rx834_done1685:
    rx834_cur."!cursor_fail"()
    .return (rx834_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<scope_declarator>" :subid("cuid_88_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 928
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx837_tgt
    .local int rx837_pos
    .local int rx837_off
    .local int rx837_eos
    .local int rx837_rep
    .local pmc rx837_cur
    .local pmc rx837_curclass
    .local pmc rx837_bstack
    .local pmc rx837_cstack
    (rx837_cur, rx837_tgt, rx837_pos, rx837_curclass, rx837_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx837_cur
    length rx837_eos, rx837_tgt
    eq $I19, 1, rx837_restart1697
    gt rx837_pos, rx837_eos, rx837_fail1698
    repr_get_attr_int $I11, self, rx837_curclass, "$!from"
    ne $I11, -1, rxscan838_done1704
    goto rxscan838_scan1703
  rxscan838_loop1702:
    inc rx837_pos
    gt rx837_pos, rx837_eos, rx837_fail1698
    repr_bind_attr_int rx837_cur, rx837_curclass, "$!from", rx837_pos
  rxscan838_scan1703:
    nqp_rxmark rx837_bstack, rxscan838_loop1702, rx837_pos, 0
  rxscan838_done1704:
    repr_bind_attr_int rx837_cur, rx837_curclass, "$!pos", rx837_pos
    $P11 = rx837_cur."scope_declarator"()
    repr_get_attr_int $I11, $P11, rx837_curclass, "$!pos"
    lt $I11, 0, rx837_fail1698
    nqp_rxmark rx837_bstack, rxsubrule839_pass1705, -1, 0
  rxsubrule839_pass1705:
    rx837_cstack = rx837_cur."!cursor_capture"($P11, "scope_declarator")
    repr_get_attr_int rx837_pos, $P11, rx837_curclass, "$!pos"
    rx837_cur."!cursor_pass"(rx837_pos, "term:sym<scope_declarator>", 'backtrack'=>1)
    .return (rx837_cur)
  rx837_restart1697:
    repr_get_attr_obj rx837_cstack, rx837_cur, rx837_curclass, "$!cstack"
  rx837_fail1698:
    unless rx837_bstack, rx837_done1696
    pop $I19, rx837_bstack
    if_null rx837_cstack, rx837_cstack_done1701
    unless rx837_cstack, rx837_cstack_done1701
    dec $I19
    set $P11, rx837_cstack[$I19]
  rx837_cstack_done1701:
    pop rx837_rep, rx837_bstack
    pop rx837_pos, rx837_bstack
    pop $I19, rx837_bstack
    lt rx837_pos, -1, rx837_done1696
    lt rx837_pos, 0, rx837_fail1698
    eq $I19, 0, rx837_fail1698
    nqp_islist $I20, rx837_cstack
    unless $I20, rx837_jump1699
    elements $I18, rx837_bstack
    le $I18, 0, rx837_cut1700
    dec $I18
    set $I18, rx837_bstack[$I18]
  rx837_cut1700:
    assign rx837_cstack, $I18
  rx837_jump1699:
    jump $I19
  rx837_done1696:
    rx837_cur."!cursor_fail"()
    .return (rx837_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<routine_declarator>" :subid("cuid_89_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 929
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx840_tgt
    .local int rx840_pos
    .local int rx840_off
    .local int rx840_eos
    .local int rx840_rep
    .local pmc rx840_cur
    .local pmc rx840_curclass
    .local pmc rx840_bstack
    .local pmc rx840_cstack
    (rx840_cur, rx840_tgt, rx840_pos, rx840_curclass, rx840_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx840_cur
    length rx840_eos, rx840_tgt
    eq $I19, 1, rx840_restart1708
    gt rx840_pos, rx840_eos, rx840_fail1709
    repr_get_attr_int $I11, self, rx840_curclass, "$!from"
    ne $I11, -1, rxscan841_done1715
    goto rxscan841_scan1714
  rxscan841_loop1713:
    inc rx840_pos
    gt rx840_pos, rx840_eos, rx840_fail1709
    repr_bind_attr_int rx840_cur, rx840_curclass, "$!from", rx840_pos
  rxscan841_scan1714:
    nqp_rxmark rx840_bstack, rxscan841_loop1713, rx840_pos, 0
  rxscan841_done1715:
    repr_bind_attr_int rx840_cur, rx840_curclass, "$!pos", rx840_pos
    $P11 = rx840_cur."routine_declarator"()
    repr_get_attr_int $I11, $P11, rx840_curclass, "$!pos"
    lt $I11, 0, rx840_fail1709
    nqp_rxmark rx840_bstack, rxsubrule842_pass1716, -1, 0
  rxsubrule842_pass1716:
    rx840_cstack = rx840_cur."!cursor_capture"($P11, "routine_declarator")
    repr_get_attr_int rx840_pos, $P11, rx840_curclass, "$!pos"
    rx840_cur."!cursor_pass"(rx840_pos, "term:sym<routine_declarator>", 'backtrack'=>1)
    .return (rx840_cur)
  rx840_restart1708:
    repr_get_attr_obj rx840_cstack, rx840_cur, rx840_curclass, "$!cstack"
  rx840_fail1709:
    unless rx840_bstack, rx840_done1707
    pop $I19, rx840_bstack
    if_null rx840_cstack, rx840_cstack_done1712
    unless rx840_cstack, rx840_cstack_done1712
    dec $I19
    set $P11, rx840_cstack[$I19]
  rx840_cstack_done1712:
    pop rx840_rep, rx840_bstack
    pop rx840_pos, rx840_bstack
    pop $I19, rx840_bstack
    lt rx840_pos, -1, rx840_done1707
    lt rx840_pos, 0, rx840_fail1709
    eq $I19, 0, rx840_fail1709
    nqp_islist $I20, rx840_cstack
    unless $I20, rx840_jump1710
    elements $I18, rx840_bstack
    le $I18, 0, rx840_cut1711
    dec $I18
    set $I18, rx840_bstack[$I18]
  rx840_cut1711:
    assign rx840_cstack, $I18
  rx840_jump1710:
    jump $I19
  rx840_done1707:
    rx840_cur."!cursor_fail"()
    .return (rx840_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<multi_declarator>" :subid("cuid_90_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 930
    .param pmc _lex_param_0 
    .const 'Sub' $P5003 = 'cuid_91_1360432459.413' 
    capture_lex $P5003 
    .const 'Sub' $P5003 = 'cuid_92_1360432459.413' 
    capture_lex $P5003 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx843_tgt
    .local int rx843_pos
    .local int rx843_off
    .local int rx843_eos
    .local int rx843_rep
    .local pmc rx843_cur
    .local pmc rx843_curclass
    .local pmc rx843_bstack
    .local pmc rx843_cstack
    (rx843_cur, rx843_tgt, rx843_pos, rx843_curclass, rx843_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx843_cur
    length rx843_eos, rx843_tgt
    eq $I19, 1, rx843_restart1719
    gt rx843_pos, rx843_eos, rx843_fail1720
    repr_get_attr_int $I11, self, rx843_curclass, "$!from"
    ne $I11, -1, rxscan844_done1726
    goto rxscan844_scan1725
  rxscan844_loop1724:
    inc rx843_pos
    gt rx843_pos, rx843_eos, rx843_fail1720
    repr_bind_attr_int rx843_cur, rx843_curclass, "$!from", rx843_pos
  rxscan844_scan1725:
    nqp_rxmark rx843_bstack, rxscan844_loop1724, rx843_pos, 0
  rxscan844_done1726:
    .const 'Sub' $P5001 = 'cuid_91_1360432459.413' 
    capture_lex $P5001
    repr_bind_attr_int rx843_cur, rx843_curclass, "$!pos", rx843_pos
    $P11 = rx843_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx843_curclass, "$!pos"
    lt $I11, 0, rx843_fail1720
    .const 'Sub' $P5002 = 'cuid_92_1360432459.413' 
    capture_lex $P5002
    repr_bind_attr_int rx843_cur, rx843_curclass, "$!pos", rx843_pos
    $P11 = rx843_cur."before"($P5002)
    repr_get_attr_int $I11, $P11, rx843_curclass, "$!pos"
    ge $I11, 0, rx843_fail1720
    repr_bind_attr_int rx843_cur, rx843_curclass, "$!pos", rx843_pos
    $P11 = rx843_cur."multi_declarator"()
    repr_get_attr_int $I11, $P11, rx843_curclass, "$!pos"
    lt $I11, 0, rx843_fail1720
    nqp_rxmark rx843_bstack, rxsubrule852_pass1756, -1, 0
  rxsubrule852_pass1756:
    rx843_cstack = rx843_cur."!cursor_capture"($P11, "multi_declarator")
    repr_get_attr_int rx843_pos, $P11, rx843_curclass, "$!pos"
    rx843_cur."!cursor_pass"(rx843_pos, "term:sym<multi_declarator>", 'backtrack'=>1)
    .return (rx843_cur)
  rx843_restart1719:
    repr_get_attr_obj rx843_cstack, rx843_cur, rx843_curclass, "$!cstack"
  rx843_fail1720:
    unless rx843_bstack, rx843_done1718
    pop $I19, rx843_bstack
    if_null rx843_cstack, rx843_cstack_done1723
    unless rx843_cstack, rx843_cstack_done1723
    dec $I19
    set $P11, rx843_cstack[$I19]
  rx843_cstack_done1723:
    pop rx843_rep, rx843_bstack
    pop rx843_pos, rx843_bstack
    pop $I19, rx843_bstack
    lt rx843_pos, -1, rx843_done1718
    lt rx843_pos, 0, rx843_fail1720
    eq $I19, 0, rx843_fail1720
    nqp_islist $I20, rx843_cstack
    unless $I20, rx843_jump1721
    elements $I18, rx843_bstack
    le $I18, 0, rx843_cut1722
    dec $I18
    set $I18, rx843_bstack[$I18]
  rx843_cut1722:
    assign rx843_cstack, $I18
  rx843_jump1721:
    jump $I19
  rx843_done1718:
    rx843_cur."!cursor_fail"()
    .return (rx843_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_91_1360432459.413") :anon :lex :outer("cuid_90_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local string rx845_tgt
    .local int rx845_pos
    .local int rx845_off
    .local int rx845_eos
    .local int rx845_rep
    .local pmc rx845_cur
    .local pmc rx845_curclass
    .local pmc rx845_bstack
    .local pmc rx845_cstack
    (rx845_cur, rx845_tgt, rx845_pos, rx845_curclass, rx845_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx845_cur
    length rx845_eos, rx845_tgt
    eq $I19, 1, rx845_restart1729
    gt rx845_pos, rx845_eos, rx845_fail1730
    repr_get_attr_int $I11, self, rx845_curclass, "$!from"
    ne $I11, -1, rxscan846_done1736
    goto rxscan846_scan1735
  rxscan846_loop1734:
    inc rx845_pos
    gt rx845_pos, rx845_eos, rx845_fail1730
    repr_bind_attr_int rx845_cur, rx845_curclass, "$!from", rx845_pos
  rxscan846_scan1735:
    nqp_rxmark rx845_bstack, rxscan846_loop1734, rx845_pos, 0
  rxscan846_done1736:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt847_01738
    nqp_push_label $P11, alt847_11739
    nqp_push_label $P11, alt847_21740
    nqp_rxmark rx845_bstack, alt847_end1737, -1, 0
    rx845_cur."!alt"(rx845_pos, "alt_nfa__17_1360432461.082", $P11)
    goto rx845_fail1730
  alt847_01738:
    add $I11, rx845_pos, 5
    gt $I11, rx845_eos, rx845_fail1730
    substr $S10, rx845_tgt, rx845_pos, 5
    ne $S10, ucs4:"multi", rx845_fail1730
    add rx845_pos, 5
    goto alt847_end1737
  alt847_11739:
    add $I11, rx845_pos, 5
    gt $I11, rx845_eos, rx845_fail1730
    substr $S10, rx845_tgt, rx845_pos, 5
    ne $S10, ucs4:"proto", rx845_fail1730
    add rx845_pos, 5
    goto alt847_end1737
  alt847_21740:
    add $I11, rx845_pos, 4
    gt $I11, rx845_eos, rx845_fail1730
    substr $S10, rx845_tgt, rx845_pos, 4
    ne $S10, ucs4:"only", rx845_fail1730
    add rx845_pos, 4
    goto alt847_end1737
  alt847_end1737:
    rx845_cur."!cursor_pass"(rx845_pos, 'backtrack'=>1)
    .return (rx845_cur)
  rx845_restart1729:
    repr_get_attr_obj rx845_cstack, rx845_cur, rx845_curclass, "$!cstack"
  rx845_fail1730:
    unless rx845_bstack, rx845_done1728
    pop $I19, rx845_bstack
    if_null rx845_cstack, rx845_cstack_done1733
    unless rx845_cstack, rx845_cstack_done1733
    dec $I19
    set $P11, rx845_cstack[$I19]
  rx845_cstack_done1733:
    pop rx845_rep, rx845_bstack
    pop rx845_pos, rx845_bstack
    pop $I19, rx845_bstack
    lt rx845_pos, -1, rx845_done1728
    lt rx845_pos, 0, rx845_fail1730
    eq $I19, 0, rx845_fail1730
    nqp_islist $I20, rx845_cstack
    unless $I20, rx845_jump1731
    elements $I18, rx845_bstack
    le $I18, 0, rx845_cut1732
    dec $I18
    set $I18, rx845_bstack[$I18]
  rx845_cut1732:
    assign rx845_cstack, $I18
  rx845_jump1731:
    jump $I19
  rx845_done1728:
    rx845_cur."!cursor_fail"()
    .return (rx845_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_92_1360432459.413") :anon :lex :outer("cuid_90_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local string rx848_tgt
    .local int rx848_pos
    .local int rx848_off
    .local int rx848_eos
    .local int rx848_rep
    .local pmc rx848_cur
    .local pmc rx848_curclass
    .local pmc rx848_bstack
    .local pmc rx848_cstack
    (rx848_cur, rx848_tgt, rx848_pos, rx848_curclass, rx848_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx848_cur
    length rx848_eos, rx848_tgt
    eq $I19, 1, rx848_restart1743
    gt rx848_pos, rx848_eos, rx848_fail1744
    repr_get_attr_int $I11, self, rx848_curclass, "$!from"
    ne $I11, -1, rxscan849_done1750
    goto rxscan849_scan1749
  rxscan849_loop1748:
    inc rx848_pos
    gt rx848_pos, rx848_eos, rx848_fail1744
    repr_bind_attr_int rx848_cur, rx848_curclass, "$!from", rx848_pos
  rxscan849_scan1749:
    nqp_rxmark rx848_bstack, rxscan849_loop1748, rx848_pos, 0
  rxscan849_done1750:
    add $I11, rx848_pos, 5
    gt $I11, rx848_eos, rx848_fail1744
    substr $S10, rx848_tgt, rx848_pos, 5
    ne $S10, ucs4:"proto", rx848_fail1744
    add rx848_pos, 5
    repr_bind_attr_int rx848_cur, rx848_curclass, "$!pos", rx848_pos
    $P11 = rx848_cur."ws"()
    repr_get_attr_int $I11, $P11, rx848_curclass, "$!pos"
    lt $I11, 0, rx848_fail1744
    repr_get_attr_int rx848_pos, $P11, rx848_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt851_01753
    nqp_push_label $P11, alt851_11754
    nqp_push_label $P11, alt851_21755
    nqp_rxmark rx848_bstack, alt851_end1752, -1, 0
    rx848_cur."!alt"(rx848_pos, "alt_nfa__18_1360432461.089", $P11)
    goto rx848_fail1744
  alt851_01753:
    add $I11, rx848_pos, 5
    gt $I11, rx848_eos, rx848_fail1744
    substr $S10, rx848_tgt, rx848_pos, 5
    ne $S10, ucs4:"regex", rx848_fail1744
    add rx848_pos, 5
    goto alt851_end1752
  alt851_11754:
    add $I11, rx848_pos, 5
    gt $I11, rx848_eos, rx848_fail1744
    substr $S10, rx848_tgt, rx848_pos, 5
    ne $S10, ucs4:"token", rx848_fail1744
    add rx848_pos, 5
    goto alt851_end1752
  alt851_21755:
    add $I11, rx848_pos, 4
    gt $I11, rx848_eos, rx848_fail1744
    substr $S10, rx848_tgt, rx848_pos, 4
    ne $S10, ucs4:"rule", rx848_fail1744
    add rx848_pos, 4
    goto alt851_end1752
  alt851_end1752:
    nqp_rxcommit rx848_bstack, alt851_end1752
    rx848_cur."!cursor_pass"(rx848_pos, 'backtrack'=>1)
    .return (rx848_cur)
  rx848_restart1743:
    repr_get_attr_obj rx848_cstack, rx848_cur, rx848_curclass, "$!cstack"
  rx848_fail1744:
    unless rx848_bstack, rx848_done1742
    pop $I19, rx848_bstack
    if_null rx848_cstack, rx848_cstack_done1747
    unless rx848_cstack, rx848_cstack_done1747
    dec $I19
    set $P11, rx848_cstack[$I19]
  rx848_cstack_done1747:
    pop rx848_rep, rx848_bstack
    pop rx848_pos, rx848_bstack
    pop $I19, rx848_bstack
    lt rx848_pos, -1, rx848_done1742
    lt rx848_pos, 0, rx848_fail1744
    eq $I19, 0, rx848_fail1744
    nqp_islist $I20, rx848_cstack
    unless $I20, rx848_jump1745
    elements $I18, rx848_bstack
    le $I18, 0, rx848_cut1746
    dec $I18
    set $I18, rx848_bstack[$I18]
  rx848_cut1746:
    assign rx848_cstack, $I18
  rx848_jump1745:
    jump $I19
  rx848_done1742:
    rx848_cur."!cursor_fail"()
    .return (rx848_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<regex_declarator>" :subid("cuid_93_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 935
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx853_tgt
    .local int rx853_pos
    .local int rx853_off
    .local int rx853_eos
    .local int rx853_rep
    .local pmc rx853_cur
    .local pmc rx853_curclass
    .local pmc rx853_bstack
    .local pmc rx853_cstack
    (rx853_cur, rx853_tgt, rx853_pos, rx853_curclass, rx853_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx853_cur
    length rx853_eos, rx853_tgt
    eq $I19, 1, rx853_restart1759
    gt rx853_pos, rx853_eos, rx853_fail1760
    repr_get_attr_int $I11, self, rx853_curclass, "$!from"
    ne $I11, -1, rxscan854_done1766
    goto rxscan854_scan1765
  rxscan854_loop1764:
    inc rx853_pos
    gt rx853_pos, rx853_eos, rx853_fail1760
    repr_bind_attr_int rx853_cur, rx853_curclass, "$!from", rx853_pos
  rxscan854_scan1765:
    nqp_rxmark rx853_bstack, rxscan854_loop1764, rx853_pos, 0
  rxscan854_done1766:
    repr_bind_attr_int rx853_cur, rx853_curclass, "$!pos", rx853_pos
    $P11 = rx853_cur."regex_declarator"()
    repr_get_attr_int $I11, $P11, rx853_curclass, "$!pos"
    lt $I11, 0, rx853_fail1760
    nqp_rxmark rx853_bstack, rxsubrule855_pass1767, -1, 0
  rxsubrule855_pass1767:
    rx853_cstack = rx853_cur."!cursor_capture"($P11, "regex_declarator")
    repr_get_attr_int rx853_pos, $P11, rx853_curclass, "$!pos"
    rx853_cur."!cursor_pass"(rx853_pos, "term:sym<regex_declarator>", 'backtrack'=>1)
    .return (rx853_cur)
  rx853_restart1759:
    repr_get_attr_obj rx853_cstack, rx853_cur, rx853_curclass, "$!cstack"
  rx853_fail1760:
    unless rx853_bstack, rx853_done1758
    pop $I19, rx853_bstack
    if_null rx853_cstack, rx853_cstack_done1763
    unless rx853_cstack, rx853_cstack_done1763
    dec $I19
    set $P11, rx853_cstack[$I19]
  rx853_cstack_done1763:
    pop rx853_rep, rx853_bstack
    pop rx853_pos, rx853_bstack
    pop $I19, rx853_bstack
    lt rx853_pos, -1, rx853_done1758
    lt rx853_pos, 0, rx853_fail1760
    eq $I19, 0, rx853_fail1760
    nqp_islist $I20, rx853_cstack
    unless $I20, rx853_jump1761
    elements $I18, rx853_bstack
    le $I18, 0, rx853_cut1762
    dec $I18
    set $I18, rx853_bstack[$I18]
  rx853_cut1762:
    assign rx853_cstack, $I18
  rx853_jump1761:
    jump $I19
  rx853_done1758:
    rx853_cur."!cursor_fail"()
    .return (rx853_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<statement_prefix>" :subid("cuid_94_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 936
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx856_tgt
    .local int rx856_pos
    .local int rx856_off
    .local int rx856_eos
    .local int rx856_rep
    .local pmc rx856_cur
    .local pmc rx856_curclass
    .local pmc rx856_bstack
    .local pmc rx856_cstack
    (rx856_cur, rx856_tgt, rx856_pos, rx856_curclass, rx856_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx856_cur
    length rx856_eos, rx856_tgt
    eq $I19, 1, rx856_restart1770
    gt rx856_pos, rx856_eos, rx856_fail1771
    repr_get_attr_int $I11, self, rx856_curclass, "$!from"
    ne $I11, -1, rxscan857_done1777
    goto rxscan857_scan1776
  rxscan857_loop1775:
    inc rx856_pos
    gt rx856_pos, rx856_eos, rx856_fail1771
    repr_bind_attr_int rx856_cur, rx856_curclass, "$!from", rx856_pos
  rxscan857_scan1776:
    nqp_rxmark rx856_bstack, rxscan857_loop1775, rx856_pos, 0
  rxscan857_done1777:
    repr_bind_attr_int rx856_cur, rx856_curclass, "$!pos", rx856_pos
    $P11 = rx856_cur."statement_prefix"()
    repr_get_attr_int $I11, $P11, rx856_curclass, "$!pos"
    lt $I11, 0, rx856_fail1771
    nqp_rxmark rx856_bstack, rxsubrule858_pass1778, -1, 0
  rxsubrule858_pass1778:
    rx856_cstack = rx856_cur."!cursor_capture"($P11, "statement_prefix")
    repr_get_attr_int rx856_pos, $P11, rx856_curclass, "$!pos"
    rx856_cur."!cursor_pass"(rx856_pos, "term:sym<statement_prefix>", 'backtrack'=>1)
    .return (rx856_cur)
  rx856_restart1770:
    repr_get_attr_obj rx856_cstack, rx856_cur, rx856_curclass, "$!cstack"
  rx856_fail1771:
    unless rx856_bstack, rx856_done1769
    pop $I19, rx856_bstack
    if_null rx856_cstack, rx856_cstack_done1774
    unless rx856_cstack, rx856_cstack_done1774
    dec $I19
    set $P11, rx856_cstack[$I19]
  rx856_cstack_done1774:
    pop rx856_rep, rx856_bstack
    pop rx856_pos, rx856_bstack
    pop $I19, rx856_bstack
    lt rx856_pos, -1, rx856_done1769
    lt rx856_pos, 0, rx856_fail1771
    eq $I19, 0, rx856_fail1771
    nqp_islist $I20, rx856_cstack
    unless $I20, rx856_jump1772
    elements $I18, rx856_bstack
    le $I18, 0, rx856_cut1773
    dec $I18
    set $I18, rx856_bstack[$I18]
  rx856_cut1773:
    assign rx856_cstack, $I18
  rx856_jump1772:
    jump $I19
  rx856_done1769:
    rx856_cur."!cursor_fail"()
    .return (rx856_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<lambda>" :subid("cuid_95_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 937
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx859_tgt
    .local int rx859_pos
    .local int rx859_off
    .local int rx859_eos
    .local int rx859_rep
    .local pmc rx859_cur
    .local pmc rx859_curclass
    .local pmc rx859_bstack
    .local pmc rx859_cstack
    (rx859_cur, rx859_tgt, rx859_pos, rx859_curclass, rx859_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx859_cur
    length rx859_eos, rx859_tgt
    eq $I19, 1, rx859_restart1781
    gt rx859_pos, rx859_eos, rx859_fail1782
    repr_get_attr_int $I11, self, rx859_curclass, "$!from"
    ne $I11, -1, rxscan860_done1788
    goto rxscan860_scan1787
  rxscan860_loop1786:
    inc rx859_pos
    gt rx859_pos, rx859_eos, rx859_fail1782
    repr_bind_attr_int rx859_cur, rx859_curclass, "$!from", rx859_pos
  rxscan860_scan1787:
    nqp_rxmark rx859_bstack, rxscan860_loop1786, rx859_pos, 0
  rxscan860_done1788:
    repr_bind_attr_int rx859_cur, rx859_curclass, "$!pos", rx859_pos
    $P11 = rx859_cur."lambda"()
    repr_get_attr_int $I11, $P11, rx859_curclass, "$!pos"
    lt $I11, 0, rx859_fail1782
    repr_bind_attr_int rx859_cur, rx859_curclass, "$!pos", rx859_pos
    $P11 = rx859_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx859_curclass, "$!pos"
    lt $I11, 0, rx859_fail1782
    nqp_rxmark rx859_bstack, rxsubrule861_pass1789, -1, 0
  rxsubrule861_pass1789:
    rx859_cstack = rx859_cur."!cursor_capture"($P11, "pblock")
    repr_get_attr_int rx859_pos, $P11, rx859_curclass, "$!pos"
    rx859_cur."!cursor_pass"(rx859_pos, "term:sym<lambda>", 'backtrack'=>1)
    .return (rx859_cur)
  rx859_restart1781:
    repr_get_attr_obj rx859_cstack, rx859_cur, rx859_curclass, "$!cstack"
  rx859_fail1782:
    unless rx859_bstack, rx859_done1780
    pop $I19, rx859_bstack
    if_null rx859_cstack, rx859_cstack_done1785
    unless rx859_cstack, rx859_cstack_done1785
    dec $I19
    set $P11, rx859_cstack[$I19]
  rx859_cstack_done1785:
    pop rx859_rep, rx859_bstack
    pop rx859_pos, rx859_bstack
    pop $I19, rx859_bstack
    lt rx859_pos, -1, rx859_done1780
    lt rx859_pos, 0, rx859_fail1782
    eq $I19, 0, rx859_fail1782
    nqp_islist $I20, rx859_cstack
    unless $I20, rx859_jump1783
    elements $I18, rx859_bstack
    le $I18, 0, rx859_cut1784
    dec $I18
    set $I18, rx859_bstack[$I18]
  rx859_cut1784:
    assign rx859_cstack, $I18
  rx859_jump1783:
    jump $I19
  rx859_done1780:
    rx859_cur."!cursor_fail"()
    .return (rx859_cur) 
.end
.HLL "nqp"
.namespace []
.sub "fatarrow" :subid("cuid_96_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 939
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx862_tgt
    .local int rx862_pos
    .local int rx862_off
    .local int rx862_eos
    .local int rx862_rep
    .local pmc rx862_cur
    .local pmc rx862_curclass
    .local pmc rx862_bstack
    .local pmc rx862_cstack
    (rx862_cur, rx862_tgt, rx862_pos, rx862_curclass, rx862_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx862_cur
    length rx862_eos, rx862_tgt
    eq $I19, 1, rx862_restart1792
    gt rx862_pos, rx862_eos, rx862_fail1793
    repr_get_attr_int $I11, self, rx862_curclass, "$!from"
    ne $I11, -1, rxscan863_done1799
    goto rxscan863_scan1798
  rxscan863_loop1797:
    inc rx862_pos
    gt rx862_pos, rx862_eos, rx862_fail1793
    repr_bind_attr_int rx862_cur, rx862_curclass, "$!from", rx862_pos
  rxscan863_scan1798:
    nqp_rxmark rx862_bstack, rxscan863_loop1797, rx862_pos, 0
  rxscan863_done1799:
    repr_bind_attr_int rx862_cur, rx862_curclass, "$!pos", rx862_pos
    $P11 = rx862_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx862_curclass, "$!pos"
    lt $I11, 0, rx862_fail1793
    nqp_rxmark rx862_bstack, rxsubrule864_pass1800, -1, 0
  rxsubrule864_pass1800:
    rx862_cstack = rx862_cur."!cursor_capture"($P11, "key")
    repr_get_attr_int rx862_pos, $P11, rx862_curclass, "$!pos"
    nqp_rxmark rx862_bstack, rxquantr865_done1802, rx862_pos, 0
  rxquantr865_loop1801:
    ge rx862_pos, rx862_eos, rx862_fail1793
    substr $S11, rx862_tgt, rx862_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx862_fail1793
    inc rx862_pos
    nqp_rxpeek $I19, rx862_bstack, rxquantr865_done1802
    inc $I19
    inc $I19
    set rx862_rep, rx862_bstack[$I19]
    nqp_rxcommit rx862_bstack, rxquantr865_done1802
    inc rx862_rep
    nqp_rxmark rx862_bstack, rxquantr865_done1802, rx862_pos, rx862_rep
    goto rxquantr865_loop1801
  rxquantr865_done1802:
    add $I11, rx862_pos, 2
    gt $I11, rx862_eos, rx862_fail1793
    substr $S10, rx862_tgt, rx862_pos, 2
    ne $S10, ucs4:"=>", rx862_fail1793
    add rx862_pos, 2
    repr_bind_attr_int rx862_cur, rx862_curclass, "$!pos", rx862_pos
    $P11 = rx862_cur."ws"()
    repr_get_attr_int $I11, $P11, rx862_curclass, "$!pos"
    lt $I11, 0, rx862_fail1793
    repr_get_attr_int rx862_pos, $P11, rx862_curclass, "$!pos"
    repr_bind_attr_int rx862_cur, rx862_curclass, "$!pos", rx862_pos
    $P11 = rx862_cur."EXPR"("i=")
    repr_get_attr_int $I11, $P11, rx862_curclass, "$!pos"
    lt $I11, 0, rx862_fail1793
    nqp_rxmark rx862_bstack, rxsubrule867_pass1804, -1, 0
  rxsubrule867_pass1804:
    rx862_cstack = rx862_cur."!cursor_capture"($P11, "val")
    repr_get_attr_int rx862_pos, $P11, rx862_curclass, "$!pos"
    rx862_cur."!cursor_pass"(rx862_pos, "fatarrow", 'backtrack'=>1)
    .return (rx862_cur)
  rx862_restart1792:
    repr_get_attr_obj rx862_cstack, rx862_cur, rx862_curclass, "$!cstack"
  rx862_fail1793:
    unless rx862_bstack, rx862_done1791
    pop $I19, rx862_bstack
    if_null rx862_cstack, rx862_cstack_done1796
    unless rx862_cstack, rx862_cstack_done1796
    dec $I19
    set $P11, rx862_cstack[$I19]
  rx862_cstack_done1796:
    pop rx862_rep, rx862_bstack
    pop rx862_pos, rx862_bstack
    pop $I19, rx862_bstack
    lt rx862_pos, -1, rx862_done1791
    lt rx862_pos, 0, rx862_fail1793
    eq $I19, 0, rx862_fail1793
    nqp_islist $I20, rx862_cstack
    unless $I20, rx862_jump1794
    elements $I18, rx862_bstack
    le $I18, 0, rx862_cut1795
    dec $I18
    set $I18, rx862_bstack[$I18]
  rx862_cut1795:
    assign rx862_cstack, $I18
  rx862_jump1794:
    jump $I19
  rx862_done1791:
    rx862_cur."!cursor_fail"()
    .return (rx862_cur) 
.end
.HLL "nqp"
.namespace []
.sub "colonpair" :subid("cuid_97_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 943
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx868_tgt
    .local int rx868_pos
    .local int rx868_off
    .local int rx868_eos
    .local int rx868_rep
    .local pmc rx868_cur
    .local pmc rx868_curclass
    .local pmc rx868_bstack
    .local pmc rx868_cstack
    (rx868_cur, rx868_tgt, rx868_pos, rx868_curclass, rx868_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx868_cur
    length rx868_eos, rx868_tgt
    eq $I19, 1, rx868_restart1807
    gt rx868_pos, rx868_eos, rx868_fail1808
    repr_get_attr_int $I11, self, rx868_curclass, "$!from"
    ne $I11, -1, rxscan869_done1814
    goto rxscan869_scan1813
  rxscan869_loop1812:
    inc rx868_pos
    gt rx868_pos, rx868_eos, rx868_fail1808
    repr_bind_attr_int rx868_cur, rx868_curclass, "$!from", rx868_pos
  rxscan869_scan1813:
    nqp_rxmark rx868_bstack, rxscan869_loop1812, rx868_pos, 0
  rxscan869_done1814:
    add $I11, rx868_pos, 1
    gt $I11, rx868_eos, rx868_fail1808
    substr $S10, rx868_tgt, rx868_pos, 1
    ne $S10, ucs4:":", rx868_fail1808
    add rx868_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt870_01816
    nqp_push_label $P11, alt870_11820
    nqp_push_label $P11, alt870_21826
    nqp_push_label $P11, alt870_31828
    nqp_rxmark rx868_bstack, alt870_end1815, -1, 0
    rx868_cur."!alt"(rx868_pos, "alt_nfa__19_1360432461.126", $P11)
    goto rx868_fail1808
  alt870_01816:
    nqp_rxmark rx868_bstack, rxcap871_fail1818, rx868_pos, 0
    add $I11, rx868_pos, 1
    gt $I11, rx868_eos, rx868_fail1808
    substr $S10, rx868_tgt, rx868_pos, 1
    ne $S10, ucs4:"!", rx868_fail1808
    add rx868_pos, 1
    nqp_rxpeek $I19, rx868_bstack, rxcap871_fail1818
    inc $I19
    set $I11, rx868_bstack[$I19]
    repr_bind_attr_int rx868_cur, rx868_curclass, "$!pos", rx868_pos
    $P11 = rx868_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx868_pos)
    rx868_cstack = rx868_cur."!cursor_capture"($P11, "not")
    goto rxcap871_done1817
  rxcap871_fail1818:
    goto rx868_fail1808
  rxcap871_done1817:
    repr_bind_attr_int rx868_cur, rx868_curclass, "$!pos", rx868_pos
    $P11 = rx868_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx868_curclass, "$!pos"
    lt $I11, 0, rx868_fail1808
    nqp_rxmark rx868_bstack, rxsubrule872_pass1819, -1, 0
  rxsubrule872_pass1819:
    rx868_cstack = rx868_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx868_pos, $P11, rx868_curclass, "$!pos"
    goto alt870_end1815
  alt870_11820:
    repr_bind_attr_int rx868_cur, rx868_curclass, "$!pos", rx868_pos
    $P11 = rx868_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx868_curclass, "$!pos"
    lt $I11, 0, rx868_fail1808
    nqp_rxmark rx868_bstack, rxsubrule873_pass1821, -1, 0
  rxsubrule873_pass1821:
    rx868_cstack = rx868_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx868_pos, $P11, rx868_curclass, "$!pos"
    nqp_rxmark rx868_bstack, rxquantr874_done1823, rx868_pos, 0
  rxquantr874_loop1822:
    repr_bind_attr_int rx868_cur, rx868_curclass, "$!pos", rx868_pos
    $P11 = rx868_cur."circumfix"()
    repr_get_attr_int $I11, $P11, rx868_curclass, "$!pos"
    lt $I11, 0, rx868_fail1808
    goto rxsubrule875_pass1824
  rxsubrule875_back1825:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx868_curclass, "$!pos"
    lt $I11, 0, rx868_fail1808
  rxsubrule875_pass1824:
    rx868_cstack = rx868_cur."!cursor_capture"($P11, "circumfix")
    set_addr $I11, rxsubrule875_back1825
    push rx868_bstack, $I11
    push rx868_bstack, 0
    push rx868_bstack, rx868_pos
    elements $I11, rx868_cstack
    push rx868_bstack, $I11
    repr_get_attr_int rx868_pos, $P11, rx868_curclass, "$!pos"
    nqp_rxpeek $I19, rx868_bstack, rxquantr874_done1823
    inc $I19
    inc $I19
    set rx868_rep, rx868_bstack[$I19]
    nqp_rxcommit rx868_bstack, rxquantr874_done1823
    inc rx868_rep
  rxquantr874_done1823:
    goto alt870_end1815
  alt870_21826:
    repr_bind_attr_int rx868_cur, rx868_curclass, "$!pos", rx868_pos
    $P11 = rx868_cur."circumfix"()
    repr_get_attr_int $I11, $P11, rx868_curclass, "$!pos"
    lt $I11, 0, rx868_fail1808
    nqp_rxmark rx868_bstack, rxsubrule876_pass1827, -1, 0
  rxsubrule876_pass1827:
    rx868_cstack = rx868_cur."!cursor_capture"($P11, "circumfix")
    repr_get_attr_int rx868_pos, $P11, rx868_curclass, "$!pos"
    goto alt870_end1815
  alt870_31828:
    repr_bind_attr_int rx868_cur, rx868_curclass, "$!pos", rx868_pos
    $P11 = rx868_cur."variable"()
    repr_get_attr_int $I11, $P11, rx868_curclass, "$!pos"
    lt $I11, 0, rx868_fail1808
    nqp_rxmark rx868_bstack, rxsubrule877_pass1829, -1, 0
  rxsubrule877_pass1829:
    rx868_cstack = rx868_cur."!cursor_capture"($P11, "variable")
    repr_get_attr_int rx868_pos, $P11, rx868_curclass, "$!pos"
    goto alt870_end1815
  alt870_end1815:
    nqp_rxcommit rx868_bstack, alt870_end1815
    rx868_cur."!cursor_pass"(rx868_pos, "colonpair", 'backtrack'=>1)
    .return (rx868_cur)
  rx868_restart1807:
    repr_get_attr_obj rx868_cstack, rx868_cur, rx868_curclass, "$!cstack"
  rx868_fail1808:
    unless rx868_bstack, rx868_done1806
    pop $I19, rx868_bstack
    if_null rx868_cstack, rx868_cstack_done1811
    unless rx868_cstack, rx868_cstack_done1811
    dec $I19
    set $P11, rx868_cstack[$I19]
  rx868_cstack_done1811:
    pop rx868_rep, rx868_bstack
    pop rx868_pos, rx868_bstack
    pop $I19, rx868_bstack
    lt rx868_pos, -1, rx868_done1806
    lt rx868_pos, 0, rx868_fail1808
    eq $I19, 0, rx868_fail1808
    nqp_islist $I20, rx868_cstack
    unless $I20, rx868_jump1809
    elements $I18, rx868_bstack
    le $I18, 0, rx868_cut1810
    dec $I18
    set $I18, rx868_bstack[$I18]
  rx868_cut1810:
    assign rx868_cstack, $I18
  rx868_jump1809:
    jump $I19
  rx868_done1806:
    rx868_cur."!cursor_fail"()
    .return (rx868_cur) 
.end
.HLL "nqp"
.namespace []
.sub "variable" :subid("cuid_98_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 953
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx878_tgt
    .local int rx878_pos
    .local int rx878_off
    .local int rx878_eos
    .local int rx878_rep
    .local pmc rx878_cur
    .local pmc rx878_curclass
    .local pmc rx878_bstack
    .local pmc rx878_cstack
    (rx878_cur, rx878_tgt, rx878_pos, rx878_curclass, rx878_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx878_cur
    length rx878_eos, rx878_tgt
    eq $I19, 1, rx878_restart1832
    gt rx878_pos, rx878_eos, rx878_fail1833
    repr_get_attr_int $I11, self, rx878_curclass, "$!from"
    ne $I11, -1, rxscan879_done1839
    goto rxscan879_scan1838
  rxscan879_loop1837:
    inc rx878_pos
    gt rx878_pos, rx878_eos, rx878_fail1833
    repr_bind_attr_int rx878_cur, rx878_curclass, "$!from", rx878_pos
  rxscan879_scan1838:
    nqp_rxmark rx878_bstack, rxscan879_loop1837, rx878_pos, 0
  rxscan879_done1839:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt880_01841
    nqp_push_label $P11, alt880_11848
    nqp_push_label $P11, alt880_21851
    nqp_push_label $P11, alt880_31859
    nqp_rxmark rx878_bstack, alt880_end1840, -1, 0
    rx878_cur."!alt"(rx878_pos, "alt_nfa__20_1360432461.143", $P11)
    goto rx878_fail1833
  alt880_01841:
    repr_bind_attr_int rx878_cur, rx878_curclass, "$!pos", rx878_pos
    $P11 = rx878_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx878_curclass, "$!pos"
    lt $I11, 0, rx878_fail1833
    nqp_rxmark rx878_bstack, rxsubrule881_pass1842, -1, 0
  rxsubrule881_pass1842:
    rx878_cstack = rx878_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx878_pos, $P11, rx878_curclass, "$!pos"
    nqp_rxmark rx878_bstack, rxquantr882_done1844, rx878_pos, 0
  rxquantr882_loop1843:
    repr_bind_attr_int rx878_cur, rx878_curclass, "$!pos", rx878_pos
    $P11 = rx878_cur."twigil"()
    repr_get_attr_int $I11, $P11, rx878_curclass, "$!pos"
    lt $I11, 0, rx878_fail1833
    goto rxsubrule883_pass1845
  rxsubrule883_back1846:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx878_curclass, "$!pos"
    lt $I11, 0, rx878_fail1833
  rxsubrule883_pass1845:
    rx878_cstack = rx878_cur."!cursor_capture"($P11, "twigil")
    set_addr $I11, rxsubrule883_back1846
    push rx878_bstack, $I11
    push rx878_bstack, 0
    push rx878_bstack, rx878_pos
    elements $I11, rx878_cstack
    push rx878_bstack, $I11
    repr_get_attr_int rx878_pos, $P11, rx878_curclass, "$!pos"
    nqp_rxpeek $I19, rx878_bstack, rxquantr882_done1844
    inc $I19
    inc $I19
    set rx878_rep, rx878_bstack[$I19]
    nqp_rxcommit rx878_bstack, rxquantr882_done1844
    inc rx878_rep
  rxquantr882_done1844:
    repr_bind_attr_int rx878_cur, rx878_curclass, "$!pos", rx878_pos
    $P11 = rx878_cur."name"()
    repr_get_attr_int $I11, $P11, rx878_curclass, "$!pos"
    lt $I11, 0, rx878_fail1833
    nqp_rxmark rx878_bstack, rxsubrule884_pass1847, -1, 0
  rxsubrule884_pass1847:
    rx878_cstack = rx878_cur."!cursor_capture"($P11, "desigilname")
    repr_get_attr_int rx878_pos, $P11, rx878_curclass, "$!pos"
    goto alt880_end1840
  alt880_11848:
    repr_bind_attr_int rx878_cur, rx878_curclass, "$!pos", rx878_pos
    $P11 = rx878_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx878_curclass, "$!pos"
    lt $I11, 0, rx878_fail1833
    nqp_rxmark rx878_bstack, rxsubrule885_pass1849, -1, 0
  rxsubrule885_pass1849:
    rx878_cstack = rx878_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx878_pos, $P11, rx878_curclass, "$!pos"
    ge rx878_pos, rx878_eos, rx878_fail1833
    substr $S11, rx878_tgt, rx878_pos, 1
    index $I11, ucs4:"<", $S11
    lt $I11, 0, rx878_fail1833
    repr_bind_attr_int rx878_cur, rx878_curclass, "$!pos", rx878_pos
    $P11 = rx878_cur."postcircumfix"()
    repr_get_attr_int $I11, $P11, rx878_curclass, "$!pos"
    lt $I11, 0, rx878_fail1833
    nqp_rxmark rx878_bstack, rxsubrule886_pass1850, -1, 0
  rxsubrule886_pass1850:
    rx878_cstack = rx878_cur."!cursor_capture"($P11, "postcircumfix")
    repr_get_attr_int rx878_pos, $P11, rx878_curclass, "$!pos"
    goto alt880_end1840
  alt880_21851:
    repr_bind_attr_int rx878_cur, rx878_curclass, "$!pos", rx878_pos
    $P11 = rx878_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx878_curclass, "$!pos"
    lt $I11, 0, rx878_fail1833
    nqp_rxmark rx878_bstack, rxsubrule887_pass1852, -1, 0
  rxsubrule887_pass1852:
    rx878_cstack = rx878_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx878_pos, $P11, rx878_curclass, "$!pos"
    add $I11, rx878_pos, 1
    gt $I11, rx878_eos, rx878_fail1833
    substr $S10, rx878_tgt, rx878_pos, 1
    ne $S10, ucs4:"(", rx878_fail1833
    add rx878_pos, 1
    repr_bind_attr_int rx878_cur, rx878_curclass, "$!pos", rx878_pos
    $P11 = rx878_cur."semilist"()
    repr_get_attr_int $I11, $P11, rx878_curclass, "$!pos"
    lt $I11, 0, rx878_fail1833
    nqp_rxmark rx878_bstack, rxsubrule888_pass1853, -1, 0
  rxsubrule888_pass1853:
    rx878_cstack = rx878_cur."!cursor_capture"($P11, "semilist")
    repr_get_attr_int rx878_pos, $P11, rx878_curclass, "$!pos"
  alt889_01855:
    nqp_rxmark rx878_bstack, alt889_11856, rx878_pos, 0
    add $I11, rx878_pos, 1
    gt $I11, rx878_eos, rx878_fail1833
    substr $S10, rx878_tgt, rx878_pos, 1
    ne $S10, ucs4:")", rx878_fail1833
    add rx878_pos, 1
    goto alt889_end1854
  alt889_11856:
    repr_bind_attr_int rx878_cur, rx878_curclass, "$!pos", rx878_pos
    $P11 = rx878_cur."FAILGOAL"("')'")
    repr_get_attr_int $I11, $P11, rx878_curclass, "$!pos"
    lt $I11, 0, rx878_fail1833
    goto rxsubrule890_pass1857
  rxsubrule890_back1858:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx878_curclass, "$!pos"
    lt $I11, 0, rx878_fail1833
  rxsubrule890_pass1857:
    rx878_cstack = rx878_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule890_back1858
    push rx878_bstack, $I11
    push rx878_bstack, 0
    push rx878_bstack, rx878_pos
    elements $I11, rx878_cstack
    push rx878_bstack, $I11
    repr_get_attr_int rx878_pos, $P11, rx878_curclass, "$!pos"
  alt889_end1854:
    goto alt880_end1840
  alt880_31859:
    nqp_rxmark rx878_bstack, rxcap891_fail1861, rx878_pos, 0
    add $I11, rx878_pos, 1
    gt $I11, rx878_eos, rx878_fail1833
    substr $S10, rx878_tgt, rx878_pos, 1
    ne $S10, ucs4:"$", rx878_fail1833
    add rx878_pos, 1
    nqp_rxpeek $I19, rx878_bstack, rxcap891_fail1861
    inc $I19
    set $I11, rx878_bstack[$I19]
    repr_bind_attr_int rx878_cur, rx878_curclass, "$!pos", rx878_pos
    $P11 = rx878_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx878_pos)
    rx878_cstack = rx878_cur."!cursor_capture"($P11, "sigil")
    goto rxcap891_done1860
  rxcap891_fail1861:
    goto rx878_fail1833
  rxcap891_done1860:
    nqp_rxmark rx878_bstack, rxcap892_fail1863, rx878_pos, 0
    ge rx878_pos, rx878_eos, rx878_fail1833
    substr $S11, rx878_tgt, rx878_pos, 1
    index $I11, ucs4:"/_!", $S11
    lt $I11, 0, rx878_fail1833
    inc rx878_pos
    nqp_rxpeek $I19, rx878_bstack, rxcap892_fail1863
    inc $I19
    set $I11, rx878_bstack[$I19]
    repr_bind_attr_int rx878_cur, rx878_curclass, "$!pos", rx878_pos
    $P11 = rx878_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx878_pos)
    rx878_cstack = rx878_cur."!cursor_capture"($P11, "desigilname")
    goto rxcap892_done1862
  rxcap892_fail1863:
    goto rx878_fail1833
  rxcap892_done1862:
    goto alt880_end1840
  alt880_end1840:
    rx878_cur."!cursor_pass"(rx878_pos, "variable", 'backtrack'=>1)
    .return (rx878_cur)
  rx878_restart1832:
    repr_get_attr_obj rx878_cstack, rx878_cur, rx878_curclass, "$!cstack"
  rx878_fail1833:
    unless rx878_bstack, rx878_done1831
    pop $I19, rx878_bstack
    if_null rx878_cstack, rx878_cstack_done1836
    unless rx878_cstack, rx878_cstack_done1836
    dec $I19
    set $P11, rx878_cstack[$I19]
  rx878_cstack_done1836:
    pop rx878_rep, rx878_bstack
    pop rx878_pos, rx878_bstack
    pop $I19, rx878_bstack
    lt rx878_pos, -1, rx878_done1831
    lt rx878_pos, 0, rx878_fail1833
    eq $I19, 0, rx878_fail1833
    nqp_islist $I20, rx878_cstack
    unless $I20, rx878_jump1834
    elements $I18, rx878_bstack
    le $I18, 0, rx878_cut1835
    dec $I18
    set $I18, rx878_bstack[$I18]
  rx878_cut1835:
    assign rx878_cstack, $I18
  rx878_jump1834:
    jump $I19
  rx878_done1831:
    rx878_cur."!cursor_fail"()
    .return (rx878_cur) 
.end
.HLL "nqp"
.namespace []
.sub "sigil" :subid("cuid_99_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 960
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx893_tgt
    .local int rx893_pos
    .local int rx893_off
    .local int rx893_eos
    .local int rx893_rep
    .local pmc rx893_cur
    .local pmc rx893_curclass
    .local pmc rx893_bstack
    .local pmc rx893_cstack
    (rx893_cur, rx893_tgt, rx893_pos, rx893_curclass, rx893_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx893_cur
    length rx893_eos, rx893_tgt
    eq $I19, 1, rx893_restart1866
    gt rx893_pos, rx893_eos, rx893_fail1867
    repr_get_attr_int $I11, self, rx893_curclass, "$!from"
    ne $I11, -1, rxscan894_done1873
    goto rxscan894_scan1872
  rxscan894_loop1871:
    inc rx893_pos
    gt rx893_pos, rx893_eos, rx893_fail1867
    repr_bind_attr_int rx893_cur, rx893_curclass, "$!from", rx893_pos
  rxscan894_scan1872:
    nqp_rxmark rx893_bstack, rxscan894_loop1871, rx893_pos, 0
  rxscan894_done1873:
    ge rx893_pos, rx893_eos, rx893_fail1867
    substr $S11, rx893_tgt, rx893_pos, 1
    index $I11, ucs4:"$@%&", $S11
    lt $I11, 0, rx893_fail1867
    inc rx893_pos
    rx893_cur."!cursor_pass"(rx893_pos, "sigil", 'backtrack'=>1)
    .return (rx893_cur)
  rx893_restart1866:
    repr_get_attr_obj rx893_cstack, rx893_cur, rx893_curclass, "$!cstack"
  rx893_fail1867:
    unless rx893_bstack, rx893_done1865
    pop $I19, rx893_bstack
    if_null rx893_cstack, rx893_cstack_done1870
    unless rx893_cstack, rx893_cstack_done1870
    dec $I19
    set $P11, rx893_cstack[$I19]
  rx893_cstack_done1870:
    pop rx893_rep, rx893_bstack
    pop rx893_pos, rx893_bstack
    pop $I19, rx893_bstack
    lt rx893_pos, -1, rx893_done1865
    lt rx893_pos, 0, rx893_fail1867
    eq $I19, 0, rx893_fail1867
    nqp_islist $I20, rx893_cstack
    unless $I20, rx893_jump1868
    elements $I18, rx893_bstack
    le $I18, 0, rx893_cut1869
    dec $I18
    set $I18, rx893_bstack[$I18]
  rx893_cut1869:
    assign rx893_cstack, $I18
  rx893_jump1868:
    jump $I19
  rx893_done1865:
    rx893_cur."!cursor_fail"()
    .return (rx893_cur) 
.end
.HLL "nqp"
.namespace []
.sub "twigil" :subid("cuid_100_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 962
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx895_tgt
    .local int rx895_pos
    .local int rx895_off
    .local int rx895_eos
    .local int rx895_rep
    .local pmc rx895_cur
    .local pmc rx895_curclass
    .local pmc rx895_bstack
    .local pmc rx895_cstack
    (rx895_cur, rx895_tgt, rx895_pos, rx895_curclass, rx895_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx895_cur
    length rx895_eos, rx895_tgt
    eq $I19, 1, rx895_restart1876
    gt rx895_pos, rx895_eos, rx895_fail1877
    repr_get_attr_int $I11, self, rx895_curclass, "$!from"
    ne $I11, -1, rxscan896_done1883
    goto rxscan896_scan1882
  rxscan896_loop1881:
    inc rx895_pos
    gt rx895_pos, rx895_eos, rx895_fail1877
    repr_bind_attr_int rx895_cur, rx895_curclass, "$!from", rx895_pos
  rxscan896_scan1882:
    nqp_rxmark rx895_bstack, rxscan896_loop1881, rx895_pos, 0
  rxscan896_done1883:
    ge rx895_pos, rx895_eos, rx895_fail1877
    substr $S11, rx895_tgt, rx895_pos, 1
    index $I11, ucs4:"*!?", $S11
    lt $I11, 0, rx895_fail1877
    inc rx895_pos
    rx895_cur."!cursor_pass"(rx895_pos, "twigil", 'backtrack'=>1)
    .return (rx895_cur)
  rx895_restart1876:
    repr_get_attr_obj rx895_cstack, rx895_cur, rx895_curclass, "$!cstack"
  rx895_fail1877:
    unless rx895_bstack, rx895_done1875
    pop $I19, rx895_bstack
    if_null rx895_cstack, rx895_cstack_done1880
    unless rx895_cstack, rx895_cstack_done1880
    dec $I19
    set $P11, rx895_cstack[$I19]
  rx895_cstack_done1880:
    pop rx895_rep, rx895_bstack
    pop rx895_pos, rx895_bstack
    pop $I19, rx895_bstack
    lt rx895_pos, -1, rx895_done1875
    lt rx895_pos, 0, rx895_fail1877
    eq $I19, 0, rx895_fail1877
    nqp_islist $I20, rx895_cstack
    unless $I20, rx895_jump1878
    elements $I18, rx895_bstack
    le $I18, 0, rx895_cut1879
    dec $I18
    set $I18, rx895_bstack[$I18]
  rx895_cut1879:
    assign rx895_cstack, $I18
  rx895_jump1878:
    jump $I19
  rx895_done1875:
    rx895_cur."!cursor_fail"()
    .return (rx895_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator" :subid("cuid_101_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 964
    .param pmc self 
    $P5001 = self."!protoregex"("package_declarator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<module>" :subid("cuid_102_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 965
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_204 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
    set self, _lex_param_0
    .local string rx897_tgt
    .local int rx897_pos
    .local int rx897_off
    .local int rx897_eos
    .local int rx897_rep
    .local pmc rx897_cur
    .local pmc rx897_curclass
    .local pmc rx897_bstack
    .local pmc rx897_cstack
    (rx897_cur, rx897_tgt, rx897_pos, rx897_curclass, rx897_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx897_cur
    length rx897_eos, rx897_tgt
    eq $I19, 1, rx897_restart1886
    gt rx897_pos, rx897_eos, rx897_fail1887
    repr_get_attr_int $I11, self, rx897_curclass, "$!from"
    ne $I11, -1, rxscan898_done1893
    goto rxscan898_scan1892
  rxscan898_loop1891:
    inc rx897_pos
    gt rx897_pos, rx897_eos, rx897_fail1887
    repr_bind_attr_int rx897_cur, rx897_curclass, "$!from", rx897_pos
  rxscan898_scan1892:
    nqp_rxmark rx897_bstack, rxscan898_loop1891, rx897_pos, 0
  rxscan898_done1893:
    repr_bind_attr_int rx897_cur, rx897_curclass, "$!pos", rx897_pos
    store_lex unicode:"$\x{a2}", rx897_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1894
    nqp_get_sc_object $P5005, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5004, $P5005
    set fb_tmp_204, $P5004
    repr_defined $I5001, fb_tmp_204
    unless $I5001 goto if899_else1895 
    set $P5006, fb_tmp_204["$PACKAGE"]
    set $P5008, $P5006
    goto if899_end1896
  if899_else1895:
    null $P5007
    set $P5008, $P5007
  if899_end1896:
    unless_null $P5008, vivi_9001897
    nqp_get_sc_object $P5009, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5008, $P5009
  vivi_9001897:
    unless_null $P5008, vivi_9011898
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_9011898:
    set $P5003, $P5008
  fallback1894:
    set $P101, $P5003
    repr_bind_attr_int rx897_cur, rx897_curclass, "$!pos", rx897_pos
    store_lex unicode:"$\x{a2}", rx897_cur
    box $P5011, "module"
    set $P102, $P5011
    nqp_rxmark rx897_bstack, rxcap902_fail1900, rx897_pos, 0
    add $I11, rx897_pos, 6
    gt $I11, rx897_eos, rx897_fail1887
    substr $S10, rx897_tgt, rx897_pos, 6
    ne $S10, ucs4:"module", rx897_fail1887
    add rx897_pos, 6
    nqp_rxpeek $I19, rx897_bstack, rxcap902_fail1900
    inc $I19
    set $I11, rx897_bstack[$I19]
    repr_bind_attr_int rx897_cur, rx897_curclass, "$!pos", rx897_pos
    $P11 = rx897_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx897_pos)
    rx897_cstack = rx897_cur."!cursor_capture"($P11, "sym")
    goto rxcap902_done1899
  rxcap902_fail1900:
    goto rx897_fail1887
  rxcap902_done1899:
    repr_bind_attr_int rx897_cur, rx897_curclass, "$!pos", rx897_pos
    $P11 = rx897_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx897_curclass, "$!pos"
    lt $I11, 0, rx897_fail1887
    nqp_rxmark rx897_bstack, rxsubrule903_pass1901, -1, 0
  rxsubrule903_pass1901:
    rx897_cstack = rx897_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx897_pos, $P11, rx897_curclass, "$!pos"
    rx897_cur."!cursor_pass"(rx897_pos, "package_declarator:sym<module>", 'backtrack'=>1)
    .return (rx897_cur)
  rx897_restart1886:
    repr_get_attr_obj rx897_cstack, rx897_cur, rx897_curclass, "$!cstack"
  rx897_fail1887:
    unless rx897_bstack, rx897_done1885
    pop $I19, rx897_bstack
    if_null rx897_cstack, rx897_cstack_done1890
    unless rx897_cstack, rx897_cstack_done1890
    dec $I19
    set $P11, rx897_cstack[$I19]
  rx897_cstack_done1890:
    pop rx897_rep, rx897_bstack
    pop rx897_pos, rx897_bstack
    pop $I19, rx897_bstack
    lt rx897_pos, -1, rx897_done1885
    lt rx897_pos, 0, rx897_fail1887
    eq $I19, 0, rx897_fail1887
    nqp_islist $I20, rx897_cstack
    unless $I20, rx897_jump1888
    elements $I18, rx897_bstack
    le $I18, 0, rx897_cut1889
    dec $I18
    set $I18, rx897_bstack[$I18]
  rx897_cut1889:
    assign rx897_cstack, $I18
  rx897_jump1888:
    jump $I19
  rx897_done1885:
    rx897_cur."!cursor_fail"()
    .return (rx897_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<knowhow>" :subid("cuid_103_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 970
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_205 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
    set self, _lex_param_0
    .local string rx904_tgt
    .local int rx904_pos
    .local int rx904_off
    .local int rx904_eos
    .local int rx904_rep
    .local pmc rx904_cur
    .local pmc rx904_curclass
    .local pmc rx904_bstack
    .local pmc rx904_cstack
    (rx904_cur, rx904_tgt, rx904_pos, rx904_curclass, rx904_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx904_cur
    length rx904_eos, rx904_tgt
    eq $I19, 1, rx904_restart1904
    gt rx904_pos, rx904_eos, rx904_fail1905
    repr_get_attr_int $I11, self, rx904_curclass, "$!from"
    ne $I11, -1, rxscan905_done1911
    goto rxscan905_scan1910
  rxscan905_loop1909:
    inc rx904_pos
    gt rx904_pos, rx904_eos, rx904_fail1905
    repr_bind_attr_int rx904_cur, rx904_curclass, "$!from", rx904_pos
  rxscan905_scan1910:
    nqp_rxmark rx904_bstack, rxscan905_loop1909, rx904_pos, 0
  rxscan905_done1911:
    repr_bind_attr_int rx904_cur, rx904_curclass, "$!pos", rx904_pos
    store_lex unicode:"$\x{a2}", rx904_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1912
    nqp_get_sc_object $P5005, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5004, $P5005
    set fb_tmp_205, $P5004
    repr_defined $I5001, fb_tmp_205
    unless $I5001 goto if906_else1913 
    set $P5006, fb_tmp_205["$PACKAGE"]
    set $P5008, $P5006
    goto if906_end1914
  if906_else1913:
    null $P5007
    set $P5008, $P5007
  if906_end1914:
    unless_null $P5008, vivi_9071915
    nqp_get_sc_object $P5009, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5008, $P5009
  vivi_9071915:
    unless_null $P5008, vivi_9081916
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_9081916:
    set $P5003, $P5008
  fallback1912:
    set $P101, $P5003
    repr_bind_attr_int rx904_cur, rx904_curclass, "$!pos", rx904_pos
    store_lex unicode:"$\x{a2}", rx904_cur
    box $P5011, "knowhow"
    set $P102, $P5011
    nqp_rxmark rx904_bstack, rxcap909_fail1918, rx904_pos, 0
    add $I11, rx904_pos, 7
    gt $I11, rx904_eos, rx904_fail1905
    substr $S10, rx904_tgt, rx904_pos, 7
    ne $S10, ucs4:"knowhow", rx904_fail1905
    add rx904_pos, 7
    nqp_rxpeek $I19, rx904_bstack, rxcap909_fail1918
    inc $I19
    set $I11, rx904_bstack[$I19]
    repr_bind_attr_int rx904_cur, rx904_curclass, "$!pos", rx904_pos
    $P11 = rx904_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx904_pos)
    rx904_cstack = rx904_cur."!cursor_capture"($P11, "sym")
    goto rxcap909_done1917
  rxcap909_fail1918:
    goto rx904_fail1905
  rxcap909_done1917:
    repr_bind_attr_int rx904_cur, rx904_curclass, "$!pos", rx904_pos
    $P11 = rx904_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx904_curclass, "$!pos"
    lt $I11, 0, rx904_fail1905
    nqp_rxmark rx904_bstack, rxsubrule910_pass1919, -1, 0
  rxsubrule910_pass1919:
    rx904_cstack = rx904_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx904_pos, $P11, rx904_curclass, "$!pos"
    rx904_cur."!cursor_pass"(rx904_pos, "package_declarator:sym<knowhow>", 'backtrack'=>1)
    .return (rx904_cur)
  rx904_restart1904:
    repr_get_attr_obj rx904_cstack, rx904_cur, rx904_curclass, "$!cstack"
  rx904_fail1905:
    unless rx904_bstack, rx904_done1903
    pop $I19, rx904_bstack
    if_null rx904_cstack, rx904_cstack_done1908
    unless rx904_cstack, rx904_cstack_done1908
    dec $I19
    set $P11, rx904_cstack[$I19]
  rx904_cstack_done1908:
    pop rx904_rep, rx904_bstack
    pop rx904_pos, rx904_bstack
    pop $I19, rx904_bstack
    lt rx904_pos, -1, rx904_done1903
    lt rx904_pos, 0, rx904_fail1905
    eq $I19, 0, rx904_fail1905
    nqp_islist $I20, rx904_cstack
    unless $I20, rx904_jump1906
    elements $I18, rx904_bstack
    le $I18, 0, rx904_cut1907
    dec $I18
    set $I18, rx904_bstack[$I18]
  rx904_cut1907:
    assign rx904_cstack, $I18
  rx904_jump1906:
    jump $I19
  rx904_done1903:
    rx904_cur."!cursor_fail"()
    .return (rx904_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<class>" :subid("cuid_104_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 975
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_206 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
    set self, _lex_param_0
    .local string rx911_tgt
    .local int rx911_pos
    .local int rx911_off
    .local int rx911_eos
    .local int rx911_rep
    .local pmc rx911_cur
    .local pmc rx911_curclass
    .local pmc rx911_bstack
    .local pmc rx911_cstack
    (rx911_cur, rx911_tgt, rx911_pos, rx911_curclass, rx911_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx911_cur
    length rx911_eos, rx911_tgt
    eq $I19, 1, rx911_restart1922
    gt rx911_pos, rx911_eos, rx911_fail1923
    repr_get_attr_int $I11, self, rx911_curclass, "$!from"
    ne $I11, -1, rxscan912_done1929
    goto rxscan912_scan1928
  rxscan912_loop1927:
    inc rx911_pos
    gt rx911_pos, rx911_eos, rx911_fail1923
    repr_bind_attr_int rx911_cur, rx911_curclass, "$!from", rx911_pos
  rxscan912_scan1928:
    nqp_rxmark rx911_bstack, rxscan912_loop1927, rx911_pos, 0
  rxscan912_done1929:
    repr_bind_attr_int rx911_cur, rx911_curclass, "$!pos", rx911_pos
    store_lex unicode:"$\x{a2}", rx911_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1930
    nqp_get_sc_object $P5005, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5004, $P5005
    set fb_tmp_206, $P5004
    repr_defined $I5001, fb_tmp_206
    unless $I5001 goto if913_else1931 
    set $P5006, fb_tmp_206["$PACKAGE"]
    set $P5008, $P5006
    goto if913_end1932
  if913_else1931:
    null $P5007
    set $P5008, $P5007
  if913_end1932:
    unless_null $P5008, vivi_9141933
    nqp_get_sc_object $P5009, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5008, $P5009
  vivi_9141933:
    unless_null $P5008, vivi_9151934
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_9151934:
    set $P5003, $P5008
  fallback1930:
    set $P101, $P5003
    repr_bind_attr_int rx911_cur, rx911_curclass, "$!pos", rx911_pos
    store_lex unicode:"$\x{a2}", rx911_cur
    box $P5011, "class"
    set $P102, $P5011
    nqp_rxmark rx911_bstack, rxcap916_fail1936, rx911_pos, 0
    add $I11, rx911_pos, 5
    gt $I11, rx911_eos, rx911_fail1923
    substr $S10, rx911_tgt, rx911_pos, 5
    ne $S10, ucs4:"class", rx911_fail1923
    add rx911_pos, 5
    nqp_rxpeek $I19, rx911_bstack, rxcap916_fail1936
    inc $I19
    set $I11, rx911_bstack[$I19]
    repr_bind_attr_int rx911_cur, rx911_curclass, "$!pos", rx911_pos
    $P11 = rx911_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx911_pos)
    rx911_cstack = rx911_cur."!cursor_capture"($P11, "sym")
    goto rxcap916_done1935
  rxcap916_fail1936:
    goto rx911_fail1923
  rxcap916_done1935:
    repr_bind_attr_int rx911_cur, rx911_curclass, "$!pos", rx911_pos
    $P11 = rx911_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx911_curclass, "$!pos"
    lt $I11, 0, rx911_fail1923
    nqp_rxmark rx911_bstack, rxsubrule917_pass1937, -1, 0
  rxsubrule917_pass1937:
    rx911_cstack = rx911_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx911_pos, $P11, rx911_curclass, "$!pos"
    rx911_cur."!cursor_pass"(rx911_pos, "package_declarator:sym<class>", 'backtrack'=>1)
    .return (rx911_cur)
  rx911_restart1922:
    repr_get_attr_obj rx911_cstack, rx911_cur, rx911_curclass, "$!cstack"
  rx911_fail1923:
    unless rx911_bstack, rx911_done1921
    pop $I19, rx911_bstack
    if_null rx911_cstack, rx911_cstack_done1926
    unless rx911_cstack, rx911_cstack_done1926
    dec $I19
    set $P11, rx911_cstack[$I19]
  rx911_cstack_done1926:
    pop rx911_rep, rx911_bstack
    pop rx911_pos, rx911_bstack
    pop $I19, rx911_bstack
    lt rx911_pos, -1, rx911_done1921
    lt rx911_pos, 0, rx911_fail1923
    eq $I19, 0, rx911_fail1923
    nqp_islist $I20, rx911_cstack
    unless $I20, rx911_jump1924
    elements $I18, rx911_bstack
    le $I18, 0, rx911_cut1925
    dec $I18
    set $I18, rx911_bstack[$I18]
  rx911_cut1925:
    assign rx911_cstack, $I18
  rx911_jump1924:
    jump $I19
  rx911_done1921:
    rx911_cur."!cursor_fail"()
    .return (rx911_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<grammar>" :subid("cuid_105_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 980
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_207 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
    set self, _lex_param_0
    .local string rx918_tgt
    .local int rx918_pos
    .local int rx918_off
    .local int rx918_eos
    .local int rx918_rep
    .local pmc rx918_cur
    .local pmc rx918_curclass
    .local pmc rx918_bstack
    .local pmc rx918_cstack
    (rx918_cur, rx918_tgt, rx918_pos, rx918_curclass, rx918_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx918_cur
    length rx918_eos, rx918_tgt
    eq $I19, 1, rx918_restart1940
    gt rx918_pos, rx918_eos, rx918_fail1941
    repr_get_attr_int $I11, self, rx918_curclass, "$!from"
    ne $I11, -1, rxscan919_done1947
    goto rxscan919_scan1946
  rxscan919_loop1945:
    inc rx918_pos
    gt rx918_pos, rx918_eos, rx918_fail1941
    repr_bind_attr_int rx918_cur, rx918_curclass, "$!from", rx918_pos
  rxscan919_scan1946:
    nqp_rxmark rx918_bstack, rxscan919_loop1945, rx918_pos, 0
  rxscan919_done1947:
    repr_bind_attr_int rx918_cur, rx918_curclass, "$!pos", rx918_pos
    store_lex unicode:"$\x{a2}", rx918_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1948
    nqp_get_sc_object $P5005, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5004, $P5005
    set fb_tmp_207, $P5004
    repr_defined $I5001, fb_tmp_207
    unless $I5001 goto if920_else1949 
    set $P5006, fb_tmp_207["$PACKAGE"]
    set $P5008, $P5006
    goto if920_end1950
  if920_else1949:
    null $P5007
    set $P5008, $P5007
  if920_end1950:
    unless_null $P5008, vivi_9211951
    nqp_get_sc_object $P5009, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5008, $P5009
  vivi_9211951:
    unless_null $P5008, vivi_9221952
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_9221952:
    set $P5003, $P5008
  fallback1948:
    set $P101, $P5003
    repr_bind_attr_int rx918_cur, rx918_curclass, "$!pos", rx918_pos
    store_lex unicode:"$\x{a2}", rx918_cur
    box $P5011, "grammar"
    set $P102, $P5011
    nqp_rxmark rx918_bstack, rxcap923_fail1954, rx918_pos, 0
    add $I11, rx918_pos, 7
    gt $I11, rx918_eos, rx918_fail1941
    substr $S10, rx918_tgt, rx918_pos, 7
    ne $S10, ucs4:"grammar", rx918_fail1941
    add rx918_pos, 7
    nqp_rxpeek $I19, rx918_bstack, rxcap923_fail1954
    inc $I19
    set $I11, rx918_bstack[$I19]
    repr_bind_attr_int rx918_cur, rx918_curclass, "$!pos", rx918_pos
    $P11 = rx918_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx918_pos)
    rx918_cstack = rx918_cur."!cursor_capture"($P11, "sym")
    goto rxcap923_done1953
  rxcap923_fail1954:
    goto rx918_fail1941
  rxcap923_done1953:
    repr_bind_attr_int rx918_cur, rx918_curclass, "$!pos", rx918_pos
    $P11 = rx918_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx918_curclass, "$!pos"
    lt $I11, 0, rx918_fail1941
    nqp_rxmark rx918_bstack, rxsubrule924_pass1955, -1, 0
  rxsubrule924_pass1955:
    rx918_cstack = rx918_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx918_pos, $P11, rx918_curclass, "$!pos"
    rx918_cur."!cursor_pass"(rx918_pos, "package_declarator:sym<grammar>", 'backtrack'=>1)
    .return (rx918_cur)
  rx918_restart1940:
    repr_get_attr_obj rx918_cstack, rx918_cur, rx918_curclass, "$!cstack"
  rx918_fail1941:
    unless rx918_bstack, rx918_done1939
    pop $I19, rx918_bstack
    if_null rx918_cstack, rx918_cstack_done1944
    unless rx918_cstack, rx918_cstack_done1944
    dec $I19
    set $P11, rx918_cstack[$I19]
  rx918_cstack_done1944:
    pop rx918_rep, rx918_bstack
    pop rx918_pos, rx918_bstack
    pop $I19, rx918_bstack
    lt rx918_pos, -1, rx918_done1939
    lt rx918_pos, 0, rx918_fail1941
    eq $I19, 0, rx918_fail1941
    nqp_islist $I20, rx918_cstack
    unless $I20, rx918_jump1942
    elements $I18, rx918_bstack
    le $I18, 0, rx918_cut1943
    dec $I18
    set $I18, rx918_bstack[$I18]
  rx918_cut1943:
    assign rx918_cstack, $I18
  rx918_jump1942:
    jump $I19
  rx918_done1939:
    rx918_cur."!cursor_fail"()
    .return (rx918_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<role>" :subid("cuid_106_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 985
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_208 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
    set self, _lex_param_0
    .local string rx925_tgt
    .local int rx925_pos
    .local int rx925_off
    .local int rx925_eos
    .local int rx925_rep
    .local pmc rx925_cur
    .local pmc rx925_curclass
    .local pmc rx925_bstack
    .local pmc rx925_cstack
    (rx925_cur, rx925_tgt, rx925_pos, rx925_curclass, rx925_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx925_cur
    length rx925_eos, rx925_tgt
    eq $I19, 1, rx925_restart1958
    gt rx925_pos, rx925_eos, rx925_fail1959
    repr_get_attr_int $I11, self, rx925_curclass, "$!from"
    ne $I11, -1, rxscan926_done1965
    goto rxscan926_scan1964
  rxscan926_loop1963:
    inc rx925_pos
    gt rx925_pos, rx925_eos, rx925_fail1959
    repr_bind_attr_int rx925_cur, rx925_curclass, "$!from", rx925_pos
  rxscan926_scan1964:
    nqp_rxmark rx925_bstack, rxscan926_loop1963, rx925_pos, 0
  rxscan926_done1965:
    repr_bind_attr_int rx925_cur, rx925_curclass, "$!pos", rx925_pos
    store_lex unicode:"$\x{a2}", rx925_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1966
    nqp_get_sc_object $P5005, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5004, $P5005
    set fb_tmp_208, $P5004
    repr_defined $I5001, fb_tmp_208
    unless $I5001 goto if927_else1967 
    set $P5006, fb_tmp_208["$PACKAGE"]
    set $P5008, $P5006
    goto if927_end1968
  if927_else1967:
    null $P5007
    set $P5008, $P5007
  if927_end1968:
    unless_null $P5008, vivi_9281969
    nqp_get_sc_object $P5009, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5008, $P5009
  vivi_9281969:
    unless_null $P5008, vivi_9291970
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_9291970:
    set $P5003, $P5008
  fallback1966:
    set $P101, $P5003
    repr_bind_attr_int rx925_cur, rx925_curclass, "$!pos", rx925_pos
    store_lex unicode:"$\x{a2}", rx925_cur
    box $P5011, "role"
    set $P102, $P5011
    nqp_rxmark rx925_bstack, rxcap930_fail1972, rx925_pos, 0
    add $I11, rx925_pos, 4
    gt $I11, rx925_eos, rx925_fail1959
    substr $S10, rx925_tgt, rx925_pos, 4
    ne $S10, ucs4:"role", rx925_fail1959
    add rx925_pos, 4
    nqp_rxpeek $I19, rx925_bstack, rxcap930_fail1972
    inc $I19
    set $I11, rx925_bstack[$I19]
    repr_bind_attr_int rx925_cur, rx925_curclass, "$!pos", rx925_pos
    $P11 = rx925_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx925_pos)
    rx925_cstack = rx925_cur."!cursor_capture"($P11, "sym")
    goto rxcap930_done1971
  rxcap930_fail1972:
    goto rx925_fail1959
  rxcap930_done1971:
    repr_bind_attr_int rx925_cur, rx925_curclass, "$!pos", rx925_pos
    $P11 = rx925_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx925_curclass, "$!pos"
    lt $I11, 0, rx925_fail1959
    nqp_rxmark rx925_bstack, rxsubrule931_pass1973, -1, 0
  rxsubrule931_pass1973:
    rx925_cstack = rx925_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx925_pos, $P11, rx925_curclass, "$!pos"
    rx925_cur."!cursor_pass"(rx925_pos, "package_declarator:sym<role>", 'backtrack'=>1)
    .return (rx925_cur)
  rx925_restart1958:
    repr_get_attr_obj rx925_cstack, rx925_cur, rx925_curclass, "$!cstack"
  rx925_fail1959:
    unless rx925_bstack, rx925_done1957
    pop $I19, rx925_bstack
    if_null rx925_cstack, rx925_cstack_done1962
    unless rx925_cstack, rx925_cstack_done1962
    dec $I19
    set $P11, rx925_cstack[$I19]
  rx925_cstack_done1962:
    pop rx925_rep, rx925_bstack
    pop rx925_pos, rx925_bstack
    pop $I19, rx925_bstack
    lt rx925_pos, -1, rx925_done1957
    lt rx925_pos, 0, rx925_fail1959
    eq $I19, 0, rx925_fail1959
    nqp_islist $I20, rx925_cstack
    unless $I20, rx925_jump1960
    elements $I18, rx925_bstack
    le $I18, 0, rx925_cut1961
    dec $I18
    set $I18, rx925_bstack[$I18]
  rx925_cut1961:
    assign rx925_cstack, $I18
  rx925_jump1960:
    jump $I19
  rx925_done1957:
    rx925_cur."!cursor_fail"()
    .return (rx925_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<native>" :subid("cuid_107_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 990
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_209 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
    set self, _lex_param_0
    .local string rx932_tgt
    .local int rx932_pos
    .local int rx932_off
    .local int rx932_eos
    .local int rx932_rep
    .local pmc rx932_cur
    .local pmc rx932_curclass
    .local pmc rx932_bstack
    .local pmc rx932_cstack
    (rx932_cur, rx932_tgt, rx932_pos, rx932_curclass, rx932_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx932_cur
    length rx932_eos, rx932_tgt
    eq $I19, 1, rx932_restart1976
    gt rx932_pos, rx932_eos, rx932_fail1977
    repr_get_attr_int $I11, self, rx932_curclass, "$!from"
    ne $I11, -1, rxscan933_done1983
    goto rxscan933_scan1982
  rxscan933_loop1981:
    inc rx932_pos
    gt rx932_pos, rx932_eos, rx932_fail1977
    repr_bind_attr_int rx932_cur, rx932_curclass, "$!from", rx932_pos
  rxscan933_scan1982:
    nqp_rxmark rx932_bstack, rxscan933_loop1981, rx932_pos, 0
  rxscan933_done1983:
    repr_bind_attr_int rx932_cur, rx932_curclass, "$!pos", rx932_pos
    store_lex unicode:"$\x{a2}", rx932_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1984
    nqp_get_sc_object $P5005, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5004, $P5005
    set fb_tmp_209, $P5004
    repr_defined $I5001, fb_tmp_209
    unless $I5001 goto if934_else1985 
    set $P5006, fb_tmp_209["$PACKAGE"]
    set $P5008, $P5006
    goto if934_end1986
  if934_else1985:
    null $P5007
    set $P5008, $P5007
  if934_end1986:
    unless_null $P5008, vivi_9351987
    nqp_get_sc_object $P5009, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5008, $P5009
  vivi_9351987:
    unless_null $P5008, vivi_9361988
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_9361988:
    set $P5003, $P5008
  fallback1984:
    set $P101, $P5003
    repr_bind_attr_int rx932_cur, rx932_curclass, "$!pos", rx932_pos
    store_lex unicode:"$\x{a2}", rx932_cur
    box $P5011, "native"
    set $P102, $P5011
    nqp_rxmark rx932_bstack, rxcap937_fail1990, rx932_pos, 0
    add $I11, rx932_pos, 6
    gt $I11, rx932_eos, rx932_fail1977
    substr $S10, rx932_tgt, rx932_pos, 6
    ne $S10, ucs4:"native", rx932_fail1977
    add rx932_pos, 6
    nqp_rxpeek $I19, rx932_bstack, rxcap937_fail1990
    inc $I19
    set $I11, rx932_bstack[$I19]
    repr_bind_attr_int rx932_cur, rx932_curclass, "$!pos", rx932_pos
    $P11 = rx932_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx932_pos)
    rx932_cstack = rx932_cur."!cursor_capture"($P11, "sym")
    goto rxcap937_done1989
  rxcap937_fail1990:
    goto rx932_fail1977
  rxcap937_done1989:
    repr_bind_attr_int rx932_cur, rx932_curclass, "$!pos", rx932_pos
    $P11 = rx932_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx932_curclass, "$!pos"
    lt $I11, 0, rx932_fail1977
    nqp_rxmark rx932_bstack, rxsubrule938_pass1991, -1, 0
  rxsubrule938_pass1991:
    rx932_cstack = rx932_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx932_pos, $P11, rx932_curclass, "$!pos"
    rx932_cur."!cursor_pass"(rx932_pos, "package_declarator:sym<native>", 'backtrack'=>1)
    .return (rx932_cur)
  rx932_restart1976:
    repr_get_attr_obj rx932_cstack, rx932_cur, rx932_curclass, "$!cstack"
  rx932_fail1977:
    unless rx932_bstack, rx932_done1975
    pop $I19, rx932_bstack
    if_null rx932_cstack, rx932_cstack_done1980
    unless rx932_cstack, rx932_cstack_done1980
    dec $I19
    set $P11, rx932_cstack[$I19]
  rx932_cstack_done1980:
    pop rx932_rep, rx932_bstack
    pop rx932_pos, rx932_bstack
    pop $I19, rx932_bstack
    lt rx932_pos, -1, rx932_done1975
    lt rx932_pos, 0, rx932_fail1977
    eq $I19, 0, rx932_fail1977
    nqp_islist $I20, rx932_cstack
    unless $I20, rx932_jump1978
    elements $I18, rx932_bstack
    le $I18, 0, rx932_cut1979
    dec $I18
    set $I18, rx932_bstack[$I18]
  rx932_cut1979:
    assign rx932_cstack, $I18
  rx932_jump1978:
    jump $I19
  rx932_done1975:
    rx932_cur."!cursor_fail"()
    .return (rx932_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<stub>" :subid("cuid_108_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 995
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_210 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
    set self, _lex_param_0
    .local string rx939_tgt
    .local int rx939_pos
    .local int rx939_off
    .local int rx939_eos
    .local int rx939_rep
    .local pmc rx939_cur
    .local pmc rx939_curclass
    .local pmc rx939_bstack
    .local pmc rx939_cstack
    (rx939_cur, rx939_tgt, rx939_pos, rx939_curclass, rx939_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx939_cur
    length rx939_eos, rx939_tgt
    eq $I19, 1, rx939_restart1994
    gt rx939_pos, rx939_eos, rx939_fail1995
    repr_get_attr_int $I11, self, rx939_curclass, "$!from"
    ne $I11, -1, rxscan940_done2001
    goto rxscan940_scan2000
  rxscan940_loop1999:
    inc rx939_pos
    gt rx939_pos, rx939_eos, rx939_fail1995
    repr_bind_attr_int rx939_cur, rx939_curclass, "$!from", rx939_pos
  rxscan940_scan2000:
    nqp_rxmark rx939_bstack, rxscan940_loop1999, rx939_pos, 0
  rxscan940_done2001:
    repr_bind_attr_int rx939_cur, rx939_curclass, "$!pos", rx939_pos
    store_lex unicode:"$\x{a2}", rx939_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback2002
    nqp_get_sc_object $P5005, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5004, $P5005
    set fb_tmp_210, $P5004
    repr_defined $I5001, fb_tmp_210
    unless $I5001 goto if941_else2003 
    set $P5006, fb_tmp_210["$PACKAGE"]
    set $P5008, $P5006
    goto if941_end2004
  if941_else2003:
    null $P5007
    set $P5008, $P5007
  if941_end2004:
    unless_null $P5008, vivi_9422005
    nqp_get_sc_object $P5009, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5008, $P5009
  vivi_9422005:
    unless_null $P5008, vivi_9432006
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_9432006:
    set $P5003, $P5008
  fallback2002:
    set $P101, $P5003
    repr_bind_attr_int rx939_cur, rx939_curclass, "$!pos", rx939_pos
    store_lex unicode:"$\x{a2}", rx939_cur
    box $P5011, "stub"
    set $P102, $P5011
    nqp_rxmark rx939_bstack, rxcap944_fail2008, rx939_pos, 0
    add $I11, rx939_pos, 4
    gt $I11, rx939_eos, rx939_fail1995
    substr $S10, rx939_tgt, rx939_pos, 4
    ne $S10, ucs4:"stub", rx939_fail1995
    add rx939_pos, 4
    nqp_rxpeek $I19, rx939_bstack, rxcap944_fail2008
    inc $I19
    set $I11, rx939_bstack[$I19]
    repr_bind_attr_int rx939_cur, rx939_curclass, "$!pos", rx939_pos
    $P11 = rx939_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx939_pos)
    rx939_cstack = rx939_cur."!cursor_capture"($P11, "sym")
    goto rxcap944_done2007
  rxcap944_fail2008:
    goto rx939_fail1995
  rxcap944_done2007:
    repr_bind_attr_int rx939_cur, rx939_curclass, "$!pos", rx939_pos
    $P11 = rx939_cur."ws"()
    repr_get_attr_int $I11, $P11, rx939_curclass, "$!pos"
    lt $I11, 0, rx939_fail1995
    repr_get_attr_int rx939_pos, $P11, rx939_curclass, "$!pos"
    repr_bind_attr_int rx939_cur, rx939_curclass, "$!pos", rx939_pos
    $P11 = rx939_cur."name"()
    repr_get_attr_int $I11, $P11, rx939_curclass, "$!pos"
    lt $I11, 0, rx939_fail1995
    nqp_rxmark rx939_bstack, rxsubrule946_pass2010, -1, 0
  rxsubrule946_pass2010:
    rx939_cstack = rx939_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx939_pos, $P11, rx939_curclass, "$!pos"
    repr_bind_attr_int rx939_cur, rx939_curclass, "$!pos", rx939_pos
    $P11 = rx939_cur."ws"()
    repr_get_attr_int $I11, $P11, rx939_curclass, "$!pos"
    lt $I11, 0, rx939_fail1995
    repr_get_attr_int rx939_pos, $P11, rx939_curclass, "$!pos"
    add $I11, rx939_pos, 9
    gt $I11, rx939_eos, rx939_fail1995
    substr $S10, rx939_tgt, rx939_pos, 9
    ne $S10, ucs4:"metaclass", rx939_fail1995
    add rx939_pos, 9
    repr_bind_attr_int rx939_cur, rx939_curclass, "$!pos", rx939_pos
    $P11 = rx939_cur."ws"()
    repr_get_attr_int $I11, $P11, rx939_curclass, "$!pos"
    lt $I11, 0, rx939_fail1995
    repr_get_attr_int rx939_pos, $P11, rx939_curclass, "$!pos"
    repr_bind_attr_int rx939_cur, rx939_curclass, "$!pos", rx939_pos
    $P11 = rx939_cur."name"()
    repr_get_attr_int $I11, $P11, rx939_curclass, "$!pos"
    lt $I11, 0, rx939_fail1995
    nqp_rxmark rx939_bstack, rxsubrule949_pass2013, -1, 0
  rxsubrule949_pass2013:
    rx939_cstack = rx939_cur."!cursor_capture"($P11, "metaclass")
    repr_get_attr_int rx939_pos, $P11, rx939_curclass, "$!pos"
    repr_bind_attr_int rx939_cur, rx939_curclass, "$!pos", rx939_pos
    $P11 = rx939_cur."ws"()
    repr_get_attr_int $I11, $P11, rx939_curclass, "$!pos"
    lt $I11, 0, rx939_fail1995
    repr_get_attr_int rx939_pos, $P11, rx939_curclass, "$!pos"
    add $I11, rx939_pos, 1
    gt $I11, rx939_eos, rx939_fail1995
    substr $S10, rx939_tgt, rx939_pos, 1
    ne $S10, ucs4:"{", rx939_fail1995
    add rx939_pos, 1
    repr_bind_attr_int rx939_cur, rx939_curclass, "$!pos", rx939_pos
    $P11 = rx939_cur."ws"()
    repr_get_attr_int $I11, $P11, rx939_curclass, "$!pos"
    lt $I11, 0, rx939_fail1995
    repr_get_attr_int rx939_pos, $P11, rx939_curclass, "$!pos"
    add $I11, rx939_pos, 3
    gt $I11, rx939_eos, rx939_fail1995
    substr $S10, rx939_tgt, rx939_pos, 3
    ne $S10, ucs4:"...", rx939_fail1995
    add rx939_pos, 3
    repr_bind_attr_int rx939_cur, rx939_curclass, "$!pos", rx939_pos
    $P11 = rx939_cur."ws"()
    repr_get_attr_int $I11, $P11, rx939_curclass, "$!pos"
    lt $I11, 0, rx939_fail1995
    repr_get_attr_int rx939_pos, $P11, rx939_curclass, "$!pos"
    add $I11, rx939_pos, 1
    gt $I11, rx939_eos, rx939_fail1995
    substr $S10, rx939_tgt, rx939_pos, 1
    ne $S10, ucs4:"}", rx939_fail1995
    add rx939_pos, 1
    repr_bind_attr_int rx939_cur, rx939_curclass, "$!pos", rx939_pos
    $P11 = rx939_cur."ws"()
    repr_get_attr_int $I11, $P11, rx939_curclass, "$!pos"
    lt $I11, 0, rx939_fail1995
    repr_get_attr_int rx939_pos, $P11, rx939_curclass, "$!pos"
    rx939_cur."!cursor_pass"(rx939_pos, "package_declarator:sym<stub>", 'backtrack'=>1)
    .return (rx939_cur)
  rx939_restart1994:
    repr_get_attr_obj rx939_cstack, rx939_cur, rx939_curclass, "$!cstack"
  rx939_fail1995:
    unless rx939_bstack, rx939_done1993
    pop $I19, rx939_bstack
    if_null rx939_cstack, rx939_cstack_done1998
    unless rx939_cstack, rx939_cstack_done1998
    dec $I19
    set $P11, rx939_cstack[$I19]
  rx939_cstack_done1998:
    pop rx939_rep, rx939_bstack
    pop rx939_pos, rx939_bstack
    pop $I19, rx939_bstack
    lt rx939_pos, -1, rx939_done1993
    lt rx939_pos, 0, rx939_fail1995
    eq $I19, 0, rx939_fail1995
    nqp_islist $I20, rx939_cstack
    unless $I20, rx939_jump1996
    elements $I18, rx939_bstack
    le $I18, 0, rx939_cut1997
    dec $I18
    set $I18, rx939_bstack[$I18]
  rx939_cut1997:
    assign rx939_cstack, $I18
  rx939_jump1996:
    jump $I19
  rx939_done1993:
    rx939_cur."!cursor_fail"()
    .return (rx939_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_def" :subid("cuid_109_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1003
    .param pmc _lex_param_0 
    .const 'Sub' $P5025 = 'cuid_401_1360432459.413' 
    capture_lex $P5025 
    .const 'Sub' $P5025 = 'cuid_402_1360432459.413' 
    capture_lex $P5025 
    .lex "$*PACKAGE", $P101 
    .lex "$OUTER", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_211 
    .local pmc fb_tmp_212 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
    set self, _lex_param_0
    .local string rx954_tgt
    .local int rx954_pos
    .local int rx954_off
    .local int rx954_eos
    .local int rx954_rep
    .local pmc rx954_cur
    .local pmc rx954_curclass
    .local pmc rx954_bstack
    .local pmc rx954_cstack
    (rx954_cur, rx954_tgt, rx954_pos, rx954_curclass, rx954_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx954_cur
    length rx954_eos, rx954_tgt
    eq $I19, 1, rx954_restart2020
    gt rx954_pos, rx954_eos, rx954_fail2021
    repr_get_attr_int $I11, self, rx954_curclass, "$!from"
    ne $I11, -1, rxscan955_done2027
    goto rxscan955_scan2026
  rxscan955_loop2025:
    inc rx954_pos
    gt rx954_pos, rx954_eos, rx954_fail2021
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!from", rx954_pos
  rxscan955_scan2026:
    nqp_rxmark rx954_bstack, rxscan955_loop2025, rx954_pos, 0
  rxscan955_done2027:
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."ws"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    store_lex unicode:"$\x{a2}", rx954_cur
    unless_null $P101, fallback2029
    nqp_get_sc_object $P5004, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5003, $P5004
    set fb_tmp_211, $P5003
    repr_defined $I5001, fb_tmp_211
    unless $I5001 goto if957_else2030 
    set $P5005, fb_tmp_211["$PACKAGE"]
    set $P5007, $P5005
    goto if957_end2031
  if957_else2030:
    null $P5006
    set $P5007, $P5006
  if957_end2031:
    unless_null $P5007, vivi_9582032
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5007, $P5008
  vivi_9582032:
    unless_null $P5007, vivi_9592033
    die "Contextual $*PACKAGE not found"
    box $P5009, "Contextual $*PACKAGE not found"
    set $P5007, $P5009
  vivi_9592033:
    set $P101, $P5007
  fallback2029:
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."ws"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    store_lex unicode:"$\x{a2}", rx954_cur
.annotate 'line', 1005
    find_dynamic_lex $P5010, "$*W"
    unless_null $P5010, fallback2035
    nqp_get_sc_object $P5012, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5011, $P5012
    set fb_tmp_212, $P5011
    repr_defined $I5002, fb_tmp_212
    unless $I5002 goto if961_else2036 
    set $P5013, fb_tmp_212["$W"]
    set $P5015, $P5013
    goto if961_end2037
  if961_else2036:
    null $P5014
    set $P5015, $P5014
  if961_end2037:
    unless_null $P5015, vivi_9622038
    nqp_get_sc_object $P5016, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5015, $P5016
  vivi_9622038:
    unless_null $P5015, vivi_9632039
    die "Contextual $*W not found"
    box $P5017, "Contextual $*W not found"
    set $P5015, $P5017
  vivi_9632039:
    set $P5010, $P5015
  fallback2035:
    $P5018 = $P5010."cur_lexpad"()
    set $P102, $P5018
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."ws"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."name"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    nqp_rxmark rx954_bstack, rxsubrule965_pass2041, -1, 0
  rxsubrule965_pass2041:
    rx954_cstack = rx954_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."ws"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."ws"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    nqp_rxmark rx954_bstack, rxquantr969_done2046, rx954_pos, 0
  rxquantr969_loop2045:
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."ws"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    store_lex unicode:"$\x{a2}", rx954_cur
    $P5019 = $P103."MATCH"()
    set $P104, $P5019
    .const 'Sub' $P5020 = 'cuid_401_1360432459.413' 
    capture_lex $P5020
    $P5021 = $P5020()
    unless $P5021, rx954_fail2021
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."ws"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    add $I11, rx954_pos, 1
    gt $I11, rx954_eos, rx954_fail2021
    substr $S10, rx954_tgt, rx954_pos, 1
    ne $S10, ucs4:"[", rx954_fail2021
    add rx954_pos, 1
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."ws"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."role_params"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    nqp_rxmark rx954_bstack, rxsubrule976_pass2055, -1, 0
  rxsubrule976_pass2055:
    rx954_cstack = rx954_cur."!cursor_capture"($P11, "role_params")
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
  alt977_02057:
    nqp_rxmark rx954_bstack, alt977_12058, rx954_pos, 0
    add $I11, rx954_pos, 1
    gt $I11, rx954_eos, rx954_fail2021
    substr $S10, rx954_tgt, rx954_pos, 1
    ne $S10, ucs4:"]", rx954_fail2021
    add rx954_pos, 1
    goto alt977_end2056
  alt977_12058:
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."FAILGOAL"("']'")
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    goto rxsubrule978_pass2059
  rxsubrule978_back2060:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
  rxsubrule978_pass2059:
    rx954_cstack = rx954_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule978_back2060
    push rx954_bstack, $I11
    push rx954_bstack, 0
    push rx954_bstack, rx954_pos
    elements $I11, rx954_cstack
    push rx954_bstack, $I11
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
  alt977_end2056:
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."ws"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    nqp_rxpeek $I19, rx954_bstack, rxquantr969_done2046
    inc $I19
    inc $I19
    set rx954_rep, rx954_bstack[$I19]
    nqp_rxcommit rx954_bstack, rxquantr969_done2046
    inc rx954_rep
  rxquantr969_done2046:
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."ws"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    nqp_rxmark rx954_bstack, rxquantr981_done2064, rx954_pos, 0
  rxquantr981_loop2063:
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."ws"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    add $I11, rx954_pos, 2
    gt $I11, rx954_eos, rx954_fail2021
    substr $S10, rx954_tgt, rx954_pos, 2
    ne $S10, ucs4:"is", rx954_fail2021
    add rx954_pos, 2
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."ws"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    add $I11, rx954_pos, 5
    gt $I11, rx954_eos, rx954_fail2021
    substr $S10, rx954_tgt, rx954_pos, 5
    ne $S10, ucs4:"repr(", rx954_fail2021
    add rx954_pos, 5
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."ws"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."quote_EXPR"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    nqp_rxmark rx954_bstack, rxsubrule985_pass2068, -1, 0
  rxsubrule985_pass2068:
    rx954_cstack = rx954_cur."!cursor_capture"($P11, "repr")
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."ws"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    add $I11, rx954_pos, 1
    gt $I11, rx954_eos, rx954_fail2021
    substr $S10, rx954_tgt, rx954_pos, 1
    ne $S10, ucs4:")", rx954_fail2021
    add rx954_pos, 1
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."ws"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    nqp_rxpeek $I19, rx954_bstack, rxquantr981_done2064
    inc $I19
    inc $I19
    set rx954_rep, rx954_bstack[$I19]
    nqp_rxcommit rx954_bstack, rxquantr981_done2064
    inc rx954_rep
  rxquantr981_done2064:
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."ws"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    store_lex unicode:"$\x{a2}", rx954_cur
    $P5022 = $P103."MATCH"()
    set $P104, $P5022
    .const 'Sub' $P5023 = 'cuid_402_1360432459.413' 
    capture_lex $P5023
    $P5024 = $P5023()
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."ws"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    nqp_rxmark rx954_bstack, rxquantr1080_done2228, rx954_pos, 0
  rxquantr1080_loop2227:
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."ws"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    nqp_rxmark rx954_bstack, rxcap1082_fail2231, rx954_pos, 0
    add $I11, rx954_pos, 9
    gt $I11, rx954_eos, rx954_fail2021
    substr $S10, rx954_tgt, rx954_pos, 9
    ne $S10, ucs4:"is export", rx954_fail2021
    add rx954_pos, 9
    nqp_rxpeek $I19, rx954_bstack, rxcap1082_fail2231
    inc $I19
    set $I11, rx954_bstack[$I19]
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx954_pos)
    rx954_cstack = rx954_cur."!cursor_capture"($P11, "export")
    goto rxcap1082_done2230
  rxcap1082_fail2231:
    goto rx954_fail2021
  rxcap1082_done2230:
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."ws"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    nqp_rxpeek $I19, rx954_bstack, rxquantr1080_done2228
    inc $I19
    inc $I19
    set rx954_rep, rx954_bstack[$I19]
    nqp_rxcommit rx954_bstack, rxquantr1080_done2228
    inc rx954_rep
  rxquantr1080_done2228:
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."ws"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    nqp_rxmark rx954_bstack, rxquantr1085_done2235, rx954_pos, 0
  rxquantr1085_loop2234:
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."ws"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    add $I11, rx954_pos, 2
    gt $I11, rx954_eos, rx954_fail2021
    substr $S10, rx954_tgt, rx954_pos, 2
    ne $S10, ucs4:"is", rx954_fail2021
    add rx954_pos, 2
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."ws"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."name"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    nqp_rxmark rx954_bstack, rxsubrule1088_pass2238, -1, 0
  rxsubrule1088_pass2238:
    rx954_cstack = rx954_cur."!cursor_capture"($P11, "parent")
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."ws"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    nqp_rxpeek $I19, rx954_bstack, rxquantr1085_done2235
    inc $I19
    inc $I19
    set rx954_rep, rx954_bstack[$I19]
    nqp_rxcommit rx954_bstack, rxquantr1085_done2235
    inc rx954_rep
  rxquantr1085_done2235:
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."ws"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    nqp_rxmark rx954_bstack, rxquantr1091_done2242, rx954_pos, 0
  rxquantr1091_loop2241:
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."ws"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    add $I11, rx954_pos, 4
    gt $I11, rx954_eos, rx954_fail2021
    substr $S10, rx954_tgt, rx954_pos, 4
    ne $S10, ucs4:"does", rx954_fail2021
    add rx954_pos, 4
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."ws"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."name"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    nqp_rxmark rx954_bstack, rxsubrule1094_pass2245, -1, 0
  rxsubrule1094_pass2245:
    rx954_cstack = rx954_cur."!cursor_capture"($P11, "role")
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."ws"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    nqp_rxpeek $I19, rx954_bstack, rxquantr1091_done2242
    inc $I19
    inc $I19
    set rx954_rep, rx954_bstack[$I19]
    nqp_rxcommit rx954_bstack, rxquantr1091_done2242
    inc rx954_rep
    nqp_rxmark rx954_bstack, rxquantr1091_done2242, rx954_pos, rx954_rep
    goto rxquantr1091_loop2241
  rxquantr1091_done2242:
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."ws"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
  alt1097_02249:
    nqp_rxmark rx954_bstack, alt1097_12264, rx954_pos, 0
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."ws"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    add $I11, rx954_pos, 1
    gt $I11, rx954_eos, rx954_fail2021
    substr $S10, rx954_tgt, rx954_pos, 1
    ne $S10, ucs4:";", rx954_fail2021
    add rx954_pos, 1
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."ws"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."statementlist"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    nqp_rxmark rx954_bstack, rxsubrule1100_pass2252, -1, 0
  rxsubrule1100_pass2252:
    rx954_cstack = rx954_cur."!cursor_capture"($P11, "statementlist")
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."ws"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
  alt1102_02255:
    nqp_rxmark rx954_bstack, alt1102_12259, rx954_pos, 0
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."ws"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    lt rx954_pos, rx954_eos, rx954_fail2021
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."ws"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    goto alt1102_end2254
  alt1102_12259:
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."ws"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."panic"("Confused")
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."ws"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
  alt1102_end2254:
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."ws"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    goto alt1097_end2248
  alt1097_12264:
    nqp_rxmark rx954_bstack, alt1097_22269, rx954_pos, 0
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."ws"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    ge rx954_pos, rx954_eos, rx954_fail2021
    substr $S11, rx954_tgt, rx954_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx954_fail2021
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."ws"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    nqp_rxmark rx954_bstack, rxsubrule1112_pass2267, -1, 0
  rxsubrule1112_pass2267:
    rx954_cstack = rx954_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."ws"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    goto alt1097_end2248
  alt1097_22269:
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."ws"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."panic"("Malformed package declaration")
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."ws"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
  alt1097_end2248:
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."ws"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2021
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    rx954_cur."!cursor_pass"(rx954_pos, "package_def", 'backtrack'=>1)
    .return (rx954_cur)
  rx954_restart2020:
    repr_get_attr_obj rx954_cstack, rx954_cur, rx954_curclass, "$!cstack"
  rx954_fail2021:
    unless rx954_bstack, rx954_done2019
    pop $I19, rx954_bstack
    if_null rx954_cstack, rx954_cstack_done2024
    unless rx954_cstack, rx954_cstack_done2024
    dec $I19
    set $P11, rx954_cstack[$I19]
  rx954_cstack_done2024:
    pop rx954_rep, rx954_bstack
    pop rx954_pos, rx954_bstack
    pop $I19, rx954_bstack
    lt rx954_pos, -1, rx954_done2019
    lt rx954_pos, 0, rx954_fail2021
    eq $I19, 0, rx954_fail2021
    nqp_islist $I20, rx954_cstack
    unless $I20, rx954_jump2022
    elements $I18, rx954_bstack
    le $I18, 0, rx954_cut2023
    dec $I18
    set $I18, rx954_bstack[$I18]
  rx954_cut2023:
    assign rx954_cstack, $I18
  rx954_jump2022:
    jump $I19
  rx954_done2019:
    rx954_cur."!cursor_fail"()
    .return (rx954_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_401_1360432459.413") :anon :lex :outer("cuid_109_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1009
    .local pmc fb_tmp_213 
    find_dynamic_lex $P5001, "$*PKGDECL"
    unless_null $P5001, fallback2048
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5002, $P5003
    set fb_tmp_213, $P5002
    repr_defined $I5002, fb_tmp_213
    unless $I5002 goto if971_else2049 
    set $P5004, fb_tmp_213["$PKGDECL"]
    set $P5006, $P5004
    goto if971_end2050
  if971_else2049:
    null $P5005
    set $P5006, $P5005
  if971_end2050:
    unless_null $P5006, vivi_9722051
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_9722051:
    unless_null $P5006, vivi_9732052
    die "Contextual $*PKGDECL not found"
    box $P5008, "Contextual $*PKGDECL not found"
    set $P5006, $P5008
  vivi_9732052:
    set $P5001, $P5006
  fallback2048:
    set $S5001, $P5001
    iseq $I5001, $S5001, "role"
    .return ($I5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_402_1360432459.413") :anon :lex :outer("cuid_109_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1012
    .lex "%args", $P101 
    .local pmc fb_tmp_214 
    .local pmc fb_tmp_215 
    .local pmc fb_tmp_216 
    .local pmc fb_tmp_217 
    .local pmc fb_tmp_218 
    .local pmc fb_tmp_219 
    .local pmc fb_tmp_220 
    .local pmc fb_tmp_221 
    .local pmc fb_tmp_222 
    .local pmc fb_tmp_223 
    .local pmc fb_tmp_224 
    .local pmc fb_tmp_225 
    .local pmc fb_tmp_226 
    .local pmc fb_tmp_227 
    .local pmc fb_tmp_228 
    .local pmc fb_tmp_229 
    .local pmc fb_tmp_230 
    .local pmc fb_tmp_231 
    .local pmc fb_tmp_232 
    .local pmc fb_tmp_233 
    .local pmc fb_tmp_234 
    .local pmc fb_tmp_235 
    .local pmc fb_tmp_236 
    .local pmc fb_tmp_237 
    .local pmc fb_tmp_238 
    .local pmc fb_tmp_239 
    .local pmc fb_tmp_240 
    .local pmc fb_tmp_241 
    .local pmc fb_tmp_242 
    .local pmc fb_tmp_243 
    .local pmc fb_tmp_244 
    .local pmc fb_tmp_245 
    .local pmc fb_tmp_246 
    .local pmc fb_tmp_247 
    .local pmc fb_tmp_248 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $P5002, "$/"
    unless_null $P5002, fallback2074
    nqp_get_sc_object $P5003, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5002, $P5003
  fallback2074:
    set fb_tmp_214, $P5002
    repr_defined $I5001, fb_tmp_214
    unless $I5001 goto if989_else2072 
    set $P5004, fb_tmp_214["name"]
    set $P5006, $P5004
    goto if989_end2073
  if989_else2072:
    null $P5005
    set $P5006, $P5005
  if989_end2073:
    unless_null $P5006, vivi_9902075
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_9902075:
    set $S5001, $P5006
    box $P5008, $S5001
    set $P101["name"], $P5008
    find_lex $P5009, "$/"
    unless_null $P5009, fallback2080
    nqp_get_sc_object $P5010, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5009, $P5010
  fallback2080:
    set fb_tmp_215, $P5009
    repr_defined $I5002, fb_tmp_215
    unless $I5002 goto if992_else2078 
    set $P5011, fb_tmp_215["repr"]
    set $P5013, $P5011
    goto if992_end2079
  if992_else2078:
    null $P5012
    set $P5013, $P5012
  if992_end2079:
    unless_null $P5013, vivi_9932081
    nqp_get_sc_object $P5014, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5013, $P5014
  vivi_9932081:
    unless $P5013 goto if991_end2077 
.annotate 'line', 1017
    find_lex $P5015, "$/"
    unless_null $P5015, fallback2092
    nqp_get_sc_object $P5016, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5015, $P5016
  fallback2092:
    set fb_tmp_220, $P5015
    repr_defined $I5007, fb_tmp_220
    unless $I5007 goto if998_else2090 
    set $P5017, fb_tmp_220["repr"]
    set $P5019, $P5017
    goto if998_end2091
  if998_else2090:
    null $P5018
    set $P5019, $P5018
  if998_end2091:
    unless_null $P5019, vivi_9992093
    nqp_get_sc_object $P5020, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5019, $P5020
  vivi_9992093:
    set fb_tmp_219, $P5019
    repr_defined $I5006, fb_tmp_219
    unless $I5006 goto if997_else2088 
    set $P5021, fb_tmp_219[0]
    set $P5023, $P5021
    goto if997_end2089
  if997_else2088:
    null $P5022
    set $P5023, $P5022
  if997_end2089:
    unless_null $P5023, vivi_10002094
    nqp_get_sc_object $P5024, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5023, $P5024
  vivi_10002094:
    set fb_tmp_218, $P5023
    repr_defined $I5005, fb_tmp_218
    unless $I5005 goto if996_else2086 
    set $P5025, fb_tmp_218["quote_delimited"]
    set $P5027, $P5025
    goto if996_end2087
  if996_else2086:
    null $P5026
    set $P5027, $P5026
  if996_end2087:
    unless_null $P5027, vivi_10012095
    nqp_get_sc_object $P5028, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5027, $P5028
  vivi_10012095:
    set fb_tmp_217, $P5027
    repr_defined $I5004, fb_tmp_217
    unless $I5004 goto if995_else2084 
    set $P5029, fb_tmp_217["quote_atom"]
    set $P5031, $P5029
    goto if995_end2085
  if995_else2084:
    null $P5030
    set $P5031, $P5030
  if995_end2085:
    unless_null $P5031, vivi_10022096
    nqp_get_sc_object $P5032, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5031, $P5032
  vivi_10022096:
    set fb_tmp_216, $P5031
    repr_defined $I5003, fb_tmp_216
    unless $I5003 goto if994_else2082 
    set $P5033, fb_tmp_216[0]
    set $P5035, $P5033
    goto if994_end2083
  if994_else2082:
    null $P5034
    set $P5035, $P5034
  if994_end2083:
    unless_null $P5035, vivi_10032097
    nqp_get_sc_object $P5036, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5035, $P5036
  vivi_10032097:
    set $S5002, $P5035
    box $P5037, $S5002
    set $P101["repr"], $P5037
  if991_end2077:
.annotate 'line', 1020
    find_dynamic_lex $P5038, "$*W"
    unless_null $P5038, fallback2098
    nqp_get_sc_object $P5040, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5039, $P5040
    set fb_tmp_221, $P5039
    repr_defined $I5008, fb_tmp_221
    unless $I5008 goto if1004_else2099 
    set $P5041, fb_tmp_221["$W"]
    set $P5043, $P5041
    goto if1004_end2100
  if1004_else2099:
    null $P5042
    set $P5043, $P5042
  if1004_end2100:
    unless_null $P5043, vivi_10052101
    nqp_get_sc_object $P5044, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5043, $P5044
  vivi_10052101:
    unless_null $P5043, vivi_10062102
    die "Contextual $*W not found"
    box $P5045, "Contextual $*W not found"
    set $P5043, $P5045
  vivi_10062102:
    set $P5038, $P5043
  fallback2098:
    find_dynamic_lex $P5046, "%*HOW"
    unless_null $P5046, fallback2105
    nqp_get_sc_object $P5048, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5047, $P5048
    set fb_tmp_223, $P5047
    repr_defined $I5010, fb_tmp_223
    unless $I5010 goto if1008_else2106 
    set $P5049, fb_tmp_223["%HOW"]
    set $P5051, $P5049
    goto if1008_end2107
  if1008_else2106:
    null $P5050
    set $P5051, $P5050
  if1008_end2107:
    unless_null $P5051, vivi_10092108
    nqp_get_sc_object $P5053, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5052, $P5053
    new $P5054, 'Hash'
    set $P5052["%HOW"], $P5054
    set $P5051, $P5054
  vivi_10092108:
    unless_null $P5051, vivi_10102109
    die "Contextual %*HOW not found"
    box $P5055, "Contextual %*HOW not found"
    set $P5051, $P5055
  vivi_10102109:
    set $P5046, $P5051
  fallback2105:
    set fb_tmp_222, $P5046
    repr_defined $I5009, fb_tmp_222
    unless $I5009 goto if1007_else2103 
    find_dynamic_lex $P5057, "$*PKGDECL"
    unless_null $P5057, fallback2110
    nqp_get_sc_object $P5059, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5058, $P5059
    set fb_tmp_224, $P5058
    repr_defined $I5011, fb_tmp_224
    unless $I5011 goto if1011_else2111 
    set $P5060, fb_tmp_224["$PKGDECL"]
    set $P5062, $P5060
    goto if1011_end2112
  if1011_else2111:
    null $P5061
    set $P5062, $P5061
  if1011_end2112:
    unless_null $P5062, vivi_10122113
    nqp_get_sc_object $P5063, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5062, $P5063
  vivi_10122113:
    unless_null $P5062, vivi_10132114
    die "Contextual $*PKGDECL not found"
    box $P5064, "Contextual $*PKGDECL not found"
    set $P5062, $P5064
  vivi_10132114:
    set $P5057, $P5062
  fallback2110:
    set $S5003, $P5057
    set $P5056, fb_tmp_222[$S5003]
    set $P5066, $P5056
    goto if1007_end2104
  if1007_else2103:
    null $P5065
    set $P5066, $P5065
  if1007_end2104:
    unless_null $P5066, vivi_10142115
    nqp_get_sc_object $P5067, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5066, $P5067
  vivi_10142115:
    $P5068 = $P5038."pkg_create_mo"($P5066, $P101 :flat :named)
    store_dynamic_lex "$*PACKAGE", $P5068
    find_dynamic_lex $P5069, "$*SCOPE"
    unless_null $P5069, fallback2120
    nqp_get_sc_object $P5071, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5070, $P5071
    set fb_tmp_225, $P5070
    repr_defined $I5013, fb_tmp_225
    unless $I5013 goto if1017_else2121 
    set $P5072, fb_tmp_225["$SCOPE"]
    set $P5074, $P5072
    goto if1017_end2122
  if1017_else2121:
    null $P5073
    set $P5074, $P5073
  if1017_end2122:
    unless_null $P5074, vivi_10182123
    nqp_get_sc_object $P5075, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5074, $P5075
  vivi_10182123:
    unless_null $P5074, vivi_10192124
    die "Contextual $*SCOPE not found"
    box $P5076, "Contextual $*SCOPE not found"
    set $P5074, $P5076
  vivi_10192124:
    set $P5069, $P5074
  fallback2120:
    set $S5004, $P5069
    iseq $I5012, $S5004, "our"
    set $I5016, $I5012
    if $I5012 goto unless1016_end2119 
    find_dynamic_lex $P5077, "$*SCOPE"
    unless_null $P5077, fallback2125
    nqp_get_sc_object $P5079, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5078, $P5079
    set fb_tmp_226, $P5078
    repr_defined $I5015, fb_tmp_226
    unless $I5015 goto if1020_else2126 
    set $P5080, fb_tmp_226["$SCOPE"]
    set $P5082, $P5080
    goto if1020_end2127
  if1020_else2126:
    null $P5081
    set $P5082, $P5081
  if1020_end2127:
    unless_null $P5082, vivi_10212128
    nqp_get_sc_object $P5083, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5082, $P5083
  vivi_10212128:
    unless_null $P5082, vivi_10222129
    die "Contextual $*SCOPE not found"
    box $P5084, "Contextual $*SCOPE not found"
    set $P5082, $P5084
  vivi_10222129:
    set $P5077, $P5082
  fallback2125:
    set $S5005, $P5077
    iseq $I5014, $S5005, ""
    set $I5016, $I5014
  unless1016_end2119:
    unless $I5016 goto if1015_else2116 
.annotate 'line', 1023
.annotate 'line', 1024
    find_dynamic_lex $P5085, "$*W"
    unless_null $P5085, fallback2130
    nqp_get_sc_object $P5087, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5086, $P5087
    set fb_tmp_227, $P5086
    repr_defined $I5017, fb_tmp_227
    unless $I5017 goto if1023_else2131 
    set $P5088, fb_tmp_227["$W"]
    set $P5090, $P5088
    goto if1023_end2132
  if1023_else2131:
    null $P5089
    set $P5090, $P5089
  if1023_end2132:
    unless_null $P5090, vivi_10242133
    nqp_get_sc_object $P5091, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5090, $P5091
  vivi_10242133:
    unless_null $P5090, vivi_10252134
    die "Contextual $*W not found"
    box $P5092, "Contextual $*W not found"
    set $P5090, $P5092
  vivi_10252134:
    set $P5085, $P5090
  fallback2130:
    find_dynamic_lex $P5093, "$*OUTERPACKAGE"
    unless_null $P5093, fallback2135
    nqp_get_sc_object $P5095, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5094, $P5095
    set fb_tmp_228, $P5094
    repr_defined $I5018, fb_tmp_228
    unless $I5018 goto if1026_else2136 
    set $P5096, fb_tmp_228["$OUTERPACKAGE"]
    set $P5098, $P5096
    goto if1026_end2137
  if1026_else2136:
    null $P5097
    set $P5098, $P5097
  if1026_end2137:
    unless_null $P5098, vivi_10272138
    nqp_get_sc_object $P5099, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5098, $P5099
  vivi_10272138:
    unless_null $P5098, vivi_10282139
    die "Contextual $*OUTERPACKAGE not found"
    box $P5100, "Contextual $*OUTERPACKAGE not found"
    set $P5098, $P5100
  vivi_10282139:
    set $P5093, $P5098
  fallback2135:
    find_lex $P5101, "$/"
    unless_null $P5101, fallback2144
    nqp_get_sc_object $P5102, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5101, $P5102
  fallback2144:
    set fb_tmp_230, $P5101
    repr_defined $I5020, fb_tmp_230
    unless $I5020 goto if1030_else2142 
    set $P5103, fb_tmp_230["name"]
    set $P5105, $P5103
    goto if1030_end2143
  if1030_else2142:
    null $P5104
    set $P5105, $P5104
  if1030_end2143:
    unless_null $P5105, vivi_10312145
    nqp_get_sc_object $P5106, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5105, $P5106
  vivi_10312145:
    set fb_tmp_229, $P5105
    repr_defined $I5019, fb_tmp_229
    unless $I5019 goto if1029_else2140 
    set $P5107, fb_tmp_229["identifier"]
    set $P5109, $P5107
    goto if1029_end2141
  if1029_else2140:
    null $P5108
    set $P5109, $P5108
  if1029_end2141:
    unless_null $P5109, vivi_10322146
    nqp_get_sc_object $P5110, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5109, $P5110
  vivi_10322146:
    find_dynamic_lex $P5111, "$*PACKAGE"
    unless_null $P5111, fallback2147
    nqp_get_sc_object $P5113, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5112, $P5113
    set fb_tmp_231, $P5112
    repr_defined $I5021, fb_tmp_231
    unless $I5021 goto if1033_else2148 
    set $P5114, fb_tmp_231["$PACKAGE"]
    set $P5116, $P5114
    goto if1033_end2149
  if1033_else2148:
    null $P5115
    set $P5116, $P5115
  if1033_end2149:
    unless_null $P5116, vivi_10342150
    nqp_get_sc_object $P5117, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5116, $P5117
  vivi_10342150:
    unless_null $P5116, vivi_10352151
    die "Contextual $*PACKAGE not found"
    box $P5118, "Contextual $*PACKAGE not found"
    set $P5116, $P5118
  vivi_10352151:
    set $P5111, $P5116
  fallback2147:
    $P5085."install_package_symbol"($P5093, $P5109, $P5111)
    find_lex $P5119, "$/"
    unless_null $P5119, fallback2158
    nqp_get_sc_object $P5120, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5119, $P5120
  fallback2158:
    set fb_tmp_233, $P5119
    repr_defined $I5024, fb_tmp_233
    unless $I5024 goto if1038_else2156 
    set $P5121, fb_tmp_233["name"]
    set $P5123, $P5121
    goto if1038_end2157
  if1038_else2156:
    null $P5122
    set $P5123, $P5122
  if1038_end2157:
    unless_null $P5123, vivi_10392159
    nqp_get_sc_object $P5124, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5123, $P5124
  vivi_10392159:
    set fb_tmp_232, $P5123
    repr_defined $I5023, fb_tmp_232
    unless $I5023 goto if1037_else2154 
    set $P5125, fb_tmp_232["identifier"]
    set $P5127, $P5125
    goto if1037_end2155
  if1037_else2154:
    null $P5126
    set $P5127, $P5126
  if1037_end2155:
    unless_null $P5127, vivi_10402160
    nqp_get_sc_object $P5128, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5127, $P5128
  vivi_10402160:
    set $N5001, $P5127
    set $N5002, 1
    iseq $I5022, $N5001, $N5002
    box $P5162, $I5022
    set $P5161, $P5162
    unless $I5022 goto if1036_end2153 
.annotate 'line', 1025
.annotate 'line', 1026
    find_dynamic_lex $P5129, "$*W"
    unless_null $P5129, fallback2161
    nqp_get_sc_object $P5131, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5130, $P5131
    set fb_tmp_234, $P5130
    repr_defined $I5025, fb_tmp_234
    unless $I5025 goto if1041_else2162 
    set $P5132, fb_tmp_234["$W"]
    set $P5134, $P5132
    goto if1041_end2163
  if1041_else2162:
    null $P5133
    set $P5134, $P5133
  if1041_end2163:
    unless_null $P5134, vivi_10422164
    nqp_get_sc_object $P5135, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5134, $P5135
  vivi_10422164:
    unless_null $P5134, vivi_10432165
    die "Contextual $*W not found"
    box $P5136, "Contextual $*W not found"
    set $P5134, $P5136
  vivi_10432165:
    set $P5129, $P5134
  fallback2161:
    find_lex $P5137, "$OUTER"
    find_lex $P5138, "$/"
    unless_null $P5138, fallback2172
    nqp_get_sc_object $P5139, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5138, $P5139
  fallback2172:
    set fb_tmp_237, $P5138
    repr_defined $I5028, fb_tmp_237
    unless $I5028 goto if1046_else2170 
    set $P5140, fb_tmp_237["name"]
    set $P5142, $P5140
    goto if1046_end2171
  if1046_else2170:
    null $P5141
    set $P5142, $P5141
  if1046_end2171:
    unless_null $P5142, vivi_10472173
    nqp_get_sc_object $P5143, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5142, $P5143
  vivi_10472173:
    set fb_tmp_236, $P5142
    repr_defined $I5027, fb_tmp_236
    unless $I5027 goto if1045_else2168 
    set $P5144, fb_tmp_236["identifier"]
    set $P5146, $P5144
    goto if1045_end2169
  if1045_else2168:
    null $P5145
    set $P5146, $P5145
  if1045_end2169:
    unless_null $P5146, vivi_10482174
    nqp_get_sc_object $P5147, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5146, $P5147
  vivi_10482174:
    set fb_tmp_235, $P5146
    repr_defined $I5026, fb_tmp_235
    unless $I5026 goto if1044_else2166 
    set $P5148, fb_tmp_235[0]
    set $P5150, $P5148
    goto if1044_end2167
  if1044_else2166:
    null $P5149
    set $P5150, $P5149
  if1044_end2167:
    unless_null $P5150, vivi_10492175
    nqp_get_sc_object $P5151, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5150, $P5151
  vivi_10492175:
    find_dynamic_lex $P5152, "$*PACKAGE"
    unless_null $P5152, fallback2176
    nqp_get_sc_object $P5154, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5153, $P5154
    set fb_tmp_238, $P5153
    repr_defined $I5029, fb_tmp_238
    unless $I5029 goto if1050_else2177 
    set $P5155, fb_tmp_238["$PACKAGE"]
    set $P5157, $P5155
    goto if1050_end2178
  if1050_else2177:
    null $P5156
    set $P5157, $P5156
  if1050_end2178:
    unless_null $P5157, vivi_10512179
    nqp_get_sc_object $P5158, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5157, $P5158
  vivi_10512179:
    unless_null $P5157, vivi_10522180
    die "Contextual $*PACKAGE not found"
    box $P5159, "Contextual $*PACKAGE not found"
    set $P5157, $P5159
  vivi_10522180:
    set $P5152, $P5157
  fallback2176:
    $P5160 = $P5129."install_lexical_symbol"($P5137, $P5150, $P5152)
    set $P5161, $P5160
  if1036_end2153:
    set $P5233, $P5161
    goto if1015_end2117
  if1015_else2116:
    find_dynamic_lex $P5163, "$*SCOPE"
    unless_null $P5163, fallback2183
    nqp_get_sc_object $P5165, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5164, $P5165
    set fb_tmp_239, $P5164
    repr_defined $I5031, fb_tmp_239
    unless $I5031 goto if1054_else2184 
    set $P5166, fb_tmp_239["$SCOPE"]
    set $P5168, $P5166
    goto if1054_end2185
  if1054_else2184:
    null $P5167
    set $P5168, $P5167
  if1054_end2185:
    unless_null $P5168, vivi_10552186
    nqp_get_sc_object $P5169, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5168, $P5169
  vivi_10552186:
    unless_null $P5168, vivi_10562187
    die "Contextual $*SCOPE not found"
    box $P5170, "Contextual $*SCOPE not found"
    set $P5168, $P5170
  vivi_10562187:
    set $P5163, $P5168
  fallback2183:
    set $S5006, $P5163
    iseq $I5030, $S5006, "my"
    unless $I5030 goto if1053_else2181 
.annotate 'line', 1029
    find_lex $P5171, "$/"
    unless_null $P5171, fallback2194
    nqp_get_sc_object $P5172, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5171, $P5172
  fallback2194:
    set fb_tmp_241, $P5171
    repr_defined $I5034, fb_tmp_241
    unless $I5034 goto if1059_else2192 
    set $P5173, fb_tmp_241["name"]
    set $P5175, $P5173
    goto if1059_end2193
  if1059_else2192:
    null $P5174
    set $P5175, $P5174
  if1059_end2193:
    unless_null $P5175, vivi_10602195
    nqp_get_sc_object $P5176, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5175, $P5176
  vivi_10602195:
    set fb_tmp_240, $P5175
    repr_defined $I5033, fb_tmp_240
    unless $I5033 goto if1058_else2190 
    set $P5177, fb_tmp_240["identifier"]
    set $P5179, $P5177
    goto if1058_end2191
  if1058_else2190:
    null $P5178
    set $P5179, $P5178
  if1058_end2191:
    unless_null $P5179, vivi_10612196
    nqp_get_sc_object $P5180, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5179, $P5180
  vivi_10612196:
    set $N5003, $P5179
    set $N5004, 1
    isne $I5032, $N5003, $N5004
    unless $I5032 goto if1057_end2189 
.annotate 'line', 1030
.annotate 'line', 1031
    find_lex $P5181, "$/"
    unless_null $P5181, fallback2199
    nqp_get_sc_object $P5182, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5181, $P5182
  fallback2199:
    set fb_tmp_242, $P5181
    repr_defined $I5035, fb_tmp_242
    unless $I5035 goto if1062_else2197 
    set $P5183, fb_tmp_242["name"]
    set $P5185, $P5183
    goto if1062_end2198
  if1062_else2197:
    null $P5184
    set $P5185, $P5184
  if1062_end2198:
    unless_null $P5185, vivi_10632200
    nqp_get_sc_object $P5186, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5185, $P5186
  vivi_10632200:
    $P5187 = $P5185."CURSOR"()
    $P5188 = $P5187."panic"("A my scoped package cannot have a multi-part name yet")
  if1057_end2189:
.annotate 'line', 1033
    find_dynamic_lex $P5189, "$*W"
    unless_null $P5189, fallback2201
    nqp_get_sc_object $P5191, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5190, $P5191
    set fb_tmp_243, $P5190
    repr_defined $I5036, fb_tmp_243
    unless $I5036 goto if1064_else2202 
    set $P5192, fb_tmp_243["$W"]
    set $P5194, $P5192
    goto if1064_end2203
  if1064_else2202:
    null $P5193
    set $P5194, $P5193
  if1064_end2203:
    unless_null $P5194, vivi_10652204
    nqp_get_sc_object $P5195, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5194, $P5195
  vivi_10652204:
    unless_null $P5194, vivi_10662205
    die "Contextual $*W not found"
    box $P5196, "Contextual $*W not found"
    set $P5194, $P5196
  vivi_10662205:
    set $P5189, $P5194
  fallback2201:
    find_lex $P5197, "$OUTER"
    find_lex $P5198, "$/"
    unless_null $P5198, fallback2212
    nqp_get_sc_object $P5199, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5198, $P5199
  fallback2212:
    set fb_tmp_246, $P5198
    repr_defined $I5039, fb_tmp_246
    unless $I5039 goto if1069_else2210 
    set $P5200, fb_tmp_246["name"]
    set $P5202, $P5200
    goto if1069_end2211
  if1069_else2210:
    null $P5201
    set $P5202, $P5201
  if1069_end2211:
    unless_null $P5202, vivi_10702213
    nqp_get_sc_object $P5203, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5202, $P5203
  vivi_10702213:
    set fb_tmp_245, $P5202
    repr_defined $I5038, fb_tmp_245
    unless $I5038 goto if1068_else2208 
    set $P5204, fb_tmp_245["identifier"]
    set $P5206, $P5204
    goto if1068_end2209
  if1068_else2208:
    null $P5205
    set $P5206, $P5205
  if1068_end2209:
    unless_null $P5206, vivi_10712214
    nqp_get_sc_object $P5207, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5206, $P5207
  vivi_10712214:
    set fb_tmp_244, $P5206
    repr_defined $I5037, fb_tmp_244
    unless $I5037 goto if1067_else2206 
    set $P5208, fb_tmp_244[0]
    set $P5210, $P5208
    goto if1067_end2207
  if1067_else2206:
    null $P5209
    set $P5210, $P5209
  if1067_end2207:
    unless_null $P5210, vivi_10722215
    nqp_get_sc_object $P5211, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5210, $P5211
  vivi_10722215:
    find_dynamic_lex $P5212, "$*PACKAGE"
    unless_null $P5212, fallback2216
    nqp_get_sc_object $P5214, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5213, $P5214
    set fb_tmp_247, $P5213
    repr_defined $I5040, fb_tmp_247
    unless $I5040 goto if1073_else2217 
    set $P5215, fb_tmp_247["$PACKAGE"]
    set $P5217, $P5215
    goto if1073_end2218
  if1073_else2217:
    null $P5216
    set $P5217, $P5216
  if1073_end2218:
    unless_null $P5217, vivi_10742219
    nqp_get_sc_object $P5218, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5217, $P5218
  vivi_10742219:
    unless_null $P5217, vivi_10752220
    die "Contextual $*PACKAGE not found"
    box $P5219, "Contextual $*PACKAGE not found"
    set $P5217, $P5219
  vivi_10752220:
    set $P5212, $P5217
  fallback2216:
    $P5220 = $P5189."install_lexical_symbol"($P5197, $P5210, $P5212)
    set $P5232, $P5220
    goto if1053_end2182
  if1053_else2181:
.annotate 'line', 1035
.annotate 'line', 1036
    find_lex $P5221, "$/"
    $P5222 = $P5221."CURSOR"()
    find_dynamic_lex $P5223, "$*SCOPE"
    unless_null $P5223, fallback2221
    nqp_get_sc_object $P5225, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5224, $P5225
    set fb_tmp_248, $P5224
    repr_defined $I5041, fb_tmp_248
    unless $I5041 goto if1076_else2222 
    set $P5226, fb_tmp_248["$SCOPE"]
    set $P5228, $P5226
    goto if1076_end2223
  if1076_else2222:
    null $P5227
    set $P5228, $P5227
  if1076_end2223:
    unless_null $P5228, vivi_10772224
    nqp_get_sc_object $P5229, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5228, $P5229
  vivi_10772224:
    unless_null $P5228, vivi_10782225
    die "Contextual $*SCOPE not found"
    box $P5230, "Contextual $*SCOPE not found"
    set $P5228, $P5230
  vivi_10782225:
    set $P5223, $P5228
  fallback2221:
    set $S5008, $P5223
    concat $S5007, $S5008, " scoped packages are not supported"
    $P5231 = $P5222."panic"($S5007)
    set $P5232, $P5231
  if1053_end2182:
    set $P5233, $P5232
  if1015_end2117:
    .return ($P5233) 
.end
.HLL "nqp"
.namespace []
.sub "role_params" :subid("cuid_110_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1050
    .param pmc _lex_param_0 
    .lex "$*SCOPE", $P101 
    .lex "$*IN_DECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
    set self, _lex_param_0
    .local string rx1118_tgt
    .local int rx1118_pos
    .local int rx1118_off
    .local int rx1118_eos
    .local int rx1118_rep
    .local pmc rx1118_cur
    .local pmc rx1118_curclass
    .local pmc rx1118_bstack
    .local pmc rx1118_cstack
    (rx1118_cur, rx1118_tgt, rx1118_pos, rx1118_curclass, rx1118_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1118_cur
    length rx1118_eos, rx1118_tgt
    eq $I19, 1, rx1118_restart2276
    gt rx1118_pos, rx1118_eos, rx1118_fail2277
    repr_get_attr_int $I11, self, rx1118_curclass, "$!from"
    ne $I11, -1, rxscan1119_done2283
    goto rxscan1119_scan2282
  rxscan1119_loop2281:
    inc rx1118_pos
    gt rx1118_pos, rx1118_eos, rx1118_fail2277
    repr_bind_attr_int rx1118_cur, rx1118_curclass, "$!from", rx1118_pos
  rxscan1119_scan2282:
    nqp_rxmark rx1118_bstack, rxscan1119_loop2281, rx1118_pos, 0
  rxscan1119_done2283:
    repr_bind_attr_int rx1118_cur, rx1118_curclass, "$!pos", rx1118_pos
    $P11 = rx1118_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1118_curclass, "$!pos"
    lt $I11, 0, rx1118_fail2277
    repr_get_attr_int rx1118_pos, $P11, rx1118_curclass, "$!pos"
    repr_bind_attr_int rx1118_cur, rx1118_curclass, "$!pos", rx1118_pos
    store_lex unicode:"$\x{a2}", rx1118_cur
    box $P5003, "my"
    set $P101, $P5003
    repr_bind_attr_int rx1118_cur, rx1118_curclass, "$!pos", rx1118_pos
    $P11 = rx1118_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1118_curclass, "$!pos"
    lt $I11, 0, rx1118_fail2277
    repr_get_attr_int rx1118_pos, $P11, rx1118_curclass, "$!pos"
    repr_bind_attr_int rx1118_cur, rx1118_curclass, "$!pos", rx1118_pos
    store_lex unicode:"$\x{a2}", rx1118_cur
    box $P5004, "variable"
    set $P102, $P5004
    repr_bind_attr_int rx1118_cur, rx1118_curclass, "$!pos", rx1118_pos
    $P11 = rx1118_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1118_curclass, "$!pos"
    lt $I11, 0, rx1118_fail2277
    repr_get_attr_int rx1118_pos, $P11, rx1118_curclass, "$!pos"
    nqp_rxmark rx1118_bstack, rxquantr1123_done2288, -1, 0
  rxquantr1123_loop2287:
    repr_bind_attr_int rx1118_cur, rx1118_curclass, "$!pos", rx1118_pos
    $P11 = rx1118_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1118_curclass, "$!pos"
    lt $I11, 0, rx1118_fail2277
    repr_get_attr_int rx1118_pos, $P11, rx1118_curclass, "$!pos"
    repr_bind_attr_int rx1118_cur, rx1118_curclass, "$!pos", rx1118_pos
    $P11 = rx1118_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1118_curclass, "$!pos"
    lt $I11, 0, rx1118_fail2277
    nqp_rxmark rx1118_bstack, rxsubrule1125_pass2290, -1, 0
  rxsubrule1125_pass2290:
    rx1118_cstack = rx1118_cur."!cursor_capture"($P11, "variable")
    repr_get_attr_int rx1118_pos, $P11, rx1118_curclass, "$!pos"
    repr_bind_attr_int rx1118_cur, rx1118_curclass, "$!pos", rx1118_pos
    $P11 = rx1118_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1118_curclass, "$!pos"
    lt $I11, 0, rx1118_fail2277
    repr_get_attr_int rx1118_pos, $P11, rx1118_curclass, "$!pos"
    nqp_rxpeek $I19, rx1118_bstack, rxquantr1123_done2288
    inc $I19
    inc $I19
    set rx1118_rep, rx1118_bstack[$I19]
    nqp_rxcommit rx1118_bstack, rxquantr1123_done2288
    inc rx1118_rep
    nqp_rxmark rx1118_bstack, rxquantr1123_done2288, rx1118_pos, rx1118_rep
    repr_bind_attr_int rx1118_cur, rx1118_curclass, "$!pos", rx1118_pos
    $P11 = rx1118_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1118_curclass, "$!pos"
    lt $I11, 0, rx1118_fail2277
    repr_get_attr_int rx1118_pos, $P11, rx1118_curclass, "$!pos"
    add $I11, rx1118_pos, 1
    gt $I11, rx1118_eos, rx1118_fail2277
    substr $S10, rx1118_tgt, rx1118_pos, 1
    ne $S10, ucs4:",", rx1118_fail2277
    add rx1118_pos, 1
    repr_bind_attr_int rx1118_cur, rx1118_curclass, "$!pos", rx1118_pos
    $P11 = rx1118_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1118_curclass, "$!pos"
    lt $I11, 0, rx1118_fail2277
    repr_get_attr_int rx1118_pos, $P11, rx1118_curclass, "$!pos"
    goto rxquantr1123_loop2287
  rxquantr1123_done2288:
    repr_bind_attr_int rx1118_cur, rx1118_curclass, "$!pos", rx1118_pos
    $P11 = rx1118_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1118_curclass, "$!pos"
    lt $I11, 0, rx1118_fail2277
    repr_get_attr_int rx1118_pos, $P11, rx1118_curclass, "$!pos"
    rx1118_cur."!cursor_pass"(rx1118_pos, "role_params", 'backtrack'=>1)
    .return (rx1118_cur)
  rx1118_restart2276:
    repr_get_attr_obj rx1118_cstack, rx1118_cur, rx1118_curclass, "$!cstack"
  rx1118_fail2277:
    unless rx1118_bstack, rx1118_done2275
    pop $I19, rx1118_bstack
    if_null rx1118_cstack, rx1118_cstack_done2280
    unless rx1118_cstack, rx1118_cstack_done2280
    dec $I19
    set $P11, rx1118_cstack[$I19]
  rx1118_cstack_done2280:
    pop rx1118_rep, rx1118_bstack
    pop rx1118_pos, rx1118_bstack
    pop $I19, rx1118_bstack
    lt rx1118_pos, -1, rx1118_done2275
    lt rx1118_pos, 0, rx1118_fail2277
    eq $I19, 0, rx1118_fail2277
    nqp_islist $I20, rx1118_cstack
    unless $I20, rx1118_jump2278
    elements $I18, rx1118_bstack
    le $I18, 0, rx1118_cut2279
    dec $I18
    set $I18, rx1118_bstack[$I18]
  rx1118_cut2279:
    assign rx1118_cstack, $I18
  rx1118_jump2278:
    jump $I19
  rx1118_done2275:
    rx1118_cur."!cursor_fail"()
    .return (rx1118_cur) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator" :subid("cuid_111_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1056
    .param pmc self 
    $P5001 = self."!protoregex"("scope_declarator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<my>" :subid("cuid_112_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1057
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1130_tgt
    .local int rx1130_pos
    .local int rx1130_off
    .local int rx1130_eos
    .local int rx1130_rep
    .local pmc rx1130_cur
    .local pmc rx1130_curclass
    .local pmc rx1130_bstack
    .local pmc rx1130_cstack
    (rx1130_cur, rx1130_tgt, rx1130_pos, rx1130_curclass, rx1130_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1130_cur
    length rx1130_eos, rx1130_tgt
    eq $I19, 1, rx1130_restart2297
    gt rx1130_pos, rx1130_eos, rx1130_fail2298
    repr_get_attr_int $I11, self, rx1130_curclass, "$!from"
    ne $I11, -1, rxscan1131_done2304
    goto rxscan1131_scan2303
  rxscan1131_loop2302:
    inc rx1130_pos
    gt rx1130_pos, rx1130_eos, rx1130_fail2298
    repr_bind_attr_int rx1130_cur, rx1130_curclass, "$!from", rx1130_pos
  rxscan1131_scan2303:
    nqp_rxmark rx1130_bstack, rxscan1131_loop2302, rx1130_pos, 0
  rxscan1131_done2304:
    nqp_rxmark rx1130_bstack, rxcap1132_fail2306, rx1130_pos, 0
    add $I11, rx1130_pos, 2
    gt $I11, rx1130_eos, rx1130_fail2298
    substr $S10, rx1130_tgt, rx1130_pos, 2
    ne $S10, ucs4:"my", rx1130_fail2298
    add rx1130_pos, 2
    nqp_rxpeek $I19, rx1130_bstack, rxcap1132_fail2306
    inc $I19
    set $I11, rx1130_bstack[$I19]
    repr_bind_attr_int rx1130_cur, rx1130_curclass, "$!pos", rx1130_pos
    $P11 = rx1130_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1130_pos)
    rx1130_cstack = rx1130_cur."!cursor_capture"($P11, "sym")
    goto rxcap1132_done2305
  rxcap1132_fail2306:
    goto rx1130_fail2298
  rxcap1132_done2305:
    repr_bind_attr_int rx1130_cur, rx1130_curclass, "$!pos", rx1130_pos
    $P11 = rx1130_cur."scoped"("my")
    repr_get_attr_int $I11, $P11, rx1130_curclass, "$!pos"
    lt $I11, 0, rx1130_fail2298
    nqp_rxmark rx1130_bstack, rxsubrule1133_pass2307, -1, 0
  rxsubrule1133_pass2307:
    rx1130_cstack = rx1130_cur."!cursor_capture"($P11, "scoped")
    repr_get_attr_int rx1130_pos, $P11, rx1130_curclass, "$!pos"
    rx1130_cur."!cursor_pass"(rx1130_pos, "scope_declarator:sym<my>", 'backtrack'=>1)
    .return (rx1130_cur)
  rx1130_restart2297:
    repr_get_attr_obj rx1130_cstack, rx1130_cur, rx1130_curclass, "$!cstack"
  rx1130_fail2298:
    unless rx1130_bstack, rx1130_done2296
    pop $I19, rx1130_bstack
    if_null rx1130_cstack, rx1130_cstack_done2301
    unless rx1130_cstack, rx1130_cstack_done2301
    dec $I19
    set $P11, rx1130_cstack[$I19]
  rx1130_cstack_done2301:
    pop rx1130_rep, rx1130_bstack
    pop rx1130_pos, rx1130_bstack
    pop $I19, rx1130_bstack
    lt rx1130_pos, -1, rx1130_done2296
    lt rx1130_pos, 0, rx1130_fail2298
    eq $I19, 0, rx1130_fail2298
    nqp_islist $I20, rx1130_cstack
    unless $I20, rx1130_jump2299
    elements $I18, rx1130_bstack
    le $I18, 0, rx1130_cut2300
    dec $I18
    set $I18, rx1130_bstack[$I18]
  rx1130_cut2300:
    assign rx1130_cstack, $I18
  rx1130_jump2299:
    jump $I19
  rx1130_done2296:
    rx1130_cur."!cursor_fail"()
    .return (rx1130_cur) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<our>" :subid("cuid_113_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1058
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1134_tgt
    .local int rx1134_pos
    .local int rx1134_off
    .local int rx1134_eos
    .local int rx1134_rep
    .local pmc rx1134_cur
    .local pmc rx1134_curclass
    .local pmc rx1134_bstack
    .local pmc rx1134_cstack
    (rx1134_cur, rx1134_tgt, rx1134_pos, rx1134_curclass, rx1134_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1134_cur
    length rx1134_eos, rx1134_tgt
    eq $I19, 1, rx1134_restart2310
    gt rx1134_pos, rx1134_eos, rx1134_fail2311
    repr_get_attr_int $I11, self, rx1134_curclass, "$!from"
    ne $I11, -1, rxscan1135_done2317
    goto rxscan1135_scan2316
  rxscan1135_loop2315:
    inc rx1134_pos
    gt rx1134_pos, rx1134_eos, rx1134_fail2311
    repr_bind_attr_int rx1134_cur, rx1134_curclass, "$!from", rx1134_pos
  rxscan1135_scan2316:
    nqp_rxmark rx1134_bstack, rxscan1135_loop2315, rx1134_pos, 0
  rxscan1135_done2317:
    nqp_rxmark rx1134_bstack, rxcap1136_fail2319, rx1134_pos, 0
    add $I11, rx1134_pos, 3
    gt $I11, rx1134_eos, rx1134_fail2311
    substr $S10, rx1134_tgt, rx1134_pos, 3
    ne $S10, ucs4:"our", rx1134_fail2311
    add rx1134_pos, 3
    nqp_rxpeek $I19, rx1134_bstack, rxcap1136_fail2319
    inc $I19
    set $I11, rx1134_bstack[$I19]
    repr_bind_attr_int rx1134_cur, rx1134_curclass, "$!pos", rx1134_pos
    $P11 = rx1134_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1134_pos)
    rx1134_cstack = rx1134_cur."!cursor_capture"($P11, "sym")
    goto rxcap1136_done2318
  rxcap1136_fail2319:
    goto rx1134_fail2311
  rxcap1136_done2318:
    repr_bind_attr_int rx1134_cur, rx1134_curclass, "$!pos", rx1134_pos
    $P11 = rx1134_cur."scoped"("our")
    repr_get_attr_int $I11, $P11, rx1134_curclass, "$!pos"
    lt $I11, 0, rx1134_fail2311
    nqp_rxmark rx1134_bstack, rxsubrule1137_pass2320, -1, 0
  rxsubrule1137_pass2320:
    rx1134_cstack = rx1134_cur."!cursor_capture"($P11, "scoped")
    repr_get_attr_int rx1134_pos, $P11, rx1134_curclass, "$!pos"
    rx1134_cur."!cursor_pass"(rx1134_pos, "scope_declarator:sym<our>", 'backtrack'=>1)
    .return (rx1134_cur)
  rx1134_restart2310:
    repr_get_attr_obj rx1134_cstack, rx1134_cur, rx1134_curclass, "$!cstack"
  rx1134_fail2311:
    unless rx1134_bstack, rx1134_done2309
    pop $I19, rx1134_bstack
    if_null rx1134_cstack, rx1134_cstack_done2314
    unless rx1134_cstack, rx1134_cstack_done2314
    dec $I19
    set $P11, rx1134_cstack[$I19]
  rx1134_cstack_done2314:
    pop rx1134_rep, rx1134_bstack
    pop rx1134_pos, rx1134_bstack
    pop $I19, rx1134_bstack
    lt rx1134_pos, -1, rx1134_done2309
    lt rx1134_pos, 0, rx1134_fail2311
    eq $I19, 0, rx1134_fail2311
    nqp_islist $I20, rx1134_cstack
    unless $I20, rx1134_jump2312
    elements $I18, rx1134_bstack
    le $I18, 0, rx1134_cut2313
    dec $I18
    set $I18, rx1134_bstack[$I18]
  rx1134_cut2313:
    assign rx1134_cstack, $I18
  rx1134_jump2312:
    jump $I19
  rx1134_done2309:
    rx1134_cur."!cursor_fail"()
    .return (rx1134_cur) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<has>" :subid("cuid_114_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1059
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1138_tgt
    .local int rx1138_pos
    .local int rx1138_off
    .local int rx1138_eos
    .local int rx1138_rep
    .local pmc rx1138_cur
    .local pmc rx1138_curclass
    .local pmc rx1138_bstack
    .local pmc rx1138_cstack
    (rx1138_cur, rx1138_tgt, rx1138_pos, rx1138_curclass, rx1138_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1138_cur
    length rx1138_eos, rx1138_tgt
    eq $I19, 1, rx1138_restart2323
    gt rx1138_pos, rx1138_eos, rx1138_fail2324
    repr_get_attr_int $I11, self, rx1138_curclass, "$!from"
    ne $I11, -1, rxscan1139_done2330
    goto rxscan1139_scan2329
  rxscan1139_loop2328:
    inc rx1138_pos
    gt rx1138_pos, rx1138_eos, rx1138_fail2324
    repr_bind_attr_int rx1138_cur, rx1138_curclass, "$!from", rx1138_pos
  rxscan1139_scan2329:
    nqp_rxmark rx1138_bstack, rxscan1139_loop2328, rx1138_pos, 0
  rxscan1139_done2330:
    nqp_rxmark rx1138_bstack, rxcap1140_fail2332, rx1138_pos, 0
    add $I11, rx1138_pos, 3
    gt $I11, rx1138_eos, rx1138_fail2324
    substr $S10, rx1138_tgt, rx1138_pos, 3
    ne $S10, ucs4:"has", rx1138_fail2324
    add rx1138_pos, 3
    nqp_rxpeek $I19, rx1138_bstack, rxcap1140_fail2332
    inc $I19
    set $I11, rx1138_bstack[$I19]
    repr_bind_attr_int rx1138_cur, rx1138_curclass, "$!pos", rx1138_pos
    $P11 = rx1138_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1138_pos)
    rx1138_cstack = rx1138_cur."!cursor_capture"($P11, "sym")
    goto rxcap1140_done2331
  rxcap1140_fail2332:
    goto rx1138_fail2324
  rxcap1140_done2331:
    repr_bind_attr_int rx1138_cur, rx1138_curclass, "$!pos", rx1138_pos
    $P11 = rx1138_cur."scoped"("has")
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2324
    nqp_rxmark rx1138_bstack, rxsubrule1141_pass2333, -1, 0
  rxsubrule1141_pass2333:
    rx1138_cstack = rx1138_cur."!cursor_capture"($P11, "scoped")
    repr_get_attr_int rx1138_pos, $P11, rx1138_curclass, "$!pos"
    rx1138_cur."!cursor_pass"(rx1138_pos, "scope_declarator:sym<has>", 'backtrack'=>1)
    .return (rx1138_cur)
  rx1138_restart2323:
    repr_get_attr_obj rx1138_cstack, rx1138_cur, rx1138_curclass, "$!cstack"
  rx1138_fail2324:
    unless rx1138_bstack, rx1138_done2322
    pop $I19, rx1138_bstack
    if_null rx1138_cstack, rx1138_cstack_done2327
    unless rx1138_cstack, rx1138_cstack_done2327
    dec $I19
    set $P11, rx1138_cstack[$I19]
  rx1138_cstack_done2327:
    pop rx1138_rep, rx1138_bstack
    pop rx1138_pos, rx1138_bstack
    pop $I19, rx1138_bstack
    lt rx1138_pos, -1, rx1138_done2322
    lt rx1138_pos, 0, rx1138_fail2324
    eq $I19, 0, rx1138_fail2324
    nqp_islist $I20, rx1138_cstack
    unless $I20, rx1138_jump2325
    elements $I18, rx1138_bstack
    le $I18, 0, rx1138_cut2326
    dec $I18
    set $I18, rx1138_bstack[$I18]
  rx1138_cut2326:
    assign rx1138_cstack, $I18
  rx1138_jump2325:
    jump $I19
  rx1138_done2322:
    rx1138_cur."!cursor_fail"()
    .return (rx1138_cur) 
.end
.HLL "nqp"
.namespace []
.sub "scoped" :subid("cuid_115_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1061
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .lex "$*SCOPE", _lex_param_1 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1142_tgt
    .local int rx1142_pos
    .local int rx1142_off
    .local int rx1142_eos
    .local int rx1142_rep
    .local pmc rx1142_cur
    .local pmc rx1142_curclass
    .local pmc rx1142_bstack
    .local pmc rx1142_cstack
    (rx1142_cur, rx1142_tgt, rx1142_pos, rx1142_curclass, rx1142_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1142_cur
    length rx1142_eos, rx1142_tgt
    eq $I19, 1, rx1142_restart2336
    gt rx1142_pos, rx1142_eos, rx1142_fail2337
    repr_get_attr_int $I11, self, rx1142_curclass, "$!from"
    ne $I11, -1, rxscan1143_done2343
    goto rxscan1143_scan2342
  rxscan1143_loop2341:
    inc rx1142_pos
    gt rx1142_pos, rx1142_eos, rx1142_fail2337
    repr_bind_attr_int rx1142_cur, rx1142_curclass, "$!from", rx1142_pos
  rxscan1143_scan2342:
    nqp_rxmark rx1142_bstack, rxscan1143_loop2341, rx1142_pos, 0
  rxscan1143_done2343:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1144_02345
    nqp_push_label $P11, alt1144_12349
    nqp_push_label $P11, alt1144_22353
    nqp_rxmark rx1142_bstack, alt1144_end2344, -1, 0
    rx1142_cur."!alt"(rx1142_pos, "alt_nfa__21_1360432461.479", $P11)
    goto rx1142_fail2337
  alt1144_02345:
    repr_bind_attr_int rx1142_cur, rx1142_curclass, "$!pos", rx1142_pos
    $P11 = rx1142_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1142_curclass, "$!pos"
    lt $I11, 0, rx1142_fail2337
    repr_get_attr_int rx1142_pos, $P11, rx1142_curclass, "$!pos"
    repr_bind_attr_int rx1142_cur, rx1142_curclass, "$!pos", rx1142_pos
    $P11 = rx1142_cur."declarator"()
    repr_get_attr_int $I11, $P11, rx1142_curclass, "$!pos"
    lt $I11, 0, rx1142_fail2337
    nqp_rxmark rx1142_bstack, rxsubrule1146_pass2347, -1, 0
  rxsubrule1146_pass2347:
    rx1142_cstack = rx1142_cur."!cursor_capture"($P11, "declarator")
    repr_get_attr_int rx1142_pos, $P11, rx1142_curclass, "$!pos"
    repr_bind_attr_int rx1142_cur, rx1142_curclass, "$!pos", rx1142_pos
    $P11 = rx1142_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1142_curclass, "$!pos"
    lt $I11, 0, rx1142_fail2337
    repr_get_attr_int rx1142_pos, $P11, rx1142_curclass, "$!pos"
    goto alt1144_end2344
  alt1144_12349:
    repr_bind_attr_int rx1142_cur, rx1142_curclass, "$!pos", rx1142_pos
    $P11 = rx1142_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1142_curclass, "$!pos"
    lt $I11, 0, rx1142_fail2337
    repr_get_attr_int rx1142_pos, $P11, rx1142_curclass, "$!pos"
    repr_bind_attr_int rx1142_cur, rx1142_curclass, "$!pos", rx1142_pos
    $P11 = rx1142_cur."multi_declarator"()
    repr_get_attr_int $I11, $P11, rx1142_curclass, "$!pos"
    lt $I11, 0, rx1142_fail2337
    nqp_rxmark rx1142_bstack, rxsubrule1149_pass2351, -1, 0
  rxsubrule1149_pass2351:
    rx1142_cstack = rx1142_cur."!cursor_capture"($P11, "multi_declarator")
    repr_get_attr_int rx1142_pos, $P11, rx1142_curclass, "$!pos"
    repr_bind_attr_int rx1142_cur, rx1142_curclass, "$!pos", rx1142_pos
    $P11 = rx1142_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1142_curclass, "$!pos"
    lt $I11, 0, rx1142_fail2337
    repr_get_attr_int rx1142_pos, $P11, rx1142_curclass, "$!pos"
    goto alt1144_end2344
  alt1144_22353:
    repr_bind_attr_int rx1142_cur, rx1142_curclass, "$!pos", rx1142_pos
    $P11 = rx1142_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1142_curclass, "$!pos"
    lt $I11, 0, rx1142_fail2337
    repr_get_attr_int rx1142_pos, $P11, rx1142_curclass, "$!pos"
    repr_bind_attr_int rx1142_cur, rx1142_curclass, "$!pos", rx1142_pos
    $P11 = rx1142_cur."package_declarator"()
    repr_get_attr_int $I11, $P11, rx1142_curclass, "$!pos"
    lt $I11, 0, rx1142_fail2337
    nqp_rxmark rx1142_bstack, rxsubrule1152_pass2355, -1, 0
  rxsubrule1152_pass2355:
    rx1142_cstack = rx1142_cur."!cursor_capture"($P11, "package_declarator")
    repr_get_attr_int rx1142_pos, $P11, rx1142_curclass, "$!pos"
    repr_bind_attr_int rx1142_cur, rx1142_curclass, "$!pos", rx1142_pos
    $P11 = rx1142_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1142_curclass, "$!pos"
    lt $I11, 0, rx1142_fail2337
    repr_get_attr_int rx1142_pos, $P11, rx1142_curclass, "$!pos"
    goto alt1144_end2344
  alt1144_end2344:
    rx1142_cur."!cursor_pass"(rx1142_pos, "scoped", 'backtrack'=>1)
    .return (rx1142_cur)
  rx1142_restart2336:
    repr_get_attr_obj rx1142_cstack, rx1142_cur, rx1142_curclass, "$!cstack"
  rx1142_fail2337:
    unless rx1142_bstack, rx1142_done2335
    pop $I19, rx1142_bstack
    if_null rx1142_cstack, rx1142_cstack_done2340
    unless rx1142_cstack, rx1142_cstack_done2340
    dec $I19
    set $P11, rx1142_cstack[$I19]
  rx1142_cstack_done2340:
    pop rx1142_rep, rx1142_bstack
    pop rx1142_pos, rx1142_bstack
    pop $I19, rx1142_bstack
    lt rx1142_pos, -1, rx1142_done2335
    lt rx1142_pos, 0, rx1142_fail2337
    eq $I19, 0, rx1142_fail2337
    nqp_islist $I20, rx1142_cstack
    unless $I20, rx1142_jump2338
    elements $I18, rx1142_bstack
    le $I18, 0, rx1142_cut2339
    dec $I18
    set $I18, rx1142_bstack[$I18]
  rx1142_cut2339:
    assign rx1142_cstack, $I18
  rx1142_jump2338:
    jump $I19
  rx1142_done2335:
    rx1142_cur."!cursor_fail"()
    .return (rx1142_cur) 
.end
.HLL "nqp"
.namespace []
.sub "typename" :subid("cuid_116_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1067
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_403_1360432459.413' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1154_tgt
    .local int rx1154_pos
    .local int rx1154_off
    .local int rx1154_eos
    .local int rx1154_rep
    .local pmc rx1154_cur
    .local pmc rx1154_curclass
    .local pmc rx1154_bstack
    .local pmc rx1154_cstack
    (rx1154_cur, rx1154_tgt, rx1154_pos, rx1154_curclass, rx1154_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1154_cur
    length rx1154_eos, rx1154_tgt
    eq $I19, 1, rx1154_restart2359
    gt rx1154_pos, rx1154_eos, rx1154_fail2360
    repr_get_attr_int $I11, self, rx1154_curclass, "$!from"
    ne $I11, -1, rxscan1155_done2366
    goto rxscan1155_scan2365
  rxscan1155_loop2364:
    inc rx1154_pos
    gt rx1154_pos, rx1154_eos, rx1154_fail2360
    repr_bind_attr_int rx1154_cur, rx1154_curclass, "$!from", rx1154_pos
  rxscan1155_scan2365:
    nqp_rxmark rx1154_bstack, rxscan1155_loop2364, rx1154_pos, 0
  rxscan1155_done2366:
    repr_bind_attr_int rx1154_cur, rx1154_curclass, "$!pos", rx1154_pos
    $P11 = rx1154_cur."name"()
    repr_get_attr_int $I11, $P11, rx1154_curclass, "$!pos"
    lt $I11, 0, rx1154_fail2360
    nqp_rxmark rx1154_bstack, rxsubrule1156_pass2367, -1, 0
  rxsubrule1156_pass2367:
    rx1154_cstack = rx1154_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx1154_pos, $P11, rx1154_curclass, "$!pos"
    repr_bind_attr_int rx1154_cur, rx1154_curclass, "$!pos", rx1154_pos
    store_lex unicode:"$\x{a2}", rx1154_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_403_1360432459.413' 
    capture_lex $P5002
    $P5003 = $P5002()
    unless $P5003, rx1154_fail2360
    rx1154_cur."!cursor_pass"(rx1154_pos, "typename", 'backtrack'=>1)
    .return (rx1154_cur)
  rx1154_restart2359:
    repr_get_attr_obj rx1154_cstack, rx1154_cur, rx1154_curclass, "$!cstack"
  rx1154_fail2360:
    unless rx1154_bstack, rx1154_done2358
    pop $I19, rx1154_bstack
    if_null rx1154_cstack, rx1154_cstack_done2363
    unless rx1154_cstack, rx1154_cstack_done2363
    dec $I19
    set $P11, rx1154_cstack[$I19]
  rx1154_cstack_done2363:
    pop rx1154_rep, rx1154_bstack
    pop rx1154_pos, rx1154_bstack
    pop $I19, rx1154_bstack
    lt rx1154_pos, -1, rx1154_done2358
    lt rx1154_pos, 0, rx1154_fail2360
    eq $I19, 0, rx1154_fail2360
    nqp_islist $I20, rx1154_cstack
    unless $I20, rx1154_jump2361
    elements $I18, rx1154_bstack
    le $I18, 0, rx1154_cut2362
    dec $I18
    set $I18, rx1154_bstack[$I18]
  rx1154_cut2362:
    assign rx1154_cstack, $I18
  rx1154_jump2361:
    jump $I19
  rx1154_done2358:
    rx1154_cur."!cursor_fail"()
    .return (rx1154_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_403_1360432459.413") :anon :lex :outer("cuid_116_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1069
    .local pmc fb_tmp_249 
    .local pmc fb_tmp_250 
    .local pmc fb_tmp_251 
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback2368
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5002, $P5003
    set fb_tmp_249, $P5002
    repr_defined $I5001, fb_tmp_249
    unless $I5001 goto if1157_else2369 
    set $P5004, fb_tmp_249["$W"]
    set $P5006, $P5004
    goto if1157_end2370
  if1157_else2369:
    null $P5005
    set $P5006, $P5005
  if1157_end2370:
    unless_null $P5006, vivi_11582371
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_11582371:
    unless_null $P5006, vivi_11592372
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_11592372:
    set $P5001, $P5006
  fallback2368:
    find_lex $P5009, "$/"
    find_lex $P5010, "$/"
    unless_null $P5010, fallback2377
    nqp_get_sc_object $P5011, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5010, $P5011
  fallback2377:
    set fb_tmp_251, $P5010
    repr_defined $I5003, fb_tmp_251
    unless $I5003 goto if1161_else2375 
    set $P5012, fb_tmp_251["name"]
    set $P5014, $P5012
    goto if1161_end2376
  if1161_else2375:
    null $P5013
    set $P5014, $P5013
  if1161_end2376:
    unless_null $P5014, vivi_11622378
    nqp_get_sc_object $P5015, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5014, $P5015
  vivi_11622378:
    set fb_tmp_250, $P5014
    repr_defined $I5002, fb_tmp_250
    unless $I5002 goto if1160_else2373 
    set $P5016, fb_tmp_250["identifier"]
    set $P5018, $P5016
    goto if1160_end2374
  if1160_else2373:
    null $P5017
    set $P5018, $P5017
  if1160_end2374:
    unless_null $P5018, vivi_11632379
    nqp_get_sc_object $P5019, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5018, $P5019
  vivi_11632379:
    $P5020 = $P5001."known_sym"($P5009, $P5018)
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "declarator" :subid("cuid_117_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1072
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1164_tgt
    .local int rx1164_pos
    .local int rx1164_off
    .local int rx1164_eos
    .local int rx1164_rep
    .local pmc rx1164_cur
    .local pmc rx1164_curclass
    .local pmc rx1164_bstack
    .local pmc rx1164_cstack
    (rx1164_cur, rx1164_tgt, rx1164_pos, rx1164_curclass, rx1164_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1164_cur
    length rx1164_eos, rx1164_tgt
    eq $I19, 1, rx1164_restart2382
    gt rx1164_pos, rx1164_eos, rx1164_fail2383
    repr_get_attr_int $I11, self, rx1164_curclass, "$!from"
    ne $I11, -1, rxscan1165_done2389
    goto rxscan1165_scan2388
  rxscan1165_loop2387:
    inc rx1164_pos
    gt rx1164_pos, rx1164_eos, rx1164_fail2383
    repr_bind_attr_int rx1164_cur, rx1164_curclass, "$!from", rx1164_pos
  rxscan1165_scan2388:
    nqp_rxmark rx1164_bstack, rxscan1165_loop2387, rx1164_pos, 0
  rxscan1165_done2389:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1166_02391
    nqp_push_label $P11, alt1166_12393
    nqp_rxmark rx1164_bstack, alt1166_end2390, -1, 0
    rx1164_cur."!alt"(rx1164_pos, "alt_nfa__22_1360432461.492", $P11)
    goto rx1164_fail2383
  alt1166_02391:
    repr_bind_attr_int rx1164_cur, rx1164_curclass, "$!pos", rx1164_pos
    $P11 = rx1164_cur."variable_declarator"()
    repr_get_attr_int $I11, $P11, rx1164_curclass, "$!pos"
    lt $I11, 0, rx1164_fail2383
    nqp_rxmark rx1164_bstack, rxsubrule1167_pass2392, -1, 0
  rxsubrule1167_pass2392:
    rx1164_cstack = rx1164_cur."!cursor_capture"($P11, "variable_declarator")
    repr_get_attr_int rx1164_pos, $P11, rx1164_curclass, "$!pos"
    goto alt1166_end2390
  alt1166_12393:
    repr_bind_attr_int rx1164_cur, rx1164_curclass, "$!pos", rx1164_pos
    $P11 = rx1164_cur."routine_declarator"()
    repr_get_attr_int $I11, $P11, rx1164_curclass, "$!pos"
    lt $I11, 0, rx1164_fail2383
    nqp_rxmark rx1164_bstack, rxsubrule1168_pass2394, -1, 0
  rxsubrule1168_pass2394:
    rx1164_cstack = rx1164_cur."!cursor_capture"($P11, "routine_declarator")
    repr_get_attr_int rx1164_pos, $P11, rx1164_curclass, "$!pos"
    goto alt1166_end2390
  alt1166_end2390:
    rx1164_cur."!cursor_pass"(rx1164_pos, "declarator", 'backtrack'=>1)
    .return (rx1164_cur)
  rx1164_restart2382:
    repr_get_attr_obj rx1164_cstack, rx1164_cur, rx1164_curclass, "$!cstack"
  rx1164_fail2383:
    unless rx1164_bstack, rx1164_done2381
    pop $I19, rx1164_bstack
    if_null rx1164_cstack, rx1164_cstack_done2386
    unless rx1164_cstack, rx1164_cstack_done2386
    dec $I19
    set $P11, rx1164_cstack[$I19]
  rx1164_cstack_done2386:
    pop rx1164_rep, rx1164_bstack
    pop rx1164_pos, rx1164_bstack
    pop $I19, rx1164_bstack
    lt rx1164_pos, -1, rx1164_done2381
    lt rx1164_pos, 0, rx1164_fail2383
    eq $I19, 0, rx1164_fail2383
    nqp_islist $I20, rx1164_cstack
    unless $I20, rx1164_jump2384
    elements $I18, rx1164_bstack
    le $I18, 0, rx1164_cut2385
    dec $I18
    set $I18, rx1164_bstack[$I18]
  rx1164_cut2385:
    assign rx1164_cstack, $I18
  rx1164_jump2384:
    jump $I19
  rx1164_done2381:
    rx1164_cur."!cursor_fail"()
    .return (rx1164_cur) 
.end
.HLL "nqp"
.namespace []
.sub "variable_declarator" :subid("cuid_118_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1077
    .param pmc _lex_param_0 
    .const 'Sub' $P5006 = 'cuid_404_1360432459.413' 
    capture_lex $P5006 
    .lex "$*IN_DECL", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    set self, _lex_param_0
    .local string rx1169_tgt
    .local int rx1169_pos
    .local int rx1169_off
    .local int rx1169_eos
    .local int rx1169_rep
    .local pmc rx1169_cur
    .local pmc rx1169_curclass
    .local pmc rx1169_bstack
    .local pmc rx1169_cstack
    (rx1169_cur, rx1169_tgt, rx1169_pos, rx1169_curclass, rx1169_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1169_cur
    length rx1169_eos, rx1169_tgt
    eq $I19, 1, rx1169_restart2397
    gt rx1169_pos, rx1169_eos, rx1169_fail2398
    repr_get_attr_int $I11, self, rx1169_curclass, "$!from"
    ne $I11, -1, rxscan1170_done2404
    goto rxscan1170_scan2403
  rxscan1170_loop2402:
    inc rx1169_pos
    gt rx1169_pos, rx1169_eos, rx1169_fail2398
    repr_bind_attr_int rx1169_cur, rx1169_curclass, "$!from", rx1169_pos
  rxscan1170_scan2403:
    nqp_rxmark rx1169_bstack, rxscan1170_loop2402, rx1169_pos, 0
  rxscan1170_done2404:
    repr_bind_attr_int rx1169_cur, rx1169_curclass, "$!pos", rx1169_pos
    $P11 = rx1169_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1169_curclass, "$!pos"
    lt $I11, 0, rx1169_fail2398
    repr_get_attr_int rx1169_pos, $P11, rx1169_curclass, "$!pos"
    nqp_rxmark rx1169_bstack, rxquantr1172_done2407, rx1169_pos, 0
  rxquantr1172_loop2406:
    repr_bind_attr_int rx1169_cur, rx1169_curclass, "$!pos", rx1169_pos
    $P11 = rx1169_cur."typename"()
    repr_get_attr_int $I11, $P11, rx1169_curclass, "$!pos"
    lt $I11, 0, rx1169_fail2398
    goto rxsubrule1173_pass2408
  rxsubrule1173_back2409:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1169_curclass, "$!pos"
    lt $I11, 0, rx1169_fail2398
  rxsubrule1173_pass2408:
    rx1169_cstack = rx1169_cur."!cursor_capture"($P11, "typename")
    set_addr $I11, rxsubrule1173_back2409
    push rx1169_bstack, $I11
    push rx1169_bstack, 0
    push rx1169_bstack, rx1169_pos
    elements $I11, rx1169_cstack
    push rx1169_bstack, $I11
    repr_get_attr_int rx1169_pos, $P11, rx1169_curclass, "$!pos"
    nqp_rxpeek $I19, rx1169_bstack, rxquantr1172_done2407
    inc $I19
    inc $I19
    set rx1169_rep, rx1169_bstack[$I19]
    nqp_rxcommit rx1169_bstack, rxquantr1172_done2407
    inc rx1169_rep
  rxquantr1172_done2407:
    repr_bind_attr_int rx1169_cur, rx1169_curclass, "$!pos", rx1169_pos
    $P11 = rx1169_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1169_curclass, "$!pos"
    lt $I11, 0, rx1169_fail2398
    repr_get_attr_int rx1169_pos, $P11, rx1169_curclass, "$!pos"
    repr_bind_attr_int rx1169_cur, rx1169_curclass, "$!pos", rx1169_pos
    store_lex unicode:"$\x{a2}", rx1169_cur
    box $P5002, "variable"
    set $P101, $P5002
    repr_bind_attr_int rx1169_cur, rx1169_curclass, "$!pos", rx1169_pos
    $P11 = rx1169_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1169_curclass, "$!pos"
    lt $I11, 0, rx1169_fail2398
    repr_get_attr_int rx1169_pos, $P11, rx1169_curclass, "$!pos"
    repr_bind_attr_int rx1169_cur, rx1169_curclass, "$!pos", rx1169_pos
    $P11 = rx1169_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1169_curclass, "$!pos"
    lt $I11, 0, rx1169_fail2398
    nqp_rxmark rx1169_bstack, rxsubrule1176_pass2412, -1, 0
  rxsubrule1176_pass2412:
    rx1169_cstack = rx1169_cur."!cursor_capture"($P11, "variable")
    repr_get_attr_int rx1169_pos, $P11, rx1169_curclass, "$!pos"
    repr_bind_attr_int rx1169_cur, rx1169_curclass, "$!pos", rx1169_pos
    $P11 = rx1169_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1169_curclass, "$!pos"
    lt $I11, 0, rx1169_fail2398
    repr_get_attr_int rx1169_pos, $P11, rx1169_curclass, "$!pos"
    repr_bind_attr_int rx1169_cur, rx1169_curclass, "$!pos", rx1169_pos
    store_lex unicode:"$\x{a2}", rx1169_cur
    $P5003 = $P102."MATCH"()
    set $P103, $P5003
    .const 'Sub' $P5004 = 'cuid_404_1360432459.413' 
    capture_lex $P5004
    $P5005 = $P5004()
    repr_bind_attr_int rx1169_cur, rx1169_curclass, "$!pos", rx1169_pos
    $P11 = rx1169_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1169_curclass, "$!pos"
    lt $I11, 0, rx1169_fail2398
    repr_get_attr_int rx1169_pos, $P11, rx1169_curclass, "$!pos"
    nqp_rxmark rx1169_bstack, rxquantr1179_done2416, rx1169_pos, 0
  rxquantr1179_loop2415:
    repr_bind_attr_int rx1169_cur, rx1169_curclass, "$!pos", rx1169_pos
    $P11 = rx1169_cur."trait"()
    repr_get_attr_int $I11, $P11, rx1169_curclass, "$!pos"
    lt $I11, 0, rx1169_fail2398
    goto rxsubrule1180_pass2417
  rxsubrule1180_back2418:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1169_curclass, "$!pos"
    lt $I11, 0, rx1169_fail2398
  rxsubrule1180_pass2417:
    rx1169_cstack = rx1169_cur."!cursor_capture"($P11, "trait")
    set_addr $I11, rxsubrule1180_back2418
    push rx1169_bstack, $I11
    push rx1169_bstack, 0
    push rx1169_bstack, rx1169_pos
    elements $I11, rx1169_cstack
    push rx1169_bstack, $I11
    repr_get_attr_int rx1169_pos, $P11, rx1169_curclass, "$!pos"
    nqp_rxpeek $I19, rx1169_bstack, rxquantr1179_done2416
    inc $I19
    inc $I19
    set rx1169_rep, rx1169_bstack[$I19]
    nqp_rxcommit rx1169_bstack, rxquantr1179_done2416
    inc rx1169_rep
    nqp_rxmark rx1169_bstack, rxquantr1179_done2416, rx1169_pos, rx1169_rep
    goto rxquantr1179_loop2415
  rxquantr1179_done2416:
    repr_bind_attr_int rx1169_cur, rx1169_curclass, "$!pos", rx1169_pos
    $P11 = rx1169_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1169_curclass, "$!pos"
    lt $I11, 0, rx1169_fail2398
    repr_get_attr_int rx1169_pos, $P11, rx1169_curclass, "$!pos"
    rx1169_cur."!cursor_pass"(rx1169_pos, "variable_declarator", 'backtrack'=>1)
    .return (rx1169_cur)
  rx1169_restart2397:
    repr_get_attr_obj rx1169_cstack, rx1169_cur, rx1169_curclass, "$!cstack"
  rx1169_fail2398:
    unless rx1169_bstack, rx1169_done2396
    pop $I19, rx1169_bstack
    if_null rx1169_cstack, rx1169_cstack_done2401
    unless rx1169_cstack, rx1169_cstack_done2401
    dec $I19
    set $P11, rx1169_cstack[$I19]
  rx1169_cstack_done2401:
    pop rx1169_rep, rx1169_bstack
    pop rx1169_pos, rx1169_bstack
    pop $I19, rx1169_bstack
    lt rx1169_pos, -1, rx1169_done2396
    lt rx1169_pos, 0, rx1169_fail2398
    eq $I19, 0, rx1169_fail2398
    nqp_islist $I20, rx1169_cstack
    unless $I20, rx1169_jump2399
    elements $I18, rx1169_bstack
    le $I18, 0, rx1169_cut2400
    dec $I18
    set $I18, rx1169_bstack[$I18]
  rx1169_cut2400:
    assign rx1169_cstack, $I18
  rx1169_jump2399:
    jump $I19
  rx1169_done2396:
    rx1169_cur."!cursor_fail"()
    .return (rx1169_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_404_1360432459.413") :anon :lex :outer("cuid_118_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1081

    box $P5001, 0
    store_dynamic_lex "$*IN_DECL", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator" :subid("cuid_119_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1085
    .param pmc self 
    $P5001 = self."!protoregex"("routine_declarator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator:sym<sub>" :subid("cuid_120_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1086
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1182_tgt
    .local int rx1182_pos
    .local int rx1182_off
    .local int rx1182_eos
    .local int rx1182_rep
    .local pmc rx1182_cur
    .local pmc rx1182_curclass
    .local pmc rx1182_bstack
    .local pmc rx1182_cstack
    (rx1182_cur, rx1182_tgt, rx1182_pos, rx1182_curclass, rx1182_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1182_cur
    length rx1182_eos, rx1182_tgt
    eq $I19, 1, rx1182_restart2422
    gt rx1182_pos, rx1182_eos, rx1182_fail2423
    repr_get_attr_int $I11, self, rx1182_curclass, "$!from"
    ne $I11, -1, rxscan1183_done2429
    goto rxscan1183_scan2428
  rxscan1183_loop2427:
    inc rx1182_pos
    gt rx1182_pos, rx1182_eos, rx1182_fail2423
    repr_bind_attr_int rx1182_cur, rx1182_curclass, "$!from", rx1182_pos
  rxscan1183_scan2428:
    nqp_rxmark rx1182_bstack, rxscan1183_loop2427, rx1182_pos, 0
  rxscan1183_done2429:
    nqp_rxmark rx1182_bstack, rxcap1184_fail2431, rx1182_pos, 0
    add $I11, rx1182_pos, 3
    gt $I11, rx1182_eos, rx1182_fail2423
    substr $S10, rx1182_tgt, rx1182_pos, 3
    ne $S10, ucs4:"sub", rx1182_fail2423
    add rx1182_pos, 3
    nqp_rxpeek $I19, rx1182_bstack, rxcap1184_fail2431
    inc $I19
    set $I11, rx1182_bstack[$I19]
    repr_bind_attr_int rx1182_cur, rx1182_curclass, "$!pos", rx1182_pos
    $P11 = rx1182_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1182_pos)
    rx1182_cstack = rx1182_cur."!cursor_capture"($P11, "sym")
    goto rxcap1184_done2430
  rxcap1184_fail2431:
    goto rx1182_fail2423
  rxcap1184_done2430:
    repr_bind_attr_int rx1182_cur, rx1182_curclass, "$!pos", rx1182_pos
    $P11 = rx1182_cur."routine_def"()
    repr_get_attr_int $I11, $P11, rx1182_curclass, "$!pos"
    lt $I11, 0, rx1182_fail2423
    nqp_rxmark rx1182_bstack, rxsubrule1185_pass2432, -1, 0
  rxsubrule1185_pass2432:
    rx1182_cstack = rx1182_cur."!cursor_capture"($P11, "routine_def")
    repr_get_attr_int rx1182_pos, $P11, rx1182_curclass, "$!pos"
    rx1182_cur."!cursor_pass"(rx1182_pos, "routine_declarator:sym<sub>", 'backtrack'=>1)
    .return (rx1182_cur)
  rx1182_restart2422:
    repr_get_attr_obj rx1182_cstack, rx1182_cur, rx1182_curclass, "$!cstack"
  rx1182_fail2423:
    unless rx1182_bstack, rx1182_done2421
    pop $I19, rx1182_bstack
    if_null rx1182_cstack, rx1182_cstack_done2426
    unless rx1182_cstack, rx1182_cstack_done2426
    dec $I19
    set $P11, rx1182_cstack[$I19]
  rx1182_cstack_done2426:
    pop rx1182_rep, rx1182_bstack
    pop rx1182_pos, rx1182_bstack
    pop $I19, rx1182_bstack
    lt rx1182_pos, -1, rx1182_done2421
    lt rx1182_pos, 0, rx1182_fail2423
    eq $I19, 0, rx1182_fail2423
    nqp_islist $I20, rx1182_cstack
    unless $I20, rx1182_jump2424
    elements $I18, rx1182_bstack
    le $I18, 0, rx1182_cut2425
    dec $I18
    set $I18, rx1182_bstack[$I18]
  rx1182_cut2425:
    assign rx1182_cstack, $I18
  rx1182_jump2424:
    jump $I19
  rx1182_done2421:
    rx1182_cur."!cursor_fail"()
    .return (rx1182_cur) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator:sym<method>" :subid("cuid_121_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1087
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1186_tgt
    .local int rx1186_pos
    .local int rx1186_off
    .local int rx1186_eos
    .local int rx1186_rep
    .local pmc rx1186_cur
    .local pmc rx1186_curclass
    .local pmc rx1186_bstack
    .local pmc rx1186_cstack
    (rx1186_cur, rx1186_tgt, rx1186_pos, rx1186_curclass, rx1186_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1186_cur
    length rx1186_eos, rx1186_tgt
    eq $I19, 1, rx1186_restart2435
    gt rx1186_pos, rx1186_eos, rx1186_fail2436
    repr_get_attr_int $I11, self, rx1186_curclass, "$!from"
    ne $I11, -1, rxscan1187_done2442
    goto rxscan1187_scan2441
  rxscan1187_loop2440:
    inc rx1186_pos
    gt rx1186_pos, rx1186_eos, rx1186_fail2436
    repr_bind_attr_int rx1186_cur, rx1186_curclass, "$!from", rx1186_pos
  rxscan1187_scan2441:
    nqp_rxmark rx1186_bstack, rxscan1187_loop2440, rx1186_pos, 0
  rxscan1187_done2442:
    nqp_rxmark rx1186_bstack, rxcap1188_fail2444, rx1186_pos, 0
    add $I11, rx1186_pos, 6
    gt $I11, rx1186_eos, rx1186_fail2436
    substr $S10, rx1186_tgt, rx1186_pos, 6
    ne $S10, ucs4:"method", rx1186_fail2436
    add rx1186_pos, 6
    nqp_rxpeek $I19, rx1186_bstack, rxcap1188_fail2444
    inc $I19
    set $I11, rx1186_bstack[$I19]
    repr_bind_attr_int rx1186_cur, rx1186_curclass, "$!pos", rx1186_pos
    $P11 = rx1186_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1186_pos)
    rx1186_cstack = rx1186_cur."!cursor_capture"($P11, "sym")
    goto rxcap1188_done2443
  rxcap1188_fail2444:
    goto rx1186_fail2436
  rxcap1188_done2443:
    repr_bind_attr_int rx1186_cur, rx1186_curclass, "$!pos", rx1186_pos
    $P11 = rx1186_cur."method_def"()
    repr_get_attr_int $I11, $P11, rx1186_curclass, "$!pos"
    lt $I11, 0, rx1186_fail2436
    nqp_rxmark rx1186_bstack, rxsubrule1189_pass2445, -1, 0
  rxsubrule1189_pass2445:
    rx1186_cstack = rx1186_cur."!cursor_capture"($P11, "method_def")
    repr_get_attr_int rx1186_pos, $P11, rx1186_curclass, "$!pos"
    rx1186_cur."!cursor_pass"(rx1186_pos, "routine_declarator:sym<method>", 'backtrack'=>1)
    .return (rx1186_cur)
  rx1186_restart2435:
    repr_get_attr_obj rx1186_cstack, rx1186_cur, rx1186_curclass, "$!cstack"
  rx1186_fail2436:
    unless rx1186_bstack, rx1186_done2434
    pop $I19, rx1186_bstack
    if_null rx1186_cstack, rx1186_cstack_done2439
    unless rx1186_cstack, rx1186_cstack_done2439
    dec $I19
    set $P11, rx1186_cstack[$I19]
  rx1186_cstack_done2439:
    pop rx1186_rep, rx1186_bstack
    pop rx1186_pos, rx1186_bstack
    pop $I19, rx1186_bstack
    lt rx1186_pos, -1, rx1186_done2434
    lt rx1186_pos, 0, rx1186_fail2436
    eq $I19, 0, rx1186_fail2436
    nqp_islist $I20, rx1186_cstack
    unless $I20, rx1186_jump2437
    elements $I18, rx1186_bstack
    le $I18, 0, rx1186_cut2438
    dec $I18
    set $I18, rx1186_bstack[$I18]
  rx1186_cut2438:
    assign rx1186_cstack, $I18
  rx1186_jump2437:
    jump $I19
  rx1186_done2434:
    rx1186_cur."!cursor_fail"()
    .return (rx1186_cur) 
.end
.HLL "nqp"
.namespace []
.sub "routine_def" :subid("cuid_122_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1089
    .param pmc _lex_param_0 
    .lex "$*RETURN_USED", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    set self, _lex_param_0
    .local string rx1190_tgt
    .local int rx1190_pos
    .local int rx1190_off
    .local int rx1190_eos
    .local int rx1190_rep
    .local pmc rx1190_cur
    .local pmc rx1190_curclass
    .local pmc rx1190_bstack
    .local pmc rx1190_cstack
    (rx1190_cur, rx1190_tgt, rx1190_pos, rx1190_curclass, rx1190_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1190_cur
    length rx1190_eos, rx1190_tgt
    eq $I19, 1, rx1190_restart2448
    gt rx1190_pos, rx1190_eos, rx1190_fail2449
    repr_get_attr_int $I11, self, rx1190_curclass, "$!from"
    ne $I11, -1, rxscan1191_done2455
    goto rxscan1191_scan2454
  rxscan1191_loop2453:
    inc rx1190_pos
    gt rx1190_pos, rx1190_eos, rx1190_fail2449
    repr_bind_attr_int rx1190_cur, rx1190_curclass, "$!from", rx1190_pos
  rxscan1191_scan2454:
    nqp_rxmark rx1190_bstack, rxscan1191_loop2453, rx1190_pos, 0
  rxscan1191_done2455:
    repr_bind_attr_int rx1190_cur, rx1190_curclass, "$!pos", rx1190_pos
    $P11 = rx1190_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1190_curclass, "$!pos"
    lt $I11, 0, rx1190_fail2449
    repr_get_attr_int rx1190_pos, $P11, rx1190_curclass, "$!pos"
    repr_bind_attr_int rx1190_cur, rx1190_curclass, "$!pos", rx1190_pos
    store_lex unicode:"$\x{a2}", rx1190_cur
    box $P5002, 0
    set $P101, $P5002
    repr_bind_attr_int rx1190_cur, rx1190_curclass, "$!pos", rx1190_pos
    $P11 = rx1190_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1190_curclass, "$!pos"
    lt $I11, 0, rx1190_fail2449
    repr_get_attr_int rx1190_pos, $P11, rx1190_curclass, "$!pos"
    nqp_rxmark rx1190_bstack, rxquantr1194_done2459, rx1190_pos, 0
  rxquantr1194_loop2458:
    repr_bind_attr_int rx1190_cur, rx1190_curclass, "$!pos", rx1190_pos
    $P11 = rx1190_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1190_curclass, "$!pos"
    lt $I11, 0, rx1190_fail2449
    repr_get_attr_int rx1190_pos, $P11, rx1190_curclass, "$!pos"
    nqp_rxmark rx1190_bstack, rxcap1196_fail2462, rx1190_pos, 0
    nqp_rxmark rx1190_bstack, rxquantr1197_done2464, rx1190_pos, 0
  rxquantr1197_loop2463:
    add $I11, rx1190_pos, 1
    gt $I11, rx1190_eos, rx1190_fail2449
    substr $S10, rx1190_tgt, rx1190_pos, 1
    ne $S10, ucs4:"&", rx1190_fail2449
    add rx1190_pos, 1
    nqp_rxpeek $I19, rx1190_bstack, rxquantr1197_done2464
    inc $I19
    inc $I19
    set rx1190_rep, rx1190_bstack[$I19]
    nqp_rxcommit rx1190_bstack, rxquantr1197_done2464
    inc rx1190_rep
  rxquantr1197_done2464:
    nqp_rxpeek $I19, rx1190_bstack, rxcap1196_fail2462
    inc $I19
    set $I11, rx1190_bstack[$I19]
    repr_bind_attr_int rx1190_cur, rx1190_curclass, "$!pos", rx1190_pos
    $P11 = rx1190_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1190_pos)
    rx1190_cstack = rx1190_cur."!cursor_capture"($P11, "sigil")
    goto rxcap1196_done2461
  rxcap1196_fail2462:
    goto rx1190_fail2449
  rxcap1196_done2461:
    repr_bind_attr_int rx1190_cur, rx1190_curclass, "$!pos", rx1190_pos
    $P11 = rx1190_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1190_curclass, "$!pos"
    lt $I11, 0, rx1190_fail2449
    nqp_rxmark rx1190_bstack, rxsubrule1198_pass2465, -1, 0
  rxsubrule1198_pass2465:
    rx1190_cstack = rx1190_cur."!cursor_capture"($P11, "deflongname")
    repr_get_attr_int rx1190_pos, $P11, rx1190_curclass, "$!pos"
    repr_bind_attr_int rx1190_cur, rx1190_curclass, "$!pos", rx1190_pos
    $P11 = rx1190_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1190_curclass, "$!pos"
    lt $I11, 0, rx1190_fail2449
    repr_get_attr_int rx1190_pos, $P11, rx1190_curclass, "$!pos"
    nqp_rxpeek $I19, rx1190_bstack, rxquantr1194_done2459
    inc $I19
    inc $I19
    set rx1190_rep, rx1190_bstack[$I19]
    nqp_rxcommit rx1190_bstack, rxquantr1194_done2459
    inc rx1190_rep
  rxquantr1194_done2459:
    repr_bind_attr_int rx1190_cur, rx1190_curclass, "$!pos", rx1190_pos
    $P11 = rx1190_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1190_curclass, "$!pos"
    lt $I11, 0, rx1190_fail2449
    repr_get_attr_int rx1190_pos, $P11, rx1190_curclass, "$!pos"
    repr_bind_attr_int rx1190_cur, rx1190_curclass, "$!pos", rx1190_pos
    $P11 = rx1190_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx1190_curclass, "$!pos"
    lt $I11, 0, rx1190_fail2449
    repr_get_attr_int rx1190_pos, $P11, rx1190_curclass, "$!pos"
    repr_bind_attr_int rx1190_cur, rx1190_curclass, "$!pos", rx1190_pos
    $P11 = rx1190_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1190_curclass, "$!pos"
    lt $I11, 0, rx1190_fail2449
    repr_get_attr_int rx1190_pos, $P11, rx1190_curclass, "$!pos"
  alt1203_02471:
    nqp_rxmark rx1190_bstack, alt1203_12477, rx1190_pos, 0
    repr_bind_attr_int rx1190_cur, rx1190_curclass, "$!pos", rx1190_pos
    $P11 = rx1190_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1190_curclass, "$!pos"
    lt $I11, 0, rx1190_fail2449
    repr_get_attr_int rx1190_pos, $P11, rx1190_curclass, "$!pos"
    add $I11, rx1190_pos, 1
    gt $I11, rx1190_eos, rx1190_fail2449
    substr $S10, rx1190_tgt, rx1190_pos, 1
    ne $S10, ucs4:"(", rx1190_fail2449
    add rx1190_pos, 1
    repr_bind_attr_int rx1190_cur, rx1190_curclass, "$!pos", rx1190_pos
    $P11 = rx1190_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1190_curclass, "$!pos"
    lt $I11, 0, rx1190_fail2449
    repr_get_attr_int rx1190_pos, $P11, rx1190_curclass, "$!pos"
    repr_bind_attr_int rx1190_cur, rx1190_curclass, "$!pos", rx1190_pos
    $P11 = rx1190_cur."signature"()
    repr_get_attr_int $I11, $P11, rx1190_curclass, "$!pos"
    lt $I11, 0, rx1190_fail2449
    nqp_rxmark rx1190_bstack, rxsubrule1206_pass2474, -1, 0
  rxsubrule1206_pass2474:
    rx1190_cstack = rx1190_cur."!cursor_capture"($P11, "signature")
    repr_get_attr_int rx1190_pos, $P11, rx1190_curclass, "$!pos"
    repr_bind_attr_int rx1190_cur, rx1190_curclass, "$!pos", rx1190_pos
    $P11 = rx1190_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1190_curclass, "$!pos"
    lt $I11, 0, rx1190_fail2449
    repr_get_attr_int rx1190_pos, $P11, rx1190_curclass, "$!pos"
    add $I11, rx1190_pos, 1
    gt $I11, rx1190_eos, rx1190_fail2449
    substr $S10, rx1190_tgt, rx1190_pos, 1
    ne $S10, ucs4:")", rx1190_fail2449
    add rx1190_pos, 1
    repr_bind_attr_int rx1190_cur, rx1190_curclass, "$!pos", rx1190_pos
    $P11 = rx1190_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1190_curclass, "$!pos"
    lt $I11, 0, rx1190_fail2449
    repr_get_attr_int rx1190_pos, $P11, rx1190_curclass, "$!pos"
    goto alt1203_end2470
  alt1203_12477:
    repr_bind_attr_int rx1190_cur, rx1190_curclass, "$!pos", rx1190_pos
    $P11 = rx1190_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1190_curclass, "$!pos"
    lt $I11, 0, rx1190_fail2449
    repr_get_attr_int rx1190_pos, $P11, rx1190_curclass, "$!pos"
    repr_bind_attr_int rx1190_cur, rx1190_curclass, "$!pos", rx1190_pos
    $P11 = rx1190_cur."panic"("Routine declaration requires a signature")
    repr_get_attr_int $I11, $P11, rx1190_curclass, "$!pos"
    lt $I11, 0, rx1190_fail2449
    repr_get_attr_int rx1190_pos, $P11, rx1190_curclass, "$!pos"
    repr_bind_attr_int rx1190_cur, rx1190_curclass, "$!pos", rx1190_pos
    $P11 = rx1190_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1190_curclass, "$!pos"
    lt $I11, 0, rx1190_fail2449
    repr_get_attr_int rx1190_pos, $P11, rx1190_curclass, "$!pos"
  alt1203_end2470:
    repr_bind_attr_int rx1190_cur, rx1190_curclass, "$!pos", rx1190_pos
    $P11 = rx1190_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1190_curclass, "$!pos"
    lt $I11, 0, rx1190_fail2449
    repr_get_attr_int rx1190_pos, $P11, rx1190_curclass, "$!pos"
    nqp_rxmark rx1190_bstack, rxquantr1213_done2483, rx1190_pos, 0
  rxquantr1213_loop2482:
    repr_bind_attr_int rx1190_cur, rx1190_curclass, "$!pos", rx1190_pos
    $P11 = rx1190_cur."trait"()
    repr_get_attr_int $I11, $P11, rx1190_curclass, "$!pos"
    lt $I11, 0, rx1190_fail2449
    goto rxsubrule1214_pass2484
  rxsubrule1214_back2485:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1190_curclass, "$!pos"
    lt $I11, 0, rx1190_fail2449
  rxsubrule1214_pass2484:
    rx1190_cstack = rx1190_cur."!cursor_capture"($P11, "trait")
    set_addr $I11, rxsubrule1214_back2485
    push rx1190_bstack, $I11
    push rx1190_bstack, 0
    push rx1190_bstack, rx1190_pos
    elements $I11, rx1190_cstack
    push rx1190_bstack, $I11
    repr_get_attr_int rx1190_pos, $P11, rx1190_curclass, "$!pos"
    nqp_rxpeek $I19, rx1190_bstack, rxquantr1213_done2483
    inc $I19
    inc $I19
    set rx1190_rep, rx1190_bstack[$I19]
    nqp_rxcommit rx1190_bstack, rxquantr1213_done2483
    inc rx1190_rep
    nqp_rxmark rx1190_bstack, rxquantr1213_done2483, rx1190_pos, rx1190_rep
    goto rxquantr1213_loop2482
  rxquantr1213_done2483:
    repr_bind_attr_int rx1190_cur, rx1190_curclass, "$!pos", rx1190_pos
    $P11 = rx1190_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1190_curclass, "$!pos"
    lt $I11, 0, rx1190_fail2449
    repr_get_attr_int rx1190_pos, $P11, rx1190_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1216_02488
    nqp_push_label $P11, alt1216_12492
    nqp_rxmark rx1190_bstack, alt1216_end2487, -1, 0
    rx1190_cur."!alt"(rx1190_pos, "alt_nfa__23_1360432461.538", $P11)
    goto rx1190_fail2449
  alt1216_02488:
    repr_bind_attr_int rx1190_cur, rx1190_curclass, "$!pos", rx1190_pos
    $P11 = rx1190_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1190_curclass, "$!pos"
    lt $I11, 0, rx1190_fail2449
    repr_get_attr_int rx1190_pos, $P11, rx1190_curclass, "$!pos"
    repr_bind_attr_int rx1190_cur, rx1190_curclass, "$!pos", rx1190_pos
    $P11 = rx1190_cur."onlystar"()
    repr_get_attr_int $I11, $P11, rx1190_curclass, "$!pos"
    lt $I11, 0, rx1190_fail2449
    nqp_rxmark rx1190_bstack, rxsubrule1218_pass2490, -1, 0
  rxsubrule1218_pass2490:
    rx1190_cstack = rx1190_cur."!cursor_capture"($P11, "onlystar")
    repr_get_attr_int rx1190_pos, $P11, rx1190_curclass, "$!pos"
    repr_bind_attr_int rx1190_cur, rx1190_curclass, "$!pos", rx1190_pos
    $P11 = rx1190_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1190_curclass, "$!pos"
    lt $I11, 0, rx1190_fail2449
    repr_get_attr_int rx1190_pos, $P11, rx1190_curclass, "$!pos"
    goto alt1216_end2487
  alt1216_12492:
    repr_bind_attr_int rx1190_cur, rx1190_curclass, "$!pos", rx1190_pos
    $P11 = rx1190_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1190_curclass, "$!pos"
    lt $I11, 0, rx1190_fail2449
    repr_get_attr_int rx1190_pos, $P11, rx1190_curclass, "$!pos"
    repr_bind_attr_int rx1190_cur, rx1190_curclass, "$!pos", rx1190_pos
    $P11 = rx1190_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx1190_curclass, "$!pos"
    lt $I11, 0, rx1190_fail2449
    nqp_rxmark rx1190_bstack, rxsubrule1221_pass2494, -1, 0
  rxsubrule1221_pass2494:
    rx1190_cstack = rx1190_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx1190_pos, $P11, rx1190_curclass, "$!pos"
    repr_bind_attr_int rx1190_cur, rx1190_curclass, "$!pos", rx1190_pos
    $P11 = rx1190_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1190_curclass, "$!pos"
    lt $I11, 0, rx1190_fail2449
    repr_get_attr_int rx1190_pos, $P11, rx1190_curclass, "$!pos"
    goto alt1216_end2487
  alt1216_end2487:
    nqp_rxcommit rx1190_bstack, alt1216_end2487
    repr_bind_attr_int rx1190_cur, rx1190_curclass, "$!pos", rx1190_pos
    $P11 = rx1190_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1190_curclass, "$!pos"
    lt $I11, 0, rx1190_fail2449
    repr_get_attr_int rx1190_pos, $P11, rx1190_curclass, "$!pos"
    rx1190_cur."!cursor_pass"(rx1190_pos, "routine_def", 'backtrack'=>1)
    .return (rx1190_cur)
  rx1190_restart2448:
    repr_get_attr_obj rx1190_cstack, rx1190_cur, rx1190_curclass, "$!cstack"
  rx1190_fail2449:
    unless rx1190_bstack, rx1190_done2447
    pop $I19, rx1190_bstack
    if_null rx1190_cstack, rx1190_cstack_done2452
    unless rx1190_cstack, rx1190_cstack_done2452
    dec $I19
    set $P11, rx1190_cstack[$I19]
  rx1190_cstack_done2452:
    pop rx1190_rep, rx1190_bstack
    pop rx1190_pos, rx1190_bstack
    pop $I19, rx1190_bstack
    lt rx1190_pos, -1, rx1190_done2447
    lt rx1190_pos, 0, rx1190_fail2449
    eq $I19, 0, rx1190_fail2449
    nqp_islist $I20, rx1190_cstack
    unless $I20, rx1190_jump2450
    elements $I18, rx1190_bstack
    le $I18, 0, rx1190_cut2451
    dec $I18
    set $I18, rx1190_bstack[$I18]
  rx1190_cut2451:
    assign rx1190_cstack, $I18
  rx1190_jump2450:
    jump $I19
  rx1190_done2447:
    rx1190_cur."!cursor_fail"()
    .return (rx1190_cur) 
.end
.HLL "nqp"
.namespace []
.sub "method_def" :subid("cuid_123_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1102
    .param pmc _lex_param_0 
    .const 'Sub' $P5008 = 'cuid_405_1360432459.413' 
    capture_lex $P5008 
    .lex "$*RETURN_USED", $P101 
    .lex "$*INVOCANT_OK", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
    set self, _lex_param_0
    .local string rx1224_tgt
    .local int rx1224_pos
    .local int rx1224_off
    .local int rx1224_eos
    .local int rx1224_rep
    .local pmc rx1224_cur
    .local pmc rx1224_curclass
    .local pmc rx1224_bstack
    .local pmc rx1224_cstack
    (rx1224_cur, rx1224_tgt, rx1224_pos, rx1224_curclass, rx1224_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1224_cur
    length rx1224_eos, rx1224_tgt
    eq $I19, 1, rx1224_restart2499
    gt rx1224_pos, rx1224_eos, rx1224_fail2500
    repr_get_attr_int $I11, self, rx1224_curclass, "$!from"
    ne $I11, -1, rxscan1225_done2506
    goto rxscan1225_scan2505
  rxscan1225_loop2504:
    inc rx1224_pos
    gt rx1224_pos, rx1224_eos, rx1224_fail2500
    repr_bind_attr_int rx1224_cur, rx1224_curclass, "$!from", rx1224_pos
  rxscan1225_scan2505:
    nqp_rxmark rx1224_bstack, rxscan1225_loop2504, rx1224_pos, 0
  rxscan1225_done2506:
    repr_bind_attr_int rx1224_cur, rx1224_curclass, "$!pos", rx1224_pos
    $P11 = rx1224_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1224_curclass, "$!pos"
    lt $I11, 0, rx1224_fail2500
    repr_get_attr_int rx1224_pos, $P11, rx1224_curclass, "$!pos"
    repr_bind_attr_int rx1224_cur, rx1224_curclass, "$!pos", rx1224_pos
    store_lex unicode:"$\x{a2}", rx1224_cur
    box $P5003, 0
    set $P101, $P5003
    repr_bind_attr_int rx1224_cur, rx1224_curclass, "$!pos", rx1224_pos
    $P11 = rx1224_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1224_curclass, "$!pos"
    lt $I11, 0, rx1224_fail2500
    repr_get_attr_int rx1224_pos, $P11, rx1224_curclass, "$!pos"
    repr_bind_attr_int rx1224_cur, rx1224_curclass, "$!pos", rx1224_pos
    store_lex unicode:"$\x{a2}", rx1224_cur
    box $P5004, 1
    set $P102, $P5004
    repr_bind_attr_int rx1224_cur, rx1224_curclass, "$!pos", rx1224_pos
    $P11 = rx1224_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1224_curclass, "$!pos"
    lt $I11, 0, rx1224_fail2500
    repr_get_attr_int rx1224_pos, $P11, rx1224_curclass, "$!pos"
  alt1229_02511:
    nqp_rxmark rx1224_bstack, alt1229_12517, rx1224_pos, 0
    repr_bind_attr_int rx1224_cur, rx1224_curclass, "$!pos", rx1224_pos
    $P11 = rx1224_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1224_curclass, "$!pos"
    lt $I11, 0, rx1224_fail2500
    repr_get_attr_int rx1224_pos, $P11, rx1224_curclass, "$!pos"
    add $I11, rx1224_pos, 3
    gt $I11, rx1224_eos, rx1224_fail2500
    substr $S10, rx1224_tgt, rx1224_pos, 3
    ne $S10, ucs4:"::(", rx1224_fail2500
    add rx1224_pos, 3
    repr_bind_attr_int rx1224_cur, rx1224_curclass, "$!pos", rx1224_pos
    $P11 = rx1224_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1224_curclass, "$!pos"
    lt $I11, 0, rx1224_fail2500
    repr_get_attr_int rx1224_pos, $P11, rx1224_curclass, "$!pos"
    repr_bind_attr_int rx1224_cur, rx1224_curclass, "$!pos", rx1224_pos
    $P11 = rx1224_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1224_curclass, "$!pos"
    lt $I11, 0, rx1224_fail2500
    nqp_rxmark rx1224_bstack, rxsubrule1232_pass2514, -1, 0
  rxsubrule1232_pass2514:
    rx1224_cstack = rx1224_cur."!cursor_capture"($P11, "latename=variable")
    repr_get_attr_int rx1224_pos, $P11, rx1224_curclass, "$!pos"
    repr_bind_attr_int rx1224_cur, rx1224_curclass, "$!pos", rx1224_pos
    $P11 = rx1224_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1224_curclass, "$!pos"
    lt $I11, 0, rx1224_fail2500
    repr_get_attr_int rx1224_pos, $P11, rx1224_curclass, "$!pos"
    add $I11, rx1224_pos, 1
    gt $I11, rx1224_eos, rx1224_fail2500
    substr $S10, rx1224_tgt, rx1224_pos, 1
    ne $S10, ucs4:")", rx1224_fail2500
    add rx1224_pos, 1
    repr_bind_attr_int rx1224_cur, rx1224_curclass, "$!pos", rx1224_pos
    $P11 = rx1224_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1224_curclass, "$!pos"
    lt $I11, 0, rx1224_fail2500
    repr_get_attr_int rx1224_pos, $P11, rx1224_curclass, "$!pos"
    goto alt1229_end2510
  alt1229_12517:
    repr_bind_attr_int rx1224_cur, rx1224_curclass, "$!pos", rx1224_pos
    $P11 = rx1224_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1224_curclass, "$!pos"
    lt $I11, 0, rx1224_fail2500
    repr_get_attr_int rx1224_pos, $P11, rx1224_curclass, "$!pos"
    nqp_rxmark rx1224_bstack, rxcap1236_fail2520, rx1224_pos, 0
    nqp_rxmark rx1224_bstack, rxquantr1237_done2522, rx1224_pos, 0
  rxquantr1237_loop2521:
    add $I11, rx1224_pos, 1
    gt $I11, rx1224_eos, rx1224_fail2500
    substr $S10, rx1224_tgt, rx1224_pos, 1
    ne $S10, ucs4:"!", rx1224_fail2500
    add rx1224_pos, 1
    nqp_rxpeek $I19, rx1224_bstack, rxquantr1237_done2522
    inc $I19
    inc $I19
    set rx1224_rep, rx1224_bstack[$I19]
    nqp_rxcommit rx1224_bstack, rxquantr1237_done2522
    inc rx1224_rep
  rxquantr1237_done2522:
    nqp_rxpeek $I19, rx1224_bstack, rxcap1236_fail2520
    inc $I19
    set $I11, rx1224_bstack[$I19]
    repr_bind_attr_int rx1224_cur, rx1224_curclass, "$!pos", rx1224_pos
    $P11 = rx1224_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1224_pos)
    rx1224_cstack = rx1224_cur."!cursor_capture"($P11, "private")
    goto rxcap1236_done2519
  rxcap1236_fail2520:
    goto rx1224_fail2500
  rxcap1236_done2519:
    repr_bind_attr_int rx1224_cur, rx1224_curclass, "$!pos", rx1224_pos
    $P11 = rx1224_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1224_curclass, "$!pos"
    lt $I11, 0, rx1224_fail2500
    repr_get_attr_int rx1224_pos, $P11, rx1224_curclass, "$!pos"
    nqp_rxmark rx1224_bstack, rxquantr1239_done2525, rx1224_pos, 0
  rxquantr1239_loop2524:
    repr_bind_attr_int rx1224_cur, rx1224_curclass, "$!pos", rx1224_pos
    $P11 = rx1224_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1224_curclass, "$!pos"
    lt $I11, 0, rx1224_fail2500
    goto rxsubrule1240_pass2526
  rxsubrule1240_back2527:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1224_curclass, "$!pos"
    lt $I11, 0, rx1224_fail2500
  rxsubrule1240_pass2526:
    rx1224_cstack = rx1224_cur."!cursor_capture"($P11, "deflongname")
    set_addr $I11, rxsubrule1240_back2527
    push rx1224_bstack, $I11
    push rx1224_bstack, 0
    push rx1224_bstack, rx1224_pos
    elements $I11, rx1224_cstack
    push rx1224_bstack, $I11
    repr_get_attr_int rx1224_pos, $P11, rx1224_curclass, "$!pos"
    nqp_rxpeek $I19, rx1224_bstack, rxquantr1239_done2525
    inc $I19
    inc $I19
    set rx1224_rep, rx1224_bstack[$I19]
    nqp_rxcommit rx1224_bstack, rxquantr1239_done2525
    inc rx1224_rep
  rxquantr1239_done2525:
    repr_bind_attr_int rx1224_cur, rx1224_curclass, "$!pos", rx1224_pos
    $P11 = rx1224_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1224_curclass, "$!pos"
    lt $I11, 0, rx1224_fail2500
    repr_get_attr_int rx1224_pos, $P11, rx1224_curclass, "$!pos"
  alt1229_end2510:
    repr_bind_attr_int rx1224_cur, rx1224_curclass, "$!pos", rx1224_pos
    $P11 = rx1224_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1224_curclass, "$!pos"
    lt $I11, 0, rx1224_fail2500
    repr_get_attr_int rx1224_pos, $P11, rx1224_curclass, "$!pos"
    repr_bind_attr_int rx1224_cur, rx1224_curclass, "$!pos", rx1224_pos
    $P11 = rx1224_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx1224_curclass, "$!pos"
    lt $I11, 0, rx1224_fail2500
    repr_get_attr_int rx1224_pos, $P11, rx1224_curclass, "$!pos"
    repr_bind_attr_int rx1224_cur, rx1224_curclass, "$!pos", rx1224_pos
    $P11 = rx1224_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1224_curclass, "$!pos"
    lt $I11, 0, rx1224_fail2500
    repr_get_attr_int rx1224_pos, $P11, rx1224_curclass, "$!pos"
  alt1245_02533:
    nqp_rxmark rx1224_bstack, alt1245_12539, rx1224_pos, 0
    repr_bind_attr_int rx1224_cur, rx1224_curclass, "$!pos", rx1224_pos
    $P11 = rx1224_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1224_curclass, "$!pos"
    lt $I11, 0, rx1224_fail2500
    repr_get_attr_int rx1224_pos, $P11, rx1224_curclass, "$!pos"
    add $I11, rx1224_pos, 1
    gt $I11, rx1224_eos, rx1224_fail2500
    substr $S10, rx1224_tgt, rx1224_pos, 1
    ne $S10, ucs4:"(", rx1224_fail2500
    add rx1224_pos, 1
    repr_bind_attr_int rx1224_cur, rx1224_curclass, "$!pos", rx1224_pos
    $P11 = rx1224_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1224_curclass, "$!pos"
    lt $I11, 0, rx1224_fail2500
    repr_get_attr_int rx1224_pos, $P11, rx1224_curclass, "$!pos"
    repr_bind_attr_int rx1224_cur, rx1224_curclass, "$!pos", rx1224_pos
    $P11 = rx1224_cur."signature"()
    repr_get_attr_int $I11, $P11, rx1224_curclass, "$!pos"
    lt $I11, 0, rx1224_fail2500
    nqp_rxmark rx1224_bstack, rxsubrule1248_pass2536, -1, 0
  rxsubrule1248_pass2536:
    rx1224_cstack = rx1224_cur."!cursor_capture"($P11, "signature")
    repr_get_attr_int rx1224_pos, $P11, rx1224_curclass, "$!pos"
    repr_bind_attr_int rx1224_cur, rx1224_curclass, "$!pos", rx1224_pos
    $P11 = rx1224_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1224_curclass, "$!pos"
    lt $I11, 0, rx1224_fail2500
    repr_get_attr_int rx1224_pos, $P11, rx1224_curclass, "$!pos"
    add $I11, rx1224_pos, 1
    gt $I11, rx1224_eos, rx1224_fail2500
    substr $S10, rx1224_tgt, rx1224_pos, 1
    ne $S10, ucs4:")", rx1224_fail2500
    add rx1224_pos, 1
    repr_bind_attr_int rx1224_cur, rx1224_curclass, "$!pos", rx1224_pos
    $P11 = rx1224_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1224_curclass, "$!pos"
    lt $I11, 0, rx1224_fail2500
    repr_get_attr_int rx1224_pos, $P11, rx1224_curclass, "$!pos"
    goto alt1245_end2532
  alt1245_12539:
    repr_bind_attr_int rx1224_cur, rx1224_curclass, "$!pos", rx1224_pos
    $P11 = rx1224_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1224_curclass, "$!pos"
    lt $I11, 0, rx1224_fail2500
    repr_get_attr_int rx1224_pos, $P11, rx1224_curclass, "$!pos"
    repr_bind_attr_int rx1224_cur, rx1224_curclass, "$!pos", rx1224_pos
    $P11 = rx1224_cur."panic"("Routine declaration requires a signature")
    repr_get_attr_int $I11, $P11, rx1224_curclass, "$!pos"
    lt $I11, 0, rx1224_fail2500
    repr_get_attr_int rx1224_pos, $P11, rx1224_curclass, "$!pos"
    repr_bind_attr_int rx1224_cur, rx1224_curclass, "$!pos", rx1224_pos
    $P11 = rx1224_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1224_curclass, "$!pos"
    lt $I11, 0, rx1224_fail2500
    repr_get_attr_int rx1224_pos, $P11, rx1224_curclass, "$!pos"
  alt1245_end2532:
    repr_bind_attr_int rx1224_cur, rx1224_curclass, "$!pos", rx1224_pos
    $P11 = rx1224_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1224_curclass, "$!pos"
    lt $I11, 0, rx1224_fail2500
    repr_get_attr_int rx1224_pos, $P11, rx1224_curclass, "$!pos"
    repr_bind_attr_int rx1224_cur, rx1224_curclass, "$!pos", rx1224_pos
    store_lex unicode:"$\x{a2}", rx1224_cur
    $P5005 = $P103."MATCH"()
    set $P104, $P5005
    .const 'Sub' $P5006 = 'cuid_405_1360432459.413' 
    capture_lex $P5006
    $P5007 = $P5006()
    repr_bind_attr_int rx1224_cur, rx1224_curclass, "$!pos", rx1224_pos
    $P11 = rx1224_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1224_curclass, "$!pos"
    lt $I11, 0, rx1224_fail2500
    repr_get_attr_int rx1224_pos, $P11, rx1224_curclass, "$!pos"
    nqp_rxmark rx1224_bstack, rxquantr1256_done2546, rx1224_pos, 0
  rxquantr1256_loop2545:
    repr_bind_attr_int rx1224_cur, rx1224_curclass, "$!pos", rx1224_pos
    $P11 = rx1224_cur."trait"()
    repr_get_attr_int $I11, $P11, rx1224_curclass, "$!pos"
    lt $I11, 0, rx1224_fail2500
    goto rxsubrule1257_pass2547
  rxsubrule1257_back2548:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1224_curclass, "$!pos"
    lt $I11, 0, rx1224_fail2500
  rxsubrule1257_pass2547:
    rx1224_cstack = rx1224_cur."!cursor_capture"($P11, "trait")
    set_addr $I11, rxsubrule1257_back2548
    push rx1224_bstack, $I11
    push rx1224_bstack, 0
    push rx1224_bstack, rx1224_pos
    elements $I11, rx1224_cstack
    push rx1224_bstack, $I11
    repr_get_attr_int rx1224_pos, $P11, rx1224_curclass, "$!pos"
    nqp_rxpeek $I19, rx1224_bstack, rxquantr1256_done2546
    inc $I19
    inc $I19
    set rx1224_rep, rx1224_bstack[$I19]
    nqp_rxcommit rx1224_bstack, rxquantr1256_done2546
    inc rx1224_rep
    nqp_rxmark rx1224_bstack, rxquantr1256_done2546, rx1224_pos, rx1224_rep
    goto rxquantr1256_loop2545
  rxquantr1256_done2546:
    repr_bind_attr_int rx1224_cur, rx1224_curclass, "$!pos", rx1224_pos
    $P11 = rx1224_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1224_curclass, "$!pos"
    lt $I11, 0, rx1224_fail2500
    repr_get_attr_int rx1224_pos, $P11, rx1224_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1259_02551
    nqp_push_label $P11, alt1259_12555
    nqp_rxmark rx1224_bstack, alt1259_end2550, -1, 0
    rx1224_cur."!alt"(rx1224_pos, "alt_nfa__24_1360432461.572", $P11)
    goto rx1224_fail2500
  alt1259_02551:
    repr_bind_attr_int rx1224_cur, rx1224_curclass, "$!pos", rx1224_pos
    $P11 = rx1224_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1224_curclass, "$!pos"
    lt $I11, 0, rx1224_fail2500
    repr_get_attr_int rx1224_pos, $P11, rx1224_curclass, "$!pos"
    repr_bind_attr_int rx1224_cur, rx1224_curclass, "$!pos", rx1224_pos
    $P11 = rx1224_cur."onlystar"()
    repr_get_attr_int $I11, $P11, rx1224_curclass, "$!pos"
    lt $I11, 0, rx1224_fail2500
    nqp_rxmark rx1224_bstack, rxsubrule1261_pass2553, -1, 0
  rxsubrule1261_pass2553:
    rx1224_cstack = rx1224_cur."!cursor_capture"($P11, "onlystar")
    repr_get_attr_int rx1224_pos, $P11, rx1224_curclass, "$!pos"
    repr_bind_attr_int rx1224_cur, rx1224_curclass, "$!pos", rx1224_pos
    $P11 = rx1224_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1224_curclass, "$!pos"
    lt $I11, 0, rx1224_fail2500
    repr_get_attr_int rx1224_pos, $P11, rx1224_curclass, "$!pos"
    goto alt1259_end2550
  alt1259_12555:
    repr_bind_attr_int rx1224_cur, rx1224_curclass, "$!pos", rx1224_pos
    $P11 = rx1224_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1224_curclass, "$!pos"
    lt $I11, 0, rx1224_fail2500
    repr_get_attr_int rx1224_pos, $P11, rx1224_curclass, "$!pos"
    repr_bind_attr_int rx1224_cur, rx1224_curclass, "$!pos", rx1224_pos
    $P11 = rx1224_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx1224_curclass, "$!pos"
    lt $I11, 0, rx1224_fail2500
    nqp_rxmark rx1224_bstack, rxsubrule1264_pass2557, -1, 0
  rxsubrule1264_pass2557:
    rx1224_cstack = rx1224_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx1224_pos, $P11, rx1224_curclass, "$!pos"
    repr_bind_attr_int rx1224_cur, rx1224_curclass, "$!pos", rx1224_pos
    $P11 = rx1224_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1224_curclass, "$!pos"
    lt $I11, 0, rx1224_fail2500
    repr_get_attr_int rx1224_pos, $P11, rx1224_curclass, "$!pos"
    goto alt1259_end2550
  alt1259_end2550:
    nqp_rxcommit rx1224_bstack, alt1259_end2550
    repr_bind_attr_int rx1224_cur, rx1224_curclass, "$!pos", rx1224_pos
    $P11 = rx1224_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1224_curclass, "$!pos"
    lt $I11, 0, rx1224_fail2500
    repr_get_attr_int rx1224_pos, $P11, rx1224_curclass, "$!pos"
    rx1224_cur."!cursor_pass"(rx1224_pos, "method_def", 'backtrack'=>1)
    .return (rx1224_cur)
  rx1224_restart2499:
    repr_get_attr_obj rx1224_cstack, rx1224_cur, rx1224_curclass, "$!cstack"
  rx1224_fail2500:
    unless rx1224_bstack, rx1224_done2498
    pop $I19, rx1224_bstack
    if_null rx1224_cstack, rx1224_cstack_done2503
    unless rx1224_cstack, rx1224_cstack_done2503
    dec $I19
    set $P11, rx1224_cstack[$I19]
  rx1224_cstack_done2503:
    pop rx1224_rep, rx1224_bstack
    pop rx1224_pos, rx1224_bstack
    pop $I19, rx1224_bstack
    lt rx1224_pos, -1, rx1224_done2498
    lt rx1224_pos, 0, rx1224_fail2500
    eq $I19, 0, rx1224_fail2500
    nqp_islist $I20, rx1224_cstack
    unless $I20, rx1224_jump2501
    elements $I18, rx1224_bstack
    le $I18, 0, rx1224_cut2502
    dec $I18
    set $I18, rx1224_bstack[$I18]
  rx1224_cut2502:
    assign rx1224_cstack, $I18
  rx1224_jump2501:
    jump $I19
  rx1224_done2498:
    rx1224_cur."!cursor_fail"()
    .return (rx1224_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_405_1360432459.413") :anon :lex :outer("cuid_123_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1112

    box $P5001, 0
    store_dynamic_lex "$*INVOCANT_OK", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "onlystar" :subid("cuid_124_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1120
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_406_1360432459.413' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1267_tgt
    .local int rx1267_pos
    .local int rx1267_off
    .local int rx1267_eos
    .local int rx1267_rep
    .local pmc rx1267_cur
    .local pmc rx1267_curclass
    .local pmc rx1267_bstack
    .local pmc rx1267_cstack
    (rx1267_cur, rx1267_tgt, rx1267_pos, rx1267_curclass, rx1267_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1267_cur
    length rx1267_eos, rx1267_tgt
    eq $I19, 1, rx1267_restart2562
    gt rx1267_pos, rx1267_eos, rx1267_fail2563
    repr_get_attr_int $I11, self, rx1267_curclass, "$!from"
    ne $I11, -1, rxscan1268_done2569
    goto rxscan1268_scan2568
  rxscan1268_loop2567:
    inc rx1267_pos
    gt rx1267_pos, rx1267_eos, rx1267_fail2563
    repr_bind_attr_int rx1267_cur, rx1267_curclass, "$!from", rx1267_pos
  rxscan1268_scan2568:
    nqp_rxmark rx1267_bstack, rxscan1268_loop2567, rx1267_pos, 0
  rxscan1268_done2569:
    repr_bind_attr_int rx1267_cur, rx1267_curclass, "$!pos", rx1267_pos
    store_lex unicode:"$\x{a2}", rx1267_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_406_1360432459.413' 
    capture_lex $P5002
    $P5003 = $P5002()
    unless $P5003, rx1267_fail2563
    add $I11, rx1267_pos, 1
    gt $I11, rx1267_eos, rx1267_fail2563
    substr $S10, rx1267_tgt, rx1267_pos, 1
    ne $S10, ucs4:"{", rx1267_fail2563
    add rx1267_pos, 1
    repr_bind_attr_int rx1267_cur, rx1267_curclass, "$!pos", rx1267_pos
    $P11 = rx1267_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1267_curclass, "$!pos"
    lt $I11, 0, rx1267_fail2563
    repr_get_attr_int rx1267_pos, $P11, rx1267_curclass, "$!pos"
    add $I11, rx1267_pos, 1
    gt $I11, rx1267_eos, rx1267_fail2563
    substr $S10, rx1267_tgt, rx1267_pos, 1
    ne $S10, ucs4:"*", rx1267_fail2563
    add rx1267_pos, 1
    repr_bind_attr_int rx1267_cur, rx1267_curclass, "$!pos", rx1267_pos
    $P11 = rx1267_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1267_curclass, "$!pos"
    lt $I11, 0, rx1267_fail2563
    repr_get_attr_int rx1267_pos, $P11, rx1267_curclass, "$!pos"
    add $I11, rx1267_pos, 1
    gt $I11, rx1267_eos, rx1267_fail2563
    substr $S10, rx1267_tgt, rx1267_pos, 1
    ne $S10, ucs4:"}", rx1267_fail2563
    add rx1267_pos, 1
    repr_bind_attr_int rx1267_cur, rx1267_curclass, "$!pos", rx1267_pos
    $P11 = rx1267_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1267_curclass, "$!pos"
    lt $I11, 0, rx1267_fail2563
    repr_bind_attr_int rx1267_cur, rx1267_curclass, "$!pos", rx1267_pos
    $P11 = rx1267_cur."finishpad"()
    repr_get_attr_int $I11, $P11, rx1267_curclass, "$!pos"
    lt $I11, 0, rx1267_fail2563
    repr_get_attr_int rx1267_pos, $P11, rx1267_curclass, "$!pos"
    rx1267_cur."!cursor_pass"(rx1267_pos, "onlystar", 'backtrack'=>1)
    .return (rx1267_cur)
  rx1267_restart2562:
    repr_get_attr_obj rx1267_cstack, rx1267_cur, rx1267_curclass, "$!cstack"
  rx1267_fail2563:
    unless rx1267_bstack, rx1267_done2561
    pop $I19, rx1267_bstack
    if_null rx1267_cstack, rx1267_cstack_done2566
    unless rx1267_cstack, rx1267_cstack_done2566
    dec $I19
    set $P11, rx1267_cstack[$I19]
  rx1267_cstack_done2566:
    pop rx1267_rep, rx1267_bstack
    pop rx1267_pos, rx1267_bstack
    pop $I19, rx1267_bstack
    lt rx1267_pos, -1, rx1267_done2561
    lt rx1267_pos, 0, rx1267_fail2563
    eq $I19, 0, rx1267_fail2563
    nqp_islist $I20, rx1267_cstack
    unless $I20, rx1267_jump2564
    elements $I18, rx1267_bstack
    le $I18, 0, rx1267_cut2565
    dec $I18
    set $I18, rx1267_bstack[$I18]
  rx1267_cut2565:
    assign rx1267_cstack, $I18
  rx1267_jump2564:
    jump $I19
  rx1267_done2561:
    rx1267_cur."!cursor_fail"()
    .return (rx1267_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_406_1360432459.413") :anon :lex :outer("cuid_124_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1121
    .local pmc fb_tmp_252 
    find_dynamic_lex $P5001, "$*MULTINESS"
    unless_null $P5001, fallback2570
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5002, $P5003
    set fb_tmp_252, $P5002
    repr_defined $I5002, fb_tmp_252
    unless $I5002 goto if1269_else2571 
    set $P5004, fb_tmp_252["$MULTINESS"]
    set $P5006, $P5004
    goto if1269_end2572
  if1269_else2571:
    null $P5005
    set $P5006, $P5005
  if1269_end2572:
    unless_null $P5006, vivi_12702573
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_12702573:
    unless_null $P5006, vivi_12712574
    die "Contextual $*MULTINESS not found"
    box $P5008, "Contextual $*MULTINESS not found"
    set $P5006, $P5008
  vivi_12712574:
    set $P5001, $P5006
  fallback2570:
    set $S5001, $P5001
    iseq $I5001, $S5001, "proto"
    .return ($I5001) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator" :subid("cuid_125_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1127
    .param pmc self 
    $P5001 = self."!protoregex"("multi_declarator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<multi>" :subid("cuid_126_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1128
    .param pmc _lex_param_0 
    .lex "$*MULTINESS", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    set self, _lex_param_0
    .local string rx1275_tgt
    .local int rx1275_pos
    .local int rx1275_off
    .local int rx1275_eos
    .local int rx1275_rep
    .local pmc rx1275_cur
    .local pmc rx1275_curclass
    .local pmc rx1275_bstack
    .local pmc rx1275_cstack
    (rx1275_cur, rx1275_tgt, rx1275_pos, rx1275_curclass, rx1275_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1275_cur
    length rx1275_eos, rx1275_tgt
    eq $I19, 1, rx1275_restart2580
    gt rx1275_pos, rx1275_eos, rx1275_fail2581
    repr_get_attr_int $I11, self, rx1275_curclass, "$!from"
    ne $I11, -1, rxscan1276_done2587
    goto rxscan1276_scan2586
  rxscan1276_loop2585:
    inc rx1275_pos
    gt rx1275_pos, rx1275_eos, rx1275_fail2581
    repr_bind_attr_int rx1275_cur, rx1275_curclass, "$!from", rx1275_pos
  rxscan1276_scan2586:
    nqp_rxmark rx1275_bstack, rxscan1276_loop2585, rx1275_pos, 0
  rxscan1276_done2587:
    repr_bind_attr_int rx1275_cur, rx1275_curclass, "$!pos", rx1275_pos
    store_lex unicode:"$\x{a2}", rx1275_cur
    box $P5002, "multi"
    set $P101, $P5002
    nqp_rxmark rx1275_bstack, rxcap1277_fail2589, rx1275_pos, 0
    add $I11, rx1275_pos, 5
    gt $I11, rx1275_eos, rx1275_fail2581
    substr $S10, rx1275_tgt, rx1275_pos, 5
    ne $S10, ucs4:"multi", rx1275_fail2581
    add rx1275_pos, 5
    nqp_rxpeek $I19, rx1275_bstack, rxcap1277_fail2589
    inc $I19
    set $I11, rx1275_bstack[$I19]
    repr_bind_attr_int rx1275_cur, rx1275_curclass, "$!pos", rx1275_pos
    $P11 = rx1275_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1275_pos)
    rx1275_cstack = rx1275_cur."!cursor_capture"($P11, "sym")
    goto rxcap1277_done2588
  rxcap1277_fail2589:
    goto rx1275_fail2581
  rxcap1277_done2588:
    repr_bind_attr_int rx1275_cur, rx1275_curclass, "$!pos", rx1275_pos
    $P11 = rx1275_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1275_curclass, "$!pos"
    lt $I11, 0, rx1275_fail2581
    repr_get_attr_int rx1275_pos, $P11, rx1275_curclass, "$!pos"
  alt1279_02592:
    nqp_rxmark rx1275_bstack, alt1279_12594, rx1275_pos, 0
    repr_bind_attr_int rx1275_cur, rx1275_curclass, "$!pos", rx1275_pos
    $P11 = rx1275_cur."declarator"()
    repr_get_attr_int $I11, $P11, rx1275_curclass, "$!pos"
    lt $I11, 0, rx1275_fail2581
    nqp_rxmark rx1275_bstack, rxsubrule1280_pass2593, -1, 0
  rxsubrule1280_pass2593:
    rx1275_cstack = rx1275_cur."!cursor_capture"($P11, "declarator")
    repr_get_attr_int rx1275_pos, $P11, rx1275_curclass, "$!pos"
    goto alt1279_end2591
  alt1279_12594:
    nqp_rxmark rx1275_bstack, alt1279_22596, rx1275_pos, 0
    repr_bind_attr_int rx1275_cur, rx1275_curclass, "$!pos", rx1275_pos
    $P11 = rx1275_cur."routine_def"()
    repr_get_attr_int $I11, $P11, rx1275_curclass, "$!pos"
    lt $I11, 0, rx1275_fail2581
    nqp_rxmark rx1275_bstack, rxsubrule1281_pass2595, -1, 0
  rxsubrule1281_pass2595:
    rx1275_cstack = rx1275_cur."!cursor_capture"($P11, "routine_def")
    repr_get_attr_int rx1275_pos, $P11, rx1275_curclass, "$!pos"
    goto alt1279_end2591
  alt1279_22596:
    repr_bind_attr_int rx1275_cur, rx1275_curclass, "$!pos", rx1275_pos
    $P11 = rx1275_cur."panic"("Malformed multi")
    repr_get_attr_int $I11, $P11, rx1275_curclass, "$!pos"
    lt $I11, 0, rx1275_fail2581
    repr_get_attr_int rx1275_pos, $P11, rx1275_curclass, "$!pos"
  alt1279_end2591:
    rx1275_cur."!cursor_pass"(rx1275_pos, "multi_declarator:sym<multi>", 'backtrack'=>1)
    .return (rx1275_cur)
  rx1275_restart2580:
    repr_get_attr_obj rx1275_cstack, rx1275_cur, rx1275_curclass, "$!cstack"
  rx1275_fail2581:
    unless rx1275_bstack, rx1275_done2579
    pop $I19, rx1275_bstack
    if_null rx1275_cstack, rx1275_cstack_done2584
    unless rx1275_cstack, rx1275_cstack_done2584
    dec $I19
    set $P11, rx1275_cstack[$I19]
  rx1275_cstack_done2584:
    pop rx1275_rep, rx1275_bstack
    pop rx1275_pos, rx1275_bstack
    pop $I19, rx1275_bstack
    lt rx1275_pos, -1, rx1275_done2579
    lt rx1275_pos, 0, rx1275_fail2581
    eq $I19, 0, rx1275_fail2581
    nqp_islist $I20, rx1275_cstack
    unless $I20, rx1275_jump2582
    elements $I18, rx1275_bstack
    le $I18, 0, rx1275_cut2583
    dec $I18
    set $I18, rx1275_bstack[$I18]
  rx1275_cut2583:
    assign rx1275_cstack, $I18
  rx1275_jump2582:
    jump $I19
  rx1275_done2579:
    rx1275_cur."!cursor_fail"()
    .return (rx1275_cur) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<proto>" :subid("cuid_127_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1133
    .param pmc _lex_param_0 
    .lex "$*MULTINESS", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    set self, _lex_param_0
    .local string rx1283_tgt
    .local int rx1283_pos
    .local int rx1283_off
    .local int rx1283_eos
    .local int rx1283_rep
    .local pmc rx1283_cur
    .local pmc rx1283_curclass
    .local pmc rx1283_bstack
    .local pmc rx1283_cstack
    (rx1283_cur, rx1283_tgt, rx1283_pos, rx1283_curclass, rx1283_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1283_cur
    length rx1283_eos, rx1283_tgt
    eq $I19, 1, rx1283_restart2600
    gt rx1283_pos, rx1283_eos, rx1283_fail2601
    repr_get_attr_int $I11, self, rx1283_curclass, "$!from"
    ne $I11, -1, rxscan1284_done2607
    goto rxscan1284_scan2606
  rxscan1284_loop2605:
    inc rx1283_pos
    gt rx1283_pos, rx1283_eos, rx1283_fail2601
    repr_bind_attr_int rx1283_cur, rx1283_curclass, "$!from", rx1283_pos
  rxscan1284_scan2606:
    nqp_rxmark rx1283_bstack, rxscan1284_loop2605, rx1283_pos, 0
  rxscan1284_done2607:
    repr_bind_attr_int rx1283_cur, rx1283_curclass, "$!pos", rx1283_pos
    store_lex unicode:"$\x{a2}", rx1283_cur
    box $P5002, "proto"
    set $P101, $P5002
    nqp_rxmark rx1283_bstack, rxcap1285_fail2609, rx1283_pos, 0
    add $I11, rx1283_pos, 5
    gt $I11, rx1283_eos, rx1283_fail2601
    substr $S10, rx1283_tgt, rx1283_pos, 5
    ne $S10, ucs4:"proto", rx1283_fail2601
    add rx1283_pos, 5
    nqp_rxpeek $I19, rx1283_bstack, rxcap1285_fail2609
    inc $I19
    set $I11, rx1283_bstack[$I19]
    repr_bind_attr_int rx1283_cur, rx1283_curclass, "$!pos", rx1283_pos
    $P11 = rx1283_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1283_pos)
    rx1283_cstack = rx1283_cur."!cursor_capture"($P11, "sym")
    goto rxcap1285_done2608
  rxcap1285_fail2609:
    goto rx1283_fail2601
  rxcap1285_done2608:
    repr_bind_attr_int rx1283_cur, rx1283_curclass, "$!pos", rx1283_pos
    $P11 = rx1283_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1283_curclass, "$!pos"
    lt $I11, 0, rx1283_fail2601
    repr_get_attr_int rx1283_pos, $P11, rx1283_curclass, "$!pos"
  alt1287_02612:
    nqp_rxmark rx1283_bstack, alt1287_12614, rx1283_pos, 0
    repr_bind_attr_int rx1283_cur, rx1283_curclass, "$!pos", rx1283_pos
    $P11 = rx1283_cur."declarator"()
    repr_get_attr_int $I11, $P11, rx1283_curclass, "$!pos"
    lt $I11, 0, rx1283_fail2601
    nqp_rxmark rx1283_bstack, rxsubrule1288_pass2613, -1, 0
  rxsubrule1288_pass2613:
    rx1283_cstack = rx1283_cur."!cursor_capture"($P11, "declarator")
    repr_get_attr_int rx1283_pos, $P11, rx1283_curclass, "$!pos"
    goto alt1287_end2611
  alt1287_12614:
    nqp_rxmark rx1283_bstack, alt1287_22616, rx1283_pos, 0
    repr_bind_attr_int rx1283_cur, rx1283_curclass, "$!pos", rx1283_pos
    $P11 = rx1283_cur."routine_def"()
    repr_get_attr_int $I11, $P11, rx1283_curclass, "$!pos"
    lt $I11, 0, rx1283_fail2601
    nqp_rxmark rx1283_bstack, rxsubrule1289_pass2615, -1, 0
  rxsubrule1289_pass2615:
    rx1283_cstack = rx1283_cur."!cursor_capture"($P11, "routine_def")
    repr_get_attr_int rx1283_pos, $P11, rx1283_curclass, "$!pos"
    goto alt1287_end2611
  alt1287_22616:
    repr_bind_attr_int rx1283_cur, rx1283_curclass, "$!pos", rx1283_pos
    $P11 = rx1283_cur."panic"("Malformed proto")
    repr_get_attr_int $I11, $P11, rx1283_curclass, "$!pos"
    lt $I11, 0, rx1283_fail2601
    repr_get_attr_int rx1283_pos, $P11, rx1283_curclass, "$!pos"
  alt1287_end2611:
    rx1283_cur."!cursor_pass"(rx1283_pos, "multi_declarator:sym<proto>", 'backtrack'=>1)
    .return (rx1283_cur)
  rx1283_restart2600:
    repr_get_attr_obj rx1283_cstack, rx1283_cur, rx1283_curclass, "$!cstack"
  rx1283_fail2601:
    unless rx1283_bstack, rx1283_done2599
    pop $I19, rx1283_bstack
    if_null rx1283_cstack, rx1283_cstack_done2604
    unless rx1283_cstack, rx1283_cstack_done2604
    dec $I19
    set $P11, rx1283_cstack[$I19]
  rx1283_cstack_done2604:
    pop rx1283_rep, rx1283_bstack
    pop rx1283_pos, rx1283_bstack
    pop $I19, rx1283_bstack
    lt rx1283_pos, -1, rx1283_done2599
    lt rx1283_pos, 0, rx1283_fail2601
    eq $I19, 0, rx1283_fail2601
    nqp_islist $I20, rx1283_cstack
    unless $I20, rx1283_jump2602
    elements $I18, rx1283_bstack
    le $I18, 0, rx1283_cut2603
    dec $I18
    set $I18, rx1283_bstack[$I18]
  rx1283_cut2603:
    assign rx1283_cstack, $I18
  rx1283_jump2602:
    jump $I19
  rx1283_done2599:
    rx1283_cur."!cursor_fail"()
    .return (rx1283_cur) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<null>" :subid("cuid_128_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1138
    .param pmc _lex_param_0 
    .lex "$*MULTINESS", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    set self, _lex_param_0
    .local string rx1291_tgt
    .local int rx1291_pos
    .local int rx1291_off
    .local int rx1291_eos
    .local int rx1291_rep
    .local pmc rx1291_cur
    .local pmc rx1291_curclass
    .local pmc rx1291_bstack
    .local pmc rx1291_cstack
    (rx1291_cur, rx1291_tgt, rx1291_pos, rx1291_curclass, rx1291_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1291_cur
    length rx1291_eos, rx1291_tgt
    eq $I19, 1, rx1291_restart2620
    gt rx1291_pos, rx1291_eos, rx1291_fail2621
    repr_get_attr_int $I11, self, rx1291_curclass, "$!from"
    ne $I11, -1, rxscan1292_done2627
    goto rxscan1292_scan2626
  rxscan1292_loop2625:
    inc rx1291_pos
    gt rx1291_pos, rx1291_eos, rx1291_fail2621
    repr_bind_attr_int rx1291_cur, rx1291_curclass, "$!from", rx1291_pos
  rxscan1292_scan2626:
    nqp_rxmark rx1291_bstack, rxscan1292_loop2625, rx1291_pos, 0
  rxscan1292_done2627:
    repr_bind_attr_int rx1291_cur, rx1291_curclass, "$!pos", rx1291_pos
    store_lex unicode:"$\x{a2}", rx1291_cur
    box $P5002, ""
    set $P101, $P5002
    repr_bind_attr_int rx1291_cur, rx1291_curclass, "$!pos", rx1291_pos
    $P11 = rx1291_cur."declarator"()
    repr_get_attr_int $I11, $P11, rx1291_curclass, "$!pos"
    lt $I11, 0, rx1291_fail2621
    nqp_rxmark rx1291_bstack, rxsubrule1293_pass2628, -1, 0
  rxsubrule1293_pass2628:
    rx1291_cstack = rx1291_cur."!cursor_capture"($P11, "declarator")
    repr_get_attr_int rx1291_pos, $P11, rx1291_curclass, "$!pos"
    rx1291_cur."!cursor_pass"(rx1291_pos, "multi_declarator:sym<null>", 'backtrack'=>1)
    .return (rx1291_cur)
  rx1291_restart2620:
    repr_get_attr_obj rx1291_cstack, rx1291_cur, rx1291_curclass, "$!cstack"
  rx1291_fail2621:
    unless rx1291_bstack, rx1291_done2619
    pop $I19, rx1291_bstack
    if_null rx1291_cstack, rx1291_cstack_done2624
    unless rx1291_cstack, rx1291_cstack_done2624
    dec $I19
    set $P11, rx1291_cstack[$I19]
  rx1291_cstack_done2624:
    pop rx1291_rep, rx1291_bstack
    pop rx1291_pos, rx1291_bstack
    pop $I19, rx1291_bstack
    lt rx1291_pos, -1, rx1291_done2619
    lt rx1291_pos, 0, rx1291_fail2621
    eq $I19, 0, rx1291_fail2621
    nqp_islist $I20, rx1291_cstack
    unless $I20, rx1291_jump2622
    elements $I18, rx1291_bstack
    le $I18, 0, rx1291_cut2623
    dec $I18
    set $I18, rx1291_bstack[$I18]
  rx1291_cut2623:
    assign rx1291_cstack, $I18
  rx1291_jump2622:
    jump $I19
  rx1291_done2619:
    rx1291_cur."!cursor_fail"()
    .return (rx1291_cur) 
.end
.HLL "nqp"
.namespace []
.sub "signature" :subid("cuid_129_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1143
    .param pmc _lex_param_0 
    .const 'Sub' $P5005 = 'cuid_407_1360432459.413' 
    capture_lex $P5005 
    .const 'Sub' $P5005 = 'cuid_130_1360432459.413' 
    capture_lex $P5005 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1294_tgt
    .local int rx1294_pos
    .local int rx1294_off
    .local int rx1294_eos
    .local int rx1294_rep
    .local pmc rx1294_cur
    .local pmc rx1294_curclass
    .local pmc rx1294_bstack
    .local pmc rx1294_cstack
    (rx1294_cur, rx1294_tgt, rx1294_pos, rx1294_curclass, rx1294_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1294_cur
    length rx1294_eos, rx1294_tgt
    eq $I19, 1, rx1294_restart2631
    gt rx1294_pos, rx1294_eos, rx1294_fail2632
    repr_get_attr_int $I11, self, rx1294_curclass, "$!from"
    ne $I11, -1, rxscan1295_done2638
    goto rxscan1295_scan2637
  rxscan1295_loop2636:
    inc rx1294_pos
    gt rx1294_pos, rx1294_eos, rx1294_fail2632
    repr_bind_attr_int rx1294_cur, rx1294_curclass, "$!from", rx1294_pos
  rxscan1295_scan2637:
    nqp_rxmark rx1294_bstack, rxscan1295_loop2636, rx1294_pos, 0
  rxscan1295_done2638:
    nqp_rxmark rx1294_bstack, rxquantr1296_done2640, rx1294_pos, 0
  rxquantr1296_loop2639:
    repr_bind_attr_int rx1294_cur, rx1294_curclass, "$!pos", rx1294_pos
    store_lex unicode:"$\x{a2}", rx1294_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_407_1360432459.413' 
    capture_lex $P5002
    $P5003 = $P5002()
    unless $P5003, rx1294_fail2632
    repr_bind_attr_int rx1294_cur, rx1294_curclass, "$!pos", rx1294_pos
    $P11 = rx1294_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1294_curclass, "$!pos"
    lt $I11, 0, rx1294_fail2632
    repr_get_attr_int rx1294_pos, $P11, rx1294_curclass, "$!pos"
    repr_bind_attr_int rx1294_cur, rx1294_curclass, "$!pos", rx1294_pos
    $P11 = rx1294_cur."parameter"()
    repr_get_attr_int $I11, $P11, rx1294_curclass, "$!pos"
    lt $I11, 0, rx1294_fail2632
    nqp_rxmark rx1294_bstack, rxsubrule1301_pass2647, -1, 0
  rxsubrule1301_pass2647:
    rx1294_cstack = rx1294_cur."!cursor_capture"($P11, "invocant")
    repr_get_attr_int rx1294_pos, $P11, rx1294_curclass, "$!pos"
    repr_bind_attr_int rx1294_cur, rx1294_curclass, "$!pos", rx1294_pos
    $P11 = rx1294_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1294_curclass, "$!pos"
    lt $I11, 0, rx1294_fail2632
    repr_get_attr_int rx1294_pos, $P11, rx1294_curclass, "$!pos"
    add $I11, rx1294_pos, 1
    gt $I11, rx1294_eos, rx1294_fail2632
    substr $S10, rx1294_tgt, rx1294_pos, 1
    ne $S10, ucs4:":", rx1294_fail2632
    add rx1294_pos, 1
    nqp_rxpeek $I19, rx1294_bstack, rxquantr1296_done2640
    inc $I19
    inc $I19
    set rx1294_rep, rx1294_bstack[$I19]
    nqp_rxcommit rx1294_bstack, rxquantr1296_done2640
    inc rx1294_rep
  rxquantr1296_done2640:
    nqp_rxmark rx1294_bstack, rxquantr1303_done2650, rx1294_pos, 0
  rxquantr1303_loop2649:
    nqp_rxmark rx1294_bstack, rxquantr1304_done2652, rx1294_pos, 0
  rxquantr1304_loop2651:
    repr_bind_attr_int rx1294_cur, rx1294_curclass, "$!pos", rx1294_pos
    $P11 = rx1294_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1294_curclass, "$!pos"
    lt $I11, 0, rx1294_fail2632
    repr_get_attr_int rx1294_pos, $P11, rx1294_curclass, "$!pos"
    repr_bind_attr_int rx1294_cur, rx1294_curclass, "$!pos", rx1294_pos
    $P11 = rx1294_cur."parameter"()
    repr_get_attr_int $I11, $P11, rx1294_curclass, "$!pos"
    lt $I11, 0, rx1294_fail2632
    nqp_rxmark rx1294_bstack, rxsubrule1306_pass2654, -1, 0
  rxsubrule1306_pass2654:
    rx1294_cstack = rx1294_cur."!cursor_capture"($P11, "parameter")
    repr_get_attr_int rx1294_pos, $P11, rx1294_curclass, "$!pos"
    repr_bind_attr_int rx1294_cur, rx1294_curclass, "$!pos", rx1294_pos
    $P11 = rx1294_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1294_curclass, "$!pos"
    lt $I11, 0, rx1294_fail2632
    repr_get_attr_int rx1294_pos, $P11, rx1294_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1308_02657
    nqp_push_label $P11, alt1308_12658
    nqp_rxmark rx1294_bstack, alt1308_end2656, -1, 0
    rx1294_cur."!alt"(rx1294_pos, "alt_nfa__26_1360432461.642", $P11)
    goto rx1294_fail2632
  alt1308_02657:
    add $I11, rx1294_pos, 1
    gt $I11, rx1294_eos, rx1294_fail2632
    substr $S10, rx1294_tgt, rx1294_pos, 1
    ne $S10, ucs4:",", rx1294_fail2632
    add rx1294_pos, 1
    goto alt1308_end2656
  alt1308_12658:
    .const 'Sub' $P5004 = 'cuid_130_1360432459.413' 
    capture_lex $P5004
    repr_bind_attr_int rx1294_cur, rx1294_curclass, "$!pos", rx1294_pos
    $P11 = rx1294_cur."before"($P5004)
    repr_get_attr_int $I11, $P11, rx1294_curclass, "$!pos"
    lt $I11, 0, rx1294_fail2632
    nqp_rxmark rx1294_bstack, rxsubrule1313_pass2674, -1, 0
  rxsubrule1313_pass2674:
    rx1294_cstack = rx1294_cur."!cursor_capture"($P11, "before")
    repr_get_attr_int rx1294_pos, $P11, rx1294_curclass, "$!pos"
    goto alt1308_end2656
  alt1308_end2656:
    nqp_rxcommit rx1294_bstack, alt1308_end2656
    nqp_rxpeek $I19, rx1294_bstack, rxquantr1304_done2652
    inc $I19
    inc $I19
    set rx1294_rep, rx1294_bstack[$I19]
    nqp_rxcommit rx1294_bstack, rxquantr1304_done2652
    inc rx1294_rep
    nqp_rxmark rx1294_bstack, rxquantr1304_done2652, rx1294_pos, rx1294_rep
    goto rxquantr1304_loop2651
  rxquantr1304_done2652:
    nqp_rxpeek $I19, rx1294_bstack, rxquantr1303_done2650
    inc $I19
    inc $I19
    set rx1294_rep, rx1294_bstack[$I19]
    nqp_rxcommit rx1294_bstack, rxquantr1303_done2650
    inc rx1294_rep
  rxquantr1303_done2650:
    rx1294_cur."!cursor_pass"(rx1294_pos, "signature", 'backtrack'=>1)
    .return (rx1294_cur)
  rx1294_restart2631:
    repr_get_attr_obj rx1294_cstack, rx1294_cur, rx1294_curclass, "$!cstack"
  rx1294_fail2632:
    unless rx1294_bstack, rx1294_done2630
    pop $I19, rx1294_bstack
    if_null rx1294_cstack, rx1294_cstack_done2635
    unless rx1294_cstack, rx1294_cstack_done2635
    dec $I19
    set $P11, rx1294_cstack[$I19]
  rx1294_cstack_done2635:
    pop rx1294_rep, rx1294_bstack
    pop rx1294_pos, rx1294_bstack
    pop $I19, rx1294_bstack
    lt rx1294_pos, -1, rx1294_done2630
    lt rx1294_pos, 0, rx1294_fail2632
    eq $I19, 0, rx1294_fail2632
    nqp_islist $I20, rx1294_cstack
    unless $I20, rx1294_jump2633
    elements $I18, rx1294_bstack
    le $I18, 0, rx1294_cut2634
    dec $I18
    set $I18, rx1294_bstack[$I18]
  rx1294_cut2634:
    assign rx1294_cstack, $I18
  rx1294_jump2633:
    jump $I19
  rx1294_done2630:
    rx1294_cur."!cursor_fail"()
    .return (rx1294_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_407_1360432459.413") :anon :lex :outer("cuid_129_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1144
    .local pmc fb_tmp_253 
    find_dynamic_lex $P5001, "$*INVOCANT_OK"
    unless_null $P5001, fallback2641
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5002, $P5003
    set fb_tmp_253, $P5002
    repr_defined $I5001, fb_tmp_253
    unless $I5001 goto if1297_else2642 
    set $P5004, fb_tmp_253["$INVOCANT_OK"]
    set $P5006, $P5004
    goto if1297_end2643
  if1297_else2642:
    null $P5005
    set $P5006, $P5005
  if1297_end2643:
    unless_null $P5006, vivi_12982644
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_12982644:
    unless_null $P5006, vivi_12992645
    die "Contextual $*INVOCANT_OK not found"
    box $P5008, "Contextual $*INVOCANT_OK not found"
    set $P5006, $P5008
  vivi_12992645:
    set $P5001, $P5006
  fallback2641:
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_130_1360432459.413") :anon :lex :outer("cuid_129_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local string rx1309_tgt
    .local int rx1309_pos
    .local int rx1309_off
    .local int rx1309_eos
    .local int rx1309_rep
    .local pmc rx1309_cur
    .local pmc rx1309_curclass
    .local pmc rx1309_bstack
    .local pmc rx1309_cstack
    (rx1309_cur, rx1309_tgt, rx1309_pos, rx1309_curclass, rx1309_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1309_cur
    length rx1309_eos, rx1309_tgt
    eq $I19, 1, rx1309_restart2661
    gt rx1309_pos, rx1309_eos, rx1309_fail2662
    repr_get_attr_int $I11, self, rx1309_curclass, "$!from"
    ne $I11, -1, rxscan1310_done2668
    goto rxscan1310_scan2667
  rxscan1310_loop2666:
    inc rx1309_pos
    gt rx1309_pos, rx1309_eos, rx1309_fail2662
    repr_bind_attr_int rx1309_cur, rx1309_curclass, "$!from", rx1309_pos
  rxscan1310_scan2667:
    nqp_rxmark rx1309_bstack, rxscan1310_loop2666, rx1309_pos, 0
  rxscan1310_done2668:
    nqp_rxmark rx1309_bstack, rxquantr1311_done2670, rx1309_pos, 0
  rxquantr1311_loop2669:
    ge rx1309_pos, rx1309_eos, rx1309_fail2662
    is_cclass $I11, .CCLASS_WHITESPACE, rx1309_tgt, rx1309_pos
    unless $I11, rx1309_fail2662
    add rx1309_pos, 1
    nqp_rxpeek $I19, rx1309_bstack, rxquantr1311_done2670
    inc $I19
    inc $I19
    set rx1309_rep, rx1309_bstack[$I19]
    nqp_rxcommit rx1309_bstack, rxquantr1311_done2670
    inc rx1309_rep
    nqp_rxmark rx1309_bstack, rxquantr1311_done2670, rx1309_pos, rx1309_rep
    goto rxquantr1311_loop2669
  rxquantr1311_done2670:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1312_02672
    nqp_push_label $P11, alt1312_12673
    nqp_rxmark rx1309_bstack, alt1312_end2671, -1, 0
    rx1309_cur."!alt"(rx1309_pos, "alt_nfa__25_1360432461.637", $P11)
    goto rx1309_fail2662
  alt1312_02672:
    add $I11, rx1309_pos, 1
    gt $I11, rx1309_eos, rx1309_fail2662
    substr $S10, rx1309_tgt, rx1309_pos, 1
    ne $S10, ucs4:")", rx1309_fail2662
    add rx1309_pos, 1
    goto alt1312_end2671
  alt1312_12673:
    add $I11, rx1309_pos, 1
    gt $I11, rx1309_eos, rx1309_fail2662
    substr $S10, rx1309_tgt, rx1309_pos, 1
    ne $S10, ucs4:"{", rx1309_fail2662
    add rx1309_pos, 1
    goto alt1312_end2671
  alt1312_end2671:
    nqp_rxcommit rx1309_bstack, alt1312_end2671
    rx1309_cur."!cursor_pass"(rx1309_pos, 'backtrack'=>1)
    .return (rx1309_cur)
  rx1309_restart2661:
    repr_get_attr_obj rx1309_cstack, rx1309_cur, rx1309_curclass, "$!cstack"
  rx1309_fail2662:
    unless rx1309_bstack, rx1309_done2660
    pop $I19, rx1309_bstack
    if_null rx1309_cstack, rx1309_cstack_done2665
    unless rx1309_cstack, rx1309_cstack_done2665
    dec $I19
    set $P11, rx1309_cstack[$I19]
  rx1309_cstack_done2665:
    pop rx1309_rep, rx1309_bstack
    pop rx1309_pos, rx1309_bstack
    pop $I19, rx1309_bstack
    lt rx1309_pos, -1, rx1309_done2660
    lt rx1309_pos, 0, rx1309_fail2662
    eq $I19, 0, rx1309_fail2662
    nqp_islist $I20, rx1309_cstack
    unless $I20, rx1309_jump2663
    elements $I18, rx1309_bstack
    le $I18, 0, rx1309_cut2664
    dec $I18
    set $I18, rx1309_bstack[$I18]
  rx1309_cut2664:
    assign rx1309_cstack, $I18
  rx1309_jump2663:
    jump $I19
  rx1309_done2660:
    rx1309_cur."!cursor_fail"()
    .return (rx1309_cur) 
.end
.HLL "nqp"
.namespace []
.sub "parameter" :subid("cuid_131_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1148
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1314_tgt
    .local int rx1314_pos
    .local int rx1314_off
    .local int rx1314_eos
    .local int rx1314_rep
    .local pmc rx1314_cur
    .local pmc rx1314_curclass
    .local pmc rx1314_bstack
    .local pmc rx1314_cstack
    (rx1314_cur, rx1314_tgt, rx1314_pos, rx1314_curclass, rx1314_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1314_cur
    length rx1314_eos, rx1314_tgt
    eq $I19, 1, rx1314_restart2677
    gt rx1314_pos, rx1314_eos, rx1314_fail2678
    repr_get_attr_int $I11, self, rx1314_curclass, "$!from"
    ne $I11, -1, rxscan1315_done2684
    goto rxscan1315_scan2683
  rxscan1315_loop2682:
    inc rx1314_pos
    gt rx1314_pos, rx1314_eos, rx1314_fail2678
    repr_bind_attr_int rx1314_cur, rx1314_curclass, "$!from", rx1314_pos
  rxscan1315_scan2683:
    nqp_rxmark rx1314_bstack, rxscan1315_loop2682, rx1314_pos, 0
  rxscan1315_done2684:
    nqp_rxmark rx1314_bstack, rxquantr1316_done2686, rx1314_pos, 0
  rxquantr1316_loop2685:
    repr_bind_attr_int rx1314_cur, rx1314_curclass, "$!pos", rx1314_pos
    $P11 = rx1314_cur."typename"()
    repr_get_attr_int $I11, $P11, rx1314_curclass, "$!pos"
    lt $I11, 0, rx1314_fail2678
    nqp_rxmark rx1314_bstack, rxsubrule1317_pass2687, -1, 0
  rxsubrule1317_pass2687:
    rx1314_cstack = rx1314_cur."!cursor_capture"($P11, "typename")
    repr_get_attr_int rx1314_pos, $P11, rx1314_curclass, "$!pos"
    nqp_rxmark rx1314_bstack, rxquantr1318_done2689, rx1314_pos, 0
  rxquantr1318_loop2688:
    add $I11, rx1314_pos, 1
    gt $I11, rx1314_eos, rx1314_fail2678
    substr $S10, rx1314_tgt, rx1314_pos, 1
    ne $S10, ucs4:":", rx1314_fail2678
    add rx1314_pos, 1
    nqp_rxmark rx1314_bstack, rxcap1319_fail2691, rx1314_pos, 0
    ge rx1314_pos, rx1314_eos, rx1314_fail2678
    substr $S11, rx1314_tgt, rx1314_pos, 1
    index $I11, ucs4:"_DU", $S11
    lt $I11, 0, rx1314_fail2678
    inc rx1314_pos
    nqp_rxpeek $I19, rx1314_bstack, rxcap1319_fail2691
    inc $I19
    set $I11, rx1314_bstack[$I19]
    repr_bind_attr_int rx1314_cur, rx1314_curclass, "$!pos", rx1314_pos
    $P11 = rx1314_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1314_pos)
    rx1314_cstack = rx1314_cur."!cursor_capture"($P11, "definedness")
    goto rxcap1319_done2690
  rxcap1319_fail2691:
    goto rx1314_fail2678
  rxcap1319_done2690:
    nqp_rxpeek $I19, rx1314_bstack, rxquantr1318_done2689
    inc $I19
    inc $I19
    set rx1314_rep, rx1314_bstack[$I19]
    nqp_rxcommit rx1314_bstack, rxquantr1318_done2689
    inc rx1314_rep
  rxquantr1318_done2689:
    repr_bind_attr_int rx1314_cur, rx1314_curclass, "$!pos", rx1314_pos
    $P11 = rx1314_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1314_curclass, "$!pos"
    lt $I11, 0, rx1314_fail2678
    repr_get_attr_int rx1314_pos, $P11, rx1314_curclass, "$!pos"
    nqp_rxpeek $I19, rx1314_bstack, rxquantr1316_done2686
    inc $I19
    inc $I19
    set rx1314_rep, rx1314_bstack[$I19]
    nqp_rxcommit rx1314_bstack, rxquantr1316_done2686
    inc rx1314_rep
    nqp_rxmark rx1314_bstack, rxquantr1316_done2686, rx1314_pos, rx1314_rep
    goto rxquantr1316_loop2685
  rxquantr1316_done2686:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1321_02694
    nqp_push_label $P11, alt1321_12698
    nqp_rxmark rx1314_bstack, alt1321_end2693, -1, 0
    rx1314_cur."!alt"(rx1314_pos, "alt_nfa__29_1360432461.665", $P11)
    goto rx1314_fail2678
  alt1321_02694:
    nqp_rxmark rx1314_bstack, rxcap1322_fail2696, rx1314_pos, 0
    add $I11, rx1314_pos, 1
    gt $I11, rx1314_eos, rx1314_fail2678
    substr $S10, rx1314_tgt, rx1314_pos, 1
    ne $S10, ucs4:"*", rx1314_fail2678
    add rx1314_pos, 1
    nqp_rxpeek $I19, rx1314_bstack, rxcap1322_fail2696
    inc $I19
    set $I11, rx1314_bstack[$I19]
    repr_bind_attr_int rx1314_cur, rx1314_curclass, "$!pos", rx1314_pos
    $P11 = rx1314_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1314_pos)
    rx1314_cstack = rx1314_cur."!cursor_capture"($P11, "quant")
    goto rxcap1322_done2695
  rxcap1322_fail2696:
    goto rx1314_fail2678
  rxcap1322_done2695:
    repr_bind_attr_int rx1314_cur, rx1314_curclass, "$!pos", rx1314_pos
    $P11 = rx1314_cur."param_var"()
    repr_get_attr_int $I11, $P11, rx1314_curclass, "$!pos"
    lt $I11, 0, rx1314_fail2678
    nqp_rxmark rx1314_bstack, rxsubrule1323_pass2697, -1, 0
  rxsubrule1323_pass2697:
    rx1314_cstack = rx1314_cur."!cursor_capture"($P11, "param_var")
    repr_get_attr_int rx1314_pos, $P11, rx1314_curclass, "$!pos"
    goto alt1321_end2693
  alt1321_12698:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1324_02700
    nqp_push_label $P11, alt1324_12702
    nqp_rxmark rx1314_bstack, alt1324_end2699, -1, 0
    rx1314_cur."!alt"(rx1314_pos, "alt_nfa__27_1360432461.664", $P11)
    goto rx1314_fail2678
  alt1324_02700:
    repr_bind_attr_int rx1314_cur, rx1314_curclass, "$!pos", rx1314_pos
    $P11 = rx1314_cur."param_var"()
    repr_get_attr_int $I11, $P11, rx1314_curclass, "$!pos"
    lt $I11, 0, rx1314_fail2678
    nqp_rxmark rx1314_bstack, rxsubrule1325_pass2701, -1, 0
  rxsubrule1325_pass2701:
    rx1314_cstack = rx1314_cur."!cursor_capture"($P11, "param_var")
    repr_get_attr_int rx1314_pos, $P11, rx1314_curclass, "$!pos"
    goto alt1324_end2699
  alt1324_12702:
    repr_bind_attr_int rx1314_cur, rx1314_curclass, "$!pos", rx1314_pos
    $P11 = rx1314_cur."named_param"()
    repr_get_attr_int $I11, $P11, rx1314_curclass, "$!pos"
    lt $I11, 0, rx1314_fail2678
    nqp_rxmark rx1314_bstack, rxsubrule1326_pass2703, -1, 0
  rxsubrule1326_pass2703:
    rx1314_cstack = rx1314_cur."!cursor_capture"($P11, "named_param")
    repr_get_attr_int rx1314_pos, $P11, rx1314_curclass, "$!pos"
    goto alt1324_end2699
  alt1324_end2699:
    nqp_rxcommit rx1314_bstack, alt1324_end2699
    nqp_rxmark rx1314_bstack, rxcap1327_fail2705, rx1314_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1328_02707
    nqp_push_label $P11, alt1328_12708
    nqp_push_label $P11, alt1328_22709
    nqp_rxmark rx1314_bstack, alt1328_end2706, -1, 0
    rx1314_cur."!alt"(rx1314_pos, "alt_nfa__28_1360432461.665", $P11)
    goto rx1314_fail2678
  alt1328_02707:
    add $I11, rx1314_pos, 1
    gt $I11, rx1314_eos, rx1314_fail2678
    substr $S10, rx1314_tgt, rx1314_pos, 1
    ne $S10, ucs4:"?", rx1314_fail2678
    add rx1314_pos, 1
    goto alt1328_end2706
  alt1328_12708:
    add $I11, rx1314_pos, 1
    gt $I11, rx1314_eos, rx1314_fail2678
    substr $S10, rx1314_tgt, rx1314_pos, 1
    ne $S10, ucs4:"!", rx1314_fail2678
    add rx1314_pos, 1
    goto alt1328_end2706
  alt1328_22709:
    goto alt1328_end2706
  alt1328_end2706:
    nqp_rxcommit rx1314_bstack, alt1328_end2706
    nqp_rxpeek $I19, rx1314_bstack, rxcap1327_fail2705
    inc $I19
    set $I11, rx1314_bstack[$I19]
    repr_bind_attr_int rx1314_cur, rx1314_curclass, "$!pos", rx1314_pos
    $P11 = rx1314_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1314_pos)
    rx1314_cstack = rx1314_cur."!cursor_capture"($P11, "quant")
    goto rxcap1327_done2704
  rxcap1327_fail2705:
    goto rx1314_fail2678
  rxcap1327_done2704:
    goto alt1321_end2693
  alt1321_end2693:
    nqp_rxcommit rx1314_bstack, alt1321_end2693
    nqp_rxmark rx1314_bstack, rxquantr1330_done2712, rx1314_pos, 0
  rxquantr1330_loop2711:
    repr_bind_attr_int rx1314_cur, rx1314_curclass, "$!pos", rx1314_pos
    $P11 = rx1314_cur."default_value"()
    repr_get_attr_int $I11, $P11, rx1314_curclass, "$!pos"
    lt $I11, 0, rx1314_fail2678
    goto rxsubrule1331_pass2713
  rxsubrule1331_back2714:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1314_curclass, "$!pos"
    lt $I11, 0, rx1314_fail2678
  rxsubrule1331_pass2713:
    rx1314_cstack = rx1314_cur."!cursor_capture"($P11, "default_value")
    set_addr $I11, rxsubrule1331_back2714
    push rx1314_bstack, $I11
    push rx1314_bstack, 0
    push rx1314_bstack, rx1314_pos
    elements $I11, rx1314_cstack
    push rx1314_bstack, $I11
    repr_get_attr_int rx1314_pos, $P11, rx1314_curclass, "$!pos"
    nqp_rxpeek $I19, rx1314_bstack, rxquantr1330_done2712
    inc $I19
    inc $I19
    set rx1314_rep, rx1314_bstack[$I19]
    nqp_rxcommit rx1314_bstack, rxquantr1330_done2712
    inc rx1314_rep
  rxquantr1330_done2712:
    rx1314_cur."!cursor_pass"(rx1314_pos, "parameter", 'backtrack'=>1)
    .return (rx1314_cur)
  rx1314_restart2677:
    repr_get_attr_obj rx1314_cstack, rx1314_cur, rx1314_curclass, "$!cstack"
  rx1314_fail2678:
    unless rx1314_bstack, rx1314_done2676
    pop $I19, rx1314_bstack
    if_null rx1314_cstack, rx1314_cstack_done2681
    unless rx1314_cstack, rx1314_cstack_done2681
    dec $I19
    set $P11, rx1314_cstack[$I19]
  rx1314_cstack_done2681:
    pop rx1314_rep, rx1314_bstack
    pop rx1314_pos, rx1314_bstack
    pop $I19, rx1314_bstack
    lt rx1314_pos, -1, rx1314_done2676
    lt rx1314_pos, 0, rx1314_fail2678
    eq $I19, 0, rx1314_fail2678
    nqp_islist $I20, rx1314_cstack
    unless $I20, rx1314_jump2679
    elements $I18, rx1314_bstack
    le $I18, 0, rx1314_cut2680
    dec $I18
    set $I18, rx1314_bstack[$I18]
  rx1314_cut2680:
    assign rx1314_cstack, $I18
  rx1314_jump2679:
    jump $I19
  rx1314_done2676:
    rx1314_cur."!cursor_fail"()
    .return (rx1314_cur) 
.end
.HLL "nqp"
.namespace []
.sub "param_var" :subid("cuid_132_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1157
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1332_tgt
    .local int rx1332_pos
    .local int rx1332_off
    .local int rx1332_eos
    .local int rx1332_rep
    .local pmc rx1332_cur
    .local pmc rx1332_curclass
    .local pmc rx1332_bstack
    .local pmc rx1332_cstack
    (rx1332_cur, rx1332_tgt, rx1332_pos, rx1332_curclass, rx1332_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1332_cur
    length rx1332_eos, rx1332_tgt
    eq $I19, 1, rx1332_restart2717
    gt rx1332_pos, rx1332_eos, rx1332_fail2718
    repr_get_attr_int $I11, self, rx1332_curclass, "$!from"
    ne $I11, -1, rxscan1333_done2724
    goto rxscan1333_scan2723
  rxscan1333_loop2722:
    inc rx1332_pos
    gt rx1332_pos, rx1332_eos, rx1332_fail2718
    repr_bind_attr_int rx1332_cur, rx1332_curclass, "$!from", rx1332_pos
  rxscan1333_scan2723:
    nqp_rxmark rx1332_bstack, rxscan1333_loop2722, rx1332_pos, 0
  rxscan1333_done2724:
    repr_bind_attr_int rx1332_cur, rx1332_curclass, "$!pos", rx1332_pos
    $P11 = rx1332_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx1332_curclass, "$!pos"
    lt $I11, 0, rx1332_fail2718
    nqp_rxmark rx1332_bstack, rxsubrule1334_pass2725, -1, 0
  rxsubrule1334_pass2725:
    rx1332_cstack = rx1332_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx1332_pos, $P11, rx1332_curclass, "$!pos"
    nqp_rxmark rx1332_bstack, rxquantr1335_done2727, rx1332_pos, 0
  rxquantr1335_loop2726:
    repr_bind_attr_int rx1332_cur, rx1332_curclass, "$!pos", rx1332_pos
    $P11 = rx1332_cur."twigil"()
    repr_get_attr_int $I11, $P11, rx1332_curclass, "$!pos"
    lt $I11, 0, rx1332_fail2718
    goto rxsubrule1336_pass2728
  rxsubrule1336_back2729:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1332_curclass, "$!pos"
    lt $I11, 0, rx1332_fail2718
  rxsubrule1336_pass2728:
    rx1332_cstack = rx1332_cur."!cursor_capture"($P11, "twigil")
    set_addr $I11, rxsubrule1336_back2729
    push rx1332_bstack, $I11
    push rx1332_bstack, 0
    push rx1332_bstack, rx1332_pos
    elements $I11, rx1332_cstack
    push rx1332_bstack, $I11
    repr_get_attr_int rx1332_pos, $P11, rx1332_curclass, "$!pos"
    nqp_rxpeek $I19, rx1332_bstack, rxquantr1335_done2727
    inc $I19
    inc $I19
    set rx1332_rep, rx1332_bstack[$I19]
    nqp_rxcommit rx1332_bstack, rxquantr1335_done2727
    inc rx1332_rep
  rxquantr1335_done2727:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1337_02731
    nqp_push_label $P11, alt1337_12733
    nqp_rxmark rx1332_bstack, alt1337_end2730, -1, 0
    rx1332_cur."!alt"(rx1332_pos, "alt_nfa__30_1360432461.674", $P11)
    goto rx1332_fail2718
  alt1337_02731:
    repr_bind_attr_int rx1332_cur, rx1332_curclass, "$!pos", rx1332_pos
    $P11 = rx1332_cur."ident"()
    repr_get_attr_int $I11, $P11, rx1332_curclass, "$!pos"
    lt $I11, 0, rx1332_fail2718
    nqp_rxmark rx1332_bstack, rxsubrule1338_pass2732, -1, 0
  rxsubrule1338_pass2732:
    rx1332_cstack = rx1332_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx1332_pos, $P11, rx1332_curclass, "$!pos"
    goto alt1337_end2730
  alt1337_12733:
    nqp_rxmark rx1332_bstack, rxcap1339_fail2735, rx1332_pos, 0
    ge rx1332_pos, rx1332_eos, rx1332_fail2718
    substr $S11, rx1332_tgt, rx1332_pos, 1
    index $I11, ucs4:"/!", $S11
    lt $I11, 0, rx1332_fail2718
    inc rx1332_pos
    nqp_rxpeek $I19, rx1332_bstack, rxcap1339_fail2735
    inc $I19
    set $I11, rx1332_bstack[$I19]
    repr_bind_attr_int rx1332_cur, rx1332_curclass, "$!pos", rx1332_pos
    $P11 = rx1332_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1332_pos)
    rx1332_cstack = rx1332_cur."!cursor_capture"($P11, "name")
    goto rxcap1339_done2734
  rxcap1339_fail2735:
    goto rx1332_fail2718
  rxcap1339_done2734:
    goto alt1337_end2730
  alt1337_end2730:
    nqp_rxcommit rx1332_bstack, alt1337_end2730
    rx1332_cur."!cursor_pass"(rx1332_pos, "param_var", 'backtrack'=>1)
    .return (rx1332_cur)
  rx1332_restart2717:
    repr_get_attr_obj rx1332_cstack, rx1332_cur, rx1332_curclass, "$!cstack"
  rx1332_fail2718:
    unless rx1332_bstack, rx1332_done2716
    pop $I19, rx1332_bstack
    if_null rx1332_cstack, rx1332_cstack_done2721
    unless rx1332_cstack, rx1332_cstack_done2721
    dec $I19
    set $P11, rx1332_cstack[$I19]
  rx1332_cstack_done2721:
    pop rx1332_rep, rx1332_bstack
    pop rx1332_pos, rx1332_bstack
    pop $I19, rx1332_bstack
    lt rx1332_pos, -1, rx1332_done2716
    lt rx1332_pos, 0, rx1332_fail2718
    eq $I19, 0, rx1332_fail2718
    nqp_islist $I20, rx1332_cstack
    unless $I20, rx1332_jump2719
    elements $I18, rx1332_bstack
    le $I18, 0, rx1332_cut2720
    dec $I18
    set $I18, rx1332_bstack[$I18]
  rx1332_cut2720:
    assign rx1332_cstack, $I18
  rx1332_jump2719:
    jump $I19
  rx1332_done2716:
    rx1332_cur."!cursor_fail"()
    .return (rx1332_cur) 
.end
.HLL "nqp"
.namespace []
.sub "named_param" :subid("cuid_133_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1162
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1340_tgt
    .local int rx1340_pos
    .local int rx1340_off
    .local int rx1340_eos
    .local int rx1340_rep
    .local pmc rx1340_cur
    .local pmc rx1340_curclass
    .local pmc rx1340_bstack
    .local pmc rx1340_cstack
    (rx1340_cur, rx1340_tgt, rx1340_pos, rx1340_curclass, rx1340_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1340_cur
    length rx1340_eos, rx1340_tgt
    eq $I19, 1, rx1340_restart2738
    gt rx1340_pos, rx1340_eos, rx1340_fail2739
    repr_get_attr_int $I11, self, rx1340_curclass, "$!from"
    ne $I11, -1, rxscan1341_done2745
    goto rxscan1341_scan2744
  rxscan1341_loop2743:
    inc rx1340_pos
    gt rx1340_pos, rx1340_eos, rx1340_fail2739
    repr_bind_attr_int rx1340_cur, rx1340_curclass, "$!from", rx1340_pos
  rxscan1341_scan2744:
    nqp_rxmark rx1340_bstack, rxscan1341_loop2743, rx1340_pos, 0
  rxscan1341_done2745:
    add $I11, rx1340_pos, 1
    gt $I11, rx1340_eos, rx1340_fail2739
    substr $S10, rx1340_tgt, rx1340_pos, 1
    ne $S10, ucs4:":", rx1340_fail2739
    add rx1340_pos, 1
    repr_bind_attr_int rx1340_cur, rx1340_curclass, "$!pos", rx1340_pos
    $P11 = rx1340_cur."param_var"()
    repr_get_attr_int $I11, $P11, rx1340_curclass, "$!pos"
    lt $I11, 0, rx1340_fail2739
    nqp_rxmark rx1340_bstack, rxsubrule1342_pass2746, -1, 0
  rxsubrule1342_pass2746:
    rx1340_cstack = rx1340_cur."!cursor_capture"($P11, "param_var")
    repr_get_attr_int rx1340_pos, $P11, rx1340_curclass, "$!pos"
    rx1340_cur."!cursor_pass"(rx1340_pos, "named_param", 'backtrack'=>1)
    .return (rx1340_cur)
  rx1340_restart2738:
    repr_get_attr_obj rx1340_cstack, rx1340_cur, rx1340_curclass, "$!cstack"
  rx1340_fail2739:
    unless rx1340_bstack, rx1340_done2737
    pop $I19, rx1340_bstack
    if_null rx1340_cstack, rx1340_cstack_done2742
    unless rx1340_cstack, rx1340_cstack_done2742
    dec $I19
    set $P11, rx1340_cstack[$I19]
  rx1340_cstack_done2742:
    pop rx1340_rep, rx1340_bstack
    pop rx1340_pos, rx1340_bstack
    pop $I19, rx1340_bstack
    lt rx1340_pos, -1, rx1340_done2737
    lt rx1340_pos, 0, rx1340_fail2739
    eq $I19, 0, rx1340_fail2739
    nqp_islist $I20, rx1340_cstack
    unless $I20, rx1340_jump2740
    elements $I18, rx1340_bstack
    le $I18, 0, rx1340_cut2741
    dec $I18
    set $I18, rx1340_bstack[$I18]
  rx1340_cut2741:
    assign rx1340_cstack, $I18
  rx1340_jump2740:
    jump $I19
  rx1340_done2737:
    rx1340_cur."!cursor_fail"()
    .return (rx1340_cur) 
.end
.HLL "nqp"
.namespace []
.sub "default_value" :subid("cuid_134_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1166
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1343_tgt
    .local int rx1343_pos
    .local int rx1343_off
    .local int rx1343_eos
    .local int rx1343_rep
    .local pmc rx1343_cur
    .local pmc rx1343_curclass
    .local pmc rx1343_bstack
    .local pmc rx1343_cstack
    (rx1343_cur, rx1343_tgt, rx1343_pos, rx1343_curclass, rx1343_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1343_cur
    length rx1343_eos, rx1343_tgt
    eq $I19, 1, rx1343_restart2749
    gt rx1343_pos, rx1343_eos, rx1343_fail2750
    repr_get_attr_int $I11, self, rx1343_curclass, "$!from"
    ne $I11, -1, rxscan1344_done2756
    goto rxscan1344_scan2755
  rxscan1344_loop2754:
    inc rx1343_pos
    gt rx1343_pos, rx1343_eos, rx1343_fail2750
    repr_bind_attr_int rx1343_cur, rx1343_curclass, "$!from", rx1343_pos
  rxscan1344_scan2755:
    nqp_rxmark rx1343_bstack, rxscan1344_loop2754, rx1343_pos, 0
  rxscan1344_done2756:
    repr_bind_attr_int rx1343_cur, rx1343_curclass, "$!pos", rx1343_pos
    $P11 = rx1343_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1343_curclass, "$!pos"
    lt $I11, 0, rx1343_fail2750
    repr_get_attr_int rx1343_pos, $P11, rx1343_curclass, "$!pos"
    add $I11, rx1343_pos, 1
    gt $I11, rx1343_eos, rx1343_fail2750
    substr $S10, rx1343_tgt, rx1343_pos, 1
    ne $S10, ucs4:"=", rx1343_fail2750
    add rx1343_pos, 1
    repr_bind_attr_int rx1343_cur, rx1343_curclass, "$!pos", rx1343_pos
    $P11 = rx1343_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1343_curclass, "$!pos"
    lt $I11, 0, rx1343_fail2750
    repr_get_attr_int rx1343_pos, $P11, rx1343_curclass, "$!pos"
    repr_bind_attr_int rx1343_cur, rx1343_curclass, "$!pos", rx1343_pos
    $P11 = rx1343_cur."EXPR"("i=")
    repr_get_attr_int $I11, $P11, rx1343_curclass, "$!pos"
    lt $I11, 0, rx1343_fail2750
    nqp_rxmark rx1343_bstack, rxsubrule1347_pass2759, -1, 0
  rxsubrule1347_pass2759:
    rx1343_cstack = rx1343_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx1343_pos, $P11, rx1343_curclass, "$!pos"
    repr_bind_attr_int rx1343_cur, rx1343_curclass, "$!pos", rx1343_pos
    $P11 = rx1343_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1343_curclass, "$!pos"
    lt $I11, 0, rx1343_fail2750
    repr_get_attr_int rx1343_pos, $P11, rx1343_curclass, "$!pos"
    rx1343_cur."!cursor_pass"(rx1343_pos, "default_value", 'backtrack'=>1)
    .return (rx1343_cur)
  rx1343_restart2749:
    repr_get_attr_obj rx1343_cstack, rx1343_cur, rx1343_curclass, "$!cstack"
  rx1343_fail2750:
    unless rx1343_bstack, rx1343_done2748
    pop $I19, rx1343_bstack
    if_null rx1343_cstack, rx1343_cstack_done2753
    unless rx1343_cstack, rx1343_cstack_done2753
    dec $I19
    set $P11, rx1343_cstack[$I19]
  rx1343_cstack_done2753:
    pop rx1343_rep, rx1343_bstack
    pop rx1343_pos, rx1343_bstack
    pop $I19, rx1343_bstack
    lt rx1343_pos, -1, rx1343_done2748
    lt rx1343_pos, 0, rx1343_fail2750
    eq $I19, 0, rx1343_fail2750
    nqp_islist $I20, rx1343_cstack
    unless $I20, rx1343_jump2751
    elements $I18, rx1343_bstack
    le $I18, 0, rx1343_cut2752
    dec $I18
    set $I18, rx1343_bstack[$I18]
  rx1343_cut2752:
    assign rx1343_cstack, $I18
  rx1343_jump2751:
    jump $I19
  rx1343_done2748:
    rx1343_cur."!cursor_fail"()
    .return (rx1343_cur) 
.end
.HLL "nqp"
.namespace []
.sub "trait" :subid("cuid_135_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1168
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1349_tgt
    .local int rx1349_pos
    .local int rx1349_off
    .local int rx1349_eos
    .local int rx1349_rep
    .local pmc rx1349_cur
    .local pmc rx1349_curclass
    .local pmc rx1349_bstack
    .local pmc rx1349_cstack
    (rx1349_cur, rx1349_tgt, rx1349_pos, rx1349_curclass, rx1349_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1349_cur
    length rx1349_eos, rx1349_tgt
    eq $I19, 1, rx1349_restart2763
    gt rx1349_pos, rx1349_eos, rx1349_fail2764
    repr_get_attr_int $I11, self, rx1349_curclass, "$!from"
    ne $I11, -1, rxscan1350_done2770
    goto rxscan1350_scan2769
  rxscan1350_loop2768:
    inc rx1349_pos
    gt rx1349_pos, rx1349_eos, rx1349_fail2764
    repr_bind_attr_int rx1349_cur, rx1349_curclass, "$!from", rx1349_pos
  rxscan1350_scan2769:
    nqp_rxmark rx1349_bstack, rxscan1350_loop2768, rx1349_pos, 0
  rxscan1350_done2770:
    repr_bind_attr_int rx1349_cur, rx1349_curclass, "$!pos", rx1349_pos
    $P11 = rx1349_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1349_curclass, "$!pos"
    lt $I11, 0, rx1349_fail2764
    repr_get_attr_int rx1349_pos, $P11, rx1349_curclass, "$!pos"
    repr_bind_attr_int rx1349_cur, rx1349_curclass, "$!pos", rx1349_pos
    $P11 = rx1349_cur."trait_mod"()
    repr_get_attr_int $I11, $P11, rx1349_curclass, "$!pos"
    lt $I11, 0, rx1349_fail2764
    nqp_rxmark rx1349_bstack, rxsubrule1352_pass2772, -1, 0
  rxsubrule1352_pass2772:
    rx1349_cstack = rx1349_cur."!cursor_capture"($P11, "trait_mod")
    repr_get_attr_int rx1349_pos, $P11, rx1349_curclass, "$!pos"
    repr_bind_attr_int rx1349_cur, rx1349_curclass, "$!pos", rx1349_pos
    $P11 = rx1349_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1349_curclass, "$!pos"
    lt $I11, 0, rx1349_fail2764
    repr_get_attr_int rx1349_pos, $P11, rx1349_curclass, "$!pos"
    rx1349_cur."!cursor_pass"(rx1349_pos, "trait", 'backtrack'=>1)
    .return (rx1349_cur)
  rx1349_restart2763:
    repr_get_attr_obj rx1349_cstack, rx1349_cur, rx1349_curclass, "$!cstack"
  rx1349_fail2764:
    unless rx1349_bstack, rx1349_done2762
    pop $I19, rx1349_bstack
    if_null rx1349_cstack, rx1349_cstack_done2767
    unless rx1349_cstack, rx1349_cstack_done2767
    dec $I19
    set $P11, rx1349_cstack[$I19]
  rx1349_cstack_done2767:
    pop rx1349_rep, rx1349_bstack
    pop rx1349_pos, rx1349_bstack
    pop $I19, rx1349_bstack
    lt rx1349_pos, -1, rx1349_done2762
    lt rx1349_pos, 0, rx1349_fail2764
    eq $I19, 0, rx1349_fail2764
    nqp_islist $I20, rx1349_cstack
    unless $I20, rx1349_jump2765
    elements $I18, rx1349_bstack
    le $I18, 0, rx1349_cut2766
    dec $I18
    set $I18, rx1349_bstack[$I18]
  rx1349_cut2766:
    assign rx1349_cstack, $I18
  rx1349_jump2765:
    jump $I19
  rx1349_done2762:
    rx1349_cur."!cursor_fail"()
    .return (rx1349_cur) 
.end
.HLL "nqp"
.namespace []
.sub "trait_mod" :subid("cuid_136_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1170
    .param pmc self 
    $P5001 = self."!protoregex"("trait_mod")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "trait_mod:sym<is>" :subid("cuid_137_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1171
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1354_tgt
    .local int rx1354_pos
    .local int rx1354_off
    .local int rx1354_eos
    .local int rx1354_rep
    .local pmc rx1354_cur
    .local pmc rx1354_curclass
    .local pmc rx1354_bstack
    .local pmc rx1354_cstack
    (rx1354_cur, rx1354_tgt, rx1354_pos, rx1354_curclass, rx1354_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1354_cur
    length rx1354_eos, rx1354_tgt
    eq $I19, 1, rx1354_restart2776
    gt rx1354_pos, rx1354_eos, rx1354_fail2777
    repr_get_attr_int $I11, self, rx1354_curclass, "$!from"
    ne $I11, -1, rxscan1355_done2783
    goto rxscan1355_scan2782
  rxscan1355_loop2781:
    inc rx1354_pos
    gt rx1354_pos, rx1354_eos, rx1354_fail2777
    repr_bind_attr_int rx1354_cur, rx1354_curclass, "$!from", rx1354_pos
  rxscan1355_scan2782:
    nqp_rxmark rx1354_bstack, rxscan1355_loop2781, rx1354_pos, 0
  rxscan1355_done2783:
    nqp_rxmark rx1354_bstack, rxcap1356_fail2785, rx1354_pos, 0
    add $I11, rx1354_pos, 2
    gt $I11, rx1354_eos, rx1354_fail2777
    substr $S10, rx1354_tgt, rx1354_pos, 2
    ne $S10, ucs4:"is", rx1354_fail2777
    add rx1354_pos, 2
    nqp_rxpeek $I19, rx1354_bstack, rxcap1356_fail2785
    inc $I19
    set $I11, rx1354_bstack[$I19]
    repr_bind_attr_int rx1354_cur, rx1354_curclass, "$!pos", rx1354_pos
    $P11 = rx1354_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1354_pos)
    rx1354_cstack = rx1354_cur."!cursor_capture"($P11, "sym")
    goto rxcap1356_done2784
  rxcap1356_fail2785:
    goto rx1354_fail2777
  rxcap1356_done2784:
    repr_bind_attr_int rx1354_cur, rx1354_curclass, "$!pos", rx1354_pos
    $P11 = rx1354_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1354_curclass, "$!pos"
    lt $I11, 0, rx1354_fail2777
    repr_get_attr_int rx1354_pos, $P11, rx1354_curclass, "$!pos"
    repr_bind_attr_int rx1354_cur, rx1354_curclass, "$!pos", rx1354_pos
    $P11 = rx1354_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1354_curclass, "$!pos"
    lt $I11, 0, rx1354_fail2777
    nqp_rxmark rx1354_bstack, rxsubrule1358_pass2787, -1, 0
  rxsubrule1358_pass2787:
    rx1354_cstack = rx1354_cur."!cursor_capture"($P11, "longname")
    repr_get_attr_int rx1354_pos, $P11, rx1354_curclass, "$!pos"
    nqp_rxmark rx1354_bstack, rxquantr1359_done2789, rx1354_pos, 0
  rxquantr1359_loop2788:
    repr_bind_attr_int rx1354_cur, rx1354_curclass, "$!pos", rx1354_pos
    $P11 = rx1354_cur."circumfix"()
    repr_get_attr_int $I11, $P11, rx1354_curclass, "$!pos"
    lt $I11, 0, rx1354_fail2777
    goto rxsubrule1360_pass2790
  rxsubrule1360_back2791:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1354_curclass, "$!pos"
    lt $I11, 0, rx1354_fail2777
  rxsubrule1360_pass2790:
    rx1354_cstack = rx1354_cur."!cursor_capture"($P11, "circumfix")
    set_addr $I11, rxsubrule1360_back2791
    push rx1354_bstack, $I11
    push rx1354_bstack, 0
    push rx1354_bstack, rx1354_pos
    elements $I11, rx1354_cstack
    push rx1354_bstack, $I11
    repr_get_attr_int rx1354_pos, $P11, rx1354_curclass, "$!pos"
    nqp_rxpeek $I19, rx1354_bstack, rxquantr1359_done2789
    inc $I19
    inc $I19
    set rx1354_rep, rx1354_bstack[$I19]
    nqp_rxcommit rx1354_bstack, rxquantr1359_done2789
    inc rx1354_rep
  rxquantr1359_done2789:
    repr_bind_attr_int rx1354_cur, rx1354_curclass, "$!pos", rx1354_pos
    $P11 = rx1354_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1354_curclass, "$!pos"
    lt $I11, 0, rx1354_fail2777
    repr_get_attr_int rx1354_pos, $P11, rx1354_curclass, "$!pos"
    rx1354_cur."!cursor_pass"(rx1354_pos, "trait_mod:sym<is>", 'backtrack'=>1)
    .return (rx1354_cur)
  rx1354_restart2776:
    repr_get_attr_obj rx1354_cstack, rx1354_cur, rx1354_curclass, "$!cstack"
  rx1354_fail2777:
    unless rx1354_bstack, rx1354_done2775
    pop $I19, rx1354_bstack
    if_null rx1354_cstack, rx1354_cstack_done2780
    unless rx1354_cstack, rx1354_cstack_done2780
    dec $I19
    set $P11, rx1354_cstack[$I19]
  rx1354_cstack_done2780:
    pop rx1354_rep, rx1354_bstack
    pop rx1354_pos, rx1354_bstack
    pop $I19, rx1354_bstack
    lt rx1354_pos, -1, rx1354_done2775
    lt rx1354_pos, 0, rx1354_fail2777
    eq $I19, 0, rx1354_fail2777
    nqp_islist $I20, rx1354_cstack
    unless $I20, rx1354_jump2778
    elements $I18, rx1354_bstack
    le $I18, 0, rx1354_cut2779
    dec $I18
    set $I18, rx1354_bstack[$I18]
  rx1354_cut2779:
    assign rx1354_cstack, $I18
  rx1354_jump2778:
    jump $I19
  rx1354_done2775:
    rx1354_cur."!cursor_fail"()
    .return (rx1354_cur) 
.end
.HLL "nqp"
.namespace []
.sub "regex_declarator" :subid("cuid_138_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1173
    .param pmc _lex_param_0 
    .const 'Sub' $P5014 = 'cuid_408_1360432459.413' 
    capture_lex $P5014 
    .lex "%*RX", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_254 
    new $P5001, 'Hash'
    set $P101, $P5001
    set self, _lex_param_0
    .local string rx1362_tgt
    .local int rx1362_pos
    .local int rx1362_off
    .local int rx1362_eos
    .local int rx1362_rep
    .local pmc rx1362_cur
    .local pmc rx1362_curclass
    .local pmc rx1362_bstack
    .local pmc rx1362_cstack
    (rx1362_cur, rx1362_tgt, rx1362_pos, rx1362_curclass, rx1362_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1362_cur
    length rx1362_eos, rx1362_tgt
    eq $I19, 1, rx1362_restart2795
    gt rx1362_pos, rx1362_eos, rx1362_fail2796
    repr_get_attr_int $I11, self, rx1362_curclass, "$!from"
    ne $I11, -1, rxscan1363_done2802
    goto rxscan1363_scan2801
  rxscan1363_loop2800:
    inc rx1362_pos
    gt rx1362_pos, rx1362_eos, rx1362_fail2796
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!from", rx1362_pos
  rxscan1363_scan2801:
    nqp_rxmark rx1362_bstack, rxscan1363_loop2800, rx1362_pos, 0
  rxscan1363_done2802:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1364_02804
    nqp_push_label $P11, alt1364_12844
    nqp_rxmark rx1362_bstack, alt1364_end2803, -1, 0
    rx1362_cur."!alt"(rx1362_pos, "alt_nfa__33_1360432461.779", $P11)
    goto rx1362_fail2796
  alt1364_02804:
    nqp_rxmark rx1362_bstack, rxcap1365_fail2806, rx1362_pos, 0
    add $I11, rx1362_pos, 5
    gt $I11, rx1362_eos, rx1362_fail2796
    substr $S10, rx1362_tgt, rx1362_pos, 5
    ne $S10, ucs4:"proto", rx1362_fail2796
    add rx1362_pos, 5
    nqp_rxpeek $I19, rx1362_bstack, rxcap1365_fail2806
    inc $I19
    set $I11, rx1362_bstack[$I19]
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1362_pos)
    rx1362_cstack = rx1362_cur."!cursor_capture"($P11, "proto")
    goto rxcap1365_done2805
  rxcap1365_fail2806:
    goto rx1362_fail2796
  rxcap1365_done2805:
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1367_02809
    nqp_push_label $P11, alt1367_12810
    nqp_push_label $P11, alt1367_22811
    nqp_rxmark rx1362_bstack, alt1367_end2808, -1, 0
    rx1362_cur."!alt"(rx1362_pos, "alt_nfa__31_1360432461.778", $P11)
    goto rx1362_fail2796
  alt1367_02809:
    add $I11, rx1362_pos, 5
    gt $I11, rx1362_eos, rx1362_fail2796
    substr $S10, rx1362_tgt, rx1362_pos, 5
    ne $S10, ucs4:"regex", rx1362_fail2796
    add rx1362_pos, 5
    goto alt1367_end2808
  alt1367_12810:
    add $I11, rx1362_pos, 5
    gt $I11, rx1362_eos, rx1362_fail2796
    substr $S10, rx1362_tgt, rx1362_pos, 5
    ne $S10, ucs4:"token", rx1362_fail2796
    add rx1362_pos, 5
    goto alt1367_end2808
  alt1367_22811:
    add $I11, rx1362_pos, 4
    gt $I11, rx1362_eos, rx1362_fail2796
    substr $S10, rx1362_tgt, rx1362_pos, 4
    ne $S10, ucs4:"rule", rx1362_fail2796
    add rx1362_pos, 4
    goto alt1367_end2808
  alt1367_end2808:
    nqp_rxcommit rx1362_bstack, alt1367_end2808
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
  alt1369_02814:
    nqp_rxmark rx1362_bstack, alt1369_12820, rx1362_pos, 0
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
    add $I11, rx1362_pos, 3
    gt $I11, rx1362_eos, rx1362_fail2796
    substr $S10, rx1362_tgt, rx1362_pos, 3
    ne $S10, ucs4:"::(", rx1362_fail2796
    add rx1362_pos, 3
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    nqp_rxmark rx1362_bstack, rxsubrule1372_pass2817, -1, 0
  rxsubrule1372_pass2817:
    rx1362_cstack = rx1362_cur."!cursor_capture"($P11, "latename=variable")
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
    add $I11, rx1362_pos, 1
    gt $I11, rx1362_eos, rx1362_fail2796
    substr $S10, rx1362_tgt, rx1362_pos, 1
    ne $S10, ucs4:")", rx1362_fail2796
    add rx1362_pos, 1
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
    goto alt1369_end2813
  alt1369_12820:
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    nqp_rxmark rx1362_bstack, rxsubrule1376_pass2822, -1, 0
  rxsubrule1376_pass2822:
    rx1362_cstack = rx1362_cur."!cursor_capture"($P11, "deflongname")
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
  alt1369_end2813:
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
  alt1379_02826:
    nqp_rxmark rx1362_bstack, alt1379_12829, rx1362_pos, 0
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
    add $I11, rx1362_pos, 3
    gt $I11, rx1362_eos, rx1362_fail2796
    substr $S10, rx1362_tgt, rx1362_pos, 3
    ne $S10, ucs4:"{*}", rx1362_fail2796
    add rx1362_pos, 3
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
    goto alt1379_end2825
  alt1379_12829:
    nqp_rxmark rx1362_bstack, alt1379_22834, rx1362_pos, 0
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
    add $I11, rx1362_pos, 1
    gt $I11, rx1362_eos, rx1362_fail2796
    substr $S10, rx1362_tgt, rx1362_pos, 1
    ne $S10, ucs4:"{", rx1362_fail2796
    add rx1362_pos, 1
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
    add $I11, rx1362_pos, 5
    gt $I11, rx1362_eos, rx1362_fail2796
    substr $S10, rx1362_tgt, rx1362_pos, 5
    ne $S10, ucs4:"<...>", rx1362_fail2796
    add rx1362_pos, 5
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
    add $I11, rx1362_pos, 1
    gt $I11, rx1362_eos, rx1362_fail2796
    substr $S10, rx1362_tgt, rx1362_pos, 1
    ne $S10, ucs4:"}", rx1362_fail2796
    add rx1362_pos, 1
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
    goto alt1379_end2825
  alt1379_22834:
    nqp_rxmark rx1362_bstack, alt1379_32839, rx1362_pos, 0
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
    add $I11, rx1362_pos, 1
    gt $I11, rx1362_eos, rx1362_fail2796
    substr $S10, rx1362_tgt, rx1362_pos, 1
    ne $S10, ucs4:"{", rx1362_fail2796
    add rx1362_pos, 1
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
    add $I11, rx1362_pos, 3
    gt $I11, rx1362_eos, rx1362_fail2796
    substr $S10, rx1362_tgt, rx1362_pos, 3
    ne $S10, ucs4:"<*>", rx1362_fail2796
    add rx1362_pos, 3
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
    add $I11, rx1362_pos, 1
    gt $I11, rx1362_eos, rx1362_fail2796
    substr $S10, rx1362_tgt, rx1362_pos, 1
    ne $S10, ucs4:"}", rx1362_fail2796
    add rx1362_pos, 1
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
    goto alt1379_end2825
  alt1379_32839:
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."panic"("Proto regex body must be \\{*\\} (or <*> or <...>, which are deprecated)")
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
  alt1379_end2825:
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
    goto alt1364_end2803
  alt1364_12844:
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
    nqp_rxmark rx1362_bstack, rxcap1395_fail2847, rx1362_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1396_02849
    nqp_push_label $P11, alt1396_12850
    nqp_push_label $P11, alt1396_22851
    nqp_rxmark rx1362_bstack, alt1396_end2848, -1, 0
    rx1362_cur."!alt"(rx1362_pos, "alt_nfa__32_1360432461.779", $P11)
    goto rx1362_fail2796
  alt1396_02849:
    add $I11, rx1362_pos, 5
    gt $I11, rx1362_eos, rx1362_fail2796
    substr $S10, rx1362_tgt, rx1362_pos, 5
    ne $S10, ucs4:"regex", rx1362_fail2796
    add rx1362_pos, 5
    goto alt1396_end2848
  alt1396_12850:
    add $I11, rx1362_pos, 5
    gt $I11, rx1362_eos, rx1362_fail2796
    substr $S10, rx1362_tgt, rx1362_pos, 5
    ne $S10, ucs4:"token", rx1362_fail2796
    add rx1362_pos, 5
    goto alt1396_end2848
  alt1396_22851:
    add $I11, rx1362_pos, 4
    gt $I11, rx1362_eos, rx1362_fail2796
    substr $S10, rx1362_tgt, rx1362_pos, 4
    ne $S10, ucs4:"rule", rx1362_fail2796
    add rx1362_pos, 4
    goto alt1396_end2848
  alt1396_end2848:
    nqp_rxcommit rx1362_bstack, alt1396_end2848
    nqp_rxpeek $I19, rx1362_bstack, rxcap1395_fail2847
    inc $I19
    set $I11, rx1362_bstack[$I19]
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1362_pos)
    rx1362_cstack = rx1362_cur."!cursor_capture"($P11, "sym")
    goto rxcap1395_done2846
  rxcap1395_fail2847:
    goto rx1362_fail2796
  rxcap1395_done2846:
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
  alt1399_02855:
    nqp_rxmark rx1362_bstack, alt1399_12861, rx1362_pos, 0
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
    add $I11, rx1362_pos, 3
    gt $I11, rx1362_eos, rx1362_fail2796
    substr $S10, rx1362_tgt, rx1362_pos, 3
    ne $S10, ucs4:"::(", rx1362_fail2796
    add rx1362_pos, 3
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    nqp_rxmark rx1362_bstack, rxsubrule1402_pass2858, -1, 0
  rxsubrule1402_pass2858:
    rx1362_cstack = rx1362_cur."!cursor_capture"($P11, "latename=variable")
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
    add $I11, rx1362_pos, 1
    gt $I11, rx1362_eos, rx1362_fail2796
    substr $S10, rx1362_tgt, rx1362_pos, 1
    ne $S10, ucs4:")", rx1362_fail2796
    add rx1362_pos, 1
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
    goto alt1399_end2854
  alt1399_12861:
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    nqp_rxmark rx1362_bstack, rxsubrule1406_pass2863, -1, 0
  rxsubrule1406_pass2863:
    rx1362_cstack = rx1362_cur."!cursor_capture"($P11, "deflongname")
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
  alt1399_end2854:
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
    nqp_rxmark rx1362_bstack, rxquantr1411_done2869, rx1362_pos, 0
  rxquantr1411_loop2868:
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
    add $I11, rx1362_pos, 1
    gt $I11, rx1362_eos, rx1362_fail2796
    substr $S10, rx1362_tgt, rx1362_pos, 1
    ne $S10, ucs4:"(", rx1362_fail2796
    add rx1362_pos, 1
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."signature"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    nqp_rxmark rx1362_bstack, rxsubrule1414_pass2872, -1, 0
  rxsubrule1414_pass2872:
    rx1362_cstack = rx1362_cur."!cursor_capture"($P11, "signature")
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
    add $I11, rx1362_pos, 1
    gt $I11, rx1362_eos, rx1362_fail2796
    substr $S10, rx1362_tgt, rx1362_pos, 1
    ne $S10, ucs4:")", rx1362_fail2796
    add rx1362_pos, 1
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
    nqp_rxpeek $I19, rx1362_bstack, rxquantr1411_done2869
    inc $I19
    inc $I19
    set rx1362_rep, rx1362_bstack[$I19]
    nqp_rxcommit rx1362_bstack, rxquantr1411_done2869
    inc rx1362_rep
  rxquantr1411_done2869:
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    store_lex unicode:"$\x{a2}", rx1362_cur
    unless_null $P101, fallback2876
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5002, $P5003
    set fb_tmp_254, $P5002
    repr_defined $I5001, fb_tmp_254
    unless $I5001 goto if1418_else2877 
    set $P5004, fb_tmp_254["%RX"]
    set $P5006, $P5004
    goto if1418_end2878
  if1418_else2877:
    null $P5005
    set $P5006, $P5005
  if1418_end2878:
    unless_null $P5006, vivi_14192879
    nqp_get_sc_object $P5008, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5007, $P5008
    new $P5009, 'Hash'
    set $P5007["%RX"], $P5009
    set $P5006, $P5009
  vivi_14192879:
    unless_null $P5006, vivi_14202880
    die "Contextual %*RX not found"
    box $P5010, "Contextual %*RX not found"
    set $P5006, $P5010
  vivi_14202880:
    set $P101, $P5006
  fallback2876:
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    store_lex unicode:"$\x{a2}", rx1362_cur
    $P5011 = $P102."MATCH"()
    set $P103, $P5011
    .const 'Sub' $P5012 = 'cuid_408_1360432459.413' 
    capture_lex $P5012
    $P5013 = $P5012()
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
    add $I11, rx1362_pos, 1
    gt $I11, rx1362_eos, rx1362_fail2796
    substr $S10, rx1362_tgt, rx1362_pos, 1
    ne $S10, ucs4:"{", rx1362_fail2796
    add rx1362_pos, 1
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."LANG"("Regex", "nibbler")
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    nqp_rxmark rx1362_bstack, rxsubrule1460_pass2949, -1, 0
  rxsubrule1460_pass2949:
    rx1362_cstack = rx1362_cur."!cursor_capture"($P11, "p6regex")
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
    add $I11, rx1362_pos, 1
    gt $I11, rx1362_eos, rx1362_fail2796
    substr $S10, rx1362_tgt, rx1362_pos, 1
    ne $S10, ucs4:"}", rx1362_fail2796
    add rx1362_pos, 1
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2796
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
    goto alt1364_end2803
  alt1364_end2803:
    nqp_rxcommit rx1362_bstack, alt1364_end2803
    rx1362_cur."!cursor_pass"(rx1362_pos, "regex_declarator", 'backtrack'=>1)
    .return (rx1362_cur)
  rx1362_restart2795:
    repr_get_attr_obj rx1362_cstack, rx1362_cur, rx1362_curclass, "$!cstack"
  rx1362_fail2796:
    unless rx1362_bstack, rx1362_done2794
    pop $I19, rx1362_bstack
    if_null rx1362_cstack, rx1362_cstack_done2799
    unless rx1362_cstack, rx1362_cstack_done2799
    dec $I19
    set $P11, rx1362_cstack[$I19]
  rx1362_cstack_done2799:
    pop rx1362_rep, rx1362_bstack
    pop rx1362_pos, rx1362_bstack
    pop $I19, rx1362_bstack
    lt rx1362_pos, -1, rx1362_done2794
    lt rx1362_pos, 0, rx1362_fail2796
    eq $I19, 0, rx1362_fail2796
    nqp_islist $I20, rx1362_cstack
    unless $I20, rx1362_jump2797
    elements $I18, rx1362_bstack
    le $I18, 0, rx1362_cut2798
    dec $I18
    set $I18, rx1362_bstack[$I18]
  rx1362_cut2798:
    assign rx1362_cstack, $I18
  rx1362_jump2797:
    jump $I19
  rx1362_done2794:
    rx1362_cur."!cursor_fail"()
    .return (rx1362_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_408_1360432459.413") :anon :lex :outer("cuid_138_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1194
    .local pmc fb_tmp_255 
    .local pmc fb_tmp_256 
    .local pmc fb_tmp_257 
    .local pmc fb_tmp_258 
    .local pmc fb_tmp_259 
    .local pmc fb_tmp_260 
    .local pmc fb_tmp_261 
    .local pmc fb_tmp_262 
    .local pmc fb_tmp_263 
    .local pmc fb_tmp_264 
    .local pmc fb_tmp_265 
    .local pmc fb_tmp_266 
    .local pmc fb_tmp_267 
    .local pmc fb_tmp_268 
    find_dynamic_lex $P5001, "%*RX"
    unless_null $P5001, fallback2882
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5002, $P5003
    set fb_tmp_255, $P5002
    repr_defined $I5001, fb_tmp_255
    unless $I5001 goto if1422_else2883 
    set $P5004, fb_tmp_255["%RX"]
    set $P5006, $P5004
    goto if1422_end2884
  if1422_else2883:
    null $P5005
    set $P5006, $P5005
  if1422_end2884:
    unless_null $P5006, vivi_14232885
    nqp_get_sc_object $P5008, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5007, $P5008
    new $P5009, 'Hash'
    set $P5007["%RX"], $P5009
    set $P5006, $P5009
  vivi_14232885:
    unless_null $P5006, vivi_14242886
    die "Contextual %*RX not found"
    box $P5010, "Contextual %*RX not found"
    set $P5006, $P5010
  vivi_14242886:
    set $P5001, $P5006
  fallback2882:
    find_lex $P5011, "$/"
    unless_null $P5011, fallback2889
    nqp_get_sc_object $P5012, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5011, $P5012
  fallback2889:
    set fb_tmp_256, $P5011
    repr_defined $I5003, fb_tmp_256
    unless $I5003 goto if1425_else2887 
    set $P5013, fb_tmp_256["sym"]
    set $P5015, $P5013
    goto if1425_end2888
  if1425_else2887:
    null $P5014
    set $P5015, $P5014
  if1425_end2888:
    unless_null $P5015, vivi_14262890
    nqp_get_sc_object $P5016, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5015, $P5016
  vivi_14262890:
    set $S5001, $P5015
    iseq $I5002, $S5001, "rule"
    box $P5017, $I5002
    set $P5001["s"], $P5017
    find_dynamic_lex $P5018, "%*RX"
    unless_null $P5018, fallback2891
    nqp_get_sc_object $P5020, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5019, $P5020
    set fb_tmp_257, $P5019
    repr_defined $I5004, fb_tmp_257
    unless $I5004 goto if1427_else2892 
    set $P5021, fb_tmp_257["%RX"]
    set $P5023, $P5021
    goto if1427_end2893
  if1427_else2892:
    null $P5022
    set $P5023, $P5022
  if1427_end2893:
    unless_null $P5023, vivi_14282894
    nqp_get_sc_object $P5025, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5024, $P5025
    new $P5026, 'Hash'
    set $P5024["%RX"], $P5026
    set $P5023, $P5026
  vivi_14282894:
    unless_null $P5023, vivi_14292895
    die "Contextual %*RX not found"
    box $P5027, "Contextual %*RX not found"
    set $P5023, $P5027
  vivi_14292895:
    set $P5018, $P5023
  fallback2891:
    find_lex $P5028, "$/"
    unless_null $P5028, fallback2900
    nqp_get_sc_object $P5029, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5028, $P5029
  fallback2900:
    set fb_tmp_258, $P5028
    repr_defined $I5006, fb_tmp_258
    unless $I5006 goto if1431_else2898 
    set $P5030, fb_tmp_258["sym"]
    set $P5032, $P5030
    goto if1431_end2899
  if1431_else2898:
    null $P5031
    set $P5032, $P5031
  if1431_end2899:
    unless_null $P5032, vivi_14322901
    nqp_get_sc_object $P5033, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5032, $P5033
  vivi_14322901:
    set $S5002, $P5032
    iseq $I5005, $S5002, "token"
    set $I5009, $I5005
    if $I5005 goto unless1430_end2897 
    find_lex $P5034, "$/"
    unless_null $P5034, fallback2904
    nqp_get_sc_object $P5035, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5034, $P5035
  fallback2904:
    set fb_tmp_259, $P5034
    repr_defined $I5008, fb_tmp_259
    unless $I5008 goto if1433_else2902 
    set $P5036, fb_tmp_259["sym"]
    set $P5038, $P5036
    goto if1433_end2903
  if1433_else2902:
    null $P5037
    set $P5038, $P5037
  if1433_end2903:
    unless_null $P5038, vivi_14342905
    nqp_get_sc_object $P5039, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5038, $P5039
  vivi_14342905:
    set $S5003, $P5038
    iseq $I5007, $S5003, "rule"
    set $I5009, $I5007
  unless1430_end2897:
    box $P5040, $I5009
    set $P5018["r"], $P5040
    find_dynamic_lex $P5041, "%*RX"
    unless_null $P5041, fallback2906
    nqp_get_sc_object $P5043, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5042, $P5043
    set fb_tmp_260, $P5042
    repr_defined $I5010, fb_tmp_260
    unless $I5010 goto if1435_else2907 
    set $P5044, fb_tmp_260["%RX"]
    set $P5046, $P5044
    goto if1435_end2908
  if1435_else2907:
    null $P5045
    set $P5046, $P5045
  if1435_end2908:
    unless_null $P5046, vivi_14362909
    nqp_get_sc_object $P5048, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5047, $P5048
    new $P5049, 'Hash'
    set $P5047["%RX"], $P5049
    set $P5046, $P5049
  vivi_14362909:
    unless_null $P5046, vivi_14372910
    die "Contextual %*RX not found"
    box $P5050, "Contextual %*RX not found"
    set $P5046, $P5050
  vivi_14372910:
    set $P5041, $P5046
  fallback2906:
    find_lex $P5051, "$/"
    unless_null $P5051, fallback2915
    nqp_get_sc_object $P5052, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5051, $P5052
  fallback2915:
    set fb_tmp_261, $P5051
    repr_defined $I5011, fb_tmp_261
    unless $I5011 goto if1439_else2913 
    set $P5053, fb_tmp_261["deflongname"]
    set $P5055, $P5053
    goto if1439_end2914
  if1439_else2913:
    null $P5054
    set $P5055, $P5054
  if1439_end2914:
    unless_null $P5055, vivi_14402916
    nqp_get_sc_object $P5056, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5055, $P5056
  vivi_14402916:
    unless $P5055 goto if1438_else2911 
.annotate 'line', 1197
    find_lex $P5057, "$/"
    unless_null $P5057, fallback2919
    nqp_get_sc_object $P5058, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5057, $P5058
  fallback2919:
    set fb_tmp_262, $P5057
    repr_defined $I5012, fb_tmp_262
    unless $I5012 goto if1441_else2917 
    set $P5059, fb_tmp_262["deflongname"]
    set $P5061, $P5059
    goto if1441_end2918
  if1441_else2917:
    null $P5060
    set $P5061, $P5060
  if1441_end2918:
    unless_null $P5061, vivi_14422920
    nqp_get_sc_object $P5062, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5061, $P5062
  vivi_14422920:
    $P5063 = $P5061."ast"()
    set $P5070, $P5063
    goto if1438_end2912
  if1438_else2911:
    find_lex $P5064, "$/"
    unless_null $P5064, fallback2923
    nqp_get_sc_object $P5065, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5064, $P5065
  fallback2923:
    set fb_tmp_263, $P5064
    repr_defined $I5013, fb_tmp_263
    unless $I5013 goto if1443_else2921 
    set $P5066, fb_tmp_263["latename"]
    set $P5068, $P5066
    goto if1443_end2922
  if1443_else2921:
    null $P5067
    set $P5068, $P5067
  if1443_end2922:
    unless_null $P5068, vivi_14442924
    nqp_get_sc_object $P5069, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5068, $P5069
  vivi_14442924:
    set $S5005, $P5068
    concat $S5004, "!!LATENAME!!", $S5005
    box $P5071, $S5004
    set $P5070, $P5071
  if1438_end2912:
    set $P5041["name"], $P5070
    find_dynamic_lex $P5072, "%*RX"
    unless_null $P5072, fallback2925
    nqp_get_sc_object $P5074, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5073, $P5074
    set fb_tmp_264, $P5073
    repr_defined $I5014, fb_tmp_264
    unless $I5014 goto if1445_else2926 
    set $P5075, fb_tmp_264["%RX"]
    set $P5077, $P5075
    goto if1445_end2927
  if1445_else2926:
    null $P5076
    set $P5077, $P5076
  if1445_end2927:
    unless_null $P5077, vivi_14462928
    nqp_get_sc_object $P5079, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5078, $P5079
    new $P5080, 'Hash'
    set $P5078["%RX"], $P5080
    set $P5077, $P5080
  vivi_14462928:
    unless_null $P5077, vivi_14472929
    die "Contextual %*RX not found"
    box $P5081, "Contextual %*RX not found"
    set $P5077, $P5081
  vivi_14472929:
    set $P5072, $P5077
  fallback2925:
.annotate 'line', 1198
    find_dynamic_lex $P5082, "$*W"
    unless_null $P5082, fallback2930
    nqp_get_sc_object $P5084, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5083, $P5084
    set fb_tmp_265, $P5083
    repr_defined $I5015, fb_tmp_265
    unless $I5015 goto if1448_else2931 
    set $P5085, fb_tmp_265["$W"]
    set $P5087, $P5085
    goto if1448_end2932
  if1448_else2931:
    null $P5086
    set $P5087, $P5086
  if1448_end2932:
    unless_null $P5087, vivi_14492933
    nqp_get_sc_object $P5088, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5087, $P5088
  vivi_14492933:
    unless_null $P5087, vivi_14502934
    die "Contextual $*W not found"
    box $P5089, "Contextual $*W not found"
    set $P5087, $P5089
  vivi_14502934:
    set $P5082, $P5087
  fallback2930:
    find_dynamic_lex $P5090, "$*W"
    unless_null $P5090, fallback2935
    nqp_get_sc_object $P5092, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5091, $P5092
    set fb_tmp_266, $P5091
    repr_defined $I5016, fb_tmp_266
    unless $I5016 goto if1451_else2936 
    set $P5093, fb_tmp_266["$W"]
    set $P5095, $P5093
    goto if1451_end2937
  if1451_else2936:
    null $P5094
    set $P5095, $P5094
  if1451_end2937:
    unless_null $P5095, vivi_14522938
    nqp_get_sc_object $P5096, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5095, $P5096
  vivi_14522938:
    unless_null $P5095, vivi_14532939
    die "Contextual $*W not found"
    box $P5097, "Contextual $*W not found"
    set $P5095, $P5097
  vivi_14532939:
    set $P5090, $P5095
  fallback2935:
    $P5098 = $P5090."cur_lexpad"()
    find_dynamic_lex $P5099, "%*RX"
    unless_null $P5099, fallback2942
    nqp_get_sc_object $P5101, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5100, $P5101
    set fb_tmp_268, $P5100
    repr_defined $I5018, fb_tmp_268
    unless $I5018 goto if1455_else2943 
    set $P5102, fb_tmp_268["%RX"]
    set $P5104, $P5102
    goto if1455_end2944
  if1455_else2943:
    null $P5103
    set $P5104, $P5103
  if1455_end2944:
    unless_null $P5104, vivi_14562945
    nqp_get_sc_object $P5106, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5105, $P5106
    new $P5107, 'Hash'
    set $P5105["%RX"], $P5107
    set $P5104, $P5107
  vivi_14562945:
    unless_null $P5104, vivi_14572946
    die "Contextual %*RX not found"
    box $P5108, "Contextual %*RX not found"
    set $P5104, $P5108
  vivi_14572946:
    set $P5099, $P5104
  fallback2942:
    set fb_tmp_267, $P5099
    repr_defined $I5017, fb_tmp_267
    unless $I5017 goto if1454_else2940 
    set $P5109, fb_tmp_267["name"]
    set $P5111, $P5109
    goto if1454_end2941
  if1454_else2940:
    null $P5110
    set $P5111, $P5110
  if1454_end2941:
    unless_null $P5111, vivi_14582947
    nqp_get_sc_object $P5112, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5111, $P5112
  vivi_14582947:
    $P5113 = $P5082."create_code"($P5098, $P5111, 0, "NQPRegex" :named("code_type_name"))
    set $P5072["code"], $P5113
    .return ($P5113) 
.end
.HLL "nqp"
.namespace []
.sub "dotty" :subid("cuid_139_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1204
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1462_tgt
    .local int rx1462_pos
    .local int rx1462_off
    .local int rx1462_eos
    .local int rx1462_rep
    .local pmc rx1462_cur
    .local pmc rx1462_curclass
    .local pmc rx1462_bstack
    .local pmc rx1462_cstack
    (rx1462_cur, rx1462_tgt, rx1462_pos, rx1462_curclass, rx1462_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1462_cur
    length rx1462_eos, rx1462_tgt
    eq $I19, 1, rx1462_restart2953
    gt rx1462_pos, rx1462_eos, rx1462_fail2954
    repr_get_attr_int $I11, self, rx1462_curclass, "$!from"
    ne $I11, -1, rxscan1463_done2960
    goto rxscan1463_scan2959
  rxscan1463_loop2958:
    inc rx1462_pos
    gt rx1462_pos, rx1462_eos, rx1462_fail2954
    repr_bind_attr_int rx1462_cur, rx1462_curclass, "$!from", rx1462_pos
  rxscan1463_scan2959:
    nqp_rxmark rx1462_bstack, rxscan1463_loop2958, rx1462_pos, 0
  rxscan1463_done2960:
    add $I11, rx1462_pos, 1
    gt $I11, rx1462_eos, rx1462_fail2954
    substr $S10, rx1462_tgt, rx1462_pos, 1
    ne $S10, ucs4:".", rx1462_fail2954
    add rx1462_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1464_02962
    nqp_push_label $P11, alt1464_12964
    nqp_rxmark rx1462_bstack, alt1464_end2961, -1, 0
    rx1462_cur."!alt"(rx1462_pos, "alt_nfa__34_1360432461.801", $P11)
    goto rx1462_fail2954
  alt1464_02962:
    repr_bind_attr_int rx1462_cur, rx1462_curclass, "$!pos", rx1462_pos
    $P11 = rx1462_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1462_curclass, "$!pos"
    lt $I11, 0, rx1462_fail2954
    nqp_rxmark rx1462_bstack, rxsubrule1465_pass2963, -1, 0
  rxsubrule1465_pass2963:
    rx1462_cstack = rx1462_cur."!cursor_capture"($P11, "longname=deflongname")
    repr_get_attr_int rx1462_pos, $P11, rx1462_curclass, "$!pos"
    goto alt1464_end2961
  alt1464_12964:
    ge rx1462_pos, rx1462_eos, rx1462_fail2954
    substr $S11, rx1462_tgt, rx1462_pos, 1
    index $I11, ucs4:"'\"", $S11
    lt $I11, 0, rx1462_fail2954
    repr_bind_attr_int rx1462_cur, rx1462_curclass, "$!pos", rx1462_pos
    $P11 = rx1462_cur."quote"()
    repr_get_attr_int $I11, $P11, rx1462_curclass, "$!pos"
    lt $I11, 0, rx1462_fail2954
    nqp_rxmark rx1462_bstack, rxsubrule1466_pass2965, -1, 0
  rxsubrule1466_pass2965:
    rx1462_cstack = rx1462_cur."!cursor_capture"($P11, "quote")
    repr_get_attr_int rx1462_pos, $P11, rx1462_curclass, "$!pos"
  alt1467_02967:
    nqp_rxmark rx1462_bstack, alt1467_12968, rx1462_pos, 0
    ge rx1462_pos, rx1462_eos, rx1462_fail2954
    substr $S11, rx1462_tgt, rx1462_pos, 1
    index $I11, ucs4:"(", $S11
    lt $I11, 0, rx1462_fail2954
    goto alt1467_end2966
  alt1467_12968:
    repr_bind_attr_int rx1462_cur, rx1462_curclass, "$!pos", rx1462_pos
    $P11 = rx1462_cur."panic"("Quoted method name requires parenthesized arguments")
    repr_get_attr_int $I11, $P11, rx1462_curclass, "$!pos"
    lt $I11, 0, rx1462_fail2954
    repr_get_attr_int rx1462_pos, $P11, rx1462_curclass, "$!pos"
  alt1467_end2966:
    goto alt1464_end2961
  alt1464_end2961:
    nqp_rxcommit rx1462_bstack, alt1464_end2961
    nqp_rxmark rx1462_bstack, rxquantr1469_done2971, rx1462_pos, 0
  rxquantr1469_loop2970:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1470_02973
    nqp_push_label $P11, alt1470_12975
    nqp_rxmark rx1462_bstack, alt1470_end2972, -1, 0
    rx1462_cur."!alt"(rx1462_pos, "alt_nfa__35_1360432461.801", $P11)
    goto rx1462_fail2954
  alt1470_02973:
    ge rx1462_pos, rx1462_eos, rx1462_fail2954
    substr $S11, rx1462_tgt, rx1462_pos, 1
    index $I11, ucs4:"(", $S11
    lt $I11, 0, rx1462_fail2954
    repr_bind_attr_int rx1462_cur, rx1462_curclass, "$!pos", rx1462_pos
    $P11 = rx1462_cur."args"()
    repr_get_attr_int $I11, $P11, rx1462_curclass, "$!pos"
    lt $I11, 0, rx1462_fail2954
    nqp_rxmark rx1462_bstack, rxsubrule1471_pass2974, -1, 0
  rxsubrule1471_pass2974:
    rx1462_cstack = rx1462_cur."!cursor_capture"($P11, "args")
    repr_get_attr_int rx1462_pos, $P11, rx1462_curclass, "$!pos"
    goto alt1470_end2972
  alt1470_12975:
    add $I11, rx1462_pos, 1
    gt $I11, rx1462_eos, rx1462_fail2954
    substr $S10, rx1462_tgt, rx1462_pos, 1
    ne $S10, ucs4:":", rx1462_fail2954
    add rx1462_pos, 1
    ge rx1462_pos, rx1462_eos, rx1462_fail2954
    is_cclass $I11, .CCLASS_WHITESPACE, rx1462_tgt, rx1462_pos
    unless $I11, rx1462_fail2954
    add rx1462_pos, 1
    repr_bind_attr_int rx1462_cur, rx1462_curclass, "$!pos", rx1462_pos
    $P11 = rx1462_cur."arglist"()
    repr_get_attr_int $I11, $P11, rx1462_curclass, "$!pos"
    lt $I11, 0, rx1462_fail2954
    nqp_rxmark rx1462_bstack, rxsubrule1472_pass2976, -1, 0
  rxsubrule1472_pass2976:
    rx1462_cstack = rx1462_cur."!cursor_capture"($P11, "args")
    repr_get_attr_int rx1462_pos, $P11, rx1462_curclass, "$!pos"
    goto alt1470_end2972
  alt1470_end2972:
    nqp_rxpeek $I19, rx1462_bstack, rxquantr1469_done2971
    inc $I19
    inc $I19
    set rx1462_rep, rx1462_bstack[$I19]
    nqp_rxcommit rx1462_bstack, rxquantr1469_done2971
    inc rx1462_rep
  rxquantr1469_done2971:
    rx1462_cur."!cursor_pass"(rx1462_pos, "dotty", 'backtrack'=>1)
    .return (rx1462_cur)
  rx1462_restart2953:
    repr_get_attr_obj rx1462_cstack, rx1462_cur, rx1462_curclass, "$!cstack"
  rx1462_fail2954:
    unless rx1462_bstack, rx1462_done2952
    pop $I19, rx1462_bstack
    if_null rx1462_cstack, rx1462_cstack_done2957
    unless rx1462_cstack, rx1462_cstack_done2957
    dec $I19
    set $P11, rx1462_cstack[$I19]
  rx1462_cstack_done2957:
    pop rx1462_rep, rx1462_bstack
    pop rx1462_pos, rx1462_bstack
    pop $I19, rx1462_bstack
    lt rx1462_pos, -1, rx1462_done2952
    lt rx1462_pos, 0, rx1462_fail2954
    eq $I19, 0, rx1462_fail2954
    nqp_islist $I20, rx1462_cstack
    unless $I20, rx1462_jump2955
    elements $I18, rx1462_bstack
    le $I18, 0, rx1462_cut2956
    dec $I18
    set $I18, rx1462_bstack[$I18]
  rx1462_cut2956:
    assign rx1462_cstack, $I18
  rx1462_jump2955:
    jump $I19
  rx1462_done2952:
    rx1462_cur."!cursor_fail"()
    .return (rx1462_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<self>" :subid("cuid_140_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1217
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1473_tgt
    .local int rx1473_pos
    .local int rx1473_off
    .local int rx1473_eos
    .local int rx1473_rep
    .local pmc rx1473_cur
    .local pmc rx1473_curclass
    .local pmc rx1473_bstack
    .local pmc rx1473_cstack
    (rx1473_cur, rx1473_tgt, rx1473_pos, rx1473_curclass, rx1473_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1473_cur
    length rx1473_eos, rx1473_tgt
    eq $I19, 1, rx1473_restart2979
    gt rx1473_pos, rx1473_eos, rx1473_fail2980
    repr_get_attr_int $I11, self, rx1473_curclass, "$!from"
    ne $I11, -1, rxscan1474_done2986
    goto rxscan1474_scan2985
  rxscan1474_loop2984:
    inc rx1473_pos
    gt rx1473_pos, rx1473_eos, rx1473_fail2980
    repr_bind_attr_int rx1473_cur, rx1473_curclass, "$!from", rx1473_pos
  rxscan1474_scan2985:
    nqp_rxmark rx1473_bstack, rxscan1474_loop2984, rx1473_pos, 0
  rxscan1474_done2986:
    nqp_rxmark rx1473_bstack, rxcap1475_fail2988, rx1473_pos, 0
    add $I11, rx1473_pos, 4
    gt $I11, rx1473_eos, rx1473_fail2980
    substr $S10, rx1473_tgt, rx1473_pos, 4
    ne $S10, ucs4:"self", rx1473_fail2980
    add rx1473_pos, 4
    nqp_rxpeek $I19, rx1473_bstack, rxcap1475_fail2988
    inc $I19
    set $I11, rx1473_bstack[$I19]
    repr_bind_attr_int rx1473_cur, rx1473_curclass, "$!pos", rx1473_pos
    $P11 = rx1473_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1473_pos)
    rx1473_cstack = rx1473_cur."!cursor_capture"($P11, "sym")
    goto rxcap1475_done2987
  rxcap1475_fail2988:
    goto rx1473_fail2980
  rxcap1475_done2987:
    le rx1473_pos, 0, rx1473_fail2980
    is_cclass $I11, .CCLASS_WORD, rx1473_tgt, rx1473_pos
    if $I11, rx1473_fail2980
    sub $I11, rx1473_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx1473_tgt, $I11
    unless $I11, rx1473_fail2980
    rx1473_cur."!cursor_pass"(rx1473_pos, "term:sym<self>", 'backtrack'=>1)
    .return (rx1473_cur)
  rx1473_restart2979:
    repr_get_attr_obj rx1473_cstack, rx1473_cur, rx1473_curclass, "$!cstack"
  rx1473_fail2980:
    unless rx1473_bstack, rx1473_done2978
    pop $I19, rx1473_bstack
    if_null rx1473_cstack, rx1473_cstack_done2983
    unless rx1473_cstack, rx1473_cstack_done2983
    dec $I19
    set $P11, rx1473_cstack[$I19]
  rx1473_cstack_done2983:
    pop rx1473_rep, rx1473_bstack
    pop rx1473_pos, rx1473_bstack
    pop $I19, rx1473_bstack
    lt rx1473_pos, -1, rx1473_done2978
    lt rx1473_pos, 0, rx1473_fail2980
    eq $I19, 0, rx1473_fail2980
    nqp_islist $I20, rx1473_cstack
    unless $I20, rx1473_jump2981
    elements $I18, rx1473_bstack
    le $I18, 0, rx1473_cut2982
    dec $I18
    set $I18, rx1473_bstack[$I18]
  rx1473_cut2982:
    assign rx1473_cstack, $I18
  rx1473_jump2981:
    jump $I19
  rx1473_done2978:
    rx1473_cur."!cursor_fail"()
    .return (rx1473_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<identifier>" :subid("cuid_141_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1219
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1477_tgt
    .local int rx1477_pos
    .local int rx1477_off
    .local int rx1477_eos
    .local int rx1477_rep
    .local pmc rx1477_cur
    .local pmc rx1477_curclass
    .local pmc rx1477_bstack
    .local pmc rx1477_cstack
    (rx1477_cur, rx1477_tgt, rx1477_pos, rx1477_curclass, rx1477_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1477_cur
    length rx1477_eos, rx1477_tgt
    eq $I19, 1, rx1477_restart2992
    gt rx1477_pos, rx1477_eos, rx1477_fail2993
    repr_get_attr_int $I11, self, rx1477_curclass, "$!from"
    ne $I11, -1, rxscan1478_done2999
    goto rxscan1478_scan2998
  rxscan1478_loop2997:
    inc rx1477_pos
    gt rx1477_pos, rx1477_eos, rx1477_fail2993
    repr_bind_attr_int rx1477_cur, rx1477_curclass, "$!from", rx1477_pos
  rxscan1478_scan2998:
    nqp_rxmark rx1477_bstack, rxscan1478_loop2997, rx1477_pos, 0
  rxscan1478_done2999:
    repr_bind_attr_int rx1477_cur, rx1477_curclass, "$!pos", rx1477_pos
    $P11 = rx1477_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1477_curclass, "$!pos"
    lt $I11, 0, rx1477_fail2993
    nqp_rxmark rx1477_bstack, rxsubrule1479_pass3000, -1, 0
  rxsubrule1479_pass3000:
    rx1477_cstack = rx1477_cur."!cursor_capture"($P11, "deflongname")
    repr_get_attr_int rx1477_pos, $P11, rx1477_curclass, "$!pos"
    ge rx1477_pos, rx1477_eos, rx1477_fail2993
    substr $S11, rx1477_tgt, rx1477_pos, 1
    index $I11, ucs4:"(", $S11
    lt $I11, 0, rx1477_fail2993
    repr_bind_attr_int rx1477_cur, rx1477_curclass, "$!pos", rx1477_pos
    $P11 = rx1477_cur."args"()
    repr_get_attr_int $I11, $P11, rx1477_curclass, "$!pos"
    lt $I11, 0, rx1477_fail2993
    nqp_rxmark rx1477_bstack, rxsubrule1480_pass3001, -1, 0
  rxsubrule1480_pass3001:
    rx1477_cstack = rx1477_cur."!cursor_capture"($P11, "args")
    repr_get_attr_int rx1477_pos, $P11, rx1477_curclass, "$!pos"
    rx1477_cur."!cursor_pass"(rx1477_pos, "term:sym<identifier>", 'backtrack'=>1)
    .return (rx1477_cur)
  rx1477_restart2992:
    repr_get_attr_obj rx1477_cstack, rx1477_cur, rx1477_curclass, "$!cstack"
  rx1477_fail2993:
    unless rx1477_bstack, rx1477_done2991
    pop $I19, rx1477_bstack
    if_null rx1477_cstack, rx1477_cstack_done2996
    unless rx1477_cstack, rx1477_cstack_done2996
    dec $I19
    set $P11, rx1477_cstack[$I19]
  rx1477_cstack_done2996:
    pop rx1477_rep, rx1477_bstack
    pop rx1477_pos, rx1477_bstack
    pop $I19, rx1477_bstack
    lt rx1477_pos, -1, rx1477_done2991
    lt rx1477_pos, 0, rx1477_fail2993
    eq $I19, 0, rx1477_fail2993
    nqp_islist $I20, rx1477_cstack
    unless $I20, rx1477_jump2994
    elements $I18, rx1477_bstack
    le $I18, 0, rx1477_cut2995
    dec $I18
    set $I18, rx1477_bstack[$I18]
  rx1477_cut2995:
    assign rx1477_cstack, $I18
  rx1477_jump2994:
    jump $I19
  rx1477_done2991:
    rx1477_cur."!cursor_fail"()
    .return (rx1477_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<name>" :subid("cuid_142_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1223
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1481_tgt
    .local int rx1481_pos
    .local int rx1481_off
    .local int rx1481_eos
    .local int rx1481_rep
    .local pmc rx1481_cur
    .local pmc rx1481_curclass
    .local pmc rx1481_bstack
    .local pmc rx1481_cstack
    (rx1481_cur, rx1481_tgt, rx1481_pos, rx1481_curclass, rx1481_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1481_cur
    length rx1481_eos, rx1481_tgt
    eq $I19, 1, rx1481_restart3004
    gt rx1481_pos, rx1481_eos, rx1481_fail3005
    repr_get_attr_int $I11, self, rx1481_curclass, "$!from"
    ne $I11, -1, rxscan1482_done3011
    goto rxscan1482_scan3010
  rxscan1482_loop3009:
    inc rx1481_pos
    gt rx1481_pos, rx1481_eos, rx1481_fail3005
    repr_bind_attr_int rx1481_cur, rx1481_curclass, "$!from", rx1481_pos
  rxscan1482_scan3010:
    nqp_rxmark rx1481_bstack, rxscan1482_loop3009, rx1481_pos, 0
  rxscan1482_done3011:
    repr_bind_attr_int rx1481_cur, rx1481_curclass, "$!pos", rx1481_pos
    $P11 = rx1481_cur."name"()
    repr_get_attr_int $I11, $P11, rx1481_curclass, "$!pos"
    lt $I11, 0, rx1481_fail3005
    nqp_rxmark rx1481_bstack, rxsubrule1483_pass3012, -1, 0
  rxsubrule1483_pass3012:
    rx1481_cstack = rx1481_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx1481_pos, $P11, rx1481_curclass, "$!pos"
    nqp_rxmark rx1481_bstack, rxquantr1484_done3014, rx1481_pos, 0
  rxquantr1484_loop3013:
    repr_bind_attr_int rx1481_cur, rx1481_curclass, "$!pos", rx1481_pos
    $P11 = rx1481_cur."args"()
    repr_get_attr_int $I11, $P11, rx1481_curclass, "$!pos"
    lt $I11, 0, rx1481_fail3005
    goto rxsubrule1485_pass3015
  rxsubrule1485_back3016:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1481_curclass, "$!pos"
    lt $I11, 0, rx1481_fail3005
  rxsubrule1485_pass3015:
    rx1481_cstack = rx1481_cur."!cursor_capture"($P11, "args")
    set_addr $I11, rxsubrule1485_back3016
    push rx1481_bstack, $I11
    push rx1481_bstack, 0
    push rx1481_bstack, rx1481_pos
    elements $I11, rx1481_cstack
    push rx1481_bstack, $I11
    repr_get_attr_int rx1481_pos, $P11, rx1481_curclass, "$!pos"
    nqp_rxpeek $I19, rx1481_bstack, rxquantr1484_done3014
    inc $I19
    inc $I19
    set rx1481_rep, rx1481_bstack[$I19]
    nqp_rxcommit rx1481_bstack, rxquantr1484_done3014
    inc rx1481_rep
  rxquantr1484_done3014:
    rx1481_cur."!cursor_pass"(rx1481_pos, "term:sym<name>", 'backtrack'=>1)
    .return (rx1481_cur)
  rx1481_restart3004:
    repr_get_attr_obj rx1481_cstack, rx1481_cur, rx1481_curclass, "$!cstack"
  rx1481_fail3005:
    unless rx1481_bstack, rx1481_done3003
    pop $I19, rx1481_bstack
    if_null rx1481_cstack, rx1481_cstack_done3008
    unless rx1481_cstack, rx1481_cstack_done3008
    dec $I19
    set $P11, rx1481_cstack[$I19]
  rx1481_cstack_done3008:
    pop rx1481_rep, rx1481_bstack
    pop rx1481_pos, rx1481_bstack
    pop $I19, rx1481_bstack
    lt rx1481_pos, -1, rx1481_done3003
    lt rx1481_pos, 0, rx1481_fail3005
    eq $I19, 0, rx1481_fail3005
    nqp_islist $I20, rx1481_cstack
    unless $I20, rx1481_jump3006
    elements $I18, rx1481_bstack
    le $I18, 0, rx1481_cut3007
    dec $I18
    set $I18, rx1481_bstack[$I18]
  rx1481_cut3007:
    assign rx1481_cstack, $I18
  rx1481_jump3006:
    jump $I19
  rx1481_done3003:
    rx1481_cur."!cursor_fail"()
    .return (rx1481_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<pir::op>" :subid("cuid_143_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1227
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1486_tgt
    .local int rx1486_pos
    .local int rx1486_off
    .local int rx1486_eos
    .local int rx1486_rep
    .local pmc rx1486_cur
    .local pmc rx1486_curclass
    .local pmc rx1486_bstack
    .local pmc rx1486_cstack
    (rx1486_cur, rx1486_tgt, rx1486_pos, rx1486_curclass, rx1486_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1486_cur
    length rx1486_eos, rx1486_tgt
    eq $I19, 1, rx1486_restart3019
    gt rx1486_pos, rx1486_eos, rx1486_fail3020
    repr_get_attr_int $I11, self, rx1486_curclass, "$!from"
    ne $I11, -1, rxscan1487_done3026
    goto rxscan1487_scan3025
  rxscan1487_loop3024:
    inc rx1486_pos
    gt rx1486_pos, rx1486_eos, rx1486_fail3020
    repr_bind_attr_int rx1486_cur, rx1486_curclass, "$!from", rx1486_pos
  rxscan1487_scan3025:
    nqp_rxmark rx1486_bstack, rxscan1487_loop3024, rx1486_pos, 0
  rxscan1487_done3026:
    add $I11, rx1486_pos, 5
    gt $I11, rx1486_eos, rx1486_fail3020
    substr $S10, rx1486_tgt, rx1486_pos, 5
    ne $S10, ucs4:"pir::", rx1486_fail3020
    add rx1486_pos, 5
    nqp_rxmark rx1486_bstack, rxcap1488_fail3028, rx1486_pos, 0
    nqp_rxmark rx1486_bstack, rxquantr1489_done3030, -1, 0
  rxquantr1489_loop3029:
    ge rx1486_pos, rx1486_eos, rx1486_fail3020
    is_cclass $I11, .CCLASS_WORD, rx1486_tgt, rx1486_pos
    unless $I11, rx1486_fail3020
    add rx1486_pos, 1
    nqp_rxpeek $I19, rx1486_bstack, rxquantr1489_done3030
    inc $I19
    inc $I19
    set rx1486_rep, rx1486_bstack[$I19]
    nqp_rxcommit rx1486_bstack, rxquantr1489_done3030
    inc rx1486_rep
    nqp_rxmark rx1486_bstack, rxquantr1489_done3030, rx1486_pos, rx1486_rep
    goto rxquantr1489_loop3029
  rxquantr1489_done3030:
    nqp_rxpeek $I19, rx1486_bstack, rxcap1488_fail3028
    inc $I19
    set $I11, rx1486_bstack[$I19]
    repr_bind_attr_int rx1486_cur, rx1486_curclass, "$!pos", rx1486_pos
    $P11 = rx1486_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1486_pos)
    rx1486_cstack = rx1486_cur."!cursor_capture"($P11, "op")
    goto rxcap1488_done3027
  rxcap1488_fail3028:
    goto rx1486_fail3020
  rxcap1488_done3027:
    nqp_rxmark rx1486_bstack, rxquantr1490_done3032, rx1486_pos, 0
  rxquantr1490_loop3031:
    repr_bind_attr_int rx1486_cur, rx1486_curclass, "$!pos", rx1486_pos
    $P11 = rx1486_cur."args"()
    repr_get_attr_int $I11, $P11, rx1486_curclass, "$!pos"
    lt $I11, 0, rx1486_fail3020
    goto rxsubrule1491_pass3033
  rxsubrule1491_back3034:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1486_curclass, "$!pos"
    lt $I11, 0, rx1486_fail3020
  rxsubrule1491_pass3033:
    rx1486_cstack = rx1486_cur."!cursor_capture"($P11, "args")
    set_addr $I11, rxsubrule1491_back3034
    push rx1486_bstack, $I11
    push rx1486_bstack, 0
    push rx1486_bstack, rx1486_pos
    elements $I11, rx1486_cstack
    push rx1486_bstack, $I11
    repr_get_attr_int rx1486_pos, $P11, rx1486_curclass, "$!pos"
    nqp_rxpeek $I19, rx1486_bstack, rxquantr1490_done3032
    inc $I19
    inc $I19
    set rx1486_rep, rx1486_bstack[$I19]
    nqp_rxcommit rx1486_bstack, rxquantr1490_done3032
    inc rx1486_rep
  rxquantr1490_done3032:
    rx1486_cur."!cursor_pass"(rx1486_pos, "term:sym<pir::op>", 'backtrack'=>1)
    .return (rx1486_cur)
  rx1486_restart3019:
    repr_get_attr_obj rx1486_cstack, rx1486_cur, rx1486_curclass, "$!cstack"
  rx1486_fail3020:
    unless rx1486_bstack, rx1486_done3018
    pop $I19, rx1486_bstack
    if_null rx1486_cstack, rx1486_cstack_done3023
    unless rx1486_cstack, rx1486_cstack_done3023
    dec $I19
    set $P11, rx1486_cstack[$I19]
  rx1486_cstack_done3023:
    pop rx1486_rep, rx1486_bstack
    pop rx1486_pos, rx1486_bstack
    pop $I19, rx1486_bstack
    lt rx1486_pos, -1, rx1486_done3018
    lt rx1486_pos, 0, rx1486_fail3020
    eq $I19, 0, rx1486_fail3020
    nqp_islist $I20, rx1486_cstack
    unless $I20, rx1486_jump3021
    elements $I18, rx1486_bstack
    le $I18, 0, rx1486_cut3022
    dec $I18
    set $I18, rx1486_bstack[$I18]
  rx1486_cut3022:
    assign rx1486_cstack, $I18
  rx1486_jump3021:
    jump $I19
  rx1486_done3018:
    rx1486_cur."!cursor_fail"()
    .return (rx1486_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<pir::const>" :subid("cuid_144_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1231
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1492_tgt
    .local int rx1492_pos
    .local int rx1492_off
    .local int rx1492_eos
    .local int rx1492_rep
    .local pmc rx1492_cur
    .local pmc rx1492_curclass
    .local pmc rx1492_bstack
    .local pmc rx1492_cstack
    (rx1492_cur, rx1492_tgt, rx1492_pos, rx1492_curclass, rx1492_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1492_cur
    length rx1492_eos, rx1492_tgt
    eq $I19, 1, rx1492_restart3037
    gt rx1492_pos, rx1492_eos, rx1492_fail3038
    repr_get_attr_int $I11, self, rx1492_curclass, "$!from"
    ne $I11, -1, rxscan1493_done3044
    goto rxscan1493_scan3043
  rxscan1493_loop3042:
    inc rx1492_pos
    gt rx1492_pos, rx1492_eos, rx1492_fail3038
    repr_bind_attr_int rx1492_cur, rx1492_curclass, "$!from", rx1492_pos
  rxscan1493_scan3043:
    nqp_rxmark rx1492_bstack, rxscan1493_loop3042, rx1492_pos, 0
  rxscan1493_done3044:
    add $I11, rx1492_pos, 12
    gt $I11, rx1492_eos, rx1492_fail3038
    substr $S10, rx1492_tgt, rx1492_pos, 12
    ne $S10, ucs4:"pir::const::", rx1492_fail3038
    add rx1492_pos, 12
    nqp_rxmark rx1492_bstack, rxcap1494_fail3046, rx1492_pos, 0
    nqp_rxmark rx1492_bstack, rxquantr1495_done3048, -1, 0
  rxquantr1495_loop3047:
    ge rx1492_pos, rx1492_eos, rx1492_fail3038
    is_cclass $I11, .CCLASS_WORD, rx1492_tgt, rx1492_pos
    unless $I11, rx1492_fail3038
    add rx1492_pos, 1
    nqp_rxpeek $I19, rx1492_bstack, rxquantr1495_done3048
    inc $I19
    inc $I19
    set rx1492_rep, rx1492_bstack[$I19]
    nqp_rxcommit rx1492_bstack, rxquantr1495_done3048
    inc rx1492_rep
    nqp_rxmark rx1492_bstack, rxquantr1495_done3048, rx1492_pos, rx1492_rep
    goto rxquantr1495_loop3047
  rxquantr1495_done3048:
    nqp_rxpeek $I19, rx1492_bstack, rxcap1494_fail3046
    inc $I19
    set $I11, rx1492_bstack[$I19]
    repr_bind_attr_int rx1492_cur, rx1492_curclass, "$!pos", rx1492_pos
    $P11 = rx1492_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1492_pos)
    rx1492_cstack = rx1492_cur."!cursor_capture"($P11, "const")
    goto rxcap1494_done3045
  rxcap1494_fail3046:
    goto rx1492_fail3038
  rxcap1494_done3045:
    rx1492_cur."!cursor_pass"(rx1492_pos, "term:sym<pir::const>", 'backtrack'=>1)
    .return (rx1492_cur)
  rx1492_restart3037:
    repr_get_attr_obj rx1492_cstack, rx1492_cur, rx1492_curclass, "$!cstack"
  rx1492_fail3038:
    unless rx1492_bstack, rx1492_done3036
    pop $I19, rx1492_bstack
    if_null rx1492_cstack, rx1492_cstack_done3041
    unless rx1492_cstack, rx1492_cstack_done3041
    dec $I19
    set $P11, rx1492_cstack[$I19]
  rx1492_cstack_done3041:
    pop rx1492_rep, rx1492_bstack
    pop rx1492_pos, rx1492_bstack
    pop $I19, rx1492_bstack
    lt rx1492_pos, -1, rx1492_done3036
    lt rx1492_pos, 0, rx1492_fail3038
    eq $I19, 0, rx1492_fail3038
    nqp_islist $I20, rx1492_cstack
    unless $I20, rx1492_jump3039
    elements $I18, rx1492_bstack
    le $I18, 0, rx1492_cut3040
    dec $I18
    set $I18, rx1492_bstack[$I18]
  rx1492_cut3040:
    assign rx1492_cstack, $I18
  rx1492_jump3039:
    jump $I19
  rx1492_done3036:
    rx1492_cur."!cursor_fail"()
    .return (rx1492_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<nqp::op>" :subid("cuid_145_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1235
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1496_tgt
    .local int rx1496_pos
    .local int rx1496_off
    .local int rx1496_eos
    .local int rx1496_rep
    .local pmc rx1496_cur
    .local pmc rx1496_curclass
    .local pmc rx1496_bstack
    .local pmc rx1496_cstack
    (rx1496_cur, rx1496_tgt, rx1496_pos, rx1496_curclass, rx1496_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1496_cur
    length rx1496_eos, rx1496_tgt
    eq $I19, 1, rx1496_restart3051
    gt rx1496_pos, rx1496_eos, rx1496_fail3052
    repr_get_attr_int $I11, self, rx1496_curclass, "$!from"
    ne $I11, -1, rxscan1497_done3058
    goto rxscan1497_scan3057
  rxscan1497_loop3056:
    inc rx1496_pos
    gt rx1496_pos, rx1496_eos, rx1496_fail3052
    repr_bind_attr_int rx1496_cur, rx1496_curclass, "$!from", rx1496_pos
  rxscan1497_scan3057:
    nqp_rxmark rx1496_bstack, rxscan1497_loop3056, rx1496_pos, 0
  rxscan1497_done3058:
    add $I11, rx1496_pos, 5
    gt $I11, rx1496_eos, rx1496_fail3052
    substr $S10, rx1496_tgt, rx1496_pos, 5
    ne $S10, ucs4:"nqp::", rx1496_fail3052
    add rx1496_pos, 5
    nqp_rxmark rx1496_bstack, rxcap1498_fail3060, rx1496_pos, 0
    nqp_rxmark rx1496_bstack, rxquantr1499_done3062, -1, 0
  rxquantr1499_loop3061:
    ge rx1496_pos, rx1496_eos, rx1496_fail3052
    is_cclass $I11, .CCLASS_WORD, rx1496_tgt, rx1496_pos
    unless $I11, rx1496_fail3052
    add rx1496_pos, 1
    nqp_rxpeek $I19, rx1496_bstack, rxquantr1499_done3062
    inc $I19
    inc $I19
    set rx1496_rep, rx1496_bstack[$I19]
    nqp_rxcommit rx1496_bstack, rxquantr1499_done3062
    inc rx1496_rep
    nqp_rxmark rx1496_bstack, rxquantr1499_done3062, rx1496_pos, rx1496_rep
    goto rxquantr1499_loop3061
  rxquantr1499_done3062:
    nqp_rxpeek $I19, rx1496_bstack, rxcap1498_fail3060
    inc $I19
    set $I11, rx1496_bstack[$I19]
    repr_bind_attr_int rx1496_cur, rx1496_curclass, "$!pos", rx1496_pos
    $P11 = rx1496_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1496_pos)
    rx1496_cstack = rx1496_cur."!cursor_capture"($P11, "op")
    goto rxcap1498_done3059
  rxcap1498_fail3060:
    goto rx1496_fail3052
  rxcap1498_done3059:
    nqp_rxmark rx1496_bstack, rxquantr1500_done3064, rx1496_pos, 0
  rxquantr1500_loop3063:
    repr_bind_attr_int rx1496_cur, rx1496_curclass, "$!pos", rx1496_pos
    $P11 = rx1496_cur."args"()
    repr_get_attr_int $I11, $P11, rx1496_curclass, "$!pos"
    lt $I11, 0, rx1496_fail3052
    goto rxsubrule1501_pass3065
  rxsubrule1501_back3066:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1496_curclass, "$!pos"
    lt $I11, 0, rx1496_fail3052
  rxsubrule1501_pass3065:
    rx1496_cstack = rx1496_cur."!cursor_capture"($P11, "args")
    set_addr $I11, rxsubrule1501_back3066
    push rx1496_bstack, $I11
    push rx1496_bstack, 0
    push rx1496_bstack, rx1496_pos
    elements $I11, rx1496_cstack
    push rx1496_bstack, $I11
    repr_get_attr_int rx1496_pos, $P11, rx1496_curclass, "$!pos"
    nqp_rxpeek $I19, rx1496_bstack, rxquantr1500_done3064
    inc $I19
    inc $I19
    set rx1496_rep, rx1496_bstack[$I19]
    nqp_rxcommit rx1496_bstack, rxquantr1500_done3064
    inc rx1496_rep
  rxquantr1500_done3064:
    rx1496_cur."!cursor_pass"(rx1496_pos, "term:sym<nqp::op>", 'backtrack'=>1)
    .return (rx1496_cur)
  rx1496_restart3051:
    repr_get_attr_obj rx1496_cstack, rx1496_cur, rx1496_curclass, "$!cstack"
  rx1496_fail3052:
    unless rx1496_bstack, rx1496_done3050
    pop $I19, rx1496_bstack
    if_null rx1496_cstack, rx1496_cstack_done3055
    unless rx1496_cstack, rx1496_cstack_done3055
    dec $I19
    set $P11, rx1496_cstack[$I19]
  rx1496_cstack_done3055:
    pop rx1496_rep, rx1496_bstack
    pop rx1496_pos, rx1496_bstack
    pop $I19, rx1496_bstack
    lt rx1496_pos, -1, rx1496_done3050
    lt rx1496_pos, 0, rx1496_fail3052
    eq $I19, 0, rx1496_fail3052
    nqp_islist $I20, rx1496_cstack
    unless $I20, rx1496_jump3053
    elements $I18, rx1496_bstack
    le $I18, 0, rx1496_cut3054
    dec $I18
    set $I18, rx1496_bstack[$I18]
  rx1496_cut3054:
    assign rx1496_cstack, $I18
  rx1496_jump3053:
    jump $I19
  rx1496_done3050:
    rx1496_cur."!cursor_fail"()
    .return (rx1496_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<onlystar>" :subid("cuid_146_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1239
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_409_1360432459.413' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1502_tgt
    .local int rx1502_pos
    .local int rx1502_off
    .local int rx1502_eos
    .local int rx1502_rep
    .local pmc rx1502_cur
    .local pmc rx1502_curclass
    .local pmc rx1502_bstack
    .local pmc rx1502_cstack
    (rx1502_cur, rx1502_tgt, rx1502_pos, rx1502_curclass, rx1502_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1502_cur
    length rx1502_eos, rx1502_tgt
    eq $I19, 1, rx1502_restart3069
    gt rx1502_pos, rx1502_eos, rx1502_fail3070
    repr_get_attr_int $I11, self, rx1502_curclass, "$!from"
    ne $I11, -1, rxscan1503_done3076
    goto rxscan1503_scan3075
  rxscan1503_loop3074:
    inc rx1502_pos
    gt rx1502_pos, rx1502_eos, rx1502_fail3070
    repr_bind_attr_int rx1502_cur, rx1502_curclass, "$!from", rx1502_pos
  rxscan1503_scan3075:
    nqp_rxmark rx1502_bstack, rxscan1503_loop3074, rx1502_pos, 0
  rxscan1503_done3076:
    add $I11, rx1502_pos, 3
    gt $I11, rx1502_eos, rx1502_fail3070
    substr $S10, rx1502_tgt, rx1502_pos, 3
    ne $S10, ucs4:"{*}", rx1502_fail3070
    add rx1502_pos, 3
    repr_bind_attr_int rx1502_cur, rx1502_curclass, "$!pos", rx1502_pos
    $P11 = rx1502_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1502_curclass, "$!pos"
    lt $I11, 0, rx1502_fail3070
  alt1504_03078:
    nqp_rxmark rx1502_bstack, alt1504_13084, rx1502_pos, 0
    repr_bind_attr_int rx1502_cur, rx1502_curclass, "$!pos", rx1502_pos
    store_lex unicode:"$\x{a2}", rx1502_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_409_1360432459.413' 
    capture_lex $P5002
    $P5003 = $P5002()
    unless $P5003, rx1502_fail3070
    goto alt1504_end3077
  alt1504_13084:
    repr_bind_attr_int rx1502_cur, rx1502_curclass, "$!pos", rx1502_pos
    $P11 = rx1502_cur."panic"("{*} may only appear in proto")
    repr_get_attr_int $I11, $P11, rx1502_curclass, "$!pos"
    lt $I11, 0, rx1502_fail3070
    repr_get_attr_int rx1502_pos, $P11, rx1502_curclass, "$!pos"
  alt1504_end3077:
    rx1502_cur."!cursor_pass"(rx1502_pos, "term:sym<onlystar>", 'backtrack'=>1)
    .return (rx1502_cur)
  rx1502_restart3069:
    repr_get_attr_obj rx1502_cstack, rx1502_cur, rx1502_curclass, "$!cstack"
  rx1502_fail3070:
    unless rx1502_bstack, rx1502_done3068
    pop $I19, rx1502_bstack
    if_null rx1502_cstack, rx1502_cstack_done3073
    unless rx1502_cstack, rx1502_cstack_done3073
    dec $I19
    set $P11, rx1502_cstack[$I19]
  rx1502_cstack_done3073:
    pop rx1502_rep, rx1502_bstack
    pop rx1502_pos, rx1502_bstack
    pop $I19, rx1502_bstack
    lt rx1502_pos, -1, rx1502_done3068
    lt rx1502_pos, 0, rx1502_fail3070
    eq $I19, 0, rx1502_fail3070
    nqp_islist $I20, rx1502_cstack
    unless $I20, rx1502_jump3071
    elements $I18, rx1502_bstack
    le $I18, 0, rx1502_cut3072
    dec $I18
    set $I18, rx1502_bstack[$I18]
  rx1502_cut3072:
    assign rx1502_cstack, $I18
  rx1502_jump3071:
    jump $I19
  rx1502_done3068:
    rx1502_cur."!cursor_fail"()
    .return (rx1502_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_409_1360432459.413") :anon :lex :outer("cuid_146_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1241
    .local pmc fb_tmp_269 
    find_dynamic_lex $P5001, "$*MULTINESS"
    unless_null $P5001, fallback3079
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5002, $P5003
    set fb_tmp_269, $P5002
    repr_defined $I5002, fb_tmp_269
    unless $I5002 goto if1505_else3080 
    set $P5004, fb_tmp_269["$MULTINESS"]
    set $P5006, $P5004
    goto if1505_end3081
  if1505_else3080:
    null $P5005
    set $P5006, $P5005
  if1505_end3081:
    unless_null $P5006, vivi_15063082
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_15063082:
    unless_null $P5006, vivi_15073083
    die "Contextual $*MULTINESS not found"
    box $P5008, "Contextual $*MULTINESS not found"
    set $P5006, $P5008
  vivi_15073083:
    set $P5001, $P5006
  fallback3079:
    set $S5001, $P5001
    iseq $I5001, $S5001, "proto"
    .return ($I5001) 
.end
.HLL "nqp"
.namespace []
.sub "args" :subid("cuid_147_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1244
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1509_tgt
    .local int rx1509_pos
    .local int rx1509_off
    .local int rx1509_eos
    .local int rx1509_rep
    .local pmc rx1509_cur
    .local pmc rx1509_curclass
    .local pmc rx1509_bstack
    .local pmc rx1509_cstack
    (rx1509_cur, rx1509_tgt, rx1509_pos, rx1509_curclass, rx1509_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1509_cur
    length rx1509_eos, rx1509_tgt
    eq $I19, 1, rx1509_restart3088
    gt rx1509_pos, rx1509_eos, rx1509_fail3089
    repr_get_attr_int $I11, self, rx1509_curclass, "$!from"
    ne $I11, -1, rxscan1510_done3095
    goto rxscan1510_scan3094
  rxscan1510_loop3093:
    inc rx1509_pos
    gt rx1509_pos, rx1509_eos, rx1509_fail3089
    repr_bind_attr_int rx1509_cur, rx1509_curclass, "$!from", rx1509_pos
  rxscan1510_scan3094:
    nqp_rxmark rx1509_bstack, rxscan1510_loop3093, rx1509_pos, 0
  rxscan1510_done3095:
    add $I11, rx1509_pos, 1
    gt $I11, rx1509_eos, rx1509_fail3089
    substr $S10, rx1509_tgt, rx1509_pos, 1
    ne $S10, ucs4:"(", rx1509_fail3089
    add rx1509_pos, 1
    repr_bind_attr_int rx1509_cur, rx1509_curclass, "$!pos", rx1509_pos
    $P11 = rx1509_cur."arglist"()
    repr_get_attr_int $I11, $P11, rx1509_curclass, "$!pos"
    lt $I11, 0, rx1509_fail3089
    nqp_rxmark rx1509_bstack, rxsubrule1511_pass3096, -1, 0
  rxsubrule1511_pass3096:
    rx1509_cstack = rx1509_cur."!cursor_capture"($P11, "arglist")
    repr_get_attr_int rx1509_pos, $P11, rx1509_curclass, "$!pos"
    add $I11, rx1509_pos, 1
    gt $I11, rx1509_eos, rx1509_fail3089
    substr $S10, rx1509_tgt, rx1509_pos, 1
    ne $S10, ucs4:")", rx1509_fail3089
    add rx1509_pos, 1
    rx1509_cur."!cursor_pass"(rx1509_pos, "args", 'backtrack'=>1)
    .return (rx1509_cur)
  rx1509_restart3088:
    repr_get_attr_obj rx1509_cstack, rx1509_cur, rx1509_curclass, "$!cstack"
  rx1509_fail3089:
    unless rx1509_bstack, rx1509_done3087
    pop $I19, rx1509_bstack
    if_null rx1509_cstack, rx1509_cstack_done3092
    unless rx1509_cstack, rx1509_cstack_done3092
    dec $I19
    set $P11, rx1509_cstack[$I19]
  rx1509_cstack_done3092:
    pop rx1509_rep, rx1509_bstack
    pop rx1509_pos, rx1509_bstack
    pop $I19, rx1509_bstack
    lt rx1509_pos, -1, rx1509_done3087
    lt rx1509_pos, 0, rx1509_fail3089
    eq $I19, 0, rx1509_fail3089
    nqp_islist $I20, rx1509_cstack
    unless $I20, rx1509_jump3090
    elements $I18, rx1509_bstack
    le $I18, 0, rx1509_cut3091
    dec $I18
    set $I18, rx1509_bstack[$I18]
  rx1509_cut3091:
    assign rx1509_cstack, $I18
  rx1509_jump3090:
    jump $I19
  rx1509_done3087:
    rx1509_cur."!cursor_fail"()
    .return (rx1509_cur) 
.end
.HLL "nqp"
.namespace []
.sub "arglist" :subid("cuid_148_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1248
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1512_tgt
    .local int rx1512_pos
    .local int rx1512_off
    .local int rx1512_eos
    .local int rx1512_rep
    .local pmc rx1512_cur
    .local pmc rx1512_curclass
    .local pmc rx1512_bstack
    .local pmc rx1512_cstack
    (rx1512_cur, rx1512_tgt, rx1512_pos, rx1512_curclass, rx1512_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1512_cur
    length rx1512_eos, rx1512_tgt
    eq $I19, 1, rx1512_restart3099
    gt rx1512_pos, rx1512_eos, rx1512_fail3100
    repr_get_attr_int $I11, self, rx1512_curclass, "$!from"
    ne $I11, -1, rxscan1513_done3106
    goto rxscan1513_scan3105
  rxscan1513_loop3104:
    inc rx1512_pos
    gt rx1512_pos, rx1512_eos, rx1512_fail3100
    repr_bind_attr_int rx1512_cur, rx1512_curclass, "$!from", rx1512_pos
  rxscan1513_scan3105:
    nqp_rxmark rx1512_bstack, rxscan1513_loop3104, rx1512_pos, 0
  rxscan1513_done3106:
    repr_bind_attr_int rx1512_cur, rx1512_curclass, "$!pos", rx1512_pos
    $P11 = rx1512_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1512_curclass, "$!pos"
    lt $I11, 0, rx1512_fail3100
    repr_get_attr_int rx1512_pos, $P11, rx1512_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1515_03109
    nqp_push_label $P11, alt1515_13111
    nqp_rxmark rx1512_bstack, alt1515_end3108, -1, 0
    rx1512_cur."!alt"(rx1512_pos, "alt_nfa__36_1360432461.865", $P11)
    goto rx1512_fail3100
  alt1515_03109:
    repr_bind_attr_int rx1512_cur, rx1512_curclass, "$!pos", rx1512_pos
    $P11 = rx1512_cur."EXPR"("f=")
    repr_get_attr_int $I11, $P11, rx1512_curclass, "$!pos"
    lt $I11, 0, rx1512_fail3100
    nqp_rxmark rx1512_bstack, rxsubrule1516_pass3110, -1, 0
  rxsubrule1516_pass3110:
    rx1512_cstack = rx1512_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx1512_pos, $P11, rx1512_curclass, "$!pos"
    goto alt1515_end3108
  alt1515_13111:
    goto alt1515_end3108
  alt1515_end3108:
    nqp_rxcommit rx1512_bstack, alt1515_end3108
    rx1512_cur."!cursor_pass"(rx1512_pos, "arglist", 'backtrack'=>1)
    .return (rx1512_cur)
  rx1512_restart3099:
    repr_get_attr_obj rx1512_cstack, rx1512_cur, rx1512_curclass, "$!cstack"
  rx1512_fail3100:
    unless rx1512_bstack, rx1512_done3098
    pop $I19, rx1512_bstack
    if_null rx1512_cstack, rx1512_cstack_done3103
    unless rx1512_cstack, rx1512_cstack_done3103
    dec $I19
    set $P11, rx1512_cstack[$I19]
  rx1512_cstack_done3103:
    pop rx1512_rep, rx1512_bstack
    pop rx1512_pos, rx1512_bstack
    pop $I19, rx1512_bstack
    lt rx1512_pos, -1, rx1512_done3098
    lt rx1512_pos, 0, rx1512_fail3100
    eq $I19, 0, rx1512_fail3100
    nqp_islist $I20, rx1512_cstack
    unless $I20, rx1512_jump3101
    elements $I18, rx1512_bstack
    le $I18, 0, rx1512_cut3102
    dec $I18
    set $I18, rx1512_bstack[$I18]
  rx1512_cut3102:
    assign rx1512_cstack, $I18
  rx1512_jump3101:
    jump $I19
  rx1512_done3098:
    rx1512_cur."!cursor_fail"()
    .return (rx1512_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<value>" :subid("cuid_149_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1257
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1518_tgt
    .local int rx1518_pos
    .local int rx1518_off
    .local int rx1518_eos
    .local int rx1518_rep
    .local pmc rx1518_cur
    .local pmc rx1518_curclass
    .local pmc rx1518_bstack
    .local pmc rx1518_cstack
    (rx1518_cur, rx1518_tgt, rx1518_pos, rx1518_curclass, rx1518_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1518_cur
    length rx1518_eos, rx1518_tgt
    eq $I19, 1, rx1518_restart3115
    gt rx1518_pos, rx1518_eos, rx1518_fail3116
    repr_get_attr_int $I11, self, rx1518_curclass, "$!from"
    ne $I11, -1, rxscan1519_done3122
    goto rxscan1519_scan3121
  rxscan1519_loop3120:
    inc rx1518_pos
    gt rx1518_pos, rx1518_eos, rx1518_fail3116
    repr_bind_attr_int rx1518_cur, rx1518_curclass, "$!from", rx1518_pos
  rxscan1519_scan3121:
    nqp_rxmark rx1518_bstack, rxscan1519_loop3120, rx1518_pos, 0
  rxscan1519_done3122:
    repr_bind_attr_int rx1518_cur, rx1518_curclass, "$!pos", rx1518_pos
    $P11 = rx1518_cur."value"()
    repr_get_attr_int $I11, $P11, rx1518_curclass, "$!pos"
    lt $I11, 0, rx1518_fail3116
    nqp_rxmark rx1518_bstack, rxsubrule1520_pass3123, -1, 0
  rxsubrule1520_pass3123:
    rx1518_cstack = rx1518_cur."!cursor_capture"($P11, "value")
    repr_get_attr_int rx1518_pos, $P11, rx1518_curclass, "$!pos"
    rx1518_cur."!cursor_pass"(rx1518_pos, "term:sym<value>", 'backtrack'=>1)
    .return (rx1518_cur)
  rx1518_restart3115:
    repr_get_attr_obj rx1518_cstack, rx1518_cur, rx1518_curclass, "$!cstack"
  rx1518_fail3116:
    unless rx1518_bstack, rx1518_done3114
    pop $I19, rx1518_bstack
    if_null rx1518_cstack, rx1518_cstack_done3119
    unless rx1518_cstack, rx1518_cstack_done3119
    dec $I19
    set $P11, rx1518_cstack[$I19]
  rx1518_cstack_done3119:
    pop rx1518_rep, rx1518_bstack
    pop rx1518_pos, rx1518_bstack
    pop $I19, rx1518_bstack
    lt rx1518_pos, -1, rx1518_done3114
    lt rx1518_pos, 0, rx1518_fail3116
    eq $I19, 0, rx1518_fail3116
    nqp_islist $I20, rx1518_cstack
    unless $I20, rx1518_jump3117
    elements $I18, rx1518_bstack
    le $I18, 0, rx1518_cut3118
    dec $I18
    set $I18, rx1518_bstack[$I18]
  rx1518_cut3118:
    assign rx1518_cstack, $I18
  rx1518_jump3117:
    jump $I19
  rx1518_done3114:
    rx1518_cur."!cursor_fail"()
    .return (rx1518_cur) 
.end
.HLL "nqp"
.namespace []
.sub "value" :subid("cuid_150_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1259
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1521_tgt
    .local int rx1521_pos
    .local int rx1521_off
    .local int rx1521_eos
    .local int rx1521_rep
    .local pmc rx1521_cur
    .local pmc rx1521_curclass
    .local pmc rx1521_bstack
    .local pmc rx1521_cstack
    (rx1521_cur, rx1521_tgt, rx1521_pos, rx1521_curclass, rx1521_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1521_cur
    length rx1521_eos, rx1521_tgt
    eq $I19, 1, rx1521_restart3126
    gt rx1521_pos, rx1521_eos, rx1521_fail3127
    repr_get_attr_int $I11, self, rx1521_curclass, "$!from"
    ne $I11, -1, rxscan1522_done3133
    goto rxscan1522_scan3132
  rxscan1522_loop3131:
    inc rx1521_pos
    gt rx1521_pos, rx1521_eos, rx1521_fail3127
    repr_bind_attr_int rx1521_cur, rx1521_curclass, "$!from", rx1521_pos
  rxscan1522_scan3132:
    nqp_rxmark rx1521_bstack, rxscan1522_loop3131, rx1521_pos, 0
  rxscan1522_done3133:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1523_03135
    nqp_push_label $P11, alt1523_13137
    nqp_rxmark rx1521_bstack, alt1523_end3134, -1, 0
    rx1521_cur."!alt"(rx1521_pos, "alt_nfa__37_1360432461.873", $P11)
    goto rx1521_fail3127
  alt1523_03135:
    repr_bind_attr_int rx1521_cur, rx1521_curclass, "$!pos", rx1521_pos
    $P11 = rx1521_cur."quote"()
    repr_get_attr_int $I11, $P11, rx1521_curclass, "$!pos"
    lt $I11, 0, rx1521_fail3127
    nqp_rxmark rx1521_bstack, rxsubrule1524_pass3136, -1, 0
  rxsubrule1524_pass3136:
    rx1521_cstack = rx1521_cur."!cursor_capture"($P11, "quote")
    repr_get_attr_int rx1521_pos, $P11, rx1521_curclass, "$!pos"
    goto alt1523_end3134
  alt1523_13137:
    repr_bind_attr_int rx1521_cur, rx1521_curclass, "$!pos", rx1521_pos
    $P11 = rx1521_cur."number"()
    repr_get_attr_int $I11, $P11, rx1521_curclass, "$!pos"
    lt $I11, 0, rx1521_fail3127
    nqp_rxmark rx1521_bstack, rxsubrule1525_pass3138, -1, 0
  rxsubrule1525_pass3138:
    rx1521_cstack = rx1521_cur."!cursor_capture"($P11, "number")
    repr_get_attr_int rx1521_pos, $P11, rx1521_curclass, "$!pos"
    goto alt1523_end3134
  alt1523_end3134:
    rx1521_cur."!cursor_pass"(rx1521_pos, "value", 'backtrack'=>1)
    .return (rx1521_cur)
  rx1521_restart3126:
    repr_get_attr_obj rx1521_cstack, rx1521_cur, rx1521_curclass, "$!cstack"
  rx1521_fail3127:
    unless rx1521_bstack, rx1521_done3125
    pop $I19, rx1521_bstack
    if_null rx1521_cstack, rx1521_cstack_done3130
    unless rx1521_cstack, rx1521_cstack_done3130
    dec $I19
    set $P11, rx1521_cstack[$I19]
  rx1521_cstack_done3130:
    pop rx1521_rep, rx1521_bstack
    pop rx1521_pos, rx1521_bstack
    pop $I19, rx1521_bstack
    lt rx1521_pos, -1, rx1521_done3125
    lt rx1521_pos, 0, rx1521_fail3127
    eq $I19, 0, rx1521_fail3127
    nqp_islist $I20, rx1521_cstack
    unless $I20, rx1521_jump3128
    elements $I18, rx1521_bstack
    le $I18, 0, rx1521_cut3129
    dec $I18
    set $I18, rx1521_bstack[$I18]
  rx1521_cut3129:
    assign rx1521_cstack, $I18
  rx1521_jump3128:
    jump $I19
  rx1521_done3125:
    rx1521_cur."!cursor_fail"()
    .return (rx1521_cur) 
.end
.HLL "nqp"
.namespace []
.sub "number" :subid("cuid_151_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1264
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1526_tgt
    .local int rx1526_pos
    .local int rx1526_off
    .local int rx1526_eos
    .local int rx1526_rep
    .local pmc rx1526_cur
    .local pmc rx1526_curclass
    .local pmc rx1526_bstack
    .local pmc rx1526_cstack
    (rx1526_cur, rx1526_tgt, rx1526_pos, rx1526_curclass, rx1526_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1526_cur
    length rx1526_eos, rx1526_tgt
    eq $I19, 1, rx1526_restart3141
    gt rx1526_pos, rx1526_eos, rx1526_fail3142
    repr_get_attr_int $I11, self, rx1526_curclass, "$!from"
    ne $I11, -1, rxscan1527_done3148
    goto rxscan1527_scan3147
  rxscan1527_loop3146:
    inc rx1526_pos
    gt rx1526_pos, rx1526_eos, rx1526_fail3142
    repr_bind_attr_int rx1526_cur, rx1526_curclass, "$!from", rx1526_pos
  rxscan1527_scan3147:
    nqp_rxmark rx1526_bstack, rxscan1527_loop3146, rx1526_pos, 0
  rxscan1527_done3148:
    nqp_rxmark rx1526_bstack, rxcap1528_fail3150, rx1526_pos, 0
    nqp_rxmark rx1526_bstack, rxquantr1529_done3152, rx1526_pos, 0
  rxquantr1529_loop3151:
  alt1530_03154:
    nqp_rxmark rx1526_bstack, alt1530_13155, rx1526_pos, 0
    add $I11, rx1526_pos, 1
    gt $I11, rx1526_eos, rx1526_fail3142
    substr $S10, rx1526_tgt, rx1526_pos, 1
    ne $S10, ucs4:"-", rx1526_fail3142
    add rx1526_pos, 1
    goto alt1530_end3153
  alt1530_13155:
    ge rx1526_pos, rx1526_eos, rx1526_fail3142
    substr $S11, rx1526_tgt, rx1526_pos, 1
    index $I11, ucs4:"+", $S11
    lt $I11, 0, rx1526_fail3142
    inc rx1526_pos
  alt1530_end3153:
    nqp_rxpeek $I19, rx1526_bstack, rxquantr1529_done3152
    inc $I19
    inc $I19
    set rx1526_rep, rx1526_bstack[$I19]
    nqp_rxcommit rx1526_bstack, rxquantr1529_done3152
    inc rx1526_rep
  rxquantr1529_done3152:
    nqp_rxpeek $I19, rx1526_bstack, rxcap1528_fail3150
    inc $I19
    set $I11, rx1526_bstack[$I19]
    repr_bind_attr_int rx1526_cur, rx1526_curclass, "$!pos", rx1526_pos
    $P11 = rx1526_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1526_pos)
    rx1526_cstack = rx1526_cur."!cursor_capture"($P11, "sign")
    goto rxcap1528_done3149
  rxcap1528_fail3150:
    goto rx1526_fail3142
  rxcap1528_done3149:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1531_03157
    nqp_push_label $P11, alt1531_13159
    nqp_rxmark rx1526_bstack, alt1531_end3156, -1, 0
    rx1526_cur."!alt"(rx1526_pos, "alt_nfa__38_1360432461.882", $P11)
    goto rx1526_fail3142
  alt1531_03157:
    repr_bind_attr_int rx1526_cur, rx1526_curclass, "$!pos", rx1526_pos
    $P11 = rx1526_cur."dec_number"()
    repr_get_attr_int $I11, $P11, rx1526_curclass, "$!pos"
    lt $I11, 0, rx1526_fail3142
    nqp_rxmark rx1526_bstack, rxsubrule1532_pass3158, -1, 0
  rxsubrule1532_pass3158:
    rx1526_cstack = rx1526_cur."!cursor_capture"($P11, "dec_number")
    repr_get_attr_int rx1526_pos, $P11, rx1526_curclass, "$!pos"
    goto alt1531_end3156
  alt1531_13159:
    repr_bind_attr_int rx1526_cur, rx1526_curclass, "$!pos", rx1526_pos
    $P11 = rx1526_cur."integer"()
    repr_get_attr_int $I11, $P11, rx1526_curclass, "$!pos"
    lt $I11, 0, rx1526_fail3142
    nqp_rxmark rx1526_bstack, rxsubrule1533_pass3160, -1, 0
  rxsubrule1533_pass3160:
    rx1526_cstack = rx1526_cur."!cursor_capture"($P11, "integer")
    repr_get_attr_int rx1526_pos, $P11, rx1526_curclass, "$!pos"
    goto alt1531_end3156
  alt1531_end3156:
    nqp_rxcommit rx1526_bstack, alt1531_end3156
    rx1526_cur."!cursor_pass"(rx1526_pos, "number", 'backtrack'=>1)
    .return (rx1526_cur)
  rx1526_restart3141:
    repr_get_attr_obj rx1526_cstack, rx1526_cur, rx1526_curclass, "$!cstack"
  rx1526_fail3142:
    unless rx1526_bstack, rx1526_done3140
    pop $I19, rx1526_bstack
    if_null rx1526_cstack, rx1526_cstack_done3145
    unless rx1526_cstack, rx1526_cstack_done3145
    dec $I19
    set $P11, rx1526_cstack[$I19]
  rx1526_cstack_done3145:
    pop rx1526_rep, rx1526_bstack
    pop rx1526_pos, rx1526_bstack
    pop $I19, rx1526_bstack
    lt rx1526_pos, -1, rx1526_done3140
    lt rx1526_pos, 0, rx1526_fail3142
    eq $I19, 0, rx1526_fail3142
    nqp_islist $I20, rx1526_cstack
    unless $I20, rx1526_jump3143
    elements $I18, rx1526_bstack
    le $I18, 0, rx1526_cut3144
    dec $I18
    set $I18, rx1526_bstack[$I18]
  rx1526_cut3144:
    assign rx1526_cstack, $I18
  rx1526_jump3143:
    jump $I19
  rx1526_done3140:
    rx1526_cur."!cursor_fail"()
    .return (rx1526_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote" :subid("cuid_152_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1269
    .param pmc self 
    $P5001 = self."!protoregex"("quote")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<apos>" :subid("cuid_153_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1270
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1534_tgt
    .local int rx1534_pos
    .local int rx1534_off
    .local int rx1534_eos
    .local int rx1534_rep
    .local pmc rx1534_cur
    .local pmc rx1534_curclass
    .local pmc rx1534_bstack
    .local pmc rx1534_cstack
    (rx1534_cur, rx1534_tgt, rx1534_pos, rx1534_curclass, rx1534_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1534_cur
    length rx1534_eos, rx1534_tgt
    eq $I19, 1, rx1534_restart3163
    gt rx1534_pos, rx1534_eos, rx1534_fail3164
    repr_get_attr_int $I11, self, rx1534_curclass, "$!from"
    ne $I11, -1, rxscan1535_done3170
    goto rxscan1535_scan3169
  rxscan1535_loop3168:
    inc rx1534_pos
    gt rx1534_pos, rx1534_eos, rx1534_fail3164
    repr_bind_attr_int rx1534_cur, rx1534_curclass, "$!from", rx1534_pos
  rxscan1535_scan3169:
    nqp_rxmark rx1534_bstack, rxscan1535_loop3168, rx1534_pos, 0
  rxscan1535_done3170:
    ge rx1534_pos, rx1534_eos, rx1534_fail3164
    substr $S11, rx1534_tgt, rx1534_pos, 1
    index $I11, ucs4:"'", $S11
    lt $I11, 0, rx1534_fail3164
    repr_bind_attr_int rx1534_cur, rx1534_curclass, "$!pos", rx1534_pos
    $P11 = rx1534_cur."quote_EXPR"(":q")
    repr_get_attr_int $I11, $P11, rx1534_curclass, "$!pos"
    lt $I11, 0, rx1534_fail3164
    nqp_rxmark rx1534_bstack, rxsubrule1536_pass3171, -1, 0
  rxsubrule1536_pass3171:
    rx1534_cstack = rx1534_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1534_pos, $P11, rx1534_curclass, "$!pos"
    rx1534_cur."!cursor_pass"(rx1534_pos, "quote:sym<apos>", 'backtrack'=>1)
    .return (rx1534_cur)
  rx1534_restart3163:
    repr_get_attr_obj rx1534_cstack, rx1534_cur, rx1534_curclass, "$!cstack"
  rx1534_fail3164:
    unless rx1534_bstack, rx1534_done3162
    pop $I19, rx1534_bstack
    if_null rx1534_cstack, rx1534_cstack_done3167
    unless rx1534_cstack, rx1534_cstack_done3167
    dec $I19
    set $P11, rx1534_cstack[$I19]
  rx1534_cstack_done3167:
    pop rx1534_rep, rx1534_bstack
    pop rx1534_pos, rx1534_bstack
    pop $I19, rx1534_bstack
    lt rx1534_pos, -1, rx1534_done3162
    lt rx1534_pos, 0, rx1534_fail3164
    eq $I19, 0, rx1534_fail3164
    nqp_islist $I20, rx1534_cstack
    unless $I20, rx1534_jump3165
    elements $I18, rx1534_bstack
    le $I18, 0, rx1534_cut3166
    dec $I18
    set $I18, rx1534_bstack[$I18]
  rx1534_cut3166:
    assign rx1534_cstack, $I18
  rx1534_jump3165:
    jump $I19
  rx1534_done3162:
    rx1534_cur."!cursor_fail"()
    .return (rx1534_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<dblq>" :subid("cuid_154_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1271
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1537_tgt
    .local int rx1537_pos
    .local int rx1537_off
    .local int rx1537_eos
    .local int rx1537_rep
    .local pmc rx1537_cur
    .local pmc rx1537_curclass
    .local pmc rx1537_bstack
    .local pmc rx1537_cstack
    (rx1537_cur, rx1537_tgt, rx1537_pos, rx1537_curclass, rx1537_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1537_cur
    length rx1537_eos, rx1537_tgt
    eq $I19, 1, rx1537_restart3174
    gt rx1537_pos, rx1537_eos, rx1537_fail3175
    repr_get_attr_int $I11, self, rx1537_curclass, "$!from"
    ne $I11, -1, rxscan1538_done3181
    goto rxscan1538_scan3180
  rxscan1538_loop3179:
    inc rx1537_pos
    gt rx1537_pos, rx1537_eos, rx1537_fail3175
    repr_bind_attr_int rx1537_cur, rx1537_curclass, "$!from", rx1537_pos
  rxscan1538_scan3180:
    nqp_rxmark rx1537_bstack, rxscan1538_loop3179, rx1537_pos, 0
  rxscan1538_done3181:
    ge rx1537_pos, rx1537_eos, rx1537_fail3175
    substr $S11, rx1537_tgt, rx1537_pos, 1
    index $I11, ucs4:"\"", $S11
    lt $I11, 0, rx1537_fail3175
    repr_bind_attr_int rx1537_cur, rx1537_curclass, "$!pos", rx1537_pos
    $P11 = rx1537_cur."quote_EXPR"(":qq")
    repr_get_attr_int $I11, $P11, rx1537_curclass, "$!pos"
    lt $I11, 0, rx1537_fail3175
    nqp_rxmark rx1537_bstack, rxsubrule1539_pass3182, -1, 0
  rxsubrule1539_pass3182:
    rx1537_cstack = rx1537_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1537_pos, $P11, rx1537_curclass, "$!pos"
    rx1537_cur."!cursor_pass"(rx1537_pos, "quote:sym<dblq>", 'backtrack'=>1)
    .return (rx1537_cur)
  rx1537_restart3174:
    repr_get_attr_obj rx1537_cstack, rx1537_cur, rx1537_curclass, "$!cstack"
  rx1537_fail3175:
    unless rx1537_bstack, rx1537_done3173
    pop $I19, rx1537_bstack
    if_null rx1537_cstack, rx1537_cstack_done3178
    unless rx1537_cstack, rx1537_cstack_done3178
    dec $I19
    set $P11, rx1537_cstack[$I19]
  rx1537_cstack_done3178:
    pop rx1537_rep, rx1537_bstack
    pop rx1537_pos, rx1537_bstack
    pop $I19, rx1537_bstack
    lt rx1537_pos, -1, rx1537_done3173
    lt rx1537_pos, 0, rx1537_fail3175
    eq $I19, 0, rx1537_fail3175
    nqp_islist $I20, rx1537_cstack
    unless $I20, rx1537_jump3176
    elements $I18, rx1537_bstack
    le $I18, 0, rx1537_cut3177
    dec $I18
    set $I18, rx1537_bstack[$I18]
  rx1537_cut3177:
    assign rx1537_cstack, $I18
  rx1537_jump3176:
    jump $I19
  rx1537_done3173:
    rx1537_cur."!cursor_fail"()
    .return (rx1537_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<q>" :subid("cuid_155_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1272
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1540_tgt
    .local int rx1540_pos
    .local int rx1540_off
    .local int rx1540_eos
    .local int rx1540_rep
    .local pmc rx1540_cur
    .local pmc rx1540_curclass
    .local pmc rx1540_bstack
    .local pmc rx1540_cstack
    (rx1540_cur, rx1540_tgt, rx1540_pos, rx1540_curclass, rx1540_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1540_cur
    length rx1540_eos, rx1540_tgt
    eq $I19, 1, rx1540_restart3185
    gt rx1540_pos, rx1540_eos, rx1540_fail3186
    repr_get_attr_int $I11, self, rx1540_curclass, "$!from"
    ne $I11, -1, rxscan1541_done3192
    goto rxscan1541_scan3191
  rxscan1541_loop3190:
    inc rx1540_pos
    gt rx1540_pos, rx1540_eos, rx1540_fail3186
    repr_bind_attr_int rx1540_cur, rx1540_curclass, "$!from", rx1540_pos
  rxscan1541_scan3191:
    nqp_rxmark rx1540_bstack, rxscan1541_loop3190, rx1540_pos, 0
  rxscan1541_done3192:
    nqp_rxmark rx1540_bstack, rxcap1542_fail3194, rx1540_pos, 0
    add $I11, rx1540_pos, 1
    gt $I11, rx1540_eos, rx1540_fail3186
    substr $S10, rx1540_tgt, rx1540_pos, 1
    ne $S10, ucs4:"q", rx1540_fail3186
    add rx1540_pos, 1
    nqp_rxpeek $I19, rx1540_bstack, rxcap1542_fail3194
    inc $I19
    set $I11, rx1540_bstack[$I19]
    repr_bind_attr_int rx1540_cur, rx1540_curclass, "$!pos", rx1540_pos
    $P11 = rx1540_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1540_pos)
    rx1540_cstack = rx1540_cur."!cursor_capture"($P11, "sym")
    goto rxcap1542_done3193
  rxcap1542_fail3194:
    goto rx1540_fail3186
  rxcap1542_done3193:
    le rx1540_pos, 0, rx1540_fail3186
    is_cclass $I11, .CCLASS_WORD, rx1540_tgt, rx1540_pos
    if $I11, rx1540_fail3186
    sub $I11, rx1540_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx1540_tgt, $I11
    unless $I11, rx1540_fail3186
    ge rx1540_pos, rx1540_eos, rx1540_fail3186
    substr $S11, rx1540_tgt, rx1540_pos, 1
    index $I11, ucs4:"(", $S11
    ge $I11, 0, rx1540_fail3186
    repr_bind_attr_int rx1540_cur, rx1540_curclass, "$!pos", rx1540_pos
    $P11 = rx1540_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1540_curclass, "$!pos"
    lt $I11, 0, rx1540_fail3186
    repr_get_attr_int rx1540_pos, $P11, rx1540_curclass, "$!pos"
    repr_bind_attr_int rx1540_cur, rx1540_curclass, "$!pos", rx1540_pos
    $P11 = rx1540_cur."quote_EXPR"(":q")
    repr_get_attr_int $I11, $P11, rx1540_curclass, "$!pos"
    lt $I11, 0, rx1540_fail3186
    nqp_rxmark rx1540_bstack, rxsubrule1545_pass3197, -1, 0
  rxsubrule1545_pass3197:
    rx1540_cstack = rx1540_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1540_pos, $P11, rx1540_curclass, "$!pos"
    rx1540_cur."!cursor_pass"(rx1540_pos, "quote:sym<q>", 'backtrack'=>1)
    .return (rx1540_cur)
  rx1540_restart3185:
    repr_get_attr_obj rx1540_cstack, rx1540_cur, rx1540_curclass, "$!cstack"
  rx1540_fail3186:
    unless rx1540_bstack, rx1540_done3184
    pop $I19, rx1540_bstack
    if_null rx1540_cstack, rx1540_cstack_done3189
    unless rx1540_cstack, rx1540_cstack_done3189
    dec $I19
    set $P11, rx1540_cstack[$I19]
  rx1540_cstack_done3189:
    pop rx1540_rep, rx1540_bstack
    pop rx1540_pos, rx1540_bstack
    pop $I19, rx1540_bstack
    lt rx1540_pos, -1, rx1540_done3184
    lt rx1540_pos, 0, rx1540_fail3186
    eq $I19, 0, rx1540_fail3186
    nqp_islist $I20, rx1540_cstack
    unless $I20, rx1540_jump3187
    elements $I18, rx1540_bstack
    le $I18, 0, rx1540_cut3188
    dec $I18
    set $I18, rx1540_bstack[$I18]
  rx1540_cut3188:
    assign rx1540_cstack, $I18
  rx1540_jump3187:
    jump $I19
  rx1540_done3184:
    rx1540_cur."!cursor_fail"()
    .return (rx1540_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<qq>" :subid("cuid_156_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1273
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1546_tgt
    .local int rx1546_pos
    .local int rx1546_off
    .local int rx1546_eos
    .local int rx1546_rep
    .local pmc rx1546_cur
    .local pmc rx1546_curclass
    .local pmc rx1546_bstack
    .local pmc rx1546_cstack
    (rx1546_cur, rx1546_tgt, rx1546_pos, rx1546_curclass, rx1546_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1546_cur
    length rx1546_eos, rx1546_tgt
    eq $I19, 1, rx1546_restart3200
    gt rx1546_pos, rx1546_eos, rx1546_fail3201
    repr_get_attr_int $I11, self, rx1546_curclass, "$!from"
    ne $I11, -1, rxscan1547_done3207
    goto rxscan1547_scan3206
  rxscan1547_loop3205:
    inc rx1546_pos
    gt rx1546_pos, rx1546_eos, rx1546_fail3201
    repr_bind_attr_int rx1546_cur, rx1546_curclass, "$!from", rx1546_pos
  rxscan1547_scan3206:
    nqp_rxmark rx1546_bstack, rxscan1547_loop3205, rx1546_pos, 0
  rxscan1547_done3207:
    nqp_rxmark rx1546_bstack, rxcap1548_fail3209, rx1546_pos, 0
    add $I11, rx1546_pos, 2
    gt $I11, rx1546_eos, rx1546_fail3201
    substr $S10, rx1546_tgt, rx1546_pos, 2
    ne $S10, ucs4:"qq", rx1546_fail3201
    add rx1546_pos, 2
    nqp_rxpeek $I19, rx1546_bstack, rxcap1548_fail3209
    inc $I19
    set $I11, rx1546_bstack[$I19]
    repr_bind_attr_int rx1546_cur, rx1546_curclass, "$!pos", rx1546_pos
    $P11 = rx1546_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1546_pos)
    rx1546_cstack = rx1546_cur."!cursor_capture"($P11, "sym")
    goto rxcap1548_done3208
  rxcap1548_fail3209:
    goto rx1546_fail3201
  rxcap1548_done3208:
    le rx1546_pos, 0, rx1546_fail3201
    is_cclass $I11, .CCLASS_WORD, rx1546_tgt, rx1546_pos
    if $I11, rx1546_fail3201
    sub $I11, rx1546_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx1546_tgt, $I11
    unless $I11, rx1546_fail3201
    ge rx1546_pos, rx1546_eos, rx1546_fail3201
    substr $S11, rx1546_tgt, rx1546_pos, 1
    index $I11, ucs4:"(", $S11
    ge $I11, 0, rx1546_fail3201
    repr_bind_attr_int rx1546_cur, rx1546_curclass, "$!pos", rx1546_pos
    $P11 = rx1546_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1546_curclass, "$!pos"
    lt $I11, 0, rx1546_fail3201
    repr_get_attr_int rx1546_pos, $P11, rx1546_curclass, "$!pos"
    repr_bind_attr_int rx1546_cur, rx1546_curclass, "$!pos", rx1546_pos
    $P11 = rx1546_cur."quote_EXPR"(":qq")
    repr_get_attr_int $I11, $P11, rx1546_curclass, "$!pos"
    lt $I11, 0, rx1546_fail3201
    nqp_rxmark rx1546_bstack, rxsubrule1551_pass3212, -1, 0
  rxsubrule1551_pass3212:
    rx1546_cstack = rx1546_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1546_pos, $P11, rx1546_curclass, "$!pos"
    rx1546_cur."!cursor_pass"(rx1546_pos, "quote:sym<qq>", 'backtrack'=>1)
    .return (rx1546_cur)
  rx1546_restart3200:
    repr_get_attr_obj rx1546_cstack, rx1546_cur, rx1546_curclass, "$!cstack"
  rx1546_fail3201:
    unless rx1546_bstack, rx1546_done3199
    pop $I19, rx1546_bstack
    if_null rx1546_cstack, rx1546_cstack_done3204
    unless rx1546_cstack, rx1546_cstack_done3204
    dec $I19
    set $P11, rx1546_cstack[$I19]
  rx1546_cstack_done3204:
    pop rx1546_rep, rx1546_bstack
    pop rx1546_pos, rx1546_bstack
    pop $I19, rx1546_bstack
    lt rx1546_pos, -1, rx1546_done3199
    lt rx1546_pos, 0, rx1546_fail3201
    eq $I19, 0, rx1546_fail3201
    nqp_islist $I20, rx1546_cstack
    unless $I20, rx1546_jump3202
    elements $I18, rx1546_bstack
    le $I18, 0, rx1546_cut3203
    dec $I18
    set $I18, rx1546_bstack[$I18]
  rx1546_cut3203:
    assign rx1546_cstack, $I18
  rx1546_jump3202:
    jump $I19
  rx1546_done3199:
    rx1546_cur."!cursor_fail"()
    .return (rx1546_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<Q>" :subid("cuid_157_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1274
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1552_tgt
    .local int rx1552_pos
    .local int rx1552_off
    .local int rx1552_eos
    .local int rx1552_rep
    .local pmc rx1552_cur
    .local pmc rx1552_curclass
    .local pmc rx1552_bstack
    .local pmc rx1552_cstack
    (rx1552_cur, rx1552_tgt, rx1552_pos, rx1552_curclass, rx1552_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1552_cur
    length rx1552_eos, rx1552_tgt
    eq $I19, 1, rx1552_restart3215
    gt rx1552_pos, rx1552_eos, rx1552_fail3216
    repr_get_attr_int $I11, self, rx1552_curclass, "$!from"
    ne $I11, -1, rxscan1553_done3222
    goto rxscan1553_scan3221
  rxscan1553_loop3220:
    inc rx1552_pos
    gt rx1552_pos, rx1552_eos, rx1552_fail3216
    repr_bind_attr_int rx1552_cur, rx1552_curclass, "$!from", rx1552_pos
  rxscan1553_scan3221:
    nqp_rxmark rx1552_bstack, rxscan1553_loop3220, rx1552_pos, 0
  rxscan1553_done3222:
    nqp_rxmark rx1552_bstack, rxcap1554_fail3224, rx1552_pos, 0
    add $I11, rx1552_pos, 1
    gt $I11, rx1552_eos, rx1552_fail3216
    substr $S10, rx1552_tgt, rx1552_pos, 1
    ne $S10, ucs4:"Q", rx1552_fail3216
    add rx1552_pos, 1
    nqp_rxpeek $I19, rx1552_bstack, rxcap1554_fail3224
    inc $I19
    set $I11, rx1552_bstack[$I19]
    repr_bind_attr_int rx1552_cur, rx1552_curclass, "$!pos", rx1552_pos
    $P11 = rx1552_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1552_pos)
    rx1552_cstack = rx1552_cur."!cursor_capture"($P11, "sym")
    goto rxcap1554_done3223
  rxcap1554_fail3224:
    goto rx1552_fail3216
  rxcap1554_done3223:
    le rx1552_pos, 0, rx1552_fail3216
    is_cclass $I11, .CCLASS_WORD, rx1552_tgt, rx1552_pos
    if $I11, rx1552_fail3216
    sub $I11, rx1552_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx1552_tgt, $I11
    unless $I11, rx1552_fail3216
    ge rx1552_pos, rx1552_eos, rx1552_fail3216
    substr $S11, rx1552_tgt, rx1552_pos, 1
    index $I11, ucs4:"(", $S11
    ge $I11, 0, rx1552_fail3216
    repr_bind_attr_int rx1552_cur, rx1552_curclass, "$!pos", rx1552_pos
    $P11 = rx1552_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1552_curclass, "$!pos"
    lt $I11, 0, rx1552_fail3216
    repr_get_attr_int rx1552_pos, $P11, rx1552_curclass, "$!pos"
    repr_bind_attr_int rx1552_cur, rx1552_curclass, "$!pos", rx1552_pos
    $P11 = rx1552_cur."quote_EXPR"()
    repr_get_attr_int $I11, $P11, rx1552_curclass, "$!pos"
    lt $I11, 0, rx1552_fail3216
    nqp_rxmark rx1552_bstack, rxsubrule1557_pass3227, -1, 0
  rxsubrule1557_pass3227:
    rx1552_cstack = rx1552_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1552_pos, $P11, rx1552_curclass, "$!pos"
    rx1552_cur."!cursor_pass"(rx1552_pos, "quote:sym<Q>", 'backtrack'=>1)
    .return (rx1552_cur)
  rx1552_restart3215:
    repr_get_attr_obj rx1552_cstack, rx1552_cur, rx1552_curclass, "$!cstack"
  rx1552_fail3216:
    unless rx1552_bstack, rx1552_done3214
    pop $I19, rx1552_bstack
    if_null rx1552_cstack, rx1552_cstack_done3219
    unless rx1552_cstack, rx1552_cstack_done3219
    dec $I19
    set $P11, rx1552_cstack[$I19]
  rx1552_cstack_done3219:
    pop rx1552_rep, rx1552_bstack
    pop rx1552_pos, rx1552_bstack
    pop $I19, rx1552_bstack
    lt rx1552_pos, -1, rx1552_done3214
    lt rx1552_pos, 0, rx1552_fail3216
    eq $I19, 0, rx1552_fail3216
    nqp_islist $I20, rx1552_cstack
    unless $I20, rx1552_jump3217
    elements $I18, rx1552_bstack
    le $I18, 0, rx1552_cut3218
    dec $I18
    set $I18, rx1552_bstack[$I18]
  rx1552_cut3218:
    assign rx1552_cstack, $I18
  rx1552_jump3217:
    jump $I19
  rx1552_done3214:
    rx1552_cur."!cursor_fail"()
    .return (rx1552_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<Q:PIR>" :subid("cuid_158_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1275
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1558_tgt
    .local int rx1558_pos
    .local int rx1558_off
    .local int rx1558_eos
    .local int rx1558_rep
    .local pmc rx1558_cur
    .local pmc rx1558_curclass
    .local pmc rx1558_bstack
    .local pmc rx1558_cstack
    (rx1558_cur, rx1558_tgt, rx1558_pos, rx1558_curclass, rx1558_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1558_cur
    length rx1558_eos, rx1558_tgt
    eq $I19, 1, rx1558_restart3230
    gt rx1558_pos, rx1558_eos, rx1558_fail3231
    repr_get_attr_int $I11, self, rx1558_curclass, "$!from"
    ne $I11, -1, rxscan1559_done3237
    goto rxscan1559_scan3236
  rxscan1559_loop3235:
    inc rx1558_pos
    gt rx1558_pos, rx1558_eos, rx1558_fail3231
    repr_bind_attr_int rx1558_cur, rx1558_curclass, "$!from", rx1558_pos
  rxscan1559_scan3236:
    nqp_rxmark rx1558_bstack, rxscan1559_loop3235, rx1558_pos, 0
  rxscan1559_done3237:
    nqp_rxmark rx1558_bstack, rxcap1560_fail3239, rx1558_pos, 0
    add $I11, rx1558_pos, 5
    gt $I11, rx1558_eos, rx1558_fail3231
    substr $S10, rx1558_tgt, rx1558_pos, 5
    ne $S10, ucs4:"Q:PIR", rx1558_fail3231
    add rx1558_pos, 5
    nqp_rxpeek $I19, rx1558_bstack, rxcap1560_fail3239
    inc $I19
    set $I11, rx1558_bstack[$I19]
    repr_bind_attr_int rx1558_cur, rx1558_curclass, "$!pos", rx1558_pos
    $P11 = rx1558_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1558_pos)
    rx1558_cstack = rx1558_cur."!cursor_capture"($P11, "sym")
    goto rxcap1560_done3238
  rxcap1560_fail3239:
    goto rx1558_fail3231
  rxcap1560_done3238:
    repr_bind_attr_int rx1558_cur, rx1558_curclass, "$!pos", rx1558_pos
    $P11 = rx1558_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1558_curclass, "$!pos"
    lt $I11, 0, rx1558_fail3231
    repr_get_attr_int rx1558_pos, $P11, rx1558_curclass, "$!pos"
    repr_bind_attr_int rx1558_cur, rx1558_curclass, "$!pos", rx1558_pos
    $P11 = rx1558_cur."quote_EXPR"()
    repr_get_attr_int $I11, $P11, rx1558_curclass, "$!pos"
    lt $I11, 0, rx1558_fail3231
    nqp_rxmark rx1558_bstack, rxsubrule1562_pass3241, -1, 0
  rxsubrule1562_pass3241:
    rx1558_cstack = rx1558_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1558_pos, $P11, rx1558_curclass, "$!pos"
    rx1558_cur."!cursor_pass"(rx1558_pos, "quote:sym<Q:PIR>", 'backtrack'=>1)
    .return (rx1558_cur)
  rx1558_restart3230:
    repr_get_attr_obj rx1558_cstack, rx1558_cur, rx1558_curclass, "$!cstack"
  rx1558_fail3231:
    unless rx1558_bstack, rx1558_done3229
    pop $I19, rx1558_bstack
    if_null rx1558_cstack, rx1558_cstack_done3234
    unless rx1558_cstack, rx1558_cstack_done3234
    dec $I19
    set $P11, rx1558_cstack[$I19]
  rx1558_cstack_done3234:
    pop rx1558_rep, rx1558_bstack
    pop rx1558_pos, rx1558_bstack
    pop $I19, rx1558_bstack
    lt rx1558_pos, -1, rx1558_done3229
    lt rx1558_pos, 0, rx1558_fail3231
    eq $I19, 0, rx1558_fail3231
    nqp_islist $I20, rx1558_cstack
    unless $I20, rx1558_jump3232
    elements $I18, rx1558_bstack
    le $I18, 0, rx1558_cut3233
    dec $I18
    set $I18, rx1558_bstack[$I18]
  rx1558_cut3233:
    assign rx1558_cstack, $I18
  rx1558_jump3232:
    jump $I19
  rx1558_done3229:
    rx1558_cur."!cursor_fail"()
    .return (rx1558_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym</ />" :subid("cuid_159_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1276
    .param pmc _lex_param_0 
    .lex "%*RX", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_270 
    new $P5001, 'Hash'
    set $P101, $P5001
    set self, _lex_param_0
    .local string rx1563_tgt
    .local int rx1563_pos
    .local int rx1563_off
    .local int rx1563_eos
    .local int rx1563_rep
    .local pmc rx1563_cur
    .local pmc rx1563_curclass
    .local pmc rx1563_bstack
    .local pmc rx1563_cstack
    (rx1563_cur, rx1563_tgt, rx1563_pos, rx1563_curclass, rx1563_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1563_cur
    length rx1563_eos, rx1563_tgt
    eq $I19, 1, rx1563_restart3244
    gt rx1563_pos, rx1563_eos, rx1563_fail3245
    repr_get_attr_int $I11, self, rx1563_curclass, "$!from"
    ne $I11, -1, rxscan1564_done3251
    goto rxscan1564_scan3250
  rxscan1564_loop3249:
    inc rx1563_pos
    gt rx1563_pos, rx1563_eos, rx1563_fail3245
    repr_bind_attr_int rx1563_cur, rx1563_curclass, "$!from", rx1563_pos
  rxscan1564_scan3250:
    nqp_rxmark rx1563_bstack, rxscan1564_loop3249, rx1563_pos, 0
  rxscan1564_done3251:
    add $I11, rx1563_pos, 1
    gt $I11, rx1563_eos, rx1563_fail3245
    substr $S10, rx1563_tgt, rx1563_pos, 1
    ne $S10, ucs4:"/", rx1563_fail3245
    add rx1563_pos, 1
    repr_bind_attr_int rx1563_cur, rx1563_curclass, "$!pos", rx1563_pos
    $P11 = rx1563_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx1563_curclass, "$!pos"
    lt $I11, 0, rx1563_fail3245
    repr_get_attr_int rx1563_pos, $P11, rx1563_curclass, "$!pos"
    repr_bind_attr_int rx1563_cur, rx1563_curclass, "$!pos", rx1563_pos
    store_lex unicode:"$\x{a2}", rx1563_cur
    unless_null $P101, fallback3253
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5002, $P5003
    set fb_tmp_270, $P5002
    repr_defined $I5001, fb_tmp_270
    unless $I5001 goto if1566_else3254 
    set $P5004, fb_tmp_270["%RX"]
    set $P5006, $P5004
    goto if1566_end3255
  if1566_else3254:
    null $P5005
    set $P5006, $P5005
  if1566_end3255:
    unless_null $P5006, vivi_15673256
    nqp_get_sc_object $P5008, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5007, $P5008
    new $P5009, 'Hash'
    set $P5007["%RX"], $P5009
    set $P5006, $P5009
  vivi_15673256:
    unless_null $P5006, vivi_15683257
    die "Contextual %*RX not found"
    box $P5010, "Contextual %*RX not found"
    set $P5006, $P5010
  vivi_15683257:
    set $P101, $P5006
  fallback3253:
    repr_bind_attr_int rx1563_cur, rx1563_curclass, "$!pos", rx1563_pos
    $P11 = rx1563_cur."LANG"("Regex", "nibbler")
    repr_get_attr_int $I11, $P11, rx1563_curclass, "$!pos"
    lt $I11, 0, rx1563_fail3245
    nqp_rxmark rx1563_bstack, rxsubrule1569_pass3258, -1, 0
  rxsubrule1569_pass3258:
    rx1563_cstack = rx1563_cur."!cursor_capture"($P11, "p6regex")
    repr_get_attr_int rx1563_pos, $P11, rx1563_curclass, "$!pos"
    add $I11, rx1563_pos, 1
    gt $I11, rx1563_eos, rx1563_fail3245
    substr $S10, rx1563_tgt, rx1563_pos, 1
    ne $S10, ucs4:"/", rx1563_fail3245
    add rx1563_pos, 1
    rx1563_cur."!cursor_pass"(rx1563_pos, "quote:sym</ />", 'backtrack'=>1)
    .return (rx1563_cur)
  rx1563_restart3244:
    repr_get_attr_obj rx1563_cstack, rx1563_cur, rx1563_curclass, "$!cstack"
  rx1563_fail3245:
    unless rx1563_bstack, rx1563_done3243
    pop $I19, rx1563_bstack
    if_null rx1563_cstack, rx1563_cstack_done3248
    unless rx1563_cstack, rx1563_cstack_done3248
    dec $I19
    set $P11, rx1563_cstack[$I19]
  rx1563_cstack_done3248:
    pop rx1563_rep, rx1563_bstack
    pop rx1563_pos, rx1563_bstack
    pop $I19, rx1563_bstack
    lt rx1563_pos, -1, rx1563_done3243
    lt rx1563_pos, 0, rx1563_fail3245
    eq $I19, 0, rx1563_fail3245
    nqp_islist $I20, rx1563_cstack
    unless $I20, rx1563_jump3246
    elements $I18, rx1563_bstack
    le $I18, 0, rx1563_cut3247
    dec $I18
    set $I18, rx1563_bstack[$I18]
  rx1563_cut3247:
    assign rx1563_cstack, $I18
  rx1563_jump3246:
    jump $I19
  rx1563_done3243:
    rx1563_cur."!cursor_fail"()
    .return (rx1563_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<$>" :subid("cuid_160_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1284
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1570_tgt
    .local int rx1570_pos
    .local int rx1570_off
    .local int rx1570_eos
    .local int rx1570_rep
    .local pmc rx1570_cur
    .local pmc rx1570_curclass
    .local pmc rx1570_bstack
    .local pmc rx1570_cstack
    (rx1570_cur, rx1570_tgt, rx1570_pos, rx1570_curclass, rx1570_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1570_cur
    length rx1570_eos, rx1570_tgt
    eq $I19, 1, rx1570_restart3261
    gt rx1570_pos, rx1570_eos, rx1570_fail3262
    repr_get_attr_int $I11, self, rx1570_curclass, "$!from"
    ne $I11, -1, rxscan1571_done3268
    goto rxscan1571_scan3267
  rxscan1571_loop3266:
    inc rx1570_pos
    gt rx1570_pos, rx1570_eos, rx1570_fail3262
    repr_bind_attr_int rx1570_cur, rx1570_curclass, "$!from", rx1570_pos
  rxscan1571_scan3267:
    nqp_rxmark rx1570_bstack, rxscan1571_loop3266, rx1570_pos, 0
  rxscan1571_done3268:
    ge rx1570_pos, rx1570_eos, rx1570_fail3262
    substr $S11, rx1570_tgt, rx1570_pos, 1
    index $I11, ucs4:"$", $S11
    lt $I11, 0, rx1570_fail3262
    repr_bind_attr_int rx1570_cur, rx1570_curclass, "$!pos", rx1570_pos
    $P11 = rx1570_cur."quotemod_check"("s")
    repr_get_attr_int $I11, $P11, rx1570_curclass, "$!pos"
    lt $I11, 0, rx1570_fail3262
    repr_bind_attr_int rx1570_cur, rx1570_curclass, "$!pos", rx1570_pos
    $P11 = rx1570_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1570_curclass, "$!pos"
    lt $I11, 0, rx1570_fail3262
    nqp_rxmark rx1570_bstack, rxsubrule1572_pass3269, -1, 0
  rxsubrule1572_pass3269:
    rx1570_cstack = rx1570_cur."!cursor_capture"($P11, "variable")
    repr_get_attr_int rx1570_pos, $P11, rx1570_curclass, "$!pos"
    rx1570_cur."!cursor_pass"(rx1570_pos, "quote_escape:sym<$>", 'backtrack'=>1)
    .return (rx1570_cur)
  rx1570_restart3261:
    repr_get_attr_obj rx1570_cstack, rx1570_cur, rx1570_curclass, "$!cstack"
  rx1570_fail3262:
    unless rx1570_bstack, rx1570_done3260
    pop $I19, rx1570_bstack
    if_null rx1570_cstack, rx1570_cstack_done3265
    unless rx1570_cstack, rx1570_cstack_done3265
    dec $I19
    set $P11, rx1570_cstack[$I19]
  rx1570_cstack_done3265:
    pop rx1570_rep, rx1570_bstack
    pop rx1570_pos, rx1570_bstack
    pop $I19, rx1570_bstack
    lt rx1570_pos, -1, rx1570_done3260
    lt rx1570_pos, 0, rx1570_fail3262
    eq $I19, 0, rx1570_fail3262
    nqp_islist $I20, rx1570_cstack
    unless $I20, rx1570_jump3263
    elements $I18, rx1570_bstack
    le $I18, 0, rx1570_cut3264
    dec $I18
    set $I18, rx1570_bstack[$I18]
  rx1570_cut3264:
    assign rx1570_cstack, $I18
  rx1570_jump3263:
    jump $I19
  rx1570_done3260:
    rx1570_cur."!cursor_fail"()
    .return (rx1570_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<{ }>" :subid("cuid_161_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1285
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1573_tgt
    .local int rx1573_pos
    .local int rx1573_off
    .local int rx1573_eos
    .local int rx1573_rep
    .local pmc rx1573_cur
    .local pmc rx1573_curclass
    .local pmc rx1573_bstack
    .local pmc rx1573_cstack
    (rx1573_cur, rx1573_tgt, rx1573_pos, rx1573_curclass, rx1573_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1573_cur
    length rx1573_eos, rx1573_tgt
    eq $I19, 1, rx1573_restart3272
    gt rx1573_pos, rx1573_eos, rx1573_fail3273
    repr_get_attr_int $I11, self, rx1573_curclass, "$!from"
    ne $I11, -1, rxscan1574_done3279
    goto rxscan1574_scan3278
  rxscan1574_loop3277:
    inc rx1573_pos
    gt rx1573_pos, rx1573_eos, rx1573_fail3273
    repr_bind_attr_int rx1573_cur, rx1573_curclass, "$!from", rx1573_pos
  rxscan1574_scan3278:
    nqp_rxmark rx1573_bstack, rxscan1574_loop3277, rx1573_pos, 0
  rxscan1574_done3279:
    ge rx1573_pos, rx1573_eos, rx1573_fail3273
    substr $S11, rx1573_tgt, rx1573_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx1573_fail3273
    repr_bind_attr_int rx1573_cur, rx1573_curclass, "$!pos", rx1573_pos
    $P11 = rx1573_cur."quotemod_check"("c")
    repr_get_attr_int $I11, $P11, rx1573_curclass, "$!pos"
    lt $I11, 0, rx1573_fail3273
    repr_bind_attr_int rx1573_cur, rx1573_curclass, "$!pos", rx1573_pos
    $P11 = rx1573_cur."block"()
    repr_get_attr_int $I11, $P11, rx1573_curclass, "$!pos"
    lt $I11, 0, rx1573_fail3273
    nqp_rxmark rx1573_bstack, rxsubrule1575_pass3280, -1, 0
  rxsubrule1575_pass3280:
    rx1573_cstack = rx1573_cur."!cursor_capture"($P11, "block")
    repr_get_attr_int rx1573_pos, $P11, rx1573_curclass, "$!pos"
    rx1573_cur."!cursor_pass"(rx1573_pos, "quote_escape:sym<{ }>", 'backtrack'=>1)
    .return (rx1573_cur)
  rx1573_restart3272:
    repr_get_attr_obj rx1573_cstack, rx1573_cur, rx1573_curclass, "$!cstack"
  rx1573_fail3273:
    unless rx1573_bstack, rx1573_done3271
    pop $I19, rx1573_bstack
    if_null rx1573_cstack, rx1573_cstack_done3276
    unless rx1573_cstack, rx1573_cstack_done3276
    dec $I19
    set $P11, rx1573_cstack[$I19]
  rx1573_cstack_done3276:
    pop rx1573_rep, rx1573_bstack
    pop rx1573_pos, rx1573_bstack
    pop $I19, rx1573_bstack
    lt rx1573_pos, -1, rx1573_done3271
    lt rx1573_pos, 0, rx1573_fail3273
    eq $I19, 0, rx1573_fail3273
    nqp_islist $I20, rx1573_cstack
    unless $I20, rx1573_jump3274
    elements $I18, rx1573_bstack
    le $I18, 0, rx1573_cut3275
    dec $I18
    set $I18, rx1573_bstack[$I18]
  rx1573_cut3275:
    assign rx1573_cstack, $I18
  rx1573_jump3274:
    jump $I19
  rx1573_done3271:
    rx1573_cur."!cursor_fail"()
    .return (rx1573_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<esc>" :subid("cuid_162_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1286
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1576_tgt
    .local int rx1576_pos
    .local int rx1576_off
    .local int rx1576_eos
    .local int rx1576_rep
    .local pmc rx1576_cur
    .local pmc rx1576_curclass
    .local pmc rx1576_bstack
    .local pmc rx1576_cstack
    (rx1576_cur, rx1576_tgt, rx1576_pos, rx1576_curclass, rx1576_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1576_cur
    length rx1576_eos, rx1576_tgt
    eq $I19, 1, rx1576_restart3283
    gt rx1576_pos, rx1576_eos, rx1576_fail3284
    repr_get_attr_int $I11, self, rx1576_curclass, "$!from"
    ne $I11, -1, rxscan1577_done3290
    goto rxscan1577_scan3289
  rxscan1577_loop3288:
    inc rx1576_pos
    gt rx1576_pos, rx1576_eos, rx1576_fail3284
    repr_bind_attr_int rx1576_cur, rx1576_curclass, "$!from", rx1576_pos
  rxscan1577_scan3289:
    nqp_rxmark rx1576_bstack, rxscan1577_loop3288, rx1576_pos, 0
  rxscan1577_done3290:
    add $I11, rx1576_pos, 2
    gt $I11, rx1576_eos, rx1576_fail3284
    substr $S10, rx1576_tgt, rx1576_pos, 2
    ne $S10, ucs4:"\\e", rx1576_fail3284
    add rx1576_pos, 2
    repr_bind_attr_int rx1576_cur, rx1576_curclass, "$!pos", rx1576_pos
    $P11 = rx1576_cur."quotemod_check"("b")
    repr_get_attr_int $I11, $P11, rx1576_curclass, "$!pos"
    lt $I11, 0, rx1576_fail3284
    rx1576_cur."!cursor_pass"(rx1576_pos, "quote_escape:sym<esc>", 'backtrack'=>1)
    .return (rx1576_cur)
  rx1576_restart3283:
    repr_get_attr_obj rx1576_cstack, rx1576_cur, rx1576_curclass, "$!cstack"
  rx1576_fail3284:
    unless rx1576_bstack, rx1576_done3282
    pop $I19, rx1576_bstack
    if_null rx1576_cstack, rx1576_cstack_done3287
    unless rx1576_cstack, rx1576_cstack_done3287
    dec $I19
    set $P11, rx1576_cstack[$I19]
  rx1576_cstack_done3287:
    pop rx1576_rep, rx1576_bstack
    pop rx1576_pos, rx1576_bstack
    pop $I19, rx1576_bstack
    lt rx1576_pos, -1, rx1576_done3282
    lt rx1576_pos, 0, rx1576_fail3284
    eq $I19, 0, rx1576_fail3284
    nqp_islist $I20, rx1576_cstack
    unless $I20, rx1576_jump3285
    elements $I18, rx1576_bstack
    le $I18, 0, rx1576_cut3286
    dec $I18
    set $I18, rx1576_bstack[$I18]
  rx1576_cut3286:
    assign rx1576_cstack, $I18
  rx1576_jump3285:
    jump $I19
  rx1576_done3282:
    rx1576_cur."!cursor_fail"()
    .return (rx1576_cur) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<( )>" :subid("cuid_163_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1288
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1578_tgt
    .local int rx1578_pos
    .local int rx1578_off
    .local int rx1578_eos
    .local int rx1578_rep
    .local pmc rx1578_cur
    .local pmc rx1578_curclass
    .local pmc rx1578_bstack
    .local pmc rx1578_cstack
    (rx1578_cur, rx1578_tgt, rx1578_pos, rx1578_curclass, rx1578_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1578_cur
    length rx1578_eos, rx1578_tgt
    eq $I19, 1, rx1578_restart3293
    gt rx1578_pos, rx1578_eos, rx1578_fail3294
    repr_get_attr_int $I11, self, rx1578_curclass, "$!from"
    ne $I11, -1, rxscan1579_done3300
    goto rxscan1579_scan3299
  rxscan1579_loop3298:
    inc rx1578_pos
    gt rx1578_pos, rx1578_eos, rx1578_fail3294
    repr_bind_attr_int rx1578_cur, rx1578_curclass, "$!from", rx1578_pos
  rxscan1579_scan3299:
    nqp_rxmark rx1578_bstack, rxscan1579_loop3298, rx1578_pos, 0
  rxscan1579_done3300:
    add $I11, rx1578_pos, 1
    gt $I11, rx1578_eos, rx1578_fail3294
    substr $S10, rx1578_tgt, rx1578_pos, 1
    ne $S10, ucs4:"(", rx1578_fail3294
    add rx1578_pos, 1
    repr_bind_attr_int rx1578_cur, rx1578_curclass, "$!pos", rx1578_pos
    $P11 = rx1578_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1578_curclass, "$!pos"
    lt $I11, 0, rx1578_fail3294
    repr_get_attr_int rx1578_pos, $P11, rx1578_curclass, "$!pos"
    nqp_rxmark rx1578_bstack, rxquantr1581_done3303, rx1578_pos, 0
  rxquantr1581_loop3302:
    repr_bind_attr_int rx1578_cur, rx1578_curclass, "$!pos", rx1578_pos
    $P11 = rx1578_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx1578_curclass, "$!pos"
    lt $I11, 0, rx1578_fail3294
    goto rxsubrule1582_pass3304
  rxsubrule1582_back3305:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1578_curclass, "$!pos"
    lt $I11, 0, rx1578_fail3294
  rxsubrule1582_pass3304:
    rx1578_cstack = rx1578_cur."!cursor_capture"($P11, "EXPR")
    set_addr $I11, rxsubrule1582_back3305
    push rx1578_bstack, $I11
    push rx1578_bstack, 0
    push rx1578_bstack, rx1578_pos
    elements $I11, rx1578_cstack
    push rx1578_bstack, $I11
    repr_get_attr_int rx1578_pos, $P11, rx1578_curclass, "$!pos"
    nqp_rxpeek $I19, rx1578_bstack, rxquantr1581_done3303
    inc $I19
    inc $I19
    set rx1578_rep, rx1578_bstack[$I19]
    nqp_rxcommit rx1578_bstack, rxquantr1581_done3303
    inc rx1578_rep
  rxquantr1581_done3303:
    add $I11, rx1578_pos, 1
    gt $I11, rx1578_eos, rx1578_fail3294
    substr $S10, rx1578_tgt, rx1578_pos, 1
    ne $S10, ucs4:")", rx1578_fail3294
    add rx1578_pos, 1
    rx1578_cur."!cursor_pass"(rx1578_pos, "circumfix:sym<( )>", 'backtrack'=>1)
    .return (rx1578_cur)
  rx1578_restart3293:
    repr_get_attr_obj rx1578_cstack, rx1578_cur, rx1578_curclass, "$!cstack"
  rx1578_fail3294:
    unless rx1578_bstack, rx1578_done3292
    pop $I19, rx1578_bstack
    if_null rx1578_cstack, rx1578_cstack_done3297
    unless rx1578_cstack, rx1578_cstack_done3297
    dec $I19
    set $P11, rx1578_cstack[$I19]
  rx1578_cstack_done3297:
    pop rx1578_rep, rx1578_bstack
    pop rx1578_pos, rx1578_bstack
    pop $I19, rx1578_bstack
    lt rx1578_pos, -1, rx1578_done3292
    lt rx1578_pos, 0, rx1578_fail3294
    eq $I19, 0, rx1578_fail3294
    nqp_islist $I20, rx1578_cstack
    unless $I20, rx1578_jump3295
    elements $I18, rx1578_bstack
    le $I18, 0, rx1578_cut3296
    dec $I18
    set $I18, rx1578_bstack[$I18]
  rx1578_cut3296:
    assign rx1578_cstack, $I18
  rx1578_jump3295:
    jump $I19
  rx1578_done3292:
    rx1578_cur."!cursor_fail"()
    .return (rx1578_cur) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<[ ]>" :subid("cuid_164_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1289
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1583_tgt
    .local int rx1583_pos
    .local int rx1583_off
    .local int rx1583_eos
    .local int rx1583_rep
    .local pmc rx1583_cur
    .local pmc rx1583_curclass
    .local pmc rx1583_bstack
    .local pmc rx1583_cstack
    (rx1583_cur, rx1583_tgt, rx1583_pos, rx1583_curclass, rx1583_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1583_cur
    length rx1583_eos, rx1583_tgt
    eq $I19, 1, rx1583_restart3308
    gt rx1583_pos, rx1583_eos, rx1583_fail3309
    repr_get_attr_int $I11, self, rx1583_curclass, "$!from"
    ne $I11, -1, rxscan1584_done3315
    goto rxscan1584_scan3314
  rxscan1584_loop3313:
    inc rx1583_pos
    gt rx1583_pos, rx1583_eos, rx1583_fail3309
    repr_bind_attr_int rx1583_cur, rx1583_curclass, "$!from", rx1583_pos
  rxscan1584_scan3314:
    nqp_rxmark rx1583_bstack, rxscan1584_loop3313, rx1583_pos, 0
  rxscan1584_done3315:
    add $I11, rx1583_pos, 1
    gt $I11, rx1583_eos, rx1583_fail3309
    substr $S10, rx1583_tgt, rx1583_pos, 1
    ne $S10, ucs4:"[", rx1583_fail3309
    add rx1583_pos, 1
    repr_bind_attr_int rx1583_cur, rx1583_curclass, "$!pos", rx1583_pos
    $P11 = rx1583_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1583_curclass, "$!pos"
    lt $I11, 0, rx1583_fail3309
    repr_get_attr_int rx1583_pos, $P11, rx1583_curclass, "$!pos"
    nqp_rxmark rx1583_bstack, rxquantr1586_done3318, rx1583_pos, 0
  rxquantr1586_loop3317:
    repr_bind_attr_int rx1583_cur, rx1583_curclass, "$!pos", rx1583_pos
    $P11 = rx1583_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx1583_curclass, "$!pos"
    lt $I11, 0, rx1583_fail3309
    goto rxsubrule1587_pass3319
  rxsubrule1587_back3320:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1583_curclass, "$!pos"
    lt $I11, 0, rx1583_fail3309
  rxsubrule1587_pass3319:
    rx1583_cstack = rx1583_cur."!cursor_capture"($P11, "EXPR")
    set_addr $I11, rxsubrule1587_back3320
    push rx1583_bstack, $I11
    push rx1583_bstack, 0
    push rx1583_bstack, rx1583_pos
    elements $I11, rx1583_cstack
    push rx1583_bstack, $I11
    repr_get_attr_int rx1583_pos, $P11, rx1583_curclass, "$!pos"
    nqp_rxpeek $I19, rx1583_bstack, rxquantr1586_done3318
    inc $I19
    inc $I19
    set rx1583_rep, rx1583_bstack[$I19]
    nqp_rxcommit rx1583_bstack, rxquantr1586_done3318
    inc rx1583_rep
  rxquantr1586_done3318:
    add $I11, rx1583_pos, 1
    gt $I11, rx1583_eos, rx1583_fail3309
    substr $S10, rx1583_tgt, rx1583_pos, 1
    ne $S10, ucs4:"]", rx1583_fail3309
    add rx1583_pos, 1
    rx1583_cur."!cursor_pass"(rx1583_pos, "circumfix:sym<[ ]>", 'backtrack'=>1)
    .return (rx1583_cur)
  rx1583_restart3308:
    repr_get_attr_obj rx1583_cstack, rx1583_cur, rx1583_curclass, "$!cstack"
  rx1583_fail3309:
    unless rx1583_bstack, rx1583_done3307
    pop $I19, rx1583_bstack
    if_null rx1583_cstack, rx1583_cstack_done3312
    unless rx1583_cstack, rx1583_cstack_done3312
    dec $I19
    set $P11, rx1583_cstack[$I19]
  rx1583_cstack_done3312:
    pop rx1583_rep, rx1583_bstack
    pop rx1583_pos, rx1583_bstack
    pop $I19, rx1583_bstack
    lt rx1583_pos, -1, rx1583_done3307
    lt rx1583_pos, 0, rx1583_fail3309
    eq $I19, 0, rx1583_fail3309
    nqp_islist $I20, rx1583_cstack
    unless $I20, rx1583_jump3310
    elements $I18, rx1583_bstack
    le $I18, 0, rx1583_cut3311
    dec $I18
    set $I18, rx1583_bstack[$I18]
  rx1583_cut3311:
    assign rx1583_cstack, $I18
  rx1583_jump3310:
    jump $I19
  rx1583_done3307:
    rx1583_cur."!cursor_fail"()
    .return (rx1583_cur) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<ang>" :subid("cuid_165_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1290
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1588_tgt
    .local int rx1588_pos
    .local int rx1588_off
    .local int rx1588_eos
    .local int rx1588_rep
    .local pmc rx1588_cur
    .local pmc rx1588_curclass
    .local pmc rx1588_bstack
    .local pmc rx1588_cstack
    (rx1588_cur, rx1588_tgt, rx1588_pos, rx1588_curclass, rx1588_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1588_cur
    length rx1588_eos, rx1588_tgt
    eq $I19, 1, rx1588_restart3323
    gt rx1588_pos, rx1588_eos, rx1588_fail3324
    repr_get_attr_int $I11, self, rx1588_curclass, "$!from"
    ne $I11, -1, rxscan1589_done3330
    goto rxscan1589_scan3329
  rxscan1589_loop3328:
    inc rx1588_pos
    gt rx1588_pos, rx1588_eos, rx1588_fail3324
    repr_bind_attr_int rx1588_cur, rx1588_curclass, "$!from", rx1588_pos
  rxscan1589_scan3329:
    nqp_rxmark rx1588_bstack, rxscan1589_loop3328, rx1588_pos, 0
  rxscan1589_done3330:
    ge rx1588_pos, rx1588_eos, rx1588_fail3324
    substr $S11, rx1588_tgt, rx1588_pos, 1
    index $I11, ucs4:"<", $S11
    lt $I11, 0, rx1588_fail3324
    repr_bind_attr_int rx1588_cur, rx1588_curclass, "$!pos", rx1588_pos
    $P11 = rx1588_cur."quote_EXPR"(":q", ":w")
    repr_get_attr_int $I11, $P11, rx1588_curclass, "$!pos"
    lt $I11, 0, rx1588_fail3324
    nqp_rxmark rx1588_bstack, rxsubrule1590_pass3331, -1, 0
  rxsubrule1590_pass3331:
    rx1588_cstack = rx1588_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1588_pos, $P11, rx1588_curclass, "$!pos"
    rx1588_cur."!cursor_pass"(rx1588_pos, "circumfix:sym<ang>", 'backtrack'=>1)
    .return (rx1588_cur)
  rx1588_restart3323:
    repr_get_attr_obj rx1588_cstack, rx1588_cur, rx1588_curclass, "$!cstack"
  rx1588_fail3324:
    unless rx1588_bstack, rx1588_done3322
    pop $I19, rx1588_bstack
    if_null rx1588_cstack, rx1588_cstack_done3327
    unless rx1588_cstack, rx1588_cstack_done3327
    dec $I19
    set $P11, rx1588_cstack[$I19]
  rx1588_cstack_done3327:
    pop rx1588_rep, rx1588_bstack
    pop rx1588_pos, rx1588_bstack
    pop $I19, rx1588_bstack
    lt rx1588_pos, -1, rx1588_done3322
    lt rx1588_pos, 0, rx1588_fail3324
    eq $I19, 0, rx1588_fail3324
    nqp_islist $I20, rx1588_cstack
    unless $I20, rx1588_jump3325
    elements $I18, rx1588_bstack
    le $I18, 0, rx1588_cut3326
    dec $I18
    set $I18, rx1588_bstack[$I18]
  rx1588_cut3326:
    assign rx1588_cstack, $I18
  rx1588_jump3325:
    jump $I19
  rx1588_done3322:
    rx1588_cur."!cursor_fail"()
    .return (rx1588_cur) 
.end
.HLL "nqp"
.namespace []
.sub utf8:"circumfix:sym<\x{ab} \x{bb}>" :subid("cuid_166_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1291
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1591_tgt
    .local int rx1591_pos
    .local int rx1591_off
    .local int rx1591_eos
    .local int rx1591_rep
    .local pmc rx1591_cur
    .local pmc rx1591_curclass
    .local pmc rx1591_bstack
    .local pmc rx1591_cstack
    (rx1591_cur, rx1591_tgt, rx1591_pos, rx1591_curclass, rx1591_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1591_cur
    length rx1591_eos, rx1591_tgt
    eq $I19, 1, rx1591_restart3334
    gt rx1591_pos, rx1591_eos, rx1591_fail3335
    repr_get_attr_int $I11, self, rx1591_curclass, "$!from"
    ne $I11, -1, rxscan1592_done3341
    goto rxscan1592_scan3340
  rxscan1592_loop3339:
    inc rx1591_pos
    gt rx1591_pos, rx1591_eos, rx1591_fail3335
    repr_bind_attr_int rx1591_cur, rx1591_curclass, "$!from", rx1591_pos
  rxscan1592_scan3340:
    nqp_rxmark rx1591_bstack, rxscan1592_loop3339, rx1591_pos, 0
  rxscan1592_done3341:
    ge rx1591_pos, rx1591_eos, rx1591_fail3335
    substr $S11, rx1591_tgt, rx1591_pos, 1
    index $I11, ucs4:"\x{ab}", $S11
    lt $I11, 0, rx1591_fail3335
    repr_bind_attr_int rx1591_cur, rx1591_curclass, "$!pos", rx1591_pos
    $P11 = rx1591_cur."quote_EXPR"(":qq", ":w")
    repr_get_attr_int $I11, $P11, rx1591_curclass, "$!pos"
    lt $I11, 0, rx1591_fail3335
    nqp_rxmark rx1591_bstack, rxsubrule1593_pass3342, -1, 0
  rxsubrule1593_pass3342:
    rx1591_cstack = rx1591_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1591_pos, $P11, rx1591_curclass, "$!pos"
    rx1591_cur."!cursor_pass"(rx1591_pos, utf8:"circumfix:sym<\x{ab} \x{bb}>", 'backtrack'=>1)
    .return (rx1591_cur)
  rx1591_restart3334:
    repr_get_attr_obj rx1591_cstack, rx1591_cur, rx1591_curclass, "$!cstack"
  rx1591_fail3335:
    unless rx1591_bstack, rx1591_done3333
    pop $I19, rx1591_bstack
    if_null rx1591_cstack, rx1591_cstack_done3338
    unless rx1591_cstack, rx1591_cstack_done3338
    dec $I19
    set $P11, rx1591_cstack[$I19]
  rx1591_cstack_done3338:
    pop rx1591_rep, rx1591_bstack
    pop rx1591_pos, rx1591_bstack
    pop $I19, rx1591_bstack
    lt rx1591_pos, -1, rx1591_done3333
    lt rx1591_pos, 0, rx1591_fail3335
    eq $I19, 0, rx1591_fail3335
    nqp_islist $I20, rx1591_cstack
    unless $I20, rx1591_jump3336
    elements $I18, rx1591_bstack
    le $I18, 0, rx1591_cut3337
    dec $I18
    set $I18, rx1591_bstack[$I18]
  rx1591_cut3337:
    assign rx1591_cstack, $I18
  rx1591_jump3336:
    jump $I19
  rx1591_done3333:
    rx1591_cur."!cursor_fail"()
    .return (rx1591_cur) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<{ }>" :subid("cuid_167_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1292
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1594_tgt
    .local int rx1594_pos
    .local int rx1594_off
    .local int rx1594_eos
    .local int rx1594_rep
    .local pmc rx1594_cur
    .local pmc rx1594_curclass
    .local pmc rx1594_bstack
    .local pmc rx1594_cstack
    (rx1594_cur, rx1594_tgt, rx1594_pos, rx1594_curclass, rx1594_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1594_cur
    length rx1594_eos, rx1594_tgt
    eq $I19, 1, rx1594_restart3345
    gt rx1594_pos, rx1594_eos, rx1594_fail3346
    repr_get_attr_int $I11, self, rx1594_curclass, "$!from"
    ne $I11, -1, rxscan1595_done3352
    goto rxscan1595_scan3351
  rxscan1595_loop3350:
    inc rx1594_pos
    gt rx1594_pos, rx1594_eos, rx1594_fail3346
    repr_bind_attr_int rx1594_cur, rx1594_curclass, "$!from", rx1594_pos
  rxscan1595_scan3351:
    nqp_rxmark rx1594_bstack, rxscan1595_loop3350, rx1594_pos, 0
  rxscan1595_done3352:
    ge rx1594_pos, rx1594_eos, rx1594_fail3346
    substr $S11, rx1594_tgt, rx1594_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx1594_fail3346
    repr_bind_attr_int rx1594_cur, rx1594_curclass, "$!pos", rx1594_pos
    $P11 = rx1594_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx1594_curclass, "$!pos"
    lt $I11, 0, rx1594_fail3346
    nqp_rxmark rx1594_bstack, rxsubrule1596_pass3353, -1, 0
  rxsubrule1596_pass3353:
    rx1594_cstack = rx1594_cur."!cursor_capture"($P11, "pblock")
    repr_get_attr_int rx1594_pos, $P11, rx1594_curclass, "$!pos"
    rx1594_cur."!cursor_pass"(rx1594_pos, "circumfix:sym<{ }>", 'backtrack'=>1)
    .return (rx1594_cur)
  rx1594_restart3345:
    repr_get_attr_obj rx1594_cstack, rx1594_cur, rx1594_curclass, "$!cstack"
  rx1594_fail3346:
    unless rx1594_bstack, rx1594_done3344
    pop $I19, rx1594_bstack
    if_null rx1594_cstack, rx1594_cstack_done3349
    unless rx1594_cstack, rx1594_cstack_done3349
    dec $I19
    set $P11, rx1594_cstack[$I19]
  rx1594_cstack_done3349:
    pop rx1594_rep, rx1594_bstack
    pop rx1594_pos, rx1594_bstack
    pop $I19, rx1594_bstack
    lt rx1594_pos, -1, rx1594_done3344
    lt rx1594_pos, 0, rx1594_fail3346
    eq $I19, 0, rx1594_fail3346
    nqp_islist $I20, rx1594_cstack
    unless $I20, rx1594_jump3347
    elements $I18, rx1594_bstack
    le $I18, 0, rx1594_cut3348
    dec $I18
    set $I18, rx1594_bstack[$I18]
  rx1594_cut3348:
    assign rx1594_cstack, $I18
  rx1594_jump3347:
    jump $I19
  rx1594_done3344:
    rx1594_cur."!cursor_fail"()
    .return (rx1594_cur) 
.end
.HLL "nqp"
.namespace []
.sub "semilist" :subid("cuid_168_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1294
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1597_tgt
    .local int rx1597_pos
    .local int rx1597_off
    .local int rx1597_eos
    .local int rx1597_rep
    .local pmc rx1597_cur
    .local pmc rx1597_curclass
    .local pmc rx1597_bstack
    .local pmc rx1597_cstack
    (rx1597_cur, rx1597_tgt, rx1597_pos, rx1597_curclass, rx1597_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1597_cur
    length rx1597_eos, rx1597_tgt
    eq $I19, 1, rx1597_restart3356
    gt rx1597_pos, rx1597_eos, rx1597_fail3357
    repr_get_attr_int $I11, self, rx1597_curclass, "$!from"
    ne $I11, -1, rxscan1598_done3363
    goto rxscan1598_scan3362
  rxscan1598_loop3361:
    inc rx1597_pos
    gt rx1597_pos, rx1597_eos, rx1597_fail3357
    repr_bind_attr_int rx1597_cur, rx1597_curclass, "$!from", rx1597_pos
  rxscan1598_scan3362:
    nqp_rxmark rx1597_bstack, rxscan1598_loop3361, rx1597_pos, 0
  rxscan1598_done3363:
    repr_bind_attr_int rx1597_cur, rx1597_curclass, "$!pos", rx1597_pos
    $P11 = rx1597_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1597_curclass, "$!pos"
    lt $I11, 0, rx1597_fail3357
    repr_get_attr_int rx1597_pos, $P11, rx1597_curclass, "$!pos"
    repr_bind_attr_int rx1597_cur, rx1597_curclass, "$!pos", rx1597_pos
    $P11 = rx1597_cur."statement"()
    repr_get_attr_int $I11, $P11, rx1597_curclass, "$!pos"
    lt $I11, 0, rx1597_fail3357
    nqp_rxmark rx1597_bstack, rxsubrule1600_pass3365, -1, 0
  rxsubrule1600_pass3365:
    rx1597_cstack = rx1597_cur."!cursor_capture"($P11, "statement")
    repr_get_attr_int rx1597_pos, $P11, rx1597_curclass, "$!pos"
    repr_bind_attr_int rx1597_cur, rx1597_curclass, "$!pos", rx1597_pos
    $P11 = rx1597_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1597_curclass, "$!pos"
    lt $I11, 0, rx1597_fail3357
    repr_get_attr_int rx1597_pos, $P11, rx1597_curclass, "$!pos"
    rx1597_cur."!cursor_pass"(rx1597_pos, "semilist", 'backtrack'=>1)
    .return (rx1597_cur)
  rx1597_restart3356:
    repr_get_attr_obj rx1597_cstack, rx1597_cur, rx1597_curclass, "$!cstack"
  rx1597_fail3357:
    unless rx1597_bstack, rx1597_done3355
    pop $I19, rx1597_bstack
    if_null rx1597_cstack, rx1597_cstack_done3360
    unless rx1597_cstack, rx1597_cstack_done3360
    dec $I19
    set $P11, rx1597_cstack[$I19]
  rx1597_cstack_done3360:
    pop rx1597_rep, rx1597_bstack
    pop rx1597_pos, rx1597_bstack
    pop $I19, rx1597_bstack
    lt rx1597_pos, -1, rx1597_done3355
    lt rx1597_pos, 0, rx1597_fail3357
    eq $I19, 0, rx1597_fail3357
    nqp_islist $I20, rx1597_cstack
    unless $I20, rx1597_jump3358
    elements $I18, rx1597_bstack
    le $I18, 0, rx1597_cut3359
    dec $I18
    set $I18, rx1597_bstack[$I18]
  rx1597_cut3359:
    assign rx1597_cstack, $I18
  rx1597_jump3358:
    jump $I19
  rx1597_done3355:
    rx1597_cur."!cursor_fail"()
    .return (rx1597_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infixish" :subid("cuid_169_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1317
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1602_tgt
    .local int rx1602_pos
    .local int rx1602_off
    .local int rx1602_eos
    .local int rx1602_rep
    .local pmc rx1602_cur
    .local pmc rx1602_curclass
    .local pmc rx1602_bstack
    .local pmc rx1602_cstack
    (rx1602_cur, rx1602_tgt, rx1602_pos, rx1602_curclass, rx1602_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1602_cur
    length rx1602_eos, rx1602_tgt
    eq $I19, 1, rx1602_restart3369
    gt rx1602_pos, rx1602_eos, rx1602_fail3370
    repr_get_attr_int $I11, self, rx1602_curclass, "$!from"
    ne $I11, -1, rxscan1603_done3376
    goto rxscan1603_scan3375
  rxscan1603_loop3374:
    inc rx1602_pos
    gt rx1602_pos, rx1602_eos, rx1602_fail3370
    repr_bind_attr_int rx1602_cur, rx1602_curclass, "$!from", rx1602_pos
  rxscan1603_scan3375:
    nqp_rxmark rx1602_bstack, rxscan1603_loop3374, rx1602_pos, 0
  rxscan1603_done3376:
    repr_bind_attr_int rx1602_cur, rx1602_curclass, "$!pos", rx1602_pos
    $P11 = rx1602_cur."infixstopper"()
    repr_get_attr_int $I11, $P11, rx1602_curclass, "$!pos"
    ge $I11, 0, rx1602_fail3370
    repr_bind_attr_int rx1602_cur, rx1602_curclass, "$!pos", rx1602_pos
    $P11 = rx1602_cur."infix"()
    repr_get_attr_int $I11, $P11, rx1602_curclass, "$!pos"
    lt $I11, 0, rx1602_fail3370
    nqp_rxmark rx1602_bstack, rxsubrule1604_pass3377, -1, 0
  rxsubrule1604_pass3377:
    rx1602_cstack = rx1602_cur."!cursor_capture"($P11, "OPER=infix")
    repr_get_attr_int rx1602_pos, $P11, rx1602_curclass, "$!pos"
    rx1602_cur."!cursor_pass"(rx1602_pos, "infixish", 'backtrack'=>1)
    .return (rx1602_cur)
  rx1602_restart3369:
    repr_get_attr_obj rx1602_cstack, rx1602_cur, rx1602_curclass, "$!cstack"
  rx1602_fail3370:
    unless rx1602_bstack, rx1602_done3368
    pop $I19, rx1602_bstack
    if_null rx1602_cstack, rx1602_cstack_done3373
    unless rx1602_cstack, rx1602_cstack_done3373
    dec $I19
    set $P11, rx1602_cstack[$I19]
  rx1602_cstack_done3373:
    pop rx1602_rep, rx1602_bstack
    pop rx1602_pos, rx1602_bstack
    pop $I19, rx1602_bstack
    lt rx1602_pos, -1, rx1602_done3368
    lt rx1602_pos, 0, rx1602_fail3370
    eq $I19, 0, rx1602_fail3370
    nqp_islist $I20, rx1602_cstack
    unless $I20, rx1602_jump3371
    elements $I18, rx1602_bstack
    le $I18, 0, rx1602_cut3372
    dec $I18
    set $I18, rx1602_bstack[$I18]
  rx1602_cut3372:
    assign rx1602_cstack, $I18
  rx1602_jump3371:
    jump $I19
  rx1602_done3368:
    rx1602_cur."!cursor_fail"()
    .return (rx1602_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infixstopper" :subid("cuid_170_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1318
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1605_tgt
    .local int rx1605_pos
    .local int rx1605_off
    .local int rx1605_eos
    .local int rx1605_rep
    .local pmc rx1605_cur
    .local pmc rx1605_curclass
    .local pmc rx1605_bstack
    .local pmc rx1605_cstack
    (rx1605_cur, rx1605_tgt, rx1605_pos, rx1605_curclass, rx1605_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1605_cur
    length rx1605_eos, rx1605_tgt
    eq $I19, 1, rx1605_restart3380
    gt rx1605_pos, rx1605_eos, rx1605_fail3381
    repr_get_attr_int $I11, self, rx1605_curclass, "$!from"
    ne $I11, -1, rxscan1606_done3387
    goto rxscan1606_scan3386
  rxscan1606_loop3385:
    inc rx1605_pos
    gt rx1605_pos, rx1605_eos, rx1605_fail3381
    repr_bind_attr_int rx1605_cur, rx1605_curclass, "$!from", rx1605_pos
  rxscan1606_scan3386:
    nqp_rxmark rx1605_bstack, rxscan1606_loop3385, rx1605_pos, 0
  rxscan1606_done3387:
    repr_bind_attr_int rx1605_cur, rx1605_curclass, "$!pos", rx1605_pos
    $P11 = rx1605_cur."lambda"()
    repr_get_attr_int $I11, $P11, rx1605_curclass, "$!pos"
    lt $I11, 0, rx1605_fail3381
    rx1605_cur."!cursor_pass"(rx1605_pos, "infixstopper", 'backtrack'=>1)
    .return (rx1605_cur)
  rx1605_restart3380:
    repr_get_attr_obj rx1605_cstack, rx1605_cur, rx1605_curclass, "$!cstack"
  rx1605_fail3381:
    unless rx1605_bstack, rx1605_done3379
    pop $I19, rx1605_bstack
    if_null rx1605_cstack, rx1605_cstack_done3384
    unless rx1605_cstack, rx1605_cstack_done3384
    dec $I19
    set $P11, rx1605_cstack[$I19]
  rx1605_cstack_done3384:
    pop rx1605_rep, rx1605_bstack
    pop rx1605_pos, rx1605_bstack
    pop $I19, rx1605_bstack
    lt rx1605_pos, -1, rx1605_done3379
    lt rx1605_pos, 0, rx1605_fail3381
    eq $I19, 0, rx1605_fail3381
    nqp_islist $I20, rx1605_cstack
    unless $I20, rx1605_jump3382
    elements $I18, rx1605_bstack
    le $I18, 0, rx1605_cut3383
    dec $I18
    set $I18, rx1605_bstack[$I18]
  rx1605_cut3383:
    assign rx1605_cstack, $I18
  rx1605_jump3382:
    jump $I19
  rx1605_done3379:
    rx1605_cur."!cursor_fail"()
    .return (rx1605_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<[ ]>" :subid("cuid_171_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1320
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1607_tgt
    .local int rx1607_pos
    .local int rx1607_off
    .local int rx1607_eos
    .local int rx1607_rep
    .local pmc rx1607_cur
    .local pmc rx1607_curclass
    .local pmc rx1607_bstack
    .local pmc rx1607_cstack
    (rx1607_cur, rx1607_tgt, rx1607_pos, rx1607_curclass, rx1607_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1607_cur
    length rx1607_eos, rx1607_tgt
    eq $I19, 1, rx1607_restart3390
    gt rx1607_pos, rx1607_eos, rx1607_fail3391
    repr_get_attr_int $I11, self, rx1607_curclass, "$!from"
    ne $I11, -1, rxscan1608_done3397
    goto rxscan1608_scan3396
  rxscan1608_loop3395:
    inc rx1607_pos
    gt rx1607_pos, rx1607_eos, rx1607_fail3391
    repr_bind_attr_int rx1607_cur, rx1607_curclass, "$!from", rx1607_pos
  rxscan1608_scan3396:
    nqp_rxmark rx1607_bstack, rxscan1608_loop3395, rx1607_pos, 0
  rxscan1608_done3397:
    add $I11, rx1607_pos, 1
    gt $I11, rx1607_eos, rx1607_fail3391
    substr $S10, rx1607_tgt, rx1607_pos, 1
    ne $S10, ucs4:"[", rx1607_fail3391
    add rx1607_pos, 1
    repr_bind_attr_int rx1607_cur, rx1607_curclass, "$!pos", rx1607_pos
    $P11 = rx1607_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1607_curclass, "$!pos"
    lt $I11, 0, rx1607_fail3391
    repr_get_attr_int rx1607_pos, $P11, rx1607_curclass, "$!pos"
    repr_bind_attr_int rx1607_cur, rx1607_curclass, "$!pos", rx1607_pos
    $P11 = rx1607_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx1607_curclass, "$!pos"
    lt $I11, 0, rx1607_fail3391
    nqp_rxmark rx1607_bstack, rxsubrule1610_pass3399, -1, 0
  rxsubrule1610_pass3399:
    rx1607_cstack = rx1607_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx1607_pos, $P11, rx1607_curclass, "$!pos"
    add $I11, rx1607_pos, 1
    gt $I11, rx1607_eos, rx1607_fail3391
    substr $S10, rx1607_tgt, rx1607_pos, 1
    ne $S10, ucs4:"]", rx1607_fail3391
    add rx1607_pos, 1
    repr_bind_attr_int rx1607_cur, rx1607_curclass, "$!pos", rx1607_pos
    $P11 = rx1607_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1607_curclass, "$!pos"
    lt $I11, 0, rx1607_fail3391
    nqp_rxmark rx1607_bstack, rxsubrule1611_pass3400, -1, 0
  rxsubrule1611_pass3400:
    rx1607_cstack = rx1607_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1607_pos, $P11, rx1607_curclass, "$!pos"
    rx1607_cur."!cursor_pass"(rx1607_pos, "postcircumfix:sym<[ ]>", 'backtrack'=>1)
    .return (rx1607_cur)
  rx1607_restart3390:
    repr_get_attr_obj rx1607_cstack, rx1607_cur, rx1607_curclass, "$!cstack"
  rx1607_fail3391:
    unless rx1607_bstack, rx1607_done3389
    pop $I19, rx1607_bstack
    if_null rx1607_cstack, rx1607_cstack_done3394
    unless rx1607_cstack, rx1607_cstack_done3394
    dec $I19
    set $P11, rx1607_cstack[$I19]
  rx1607_cstack_done3394:
    pop rx1607_rep, rx1607_bstack
    pop rx1607_pos, rx1607_bstack
    pop $I19, rx1607_bstack
    lt rx1607_pos, -1, rx1607_done3389
    lt rx1607_pos, 0, rx1607_fail3391
    eq $I19, 0, rx1607_fail3391
    nqp_islist $I20, rx1607_cstack
    unless $I20, rx1607_jump3392
    elements $I18, rx1607_bstack
    le $I18, 0, rx1607_cut3393
    dec $I18
    set $I18, rx1607_bstack[$I18]
  rx1607_cut3393:
    assign rx1607_cstack, $I18
  rx1607_jump3392:
    jump $I19
  rx1607_done3389:
    rx1607_cur."!cursor_fail"()
    .return (rx1607_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<{ }>" :subid("cuid_172_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1325
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1612_tgt
    .local int rx1612_pos
    .local int rx1612_off
    .local int rx1612_eos
    .local int rx1612_rep
    .local pmc rx1612_cur
    .local pmc rx1612_curclass
    .local pmc rx1612_bstack
    .local pmc rx1612_cstack
    (rx1612_cur, rx1612_tgt, rx1612_pos, rx1612_curclass, rx1612_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1612_cur
    length rx1612_eos, rx1612_tgt
    eq $I19, 1, rx1612_restart3403
    gt rx1612_pos, rx1612_eos, rx1612_fail3404
    repr_get_attr_int $I11, self, rx1612_curclass, "$!from"
    ne $I11, -1, rxscan1613_done3410
    goto rxscan1613_scan3409
  rxscan1613_loop3408:
    inc rx1612_pos
    gt rx1612_pos, rx1612_eos, rx1612_fail3404
    repr_bind_attr_int rx1612_cur, rx1612_curclass, "$!from", rx1612_pos
  rxscan1613_scan3409:
    nqp_rxmark rx1612_bstack, rxscan1613_loop3408, rx1612_pos, 0
  rxscan1613_done3410:
    add $I11, rx1612_pos, 1
    gt $I11, rx1612_eos, rx1612_fail3404
    substr $S10, rx1612_tgt, rx1612_pos, 1
    ne $S10, ucs4:"{", rx1612_fail3404
    add rx1612_pos, 1
    repr_bind_attr_int rx1612_cur, rx1612_curclass, "$!pos", rx1612_pos
    $P11 = rx1612_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1612_curclass, "$!pos"
    lt $I11, 0, rx1612_fail3404
    repr_get_attr_int rx1612_pos, $P11, rx1612_curclass, "$!pos"
    repr_bind_attr_int rx1612_cur, rx1612_curclass, "$!pos", rx1612_pos
    $P11 = rx1612_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx1612_curclass, "$!pos"
    lt $I11, 0, rx1612_fail3404
    nqp_rxmark rx1612_bstack, rxsubrule1615_pass3412, -1, 0
  rxsubrule1615_pass3412:
    rx1612_cstack = rx1612_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx1612_pos, $P11, rx1612_curclass, "$!pos"
    add $I11, rx1612_pos, 1
    gt $I11, rx1612_eos, rx1612_fail3404
    substr $S10, rx1612_tgt, rx1612_pos, 1
    ne $S10, ucs4:"}", rx1612_fail3404
    add rx1612_pos, 1
    repr_bind_attr_int rx1612_cur, rx1612_curclass, "$!pos", rx1612_pos
    $P11 = rx1612_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1612_curclass, "$!pos"
    lt $I11, 0, rx1612_fail3404
    nqp_rxmark rx1612_bstack, rxsubrule1616_pass3413, -1, 0
  rxsubrule1616_pass3413:
    rx1612_cstack = rx1612_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1612_pos, $P11, rx1612_curclass, "$!pos"
    rx1612_cur."!cursor_pass"(rx1612_pos, "postcircumfix:sym<{ }>", 'backtrack'=>1)
    .return (rx1612_cur)
  rx1612_restart3403:
    repr_get_attr_obj rx1612_cstack, rx1612_cur, rx1612_curclass, "$!cstack"
  rx1612_fail3404:
    unless rx1612_bstack, rx1612_done3402
    pop $I19, rx1612_bstack
    if_null rx1612_cstack, rx1612_cstack_done3407
    unless rx1612_cstack, rx1612_cstack_done3407
    dec $I19
    set $P11, rx1612_cstack[$I19]
  rx1612_cstack_done3407:
    pop rx1612_rep, rx1612_bstack
    pop rx1612_pos, rx1612_bstack
    pop $I19, rx1612_bstack
    lt rx1612_pos, -1, rx1612_done3402
    lt rx1612_pos, 0, rx1612_fail3404
    eq $I19, 0, rx1612_fail3404
    nqp_islist $I20, rx1612_cstack
    unless $I20, rx1612_jump3405
    elements $I18, rx1612_bstack
    le $I18, 0, rx1612_cut3406
    dec $I18
    set $I18, rx1612_bstack[$I18]
  rx1612_cut3406:
    assign rx1612_cstack, $I18
  rx1612_jump3405:
    jump $I19
  rx1612_done3402:
    rx1612_cur."!cursor_fail"()
    .return (rx1612_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<ang>" :subid("cuid_173_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1330
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1617_tgt
    .local int rx1617_pos
    .local int rx1617_off
    .local int rx1617_eos
    .local int rx1617_rep
    .local pmc rx1617_cur
    .local pmc rx1617_curclass
    .local pmc rx1617_bstack
    .local pmc rx1617_cstack
    (rx1617_cur, rx1617_tgt, rx1617_pos, rx1617_curclass, rx1617_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1617_cur
    length rx1617_eos, rx1617_tgt
    eq $I19, 1, rx1617_restart3416
    gt rx1617_pos, rx1617_eos, rx1617_fail3417
    repr_get_attr_int $I11, self, rx1617_curclass, "$!from"
    ne $I11, -1, rxscan1618_done3423
    goto rxscan1618_scan3422
  rxscan1618_loop3421:
    inc rx1617_pos
    gt rx1617_pos, rx1617_eos, rx1617_fail3417
    repr_bind_attr_int rx1617_cur, rx1617_curclass, "$!from", rx1617_pos
  rxscan1618_scan3422:
    nqp_rxmark rx1617_bstack, rxscan1618_loop3421, rx1617_pos, 0
  rxscan1618_done3423:
    ge rx1617_pos, rx1617_eos, rx1617_fail3417
    substr $S11, rx1617_tgt, rx1617_pos, 1
    index $I11, ucs4:"<", $S11
    lt $I11, 0, rx1617_fail3417
    repr_bind_attr_int rx1617_cur, rx1617_curclass, "$!pos", rx1617_pos
    $P11 = rx1617_cur."quote_EXPR"(":q")
    repr_get_attr_int $I11, $P11, rx1617_curclass, "$!pos"
    lt $I11, 0, rx1617_fail3417
    nqp_rxmark rx1617_bstack, rxsubrule1619_pass3424, -1, 0
  rxsubrule1619_pass3424:
    rx1617_cstack = rx1617_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1617_pos, $P11, rx1617_curclass, "$!pos"
    repr_bind_attr_int rx1617_cur, rx1617_curclass, "$!pos", rx1617_pos
    $P11 = rx1617_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1617_curclass, "$!pos"
    lt $I11, 0, rx1617_fail3417
    nqp_rxmark rx1617_bstack, rxsubrule1620_pass3425, -1, 0
  rxsubrule1620_pass3425:
    rx1617_cstack = rx1617_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1617_pos, $P11, rx1617_curclass, "$!pos"
    rx1617_cur."!cursor_pass"(rx1617_pos, "postcircumfix:sym<ang>", 'backtrack'=>1)
    .return (rx1617_cur)
  rx1617_restart3416:
    repr_get_attr_obj rx1617_cstack, rx1617_cur, rx1617_curclass, "$!cstack"
  rx1617_fail3417:
    unless rx1617_bstack, rx1617_done3415
    pop $I19, rx1617_bstack
    if_null rx1617_cstack, rx1617_cstack_done3420
    unless rx1617_cstack, rx1617_cstack_done3420
    dec $I19
    set $P11, rx1617_cstack[$I19]
  rx1617_cstack_done3420:
    pop rx1617_rep, rx1617_bstack
    pop rx1617_pos, rx1617_bstack
    pop $I19, rx1617_bstack
    lt rx1617_pos, -1, rx1617_done3415
    lt rx1617_pos, 0, rx1617_fail3417
    eq $I19, 0, rx1617_fail3417
    nqp_islist $I20, rx1617_cstack
    unless $I20, rx1617_jump3418
    elements $I18, rx1617_bstack
    le $I18, 0, rx1617_cut3419
    dec $I18
    set $I18, rx1617_bstack[$I18]
  rx1617_cut3419:
    assign rx1617_cstack, $I18
  rx1617_jump3418:
    jump $I19
  rx1617_done3415:
    rx1617_cur."!cursor_fail"()
    .return (rx1617_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<( )>" :subid("cuid_174_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1335
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1621_tgt
    .local int rx1621_pos
    .local int rx1621_off
    .local int rx1621_eos
    .local int rx1621_rep
    .local pmc rx1621_cur
    .local pmc rx1621_curclass
    .local pmc rx1621_bstack
    .local pmc rx1621_cstack
    (rx1621_cur, rx1621_tgt, rx1621_pos, rx1621_curclass, rx1621_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1621_cur
    length rx1621_eos, rx1621_tgt
    eq $I19, 1, rx1621_restart3428
    gt rx1621_pos, rx1621_eos, rx1621_fail3429
    repr_get_attr_int $I11, self, rx1621_curclass, "$!from"
    ne $I11, -1, rxscan1622_done3435
    goto rxscan1622_scan3434
  rxscan1622_loop3433:
    inc rx1621_pos
    gt rx1621_pos, rx1621_eos, rx1621_fail3429
    repr_bind_attr_int rx1621_cur, rx1621_curclass, "$!from", rx1621_pos
  rxscan1622_scan3434:
    nqp_rxmark rx1621_bstack, rxscan1622_loop3433, rx1621_pos, 0
  rxscan1622_done3435:
    add $I11, rx1621_pos, 1
    gt $I11, rx1621_eos, rx1621_fail3429
    substr $S10, rx1621_tgt, rx1621_pos, 1
    ne $S10, ucs4:"(", rx1621_fail3429
    add rx1621_pos, 1
    repr_bind_attr_int rx1621_cur, rx1621_curclass, "$!pos", rx1621_pos
    $P11 = rx1621_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1621_curclass, "$!pos"
    lt $I11, 0, rx1621_fail3429
    repr_get_attr_int rx1621_pos, $P11, rx1621_curclass, "$!pos"
    repr_bind_attr_int rx1621_cur, rx1621_curclass, "$!pos", rx1621_pos
    $P11 = rx1621_cur."arglist"()
    repr_get_attr_int $I11, $P11, rx1621_curclass, "$!pos"
    lt $I11, 0, rx1621_fail3429
    nqp_rxmark rx1621_bstack, rxsubrule1624_pass3437, -1, 0
  rxsubrule1624_pass3437:
    rx1621_cstack = rx1621_cur."!cursor_capture"($P11, "arglist")
    repr_get_attr_int rx1621_pos, $P11, rx1621_curclass, "$!pos"
    add $I11, rx1621_pos, 1
    gt $I11, rx1621_eos, rx1621_fail3429
    substr $S10, rx1621_tgt, rx1621_pos, 1
    ne $S10, ucs4:")", rx1621_fail3429
    add rx1621_pos, 1
    repr_bind_attr_int rx1621_cur, rx1621_curclass, "$!pos", rx1621_pos
    $P11 = rx1621_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1621_curclass, "$!pos"
    lt $I11, 0, rx1621_fail3429
    nqp_rxmark rx1621_bstack, rxsubrule1625_pass3438, -1, 0
  rxsubrule1625_pass3438:
    rx1621_cstack = rx1621_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1621_pos, $P11, rx1621_curclass, "$!pos"
    rx1621_cur."!cursor_pass"(rx1621_pos, "postcircumfix:sym<( )>", 'backtrack'=>1)
    .return (rx1621_cur)
  rx1621_restart3428:
    repr_get_attr_obj rx1621_cstack, rx1621_cur, rx1621_curclass, "$!cstack"
  rx1621_fail3429:
    unless rx1621_bstack, rx1621_done3427
    pop $I19, rx1621_bstack
    if_null rx1621_cstack, rx1621_cstack_done3432
    unless rx1621_cstack, rx1621_cstack_done3432
    dec $I19
    set $P11, rx1621_cstack[$I19]
  rx1621_cstack_done3432:
    pop rx1621_rep, rx1621_bstack
    pop rx1621_pos, rx1621_bstack
    pop $I19, rx1621_bstack
    lt rx1621_pos, -1, rx1621_done3427
    lt rx1621_pos, 0, rx1621_fail3429
    eq $I19, 0, rx1621_fail3429
    nqp_islist $I20, rx1621_cstack
    unless $I20, rx1621_jump3430
    elements $I18, rx1621_bstack
    le $I18, 0, rx1621_cut3431
    dec $I18
    set $I18, rx1621_bstack[$I18]
  rx1621_cut3431:
    assign rx1621_cstack, $I18
  rx1621_jump3430:
    jump $I19
  rx1621_done3427:
    rx1621_cur."!cursor_fail"()
    .return (rx1621_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postfix:sym<.>" :subid("cuid_175_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1340
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1626_tgt
    .local int rx1626_pos
    .local int rx1626_off
    .local int rx1626_eos
    .local int rx1626_rep
    .local pmc rx1626_cur
    .local pmc rx1626_curclass
    .local pmc rx1626_bstack
    .local pmc rx1626_cstack
    (rx1626_cur, rx1626_tgt, rx1626_pos, rx1626_curclass, rx1626_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1626_cur
    length rx1626_eos, rx1626_tgt
    eq $I19, 1, rx1626_restart3441
    gt rx1626_pos, rx1626_eos, rx1626_fail3442
    repr_get_attr_int $I11, self, rx1626_curclass, "$!from"
    ne $I11, -1, rxscan1627_done3448
    goto rxscan1627_scan3447
  rxscan1627_loop3446:
    inc rx1626_pos
    gt rx1626_pos, rx1626_eos, rx1626_fail3442
    repr_bind_attr_int rx1626_cur, rx1626_curclass, "$!from", rx1626_pos
  rxscan1627_scan3447:
    nqp_rxmark rx1626_bstack, rxscan1627_loop3446, rx1626_pos, 0
  rxscan1627_done3448:
    repr_bind_attr_int rx1626_cur, rx1626_curclass, "$!pos", rx1626_pos
    $P11 = rx1626_cur."dotty"()
    repr_get_attr_int $I11, $P11, rx1626_curclass, "$!pos"
    lt $I11, 0, rx1626_fail3442
    nqp_rxmark rx1626_bstack, rxsubrule1628_pass3449, -1, 0
  rxsubrule1628_pass3449:
    rx1626_cstack = rx1626_cur."!cursor_capture"($P11, "dotty")
    repr_get_attr_int rx1626_pos, $P11, rx1626_curclass, "$!pos"
    repr_bind_attr_int rx1626_cur, rx1626_curclass, "$!pos", rx1626_pos
    $P11 = rx1626_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1626_curclass, "$!pos"
    lt $I11, 0, rx1626_fail3442
    nqp_rxmark rx1626_bstack, rxsubrule1629_pass3450, -1, 0
  rxsubrule1629_pass3450:
    rx1626_cstack = rx1626_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1626_pos, $P11, rx1626_curclass, "$!pos"
    rx1626_cur."!cursor_pass"(rx1626_pos, "postfix:sym<.>", 'backtrack'=>1)
    .return (rx1626_cur)
  rx1626_restart3441:
    repr_get_attr_obj rx1626_cstack, rx1626_cur, rx1626_curclass, "$!cstack"
  rx1626_fail3442:
    unless rx1626_bstack, rx1626_done3440
    pop $I19, rx1626_bstack
    if_null rx1626_cstack, rx1626_cstack_done3445
    unless rx1626_cstack, rx1626_cstack_done3445
    dec $I19
    set $P11, rx1626_cstack[$I19]
  rx1626_cstack_done3445:
    pop rx1626_rep, rx1626_bstack
    pop rx1626_pos, rx1626_bstack
    pop $I19, rx1626_bstack
    lt rx1626_pos, -1, rx1626_done3440
    lt rx1626_pos, 0, rx1626_fail3442
    eq $I19, 0, rx1626_fail3442
    nqp_islist $I20, rx1626_cstack
    unless $I20, rx1626_jump3443
    elements $I18, rx1626_bstack
    le $I18, 0, rx1626_cut3444
    dec $I18
    set $I18, rx1626_bstack[$I18]
  rx1626_cut3444:
    assign rx1626_cstack, $I18
  rx1626_jump3443:
    jump $I19
  rx1626_done3440:
    rx1626_cur."!cursor_fail"()
    .return (rx1626_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<++>" :subid("cuid_176_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1342
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1630_tgt
    .local int rx1630_pos
    .local int rx1630_off
    .local int rx1630_eos
    .local int rx1630_rep
    .local pmc rx1630_cur
    .local pmc rx1630_curclass
    .local pmc rx1630_bstack
    .local pmc rx1630_cstack
    (rx1630_cur, rx1630_tgt, rx1630_pos, rx1630_curclass, rx1630_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1630_cur
    length rx1630_eos, rx1630_tgt
    eq $I19, 1, rx1630_restart3453
    gt rx1630_pos, rx1630_eos, rx1630_fail3454
    repr_get_attr_int $I11, self, rx1630_curclass, "$!from"
    ne $I11, -1, rxscan1631_done3460
    goto rxscan1631_scan3459
  rxscan1631_loop3458:
    inc rx1630_pos
    gt rx1630_pos, rx1630_eos, rx1630_fail3454
    repr_bind_attr_int rx1630_cur, rx1630_curclass, "$!from", rx1630_pos
  rxscan1631_scan3459:
    nqp_rxmark rx1630_bstack, rxscan1631_loop3458, rx1630_pos, 0
  rxscan1631_done3460:
    nqp_rxmark rx1630_bstack, rxcap1632_fail3462, rx1630_pos, 0
    add $I11, rx1630_pos, 2
    gt $I11, rx1630_eos, rx1630_fail3454
    substr $S10, rx1630_tgt, rx1630_pos, 2
    ne $S10, ucs4:"++", rx1630_fail3454
    add rx1630_pos, 2
    nqp_rxpeek $I19, rx1630_bstack, rxcap1632_fail3462
    inc $I19
    set $I11, rx1630_bstack[$I19]
    repr_bind_attr_int rx1630_cur, rx1630_curclass, "$!pos", rx1630_pos
    $P11 = rx1630_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1630_pos)
    rx1630_cstack = rx1630_cur."!cursor_capture"($P11, "sym")
    goto rxcap1632_done3461
  rxcap1632_fail3462:
    goto rx1630_fail3454
  rxcap1632_done3461:
    repr_bind_attr_int rx1630_cur, rx1630_curclass, "$!pos", rx1630_pos
    $P11 = rx1630_cur."O"("%autoincrement, :op<preinc>")
    repr_get_attr_int $I11, $P11, rx1630_curclass, "$!pos"
    lt $I11, 0, rx1630_fail3454
    nqp_rxmark rx1630_bstack, rxsubrule1633_pass3463, -1, 0
  rxsubrule1633_pass3463:
    rx1630_cstack = rx1630_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1630_pos, $P11, rx1630_curclass, "$!pos"
    rx1630_cur."!cursor_pass"(rx1630_pos, "prefix:sym<++>", 'backtrack'=>1)
    .return (rx1630_cur)
  rx1630_restart3453:
    repr_get_attr_obj rx1630_cstack, rx1630_cur, rx1630_curclass, "$!cstack"
  rx1630_fail3454:
    unless rx1630_bstack, rx1630_done3452
    pop $I19, rx1630_bstack
    if_null rx1630_cstack, rx1630_cstack_done3457
    unless rx1630_cstack, rx1630_cstack_done3457
    dec $I19
    set $P11, rx1630_cstack[$I19]
  rx1630_cstack_done3457:
    pop rx1630_rep, rx1630_bstack
    pop rx1630_pos, rx1630_bstack
    pop $I19, rx1630_bstack
    lt rx1630_pos, -1, rx1630_done3452
    lt rx1630_pos, 0, rx1630_fail3454
    eq $I19, 0, rx1630_fail3454
    nqp_islist $I20, rx1630_cstack
    unless $I20, rx1630_jump3455
    elements $I18, rx1630_bstack
    le $I18, 0, rx1630_cut3456
    dec $I18
    set $I18, rx1630_bstack[$I18]
  rx1630_cut3456:
    assign rx1630_cstack, $I18
  rx1630_jump3455:
    jump $I19
  rx1630_done3452:
    rx1630_cur."!cursor_fail"()
    .return (rx1630_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<-->" :subid("cuid_177_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1343
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1634_tgt
    .local int rx1634_pos
    .local int rx1634_off
    .local int rx1634_eos
    .local int rx1634_rep
    .local pmc rx1634_cur
    .local pmc rx1634_curclass
    .local pmc rx1634_bstack
    .local pmc rx1634_cstack
    (rx1634_cur, rx1634_tgt, rx1634_pos, rx1634_curclass, rx1634_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1634_cur
    length rx1634_eos, rx1634_tgt
    eq $I19, 1, rx1634_restart3466
    gt rx1634_pos, rx1634_eos, rx1634_fail3467
    repr_get_attr_int $I11, self, rx1634_curclass, "$!from"
    ne $I11, -1, rxscan1635_done3473
    goto rxscan1635_scan3472
  rxscan1635_loop3471:
    inc rx1634_pos
    gt rx1634_pos, rx1634_eos, rx1634_fail3467
    repr_bind_attr_int rx1634_cur, rx1634_curclass, "$!from", rx1634_pos
  rxscan1635_scan3472:
    nqp_rxmark rx1634_bstack, rxscan1635_loop3471, rx1634_pos, 0
  rxscan1635_done3473:
    nqp_rxmark rx1634_bstack, rxcap1636_fail3475, rx1634_pos, 0
    add $I11, rx1634_pos, 2
    gt $I11, rx1634_eos, rx1634_fail3467
    substr $S10, rx1634_tgt, rx1634_pos, 2
    ne $S10, ucs4:"--", rx1634_fail3467
    add rx1634_pos, 2
    nqp_rxpeek $I19, rx1634_bstack, rxcap1636_fail3475
    inc $I19
    set $I11, rx1634_bstack[$I19]
    repr_bind_attr_int rx1634_cur, rx1634_curclass, "$!pos", rx1634_pos
    $P11 = rx1634_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1634_pos)
    rx1634_cstack = rx1634_cur."!cursor_capture"($P11, "sym")
    goto rxcap1636_done3474
  rxcap1636_fail3475:
    goto rx1634_fail3467
  rxcap1636_done3474:
    repr_bind_attr_int rx1634_cur, rx1634_curclass, "$!pos", rx1634_pos
    $P11 = rx1634_cur."O"("%autoincrement, :op<predec>")
    repr_get_attr_int $I11, $P11, rx1634_curclass, "$!pos"
    lt $I11, 0, rx1634_fail3467
    nqp_rxmark rx1634_bstack, rxsubrule1637_pass3476, -1, 0
  rxsubrule1637_pass3476:
    rx1634_cstack = rx1634_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1634_pos, $P11, rx1634_curclass, "$!pos"
    rx1634_cur."!cursor_pass"(rx1634_pos, "prefix:sym<-->", 'backtrack'=>1)
    .return (rx1634_cur)
  rx1634_restart3466:
    repr_get_attr_obj rx1634_cstack, rx1634_cur, rx1634_curclass, "$!cstack"
  rx1634_fail3467:
    unless rx1634_bstack, rx1634_done3465
    pop $I19, rx1634_bstack
    if_null rx1634_cstack, rx1634_cstack_done3470
    unless rx1634_cstack, rx1634_cstack_done3470
    dec $I19
    set $P11, rx1634_cstack[$I19]
  rx1634_cstack_done3470:
    pop rx1634_rep, rx1634_bstack
    pop rx1634_pos, rx1634_bstack
    pop $I19, rx1634_bstack
    lt rx1634_pos, -1, rx1634_done3465
    lt rx1634_pos, 0, rx1634_fail3467
    eq $I19, 0, rx1634_fail3467
    nqp_islist $I20, rx1634_cstack
    unless $I20, rx1634_jump3468
    elements $I18, rx1634_bstack
    le $I18, 0, rx1634_cut3469
    dec $I18
    set $I18, rx1634_bstack[$I18]
  rx1634_cut3469:
    assign rx1634_cstack, $I18
  rx1634_jump3468:
    jump $I19
  rx1634_done3465:
    rx1634_cur."!cursor_fail"()
    .return (rx1634_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postfix:sym<++>" :subid("cuid_178_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1345
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1638_tgt
    .local int rx1638_pos
    .local int rx1638_off
    .local int rx1638_eos
    .local int rx1638_rep
    .local pmc rx1638_cur
    .local pmc rx1638_curclass
    .local pmc rx1638_bstack
    .local pmc rx1638_cstack
    (rx1638_cur, rx1638_tgt, rx1638_pos, rx1638_curclass, rx1638_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1638_cur
    length rx1638_eos, rx1638_tgt
    eq $I19, 1, rx1638_restart3479
    gt rx1638_pos, rx1638_eos, rx1638_fail3480
    repr_get_attr_int $I11, self, rx1638_curclass, "$!from"
    ne $I11, -1, rxscan1639_done3486
    goto rxscan1639_scan3485
  rxscan1639_loop3484:
    inc rx1638_pos
    gt rx1638_pos, rx1638_eos, rx1638_fail3480
    repr_bind_attr_int rx1638_cur, rx1638_curclass, "$!from", rx1638_pos
  rxscan1639_scan3485:
    nqp_rxmark rx1638_bstack, rxscan1639_loop3484, rx1638_pos, 0
  rxscan1639_done3486:
    nqp_rxmark rx1638_bstack, rxcap1640_fail3488, rx1638_pos, 0
    add $I11, rx1638_pos, 2
    gt $I11, rx1638_eos, rx1638_fail3480
    substr $S10, rx1638_tgt, rx1638_pos, 2
    ne $S10, ucs4:"++", rx1638_fail3480
    add rx1638_pos, 2
    nqp_rxpeek $I19, rx1638_bstack, rxcap1640_fail3488
    inc $I19
    set $I11, rx1638_bstack[$I19]
    repr_bind_attr_int rx1638_cur, rx1638_curclass, "$!pos", rx1638_pos
    $P11 = rx1638_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1638_pos)
    rx1638_cstack = rx1638_cur."!cursor_capture"($P11, "sym")
    goto rxcap1640_done3487
  rxcap1640_fail3488:
    goto rx1638_fail3480
  rxcap1640_done3487:
    repr_bind_attr_int rx1638_cur, rx1638_curclass, "$!pos", rx1638_pos
    $P11 = rx1638_cur."O"("%autoincrement, :op<postinc>")
    repr_get_attr_int $I11, $P11, rx1638_curclass, "$!pos"
    lt $I11, 0, rx1638_fail3480
    nqp_rxmark rx1638_bstack, rxsubrule1641_pass3489, -1, 0
  rxsubrule1641_pass3489:
    rx1638_cstack = rx1638_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1638_pos, $P11, rx1638_curclass, "$!pos"
    rx1638_cur."!cursor_pass"(rx1638_pos, "postfix:sym<++>", 'backtrack'=>1)
    .return (rx1638_cur)
  rx1638_restart3479:
    repr_get_attr_obj rx1638_cstack, rx1638_cur, rx1638_curclass, "$!cstack"
  rx1638_fail3480:
    unless rx1638_bstack, rx1638_done3478
    pop $I19, rx1638_bstack
    if_null rx1638_cstack, rx1638_cstack_done3483
    unless rx1638_cstack, rx1638_cstack_done3483
    dec $I19
    set $P11, rx1638_cstack[$I19]
  rx1638_cstack_done3483:
    pop rx1638_rep, rx1638_bstack
    pop rx1638_pos, rx1638_bstack
    pop $I19, rx1638_bstack
    lt rx1638_pos, -1, rx1638_done3478
    lt rx1638_pos, 0, rx1638_fail3480
    eq $I19, 0, rx1638_fail3480
    nqp_islist $I20, rx1638_cstack
    unless $I20, rx1638_jump3481
    elements $I18, rx1638_bstack
    le $I18, 0, rx1638_cut3482
    dec $I18
    set $I18, rx1638_bstack[$I18]
  rx1638_cut3482:
    assign rx1638_cstack, $I18
  rx1638_jump3481:
    jump $I19
  rx1638_done3478:
    rx1638_cur."!cursor_fail"()
    .return (rx1638_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postfix:sym<-->" :subid("cuid_179_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1346
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1642_tgt
    .local int rx1642_pos
    .local int rx1642_off
    .local int rx1642_eos
    .local int rx1642_rep
    .local pmc rx1642_cur
    .local pmc rx1642_curclass
    .local pmc rx1642_bstack
    .local pmc rx1642_cstack
    (rx1642_cur, rx1642_tgt, rx1642_pos, rx1642_curclass, rx1642_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1642_cur
    length rx1642_eos, rx1642_tgt
    eq $I19, 1, rx1642_restart3492
    gt rx1642_pos, rx1642_eos, rx1642_fail3493
    repr_get_attr_int $I11, self, rx1642_curclass, "$!from"
    ne $I11, -1, rxscan1643_done3499
    goto rxscan1643_scan3498
  rxscan1643_loop3497:
    inc rx1642_pos
    gt rx1642_pos, rx1642_eos, rx1642_fail3493
    repr_bind_attr_int rx1642_cur, rx1642_curclass, "$!from", rx1642_pos
  rxscan1643_scan3498:
    nqp_rxmark rx1642_bstack, rxscan1643_loop3497, rx1642_pos, 0
  rxscan1643_done3499:
    nqp_rxmark rx1642_bstack, rxcap1644_fail3501, rx1642_pos, 0
    add $I11, rx1642_pos, 2
    gt $I11, rx1642_eos, rx1642_fail3493
    substr $S10, rx1642_tgt, rx1642_pos, 2
    ne $S10, ucs4:"--", rx1642_fail3493
    add rx1642_pos, 2
    nqp_rxpeek $I19, rx1642_bstack, rxcap1644_fail3501
    inc $I19
    set $I11, rx1642_bstack[$I19]
    repr_bind_attr_int rx1642_cur, rx1642_curclass, "$!pos", rx1642_pos
    $P11 = rx1642_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1642_pos)
    rx1642_cstack = rx1642_cur."!cursor_capture"($P11, "sym")
    goto rxcap1644_done3500
  rxcap1644_fail3501:
    goto rx1642_fail3493
  rxcap1644_done3500:
    repr_bind_attr_int rx1642_cur, rx1642_curclass, "$!pos", rx1642_pos
    $P11 = rx1642_cur."O"("%autoincrement, :op<postdec>")
    repr_get_attr_int $I11, $P11, rx1642_curclass, "$!pos"
    lt $I11, 0, rx1642_fail3493
    nqp_rxmark rx1642_bstack, rxsubrule1645_pass3502, -1, 0
  rxsubrule1645_pass3502:
    rx1642_cstack = rx1642_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1642_pos, $P11, rx1642_curclass, "$!pos"
    rx1642_cur."!cursor_pass"(rx1642_pos, "postfix:sym<-->", 'backtrack'=>1)
    .return (rx1642_cur)
  rx1642_restart3492:
    repr_get_attr_obj rx1642_cstack, rx1642_cur, rx1642_curclass, "$!cstack"
  rx1642_fail3493:
    unless rx1642_bstack, rx1642_done3491
    pop $I19, rx1642_bstack
    if_null rx1642_cstack, rx1642_cstack_done3496
    unless rx1642_cstack, rx1642_cstack_done3496
    dec $I19
    set $P11, rx1642_cstack[$I19]
  rx1642_cstack_done3496:
    pop rx1642_rep, rx1642_bstack
    pop rx1642_pos, rx1642_bstack
    pop $I19, rx1642_bstack
    lt rx1642_pos, -1, rx1642_done3491
    lt rx1642_pos, 0, rx1642_fail3493
    eq $I19, 0, rx1642_fail3493
    nqp_islist $I20, rx1642_cstack
    unless $I20, rx1642_jump3494
    elements $I18, rx1642_bstack
    le $I18, 0, rx1642_cut3495
    dec $I18
    set $I18, rx1642_bstack[$I18]
  rx1642_cut3495:
    assign rx1642_cstack, $I18
  rx1642_jump3494:
    jump $I19
  rx1642_done3491:
    rx1642_cur."!cursor_fail"()
    .return (rx1642_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<**>" :subid("cuid_180_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1348
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1646_tgt
    .local int rx1646_pos
    .local int rx1646_off
    .local int rx1646_eos
    .local int rx1646_rep
    .local pmc rx1646_cur
    .local pmc rx1646_curclass
    .local pmc rx1646_bstack
    .local pmc rx1646_cstack
    (rx1646_cur, rx1646_tgt, rx1646_pos, rx1646_curclass, rx1646_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1646_cur
    length rx1646_eos, rx1646_tgt
    eq $I19, 1, rx1646_restart3505
    gt rx1646_pos, rx1646_eos, rx1646_fail3506
    repr_get_attr_int $I11, self, rx1646_curclass, "$!from"
    ne $I11, -1, rxscan1647_done3512
    goto rxscan1647_scan3511
  rxscan1647_loop3510:
    inc rx1646_pos
    gt rx1646_pos, rx1646_eos, rx1646_fail3506
    repr_bind_attr_int rx1646_cur, rx1646_curclass, "$!from", rx1646_pos
  rxscan1647_scan3511:
    nqp_rxmark rx1646_bstack, rxscan1647_loop3510, rx1646_pos, 0
  rxscan1647_done3512:
    nqp_rxmark rx1646_bstack, rxcap1648_fail3514, rx1646_pos, 0
    add $I11, rx1646_pos, 2
    gt $I11, rx1646_eos, rx1646_fail3506
    substr $S10, rx1646_tgt, rx1646_pos, 2
    ne $S10, ucs4:"**", rx1646_fail3506
    add rx1646_pos, 2
    nqp_rxpeek $I19, rx1646_bstack, rxcap1648_fail3514
    inc $I19
    set $I11, rx1646_bstack[$I19]
    repr_bind_attr_int rx1646_cur, rx1646_curclass, "$!pos", rx1646_pos
    $P11 = rx1646_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1646_pos)
    rx1646_cstack = rx1646_cur."!cursor_capture"($P11, "sym")
    goto rxcap1648_done3513
  rxcap1648_fail3514:
    goto rx1646_fail3506
  rxcap1648_done3513:
    repr_bind_attr_int rx1646_cur, rx1646_curclass, "$!pos", rx1646_pos
    $P11 = rx1646_cur."O"("%exponentiation, :op<pow_n>")
    repr_get_attr_int $I11, $P11, rx1646_curclass, "$!pos"
    lt $I11, 0, rx1646_fail3506
    nqp_rxmark rx1646_bstack, rxsubrule1649_pass3515, -1, 0
  rxsubrule1649_pass3515:
    rx1646_cstack = rx1646_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1646_pos, $P11, rx1646_curclass, "$!pos"
    rx1646_cur."!cursor_pass"(rx1646_pos, "infix:sym<**>", 'backtrack'=>1)
    .return (rx1646_cur)
  rx1646_restart3505:
    repr_get_attr_obj rx1646_cstack, rx1646_cur, rx1646_curclass, "$!cstack"
  rx1646_fail3506:
    unless rx1646_bstack, rx1646_done3504
    pop $I19, rx1646_bstack
    if_null rx1646_cstack, rx1646_cstack_done3509
    unless rx1646_cstack, rx1646_cstack_done3509
    dec $I19
    set $P11, rx1646_cstack[$I19]
  rx1646_cstack_done3509:
    pop rx1646_rep, rx1646_bstack
    pop rx1646_pos, rx1646_bstack
    pop $I19, rx1646_bstack
    lt rx1646_pos, -1, rx1646_done3504
    lt rx1646_pos, 0, rx1646_fail3506
    eq $I19, 0, rx1646_fail3506
    nqp_islist $I20, rx1646_cstack
    unless $I20, rx1646_jump3507
    elements $I18, rx1646_bstack
    le $I18, 0, rx1646_cut3508
    dec $I18
    set $I18, rx1646_bstack[$I18]
  rx1646_cut3508:
    assign rx1646_cstack, $I18
  rx1646_jump3507:
    jump $I19
  rx1646_done3504:
    rx1646_cur."!cursor_fail"()
    .return (rx1646_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<+>" :subid("cuid_181_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1350
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1650_tgt
    .local int rx1650_pos
    .local int rx1650_off
    .local int rx1650_eos
    .local int rx1650_rep
    .local pmc rx1650_cur
    .local pmc rx1650_curclass
    .local pmc rx1650_bstack
    .local pmc rx1650_cstack
    (rx1650_cur, rx1650_tgt, rx1650_pos, rx1650_curclass, rx1650_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1650_cur
    length rx1650_eos, rx1650_tgt
    eq $I19, 1, rx1650_restart3518
    gt rx1650_pos, rx1650_eos, rx1650_fail3519
    repr_get_attr_int $I11, self, rx1650_curclass, "$!from"
    ne $I11, -1, rxscan1651_done3525
    goto rxscan1651_scan3524
  rxscan1651_loop3523:
    inc rx1650_pos
    gt rx1650_pos, rx1650_eos, rx1650_fail3519
    repr_bind_attr_int rx1650_cur, rx1650_curclass, "$!from", rx1650_pos
  rxscan1651_scan3524:
    nqp_rxmark rx1650_bstack, rxscan1651_loop3523, rx1650_pos, 0
  rxscan1651_done3525:
    nqp_rxmark rx1650_bstack, rxcap1652_fail3527, rx1650_pos, 0
    add $I11, rx1650_pos, 1
    gt $I11, rx1650_eos, rx1650_fail3519
    substr $S10, rx1650_tgt, rx1650_pos, 1
    ne $S10, ucs4:"+", rx1650_fail3519
    add rx1650_pos, 1
    nqp_rxpeek $I19, rx1650_bstack, rxcap1652_fail3527
    inc $I19
    set $I11, rx1650_bstack[$I19]
    repr_bind_attr_int rx1650_cur, rx1650_curclass, "$!pos", rx1650_pos
    $P11 = rx1650_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1650_pos)
    rx1650_cstack = rx1650_cur."!cursor_capture"($P11, "sym")
    goto rxcap1652_done3526
  rxcap1652_fail3527:
    goto rx1650_fail3519
  rxcap1652_done3526:
    repr_bind_attr_int rx1650_cur, rx1650_curclass, "$!pos", rx1650_pos
    $P11 = rx1650_cur."O"("%symbolic_unary, :op<numify>")
    repr_get_attr_int $I11, $P11, rx1650_curclass, "$!pos"
    lt $I11, 0, rx1650_fail3519
    nqp_rxmark rx1650_bstack, rxsubrule1653_pass3528, -1, 0
  rxsubrule1653_pass3528:
    rx1650_cstack = rx1650_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1650_pos, $P11, rx1650_curclass, "$!pos"
    rx1650_cur."!cursor_pass"(rx1650_pos, "prefix:sym<+>", 'backtrack'=>1)
    .return (rx1650_cur)
  rx1650_restart3518:
    repr_get_attr_obj rx1650_cstack, rx1650_cur, rx1650_curclass, "$!cstack"
  rx1650_fail3519:
    unless rx1650_bstack, rx1650_done3517
    pop $I19, rx1650_bstack
    if_null rx1650_cstack, rx1650_cstack_done3522
    unless rx1650_cstack, rx1650_cstack_done3522
    dec $I19
    set $P11, rx1650_cstack[$I19]
  rx1650_cstack_done3522:
    pop rx1650_rep, rx1650_bstack
    pop rx1650_pos, rx1650_bstack
    pop $I19, rx1650_bstack
    lt rx1650_pos, -1, rx1650_done3517
    lt rx1650_pos, 0, rx1650_fail3519
    eq $I19, 0, rx1650_fail3519
    nqp_islist $I20, rx1650_cstack
    unless $I20, rx1650_jump3520
    elements $I18, rx1650_bstack
    le $I18, 0, rx1650_cut3521
    dec $I18
    set $I18, rx1650_bstack[$I18]
  rx1650_cut3521:
    assign rx1650_cstack, $I18
  rx1650_jump3520:
    jump $I19
  rx1650_done3517:
    rx1650_cur."!cursor_fail"()
    .return (rx1650_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<~>" :subid("cuid_182_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1351
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1654_tgt
    .local int rx1654_pos
    .local int rx1654_off
    .local int rx1654_eos
    .local int rx1654_rep
    .local pmc rx1654_cur
    .local pmc rx1654_curclass
    .local pmc rx1654_bstack
    .local pmc rx1654_cstack
    (rx1654_cur, rx1654_tgt, rx1654_pos, rx1654_curclass, rx1654_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1654_cur
    length rx1654_eos, rx1654_tgt
    eq $I19, 1, rx1654_restart3531
    gt rx1654_pos, rx1654_eos, rx1654_fail3532
    repr_get_attr_int $I11, self, rx1654_curclass, "$!from"
    ne $I11, -1, rxscan1655_done3538
    goto rxscan1655_scan3537
  rxscan1655_loop3536:
    inc rx1654_pos
    gt rx1654_pos, rx1654_eos, rx1654_fail3532
    repr_bind_attr_int rx1654_cur, rx1654_curclass, "$!from", rx1654_pos
  rxscan1655_scan3537:
    nqp_rxmark rx1654_bstack, rxscan1655_loop3536, rx1654_pos, 0
  rxscan1655_done3538:
    nqp_rxmark rx1654_bstack, rxcap1656_fail3540, rx1654_pos, 0
    add $I11, rx1654_pos, 1
    gt $I11, rx1654_eos, rx1654_fail3532
    substr $S10, rx1654_tgt, rx1654_pos, 1
    ne $S10, ucs4:"~", rx1654_fail3532
    add rx1654_pos, 1
    nqp_rxpeek $I19, rx1654_bstack, rxcap1656_fail3540
    inc $I19
    set $I11, rx1654_bstack[$I19]
    repr_bind_attr_int rx1654_cur, rx1654_curclass, "$!pos", rx1654_pos
    $P11 = rx1654_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1654_pos)
    rx1654_cstack = rx1654_cur."!cursor_capture"($P11, "sym")
    goto rxcap1656_done3539
  rxcap1656_fail3540:
    goto rx1654_fail3532
  rxcap1656_done3539:
    repr_bind_attr_int rx1654_cur, rx1654_curclass, "$!pos", rx1654_pos
    $P11 = rx1654_cur."O"("%symbolic_unary, :op<stringify>")
    repr_get_attr_int $I11, $P11, rx1654_curclass, "$!pos"
    lt $I11, 0, rx1654_fail3532
    nqp_rxmark rx1654_bstack, rxsubrule1657_pass3541, -1, 0
  rxsubrule1657_pass3541:
    rx1654_cstack = rx1654_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1654_pos, $P11, rx1654_curclass, "$!pos"
    rx1654_cur."!cursor_pass"(rx1654_pos, "prefix:sym<~>", 'backtrack'=>1)
    .return (rx1654_cur)
  rx1654_restart3531:
    repr_get_attr_obj rx1654_cstack, rx1654_cur, rx1654_curclass, "$!cstack"
  rx1654_fail3532:
    unless rx1654_bstack, rx1654_done3530
    pop $I19, rx1654_bstack
    if_null rx1654_cstack, rx1654_cstack_done3535
    unless rx1654_cstack, rx1654_cstack_done3535
    dec $I19
    set $P11, rx1654_cstack[$I19]
  rx1654_cstack_done3535:
    pop rx1654_rep, rx1654_bstack
    pop rx1654_pos, rx1654_bstack
    pop $I19, rx1654_bstack
    lt rx1654_pos, -1, rx1654_done3530
    lt rx1654_pos, 0, rx1654_fail3532
    eq $I19, 0, rx1654_fail3532
    nqp_islist $I20, rx1654_cstack
    unless $I20, rx1654_jump3533
    elements $I18, rx1654_bstack
    le $I18, 0, rx1654_cut3534
    dec $I18
    set $I18, rx1654_bstack[$I18]
  rx1654_cut3534:
    assign rx1654_cstack, $I18
  rx1654_jump3533:
    jump $I19
  rx1654_done3530:
    rx1654_cur."!cursor_fail"()
    .return (rx1654_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<->" :subid("cuid_183_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1352
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1658_tgt
    .local int rx1658_pos
    .local int rx1658_off
    .local int rx1658_eos
    .local int rx1658_rep
    .local pmc rx1658_cur
    .local pmc rx1658_curclass
    .local pmc rx1658_bstack
    .local pmc rx1658_cstack
    (rx1658_cur, rx1658_tgt, rx1658_pos, rx1658_curclass, rx1658_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1658_cur
    length rx1658_eos, rx1658_tgt
    eq $I19, 1, rx1658_restart3544
    gt rx1658_pos, rx1658_eos, rx1658_fail3545
    repr_get_attr_int $I11, self, rx1658_curclass, "$!from"
    ne $I11, -1, rxscan1659_done3551
    goto rxscan1659_scan3550
  rxscan1659_loop3549:
    inc rx1658_pos
    gt rx1658_pos, rx1658_eos, rx1658_fail3545
    repr_bind_attr_int rx1658_cur, rx1658_curclass, "$!from", rx1658_pos
  rxscan1659_scan3550:
    nqp_rxmark rx1658_bstack, rxscan1659_loop3549, rx1658_pos, 0
  rxscan1659_done3551:
    nqp_rxmark rx1658_bstack, rxcap1660_fail3553, rx1658_pos, 0
    add $I11, rx1658_pos, 1
    gt $I11, rx1658_eos, rx1658_fail3545
    substr $S10, rx1658_tgt, rx1658_pos, 1
    ne $S10, ucs4:"-", rx1658_fail3545
    add rx1658_pos, 1
    nqp_rxpeek $I19, rx1658_bstack, rxcap1660_fail3553
    inc $I19
    set $I11, rx1658_bstack[$I19]
    repr_bind_attr_int rx1658_cur, rx1658_curclass, "$!pos", rx1658_pos
    $P11 = rx1658_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1658_pos)
    rx1658_cstack = rx1658_cur."!cursor_capture"($P11, "sym")
    goto rxcap1660_done3552
  rxcap1660_fail3553:
    goto rx1658_fail3545
  rxcap1660_done3552:
    ge rx1658_pos, rx1658_eos, rx1658_fail3545
    substr $S11, rx1658_tgt, rx1658_pos, 1
    index $I11, ucs4:">", $S11
    ge $I11, 0, rx1658_fail3545
    repr_bind_attr_int rx1658_cur, rx1658_curclass, "$!pos", rx1658_pos
    $P11 = rx1658_cur."number"()
    repr_get_attr_int $I11, $P11, rx1658_curclass, "$!pos"
    ge $I11, 0, rx1658_fail3545
    repr_bind_attr_int rx1658_cur, rx1658_curclass, "$!pos", rx1658_pos
    $P11 = rx1658_cur."O"("%symbolic_unary, :op<neg_n>")
    repr_get_attr_int $I11, $P11, rx1658_curclass, "$!pos"
    lt $I11, 0, rx1658_fail3545
    nqp_rxmark rx1658_bstack, rxsubrule1661_pass3554, -1, 0
  rxsubrule1661_pass3554:
    rx1658_cstack = rx1658_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1658_pos, $P11, rx1658_curclass, "$!pos"
    rx1658_cur."!cursor_pass"(rx1658_pos, "prefix:sym<->", 'backtrack'=>1)
    .return (rx1658_cur)
  rx1658_restart3544:
    repr_get_attr_obj rx1658_cstack, rx1658_cur, rx1658_curclass, "$!cstack"
  rx1658_fail3545:
    unless rx1658_bstack, rx1658_done3543
    pop $I19, rx1658_bstack
    if_null rx1658_cstack, rx1658_cstack_done3548
    unless rx1658_cstack, rx1658_cstack_done3548
    dec $I19
    set $P11, rx1658_cstack[$I19]
  rx1658_cstack_done3548:
    pop rx1658_rep, rx1658_bstack
    pop rx1658_pos, rx1658_bstack
    pop $I19, rx1658_bstack
    lt rx1658_pos, -1, rx1658_done3543
    lt rx1658_pos, 0, rx1658_fail3545
    eq $I19, 0, rx1658_fail3545
    nqp_islist $I20, rx1658_cstack
    unless $I20, rx1658_jump3546
    elements $I18, rx1658_bstack
    le $I18, 0, rx1658_cut3547
    dec $I18
    set $I18, rx1658_bstack[$I18]
  rx1658_cut3547:
    assign rx1658_cstack, $I18
  rx1658_jump3546:
    jump $I19
  rx1658_done3543:
    rx1658_cur."!cursor_fail"()
    .return (rx1658_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<?>" :subid("cuid_184_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1353
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1662_tgt
    .local int rx1662_pos
    .local int rx1662_off
    .local int rx1662_eos
    .local int rx1662_rep
    .local pmc rx1662_cur
    .local pmc rx1662_curclass
    .local pmc rx1662_bstack
    .local pmc rx1662_cstack
    (rx1662_cur, rx1662_tgt, rx1662_pos, rx1662_curclass, rx1662_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1662_cur
    length rx1662_eos, rx1662_tgt
    eq $I19, 1, rx1662_restart3557
    gt rx1662_pos, rx1662_eos, rx1662_fail3558
    repr_get_attr_int $I11, self, rx1662_curclass, "$!from"
    ne $I11, -1, rxscan1663_done3564
    goto rxscan1663_scan3563
  rxscan1663_loop3562:
    inc rx1662_pos
    gt rx1662_pos, rx1662_eos, rx1662_fail3558
    repr_bind_attr_int rx1662_cur, rx1662_curclass, "$!from", rx1662_pos
  rxscan1663_scan3563:
    nqp_rxmark rx1662_bstack, rxscan1663_loop3562, rx1662_pos, 0
  rxscan1663_done3564:
    nqp_rxmark rx1662_bstack, rxcap1664_fail3566, rx1662_pos, 0
    add $I11, rx1662_pos, 1
    gt $I11, rx1662_eos, rx1662_fail3558
    substr $S10, rx1662_tgt, rx1662_pos, 1
    ne $S10, ucs4:"?", rx1662_fail3558
    add rx1662_pos, 1
    nqp_rxpeek $I19, rx1662_bstack, rxcap1664_fail3566
    inc $I19
    set $I11, rx1662_bstack[$I19]
    repr_bind_attr_int rx1662_cur, rx1662_curclass, "$!pos", rx1662_pos
    $P11 = rx1662_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1662_pos)
    rx1662_cstack = rx1662_cur."!cursor_capture"($P11, "sym")
    goto rxcap1664_done3565
  rxcap1664_fail3566:
    goto rx1662_fail3558
  rxcap1664_done3565:
    repr_bind_attr_int rx1662_cur, rx1662_curclass, "$!pos", rx1662_pos
    $P11 = rx1662_cur."O"("%symbolic_unary, :op<istrue>")
    repr_get_attr_int $I11, $P11, rx1662_curclass, "$!pos"
    lt $I11, 0, rx1662_fail3558
    nqp_rxmark rx1662_bstack, rxsubrule1665_pass3567, -1, 0
  rxsubrule1665_pass3567:
    rx1662_cstack = rx1662_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1662_pos, $P11, rx1662_curclass, "$!pos"
    rx1662_cur."!cursor_pass"(rx1662_pos, "prefix:sym<?>", 'backtrack'=>1)
    .return (rx1662_cur)
  rx1662_restart3557:
    repr_get_attr_obj rx1662_cstack, rx1662_cur, rx1662_curclass, "$!cstack"
  rx1662_fail3558:
    unless rx1662_bstack, rx1662_done3556
    pop $I19, rx1662_bstack
    if_null rx1662_cstack, rx1662_cstack_done3561
    unless rx1662_cstack, rx1662_cstack_done3561
    dec $I19
    set $P11, rx1662_cstack[$I19]
  rx1662_cstack_done3561:
    pop rx1662_rep, rx1662_bstack
    pop rx1662_pos, rx1662_bstack
    pop $I19, rx1662_bstack
    lt rx1662_pos, -1, rx1662_done3556
    lt rx1662_pos, 0, rx1662_fail3558
    eq $I19, 0, rx1662_fail3558
    nqp_islist $I20, rx1662_cstack
    unless $I20, rx1662_jump3559
    elements $I18, rx1662_bstack
    le $I18, 0, rx1662_cut3560
    dec $I18
    set $I18, rx1662_bstack[$I18]
  rx1662_cut3560:
    assign rx1662_cstack, $I18
  rx1662_jump3559:
    jump $I19
  rx1662_done3556:
    rx1662_cur."!cursor_fail"()
    .return (rx1662_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<!>" :subid("cuid_185_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1354
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1666_tgt
    .local int rx1666_pos
    .local int rx1666_off
    .local int rx1666_eos
    .local int rx1666_rep
    .local pmc rx1666_cur
    .local pmc rx1666_curclass
    .local pmc rx1666_bstack
    .local pmc rx1666_cstack
    (rx1666_cur, rx1666_tgt, rx1666_pos, rx1666_curclass, rx1666_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1666_cur
    length rx1666_eos, rx1666_tgt
    eq $I19, 1, rx1666_restart3570
    gt rx1666_pos, rx1666_eos, rx1666_fail3571
    repr_get_attr_int $I11, self, rx1666_curclass, "$!from"
    ne $I11, -1, rxscan1667_done3577
    goto rxscan1667_scan3576
  rxscan1667_loop3575:
    inc rx1666_pos
    gt rx1666_pos, rx1666_eos, rx1666_fail3571
    repr_bind_attr_int rx1666_cur, rx1666_curclass, "$!from", rx1666_pos
  rxscan1667_scan3576:
    nqp_rxmark rx1666_bstack, rxscan1667_loop3575, rx1666_pos, 0
  rxscan1667_done3577:
    nqp_rxmark rx1666_bstack, rxcap1668_fail3579, rx1666_pos, 0
    add $I11, rx1666_pos, 1
    gt $I11, rx1666_eos, rx1666_fail3571
    substr $S10, rx1666_tgt, rx1666_pos, 1
    ne $S10, ucs4:"!", rx1666_fail3571
    add rx1666_pos, 1
    nqp_rxpeek $I19, rx1666_bstack, rxcap1668_fail3579
    inc $I19
    set $I11, rx1666_bstack[$I19]
    repr_bind_attr_int rx1666_cur, rx1666_curclass, "$!pos", rx1666_pos
    $P11 = rx1666_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1666_pos)
    rx1666_cstack = rx1666_cur."!cursor_capture"($P11, "sym")
    goto rxcap1668_done3578
  rxcap1668_fail3579:
    goto rx1666_fail3571
  rxcap1668_done3578:
    repr_bind_attr_int rx1666_cur, rx1666_curclass, "$!pos", rx1666_pos
    $P11 = rx1666_cur."O"("%symbolic_unary, :op<falsey>")
    repr_get_attr_int $I11, $P11, rx1666_curclass, "$!pos"
    lt $I11, 0, rx1666_fail3571
    nqp_rxmark rx1666_bstack, rxsubrule1669_pass3580, -1, 0
  rxsubrule1669_pass3580:
    rx1666_cstack = rx1666_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1666_pos, $P11, rx1666_curclass, "$!pos"
    rx1666_cur."!cursor_pass"(rx1666_pos, "prefix:sym<!>", 'backtrack'=>1)
    .return (rx1666_cur)
  rx1666_restart3570:
    repr_get_attr_obj rx1666_cstack, rx1666_cur, rx1666_curclass, "$!cstack"
  rx1666_fail3571:
    unless rx1666_bstack, rx1666_done3569
    pop $I19, rx1666_bstack
    if_null rx1666_cstack, rx1666_cstack_done3574
    unless rx1666_cstack, rx1666_cstack_done3574
    dec $I19
    set $P11, rx1666_cstack[$I19]
  rx1666_cstack_done3574:
    pop rx1666_rep, rx1666_bstack
    pop rx1666_pos, rx1666_bstack
    pop $I19, rx1666_bstack
    lt rx1666_pos, -1, rx1666_done3569
    lt rx1666_pos, 0, rx1666_fail3571
    eq $I19, 0, rx1666_fail3571
    nqp_islist $I20, rx1666_cstack
    unless $I20, rx1666_jump3572
    elements $I18, rx1666_bstack
    le $I18, 0, rx1666_cut3573
    dec $I18
    set $I18, rx1666_bstack[$I18]
  rx1666_cut3573:
    assign rx1666_cstack, $I18
  rx1666_jump3572:
    jump $I19
  rx1666_done3569:
    rx1666_cur."!cursor_fail"()
    .return (rx1666_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<|>" :subid("cuid_186_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1355
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1670_tgt
    .local int rx1670_pos
    .local int rx1670_off
    .local int rx1670_eos
    .local int rx1670_rep
    .local pmc rx1670_cur
    .local pmc rx1670_curclass
    .local pmc rx1670_bstack
    .local pmc rx1670_cstack
    (rx1670_cur, rx1670_tgt, rx1670_pos, rx1670_curclass, rx1670_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1670_cur
    length rx1670_eos, rx1670_tgt
    eq $I19, 1, rx1670_restart3583
    gt rx1670_pos, rx1670_eos, rx1670_fail3584
    repr_get_attr_int $I11, self, rx1670_curclass, "$!from"
    ne $I11, -1, rxscan1671_done3590
    goto rxscan1671_scan3589
  rxscan1671_loop3588:
    inc rx1670_pos
    gt rx1670_pos, rx1670_eos, rx1670_fail3584
    repr_bind_attr_int rx1670_cur, rx1670_curclass, "$!from", rx1670_pos
  rxscan1671_scan3589:
    nqp_rxmark rx1670_bstack, rxscan1671_loop3588, rx1670_pos, 0
  rxscan1671_done3590:
    nqp_rxmark rx1670_bstack, rxcap1672_fail3592, rx1670_pos, 0
    add $I11, rx1670_pos, 1
    gt $I11, rx1670_eos, rx1670_fail3584
    substr $S10, rx1670_tgt, rx1670_pos, 1
    ne $S10, ucs4:"|", rx1670_fail3584
    add rx1670_pos, 1
    nqp_rxpeek $I19, rx1670_bstack, rxcap1672_fail3592
    inc $I19
    set $I11, rx1670_bstack[$I19]
    repr_bind_attr_int rx1670_cur, rx1670_curclass, "$!pos", rx1670_pos
    $P11 = rx1670_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1670_pos)
    rx1670_cstack = rx1670_cur."!cursor_capture"($P11, "sym")
    goto rxcap1672_done3591
  rxcap1672_fail3592:
    goto rx1670_fail3584
  rxcap1672_done3591:
    repr_bind_attr_int rx1670_cur, rx1670_curclass, "$!pos", rx1670_pos
    $P11 = rx1670_cur."O"("%symbolic_unary")
    repr_get_attr_int $I11, $P11, rx1670_curclass, "$!pos"
    lt $I11, 0, rx1670_fail3584
    nqp_rxmark rx1670_bstack, rxsubrule1673_pass3593, -1, 0
  rxsubrule1673_pass3593:
    rx1670_cstack = rx1670_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1670_pos, $P11, rx1670_curclass, "$!pos"
    rx1670_cur."!cursor_pass"(rx1670_pos, "prefix:sym<|>", 'backtrack'=>1)
    .return (rx1670_cur)
  rx1670_restart3583:
    repr_get_attr_obj rx1670_cstack, rx1670_cur, rx1670_curclass, "$!cstack"
  rx1670_fail3584:
    unless rx1670_bstack, rx1670_done3582
    pop $I19, rx1670_bstack
    if_null rx1670_cstack, rx1670_cstack_done3587
    unless rx1670_cstack, rx1670_cstack_done3587
    dec $I19
    set $P11, rx1670_cstack[$I19]
  rx1670_cstack_done3587:
    pop rx1670_rep, rx1670_bstack
    pop rx1670_pos, rx1670_bstack
    pop $I19, rx1670_bstack
    lt rx1670_pos, -1, rx1670_done3582
    lt rx1670_pos, 0, rx1670_fail3584
    eq $I19, 0, rx1670_fail3584
    nqp_islist $I20, rx1670_cstack
    unless $I20, rx1670_jump3585
    elements $I18, rx1670_bstack
    le $I18, 0, rx1670_cut3586
    dec $I18
    set $I18, rx1670_bstack[$I18]
  rx1670_cut3586:
    assign rx1670_cstack, $I18
  rx1670_jump3585:
    jump $I19
  rx1670_done3582:
    rx1670_cur."!cursor_fail"()
    .return (rx1670_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<*>" :subid("cuid_187_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1357
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1674_tgt
    .local int rx1674_pos
    .local int rx1674_off
    .local int rx1674_eos
    .local int rx1674_rep
    .local pmc rx1674_cur
    .local pmc rx1674_curclass
    .local pmc rx1674_bstack
    .local pmc rx1674_cstack
    (rx1674_cur, rx1674_tgt, rx1674_pos, rx1674_curclass, rx1674_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1674_cur
    length rx1674_eos, rx1674_tgt
    eq $I19, 1, rx1674_restart3596
    gt rx1674_pos, rx1674_eos, rx1674_fail3597
    repr_get_attr_int $I11, self, rx1674_curclass, "$!from"
    ne $I11, -1, rxscan1675_done3603
    goto rxscan1675_scan3602
  rxscan1675_loop3601:
    inc rx1674_pos
    gt rx1674_pos, rx1674_eos, rx1674_fail3597
    repr_bind_attr_int rx1674_cur, rx1674_curclass, "$!from", rx1674_pos
  rxscan1675_scan3602:
    nqp_rxmark rx1674_bstack, rxscan1675_loop3601, rx1674_pos, 0
  rxscan1675_done3603:
    nqp_rxmark rx1674_bstack, rxcap1676_fail3605, rx1674_pos, 0
    add $I11, rx1674_pos, 1
    gt $I11, rx1674_eos, rx1674_fail3597
    substr $S10, rx1674_tgt, rx1674_pos, 1
    ne $S10, ucs4:"*", rx1674_fail3597
    add rx1674_pos, 1
    nqp_rxpeek $I19, rx1674_bstack, rxcap1676_fail3605
    inc $I19
    set $I11, rx1674_bstack[$I19]
    repr_bind_attr_int rx1674_cur, rx1674_curclass, "$!pos", rx1674_pos
    $P11 = rx1674_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1674_pos)
    rx1674_cstack = rx1674_cur."!cursor_capture"($P11, "sym")
    goto rxcap1676_done3604
  rxcap1676_fail3605:
    goto rx1674_fail3597
  rxcap1676_done3604:
    repr_bind_attr_int rx1674_cur, rx1674_curclass, "$!pos", rx1674_pos
    $P11 = rx1674_cur."O"("%multiplicative, :op<mul_n>")
    repr_get_attr_int $I11, $P11, rx1674_curclass, "$!pos"
    lt $I11, 0, rx1674_fail3597
    nqp_rxmark rx1674_bstack, rxsubrule1677_pass3606, -1, 0
  rxsubrule1677_pass3606:
    rx1674_cstack = rx1674_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1674_pos, $P11, rx1674_curclass, "$!pos"
    rx1674_cur."!cursor_pass"(rx1674_pos, "infix:sym<*>", 'backtrack'=>1)
    .return (rx1674_cur)
  rx1674_restart3596:
    repr_get_attr_obj rx1674_cstack, rx1674_cur, rx1674_curclass, "$!cstack"
  rx1674_fail3597:
    unless rx1674_bstack, rx1674_done3595
    pop $I19, rx1674_bstack
    if_null rx1674_cstack, rx1674_cstack_done3600
    unless rx1674_cstack, rx1674_cstack_done3600
    dec $I19
    set $P11, rx1674_cstack[$I19]
  rx1674_cstack_done3600:
    pop rx1674_rep, rx1674_bstack
    pop rx1674_pos, rx1674_bstack
    pop $I19, rx1674_bstack
    lt rx1674_pos, -1, rx1674_done3595
    lt rx1674_pos, 0, rx1674_fail3597
    eq $I19, 0, rx1674_fail3597
    nqp_islist $I20, rx1674_cstack
    unless $I20, rx1674_jump3598
    elements $I18, rx1674_bstack
    le $I18, 0, rx1674_cut3599
    dec $I18
    set $I18, rx1674_bstack[$I18]
  rx1674_cut3599:
    assign rx1674_cstack, $I18
  rx1674_jump3598:
    jump $I19
  rx1674_done3595:
    rx1674_cur."!cursor_fail"()
    .return (rx1674_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym</>" :subid("cuid_188_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1358
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1678_tgt
    .local int rx1678_pos
    .local int rx1678_off
    .local int rx1678_eos
    .local int rx1678_rep
    .local pmc rx1678_cur
    .local pmc rx1678_curclass
    .local pmc rx1678_bstack
    .local pmc rx1678_cstack
    (rx1678_cur, rx1678_tgt, rx1678_pos, rx1678_curclass, rx1678_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1678_cur
    length rx1678_eos, rx1678_tgt
    eq $I19, 1, rx1678_restart3609
    gt rx1678_pos, rx1678_eos, rx1678_fail3610
    repr_get_attr_int $I11, self, rx1678_curclass, "$!from"
    ne $I11, -1, rxscan1679_done3616
    goto rxscan1679_scan3615
  rxscan1679_loop3614:
    inc rx1678_pos
    gt rx1678_pos, rx1678_eos, rx1678_fail3610
    repr_bind_attr_int rx1678_cur, rx1678_curclass, "$!from", rx1678_pos
  rxscan1679_scan3615:
    nqp_rxmark rx1678_bstack, rxscan1679_loop3614, rx1678_pos, 0
  rxscan1679_done3616:
    nqp_rxmark rx1678_bstack, rxcap1680_fail3618, rx1678_pos, 0
    add $I11, rx1678_pos, 1
    gt $I11, rx1678_eos, rx1678_fail3610
    substr $S10, rx1678_tgt, rx1678_pos, 1
    ne $S10, ucs4:"/", rx1678_fail3610
    add rx1678_pos, 1
    nqp_rxpeek $I19, rx1678_bstack, rxcap1680_fail3618
    inc $I19
    set $I11, rx1678_bstack[$I19]
    repr_bind_attr_int rx1678_cur, rx1678_curclass, "$!pos", rx1678_pos
    $P11 = rx1678_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1678_pos)
    rx1678_cstack = rx1678_cur."!cursor_capture"($P11, "sym")
    goto rxcap1680_done3617
  rxcap1680_fail3618:
    goto rx1678_fail3610
  rxcap1680_done3617:
    repr_bind_attr_int rx1678_cur, rx1678_curclass, "$!pos", rx1678_pos
    $P11 = rx1678_cur."O"("%multiplicative, :op<div_n>")
    repr_get_attr_int $I11, $P11, rx1678_curclass, "$!pos"
    lt $I11, 0, rx1678_fail3610
    nqp_rxmark rx1678_bstack, rxsubrule1681_pass3619, -1, 0
  rxsubrule1681_pass3619:
    rx1678_cstack = rx1678_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1678_pos, $P11, rx1678_curclass, "$!pos"
    rx1678_cur."!cursor_pass"(rx1678_pos, "infix:sym</>", 'backtrack'=>1)
    .return (rx1678_cur)
  rx1678_restart3609:
    repr_get_attr_obj rx1678_cstack, rx1678_cur, rx1678_curclass, "$!cstack"
  rx1678_fail3610:
    unless rx1678_bstack, rx1678_done3608
    pop $I19, rx1678_bstack
    if_null rx1678_cstack, rx1678_cstack_done3613
    unless rx1678_cstack, rx1678_cstack_done3613
    dec $I19
    set $P11, rx1678_cstack[$I19]
  rx1678_cstack_done3613:
    pop rx1678_rep, rx1678_bstack
    pop rx1678_pos, rx1678_bstack
    pop $I19, rx1678_bstack
    lt rx1678_pos, -1, rx1678_done3608
    lt rx1678_pos, 0, rx1678_fail3610
    eq $I19, 0, rx1678_fail3610
    nqp_islist $I20, rx1678_cstack
    unless $I20, rx1678_jump3611
    elements $I18, rx1678_bstack
    le $I18, 0, rx1678_cut3612
    dec $I18
    set $I18, rx1678_bstack[$I18]
  rx1678_cut3612:
    assign rx1678_cstack, $I18
  rx1678_jump3611:
    jump $I19
  rx1678_done3608:
    rx1678_cur."!cursor_fail"()
    .return (rx1678_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<%>" :subid("cuid_189_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1359
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1682_tgt
    .local int rx1682_pos
    .local int rx1682_off
    .local int rx1682_eos
    .local int rx1682_rep
    .local pmc rx1682_cur
    .local pmc rx1682_curclass
    .local pmc rx1682_bstack
    .local pmc rx1682_cstack
    (rx1682_cur, rx1682_tgt, rx1682_pos, rx1682_curclass, rx1682_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1682_cur
    length rx1682_eos, rx1682_tgt
    eq $I19, 1, rx1682_restart3622
    gt rx1682_pos, rx1682_eos, rx1682_fail3623
    repr_get_attr_int $I11, self, rx1682_curclass, "$!from"
    ne $I11, -1, rxscan1683_done3629
    goto rxscan1683_scan3628
  rxscan1683_loop3627:
    inc rx1682_pos
    gt rx1682_pos, rx1682_eos, rx1682_fail3623
    repr_bind_attr_int rx1682_cur, rx1682_curclass, "$!from", rx1682_pos
  rxscan1683_scan3628:
    nqp_rxmark rx1682_bstack, rxscan1683_loop3627, rx1682_pos, 0
  rxscan1683_done3629:
    nqp_rxmark rx1682_bstack, rxcap1684_fail3631, rx1682_pos, 0
    add $I11, rx1682_pos, 1
    gt $I11, rx1682_eos, rx1682_fail3623
    substr $S10, rx1682_tgt, rx1682_pos, 1
    ne $S10, ucs4:"%", rx1682_fail3623
    add rx1682_pos, 1
    nqp_rxpeek $I19, rx1682_bstack, rxcap1684_fail3631
    inc $I19
    set $I11, rx1682_bstack[$I19]
    repr_bind_attr_int rx1682_cur, rx1682_curclass, "$!pos", rx1682_pos
    $P11 = rx1682_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1682_pos)
    rx1682_cstack = rx1682_cur."!cursor_capture"($P11, "sym")
    goto rxcap1684_done3630
  rxcap1684_fail3631:
    goto rx1682_fail3623
  rxcap1684_done3630:
    repr_bind_attr_int rx1682_cur, rx1682_curclass, "$!pos", rx1682_pos
    $P11 = rx1682_cur."O"("%multiplicative, :op<mod_n>")
    repr_get_attr_int $I11, $P11, rx1682_curclass, "$!pos"
    lt $I11, 0, rx1682_fail3623
    nqp_rxmark rx1682_bstack, rxsubrule1685_pass3632, -1, 0
  rxsubrule1685_pass3632:
    rx1682_cstack = rx1682_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1682_pos, $P11, rx1682_curclass, "$!pos"
    rx1682_cur."!cursor_pass"(rx1682_pos, "infix:sym<%>", 'backtrack'=>1)
    .return (rx1682_cur)
  rx1682_restart3622:
    repr_get_attr_obj rx1682_cstack, rx1682_cur, rx1682_curclass, "$!cstack"
  rx1682_fail3623:
    unless rx1682_bstack, rx1682_done3621
    pop $I19, rx1682_bstack
    if_null rx1682_cstack, rx1682_cstack_done3626
    unless rx1682_cstack, rx1682_cstack_done3626
    dec $I19
    set $P11, rx1682_cstack[$I19]
  rx1682_cstack_done3626:
    pop rx1682_rep, rx1682_bstack
    pop rx1682_pos, rx1682_bstack
    pop $I19, rx1682_bstack
    lt rx1682_pos, -1, rx1682_done3621
    lt rx1682_pos, 0, rx1682_fail3623
    eq $I19, 0, rx1682_fail3623
    nqp_islist $I20, rx1682_cstack
    unless $I20, rx1682_jump3624
    elements $I18, rx1682_bstack
    le $I18, 0, rx1682_cut3625
    dec $I18
    set $I18, rx1682_bstack[$I18]
  rx1682_cut3625:
    assign rx1682_cstack, $I18
  rx1682_jump3624:
    jump $I19
  rx1682_done3621:
    rx1682_cur."!cursor_fail"()
    .return (rx1682_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<+&>" :subid("cuid_190_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1360
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1686_tgt
    .local int rx1686_pos
    .local int rx1686_off
    .local int rx1686_eos
    .local int rx1686_rep
    .local pmc rx1686_cur
    .local pmc rx1686_curclass
    .local pmc rx1686_bstack
    .local pmc rx1686_cstack
    (rx1686_cur, rx1686_tgt, rx1686_pos, rx1686_curclass, rx1686_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1686_cur
    length rx1686_eos, rx1686_tgt
    eq $I19, 1, rx1686_restart3635
    gt rx1686_pos, rx1686_eos, rx1686_fail3636
    repr_get_attr_int $I11, self, rx1686_curclass, "$!from"
    ne $I11, -1, rxscan1687_done3642
    goto rxscan1687_scan3641
  rxscan1687_loop3640:
    inc rx1686_pos
    gt rx1686_pos, rx1686_eos, rx1686_fail3636
    repr_bind_attr_int rx1686_cur, rx1686_curclass, "$!from", rx1686_pos
  rxscan1687_scan3641:
    nqp_rxmark rx1686_bstack, rxscan1687_loop3640, rx1686_pos, 0
  rxscan1687_done3642:
    nqp_rxmark rx1686_bstack, rxcap1688_fail3644, rx1686_pos, 0
    add $I11, rx1686_pos, 2
    gt $I11, rx1686_eos, rx1686_fail3636
    substr $S10, rx1686_tgt, rx1686_pos, 2
    ne $S10, ucs4:"+&", rx1686_fail3636
    add rx1686_pos, 2
    nqp_rxpeek $I19, rx1686_bstack, rxcap1688_fail3644
    inc $I19
    set $I11, rx1686_bstack[$I19]
    repr_bind_attr_int rx1686_cur, rx1686_curclass, "$!pos", rx1686_pos
    $P11 = rx1686_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1686_pos)
    rx1686_cstack = rx1686_cur."!cursor_capture"($P11, "sym")
    goto rxcap1688_done3643
  rxcap1688_fail3644:
    goto rx1686_fail3636
  rxcap1688_done3643:
    repr_bind_attr_int rx1686_cur, rx1686_curclass, "$!pos", rx1686_pos
    $P11 = rx1686_cur."O"("%multiplicative, :op<bitand_i>")
    repr_get_attr_int $I11, $P11, rx1686_curclass, "$!pos"
    lt $I11, 0, rx1686_fail3636
    nqp_rxmark rx1686_bstack, rxsubrule1689_pass3645, -1, 0
  rxsubrule1689_pass3645:
    rx1686_cstack = rx1686_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1686_pos, $P11, rx1686_curclass, "$!pos"
    rx1686_cur."!cursor_pass"(rx1686_pos, "infix:sym<+&>", 'backtrack'=>1)
    .return (rx1686_cur)
  rx1686_restart3635:
    repr_get_attr_obj rx1686_cstack, rx1686_cur, rx1686_curclass, "$!cstack"
  rx1686_fail3636:
    unless rx1686_bstack, rx1686_done3634
    pop $I19, rx1686_bstack
    if_null rx1686_cstack, rx1686_cstack_done3639
    unless rx1686_cstack, rx1686_cstack_done3639
    dec $I19
    set $P11, rx1686_cstack[$I19]
  rx1686_cstack_done3639:
    pop rx1686_rep, rx1686_bstack
    pop rx1686_pos, rx1686_bstack
    pop $I19, rx1686_bstack
    lt rx1686_pos, -1, rx1686_done3634
    lt rx1686_pos, 0, rx1686_fail3636
    eq $I19, 0, rx1686_fail3636
    nqp_islist $I20, rx1686_cstack
    unless $I20, rx1686_jump3637
    elements $I18, rx1686_bstack
    le $I18, 0, rx1686_cut3638
    dec $I18
    set $I18, rx1686_bstack[$I18]
  rx1686_cut3638:
    assign rx1686_cstack, $I18
  rx1686_jump3637:
    jump $I19
  rx1686_done3634:
    rx1686_cur."!cursor_fail"()
    .return (rx1686_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<+>" :subid("cuid_191_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1362
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1690_tgt
    .local int rx1690_pos
    .local int rx1690_off
    .local int rx1690_eos
    .local int rx1690_rep
    .local pmc rx1690_cur
    .local pmc rx1690_curclass
    .local pmc rx1690_bstack
    .local pmc rx1690_cstack
    (rx1690_cur, rx1690_tgt, rx1690_pos, rx1690_curclass, rx1690_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1690_cur
    length rx1690_eos, rx1690_tgt
    eq $I19, 1, rx1690_restart3648
    gt rx1690_pos, rx1690_eos, rx1690_fail3649
    repr_get_attr_int $I11, self, rx1690_curclass, "$!from"
    ne $I11, -1, rxscan1691_done3655
    goto rxscan1691_scan3654
  rxscan1691_loop3653:
    inc rx1690_pos
    gt rx1690_pos, rx1690_eos, rx1690_fail3649
    repr_bind_attr_int rx1690_cur, rx1690_curclass, "$!from", rx1690_pos
  rxscan1691_scan3654:
    nqp_rxmark rx1690_bstack, rxscan1691_loop3653, rx1690_pos, 0
  rxscan1691_done3655:
    nqp_rxmark rx1690_bstack, rxcap1692_fail3657, rx1690_pos, 0
    add $I11, rx1690_pos, 1
    gt $I11, rx1690_eos, rx1690_fail3649
    substr $S10, rx1690_tgt, rx1690_pos, 1
    ne $S10, ucs4:"+", rx1690_fail3649
    add rx1690_pos, 1
    nqp_rxpeek $I19, rx1690_bstack, rxcap1692_fail3657
    inc $I19
    set $I11, rx1690_bstack[$I19]
    repr_bind_attr_int rx1690_cur, rx1690_curclass, "$!pos", rx1690_pos
    $P11 = rx1690_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1690_pos)
    rx1690_cstack = rx1690_cur."!cursor_capture"($P11, "sym")
    goto rxcap1692_done3656
  rxcap1692_fail3657:
    goto rx1690_fail3649
  rxcap1692_done3656:
    repr_bind_attr_int rx1690_cur, rx1690_curclass, "$!pos", rx1690_pos
    $P11 = rx1690_cur."O"("%additive, :op<add_n>")
    repr_get_attr_int $I11, $P11, rx1690_curclass, "$!pos"
    lt $I11, 0, rx1690_fail3649
    nqp_rxmark rx1690_bstack, rxsubrule1693_pass3658, -1, 0
  rxsubrule1693_pass3658:
    rx1690_cstack = rx1690_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1690_pos, $P11, rx1690_curclass, "$!pos"
    rx1690_cur."!cursor_pass"(rx1690_pos, "infix:sym<+>", 'backtrack'=>1)
    .return (rx1690_cur)
  rx1690_restart3648:
    repr_get_attr_obj rx1690_cstack, rx1690_cur, rx1690_curclass, "$!cstack"
  rx1690_fail3649:
    unless rx1690_bstack, rx1690_done3647
    pop $I19, rx1690_bstack
    if_null rx1690_cstack, rx1690_cstack_done3652
    unless rx1690_cstack, rx1690_cstack_done3652
    dec $I19
    set $P11, rx1690_cstack[$I19]
  rx1690_cstack_done3652:
    pop rx1690_rep, rx1690_bstack
    pop rx1690_pos, rx1690_bstack
    pop $I19, rx1690_bstack
    lt rx1690_pos, -1, rx1690_done3647
    lt rx1690_pos, 0, rx1690_fail3649
    eq $I19, 0, rx1690_fail3649
    nqp_islist $I20, rx1690_cstack
    unless $I20, rx1690_jump3650
    elements $I18, rx1690_bstack
    le $I18, 0, rx1690_cut3651
    dec $I18
    set $I18, rx1690_bstack[$I18]
  rx1690_cut3651:
    assign rx1690_cstack, $I18
  rx1690_jump3650:
    jump $I19
  rx1690_done3647:
    rx1690_cur."!cursor_fail"()
    .return (rx1690_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<->" :subid("cuid_192_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1363
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1694_tgt
    .local int rx1694_pos
    .local int rx1694_off
    .local int rx1694_eos
    .local int rx1694_rep
    .local pmc rx1694_cur
    .local pmc rx1694_curclass
    .local pmc rx1694_bstack
    .local pmc rx1694_cstack
    (rx1694_cur, rx1694_tgt, rx1694_pos, rx1694_curclass, rx1694_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1694_cur
    length rx1694_eos, rx1694_tgt
    eq $I19, 1, rx1694_restart3661
    gt rx1694_pos, rx1694_eos, rx1694_fail3662
    repr_get_attr_int $I11, self, rx1694_curclass, "$!from"
    ne $I11, -1, rxscan1695_done3668
    goto rxscan1695_scan3667
  rxscan1695_loop3666:
    inc rx1694_pos
    gt rx1694_pos, rx1694_eos, rx1694_fail3662
    repr_bind_attr_int rx1694_cur, rx1694_curclass, "$!from", rx1694_pos
  rxscan1695_scan3667:
    nqp_rxmark rx1694_bstack, rxscan1695_loop3666, rx1694_pos, 0
  rxscan1695_done3668:
    nqp_rxmark rx1694_bstack, rxcap1696_fail3670, rx1694_pos, 0
    add $I11, rx1694_pos, 1
    gt $I11, rx1694_eos, rx1694_fail3662
    substr $S10, rx1694_tgt, rx1694_pos, 1
    ne $S10, ucs4:"-", rx1694_fail3662
    add rx1694_pos, 1
    nqp_rxpeek $I19, rx1694_bstack, rxcap1696_fail3670
    inc $I19
    set $I11, rx1694_bstack[$I19]
    repr_bind_attr_int rx1694_cur, rx1694_curclass, "$!pos", rx1694_pos
    $P11 = rx1694_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1694_pos)
    rx1694_cstack = rx1694_cur."!cursor_capture"($P11, "sym")
    goto rxcap1696_done3669
  rxcap1696_fail3670:
    goto rx1694_fail3662
  rxcap1696_done3669:
    repr_bind_attr_int rx1694_cur, rx1694_curclass, "$!pos", rx1694_pos
    $P11 = rx1694_cur."O"("%additive, :op<sub_n>")
    repr_get_attr_int $I11, $P11, rx1694_curclass, "$!pos"
    lt $I11, 0, rx1694_fail3662
    nqp_rxmark rx1694_bstack, rxsubrule1697_pass3671, -1, 0
  rxsubrule1697_pass3671:
    rx1694_cstack = rx1694_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1694_pos, $P11, rx1694_curclass, "$!pos"
    rx1694_cur."!cursor_pass"(rx1694_pos, "infix:sym<->", 'backtrack'=>1)
    .return (rx1694_cur)
  rx1694_restart3661:
    repr_get_attr_obj rx1694_cstack, rx1694_cur, rx1694_curclass, "$!cstack"
  rx1694_fail3662:
    unless rx1694_bstack, rx1694_done3660
    pop $I19, rx1694_bstack
    if_null rx1694_cstack, rx1694_cstack_done3665
    unless rx1694_cstack, rx1694_cstack_done3665
    dec $I19
    set $P11, rx1694_cstack[$I19]
  rx1694_cstack_done3665:
    pop rx1694_rep, rx1694_bstack
    pop rx1694_pos, rx1694_bstack
    pop $I19, rx1694_bstack
    lt rx1694_pos, -1, rx1694_done3660
    lt rx1694_pos, 0, rx1694_fail3662
    eq $I19, 0, rx1694_fail3662
    nqp_islist $I20, rx1694_cstack
    unless $I20, rx1694_jump3663
    elements $I18, rx1694_bstack
    le $I18, 0, rx1694_cut3664
    dec $I18
    set $I18, rx1694_bstack[$I18]
  rx1694_cut3664:
    assign rx1694_cstack, $I18
  rx1694_jump3663:
    jump $I19
  rx1694_done3660:
    rx1694_cur."!cursor_fail"()
    .return (rx1694_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<+|>" :subid("cuid_193_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1364
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1698_tgt
    .local int rx1698_pos
    .local int rx1698_off
    .local int rx1698_eos
    .local int rx1698_rep
    .local pmc rx1698_cur
    .local pmc rx1698_curclass
    .local pmc rx1698_bstack
    .local pmc rx1698_cstack
    (rx1698_cur, rx1698_tgt, rx1698_pos, rx1698_curclass, rx1698_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1698_cur
    length rx1698_eos, rx1698_tgt
    eq $I19, 1, rx1698_restart3674
    gt rx1698_pos, rx1698_eos, rx1698_fail3675
    repr_get_attr_int $I11, self, rx1698_curclass, "$!from"
    ne $I11, -1, rxscan1699_done3681
    goto rxscan1699_scan3680
  rxscan1699_loop3679:
    inc rx1698_pos
    gt rx1698_pos, rx1698_eos, rx1698_fail3675
    repr_bind_attr_int rx1698_cur, rx1698_curclass, "$!from", rx1698_pos
  rxscan1699_scan3680:
    nqp_rxmark rx1698_bstack, rxscan1699_loop3679, rx1698_pos, 0
  rxscan1699_done3681:
    nqp_rxmark rx1698_bstack, rxcap1700_fail3683, rx1698_pos, 0
    add $I11, rx1698_pos, 2
    gt $I11, rx1698_eos, rx1698_fail3675
    substr $S10, rx1698_tgt, rx1698_pos, 2
    ne $S10, ucs4:"+|", rx1698_fail3675
    add rx1698_pos, 2
    nqp_rxpeek $I19, rx1698_bstack, rxcap1700_fail3683
    inc $I19
    set $I11, rx1698_bstack[$I19]
    repr_bind_attr_int rx1698_cur, rx1698_curclass, "$!pos", rx1698_pos
    $P11 = rx1698_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1698_pos)
    rx1698_cstack = rx1698_cur."!cursor_capture"($P11, "sym")
    goto rxcap1700_done3682
  rxcap1700_fail3683:
    goto rx1698_fail3675
  rxcap1700_done3682:
    repr_bind_attr_int rx1698_cur, rx1698_curclass, "$!pos", rx1698_pos
    $P11 = rx1698_cur."O"("%additive, :op<bitor_i>")
    repr_get_attr_int $I11, $P11, rx1698_curclass, "$!pos"
    lt $I11, 0, rx1698_fail3675
    nqp_rxmark rx1698_bstack, rxsubrule1701_pass3684, -1, 0
  rxsubrule1701_pass3684:
    rx1698_cstack = rx1698_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1698_pos, $P11, rx1698_curclass, "$!pos"
    rx1698_cur."!cursor_pass"(rx1698_pos, "infix:sym<+|>", 'backtrack'=>1)
    .return (rx1698_cur)
  rx1698_restart3674:
    repr_get_attr_obj rx1698_cstack, rx1698_cur, rx1698_curclass, "$!cstack"
  rx1698_fail3675:
    unless rx1698_bstack, rx1698_done3673
    pop $I19, rx1698_bstack
    if_null rx1698_cstack, rx1698_cstack_done3678
    unless rx1698_cstack, rx1698_cstack_done3678
    dec $I19
    set $P11, rx1698_cstack[$I19]
  rx1698_cstack_done3678:
    pop rx1698_rep, rx1698_bstack
    pop rx1698_pos, rx1698_bstack
    pop $I19, rx1698_bstack
    lt rx1698_pos, -1, rx1698_done3673
    lt rx1698_pos, 0, rx1698_fail3675
    eq $I19, 0, rx1698_fail3675
    nqp_islist $I20, rx1698_cstack
    unless $I20, rx1698_jump3676
    elements $I18, rx1698_bstack
    le $I18, 0, rx1698_cut3677
    dec $I18
    set $I18, rx1698_bstack[$I18]
  rx1698_cut3677:
    assign rx1698_cstack, $I18
  rx1698_jump3676:
    jump $I19
  rx1698_done3673:
    rx1698_cur."!cursor_fail"()
    .return (rx1698_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<+^>" :subid("cuid_194_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1365
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1702_tgt
    .local int rx1702_pos
    .local int rx1702_off
    .local int rx1702_eos
    .local int rx1702_rep
    .local pmc rx1702_cur
    .local pmc rx1702_curclass
    .local pmc rx1702_bstack
    .local pmc rx1702_cstack
    (rx1702_cur, rx1702_tgt, rx1702_pos, rx1702_curclass, rx1702_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1702_cur
    length rx1702_eos, rx1702_tgt
    eq $I19, 1, rx1702_restart3687
    gt rx1702_pos, rx1702_eos, rx1702_fail3688
    repr_get_attr_int $I11, self, rx1702_curclass, "$!from"
    ne $I11, -1, rxscan1703_done3694
    goto rxscan1703_scan3693
  rxscan1703_loop3692:
    inc rx1702_pos
    gt rx1702_pos, rx1702_eos, rx1702_fail3688
    repr_bind_attr_int rx1702_cur, rx1702_curclass, "$!from", rx1702_pos
  rxscan1703_scan3693:
    nqp_rxmark rx1702_bstack, rxscan1703_loop3692, rx1702_pos, 0
  rxscan1703_done3694:
    nqp_rxmark rx1702_bstack, rxcap1704_fail3696, rx1702_pos, 0
    add $I11, rx1702_pos, 2
    gt $I11, rx1702_eos, rx1702_fail3688
    substr $S10, rx1702_tgt, rx1702_pos, 2
    ne $S10, ucs4:"+^", rx1702_fail3688
    add rx1702_pos, 2
    nqp_rxpeek $I19, rx1702_bstack, rxcap1704_fail3696
    inc $I19
    set $I11, rx1702_bstack[$I19]
    repr_bind_attr_int rx1702_cur, rx1702_curclass, "$!pos", rx1702_pos
    $P11 = rx1702_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1702_pos)
    rx1702_cstack = rx1702_cur."!cursor_capture"($P11, "sym")
    goto rxcap1704_done3695
  rxcap1704_fail3696:
    goto rx1702_fail3688
  rxcap1704_done3695:
    repr_bind_attr_int rx1702_cur, rx1702_curclass, "$!pos", rx1702_pos
    $P11 = rx1702_cur."O"("%additive, :op<bitxor_i>")
    repr_get_attr_int $I11, $P11, rx1702_curclass, "$!pos"
    lt $I11, 0, rx1702_fail3688
    nqp_rxmark rx1702_bstack, rxsubrule1705_pass3697, -1, 0
  rxsubrule1705_pass3697:
    rx1702_cstack = rx1702_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1702_pos, $P11, rx1702_curclass, "$!pos"
    rx1702_cur."!cursor_pass"(rx1702_pos, "infix:sym<+^>", 'backtrack'=>1)
    .return (rx1702_cur)
  rx1702_restart3687:
    repr_get_attr_obj rx1702_cstack, rx1702_cur, rx1702_curclass, "$!cstack"
  rx1702_fail3688:
    unless rx1702_bstack, rx1702_done3686
    pop $I19, rx1702_bstack
    if_null rx1702_cstack, rx1702_cstack_done3691
    unless rx1702_cstack, rx1702_cstack_done3691
    dec $I19
    set $P11, rx1702_cstack[$I19]
  rx1702_cstack_done3691:
    pop rx1702_rep, rx1702_bstack
    pop rx1702_pos, rx1702_bstack
    pop $I19, rx1702_bstack
    lt rx1702_pos, -1, rx1702_done3686
    lt rx1702_pos, 0, rx1702_fail3688
    eq $I19, 0, rx1702_fail3688
    nqp_islist $I20, rx1702_cstack
    unless $I20, rx1702_jump3689
    elements $I18, rx1702_bstack
    le $I18, 0, rx1702_cut3690
    dec $I18
    set $I18, rx1702_bstack[$I18]
  rx1702_cut3690:
    assign rx1702_cstack, $I18
  rx1702_jump3689:
    jump $I19
  rx1702_done3686:
    rx1702_cur."!cursor_fail"()
    .return (rx1702_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<~>" :subid("cuid_195_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1367
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1706_tgt
    .local int rx1706_pos
    .local int rx1706_off
    .local int rx1706_eos
    .local int rx1706_rep
    .local pmc rx1706_cur
    .local pmc rx1706_curclass
    .local pmc rx1706_bstack
    .local pmc rx1706_cstack
    (rx1706_cur, rx1706_tgt, rx1706_pos, rx1706_curclass, rx1706_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1706_cur
    length rx1706_eos, rx1706_tgt
    eq $I19, 1, rx1706_restart3700
    gt rx1706_pos, rx1706_eos, rx1706_fail3701
    repr_get_attr_int $I11, self, rx1706_curclass, "$!from"
    ne $I11, -1, rxscan1707_done3707
    goto rxscan1707_scan3706
  rxscan1707_loop3705:
    inc rx1706_pos
    gt rx1706_pos, rx1706_eos, rx1706_fail3701
    repr_bind_attr_int rx1706_cur, rx1706_curclass, "$!from", rx1706_pos
  rxscan1707_scan3706:
    nqp_rxmark rx1706_bstack, rxscan1707_loop3705, rx1706_pos, 0
  rxscan1707_done3707:
    nqp_rxmark rx1706_bstack, rxcap1708_fail3709, rx1706_pos, 0
    add $I11, rx1706_pos, 1
    gt $I11, rx1706_eos, rx1706_fail3701
    substr $S10, rx1706_tgt, rx1706_pos, 1
    ne $S10, ucs4:"~", rx1706_fail3701
    add rx1706_pos, 1
    nqp_rxpeek $I19, rx1706_bstack, rxcap1708_fail3709
    inc $I19
    set $I11, rx1706_bstack[$I19]
    repr_bind_attr_int rx1706_cur, rx1706_curclass, "$!pos", rx1706_pos
    $P11 = rx1706_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1706_pos)
    rx1706_cstack = rx1706_cur."!cursor_capture"($P11, "sym")
    goto rxcap1708_done3708
  rxcap1708_fail3709:
    goto rx1706_fail3701
  rxcap1708_done3708:
    repr_bind_attr_int rx1706_cur, rx1706_curclass, "$!pos", rx1706_pos
    $P11 = rx1706_cur."O"("%concatenation , :op<concat>")
    repr_get_attr_int $I11, $P11, rx1706_curclass, "$!pos"
    lt $I11, 0, rx1706_fail3701
    nqp_rxmark rx1706_bstack, rxsubrule1709_pass3710, -1, 0
  rxsubrule1709_pass3710:
    rx1706_cstack = rx1706_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1706_pos, $P11, rx1706_curclass, "$!pos"
    rx1706_cur."!cursor_pass"(rx1706_pos, "infix:sym<~>", 'backtrack'=>1)
    .return (rx1706_cur)
  rx1706_restart3700:
    repr_get_attr_obj rx1706_cstack, rx1706_cur, rx1706_curclass, "$!cstack"
  rx1706_fail3701:
    unless rx1706_bstack, rx1706_done3699
    pop $I19, rx1706_bstack
    if_null rx1706_cstack, rx1706_cstack_done3704
    unless rx1706_cstack, rx1706_cstack_done3704
    dec $I19
    set $P11, rx1706_cstack[$I19]
  rx1706_cstack_done3704:
    pop rx1706_rep, rx1706_bstack
    pop rx1706_pos, rx1706_bstack
    pop $I19, rx1706_bstack
    lt rx1706_pos, -1, rx1706_done3699
    lt rx1706_pos, 0, rx1706_fail3701
    eq $I19, 0, rx1706_fail3701
    nqp_islist $I20, rx1706_cstack
    unless $I20, rx1706_jump3702
    elements $I18, rx1706_bstack
    le $I18, 0, rx1706_cut3703
    dec $I18
    set $I18, rx1706_bstack[$I18]
  rx1706_cut3703:
    assign rx1706_cstack, $I18
  rx1706_jump3702:
    jump $I19
  rx1706_done3699:
    rx1706_cur."!cursor_fail"()
    .return (rx1706_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<==>" :subid("cuid_196_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1369
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1710_tgt
    .local int rx1710_pos
    .local int rx1710_off
    .local int rx1710_eos
    .local int rx1710_rep
    .local pmc rx1710_cur
    .local pmc rx1710_curclass
    .local pmc rx1710_bstack
    .local pmc rx1710_cstack
    (rx1710_cur, rx1710_tgt, rx1710_pos, rx1710_curclass, rx1710_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1710_cur
    length rx1710_eos, rx1710_tgt
    eq $I19, 1, rx1710_restart3713
    gt rx1710_pos, rx1710_eos, rx1710_fail3714
    repr_get_attr_int $I11, self, rx1710_curclass, "$!from"
    ne $I11, -1, rxscan1711_done3720
    goto rxscan1711_scan3719
  rxscan1711_loop3718:
    inc rx1710_pos
    gt rx1710_pos, rx1710_eos, rx1710_fail3714
    repr_bind_attr_int rx1710_cur, rx1710_curclass, "$!from", rx1710_pos
  rxscan1711_scan3719:
    nqp_rxmark rx1710_bstack, rxscan1711_loop3718, rx1710_pos, 0
  rxscan1711_done3720:
    nqp_rxmark rx1710_bstack, rxcap1712_fail3722, rx1710_pos, 0
    add $I11, rx1710_pos, 2
    gt $I11, rx1710_eos, rx1710_fail3714
    substr $S10, rx1710_tgt, rx1710_pos, 2
    ne $S10, ucs4:"==", rx1710_fail3714
    add rx1710_pos, 2
    nqp_rxpeek $I19, rx1710_bstack, rxcap1712_fail3722
    inc $I19
    set $I11, rx1710_bstack[$I19]
    repr_bind_attr_int rx1710_cur, rx1710_curclass, "$!pos", rx1710_pos
    $P11 = rx1710_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1710_pos)
    rx1710_cstack = rx1710_cur."!cursor_capture"($P11, "sym")
    goto rxcap1712_done3721
  rxcap1712_fail3722:
    goto rx1710_fail3714
  rxcap1712_done3721:
    repr_bind_attr_int rx1710_cur, rx1710_curclass, "$!pos", rx1710_pos
    $P11 = rx1710_cur."O"("%relational, :op<iseq_n>")
    repr_get_attr_int $I11, $P11, rx1710_curclass, "$!pos"
    lt $I11, 0, rx1710_fail3714
    nqp_rxmark rx1710_bstack, rxsubrule1713_pass3723, -1, 0
  rxsubrule1713_pass3723:
    rx1710_cstack = rx1710_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1710_pos, $P11, rx1710_curclass, "$!pos"
    rx1710_cur."!cursor_pass"(rx1710_pos, "infix:sym<==>", 'backtrack'=>1)
    .return (rx1710_cur)
  rx1710_restart3713:
    repr_get_attr_obj rx1710_cstack, rx1710_cur, rx1710_curclass, "$!cstack"
  rx1710_fail3714:
    unless rx1710_bstack, rx1710_done3712
    pop $I19, rx1710_bstack
    if_null rx1710_cstack, rx1710_cstack_done3717
    unless rx1710_cstack, rx1710_cstack_done3717
    dec $I19
    set $P11, rx1710_cstack[$I19]
  rx1710_cstack_done3717:
    pop rx1710_rep, rx1710_bstack
    pop rx1710_pos, rx1710_bstack
    pop $I19, rx1710_bstack
    lt rx1710_pos, -1, rx1710_done3712
    lt rx1710_pos, 0, rx1710_fail3714
    eq $I19, 0, rx1710_fail3714
    nqp_islist $I20, rx1710_cstack
    unless $I20, rx1710_jump3715
    elements $I18, rx1710_bstack
    le $I18, 0, rx1710_cut3716
    dec $I18
    set $I18, rx1710_bstack[$I18]
  rx1710_cut3716:
    assign rx1710_cstack, $I18
  rx1710_jump3715:
    jump $I19
  rx1710_done3712:
    rx1710_cur."!cursor_fail"()
    .return (rx1710_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<!=>" :subid("cuid_197_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1370
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1714_tgt
    .local int rx1714_pos
    .local int rx1714_off
    .local int rx1714_eos
    .local int rx1714_rep
    .local pmc rx1714_cur
    .local pmc rx1714_curclass
    .local pmc rx1714_bstack
    .local pmc rx1714_cstack
    (rx1714_cur, rx1714_tgt, rx1714_pos, rx1714_curclass, rx1714_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1714_cur
    length rx1714_eos, rx1714_tgt
    eq $I19, 1, rx1714_restart3726
    gt rx1714_pos, rx1714_eos, rx1714_fail3727
    repr_get_attr_int $I11, self, rx1714_curclass, "$!from"
    ne $I11, -1, rxscan1715_done3733
    goto rxscan1715_scan3732
  rxscan1715_loop3731:
    inc rx1714_pos
    gt rx1714_pos, rx1714_eos, rx1714_fail3727
    repr_bind_attr_int rx1714_cur, rx1714_curclass, "$!from", rx1714_pos
  rxscan1715_scan3732:
    nqp_rxmark rx1714_bstack, rxscan1715_loop3731, rx1714_pos, 0
  rxscan1715_done3733:
    nqp_rxmark rx1714_bstack, rxcap1716_fail3735, rx1714_pos, 0
    add $I11, rx1714_pos, 2
    gt $I11, rx1714_eos, rx1714_fail3727
    substr $S10, rx1714_tgt, rx1714_pos, 2
    ne $S10, ucs4:"!=", rx1714_fail3727
    add rx1714_pos, 2
    nqp_rxpeek $I19, rx1714_bstack, rxcap1716_fail3735
    inc $I19
    set $I11, rx1714_bstack[$I19]
    repr_bind_attr_int rx1714_cur, rx1714_curclass, "$!pos", rx1714_pos
    $P11 = rx1714_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1714_pos)
    rx1714_cstack = rx1714_cur."!cursor_capture"($P11, "sym")
    goto rxcap1716_done3734
  rxcap1716_fail3735:
    goto rx1714_fail3727
  rxcap1716_done3734:
    repr_bind_attr_int rx1714_cur, rx1714_curclass, "$!pos", rx1714_pos
    $P11 = rx1714_cur."O"("%relational, :op<isne_n>")
    repr_get_attr_int $I11, $P11, rx1714_curclass, "$!pos"
    lt $I11, 0, rx1714_fail3727
    nqp_rxmark rx1714_bstack, rxsubrule1717_pass3736, -1, 0
  rxsubrule1717_pass3736:
    rx1714_cstack = rx1714_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1714_pos, $P11, rx1714_curclass, "$!pos"
    rx1714_cur."!cursor_pass"(rx1714_pos, "infix:sym<!=>", 'backtrack'=>1)
    .return (rx1714_cur)
  rx1714_restart3726:
    repr_get_attr_obj rx1714_cstack, rx1714_cur, rx1714_curclass, "$!cstack"
  rx1714_fail3727:
    unless rx1714_bstack, rx1714_done3725
    pop $I19, rx1714_bstack
    if_null rx1714_cstack, rx1714_cstack_done3730
    unless rx1714_cstack, rx1714_cstack_done3730
    dec $I19
    set $P11, rx1714_cstack[$I19]
  rx1714_cstack_done3730:
    pop rx1714_rep, rx1714_bstack
    pop rx1714_pos, rx1714_bstack
    pop $I19, rx1714_bstack
    lt rx1714_pos, -1, rx1714_done3725
    lt rx1714_pos, 0, rx1714_fail3727
    eq $I19, 0, rx1714_fail3727
    nqp_islist $I20, rx1714_cstack
    unless $I20, rx1714_jump3728
    elements $I18, rx1714_bstack
    le $I18, 0, rx1714_cut3729
    dec $I18
    set $I18, rx1714_bstack[$I18]
  rx1714_cut3729:
    assign rx1714_cstack, $I18
  rx1714_jump3728:
    jump $I19
  rx1714_done3725:
    rx1714_cur."!cursor_fail"()
    .return (rx1714_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<<=>" :subid("cuid_198_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1371
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1718_tgt
    .local int rx1718_pos
    .local int rx1718_off
    .local int rx1718_eos
    .local int rx1718_rep
    .local pmc rx1718_cur
    .local pmc rx1718_curclass
    .local pmc rx1718_bstack
    .local pmc rx1718_cstack
    (rx1718_cur, rx1718_tgt, rx1718_pos, rx1718_curclass, rx1718_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1718_cur
    length rx1718_eos, rx1718_tgt
    eq $I19, 1, rx1718_restart3739
    gt rx1718_pos, rx1718_eos, rx1718_fail3740
    repr_get_attr_int $I11, self, rx1718_curclass, "$!from"
    ne $I11, -1, rxscan1719_done3746
    goto rxscan1719_scan3745
  rxscan1719_loop3744:
    inc rx1718_pos
    gt rx1718_pos, rx1718_eos, rx1718_fail3740
    repr_bind_attr_int rx1718_cur, rx1718_curclass, "$!from", rx1718_pos
  rxscan1719_scan3745:
    nqp_rxmark rx1718_bstack, rxscan1719_loop3744, rx1718_pos, 0
  rxscan1719_done3746:
    nqp_rxmark rx1718_bstack, rxcap1720_fail3748, rx1718_pos, 0
    add $I11, rx1718_pos, 2
    gt $I11, rx1718_eos, rx1718_fail3740
    substr $S10, rx1718_tgt, rx1718_pos, 2
    ne $S10, ucs4:"<=", rx1718_fail3740
    add rx1718_pos, 2
    nqp_rxpeek $I19, rx1718_bstack, rxcap1720_fail3748
    inc $I19
    set $I11, rx1718_bstack[$I19]
    repr_bind_attr_int rx1718_cur, rx1718_curclass, "$!pos", rx1718_pos
    $P11 = rx1718_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1718_pos)
    rx1718_cstack = rx1718_cur."!cursor_capture"($P11, "sym")
    goto rxcap1720_done3747
  rxcap1720_fail3748:
    goto rx1718_fail3740
  rxcap1720_done3747:
    repr_bind_attr_int rx1718_cur, rx1718_curclass, "$!pos", rx1718_pos
    $P11 = rx1718_cur."O"("%relational, :op<isle_n>")
    repr_get_attr_int $I11, $P11, rx1718_curclass, "$!pos"
    lt $I11, 0, rx1718_fail3740
    nqp_rxmark rx1718_bstack, rxsubrule1721_pass3749, -1, 0
  rxsubrule1721_pass3749:
    rx1718_cstack = rx1718_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1718_pos, $P11, rx1718_curclass, "$!pos"
    rx1718_cur."!cursor_pass"(rx1718_pos, "infix:sym<<=>", 'backtrack'=>1)
    .return (rx1718_cur)
  rx1718_restart3739:
    repr_get_attr_obj rx1718_cstack, rx1718_cur, rx1718_curclass, "$!cstack"
  rx1718_fail3740:
    unless rx1718_bstack, rx1718_done3738
    pop $I19, rx1718_bstack
    if_null rx1718_cstack, rx1718_cstack_done3743
    unless rx1718_cstack, rx1718_cstack_done3743
    dec $I19
    set $P11, rx1718_cstack[$I19]
  rx1718_cstack_done3743:
    pop rx1718_rep, rx1718_bstack
    pop rx1718_pos, rx1718_bstack
    pop $I19, rx1718_bstack
    lt rx1718_pos, -1, rx1718_done3738
    lt rx1718_pos, 0, rx1718_fail3740
    eq $I19, 0, rx1718_fail3740
    nqp_islist $I20, rx1718_cstack
    unless $I20, rx1718_jump3741
    elements $I18, rx1718_bstack
    le $I18, 0, rx1718_cut3742
    dec $I18
    set $I18, rx1718_bstack[$I18]
  rx1718_cut3742:
    assign rx1718_cstack, $I18
  rx1718_jump3741:
    jump $I19
  rx1718_done3738:
    rx1718_cur."!cursor_fail"()
    .return (rx1718_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<>=>" :subid("cuid_199_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1372
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1722_tgt
    .local int rx1722_pos
    .local int rx1722_off
    .local int rx1722_eos
    .local int rx1722_rep
    .local pmc rx1722_cur
    .local pmc rx1722_curclass
    .local pmc rx1722_bstack
    .local pmc rx1722_cstack
    (rx1722_cur, rx1722_tgt, rx1722_pos, rx1722_curclass, rx1722_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1722_cur
    length rx1722_eos, rx1722_tgt
    eq $I19, 1, rx1722_restart3752
    gt rx1722_pos, rx1722_eos, rx1722_fail3753
    repr_get_attr_int $I11, self, rx1722_curclass, "$!from"
    ne $I11, -1, rxscan1723_done3759
    goto rxscan1723_scan3758
  rxscan1723_loop3757:
    inc rx1722_pos
    gt rx1722_pos, rx1722_eos, rx1722_fail3753
    repr_bind_attr_int rx1722_cur, rx1722_curclass, "$!from", rx1722_pos
  rxscan1723_scan3758:
    nqp_rxmark rx1722_bstack, rxscan1723_loop3757, rx1722_pos, 0
  rxscan1723_done3759:
    nqp_rxmark rx1722_bstack, rxcap1724_fail3761, rx1722_pos, 0
    add $I11, rx1722_pos, 2
    gt $I11, rx1722_eos, rx1722_fail3753
    substr $S10, rx1722_tgt, rx1722_pos, 2
    ne $S10, ucs4:">=", rx1722_fail3753
    add rx1722_pos, 2
    nqp_rxpeek $I19, rx1722_bstack, rxcap1724_fail3761
    inc $I19
    set $I11, rx1722_bstack[$I19]
    repr_bind_attr_int rx1722_cur, rx1722_curclass, "$!pos", rx1722_pos
    $P11 = rx1722_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1722_pos)
    rx1722_cstack = rx1722_cur."!cursor_capture"($P11, "sym")
    goto rxcap1724_done3760
  rxcap1724_fail3761:
    goto rx1722_fail3753
  rxcap1724_done3760:
    repr_bind_attr_int rx1722_cur, rx1722_curclass, "$!pos", rx1722_pos
    $P11 = rx1722_cur."O"("%relational, :op<isge_n>")
    repr_get_attr_int $I11, $P11, rx1722_curclass, "$!pos"
    lt $I11, 0, rx1722_fail3753
    nqp_rxmark rx1722_bstack, rxsubrule1725_pass3762, -1, 0
  rxsubrule1725_pass3762:
    rx1722_cstack = rx1722_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1722_pos, $P11, rx1722_curclass, "$!pos"
    rx1722_cur."!cursor_pass"(rx1722_pos, "infix:sym<>=>", 'backtrack'=>1)
    .return (rx1722_cur)
  rx1722_restart3752:
    repr_get_attr_obj rx1722_cstack, rx1722_cur, rx1722_curclass, "$!cstack"
  rx1722_fail3753:
    unless rx1722_bstack, rx1722_done3751
    pop $I19, rx1722_bstack
    if_null rx1722_cstack, rx1722_cstack_done3756
    unless rx1722_cstack, rx1722_cstack_done3756
    dec $I19
    set $P11, rx1722_cstack[$I19]
  rx1722_cstack_done3756:
    pop rx1722_rep, rx1722_bstack
    pop rx1722_pos, rx1722_bstack
    pop $I19, rx1722_bstack
    lt rx1722_pos, -1, rx1722_done3751
    lt rx1722_pos, 0, rx1722_fail3753
    eq $I19, 0, rx1722_fail3753
    nqp_islist $I20, rx1722_cstack
    unless $I20, rx1722_jump3754
    elements $I18, rx1722_bstack
    le $I18, 0, rx1722_cut3755
    dec $I18
    set $I18, rx1722_bstack[$I18]
  rx1722_cut3755:
    assign rx1722_cstack, $I18
  rx1722_jump3754:
    jump $I19
  rx1722_done3751:
    rx1722_cur."!cursor_fail"()
    .return (rx1722_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<<>" :subid("cuid_200_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1373
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1726_tgt
    .local int rx1726_pos
    .local int rx1726_off
    .local int rx1726_eos
    .local int rx1726_rep
    .local pmc rx1726_cur
    .local pmc rx1726_curclass
    .local pmc rx1726_bstack
    .local pmc rx1726_cstack
    (rx1726_cur, rx1726_tgt, rx1726_pos, rx1726_curclass, rx1726_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1726_cur
    length rx1726_eos, rx1726_tgt
    eq $I19, 1, rx1726_restart3765
    gt rx1726_pos, rx1726_eos, rx1726_fail3766
    repr_get_attr_int $I11, self, rx1726_curclass, "$!from"
    ne $I11, -1, rxscan1727_done3772
    goto rxscan1727_scan3771
  rxscan1727_loop3770:
    inc rx1726_pos
    gt rx1726_pos, rx1726_eos, rx1726_fail3766
    repr_bind_attr_int rx1726_cur, rx1726_curclass, "$!from", rx1726_pos
  rxscan1727_scan3771:
    nqp_rxmark rx1726_bstack, rxscan1727_loop3770, rx1726_pos, 0
  rxscan1727_done3772:
    nqp_rxmark rx1726_bstack, rxcap1728_fail3774, rx1726_pos, 0
    add $I11, rx1726_pos, 1
    gt $I11, rx1726_eos, rx1726_fail3766
    substr $S10, rx1726_tgt, rx1726_pos, 1
    ne $S10, ucs4:"<", rx1726_fail3766
    add rx1726_pos, 1
    nqp_rxpeek $I19, rx1726_bstack, rxcap1728_fail3774
    inc $I19
    set $I11, rx1726_bstack[$I19]
    repr_bind_attr_int rx1726_cur, rx1726_curclass, "$!pos", rx1726_pos
    $P11 = rx1726_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1726_pos)
    rx1726_cstack = rx1726_cur."!cursor_capture"($P11, "sym")
    goto rxcap1728_done3773
  rxcap1728_fail3774:
    goto rx1726_fail3766
  rxcap1728_done3773:
    repr_bind_attr_int rx1726_cur, rx1726_curclass, "$!pos", rx1726_pos
    $P11 = rx1726_cur."O"("%relational, :op<islt_n>")
    repr_get_attr_int $I11, $P11, rx1726_curclass, "$!pos"
    lt $I11, 0, rx1726_fail3766
    nqp_rxmark rx1726_bstack, rxsubrule1729_pass3775, -1, 0
  rxsubrule1729_pass3775:
    rx1726_cstack = rx1726_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1726_pos, $P11, rx1726_curclass, "$!pos"
    rx1726_cur."!cursor_pass"(rx1726_pos, "infix:sym<<>", 'backtrack'=>1)
    .return (rx1726_cur)
  rx1726_restart3765:
    repr_get_attr_obj rx1726_cstack, rx1726_cur, rx1726_curclass, "$!cstack"
  rx1726_fail3766:
    unless rx1726_bstack, rx1726_done3764
    pop $I19, rx1726_bstack
    if_null rx1726_cstack, rx1726_cstack_done3769
    unless rx1726_cstack, rx1726_cstack_done3769
    dec $I19
    set $P11, rx1726_cstack[$I19]
  rx1726_cstack_done3769:
    pop rx1726_rep, rx1726_bstack
    pop rx1726_pos, rx1726_bstack
    pop $I19, rx1726_bstack
    lt rx1726_pos, -1, rx1726_done3764
    lt rx1726_pos, 0, rx1726_fail3766
    eq $I19, 0, rx1726_fail3766
    nqp_islist $I20, rx1726_cstack
    unless $I20, rx1726_jump3767
    elements $I18, rx1726_bstack
    le $I18, 0, rx1726_cut3768
    dec $I18
    set $I18, rx1726_bstack[$I18]
  rx1726_cut3768:
    assign rx1726_cstack, $I18
  rx1726_jump3767:
    jump $I19
  rx1726_done3764:
    rx1726_cur."!cursor_fail"()
    .return (rx1726_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<>>" :subid("cuid_201_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1374
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1730_tgt
    .local int rx1730_pos
    .local int rx1730_off
    .local int rx1730_eos
    .local int rx1730_rep
    .local pmc rx1730_cur
    .local pmc rx1730_curclass
    .local pmc rx1730_bstack
    .local pmc rx1730_cstack
    (rx1730_cur, rx1730_tgt, rx1730_pos, rx1730_curclass, rx1730_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1730_cur
    length rx1730_eos, rx1730_tgt
    eq $I19, 1, rx1730_restart3778
    gt rx1730_pos, rx1730_eos, rx1730_fail3779
    repr_get_attr_int $I11, self, rx1730_curclass, "$!from"
    ne $I11, -1, rxscan1731_done3785
    goto rxscan1731_scan3784
  rxscan1731_loop3783:
    inc rx1730_pos
    gt rx1730_pos, rx1730_eos, rx1730_fail3779
    repr_bind_attr_int rx1730_cur, rx1730_curclass, "$!from", rx1730_pos
  rxscan1731_scan3784:
    nqp_rxmark rx1730_bstack, rxscan1731_loop3783, rx1730_pos, 0
  rxscan1731_done3785:
    nqp_rxmark rx1730_bstack, rxcap1732_fail3787, rx1730_pos, 0
    add $I11, rx1730_pos, 1
    gt $I11, rx1730_eos, rx1730_fail3779
    substr $S10, rx1730_tgt, rx1730_pos, 1
    ne $S10, ucs4:">", rx1730_fail3779
    add rx1730_pos, 1
    nqp_rxpeek $I19, rx1730_bstack, rxcap1732_fail3787
    inc $I19
    set $I11, rx1730_bstack[$I19]
    repr_bind_attr_int rx1730_cur, rx1730_curclass, "$!pos", rx1730_pos
    $P11 = rx1730_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1730_pos)
    rx1730_cstack = rx1730_cur."!cursor_capture"($P11, "sym")
    goto rxcap1732_done3786
  rxcap1732_fail3787:
    goto rx1730_fail3779
  rxcap1732_done3786:
    repr_bind_attr_int rx1730_cur, rx1730_curclass, "$!pos", rx1730_pos
    $P11 = rx1730_cur."O"("%relational, :op<isgt_n>")
    repr_get_attr_int $I11, $P11, rx1730_curclass, "$!pos"
    lt $I11, 0, rx1730_fail3779
    nqp_rxmark rx1730_bstack, rxsubrule1733_pass3788, -1, 0
  rxsubrule1733_pass3788:
    rx1730_cstack = rx1730_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1730_pos, $P11, rx1730_curclass, "$!pos"
    rx1730_cur."!cursor_pass"(rx1730_pos, "infix:sym<>>", 'backtrack'=>1)
    .return (rx1730_cur)
  rx1730_restart3778:
    repr_get_attr_obj rx1730_cstack, rx1730_cur, rx1730_curclass, "$!cstack"
  rx1730_fail3779:
    unless rx1730_bstack, rx1730_done3777
    pop $I19, rx1730_bstack
    if_null rx1730_cstack, rx1730_cstack_done3782
    unless rx1730_cstack, rx1730_cstack_done3782
    dec $I19
    set $P11, rx1730_cstack[$I19]
  rx1730_cstack_done3782:
    pop rx1730_rep, rx1730_bstack
    pop rx1730_pos, rx1730_bstack
    pop $I19, rx1730_bstack
    lt rx1730_pos, -1, rx1730_done3777
    lt rx1730_pos, 0, rx1730_fail3779
    eq $I19, 0, rx1730_fail3779
    nqp_islist $I20, rx1730_cstack
    unless $I20, rx1730_jump3780
    elements $I18, rx1730_bstack
    le $I18, 0, rx1730_cut3781
    dec $I18
    set $I18, rx1730_bstack[$I18]
  rx1730_cut3781:
    assign rx1730_cstack, $I18
  rx1730_jump3780:
    jump $I19
  rx1730_done3777:
    rx1730_cur."!cursor_fail"()
    .return (rx1730_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<eq>" :subid("cuid_202_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1375
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1734_tgt
    .local int rx1734_pos
    .local int rx1734_off
    .local int rx1734_eos
    .local int rx1734_rep
    .local pmc rx1734_cur
    .local pmc rx1734_curclass
    .local pmc rx1734_bstack
    .local pmc rx1734_cstack
    (rx1734_cur, rx1734_tgt, rx1734_pos, rx1734_curclass, rx1734_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1734_cur
    length rx1734_eos, rx1734_tgt
    eq $I19, 1, rx1734_restart3791
    gt rx1734_pos, rx1734_eos, rx1734_fail3792
    repr_get_attr_int $I11, self, rx1734_curclass, "$!from"
    ne $I11, -1, rxscan1735_done3798
    goto rxscan1735_scan3797
  rxscan1735_loop3796:
    inc rx1734_pos
    gt rx1734_pos, rx1734_eos, rx1734_fail3792
    repr_bind_attr_int rx1734_cur, rx1734_curclass, "$!from", rx1734_pos
  rxscan1735_scan3797:
    nqp_rxmark rx1734_bstack, rxscan1735_loop3796, rx1734_pos, 0
  rxscan1735_done3798:
    nqp_rxmark rx1734_bstack, rxcap1736_fail3800, rx1734_pos, 0
    add $I11, rx1734_pos, 2
    gt $I11, rx1734_eos, rx1734_fail3792
    substr $S10, rx1734_tgt, rx1734_pos, 2
    ne $S10, ucs4:"eq", rx1734_fail3792
    add rx1734_pos, 2
    nqp_rxpeek $I19, rx1734_bstack, rxcap1736_fail3800
    inc $I19
    set $I11, rx1734_bstack[$I19]
    repr_bind_attr_int rx1734_cur, rx1734_curclass, "$!pos", rx1734_pos
    $P11 = rx1734_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1734_pos)
    rx1734_cstack = rx1734_cur."!cursor_capture"($P11, "sym")
    goto rxcap1736_done3799
  rxcap1736_fail3800:
    goto rx1734_fail3792
  rxcap1736_done3799:
    repr_bind_attr_int rx1734_cur, rx1734_curclass, "$!pos", rx1734_pos
    $P11 = rx1734_cur."O"("%relational, :op<iseq_s>")
    repr_get_attr_int $I11, $P11, rx1734_curclass, "$!pos"
    lt $I11, 0, rx1734_fail3792
    nqp_rxmark rx1734_bstack, rxsubrule1737_pass3801, -1, 0
  rxsubrule1737_pass3801:
    rx1734_cstack = rx1734_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1734_pos, $P11, rx1734_curclass, "$!pos"
    rx1734_cur."!cursor_pass"(rx1734_pos, "infix:sym<eq>", 'backtrack'=>1)
    .return (rx1734_cur)
  rx1734_restart3791:
    repr_get_attr_obj rx1734_cstack, rx1734_cur, rx1734_curclass, "$!cstack"
  rx1734_fail3792:
    unless rx1734_bstack, rx1734_done3790
    pop $I19, rx1734_bstack
    if_null rx1734_cstack, rx1734_cstack_done3795
    unless rx1734_cstack, rx1734_cstack_done3795
    dec $I19
    set $P11, rx1734_cstack[$I19]
  rx1734_cstack_done3795:
    pop rx1734_rep, rx1734_bstack
    pop rx1734_pos, rx1734_bstack
    pop $I19, rx1734_bstack
    lt rx1734_pos, -1, rx1734_done3790
    lt rx1734_pos, 0, rx1734_fail3792
    eq $I19, 0, rx1734_fail3792
    nqp_islist $I20, rx1734_cstack
    unless $I20, rx1734_jump3793
    elements $I18, rx1734_bstack
    le $I18, 0, rx1734_cut3794
    dec $I18
    set $I18, rx1734_bstack[$I18]
  rx1734_cut3794:
    assign rx1734_cstack, $I18
  rx1734_jump3793:
    jump $I19
  rx1734_done3790:
    rx1734_cur."!cursor_fail"()
    .return (rx1734_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<ne>" :subid("cuid_203_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1376
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1738_tgt
    .local int rx1738_pos
    .local int rx1738_off
    .local int rx1738_eos
    .local int rx1738_rep
    .local pmc rx1738_cur
    .local pmc rx1738_curclass
    .local pmc rx1738_bstack
    .local pmc rx1738_cstack
    (rx1738_cur, rx1738_tgt, rx1738_pos, rx1738_curclass, rx1738_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1738_cur
    length rx1738_eos, rx1738_tgt
    eq $I19, 1, rx1738_restart3804
    gt rx1738_pos, rx1738_eos, rx1738_fail3805
    repr_get_attr_int $I11, self, rx1738_curclass, "$!from"
    ne $I11, -1, rxscan1739_done3811
    goto rxscan1739_scan3810
  rxscan1739_loop3809:
    inc rx1738_pos
    gt rx1738_pos, rx1738_eos, rx1738_fail3805
    repr_bind_attr_int rx1738_cur, rx1738_curclass, "$!from", rx1738_pos
  rxscan1739_scan3810:
    nqp_rxmark rx1738_bstack, rxscan1739_loop3809, rx1738_pos, 0
  rxscan1739_done3811:
    nqp_rxmark rx1738_bstack, rxcap1740_fail3813, rx1738_pos, 0
    add $I11, rx1738_pos, 2
    gt $I11, rx1738_eos, rx1738_fail3805
    substr $S10, rx1738_tgt, rx1738_pos, 2
    ne $S10, ucs4:"ne", rx1738_fail3805
    add rx1738_pos, 2
    nqp_rxpeek $I19, rx1738_bstack, rxcap1740_fail3813
    inc $I19
    set $I11, rx1738_bstack[$I19]
    repr_bind_attr_int rx1738_cur, rx1738_curclass, "$!pos", rx1738_pos
    $P11 = rx1738_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1738_pos)
    rx1738_cstack = rx1738_cur."!cursor_capture"($P11, "sym")
    goto rxcap1740_done3812
  rxcap1740_fail3813:
    goto rx1738_fail3805
  rxcap1740_done3812:
    repr_bind_attr_int rx1738_cur, rx1738_curclass, "$!pos", rx1738_pos
    $P11 = rx1738_cur."O"("%relational, :op<isne_s>")
    repr_get_attr_int $I11, $P11, rx1738_curclass, "$!pos"
    lt $I11, 0, rx1738_fail3805
    nqp_rxmark rx1738_bstack, rxsubrule1741_pass3814, -1, 0
  rxsubrule1741_pass3814:
    rx1738_cstack = rx1738_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1738_pos, $P11, rx1738_curclass, "$!pos"
    rx1738_cur."!cursor_pass"(rx1738_pos, "infix:sym<ne>", 'backtrack'=>1)
    .return (rx1738_cur)
  rx1738_restart3804:
    repr_get_attr_obj rx1738_cstack, rx1738_cur, rx1738_curclass, "$!cstack"
  rx1738_fail3805:
    unless rx1738_bstack, rx1738_done3803
    pop $I19, rx1738_bstack
    if_null rx1738_cstack, rx1738_cstack_done3808
    unless rx1738_cstack, rx1738_cstack_done3808
    dec $I19
    set $P11, rx1738_cstack[$I19]
  rx1738_cstack_done3808:
    pop rx1738_rep, rx1738_bstack
    pop rx1738_pos, rx1738_bstack
    pop $I19, rx1738_bstack
    lt rx1738_pos, -1, rx1738_done3803
    lt rx1738_pos, 0, rx1738_fail3805
    eq $I19, 0, rx1738_fail3805
    nqp_islist $I20, rx1738_cstack
    unless $I20, rx1738_jump3806
    elements $I18, rx1738_bstack
    le $I18, 0, rx1738_cut3807
    dec $I18
    set $I18, rx1738_bstack[$I18]
  rx1738_cut3807:
    assign rx1738_cstack, $I18
  rx1738_jump3806:
    jump $I19
  rx1738_done3803:
    rx1738_cur."!cursor_fail"()
    .return (rx1738_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<le>" :subid("cuid_204_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1377
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1742_tgt
    .local int rx1742_pos
    .local int rx1742_off
    .local int rx1742_eos
    .local int rx1742_rep
    .local pmc rx1742_cur
    .local pmc rx1742_curclass
    .local pmc rx1742_bstack
    .local pmc rx1742_cstack
    (rx1742_cur, rx1742_tgt, rx1742_pos, rx1742_curclass, rx1742_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1742_cur
    length rx1742_eos, rx1742_tgt
    eq $I19, 1, rx1742_restart3817
    gt rx1742_pos, rx1742_eos, rx1742_fail3818
    repr_get_attr_int $I11, self, rx1742_curclass, "$!from"
    ne $I11, -1, rxscan1743_done3824
    goto rxscan1743_scan3823
  rxscan1743_loop3822:
    inc rx1742_pos
    gt rx1742_pos, rx1742_eos, rx1742_fail3818
    repr_bind_attr_int rx1742_cur, rx1742_curclass, "$!from", rx1742_pos
  rxscan1743_scan3823:
    nqp_rxmark rx1742_bstack, rxscan1743_loop3822, rx1742_pos, 0
  rxscan1743_done3824:
    nqp_rxmark rx1742_bstack, rxcap1744_fail3826, rx1742_pos, 0
    add $I11, rx1742_pos, 2
    gt $I11, rx1742_eos, rx1742_fail3818
    substr $S10, rx1742_tgt, rx1742_pos, 2
    ne $S10, ucs4:"le", rx1742_fail3818
    add rx1742_pos, 2
    nqp_rxpeek $I19, rx1742_bstack, rxcap1744_fail3826
    inc $I19
    set $I11, rx1742_bstack[$I19]
    repr_bind_attr_int rx1742_cur, rx1742_curclass, "$!pos", rx1742_pos
    $P11 = rx1742_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1742_pos)
    rx1742_cstack = rx1742_cur."!cursor_capture"($P11, "sym")
    goto rxcap1744_done3825
  rxcap1744_fail3826:
    goto rx1742_fail3818
  rxcap1744_done3825:
    repr_bind_attr_int rx1742_cur, rx1742_curclass, "$!pos", rx1742_pos
    $P11 = rx1742_cur."O"("%relational, :op<isle_s>")
    repr_get_attr_int $I11, $P11, rx1742_curclass, "$!pos"
    lt $I11, 0, rx1742_fail3818
    nqp_rxmark rx1742_bstack, rxsubrule1745_pass3827, -1, 0
  rxsubrule1745_pass3827:
    rx1742_cstack = rx1742_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1742_pos, $P11, rx1742_curclass, "$!pos"
    rx1742_cur."!cursor_pass"(rx1742_pos, "infix:sym<le>", 'backtrack'=>1)
    .return (rx1742_cur)
  rx1742_restart3817:
    repr_get_attr_obj rx1742_cstack, rx1742_cur, rx1742_curclass, "$!cstack"
  rx1742_fail3818:
    unless rx1742_bstack, rx1742_done3816
    pop $I19, rx1742_bstack
    if_null rx1742_cstack, rx1742_cstack_done3821
    unless rx1742_cstack, rx1742_cstack_done3821
    dec $I19
    set $P11, rx1742_cstack[$I19]
  rx1742_cstack_done3821:
    pop rx1742_rep, rx1742_bstack
    pop rx1742_pos, rx1742_bstack
    pop $I19, rx1742_bstack
    lt rx1742_pos, -1, rx1742_done3816
    lt rx1742_pos, 0, rx1742_fail3818
    eq $I19, 0, rx1742_fail3818
    nqp_islist $I20, rx1742_cstack
    unless $I20, rx1742_jump3819
    elements $I18, rx1742_bstack
    le $I18, 0, rx1742_cut3820
    dec $I18
    set $I18, rx1742_bstack[$I18]
  rx1742_cut3820:
    assign rx1742_cstack, $I18
  rx1742_jump3819:
    jump $I19
  rx1742_done3816:
    rx1742_cur."!cursor_fail"()
    .return (rx1742_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<ge>" :subid("cuid_205_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1378
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1746_tgt
    .local int rx1746_pos
    .local int rx1746_off
    .local int rx1746_eos
    .local int rx1746_rep
    .local pmc rx1746_cur
    .local pmc rx1746_curclass
    .local pmc rx1746_bstack
    .local pmc rx1746_cstack
    (rx1746_cur, rx1746_tgt, rx1746_pos, rx1746_curclass, rx1746_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1746_cur
    length rx1746_eos, rx1746_tgt
    eq $I19, 1, rx1746_restart3830
    gt rx1746_pos, rx1746_eos, rx1746_fail3831
    repr_get_attr_int $I11, self, rx1746_curclass, "$!from"
    ne $I11, -1, rxscan1747_done3837
    goto rxscan1747_scan3836
  rxscan1747_loop3835:
    inc rx1746_pos
    gt rx1746_pos, rx1746_eos, rx1746_fail3831
    repr_bind_attr_int rx1746_cur, rx1746_curclass, "$!from", rx1746_pos
  rxscan1747_scan3836:
    nqp_rxmark rx1746_bstack, rxscan1747_loop3835, rx1746_pos, 0
  rxscan1747_done3837:
    nqp_rxmark rx1746_bstack, rxcap1748_fail3839, rx1746_pos, 0
    add $I11, rx1746_pos, 2
    gt $I11, rx1746_eos, rx1746_fail3831
    substr $S10, rx1746_tgt, rx1746_pos, 2
    ne $S10, ucs4:"ge", rx1746_fail3831
    add rx1746_pos, 2
    nqp_rxpeek $I19, rx1746_bstack, rxcap1748_fail3839
    inc $I19
    set $I11, rx1746_bstack[$I19]
    repr_bind_attr_int rx1746_cur, rx1746_curclass, "$!pos", rx1746_pos
    $P11 = rx1746_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1746_pos)
    rx1746_cstack = rx1746_cur."!cursor_capture"($P11, "sym")
    goto rxcap1748_done3838
  rxcap1748_fail3839:
    goto rx1746_fail3831
  rxcap1748_done3838:
    repr_bind_attr_int rx1746_cur, rx1746_curclass, "$!pos", rx1746_pos
    $P11 = rx1746_cur."O"("%relational, :op<isge_s>")
    repr_get_attr_int $I11, $P11, rx1746_curclass, "$!pos"
    lt $I11, 0, rx1746_fail3831
    nqp_rxmark rx1746_bstack, rxsubrule1749_pass3840, -1, 0
  rxsubrule1749_pass3840:
    rx1746_cstack = rx1746_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1746_pos, $P11, rx1746_curclass, "$!pos"
    rx1746_cur."!cursor_pass"(rx1746_pos, "infix:sym<ge>", 'backtrack'=>1)
    .return (rx1746_cur)
  rx1746_restart3830:
    repr_get_attr_obj rx1746_cstack, rx1746_cur, rx1746_curclass, "$!cstack"
  rx1746_fail3831:
    unless rx1746_bstack, rx1746_done3829
    pop $I19, rx1746_bstack
    if_null rx1746_cstack, rx1746_cstack_done3834
    unless rx1746_cstack, rx1746_cstack_done3834
    dec $I19
    set $P11, rx1746_cstack[$I19]
  rx1746_cstack_done3834:
    pop rx1746_rep, rx1746_bstack
    pop rx1746_pos, rx1746_bstack
    pop $I19, rx1746_bstack
    lt rx1746_pos, -1, rx1746_done3829
    lt rx1746_pos, 0, rx1746_fail3831
    eq $I19, 0, rx1746_fail3831
    nqp_islist $I20, rx1746_cstack
    unless $I20, rx1746_jump3832
    elements $I18, rx1746_bstack
    le $I18, 0, rx1746_cut3833
    dec $I18
    set $I18, rx1746_bstack[$I18]
  rx1746_cut3833:
    assign rx1746_cstack, $I18
  rx1746_jump3832:
    jump $I19
  rx1746_done3829:
    rx1746_cur."!cursor_fail"()
    .return (rx1746_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<lt>" :subid("cuid_206_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1379
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1750_tgt
    .local int rx1750_pos
    .local int rx1750_off
    .local int rx1750_eos
    .local int rx1750_rep
    .local pmc rx1750_cur
    .local pmc rx1750_curclass
    .local pmc rx1750_bstack
    .local pmc rx1750_cstack
    (rx1750_cur, rx1750_tgt, rx1750_pos, rx1750_curclass, rx1750_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1750_cur
    length rx1750_eos, rx1750_tgt
    eq $I19, 1, rx1750_restart3843
    gt rx1750_pos, rx1750_eos, rx1750_fail3844
    repr_get_attr_int $I11, self, rx1750_curclass, "$!from"
    ne $I11, -1, rxscan1751_done3850
    goto rxscan1751_scan3849
  rxscan1751_loop3848:
    inc rx1750_pos
    gt rx1750_pos, rx1750_eos, rx1750_fail3844
    repr_bind_attr_int rx1750_cur, rx1750_curclass, "$!from", rx1750_pos
  rxscan1751_scan3849:
    nqp_rxmark rx1750_bstack, rxscan1751_loop3848, rx1750_pos, 0
  rxscan1751_done3850:
    nqp_rxmark rx1750_bstack, rxcap1752_fail3852, rx1750_pos, 0
    add $I11, rx1750_pos, 2
    gt $I11, rx1750_eos, rx1750_fail3844
    substr $S10, rx1750_tgt, rx1750_pos, 2
    ne $S10, ucs4:"lt", rx1750_fail3844
    add rx1750_pos, 2
    nqp_rxpeek $I19, rx1750_bstack, rxcap1752_fail3852
    inc $I19
    set $I11, rx1750_bstack[$I19]
    repr_bind_attr_int rx1750_cur, rx1750_curclass, "$!pos", rx1750_pos
    $P11 = rx1750_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1750_pos)
    rx1750_cstack = rx1750_cur."!cursor_capture"($P11, "sym")
    goto rxcap1752_done3851
  rxcap1752_fail3852:
    goto rx1750_fail3844
  rxcap1752_done3851:
    repr_bind_attr_int rx1750_cur, rx1750_curclass, "$!pos", rx1750_pos
    $P11 = rx1750_cur."O"("%relational, :op<islt_s>")
    repr_get_attr_int $I11, $P11, rx1750_curclass, "$!pos"
    lt $I11, 0, rx1750_fail3844
    nqp_rxmark rx1750_bstack, rxsubrule1753_pass3853, -1, 0
  rxsubrule1753_pass3853:
    rx1750_cstack = rx1750_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1750_pos, $P11, rx1750_curclass, "$!pos"
    rx1750_cur."!cursor_pass"(rx1750_pos, "infix:sym<lt>", 'backtrack'=>1)
    .return (rx1750_cur)
  rx1750_restart3843:
    repr_get_attr_obj rx1750_cstack, rx1750_cur, rx1750_curclass, "$!cstack"
  rx1750_fail3844:
    unless rx1750_bstack, rx1750_done3842
    pop $I19, rx1750_bstack
    if_null rx1750_cstack, rx1750_cstack_done3847
    unless rx1750_cstack, rx1750_cstack_done3847
    dec $I19
    set $P11, rx1750_cstack[$I19]
  rx1750_cstack_done3847:
    pop rx1750_rep, rx1750_bstack
    pop rx1750_pos, rx1750_bstack
    pop $I19, rx1750_bstack
    lt rx1750_pos, -1, rx1750_done3842
    lt rx1750_pos, 0, rx1750_fail3844
    eq $I19, 0, rx1750_fail3844
    nqp_islist $I20, rx1750_cstack
    unless $I20, rx1750_jump3845
    elements $I18, rx1750_bstack
    le $I18, 0, rx1750_cut3846
    dec $I18
    set $I18, rx1750_bstack[$I18]
  rx1750_cut3846:
    assign rx1750_cstack, $I18
  rx1750_jump3845:
    jump $I19
  rx1750_done3842:
    rx1750_cur."!cursor_fail"()
    .return (rx1750_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<gt>" :subid("cuid_207_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1380
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1754_tgt
    .local int rx1754_pos
    .local int rx1754_off
    .local int rx1754_eos
    .local int rx1754_rep
    .local pmc rx1754_cur
    .local pmc rx1754_curclass
    .local pmc rx1754_bstack
    .local pmc rx1754_cstack
    (rx1754_cur, rx1754_tgt, rx1754_pos, rx1754_curclass, rx1754_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1754_cur
    length rx1754_eos, rx1754_tgt
    eq $I19, 1, rx1754_restart3856
    gt rx1754_pos, rx1754_eos, rx1754_fail3857
    repr_get_attr_int $I11, self, rx1754_curclass, "$!from"
    ne $I11, -1, rxscan1755_done3863
    goto rxscan1755_scan3862
  rxscan1755_loop3861:
    inc rx1754_pos
    gt rx1754_pos, rx1754_eos, rx1754_fail3857
    repr_bind_attr_int rx1754_cur, rx1754_curclass, "$!from", rx1754_pos
  rxscan1755_scan3862:
    nqp_rxmark rx1754_bstack, rxscan1755_loop3861, rx1754_pos, 0
  rxscan1755_done3863:
    nqp_rxmark rx1754_bstack, rxcap1756_fail3865, rx1754_pos, 0
    add $I11, rx1754_pos, 2
    gt $I11, rx1754_eos, rx1754_fail3857
    substr $S10, rx1754_tgt, rx1754_pos, 2
    ne $S10, ucs4:"gt", rx1754_fail3857
    add rx1754_pos, 2
    nqp_rxpeek $I19, rx1754_bstack, rxcap1756_fail3865
    inc $I19
    set $I11, rx1754_bstack[$I19]
    repr_bind_attr_int rx1754_cur, rx1754_curclass, "$!pos", rx1754_pos
    $P11 = rx1754_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1754_pos)
    rx1754_cstack = rx1754_cur."!cursor_capture"($P11, "sym")
    goto rxcap1756_done3864
  rxcap1756_fail3865:
    goto rx1754_fail3857
  rxcap1756_done3864:
    repr_bind_attr_int rx1754_cur, rx1754_curclass, "$!pos", rx1754_pos
    $P11 = rx1754_cur."O"("%relational, :op<isgt_s>")
    repr_get_attr_int $I11, $P11, rx1754_curclass, "$!pos"
    lt $I11, 0, rx1754_fail3857
    nqp_rxmark rx1754_bstack, rxsubrule1757_pass3866, -1, 0
  rxsubrule1757_pass3866:
    rx1754_cstack = rx1754_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1754_pos, $P11, rx1754_curclass, "$!pos"
    rx1754_cur."!cursor_pass"(rx1754_pos, "infix:sym<gt>", 'backtrack'=>1)
    .return (rx1754_cur)
  rx1754_restart3856:
    repr_get_attr_obj rx1754_cstack, rx1754_cur, rx1754_curclass, "$!cstack"
  rx1754_fail3857:
    unless rx1754_bstack, rx1754_done3855
    pop $I19, rx1754_bstack
    if_null rx1754_cstack, rx1754_cstack_done3860
    unless rx1754_cstack, rx1754_cstack_done3860
    dec $I19
    set $P11, rx1754_cstack[$I19]
  rx1754_cstack_done3860:
    pop rx1754_rep, rx1754_bstack
    pop rx1754_pos, rx1754_bstack
    pop $I19, rx1754_bstack
    lt rx1754_pos, -1, rx1754_done3855
    lt rx1754_pos, 0, rx1754_fail3857
    eq $I19, 0, rx1754_fail3857
    nqp_islist $I20, rx1754_cstack
    unless $I20, rx1754_jump3858
    elements $I18, rx1754_bstack
    le $I18, 0, rx1754_cut3859
    dec $I18
    set $I18, rx1754_bstack[$I18]
  rx1754_cut3859:
    assign rx1754_cstack, $I18
  rx1754_jump3858:
    jump $I19
  rx1754_done3855:
    rx1754_cur."!cursor_fail"()
    .return (rx1754_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<=:=>" :subid("cuid_208_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1381
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1758_tgt
    .local int rx1758_pos
    .local int rx1758_off
    .local int rx1758_eos
    .local int rx1758_rep
    .local pmc rx1758_cur
    .local pmc rx1758_curclass
    .local pmc rx1758_bstack
    .local pmc rx1758_cstack
    (rx1758_cur, rx1758_tgt, rx1758_pos, rx1758_curclass, rx1758_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1758_cur
    length rx1758_eos, rx1758_tgt
    eq $I19, 1, rx1758_restart3869
    gt rx1758_pos, rx1758_eos, rx1758_fail3870
    repr_get_attr_int $I11, self, rx1758_curclass, "$!from"
    ne $I11, -1, rxscan1759_done3876
    goto rxscan1759_scan3875
  rxscan1759_loop3874:
    inc rx1758_pos
    gt rx1758_pos, rx1758_eos, rx1758_fail3870
    repr_bind_attr_int rx1758_cur, rx1758_curclass, "$!from", rx1758_pos
  rxscan1759_scan3875:
    nqp_rxmark rx1758_bstack, rxscan1759_loop3874, rx1758_pos, 0
  rxscan1759_done3876:
    nqp_rxmark rx1758_bstack, rxcap1760_fail3878, rx1758_pos, 0
    add $I11, rx1758_pos, 3
    gt $I11, rx1758_eos, rx1758_fail3870
    substr $S10, rx1758_tgt, rx1758_pos, 3
    ne $S10, ucs4:"=:=", rx1758_fail3870
    add rx1758_pos, 3
    nqp_rxpeek $I19, rx1758_bstack, rxcap1760_fail3878
    inc $I19
    set $I11, rx1758_bstack[$I19]
    repr_bind_attr_int rx1758_cur, rx1758_curclass, "$!pos", rx1758_pos
    $P11 = rx1758_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1758_pos)
    rx1758_cstack = rx1758_cur."!cursor_capture"($P11, "sym")
    goto rxcap1760_done3877
  rxcap1760_fail3878:
    goto rx1758_fail3870
  rxcap1760_done3877:
    repr_bind_attr_int rx1758_cur, rx1758_curclass, "$!pos", rx1758_pos
    $P11 = rx1758_cur."O"("%relational, :op<eqaddr>")
    repr_get_attr_int $I11, $P11, rx1758_curclass, "$!pos"
    lt $I11, 0, rx1758_fail3870
    nqp_rxmark rx1758_bstack, rxsubrule1761_pass3879, -1, 0
  rxsubrule1761_pass3879:
    rx1758_cstack = rx1758_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1758_pos, $P11, rx1758_curclass, "$!pos"
    rx1758_cur."!cursor_pass"(rx1758_pos, "infix:sym<=:=>", 'backtrack'=>1)
    .return (rx1758_cur)
  rx1758_restart3869:
    repr_get_attr_obj rx1758_cstack, rx1758_cur, rx1758_curclass, "$!cstack"
  rx1758_fail3870:
    unless rx1758_bstack, rx1758_done3868
    pop $I19, rx1758_bstack
    if_null rx1758_cstack, rx1758_cstack_done3873
    unless rx1758_cstack, rx1758_cstack_done3873
    dec $I19
    set $P11, rx1758_cstack[$I19]
  rx1758_cstack_done3873:
    pop rx1758_rep, rx1758_bstack
    pop rx1758_pos, rx1758_bstack
    pop $I19, rx1758_bstack
    lt rx1758_pos, -1, rx1758_done3868
    lt rx1758_pos, 0, rx1758_fail3870
    eq $I19, 0, rx1758_fail3870
    nqp_islist $I20, rx1758_cstack
    unless $I20, rx1758_jump3871
    elements $I18, rx1758_bstack
    le $I18, 0, rx1758_cut3872
    dec $I18
    set $I18, rx1758_bstack[$I18]
  rx1758_cut3872:
    assign rx1758_cstack, $I18
  rx1758_jump3871:
    jump $I19
  rx1758_done3868:
    rx1758_cur."!cursor_fail"()
    .return (rx1758_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<~~>" :subid("cuid_209_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1382
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1762_tgt
    .local int rx1762_pos
    .local int rx1762_off
    .local int rx1762_eos
    .local int rx1762_rep
    .local pmc rx1762_cur
    .local pmc rx1762_curclass
    .local pmc rx1762_bstack
    .local pmc rx1762_cstack
    (rx1762_cur, rx1762_tgt, rx1762_pos, rx1762_curclass, rx1762_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1762_cur
    length rx1762_eos, rx1762_tgt
    eq $I19, 1, rx1762_restart3882
    gt rx1762_pos, rx1762_eos, rx1762_fail3883
    repr_get_attr_int $I11, self, rx1762_curclass, "$!from"
    ne $I11, -1, rxscan1763_done3889
    goto rxscan1763_scan3888
  rxscan1763_loop3887:
    inc rx1762_pos
    gt rx1762_pos, rx1762_eos, rx1762_fail3883
    repr_bind_attr_int rx1762_cur, rx1762_curclass, "$!from", rx1762_pos
  rxscan1763_scan3888:
    nqp_rxmark rx1762_bstack, rxscan1763_loop3887, rx1762_pos, 0
  rxscan1763_done3889:
    nqp_rxmark rx1762_bstack, rxcap1764_fail3891, rx1762_pos, 0
    add $I11, rx1762_pos, 2
    gt $I11, rx1762_eos, rx1762_fail3883
    substr $S10, rx1762_tgt, rx1762_pos, 2
    ne $S10, ucs4:"~~", rx1762_fail3883
    add rx1762_pos, 2
    nqp_rxpeek $I19, rx1762_bstack, rxcap1764_fail3891
    inc $I19
    set $I11, rx1762_bstack[$I19]
    repr_bind_attr_int rx1762_cur, rx1762_curclass, "$!pos", rx1762_pos
    $P11 = rx1762_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1762_pos)
    rx1762_cstack = rx1762_cur."!cursor_capture"($P11, "sym")
    goto rxcap1764_done3890
  rxcap1764_fail3891:
    goto rx1762_fail3883
  rxcap1764_done3890:
    repr_bind_attr_int rx1762_cur, rx1762_curclass, "$!pos", rx1762_pos
    $P11 = rx1762_cur."O"("%relational, :reducecheck<smartmatch>")
    repr_get_attr_int $I11, $P11, rx1762_curclass, "$!pos"
    lt $I11, 0, rx1762_fail3883
    nqp_rxmark rx1762_bstack, rxsubrule1765_pass3892, -1, 0
  rxsubrule1765_pass3892:
    rx1762_cstack = rx1762_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1762_pos, $P11, rx1762_curclass, "$!pos"
    rx1762_cur."!cursor_pass"(rx1762_pos, "infix:sym<~~>", 'backtrack'=>1)
    .return (rx1762_cur)
  rx1762_restart3882:
    repr_get_attr_obj rx1762_cstack, rx1762_cur, rx1762_curclass, "$!cstack"
  rx1762_fail3883:
    unless rx1762_bstack, rx1762_done3881
    pop $I19, rx1762_bstack
    if_null rx1762_cstack, rx1762_cstack_done3886
    unless rx1762_cstack, rx1762_cstack_done3886
    dec $I19
    set $P11, rx1762_cstack[$I19]
  rx1762_cstack_done3886:
    pop rx1762_rep, rx1762_bstack
    pop rx1762_pos, rx1762_bstack
    pop $I19, rx1762_bstack
    lt rx1762_pos, -1, rx1762_done3881
    lt rx1762_pos, 0, rx1762_fail3883
    eq $I19, 0, rx1762_fail3883
    nqp_islist $I20, rx1762_cstack
    unless $I20, rx1762_jump3884
    elements $I18, rx1762_bstack
    le $I18, 0, rx1762_cut3885
    dec $I18
    set $I18, rx1762_bstack[$I18]
  rx1762_cut3885:
    assign rx1762_cstack, $I18
  rx1762_jump3884:
    jump $I19
  rx1762_done3881:
    rx1762_cur."!cursor_fail"()
    .return (rx1762_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<&&>" :subid("cuid_210_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1384
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1766_tgt
    .local int rx1766_pos
    .local int rx1766_off
    .local int rx1766_eos
    .local int rx1766_rep
    .local pmc rx1766_cur
    .local pmc rx1766_curclass
    .local pmc rx1766_bstack
    .local pmc rx1766_cstack
    (rx1766_cur, rx1766_tgt, rx1766_pos, rx1766_curclass, rx1766_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1766_cur
    length rx1766_eos, rx1766_tgt
    eq $I19, 1, rx1766_restart3895
    gt rx1766_pos, rx1766_eos, rx1766_fail3896
    repr_get_attr_int $I11, self, rx1766_curclass, "$!from"
    ne $I11, -1, rxscan1767_done3902
    goto rxscan1767_scan3901
  rxscan1767_loop3900:
    inc rx1766_pos
    gt rx1766_pos, rx1766_eos, rx1766_fail3896
    repr_bind_attr_int rx1766_cur, rx1766_curclass, "$!from", rx1766_pos
  rxscan1767_scan3901:
    nqp_rxmark rx1766_bstack, rxscan1767_loop3900, rx1766_pos, 0
  rxscan1767_done3902:
    nqp_rxmark rx1766_bstack, rxcap1768_fail3904, rx1766_pos, 0
    add $I11, rx1766_pos, 2
    gt $I11, rx1766_eos, rx1766_fail3896
    substr $S10, rx1766_tgt, rx1766_pos, 2
    ne $S10, ucs4:"&&", rx1766_fail3896
    add rx1766_pos, 2
    nqp_rxpeek $I19, rx1766_bstack, rxcap1768_fail3904
    inc $I19
    set $I11, rx1766_bstack[$I19]
    repr_bind_attr_int rx1766_cur, rx1766_curclass, "$!pos", rx1766_pos
    $P11 = rx1766_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1766_pos)
    rx1766_cstack = rx1766_cur."!cursor_capture"($P11, "sym")
    goto rxcap1768_done3903
  rxcap1768_fail3904:
    goto rx1766_fail3896
  rxcap1768_done3903:
    repr_bind_attr_int rx1766_cur, rx1766_curclass, "$!pos", rx1766_pos
    $P11 = rx1766_cur."O"("%tight_and, :op<if>")
    repr_get_attr_int $I11, $P11, rx1766_curclass, "$!pos"
    lt $I11, 0, rx1766_fail3896
    nqp_rxmark rx1766_bstack, rxsubrule1769_pass3905, -1, 0
  rxsubrule1769_pass3905:
    rx1766_cstack = rx1766_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1766_pos, $P11, rx1766_curclass, "$!pos"
    rx1766_cur."!cursor_pass"(rx1766_pos, "infix:sym<&&>", 'backtrack'=>1)
    .return (rx1766_cur)
  rx1766_restart3895:
    repr_get_attr_obj rx1766_cstack, rx1766_cur, rx1766_curclass, "$!cstack"
  rx1766_fail3896:
    unless rx1766_bstack, rx1766_done3894
    pop $I19, rx1766_bstack
    if_null rx1766_cstack, rx1766_cstack_done3899
    unless rx1766_cstack, rx1766_cstack_done3899
    dec $I19
    set $P11, rx1766_cstack[$I19]
  rx1766_cstack_done3899:
    pop rx1766_rep, rx1766_bstack
    pop rx1766_pos, rx1766_bstack
    pop $I19, rx1766_bstack
    lt rx1766_pos, -1, rx1766_done3894
    lt rx1766_pos, 0, rx1766_fail3896
    eq $I19, 0, rx1766_fail3896
    nqp_islist $I20, rx1766_cstack
    unless $I20, rx1766_jump3897
    elements $I18, rx1766_bstack
    le $I18, 0, rx1766_cut3898
    dec $I18
    set $I18, rx1766_bstack[$I18]
  rx1766_cut3898:
    assign rx1766_cstack, $I18
  rx1766_jump3897:
    jump $I19
  rx1766_done3894:
    rx1766_cur."!cursor_fail"()
    .return (rx1766_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<||>" :subid("cuid_211_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1386
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1770_tgt
    .local int rx1770_pos
    .local int rx1770_off
    .local int rx1770_eos
    .local int rx1770_rep
    .local pmc rx1770_cur
    .local pmc rx1770_curclass
    .local pmc rx1770_bstack
    .local pmc rx1770_cstack
    (rx1770_cur, rx1770_tgt, rx1770_pos, rx1770_curclass, rx1770_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1770_cur
    length rx1770_eos, rx1770_tgt
    eq $I19, 1, rx1770_restart3908
    gt rx1770_pos, rx1770_eos, rx1770_fail3909
    repr_get_attr_int $I11, self, rx1770_curclass, "$!from"
    ne $I11, -1, rxscan1771_done3915
    goto rxscan1771_scan3914
  rxscan1771_loop3913:
    inc rx1770_pos
    gt rx1770_pos, rx1770_eos, rx1770_fail3909
    repr_bind_attr_int rx1770_cur, rx1770_curclass, "$!from", rx1770_pos
  rxscan1771_scan3914:
    nqp_rxmark rx1770_bstack, rxscan1771_loop3913, rx1770_pos, 0
  rxscan1771_done3915:
    nqp_rxmark rx1770_bstack, rxcap1772_fail3917, rx1770_pos, 0
    add $I11, rx1770_pos, 2
    gt $I11, rx1770_eos, rx1770_fail3909
    substr $S10, rx1770_tgt, rx1770_pos, 2
    ne $S10, ucs4:"||", rx1770_fail3909
    add rx1770_pos, 2
    nqp_rxpeek $I19, rx1770_bstack, rxcap1772_fail3917
    inc $I19
    set $I11, rx1770_bstack[$I19]
    repr_bind_attr_int rx1770_cur, rx1770_curclass, "$!pos", rx1770_pos
    $P11 = rx1770_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1770_pos)
    rx1770_cstack = rx1770_cur."!cursor_capture"($P11, "sym")
    goto rxcap1772_done3916
  rxcap1772_fail3917:
    goto rx1770_fail3909
  rxcap1772_done3916:
    repr_bind_attr_int rx1770_cur, rx1770_curclass, "$!pos", rx1770_pos
    $P11 = rx1770_cur."O"("%tight_or, :op<unless>")
    repr_get_attr_int $I11, $P11, rx1770_curclass, "$!pos"
    lt $I11, 0, rx1770_fail3909
    nqp_rxmark rx1770_bstack, rxsubrule1773_pass3918, -1, 0
  rxsubrule1773_pass3918:
    rx1770_cstack = rx1770_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1770_pos, $P11, rx1770_curclass, "$!pos"
    rx1770_cur."!cursor_pass"(rx1770_pos, "infix:sym<||>", 'backtrack'=>1)
    .return (rx1770_cur)
  rx1770_restart3908:
    repr_get_attr_obj rx1770_cstack, rx1770_cur, rx1770_curclass, "$!cstack"
  rx1770_fail3909:
    unless rx1770_bstack, rx1770_done3907
    pop $I19, rx1770_bstack
    if_null rx1770_cstack, rx1770_cstack_done3912
    unless rx1770_cstack, rx1770_cstack_done3912
    dec $I19
    set $P11, rx1770_cstack[$I19]
  rx1770_cstack_done3912:
    pop rx1770_rep, rx1770_bstack
    pop rx1770_pos, rx1770_bstack
    pop $I19, rx1770_bstack
    lt rx1770_pos, -1, rx1770_done3907
    lt rx1770_pos, 0, rx1770_fail3909
    eq $I19, 0, rx1770_fail3909
    nqp_islist $I20, rx1770_cstack
    unless $I20, rx1770_jump3910
    elements $I18, rx1770_bstack
    le $I18, 0, rx1770_cut3911
    dec $I18
    set $I18, rx1770_bstack[$I18]
  rx1770_cut3911:
    assign rx1770_cstack, $I18
  rx1770_jump3910:
    jump $I19
  rx1770_done3907:
    rx1770_cur."!cursor_fail"()
    .return (rx1770_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<//>" :subid("cuid_212_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1387
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1774_tgt
    .local int rx1774_pos
    .local int rx1774_off
    .local int rx1774_eos
    .local int rx1774_rep
    .local pmc rx1774_cur
    .local pmc rx1774_curclass
    .local pmc rx1774_bstack
    .local pmc rx1774_cstack
    (rx1774_cur, rx1774_tgt, rx1774_pos, rx1774_curclass, rx1774_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1774_cur
    length rx1774_eos, rx1774_tgt
    eq $I19, 1, rx1774_restart3921
    gt rx1774_pos, rx1774_eos, rx1774_fail3922
    repr_get_attr_int $I11, self, rx1774_curclass, "$!from"
    ne $I11, -1, rxscan1775_done3928
    goto rxscan1775_scan3927
  rxscan1775_loop3926:
    inc rx1774_pos
    gt rx1774_pos, rx1774_eos, rx1774_fail3922
    repr_bind_attr_int rx1774_cur, rx1774_curclass, "$!from", rx1774_pos
  rxscan1775_scan3927:
    nqp_rxmark rx1774_bstack, rxscan1775_loop3926, rx1774_pos, 0
  rxscan1775_done3928:
    nqp_rxmark rx1774_bstack, rxcap1776_fail3930, rx1774_pos, 0
    add $I11, rx1774_pos, 2
    gt $I11, rx1774_eos, rx1774_fail3922
    substr $S10, rx1774_tgt, rx1774_pos, 2
    ne $S10, ucs4:"//", rx1774_fail3922
    add rx1774_pos, 2
    nqp_rxpeek $I19, rx1774_bstack, rxcap1776_fail3930
    inc $I19
    set $I11, rx1774_bstack[$I19]
    repr_bind_attr_int rx1774_cur, rx1774_curclass, "$!pos", rx1774_pos
    $P11 = rx1774_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1774_pos)
    rx1774_cstack = rx1774_cur."!cursor_capture"($P11, "sym")
    goto rxcap1776_done3929
  rxcap1776_fail3930:
    goto rx1774_fail3922
  rxcap1776_done3929:
    repr_bind_attr_int rx1774_cur, rx1774_curclass, "$!pos", rx1774_pos
    $P11 = rx1774_cur."O"("%tight_or, :op<defor>")
    repr_get_attr_int $I11, $P11, rx1774_curclass, "$!pos"
    lt $I11, 0, rx1774_fail3922
    nqp_rxmark rx1774_bstack, rxsubrule1777_pass3931, -1, 0
  rxsubrule1777_pass3931:
    rx1774_cstack = rx1774_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1774_pos, $P11, rx1774_curclass, "$!pos"
    rx1774_cur."!cursor_pass"(rx1774_pos, "infix:sym<//>", 'backtrack'=>1)
    .return (rx1774_cur)
  rx1774_restart3921:
    repr_get_attr_obj rx1774_cstack, rx1774_cur, rx1774_curclass, "$!cstack"
  rx1774_fail3922:
    unless rx1774_bstack, rx1774_done3920
    pop $I19, rx1774_bstack
    if_null rx1774_cstack, rx1774_cstack_done3925
    unless rx1774_cstack, rx1774_cstack_done3925
    dec $I19
    set $P11, rx1774_cstack[$I19]
  rx1774_cstack_done3925:
    pop rx1774_rep, rx1774_bstack
    pop rx1774_pos, rx1774_bstack
    pop $I19, rx1774_bstack
    lt rx1774_pos, -1, rx1774_done3920
    lt rx1774_pos, 0, rx1774_fail3922
    eq $I19, 0, rx1774_fail3922
    nqp_islist $I20, rx1774_cstack
    unless $I20, rx1774_jump3923
    elements $I18, rx1774_bstack
    le $I18, 0, rx1774_cut3924
    dec $I18
    set $I18, rx1774_bstack[$I18]
  rx1774_cut3924:
    assign rx1774_cstack, $I18
  rx1774_jump3923:
    jump $I19
  rx1774_done3920:
    rx1774_cur."!cursor_fail"()
    .return (rx1774_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<?? !!>" :subid("cuid_213_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1389
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1778_tgt
    .local int rx1778_pos
    .local int rx1778_off
    .local int rx1778_eos
    .local int rx1778_rep
    .local pmc rx1778_cur
    .local pmc rx1778_curclass
    .local pmc rx1778_bstack
    .local pmc rx1778_cstack
    (rx1778_cur, rx1778_tgt, rx1778_pos, rx1778_curclass, rx1778_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1778_cur
    length rx1778_eos, rx1778_tgt
    eq $I19, 1, rx1778_restart3934
    gt rx1778_pos, rx1778_eos, rx1778_fail3935
    repr_get_attr_int $I11, self, rx1778_curclass, "$!from"
    ne $I11, -1, rxscan1779_done3941
    goto rxscan1779_scan3940
  rxscan1779_loop3939:
    inc rx1778_pos
    gt rx1778_pos, rx1778_eos, rx1778_fail3935
    repr_bind_attr_int rx1778_cur, rx1778_curclass, "$!from", rx1778_pos
  rxscan1779_scan3940:
    nqp_rxmark rx1778_bstack, rxscan1779_loop3939, rx1778_pos, 0
  rxscan1779_done3941:
    add $I11, rx1778_pos, 2
    gt $I11, rx1778_eos, rx1778_fail3935
    substr $S10, rx1778_tgt, rx1778_pos, 2
    ne $S10, ucs4:"??", rx1778_fail3935
    add rx1778_pos, 2
    repr_bind_attr_int rx1778_cur, rx1778_curclass, "$!pos", rx1778_pos
    $P11 = rx1778_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1778_curclass, "$!pos"
    lt $I11, 0, rx1778_fail3935
    repr_get_attr_int rx1778_pos, $P11, rx1778_curclass, "$!pos"
    repr_bind_attr_int rx1778_cur, rx1778_curclass, "$!pos", rx1778_pos
    $P11 = rx1778_cur."EXPR"("i=")
    repr_get_attr_int $I11, $P11, rx1778_curclass, "$!pos"
    lt $I11, 0, rx1778_fail3935
    nqp_rxmark rx1778_bstack, rxsubrule1781_pass3943, -1, 0
  rxsubrule1781_pass3943:
    rx1778_cstack = rx1778_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx1778_pos, $P11, rx1778_curclass, "$!pos"
    add $I11, rx1778_pos, 2
    gt $I11, rx1778_eos, rx1778_fail3935
    substr $S10, rx1778_tgt, rx1778_pos, 2
    ne $S10, ucs4:"!!", rx1778_fail3935
    add rx1778_pos, 2
    repr_bind_attr_int rx1778_cur, rx1778_curclass, "$!pos", rx1778_pos
    $P11 = rx1778_cur."O"("%conditional, :reducecheck<ternary>, :op<if>")
    repr_get_attr_int $I11, $P11, rx1778_curclass, "$!pos"
    lt $I11, 0, rx1778_fail3935
    nqp_rxmark rx1778_bstack, rxsubrule1782_pass3944, -1, 0
  rxsubrule1782_pass3944:
    rx1778_cstack = rx1778_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1778_pos, $P11, rx1778_curclass, "$!pos"
    rx1778_cur."!cursor_pass"(rx1778_pos, "infix:sym<?? !!>", 'backtrack'=>1)
    .return (rx1778_cur)
  rx1778_restart3934:
    repr_get_attr_obj rx1778_cstack, rx1778_cur, rx1778_curclass, "$!cstack"
  rx1778_fail3935:
    unless rx1778_bstack, rx1778_done3933
    pop $I19, rx1778_bstack
    if_null rx1778_cstack, rx1778_cstack_done3938
    unless rx1778_cstack, rx1778_cstack_done3938
    dec $I19
    set $P11, rx1778_cstack[$I19]
  rx1778_cstack_done3938:
    pop rx1778_rep, rx1778_bstack
    pop rx1778_pos, rx1778_bstack
    pop $I19, rx1778_bstack
    lt rx1778_pos, -1, rx1778_done3933
    lt rx1778_pos, 0, rx1778_fail3935
    eq $I19, 0, rx1778_fail3935
    nqp_islist $I20, rx1778_cstack
    unless $I20, rx1778_jump3936
    elements $I18, rx1778_bstack
    le $I18, 0, rx1778_cut3937
    dec $I18
    set $I18, rx1778_bstack[$I18]
  rx1778_cut3937:
    assign rx1778_cstack, $I18
  rx1778_jump3936:
    jump $I19
  rx1778_done3933:
    rx1778_cur."!cursor_fail"()
    .return (rx1778_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<=>" :subid("cuid_214_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1397
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1783_tgt
    .local int rx1783_pos
    .local int rx1783_off
    .local int rx1783_eos
    .local int rx1783_rep
    .local pmc rx1783_cur
    .local pmc rx1783_curclass
    .local pmc rx1783_bstack
    .local pmc rx1783_cstack
    (rx1783_cur, rx1783_tgt, rx1783_pos, rx1783_curclass, rx1783_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1783_cur
    length rx1783_eos, rx1783_tgt
    eq $I19, 1, rx1783_restart3947
    gt rx1783_pos, rx1783_eos, rx1783_fail3948
    repr_get_attr_int $I11, self, rx1783_curclass, "$!from"
    ne $I11, -1, rxscan1784_done3954
    goto rxscan1784_scan3953
  rxscan1784_loop3952:
    inc rx1783_pos
    gt rx1783_pos, rx1783_eos, rx1783_fail3948
    repr_bind_attr_int rx1783_cur, rx1783_curclass, "$!from", rx1783_pos
  rxscan1784_scan3953:
    nqp_rxmark rx1783_bstack, rxscan1784_loop3952, rx1783_pos, 0
  rxscan1784_done3954:
    nqp_rxmark rx1783_bstack, rxcap1785_fail3956, rx1783_pos, 0
    add $I11, rx1783_pos, 1
    gt $I11, rx1783_eos, rx1783_fail3948
    substr $S10, rx1783_tgt, rx1783_pos, 1
    ne $S10, ucs4:"=", rx1783_fail3948
    add rx1783_pos, 1
    nqp_rxpeek $I19, rx1783_bstack, rxcap1785_fail3956
    inc $I19
    set $I11, rx1783_bstack[$I19]
    repr_bind_attr_int rx1783_cur, rx1783_curclass, "$!pos", rx1783_pos
    $P11 = rx1783_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1783_pos)
    rx1783_cstack = rx1783_cur."!cursor_capture"($P11, "sym")
    goto rxcap1785_done3955
  rxcap1785_fail3956:
    goto rx1783_fail3948
  rxcap1785_done3955:
    repr_bind_attr_int rx1783_cur, rx1783_curclass, "$!pos", rx1783_pos
    $P11 = rx1783_cur."panic"("Assignment (\"=\") not supported in NQP, use \":=\" instead")
    repr_get_attr_int $I11, $P11, rx1783_curclass, "$!pos"
    lt $I11, 0, rx1783_fail3948
    repr_get_attr_int rx1783_pos, $P11, rx1783_curclass, "$!pos"
    rx1783_cur."!cursor_pass"(rx1783_pos, "infix:sym<=>", 'backtrack'=>1)
    .return (rx1783_cur)
  rx1783_restart3947:
    repr_get_attr_obj rx1783_cstack, rx1783_cur, rx1783_curclass, "$!cstack"
  rx1783_fail3948:
    unless rx1783_bstack, rx1783_done3946
    pop $I19, rx1783_bstack
    if_null rx1783_cstack, rx1783_cstack_done3951
    unless rx1783_cstack, rx1783_cstack_done3951
    dec $I19
    set $P11, rx1783_cstack[$I19]
  rx1783_cstack_done3951:
    pop rx1783_rep, rx1783_bstack
    pop rx1783_pos, rx1783_bstack
    pop $I19, rx1783_bstack
    lt rx1783_pos, -1, rx1783_done3946
    lt rx1783_pos, 0, rx1783_fail3948
    eq $I19, 0, rx1783_fail3948
    nqp_islist $I20, rx1783_cstack
    unless $I20, rx1783_jump3949
    elements $I18, rx1783_bstack
    le $I18, 0, rx1783_cut3950
    dec $I18
    set $I18, rx1783_bstack[$I18]
  rx1783_cut3950:
    assign rx1783_cstack, $I18
  rx1783_jump3949:
    jump $I19
  rx1783_done3946:
    rx1783_cur."!cursor_fail"()
    .return (rx1783_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<:=>" :subid("cuid_215_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1400
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1787_tgt
    .local int rx1787_pos
    .local int rx1787_off
    .local int rx1787_eos
    .local int rx1787_rep
    .local pmc rx1787_cur
    .local pmc rx1787_curclass
    .local pmc rx1787_bstack
    .local pmc rx1787_cstack
    (rx1787_cur, rx1787_tgt, rx1787_pos, rx1787_curclass, rx1787_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1787_cur
    length rx1787_eos, rx1787_tgt
    eq $I19, 1, rx1787_restart3960
    gt rx1787_pos, rx1787_eos, rx1787_fail3961
    repr_get_attr_int $I11, self, rx1787_curclass, "$!from"
    ne $I11, -1, rxscan1788_done3967
    goto rxscan1788_scan3966
  rxscan1788_loop3965:
    inc rx1787_pos
    gt rx1787_pos, rx1787_eos, rx1787_fail3961
    repr_bind_attr_int rx1787_cur, rx1787_curclass, "$!from", rx1787_pos
  rxscan1788_scan3966:
    nqp_rxmark rx1787_bstack, rxscan1788_loop3965, rx1787_pos, 0
  rxscan1788_done3967:
    nqp_rxmark rx1787_bstack, rxcap1789_fail3969, rx1787_pos, 0
    add $I11, rx1787_pos, 2
    gt $I11, rx1787_eos, rx1787_fail3961
    substr $S10, rx1787_tgt, rx1787_pos, 2
    ne $S10, ucs4:":=", rx1787_fail3961
    add rx1787_pos, 2
    nqp_rxpeek $I19, rx1787_bstack, rxcap1789_fail3969
    inc $I19
    set $I11, rx1787_bstack[$I19]
    repr_bind_attr_int rx1787_cur, rx1787_curclass, "$!pos", rx1787_pos
    $P11 = rx1787_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1787_pos)
    rx1787_cstack = rx1787_cur."!cursor_capture"($P11, "sym")
    goto rxcap1789_done3968
  rxcap1789_fail3969:
    goto rx1787_fail3961
  rxcap1789_done3968:
    repr_bind_attr_int rx1787_cur, rx1787_curclass, "$!pos", rx1787_pos
    $P11 = rx1787_cur."O"("%assignment, :op<bind>")
    repr_get_attr_int $I11, $P11, rx1787_curclass, "$!pos"
    lt $I11, 0, rx1787_fail3961
    nqp_rxmark rx1787_bstack, rxsubrule1790_pass3970, -1, 0
  rxsubrule1790_pass3970:
    rx1787_cstack = rx1787_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1787_pos, $P11, rx1787_curclass, "$!pos"
    rx1787_cur."!cursor_pass"(rx1787_pos, "infix:sym<:=>", 'backtrack'=>1)
    .return (rx1787_cur)
  rx1787_restart3960:
    repr_get_attr_obj rx1787_cstack, rx1787_cur, rx1787_curclass, "$!cstack"
  rx1787_fail3961:
    unless rx1787_bstack, rx1787_done3959
    pop $I19, rx1787_bstack
    if_null rx1787_cstack, rx1787_cstack_done3964
    unless rx1787_cstack, rx1787_cstack_done3964
    dec $I19
    set $P11, rx1787_cstack[$I19]
  rx1787_cstack_done3964:
    pop rx1787_rep, rx1787_bstack
    pop rx1787_pos, rx1787_bstack
    pop $I19, rx1787_bstack
    lt rx1787_pos, -1, rx1787_done3959
    lt rx1787_pos, 0, rx1787_fail3961
    eq $I19, 0, rx1787_fail3961
    nqp_islist $I20, rx1787_cstack
    unless $I20, rx1787_jump3962
    elements $I18, rx1787_bstack
    le $I18, 0, rx1787_cut3963
    dec $I18
    set $I18, rx1787_bstack[$I18]
  rx1787_cut3963:
    assign rx1787_cstack, $I18
  rx1787_jump3962:
    jump $I19
  rx1787_done3959:
    rx1787_cur."!cursor_fail"()
    .return (rx1787_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<::=>" :subid("cuid_216_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1401
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1791_tgt
    .local int rx1791_pos
    .local int rx1791_off
    .local int rx1791_eos
    .local int rx1791_rep
    .local pmc rx1791_cur
    .local pmc rx1791_curclass
    .local pmc rx1791_bstack
    .local pmc rx1791_cstack
    (rx1791_cur, rx1791_tgt, rx1791_pos, rx1791_curclass, rx1791_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1791_cur
    length rx1791_eos, rx1791_tgt
    eq $I19, 1, rx1791_restart3973
    gt rx1791_pos, rx1791_eos, rx1791_fail3974
    repr_get_attr_int $I11, self, rx1791_curclass, "$!from"
    ne $I11, -1, rxscan1792_done3980
    goto rxscan1792_scan3979
  rxscan1792_loop3978:
    inc rx1791_pos
    gt rx1791_pos, rx1791_eos, rx1791_fail3974
    repr_bind_attr_int rx1791_cur, rx1791_curclass, "$!from", rx1791_pos
  rxscan1792_scan3979:
    nqp_rxmark rx1791_bstack, rxscan1792_loop3978, rx1791_pos, 0
  rxscan1792_done3980:
    nqp_rxmark rx1791_bstack, rxcap1793_fail3982, rx1791_pos, 0
    add $I11, rx1791_pos, 3
    gt $I11, rx1791_eos, rx1791_fail3974
    substr $S10, rx1791_tgt, rx1791_pos, 3
    ne $S10, ucs4:"::=", rx1791_fail3974
    add rx1791_pos, 3
    nqp_rxpeek $I19, rx1791_bstack, rxcap1793_fail3982
    inc $I19
    set $I11, rx1791_bstack[$I19]
    repr_bind_attr_int rx1791_cur, rx1791_curclass, "$!pos", rx1791_pos
    $P11 = rx1791_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1791_pos)
    rx1791_cstack = rx1791_cur."!cursor_capture"($P11, "sym")
    goto rxcap1793_done3981
  rxcap1793_fail3982:
    goto rx1791_fail3974
  rxcap1793_done3981:
    repr_bind_attr_int rx1791_cur, rx1791_curclass, "$!pos", rx1791_pos
    $P11 = rx1791_cur."O"("%assignment, :op<bind>")
    repr_get_attr_int $I11, $P11, rx1791_curclass, "$!pos"
    lt $I11, 0, rx1791_fail3974
    nqp_rxmark rx1791_bstack, rxsubrule1794_pass3983, -1, 0
  rxsubrule1794_pass3983:
    rx1791_cstack = rx1791_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1791_pos, $P11, rx1791_curclass, "$!pos"
    rx1791_cur."!cursor_pass"(rx1791_pos, "infix:sym<::=>", 'backtrack'=>1)
    .return (rx1791_cur)
  rx1791_restart3973:
    repr_get_attr_obj rx1791_cstack, rx1791_cur, rx1791_curclass, "$!cstack"
  rx1791_fail3974:
    unless rx1791_bstack, rx1791_done3972
    pop $I19, rx1791_bstack
    if_null rx1791_cstack, rx1791_cstack_done3977
    unless rx1791_cstack, rx1791_cstack_done3977
    dec $I19
    set $P11, rx1791_cstack[$I19]
  rx1791_cstack_done3977:
    pop rx1791_rep, rx1791_bstack
    pop rx1791_pos, rx1791_bstack
    pop $I19, rx1791_bstack
    lt rx1791_pos, -1, rx1791_done3972
    lt rx1791_pos, 0, rx1791_fail3974
    eq $I19, 0, rx1791_fail3974
    nqp_islist $I20, rx1791_cstack
    unless $I20, rx1791_jump3975
    elements $I18, rx1791_bstack
    le $I18, 0, rx1791_cut3976
    dec $I18
    set $I18, rx1791_bstack[$I18]
  rx1791_cut3976:
    assign rx1791_cstack, $I18
  rx1791_jump3975:
    jump $I19
  rx1791_done3972:
    rx1791_cur."!cursor_fail"()
    .return (rx1791_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<,>" :subid("cuid_217_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1403
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1795_tgt
    .local int rx1795_pos
    .local int rx1795_off
    .local int rx1795_eos
    .local int rx1795_rep
    .local pmc rx1795_cur
    .local pmc rx1795_curclass
    .local pmc rx1795_bstack
    .local pmc rx1795_cstack
    (rx1795_cur, rx1795_tgt, rx1795_pos, rx1795_curclass, rx1795_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1795_cur
    length rx1795_eos, rx1795_tgt
    eq $I19, 1, rx1795_restart3986
    gt rx1795_pos, rx1795_eos, rx1795_fail3987
    repr_get_attr_int $I11, self, rx1795_curclass, "$!from"
    ne $I11, -1, rxscan1796_done3993
    goto rxscan1796_scan3992
  rxscan1796_loop3991:
    inc rx1795_pos
    gt rx1795_pos, rx1795_eos, rx1795_fail3987
    repr_bind_attr_int rx1795_cur, rx1795_curclass, "$!from", rx1795_pos
  rxscan1796_scan3992:
    nqp_rxmark rx1795_bstack, rxscan1796_loop3991, rx1795_pos, 0
  rxscan1796_done3993:
    nqp_rxmark rx1795_bstack, rxcap1797_fail3995, rx1795_pos, 0
    add $I11, rx1795_pos, 1
    gt $I11, rx1795_eos, rx1795_fail3987
    substr $S10, rx1795_tgt, rx1795_pos, 1
    ne $S10, ucs4:",", rx1795_fail3987
    add rx1795_pos, 1
    nqp_rxpeek $I19, rx1795_bstack, rxcap1797_fail3995
    inc $I19
    set $I11, rx1795_bstack[$I19]
    repr_bind_attr_int rx1795_cur, rx1795_curclass, "$!pos", rx1795_pos
    $P11 = rx1795_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1795_pos)
    rx1795_cstack = rx1795_cur."!cursor_capture"($P11, "sym")
    goto rxcap1797_done3994
  rxcap1797_fail3995:
    goto rx1795_fail3987
  rxcap1797_done3994:
    repr_bind_attr_int rx1795_cur, rx1795_curclass, "$!pos", rx1795_pos
    $P11 = rx1795_cur."O"("%comma, :op<list>")
    repr_get_attr_int $I11, $P11, rx1795_curclass, "$!pos"
    lt $I11, 0, rx1795_fail3987
    nqp_rxmark rx1795_bstack, rxsubrule1798_pass3996, -1, 0
  rxsubrule1798_pass3996:
    rx1795_cstack = rx1795_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1795_pos, $P11, rx1795_curclass, "$!pos"
    rx1795_cur."!cursor_pass"(rx1795_pos, "infix:sym<,>", 'backtrack'=>1)
    .return (rx1795_cur)
  rx1795_restart3986:
    repr_get_attr_obj rx1795_cstack, rx1795_cur, rx1795_curclass, "$!cstack"
  rx1795_fail3987:
    unless rx1795_bstack, rx1795_done3985
    pop $I19, rx1795_bstack
    if_null rx1795_cstack, rx1795_cstack_done3990
    unless rx1795_cstack, rx1795_cstack_done3990
    dec $I19
    set $P11, rx1795_cstack[$I19]
  rx1795_cstack_done3990:
    pop rx1795_rep, rx1795_bstack
    pop rx1795_pos, rx1795_bstack
    pop $I19, rx1795_bstack
    lt rx1795_pos, -1, rx1795_done3985
    lt rx1795_pos, 0, rx1795_fail3987
    eq $I19, 0, rx1795_fail3987
    nqp_islist $I20, rx1795_cstack
    unless $I20, rx1795_jump3988
    elements $I18, rx1795_bstack
    le $I18, 0, rx1795_cut3989
    dec $I18
    set $I18, rx1795_bstack[$I18]
  rx1795_cut3989:
    assign rx1795_cstack, $I18
  rx1795_jump3988:
    jump $I19
  rx1795_done3985:
    rx1795_cur."!cursor_fail"()
    .return (rx1795_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<return>" :subid("cuid_218_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1405
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_410_1360432459.413' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1799_tgt
    .local int rx1799_pos
    .local int rx1799_off
    .local int rx1799_eos
    .local int rx1799_rep
    .local pmc rx1799_cur
    .local pmc rx1799_curclass
    .local pmc rx1799_bstack
    .local pmc rx1799_cstack
    (rx1799_cur, rx1799_tgt, rx1799_pos, rx1799_curclass, rx1799_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1799_cur
    length rx1799_eos, rx1799_tgt
    eq $I19, 1, rx1799_restart3999
    gt rx1799_pos, rx1799_eos, rx1799_fail4000
    repr_get_attr_int $I11, self, rx1799_curclass, "$!from"
    ne $I11, -1, rxscan1800_done4006
    goto rxscan1800_scan4005
  rxscan1800_loop4004:
    inc rx1799_pos
    gt rx1799_pos, rx1799_eos, rx1799_fail4000
    repr_bind_attr_int rx1799_cur, rx1799_curclass, "$!from", rx1799_pos
  rxscan1800_scan4005:
    nqp_rxmark rx1799_bstack, rxscan1800_loop4004, rx1799_pos, 0
  rxscan1800_done4006:
    nqp_rxmark rx1799_bstack, rxcap1801_fail4008, rx1799_pos, 0
    add $I11, rx1799_pos, 6
    gt $I11, rx1799_eos, rx1799_fail4000
    substr $S10, rx1799_tgt, rx1799_pos, 6
    ne $S10, ucs4:"return", rx1799_fail4000
    add rx1799_pos, 6
    nqp_rxpeek $I19, rx1799_bstack, rxcap1801_fail4008
    inc $I19
    set $I11, rx1799_bstack[$I19]
    repr_bind_attr_int rx1799_cur, rx1799_curclass, "$!pos", rx1799_pos
    $P11 = rx1799_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1799_pos)
    rx1799_cstack = rx1799_cur."!cursor_capture"($P11, "sym")
    goto rxcap1801_done4007
  rxcap1801_fail4008:
    goto rx1799_fail4000
  rxcap1801_done4007:
    ge rx1799_pos, rx1799_eos, rx1799_fail4000
    is_cclass $I11, .CCLASS_WHITESPACE, rx1799_tgt, rx1799_pos
    unless $I11, rx1799_fail4000
    add rx1799_pos, 1
    repr_bind_attr_int rx1799_cur, rx1799_curclass, "$!pos", rx1799_pos
    $P11 = rx1799_cur."O"("%list_prefix")
    repr_get_attr_int $I11, $P11, rx1799_curclass, "$!pos"
    lt $I11, 0, rx1799_fail4000
    nqp_rxmark rx1799_bstack, rxsubrule1802_pass4009, -1, 0
  rxsubrule1802_pass4009:
    rx1799_cstack = rx1799_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1799_pos, $P11, rx1799_curclass, "$!pos"
    repr_bind_attr_int rx1799_cur, rx1799_curclass, "$!pos", rx1799_pos
    store_lex unicode:"$\x{a2}", rx1799_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_410_1360432459.413' 
    capture_lex $P5002
    $P5003 = $P5002()
    rx1799_cur."!cursor_pass"(rx1799_pos, "prefix:sym<return>", 'backtrack'=>1)
    .return (rx1799_cur)
  rx1799_restart3999:
    repr_get_attr_obj rx1799_cstack, rx1799_cur, rx1799_curclass, "$!cstack"
  rx1799_fail4000:
    unless rx1799_bstack, rx1799_done3998
    pop $I19, rx1799_bstack
    if_null rx1799_cstack, rx1799_cstack_done4003
    unless rx1799_cstack, rx1799_cstack_done4003
    dec $I19
    set $P11, rx1799_cstack[$I19]
  rx1799_cstack_done4003:
    pop rx1799_rep, rx1799_bstack
    pop rx1799_pos, rx1799_bstack
    pop $I19, rx1799_bstack
    lt rx1799_pos, -1, rx1799_done3998
    lt rx1799_pos, 0, rx1799_fail4000
    eq $I19, 0, rx1799_fail4000
    nqp_islist $I20, rx1799_cstack
    unless $I20, rx1799_jump4001
    elements $I18, rx1799_bstack
    le $I18, 0, rx1799_cut4002
    dec $I18
    set $I18, rx1799_bstack[$I18]
  rx1799_cut4002:
    assign rx1799_cstack, $I18
  rx1799_jump4001:
    jump $I19
  rx1799_done3998:
    rx1799_cur."!cursor_fail"()
    .return (rx1799_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_410_1360432459.413") :anon :lex :outer("cuid_218_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1405

    box $P5001, 1
    store_dynamic_lex "$*RETURN_USED", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<make>" :subid("cuid_219_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1406
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1803_tgt
    .local int rx1803_pos
    .local int rx1803_off
    .local int rx1803_eos
    .local int rx1803_rep
    .local pmc rx1803_cur
    .local pmc rx1803_curclass
    .local pmc rx1803_bstack
    .local pmc rx1803_cstack
    (rx1803_cur, rx1803_tgt, rx1803_pos, rx1803_curclass, rx1803_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1803_cur
    length rx1803_eos, rx1803_tgt
    eq $I19, 1, rx1803_restart4012
    gt rx1803_pos, rx1803_eos, rx1803_fail4013
    repr_get_attr_int $I11, self, rx1803_curclass, "$!from"
    ne $I11, -1, rxscan1804_done4019
    goto rxscan1804_scan4018
  rxscan1804_loop4017:
    inc rx1803_pos
    gt rx1803_pos, rx1803_eos, rx1803_fail4013
    repr_bind_attr_int rx1803_cur, rx1803_curclass, "$!from", rx1803_pos
  rxscan1804_scan4018:
    nqp_rxmark rx1803_bstack, rxscan1804_loop4017, rx1803_pos, 0
  rxscan1804_done4019:
    nqp_rxmark rx1803_bstack, rxcap1805_fail4021, rx1803_pos, 0
    add $I11, rx1803_pos, 4
    gt $I11, rx1803_eos, rx1803_fail4013
    substr $S10, rx1803_tgt, rx1803_pos, 4
    ne $S10, ucs4:"make", rx1803_fail4013
    add rx1803_pos, 4
    nqp_rxpeek $I19, rx1803_bstack, rxcap1805_fail4021
    inc $I19
    set $I11, rx1803_bstack[$I19]
    repr_bind_attr_int rx1803_cur, rx1803_curclass, "$!pos", rx1803_pos
    $P11 = rx1803_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1803_pos)
    rx1803_cstack = rx1803_cur."!cursor_capture"($P11, "sym")
    goto rxcap1805_done4020
  rxcap1805_fail4021:
    goto rx1803_fail4013
  rxcap1805_done4020:
    ge rx1803_pos, rx1803_eos, rx1803_fail4013
    is_cclass $I11, .CCLASS_WHITESPACE, rx1803_tgt, rx1803_pos
    unless $I11, rx1803_fail4013
    add rx1803_pos, 1
    repr_bind_attr_int rx1803_cur, rx1803_curclass, "$!pos", rx1803_pos
    $P11 = rx1803_cur."O"("%list_prefix")
    repr_get_attr_int $I11, $P11, rx1803_curclass, "$!pos"
    lt $I11, 0, rx1803_fail4013
    nqp_rxmark rx1803_bstack, rxsubrule1806_pass4022, -1, 0
  rxsubrule1806_pass4022:
    rx1803_cstack = rx1803_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1803_pos, $P11, rx1803_curclass, "$!pos"
    rx1803_cur."!cursor_pass"(rx1803_pos, "prefix:sym<make>", 'backtrack'=>1)
    .return (rx1803_cur)
  rx1803_restart4012:
    repr_get_attr_obj rx1803_cstack, rx1803_cur, rx1803_curclass, "$!cstack"
  rx1803_fail4013:
    unless rx1803_bstack, rx1803_done4011
    pop $I19, rx1803_bstack
    if_null rx1803_cstack, rx1803_cstack_done4016
    unless rx1803_cstack, rx1803_cstack_done4016
    dec $I19
    set $P11, rx1803_cstack[$I19]
  rx1803_cstack_done4016:
    pop rx1803_rep, rx1803_bstack
    pop rx1803_pos, rx1803_bstack
    pop $I19, rx1803_bstack
    lt rx1803_pos, -1, rx1803_done4011
    lt rx1803_pos, 0, rx1803_fail4013
    eq $I19, 0, rx1803_fail4013
    nqp_islist $I20, rx1803_cstack
    unless $I20, rx1803_jump4014
    elements $I18, rx1803_bstack
    le $I18, 0, rx1803_cut4015
    dec $I18
    set $I18, rx1803_bstack[$I18]
  rx1803_cut4015:
    assign rx1803_cstack, $I18
  rx1803_jump4014:
    jump $I19
  rx1803_done4011:
    rx1803_cur."!cursor_fail"()
    .return (rx1803_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<last>" :subid("cuid_220_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1407
    .param pmc _lex_param_0 
    .const 'Sub' $P5005 = 'cuid_221_1360432459.413' 
    capture_lex $P5005 
    .const 'Sub' $P5005 = 'cuid_411_1360432459.413' 
    capture_lex $P5005 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1807_tgt
    .local int rx1807_pos
    .local int rx1807_off
    .local int rx1807_eos
    .local int rx1807_rep
    .local pmc rx1807_cur
    .local pmc rx1807_curclass
    .local pmc rx1807_bstack
    .local pmc rx1807_cstack
    (rx1807_cur, rx1807_tgt, rx1807_pos, rx1807_curclass, rx1807_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1807_cur
    length rx1807_eos, rx1807_tgt
    eq $I19, 1, rx1807_restart4025
    gt rx1807_pos, rx1807_eos, rx1807_fail4026
    repr_get_attr_int $I11, self, rx1807_curclass, "$!from"
    ne $I11, -1, rxscan1808_done4032
    goto rxscan1808_scan4031
  rxscan1808_loop4030:
    inc rx1807_pos
    gt rx1807_pos, rx1807_eos, rx1807_fail4026
    repr_bind_attr_int rx1807_cur, rx1807_curclass, "$!from", rx1807_pos
  rxscan1808_scan4031:
    nqp_rxmark rx1807_bstack, rxscan1808_loop4030, rx1807_pos, 0
  rxscan1808_done4032:
    nqp_rxmark rx1807_bstack, rxcap1809_fail4034, rx1807_pos, 0
    add $I11, rx1807_pos, 4
    gt $I11, rx1807_eos, rx1807_fail4026
    substr $S10, rx1807_tgt, rx1807_pos, 4
    ne $S10, ucs4:"last", rx1807_fail4026
    add rx1807_pos, 4
    nqp_rxpeek $I19, rx1807_bstack, rxcap1809_fail4034
    inc $I19
    set $I11, rx1807_bstack[$I19]
    repr_bind_attr_int rx1807_cur, rx1807_curclass, "$!pos", rx1807_pos
    $P11 = rx1807_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1807_pos)
    rx1807_cstack = rx1807_cur."!cursor_capture"($P11, "sym")
    goto rxcap1809_done4033
  rxcap1809_fail4034:
    goto rx1807_fail4026
  rxcap1809_done4033:
    .const 'Sub' $P5001 = 'cuid_221_1360432459.413' 
    capture_lex $P5001
    repr_bind_attr_int rx1807_cur, rx1807_curclass, "$!pos", rx1807_pos
    $P11 = rx1807_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1807_curclass, "$!pos"
    ge $I11, 0, rx1807_fail4026
    repr_bind_attr_int rx1807_cur, rx1807_curclass, "$!pos", rx1807_pos
    store_lex unicode:"$\x{a2}", rx1807_cur
    $P5002 = $P101."MATCH"()
    set $P102, $P5002
    .const 'Sub' $P5003 = 'cuid_411_1360432459.413' 
    capture_lex $P5003
    $P5004 = $P5003()
    rx1807_cur."!cursor_pass"(rx1807_pos, "term:sym<last>", 'backtrack'=>1)
    .return (rx1807_cur)
  rx1807_restart4025:
    repr_get_attr_obj rx1807_cstack, rx1807_cur, rx1807_curclass, "$!cstack"
  rx1807_fail4026:
    unless rx1807_bstack, rx1807_done4024
    pop $I19, rx1807_bstack
    if_null rx1807_cstack, rx1807_cstack_done4029
    unless rx1807_cstack, rx1807_cstack_done4029
    dec $I19
    set $P11, rx1807_cstack[$I19]
  rx1807_cstack_done4029:
    pop rx1807_rep, rx1807_bstack
    pop rx1807_pos, rx1807_bstack
    pop $I19, rx1807_bstack
    lt rx1807_pos, -1, rx1807_done4024
    lt rx1807_pos, 0, rx1807_fail4026
    eq $I19, 0, rx1807_fail4026
    nqp_islist $I20, rx1807_cstack
    unless $I20, rx1807_jump4027
    elements $I18, rx1807_bstack
    le $I18, 0, rx1807_cut4028
    dec $I18
    set $I18, rx1807_bstack[$I18]
  rx1807_cut4028:
    assign rx1807_cstack, $I18
  rx1807_jump4027:
    jump $I19
  rx1807_done4024:
    rx1807_cur."!cursor_fail"()
    .return (rx1807_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_221_1360432459.413") :anon :lex :outer("cuid_220_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local string rx1810_tgt
    .local int rx1810_pos
    .local int rx1810_off
    .local int rx1810_eos
    .local int rx1810_rep
    .local pmc rx1810_cur
    .local pmc rx1810_curclass
    .local pmc rx1810_bstack
    .local pmc rx1810_cstack
    (rx1810_cur, rx1810_tgt, rx1810_pos, rx1810_curclass, rx1810_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1810_cur
    length rx1810_eos, rx1810_tgt
    eq $I19, 1, rx1810_restart4037
    gt rx1810_pos, rx1810_eos, rx1810_fail4038
    repr_get_attr_int $I11, self, rx1810_curclass, "$!from"
    ne $I11, -1, rxscan1811_done4044
    goto rxscan1811_scan4043
  rxscan1811_loop4042:
    inc rx1810_pos
    gt rx1810_pos, rx1810_eos, rx1810_fail4038
    repr_bind_attr_int rx1810_cur, rx1810_curclass, "$!from", rx1810_pos
  rxscan1811_scan4043:
    nqp_rxmark rx1810_bstack, rxscan1811_loop4042, rx1810_pos, 0
  rxscan1811_done4044:
    repr_bind_attr_int rx1810_cur, rx1810_curclass, "$!pos", rx1810_pos
    $P11 = rx1810_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx1810_curclass, "$!pos"
    lt $I11, 0, rx1810_fail4038
    nqp_rxmark rx1810_bstack, rxsubrule1812_pass4045, -1, 0
  rxsubrule1812_pass4045:
    rx1810_cstack = rx1810_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx1810_pos, $P11, rx1810_curclass, "$!pos"
    rx1810_cur."!cursor_pass"(rx1810_pos, 'backtrack'=>1)
    .return (rx1810_cur)
  rx1810_restart4037:
    repr_get_attr_obj rx1810_cstack, rx1810_cur, rx1810_curclass, "$!cstack"
  rx1810_fail4038:
    unless rx1810_bstack, rx1810_done4036
    pop $I19, rx1810_bstack
    if_null rx1810_cstack, rx1810_cstack_done4041
    unless rx1810_cstack, rx1810_cstack_done4041
    dec $I19
    set $P11, rx1810_cstack[$I19]
  rx1810_cstack_done4041:
    pop rx1810_rep, rx1810_bstack
    pop rx1810_pos, rx1810_bstack
    pop $I19, rx1810_bstack
    lt rx1810_pos, -1, rx1810_done4036
    lt rx1810_pos, 0, rx1810_fail4038
    eq $I19, 0, rx1810_fail4038
    nqp_islist $I20, rx1810_cstack
    unless $I20, rx1810_jump4039
    elements $I18, rx1810_bstack
    le $I18, 0, rx1810_cut4040
    dec $I18
    set $I18, rx1810_bstack[$I18]
  rx1810_cut4040:
    assign rx1810_cstack, $I18
  rx1810_jump4039:
    jump $I19
  rx1810_done4036:
    rx1810_cur."!cursor_fail"()
    .return (rx1810_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_411_1360432459.413") :anon :lex :outer("cuid_220_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1407

    box $P5001, 1
    store_dynamic_lex "$*CONTROL_USED", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<next>" :subid("cuid_222_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1408
    .param pmc _lex_param_0 
    .const 'Sub' $P5005 = 'cuid_223_1360432459.413' 
    capture_lex $P5005 
    .const 'Sub' $P5005 = 'cuid_412_1360432459.413' 
    capture_lex $P5005 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1813_tgt
    .local int rx1813_pos
    .local int rx1813_off
    .local int rx1813_eos
    .local int rx1813_rep
    .local pmc rx1813_cur
    .local pmc rx1813_curclass
    .local pmc rx1813_bstack
    .local pmc rx1813_cstack
    (rx1813_cur, rx1813_tgt, rx1813_pos, rx1813_curclass, rx1813_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1813_cur
    length rx1813_eos, rx1813_tgt
    eq $I19, 1, rx1813_restart4048
    gt rx1813_pos, rx1813_eos, rx1813_fail4049
    repr_get_attr_int $I11, self, rx1813_curclass, "$!from"
    ne $I11, -1, rxscan1814_done4055
    goto rxscan1814_scan4054
  rxscan1814_loop4053:
    inc rx1813_pos
    gt rx1813_pos, rx1813_eos, rx1813_fail4049
    repr_bind_attr_int rx1813_cur, rx1813_curclass, "$!from", rx1813_pos
  rxscan1814_scan4054:
    nqp_rxmark rx1813_bstack, rxscan1814_loop4053, rx1813_pos, 0
  rxscan1814_done4055:
    nqp_rxmark rx1813_bstack, rxcap1815_fail4057, rx1813_pos, 0
    add $I11, rx1813_pos, 4
    gt $I11, rx1813_eos, rx1813_fail4049
    substr $S10, rx1813_tgt, rx1813_pos, 4
    ne $S10, ucs4:"next", rx1813_fail4049
    add rx1813_pos, 4
    nqp_rxpeek $I19, rx1813_bstack, rxcap1815_fail4057
    inc $I19
    set $I11, rx1813_bstack[$I19]
    repr_bind_attr_int rx1813_cur, rx1813_curclass, "$!pos", rx1813_pos
    $P11 = rx1813_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1813_pos)
    rx1813_cstack = rx1813_cur."!cursor_capture"($P11, "sym")
    goto rxcap1815_done4056
  rxcap1815_fail4057:
    goto rx1813_fail4049
  rxcap1815_done4056:
    .const 'Sub' $P5001 = 'cuid_223_1360432459.413' 
    capture_lex $P5001
    repr_bind_attr_int rx1813_cur, rx1813_curclass, "$!pos", rx1813_pos
    $P11 = rx1813_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1813_curclass, "$!pos"
    ge $I11, 0, rx1813_fail4049
    repr_bind_attr_int rx1813_cur, rx1813_curclass, "$!pos", rx1813_pos
    store_lex unicode:"$\x{a2}", rx1813_cur
    $P5002 = $P101."MATCH"()
    set $P102, $P5002
    .const 'Sub' $P5003 = 'cuid_412_1360432459.413' 
    capture_lex $P5003
    $P5004 = $P5003()
    rx1813_cur."!cursor_pass"(rx1813_pos, "term:sym<next>", 'backtrack'=>1)
    .return (rx1813_cur)
  rx1813_restart4048:
    repr_get_attr_obj rx1813_cstack, rx1813_cur, rx1813_curclass, "$!cstack"
  rx1813_fail4049:
    unless rx1813_bstack, rx1813_done4047
    pop $I19, rx1813_bstack
    if_null rx1813_cstack, rx1813_cstack_done4052
    unless rx1813_cstack, rx1813_cstack_done4052
    dec $I19
    set $P11, rx1813_cstack[$I19]
  rx1813_cstack_done4052:
    pop rx1813_rep, rx1813_bstack
    pop rx1813_pos, rx1813_bstack
    pop $I19, rx1813_bstack
    lt rx1813_pos, -1, rx1813_done4047
    lt rx1813_pos, 0, rx1813_fail4049
    eq $I19, 0, rx1813_fail4049
    nqp_islist $I20, rx1813_cstack
    unless $I20, rx1813_jump4050
    elements $I18, rx1813_bstack
    le $I18, 0, rx1813_cut4051
    dec $I18
    set $I18, rx1813_bstack[$I18]
  rx1813_cut4051:
    assign rx1813_cstack, $I18
  rx1813_jump4050:
    jump $I19
  rx1813_done4047:
    rx1813_cur."!cursor_fail"()
    .return (rx1813_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_223_1360432459.413") :anon :lex :outer("cuid_222_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local string rx1816_tgt
    .local int rx1816_pos
    .local int rx1816_off
    .local int rx1816_eos
    .local int rx1816_rep
    .local pmc rx1816_cur
    .local pmc rx1816_curclass
    .local pmc rx1816_bstack
    .local pmc rx1816_cstack
    (rx1816_cur, rx1816_tgt, rx1816_pos, rx1816_curclass, rx1816_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1816_cur
    length rx1816_eos, rx1816_tgt
    eq $I19, 1, rx1816_restart4060
    gt rx1816_pos, rx1816_eos, rx1816_fail4061
    repr_get_attr_int $I11, self, rx1816_curclass, "$!from"
    ne $I11, -1, rxscan1817_done4067
    goto rxscan1817_scan4066
  rxscan1817_loop4065:
    inc rx1816_pos
    gt rx1816_pos, rx1816_eos, rx1816_fail4061
    repr_bind_attr_int rx1816_cur, rx1816_curclass, "$!from", rx1816_pos
  rxscan1817_scan4066:
    nqp_rxmark rx1816_bstack, rxscan1817_loop4065, rx1816_pos, 0
  rxscan1817_done4067:
    repr_bind_attr_int rx1816_cur, rx1816_curclass, "$!pos", rx1816_pos
    $P11 = rx1816_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx1816_curclass, "$!pos"
    lt $I11, 0, rx1816_fail4061
    nqp_rxmark rx1816_bstack, rxsubrule1818_pass4068, -1, 0
  rxsubrule1818_pass4068:
    rx1816_cstack = rx1816_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx1816_pos, $P11, rx1816_curclass, "$!pos"
    rx1816_cur."!cursor_pass"(rx1816_pos, 'backtrack'=>1)
    .return (rx1816_cur)
  rx1816_restart4060:
    repr_get_attr_obj rx1816_cstack, rx1816_cur, rx1816_curclass, "$!cstack"
  rx1816_fail4061:
    unless rx1816_bstack, rx1816_done4059
    pop $I19, rx1816_bstack
    if_null rx1816_cstack, rx1816_cstack_done4064
    unless rx1816_cstack, rx1816_cstack_done4064
    dec $I19
    set $P11, rx1816_cstack[$I19]
  rx1816_cstack_done4064:
    pop rx1816_rep, rx1816_bstack
    pop rx1816_pos, rx1816_bstack
    pop $I19, rx1816_bstack
    lt rx1816_pos, -1, rx1816_done4059
    lt rx1816_pos, 0, rx1816_fail4061
    eq $I19, 0, rx1816_fail4061
    nqp_islist $I20, rx1816_cstack
    unless $I20, rx1816_jump4062
    elements $I18, rx1816_bstack
    le $I18, 0, rx1816_cut4063
    dec $I18
    set $I18, rx1816_bstack[$I18]
  rx1816_cut4063:
    assign rx1816_cstack, $I18
  rx1816_jump4062:
    jump $I19
  rx1816_done4059:
    rx1816_cur."!cursor_fail"()
    .return (rx1816_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_412_1360432459.413") :anon :lex :outer("cuid_222_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1408

    box $P5001, 1
    store_dynamic_lex "$*CONTROL_USED", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<redo>" :subid("cuid_224_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1409
    .param pmc _lex_param_0 
    .const 'Sub' $P5005 = 'cuid_225_1360432459.413' 
    capture_lex $P5005 
    .const 'Sub' $P5005 = 'cuid_413_1360432459.413' 
    capture_lex $P5005 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1819_tgt
    .local int rx1819_pos
    .local int rx1819_off
    .local int rx1819_eos
    .local int rx1819_rep
    .local pmc rx1819_cur
    .local pmc rx1819_curclass
    .local pmc rx1819_bstack
    .local pmc rx1819_cstack
    (rx1819_cur, rx1819_tgt, rx1819_pos, rx1819_curclass, rx1819_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1819_cur
    length rx1819_eos, rx1819_tgt
    eq $I19, 1, rx1819_restart4071
    gt rx1819_pos, rx1819_eos, rx1819_fail4072
    repr_get_attr_int $I11, self, rx1819_curclass, "$!from"
    ne $I11, -1, rxscan1820_done4078
    goto rxscan1820_scan4077
  rxscan1820_loop4076:
    inc rx1819_pos
    gt rx1819_pos, rx1819_eos, rx1819_fail4072
    repr_bind_attr_int rx1819_cur, rx1819_curclass, "$!from", rx1819_pos
  rxscan1820_scan4077:
    nqp_rxmark rx1819_bstack, rxscan1820_loop4076, rx1819_pos, 0
  rxscan1820_done4078:
    nqp_rxmark rx1819_bstack, rxcap1821_fail4080, rx1819_pos, 0
    add $I11, rx1819_pos, 4
    gt $I11, rx1819_eos, rx1819_fail4072
    substr $S10, rx1819_tgt, rx1819_pos, 4
    ne $S10, ucs4:"redo", rx1819_fail4072
    add rx1819_pos, 4
    nqp_rxpeek $I19, rx1819_bstack, rxcap1821_fail4080
    inc $I19
    set $I11, rx1819_bstack[$I19]
    repr_bind_attr_int rx1819_cur, rx1819_curclass, "$!pos", rx1819_pos
    $P11 = rx1819_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1819_pos)
    rx1819_cstack = rx1819_cur."!cursor_capture"($P11, "sym")
    goto rxcap1821_done4079
  rxcap1821_fail4080:
    goto rx1819_fail4072
  rxcap1821_done4079:
    .const 'Sub' $P5001 = 'cuid_225_1360432459.413' 
    capture_lex $P5001
    repr_bind_attr_int rx1819_cur, rx1819_curclass, "$!pos", rx1819_pos
    $P11 = rx1819_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1819_curclass, "$!pos"
    ge $I11, 0, rx1819_fail4072
    repr_bind_attr_int rx1819_cur, rx1819_curclass, "$!pos", rx1819_pos
    store_lex unicode:"$\x{a2}", rx1819_cur
    $P5002 = $P101."MATCH"()
    set $P102, $P5002
    .const 'Sub' $P5003 = 'cuid_413_1360432459.413' 
    capture_lex $P5003
    $P5004 = $P5003()
    rx1819_cur."!cursor_pass"(rx1819_pos, "term:sym<redo>", 'backtrack'=>1)
    .return (rx1819_cur)
  rx1819_restart4071:
    repr_get_attr_obj rx1819_cstack, rx1819_cur, rx1819_curclass, "$!cstack"
  rx1819_fail4072:
    unless rx1819_bstack, rx1819_done4070
    pop $I19, rx1819_bstack
    if_null rx1819_cstack, rx1819_cstack_done4075
    unless rx1819_cstack, rx1819_cstack_done4075
    dec $I19
    set $P11, rx1819_cstack[$I19]
  rx1819_cstack_done4075:
    pop rx1819_rep, rx1819_bstack
    pop rx1819_pos, rx1819_bstack
    pop $I19, rx1819_bstack
    lt rx1819_pos, -1, rx1819_done4070
    lt rx1819_pos, 0, rx1819_fail4072
    eq $I19, 0, rx1819_fail4072
    nqp_islist $I20, rx1819_cstack
    unless $I20, rx1819_jump4073
    elements $I18, rx1819_bstack
    le $I18, 0, rx1819_cut4074
    dec $I18
    set $I18, rx1819_bstack[$I18]
  rx1819_cut4074:
    assign rx1819_cstack, $I18
  rx1819_jump4073:
    jump $I19
  rx1819_done4070:
    rx1819_cur."!cursor_fail"()
    .return (rx1819_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_225_1360432459.413") :anon :lex :outer("cuid_224_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local string rx1822_tgt
    .local int rx1822_pos
    .local int rx1822_off
    .local int rx1822_eos
    .local int rx1822_rep
    .local pmc rx1822_cur
    .local pmc rx1822_curclass
    .local pmc rx1822_bstack
    .local pmc rx1822_cstack
    (rx1822_cur, rx1822_tgt, rx1822_pos, rx1822_curclass, rx1822_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1822_cur
    length rx1822_eos, rx1822_tgt
    eq $I19, 1, rx1822_restart4083
    gt rx1822_pos, rx1822_eos, rx1822_fail4084
    repr_get_attr_int $I11, self, rx1822_curclass, "$!from"
    ne $I11, -1, rxscan1823_done4090
    goto rxscan1823_scan4089
  rxscan1823_loop4088:
    inc rx1822_pos
    gt rx1822_pos, rx1822_eos, rx1822_fail4084
    repr_bind_attr_int rx1822_cur, rx1822_curclass, "$!from", rx1822_pos
  rxscan1823_scan4089:
    nqp_rxmark rx1822_bstack, rxscan1823_loop4088, rx1822_pos, 0
  rxscan1823_done4090:
    repr_bind_attr_int rx1822_cur, rx1822_curclass, "$!pos", rx1822_pos
    $P11 = rx1822_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx1822_curclass, "$!pos"
    lt $I11, 0, rx1822_fail4084
    nqp_rxmark rx1822_bstack, rxsubrule1824_pass4091, -1, 0
  rxsubrule1824_pass4091:
    rx1822_cstack = rx1822_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx1822_pos, $P11, rx1822_curclass, "$!pos"
    rx1822_cur."!cursor_pass"(rx1822_pos, 'backtrack'=>1)
    .return (rx1822_cur)
  rx1822_restart4083:
    repr_get_attr_obj rx1822_cstack, rx1822_cur, rx1822_curclass, "$!cstack"
  rx1822_fail4084:
    unless rx1822_bstack, rx1822_done4082
    pop $I19, rx1822_bstack
    if_null rx1822_cstack, rx1822_cstack_done4087
    unless rx1822_cstack, rx1822_cstack_done4087
    dec $I19
    set $P11, rx1822_cstack[$I19]
  rx1822_cstack_done4087:
    pop rx1822_rep, rx1822_bstack
    pop rx1822_pos, rx1822_bstack
    pop $I19, rx1822_bstack
    lt rx1822_pos, -1, rx1822_done4082
    lt rx1822_pos, 0, rx1822_fail4084
    eq $I19, 0, rx1822_fail4084
    nqp_islist $I20, rx1822_cstack
    unless $I20, rx1822_jump4085
    elements $I18, rx1822_bstack
    le $I18, 0, rx1822_cut4086
    dec $I18
    set $I18, rx1822_bstack[$I18]
  rx1822_cut4086:
    assign rx1822_cstack, $I18
  rx1822_jump4085:
    jump $I19
  rx1822_done4082:
    rx1822_cur."!cursor_fail"()
    .return (rx1822_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_413_1360432459.413") :anon :lex :outer("cuid_224_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1409

    box $P5001, 1
    store_dynamic_lex "$*CONTROL_USED", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "smartmatch" :subid("cuid_226_1360432459.413") :anon :lex :outer("cuid_395_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1411
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$t", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_271 
    .local pmc fb_tmp_272 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    set fb_tmp_271, _lex_param_1
    repr_defined $I5001, fb_tmp_271
    unless $I5001 goto if1825_else4092 
    set $P5002, fb_tmp_271[0]
    set $P5004, $P5002
    goto if1825_end4093
  if1825_else4092:
    null $P5003
    set $P5004, $P5003
  if1825_end4093:
    unless_null $P5004, vivi_18264094
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_18264094:
    set $P101, $P5004
    set fb_tmp_272, _lex_param_1
    repr_defined $I5002, fb_tmp_272
    unless $I5002 goto if1827_else4095 
    set $P5006, fb_tmp_272[1]
    set $P5008, $P5006
    goto if1827_end4096
  if1827_else4095:
    null $P5007
    set $P5008, $P5007
  if1827_end4096:
    unless_null $P5008, vivi_18284097
    nqp_get_sc_object $P5009, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5008, $P5009
  vivi_18284097:
    set _lex_param_1[0], $P5008
    set _lex_param_1[1], $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_414_1360432459.413") :anon :lex :outer("cuid_372_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1417
    .const 'Sub' $P5013 = 'cuid_227_1360432459.413' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_228_1360432459.413' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_230_1360432459.413' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_231_1360432459.413' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_233_1360432459.413' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_234_1360432459.413' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_237_1360432459.413' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_240_1360432459.413' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_242_1360432459.413' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_244_1360432459.413' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_245_1360432459.413' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_246_1360432459.413' 
    capture_lex $P5013 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .const 'Sub' $P5001 = 'cuid_227_1360432459.413' 
    capture_lex $P5001
    .const 'Sub' $P5002 = 'cuid_228_1360432459.413' 
    capture_lex $P5002
    .const 'Sub' $P5003 = 'cuid_230_1360432459.413' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_231_1360432459.413' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_233_1360432459.413' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_234_1360432459.413' 
    capture_lex $P5006
    .const 'Sub' $P5007 = 'cuid_237_1360432459.413' 
    capture_lex $P5007
    .const 'Sub' $P5008 = 'cuid_240_1360432459.413' 
    capture_lex $P5008
    .const 'Sub' $P5009 = 'cuid_242_1360432459.413' 
    capture_lex $P5009
    .const 'Sub' $P5010 = 'cuid_244_1360432459.413' 
    capture_lex $P5010
    .const 'Sub' $P5011 = 'cuid_245_1360432459.413' 
    capture_lex $P5011
    .const 'Sub' $P5012 = 'cuid_246_1360432459.413' 
    capture_lex $P5012
    .return ($P5012) 
.end
.HLL "nqp"
.namespace []
.sub "rxstopper" :subid("cuid_227_1360432459.413") :anon :lex :outer("cuid_414_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1418
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1829_tgt
    .local int rx1829_pos
    .local int rx1829_off
    .local int rx1829_eos
    .local int rx1829_rep
    .local pmc rx1829_cur
    .local pmc rx1829_curclass
    .local pmc rx1829_bstack
    .local pmc rx1829_cstack
    (rx1829_cur, rx1829_tgt, rx1829_pos, rx1829_curclass, rx1829_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1829_cur
    length rx1829_eos, rx1829_tgt
    eq $I19, 1, rx1829_restart4100
    gt rx1829_pos, rx1829_eos, rx1829_fail4101
    repr_get_attr_int $I11, self, rx1829_curclass, "$!from"
    ne $I11, -1, rxscan1830_done4107
    goto rxscan1830_scan4106
  rxscan1830_loop4105:
    inc rx1829_pos
    gt rx1829_pos, rx1829_eos, rx1829_fail4101
    repr_bind_attr_int rx1829_cur, rx1829_curclass, "$!from", rx1829_pos
  rxscan1830_scan4106:
    nqp_rxmark rx1829_bstack, rxscan1830_loop4105, rx1829_pos, 0
  rxscan1830_done4107:
    ge rx1829_pos, rx1829_eos, rx1829_fail4101
    substr $S11, rx1829_tgt, rx1829_pos, 1
    index $I11, ucs4:"}/", $S11
    lt $I11, 0, rx1829_fail4101
    inc rx1829_pos
    rx1829_cur."!cursor_pass"(rx1829_pos, "rxstopper", 'backtrack'=>1)
    .return (rx1829_cur)
  rx1829_restart4100:
    repr_get_attr_obj rx1829_cstack, rx1829_cur, rx1829_curclass, "$!cstack"
  rx1829_fail4101:
    unless rx1829_bstack, rx1829_done4099
    pop $I19, rx1829_bstack
    if_null rx1829_cstack, rx1829_cstack_done4104
    unless rx1829_cstack, rx1829_cstack_done4104
    dec $I19
    set $P11, rx1829_cstack[$I19]
  rx1829_cstack_done4104:
    pop rx1829_rep, rx1829_bstack
    pop rx1829_pos, rx1829_bstack
    pop $I19, rx1829_bstack
    lt rx1829_pos, -1, rx1829_done4099
    lt rx1829_pos, 0, rx1829_fail4101
    eq $I19, 0, rx1829_fail4101
    nqp_islist $I20, rx1829_cstack
    unless $I20, rx1829_jump4102
    elements $I18, rx1829_bstack
    le $I18, 0, rx1829_cut4103
    dec $I18
    set $I18, rx1829_bstack[$I18]
  rx1829_cut4103:
    assign rx1829_cstack, $I18
  rx1829_jump4102:
    jump $I19
  rx1829_done4099:
    rx1829_cur."!cursor_fail"()
    .return (rx1829_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<:my>" :subid("cuid_228_1360432459.413") :anon :lex :outer("cuid_414_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1422
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_229_1360432459.413' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1831_tgt
    .local int rx1831_pos
    .local int rx1831_off
    .local int rx1831_eos
    .local int rx1831_rep
    .local pmc rx1831_cur
    .local pmc rx1831_curclass
    .local pmc rx1831_bstack
    .local pmc rx1831_cstack
    (rx1831_cur, rx1831_tgt, rx1831_pos, rx1831_curclass, rx1831_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1831_cur
    length rx1831_eos, rx1831_tgt
    eq $I19, 1, rx1831_restart4110
    gt rx1831_pos, rx1831_eos, rx1831_fail4111
    repr_get_attr_int $I11, self, rx1831_curclass, "$!from"
    ne $I11, -1, rxscan1832_done4117
    goto rxscan1832_scan4116
  rxscan1832_loop4115:
    inc rx1831_pos
    gt rx1831_pos, rx1831_eos, rx1831_fail4111
    repr_bind_attr_int rx1831_cur, rx1831_curclass, "$!from", rx1831_pos
  rxscan1832_scan4116:
    nqp_rxmark rx1831_bstack, rxscan1832_loop4115, rx1831_pos, 0
  rxscan1832_done4117:
    add $I11, rx1831_pos, 1
    gt $I11, rx1831_eos, rx1831_fail4111
    substr $S10, rx1831_tgt, rx1831_pos, 1
    ne $S10, ucs4:":", rx1831_fail4111
    add rx1831_pos, 1
    .const 'Sub' $P5001 = 'cuid_229_1360432459.413' 
    capture_lex $P5001
    repr_bind_attr_int rx1831_cur, rx1831_curclass, "$!pos", rx1831_pos
    $P11 = rx1831_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1831_curclass, "$!pos"
    lt $I11, 0, rx1831_fail4111
    repr_bind_attr_int rx1831_cur, rx1831_curclass, "$!pos", rx1831_pos
    $P11 = rx1831_cur."LANG"("MAIN", "statement")
    repr_get_attr_int $I11, $P11, rx1831_curclass, "$!pos"
    lt $I11, 0, rx1831_fail4111
    nqp_rxmark rx1831_bstack, rxsubrule1835_pass4128, -1, 0
  rxsubrule1835_pass4128:
    rx1831_cstack = rx1831_cur."!cursor_capture"($P11, "statement")
    repr_get_attr_int rx1831_pos, $P11, rx1831_curclass, "$!pos"
    repr_bind_attr_int rx1831_cur, rx1831_curclass, "$!pos", rx1831_pos
    $P11 = rx1831_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1831_curclass, "$!pos"
    lt $I11, 0, rx1831_fail4111
    repr_get_attr_int rx1831_pos, $P11, rx1831_curclass, "$!pos"
    add $I11, rx1831_pos, 1
    gt $I11, rx1831_eos, rx1831_fail4111
    substr $S10, rx1831_tgt, rx1831_pos, 1
    ne $S10, ucs4:";", rx1831_fail4111
    add rx1831_pos, 1
    rx1831_cur."!cursor_pass"(rx1831_pos, "metachar:sym<:my>", 'backtrack'=>1)
    .return (rx1831_cur)
  rx1831_restart4110:
    repr_get_attr_obj rx1831_cstack, rx1831_cur, rx1831_curclass, "$!cstack"
  rx1831_fail4111:
    unless rx1831_bstack, rx1831_done4109
    pop $I19, rx1831_bstack
    if_null rx1831_cstack, rx1831_cstack_done4114
    unless rx1831_cstack, rx1831_cstack_done4114
    dec $I19
    set $P11, rx1831_cstack[$I19]
  rx1831_cstack_done4114:
    pop rx1831_rep, rx1831_bstack
    pop rx1831_pos, rx1831_bstack
    pop $I19, rx1831_bstack
    lt rx1831_pos, -1, rx1831_done4109
    lt rx1831_pos, 0, rx1831_fail4111
    eq $I19, 0, rx1831_fail4111
    nqp_islist $I20, rx1831_cstack
    unless $I20, rx1831_jump4112
    elements $I18, rx1831_bstack
    le $I18, 0, rx1831_cut4113
    dec $I18
    set $I18, rx1831_bstack[$I18]
  rx1831_cut4113:
    assign rx1831_cstack, $I18
  rx1831_jump4112:
    jump $I19
  rx1831_done4109:
    rx1831_cur."!cursor_fail"()
    .return (rx1831_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_229_1360432459.413") :anon :lex :outer("cuid_228_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local string rx1833_tgt
    .local int rx1833_pos
    .local int rx1833_off
    .local int rx1833_eos
    .local int rx1833_rep
    .local pmc rx1833_cur
    .local pmc rx1833_curclass
    .local pmc rx1833_bstack
    .local pmc rx1833_cstack
    (rx1833_cur, rx1833_tgt, rx1833_pos, rx1833_curclass, rx1833_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1833_cur
    length rx1833_eos, rx1833_tgt
    eq $I19, 1, rx1833_restart4120
    gt rx1833_pos, rx1833_eos, rx1833_fail4121
    repr_get_attr_int $I11, self, rx1833_curclass, "$!from"
    ne $I11, -1, rxscan1834_done4127
    goto rxscan1834_scan4126
  rxscan1834_loop4125:
    inc rx1833_pos
    gt rx1833_pos, rx1833_eos, rx1833_fail4121
    repr_bind_attr_int rx1833_cur, rx1833_curclass, "$!from", rx1833_pos
  rxscan1834_scan4126:
    nqp_rxmark rx1833_bstack, rxscan1834_loop4125, rx1833_pos, 0
  rxscan1834_done4127:
    add $I11, rx1833_pos, 2
    gt $I11, rx1833_eos, rx1833_fail4121
    substr $S10, rx1833_tgt, rx1833_pos, 2
    ne $S10, ucs4:"my", rx1833_fail4121
    add rx1833_pos, 2
    rx1833_cur."!cursor_pass"(rx1833_pos, 'backtrack'=>1)
    .return (rx1833_cur)
  rx1833_restart4120:
    repr_get_attr_obj rx1833_cstack, rx1833_cur, rx1833_curclass, "$!cstack"
  rx1833_fail4121:
    unless rx1833_bstack, rx1833_done4119
    pop $I19, rx1833_bstack
    if_null rx1833_cstack, rx1833_cstack_done4124
    unless rx1833_cstack, rx1833_cstack_done4124
    dec $I19
    set $P11, rx1833_cstack[$I19]
  rx1833_cstack_done4124:
    pop rx1833_rep, rx1833_bstack
    pop rx1833_pos, rx1833_bstack
    pop $I19, rx1833_bstack
    lt rx1833_pos, -1, rx1833_done4119
    lt rx1833_pos, 0, rx1833_fail4121
    eq $I19, 0, rx1833_fail4121
    nqp_islist $I20, rx1833_cstack
    unless $I20, rx1833_jump4122
    elements $I18, rx1833_bstack
    le $I18, 0, rx1833_cut4123
    dec $I18
    set $I18, rx1833_bstack[$I18]
  rx1833_cut4123:
    assign rx1833_cstack, $I18
  rx1833_jump4122:
    jump $I19
  rx1833_done4119:
    rx1833_cur."!cursor_fail"()
    .return (rx1833_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<{ }>" :subid("cuid_230_1360432459.413") :anon :lex :outer("cuid_414_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1426
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1837_tgt
    .local int rx1837_pos
    .local int rx1837_off
    .local int rx1837_eos
    .local int rx1837_rep
    .local pmc rx1837_cur
    .local pmc rx1837_curclass
    .local pmc rx1837_bstack
    .local pmc rx1837_cstack
    (rx1837_cur, rx1837_tgt, rx1837_pos, rx1837_curclass, rx1837_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1837_cur
    length rx1837_eos, rx1837_tgt
    eq $I19, 1, rx1837_restart4132
    gt rx1837_pos, rx1837_eos, rx1837_fail4133
    repr_get_attr_int $I11, self, rx1837_curclass, "$!from"
    ne $I11, -1, rxscan1838_done4139
    goto rxscan1838_scan4138
  rxscan1838_loop4137:
    inc rx1837_pos
    gt rx1837_pos, rx1837_eos, rx1837_fail4133
    repr_bind_attr_int rx1837_cur, rx1837_curclass, "$!from", rx1837_pos
  rxscan1838_scan4138:
    nqp_rxmark rx1837_bstack, rxscan1838_loop4137, rx1837_pos, 0
  rxscan1838_done4139:
    ge rx1837_pos, rx1837_eos, rx1837_fail4133
    substr $S11, rx1837_tgt, rx1837_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx1837_fail4133
    repr_bind_attr_int rx1837_cur, rx1837_curclass, "$!pos", rx1837_pos
    $P11 = rx1837_cur."codeblock"()
    repr_get_attr_int $I11, $P11, rx1837_curclass, "$!pos"
    lt $I11, 0, rx1837_fail4133
    nqp_rxmark rx1837_bstack, rxsubrule1839_pass4140, -1, 0
  rxsubrule1839_pass4140:
    rx1837_cstack = rx1837_cur."!cursor_capture"($P11, "codeblock")
    repr_get_attr_int rx1837_pos, $P11, rx1837_curclass, "$!pos"
    rx1837_cur."!cursor_pass"(rx1837_pos, "metachar:sym<{ }>", 'backtrack'=>1)
    .return (rx1837_cur)
  rx1837_restart4132:
    repr_get_attr_obj rx1837_cstack, rx1837_cur, rx1837_curclass, "$!cstack"
  rx1837_fail4133:
    unless rx1837_bstack, rx1837_done4131
    pop $I19, rx1837_bstack
    if_null rx1837_cstack, rx1837_cstack_done4136
    unless rx1837_cstack, rx1837_cstack_done4136
    dec $I19
    set $P11, rx1837_cstack[$I19]
  rx1837_cstack_done4136:
    pop rx1837_rep, rx1837_bstack
    pop rx1837_pos, rx1837_bstack
    pop $I19, rx1837_bstack
    lt rx1837_pos, -1, rx1837_done4131
    lt rx1837_pos, 0, rx1837_fail4133
    eq $I19, 0, rx1837_fail4133
    nqp_islist $I20, rx1837_cstack
    unless $I20, rx1837_jump4134
    elements $I18, rx1837_bstack
    le $I18, 0, rx1837_cut4135
    dec $I18
    set $I18, rx1837_bstack[$I18]
  rx1837_cut4135:
    assign rx1837_cstack, $I18
  rx1837_jump4134:
    jump $I19
  rx1837_done4131:
    rx1837_cur."!cursor_fail"()
    .return (rx1837_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<nqpvar>" :subid("cuid_231_1360432459.413") :anon :lex :outer("cuid_414_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1430
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_232_1360432459.413' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1840_tgt
    .local int rx1840_pos
    .local int rx1840_off
    .local int rx1840_eos
    .local int rx1840_rep
    .local pmc rx1840_cur
    .local pmc rx1840_curclass
    .local pmc rx1840_bstack
    .local pmc rx1840_cstack
    (rx1840_cur, rx1840_tgt, rx1840_pos, rx1840_curclass, rx1840_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1840_cur
    length rx1840_eos, rx1840_tgt
    eq $I19, 1, rx1840_restart4143
    gt rx1840_pos, rx1840_eos, rx1840_fail4144
    repr_get_attr_int $I11, self, rx1840_curclass, "$!from"
    ne $I11, -1, rxscan1841_done4150
    goto rxscan1841_scan4149
  rxscan1841_loop4148:
    inc rx1840_pos
    gt rx1840_pos, rx1840_eos, rx1840_fail4144
    repr_bind_attr_int rx1840_cur, rx1840_curclass, "$!from", rx1840_pos
  rxscan1841_scan4149:
    nqp_rxmark rx1840_bstack, rxscan1841_loop4148, rx1840_pos, 0
  rxscan1841_done4150:
    .const 'Sub' $P5001 = 'cuid_232_1360432459.413' 
    capture_lex $P5001
    repr_bind_attr_int rx1840_cur, rx1840_curclass, "$!pos", rx1840_pos
    $P11 = rx1840_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1840_curclass, "$!pos"
    lt $I11, 0, rx1840_fail4144
    repr_bind_attr_int rx1840_cur, rx1840_curclass, "$!pos", rx1840_pos
    $P11 = rx1840_cur."LANG"("MAIN", "variable")
    repr_get_attr_int $I11, $P11, rx1840_curclass, "$!pos"
    lt $I11, 0, rx1840_fail4144
    nqp_rxmark rx1840_bstack, rxsubrule1846_pass4165, -1, 0
  rxsubrule1846_pass4165:
    rx1840_cstack = rx1840_cur."!cursor_capture"($P11, "var")
    repr_get_attr_int rx1840_pos, $P11, rx1840_curclass, "$!pos"
    rx1840_cur."!cursor_pass"(rx1840_pos, "metachar:sym<nqpvar>", 'backtrack'=>1)
    .return (rx1840_cur)
  rx1840_restart4143:
    repr_get_attr_obj rx1840_cstack, rx1840_cur, rx1840_curclass, "$!cstack"
  rx1840_fail4144:
    unless rx1840_bstack, rx1840_done4142
    pop $I19, rx1840_bstack
    if_null rx1840_cstack, rx1840_cstack_done4147
    unless rx1840_cstack, rx1840_cstack_done4147
    dec $I19
    set $P11, rx1840_cstack[$I19]
  rx1840_cstack_done4147:
    pop rx1840_rep, rx1840_bstack
    pop rx1840_pos, rx1840_bstack
    pop $I19, rx1840_bstack
    lt rx1840_pos, -1, rx1840_done4142
    lt rx1840_pos, 0, rx1840_fail4144
    eq $I19, 0, rx1840_fail4144
    nqp_islist $I20, rx1840_cstack
    unless $I20, rx1840_jump4145
    elements $I18, rx1840_bstack
    le $I18, 0, rx1840_cut4146
    dec $I18
    set $I18, rx1840_bstack[$I18]
  rx1840_cut4146:
    assign rx1840_cstack, $I18
  rx1840_jump4145:
    jump $I19
  rx1840_done4142:
    rx1840_cur."!cursor_fail"()
    .return (rx1840_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_232_1360432459.413") :anon :lex :outer("cuid_231_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local string rx1842_tgt
    .local int rx1842_pos
    .local int rx1842_off
    .local int rx1842_eos
    .local int rx1842_rep
    .local pmc rx1842_cur
    .local pmc rx1842_curclass
    .local pmc rx1842_bstack
    .local pmc rx1842_cstack
    (rx1842_cur, rx1842_tgt, rx1842_pos, rx1842_curclass, rx1842_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1842_cur
    length rx1842_eos, rx1842_tgt
    eq $I19, 1, rx1842_restart4153
    gt rx1842_pos, rx1842_eos, rx1842_fail4154
    repr_get_attr_int $I11, self, rx1842_curclass, "$!from"
    ne $I11, -1, rxscan1843_done4160
    goto rxscan1843_scan4159
  rxscan1843_loop4158:
    inc rx1842_pos
    gt rx1842_pos, rx1842_eos, rx1842_fail4154
    repr_bind_attr_int rx1842_cur, rx1842_curclass, "$!from", rx1842_pos
  rxscan1843_scan4159:
    nqp_rxmark rx1842_bstack, rxscan1843_loop4158, rx1842_pos, 0
  rxscan1843_done4160:
    repr_bind_attr_int rx1842_cur, rx1842_curclass, "$!pos", rx1842_pos
    $P11 = rx1842_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx1842_curclass, "$!pos"
    lt $I11, 0, rx1842_fail4154
    nqp_rxmark rx1842_bstack, rxsubrule1844_pass4161, -1, 0
  rxsubrule1844_pass4161:
    rx1842_cstack = rx1842_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx1842_pos, $P11, rx1842_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1845_04163
    nqp_push_label $P11, alt1845_14164
    nqp_rxmark rx1842_bstack, alt1845_end4162, -1, 0
    rx1842_cur."!alt"(rx1842_pos, "alt_nfa__39_1360432462.616", $P11)
    goto rx1842_fail4154
  alt1845_04163:
    ge rx1842_pos, rx1842_eos, rx1842_fail4154
    is_cclass $I11, .CCLASS_WORD, rx1842_tgt, rx1842_pos
    if $I11, rx1842_fail4154
    add rx1842_pos, 1
    ge rx1842_pos, rx1842_eos, rx1842_fail4154
    is_cclass $I11, .CCLASS_WORD, rx1842_tgt, rx1842_pos
    unless $I11, rx1842_fail4154
    add rx1842_pos, 1
    goto alt1845_end4162
  alt1845_14164:
    ge rx1842_pos, rx1842_eos, rx1842_fail4154
    is_cclass $I11, .CCLASS_WORD, rx1842_tgt, rx1842_pos
    unless $I11, rx1842_fail4154
    add rx1842_pos, 1
    goto alt1845_end4162
  alt1845_end4162:
    nqp_rxcommit rx1842_bstack, alt1845_end4162
    rx1842_cur."!cursor_pass"(rx1842_pos, 'backtrack'=>1)
    .return (rx1842_cur)
  rx1842_restart4153:
    repr_get_attr_obj rx1842_cstack, rx1842_cur, rx1842_curclass, "$!cstack"
  rx1842_fail4154:
    unless rx1842_bstack, rx1842_done4152
    pop $I19, rx1842_bstack
    if_null rx1842_cstack, rx1842_cstack_done4157
    unless rx1842_cstack, rx1842_cstack_done4157
    dec $I19
    set $P11, rx1842_cstack[$I19]
  rx1842_cstack_done4157:
    pop rx1842_rep, rx1842_bstack
    pop rx1842_pos, rx1842_bstack
    pop $I19, rx1842_bstack
    lt rx1842_pos, -1, rx1842_done4152
    lt rx1842_pos, 0, rx1842_fail4154
    eq $I19, 0, rx1842_fail4154
    nqp_islist $I20, rx1842_cstack
    unless $I20, rx1842_jump4155
    elements $I18, rx1842_bstack
    le $I18, 0, rx1842_cut4156
    dec $I18
    set $I18, rx1842_bstack[$I18]
  rx1842_cut4156:
    assign rx1842_cstack, $I18
  rx1842_jump4155:
    jump $I19
  rx1842_done4152:
    rx1842_cur."!cursor_fail"()
    .return (rx1842_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<{ }>" :subid("cuid_233_1360432459.413") :anon :lex :outer("cuid_414_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1434
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1847_tgt
    .local int rx1847_pos
    .local int rx1847_off
    .local int rx1847_eos
    .local int rx1847_rep
    .local pmc rx1847_cur
    .local pmc rx1847_curclass
    .local pmc rx1847_bstack
    .local pmc rx1847_cstack
    (rx1847_cur, rx1847_tgt, rx1847_pos, rx1847_curclass, rx1847_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1847_cur
    length rx1847_eos, rx1847_tgt
    eq $I19, 1, rx1847_restart4168
    gt rx1847_pos, rx1847_eos, rx1847_fail4169
    repr_get_attr_int $I11, self, rx1847_curclass, "$!from"
    ne $I11, -1, rxscan1848_done4175
    goto rxscan1848_scan4174
  rxscan1848_loop4173:
    inc rx1847_pos
    gt rx1847_pos, rx1847_eos, rx1847_fail4169
    repr_bind_attr_int rx1847_cur, rx1847_curclass, "$!from", rx1847_pos
  rxscan1848_scan4174:
    nqp_rxmark rx1847_bstack, rxscan1848_loop4173, rx1847_pos, 0
  rxscan1848_done4175:
    ge rx1847_pos, rx1847_eos, rx1847_fail4169
    substr $S11, rx1847_tgt, rx1847_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx1847_fail4169
    repr_bind_attr_int rx1847_cur, rx1847_curclass, "$!pos", rx1847_pos
    $P11 = rx1847_cur."codeblock"()
    repr_get_attr_int $I11, $P11, rx1847_curclass, "$!pos"
    lt $I11, 0, rx1847_fail4169
    nqp_rxmark rx1847_bstack, rxsubrule1849_pass4176, -1, 0
  rxsubrule1849_pass4176:
    rx1847_cstack = rx1847_cur."!cursor_capture"($P11, "codeblock")
    repr_get_attr_int rx1847_pos, $P11, rx1847_curclass, "$!pos"
    rx1847_cur."!cursor_pass"(rx1847_pos, "assertion:sym<{ }>", 'backtrack'=>1)
    .return (rx1847_cur)
  rx1847_restart4168:
    repr_get_attr_obj rx1847_cstack, rx1847_cur, rx1847_curclass, "$!cstack"
  rx1847_fail4169:
    unless rx1847_bstack, rx1847_done4167
    pop $I19, rx1847_bstack
    if_null rx1847_cstack, rx1847_cstack_done4172
    unless rx1847_cstack, rx1847_cstack_done4172
    dec $I19
    set $P11, rx1847_cstack[$I19]
  rx1847_cstack_done4172:
    pop rx1847_rep, rx1847_bstack
    pop rx1847_pos, rx1847_bstack
    pop $I19, rx1847_bstack
    lt rx1847_pos, -1, rx1847_done4167
    lt rx1847_pos, 0, rx1847_fail4169
    eq $I19, 0, rx1847_fail4169
    nqp_islist $I20, rx1847_cstack
    unless $I20, rx1847_jump4170
    elements $I18, rx1847_bstack
    le $I18, 0, rx1847_cut4171
    dec $I18
    set $I18, rx1847_bstack[$I18]
  rx1847_cut4171:
    assign rx1847_cstack, $I18
  rx1847_jump4170:
    jump $I19
  rx1847_done4167:
    rx1847_cur."!cursor_fail"()
    .return (rx1847_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<?>" :subid("cuid_234_1360432459.413") :anon :lex :outer("cuid_414_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1438
    .param pmc _lex_param_0 
    .const 'Sub' $P5003 = 'cuid_235_1360432459.413' 
    capture_lex $P5003 
    .const 'Sub' $P5003 = 'cuid_236_1360432459.413' 
    capture_lex $P5003 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1850_tgt
    .local int rx1850_pos
    .local int rx1850_off
    .local int rx1850_eos
    .local int rx1850_rep
    .local pmc rx1850_cur
    .local pmc rx1850_curclass
    .local pmc rx1850_bstack
    .local pmc rx1850_cstack
    (rx1850_cur, rx1850_tgt, rx1850_pos, rx1850_curclass, rx1850_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1850_cur
    length rx1850_eos, rx1850_tgt
    eq $I19, 1, rx1850_restart4179
    gt rx1850_pos, rx1850_eos, rx1850_fail4180
    repr_get_attr_int $I11, self, rx1850_curclass, "$!from"
    ne $I11, -1, rxscan1851_done4186
    goto rxscan1851_scan4185
  rxscan1851_loop4184:
    inc rx1850_pos
    gt rx1850_pos, rx1850_eos, rx1850_fail4180
    repr_bind_attr_int rx1850_cur, rx1850_curclass, "$!from", rx1850_pos
  rxscan1851_scan4185:
    nqp_rxmark rx1850_bstack, rxscan1851_loop4184, rx1850_pos, 0
  rxscan1851_done4186:
    add $I11, rx1850_pos, 1
    gt $I11, rx1850_eos, rx1850_fail4180
    substr $S10, rx1850_tgt, rx1850_pos, 1
    ne $S10, ucs4:"?", rx1850_fail4180
    add rx1850_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1852_04188
    nqp_push_label $P11, alt1852_14199
    nqp_rxmark rx1850_bstack, alt1852_end4187, -1, 0
    rx1850_cur."!alt"(rx1850_pos, "alt_nfa__40_1360432462.638", $P11)
    goto rx1850_fail4180
  alt1852_04188:
    .const 'Sub' $P5001 = 'cuid_235_1360432459.413' 
    capture_lex $P5001
    repr_bind_attr_int rx1850_cur, rx1850_curclass, "$!pos", rx1850_pos
    $P11 = rx1850_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1850_curclass, "$!pos"
    lt $I11, 0, rx1850_fail4180
    goto alt1852_end4187
  alt1852_14199:
    .const 'Sub' $P5002 = 'cuid_236_1360432459.413' 
    capture_lex $P5002
    repr_bind_attr_int rx1850_cur, rx1850_curclass, "$!pos", rx1850_pos
    $P11 = rx1850_cur."before"($P5002)
    repr_get_attr_int $I11, $P11, rx1850_curclass, "$!pos"
    ge $I11, 0, rx1850_fail4180
    repr_bind_attr_int rx1850_cur, rx1850_curclass, "$!pos", rx1850_pos
    $P11 = rx1850_cur."assertion"()
    repr_get_attr_int $I11, $P11, rx1850_curclass, "$!pos"
    lt $I11, 0, rx1850_fail4180
    nqp_rxmark rx1850_bstack, rxsubrule1857_pass4210, -1, 0
  rxsubrule1857_pass4210:
    rx1850_cstack = rx1850_cur."!cursor_capture"($P11, "assertion")
    repr_get_attr_int rx1850_pos, $P11, rx1850_curclass, "$!pos"
    goto alt1852_end4187
  alt1852_end4187:
    nqp_rxcommit rx1850_bstack, alt1852_end4187
    rx1850_cur."!cursor_pass"(rx1850_pos, "assertion:sym<?>", 'backtrack'=>1)
    .return (rx1850_cur)
  rx1850_restart4179:
    repr_get_attr_obj rx1850_cstack, rx1850_cur, rx1850_curclass, "$!cstack"
  rx1850_fail4180:
    unless rx1850_bstack, rx1850_done4178
    pop $I19, rx1850_bstack
    if_null rx1850_cstack, rx1850_cstack_done4183
    unless rx1850_cstack, rx1850_cstack_done4183
    dec $I19
    set $P11, rx1850_cstack[$I19]
  rx1850_cstack_done4183:
    pop rx1850_rep, rx1850_bstack
    pop rx1850_pos, rx1850_bstack
    pop $I19, rx1850_bstack
    lt rx1850_pos, -1, rx1850_done4178
    lt rx1850_pos, 0, rx1850_fail4180
    eq $I19, 0, rx1850_fail4180
    nqp_islist $I20, rx1850_cstack
    unless $I20, rx1850_jump4181
    elements $I18, rx1850_bstack
    le $I18, 0, rx1850_cut4182
    dec $I18
    set $I18, rx1850_bstack[$I18]
  rx1850_cut4182:
    assign rx1850_cstack, $I18
  rx1850_jump4181:
    jump $I19
  rx1850_done4178:
    rx1850_cur."!cursor_fail"()
    .return (rx1850_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_235_1360432459.413") :anon :lex :outer("cuid_234_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local string rx1853_tgt
    .local int rx1853_pos
    .local int rx1853_off
    .local int rx1853_eos
    .local int rx1853_rep
    .local pmc rx1853_cur
    .local pmc rx1853_curclass
    .local pmc rx1853_bstack
    .local pmc rx1853_cstack
    (rx1853_cur, rx1853_tgt, rx1853_pos, rx1853_curclass, rx1853_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1853_cur
    length rx1853_eos, rx1853_tgt
    eq $I19, 1, rx1853_restart4191
    gt rx1853_pos, rx1853_eos, rx1853_fail4192
    repr_get_attr_int $I11, self, rx1853_curclass, "$!from"
    ne $I11, -1, rxscan1854_done4198
    goto rxscan1854_scan4197
  rxscan1854_loop4196:
    inc rx1853_pos
    gt rx1853_pos, rx1853_eos, rx1853_fail4192
    repr_bind_attr_int rx1853_cur, rx1853_curclass, "$!from", rx1853_pos
  rxscan1854_scan4197:
    nqp_rxmark rx1853_bstack, rxscan1854_loop4196, rx1853_pos, 0
  rxscan1854_done4198:
    add $I11, rx1853_pos, 1
    gt $I11, rx1853_eos, rx1853_fail4192
    substr $S10, rx1853_tgt, rx1853_pos, 1
    ne $S10, ucs4:">", rx1853_fail4192
    add rx1853_pos, 1
    rx1853_cur."!cursor_pass"(rx1853_pos, 'backtrack'=>1)
    .return (rx1853_cur)
  rx1853_restart4191:
    repr_get_attr_obj rx1853_cstack, rx1853_cur, rx1853_curclass, "$!cstack"
  rx1853_fail4192:
    unless rx1853_bstack, rx1853_done4190
    pop $I19, rx1853_bstack
    if_null rx1853_cstack, rx1853_cstack_done4195
    unless rx1853_cstack, rx1853_cstack_done4195
    dec $I19
    set $P11, rx1853_cstack[$I19]
  rx1853_cstack_done4195:
    pop rx1853_rep, rx1853_bstack
    pop rx1853_pos, rx1853_bstack
    pop $I19, rx1853_bstack
    lt rx1853_pos, -1, rx1853_done4190
    lt rx1853_pos, 0, rx1853_fail4192
    eq $I19, 0, rx1853_fail4192
    nqp_islist $I20, rx1853_cstack
    unless $I20, rx1853_jump4193
    elements $I18, rx1853_bstack
    le $I18, 0, rx1853_cut4194
    dec $I18
    set $I18, rx1853_bstack[$I18]
  rx1853_cut4194:
    assign rx1853_cstack, $I18
  rx1853_jump4193:
    jump $I19
  rx1853_done4190:
    rx1853_cur."!cursor_fail"()
    .return (rx1853_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_236_1360432459.413") :anon :lex :outer("cuid_234_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local string rx1855_tgt
    .local int rx1855_pos
    .local int rx1855_off
    .local int rx1855_eos
    .local int rx1855_rep
    .local pmc rx1855_cur
    .local pmc rx1855_curclass
    .local pmc rx1855_bstack
    .local pmc rx1855_cstack
    (rx1855_cur, rx1855_tgt, rx1855_pos, rx1855_curclass, rx1855_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1855_cur
    length rx1855_eos, rx1855_tgt
    eq $I19, 1, rx1855_restart4202
    gt rx1855_pos, rx1855_eos, rx1855_fail4203
    repr_get_attr_int $I11, self, rx1855_curclass, "$!from"
    ne $I11, -1, rxscan1856_done4209
    goto rxscan1856_scan4208
  rxscan1856_loop4207:
    inc rx1855_pos
    gt rx1855_pos, rx1855_eos, rx1855_fail4203
    repr_bind_attr_int rx1855_cur, rx1855_curclass, "$!from", rx1855_pos
  rxscan1856_scan4208:
    nqp_rxmark rx1855_bstack, rxscan1856_loop4207, rx1855_pos, 0
  rxscan1856_done4209:
    add $I11, rx1855_pos, 1
    gt $I11, rx1855_eos, rx1855_fail4203
    substr $S10, rx1855_tgt, rx1855_pos, 1
    ne $S10, ucs4:"{", rx1855_fail4203
    add rx1855_pos, 1
    rx1855_cur."!cursor_pass"(rx1855_pos, 'backtrack'=>1)
    .return (rx1855_cur)
  rx1855_restart4202:
    repr_get_attr_obj rx1855_cstack, rx1855_cur, rx1855_curclass, "$!cstack"
  rx1855_fail4203:
    unless rx1855_bstack, rx1855_done4201
    pop $I19, rx1855_bstack
    if_null rx1855_cstack, rx1855_cstack_done4206
    unless rx1855_cstack, rx1855_cstack_done4206
    dec $I19
    set $P11, rx1855_cstack[$I19]
  rx1855_cstack_done4206:
    pop rx1855_rep, rx1855_bstack
    pop rx1855_pos, rx1855_bstack
    pop $I19, rx1855_bstack
    lt rx1855_pos, -1, rx1855_done4201
    lt rx1855_pos, 0, rx1855_fail4203
    eq $I19, 0, rx1855_fail4203
    nqp_islist $I20, rx1855_cstack
    unless $I20, rx1855_jump4204
    elements $I18, rx1855_bstack
    le $I18, 0, rx1855_cut4205
    dec $I18
    set $I18, rx1855_bstack[$I18]
  rx1855_cut4205:
    assign rx1855_cstack, $I18
  rx1855_jump4204:
    jump $I19
  rx1855_done4201:
    rx1855_cur."!cursor_fail"()
    .return (rx1855_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<!>" :subid("cuid_237_1360432459.413") :anon :lex :outer("cuid_414_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1439
    .param pmc _lex_param_0 
    .const 'Sub' $P5003 = 'cuid_238_1360432459.413' 
    capture_lex $P5003 
    .const 'Sub' $P5003 = 'cuid_239_1360432459.413' 
    capture_lex $P5003 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1858_tgt
    .local int rx1858_pos
    .local int rx1858_off
    .local int rx1858_eos
    .local int rx1858_rep
    .local pmc rx1858_cur
    .local pmc rx1858_curclass
    .local pmc rx1858_bstack
    .local pmc rx1858_cstack
    (rx1858_cur, rx1858_tgt, rx1858_pos, rx1858_curclass, rx1858_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1858_cur
    length rx1858_eos, rx1858_tgt
    eq $I19, 1, rx1858_restart4213
    gt rx1858_pos, rx1858_eos, rx1858_fail4214
    repr_get_attr_int $I11, self, rx1858_curclass, "$!from"
    ne $I11, -1, rxscan1859_done4220
    goto rxscan1859_scan4219
  rxscan1859_loop4218:
    inc rx1858_pos
    gt rx1858_pos, rx1858_eos, rx1858_fail4214
    repr_bind_attr_int rx1858_cur, rx1858_curclass, "$!from", rx1858_pos
  rxscan1859_scan4219:
    nqp_rxmark rx1858_bstack, rxscan1859_loop4218, rx1858_pos, 0
  rxscan1859_done4220:
    add $I11, rx1858_pos, 1
    gt $I11, rx1858_eos, rx1858_fail4214
    substr $S10, rx1858_tgt, rx1858_pos, 1
    ne $S10, ucs4:"!", rx1858_fail4214
    add rx1858_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1860_04222
    nqp_push_label $P11, alt1860_14233
    nqp_rxmark rx1858_bstack, alt1860_end4221, -1, 0
    rx1858_cur."!alt"(rx1858_pos, "alt_nfa__41_1360432462.65", $P11)
    goto rx1858_fail4214
  alt1860_04222:
    .const 'Sub' $P5001 = 'cuid_238_1360432459.413' 
    capture_lex $P5001
    repr_bind_attr_int rx1858_cur, rx1858_curclass, "$!pos", rx1858_pos
    $P11 = rx1858_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1858_curclass, "$!pos"
    lt $I11, 0, rx1858_fail4214
    goto alt1860_end4221
  alt1860_14233:
    .const 'Sub' $P5002 = 'cuid_239_1360432459.413' 
    capture_lex $P5002
    repr_bind_attr_int rx1858_cur, rx1858_curclass, "$!pos", rx1858_pos
    $P11 = rx1858_cur."before"($P5002)
    repr_get_attr_int $I11, $P11, rx1858_curclass, "$!pos"
    ge $I11, 0, rx1858_fail4214
    repr_bind_attr_int rx1858_cur, rx1858_curclass, "$!pos", rx1858_pos
    $P11 = rx1858_cur."assertion"()
    repr_get_attr_int $I11, $P11, rx1858_curclass, "$!pos"
    lt $I11, 0, rx1858_fail4214
    nqp_rxmark rx1858_bstack, rxsubrule1865_pass4244, -1, 0
  rxsubrule1865_pass4244:
    rx1858_cstack = rx1858_cur."!cursor_capture"($P11, "assertion")
    repr_get_attr_int rx1858_pos, $P11, rx1858_curclass, "$!pos"
    goto alt1860_end4221
  alt1860_end4221:
    nqp_rxcommit rx1858_bstack, alt1860_end4221
    rx1858_cur."!cursor_pass"(rx1858_pos, "assertion:sym<!>", 'backtrack'=>1)
    .return (rx1858_cur)
  rx1858_restart4213:
    repr_get_attr_obj rx1858_cstack, rx1858_cur, rx1858_curclass, "$!cstack"
  rx1858_fail4214:
    unless rx1858_bstack, rx1858_done4212
    pop $I19, rx1858_bstack
    if_null rx1858_cstack, rx1858_cstack_done4217
    unless rx1858_cstack, rx1858_cstack_done4217
    dec $I19
    set $P11, rx1858_cstack[$I19]
  rx1858_cstack_done4217:
    pop rx1858_rep, rx1858_bstack
    pop rx1858_pos, rx1858_bstack
    pop $I19, rx1858_bstack
    lt rx1858_pos, -1, rx1858_done4212
    lt rx1858_pos, 0, rx1858_fail4214
    eq $I19, 0, rx1858_fail4214
    nqp_islist $I20, rx1858_cstack
    unless $I20, rx1858_jump4215
    elements $I18, rx1858_bstack
    le $I18, 0, rx1858_cut4216
    dec $I18
    set $I18, rx1858_bstack[$I18]
  rx1858_cut4216:
    assign rx1858_cstack, $I18
  rx1858_jump4215:
    jump $I19
  rx1858_done4212:
    rx1858_cur."!cursor_fail"()
    .return (rx1858_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_238_1360432459.413") :anon :lex :outer("cuid_237_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local string rx1861_tgt
    .local int rx1861_pos
    .local int rx1861_off
    .local int rx1861_eos
    .local int rx1861_rep
    .local pmc rx1861_cur
    .local pmc rx1861_curclass
    .local pmc rx1861_bstack
    .local pmc rx1861_cstack
    (rx1861_cur, rx1861_tgt, rx1861_pos, rx1861_curclass, rx1861_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1861_cur
    length rx1861_eos, rx1861_tgt
    eq $I19, 1, rx1861_restart4225
    gt rx1861_pos, rx1861_eos, rx1861_fail4226
    repr_get_attr_int $I11, self, rx1861_curclass, "$!from"
    ne $I11, -1, rxscan1862_done4232
    goto rxscan1862_scan4231
  rxscan1862_loop4230:
    inc rx1861_pos
    gt rx1861_pos, rx1861_eos, rx1861_fail4226
    repr_bind_attr_int rx1861_cur, rx1861_curclass, "$!from", rx1861_pos
  rxscan1862_scan4231:
    nqp_rxmark rx1861_bstack, rxscan1862_loop4230, rx1861_pos, 0
  rxscan1862_done4232:
    add $I11, rx1861_pos, 1
    gt $I11, rx1861_eos, rx1861_fail4226
    substr $S10, rx1861_tgt, rx1861_pos, 1
    ne $S10, ucs4:">", rx1861_fail4226
    add rx1861_pos, 1
    rx1861_cur."!cursor_pass"(rx1861_pos, 'backtrack'=>1)
    .return (rx1861_cur)
  rx1861_restart4225:
    repr_get_attr_obj rx1861_cstack, rx1861_cur, rx1861_curclass, "$!cstack"
  rx1861_fail4226:
    unless rx1861_bstack, rx1861_done4224
    pop $I19, rx1861_bstack
    if_null rx1861_cstack, rx1861_cstack_done4229
    unless rx1861_cstack, rx1861_cstack_done4229
    dec $I19
    set $P11, rx1861_cstack[$I19]
  rx1861_cstack_done4229:
    pop rx1861_rep, rx1861_bstack
    pop rx1861_pos, rx1861_bstack
    pop $I19, rx1861_bstack
    lt rx1861_pos, -1, rx1861_done4224
    lt rx1861_pos, 0, rx1861_fail4226
    eq $I19, 0, rx1861_fail4226
    nqp_islist $I20, rx1861_cstack
    unless $I20, rx1861_jump4227
    elements $I18, rx1861_bstack
    le $I18, 0, rx1861_cut4228
    dec $I18
    set $I18, rx1861_bstack[$I18]
  rx1861_cut4228:
    assign rx1861_cstack, $I18
  rx1861_jump4227:
    jump $I19
  rx1861_done4224:
    rx1861_cur."!cursor_fail"()
    .return (rx1861_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_239_1360432459.413") :anon :lex :outer("cuid_237_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local string rx1863_tgt
    .local int rx1863_pos
    .local int rx1863_off
    .local int rx1863_eos
    .local int rx1863_rep
    .local pmc rx1863_cur
    .local pmc rx1863_curclass
    .local pmc rx1863_bstack
    .local pmc rx1863_cstack
    (rx1863_cur, rx1863_tgt, rx1863_pos, rx1863_curclass, rx1863_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1863_cur
    length rx1863_eos, rx1863_tgt
    eq $I19, 1, rx1863_restart4236
    gt rx1863_pos, rx1863_eos, rx1863_fail4237
    repr_get_attr_int $I11, self, rx1863_curclass, "$!from"
    ne $I11, -1, rxscan1864_done4243
    goto rxscan1864_scan4242
  rxscan1864_loop4241:
    inc rx1863_pos
    gt rx1863_pos, rx1863_eos, rx1863_fail4237
    repr_bind_attr_int rx1863_cur, rx1863_curclass, "$!from", rx1863_pos
  rxscan1864_scan4242:
    nqp_rxmark rx1863_bstack, rxscan1864_loop4241, rx1863_pos, 0
  rxscan1864_done4243:
    add $I11, rx1863_pos, 1
    gt $I11, rx1863_eos, rx1863_fail4237
    substr $S10, rx1863_tgt, rx1863_pos, 1
    ne $S10, ucs4:"{", rx1863_fail4237
    add rx1863_pos, 1
    rx1863_cur."!cursor_pass"(rx1863_pos, 'backtrack'=>1)
    .return (rx1863_cur)
  rx1863_restart4236:
    repr_get_attr_obj rx1863_cstack, rx1863_cur, rx1863_curclass, "$!cstack"
  rx1863_fail4237:
    unless rx1863_bstack, rx1863_done4235
    pop $I19, rx1863_bstack
    if_null rx1863_cstack, rx1863_cstack_done4240
    unless rx1863_cstack, rx1863_cstack_done4240
    dec $I19
    set $P11, rx1863_cstack[$I19]
  rx1863_cstack_done4240:
    pop rx1863_rep, rx1863_bstack
    pop rx1863_pos, rx1863_bstack
    pop $I19, rx1863_bstack
    lt rx1863_pos, -1, rx1863_done4235
    lt rx1863_pos, 0, rx1863_fail4237
    eq $I19, 0, rx1863_fail4237
    nqp_islist $I20, rx1863_cstack
    unless $I20, rx1863_jump4238
    elements $I18, rx1863_bstack
    le $I18, 0, rx1863_cut4239
    dec $I18
    set $I18, rx1863_bstack[$I18]
  rx1863_cut4239:
    assign rx1863_cstack, $I18
  rx1863_jump4238:
    jump $I19
  rx1863_done4235:
    rx1863_cur."!cursor_fail"()
    .return (rx1863_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<?{ }>" :subid("cuid_240_1360432459.413") :anon :lex :outer("cuid_414_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1441
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_241_1360432459.413' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1866_tgt
    .local int rx1866_pos
    .local int rx1866_off
    .local int rx1866_eos
    .local int rx1866_rep
    .local pmc rx1866_cur
    .local pmc rx1866_curclass
    .local pmc rx1866_bstack
    .local pmc rx1866_cstack
    (rx1866_cur, rx1866_tgt, rx1866_pos, rx1866_curclass, rx1866_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1866_cur
    length rx1866_eos, rx1866_tgt
    eq $I19, 1, rx1866_restart4247
    gt rx1866_pos, rx1866_eos, rx1866_fail4248
    repr_get_attr_int $I11, self, rx1866_curclass, "$!from"
    ne $I11, -1, rxscan1867_done4254
    goto rxscan1867_scan4253
  rxscan1867_loop4252:
    inc rx1866_pos
    gt rx1866_pos, rx1866_eos, rx1866_fail4248
    repr_bind_attr_int rx1866_cur, rx1866_curclass, "$!from", rx1866_pos
  rxscan1867_scan4253:
    nqp_rxmark rx1866_bstack, rxscan1867_loop4252, rx1866_pos, 0
  rxscan1867_done4254:
    nqp_rxmark rx1866_bstack, rxcap1868_fail4256, rx1866_pos, 0
    ge rx1866_pos, rx1866_eos, rx1866_fail4248
    substr $S11, rx1866_tgt, rx1866_pos, 1
    index $I11, ucs4:"?!", $S11
    lt $I11, 0, rx1866_fail4248
    inc rx1866_pos
    .const 'Sub' $P5001 = 'cuid_241_1360432459.413' 
    capture_lex $P5001
    repr_bind_attr_int rx1866_cur, rx1866_curclass, "$!pos", rx1866_pos
    $P11 = rx1866_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1866_curclass, "$!pos"
    lt $I11, 0, rx1866_fail4248
    nqp_rxpeek $I19, rx1866_bstack, rxcap1868_fail4256
    inc $I19
    set $I11, rx1866_bstack[$I19]
    repr_bind_attr_int rx1866_cur, rx1866_curclass, "$!pos", rx1866_pos
    $P11 = rx1866_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1866_pos)
    rx1866_cstack = rx1866_cur."!cursor_capture"($P11, "zw")
    goto rxcap1868_done4255
  rxcap1868_fail4256:
    goto rx1866_fail4248
  rxcap1868_done4255:
    repr_bind_attr_int rx1866_cur, rx1866_curclass, "$!pos", rx1866_pos
    $P11 = rx1866_cur."codeblock"()
    repr_get_attr_int $I11, $P11, rx1866_curclass, "$!pos"
    lt $I11, 0, rx1866_fail4248
    nqp_rxmark rx1866_bstack, rxsubrule1871_pass4267, -1, 0
  rxsubrule1871_pass4267:
    rx1866_cstack = rx1866_cur."!cursor_capture"($P11, "codeblock")
    repr_get_attr_int rx1866_pos, $P11, rx1866_curclass, "$!pos"
    rx1866_cur."!cursor_pass"(rx1866_pos, "assertion:sym<?{ }>", 'backtrack'=>1)
    .return (rx1866_cur)
  rx1866_restart4247:
    repr_get_attr_obj rx1866_cstack, rx1866_cur, rx1866_curclass, "$!cstack"
  rx1866_fail4248:
    unless rx1866_bstack, rx1866_done4246
    pop $I19, rx1866_bstack
    if_null rx1866_cstack, rx1866_cstack_done4251
    unless rx1866_cstack, rx1866_cstack_done4251
    dec $I19
    set $P11, rx1866_cstack[$I19]
  rx1866_cstack_done4251:
    pop rx1866_rep, rx1866_bstack
    pop rx1866_pos, rx1866_bstack
    pop $I19, rx1866_bstack
    lt rx1866_pos, -1, rx1866_done4246
    lt rx1866_pos, 0, rx1866_fail4248
    eq $I19, 0, rx1866_fail4248
    nqp_islist $I20, rx1866_cstack
    unless $I20, rx1866_jump4249
    elements $I18, rx1866_bstack
    le $I18, 0, rx1866_cut4250
    dec $I18
    set $I18, rx1866_bstack[$I18]
  rx1866_cut4250:
    assign rx1866_cstack, $I18
  rx1866_jump4249:
    jump $I19
  rx1866_done4246:
    rx1866_cur."!cursor_fail"()
    .return (rx1866_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_241_1360432459.413") :anon :lex :outer("cuid_240_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local string rx1869_tgt
    .local int rx1869_pos
    .local int rx1869_off
    .local int rx1869_eos
    .local int rx1869_rep
    .local pmc rx1869_cur
    .local pmc rx1869_curclass
    .local pmc rx1869_bstack
    .local pmc rx1869_cstack
    (rx1869_cur, rx1869_tgt, rx1869_pos, rx1869_curclass, rx1869_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1869_cur
    length rx1869_eos, rx1869_tgt
    eq $I19, 1, rx1869_restart4259
    gt rx1869_pos, rx1869_eos, rx1869_fail4260
    repr_get_attr_int $I11, self, rx1869_curclass, "$!from"
    ne $I11, -1, rxscan1870_done4266
    goto rxscan1870_scan4265
  rxscan1870_loop4264:
    inc rx1869_pos
    gt rx1869_pos, rx1869_eos, rx1869_fail4260
    repr_bind_attr_int rx1869_cur, rx1869_curclass, "$!from", rx1869_pos
  rxscan1870_scan4265:
    nqp_rxmark rx1869_bstack, rxscan1870_loop4264, rx1869_pos, 0
  rxscan1870_done4266:
    add $I11, rx1869_pos, 1
    gt $I11, rx1869_eos, rx1869_fail4260
    substr $S10, rx1869_tgt, rx1869_pos, 1
    ne $S10, ucs4:"{", rx1869_fail4260
    add rx1869_pos, 1
    rx1869_cur."!cursor_pass"(rx1869_pos, 'backtrack'=>1)
    .return (rx1869_cur)
  rx1869_restart4259:
    repr_get_attr_obj rx1869_cstack, rx1869_cur, rx1869_curclass, "$!cstack"
  rx1869_fail4260:
    unless rx1869_bstack, rx1869_done4258
    pop $I19, rx1869_bstack
    if_null rx1869_cstack, rx1869_cstack_done4263
    unless rx1869_cstack, rx1869_cstack_done4263
    dec $I19
    set $P11, rx1869_cstack[$I19]
  rx1869_cstack_done4263:
    pop rx1869_rep, rx1869_bstack
    pop rx1869_pos, rx1869_bstack
    pop $I19, rx1869_bstack
    lt rx1869_pos, -1, rx1869_done4258
    lt rx1869_pos, 0, rx1869_fail4260
    eq $I19, 0, rx1869_fail4260
    nqp_islist $I20, rx1869_cstack
    unless $I20, rx1869_jump4261
    elements $I18, rx1869_bstack
    le $I18, 0, rx1869_cut4262
    dec $I18
    set $I18, rx1869_bstack[$I18]
  rx1869_cut4262:
    assign rx1869_cstack, $I18
  rx1869_jump4261:
    jump $I19
  rx1869_done4258:
    rx1869_cur."!cursor_fail"()
    .return (rx1869_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<name>" :subid("cuid_242_1360432459.413") :anon :lex :outer("cuid_414_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1445
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_243_1360432459.413' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1872_tgt
    .local int rx1872_pos
    .local int rx1872_off
    .local int rx1872_eos
    .local int rx1872_rep
    .local pmc rx1872_cur
    .local pmc rx1872_curclass
    .local pmc rx1872_bstack
    .local pmc rx1872_cstack
    (rx1872_cur, rx1872_tgt, rx1872_pos, rx1872_curclass, rx1872_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1872_cur
    length rx1872_eos, rx1872_tgt
    eq $I19, 1, rx1872_restart4270
    gt rx1872_pos, rx1872_eos, rx1872_fail4271
    repr_get_attr_int $I11, self, rx1872_curclass, "$!from"
    ne $I11, -1, rxscan1873_done4277
    goto rxscan1873_scan4276
  rxscan1873_loop4275:
    inc rx1872_pos
    gt rx1872_pos, rx1872_eos, rx1872_fail4271
    repr_bind_attr_int rx1872_cur, rx1872_curclass, "$!from", rx1872_pos
  rxscan1873_scan4276:
    nqp_rxmark rx1872_bstack, rxscan1873_loop4275, rx1872_pos, 0
  rxscan1873_done4277:
    repr_bind_attr_int rx1872_cur, rx1872_curclass, "$!pos", rx1872_pos
    $P11 = rx1872_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx1872_curclass, "$!pos"
    lt $I11, 0, rx1872_fail4271
    nqp_rxmark rx1872_bstack, rxsubrule1874_pass4278, -1, 0
  rxsubrule1874_pass4278:
    rx1872_cstack = rx1872_cur."!cursor_capture"($P11, "longname")
    repr_get_attr_int rx1872_pos, $P11, rx1872_curclass, "$!pos"
    nqp_rxmark rx1872_bstack, rxquantr1875_done4280, rx1872_pos, 0
  rxquantr1875_loop4279:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1876_04282
    nqp_push_label $P11, alt1876_14293
    nqp_push_label $P11, alt1876_24295
    nqp_push_label $P11, alt1876_34297
    nqp_push_label $P11, alt1876_44299
    nqp_rxmark rx1872_bstack, alt1876_end4281, -1, 0
    rx1872_cur."!alt"(rx1872_pos, "alt_nfa__42_1360432462.68", $P11)
    goto rx1872_fail4271
  alt1876_04282:
    .const 'Sub' $P5001 = 'cuid_243_1360432459.413' 
    capture_lex $P5001
    repr_bind_attr_int rx1872_cur, rx1872_curclass, "$!pos", rx1872_pos
    $P11 = rx1872_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1872_curclass, "$!pos"
    lt $I11, 0, rx1872_fail4271
    goto alt1876_end4281
  alt1876_14293:
    add $I11, rx1872_pos, 1
    gt $I11, rx1872_eos, rx1872_fail4271
    substr $S10, rx1872_tgt, rx1872_pos, 1
    ne $S10, ucs4:"=", rx1872_fail4271
    add rx1872_pos, 1
    repr_bind_attr_int rx1872_cur, rx1872_curclass, "$!pos", rx1872_pos
    $P11 = rx1872_cur."assertion"()
    repr_get_attr_int $I11, $P11, rx1872_curclass, "$!pos"
    lt $I11, 0, rx1872_fail4271
    nqp_rxmark rx1872_bstack, rxsubrule1879_pass4294, -1, 0
  rxsubrule1879_pass4294:
    rx1872_cstack = rx1872_cur."!cursor_capture"($P11, "assertion")
    repr_get_attr_int rx1872_pos, $P11, rx1872_curclass, "$!pos"
    goto alt1876_end4281
  alt1876_24295:
    add $I11, rx1872_pos, 1
    gt $I11, rx1872_eos, rx1872_fail4271
    substr $S10, rx1872_tgt, rx1872_pos, 1
    ne $S10, ucs4:":", rx1872_fail4271
    add rx1872_pos, 1
    repr_bind_attr_int rx1872_cur, rx1872_curclass, "$!pos", rx1872_pos
    $P11 = rx1872_cur."arglist"()
    repr_get_attr_int $I11, $P11, rx1872_curclass, "$!pos"
    lt $I11, 0, rx1872_fail4271
    nqp_rxmark rx1872_bstack, rxsubrule1880_pass4296, -1, 0
  rxsubrule1880_pass4296:
    rx1872_cstack = rx1872_cur."!cursor_capture"($P11, "arglist")
    repr_get_attr_int rx1872_pos, $P11, rx1872_curclass, "$!pos"
    goto alt1876_end4281
  alt1876_34297:
    add $I11, rx1872_pos, 1
    gt $I11, rx1872_eos, rx1872_fail4271
    substr $S10, rx1872_tgt, rx1872_pos, 1
    ne $S10, ucs4:"(", rx1872_fail4271
    add rx1872_pos, 1
    repr_bind_attr_int rx1872_cur, rx1872_curclass, "$!pos", rx1872_pos
    $P11 = rx1872_cur."LANG"("MAIN", "arglist")
    repr_get_attr_int $I11, $P11, rx1872_curclass, "$!pos"
    lt $I11, 0, rx1872_fail4271
    nqp_rxmark rx1872_bstack, rxsubrule1881_pass4298, -1, 0
  rxsubrule1881_pass4298:
    rx1872_cstack = rx1872_cur."!cursor_capture"($P11, "arglist")
    repr_get_attr_int rx1872_pos, $P11, rx1872_curclass, "$!pos"
    add $I11, rx1872_pos, 1
    gt $I11, rx1872_eos, rx1872_fail4271
    substr $S10, rx1872_tgt, rx1872_pos, 1
    ne $S10, ucs4:")", rx1872_fail4271
    add rx1872_pos, 1
    goto alt1876_end4281
  alt1876_44299:
    repr_bind_attr_int rx1872_cur, rx1872_curclass, "$!pos", rx1872_pos
    $P11 = rx1872_cur."normspace"()
    repr_get_attr_int $I11, $P11, rx1872_curclass, "$!pos"
    lt $I11, 0, rx1872_fail4271
    repr_get_attr_int rx1872_pos, $P11, rx1872_curclass, "$!pos"
    repr_bind_attr_int rx1872_cur, rx1872_curclass, "$!pos", rx1872_pos
    $P11 = rx1872_cur."nibbler"()
    repr_get_attr_int $I11, $P11, rx1872_curclass, "$!pos"
    lt $I11, 0, rx1872_fail4271
    nqp_rxmark rx1872_bstack, rxsubrule1883_pass4301, -1, 0
  rxsubrule1883_pass4301:
    rx1872_cstack = rx1872_cur."!cursor_capture"($P11, "nibbler")
    repr_get_attr_int rx1872_pos, $P11, rx1872_curclass, "$!pos"
    goto alt1876_end4281
  alt1876_end4281:
    nqp_rxpeek $I19, rx1872_bstack, rxquantr1875_done4280
    inc $I19
    inc $I19
    set rx1872_rep, rx1872_bstack[$I19]
    nqp_rxcommit rx1872_bstack, rxquantr1875_done4280
    inc rx1872_rep
  rxquantr1875_done4280:
    rx1872_cur."!cursor_pass"(rx1872_pos, "assertion:sym<name>", 'backtrack'=>1)
    .return (rx1872_cur)
  rx1872_restart4270:
    repr_get_attr_obj rx1872_cstack, rx1872_cur, rx1872_curclass, "$!cstack"
  rx1872_fail4271:
    unless rx1872_bstack, rx1872_done4269
    pop $I19, rx1872_bstack
    if_null rx1872_cstack, rx1872_cstack_done4274
    unless rx1872_cstack, rx1872_cstack_done4274
    dec $I19
    set $P11, rx1872_cstack[$I19]
  rx1872_cstack_done4274:
    pop rx1872_rep, rx1872_bstack
    pop rx1872_pos, rx1872_bstack
    pop $I19, rx1872_bstack
    lt rx1872_pos, -1, rx1872_done4269
    lt rx1872_pos, 0, rx1872_fail4271
    eq $I19, 0, rx1872_fail4271
    nqp_islist $I20, rx1872_cstack
    unless $I20, rx1872_jump4272
    elements $I18, rx1872_bstack
    le $I18, 0, rx1872_cut4273
    dec $I18
    set $I18, rx1872_bstack[$I18]
  rx1872_cut4273:
    assign rx1872_cstack, $I18
  rx1872_jump4272:
    jump $I19
  rx1872_done4269:
    rx1872_cur."!cursor_fail"()
    .return (rx1872_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_243_1360432459.413") :anon :lex :outer("cuid_242_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local string rx1877_tgt
    .local int rx1877_pos
    .local int rx1877_off
    .local int rx1877_eos
    .local int rx1877_rep
    .local pmc rx1877_cur
    .local pmc rx1877_curclass
    .local pmc rx1877_bstack
    .local pmc rx1877_cstack
    (rx1877_cur, rx1877_tgt, rx1877_pos, rx1877_curclass, rx1877_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1877_cur
    length rx1877_eos, rx1877_tgt
    eq $I19, 1, rx1877_restart4285
    gt rx1877_pos, rx1877_eos, rx1877_fail4286
    repr_get_attr_int $I11, self, rx1877_curclass, "$!from"
    ne $I11, -1, rxscan1878_done4292
    goto rxscan1878_scan4291
  rxscan1878_loop4290:
    inc rx1877_pos
    gt rx1877_pos, rx1877_eos, rx1877_fail4286
    repr_bind_attr_int rx1877_cur, rx1877_curclass, "$!from", rx1877_pos
  rxscan1878_scan4291:
    nqp_rxmark rx1877_bstack, rxscan1878_loop4290, rx1877_pos, 0
  rxscan1878_done4292:
    add $I11, rx1877_pos, 1
    gt $I11, rx1877_eos, rx1877_fail4286
    substr $S10, rx1877_tgt, rx1877_pos, 1
    ne $S10, ucs4:">", rx1877_fail4286
    add rx1877_pos, 1
    rx1877_cur."!cursor_pass"(rx1877_pos, 'backtrack'=>1)
    .return (rx1877_cur)
  rx1877_restart4285:
    repr_get_attr_obj rx1877_cstack, rx1877_cur, rx1877_curclass, "$!cstack"
  rx1877_fail4286:
    unless rx1877_bstack, rx1877_done4284
    pop $I19, rx1877_bstack
    if_null rx1877_cstack, rx1877_cstack_done4289
    unless rx1877_cstack, rx1877_cstack_done4289
    dec $I19
    set $P11, rx1877_cstack[$I19]
  rx1877_cstack_done4289:
    pop rx1877_rep, rx1877_bstack
    pop rx1877_pos, rx1877_bstack
    pop $I19, rx1877_bstack
    lt rx1877_pos, -1, rx1877_done4284
    lt rx1877_pos, 0, rx1877_fail4286
    eq $I19, 0, rx1877_fail4286
    nqp_islist $I20, rx1877_cstack
    unless $I20, rx1877_jump4287
    elements $I18, rx1877_bstack
    le $I18, 0, rx1877_cut4288
    dec $I18
    set $I18, rx1877_bstack[$I18]
  rx1877_cut4288:
    assign rx1877_cstack, $I18
  rx1877_jump4287:
    jump $I19
  rx1877_done4284:
    rx1877_cur."!cursor_fail"()
    .return (rx1877_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<var>" :subid("cuid_244_1360432459.413") :anon :lex :outer("cuid_414_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1456
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1884_tgt
    .local int rx1884_pos
    .local int rx1884_off
    .local int rx1884_eos
    .local int rx1884_rep
    .local pmc rx1884_cur
    .local pmc rx1884_curclass
    .local pmc rx1884_bstack
    .local pmc rx1884_cstack
    (rx1884_cur, rx1884_tgt, rx1884_pos, rx1884_curclass, rx1884_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1884_cur
    length rx1884_eos, rx1884_tgt
    eq $I19, 1, rx1884_restart4304
    gt rx1884_pos, rx1884_eos, rx1884_fail4305
    repr_get_attr_int $I11, self, rx1884_curclass, "$!from"
    ne $I11, -1, rxscan1885_done4311
    goto rxscan1885_scan4310
  rxscan1885_loop4309:
    inc rx1884_pos
    gt rx1884_pos, rx1884_eos, rx1884_fail4305
    repr_bind_attr_int rx1884_cur, rx1884_curclass, "$!from", rx1884_pos
  rxscan1885_scan4310:
    nqp_rxmark rx1884_bstack, rxscan1885_loop4309, rx1884_pos, 0
  rxscan1885_done4311:
    ge rx1884_pos, rx1884_eos, rx1884_fail4305
    substr $S11, rx1884_tgt, rx1884_pos, 1
    index $I11, ucs4:"$@", $S11
    lt $I11, 0, rx1884_fail4305
    repr_bind_attr_int rx1884_cur, rx1884_curclass, "$!pos", rx1884_pos
    $P11 = rx1884_cur."LANG"("MAIN", "variable")
    repr_get_attr_int $I11, $P11, rx1884_curclass, "$!pos"
    lt $I11, 0, rx1884_fail4305
    nqp_rxmark rx1884_bstack, rxsubrule1886_pass4312, -1, 0
  rxsubrule1886_pass4312:
    rx1884_cstack = rx1884_cur."!cursor_capture"($P11, "var")
    repr_get_attr_int rx1884_pos, $P11, rx1884_curclass, "$!pos"
    rx1884_cur."!cursor_pass"(rx1884_pos, "assertion:sym<var>", 'backtrack'=>1)
    .return (rx1884_cur)
  rx1884_restart4304:
    repr_get_attr_obj rx1884_cstack, rx1884_cur, rx1884_curclass, "$!cstack"
  rx1884_fail4305:
    unless rx1884_bstack, rx1884_done4303
    pop $I19, rx1884_bstack
    if_null rx1884_cstack, rx1884_cstack_done4308
    unless rx1884_cstack, rx1884_cstack_done4308
    dec $I19
    set $P11, rx1884_cstack[$I19]
  rx1884_cstack_done4308:
    pop rx1884_rep, rx1884_bstack
    pop rx1884_pos, rx1884_bstack
    pop $I19, rx1884_bstack
    lt rx1884_pos, -1, rx1884_done4303
    lt rx1884_pos, 0, rx1884_fail4305
    eq $I19, 0, rx1884_fail4305
    nqp_islist $I20, rx1884_cstack
    unless $I20, rx1884_jump4306
    elements $I18, rx1884_bstack
    le $I18, 0, rx1884_cut4307
    dec $I18
    set $I18, rx1884_bstack[$I18]
  rx1884_cut4307:
    assign rx1884_cstack, $I18
  rx1884_jump4306:
    jump $I19
  rx1884_done4303:
    rx1884_cur."!cursor_fail"()
    .return (rx1884_cur) 
.end
.HLL "nqp"
.namespace []
.sub "codeblock" :subid("cuid_245_1360432459.413") :anon :lex :outer("cuid_414_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1460
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1887_tgt
    .local int rx1887_pos
    .local int rx1887_off
    .local int rx1887_eos
    .local int rx1887_rep
    .local pmc rx1887_cur
    .local pmc rx1887_curclass
    .local pmc rx1887_bstack
    .local pmc rx1887_cstack
    (rx1887_cur, rx1887_tgt, rx1887_pos, rx1887_curclass, rx1887_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1887_cur
    length rx1887_eos, rx1887_tgt
    eq $I19, 1, rx1887_restart4315
    gt rx1887_pos, rx1887_eos, rx1887_fail4316
    repr_get_attr_int $I11, self, rx1887_curclass, "$!from"
    ne $I11, -1, rxscan1888_done4322
    goto rxscan1888_scan4321
  rxscan1888_loop4320:
    inc rx1887_pos
    gt rx1887_pos, rx1887_eos, rx1887_fail4316
    repr_bind_attr_int rx1887_cur, rx1887_curclass, "$!from", rx1887_pos
  rxscan1888_scan4321:
    nqp_rxmark rx1887_bstack, rxscan1888_loop4320, rx1887_pos, 0
  rxscan1888_done4322:
    repr_bind_attr_int rx1887_cur, rx1887_curclass, "$!pos", rx1887_pos
    $P11 = rx1887_cur."LANG"("MAIN", "pblock")
    repr_get_attr_int $I11, $P11, rx1887_curclass, "$!pos"
    lt $I11, 0, rx1887_fail4316
    nqp_rxmark rx1887_bstack, rxsubrule1889_pass4323, -1, 0
  rxsubrule1889_pass4323:
    rx1887_cstack = rx1887_cur."!cursor_capture"($P11, "block")
    repr_get_attr_int rx1887_pos, $P11, rx1887_curclass, "$!pos"
    rx1887_cur."!cursor_pass"(rx1887_pos, "codeblock", 'backtrack'=>1)
    .return (rx1887_cur)
  rx1887_restart4315:
    repr_get_attr_obj rx1887_cstack, rx1887_cur, rx1887_curclass, "$!cstack"
  rx1887_fail4316:
    unless rx1887_bstack, rx1887_done4314
    pop $I19, rx1887_bstack
    if_null rx1887_cstack, rx1887_cstack_done4319
    unless rx1887_cstack, rx1887_cstack_done4319
    dec $I19
    set $P11, rx1887_cstack[$I19]
  rx1887_cstack_done4319:
    pop rx1887_rep, rx1887_bstack
    pop rx1887_pos, rx1887_bstack
    pop $I19, rx1887_bstack
    lt rx1887_pos, -1, rx1887_done4314
    lt rx1887_pos, 0, rx1887_fail4316
    eq $I19, 0, rx1887_fail4316
    nqp_islist $I20, rx1887_cstack
    unless $I20, rx1887_jump4317
    elements $I18, rx1887_bstack
    le $I18, 0, rx1887_cut4318
    dec $I18
    set $I18, rx1887_bstack[$I18]
  rx1887_cut4318:
    assign rx1887_cstack, $I18
  rx1887_jump4317:
    jump $I19
  rx1887_done4314:
    rx1887_cur."!cursor_fail"()
    .return (rx1887_cur) 
.end
.HLL "nqp"
.namespace []
.sub "arg" :subid("cuid_246_1360432459.413") :anon :lex :outer("cuid_414_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1464
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local string rx1890_tgt
    .local int rx1890_pos
    .local int rx1890_off
    .local int rx1890_eos
    .local int rx1890_rep
    .local pmc rx1890_cur
    .local pmc rx1890_curclass
    .local pmc rx1890_bstack
    .local pmc rx1890_cstack
    (rx1890_cur, rx1890_tgt, rx1890_pos, rx1890_curclass, rx1890_bstack, $I19) = self."!cursor_start"()
    store_lex unicode:"$\x{a2}", rx1890_cur
    length rx1890_eos, rx1890_tgt
    eq $I19, 1, rx1890_restart4326
    gt rx1890_pos, rx1890_eos, rx1890_fail4327
    repr_get_attr_int $I11, self, rx1890_curclass, "$!from"
    ne $I11, -1, rxscan1891_done4333
    goto rxscan1891_scan4332
  rxscan1891_loop4331:
    inc rx1890_pos
    gt rx1890_pos, rx1890_eos, rx1890_fail4327
    repr_bind_attr_int rx1890_cur, rx1890_curclass, "$!from", rx1890_pos
  rxscan1891_scan4332:
    nqp_rxmark rx1890_bstack, rxscan1891_loop4331, rx1890_pos, 0
  rxscan1891_done4333:
    repr_bind_attr_int rx1890_cur, rx1890_curclass, "$!pos", rx1890_pos
    $P11 = rx1890_cur."LANG"("MAIN", "quote_EXPR")
    repr_get_attr_int $I11, $P11, rx1890_curclass, "$!pos"
    lt $I11, 0, rx1890_fail4327
    nqp_rxmark rx1890_bstack, rxsubrule1892_pass4334, -1, 0
  rxsubrule1892_pass4334:
    rx1890_cstack = rx1890_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1890_pos, $P11, rx1890_curclass, "$!pos"
    rx1890_cur."!cursor_pass"(rx1890_pos, "arg", 'backtrack'=>1)
    .return (rx1890_cur)
  rx1890_restart4326:
    repr_get_attr_obj rx1890_cstack, rx1890_cur, rx1890_curclass, "$!cstack"
  rx1890_fail4327:
    unless rx1890_bstack, rx1890_done4325
    pop $I19, rx1890_bstack
    if_null rx1890_cstack, rx1890_cstack_done4330
    unless rx1890_cstack, rx1890_cstack_done4330
    dec $I19
    set $P11, rx1890_cstack[$I19]
  rx1890_cstack_done4330:
    pop rx1890_rep, rx1890_bstack
    pop rx1890_pos, rx1890_bstack
    pop $I19, rx1890_bstack
    lt rx1890_pos, -1, rx1890_done4325
    lt rx1890_pos, 0, rx1890_fail4327
    eq $I19, 0, rx1890_fail4327
    nqp_islist $I20, rx1890_cstack
    unless $I20, rx1890_jump4328
    elements $I18, rx1890_bstack
    le $I18, 0, rx1890_cut4329
    dec $I18
    set $I18, rx1890_bstack[$I18]
  rx1890_cut4329:
    assign rx1890_cstack, $I18
  rx1890_jump4328:
    jump $I19
  rx1890_done4325:
    rx1890_cur."!cursor_fail"()
    .return (rx1890_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_415_1360432459.413") :anon :lex :outer("cuid_372_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1473
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$var", $P101 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_274 
    .local pmc fb_tmp_275 
    .local pmc fb_tmp_276 
    .local pmc fb_tmp_277 
    .local pmc fb_tmp_278 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    set fb_tmp_274, _lex_param_1
    repr_defined $I5001, fb_tmp_274
    unless $I5001 goto if1895_else4338 
    set $P5002, fb_tmp_274[0]
    set $P5004, $P5002
    goto if1895_end4339
  if1895_else4338:
    null $P5003
    set $P5004, $P5003
  if1895_end4339:
    unless_null $P5004, vivi_18964340
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_18964340:
    set $P101, $P5004
    nqp_get_sc_object $P5008, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5007, $P5008, "QAST"
    get_who $P5006, $P5007
    set fb_tmp_275, $P5006
    repr_defined $I5003, fb_tmp_275
    unless $I5003 goto if1898_else4343 
    set $P5009, fb_tmp_275["Var"]
    set $P5011, $P5009
    goto if1898_end4344
  if1898_else4343:
    null $P5010
    set $P5011, $P5010
  if1898_end4344:
    unless_null $P5011, vivi_18994345
    nqp_get_sc_object $P5012, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5011, $P5012
  vivi_18994345:
    type_check $I5002, $P101, $P5011
    if $I5002 goto unless1897_end4342 
.annotate 'line', 1475
    box $P5013, "Pre-increment can only work on a variable"
    die $P5013
  unless1897_end4342:
.annotate 'line', 1478
    nqp_get_sc_object $P5016, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5015, $P5016, "QAST"
    get_who $P5014, $P5015
    set fb_tmp_276, $P5014
    repr_defined $I5004, fb_tmp_276
    unless $I5004 goto if1900_else4346 
    set $P5017, fb_tmp_276["Op"]
    set $P5019, $P5017
    goto if1900_end4347
  if1900_else4346:
    null $P5018
    set $P5019, $P5018
  if1900_end4347:
    unless_null $P5019, vivi_19014348
    nqp_get_sc_object $P5020, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5019, $P5020
  vivi_19014348:
.annotate 'line', 1481
    nqp_get_sc_object $P5023, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5022, $P5023, "QAST"
    get_who $P5021, $P5022
    set fb_tmp_277, $P5021
    repr_defined $I5005, fb_tmp_277
    unless $I5005 goto if1902_else4349 
    set $P5024, fb_tmp_277["Op"]
    set $P5026, $P5024
    goto if1902_end4350
  if1902_else4349:
    null $P5025
    set $P5026, $P5025
  if1902_end4350:
    unless_null $P5026, vivi_19034351
    nqp_get_sc_object $P5027, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5026, $P5027
  vivi_19034351:
.annotate 'line', 1484
    nqp_get_sc_object $P5030, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5029, $P5030, "QAST"
    get_who $P5028, $P5029
    set fb_tmp_278, $P5028
    repr_defined $I5006, fb_tmp_278
    unless $I5006 goto if1904_else4352 
    set $P5031, fb_tmp_278["IVal"]
    set $P5033, $P5031
    goto if1904_end4353
  if1904_else4352:
    null $P5032
    set $P5033, $P5032
  if1904_end4353:
    unless_null $P5033, vivi_19054354
    nqp_get_sc_object $P5034, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5033, $P5034
  vivi_19054354:
    $P5035 = $P5033."new"(1 :named("value"))
    $P5036 = $P5026."new"($P101, $P5035, "add_n" :named("op"))
    $P5037 = $P5019."new"($P101, $P5036, "bind" :named("op"))
    $P5038 = _lex_param_0."as_post"($P5037)
    .return ($P5038) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_416_1360432459.413") :anon :lex :outer("cuid_372_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1488
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$var", $P101 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_279 
    .local pmc fb_tmp_280 
    .local pmc fb_tmp_281 
    .local pmc fb_tmp_282 
    .local pmc fb_tmp_283 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    set fb_tmp_279, _lex_param_1
    repr_defined $I5001, fb_tmp_279
    unless $I5001 goto if1906_else4355 
    set $P5002, fb_tmp_279[0]
    set $P5004, $P5002
    goto if1906_end4356
  if1906_else4355:
    null $P5003
    set $P5004, $P5003
  if1906_end4356:
    unless_null $P5004, vivi_19074357
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_19074357:
    set $P101, $P5004
    nqp_get_sc_object $P5008, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5007, $P5008, "QAST"
    get_who $P5006, $P5007
    set fb_tmp_280, $P5006
    repr_defined $I5003, fb_tmp_280
    unless $I5003 goto if1909_else4360 
    set $P5009, fb_tmp_280["Var"]
    set $P5011, $P5009
    goto if1909_end4361
  if1909_else4360:
    null $P5010
    set $P5011, $P5010
  if1909_end4361:
    unless_null $P5011, vivi_19104362
    nqp_get_sc_object $P5012, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5011, $P5012
  vivi_19104362:
    type_check $I5002, $P101, $P5011
    if $I5002 goto unless1908_end4359 
.annotate 'line', 1490
    box $P5013, "Pre-decrement can only work on a variable"
    die $P5013
  unless1908_end4359:
.annotate 'line', 1493
    nqp_get_sc_object $P5016, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5015, $P5016, "QAST"
    get_who $P5014, $P5015
    set fb_tmp_281, $P5014
    repr_defined $I5004, fb_tmp_281
    unless $I5004 goto if1911_else4363 
    set $P5017, fb_tmp_281["Op"]
    set $P5019, $P5017
    goto if1911_end4364
  if1911_else4363:
    null $P5018
    set $P5019, $P5018
  if1911_end4364:
    unless_null $P5019, vivi_19124365
    nqp_get_sc_object $P5020, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5019, $P5020
  vivi_19124365:
.annotate 'line', 1496
    nqp_get_sc_object $P5023, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5022, $P5023, "QAST"
    get_who $P5021, $P5022
    set fb_tmp_282, $P5021
    repr_defined $I5005, fb_tmp_282
    unless $I5005 goto if1913_else4366 
    set $P5024, fb_tmp_282["Op"]
    set $P5026, $P5024
    goto if1913_end4367
  if1913_else4366:
    null $P5025
    set $P5026, $P5025
  if1913_end4367:
    unless_null $P5026, vivi_19144368
    nqp_get_sc_object $P5027, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5026, $P5027
  vivi_19144368:
.annotate 'line', 1499
    nqp_get_sc_object $P5030, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5029, $P5030, "QAST"
    get_who $P5028, $P5029
    set fb_tmp_283, $P5028
    repr_defined $I5006, fb_tmp_283
    unless $I5006 goto if1915_else4369 
    set $P5031, fb_tmp_283["IVal"]
    set $P5033, $P5031
    goto if1915_end4370
  if1915_else4369:
    null $P5032
    set $P5033, $P5032
  if1915_end4370:
    unless_null $P5033, vivi_19164371
    nqp_get_sc_object $P5034, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5033, $P5034
  vivi_19164371:
    $P5035 = $P5033."new"(1 :named("value"))
    $P5036 = $P5026."new"($P101, $P5035, "sub_n" :named("op"))
    $P5037 = $P5019."new"($P101, $P5036, "bind" :named("op"))
    $P5038 = _lex_param_0."as_post"($P5037)
    .return ($P5038) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_417_1360432459.413") :anon :lex :outer("cuid_372_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1503
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$var", $P101 
    .lex "$tmp", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_284 
    .local pmc fb_tmp_285 
    .local pmc fb_tmp_286 
    .local pmc fb_tmp_287 
    .local pmc fb_tmp_288 
    .local pmc fb_tmp_289 
    .local pmc fb_tmp_290 
    .local pmc fb_tmp_291 
    .local pmc fb_tmp_292 
    .local pmc fb_tmp_293 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
    set fb_tmp_284, _lex_param_1
    repr_defined $I5001, fb_tmp_284
    unless $I5001 goto if1917_else4372 
    set $P5003, fb_tmp_284[0]
    set $P5005, $P5003
    goto if1917_end4373
  if1917_else4372:
    null $P5004
    set $P5005, $P5004
  if1917_end4373:
    unless_null $P5005, vivi_19184374
    nqp_get_sc_object $P5006, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5005, $P5006
  vivi_19184374:
    set $P101, $P5005
.annotate 'line', 1505
    nqp_get_sc_object $P5009, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5008, $P5009, "QAST"
    get_who $P5007, $P5008
    set fb_tmp_285, $P5007
    repr_defined $I5002, fb_tmp_285
    unless $I5002 goto if1919_else4375 
    set $P5010, fb_tmp_285["Op"]
    set $P5012, $P5010
    goto if1919_end4376
  if1919_else4375:
    null $P5011
    set $P5012, $P5011
  if1919_end4376:
    unless_null $P5012, vivi_19204377
    nqp_get_sc_object $P5013, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5012, $P5013
  vivi_19204377:
    $P5014 = $P5012."unique"("tmp")
    set $P102, $P5014
    nqp_get_sc_object $P5017, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5016, $P5017, "QAST"
    get_who $P5015, $P5016
    set fb_tmp_286, $P5015
    repr_defined $I5004, fb_tmp_286
    unless $I5004 goto if1922_else4380 
    set $P5018, fb_tmp_286["Var"]
    set $P5020, $P5018
    goto if1922_end4381
  if1922_else4380:
    null $P5019
    set $P5020, $P5019
  if1922_end4381:
    unless_null $P5020, vivi_19234382
    nqp_get_sc_object $P5021, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5020, $P5021
  vivi_19234382:
    type_check $I5003, $P101, $P5020
    if $I5003 goto unless1921_end4379 
.annotate 'line', 1506
    box $P5022, "Post-increment can only work on a variable"
    die $P5022
  unless1921_end4379:
.annotate 'line', 1509
    nqp_get_sc_object $P5025, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5024, $P5025, "QAST"
    get_who $P5023, $P5024
    set fb_tmp_287, $P5023
    repr_defined $I5005, fb_tmp_287
    unless $I5005 goto if1924_else4383 
    set $P5026, fb_tmp_287["Stmt"]
    set $P5028, $P5026
    goto if1924_end4384
  if1924_else4383:
    null $P5027
    set $P5028, $P5027
  if1924_end4384:
    unless_null $P5028, vivi_19254385
    nqp_get_sc_object $P5029, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5028, $P5029
  vivi_19254385:
.annotate 'line', 1511
    nqp_get_sc_object $P5032, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5031, $P5032, "QAST"
    get_who $P5030, $P5031
    set fb_tmp_288, $P5030
    repr_defined $I5006, fb_tmp_288
    unless $I5006 goto if1926_else4386 
    set $P5033, fb_tmp_288["Op"]
    set $P5035, $P5033
    goto if1926_end4387
  if1926_else4386:
    null $P5034
    set $P5035, $P5034
  if1926_end4387:
    unless_null $P5035, vivi_19274388
    nqp_get_sc_object $P5036, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5035, $P5036
  vivi_19274388:
.annotate 'line', 1513
    nqp_get_sc_object $P5039, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5038, $P5039, "QAST"
    get_who $P5037, $P5038
    set fb_tmp_289, $P5037
    repr_defined $I5007, fb_tmp_289
    unless $I5007 goto if1928_else4389 
    set $P5040, fb_tmp_289["Var"]
    set $P5042, $P5040
    goto if1928_end4390
  if1928_else4389:
    null $P5041
    set $P5042, $P5041
  if1928_end4390:
    unless_null $P5042, vivi_19294391
    nqp_get_sc_object $P5043, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5042, $P5043
  vivi_19294391:
    $P5044 = $P101."returns"()
    $P5045 = $P5042."new"($P102 :named("name"), "local" :named("scope"), "var" :named("decl"), $P5044 :named("returns"))
    $P5046 = $P5035."new"($P5045, $P101, "bind" :named("op"))
.annotate 'line', 1516
    nqp_get_sc_object $P5049, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5048, $P5049, "QAST"
    get_who $P5047, $P5048
    set fb_tmp_290, $P5047
    repr_defined $I5008, fb_tmp_290
    unless $I5008 goto if1930_else4392 
    set $P5050, fb_tmp_290["Op"]
    set $P5052, $P5050
    goto if1930_end4393
  if1930_else4392:
    null $P5051
    set $P5052, $P5051
  if1930_end4393:
    unless_null $P5052, vivi_19314394
    nqp_get_sc_object $P5053, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5052, $P5053
  vivi_19314394:
.annotate 'line', 1519
    nqp_get_sc_object $P5056, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5055, $P5056, "QAST"
    get_who $P5054, $P5055
    set fb_tmp_291, $P5054
    repr_defined $I5009, fb_tmp_291
    unless $I5009 goto if1932_else4395 
    set $P5057, fb_tmp_291["Op"]
    set $P5059, $P5057
    goto if1932_end4396
  if1932_else4395:
    null $P5058
    set $P5059, $P5058
  if1932_end4396:
    unless_null $P5059, vivi_19334397
    nqp_get_sc_object $P5060, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5059, $P5060
  vivi_19334397:
.annotate 'line', 1521
    nqp_get_sc_object $P5063, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5062, $P5063, "QAST"
    get_who $P5061, $P5062
    set fb_tmp_292, $P5061
    repr_defined $I5010, fb_tmp_292
    unless $I5010 goto if1934_else4398 
    set $P5064, fb_tmp_292["Var"]
    set $P5066, $P5064
    goto if1934_end4399
  if1934_else4398:
    null $P5065
    set $P5066, $P5065
  if1934_end4399:
    unless_null $P5066, vivi_19354400
    nqp_get_sc_object $P5067, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5066, $P5067
  vivi_19354400:
    $P5068 = $P101."returns"()
    $P5069 = $P5066."new"($P102 :named("name"), "local" :named("scope"), $P5068 :named("returns"))
.annotate 'line', 1522
    nqp_get_sc_object $P5072, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5071, $P5072, "QAST"
    get_who $P5070, $P5071
    set fb_tmp_293, $P5070
    repr_defined $I5011, fb_tmp_293
    unless $I5011 goto if1936_else4401 
    set $P5073, fb_tmp_293["IVal"]
    set $P5075, $P5073
    goto if1936_end4402
  if1936_else4401:
    null $P5074
    set $P5075, $P5074
  if1936_end4402:
    unless_null $P5075, vivi_19374403
    nqp_get_sc_object $P5076, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5075, $P5076
  vivi_19374403:
    $P5077 = $P5075."new"(1 :named("value"))
    $P5078 = $P5059."new"($P5069, $P5077, "add_n" :named("op"))
    $P5079 = $P5052."new"($P101, $P5078, "bind" :named("op"))
    $P5080 = $P5028."new"($P5046, $P5079, 0 :named("resultchild"))
    $P5081 = _lex_param_0."as_post"($P5080)
    .return ($P5081) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_418_1360432459.413") :anon :lex :outer("cuid_372_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1527
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$var", $P101 
    .lex "$tmp", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_294 
    .local pmc fb_tmp_295 
    .local pmc fb_tmp_296 
    .local pmc fb_tmp_297 
    .local pmc fb_tmp_298 
    .local pmc fb_tmp_299 
    .local pmc fb_tmp_300 
    .local pmc fb_tmp_301 
    .local pmc fb_tmp_302 
    .local pmc fb_tmp_303 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
    set fb_tmp_294, _lex_param_1
    repr_defined $I5001, fb_tmp_294
    unless $I5001 goto if1938_else4404 
    set $P5003, fb_tmp_294[0]
    set $P5005, $P5003
    goto if1938_end4405
  if1938_else4404:
    null $P5004
    set $P5005, $P5004
  if1938_end4405:
    unless_null $P5005, vivi_19394406
    nqp_get_sc_object $P5006, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5005, $P5006
  vivi_19394406:
    set $P101, $P5005
.annotate 'line', 1529
    nqp_get_sc_object $P5009, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5008, $P5009, "QAST"
    get_who $P5007, $P5008
    set fb_tmp_295, $P5007
    repr_defined $I5002, fb_tmp_295
    unless $I5002 goto if1940_else4407 
    set $P5010, fb_tmp_295["Op"]
    set $P5012, $P5010
    goto if1940_end4408
  if1940_else4407:
    null $P5011
    set $P5012, $P5011
  if1940_end4408:
    unless_null $P5012, vivi_19414409
    nqp_get_sc_object $P5013, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5012, $P5013
  vivi_19414409:
    $P5014 = $P5012."unique"("tmp")
    set $P102, $P5014
    nqp_get_sc_object $P5017, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5016, $P5017, "QAST"
    get_who $P5015, $P5016
    set fb_tmp_296, $P5015
    repr_defined $I5004, fb_tmp_296
    unless $I5004 goto if1943_else4412 
    set $P5018, fb_tmp_296["Var"]
    set $P5020, $P5018
    goto if1943_end4413
  if1943_else4412:
    null $P5019
    set $P5020, $P5019
  if1943_end4413:
    unless_null $P5020, vivi_19444414
    nqp_get_sc_object $P5021, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5020, $P5021
  vivi_19444414:
    type_check $I5003, $P101, $P5020
    if $I5003 goto unless1942_end4411 
.annotate 'line', 1530
    box $P5022, "Post-decrement can only work on a variable"
    die $P5022
  unless1942_end4411:
.annotate 'line', 1533
    nqp_get_sc_object $P5025, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5024, $P5025, "QAST"
    get_who $P5023, $P5024
    set fb_tmp_297, $P5023
    repr_defined $I5005, fb_tmp_297
    unless $I5005 goto if1945_else4415 
    set $P5026, fb_tmp_297["Stmt"]
    set $P5028, $P5026
    goto if1945_end4416
  if1945_else4415:
    null $P5027
    set $P5028, $P5027
  if1945_end4416:
    unless_null $P5028, vivi_19464417
    nqp_get_sc_object $P5029, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5028, $P5029
  vivi_19464417:
.annotate 'line', 1535
    nqp_get_sc_object $P5032, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5031, $P5032, "QAST"
    get_who $P5030, $P5031
    set fb_tmp_298, $P5030
    repr_defined $I5006, fb_tmp_298
    unless $I5006 goto if1947_else4418 
    set $P5033, fb_tmp_298["Op"]
    set $P5035, $P5033
    goto if1947_end4419
  if1947_else4418:
    null $P5034
    set $P5035, $P5034
  if1947_end4419:
    unless_null $P5035, vivi_19484420
    nqp_get_sc_object $P5036, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5035, $P5036
  vivi_19484420:
.annotate 'line', 1537
    nqp_get_sc_object $P5039, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5038, $P5039, "QAST"
    get_who $P5037, $P5038
    set fb_tmp_299, $P5037
    repr_defined $I5007, fb_tmp_299
    unless $I5007 goto if1949_else4421 
    set $P5040, fb_tmp_299["Var"]
    set $P5042, $P5040
    goto if1949_end4422
  if1949_else4421:
    null $P5041
    set $P5042, $P5041
  if1949_end4422:
    unless_null $P5042, vivi_19504423
    nqp_get_sc_object $P5043, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5042, $P5043
  vivi_19504423:
    $P5044 = $P5042."new"($P102 :named("name"), "local" :named("scope"), "var" :named("decl"))
    $P5045 = $P5035."new"($P5044, $P101, "bind" :named("op"))
.annotate 'line', 1540
    nqp_get_sc_object $P5048, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5047, $P5048, "QAST"
    get_who $P5046, $P5047
    set fb_tmp_300, $P5046
    repr_defined $I5008, fb_tmp_300
    unless $I5008 goto if1951_else4424 
    set $P5049, fb_tmp_300["Op"]
    set $P5051, $P5049
    goto if1951_end4425
  if1951_else4424:
    null $P5050
    set $P5051, $P5050
  if1951_end4425:
    unless_null $P5051, vivi_19524426
    nqp_get_sc_object $P5052, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5051, $P5052
  vivi_19524426:
.annotate 'line', 1543
    nqp_get_sc_object $P5055, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5054, $P5055, "QAST"
    get_who $P5053, $P5054
    set fb_tmp_301, $P5053
    repr_defined $I5009, fb_tmp_301
    unless $I5009 goto if1953_else4427 
    set $P5056, fb_tmp_301["Op"]
    set $P5058, $P5056
    goto if1953_end4428
  if1953_else4427:
    null $P5057
    set $P5058, $P5057
  if1953_end4428:
    unless_null $P5058, vivi_19544429
    nqp_get_sc_object $P5059, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5058, $P5059
  vivi_19544429:
.annotate 'line', 1545
    nqp_get_sc_object $P5062, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5061, $P5062, "QAST"
    get_who $P5060, $P5061
    set fb_tmp_302, $P5060
    repr_defined $I5010, fb_tmp_302
    unless $I5010 goto if1955_else4430 
    set $P5063, fb_tmp_302["Var"]
    set $P5065, $P5063
    goto if1955_end4431
  if1955_else4430:
    null $P5064
    set $P5065, $P5064
  if1955_end4431:
    unless_null $P5065, vivi_19564432
    nqp_get_sc_object $P5066, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5065, $P5066
  vivi_19564432:
    $P5067 = $P5065."new"($P102 :named("name"), "local" :named("scope"))
.annotate 'line', 1546
    nqp_get_sc_object $P5070, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5069, $P5070, "QAST"
    get_who $P5068, $P5069
    set fb_tmp_303, $P5068
    repr_defined $I5011, fb_tmp_303
    unless $I5011 goto if1957_else4433 
    set $P5071, fb_tmp_303["IVal"]
    set $P5073, $P5071
    goto if1957_end4434
  if1957_else4433:
    null $P5072
    set $P5073, $P5072
  if1957_end4434:
    unless_null $P5073, vivi_19584435
    nqp_get_sc_object $P5074, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5073, $P5074
  vivi_19584435:
    $P5075 = $P5073."new"(1 :named("value"))
    $P5076 = $P5058."new"($P5067, $P5075, "sub_n" :named("op"))
    $P5077 = $P5051."new"($P101, $P5076, "bind" :named("op"))
    $P5078 = $P5028."new"($P5045, $P5077, 0 :named("resultchild"))
    $P5079 = _lex_param_0."as_post"($P5078)
    .return ($P5079) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_419_1360432459.413") :anon :lex :outer("cuid_372_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1551
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_304 
.annotate 'line', 1552
    set fb_tmp_304, _lex_param_1
    repr_defined $I5001, fb_tmp_304
    unless $I5001 goto if1959_else4436 
    set $P5001, fb_tmp_304[0]
    set $P5003, $P5001
    goto if1959_end4437
  if1959_else4436:
    null $P5002
    set $P5003, $P5002
  if1959_end4437:
    unless_null $P5003, vivi_19604438
    nqp_get_sc_object $P5004, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5003, $P5004
  vivi_19604438:
    $P5005 = _lex_param_0."as_post"($P5003, "n" :named("want"))
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_420_1360432459.413") :anon :lex :outer("cuid_372_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1555
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_305 
.annotate 'line', 1556
    set fb_tmp_305, _lex_param_1
    repr_defined $I5001, fb_tmp_305
    unless $I5001 goto if1961_else4439 
    set $P5001, fb_tmp_305[0]
    set $P5003, $P5001
    goto if1961_end4440
  if1961_else4439:
    null $P5002
    set $P5003, $P5002
  if1961_end4440:
    unless_null $P5003, vivi_19624441
    nqp_get_sc_object $P5004, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5003, $P5004
  vivi_19624441:
    $P5005 = _lex_param_0."as_post"($P5003, "s" :named("want"))
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_421_1360432459.413") :anon :lex :outer("cuid_372_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1559
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_306 
    .local pmc fb_tmp_307 
    .local pmc fb_tmp_308 
    .local pmc fb_tmp_309 
    .local pmc fb_tmp_310 
.annotate 'line', 1560
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5002, $P5003, "QAST"
    get_who $P5001, $P5002
    set fb_tmp_306, $P5001
    repr_defined $I5001, fb_tmp_306
    unless $I5001 goto if1963_else4442 
    set $P5004, fb_tmp_306["Op"]
    set $P5006, $P5004
    goto if1963_end4443
  if1963_else4442:
    null $P5005
    set $P5006, $P5005
  if1963_end4443:
    unless_null $P5006, vivi_19644444
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_19644444:
.annotate 'line', 1562
    nqp_get_sc_object $P5010, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5009, $P5010, "QAST"
    get_who $P5008, $P5009
    set fb_tmp_307, $P5008
    repr_defined $I5002, fb_tmp_307
    unless $I5002 goto if1965_else4445 
    set $P5011, fb_tmp_307["Op"]
    set $P5013, $P5011
    goto if1965_end4446
  if1965_else4445:
    null $P5012
    set $P5013, $P5012
  if1965_end4446:
    unless_null $P5013, vivi_19664447
    nqp_get_sc_object $P5014, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5013, $P5014
  vivi_19664447:
    set fb_tmp_308, _lex_param_1
    repr_defined $I5003, fb_tmp_308
    unless $I5003 goto if1967_else4448 
    set $P5015, fb_tmp_308[0]
    set $P5017, $P5015
    goto if1967_end4449
  if1967_else4448:
    null $P5016
    set $P5017, $P5016
  if1967_end4449:
    unless_null $P5017, vivi_19684450
    nqp_get_sc_object $P5018, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5017, $P5018
  vivi_19684450:
    $P5019 = $P5013."new"($P5017, "where" :named("op"))
.annotate 'line', 1563
    nqp_get_sc_object $P5022, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5021, $P5022, "QAST"
    get_who $P5020, $P5021
    set fb_tmp_309, $P5020
    repr_defined $I5004, fb_tmp_309
    unless $I5004 goto if1969_else4451 
    set $P5023, fb_tmp_309["Op"]
    set $P5025, $P5023
    goto if1969_end4452
  if1969_else4451:
    null $P5024
    set $P5025, $P5024
  if1969_end4452:
    unless_null $P5025, vivi_19704453
    nqp_get_sc_object $P5026, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5025, $P5026
  vivi_19704453:
    set fb_tmp_310, _lex_param_1
    repr_defined $I5005, fb_tmp_310
    unless $I5005 goto if1971_else4454 
    set $P5027, fb_tmp_310[1]
    set $P5029, $P5027
    goto if1971_end4455
  if1971_else4454:
    null $P5028
    set $P5029, $P5028
  if1971_end4455:
    unless_null $P5029, vivi_19724456
    nqp_get_sc_object $P5030, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5029, $P5030
  vivi_19724456:
    $P5031 = $P5025."new"($P5029, "where" :named("op"))
    $P5032 = $P5006."new"($P5019, $P5031, "iseq_i" :named("op"))
    $P5033 = _lex_param_0."as_post"($P5032)
    .return ($P5033) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_422_1360432459.413") :anon :lex :outer("cuid_372_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1567
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$res", $P101 
    .lex "$ops", $P102 
    .lex "$arg_post", $P103 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_311 
    .local pmc fb_tmp_312 
    .local pmc fb_tmp_313 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P103, $P5003
.annotate 'line', 1568
    find_dynamic_lex $P5004, "$*REGALLOC"
    unless_null $P5004, fallback4457
    nqp_get_sc_object $P5006, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5005, $P5006
    set fb_tmp_311, $P5005
    repr_defined $I5001, fb_tmp_311
    unless $I5001 goto if1973_else4458 
    set $P5007, fb_tmp_311["$REGALLOC"]
    set $P5009, $P5007
    goto if1973_end4459
  if1973_else4458:
    null $P5008
    set $P5009, $P5008
  if1973_end4459:
    unless_null $P5009, vivi_19744460
    nqp_get_sc_object $P5010, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5009, $P5010
  vivi_19744460:
    unless_null $P5009, vivi_19754461
    die "Contextual $*REGALLOC not found"
    box $P5011, "Contextual $*REGALLOC not found"
    set $P5009, $P5011
  vivi_19754461:
    set $P5004, $P5009
  fallback4457:
    $P5012 = $P5004."fresh_i"()
    set $P101, $P5012
.annotate 'line', 1569
    nqp_get_sc_object $P5015, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5014, $P5015, "PIRT"
    get_who $P5013, $P5014
    set fb_tmp_312, $P5013
    repr_defined $I5002, fb_tmp_312
    unless $I5002 goto if1976_else4462 
    set $P5016, fb_tmp_312["Ops"]
    set $P5018, $P5016
    goto if1976_end4463
  if1976_else4462:
    null $P5017
    set $P5018, $P5017
  if1976_end4463:
    unless_null $P5018, vivi_19774464
    nqp_get_sc_object $P5019, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5018, $P5019
  vivi_19774464:
    $P5020 = $P5018."new"($P101 :named("result"))
    set $P102, $P5020
.annotate 'line', 1570
    set fb_tmp_313, _lex_param_1
    repr_defined $I5003, fb_tmp_313
    unless $I5003 goto if1978_else4465 
    set $P5021, fb_tmp_313[0]
    set $P5023, $P5021
    goto if1978_end4466
  if1978_else4465:
    null $P5022
    set $P5023, $P5022
  if1978_end4466:
    unless_null $P5023, vivi_19794467
    nqp_get_sc_object $P5024, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5023, $P5024
  vivi_19794467:
    $P5025 = _lex_param_0."as_post"($P5023)
    set $P103, $P5025
.annotate 'line', 1571
    $P5026 = $P103."result"()
    $P5027 = _lex_param_0."infer_type"($P5026)
    set $S5002, $P5027
    downcase $S5001, $S5002
    iseq $I5004, $S5001, "i"
    unless $I5004 goto if1980_else4468 
.annotate 'line', 1572
    $P102."push"($P103)
.annotate 'line', 1573
    $P5028 = $P102."push_pirop"("not", $P101, $P103)
    goto if1980_end4469
  if1980_else4468:
.annotate 'line', 1575
.annotate 'line', 1576
    $P5029 = _lex_param_0."coerce"($P103, "P")
    set $P103, $P5029
.annotate 'line', 1577
    $P102."push"($P103)
.annotate 'line', 1578
    $P5030 = $P102."push_pirop"("isfalse", $P101, $P103)
  if1980_end4469:
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_424_1360432459.413") :anon :lex :outer("cuid_372_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1584
    .const 'Sub' $P5123 = 'cuid_423_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_427_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_430_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_431_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_434_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_436_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_437_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_438_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_440_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_441_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_446_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_247_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_248_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_249_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_250_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_251_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_252_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_253_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_254_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_255_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_256_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_257_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_258_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_259_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_260_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_261_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_262_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_263_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_264_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_265_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_266_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_267_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_268_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_269_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_270_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_271_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_272_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_273_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_274_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_275_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_276_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_277_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_278_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_279_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_280_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_281_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_282_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_283_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_284_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_285_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_286_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_287_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_288_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_289_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_290_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_291_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_292_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_293_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_294_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_295_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_296_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_297_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_298_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_299_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_300_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_301_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_302_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_303_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_304_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_305_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_306_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_307_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_308_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_309_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_310_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_311_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_312_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_313_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_314_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_315_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_316_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_317_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_318_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_319_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_320_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_321_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_322_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_323_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_324_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_325_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_326_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_327_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_328_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_329_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_330_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_331_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_332_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_333_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_334_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_335_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_336_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_337_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_338_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_339_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_340_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_341_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_342_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_343_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_344_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_345_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_346_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_347_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_348_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_349_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_350_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_351_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_352_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_353_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_354_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_355_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_356_1360432459.413' 
    capture_lex $P5123 
    .const 'Sub' $P5123 = 'cuid_357_1360432459.413' 
    capture_lex $P5123 
    .lex "&xblock_immediate", $P101 
    .lex "&block_immediate", $P102 
    .lex "&default_for", $P103 
    .lex "&default_value_for_prim", $P104 
    .lex "&colonpair_str", $P105 
    .lex "&import_HOW_exports", $P106 
    .lex "&set_block_handler", $P107 
    .lex "&only_star_block", $P108 
    .lex "&attach_multi_signature", $P109 
    .lex "&wrap_return_handler", $P110 
    .lex "&lexical_package_lookup", $P111 
    .lex "$?PACKAGE", $P112 
    .lex "$?CLASS", $P113 
    .const 'Sub' $P5001 = 'cuid_423_1360432459.413' 
    capture_lex $P5001
    set $P101, $P5001
    .const 'Sub' $P5002 = 'cuid_427_1360432459.413' 
    capture_lex $P5002
    set $P102, $P5002
    .const 'Sub' $P5003 = 'cuid_430_1360432459.413' 
    capture_lex $P5003
    set $P103, $P5003
    .const 'Sub' $P5004 = 'cuid_431_1360432459.413' 
    capture_lex $P5004
    set $P104, $P5004
    .const 'Sub' $P5005 = 'cuid_434_1360432459.413' 
    capture_lex $P5005
    set $P105, $P5005
    .const 'Sub' $P5006 = 'cuid_436_1360432459.413' 
    capture_lex $P5006
    set $P106, $P5006
    .const 'Sub' $P5007 = 'cuid_437_1360432459.413' 
    capture_lex $P5007
    set $P107, $P5007
    .const 'Sub' $P5008 = 'cuid_438_1360432459.413' 
    capture_lex $P5008
    set $P108, $P5008
    .const 'Sub' $P5009 = 'cuid_440_1360432459.413' 
    capture_lex $P5009
    set $P109, $P5009
    .const 'Sub' $P5010 = 'cuid_441_1360432459.413' 
    capture_lex $P5010
    set $P110, $P5010
    .const 'Sub' $P5011 = 'cuid_446_1360432459.413' 
    capture_lex $P5011
    set $P111, $P5011
    .const 'Sub' $P5012 = 'cuid_247_1360432459.413' 
    capture_lex $P5012
    .const 'Sub' $P5013 = 'cuid_248_1360432459.413' 
    capture_lex $P5013
    .const 'Sub' $P5014 = 'cuid_249_1360432459.413' 
    capture_lex $P5014
    .const 'Sub' $P5015 = 'cuid_250_1360432459.413' 
    capture_lex $P5015
    .const 'Sub' $P5016 = 'cuid_251_1360432459.413' 
    capture_lex $P5016
    .const 'Sub' $P5017 = 'cuid_252_1360432459.413' 
    capture_lex $P5017
    .const 'Sub' $P5018 = 'cuid_253_1360432459.413' 
    capture_lex $P5018
    .const 'Sub' $P5019 = 'cuid_254_1360432459.413' 
    capture_lex $P5019
    .const 'Sub' $P5020 = 'cuid_255_1360432459.413' 
    capture_lex $P5020
    .const 'Sub' $P5021 = 'cuid_256_1360432459.413' 
    capture_lex $P5021
    .const 'Sub' $P5022 = 'cuid_257_1360432459.413' 
    capture_lex $P5022
    .const 'Sub' $P5023 = 'cuid_258_1360432459.413' 
    capture_lex $P5023
    .const 'Sub' $P5024 = 'cuid_259_1360432459.413' 
    capture_lex $P5024
    .const 'Sub' $P5025 = 'cuid_260_1360432459.413' 
    capture_lex $P5025
    .const 'Sub' $P5026 = 'cuid_261_1360432459.413' 
    capture_lex $P5026
    .const 'Sub' $P5027 = 'cuid_262_1360432459.413' 
    capture_lex $P5027
    .const 'Sub' $P5028 = 'cuid_263_1360432459.413' 
    capture_lex $P5028
    .const 'Sub' $P5029 = 'cuid_264_1360432459.413' 
    capture_lex $P5029
    .const 'Sub' $P5030 = 'cuid_265_1360432459.413' 
    capture_lex $P5030
    .const 'Sub' $P5031 = 'cuid_266_1360432459.413' 
    capture_lex $P5031
    .const 'Sub' $P5032 = 'cuid_267_1360432459.413' 
    capture_lex $P5032
    .const 'Sub' $P5033 = 'cuid_268_1360432459.413' 
    capture_lex $P5033
    .const 'Sub' $P5034 = 'cuid_269_1360432459.413' 
    capture_lex $P5034
    .const 'Sub' $P5035 = 'cuid_270_1360432459.413' 
    capture_lex $P5035
    .const 'Sub' $P5036 = 'cuid_271_1360432459.413' 
    capture_lex $P5036
    .const 'Sub' $P5037 = 'cuid_272_1360432459.413' 
    capture_lex $P5037
    .const 'Sub' $P5038 = 'cuid_273_1360432459.413' 
    capture_lex $P5038
    .const 'Sub' $P5039 = 'cuid_274_1360432459.413' 
    capture_lex $P5039
    .const 'Sub' $P5040 = 'cuid_275_1360432459.413' 
    capture_lex $P5040
    .const 'Sub' $P5041 = 'cuid_276_1360432459.413' 
    capture_lex $P5041
    .const 'Sub' $P5042 = 'cuid_277_1360432459.413' 
    capture_lex $P5042
    .const 'Sub' $P5043 = 'cuid_278_1360432459.413' 
    capture_lex $P5043
    .const 'Sub' $P5044 = 'cuid_279_1360432459.413' 
    capture_lex $P5044
    .const 'Sub' $P5045 = 'cuid_280_1360432459.413' 
    capture_lex $P5045
    .const 'Sub' $P5046 = 'cuid_281_1360432459.413' 
    capture_lex $P5046
    .const 'Sub' $P5047 = 'cuid_282_1360432459.413' 
    capture_lex $P5047
    .const 'Sub' $P5048 = 'cuid_283_1360432459.413' 
    capture_lex $P5048
    .const 'Sub' $P5049 = 'cuid_284_1360432459.413' 
    capture_lex $P5049
    .const 'Sub' $P5050 = 'cuid_285_1360432459.413' 
    capture_lex $P5050
    .const 'Sub' $P5051 = 'cuid_286_1360432459.413' 
    capture_lex $P5051
    .const 'Sub' $P5052 = 'cuid_287_1360432459.413' 
    capture_lex $P5052
    .const 'Sub' $P5053 = 'cuid_288_1360432459.413' 
    capture_lex $P5053
    .const 'Sub' $P5054 = 'cuid_289_1360432459.413' 
    capture_lex $P5054
    .const 'Sub' $P5055 = 'cuid_290_1360432459.413' 
    capture_lex $P5055
    .const 'Sub' $P5056 = 'cuid_291_1360432459.413' 
    capture_lex $P5056
    .const 'Sub' $P5057 = 'cuid_292_1360432459.413' 
    capture_lex $P5057
    .const 'Sub' $P5058 = 'cuid_293_1360432459.413' 
    capture_lex $P5058
    .const 'Sub' $P5059 = 'cuid_294_1360432459.413' 
    capture_lex $P5059
    .const 'Sub' $P5060 = 'cuid_295_1360432459.413' 
    capture_lex $P5060
    .const 'Sub' $P5061 = 'cuid_296_1360432459.413' 
    capture_lex $P5061
    .const 'Sub' $P5062 = 'cuid_297_1360432459.413' 
    capture_lex $P5062
    .const 'Sub' $P5063 = 'cuid_298_1360432459.413' 
    capture_lex $P5063
    .const 'Sub' $P5064 = 'cuid_299_1360432459.413' 
    capture_lex $P5064
    .const 'Sub' $P5065 = 'cuid_300_1360432459.413' 
    capture_lex $P5065
    .const 'Sub' $P5066 = 'cuid_301_1360432459.413' 
    capture_lex $P5066
    .const 'Sub' $P5067 = 'cuid_302_1360432459.413' 
    capture_lex $P5067
    .const 'Sub' $P5068 = 'cuid_303_1360432459.413' 
    capture_lex $P5068
    .const 'Sub' $P5069 = 'cuid_304_1360432459.413' 
    capture_lex $P5069
    .const 'Sub' $P5070 = 'cuid_305_1360432459.413' 
    capture_lex $P5070
    .const 'Sub' $P5071 = 'cuid_306_1360432459.413' 
    capture_lex $P5071
    .const 'Sub' $P5072 = 'cuid_307_1360432459.413' 
    capture_lex $P5072
    .const 'Sub' $P5073 = 'cuid_308_1360432459.413' 
    capture_lex $P5073
    .const 'Sub' $P5074 = 'cuid_309_1360432459.413' 
    capture_lex $P5074
    .const 'Sub' $P5075 = 'cuid_310_1360432459.413' 
    capture_lex $P5075
    .const 'Sub' $P5076 = 'cuid_311_1360432459.413' 
    capture_lex $P5076
    .const 'Sub' $P5077 = 'cuid_312_1360432459.413' 
    capture_lex $P5077
    .const 'Sub' $P5078 = 'cuid_313_1360432459.413' 
    capture_lex $P5078
    .const 'Sub' $P5079 = 'cuid_314_1360432459.413' 
    capture_lex $P5079
    .const 'Sub' $P5080 = 'cuid_315_1360432459.413' 
    capture_lex $P5080
    .const 'Sub' $P5081 = 'cuid_316_1360432459.413' 
    capture_lex $P5081
    .const 'Sub' $P5082 = 'cuid_317_1360432459.413' 
    capture_lex $P5082
    .const 'Sub' $P5083 = 'cuid_318_1360432459.413' 
    capture_lex $P5083
    .const 'Sub' $P5084 = 'cuid_319_1360432459.413' 
    capture_lex $P5084
    .const 'Sub' $P5085 = 'cuid_320_1360432459.413' 
    capture_lex $P5085
    .const 'Sub' $P5086 = 'cuid_321_1360432459.413' 
    capture_lex $P5086
    .const 'Sub' $P5087 = 'cuid_322_1360432459.413' 
    capture_lex $P5087
    .const 'Sub' $P5088 = 'cuid_323_1360432459.413' 
    capture_lex $P5088
    .const 'Sub' $P5089 = 'cuid_324_1360432459.413' 
    capture_lex $P5089
    .const 'Sub' $P5090 = 'cuid_325_1360432459.413' 
    capture_lex $P5090
    .const 'Sub' $P5091 = 'cuid_326_1360432459.413' 
    capture_lex $P5091
    .const 'Sub' $P5092 = 'cuid_327_1360432459.413' 
    capture_lex $P5092
    .const 'Sub' $P5093 = 'cuid_328_1360432459.413' 
    capture_lex $P5093
    .const 'Sub' $P5094 = 'cuid_329_1360432459.413' 
    capture_lex $P5094
    .const 'Sub' $P5095 = 'cuid_330_1360432459.413' 
    capture_lex $P5095
    .const 'Sub' $P5096 = 'cuid_331_1360432459.413' 
    capture_lex $P5096
    .const 'Sub' $P5097 = 'cuid_332_1360432459.413' 
    capture_lex $P5097
    .const 'Sub' $P5098 = 'cuid_333_1360432459.413' 
    capture_lex $P5098
    .const 'Sub' $P5099 = 'cuid_334_1360432459.413' 
    capture_lex $P5099
    .const 'Sub' $P5100 = 'cuid_335_1360432459.413' 
    capture_lex $P5100
    .const 'Sub' $P5101 = 'cuid_336_1360432459.413' 
    capture_lex $P5101
    .const 'Sub' $P5102 = 'cuid_337_1360432459.413' 
    capture_lex $P5102
    .const 'Sub' $P5103 = 'cuid_338_1360432459.413' 
    capture_lex $P5103
    .const 'Sub' $P5104 = 'cuid_339_1360432459.413' 
    capture_lex $P5104
    .const 'Sub' $P5105 = 'cuid_340_1360432459.413' 
    capture_lex $P5105
    .const 'Sub' $P5106 = 'cuid_341_1360432459.413' 
    capture_lex $P5106
    .const 'Sub' $P5107 = 'cuid_342_1360432459.413' 
    capture_lex $P5107
    .const 'Sub' $P5108 = 'cuid_343_1360432459.413' 
    capture_lex $P5108
    .const 'Sub' $P5109 = 'cuid_344_1360432459.413' 
    capture_lex $P5109
    .const 'Sub' $P5110 = 'cuid_345_1360432459.413' 
    capture_lex $P5110
    .const 'Sub' $P5111 = 'cuid_346_1360432459.413' 
    capture_lex $P5111
    .const 'Sub' $P5112 = 'cuid_347_1360432459.413' 
    capture_lex $P5112
    .const 'Sub' $P5113 = 'cuid_348_1360432459.413' 
    capture_lex $P5113
    .const 'Sub' $P5114 = 'cuid_349_1360432459.413' 
    capture_lex $P5114
    .const 'Sub' $P5115 = 'cuid_350_1360432459.413' 
    capture_lex $P5115
    .const 'Sub' $P5116 = 'cuid_351_1360432459.413' 
    capture_lex $P5116
    .const 'Sub' $P5117 = 'cuid_352_1360432459.413' 
    capture_lex $P5117
    .const 'Sub' $P5118 = 'cuid_353_1360432459.413' 
    capture_lex $P5118
    .const 'Sub' $P5119 = 'cuid_354_1360432459.413' 
    capture_lex $P5119
    .const 'Sub' $P5120 = 'cuid_355_1360432459.413' 
    capture_lex $P5120
    .const 'Sub' $P5121 = 'cuid_356_1360432459.413' 
    capture_lex $P5121
    .const 'Sub' $P5122 = 'cuid_357_1360432459.413' 
    capture_lex $P5122
    .return ($P111) 
.end
.HLL "nqp"
.namespace []
.sub "xblock_immediate" :subid("cuid_423_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1585
    .param pmc _lex_param_0 
    .lex "$xblock", _lex_param_0 
    .local pmc fb_tmp_314 
.annotate 'line', 1586
    set fb_tmp_314, _lex_param_0
    repr_defined $I5001, fb_tmp_314
    unless $I5001 goto if1981_else4470 
    set $P5001, fb_tmp_314[1]
    set $P5003, $P5001
    goto if1981_end4471
  if1981_else4470:
    null $P5002
    set $P5003, $P5002
  if1981_end4471:
    unless_null $P5003, vivi_19824472
    nqp_get_sc_object $P5004, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5003, $P5004
  vivi_19824472:
    $P5005 = "&block_immediate"($P5003)
    set _lex_param_0[1], $P5005
    .return (_lex_param_0) 
.end
.HLL "nqp"
.namespace []
.sub "block_immediate" :subid("cuid_427_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1590
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_426_1360432459.413' 
    capture_lex $P5004 
    .lex "$block", _lex_param_0 
.annotate 'line', 1591
    _lex_param_0."blocktype"("immediate")
.annotate 'line', 1592
    $P5001 = _lex_param_0."symtable"()
    if $P5001 goto unless1983_end4474 
    .const 'Sub' $P5002 = 'cuid_426_1360432459.413' 
    capture_lex $P5002
    $P5003 = $P5002()
  unless1983_end4474:
    .return (_lex_param_0) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_426_1360432459.413") :anon :lex :outer("cuid_427_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1592
    .const 'Sub' $P5019 = 'cuid_425_1360432459.413' 
    capture_lex $P5019 
    .lex "$stmts", $P101 
    .local pmc fb_tmp_315 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
.annotate 'line', 1593
    nqp_get_sc_object $P5004, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5003, $P5004, "QAST"
    get_who $P5002, $P5003
    set fb_tmp_315, $P5002
    repr_defined $I5001, fb_tmp_315
    unless $I5001 goto if1984_else4475 
    set $P5005, fb_tmp_315["Stmts"]
    set $P5007, $P5005
    goto if1984_end4476
  if1984_else4475:
    null $P5006
    set $P5007, $P5006
  if1984_end4476:
    unless_null $P5007, vivi_19854477
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5007, $P5008
  vivi_19854477:
    find_lex $P5009, "$block"
    $P5010 = $P5009."node"()
    $P5011 = $P5007."new"($P5010 :named("node"))
    set $P101, $P5011
.annotate 'line', 1594
    find_lex $P5015, "$block"
    $P5016 = $P5015."list"()
    set $P5012, $P5016
    iter $P5014, $P5016
  for_next4478:
    unless $P5014, for_done4480
    shift $P5018, $P5014
  for_redo4479:
    .const 'Sub' $P5017 = 'cuid_425_1360432459.413' 
    capture_lex $P5017
    $P5012 = $P5017($P5018)
    goto for_next4478
  for_done4480:
    store_lex "$block", $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_425_1360432459.413") :anon :lex :outer("cuid_426_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1594
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "$stmts"
    $P5002 = $P5001."push"(_lex_param_0)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "default_for" :subid("cuid_430_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1600
    .param pmc _lex_param_0 
    .const 'Sub' $P5021 = 'cuid_429_1360432459.413' 
    capture_lex $P5021 
    .lex "$sigil", _lex_param_0 
    .local pmc fb_tmp_316 
    .local pmc fb_tmp_317 
    set $S5001, _lex_param_0
    iseq $I5001, $S5001, "@"
    unless $I5001 goto if1986_else4481 
.annotate 'line', 1601
.annotate 'line', 1602
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5002, $P5003, "QAST"
    get_who $P5001, $P5002
    set fb_tmp_316, $P5001
    repr_defined $I5002, fb_tmp_316
    unless $I5002 goto if1987_else4483 
    set $P5004, fb_tmp_316["Op"]
    set $P5006, $P5004
    goto if1987_end4484
  if1987_else4483:
    null $P5005
    set $P5006, $P5005
  if1987_end4484:
    unless_null $P5006, vivi_19884485
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_19884485:
    $P5008 = $P5006."new"("list" :named("op"))
    set $P5020, $P5008
    goto if1986_end4482
  if1986_else4481:
    set $S5002, _lex_param_0
    iseq $I5003, $S5002, "%"
    unless $I5003 goto if1989_else4486 
.annotate 'line', 1604
.annotate 'line', 1605
    nqp_get_sc_object $P5011, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5010, $P5011, "QAST"
    get_who $P5009, $P5010
    set fb_tmp_317, $P5009
    repr_defined $I5004, fb_tmp_317
    unless $I5004 goto if1990_else4488 
    set $P5012, fb_tmp_317["Op"]
    set $P5014, $P5012
    goto if1990_end4489
  if1990_else4488:
    null $P5013
    set $P5014, $P5013
  if1990_end4489:
    unless_null $P5014, vivi_19914490
    nqp_get_sc_object $P5015, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5014, $P5015
  vivi_19914490:
    $P5016 = $P5014."new"("hash" :named("op"))
    set $P5019, $P5016
    goto if1989_end4487
  if1989_else4486:
    .const 'Sub' $P5017 = 'cuid_429_1360432459.413' 
    capture_lex $P5017
    $P5018 = $P5017()
    set $P5019, $P5018
  if1989_end4487:
    set $P5020, $P5019
  if1986_end4482:
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_429_1360432459.413") :anon :lex :outer("cuid_430_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1607
    .const 'Sub' $P5026 = 'cuid_428_1360432459.413' 
    capture_lex $P5026 
    .lex "$default", $P101 
    .local pmc fb_tmp_318 
    .local pmc fb_tmp_319 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    new $P5024, 'ExceptionHandler'
    set_label $P5024, catch_handler_20024505
    $P5024.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5024
.annotate 'line', 1609
    new $P5022, 'ExceptionHandler'
    set_label $P5022, catch_handler_19984500
    $P5022.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5022
.annotate 'line', 1610
    nqp_get_sc_object $P5004, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5003, $P5004, "QAST"
    get_who $P5002, $P5003
    set fb_tmp_318, $P5002
    repr_defined $I5001, fb_tmp_318
    unless $I5001 goto if1992_else4491 
    set $P5005, fb_tmp_318["WVal"]
    set $P5007, $P5005
    goto if1992_end4492
  if1992_else4491:
    null $P5006
    set $P5007, $P5006
  if1992_end4492:
    unless_null $P5007, vivi_19934493
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5007, $P5008
  vivi_19934493:
    find_dynamic_lex $P5009, "$*W"
    unless_null $P5009, fallback4494
    nqp_get_sc_object $P5011, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5010, $P5011
    set fb_tmp_319, $P5010
    repr_defined $I5002, fb_tmp_319
    unless $I5002 goto if1994_else4495 
    set $P5012, fb_tmp_319["$W"]
    set $P5014, $P5012
    goto if1994_end4496
  if1994_else4495:
    null $P5013
    set $P5014, $P5013
  if1994_end4496:
    unless_null $P5014, vivi_19954497
    nqp_get_sc_object $P5015, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5014, $P5015
  vivi_19954497:
    unless_null $P5014, vivi_19964498
    die "Contextual $*W not found"
    box $P5016, "Contextual $*W not found"
    set $P5014, $P5016
  vivi_19964498:
    set $P5009, $P5014
  fallback4494:
    new $P5017, 'ResizablePMCArray'
    box $P5018, "NQPMu"
    push $P5017, $P5018
    $P5019 = $P5009."find_sym"($P5017)
    $P5020 = $P5007."new"($P5019 :named("value"))
    set $P101, $P5020
    nqp_get_sc_object $P5021, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5023, $P5021
    pop_eh 
    goto skip_handler_19974499
  catch_handler_19984500:
    .get_results ($P5022) 
    .const 'Sub' $P10001 = 'cuid_428_1360432459.413' 
    capture_lex $P10001
    $P10001($P5022)
    set $I10001, 1
    set $P5022["handled"], $I10001
    nqp_get_sc_object $P10002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    finalize $P5022
    pop_upto_eh $P5022
    pop_eh 
    set $P5023, $P10002
    goto skip_handler_19974499
  skip_handler_19974499:
    set $P5025, $P5023
    pop_eh 
    goto skip_handler_20014504
  catch_handler_20024505:
    .get_results ($P5024) 
    set $I10001, 1
    set $P5024["handled"], $I10001
    nqp_get_sc_object $P10001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    finalize $P5024
    pop_upto_eh $P5024
    pop_eh 
    set $P5025, $P10001
    goto skip_handler_20014504
  skip_handler_20014504:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_428_1360432459.413") :anon :lex :outer("cuid_429_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1611
    .param pmc _lex_param_0 
    .lex "$!", $P101 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_320 
    set $P101, _lex_param_0
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5002, $P5003, "QAST"
    get_who $P5001, $P5002
    set fb_tmp_320, $P5001
    repr_defined $I5001, fb_tmp_320
    unless $I5001 goto if1999_else4501 
    set $P5004, fb_tmp_320["Op"]
    set $P5006, $P5004
    goto if1999_end4502
  if1999_else4501:
    null $P5005
    set $P5006, $P5005
  if1999_end4502:
    unless_null $P5006, vivi_20004503
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_20004503:
    $P5008 = $P5006."new"("null" :named("op"))
    store_lex "$default", $P5008
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "default_value_for_prim" :subid("cuid_431_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1617
    .param pmc _lex_param_0 
    .lex "$prim", _lex_param_0 
    .local pmc fb_tmp_321 
    .local pmc fb_tmp_322 
    .local pmc fb_tmp_323 
    set $N5001, _lex_param_0
    set $N5002, 1
    iseq $I5001, $N5001, $N5002
    unless $I5001 goto if2003_else4506 
.annotate 'line', 1618
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5002, $P5003, "QAST"
    get_who $P5001, $P5002
    set fb_tmp_321, $P5001
    repr_defined $I5002, fb_tmp_321
    unless $I5002 goto if2004_else4508 
    set $P5004, fb_tmp_321["IVal"]
    set $P5006, $P5004
    goto if2004_end4509
  if2004_else4508:
    null $P5005
    set $P5006, $P5005
  if2004_end4509:
    unless_null $P5006, vivi_20054510
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_20054510:
    $P5008 = $P5006."new"(0 :named("value"))
    set $P5026, $P5008
    goto if2003_end4507
  if2003_else4506:
    set $N5003, _lex_param_0
    set $N5004, 2
    iseq $I5003, $N5003, $N5004
    unless $I5003 goto if2006_else4511 
.annotate 'line', 1619
    nqp_get_sc_object $P5011, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5010, $P5011, "QAST"
    get_who $P5009, $P5010
    set fb_tmp_322, $P5009
    repr_defined $I5004, fb_tmp_322
    unless $I5004 goto if2007_else4513 
    set $P5012, fb_tmp_322["NVal"]
    set $P5014, $P5012
    goto if2007_end4514
  if2007_else4513:
    null $P5013
    set $P5014, $P5013
  if2007_end4514:
    unless_null $P5014, vivi_20084515
    nqp_get_sc_object $P5015, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5014, $P5015
  vivi_20084515:
    $P5016 = $P5014."new"(0.0 :named("value"))
    set $P5025, $P5016
    goto if2006_end4512
  if2006_else4511:
.annotate 'line', 1620
    nqp_get_sc_object $P5019, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5018, $P5019, "QAST"
    get_who $P5017, $P5018
    set fb_tmp_323, $P5017
    repr_defined $I5005, fb_tmp_323
    unless $I5005 goto if2009_else4516 
    set $P5020, fb_tmp_323["SVal"]
    set $P5022, $P5020
    goto if2009_end4517
  if2009_else4516:
    null $P5021
    set $P5022, $P5021
  if2009_end4517:
    unless_null $P5022, vivi_20104518
    nqp_get_sc_object $P5023, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5022, $P5023
  vivi_20104518:
    $P5024 = $P5022."new"("" :named("value"))
    set $P5025, $P5024
  if2006_end4512:
    set $P5026, $P5025
  if2003_end4507:
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "colonpair_str" :subid("cuid_434_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1632
    .param pmc _lex_param_0 
    .const 'Sub' $P5012 = 'cuid_433_1360432459.413' 
    capture_lex $P5012 
    .lex "$ast", _lex_param_0 
    .local pmc fb_tmp_324 
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5002, $P5003, "QAST"
    get_who $P5001, $P5002
    set fb_tmp_324, $P5001
    repr_defined $I5002, fb_tmp_324
    unless $I5002 goto if2012_else4521 
    set $P5004, fb_tmp_324["Op"]
    set $P5006, $P5004
    goto if2012_end4522
  if2012_else4521:
    null $P5005
    set $P5006, $P5005
  if2012_end4522:
    unless_null $P5006, vivi_20134523
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_20134523:
    type_check $I5001, _lex_param_0, $P5006
    unless $I5001 goto if2011_else4519 
    .const 'Sub' $P5008 = 'cuid_433_1360432459.413' 
    capture_lex $P5008
    $P5009 = $P5008()
    set $P5011, $P5009
    goto if2011_end4520
  if2011_else4519:
.annotate 'line', 1637
.annotate 'line', 1638
    $P5010 = _lex_param_0."value"()
    set $P5011, $P5010
  if2011_end4520:
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_433_1360432459.413") :anon :lex :outer("cuid_434_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1633
    .const 'Sub' $P5009 = 'cuid_432_1360432459.413' 
    capture_lex $P5009 
    .lex "@parts", $P101 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
.annotate 'line', 1635
    find_lex $P5005, "$ast"
    $P5006 = $P5005."list"()
    set $P5002, $P5006
    iter $P5004, $P5006
  for_next4524:
    unless $P5004, for_done4526
    shift $P5008, $P5004
  for_redo4525:
    .const 'Sub' $P5007 = 'cuid_432_1360432459.413' 
    capture_lex $P5007
    $P5002 = $P5007($P5008)
    goto for_next4524
  for_done4526:
    join $S5001, " ", $P101
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_432_1360432459.413") :anon :lex :outer("cuid_433_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1635
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "@parts"
    $P5002 = _lex_param_0."value"()
    $P5003 = $P5001."push"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "import_HOW_exports" :subid("cuid_436_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1825
    .param pmc _lex_param_0 
    .const 'Sub' $P5013 = 'cuid_435_1360432459.413' 
    capture_lex $P5013 
    .lex "$UNIT", _lex_param_0 
    .local pmc fb_tmp_325 
    exists $I5001, _lex_param_0["EXPORTHOW"]
    box $P5012, $I5001
    set $P5011, $P5012
    unless $I5001 goto if2014_end4528 
.annotate 'line', 1827
    set fb_tmp_325, _lex_param_0
    repr_defined $I5002, fb_tmp_325
    unless $I5002 goto if2015_else4529 
    set $P5005, fb_tmp_325["EXPORTHOW"]
    set $P5007, $P5005
    goto if2015_end4530
  if2015_else4529:
    null $P5006
    set $P5007, $P5006
  if2015_end4530:
    unless_null $P5007, vivi_20164531
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5007, $P5008
  vivi_20164531:
    get_who $P5004, $P5007
    set $P5001, $P5004
    iter $P5003, $P5004
  for_next4537:
    unless $P5003, for_done4539
    shift $P5010, $P5003
  for_redo4538:
    .const 'Sub' $P5009 = 'cuid_435_1360432459.413' 
    capture_lex $P5009
    $P5001 = $P5009($P5010)
    goto for_next4537
  for_done4539:
    set $P5011, $P5001
  if2014_end4528:
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_435_1360432459.413") :anon :lex :outer("cuid_436_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1828
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_326 
    find_dynamic_lex $P5001, "%*HOW"
    unless_null $P5001, fallback4532
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5002, $P5003
    set fb_tmp_326, $P5002
    repr_defined $I5001, fb_tmp_326
    unless $I5001 goto if2017_else4533 
    set $P5004, fb_tmp_326["%HOW"]
    set $P5006, $P5004
    goto if2017_end4534
  if2017_else4533:
    null $P5005
    set $P5006, $P5005
  if2017_end4534:
    unless_null $P5006, vivi_20184535
    nqp_get_sc_object $P5008, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5007, $P5008
    new $P5009, 'Hash'
    set $P5007["%HOW"], $P5009
    set $P5006, $P5009
  vivi_20184535:
    unless_null $P5006, vivi_20194536
    die "Contextual %*HOW not found"
    box $P5010, "Contextual %*HOW not found"
    set $P5006, $P5010
  vivi_20194536:
    set $P5001, $P5006
  fallback4532:
.annotate 'line', 1829
    $P5011 = _lex_param_0."key"()
    set $S5001, $P5011
    $P5012 = _lex_param_0."value"()
    set $P5001[$S5001], $P5012
    .return ($P5012) 
.end
.HLL "nqp"
.namespace []
.sub "set_block_handler" :subid("cuid_437_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1927
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$/", _lex_param_0 
    .lex "$block", _lex_param_1 
    .lex "$type", _lex_param_2 
    .local pmc fb_tmp_327 
    .local pmc fb_tmp_328 
    .local pmc fb_tmp_329 
    .local pmc fb_tmp_330 
    .local pmc fb_tmp_331 
    .local pmc fb_tmp_332 
    .local pmc fb_tmp_333 
    .local pmc fb_tmp_334 
    .local pmc fb_tmp_335 
    .local pmc fb_tmp_336 
    .local pmc fb_tmp_337 
    .local pmc fb_tmp_338 
    .local pmc fb_tmp_339 
    find_dynamic_lex $P5001, "%*HANDLERS"
    unless_null $P5001, fallback4542
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5002, $P5003
    set fb_tmp_327, $P5002
    repr_defined $I5002, fb_tmp_327
    unless $I5002 goto if2021_else4543 
    set $P5004, fb_tmp_327["%HANDLERS"]
    set $P5006, $P5004
    goto if2021_end4544
  if2021_else4543:
    null $P5005
    set $P5006, $P5005
  if2021_end4544:
    unless_null $P5006, vivi_20224545
    nqp_get_sc_object $P5008, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5007, $P5008
    new $P5009, 'Hash'
    set $P5007["%HANDLERS"], $P5009
    set $P5006, $P5009
  vivi_20224545:
    unless_null $P5006, vivi_20234546
    die "Contextual %*HANDLERS not found"
    box $P5010, "Contextual %*HANDLERS not found"
    set $P5006, $P5010
  vivi_20234546:
    set $P5001, $P5006
  fallback4542:
    set $S5001, _lex_param_2
    exists $I5001, $P5001[$S5001]
    unless $I5001 goto if2020_end4541 
.annotate 'line', 1928
    set $S5004, _lex_param_2
    concat $S5003, "Duplicate ", $S5004
    concat $S5002, $S5003, " handler in block"
    box $P5011, $S5002
    die $P5011
  if2020_end4541:
.annotate 'line', 1931
    $P5012 = _lex_param_1."arity"()
    if $P5012 goto unless2024_end4548 
.annotate 'line', 1932
.annotate 'line', 1933
    nqp_get_sc_object $P5015, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5014, $P5015, "QAST"
    get_who $P5013, $P5014
    set fb_tmp_328, $P5013
    repr_defined $I5003, fb_tmp_328
    unless $I5003 goto if2025_else4549 
    set $P5016, fb_tmp_328["Op"]
    set $P5018, $P5016
    goto if2025_end4550
  if2025_else4549:
    null $P5017
    set $P5018, $P5017
  if2025_end4550:
    unless_null $P5018, vivi_20264551
    nqp_get_sc_object $P5019, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5018, $P5019
  vivi_20264551:
.annotate 'line', 1934
    nqp_get_sc_object $P5022, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5021, $P5022, "QAST"
    get_who $P5020, $P5021
    set fb_tmp_329, $P5020
    repr_defined $I5004, fb_tmp_329
    unless $I5004 goto if2027_else4552 
    set $P5023, fb_tmp_329["Var"]
    set $P5025, $P5023
    goto if2027_end4553
  if2027_else4552:
    null $P5024
    set $P5025, $P5024
  if2027_end4553:
    unless_null $P5025, vivi_20284554
    nqp_get_sc_object $P5026, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5025, $P5026
  vivi_20284554:
    $P5027 = $P5025."new"("lexical" :named("scope"), "$!" :named("name"), "var" :named("decl"))
.annotate 'line', 1935
    nqp_get_sc_object $P5030, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5029, $P5030, "QAST"
    get_who $P5028, $P5029
    set fb_tmp_330, $P5028
    repr_defined $I5005, fb_tmp_330
    unless $I5005 goto if2029_else4555 
    set $P5031, fb_tmp_330["Var"]
    set $P5033, $P5031
    goto if2029_end4556
  if2029_else4555:
    null $P5032
    set $P5033, $P5032
  if2029_end4556:
    unless_null $P5033, vivi_20304557
    nqp_get_sc_object $P5034, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5033, $P5034
  vivi_20304557:
    $P5035 = $P5033."new"("lexical" :named("scope"), "$_" :named("name"))
    $P5036 = $P5018."new"($P5027, $P5035, "bind" :named("op"))
    _lex_param_1."unshift"($P5036)
.annotate 'line', 1938
    nqp_get_sc_object $P5039, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5038, $P5039, "QAST"
    get_who $P5037, $P5038
    set fb_tmp_331, $P5037
    repr_defined $I5006, fb_tmp_331
    unless $I5006 goto if2031_else4558 
    set $P5040, fb_tmp_331["Var"]
    set $P5042, $P5040
    goto if2031_end4559
  if2031_else4558:
    null $P5041
    set $P5042, $P5041
  if2031_end4559:
    unless_null $P5042, vivi_20324560
    nqp_get_sc_object $P5043, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5042, $P5043
  vivi_20324560:
    $P5044 = $P5042."new"("$_" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    _lex_param_1."unshift"($P5044)
.annotate 'line', 1939
    _lex_param_1."symbol"("$_", "lexical" :named("scope"))
.annotate 'line', 1940
    _lex_param_1."symbol"("$!", "lexical" :named("scope"))
.annotate 'line', 1941
    $P5045 = _lex_param_1."arity"(1)
  unless2024_end4548:
.annotate 'line', 1943
    _lex_param_1."blocktype"("declaration")
    find_dynamic_lex $P5046, "%*HANDLERS"
    unless_null $P5046, fallback4561
    nqp_get_sc_object $P5048, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5047, $P5048
    set fb_tmp_332, $P5047
    repr_defined $I5007, fb_tmp_332
    unless $I5007 goto if2033_else4562 
    set $P5049, fb_tmp_332["%HANDLERS"]
    set $P5051, $P5049
    goto if2033_end4563
  if2033_else4562:
    null $P5050
    set $P5051, $P5050
  if2033_end4563:
    unless_null $P5051, vivi_20344564
    nqp_get_sc_object $P5053, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5052, $P5053
    new $P5054, 'Hash'
    set $P5052["%HANDLERS"], $P5054
    set $P5051, $P5054
  vivi_20344564:
    unless_null $P5051, vivi_20354565
    die "Contextual %*HANDLERS not found"
    box $P5055, "Contextual %*HANDLERS not found"
    set $P5051, $P5055
  vivi_20354565:
    set $P5046, $P5051
  fallback4561:
    set $S5005, _lex_param_2
.annotate 'line', 1944
    nqp_get_sc_object $P5058, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5057, $P5058, "QAST"
    get_who $P5056, $P5057
    set fb_tmp_333, $P5056
    repr_defined $I5008, fb_tmp_333
    unless $I5008 goto if2036_else4566 
    set $P5059, fb_tmp_333["Stmts"]
    set $P5061, $P5059
    goto if2036_end4567
  if2036_else4566:
    null $P5060
    set $P5061, $P5060
  if2036_end4567:
    unless_null $P5061, vivi_20374568
    nqp_get_sc_object $P5062, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5061, $P5062
  vivi_20374568:
.annotate 'line', 1945
    nqp_get_sc_object $P5065, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5064, $P5065, "QAST"
    get_who $P5063, $P5064
    set fb_tmp_334, $P5063
    repr_defined $I5009, fb_tmp_334
    unless $I5009 goto if2038_else4569 
    set $P5066, fb_tmp_334["Op"]
    set $P5068, $P5066
    goto if2038_end4570
  if2038_else4569:
    null $P5067
    set $P5068, $P5067
  if2038_end4570:
    unless_null $P5068, vivi_20394571
    nqp_get_sc_object $P5069, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5068, $P5069
  vivi_20394571:
.annotate 'line', 1947
    nqp_get_sc_object $P5072, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5071, $P5072, "QAST"
    get_who $P5070, $P5071
    set fb_tmp_335, $P5070
    repr_defined $I5010, fb_tmp_335
    unless $I5010 goto if2040_else4572 
    set $P5073, fb_tmp_335["Op"]
    set $P5075, $P5073
    goto if2040_end4573
  if2040_else4572:
    null $P5074
    set $P5075, $P5074
  if2040_end4573:
    unless_null $P5075, vivi_20414574
    nqp_get_sc_object $P5076, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5075, $P5076
  vivi_20414574:
    $P5077 = $P5075."new"("exception" :named("op"))
    $P5078 = $P5068."new"(_lex_param_1, $P5077, "call" :named("op"))
.annotate 'line', 1949
    nqp_get_sc_object $P5081, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5080, $P5081, "QAST"
    get_who $P5079, $P5080
    set fb_tmp_336, $P5079
    repr_defined $I5011, fb_tmp_336
    unless $I5011 goto if2042_else4575 
    set $P5082, fb_tmp_336["Op"]
    set $P5084, $P5082
    goto if2042_end4576
  if2042_else4575:
    null $P5083
    set $P5084, $P5083
  if2042_end4576:
    unless_null $P5084, vivi_20434577
    nqp_get_sc_object $P5085, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5084, $P5085
  vivi_20434577:
.annotate 'line', 1951
    nqp_get_sc_object $P5088, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5087, $P5088, "QAST"
    get_who $P5086, $P5087
    set fb_tmp_337, $P5086
    repr_defined $I5012, fb_tmp_337
    unless $I5012 goto if2044_else4578 
    set $P5089, fb_tmp_337["Op"]
    set $P5091, $P5089
    goto if2044_end4579
  if2044_else4578:
    null $P5090
    set $P5091, $P5090
  if2044_end4579:
    unless_null $P5091, vivi_20454580
    nqp_get_sc_object $P5092, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5091, $P5092
  vivi_20454580:
    $P5093 = $P5091."new"("exception" :named("op"))
.annotate 'line', 1952
    nqp_get_sc_object $P5096, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5095, $P5096, "QAST"
    get_who $P5094, $P5095
    set fb_tmp_338, $P5094
    repr_defined $I5013, fb_tmp_338
    unless $I5013 goto if2046_else4581 
    set $P5097, fb_tmp_338["SVal"]
    set $P5099, $P5097
    goto if2046_end4582
  if2046_else4581:
    null $P5098
    set $P5099, $P5098
  if2046_end4582:
    unless_null $P5099, vivi_20474583
    nqp_get_sc_object $P5100, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5099, $P5100
  vivi_20474583:
    $P5101 = $P5099."new"("handled" :named("value"))
.annotate 'line', 1953
    nqp_get_sc_object $P5104, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5103, $P5104, "QAST"
    get_who $P5102, $P5103
    set fb_tmp_339, $P5102
    repr_defined $I5014, fb_tmp_339
    unless $I5014 goto if2048_else4584 
    set $P5105, fb_tmp_339["IVal"]
    set $P5107, $P5105
    goto if2048_end4585
  if2048_else4584:
    null $P5106
    set $P5107, $P5106
  if2048_end4585:
    unless_null $P5107, vivi_20494586
    nqp_get_sc_object $P5108, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5107, $P5108
  vivi_20494586:
    $P5109 = $P5107."new"(1 :named("value"))
    $P5110 = $P5084."new"($P5093, $P5101, $P5109, "bindkey_i" :named("op"))
.annotate 'line', 1955
    $P5111 = "&default_for"("$")
    $P5112 = $P5061."new"($P5078, $P5110, $P5111)
    set $P5046[$S5005], $P5112
    .return ($P5112) 
.end
.HLL "nqp"
.namespace []
.sub "only_star_block" :subid("cuid_438_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2592
    .lex "$past", $P101 
    .local pmc fb_tmp_340 
    .local pmc fb_tmp_341 
    .local pmc fb_tmp_342 
    .local pmc fb_tmp_343 
    .local pmc fb_tmp_344 
    .local pmc fb_tmp_345 
    .local pmc fb_tmp_346 
    .local pmc fb_tmp_347 
    .local pmc fb_tmp_348 
    .local pmc fb_tmp_349 
    .local pmc fb_tmp_350 
    .local pmc fb_tmp_351 
    .local pmc fb_tmp_352 
    .local pmc fb_tmp_353 
    .local pmc fb_tmp_354 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
.annotate 'line', 2593
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback4587
    nqp_get_sc_object $P5004, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5003, $P5004
    set fb_tmp_340, $P5003
    repr_defined $I5001, fb_tmp_340
    unless $I5001 goto if2050_else4588 
    set $P5005, fb_tmp_340["$W"]
    set $P5007, $P5005
    goto if2050_end4589
  if2050_else4588:
    null $P5006
    set $P5007, $P5006
  if2050_end4589:
    unless_null $P5007, vivi_20514590
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5007, $P5008
  vivi_20514590:
    unless_null $P5007, vivi_20524591
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_20524591:
    set $P5002, $P5007
  fallback4587:
    $P5010 = $P5002."pop_lexpad"()
    set $P101, $P5010
.annotate 'line', 2594
    nqp_get_sc_object $P5013, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5012, $P5013, "QAST"
    get_who $P5011, $P5012
    set fb_tmp_341, $P5011
    repr_defined $I5002, fb_tmp_341
    unless $I5002 goto if2053_else4592 
    set $P5014, fb_tmp_341["Op"]
    set $P5016, $P5014
    goto if2053_end4593
  if2053_else4592:
    null $P5015
    set $P5016, $P5015
  if2053_end4593:
    unless_null $P5016, vivi_20544594
    nqp_get_sc_object $P5017, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5016, $P5017
  vivi_20544594:
.annotate 'line', 2596
    nqp_get_sc_object $P5020, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5019, $P5020, "QAST"
    get_who $P5018, $P5019
    set fb_tmp_342, $P5018
    repr_defined $I5003, fb_tmp_342
    unless $I5003 goto if2055_else4595 
    set $P5021, fb_tmp_342["Op"]
    set $P5023, $P5021
    goto if2055_end4596
  if2055_else4595:
    null $P5022
    set $P5023, $P5022
  if2055_end4596:
    unless_null $P5023, vivi_20564597
    nqp_get_sc_object $P5024, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5023, $P5024
  vivi_20564597:
.annotate 'line', 2598
    nqp_get_sc_object $P5027, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5026, $P5027, "QAST"
    get_who $P5025, $P5026
    set fb_tmp_343, $P5025
    repr_defined $I5004, fb_tmp_343
    unless $I5004 goto if2057_else4598 
    set $P5028, fb_tmp_343["Op"]
    set $P5030, $P5028
    goto if2057_end4599
  if2057_else4598:
    null $P5029
    set $P5030, $P5029
  if2057_end4599:
    unless_null $P5030, vivi_20584600
    nqp_get_sc_object $P5031, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5030, $P5031
  vivi_20584600:
.annotate 'line', 2600
    nqp_get_sc_object $P5034, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5033, $P5034, "QAST"
    get_who $P5032, $P5033
    set fb_tmp_344, $P5032
    repr_defined $I5005, fb_tmp_344
    unless $I5005 goto if2059_else4601 
    set $P5035, fb_tmp_344["Var"]
    set $P5037, $P5035
    goto if2059_end4602
  if2059_else4601:
    null $P5036
    set $P5037, $P5036
  if2059_end4602:
    unless_null $P5037, vivi_20604603
    nqp_get_sc_object $P5038, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5037, $P5038
  vivi_20604603:
.annotate 'line', 2602
    nqp_get_sc_object $P5041, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5040, $P5041, "QAST"
    get_who $P5039, $P5040
    set fb_tmp_345, $P5039
    repr_defined $I5006, fb_tmp_345
    unless $I5006 goto if2061_else4604 
    set $P5042, fb_tmp_345["Op"]
    set $P5044, $P5042
    goto if2061_end4605
  if2061_else4604:
    null $P5043
    set $P5044, $P5043
  if2061_end4605:
    unless_null $P5044, vivi_20624606
    nqp_get_sc_object $P5045, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5044, $P5045
  vivi_20624606:
    nqp_get_sc_object $P5048, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5047, $P5048, "QAST"
    get_who $P5046, $P5047
    set fb_tmp_346, $P5046
    repr_defined $I5007, fb_tmp_346
    unless $I5007 goto if2063_else4607 
    set $P5049, fb_tmp_346["Op"]
    set $P5051, $P5049
    goto if2063_end4608
  if2063_else4607:
    null $P5050
    set $P5051, $P5050
  if2063_end4608:
    unless_null $P5051, vivi_20644609
    nqp_get_sc_object $P5052, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5051, $P5052
  vivi_20644609:
    $P5053 = $P5051."new"("curcode" :named("op"))
    $P5054 = $P5044."new"($P5053, "getcodeobj" :named("op"))
.annotate 'line', 2603
    nqp_get_sc_object $P5057, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5056, $P5057, "QAST"
    get_who $P5055, $P5056
    set fb_tmp_347, $P5055
    repr_defined $I5008, fb_tmp_347
    unless $I5008 goto if2065_else4610 
    set $P5058, fb_tmp_347["WVal"]
    set $P5060, $P5058
    goto if2065_end4611
  if2065_else4610:
    null $P5059
    set $P5060, $P5059
  if2065_end4611:
    unless_null $P5060, vivi_20664612
    nqp_get_sc_object $P5061, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5060, $P5061
  vivi_20664612:
    find_dynamic_lex $P5062, "$*W"
    unless_null $P5062, fallback4613
    nqp_get_sc_object $P5064, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5063, $P5064
    set fb_tmp_348, $P5063
    repr_defined $I5009, fb_tmp_348
    unless $I5009 goto if2067_else4614 
    set $P5065, fb_tmp_348["$W"]
    set $P5067, $P5065
    goto if2067_end4615
  if2067_else4614:
    null $P5066
    set $P5067, $P5066
  if2067_end4615:
    unless_null $P5067, vivi_20684616
    nqp_get_sc_object $P5068, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5067, $P5068
  vivi_20684616:
    unless_null $P5067, vivi_20694617
    die "Contextual $*W not found"
    box $P5069, "Contextual $*W not found"
    set $P5067, $P5069
  vivi_20694617:
    set $P5062, $P5067
  fallback4613:
    new $P5070, 'ResizablePMCArray'
    box $P5071, "NQPRoutine"
    push $P5070, $P5071
    $P5072 = $P5062."find_sym"($P5070)
    $P5073 = $P5060."new"($P5072 :named("value"))
    $P5074 = $P5037."new"($P5054, $P5073, "$!dispatch_cache" :named("name"), "attribute" :named("scope"))
.annotate 'line', 2605
    nqp_get_sc_object $P5077, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5076, $P5077, "QAST"
    get_who $P5075, $P5076
    set fb_tmp_349, $P5075
    repr_defined $I5010, fb_tmp_349
    unless $I5010 goto if2070_else4618 
    set $P5078, fb_tmp_349["Op"]
    set $P5080, $P5078
    goto if2070_end4619
  if2070_else4618:
    null $P5079
    set $P5080, $P5079
  if2070_end4619:
    unless_null $P5080, vivi_20714620
    nqp_get_sc_object $P5081, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5080, $P5081
  vivi_20714620:
    $P5082 = $P5080."new"("usecapture" :named("op"))
    $P5083 = $P5030."new"($P5074, $P5082, "multicachefind" :named("op"))
.annotate 'line', 2607
    nqp_get_sc_object $P5086, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5085, $P5086, "QAST"
    get_who $P5084, $P5085
    set fb_tmp_350, $P5084
    repr_defined $I5011, fb_tmp_350
    unless $I5011 goto if2072_else4621 
    set $P5087, fb_tmp_350["Op"]
    set $P5089, $P5087
    goto if2072_end4622
  if2072_else4621:
    null $P5088
    set $P5089, $P5088
  if2072_end4622:
    unless_null $P5089, vivi_20734623
    nqp_get_sc_object $P5090, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5089, $P5090
  vivi_20734623:
.annotate 'line', 2609
    nqp_get_sc_object $P5093, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5092, $P5093, "QAST"
    get_who $P5091, $P5092
    set fb_tmp_351, $P5091
    repr_defined $I5012, fb_tmp_351
    unless $I5012 goto if2074_else4624 
    set $P5094, fb_tmp_351["Op"]
    set $P5096, $P5094
    goto if2074_end4625
  if2074_else4624:
    null $P5095
    set $P5096, $P5095
  if2074_end4625:
    unless_null $P5096, vivi_20754626
    nqp_get_sc_object $P5097, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5096, $P5097
  vivi_20754626:
    nqp_get_sc_object $P5100, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5099, $P5100, "QAST"
    get_who $P5098, $P5099
    set fb_tmp_352, $P5098
    repr_defined $I5013, fb_tmp_352
    unless $I5013 goto if2076_else4627 
    set $P5101, fb_tmp_352["Op"]
    set $P5103, $P5101
    goto if2076_end4628
  if2076_else4627:
    null $P5102
    set $P5103, $P5102
  if2076_end4628:
    unless_null $P5103, vivi_20774629
    nqp_get_sc_object $P5104, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5103, $P5104
  vivi_20774629:
    $P5105 = $P5103."new"("curcode" :named("op"))
    $P5106 = $P5096."new"($P5105, "getcodeobj" :named("op"))
.annotate 'line', 2610
    nqp_get_sc_object $P5109, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5108, $P5109, "QAST"
    get_who $P5107, $P5108
    set fb_tmp_353, $P5107
    repr_defined $I5014, fb_tmp_353
    unless $I5014 goto if2078_else4630 
    set $P5110, fb_tmp_353["Op"]
    set $P5112, $P5110
    goto if2078_end4631
  if2078_else4630:
    null $P5111
    set $P5112, $P5111
  if2078_end4631:
    unless_null $P5112, vivi_20794632
    nqp_get_sc_object $P5113, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5112, $P5113
  vivi_20794632:
    $P5114 = $P5112."new"("usecapture" :named("op"))
    $P5115 = $P5089."new"($P5106, $P5114, "callmethod" :named("op"), "dispatch" :named("name"))
    $P5116 = $P5023."new"($P5083, $P5115, "ifnull" :named("op"))
.annotate 'line', 2613
    nqp_get_sc_object $P5119, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5118, $P5119, "QAST"
    get_who $P5117, $P5118
    set fb_tmp_354, $P5117
    repr_defined $I5015, fb_tmp_354
    unless $I5015 goto if2080_else4633 
    set $P5120, fb_tmp_354["Op"]
    set $P5122, $P5120
    goto if2080_end4634
  if2080_else4633:
    null $P5121
    set $P5122, $P5121
  if2080_end4634:
    unless_null $P5122, vivi_20814635
    nqp_get_sc_object $P5123, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5122, $P5123
  vivi_20814635:
    $P5124 = $P5122."new"("usecapture" :named("op"))
    $P5125 = $P5016."new"($P5116, $P5124, "invokewithcapture" :named("op"))
    $P101."push"($P5125)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "attach_multi_signature" :subid("cuid_440_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2618
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5024 = 'cuid_439_1360432459.413' 
    capture_lex $P5024 
    .lex "$types", $P101 
    .lex "$definednesses", $P102 
    .lex "$code_obj", _lex_param_0 
    .lex "$routine", _lex_param_1 
    .local pmc fb_tmp_355 
    .local pmc fb_tmp_359 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
    new $P5003, 'ResizablePMCArray'
    set $P101, $P5003
    new $P5004, 'ResizablePMCArray'
    set $P102, $P5004
    set fb_tmp_355, _lex_param_1
    repr_defined $I5001, fb_tmp_355
    unless $I5001 goto if2082_else4636 
    set $P5008, fb_tmp_355[0]
    set $P5010, $P5008
    goto if2082_end4637
  if2082_else4636:
    null $P5009
    set $P5010, $P5009
  if2082_end4637:
    unless_null $P5010, vivi_20834638
    nqp_get_sc_object $P5011, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5010, $P5011
  vivi_20834638:
    $P5012 = $P5010."list"()
    set $P5005, $P5012
    iter $P5007, $P5012
  for_next4660:
    unless $P5007, for_done4662
    shift $P5014, $P5007
  for_redo4661:
    .const 'Sub' $P5013 = 'cuid_439_1360432459.413' 
    capture_lex $P5013
    $P5005 = $P5013($P5014)
    goto for_next4660
  for_done4662:
.annotate 'line', 2630
    find_dynamic_lex $P5015, "$*W"
    unless_null $P5015, fallback4663
    nqp_get_sc_object $P5017, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5016, $P5017
    set fb_tmp_359, $P5016
    repr_defined $I5002, fb_tmp_359
    unless $I5002 goto if2096_else4664 
    set $P5018, fb_tmp_359["$W"]
    set $P5020, $P5018
    goto if2096_end4665
  if2096_else4664:
    null $P5019
    set $P5020, $P5019
  if2096_end4665:
    unless_null $P5020, vivi_20974666
    nqp_get_sc_object $P5021, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5020, $P5021
  vivi_20974666:
    unless_null $P5020, vivi_20984667
    die "Contextual $*W not found"
    box $P5022, "Contextual $*W not found"
    set $P5020, $P5022
  vivi_20984667:
    set $P5015, $P5020
  fallback4663:
    $P5023 = $P5015."set_routine_signature"(_lex_param_0, $P101, $P102)
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_439_1360432459.413") :anon :lex :outer("cuid_440_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2621
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_356 
    .local pmc fb_tmp_357 
    .local pmc fb_tmp_358 
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5002, $P5003, "QAST"
    get_who $P5001, $P5002
    set fb_tmp_356, $P5001
    repr_defined $I5002, fb_tmp_356
    unless $I5002 goto if2087_else4645 
    set $P5004, fb_tmp_356["Var"]
    set $P5006, $P5004
    goto if2087_end4646
  if2087_else4645:
    null $P5005
    set $P5006, $P5005
  if2087_end4646:
    unless_null $P5006, vivi_20884647
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_20884647:
    type_check $I5001, _lex_param_0, $P5006
    set $I5004, $I5001
    unless $I5001 goto if2086_end4644 
.annotate 'line', 2622
    $P5008 = _lex_param_0."decl"()
    set $S5001, $P5008
    iseq $I5003, $S5001, "param"
    set $I5004, $I5003
  if2086_end4644:
    set $I5006, $I5004
    unless $I5004 goto if2085_end4642 
    $P5009 = _lex_param_0."named"()
    isfalse $I5005, $P5009
    set $I5006, $I5005
  if2085_end4642:
    box $P5027, $I5006
    set $P5026, $P5027
    unless $I5006 goto if2084_end4640 
.annotate 'line', 2623
    find_lex $P5010, "$types"
    $P5011 = _lex_param_0."returns"()
    get_id $I5008, $P5011
    nqp_get_sc_object $P5012, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    get_id $I5009, $P5012
    iseq $I5007, $I5008, $I5009
    unless $I5007 goto if2089_else4648 
    null $P5013
    set $P5015, $P5013
    goto if2089_end4649
  if2089_else4648:
.annotate 'line', 2625
    $P5014 = _lex_param_0."returns"()
    set $P5015, $P5014
  if2089_end4649:
    $P5010."push"($P5015)
.annotate 'line', 2626
    find_lex $P5016, "$definednesses"
    set fb_tmp_357, _lex_param_0
    repr_defined $I5011, fb_tmp_357
    unless $I5011 goto if2091_else4652 
    set $P5017, fb_tmp_357["definedness"]
    set $P5019, $P5017
    goto if2091_end4653
  if2091_else4652:
    null $P5018
    set $P5019, $P5018
  if2091_end4653:
    unless_null $P5019, vivi_20924654
    nqp_get_sc_object $P5020, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5019, $P5020
  vivi_20924654:
    set $S5002, $P5019
    iseq $I5010, $S5002, "D"
    unless $I5010 goto if2090_else4650 
    set $I5015, 1
    goto if2090_end4651
  if2090_else4650:
    set fb_tmp_358, _lex_param_0
    repr_defined $I5013, fb_tmp_358
    unless $I5013 goto if2094_else4657 
    set $P5021, fb_tmp_358["definedness"]
    set $P5023, $P5021
    goto if2094_end4658
  if2094_else4657:
    null $P5022
    set $P5023, $P5022
  if2094_end4658:
    unless_null $P5023, vivi_20954659
    nqp_get_sc_object $P5024, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5023, $P5024
  vivi_20954659:
    set $S5003, $P5023
    iseq $I5012, $S5003, "U"
    unless $I5012 goto if2093_else4655 
    set $I5014, 2
    goto if2093_end4656
  if2093_else4655:
    set $I5014, 0
  if2093_end4656:
    set $I5015, $I5014
  if2090_end4651:
    $P5025 = $P5016."push"($I5015)
    set $P5026, $P5025
  if2084_end4640:
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "wrap_return_handler" :subid("cuid_441_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2633
    .param pmc _lex_param_0 
    .lex "$past", _lex_param_0 
    .local pmc fb_tmp_360 
.annotate 'line', 2634
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5002, $P5003, "QAST"
    get_who $P5001, $P5002
    set fb_tmp_360, $P5001
    repr_defined $I5001, fb_tmp_360
    unless $I5001 goto if2099_else4668 
    set $P5004, fb_tmp_360["Op"]
    set $P5006, $P5004
    goto if2099_end4669
  if2099_else4668:
    null $P5005
    set $P5006, $P5005
  if2099_end4669:
    unless_null $P5006, vivi_21004670
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_21004670:
    $P5008 = $P5006."new"(_lex_param_0, "lexotic" :named("op"), "RETURN" :named("name"))
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "lexical_package_lookup" :subid("cuid_446_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3132
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5092 = 'cuid_444_1360432459.413' 
    capture_lex $P5092 
    .lex "$final_name", $P101 
    .lex "$lookup", $P102 
    .lex "@name", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_361 
    .local pmc fb_tmp_362 
    .local pmc fb_tmp_363 
    .local pmc fb_tmp_364 
    .local pmc fb_tmp_365 
    .local pmc fb_tmp_366 
    .local pmc fb_tmp_367 
    .local pmc fb_tmp_368 
    .local pmc fb_tmp_369 
    .local pmc fb_tmp_370 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
    root_new $P103, ['parrot';'Continuation']
    set_label $P103, lexotic_4671
    .lex "RETURN", $P103
    set $N5001, _lex_param_0
    set $N5002, 0
    iseq $I5001, $N5001, $N5002
    unless $I5001 goto if2101_end4674 
.annotate 'line', 3134
    $P5003 = _lex_param_1."CURSOR"()
    $P5004 = $P5003."panic"("Cannot compile empty name")
  if2101_end4674:
.annotate 'line', 3138
    $P5005 = _lex_param_0."pop"()
    set $P101, $P5005
.annotate 'line', 3139
    nqp_get_sc_object $P5008, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5007, $P5008, "QAST"
    get_who $P5006, $P5007
    set fb_tmp_361, $P5006
    repr_defined $I5002, fb_tmp_361
    unless $I5002 goto if2102_else4675 
    set $P5009, fb_tmp_361["VarWithFallback"]
    set $P5011, $P5009
    goto if2102_end4676
  if2102_else4675:
    null $P5010
    set $P5011, $P5010
  if2102_end4676:
    unless_null $P5011, vivi_21034677
    nqp_get_sc_object $P5012, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5011, $P5012
  vivi_21034677:
.annotate 'line', 3141
    nqp_get_sc_object $P5015, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5014, $P5015, "QAST"
    get_who $P5013, $P5014
    set fb_tmp_362, $P5013
    repr_defined $I5003, fb_tmp_362
    unless $I5003 goto if2104_else4678 
    set $P5016, fb_tmp_362["SVal"]
    set $P5018, $P5016
    goto if2104_end4679
  if2104_else4678:
    null $P5017
    set $P5018, $P5017
  if2104_end4679:
    unless_null $P5018, vivi_21054680
    nqp_get_sc_object $P5019, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5018, $P5019
  vivi_21054680:
    set $S5001, $P101
    $P5020 = $P5018."new"($S5001 :named("value"))
    $P5021 = $P5011."new"($P5020, "associative" :named("scope"))
    set $P102, $P5021
    set $N5003, _lex_param_0
    set $N5004, 0
    iseq $I5004, $N5003, $N5004
    unless $I5004 goto if2106_else4681 
.annotate 'line', 3146
.annotate 'line', 3147
    nqp_get_sc_object $P5024, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5023, $P5024, "QAST"
    get_who $P5022, $P5023
    set fb_tmp_363, $P5022
    repr_defined $I5005, fb_tmp_363
    unless $I5005 goto if2107_else4683 
    set $P5025, fb_tmp_363["Op"]
    set $P5027, $P5025
    goto if2107_end4684
  if2107_else4683:
    null $P5026
    set $P5027, $P5026
  if2107_end4684:
    unless_null $P5027, vivi_21084685
    nqp_get_sc_object $P5028, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5027, $P5028
  vivi_21084685:
.annotate 'line', 3149
    nqp_get_sc_object $P5031, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5030, $P5031, "QAST"
    get_who $P5029, $P5030
    set fb_tmp_364, $P5029
    repr_defined $I5006, fb_tmp_364
    unless $I5006 goto if2109_else4686 
    set $P5032, fb_tmp_364["Var"]
    set $P5034, $P5032
    goto if2109_end4687
  if2109_else4686:
    null $P5033
    set $P5034, $P5033
  if2109_end4687:
    unless_null $P5034, vivi_21104688
    nqp_get_sc_object $P5035, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5034, $P5035
  vivi_21104688:
    $P5036 = $P5034."new"("$?PACKAGE" :named("name"), "lexical" :named("scope"))
    $P5037 = $P5027."new"($P5036, "who" :named("op"))
    $P102."unshift"($P5037)
.annotate 'line', 3151
    nqp_get_sc_object $P5040, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5039, $P5040, "QAST"
    get_who $P5038, $P5039
    set fb_tmp_365, $P5038
    repr_defined $I5007, fb_tmp_365
    unless $I5007 goto if2111_else4689 
    set $P5041, fb_tmp_365["Op"]
    set $P5043, $P5041
    goto if2111_end4690
  if2111_else4689:
    null $P5042
    set $P5043, $P5042
  if2111_end4690:
    unless_null $P5043, vivi_21124691
    nqp_get_sc_object $P5044, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5043, $P5044
  vivi_21124691:
.annotate 'line', 3153
    nqp_get_sc_object $P5047, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5046, $P5047, "QAST"
    get_who $P5045, $P5046
    set fb_tmp_366, $P5045
    repr_defined $I5008, fb_tmp_366
    unless $I5008 goto if2113_else4692 
    set $P5048, fb_tmp_366["Op"]
    set $P5050, $P5048
    goto if2113_end4693
  if2113_else4692:
    null $P5049
    set $P5050, $P5049
  if2113_end4693:
    unless_null $P5050, vivi_21144694
    nqp_get_sc_object $P5051, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5050, $P5051
  vivi_21144694:
.annotate 'line', 3155
    nqp_get_sc_object $P5054, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5053, $P5054, "QAST"
    get_who $P5052, $P5053
    set fb_tmp_367, $P5052
    repr_defined $I5009, fb_tmp_367
    unless $I5009 goto if2115_else4695 
    set $P5055, fb_tmp_367["Op"]
    set $P5057, $P5055
    goto if2115_end4696
  if2115_else4695:
    null $P5056
    set $P5057, $P5056
  if2115_end4696:
    unless_null $P5057, vivi_21164697
    nqp_get_sc_object $P5058, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5057, $P5058
  vivi_21164697:
.annotate 'line', 3157
    nqp_get_sc_object $P5061, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5060, $P5061, "QAST"
    get_who $P5059, $P5060
    set fb_tmp_368, $P5059
    repr_defined $I5010, fb_tmp_368
    unless $I5010 goto if2117_else4698 
    set $P5062, fb_tmp_368["WVal"]
    set $P5064, $P5062
    goto if2117_end4699
  if2117_else4698:
    null $P5063
    set $P5064, $P5063
  if2117_end4699:
    unless_null $P5064, vivi_21184700
    nqp_get_sc_object $P5065, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5064, $P5065
  vivi_21184700:
    find_dynamic_lex $P5066, "$*GLOBALish"
    unless_null $P5066, fallback4701
    nqp_get_sc_object $P5068, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5067, $P5068
    set fb_tmp_369, $P5067
    repr_defined $I5011, fb_tmp_369
    unless $I5011 goto if2119_else4702 
    set $P5069, fb_tmp_369["$GLOBALish"]
    set $P5071, $P5069
    goto if2119_end4703
  if2119_else4702:
    null $P5070
    set $P5071, $P5070
  if2119_end4703:
    unless_null $P5071, vivi_21204704
    nqp_get_sc_object $P5072, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5071, $P5072
  vivi_21204704:
    unless_null $P5071, vivi_21214705
    die "Contextual $*GLOBALish not found"
    box $P5073, "Contextual $*GLOBALish not found"
    set $P5071, $P5073
  vivi_21214705:
    set $P5066, $P5071
  fallback4701:
    $P5074 = $P5064."new"($P5066 :named("value"))
    $P5075 = $P5057."new"($P5074, "who" :named("op"))
.annotate 'line', 3159
    nqp_get_sc_object $P5078, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5077, $P5078, "QAST"
    get_who $P5076, $P5077
    set fb_tmp_370, $P5076
    repr_defined $I5012, fb_tmp_370
    unless $I5012 goto if2122_else4706 
    set $P5079, fb_tmp_370["SVal"]
    set $P5081, $P5079
    goto if2122_end4707
  if2122_else4706:
    null $P5080
    set $P5081, $P5080
  if2122_end4707:
    unless_null $P5081, vivi_21234708
    nqp_get_sc_object $P5082, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5081, $P5082
  vivi_21234708:
    set $S5002, $P101
    $P5083 = $P5081."new"($S5002 :named("value"))
    $P5084 = $P5050."new"($P5075, $P5083, "atkey" :named("op"))
.annotate 'line', 3161
    set $S5004, $P101
    substr $S5003, $S5004, 0, 1
    $P5085 = "&default_for"($S5003)
    $P5086 = $P5043."new"($P5084, $P5085, "ifnull" :named("op"))
    $P5087 = $P102."fallback"($P5086)
    goto if2106_end4682
  if2106_else4681:
    .const 'Sub' $P5088 = 'cuid_444_1360432459.413' 
    capture_lex $P5088
    $P5089 = $P5088()
  if2106_end4682:
    find_lex $P5090, "RETURN"
    $P5091 = $P5090($P102)
    goto lexotic_4672
  lexotic_4671:
    .get_results ($P5091)
  lexotic_4672:
    .return ($P5091) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_444_1360432459.413") :anon :lex :outer("cuid_446_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3167
    .const 'Sub' $P5084 = 'cuid_443_1360432459.413' 
    capture_lex $P5084 
    .const 'Sub' $P5084 = 'cuid_445_1360432459.413' 
    capture_lex $P5084 
    .lex "$path", $P101 
    .lex "$sigil", $P102 
    .local pmc fb_tmp_371 
    .local pmc fb_tmp_372 
    .local pmc fb_tmp_376 
    .local pmc fb_tmp_377 
    .local pmc fb_tmp_378 
    .local pmc fb_tmp_381 
    .local pmc fb_tmp_382 
    .local pmc fb_tmp_383 
    .local pmc fb_tmp_384 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
.annotate 'line', 3169
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback4711
    nqp_get_sc_object $P5005, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5004, $P5005
    set fb_tmp_371, $P5004
    repr_defined $I5001, fb_tmp_371
    unless $I5001 goto if2125_else4712 
    set $P5006, fb_tmp_371["$W"]
    set $P5008, $P5006
    goto if2125_end4713
  if2125_else4712:
    null $P5007
    set $P5008, $P5007
  if2125_end4713:
    unless_null $P5008, vivi_21264714
    nqp_get_sc_object $P5009, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5008, $P5009
  vivi_21264714:
    unless_null $P5008, vivi_21274715
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_21274715:
    set $P5003, $P5008
  fallback4711:
    find_lex $P5011, "@name"
    set fb_tmp_372, $P5011
    repr_defined $I5002, fb_tmp_372
    unless $I5002 goto if2128_else4716 
    set $P5012, fb_tmp_372[0]
    set $P5014, $P5012
    goto if2128_end4717
  if2128_else4716:
    null $P5013
    set $P5014, $P5013
  if2128_end4717:
    unless_null $P5014, vivi_21294718
    nqp_get_sc_object $P5015, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5014, $P5015
  vivi_21294718:
    $P5016 = $P5003."is_lexical"($P5014)
    unless $P5016 goto if2124_else4709 
    .const 'Sub' $P5017 = 'cuid_443_1360432459.413' 
    capture_lex $P5017
    $P5018 = $P5017()
    goto if2124_end4710
  if2124_else4709:
.annotate 'line', 3178
.annotate 'line', 3179
    nqp_get_sc_object $P5021, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5020, $P5021, "QAST"
    get_who $P5019, $P5020
    set fb_tmp_376, $P5019
    repr_defined $I5003, fb_tmp_376
    unless $I5003 goto if2139_else4732 
    set $P5022, fb_tmp_376["WVal"]
    set $P5024, $P5022
    goto if2139_end4733
  if2139_else4732:
    null $P5023
    set $P5024, $P5023
  if2139_end4733:
    unless_null $P5024, vivi_21404734
    nqp_get_sc_object $P5025, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5024, $P5025
  vivi_21404734:
    find_dynamic_lex $P5026, "$*GLOBALish"
    unless_null $P5026, fallback4735
    nqp_get_sc_object $P5028, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5027, $P5028
    set fb_tmp_377, $P5027
    repr_defined $I5004, fb_tmp_377
    unless $I5004 goto if2141_else4736 
    set $P5029, fb_tmp_377["$GLOBALish"]
    set $P5031, $P5029
    goto if2141_end4737
  if2141_else4736:
    null $P5030
    set $P5031, $P5030
  if2141_end4737:
    unless_null $P5031, vivi_21424738
    nqp_get_sc_object $P5032, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5031, $P5032
  vivi_21424738:
    unless_null $P5031, vivi_21434739
    die "Contextual $*GLOBALish not found"
    box $P5033, "Contextual $*GLOBALish not found"
    set $P5031, $P5033
  vivi_21434739:
    set $P5026, $P5031
  fallback4735:
    $P5034 = $P5024."new"($P5026 :named("value"))
    set $P101, $P5034
  if2124_end4710:
    find_lex $P5035, "@name"
    set fb_tmp_378, $P5035
    repr_defined $I5006, fb_tmp_378
    unless $I5006 goto if2145_else4742 
    set $P5036, fb_tmp_378[0]
    set $P5038, $P5036
    goto if2145_end4743
  if2145_else4742:
    null $P5037
    set $P5038, $P5037
  if2145_end4743:
    unless_null $P5038, vivi_21464744
    nqp_get_sc_object $P5039, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5038, $P5039
  vivi_21464744:
    set $S5001, $P5038
    iseq $I5005, $S5001, "GLOBAL"
    unless $I5005 goto if2144_end4741 
.annotate 'line', 3181
.annotate 'line', 3182
    find_lex $P5040, "@name"
    $P5041 = $P5040."shift"()
  if2144_end4741:
    find_lex $P5045, "@name"
    set $P5042, $P5045
    iter $P5044, $P5045
  for_next4751:
    unless $P5044, for_done4753
    shift $P5047, $P5044
  for_redo4752:
    .const 'Sub' $P5046 = 'cuid_445_1360432459.413' 
    capture_lex $P5046
    $P5042 = $P5046($P5047)
    goto for_next4751
  for_done4753:
.annotate 'line', 3189
    find_lex $P5048, "$lookup"
    nqp_get_sc_object $P5051, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5050, $P5051, "QAST"
    get_who $P5049, $P5050
    set fb_tmp_381, $P5049
    repr_defined $I5007, fb_tmp_381
    unless $I5007 goto if2151_else4754 
    set $P5052, fb_tmp_381["Op"]
    set $P5054, $P5052
    goto if2151_end4755
  if2151_else4754:
    null $P5053
    set $P5054, $P5053
  if2151_end4755:
    unless_null $P5054, vivi_21524756
    nqp_get_sc_object $P5055, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5054, $P5055
  vivi_21524756:
    $P5056 = $P5054."new"($P101, "who" :named("op"))
    $P5048."unshift"($P5056)
    find_lex $P5057, "$final_name"
    set $S5003, $P5057
    substr $S5002, $S5003, 0, 1
    box $P5058, $S5002
    set $P102, $P5058
    set $S5004, $P102
    iseq $I5008, $S5004, "@"
    set $I5010, $I5008
    if $I5008 goto unless2154_end4760 
    set $S5005, $P102
    iseq $I5009, $S5005, "%"
    set $I5010, $I5009
  unless2154_end4760:
    unless $I5010 goto if2153_else4757 
.annotate 'line', 3191
.annotate 'line', 3192
    find_lex $P5059, "$lookup"
    nqp_get_sc_object $P5062, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5061, $P5062, "QAST"
    get_who $P5060, $P5061
    set fb_tmp_382, $P5060
    repr_defined $I5011, fb_tmp_382
    unless $I5011 goto if2155_else4761 
    set $P5063, fb_tmp_382["Op"]
    set $P5065, $P5063
    goto if2155_end4762
  if2155_else4761:
    null $P5064
    set $P5065, $P5064
  if2155_end4762:
    unless_null $P5065, vivi_21564763
    nqp_get_sc_object $P5066, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5065, $P5066
  vivi_21564763:
    find_lex $P5067, "$lookup"
    set fb_tmp_383, $P5067
    repr_defined $I5012, fb_tmp_383
    unless $I5012 goto if2157_else4764 
    set $P5068, fb_tmp_383[0]
    set $P5070, $P5068
    goto if2157_end4765
  if2157_else4764:
    null $P5069
    set $P5070, $P5069
  if2157_end4765:
    unless_null $P5070, vivi_21584766
    nqp_get_sc_object $P5071, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5070, $P5071
  vivi_21584766:
    find_lex $P5072, "$lookup"
    set fb_tmp_384, $P5072
    repr_defined $I5013, fb_tmp_384
    unless $I5013 goto if2159_else4767 
    set $P5073, fb_tmp_384[1]
    set $P5075, $P5073
    goto if2159_end4768
  if2159_else4767:
    null $P5074
    set $P5075, $P5074
  if2159_end4768:
    unless_null $P5075, vivi_21604769
    nqp_get_sc_object $P5076, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5075, $P5076
  vivi_21604769:
.annotate 'line', 3196
    $P5077 = "&default_for"($P102)
    $P5078 = $P5065."new"($P5070, $P5075, $P5077, "bindkey" :named("op"))
    $P5079 = $P5059."fallback"($P5078)
    set $P5083, $P5079
    goto if2153_end4758
  if2153_else4757:
.annotate 'line', 3199
.annotate 'line', 3200
    find_lex $P5080, "$lookup"
    $P5081 = "&default_for"($P102)
    $P5082 = $P5080."fallback"($P5081)
    set $P5083, $P5082
  if2153_end4758:
    .return ($P5083) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_443_1360432459.413") :anon :lex :outer("cuid_444_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3170
    .const 'Sub' $P5025 = 'cuid_442_1360432459.413' 
    capture_lex $P5025 
    .lex "$first", $P101 
    .local pmc fb_tmp_373 
    .local pmc fb_tmp_374 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    new $P5023, 'ExceptionHandler'
    set_label $P5023, catch_handler_21364728
    $P5023.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5023
.annotate 'line', 3171
    find_lex $P5002, "@name"
    $P5003 = $P5002."shift"()
    set $P101, $P5003
.annotate 'line', 3172
    nqp_get_sc_object $P5006, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5005, $P5006, "QAST"
    get_who $P5004, $P5005
    set fb_tmp_373, $P5004
    repr_defined $I5001, fb_tmp_373
    unless $I5001 goto if2130_else4719 
    set $P5007, fb_tmp_373["WVal"]
    set $P5009, $P5007
    goto if2130_end4720
  if2130_else4719:
    null $P5008
    set $P5009, $P5008
  if2130_end4720:
    unless_null $P5009, vivi_21314721
    nqp_get_sc_object $P5010, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5009, $P5010
  vivi_21314721:
    find_dynamic_lex $P5011, "$*W"
    unless_null $P5011, fallback4722
    nqp_get_sc_object $P5013, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5012, $P5013
    set fb_tmp_374, $P5012
    repr_defined $I5002, fb_tmp_374
    unless $I5002 goto if2132_else4723 
    set $P5014, fb_tmp_374["$W"]
    set $P5016, $P5014
    goto if2132_end4724
  if2132_else4723:
    null $P5015
    set $P5016, $P5015
  if2132_end4724:
    unless_null $P5016, vivi_21334725
    nqp_get_sc_object $P5017, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5016, $P5017
  vivi_21334725:
    unless_null $P5016, vivi_21344726
    die "Contextual $*W not found"
    box $P5018, "Contextual $*W not found"
    set $P5016, $P5018
  vivi_21344726:
    set $P5011, $P5016
  fallback4722:
    new $P5019, 'ResizablePMCArray'
    push $P5019, $P101
    $P5020 = $P5011."find_sym"($P5019)
    $P5021 = $P5009."new"($P5020 :named("value"))
    store_lex "$path", $P5021
    nqp_get_sc_object $P5022, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5024, $P5022
    pop_eh 
    goto skip_handler_21354727
  catch_handler_21364728:
    .get_results ($P5023) 
    .const 'Sub' $P10001 = 'cuid_442_1360432459.413' 
    capture_lex $P10001
    $P10001($P5023)
    set $I10001, 1
    set $P5023["handled"], $I10001
    nqp_get_sc_object $P10002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    finalize $P5023
    pop_upto_eh $P5023
    pop_eh 
    set $P5024, $P10002
    goto skip_handler_21354727
  skip_handler_21354727:
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_442_1360432459.413") :anon :lex :outer("cuid_443_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3173
    .param pmc _lex_param_0 
    .lex "$!", $P101 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_375 
    set $P101, _lex_param_0
.annotate 'line', 3174
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5002, $P5003, "QAST"
    get_who $P5001, $P5002
    set fb_tmp_375, $P5001
    repr_defined $I5001, fb_tmp_375
    unless $I5001 goto if2137_else4729 
    set $P5004, fb_tmp_375["Var"]
    set $P5006, $P5004
    goto if2137_end4730
  if2137_else4729:
    null $P5005
    set $P5006, $P5005
  if2137_end4730:
    unless_null $P5006, vivi_21384731
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_21384731:
    find_lex $P5008, "$first"
    $P5009 = $P5006."new"($P5008 :named("name"), "lexical" :named("scope"))
    store_lex "$path", $P5009
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_445_1360432459.413") :anon :lex :outer("cuid_444_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3184
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_379 
    .local pmc fb_tmp_380 
.annotate 'line', 3185
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5002, $P5003, "QAST"
    get_who $P5001, $P5002
    set fb_tmp_379, $P5001
    repr_defined $I5001, fb_tmp_379
    unless $I5001 goto if2147_else4745 
    set $P5004, fb_tmp_379["VM"]
    set $P5006, $P5004
    goto if2147_end4746
  if2147_else4745:
    null $P5005
    set $P5006, $P5005
  if2147_end4746:
    unless_null $P5006, vivi_21484747
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_21484747:
    find_lex $P5008, "$path"
.annotate 'line', 3187
    nqp_get_sc_object $P5011, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5010, $P5011, "QAST"
    get_who $P5009, $P5010
    set fb_tmp_380, $P5009
    repr_defined $I5002, fb_tmp_380
    unless $I5002 goto if2149_else4748 
    set $P5012, fb_tmp_380["SVal"]
    set $P5014, $P5012
    goto if2149_end4749
  if2149_else4748:
    null $P5013
    set $P5014, $P5013
  if2149_end4749:
    unless_null $P5014, vivi_21504750
    nqp_get_sc_object $P5015, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5014, $P5015
  vivi_21504750:
    set $S5001, _lex_param_0
    $P5016 = $P5014."new"($S5001 :named("value"))
    $P5017 = $P5006."new"($P5008, $P5016, "nqp_get_package_through_who PPs" :named("pirop"))
    store_lex "$path", $P5017
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "TOP" :subid("cuid_247_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1623
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_385 
    unless_null _lex_param_1, fallback4772
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback4772:
    set fb_tmp_385, _lex_param_1
    repr_defined $I5001, fb_tmp_385
    unless $I5001 goto if2161_else4770 
    set $P5002, fb_tmp_385["comp_unit"]
    set $P5004, $P5002
    goto if2161_end4771
  if2161_else4770:
    null $P5003
    set $P5004, $P5003
  if2161_end4771:
    unless_null $P5004, vivi_21624773
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_21624773:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "deflongname" :subid("cuid_248_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1625
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_386 
    .local pmc fb_tmp_387 
    .local pmc fb_tmp_388 
    .local pmc fb_tmp_389 
    .local pmc fb_tmp_390 
    .local pmc fb_tmp_391 
.annotate 'line', 1626
    unless_null _lex_param_1, fallback4778
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback4778:
    set fb_tmp_386, _lex_param_1
    repr_defined $I5001, fb_tmp_386
    unless $I5001 goto if2164_else4776 
    set $P5002, fb_tmp_386["colonpair"]
    set $P5004, $P5002
    goto if2164_end4777
  if2164_else4776:
    null $P5003
    set $P5004, $P5003
  if2164_end4777:
    unless_null $P5004, vivi_21654779
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_21654779:
    unless $P5004 goto if2163_else4774 
    unless_null _lex_param_1, fallback4782
    nqp_get_sc_object $P5006, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5006
  fallback4782:
    set fb_tmp_387, _lex_param_1
    repr_defined $I5002, fb_tmp_387
    unless $I5002 goto if2166_else4780 
    set $P5007, fb_tmp_387["identifier"]
    set $P5009, $P5007
    goto if2166_end4781
  if2166_else4780:
    null $P5008
    set $P5009, $P5008
  if2166_end4781:
    unless_null $P5009, vivi_21674783
    nqp_get_sc_object $P5010, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5009, $P5010
  vivi_21674783:
    set $S5006, $P5009
    concat $S5005, $S5006, ":"
.annotate 'line', 1627
    unless_null _lex_param_1, fallback4788
    nqp_get_sc_object $P5011, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5011
  fallback4788:
    set fb_tmp_389, _lex_param_1
    repr_defined $I5004, fb_tmp_389
    unless $I5004 goto if2169_else4786 
    set $P5012, fb_tmp_389["colonpair"]
    set $P5014, $P5012
    goto if2169_end4787
  if2169_else4786:
    null $P5013
    set $P5014, $P5013
  if2169_end4787:
    unless_null $P5014, vivi_21704789
    nqp_get_sc_object $P5015, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5014, $P5015
  vivi_21704789:
    set fb_tmp_388, $P5014
    repr_defined $I5003, fb_tmp_388
    unless $I5003 goto if2168_else4784 
    set $P5016, fb_tmp_388[0]
    set $P5018, $P5016
    goto if2168_end4785
  if2168_else4784:
    null $P5017
    set $P5018, $P5017
  if2168_end4785:
    unless_null $P5018, vivi_21714790
    nqp_get_sc_object $P5019, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5018, $P5019
  vivi_21714790:
    $P5020 = $P5018."ast"()
    $P5021 = $P5020."named"()
    set $S5007, $P5021
    concat $S5004, $S5005, $S5007
    concat $S5003, $S5004, "<"
.annotate 'line', 1628
    unless_null _lex_param_1, fallback4795
    nqp_get_sc_object $P5022, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5022
  fallback4795:
    set fb_tmp_391, _lex_param_1
    repr_defined $I5006, fb_tmp_391
    unless $I5006 goto if2173_else4793 
    set $P5023, fb_tmp_391["colonpair"]
    set $P5025, $P5023
    goto if2173_end4794
  if2173_else4793:
    null $P5024
    set $P5025, $P5024
  if2173_end4794:
    unless_null $P5025, vivi_21744796
    nqp_get_sc_object $P5026, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5025, $P5026
  vivi_21744796:
    set fb_tmp_390, $P5025
    repr_defined $I5005, fb_tmp_390
    unless $I5005 goto if2172_else4791 
    set $P5027, fb_tmp_390[0]
    set $P5029, $P5027
    goto if2172_end4792
  if2172_else4791:
    null $P5028
    set $P5029, $P5028
  if2172_end4792:
    unless_null $P5029, vivi_21754797
    nqp_get_sc_object $P5030, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5029, $P5030
  vivi_21754797:
    $P5031 = $P5029."ast"()
    $P5032 = "&colonpair_str"($P5031)
    set $S5008, $P5032
    concat $S5002, $S5003, $S5008
    concat $S5001, $S5002, ">"
    set $S5010, $S5001
    goto if2163_end4775
  if2163_else4774:
    set $S5009, _lex_param_1
    set $S5010, $S5009
  if2163_end4775:
    $P5033 = _lex_param_1."!make"($S5010)
    .return ($P5033) 
.end
.HLL "nqp"
.namespace []
.sub "comp_unit" :subid("cuid_249_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1642
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$mainline", $P101 
    .lex "$unit", $P102 
    .lex "$compunit", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_392 
    .local pmc fb_tmp_393 
    .local pmc fb_tmp_394 
    .local pmc fb_tmp_395 
    .local pmc fb_tmp_396 
    .local pmc fb_tmp_397 
    .local pmc fb_tmp_398 
    .local pmc fb_tmp_399 
    .local pmc fb_tmp_400 
    .local pmc fb_tmp_401 
    .local pmc fb_tmp_402 
    .local pmc fb_tmp_403 
    .local pmc fb_tmp_404 
    .local pmc fb_tmp_405 
    .local pmc fb_tmp_406 
    .local pmc fb_tmp_407 
    .local pmc fb_tmp_408 
    .local pmc fb_tmp_409 
    .local pmc fb_tmp_410 
    .local pmc fb_tmp_411 
    .local pmc fb_tmp_412 
    .local pmc fb_tmp_413 
    .local pmc fb_tmp_414 
    .local pmc fb_tmp_415 
    .local pmc fb_tmp_416 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P103, $P5003
.annotate 'line', 1643
    unless_null _lex_param_1, fallback4800
    nqp_get_sc_object $P5004, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5004
  fallback4800:
    set fb_tmp_392, _lex_param_1
    repr_defined $I5001, fb_tmp_392
    unless $I5001 goto if2176_else4798 
    set $P5005, fb_tmp_392["statementlist"]
    set $P5007, $P5005
    goto if2176_end4799
  if2176_else4798:
    null $P5006
    set $P5007, $P5006
  if2176_end4799:
    unless_null $P5007, vivi_21774801
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5007, $P5008
  vivi_21774801:
    $P5009 = $P5007."ast"()
    set $P101, $P5009
.annotate 'line', 1644
    find_dynamic_lex $P5010, "$*W"
    unless_null $P5010, fallback4802
    nqp_get_sc_object $P5012, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5011, $P5012
    set fb_tmp_393, $P5011
    repr_defined $I5002, fb_tmp_393
    unless $I5002 goto if2178_else4803 
    set $P5013, fb_tmp_393["$W"]
    set $P5015, $P5013
    goto if2178_end4804
  if2178_else4803:
    null $P5014
    set $P5015, $P5014
  if2178_end4804:
    unless_null $P5015, vivi_21794805
    nqp_get_sc_object $P5016, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5015, $P5016
  vivi_21794805:
    unless_null $P5015, vivi_21804806
    die "Contextual $*W not found"
    box $P5017, "Contextual $*W not found"
    set $P5015, $P5017
  vivi_21804806:
    set $P5010, $P5015
  fallback4802:
    $P5018 = $P5010."pop_lexpad"()
    set $P102, $P5018
    find_dynamic_lex $P5019, "$*HAS_YOU_ARE_HERE"
    unless_null $P5019, fallback4809
    nqp_get_sc_object $P5021, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5020, $P5021
    set fb_tmp_394, $P5020
    repr_defined $I5003, fb_tmp_394
    unless $I5003 goto if2182_else4810 
    set $P5022, fb_tmp_394["$HAS_YOU_ARE_HERE"]
    set $P5024, $P5022
    goto if2182_end4811
  if2182_else4810:
    null $P5023
    set $P5024, $P5023
  if2182_end4811:
    unless_null $P5024, vivi_21834812
    nqp_get_sc_object $P5025, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5024, $P5025
  vivi_21834812:
    unless_null $P5024, vivi_21844813
    die "Contextual $*HAS_YOU_ARE_HERE not found"
    box $P5026, "Contextual $*HAS_YOU_ARE_HERE not found"
    set $P5024, $P5026
  vivi_21844813:
    set $P5019, $P5024
  fallback4809:
    if $P5019 goto unless2181_end4808 
.annotate 'line', 1649
.annotate 'line', 1650
    nqp_decontainerize $P5027, _lex_param_0
    $P5028 = $P5027."CTXSAVE"()
    $P5029 = $P102."push"($P5028)
  unless2181_end4808:
.annotate 'line', 1657
    nqp_get_sc_object $P5032, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5031, $P5032, "QAST"
    get_who $P5030, $P5031
    set fb_tmp_395, $P5030
    repr_defined $I5004, fb_tmp_395
    unless $I5004 goto if2185_else4814 
    set $P5033, fb_tmp_395["Var"]
    set $P5035, $P5033
    goto if2185_end4815
  if2185_else4814:
    null $P5034
    set $P5035, $P5034
  if2185_end4815:
    unless_null $P5035, vivi_21864816
    nqp_get_sc_object $P5036, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5035, $P5036
  vivi_21864816:
    $P5037 = $P5035."new"("lexical" :named("scope"), "@ARGS" :named("name"), "param" :named("decl"), 1 :named("slurpy"))
    $P102."unshift"($P5037)
    find_dynamic_lex $P5038, "$*MAIN_SUB"
    unless_null $P5038, fallback4819
    nqp_get_sc_object $P5040, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5039, $P5040
    set fb_tmp_396, $P5039
    repr_defined $I5005, fb_tmp_396
    unless $I5005 goto if2188_else4820 
    set $P5041, fb_tmp_396["$MAIN_SUB"]
    set $P5043, $P5041
    goto if2188_end4821
  if2188_else4820:
    null $P5042
    set $P5043, $P5042
  if2188_end4821:
    unless_null $P5043, vivi_21894822
    nqp_get_sc_object $P5044, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5043, $P5044
  vivi_21894822:
    unless_null $P5043, vivi_21904823
    die "Contextual $*MAIN_SUB not found"
    box $P5045, "Contextual $*MAIN_SUB not found"
    set $P5043, $P5045
  vivi_21904823:
    set $P5038, $P5043
  fallback4819:
    unless $P5038 goto if2187_end4818 
.annotate 'line', 1658
.annotate 'line', 1659
    nqp_get_sc_object $P5048, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5047, $P5048, "QAST"
    get_who $P5046, $P5047
    set fb_tmp_397, $P5046
    repr_defined $I5006, fb_tmp_397
    unless $I5006 goto if2191_else4824 
    set $P5049, fb_tmp_397["Op"]
    set $P5051, $P5049
    goto if2191_end4825
  if2191_else4824:
    null $P5050
    set $P5051, $P5050
  if2191_end4825:
    unless_null $P5051, vivi_21924826
    nqp_get_sc_object $P5052, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5051, $P5052
  vivi_21924826:
.annotate 'line', 1661
    nqp_get_sc_object $P5055, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5054, $P5055, "QAST"
    get_who $P5053, $P5054
    set fb_tmp_398, $P5053
    repr_defined $I5007, fb_tmp_398
    unless $I5007 goto if2193_else4827 
    set $P5056, fb_tmp_398["Var"]
    set $P5058, $P5056
    goto if2193_end4828
  if2193_else4827:
    null $P5057
    set $P5058, $P5057
  if2193_end4828:
    unless_null $P5058, vivi_21944829
    nqp_get_sc_object $P5059, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5058, $P5059
  vivi_21944829:
    $P5060 = $P5058."new"("lexical" :named("scope"), "@ARGS" :named("name"))
.annotate 'line', 1662
    nqp_get_sc_object $P5063, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5062, $P5063, "QAST"
    get_who $P5061, $P5062
    set fb_tmp_399, $P5061
    repr_defined $I5008, fb_tmp_399
    unless $I5008 goto if2195_else4830 
    set $P5064, fb_tmp_399["Op"]
    set $P5066, $P5064
    goto if2195_end4831
  if2195_else4830:
    null $P5065
    set $P5066, $P5065
  if2195_end4831:
    unless_null $P5066, vivi_21964832
    nqp_get_sc_object $P5067, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5066, $P5067
  vivi_21964832:
.annotate 'line', 1663
    nqp_get_sc_object $P5070, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5069, $P5070, "QAST"
    get_who $P5068, $P5069
    set fb_tmp_400, $P5068
    repr_defined $I5009, fb_tmp_400
    unless $I5009 goto if2197_else4833 
    set $P5071, fb_tmp_400["BVal"]
    set $P5073, $P5071
    goto if2197_end4834
  if2197_else4833:
    null $P5072
    set $P5073, $P5072
  if2197_end4834:
    unless_null $P5073, vivi_21984835
    nqp_get_sc_object $P5074, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5073, $P5074
  vivi_21984835:
    find_dynamic_lex $P5075, "$*MAIN_SUB"
    unless_null $P5075, fallback4836
    nqp_get_sc_object $P5077, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5076, $P5077
    set fb_tmp_401, $P5076
    repr_defined $I5010, fb_tmp_401
    unless $I5010 goto if2199_else4837 
    set $P5078, fb_tmp_401["$MAIN_SUB"]
    set $P5080, $P5078
    goto if2199_end4838
  if2199_else4837:
    null $P5079
    set $P5080, $P5079
  if2199_end4838:
    unless_null $P5080, vivi_22004839
    nqp_get_sc_object $P5081, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5080, $P5081
  vivi_22004839:
    unless_null $P5080, vivi_22014840
    die "Contextual $*MAIN_SUB not found"
    box $P5082, "Contextual $*MAIN_SUB not found"
    set $P5080, $P5082
  vivi_22014840:
    set $P5075, $P5080
  fallback4836:
    $P5083 = $P5073."new"($P5075 :named("value"))
.annotate 'line', 1664
    nqp_get_sc_object $P5086, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5085, $P5086, "QAST"
    get_who $P5084, $P5085
    set fb_tmp_402, $P5084
    repr_defined $I5011, fb_tmp_402
    unless $I5011 goto if2202_else4841 
    set $P5087, fb_tmp_402["Var"]
    set $P5089, $P5087
    goto if2202_end4842
  if2202_else4841:
    null $P5088
    set $P5089, $P5088
  if2202_end4842:
    unless_null $P5089, vivi_22034843
    nqp_get_sc_object $P5090, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5089, $P5090
  vivi_22034843:
    $P5091 = $P5089."new"("lexical" :named("scope"), "@ARGS" :named("name"), 1 :named("flat"))
    $P5092 = $P5066."new"($P5083, $P5091, "call" :named("op"))
    $P5093 = $P5051."new"($P5060, $P5092, "if" :named("op"))
    $P5094 = $P101."push"($P5093)
  if2187_end4818:
.annotate 'line', 1670
    $P102."push"($P101)
.annotate 'line', 1673
    find_dynamic_lex $P5095, "$*W"
    unless_null $P5095, fallback4844
    nqp_get_sc_object $P5097, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5096, $P5097
    set fb_tmp_403, $P5096
    repr_defined $I5012, fb_tmp_403
    unless $I5012 goto if2204_else4845 
    set $P5098, fb_tmp_403["$W"]
    set $P5100, $P5098
    goto if2204_end4846
  if2204_else4845:
    null $P5099
    set $P5100, $P5099
  if2204_end4846:
    unless_null $P5100, vivi_22054847
    nqp_get_sc_object $P5101, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5100, $P5101
  vivi_22054847:
    unless_null $P5100, vivi_22064848
    die "Contextual $*W not found"
    box $P5102, "Contextual $*W not found"
    set $P5100, $P5102
  vivi_22064848:
    set $P5095, $P5100
  fallback4844:
    $P5103 = $P5095."libs"()
    $P102."push"($P5103)
.annotate 'line', 1676
    nqp_get_sc_object $P5106, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5105, $P5106, "QAST"
    get_who $P5104, $P5105
    set fb_tmp_404, $P5104
    repr_defined $I5013, fb_tmp_404
    unless $I5013 goto if2207_else4849 
    set $P5107, fb_tmp_404["CompUnit"]
    set $P5109, $P5107
    goto if2207_end4850
  if2207_else4849:
    null $P5108
    set $P5109, $P5108
  if2207_end4850:
    unless_null $P5109, vivi_22084851
    nqp_get_sc_object $P5110, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5109, $P5110
  vivi_22084851:
.annotate 'line', 1680
    find_dynamic_lex $P5111, "$*W"
    unless_null $P5111, fallback4852
    nqp_get_sc_object $P5113, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5112, $P5113
    set fb_tmp_405, $P5112
    repr_defined $I5014, fb_tmp_405
    unless $I5014 goto if2209_else4853 
    set $P5114, fb_tmp_405["$W"]
    set $P5116, $P5114
    goto if2209_end4854
  if2209_else4853:
    null $P5115
    set $P5116, $P5115
  if2209_end4854:
    unless_null $P5116, vivi_22104855
    nqp_get_sc_object $P5117, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5116, $P5117
  vivi_22104855:
    unless_null $P5116, vivi_22114856
    die "Contextual $*W not found"
    box $P5118, "Contextual $*W not found"
    set $P5116, $P5118
  vivi_22114856:
    set $P5111, $P5116
  fallback4852:
    $P5119 = $P5111."sc"()
.annotate 'line', 1681
    find_dynamic_lex $P5120, "$*W"
    unless_null $P5120, fallback4857
    nqp_get_sc_object $P5122, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5121, $P5122
    set fb_tmp_406, $P5121
    repr_defined $I5015, fb_tmp_406
    unless $I5015 goto if2212_else4858 
    set $P5123, fb_tmp_406["$W"]
    set $P5125, $P5123
    goto if2212_end4859
  if2212_else4858:
    null $P5124
    set $P5125, $P5124
  if2212_end4859:
    unless_null $P5125, vivi_22134860
    nqp_get_sc_object $P5126, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5125, $P5126
  vivi_22134860:
    unless_null $P5125, vivi_22144861
    die "Contextual $*W not found"
    box $P5127, "Contextual $*W not found"
    set $P5125, $P5127
  vivi_22144861:
    set $P5120, $P5125
  fallback4857:
    $P5128 = $P5120."code_ref_blocks"()
.annotate 'line', 1682
    find_dynamic_lex $P5129, "$*W"
    unless_null $P5129, fallback4862
    nqp_get_sc_object $P5131, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5130, $P5131
    set fb_tmp_407, $P5130
    repr_defined $I5016, fb_tmp_407
    unless $I5016 goto if2215_else4863 
    set $P5132, fb_tmp_407["$W"]
    set $P5134, $P5132
    goto if2215_end4864
  if2215_else4863:
    null $P5133
    set $P5134, $P5133
  if2215_end4864:
    unless_null $P5134, vivi_22164865
    nqp_get_sc_object $P5135, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5134, $P5135
  vivi_22164865:
    unless_null $P5134, vivi_22174866
    die "Contextual $*W not found"
    box $P5136, "Contextual $*W not found"
    set $P5134, $P5136
  vivi_22174866:
    set $P5129, $P5134
  fallback4862:
    $P5137 = $P5129."is_precompilation_mode"()
.annotate 'line', 1683
    find_dynamic_lex $P5138, "$*W"
    unless_null $P5138, fallback4867
    nqp_get_sc_object $P5140, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5139, $P5140
    set fb_tmp_408, $P5139
    repr_defined $I5017, fb_tmp_408
    unless $I5017 goto if2218_else4868 
    set $P5141, fb_tmp_408["$W"]
    set $P5143, $P5141
    goto if2218_end4869
  if2218_else4868:
    null $P5142
    set $P5143, $P5142
  if2218_end4869:
    unless_null $P5143, vivi_22194870
    nqp_get_sc_object $P5144, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5143, $P5144
  vivi_22194870:
    unless_null $P5143, vivi_22204871
    die "Contextual $*W not found"
    box $P5145, "Contextual $*W not found"
    set $P5143, $P5145
  vivi_22204871:
    set $P5138, $P5143
  fallback4867:
    $P5146 = $P5138."load_dependency_tasks"()
.annotate 'line', 1684
    find_dynamic_lex $P5147, "$*W"
    unless_null $P5147, fallback4872
    nqp_get_sc_object $P5149, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5148, $P5149
    set fb_tmp_409, $P5148
    repr_defined $I5018, fb_tmp_409
    unless $I5018 goto if2221_else4873 
    set $P5150, fb_tmp_409["$W"]
    set $P5152, $P5150
    goto if2221_end4874
  if2221_else4873:
    null $P5151
    set $P5152, $P5151
  if2221_end4874:
    unless_null $P5152, vivi_22224875
    nqp_get_sc_object $P5153, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5152, $P5153
  vivi_22224875:
    unless_null $P5152, vivi_22234876
    die "Contextual $*W not found"
    box $P5154, "Contextual $*W not found"
    set $P5152, $P5154
  vivi_22234876:
    set $P5147, $P5152
  fallback4872:
    $P5155 = $P5147."fixup_tasks"()
.annotate 'line', 1689
    nqp_get_sc_object $P5158, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5157, $P5158, "QAST"
    get_who $P5156, $P5157
    set fb_tmp_410, $P5156
    repr_defined $I5019, fb_tmp_410
    unless $I5019 goto if2224_else4877 
    set $P5159, fb_tmp_410["Op"]
    set $P5161, $P5159
    goto if2224_end4878
  if2224_else4877:
    null $P5160
    set $P5161, $P5160
  if2224_end4878:
    unless_null $P5161, vivi_22254879
    nqp_get_sc_object $P5162, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5161, $P5162
  vivi_22254879:
.annotate 'line', 1691
    nqp_get_sc_object $P5165, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5164, $P5165, "QAST"
    get_who $P5163, $P5164
    set fb_tmp_411, $P5163
    repr_defined $I5020, fb_tmp_411
    unless $I5020 goto if2226_else4880 
    set $P5166, fb_tmp_411["BVal"]
    set $P5168, $P5166
    goto if2226_end4881
  if2226_else4880:
    null $P5167
    set $P5168, $P5167
  if2226_end4881:
    unless_null $P5168, vivi_22274882
    nqp_get_sc_object $P5169, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5168, $P5169
  vivi_22274882:
    $P5170 = $P5168."new"($P102 :named("value"))
    $P5171 = $P5161."new"($P5170, "call" :named("op"))
.annotate 'line', 1696
    nqp_get_sc_object $P5174, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5173, $P5174, "QAST"
    get_who $P5172, $P5173
    set fb_tmp_412, $P5172
    repr_defined $I5021, fb_tmp_412
    unless $I5021 goto if2228_else4883 
    set $P5175, fb_tmp_412["Stmts"]
    set $P5177, $P5175
    goto if2228_end4884
  if2228_else4883:
    null $P5176
    set $P5177, $P5176
  if2228_end4884:
    unless_null $P5177, vivi_22294885
    nqp_get_sc_object $P5178, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5177, $P5178
  vivi_22294885:
.annotate 'line', 1697
    nqp_get_sc_object $P5181, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5180, $P5181, "QAST"
    get_who $P5179, $P5180
    set fb_tmp_413, $P5179
    repr_defined $I5022, fb_tmp_413
    unless $I5022 goto if2230_else4886 
    set $P5182, fb_tmp_413["Op"]
    set $P5184, $P5182
    goto if2230_end4887
  if2230_else4886:
    null $P5183
    set $P5184, $P5183
  if2230_end4887:
    unless_null $P5184, vivi_22314888
    nqp_get_sc_object $P5185, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5184, $P5185
  vivi_22314888:
.annotate 'line', 1699
    nqp_get_sc_object $P5188, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5187, $P5188, "QAST"
    get_who $P5186, $P5187
    set fb_tmp_414, $P5186
    repr_defined $I5023, fb_tmp_414
    unless $I5023 goto if2232_else4889 
    set $P5189, fb_tmp_414["BVal"]
    set $P5191, $P5189
    goto if2232_end4890
  if2232_else4889:
    null $P5190
    set $P5191, $P5190
  if2232_end4890:
    unless_null $P5191, vivi_22334891
    nqp_get_sc_object $P5192, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5191, $P5192
  vivi_22334891:
    $P5193 = $P5191."new"($P102 :named("value"))
.annotate 'line', 1700
    nqp_get_sc_object $P5196, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5195, $P5196, "QAST"
    get_who $P5194, $P5195
    set fb_tmp_415, $P5194
    repr_defined $I5024, fb_tmp_415
    unless $I5024 goto if2234_else4892 
    set $P5197, fb_tmp_415["Var"]
    set $P5199, $P5197
    goto if2234_end4893
  if2234_else4892:
    null $P5198
    set $P5199, $P5198
  if2234_end4893:
    unless_null $P5199, vivi_22354894
    nqp_get_sc_object $P5200, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5199, $P5200
  vivi_22354894:
    $P5201 = $P5199."new"("ARGS" :named("name"), "local" :named("scope"), "param" :named("decl"), 1 :named("slurpy"), 1 :named("flat"))
    $P5202 = $P5184."new"($P5193, $P5201, "call" :named("op"))
    $P5203 = $P5177."new"($P5202)
    $P5204 = $P5109."new"($P102, "nqp" :named("hll"), $P5119 :named("sc"), $P5128 :named("code_ref_blocks"), $P5137 :named("compilation_mode"), $P5146 :named("pre_deserialize"), $P5155 :named("post_deserialize"), $P5171 :named("load"), $P5203 :named("main"))
    set $P103, $P5204
.annotate 'line', 1709
    find_dynamic_lex $P5205, "$*W"
    unless_null $P5205, fallback4895
    nqp_get_sc_object $P5207, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5206, $P5207
    set fb_tmp_416, $P5206
    repr_defined $I5025, fb_tmp_416
    unless $I5025 goto if2236_else4896 
    set $P5208, fb_tmp_416["$W"]
    set $P5210, $P5208
    goto if2236_end4897
  if2236_else4896:
    null $P5209
    set $P5210, $P5209
  if2236_end4897:
    unless_null $P5210, vivi_22374898
    nqp_get_sc_object $P5211, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5210, $P5211
  vivi_22374898:
    unless_null $P5210, vivi_22384899
    die "Contextual $*W not found"
    box $P5212, "Contextual $*W not found"
    set $P5210, $P5212
  vivi_22384899:
    set $P5205, $P5210
  fallback4895:
    $P5205."cleanup"()
.annotate 'line', 1711
    $P5213 = _lex_param_1."!make"($P103)
    .return ($P5213) 
.end
.HLL "nqp"
.namespace []
.sub "statementlist" :subid("cuid_250_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1714
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5028 = 'cuid_447_1360432459.413' 
    capture_lex $P5028 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_417 
    .local pmc fb_tmp_418 
    .local pmc fb_tmp_419 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
.annotate 'line', 1715
    nqp_get_sc_object $P5004, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5003, $P5004, "QAST"
    get_who $P5002, $P5003
    set fb_tmp_417, $P5002
    repr_defined $I5001, fb_tmp_417
    unless $I5001 goto if2239_else4900 
    set $P5005, fb_tmp_417["Stmts"]
    set $P5007, $P5005
    goto if2239_end4901
  if2239_else4900:
    null $P5006
    set $P5007, $P5006
  if2239_end4901:
    unless_null $P5007, vivi_22404902
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5007, $P5008
  vivi_22404902:
    $P5009 = $P5007."new"(_lex_param_1 :named("node"))
    set $P101, $P5009
    unless_null _lex_param_1, fallback4907
    nqp_get_sc_object $P5010, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5010
  fallback4907:
    set fb_tmp_418, _lex_param_1
    repr_defined $I5002, fb_tmp_418
    unless $I5002 goto if2242_else4905 
    set $P5011, fb_tmp_418["statement"]
    set $P5013, $P5011
    goto if2242_end4906
  if2242_else4905:
    null $P5012
    set $P5013, $P5012
  if2242_end4906:
    unless_null $P5013, vivi_22434908
    nqp_get_sc_object $P5014, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5013, $P5014
  vivi_22434908:
    unless $P5013 goto if2241_else4903 
.annotate 'line', 1716
    unless_null _lex_param_1, fallback4911
    nqp_get_sc_object $P5018, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5018
  fallback4911:
    set fb_tmp_419, _lex_param_1
    repr_defined $I5003, fb_tmp_419
    unless $I5003 goto if2244_else4909 
    set $P5019, fb_tmp_419["statement"]
    set $P5021, $P5019
    goto if2244_end4910
  if2244_else4909:
    null $P5020
    set $P5021, $P5020
  if2244_end4910:
    unless_null $P5021, vivi_22454912
    nqp_get_sc_object $P5022, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5021, $P5022
  vivi_22454912:
    set $P5015, $P5021
    iter $P5017, $P5021
  for_next4937:
    unless $P5017, for_done4939
    shift $P5024, $P5017
  for_redo4938:
    .const 'Sub' $P5023 = 'cuid_447_1360432459.413' 
    capture_lex $P5023
    $P5015 = $P5023($P5024)
    goto for_next4937
  for_done4939:
    goto if2241_end4904
  if2241_else4903:
.annotate 'line', 1725
.annotate 'line', 1726
    $P5025 = "&default_for"("$")
    $P5026 = $P101."push"($P5025)
  if2241_end4904:
.annotate 'line', 1728
    $P5027 = _lex_param_1."!make"($P101)
    .return ($P5027) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_447_1360432459.413") :anon :lex :outer("cuid_250_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1717
    .param pmc _lex_param_0 
    .lex "$ast", $P101 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_420 
    .local pmc fb_tmp_421 
    .local pmc fb_tmp_422 
    .local pmc fb_tmp_423 
    .local pmc fb_tmp_424 
    .local pmc fb_tmp_425 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
.annotate 'line', 1718
    $P5002 = _lex_param_0."ast"()
    set $P101, $P5002
    set fb_tmp_420, $P101
    repr_defined $I5002, fb_tmp_420
    unless $I5002 goto if2247_else4915 
    set $P5003, fb_tmp_420["sink"]
    set $P5005, $P5003
    goto if2247_end4916
  if2247_else4915:
    null $P5004
    set $P5005, $P5004
  if2247_end4916:
    unless_null $P5005, vivi_22484917
    nqp_get_sc_object $P5006, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5005, $P5006
  vivi_22484917:
    defined $I5001, $P5005
    unless $I5001 goto if2246_end4914 
    set fb_tmp_421, $P101
    repr_defined $I5003, fb_tmp_421
    unless $I5003 goto if2249_else4918 
    set $P5007, fb_tmp_421["sink"]
    set $P5009, $P5007
    goto if2249_end4919
  if2249_else4918:
    null $P5008
    set $P5009, $P5008
  if2249_end4919:
    unless_null $P5009, vivi_22504920
    nqp_get_sc_object $P5010, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5009, $P5010
  vivi_22504920:
    set $P101, $P5009
  if2246_end4914:
    set fb_tmp_422, $P101
    repr_defined $I5004, fb_tmp_422
    unless $I5004 goto if2252_else4923 
    set $P5011, fb_tmp_422["bareblock"]
    set $P5013, $P5011
    goto if2252_end4924
  if2252_else4923:
    null $P5012
    set $P5013, $P5012
  if2252_end4924:
    unless_null $P5013, vivi_22534925
    nqp_get_sc_object $P5014, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5013, $P5014
  vivi_22534925:
    unless $P5013 goto if2251_end4922 
.annotate 'line', 1720
    set fb_tmp_423, $P101
    repr_defined $I5005, fb_tmp_423
    unless $I5005 goto if2254_else4926 
    set $P5015, fb_tmp_423[0]
    set $P5017, $P5015
    goto if2254_end4927
  if2254_else4926:
    null $P5016
    set $P5017, $P5016
  if2254_end4927:
    unless_null $P5017, vivi_22554928
    nqp_get_sc_object $P5018, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5017, $P5018
  vivi_22554928:
    $P5019 = "&block_immediate"($P5017)
    set $P101, $P5019
  if2251_end4922:
    nqp_get_sc_object $P5022, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5021, $P5022, "QAST"
    get_who $P5020, $P5021
    set fb_tmp_424, $P5020
    repr_defined $I5007, fb_tmp_424
    unless $I5007 goto if2257_else4931 
    set $P5023, fb_tmp_424["Node"]
    set $P5025, $P5023
    goto if2257_end4932
  if2257_else4931:
    null $P5024
    set $P5025, $P5024
  if2257_end4932:
    unless_null $P5025, vivi_22584933
    nqp_get_sc_object $P5026, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5025, $P5026
  vivi_22584933:
    type_check $I5006, $P101, $P5025
    unless $I5006 goto if2256_end4930 
.annotate 'line', 1721
    nqp_get_sc_object $P5029, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5028, $P5029, "QAST"
    get_who $P5027, $P5028
    set fb_tmp_425, $P5027
    repr_defined $I5008, fb_tmp_425
    unless $I5008 goto if2259_else4934 
    set $P5030, fb_tmp_425["Stmts"]
    set $P5032, $P5030
    goto if2259_end4935
  if2259_else4934:
    null $P5031
    set $P5032, $P5031
  if2259_end4935:
    unless_null $P5032, vivi_22604936
    nqp_get_sc_object $P5033, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5032, $P5033
  vivi_22604936:
    $P5034 = $P5032."new"($P101)
    set $P101, $P5034
  if2256_end4930:
.annotate 'line', 1722
    find_lex $P5035, "$past"
    $P5036 = $P5035."push"($P101)
    .return ($P5036) 
.end
.HLL "nqp"
.namespace []
.sub "statement" :subid("cuid_251_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1731
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :optional 
    .param int haz_param_4 :opt_flag 
    .const 'Sub' $P5024 = 'cuid_448_1360432459.413' 
    capture_lex $P5024 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .lex "$key", _lex_param_2 
    .local pmc fb_tmp_426 
    .local pmc fb_tmp_444 
    .local pmc fb_tmp_445 
    if haz_param_4, default5016
    nqp_get_sc_object $P5023, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_2, $P5023
  default5016:
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    unless_null _lex_param_1, fallback4944
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5002
  fallback4944:
    set fb_tmp_426, _lex_param_1
    repr_defined $I5001, fb_tmp_426
    unless $I5001 goto if2262_else4942 
    set $P5003, fb_tmp_426["EXPR"]
    set $P5005, $P5003
    goto if2262_end4943
  if2262_else4942:
    null $P5004
    set $P5005, $P5004
  if2262_end4943:
    unless_null $P5005, vivi_22634945
    nqp_get_sc_object $P5006, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5005, $P5006
  vivi_22634945:
    unless $P5005 goto if2261_else4940 
    .const 'Sub' $P5007 = 'cuid_448_1360432459.413' 
    capture_lex $P5007
    $P5008 = $P5007()
    goto if2261_end4941
  if2261_else4940:
    unless_null _lex_param_1, fallback5010
    nqp_get_sc_object $P5009, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5009
  fallback5010:
    set fb_tmp_444, _lex_param_1
    repr_defined $I5002, fb_tmp_444
    unless $I5002 goto if2302_else5008 
    set $P5010, fb_tmp_444["statement_control"]
    set $P5012, $P5010
    goto if2302_end5009
  if2302_else5008:
    null $P5011
    set $P5012, $P5011
  if2302_end5009:
    unless_null $P5012, vivi_23035011
    nqp_get_sc_object $P5013, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5012, $P5013
  vivi_23035011:
    unless $P5012 goto if2301_else5006 
.annotate 'line', 1754
    unless_null _lex_param_1, fallback5014
    nqp_get_sc_object $P5014, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5014
  fallback5014:
    set fb_tmp_445, _lex_param_1
    repr_defined $I5003, fb_tmp_445
    unless $I5003 goto if2304_else5012 
    set $P5015, fb_tmp_445["statement_control"]
    set $P5017, $P5015
    goto if2304_end5013
  if2304_else5012:
    null $P5016
    set $P5017, $P5016
  if2304_end5013:
    unless_null $P5017, vivi_23055015
    nqp_get_sc_object $P5018, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5017, $P5018
  vivi_23055015:
    $P5019 = $P5017."ast"()
    set $P101, $P5019
    set $P5021, $P101
    goto if2301_end5007
  if2301_else5006:
.annotate 'line', 1755
    box $P5020, 0
    set $P101, $P5020
    set $P5021, $P101
  if2301_end5007:
  if2261_end4941:
.annotate 'line', 1756
    $P5022 = _lex_param_1."!make"($P101)
    .return ($P5022) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_448_1360432459.413") :anon :lex :outer("cuid_251_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1733
    .lex "$mc", $P101 
    .lex "$ml", $P102 
    .local pmc fb_tmp_427 
    .local pmc fb_tmp_428 
    .local pmc fb_tmp_429 
    .local pmc fb_tmp_430 
    .local pmc fb_tmp_431 
    .local pmc fb_tmp_432 
    .local pmc fb_tmp_433 
    .local pmc fb_tmp_434 
    .local pmc fb_tmp_435 
    .local pmc fb_tmp_436 
    .local pmc fb_tmp_437 
    .local pmc fb_tmp_438 
    .local pmc fb_tmp_439 
    .local pmc fb_tmp_440 
    .local pmc fb_tmp_441 
    .local pmc fb_tmp_442 
    .local pmc fb_tmp_443 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
    find_lex $P5003, "$/"
    unless_null $P5003, fallback4950
    nqp_get_sc_object $P5004, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5003, $P5004
  fallback4950:
    set fb_tmp_428, $P5003
    repr_defined $I5002, fb_tmp_428
    unless $I5002 goto if2265_else4948 
    set $P5005, fb_tmp_428["statement_mod_cond"]
    set $P5007, $P5005
    goto if2265_end4949
  if2265_else4948:
    null $P5006
    set $P5007, $P5006
  if2265_end4949:
    unless_null $P5007, vivi_22664951
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5007, $P5008
  vivi_22664951:
    set fb_tmp_427, $P5007
    repr_defined $I5001, fb_tmp_427
    unless $I5001 goto if2264_else4946 
    set $P5009, fb_tmp_427[0]
    set $P5011, $P5009
    goto if2264_end4947
  if2264_else4946:
    null $P5010
    set $P5011, $P5010
  if2264_end4947:
    unless_null $P5011, vivi_22674952
    nqp_get_sc_object $P5012, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5011, $P5012
  vivi_22674952:
    set $P101, $P5011
    find_lex $P5013, "$/"
    unless_null $P5013, fallback4957
    nqp_get_sc_object $P5014, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5013, $P5014
  fallback4957:
    set fb_tmp_430, $P5013
    repr_defined $I5004, fb_tmp_430
    unless $I5004 goto if2269_else4955 
    set $P5015, fb_tmp_430["statement_mod_loop"]
    set $P5017, $P5015
    goto if2269_end4956
  if2269_else4955:
    null $P5016
    set $P5017, $P5016
  if2269_end4956:
    unless_null $P5017, vivi_22704958
    nqp_get_sc_object $P5018, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5017, $P5018
  vivi_22704958:
    set fb_tmp_429, $P5017
    repr_defined $I5003, fb_tmp_429
    unless $I5003 goto if2268_else4953 
    set $P5019, fb_tmp_429[0]
    set $P5021, $P5019
    goto if2268_end4954
  if2268_else4953:
    null $P5020
    set $P5021, $P5020
  if2268_end4954:
    unless_null $P5021, vivi_22714959
    nqp_get_sc_object $P5022, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5021, $P5022
  vivi_22714959:
    set $P102, $P5021
.annotate 'line', 1736
    find_lex $P5023, "$/"
    unless_null $P5023, fallback4962
    nqp_get_sc_object $P5024, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5023, $P5024
  fallback4962:
    set fb_tmp_431, $P5023
    repr_defined $I5005, fb_tmp_431
    unless $I5005 goto if2272_else4960 
    set $P5025, fb_tmp_431["EXPR"]
    set $P5027, $P5025
    goto if2272_end4961
  if2272_else4960:
    null $P5026
    set $P5027, $P5026
  if2272_end4961:
    unless_null $P5027, vivi_22734963
    nqp_get_sc_object $P5028, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5027, $P5028
  vivi_22734963:
    $P5029 = $P5027."ast"()
    store_lex "$past", $P5029
    unless $P101 goto if2274_end4965 
.annotate 'line', 1737
.annotate 'line', 1738
    nqp_get_sc_object $P5032, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5031, $P5032, "QAST"
    get_who $P5030, $P5031
    set fb_tmp_432, $P5030
    repr_defined $I5006, fb_tmp_432
    unless $I5006 goto if2275_else4966 
    set $P5033, fb_tmp_432["Op"]
    set $P5035, $P5033
    goto if2275_end4967
  if2275_else4966:
    null $P5034
    set $P5035, $P5034
  if2275_end4967:
    unless_null $P5035, vivi_22764968
    nqp_get_sc_object $P5036, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5035, $P5036
  vivi_22764968:
    set fb_tmp_433, $P101
    repr_defined $I5007, fb_tmp_433
    unless $I5007 goto if2277_else4969 
    set $P5037, fb_tmp_433["cond"]
    set $P5039, $P5037
    goto if2277_end4970
  if2277_else4969:
    null $P5038
    set $P5039, $P5038
  if2277_end4970:
    unless_null $P5039, vivi_22784971
    nqp_get_sc_object $P5040, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5039, $P5040
  vivi_22784971:
    $P5041 = $P5039."ast"()
    find_lex $P5042, "$past"
    set fb_tmp_434, $P101
    repr_defined $I5008, fb_tmp_434
    unless $I5008 goto if2279_else4972 
    set $P5043, fb_tmp_434["sym"]
    set $P5045, $P5043
    goto if2279_end4973
  if2279_else4972:
    null $P5044
    set $P5045, $P5044
  if2279_end4973:
    unless_null $P5045, vivi_22804974
    nqp_get_sc_object $P5046, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5045, $P5046
  vivi_22804974:
    set $S5001, $P5045
    find_lex $P5047, "$/"
    $P5048 = $P5035."new"($P5041, $P5042, $S5001 :named("op"), $P5047 :named("node"))
    store_lex "$past", $P5048
  if2274_end4965:
    set $P5111, $P102
    unless $P102 goto if2281_end4976 
.annotate 'line', 1740
    set fb_tmp_435, $P102
    repr_defined $I5010, fb_tmp_435
    unless $I5010 goto if2283_else4979 
    set $P5049, fb_tmp_435["sym"]
    set $P5051, $P5049
    goto if2283_end4980
  if2283_else4979:
    null $P5050
    set $P5051, $P5050
  if2283_end4980:
    unless_null $P5051, vivi_22844981
    nqp_get_sc_object $P5052, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5051, $P5052
  vivi_22844981:
    set $S5002, $P5051
    iseq $I5009, $S5002, "for"
    unless $I5009 goto if2282_else4977 
.annotate 'line', 1741
.annotate 'line', 1742
    nqp_get_sc_object $P5055, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5054, $P5055, "QAST"
    get_who $P5053, $P5054
    set fb_tmp_436, $P5053
    repr_defined $I5011, fb_tmp_436
    unless $I5011 goto if2285_else4982 
    set $P5056, fb_tmp_436["Block"]
    set $P5058, $P5056
    goto if2285_end4983
  if2285_else4982:
    null $P5057
    set $P5058, $P5057
  if2285_end4983:
    unless_null $P5058, vivi_22864984
    nqp_get_sc_object $P5059, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5058, $P5059
  vivi_22864984:
.annotate 'line', 1743
    nqp_get_sc_object $P5062, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5061, $P5062, "QAST"
    get_who $P5060, $P5061
    set fb_tmp_437, $P5060
    repr_defined $I5012, fb_tmp_437
    unless $I5012 goto if2287_else4985 
    set $P5063, fb_tmp_437["Var"]
    set $P5065, $P5063
    goto if2287_end4986
  if2287_else4985:
    null $P5064
    set $P5065, $P5064
  if2287_end4986:
    unless_null $P5065, vivi_22884987
    nqp_get_sc_object $P5066, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5065, $P5066
  vivi_22884987:
    $P5067 = $P5065."new"("$_" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    find_lex $P5068, "$past"
    $P5069 = $P5058."new"($P5067, $P5068, "immediate" :named("blocktype"))
    store_lex "$past", $P5069
.annotate 'line', 1745
    find_lex $P5070, "$past"
    $P5070."symbol"("$_", "lexical" :named("scope"))
.annotate 'line', 1746
    find_lex $P5071, "$past"
    $P5071."arity"(1)
.annotate 'line', 1747
    nqp_get_sc_object $P5074, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5073, $P5074, "QAST"
    get_who $P5072, $P5073
    set fb_tmp_438, $P5072
    repr_defined $I5013, fb_tmp_438
    unless $I5013 goto if2289_else4988 
    set $P5075, fb_tmp_438["Op"]
    set $P5077, $P5075
    goto if2289_end4989
  if2289_else4988:
    null $P5076
    set $P5077, $P5076
  if2289_end4989:
    unless_null $P5077, vivi_22904990
    nqp_get_sc_object $P5078, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5077, $P5078
  vivi_22904990:
    set fb_tmp_439, $P102
    repr_defined $I5014, fb_tmp_439
    unless $I5014 goto if2291_else4991 
    set $P5079, fb_tmp_439["cond"]
    set $P5081, $P5079
    goto if2291_end4992
  if2291_else4991:
    null $P5080
    set $P5081, $P5080
  if2291_end4992:
    unless_null $P5081, vivi_22924993
    nqp_get_sc_object $P5082, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5081, $P5082
  vivi_22924993:
    $P5083 = $P5081."ast"()
    find_lex $P5084, "$past"
    set fb_tmp_440, $P102
    repr_defined $I5015, fb_tmp_440
    unless $I5015 goto if2293_else4994 
    set $P5085, fb_tmp_440["sym"]
    set $P5087, $P5085
    goto if2293_end4995
  if2293_else4994:
    null $P5086
    set $P5087, $P5086
  if2293_end4995:
    unless_null $P5087, vivi_22944996
    nqp_get_sc_object $P5088, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5087, $P5088
  vivi_22944996:
    set $S5003, $P5087
    find_lex $P5089, "$/"
    $P5090 = $P5077."new"($P5083, $P5084, $S5003 :named("op"), $P5089 :named("node"))
    store_lex "$past", $P5090
    set $P5110, $P5090
    goto if2282_end4978
  if2282_else4977:
.annotate 'line', 1749
.annotate 'line', 1750
    nqp_get_sc_object $P5093, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5092, $P5093, "QAST"
    get_who $P5091, $P5092
    set fb_tmp_441, $P5091
    repr_defined $I5016, fb_tmp_441
    unless $I5016 goto if2295_else4997 
    set $P5094, fb_tmp_441["Op"]
    set $P5096, $P5094
    goto if2295_end4998
  if2295_else4997:
    null $P5095
    set $P5096, $P5095
  if2295_end4998:
    unless_null $P5096, vivi_22964999
    nqp_get_sc_object $P5097, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5096, $P5097
  vivi_22964999:
    set fb_tmp_442, $P102
    repr_defined $I5017, fb_tmp_442
    unless $I5017 goto if2297_else5000 
    set $P5098, fb_tmp_442["cond"]
    set $P5100, $P5098
    goto if2297_end5001
  if2297_else5000:
    null $P5099
    set $P5100, $P5099
  if2297_end5001:
    unless_null $P5100, vivi_22985002
    nqp_get_sc_object $P5101, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5100, $P5101
  vivi_22985002:
    $P5102 = $P5100."ast"()
    find_lex $P5103, "$past"
    set fb_tmp_443, $P102
    repr_defined $I5018, fb_tmp_443
    unless $I5018 goto if2299_else5003 
    set $P5104, fb_tmp_443["sym"]
    set $P5106, $P5104
    goto if2299_end5004
  if2299_else5003:
    null $P5105
    set $P5106, $P5105
  if2299_end5004:
    unless_null $P5106, vivi_23005005
    nqp_get_sc_object $P5107, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5106, $P5107
  vivi_23005005:
    set $S5004, $P5106
    find_lex $P5108, "$/"
    $P5109 = $P5096."new"($P5102, $P5103, $S5004 :named("op"), $P5108 :named("node"))
    store_lex "$past", $P5109
    set $P5110, $P5109
  if2282_end4978:
    set $P5111, $P5110
  if2281_end4976:
    .return ($P5111) 
.end
.HLL "nqp"
.namespace []
.sub "xblock" :subid("cuid_252_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1759
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_446 
    .local pmc fb_tmp_447 
    .local pmc fb_tmp_448 
.annotate 'line', 1760
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5002, $P5003, "QAST"
    get_who $P5001, $P5002
    set fb_tmp_446, $P5001
    repr_defined $I5001, fb_tmp_446
    unless $I5001 goto if2306_else5017 
    set $P5004, fb_tmp_446["Op"]
    set $P5006, $P5004
    goto if2306_end5018
  if2306_else5017:
    null $P5005
    set $P5006, $P5005
  if2306_end5018:
    unless_null $P5006, vivi_23075019
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_23075019:
    unless_null _lex_param_1, fallback5022
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5008
  fallback5022:
    set fb_tmp_447, _lex_param_1
    repr_defined $I5002, fb_tmp_447
    unless $I5002 goto if2308_else5020 
    set $P5009, fb_tmp_447["EXPR"]
    set $P5011, $P5009
    goto if2308_end5021
  if2308_else5020:
    null $P5010
    set $P5011, $P5010
  if2308_end5021:
    unless_null $P5011, vivi_23095023
    nqp_get_sc_object $P5012, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5011, $P5012
  vivi_23095023:
    $P5013 = $P5011."ast"()
    unless_null _lex_param_1, fallback5026
    nqp_get_sc_object $P5014, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5014
  fallback5026:
    set fb_tmp_448, _lex_param_1
    repr_defined $I5003, fb_tmp_448
    unless $I5003 goto if2310_else5024 
    set $P5015, fb_tmp_448["pblock"]
    set $P5017, $P5015
    goto if2310_end5025
  if2310_else5024:
    null $P5016
    set $P5017, $P5016
  if2310_end5025:
    unless_null $P5017, vivi_23115027
    nqp_get_sc_object $P5018, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5017, $P5018
  vivi_23115027:
    $P5019 = $P5017."ast"()
    $P5020 = $P5006."new"($P5013, $P5019, "if" :named("op"), _lex_param_1 :named("node"))
    $P5021 = _lex_param_1."!make"($P5020)
    .return ($P5021) 
.end
.HLL "nqp"
.namespace []
.sub "pblock" :subid("cuid_253_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1763
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_449 
.annotate 'line', 1764
    unless_null _lex_param_1, fallback5030
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback5030:
    set fb_tmp_449, _lex_param_1
    repr_defined $I5001, fb_tmp_449
    unless $I5001 goto if2312_else5028 
    set $P5002, fb_tmp_449["blockoid"]
    set $P5004, $P5002
    goto if2312_end5029
  if2312_else5028:
    null $P5003
    set $P5004, $P5003
  if2312_end5029:
    unless_null $P5004, vivi_23135031
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_23135031:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "block" :subid("cuid_254_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1767
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_450 
.annotate 'line', 1768
    unless_null _lex_param_1, fallback5034
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback5034:
    set fb_tmp_450, _lex_param_1
    repr_defined $I5001, fb_tmp_450
    unless $I5001 goto if2314_else5032 
    set $P5002, fb_tmp_450["blockoid"]
    set $P5004, $P5002
    goto if2314_end5033
  if2314_else5032:
    null $P5003
    set $P5004, $P5003
  if2314_end5033:
    unless_null $P5004, vivi_23155035
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_23155035:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "blockoid" :subid("cuid_255_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1771
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5037 = 'cuid_450_1360432459.413' 
    capture_lex $P5037 
    .lex "$BLOCK", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_451 
    .local pmc fb_tmp_452 
    .local pmc fb_tmp_459 
    .local pmc fb_tmp_460 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
.annotate 'line', 1772
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback5036
    nqp_get_sc_object $P5004, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5003, $P5004
    set fb_tmp_451, $P5003
    repr_defined $I5001, fb_tmp_451
    unless $I5001 goto if2316_else5037 
    set $P5005, fb_tmp_451["$W"]
    set $P5007, $P5005
    goto if2316_end5038
  if2316_else5037:
    null $P5006
    set $P5007, $P5006
  if2316_end5038:
    unless_null $P5007, vivi_23175039
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5007, $P5008
  vivi_23175039:
    unless_null $P5007, vivi_23185040
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_23185040:
    set $P5002, $P5007
  fallback5036:
    $P5010 = $P5002."pop_lexpad"()
    set $P101, $P5010
    unless_null _lex_param_1, fallback5045
    nqp_get_sc_object $P5011, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5011
  fallback5045:
    set fb_tmp_452, _lex_param_1
    repr_defined $I5002, fb_tmp_452
    unless $I5002 goto if2320_else5043 
    set $P5012, fb_tmp_452["statementlist"]
    set $P5014, $P5012
    goto if2320_end5044
  if2320_else5043:
    null $P5013
    set $P5014, $P5013
  if2320_end5044:
    unless_null $P5014, vivi_23215046
    nqp_get_sc_object $P5015, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5014, $P5015
  vivi_23215046:
    unless $P5014 goto if2319_else5041 
    .const 'Sub' $P5016 = 'cuid_450_1360432459.413' 
    capture_lex $P5016
    $P5017 = $P5016()
    set $P5036, $P5017
    goto if2319_end5042
  if2319_else5041:
.annotate 'line', 1787
    find_dynamic_lex $P5018, "$*HAS_YOU_ARE_HERE"
    unless_null $P5018, fallback5083
    nqp_get_sc_object $P5020, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5019, $P5020
    set fb_tmp_459, $P5019
    repr_defined $I5003, fb_tmp_459
    unless $I5003 goto if2341_else5084 
    set $P5021, fb_tmp_459["$HAS_YOU_ARE_HERE"]
    set $P5023, $P5021
    goto if2341_end5085
  if2341_else5084:
    null $P5022
    set $P5023, $P5022
  if2341_end5085:
    unless_null $P5023, vivi_23425086
    nqp_get_sc_object $P5024, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5023, $P5024
  vivi_23425086:
    unless_null $P5023, vivi_23435087
    die "Contextual $*HAS_YOU_ARE_HERE not found"
    box $P5025, "Contextual $*HAS_YOU_ARE_HERE not found"
    set $P5023, $P5025
  vivi_23435087:
    set $P5018, $P5023
  fallback5083:
    unless $P5018 goto if2340_end5082 
.annotate 'line', 1788
.annotate 'line', 1789
    $P5026 = _lex_param_1."CURSOR"()
    $P5027 = $P5026."panic"("{YOU_ARE_HERE} may only appear once in a setting")
  if2340_end5082:
    box $P5028, 1
    store_dynamic_lex "$*HAS_YOU_ARE_HERE", $P5028
.annotate 'line', 1792
    unless_null _lex_param_1, fallback5090
    nqp_get_sc_object $P5029, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5029
  fallback5090:
    set fb_tmp_460, _lex_param_1
    repr_defined $I5004, fb_tmp_460
    unless $I5004 goto if2344_else5088 
    set $P5030, fb_tmp_460["you_are_here"]
    set $P5032, $P5030
    goto if2344_end5089
  if2344_else5088:
    null $P5031
    set $P5032, $P5031
  if2344_end5089:
    unless_null $P5032, vivi_23455091
    nqp_get_sc_object $P5033, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5032, $P5033
  vivi_23455091:
    $P5034 = $P5032."ast"()
    $P5035 = _lex_param_1."!make"($P5034)
    set $P5036, $P5035
  if2319_end5042:
    .return ($P5036) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_450_1360432459.413") :anon :lex :outer("cuid_255_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1773
    .const 'Sub' $P5069 = 'cuid_449_1360432459.413' 
    capture_lex $P5069 
    .lex "$past", $P101 
    .local pmc fb_tmp_453 
    .local pmc fb_tmp_454 
    .local pmc fb_tmp_455 
    .local pmc fb_tmp_456 
    .local pmc fb_tmp_457 
    .local pmc fb_tmp_458 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
.annotate 'line', 1774
    find_lex $P5002, "$/"
    unless_null $P5002, fallback5049
    nqp_get_sc_object $P5003, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5002, $P5003
  fallback5049:
    set fb_tmp_453, $P5002
    repr_defined $I5001, fb_tmp_453
    unless $I5001 goto if2322_else5047 
    set $P5004, fb_tmp_453["statementlist"]
    set $P5006, $P5004
    goto if2322_end5048
  if2322_else5047:
    null $P5005
    set $P5006, $P5005
  if2322_end5048:
    unless_null $P5006, vivi_23235050
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_23235050:
    $P5008 = $P5006."ast"()
    set $P101, $P5008
    find_dynamic_lex $P5009, "%*HANDLERS"
    unless_null $P5009, fallback5053
    nqp_get_sc_object $P5011, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5010, $P5011
    set fb_tmp_454, $P5010
    repr_defined $I5002, fb_tmp_454
    unless $I5002 goto if2325_else5054 
    set $P5012, fb_tmp_454["%HANDLERS"]
    set $P5014, $P5012
    goto if2325_end5055
  if2325_else5054:
    null $P5013
    set $P5014, $P5013
  if2325_end5055:
    unless_null $P5014, vivi_23265056
    nqp_get_sc_object $P5016, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5015, $P5016
    new $P5017, 'Hash'
    set $P5015["%HANDLERS"], $P5017
    set $P5014, $P5017
  vivi_23265056:
    unless_null $P5014, vivi_23275057
    die "Contextual %*HANDLERS not found"
    box $P5018, "Contextual %*HANDLERS not found"
    set $P5014, $P5018
  vivi_23275057:
    set $P5009, $P5014
  fallback5053:
    unless $P5009 goto if2324_end5052 
.annotate 'line', 1775
.annotate 'line', 1776
    nqp_get_sc_object $P5021, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5020, $P5021, "QAST"
    get_who $P5019, $P5020
    set fb_tmp_455, $P5019
    repr_defined $I5003, fb_tmp_455
    unless $I5003 goto if2328_else5058 
    set $P5022, fb_tmp_455["Op"]
    set $P5024, $P5022
    goto if2328_end5059
  if2328_else5058:
    null $P5023
    set $P5024, $P5023
  if2328_end5059:
    unless_null $P5024, vivi_23295060
    nqp_get_sc_object $P5025, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5024, $P5025
  vivi_23295060:
    $P5026 = $P5024."new"($P101, "handle" :named("op"))
    set $P101, $P5026
    find_dynamic_lex $P5030, "%*HANDLERS"
    unless_null $P5030, fallback5061
    nqp_get_sc_object $P5032, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5031, $P5032
    set fb_tmp_456, $P5031
    repr_defined $I5004, fb_tmp_456
    unless $I5004 goto if2330_else5062 
    set $P5033, fb_tmp_456["%HANDLERS"]
    set $P5035, $P5033
    goto if2330_end5063
  if2330_else5062:
    null $P5034
    set $P5035, $P5034
  if2330_end5063:
    unless_null $P5035, vivi_23315064
    nqp_get_sc_object $P5037, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5036, $P5037
    new $P5038, 'Hash'
    set $P5036["%HANDLERS"], $P5038
    set $P5035, $P5038
  vivi_23315064:
    unless_null $P5035, vivi_23325065
    die "Contextual %*HANDLERS not found"
    box $P5039, "Contextual %*HANDLERS not found"
    set $P5035, $P5039
  vivi_23325065:
    set $P5030, $P5035
  fallback5061:
    set $P5027, $P5030
    iter $P5029, $P5030
  for_next5066:
    unless $P5029, for_done5068
    shift $P5041, $P5029
  for_redo5067:
    .const 'Sub' $P5040 = 'cuid_449_1360432459.413' 
    capture_lex $P5040
    $P5027 = $P5040($P5041)
    goto for_next5066
  for_done5068:
  if2324_end5052:
.annotate 'line', 1782
    find_lex $P5042, "$BLOCK"
    $P5042."push"($P101)
.annotate 'line', 1783
    find_lex $P5043, "$BLOCK"
    find_lex $P5044, "$/"
    $P5043."node"($P5044)
    find_dynamic_lex $P5045, "%*HANDLERS"
    unless_null $P5045, fallback5071
    nqp_get_sc_object $P5047, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5046, $P5047
    set fb_tmp_457, $P5046
    repr_defined $I5005, fb_tmp_457
    unless $I5005 goto if2334_else5072 
    set $P5048, fb_tmp_457["%HANDLERS"]
    set $P5050, $P5048
    goto if2334_end5073
  if2334_else5072:
    null $P5049
    set $P5050, $P5049
  if2334_end5073:
    unless_null $P5050, vivi_23355074
    nqp_get_sc_object $P5052, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5051, $P5052
    new $P5053, 'Hash'
    set $P5051["%HANDLERS"], $P5053
    set $P5050, $P5053
  vivi_23355074:
    unless_null $P5050, vivi_23365075
    die "Contextual %*HANDLERS not found"
    box $P5054, "Contextual %*HANDLERS not found"
    set $P5050, $P5054
  vivi_23365075:
    set $P5045, $P5050
  fallback5071:
    unless $P5045 goto if2333_end5070 
    find_lex $P5055, "$BLOCK"
    find_dynamic_lex $P5056, "%*HANDLERS"
    unless_null $P5056, fallback5076
    nqp_get_sc_object $P5058, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5057, $P5058
    set fb_tmp_458, $P5057
    repr_defined $I5006, fb_tmp_458
    unless $I5006 goto if2337_else5077 
    set $P5059, fb_tmp_458["%HANDLERS"]
    set $P5061, $P5059
    goto if2337_end5078
  if2337_else5077:
    null $P5060
    set $P5061, $P5060
  if2337_end5078:
    unless_null $P5061, vivi_23385079
    nqp_get_sc_object $P5063, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5062, $P5063
    new $P5064, 'Hash'
    set $P5062["%HANDLERS"], $P5064
    set $P5061, $P5064
  vivi_23385079:
    unless_null $P5061, vivi_23395080
    die "Contextual %*HANDLERS not found"
    box $P5065, "Contextual %*HANDLERS not found"
    set $P5061, $P5065
  vivi_23395080:
    set $P5056, $P5061
  fallback5076:
    set $P5055["handlers"], $P5056
  if2333_end5070:
.annotate 'line', 1785
    find_dynamic_lex $P5066, "$/"
    find_lex $P5067, "$BLOCK"
    $P5068 = $P5066."!make"($P5067)
    .return ($P5068) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_449_1360432459.413") :anon :lex :outer("cuid_450_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1777
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 1778
    find_lex $P5001, "$past"
    $P5002 = _lex_param_0."key"()
    $P5001."push"($P5002)
.annotate 'line', 1779
    find_lex $P5003, "$past"
    $P5004 = _lex_param_0."value"()
    $P5005 = $P5003."push"($P5004)
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "newpad" :subid("cuid_256_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1796
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_461 
.annotate 'line', 1797
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback5092
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5002, $P5003
    set fb_tmp_461, $P5002
    repr_defined $I5001, fb_tmp_461
    unless $I5001 goto if2346_else5093 
    set $P5004, fb_tmp_461["$W"]
    set $P5006, $P5004
    goto if2346_end5094
  if2346_else5093:
    null $P5005
    set $P5006, $P5005
  if2346_end5094:
    unless_null $P5006, vivi_23475095
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_23475095:
    unless_null $P5006, vivi_23485096
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_23485096:
    set $P5001, $P5006
  fallback5092:
    $P5009 = $P5001."push_lexpad"(_lex_param_1)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "outerctx" :subid("cuid_257_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1800
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5032 = 'cuid_451_1360432459.413' 
    capture_lex $P5032 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_462 
    .local pmc fb_tmp_463 
    .local pmc fb_tmp_464 
    .local pmc fb_tmp_487 
    find_dynamic_lex $P5001, "%*COMPILING"
    unless_null $P5001, fallback5103
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5002, $P5003
    set fb_tmp_464, $P5002
    repr_defined $I5004, fb_tmp_464
    unless $I5004 goto if2352_else5104 
    set $P5004, fb_tmp_464["%COMPILING"]
    set $P5006, $P5004
    goto if2352_end5105
  if2352_else5104:
    null $P5005
    set $P5006, $P5005
  if2352_end5105:
    unless_null $P5006, vivi_23535106
    nqp_get_sc_object $P5008, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5007, $P5008
    new $P5009, 'Hash'
    set $P5007["%COMPILING"], $P5009
    set $P5006, $P5009
  vivi_23535106:
    unless_null $P5006, vivi_23545107
    die "Contextual %*COMPILING not found"
    box $P5010, "Contextual %*COMPILING not found"
    set $P5006, $P5010
  vivi_23545107:
    set $P5001, $P5006
  fallback5103:
    set fb_tmp_463, $P5001
    repr_defined $I5003, fb_tmp_463
    unless $I5003 goto if2351_else5101 
    set $P5011, fb_tmp_463["%?OPTIONS"]
    set $P5013, $P5011
    goto if2351_end5102
  if2351_else5101:
    null $P5012
    set $P5013, $P5012
  if2351_end5102:
    unless_null $P5013, vivi_23555108
    nqp_get_sc_object $P5014, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5013, $P5014
  vivi_23555108:
    set fb_tmp_462, $P5013
    repr_defined $I5002, fb_tmp_462
    unless $I5002 goto if2350_else5099 
    set $P5015, fb_tmp_462["outer_ctx"]
    set $P5017, $P5015
    goto if2350_end5100
  if2350_else5099:
    null $P5016
    set $P5017, $P5016
  if2350_end5100:
    unless_null $P5017, vivi_23565109
    nqp_get_sc_object $P5018, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5017, $P5018
  vivi_23565109:
    defined $I5001, $P5017
    if $I5001 goto unless2349_end5098 
    .const 'Sub' $P5019 = 'cuid_451_1360432459.413' 
    capture_lex $P5019
    $P5020 = $P5019()
  unless2349_end5098:
.annotate 'line', 1822
    nqp_decontainerize $P5021, _lex_param_0
    find_dynamic_lex $P5022, "$*W"
    unless_null $P5022, fallback5209
    nqp_get_sc_object $P5024, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5023, $P5024
    set fb_tmp_487, $P5023
    repr_defined $I5005, fb_tmp_487
    unless $I5005 goto if2417_else5210 
    set $P5025, fb_tmp_487["$W"]
    set $P5027, $P5025
    goto if2417_end5211
  if2417_else5210:
    null $P5026
    set $P5027, $P5026
  if2417_end5211:
    unless_null $P5027, vivi_24185212
    nqp_get_sc_object $P5028, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5027, $P5028
  vivi_24185212:
    unless_null $P5027, vivi_24195213
    die "Contextual $*W not found"
    box $P5029, "Contextual $*W not found"
    set $P5027, $P5029
  vivi_24195213:
    set $P5022, $P5027
  fallback5209:
    $P5030 = $P5022."cur_lexpad"()
    $P5031 = $P5021."SET_BLOCK_OUTER_CTX"($P5030)
    .return ($P5031) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_451_1360432459.413") :anon :lex :outer("cuid_257_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1801
    .lex "$SETTING", $P101 
    .local pmc fb_tmp_465 
    .local pmc fb_tmp_466 
    .local pmc fb_tmp_467 
    .local pmc fb_tmp_468 
    .local pmc fb_tmp_469 
    .local pmc fb_tmp_470 
    .local pmc fb_tmp_471 
    .local pmc fb_tmp_472 
    .local pmc fb_tmp_473 
    .local pmc fb_tmp_474 
    .local pmc fb_tmp_475 
    .local pmc fb_tmp_476 
    .local pmc fb_tmp_477 
    .local pmc fb_tmp_478 
    .local pmc fb_tmp_479 
    .local pmc fb_tmp_480 
    .local pmc fb_tmp_481 
    .local pmc fb_tmp_482 
    .local pmc fb_tmp_483 
    .local pmc fb_tmp_484 
    .local pmc fb_tmp_485 
    .local pmc fb_tmp_486 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
.annotate 'line', 1804
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback5110
    nqp_get_sc_object $P5004, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5003, $P5004
    set fb_tmp_465, $P5003
    repr_defined $I5001, fb_tmp_465
    unless $I5001 goto if2357_else5111 
    set $P5005, fb_tmp_465["$W"]
    set $P5007, $P5005
    goto if2357_end5112
  if2357_else5111:
    null $P5006
    set $P5007, $P5006
  if2357_end5112:
    unless_null $P5007, vivi_23585113
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5007, $P5008
  vivi_23585113:
    unless_null $P5007, vivi_23595114
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_23595114:
    set $P5002, $P5007
  fallback5110:
    find_dynamic_lex $P5011, "%*COMPILING"
    unless_null $P5011, fallback5120
    nqp_get_sc_object $P5013, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5012, $P5013
    set fb_tmp_468, $P5012
    repr_defined $I5005, fb_tmp_468
    unless $I5005 goto if2362_else5121 
    set $P5014, fb_tmp_468["%COMPILING"]
    set $P5016, $P5014
    goto if2362_end5122
  if2362_else5121:
    null $P5015
    set $P5016, $P5015
  if2362_end5122:
    unless_null $P5016, vivi_23635123
    nqp_get_sc_object $P5018, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5017, $P5018
    new $P5019, 'Hash'
    set $P5017["%COMPILING"], $P5019
    set $P5016, $P5019
  vivi_23635123:
    unless_null $P5016, vivi_23645124
    die "Contextual %*COMPILING not found"
    box $P5020, "Contextual %*COMPILING not found"
    set $P5016, $P5020
  vivi_23645124:
    set $P5011, $P5016
  fallback5120:
    set fb_tmp_467, $P5011
    repr_defined $I5004, fb_tmp_467
    unless $I5004 goto if2361_else5118 
    set $P5021, fb_tmp_467["%?OPTIONS"]
    set $P5023, $P5021
    goto if2361_end5119
  if2361_else5118:
    null $P5022
    set $P5023, $P5022
  if2361_end5119:
    unless_null $P5023, vivi_23655125
    nqp_get_sc_object $P5024, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5023, $P5024
  vivi_23655125:
    set fb_tmp_466, $P5023
    repr_defined $I5003, fb_tmp_466
    unless $I5003 goto if2360_else5116 
    set $P5025, fb_tmp_466["setting"]
    set $P5027, $P5025
    goto if2360_end5117
  if2360_else5116:
    null $P5026
    set $P5027, $P5026
  if2360_end5117:
    unless_null $P5027, vivi_23665126
    nqp_get_sc_object $P5028, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5027, $P5028
  vivi_23665126:
    set $P5010, $P5027
    defined $I5002, $P5010
    if $I5002, defor5115
    box $P5029, "NQPCORE"
    set $P5010, $P5029
  defor5115:
    $P5030 = $P5002."load_setting"($P5010)
    set $P101, $P5030
    find_dynamic_lex $P5031, "%*COMPILING"
    unless_null $P5031, fallback5133
    nqp_get_sc_object $P5033, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5032, $P5033
    set fb_tmp_471, $P5032
    repr_defined $I5009, fb_tmp_471
    unless $I5009 goto if2370_else5134 
    set $P5034, fb_tmp_471["%COMPILING"]
    set $P5036, $P5034
    goto if2370_end5135
  if2370_else5134:
    null $P5035
    set $P5036, $P5035
  if2370_end5135:
    unless_null $P5036, vivi_23715136
    nqp_get_sc_object $P5038, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5037, $P5038
    new $P5039, 'Hash'
    set $P5037["%COMPILING"], $P5039
    set $P5036, $P5039
  vivi_23715136:
    unless_null $P5036, vivi_23725137
    die "Contextual %*COMPILING not found"
    box $P5040, "Contextual %*COMPILING not found"
    set $P5036, $P5040
  vivi_23725137:
    set $P5031, $P5036
  fallback5133:
    set fb_tmp_470, $P5031
    repr_defined $I5008, fb_tmp_470
    unless $I5008 goto if2369_else5131 
    set $P5041, fb_tmp_470["%?OPTIONS"]
    set $P5043, $P5041
    goto if2369_end5132
  if2369_else5131:
    null $P5042
    set $P5043, $P5042
  if2369_end5132:
    unless_null $P5043, vivi_23735138
    nqp_get_sc_object $P5044, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5043, $P5044
  vivi_23735138:
    set fb_tmp_469, $P5043
    repr_defined $I5007, fb_tmp_469
    unless $I5007 goto if2368_else5129 
    set $P5045, fb_tmp_469["setting"]
    set $P5047, $P5045
    goto if2368_end5130
  if2368_else5129:
    null $P5046
    set $P5047, $P5046
  if2368_end5130:
    unless_null $P5047, vivi_23745139
    nqp_get_sc_object $P5048, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5047, $P5048
  vivi_23745139:
    set $S5001, $P5047
    iseq $I5006, $S5001, "NULL"
    box $P5156, $I5006
    set $P5155, $P5156
    if $I5006 goto unless2367_end5128 
.annotate 'line', 1809
.annotate 'line', 1810
    "&import_HOW_exports"($P101)
    find_dynamic_lex $P5049, "%*COMPILING"
    unless_null $P5049, fallback5146
    nqp_get_sc_object $P5051, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5050, $P5051
    set fb_tmp_474, $P5050
    repr_defined $I5012, fb_tmp_474
    unless $I5012 goto if2378_else5147 
    set $P5052, fb_tmp_474["%COMPILING"]
    set $P5054, $P5052
    goto if2378_end5148
  if2378_else5147:
    null $P5053
    set $P5054, $P5053
  if2378_end5148:
    unless_null $P5054, vivi_23795149
    nqp_get_sc_object $P5056, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5055, $P5056
    new $P5057, 'Hash'
    set $P5055["%COMPILING"], $P5057
    set $P5054, $P5057
  vivi_23795149:
    unless_null $P5054, vivi_23805150
    die "Contextual %*COMPILING not found"
    box $P5058, "Contextual %*COMPILING not found"
    set $P5054, $P5058
  vivi_23805150:
    set $P5049, $P5054
  fallback5146:
    set fb_tmp_473, $P5049
    repr_defined $I5011, fb_tmp_473
    unless $I5011 goto if2377_else5144 
    set $P5059, fb_tmp_473["%?OPTIONS"]
    set $P5061, $P5059
    goto if2377_end5145
  if2377_else5144:
    null $P5060
    set $P5061, $P5060
  if2377_end5145:
    unless_null $P5061, vivi_23815151
    nqp_get_sc_object $P5062, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5061, $P5062
  vivi_23815151:
    set fb_tmp_472, $P5061
    repr_defined $I5010, fb_tmp_472
    unless $I5010 goto if2376_else5142 
    set $P5063, fb_tmp_472["old-regex-lib"]
    set $P5065, $P5063
    goto if2376_end5143
  if2376_else5142:
    null $P5064
    set $P5065, $P5064
  if2376_end5143:
    unless_null $P5065, vivi_23825152
    nqp_get_sc_object $P5066, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5065, $P5066
  vivi_23825152:
    unless $P5065 goto if2375_end5141 
.annotate 'line', 1811
.annotate 'line', 1812
    find_dynamic_lex $P5067, "$*W"
    unless_null $P5067, fallback5153
    nqp_get_sc_object $P5069, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5068, $P5069
    set fb_tmp_475, $P5068
    repr_defined $I5013, fb_tmp_475
    unless $I5013 goto if2383_else5154 
    set $P5070, fb_tmp_475["$W"]
    set $P5072, $P5070
    goto if2383_end5155
  if2383_else5154:
    null $P5071
    set $P5072, $P5071
  if2383_end5155:
    unless_null $P5072, vivi_23845156
    nqp_get_sc_object $P5073, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5072, $P5073
  vivi_23845156:
    unless_null $P5072, vivi_23855157
    die "Contextual $*W not found"
    box $P5074, "Contextual $*W not found"
    set $P5072, $P5074
  vivi_23855157:
    set $P5067, $P5072
  fallback5153:
    find_dynamic_lex $P5075, "$*GLOBALish"
    unless_null $P5075, fallback5158
    nqp_get_sc_object $P5077, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5076, $P5077
    set fb_tmp_476, $P5076
    repr_defined $I5014, fb_tmp_476
    unless $I5014 goto if2386_else5159 
    set $P5078, fb_tmp_476["$GLOBALish"]
    set $P5080, $P5078
    goto if2386_end5160
  if2386_else5159:
    null $P5079
    set $P5080, $P5079
  if2386_end5160:
    unless_null $P5080, vivi_23875161
    nqp_get_sc_object $P5081, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5080, $P5081
  vivi_23875161:
    unless_null $P5080, vivi_23885162
    die "Contextual $*GLOBALish not found"
    box $P5082, "Contextual $*GLOBALish not found"
    set $P5080, $P5082
  vivi_23885162:
    set $P5075, $P5080
  fallback5158:
    $P5083 = $P5067."load_module"("NQPRegex", $P5075)
  if2375_end5141:
    find_dynamic_lex $P5084, "%*COMPILING"
    unless_null $P5084, fallback5169
    nqp_get_sc_object $P5086, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5085, $P5086
    set fb_tmp_479, $P5085
    repr_defined $I5017, fb_tmp_479
    unless $I5017 goto if2392_else5170 
    set $P5087, fb_tmp_479["%COMPILING"]
    set $P5089, $P5087
    goto if2392_end5171
  if2392_else5170:
    null $P5088
    set $P5089, $P5088
  if2392_end5171:
    unless_null $P5089, vivi_23935172
    nqp_get_sc_object $P5091, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5090, $P5091
    new $P5092, 'Hash'
    set $P5090["%COMPILING"], $P5092
    set $P5089, $P5092
  vivi_23935172:
    unless_null $P5089, vivi_23945173
    die "Contextual %*COMPILING not found"
    box $P5093, "Contextual %*COMPILING not found"
    set $P5089, $P5093
  vivi_23945173:
    set $P5084, $P5089
  fallback5169:
    set fb_tmp_478, $P5084
    repr_defined $I5016, fb_tmp_478
    unless $I5016 goto if2391_else5167 
    set $P5094, fb_tmp_478["%?OPTIONS"]
    set $P5096, $P5094
    goto if2391_end5168
  if2391_else5167:
    null $P5095
    set $P5096, $P5095
  if2391_end5168:
    unless_null $P5096, vivi_23955174
    nqp_get_sc_object $P5097, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5096, $P5097
  vivi_23955174:
    set fb_tmp_477, $P5096
    repr_defined $I5015, fb_tmp_477
    unless $I5015 goto if2390_else5165 
    set $P5098, fb_tmp_477["no-regex-lib"]
    set $P5100, $P5098
    goto if2390_end5166
  if2390_else5165:
    null $P5099
    set $P5100, $P5099
  if2390_end5166:
    unless_null $P5100, vivi_23965175
    nqp_get_sc_object $P5101, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5100, $P5101
  vivi_23965175:
    set $P5154, $P5100
    if $P5100 goto unless2389_end5164 
.annotate 'line', 1814
.annotate 'line', 1815
    find_dynamic_lex $P5102, "$*W"
    unless_null $P5102, fallback5176
    nqp_get_sc_object $P5104, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5103, $P5104
    set fb_tmp_480, $P5103
    repr_defined $I5018, fb_tmp_480
    unless $I5018 goto if2397_else5177 
    set $P5105, fb_tmp_480["$W"]
    set $P5107, $P5105
    goto if2397_end5178
  if2397_else5177:
    null $P5106
    set $P5107, $P5106
  if2397_end5178:
    unless_null $P5107, vivi_23985179
    nqp_get_sc_object $P5108, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5107, $P5108
  vivi_23985179:
    unless_null $P5107, vivi_23995180
    die "Contextual $*W not found"
    box $P5109, "Contextual $*W not found"
    set $P5107, $P5109
  vivi_23995180:
    set $P5102, $P5107
  fallback5176:
    find_dynamic_lex $P5110, "$*GLOBALish"
    unless_null $P5110, fallback5181
    nqp_get_sc_object $P5112, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5111, $P5112
    set fb_tmp_481, $P5111
    repr_defined $I5019, fb_tmp_481
    unless $I5019 goto if2400_else5182 
    set $P5113, fb_tmp_481["$GLOBALish"]
    set $P5115, $P5113
    goto if2400_end5183
  if2400_else5182:
    null $P5114
    set $P5115, $P5114
  if2400_end5183:
    unless_null $P5115, vivi_24015184
    nqp_get_sc_object $P5116, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5115, $P5116
  vivi_24015184:
    unless_null $P5115, vivi_24025185
    die "Contextual $*GLOBALish not found"
    box $P5117, "Contextual $*GLOBALish not found"
    set $P5115, $P5117
  vivi_24025185:
    set $P5110, $P5115
  fallback5181:
    $P5102."load_module"("QRegex", $P5110)
    find_dynamic_lex $P5118, "%*COMPILING"
    unless_null $P5118, fallback5192
    nqp_get_sc_object $P5120, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5119, $P5120
    set fb_tmp_484, $P5119
    repr_defined $I5022, fb_tmp_484
    unless $I5022 goto if2406_else5193 
    set $P5121, fb_tmp_484["%COMPILING"]
    set $P5123, $P5121
    goto if2406_end5194
  if2406_else5193:
    null $P5122
    set $P5123, $P5122
  if2406_end5194:
    unless_null $P5123, vivi_24075195
    nqp_get_sc_object $P5125, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5124, $P5125
    new $P5126, 'Hash'
    set $P5124["%COMPILING"], $P5126
    set $P5123, $P5126
  vivi_24075195:
    unless_null $P5123, vivi_24085196
    die "Contextual %*COMPILING not found"
    box $P5127, "Contextual %*COMPILING not found"
    set $P5123, $P5127
  vivi_24085196:
    set $P5118, $P5123
  fallback5192:
    set fb_tmp_483, $P5118
    repr_defined $I5021, fb_tmp_483
    unless $I5021 goto if2405_else5190 
    set $P5128, fb_tmp_483["%?OPTIONS"]
    set $P5130, $P5128
    goto if2405_end5191
  if2405_else5190:
    null $P5129
    set $P5130, $P5129
  if2405_end5191:
    unless_null $P5130, vivi_24095197
    nqp_get_sc_object $P5131, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5130, $P5131
  vivi_24095197:
    set fb_tmp_482, $P5130
    repr_defined $I5020, fb_tmp_482
    unless $I5020 goto if2404_else5188 
    set $P5132, fb_tmp_482["old-regex-lib"]
    set $P5134, $P5132
    goto if2404_end5189
  if2404_else5188:
    null $P5133
    set $P5134, $P5133
  if2404_end5189:
    unless_null $P5134, vivi_24105198
    nqp_get_sc_object $P5135, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5134, $P5135
  vivi_24105198:
    set $P5153, $P5134
    if $P5134 goto unless2403_end5187 
.annotate 'line', 1816
.annotate 'line', 1817
    find_dynamic_lex $P5136, "$*W"
    unless_null $P5136, fallback5199
    nqp_get_sc_object $P5138, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5137, $P5138
    set fb_tmp_485, $P5137
    repr_defined $I5023, fb_tmp_485
    unless $I5023 goto if2411_else5200 
    set $P5139, fb_tmp_485["$W"]
    set $P5141, $P5139
    goto if2411_end5201
  if2411_else5200:
    null $P5140
    set $P5141, $P5140
  if2411_end5201:
    unless_null $P5141, vivi_24125202
    nqp_get_sc_object $P5142, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5141, $P5142
  vivi_24125202:
    unless_null $P5141, vivi_24135203
    die "Contextual $*W not found"
    box $P5143, "Contextual $*W not found"
    set $P5141, $P5143
  vivi_24135203:
    set $P5136, $P5141
  fallback5199:
    find_dynamic_lex $P5144, "$*GLOBALish"
    unless_null $P5144, fallback5204
    nqp_get_sc_object $P5146, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5145, $P5146
    set fb_tmp_486, $P5145
    repr_defined $I5024, fb_tmp_486
    unless $I5024 goto if2414_else5205 
    set $P5147, fb_tmp_486["$GLOBALish"]
    set $P5149, $P5147
    goto if2414_end5206
  if2414_else5205:
    null $P5148
    set $P5149, $P5148
  if2414_end5206:
    unless_null $P5149, vivi_24155207
    nqp_get_sc_object $P5150, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5149, $P5150
  vivi_24155207:
    unless_null $P5149, vivi_24165208
    die "Contextual $*GLOBALish not found"
    box $P5151, "Contextual $*GLOBALish not found"
    set $P5149, $P5151
  vivi_24165208:
    set $P5144, $P5149
  fallback5204:
    $P5152 = $P5136."load_module"("NQPP6QRegex", $P5144)
    set $P5153, $P5152
  unless2403_end5187:
    set $P5154, $P5153
  unless2389_end5164:
    set $P5155, $P5154
  unless2367_end5128:
    .return ($P5155) 
.end
.HLL "nqp"
.namespace []
.sub "you_are_here" :subid("cuid_258_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1834
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
.annotate 'line', 1835
    nqp_decontainerize $P5001, _lex_param_0
    $P5002 = $P5001."CTXSAVE"()
    $P5003 = _lex_param_1."!make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<use>" :subid("cuid_259_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1840
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$module", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_488 
    .local pmc fb_tmp_489 
    .local pmc fb_tmp_490 
    .local pmc fb_tmp_491 
    .local pmc fb_tmp_492 
    .local pmc fb_tmp_493 
    .local pmc fb_tmp_494 
    .local pmc fb_tmp_495 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
.annotate 'line', 1841
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback5214
    nqp_get_sc_object $P5004, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5003, $P5004
    set fb_tmp_488, $P5003
    repr_defined $I5001, fb_tmp_488
    unless $I5001 goto if2420_else5215 
    set $P5005, fb_tmp_488["$W"]
    set $P5007, $P5005
    goto if2420_end5216
  if2420_else5215:
    null $P5006
    set $P5007, $P5006
  if2420_end5216:
    unless_null $P5007, vivi_24215217
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5007, $P5008
  vivi_24215217:
    unless_null $P5007, vivi_24225218
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_24225218:
    set $P5002, $P5007
  fallback5214:
    unless_null _lex_param_1, fallback5221
    nqp_get_sc_object $P5010, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5010
  fallback5221:
    set fb_tmp_489, _lex_param_1
    repr_defined $I5002, fb_tmp_489
    unless $I5002 goto if2423_else5219 
    set $P5011, fb_tmp_489["name"]
    set $P5013, $P5011
    goto if2423_end5220
  if2423_else5219:
    null $P5012
    set $P5013, $P5012
  if2423_end5220:
    unless_null $P5013, vivi_24245222
    nqp_get_sc_object $P5014, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5013, $P5014
  vivi_24245222:
    set $S5001, $P5013
    find_dynamic_lex $P5015, "$*GLOBALish"
    unless_null $P5015, fallback5223
    nqp_get_sc_object $P5017, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5016, $P5017
    set fb_tmp_490, $P5016
    repr_defined $I5003, fb_tmp_490
    unless $I5003 goto if2425_else5224 
    set $P5018, fb_tmp_490["$GLOBALish"]
    set $P5020, $P5018
    goto if2425_end5225
  if2425_else5224:
    null $P5019
    set $P5020, $P5019
  if2425_end5225:
    unless_null $P5020, vivi_24265226
    nqp_get_sc_object $P5021, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5020, $P5021
  vivi_24265226:
    unless_null $P5020, vivi_24275227
    die "Contextual $*GLOBALish not found"
    box $P5022, "Contextual $*GLOBALish not found"
    set $P5020, $P5022
  vivi_24275227:
    set $P5015, $P5020
  fallback5223:
    $P5023 = $P5002."load_module"($S5001, $P5015)
    set $P101, $P5023
    defined $I5004, $P101
    unless $I5004 goto if2428_end5229 
.annotate 'line', 1842
    exists $I5005, $P101["EXPORT"]
    set $I5008, $I5005
    unless $I5005 goto if2430_end5233 
    set fb_tmp_491, $P101
    repr_defined $I5007, fb_tmp_491
    unless $I5007 goto if2431_else5234 
    set $P5025, fb_tmp_491["EXPORT"]
    set $P5027, $P5025
    goto if2431_end5235
  if2431_else5234:
    null $P5026
    set $P5027, $P5026
  if2431_end5235:
    unless_null $P5027, vivi_24325236
    nqp_get_sc_object $P5028, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5027, $P5028
  vivi_24325236:
    get_who $P5024, $P5027
    exists $I5006, $P5024["DEFAULT"]
    set $I5008, $I5006
  if2430_end5233:
    unless $I5008 goto if2429_end5231 
.annotate 'line', 1843
    find_dynamic_lex $P5029, "$*W"
    unless_null $P5029, fallback5237
    nqp_get_sc_object $P5031, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5030, $P5031
    set fb_tmp_492, $P5030
    repr_defined $I5009, fb_tmp_492
    unless $I5009 goto if2433_else5238 
    set $P5032, fb_tmp_492["$W"]
    set $P5034, $P5032
    goto if2433_end5239
  if2433_else5238:
    null $P5033
    set $P5034, $P5033
  if2433_end5239:
    unless_null $P5034, vivi_24345240
    nqp_get_sc_object $P5035, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5034, $P5035
  vivi_24345240:
    unless_null $P5034, vivi_24355241
    die "Contextual $*W not found"
    box $P5036, "Contextual $*W not found"
    set $P5034, $P5036
  vivi_24355241:
    set $P5029, $P5034
  fallback5237:
    set fb_tmp_494, $P101
    repr_defined $I5011, fb_tmp_494
    unless $I5011 goto if2437_else5244 
    set $P5039, fb_tmp_494["EXPORT"]
    set $P5041, $P5039
    goto if2437_end5245
  if2437_else5244:
    null $P5040
    set $P5041, $P5040
  if2437_end5245:
    unless_null $P5041, vivi_24385246
    nqp_get_sc_object $P5042, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5041, $P5042
  vivi_24385246:
    get_who $P5038, $P5041
    set fb_tmp_493, $P5038
    repr_defined $I5010, fb_tmp_493
    unless $I5010 goto if2436_else5242 
    set $P5043, fb_tmp_493["DEFAULT"]
    set $P5045, $P5043
    goto if2436_end5243
  if2436_else5242:
    null $P5044
    set $P5045, $P5044
  if2436_end5243:
    unless_null $P5045, vivi_24395247
    nqp_get_sc_object $P5046, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5045, $P5046
  vivi_24395247:
    get_who $P5037, $P5045
    $P5047 = $P5029."import"($P5037)
  if2429_end5231:
.annotate 'line', 1846
    $P5048 = "&import_HOW_exports"($P101)
  if2428_end5229:
.annotate 'line', 1848
    nqp_get_sc_object $P5051, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5050, $P5051, "QAST"
    get_who $P5049, $P5050
    set fb_tmp_495, $P5049
    repr_defined $I5012, fb_tmp_495
    unless $I5012 goto if2440_else5248 
    set $P5052, fb_tmp_495["Stmts"]
    set $P5054, $P5052
    goto if2440_end5249
  if2440_else5248:
    null $P5053
    set $P5054, $P5053
  if2440_end5249:
    unless_null $P5054, vivi_24415250
    nqp_get_sc_object $P5055, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5054, $P5055
  vivi_24415250:
    $P5056 = $P5054."new"()
    $P5057 = _lex_param_1."!make"($P5056)
    .return ($P5057) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<if>" :subid("cuid_260_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1851
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5042 = 'cuid_452_1360432459.413' 
    capture_lex $P5042 
    .lex "$count", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_496 
    .local pmc fb_tmp_497 
    .local pmc fb_tmp_498 
    .local pmc fb_tmp_499 
    .local pmc fb_tmp_500 
    .local pmc fb_tmp_501 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
    unless_null _lex_param_1, fallback5253
    nqp_get_sc_object $P5003, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5003
  fallback5253:
    set fb_tmp_496, _lex_param_1
    repr_defined $I5001, fb_tmp_496
    unless $I5001 goto if2442_else5251 
    set $P5004, fb_tmp_496["xblock"]
    set $P5006, $P5004
    goto if2442_end5252
  if2442_else5251:
    null $P5005
    set $P5006, $P5005
  if2442_end5252:
    unless_null $P5006, vivi_24435254
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_24435254:
    set $N5002, $P5006
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5008, $N5001
    set $P101, $P5008
.annotate 'line', 1853
    unless_null _lex_param_1, fallback5259
    nqp_get_sc_object $P5009, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5009
  fallback5259:
    set fb_tmp_498, _lex_param_1
    repr_defined $I5003, fb_tmp_498
    unless $I5003 goto if2445_else5257 
    set $P5010, fb_tmp_498["xblock"]
    set $P5012, $P5010
    goto if2445_end5258
  if2445_else5257:
    null $P5011
    set $P5012, $P5011
  if2445_end5258:
    unless_null $P5012, vivi_24465260
    nqp_get_sc_object $P5013, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5012, $P5013
  vivi_24465260:
    set fb_tmp_497, $P5012
    repr_defined $I5002, fb_tmp_497
    unless $I5002 goto if2444_else5255 
    set $I5004, $P101
    set $P5014, fb_tmp_497[$I5004]
    set $P5016, $P5014
    goto if2444_end5256
  if2444_else5255:
    null $P5015
    set $P5016, $P5015
  if2444_end5256:
    unless_null $P5016, vivi_24475261
    nqp_get_sc_object $P5017, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5016, $P5017
  vivi_24475261:
    $P5018 = $P5016."ast"()
    $P5019 = "&xblock_immediate"($P5018)
    set $P102, $P5019
    unless_null _lex_param_1, fallback5266
    nqp_get_sc_object $P5020, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5020
  fallback5266:
    set fb_tmp_499, _lex_param_1
    repr_defined $I5005, fb_tmp_499
    unless $I5005 goto if2449_else5264 
    set $P5021, fb_tmp_499["else"]
    set $P5023, $P5021
    goto if2449_end5265
  if2449_else5264:
    null $P5022
    set $P5023, $P5022
  if2449_end5265:
    unless_null $P5023, vivi_24505267
    nqp_get_sc_object $P5024, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5023, $P5024
  vivi_24505267:
    unless $P5023 goto if2448_end5263 
.annotate 'line', 1854
.annotate 'line', 1855
    unless_null _lex_param_1, fallback5272
    nqp_get_sc_object $P5025, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5025
  fallback5272:
    set fb_tmp_501, _lex_param_1
    repr_defined $I5007, fb_tmp_501
    unless $I5007 goto if2452_else5270 
    set $P5026, fb_tmp_501["else"]
    set $P5028, $P5026
    goto if2452_end5271
  if2452_else5270:
    null $P5027
    set $P5028, $P5027
  if2452_end5271:
    unless_null $P5028, vivi_24535273
    nqp_get_sc_object $P5029, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5028, $P5029
  vivi_24535273:
    set fb_tmp_500, $P5028
    repr_defined $I5006, fb_tmp_500
    unless $I5006 goto if2451_else5268 
    set $P5030, fb_tmp_500[0]
    set $P5032, $P5030
    goto if2451_end5269
  if2451_else5268:
    null $P5031
    set $P5032, $P5031
  if2451_end5269:
    unless_null $P5032, vivi_24545274
    nqp_get_sc_object $P5033, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5032, $P5033
  vivi_24545274:
    $P5034 = $P5032."ast"()
    $P5035 = "&block_immediate"($P5034)
    $P5036 = $P102."push"($P5035)
  if2448_end5263:
  while2455_test5275:
    set $N5004, $P101
    set $N5005, 0
    isgt $I5008, $N5004, $N5005
    box $P5040, $I5008
    set $P5039, $P5040
    unless $I5008 goto while2455_done5279 
  while2455_redo5277:
    .const 'Sub' $P5037 = 'cuid_452_1360432459.413' 
    capture_lex $P5037
    $P5038 = $P5037()
    set $P5039, $P5038
    goto while2455_test5275 
  while2455_done5279:
.annotate 'line', 1864
    $P5041 = _lex_param_1."!make"($P102)
    .return ($P5041) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_452_1360432459.413") :anon :lex :outer("cuid_260_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1858
    .lex "$else", $P101 
    .local pmc tmp_1 
    .local pmc fb_tmp_502 
    .local pmc fb_tmp_503 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    find_lex $P5002, "$count"
    set tmp_1, $P5002
    set $N5002, tmp_1
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$count", $P5003
    find_lex $P5002, "$past"
    set $P101, $P5002
.annotate 'line', 1861
    find_lex $P5003, "$/"
    unless_null $P5003, fallback5284
    nqp_get_sc_object $P5004, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5003, $P5004
  fallback5284:
    set fb_tmp_503, $P5003
    repr_defined $I5002, fb_tmp_503
    unless $I5002 goto if2457_else5282 
    set $P5005, fb_tmp_503["xblock"]
    set $P5007, $P5005
    goto if2457_end5283
  if2457_else5282:
    null $P5006
    set $P5007, $P5006
  if2457_end5283:
    unless_null $P5007, vivi_24585285
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5007, $P5008
  vivi_24585285:
    set fb_tmp_502, $P5007
    repr_defined $I5001, fb_tmp_502
    unless $I5001 goto if2456_else5280 
    find_lex $P5010, "$count"
    set $I5003, $P5010
    set $P5009, fb_tmp_502[$I5003]
    set $P5012, $P5009
    goto if2456_end5281
  if2456_else5280:
    null $P5011
    set $P5012, $P5011
  if2456_end5281:
    unless_null $P5012, vivi_24595286
    nqp_get_sc_object $P5013, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5012, $P5013
  vivi_24595286:
    $P5014 = $P5012."ast"()
    $P5015 = "&xblock_immediate"($P5014)
    store_lex "$past", $P5015
.annotate 'line', 1862
    find_lex $P5016, "$past"
    $P5017 = $P5016."push"($P101)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<unless>" :subid("cuid_261_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1867
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_504 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
.annotate 'line', 1868
    unless_null _lex_param_1, fallback5289
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5002
  fallback5289:
    set fb_tmp_504, _lex_param_1
    repr_defined $I5001, fb_tmp_504
    unless $I5001 goto if2460_else5287 
    set $P5003, fb_tmp_504["xblock"]
    set $P5005, $P5003
    goto if2460_end5288
  if2460_else5287:
    null $P5004
    set $P5005, $P5004
  if2460_end5288:
    unless_null $P5005, vivi_24615290
    nqp_get_sc_object $P5006, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5005, $P5006
  vivi_24615290:
    $P5007 = $P5005."ast"()
    $P5008 = "&xblock_immediate"($P5007)
    set $P101, $P5008
.annotate 'line', 1869
    $P101."op"("unless")
.annotate 'line', 1870
    $P5009 = _lex_param_1."!make"($P101)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<while>" :subid("cuid_262_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1873
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_505 
    .local pmc fb_tmp_506 
    .local pmc fb_tmp_507 
    .local pmc fb_tmp_508 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
.annotate 'line', 1874
    unless_null _lex_param_1, fallback5293
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5002
  fallback5293:
    set fb_tmp_505, _lex_param_1
    repr_defined $I5001, fb_tmp_505
    unless $I5001 goto if2462_else5291 
    set $P5003, fb_tmp_505["xblock"]
    set $P5005, $P5003
    goto if2462_end5292
  if2462_else5291:
    null $P5004
    set $P5005, $P5004
  if2462_end5292:
    unless_null $P5005, vivi_24635294
    nqp_get_sc_object $P5006, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5005, $P5006
  vivi_24635294:
    $P5007 = $P5005."ast"()
    $P5008 = "&xblock_immediate"($P5007)
    set $P101, $P5008
.annotate 'line', 1875
    unless_null _lex_param_1, fallback5297
    nqp_get_sc_object $P5009, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5009
  fallback5297:
    set fb_tmp_506, _lex_param_1
    repr_defined $I5002, fb_tmp_506
    unless $I5002 goto if2464_else5295 
    set $P5010, fb_tmp_506["sym"]
    set $P5012, $P5010
    goto if2464_end5296
  if2464_else5295:
    null $P5011
    set $P5012, $P5011
  if2464_end5296:
    unless_null $P5012, vivi_24655298
    nqp_get_sc_object $P5013, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5012, $P5013
  vivi_24655298:
    set $S5001, $P5012
    $P101."op"($S5001)
    find_dynamic_lex $P5014, "$*CONTROL_USED"
    unless_null $P5014, fallback5301
    nqp_get_sc_object $P5016, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5015, $P5016
    set fb_tmp_507, $P5015
    repr_defined $I5003, fb_tmp_507
    unless $I5003 goto if2467_else5302 
    set $P5017, fb_tmp_507["$CONTROL_USED"]
    set $P5019, $P5017
    goto if2467_end5303
  if2467_else5302:
    null $P5018
    set $P5019, $P5018
  if2467_end5303:
    unless_null $P5019, vivi_24685304
    nqp_get_sc_object $P5020, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5019, $P5020
  vivi_24685304:
    unless_null $P5019, vivi_24695305
    die "Contextual $*CONTROL_USED not found"
    box $P5021, "Contextual $*CONTROL_USED not found"
    set $P5019, $P5021
  vivi_24695305:
    set $P5014, $P5019
  fallback5301:
    if $P5014 goto unless2466_end5300 
.annotate 'line', 1876
.annotate 'line', 1877
    nqp_get_sc_object $P5024, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5023, $P5024, "QAST"
    get_who $P5022, $P5023
    set fb_tmp_508, $P5022
    repr_defined $I5004, fb_tmp_508
    unless $I5004 goto if2470_else5306 
    set $P5025, fb_tmp_508["IVal"]
    set $P5027, $P5025
    goto if2470_end5307
  if2470_else5306:
    null $P5026
    set $P5027, $P5026
  if2470_end5307:
    unless_null $P5027, vivi_24715308
    nqp_get_sc_object $P5028, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5027, $P5028
  vivi_24715308:
    $P5029 = $P5027."new"(1 :named("value"), "nohandler" :named("named"))
    $P5030 = $P101."push"($P5029)
  unless2466_end5300:
.annotate 'line', 1879
    $P5031 = _lex_param_1."!make"($P101)
    .return ($P5031) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<repeat>" :subid("cuid_263_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1882
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$op", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_509 
    .local pmc fb_tmp_510 
    .local pmc fb_tmp_511 
    .local pmc fb_tmp_512 
    .local pmc fb_tmp_513 
    .local pmc fb_tmp_514 
    .local pmc fb_tmp_515 
    .local pmc fb_tmp_516 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
    unless_null _lex_param_1, fallback5311
    nqp_get_sc_object $P5003, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5003
  fallback5311:
    set fb_tmp_509, _lex_param_1
    repr_defined $I5001, fb_tmp_509
    unless $I5001 goto if2472_else5309 
    set $P5004, fb_tmp_509["wu"]
    set $P5006, $P5004
    goto if2472_end5310
  if2472_else5309:
    null $P5005
    set $P5006, $P5005
  if2472_end5310:
    unless_null $P5006, vivi_24735312
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_24735312:
    set $S5002, $P5006
    concat $S5001, "repeat_", $S5002
    box $P5008, $S5001
    set $P101, $P5008
    unless_null _lex_param_1, fallback5317
    nqp_get_sc_object $P5009, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5009
  fallback5317:
    set fb_tmp_510, _lex_param_1
    repr_defined $I5002, fb_tmp_510
    unless $I5002 goto if2475_else5315 
    set $P5010, fb_tmp_510["xblock"]
    set $P5012, $P5010
    goto if2475_end5316
  if2475_else5315:
    null $P5011
    set $P5012, $P5011
  if2475_end5316:
    unless_null $P5012, vivi_24765318
    nqp_get_sc_object $P5013, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5012, $P5013
  vivi_24765318:
    unless $P5012 goto if2474_else5313 
.annotate 'line', 1885
.annotate 'line', 1886
    unless_null _lex_param_1, fallback5321
    nqp_get_sc_object $P5014, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5014
  fallback5321:
    set fb_tmp_511, _lex_param_1
    repr_defined $I5003, fb_tmp_511
    unless $I5003 goto if2477_else5319 
    set $P5015, fb_tmp_511["xblock"]
    set $P5017, $P5015
    goto if2477_end5320
  if2477_else5319:
    null $P5016
    set $P5017, $P5016
  if2477_end5320:
    unless_null $P5017, vivi_24785322
    nqp_get_sc_object $P5018, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5017, $P5018
  vivi_24785322:
    $P5019 = $P5017."ast"()
    $P5020 = "&xblock_immediate"($P5019)
    set $P102, $P5020
.annotate 'line', 1887
    $P5021 = $P102."op"($P101)
    goto if2474_end5314
  if2474_else5313:
.annotate 'line', 1889
.annotate 'line', 1890
    nqp_get_sc_object $P5024, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5023, $P5024, "QAST"
    get_who $P5022, $P5023
    set fb_tmp_512, $P5022
    repr_defined $I5004, fb_tmp_512
    unless $I5004 goto if2479_else5323 
    set $P5025, fb_tmp_512["Op"]
    set $P5027, $P5025
    goto if2479_end5324
  if2479_else5323:
    null $P5026
    set $P5027, $P5026
  if2479_end5324:
    unless_null $P5027, vivi_24805325
    nqp_get_sc_object $P5028, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5027, $P5028
  vivi_24805325:
    unless_null _lex_param_1, fallback5328
    nqp_get_sc_object $P5029, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5029
  fallback5328:
    set fb_tmp_513, _lex_param_1
    repr_defined $I5005, fb_tmp_513
    unless $I5005 goto if2481_else5326 
    set $P5030, fb_tmp_513["EXPR"]
    set $P5032, $P5030
    goto if2481_end5327
  if2481_else5326:
    null $P5031
    set $P5032, $P5031
  if2481_end5327:
    unless_null $P5032, vivi_24825329
    nqp_get_sc_object $P5033, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5032, $P5033
  vivi_24825329:
    $P5034 = $P5032."ast"()
    unless_null _lex_param_1, fallback5332
    nqp_get_sc_object $P5035, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5035
  fallback5332:
    set fb_tmp_514, _lex_param_1
    repr_defined $I5006, fb_tmp_514
    unless $I5006 goto if2483_else5330 
    set $P5036, fb_tmp_514["pblock"]
    set $P5038, $P5036
    goto if2483_end5331
  if2483_else5330:
    null $P5037
    set $P5038, $P5037
  if2483_end5331:
    unless_null $P5038, vivi_24845333
    nqp_get_sc_object $P5039, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5038, $P5039
  vivi_24845333:
    $P5040 = $P5038."ast"()
    $P5041 = "&block_immediate"($P5040)
    $P5042 = $P5027."new"($P5034, $P5041, $P101 :named("op"), _lex_param_1 :named("node"))
    set $P102, $P5042
  if2474_end5314:
    find_dynamic_lex $P5043, "$*CONTROL_USED"
    unless_null $P5043, fallback5336
    nqp_get_sc_object $P5045, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5044, $P5045
    set fb_tmp_515, $P5044
    repr_defined $I5007, fb_tmp_515
    unless $I5007 goto if2486_else5337 
    set $P5046, fb_tmp_515["$CONTROL_USED"]
    set $P5048, $P5046
    goto if2486_end5338
  if2486_else5337:
    null $P5047
    set $P5048, $P5047
  if2486_end5338:
    unless_null $P5048, vivi_24875339
    nqp_get_sc_object $P5049, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5048, $P5049
  vivi_24875339:
    unless_null $P5048, vivi_24885340
    die "Contextual $*CONTROL_USED not found"
    box $P5050, "Contextual $*CONTROL_USED not found"
    set $P5048, $P5050
  vivi_24885340:
    set $P5043, $P5048
  fallback5336:
    if $P5043 goto unless2485_end5335 
.annotate 'line', 1893
.annotate 'line', 1894
    nqp_get_sc_object $P5053, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5052, $P5053, "QAST"
    get_who $P5051, $P5052
    set fb_tmp_516, $P5051
    repr_defined $I5008, fb_tmp_516
    unless $I5008 goto if2489_else5341 
    set $P5054, fb_tmp_516["IVal"]
    set $P5056, $P5054
    goto if2489_end5342
  if2489_else5341:
    null $P5055
    set $P5056, $P5055
  if2489_end5342:
    unless_null $P5056, vivi_24905343
    nqp_get_sc_object $P5057, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5056, $P5057
  vivi_24905343:
    $P5058 = $P5056."new"(1 :named("value"), "nohandler" :named("named"))
    $P5059 = $P102."push"($P5058)
  unless2485_end5335:
.annotate 'line', 1896
    $P5060 = _lex_param_1."!make"($P102)
    .return ($P5060) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<for>" :subid("cuid_264_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1899
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "$block", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_517 
    .local pmc fb_tmp_518 
    .local pmc fb_tmp_519 
    .local pmc fb_tmp_520 
    .local pmc fb_tmp_521 
    .local pmc fb_tmp_522 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
.annotate 'line', 1900
    unless_null _lex_param_1, fallback5346
    nqp_get_sc_object $P5003, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5003
  fallback5346:
    set fb_tmp_517, _lex_param_1
    repr_defined $I5001, fb_tmp_517
    unless $I5001 goto if2491_else5344 
    set $P5004, fb_tmp_517["xblock"]
    set $P5006, $P5004
    goto if2491_end5345
  if2491_else5344:
    null $P5005
    set $P5006, $P5005
  if2491_end5345:
    unless_null $P5006, vivi_24925347
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_24925347:
    $P5008 = $P5006."ast"()
    set $P101, $P5008
.annotate 'line', 1901
    $P101."op"("for")
    set fb_tmp_518, $P101
    repr_defined $I5002, fb_tmp_518
    unless $I5002 goto if2493_else5348 
    set $P5009, fb_tmp_518[1]
    set $P5011, $P5009
    goto if2493_end5349
  if2493_else5348:
    null $P5010
    set $P5011, $P5010
  if2493_end5349:
    unless_null $P5011, vivi_24945350
    nqp_get_sc_object $P5012, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5011, $P5012
  vivi_24945350:
    set $P102, $P5011
.annotate 'line', 1903
    $P5013 = $P102."arity"()
    if $P5013 goto unless2495_end5352 
.annotate 'line', 1904
    set fb_tmp_519, $P102
    repr_defined $I5003, fb_tmp_519
    unless $I5003 goto if2496_else5353 
    set $P5014, fb_tmp_519[0]
    set $P5016, $P5014
    goto if2496_end5354
  if2496_else5353:
    null $P5015
    set $P5016, $P5015
  if2496_end5354:
    unless_null $P5016, vivi_24975355
    nqp_get_sc_object $P5017, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5016, $P5017
  vivi_24975355:
    nqp_get_sc_object $P5020, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5019, $P5020, "QAST"
    get_who $P5018, $P5019
    set fb_tmp_520, $P5018
    repr_defined $I5004, fb_tmp_520
    unless $I5004 goto if2498_else5356 
    set $P5021, fb_tmp_520["Var"]
    set $P5023, $P5021
    goto if2498_end5357
  if2498_else5356:
    null $P5022
    set $P5023, $P5022
  if2498_end5357:
    unless_null $P5023, vivi_24995358
    nqp_get_sc_object $P5024, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5023, $P5024
  vivi_24995358:
    $P5025 = $P5023."new"("$_" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    $P5016."push"($P5025)
.annotate 'line', 1905
    $P102."symbol"("$_", "lexical" :named("scope"))
.annotate 'line', 1906
    $P5026 = $P102."arity"(1)
  unless2495_end5352:
.annotate 'line', 1908
    $P102."blocktype"("immediate")
    find_dynamic_lex $P5027, "$*CONTROL_USED"
    unless_null $P5027, fallback5361
    nqp_get_sc_object $P5029, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5028, $P5029
    set fb_tmp_521, $P5028
    repr_defined $I5005, fb_tmp_521
    unless $I5005 goto if2501_else5362 
    set $P5030, fb_tmp_521["$CONTROL_USED"]
    set $P5032, $P5030
    goto if2501_end5363
  if2501_else5362:
    null $P5031
    set $P5032, $P5031
  if2501_end5363:
    unless_null $P5032, vivi_25025364
    nqp_get_sc_object $P5033, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5032, $P5033
  vivi_25025364:
    unless_null $P5032, vivi_25035365
    die "Contextual $*CONTROL_USED not found"
    box $P5034, "Contextual $*CONTROL_USED not found"
    set $P5032, $P5034
  vivi_25035365:
    set $P5027, $P5032
  fallback5361:
    if $P5027 goto unless2500_end5360 
.annotate 'line', 1909
.annotate 'line', 1910
    nqp_get_sc_object $P5037, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5036, $P5037, "QAST"
    get_who $P5035, $P5036
    set fb_tmp_522, $P5035
    repr_defined $I5006, fb_tmp_522
    unless $I5006 goto if2504_else5366 
    set $P5038, fb_tmp_522["IVal"]
    set $P5040, $P5038
    goto if2504_end5367
  if2504_else5366:
    null $P5039
    set $P5040, $P5039
  if2504_end5367:
    unless_null $P5040, vivi_25055368
    nqp_get_sc_object $P5041, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5040, $P5041
  vivi_25055368:
    $P5042 = $P5040."new"(1 :named("value"), "nohandler" :named("named"))
    $P5043 = $P101."push"($P5042)
  unless2500_end5360:
.annotate 'line', 1912
    $P5044 = _lex_param_1."!make"($P101)
    .return ($P5044) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<CATCH>" :subid("cuid_265_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1915
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$block", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_523 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
.annotate 'line', 1916
    unless_null _lex_param_1, fallback5371
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5002
  fallback5371:
    set fb_tmp_523, _lex_param_1
    repr_defined $I5001, fb_tmp_523
    unless $I5001 goto if2506_else5369 
    set $P5003, fb_tmp_523["block"]
    set $P5005, $P5003
    goto if2506_end5370
  if2506_else5369:
    null $P5004
    set $P5005, $P5004
  if2506_end5370:
    unless_null $P5005, vivi_25075372
    nqp_get_sc_object $P5006, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5005, $P5006
  vivi_25075372:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 1917
    "&set_block_handler"(_lex_param_1, $P101, "CATCH")
.annotate 'line', 1918
    $P5008 = "&default_for"("$")
    $P5009 = _lex_param_1."!make"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<CONTROL>" :subid("cuid_266_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1921
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$block", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_524 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
.annotate 'line', 1922
    unless_null _lex_param_1, fallback5375
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5002
  fallback5375:
    set fb_tmp_524, _lex_param_1
    repr_defined $I5001, fb_tmp_524
    unless $I5001 goto if2508_else5373 
    set $P5003, fb_tmp_524["block"]
    set $P5005, $P5003
    goto if2508_end5374
  if2508_else5373:
    null $P5004
    set $P5005, $P5004
  if2508_end5374:
    unless_null $P5005, vivi_25095376
    nqp_get_sc_object $P5006, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5005, $P5006
  vivi_25095376:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 1923
    "&set_block_handler"(_lex_param_1, $P101, "CONTROL")
.annotate 'line', 1924
    $P5008 = "&default_for"("$")
    $P5009 = _lex_param_1."!make"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<BEGIN>" :subid("cuid_267_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1958
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_525 
    .local pmc fb_tmp_526 
.annotate 'line', 1959
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback5377
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5002, $P5003
    set fb_tmp_525, $P5002
    repr_defined $I5001, fb_tmp_525
    unless $I5001 goto if2510_else5378 
    set $P5004, fb_tmp_525["$W"]
    set $P5006, $P5004
    goto if2510_end5379
  if2510_else5378:
    null $P5005
    set $P5006, $P5005
  if2510_end5379:
    unless_null $P5006, vivi_25115380
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_25115380:
    unless_null $P5006, vivi_25125381
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_25125381:
    set $P5001, $P5006
  fallback5377:
    unless_null _lex_param_1, fallback5384
    nqp_get_sc_object $P5009, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5009
  fallback5384:
    set fb_tmp_526, _lex_param_1
    repr_defined $I5002, fb_tmp_526
    unless $I5002 goto if2513_else5382 
    set $P5010, fb_tmp_526["blorst"]
    set $P5012, $P5010
    goto if2513_end5383
  if2513_else5382:
    null $P5011
    set $P5012, $P5011
  if2513_end5383:
    unless_null $P5012, vivi_25145385
    nqp_get_sc_object $P5013, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5012, $P5013
  vivi_25145385:
    $P5014 = $P5012."ast"()
    $P5015 = $P5001."run_begin_block"($P5014)
    $P5016 = _lex_param_1."!make"($P5015)
    .return ($P5016) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<INIT>" :subid("cuid_268_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1962
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_527 
    .local pmc fb_tmp_528 
    .local pmc fb_tmp_529 
.annotate 'line', 1963
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback5386
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5002, $P5003
    set fb_tmp_527, $P5002
    repr_defined $I5001, fb_tmp_527
    unless $I5001 goto if2515_else5387 
    set $P5004, fb_tmp_527["$W"]
    set $P5006, $P5004
    goto if2515_end5388
  if2515_else5387:
    null $P5005
    set $P5006, $P5005
  if2515_end5388:
    unless_null $P5006, vivi_25165389
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_25165389:
    unless_null $P5006, vivi_25175390
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_25175390:
    set $P5001, $P5006
  fallback5386:
    $P5009 = $P5001."cur_lexpad"()
    unless_null _lex_param_1, fallback5393
    nqp_get_sc_object $P5010, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5010
  fallback5393:
    set fb_tmp_528, _lex_param_1
    repr_defined $I5002, fb_tmp_528
    unless $I5002 goto if2518_else5391 
    set $P5011, fb_tmp_528["blorst"]
    set $P5013, $P5011
    goto if2518_end5392
  if2518_else5391:
    null $P5012
    set $P5013, $P5012
  if2518_end5392:
    unless_null $P5013, vivi_25195394
    nqp_get_sc_object $P5014, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5013, $P5014
  vivi_25195394:
    $P5015 = $P5013."ast"()
    $P5009."push"($P5015)
.annotate 'line', 1964
    nqp_get_sc_object $P5018, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5017, $P5018, "QAST"
    get_who $P5016, $P5017
    set fb_tmp_529, $P5016
    repr_defined $I5003, fb_tmp_529
    unless $I5003 goto if2520_else5395 
    set $P5019, fb_tmp_529["Stmts"]
    set $P5021, $P5019
    goto if2520_end5396
  if2520_else5395:
    null $P5020
    set $P5021, $P5020
  if2520_end5396:
    unless_null $P5021, vivi_25215397
    nqp_get_sc_object $P5022, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5021, $P5022
  vivi_25215397:
    $P5023 = $P5021."new"()
    $P5024 = _lex_param_1."!make"($P5023)
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<try>" :subid("cuid_269_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1967
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_530 
    .local pmc fb_tmp_531 
    .local pmc fb_tmp_532 
    .local pmc fb_tmp_533 
    .local pmc fb_tmp_534 
    .local pmc fb_tmp_535 
    .local pmc fb_tmp_536 
    .local pmc fb_tmp_537 
    .local pmc fb_tmp_538 
    .local pmc fb_tmp_539 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_5398
    .lex "RETURN", $P102
.annotate 'line', 1968
    unless_null _lex_param_1, fallback5402
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5002
  fallback5402:
    set fb_tmp_530, _lex_param_1
    repr_defined $I5001, fb_tmp_530
    unless $I5001 goto if2522_else5400 
    set $P5003, fb_tmp_530["blorst"]
    set $P5005, $P5003
    goto if2522_end5401
  if2522_else5400:
    null $P5004
    set $P5005, $P5004
  if2522_end5401:
    unless_null $P5005, vivi_25235403
    nqp_get_sc_object $P5006, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5005, $P5006
  vivi_25235403:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
    nqp_get_sc_object $P5010, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5009, $P5010, "QAST"
    get_who $P5008, $P5009
    set fb_tmp_531, $P5008
    repr_defined $I5003, fb_tmp_531
    unless $I5003 goto if2525_else5406 
    set $P5011, fb_tmp_531["Block"]
    set $P5013, $P5011
    goto if2525_end5407
  if2525_else5406:
    null $P5012
    set $P5013, $P5012
  if2525_end5407:
    unless_null $P5013, vivi_25265408
    nqp_get_sc_object $P5014, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5013, $P5014
  vivi_25265408:
    type_check $I5002, $P101, $P5013
    unless $I5002 goto if2524_end5405 
.annotate 'line', 1969
    set fb_tmp_532, $P101
    repr_defined $I5004, fb_tmp_532
    unless $I5004 goto if2529_else5413 
    set $P5015, fb_tmp_532["handlers"]
    set $P5017, $P5015
    goto if2529_end5414
  if2529_else5413:
    null $P5016
    set $P5017, $P5016
  if2529_end5414:
    unless_null $P5017, vivi_25305415
    nqp_get_sc_object $P5018, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5017, $P5018
  vivi_25305415:
    set $P5023, $P5017
    unless $P5017 goto if2528_end5412 
    set fb_tmp_533, $P101
    repr_defined $I5006, fb_tmp_533
    unless $I5006 goto if2531_else5416 
    set $P5019, fb_tmp_533["handlers"]
    set $P5021, $P5019
    goto if2531_end5417
  if2531_else5416:
    null $P5020
    set $P5021, $P5020
  if2531_end5417:
    unless_null $P5021, vivi_25325418
    nqp_get_sc_object $P5022, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5021, $P5022
  vivi_25325418:
    exists $I5005, $P5021["CATCH"]
    box $P5024, $I5005
    set $P5023, $P5024
  if2528_end5412:
    unless $P5023 goto if2527_else5409 
.annotate 'line', 1970
.annotate 'line', 1971
    _lex_param_1."!make"($P101)
    find_lex $P5025, "RETURN"
    $P5026 = $P5025(1)
    set $P5028, $P5026
    goto if2527_end5410
  if2527_else5409:
.annotate 'line', 1974
.annotate 'line', 1975
    $P5027 = $P101."blocktype"("immediate")
    set $P5028, $P5027
  if2527_end5410:
  if2524_end5405:
.annotate 'line', 1978
    nqp_get_sc_object $P5031, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5030, $P5031, "QAST"
    get_who $P5029, $P5030
    set fb_tmp_534, $P5029
    repr_defined $I5007, fb_tmp_534
    unless $I5007 goto if2533_else5419 
    set $P5032, fb_tmp_534["Op"]
    set $P5034, $P5032
    goto if2533_end5420
  if2533_else5419:
    null $P5033
    set $P5034, $P5033
  if2533_end5420:
    unless_null $P5034, vivi_25345421
    nqp_get_sc_object $P5035, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5034, $P5035
  vivi_25345421:
.annotate 'line', 1982
    nqp_get_sc_object $P5038, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5037, $P5038, "QAST"
    get_who $P5036, $P5037
    set fb_tmp_535, $P5036
    repr_defined $I5008, fb_tmp_535
    unless $I5008 goto if2535_else5422 
    set $P5039, fb_tmp_535["Stmts"]
    set $P5041, $P5039
    goto if2535_end5423
  if2535_else5422:
    null $P5040
    set $P5041, $P5040
  if2535_end5423:
    unless_null $P5041, vivi_25365424
    nqp_get_sc_object $P5042, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5041, $P5042
  vivi_25365424:
.annotate 'line', 1983
    nqp_get_sc_object $P5045, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5044, $P5045, "QAST"
    get_who $P5043, $P5044
    set fb_tmp_536, $P5043
    repr_defined $I5009, fb_tmp_536
    unless $I5009 goto if2537_else5425 
    set $P5046, fb_tmp_536["Op"]
    set $P5048, $P5046
    goto if2537_end5426
  if2537_else5425:
    null $P5047
    set $P5048, $P5047
  if2537_end5426:
    unless_null $P5048, vivi_25385427
    nqp_get_sc_object $P5049, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5048, $P5049
  vivi_25385427:
.annotate 'line', 1985
    nqp_get_sc_object $P5052, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5051, $P5052, "QAST"
    get_who $P5050, $P5051
    set fb_tmp_537, $P5050
    repr_defined $I5010, fb_tmp_537
    unless $I5010 goto if2539_else5428 
    set $P5053, fb_tmp_537["Op"]
    set $P5055, $P5053
    goto if2539_end5429
  if2539_else5428:
    null $P5054
    set $P5055, $P5054
  if2539_end5429:
    unless_null $P5055, vivi_25405430
    nqp_get_sc_object $P5056, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5055, $P5056
  vivi_25405430:
    $P5057 = $P5055."new"("exception" :named("op"))
.annotate 'line', 1986
    nqp_get_sc_object $P5060, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5059, $P5060, "QAST"
    get_who $P5058, $P5059
    set fb_tmp_538, $P5058
    repr_defined $I5011, fb_tmp_538
    unless $I5011 goto if2541_else5431 
    set $P5061, fb_tmp_538["SVal"]
    set $P5063, $P5061
    goto if2541_end5432
  if2541_else5431:
    null $P5062
    set $P5063, $P5062
  if2541_end5432:
    unless_null $P5063, vivi_25425433
    nqp_get_sc_object $P5064, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5063, $P5064
  vivi_25425433:
    $P5065 = $P5063."new"("handled" :named("value"))
.annotate 'line', 1987
    nqp_get_sc_object $P5068, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5067, $P5068, "QAST"
    get_who $P5066, $P5067
    set fb_tmp_539, $P5066
    repr_defined $I5012, fb_tmp_539
    unless $I5012 goto if2543_else5434 
    set $P5069, fb_tmp_539["IVal"]
    set $P5071, $P5069
    goto if2543_end5435
  if2543_else5434:
    null $P5070
    set $P5071, $P5070
  if2543_end5435:
    unless_null $P5071, vivi_25445436
    nqp_get_sc_object $P5072, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5071, $P5072
  vivi_25445436:
    $P5073 = $P5071."new"(1 :named("value"))
    $P5074 = $P5048."new"($P5057, $P5065, $P5073, "bindkey_i" :named("op"))
.annotate 'line', 1989
    $P5075 = "&default_for"("$")
    $P5076 = $P5041."new"($P5074, $P5075)
    $P5077 = $P5034."new"($P101, "CATCH", $P5076, "handle" :named("op"))
    $P5078 = _lex_param_1."!make"($P5077)
    goto lexotic_5399
  lexotic_5398:
    .get_results ($P5078)
  lexotic_5399:
    .return ($P5078) 
.end
.HLL "nqp"
.namespace []
.sub "blorst" :subid("cuid_270_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1993
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_540 
    .local pmc fb_tmp_541 
    .local pmc fb_tmp_542 
.annotate 'line', 1994
    unless_null _lex_param_1, fallback5441
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback5441:
    set fb_tmp_540, _lex_param_1
    repr_defined $I5001, fb_tmp_540
    unless $I5001 goto if2546_else5439 
    set $P5002, fb_tmp_540["block"]
    set $P5004, $P5002
    goto if2546_end5440
  if2546_else5439:
    null $P5003
    set $P5004, $P5003
  if2546_end5440:
    unless_null $P5004, vivi_25475442
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_25475442:
    unless $P5004 goto if2545_else5437 
.annotate 'line', 1995
    unless_null _lex_param_1, fallback5445
    nqp_get_sc_object $P5006, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5006
  fallback5445:
    set fb_tmp_541, _lex_param_1
    repr_defined $I5002, fb_tmp_541
    unless $I5002 goto if2548_else5443 
    set $P5007, fb_tmp_541["block"]
    set $P5009, $P5007
    goto if2548_end5444
  if2548_else5443:
    null $P5008
    set $P5009, $P5008
  if2548_end5444:
    unless_null $P5009, vivi_25495446
    nqp_get_sc_object $P5010, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5009, $P5010
  vivi_25495446:
    $P5011 = $P5009."ast"()
    $P5012 = "&block_immediate"($P5011)
    set $P5019, $P5012
    goto if2545_end5438
  if2545_else5437:
.annotate 'line', 1996
    unless_null _lex_param_1, fallback5449
    nqp_get_sc_object $P5013, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5013
  fallback5449:
    set fb_tmp_542, _lex_param_1
    repr_defined $I5003, fb_tmp_542
    unless $I5003 goto if2550_else5447 
    set $P5014, fb_tmp_542["statement"]
    set $P5016, $P5014
    goto if2550_end5448
  if2550_else5447:
    null $P5015
    set $P5016, $P5015
  if2550_end5448:
    unless_null $P5016, vivi_25515450
    nqp_get_sc_object $P5017, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5016, $P5017
  vivi_25515450:
    $P5018 = $P5016."ast"()
    set $P5019, $P5018
  if2545_end5438:
    $P5020 = _lex_param_1."!make"($P5019)
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond:sym<if>" :subid("cuid_271_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2001
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_543 
    unless_null _lex_param_1, fallback5453
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback5453:
    set fb_tmp_543, _lex_param_1
    repr_defined $I5001, fb_tmp_543
    unless $I5001 goto if2552_else5451 
    set $P5002, fb_tmp_543["cond"]
    set $P5004, $P5002
    goto if2552_end5452
  if2552_else5451:
    null $P5003
    set $P5004, $P5003
  if2552_end5452:
    unless_null $P5004, vivi_25535454
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_25535454:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond:sym<unless>" :subid("cuid_272_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2002
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_544 
    unless_null _lex_param_1, fallback5457
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback5457:
    set fb_tmp_544, _lex_param_1
    repr_defined $I5001, fb_tmp_544
    unless $I5001 goto if2554_else5455 
    set $P5002, fb_tmp_544["cond"]
    set $P5004, $P5002
    goto if2554_end5456
  if2554_else5455:
    null $P5003
    set $P5004, $P5003
  if2554_end5456:
    unless_null $P5004, vivi_25555458
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_25555458:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<while>" :subid("cuid_273_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2004
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_545 
    unless_null _lex_param_1, fallback5461
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback5461:
    set fb_tmp_545, _lex_param_1
    repr_defined $I5001, fb_tmp_545
    unless $I5001 goto if2556_else5459 
    set $P5002, fb_tmp_545["cond"]
    set $P5004, $P5002
    goto if2556_end5460
  if2556_else5459:
    null $P5003
    set $P5004, $P5003
  if2556_end5460:
    unless_null $P5004, vivi_25575462
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_25575462:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<until>" :subid("cuid_274_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2005
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_546 
    unless_null _lex_param_1, fallback5465
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback5465:
    set fb_tmp_546, _lex_param_1
    repr_defined $I5001, fb_tmp_546
    unless $I5001 goto if2558_else5463 
    set $P5002, fb_tmp_546["cond"]
    set $P5004, $P5002
    goto if2558_end5464
  if2558_else5463:
    null $P5003
    set $P5004, $P5003
  if2558_end5464:
    unless_null $P5004, vivi_25595466
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_25595466:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<fatarrow>" :subid("cuid_275_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2009
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_547 
    unless_null _lex_param_1, fallback5469
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback5469:
    set fb_tmp_547, _lex_param_1
    repr_defined $I5001, fb_tmp_547
    unless $I5001 goto if2560_else5467 
    set $P5002, fb_tmp_547["fatarrow"]
    set $P5004, $P5002
    goto if2560_end5468
  if2560_else5467:
    null $P5003
    set $P5004, $P5003
  if2560_end5468:
    unless_null $P5004, vivi_25615470
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_25615470:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<colonpair>" :subid("cuid_276_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2010
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_548 
    unless_null _lex_param_1, fallback5473
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback5473:
    set fb_tmp_548, _lex_param_1
    repr_defined $I5001, fb_tmp_548
    unless $I5001 goto if2562_else5471 
    set $P5002, fb_tmp_548["colonpair"]
    set $P5004, $P5002
    goto if2562_end5472
  if2562_else5471:
    null $P5003
    set $P5004, $P5003
  if2562_end5472:
    unless_null $P5004, vivi_25635474
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_25635474:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<variable>" :subid("cuid_277_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2011
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_549 
    unless_null _lex_param_1, fallback5477
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback5477:
    set fb_tmp_549, _lex_param_1
    repr_defined $I5001, fb_tmp_549
    unless $I5001 goto if2564_else5475 
    set $P5002, fb_tmp_549["variable"]
    set $P5004, $P5002
    goto if2564_end5476
  if2564_else5475:
    null $P5003
    set $P5004, $P5003
  if2564_end5476:
    unless_null $P5004, vivi_25655478
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_25655478:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<package_declarator>" :subid("cuid_278_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2012
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_550 
    unless_null _lex_param_1, fallback5481
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback5481:
    set fb_tmp_550, _lex_param_1
    repr_defined $I5001, fb_tmp_550
    unless $I5001 goto if2566_else5479 
    set $P5002, fb_tmp_550["package_declarator"]
    set $P5004, $P5002
    goto if2566_end5480
  if2566_else5479:
    null $P5003
    set $P5004, $P5003
  if2566_end5480:
    unless_null $P5004, vivi_25675482
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_25675482:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<scope_declarator>" :subid("cuid_279_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2013
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_551 
    unless_null _lex_param_1, fallback5485
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback5485:
    set fb_tmp_551, _lex_param_1
    repr_defined $I5001, fb_tmp_551
    unless $I5001 goto if2568_else5483 
    set $P5002, fb_tmp_551["scope_declarator"]
    set $P5004, $P5002
    goto if2568_end5484
  if2568_else5483:
    null $P5003
    set $P5004, $P5003
  if2568_end5484:
    unless_null $P5004, vivi_25695486
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_25695486:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<routine_declarator>" :subid("cuid_280_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2014
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_552 
    unless_null _lex_param_1, fallback5489
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback5489:
    set fb_tmp_552, _lex_param_1
    repr_defined $I5001, fb_tmp_552
    unless $I5001 goto if2570_else5487 
    set $P5002, fb_tmp_552["routine_declarator"]
    set $P5004, $P5002
    goto if2570_end5488
  if2570_else5487:
    null $P5003
    set $P5004, $P5003
  if2570_end5488:
    unless_null $P5004, vivi_25715490
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_25715490:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<regex_declarator>" :subid("cuid_281_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2015
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_553 
    unless_null _lex_param_1, fallback5493
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback5493:
    set fb_tmp_553, _lex_param_1
    repr_defined $I5001, fb_tmp_553
    unless $I5001 goto if2572_else5491 
    set $P5002, fb_tmp_553["regex_declarator"]
    set $P5004, $P5002
    goto if2572_end5492
  if2572_else5491:
    null $P5003
    set $P5004, $P5003
  if2572_end5492:
    unless_null $P5004, vivi_25735494
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_25735494:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<statement_prefix>" :subid("cuid_282_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2016
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_554 
    unless_null _lex_param_1, fallback5497
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback5497:
    set fb_tmp_554, _lex_param_1
    repr_defined $I5001, fb_tmp_554
    unless $I5001 goto if2574_else5495 
    set $P5002, fb_tmp_554["statement_prefix"]
    set $P5004, $P5002
    goto if2574_end5496
  if2574_else5495:
    null $P5003
    set $P5004, $P5003
  if2574_end5496:
    unless_null $P5004, vivi_25755498
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_25755498:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<lambda>" :subid("cuid_283_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2017
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_555 
    .local pmc fb_tmp_556 
.annotate 'line', 2018
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5002, $P5003, "QAST"
    get_who $P5001, $P5002
    set fb_tmp_555, $P5001
    repr_defined $I5001, fb_tmp_555
    unless $I5001 goto if2576_else5499 
    set $P5004, fb_tmp_555["Op"]
    set $P5006, $P5004
    goto if2576_end5500
  if2576_else5499:
    null $P5005
    set $P5006, $P5005
  if2576_end5500:
    unless_null $P5006, vivi_25775501
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_25775501:
    unless_null _lex_param_1, fallback5504
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5008
  fallback5504:
    set fb_tmp_556, _lex_param_1
    repr_defined $I5002, fb_tmp_556
    unless $I5002 goto if2578_else5502 
    set $P5009, fb_tmp_556["pblock"]
    set $P5011, $P5009
    goto if2578_end5503
  if2578_else5502:
    null $P5010
    set $P5011, $P5010
  if2578_end5503:
    unless_null $P5011, vivi_25795505
    nqp_get_sc_object $P5012, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5011, $P5012
  vivi_25795505:
    $P5013 = $P5011."ast"()
    $P5014 = $P5006."new"($P5013, "takeclosure" :named("op"))
    $P5015 = _lex_param_1."!make"($P5014)
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "fatarrow" :subid("cuid_284_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2021
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_557 
    .local pmc fb_tmp_558 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
.annotate 'line', 2022
    unless_null _lex_param_1, fallback5508
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5002
  fallback5508:
    set fb_tmp_557, _lex_param_1
    repr_defined $I5001, fb_tmp_557
    unless $I5001 goto if2580_else5506 
    set $P5003, fb_tmp_557["val"]
    set $P5005, $P5003
    goto if2580_end5507
  if2580_else5506:
    null $P5004
    set $P5005, $P5004
  if2580_end5507:
    unless_null $P5005, vivi_25815509
    nqp_get_sc_object $P5006, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5005, $P5006
  vivi_25815509:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 2023
    unless_null _lex_param_1, fallback5512
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5008
  fallback5512:
    set fb_tmp_558, _lex_param_1
    repr_defined $I5002, fb_tmp_558
    unless $I5002 goto if2582_else5510 
    set $P5009, fb_tmp_558["key"]
    set $P5011, $P5009
    goto if2582_end5511
  if2582_else5510:
    null $P5010
    set $P5011, $P5010
  if2582_end5511:
    unless_null $P5011, vivi_25835513
    nqp_get_sc_object $P5012, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5011, $P5012
  vivi_25835513:
    $P5013 = $P5011."Str"()
    $P101."named"($P5013)
.annotate 'line', 2024
    $P5014 = _lex_param_1."!make"($P101)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "colonpair" :subid("cuid_285_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2027
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5031 = 'cuid_453_1360432459.413' 
    capture_lex $P5031 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_559 
    .local pmc fb_tmp_560 
    .local pmc fb_tmp_561 
    .local pmc fb_tmp_562 
    .local pmc fb_tmp_563 
    unless_null _lex_param_1, fallback5518
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback5518:
    set fb_tmp_559, _lex_param_1
    repr_defined $I5001, fb_tmp_559
    unless $I5001 goto if2585_else5516 
    set $P5002, fb_tmp_559["variable"]
    set $P5004, $P5002
    goto if2585_end5517
  if2585_else5516:
    null $P5003
    set $P5004, $P5003
  if2585_end5517:
    unless_null $P5004, vivi_25865519
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_25865519:
    unless $P5004 goto if2584_else5514 
.annotate 'line', 2028
.annotate 'line', 2029
    unless_null _lex_param_1, fallback5522
    nqp_get_sc_object $P5006, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5006
  fallback5522:
    set fb_tmp_560, _lex_param_1
    repr_defined $I5002, fb_tmp_560
    unless $I5002 goto if2587_else5520 
    set $P5007, fb_tmp_560["variable"]
    set $P5009, $P5007
    goto if2587_end5521
  if2587_else5520:
    null $P5008
    set $P5009, $P5008
  if2587_end5521:
    unless_null $P5009, vivi_25885523
    nqp_get_sc_object $P5010, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5009, $P5010
  vivi_25885523:
    $P5011 = $P5009."ast"()
    unless_null _lex_param_1, fallback5528
    nqp_get_sc_object $P5012, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5012
  fallback5528:
    set fb_tmp_562, _lex_param_1
    repr_defined $I5004, fb_tmp_562
    unless $I5004 goto if2590_else5526 
    set $P5013, fb_tmp_562["variable"]
    set $P5015, $P5013
    goto if2590_end5527
  if2590_else5526:
    null $P5014
    set $P5015, $P5014
  if2590_end5527:
    unless_null $P5015, vivi_25915529
    nqp_get_sc_object $P5016, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5015, $P5016
  vivi_25915529:
    set fb_tmp_561, $P5015
    repr_defined $I5003, fb_tmp_561
    unless $I5003 goto if2589_else5524 
    set $P5017, fb_tmp_561["desigilname"]
    set $P5019, $P5017
    goto if2589_end5525
  if2589_else5524:
    null $P5018
    set $P5019, $P5018
  if2589_end5525:
    unless_null $P5019, vivi_25925530
    nqp_get_sc_object $P5020, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5019, $P5020
  vivi_25925530:
    set $S5001, $P5019
    $P5011."named"($S5001)
.annotate 'line', 2030
    unless_null _lex_param_1, fallback5533
    nqp_get_sc_object $P5021, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5021
  fallback5533:
    set fb_tmp_563, _lex_param_1
    repr_defined $I5005, fb_tmp_563
    unless $I5005 goto if2593_else5531 
    set $P5022, fb_tmp_563["variable"]
    set $P5024, $P5022
    goto if2593_end5532
  if2593_else5531:
    null $P5023
    set $P5024, $P5023
  if2593_end5532:
    unless_null $P5024, vivi_25945534
    nqp_get_sc_object $P5025, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5024, $P5025
  vivi_25945534:
    $P5026 = $P5024."ast"()
    $P5027 = _lex_param_1."!make"($P5026)
    set $P5030, $P5027
    goto if2584_end5515
  if2584_else5514:
    .const 'Sub' $P5028 = 'cuid_453_1360432459.413' 
    capture_lex $P5028
    $P5029 = $P5028()
    set $P5030, $P5029
  if2584_end5515:
    .return ($P5030) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_453_1360432459.413") :anon :lex :outer("cuid_285_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2031
    .lex "$past", $P101 
    .local pmc fb_tmp_564 
    .local pmc fb_tmp_565 
    .local pmc fb_tmp_566 
    .local pmc fb_tmp_567 
    .local pmc fb_tmp_568 
    .local pmc fb_tmp_569 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    find_lex $P5002, "$/"
    unless_null $P5002, fallback5539
    nqp_get_sc_object $P5003, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5002, $P5003
  fallback5539:
    set fb_tmp_564, $P5002
    repr_defined $I5001, fb_tmp_564
    unless $I5001 goto if2596_else5537 
    set $P5004, fb_tmp_564["circumfix"]
    set $P5006, $P5004
    goto if2596_end5538
  if2596_else5537:
    null $P5005
    set $P5006, $P5005
  if2596_end5538:
    unless_null $P5006, vivi_25975540
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_25975540:
    unless $P5006 goto if2595_else5535 
.annotate 'line', 2033
    find_lex $P5008, "$/"
    unless_null $P5008, fallback5545
    nqp_get_sc_object $P5009, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5008, $P5009
  fallback5545:
    set fb_tmp_566, $P5008
    repr_defined $I5003, fb_tmp_566
    unless $I5003 goto if2599_else5543 
    set $P5010, fb_tmp_566["circumfix"]
    set $P5012, $P5010
    goto if2599_end5544
  if2599_else5543:
    null $P5011
    set $P5012, $P5011
  if2599_end5544:
    unless_null $P5012, vivi_26005546
    nqp_get_sc_object $P5013, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5012, $P5013
  vivi_26005546:
    set fb_tmp_565, $P5012
    repr_defined $I5002, fb_tmp_565
    unless $I5002 goto if2598_else5541 
    set $P5014, fb_tmp_565[0]
    set $P5016, $P5014
    goto if2598_end5542
  if2598_else5541:
    null $P5015
    set $P5016, $P5015
  if2598_end5542:
    unless_null $P5016, vivi_26015547
    nqp_get_sc_object $P5017, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5016, $P5017
  vivi_26015547:
    $P5018 = $P5016."ast"()
    set $P5033, $P5018
    goto if2595_end5536
  if2595_else5535:
.annotate 'line', 2034
    nqp_get_sc_object $P5021, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5020, $P5021, "QAST"
    get_who $P5019, $P5020
    set fb_tmp_567, $P5019
    repr_defined $I5004, fb_tmp_567
    unless $I5004 goto if2602_else5548 
    set $P5022, fb_tmp_567["IVal"]
    set $P5024, $P5022
    goto if2602_end5549
  if2602_else5548:
    null $P5023
    set $P5024, $P5023
  if2602_end5549:
    unless_null $P5024, vivi_26035550
    nqp_get_sc_object $P5025, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5024, $P5025
  vivi_26035550:
    find_lex $P5026, "$/"
    unless_null $P5026, fallback5553
    nqp_get_sc_object $P5027, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5026, $P5027
  fallback5553:
    set fb_tmp_568, $P5026
    repr_defined $I5006, fb_tmp_568
    unless $I5006 goto if2604_else5551 
    set $P5028, fb_tmp_568["not"]
    set $P5030, $P5028
    goto if2604_end5552
  if2604_else5551:
    null $P5029
    set $P5030, $P5029
  if2604_end5552:
    unless_null $P5030, vivi_26055554
    nqp_get_sc_object $P5031, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5030, $P5031
  vivi_26055554:
    isfalse $I5005, $P5030
    $P5032 = $P5024."new"($I5005 :named("value"))
    set $P5033, $P5032
  if2595_end5536:
    set $P101, $P5033
.annotate 'line', 2035
    find_lex $P5034, "$/"
    unless_null $P5034, fallback5557
    nqp_get_sc_object $P5035, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5034, $P5035
  fallback5557:
    set fb_tmp_569, $P5034
    repr_defined $I5007, fb_tmp_569
    unless $I5007 goto if2606_else5555 
    set $P5036, fb_tmp_569["identifier"]
    set $P5038, $P5036
    goto if2606_end5556
  if2606_else5555:
    null $P5037
    set $P5038, $P5037
  if2606_end5556:
    unless_null $P5038, vivi_26075558
    nqp_get_sc_object $P5039, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5038, $P5039
  vivi_26075558:
    set $S5001, $P5038
    $P101."named"($S5001)
.annotate 'line', 2036
    find_dynamic_lex $P5040, "$/"
    $P5041 = $P5040."!make"($P101)
    .return ($P5041) 
.end
.HLL "nqp"
.namespace []
.sub "variable" :subid("cuid_286_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2040
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5026 = 'cuid_455_1360432459.413' 
    capture_lex $P5026 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_570 
    .local pmc fb_tmp_571 
    .local pmc fb_tmp_572 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    unless_null _lex_param_1, fallback5563
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5002
  fallback5563:
    set fb_tmp_570, _lex_param_1
    repr_defined $I5001, fb_tmp_570
    unless $I5001 goto if2609_else5561 
    set $P5003, fb_tmp_570["postcircumfix"]
    set $P5005, $P5003
    goto if2609_end5562
  if2609_else5561:
    null $P5004
    set $P5005, $P5004
  if2609_end5562:
    unless_null $P5005, vivi_26105564
    nqp_get_sc_object $P5006, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5005, $P5006
  vivi_26105564:
    unless $P5005 goto if2608_else5559 
.annotate 'line', 2042
.annotate 'line', 2043
    unless_null _lex_param_1, fallback5567
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5007
  fallback5567:
    set fb_tmp_571, _lex_param_1
    repr_defined $I5002, fb_tmp_571
    unless $I5002 goto if2611_else5565 
    set $P5008, fb_tmp_571["postcircumfix"]
    set $P5010, $P5008
    goto if2611_end5566
  if2611_else5565:
    null $P5009
    set $P5010, $P5009
  if2611_end5566:
    unless_null $P5010, vivi_26125568
    nqp_get_sc_object $P5011, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5010, $P5011
  vivi_26125568:
    $P5012 = $P5010."ast"()
    set $P101, $P5012
.annotate 'line', 2044
    nqp_get_sc_object $P5015, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5014, $P5015, "QAST"
    get_who $P5013, $P5014
    set fb_tmp_572, $P5013
    repr_defined $I5003, fb_tmp_572
    unless $I5003 goto if2613_else5569 
    set $P5016, fb_tmp_572["VarWithFallback"]
    set $P5018, $P5016
    goto if2613_end5570
  if2613_else5569:
    null $P5017
    set $P5018, $P5017
  if2613_end5570:
    unless_null $P5018, vivi_26145571
    nqp_get_sc_object $P5019, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5018, $P5019
  vivi_26145571:
.annotate 'line', 2045
    $P5020 = "&default_for"("$")
    $P5021 = $P5018."new"("$/" :named("name"), "lexical" :named("scope"), $P5020 :named("fallback"))
    $P5022 = $P101."unshift"($P5021)
    goto if2608_end5560
  if2608_else5559:
    .const 'Sub' $P5023 = 'cuid_455_1360432459.413' 
    capture_lex $P5023
    $P5024 = $P5023()
  if2608_end5560:
.annotate 'line', 2126
    $P5025 = _lex_param_1."!make"($P101)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_455_1360432459.413") :anon :lex :outer("cuid_286_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2048
    .const 'Sub' $P5085 = 'cuid_454_1360432459.413' 
    capture_lex $P5085 
    .const 'Sub' $P5085 = 'cuid_458_1360432459.413' 
    capture_lex $P5085 
    .const 'Sub' $P5085 = 'cuid_459_1360432459.413' 
    capture_lex $P5085 
    .const 'Sub' $P5085 = 'cuid_460_1360432459.413' 
    capture_lex $P5085 
    .lex "@name", $P101 
    .local pmc fb_tmp_573 
    .local pmc fb_tmp_574 
    .local pmc fb_tmp_575 
    .local pmc fb_tmp_576 
    .local pmc fb_tmp_583 
    .local pmc fb_tmp_584 
    .local pmc fb_tmp_596 
    .local pmc fb_tmp_601 
    .local pmc fb_tmp_602 
    .local pmc fb_tmp_603 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
.annotate 'line', 2049
    nqp_get_sc_object $P5004, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5003, $P5004, "NQP"
    get_who $P5002, $P5003
    set fb_tmp_573, $P5002
    repr_defined $I5001, fb_tmp_573
    unless $I5001 goto if2615_else5572 
    set $P5005, fb_tmp_573["Compiler"]
    set $P5007, $P5005
    goto if2615_end5573
  if2615_else5572:
    null $P5006
    set $P5007, $P5006
  if2615_end5573:
    unless_null $P5007, vivi_26165574
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5007, $P5008
  vivi_26165574:
    find_lex $P5009, "$/"
    set $S5001, $P5009
    $P5010 = $P5007."parse_name"($S5001)
    set $P101, $P5010
    set $N5001, $P101
    set $N5002, 1
    isgt $I5002, $N5001, $N5002
    unless $I5002 goto if2617_else5575 
.annotate 'line', 2050
    find_lex $P5011, "$/"
    unless_null $P5011, fallback5581
    nqp_get_sc_object $P5012, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5011, $P5012
  fallback5581:
    set fb_tmp_574, $P5011
    repr_defined $I5003, fb_tmp_574
    unless $I5003 goto if2619_else5579 
    set $P5013, fb_tmp_574["twigil"]
    set $P5015, $P5013
    goto if2619_end5580
  if2619_else5579:
    null $P5014
    set $P5015, $P5014
  if2619_end5580:
    unless_null $P5015, vivi_26205582
    nqp_get_sc_object $P5016, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5015, $P5016
  vivi_26205582:
    unless $P5015 goto if2618_end5578 
.annotate 'line', 2051
.annotate 'line', 2052
    find_lex $P5017, "$/"
    $P5018 = $P5017."CURSOR"()
    $P5019 = $P5018."panic"("Twigil not allowed on multi-part name")
  if2618_end5578:
.annotate 'line', 2054
    find_lex $P5020, "$/"
    $P5021 = "&lexical_package_lookup"($P101, $P5020)
    store_lex "$past", $P5021
    set $P5084, $P5021
    goto if2617_end5576
  if2617_else5575:
    find_lex $P5022, "$/"
    unless_null $P5022, fallback5589
    nqp_get_sc_object $P5023, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5022, $P5023
  fallback5589:
    set fb_tmp_576, $P5022
    repr_defined $I5006, fb_tmp_576
    unless $I5006 goto if2623_else5587 
    set $P5024, fb_tmp_576["twigil"]
    set $P5026, $P5024
    goto if2623_end5588
  if2623_else5587:
    null $P5025
    set $P5026, $P5025
  if2623_end5588:
    unless_null $P5026, vivi_26245590
    nqp_get_sc_object $P5027, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5026, $P5027
  vivi_26245590:
    set fb_tmp_575, $P5026
    repr_defined $I5005, fb_tmp_575
    unless $I5005 goto if2622_else5585 
    set $P5028, fb_tmp_575[0]
    set $P5030, $P5028
    goto if2622_end5586
  if2622_else5585:
    null $P5029
    set $P5030, $P5029
  if2622_end5586:
    unless_null $P5030, vivi_26255591
    nqp_get_sc_object $P5031, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5030, $P5031
  vivi_26255591:
    set $S5002, $P5030
    iseq $I5004, $S5002, "*"
    unless $I5004 goto if2621_else5583 
    .const 'Sub' $P5032 = 'cuid_454_1360432459.413' 
    capture_lex $P5032
    $P5033 = $P5032()
    set $P5083, $P5033
    goto if2621_end5584
  if2621_else5583:
    find_lex $P5034, "$/"
    unless_null $P5034, fallback5618
    nqp_get_sc_object $P5035, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5034, $P5035
  fallback5618:
    set fb_tmp_584, $P5034
    repr_defined $I5009, fb_tmp_584
    unless $I5009 goto if2640_else5616 
    set $P5036, fb_tmp_584["twigil"]
    set $P5038, $P5036
    goto if2640_end5617
  if2640_else5616:
    null $P5037
    set $P5038, $P5037
  if2640_end5617:
    unless_null $P5038, vivi_26415619
    nqp_get_sc_object $P5039, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5038, $P5039
  vivi_26415619:
    set fb_tmp_583, $P5038
    repr_defined $I5008, fb_tmp_583
    unless $I5008 goto if2639_else5614 
    set $P5040, fb_tmp_583[0]
    set $P5042, $P5040
    goto if2639_end5615
  if2639_else5614:
    null $P5041
    set $P5042, $P5041
  if2639_end5615:
    unless_null $P5042, vivi_26425620
    nqp_get_sc_object $P5043, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5042, $P5043
  vivi_26425620:
    set $S5003, $P5042
    iseq $I5007, $S5003, "!"
    unless $I5007 goto if2638_else5612 
    .const 'Sub' $P5044 = 'cuid_458_1360432459.413' 
    capture_lex $P5044
    $P5045 = $P5044()
    set $P5082, $P5045
    goto if2638_end5613
  if2638_else5612:
    find_lex $P5046, "$/"
    unless_null $P5046, fallback5684
    nqp_get_sc_object $P5047, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5046, $P5047
  fallback5684:
    set fb_tmp_596, $P5046
    repr_defined $I5010, fb_tmp_596
    unless $I5010 goto if2677_else5682 
    set $P5048, fb_tmp_596["semilist"]
    set $P5050, $P5048
    goto if2677_end5683
  if2677_else5682:
    null $P5049
    set $P5050, $P5049
  if2677_end5683:
    unless_null $P5050, vivi_26785685
    nqp_get_sc_object $P5051, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5050, $P5051
  vivi_26785685:
    unless $P5050 goto if2676_else5680 
    .const 'Sub' $P5052 = 'cuid_459_1360432459.413' 
    capture_lex $P5052
    $P5053 = $P5052()
    set $P5081, $P5053
    goto if2676_end5681
  if2676_else5680:
.annotate 'line', 2111
    find_dynamic_lex $P5054, "$*W"
    unless_null $P5054, fallback5707
    nqp_get_sc_object $P5056, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5055, $P5056
    set fb_tmp_601, $P5055
    repr_defined $I5011, fb_tmp_601
    unless $I5011 goto if2690_else5708 
    set $P5057, fb_tmp_601["$W"]
    set $P5059, $P5057
    goto if2690_end5709
  if2690_else5708:
    null $P5058
    set $P5059, $P5058
  if2690_end5709:
    unless_null $P5059, vivi_26915710
    nqp_get_sc_object $P5060, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5059, $P5060
  vivi_26915710:
    unless_null $P5059, vivi_26925711
    die "Contextual $*W not found"
    box $P5061, "Contextual $*W not found"
    set $P5059, $P5061
  vivi_26925711:
    set $P5054, $P5059
  fallback5707:
    set fb_tmp_602, $P101
    repr_defined $I5012, fb_tmp_602
    unless $I5012 goto if2693_else5712 
    set $P5062, fb_tmp_602[0]
    set $P5064, $P5062
    goto if2693_end5713
  if2693_else5712:
    null $P5063
    set $P5064, $P5063
  if2693_end5713:
    unless_null $P5064, vivi_26945714
    nqp_get_sc_object $P5065, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5064, $P5065
  vivi_26945714:
    set $S5004, $P5064
    $P5066 = $P5054."is_package"($S5004)
    unless $P5066 goto if2689_else5705 
.annotate 'line', 2112
    find_lex $P5067, "$/"
    $P5068 = "&lexical_package_lookup"($P101, $P5067)
    store_lex "$past", $P5068
.annotate 'line', 2113
    find_lex $P5069, "$past"
    find_lex $P5070, "$/"
    unless_null $P5070, fallback5717
    nqp_get_sc_object $P5071, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5070, $P5071
  fallback5717:
    set fb_tmp_603, $P5070
    repr_defined $I5013, fb_tmp_603
    unless $I5013 goto if2695_else5715 
    set $P5072, fb_tmp_603["sigil"]
    set $P5074, $P5072
    goto if2695_end5716
  if2695_else5715:
    null $P5073
    set $P5074, $P5073
  if2695_end5716:
    unless_null $P5074, vivi_26965718
    nqp_get_sc_object $P5075, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5074, $P5075
  vivi_26965718:
    $P5076 = "&default_for"($P5074)
    $P5077 = $P5069."fallback"($P5076)
    set $P5080, $P5077
    goto if2689_end5706
  if2689_else5705:
    .const 'Sub' $P5078 = 'cuid_460_1360432459.413' 
    capture_lex $P5078
    $P5079 = $P5078()
    set $P5080, $P5079
  if2689_end5706:
    set $P5081, $P5080
  if2676_end5681:
    set $P5082, $P5081
  if2638_end5613:
    set $P5083, $P5082
  if2621_end5584:
    set $P5084, $P5083
  if2617_end5576:
    .return ($P5084) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_454_1360432459.413") :anon :lex :outer("cuid_455_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2056
    .lex "$global_fallback", $P101 
    .local pmc fb_tmp_577 
    .local pmc fb_tmp_578 
    .local pmc fb_tmp_579 
    .local pmc fb_tmp_580 
    .local pmc fb_tmp_581 
    .local pmc fb_tmp_582 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
.annotate 'line', 2057
    nqp_get_sc_object $P5004, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5003, $P5004, "QAST"
    get_who $P5002, $P5003
    set fb_tmp_577, $P5002
    repr_defined $I5001, fb_tmp_577
    unless $I5001 goto if2626_else5592 
    set $P5005, fb_tmp_577["Op"]
    set $P5007, $P5005
    goto if2626_end5593
  if2626_else5592:
    null $P5006
    set $P5007, $P5006
  if2626_end5593:
    unless_null $P5007, vivi_26275594
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5007, $P5008
  vivi_26275594:
.annotate 'line', 2059
    new $P5009, 'ResizablePMCArray'
    box $P5010, "GLOBAL"
    push $P5009, $P5010
    find_lex $P5011, "$/"
    unless_null $P5011, fallback5597
    nqp_get_sc_object $P5012, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5011, $P5012
  fallback5597:
    set fb_tmp_578, $P5011
    repr_defined $I5002, fb_tmp_578
    unless $I5002 goto if2628_else5595 
    set $P5013, fb_tmp_578["sigil"]
    set $P5015, $P5013
    goto if2628_end5596
  if2628_else5595:
    null $P5014
    set $P5015, $P5014
  if2628_end5596:
    unless_null $P5015, vivi_26295598
    nqp_get_sc_object $P5016, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5015, $P5016
  vivi_26295598:
    set $S5002, $P5015
    find_lex $P5017, "$/"
    unless_null $P5017, fallback5601
    nqp_get_sc_object $P5018, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5017, $P5018
  fallback5601:
    set fb_tmp_579, $P5017
    repr_defined $I5003, fb_tmp_579
    unless $I5003 goto if2630_else5599 
    set $P5019, fb_tmp_579["desigilname"]
    set $P5021, $P5019
    goto if2630_end5600
  if2630_else5599:
    null $P5020
    set $P5021, $P5020
  if2630_end5600:
    unless_null $P5021, vivi_26315602
    nqp_get_sc_object $P5022, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5021, $P5022
  vivi_26315602:
    set $S5003, $P5021
    concat $S5001, $S5002, $S5003
    box $P5023, $S5001
    push $P5009, $P5023
    find_lex $P5024, "$/"
    $P5025 = "&lexical_package_lookup"($P5009, $P5024)
.annotate 'line', 2060
    nqp_get_sc_object $P5028, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5027, $P5028, "QAST"
    get_who $P5026, $P5027
    set fb_tmp_580, $P5026
    repr_defined $I5004, fb_tmp_580
    unless $I5004 goto if2632_else5603 
    set $P5029, fb_tmp_580["Op"]
    set $P5031, $P5029
    goto if2632_end5604
  if2632_else5603:
    null $P5030
    set $P5031, $P5030
  if2632_end5604:
    unless_null $P5031, vivi_26335605
    nqp_get_sc_object $P5032, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5031, $P5032
  vivi_26335605:
.annotate 'line', 2062
    nqp_get_sc_object $P5035, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5034, $P5035, "QAST"
    get_who $P5033, $P5034
    set fb_tmp_581, $P5033
    repr_defined $I5005, fb_tmp_581
    unless $I5005 goto if2634_else5606 
    set $P5036, fb_tmp_581["SVal"]
    set $P5038, $P5036
    goto if2634_end5607
  if2634_else5606:
    null $P5037
    set $P5038, $P5037
  if2634_end5607:
    unless_null $P5038, vivi_26355608
    nqp_get_sc_object $P5039, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5038, $P5039
  vivi_26355608:
    find_lex $P5040, "$/"
    set $S5006, $P5040
    concat $S5005, "Contextual ", $S5006
    concat $S5004, $S5005, " not found"
    $P5041 = $P5038."new"($S5004 :named("value"))
    $P5042 = $P5031."new"($P5041, "die_s" :named("op"))
    $P5043 = $P5007."new"($P5025, $P5042, "ifnull" :named("op"))
    set $P101, $P5043
.annotate 'line', 2064
    nqp_get_sc_object $P5046, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5045, $P5046, "QAST"
    get_who $P5044, $P5045
    set fb_tmp_582, $P5044
    repr_defined $I5006, fb_tmp_582
    unless $I5006 goto if2636_else5609 
    set $P5047, fb_tmp_582["VarWithFallback"]
    set $P5049, $P5047
    goto if2636_end5610
  if2636_else5609:
    null $P5048
    set $P5049, $P5048
  if2636_end5610:
    unless_null $P5049, vivi_26375611
    nqp_get_sc_object $P5050, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5049, $P5050
  vivi_26375611:
.annotate 'line', 2065
    find_lex $P5051, "@name"
    $P5052 = $P5051."pop"()
    set $S5007, $P5052
    $P5053 = $P5049."new"($S5007 :named("name"), "contextual" :named("scope"), $P101 :named("fallback"))
    store_lex "$past", $P5053
    .return ($P5053) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_458_1360432459.413") :anon :lex :outer("cuid_455_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2069
    .const 'Sub' $P5082 = 'cuid_457_1360432459.413' 
    capture_lex $P5082 
    .lex "$name", $P101 
    .lex "$ch", $P102 
    .local pmc fb_tmp_585 
    .local pmc fb_tmp_586 
    .local pmc fb_tmp_587 
    .local pmc fb_tmp_588 
    .local pmc fb_tmp_589 
    .local pmc fb_tmp_590 
    .local pmc fb_tmp_591 
    .local pmc fb_tmp_592 
    .local pmc fb_tmp_593 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
.annotate 'line', 2070
    find_lex $P5003, "@name"
    $P5004 = $P5003."pop"()
    set $S5001, $P5004
    box $P5005, $S5001
    set $P101, $P5005
    find_dynamic_lex $P5006, "$*PKGDECL"
    unless_null $P5006, fallback5623
    nqp_get_sc_object $P5008, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5007, $P5008
    set fb_tmp_585, $P5007
    repr_defined $I5002, fb_tmp_585
    unless $I5002 goto if2644_else5624 
    set $P5009, fb_tmp_585["$PKGDECL"]
    set $P5011, $P5009
    goto if2644_end5625
  if2644_else5624:
    null $P5010
    set $P5011, $P5010
  if2644_end5625:
    unless_null $P5011, vivi_26455626
    nqp_get_sc_object $P5012, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5011, $P5012
  vivi_26455626:
    unless_null $P5011, vivi_26465627
    die "Contextual $*PKGDECL not found"
    box $P5013, "Contextual $*PKGDECL not found"
    set $P5011, $P5013
  vivi_26465627:
    set $P5006, $P5011
  fallback5623:
    set $S5002, $P5006
    iseq $I5001, $S5002, "role"
    unless $I5001 goto if2643_else5621 
.annotate 'line', 2072
.annotate 'line', 2073
    nqp_get_sc_object $P5016, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5015, $P5016, "QAST"
    get_who $P5014, $P5015
    set fb_tmp_586, $P5014
    repr_defined $I5003, fb_tmp_586
    unless $I5003 goto if2647_else5628 
    set $P5017, fb_tmp_586["Var"]
    set $P5019, $P5017
    goto if2647_end5629
  if2647_else5628:
    null $P5018
    set $P5019, $P5018
  if2647_end5629:
    unless_null $P5019, vivi_26485630
    nqp_get_sc_object $P5020, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5019, $P5020
  vivi_26485630:
    $P5021 = $P5019."new"("$?CLASS" :named("name"), "lexical" :named("scope"))
    set $P102, $P5021
.annotate 'line', 2074
    find_dynamic_lex $P5022, "$*PACKAGE"
    unless_null $P5022, fallback5631
    nqp_get_sc_object $P5024, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5023, $P5024
    set fb_tmp_587, $P5023
    repr_defined $I5004, fb_tmp_587
    unless $I5004 goto if2649_else5632 
    set $P5025, fb_tmp_587["$PACKAGE"]
    set $P5027, $P5025
    goto if2649_end5633
  if2649_else5632:
    null $P5026
    set $P5027, $P5026
  if2649_end5633:
    unless_null $P5027, vivi_26505634
    nqp_get_sc_object $P5028, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5027, $P5028
  vivi_26505634:
    unless_null $P5027, vivi_26515635
    die "Contextual $*PACKAGE not found"
    box $P5029, "Contextual $*PACKAGE not found"
    set $P5027, $P5029
  vivi_26515635:
    set $P5022, $P5027
  fallback5631:
    $P5030 = $P102."set_compile_time_value"($P5022)
    goto if2643_end5622
  if2643_else5621:
.annotate 'line', 2076
.annotate 'line', 2077
    nqp_get_sc_object $P5033, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5032, $P5033, "QAST"
    get_who $P5031, $P5032
    set fb_tmp_588, $P5031
    repr_defined $I5005, fb_tmp_588
    unless $I5005 goto if2652_else5636 
    set $P5034, fb_tmp_588["WVal"]
    set $P5036, $P5034
    goto if2652_end5637
  if2652_else5636:
    null $P5035
    set $P5036, $P5035
  if2652_end5637:
    unless_null $P5036, vivi_26535638
    nqp_get_sc_object $P5037, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5036, $P5037
  vivi_26535638:
    find_dynamic_lex $P5038, "$*PACKAGE"
    unless_null $P5038, fallback5639
    nqp_get_sc_object $P5040, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5039, $P5040
    set fb_tmp_589, $P5039
    repr_defined $I5006, fb_tmp_589
    unless $I5006 goto if2654_else5640 
    set $P5041, fb_tmp_589["$PACKAGE"]
    set $P5043, $P5041
    goto if2654_end5641
  if2654_else5640:
    null $P5042
    set $P5043, $P5042
  if2654_end5641:
    unless_null $P5043, vivi_26555642
    nqp_get_sc_object $P5044, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5043, $P5044
  vivi_26555642:
    unless_null $P5043, vivi_26565643
    die "Contextual $*PACKAGE not found"
    box $P5045, "Contextual $*PACKAGE not found"
    set $P5043, $P5045
  vivi_26565643:
    set $P5038, $P5043
  fallback5639:
    $P5046 = $P5036."new"($P5038 :named("value"))
    set $P102, $P5046
  if2643_end5622:
.annotate 'line', 2079
    nqp_get_sc_object $P5049, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5048, $P5049, "QAST"
    get_who $P5047, $P5048
    set fb_tmp_590, $P5047
    repr_defined $I5007, fb_tmp_590
    unless $I5007 goto if2657_else5644 
    set $P5050, fb_tmp_590["Var"]
    set $P5052, $P5050
    goto if2657_end5645
  if2657_else5644:
    null $P5051
    set $P5052, $P5051
  if2657_end5645:
    unless_null $P5052, vivi_26585646
    nqp_get_sc_object $P5053, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5052, $P5053
  vivi_26585646:
.annotate 'line', 2081
    nqp_get_sc_object $P5056, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5055, $P5056, "QAST"
    get_who $P5054, $P5055
    set fb_tmp_591, $P5054
    repr_defined $I5008, fb_tmp_591
    unless $I5008 goto if2659_else5647 
    set $P5057, fb_tmp_591["Op"]
    set $P5059, $P5057
    goto if2659_end5648
  if2659_else5647:
    null $P5058
    set $P5059, $P5058
  if2659_end5648:
    unless_null $P5059, vivi_26605649
    nqp_get_sc_object $P5060, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5059, $P5060
  vivi_26605649:
.annotate 'line', 2082
    nqp_get_sc_object $P5063, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5062, $P5063, "QAST"
    get_who $P5061, $P5062
    set fb_tmp_592, $P5061
    repr_defined $I5009, fb_tmp_592
    unless $I5009 goto if2661_else5650 
    set $P5064, fb_tmp_592["Var"]
    set $P5066, $P5064
    goto if2661_end5651
  if2661_else5650:
    null $P5065
    set $P5066, $P5065
  if2661_end5651:
    unless_null $P5066, vivi_26625652
    nqp_get_sc_object $P5067, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5066, $P5067
  vivi_26625652:
    $P5068 = $P5066."new"("self" :named("name"), "lexical" :named("scope"))
    $P5069 = $P5059."new"($P5068, "decont" :named("op"))
    $P5070 = $P5052."new"($P5069, $P102, $P101 :named("name"), "attribute" :named("scope"))
    store_lex "$past", $P5070
    find_dynamic_lex $P5071, "$*IN_DECL"
    unless_null $P5071, fallback5655
    nqp_get_sc_object $P5073, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5072, $P5073
    set fb_tmp_593, $P5072
    repr_defined $I5010, fb_tmp_593
    unless $I5010 goto if2664_else5656 
    set $P5074, fb_tmp_593["$IN_DECL"]
    set $P5076, $P5074
    goto if2664_end5657
  if2664_else5656:
    null $P5075
    set $P5076, $P5075
  if2664_end5657:
    unless_null $P5076, vivi_26655658
    nqp_get_sc_object $P5077, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5076, $P5077
  vivi_26655658:
    unless_null $P5076, vivi_26665659
    die "Contextual $*IN_DECL not found"
    box $P5078, "Contextual $*IN_DECL not found"
    set $P5076, $P5078
  vivi_26665659:
    set $P5071, $P5076
  fallback5655:
    set $P5081, $P5071
    if $P5071 goto unless2663_end5654 
    .const 'Sub' $P5079 = 'cuid_457_1360432459.413' 
    capture_lex $P5079
    $P5080 = $P5079()
    set $P5081, $P5080
  unless2663_end5654:
    .return ($P5081) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_457_1360432459.413") :anon :lex :outer("cuid_458_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2087
    .const 'Sub' $P5036 = 'cuid_456_1360432459.413' 
    capture_lex $P5036 
    .lex "$attr", $P101 
    .local pmc fb_tmp_594 
    .local pmc fb_tmp_595 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
.annotate 'line', 2089
    find_dynamic_lex $P5006, "$*PACKAGE"
    unless_null $P5006, fallback5660
    nqp_get_sc_object $P5008, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5007, $P5008
    set fb_tmp_594, $P5007
    repr_defined $I5001, fb_tmp_594
    unless $I5001 goto if2667_else5661 
    set $P5009, fb_tmp_594["$PACKAGE"]
    set $P5011, $P5009
    goto if2667_end5662
  if2667_else5661:
    null $P5010
    set $P5011, $P5010
  if2667_end5662:
    unless_null $P5011, vivi_26685663
    nqp_get_sc_object $P5012, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5011, $P5012
  vivi_26685663:
    unless_null $P5011, vivi_26695664
    die "Contextual $*PACKAGE not found"
    box $P5013, "Contextual $*PACKAGE not found"
    set $P5011, $P5013
  vivi_26695664:
    set $P5006, $P5011
  fallback5660:
    get_how $P5005, $P5006
    find_dynamic_lex $P5014, "$*PACKAGE"
    unless_null $P5014, fallback5665
    nqp_get_sc_object $P5016, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5015, $P5016
    set fb_tmp_595, $P5015
    repr_defined $I5002, fb_tmp_595
    unless $I5002 goto if2670_else5666 
    set $P5017, fb_tmp_595["$PACKAGE"]
    set $P5019, $P5017
    goto if2670_end5667
  if2670_else5666:
    null $P5018
    set $P5019, $P5018
  if2670_end5667:
    unless_null $P5019, vivi_26715668
    nqp_get_sc_object $P5020, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5019, $P5020
  vivi_26715668:
    unless_null $P5019, vivi_26725669
    die "Contextual $*PACKAGE not found"
    box $P5021, "Contextual $*PACKAGE not found"
    set $P5019, $P5021
  vivi_26725669:
    set $P5014, $P5019
  fallback5665:
    $P5022 = $P5005."attributes"($P5014, 1 :named("local"))
    set $P5002, $P5022
    iter $P5004, $P5022
    new $P5024, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5024, for_handlers5672
    push_eh $P5024
  for_next5673:
    unless $P5004, for_done5675
    shift $P5025, $P5004
  for_redo5674:
    .const 'Sub' $P5023 = 'cuid_456_1360432459.413' 
    capture_lex $P5023
    $P5002 = $P5023($P5025)
    goto for_next5673
  for_handlers5672:
    .get_results ($P5024)
    pop_upto_eh $P5024
    getattribute $P5024, $P5024, 'type'
    eq $P5024, .CONTROL_LOOP_NEXT, for_next5673
    eq $P5024, .CONTROL_LOOP_REDO, for_redo5674
  for_done5675:
    pop_eh 
    defined $I5003, $P101
    unless $I5003 goto if2674_else5676 
.annotate 'line', 2095
    can $I5004, $P101, "type"
    box $P5030, $I5004
    set $P5029, $P5030
    unless $I5004 goto if2675_end5679 
.annotate 'line', 2096
.annotate 'line', 2097
    find_lex $P5026, "$past"
    $P5027 = $P101."type"()
    $P5028 = $P5026."returns"($P5027)
    set $P5029, $P5028
  if2675_end5679:
    set $P5035, $P5029
    goto if2674_end5677
  if2674_else5676:
.annotate 'line', 2100
.annotate 'line', 2101
    find_lex $P5031, "$/"
    $P5032 = $P5031."CURSOR"()
    find_lex $P5033, "$name"
    set $S5003, $P5033
    concat $S5002, "Attribute '", $S5003
    concat $S5001, $S5002, "' not declared"
    $P5034 = $P5032."panic"($S5001)
    set $P5035, $P5034
  if2674_end5677:
    .return ($P5035) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_456_1360432459.413") :anon :lex :outer("cuid_457_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2089
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 2090
    $P5001 = _lex_param_0."name"()
    set $S5001, $P5001
    find_lex $P5002, "$name"
    set $S5002, $P5002
    iseq $I5001, $S5001, $S5002
    set $I5002, $I5001
    unless $I5001 goto if2673_end5671 
    store_lex "$attr", _lex_param_0
    die 0, .CONTROL_LOOP_LAST
    set $I5002, 0
  if2673_end5671:
    .return ($I5002) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_459_1360432459.413") :anon :lex :outer("cuid_455_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2105
    .lex "$name", $P101 
    .local pmc fb_tmp_597 
    .local pmc fb_tmp_598 
    .local pmc fb_tmp_599 
    .local pmc fb_tmp_600 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    find_lex $P5002, "$/"
    unless_null $P5002, fallback5690
    nqp_get_sc_object $P5003, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5002, $P5003
  fallback5690:
    set fb_tmp_597, $P5002
    repr_defined $I5002, fb_tmp_597
    unless $I5002 goto if2680_else5688 
    set $P5004, fb_tmp_597["sigil"]
    set $P5006, $P5004
    goto if2680_end5689
  if2680_else5688:
    null $P5005
    set $P5006, $P5005
  if2680_end5689:
    unless_null $P5006, vivi_26815691
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_26815691:
    set $S5001, $P5006
    iseq $I5001, $S5001, "@"
    unless $I5001 goto if2679_else5686 
    set $S5004, "list"
    goto if2679_end5687
  if2679_else5686:
    find_lex $P5008, "$/"
    unless_null $P5008, fallback5696
    nqp_get_sc_object $P5009, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5008, $P5009
  fallback5696:
    set fb_tmp_598, $P5008
    repr_defined $I5004, fb_tmp_598
    unless $I5004 goto if2683_else5694 
    set $P5010, fb_tmp_598["sigil"]
    set $P5012, $P5010
    goto if2683_end5695
  if2683_else5694:
    null $P5011
    set $P5012, $P5011
  if2683_end5695:
    unless_null $P5012, vivi_26845697
    nqp_get_sc_object $P5013, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5012, $P5013
  vivi_26845697:
    set $S5002, $P5012
    iseq $I5003, $S5002, "%"
    unless $I5003 goto if2682_else5692 
    set $S5003, "hash"
    goto if2682_end5693
  if2682_else5692:
    set $S5003, "item"
  if2682_end5693:
    set $S5004, $S5003
  if2679_end5687:
    box $P5014, $S5004
    set $P101, $P5014
.annotate 'line', 2109
    nqp_get_sc_object $P5017, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5016, $P5017, "QAST"
    get_who $P5015, $P5016
    set fb_tmp_599, $P5015
    repr_defined $I5005, fb_tmp_599
    unless $I5005 goto if2685_else5698 
    set $P5018, fb_tmp_599["Op"]
    set $P5020, $P5018
    goto if2685_end5699
  if2685_else5698:
    null $P5019
    set $P5020, $P5019
  if2685_end5699:
    unless_null $P5020, vivi_26865700
    nqp_get_sc_object $P5021, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5020, $P5021
  vivi_26865700:
    find_lex $P5022, "$/"
    unless_null $P5022, fallback5703
    nqp_get_sc_object $P5023, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5022, $P5023
  fallback5703:
    set fb_tmp_600, $P5022
    repr_defined $I5006, fb_tmp_600
    unless $I5006 goto if2687_else5701 
    set $P5024, fb_tmp_600["semilist"]
    set $P5026, $P5024
    goto if2687_end5702
  if2687_else5701:
    null $P5025
    set $P5026, $P5025
  if2687_end5702:
    unless_null $P5026, vivi_26885704
    nqp_get_sc_object $P5027, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5026, $P5027
  vivi_26885704:
    $P5028 = $P5026."ast"()
    $P5029 = $P5020."new"($P5028, "callmethod" :named("op"), $P101 :named("name"))
    store_lex "$past", $P5029
    .return ($P5029) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_460_1360432459.413") :anon :lex :outer("cuid_455_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2115
    .lex "$name", $P101 
    .local pmc fb_tmp_604 
    .local pmc fb_tmp_605 
    .local pmc fb_tmp_606 
    .local pmc fb_tmp_607 
    .local pmc fb_tmp_608 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
.annotate 'line', 2116
    find_lex $P5002, "@name"
    $P5003 = $P5002."pop"()
    set $S5001, $P5003
    box $P5004, $S5001
    set $P101, $P5004
    find_dynamic_lex $P5005, "$*IN_DECL"
    unless_null $P5005, fallback5731
    nqp_get_sc_object $P5007, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5006, $P5007
    set fb_tmp_604, $P5006
    repr_defined $I5002, fb_tmp_604
    unless $I5002 goto if2703_else5732 
    set $P5008, fb_tmp_604["$IN_DECL"]
    set $P5010, $P5008
    goto if2703_end5733
  if2703_else5732:
    null $P5009
    set $P5010, $P5009
  if2703_end5733:
    unless_null $P5010, vivi_27045734
    nqp_get_sc_object $P5011, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5010, $P5011
  vivi_27045734:
    unless_null $P5010, vivi_27055735
    die "Contextual $*IN_DECL not found"
    box $P5012, "Contextual $*IN_DECL not found"
    set $P5010, $P5012
  vivi_27055735:
    set $P5005, $P5010
  fallback5731:
    set $S5002, $P5005
    iseq $I5001, $S5002, "variable"
    set $I5004, $I5001
    if $I5001 goto unless2702_end5730 
    set $S5003, $P101
    iseq $I5003, $S5003, "$_"
    set $I5004, $I5003
  unless2702_end5730:
    set $I5006, $I5004
    if $I5004 goto unless2701_end5728 
    set $S5004, $P101
    iseq $I5005, $S5004, "$/"
    set $I5006, $I5005
  unless2701_end5728:
    set $I5008, $I5006
    if $I5006 goto unless2700_end5726 
    set $S5005, $P101
    iseq $I5007, $S5005, "$!"
    set $I5008, $I5007
  unless2700_end5726:
    set $I5012, $I5008
    if $I5008 goto unless2699_end5724 
    find_lex $P5013, "$/"
    unless_null $P5013, fallback5740
    nqp_get_sc_object $P5014, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5013, $P5014
  fallback5740:
    set fb_tmp_606, $P5013
    repr_defined $I5011, fb_tmp_606
    unless $I5011 goto if2707_else5738 
    set $P5015, fb_tmp_606["twigil"]
    set $P5017, $P5015
    goto if2707_end5739
  if2707_else5738:
    null $P5016
    set $P5017, $P5016
  if2707_end5739:
    unless_null $P5017, vivi_27085741
    nqp_get_sc_object $P5018, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5017, $P5018
  vivi_27085741:
    set fb_tmp_605, $P5017
    repr_defined $I5010, fb_tmp_605
    unless $I5010 goto if2706_else5736 
    set $P5019, fb_tmp_605[0]
    set $P5021, $P5019
    goto if2706_end5737
  if2706_else5736:
    null $P5020
    set $P5021, $P5020
  if2706_end5737:
    unless_null $P5021, vivi_27095742
    nqp_get_sc_object $P5022, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5021, $P5022
  vivi_27095742:
    set $S5006, $P5021
    iseq $I5009, $S5006, "?"
    set $I5012, $I5009
  unless2699_end5724:
    box $P5033, $I5012
    set $P5032, $P5033
    if $I5012 goto unless2698_end5722 
.annotate 'line', 2118
    find_dynamic_lex $P5023, "$*W"
    unless_null $P5023, fallback5743
    nqp_get_sc_object $P5025, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5024, $P5025
    set fb_tmp_607, $P5024
    repr_defined $I5013, fb_tmp_607
    unless $I5013 goto if2710_else5744 
    set $P5026, fb_tmp_607["$W"]
    set $P5028, $P5026
    goto if2710_end5745
  if2710_else5744:
    null $P5027
    set $P5028, $P5027
  if2710_end5745:
    unless_null $P5028, vivi_27115746
    nqp_get_sc_object $P5029, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5028, $P5029
  vivi_27115746:
    unless_null $P5028, vivi_27125747
    die "Contextual $*W not found"
    box $P5030, "Contextual $*W not found"
    set $P5028, $P5030
  vivi_27125747:
    set $P5023, $P5028
  fallback5743:
    $P5031 = $P5023."is_lexical"($P101)
    set $P5032, $P5031
  unless2698_end5722:
    unless $P5032 goto if2697_else5719 
.annotate 'line', 2119
    nqp_get_sc_object $P5036, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5035, $P5036, "QAST"
    get_who $P5034, $P5035
    set fb_tmp_608, $P5034
    repr_defined $I5014, fb_tmp_608
    unless $I5014 goto if2713_else5748 
    set $P5037, fb_tmp_608["Var"]
    set $P5039, $P5037
    goto if2713_end5749
  if2713_else5748:
    null $P5038
    set $P5039, $P5038
  if2713_end5749:
    unless_null $P5039, vivi_27145750
    nqp_get_sc_object $P5040, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5039, $P5040
  vivi_27145750:
    $P5041 = $P5039."new"($P101 :named("name"), "lexical" :named("scope"))
    store_lex "$past", $P5041
    set $P5045, $P5041
    goto if2697_end5720
  if2697_else5719:
.annotate 'line', 2121
.annotate 'line', 2122
    find_lex $P5042, "$/"
    $P5043 = $P5042."CURSOR"()
    set $S5009, $P101
    concat $S5008, "Use of undeclared variable '", $S5009
    concat $S5007, $S5008, "'"
    $P5044 = $P5043."panic"($S5007)
    set $P5045, $P5044
  if2697_end5720:
    .return ($P5045) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<module>" :subid("cuid_287_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2129
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_609 
    unless_null _lex_param_1, fallback5753
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback5753:
    set fb_tmp_609, _lex_param_1
    repr_defined $I5001, fb_tmp_609
    unless $I5001 goto if2715_else5751 
    set $P5002, fb_tmp_609["package_def"]
    set $P5004, $P5002
    goto if2715_end5752
  if2715_else5751:
    null $P5003
    set $P5004, $P5003
  if2715_end5752:
    unless_null $P5004, vivi_27165754
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_27165754:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<knowhow>" :subid("cuid_288_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2130
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_610 
    unless_null _lex_param_1, fallback5757
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback5757:
    set fb_tmp_610, _lex_param_1
    repr_defined $I5001, fb_tmp_610
    unless $I5001 goto if2717_else5755 
    set $P5002, fb_tmp_610["package_def"]
    set $P5004, $P5002
    goto if2717_end5756
  if2717_else5755:
    null $P5003
    set $P5004, $P5003
  if2717_end5756:
    unless_null $P5004, vivi_27185758
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_27185758:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<class>" :subid("cuid_289_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2131
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_611 
    unless_null _lex_param_1, fallback5761
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback5761:
    set fb_tmp_611, _lex_param_1
    repr_defined $I5001, fb_tmp_611
    unless $I5001 goto if2719_else5759 
    set $P5002, fb_tmp_611["package_def"]
    set $P5004, $P5002
    goto if2719_end5760
  if2719_else5759:
    null $P5003
    set $P5004, $P5003
  if2719_end5760:
    unless_null $P5004, vivi_27205762
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_27205762:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<grammar>" :subid("cuid_290_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2132
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_612 
    unless_null _lex_param_1, fallback5765
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback5765:
    set fb_tmp_612, _lex_param_1
    repr_defined $I5001, fb_tmp_612
    unless $I5001 goto if2721_else5763 
    set $P5002, fb_tmp_612["package_def"]
    set $P5004, $P5002
    goto if2721_end5764
  if2721_else5763:
    null $P5003
    set $P5004, $P5003
  if2721_end5764:
    unless_null $P5004, vivi_27225766
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_27225766:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<role>" :subid("cuid_291_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2133
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_613 
    unless_null _lex_param_1, fallback5769
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback5769:
    set fb_tmp_613, _lex_param_1
    repr_defined $I5001, fb_tmp_613
    unless $I5001 goto if2723_else5767 
    set $P5002, fb_tmp_613["package_def"]
    set $P5004, $P5002
    goto if2723_end5768
  if2723_else5767:
    null $P5003
    set $P5004, $P5003
  if2723_end5768:
    unless_null $P5004, vivi_27245770
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_27245770:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<native>" :subid("cuid_292_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2134
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_614 
    unless_null _lex_param_1, fallback5773
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback5773:
    set fb_tmp_614, _lex_param_1
    repr_defined $I5001, fb_tmp_614
    unless $I5001 goto if2725_else5771 
    set $P5002, fb_tmp_614["package_def"]
    set $P5004, $P5002
    goto if2725_end5772
  if2725_else5771:
    null $P5003
    set $P5004, $P5003
  if2725_end5772:
    unless_null $P5004, vivi_27265774
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_27265774:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<stub>" :subid("cuid_293_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2136
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$HOW", $P101 
    .lex "$PACKAGE", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_615 
    .local pmc fb_tmp_616 
    .local pmc fb_tmp_617 
    .local pmc fb_tmp_618 
    .local pmc fb_tmp_619 
    .local pmc fb_tmp_620 
    .local pmc fb_tmp_621 
    .local pmc fb_tmp_622 
    .local pmc fb_tmp_623 
    .local pmc fb_tmp_624 
    .local pmc fb_tmp_625 
    .local pmc fb_tmp_626 
    .local pmc fb_tmp_627 
    .local pmc fb_tmp_628 
    .local pmc fb_tmp_629 
    .local pmc fb_tmp_630 
    .local pmc fb_tmp_631 
    .local pmc fb_tmp_632 
    .local pmc fb_tmp_633 
    .local pmc fb_tmp_634 
    .local pmc fb_tmp_635 
    .local pmc fb_tmp_636 
    .local pmc fb_tmp_637 
    .local pmc fb_tmp_638 
    .local pmc fb_tmp_639 
    .local pmc fb_tmp_640 
    .local pmc fb_tmp_641 
    .local pmc fb_tmp_642 
    .local pmc fb_tmp_643 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
.annotate 'line', 2139
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback5775
    nqp_get_sc_object $P5005, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5004, $P5005
    set fb_tmp_615, $P5004
    repr_defined $I5001, fb_tmp_615
    unless $I5001 goto if2727_else5776 
    set $P5006, fb_tmp_615["$W"]
    set $P5008, $P5006
    goto if2727_end5777
  if2727_else5776:
    null $P5007
    set $P5008, $P5007
  if2727_end5777:
    unless_null $P5008, vivi_27285778
    nqp_get_sc_object $P5009, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5008, $P5009
  vivi_27285778:
    unless_null $P5008, vivi_27295779
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_27295779:
    set $P5003, $P5008
  fallback5775:
    unless_null _lex_param_1, fallback5784
    nqp_get_sc_object $P5011, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5011
  fallback5784:
    set fb_tmp_617, _lex_param_1
    repr_defined $I5003, fb_tmp_617
    unless $I5003 goto if2731_else5782 
    set $P5012, fb_tmp_617["metaclass"]
    set $P5014, $P5012
    goto if2731_end5783
  if2731_else5782:
    null $P5013
    set $P5014, $P5013
  if2731_end5783:
    unless_null $P5014, vivi_27325785
    nqp_get_sc_object $P5015, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5014, $P5015
  vivi_27325785:
    set fb_tmp_616, $P5014
    repr_defined $I5002, fb_tmp_616
    unless $I5002 goto if2730_else5780 
    set $P5016, fb_tmp_616["identifier"]
    set $P5018, $P5016
    goto if2730_end5781
  if2730_else5780:
    null $P5017
    set $P5018, $P5017
  if2730_end5781:
    unless_null $P5018, vivi_27335786
    nqp_get_sc_object $P5019, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5018, $P5019
  vivi_27335786:
    $P5020 = $P5003."find_sym"($P5018)
    set $P101, $P5020
.annotate 'line', 2140
    find_dynamic_lex $P5021, "$*W"
    unless_null $P5021, fallback5787
    nqp_get_sc_object $P5023, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5022, $P5023
    set fb_tmp_618, $P5022
    repr_defined $I5004, fb_tmp_618
    unless $I5004 goto if2734_else5788 
    set $P5024, fb_tmp_618["$W"]
    set $P5026, $P5024
    goto if2734_end5789
  if2734_else5788:
    null $P5025
    set $P5026, $P5025
  if2734_end5789:
    unless_null $P5026, vivi_27355790
    nqp_get_sc_object $P5027, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5026, $P5027
  vivi_27355790:
    unless_null $P5026, vivi_27365791
    die "Contextual $*W not found"
    box $P5028, "Contextual $*W not found"
    set $P5026, $P5028
  vivi_27365791:
    set $P5021, $P5026
  fallback5787:
    unless_null _lex_param_1, fallback5794
    nqp_get_sc_object $P5029, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5029
  fallback5794:
    set fb_tmp_619, _lex_param_1
    repr_defined $I5005, fb_tmp_619
    unless $I5005 goto if2737_else5792 
    set $P5030, fb_tmp_619["name"]
    set $P5032, $P5030
    goto if2737_end5793
  if2737_else5792:
    null $P5031
    set $P5032, $P5031
  if2737_end5793:
    unless_null $P5032, vivi_27385795
    nqp_get_sc_object $P5033, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5032, $P5033
  vivi_27385795:
    set $S5001, $P5032
    $P5034 = $P5021."pkg_create_mo"($P101, $S5001 :named("name"))
    set $P102, $P5034
    find_dynamic_lex $P5035, "$*SCOPE"
    unless_null $P5035, fallback5800
    nqp_get_sc_object $P5037, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5036, $P5037
    set fb_tmp_620, $P5036
    repr_defined $I5007, fb_tmp_620
    unless $I5007 goto if2741_else5801 
    set $P5038, fb_tmp_620["$SCOPE"]
    set $P5040, $P5038
    goto if2741_end5802
  if2741_else5801:
    null $P5039
    set $P5040, $P5039
  if2741_end5802:
    unless_null $P5040, vivi_27425803
    nqp_get_sc_object $P5041, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5040, $P5041
  vivi_27425803:
    unless_null $P5040, vivi_27435804
    die "Contextual $*SCOPE not found"
    box $P5042, "Contextual $*SCOPE not found"
    set $P5040, $P5042
  vivi_27435804:
    set $P5035, $P5040
  fallback5800:
    set $S5002, $P5035
    iseq $I5006, $S5002, "our"
    set $I5010, $I5006
    if $I5006 goto unless2740_end5799 
    find_dynamic_lex $P5043, "$*SCOPE"
    unless_null $P5043, fallback5805
    nqp_get_sc_object $P5045, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5044, $P5045
    set fb_tmp_621, $P5044
    repr_defined $I5009, fb_tmp_621
    unless $I5009 goto if2744_else5806 
    set $P5046, fb_tmp_621["$SCOPE"]
    set $P5048, $P5046
    goto if2744_end5807
  if2744_else5806:
    null $P5047
    set $P5048, $P5047
  if2744_end5807:
    unless_null $P5048, vivi_27455808
    nqp_get_sc_object $P5049, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5048, $P5049
  vivi_27455808:
    unless_null $P5048, vivi_27465809
    die "Contextual $*SCOPE not found"
    box $P5050, "Contextual $*SCOPE not found"
    set $P5048, $P5050
  vivi_27465809:
    set $P5043, $P5048
  fallback5805:
    set $S5003, $P5043
    iseq $I5008, $S5003, ""
    set $I5010, $I5008
  unless2740_end5799:
    unless $I5010 goto if2739_else5796 
.annotate 'line', 2143
.annotate 'line', 2144
    find_dynamic_lex $P5051, "$*W"
    unless_null $P5051, fallback5810
    nqp_get_sc_object $P5053, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5052, $P5053
    set fb_tmp_622, $P5052
    repr_defined $I5011, fb_tmp_622
    unless $I5011 goto if2747_else5811 
    set $P5054, fb_tmp_622["$W"]
    set $P5056, $P5054
    goto if2747_end5812
  if2747_else5811:
    null $P5055
    set $P5056, $P5055
  if2747_end5812:
    unless_null $P5056, vivi_27485813
    nqp_get_sc_object $P5057, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5056, $P5057
  vivi_27485813:
    unless_null $P5056, vivi_27495814
    die "Contextual $*W not found"
    box $P5058, "Contextual $*W not found"
    set $P5056, $P5058
  vivi_27495814:
    set $P5051, $P5056
  fallback5810:
    find_dynamic_lex $P5059, "$*OUTERPACKAGE"
    unless_null $P5059, fallback5815
    nqp_get_sc_object $P5061, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5060, $P5061
    set fb_tmp_623, $P5060
    repr_defined $I5012, fb_tmp_623
    unless $I5012 goto if2750_else5816 
    set $P5062, fb_tmp_623["$OUTERPACKAGE"]
    set $P5064, $P5062
    goto if2750_end5817
  if2750_else5816:
    null $P5063
    set $P5064, $P5063
  if2750_end5817:
    unless_null $P5064, vivi_27515818
    nqp_get_sc_object $P5065, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5064, $P5065
  vivi_27515818:
    unless_null $P5064, vivi_27525819
    die "Contextual $*OUTERPACKAGE not found"
    box $P5066, "Contextual $*OUTERPACKAGE not found"
    set $P5064, $P5066
  vivi_27525819:
    set $P5059, $P5064
  fallback5815:
    unless_null _lex_param_1, fallback5824
    nqp_get_sc_object $P5067, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5067
  fallback5824:
    set fb_tmp_625, _lex_param_1
    repr_defined $I5014, fb_tmp_625
    unless $I5014 goto if2754_else5822 
    set $P5068, fb_tmp_625["name"]
    set $P5070, $P5068
    goto if2754_end5823
  if2754_else5822:
    null $P5069
    set $P5070, $P5069
  if2754_end5823:
    unless_null $P5070, vivi_27555825
    nqp_get_sc_object $P5071, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5070, $P5071
  vivi_27555825:
    set fb_tmp_624, $P5070
    repr_defined $I5013, fb_tmp_624
    unless $I5013 goto if2753_else5820 
    set $P5072, fb_tmp_624["identifier"]
    set $P5074, $P5072
    goto if2753_end5821
  if2753_else5820:
    null $P5073
    set $P5074, $P5073
  if2753_end5821:
    unless_null $P5074, vivi_27565826
    nqp_get_sc_object $P5075, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5074, $P5075
  vivi_27565826:
    $P5051."install_package_symbol"($P5059, $P5074, $P102)
    unless_null _lex_param_1, fallback5833
    nqp_get_sc_object $P5076, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5076
  fallback5833:
    set fb_tmp_627, _lex_param_1
    repr_defined $I5017, fb_tmp_627
    unless $I5017 goto if2759_else5831 
    set $P5077, fb_tmp_627["name"]
    set $P5079, $P5077
    goto if2759_end5832
  if2759_else5831:
    null $P5078
    set $P5079, $P5078
  if2759_end5832:
    unless_null $P5079, vivi_27605834
    nqp_get_sc_object $P5080, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5079, $P5080
  vivi_27605834:
    set fb_tmp_626, $P5079
    repr_defined $I5016, fb_tmp_626
    unless $I5016 goto if2758_else5829 
    set $P5081, fb_tmp_626["identifier"]
    set $P5083, $P5081
    goto if2758_end5830
  if2758_else5829:
    null $P5082
    set $P5083, $P5082
  if2758_end5830:
    unless_null $P5083, vivi_27615835
    nqp_get_sc_object $P5084, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5083, $P5084
  vivi_27615835:
    set $N5001, $P5083
    set $N5002, 1
    iseq $I5015, $N5001, $N5002
    box $P5117, $I5015
    set $P5116, $P5117
    unless $I5015 goto if2757_end5828 
.annotate 'line', 2145
.annotate 'line', 2146
    find_dynamic_lex $P5085, "$*W"
    unless_null $P5085, fallback5836
    nqp_get_sc_object $P5087, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5086, $P5087
    set fb_tmp_628, $P5086
    repr_defined $I5018, fb_tmp_628
    unless $I5018 goto if2762_else5837 
    set $P5088, fb_tmp_628["$W"]
    set $P5090, $P5088
    goto if2762_end5838
  if2762_else5837:
    null $P5089
    set $P5090, $P5089
  if2762_end5838:
    unless_null $P5090, vivi_27635839
    nqp_get_sc_object $P5091, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5090, $P5091
  vivi_27635839:
    unless_null $P5090, vivi_27645840
    die "Contextual $*W not found"
    box $P5092, "Contextual $*W not found"
    set $P5090, $P5092
  vivi_27645840:
    set $P5085, $P5090
  fallback5836:
    find_dynamic_lex $P5093, "$*W"
    unless_null $P5093, fallback5841
    nqp_get_sc_object $P5095, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5094, $P5095
    set fb_tmp_629, $P5094
    repr_defined $I5019, fb_tmp_629
    unless $I5019 goto if2765_else5842 
    set $P5096, fb_tmp_629["$W"]
    set $P5098, $P5096
    goto if2765_end5843
  if2765_else5842:
    null $P5097
    set $P5098, $P5097
  if2765_end5843:
    unless_null $P5098, vivi_27665844
    nqp_get_sc_object $P5099, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5098, $P5099
  vivi_27665844:
    unless_null $P5098, vivi_27675845
    die "Contextual $*W not found"
    box $P5100, "Contextual $*W not found"
    set $P5098, $P5100
  vivi_27675845:
    set $P5093, $P5098
  fallback5841:
    $P5101 = $P5093."cur_lexpad"()
    unless_null _lex_param_1, fallback5852
    nqp_get_sc_object $P5102, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5102
  fallback5852:
    set fb_tmp_632, _lex_param_1
    repr_defined $I5022, fb_tmp_632
    unless $I5022 goto if2770_else5850 
    set $P5103, fb_tmp_632["name"]
    set $P5105, $P5103
    goto if2770_end5851
  if2770_else5850:
    null $P5104
    set $P5105, $P5104
  if2770_end5851:
    unless_null $P5105, vivi_27715853
    nqp_get_sc_object $P5106, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5105, $P5106
  vivi_27715853:
    set fb_tmp_631, $P5105
    repr_defined $I5021, fb_tmp_631
    unless $I5021 goto if2769_else5848 
    set $P5107, fb_tmp_631["identifier"]
    set $P5109, $P5107
    goto if2769_end5849
  if2769_else5848:
    null $P5108
    set $P5109, $P5108
  if2769_end5849:
    unless_null $P5109, vivi_27725854
    nqp_get_sc_object $P5110, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5109, $P5110
  vivi_27725854:
    set fb_tmp_630, $P5109
    repr_defined $I5020, fb_tmp_630
    unless $I5020 goto if2768_else5846 
    set $P5111, fb_tmp_630[0]
    set $P5113, $P5111
    goto if2768_end5847
  if2768_else5846:
    null $P5112
    set $P5113, $P5112
  if2768_end5847:
    unless_null $P5113, vivi_27735855
    nqp_get_sc_object $P5114, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5113, $P5114
  vivi_27735855:
    $P5115 = $P5085."install_lexical_symbol"($P5101, $P5113, $P102)
    set $P5116, $P5115
  if2757_end5828:
    goto if2739_end5797
  if2739_else5796:
    find_dynamic_lex $P5118, "$*SCOPE"
    unless_null $P5118, fallback5858
    nqp_get_sc_object $P5120, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5119, $P5120
    set fb_tmp_633, $P5119
    repr_defined $I5024, fb_tmp_633
    unless $I5024 goto if2775_else5859 
    set $P5121, fb_tmp_633["$SCOPE"]
    set $P5123, $P5121
    goto if2775_end5860
  if2775_else5859:
    null $P5122
    set $P5123, $P5122
  if2775_end5860:
    unless_null $P5123, vivi_27765861
    nqp_get_sc_object $P5124, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5123, $P5124
  vivi_27765861:
    unless_null $P5123, vivi_27775862
    die "Contextual $*SCOPE not found"
    box $P5125, "Contextual $*SCOPE not found"
    set $P5123, $P5125
  vivi_27775862:
    set $P5118, $P5123
  fallback5858:
    set $S5004, $P5118
    iseq $I5023, $S5004, "my"
    unless $I5023 goto if2774_else5856 
.annotate 'line', 2149
    unless_null _lex_param_1, fallback5869
    nqp_get_sc_object $P5126, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5126
  fallback5869:
    set fb_tmp_635, _lex_param_1
    repr_defined $I5027, fb_tmp_635
    unless $I5027 goto if2780_else5867 
    set $P5127, fb_tmp_635["name"]
    set $P5129, $P5127
    goto if2780_end5868
  if2780_else5867:
    null $P5128
    set $P5129, $P5128
  if2780_end5868:
    unless_null $P5129, vivi_27815870
    nqp_get_sc_object $P5130, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5129, $P5130
  vivi_27815870:
    set fb_tmp_634, $P5129
    repr_defined $I5026, fb_tmp_634
    unless $I5026 goto if2779_else5865 
    set $P5131, fb_tmp_634["identifier"]
    set $P5133, $P5131
    goto if2779_end5866
  if2779_else5865:
    null $P5132
    set $P5133, $P5132
  if2779_end5866:
    unless_null $P5133, vivi_27825871
    nqp_get_sc_object $P5134, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5133, $P5134
  vivi_27825871:
    set $N5003, $P5133
    set $N5004, 1
    isne $I5025, $N5003, $N5004
    unless $I5025 goto if2778_end5864 
.annotate 'line', 2150
.annotate 'line', 2151
    unless_null _lex_param_1, fallback5874
    nqp_get_sc_object $P5135, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5135
  fallback5874:
    set fb_tmp_636, _lex_param_1
    repr_defined $I5028, fb_tmp_636
    unless $I5028 goto if2783_else5872 
    set $P5136, fb_tmp_636["name"]
    set $P5138, $P5136
    goto if2783_end5873
  if2783_else5872:
    null $P5137
    set $P5138, $P5137
  if2783_end5873:
    unless_null $P5138, vivi_27845875
    nqp_get_sc_object $P5139, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5138, $P5139
  vivi_27845875:
    $P5140 = $P5138."CURSOR"()
    $P5141 = $P5140."panic"("A my scoped package cannot have a multi-part name yet")
  if2778_end5864:
.annotate 'line', 2153
    find_dynamic_lex $P5142, "$*W"
    unless_null $P5142, fallback5876
    nqp_get_sc_object $P5144, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5143, $P5144
    set fb_tmp_637, $P5143
    repr_defined $I5029, fb_tmp_637
    unless $I5029 goto if2785_else5877 
    set $P5145, fb_tmp_637["$W"]
    set $P5147, $P5145
    goto if2785_end5878
  if2785_else5877:
    null $P5146
    set $P5147, $P5146
  if2785_end5878:
    unless_null $P5147, vivi_27865879
    nqp_get_sc_object $P5148, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5147, $P5148
  vivi_27865879:
    unless_null $P5147, vivi_27875880
    die "Contextual $*W not found"
    box $P5149, "Contextual $*W not found"
    set $P5147, $P5149
  vivi_27875880:
    set $P5142, $P5147
  fallback5876:
    find_dynamic_lex $P5150, "$*W"
    unless_null $P5150, fallback5881
    nqp_get_sc_object $P5152, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5151, $P5152
    set fb_tmp_638, $P5151
    repr_defined $I5030, fb_tmp_638
    unless $I5030 goto if2788_else5882 
    set $P5153, fb_tmp_638["$W"]
    set $P5155, $P5153
    goto if2788_end5883
  if2788_else5882:
    null $P5154
    set $P5155, $P5154
  if2788_end5883:
    unless_null $P5155, vivi_27895884
    nqp_get_sc_object $P5156, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5155, $P5156
  vivi_27895884:
    unless_null $P5155, vivi_27905885
    die "Contextual $*W not found"
    box $P5157, "Contextual $*W not found"
    set $P5155, $P5157
  vivi_27905885:
    set $P5150, $P5155
  fallback5881:
    $P5158 = $P5150."cur_lexpad"()
    unless_null _lex_param_1, fallback5892
    nqp_get_sc_object $P5159, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5159
  fallback5892:
    set fb_tmp_641, _lex_param_1
    repr_defined $I5033, fb_tmp_641
    unless $I5033 goto if2793_else5890 
    set $P5160, fb_tmp_641["name"]
    set $P5162, $P5160
    goto if2793_end5891
  if2793_else5890:
    null $P5161
    set $P5162, $P5161
  if2793_end5891:
    unless_null $P5162, vivi_27945893
    nqp_get_sc_object $P5163, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5162, $P5163
  vivi_27945893:
    set fb_tmp_640, $P5162
    repr_defined $I5032, fb_tmp_640
    unless $I5032 goto if2792_else5888 
    set $P5164, fb_tmp_640["identifier"]
    set $P5166, $P5164
    goto if2792_end5889
  if2792_else5888:
    null $P5165
    set $P5166, $P5165
  if2792_end5889:
    unless_null $P5166, vivi_27955894
    nqp_get_sc_object $P5167, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5166, $P5167
  vivi_27955894:
    set fb_tmp_639, $P5166
    repr_defined $I5031, fb_tmp_639
    unless $I5031 goto if2791_else5886 
    set $P5168, fb_tmp_639[0]
    set $P5170, $P5168
    goto if2791_end5887
  if2791_else5886:
    null $P5169
    set $P5170, $P5169
  if2791_end5887:
    unless_null $P5170, vivi_27965895
    nqp_get_sc_object $P5171, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5170, $P5171
  vivi_27965895:
    $P5172 = $P5142."install_lexical_symbol"($P5158, $P5170, $P102)
    set $P5183, $P5172
    goto if2774_end5857
  if2774_else5856:
.annotate 'line', 2155
.annotate 'line', 2156
    $P5173 = _lex_param_1."CURSOR"()
    find_dynamic_lex $P5174, "$*SCOPE"
    unless_null $P5174, fallback5896
    nqp_get_sc_object $P5176, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5175, $P5176
    set fb_tmp_642, $P5175
    repr_defined $I5034, fb_tmp_642
    unless $I5034 goto if2797_else5897 
    set $P5177, fb_tmp_642["$SCOPE"]
    set $P5179, $P5177
    goto if2797_end5898
  if2797_else5897:
    null $P5178
    set $P5179, $P5178
  if2797_end5898:
    unless_null $P5179, vivi_27985899
    nqp_get_sc_object $P5180, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5179, $P5180
  vivi_27985899:
    unless_null $P5179, vivi_27995900
    die "Contextual $*SCOPE not found"
    box $P5181, "Contextual $*SCOPE not found"
    set $P5179, $P5181
  vivi_27995900:
    set $P5174, $P5179
  fallback5896:
    set $S5006, $P5174
    concat $S5005, $S5006, " scoped packages are not supported"
    $P5182 = $P5173."panic"($S5005)
    set $P5183, $P5182
  if2774_end5857:
  if2739_end5797:
.annotate 'line', 2159
    nqp_get_sc_object $P5186, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5185, $P5186, "QAST"
    get_who $P5184, $P5185
    set fb_tmp_643, $P5184
    repr_defined $I5035, fb_tmp_643
    unless $I5035 goto if2800_else5901 
    set $P5187, fb_tmp_643["Stmts"]
    set $P5189, $P5187
    goto if2800_end5902
  if2800_else5901:
    null $P5188
    set $P5189, $P5188
  if2800_end5902:
    unless_null $P5189, vivi_28015903
    nqp_get_sc_object $P5190, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5189, $P5190
  vivi_28015903:
    $P5191 = $P5189."new"()
    $P5192 = _lex_param_1."!make"($P5191)
    .return ($P5192) 
.end
.HLL "nqp"
.namespace []
.sub "package_def" :subid("cuid_294_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2162
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5199 = 'cuid_462_1360432459.413' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_463_1360432459.413' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_464_1360432459.413' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_465_1360432459.413' 
    capture_lex $P5199 
    .lex "@ns", $P101 
    .lex "$name", $P102 
    .lex "$how", $P103 
    .lex "$past", $P104 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_644 
    .local pmc fb_tmp_645 
    .local pmc fb_tmp_646 
    .local pmc fb_tmp_647 
    .local pmc fb_tmp_648 
    .local pmc fb_tmp_649 
    .local pmc fb_tmp_650 
    .local pmc fb_tmp_651 
    .local pmc fb_tmp_652 
    .local pmc fb_tmp_666 
    .local pmc fb_tmp_667 
    .local pmc fb_tmp_668 
    .local pmc fb_tmp_669 
    .local pmc fb_tmp_670 
    .local pmc fb_tmp_683 
    .local pmc fb_tmp_684 
    .local pmc fb_tmp_689 
    .local pmc fb_tmp_690 
    .local pmc fb_tmp_691 
    .local pmc fb_tmp_692 
    .local pmc fb_tmp_693 
    .local pmc fb_tmp_694 
    .local pmc fb_tmp_695 
    .local pmc fb_tmp_696 
    .local pmc fb_tmp_697 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P104, $P5004
    unless_null _lex_param_1, fallback5908
    nqp_get_sc_object $P5006, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5006
  fallback5908:
    set fb_tmp_645, _lex_param_1
    repr_defined $I5002, fb_tmp_645
    unless $I5002 goto if2803_else5906 
    set $P5007, fb_tmp_645["name"]
    set $P5009, $P5007
    goto if2803_end5907
  if2803_else5906:
    null $P5008
    set $P5009, $P5008
  if2803_end5907:
    unless_null $P5009, vivi_28045909
    nqp_get_sc_object $P5010, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5009, $P5010
  vivi_28045909:
    set fb_tmp_644, $P5009
    repr_defined $I5001, fb_tmp_644
    unless $I5001 goto if2802_else5904 
    set $P5011, fb_tmp_644["identifier"]
    set $P5013, $P5011
    goto if2802_end5905
  if2802_else5904:
    null $P5012
    set $P5013, $P5012
  if2802_end5905:
    unless_null $P5013, vivi_28055910
    nqp_get_sc_object $P5014, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5013, $P5014
  vivi_28055910:
    repr_clone $P5005, $P5013
    set $P101, $P5005
.annotate 'line', 2165
    $P5015 = $P101."pop"()
    set $S5001, $P5015
    box $P5016, $S5001
    set $P102, $P5016
    find_dynamic_lex $P5017, "%*HOW"
    unless_null $P5017, fallback5913
    nqp_get_sc_object $P5019, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5018, $P5019
    set fb_tmp_647, $P5018
    repr_defined $I5004, fb_tmp_647
    unless $I5004 goto if2807_else5914 
    set $P5020, fb_tmp_647["%HOW"]
    set $P5022, $P5020
    goto if2807_end5915
  if2807_else5914:
    null $P5021
    set $P5022, $P5021
  if2807_end5915:
    unless_null $P5022, vivi_28085916
    nqp_get_sc_object $P5024, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5023, $P5024
    new $P5025, 'Hash'
    set $P5023["%HOW"], $P5025
    set $P5022, $P5025
  vivi_28085916:
    unless_null $P5022, vivi_28095917
    die "Contextual %*HOW not found"
    box $P5026, "Contextual %*HOW not found"
    set $P5022, $P5026
  vivi_28095917:
    set $P5017, $P5022
  fallback5913:
    set fb_tmp_646, $P5017
    repr_defined $I5003, fb_tmp_646
    unless $I5003 goto if2806_else5911 
    find_dynamic_lex $P5028, "$*PKGDECL"
    unless_null $P5028, fallback5918
    nqp_get_sc_object $P5030, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5029, $P5030
    set fb_tmp_648, $P5029
    repr_defined $I5005, fb_tmp_648
    unless $I5005 goto if2810_else5919 
    set $P5031, fb_tmp_648["$PKGDECL"]
    set $P5033, $P5031
    goto if2810_end5920
  if2810_else5919:
    null $P5032
    set $P5033, $P5032
  if2810_end5920:
    unless_null $P5033, vivi_28115921
    nqp_get_sc_object $P5034, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5033, $P5034
  vivi_28115921:
    unless_null $P5033, vivi_28125922
    die "Contextual $*PKGDECL not found"
    box $P5035, "Contextual $*PKGDECL not found"
    set $P5033, $P5035
  vivi_28125922:
    set $P5028, $P5033
  fallback5918:
    set $S5002, $P5028
    set $P5027, fb_tmp_646[$S5002]
    set $P5037, $P5027
    goto if2806_end5912
  if2806_else5911:
    null $P5036
    set $P5037, $P5036
  if2806_end5912:
    unless_null $P5037, vivi_28135923
    nqp_get_sc_object $P5038, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5037, $P5038
  vivi_28135923:
    set $P103, $P5037
    unless_null _lex_param_1, fallback5928
    nqp_get_sc_object $P5039, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5039
  fallback5928:
    set fb_tmp_649, _lex_param_1
    repr_defined $I5006, fb_tmp_649
    unless $I5006 goto if2815_else5926 
    set $P5040, fb_tmp_649["blockoid"]
    set $P5042, $P5040
    goto if2815_end5927
  if2815_else5926:
    null $P5041
    set $P5042, $P5041
  if2815_end5927:
    unless_null $P5042, vivi_28165929
    nqp_get_sc_object $P5043, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5042, $P5043
  vivi_28165929:
    unless $P5042 goto if2814_else5924 
.annotate 'line', 2170
.annotate 'line', 2171
    unless_null _lex_param_1, fallback5932
    nqp_get_sc_object $P5044, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5044
  fallback5932:
    set fb_tmp_650, _lex_param_1
    repr_defined $I5007, fb_tmp_650
    unless $I5007 goto if2817_else5930 
    set $P5045, fb_tmp_650["blockoid"]
    set $P5047, $P5045
    goto if2817_end5931
  if2817_else5930:
    null $P5046
    set $P5047, $P5046
  if2817_end5931:
    unless_null $P5047, vivi_28185933
    nqp_get_sc_object $P5048, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5047, $P5048
  vivi_28185933:
    $P5049 = $P5047."ast"()
    set $P104, $P5049
    goto if2814_end5925
  if2814_else5924:
.annotate 'line', 2173
.annotate 'line', 2174
    find_dynamic_lex $P5050, "$*W"
    unless_null $P5050, fallback5934
    nqp_get_sc_object $P5052, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5051, $P5052
    set fb_tmp_651, $P5051
    repr_defined $I5008, fb_tmp_651
    unless $I5008 goto if2819_else5935 
    set $P5053, fb_tmp_651["$W"]
    set $P5055, $P5053
    goto if2819_end5936
  if2819_else5935:
    null $P5054
    set $P5055, $P5054
  if2819_end5936:
    unless_null $P5055, vivi_28205937
    nqp_get_sc_object $P5056, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5055, $P5056
  vivi_28205937:
    unless_null $P5055, vivi_28215938
    die "Contextual $*W not found"
    box $P5057, "Contextual $*W not found"
    set $P5055, $P5057
  vivi_28215938:
    set $P5050, $P5055
  fallback5934:
    $P5058 = $P5050."pop_lexpad"()
    set $P104, $P5058
.annotate 'line', 2175
    unless_null _lex_param_1, fallback5941
    nqp_get_sc_object $P5059, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5059
  fallback5941:
    set fb_tmp_652, _lex_param_1
    repr_defined $I5009, fb_tmp_652
    unless $I5009 goto if2822_else5939 
    set $P5060, fb_tmp_652["statementlist"]
    set $P5062, $P5060
    goto if2822_end5940
  if2822_else5939:
    null $P5061
    set $P5062, $P5061
  if2822_end5940:
    unless_null $P5062, vivi_28235942
    nqp_get_sc_object $P5063, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5062, $P5063
  vivi_28235942:
    $P5064 = $P5062."ast"()
    $P5065 = $P104."push"($P5064)
  if2814_end5925:
    can $I5010, $P103, "parametric"
    box $P5068, $I5010
    set $P5067, $P5068
    unless $I5010 goto if2825_end5946 
.annotate 'line', 2182
    $P5066 = $P103."parametric"($P103)
    set $P5067, $P5066
  if2825_end5946:
    unless $P5067 goto if2824_else5943 
    .const 'Sub' $P5069 = 'cuid_462_1360432459.413' 
    capture_lex $P5069
    $P5070 = $P5069()
    goto if2824_end5944
  if2824_else5943:
.annotate 'line', 2199
.annotate 'line', 2200
    $P104."blocktype"("immediate")
.annotate 'line', 2201
    find_dynamic_lex $P5071, "$*W"
    unless_null $P5071, fallback6005
    nqp_get_sc_object $P5073, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5072, $P5073
    set fb_tmp_666, $P5072
    repr_defined $I5011, fb_tmp_666
    unless $I5011 goto if2859_else6006 
    set $P5074, fb_tmp_666["$W"]
    set $P5076, $P5074
    goto if2859_end6007
  if2859_else6006:
    null $P5075
    set $P5076, $P5075
  if2859_end6007:
    unless_null $P5076, vivi_28606008
    nqp_get_sc_object $P5077, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5076, $P5077
  vivi_28606008:
    unless_null $P5076, vivi_28616009
    die "Contextual $*W not found"
    box $P5078, "Contextual $*W not found"
    set $P5076, $P5078
  vivi_28616009:
    set $P5071, $P5076
  fallback6005:
    find_dynamic_lex $P5079, "$*PACKAGE"
    unless_null $P5079, fallback6010
    nqp_get_sc_object $P5081, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5080, $P5081
    set fb_tmp_667, $P5080
    repr_defined $I5012, fb_tmp_667
    unless $I5012 goto if2862_else6011 
    set $P5082, fb_tmp_667["$PACKAGE"]
    set $P5084, $P5082
    goto if2862_end6012
  if2862_else6011:
    null $P5083
    set $P5084, $P5083
  if2862_end6012:
    unless_null $P5084, vivi_28636013
    nqp_get_sc_object $P5085, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5084, $P5085
  vivi_28636013:
    unless_null $P5084, vivi_28646014
    die "Contextual $*PACKAGE not found"
    box $P5086, "Contextual $*PACKAGE not found"
    set $P5084, $P5086
  vivi_28646014:
    set $P5079, $P5084
  fallback6010:
    $P5071."install_lexical_symbol"($P104, "$?PACKAGE", $P5079)
.annotate 'line', 2202
    find_dynamic_lex $P5087, "$*W"
    unless_null $P5087, fallback6015
    nqp_get_sc_object $P5089, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5088, $P5089
    set fb_tmp_668, $P5088
    repr_defined $I5013, fb_tmp_668
    unless $I5013 goto if2865_else6016 
    set $P5090, fb_tmp_668["$W"]
    set $P5092, $P5090
    goto if2865_end6017
  if2865_else6016:
    null $P5091
    set $P5092, $P5091
  if2865_end6017:
    unless_null $P5092, vivi_28666018
    nqp_get_sc_object $P5093, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5092, $P5093
  vivi_28666018:
    unless_null $P5092, vivi_28676019
    die "Contextual $*W not found"
    box $P5094, "Contextual $*W not found"
    set $P5092, $P5094
  vivi_28676019:
    set $P5087, $P5092
  fallback6015:
    find_dynamic_lex $P5095, "$*PACKAGE"
    unless_null $P5095, fallback6020
    nqp_get_sc_object $P5097, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5096, $P5097
    set fb_tmp_669, $P5096
    repr_defined $I5014, fb_tmp_669
    unless $I5014 goto if2868_else6021 
    set $P5098, fb_tmp_669["$PACKAGE"]
    set $P5100, $P5098
    goto if2868_end6022
  if2868_else6021:
    null $P5099
    set $P5100, $P5099
  if2868_end6022:
    unless_null $P5100, vivi_28696023
    nqp_get_sc_object $P5101, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5100, $P5101
  vivi_28696023:
    unless_null $P5100, vivi_28706024
    die "Contextual $*PACKAGE not found"
    box $P5102, "Contextual $*PACKAGE not found"
    set $P5100, $P5102
  vivi_28706024:
    set $P5095, $P5100
  fallback6020:
    $P5103 = $P5087."install_lexical_symbol"($P104, "$?CLASS", $P5095)
  if2824_end5944:
    unless_null _lex_param_1, fallback6029
    nqp_get_sc_object $P5104, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5104
  fallback6029:
    set fb_tmp_670, _lex_param_1
    repr_defined $I5015, fb_tmp_670
    unless $I5015 goto if2872_else6027 
    set $P5105, fb_tmp_670["parent"]
    set $P5107, $P5105
    goto if2872_end6028
  if2872_else6027:
    null $P5106
    set $P5107, $P5106
  if2872_end6028:
    unless_null $P5107, vivi_28736030
    nqp_get_sc_object $P5108, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5107, $P5108
  vivi_28736030:
    unless $P5107 goto if2871_else6025 
    .const 'Sub' $P5109 = 'cuid_463_1360432459.413' 
    capture_lex $P5109
    $P5110 = $P5109()
    goto if2871_end6026
  if2871_else6025:
    can $I5016, $P103, "set_default_parent"
    box $P5114, $I5016
    set $P5113, $P5114
    unless $I5016 goto if2896_end6068 
    .const 'Sub' $P5111 = 'cuid_464_1360432459.413' 
    capture_lex $P5111
    $P5112 = $P5111()
    set $P5113, $P5112
  if2896_end6068:
  if2871_end6026:
    unless_null _lex_param_1, fallback6095
    nqp_get_sc_object $P5115, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5115
  fallback6095:
    set fb_tmp_683, _lex_param_1
    repr_defined $I5017, fb_tmp_683
    unless $I5017 goto if2911_else6093 
    set $P5116, fb_tmp_683["role"]
    set $P5118, $P5116
    goto if2911_end6094
  if2911_else6093:
    null $P5117
    set $P5118, $P5117
  if2911_end6094:
    unless_null $P5118, vivi_29126096
    nqp_get_sc_object $P5119, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5118, $P5119
  vivi_29126096:
    unless $P5118 goto if2910_end6092 
.annotate 'line', 2227
    unless_null _lex_param_1, fallback6099
    nqp_get_sc_object $P5123, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5123
  fallback6099:
    set fb_tmp_684, _lex_param_1
    repr_defined $I5018, fb_tmp_684
    unless $I5018 goto if2913_else6097 
    set $P5124, fb_tmp_684["role"]
    set $P5126, $P5124
    goto if2913_end6098
  if2913_else6097:
    null $P5125
    set $P5126, $P5125
  if2913_end6098:
    unless_null $P5126, vivi_29146100
    nqp_get_sc_object $P5127, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5126, $P5127
  vivi_29146100:
    set $P5120, $P5126
    iter $P5122, $P5126
  for_next6123:
    unless $P5122, for_done6125
    shift $P5129, $P5122
  for_redo6124:
    .const 'Sub' $P5128 = 'cuid_465_1360432459.413' 
    capture_lex $P5128
    $P5120 = $P5128($P5129)
    goto for_next6123
  for_done6125:
  if2910_end6092:
.annotate 'line', 2245
    find_dynamic_lex $P5130, "$*W"
    unless_null $P5130, fallback6126
    nqp_get_sc_object $P5132, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5131, $P5132
    set fb_tmp_689, $P5131
    repr_defined $I5019, fb_tmp_689
    unless $I5019 goto if2929_else6127 
    set $P5133, fb_tmp_689["$W"]
    set $P5135, $P5133
    goto if2929_end6128
  if2929_else6127:
    null $P5134
    set $P5135, $P5134
  if2929_end6128:
    unless_null $P5135, vivi_29306129
    nqp_get_sc_object $P5136, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5135, $P5136
  vivi_29306129:
    unless_null $P5135, vivi_29316130
    die "Contextual $*W not found"
    box $P5137, "Contextual $*W not found"
    set $P5135, $P5137
  vivi_29316130:
    set $P5130, $P5135
  fallback6126:
    find_dynamic_lex $P5138, "$*PACKAGE"
    unless_null $P5138, fallback6131
    nqp_get_sc_object $P5140, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5139, $P5140
    set fb_tmp_690, $P5139
    repr_defined $I5020, fb_tmp_690
    unless $I5020 goto if2932_else6132 
    set $P5141, fb_tmp_690["$PACKAGE"]
    set $P5143, $P5141
    goto if2932_end6133
  if2932_else6132:
    null $P5142
    set $P5143, $P5142
  if2932_end6133:
    unless_null $P5143, vivi_29336134
    nqp_get_sc_object $P5144, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5143, $P5144
  vivi_29336134:
    unless_null $P5143, vivi_29346135
    die "Contextual $*PACKAGE not found"
    box $P5145, "Contextual $*PACKAGE not found"
    set $P5143, $P5145
  vivi_29346135:
    set $P5138, $P5143
  fallback6131:
    $P5130."pkg_compose"($P5138)
    find_dynamic_lex $P5146, "$*PKGDECL"
    unless_null $P5146, fallback6140
    nqp_get_sc_object $P5148, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5147, $P5148
    set fb_tmp_691, $P5147
    repr_defined $I5022, fb_tmp_691
    unless $I5022 goto if2937_else6141 
    set $P5149, fb_tmp_691["$PKGDECL"]
    set $P5151, $P5149
    goto if2937_end6142
  if2937_else6141:
    null $P5150
    set $P5151, $P5150
  if2937_end6142:
    unless_null $P5151, vivi_29386143
    nqp_get_sc_object $P5152, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5151, $P5152
  vivi_29386143:
    unless_null $P5151, vivi_29396144
    die "Contextual $*PKGDECL not found"
    box $P5153, "Contextual $*PKGDECL not found"
    set $P5151, $P5153
  vivi_29396144:
    set $P5146, $P5151
  fallback6140:
    set $S5003, $P5146
    iseq $I5021, $S5003, "grammar"
    set $I5025, $I5021
    unless $I5021 goto if2936_end6139 
    find_dynamic_lex $P5154, "$*PACKAGE"
    unless_null $P5154, fallback6145
    nqp_get_sc_object $P5156, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5155, $P5156
    set fb_tmp_692, $P5155
    repr_defined $I5024, fb_tmp_692
    unless $I5024 goto if2940_else6146 
    set $P5157, fb_tmp_692["$PACKAGE"]
    set $P5159, $P5157
    goto if2940_end6147
  if2940_else6146:
    null $P5158
    set $P5159, $P5158
  if2940_end6147:
    unless_null $P5159, vivi_29416148
    nqp_get_sc_object $P5160, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5159, $P5160
  vivi_29416148:
    unless_null $P5159, vivi_29426149
    die "Contextual $*PACKAGE not found"
    box $P5161, "Contextual $*PACKAGE not found"
    set $P5159, $P5161
  vivi_29426149:
    set $P5154, $P5159
  fallback6145:
    can $I5023, $P5154, "!precompute_nfas"
    set $I5025, $I5023
  if2936_end6139:
    unless $I5025 goto if2935_end6137 
.annotate 'line', 2248
.annotate 'line', 2249
    find_dynamic_lex $P5162, "$*PACKAGE"
    unless_null $P5162, fallback6150
    nqp_get_sc_object $P5164, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5163, $P5164
    set fb_tmp_693, $P5163
    repr_defined $I5026, fb_tmp_693
    unless $I5026 goto if2943_else6151 
    set $P5165, fb_tmp_693["$PACKAGE"]
    set $P5167, $P5165
    goto if2943_end6152
  if2943_else6151:
    null $P5166
    set $P5167, $P5166
  if2943_end6152:
    unless_null $P5167, vivi_29446153
    nqp_get_sc_object $P5168, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5167, $P5168
  vivi_29446153:
    unless_null $P5167, vivi_29456154
    die "Contextual $*PACKAGE not found"
    box $P5169, "Contextual $*PACKAGE not found"
    set $P5167, $P5169
  vivi_29456154:
    set $P5162, $P5167
  fallback6150:
    $P5170 = $P5162."!precompute_nfas"()
  if2935_end6137:
    unless_null _lex_param_1, fallback6159
    nqp_get_sc_object $P5171, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5171
  fallback6159:
    set fb_tmp_694, _lex_param_1
    repr_defined $I5027, fb_tmp_694
    unless $I5027 goto if2947_else6157 
    set $P5172, fb_tmp_694["export"]
    set $P5174, $P5172
    goto if2947_end6158
  if2947_else6157:
    null $P5173
    set $P5174, $P5173
  if2947_end6158:
    unless_null $P5174, vivi_29486160
    nqp_get_sc_object $P5175, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5174, $P5175
  vivi_29486160:
    unless $P5174 goto if2946_end6156 
.annotate 'line', 2253
    find_dynamic_lex $P5178, "$*EXPORT"
    unless_null $P5178, fallback6163
    nqp_get_sc_object $P5180, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5179, $P5180
    set fb_tmp_696, $P5179
    repr_defined $I5029, fb_tmp_696
    unless $I5029 goto if2950_else6164 
    set $P5181, fb_tmp_696["$EXPORT"]
    set $P5183, $P5181
    goto if2950_end6165
  if2950_else6164:
    null $P5182
    set $P5183, $P5182
  if2950_end6165:
    unless_null $P5183, vivi_29516166
    nqp_get_sc_object $P5184, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5183, $P5184
  vivi_29516166:
    unless_null $P5183, vivi_29526167
    die "Contextual $*EXPORT not found"
    box $P5185, "Contextual $*EXPORT not found"
    set $P5183, $P5185
  vivi_29526167:
    set $P5178, $P5183
  fallback6163:
    get_who $P5177, $P5178
    set fb_tmp_695, $P5177
    repr_defined $I5028, fb_tmp_695
    unless $I5028 goto if2949_else6161 
    set $P5186, fb_tmp_695["DEFAULT"]
    set $P5188, $P5186
    goto if2949_end6162
  if2949_else6161:
    null $P5187
    set $P5188, $P5187
  if2949_end6162:
    unless_null $P5188, vivi_29536168
    nqp_get_sc_object $P5189, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5188, $P5189
  vivi_29536168:
    get_who $P5176, $P5188
    set $S5004, $P102
    find_dynamic_lex $P5190, "$*PACKAGE"
    unless_null $P5190, fallback6169
    nqp_get_sc_object $P5192, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5191, $P5192
    set fb_tmp_697, $P5191
    repr_defined $I5030, fb_tmp_697
    unless $I5030 goto if2954_else6170 
    set $P5193, fb_tmp_697["$PACKAGE"]
    set $P5195, $P5193
    goto if2954_end6171
  if2954_else6170:
    null $P5194
    set $P5195, $P5194
  if2954_end6171:
    unless_null $P5195, vivi_29556172
    nqp_get_sc_object $P5196, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5195, $P5196
  vivi_29556172:
    unless_null $P5195, vivi_29566173
    die "Contextual $*PACKAGE not found"
    box $P5197, "Contextual $*PACKAGE not found"
    set $P5195, $P5197
  vivi_29566173:
    set $P5190, $P5195
  fallback6169:
    set $P5176[$S5004], $P5190
  if2946_end6156:
.annotate 'line', 2257
    $P5198 = _lex_param_1."!make"($P104)
    .return ($P5198) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_462_1360432459.413") :anon :lex :outer("cuid_294_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2182
    .const 'Sub' $P5107 = 'cuid_461_1360432459.413' 
    capture_lex $P5107 
    .lex "$params", $P101 
    .local pmc fb_tmp_653 
    .local pmc fb_tmp_654 
    .local pmc fb_tmp_655 
    .local pmc fb_tmp_656 
    .local pmc fb_tmp_657 
    .local pmc fb_tmp_658 
    .local pmc fb_tmp_659 
    .local pmc fb_tmp_660 
    .local pmc fb_tmp_661 
    .local pmc fb_tmp_662 
    .local pmc fb_tmp_663 
    .local pmc fb_tmp_664 
    .local pmc fb_tmp_665 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
.annotate 'line', 2183
    find_lex $P5002, "$past"
    $P5002."blocktype"("declaration")
.annotate 'line', 2184
    nqp_get_sc_object $P5005, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5004, $P5005, "QAST"
    get_who $P5003, $P5004
    set fb_tmp_653, $P5003
    repr_defined $I5001, fb_tmp_653
    unless $I5001 goto if2826_else5947 
    set $P5006, fb_tmp_653["Stmts"]
    set $P5008, $P5006
    goto if2826_end5948
  if2826_else5947:
    null $P5007
    set $P5008, $P5007
  if2826_end5948:
    unless_null $P5008, vivi_28275949
    nqp_get_sc_object $P5009, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5008, $P5009
  vivi_28275949:
.annotate 'line', 2185
    nqp_get_sc_object $P5012, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5011, $P5012, "QAST"
    get_who $P5010, $P5011
    set fb_tmp_654, $P5010
    repr_defined $I5002, fb_tmp_654
    unless $I5002 goto if2828_else5950 
    set $P5013, fb_tmp_654["Var"]
    set $P5015, $P5013
    goto if2828_end5951
  if2828_else5950:
    null $P5014
    set $P5015, $P5014
  if2828_end5951:
    unless_null $P5015, vivi_28295952
    nqp_get_sc_object $P5016, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5015, $P5016
  vivi_28295952:
    $P5017 = $P5015."new"("$?CLASS" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    $P5018 = $P5008."new"($P5017)
    set $P101, $P5018
    find_lex $P5019, "$/"
    unless_null $P5019, fallback5957
    nqp_get_sc_object $P5020, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5019, $P5020
  fallback5957:
    set fb_tmp_655, $P5019
    repr_defined $I5003, fb_tmp_655
    unless $I5003 goto if2831_else5955 
    set $P5021, fb_tmp_655["role_params"]
    set $P5023, $P5021
    goto if2831_end5956
  if2831_else5955:
    null $P5022
    set $P5023, $P5022
  if2831_end5956:
    unless_null $P5023, vivi_28325958
    nqp_get_sc_object $P5024, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5023, $P5024
  vivi_28325958:
    unless $P5023 goto if2830_end5954 
.annotate 'line', 2187
    find_lex $P5028, "$/"
    unless_null $P5028, fallback5965
    nqp_get_sc_object $P5029, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5028, $P5029
  fallback5965:
    set fb_tmp_658, $P5028
    repr_defined $I5006, fb_tmp_658
    unless $I5006 goto if2835_else5963 
    set $P5030, fb_tmp_658["role_params"]
    set $P5032, $P5030
    goto if2835_end5964
  if2835_else5963:
    null $P5031
    set $P5032, $P5031
  if2835_end5964:
    unless_null $P5032, vivi_28365966
    nqp_get_sc_object $P5033, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5032, $P5033
  vivi_28365966:
    set fb_tmp_657, $P5032
    repr_defined $I5005, fb_tmp_657
    unless $I5005 goto if2834_else5961 
    set $P5034, fb_tmp_657[0]
    set $P5036, $P5034
    goto if2834_end5962
  if2834_else5961:
    null $P5035
    set $P5036, $P5035
  if2834_end5962:
    unless_null $P5036, vivi_28375967
    nqp_get_sc_object $P5037, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5036, $P5037
  vivi_28375967:
    set fb_tmp_656, $P5036
    repr_defined $I5004, fb_tmp_656
    unless $I5004 goto if2833_else5959 
    set $P5038, fb_tmp_656["variable"]
    set $P5040, $P5038
    goto if2833_end5960
  if2833_else5959:
    null $P5039
    set $P5040, $P5039
  if2833_end5960:
    unless_null $P5040, vivi_28385968
    nqp_get_sc_object $P5041, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5040, $P5041
  vivi_28385968:
    set $P5025, $P5040
    iter $P5027, $P5040
  for_next5969:
    unless $P5027, for_done5971
    shift $P5043, $P5027
  for_redo5970:
    .const 'Sub' $P5042 = 'cuid_461_1360432459.413' 
    capture_lex $P5042
    $P5025 = $P5042($P5043)
    goto for_next5969
  for_done5971:
  if2830_end5954:
.annotate 'line', 2192
    find_lex $P5044, "$past"
    $P5044."unshift"($P101)
.annotate 'line', 2193
    find_lex $P5045, "$past"
    nqp_get_sc_object $P5048, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5047, $P5048, "QAST"
    get_who $P5046, $P5047
    set fb_tmp_659, $P5046
    repr_defined $I5007, fb_tmp_659
    unless $I5007 goto if2839_else5972 
    set $P5049, fb_tmp_659["Op"]
    set $P5051, $P5049
    goto if2839_end5973
  if2839_else5972:
    null $P5050
    set $P5051, $P5050
  if2839_end5973:
    unless_null $P5051, vivi_28405974
    nqp_get_sc_object $P5052, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5051, $P5052
  vivi_28405974:
    $P5053 = $P5051."new"("curlexpad" :named("op"))
    $P5045."push"($P5053)
.annotate 'line', 2194
    find_lex $P5054, "$past"
    $P5054."symbol"("$?CLASS", "lexical" :named("scope"))
.annotate 'line', 2195
    find_dynamic_lex $P5055, "$*W"
    unless_null $P5055, fallback5975
    nqp_get_sc_object $P5057, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5056, $P5057
    set fb_tmp_660, $P5056
    repr_defined $I5008, fb_tmp_660
    unless $I5008 goto if2841_else5976 
    set $P5058, fb_tmp_660["$W"]
    set $P5060, $P5058
    goto if2841_end5977
  if2841_else5976:
    null $P5059
    set $P5060, $P5059
  if2841_end5977:
    unless_null $P5060, vivi_28425978
    nqp_get_sc_object $P5061, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5060, $P5061
  vivi_28425978:
    unless_null $P5060, vivi_28435979
    die "Contextual $*W not found"
    box $P5062, "Contextual $*W not found"
    set $P5060, $P5062
  vivi_28435979:
    set $P5055, $P5060
  fallback5975:
    find_dynamic_lex $P5063, "$*PACKAGE"
    unless_null $P5063, fallback5980
    nqp_get_sc_object $P5065, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5064, $P5065
    set fb_tmp_661, $P5064
    repr_defined $I5009, fb_tmp_661
    unless $I5009 goto if2844_else5981 
    set $P5066, fb_tmp_661["$PACKAGE"]
    set $P5068, $P5066
    goto if2844_end5982
  if2844_else5981:
    null $P5067
    set $P5068, $P5067
  if2844_end5982:
    unless_null $P5068, vivi_28455983
    nqp_get_sc_object $P5069, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5068, $P5069
  vivi_28455983:
    unless_null $P5068, vivi_28465984
    die "Contextual $*PACKAGE not found"
    box $P5070, "Contextual $*PACKAGE not found"
    set $P5068, $P5070
  vivi_28465984:
    set $P5063, $P5068
  fallback5980:
    find_lex $P5071, "$past"
    $P5055."pkg_set_body_block"($P5063, $P5071)
.annotate 'line', 2196
    find_dynamic_lex $P5072, "$*W"
    unless_null $P5072, fallback5985
    nqp_get_sc_object $P5074, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5073, $P5074
    set fb_tmp_662, $P5073
    repr_defined $I5010, fb_tmp_662
    unless $I5010 goto if2847_else5986 
    set $P5075, fb_tmp_662["$W"]
    set $P5077, $P5075
    goto if2847_end5987
  if2847_else5986:
    null $P5076
    set $P5077, $P5076
  if2847_end5987:
    unless_null $P5077, vivi_28485988
    nqp_get_sc_object $P5078, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5077, $P5078
  vivi_28485988:
    unless_null $P5077, vivi_28495989
    die "Contextual $*W not found"
    box $P5079, "Contextual $*W not found"
    set $P5077, $P5079
  vivi_28495989:
    set $P5072, $P5077
  fallback5985:
    find_lex $P5080, "$past"
    find_dynamic_lex $P5081, "$*PACKAGE"
    unless_null $P5081, fallback5990
    nqp_get_sc_object $P5083, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5082, $P5083
    set fb_tmp_663, $P5082
    repr_defined $I5011, fb_tmp_663
    unless $I5011 goto if2850_else5991 
    set $P5084, fb_tmp_663["$PACKAGE"]
    set $P5086, $P5084
    goto if2850_end5992
  if2850_else5991:
    null $P5085
    set $P5086, $P5085
  if2850_end5992:
    unless_null $P5086, vivi_28515993
    nqp_get_sc_object $P5087, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5086, $P5087
  vivi_28515993:
    unless_null $P5086, vivi_28525994
    die "Contextual $*PACKAGE not found"
    box $P5088, "Contextual $*PACKAGE not found"
    set $P5086, $P5088
  vivi_28525994:
    set $P5081, $P5086
  fallback5990:
    $P5072."install_lexical_symbol"($P5080, "$?PACKAGE", $P5081)
.annotate 'line', 2197
    find_dynamic_lex $P5089, "$*W"
    unless_null $P5089, fallback5995
    nqp_get_sc_object $P5091, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5090, $P5091
    set fb_tmp_664, $P5090
    repr_defined $I5012, fb_tmp_664
    unless $I5012 goto if2853_else5996 
    set $P5092, fb_tmp_664["$W"]
    set $P5094, $P5092
    goto if2853_end5997
  if2853_else5996:
    null $P5093
    set $P5094, $P5093
  if2853_end5997:
    unless_null $P5094, vivi_28545998
    nqp_get_sc_object $P5095, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5094, $P5095
  vivi_28545998:
    unless_null $P5094, vivi_28555999
    die "Contextual $*W not found"
    box $P5096, "Contextual $*W not found"
    set $P5094, $P5096
  vivi_28555999:
    set $P5089, $P5094
  fallback5995:
    find_lex $P5097, "$past"
    find_dynamic_lex $P5098, "$*PACKAGE"
    unless_null $P5098, fallback6000
    nqp_get_sc_object $P5100, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5099, $P5100
    set fb_tmp_665, $P5099
    repr_defined $I5013, fb_tmp_665
    unless $I5013 goto if2856_else6001 
    set $P5101, fb_tmp_665["$PACKAGE"]
    set $P5103, $P5101
    goto if2856_end6002
  if2856_else6001:
    null $P5102
    set $P5103, $P5102
  if2856_end6002:
    unless_null $P5103, vivi_28576003
    nqp_get_sc_object $P5104, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5103, $P5104
  vivi_28576003:
    unless_null $P5103, vivi_28586004
    die "Contextual $*PACKAGE not found"
    box $P5105, "Contextual $*PACKAGE not found"
    set $P5103, $P5105
  vivi_28586004:
    set $P5098, $P5103
  fallback6000:
    $P5106 = $P5089."install_lexical_symbol"($P5097, "$?ROLE", $P5098)
    .return ($P5106) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_461_1360432459.413") :anon :lex :outer("cuid_462_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2188
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 2189
    find_lex $P5001, "$params"
    $P5002 = _lex_param_0."ast"()
    $P5003 = $P5001."push"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_463_1360432459.413") :anon :lex :outer("cuid_294_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2206
    .lex "$parent", $P101 
    .lex "$parent_found", $P102 
    .local pmc fb_tmp_671 
    .local pmc fb_tmp_672 
    .local pmc fb_tmp_673 
    .local pmc fb_tmp_674 
    .local pmc fb_tmp_675 
    .local pmc fb_tmp_676 
    .local pmc fb_tmp_677 
    .local pmc fb_tmp_678 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
    new $P5028, 'ExceptionHandler'
    set_label $P5028, catch_handler_28846047
    $P5028.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5028
.annotate 'line', 2209
.annotate 'line', 2210
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback6031
    nqp_get_sc_object $P5005, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5004, $P5005
    set fb_tmp_671, $P5004
    repr_defined $I5001, fb_tmp_671
    unless $I5001 goto if2874_else6032 
    set $P5006, fb_tmp_671["$W"]
    set $P5008, $P5006
    goto if2874_end6033
  if2874_else6032:
    null $P5007
    set $P5008, $P5007
  if2874_end6033:
    unless_null $P5008, vivi_28756034
    nqp_get_sc_object $P5009, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5008, $P5009
  vivi_28756034:
    unless_null $P5008, vivi_28766035
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_28766035:
    set $P5003, $P5008
  fallback6031:
    find_lex $P5012, "$/"
    unless_null $P5012, fallback6042
    nqp_get_sc_object $P5013, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5012, $P5013
  fallback6042:
    set fb_tmp_674, $P5012
    repr_defined $I5004, fb_tmp_674
    unless $I5004 goto if2879_else6040 
    set $P5014, fb_tmp_674["parent"]
    set $P5016, $P5014
    goto if2879_end6041
  if2879_else6040:
    null $P5015
    set $P5016, $P5015
  if2879_end6041:
    unless_null $P5016, vivi_28806043
    nqp_get_sc_object $P5017, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5016, $P5017
  vivi_28806043:
    set fb_tmp_673, $P5016
    repr_defined $I5003, fb_tmp_673
    unless $I5003 goto if2878_else6038 
    set $P5018, fb_tmp_673[0]
    set $P5020, $P5018
    goto if2878_end6039
  if2878_else6038:
    null $P5019
    set $P5020, $P5019
  if2878_end6039:
    unless_null $P5020, vivi_28816044
    nqp_get_sc_object $P5021, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5020, $P5021
  vivi_28816044:
    set fb_tmp_672, $P5020
    repr_defined $I5002, fb_tmp_672
    unless $I5002 goto if2877_else6036 
    set $P5022, fb_tmp_672["identifier"]
    set $P5024, $P5022
    goto if2877_end6037
  if2877_else6036:
    null $P5023
    set $P5024, $P5023
  if2877_end6037:
    unless_null $P5024, vivi_28826045
    nqp_get_sc_object $P5025, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5024, $P5025
  vivi_28826045:
    repr_clone $P5011, $P5024
    $P5026 = $P5003."find_sym"($P5011)
    set $P101, $P5026
    box $P5027, 1
    set $P102, $P5027
    set $P5029, $P102
    pop_eh 
    goto skip_handler_28836046
  catch_handler_28846047:
    .get_results ($P5028) 
    set $I10001, 1
    set $P5028["handled"], $I10001
    nqp_get_sc_object $P10001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    finalize $P5028
    pop_upto_eh $P5028
    pop_eh 
    set $P5029, $P10001
    goto skip_handler_28836046
  skip_handler_28836046:
    unless $P102 goto if2885_else6048 
.annotate 'line', 2213
.annotate 'line', 2214
    find_dynamic_lex $P5030, "$*W"
    unless_null $P5030, fallback6050
    nqp_get_sc_object $P5032, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5031, $P5032
    set fb_tmp_675, $P5031
    repr_defined $I5005, fb_tmp_675
    unless $I5005 goto if2886_else6051 
    set $P5033, fb_tmp_675["$W"]
    set $P5035, $P5033
    goto if2886_end6052
  if2886_else6051:
    null $P5034
    set $P5035, $P5034
  if2886_end6052:
    unless_null $P5035, vivi_28876053
    nqp_get_sc_object $P5036, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5035, $P5036
  vivi_28876053:
    unless_null $P5035, vivi_28886054
    die "Contextual $*W not found"
    box $P5037, "Contextual $*W not found"
    set $P5035, $P5037
  vivi_28886054:
    set $P5030, $P5035
  fallback6050:
    find_dynamic_lex $P5038, "$*PACKAGE"
    unless_null $P5038, fallback6055
    nqp_get_sc_object $P5040, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5039, $P5040
    set fb_tmp_676, $P5039
    repr_defined $I5006, fb_tmp_676
    unless $I5006 goto if2889_else6056 
    set $P5041, fb_tmp_676["$PACKAGE"]
    set $P5043, $P5041
    goto if2889_end6057
  if2889_else6056:
    null $P5042
    set $P5043, $P5042
  if2889_end6057:
    unless_null $P5043, vivi_28906058
    nqp_get_sc_object $P5044, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5043, $P5044
  vivi_28906058:
    unless_null $P5043, vivi_28916059
    die "Contextual $*PACKAGE not found"
    box $P5045, "Contextual $*PACKAGE not found"
    set $P5043, $P5045
  vivi_28916059:
    set $P5038, $P5043
  fallback6055:
    $P5046 = $P5030."pkg_add_parent_or_role"($P5038, "add_parent", $P101)
    set $P5060, $P5046
    goto if2885_end6049
  if2885_else6048:
.annotate 'line', 2216
.annotate 'line', 2217
    find_lex $P5047, "$/"
    $P5048 = $P5047."CURSOR"()
    find_lex $P5049, "$/"
    unless_null $P5049, fallback6064
    nqp_get_sc_object $P5050, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5049, $P5050
  fallback6064:
    set fb_tmp_678, $P5049
    repr_defined $I5008, fb_tmp_678
    unless $I5008 goto if2893_else6062 
    set $P5051, fb_tmp_678["parent"]
    set $P5053, $P5051
    goto if2893_end6063
  if2893_else6062:
    null $P5052
    set $P5053, $P5052
  if2893_end6063:
    unless_null $P5053, vivi_28946065
    nqp_get_sc_object $P5054, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5053, $P5054
  vivi_28946065:
    set fb_tmp_677, $P5053
    repr_defined $I5007, fb_tmp_677
    unless $I5007 goto if2892_else6060 
    set $P5055, fb_tmp_677[0]
    set $P5057, $P5055
    goto if2892_end6061
  if2892_else6060:
    null $P5056
    set $P5057, $P5056
  if2892_end6061:
    unless_null $P5057, vivi_28956066
    nqp_get_sc_object $P5058, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5057, $P5058
  vivi_28956066:
    set $S5003, $P5057
    concat $S5002, "Could not find parent class '", $S5003
    concat $S5001, $S5002, "'"
    $P5059 = $P5048."panic"($S5001)
    set $P5060, $P5059
  if2885_end6049:
    .return ($P5060) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_464_1360432459.413") :anon :lex :outer("cuid_294_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2220
    .lex "$default", $P101 
    .local pmc fb_tmp_679 
    .local pmc fb_tmp_680 
    .local pmc fb_tmp_681 
    .local pmc fb_tmp_682 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    find_dynamic_lex $P5002, "$*PKGDECL"
    unless_null $P5002, fallback6071
    nqp_get_sc_object $P5004, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5003, $P5004
    set fb_tmp_679, $P5003
    repr_defined $I5002, fb_tmp_679
    unless $I5002 goto if2898_else6072 
    set $P5005, fb_tmp_679["$PKGDECL"]
    set $P5007, $P5005
    goto if2898_end6073
  if2898_else6072:
    null $P5006
    set $P5007, $P5006
  if2898_end6073:
    unless_null $P5007, vivi_28996074
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5007, $P5008
  vivi_28996074:
    unless_null $P5007, vivi_29006075
    die "Contextual $*PKGDECL not found"
    box $P5009, "Contextual $*PKGDECL not found"
    set $P5007, $P5009
  vivi_29006075:
    set $P5002, $P5007
  fallback6071:
    set $S5001, $P5002
    iseq $I5001, $S5001, "grammar"
    unless $I5001 goto if2897_else6069 
    new $P5010, 'ResizablePMCArray'
    box $P5011, "NQPCursor"
    push $P5010, $P5011
    set $P5014, $P5010
    goto if2897_end6070
  if2897_else6069:
    new $P5012, 'ResizablePMCArray'
    box $P5013, "NQPMu"
    push $P5012, $P5013
    set $P5014, $P5012
  if2897_end6070:
    set $P101, $P5014
.annotate 'line', 2222
    find_dynamic_lex $P5015, "$*W"
    unless_null $P5015, fallback6076
    nqp_get_sc_object $P5017, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5016, $P5017
    set fb_tmp_680, $P5016
    repr_defined $I5003, fb_tmp_680
    unless $I5003 goto if2901_else6077 
    set $P5018, fb_tmp_680["$W"]
    set $P5020, $P5018
    goto if2901_end6078
  if2901_else6077:
    null $P5019
    set $P5020, $P5019
  if2901_end6078:
    unless_null $P5020, vivi_29026079
    nqp_get_sc_object $P5021, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5020, $P5021
  vivi_29026079:
    unless_null $P5020, vivi_29036080
    die "Contextual $*W not found"
    box $P5022, "Contextual $*W not found"
    set $P5020, $P5022
  vivi_29036080:
    set $P5015, $P5020
  fallback6076:
    find_dynamic_lex $P5023, "$*PACKAGE"
    unless_null $P5023, fallback6081
    nqp_get_sc_object $P5025, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5024, $P5025
    set fb_tmp_681, $P5024
    repr_defined $I5004, fb_tmp_681
    unless $I5004 goto if2904_else6082 
    set $P5026, fb_tmp_681["$PACKAGE"]
    set $P5028, $P5026
    goto if2904_end6083
  if2904_else6082:
    null $P5027
    set $P5028, $P5027
  if2904_end6083:
    unless_null $P5028, vivi_29056084
    nqp_get_sc_object $P5029, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5028, $P5029
  vivi_29056084:
    unless_null $P5028, vivi_29066085
    die "Contextual $*PACKAGE not found"
    box $P5030, "Contextual $*PACKAGE not found"
    set $P5028, $P5030
  vivi_29066085:
    set $P5023, $P5028
  fallback6081:
.annotate 'line', 2223
    find_dynamic_lex $P5031, "$*W"
    unless_null $P5031, fallback6086
    nqp_get_sc_object $P5033, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5032, $P5033
    set fb_tmp_682, $P5032
    repr_defined $I5005, fb_tmp_682
    unless $I5005 goto if2907_else6087 
    set $P5034, fb_tmp_682["$W"]
    set $P5036, $P5034
    goto if2907_end6088
  if2907_else6087:
    null $P5035
    set $P5036, $P5035
  if2907_end6088:
    unless_null $P5036, vivi_29086089
    nqp_get_sc_object $P5037, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5036, $P5037
  vivi_29086089:
    unless_null $P5036, vivi_29096090
    die "Contextual $*W not found"
    box $P5038, "Contextual $*W not found"
    set $P5036, $P5038
  vivi_29096090:
    set $P5031, $P5036
  fallback6086:
    $P5039 = $P5031."find_sym"($P101)
    $P5040 = $P5015."pkg_add_parent_or_role"($P5023, "set_default_parent", $P5039)
    .return ($P5040) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_465_1360432459.413") :anon :lex :outer("cuid_294_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2228
    .param pmc _lex_param_0 
    .lex "$role", $P101 
    .lex "$role_found", $P102 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_685 
    .local pmc fb_tmp_686 
    .local pmc fb_tmp_687 
    .local pmc fb_tmp_688 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
    new $P5018, 'ExceptionHandler'
    set_label $P5018, catch_handler_29216110
    $P5018.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5018
.annotate 'line', 2231
.annotate 'line', 2232
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback6101
    nqp_get_sc_object $P5005, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5004, $P5005
    set fb_tmp_685, $P5004
    repr_defined $I5001, fb_tmp_685
    unless $I5001 goto if2915_else6102 
    set $P5006, fb_tmp_685["$W"]
    set $P5008, $P5006
    goto if2915_end6103
  if2915_else6102:
    null $P5007
    set $P5008, $P5007
  if2915_end6103:
    unless_null $P5008, vivi_29166104
    nqp_get_sc_object $P5009, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5008, $P5009
  vivi_29166104:
    unless_null $P5008, vivi_29176105
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_29176105:
    set $P5003, $P5008
  fallback6101:
    set fb_tmp_686, _lex_param_0
    repr_defined $I5002, fb_tmp_686
    unless $I5002 goto if2918_else6106 
    set $P5012, fb_tmp_686["identifier"]
    set $P5014, $P5012
    goto if2918_end6107
  if2918_else6106:
    null $P5013
    set $P5014, $P5013
  if2918_end6107:
    unless_null $P5014, vivi_29196108
    nqp_get_sc_object $P5015, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5014, $P5015
  vivi_29196108:
    repr_clone $P5011, $P5014
    $P5016 = $P5003."find_sym"($P5011)
    set $P101, $P5016
    box $P5017, 1
    set $P102, $P5017
    set $P5019, $P102
    pop_eh 
    goto skip_handler_29206109
  catch_handler_29216110:
    .get_results ($P5018) 
    set $I10001, 1
    set $P5018["handled"], $I10001
    nqp_get_sc_object $P10001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    finalize $P5018
    pop_upto_eh $P5018
    pop_eh 
    set $P5019, $P10001
    goto skip_handler_29206109
  skip_handler_29206109:
    unless $P102 goto if2922_else6111 
.annotate 'line', 2235
.annotate 'line', 2236
    find_dynamic_lex $P5020, "$*W"
    unless_null $P5020, fallback6113
    nqp_get_sc_object $P5022, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5021, $P5022
    set fb_tmp_687, $P5021
    repr_defined $I5003, fb_tmp_687
    unless $I5003 goto if2923_else6114 
    set $P5023, fb_tmp_687["$W"]
    set $P5025, $P5023
    goto if2923_end6115
  if2923_else6114:
    null $P5024
    set $P5025, $P5024
  if2923_end6115:
    unless_null $P5025, vivi_29246116
    nqp_get_sc_object $P5026, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5025, $P5026
  vivi_29246116:
    unless_null $P5025, vivi_29256117
    die "Contextual $*W not found"
    box $P5027, "Contextual $*W not found"
    set $P5025, $P5027
  vivi_29256117:
    set $P5020, $P5025
  fallback6113:
    find_dynamic_lex $P5028, "$*PACKAGE"
    unless_null $P5028, fallback6118
    nqp_get_sc_object $P5030, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5029, $P5030
    set fb_tmp_688, $P5029
    repr_defined $I5004, fb_tmp_688
    unless $I5004 goto if2926_else6119 
    set $P5031, fb_tmp_688["$PACKAGE"]
    set $P5033, $P5031
    goto if2926_end6120
  if2926_else6119:
    null $P5032
    set $P5033, $P5032
  if2926_end6120:
    unless_null $P5033, vivi_29276121
    nqp_get_sc_object $P5034, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5033, $P5034
  vivi_29276121:
    unless_null $P5033, vivi_29286122
    die "Contextual $*PACKAGE not found"
    box $P5035, "Contextual $*PACKAGE not found"
    set $P5033, $P5035
  vivi_29286122:
    set $P5028, $P5033
  fallback6118:
    $P5036 = $P5020."pkg_add_parent_or_role"($P5028, "add_role", $P101)
    set $P5040, $P5036
    goto if2922_end6112
  if2922_else6111:
.annotate 'line', 2238
.annotate 'line', 2239
    find_lex $P5037, "$/"
    $P5038 = $P5037."CURSOR"()
    set $S5003, _lex_param_0
    concat $S5002, "Could not find role '", $S5003
    concat $S5001, $S5002, "'"
    $P5039 = $P5038."panic"($S5001)
    set $P5040, $P5039
  if2922_end6112:
    .return ($P5040) 
.end
.HLL "nqp"
.namespace []
.sub "role_params" :subid("cuid_295_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2260
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5011 = 'cuid_466_1360432459.413' 
    capture_lex $P5011 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_698 
    unless_null _lex_param_1, fallback6176
    nqp_get_sc_object $P5004, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5004
  fallback6176:
    set fb_tmp_698, _lex_param_1
    repr_defined $I5001, fb_tmp_698
    unless $I5001 goto if2957_else6174 
    set $P5005, fb_tmp_698["variable"]
    set $P5007, $P5005
    goto if2957_end6175
  if2957_else6174:
    null $P5006
    set $P5007, $P5006
  if2957_end6175:
    unless_null $P5007, vivi_29586177
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5007, $P5008
  vivi_29586177:
    set $P5001, $P5007
    iter $P5003, $P5007
  for_next6183:
    unless $P5003, for_done6185
    shift $P5010, $P5003
  for_redo6184:
    .const 'Sub' $P5009 = 'cuid_466_1360432459.413' 
    capture_lex $P5009
    $P5001 = $P5009($P5010)
    goto for_next6183
  for_done6185:
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_466_1360432459.413") :anon :lex :outer("cuid_295_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2261
    .param pmc _lex_param_0 
    .lex "$var", $P101 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_699 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
.annotate 'line', 2262
    $P5002 = _lex_param_0."ast"()
    set $P101, $P5002
.annotate 'line', 2263
    $P101."scope"("lexical")
.annotate 'line', 2264
    $P101."decl"("param")
.annotate 'line', 2265
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback6178
    nqp_get_sc_object $P5005, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5004, $P5005
    set fb_tmp_699, $P5004
    repr_defined $I5001, fb_tmp_699
    unless $I5001 goto if2959_else6179 
    set $P5006, fb_tmp_699["$W"]
    set $P5008, $P5006
    goto if2959_end6180
  if2959_else6179:
    null $P5007
    set $P5008, $P5007
  if2959_end6180:
    unless_null $P5008, vivi_29606181
    nqp_get_sc_object $P5009, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5008, $P5009
  vivi_29606181:
    unless_null $P5008, vivi_29616182
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_29616182:
    set $P5003, $P5008
  fallback6178:
    $P5011 = $P5003."cur_lexpad"()
    $P5012 = $P101."name"()
    $P5013 = $P5011."symbol"($P5012, "lexical" :named("scope"))
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<my>" :subid("cuid_296_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2269
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_700 
    unless_null _lex_param_1, fallback6188
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback6188:
    set fb_tmp_700, _lex_param_1
    repr_defined $I5001, fb_tmp_700
    unless $I5001 goto if2962_else6186 
    set $P5002, fb_tmp_700["scoped"]
    set $P5004, $P5002
    goto if2962_end6187
  if2962_else6186:
    null $P5003
    set $P5004, $P5003
  if2962_end6187:
    unless_null $P5004, vivi_29636189
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_29636189:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<our>" :subid("cuid_297_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2270
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_701 
    unless_null _lex_param_1, fallback6192
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback6192:
    set fb_tmp_701, _lex_param_1
    repr_defined $I5001, fb_tmp_701
    unless $I5001 goto if2964_else6190 
    set $P5002, fb_tmp_701["scoped"]
    set $P5004, $P5002
    goto if2964_end6191
  if2964_else6190:
    null $P5003
    set $P5004, $P5003
  if2964_end6191:
    unless_null $P5004, vivi_29656193
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_29656193:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<has>" :subid("cuid_298_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2271
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_702 
    unless_null _lex_param_1, fallback6196
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback6196:
    set fb_tmp_702, _lex_param_1
    repr_defined $I5001, fb_tmp_702
    unless $I5001 goto if2966_else6194 
    set $P5002, fb_tmp_702["scoped"]
    set $P5004, $P5002
    goto if2966_end6195
  if2966_else6194:
    null $P5003
    set $P5004, $P5003
  if2966_end6195:
    unless_null $P5004, vivi_29676197
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_29676197:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "scoped" :subid("cuid_299_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2273
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_703 
    .local pmc fb_tmp_704 
    .local pmc fb_tmp_705 
    .local pmc fb_tmp_706 
    .local pmc fb_tmp_707 
.annotate 'line', 2274
    unless_null _lex_param_1, fallback6202
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback6202:
    set fb_tmp_703, _lex_param_1
    repr_defined $I5001, fb_tmp_703
    unless $I5001 goto if2969_else6200 
    set $P5002, fb_tmp_703["declarator"]
    set $P5004, $P5002
    goto if2969_end6201
  if2969_else6200:
    null $P5003
    set $P5004, $P5003
  if2969_end6201:
    unless_null $P5004, vivi_29706203
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_29706203:
    unless $P5004 goto if2968_else6198 
    unless_null _lex_param_1, fallback6206
    nqp_get_sc_object $P5006, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5006
  fallback6206:
    set fb_tmp_704, _lex_param_1
    repr_defined $I5002, fb_tmp_704
    unless $I5002 goto if2971_else6204 
    set $P5007, fb_tmp_704["declarator"]
    set $P5009, $P5007
    goto if2971_end6205
  if2971_else6204:
    null $P5008
    set $P5009, $P5008
  if2971_end6205:
    unless_null $P5009, vivi_29726207
    nqp_get_sc_object $P5010, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5009, $P5010
  vivi_29726207:
    $P5011 = $P5009."ast"()
    set $P5030, $P5011
    goto if2968_end6199
  if2968_else6198:
    unless_null _lex_param_1, fallback6212
    nqp_get_sc_object $P5012, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5012
  fallback6212:
    set fb_tmp_705, _lex_param_1
    repr_defined $I5003, fb_tmp_705
    unless $I5003 goto if2974_else6210 
    set $P5013, fb_tmp_705["multi_declarator"]
    set $P5015, $P5013
    goto if2974_end6211
  if2974_else6210:
    null $P5014
    set $P5015, $P5014
  if2974_end6211:
    unless_null $P5015, vivi_29756213
    nqp_get_sc_object $P5016, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5015, $P5016
  vivi_29756213:
    unless $P5015 goto if2973_else6208 
.annotate 'line', 2275
    unless_null _lex_param_1, fallback6216
    nqp_get_sc_object $P5017, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5017
  fallback6216:
    set fb_tmp_706, _lex_param_1
    repr_defined $I5004, fb_tmp_706
    unless $I5004 goto if2976_else6214 
    set $P5018, fb_tmp_706["multi_declarator"]
    set $P5020, $P5018
    goto if2976_end6215
  if2976_else6214:
    null $P5019
    set $P5020, $P5019
  if2976_end6215:
    unless_null $P5020, vivi_29776217
    nqp_get_sc_object $P5021, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5020, $P5021
  vivi_29776217:
    $P5022 = $P5020."ast"()
    set $P5029, $P5022
    goto if2973_end6209
  if2973_else6208:
.annotate 'line', 2276
    unless_null _lex_param_1, fallback6220
    nqp_get_sc_object $P5023, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5023
  fallback6220:
    set fb_tmp_707, _lex_param_1
    repr_defined $I5005, fb_tmp_707
    unless $I5005 goto if2978_else6218 
    set $P5024, fb_tmp_707["package_declarator"]
    set $P5026, $P5024
    goto if2978_end6219
  if2978_else6218:
    null $P5025
    set $P5026, $P5025
  if2978_end6219:
    unless_null $P5026, vivi_29796221
    nqp_get_sc_object $P5027, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5026, $P5027
  vivi_29796221:
    $P5028 = $P5026."ast"()
    set $P5029, $P5028
  if2973_end6209:
    set $P5030, $P5029
  if2968_end6199:
    $P5031 = _lex_param_1."!make"($P5030)
    .return ($P5031) 
.end
.HLL "nqp"
.namespace []
.sub "declarator" :subid("cuid_300_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2279
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_708 
    .local pmc fb_tmp_709 
    .local pmc fb_tmp_710 
.annotate 'line', 2280
    unless_null _lex_param_1, fallback6226
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback6226:
    set fb_tmp_708, _lex_param_1
    repr_defined $I5001, fb_tmp_708
    unless $I5001 goto if2981_else6224 
    set $P5002, fb_tmp_708["routine_declarator"]
    set $P5004, $P5002
    goto if2981_end6225
  if2981_else6224:
    null $P5003
    set $P5004, $P5003
  if2981_end6225:
    unless_null $P5004, vivi_29826227
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_29826227:
    unless $P5004 goto if2980_else6222 
.annotate 'line', 2281
    unless_null _lex_param_1, fallback6230
    nqp_get_sc_object $P5006, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5006
  fallback6230:
    set fb_tmp_709, _lex_param_1
    repr_defined $I5002, fb_tmp_709
    unless $I5002 goto if2983_else6228 
    set $P5007, fb_tmp_709["routine_declarator"]
    set $P5009, $P5007
    goto if2983_end6229
  if2983_else6228:
    null $P5008
    set $P5009, $P5008
  if2983_end6229:
    unless_null $P5009, vivi_29846231
    nqp_get_sc_object $P5010, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5009, $P5010
  vivi_29846231:
    $P5011 = $P5009."ast"()
    set $P5018, $P5011
    goto if2980_end6223
  if2980_else6222:
.annotate 'line', 2282
    unless_null _lex_param_1, fallback6234
    nqp_get_sc_object $P5012, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5012
  fallback6234:
    set fb_tmp_710, _lex_param_1
    repr_defined $I5003, fb_tmp_710
    unless $I5003 goto if2985_else6232 
    set $P5013, fb_tmp_710["variable_declarator"]
    set $P5015, $P5013
    goto if2985_end6233
  if2985_else6232:
    null $P5014
    set $P5015, $P5014
  if2985_end6233:
    unless_null $P5015, vivi_29866235
    nqp_get_sc_object $P5016, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5015, $P5016
  vivi_29866235:
    $P5017 = $P5015."ast"()
    set $P5018, $P5017
  if2980_end6223:
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<multi>" :subid("cuid_301_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2285
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_711 
    .local pmc fb_tmp_712 
    .local pmc fb_tmp_713 
    unless_null _lex_param_1, fallback6240
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback6240:
    set fb_tmp_711, _lex_param_1
    repr_defined $I5001, fb_tmp_711
    unless $I5001 goto if2988_else6238 
    set $P5002, fb_tmp_711["declarator"]
    set $P5004, $P5002
    goto if2988_end6239
  if2988_else6238:
    null $P5003
    set $P5004, $P5003
  if2988_end6239:
    unless_null $P5004, vivi_29896241
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_29896241:
    unless $P5004 goto if2987_else6236 
    unless_null _lex_param_1, fallback6244
    nqp_get_sc_object $P5006, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5006
  fallback6244:
    set fb_tmp_712, _lex_param_1
    repr_defined $I5002, fb_tmp_712
    unless $I5002 goto if2990_else6242 
    set $P5007, fb_tmp_712["declarator"]
    set $P5009, $P5007
    goto if2990_end6243
  if2990_else6242:
    null $P5008
    set $P5009, $P5008
  if2990_end6243:
    unless_null $P5009, vivi_29916245
    nqp_get_sc_object $P5010, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5009, $P5010
  vivi_29916245:
    $P5011 = $P5009."ast"()
    set $P5018, $P5011
    goto if2987_end6237
  if2987_else6236:
    unless_null _lex_param_1, fallback6248
    nqp_get_sc_object $P5012, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5012
  fallback6248:
    set fb_tmp_713, _lex_param_1
    repr_defined $I5003, fb_tmp_713
    unless $I5003 goto if2992_else6246 
    set $P5013, fb_tmp_713["routine_def"]
    set $P5015, $P5013
    goto if2992_end6247
  if2992_else6246:
    null $P5014
    set $P5015, $P5014
  if2992_end6247:
    unless_null $P5015, vivi_29936249
    nqp_get_sc_object $P5016, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5015, $P5016
  vivi_29936249:
    $P5017 = $P5015."ast"()
    set $P5018, $P5017
  if2987_end6237:
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<proto>" :subid("cuid_302_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2286
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_714 
    .local pmc fb_tmp_715 
    .local pmc fb_tmp_716 
    unless_null _lex_param_1, fallback6254
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback6254:
    set fb_tmp_714, _lex_param_1
    repr_defined $I5001, fb_tmp_714
    unless $I5001 goto if2995_else6252 
    set $P5002, fb_tmp_714["declarator"]
    set $P5004, $P5002
    goto if2995_end6253
  if2995_else6252:
    null $P5003
    set $P5004, $P5003
  if2995_end6253:
    unless_null $P5004, vivi_29966255
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_29966255:
    unless $P5004 goto if2994_else6250 
    unless_null _lex_param_1, fallback6258
    nqp_get_sc_object $P5006, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5006
  fallback6258:
    set fb_tmp_715, _lex_param_1
    repr_defined $I5002, fb_tmp_715
    unless $I5002 goto if2997_else6256 
    set $P5007, fb_tmp_715["declarator"]
    set $P5009, $P5007
    goto if2997_end6257
  if2997_else6256:
    null $P5008
    set $P5009, $P5008
  if2997_end6257:
    unless_null $P5009, vivi_29986259
    nqp_get_sc_object $P5010, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5009, $P5010
  vivi_29986259:
    $P5011 = $P5009."ast"()
    set $P5018, $P5011
    goto if2994_end6251
  if2994_else6250:
    unless_null _lex_param_1, fallback6262
    nqp_get_sc_object $P5012, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5012
  fallback6262:
    set fb_tmp_716, _lex_param_1
    repr_defined $I5003, fb_tmp_716
    unless $I5003 goto if2999_else6260 
    set $P5013, fb_tmp_716["routine_def"]
    set $P5015, $P5013
    goto if2999_end6261
  if2999_else6260:
    null $P5014
    set $P5015, $P5014
  if2999_end6261:
    unless_null $P5015, vivi_30006263
    nqp_get_sc_object $P5016, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5015, $P5016
  vivi_30006263:
    $P5017 = $P5015."ast"()
    set $P5018, $P5017
  if2994_end6251:
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<null>" :subid("cuid_303_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2287
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_717 
    unless_null _lex_param_1, fallback6266
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback6266:
    set fb_tmp_717, _lex_param_1
    repr_defined $I5001, fb_tmp_717
    unless $I5001 goto if3001_else6264 
    set $P5002, fb_tmp_717["declarator"]
    set $P5004, $P5002
    goto if3001_end6265
  if3001_else6264:
    null $P5003
    set $P5004, $P5003
  if3001_end6265:
    unless_null $P5004, vivi_30026267
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_30026267:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "variable_declarator" :subid("cuid_304_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2290
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5095 = 'cuid_467_1360432459.413' 
    capture_lex $P5095 
    .const 'Sub' $P5095 = 'cuid_469_1360432459.413' 
    capture_lex $P5095 
    .const 'Sub' $P5095 = 'cuid_470_1360432459.413' 
    capture_lex $P5095 
    .lex "$past", $P101 
    .lex "$sigil", $P102 
    .lex "$name", $P103 
    .lex "$BLOCK", $P104 
    .lex "$*DECLARAND_ATTR", $P105 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_718 
    .local pmc fb_tmp_719 
    .local pmc fb_tmp_720 
    .local pmc fb_tmp_721 
    .local pmc fb_tmp_722 
    .local pmc fb_tmp_723 
    .local pmc fb_tmp_740 
    .local pmc fb_tmp_741 
    .local pmc fb_tmp_742 
    .local pmc fb_tmp_750 
    .local pmc fb_tmp_751 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P105, $P5005
.annotate 'line', 2291
    unless_null _lex_param_1, fallback6270
    nqp_get_sc_object $P5006, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5006
  fallback6270:
    set fb_tmp_718, _lex_param_1
    repr_defined $I5001, fb_tmp_718
    unless $I5001 goto if3003_else6268 
    set $P5007, fb_tmp_718["variable"]
    set $P5009, $P5007
    goto if3003_end6269
  if3003_else6268:
    null $P5008
    set $P5009, $P5008
  if3003_end6269:
    unless_null $P5009, vivi_30046271
    nqp_get_sc_object $P5010, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5009, $P5010
  vivi_30046271:
    $P5011 = $P5009."ast"()
    set $P101, $P5011
    unless_null _lex_param_1, fallback6276
    nqp_get_sc_object $P5012, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5012
  fallback6276:
    set fb_tmp_720, _lex_param_1
    repr_defined $I5003, fb_tmp_720
    unless $I5003 goto if3006_else6274 
    set $P5013, fb_tmp_720["variable"]
    set $P5015, $P5013
    goto if3006_end6275
  if3006_else6274:
    null $P5014
    set $P5015, $P5014
  if3006_end6275:
    unless_null $P5015, vivi_30076277
    nqp_get_sc_object $P5016, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5015, $P5016
  vivi_30076277:
    set fb_tmp_719, $P5015
    repr_defined $I5002, fb_tmp_719
    unless $I5002 goto if3005_else6272 
    set $P5017, fb_tmp_719["sigil"]
    set $P5019, $P5017
    goto if3005_end6273
  if3005_else6272:
    null $P5018
    set $P5019, $P5018
  if3005_end6273:
    unless_null $P5019, vivi_30086278
    nqp_get_sc_object $P5020, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5019, $P5020
  vivi_30086278:
    set $P102, $P5019
.annotate 'line', 2293
    $P5021 = $P101."name"()
    set $P103, $P5021
.annotate 'line', 2294
    find_dynamic_lex $P5022, "$*W"
    unless_null $P5022, fallback6279
    nqp_get_sc_object $P5024, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5023, $P5024
    set fb_tmp_721, $P5023
    repr_defined $I5004, fb_tmp_721
    unless $I5004 goto if3009_else6280 
    set $P5025, fb_tmp_721["$W"]
    set $P5027, $P5025
    goto if3009_end6281
  if3009_else6280:
    null $P5026
    set $P5027, $P5026
  if3009_end6281:
    unless_null $P5027, vivi_30106282
    nqp_get_sc_object $P5028, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5027, $P5028
  vivi_30106282:
    unless_null $P5027, vivi_30116283
    die "Contextual $*W not found"
    box $P5029, "Contextual $*W not found"
    set $P5027, $P5029
  vivi_30116283:
    set $P5022, $P5027
  fallback6279:
    $P5030 = $P5022."cur_lexpad"()
    set $P104, $P5030
    set $P5039, $P103
    unless $P103 goto if3016_end6292 
.annotate 'line', 2296
    $P5038 = $P104."symbol"($P103)
    set $P5039, $P5038
  if3016_end6292:
    unless $P5039 goto if3015_end6290 
.annotate 'line', 2297
    $P5040 = _lex_param_1."CURSOR"()
    $P5041 = $P5040."panic"("Redeclaration of symbol ", $P103)
  if3015_end6290:
    find_dynamic_lex $P5042, "$*SCOPE"
    unless_null $P5042, fallback6295
    nqp_get_sc_object $P5044, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5043, $P5044
    set fb_tmp_723, $P5043
    repr_defined $I5007, fb_tmp_723
    unless $I5007 goto if3018_else6296 
    set $P5045, fb_tmp_723["$SCOPE"]
    set $P5047, $P5045
    goto if3018_end6297
  if3018_else6296:
    null $P5046
    set $P5047, $P5046
  if3018_end6297:
    unless_null $P5047, vivi_30196298
    nqp_get_sc_object $P5048, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5047, $P5048
  vivi_30196298:
    unless_null $P5047, vivi_30206299
    die "Contextual $*SCOPE not found"
    box $P5049, "Contextual $*SCOPE not found"
    set $P5047, $P5049
  vivi_30206299:
    set $P5042, $P5047
  fallback6295:
    set $S5001, $P5042
    iseq $I5006, $S5001, "has"
    unless $I5006 goto if3017_else6293 
    .const 'Sub' $P5050 = 'cuid_467_1360432459.413' 
    capture_lex $P5050
    $P5051 = $P5050()
    goto if3017_end6294
  if3017_else6293:
    find_dynamic_lex $P5052, "$*SCOPE"
    unless_null $P5052, fallback6383
    nqp_get_sc_object $P5054, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5053, $P5054
    set fb_tmp_740, $P5053
    repr_defined $I5009, fb_tmp_740
    unless $I5009 goto if3070_else6384 
    set $P5055, fb_tmp_740["$SCOPE"]
    set $P5057, $P5055
    goto if3070_end6385
  if3070_else6384:
    null $P5056
    set $P5057, $P5056
  if3070_end6385:
    unless_null $P5057, vivi_30716386
    nqp_get_sc_object $P5058, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5057, $P5058
  vivi_30716386:
    unless_null $P5057, vivi_30726387
    die "Contextual $*SCOPE not found"
    box $P5059, "Contextual $*SCOPE not found"
    set $P5057, $P5059
  vivi_30726387:
    set $P5052, $P5057
  fallback6383:
    set $S5002, $P5052
    iseq $I5008, $S5002, "our"
    unless $I5008 goto if3069_else6381 
.annotate 'line', 2327
    unless_null _lex_param_1, fallback6392
    nqp_get_sc_object $P5060, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5060
  fallback6392:
    set fb_tmp_741, _lex_param_1
    repr_defined $I5010, fb_tmp_741
    unless $I5010 goto if3074_else6390 
    set $P5061, fb_tmp_741["typename"]
    set $P5063, $P5061
    goto if3074_end6391
  if3074_else6390:
    null $P5062
    set $P5063, $P5062
  if3074_end6391:
    unless_null $P5063, vivi_30756393
    nqp_get_sc_object $P5064, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5063, $P5064
  vivi_30756393:
    unless $P5063 goto if3073_end6389 
.annotate 'line', 2331
.annotate 'line', 2332
    $P5065 = _lex_param_1."CURSOR"()
    $P5066 = $P5065."panic"("Cannot put types on our-scoped variables")
  if3073_end6389:
    unless_null _lex_param_1, fallback6396
    nqp_get_sc_object $P5067, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5067
  fallback6396:
    set fb_tmp_742, _lex_param_1
    repr_defined $I5011, fb_tmp_742
    unless $I5011 goto if3076_else6394 
    set $P5068, fb_tmp_742["variable"]
    set $P5070, $P5068
    goto if3076_end6395
  if3076_else6394:
    null $P5069
    set $P5070, $P5069
  if3076_end6395:
    unless_null $P5070, vivi_30776397
    nqp_get_sc_object $P5071, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5070, $P5071
  vivi_30776397:
    set $S5003, $P5070
    box $P5072, $S5003
    set $P103, $P5072
.annotate 'line', 2335
    new $P5073, 'ResizablePMCArray'
    push $P5073, $P103
    $P5074 = "&lexical_package_lookup"($P5073, _lex_param_1)
    set $P101, $P5074
.annotate 'line', 2336
    $P5075 = $P104."symbol"($P103, "package" :named("scope"))
    set $P5078, $P5075
    goto if3069_end6382
  if3069_else6381:
    .const 'Sub' $P5076 = 'cuid_469_1360432459.413' 
    capture_lex $P5076
    $P5077 = $P5076()
    set $P5078, $P5077
  if3069_end6382:
  if3017_end6294:
    unless_null _lex_param_1, fallback6433
    nqp_get_sc_object $P5079, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5079
  fallback6433:
    set fb_tmp_750, _lex_param_1
    repr_defined $I5012, fb_tmp_750
    unless $I5012 goto if3097_else6431 
    set $P5080, fb_tmp_750["trait"]
    set $P5082, $P5080
    goto if3097_end6432
  if3097_else6431:
    null $P5081
    set $P5082, $P5081
  if3097_end6432:
    unless_null $P5082, vivi_30986434
    nqp_get_sc_object $P5083, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5082, $P5083
  vivi_30986434:
    unless $P5082 goto if3096_end6430 
.annotate 'line', 2365
    unless_null _lex_param_1, fallback6437
    nqp_get_sc_object $P5087, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5087
  fallback6437:
    set fb_tmp_751, _lex_param_1
    repr_defined $I5013, fb_tmp_751
    unless $I5013 goto if3099_else6435 
    set $P5088, fb_tmp_751["trait"]
    set $P5090, $P5088
    goto if3099_end6436
  if3099_else6435:
    null $P5089
    set $P5090, $P5089
  if3099_end6436:
    unless_null $P5090, vivi_31006438
    nqp_get_sc_object $P5091, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5090, $P5091
  vivi_31006438:
    set $P5084, $P5090
    iter $P5086, $P5090
  for_next6439:
    unless $P5086, for_done6441
    shift $P5093, $P5086
  for_redo6440:
    .const 'Sub' $P5092 = 'cuid_470_1360432459.413' 
    capture_lex $P5092
    $P5084 = $P5092($P5093)
    goto for_next6439
  for_done6441:
  if3096_end6430:
.annotate 'line', 2369
    $P5094 = _lex_param_1."!make"($P101)
    .return ($P5094) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_467_1360432459.413") :anon :lex :outer("cuid_304_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2299
    .lex "%lit_args", $P101 
    .lex "%obj_args", $P102 
    .local pmc fb_tmp_724 
    .local pmc fb_tmp_725 
    .local pmc fb_tmp_726 
    .local pmc fb_tmp_727 
    .local pmc fb_tmp_728 
    .local pmc fb_tmp_729 
    .local pmc fb_tmp_730 
    .local pmc fb_tmp_731 
    .local pmc fb_tmp_732 
    .local pmc fb_tmp_733 
    .local pmc fb_tmp_734 
    .local pmc fb_tmp_735 
    .local pmc fb_tmp_736 
    .local pmc fb_tmp_737 
    .local pmc fb_tmp_738 
    .local pmc fb_tmp_739 
    new $P5001, 'Hash'
    set $P101, $P5001
    new $P5002, 'Hash'
    set $P102, $P5002
    find_dynamic_lex $P5003, "%*HOW"
    unless_null $P5003, fallback6302
    nqp_get_sc_object $P5005, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5004, $P5005
    set fb_tmp_724, $P5004
    repr_defined $I5002, fb_tmp_724
    unless $I5002 goto if3022_else6303 
    set $P5006, fb_tmp_724["%HOW"]
    set $P5008, $P5006
    goto if3022_end6304
  if3022_else6303:
    null $P5007
    set $P5008, $P5007
  if3022_end6304:
    unless_null $P5008, vivi_30236305
    nqp_get_sc_object $P5010, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5009, $P5010
    new $P5011, 'Hash'
    set $P5009["%HOW"], $P5011
    set $P5008, $P5011
  vivi_30236305:
    unless_null $P5008, vivi_30246306
    die "Contextual %*HOW not found"
    box $P5012, "Contextual %*HOW not found"
    set $P5008, $P5012
  vivi_30246306:
    set $P5003, $P5008
  fallback6302:
    find_dynamic_lex $P5013, "$*PKGDECL"
    unless_null $P5013, fallback6307
    nqp_get_sc_object $P5015, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5014, $P5015
    set fb_tmp_725, $P5014
    repr_defined $I5003, fb_tmp_725
    unless $I5003 goto if3025_else6308 
    set $P5016, fb_tmp_725["$PKGDECL"]
    set $P5018, $P5016
    goto if3025_end6309
  if3025_else6308:
    null $P5017
    set $P5018, $P5017
  if3025_end6309:
    unless_null $P5018, vivi_30266310
    nqp_get_sc_object $P5019, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5018, $P5019
  vivi_30266310:
    unless_null $P5018, vivi_30276311
    die "Contextual $*PKGDECL not found"
    box $P5020, "Contextual $*PKGDECL not found"
    set $P5018, $P5020
  vivi_30276311:
    set $P5013, $P5018
  fallback6307:
    set $S5002, $P5013
    concat $S5001, $S5002, "-attr"
    exists $I5001, $P5003[$S5001]
    if $I5001 goto unless3021_end6301 
.annotate 'line', 2301
.annotate 'line', 2302
    find_lex $P5021, "$/"
    $P5022 = $P5021."CURSOR"()
    find_dynamic_lex $P5023, "$*PKGDECL"
    unless_null $P5023, fallback6312
    nqp_get_sc_object $P5025, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5024, $P5025
    set fb_tmp_726, $P5024
    repr_defined $I5004, fb_tmp_726
    unless $I5004 goto if3028_else6313 
    set $P5026, fb_tmp_726["$PKGDECL"]
    set $P5028, $P5026
    goto if3028_end6314
  if3028_else6313:
    null $P5027
    set $P5028, $P5027
  if3028_end6314:
    unless_null $P5028, vivi_30296315
    nqp_get_sc_object $P5029, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5028, $P5029
  vivi_30296315:
    unless_null $P5028, vivi_30306316
    die "Contextual $*PKGDECL not found"
    box $P5030, "Contextual $*PKGDECL not found"
    set $P5028, $P5030
  vivi_30306316:
    set $P5023, $P5028
  fallback6312:
    set $S5004, $P5023
    concat $S5003, $S5004, " packages do not support attributes"
    $P5031 = $P5022."panic"($S5003)
  unless3021_end6301:
    find_lex $P5032, "$name"
    set $P101["name"], $P5032
    find_lex $P5033, "$/"
    unless_null $P5033, fallback6321
    nqp_get_sc_object $P5034, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5033, $P5034
  fallback6321:
    set fb_tmp_727, $P5033
    repr_defined $I5005, fb_tmp_727
    unless $I5005 goto if3032_else6319 
    set $P5035, fb_tmp_727["typename"]
    set $P5037, $P5035
    goto if3032_end6320
  if3032_else6319:
    null $P5036
    set $P5037, $P5036
  if3032_end6320:
    unless_null $P5037, vivi_30336322
    nqp_get_sc_object $P5038, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5037, $P5038
  vivi_30336322:
    unless $P5037 goto if3031_end6318 
.annotate 'line', 2309
.annotate 'line', 2310
    find_dynamic_lex $P5039, "$*W"
    unless_null $P5039, fallback6323
    nqp_get_sc_object $P5041, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5040, $P5041
    set fb_tmp_728, $P5040
    repr_defined $I5006, fb_tmp_728
    unless $I5006 goto if3034_else6324 
    set $P5042, fb_tmp_728["$W"]
    set $P5044, $P5042
    goto if3034_end6325
  if3034_else6324:
    null $P5043
    set $P5044, $P5043
  if3034_end6325:
    unless_null $P5044, vivi_30356326
    nqp_get_sc_object $P5045, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5044, $P5045
  vivi_30356326:
    unless_null $P5044, vivi_30366327
    die "Contextual $*W not found"
    box $P5046, "Contextual $*W not found"
    set $P5044, $P5046
  vivi_30366327:
    set $P5039, $P5044
  fallback6323:
    new $P5047, 'ResizablePMCArray'
    find_lex $P5048, "$/"
    unless_null $P5048, fallback6332
    nqp_get_sc_object $P5049, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5048, $P5049
  fallback6332:
    set fb_tmp_730, $P5048
    repr_defined $I5008, fb_tmp_730
    unless $I5008 goto if3038_else6330 
    set $P5050, fb_tmp_730["typename"]
    set $P5052, $P5050
    goto if3038_end6331
  if3038_else6330:
    null $P5051
    set $P5052, $P5051
  if3038_end6331:
    unless_null $P5052, vivi_30396333
    nqp_get_sc_object $P5053, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5052, $P5053
  vivi_30396333:
    set fb_tmp_729, $P5052
    repr_defined $I5007, fb_tmp_729
    unless $I5007 goto if3037_else6328 
    set $P5054, fb_tmp_729[0]
    set $P5056, $P5054
    goto if3037_end6329
  if3037_else6328:
    null $P5055
    set $P5056, $P5055
  if3037_end6329:
    unless_null $P5056, vivi_30406334
    nqp_get_sc_object $P5057, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5056, $P5057
  vivi_30406334:
    set $S5005, $P5056
    box $P5058, $S5005
    push $P5047, $P5058
    $P5059 = $P5039."find_sym"($P5047)
    set $P102["type"], $P5059
  if3031_end6318:
    find_lex $P5060, "$sigil"
    set $S5006, $P5060
    iseq $I5009, $S5006, "$"
    set $I5011, $I5009
    if $I5009 goto unless3042_end6338 
    find_lex $P5061, "$sigil"
    set $S5007, $P5061
    iseq $I5010, $S5007, "&"
    set $I5011, $I5010
  unless3042_end6338:
    unless $I5011 goto if3041_end6336 
.annotate 'line', 2312
    find_lex $P5062, "$/"
    unless_null $P5062, fallback6343
    nqp_get_sc_object $P5063, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5062, $P5063
  fallback6343:
    set fb_tmp_731, $P5062
    repr_defined $I5012, fb_tmp_731
    unless $I5012 goto if3044_else6341 
    set $P5064, fb_tmp_731["typename"]
    set $P5066, $P5064
    goto if3044_end6342
  if3044_else6341:
    null $P5065
    set $P5066, $P5065
  if3044_end6342:
    unless_null $P5066, vivi_30456344
    nqp_get_sc_object $P5067, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5066, $P5067
  vivi_30456344:
    unless $P5066 goto if3043_else6339 
.annotate 'line', 2313
    set fb_tmp_732, $P102
    repr_defined $I5013, fb_tmp_732
    unless $I5013 goto if3046_else6345 
    set $P5068, fb_tmp_732["type"]
    set $P5070, $P5068
    goto if3046_end6346
  if3046_else6345:
    null $P5069
    set $P5070, $P5069
  if3046_end6346:
    unless_null $P5070, vivi_30476347
    nqp_get_sc_object $P5071, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5070, $P5071
  vivi_30476347:
    set $P102["default"], $P5070
    set $P5085, $P5070
    goto if3043_end6340
  if3043_else6339:
.annotate 'line', 2316
    new $P5083, 'ExceptionHandler'
    set_label $P5083, catch_handler_30526354
    $P5083.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5083
.annotate 'line', 2317
    find_dynamic_lex $P5072, "$*W"
    unless_null $P5072, fallback6348
    nqp_get_sc_object $P5074, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5073, $P5074
    set fb_tmp_733, $P5073
    repr_defined $I5014, fb_tmp_733
    unless $I5014 goto if3048_else6349 
    set $P5075, fb_tmp_733["$W"]
    set $P5077, $P5075
    goto if3048_end6350
  if3048_else6349:
    null $P5076
    set $P5077, $P5076
  if3048_end6350:
    unless_null $P5077, vivi_30496351
    nqp_get_sc_object $P5078, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5077, $P5078
  vivi_30496351:
    unless_null $P5077, vivi_30506352
    die "Contextual $*W not found"
    box $P5079, "Contextual $*W not found"
    set $P5077, $P5079
  vivi_30506352:
    set $P5072, $P5077
  fallback6348:
    new $P5080, 'ResizablePMCArray'
    box $P5081, "NQPMu"
    push $P5080, $P5081
    $P5082 = $P5072."find_sym"($P5080)
    set $P102["default"], $P5082
    set $P5084, $P5082
    pop_eh 
    goto skip_handler_30516353
  catch_handler_30526354:
    .get_results ($P5083) 
    set $I10001, 1
    set $P5083["handled"], $I10001
    nqp_get_sc_object $P10001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    finalize $P5083
    pop_upto_eh $P5083
    pop_eh 
    set $P5084, $P10001
    goto skip_handler_30516353
  skip_handler_30516353:
    set $P5085, $P5084
  if3043_end6340:
  if3041_end6336:
.annotate 'line', 2322
    find_dynamic_lex $P5086, "$*W"
    unless_null $P5086, fallback6355
    nqp_get_sc_object $P5088, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5087, $P5088
    set fb_tmp_734, $P5087
    repr_defined $I5015, fb_tmp_734
    unless $I5015 goto if3053_else6356 
    set $P5089, fb_tmp_734["$W"]
    set $P5091, $P5089
    goto if3053_end6357
  if3053_else6356:
    null $P5090
    set $P5091, $P5090
  if3053_end6357:
    unless_null $P5091, vivi_30546358
    nqp_get_sc_object $P5092, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5091, $P5092
  vivi_30546358:
    unless_null $P5091, vivi_30556359
    die "Contextual $*W not found"
    box $P5093, "Contextual $*W not found"
    set $P5091, $P5093
  vivi_30556359:
    set $P5086, $P5091
  fallback6355:
    find_dynamic_lex $P5094, "$*PACKAGE"
    unless_null $P5094, fallback6360
    nqp_get_sc_object $P5096, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5095, $P5096
    set fb_tmp_735, $P5095
    repr_defined $I5016, fb_tmp_735
    unless $I5016 goto if3056_else6361 
    set $P5097, fb_tmp_735["$PACKAGE"]
    set $P5099, $P5097
    goto if3056_end6362
  if3056_else6361:
    null $P5098
    set $P5099, $P5098
  if3056_end6362:
    unless_null $P5099, vivi_30576363
    nqp_get_sc_object $P5100, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5099, $P5100
  vivi_30576363:
    unless_null $P5099, vivi_30586364
    die "Contextual $*PACKAGE not found"
    box $P5101, "Contextual $*PACKAGE not found"
    set $P5099, $P5101
  vivi_30586364:
    set $P5094, $P5099
  fallback6360:
    find_dynamic_lex $P5102, "%*HOW"
    unless_null $P5102, fallback6367
    nqp_get_sc_object $P5104, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5103, $P5104
    set fb_tmp_737, $P5103
    repr_defined $I5018, fb_tmp_737
    unless $I5018 goto if3060_else6368 
    set $P5105, fb_tmp_737["%HOW"]
    set $P5107, $P5105
    goto if3060_end6369
  if3060_else6368:
    null $P5106
    set $P5107, $P5106
  if3060_end6369:
    unless_null $P5107, vivi_30616370
    nqp_get_sc_object $P5109, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5108, $P5109
    new $P5110, 'Hash'
    set $P5108["%HOW"], $P5110
    set $P5107, $P5110
  vivi_30616370:
    unless_null $P5107, vivi_30626371
    die "Contextual %*HOW not found"
    box $P5111, "Contextual %*HOW not found"
    set $P5107, $P5111
  vivi_30626371:
    set $P5102, $P5107
  fallback6367:
    set fb_tmp_736, $P5102
    repr_defined $I5017, fb_tmp_736
    unless $I5017 goto if3059_else6365 
    find_dynamic_lex $P5113, "$*PKGDECL"
    unless_null $P5113, fallback6372
    nqp_get_sc_object $P5115, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5114, $P5115
    set fb_tmp_738, $P5114
    repr_defined $I5019, fb_tmp_738
    unless $I5019 goto if3063_else6373 
    set $P5116, fb_tmp_738["$PKGDECL"]
    set $P5118, $P5116
    goto if3063_end6374
  if3063_else6373:
    null $P5117
    set $P5118, $P5117
  if3063_end6374:
    unless_null $P5118, vivi_30646375
    nqp_get_sc_object $P5119, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5118, $P5119
  vivi_30646375:
    unless_null $P5118, vivi_30656376
    die "Contextual $*PKGDECL not found"
    box $P5120, "Contextual $*PKGDECL not found"
    set $P5118, $P5120
  vivi_30656376:
    set $P5113, $P5118
  fallback6372:
    set $S5009, $P5113
    concat $S5008, $S5009, "-attr"
    set $P5112, fb_tmp_736[$S5008]
    set $P5122, $P5112
    goto if3059_end6366
  if3059_else6365:
    null $P5121
    set $P5122, $P5121
  if3059_end6366:
    unless_null $P5122, vivi_30666377
    nqp_get_sc_object $P5123, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5122, $P5123
  vivi_30666377:
    $P5124 = $P5086."pkg_add_attribute"($P5094, $P5122, $P101, $P102)
    store_dynamic_lex "$*DECLARAND_ATTR", $P5124
.annotate 'line', 2325
    nqp_get_sc_object $P5127, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5126, $P5127, "QAST"
    get_who $P5125, $P5126
    set fb_tmp_739, $P5125
    repr_defined $I5020, fb_tmp_739
    unless $I5020 goto if3067_else6378 
    set $P5128, fb_tmp_739["Stmts"]
    set $P5130, $P5128
    goto if3067_end6379
  if3067_else6378:
    null $P5129
    set $P5130, $P5129
  if3067_end6379:
    unless_null $P5130, vivi_30686380
    nqp_get_sc_object $P5131, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5130, $P5131
  vivi_30686380:
    $P5132 = $P5130."new"()
    store_lex "$past", $P5132
    .return ($P5132) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_469_1360432459.413") :anon :lex :outer("cuid_304_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2338
    .const 'Sub' $P5068 = 'cuid_468_1360432459.413' 
    capture_lex $P5068 
    .lex "$type", $P101 
    .lex "$default", $P102 
    .local pmc fb_tmp_743 
    .local pmc fb_tmp_744 
    .local pmc fb_tmp_745 
    .local pmc fb_tmp_746 
    .local pmc fb_tmp_747 
    .local pmc fb_tmp_748 
    .local pmc fb_tmp_749 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
    find_lex $P5003, "$/"
    unless_null $P5003, fallback6402
    nqp_get_sc_object $P5004, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5003, $P5004
  fallback6402:
    set fb_tmp_743, $P5003
    repr_defined $I5001, fb_tmp_743
    unless $I5001 goto if3079_else6400 
    set $P5005, fb_tmp_743["typename"]
    set $P5007, $P5005
    goto if3079_end6401
  if3079_else6400:
    null $P5006
    set $P5007, $P5006
  if3079_end6401:
    unless_null $P5007, vivi_30806403
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5007, $P5008
  vivi_30806403:
    unless $P5007 goto if3078_else6398 
.annotate 'line', 2341
    find_lex $P5009, "$sigil"
    set $S5001, $P5009
    iseq $I5002, $S5001, "$"
    if $I5002 goto unless3081_end6405 
.annotate 'line', 2342
.annotate 'line', 2343
    find_lex $P5010, "$/"
    $P5011 = $P5010."CURSOR"()
    $P5012 = $P5011."panic"("Only typed scalars are currently supported in NQP")
  unless3081_end6405:
.annotate 'line', 2345
    find_dynamic_lex $P5013, "$*W"
    unless_null $P5013, fallback6406
    nqp_get_sc_object $P5015, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5014, $P5015
    set fb_tmp_744, $P5014
    repr_defined $I5003, fb_tmp_744
    unless $I5003 goto if3082_else6407 
    set $P5016, fb_tmp_744["$W"]
    set $P5018, $P5016
    goto if3082_end6408
  if3082_else6407:
    null $P5017
    set $P5018, $P5017
  if3082_end6408:
    unless_null $P5018, vivi_30836409
    nqp_get_sc_object $P5019, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5018, $P5019
  vivi_30836409:
    unless_null $P5018, vivi_30846410
    die "Contextual $*W not found"
    box $P5020, "Contextual $*W not found"
    set $P5018, $P5020
  vivi_30846410:
    set $P5013, $P5018
  fallback6406:
    new $P5021, 'ResizablePMCArray'
    find_lex $P5022, "$/"
    unless_null $P5022, fallback6415
    nqp_get_sc_object $P5023, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5022, $P5023
  fallback6415:
    set fb_tmp_746, $P5022
    repr_defined $I5005, fb_tmp_746
    unless $I5005 goto if3086_else6413 
    set $P5024, fb_tmp_746["typename"]
    set $P5026, $P5024
    goto if3086_end6414
  if3086_else6413:
    null $P5025
    set $P5026, $P5025
  if3086_end6414:
    unless_null $P5026, vivi_30876416
    nqp_get_sc_object $P5027, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5026, $P5027
  vivi_30876416:
    set fb_tmp_745, $P5026
    repr_defined $I5004, fb_tmp_745
    unless $I5004 goto if3085_else6411 
    set $P5028, fb_tmp_745[0]
    set $P5030, $P5028
    goto if3085_end6412
  if3085_else6411:
    null $P5029
    set $P5030, $P5029
  if3085_end6412:
    unless_null $P5030, vivi_30886417
    nqp_get_sc_object $P5031, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5030, $P5031
  vivi_30886417:
    set $S5002, $P5030
    box $P5032, $S5002
    push $P5021, $P5032
    $P5033 = $P5013."find_sym"($P5021)
    set $P101, $P5033
    repr_get_primitive_type_spec $I5006, $P101
    unless $I5006 goto if3089_else6418 
    .const 'Sub' $P5034 = 'cuid_468_1360432459.413' 
    capture_lex $P5034
    $P5035 = $P5034($I5006)
    set $P5039, $P5035
    goto if3089_end6419
  if3089_else6418:
.annotate 'line', 2349
.annotate 'line', 2350
    find_lex $P5036, "$/"
    $P5037 = $P5036."CURSOR"()
    $P5038 = $P5037."panic"("Only native types are currently supported/checked")
    set $P5039, $P5038
  if3089_end6419:
    goto if3078_end6399
  if3078_else6398:
.annotate 'line', 2353
.annotate 'line', 2354
    find_lex $P5040, "$sigil"
    $P5041 = "&default_for"($P5040)
    set $P102, $P5041
  if3078_end6399:
.annotate 'line', 2356
    find_lex $P5042, "$BLOCK"
    set fb_tmp_747, $P5042
    repr_defined $I5007, fb_tmp_747
    unless $I5007 goto if3090_else6420 
    set $P5043, fb_tmp_747[0]
    set $P5045, $P5043
    goto if3090_end6421
  if3090_else6420:
    null $P5044
    set $P5045, $P5044
  if3090_end6421:
    unless_null $P5045, vivi_30916422
    nqp_get_sc_object $P5046, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5045, $P5046
  vivi_30916422:
    nqp_get_sc_object $P5049, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5048, $P5049, "QAST"
    get_who $P5047, $P5048
    set fb_tmp_748, $P5047
    repr_defined $I5008, fb_tmp_748
    unless $I5008 goto if3092_else6423 
    set $P5050, fb_tmp_748["Op"]
    set $P5052, $P5050
    goto if3092_end6424
  if3092_else6423:
    null $P5051
    set $P5052, $P5051
  if3092_end6424:
    unless_null $P5052, vivi_30936425
    nqp_get_sc_object $P5053, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5052, $P5053
  vivi_30936425:
    find_lex $P5054, "$/"
.annotate 'line', 2358
    nqp_get_sc_object $P5057, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5056, $P5057, "QAST"
    get_who $P5055, $P5056
    set fb_tmp_749, $P5055
    repr_defined $I5009, fb_tmp_749
    unless $I5009 goto if3094_else6426 
    set $P5058, fb_tmp_749["Var"]
    set $P5060, $P5058
    goto if3094_end6427
  if3094_else6426:
    null $P5059
    set $P5060, $P5059
  if3094_end6427:
    unless_null $P5060, vivi_30956428
    nqp_get_sc_object $P5061, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5060, $P5061
  vivi_30956428:
    find_lex $P5062, "$name"
    $P5063 = $P5060."new"($P5062 :named("name"), "lexical" :named("scope"), "var" :named("decl"), $P101 :named("returns"))
    $P5064 = $P5052."new"($P5063, $P102, "bind" :named("op"), $P5054 :named("node"))
    $P5045."push"($P5064)
.annotate 'line', 2361
    find_lex $P5065, "$BLOCK"
    find_lex $P5066, "$name"
    $P5067 = $P5065."symbol"($P5066, "lexical" :named("scope"), $P101 :named("type"))
    .return ($P5067) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_468_1360432459.413") :anon :lex :outer("cuid_469_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2346
    .param pmc _lex_param_0 
    .lex "$prim_spec", _lex_param_0 
.annotate 'line', 2347
    $P5001 = "&default_value_for_prim"(_lex_param_0)
    store_lex "$default", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_470_1360432459.413") :anon :lex :outer("cuid_304_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2366
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5002, "$/"
    $P5001 = _lex_param_0."ast"()
    $P5003 = $P5001($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator:sym<sub>" :subid("cuid_305_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2372
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_752 
    unless_null _lex_param_1, fallback6444
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback6444:
    set fb_tmp_752, _lex_param_1
    repr_defined $I5001, fb_tmp_752
    unless $I5001 goto if3101_else6442 
    set $P5002, fb_tmp_752["routine_def"]
    set $P5004, $P5002
    goto if3101_end6443
  if3101_else6442:
    null $P5003
    set $P5004, $P5003
  if3101_end6443:
    unless_null $P5004, vivi_31026445
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_31026445:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator:sym<method>" :subid("cuid_306_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2373
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_753 
    unless_null _lex_param_1, fallback6448
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback6448:
    set fb_tmp_753, _lex_param_1
    repr_defined $I5001, fb_tmp_753
    unless $I5001 goto if3103_else6446 
    set $P5002, fb_tmp_753["method_def"]
    set $P5004, $P5002
    goto if3103_end6447
  if3103_else6446:
    null $P5003
    set $P5004, $P5003
  if3103_end6447:
    unless_null $P5004, vivi_31046449
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_31046449:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "routine_def" :subid("cuid_307_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2375
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5080 = 'cuid_474_1360432459.413' 
    capture_lex $P5080 
    .const 'Sub' $P5080 = 'cuid_477_1360432459.413' 
    capture_lex $P5080 
    .lex "$past", $P101 
    .lex "$block", $P102 
    .lex "$lexpast", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_754 
    .local pmc fb_tmp_755 
    .local pmc fb_tmp_756 
    .local pmc fb_tmp_757 
    .local pmc fb_tmp_758 
    .local pmc fb_tmp_806 
    .local pmc fb_tmp_807 
    .local pmc fb_tmp_808 
    .local pmc fb_tmp_809 
    .local pmc fb_tmp_810 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P103, $P5003
    unless_null _lex_param_1, fallback6454
    nqp_get_sc_object $P5004, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5004
  fallback6454:
    set fb_tmp_754, _lex_param_1
    repr_defined $I5001, fb_tmp_754
    unless $I5001 goto if3106_else6452 
    set $P5005, fb_tmp_754["onlystar"]
    set $P5007, $P5005
    goto if3106_end6453
  if3106_else6452:
    null $P5006
    set $P5007, $P5006
  if3106_end6453:
    unless_null $P5007, vivi_31076455
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5007, $P5008
  vivi_31076455:
    unless $P5007 goto if3105_else6450 
.annotate 'line', 2379
.annotate 'line', 2380
    $P5009 = "&only_star_block"()
    set $P101, $P5009
    goto if3105_end6451
  if3105_else6450:
.annotate 'line', 2382
.annotate 'line', 2383
    unless_null _lex_param_1, fallback6458
    nqp_get_sc_object $P5010, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5010
  fallback6458:
    set fb_tmp_755, _lex_param_1
    repr_defined $I5002, fb_tmp_755
    unless $I5002 goto if3108_else6456 
    set $P5011, fb_tmp_755["blockoid"]
    set $P5013, $P5011
    goto if3108_end6457
  if3108_else6456:
    null $P5012
    set $P5013, $P5012
  if3108_end6457:
    unless_null $P5013, vivi_31096459
    nqp_get_sc_object $P5014, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5013, $P5014
  vivi_31096459:
    $P5015 = $P5013."ast"()
    set $P101, $P5015
.annotate 'line', 2384
    $P101."blocktype"("declaration")
    find_dynamic_lex $P5016, "$*RETURN_USED"
    unless_null $P5016, fallback6462
    nqp_get_sc_object $P5018, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5017, $P5018
    set fb_tmp_756, $P5017
    repr_defined $I5003, fb_tmp_756
    unless $I5003 goto if3111_else6463 
    set $P5019, fb_tmp_756["$RETURN_USED"]
    set $P5021, $P5019
    goto if3111_end6464
  if3111_else6463:
    null $P5020
    set $P5021, $P5020
  if3111_end6464:
    unless_null $P5021, vivi_31126465
    nqp_get_sc_object $P5022, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5021, $P5022
  vivi_31126465:
    unless_null $P5021, vivi_31136466
    die "Contextual $*RETURN_USED not found"
    box $P5023, "Contextual $*RETURN_USED not found"
    set $P5021, $P5023
  vivi_31136466:
    set $P5016, $P5021
  fallback6462:
    set $P5029, $P5016
    unless $P5016 goto if3110_end6461 
.annotate 'line', 2385
.annotate 'line', 2386
    set fb_tmp_757, $P101
    repr_defined $I5004, fb_tmp_757
    unless $I5004 goto if3114_else6467 
    set $P5024, fb_tmp_757[1]
    set $P5026, $P5024
    goto if3114_end6468
  if3114_else6467:
    null $P5025
    set $P5026, $P5025
  if3114_end6468:
    unless_null $P5026, vivi_31156469
    nqp_get_sc_object $P5027, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5026, $P5027
  vivi_31156469:
    $P5028 = "&wrap_return_handler"($P5026)
    set $P101[1], $P5028
    set $P5029, $P5028
  if3110_end6461:
  if3105_end6451:
    set $P102, $P101
    unless_null _lex_param_1, fallback6474
    nqp_get_sc_object $P5030, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5030
  fallback6474:
    set fb_tmp_758, _lex_param_1
    repr_defined $I5005, fb_tmp_758
    unless $I5005 goto if3117_else6472 
    set $P5031, fb_tmp_758["deflongname"]
    set $P5033, $P5031
    goto if3117_end6473
  if3117_else6472:
    null $P5032
    set $P5033, $P5032
  if3117_end6473:
    unless_null $P5033, vivi_31186475
    nqp_get_sc_object $P5034, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5033, $P5034
  vivi_31186475:
    unless $P5033 goto if3116_else6470 
    .const 'Sub' $P5035 = 'cuid_474_1360432459.413' 
    capture_lex $P5035
    $P5036 = $P5035()
    goto if3116_end6471
  if3116_else6470:
.annotate 'line', 2496
.annotate 'line', 2497
    find_dynamic_lex $P5037, "$*W"
    unless_null $P5037, fallback6690
    nqp_get_sc_object $P5039, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5038, $P5039
    set fb_tmp_806, $P5038
    repr_defined $I5006, fb_tmp_806
    unless $I5006 goto if3247_else6691 
    set $P5040, fb_tmp_806["$W"]
    set $P5042, $P5040
    goto if3247_end6692
  if3247_else6691:
    null $P5041
    set $P5042, $P5041
  if3247_end6692:
    unless_null $P5042, vivi_32486693
    nqp_get_sc_object $P5043, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5042, $P5043
  vivi_32486693:
    unless_null $P5042, vivi_32496694
    die "Contextual $*W not found"
    box $P5044, "Contextual $*W not found"
    set $P5042, $P5044
  vivi_32496694:
    set $P5037, $P5042
  fallback6690:
    $P5045 = $P5037."is_precompilation_mode"()
    set $P5055, $P5045
    unless $P5045 goto if3246_end6689 
.annotate 'line', 2498
    find_dynamic_lex $P5046, "$*W"
    unless_null $P5046, fallback6695
    nqp_get_sc_object $P5048, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5047, $P5048
    set fb_tmp_807, $P5047
    repr_defined $I5007, fb_tmp_807
    unless $I5007 goto if3250_else6696 
    set $P5049, fb_tmp_807["$W"]
    set $P5051, $P5049
    goto if3250_end6697
  if3250_else6696:
    null $P5050
    set $P5051, $P5050
  if3250_end6697:
    unless_null $P5051, vivi_32516698
    nqp_get_sc_object $P5052, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5051, $P5052
  vivi_32516698:
    unless_null $P5051, vivi_32526699
    die "Contextual $*W not found"
    box $P5053, "Contextual $*W not found"
    set $P5051, $P5053
  vivi_32526699:
    set $P5046, $P5051
  fallback6695:
    $P5054 = $P5046."create_code"($P101, "<anon>", 0)
    set $P5055, $P5054
  if3246_end6689:
  if3116_end6471:
.annotate 'line', 2502
    nqp_get_sc_object $P5058, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5057, $P5058, "QAST"
    get_who $P5056, $P5057
    set fb_tmp_808, $P5056
    repr_defined $I5008, fb_tmp_808
    unless $I5008 goto if3253_else6700 
    set $P5059, fb_tmp_808["Op"]
    set $P5061, $P5059
    goto if3253_end6701
  if3253_else6700:
    null $P5060
    set $P5061, $P5060
  if3253_end6701:
    unless_null $P5061, vivi_32546702
    nqp_get_sc_object $P5062, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5061, $P5062
  vivi_32546702:
    $P5063 = $P5061."new"($P101, "takeclosure" :named("op"))
    set $P103, $P5063
    set $P103["sink"], $P101
    set $P103["block_past"], $P102
.annotate 'line', 2505
    _lex_param_1."!make"($P103)
    unless_null _lex_param_1, fallback6707
    nqp_get_sc_object $P5064, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5064
  fallback6707:
    set fb_tmp_809, _lex_param_1
    repr_defined $I5009, fb_tmp_809
    unless $I5009 goto if3256_else6705 
    set $P5065, fb_tmp_809["trait"]
    set $P5067, $P5065
    goto if3256_end6706
  if3256_else6705:
    null $P5066
    set $P5067, $P5066
  if3256_end6706:
    unless_null $P5067, vivi_32576708
    nqp_get_sc_object $P5068, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5067, $P5068
  vivi_32576708:
    set $P5079, $P5067
    unless $P5067 goto if3255_end6704 
.annotate 'line', 2508
    unless_null _lex_param_1, fallback6711
    nqp_get_sc_object $P5072, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5072
  fallback6711:
    set fb_tmp_810, _lex_param_1
    repr_defined $I5010, fb_tmp_810
    unless $I5010 goto if3258_else6709 
    set $P5073, fb_tmp_810["trait"]
    set $P5075, $P5073
    goto if3258_end6710
  if3258_else6709:
    null $P5074
    set $P5075, $P5074
  if3258_end6710:
    unless_null $P5075, vivi_32596712
    nqp_get_sc_object $P5076, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5075, $P5076
  vivi_32596712:
    set $P5069, $P5075
    iter $P5071, $P5075
  for_next6713:
    unless $P5071, for_done6715
    shift $P5078, $P5071
  for_redo6714:
    .const 'Sub' $P5077 = 'cuid_477_1360432459.413' 
    capture_lex $P5077
    $P5069 = $P5077($P5078)
    goto for_next6713
  for_done6715:
    set $P5079, $P5069
  if3255_end6704:
    .return ($P5079) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_474_1360432459.413") :anon :lex :outer("cuid_307_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2391
    .const 'Sub' $P5102 = 'cuid_473_1360432459.413' 
    capture_lex $P5102 
    .const 'Sub' $P5102 = 'cuid_475_1360432459.413' 
    capture_lex $P5102 
    .const 'Sub' $P5102 = 'cuid_476_1360432459.413' 
    capture_lex $P5102 
    .lex "$name", $P101 
    .local pmc fb_tmp_759 
    .local pmc fb_tmp_760 
    .local pmc fb_tmp_761 
    .local pmc fb_tmp_762 
    .local pmc fb_tmp_763 
    .local pmc fb_tmp_764 
    .local pmc fb_tmp_765 
    .local pmc fb_tmp_766 
    .local pmc fb_tmp_777 
    .local pmc fb_tmp_803 
    .local pmc fb_tmp_804 
    .local pmc fb_tmp_805 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    find_lex $P5002, "$/"
    unless_null $P5002, fallback6480
    nqp_get_sc_object $P5003, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5002, $P5003
  fallback6480:
    set fb_tmp_760, $P5002
    repr_defined $I5002, fb_tmp_760
    unless $I5002 goto if3120_else6478 
    set $P5004, fb_tmp_760["sigil"]
    set $P5006, $P5004
    goto if3120_end6479
  if3120_else6478:
    null $P5005
    set $P5006, $P5005
  if3120_end6479:
    unless_null $P5006, vivi_31216481
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_31216481:
    set fb_tmp_759, $P5006
    repr_defined $I5001, fb_tmp_759
    unless $I5001 goto if3119_else6476 
    set $P5008, fb_tmp_759[0]
    set $P5010, $P5008
    goto if3119_end6477
  if3119_else6476:
    null $P5009
    set $P5010, $P5009
  if3119_end6477:
    unless_null $P5010, vivi_31226482
    nqp_get_sc_object $P5011, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5010, $P5011
  vivi_31226482:
    set $S5002, $P5010
.annotate 'line', 2392
    find_lex $P5012, "$/"
    unless_null $P5012, fallback6487
    nqp_get_sc_object $P5013, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5012, $P5013
  fallback6487:
    set fb_tmp_762, $P5012
    repr_defined $I5004, fb_tmp_762
    unless $I5004 goto if3124_else6485 
    set $P5014, fb_tmp_762["deflongname"]
    set $P5016, $P5014
    goto if3124_end6486
  if3124_else6485:
    null $P5015
    set $P5016, $P5015
  if3124_end6486:
    unless_null $P5016, vivi_31256488
    nqp_get_sc_object $P5017, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5016, $P5017
  vivi_31256488:
    set fb_tmp_761, $P5016
    repr_defined $I5003, fb_tmp_761
    unless $I5003 goto if3123_else6483 
    set $P5018, fb_tmp_761[0]
    set $P5020, $P5018
    goto if3123_end6484
  if3123_else6483:
    null $P5019
    set $P5020, $P5019
  if3123_end6484:
    unless_null $P5020, vivi_31266489
    nqp_get_sc_object $P5021, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5020, $P5021
  vivi_31266489:
    $P5022 = $P5020."ast"()
    set $S5003, $P5022
    concat $S5001, $S5002, $S5003
    box $P5023, $S5001
    set $P101, $P5023
.annotate 'line', 2393
    find_lex $P5024, "$past"
    $P5024."name"($P101)
    find_dynamic_lex $P5025, "$*SCOPE"
    unless_null $P5025, fallback6496
    nqp_get_sc_object $P5027, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5026, $P5027
    set fb_tmp_763, $P5026
    repr_defined $I5006, fb_tmp_763
    unless $I5006 goto if3130_else6497 
    set $P5028, fb_tmp_763["$SCOPE"]
    set $P5030, $P5028
    goto if3130_end6498
  if3130_else6497:
    null $P5029
    set $P5030, $P5029
  if3130_end6498:
    unless_null $P5030, vivi_31316499
    nqp_get_sc_object $P5031, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5030, $P5031
  vivi_31316499:
    unless_null $P5030, vivi_31326500
    die "Contextual $*SCOPE not found"
    box $P5032, "Contextual $*SCOPE not found"
    set $P5030, $P5032
  vivi_31326500:
    set $P5025, $P5030
  fallback6496:
    set $S5004, $P5025
    iseq $I5005, $S5004, ""
    set $I5009, $I5005
    if $I5005 goto unless3129_end6495 
    find_dynamic_lex $P5033, "$*SCOPE"
    unless_null $P5033, fallback6501
    nqp_get_sc_object $P5035, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5034, $P5035
    set fb_tmp_764, $P5034
    repr_defined $I5008, fb_tmp_764
    unless $I5008 goto if3133_else6502 
    set $P5036, fb_tmp_764["$SCOPE"]
    set $P5038, $P5036
    goto if3133_end6503
  if3133_else6502:
    null $P5037
    set $P5038, $P5037
  if3133_end6503:
    unless_null $P5038, vivi_31346504
    nqp_get_sc_object $P5039, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5038, $P5039
  vivi_31346504:
    unless_null $P5038, vivi_31356505
    die "Contextual $*SCOPE not found"
    box $P5040, "Contextual $*SCOPE not found"
    set $P5038, $P5040
  vivi_31356505:
    set $P5033, $P5038
  fallback6501:
    set $S5005, $P5033
    iseq $I5007, $S5005, "my"
    set $I5009, $I5007
  unless3129_end6495:
    set $I5012, $I5009
    if $I5009 goto unless3128_end6493 
    find_dynamic_lex $P5041, "$*SCOPE"
    unless_null $P5041, fallback6506
    nqp_get_sc_object $P5043, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5042, $P5043
    set fb_tmp_765, $P5042
    repr_defined $I5011, fb_tmp_765
    unless $I5011 goto if3136_else6507 
    set $P5044, fb_tmp_765["$SCOPE"]
    set $P5046, $P5044
    goto if3136_end6508
  if3136_else6507:
    null $P5045
    set $P5046, $P5045
  if3136_end6508:
    unless_null $P5046, vivi_31376509
    nqp_get_sc_object $P5047, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5046, $P5047
  vivi_31376509:
    unless_null $P5046, vivi_31386510
    die "Contextual $*SCOPE not found"
    box $P5048, "Contextual $*SCOPE not found"
    set $P5046, $P5048
  vivi_31386510:
    set $P5041, $P5046
  fallback6506:
    set $S5006, $P5041
    iseq $I5010, $S5006, "our"
    set $I5012, $I5010
  unless3128_end6493:
    unless $I5012 goto if3127_else6490 
.annotate 'line', 2394
    find_dynamic_lex $P5049, "$*MULTINESS"
    unless_null $P5049, fallback6513
    nqp_get_sc_object $P5051, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5050, $P5051
    set fb_tmp_766, $P5050
    repr_defined $I5014, fb_tmp_766
    unless $I5014 goto if3140_else6514 
    set $P5052, fb_tmp_766["$MULTINESS"]
    set $P5054, $P5052
    goto if3140_end6515
  if3140_else6514:
    null $P5053
    set $P5054, $P5053
  if3140_end6515:
    unless_null $P5054, vivi_31416516
    nqp_get_sc_object $P5055, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5054, $P5055
  vivi_31416516:
    unless_null $P5054, vivi_31426517
    die "Contextual $*MULTINESS not found"
    box $P5056, "Contextual $*MULTINESS not found"
    set $P5054, $P5056
  vivi_31426517:
    set $P5049, $P5054
  fallback6513:
    set $S5007, $P5049
    iseq $I5013, $S5007, "multi"
    unless $I5013 goto if3139_else6511 
    .const 'Sub' $P5057 = 'cuid_473_1360432459.413' 
    capture_lex $P5057
    $P5058 = $P5057()
    goto if3139_end6512
  if3139_else6511:
    find_dynamic_lex $P5059, "$*MULTINESS"
    unless_null $P5059, fallback6573
    nqp_get_sc_object $P5061, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5060, $P5061
    set fb_tmp_777, $P5060
    repr_defined $I5016, fb_tmp_777
    unless $I5016 goto if3174_else6574 
    set $P5062, fb_tmp_777["$MULTINESS"]
    set $P5064, $P5062
    goto if3174_end6575
  if3174_else6574:
    null $P5063
    set $P5064, $P5063
  if3174_end6575:
    unless_null $P5064, vivi_31756576
    nqp_get_sc_object $P5065, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5064, $P5065
  vivi_31756576:
    unless_null $P5064, vivi_31766577
    die "Contextual $*MULTINESS not found"
    box $P5066, "Contextual $*MULTINESS not found"
    set $P5064, $P5066
  vivi_31766577:
    set $P5059, $P5064
  fallback6573:
    set $S5008, $P5059
    iseq $I5015, $S5008, "proto"
    unless $I5015 goto if3173_else6571 
    .const 'Sub' $P5067 = 'cuid_475_1360432459.413' 
    capture_lex $P5067
    $P5068 = $P5067()
    set $P5071, $P5068
    goto if3173_end6572
  if3173_else6571:
    .const 'Sub' $P5069 = 'cuid_476_1360432459.413' 
    capture_lex $P5069
    $P5070 = $P5069()
    set $P5071, $P5070
  if3173_end6572:
  if3139_end6512:
.annotate 'line', 2485
    nqp_get_sc_object $P5074, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5073, $P5074, "QAST"
    get_who $P5072, $P5073
    set fb_tmp_803, $P5072
    repr_defined $I5017, fb_tmp_803
    unless $I5017 goto if3236_else6671 
    set $P5075, fb_tmp_803["Var"]
    set $P5077, $P5075
    goto if3236_end6672
  if3236_else6671:
    null $P5076
    set $P5077, $P5076
  if3236_end6672:
    unless_null $P5077, vivi_32376673
    nqp_get_sc_object $P5078, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5077, $P5078
  vivi_32376673:
    set $S5010, $P101
    concat $S5009, "&", $S5010
    $P5079 = $P5077."new"($S5009 :named("name"), "lexical" :named("scope"))
    store_lex "$past", $P5079
    goto if3127_end6491
  if3127_else6490:
.annotate 'line', 2487
.annotate 'line', 2488
    find_lex $P5080, "$/"
    $P5081 = $P5080."CURSOR"()
    find_dynamic_lex $P5082, "$*SCOPE"
    unless_null $P5082, fallback6674
    nqp_get_sc_object $P5084, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5083, $P5084
    set fb_tmp_804, $P5083
    repr_defined $I5018, fb_tmp_804
    unless $I5018 goto if3238_else6675 
    set $P5085, fb_tmp_804["$SCOPE"]
    set $P5087, $P5085
    goto if3238_end6676
  if3238_else6675:
    null $P5086
    set $P5087, $P5086
  if3238_end6676:
    unless_null $P5087, vivi_32396677
    nqp_get_sc_object $P5088, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5087, $P5088
  vivi_32396677:
    unless_null $P5087, vivi_32406678
    die "Contextual $*SCOPE not found"
    box $P5089, "Contextual $*SCOPE not found"
    set $P5087, $P5089
  vivi_32406678:
    set $P5082, $P5087
  fallback6674:
    set $S5012, $P5082
    concat $S5011, $S5012, " scoped routines are not supported yet"
    $P5090 = $P5081."panic"($S5011)
  if3127_end6491:
    set $S5013, $P101
    iseq $I5019, $S5013, "MAIN"
    set $I5022, $I5019
    unless $I5019 goto if3242_end6682 
    find_dynamic_lex $P5091, "$*MULTINESS"
    unless_null $P5091, fallback6683
    nqp_get_sc_object $P5093, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5092, $P5093
    set fb_tmp_805, $P5092
    repr_defined $I5021, fb_tmp_805
    unless $I5021 goto if3243_else6684 
    set $P5094, fb_tmp_805["$MULTINESS"]
    set $P5096, $P5094
    goto if3243_end6685
  if3243_else6684:
    null $P5095
    set $P5096, $P5095
  if3243_end6685:
    unless_null $P5096, vivi_32446686
    nqp_get_sc_object $P5097, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5096, $P5097
  vivi_32446686:
    unless_null $P5096, vivi_32456687
    die "Contextual $*MULTINESS not found"
    box $P5098, "Contextual $*MULTINESS not found"
    set $P5096, $P5098
  vivi_32456687:
    set $P5091, $P5096
  fallback6683:
    set $S5014, $P5091
    isne $I5020, $S5014, "multi"
    set $I5022, $I5020
  if3242_end6682:
    box $P5101, $I5022
    set $P5100, $P5101
    unless $I5022 goto if3241_end6680 
.annotate 'line', 2492
    find_lex $P5099, "$block"
    store_dynamic_lex "$*MAIN_SUB", $P5099
    set $P5100, $P5099
  if3241_end6680:
    .return ($P5100) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_473_1360432459.413") :anon :lex :outer("cuid_474_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2395
    .const 'Sub' $P5062 = 'cuid_472_1360432459.413' 
    capture_lex $P5062 
    .lex "$proto", $P101 
    .lex "%sym", $P102 
    .lex "$code", $P103 
    .lex "$BLOCK", $P104 
    .local pmc fb_tmp_767 
    .local pmc fb_tmp_768 
    .local pmc fb_tmp_769 
    .local pmc fb_tmp_770 
    .local pmc fb_tmp_774 
    .local pmc fb_tmp_775 
    .local pmc fb_tmp_776 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    new $P5002, 'Hash'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P104, $P5004
    find_dynamic_lex $P5005, "$*SCOPE"
    unless_null $P5005, fallback6520
    nqp_get_sc_object $P5007, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5006, $P5007
    set fb_tmp_767, $P5006
    repr_defined $I5002, fb_tmp_767
    unless $I5002 goto if3144_else6521 
    set $P5008, fb_tmp_767["$SCOPE"]
    set $P5010, $P5008
    goto if3144_end6522
  if3144_else6521:
    null $P5009
    set $P5010, $P5009
  if3144_end6522:
    unless_null $P5010, vivi_31456523
    nqp_get_sc_object $P5011, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5010, $P5011
  vivi_31456523:
    unless_null $P5010, vivi_31466524
    die "Contextual $*SCOPE not found"
    box $P5012, "Contextual $*SCOPE not found"
    set $P5010, $P5012
  vivi_31466524:
    set $P5005, $P5010
  fallback6520:
    set $S5001, $P5005
    iseq $I5001, $S5001, "our"
    unless $I5001 goto if3143_end6519 
.annotate 'line', 2397
    box $P5013, "a multi can not be our-scoped"
    die $P5013
  if3143_end6519:
.annotate 'line', 2399
    find_dynamic_lex $P5014, "$*W"
    unless_null $P5014, fallback6525
    nqp_get_sc_object $P5016, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5015, $P5016
    set fb_tmp_768, $P5015
    repr_defined $I5003, fb_tmp_768
    unless $I5003 goto if3147_else6526 
    set $P5017, fb_tmp_768["$W"]
    set $P5019, $P5017
    goto if3147_end6527
  if3147_else6526:
    null $P5018
    set $P5019, $P5018
  if3147_end6527:
    unless_null $P5019, vivi_31486528
    nqp_get_sc_object $P5020, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5019, $P5020
  vivi_31486528:
    unless_null $P5019, vivi_31496529
    die "Contextual $*W not found"
    box $P5021, "Contextual $*W not found"
    set $P5019, $P5021
  vivi_31496529:
    set $P5014, $P5019
  fallback6525:
    $P5022 = $P5014."cur_lexpad"()
    find_lex $P5023, "$name"
    set $S5003, $P5023
    concat $S5002, "&", $S5003
    $P5024 = $P5022."symbol"($S5002)
    set $P102, $P5024
    set fb_tmp_769, $P102
    repr_defined $I5004, fb_tmp_769
    unless $I5004 goto if3151_else6532 
    set $P5025, fb_tmp_769["proto"]
    set $P5027, $P5025
    goto if3151_end6533
  if3151_else6532:
    null $P5026
    set $P5027, $P5026
  if3151_end6533:
    unless_null $P5027, vivi_31526534
    nqp_get_sc_object $P5028, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5027, $P5028
  vivi_31526534:
    unless $P5027 goto if3150_else6530 
.annotate 'line', 2400
    set fb_tmp_770, $P102
    repr_defined $I5005, fb_tmp_770
    unless $I5005 goto if3153_else6535 
    set $P5029, fb_tmp_770["value"]
    set $P5031, $P5029
    goto if3153_end6536
  if3153_else6535:
    null $P5030
    set $P5031, $P5030
  if3153_end6536:
    unless_null $P5031, vivi_31546537
    nqp_get_sc_object $P5032, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5031, $P5032
  vivi_31546537:
    set $P101, $P5031
    goto if3150_end6531
  if3150_else6530:
    .const 'Sub' $P5033 = 'cuid_472_1360432459.413' 
    capture_lex $P5033
    $P5034 = $P5033()
  if3150_end6531:
.annotate 'line', 2429
    find_dynamic_lex $P5035, "$*W"
    unless_null $P5035, fallback6558
    nqp_get_sc_object $P5037, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5036, $P5037
    set fb_tmp_774, $P5036
    repr_defined $I5006, fb_tmp_774
    unless $I5006 goto if3165_else6559 
    set $P5038, fb_tmp_774["$W"]
    set $P5040, $P5038
    goto if3165_end6560
  if3165_else6559:
    null $P5039
    set $P5040, $P5039
  if3165_end6560:
    unless_null $P5040, vivi_31666561
    nqp_get_sc_object $P5041, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5040, $P5041
  vivi_31666561:
    unless_null $P5040, vivi_31676562
    die "Contextual $*W not found"
    box $P5042, "Contextual $*W not found"
    set $P5040, $P5042
  vivi_31676562:
    set $P5035, $P5040
  fallback6558:
    find_lex $P5043, "$past"
    find_lex $P5044, "$name"
    $P5045 = $P5035."create_code"($P5043, $P5044, 0)
    set $P103, $P5045
.annotate 'line', 2430
    find_lex $P5046, "$past"
    "&attach_multi_signature"($P103, $P5046)
.annotate 'line', 2433
    $P101."add_dispatchee"($P103)
.annotate 'line', 2436
    find_dynamic_lex $P5047, "$*W"
    unless_null $P5047, fallback6563
    nqp_get_sc_object $P5049, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5048, $P5049
    set fb_tmp_775, $P5048
    repr_defined $I5007, fb_tmp_775
    unless $I5007 goto if3168_else6564 
    set $P5050, fb_tmp_775["$W"]
    set $P5052, $P5050
    goto if3168_end6565
  if3168_else6564:
    null $P5051
    set $P5052, $P5051
  if3168_end6565:
    unless_null $P5052, vivi_31696566
    nqp_get_sc_object $P5053, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5052, $P5053
  vivi_31696566:
    unless_null $P5052, vivi_31706567
    die "Contextual $*W not found"
    box $P5054, "Contextual $*W not found"
    set $P5052, $P5054
  vivi_31706567:
    set $P5047, $P5052
  fallback6563:
    $P5055 = $P5047."cur_lexpad"()
    set $P104, $P5055
.annotate 'line', 2437
    set fb_tmp_776, $P104
    repr_defined $I5008, fb_tmp_776
    unless $I5008 goto if3171_else6568 
    set $P5056, fb_tmp_776[0]
    set $P5058, $P5056
    goto if3171_end6569
  if3171_else6568:
    null $P5057
    set $P5058, $P5057
  if3171_end6569:
    unless_null $P5058, vivi_31726570
    nqp_get_sc_object $P5059, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5058, $P5059
  vivi_31726570:
    find_lex $P5060, "$past"
    $P5061 = $P5058."push"($P5060)
    .return ($P5061) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_472_1360432459.413") :anon :lex :outer("cuid_473_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2405
    .const 'Sub' $P5020 = 'cuid_471_1360432459.413' 
    capture_lex $P5020 
    .lex "$found_proto", $P101 
    .local pmc fb_tmp_771 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
.annotate 'line', 2408
    find_dynamic_lex $P5005, "$*W"
    unless_null $P5005, fallback6538
    nqp_get_sc_object $P5007, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5006, $P5007
    set fb_tmp_771, $P5006
    repr_defined $I5001, fb_tmp_771
    unless $I5001 goto if3155_else6539 
    set $P5008, fb_tmp_771["$W"]
    set $P5010, $P5008
    goto if3155_end6540
  if3155_else6539:
    null $P5009
    set $P5010, $P5009
  if3155_end6540:
    unless_null $P5010, vivi_31566541
    nqp_get_sc_object $P5011, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5010, $P5011
  vivi_31566541:
    unless_null $P5010, vivi_31576542
    die "Contextual $*W not found"
    box $P5012, "Contextual $*W not found"
    set $P5010, $P5012
  vivi_31576542:
    set $P5005, $P5010
  fallback6538:
    $P5013 = $P5005."get_legacy_block_list"()
    set $P5002, $P5013
    iter $P5004, $P5013
  for_next6553:
    unless $P5004, for_done6555
    shift $P5015, $P5004
  for_redo6554:
    .const 'Sub' $P5014 = 'cuid_471_1360432459.413' 
    capture_lex $P5014
    $P5002 = $P5014($P5015)
    goto for_next6553
  for_done6555:
    if $P101 goto unless3164_end6557 
.annotate 'line', 2420
.annotate 'line', 2421
    find_lex $P5016, "$/"
    $P5017 = $P5016."CURSOR"()
    $P5018 = $P5017."panic"("Sorry, no proto sub in scope, and auto-generation of protos is not yet implemented.")
  unless3164_end6557:
    box $P5019, "Dispatcher derivation NYI"
    die $P5019
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_471_1360432459.413") :anon :lex :outer("cuid_472_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2408
    .param pmc _lex_param_0 
    .lex "%sym", $P101 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_772 
    .local pmc fb_tmp_773 
    new $P5001, 'Hash'
    set $P101, $P5001
.annotate 'line', 2409
    find_lex $P5002, "$name"
    set $S5002, $P5002
    concat $S5001, "&", $S5002
    $P5003 = _lex_param_0."symbol"($S5001)
    set $P101, $P5003
    set fb_tmp_772, $P101
    repr_defined $I5001, fb_tmp_772
    unless $I5001 goto if3159_else6545 
    set $P5004, fb_tmp_772["proto"]
    set $P5006, $P5004
    goto if3159_end6546
  if3159_else6545:
    null $P5005
    set $P5006, $P5005
  if3159_end6546:
    unless_null $P5006, vivi_31606547
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_31606547:
    unless $P5006 goto if3158_else6543 
.annotate 'line', 2410
    set fb_tmp_773, $P101
    repr_defined $I5002, fb_tmp_773
    unless $I5002 goto if3161_else6548 
    set $P5008, fb_tmp_773["value"]
    set $P5010, $P5008
    goto if3161_end6549
  if3161_else6548:
    null $P5009
    set $P5010, $P5009
  if3161_end6549:
    unless_null $P5010, vivi_31626550
    nqp_get_sc_object $P5011, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5010, $P5011
  vivi_31626550:
    store_lex "$proto", $P5010
    box $P5012, 1
    store_lex "$found_proto", $P5012
    set $P5017, $P5012
    goto if3158_end6544
  if3158_else6543:
    set $P5016, $P101
    unless $P101 goto if3163_end6552 
.annotate 'line', 2414
.annotate 'line', 2415
    find_lex $P5013, "$/"
    $P5014 = $P5013."CURSOR"()
    $P5015 = $P5014."panic"("Cannot declare a multi when an only is already in scope.")
    set $P5016, $P5015
  if3163_end6552:
    set $P5017, $P5016
  if3158_end6544:
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_475_1360432459.413") :anon :lex :outer("cuid_474_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2439
    .lex "$code", $P101 
    .lex "$BLOCK", $P102 
    .local pmc fb_tmp_778 
    .local pmc fb_tmp_779 
    .local pmc fb_tmp_780 
    .local pmc fb_tmp_781 
    .local pmc fb_tmp_782 
    .local pmc fb_tmp_783 
    .local pmc fb_tmp_784 
    .local pmc fb_tmp_785 
    .local pmc fb_tmp_786 
    .local pmc fb_tmp_787 
    .local pmc fb_tmp_788 
    .local pmc fb_tmp_789 
    .local pmc fb_tmp_790 
    .local pmc fb_tmp_791 
    .local pmc fb_tmp_792 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
    find_dynamic_lex $P5003, "$*SCOPE"
    unless_null $P5003, fallback6580
    nqp_get_sc_object $P5005, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5004, $P5005
    set fb_tmp_778, $P5004
    repr_defined $I5002, fb_tmp_778
    unless $I5002 goto if3178_else6581 
    set $P5006, fb_tmp_778["$SCOPE"]
    set $P5008, $P5006
    goto if3178_end6582
  if3178_else6581:
    null $P5007
    set $P5008, $P5007
  if3178_end6582:
    unless_null $P5008, vivi_31796583
    nqp_get_sc_object $P5009, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5008, $P5009
  vivi_31796583:
    unless_null $P5008, vivi_31806584
    die "Contextual $*SCOPE not found"
    box $P5010, "Contextual $*SCOPE not found"
    set $P5008, $P5010
  vivi_31806584:
    set $P5003, $P5008
  fallback6580:
    set $S5001, $P5003
    iseq $I5001, $S5001, "our"
    unless $I5001 goto if3177_end6579 
.annotate 'line', 2443
    box $P5011, "our-scoped protos not yet implemented"
    die $P5011
  if3177_end6579:
.annotate 'line', 2444
    find_dynamic_lex $P5012, "$*W"
    unless_null $P5012, fallback6585
    nqp_get_sc_object $P5014, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5013, $P5014
    set fb_tmp_779, $P5013
    repr_defined $I5003, fb_tmp_779
    unless $I5003 goto if3181_else6586 
    set $P5015, fb_tmp_779["$W"]
    set $P5017, $P5015
    goto if3181_end6587
  if3181_else6586:
    null $P5016
    set $P5017, $P5016
  if3181_end6587:
    unless_null $P5017, vivi_31826588
    nqp_get_sc_object $P5018, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5017, $P5018
  vivi_31826588:
    unless_null $P5017, vivi_31836589
    die "Contextual $*W not found"
    box $P5019, "Contextual $*W not found"
    set $P5017, $P5019
  vivi_31836589:
    set $P5012, $P5017
  fallback6585:
    find_lex $P5020, "$past"
    find_lex $P5021, "$name"
    $P5022 = $P5012."create_code"($P5020, $P5021, 1)
    set $P101, $P5022
.annotate 'line', 2445
    find_dynamic_lex $P5023, "$*W"
    unless_null $P5023, fallback6590
    nqp_get_sc_object $P5025, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5024, $P5025
    set fb_tmp_780, $P5024
    repr_defined $I5004, fb_tmp_780
    unless $I5004 goto if3184_else6591 
    set $P5026, fb_tmp_780["$W"]
    set $P5028, $P5026
    goto if3184_end6592
  if3184_else6591:
    null $P5027
    set $P5028, $P5027
  if3184_end6592:
    unless_null $P5028, vivi_31856593
    nqp_get_sc_object $P5029, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5028, $P5029
  vivi_31856593:
    unless_null $P5028, vivi_31866594
    die "Contextual $*W not found"
    box $P5030, "Contextual $*W not found"
    set $P5028, $P5030
  vivi_31866594:
    set $P5023, $P5028
  fallback6590:
    $P5031 = $P5023."cur_lexpad"()
    set $P102, $P5031
.annotate 'line', 2446
    set fb_tmp_781, $P102
    repr_defined $I5005, fb_tmp_781
    unless $I5005 goto if3187_else6595 
    set $P5032, fb_tmp_781[0]
    set $P5034, $P5032
    goto if3187_end6596
  if3187_else6595:
    null $P5033
    set $P5034, $P5033
  if3187_end6596:
    unless_null $P5034, vivi_31886597
    nqp_get_sc_object $P5035, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5034, $P5035
  vivi_31886597:
    nqp_get_sc_object $P5038, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5037, $P5038, "QAST"
    get_who $P5036, $P5037
    set fb_tmp_782, $P5036
    repr_defined $I5006, fb_tmp_782
    unless $I5006 goto if3189_else6598 
    set $P5039, fb_tmp_782["Op"]
    set $P5041, $P5039
    goto if3189_end6599
  if3189_else6598:
    null $P5040
    set $P5041, $P5040
  if3189_end6599:
    unless_null $P5041, vivi_31906600
    nqp_get_sc_object $P5042, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5041, $P5042
  vivi_31906600:
.annotate 'line', 2448
    nqp_get_sc_object $P5045, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5044, $P5045, "QAST"
    get_who $P5043, $P5044
    set fb_tmp_783, $P5043
    repr_defined $I5007, fb_tmp_783
    unless $I5007 goto if3191_else6601 
    set $P5046, fb_tmp_783["Var"]
    set $P5048, $P5046
    goto if3191_end6602
  if3191_else6601:
    null $P5047
    set $P5048, $P5047
  if3191_end6602:
    unless_null $P5048, vivi_31926603
    nqp_get_sc_object $P5049, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5048, $P5049
  vivi_31926603:
    find_lex $P5050, "$name"
    set $S5003, $P5050
    concat $S5002, "&", $S5003
    $P5051 = $P5048."new"($S5002 :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    find_lex $P5052, "$past"
    $P5053 = $P5041."new"($P5051, $P5052, "bind" :named("op"))
    $P5034."push"($P5053)
.annotate 'line', 2451
    find_lex $P5054, "$name"
    set $S5005, $P5054
    concat $S5004, "&", $S5005
    $P102."symbol"($S5004, "lexical" :named("scope"), 1 :named("proto"), $P101 :named("value"))
.annotate 'line', 2455
    find_lex $P5055, "$block"
    set fb_tmp_784, $P5055
    repr_defined $I5008, fb_tmp_784
    unless $I5008 goto if3193_else6604 
    set $P5056, fb_tmp_784[0]
    set $P5058, $P5056
    goto if3193_end6605
  if3193_else6604:
    null $P5057
    set $P5058, $P5057
  if3193_end6605:
    unless_null $P5058, vivi_31946606
    nqp_get_sc_object $P5059, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5058, $P5059
  vivi_31946606:
    nqp_get_sc_object $P5062, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5061, $P5062, "QAST"
    get_who $P5060, $P5061
    set fb_tmp_785, $P5060
    repr_defined $I5009, fb_tmp_785
    unless $I5009 goto if3195_else6607 
    set $P5063, fb_tmp_785["Op"]
    set $P5065, $P5063
    goto if3195_end6608
  if3195_else6607:
    null $P5064
    set $P5065, $P5064
  if3195_end6608:
    unless_null $P5065, vivi_31966609
    nqp_get_sc_object $P5066, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5065, $P5066
  vivi_31966609:
.annotate 'line', 2457
    nqp_get_sc_object $P5069, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5068, $P5069, "QAST"
    get_who $P5067, $P5068
    set fb_tmp_786, $P5067
    repr_defined $I5010, fb_tmp_786
    unless $I5010 goto if3197_else6610 
    set $P5070, fb_tmp_786["Var"]
    set $P5072, $P5070
    goto if3197_end6611
  if3197_else6610:
    null $P5071
    set $P5072, $P5071
  if3197_end6611:
    unless_null $P5072, vivi_31986612
    nqp_get_sc_object $P5073, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5072, $P5073
  vivi_31986612:
    $P5074 = $P5072."new"("CURRENT_DISPATCH_CAPTURE" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2458
    nqp_get_sc_object $P5077, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5076, $P5077, "QAST"
    get_who $P5075, $P5076
    set fb_tmp_787, $P5075
    repr_defined $I5011, fb_tmp_787
    unless $I5011 goto if3199_else6613 
    set $P5078, fb_tmp_787["Op"]
    set $P5080, $P5078
    goto if3199_end6614
  if3199_else6613:
    null $P5079
    set $P5080, $P5079
  if3199_end6614:
    unless_null $P5080, vivi_32006615
    nqp_get_sc_object $P5081, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5080, $P5081
  vivi_32006615:
    $P5082 = $P5080."new"("savecapture" :named("op"))
    $P5083 = $P5065."new"($P5074, $P5082, "bind" :named("op"))
    $P5058."push"($P5083)
.annotate 'line', 2460
    find_lex $P5084, "$block"
    set fb_tmp_788, $P5084
    repr_defined $I5012, fb_tmp_788
    unless $I5012 goto if3201_else6616 
    set $P5085, fb_tmp_788[0]
    set $P5087, $P5085
    goto if3201_end6617
  if3201_else6616:
    null $P5086
    set $P5087, $P5086
  if3201_end6617:
    unless_null $P5087, vivi_32026618
    nqp_get_sc_object $P5088, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5087, $P5088
  vivi_32026618:
    nqp_get_sc_object $P5091, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5090, $P5091, "QAST"
    get_who $P5089, $P5090
    set fb_tmp_789, $P5089
    repr_defined $I5013, fb_tmp_789
    unless $I5013 goto if3203_else6619 
    set $P5092, fb_tmp_789["Op"]
    set $P5094, $P5092
    goto if3203_end6620
  if3203_else6619:
    null $P5093
    set $P5094, $P5093
  if3203_end6620:
    unless_null $P5094, vivi_32046621
    nqp_get_sc_object $P5095, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5094, $P5095
  vivi_32046621:
.annotate 'line', 2462
    nqp_get_sc_object $P5098, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5097, $P5098, "QAST"
    get_who $P5096, $P5097
    set fb_tmp_790, $P5096
    repr_defined $I5014, fb_tmp_790
    unless $I5014 goto if3205_else6622 
    set $P5099, fb_tmp_790["Var"]
    set $P5101, $P5099
    goto if3205_end6623
  if3205_else6622:
    null $P5100
    set $P5101, $P5100
  if3205_end6623:
    unless_null $P5101, vivi_32066624
    nqp_get_sc_object $P5102, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5101, $P5102
  vivi_32066624:
    $P5103 = $P5101."new"("&*CURRENT_DISPATCHER" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2463
    nqp_get_sc_object $P5106, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5105, $P5106, "QAST"
    get_who $P5104, $P5105
    set fb_tmp_791, $P5104
    repr_defined $I5015, fb_tmp_791
    unless $I5015 goto if3207_else6625 
    set $P5107, fb_tmp_791["Op"]
    set $P5109, $P5107
    goto if3207_end6626
  if3207_else6625:
    null $P5108
    set $P5109, $P5108
  if3207_end6626:
    unless_null $P5109, vivi_32086627
    nqp_get_sc_object $P5110, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5109, $P5110
  vivi_32086627:
    nqp_get_sc_object $P5113, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5112, $P5113, "QAST"
    get_who $P5111, $P5112
    set fb_tmp_792, $P5111
    repr_defined $I5016, fb_tmp_792
    unless $I5016 goto if3209_else6628 
    set $P5114, fb_tmp_792["Op"]
    set $P5116, $P5114
    goto if3209_end6629
  if3209_else6628:
    null $P5115
    set $P5116, $P5115
  if3209_end6629:
    unless_null $P5116, vivi_32106630
    nqp_get_sc_object $P5117, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5116, $P5117
  vivi_32106630:
    $P5118 = $P5116."new"("curcode" :named("op"))
    $P5119 = $P5109."new"($P5118, "getcodeobj" :named("op"))
    $P5120 = $P5094."new"($P5103, $P5119, "bind" :named("op"))
    $P5121 = $P5087."push"($P5120)
    .return ($P5121) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_476_1360432459.413") :anon :lex :outer("cuid_474_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2466
    .lex "$BLOCK", $P101 
    .local pmc fb_tmp_793 
    .local pmc fb_tmp_794 
    .local pmc fb_tmp_795 
    .local pmc fb_tmp_796 
    .local pmc fb_tmp_797 
    .local pmc fb_tmp_798 
    .local pmc fb_tmp_799 
    .local pmc fb_tmp_800 
    .local pmc fb_tmp_801 
    .local pmc fb_tmp_802 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
.annotate 'line', 2467
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback6631
    nqp_get_sc_object $P5004, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5003, $P5004
    set fb_tmp_793, $P5003
    repr_defined $I5001, fb_tmp_793
    unless $I5001 goto if3211_else6632 
    set $P5005, fb_tmp_793["$W"]
    set $P5007, $P5005
    goto if3211_end6633
  if3211_else6632:
    null $P5006
    set $P5007, $P5006
  if3211_end6633:
    unless_null $P5007, vivi_32126634
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5007, $P5008
  vivi_32126634:
    unless_null $P5007, vivi_32136635
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_32136635:
    set $P5002, $P5007
  fallback6631:
    $P5010 = $P5002."cur_lexpad"()
    set $P101, $P5010
.annotate 'line', 2468
    set fb_tmp_794, $P101
    repr_defined $I5002, fb_tmp_794
    unless $I5002 goto if3214_else6636 
    set $P5011, fb_tmp_794[0]
    set $P5013, $P5011
    goto if3214_end6637
  if3214_else6636:
    null $P5012
    set $P5013, $P5012
  if3214_end6637:
    unless_null $P5013, vivi_32156638
    nqp_get_sc_object $P5014, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5013, $P5014
  vivi_32156638:
    nqp_get_sc_object $P5017, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5016, $P5017, "QAST"
    get_who $P5015, $P5016
    set fb_tmp_795, $P5015
    repr_defined $I5003, fb_tmp_795
    unless $I5003 goto if3216_else6639 
    set $P5018, fb_tmp_795["Op"]
    set $P5020, $P5018
    goto if3216_end6640
  if3216_else6639:
    null $P5019
    set $P5020, $P5019
  if3216_end6640:
    unless_null $P5020, vivi_32176641
    nqp_get_sc_object $P5021, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5020, $P5021
  vivi_32176641:
.annotate 'line', 2470
    nqp_get_sc_object $P5024, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5023, $P5024, "QAST"
    get_who $P5022, $P5023
    set fb_tmp_796, $P5022
    repr_defined $I5004, fb_tmp_796
    unless $I5004 goto if3218_else6642 
    set $P5025, fb_tmp_796["Var"]
    set $P5027, $P5025
    goto if3218_end6643
  if3218_else6642:
    null $P5026
    set $P5027, $P5026
  if3218_end6643:
    unless_null $P5027, vivi_32196644
    nqp_get_sc_object $P5028, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5027, $P5028
  vivi_32196644:
    find_lex $P5029, "$name"
    set $S5002, $P5029
    concat $S5001, "&", $S5002
    $P5030 = $P5027."new"($S5001 :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    find_lex $P5031, "$past"
    $P5032 = $P5020."new"($P5030, $P5031, "bind" :named("op"))
    $P5013."push"($P5032)
.annotate 'line', 2473
    find_lex $P5033, "$name"
    set $S5004, $P5033
    concat $S5003, "&", $S5004
    $P101."symbol"($S5003, "lexical" :named("scope"))
    find_dynamic_lex $P5034, "$*SCOPE"
    unless_null $P5034, fallback6647
    nqp_get_sc_object $P5036, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5035, $P5036
    set fb_tmp_797, $P5035
    repr_defined $I5006, fb_tmp_797
    unless $I5006 goto if3221_else6648 
    set $P5037, fb_tmp_797["$SCOPE"]
    set $P5039, $P5037
    goto if3221_end6649
  if3221_else6648:
    null $P5038
    set $P5039, $P5038
  if3221_end6649:
    unless_null $P5039, vivi_32226650
    nqp_get_sc_object $P5040, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5039, $P5040
  vivi_32226650:
    unless_null $P5039, vivi_32236651
    die "Contextual $*SCOPE not found"
    box $P5041, "Contextual $*SCOPE not found"
    set $P5039, $P5041
  vivi_32236651:
    set $P5034, $P5039
  fallback6647:
    set $S5005, $P5034
    iseq $I5005, $S5005, "our"
    box $P5087, $I5005
    set $P5086, $P5087
    unless $I5005 goto if3220_end6646 
.annotate 'line', 2474
.annotate 'line', 2477
    find_dynamic_lex $P5042, "$*W"
    unless_null $P5042, fallback6652
    nqp_get_sc_object $P5044, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5043, $P5044
    set fb_tmp_798, $P5043
    repr_defined $I5007, fb_tmp_798
    unless $I5007 goto if3224_else6653 
    set $P5045, fb_tmp_798["$W"]
    set $P5047, $P5045
    goto if3224_end6654
  if3224_else6653:
    null $P5046
    set $P5047, $P5046
  if3224_end6654:
    unless_null $P5047, vivi_32256655
    nqp_get_sc_object $P5048, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5047, $P5048
  vivi_32256655:
    unless_null $P5047, vivi_32266656
    die "Contextual $*W not found"
    box $P5049, "Contextual $*W not found"
    set $P5047, $P5049
  vivi_32266656:
    set $P5042, $P5047
  fallback6652:
    find_dynamic_lex $P5050, "$*PACKAGE"
    unless_null $P5050, fallback6657
    nqp_get_sc_object $P5052, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5051, $P5052
    set fb_tmp_799, $P5051
    repr_defined $I5008, fb_tmp_799
    unless $I5008 goto if3227_else6658 
    set $P5053, fb_tmp_799["$PACKAGE"]
    set $P5055, $P5053
    goto if3227_end6659
  if3227_else6658:
    null $P5054
    set $P5055, $P5054
  if3227_end6659:
    unless_null $P5055, vivi_32286660
    nqp_get_sc_object $P5056, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5055, $P5056
  vivi_32286660:
    unless_null $P5055, vivi_32296661
    die "Contextual $*PACKAGE not found"
    box $P5057, "Contextual $*PACKAGE not found"
    set $P5055, $P5057
  vivi_32296661:
    set $P5050, $P5055
  fallback6657:
    find_lex $P5058, "$name"
    find_lex $P5059, "$past"
    $P5042."install_package_routine"($P5050, $P5058, $P5059)
.annotate 'line', 2478
    set fb_tmp_800, $P101
    repr_defined $I5009, fb_tmp_800
    unless $I5009 goto if3230_else6662 
    set $P5060, fb_tmp_800[0]
    set $P5062, $P5060
    goto if3230_end6663
  if3230_else6662:
    null $P5061
    set $P5062, $P5061
  if3230_end6663:
    unless_null $P5062, vivi_32316664
    nqp_get_sc_object $P5063, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5062, $P5063
  vivi_32316664:
    nqp_get_sc_object $P5066, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5065, $P5066, "QAST"
    get_who $P5064, $P5065
    set fb_tmp_801, $P5064
    repr_defined $I5010, fb_tmp_801
    unless $I5010 goto if3232_else6665 
    set $P5067, fb_tmp_801["Op"]
    set $P5069, $P5067
    goto if3232_end6666
  if3232_else6665:
    null $P5068
    set $P5069, $P5068
  if3232_end6666:
    unless_null $P5069, vivi_32336667
    nqp_get_sc_object $P5070, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5069, $P5070
  vivi_32336667:
.annotate 'line', 2480
    new $P5071, 'ResizablePMCArray'
    find_lex $P5072, "$name"
    push $P5071, $P5072
    find_lex $P5073, "$/"
    $P5074 = "&lexical_package_lookup"($P5071, $P5073)
.annotate 'line', 2481
    nqp_get_sc_object $P5077, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5076, $P5077, "QAST"
    get_who $P5075, $P5076
    set fb_tmp_802, $P5075
    repr_defined $I5011, fb_tmp_802
    unless $I5011 goto if3234_else6668 
    set $P5078, fb_tmp_802["Var"]
    set $P5080, $P5078
    goto if3234_end6669
  if3234_else6668:
    null $P5079
    set $P5080, $P5079
  if3234_end6669:
    unless_null $P5080, vivi_32356670
    nqp_get_sc_object $P5081, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5080, $P5081
  vivi_32356670:
    find_lex $P5082, "$name"
    set $S5007, $P5082
    concat $S5006, "&", $S5007
    $P5083 = $P5080."new"($S5006 :named("name"), "lexical" :named("scope"))
    $P5084 = $P5069."new"($P5074, $P5083, "bind" :named("op"))
    $P5085 = $P5062."push"($P5084)
    set $P5086, $P5085
  if3220_end6646:
    .return ($P5086) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_477_1360432459.413") :anon :lex :outer("cuid_307_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2509
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5002, "$/"
    $P5001 = _lex_param_0."ast"()
    $P5003 = $P5001($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "method_def" :subid("cuid_308_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2513
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5129 = 'cuid_478_1360432459.413' 
    capture_lex $P5129 
    .const 'Sub' $P5129 = 'cuid_479_1360432459.413' 
    capture_lex $P5129 
    .lex "$past", $P101 
    .lex "$name", $P102 
    .lex "$lexpast", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_811 
    .local pmc fb_tmp_812 
    .local pmc fb_tmp_813 
    .local pmc fb_tmp_814 
    .local pmc fb_tmp_815 
    .local pmc fb_tmp_816 
    .local pmc fb_tmp_817 
    .local pmc fb_tmp_818 
    .local pmc fb_tmp_819 
    .local pmc fb_tmp_820 
    .local pmc fb_tmp_821 
    .local pmc fb_tmp_822 
    .local pmc fb_tmp_823 
    .local pmc fb_tmp_824 
    .local pmc fb_tmp_825 
    .local pmc fb_tmp_844 
    .local pmc fb_tmp_845 
    .local pmc fb_tmp_846 
    .local pmc fb_tmp_847 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P103, $P5003
    unless_null _lex_param_1, fallback6720
    nqp_get_sc_object $P5004, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5004
  fallback6720:
    set fb_tmp_811, _lex_param_1
    repr_defined $I5001, fb_tmp_811
    unless $I5001 goto if3261_else6718 
    set $P5005, fb_tmp_811["onlystar"]
    set $P5007, $P5005
    goto if3261_end6719
  if3261_else6718:
    null $P5006
    set $P5007, $P5006
  if3261_end6719:
    unless_null $P5007, vivi_32626721
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5007, $P5008
  vivi_32626721:
    unless $P5007 goto if3260_else6716 
.annotate 'line', 2517
.annotate 'line', 2518
    $P5009 = "&only_star_block"()
    set $P101, $P5009
    goto if3260_end6717
  if3260_else6716:
.annotate 'line', 2520
.annotate 'line', 2521
    unless_null _lex_param_1, fallback6724
    nqp_get_sc_object $P5010, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5010
  fallback6724:
    set fb_tmp_812, _lex_param_1
    repr_defined $I5002, fb_tmp_812
    unless $I5002 goto if3263_else6722 
    set $P5011, fb_tmp_812["blockoid"]
    set $P5013, $P5011
    goto if3263_end6723
  if3263_else6722:
    null $P5012
    set $P5013, $P5012
  if3263_end6723:
    unless_null $P5013, vivi_32646725
    nqp_get_sc_object $P5014, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5013, $P5014
  vivi_32646725:
    $P5015 = $P5013."ast"()
    set $P101, $P5015
.annotate 'line', 2522
    $P101."blocktype"("declaration")
    find_dynamic_lex $P5016, "$*RETURN_USED"
    unless_null $P5016, fallback6728
    nqp_get_sc_object $P5018, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5017, $P5018
    set fb_tmp_813, $P5017
    repr_defined $I5003, fb_tmp_813
    unless $I5003 goto if3266_else6729 
    set $P5019, fb_tmp_813["$RETURN_USED"]
    set $P5021, $P5019
    goto if3266_end6730
  if3266_else6729:
    null $P5020
    set $P5021, $P5020
  if3266_end6730:
    unless_null $P5021, vivi_32676731
    nqp_get_sc_object $P5022, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5021, $P5022
  vivi_32676731:
    unless_null $P5021, vivi_32686732
    die "Contextual $*RETURN_USED not found"
    box $P5023, "Contextual $*RETURN_USED not found"
    set $P5021, $P5023
  vivi_32686732:
    set $P5016, $P5021
  fallback6728:
    set $P5029, $P5016
    unless $P5016 goto if3265_end6727 
.annotate 'line', 2523
.annotate 'line', 2524
    set fb_tmp_814, $P101
    repr_defined $I5004, fb_tmp_814
    unless $I5004 goto if3269_else6733 
    set $P5024, fb_tmp_814[1]
    set $P5026, $P5024
    goto if3269_end6734
  if3269_else6733:
    null $P5025
    set $P5026, $P5025
  if3269_end6734:
    unless_null $P5026, vivi_32706735
    nqp_get_sc_object $P5027, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5026, $P5027
  vivi_32706735:
    $P5028 = "&wrap_return_handler"($P5026)
    set $P101[1], $P5028
    set $P5029, $P5028
  if3265_end6727:
  if3260_end6717:
    set fb_tmp_815, $P101
    repr_defined $I5005, fb_tmp_815
    unless $I5005 goto if3272_else6738 
    set $P5030, fb_tmp_815["signature_has_invocant"]
    set $P5032, $P5030
    goto if3272_end6739
  if3272_else6738:
    null $P5031
    set $P5032, $P5031
  if3272_end6739:
    unless_null $P5032, vivi_32736740
    nqp_get_sc_object $P5033, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5032, $P5033
  vivi_32736740:
    if $P5032 goto unless3271_end6737 
.annotate 'line', 2529
.annotate 'line', 2530
    set fb_tmp_816, $P101
    repr_defined $I5006, fb_tmp_816
    unless $I5006 goto if3274_else6741 
    set $P5034, fb_tmp_816[0]
    set $P5036, $P5034
    goto if3274_end6742
  if3274_else6741:
    null $P5035
    set $P5036, $P5035
  if3274_end6742:
    unless_null $P5036, vivi_32756743
    nqp_get_sc_object $P5037, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5036, $P5037
  vivi_32756743:
    nqp_get_sc_object $P5040, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5039, $P5040, "QAST"
    get_who $P5038, $P5039
    set fb_tmp_817, $P5038
    repr_defined $I5007, fb_tmp_817
    unless $I5007 goto if3276_else6744 
    set $P5041, fb_tmp_817["Var"]
    set $P5043, $P5041
    goto if3276_end6745
  if3276_else6744:
    null $P5042
    set $P5043, $P5042
  if3276_end6745:
    unless_null $P5043, vivi_32776746
    nqp_get_sc_object $P5044, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5043, $P5044
  vivi_32776746:
    find_dynamic_lex $P5045, "$*PACKAGE"
    unless_null $P5045, fallback6747
    nqp_get_sc_object $P5047, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5046, $P5047
    set fb_tmp_818, $P5046
    repr_defined $I5008, fb_tmp_818
    unless $I5008 goto if3278_else6748 
    set $P5048, fb_tmp_818["$PACKAGE"]
    set $P5050, $P5048
    goto if3278_end6749
  if3278_else6748:
    null $P5049
    set $P5050, $P5049
  if3278_end6749:
    unless_null $P5050, vivi_32796750
    nqp_get_sc_object $P5051, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5050, $P5051
  vivi_32796750:
    unless_null $P5050, vivi_32806751
    die "Contextual $*PACKAGE not found"
    box $P5052, "Contextual $*PACKAGE not found"
    set $P5050, $P5052
  vivi_32806751:
    set $P5045, $P5050
  fallback6747:
    $P5053 = $P5043."new"("self" :named("name"), "lexical" :named("scope"), "param" :named("decl"), $P5045 :named("returns"))
    $P5054 = $P5036."unshift"($P5053)
  unless3271_end6737:
.annotate 'line', 2535
    $P101."symbol"("self", "lexical" :named("scope"))
    box $P5055, ""
    set $P102, $P5055
    unless_null _lex_param_1, fallback6756
    nqp_get_sc_object $P5056, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5056
  fallback6756:
    set fb_tmp_819, _lex_param_1
    repr_defined $I5009, fb_tmp_819
    unless $I5009 goto if3282_else6754 
    set $P5057, fb_tmp_819["deflongname"]
    set $P5059, $P5057
    goto if3282_end6755
  if3282_else6754:
    null $P5058
    set $P5059, $P5058
  if3282_end6755:
    unless_null $P5059, vivi_32836757
    nqp_get_sc_object $P5060, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5059, $P5060
  vivi_32836757:
    unless $P5059 goto if3281_else6752 
.annotate 'line', 2539
    unless_null _lex_param_1, fallback6760
    nqp_get_sc_object $P5061, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5061
  fallback6760:
    set fb_tmp_820, _lex_param_1
    repr_defined $I5010, fb_tmp_820
    unless $I5010 goto if3284_else6758 
    set $P5062, fb_tmp_820["private"]
    set $P5064, $P5062
    goto if3284_end6759
  if3284_else6758:
    null $P5063
    set $P5064, $P5063
  if3284_end6759:
    unless_null $P5064, vivi_32856761
    nqp_get_sc_object $P5065, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5064, $P5065
  vivi_32856761:
    set $S5002, $P5064
.annotate 'line', 2540
    unless_null _lex_param_1, fallback6766
    nqp_get_sc_object $P5066, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5066
  fallback6766:
    set fb_tmp_822, _lex_param_1
    repr_defined $I5012, fb_tmp_822
    unless $I5012 goto if3287_else6764 
    set $P5067, fb_tmp_822["deflongname"]
    set $P5069, $P5067
    goto if3287_end6765
  if3287_else6764:
    null $P5068
    set $P5069, $P5068
  if3287_end6765:
    unless_null $P5069, vivi_32886767
    nqp_get_sc_object $P5070, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5069, $P5070
  vivi_32886767:
    set fb_tmp_821, $P5069
    repr_defined $I5011, fb_tmp_821
    unless $I5011 goto if3286_else6762 
    set $P5071, fb_tmp_821[0]
    set $P5073, $P5071
    goto if3286_end6763
  if3286_else6762:
    null $P5072
    set $P5073, $P5072
  if3286_end6763:
    unless_null $P5073, vivi_32896768
    nqp_get_sc_object $P5074, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5073, $P5074
  vivi_32896768:
    $P5075 = $P5073."ast"()
    set $S5003, $P5075
    concat $S5001, $S5002, $S5003
    box $P5076, $S5001
    set $P102, $P5076
    goto if3281_end6753
  if3281_else6752:
    unless_null _lex_param_1, fallback6773
    nqp_get_sc_object $P5077, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5077
  fallback6773:
    set fb_tmp_823, _lex_param_1
    repr_defined $I5013, fb_tmp_823
    unless $I5013 goto if3291_else6771 
    set $P5078, fb_tmp_823["latename"]
    set $P5080, $P5078
    goto if3291_end6772
  if3291_else6771:
    null $P5079
    set $P5080, $P5079
  if3291_end6772:
    unless_null $P5080, vivi_32926774
    nqp_get_sc_object $P5081, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5080, $P5081
  vivi_32926774:
    set $P5098, $P5080
    unless $P5080 goto if3290_end6770 
.annotate 'line', 2542
    find_dynamic_lex $P5082, "$*PKGDECL"
    unless_null $P5082, fallback6777
    nqp_get_sc_object $P5084, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5083, $P5084
    set fb_tmp_824, $P5083
    repr_defined $I5015, fb_tmp_824
    unless $I5015 goto if3294_else6778 
    set $P5085, fb_tmp_824["$PKGDECL"]
    set $P5087, $P5085
    goto if3294_end6779
  if3294_else6778:
    null $P5086
    set $P5087, $P5086
  if3294_end6779:
    unless_null $P5087, vivi_32956780
    nqp_get_sc_object $P5088, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5087, $P5088
  vivi_32956780:
    unless_null $P5087, vivi_32966781
    die "Contextual $*PKGDECL not found"
    box $P5089, "Contextual $*PKGDECL not found"
    set $P5087, $P5089
  vivi_32966781:
    set $P5082, $P5087
  fallback6777:
    set $S5004, $P5082
    isne $I5014, $S5004, "role"
    unless $I5014 goto if3293_end6776 
.annotate 'line', 2543
.annotate 'line', 2544
    $P5090 = _lex_param_1."CURSOR"()
    $P5091 = $P5090."panic"("Late-bound method name only valid in role")
  if3293_end6776:
    unless_null _lex_param_1, fallback6784
    nqp_get_sc_object $P5092, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5092
  fallback6784:
    set fb_tmp_825, _lex_param_1
    repr_defined $I5016, fb_tmp_825
    unless $I5016 goto if3297_else6782 
    set $P5093, fb_tmp_825["latename"]
    set $P5095, $P5093
    goto if3297_end6783
  if3297_else6782:
    null $P5094
    set $P5095, $P5094
  if3297_end6783:
    unless_null $P5095, vivi_32986785
    nqp_get_sc_object $P5096, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5095, $P5096
  vivi_32986785:
    set $S5006, $P5095
    concat $S5005, "!!LATENAME!!", $S5006
    box $P5097, $S5005
    set $P102, $P5097
    set $P5098, $P102
  if3290_end6770:
  if3281_end6753:
    set $S5007, $P102
    isne $I5017, $S5007, ""
    unless $I5017 goto if3299_end6787 
    .const 'Sub' $P5099 = 'cuid_478_1360432459.413' 
    capture_lex $P5099
    $P5100 = $P5099()
  if3299_end6787:
.annotate 'line', 2582
    nqp_get_sc_object $P5103, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5102, $P5103, "QAST"
    get_who $P5101, $P5102
    set fb_tmp_844, $P5101
    repr_defined $I5018, fb_tmp_844
    unless $I5018 goto if3349_else6868 
    set $P5104, fb_tmp_844["Op"]
    set $P5106, $P5104
    goto if3349_end6869
  if3349_else6868:
    null $P5105
    set $P5106, $P5105
  if3349_end6869:
    unless_null $P5106, vivi_33506870
    nqp_get_sc_object $P5107, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5106, $P5107
  vivi_33506870:
    $P5108 = $P5106."new"($P101, "takeclosure" :named("op"))
    set $P103, $P5108
    set $P103["sink"], $P101
    set $P103["block_past"], $P101
    set fb_tmp_845, $P101
    repr_defined $I5019, fb_tmp_845
    unless $I5019 goto if3351_else6871 
    set $P5109, fb_tmp_845["code_obj"]
    set $P5111, $P5109
    goto if3351_end6872
  if3351_else6871:
    null $P5110
    set $P5111, $P5110
  if3351_end6872:
    unless_null $P5111, vivi_33526873
    nqp_get_sc_object $P5112, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5111, $P5112
  vivi_33526873:
    set $P103["code_obj"], $P5111
.annotate 'line', 2586
    _lex_param_1."!make"($P103)
    unless_null _lex_param_1, fallback6878
    nqp_get_sc_object $P5113, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5113
  fallback6878:
    set fb_tmp_846, _lex_param_1
    repr_defined $I5020, fb_tmp_846
    unless $I5020 goto if3354_else6876 
    set $P5114, fb_tmp_846["trait"]
    set $P5116, $P5114
    goto if3354_end6877
  if3354_else6876:
    null $P5115
    set $P5116, $P5115
  if3354_end6877:
    unless_null $P5116, vivi_33556879
    nqp_get_sc_object $P5117, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5116, $P5117
  vivi_33556879:
    set $P5128, $P5116
    unless $P5116 goto if3353_end6875 
.annotate 'line', 2587
    unless_null _lex_param_1, fallback6882
    nqp_get_sc_object $P5121, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5121
  fallback6882:
    set fb_tmp_847, _lex_param_1
    repr_defined $I5021, fb_tmp_847
    unless $I5021 goto if3356_else6880 
    set $P5122, fb_tmp_847["trait"]
    set $P5124, $P5122
    goto if3356_end6881
  if3356_else6880:
    null $P5123
    set $P5124, $P5123
  if3356_end6881:
    unless_null $P5124, vivi_33576883
    nqp_get_sc_object $P5125, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5124, $P5125
  vivi_33576883:
    set $P5118, $P5124
    iter $P5120, $P5124
  for_next6884:
    unless $P5120, for_done6886
    shift $P5127, $P5120
  for_redo6885:
    .const 'Sub' $P5126 = 'cuid_479_1360432459.413' 
    capture_lex $P5126
    $P5118 = $P5126($P5127)
    goto for_next6884
  for_done6886:
    set $P5128, $P5118
  if3353_end6875:
    .return ($P5128) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_478_1360432459.413") :anon :lex :outer("cuid_308_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2548
    .lex "$meta_meth", $P101 
    .lex "$is_dispatcher", $P102 
    .lex "$code", $P103 
    .local pmc fb_tmp_826 
    .local pmc fb_tmp_827 
    .local pmc fb_tmp_828 
    .local pmc fb_tmp_829 
    .local pmc fb_tmp_830 
    .local pmc fb_tmp_831 
    .local pmc fb_tmp_832 
    .local pmc fb_tmp_833 
    .local pmc fb_tmp_834 
    .local pmc fb_tmp_835 
    .local pmc fb_tmp_836 
    .local pmc fb_tmp_837 
    .local pmc fb_tmp_838 
    .local pmc fb_tmp_839 
    .local pmc fb_tmp_840 
    .local pmc fb_tmp_841 
    .local pmc fb_tmp_842 
    .local pmc fb_tmp_843 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P103, $P5003
.annotate 'line', 2550
    find_lex $P5004, "$past"
    find_lex $P5005, "$name"
    $P5004."name"($P5005)
    find_dynamic_lex $P5006, "$*MULTINESS"
    unless_null $P5006, fallback6790
    nqp_get_sc_object $P5008, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5007, $P5008
    set fb_tmp_826, $P5007
    repr_defined $I5002, fb_tmp_826
    unless $I5002 goto if3301_else6791 
    set $P5009, fb_tmp_826["$MULTINESS"]
    set $P5011, $P5009
    goto if3301_end6792
  if3301_else6791:
    null $P5010
    set $P5011, $P5010
  if3301_end6792:
    unless_null $P5011, vivi_33026793
    nqp_get_sc_object $P5012, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5011, $P5012
  vivi_33026793:
    unless_null $P5011, vivi_33036794
    die "Contextual $*MULTINESS not found"
    box $P5013, "Contextual $*MULTINESS not found"
    set $P5011, $P5013
  vivi_33036794:
    set $P5006, $P5011
  fallback6790:
    set $S5001, $P5006
    iseq $I5001, $S5001, "multi"
    unless $I5001 goto if3300_else6788 
    set $S5002, "add_multi_method"
    goto if3300_end6789
  if3300_else6788:
    set $S5002, "add_method"
  if3300_end6789:
    box $P5014, $S5002
    set $P101, $P5014
    find_dynamic_lex $P5015, "$*MULTINESS"
    unless_null $P5015, fallback6795
    nqp_get_sc_object $P5017, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5016, $P5017
    set fb_tmp_827, $P5016
    repr_defined $I5004, fb_tmp_827
    unless $I5004 goto if3304_else6796 
    set $P5018, fb_tmp_827["$MULTINESS"]
    set $P5020, $P5018
    goto if3304_end6797
  if3304_else6796:
    null $P5019
    set $P5020, $P5019
  if3304_end6797:
    unless_null $P5020, vivi_33056798
    nqp_get_sc_object $P5021, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5020, $P5021
  vivi_33056798:
    unless_null $P5020, vivi_33066799
    die "Contextual $*MULTINESS not found"
    box $P5022, "Contextual $*MULTINESS not found"
    set $P5020, $P5022
  vivi_33066799:
    set $P5015, $P5020
  fallback6795:
    set $S5003, $P5015
    iseq $I5003, $S5003, "proto"
    box $P5023, $I5003
    set $P102, $P5023
.annotate 'line', 2555
    find_dynamic_lex $P5024, "$*W"
    unless_null $P5024, fallback6800
    nqp_get_sc_object $P5026, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5025, $P5026
    set fb_tmp_828, $P5025
    repr_defined $I5005, fb_tmp_828
    unless $I5005 goto if3307_else6801 
    set $P5027, fb_tmp_828["$W"]
    set $P5029, $P5027
    goto if3307_end6802
  if3307_else6801:
    null $P5028
    set $P5029, $P5028
  if3307_end6802:
    unless_null $P5029, vivi_33086803
    nqp_get_sc_object $P5030, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5029, $P5030
  vivi_33086803:
    unless_null $P5029, vivi_33096804
    die "Contextual $*W not found"
    box $P5031, "Contextual $*W not found"
    set $P5029, $P5031
  vivi_33096804:
    set $P5024, $P5029
  fallback6800:
    find_lex $P5032, "$past"
    find_lex $P5033, "$name"
    $P5034 = $P5024."create_code"($P5032, $P5033, $P102)
    set $P103, $P5034
    find_dynamic_lex $P5035, "$*MULTINESS"
    unless_null $P5035, fallback6807
    nqp_get_sc_object $P5037, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5036, $P5037
    set fb_tmp_829, $P5036
    repr_defined $I5007, fb_tmp_829
    unless $I5007 goto if3311_else6808 
    set $P5038, fb_tmp_829["$MULTINESS"]
    set $P5040, $P5038
    goto if3311_end6809
  if3311_else6808:
    null $P5039
    set $P5040, $P5039
  if3311_end6809:
    unless_null $P5040, vivi_33126810
    nqp_get_sc_object $P5041, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5040, $P5041
  vivi_33126810:
    unless_null $P5040, vivi_33136811
    die "Contextual $*MULTINESS not found"
    box $P5042, "Contextual $*MULTINESS not found"
    set $P5040, $P5042
  vivi_33136811:
    set $P5035, $P5040
  fallback6807:
    set $S5004, $P5035
    iseq $I5006, $S5004, "multi"
    unless $I5006 goto if3310_end6806 
.annotate 'line', 2556
    find_lex $P5043, "$past"
    $P5044 = "&attach_multi_signature"($P103, $P5043)
  if3310_end6806:
.annotate 'line', 2557
    find_dynamic_lex $P5045, "$*W"
    unless_null $P5045, fallback6812
    nqp_get_sc_object $P5047, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5046, $P5047
    set fb_tmp_830, $P5046
    repr_defined $I5008, fb_tmp_830
    unless $I5008 goto if3314_else6813 
    set $P5048, fb_tmp_830["$W"]
    set $P5050, $P5048
    goto if3314_end6814
  if3314_else6813:
    null $P5049
    set $P5050, $P5049
  if3314_end6814:
    unless_null $P5050, vivi_33156815
    nqp_get_sc_object $P5051, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5050, $P5051
  vivi_33156815:
    unless_null $P5050, vivi_33166816
    die "Contextual $*W not found"
    box $P5052, "Contextual $*W not found"
    set $P5050, $P5052
  vivi_33166816:
    set $P5045, $P5050
  fallback6812:
    find_dynamic_lex $P5053, "$*PACKAGE"
    unless_null $P5053, fallback6817
    nqp_get_sc_object $P5055, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5054, $P5055
    set fb_tmp_831, $P5054
    repr_defined $I5009, fb_tmp_831
    unless $I5009 goto if3317_else6818 
    set $P5056, fb_tmp_831["$PACKAGE"]
    set $P5058, $P5056
    goto if3317_end6819
  if3317_else6818:
    null $P5057
    set $P5058, $P5057
  if3317_end6819:
    unless_null $P5058, vivi_33186820
    nqp_get_sc_object $P5059, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5058, $P5059
  vivi_33186820:
    unless_null $P5058, vivi_33196821
    die "Contextual $*PACKAGE not found"
    box $P5060, "Contextual $*PACKAGE not found"
    set $P5058, $P5060
  vivi_33196821:
    set $P5053, $P5058
  fallback6817:
    find_lex $P5061, "$name"
    $P5045."pkg_add_method"($P5053, $P101, $P5061, $P103)
    find_lex $P5062, "$past"
    set $P5062["code_obj"], $P103
    find_dynamic_lex $P5063, "$*SCOPE"
    unless_null $P5063, fallback6824
    nqp_get_sc_object $P5065, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5064, $P5065
    set fb_tmp_832, $P5064
    repr_defined $I5011, fb_tmp_832
    unless $I5011 goto if3321_else6825 
    set $P5066, fb_tmp_832["$SCOPE"]
    set $P5068, $P5066
    goto if3321_end6826
  if3321_else6825:
    null $P5067
    set $P5068, $P5067
  if3321_end6826:
    unless_null $P5068, vivi_33226827
    nqp_get_sc_object $P5069, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5068, $P5069
  vivi_33226827:
    unless_null $P5068, vivi_33236828
    die "Contextual $*SCOPE not found"
    box $P5070, "Contextual $*SCOPE not found"
    set $P5068, $P5070
  vivi_33236828:
    set $P5063, $P5068
  fallback6824:
    set $S5005, $P5063
    iseq $I5010, $S5005, "our"
    unless $I5010 goto if3320_end6823 
.annotate 'line', 2561
.annotate 'line', 2562
    find_dynamic_lex $P5071, "$*W"
    unless_null $P5071, fallback6829
    nqp_get_sc_object $P5073, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5072, $P5073
    set fb_tmp_833, $P5072
    repr_defined $I5012, fb_tmp_833
    unless $I5012 goto if3324_else6830 
    set $P5074, fb_tmp_833["$W"]
    set $P5076, $P5074
    goto if3324_end6831
  if3324_else6830:
    null $P5075
    set $P5076, $P5075
  if3324_end6831:
    unless_null $P5076, vivi_33256832
    nqp_get_sc_object $P5077, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5076, $P5077
  vivi_33256832:
    unless_null $P5076, vivi_33266833
    die "Contextual $*W not found"
    box $P5078, "Contextual $*W not found"
    set $P5076, $P5078
  vivi_33266833:
    set $P5071, $P5076
  fallback6829:
    find_dynamic_lex $P5079, "$*PACKAGE"
    unless_null $P5079, fallback6834
    nqp_get_sc_object $P5081, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5080, $P5081
    set fb_tmp_834, $P5080
    repr_defined $I5013, fb_tmp_834
    unless $I5013 goto if3327_else6835 
    set $P5082, fb_tmp_834["$PACKAGE"]
    set $P5084, $P5082
    goto if3327_end6836
  if3327_else6835:
    null $P5083
    set $P5084, $P5083
  if3327_end6836:
    unless_null $P5084, vivi_33286837
    nqp_get_sc_object $P5085, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5084, $P5085
  vivi_33286837:
    unless_null $P5084, vivi_33296838
    die "Contextual $*PACKAGE not found"
    box $P5086, "Contextual $*PACKAGE not found"
    set $P5084, $P5086
  vivi_33296838:
    set $P5079, $P5084
  fallback6834:
    find_lex $P5087, "$name"
    find_lex $P5088, "$past"
    $P5089 = $P5071."install_package_routine"($P5079, $P5087, $P5088)
  if3320_end6823:
    set $P5157, $P102
    unless $P102 goto if3330_end6840 
.annotate 'line', 2567
.annotate 'line', 2568
    find_lex $P5090, "$past"
    set fb_tmp_835, $P5090
    repr_defined $I5014, fb_tmp_835
    unless $I5014 goto if3331_else6841 
    set $P5091, fb_tmp_835[0]
    set $P5093, $P5091
    goto if3331_end6842
  if3331_else6841:
    null $P5092
    set $P5093, $P5092
  if3331_end6842:
    unless_null $P5093, vivi_33326843
    nqp_get_sc_object $P5094, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5093, $P5094
  vivi_33326843:
    nqp_get_sc_object $P5097, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5096, $P5097, "QAST"
    get_who $P5095, $P5096
    set fb_tmp_836, $P5095
    repr_defined $I5015, fb_tmp_836
    unless $I5015 goto if3333_else6844 
    set $P5098, fb_tmp_836["Op"]
    set $P5100, $P5098
    goto if3333_end6845
  if3333_else6844:
    null $P5099
    set $P5100, $P5099
  if3333_end6845:
    unless_null $P5100, vivi_33346846
    nqp_get_sc_object $P5101, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5100, $P5101
  vivi_33346846:
.annotate 'line', 2570
    nqp_get_sc_object $P5104, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5103, $P5104, "QAST"
    get_who $P5102, $P5103
    set fb_tmp_837, $P5102
    repr_defined $I5016, fb_tmp_837
    unless $I5016 goto if3335_else6847 
    set $P5105, fb_tmp_837["Var"]
    set $P5107, $P5105
    goto if3335_end6848
  if3335_else6847:
    null $P5106
    set $P5107, $P5106
  if3335_end6848:
    unless_null $P5107, vivi_33366849
    nqp_get_sc_object $P5108, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5107, $P5108
  vivi_33366849:
    $P5109 = $P5107."new"("CURRENT_DISPATCH_CAPTURE" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2571
    nqp_get_sc_object $P5112, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5111, $P5112, "QAST"
    get_who $P5110, $P5111
    set fb_tmp_838, $P5110
    repr_defined $I5017, fb_tmp_838
    unless $I5017 goto if3337_else6850 
    set $P5113, fb_tmp_838["Op"]
    set $P5115, $P5113
    goto if3337_end6851
  if3337_else6850:
    null $P5114
    set $P5115, $P5114
  if3337_end6851:
    unless_null $P5115, vivi_33386852
    nqp_get_sc_object $P5116, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5115, $P5116
  vivi_33386852:
    $P5117 = $P5115."new"("savecapture" :named("op"))
    $P5118 = $P5100."new"($P5109, $P5117, "bind" :named("op"))
    $P5093."push"($P5118)
.annotate 'line', 2573
    find_lex $P5119, "$past"
    set fb_tmp_839, $P5119
    repr_defined $I5018, fb_tmp_839
    unless $I5018 goto if3339_else6853 
    set $P5120, fb_tmp_839[0]
    set $P5122, $P5120
    goto if3339_end6854
  if3339_else6853:
    null $P5121
    set $P5122, $P5121
  if3339_end6854:
    unless_null $P5122, vivi_33406855
    nqp_get_sc_object $P5123, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5122, $P5123
  vivi_33406855:
    nqp_get_sc_object $P5126, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5125, $P5126, "QAST"
    get_who $P5124, $P5125
    set fb_tmp_840, $P5124
    repr_defined $I5019, fb_tmp_840
    unless $I5019 goto if3341_else6856 
    set $P5127, fb_tmp_840["Op"]
    set $P5129, $P5127
    goto if3341_end6857
  if3341_else6856:
    null $P5128
    set $P5129, $P5128
  if3341_end6857:
    unless_null $P5129, vivi_33426858
    nqp_get_sc_object $P5130, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5129, $P5130
  vivi_33426858:
.annotate 'line', 2575
    nqp_get_sc_object $P5133, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5132, $P5133, "QAST"
    get_who $P5131, $P5132
    set fb_tmp_841, $P5131
    repr_defined $I5020, fb_tmp_841
    unless $I5020 goto if3343_else6859 
    set $P5134, fb_tmp_841["Var"]
    set $P5136, $P5134
    goto if3343_end6860
  if3343_else6859:
    null $P5135
    set $P5136, $P5135
  if3343_end6860:
    unless_null $P5136, vivi_33446861
    nqp_get_sc_object $P5137, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5136, $P5137
  vivi_33446861:
    $P5138 = $P5136."new"("&*CURRENT_DISPATCHER" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2576
    nqp_get_sc_object $P5141, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5140, $P5141, "QAST"
    get_who $P5139, $P5140
    set fb_tmp_842, $P5139
    repr_defined $I5021, fb_tmp_842
    unless $I5021 goto if3345_else6862 
    set $P5142, fb_tmp_842["Op"]
    set $P5144, $P5142
    goto if3345_end6863
  if3345_else6862:
    null $P5143
    set $P5144, $P5143
  if3345_end6863:
    unless_null $P5144, vivi_33466864
    nqp_get_sc_object $P5145, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5144, $P5145
  vivi_33466864:
    nqp_get_sc_object $P5148, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5147, $P5148, "QAST"
    get_who $P5146, $P5147
    set fb_tmp_843, $P5146
    repr_defined $I5022, fb_tmp_843
    unless $I5022 goto if3347_else6865 
    set $P5149, fb_tmp_843["Op"]
    set $P5151, $P5149
    goto if3347_end6866
  if3347_else6865:
    null $P5150
    set $P5151, $P5150
  if3347_end6866:
    unless_null $P5151, vivi_33486867
    nqp_get_sc_object $P5152, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5151, $P5152
  vivi_33486867:
    $P5153 = $P5151."new"("curcode" :named("op"))
    $P5154 = $P5144."new"($P5153, "getcodeobj" :named("op"))
    $P5155 = $P5129."new"($P5138, $P5154, "bind" :named("op"))
    $P5156 = $P5122."push"($P5155)
    set $P5157, $P5156
  if3330_end6840:
    .return ($P5157) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_479_1360432459.413") :anon :lex :outer("cuid_308_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2588
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5002, "$/"
    $P5001 = _lex_param_0."ast"()
    $P5003 = $P5001($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "signature" :subid("cuid_309_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2640
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5033 = 'cuid_480_1360432459.413' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_481_1360432459.413' 
    capture_lex $P5033 
    .lex "$BLOCK", $P101 
    .lex "$BLOCKINIT", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_848 
    .local pmc fb_tmp_849 
    .local pmc fb_tmp_850 
    .local pmc fb_tmp_856 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
.annotate 'line', 2641
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback6887
    nqp_get_sc_object $P5005, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5004, $P5005
    set fb_tmp_848, $P5004
    repr_defined $I5001, fb_tmp_848
    unless $I5001 goto if3358_else6888 
    set $P5006, fb_tmp_848["$W"]
    set $P5008, $P5006
    goto if3358_end6889
  if3358_else6888:
    null $P5007
    set $P5008, $P5007
  if3358_end6889:
    unless_null $P5008, vivi_33596890
    nqp_get_sc_object $P5009, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5008, $P5009
  vivi_33596890:
    unless_null $P5008, vivi_33606891
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_33606891:
    set $P5003, $P5008
  fallback6887:
    $P5011 = $P5003."cur_lexpad"()
    set $P101, $P5011
    set fb_tmp_849, $P101
    repr_defined $I5002, fb_tmp_849
    unless $I5002 goto if3361_else6892 
    set $P5012, fb_tmp_849[0]
    set $P5014, $P5012
    goto if3361_end6893
  if3361_else6892:
    null $P5013
    set $P5014, $P5013
  if3361_end6893:
    unless_null $P5014, vivi_33626894
    nqp_get_sc_object $P5015, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5014, $P5015
  vivi_33626894:
    set $P102, $P5014
    unless_null _lex_param_1, fallback6899
    nqp_get_sc_object $P5016, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5016
  fallback6899:
    set fb_tmp_850, _lex_param_1
    repr_defined $I5003, fb_tmp_850
    unless $I5003 goto if3364_else6897 
    set $P5017, fb_tmp_850["invocant"]
    set $P5019, $P5017
    goto if3364_end6898
  if3364_else6897:
    null $P5018
    set $P5019, $P5018
  if3364_end6898:
    unless_null $P5019, vivi_33656900
    nqp_get_sc_object $P5020, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5019, $P5020
  vivi_33656900:
    unless $P5019 goto if3363_end6896 
    .const 'Sub' $P5021 = 'cuid_480_1360432459.413' 
    capture_lex $P5021
    $P5022 = $P5021()
  if3363_end6896:
    unless_null _lex_param_1, fallback6919
    nqp_get_sc_object $P5026, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5026
  fallback6919:
    set fb_tmp_856, _lex_param_1
    repr_defined $I5004, fb_tmp_856
    unless $I5004 goto if3376_else6917 
    set $P5027, fb_tmp_856["parameter"]
    set $P5029, $P5027
    goto if3376_end6918
  if3376_else6917:
    null $P5028
    set $P5029, $P5028
  if3376_end6918:
    unless_null $P5029, vivi_33776920
    nqp_get_sc_object $P5030, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5029, $P5030
  vivi_33776920:
    set $P5023, $P5029
    iter $P5025, $P5029
  for_next6921:
    unless $P5025, for_done6923
    shift $P5032, $P5025
  for_redo6922:
    .const 'Sub' $P5031 = 'cuid_481_1360432459.413' 
    capture_lex $P5031
    $P5023 = $P5031($P5032)
    goto for_next6921
  for_done6923:
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_480_1360432459.413") :anon :lex :outer("cuid_309_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2643
    .lex "$inv", $P101 
    .local pmc fb_tmp_851 
    .local pmc fb_tmp_852 
    .local pmc fb_tmp_853 
    .local pmc fb_tmp_854 
    .local pmc fb_tmp_855 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
.annotate 'line', 2644
    find_lex $P5002, "$/"
    unless_null $P5002, fallback6905
    nqp_get_sc_object $P5003, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5002, $P5003
  fallback6905:
    set fb_tmp_852, $P5002
    repr_defined $I5002, fb_tmp_852
    unless $I5002 goto if3367_else6903 
    set $P5004, fb_tmp_852["invocant"]
    set $P5006, $P5004
    goto if3367_end6904
  if3367_else6903:
    null $P5005
    set $P5006, $P5005
  if3367_end6904:
    unless_null $P5006, vivi_33686906
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_33686906:
    set fb_tmp_851, $P5006
    repr_defined $I5001, fb_tmp_851
    unless $I5001 goto if3366_else6901 
    set $P5008, fb_tmp_851[0]
    set $P5010, $P5008
    goto if3366_end6902
  if3366_else6901:
    null $P5009
    set $P5010, $P5009
  if3366_end6902:
    unless_null $P5010, vivi_33696907
    nqp_get_sc_object $P5011, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5010, $P5011
  vivi_33696907:
    $P5012 = $P5010."ast"()
    set $P101, $P5012
.annotate 'line', 2645
    find_lex $P5013, "$BLOCKINIT"
    $P5013."push"($P101)
.annotate 'line', 2646
    find_lex $P5014, "$BLOCKINIT"
    nqp_get_sc_object $P5017, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5016, $P5017, "QAST"
    get_who $P5015, $P5016
    set fb_tmp_853, $P5015
    repr_defined $I5003, fb_tmp_853
    unless $I5003 goto if3370_else6908 
    set $P5018, fb_tmp_853["Op"]
    set $P5020, $P5018
    goto if3370_end6909
  if3370_else6908:
    null $P5019
    set $P5020, $P5019
  if3370_end6909:
    unless_null $P5020, vivi_33716910
    nqp_get_sc_object $P5021, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5020, $P5021
  vivi_33716910:
.annotate 'line', 2648
    nqp_get_sc_object $P5024, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5023, $P5024, "QAST"
    get_who $P5022, $P5023
    set fb_tmp_854, $P5022
    repr_defined $I5004, fb_tmp_854
    unless $I5004 goto if3372_else6911 
    set $P5025, fb_tmp_854["Var"]
    set $P5027, $P5025
    goto if3372_end6912
  if3372_else6911:
    null $P5026
    set $P5027, $P5026
  if3372_end6912:
    unless_null $P5027, vivi_33736913
    nqp_get_sc_object $P5028, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5027, $P5028
  vivi_33736913:
    $P5029 = $P5027."new"("self" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2649
    nqp_get_sc_object $P5032, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5031, $P5032, "QAST"
    get_who $P5030, $P5031
    set fb_tmp_855, $P5030
    repr_defined $I5005, fb_tmp_855
    unless $I5005 goto if3374_else6914 
    set $P5033, fb_tmp_855["Var"]
    set $P5035, $P5033
    goto if3374_end6915
  if3374_else6914:
    null $P5034
    set $P5035, $P5034
  if3374_end6915:
    unless_null $P5035, vivi_33756916
    nqp_get_sc_object $P5036, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5035, $P5036
  vivi_33756916:
    $P5037 = $P101."name"()
    $P5038 = $P5035."new"("lexical" :named("scope"), $P5037 :named("name"))
    $P5039 = $P5020."new"($P5029, $P5038, "bind" :named("op"))
    $P5014."push"($P5039)
    find_lex $P5040, "$BLOCK"
    box $P5041, 1
    set $P5040["signature_has_invocant"], $P5041
    .return ($P5041) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_481_1360432459.413") :anon :lex :outer("cuid_309_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2653
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "$BLOCKINIT"
    $P5002 = _lex_param_0."ast"()
    $P5003 = $P5001."push"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "parameter" :subid("cuid_310_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2656
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5134 = 'cuid_483_1360432459.413' 
    capture_lex $P5134 
    .lex "$quant", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_857 
    .local pmc fb_tmp_858 
    .local pmc fb_tmp_859 
    .local pmc fb_tmp_860 
    .local pmc fb_tmp_861 
    .local pmc fb_tmp_862 
    .local pmc fb_tmp_863 
    .local pmc fb_tmp_864 
    .local pmc fb_tmp_865 
    .local pmc fb_tmp_866 
    .local pmc fb_tmp_867 
    .local pmc fb_tmp_868 
    .local pmc fb_tmp_869 
    .local pmc fb_tmp_870 
    .local pmc fb_tmp_871 
    .local pmc fb_tmp_872 
    .local pmc fb_tmp_873 
    .local pmc fb_tmp_874 
    .local pmc fb_tmp_879 
    .local pmc fb_tmp_880 
    .local pmc fb_tmp_881 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
    unless_null _lex_param_1, fallback6926
    nqp_get_sc_object $P5003, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5003
  fallback6926:
    set fb_tmp_857, _lex_param_1
    repr_defined $I5001, fb_tmp_857
    unless $I5001 goto if3378_else6924 
    set $P5004, fb_tmp_857["quant"]
    set $P5006, $P5004
    goto if3378_end6925
  if3378_else6924:
    null $P5005
    set $P5006, $P5005
  if3378_end6925:
    unless_null $P5006, vivi_33796927
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_33796927:
    set $P101, $P5006
    unless_null _lex_param_1, fallback6932
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5008
  fallback6932:
    set fb_tmp_858, _lex_param_1
    repr_defined $I5002, fb_tmp_858
    unless $I5002 goto if3381_else6930 
    set $P5009, fb_tmp_858["named_param"]
    set $P5011, $P5009
    goto if3381_end6931
  if3381_else6930:
    null $P5010
    set $P5011, $P5010
  if3381_end6931:
    unless_null $P5011, vivi_33826933
    nqp_get_sc_object $P5012, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5011, $P5012
  vivi_33826933:
    unless $P5011 goto if3380_else6928 
.annotate 'line', 2659
.annotate 'line', 2660
    unless_null _lex_param_1, fallback6936
    nqp_get_sc_object $P5013, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5013
  fallback6936:
    set fb_tmp_859, _lex_param_1
    repr_defined $I5003, fb_tmp_859
    unless $I5003 goto if3383_else6934 
    set $P5014, fb_tmp_859["named_param"]
    set $P5016, $P5014
    goto if3383_end6935
  if3383_else6934:
    null $P5015
    set $P5016, $P5015
  if3383_end6935:
    unless_null $P5016, vivi_33846937
    nqp_get_sc_object $P5017, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5016, $P5017
  vivi_33846937:
    $P5018 = $P5016."ast"()
    set $P102, $P5018
    set $S5001, $P101
    isne $I5004, $S5001, "!"
    box $P5035, $I5004
    set $P5034, $P5035
    unless $I5004 goto if3385_end6939 
.annotate 'line', 2661
.annotate 'line', 2662
    unless_null _lex_param_1, fallback6946
    nqp_get_sc_object $P5019, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5019
  fallback6946:
    set fb_tmp_862, _lex_param_1
    repr_defined $I5007, fb_tmp_862
    unless $I5007 goto if3388_else6944 
    set $P5020, fb_tmp_862["named_param"]
    set $P5022, $P5020
    goto if3388_end6945
  if3388_else6944:
    null $P5021
    set $P5022, $P5021
  if3388_end6945:
    unless_null $P5022, vivi_33896947
    nqp_get_sc_object $P5023, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5022, $P5023
  vivi_33896947:
    set fb_tmp_861, $P5022
    repr_defined $I5006, fb_tmp_861
    unless $I5006 goto if3387_else6942 
    set $P5024, fb_tmp_861["param_var"]
    set $P5026, $P5024
    goto if3387_end6943
  if3387_else6942:
    null $P5025
    set $P5026, $P5025
  if3387_end6943:
    unless_null $P5026, vivi_33906948
    nqp_get_sc_object $P5027, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5026, $P5027
  vivi_33906948:
    set fb_tmp_860, $P5026
    repr_defined $I5005, fb_tmp_860
    unless $I5005 goto if3386_else6940 
    set $P5028, fb_tmp_860["sigil"]
    set $P5030, $P5028
    goto if3386_end6941
  if3386_else6940:
    null $P5029
    set $P5030, $P5029
  if3386_end6941:
    unless_null $P5030, vivi_33916949
    nqp_get_sc_object $P5031, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5030, $P5031
  vivi_33916949:
    $P5032 = "&default_for"($P5030)
    $P5033 = $P102."default"($P5032)
    set $P5034, $P5033
  if3385_end6939:
    goto if3380_end6929
  if3380_else6928:
.annotate 'line', 2665
.annotate 'line', 2666
    unless_null _lex_param_1, fallback6952
    nqp_get_sc_object $P5036, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5036
  fallback6952:
    set fb_tmp_863, _lex_param_1
    repr_defined $I5008, fb_tmp_863
    unless $I5008 goto if3392_else6950 
    set $P5037, fb_tmp_863["param_var"]
    set $P5039, $P5037
    goto if3392_end6951
  if3392_else6950:
    null $P5038
    set $P5039, $P5038
  if3392_end6951:
    unless_null $P5039, vivi_33936953
    nqp_get_sc_object $P5040, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5039, $P5040
  vivi_33936953:
    $P5041 = $P5039."ast"()
    set $P102, $P5041
    set $S5002, $P101
    iseq $I5009, $S5002, "*"
    unless $I5009 goto if3394_else6954 
.annotate 'line', 2667
.annotate 'line', 2668
    $P102."slurpy"(1)
.annotate 'line', 2669
    unless_null _lex_param_1, fallback6960
    nqp_get_sc_object $P5042, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5042
  fallback6960:
    set fb_tmp_865, _lex_param_1
    repr_defined $I5012, fb_tmp_865
    unless $I5012 goto if3396_else6958 
    set $P5043, fb_tmp_865["param_var"]
    set $P5045, $P5043
    goto if3396_end6959
  if3396_else6958:
    null $P5044
    set $P5045, $P5044
  if3396_end6959:
    unless_null $P5045, vivi_33976961
    nqp_get_sc_object $P5046, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5045, $P5046
  vivi_33976961:
    set fb_tmp_864, $P5045
    repr_defined $I5011, fb_tmp_864
    unless $I5011 goto if3395_else6956 
    set $P5047, fb_tmp_864["sigil"]
    set $P5049, $P5047
    goto if3395_end6957
  if3395_else6956:
    null $P5048
    set $P5049, $P5048
  if3395_end6957:
    unless_null $P5049, vivi_33986962
    nqp_get_sc_object $P5050, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5049, $P5050
  vivi_33986962:
    set $S5003, $P5049
    iseq $I5010, $S5003, "%"
    $P5051 = $P102."named"($I5010)
    set $P5065, $P5051
    goto if3394_end6955
  if3394_else6954:
    set $S5004, $P101
    iseq $I5013, $S5004, "?"
    box $P5064, $I5013
    set $P5063, $P5064
    unless $I5013 goto if3399_end6964 
.annotate 'line', 2671
.annotate 'line', 2672
    unless_null _lex_param_1, fallback6969
    nqp_get_sc_object $P5052, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5052
  fallback6969:
    set fb_tmp_867, _lex_param_1
    repr_defined $I5015, fb_tmp_867
    unless $I5015 goto if3401_else6967 
    set $P5053, fb_tmp_867["param_var"]
    set $P5055, $P5053
    goto if3401_end6968
  if3401_else6967:
    null $P5054
    set $P5055, $P5054
  if3401_end6968:
    unless_null $P5055, vivi_34026970
    nqp_get_sc_object $P5056, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5055, $P5056
  vivi_34026970:
    set fb_tmp_866, $P5055
    repr_defined $I5014, fb_tmp_866
    unless $I5014 goto if3400_else6965 
    set $P5057, fb_tmp_866["sigil"]
    set $P5059, $P5057
    goto if3400_end6966
  if3400_else6965:
    null $P5058
    set $P5059, $P5058
  if3400_end6966:
    unless_null $P5059, vivi_34036971
    nqp_get_sc_object $P5060, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5059, $P5060
  vivi_34036971:
    $P5061 = "&default_for"($P5059)
    $P5062 = $P102."default"($P5061)
    set $P5063, $P5062
  if3399_end6964:
    set $P5065, $P5063
  if3394_end6955:
  if3380_end6929:
    unless_null _lex_param_1, fallback6976
    nqp_get_sc_object $P5066, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5066
  fallback6976:
    set fb_tmp_868, _lex_param_1
    repr_defined $I5016, fb_tmp_868
    unless $I5016 goto if3405_else6974 
    set $P5067, fb_tmp_868["default_value"]
    set $P5069, $P5067
    goto if3405_end6975
  if3405_else6974:
    null $P5068
    set $P5069, $P5068
  if3405_end6975:
    unless_null $P5069, vivi_34066977
    nqp_get_sc_object $P5070, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5069, $P5070
  vivi_34066977:
    unless $P5069 goto if3404_end6973 
.annotate 'line', 2675
    set $S5005, $P101
    iseq $I5017, $S5005, "*"
    unless $I5017 goto if3407_end6979 
.annotate 'line', 2676
.annotate 'line', 2677
    $P5071 = _lex_param_1."CURSOR"()
    $P5072 = $P5071."panic"("Can't put default on slurpy parameter")
  if3407_end6979:
    set $S5006, $P101
    iseq $I5018, $S5006, "!"
    unless $I5018 goto if3408_end6981 
.annotate 'line', 2679
.annotate 'line', 2680
    $P5073 = _lex_param_1."CURSOR"()
    $P5074 = $P5073."panic"("Can't put default on required parameter")
  if3408_end6981:
.annotate 'line', 2682
    unless_null _lex_param_1, fallback6988
    nqp_get_sc_object $P5075, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5075
  fallback6988:
    set fb_tmp_871, _lex_param_1
    repr_defined $I5021, fb_tmp_871
    unless $I5021 goto if3411_else6986 
    set $P5076, fb_tmp_871["default_value"]
    set $P5078, $P5076
    goto if3411_end6987
  if3411_else6986:
    null $P5077
    set $P5078, $P5077
  if3411_end6987:
    unless_null $P5078, vivi_34126989
    nqp_get_sc_object $P5079, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5078, $P5079
  vivi_34126989:
    set fb_tmp_870, $P5078
    repr_defined $I5020, fb_tmp_870
    unless $I5020 goto if3410_else6984 
    set $P5080, fb_tmp_870[0]
    set $P5082, $P5080
    goto if3410_end6985
  if3410_else6984:
    null $P5081
    set $P5082, $P5081
  if3410_end6985:
    unless_null $P5082, vivi_34136990
    nqp_get_sc_object $P5083, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5082, $P5083
  vivi_34136990:
    set fb_tmp_869, $P5082
    repr_defined $I5019, fb_tmp_869
    unless $I5019 goto if3409_else6982 
    set $P5084, fb_tmp_869["EXPR"]
    set $P5086, $P5084
    goto if3409_end6983
  if3409_else6982:
    null $P5085
    set $P5086, $P5085
  if3409_end6983:
    unless_null $P5086, vivi_34146991
    nqp_get_sc_object $P5087, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5086, $P5087
  vivi_34146991:
    $P5088 = $P5086."ast"()
    $P5089 = $P102."default"($P5088)
  if3404_end6973:
.annotate 'line', 2684
    $P5090 = $P102."default"()
    if $P5090 goto unless3415_end6993 
    find_dynamic_lex $P5091, "$*W"
    unless_null $P5091, fallback6994
    nqp_get_sc_object $P5093, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5092, $P5093
    set fb_tmp_872, $P5092
    repr_defined $I5022, fb_tmp_872
    unless $I5022 goto if3416_else6995 
    set $P5094, fb_tmp_872["$W"]
    set $P5096, $P5094
    goto if3416_end6996
  if3416_else6995:
    null $P5095
    set $P5096, $P5095
  if3416_end6996:
    unless_null $P5096, vivi_34176997
    nqp_get_sc_object $P5097, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5096, $P5097
  vivi_34176997:
    unless_null $P5096, vivi_34186998
    die "Contextual $*W not found"
    box $P5098, "Contextual $*W not found"
    set $P5096, $P5098
  vivi_34186998:
    set $P5091, $P5096
  fallback6994:
    $P5099 = $P5091."cur_lexpad"()
    find_dynamic_lex $P5100, "$*W"
    unless_null $P5100, fallback6999
    nqp_get_sc_object $P5102, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5101, $P5102
    set fb_tmp_873, $P5101
    repr_defined $I5023, fb_tmp_873
    unless $I5023 goto if3419_else7000 
    set $P5103, fb_tmp_873["$W"]
    set $P5105, $P5103
    goto if3419_end7001
  if3419_else7000:
    null $P5104
    set $P5105, $P5104
  if3419_end7001:
    unless_null $P5105, vivi_34207002
    nqp_get_sc_object $P5106, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5105, $P5106
  vivi_34207002:
    unless_null $P5105, vivi_34217003
    die "Contextual $*W not found"
    box $P5107, "Contextual $*W not found"
    set $P5105, $P5107
  vivi_34217003:
    set $P5100, $P5105
  fallback6999:
    $P5108 = $P5100."cur_lexpad"()
    $P5109 = $P5108."arity"()
    set $N5002, $P5109
    set $N5003, 1
    add $N5001, $N5002, $N5003
    $P5110 = $P5099."arity"($N5001)
  unless3415_end6993:
    unless_null _lex_param_1, fallback7008
    nqp_get_sc_object $P5111, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5111
  fallback7008:
    set fb_tmp_874, _lex_param_1
    repr_defined $I5024, fb_tmp_874
    unless $I5024 goto if3423_else7006 
    set $P5112, fb_tmp_874["typename"]
    set $P5114, $P5112
    goto if3423_end7007
  if3423_else7006:
    null $P5113
    set $P5114, $P5113
  if3423_end7007:
    unless_null $P5114, vivi_34247009
    nqp_get_sc_object $P5115, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5114, $P5115
  vivi_34247009:
    unless $P5114 goto if3422_end7005 
    .const 'Sub' $P5116 = 'cuid_483_1360432459.413' 
    capture_lex $P5116
    $P5117 = $P5116()
  if3422_end7005:
    unless_null _lex_param_1, fallback7036
    nqp_get_sc_object $P5118, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5118
  fallback7036:
    set fb_tmp_879, _lex_param_1
    repr_defined $I5025, fb_tmp_879
    unless $I5025 goto if3438_else7034 
    set $P5119, fb_tmp_879["definedness"]
    set $P5121, $P5119
    goto if3438_end7035
  if3438_else7034:
    null $P5120
    set $P5121, $P5120
  if3438_end7035:
    unless_null $P5121, vivi_34397037
    nqp_get_sc_object $P5122, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5121, $P5122
  vivi_34397037:
    unless $P5121 goto if3437_end7033 
.annotate 'line', 2699
    unless_null _lex_param_1, fallback7042
    nqp_get_sc_object $P5123, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5123
  fallback7042:
    set fb_tmp_881, _lex_param_1
    repr_defined $I5027, fb_tmp_881
    unless $I5027 goto if3441_else7040 
    set $P5124, fb_tmp_881["definedness"]
    set $P5126, $P5124
    goto if3441_end7041
  if3441_else7040:
    null $P5125
    set $P5126, $P5125
  if3441_end7041:
    unless_null $P5126, vivi_34427043
    nqp_get_sc_object $P5127, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5126, $P5127
  vivi_34427043:
    set fb_tmp_880, $P5126
    repr_defined $I5026, fb_tmp_880
    unless $I5026 goto if3440_else7038 
    set $P5128, fb_tmp_880[0]
    set $P5130, $P5128
    goto if3440_end7039
  if3440_else7038:
    null $P5129
    set $P5130, $P5129
  if3440_end7039:
    unless_null $P5130, vivi_34437044
    nqp_get_sc_object $P5131, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5130, $P5131
  vivi_34437044:
    set $S5007, $P5130
    box $P5132, $S5007
    set $P102["definedness"], $P5132
  if3437_end7033:
.annotate 'line', 2703
    $P5133 = _lex_param_1."!make"($P102)
    .return ($P5133) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_483_1360432459.413") :anon :lex :outer("cuid_310_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2687
    .const 'Sub' $P5019 = 'cuid_482_1360432459.413' 
    capture_lex $P5019 
    .lex "$type", $P101 
    .local pmc fb_tmp_875 
    .local pmc fb_tmp_876 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
.annotate 'line', 2688
    find_lex $P5002, "$/"
    unless_null $P5002, fallback7014
    nqp_get_sc_object $P5003, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5002, $P5003
  fallback7014:
    set fb_tmp_876, $P5002
    repr_defined $I5002, fb_tmp_876
    unless $I5002 goto if3426_else7012 
    set $P5004, fb_tmp_876["typename"]
    set $P5006, $P5004
    goto if3426_end7013
  if3426_else7012:
    null $P5005
    set $P5006, $P5005
  if3426_end7013:
    unless_null $P5006, vivi_34277015
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_34277015:
    set fb_tmp_875, $P5006
    repr_defined $I5001, fb_tmp_875
    unless $I5001 goto if3425_else7010 
    set $P5008, fb_tmp_875[0]
    set $P5010, $P5008
    goto if3425_end7011
  if3425_else7010:
    null $P5009
    set $P5010, $P5009
  if3425_end7011:
    unless_null $P5010, vivi_34287016
    nqp_get_sc_object $P5011, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5010, $P5011
  vivi_34287016:
    $P5012 = $P5010."ast"()
    $P5013 = $P5012."value"()
    set $P101, $P5013
.annotate 'line', 2689
    find_lex $P5014, "$past"
    $P5014."returns"($P101)
    repr_get_primitive_type_spec $I5003, $P101
    box $P5018, $I5003
    set $P5017, $P5018
    unless $I5003 goto if3429_end7018 
    .const 'Sub' $P5015 = 'cuid_482_1360432459.413' 
    capture_lex $P5015
    $P5016 = $P5015($P5018)
    set $P5017, $P5016
  if3429_end7018:
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_482_1360432459.413") :anon :lex :outer("cuid_483_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2690
    .param pmc _lex_param_0 
    .lex "$prim", _lex_param_0 
    .local pmc fb_tmp_877 
    .local pmc fb_tmp_878 
.annotate 'line', 2691
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback7019
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5002, $P5003
    set fb_tmp_877, $P5002
    repr_defined $I5001, fb_tmp_877
    unless $I5001 goto if3430_else7020 
    set $P5004, fb_tmp_877["$W"]
    set $P5006, $P5004
    goto if3430_end7021
  if3430_else7020:
    null $P5005
    set $P5006, $P5005
  if3430_end7021:
    unless_null $P5006, vivi_34317022
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_34317022:
    unless_null $P5006, vivi_34327023
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_34327023:
    set $P5001, $P5006
  fallback7019:
    $P5009 = $P5001."cur_lexpad"()
    find_lex $P5010, "$past"
    $P5011 = $P5010."name"()
    find_lex $P5012, "$type"
    $P5009."symbol"($P5011, $P5012 :named("type"))
.annotate 'line', 2692
    find_lex $P5013, "$past"
    $P5014 = $P5013."default"()
    set $P5021, $P5014
    unless $P5014 goto if3434_end7027 
    find_lex $P5015, "$/"
    unless_null $P5015, fallback7030
    nqp_get_sc_object $P5016, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5015, $P5016
  fallback7030:
    set fb_tmp_878, $P5015
    repr_defined $I5003, fb_tmp_878
    unless $I5003 goto if3435_else7028 
    set $P5017, fb_tmp_878["default_value"]
    set $P5019, $P5017
    goto if3435_end7029
  if3435_else7028:
    null $P5018
    set $P5019, $P5018
  if3435_end7029:
    unless_null $P5019, vivi_34367031
    nqp_get_sc_object $P5020, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5019, $P5020
  vivi_34367031:
    isfalse $I5002, $P5019
    box $P5022, $I5002
    set $P5021, $P5022
  if3434_end7027:
    set $P5026, $P5021
    unless $P5021 goto if3433_end7025 
.annotate 'line', 2693
    find_lex $P5023, "$past"
    $P5024 = "&default_value_for_prim"(_lex_param_0)
    $P5025 = $P5023."default"($P5024)
    set $P5026, $P5025
  if3433_end7025:
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "param_var" :subid("cuid_311_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2706
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$name", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_882 
    .local pmc fb_tmp_883 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
    set $S5001, _lex_param_1
    box $P5003, $S5001
    set $P101, $P5003
.annotate 'line', 2708
    nqp_get_sc_object $P5006, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5005, $P5006, "QAST"
    get_who $P5004, $P5005
    set fb_tmp_882, $P5004
    repr_defined $I5001, fb_tmp_882
    unless $I5001 goto if3444_else7045 
    set $P5007, fb_tmp_882["Var"]
    set $P5009, $P5007
    goto if3444_end7046
  if3444_else7045:
    null $P5008
    set $P5009, $P5008
  if3444_end7046:
    unless_null $P5009, vivi_34457047
    nqp_get_sc_object $P5010, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5009, $P5010
  vivi_34457047:
    $P5011 = $P5009."new"($P101 :named("name"), "lexical" :named("scope"), "param" :named("decl"), _lex_param_1 :named("node"))
    set $P102, $P5011
.annotate 'line', 2710
    find_dynamic_lex $P5012, "$*W"
    unless_null $P5012, fallback7048
    nqp_get_sc_object $P5014, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5013, $P5014
    set fb_tmp_883, $P5013
    repr_defined $I5002, fb_tmp_883
    unless $I5002 goto if3446_else7049 
    set $P5015, fb_tmp_883["$W"]
    set $P5017, $P5015
    goto if3446_end7050
  if3446_else7049:
    null $P5016
    set $P5017, $P5016
  if3446_end7050:
    unless_null $P5017, vivi_34477051
    nqp_get_sc_object $P5018, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5017, $P5018
  vivi_34477051:
    unless_null $P5017, vivi_34487052
    die "Contextual $*W not found"
    box $P5019, "Contextual $*W not found"
    set $P5017, $P5019
  vivi_34487052:
    set $P5012, $P5017
  fallback7048:
    $P5020 = $P5012."cur_lexpad"()
    $P5020."symbol"($P101, "lexical" :named("scope"))
.annotate 'line', 2711
    $P5021 = _lex_param_1."!make"($P102)
    .return ($P5021) 
.end
.HLL "nqp"
.namespace []
.sub "named_param" :subid("cuid_312_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2714
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_884 
    .local pmc fb_tmp_885 
    .local pmc fb_tmp_886 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
.annotate 'line', 2715
    unless_null _lex_param_1, fallback7055
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5002
  fallback7055:
    set fb_tmp_884, _lex_param_1
    repr_defined $I5001, fb_tmp_884
    unless $I5001 goto if3449_else7053 
    set $P5003, fb_tmp_884["param_var"]
    set $P5005, $P5003
    goto if3449_end7054
  if3449_else7053:
    null $P5004
    set $P5005, $P5004
  if3449_end7054:
    unless_null $P5005, vivi_34507056
    nqp_get_sc_object $P5006, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5005, $P5006
  vivi_34507056:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 2716
    unless_null _lex_param_1, fallback7061
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5008
  fallback7061:
    set fb_tmp_886, _lex_param_1
    repr_defined $I5003, fb_tmp_886
    unless $I5003 goto if3452_else7059 
    set $P5009, fb_tmp_886["param_var"]
    set $P5011, $P5009
    goto if3452_end7060
  if3452_else7059:
    null $P5010
    set $P5011, $P5010
  if3452_end7060:
    unless_null $P5011, vivi_34537062
    nqp_get_sc_object $P5012, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5011, $P5012
  vivi_34537062:
    set fb_tmp_885, $P5011
    repr_defined $I5002, fb_tmp_885
    unless $I5002 goto if3451_else7057 
    set $P5013, fb_tmp_885["name"]
    set $P5015, $P5013
    goto if3451_end7058
  if3451_else7057:
    null $P5014
    set $P5015, $P5014
  if3451_end7058:
    unless_null $P5015, vivi_34547063
    nqp_get_sc_object $P5016, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5015, $P5016
  vivi_34547063:
    set $S5001, $P5015
    $P101."named"($S5001)
.annotate 'line', 2717
    $P5017 = _lex_param_1."!make"($P101)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "typename" :subid("cuid_313_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2720
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5019 = 'cuid_484_1360432459.413' 
    capture_lex $P5019 
    .lex "@name", $P101 
    .lex "$found", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_887 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
.annotate 'line', 2724
    nqp_get_sc_object $P5005, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5004, $P5005, "HLL"
    get_who $P5003, $P5004
    set fb_tmp_887, $P5003
    repr_defined $I5001, fb_tmp_887
    unless $I5001 goto if3455_else7064 
    set $P5006, fb_tmp_887["Compiler"]
    set $P5008, $P5006
    goto if3455_end7065
  if3455_else7064:
    null $P5007
    set $P5008, $P5007
  if3455_end7065:
    unless_null $P5008, vivi_34567066
    nqp_get_sc_object $P5009, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5008, $P5009
  vivi_34567066:
    set $S5001, _lex_param_1
    $P5010 = $P5008."parse_name"($S5001)
    set $P101, $P5010
    box $P5011, 0
    set $P102, $P5011
    new $P5014, 'ExceptionHandler'
    set_label $P5014, catch_handler_34637076
    $P5014.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5014
    .const 'Sub' $P5012 = 'cuid_484_1360432459.413' 
    capture_lex $P5012
    $P5013 = $P5012()
    set $P5015, $P5013
    pop_eh 
    goto skip_handler_34627075
  catch_handler_34637076:
    .get_results ($P5014) 
    set $I10001, 1
    set $P5014["handled"], $I10001
    nqp_get_sc_object $P10001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    finalize $P5014
    pop_upto_eh $P5014
    pop_eh 
    set $P5015, $P10001
    goto skip_handler_34627075
  skip_handler_34627075:
    set $P5018, $P102
    if $P102 goto unless3464_end7078 
.annotate 'line', 2731
.annotate 'line', 2732
    $P5016 = _lex_param_1."CURSOR"()
    set $S5004, _lex_param_1
    concat $S5003, "Use of undeclared type '", $S5004
    concat $S5002, $S5003, "'"
    $P5017 = $P5016."panic"($S5002)
    set $P5018, $P5017
  unless3464_end7078:
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_484_1360432459.413") :anon :lex :outer("cuid_313_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2726
    .lex "$sym", $P101 
    .local pmc fb_tmp_888 
    .local pmc fb_tmp_889 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
.annotate 'line', 2727
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback7067
    nqp_get_sc_object $P5004, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5003, $P5004
    set fb_tmp_888, $P5003
    repr_defined $I5001, fb_tmp_888
    unless $I5001 goto if3457_else7068 
    set $P5005, fb_tmp_888["$W"]
    set $P5007, $P5005
    goto if3457_end7069
  if3457_else7068:
    null $P5006
    set $P5007, $P5006
  if3457_end7069:
    unless_null $P5007, vivi_34587070
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5007, $P5008
  vivi_34587070:
    unless_null $P5007, vivi_34597071
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_34597071:
    set $P5002, $P5007
  fallback7067:
    find_lex $P5010, "@name"
    $P5011 = $P5002."find_sym"($P5010)
    set $P101, $P5011
.annotate 'line', 2728
    find_dynamic_lex $P5012, "$/"
    nqp_get_sc_object $P5015, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5014, $P5015, "QAST"
    get_who $P5013, $P5014
    set fb_tmp_889, $P5013
    repr_defined $I5002, fb_tmp_889
    unless $I5002 goto if3460_else7072 
    set $P5016, fb_tmp_889["WVal"]
    set $P5018, $P5016
    goto if3460_end7073
  if3460_else7072:
    null $P5017
    set $P5018, $P5017
  if3460_end7073:
    unless_null $P5018, vivi_34617074
    nqp_get_sc_object $P5019, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5018, $P5019
  vivi_34617074:
    $P5020 = $P5018."new"($P101 :named("value"))
    $P5012."!make"($P5020)
    box $P5021, 1
    store_lex "$found", $P5021
    .return ($P5021) 
.end
.HLL "nqp"
.namespace []
.sub "trait" :subid("cuid_314_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2736
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_890 
.annotate 'line', 2737
    unless_null _lex_param_1, fallback7081
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback7081:
    set fb_tmp_890, _lex_param_1
    repr_defined $I5001, fb_tmp_890
    unless $I5001 goto if3465_else7079 
    set $P5002, fb_tmp_890["trait_mod"]
    set $P5004, $P5002
    goto if3465_end7080
  if3465_else7079:
    null $P5003
    set $P5004, $P5003
  if3465_end7080:
    unless_null $P5004, vivi_34667082
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_34667082:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "trait_mod:sym<is>" :subid("cuid_315_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2740
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5051 = 'cuid_486_1360432459.413' 
    capture_lex $P5051 
    .const 'Sub' $P5051 = 'cuid_488_1360432459.413' 
    capture_lex $P5051 
    .const 'Sub' $P5051 = 'cuid_489_1360432459.413' 
    capture_lex $P5051 
    .const 'Sub' $P5051 = 'cuid_490_1360432459.413' 
    capture_lex $P5051 
    .const 'Sub' $P5051 = 'cuid_491_1360432459.413' 
    capture_lex $P5051 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_891 
    .local pmc fb_tmp_901 
    .local pmc fb_tmp_908 
    .local pmc fb_tmp_910 
    .local pmc fb_tmp_912 
    .local pmc fb_tmp_919 
    unless_null _lex_param_1, fallback7087
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback7087:
    set fb_tmp_891, _lex_param_1
    repr_defined $I5002, fb_tmp_891
    unless $I5002 goto if3468_else7085 
    set $P5002, fb_tmp_891["longname"]
    set $P5004, $P5002
    goto if3468_end7086
  if3468_else7085:
    null $P5003
    set $P5004, $P5003
  if3468_end7086:
    unless_null $P5004, vivi_34697088
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_34697088:
    set $S5001, $P5004
    iseq $I5001, $S5001, "parrot_vtable"
    unless $I5001 goto if3467_else7083 
    .const 'Sub' $P5006 = 'cuid_486_1360432459.413' 
    capture_lex $P5006
    $P5007 = $P5006()
    set $P5050, $P5007
    goto if3467_end7084
  if3467_else7083:
    unless_null _lex_param_1, fallback7132
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5008
  fallback7132:
    set fb_tmp_901, _lex_param_1
    repr_defined $I5004, fb_tmp_901
    unless $I5004 goto if3494_else7130 
    set $P5009, fb_tmp_901["longname"]
    set $P5011, $P5009
    goto if3494_end7131
  if3494_else7130:
    null $P5010
    set $P5011, $P5010
  if3494_end7131:
    unless_null $P5011, vivi_34957133
    nqp_get_sc_object $P5012, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5011, $P5012
  vivi_34957133:
    set $S5002, $P5011
    iseq $I5003, $S5002, "parrot_vtable_handler"
    unless $I5003 goto if3493_else7128 
    .const 'Sub' $P5013 = 'cuid_488_1360432459.413' 
    capture_lex $P5013
    $P5014 = $P5013()
    set $P5049, $P5014
    goto if3493_end7129
  if3493_else7128:
    unless_null _lex_param_1, fallback7163
    nqp_get_sc_object $P5015, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5015
  fallback7163:
    set fb_tmp_908, _lex_param_1
    repr_defined $I5006, fb_tmp_908
    unless $I5006 goto if3512_else7161 
    set $P5016, fb_tmp_908["longname"]
    set $P5018, $P5016
    goto if3512_end7162
  if3512_else7161:
    null $P5017
    set $P5018, $P5017
  if3512_end7162:
    unless_null $P5018, vivi_35137164
    nqp_get_sc_object $P5019, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5018, $P5019
  vivi_35137164:
    set $S5003, $P5018
    iseq $I5005, $S5003, "positional_delegate"
    unless $I5005 goto if3511_else7159 
.annotate 'line', 2766
.annotate 'line', 2767
    .const 'Sub' $P5021 = 'cuid_489_1360432459.413' 
    capture_lex $P5021
    newclosure $P5020, $P5021
    $P5022 = _lex_param_1."!make"($P5020)
    set $P5048, $P5022
    goto if3511_end7160
  if3511_else7159:
    unless_null _lex_param_1, fallback7174
    nqp_get_sc_object $P5023, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5023
  fallback7174:
    set fb_tmp_910, _lex_param_1
    repr_defined $I5008, fb_tmp_910
    unless $I5008 goto if3518_else7172 
    set $P5024, fb_tmp_910["longname"]
    set $P5026, $P5024
    goto if3518_end7173
  if3518_else7172:
    null $P5025
    set $P5026, $P5025
  if3518_end7173:
    unless_null $P5026, vivi_35197175
    nqp_get_sc_object $P5027, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5026, $P5027
  vivi_35197175:
    set $S5004, $P5026
    iseq $I5007, $S5004, "associative_delegate"
    unless $I5007 goto if3517_else7170 
.annotate 'line', 2769
.annotate 'line', 2770
    .const 'Sub' $P5029 = 'cuid_490_1360432459.413' 
    capture_lex $P5029
    newclosure $P5028, $P5029
    $P5030 = _lex_param_1."!make"($P5028)
    set $P5047, $P5030
    goto if3517_end7171
  if3517_else7170:
    unless_null _lex_param_1, fallback7185
    nqp_get_sc_object $P5031, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5031
  fallback7185:
    set fb_tmp_912, _lex_param_1
    repr_defined $I5010, fb_tmp_912
    unless $I5010 goto if3524_else7183 
    set $P5032, fb_tmp_912["longname"]
    set $P5034, $P5032
    goto if3524_end7184
  if3524_else7183:
    null $P5033
    set $P5034, $P5033
  if3524_end7184:
    unless_null $P5034, vivi_35257186
    nqp_get_sc_object $P5035, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5034, $P5035
  vivi_35257186:
    set $S5005, $P5034
    iseq $I5009, $S5005, "export"
    unless $I5009 goto if3523_else7181 
.annotate 'line', 2772
.annotate 'line', 2773
    .const 'Sub' $P5037 = 'cuid_491_1360432459.413' 
    capture_lex $P5037
    newclosure $P5036, $P5037
    $P5038 = _lex_param_1."!make"($P5036)
    set $P5046, $P5038
    goto if3523_end7182
  if3523_else7181:
.annotate 'line', 2780
.annotate 'line', 2781
    $P5039 = _lex_param_1."CURSOR"()
    unless_null _lex_param_1, fallback7212
    nqp_get_sc_object $P5040, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5040
  fallback7212:
    set fb_tmp_919, _lex_param_1
    repr_defined $I5011, fb_tmp_919
    unless $I5011 goto if3540_else7210 
    set $P5041, fb_tmp_919["longname"]
    set $P5043, $P5041
    goto if3540_end7211
  if3540_else7210:
    null $P5042
    set $P5043, $P5042
  if3540_end7211:
    unless_null $P5043, vivi_35417213
    nqp_get_sc_object $P5044, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5043, $P5044
  vivi_35417213:
    set $S5008, $P5043
    concat $S5007, "Trait '", $S5008
    concat $S5006, $S5007, "' not implemented"
    $P5045 = $P5039."panic"($S5006)
    set $P5046, $P5045
  if3523_end7182:
    set $P5047, $P5046
  if3517_end7171:
    set $P5048, $P5047
  if3511_end7160:
    set $P5049, $P5048
  if3493_end7129:
    set $P5050, $P5049
  if3467_end7084:
    .return ($P5050) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_486_1360432459.413") :anon :lex :outer("cuid_315_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2741
    .const 'Sub' $P5049 = 'cuid_485_1360432459.413' 
    capture_lex $P5049 
    .lex "$cpast", $P101 
    .lex "$name", $P102 
    .lex "$package", $P103 
    .lex "$is_dispatcher", $P104 
    .local pmc fb_tmp_892 
    .local pmc fb_tmp_893 
    .local pmc fb_tmp_894 
    .local pmc fb_tmp_895 
    .local pmc fb_tmp_896 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P104, $P5004
.annotate 'line', 2743
    find_lex $P5005, "$/"
    unless_null $P5005, fallback7093
    nqp_get_sc_object $P5006, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5005, $P5006
  fallback7093:
    set fb_tmp_893, $P5005
    repr_defined $I5002, fb_tmp_893
    unless $I5002 goto if3471_else7091 
    set $P5007, fb_tmp_893["circumfix"]
    set $P5009, $P5007
    goto if3471_end7092
  if3471_else7091:
    null $P5008
    set $P5009, $P5008
  if3471_end7092:
    unless_null $P5009, vivi_34727094
    nqp_get_sc_object $P5010, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5009, $P5010
  vivi_34727094:
    set fb_tmp_892, $P5009
    repr_defined $I5001, fb_tmp_892
    unless $I5001 goto if3470_else7089 
    set $P5011, fb_tmp_892[0]
    set $P5013, $P5011
    goto if3470_end7090
  if3470_else7089:
    null $P5012
    set $P5013, $P5012
  if3470_end7090:
    unless_null $P5013, vivi_34737095
    nqp_get_sc_object $P5014, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5013, $P5014
  vivi_34737095:
    $P5015 = $P5013."ast"()
    set $P101, $P5015
.annotate 'line', 2745
    nqp_get_sc_object $P5018, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5017, $P5018, "QAST"
    get_who $P5016, $P5017
    set fb_tmp_894, $P5016
    repr_defined $I5003, fb_tmp_894
    unless $I5003 goto if3475_else7098 
    set $P5019, fb_tmp_894["SVal"]
    set $P5021, $P5019
    goto if3475_end7099
  if3475_else7098:
    null $P5020
    set $P5021, $P5020
  if3475_end7099:
    unless_null $P5021, vivi_34767100
    nqp_get_sc_object $P5022, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5021, $P5022
  vivi_34767100:
    $P5023 = $P5021."ACCEPTS"($P101)
    if $P5023 goto unless3474_end7097 
.annotate 'line', 2744
    find_lex $P5024, "$/"
    $P5025 = $P5024."CURSOR"()
    $P5026 = $P5025."panic"("Trait 'parrot_vtable' requires constant scalar argument")
  unless3474_end7097:
.annotate 'line', 2746
    $P5027 = $P101."value"()
    set $P102, $P5027
    find_dynamic_lex $P5028, "$*PACKAGE"
    unless_null $P5028, fallback7101
    nqp_get_sc_object $P5030, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5029, $P5030
    set fb_tmp_895, $P5029
    repr_defined $I5004, fb_tmp_895
    unless $I5004 goto if3477_else7102 
    set $P5031, fb_tmp_895["$PACKAGE"]
    set $P5033, $P5031
    goto if3477_end7103
  if3477_else7102:
    null $P5032
    set $P5033, $P5032
  if3477_end7103:
    unless_null $P5033, vivi_34787104
    nqp_get_sc_object $P5034, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5033, $P5034
  vivi_34787104:
    unless_null $P5033, vivi_34797105
    die "Contextual $*PACKAGE not found"
    box $P5035, "Contextual $*PACKAGE not found"
    set $P5033, $P5035
  vivi_34797105:
    set $P5028, $P5033
  fallback7101:
    set $P103, $P5028
    find_dynamic_lex $P5036, "$*SCOPE"
    unless_null $P5036, fallback7106
    nqp_get_sc_object $P5038, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5037, $P5038
    set fb_tmp_896, $P5037
    repr_defined $I5006, fb_tmp_896
    unless $I5006 goto if3480_else7107 
    set $P5039, fb_tmp_896["$SCOPE"]
    set $P5041, $P5039
    goto if3480_end7108
  if3480_else7107:
    null $P5040
    set $P5041, $P5040
  if3480_end7108:
    unless_null $P5041, vivi_34817109
    nqp_get_sc_object $P5042, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5041, $P5042
  vivi_34817109:
    unless_null $P5041, vivi_34827110
    die "Contextual $*SCOPE not found"
    box $P5043, "Contextual $*SCOPE not found"
    set $P5041, $P5043
  vivi_34827110:
    set $P5036, $P5041
  fallback7106:
    set $S5001, $P5036
    iseq $I5005, $S5001, "proto"
    box $P5044, $I5005
    set $P104, $P5044
.annotate 'line', 2749
    find_dynamic_lex $P5045, "$/"
    .const 'Sub' $P5047 = 'cuid_485_1360432459.413' 
    capture_lex $P5047
    newclosure $P5046, $P5047
    $P5048 = $P5045."!make"($P5046)
    .return ($P5048) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_485_1360432459.413") :anon :lex :outer("cuid_486_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2749
    .param pmc _lex_param_0 
    .lex "$match", _lex_param_0 
    .local pmc fb_tmp_897 
    .local pmc fb_tmp_898 
    .local pmc fb_tmp_899 
    .local pmc fb_tmp_900 
.annotate 'line', 2750
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback7111
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5002, $P5003
    set fb_tmp_897, $P5002
    repr_defined $I5001, fb_tmp_897
    unless $I5001 goto if3483_else7112 
    set $P5004, fb_tmp_897["$W"]
    set $P5006, $P5004
    goto if3483_end7113
  if3483_else7112:
    null $P5005
    set $P5006, $P5005
  if3483_end7113:
    unless_null $P5006, vivi_34847114
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_34847114:
    unless_null $P5006, vivi_34857115
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_34857115:
    set $P5001, $P5006
  fallback7111:
    find_lex $P5009, "$package"
    find_lex $P5010, "$name"
.annotate 'line', 2751
    $P5012 = _lex_param_0."ast"()
    set fb_tmp_898, $P5012
    repr_defined $I5003, fb_tmp_898
    unless $I5003 goto if3486_else7117 
    set $P5013, fb_tmp_898["code_obj"]
    set $P5015, $P5013
    goto if3486_end7118
  if3486_else7117:
    null $P5014
    set $P5015, $P5014
  if3486_end7118:
    unless_null $P5015, vivi_34877119
    nqp_get_sc_object $P5016, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5015, $P5016
  vivi_34877119:
    set $P5011, $P5015
    defined $I5002, $P5011
    if $I5002, defor7116
.annotate 'line', 2752
    find_dynamic_lex $P5017, "$*W"
    unless_null $P5017, fallback7120
    nqp_get_sc_object $P5019, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5018, $P5019
    set fb_tmp_899, $P5018
    repr_defined $I5004, fb_tmp_899
    unless $I5004 goto if3488_else7121 
    set $P5020, fb_tmp_899["$W"]
    set $P5022, $P5020
    goto if3488_end7122
  if3488_else7121:
    null $P5021
    set $P5022, $P5021
  if3488_end7122:
    unless_null $P5022, vivi_34897123
    nqp_get_sc_object $P5023, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5022, $P5023
  vivi_34897123:
    unless_null $P5022, vivi_34907124
    die "Contextual $*W not found"
    box $P5024, "Contextual $*W not found"
    set $P5022, $P5024
  vivi_34907124:
    set $P5017, $P5022
  fallback7120:
    $P5025 = _lex_param_0."ast"()
    set fb_tmp_900, $P5025
    repr_defined $I5005, fb_tmp_900
    unless $I5005 goto if3491_else7125 
    set $P5026, fb_tmp_900["block_past"]
    set $P5028, $P5026
    goto if3491_end7126
  if3491_else7125:
    null $P5027
    set $P5028, $P5027
  if3491_end7126:
    unless_null $P5028, vivi_34927127
    nqp_get_sc_object $P5029, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5028, $P5029
  vivi_34927127:
    find_lex $P5030, "$name"
    find_lex $P5031, "$is_dispatcher"
    $P5032 = $P5017."create_code"($P5028, $P5030, $P5031)
    set $P5011, $P5032
  defor7116:
    $P5033 = $P5001."pkg_add_method"($P5009, "add_parrot_vtable_mapping", $P5010, $P5011)
    .return ($P5033) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_488_1360432459.413") :anon :lex :outer("cuid_315_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2755
    .const 'Sub' $P5039 = 'cuid_487_1360432459.413' 
    capture_lex $P5039 
    .lex "$cpast", $P101 
    .lex "$name", $P102 
    .lex "$package", $P103 
    .local pmc fb_tmp_902 
    .local pmc fb_tmp_903 
    .local pmc fb_tmp_904 
    .local pmc fb_tmp_905 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P103, $P5003
.annotate 'line', 2757
    find_lex $P5004, "$/"
    unless_null $P5004, fallback7138
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  fallback7138:
    set fb_tmp_903, $P5004
    repr_defined $I5002, fb_tmp_903
    unless $I5002 goto if3497_else7136 
    set $P5006, fb_tmp_903["circumfix"]
    set $P5008, $P5006
    goto if3497_end7137
  if3497_else7136:
    null $P5007
    set $P5008, $P5007
  if3497_end7137:
    unless_null $P5008, vivi_34987139
    nqp_get_sc_object $P5009, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5008, $P5009
  vivi_34987139:
    set fb_tmp_902, $P5008
    repr_defined $I5001, fb_tmp_902
    unless $I5001 goto if3496_else7134 
    set $P5010, fb_tmp_902[0]
    set $P5012, $P5010
    goto if3496_end7135
  if3496_else7134:
    null $P5011
    set $P5012, $P5011
  if3496_end7135:
    unless_null $P5012, vivi_34997140
    nqp_get_sc_object $P5013, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5012, $P5013
  vivi_34997140:
    $P5014 = $P5012."ast"()
    set $P101, $P5014
.annotate 'line', 2759
    nqp_get_sc_object $P5017, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5016, $P5017, "QAST"
    get_who $P5015, $P5016
    set fb_tmp_904, $P5015
    repr_defined $I5003, fb_tmp_904
    unless $I5003 goto if3501_else7143 
    set $P5018, fb_tmp_904["SVal"]
    set $P5020, $P5018
    goto if3501_end7144
  if3501_else7143:
    null $P5019
    set $P5020, $P5019
  if3501_end7144:
    unless_null $P5020, vivi_35027145
    nqp_get_sc_object $P5021, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5020, $P5021
  vivi_35027145:
    $P5022 = $P5020."ACCEPTS"($P101)
    if $P5022 goto unless3500_end7142 
.annotate 'line', 2758
    find_lex $P5023, "$/"
    $P5024 = $P5023."CURSOR"()
    $P5025 = $P5024."panic"("Trait 'parrot_vtable_handler' requires constant scalar argument")
  unless3500_end7142:
.annotate 'line', 2760
    $P5026 = $P101."value"()
    set $P102, $P5026
    find_dynamic_lex $P5027, "$*PACKAGE"
    unless_null $P5027, fallback7146
    nqp_get_sc_object $P5029, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5028, $P5029
    set fb_tmp_905, $P5028
    repr_defined $I5004, fb_tmp_905
    unless $I5004 goto if3503_else7147 
    set $P5030, fb_tmp_905["$PACKAGE"]
    set $P5032, $P5030
    goto if3503_end7148
  if3503_else7147:
    null $P5031
    set $P5032, $P5031
  if3503_end7148:
    unless_null $P5032, vivi_35047149
    nqp_get_sc_object $P5033, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5032, $P5033
  vivi_35047149:
    unless_null $P5032, vivi_35057150
    die "Contextual $*PACKAGE not found"
    box $P5034, "Contextual $*PACKAGE not found"
    set $P5032, $P5034
  vivi_35057150:
    set $P5027, $P5032
  fallback7146:
    set $P103, $P5027
.annotate 'line', 2762
    find_dynamic_lex $P5035, "$/"
    .const 'Sub' $P5037 = 'cuid_487_1360432459.413' 
    capture_lex $P5037
    newclosure $P5036, $P5037
    $P5038 = $P5035."!make"($P5036)
    .return ($P5038) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_487_1360432459.413") :anon :lex :outer("cuid_488_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2762
    .param pmc _lex_param_0 
    .lex "$match", _lex_param_0 
    .local pmc fb_tmp_906 
    .local pmc fb_tmp_907 
.annotate 'line', 2763
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback7151
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5002, $P5003
    set fb_tmp_906, $P5002
    repr_defined $I5001, fb_tmp_906
    unless $I5001 goto if3506_else7152 
    set $P5004, fb_tmp_906["$W"]
    set $P5006, $P5004
    goto if3506_end7153
  if3506_else7152:
    null $P5005
    set $P5006, $P5005
  if3506_end7153:
    unless_null $P5006, vivi_35077154
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_35077154:
    unless_null $P5006, vivi_35087155
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_35087155:
    set $P5001, $P5006
  fallback7151:
    find_lex $P5009, "$package"
    find_lex $P5010, "$name"
    set fb_tmp_907, _lex_param_0
    repr_defined $I5002, fb_tmp_907
    unless $I5002 goto if3509_else7156 
    set $P5011, fb_tmp_907["variable"]
    set $P5013, $P5011
    goto if3509_end7157
  if3509_else7156:
    null $P5012
    set $P5013, $P5012
  if3509_end7157:
    unless_null $P5013, vivi_35107158
    nqp_get_sc_object $P5014, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5013, $P5014
  vivi_35107158:
    set $S5001, $P5013
    $P5015 = $P5001."pkg_add_parrot_vtable_handler_mapping"($P5009, $P5010, $S5001)
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_489_1360432459.413") :anon :lex :outer("cuid_315_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2767
    .param pmc _lex_param_0 
    .lex "$m", _lex_param_0 
    .local pmc fb_tmp_909 
    find_dynamic_lex $P5001, "$*DECLARAND_ATTR"
    unless_null $P5001, fallback7165
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5002, $P5003
    set fb_tmp_909, $P5002
    repr_defined $I5001, fb_tmp_909
    unless $I5001 goto if3514_else7166 
    set $P5004, fb_tmp_909["$DECLARAND_ATTR"]
    set $P5006, $P5004
    goto if3514_end7167
  if3514_else7166:
    null $P5005
    set $P5006, $P5005
  if3514_end7167:
    unless_null $P5006, vivi_35157168
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_35157168:
    unless_null $P5006, vivi_35167169
    die "Contextual $*DECLARAND_ATTR not found"
    box $P5008, "Contextual $*DECLARAND_ATTR not found"
    set $P5006, $P5008
  vivi_35167169:
    set $P5001, $P5006
  fallback7165:
    $P5009 = $P5001."set_positional_delegate"(1)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_490_1360432459.413") :anon :lex :outer("cuid_315_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2770
    .param pmc _lex_param_0 
    .lex "$m", _lex_param_0 
    .local pmc fb_tmp_911 
    find_dynamic_lex $P5001, "$*DECLARAND_ATTR"
    unless_null $P5001, fallback7176
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5002, $P5003
    set fb_tmp_911, $P5002
    repr_defined $I5001, fb_tmp_911
    unless $I5001 goto if3520_else7177 
    set $P5004, fb_tmp_911["$DECLARAND_ATTR"]
    set $P5006, $P5004
    goto if3520_end7178
  if3520_else7177:
    null $P5005
    set $P5006, $P5005
  if3520_end7178:
    unless_null $P5006, vivi_35217179
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_35217179:
    unless_null $P5006, vivi_35227180
    die "Contextual $*DECLARAND_ATTR not found"
    box $P5008, "Contextual $*DECLARAND_ATTR not found"
    set $P5006, $P5008
  vivi_35227180:
    set $P5001, $P5006
  fallback7176:
    $P5009 = $P5001."set_associative_delegate"(1)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_491_1360432459.413") :anon :lex :outer("cuid_315_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2773
    .param pmc _lex_param_0 
    .lex "$ast", $P101 
    .lex "$name", $P102 
    .lex "$match", _lex_param_0 
    .local pmc fb_tmp_913 
    .local pmc fb_tmp_914 
    .local pmc fb_tmp_915 
    .local pmc fb_tmp_916 
    .local pmc fb_tmp_917 
    .local pmc fb_tmp_918 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
.annotate 'line', 2774
    $P5003 = _lex_param_0."ast"()
    set $P101, $P5003
.annotate 'line', 2775
    set fb_tmp_913, $P101
    repr_defined $I5001, fb_tmp_913
    unless $I5001 goto if3526_else7187 
    set $P5004, fb_tmp_913["block_past"]
    set $P5006, $P5004
    goto if3526_end7188
  if3526_else7187:
    null $P5005
    set $P5006, $P5005
  if3526_end7188:
    unless_null $P5006, vivi_35277189
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_35277189:
    $P5008 = $P5006."name"()
    set $P102, $P5008
    find_dynamic_lex $P5011, "$*EXPORT"
    unless_null $P5011, fallback7192
    nqp_get_sc_object $P5013, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5012, $P5013
    set fb_tmp_915, $P5012
    repr_defined $I5003, fb_tmp_915
    unless $I5003 goto if3529_else7193 
    set $P5014, fb_tmp_915["$EXPORT"]
    set $P5016, $P5014
    goto if3529_end7194
  if3529_else7193:
    null $P5015
    set $P5016, $P5015
  if3529_end7194:
    unless_null $P5016, vivi_35307195
    nqp_get_sc_object $P5017, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5016, $P5017
  vivi_35307195:
    unless_null $P5016, vivi_35317196
    die "Contextual $*EXPORT not found"
    box $P5018, "Contextual $*EXPORT not found"
    set $P5016, $P5018
  vivi_35317196:
    set $P5011, $P5016
  fallback7192:
    get_who $P5010, $P5011
    set fb_tmp_914, $P5010
    repr_defined $I5002, fb_tmp_914
    unless $I5002 goto if3528_else7190 
    set $P5019, fb_tmp_914["DEFAULT"]
    set $P5021, $P5019
    goto if3528_end7191
  if3528_else7190:
    null $P5020
    set $P5021, $P5020
  if3528_end7191:
    unless_null $P5021, vivi_35327197
    nqp_get_sc_object $P5022, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5021, $P5022
  vivi_35327197:
    get_who $P5009, $P5021
    set $S5002, $P102
    concat $S5001, "&", $S5002
    set fb_tmp_916, $P101
    repr_defined $I5005, fb_tmp_916
    unless $I5005 goto if3533_else7199 
    set $P5024, fb_tmp_916["code_obj"]
    set $P5026, $P5024
    goto if3533_end7200
  if3533_else7199:
    null $P5025
    set $P5026, $P5025
  if3533_end7200:
    unless_null $P5026, vivi_35347201
    nqp_get_sc_object $P5027, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5026, $P5027
  vivi_35347201:
    set $P5023, $P5026
    defined $I5004, $P5023
    if $I5004, defor7198
.annotate 'line', 2777
    find_dynamic_lex $P5028, "$*W"
    unless_null $P5028, fallback7202
    nqp_get_sc_object $P5030, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5029, $P5030
    set fb_tmp_917, $P5029
    repr_defined $I5006, fb_tmp_917
    unless $I5006 goto if3535_else7203 
    set $P5031, fb_tmp_917["$W"]
    set $P5033, $P5031
    goto if3535_end7204
  if3535_else7203:
    null $P5032
    set $P5033, $P5032
  if3535_end7204:
    unless_null $P5033, vivi_35367205
    nqp_get_sc_object $P5034, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5033, $P5034
  vivi_35367205:
    unless_null $P5033, vivi_35377206
    die "Contextual $*W not found"
    box $P5035, "Contextual $*W not found"
    set $P5033, $P5035
  vivi_35377206:
    set $P5028, $P5033
  fallback7202:
    set fb_tmp_918, $P101
    repr_defined $I5007, fb_tmp_918
    unless $I5007 goto if3538_else7207 
    set $P5036, fb_tmp_918["block_past"]
    set $P5038, $P5036
    goto if3538_end7208
  if3538_else7207:
    null $P5037
    set $P5038, $P5037
  if3538_end7208:
    unless_null $P5038, vivi_35397209
    nqp_get_sc_object $P5039, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5038, $P5039
  vivi_35397209:
    $P5040 = $P5028."create_code"($P5038, $P102, 0)
    set $P5023, $P5040
  defor7198:
    set $P5009[$S5001], $P5023
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "regex_declarator" :subid("cuid_316_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2785
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :optional 
    .param int haz_param_5 :opt_flag 
    .const 'Sub' $P5098 = 'cuid_493_1360432459.413' 
    capture_lex $P5098 
    .lex "$name", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .lex "$key", _lex_param_2 
    .local pmc fb_tmp_920 
    .local pmc fb_tmp_921 
    .local pmc fb_tmp_922 
    .local pmc fb_tmp_923 
    .local pmc fb_tmp_924 
    .local pmc fb_tmp_925 
    .local pmc fb_tmp_926 
    .local pmc fb_tmp_927 
    .local pmc fb_tmp_928 
    .local pmc fb_tmp_929 
    .local pmc fb_tmp_930 
    .local pmc fb_tmp_931 
    if haz_param_5, default7366
    nqp_get_sc_object $P5097, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_2, $P5097
  default7366:
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
    unless_null _lex_param_1, fallback7218
    nqp_get_sc_object $P5003, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5003
  fallback7218:
    set fb_tmp_920, _lex_param_1
    repr_defined $I5001, fb_tmp_920
    unless $I5001 goto if3543_else7216 
    set $P5004, fb_tmp_920["deflongname"]
    set $P5006, $P5004
    goto if3543_end7217
  if3543_else7216:
    null $P5005
    set $P5006, $P5005
  if3543_end7217:
    unless_null $P5006, vivi_35447219
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_35447219:
    unless $P5006 goto if3542_else7214 
.annotate 'line', 2787
.annotate 'line', 2788
    unless_null _lex_param_1, fallback7222
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5008
  fallback7222:
    set fb_tmp_921, _lex_param_1
    repr_defined $I5002, fb_tmp_921
    unless $I5002 goto if3545_else7220 
    set $P5009, fb_tmp_921["deflongname"]
    set $P5011, $P5009
    goto if3545_end7221
  if3545_else7220:
    null $P5010
    set $P5011, $P5010
  if3545_end7221:
    unless_null $P5011, vivi_35467223
    nqp_get_sc_object $P5012, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5011, $P5012
  vivi_35467223:
    $P5013 = $P5011."ast"()
    set $S5001, $P5013
    box $P5014, $S5001
    set $P101, $P5014
    goto if3542_end7215
  if3542_else7214:
.annotate 'line', 2790
    find_dynamic_lex $P5015, "$*PKGDECL"
    unless_null $P5015, fallback7226
    nqp_get_sc_object $P5017, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5016, $P5017
    set fb_tmp_922, $P5016
    repr_defined $I5004, fb_tmp_922
    unless $I5004 goto if3548_else7227 
    set $P5018, fb_tmp_922["$PKGDECL"]
    set $P5020, $P5018
    goto if3548_end7228
  if3548_else7227:
    null $P5019
    set $P5020, $P5019
  if3548_end7228:
    unless_null $P5020, vivi_35497229
    nqp_get_sc_object $P5021, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5020, $P5021
  vivi_35497229:
    unless_null $P5020, vivi_35507230
    die "Contextual $*PKGDECL not found"
    box $P5022, "Contextual $*PKGDECL not found"
    set $P5020, $P5022
  vivi_35507230:
    set $P5015, $P5020
  fallback7226:
    set $S5002, $P5015
    isne $I5003, $S5002, "role"
    unless $I5003 goto if3547_end7225 
.annotate 'line', 2791
.annotate 'line', 2792
    $P5023 = _lex_param_1."CURSOR"()
    $P5024 = $P5023."panic"("Late-bound method name only valid in role")
  if3547_end7225:
    unless_null _lex_param_1, fallback7233
    nqp_get_sc_object $P5025, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5025
  fallback7233:
    set fb_tmp_923, _lex_param_1
    repr_defined $I5005, fb_tmp_923
    unless $I5005 goto if3551_else7231 
    set $P5026, fb_tmp_923["latename"]
    set $P5028, $P5026
    goto if3551_end7232
  if3551_else7231:
    null $P5027
    set $P5028, $P5027
  if3551_end7232:
    unless_null $P5028, vivi_35527234
    nqp_get_sc_object $P5029, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5028, $P5029
  vivi_35527234:
    set $S5004, $P5028
    concat $S5003, "!!LATENAME!!", $S5004
    box $P5030, $S5003
    set $P101, $P5030
  if3542_end7215:
    unless_null _lex_param_1, fallback7239
    nqp_get_sc_object $P5031, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5031
  fallback7239:
    set fb_tmp_924, _lex_param_1
    repr_defined $I5006, fb_tmp_924
    unless $I5006 goto if3554_else7237 
    set $P5032, fb_tmp_924["proto"]
    set $P5034, $P5032
    goto if3554_end7238
  if3554_else7237:
    null $P5033
    set $P5034, $P5033
  if3554_end7238:
    unless_null $P5034, vivi_35557240
    nqp_get_sc_object $P5035, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5034, $P5035
  vivi_35557240:
    unless $P5034 goto if3553_else7235 
.annotate 'line', 2797
.annotate 'line', 2798
    nqp_get_sc_object $P5038, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5037, $P5038, "QAST"
    get_who $P5036, $P5037
    set fb_tmp_925, $P5036
    repr_defined $I5007, fb_tmp_925
    unless $I5007 goto if3556_else7241 
    set $P5039, fb_tmp_925["Block"]
    set $P5041, $P5039
    goto if3556_end7242
  if3556_else7241:
    null $P5040
    set $P5041, $P5040
  if3556_end7242:
    unless_null $P5041, vivi_35577243
    nqp_get_sc_object $P5042, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5041, $P5042
  vivi_35577243:
.annotate 'line', 2800
    nqp_get_sc_object $P5045, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5044, $P5045, "QAST"
    get_who $P5043, $P5044
    set fb_tmp_926, $P5043
    repr_defined $I5008, fb_tmp_926
    unless $I5008 goto if3558_else7244 
    set $P5046, fb_tmp_926["Op"]
    set $P5048, $P5046
    goto if3558_end7245
  if3558_else7244:
    null $P5047
    set $P5048, $P5047
  if3558_end7245:
    unless_null $P5048, vivi_35597246
    nqp_get_sc_object $P5049, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5048, $P5049
  vivi_35597246:
.annotate 'line', 2801
    nqp_get_sc_object $P5052, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5051, $P5052, "QAST"
    get_who $P5050, $P5051
    set fb_tmp_927, $P5050
    repr_defined $I5009, fb_tmp_927
    unless $I5009 goto if3560_else7247 
    set $P5053, fb_tmp_927["Var"]
    set $P5055, $P5053
    goto if3560_end7248
  if3560_else7247:
    null $P5054
    set $P5055, $P5054
  if3560_end7248:
    unless_null $P5055, vivi_35617249
    nqp_get_sc_object $P5056, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5055, $P5056
  vivi_35617249:
    $P5057 = $P5055."new"("self" :named("name"), "local" :named("scope"), "param" :named("decl"))
.annotate 'line', 2802
    nqp_get_sc_object $P5060, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5059, $P5060, "QAST"
    get_who $P5058, $P5059
    set fb_tmp_928, $P5058
    repr_defined $I5010, fb_tmp_928
    unless $I5010 goto if3562_else7250 
    set $P5061, fb_tmp_928["SVal"]
    set $P5063, $P5061
    goto if3562_end7251
  if3562_else7250:
    null $P5062
    set $P5063, $P5062
  if3562_end7251:
    unless_null $P5063, vivi_35637252
    nqp_get_sc_object $P5064, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5063, $P5064
  vivi_35637252:
    $P5065 = $P5063."new"($P101 :named("value"))
    $P5066 = $P5048."new"($P5057, $P5065, "!protoregex" :named("name"), "callmethod" :named("op"))
    $P5067 = $P5041."new"($P5066, $P101 :named("name"), "declaration" :named("blocktype"), _lex_param_1 :named("node"))
    set $P102, $P5067
.annotate 'line', 2809
    find_dynamic_lex $P5068, "$*W"
    unless_null $P5068, fallback7253
    nqp_get_sc_object $P5070, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5069, $P5070
    set fb_tmp_929, $P5069
    repr_defined $I5011, fb_tmp_929
    unless $I5011 goto if3564_else7254 
    set $P5071, fb_tmp_929["$W"]
    set $P5073, $P5071
    goto if3564_end7255
  if3564_else7254:
    null $P5072
    set $P5073, $P5072
  if3564_end7255:
    unless_null $P5073, vivi_35657256
    nqp_get_sc_object $P5074, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5073, $P5074
  vivi_35657256:
    unless_null $P5073, vivi_35667257
    die "Contextual $*W not found"
    box $P5075, "Contextual $*W not found"
    set $P5073, $P5075
  vivi_35667257:
    set $P5068, $P5073
  fallback7253:
    find_dynamic_lex $P5076, "$*PACKAGE"
    unless_null $P5076, fallback7258
    nqp_get_sc_object $P5078, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5077, $P5078
    set fb_tmp_930, $P5077
    repr_defined $I5012, fb_tmp_930
    unless $I5012 goto if3567_else7259 
    set $P5079, fb_tmp_930["$PACKAGE"]
    set $P5081, $P5079
    goto if3567_end7260
  if3567_else7259:
    null $P5080
    set $P5081, $P5080
  if3567_end7260:
    unless_null $P5081, vivi_35687261
    nqp_get_sc_object $P5082, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5081, $P5082
  vivi_35687261:
    unless_null $P5081, vivi_35697262
    die "Contextual $*PACKAGE not found"
    box $P5083, "Contextual $*PACKAGE not found"
    set $P5081, $P5083
  vivi_35697262:
    set $P5076, $P5081
  fallback7258:
.annotate 'line', 2810
    find_dynamic_lex $P5084, "$*W"
    unless_null $P5084, fallback7263
    nqp_get_sc_object $P5086, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5085, $P5086
    set fb_tmp_931, $P5085
    repr_defined $I5013, fb_tmp_931
    unless $I5013 goto if3570_else7264 
    set $P5087, fb_tmp_931["$W"]
    set $P5089, $P5087
    goto if3570_end7265
  if3570_else7264:
    null $P5088
    set $P5089, $P5088
  if3570_end7265:
    unless_null $P5089, vivi_35717266
    nqp_get_sc_object $P5090, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5089, $P5090
  vivi_35717266:
    unless_null $P5089, vivi_35727267
    die "Contextual $*W not found"
    box $P5091, "Contextual $*W not found"
    set $P5089, $P5091
  vivi_35727267:
    set $P5084, $P5089
  fallback7263:
    $P5092 = $P5084."create_code"($P102, $P101, 0, "NQPRegex" :named("code_type_name"))
    $P5093 = $P5068."pkg_add_method"($P5076, "add_method", $P101, $P5092)
    goto if3553_end7236
  if3553_else7235:
    .const 'Sub' $P5094 = 'cuid_493_1360432459.413' 
    capture_lex $P5094
    $P5095 = $P5094()
  if3553_end7236:
.annotate 'line', 2849
    $P5096 = _lex_param_1."!make"($P102)
    .return ($P5096) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_493_1360432459.413") :anon :lex :outer("cuid_316_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2812
    .const 'Sub' $P5174 = 'cuid_492_1360432459.413' 
    capture_lex $P5174 
    .lex "$block", $P101 
    .lex "$code", $P102 
    .lex "$regex", $P103 
    .local pmc fb_tmp_932 
    .local pmc fb_tmp_933 
    .local pmc fb_tmp_934 
    .local pmc fb_tmp_935 
    .local pmc fb_tmp_936 
    .local pmc fb_tmp_937 
    .local pmc fb_tmp_938 
    .local pmc fb_tmp_939 
    .local pmc fb_tmp_940 
    .local pmc fb_tmp_941 
    .local pmc fb_tmp_942 
    .local pmc fb_tmp_943 
    .local pmc fb_tmp_944 
    .local pmc fb_tmp_945 
    .local pmc fb_tmp_946 
    .local pmc fb_tmp_947 
    .local pmc fb_tmp_948 
    .local pmc fb_tmp_949 
    .local pmc fb_tmp_950 
    .local pmc fb_tmp_951 
    .local pmc fb_tmp_952 
    .local pmc fb_tmp_955 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P103, $P5003
.annotate 'line', 2813
    find_dynamic_lex $P5004, "$*W"
    unless_null $P5004, fallback7268
    nqp_get_sc_object $P5006, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5005, $P5006
    set fb_tmp_932, $P5005
    repr_defined $I5001, fb_tmp_932
    unless $I5001 goto if3573_else7269 
    set $P5007, fb_tmp_932["$W"]
    set $P5009, $P5007
    goto if3573_end7270
  if3573_else7269:
    null $P5008
    set $P5009, $P5008
  if3573_end7270:
    unless_null $P5009, vivi_35747271
    nqp_get_sc_object $P5010, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5009, $P5010
  vivi_35747271:
    unless_null $P5009, vivi_35757272
    die "Contextual $*W not found"
    box $P5011, "Contextual $*W not found"
    set $P5009, $P5011
  vivi_35757272:
    set $P5004, $P5009
  fallback7268:
    $P5012 = $P5004."pop_lexpad"()
    set $P101, $P5012
.annotate 'line', 2814
    set fb_tmp_933, $P101
    repr_defined $I5002, fb_tmp_933
    unless $I5002 goto if3576_else7273 
    set $P5013, fb_tmp_933[0]
    set $P5015, $P5013
    goto if3576_end7274
  if3576_else7273:
    null $P5014
    set $P5015, $P5014
  if3576_end7274:
    unless_null $P5015, vivi_35777275
    nqp_get_sc_object $P5016, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5015, $P5016
  vivi_35777275:
    nqp_get_sc_object $P5019, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5018, $P5019, "QAST"
    get_who $P5017, $P5018
    set fb_tmp_934, $P5017
    repr_defined $I5003, fb_tmp_934
    unless $I5003 goto if3578_else7276 
    set $P5020, fb_tmp_934["Var"]
    set $P5022, $P5020
    goto if3578_end7277
  if3578_else7276:
    null $P5021
    set $P5022, $P5021
  if3578_end7277:
    unless_null $P5022, vivi_35797278
    nqp_get_sc_object $P5023, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5022, $P5023
  vivi_35797278:
    $P5024 = $P5022."new"("self" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    $P5015."unshift"($P5024)
.annotate 'line', 2815
    set fb_tmp_935, $P101
    repr_defined $I5004, fb_tmp_935
    unless $I5004 goto if3580_else7279 
    set $P5025, fb_tmp_935[0]
    set $P5027, $P5025
    goto if3580_end7280
  if3580_else7279:
    null $P5026
    set $P5027, $P5026
  if3580_end7280:
    unless_null $P5027, vivi_35817281
    nqp_get_sc_object $P5028, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5027, $P5028
  vivi_35817281:
    nqp_get_sc_object $P5031, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5030, $P5031, "QAST"
    get_who $P5029, $P5030
    set fb_tmp_936, $P5029
    repr_defined $I5005, fb_tmp_936
    unless $I5005 goto if3582_else7282 
    set $P5032, fb_tmp_936["Op"]
    set $P5034, $P5032
    goto if3582_end7283
  if3582_else7282:
    null $P5033
    set $P5034, $P5033
  if3582_end7283:
    unless_null $P5034, vivi_35837284
    nqp_get_sc_object $P5035, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5034, $P5035
  vivi_35837284:
.annotate 'line', 2817
    nqp_get_sc_object $P5038, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5037, $P5038, "QAST"
    get_who $P5036, $P5037
    set fb_tmp_937, $P5036
    repr_defined $I5006, fb_tmp_937
    unless $I5006 goto if3584_else7285 
    set $P5039, fb_tmp_937["Var"]
    set $P5041, $P5039
    goto if3584_end7286
  if3584_else7285:
    null $P5040
    set $P5041, $P5040
  if3584_end7286:
    unless_null $P5041, vivi_35857287
    nqp_get_sc_object $P5042, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5041, $P5042
  vivi_35857287:
    $P5043 = $P5041."new"("self" :named("name"), "local" :named("scope"), "var" :named("decl"))
.annotate 'line', 2818
    nqp_get_sc_object $P5046, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5045, $P5046, "QAST"
    get_who $P5044, $P5045
    set fb_tmp_938, $P5044
    repr_defined $I5007, fb_tmp_938
    unless $I5007 goto if3586_else7288 
    set $P5047, fb_tmp_938["Var"]
    set $P5049, $P5047
    goto if3586_end7289
  if3586_else7288:
    null $P5048
    set $P5049, $P5048
  if3586_end7289:
    unless_null $P5049, vivi_35877290
    nqp_get_sc_object $P5050, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5049, $P5050
  vivi_35877290:
    $P5051 = $P5049."new"("self" :named("name"), "lexical" :named("scope"))
    $P5052 = $P5034."new"($P5043, $P5051, "bind" :named("op"))
    $P5027."push"($P5052)
.annotate 'line', 2819
    set fb_tmp_939, $P101
    repr_defined $I5008, fb_tmp_939
    unless $I5008 goto if3588_else7291 
    set $P5053, fb_tmp_939[0]
    set $P5055, $P5053
    goto if3588_end7292
  if3588_else7291:
    null $P5054
    set $P5055, $P5054
  if3588_end7292:
    unless_null $P5055, vivi_35897293
    nqp_get_sc_object $P5056, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5055, $P5056
  vivi_35897293:
    nqp_get_sc_object $P5059, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5058, $P5059, "QAST"
    get_who $P5057, $P5058
    set fb_tmp_940, $P5057
    repr_defined $I5009, fb_tmp_940
    unless $I5009 goto if3590_else7294 
    set $P5060, fb_tmp_940["Var"]
    set $P5062, $P5060
    goto if3590_end7295
  if3590_else7294:
    null $P5061
    set $P5062, $P5061
  if3590_end7295:
    unless_null $P5062, vivi_35917296
    nqp_get_sc_object $P5063, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5062, $P5063
  vivi_35917296:
    $P5064 = $P5062."new"(utf8:"$\x{a2}" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    $P5055."push"($P5064)
.annotate 'line', 2820
    set fb_tmp_941, $P101
    repr_defined $I5010, fb_tmp_941
    unless $I5010 goto if3592_else7297 
    set $P5065, fb_tmp_941[0]
    set $P5067, $P5065
    goto if3592_end7298
  if3592_else7297:
    null $P5066
    set $P5067, $P5066
  if3592_end7298:
    unless_null $P5067, vivi_35937299
    nqp_get_sc_object $P5068, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5067, $P5068
  vivi_35937299:
    nqp_get_sc_object $P5071, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5070, $P5071, "QAST"
    get_who $P5069, $P5070
    set fb_tmp_942, $P5069
    repr_defined $I5011, fb_tmp_942
    unless $I5011 goto if3594_else7300 
    set $P5072, fb_tmp_942["Var"]
    set $P5074, $P5072
    goto if3594_end7301
  if3594_else7300:
    null $P5073
    set $P5074, $P5073
  if3594_end7301:
    unless_null $P5074, vivi_35957302
    nqp_get_sc_object $P5075, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5074, $P5075
  vivi_35957302:
    $P5076 = $P5074."new"("$/" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    $P5067."push"($P5076)
.annotate 'line', 2821
    $P101."symbol"(utf8:"$\x{a2}", "lexical" :named("scope"))
.annotate 'line', 2822
    $P101."symbol"("$/", "lexical" :named("scope"))
    find_dynamic_lex $P5077, "%*RX"
    unless_null $P5077, fallback7305
    nqp_get_sc_object $P5079, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5078, $P5079
    set fb_tmp_944, $P5078
    repr_defined $I5013, fb_tmp_944
    unless $I5013 goto if3597_else7306 
    set $P5080, fb_tmp_944["%RX"]
    set $P5082, $P5080
    goto if3597_end7307
  if3597_else7306:
    null $P5081
    set $P5082, $P5081
  if3597_end7307:
    unless_null $P5082, vivi_35987308
    nqp_get_sc_object $P5084, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5083, $P5084
    new $P5085, 'Hash'
    set $P5083["%RX"], $P5085
    set $P5082, $P5085
  vivi_35987308:
    unless_null $P5082, vivi_35997309
    die "Contextual %*RX not found"
    box $P5086, "Contextual %*RX not found"
    set $P5082, $P5086
  vivi_35997309:
    set $P5077, $P5082
  fallback7305:
    set fb_tmp_943, $P5077
    repr_defined $I5012, fb_tmp_943
    unless $I5012 goto if3596_else7303 
    set $P5087, fb_tmp_943["code"]
    set $P5089, $P5087
    goto if3596_end7304
  if3596_else7303:
    null $P5088
    set $P5089, $P5088
  if3596_end7304:
    unless_null $P5089, vivi_36007310
    nqp_get_sc_object $P5090, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5089, $P5090
  vivi_36007310:
    set $P102, $P5089
.annotate 'line', 2824
    find_dynamic_lex $P5091, "%*LANG"
    unless_null $P5091, fallback7313
    nqp_get_sc_object $P5093, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5092, $P5093
    set fb_tmp_946, $P5092
    repr_defined $I5015, fb_tmp_946
    unless $I5015 goto if3602_else7314 
    set $P5094, fb_tmp_946["%LANG"]
    set $P5096, $P5094
    goto if3602_end7315
  if3602_else7314:
    null $P5095
    set $P5096, $P5095
  if3602_end7315:
    unless_null $P5096, vivi_36037316
    nqp_get_sc_object $P5098, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5097, $P5098
    new $P5099, 'Hash'
    set $P5097["%LANG"], $P5099
    set $P5096, $P5099
  vivi_36037316:
    unless_null $P5096, vivi_36047317
    die "Contextual %*LANG not found"
    box $P5100, "Contextual %*LANG not found"
    set $P5096, $P5100
  vivi_36047317:
    set $P5091, $P5096
  fallback7313:
    set fb_tmp_945, $P5091
    repr_defined $I5014, fb_tmp_945
    unless $I5014 goto if3601_else7311 
    set $P5101, fb_tmp_945["Regex-actions"]
    set $P5103, $P5101
    goto if3601_end7312
  if3601_else7311:
    null $P5102
    set $P5103, $P5102
  if3601_end7312:
    unless_null $P5103, vivi_36057318
    nqp_get_sc_object $P5104, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5103, $P5104
  vivi_36057318:
    find_lex $P5105, "$/"
    unless_null $P5105, fallback7321
    nqp_get_sc_object $P5106, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5105, $P5106
  fallback7321:
    set fb_tmp_947, $P5105
    repr_defined $I5016, fb_tmp_947
    unless $I5016 goto if3606_else7319 
    set $P5107, fb_tmp_947["p6regex"]
    set $P5109, $P5107
    goto if3606_end7320
  if3606_else7319:
    null $P5108
    set $P5109, $P5108
  if3606_end7320:
    unless_null $P5109, vivi_36077322
    nqp_get_sc_object $P5110, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5109, $P5110
  vivi_36077322:
    $P5111 = $P5109."ast"()
    $P5112 = $P5103."qbuildsub"($P5111, $P101, $P102 :named("code_obj"))
    set $P103, $P5112
.annotate 'line', 2825
    find_lex $P5113, "$name"
    $P103."name"($P5113)
    find_dynamic_lex $P5114, "$*PKGDECL"
    unless_null $P5114, fallback7327
    nqp_get_sc_object $P5116, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5115, $P5116
    set fb_tmp_948, $P5115
    repr_defined $I5017, fb_tmp_948
    unless $I5017 goto if3610_else7328 
    set $P5117, fb_tmp_948["$PKGDECL"]
    set $P5119, $P5117
    goto if3610_end7329
  if3610_else7328:
    null $P5118
    set $P5119, $P5118
  if3610_end7329:
    unless_null $P5119, vivi_36117330
    nqp_get_sc_object $P5120, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5119, $P5120
  vivi_36117330:
    unless_null $P5119, vivi_36127331
    die "Contextual $*PKGDECL not found"
    box $P5121, "Contextual $*PKGDECL not found"
    set $P5119, $P5121
  vivi_36127331:
    set $P5114, $P5119
  fallback7327:
    set $P5131, $P5114
    unless $P5114 goto if3609_end7326 
    find_dynamic_lex $P5123, "$*PACKAGE"
    unless_null $P5123, fallback7332
    nqp_get_sc_object $P5125, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5124, $P5125
    set fb_tmp_949, $P5124
    repr_defined $I5019, fb_tmp_949
    unless $I5019 goto if3613_else7333 
    set $P5126, fb_tmp_949["$PACKAGE"]
    set $P5128, $P5126
    goto if3613_end7334
  if3613_else7333:
    null $P5127
    set $P5128, $P5127
  if3613_end7334:
    unless_null $P5128, vivi_36147335
    nqp_get_sc_object $P5129, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5128, $P5129
  vivi_36147335:
    unless_null $P5128, vivi_36157336
    die "Contextual $*PACKAGE not found"
    box $P5130, "Contextual $*PACKAGE not found"
    set $P5128, $P5130
  vivi_36157336:
    set $P5123, $P5128
  fallback7332:
    get_how $P5122, $P5123
    can $I5018, $P5122, "add_method"
    box $P5132, $I5018
    set $P5131, $P5132
  if3609_end7326:
    unless $P5131 goto if3608_end7324 
.annotate 'line', 2827
.annotate 'line', 2829
    find_dynamic_lex $P5133, "$*W"
    unless_null $P5133, fallback7337
    nqp_get_sc_object $P5135, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5134, $P5135
    set fb_tmp_950, $P5134
    repr_defined $I5020, fb_tmp_950
    unless $I5020 goto if3616_else7338 
    set $P5136, fb_tmp_950["$W"]
    set $P5138, $P5136
    goto if3616_end7339
  if3616_else7338:
    null $P5137
    set $P5138, $P5137
  if3616_end7339:
    unless_null $P5138, vivi_36177340
    nqp_get_sc_object $P5139, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5138, $P5139
  vivi_36177340:
    unless_null $P5138, vivi_36187341
    die "Contextual $*W not found"
    box $P5140, "Contextual $*W not found"
    set $P5138, $P5140
  vivi_36187341:
    set $P5133, $P5138
  fallback7337:
    find_dynamic_lex $P5141, "$*PACKAGE"
    unless_null $P5141, fallback7342
    nqp_get_sc_object $P5143, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5142, $P5143
    set fb_tmp_951, $P5142
    repr_defined $I5021, fb_tmp_951
    unless $I5021 goto if3619_else7343 
    set $P5144, fb_tmp_951["$PACKAGE"]
    set $P5146, $P5144
    goto if3619_end7344
  if3619_else7343:
    null $P5145
    set $P5146, $P5145
  if3619_end7344:
    unless_null $P5146, vivi_36207345
    nqp_get_sc_object $P5147, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5146, $P5147
  vivi_36207345:
    unless_null $P5146, vivi_36217346
    die "Contextual $*PACKAGE not found"
    box $P5148, "Contextual $*PACKAGE not found"
    set $P5146, $P5148
  vivi_36217346:
    set $P5141, $P5146
  fallback7342:
    find_lex $P5149, "$name"
    $P5150 = $P5133."pkg_add_method"($P5141, "add_method", $P5149, $P102)
  if3608_end7324:
    find_dynamic_lex $P5151, "$*PKGDECL"
    unless_null $P5151, fallback7349
    nqp_get_sc_object $P5153, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5152, $P5153
    set fb_tmp_952, $P5152
    repr_defined $I5023, fb_tmp_952
    unless $I5023 goto if3623_else7350 
    set $P5154, fb_tmp_952["$PKGDECL"]
    set $P5156, $P5154
    goto if3623_end7351
  if3623_else7350:
    null $P5155
    set $P5156, $P5155
  if3623_end7351:
    unless_null $P5156, vivi_36247352
    nqp_get_sc_object $P5157, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5156, $P5157
  vivi_36247352:
    unless_null $P5156, vivi_36257353
    die "Contextual $*PKGDECL not found"
    box $P5158, "Contextual $*PKGDECL not found"
    set $P5156, $P5158
  vivi_36257353:
    set $P5151, $P5156
  fallback7349:
    set $S5001, $P5151
    iseq $I5022, $S5001, "role"
    unless $I5022 goto if3622_end7348 
    .const 'Sub' $P5159 = 'cuid_492_1360432459.413' 
    capture_lex $P5159
    $P5160 = $P5159()
  if3622_end7348:
.annotate 'line', 2843
    nqp_get_sc_object $P5163, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5162, $P5163, "QAST"
    get_who $P5161, $P5162
    set fb_tmp_955, $P5161
    repr_defined $I5024, fb_tmp_955
    unless $I5024 goto if3631_else7363 
    set $P5164, fb_tmp_955["Op"]
    set $P5166, $P5164
    goto if3631_end7364
  if3631_else7363:
    null $P5165
    set $P5166, $P5165
  if3631_end7364:
    unless_null $P5166, vivi_36327365
    nqp_get_sc_object $P5167, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5166, $P5167
  vivi_36327365:
.annotate 'line', 2845
    new $P5168, 'ResizablePMCArray'
    box $P5169, "NQPRegexMethod"
    push $P5168, $P5169
    find_lex $P5170, "$/"
    $P5171 = "&lexical_package_lookup"($P5168, $P5170)
    $P5172 = $P5166."new"($P5171, $P103, "callmethod" :named("op"), "new" :named("name"))
    store_lex "$past", $P5172
    find_lex $P5173, "$past"
    set $P5173["sink"], $P103
    .return ($P103) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_492_1360432459.413") :anon :lex :outer("cuid_493_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2834
    .lex "$gen_nfa", $P101 
    .local pmc fb_tmp_953 
    .local pmc fb_tmp_954 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
.annotate 'line', 2835
    nqp_get_sc_object $P5004, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5003, $P5004, "QRegex"
    get_who $P5002, $P5003
    set fb_tmp_953, $P5002
    repr_defined $I5001, fb_tmp_953
    unless $I5001 goto if3626_else7354 
    set $P5005, fb_tmp_953["NFA"]
    set $P5007, $P5005
    goto if3626_end7355
  if3626_else7354:
    null $P5006
    set $P5007, $P5006
  if3626_end7355:
    unless_null $P5007, vivi_36277356
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5007, $P5008
  vivi_36277356:
    $P5009 = $P5007."new"()
    set $P101, $P5009
.annotate 'line', 2836
    find_lex $P5010, "$/"
    unless_null $P5010, fallback7359
    nqp_get_sc_object $P5011, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5010, $P5011
  fallback7359:
    set fb_tmp_954, $P5010
    repr_defined $I5002, fb_tmp_954
    unless $I5002 goto if3628_else7357 
    set $P5012, fb_tmp_954["p6regex"]
    set $P5014, $P5012
    goto if3628_end7358
  if3628_else7357:
    null $P5013
    set $P5014, $P5013
  if3628_end7358:
    unless_null $P5014, vivi_36297360
    nqp_get_sc_object $P5015, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5014, $P5015
  vivi_36297360:
    $P5016 = $P5014."ast"()
    $P101."addnode"($P5016, 1 :named("vars_as_generic"))
.annotate 'line', 2837
    $P5017 = $P101."generic"()
    set $P5020, $P5017
    unless $P5017 goto if3630_end7362 
.annotate 'line', 2838
    find_lex $P5018, "$code"
    $P5019 = $P5018."SET_GENERIC_NFA"($P101)
    set $P5020, $P5019
  if3630_end7362:
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "dotty" :subid("cuid_317_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2853
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_956 
    .local pmc fb_tmp_957 
    .local pmc fb_tmp_958 
    .local pmc fb_tmp_959 
    .local pmc fb_tmp_960 
    .local pmc fb_tmp_961 
    .local pmc fb_tmp_962 
    .local pmc fb_tmp_963 
    .local pmc fb_tmp_964 
    .local pmc fb_tmp_965 
    .local pmc fb_tmp_966 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    unless_null _lex_param_1, fallback7371
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5002
  fallback7371:
    set fb_tmp_956, _lex_param_1
    repr_defined $I5001, fb_tmp_956
    unless $I5001 goto if3634_else7369 
    set $P5003, fb_tmp_956["args"]
    set $P5005, $P5003
    goto if3634_end7370
  if3634_else7369:
    null $P5004
    set $P5005, $P5004
  if3634_end7370:
    unless_null $P5005, vivi_36357372
    nqp_get_sc_object $P5006, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5005, $P5006
  vivi_36357372:
    unless $P5005 goto if3633_else7367 
.annotate 'line', 2854
    unless_null _lex_param_1, fallback7377
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5007
  fallback7377:
    set fb_tmp_958, _lex_param_1
    repr_defined $I5003, fb_tmp_958
    unless $I5003 goto if3637_else7375 
    set $P5008, fb_tmp_958["args"]
    set $P5010, $P5008
    goto if3637_end7376
  if3637_else7375:
    null $P5009
    set $P5010, $P5009
  if3637_end7376:
    unless_null $P5010, vivi_36387378
    nqp_get_sc_object $P5011, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5010, $P5011
  vivi_36387378:
    set fb_tmp_957, $P5010
    repr_defined $I5002, fb_tmp_957
    unless $I5002 goto if3636_else7373 
    set $P5012, fb_tmp_957[0]
    set $P5014, $P5012
    goto if3636_end7374
  if3636_else7373:
    null $P5013
    set $P5014, $P5013
  if3636_end7374:
    unless_null $P5014, vivi_36397379
    nqp_get_sc_object $P5015, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5014, $P5015
  vivi_36397379:
    $P5016 = $P5014."ast"()
    set $P5025, $P5016
    goto if3633_end7368
  if3633_else7367:
    nqp_get_sc_object $P5019, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5018, $P5019, "QAST"
    get_who $P5017, $P5018
    set fb_tmp_959, $P5017
    repr_defined $I5004, fb_tmp_959
    unless $I5004 goto if3640_else7380 
    set $P5020, fb_tmp_959["Op"]
    set $P5022, $P5020
    goto if3640_end7381
  if3640_else7380:
    null $P5021
    set $P5022, $P5021
  if3640_end7381:
    unless_null $P5022, vivi_36417382
    nqp_get_sc_object $P5023, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5022, $P5023
  vivi_36417382:
    $P5024 = $P5022."new"(_lex_param_1 :named("node"))
    set $P5025, $P5024
  if3633_end7368:
    set $P101, $P5025
    unless_null _lex_param_1, fallback7387
    nqp_get_sc_object $P5026, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5026
  fallback7387:
    set fb_tmp_960, _lex_param_1
    repr_defined $I5005, fb_tmp_960
    unless $I5005 goto if3643_else7385 
    set $P5027, fb_tmp_960["quote"]
    set $P5029, $P5027
    goto if3643_end7386
  if3643_else7385:
    null $P5028
    set $P5029, $P5028
  if3643_end7386:
    unless_null $P5029, vivi_36447388
    nqp_get_sc_object $P5030, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5029, $P5030
  vivi_36447388:
    unless $P5029 goto if3642_else7383 
.annotate 'line', 2855
.annotate 'line', 2856
    unless_null _lex_param_1, fallback7391
    nqp_get_sc_object $P5031, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5031
  fallback7391:
    set fb_tmp_961, _lex_param_1
    repr_defined $I5006, fb_tmp_961
    unless $I5006 goto if3645_else7389 
    set $P5032, fb_tmp_961["quote"]
    set $P5034, $P5032
    goto if3645_end7390
  if3645_else7389:
    null $P5033
    set $P5034, $P5033
  if3645_end7390:
    unless_null $P5034, vivi_36467392
    nqp_get_sc_object $P5035, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5034, $P5035
  vivi_36467392:
    $P5036 = $P5034."ast"()
    $P101."unshift"($P5036)
.annotate 'line', 2857
    $P5037 = $P101."op"("callmethod")
    goto if3642_end7384
  if3642_else7383:
    unless_null _lex_param_1, fallback7397
    nqp_get_sc_object $P5038, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5038
  fallback7397:
    set fb_tmp_962, _lex_param_1
    repr_defined $I5008, fb_tmp_962
    unless $I5008 goto if3648_else7395 
    set $P5039, fb_tmp_962["longname"]
    set $P5041, $P5039
    goto if3648_end7396
  if3648_else7395:
    null $P5040
    set $P5041, $P5040
  if3648_end7396:
    unless_null $P5041, vivi_36497398
    nqp_get_sc_object $P5042, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5041, $P5042
  vivi_36497398:
    set $S5001, $P5041
    iseq $I5007, $S5001, "HOW"
    unless $I5007 goto if3647_else7393 
.annotate 'line', 2859
.annotate 'line', 2860
    $P5043 = $P101."op"("how")
    set $P5071, $P5043
    goto if3647_end7394
  if3647_else7393:
    unless_null _lex_param_1, fallback7403
    nqp_get_sc_object $P5044, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5044
  fallback7403:
    set fb_tmp_963, _lex_param_1
    repr_defined $I5010, fb_tmp_963
    unless $I5010 goto if3651_else7401 
    set $P5045, fb_tmp_963["longname"]
    set $P5047, $P5045
    goto if3651_end7402
  if3651_else7401:
    null $P5046
    set $P5047, $P5046
  if3651_end7402:
    unless_null $P5047, vivi_36527404
    nqp_get_sc_object $P5048, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5047, $P5048
  vivi_36527404:
    set $S5002, $P5047
    iseq $I5009, $S5002, "WHAT"
    unless $I5009 goto if3650_else7399 
.annotate 'line', 2862
.annotate 'line', 2863
    $P5049 = $P101."op"("what")
    set $P5070, $P5049
    goto if3650_end7400
  if3650_else7399:
    unless_null _lex_param_1, fallback7409
    nqp_get_sc_object $P5050, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5050
  fallback7409:
    set fb_tmp_964, _lex_param_1
    repr_defined $I5012, fb_tmp_964
    unless $I5012 goto if3654_else7407 
    set $P5051, fb_tmp_964["longname"]
    set $P5053, $P5051
    goto if3654_end7408
  if3654_else7407:
    null $P5052
    set $P5053, $P5052
  if3654_end7408:
    unless_null $P5053, vivi_36557410
    nqp_get_sc_object $P5054, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5053, $P5054
  vivi_36557410:
    set $S5003, $P5053
    iseq $I5011, $S5003, "WHO"
    unless $I5011 goto if3653_else7405 
.annotate 'line', 2865
.annotate 'line', 2866
    $P5055 = $P101."op"("who")
    set $P5069, $P5055
    goto if3653_end7406
  if3653_else7405:
    unless_null _lex_param_1, fallback7415
    nqp_get_sc_object $P5056, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5056
  fallback7415:
    set fb_tmp_965, _lex_param_1
    repr_defined $I5014, fb_tmp_965
    unless $I5014 goto if3657_else7413 
    set $P5057, fb_tmp_965["longname"]
    set $P5059, $P5057
    goto if3657_end7414
  if3657_else7413:
    null $P5058
    set $P5059, $P5058
  if3657_end7414:
    unless_null $P5059, vivi_36587416
    nqp_get_sc_object $P5060, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5059, $P5060
  vivi_36587416:
    set $S5004, $P5059
    iseq $I5013, $S5004, "REPR"
    unless $I5013 goto if3656_else7411 
.annotate 'line', 2868
.annotate 'line', 2869
    $P5061 = $P101."op"("reprname")
    set $P5068, $P5061
    goto if3656_end7412
  if3656_else7411:
.annotate 'line', 2871
.annotate 'line', 2872
    unless_null _lex_param_1, fallback7419
    nqp_get_sc_object $P5062, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5062
  fallback7419:
    set fb_tmp_966, _lex_param_1
    repr_defined $I5015, fb_tmp_966
    unless $I5015 goto if3659_else7417 
    set $P5063, fb_tmp_966["longname"]
    set $P5065, $P5063
    goto if3659_end7418
  if3659_else7417:
    null $P5064
    set $P5065, $P5064
  if3659_end7418:
    unless_null $P5065, vivi_36607420
    nqp_get_sc_object $P5066, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5065, $P5066
  vivi_36607420:
    set $S5005, $P5065
    $P101."name"($S5005)
.annotate 'line', 2873
    $P5067 = $P101."op"("callmethod")
    set $P5068, $P5067
  if3656_end7412:
    set $P5069, $P5068
  if3653_end7406:
    set $P5070, $P5069
  if3650_end7400:
    set $P5071, $P5070
  if3647_end7394:
  if3642_end7384:
.annotate 'line', 2875
    $P5072 = _lex_param_1."!make"($P101)
    .return ($P5072) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<self>" :subid("cuid_318_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2880
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_967 
    .local pmc fb_tmp_968 
.annotate 'line', 2881
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5002, $P5003, "QAST"
    get_who $P5001, $P5002
    set fb_tmp_967, $P5001
    repr_defined $I5001, fb_tmp_967
    unless $I5001 goto if3661_else7421 
    set $P5004, fb_tmp_967["Op"]
    set $P5006, $P5004
    goto if3661_end7422
  if3661_else7421:
    null $P5005
    set $P5006, $P5005
  if3661_end7422:
    unless_null $P5006, vivi_36627423
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_36627423:
.annotate 'line', 2882
    nqp_get_sc_object $P5010, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5009, $P5010, "QAST"
    get_who $P5008, $P5009
    set fb_tmp_968, $P5008
    repr_defined $I5002, fb_tmp_968
    unless $I5002 goto if3663_else7424 
    set $P5011, fb_tmp_968["Var"]
    set $P5013, $P5011
    goto if3663_end7425
  if3663_else7424:
    null $P5012
    set $P5013, $P5012
  if3663_end7425:
    unless_null $P5013, vivi_36647426
    nqp_get_sc_object $P5014, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5013, $P5014
  vivi_36647426:
    $P5015 = $P5013."new"("self" :named("name"), "lexical" :named("scope"))
    $P5016 = $P5006."new"($P5015, "decont" :named("op"))
    $P5017 = _lex_param_1."!make"($P5016)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<identifier>" :subid("cuid_319_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2885
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_969 
    .local pmc fb_tmp_970 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
.annotate 'line', 2886
    unless_null _lex_param_1, fallback7429
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5002
  fallback7429:
    set fb_tmp_969, _lex_param_1
    repr_defined $I5001, fb_tmp_969
    unless $I5001 goto if3665_else7427 
    set $P5003, fb_tmp_969["args"]
    set $P5005, $P5003
    goto if3665_end7428
  if3665_else7427:
    null $P5004
    set $P5005, $P5004
  if3665_end7428:
    unless_null $P5005, vivi_36667430
    nqp_get_sc_object $P5006, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5005, $P5006
  vivi_36667430:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 2887
    unless_null _lex_param_1, fallback7433
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5008
  fallback7433:
    set fb_tmp_970, _lex_param_1
    repr_defined $I5002, fb_tmp_970
    unless $I5002 goto if3667_else7431 
    set $P5009, fb_tmp_970["deflongname"]
    set $P5011, $P5009
    goto if3667_end7432
  if3667_else7431:
    null $P5010
    set $P5011, $P5010
  if3667_end7432:
    unless_null $P5011, vivi_36687434
    nqp_get_sc_object $P5012, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5011, $P5012
  vivi_36687434:
    set $S5002, $P5011
    concat $S5001, "&", $S5002
    $P101."name"($S5001)
.annotate 'line', 2888
    $P5013 = _lex_param_1."!make"($P101)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<name>" :subid("cuid_320_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2891
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5065 = 'cuid_494_1360432459.413' 
    capture_lex $P5065 
    .const 'Sub' $P5065 = 'cuid_495_1360432459.413' 
    capture_lex $P5065 
    .lex "$var", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_971 
    .local pmc fb_tmp_972 
    .local pmc fb_tmp_973 
    .local pmc fb_tmp_974 
    .local pmc fb_tmp_975 
    .local pmc fb_tmp_980 
    .local pmc fb_tmp_981 
    .local pmc fb_tmp_982 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
.annotate 'line', 2894
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback7437
    nqp_get_sc_object $P5005, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5004, $P5005
    set fb_tmp_971, $P5004
    repr_defined $I5001, fb_tmp_971
    unless $I5001 goto if3670_else7438 
    set $P5006, fb_tmp_971["$W"]
    set $P5008, $P5006
    goto if3670_end7439
  if3670_else7438:
    null $P5007
    set $P5008, $P5007
  if3670_end7439:
    unless_null $P5008, vivi_36717440
    nqp_get_sc_object $P5009, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5008, $P5009
  vivi_36717440:
    unless_null $P5008, vivi_36727441
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_36727441:
    set $P5003, $P5008
  fallback7437:
    unless_null _lex_param_1, fallback7444
    nqp_get_sc_object $P5011, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5011
  fallback7444:
    set fb_tmp_972, _lex_param_1
    repr_defined $I5002, fb_tmp_972
    unless $I5002 goto if3673_else7442 
    set $P5012, fb_tmp_972["name"]
    set $P5014, $P5012
    goto if3673_end7443
  if3673_else7442:
    null $P5013
    set $P5014, $P5013
  if3673_end7443:
    unless_null $P5014, vivi_36747445
    nqp_get_sc_object $P5015, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5014, $P5015
  vivi_36747445:
    set $S5001, $P5014
    $P5016 = $P5003."is_lexical"($S5001)
    unless $P5016 goto if3669_else7435 
    new $P5044, 'ExceptionHandler'
    set_label $P5044, catch_handler_36897468
    $P5044.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5044
.annotate 'line', 2895
    new $P5042, 'ExceptionHandler'
    set_label $P5042, catch_handler_36837459
    $P5042.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5042
.annotate 'line', 2896
    nqp_get_sc_object $P5019, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5018, $P5019, "QAST"
    get_who $P5017, $P5018
    set fb_tmp_973, $P5017
    repr_defined $I5003, fb_tmp_973
    unless $I5003 goto if3675_else7446 
    set $P5020, fb_tmp_973["WVal"]
    set $P5022, $P5020
    goto if3675_end7447
  if3675_else7446:
    null $P5021
    set $P5022, $P5021
  if3675_end7447:
    unless_null $P5022, vivi_36767448
    nqp_get_sc_object $P5023, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5022, $P5023
  vivi_36767448:
    find_dynamic_lex $P5024, "$*W"
    unless_null $P5024, fallback7449
    nqp_get_sc_object $P5026, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5025, $P5026
    set fb_tmp_974, $P5025
    repr_defined $I5004, fb_tmp_974
    unless $I5004 goto if3677_else7450 
    set $P5027, fb_tmp_974["$W"]
    set $P5029, $P5027
    goto if3677_end7451
  if3677_else7450:
    null $P5028
    set $P5029, $P5028
  if3677_end7451:
    unless_null $P5029, vivi_36787452
    nqp_get_sc_object $P5030, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5029, $P5030
  vivi_36787452:
    unless_null $P5029, vivi_36797453
    die "Contextual $*W not found"
    box $P5031, "Contextual $*W not found"
    set $P5029, $P5031
  vivi_36797453:
    set $P5024, $P5029
  fallback7449:
    new $P5032, 'ResizablePMCArray'
    unless_null _lex_param_1, fallback7456
    nqp_get_sc_object $P5033, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5033
  fallback7456:
    set fb_tmp_975, _lex_param_1
    repr_defined $I5005, fb_tmp_975
    unless $I5005 goto if3680_else7454 
    set $P5034, fb_tmp_975["name"]
    set $P5036, $P5034
    goto if3680_end7455
  if3680_else7454:
    null $P5035
    set $P5036, $P5035
  if3680_end7455:
    unless_null $P5036, vivi_36817457
    nqp_get_sc_object $P5037, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5036, $P5037
  vivi_36817457:
    set $S5002, $P5036
    box $P5038, $S5002
    push $P5032, $P5038
    $P5039 = $P5024."find_sym"($P5032)
    $P5040 = $P5022."new"($P5039 :named("value"))
    set $P101, $P5040
    nqp_get_sc_object $P5041, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5043, $P5041
    pop_eh 
    goto skip_handler_36827458
  catch_handler_36837459:
    .get_results ($P5042) 
    .const 'Sub' $P10001 = 'cuid_494_1360432459.413' 
    capture_lex $P10001
    $P10001($P5042)
    set $I10001, 1
    set $P5042["handled"], $I10001
    nqp_get_sc_object $P10002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    finalize $P5042
    pop_upto_eh $P5042
    pop_eh 
    set $P5043, $P10002
    goto skip_handler_36827458
  skip_handler_36827458:
    set $P5045, $P5043
    pop_eh 
    goto skip_handler_36887467
  catch_handler_36897468:
    .get_results ($P5044) 
    set $I10001, 1
    set $P5044["handled"], $I10001
    nqp_get_sc_object $P10001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    finalize $P5044
    pop_upto_eh $P5044
    pop_eh 
    set $P5045, $P10001
    goto skip_handler_36887467
  skip_handler_36887467:
    goto if3669_end7436
  if3669_else7435:
    .const 'Sub' $P5046 = 'cuid_495_1360432459.413' 
    capture_lex $P5046
    $P5047 = $P5046()
  if3669_end7436:
    set $P102, $P101
    unless_null _lex_param_1, fallback7480
    nqp_get_sc_object $P5048, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5048
  fallback7480:
    set fb_tmp_980, _lex_param_1
    repr_defined $I5006, fb_tmp_980
    unless $I5006 goto if3695_else7478 
    set $P5049, fb_tmp_980["args"]
    set $P5051, $P5049
    goto if3695_end7479
  if3695_else7478:
    null $P5050
    set $P5051, $P5050
  if3695_end7479:
    unless_null $P5051, vivi_36967481
    nqp_get_sc_object $P5052, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5051, $P5052
  vivi_36967481:
    unless $P5051 goto if3694_end7477 
.annotate 'line', 2909
.annotate 'line', 2910
    unless_null _lex_param_1, fallback7486
    nqp_get_sc_object $P5053, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5053
  fallback7486:
    set fb_tmp_982, _lex_param_1
    repr_defined $I5008, fb_tmp_982
    unless $I5008 goto if3698_else7484 
    set $P5054, fb_tmp_982["args"]
    set $P5056, $P5054
    goto if3698_end7485
  if3698_else7484:
    null $P5055
    set $P5056, $P5055
  if3698_end7485:
    unless_null $P5056, vivi_36997487
    nqp_get_sc_object $P5057, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5056, $P5057
  vivi_36997487:
    set fb_tmp_981, $P5056
    repr_defined $I5007, fb_tmp_981
    unless $I5007 goto if3697_else7482 
    set $P5058, fb_tmp_981[0]
    set $P5060, $P5058
    goto if3697_end7483
  if3697_else7482:
    null $P5059
    set $P5060, $P5059
  if3697_end7483:
    unless_null $P5060, vivi_37007488
    nqp_get_sc_object $P5061, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5060, $P5061
  vivi_37007488:
    $P5062 = $P5060."ast"()
    set $P102, $P5062
.annotate 'line', 2911
    $P5063 = $P102."unshift"($P101)
  if3694_end7477:
.annotate 'line', 2913
    $P5064 = _lex_param_1."!make"($P102)
    .return ($P5064) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_494_1360432459.413") :anon :lex :outer("cuid_320_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2897
    .param pmc _lex_param_0 
    .lex "$!", $P101 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_976 
    .local pmc fb_tmp_977 
    set $P101, _lex_param_0
.annotate 'line', 2898
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5002, $P5003, "QAST"
    get_who $P5001, $P5002
    set fb_tmp_976, $P5001
    repr_defined $I5001, fb_tmp_976
    unless $I5001 goto if3684_else7460 
    set $P5004, fb_tmp_976["Var"]
    set $P5006, $P5004
    goto if3684_end7461
  if3684_else7460:
    null $P5005
    set $P5006, $P5005
  if3684_end7461:
    unless_null $P5006, vivi_36857462
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_36857462:
    find_lex $P5008, "$/"
    unless_null $P5008, fallback7465
    nqp_get_sc_object $P5009, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5008, $P5009
  fallback7465:
    set fb_tmp_977, $P5008
    repr_defined $I5002, fb_tmp_977
    unless $I5002 goto if3686_else7463 
    set $P5010, fb_tmp_977["name"]
    set $P5012, $P5010
    goto if3686_end7464
  if3686_else7463:
    null $P5011
    set $P5012, $P5011
  if3686_end7464:
    unless_null $P5012, vivi_36877466
    nqp_get_sc_object $P5013, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5012, $P5013
  vivi_36877466:
    set $S5001, $P5012
    $P5014 = $P5006."new"($S5001 :named("name"), "lexical" :named("scope"))
    store_lex "$var", $P5014
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_495_1360432459.413") :anon :lex :outer("cuid_320_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2902
    .lex "@ns", $P101 
    .local pmc fb_tmp_978 
    .local pmc fb_tmp_979 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    find_lex $P5003, "$/"
    unless_null $P5003, fallback7473
    nqp_get_sc_object $P5004, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5003, $P5004
  fallback7473:
    set fb_tmp_979, $P5003
    repr_defined $I5002, fb_tmp_979
    unless $I5002 goto if3691_else7471 
    set $P5005, fb_tmp_979["name"]
    set $P5007, $P5005
    goto if3691_end7472
  if3691_else7471:
    null $P5006
    set $P5007, $P5006
  if3691_end7472:
    unless_null $P5007, vivi_36927474
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5007, $P5008
  vivi_36927474:
    set fb_tmp_978, $P5007
    repr_defined $I5001, fb_tmp_978
    unless $I5001 goto if3690_else7469 
    set $P5009, fb_tmp_978["identifier"]
    set $P5011, $P5009
    goto if3690_end7470
  if3690_else7469:
    null $P5010
    set $P5011, $P5010
  if3690_end7470:
    unless_null $P5011, vivi_36937475
    nqp_get_sc_object $P5012, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5011, $P5012
  vivi_36937475:
    repr_clone $P5002, $P5011
    set $P101, $P5002
.annotate 'line', 2904
    find_lex $P5013, "$/"
    $P5014 = "&lexical_package_lookup"($P101, $P5013)
    store_lex "$var", $P5014
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<pir::op>" :subid("cuid_321_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2916
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "@args", $P101 
    .lex "$pirop", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_983 
    .local pmc fb_tmp_984 
    .local pmc fb_tmp_985 
    .local pmc fb_tmp_986 
    .local pmc fb_tmp_987 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
    unless_null _lex_param_1, fallback7493
    nqp_get_sc_object $P5003, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5003
  fallback7493:
    set fb_tmp_983, _lex_param_1
    repr_defined $I5001, fb_tmp_983
    unless $I5001 goto if3702_else7491 
    set $P5004, fb_tmp_983["args"]
    set $P5006, $P5004
    goto if3702_end7492
  if3702_else7491:
    null $P5005
    set $P5006, $P5005
  if3702_end7492:
    unless_null $P5006, vivi_37037494
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_37037494:
    unless $P5006 goto if3701_else7489 
.annotate 'line', 2917
    unless_null _lex_param_1, fallback7499
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5008
  fallback7499:
    set fb_tmp_985, _lex_param_1
    repr_defined $I5003, fb_tmp_985
    unless $I5003 goto if3705_else7497 
    set $P5009, fb_tmp_985["args"]
    set $P5011, $P5009
    goto if3705_end7498
  if3705_else7497:
    null $P5010
    set $P5011, $P5010
  if3705_end7498:
    unless_null $P5011, vivi_37067500
    nqp_get_sc_object $P5012, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5011, $P5012
  vivi_37067500:
    set fb_tmp_984, $P5011
    repr_defined $I5002, fb_tmp_984
    unless $I5002 goto if3704_else7495 
    set $P5013, fb_tmp_984[0]
    set $P5015, $P5013
    goto if3704_end7496
  if3704_else7495:
    null $P5014
    set $P5015, $P5014
  if3704_end7496:
    unless_null $P5015, vivi_37077501
    nqp_get_sc_object $P5016, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5015, $P5016
  vivi_37077501:
    $P5017 = $P5015."ast"()
    $P5018 = $P5017."list"()
    set $P5020, $P5018
    goto if3701_end7490
  if3701_else7489:
    new $P5019, 'ResizablePMCArray'
    set $P5020, $P5019
  if3701_end7490:
    set $P101, $P5020
    unless_null _lex_param_1, fallback7504
    nqp_get_sc_object $P5021, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5021
  fallback7504:
    set fb_tmp_986, _lex_param_1
    repr_defined $I5004, fb_tmp_986
    unless $I5004 goto if3708_else7502 
    set $P5022, fb_tmp_986["op"]
    set $P5024, $P5022
    goto if3708_end7503
  if3708_else7502:
    null $P5023
    set $P5024, $P5023
  if3708_end7503:
    unless_null $P5024, vivi_37097505
    nqp_get_sc_object $P5025, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5024, $P5025
  vivi_37097505:
    set $S5001, $P5024
    box $P5026, $S5001
    set $P102, $P5026
    set $S5003, $P102
    split $P5027, "__", $S5003
    join $S5002, " ", $P5027
    box $P5028, $S5002
    set $P102, $P5028
.annotate 'line', 2920
    nqp_get_sc_object $P5031, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5030, $P5031, "QAST"
    get_who $P5029, $P5030
    set fb_tmp_987, $P5029
    repr_defined $I5005, fb_tmp_987
    unless $I5005 goto if3710_else7506 
    set $P5032, fb_tmp_987["VM"]
    set $P5034, $P5032
    goto if3710_end7507
  if3710_else7506:
    null $P5033
    set $P5034, $P5033
  if3710_end7507:
    unless_null $P5034, vivi_37117508
    nqp_get_sc_object $P5035, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5034, $P5035
  vivi_37117508:
    $P5036 = $P5034."new"($P101 :flat, $P102 :named("pirop"), _lex_param_1 :named("node"))
    $P5037 = _lex_param_1."!make"($P5036)
    .return ($P5037) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<pir::const>" :subid("cuid_322_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2923
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_988 
    .local pmc fb_tmp_989 
.annotate 'line', 2924
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5002, $P5003, "QAST"
    get_who $P5001, $P5002
    set fb_tmp_988, $P5001
    repr_defined $I5001, fb_tmp_988
    unless $I5001 goto if3712_else7509 
    set $P5004, fb_tmp_988["VM"]
    set $P5006, $P5004
    goto if3712_end7510
  if3712_else7509:
    null $P5005
    set $P5006, $P5005
  if3712_end7510:
    unless_null $P5006, vivi_37137511
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_37137511:
    unless_null _lex_param_1, fallback7514
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5008
  fallback7514:
    set fb_tmp_989, _lex_param_1
    repr_defined $I5002, fb_tmp_989
    unless $I5002 goto if3714_else7512 
    set $P5009, fb_tmp_989["const"]
    set $P5011, $P5009
    goto if3714_end7513
  if3714_else7512:
    null $P5010
    set $P5011, $P5010
  if3714_end7513:
    unless_null $P5011, vivi_37157515
    nqp_get_sc_object $P5012, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5011, $P5012
  vivi_37157515:
    set $S5001, $P5011
    $P5013 = $P5006."new"($S5001 :named("pirconst"))
    $P5014 = _lex_param_1."!make"($P5013)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<nqp::op>" :subid("cuid_323_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2927
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$op", $P101 
    .lex "@args", $P102 
    .lex "$past", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_990 
    .local pmc fb_tmp_991 
    .local pmc fb_tmp_992 
    .local pmc fb_tmp_993 
    .local pmc fb_tmp_994 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    new $P5002, 'ResizablePMCArray'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P103, $P5003
    unless_null _lex_param_1, fallback7518
    nqp_get_sc_object $P5004, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5004
  fallback7518:
    set fb_tmp_990, _lex_param_1
    repr_defined $I5001, fb_tmp_990
    unless $I5001 goto if3716_else7516 
    set $P5005, fb_tmp_990["op"]
    set $P5007, $P5005
    goto if3716_end7517
  if3716_else7516:
    null $P5006
    set $P5007, $P5006
  if3716_end7517:
    unless_null $P5007, vivi_37177519
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5007, $P5008
  vivi_37177519:
    set $S5001, $P5007
    box $P5009, $S5001
    set $P101, $P5009
    unless_null _lex_param_1, fallback7524
    nqp_get_sc_object $P5010, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5010
  fallback7524:
    set fb_tmp_991, _lex_param_1
    repr_defined $I5002, fb_tmp_991
    unless $I5002 goto if3719_else7522 
    set $P5011, fb_tmp_991["args"]
    set $P5013, $P5011
    goto if3719_end7523
  if3719_else7522:
    null $P5012
    set $P5013, $P5012
  if3719_end7523:
    unless_null $P5013, vivi_37207525
    nqp_get_sc_object $P5014, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5013, $P5014
  vivi_37207525:
    unless $P5013 goto if3718_else7520 
.annotate 'line', 2929
    unless_null _lex_param_1, fallback7530
    nqp_get_sc_object $P5015, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5015
  fallback7530:
    set fb_tmp_993, _lex_param_1
    repr_defined $I5004, fb_tmp_993
    unless $I5004 goto if3722_else7528 
    set $P5016, fb_tmp_993["args"]
    set $P5018, $P5016
    goto if3722_end7529
  if3722_else7528:
    null $P5017
    set $P5018, $P5017
  if3722_end7529:
    unless_null $P5018, vivi_37237531
    nqp_get_sc_object $P5019, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5018, $P5019
  vivi_37237531:
    set fb_tmp_992, $P5018
    repr_defined $I5003, fb_tmp_992
    unless $I5003 goto if3721_else7526 
    set $P5020, fb_tmp_992[0]
    set $P5022, $P5020
    goto if3721_end7527
  if3721_else7526:
    null $P5021
    set $P5022, $P5021
  if3721_end7527:
    unless_null $P5022, vivi_37247532
    nqp_get_sc_object $P5023, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5022, $P5023
  vivi_37247532:
    $P5024 = $P5022."ast"()
    $P5025 = $P5024."list"()
    set $P5027, $P5025
    goto if3718_end7521
  if3718_else7520:
    new $P5026, 'ResizablePMCArray'
    set $P5027, $P5026
  if3718_end7521:
    set $P102, $P5027
.annotate 'line', 2930
    nqp_get_sc_object $P5030, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5029, $P5030, "QAST"
    get_who $P5028, $P5029
    set fb_tmp_994, $P5028
    repr_defined $I5005, fb_tmp_994
    unless $I5005 goto if3725_else7533 
    set $P5031, fb_tmp_994["Op"]
    set $P5033, $P5031
    goto if3725_end7534
  if3725_else7533:
    null $P5032
    set $P5033, $P5032
  if3725_end7534:
    unless_null $P5033, vivi_37267535
    nqp_get_sc_object $P5034, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5033, $P5034
  vivi_37267535:
    $P5035 = $P5033."new"($P102 :flat, $P101 :named("op"), _lex_param_1 :named("node"))
    set $P103, $P5035
.annotate 'line', 2931
    $P5036 = _lex_param_1."!make"($P103)
    .return ($P5036) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<onlystar>" :subid("cuid_324_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2934
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$dc_name", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_995 
    .local pmc fb_tmp_996 
    .local pmc fb_tmp_997 
    .local pmc fb_tmp_998 
    .local pmc fb_tmp_999 
    .local pmc fb_tmp_1000 
    .local pmc fb_tmp_1001 
    .local pmc fb_tmp_1002 
    .local pmc fb_tmp_1003 
    .local pmc fb_tmp_1004 
    .local pmc fb_tmp_1005 
    .local pmc fb_tmp_1006 
    .local pmc fb_tmp_1007 
    .local pmc fb_tmp_1008 
    .local pmc fb_tmp_1009 
    .local pmc fb_tmp_1010 
    .local pmc fb_tmp_1011 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
.annotate 'line', 2935
    nqp_get_sc_object $P5004, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5003, $P5004, "QAST"
    get_who $P5002, $P5003
    set fb_tmp_995, $P5002
    repr_defined $I5001, fb_tmp_995
    unless $I5001 goto if3727_else7536 
    set $P5005, fb_tmp_995["Node"]
    set $P5007, $P5005
    goto if3727_end7537
  if3727_else7536:
    null $P5006
    set $P5007, $P5006
  if3727_end7537:
    unless_null $P5007, vivi_37287538
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5007, $P5008
  vivi_37287538:
    $P5009 = $P5007."unique"("dispatch_cap")
    set $P101, $P5009
.annotate 'line', 2936
    nqp_get_sc_object $P5012, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5011, $P5012, "QAST"
    get_who $P5010, $P5011
    set fb_tmp_996, $P5010
    repr_defined $I5002, fb_tmp_996
    unless $I5002 goto if3729_else7539 
    set $P5013, fb_tmp_996["Stmts"]
    set $P5015, $P5013
    goto if3729_end7540
  if3729_else7539:
    null $P5014
    set $P5015, $P5014
  if3729_end7540:
    unless_null $P5015, vivi_37307541
    nqp_get_sc_object $P5016, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5015, $P5016
  vivi_37307541:
.annotate 'line', 2937
    nqp_get_sc_object $P5019, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5018, $P5019, "QAST"
    get_who $P5017, $P5018
    set fb_tmp_997, $P5017
    repr_defined $I5003, fb_tmp_997
    unless $I5003 goto if3731_else7542 
    set $P5020, fb_tmp_997["Op"]
    set $P5022, $P5020
    goto if3731_end7543
  if3731_else7542:
    null $P5021
    set $P5022, $P5021
  if3731_end7543:
    unless_null $P5022, vivi_37327544
    nqp_get_sc_object $P5023, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5022, $P5023
  vivi_37327544:
.annotate 'line', 2939
    nqp_get_sc_object $P5026, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5025, $P5026, "QAST"
    get_who $P5024, $P5025
    set fb_tmp_998, $P5024
    repr_defined $I5004, fb_tmp_998
    unless $I5004 goto if3733_else7545 
    set $P5027, fb_tmp_998["Var"]
    set $P5029, $P5027
    goto if3733_end7546
  if3733_else7545:
    null $P5028
    set $P5029, $P5028
  if3733_end7546:
    unless_null $P5029, vivi_37347547
    nqp_get_sc_object $P5030, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5029, $P5030
  vivi_37347547:
    $P5031 = $P5029."new"($P101 :named("name"), "local" :named("scope"), "var" :named("decl"))
.annotate 'line', 2940
    nqp_get_sc_object $P5034, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5033, $P5034, "QAST"
    get_who $P5032, $P5033
    set fb_tmp_999, $P5032
    repr_defined $I5005, fb_tmp_999
    unless $I5005 goto if3735_else7548 
    set $P5035, fb_tmp_999["Var"]
    set $P5037, $P5035
    goto if3735_end7549
  if3735_else7548:
    null $P5036
    set $P5037, $P5036
  if3735_end7549:
    unless_null $P5037, vivi_37367550
    nqp_get_sc_object $P5038, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5037, $P5038
  vivi_37367550:
    $P5039 = $P5037."new"("CURRENT_DISPATCH_CAPTURE" :named("name"), "lexical" :named("scope"))
    $P5040 = $P5022."new"($P5031, $P5039, "bind" :named("op"))
.annotate 'line', 2942
    nqp_get_sc_object $P5043, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5042, $P5043, "QAST"
    get_who $P5041, $P5042
    set fb_tmp_1000, $P5041
    repr_defined $I5006, fb_tmp_1000
    unless $I5006 goto if3737_else7551 
    set $P5044, fb_tmp_1000["Op"]
    set $P5046, $P5044
    goto if3737_end7552
  if3737_else7551:
    null $P5045
    set $P5046, $P5045
  if3737_end7552:
    unless_null $P5046, vivi_37387553
    nqp_get_sc_object $P5047, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5046, $P5047
  vivi_37387553:
.annotate 'line', 2944
    nqp_get_sc_object $P5050, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5049, $P5050, "QAST"
    get_who $P5048, $P5049
    set fb_tmp_1001, $P5048
    repr_defined $I5007, fb_tmp_1001
    unless $I5007 goto if3739_else7554 
    set $P5051, fb_tmp_1001["Op"]
    set $P5053, $P5051
    goto if3739_end7555
  if3739_else7554:
    null $P5052
    set $P5053, $P5052
  if3739_end7555:
    unless_null $P5053, vivi_37407556
    nqp_get_sc_object $P5054, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5053, $P5054
  vivi_37407556:
.annotate 'line', 2946
    nqp_get_sc_object $P5057, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5056, $P5057, "QAST"
    get_who $P5055, $P5056
    set fb_tmp_1002, $P5055
    repr_defined $I5008, fb_tmp_1002
    unless $I5008 goto if3741_else7557 
    set $P5058, fb_tmp_1002["Op"]
    set $P5060, $P5058
    goto if3741_end7558
  if3741_else7557:
    null $P5059
    set $P5060, $P5059
  if3741_end7558:
    unless_null $P5060, vivi_37427559
    nqp_get_sc_object $P5061, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5060, $P5061
  vivi_37427559:
.annotate 'line', 2948
    nqp_get_sc_object $P5064, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5063, $P5064, "QAST"
    get_who $P5062, $P5063
    set fb_tmp_1003, $P5062
    repr_defined $I5009, fb_tmp_1003
    unless $I5009 goto if3743_else7560 
    set $P5065, fb_tmp_1003["Var"]
    set $P5067, $P5065
    goto if3743_end7561
  if3743_else7560:
    null $P5066
    set $P5067, $P5066
  if3743_end7561:
    unless_null $P5067, vivi_37447562
    nqp_get_sc_object $P5068, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5067, $P5068
  vivi_37447562:
.annotate 'line', 2950
    nqp_get_sc_object $P5071, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5070, $P5071, "QAST"
    get_who $P5069, $P5070
    set fb_tmp_1004, $P5069
    repr_defined $I5010, fb_tmp_1004
    unless $I5010 goto if3745_else7563 
    set $P5072, fb_tmp_1004["Var"]
    set $P5074, $P5072
    goto if3745_end7564
  if3745_else7563:
    null $P5073
    set $P5074, $P5073
  if3745_end7564:
    unless_null $P5074, vivi_37467565
    nqp_get_sc_object $P5075, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5074, $P5075
  vivi_37467565:
    $P5076 = $P5074."new"("&*CURRENT_DISPATCHER" :named("name"), "lexical" :named("scope"))
.annotate 'line', 2951
    nqp_get_sc_object $P5079, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5078, $P5079, "QAST"
    get_who $P5077, $P5078
    set fb_tmp_1005, $P5077
    repr_defined $I5011, fb_tmp_1005
    unless $I5011 goto if3747_else7566 
    set $P5080, fb_tmp_1005["WVal"]
    set $P5082, $P5080
    goto if3747_end7567
  if3747_else7566:
    null $P5081
    set $P5082, $P5081
  if3747_end7567:
    unless_null $P5082, vivi_37487568
    nqp_get_sc_object $P5083, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5082, $P5083
  vivi_37487568:
    find_dynamic_lex $P5084, "$*W"
    unless_null $P5084, fallback7569
    nqp_get_sc_object $P5086, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5085, $P5086
    set fb_tmp_1006, $P5085
    repr_defined $I5012, fb_tmp_1006
    unless $I5012 goto if3749_else7570 
    set $P5087, fb_tmp_1006["$W"]
    set $P5089, $P5087
    goto if3749_end7571
  if3749_else7570:
    null $P5088
    set $P5089, $P5088
  if3749_end7571:
    unless_null $P5089, vivi_37507572
    nqp_get_sc_object $P5090, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5089, $P5090
  vivi_37507572:
    unless_null $P5089, vivi_37517573
    die "Contextual $*W not found"
    box $P5091, "Contextual $*W not found"
    set $P5089, $P5091
  vivi_37517573:
    set $P5084, $P5089
  fallback7569:
    new $P5092, 'ResizablePMCArray'
    box $P5093, "NQPRoutine"
    push $P5092, $P5093
    $P5094 = $P5084."find_sym"($P5092)
    $P5095 = $P5082."new"($P5094 :named("value"))
    $P5096 = $P5067."new"($P5076, $P5095, "$!dispatch_cache" :named("name"), "attribute" :named("scope"))
.annotate 'line', 2953
    nqp_get_sc_object $P5099, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5098, $P5099, "QAST"
    get_who $P5097, $P5098
    set fb_tmp_1007, $P5097
    repr_defined $I5013, fb_tmp_1007
    unless $I5013 goto if3752_else7574 
    set $P5100, fb_tmp_1007["Var"]
    set $P5102, $P5100
    goto if3752_end7575
  if3752_else7574:
    null $P5101
    set $P5102, $P5101
  if3752_end7575:
    unless_null $P5102, vivi_37537576
    nqp_get_sc_object $P5103, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5102, $P5103
  vivi_37537576:
    $P5104 = $P5102."new"($P101 :named("name"), "local" :named("scope"))
    $P5105 = $P5060."new"($P5096, $P5104, "multicachefind" :named("op"))
.annotate 'line', 2955
    nqp_get_sc_object $P5108, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5107, $P5108, "QAST"
    get_who $P5106, $P5107
    set fb_tmp_1008, $P5106
    repr_defined $I5014, fb_tmp_1008
    unless $I5014 goto if3754_else7577 
    set $P5109, fb_tmp_1008["Op"]
    set $P5111, $P5109
    goto if3754_end7578
  if3754_else7577:
    null $P5110
    set $P5111, $P5110
  if3754_end7578:
    unless_null $P5111, vivi_37557579
    nqp_get_sc_object $P5112, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5111, $P5112
  vivi_37557579:
.annotate 'line', 2957
    nqp_get_sc_object $P5115, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5114, $P5115, "QAST"
    get_who $P5113, $P5114
    set fb_tmp_1009, $P5113
    repr_defined $I5015, fb_tmp_1009
    unless $I5015 goto if3756_else7580 
    set $P5116, fb_tmp_1009["Var"]
    set $P5118, $P5116
    goto if3756_end7581
  if3756_else7580:
    null $P5117
    set $P5118, $P5117
  if3756_end7581:
    unless_null $P5118, vivi_37577582
    nqp_get_sc_object $P5119, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5118, $P5119
  vivi_37577582:
    $P5120 = $P5118."new"("&*CURRENT_DISPATCHER" :named("name"), "lexical" :named("scope"))
.annotate 'line', 2958
    nqp_get_sc_object $P5123, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5122, $P5123, "QAST"
    get_who $P5121, $P5122
    set fb_tmp_1010, $P5121
    repr_defined $I5016, fb_tmp_1010
    unless $I5016 goto if3758_else7583 
    set $P5124, fb_tmp_1010["Var"]
    set $P5126, $P5124
    goto if3758_end7584
  if3758_else7583:
    null $P5125
    set $P5126, $P5125
  if3758_end7584:
    unless_null $P5126, vivi_37597585
    nqp_get_sc_object $P5127, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5126, $P5127
  vivi_37597585:
    $P5128 = $P5126."new"($P101 :named("name"), "local" :named("scope"))
    $P5129 = $P5111."new"($P5120, $P5128, "callmethod" :named("op"), "dispatch" :named("name"))
    $P5130 = $P5053."new"($P5105, $P5129, "ifnull" :named("op"))
.annotate 'line', 2961
    nqp_get_sc_object $P5133, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5132, $P5133, "QAST"
    get_who $P5131, $P5132
    set fb_tmp_1011, $P5131
    repr_defined $I5017, fb_tmp_1011
    unless $I5017 goto if3760_else7586 
    set $P5134, fb_tmp_1011["Var"]
    set $P5136, $P5134
    goto if3760_end7587
  if3760_else7586:
    null $P5135
    set $P5136, $P5135
  if3760_end7587:
    unless_null $P5136, vivi_37617588
    nqp_get_sc_object $P5137, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5136, $P5137
  vivi_37617588:
    $P5138 = $P5136."new"($P101 :named("name"), "local" :named("scope"))
    $P5139 = $P5046."new"($P5130, $P5138, "invokewithcapture" :named("op"))
    $P5140 = $P5015."new"($P5040, $P5139)
    $P5141 = _lex_param_1."!make"($P5140)
    .return ($P5141) 
.end
.HLL "nqp"
.namespace []
.sub "args" :subid("cuid_325_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2965
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1012 
    unless_null _lex_param_1, fallback7591
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback7591:
    set fb_tmp_1012, _lex_param_1
    repr_defined $I5001, fb_tmp_1012
    unless $I5001 goto if3762_else7589 
    set $P5002, fb_tmp_1012["arglist"]
    set $P5004, $P5002
    goto if3762_end7590
  if3762_else7589:
    null $P5003
    set $P5004, $P5003
  if3762_end7590:
    unless_null $P5004, vivi_37637592
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_37637592:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "arglist" :subid("cuid_326_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2967
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5076 = 'cuid_497_1360432459.413' 
    capture_lex $P5076 
    .lex "$past", $P101 
    .lex "$i", $P102 
    .lex "$n", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1013 
    .local pmc fb_tmp_1014 
    .local pmc fb_tmp_1017 
    .local pmc fb_tmp_1018 
    .local pmc fb_tmp_1019 
    .local pmc fb_tmp_1020 
    .local pmc fb_tmp_1021 
    .local pmc fb_tmp_1022 
    .local pmc fb_tmp_1023 
    .local pmc fb_tmp_1024 
    .local pmc fb_tmp_1025 
    .local pmc fb_tmp_1026 
    .local pmc tmp_2 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P103, $P5003
.annotate 'line', 2968
    nqp_get_sc_object $P5006, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5005, $P5006, "QAST"
    get_who $P5004, $P5005
    set fb_tmp_1013, $P5004
    repr_defined $I5001, fb_tmp_1013
    unless $I5001 goto if3764_else7593 
    set $P5007, fb_tmp_1013["Op"]
    set $P5009, $P5007
    goto if3764_end7594
  if3764_else7593:
    null $P5008
    set $P5009, $P5008
  if3764_end7594:
    unless_null $P5009, vivi_37657595
    nqp_get_sc_object $P5010, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5009, $P5010
  vivi_37657595:
    $P5011 = $P5009."new"("call" :named("op"), _lex_param_1 :named("node"))
    set $P101, $P5011
    unless_null _lex_param_1, fallback7600
    nqp_get_sc_object $P5012, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5012
  fallback7600:
    set fb_tmp_1014, _lex_param_1
    repr_defined $I5002, fb_tmp_1014
    unless $I5002 goto if3767_else7598 
    set $P5013, fb_tmp_1014["EXPR"]
    set $P5015, $P5013
    goto if3767_end7599
  if3767_else7598:
    null $P5014
    set $P5015, $P5014
  if3767_end7599:
    unless_null $P5015, vivi_37687601
    nqp_get_sc_object $P5016, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5015, $P5016
  vivi_37687601:
    unless $P5015 goto if3766_end7597 
    .const 'Sub' $P5017 = 'cuid_497_1360432459.413' 
    capture_lex $P5017
    $P5018 = $P5017()
  if3766_end7597:
    box $P5019, 0
    set $P102, $P5019
.annotate 'line', 2977
    $P5020 = $P101."list"()
    set $N5001, $P5020
    box $P5021, $N5001
    set $P103, $P5021
  while3776_test7618:
    set $N5002, $P102
    set $N5003, $P103
    islt $I5003, $N5002, $N5003
    box $P5074, $I5003
    set $P5073, $P5074
    unless $I5003 goto while3776_done7622 
  while3776_redo7620:
.annotate 'line', 2978
    set fb_tmp_1017, $P101
    repr_defined $I5005, fb_tmp_1017
    unless $I5005 goto if3779_else7627 
    set $I5006, $P102
    set $P5022, fb_tmp_1017[$I5006]
    set $P5024, $P5022
    goto if3779_end7628
  if3779_else7627:
    null $P5023
    set $P5024, $P5023
  if3779_end7628:
    unless_null $P5024, vivi_37807629
    nqp_get_sc_object $P5025, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5024, $P5025
  vivi_37807629:
    nqp_get_sc_object $P5028, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5027, $P5028, "QAST"
    get_who $P5026, $P5027
    set fb_tmp_1018, $P5026
    repr_defined $I5007, fb_tmp_1018
    unless $I5007 goto if3781_else7630 
    set $P5029, fb_tmp_1018["Op"]
    set $P5031, $P5029
    goto if3781_end7631
  if3781_else7630:
    null $P5030
    set $P5031, $P5030
  if3781_end7631:
    unless_null $P5031, vivi_37827632
    nqp_get_sc_object $P5032, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5031, $P5032
  vivi_37827632:
    type_check $I5004, $P5024, $P5031
    set $I5011, $I5004
    unless $I5004 goto if3778_end7626 
.annotate 'line', 2979
    set fb_tmp_1019, $P101
    repr_defined $I5009, fb_tmp_1019
    unless $I5009 goto if3783_else7633 
    set $I5010, $P102
    set $P5033, fb_tmp_1019[$I5010]
    set $P5035, $P5033
    goto if3783_end7634
  if3783_else7633:
    null $P5034
    set $P5035, $P5034
  if3783_end7634:
    unless_null $P5035, vivi_37847635
    nqp_get_sc_object $P5036, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5035, $P5036
  vivi_37847635:
    $P5037 = $P5035."name"()
    set $S5001, $P5037
    iseq $I5008, $S5001, "&prefix:<|>"
    set $I5011, $I5008
  if3778_end7626:
    unless $I5011 goto if3777_end7624 
    set $I5012, $P102
    set fb_tmp_1021, $P101
    repr_defined $I5014, fb_tmp_1021
    unless $I5014 goto if3786_else7638 
    set $I5015, $P102
    set $P5038, fb_tmp_1021[$I5015]
    set $P5040, $P5038
    goto if3786_end7639
  if3786_else7638:
    null $P5039
    set $P5040, $P5039
  if3786_end7639:
    unless_null $P5040, vivi_37877640
    nqp_get_sc_object $P5041, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5040, $P5041
  vivi_37877640:
    set fb_tmp_1020, $P5040
    repr_defined $I5013, fb_tmp_1020
    unless $I5013 goto if3785_else7636 
    set $P5042, fb_tmp_1020[0]
    set $P5044, $P5042
    goto if3785_end7637
  if3785_else7636:
    null $P5043
    set $P5044, $P5043
  if3785_end7637:
    unless_null $P5044, vivi_37887641
    nqp_get_sc_object $P5045, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5044, $P5045
  vivi_37887641:
    set $P101[$I5012], $P5044
.annotate 'line', 2981
    set fb_tmp_1022, $P101
    repr_defined $I5016, fb_tmp_1022
    unless $I5016 goto if3789_else7642 
    set $I5017, $P102
    set $P5046, fb_tmp_1022[$I5017]
    set $P5048, $P5046
    goto if3789_end7643
  if3789_else7642:
    null $P5047
    set $P5048, $P5047
  if3789_end7643:
    unless_null $P5048, vivi_37907644
    nqp_get_sc_object $P5049, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5048, $P5049
  vivi_37907644:
    $P5048."flat"(1)
    set fb_tmp_1023, $P101
    repr_defined $I5019, fb_tmp_1023
    unless $I5019 goto if3793_else7649 
    set $I5020, $P102
    set $P5050, fb_tmp_1023[$I5020]
    set $P5052, $P5050
    goto if3793_end7650
  if3793_else7649:
    null $P5051
    set $P5052, $P5051
  if3793_end7650:
    unless_null $P5052, vivi_37947651
    nqp_get_sc_object $P5053, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5052, $P5053
  vivi_37947651:
    nqp_get_sc_object $P5056, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5055, $P5056, "QAST"
    get_who $P5054, $P5055
    set fb_tmp_1024, $P5054
    repr_defined $I5021, fb_tmp_1024
    unless $I5021 goto if3795_else7652 
    set $P5057, fb_tmp_1024["Var"]
    set $P5059, $P5057
    goto if3795_end7653
  if3795_else7652:
    null $P5058
    set $P5059, $P5058
  if3795_end7653:
    unless_null $P5059, vivi_37967654
    nqp_get_sc_object $P5060, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5059, $P5060
  vivi_37967654:
    type_check $I5018, $P5052, $P5059
    set $I5025, $I5018
    unless $I5018 goto if3792_end7648 
.annotate 'line', 2983
    set fb_tmp_1025, $P101
    repr_defined $I5023, fb_tmp_1025
    unless $I5023 goto if3797_else7655 
    set $I5024, $P102
    set $P5061, fb_tmp_1025[$I5024]
    set $P5063, $P5061
    goto if3797_end7656
  if3797_else7655:
    null $P5062
    set $P5063, $P5062
  if3797_end7656:
    unless_null $P5063, vivi_37987657
    nqp_get_sc_object $P5064, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5063, $P5064
  vivi_37987657:
    $P5065 = $P5063."name"()
    set $S5003, $P5065
    substr $S5002, $S5003, 0, 1
    iseq $I5022, $S5002, "%"
    set $I5025, $I5022
  if3792_end7648:
    box $P5072, $I5025
    set $P5071, $P5072
    unless $I5025 goto if3791_end7646 
.annotate 'line', 2982
    set fb_tmp_1026, $P101
    repr_defined $I5026, fb_tmp_1026
    unless $I5026 goto if3799_else7658 
    set $I5027, $P102
    set $P5066, fb_tmp_1026[$I5027]
    set $P5068, $P5066
    goto if3799_end7659
  if3799_else7658:
    null $P5067
    set $P5068, $P5067
  if3799_end7659:
    unless_null $P5068, vivi_38007660
    nqp_get_sc_object $P5069, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5068, $P5069
  vivi_38007660:
    $P5070 = $P5068."named"(1)
    set $P5071, $P5070
  if3791_end7646:
  if3777_end7624:
    set tmp_2, $P102
    set $N5005, tmp_2
    set $N5006, 1
    add $N5004, $N5005, $N5006
    box $P5073, $N5004
    set $P102, $P5073
    set $P5073, tmp_2
    goto while3776_test7618 
  while3776_done7622:
.annotate 'line', 2987
    $P5075 = _lex_param_1."!make"($P101)
    .return ($P5075) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_497_1360432459.413") :anon :lex :outer("cuid_326_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2969
    .const 'Sub' $P5027 = 'cuid_496_1360432459.413' 
    capture_lex $P5027 
    .lex "$expr", $P101 
    .local pmc fb_tmp_1015 
    .local pmc fb_tmp_1016 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
.annotate 'line', 2970
    find_lex $P5002, "$/"
    unless_null $P5002, fallback7604
    nqp_get_sc_object $P5003, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5002, $P5003
  fallback7604:
    set fb_tmp_1015, $P5002
    repr_defined $I5001, fb_tmp_1015
    unless $I5001 goto if3769_else7602 
    set $P5004, fb_tmp_1015["EXPR"]
    set $P5006, $P5004
    goto if3769_end7603
  if3769_else7602:
    null $P5005
    set $P5006, $P5005
  if3769_end7603:
    unless_null $P5006, vivi_37707605
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_37707605:
    $P5008 = $P5006."ast"()
    set $P101, $P5008
    nqp_get_sc_object $P5011, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5010, $P5011, "QAST"
    get_who $P5009, $P5010
    set fb_tmp_1016, $P5009
    repr_defined $I5003, fb_tmp_1016
    unless $I5003 goto if3774_else7612 
    set $P5012, fb_tmp_1016["Op"]
    set $P5014, $P5012
    goto if3774_end7613
  if3774_else7612:
    null $P5013
    set $P5014, $P5013
  if3774_end7613:
    unless_null $P5014, vivi_37757614
    nqp_get_sc_object $P5015, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5014, $P5015
  vivi_37757614:
    type_check $I5002, $P101, $P5014
    set $I5005, $I5002
    unless $I5002 goto if3773_end7611 
.annotate 'line', 2971
    $P5016 = $P101."name"()
    set $S5001, $P5016
    iseq $I5004, $S5001, "&infix:<,>"
    set $I5005, $I5004
  if3773_end7611:
    set $I5007, $I5005
    unless $I5005 goto if3772_end7609 
    $P5017 = $P101."named"()
    isfalse $I5006, $P5017
    set $I5007, $I5006
  if3772_end7609:
    unless $I5007 goto if3771_else7606 
.annotate 'line', 2972
    $P5021 = $P101."list"()
    set $P5018, $P5021
    iter $P5020, $P5021
  for_next7615:
    unless $P5020, for_done7617
    shift $P5023, $P5020
  for_redo7616:
    .const 'Sub' $P5022 = 'cuid_496_1360432459.413' 
    capture_lex $P5022
    $P5018 = $P5022($P5023)
    goto for_next7615
  for_done7617:
    set $P5026, $P5018
    goto if3771_end7607
  if3771_else7606:
.annotate 'line', 2974
    find_lex $P5024, "$past"
    $P5025 = $P5024."push"($P101)
    set $P5026, $P5025
  if3771_end7607:
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_496_1360432459.413") :anon :lex :outer("cuid_497_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2972
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "$past"
    $P5002 = $P5001."push"(_lex_param_0)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<multi_declarator>" :subid("cuid_327_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2990
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1027 
    unless_null _lex_param_1, fallback7663
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback7663:
    set fb_tmp_1027, _lex_param_1
    repr_defined $I5001, fb_tmp_1027
    unless $I5001 goto if3801_else7661 
    set $P5002, fb_tmp_1027["multi_declarator"]
    set $P5004, $P5002
    goto if3801_end7662
  if3801_else7661:
    null $P5003
    set $P5004, $P5003
  if3801_end7662:
    unless_null $P5004, vivi_38027664
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_38027664:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<value>" :subid("cuid_328_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2992
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1028 
    unless_null _lex_param_1, fallback7667
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback7667:
    set fb_tmp_1028, _lex_param_1
    repr_defined $I5001, fb_tmp_1028
    unless $I5001 goto if3803_else7665 
    set $P5002, fb_tmp_1028["value"]
    set $P5004, $P5002
    goto if3803_end7666
  if3803_else7665:
    null $P5003
    set $P5004, $P5003
  if3803_end7666:
    unless_null $P5004, vivi_38047668
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_38047668:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<( )>" :subid("cuid_329_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2994
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1029 
    .local pmc fb_tmp_1030 
    .local pmc fb_tmp_1031 
    .local pmc fb_tmp_1032 
.annotate 'line', 2995
    unless_null _lex_param_1, fallback7673
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback7673:
    set fb_tmp_1029, _lex_param_1
    repr_defined $I5001, fb_tmp_1029
    unless $I5001 goto if3806_else7671 
    set $P5002, fb_tmp_1029["EXPR"]
    set $P5004, $P5002
    goto if3806_end7672
  if3806_else7671:
    null $P5003
    set $P5004, $P5003
  if3806_end7672:
    unless_null $P5004, vivi_38077674
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_38077674:
    unless $P5004 goto if3805_else7669 
.annotate 'line', 2996
    unless_null _lex_param_1, fallback7679
    nqp_get_sc_object $P5006, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5006
  fallback7679:
    set fb_tmp_1031, _lex_param_1
    repr_defined $I5003, fb_tmp_1031
    unless $I5003 goto if3809_else7677 
    set $P5007, fb_tmp_1031["EXPR"]
    set $P5009, $P5007
    goto if3809_end7678
  if3809_else7677:
    null $P5008
    set $P5009, $P5008
  if3809_end7678:
    unless_null $P5009, vivi_38107680
    nqp_get_sc_object $P5010, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5009, $P5010
  vivi_38107680:
    set fb_tmp_1030, $P5009
    repr_defined $I5002, fb_tmp_1030
    unless $I5002 goto if3808_else7675 
    set $P5011, fb_tmp_1030[0]
    set $P5013, $P5011
    goto if3808_end7676
  if3808_else7675:
    null $P5012
    set $P5013, $P5012
  if3808_end7676:
    unless_null $P5013, vivi_38117681
    nqp_get_sc_object $P5014, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5013, $P5014
  vivi_38117681:
    $P5015 = $P5013."ast"()
    set $P5024, $P5015
    goto if3805_end7670
  if3805_else7669:
.annotate 'line', 2997
    nqp_get_sc_object $P5018, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5017, $P5018, "QAST"
    get_who $P5016, $P5017
    set fb_tmp_1032, $P5016
    repr_defined $I5004, fb_tmp_1032
    unless $I5004 goto if3812_else7682 
    set $P5019, fb_tmp_1032["Op"]
    set $P5021, $P5019
    goto if3812_end7683
  if3812_else7682:
    null $P5020
    set $P5021, $P5020
  if3812_end7683:
    unless_null $P5021, vivi_38137684
    nqp_get_sc_object $P5022, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5021, $P5022
  vivi_38137684:
    $P5023 = $P5021."new"("list" :named("op"), _lex_param_1 :named("node"))
    set $P5024, $P5023
  if3805_end7670:
    $P5025 = _lex_param_1."!make"($P5024)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<[ ]>" :subid("cuid_330_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3000
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1033 
    .local pmc fb_tmp_1034 
    .local pmc fb_tmp_1035 
    .local pmc fb_tmp_1036 
    .local pmc fb_tmp_1037 
    .local pmc fb_tmp_1038 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    unless_null _lex_param_1, fallback7689
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5002
  fallback7689:
    set fb_tmp_1033, _lex_param_1
    repr_defined $I5001, fb_tmp_1033
    unless $I5001 goto if3815_else7687 
    set $P5003, fb_tmp_1033["EXPR"]
    set $P5005, $P5003
    goto if3815_end7688
  if3815_else7687:
    null $P5004
    set $P5005, $P5004
  if3815_end7688:
    unless_null $P5005, vivi_38167690
    nqp_get_sc_object $P5006, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5005, $P5006
  vivi_38167690:
    unless $P5005 goto if3814_else7685 
.annotate 'line', 3002
.annotate 'line', 3003
    unless_null _lex_param_1, fallback7695
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5007
  fallback7695:
    set fb_tmp_1035, _lex_param_1
    repr_defined $I5003, fb_tmp_1035
    unless $I5003 goto if3818_else7693 
    set $P5008, fb_tmp_1035["EXPR"]
    set $P5010, $P5008
    goto if3818_end7694
  if3818_else7693:
    null $P5009
    set $P5010, $P5009
  if3818_end7694:
    unless_null $P5010, vivi_38197696
    nqp_get_sc_object $P5011, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5010, $P5011
  vivi_38197696:
    set fb_tmp_1034, $P5010
    repr_defined $I5002, fb_tmp_1034
    unless $I5002 goto if3817_else7691 
    set $P5012, fb_tmp_1034[0]
    set $P5014, $P5012
    goto if3817_end7692
  if3817_else7691:
    null $P5013
    set $P5014, $P5013
  if3817_end7692:
    unless_null $P5014, vivi_38207697
    nqp_get_sc_object $P5015, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5014, $P5015
  vivi_38207697:
    $P5016 = $P5014."ast"()
    set $P101, $P5016
    nqp_get_sc_object $P5019, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5018, $P5019, "QAST"
    get_who $P5017, $P5018
    set fb_tmp_1036, $P5017
    repr_defined $I5005, fb_tmp_1036
    unless $I5005 goto if3823_else7702 
    set $P5020, fb_tmp_1036["Op"]
    set $P5022, $P5020
    goto if3823_end7703
  if3823_else7702:
    null $P5021
    set $P5022, $P5021
  if3823_end7703:
    unless_null $P5022, vivi_38247704
    nqp_get_sc_object $P5023, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5022, $P5023
  vivi_38247704:
    type_check $I5004, $P101, $P5022
    set $I5007, $I5004
    unless $I5004 goto if3822_end7701 
.annotate 'line', 3004
    $P5024 = $P101."name"()
    set $S5001, $P5024
    iseq $I5006, $S5001, "&infix:<,>"
    set $I5007, $I5006
  if3822_end7701:
    box $P5034, $I5007
    set $P5033, $P5034
    if $I5007 goto unless3821_end7699 
.annotate 'line', 3005
    nqp_get_sc_object $P5027, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5026, $P5027, "QAST"
    get_who $P5025, $P5026
    set fb_tmp_1037, $P5025
    repr_defined $I5008, fb_tmp_1037
    unless $I5008 goto if3825_else7705 
    set $P5028, fb_tmp_1037["Op"]
    set $P5030, $P5028
    goto if3825_end7706
  if3825_else7705:
    null $P5029
    set $P5030, $P5029
  if3825_end7706:
    unless_null $P5030, vivi_38267707
    nqp_get_sc_object $P5031, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5030, $P5031
  vivi_38267707:
    $P5032 = $P5030."new"($P101, "list" :named("op"))
    set $P101, $P5032
    set $P5033, $P101
  unless3821_end7699:
    goto if3814_end7686
  if3814_else7685:
.annotate 'line', 3008
.annotate 'line', 3009
    nqp_get_sc_object $P5037, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5036, $P5037, "QAST"
    get_who $P5035, $P5036
    set fb_tmp_1038, $P5035
    repr_defined $I5009, fb_tmp_1038
    unless $I5009 goto if3827_else7708 
    set $P5038, fb_tmp_1038["Op"]
    set $P5040, $P5038
    goto if3827_end7709
  if3827_else7708:
    null $P5039
    set $P5040, $P5039
  if3827_end7709:
    unless_null $P5040, vivi_38287710
    nqp_get_sc_object $P5041, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5040, $P5041
  vivi_38287710:
    $P5042 = $P5040."new"("list" :named("op"))
    set $P101, $P5042
  if3814_end7686:
.annotate 'line', 3011
    $P101."name"("&circumfix:<[ ]>")
.annotate 'line', 3012
    $P5043 = _lex_param_1."!make"($P101)
    .return ($P5043) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<ang>" :subid("cuid_331_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3015
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1039 
    unless_null _lex_param_1, fallback7713
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback7713:
    set fb_tmp_1039, _lex_param_1
    repr_defined $I5001, fb_tmp_1039
    unless $I5001 goto if3829_else7711 
    set $P5002, fb_tmp_1039["quote_EXPR"]
    set $P5004, $P5002
    goto if3829_end7712
  if3829_else7711:
    null $P5003
    set $P5004, $P5003
  if3829_end7712:
    unless_null $P5004, vivi_38307714
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_38307714:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub utf8:"circumfix:sym<\x{ab} \x{bb}>" :subid("cuid_332_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3016
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1040 
    unless_null _lex_param_1, fallback7717
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback7717:
    set fb_tmp_1040, _lex_param_1
    repr_defined $I5001, fb_tmp_1040
    unless $I5001 goto if3831_else7715 
    set $P5002, fb_tmp_1040["quote_EXPR"]
    set $P5004, $P5002
    goto if3831_end7716
  if3831_else7715:
    null $P5003
    set $P5004, $P5003
  if3831_end7716:
    unless_null $P5004, vivi_38327718
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_38327718:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<{ }>" :subid("cuid_333_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3018
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5044 = 'cuid_498_1360432459.413' 
    capture_lex $P5044 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1041 
    .local pmc fb_tmp_1042 
    .local pmc fb_tmp_1043 
    .local pmc fb_tmp_1044 
    .local pmc fb_tmp_1047 
    .local pmc fb_tmp_1048 
    .local pmc fb_tmp_1049 
    .local pmc fb_tmp_1050 
    unless_null _lex_param_1, fallback7729
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback7729:
    set fb_tmp_1044, _lex_param_1
    repr_defined $I5005, fb_tmp_1044
    unless $I5005 goto if3837_else7727 
    set $P5002, fb_tmp_1044["pblock"]
    set $P5004, $P5002
    goto if3837_end7728
  if3837_else7727:
    null $P5003
    set $P5004, $P5003
  if3837_end7728:
    unless_null $P5004, vivi_38387730
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_38387730:
    set fb_tmp_1043, $P5004
    repr_defined $I5004, fb_tmp_1043
    unless $I5004 goto if3836_else7725 
    set $P5006, fb_tmp_1043["blockoid"]
    set $P5008, $P5006
    goto if3836_end7726
  if3836_else7725:
    null $P5007
    set $P5008, $P5007
  if3836_end7726:
    unless_null $P5008, vivi_38397731
    nqp_get_sc_object $P5009, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5008, $P5009
  vivi_38397731:
    set fb_tmp_1042, $P5008
    repr_defined $I5003, fb_tmp_1042
    unless $I5003 goto if3835_else7723 
    set $P5010, fb_tmp_1042["statementlist"]
    set $P5012, $P5010
    goto if3835_end7724
  if3835_else7723:
    null $P5011
    set $P5012, $P5011
  if3835_end7724:
    unless_null $P5012, vivi_38407732
    nqp_get_sc_object $P5013, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5012, $P5013
  vivi_38407732:
    set fb_tmp_1041, $P5012
    repr_defined $I5002, fb_tmp_1041
    unless $I5002 goto if3834_else7721 
    set $P5014, fb_tmp_1041["statement"]
    set $P5016, $P5014
    goto if3834_end7722
  if3834_else7721:
    null $P5015
    set $P5016, $P5015
  if3834_end7722:
    unless_null $P5016, vivi_38417733
    nqp_get_sc_object $P5017, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5016, $P5017
  vivi_38417733:
    set $N5001, $P5016
    set $N5002, 0
    isgt $I5001, $N5001, $N5002
    unless $I5001 goto if3833_else7719 
    .const 'Sub' $P5018 = 'cuid_498_1360432459.413' 
    capture_lex $P5018
    $P5019 = $P5018()
    set $P5043, $P5019
    goto if3833_end7720
  if3833_else7719:
    unless_null _lex_param_1, fallback7749
    nqp_get_sc_object $P5020, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5020
  fallback7749:
    set fb_tmp_1049, _lex_param_1
    repr_defined $I5008, fb_tmp_1049
    unless $I5008 goto if3849_else7747 
    set $P5021, fb_tmp_1049["pblock"]
    set $P5023, $P5021
    goto if3849_end7748
  if3849_else7747:
    null $P5022
    set $P5023, $P5022
  if3849_end7748:
    unless_null $P5023, vivi_38507750
    nqp_get_sc_object $P5024, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5023, $P5024
  vivi_38507750:
    set fb_tmp_1048, $P5023
    repr_defined $I5007, fb_tmp_1048
    unless $I5007 goto if3848_else7745 
    set $P5025, fb_tmp_1048["blockoid"]
    set $P5027, $P5025
    goto if3848_end7746
  if3848_else7745:
    null $P5026
    set $P5027, $P5026
  if3848_end7746:
    unless_null $P5027, vivi_38517751
    nqp_get_sc_object $P5028, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5027, $P5028
  vivi_38517751:
    set fb_tmp_1047, $P5027
    repr_defined $I5006, fb_tmp_1047
    unless $I5006 goto if3847_else7743 
    set $P5029, fb_tmp_1047["you_are_here"]
    set $P5031, $P5029
    goto if3847_end7744
  if3847_else7743:
    null $P5030
    set $P5031, $P5030
  if3847_end7744:
    unless_null $P5031, vivi_38527752
    nqp_get_sc_object $P5032, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5031, $P5032
  vivi_38527752:
    unless $P5031 goto if3846_else7741 
.annotate 'line', 3024
.annotate 'line', 3025
    unless_null _lex_param_1, fallback7755
    nqp_get_sc_object $P5033, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5033
  fallback7755:
    set fb_tmp_1050, _lex_param_1
    repr_defined $I5009, fb_tmp_1050
    unless $I5009 goto if3853_else7753 
    set $P5034, fb_tmp_1050["pblock"]
    set $P5036, $P5034
    goto if3853_end7754
  if3853_else7753:
    null $P5035
    set $P5036, $P5035
  if3853_end7754:
    unless_null $P5036, vivi_38547756
    nqp_get_sc_object $P5037, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5036, $P5037
  vivi_38547756:
    $P5038 = $P5036."ast"()
    $P5039 = _lex_param_1."!make"($P5038)
    set $P5042, $P5039
    goto if3846_end7742
  if3846_else7741:
.annotate 'line', 3027
.annotate 'line', 3028
    $P5040 = "&default_for"("%")
    $P5041 = _lex_param_1."!make"($P5040)
    set $P5042, $P5041
  if3846_end7742:
    set $P5043, $P5042
  if3833_end7720:
    .return ($P5043) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_498_1360432459.413") :anon :lex :outer("cuid_333_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3019
    .lex "$past", $P101 
    .local pmc fb_tmp_1045 
    .local pmc fb_tmp_1046 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
.annotate 'line', 3020
    nqp_get_sc_object $P5004, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5003, $P5004, "QAST"
    get_who $P5002, $P5003
    set fb_tmp_1045, $P5002
    repr_defined $I5001, fb_tmp_1045
    unless $I5001 goto if3842_else7734 
    set $P5005, fb_tmp_1045["Op"]
    set $P5007, $P5005
    goto if3842_end7735
  if3842_else7734:
    null $P5006
    set $P5007, $P5006
  if3842_end7735:
    unless_null $P5007, vivi_38437736
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5007, $P5008
  vivi_38437736:
    find_lex $P5009, "$/"
    unless_null $P5009, fallback7739
    nqp_get_sc_object $P5010, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5009, $P5010
  fallback7739:
    set fb_tmp_1046, $P5009
    repr_defined $I5002, fb_tmp_1046
    unless $I5002 goto if3844_else7737 
    set $P5011, fb_tmp_1046["pblock"]
    set $P5013, $P5011
    goto if3844_end7738
  if3844_else7737:
    null $P5012
    set $P5013, $P5012
  if3844_end7738:
    unless_null $P5013, vivi_38457740
    nqp_get_sc_object $P5014, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5013, $P5014
  vivi_38457740:
    $P5015 = $P5013."ast"()
    $P5016 = $P5007."new"($P5015, "takeclosure" :named("op"))
    set $P101, $P5016
    box $P5017, 1
    set $P101["bareblock"], $P5017
.annotate 'line', 3022
    find_dynamic_lex $P5018, "$/"
    $P5019 = $P5018."!make"($P101)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "semilist" :subid("cuid_334_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3032
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1051 
    unless_null _lex_param_1, fallback7759
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback7759:
    set fb_tmp_1051, _lex_param_1
    repr_defined $I5001, fb_tmp_1051
    unless $I5001 goto if3855_else7757 
    set $P5002, fb_tmp_1051["statement"]
    set $P5004, $P5002
    goto if3855_end7758
  if3855_else7757:
    null $P5003
    set $P5004, $P5003
  if3855_end7758:
    unless_null $P5004, vivi_38567760
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_38567760:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<[ ]>" :subid("cuid_335_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3034
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1052 
    .local pmc fb_tmp_1053 
.annotate 'line', 3035
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5002, $P5003, "QAST"
    get_who $P5001, $P5002
    set fb_tmp_1052, $P5001
    repr_defined $I5001, fb_tmp_1052
    unless $I5001 goto if3857_else7761 
    set $P5004, fb_tmp_1052["VarWithFallback"]
    set $P5006, $P5004
    goto if3857_end7762
  if3857_else7761:
    null $P5005
    set $P5006, $P5005
  if3857_end7762:
    unless_null $P5006, vivi_38587763
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_38587763:
    unless_null _lex_param_1, fallback7766
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5008
  fallback7766:
    set fb_tmp_1053, _lex_param_1
    repr_defined $I5002, fb_tmp_1053
    unless $I5002 goto if3859_else7764 
    set $P5009, fb_tmp_1053["EXPR"]
    set $P5011, $P5009
    goto if3859_end7765
  if3859_else7764:
    null $P5010
    set $P5011, $P5010
  if3859_end7765:
    unless_null $P5011, vivi_38607767
    nqp_get_sc_object $P5012, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5011, $P5012
  vivi_38607767:
    $P5013 = $P5011."ast"()
    $P5014 = "&default_for"("$")
    $P5015 = $P5006."new"($P5013, "positional" :named("scope"), $P5014 :named("fallback"))
    $P5016 = _lex_param_1."!make"($P5015)
    .return ($P5016) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<{ }>" :subid("cuid_336_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3038
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1054 
    .local pmc fb_tmp_1055 
.annotate 'line', 3039
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5002, $P5003, "QAST"
    get_who $P5001, $P5002
    set fb_tmp_1054, $P5001
    repr_defined $I5001, fb_tmp_1054
    unless $I5001 goto if3861_else7768 
    set $P5004, fb_tmp_1054["VarWithFallback"]
    set $P5006, $P5004
    goto if3861_end7769
  if3861_else7768:
    null $P5005
    set $P5006, $P5005
  if3861_end7769:
    unless_null $P5006, vivi_38627770
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_38627770:
    unless_null _lex_param_1, fallback7773
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5008
  fallback7773:
    set fb_tmp_1055, _lex_param_1
    repr_defined $I5002, fb_tmp_1055
    unless $I5002 goto if3863_else7771 
    set $P5009, fb_tmp_1055["EXPR"]
    set $P5011, $P5009
    goto if3863_end7772
  if3863_else7771:
    null $P5010
    set $P5011, $P5010
  if3863_end7772:
    unless_null $P5011, vivi_38647774
    nqp_get_sc_object $P5012, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5011, $P5012
  vivi_38647774:
    $P5013 = $P5011."ast"()
    $P5014 = "&default_for"("$")
    $P5015 = $P5006."new"($P5013, "associative" :named("scope"), $P5014 :named("fallback"))
    $P5016 = _lex_param_1."!make"($P5015)
    .return ($P5016) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<ang>" :subid("cuid_337_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3042
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1056 
    .local pmc fb_tmp_1057 
.annotate 'line', 3043
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5002, $P5003, "QAST"
    get_who $P5001, $P5002
    set fb_tmp_1056, $P5001
    repr_defined $I5001, fb_tmp_1056
    unless $I5001 goto if3865_else7775 
    set $P5004, fb_tmp_1056["VarWithFallback"]
    set $P5006, $P5004
    goto if3865_end7776
  if3865_else7775:
    null $P5005
    set $P5006, $P5005
  if3865_end7776:
    unless_null $P5006, vivi_38667777
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_38667777:
    unless_null _lex_param_1, fallback7780
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5008
  fallback7780:
    set fb_tmp_1057, _lex_param_1
    repr_defined $I5002, fb_tmp_1057
    unless $I5002 goto if3867_else7778 
    set $P5009, fb_tmp_1057["quote_EXPR"]
    set $P5011, $P5009
    goto if3867_end7779
  if3867_else7778:
    null $P5010
    set $P5011, $P5010
  if3867_end7779:
    unless_null $P5011, vivi_38687781
    nqp_get_sc_object $P5012, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5011, $P5012
  vivi_38687781:
    $P5013 = $P5011."ast"()
    $P5014 = "&default_for"("$")
    $P5015 = $P5006."new"($P5013, "associative" :named("scope"), $P5014 :named("fallback"))
    $P5016 = _lex_param_1."!make"($P5015)
    .return ($P5016) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<( )>" :subid("cuid_338_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3046
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1058 
.annotate 'line', 3047
    unless_null _lex_param_1, fallback7784
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback7784:
    set fb_tmp_1058, _lex_param_1
    repr_defined $I5001, fb_tmp_1058
    unless $I5001 goto if3869_else7782 
    set $P5002, fb_tmp_1058["arglist"]
    set $P5004, $P5002
    goto if3869_end7783
  if3869_else7782:
    null $P5003
    set $P5004, $P5003
  if3869_end7783:
    unless_null $P5004, vivi_38707785
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_38707785:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "value" :subid("cuid_339_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3050
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1059 
    .local pmc fb_tmp_1060 
    .local pmc fb_tmp_1061 
.annotate 'line', 3051
    unless_null _lex_param_1, fallback7790
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback7790:
    set fb_tmp_1059, _lex_param_1
    repr_defined $I5001, fb_tmp_1059
    unless $I5001 goto if3872_else7788 
    set $P5002, fb_tmp_1059["quote"]
    set $P5004, $P5002
    goto if3872_end7789
  if3872_else7788:
    null $P5003
    set $P5004, $P5003
  if3872_end7789:
    unless_null $P5004, vivi_38737791
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_38737791:
    unless $P5004 goto if3871_else7786 
    unless_null _lex_param_1, fallback7794
    nqp_get_sc_object $P5006, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5006
  fallback7794:
    set fb_tmp_1060, _lex_param_1
    repr_defined $I5002, fb_tmp_1060
    unless $I5002 goto if3874_else7792 
    set $P5007, fb_tmp_1060["quote"]
    set $P5009, $P5007
    goto if3874_end7793
  if3874_else7792:
    null $P5008
    set $P5009, $P5008
  if3874_end7793:
    unless_null $P5009, vivi_38757795
    nqp_get_sc_object $P5010, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5009, $P5010
  vivi_38757795:
    $P5011 = $P5009."ast"()
    set $P5018, $P5011
    goto if3871_end7787
  if3871_else7786:
    unless_null _lex_param_1, fallback7798
    nqp_get_sc_object $P5012, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5012
  fallback7798:
    set fb_tmp_1061, _lex_param_1
    repr_defined $I5003, fb_tmp_1061
    unless $I5003 goto if3876_else7796 
    set $P5013, fb_tmp_1061["number"]
    set $P5015, $P5013
    goto if3876_end7797
  if3876_else7796:
    null $P5014
    set $P5015, $P5014
  if3876_end7797:
    unless_null $P5015, vivi_38777799
    nqp_get_sc_object $P5016, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5015, $P5016
  vivi_38777799:
    $P5017 = $P5015."ast"()
    set $P5018, $P5017
  if3871_end7787:
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "number" :subid("cuid_340_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3054
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$value", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1062 
    .local pmc fb_tmp_1063 
    .local pmc fb_tmp_1064 
    .local pmc fb_tmp_1065 
    .local pmc fb_tmp_1066 
    .local pmc fb_tmp_1067 
    .local pmc fb_tmp_1068 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    unless_null _lex_param_1, fallback7804
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5002
  fallback7804:
    set fb_tmp_1062, _lex_param_1
    repr_defined $I5001, fb_tmp_1062
    unless $I5001 goto if3879_else7802 
    set $P5003, fb_tmp_1062["dec_number"]
    set $P5005, $P5003
    goto if3879_end7803
  if3879_else7802:
    null $P5004
    set $P5005, $P5004
  if3879_end7803:
    unless_null $P5005, vivi_38807805
    nqp_get_sc_object $P5006, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5005, $P5006
  vivi_38807805:
    unless $P5005 goto if3878_else7800 
.annotate 'line', 3055
    unless_null _lex_param_1, fallback7808
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5007
  fallback7808:
    set fb_tmp_1063, _lex_param_1
    repr_defined $I5002, fb_tmp_1063
    unless $I5002 goto if3881_else7806 
    set $P5008, fb_tmp_1063["dec_number"]
    set $P5010, $P5008
    goto if3881_end7807
  if3881_else7806:
    null $P5009
    set $P5010, $P5009
  if3881_end7807:
    unless_null $P5010, vivi_38827809
    nqp_get_sc_object $P5011, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5010, $P5011
  vivi_38827809:
    $P5012 = $P5010."ast"()
    set $P5019, $P5012
    goto if3878_end7801
  if3878_else7800:
    unless_null _lex_param_1, fallback7812
    nqp_get_sc_object $P5013, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5013
  fallback7812:
    set fb_tmp_1064, _lex_param_1
    repr_defined $I5003, fb_tmp_1064
    unless $I5003 goto if3883_else7810 
    set $P5014, fb_tmp_1064["integer"]
    set $P5016, $P5014
    goto if3883_end7811
  if3883_else7810:
    null $P5015
    set $P5016, $P5015
  if3883_end7811:
    unless_null $P5016, vivi_38847813
    nqp_get_sc_object $P5017, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5016, $P5017
  vivi_38847813:
    $P5018 = $P5016."ast"()
    set $P5019, $P5018
  if3878_end7801:
    set $P101, $P5019
    unless_null _lex_param_1, fallback7818
    nqp_get_sc_object $P5020, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5020
  fallback7818:
    set fb_tmp_1065, _lex_param_1
    repr_defined $I5005, fb_tmp_1065
    unless $I5005 goto if3886_else7816 
    set $P5021, fb_tmp_1065["sign"]
    set $P5023, $P5021
    goto if3886_end7817
  if3886_else7816:
    null $P5022
    set $P5023, $P5022
  if3886_end7817:
    unless_null $P5023, vivi_38877819
    nqp_get_sc_object $P5024, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5023, $P5024
  vivi_38877819:
    set $S5001, $P5023
    iseq $I5004, $S5001, "-"
    unless $I5004 goto if3885_end7815 
.annotate 'line', 3056
    set $N5002, $P101
    neg $N5001, $N5002
    box $P5025, $N5001
    set $P101, $P5025
  if3885_end7815:
.annotate 'line', 3057
    unless_null _lex_param_1, fallback7824
    nqp_get_sc_object $P5026, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5026
  fallback7824:
    set fb_tmp_1066, _lex_param_1
    repr_defined $I5006, fb_tmp_1066
    unless $I5006 goto if3889_else7822 
    set $P5027, fb_tmp_1066["dec_number"]
    set $P5029, $P5027
    goto if3889_end7823
  if3889_else7822:
    null $P5028
    set $P5029, $P5028
  if3889_end7823:
    unless_null $P5029, vivi_38907825
    nqp_get_sc_object $P5030, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5029, $P5030
  vivi_38907825:
    unless $P5029 goto if3888_else7820 
.annotate 'line', 3058
    nqp_get_sc_object $P5033, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5032, $P5033, "QAST"
    get_who $P5031, $P5032
    set fb_tmp_1067, $P5031
    repr_defined $I5007, fb_tmp_1067
    unless $I5007 goto if3891_else7826 
    set $P5034, fb_tmp_1067["NVal"]
    set $P5036, $P5034
    goto if3891_end7827
  if3891_else7826:
    null $P5035
    set $P5036, $P5035
  if3891_end7827:
    unless_null $P5036, vivi_38927828
    nqp_get_sc_object $P5037, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5036, $P5037
  vivi_38927828:
    $P5038 = $P5036."new"($P101 :named("value"))
    set $P5047, $P5038
    goto if3888_end7821
  if3888_else7820:
.annotate 'line', 3059
    nqp_get_sc_object $P5041, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5040, $P5041, "QAST"
    get_who $P5039, $P5040
    set fb_tmp_1068, $P5039
    repr_defined $I5008, fb_tmp_1068
    unless $I5008 goto if3893_else7829 
    set $P5042, fb_tmp_1068["IVal"]
    set $P5044, $P5042
    goto if3893_end7830
  if3893_else7829:
    null $P5043
    set $P5044, $P5043
  if3893_end7830:
    unless_null $P5044, vivi_38947831
    nqp_get_sc_object $P5045, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5044, $P5045
  vivi_38947831:
    $P5046 = $P5044."new"($P101 :named("value"))
    set $P5047, $P5046
  if3888_end7821:
    $P5048 = _lex_param_1."!make"($P5047)
    .return ($P5048) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<apos>" :subid("cuid_341_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3062
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1069 
    unless_null _lex_param_1, fallback7834
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback7834:
    set fb_tmp_1069, _lex_param_1
    repr_defined $I5001, fb_tmp_1069
    unless $I5001 goto if3895_else7832 
    set $P5002, fb_tmp_1069["quote_EXPR"]
    set $P5004, $P5002
    goto if3895_end7833
  if3895_else7832:
    null $P5003
    set $P5004, $P5003
  if3895_end7833:
    unless_null $P5004, vivi_38967835
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_38967835:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<dblq>" :subid("cuid_342_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3063
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1070 
    unless_null _lex_param_1, fallback7838
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback7838:
    set fb_tmp_1070, _lex_param_1
    repr_defined $I5001, fb_tmp_1070
    unless $I5001 goto if3897_else7836 
    set $P5002, fb_tmp_1070["quote_EXPR"]
    set $P5004, $P5002
    goto if3897_end7837
  if3897_else7836:
    null $P5003
    set $P5004, $P5003
  if3897_end7837:
    unless_null $P5004, vivi_38987839
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_38987839:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<qq>" :subid("cuid_343_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3064
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1071 
    unless_null _lex_param_1, fallback7842
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback7842:
    set fb_tmp_1071, _lex_param_1
    repr_defined $I5001, fb_tmp_1071
    unless $I5001 goto if3899_else7840 
    set $P5002, fb_tmp_1071["quote_EXPR"]
    set $P5004, $P5002
    goto if3899_end7841
  if3899_else7840:
    null $P5003
    set $P5004, $P5003
  if3899_end7841:
    unless_null $P5004, vivi_39007843
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_39007843:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<q>" :subid("cuid_344_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3065
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1072 
    unless_null _lex_param_1, fallback7846
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback7846:
    set fb_tmp_1072, _lex_param_1
    repr_defined $I5001, fb_tmp_1072
    unless $I5001 goto if3901_else7844 
    set $P5002, fb_tmp_1072["quote_EXPR"]
    set $P5004, $P5002
    goto if3901_end7845
  if3901_else7844:
    null $P5003
    set $P5004, $P5003
  if3901_end7845:
    unless_null $P5004, vivi_39027847
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_39027847:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<Q>" :subid("cuid_345_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3066
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1073 
    unless_null _lex_param_1, fallback7850
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback7850:
    set fb_tmp_1073, _lex_param_1
    repr_defined $I5001, fb_tmp_1073
    unless $I5001 goto if3903_else7848 
    set $P5002, fb_tmp_1073["quote_EXPR"]
    set $P5004, $P5002
    goto if3903_end7849
  if3903_else7848:
    null $P5003
    set $P5004, $P5003
  if3903_end7849:
    unless_null $P5004, vivi_39047851
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_39047851:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<Q:PIR>" :subid("cuid_346_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3067
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1074 
    .local pmc fb_tmp_1075 
.annotate 'line', 3068
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5002, $P5003, "QAST"
    get_who $P5001, $P5002
    set fb_tmp_1074, $P5001
    repr_defined $I5001, fb_tmp_1074
    unless $I5001 goto if3905_else7852 
    set $P5004, fb_tmp_1074["VM"]
    set $P5006, $P5004
    goto if3905_end7853
  if3905_else7852:
    null $P5005
    set $P5006, $P5005
  if3905_end7853:
    unless_null $P5006, vivi_39067854
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_39067854:
    unless_null _lex_param_1, fallback7857
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5008
  fallback7857:
    set fb_tmp_1075, _lex_param_1
    repr_defined $I5002, fb_tmp_1075
    unless $I5002 goto if3907_else7855 
    set $P5009, fb_tmp_1075["quote_EXPR"]
    set $P5011, $P5009
    goto if3907_end7856
  if3907_else7855:
    null $P5010
    set $P5011, $P5010
  if3907_end7856:
    unless_null $P5011, vivi_39087858
    nqp_get_sc_object $P5012, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5011, $P5012
  vivi_39087858:
    $P5013 = $P5011."ast"()
    $P5014 = $P5013."value"()
    $P5015 = $P5006."new"($P5014 :named("pir"), _lex_param_1 :named("node"))
    $P5016 = _lex_param_1."!make"($P5015)
    .return ($P5016) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym</ />" :subid("cuid_347_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3071
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$block", $P101 
    .lex "$regex", $P102 
    .lex "$past", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1076 
    .local pmc fb_tmp_1077 
    .local pmc fb_tmp_1078 
    .local pmc fb_tmp_1079 
    .local pmc fb_tmp_1080 
    .local pmc fb_tmp_1081 
    .local pmc fb_tmp_1082 
    .local pmc fb_tmp_1083 
    .local pmc fb_tmp_1084 
    .local pmc fb_tmp_1085 
    .local pmc fb_tmp_1086 
    .local pmc fb_tmp_1087 
    .local pmc fb_tmp_1088 
    .local pmc fb_tmp_1089 
    .local pmc fb_tmp_1090 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P103, $P5003
.annotate 'line', 3072
    find_dynamic_lex $P5004, "$*W"
    unless_null $P5004, fallback7859
    nqp_get_sc_object $P5006, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5005, $P5006
    set fb_tmp_1076, $P5005
    repr_defined $I5001, fb_tmp_1076
    unless $I5001 goto if3909_else7860 
    set $P5007, fb_tmp_1076["$W"]
    set $P5009, $P5007
    goto if3909_end7861
  if3909_else7860:
    null $P5008
    set $P5009, $P5008
  if3909_end7861:
    unless_null $P5009, vivi_39107862
    nqp_get_sc_object $P5010, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5009, $P5010
  vivi_39107862:
    unless_null $P5009, vivi_39117863
    die "Contextual $*W not found"
    box $P5011, "Contextual $*W not found"
    set $P5009, $P5011
  vivi_39117863:
    set $P5004, $P5009
  fallback7859:
    $P5012 = $P5004."pop_lexpad"()
    set $P101, $P5012
.annotate 'line', 3073
    set fb_tmp_1077, $P101
    repr_defined $I5002, fb_tmp_1077
    unless $I5002 goto if3912_else7864 
    set $P5013, fb_tmp_1077[0]
    set $P5015, $P5013
    goto if3912_end7865
  if3912_else7864:
    null $P5014
    set $P5015, $P5014
  if3912_end7865:
    unless_null $P5015, vivi_39137866
    nqp_get_sc_object $P5016, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5015, $P5016
  vivi_39137866:
    nqp_get_sc_object $P5019, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5018, $P5019, "QAST"
    get_who $P5017, $P5018
    set fb_tmp_1078, $P5017
    repr_defined $I5003, fb_tmp_1078
    unless $I5003 goto if3914_else7867 
    set $P5020, fb_tmp_1078["Var"]
    set $P5022, $P5020
    goto if3914_end7868
  if3914_else7867:
    null $P5021
    set $P5022, $P5021
  if3914_end7868:
    unless_null $P5022, vivi_39157869
    nqp_get_sc_object $P5023, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5022, $P5023
  vivi_39157869:
    $P5024 = $P5022."new"("self" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    $P5015."push"($P5024)
.annotate 'line', 3074
    set fb_tmp_1079, $P101
    repr_defined $I5004, fb_tmp_1079
    unless $I5004 goto if3916_else7870 
    set $P5025, fb_tmp_1079[0]
    set $P5027, $P5025
    goto if3916_end7871
  if3916_else7870:
    null $P5026
    set $P5027, $P5026
  if3916_end7871:
    unless_null $P5027, vivi_39177872
    nqp_get_sc_object $P5028, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5027, $P5028
  vivi_39177872:
    nqp_get_sc_object $P5031, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5030, $P5031, "QAST"
    get_who $P5029, $P5030
    set fb_tmp_1080, $P5029
    repr_defined $I5005, fb_tmp_1080
    unless $I5005 goto if3918_else7873 
    set $P5032, fb_tmp_1080["Op"]
    set $P5034, $P5032
    goto if3918_end7874
  if3918_else7873:
    null $P5033
    set $P5034, $P5033
  if3918_end7874:
    unless_null $P5034, vivi_39197875
    nqp_get_sc_object $P5035, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5034, $P5035
  vivi_39197875:
.annotate 'line', 3076
    nqp_get_sc_object $P5038, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5037, $P5038, "QAST"
    get_who $P5036, $P5037
    set fb_tmp_1081, $P5036
    repr_defined $I5006, fb_tmp_1081
    unless $I5006 goto if3920_else7876 
    set $P5039, fb_tmp_1081["Var"]
    set $P5041, $P5039
    goto if3920_end7877
  if3920_else7876:
    null $P5040
    set $P5041, $P5040
  if3920_end7877:
    unless_null $P5041, vivi_39217878
    nqp_get_sc_object $P5042, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5041, $P5042
  vivi_39217878:
    $P5043 = $P5041."new"("self" :named("name"), "local" :named("scope"), "var" :named("decl"))
.annotate 'line', 3077
    nqp_get_sc_object $P5046, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5045, $P5046, "QAST"
    get_who $P5044, $P5045
    set fb_tmp_1082, $P5044
    repr_defined $I5007, fb_tmp_1082
    unless $I5007 goto if3922_else7879 
    set $P5047, fb_tmp_1082["Var"]
    set $P5049, $P5047
    goto if3922_end7880
  if3922_else7879:
    null $P5048
    set $P5049, $P5048
  if3922_end7880:
    unless_null $P5049, vivi_39237881
    nqp_get_sc_object $P5050, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5049, $P5050
  vivi_39237881:
    $P5051 = $P5049."new"("self" :named("name"), "lexical" :named("scope"))
    $P5052 = $P5034."new"($P5043, $P5051, "bind" :named("op"))
    $P5027."push"($P5052)
.annotate 'line', 3078
    set fb_tmp_1083, $P101
    repr_defined $I5008, fb_tmp_1083
    unless $I5008 goto if3924_else7882 
    set $P5053, fb_tmp_1083[0]
    set $P5055, $P5053
    goto if3924_end7883
  if3924_else7882:
    null $P5054
    set $P5055, $P5054
  if3924_end7883:
    unless_null $P5055, vivi_39257884
    nqp_get_sc_object $P5056, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5055, $P5056
  vivi_39257884:
    nqp_get_sc_object $P5059, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5058, $P5059, "QAST"
    get_who $P5057, $P5058
    set fb_tmp_1084, $P5057
    repr_defined $I5009, fb_tmp_1084
    unless $I5009 goto if3926_else7885 
    set $P5060, fb_tmp_1084["Var"]
    set $P5062, $P5060
    goto if3926_end7886
  if3926_else7885:
    null $P5061
    set $P5062, $P5061
  if3926_end7886:
    unless_null $P5062, vivi_39277887
    nqp_get_sc_object $P5063, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5062, $P5063
  vivi_39277887:
    $P5064 = $P5062."new"(utf8:"$\x{a2}" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    $P5055."push"($P5064)
.annotate 'line', 3079
    set fb_tmp_1085, $P101
    repr_defined $I5010, fb_tmp_1085
    unless $I5010 goto if3928_else7888 
    set $P5065, fb_tmp_1085[0]
    set $P5067, $P5065
    goto if3928_end7889
  if3928_else7888:
    null $P5066
    set $P5067, $P5066
  if3928_end7889:
    unless_null $P5067, vivi_39297890
    nqp_get_sc_object $P5068, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5067, $P5068
  vivi_39297890:
    nqp_get_sc_object $P5071, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5070, $P5071, "QAST"
    get_who $P5069, $P5070
    set fb_tmp_1086, $P5069
    repr_defined $I5011, fb_tmp_1086
    unless $I5011 goto if3930_else7891 
    set $P5072, fb_tmp_1086["Var"]
    set $P5074, $P5072
    goto if3930_end7892
  if3930_else7891:
    null $P5073
    set $P5074, $P5073
  if3930_end7892:
    unless_null $P5074, vivi_39317893
    nqp_get_sc_object $P5075, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5074, $P5075
  vivi_39317893:
    $P5076 = $P5074."new"("$/" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    $P5067."push"($P5076)
.annotate 'line', 3080
    $P101."symbol"(utf8:"$\x{a2}", "lexical" :named("scope"))
.annotate 'line', 3081
    $P101."symbol"("$/", "lexical" :named("scope"))
.annotate 'line', 3083
    find_dynamic_lex $P5077, "%*LANG"
    unless_null $P5077, fallback7896
    nqp_get_sc_object $P5079, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5078, $P5079
    set fb_tmp_1088, $P5078
    repr_defined $I5013, fb_tmp_1088
    unless $I5013 goto if3933_else7897 
    set $P5080, fb_tmp_1088["%LANG"]
    set $P5082, $P5080
    goto if3933_end7898
  if3933_else7897:
    null $P5081
    set $P5082, $P5081
  if3933_end7898:
    unless_null $P5082, vivi_39347899
    nqp_get_sc_object $P5084, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5083, $P5084
    new $P5085, 'Hash'
    set $P5083["%LANG"], $P5085
    set $P5082, $P5085
  vivi_39347899:
    unless_null $P5082, vivi_39357900
    die "Contextual %*LANG not found"
    box $P5086, "Contextual %*LANG not found"
    set $P5082, $P5086
  vivi_39357900:
    set $P5077, $P5082
  fallback7896:
    set fb_tmp_1087, $P5077
    repr_defined $I5012, fb_tmp_1087
    unless $I5012 goto if3932_else7894 
    set $P5087, fb_tmp_1087["Regex-actions"]
    set $P5089, $P5087
    goto if3932_end7895
  if3932_else7894:
    null $P5088
    set $P5089, $P5088
  if3932_end7895:
    unless_null $P5089, vivi_39367901
    nqp_get_sc_object $P5090, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5089, $P5090
  vivi_39367901:
    unless_null _lex_param_1, fallback7904
    nqp_get_sc_object $P5091, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5091
  fallback7904:
    set fb_tmp_1089, _lex_param_1
    repr_defined $I5014, fb_tmp_1089
    unless $I5014 goto if3937_else7902 
    set $P5092, fb_tmp_1089["p6regex"]
    set $P5094, $P5092
    goto if3937_end7903
  if3937_else7902:
    null $P5093
    set $P5094, $P5093
  if3937_end7903:
    unless_null $P5094, vivi_39387905
    nqp_get_sc_object $P5095, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5094, $P5095
  vivi_39387905:
    $P5096 = $P5094."ast"()
    $P5097 = $P5089."qbuildsub"($P5096, $P101)
    set $P102, $P5097
.annotate 'line', 3084
    nqp_get_sc_object $P5100, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5099, $P5100, "QAST"
    get_who $P5098, $P5099
    set fb_tmp_1090, $P5098
    repr_defined $I5015, fb_tmp_1090
    unless $I5015 goto if3939_else7906 
    set $P5101, fb_tmp_1090["Op"]
    set $P5103, $P5101
    goto if3939_end7907
  if3939_else7906:
    null $P5102
    set $P5103, $P5102
  if3939_end7907:
    unless_null $P5103, vivi_39407908
    nqp_get_sc_object $P5104, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5103, $P5104
  vivi_39407908:
.annotate 'line', 3086
    new $P5105, 'ResizablePMCArray'
    box $P5106, "NQPRegex"
    push $P5105, $P5106
    $P5107 = "&lexical_package_lookup"($P5105, _lex_param_1)
    $P5108 = $P5103."new"($P5107, $P102, "callmethod" :named("op"), "new" :named("name"))
    set $P103, $P5108
    set $P103["sink"], $P102
.annotate 'line', 3091
    $P5109 = _lex_param_1."!make"($P103)
    .return ($P5109) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<$>" :subid("cuid_348_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3094
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1091 
    unless_null _lex_param_1, fallback7911
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback7911:
    set fb_tmp_1091, _lex_param_1
    repr_defined $I5001, fb_tmp_1091
    unless $I5001 goto if3941_else7909 
    set $P5002, fb_tmp_1091["variable"]
    set $P5004, $P5002
    goto if3941_end7910
  if3941_else7909:
    null $P5003
    set $P5004, $P5003
  if3941_end7910:
    unless_null $P5004, vivi_39427912
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_39427912:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<{ }>" :subid("cuid_349_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3095
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1092 
    .local pmc fb_tmp_1093 
.annotate 'line', 3096
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5002, $P5003, "QAST"
    get_who $P5001, $P5002
    set fb_tmp_1092, $P5001
    repr_defined $I5001, fb_tmp_1092
    unless $I5001 goto if3943_else7913 
    set $P5004, fb_tmp_1092["Op"]
    set $P5006, $P5004
    goto if3943_end7914
  if3943_else7913:
    null $P5005
    set $P5006, $P5005
  if3943_end7914:
    unless_null $P5006, vivi_39447915
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_39447915:
.annotate 'line', 3097
    unless_null _lex_param_1, fallback7918
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5008
  fallback7918:
    set fb_tmp_1093, _lex_param_1
    repr_defined $I5002, fb_tmp_1093
    unless $I5002 goto if3945_else7916 
    set $P5009, fb_tmp_1093["block"]
    set $P5011, $P5009
    goto if3945_end7917
  if3945_else7916:
    null $P5010
    set $P5011, $P5010
  if3945_end7917:
    unless_null $P5011, vivi_39467919
    nqp_get_sc_object $P5012, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5011, $P5012
  vivi_39467919:
    $P5013 = $P5011."ast"()
    $P5014 = "&block_immediate"($P5013)
    $P5015 = $P5006."new"($P5014, "stringify" :named("op"), _lex_param_1 :named("node"))
    $P5016 = _lex_param_1."!make"($P5015)
    .return ($P5016) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<esc>" :subid("cuid_350_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3100
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    $P5001 = _lex_param_1."!make"("\e")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "postfix:sym<.>" :subid("cuid_351_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3104
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1094 
    unless_null _lex_param_1, fallback7922
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback7922:
    set fb_tmp_1094, _lex_param_1
    repr_defined $I5001, fb_tmp_1094
    unless $I5001 goto if3947_else7920 
    set $P5002, fb_tmp_1094["dotty"]
    set $P5004, $P5002
    goto if3947_end7921
  if3947_else7920:
    null $P5003
    set $P5004, $P5003
  if3947_end7921:
    unless_null $P5004, vivi_39487923
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_39487923:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<return>" :subid("cuid_352_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3106
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1095 
    .local pmc fb_tmp_1096 
.annotate 'line', 3107
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5002, $P5003, "QAST"
    get_who $P5001, $P5002
    set fb_tmp_1095, $P5001
    repr_defined $I5001, fb_tmp_1095
    unless $I5001 goto if3949_else7924 
    set $P5004, fb_tmp_1095["Op"]
    set $P5006, $P5004
    goto if3949_end7925
  if3949_else7924:
    null $P5005
    set $P5006, $P5005
  if3949_end7925:
    unless_null $P5006, vivi_39507926
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_39507926:
.annotate 'line', 3109
    nqp_get_sc_object $P5010, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5009, $P5010, "QAST"
    get_who $P5008, $P5009
    set fb_tmp_1096, $P5008
    repr_defined $I5002, fb_tmp_1096
    unless $I5002 goto if3951_else7927 
    set $P5011, fb_tmp_1096["Var"]
    set $P5013, $P5011
    goto if3951_end7928
  if3951_else7927:
    null $P5012
    set $P5013, $P5012
  if3951_end7928:
    unless_null $P5013, vivi_39527929
    nqp_get_sc_object $P5014, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5013, $P5014
  vivi_39527929:
    $P5015 = $P5013."new"("RETURN" :named("name"), "lexical" :named("scope"))
    $P5016 = $P5006."new"($P5015, "call" :named("op"))
    $P5017 = _lex_param_1."!make"($P5016)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<make>" :subid("cuid_353_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3113
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1097 
    .local pmc fb_tmp_1098 
.annotate 'line', 3114
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5002, $P5003, "QAST"
    get_who $P5001, $P5002
    set fb_tmp_1097, $P5001
    repr_defined $I5001, fb_tmp_1097
    unless $I5001 goto if3953_else7930 
    set $P5004, fb_tmp_1097["Op"]
    set $P5006, $P5004
    goto if3953_end7931
  if3953_else7930:
    null $P5005
    set $P5006, $P5005
  if3953_end7931:
    unless_null $P5006, vivi_39547932
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_39547932:
.annotate 'line', 3115
    nqp_get_sc_object $P5010, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5009, $P5010, "QAST"
    get_who $P5008, $P5009
    set fb_tmp_1098, $P5008
    repr_defined $I5002, fb_tmp_1098
    unless $I5002 goto if3955_else7933 
    set $P5011, fb_tmp_1098["Var"]
    set $P5013, $P5011
    goto if3955_end7934
  if3955_else7933:
    null $P5012
    set $P5013, $P5012
  if3955_end7934:
    unless_null $P5013, vivi_39567935
    nqp_get_sc_object $P5014, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5013, $P5014
  vivi_39567935:
    $P5015 = $P5013."new"("$/" :named("name"), "contextual" :named("scope"))
    $P5016 = $P5006."new"($P5015, "callmethod" :named("op"), "!make" :named("name"), _lex_param_1 :named("node"))
    $P5017 = _lex_param_1."!make"($P5016)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<next>" :subid("cuid_354_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3122
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1099 
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5002, $P5003, "QAST"
    get_who $P5001, $P5002
    set fb_tmp_1099, $P5001
    repr_defined $I5001, fb_tmp_1099
    unless $I5001 goto if3957_else7936 
    set $P5004, fb_tmp_1099["Op"]
    set $P5006, $P5004
    goto if3957_end7937
  if3957_else7936:
    null $P5005
    set $P5006, $P5005
  if3957_end7937:
    unless_null $P5006, vivi_39587938
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_39587938:
    $P5008 = $P5006."new"("control" :named("op"), "next" :named("name"))
    $P5009 = _lex_param_1."!make"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<last>" :subid("cuid_355_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3123
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1100 
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5002, $P5003, "QAST"
    get_who $P5001, $P5002
    set fb_tmp_1100, $P5001
    repr_defined $I5001, fb_tmp_1100
    unless $I5001 goto if3959_else7939 
    set $P5004, fb_tmp_1100["Op"]
    set $P5006, $P5004
    goto if3959_end7940
  if3959_else7939:
    null $P5005
    set $P5006, $P5005
  if3959_end7940:
    unless_null $P5006, vivi_39607941
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_39607941:
    $P5008 = $P5006."new"("control" :named("op"), "last" :named("name"))
    $P5009 = _lex_param_1."!make"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<redo>" :subid("cuid_356_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3124
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1101 
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5002, $P5003, "QAST"
    get_who $P5001, $P5002
    set fb_tmp_1101, $P5001
    repr_defined $I5001, fb_tmp_1101
    unless $I5001 goto if3961_else7942 
    set $P5004, fb_tmp_1101["Op"]
    set $P5006, $P5004
    goto if3961_end7943
  if3961_else7942:
    null $P5005
    set $P5006, $P5005
  if3961_end7943:
    unless_null $P5006, vivi_39627944
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_39627944:
    $P5008 = $P5006."new"("control" :named("op"), "redo" :named("name"))
    $P5009 = _lex_param_1."!make"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<~~>" :subid("cuid_357_1360432459.413") :anon :lex :outer("cuid_424_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3126
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1102 
.annotate 'line', 3127
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5002, $P5003, "QAST"
    get_who $P5001, $P5002
    set fb_tmp_1102, $P5001
    repr_defined $I5001, fb_tmp_1102
    unless $I5001 goto if3963_else7945 
    set $P5004, fb_tmp_1102["Op"]
    set $P5006, $P5004
    goto if3963_end7946
  if3963_else7945:
    null $P5005
    set $P5006, $P5005
  if3963_end7946:
    unless_null $P5006, vivi_39647947
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_39647947:
    $P5008 = $P5006."new"("callmethod" :named("op"), "ACCEPTS" :named("name"), _lex_param_1 :named("node"))
    $P5009 = _lex_param_1."!make"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_499_1360432459.413") :anon :lex :outer("cuid_372_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3208
    .const 'Sub' $P5014 = 'cuid_358_1360432459.413' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_359_1360432459.413' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_360_1360432459.413' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_361_1360432459.413' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_362_1360432459.413' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_363_1360432459.413' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_364_1360432459.413' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_365_1360432459.413' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_366_1360432459.413' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_367_1360432459.413' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_368_1360432459.413' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_369_1360432459.413' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_370_1360432459.413' 
    capture_lex $P5014 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .const 'Sub' $P5001 = 'cuid_358_1360432459.413' 
    capture_lex $P5001
    .const 'Sub' $P5002 = 'cuid_359_1360432459.413' 
    capture_lex $P5002
    .const 'Sub' $P5003 = 'cuid_360_1360432459.413' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_361_1360432459.413' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_362_1360432459.413' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_363_1360432459.413' 
    capture_lex $P5006
    .const 'Sub' $P5007 = 'cuid_364_1360432459.413' 
    capture_lex $P5007
    .const 'Sub' $P5008 = 'cuid_365_1360432459.413' 
    capture_lex $P5008
    .const 'Sub' $P5009 = 'cuid_366_1360432459.413' 
    capture_lex $P5009
    .const 'Sub' $P5010 = 'cuid_367_1360432459.413' 
    capture_lex $P5010
    .const 'Sub' $P5011 = 'cuid_368_1360432459.413' 
    capture_lex $P5011
    .const 'Sub' $P5012 = 'cuid_369_1360432459.413' 
    capture_lex $P5012
    .const 'Sub' $P5013 = 'cuid_370_1360432459.413' 
    capture_lex $P5013
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<:my>" :subid("cuid_358_1360432459.413") :anon :lex :outer("cuid_499_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3210
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1103 
    .local pmc fb_tmp_1104 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
.annotate 'line', 3211
    unless_null _lex_param_1, fallback7950
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5002
  fallback7950:
    set fb_tmp_1103, _lex_param_1
    repr_defined $I5001, fb_tmp_1103
    unless $I5001 goto if3965_else7948 
    set $P5003, fb_tmp_1103["statement"]
    set $P5005, $P5003
    goto if3965_end7949
  if3965_else7948:
    null $P5004
    set $P5005, $P5004
  if3965_end7949:
    unless_null $P5005, vivi_39667951
    nqp_get_sc_object $P5006, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5005, $P5006
  vivi_39667951:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 3212
    nqp_get_sc_object $P5010, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5009, $P5010, "QAST"
    get_who $P5008, $P5009
    set fb_tmp_1104, $P5008
    repr_defined $I5002, fb_tmp_1104
    unless $I5002 goto if3967_else7952 
    set $P5011, fb_tmp_1104["Regex"]
    set $P5013, $P5011
    goto if3967_end7953
  if3967_else7952:
    null $P5012
    set $P5013, $P5012
  if3967_end7953:
    unless_null $P5013, vivi_39687954
    nqp_get_sc_object $P5014, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5013, $P5014
  vivi_39687954:
    $P5015 = $P5013."new"($P101, "qastnode" :named("rxtype"), "declarative" :named("subtype"), _lex_param_1 :named("node"))
    $P5016 = _lex_param_1."!make"($P5015)
    .return ($P5016) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<{ }>" :subid("cuid_359_1360432459.413") :anon :lex :outer("cuid_499_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3216
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1105 
    .local pmc fb_tmp_1106 
.annotate 'line', 3217
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5002, $P5003, "QAST"
    get_who $P5001, $P5002
    set fb_tmp_1105, $P5001
    repr_defined $I5001, fb_tmp_1105
    unless $I5001 goto if3969_else7955 
    set $P5004, fb_tmp_1105["Regex"]
    set $P5006, $P5004
    goto if3969_end7956
  if3969_else7955:
    null $P5005
    set $P5006, $P5005
  if3969_end7956:
    unless_null $P5006, vivi_39707957
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_39707957:
    unless_null _lex_param_1, fallback7960
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5008
  fallback7960:
    set fb_tmp_1106, _lex_param_1
    repr_defined $I5002, fb_tmp_1106
    unless $I5002 goto if3971_else7958 
    set $P5009, fb_tmp_1106["codeblock"]
    set $P5011, $P5009
    goto if3971_end7959
  if3971_else7958:
    null $P5010
    set $P5011, $P5010
  if3971_end7959:
    unless_null $P5011, vivi_39727961
    nqp_get_sc_object $P5012, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5011, $P5012
  vivi_39727961:
    $P5013 = $P5011."ast"()
    $P5014 = $P5006."new"($P5013, "qastnode" :named("rxtype"), _lex_param_1 :named("node"))
    $P5015 = _lex_param_1."!make"($P5014)
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<nqpvar>" :subid("cuid_360_1360432459.413") :anon :lex :outer("cuid_499_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3221
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1107 
    .local pmc fb_tmp_1108 
    .local pmc fb_tmp_1109 
    .local pmc fb_tmp_1110 
.annotate 'line', 3222
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5002, $P5003, "QAST"
    get_who $P5001, $P5002
    set fb_tmp_1107, $P5001
    repr_defined $I5001, fb_tmp_1107
    unless $I5001 goto if3973_else7962 
    set $P5004, fb_tmp_1107["Regex"]
    set $P5006, $P5004
    goto if3973_end7963
  if3973_else7962:
    null $P5005
    set $P5006, $P5005
  if3973_end7963:
    unless_null $P5006, vivi_39747964
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_39747964:
    nqp_get_sc_object $P5010, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5009, $P5010, "QAST"
    get_who $P5008, $P5009
    set fb_tmp_1108, $P5008
    repr_defined $I5002, fb_tmp_1108
    unless $I5002 goto if3975_else7965 
    set $P5011, fb_tmp_1108["Node"]
    set $P5013, $P5011
    goto if3975_end7966
  if3975_else7965:
    null $P5012
    set $P5013, $P5012
  if3975_end7966:
    unless_null $P5013, vivi_39767967
    nqp_get_sc_object $P5014, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5013, $P5014
  vivi_39767967:
.annotate 'line', 3223
    nqp_get_sc_object $P5017, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5016, $P5017, "QAST"
    get_who $P5015, $P5016
    set fb_tmp_1109, $P5015
    repr_defined $I5003, fb_tmp_1109
    unless $I5003 goto if3977_else7968 
    set $P5018, fb_tmp_1109["SVal"]
    set $P5020, $P5018
    goto if3977_end7969
  if3977_else7968:
    null $P5019
    set $P5020, $P5019
  if3977_end7969:
    unless_null $P5020, vivi_39787970
    nqp_get_sc_object $P5021, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5020, $P5021
  vivi_39787970:
    $P5022 = $P5020."new"("!INTERPOLATE" :named("value"))
.annotate 'line', 3224
    unless_null _lex_param_1, fallback7973
    nqp_get_sc_object $P5023, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5023
  fallback7973:
    set fb_tmp_1110, _lex_param_1
    repr_defined $I5004, fb_tmp_1110
    unless $I5004 goto if3979_else7971 
    set $P5024, fb_tmp_1110["var"]
    set $P5026, $P5024
    goto if3979_end7972
  if3979_else7971:
    null $P5025
    set $P5026, $P5025
  if3979_end7972:
    unless_null $P5026, vivi_39807974
    nqp_get_sc_object $P5027, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5026, $P5027
  vivi_39807974:
    $P5028 = $P5026."ast"()
    $P5029 = $P5013."new"($P5022, $P5028)
    $P5030 = $P5006."new"($P5029, "subrule" :named("rxtype"), "method" :named("subtype"), _lex_param_1 :named("node"))
    $P5031 = _lex_param_1."!make"($P5030)
    .return ($P5031) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<{ }>" :subid("cuid_361_1360432459.413") :anon :lex :outer("cuid_499_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3228
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1111 
    .local pmc fb_tmp_1112 
    .local pmc fb_tmp_1113 
    .local pmc fb_tmp_1114 
.annotate 'line', 3229
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5002, $P5003, "QAST"
    get_who $P5001, $P5002
    set fb_tmp_1111, $P5001
    repr_defined $I5001, fb_tmp_1111
    unless $I5001 goto if3981_else7975 
    set $P5004, fb_tmp_1111["Regex"]
    set $P5006, $P5004
    goto if3981_end7976
  if3981_else7975:
    null $P5005
    set $P5006, $P5005
  if3981_end7976:
    unless_null $P5006, vivi_39827977
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_39827977:
    nqp_get_sc_object $P5010, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5009, $P5010, "QAST"
    get_who $P5008, $P5009
    set fb_tmp_1112, $P5008
    repr_defined $I5002, fb_tmp_1112
    unless $I5002 goto if3983_else7978 
    set $P5011, fb_tmp_1112["Node"]
    set $P5013, $P5011
    goto if3983_end7979
  if3983_else7978:
    null $P5012
    set $P5013, $P5012
  if3983_end7979:
    unless_null $P5013, vivi_39847980
    nqp_get_sc_object $P5014, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5013, $P5014
  vivi_39847980:
.annotate 'line', 3230
    nqp_get_sc_object $P5017, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5016, $P5017, "QAST"
    get_who $P5015, $P5016
    set fb_tmp_1113, $P5015
    repr_defined $I5003, fb_tmp_1113
    unless $I5003 goto if3985_else7981 
    set $P5018, fb_tmp_1113["SVal"]
    set $P5020, $P5018
    goto if3985_end7982
  if3985_else7981:
    null $P5019
    set $P5020, $P5019
  if3985_end7982:
    unless_null $P5020, vivi_39867983
    nqp_get_sc_object $P5021, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5020, $P5021
  vivi_39867983:
    $P5022 = $P5020."new"("!INTERPOLATE_REGEX" :named("value"))
.annotate 'line', 3231
    unless_null _lex_param_1, fallback7986
    nqp_get_sc_object $P5023, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5023
  fallback7986:
    set fb_tmp_1114, _lex_param_1
    repr_defined $I5004, fb_tmp_1114
    unless $I5004 goto if3987_else7984 
    set $P5024, fb_tmp_1114["codeblock"]
    set $P5026, $P5024
    goto if3987_end7985
  if3987_else7984:
    null $P5025
    set $P5026, $P5025
  if3987_end7985:
    unless_null $P5026, vivi_39887987
    nqp_get_sc_object $P5027, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5026, $P5027
  vivi_39887987:
    $P5028 = $P5026."ast"()
    $P5029 = $P5013."new"($P5022, $P5028)
    $P5030 = $P5006."new"($P5029, "subrule" :named("rxtype"), "method" :named("subtype"), _lex_param_1 :named("node"))
    $P5031 = _lex_param_1."!make"($P5030)
    .return ($P5031) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<?{ }>" :subid("cuid_362_1360432459.413") :anon :lex :outer("cuid_499_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3235
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1115 
    .local pmc fb_tmp_1116 
    .local pmc fb_tmp_1117 
.annotate 'line', 3236
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5002, $P5003, "QAST"
    get_who $P5001, $P5002
    set fb_tmp_1115, $P5001
    repr_defined $I5001, fb_tmp_1115
    unless $I5001 goto if3989_else7988 
    set $P5004, fb_tmp_1115["Regex"]
    set $P5006, $P5004
    goto if3989_end7989
  if3989_else7988:
    null $P5005
    set $P5006, $P5005
  if3989_end7989:
    unless_null $P5006, vivi_39907990
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_39907990:
    unless_null _lex_param_1, fallback7993
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5008
  fallback7993:
    set fb_tmp_1116, _lex_param_1
    repr_defined $I5002, fb_tmp_1116
    unless $I5002 goto if3991_else7991 
    set $P5009, fb_tmp_1116["codeblock"]
    set $P5011, $P5009
    goto if3991_end7992
  if3991_else7991:
    null $P5010
    set $P5011, $P5010
  if3991_end7992:
    unless_null $P5011, vivi_39927994
    nqp_get_sc_object $P5012, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5011, $P5012
  vivi_39927994:
    $P5013 = $P5011."ast"()
    unless_null _lex_param_1, fallback7997
    nqp_get_sc_object $P5014, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5014
  fallback7997:
    set fb_tmp_1117, _lex_param_1
    repr_defined $I5004, fb_tmp_1117
    unless $I5004 goto if3993_else7995 
    set $P5015, fb_tmp_1117["zw"]
    set $P5017, $P5015
    goto if3993_end7996
  if3993_else7995:
    null $P5016
    set $P5017, $P5016
  if3993_end7996:
    unless_null $P5017, vivi_39947998
    nqp_get_sc_object $P5018, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5017, $P5018
  vivi_39947998:
    set $S5001, $P5017
    iseq $I5003, $S5001, "!"
    $P5019 = $P5006."new"($P5013, "zerowidth" :named("subtype"), $I5003 :named("negate"), "qastnode" :named("rxtype"), _lex_param_1 :named("node"))
    $P5020 = _lex_param_1."!make"($P5019)
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<var>" :subid("cuid_363_1360432459.413") :anon :lex :outer("cuid_499_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3241
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1118 
    .local pmc fb_tmp_1119 
    .local pmc fb_tmp_1120 
    .local pmc fb_tmp_1121 
.annotate 'line', 3242
    nqp_get_sc_object $P5003, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5002, $P5003, "QAST"
    get_who $P5001, $P5002
    set fb_tmp_1118, $P5001
    repr_defined $I5001, fb_tmp_1118
    unless $I5001 goto if3995_else7999 
    set $P5004, fb_tmp_1118["Regex"]
    set $P5006, $P5004
    goto if3995_end8000
  if3995_else7999:
    null $P5005
    set $P5006, $P5005
  if3995_end8000:
    unless_null $P5006, vivi_39968001
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_39968001:
    nqp_get_sc_object $P5010, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5009, $P5010, "QAST"
    get_who $P5008, $P5009
    set fb_tmp_1119, $P5008
    repr_defined $I5002, fb_tmp_1119
    unless $I5002 goto if3997_else8002 
    set $P5011, fb_tmp_1119["Node"]
    set $P5013, $P5011
    goto if3997_end8003
  if3997_else8002:
    null $P5012
    set $P5013, $P5012
  if3997_end8003:
    unless_null $P5013, vivi_39988004
    nqp_get_sc_object $P5014, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5013, $P5014
  vivi_39988004:
.annotate 'line', 3243
    nqp_get_sc_object $P5017, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5016, $P5017, "QAST"
    get_who $P5015, $P5016
    set fb_tmp_1120, $P5015
    repr_defined $I5003, fb_tmp_1120
    unless $I5003 goto if3999_else8005 
    set $P5018, fb_tmp_1120["SVal"]
    set $P5020, $P5018
    goto if3999_end8006
  if3999_else8005:
    null $P5019
    set $P5020, $P5019
  if3999_end8006:
    unless_null $P5020, vivi_40008007
    nqp_get_sc_object $P5021, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5020, $P5021
  vivi_40008007:
    $P5022 = $P5020."new"("!INTERPOLATE_REGEX" :named("value"))
.annotate 'line', 3244
    unless_null _lex_param_1, fallback8010
    nqp_get_sc_object $P5023, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5023
  fallback8010:
    set fb_tmp_1121, _lex_param_1
    repr_defined $I5004, fb_tmp_1121
    unless $I5004 goto if4001_else8008 
    set $P5024, fb_tmp_1121["var"]
    set $P5026, $P5024
    goto if4001_end8009
  if4001_else8008:
    null $P5025
    set $P5026, $P5025
  if4001_end8009:
    unless_null $P5026, vivi_40028011
    nqp_get_sc_object $P5027, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5026, $P5027
  vivi_40028011:
    $P5028 = $P5026."ast"()
    $P5029 = $P5013."new"($P5022, $P5028)
    $P5030 = $P5006."new"($P5029, "subrule" :named("rxtype"), "method" :named("subtype"), _lex_param_1 :named("node"))
    $P5031 = _lex_param_1."!make"($P5030)
    .return ($P5031) 
.end
.HLL "nqp"
.namespace []
.sub "codeblock" :subid("cuid_364_1360432459.413") :anon :lex :outer("cuid_499_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3248
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$block", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1122 
    .local pmc fb_tmp_1123 
    .local pmc fb_tmp_1124 
    .local pmc fb_tmp_1125 
    .local pmc fb_tmp_1126 
    .local pmc fb_tmp_1127 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
.annotate 'line', 3249
    unless_null _lex_param_1, fallback8014
    nqp_get_sc_object $P5003, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5003
  fallback8014:
    set fb_tmp_1122, _lex_param_1
    repr_defined $I5001, fb_tmp_1122
    unless $I5001 goto if4003_else8012 
    set $P5004, fb_tmp_1122["block"]
    set $P5006, $P5004
    goto if4003_end8013
  if4003_else8012:
    null $P5005
    set $P5006, $P5005
  if4003_end8013:
    unless_null $P5006, vivi_40048015
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_40048015:
    $P5008 = $P5006."ast"()
    set $P101, $P5008
.annotate 'line', 3250
    $P101."blocktype"("immediate")
.annotate 'line', 3252
    nqp_get_sc_object $P5011, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5010, $P5011, "QAST"
    get_who $P5009, $P5010
    set fb_tmp_1123, $P5009
    repr_defined $I5002, fb_tmp_1123
    unless $I5002 goto if4005_else8016 
    set $P5012, fb_tmp_1123["Stmts"]
    set $P5014, $P5012
    goto if4005_end8017
  if4005_else8016:
    null $P5013
    set $P5014, $P5013
  if4005_end8017:
    unless_null $P5014, vivi_40068018
    nqp_get_sc_object $P5015, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5014, $P5015
  vivi_40068018:
.annotate 'line', 3253
    nqp_get_sc_object $P5018, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5017, $P5018, "QAST"
    get_who $P5016, $P5017
    set fb_tmp_1124, $P5016
    repr_defined $I5003, fb_tmp_1124
    unless $I5003 goto if4007_else8019 
    set $P5019, fb_tmp_1124["Op"]
    set $P5021, $P5019
    goto if4007_end8020
  if4007_else8019:
    null $P5020
    set $P5021, $P5020
  if4007_end8020:
    unless_null $P5021, vivi_40088021
    nqp_get_sc_object $P5022, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5021, $P5022
  vivi_40088021:
.annotate 'line', 3255
    nqp_get_sc_object $P5025, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5024, $P5025, "QAST"
    get_who $P5023, $P5024
    set fb_tmp_1125, $P5023
    repr_defined $I5004, fb_tmp_1125
    unless $I5004 goto if4009_else8022 
    set $P5026, fb_tmp_1125["Var"]
    set $P5028, $P5026
    goto if4009_end8023
  if4009_else8022:
    null $P5027
    set $P5028, $P5027
  if4009_end8023:
    unless_null $P5028, vivi_40108024
    nqp_get_sc_object $P5029, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5028, $P5029
  vivi_40108024:
    $P5030 = $P5028."new"("$/" :named("name"), "contextual" :named("scope"))
.annotate 'line', 3256
    nqp_get_sc_object $P5033, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5032, $P5033, "QAST"
    get_who $P5031, $P5032
    set fb_tmp_1126, $P5031
    repr_defined $I5005, fb_tmp_1126
    unless $I5005 goto if4011_else8025 
    set $P5034, fb_tmp_1126["Op"]
    set $P5036, $P5034
    goto if4011_end8026
  if4011_else8025:
    null $P5035
    set $P5036, $P5035
  if4011_end8026:
    unless_null $P5036, vivi_40128027
    nqp_get_sc_object $P5037, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5036, $P5037
  vivi_40128027:
.annotate 'line', 3257
    nqp_get_sc_object $P5040, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5039, $P5040, "QAST"
    get_who $P5038, $P5039
    set fb_tmp_1127, $P5038
    repr_defined $I5006, fb_tmp_1127
    unless $I5006 goto if4013_else8028 
    set $P5041, fb_tmp_1127["Var"]
    set $P5043, $P5041
    goto if4013_end8029
  if4013_else8028:
    null $P5042
    set $P5043, $P5042
  if4013_end8029:
    unless_null $P5043, vivi_40148030
    nqp_get_sc_object $P5044, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5043, $P5044
  vivi_40148030:
    $P5045 = $P5043."new"(utf8:"$\x{a2}" :named("name"), "contextual" :named("scope"))
    $P5046 = $P5036."new"($P5045, "MATCH" :named("name"), "callmethod" :named("op"))
    $P5047 = $P5021."new"($P5030, $P5046, "bind" :named("op"))
    $P5048 = $P5014."new"($P5047, $P101)
    set $P102, $P5048
.annotate 'line', 3264
    $P5049 = _lex_param_1."!make"($P102)
    .return ($P5049) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<name>" :subid("cuid_365_1360432459.413") :anon :lex :outer("cuid_499_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3267
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5119 = 'cuid_500_1360432459.413' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_501_1360432459.413' 
    capture_lex $P5119 
    .lex "$name", $P101 
    .lex "$qast", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1128 
    .local pmc fb_tmp_1129 
    .local pmc fb_tmp_1130 
    .local pmc fb_tmp_1131 
    .local pmc fb_tmp_1140 
    .local pmc fb_tmp_1141 
    .local pmc fb_tmp_1142 
    .local pmc fb_tmp_1143 
    .local pmc fb_tmp_1144 
    .local pmc fb_tmp_1145 
    .local pmc fb_tmp_1147 
    .local pmc fb_tmp_1148 
    .local pmc fb_tmp_1149 
    .local pmc fb_tmp_1150 
    .local pmc fb_tmp_1151 
    .local pmc fb_tmp_1152 
    .local pmc fb_tmp_1153 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
    unless_null _lex_param_1, fallback8033
    nqp_get_sc_object $P5003, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5003
  fallback8033:
    set fb_tmp_1128, _lex_param_1
    repr_defined $I5001, fb_tmp_1128
    unless $I5001 goto if4015_else8031 
    set $P5004, fb_tmp_1128["longname"]
    set $P5006, $P5004
    goto if4015_end8032
  if4015_else8031:
    null $P5005
    set $P5006, $P5005
  if4015_end8032:
    unless_null $P5006, vivi_40168034
    nqp_get_sc_object $P5007, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5006, $P5007
  vivi_40168034:
    set $S5001, $P5006
    box $P5008, $S5001
    set $P101, $P5008
    unless_null _lex_param_1, fallback8039
    nqp_get_sc_object $P5009, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5009
  fallback8039:
    set fb_tmp_1129, _lex_param_1
    repr_defined $I5002, fb_tmp_1129
    unless $I5002 goto if4018_else8037 
    set $P5010, fb_tmp_1129["assertion"]
    set $P5012, $P5010
    goto if4018_end8038
  if4018_else8037:
    null $P5011
    set $P5012, $P5011
  if4018_end8038:
    unless_null $P5012, vivi_40198040
    nqp_get_sc_object $P5013, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5012, $P5013
  vivi_40198040:
    unless $P5012 goto if4017_else8035 
.annotate 'line', 3270
.annotate 'line', 3271
    unless_null _lex_param_1, fallback8045
    nqp_get_sc_object $P5014, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5014
  fallback8045:
    set fb_tmp_1131, _lex_param_1
    repr_defined $I5004, fb_tmp_1131
    unless $I5004 goto if4021_else8043 
    set $P5015, fb_tmp_1131["assertion"]
    set $P5017, $P5015
    goto if4021_end8044
  if4021_else8043:
    null $P5016
    set $P5017, $P5016
  if4021_end8044:
    unless_null $P5017, vivi_40228046
    nqp_get_sc_object $P5018, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5017, $P5018
  vivi_40228046:
    set fb_tmp_1130, $P5017
    repr_defined $I5003, fb_tmp_1130
    unless $I5003 goto if4020_else8041 
    set $P5019, fb_tmp_1130[0]
    set $P5021, $P5019
    goto if4020_end8042
  if4020_else8041:
    null $P5020
    set $P5021, $P5020
  if4020_end8042:
    unless_null $P5021, vivi_40238047
    nqp_get_sc_object $P5022, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5021, $P5022
  vivi_40238047:
    $P5023 = $P5021."ast"()
    set $P102, $P5023
.annotate 'line', 3272
    nqp_decontainerize $P5024, _lex_param_0
    $P5025 = $P5024."subrule_alias"($P102, $P101)
    goto if4017_end8036
  if4017_else8035:
    set $S5002, $P101
    iseq $I5005, $S5002, "sym"
    unless $I5005 goto if4024_else8048 
    .const 'Sub' $P5026 = 'cuid_500_1360432459.413' 
    capture_lex $P5026
    $P5027 = $P5026()
    set $P5117, $P5027
    goto if4024_end8049
  if4024_else8048:
.annotate 'line', 3282
.annotate 'line', 3283
    nqp_get_sc_object $P5030, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5029, $P5030, "QAST"
    get_who $P5028, $P5029
    set fb_tmp_1140, $P5028
    repr_defined $I5006, fb_tmp_1140
    unless $I5006 goto if4045_else8082 
    set $P5031, fb_tmp_1140["Regex"]
    set $P5033, $P5031
    goto if4045_end8083
  if4045_else8082:
    null $P5032
    set $P5033, $P5032
  if4045_end8083:
    unless_null $P5033, vivi_40468084
    nqp_get_sc_object $P5034, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5033, $P5034
  vivi_40468084:
.annotate 'line', 3285
    nqp_get_sc_object $P5037, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5036, $P5037, "QAST"
    get_who $P5035, $P5036
    set fb_tmp_1141, $P5035
    repr_defined $I5007, fb_tmp_1141
    unless $I5007 goto if4047_else8085 
    set $P5038, fb_tmp_1141["Node"]
    set $P5040, $P5038
    goto if4047_end8086
  if4047_else8085:
    null $P5039
    set $P5040, $P5039
  if4047_end8086:
    unless_null $P5040, vivi_40488087
    nqp_get_sc_object $P5041, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5040, $P5041
  vivi_40488087:
    nqp_get_sc_object $P5044, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5043, $P5044, "QAST"
    get_who $P5042, $P5043
    set fb_tmp_1142, $P5042
    repr_defined $I5008, fb_tmp_1142
    unless $I5008 goto if4049_else8088 
    set $P5045, fb_tmp_1142["SVal"]
    set $P5047, $P5045
    goto if4049_end8089
  if4049_else8088:
    null $P5046
    set $P5047, $P5046
  if4049_end8089:
    unless_null $P5047, vivi_40508090
    nqp_get_sc_object $P5048, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5047, $P5048
  vivi_40508090:
    $P5049 = $P5047."new"($P101 :named("value"))
    $P5050 = $P5040."new"($P5049)
    $P5051 = $P5033."new"($P5050, "subrule" :named("rxtype"), "capture" :named("subtype"), _lex_param_1 :named("node"), $P101 :named("name"))
    set $P102, $P5051
    unless_null _lex_param_1, fallback8095
    nqp_get_sc_object $P5052, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5052
  fallback8095:
    set fb_tmp_1143, _lex_param_1
    repr_defined $I5009, fb_tmp_1143
    unless $I5009 goto if4052_else8093 
    set $P5053, fb_tmp_1143["arglist"]
    set $P5055, $P5053
    goto if4052_end8094
  if4052_else8093:
    null $P5054
    set $P5055, $P5054
  if4052_end8094:
    unless_null $P5055, vivi_40538096
    nqp_get_sc_object $P5056, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5055, $P5056
  vivi_40538096:
    unless $P5055 goto if4051_else8091 
.annotate 'line', 3286
.annotate 'line', 3287
    unless_null _lex_param_1, fallback8101
    nqp_get_sc_object $P5060, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5060
  fallback8101:
    set fb_tmp_1145, _lex_param_1
    repr_defined $I5011, fb_tmp_1145
    unless $I5011 goto if4055_else8099 
    set $P5061, fb_tmp_1145["arglist"]
    set $P5063, $P5061
    goto if4055_end8100
  if4055_else8099:
    null $P5062
    set $P5063, $P5062
  if4055_end8100:
    unless_null $P5063, vivi_40568102
    nqp_get_sc_object $P5064, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5063, $P5064
  vivi_40568102:
    set fb_tmp_1144, $P5063
    repr_defined $I5010, fb_tmp_1144
    unless $I5010 goto if4054_else8097 
    set $P5065, fb_tmp_1144[0]
    set $P5067, $P5065
    goto if4054_end8098
  if4054_else8097:
    null $P5066
    set $P5067, $P5066
  if4054_end8098:
    unless_null $P5067, vivi_40578103
    nqp_get_sc_object $P5068, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5067, $P5068
  vivi_40578103:
    $P5069 = $P5067."ast"()
    $P5070 = $P5069."list"()
    set $P5057, $P5070
    iter $P5059, $P5070
  for_next8107:
    unless $P5059, for_done8109
    shift $P5072, $P5059
  for_redo8108:
    .const 'Sub' $P5071 = 'cuid_501_1360432459.413' 
    capture_lex $P5071
    $P5057 = $P5071($P5072)
    goto for_next8107
  for_done8109:
    set $P5116, $P5057
    goto if4051_end8092
  if4051_else8091:
    unless_null _lex_param_1, fallback8114
    nqp_get_sc_object $P5073, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5073
  fallback8114:
    set fb_tmp_1147, _lex_param_1
    repr_defined $I5012, fb_tmp_1147
    unless $I5012 goto if4061_else8112 
    set $P5074, fb_tmp_1147["nibbler"]
    set $P5076, $P5074
    goto if4061_end8113
  if4061_else8112:
    null $P5075
    set $P5076, $P5075
  if4061_end8113:
    unless_null $P5076, vivi_40628115
    nqp_get_sc_object $P5077, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5076, $P5077
  vivi_40628115:
    set $P5115, $P5076
    unless $P5076 goto if4060_end8111 
.annotate 'line', 3289
    set $S5003, $P101
    iseq $I5013, $S5003, "after"
    unless $I5013 goto if4063_else8116 
.annotate 'line', 3291
    set fb_tmp_1148, $P102
    repr_defined $I5014, fb_tmp_1148
    unless $I5014 goto if4064_else8118 
    set $P5078, fb_tmp_1148[0]
    set $P5080, $P5078
    goto if4064_end8119
  if4064_else8118:
    null $P5079
    set $P5080, $P5079
  if4064_end8119:
    unless_null $P5080, vivi_40658120
    nqp_get_sc_object $P5081, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5080, $P5081
  vivi_40658120:
    nqp_decontainerize $P5082, _lex_param_0
    nqp_decontainerize $P5083, _lex_param_0
    unless_null _lex_param_1, fallback8125
    nqp_get_sc_object $P5084, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5084
  fallback8125:
    set fb_tmp_1150, _lex_param_1
    repr_defined $I5016, fb_tmp_1150
    unless $I5016 goto if4067_else8123 
    set $P5085, fb_tmp_1150["nibbler"]
    set $P5087, $P5085
    goto if4067_end8124
  if4067_else8123:
    null $P5086
    set $P5087, $P5086
  if4067_end8124:
    unless_null $P5087, vivi_40688126
    nqp_get_sc_object $P5088, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5087, $P5088
  vivi_40688126:
    set fb_tmp_1149, $P5087
    repr_defined $I5015, fb_tmp_1149
    unless $I5015 goto if4066_else8121 
    set $P5089, fb_tmp_1149[0]
    set $P5091, $P5089
    goto if4066_end8122
  if4066_else8121:
    null $P5090
    set $P5091, $P5090
  if4066_end8122:
    unless_null $P5091, vivi_40698127
    nqp_get_sc_object $P5092, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5091, $P5092
  vivi_40698127:
    $P5093 = $P5091."ast"()
    $P5094 = $P5083."flip_ast"($P5093)
    $P5095 = $P5082."qbuildsub"($P5094, 1 :named("anon"), 1 :named("addself"))
    $P5096 = $P5080."push"($P5095)
    set $P5114, $P5096
    goto if4063_end8117
  if4063_else8116:
.annotate 'line', 3292
    set fb_tmp_1151, $P102
    repr_defined $I5017, fb_tmp_1151
    unless $I5017 goto if4070_else8128 
    set $P5097, fb_tmp_1151[0]
    set $P5099, $P5097
    goto if4070_end8129
  if4070_else8128:
    null $P5098
    set $P5099, $P5098
  if4070_end8129:
    unless_null $P5099, vivi_40718130
    nqp_get_sc_object $P5100, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5099, $P5100
  vivi_40718130:
    nqp_decontainerize $P5101, _lex_param_0
    unless_null _lex_param_1, fallback8135
    nqp_get_sc_object $P5102, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5102
  fallback8135:
    set fb_tmp_1153, _lex_param_1
    repr_defined $I5019, fb_tmp_1153
    unless $I5019 goto if4073_else8133 
    set $P5103, fb_tmp_1153["nibbler"]
    set $P5105, $P5103
    goto if4073_end8134
  if4073_else8133:
    null $P5104
    set $P5105, $P5104
  if4073_end8134:
    unless_null $P5105, vivi_40748136
    nqp_get_sc_object $P5106, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5105, $P5106
  vivi_40748136:
    set fb_tmp_1152, $P5105
    repr_defined $I5018, fb_tmp_1152
    unless $I5018 goto if4072_else8131 
    set $P5107, fb_tmp_1152[0]
    set $P5109, $P5107
    goto if4072_end8132
  if4072_else8131:
    null $P5108
    set $P5109, $P5108
  if4072_end8132:
    unless_null $P5109, vivi_40758137
    nqp_get_sc_object $P5110, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5109, $P5110
  vivi_40758137:
    $P5111 = $P5109."ast"()
    $P5112 = $P5101."qbuildsub"($P5111, 1 :named("anon"), 1 :named("addself"))
    $P5113 = $P5099."push"($P5112)
    set $P5114, $P5113
  if4063_end8117:
    set $P5115, $P5114
  if4060_end8111:
    set $P5116, $P5115
  if4051_end8092:
    set $P5117, $P5116
  if4024_end8049:
  if4017_end8036:
.annotate 'line', 3295
    $P5118 = _lex_param_1."!make"($P102)
    .return ($P5118) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_500_1360432459.413") :anon :lex :outer("cuid_365_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3274
    .lex "$loc", $P101 
    .lex "$rxname", $P102 
    .local pmc fb_tmp_1132 
    .local pmc fb_tmp_1133 
    .local pmc fb_tmp_1134 
    .local pmc fb_tmp_1135 
    .local pmc fb_tmp_1136 
    .local pmc fb_tmp_1137 
    .local pmc fb_tmp_1138 
    .local pmc fb_tmp_1139 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P102, $P5002
    find_dynamic_lex $P5003, "%*RX"
    unless_null $P5003, fallback8052
    nqp_get_sc_object $P5005, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5004, $P5005
    set fb_tmp_1133, $P5004
    repr_defined $I5003, fb_tmp_1133
    unless $I5003 goto if4026_else8053 
    set $P5006, fb_tmp_1133["%RX"]
    set $P5008, $P5006
    goto if4026_end8054
  if4026_else8053:
    null $P5007
    set $P5008, $P5007
  if4026_end8054:
    unless_null $P5008, vivi_40278055
    nqp_get_sc_object $P5010, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5009, $P5010
    new $P5011, 'Hash'
    set $P5009["%RX"], $P5011
    set $P5008, $P5011
  vivi_40278055:
    unless_null $P5008, vivi_40288056
    die "Contextual %*RX not found"
    box $P5012, "Contextual %*RX not found"
    set $P5008, $P5012
  vivi_40288056:
    set $P5003, $P5008
  fallback8052:
    set fb_tmp_1132, $P5003
    repr_defined $I5002, fb_tmp_1132
    unless $I5002 goto if4025_else8050 
    set $P5013, fb_tmp_1132["name"]
    set $P5015, $P5013
    goto if4025_end8051
  if4025_else8050:
    null $P5014
    set $P5015, $P5014
  if4025_end8051:
    unless_null $P5015, vivi_40298057
    nqp_get_sc_object $P5016, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5015, $P5016
  vivi_40298057:
    set $S5001, $P5015
    index $I5001, $S5001, ":sym<", 0
    box $P5017, $I5001
    set $P101, $P5017
    set $N5001, $P101
    set $N5002, 0
    islt $I5004, $N5001, $N5002
    unless $I5004 goto if4030_end8059 
    find_dynamic_lex $P5018, "%*RX"
    unless_null $P5018, fallback8062
    nqp_get_sc_object $P5020, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5019, $P5020
    set fb_tmp_1135, $P5019
    repr_defined $I5007, fb_tmp_1135
    unless $I5007 goto if4032_else8063 
    set $P5021, fb_tmp_1135["%RX"]
    set $P5023, $P5021
    goto if4032_end8064
  if4032_else8063:
    null $P5022
    set $P5023, $P5022
  if4032_end8064:
    unless_null $P5023, vivi_40338065
    nqp_get_sc_object $P5025, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5024, $P5025
    new $P5026, 'Hash'
    set $P5024["%RX"], $P5026
    set $P5023, $P5026
  vivi_40338065:
    unless_null $P5023, vivi_40348066
    die "Contextual %*RX not found"
    box $P5027, "Contextual %*RX not found"
    set $P5023, $P5027
  vivi_40348066:
    set $P5018, $P5023
  fallback8062:
    set fb_tmp_1134, $P5018
    repr_defined $I5006, fb_tmp_1134
    unless $I5006 goto if4031_else8060 
    set $P5028, fb_tmp_1134["name"]
    set $P5030, $P5028
    goto if4031_end8061
  if4031_else8060:
    null $P5029
    set $P5030, $P5029
  if4031_end8061:
    unless_null $P5030, vivi_40358067
    nqp_get_sc_object $P5031, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5030, $P5031
  vivi_40358067:
    set $S5002, $P5030
    index $I5005, $S5002, utf8:":sym\x{ab}", 0
    box $P5032, $I5005
    set $P101, $P5032
  if4030_end8059:
    find_dynamic_lex $P5033, "%*RX"
    unless_null $P5033, fallback8070
    nqp_get_sc_object $P5035, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5034, $P5035
    set fb_tmp_1137, $P5034
    repr_defined $I5009, fb_tmp_1137
    unless $I5009 goto if4037_else8071 
    set $P5036, fb_tmp_1137["%RX"]
    set $P5038, $P5036
    goto if4037_end8072
  if4037_else8071:
    null $P5037
    set $P5038, $P5037
  if4037_end8072:
    unless_null $P5038, vivi_40388073
    nqp_get_sc_object $P5040, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5039, $P5040
    new $P5041, 'Hash'
    set $P5039["%RX"], $P5041
    set $P5038, $P5041
  vivi_40388073:
    unless_null $P5038, vivi_40398074
    die "Contextual %*RX not found"
    box $P5042, "Contextual %*RX not found"
    set $P5038, $P5042
  vivi_40398074:
    set $P5033, $P5038
  fallback8070:
    set fb_tmp_1136, $P5033
    repr_defined $I5008, fb_tmp_1136
    unless $I5008 goto if4036_else8068 
    set $P5043, fb_tmp_1136["name"]
    set $P5045, $P5043
    goto if4036_end8069
  if4036_else8068:
    null $P5044
    set $P5045, $P5044
  if4036_end8069:
    unless_null $P5045, vivi_40408075
    nqp_get_sc_object $P5046, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5045, $P5046
  vivi_40408075:
    set $S5005, $P5045
    set $N5004, $P101
    set $N5005, 5
    add $N5003, $N5004, $N5005
    set $I5010, $N5003
    substr $S5004, $S5005, $I5010
    chopn $S5003, $S5004, 1
    box $P5047, $S5003
    set $P102, $P5047
.annotate 'line', 3279
    nqp_get_sc_object $P5050, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5049, $P5050, "QAST"
    get_who $P5048, $P5049
    set fb_tmp_1138, $P5048
    repr_defined $I5011, fb_tmp_1138
    unless $I5011 goto if4041_else8076 
    set $P5051, fb_tmp_1138["Regex"]
    set $P5053, $P5051
    goto if4041_end8077
  if4041_else8076:
    null $P5052
    set $P5053, $P5052
  if4041_end8077:
    unless_null $P5053, vivi_40428078
    nqp_get_sc_object $P5054, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5053, $P5054
  vivi_40428078:
    find_lex $P5055, "$/"
.annotate 'line', 3280
    nqp_get_sc_object $P5058, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    nqp_get_package_through_who $P5057, $P5058, "QAST"
    get_who $P5056, $P5057
    set fb_tmp_1139, $P5056
    repr_defined $I5012, fb_tmp_1139
    unless $I5012 goto if4043_else8079 
    set $P5059, fb_tmp_1139["Regex"]
    set $P5061, $P5059
    goto if4043_end8080
  if4043_else8079:
    null $P5060
    set $P5061, $P5060
  if4043_end8080:
    unless_null $P5061, vivi_40448081
    nqp_get_sc_object $P5062, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5061, $P5062
  vivi_40448081:
    find_lex $P5063, "$/"
    $P5064 = $P5061."new"($P102, "literal" :named("rxtype"), $P5063 :named("node"))
    $P5065 = $P5053."new"($P5064, "sym" :named("name"), "subcapture" :named("rxtype"), $P5055 :named("node"))
    store_lex "$qast", $P5065
    .return ($P5065) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_501_1360432459.413") :anon :lex :outer("cuid_365_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3287
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_1146 
    find_lex $P5001, "$qast"
    set fb_tmp_1146, $P5001
    repr_defined $I5001, fb_tmp_1146
    unless $I5001 goto if4058_else8104 
    set $P5002, fb_tmp_1146[0]
    set $P5004, $P5002
    goto if4058_end8105
  if4058_else8104:
    null $P5003
    set $P5004, $P5003
  if4058_end8105:
    unless_null $P5004, vivi_40598106
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_40598106:
    $P5006 = $P5004."push"(_lex_param_0)
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "arg" :subid("cuid_366_1360432459.413") :anon :lex :outer("cuid_499_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3298
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1154 
.annotate 'line', 3299
    unless_null _lex_param_1, fallback8140
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set _lex_param_1, $P5001
  fallback8140:
    set fb_tmp_1154, _lex_param_1
    repr_defined $I5001, fb_tmp_1154
    unless $I5001 goto if4076_else8138 
    set $P5002, fb_tmp_1154["quote_EXPR"]
    set $P5004, $P5002
    goto if4076_end8139
  if4076_else8138:
    null $P5003
    set $P5004, $P5003
  if4076_end8139:
    unless_null $P5004, vivi_40778141
    nqp_get_sc_object $P5005, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5004, $P5005
  vivi_40778141:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "create_regex_code_object" :subid("cuid_367_1360432459.413") :anon :lex :outer("cuid_499_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3302
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$code", $P101 
    .lex "self", _lex_param_0 
    .lex "$block", _lex_param_1 
    .local pmc fb_tmp_1155 
    .local pmc fb_tmp_1156 
    .local pmc fb_tmp_1157 
    .local pmc fb_tmp_1158 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P101, $P5001
.annotate 'line', 3303
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback8142
    nqp_get_sc_object $P5004, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5003, $P5004
    set fb_tmp_1155, $P5003
    repr_defined $I5001, fb_tmp_1155
    unless $I5001 goto if4078_else8143 
    set $P5005, fb_tmp_1155["$W"]
    set $P5007, $P5005
    goto if4078_end8144
  if4078_else8143:
    null $P5006
    set $P5007, $P5006
  if4078_end8144:
    unless_null $P5007, vivi_40798145
    nqp_get_sc_object $P5008, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5007, $P5008
  vivi_40798145:
    unless_null $P5007, vivi_40808146
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_40808146:
    set $P5002, $P5007
  fallback8142:
    $P5010 = $P5002."create_code"(_lex_param_1, "", 0, "NQPRegex" :named("code_type_name"))
    set $P101, $P5010
    find_dynamic_lex $P5011, "%*RX"
    unless_null $P5011, fallback8149
    nqp_get_sc_object $P5013, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5012, $P5013
    set fb_tmp_1156, $P5012
    repr_defined $I5003, fb_tmp_1156
    unless $I5003 goto if4082_else8150 
    set $P5014, fb_tmp_1156["%RX"]
    set $P5016, $P5014
    goto if4082_end8151
  if4082_else8150:
    null $P5015
    set $P5016, $P5015
  if4082_end8151:
    unless_null $P5016, vivi_40838152
    nqp_get_sc_object $P5018, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5017, $P5018
    new $P5019, 'Hash'
    set $P5017["%RX"], $P5019
    set $P5016, $P5019
  vivi_40838152:
    unless_null $P5016, vivi_40848153
    die "Contextual %*RX not found"
    box $P5020, "Contextual %*RX not found"
    set $P5016, $P5020
  vivi_40848153:
    set $P5011, $P5016
  fallback8149:
    exists $I5002, $P5011["code"]
    unless $I5002 goto if4081_end8148 
.annotate 'line', 3304
.annotate 'line', 3305
    find_dynamic_lex $P5021, "%*RX"
    unless_null $P5021, fallback8156
    nqp_get_sc_object $P5023, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5022, $P5023
    set fb_tmp_1158, $P5022
    repr_defined $I5005, fb_tmp_1158
    unless $I5005 goto if4086_else8157 
    set $P5024, fb_tmp_1158["%RX"]
    set $P5026, $P5024
    goto if4086_end8158
  if4086_else8157:
    null $P5025
    set $P5026, $P5025
  if4086_end8158:
    unless_null $P5026, vivi_40878159
    nqp_get_sc_object $P5028, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    get_who $P5027, $P5028
    new $P5029, 'Hash'
    set $P5027["%RX"], $P5029
    set $P5026, $P5029
  vivi_40878159:
    unless_null $P5026, vivi_40888160
    die "Contextual %*RX not found"
    box $P5030, "Contextual %*RX not found"
    set $P5026, $P5030
  vivi_40888160:
    set $P5021, $P5026
  fallback8156:
    set fb_tmp_1157, $P5021
    repr_defined $I5004, fb_tmp_1157
    unless $I5004 goto if4085_else8154 
    set $P5031, fb_tmp_1157["code"]
    set $P5033, $P5031
    goto if4085_end8155
  if4085_else8154:
    null $P5032
    set $P5033, $P5032
  if4085_end8155:
    unless_null $P5033, vivi_40898161
    nqp_get_sc_object $P5034, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    set $P5033, $P5034
  vivi_40898161:
    $P5035 = $P5033."ADD_NESTED_CODE"($P101)
  if4081_end8148:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "store_regex_nfa" :subid("cuid_368_1360432459.413") :anon :lex :outer("cuid_499_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3310
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$code_obj", _lex_param_1 
    .lex "$block", _lex_param_2 
    .lex "$nfa", _lex_param_3 
.annotate 'line', 3311
    $P5001 = _lex_param_3."save"()
    $P5002 = _lex_param_1."SET_NFA"($P5001)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "store_regex_caps" :subid("cuid_369_1360432459.413") :anon :lex :outer("cuid_499_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3314
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$code_obj", _lex_param_1 
    .lex "$block", _lex_param_2 
    .lex "%caps", _lex_param_3 
.annotate 'line', 3315
    $P5001 = _lex_param_1."SET_CAPS"(_lex_param_3)
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "store_regex_alt_nfa" :subid("cuid_370_1360432459.413") :anon :lex :outer("cuid_499_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3318
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 
    .const 'Sub' $P5008 = 'cuid_502_1360432459.413' 
    capture_lex $P5008 
    .lex "@saved", $P101 
    .lex "self", _lex_param_0 
    .lex "$code_obj", _lex_param_1 
    .lex "$block", _lex_param_2 
    .lex "$key", _lex_param_3 
    .lex "@alternatives", _lex_param_4 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    set $P5002, _lex_param_4
    iter $P5004, _lex_param_4
  for_next8162:
    unless $P5004, for_done8164
    shift $P5006, $P5004
  for_redo8163:
    .const 'Sub' $P5005 = 'cuid_502_1360432459.413' 
    capture_lex $P5005
    $P5002 = $P5005($P5006)
    goto for_next8162
  for_done8164:
.annotate 'line', 3323
    $P5007 = _lex_param_1."SET_ALT_NFA"(_lex_param_3, $P101)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_502_1360432459.413") :anon :lex :outer("cuid_370_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3320
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 3321
    find_lex $P5001, "@saved"
    $P5002 = _lex_param_0."save"(1 :named("non_empty"))
    $P5003 = $P5001."push"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_503_1360432459.413") :anon :lex :outer("cuid_372_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3328
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    nqp_get_sc_object $P5001, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303", 25
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_505_1360432459.413") :load :init
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .const 'Sub' $P5001 = 'cuid_504_1360432459.413' 
    capture_lex $P5001 
    .local pmc cur_sc 
    .local pmc conflicts 
    nqp_dynop_setup 
    nqp_bigint_setup 
    getinterp $P5001
    get_class $P5002, "LexPad"
    get_class $P5003, "NQPLexPad"
    $P5004 = $P5001."hll_map"($P5002, $P5003)
    load_bytecode "ModuleLoader.pbc"
    .const 'Sub' $P5001 = "cuid_372_1360432459.413" 
    get_hll_global $P5002, "ModuleLoader"
    $P5003 = $P5002."load_setting"("NQPCORE")
    $P5004 = $P5001."set_outer_ctx"($P5003)
    load_bytecode "ModuleLoader.pbc"
    get_hll_global $P5001, "ModuleLoader"
    $P5001."load_module"("QRegex")
    load_bytecode "ModuleLoader.pbc"
    get_hll_global $P5001, "ModuleLoader"
    $P5001."load_module"("NQPP6QRegex")
    load_bytecode "ModuleLoader.pbc"
    get_hll_global $P5001, "ModuleLoader"
    $P5001."load_module"("NQPP6QRegex")
    load_bytecode "ModuleLoader.pbc"
    get_hll_global $P5001, "ModuleLoader"
    $P5001."load_module"("QAST")
    nqp_create_sc $P5001, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44"
    set cur_sc, $P5001
    $P5002 = cur_sc."set_description"("src\\stage2\\gen\\NQP.pm")
    new $P5003, 'ResizablePMCArray'
    set conflicts, $P5003
    new $P5004, 'ResizableStringArray'
    null $S5001
    push $P5004, $S5001
    push $P5004, "P6opaque"
    push $P5004, "QAST"
    push $P5004, "QRegex"
    push $P5004, "NQPCursorRole"
    push $P5004, "5AB04DFAFFF209D71179F6DD66C39F5290FAF9C0-1360432433.782"
    push $P5004, "src\\stage2\\QRegex.nqp"
    push $P5004, "NQPMatch"
    push $P5004, "NQPCursor"
    push $P5004, "NQPRegexMethod"
    push $P5004, "NQPRegex"
    push $P5004, "HLL"
    push $P5004, "PIRT"
    push $P5004, "NQP"
    push $P5004, "DEFAULT"
    push $P5004, "CREATE"
    push $P5004, "ABD9389C4F7313CCF2B91182E52EDD293B1B2122-1360432430.303"
    push $P5004, "src\\stage2\\NQPCORE.setting"
    push $P5004, "bless"
    push $P5004, "BUILDALL"
    push $P5004, "new"
    push $P5004, "Str"
    push $P5004, "Numeric"
    push $P5004, "Int"
    push $P5004, "defined"
    push $P5004, "ACCEPTS"
    push $P5004, "isa"
    push $P5004, "__dump"
    push $P5004, "BUILD"
    push $P5004, "slot_for_object"
    push $P5004, "72EB0CEEE110B04F66601526175C9117F069D82E-1360432437.634"
    push $P5004, "src\\stage2\\gen\\NQPHLL.pm"
    push $P5004, "add_object"
    push $P5004, "add_root_code_ref"
    push $P5004, "update_root_code_ref"
    push $P5004, "is_precompilation_mode"
    push $P5004, "add_load_dependency_task"
    push $P5004, "add_fixup_task"
    push $P5004, "sc"
    push $P5004, "handle"
    push $P5004, "code_ref_blocks"
    push $P5004, "load_dependency_tasks"
    push $P5004, "fixup_tasks"
    push $P5004, "push_lexpad"
    push $P5004, "pop_lexpad"
    push $P5004, "cur_lexpad"
    push $P5004, "get_legacy_block_list"
    push $P5004, "load_setting"
    push $P5004, "load_module"
    push $P5004, "import"
    push $P5004, "install_package_symbol"
    push $P5004, "install_lexical_symbol"
    push $P5004, "install_package_routine"
    push $P5004, "create_code"
    push $P5004, "pkg_create_mo"
    push $P5004, "pkg_add_attribute"
    push $P5004, "pkg_add_method"
    push $P5004, "set_routine_signature"
    push $P5004, "pkg_set_body_block"
    push $P5004, "pkg_add_parent_or_role"
    push $P5004, "pkg_add_parrot_vtable_handler_mapping"
    push $P5004, "pkg_compose"
    push $P5004, "run_begin_block"
    push $P5004, "libs"
    push $P5004, "add_initializations"
    push $P5004, "cleanup"
    push $P5004, "is_lexical"
    push $P5004, "is_package"
    push $P5004, "is_scope"
    push $P5004, "known_sym"
    push $P5004, "find_sym"
    push $P5004, "$!sc"
    push $P5004, "$!handle"
    push $P5004, "$!precomp_mode"
    push $P5004, "$!num_code_refs"
    push $P5004, "$!code_ref_blocks"
    push $P5004, "@!load_dependency_tasks"
    push $P5004, "@!fixup_tasks"
    push $P5004, "%!addr_to_slot"
    push $P5004, "@!BLOCKS"
    push $P5004, "%!code_objects_to_fix_up"
    push $P5004, "%!code_object_types"
    push $P5004, "%!code_object_fixup_list"
    push $P5004, "%!code_stub_sc_idx"
    push $P5004, "@!clearup_tasks"
    push $P5004, "MATCH"
    push $P5004, "Bool"
    push $P5004, "parse"
    push $P5004, "!INTERPOLATE"
    push $P5004, "!INTERPOLATE_REGEX"
    push $P5004, "orig"
    push $P5004, "target"
    push $P5004, "from"
    push $P5004, "pos"
    push $P5004, "CAPHASH"
    push $P5004, "!cursor_init"
    push $P5004, "!cursor_start"
    push $P5004, "!cursor_start_subcapture"
    push $P5004, "!cursor_capture"
    push $P5004, "!cursor_push_cstack"
    push $P5004, "!cursor_pass"
    push $P5004, "!cursor_fail"
    push $P5004, "!cursor_pos"
    push $P5004, "!cursor_next"
    push $P5004, "!cursor_more"
    push $P5004, "!reduce"
    push $P5004, "!reduce_with_match"
    push $P5004, "!shared"
    push $P5004, "!protoregex"
    push $P5004, "!protoregex_nfa"
    push $P5004, "!protoregex_table"
    push $P5004, "!alt"
    push $P5004, "!alt_nfa"
    push $P5004, "!precompute_nfas"
    push $P5004, "!dba"
    push $P5004, "!highwater"
    push $P5004, "!highexpect"
    push $P5004, "!fresh_highexpect"
    push $P5004, "!set_highexpect"
    push $P5004, "!clear_highwater"
    push $P5004, "!BACKREF"
    push $P5004, "!LITERAL"
    push $P5004, "at"
    push $P5004, "before"
    push $P5004, "after"
    push $P5004, "ws"
    push $P5004, "ww"
    push $P5004, "wb"
    push $P5004, "ident"
    push $P5004, "alpha"
    push $P5004, "alnum"
    push $P5004, "upper"
    push $P5004, "lower"
    push $P5004, "digit"
    push $P5004, "xdigit"
    push $P5004, "space"
    push $P5004, "blank"
    push $P5004, "cntrl"
    push $P5004, "punct"
    push $P5004, "FAILGOAL"
    push $P5004, "throw_unrecog_backslash_seq"
    push $P5004, "termish"
    push $P5004, "term"
    push $P5004, "infix"
    push $P5004, "prefix"
    push $P5004, "postfix"
    push $P5004, "circumfix"
    push $P5004, "postcircumfix"
    push $P5004, "term:sym<circumfix>"
    push $P5004, "infixish"
    push $P5004, "prefixish"
    push $P5004, "postfixish"
    push $P5004, "nullterm"
    push $P5004, "nullterm_alt"
    push $P5004, "nulltermish"
    push $P5004, "quote_delimited"
    push $P5004, "quote_atom"
    push $P5004, "decint"
    push $P5004, "decints"
    push $P5004, "hexint"
    push $P5004, "hexints"
    push $P5004, "octint"
    push $P5004, "octints"
    push $P5004, "binint"
    push $P5004, "binints"
    push $P5004, "integer"
    push $P5004, "dec_number"
    push $P5004, "escale"
    push $P5004, "quote_escape"
    push $P5004, "quote_escape:sym<backslash>"
    push $P5004, "quote_escape:sym<stopper>"
    push $P5004, "quote_escape:sym<bs>"
    push $P5004, "quote_escape:sym<nl>"
    push $P5004, "quote_escape:sym<cr>"
    push $P5004, "quote_escape:sym<tab>"
    push $P5004, "quote_escape:sym<ff>"
    push $P5004, "quote_escape:sym<esc>"
    push $P5004, "quote_escape:sym<hex>"
    push $P5004, "quote_escape:sym<oct>"
    push $P5004, "quote_escape:sym<chr>"
    push $P5004, "quote_escape:sym<0>"
    push $P5004, "quote_escape:sym<misc>"
    push $P5004, "charname"
    push $P5004, "charnames"
    push $P5004, "charspec"
    push $P5004, "O"
    push $P5004, "panic"
    push $P5004, "peek_delimiters"
    push $P5004, "quote_EXPR"
    push $P5004, "quotemod_check"
    push $P5004, "starter"
    push $P5004, "stopper"
    push $P5004, "split_words"
    push $P5004, "EXPR"
    push $P5004, "EXPR_reduce"
    push $P5004, "EXPR_nonassoc"
    push $P5004, "ternary"
    push $P5004, "MARKER"
    push $P5004, "MARKED"
    push $P5004, "LANG"
    push $P5004, "TOP"
    push $P5004, "identifier"
    push $P5004, "name"
    push $P5004, "deflongname"
    push $P5004, "ENDSTMT"
    push $P5004, "unv"
    push $P5004, "pod_comment"
    push $P5004, "comp_unit"
    push $P5004, "statementlist"
    push $P5004, "statement"
    push $P5004, "eat_terminator"
    push $P5004, "xblock"
    push $P5004, "pblock"
    push $P5004, "lambda"
    push $P5004, "block"
    push $P5004, "blockoid"
    push $P5004, "newpad"
    push $P5004, "outerctx"
    push $P5004, "finishpad"
    push $P5004, "you_are_here"
    push $P5004, "terminator"
    push $P5004, "terminator:sym<;>"
    push $P5004, "terminator:sym<}>"
    push $P5004, "statement_control"
    push $P5004, "statement_control:sym<use>"
    push $P5004, "statement_control:sym<if>"
    push $P5004, "statement_control:sym<unless>"
    push $P5004, "statement_control:sym<while>"
    push $P5004, "statement_control:sym<repeat>"
    push $P5004, "statement_control:sym<for>"
    push $P5004, "statement_control:sym<CATCH>"
    push $P5004, "statement_control:sym<CONTROL>"
    push $P5004, "statement_prefix"
    push $P5004, "statement_prefix:sym<BEGIN>"
    push $P5004, "statement_prefix:sym<INIT>"
    push $P5004, "statement_prefix:sym<try>"
    push $P5004, "blorst"
    push $P5004, "statement_mod_cond"
    push $P5004, "statement_mod_cond:sym<if>"
    push $P5004, "statement_mod_cond:sym<unless>"
    push $P5004, "statement_mod_loop"
    push $P5004, "statement_mod_loop:sym<while>"
    push $P5004, "statement_mod_loop:sym<until>"
    push $P5004, "statement_mod_loop:sym<for>"
    push $P5004, "term:sym<fatarrow>"
    push $P5004, "term:sym<colonpair>"
    push $P5004, "term:sym<variable>"
    push $P5004, "term:sym<package_declarator>"
    push $P5004, "term:sym<scope_declarator>"
    push $P5004, "term:sym<routine_declarator>"
    push $P5004, "term:sym<multi_declarator>"
    push $P5004, "term:sym<regex_declarator>"
    push $P5004, "term:sym<statement_prefix>"
    push $P5004, "term:sym<lambda>"
    push $P5004, "fatarrow"
    push $P5004, "colonpair"
    push $P5004, "variable"
    push $P5004, "sigil"
    push $P5004, "twigil"
    push $P5004, "package_declarator"
    push $P5004, "package_declarator:sym<module>"
    push $P5004, "package_declarator:sym<knowhow>"
    push $P5004, "package_declarator:sym<class>"
    push $P5004, "package_declarator:sym<grammar>"
    push $P5004, "package_declarator:sym<role>"
    push $P5004, "package_declarator:sym<native>"
    push $P5004, "package_declarator:sym<stub>"
    push $P5004, "package_def"
    push $P5004, "role_params"
    push $P5004, "scope_declarator"
    push $P5004, "scope_declarator:sym<my>"
    push $P5004, "scope_declarator:sym<our>"
    push $P5004, "scope_declarator:sym<has>"
    push $P5004, "scoped"
    push $P5004, "typename"
    push $P5004, "declarator"
    push $P5004, "variable_declarator"
    push $P5004, "routine_declarator"
    push $P5004, "routine_declarator:sym<sub>"
    push $P5004, "routine_declarator:sym<method>"
    push $P5004, "routine_def"
    push $P5004, "method_def"
    push $P5004, "onlystar"
    push $P5004, "multi_declarator"
    push $P5004, "multi_declarator:sym<multi>"
    push $P5004, "multi_declarator:sym<proto>"
    push $P5004, "multi_declarator:sym<null>"
    push $P5004, "signature"
    push $P5004, "parameter"
    push $P5004, "param_var"
    push $P5004, "named_param"
    push $P5004, "default_value"
    push $P5004, "trait"
    push $P5004, "trait_mod"
    push $P5004, "trait_mod:sym<is>"
    push $P5004, "regex_declarator"
    push $P5004, "dotty"
    push $P5004, "term:sym<self>"
    push $P5004, "term:sym<identifier>"
    push $P5004, "term:sym<name>"
    push $P5004, "term:sym<pir::op>"
    push $P5004, "term:sym<pir::const>"
    push $P5004, "term:sym<nqp::op>"
    push $P5004, "term:sym<onlystar>"
    push $P5004, "args"
    push $P5004, "arglist"
    push $P5004, "term:sym<value>"
    push $P5004, "value"
    push $P5004, "number"
    push $P5004, "quote"
    push $P5004, "quote:sym<apos>"
    push $P5004, "quote:sym<dblq>"
    push $P5004, "quote:sym<q>"
    push $P5004, "quote:sym<qq>"
    push $P5004, "quote:sym<Q>"
    push $P5004, "quote:sym<Q:PIR>"
    push $P5004, "quote:sym</ />"
    push $P5004, "quote_escape:sym<$>"
    push $P5004, "quote_escape:sym<{ }>"
    push $P5004, "circumfix:sym<( )>"
    push $P5004, "circumfix:sym<[ ]>"
    push $P5004, "circumfix:sym<ang>"
    push $P5004, utf8:"circumfix:sym<\x{ab} \x{bb}>"
    push $P5004, "circumfix:sym<{ }>"
    push $P5004, "semilist"
    push $P5004, "infixstopper"
    push $P5004, "postcircumfix:sym<[ ]>"
    push $P5004, "postcircumfix:sym<{ }>"
    push $P5004, "postcircumfix:sym<ang>"
    push $P5004, "postcircumfix:sym<( )>"
    push $P5004, "postfix:sym<.>"
    push $P5004, "prefix:sym<++>"
    push $P5004, "prefix:sym<-->"
    push $P5004, "postfix:sym<++>"
    push $P5004, "postfix:sym<-->"
    push $P5004, "infix:sym<**>"
    push $P5004, "prefix:sym<+>"
    push $P5004, "prefix:sym<~>"
    push $P5004, "prefix:sym<->"
    push $P5004, "prefix:sym<?>"
    push $P5004, "prefix:sym<!>"
    push $P5004, "prefix:sym<|>"
    push $P5004, "infix:sym<*>"
    push $P5004, "infix:sym</>"
    push $P5004, "infix:sym<%>"
    push $P5004, "infix:sym<+&>"
    push $P5004, "infix:sym<+>"
    push $P5004, "infix:sym<->"
    push $P5004, "infix:sym<+|>"
    push $P5004, "infix:sym<+^>"
    push $P5004, "infix:sym<~>"
    push $P5004, "infix:sym<==>"
    push $P5004, "infix:sym<!=>"
    push $P5004, "infix:sym<<=>"
    push $P5004, "infix:sym<>=>"
    push $P5004, "infix:sym<<>"
    push $P5004, "infix:sym<>>"
    push $P5004, "infix:sym<eq>"
    push $P5004, "infix:sym<ne>"
    push $P5004, "infix:sym<le>"
    push $P5004, "infix:sym<ge>"
    push $P5004, "infix:sym<lt>"
    push $P5004, "infix:sym<gt>"
    push $P5004, "infix:sym<=:=>"
    push $P5004, "infix:sym<~~>"
    push $P5004, "infix:sym<&&>"
    push $P5004, "infix:sym<||>"
    push $P5004, "infix:sym<//>"
    push $P5004, "infix:sym<?? !!>"
    push $P5004, "infix:sym<=>"
    push $P5004, "infix:sym<:=>"
    push $P5004, "infix:sym<::=>"
    push $P5004, "infix:sym<,>"
    push $P5004, "prefix:sym<return>"
    push $P5004, "prefix:sym<make>"
    push $P5004, "term:sym<last>"
    push $P5004, "term:sym<next>"
    push $P5004, "term:sym<redo>"
    push $P5004, "smartmatch"
    push $P5004, "$!shared"
    push $P5004, "$!from"
    push $P5004, "$!pos"
    push $P5004, "$!match"
    push $P5004, "$!name"
    push $P5004, "$!bstack"
    push $P5004, "$!cstack"
    push $P5004, "$!regexsub"
    push $P5004, "$!restart"
    push $P5004, "C939CDD406A29BF4FCD94E2EF364FAD58DAB3EBB-1360432455.316"
    push $P5004, "src\\stage2\\gen\\NQPP6QRegex.pm"
    push $P5004, "obs"
    push $P5004, "throw_unrecognized_metachar"
    push $P5004, "throw_null_pattern"
    push $P5004, "normspace"
    push $P5004, "arg"
    push $P5004, "nibbler"
    push $P5004, "rxstopper"
    push $P5004, "termaltseq"
    push $P5004, "termconjseq"
    push $P5004, "termalt"
    push $P5004, "termconj"
    push $P5004, "quantified_atom"
    push $P5004, "separator"
    push $P5004, "atom"
    push $P5004, "quantifier"
    push $P5004, "quantifier:sym<*>"
    push $P5004, "quantifier:sym<+>"
    push $P5004, "quantifier:sym<?>"
    push $P5004, "quantifier:sym<{N,M}>"
    push $P5004, "quantifier:sym<**>"
    push $P5004, "backmod"
    push $P5004, "metachar"
    push $P5004, "metachar:sym<ws>"
    push $P5004, "metachar:sym<[ ]>"
    push $P5004, "metachar:sym<( )>"
    push $P5004, "metachar:sym<'>"
    push $P5004, "metachar:sym<\">"
    push $P5004, "metachar:sym<.>"
    push $P5004, "metachar:sym<^>"
    push $P5004, "metachar:sym<^^>"
    push $P5004, "metachar:sym<$>"
    push $P5004, "metachar:sym<$$>"
    push $P5004, "metachar:sym<:::>"
    push $P5004, "metachar:sym<::>"
    push $P5004, "metachar:sym<lwb>"
    push $P5004, "metachar:sym<rwb>"
    push $P5004, "metachar:sym<from>"
    push $P5004, "metachar:sym<to>"
    push $P5004, "metachar:sym<bs>"
    push $P5004, "metachar:sym<mod>"
    push $P5004, "metachar:sym<quantifier>"
    push $P5004, "metachar:sym<~>"
    push $P5004, "metachar:sym<{*}>"
    push $P5004, "metachar:sym<assert>"
    push $P5004, "metachar:sym<var>"
    push $P5004, "backslash"
    push $P5004, "backslash:sym<s>"
    push $P5004, "backslash:sym<b>"
    push $P5004, "backslash:sym<e>"
    push $P5004, "backslash:sym<f>"
    push $P5004, "backslash:sym<h>"
    push $P5004, "backslash:sym<r>"
    push $P5004, "backslash:sym<t>"
    push $P5004, "backslash:sym<v>"
    push $P5004, "backslash:sym<o>"
    push $P5004, "backslash:sym<x>"
    push $P5004, "backslash:sym<c>"
    push $P5004, "backslash:sym<A>"
    push $P5004, "backslash:sym<z>"
    push $P5004, "backslash:sym<Z>"
    push $P5004, "backslash:sym<Q>"
    push $P5004, "backslash:sym<unrec>"
    push $P5004, "backslash:sym<misc>"
    push $P5004, "assertion"
    push $P5004, "assertion:sym<?>"
    push $P5004, "assertion:sym<!>"
    push $P5004, "assertion:sym<|>"
    push $P5004, "assertion:sym<method>"
    push $P5004, "assertion:sym<name>"
    push $P5004, "assertion:sym<[>"
    push $P5004, "cclass_elem"
    push $P5004, "mod_internal"
    push $P5004, "mod_ident"
    push $P5004, "mod_ident:sym<ignorecase>"
    push $P5004, "mod_ident:sym<ratchet>"
    push $P5004, "mod_ident:sym<sigspace>"
    push $P5004, "mod_ident:sym<dba>"
    push $P5004, "mod_ident:sym<oops>"
    push $P5004, "metachar:sym<:my>"
    push $P5004, "metachar:sym<{ }>"
    push $P5004, "metachar:sym<nqpvar>"
    push $P5004, "assertion:sym<{ }>"
    push $P5004, "assertion:sym<?{ }>"
    push $P5004, "assertion:sym<var>"
    push $P5004, "codeblock"
    push $P5004, "ints_to_string"
    push $P5004, "CTXSAVE"
    push $P5004, "SET_BLOCK_OUTER_CTX"
    push $P5004, "qbuildsub"
    push $P5004, "alt_nfas"
    push $P5004, "subrule_alias"
    push $P5004, "flip_ast"
    push $P5004, "create_regex_code_object"
    push $P5004, "store_regex_caps"
    push $P5004, "store_regex_nfa"
    push $P5004, "store_regex_alt_nfa"
    push $P5004, "language"
    push $P5004, "compiler"
    push $P5004, "config"
    push $P5004, "autoprint"
    push $P5004, "interactive"
    push $P5004, "interactive_result"
    push $P5004, "interactive_exception"
    push $P5004, "eval"
    push $P5004, "ctxsave"
    push $P5004, "stages"
    push $P5004, "parsegrammar"
    push $P5004, "parseactions"
    push $P5004, "interactive_banner"
    push $P5004, "interactive_prompt"
    push $P5004, "compiler_progname"
    push $P5004, "commandline_options"
    push $P5004, "command_line"
    push $P5004, "command_eval"
    push $P5004, "process_args"
    push $P5004, "evalfiles"
    push $P5004, "compile"
    push $P5004, "start"
    push $P5004, "past"
    push $P5004, "post"
    push $P5004, "pirbegin"
    push $P5004, "pir"
    push $P5004, "evalpmc"
    push $P5004, "dumper"
    push $P5004, "usage"
    push $P5004, "version"
    push $P5004, "show-config"
    push $P5004, "verbose-config"
    push $P5004, "vmstat"
    push $P5004, "nqpevent"
    push $P5004, "removestage"
    push $P5004, "addstage"
    push $P5004, "parse_name"
    push $P5004, "lineof"
    push $P5004, "user-progname"
    push $P5004, "cli-options"
    push $P5004, "cli-arguments"
    push $P5004, "@!stages"
    push $P5004, "$!parsegrammar"
    push $P5004, "$!parseactions"
    push $P5004, "@!cmdoptions"
    push $P5004, "$!usage"
    push $P5004, "$!compiler_progname"
    push $P5004, "$!language"
    push $P5004, "%!config"
    push $P5004, "$!user_progname"
    push $P5004, "@!cli-arguments"
    push $P5004, "%!cli-options"
    push $P5004, ""
    push $P5004, utf8:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000"
    push $P5004, "alt_nfa__1_1360432460.611"
    push $P5004, "alt_nfa__2_1360432460.626"
    push $P5004, utf8:"\n\x{b}\f\r\x{85}\u2028\u2029"
    push $P5004, "alt_nfa__4_1360432460.644"
    push $P5004, "alt_nfa__3_1360432460.636"
    push $P5004, "alt_nfa__6_1360432460.723"
    push $P5004, "alt_nfa__5_1360432460.711"
    push $P5004, "alt_nfa__7_1360432460.806"
    push $P5004, "alt_nfa__9_1360432460.825"
    push $P5004, "alt_nfa__8_1360432460.812"
    push $P5004, "{"
    push $P5004, "alt_nfa__10_1360432460.851"
    push $P5004, "alt_nfa__11_1360432460.856"
    push $P5004, ";"
    push $P5004, "}"
    push $P5004, "sym"
    push $P5004, "else"
    push $P5004, "alt_nfa__12_1360432460.949"
    push $P5004, "wu"
    push $P5004, "alt_nfa__13_1360432460.968"
    push $P5004, "alt_nfa__14_1360432460.969"
    push $P5004, "alt_nfa__15_1360432460.969"
    push $P5004, "alt_nfa__16_1360432461.016"
    push $P5004, "cond"
    push $P5004, "alt_nfa__17_1360432461.082"
    push $P5004, "alt_nfa__18_1360432461.089"
    push $P5004, "key"
    push $P5004, "val"
    push $P5004, "not"
    push $P5004, "alt_nfa__19_1360432461.126"
    push $P5004, "desigilname"
    push $P5004, "<"
    push $P5004, "/_!"
    push $P5004, "alt_nfa__20_1360432461.143"
    push $P5004, "$@%&"
    push $P5004, "*!?"
    push $P5004, "metaclass"
    push $P5004, "repr"
    push $P5004, "export"
    push $P5004, "parent"
    push $P5004, "role"
    push $P5004, "alt_nfa__21_1360432461.479"
    push $P5004, "alt_nfa__22_1360432461.492"
    push $P5004, "alt_nfa__23_1360432461.538"
    push $P5004, "latename"
    push $P5004, "private"
    push $P5004, "alt_nfa__24_1360432461.572"
    push $P5004, "invocant"
    push $P5004, "alt_nfa__26_1360432461.642"
    push $P5004, "alt_nfa__25_1360432461.637"
    push $P5004, "definedness"
    push $P5004, "quant"
    push $P5004, "_DU"
    push $P5004, "alt_nfa__27_1360432461.664"
    push $P5004, "alt_nfa__28_1360432461.665"
    push $P5004, "alt_nfa__29_1360432461.665"
    push $P5004, "/!"
    push $P5004, "alt_nfa__30_1360432461.674"
    push $P5004, "longname"
    push $P5004, "proto"
    push $P5004, "p6regex"
    push $P5004, "alt_nfa__31_1360432461.778"
    push $P5004, "alt_nfa__32_1360432461.779"
    push $P5004, "alt_nfa__33_1360432461.779"
    push $P5004, "'\""
    push $P5004, "("
    push $P5004, "alt_nfa__34_1360432461.801"
    push $P5004, "alt_nfa__35_1360432461.801"
    push $P5004, "op"
    push $P5004, "const"
    push $P5004, "alt_nfa__36_1360432461.865"
    push $P5004, "alt_nfa__37_1360432461.873"
    push $P5004, "sign"
    push $P5004, "alt_nfa__38_1360432461.882"
    push $P5004, "'"
    push $P5004, "\""
    push $P5004, "$"
    push $P5004, utf8:"\x{ab}"
    push $P5004, "OPER"
    push $P5004, ">"
    push $P5004, "}/"
    push $P5004, "var"
    push $P5004, "alt_nfa__39_1360432462.616"
    push $P5004, "alt_nfa__40_1360432462.638"
    push $P5004, "alt_nfa__41_1360432462.65"
    push $P5004, "zw"
    push $P5004, "?!"
    push $P5004, "alt_nfa__42_1360432462.68"
    push $P5004, "$@"
    push $P5004, "__6MODEL_CORE__"
    push $P5004, "GLOBALish"
    push $P5004, "EXPORT"
    push $P5004, "46A27B8E73DBD8EFB3FE1AA531DA4577B21729DD-1360432426.959"
    push $P5004, "src\\stage2\\gen\\nqp-mo.pm"
    push $P5004, "NQP::World"
    push $P5004, "NQP::Grammar"
    push $P5004, "alt_nfa__1_1360432437.732"
    push $P5004, "alt_nfa__2_1360432437.761"
    push $P5004, "alt_nfa__3_1360432437.823"
    push $P5004, "alt_nfa__4_1360432437.823"
    push $P5004, "alt_nfa__5_1360432437.841"
    push $P5004, "alt_nfa__6_1360432437.909"
    push $P5004, "alt_nfa__7_1360432437.921"
    push $P5004, "alt_nfa__8_1360432437.954"
    push $P5004, "alt_nfa__9_1360432437.991"
    push $P5004, "shared"
    push $P5004, "match"
    push $P5004, "bstack"
    push $P5004, "cstack"
    push $P5004, "regexsub"
    push $P5004, "restart"
    push $P5004, "NQP::Regex"
    push $P5004, "alt_nfa__1_1360432455.432"
    push $P5004, "alt_nfa__2_1360432455.437"
    push $P5004, "alt_nfa__3_1360432455.459"
    push $P5004, "alt_nfa__4_1360432455.519"
    push $P5004, "alt_nfa__5_1360432455.536"
    push $P5004, "alt_nfa__6_1360432455.586"
    push $P5004, "alt_nfa__7_1360432455.61"
    push $P5004, "alt_nfa__8_1360432455.628"
    push $P5004, "alt_nfa__9_1360432455.693"
    push $P5004, "alt_nfa__10_1360432455.761"
    push $P5004, "alt_nfa__11_1360432455.768"
    push $P5004, "alt_nfa__12_1360432455.845"
    push $P5004, "alt_nfa__13_1360432455.901"
    push $P5004, "alt_nfa__14_1360432455.912"
    push $P5004, "alt_nfa__15_1360432455.975"
    push $P5004, "alt_nfa__16_1360432455.984"
    push $P5004, "alt_nfa__17_1360432456.013"
    push $P5004, "alt_nfa__18_1360432456.021"
    push $P5004, "alt_nfa__19_1360432456.078"
    push $P5004, "alt_nfa__20_1360432456.079"
    push $P5004, "alt_nfa__21_1360432456.079"
    push $P5004, "alt_nfa__23_1360432456.106"
    push $P5004, "alt_nfa__24_1360432456.106"
    push $P5004, "alt_nfa__22_1360432456.085"
    push $P5004, "NQP::Actions"
    push $P5004, "NQP::RegexActions"
    push $P5004, "NQP::Compiler"
    push $P5004, "CompileTimeValue"
    push $P5004, "0F0DF90FED7150920ABEE8E1CF7EE9465CABED20-1360432432.128"
    push $P5004, "src\\stage2\\QASTNode.nqp"
    push $P5004, "SpecialArg"
    push $P5004, "Node"
    push $P5004, "Regex"
    push $P5004, "IVal"
    push $P5004, "NVal"
    push $P5004, "SVal"
    push $P5004, "BVal"
    push $P5004, "WVal"
    push $P5004, "Want"
    push $P5004, "Var"
    push $P5004, "VarWithFallback"
    push $P5004, "Op"
    push $P5004, "VM"
    push $P5004, "Stmts"
    push $P5004, "Stmt"
    push $P5004, "Block"
    push $P5004, "Unquote"
    push $P5004, "CompUnit"
    push $P5004, "InlinePlaceholder"
    push $P5004, "Operations"
    push $P5004, "8D12024392F682243713F6B3D4FD5D824BC3A0C8-1360432442.462"
    push $P5004, "src\\stage2\\QAST.nqp"
    push $P5004, "Compiler"
    push $P5004, "NFA"
    push $P5004, "P6Regex"
    push $P5004, "Grammar"
    push $P5004, "Actions"
    push $P5004, "CommandLine"
    push $P5004, "World"
    push $P5004, "CallResult"
    push $P5004, "Sub"
    push $P5004, "Ops"
    push $P5004, "Label"
    push $P5004, "RegexActions"
    push $P5004, "Ee"
    push $P5004, "01"
    push $P5004, "01234567"
    push $P5004, "0123456789abcdefABCDEF"
    push $P5004, "?@ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    push $P5004, "dDnNsSwW"
    push $P5004, "bB"
    push $P5004, "eE"
    push $P5004, "fF"
    push $P5004, "hH"
    push $P5004, "rR"
    push $P5004, "tT"
    push $P5004, "vV"
    push $P5004, "oO"
    push $P5004, "xX"
    push $P5004, "cC"
    push $P5004, "&|~"
    .const 'Sub' $P5005 = 'cuid_504_1360432459.413' 
    capture_lex $P5005
    $P5006 = $P5005()
    nqp_deserialize_sc "", cur_sc, $P5004, $P5006, conflicts
    unless conflicts goto if4097_end8177 
    die "Repossession conflicts occurred during deserialization"
  if4097_end8177:
    .const "LexInfo" $P5001 = "cuid_372_1360432459.413"
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    $P5001."set_static_lexpad_value"("GLOBALish", $P5002)
    .const "LexInfo" $P5003 = "cuid_372_1360432459.413"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_372_1360432459.413"
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 0
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_372_1360432459.413"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_372_1360432459.413"
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 1
    $P5001."set_static_lexpad_value"("EXPORT", $P5002)
    .const "LexInfo" $P5003 = "cuid_372_1360432459.413"
    $P5004 = $P5003."finish_static_lexpad"()
    .const 'Sub' $P5001 = "cuid_1_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 4
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_2_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 5
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_3_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 6
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_4_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 7
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_5_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 8
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_6_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 9
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_7_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 10
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_8_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 11
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_9_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 12
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_10_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 13
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_11_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 14
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_12_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 15
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_13_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 16
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_14_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 17
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_15_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 18
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_16_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 19
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_17_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 20
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_18_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 21
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_19_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 22
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_20_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 23
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_21_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 24
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_22_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 25
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_23_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 26
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_24_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 27
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_25_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 28
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_26_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 29
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_27_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 30
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_28_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 31
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_29_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 32
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_30_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 33
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_31_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 34
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_32_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 35
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_33_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 36
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_34_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 37
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_375_1360432459.413"
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 3
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_375_1360432459.413"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_375_1360432459.413"
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 3
    $P5001."set_static_lexpad_value"("$?CLASS", $P5002)
    .const "LexInfo" $P5003 = "cuid_375_1360432459.413"
    $P5004 = $P5003."finish_static_lexpad"()
    .const 'Sub' $P5001 = "cuid_35_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 39
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_36_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 40
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_37_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 41
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_38_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 42
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_39_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 43
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_40_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 44
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_41_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 45
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_42_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 46
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_43_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 47
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_44_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 48
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_45_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 49
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_46_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 50
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_47_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 51
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_48_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 52
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_49_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 53
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_50_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 54
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_51_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 55
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_52_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 56
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_53_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 57
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_54_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 58
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_55_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 59
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_56_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 60
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_57_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 61
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_58_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 62
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_59_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 63
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_60_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 64
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_61_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 65
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_62_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 66
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_63_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 67
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_64_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 68
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_65_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 69
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_66_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 70
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_67_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 71
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_68_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 72
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_69_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 73
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_70_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 74
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_71_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 75
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_72_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 76
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_73_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 77
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_74_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 78
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_75_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 79
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_76_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 80
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_77_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 81
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_78_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 82
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_79_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 83
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_80_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 84
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_81_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 85
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_82_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 86
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_83_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 87
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_84_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 88
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_85_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 89
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_86_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 90
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_87_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 91
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_88_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 92
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_89_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 93
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_90_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 94
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_91_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 95
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_92_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 96
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_93_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 97
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_94_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 98
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_95_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 99
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_96_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 100
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_97_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 101
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_98_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 102
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_99_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 103
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_100_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 104
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_101_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 105
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_102_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 106
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_103_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 107
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_104_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 108
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_105_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 109
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_106_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 110
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_107_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 111
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_108_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 112
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_109_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 113
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_110_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 114
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_111_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 115
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_112_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 116
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_113_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 117
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_114_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 118
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_115_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 119
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_116_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 120
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_117_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 121
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_118_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 122
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_119_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 123
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_120_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 124
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_121_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 125
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_122_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 126
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_123_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 127
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_124_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 128
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_125_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 129
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_126_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 130
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_127_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 131
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_128_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 132
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_129_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 133
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_130_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 134
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_131_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 135
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_132_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 136
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_133_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 137
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_134_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 138
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_135_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 139
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_136_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 140
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_137_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 141
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_138_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 142
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_139_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 143
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_140_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 144
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_141_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 145
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_142_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 146
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_143_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 147
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_144_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 148
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_145_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 149
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_146_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 150
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_147_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 151
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_148_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 152
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_149_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 153
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_150_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 154
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_151_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 155
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_152_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 156
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_153_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 157
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_154_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 158
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_155_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 159
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_156_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 160
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_157_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 161
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_158_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 162
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_159_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 163
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_160_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 164
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_161_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 165
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_162_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 166
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_163_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 167
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_164_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 168
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_165_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 169
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_166_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 170
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_167_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 171
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_168_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 172
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_169_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 173
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_170_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 174
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_171_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 175
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_172_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 176
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_173_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 177
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_174_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 178
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_175_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 179
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_176_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 180
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_177_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 181
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_178_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 182
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_179_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 183
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_180_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 184
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_181_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 185
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_182_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 186
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_183_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 187
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_184_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 188
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_185_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 189
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_186_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 190
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_187_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 191
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_188_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 192
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_189_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 193
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_190_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 194
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_191_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 195
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_192_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 196
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_193_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 197
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_194_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 198
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_195_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 199
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_196_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 200
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_197_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 201
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_198_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 202
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_199_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 203
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_200_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 204
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_201_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 205
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_202_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 206
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_203_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 207
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_204_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 208
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_205_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 209
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_206_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 210
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_207_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 211
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_208_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 212
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_209_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 213
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_210_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 214
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_211_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 215
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_212_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 216
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_213_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 217
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_214_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 218
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_215_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 219
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_216_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 220
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_217_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 221
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_218_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 222
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_219_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 223
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_220_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 224
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_221_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 225
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_222_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 226
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_223_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 227
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_224_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 228
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_225_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 229
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_226_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 230
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_395_1360432459.413"
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 38
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_395_1360432459.413"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_395_1360432459.413"
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 38
    $P5001."set_static_lexpad_value"("$?CLASS", $P5002)
    .const "LexInfo" $P5003 = "cuid_395_1360432459.413"
    $P5004 = $P5003."finish_static_lexpad"()
    .const 'Sub' $P5001 = "cuid_227_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 232
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_228_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 233
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_229_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 234
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_230_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 235
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_231_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 236
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_232_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 237
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_233_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 238
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_234_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 239
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_235_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 240
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_236_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 241
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_237_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 242
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_238_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 243
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_239_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 244
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_240_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 245
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_241_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 246
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_242_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 247
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_243_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 248
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_244_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 249
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_245_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 250
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_246_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 251
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_414_1360432459.413"
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 231
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_414_1360432459.413"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_414_1360432459.413"
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 231
    $P5001."set_static_lexpad_value"("$?CLASS", $P5002)
    .const "LexInfo" $P5003 = "cuid_414_1360432459.413"
    $P5004 = $P5003."finish_static_lexpad"()
    .const 'Sub' $P5001 = "cuid_247_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 253
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_248_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 254
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_249_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 255
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_250_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 256
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_251_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 257
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_252_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 258
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_253_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 259
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_254_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 260
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_255_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 261
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_256_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 262
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_257_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 263
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_258_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 264
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_259_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 265
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_260_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 266
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_261_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 267
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_262_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 268
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_263_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 269
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_264_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 270
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_265_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 271
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_266_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 272
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_267_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 273
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_268_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 274
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_269_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 275
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_270_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 276
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_271_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 277
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_272_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 278
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_273_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 279
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_274_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 280
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_275_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 281
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_276_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 282
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_277_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 283
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_278_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 284
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_279_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 285
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_280_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 286
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_281_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 287
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_282_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 288
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_283_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 289
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_284_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 290
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_285_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 291
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_286_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 292
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_287_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 293
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_288_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 294
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_289_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 295
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_290_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 296
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_291_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 297
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_292_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 298
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_293_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 299
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_294_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 300
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_295_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 301
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_296_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 302
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_297_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 303
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_298_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 304
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_299_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 305
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_300_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 306
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_301_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 307
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_302_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 308
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_303_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 309
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_304_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 310
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_305_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 311
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_306_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 312
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_307_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 313
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_308_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 314
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_309_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 315
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_310_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 316
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_311_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 317
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_312_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 318
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_313_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 319
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_314_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 320
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_315_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 321
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_316_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 322
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_317_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 323
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_318_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 324
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_319_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 325
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_320_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 326
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_321_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 327
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_322_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 328
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_323_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 329
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_324_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 330
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_325_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 331
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_326_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 332
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_327_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 333
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_328_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 334
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_329_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 335
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_330_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 336
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_331_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 337
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_332_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 338
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_333_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 339
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_334_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 340
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_335_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 341
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_336_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 342
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_337_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 343
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_338_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 344
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_339_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 345
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_340_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 346
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_341_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 347
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_342_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 348
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_343_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 349
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_344_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 350
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_345_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 351
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_346_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 352
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_347_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 353
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_348_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 354
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_349_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 355
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_350_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 356
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_351_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 357
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_352_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 358
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_353_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 359
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_354_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 360
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_355_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 361
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_356_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 362
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_357_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 363
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_424_1360432459.413"
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 252
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_424_1360432459.413"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_424_1360432459.413"
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 252
    $P5001."set_static_lexpad_value"("$?CLASS", $P5002)
    .const "LexInfo" $P5003 = "cuid_424_1360432459.413"
    $P5004 = $P5003."finish_static_lexpad"()
    .const 'Sub' $P5001 = "cuid_358_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 365
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_359_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 366
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_360_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 367
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_361_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 368
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_362_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 369
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_363_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 370
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_364_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 371
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_365_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 372
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_366_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 373
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_367_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 374
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_368_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 375
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_369_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 376
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_370_1360432459.413" 
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 377
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_499_1360432459.413"
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 364
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_499_1360432459.413"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_499_1360432459.413"
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 364
    $P5001."set_static_lexpad_value"("$?CLASS", $P5002)
    .const "LexInfo" $P5003 = "cuid_499_1360432459.413"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_503_1360432459.413"
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 378
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_503_1360432459.413"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_503_1360432459.413"
    nqp_get_sc_object $P5002, "3E774CF2B2215B98883AEBF736C0CD6059D220B6-1360432459.44", 378
    $P5001."set_static_lexpad_value"("$?CLASS", $P5002)
    .const "LexInfo" $P5003 = "cuid_503_1360432459.413"
    $P5004 = $P5003."finish_static_lexpad"()
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_504_1360432459.413") :anon :lex :outer("cuid_505_1360432459.413")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    new $P5001, 'ResizablePMCArray'
    .const 'Sub' $P5002 = "cuid_1_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_2_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_3_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_4_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_5_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_6_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_7_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_8_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_9_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_10_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_11_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_12_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_13_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_14_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_15_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_16_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_17_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_18_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_19_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_20_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_21_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_22_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_23_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_24_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_25_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_26_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_27_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_28_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_29_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_30_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_31_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_32_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_33_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_34_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_35_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_36_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_37_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_38_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_39_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_40_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_41_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_42_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_43_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_44_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_45_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_46_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_47_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_48_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_49_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_50_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_51_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_52_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_53_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_54_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_55_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_56_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_57_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_58_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_59_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_60_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_61_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_62_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_63_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_64_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_65_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_66_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_67_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_68_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_69_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_70_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_71_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_72_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_73_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_74_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_75_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_76_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_77_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_78_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_79_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_80_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_81_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_82_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_83_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_84_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_85_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_86_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_87_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_88_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_89_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_90_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_91_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_92_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_93_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_94_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_95_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_96_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_97_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_98_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_99_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_100_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_101_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_102_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_103_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_104_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_105_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_106_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_107_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_108_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_109_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_110_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_111_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_112_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_113_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_114_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_115_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_116_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_117_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_118_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_119_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_120_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_121_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_122_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_123_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_124_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_125_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_126_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_127_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_128_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_129_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_130_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_131_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_132_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_133_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_134_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_135_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_136_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_137_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_138_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_139_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_140_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_141_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_142_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_143_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_144_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_145_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_146_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_147_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_148_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_149_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_150_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_151_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_152_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_153_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_154_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_155_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_156_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_157_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_158_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_159_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_160_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_161_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_162_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_163_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_164_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_165_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_166_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_167_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_168_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_169_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_170_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_171_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_172_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_173_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_174_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_175_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_176_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_177_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_178_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_179_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_180_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_181_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_182_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_183_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_184_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_185_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_186_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_187_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_188_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_189_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_190_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_191_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_192_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_193_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_194_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_195_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_196_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_197_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_198_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_199_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_200_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_201_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_202_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_203_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_204_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_205_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_206_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_207_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_208_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_209_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_210_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_211_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_212_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_213_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_214_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_215_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_216_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_217_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_218_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_219_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_220_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_221_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_222_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_223_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_224_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_225_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_226_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_227_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_228_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_229_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_230_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_231_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_232_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_233_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_234_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_235_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_236_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_237_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_238_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_239_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_240_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_241_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_242_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_243_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_244_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_245_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_246_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_247_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_248_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_249_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_250_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_251_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_252_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_253_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_254_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_255_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_256_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_257_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_258_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_259_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_260_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_261_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_262_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_263_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_264_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_265_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_266_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_267_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_268_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_269_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_270_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_271_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_272_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_273_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_274_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_275_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_276_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_277_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_278_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_279_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_280_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_281_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_282_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_283_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_284_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_285_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_286_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_287_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_288_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_289_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_290_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_291_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_292_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_293_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_294_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_295_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_296_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_297_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_298_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_299_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_300_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_301_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_302_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_303_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_304_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_305_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_306_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_307_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_308_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_309_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_310_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_311_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_312_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_313_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_314_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_315_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_316_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_317_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_318_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_319_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_320_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_321_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_322_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_323_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_324_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_325_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_326_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_327_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_328_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_329_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_330_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_331_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_332_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_333_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_334_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_335_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_336_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_337_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_338_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_339_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_340_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_341_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_342_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_343_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_344_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_345_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_346_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_347_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_348_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_349_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_350_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_351_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_352_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_353_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_354_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_355_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_356_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_357_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_358_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_359_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_360_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_361_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_362_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_363_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_364_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_365_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_366_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_367_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_368_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_369_1360432459.413" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_370_1360432459.413" 
    push $P5001, $P5002
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_506_1360432459.413") :load
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .const 'Sub' $P5001 = "cuid_372_1360432459.413" 
    $P5002 = $P5001()
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_507_1360432459.413") :main
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc ARGS :slurpy 
    .const 'Sub' $P5001 = "cuid_372_1360432459.413" 
    $P5002 = $P5001(ARGS :flat)
    .return ($P5002) 
.end