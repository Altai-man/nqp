.include 'cclass.pasm'
.include 'except_severity.pasm'
.include 'except_types.pasm'
.include 'iglobals.pasm'
.include 'interpinfo.pasm'
.include 'iterator.pasm'
.include 'sysinfo.pasm'
.include 'stat.pasm'
.include 'datatypes.pasm'
.include 'libpaths.pasm'
.loadlib "nqp_group"
.loadlib "nqp_ops"
.loadlib "nqp_bigint_ops"
.loadlib "trans_ops"
.loadlib "io_ops"
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_374_1361734139.417") :anon :lex
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc _lex_param_0 :slurpy 
    .const 'Sub' $P5048 = 'cuid_373_1361734139.417' 
    capture_lex $P5048 
    .const 'Sub' $P5048 = 'cuid_375_1361734139.417' 
    capture_lex $P5048 
    .const 'Sub' $P5048 = 'cuid_376_1361734139.417' 
    capture_lex $P5048 
    .const 'Sub' $P5048 = 'cuid_397_1361734139.417' 
    capture_lex $P5048 
    .const 'Sub' $P5048 = 'cuid_416_1361734139.417' 
    capture_lex $P5048 
    .const 'Sub' $P5048 = 'cuid_417_1361734139.417' 
    capture_lex $P5048 
    .const 'Sub' $P5048 = 'cuid_418_1361734139.417' 
    capture_lex $P5048 
    .const 'Sub' $P5048 = 'cuid_419_1361734139.417' 
    capture_lex $P5048 
    .const 'Sub' $P5048 = 'cuid_420_1361734139.417' 
    capture_lex $P5048 
    .const 'Sub' $P5048 = 'cuid_421_1361734139.417' 
    capture_lex $P5048 
    .const 'Sub' $P5048 = 'cuid_422_1361734139.417' 
    capture_lex $P5048 
    .const 'Sub' $P5048 = 'cuid_423_1361734139.417' 
    capture_lex $P5048 
    .const 'Sub' $P5048 = 'cuid_424_1361734139.417' 
    capture_lex $P5048 
    .const 'Sub' $P5048 = 'cuid_426_1361734139.417' 
    capture_lex $P5048 
    .const 'Sub' $P5048 = 'cuid_504_1361734139.417' 
    capture_lex $P5048 
    .const 'Sub' $P5048 = 'cuid_508_1361734139.417' 
    capture_lex $P5048 
    .lex "GLOBALish", $P101 
    .lex "$?PACKAGE", $P102 
    .lex "EXPORT", $P103 
    .lex "$ops", $P104 
    .lex "$nqpcomp", $P105 
    .lex "@clo", $P106 
    .lex "&MAIN", $P107 
    .lex "&hll-config", $P108 
    .lex "@ARGS", _lex_param_0 
    .local pmc ctxsave 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P104, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P105, $P5002
    new $P5003, 'ResizablePMCArray'
    set $P106, $P5003
    .const 'Sub' $P5004 = 'cuid_373_1361734139.417' 
    capture_lex $P5004
    set $P107, $P5004
    .const 'Sub' $P5005 = 'cuid_375_1361734139.417' 
    capture_lex $P5005
    set $P108, $P5005
    find_dynamic_lex $P5006, "$*CTXSAVE"
    set ctxsave, $P5006
    isnull $I5001, ctxsave
    if $I5001 goto unless10_end11 
    can $I5002, ctxsave, "ctxsave"
    box $P5009, $I5002
    set $P5008, $P5009
    unless $I5002 goto if11_end13 
    $P5007 = ctxsave."ctxsave"()
    set $P5008, $P5007
  if11_end13:
  unless10_end11:
.annotate 'line', 1
    .const 'Sub' $P5010 = 'cuid_376_1361734139.417' 
    capture_lex $P5010
    $P5011 = $P5010()
    .const 'Sub' $P5012 = 'cuid_397_1361734139.417' 
    capture_lex $P5012
    $P5013 = $P5012()
    .const 'Sub' $P5014 = 'cuid_416_1361734139.417' 
    capture_lex $P5014
    $P5015 = $P5014()
.annotate 'line', 1477
    nqp_get_sc_object $P5016, "8401C578AB7B881D927A9D59824BE7FD2532AA0E-1361734121.453", 60
    $P5017 = $P5016."operations"()
    set $P104, $P5017
.annotate 'line', 1479
    .const 'Sub' $P5019 = 'cuid_417_1361734139.417' 
    capture_lex $P5019
    newclosure $P5018, $P5019
    $P104."add_hll_op"("nqp", "preinc", $P5018)
.annotate 'line', 1494
    .const 'Sub' $P5021 = 'cuid_418_1361734139.417' 
    capture_lex $P5021
    newclosure $P5020, $P5021
    $P104."add_hll_op"("nqp", "predec", $P5020)
.annotate 'line', 1509
    .const 'Sub' $P5023 = 'cuid_419_1361734139.417' 
    capture_lex $P5023
    newclosure $P5022, $P5023
    $P104."add_hll_op"("nqp", "postinc", $P5022)
.annotate 'line', 1533
    .const 'Sub' $P5025 = 'cuid_420_1361734139.417' 
    capture_lex $P5025
    newclosure $P5024, $P5025
    $P104."add_hll_op"("nqp", "postdec", $P5024)
.annotate 'line', 1557
    .const 'Sub' $P5027 = 'cuid_421_1361734139.417' 
    capture_lex $P5027
    newclosure $P5026, $P5027
    $P104."add_hll_op"("nqp", "numify", $P5026)
.annotate 'line', 1561
    .const 'Sub' $P5029 = 'cuid_422_1361734139.417' 
    capture_lex $P5029
    newclosure $P5028, $P5029
    $P104."add_hll_op"("nqp", "stringify", $P5028)
.annotate 'line', 1565
    .const 'Sub' $P5031 = 'cuid_423_1361734139.417' 
    capture_lex $P5031
    newclosure $P5030, $P5031
    $P104."add_hll_op"("nqp", "eqaddr", $P5030)
.annotate 'line', 1573
    .const 'Sub' $P5033 = 'cuid_424_1361734139.417' 
    capture_lex $P5033
    newclosure $P5032, $P5033
    $P104."add_hll_op"("nqp", "falsey", $P5032)
    .const 'Sub' $P5034 = 'cuid_426_1361734139.417' 
    capture_lex $P5034
    $P5035 = $P5034()
    .const 'Sub' $P5036 = 'cuid_504_1361734139.417' 
    capture_lex $P5036
    $P5037 = $P5036()
    .const 'Sub' $P5038 = 'cuid_508_1361734139.417' 
    capture_lex $P5038
    $P5039 = $P5038()
.annotate 'line', 3387
    nqp_get_sc_object $P5040, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 380
    $P5041 = $P5040."new"()
    set $P105, $P5041
.annotate 'line', 3388
    $P105."language"("nqp")
.annotate 'line', 3389
    nqp_get_sc_object $P5042, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 38
    $P105."parsegrammar"($P5042)
.annotate 'line', 3390
    nqp_get_sc_object $P5043, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 253
    $P105."parseactions"($P5043)
.annotate 'line', 3391
    $P5044 = $P105."config"()
    "&hll-config"($P5044)
.annotate 'line', 3394
    $P5045 = $P105."commandline_options"()
    set $P106, $P5045
.annotate 'line', 3395
    $P106."push"("parsetrace")
.annotate 'line', 3396
    $P106."push"("setting=s")
.annotate 'line', 3397
    $P106."push"("setting-path=s")
.annotate 'line', 3398
    $P106."push"("module-path=s")
.annotate 'line', 3399
    $P106."push"("vmlibs=s")
.annotate 'line', 3400
    $P106."push"("no-regex-lib")
.annotate 'line', 3401
    $P106."push"("dynext=s")
.annotate 'line', 3402
    $P106."push"("stable-sc")
    unless _lex_param_0 goto if3363_end7091 
    .const 'Sub' $P5046 = "cuid_373_1361734139.417" 
    $P5047 = $P5046(_lex_param_0 :flat)
  if3363_end7091:
    .return () 
.end
.HLL "nqp"
.namespace []
.sub "MAIN" :subid("cuid_373_1361734139.417") :anon :lex :outer("cuid_374_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3404
    .param pmc _lex_param_0 
    .lex "@ARGS", _lex_param_0 
.annotate 'line', 3406
    find_lex $P5001, "$nqpcomp"
    $P5001."command_line"(_lex_param_0, "utf8" :named("encoding"), "ascii iso-8859-1" :named("transcode"))
.annotate 'line', 3409
    find_lex $P5002, "$nqpcomp"
    $P5003 = $P5002."nqpevent"()
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "hll-config" :subid("cuid_375_1361734139.417") :anon :lex :outer("cuid_374_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3413
    .param pmc _lex_param_0 
    .lex "$config", _lex_param_0 
    box $P5001, "2013.02.1-25-g2f58b36"
    set _lex_param_0["version"], $P5001
    box $P5002, "2013-02-24T19:28:59Z"
    set _lex_param_0["build-date"], $P5002
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_376_1361734139.417") :anon :lex :outer("cuid_374_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 8
    .const 'Sub' $P5032 = 'cuid_1_1361734139.417' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_2_1361734139.417' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_3_1361734139.417' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_4_1361734139.417' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_5_1361734139.417' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_6_1361734139.417' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_7_1361734139.417' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_8_1361734139.417' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_9_1361734139.417' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_10_1361734139.417' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_11_1361734139.417' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_17_1361734139.417' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_18_1361734139.417' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_19_1361734139.417' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_20_1361734139.417' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_21_1361734139.417' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_22_1361734139.417' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_23_1361734139.417' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_24_1361734139.417' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_25_1361734139.417' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_26_1361734139.417' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_27_1361734139.417' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_28_1361734139.417' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_29_1361734139.417' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_30_1361734139.417' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_31_1361734139.417' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_32_1361734139.417' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_33_1361734139.417' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_34_1361734139.417' 
    capture_lex $P5032 
    .lex "$loader", $P101 
    .lex "$?PACKAGE", $P102 
    .lex "$?CLASS", $P103 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    .const 'Sub' $P5002 = 'cuid_1_1361734139.417' 
    capture_lex $P5002
    .const 'Sub' $P5003 = 'cuid_2_1361734139.417' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_3_1361734139.417' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_4_1361734139.417' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_5_1361734139.417' 
    capture_lex $P5006
    get_hll_global $P5007, "ModuleLoader"
    set $P101, $P5007
    .const 'Sub' $P5008 = 'cuid_6_1361734139.417' 
    capture_lex $P5008
    .const 'Sub' $P5009 = 'cuid_7_1361734139.417' 
    capture_lex $P5009
    .const 'Sub' $P5010 = 'cuid_8_1361734139.417' 
    capture_lex $P5010
    .const 'Sub' $P5011 = 'cuid_9_1361734139.417' 
    capture_lex $P5011
    .const 'Sub' $P5012 = 'cuid_10_1361734139.417' 
    capture_lex $P5012
    .const 'Sub' $P5013 = 'cuid_11_1361734139.417' 
    capture_lex $P5013
    .const 'Sub' $P5014 = 'cuid_17_1361734139.417' 
    capture_lex $P5014
    .const 'Sub' $P5015 = 'cuid_18_1361734139.417' 
    capture_lex $P5015
    .const 'Sub' $P5016 = 'cuid_19_1361734139.417' 
    capture_lex $P5016
    .const 'Sub' $P5017 = 'cuid_20_1361734139.417' 
    capture_lex $P5017
    .const 'Sub' $P5018 = 'cuid_21_1361734139.417' 
    capture_lex $P5018
    .const 'Sub' $P5019 = 'cuid_22_1361734139.417' 
    capture_lex $P5019
    .const 'Sub' $P5020 = 'cuid_23_1361734139.417' 
    capture_lex $P5020
    .const 'Sub' $P5021 = 'cuid_24_1361734139.417' 
    capture_lex $P5021
    .const 'Sub' $P5022 = 'cuid_25_1361734139.417' 
    capture_lex $P5022
    .const 'Sub' $P5023 = 'cuid_26_1361734139.417' 
    capture_lex $P5023
    .const 'Sub' $P5024 = 'cuid_27_1361734139.417' 
    capture_lex $P5024
    .const 'Sub' $P5025 = 'cuid_28_1361734139.417' 
    capture_lex $P5025
    .const 'Sub' $P5026 = 'cuid_29_1361734139.417' 
    capture_lex $P5026
    .const 'Sub' $P5027 = 'cuid_30_1361734139.417' 
    capture_lex $P5027
    .const 'Sub' $P5028 = 'cuid_31_1361734139.417' 
    capture_lex $P5028
    .const 'Sub' $P5029 = 'cuid_32_1361734139.417' 
    capture_lex $P5029
    .const 'Sub' $P5030 = 'cuid_33_1361734139.417' 
    capture_lex $P5030
    .const 'Sub' $P5031 = 'cuid_34_1361734139.417' 
    capture_lex $P5031
    .return ($P5031) 
.end
.HLL "nqp"
.namespace []
.sub "BUILD" :subid("cuid_1_1361734139.417") :anon :lex :outer("cuid_376_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 33
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :slurpy :named 
    .lex "self", _lex_param_0 
    .lex "%opts", _lex_param_1 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 3
    new $P5003, 'ResizablePMCArray'
    repr_bind_attr_obj $P5001, $P5002, "@!BLOCKS", $P5003
    nqp_decontainerize $P5004, _lex_param_0
    nqp_get_sc_object $P5005, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 3
    new $P5006, 'Hash'
    repr_bind_attr_obj $P5004, $P5005, "%!code_objects_to_fix_up", $P5006
    nqp_decontainerize $P5007, _lex_param_0
    nqp_get_sc_object $P5008, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 3
    new $P5009, 'Hash'
    repr_bind_attr_obj $P5007, $P5008, "%!code_object_types", $P5009
    nqp_decontainerize $P5010, _lex_param_0
    nqp_get_sc_object $P5011, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 3
    new $P5012, 'Hash'
    repr_bind_attr_obj $P5010, $P5011, "%!code_object_fixup_list", $P5012
    nqp_decontainerize $P5013, _lex_param_0
    nqp_get_sc_object $P5014, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 3
    new $P5015, 'Hash'
    repr_bind_attr_obj $P5013, $P5014, "%!code_stub_sc_idx", $P5015
    nqp_decontainerize $P5016, _lex_param_0
    nqp_get_sc_object $P5017, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 3
    new $P5018, 'ResizablePMCArray'
    repr_bind_attr_obj $P5016, $P5017, "@!clearup_tasks", $P5018
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "push_lexpad" :subid("cuid_2_1361734139.417") :anon :lex :outer("cuid_376_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 43
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$pad", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
.annotate 'line', 45
    nqp_get_sc_object $P5002, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 103
    nqp_get_sc_object $P5003, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 93
    $P5004 = $P5003."new"()
    $P5005 = $P5002."new"($P5004, _lex_param_1 :named("node"))
    set $P101, $P5005
    nqp_decontainerize $P5006, _lex_param_0
    nqp_get_sc_object $P5007, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 3
    repr_get_attr_obj $P5008, $P5006, $P5007, "@!BLOCKS"
    set $N5001, $P5008
    unless $N5001 goto if12_end15 
.annotate 'line', 46
    nqp_decontainerize $P5009, _lex_param_0
    nqp_get_sc_object $P5010, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 3
    repr_get_attr_obj $P5011, $P5009, $P5010, "@!BLOCKS"
    set fb_tmp_1, $P5011
    repr_defined $I5001, fb_tmp_1
    unless $I5001 goto if13_else16 
    nqp_decontainerize $P5013, _lex_param_0
    nqp_get_sc_object $P5014, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 3
    repr_get_attr_obj $P5015, $P5013, $P5014, "@!BLOCKS"
    set $N5003, $P5015
    set $N5004, 1
    sub $N5002, $N5003, $N5004
    set $I5002, $N5002
    set $P5012, fb_tmp_1[$I5002]
    set $P5017, $P5012
    goto if13_end17
  if13_else16:
    null $P5016
    set $P5017, $P5016
  if13_end17:
    unless_null $P5017, vivi_1418
    nqp_get_sc_object $P5018, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5017, $P5018
  vivi_1418:
    set $P101["outer"], $P5017
  if12_end15:
    nqp_decontainerize $P5019, _lex_param_0
    nqp_get_sc_object $P5020, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 3
    repr_get_attr_obj $P5021, $P5019, $P5020, "@!BLOCKS"
    nqp_decontainerize $P5022, _lex_param_0
    nqp_get_sc_object $P5023, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 3
    repr_get_attr_obj $P5024, $P5022, $P5023, "@!BLOCKS"
    set $N5005, $P5024
    set $I5003, $N5005
    set $P5021[$I5003], $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "pop_lexpad" :subid("cuid_3_1361734139.417") :anon :lex :outer("cuid_376_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 54
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
.annotate 'line', 55
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 3
    repr_get_attr_obj $P5003, $P5001, $P5002, "@!BLOCKS"
    $P5004 = $P5003."pop"()
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "cur_lexpad" :subid("cuid_4_1361734139.417") :anon :lex :outer("cuid_376_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 59
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    .local pmc fb_tmp_2 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 3
    repr_get_attr_obj $P5003, $P5001, $P5002, "@!BLOCKS"
    set fb_tmp_2, $P5003
    repr_defined $I5001, fb_tmp_2
    unless $I5001 goto if15_else19 
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 3
    repr_get_attr_obj $P5007, $P5005, $P5006, "@!BLOCKS"
    set $N5002, $P5007
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    set $I5002, $N5001
    set $P5004, fb_tmp_2[$I5002]
    set $P5009, $P5004
    goto if15_end20
  if15_else19:
    null $P5008
    set $P5009, $P5008
  if15_end20:
    unless_null $P5009, vivi_1621
    nqp_get_sc_object $P5010, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5009, $P5010
  vivi_1621:
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "get_legacy_block_list" :subid("cuid_5_1361734139.417") :anon :lex :outer("cuid_376_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 64
    .param pmc _lex_param_0 
    .lex "@x", $P101 
    .lex "self", _lex_param_0 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 3
    repr_get_attr_obj $P5005, $P5003, $P5004, "@!BLOCKS"
    repr_clone $P5002, $P5005
    set $P101, $P5002
.annotate 'line', 66
    $P101."reverse"()
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "load_setting" :subid("cuid_6_1361734139.417") :anon :lex :outer("cuid_376_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 76
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5005 = 'cuid_377_1361734139.417' 
    capture_lex $P5005 
    .lex "self", _lex_param_0 
    .lex "$setting_name", _lex_param_1 
    root_new $P101, ['parrot';'Continuation']
    set_label $P101, lexotic_22
    .lex "RETURN", $P101
    set $S5001, _lex_param_1
    isne $I5001, $S5001, "NULL"
    box $P5004, $I5001
    set $P5003, $P5004
    unless $I5001 goto if17_end25 
    .const 'Sub' $P5001 = 'cuid_377_1361734139.417' 
    capture_lex $P5001
    $P5002 = $P5001()
    set $P5003, $P5002
  if17_end25:
    goto lexotic_23
  lexotic_22:
    .get_results ($P5003)
  lexotic_23:
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_377_1361734139.417") :anon :lex :outer("cuid_6_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 78
    .lex "$setting", $P101 
    .lex "$set_outer", $P102 
    .local pmc fb_tmp_3 
    .local pmc fb_tmp_4 
    .local pmc pkg_viv_tmp_1 
    .local pmc fb_tmp_5 
    .local pmc fb_tmp_6 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
    find_dynamic_lex $P5003, "%*COMPILING"
    unless_null $P5003, fallback28
    nqp_get_sc_object $P5005, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5004, $P5005
    set pkg_viv_tmp_1, $P5004
    set fb_tmp_4, pkg_viv_tmp_1
    repr_defined $I5002, fb_tmp_4
    unless $I5002 goto if19_else29 
    set $P5006, fb_tmp_4["%COMPILING"]
    set $P5008, $P5006
    goto if19_end30
  if19_else29:
    null $P5007
    set $P5008, $P5007
  if19_end30:
    unless_null $P5008, vivi_2031
    new $P5009, 'Hash'
    set pkg_viv_tmp_1["%COMPILING"], $P5009
    set $P5008, $P5009
  vivi_2031:
    unless_null $P5008, vivi_2132
    die "Contextual %*COMPILING not found"
    box $P5010, "Contextual %*COMPILING not found"
    set $P5008, $P5010
  vivi_2132:
    set $P5003, $P5008
  fallback28:
    set fb_tmp_3, $P5003
    repr_defined $I5001, fb_tmp_3
    unless $I5001 goto if18_else26 
    set $P5011, fb_tmp_3["%?OPTIONS"]
    set $P5013, $P5011
    goto if18_end27
  if18_else26:
    null $P5012
    set $P5013, $P5012
  if18_end27:
    unless_null $P5013, vivi_2233
    nqp_get_sc_object $P5014, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5013, $P5014
  vivi_2233:
.annotate 'line', 83
    find_lex $P5015, "$loader"
    find_lex $P5016, "$setting_name"
    $P5017 = $P5015."load_setting"($P5016)
    set $P5013["outer_ctx"], $P5017
    set $P101, $P5017
.annotate 'line', 87
    nqp_get_sc_object $P5018, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 89
.annotate 'line', 88
    nqp_get_sc_object $P5019, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 90
    nqp_get_sc_object $P5020, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 57
    find_dynamic_lex $P5021, "$*UNIT"
    unless_null $P5021, fallback34
    nqp_get_sc_object $P5023, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5022, $P5023
    set fb_tmp_5, $P5022
    repr_defined $I5003, fb_tmp_5
    unless $I5003 goto if23_else35 
    set $P5024, fb_tmp_5["$UNIT"]
    set $P5026, $P5024
    goto if23_end36
  if23_else35:
    null $P5025
    set $P5026, $P5025
  if23_end36:
    unless_null $P5026, vivi_2437
    nqp_get_sc_object $P5027, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5026, $P5027
  vivi_2437:
    unless_null $P5026, vivi_2538
    die "Contextual $*UNIT not found"
    box $P5028, "Contextual $*UNIT not found"
    set $P5026, $P5028
  vivi_2538:
    set $P5021, $P5026
  fallback34:
    $P5029 = $P5020."new"($P5021 :named("value"))
.annotate 'line', 91
    nqp_get_sc_object $P5030, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 93
    nqp_get_sc_object $P5031, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 95
    nqp_get_sc_object $P5032, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 52
    $P5033 = $P5032."new"("ModuleLoader" :named("value"))
    $P5034 = $P5031."new"($P5033, "getcurhllsym" :named("op"))
.annotate 'line', 97
    nqp_get_sc_object $P5035, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 52
    find_lex $P5036, "$setting_name"
    $P5037 = $P5035."new"($P5036 :named("value"))
    $P5038 = $P5030."new"($P5034, $P5037, "callmethod" :named("op"), "load_setting" :named("name"))
    $P5039 = $P5019."new"($P5029, $P5038, "callmethod" :named("op"), "set_outer_ctx" :named("name"))
.annotate 'line', 99
    nqp_get_sc_object $P5040, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 101
    nqp_get_sc_object $P5041, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 57
    find_dynamic_lex $P5042, "$*UNIT"
    unless_null $P5042, fallback39
    nqp_get_sc_object $P5044, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5043, $P5044
    set fb_tmp_6, $P5043
    repr_defined $I5004, fb_tmp_6
    unless $I5004 goto if26_else40 
    set $P5045, fb_tmp_6["$UNIT"]
    set $P5047, $P5045
    goto if26_end41
  if26_else40:
    null $P5046
    set $P5047, $P5046
  if26_end41:
    unless_null $P5047, vivi_2742
    nqp_get_sc_object $P5048, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5047, $P5048
  vivi_2742:
    unless_null $P5047, vivi_2843
    die "Contextual $*UNIT not found"
    box $P5049, "Contextual $*UNIT not found"
    set $P5047, $P5049
  vivi_2843:
    set $P5042, $P5047
  fallback39:
    $P5050 = $P5041."new"($P5042 :named("value"))
.annotate 'line', 102
    nqp_get_sc_object $P5051, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 104
    nqp_get_sc_object $P5052, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 106
    nqp_get_sc_object $P5053, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 52
    $P5054 = $P5053."new"("ModuleLoader" :named("value"))
    $P5055 = $P5052."new"($P5054, "getcurhllsym" :named("op"))
.annotate 'line', 108
    nqp_get_sc_object $P5056, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 52
    find_lex $P5057, "$setting_name"
    $P5058 = $P5056."new"($P5057 :named("value"))
    $P5059 = $P5051."new"($P5055, $P5058, "callmethod" :named("op"), "load_setting" :named("name"))
    $P5060 = $P5040."new"($P5050, $P5059, "forceouterctx" :named("op"))
    $P5061 = $P5018."new"($P5039 :named("parrot"), $P5060 :named("jvm"))
    set $P102, $P5061
.annotate 'line', 110
    find_lex $P5063, "self"
    nqp_decontainerize $P5062, $P5063
    $P5064 = $P5062."is_precompilation_mode"()
    unless $P5064 goto if29_else44 
.annotate 'line', 111
    find_lex $P5066, "self"
    nqp_decontainerize $P5065, $P5066
    nqp_get_sc_object $P5067, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 93
.annotate 'line', 112
    nqp_get_sc_object $P5068, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 114
    nqp_get_sc_object $P5069, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 89
.annotate 'line', 115
    nqp_get_sc_object $P5070, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 52
    $P5071 = $P5070."new"("ModuleLoader.pbc" :named("value"))
.annotate 'line', 116
    nqp_get_sc_object $P5072, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 52
    $P5073 = $P5072."new"("ModuleLoader.class" :named("value"))
    $P5074 = $P5069."new"($P5071 :named("parrot"), $P5073 :named("jvm"))
    $P5075 = $P5068."new"($P5074, "loadbytecode" :named("op"))
    $P5076 = $P5067."new"($P5075, $P102)
    $P5077 = $P5065."add_load_dependency_task"($P5076 :named("deserialize_past"))
    goto if29_end45
  if29_else44:
.annotate 'line', 121
.annotate 'line', 122
    find_lex $P5079, "self"
    nqp_decontainerize $P5078, $P5079
    $P5080 = $P5078."add_fixup_task"($P102 :named("fixup_past"))
  if29_end45:
    getattribute $P5082, $P101, 'lex_pad'
    find_lex $P5081, "RETURN"
    $P5083 = $P5081($P5082)
    .return ($P5083) 
.end
.HLL "nqp"
.namespace []
.sub "load_module" :subid("cuid_7_1361734139.417") :anon :lex :outer("cuid_376_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 131
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$module", $P101 
    .lex "self", _lex_param_0 
    .lex "$module_name", _lex_param_1 
    .lex "$cur_GLOBALish", _lex_param_2 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_46
    .lex "RETURN", $P102
.annotate 'line', 133
    find_lex $P5002, "$loader"
    $P5003 = $P5002."load_module"(_lex_param_1, _lex_param_2)
    set $P101, $P5003
.annotate 'line', 136
    nqp_decontainerize $P5004, _lex_param_0
    $P5005 = $P5004."is_precompilation_mode"()
    unless $P5005 goto if30_end49 
.annotate 'line', 137
    nqp_decontainerize $P5006, _lex_param_0
    nqp_get_sc_object $P5007, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 93
.annotate 'line', 138
    nqp_get_sc_object $P5008, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 140
    nqp_get_sc_object $P5009, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 89
.annotate 'line', 141
    nqp_get_sc_object $P5010, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 52
    $P5011 = $P5010."new"("ModuleLoader.pbc" :named("value"))
.annotate 'line', 142
    nqp_get_sc_object $P5012, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 52
    $P5013 = $P5012."new"("ModuleLoader.class" :named("value"))
    $P5014 = $P5009."new"($P5011 :named("parrot"), $P5013 :named("jvm"))
    $P5015 = $P5008."new"($P5014, "loadbytecode" :named("op"))
.annotate 'line', 144
    nqp_get_sc_object $P5016, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 146
    nqp_get_sc_object $P5017, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 148
    nqp_get_sc_object $P5018, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 52
    $P5019 = $P5018."new"("ModuleLoader" :named("value"))
    $P5020 = $P5017."new"($P5019, "getcurhllsym" :named("op"))
.annotate 'line', 150
    nqp_get_sc_object $P5021, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 52
    $P5022 = $P5021."new"(_lex_param_1 :named("value"))
    $P5023 = $P5016."new"($P5020, $P5022, "callmethod" :named("op"), "load_module" :named("name"))
    $P5024 = $P5007."new"($P5015, $P5023)
    $P5025 = $P5006."add_load_dependency_task"($P5024 :named("deserialize_past"))
  if30_end49:
    getattribute $P5027, $P101, 'lex_pad'
    find_lex $P5026, "RETURN"
    $P5028 = $P5026($P5027)
    goto lexotic_47
  lexotic_46:
    .get_results ($P5028)
  lexotic_47:
    .return ($P5028) 
.end
.HLL "nqp"
.namespace []
.sub "import" :subid("cuid_8_1361734139.417") :anon :lex :outer("cuid_376_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 157
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5009 = 'cuid_378_1361734139.417' 
    capture_lex $P5009 
    .lex "$target", $P101 
    .lex "self", _lex_param_0 
    .lex "$stash", _lex_param_1 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
.annotate 'line', 158
    nqp_decontainerize $P5002, _lex_param_0
    $P5003 = $P5002."cur_lexpad"()
    set $P101, $P5003
    set $P5004, _lex_param_1
    iter $P5006, _lex_param_1
  for_next50:
    unless $P5006, for_done52
    shift $P5008, $P5006
  for_redo51:
    .const 'Sub' $P5007 = 'cuid_378_1361734139.417' 
    capture_lex $P5007
    $P5004 = $P5007($P5008)
    goto for_next50
  for_done52:
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_378_1361734139.417") :anon :lex :outer("cuid_8_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 159
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 160
    find_lex $P5002, "self"
    nqp_decontainerize $P5001, $P5002
    find_lex $P5003, "$target"
    $P5004 = _lex_param_0."key"()
    $P5005 = _lex_param_0."value"()
    $P5006 = $P5001."install_lexical_symbol"($P5003, $P5004, $P5005)
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "install_package_symbol" :subid("cuid_9_1361734139.417") :anon :lex :outer("cuid_376_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 166
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .const 'Sub' $P5012 = 'cuid_380_1361734139.417' 
    capture_lex $P5012 
    .lex "$name", $P101 
    .lex "$target", $P102 
    .lex "self", _lex_param_0 
    .lex "$package", _lex_param_1 
    .lex "@sym", _lex_param_2 
    .lex "$obj", _lex_param_3 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
    repr_clone $P5003, _lex_param_2
    set _lex_param_2, $P5003
.annotate 'line', 168
    $P5004 = _lex_param_2."pop"()
    set $S5001, $P5004
    box $P5005, $S5001
    set $P101, $P5005
    set $P102, _lex_param_1
    set $P5006, _lex_param_2
    iter $P5008, _lex_param_2
  for_next72:
    unless $P5008, for_done74
    shift $P5010, $P5008
  for_redo73:
    .const 'Sub' $P5009 = 'cuid_380_1361734139.417' 
    capture_lex $P5009
    $P5006 = $P5009($P5010)
    goto for_next72
  for_done74:
    get_who $P5011, $P102
    set $S5002, $P101
    set $P5011[$S5002], _lex_param_3
    .return (_lex_param_3) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_380_1361734139.417") :anon :lex :outer("cuid_9_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 172
    .param pmc _lex_param_0 
    .const 'Sub' $P5009 = 'cuid_379_1361734139.417' 
    capture_lex $P5009 
    .lex "$_", _lex_param_0 
    find_lex $P5002, "$target"
    get_who $P5001, $P5002
    set $S5001, _lex_param_0
    exists $I5001, $P5001[$S5001]
    unless $I5001 goto if31_else53 
.annotate 'line', 173
    find_lex $P5005, "$target"
    get_who $P5004, $P5005
    set $S5002, _lex_param_0
    set $P5003, $P5004[$S5002]
    store_lex "$target", $P5003
    set $P5008, $P5003
    goto if31_end54
  if31_else53:
    .const 'Sub' $P5006 = 'cuid_379_1361734139.417' 
    capture_lex $P5006
    $P5007 = $P5006()
    set $P5008, $P5007
  if31_end54:
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_379_1361734139.417") :anon :lex :outer("cuid_380_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 176
    .lex "$pkgtype", $P101 
    .lex "$pkg", $P102 
    .local pmc fb_tmp_7 
    .local pmc pkg_viv_tmp_2 
    .local pmc fb_tmp_8 
    .local pmc pkg_viv_tmp_3 
    .local pmc fb_tmp_9 
    .local pmc pkg_viv_tmp_4 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
    find_dynamic_lex $P5003, "%*HOW"
    unless_null $P5003, fallback57
    nqp_get_sc_object $P5005, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5004, $P5005
    set pkg_viv_tmp_2, $P5004
    set fb_tmp_7, pkg_viv_tmp_2
    repr_defined $I5002, fb_tmp_7
    unless $I5002 goto if33_else58 
    set $P5006, fb_tmp_7["%HOW"]
    set $P5008, $P5006
    goto if33_end59
  if33_else58:
    null $P5007
    set $P5008, $P5007
  if33_end59:
    unless_null $P5008, vivi_3460
    new $P5009, 'Hash'
    set pkg_viv_tmp_2["%HOW"], $P5009
    set $P5008, $P5009
  vivi_3460:
    unless_null $P5008, vivi_3561
    die "Contextual %*HOW not found"
    box $P5010, "Contextual %*HOW not found"
    set $P5008, $P5010
  vivi_3561:
    set $P5003, $P5008
  fallback57:
    exists $I5001, $P5003["package"]
    unless $I5001 goto if32_else55 
    find_dynamic_lex $P5012, "%*HOW"
    unless_null $P5012, fallback62
    nqp_get_sc_object $P5014, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5013, $P5014
    set pkg_viv_tmp_3, $P5013
    set fb_tmp_8, pkg_viv_tmp_3
    repr_defined $I5003, fb_tmp_8
    unless $I5003 goto if36_else63 
    set $P5015, fb_tmp_8["%HOW"]
    set $P5017, $P5015
    goto if36_end64
  if36_else63:
    null $P5016
    set $P5017, $P5016
  if36_end64:
    unless_null $P5017, vivi_3765
    new $P5018, 'Hash'
    set pkg_viv_tmp_3["%HOW"], $P5018
    set $P5017, $P5018
  vivi_3765:
    unless_null $P5017, vivi_3866
    die "Contextual %*HOW not found"
    box $P5019, "Contextual %*HOW not found"
    set $P5017, $P5019
  vivi_3866:
    set $P5012, $P5017
  fallback62:
    set $P5011, $P5012["package"]
    set $P5029, $P5011
    goto if32_end56
  if32_else55:
    find_dynamic_lex $P5021, "%*HOW"
    unless_null $P5021, fallback67
    nqp_get_sc_object $P5023, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5022, $P5023
    set pkg_viv_tmp_4, $P5022
    set fb_tmp_9, pkg_viv_tmp_4
    repr_defined $I5004, fb_tmp_9
    unless $I5004 goto if39_else68 
    set $P5024, fb_tmp_9["%HOW"]
    set $P5026, $P5024
    goto if39_end69
  if39_else68:
    null $P5025
    set $P5026, $P5025
  if39_end69:
    unless_null $P5026, vivi_4070
    new $P5027, 'Hash'
    set pkg_viv_tmp_4["%HOW"], $P5027
    set $P5026, $P5027
  vivi_4070:
    unless_null $P5026, vivi_4171
    die "Contextual %*HOW not found"
    box $P5028, "Contextual %*HOW not found"
    set $P5026, $P5028
  vivi_4171:
    set $P5021, $P5026
  fallback67:
    set $P5020, $P5021["knowhow"]
    set $P5029, $P5020
  if32_end56:
    set $P101, $P5029
.annotate 'line', 180
    find_lex $P5030, "$_"
    $P5031 = $P101."new_type"($P5030 :named("name"))
    set $P102, $P5031
.annotate 'line', 181
    get_how $P5032, $P102
    $P5032."compose"($P102)
    find_lex $P5034, "$target"
    get_who $P5033, $P5034
    find_lex $P5035, "$_"
    set $S5001, $P5035
    set $P5033[$S5001], $P102
    store_lex "$target", $P102
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "install_lexical_symbol" :subid("cuid_10_1361734139.417") :anon :lex :outer("cuid_376_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 192
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "$fixup", $P101 
    .lex "self", _lex_param_0 
    .lex "$block", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$obj", _lex_param_3 
    .local pmc fb_tmp_10 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
.annotate 'line', 194
    _lex_param_1."symbol"(_lex_param_2, "lexical" :named("scope"), _lex_param_3 :named("value"))
.annotate 'line', 195
    set fb_tmp_10, _lex_param_1
    repr_defined $I5001, fb_tmp_10
    unless $I5001 goto if42_else75 
    set $P5002, fb_tmp_10[0]
    set $P5004, $P5002
    goto if42_end76
  if42_else75:
    null $P5003
    set $P5004, $P5003
  if42_end76:
    unless_null $P5004, vivi_4377
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_4377:
    nqp_get_sc_object $P5006, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5007 = $P5006."new"("lexical" :named("scope"), _lex_param_2 :named("name"), "var" :named("decl"))
    $P5004."push"($P5007)
.annotate 'line', 198
    nqp_get_sc_object $P5008, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 201
    nqp_get_sc_object $P5009, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 52
    $P5010 = $P5009."new"(_lex_param_2 :named("value"))
.annotate 'line', 202
    nqp_get_sc_object $P5011, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 61
    $P5012 = $P5011."new"(_lex_param_3 :named("value"))
    $P5013 = $P5008."new"(_lex_param_1, $P5010, $P5012, "setstaticlex" :named("op"))
    set $P101, $P5013
.annotate 'line', 204
    nqp_decontainerize $P5014, _lex_param_0
    $P5015 = $P5014."add_fixup_task"($P101 :named("deserialize_past"), $P101 :named("fixup_past"))
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "install_package_routine" :subid("cuid_11_1361734139.417") :anon :lex :outer("cuid_376_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 209
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "$fixup", $P101 
    .lex "self", _lex_param_0 
    .lex "$package", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$past_block", _lex_param_3 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
.annotate 'line', 210
    nqp_get_sc_object $P5002, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 212
    nqp_get_sc_object $P5003, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    nqp_get_sc_object $P5004, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 61
    $P5005 = $P5004."new"(_lex_param_1 :named("value"))
    $P5006 = $P5003."new"($P5005, "who" :named("op"))
.annotate 'line', 213
    nqp_get_sc_object $P5007, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 52
    set $S5001, _lex_param_2
    $P5008 = $P5007."new"($S5001 :named("value"))
.annotate 'line', 214
    nqp_get_sc_object $P5009, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 57
    $P5010 = $P5009."new"(_lex_param_3 :named("value"))
    $P5011 = $P5002."new"($P5006, $P5008, $P5010, "bindkey" :named("op"))
    set $P101, $P5011
.annotate 'line', 216
    nqp_decontainerize $P5012, _lex_param_0
    $P5013 = $P5012."add_fixup_task"($P101 :named("deserialize_past"), $P101 :named("fixup_past"))
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "create_code" :subid("cuid_17_1361734139.417") :anon :lex :outer("cuid_376_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 221
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 :named("code_type_name") :optional 
    .param int haz_param_1 :opt_flag 
    .const 'Sub' $P5084 = 'cuid_12_1361734139.417' 
    capture_lex $P5084 
    .const 'Sub' $P5084 = 'cuid_384_1361734139.417' 
    capture_lex $P5084 
    .const 'Sub' $P5084 = 'cuid_385_1361734139.417' 
    capture_lex $P5084 
    .const 'Sub' $P5084 = 'cuid_386_1361734139.417' 
    capture_lex $P5084 
    .lex "$code_type", $P101 
    .lex "$have_code_type", $P102 
    .lex "$stub_code", $P103 
    .lex "$code_obj", $P104 
    .lex "$fixups", $P105 
    .lex "$dummy", $P106 
    .lex "$code_ref_idx", $P107 
    .lex "self", _lex_param_0 
    .lex "$past", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$is_dispatcher", _lex_param_3 
    .lex "$code_type_name", _lex_param_4 
    .local pmc fb_tmp_11 
    .local pmc fb_tmp_12 
    .local pmc fb_tmp_27 
    .local pmc fb_tmp_28 
    if haz_param_1, default173
    box $P5083, "NQPRoutine"
    set _lex_param_4, $P5083
  default173:
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P105, $P5005
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P106, $P5006
    nqp_get_sc_object $P5007, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P107, $P5007
    root_new $P108, ['parrot';'Continuation']
    set_label $P108, lexotic_78
    .lex "RETURN", $P108
    box $P5008, 0
    set $P102, $P5008
    new $P5031, 'ExceptionHandler'
    set_label $P5031, catch_handler_5191
    $P5031.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5031
.annotate 'line', 225
.annotate 'line', 226
    nqp_decontainerize $P5009, _lex_param_0
    new $P5010, 'ResizablePMCArray'
    push $P5010, _lex_param_4
    $P5011 = $P5009."find_sym"($P5010)
    set $P101, $P5011
.annotate 'line', 227
    find_dynamic_lex $P5013, "$*PACKAGE"
    unless_null $P5013, fallback80
    nqp_get_sc_object $P5015, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5014, $P5015
    set fb_tmp_11, $P5014
    repr_defined $I5002, fb_tmp_11
    unless $I5002 goto if44_else81 
    set $P5016, fb_tmp_11["$PACKAGE"]
    set $P5018, $P5016
    goto if44_end82
  if44_else81:
    null $P5017
    set $P5018, $P5017
  if44_end82:
    unless_null $P5018, vivi_4583
    nqp_get_sc_object $P5019, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5018, $P5019
  vivi_4583:
    unless_null $P5018, vivi_4684
    die "Contextual $*PACKAGE not found"
    box $P5020, "Contextual $*PACKAGE not found"
    set $P5018, $P5020
  vivi_4684:
    set $P5013, $P5018
  fallback80:
    get_how $P5012, $P5013
    find_dynamic_lex $P5021, "$*PACKAGE"
    unless_null $P5021, fallback85
    nqp_get_sc_object $P5023, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5022, $P5023
    set fb_tmp_12, $P5022
    repr_defined $I5003, fb_tmp_12
    unless $I5003 goto if47_else86 
    set $P5024, fb_tmp_12["$PACKAGE"]
    set $P5026, $P5024
    goto if47_end87
  if47_else86:
    null $P5025
    set $P5026, $P5025
  if47_end87:
    unless_null $P5026, vivi_4888
    nqp_get_sc_object $P5027, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5026, $P5027
  vivi_4888:
    unless_null $P5026, vivi_4989
    die "Contextual $*PACKAGE not found"
    box $P5028, "Contextual $*PACKAGE not found"
    set $P5026, $P5028
  vivi_4989:
    set $P5021, $P5026
  fallback85:
    $P5029 = $P5012."name"($P5021)
    set $S5001, $P5029
    set $S5002, _lex_param_4
    isne $I5001, $S5001, $S5002
    box $P5030, $I5001
    set $P102, $P5030
    set $P5032, $P102
    pop_eh 
    goto skip_handler_5090
  catch_handler_5191:
    .get_results ($P5031) 
    set $I10001, 1
    set $P5031["handled"], $I10001
    nqp_get_sc_object $P10001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    finalize $P5031
    pop_upto_eh $P5031
    pop_eh 
    set $P5032, $P10001
    goto skip_handler_5090
  skip_handler_5090:
    .const 'Sub' $P5034 = 'cuid_12_1361734139.417' 
    capture_lex $P5034
    newclosure $P5033, $P5034
    set $P103, $P5033
    unless $P102 goto if83_end150 
.annotate 'line', 273
    repr_instance_of $P5035, $P101
    set $P104, $P5035
  if83_end150:
.annotate 'line', 278
    nqp_get_sc_object $P5036, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 93
    $P5037 = $P5036."new"()
    set $P105, $P5037
    set fb_tmp_27, _lex_param_1
    repr_defined $I5005, fb_tmp_27
    unless $I5005 goto if85_else153 
    set $P5038, fb_tmp_27["compile_time_dummy"]
    set $P5040, $P5038
    goto if85_end154
  if85_else153:
    null $P5039
    set $P5040, $P5039
  if85_end154:
    unless_null $P5040, vivi_86155
    nqp_get_sc_object $P5041, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5040, $P5041
  vivi_86155:
    defined $I5004, $P5040
    unless $I5004 goto if84_else151 
.annotate 'line', 281
    set fb_tmp_28, _lex_param_1
    repr_defined $I5006, fb_tmp_28
    unless $I5006 goto if87_else156 
    set $P5042, fb_tmp_28["compile_time_dummy"]
    set $P5044, $P5042
    goto if87_end157
  if87_else156:
    null $P5043
    set $P5044, $P5043
  if87_end157:
    unless_null $P5044, vivi_88158
    nqp_get_sc_object $P5045, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5044, $P5045
  vivi_88158:
    set $P106, $P5044
    goto if84_end152
  if84_else151:
.annotate 'line', 284
    nqp_fresh_stub $P5046, $P103
    set $P106, $P5046
    set $S5003, _lex_param_2
    assign $P106, $S5003
    setprop $P106, "STATIC_CODE_REF", $P106
    setprop $P106, "COMPILER_STUB", $P106
.annotate 'line', 292
    nqp_decontainerize $P5047, _lex_param_0
    $P5048 = $P5047."add_root_code_ref"($P106, _lex_param_1)
    set $P107, $P5048
    nqp_decontainerize $P5049, _lex_param_0
    nqp_get_sc_object $P5050, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 3
    repr_get_attr_obj $P5051, $P5049, $P5050, "%!code_stub_sc_idx"
.annotate 'line', 293
    $P5052 = _lex_param_1."cuid"()
    set $S5004, $P5052
    set $P5051[$S5004], $P107
    set _lex_param_1["compile_time_dummy"], $P106
    set $P5064, $P102
    unless $P102 goto if89_end160 
.annotate 'line', 299
    nqp_decontainerize $P5053, _lex_param_0
    nqp_get_sc_object $P5054, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 3
    repr_get_attr_obj $P5055, $P5053, $P5054, "%!code_object_fixup_list"
.annotate 'line', 300
    $P5056 = _lex_param_1."cuid"()
    set $S5005, $P5056
    set $P5055[$S5005], $P105
.annotate 'line', 301
    nqp_decontainerize $P5057, _lex_param_0
    $P5058 = $P5057."is_precompilation_mode"()
    unless $P5058 goto if90_else161 
    .const 'Sub' $P5059 = 'cuid_384_1361734139.417' 
    capture_lex $P5059
    $P5060 = $P5059()
    set $P5063, $P5060
    goto if90_end162
  if90_else161:
    .const 'Sub' $P5061 = 'cuid_385_1361734139.417' 
    capture_lex $P5061
    $P5062 = $P5061()
    set $P5063, $P5062
  if90_end162:
    set $P5064, $P5063
  if89_end160:
  if84_end152:
.annotate 'line', 341
    nqp_decontainerize $P5065, _lex_param_0
    $P5065."add_fixup_task"($P105 :named("fixup_past"))
    unless $P102 goto if95_else169 
    .const 'Sub' $P5066 = 'cuid_386_1361734139.417' 
    capture_lex $P5066
    $P5067 = $P5066()
    set $P5082, $P5067
    goto if95_end170
  if95_else169:
.annotate 'line', 380
.annotate 'line', 383
    nqp_get_sc_object $P5068, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 385
    nqp_get_sc_object $P5069, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 387
    nqp_get_sc_object $P5070, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 52
    nqp_decontainerize $P5071, _lex_param_0
    $P5072 = $P5071."handle"()
    $P5073 = $P5070."new"($P5072 :named("value"))
.annotate 'line', 388
    nqp_get_sc_object $P5074, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 42
    $P5075 = $P5074."new"($P107 :named("value"))
    $P5076 = $P5069."new"($P5073, $P5075, "scgetcode" :named("op"))
.annotate 'line', 390
    nqp_get_sc_object $P5077, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 57
    $P5078 = $P5077."new"(_lex_param_1 :named("value"))
    $P5079 = $P5068."new"($P5076, $P5078, "replacecoderef" :named("op"))
    $P105."push"($P5079)
    find_lex $P5080, "RETURN"
    $P5081 = $P5080($P106)
    set $P5082, $P5081
  if95_end170:
    goto lexotic_79
  lexotic_78:
    .get_results ($P5082)
  lexotic_79:
    .return ($P5082) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_12_1361734139.417") :anon :lex :outer("cuid_17_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 234
    .param pmc _lex_param_0 :slurpy 
    .param pmc _lex_param_1 :slurpy :named 
    .const 'Sub' $P5025 = 'cuid_383_1361734139.417' 
    capture_lex $P5025 
    .lex "$nqpcomp", $P101 
    .lex "$post", $P102 
    .lex "$pir", $P103 
    .lex "$compiled", $P104 
    .lex "$c", $P105 
    .lex "$i", $P106 
    .lex "@args", _lex_param_0 
    .lex "%named", _lex_param_1 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P105, $P5005
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P106, $P5006
.annotate 'line', 236
    find_lex $P5007, "$past"
    find_lex $P5009, "self"
    nqp_decontainerize $P5008, $P5009
    $P5010 = $P5008."libs"()
    $P5007."unshift"($P5010)
    compreg $P5011, "nqp"
    set $P101, $P5011
.annotate 'line', 238
    nqp_get_sc_object $P5012, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 114
    find_lex $P5013, "$past"
    $P5014 = $P5012."new"($P5013, "nqp" :named("hll"))
    $P5015 = $P101."post"($P5014)
    set $P102, $P5015
.annotate 'line', 239
    $P5016 = $P101."pir"($P102)
    set $P103, $P5016
.annotate 'line', 240
    $P5017 = $P101."evalpmc"($P103)
    set $P104, $P5017
    elements $I5001, $P104
    box $P5018, $I5001
    set $P105, $P5018
    box $P5019, 0
    set $P106, $P5019
  while52_test92:
    set $N5001, $P106
    set $N5002, $P105
    islt $I5002, $N5001, $N5002
    box $P5023, $I5002
    set $P5022, $P5023
    unless $I5002 goto while52_done96 
  while52_redo94:
    .const 'Sub' $P5020 = 'cuid_383_1361734139.417' 
    capture_lex $P5020
    $P5021 = $P5020()
    set $P5022, $P5021
    goto while52_test92 
  while52_done96:
.annotate 'line', 268
    $P5024 = $P104(_lex_param_0 :flat, _lex_param_1 :flat :named)
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_383_1361734139.417") :anon :lex :outer("cuid_12_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 245
    .const 'Sub' $P5017 = 'cuid_382_1361734139.417' 
    capture_lex $P5017 
    .lex "$subid", $P101 
    .local pmc fb_tmp_13 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
.annotate 'line', 246
    find_lex $P5002, "$compiled"
    set fb_tmp_13, $P5002
    repr_defined $I5001, fb_tmp_13
    unless $I5001 goto if53_else97 
    find_lex $P5004, "$i"
    set $I5002, $P5004
    set $P5003, fb_tmp_13[$I5002]
    set $P5006, $P5003
    goto if53_end98
  if53_else97:
    null $P5005
    set $P5006, $P5005
  if53_end98:
    unless_null $P5006, vivi_5499
    nqp_get_sc_object $P5007, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5006, $P5007
  vivi_5499:
    $P5008 = $P5006."get_subid"()
    set $P101, $P5008
    find_lex $P5010, "self"
    nqp_decontainerize $P5009, $P5010
    nqp_get_sc_object $P5011, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 3
    repr_get_attr_obj $P5012, $P5009, $P5011, "%!code_objects_to_fix_up"
    set $S5001, $P101
    exists $I5003, $P5012[$S5001]
    unless $I5003 goto if55_end101 
    .const 'Sub' $P5013 = 'cuid_382_1361734139.417' 
    capture_lex $P5013
    $P5014 = $P5013()
  if55_end101:
    find_lex $P5015, "$i"
    set $N5002, $P5015
    set $N5003, 1
    add $N5001, $N5002, $N5003
    box $P5016, $N5001
    store_lex "$i", $P5016
    .return ($P5016) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_382_1361734139.417") :anon :lex :outer("cuid_383_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 247
    .const 'Sub' $P5095 = 'cuid_381_1361734139.417' 
    capture_lex $P5095 
    .lex "$static", $P101 
    .lex "$fixup_stmts", $P102 
    .local pmc fb_tmp_14 
    .local pmc fb_tmp_15 
    .local pmc fb_tmp_16 
    .local pmc fb_tmp_17 
    .local pmc fb_tmp_18 
    .local pmc fb_tmp_22 
    .local pmc fb_tmp_23 
    .local pmc fb_tmp_24 
    .local pmc fb_tmp_25 
    .local pmc fb_tmp_26 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
.annotate 'line', 251
    find_lex $P5004, "self"
    nqp_decontainerize $P5003, $P5004
    nqp_get_sc_object $P5005, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 3
    repr_get_attr_obj $P5006, $P5003, $P5005, "%!code_objects_to_fix_up"
    set fb_tmp_14, $P5006
    repr_defined $I5001, fb_tmp_14
    unless $I5001 goto if56_else102 
    find_lex $P5008, "$subid"
    set $S5001, $P5008
    set $P5007, fb_tmp_14[$S5001]
    set $P5010, $P5007
    goto if56_end103
  if56_else102:
    null $P5009
    set $P5010, $P5009
  if56_end103:
    unless_null $P5010, vivi_57104
    nqp_get_sc_object $P5011, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5010, $P5011
  vivi_57104:
    $P5012 = $P5010."shift"()
    set $P101, $P5012
    find_lex $P5014, "self"
    nqp_decontainerize $P5013, $P5014
    nqp_get_sc_object $P5015, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 3
    repr_get_attr_obj $P5016, $P5013, $P5015, "%!code_object_types"
    set fb_tmp_15, $P5016
    repr_defined $I5002, fb_tmp_15
    unless $I5002 goto if58_else105 
    find_lex $P5018, "$subid"
    set $S5002, $P5018
    set $P5017, fb_tmp_15[$S5002]
    set $P5020, $P5017
    goto if58_end106
  if58_else105:
    null $P5019
    set $P5020, $P5019
  if58_end106:
    unless_null $P5020, vivi_59107
    nqp_get_sc_object $P5021, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5020, $P5021
  vivi_59107:
    find_lex $P5022, "$compiled"
    set fb_tmp_16, $P5022
    repr_defined $I5003, fb_tmp_16
    unless $I5003 goto if60_else108 
    find_lex $P5024, "$i"
    set $I5004, $P5024
    set $P5023, fb_tmp_16[$I5004]
    set $P5026, $P5023
    goto if60_end109
  if60_else108:
    null $P5025
    set $P5026, $P5025
  if60_end109:
    unless_null $P5026, vivi_61110
    nqp_get_sc_object $P5027, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5026, $P5027
  vivi_61110:
    setattribute $P101, $P5020, "$!do", $P5026
    find_lex $P5029, "self"
    nqp_decontainerize $P5028, $P5029
    nqp_get_sc_object $P5030, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 3
    repr_get_attr_obj $P5031, $P5028, $P5030, "%!code_object_types"
    set fb_tmp_17, $P5031
    repr_defined $I5005, fb_tmp_17
    unless $I5005 goto if62_else111 
    find_lex $P5033, "$subid"
    set $S5003, $P5033
    set $P5032, fb_tmp_17[$S5003]
    set $P5035, $P5032
    goto if62_end112
  if62_else111:
    null $P5034
    set $P5035, $P5034
  if62_end112:
    unless_null $P5035, vivi_63113
    nqp_get_sc_object $P5036, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5035, $P5036
  vivi_63113:
    null $P5037
    setattribute $P101, $P5035, "$!clone_callback", $P5037
    find_lex $P5042, "self"
    nqp_decontainerize $P5041, $P5042
    nqp_get_sc_object $P5043, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 3
    repr_get_attr_obj $P5044, $P5041, $P5043, "%!code_objects_to_fix_up"
    set fb_tmp_18, $P5044
    repr_defined $I5006, fb_tmp_18
    unless $I5006 goto if64_else114 
    find_lex $P5046, "$subid"
    set $S5004, $P5046
    set $P5045, fb_tmp_18[$S5004]
    set $P5048, $P5045
    goto if64_end115
  if64_else114:
    null $P5047
    set $P5048, $P5047
  if64_end115:
    unless_null $P5048, vivi_65116
    nqp_get_sc_object $P5049, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5048, $P5049
  vivi_65116:
    set $P5038, $P5048
    iter $P5040, $P5048
  for_next126:
    unless $P5040, for_done128
    shift $P5051, $P5040
  for_redo127:
    .const 'Sub' $P5050 = 'cuid_381_1361734139.417' 
    capture_lex $P5050
    $P5038 = $P5050($P5051)
    goto for_next126
  for_done128:
    find_lex $P5052, "$compiled"
    set fb_tmp_22, $P5052
    repr_defined $I5007, fb_tmp_22
    unless $I5007 goto if72_else129 
    find_lex $P5054, "$i"
    set $I5008, $P5054
    set $P5053, fb_tmp_22[$I5008]
    set $P5056, $P5053
    goto if72_end130
  if72_else129:
    null $P5055
    set $P5056, $P5055
  if72_end130:
    unless_null $P5056, vivi_73131
    nqp_get_sc_object $P5057, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5056, $P5057
  vivi_73131:
    find_lex $P5058, "$compiled"
    set fb_tmp_23, $P5058
    repr_defined $I5009, fb_tmp_23
    unless $I5009 goto if74_else132 
    find_lex $P5060, "$i"
    set $I5010, $P5060
    set $P5059, fb_tmp_23[$I5010]
    set $P5062, $P5059
    goto if74_end133
  if74_else132:
    null $P5061
    set $P5062, $P5061
  if74_end133:
    unless_null $P5062, vivi_75134
    nqp_get_sc_object $P5063, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5062, $P5063
  vivi_75134:
    setprop $P5056, "STATIC_CODE_REF", $P5062
.annotate 'line', 259
    find_lex $P5065, "self"
    nqp_decontainerize $P5064, $P5065
    find_lex $P5067, "self"
    nqp_decontainerize $P5066, $P5067
    nqp_get_sc_object $P5068, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 3
    repr_get_attr_obj $P5069, $P5066, $P5068, "%!code_stub_sc_idx"
    set fb_tmp_24, $P5069
    repr_defined $I5011, fb_tmp_24
    unless $I5011 goto if76_else135 
    find_lex $P5071, "$subid"
    set $S5005, $P5071
    set $P5070, fb_tmp_24[$S5005]
    set $P5073, $P5070
    goto if76_end136
  if76_else135:
    null $P5072
    set $P5073, $P5072
  if76_end136:
    unless_null $P5073, vivi_77137
    nqp_get_sc_object $P5074, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5073, $P5074
  vivi_77137:
    find_lex $P5075, "$compiled"
    set fb_tmp_25, $P5075
    repr_defined $I5012, fb_tmp_25
    unless $I5012 goto if78_else138 
    find_lex $P5077, "$i"
    set $I5013, $P5077
    set $P5076, fb_tmp_25[$I5013]
    set $P5079, $P5076
    goto if78_end139
  if78_else138:
    null $P5078
    set $P5079, $P5078
  if78_end139:
    unless_null $P5079, vivi_79140
    nqp_get_sc_object $P5080, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5079, $P5080
  vivi_79140:
    $P5064."update_root_code_ref"($P5073, $P5079)
    find_lex $P5082, "self"
    nqp_decontainerize $P5081, $P5082
    nqp_get_sc_object $P5083, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 3
    repr_get_attr_obj $P5084, $P5081, $P5083, "%!code_object_fixup_list"
    set fb_tmp_26, $P5084
    repr_defined $I5014, fb_tmp_26
    unless $I5014 goto if80_else141 
    find_lex $P5086, "$subid"
    set $S5006, $P5086
    set $P5085, fb_tmp_26[$S5006]
    set $P5088, $P5085
    goto if80_end142
  if80_else141:
    null $P5087
    set $P5088, $P5087
  if80_end142:
    unless_null $P5088, vivi_81143
    nqp_get_sc_object $P5089, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5088, $P5089
  vivi_81143:
    set $P102, $P5088
    new $P5093, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5093, while82_handlers147
    push_eh $P5093
  while82_test144:
    $P5090 = $P102."list"()
    set $N5001, $P5090
    box $P5094, $N5001
    set $P5092, $P5094
    unless $N5001 goto while82_done148 
  while82_redo146:
.annotate 'line', 263
    $P5091 = $P102."shift"()
    set $P5092, $P5091
    goto while82_test144 
  while82_handlers147:
    .get_results ($P5093)
    pop_upto_eh $P5093
    getattribute $P5093, $P5093, 'type'
    eq $P5093, .CONTROL_LOOP_NEXT, while82_test144
    eq $P5093, .CONTROL_LOOP_REDO, while82_redo146
  while82_done148:
    pop_eh 
    .return ($P5092) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_381_1361734139.417") :anon :lex :outer("cuid_382_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 254
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_19 
    .local pmc fb_tmp_20 
    .local pmc fb_tmp_21 
    find_lex $P5002, "self"
    nqp_decontainerize $P5001, $P5002
    nqp_get_sc_object $P5003, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 3
    repr_get_attr_obj $P5004, $P5001, $P5003, "%!code_object_types"
    set fb_tmp_19, $P5004
    repr_defined $I5001, fb_tmp_19
    unless $I5001 goto if66_else117 
    find_lex $P5006, "$subid"
    set $S5001, $P5006
    set $P5005, fb_tmp_19[$S5001]
    set $P5008, $P5005
    goto if66_end118
  if66_else117:
    null $P5007
    set $P5008, $P5007
  if66_end118:
    unless_null $P5008, vivi_67119
    nqp_get_sc_object $P5009, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5008, $P5009
  vivi_67119:
    find_lex $P5011, "$compiled"
    set fb_tmp_20, $P5011
    repr_defined $I5002, fb_tmp_20
    unless $I5002 goto if68_else120 
    find_lex $P5013, "$i"
    set $I5003, $P5013
    set $P5012, fb_tmp_20[$I5003]
    set $P5015, $P5012
    goto if68_end121
  if68_else120:
    null $P5014
    set $P5015, $P5014
  if68_end121:
    unless_null $P5015, vivi_69122
    nqp_get_sc_object $P5016, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5015, $P5016
  vivi_69122:
    repr_clone $P5010, $P5015
    setattribute _lex_param_0, $P5008, "$!do", $P5010
    find_lex $P5018, "self"
    nqp_decontainerize $P5017, $P5018
    nqp_get_sc_object $P5019, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 3
    repr_get_attr_obj $P5020, $P5017, $P5019, "%!code_object_types"
    set fb_tmp_21, $P5020
    repr_defined $I5004, fb_tmp_21
    unless $I5004 goto if70_else123 
    find_lex $P5022, "$subid"
    set $S5002, $P5022
    set $P5021, fb_tmp_21[$S5002]
    set $P5024, $P5021
    goto if70_end124
  if70_else123:
    null $P5023
    set $P5024, $P5023
  if70_end124:
    unless_null $P5024, vivi_71125
    nqp_get_sc_object $P5025, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5024, $P5025
  vivi_71125:
    null $P5026
    setattribute _lex_param_0, $P5024, "$!clone_callback", $P5026
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_384_1361734139.417") :anon :lex :outer("cuid_17_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 301
    .const 'Sub' $P5012 = 'cuid_13_1361734139.417' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_14_1361734139.417' 
    capture_lex $P5012 
    .lex "$cb", $P101 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    .const 'Sub' $P5003 = 'cuid_13_1361734139.417' 
    capture_lex $P5003
    newclosure $P5002, $P5003
    set $P101, $P5002
    find_lex $P5004, "$code_obj"
    find_lex $P5005, "$code_type"
    setattribute $P5004, $P5005, "$!clone_callback", $P101
    find_lex $P5007, "self"
    nqp_decontainerize $P5006, $P5007
    nqp_get_sc_object $P5008, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 3
    repr_get_attr_obj $P5009, $P5006, $P5008, "@!clearup_tasks"
    .const 'Sub' $P5011 = 'cuid_14_1361734139.417' 
    capture_lex $P5011
    newclosure $P5010, $P5011
    push $P5009, $P5010
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_13_1361734139.417") :anon :lex :outer("cuid_384_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 302
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$do", $P101 
    .lex "$orig", _lex_param_0 
    .lex "$clone", _lex_param_1 
    .lex "$code_obj", _lex_param_2 
    .local pmc fb_tmp_29 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
.annotate 'line', 303
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    nqp_get_sc_object $P5004, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 3
    repr_get_attr_obj $P5005, $P5002, $P5004, "%!code_objects_to_fix_up"
    set fb_tmp_29, $P5005
    repr_defined $I5001, fb_tmp_29
    unless $I5001 goto if91_else163 
    find_lex $P5007, "$past"
    $P5008 = $P5007."cuid"()
    set $S5001, $P5008
    set $P5006, fb_tmp_29[$S5001]
    set $P5010, $P5006
    goto if91_end164
  if91_else163:
    null $P5009
    set $P5010, $P5009
  if91_end164:
    unless_null $P5010, vivi_92165
    nqp_get_sc_object $P5011, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5010, $P5011
  vivi_92165:
    $P5010."push"(_lex_param_2)
    find_lex $P5012, "$code_type"
    null $P5013
    setattribute _lex_param_2, $P5012, "$!clone_callback", $P5013
    find_lex $P5015, "$code_type"
    getattribute $P5014, _lex_param_2, $P5015, "$!do"
    set $P101, $P5014
    setprop $P101, "COMPILER_STUB", $P101
    .return () 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_14_1361734139.417") :anon :lex :outer("cuid_384_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 309

    find_lex $P5001, "$code_obj"
    find_lex $P5002, "$code_type"
    null $P5003
    setattribute $P5001, $P5002, "$!clone_callback", $P5003
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_385_1361734139.417") :anon :lex :outer("cuid_17_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 313
    .const 'Sub' $P5012 = 'cuid_15_1361734139.417' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_16_1361734139.417' 
    capture_lex $P5012 
    .lex "$cb", $P101 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    .const 'Sub' $P5003 = 'cuid_15_1361734139.417' 
    capture_lex $P5003
    newclosure $P5002, $P5003
    set $P101, $P5002
    find_lex $P5004, "$code_obj"
    find_lex $P5005, "$code_type"
    setattribute $P5004, $P5005, "$!clone_callback", $P101
    find_lex $P5007, "self"
    nqp_decontainerize $P5006, $P5007
    nqp_get_sc_object $P5008, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 3
    repr_get_attr_obj $P5009, $P5006, $P5008, "@!clearup_tasks"
    .const 'Sub' $P5011 = 'cuid_16_1361734139.417' 
    capture_lex $P5011
    newclosure $P5010, $P5011
    push $P5009, $P5010
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_15_1361734139.417") :anon :lex :outer("cuid_385_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 314
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$orig", _lex_param_0 
    .lex "$clone", _lex_param_1 
    .lex "$code_obj", _lex_param_2 
    .local pmc fb_tmp_30 
.annotate 'line', 316
    find_lex $P5002, "self"
    nqp_decontainerize $P5001, $P5002
    $P5001."add_object"(_lex_param_2)
.annotate 'line', 317
    find_lex $P5003, "$fixups"
    nqp_get_sc_object $P5004, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 319
    nqp_get_sc_object $P5005, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 321
    nqp_get_sc_object $P5006, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 61
    $P5007 = $P5006."new"(_lex_param_2 :named("value"))
.annotate 'line', 322
    nqp_get_sc_object $P5008, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 61
    find_lex $P5009, "$code_type"
    $P5010 = $P5008."new"($P5009 :named("value"))
.annotate 'line', 323
    nqp_get_sc_object $P5011, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 52
    $P5012 = $P5011."new"("$!do" :named("value"))
.annotate 'line', 324
    nqp_get_sc_object $P5013, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    nqp_get_sc_object $P5014, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 57
    find_lex $P5015, "$past"
    $P5016 = $P5014."new"($P5015 :named("value"))
    $P5017 = $P5013."new"($P5016, "clone" :named("op"))
    $P5018 = $P5005."new"($P5007, $P5010, $P5012, $P5017, "bindattr" :named("op"))
.annotate 'line', 326
    nqp_get_sc_object $P5019, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 61
    $P5020 = $P5019."new"(_lex_param_2 :named("value"))
    $P5021 = $P5004."new"($P5018, $P5020, "setcodeobj" :named("op"))
    $P5003."push"($P5021)
.annotate 'line', 330
    find_lex $P5023, "self"
    nqp_decontainerize $P5022, $P5023
    nqp_get_sc_object $P5024, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 3
    repr_get_attr_obj $P5025, $P5022, $P5024, "%!code_objects_to_fix_up"
    set fb_tmp_30, $P5025
    repr_defined $I5001, fb_tmp_30
    unless $I5001 goto if93_else166 
    find_lex $P5027, "$past"
    $P5028 = $P5027."cuid"()
    set $S5001, $P5028
    set $P5026, fb_tmp_30[$S5001]
    set $P5030, $P5026
    goto if93_end167
  if93_else166:
    null $P5029
    set $P5030, $P5029
  if93_end167:
    unless_null $P5030, vivi_94168
    nqp_get_sc_object $P5031, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5030, $P5031
  vivi_94168:
    $P5032 = $P5030."push"(_lex_param_2)
    .return ($P5032) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_16_1361734139.417") :anon :lex :outer("cuid_385_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 333

    find_lex $P5001, "$code_obj"
    find_lex $P5002, "$code_type"
    null $P5003
    setattribute $P5001, $P5002, "$!clone_callback", $P5003
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_386_1361734139.417") :anon :lex :outer("cuid_17_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 345
    .lex "$slot", $P101 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    find_lex $P5002, "$code_obj"
    find_lex $P5003, "$code_type"
    find_lex $P5004, "$dummy"
    setattribute $P5002, $P5003, "$!do", $P5004
    find_lex $P5005, "$is_dispatcher"
    unless $P5005 goto if96_end172 
    find_lex $P5006, "$code_obj"
    find_lex $P5007, "$code_type"
    new $P5008, 'ResizablePMCArray'
    setattribute $P5006, $P5007, "$!dispatchees", $P5008
  if96_end172:
.annotate 'line', 350
    find_lex $P5010, "self"
    nqp_decontainerize $P5009, $P5010
    find_lex $P5011, "$code_obj"
    $P5012 = $P5009."add_object"($P5011)
    set $P101, $P5012
.annotate 'line', 353
    find_lex $P5014, "self"
    nqp_decontainerize $P5013, $P5014
.annotate 'line', 354
    nqp_get_sc_object $P5015, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 356
    nqp_get_sc_object $P5016, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 57
    find_lex $P5017, "$past"
    $P5018 = $P5016."new"($P5017 :named("value"))
.annotate 'line', 357
    nqp_get_sc_object $P5019, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 61
    find_lex $P5020, "$code_obj"
    $P5021 = $P5019."new"($P5020 :named("value"))
    $P5022 = $P5015."new"($P5018, $P5021, "setcodeobj" :named("op"))
    $P5013."add_fixup_task"($P5022 :named("deserialize_past"))
.annotate 'line', 361
    find_lex $P5023, "$fixups"
    nqp_get_sc_object $P5024, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 363
    nqp_get_sc_object $P5025, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 61
    find_lex $P5026, "$code_obj"
    $P5027 = $P5025."new"($P5026 :named("value"))
.annotate 'line', 364
    nqp_get_sc_object $P5028, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 61
    find_lex $P5029, "$code_type"
    $P5030 = $P5028."new"($P5029 :named("value"))
.annotate 'line', 365
    nqp_get_sc_object $P5031, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 52
    $P5032 = $P5031."new"("$!do" :named("value"))
.annotate 'line', 366
    nqp_get_sc_object $P5033, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 57
    find_lex $P5034, "$past"
    $P5035 = $P5033."new"($P5034 :named("value"))
    $P5036 = $P5024."new"($P5027, $P5030, $P5032, $P5035, "bindattr" :named("op"))
    $P5023."push"($P5036)
.annotate 'line', 368
    find_lex $P5037, "$fixups"
    nqp_get_sc_object $P5038, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 370
    nqp_get_sc_object $P5039, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 57
    find_lex $P5040, "$past"
    $P5041 = $P5039."new"($P5040 :named("value"))
.annotate 'line', 371
    nqp_get_sc_object $P5042, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 61
    find_lex $P5043, "$code_obj"
    $P5044 = $P5042."new"($P5043 :named("value"))
    $P5045 = $P5038."new"($P5041, $P5044, "setcodeobj" :named("op"))
    $P5037."push"($P5045)
    find_lex $P5047, "self"
    nqp_decontainerize $P5046, $P5047
    nqp_get_sc_object $P5048, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 3
    repr_get_attr_obj $P5049, $P5046, $P5048, "%!code_objects_to_fix_up"
.annotate 'line', 375
    find_lex $P5050, "$past"
    $P5051 = $P5050."cuid"()
    set $S5001, $P5051
    new $P5052, 'ResizablePMCArray'
    find_lex $P5053, "$code_obj"
    push $P5052, $P5053
    set $P5049[$S5001], $P5052
    find_lex $P5055, "self"
    nqp_decontainerize $P5054, $P5055
    nqp_get_sc_object $P5056, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 3
    repr_get_attr_obj $P5057, $P5054, $P5056, "%!code_object_types"
.annotate 'line', 376
    find_lex $P5058, "$past"
    $P5059 = $P5058."cuid"()
    set $S5002, $P5059
    find_lex $P5060, "$code_type"
    set $P5057[$S5002], $P5060
    find_lex $P5061, "$code_obj"
    .return ($P5061) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_create_mo" :subid("cuid_18_1361734139.417") :anon :lex :outer("cuid_376_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 398
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("name") :optional 
    .param int haz_param_2 :opt_flag 
    .param pmc _lex_param_3 :named("repr") :optional 
    .param int haz_param_3 :opt_flag 
    .lex "%args", $P101 
    .lex "$mo", $P102 
    .lex "self", _lex_param_0 
    .lex "$how", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$repr", _lex_param_3 
    if haz_param_2, default180
    nqp_get_sc_object $P5007, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_2, $P5007
  default180:
    if haz_param_3, default181
    nqp_get_sc_object $P5008, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_3, $P5008
  default181:
    new $P5001, 'Hash'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
    root_new $P103, ['parrot';'Continuation']
    set_label $P103, lexotic_174
    .lex "RETURN", $P103
    defined $I5001, _lex_param_2
    unless $I5001 goto if97_end177 
.annotate 'line', 401
    set $P101["name"], _lex_param_2
  if97_end177:
    defined $I5002, _lex_param_3
    unless $I5002 goto if98_end179 
.annotate 'line', 402
    set $P101["repr"], _lex_param_3
  if98_end179:
.annotate 'line', 403
    $P5003 = _lex_param_1."new_type"($P101 :flat :named)
    set $P102, $P5003
.annotate 'line', 404
    nqp_decontainerize $P5004, _lex_param_0
    $P5004."add_object"($P102)
    find_lex $P5005, "RETURN"
    $P5006 = $P5005($P102)
    goto lexotic_175
  lexotic_174:
    .get_results ($P5006)
  lexotic_175:
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_add_attribute" :subid("cuid_19_1361734139.417") :anon :lex :outer("cuid_376_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 415
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 
    .lex "$attr", $P101 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$meta_attr", _lex_param_2 
    .lex "%lit_args", _lex_param_3 
    .lex "%obj_args", _lex_param_4 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
.annotate 'line', 416
    $P5002 = _lex_param_2."new"(_lex_param_3 :flat :named, _lex_param_4 :flat :named)
    set $P101, $P5002
.annotate 'line', 417
    get_how $P5003, _lex_param_1
    $P5003."add_attribute"(_lex_param_1, $P101)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_add_method" :subid("cuid_20_1361734139.417") :anon :lex :outer("cuid_376_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 422
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$meta_method_name", _lex_param_2 
    .lex "$name", _lex_param_3 
    .lex "$code", _lex_param_4 
.annotate 'line', 423
    get_how $P5001, _lex_param_1
    set $S5001, _lex_param_2
    $P5002 = $P5001.$S5001(_lex_param_1, _lex_param_3, _lex_param_4)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "set_routine_signature" :subid("cuid_21_1361734139.417") :anon :lex :outer("cuid_376_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 427
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "$sig_type", $P101 
    .lex "$code_type", $P102 
    .lex "$sig_obj", $P103 
    .lex "self", _lex_param_0 
    .lex "$code_obj", _lex_param_1 
    .lex "$types", _lex_param_2 
    .lex "$definednesses", _lex_param_3 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P103, $P5003
.annotate 'line', 428
    nqp_decontainerize $P5004, _lex_param_0
    new $P5005, 'ResizablePMCArray'
    box $P5006, "NQPSignature"
    push $P5005, $P5006
    $P5007 = $P5004."find_sym"($P5005)
    set $P101, $P5007
.annotate 'line', 429
    nqp_decontainerize $P5008, _lex_param_0
    new $P5009, 'ResizablePMCArray'
    box $P5010, "NQPRoutine"
    push $P5009, $P5010
    $P5011 = $P5008."find_sym"($P5009)
    set $P102, $P5011
    repr_instance_of $P5012, $P101
    set $P103, $P5012
    setattribute $P103, $P101, "$!types", _lex_param_2
    setattribute $P103, $P101, "$!definednesses", _lex_param_3
    setattribute _lex_param_1, $P102, "$!signature", $P103
    .return ($P103) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_set_body_block" :subid("cuid_22_1361734139.417") :anon :lex :outer("cuid_376_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 437
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$body_code_obj", $P101 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$body_past", _lex_param_2 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
.annotate 'line', 439
    nqp_decontainerize $P5002, _lex_param_0
    $P5003 = _lex_param_2."name"()
    $P5004 = $P5002."create_code"(_lex_param_2, $P5003, 0)
    set $P101, $P5004
.annotate 'line', 442
    get_how $P5005, _lex_param_1
    $P5006 = $P5005."set_body_block"(_lex_param_1, $P101)
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_add_parent_or_role" :subid("cuid_23_1361734139.417") :anon :lex :outer("cuid_376_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 446
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$meta_method_name", _lex_param_2 
    .lex "$to_add", _lex_param_3 
.annotate 'line', 447
    get_how $P5001, _lex_param_1
    set $S5001, _lex_param_2
    $P5002 = $P5001.$S5001(_lex_param_1, _lex_param_3)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_add_parrot_vtable_handler_mapping" :subid("cuid_24_1361734139.417") :anon :lex :outer("cuid_376_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 450
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$att_name", _lex_param_3 
.annotate 'line', 451
    get_how $P5001, _lex_param_1
    $P5002 = $P5001."add_parrot_vtable_handler_mapping"(_lex_param_1, _lex_param_2, _lex_param_3)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_compose" :subid("cuid_25_1361734139.417") :anon :lex :outer("cuid_376_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 455
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
.annotate 'line', 456
    get_how $P5001, _lex_param_1
    $P5002 = $P5001."compose"(_lex_param_1)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "run_begin_block" :subid("cuid_26_1361734139.417") :anon :lex :outer("cuid_376_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 460
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5031 = 'cuid_388_1361734139.417' 
    capture_lex $P5031 
    .lex "$wrapper", $P101 
    .lex "%seen", $P102 
    .lex "$i", $P103 
    .lex "$code", $P104 
    .lex "$old_global", $P105 
    .lex "self", _lex_param_0 
    .lex "$past", _lex_param_1 
    .local pmc fb_tmp_35 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    new $P5002, 'Hash'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P105, $P5005
    root_new $P106, ['parrot';'Continuation']
    set_label $P106, lexotic_182
    .lex "RETURN", $P106
.annotate 'line', 462
    nqp_get_sc_object $P5006, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 103
.annotate 'line', 463
    nqp_get_sc_object $P5007, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 93
    $P5008 = $P5007."new"()
    $P5009 = $P5006."new"($P5008, _lex_param_1)
    set $P101, $P5009
    nqp_decontainerize $P5010, _lex_param_0
    nqp_get_sc_object $P5011, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 3
    repr_get_attr_obj $P5012, $P5010, $P5011, "@!BLOCKS"
    set $N5001, $P5012
    box $P5013, $N5001
    set $P103, $P5013
  while99_test184:
    set $N5002, $P103
    set $N5003, 0
    isgt $I5001, $N5002, $N5003
    box $P5017, $I5001
    set $P5016, $P5017
    unless $I5001 goto while99_done188 
  while99_redo186:
    .const 'Sub' $P5014 = 'cuid_388_1361734139.417' 
    capture_lex $P5014
    $P5015 = $P5014()
    set $P5016, $P5015
    goto while99_test184 
  while99_done188:
.annotate 'line', 486
    nqp_decontainerize $P5018, _lex_param_0
    $P5019 = $P5018."create_code"($P101, "BEGIN block", 0)
    set $P104, $P5019
    get_hll_global $P5020, "GLOBAL"
    set $P105, $P5020
    find_dynamic_lex $P5021, "$*GLOBALish"
    unless_null $P5021, fallback210
    nqp_get_sc_object $P5023, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5022, $P5023
    set fb_tmp_35, $P5022
    repr_defined $I5002, fb_tmp_35
    unless $I5002 goto if112_else211 
    set $P5024, fb_tmp_35["$GLOBALish"]
    set $P5026, $P5024
    goto if112_end212
  if112_else211:
    null $P5025
    set $P5026, $P5025
  if112_end212:
    unless_null $P5026, vivi_113213
    nqp_get_sc_object $P5027, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5026, $P5027
  vivi_113213:
    unless_null $P5026, vivi_114214
    die "Contextual $*GLOBALish not found"
    box $P5028, "Contextual $*GLOBALish not found"
    set $P5026, $P5028
  vivi_114214:
    set $P5021, $P5026
  fallback210:
    set_hll_global "GLOBAL", $P5021
.annotate 'line', 489
    $P104()
    set_hll_global "GLOBAL", $P105
.annotate 'line', 494
    $P101."shift"()
    find_lex $P5029, "RETURN"
    $P5030 = $P5029($P101)
    goto lexotic_183
  lexotic_182:
    .get_results ($P5030)
  lexotic_183:
    .return ($P5030) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_388_1361734139.417") :anon :lex :outer("cuid_26_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 468
    .const 'Sub' $P5019 = 'cuid_387_1361734139.417' 
    capture_lex $P5019 
    .lex "%symbols", $P101 
    .local pmc fb_tmp_31 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $P5002, "$i"
    set $N5002, $P5002
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$i", $P5003
.annotate 'line', 470
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    nqp_get_sc_object $P5006, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 3
    repr_get_attr_obj $P5007, $P5004, $P5006, "@!BLOCKS"
    set fb_tmp_31, $P5007
    repr_defined $I5001, fb_tmp_31
    unless $I5001 goto if100_else189 
    find_lex $P5009, "$i"
    set $I5002, $P5009
    set $P5008, fb_tmp_31[$I5002]
    set $P5011, $P5008
    goto if100_end190
  if100_else189:
    null $P5010
    set $P5011, $P5010
  if100_end190:
    unless_null $P5011, vivi_101191
    nqp_get_sc_object $P5012, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5011, $P5012
  vivi_101191:
    $P5013 = $P5011."symtable"()
    set $P101, $P5013
    set $P5014, $P101
    iter $P5016, $P101
  for_next207:
    unless $P5016, for_done209
    shift $P5018, $P5016
  for_redo208:
    .const 'Sub' $P5017 = 'cuid_387_1361734139.417' 
    capture_lex $P5017
    $P5014 = $P5017($P5018)
    goto for_next207
  for_done209:
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_387_1361734139.417") :anon :lex :outer("cuid_388_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 471
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_32 
    .local pmc fb_tmp_33 
    .local pmc fb_tmp_34 
    find_lex $P5001, "%seen"
    set fb_tmp_32, $P5001
    repr_defined $I5002, fb_tmp_32
    unless $I5002 goto if104_else196 
.annotate 'line', 472
    $P5003 = _lex_param_0."key"()
    set $S5001, $P5003
    set $P5002, fb_tmp_32[$S5001]
    set $P5005, $P5002
    goto if104_end197
  if104_else196:
    null $P5004
    set $P5005, $P5004
  if104_end197:
    unless_null $P5005, vivi_105198
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5005, $P5006
  vivi_105198:
    isfalse $I5001, $P5005
    set $I5004, $I5001
    unless $I5001 goto if103_end195 
    $P5007 = _lex_param_0."value"()
    exists $I5003, $P5007["value"]
    set $I5004, $I5003
  if103_end195:
    box $P5032, $I5004
    set $P5031, $P5032
    unless $I5004 goto if102_end193 
    new $P5026, 'ExceptionHandler'
    set_label $P5026, catch_handler_111206
    $P5026.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5026
.annotate 'line', 473
.annotate 'line', 474
    find_lex $P5008, "$wrapper"
    set fb_tmp_33, $P5008
    repr_defined $I5005, fb_tmp_33
    unless $I5005 goto if106_else199 
    set $P5009, fb_tmp_33[0]
    set $P5011, $P5009
    goto if106_end200
  if106_else199:
    null $P5010
    set $P5011, $P5010
  if106_end200:
    unless_null $P5011, vivi_107201
    nqp_get_sc_object $P5012, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5011, $P5012
  vivi_107201:
    nqp_get_sc_object $P5013, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 476
    nqp_get_sc_object $P5014, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5015 = _lex_param_0."key"()
    $P5016 = $P5014."new"($P5015 :named("name"), "lexical" :named("scope"), "var" :named("isdecl"))
.annotate 'line', 477
    nqp_get_sc_object $P5017, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 61
    $P5018 = _lex_param_0."value"()
    set fb_tmp_34, $P5018
    repr_defined $I5006, fb_tmp_34
    unless $I5006 goto if108_else202 
    set $P5019, fb_tmp_34["value"]
    set $P5021, $P5019
    goto if108_end203
  if108_else202:
    null $P5020
    set $P5021, $P5020
  if108_end203:
    unless_null $P5021, vivi_109204
    nqp_get_sc_object $P5022, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5021, $P5022
  vivi_109204:
    $P5023 = $P5017."new"($P5021 :named("value"))
    $P5024 = $P5013."new"($P5016, $P5023, "bind" :named("op"))
    $P5025 = $P5011."push"($P5024)
    set $P5027, $P5025
    pop_eh 
    goto skip_handler_110205
  catch_handler_111206:
    .get_results ($P5026) 
    set $I10001, 1
    set $P5026["handled"], $I10001
    nqp_get_sc_object $P10001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    finalize $P5026
    pop_upto_eh $P5026
    pop_eh 
    set $P5027, $P10001
    goto skip_handler_110205
  skip_handler_110205:
    find_lex $P5028, "%seen"
.annotate 'line', 480
    $P5029 = _lex_param_0."key"()
    set $S5002, $P5029
    box $P5030, 1
    set $P5028[$S5002], $P5030
    set $P5031, $P5030
  if102_end193:
    .return ($P5031) 
.end
.HLL "nqp"
.namespace []
.sub "libs" :subid("cuid_27_1361734139.417") :anon :lex :outer("cuid_376_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 499
    .param pmc _lex_param_0 
    .const 'Sub' $P5050 = 'cuid_389_1361734139.417' 
    capture_lex $P5050 
    .lex "@loadlibs", $P101 
    .lex "self", _lex_param_0 
    .local pmc fb_tmp_36 
    .local pmc fb_tmp_37 
    .local pmc fb_tmp_38 
    .local pmc pkg_viv_tmp_5 
    .local pmc fb_tmp_39 
    .local pmc fb_tmp_40 
    .local pmc fb_tmp_41 
    .local pmc pkg_viv_tmp_6 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    new $P5002, 'ResizablePMCArray'
    box $P5003, "nqp_group"
    push $P5002, $P5003
    box $P5004, "nqp_ops"
    push $P5002, $P5004
    box $P5005, "nqp_bigint_ops"
    push $P5002, $P5005
    box $P5006, "trans_ops"
    push $P5002, $P5006
    box $P5007, "io_ops"
    push $P5002, $P5007
    set $P101, $P5002
    find_dynamic_lex $P5008, "%*COMPILING"
    unless_null $P5008, fallback221
    nqp_get_sc_object $P5010, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5009, $P5010
    set pkg_viv_tmp_5, $P5009
    set fb_tmp_38, pkg_viv_tmp_5
    repr_defined $I5003, fb_tmp_38
    unless $I5003 goto if118_else222 
    set $P5011, fb_tmp_38["%COMPILING"]
    set $P5013, $P5011
    goto if118_end223
  if118_else222:
    null $P5012
    set $P5013, $P5012
  if118_end223:
    unless_null $P5013, vivi_119224
    new $P5014, 'Hash'
    set pkg_viv_tmp_5["%COMPILING"], $P5014
    set $P5013, $P5014
  vivi_119224:
    unless_null $P5013, vivi_120225
    die "Contextual %*COMPILING not found"
    box $P5015, "Contextual %*COMPILING not found"
    set $P5013, $P5015
  vivi_120225:
    set $P5008, $P5013
  fallback221:
    set fb_tmp_37, $P5008
    repr_defined $I5002, fb_tmp_37
    unless $I5002 goto if117_else219 
    set $P5016, fb_tmp_37["%?OPTIONS"]
    set $P5018, $P5016
    goto if117_end220
  if117_else219:
    null $P5017
    set $P5018, $P5017
  if117_end220:
    unless_null $P5018, vivi_121226
    nqp_get_sc_object $P5019, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5018, $P5019
  vivi_121226:
    set fb_tmp_36, $P5018
    repr_defined $I5001, fb_tmp_36
    unless $I5001 goto if116_else217 
    set $P5020, fb_tmp_36["vmlibs"]
    set $P5022, $P5020
    goto if116_end218
  if116_else217:
    null $P5021
    set $P5022, $P5021
  if116_end218:
    unless_null $P5022, vivi_122227
    nqp_get_sc_object $P5023, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5022, $P5023
  vivi_122227:
    unless $P5022 goto if115_end216 
.annotate 'line', 502
    find_dynamic_lex $P5028, "%*COMPILING"
    unless_null $P5028, fallback232
    nqp_get_sc_object $P5030, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5029, $P5030
    set pkg_viv_tmp_6, $P5029
    set fb_tmp_41, pkg_viv_tmp_6
    repr_defined $I5006, fb_tmp_41
    unless $I5006 goto if125_else233 
    set $P5031, fb_tmp_41["%COMPILING"]
    set $P5033, $P5031
    goto if125_end234
  if125_else233:
    null $P5032
    set $P5033, $P5032
  if125_end234:
    unless_null $P5033, vivi_126235
    new $P5034, 'Hash'
    set pkg_viv_tmp_6["%COMPILING"], $P5034
    set $P5033, $P5034
  vivi_126235:
    unless_null $P5033, vivi_127236
    die "Contextual %*COMPILING not found"
    box $P5035, "Contextual %*COMPILING not found"
    set $P5033, $P5035
  vivi_127236:
    set $P5028, $P5033
  fallback232:
    set fb_tmp_40, $P5028
    repr_defined $I5005, fb_tmp_40
    unless $I5005 goto if124_else230 
    set $P5036, fb_tmp_40["%?OPTIONS"]
    set $P5038, $P5036
    goto if124_end231
  if124_else230:
    null $P5037
    set $P5038, $P5037
  if124_end231:
    unless_null $P5038, vivi_128237
    nqp_get_sc_object $P5039, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5038, $P5039
  vivi_128237:
    set fb_tmp_39, $P5038
    repr_defined $I5004, fb_tmp_39
    unless $I5004 goto if123_else228 
    set $P5040, fb_tmp_39["vmlibs"]
    set $P5042, $P5040
    goto if123_end229
  if123_else228:
    null $P5041
    set $P5042, $P5041
  if123_end229:
    unless_null $P5042, vivi_129238
    nqp_get_sc_object $P5043, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5042, $P5043
  vivi_129238:
    set $S5001, $P5042
    split $P5027, ",", $S5001
    set $P5024, $P5027
    iter $P5026, $P5027
  for_next239:
    unless $P5026, for_done241
    shift $P5045, $P5026
  for_redo240:
    .const 'Sub' $P5044 = 'cuid_389_1361734139.417' 
    capture_lex $P5044
    $P5024 = $P5044($P5045)
    goto for_next239
  for_done241:
  if115_end216:
.annotate 'line', 507
    nqp_get_sc_object $P5046, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 89
.annotate 'line', 509
    nqp_get_sc_object $P5047, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    $P5048 = $P5047."new"("null" :named("op"))
    $P5049 = $P5046."new"($P101 :named("loadlibs"), $P5048 :named("jvm"))
    .return ($P5049) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_389_1361734139.417") :anon :lex :outer("cuid_27_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 503
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 504
    find_lex $P5001, "@loadlibs"
    $P5002 = $P5001."push"(_lex_param_0)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "add_initializations" :subid("cuid_28_1361734139.417") :anon :lex :outer("cuid_376_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 513
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
.annotate 'line', 514
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 89
.annotate 'line', 515
    nqp_get_sc_object $P5003, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 93
.annotate 'line', 516
    nqp_get_sc_object $P5004, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 89
    $P5005 = $P5004."new"("nqp_dynop_setup v" :named("pirop"))
.annotate 'line', 517
    nqp_get_sc_object $P5006, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 89
    $P5007 = $P5006."new"("nqp_bigint_setup v" :named("pirop"))
.annotate 'line', 518
    nqp_get_sc_object $P5008, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 520
    nqp_get_sc_object $P5009, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 89
    $P5010 = $P5009."new"("getinterp P" :named("pirop"))
.annotate 'line', 521
    nqp_get_sc_object $P5011, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 89
    nqp_get_sc_object $P5012, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 52
    $P5013 = $P5012."new"("LexPad" :named("value"))
    $P5014 = $P5011."new"($P5013, "get_class Ps" :named("pirop"))
.annotate 'line', 522
    nqp_get_sc_object $P5015, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 89
    nqp_get_sc_object $P5016, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 52
    $P5017 = $P5016."new"("NQPLexPad" :named("value"))
    $P5018 = $P5015."new"($P5017, "get_class Ps" :named("pirop"))
    $P5019 = $P5008."new"($P5010, $P5014, $P5018, "callmethod" :named("op"), "hll_map" :named("name"))
    $P5020 = $P5003."new"($P5005, $P5007, $P5019)
.annotate 'line', 524
    nqp_get_sc_object $P5021, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    $P5022 = $P5021."new"("null" :named("op"))
    $P5023 = $P5002."new"($P5020 :named("parrot"), $P5022 :named("jvm"))
    $P5024 = $P5001."add_load_dependency_task"($P5023 :named("deserialize_past"))
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "cleanup" :subid("cuid_29_1361734139.417") :anon :lex :outer("cuid_376_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 529
    .param pmc _lex_param_0 
    .const 'Sub' $P5009 = 'cuid_390_1361734139.417' 
    capture_lex $P5009 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5004, _lex_param_0
    nqp_get_sc_object $P5005, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 3
    repr_get_attr_obj $P5006, $P5004, $P5005, "@!clearup_tasks"
    set $P5001, $P5006
    iter $P5003, $P5006
  for_next242:
    unless $P5003, for_done244
    shift $P5008, $P5003
  for_redo243:
    .const 'Sub' $P5007 = 'cuid_390_1361734139.417' 
    capture_lex $P5007
    $P5001 = $P5007($P5008)
    goto for_next242
  for_done244:
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_390_1361734139.417") :anon :lex :outer("cuid_29_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 530
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    $P5001 = _lex_param_0()
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "is_lexical" :subid("cuid_30_1361734139.417") :anon :lex :outer("cuid_376_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 535
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
.annotate 'line', 536
    nqp_decontainerize $P5001, _lex_param_0
    $P5002 = $P5001."is_scope"(_lex_param_1, "lexical")
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "is_package" :subid("cuid_31_1361734139.417") :anon :lex :outer("cuid_376_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 541
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
.annotate 'line', 542
    nqp_decontainerize $P5001, _lex_param_0
    $P5002 = $P5001."is_scope"(_lex_param_1, "package")
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "is_scope" :subid("cuid_32_1361734139.417") :anon :lex :outer("cuid_376_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 547
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .const 'Sub' $P5011 = 'cuid_391_1361734139.417' 
    capture_lex $P5011 
    .lex "$i", $P101 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
    .lex "$wanted_scope", _lex_param_2 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_245
    .lex "RETURN", $P102
    nqp_decontainerize $P5002, _lex_param_0
    nqp_get_sc_object $P5003, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 3
    repr_get_attr_obj $P5004, $P5002, $P5003, "@!BLOCKS"
    set $N5001, $P5004
    box $P5005, $N5001
    set $P101, $P5005
  while130_test247:
    set $N5002, $P101
    set $N5003, 0
    isgt $I5001, $N5002, $N5003
    box $P5009, $I5001
    set $P5008, $P5009
    unless $I5001 goto while130_done251 
  while130_redo249:
    .const 'Sub' $P5006 = 'cuid_391_1361734139.417' 
    capture_lex $P5006
    $P5007 = $P5006()
    set $P5008, $P5007
    goto while130_test247 
  while130_done251:
    box $P5010, 0
    goto lexotic_246
  lexotic_245:
    .get_results ($P5010)
  lexotic_246:
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_391_1361734139.417") :anon :lex :outer("cuid_32_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 549
    .lex "%sym", $P101 
    .local pmc fb_tmp_42 
    .local pmc fb_tmp_43 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $P5002, "$i"
    set $N5002, $P5002
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$i", $P5003
.annotate 'line', 551
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    nqp_get_sc_object $P5006, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 3
    repr_get_attr_obj $P5007, $P5004, $P5006, "@!BLOCKS"
    set fb_tmp_42, $P5007
    repr_defined $I5001, fb_tmp_42
    unless $I5001 goto if131_else252 
    find_lex $P5009, "$i"
    set $I5002, $P5009
    set $P5008, fb_tmp_42[$I5002]
    set $P5011, $P5008
    goto if131_end253
  if131_else252:
    null $P5010
    set $P5011, $P5010
  if131_end253:
    unless_null $P5011, vivi_132254
    nqp_get_sc_object $P5012, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5011, $P5012
  vivi_132254:
    find_lex $P5013, "$name"
    $P5014 = $P5011."symbol"($P5013)
    set $P101, $P5014
    set $N5004, $P101
    box $P5023, $N5004
    set $P5022, $P5023
    unless $N5004 goto if133_end256 
.annotate 'line', 552
    set fb_tmp_43, $P101
    repr_defined $I5004, fb_tmp_43
    unless $I5004 goto if134_else257 
    set $P5016, fb_tmp_43["scope"]
    set $P5018, $P5016
    goto if134_end258
  if134_else257:
    null $P5017
    set $P5018, $P5017
  if134_end258:
    unless_null $P5018, vivi_135259
    nqp_get_sc_object $P5019, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5018, $P5019
  vivi_135259:
    set $S5001, $P5018
    find_lex $P5020, "$wanted_scope"
    set $S5002, $P5020
    iseq $I5003, $S5001, $S5002
    find_lex $P5015, "RETURN"
    $P5021 = $P5015($I5003)
    set $P5022, $P5021
  if133_end256:
    .return ($P5022) 
.end
.HLL "nqp"
.namespace []
.sub "known_sym" :subid("cuid_33_1361734139.417") :anon :lex :outer("cuid_376_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 560
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$known", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .lex "@name", _lex_param_2 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    box $P5002, 0
    set $P101, $P5002
    new $P5005, 'ExceptionHandler'
    set_label $P5005, catch_handler_137261
    $P5005.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5005
.annotate 'line', 562
.annotate 'line', 563
    nqp_decontainerize $P5003, _lex_param_0
    $P5003."find_sym"(_lex_param_2)
    box $P5004, 1
    set $P101, $P5004
    set $P5006, $P101
    pop_eh 
    goto skip_handler_136260
  catch_handler_137261:
    .get_results ($P5005) 
    set $I10001, 1
    set $P5005["handled"], $I10001
    nqp_get_sc_object $P10001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    finalize $P5005
    pop_upto_eh $P5005
    pop_eh 
    set $P5006, $P10001
    goto skip_handler_136260
  skip_handler_136260:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "find_sym" :subid("cuid_34_1361734139.417") :anon :lex :outer("cuid_376_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 572
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5020 = 'cuid_393_1361734139.417' 
    capture_lex $P5020 
    .const 'Sub' $P5020 = 'cuid_395_1361734139.417' 
    capture_lex $P5020 
    .const 'Sub' $P5020 = 'cuid_396_1361734139.417' 
    capture_lex $P5020 
    .lex "$result", $P101 
    .lex "self", _lex_param_0 
    .lex "@name", _lex_param_1 
    .local pmc fb_tmp_47 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_262
    .lex "RETURN", $P102
    set $N5001, _lex_param_1
    if $N5001 goto unless138_end265 
.annotate 'line', 574
    box $P5002, "Cannot look up empty name"
    die $P5002
  unless138_end265:
    set $N5002, _lex_param_1
    set $N5003, 1
    iseq $I5001, $N5002, $N5003
    unless $I5001 goto if139_end267 
    .const 'Sub' $P5003 = 'cuid_393_1361734139.417' 
    capture_lex $P5003
    $P5004 = $P5003()
  if139_end267:
    find_dynamic_lex $P5005, "$*GLOBALish"
    unless_null $P5005, fallback286
    nqp_get_sc_object $P5007, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5006, $P5007
    set fb_tmp_47, $P5006
    repr_defined $I5002, fb_tmp_47
    unless $I5002 goto if149_else287 
    set $P5008, fb_tmp_47["$GLOBALish"]
    set $P5010, $P5008
    goto if149_end288
  if149_else287:
    null $P5009
    set $P5010, $P5009
  if149_end288:
    unless_null $P5010, vivi_150289
    nqp_get_sc_object $P5011, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5010, $P5011
  vivi_150289:
    unless_null $P5010, vivi_151290
    die "Contextual $*GLOBALish not found"
    box $P5012, "Contextual $*GLOBALish not found"
    set $P5010, $P5012
  vivi_151290:
    set $P5005, $P5010
  fallback286:
    set $P101, $P5005
    set $N5004, _lex_param_1
    set $N5005, 2
    isge $I5003, $N5004, $N5005
    unless $I5003 goto if152_end292 
    .const 'Sub' $P5013 = 'cuid_395_1361734139.417' 
    capture_lex $P5013
    $P5014 = $P5013()
  if152_end292:
    set $P5015, _lex_param_1
    iter $P5017, _lex_param_1
  for_next316:
    unless $P5017, for_done318
    shift $P5019, $P5017
  for_redo317:
    .const 'Sub' $P5018 = 'cuid_396_1361734139.417' 
    capture_lex $P5018
    $P5015 = $P5018($P5019)
    goto for_next316
  for_done318:
    goto lexotic_263
  lexotic_262:
    .get_results ($P101)
  lexotic_263:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_393_1361734139.417") :anon :lex :outer("cuid_34_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 578
    .const 'Sub' $P5017 = 'cuid_392_1361734139.417' 
    capture_lex $P5017 
    .lex "$final_name", $P101 
    .lex "$i", $P102 
    .local pmc fb_tmp_44 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
    find_lex $P5003, "@name"
    set fb_tmp_44, $P5003
    repr_defined $I5001, fb_tmp_44
    unless $I5001 goto if140_else268 
    set $P5004, fb_tmp_44[0]
    set $P5006, $P5004
    goto if140_end269
  if140_else268:
    null $P5005
    set $P5006, $P5005
  if140_end269:
    unless_null $P5006, vivi_141270
    nqp_get_sc_object $P5007, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5006, $P5007
  vivi_141270:
    set $P101, $P5006
    find_lex $P5009, "self"
    nqp_decontainerize $P5008, $P5009
    nqp_get_sc_object $P5010, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 3
    repr_get_attr_obj $P5011, $P5008, $P5010, "@!BLOCKS"
    set $N5001, $P5011
    box $P5012, $N5001
    set $P102, $P5012
  while142_test271:
    set $N5002, $P102
    set $N5003, 0
    isgt $I5002, $N5002, $N5003
    box $P5016, $I5002
    set $P5015, $P5016
    unless $I5002 goto while142_done275 
  while142_redo273:
    .const 'Sub' $P5013 = 'cuid_392_1361734139.417' 
    capture_lex $P5013
    $P5014 = $P5013()
    set $P5015, $P5014
    goto while142_test271 
  while142_done275:
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_392_1361734139.417") :anon :lex :outer("cuid_393_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 581
    .lex "%sym", $P101 
    .local pmc fb_tmp_45 
    .local pmc fb_tmp_46 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $P5002, "$i"
    set $N5002, $P5002
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$i", $P5003
.annotate 'line', 583
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    nqp_get_sc_object $P5006, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 3
    repr_get_attr_obj $P5007, $P5004, $P5006, "@!BLOCKS"
    set fb_tmp_45, $P5007
    repr_defined $I5001, fb_tmp_45
    unless $I5001 goto if143_else276 
    find_lex $P5009, "$i"
    set $I5002, $P5009
    set $P5008, fb_tmp_45[$I5002]
    set $P5011, $P5008
    goto if143_end277
  if143_else276:
    null $P5010
    set $P5011, $P5010
  if143_end277:
    unless_null $P5011, vivi_144278
    nqp_get_sc_object $P5012, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5011, $P5012
  vivi_144278:
    find_lex $P5013, "$final_name"
    $P5014 = $P5011."symbol"($P5013)
    set $P101, $P5014
    set $N5004, $P101
    box $P5025, $N5004
    set $P5024, $P5025
    unless $N5004 goto if145_end280 
.annotate 'line', 584
    exists $I5003, $P101["value"]
    unless $I5003 goto if146_else281 
.annotate 'line', 585
    set fb_tmp_46, $P101
    repr_defined $I5004, fb_tmp_46
    unless $I5004 goto if147_else283 
    set $P5016, fb_tmp_46["value"]
    set $P5018, $P5016
    goto if147_end284
  if147_else283:
    null $P5017
    set $P5018, $P5017
  if147_end284:
    unless_null $P5018, vivi_148285
    nqp_get_sc_object $P5019, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5018, $P5019
  vivi_148285:
    find_lex $P5015, "RETURN"
    $P5020 = $P5015($P5018)
    set $P5023, $P5020
    goto if146_end282
  if146_else281:
.annotate 'line', 588
    find_lex $P5021, "$final_name"
    set $S5002, $P5021
    concat $S5001, "No compile-time value for ", $S5002
    box $P5022, $S5001
    die $P5022
    set $P5023, $P5022
  if146_end282:
    set $P5024, $P5023
  if145_end280:
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_395_1361734139.417") :anon :lex :outer("cuid_34_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 599
    .const 'Sub' $P5017 = 'cuid_394_1361734139.417' 
    capture_lex $P5017 
    .lex "$first", $P101 
    .lex "$i", $P102 
    .local pmc fb_tmp_48 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
    find_lex $P5003, "@name"
    set fb_tmp_48, $P5003
    repr_defined $I5001, fb_tmp_48
    unless $I5001 goto if153_else293 
    set $P5004, fb_tmp_48[0]
    set $P5006, $P5004
    goto if153_end294
  if153_else293:
    null $P5005
    set $P5006, $P5005
  if153_end294:
    unless_null $P5006, vivi_154295
    nqp_get_sc_object $P5007, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5006, $P5007
  vivi_154295:
    set $P101, $P5006
    find_lex $P5009, "self"
    nqp_decontainerize $P5008, $P5009
    nqp_get_sc_object $P5010, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 3
    repr_get_attr_obj $P5011, $P5008, $P5010, "@!BLOCKS"
    set $N5001, $P5011
    box $P5012, $N5001
    set $P102, $P5012
  while155_test296:
    set $N5002, $P102
    set $N5003, 0
    isgt $I5002, $N5002, $N5003
    box $P5016, $I5002
    set $P5015, $P5016
    unless $I5002 goto while155_done300 
  while155_redo298:
    .const 'Sub' $P5013 = 'cuid_394_1361734139.417' 
    capture_lex $P5013
    $P5014 = $P5013()
    set $P5015, $P5014
    goto while155_test296 
  while155_done300:
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_394_1361734139.417") :anon :lex :outer("cuid_395_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 602
    .lex "%sym", $P101 
    .local pmc fb_tmp_49 
    .local pmc fb_tmp_50 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $P5002, "$i"
    set $N5002, $P5002
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$i", $P5003
.annotate 'line', 604
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    nqp_get_sc_object $P5006, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 3
    repr_get_attr_obj $P5007, $P5004, $P5006, "@!BLOCKS"
    set fb_tmp_49, $P5007
    repr_defined $I5001, fb_tmp_49
    unless $I5001 goto if156_else301 
    find_lex $P5009, "$i"
    set $I5002, $P5009
    set $P5008, fb_tmp_49[$I5002]
    set $P5011, $P5008
    goto if156_end302
  if156_else301:
    null $P5010
    set $P5011, $P5010
  if156_end302:
    unless_null $P5011, vivi_157303
    nqp_get_sc_object $P5012, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5011, $P5012
  vivi_157303:
    find_lex $P5013, "$first"
    $P5014 = $P5011."symbol"($P5013)
    set $P101, $P5014
    set $N5004, $P101
    box $P5025, $N5004
    set $P5024, $P5025
    unless $N5004 goto if158_end305 
.annotate 'line', 605
    exists $I5003, $P101["value"]
    unless $I5003 goto if159_else306 
.annotate 'line', 606
    set fb_tmp_50, $P101
    repr_defined $I5004, fb_tmp_50
    unless $I5004 goto if160_else308 
    set $P5015, fb_tmp_50["value"]
    set $P5017, $P5015
    goto if160_end309
  if160_else308:
    null $P5016
    set $P5017, $P5016
  if160_end309:
    unless_null $P5017, vivi_161310
    nqp_get_sc_object $P5018, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5017, $P5018
  vivi_161310:
    store_lex "$result", $P5017
.annotate 'line', 608
    find_lex $P5019, "@name"
    $P5019."shift"()
    box $P5020, 0
    store_lex "$i", $P5020
    set $P5023, $P5020
    goto if159_end307
  if159_else306:
.annotate 'line', 611
    find_lex $P5021, "$first"
    set $S5002, $P5021
    concat $S5001, "No compile-time value for ", $S5002
    box $P5022, $S5001
    die $P5022
    set $P5023, $P5022
  if159_end307:
    set $P5024, $P5023
  if158_end305:
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_396_1361734139.417") :anon :lex :outer("cuid_34_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 619
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_51 
    find_lex $P5002, "$result"
    get_who $P5001, $P5002
    set $S5001, _lex_param_0
    exists $I5001, $P5001[$S5001]
    unless $I5001 goto if162_else311 
.annotate 'line', 620
    find_lex $P5004, "$result"
    get_who $P5003, $P5004
    set fb_tmp_51, $P5003
    repr_defined $I5002, fb_tmp_51
    unless $I5002 goto if163_else313 
    set $S5002, _lex_param_0
    set $P5005, fb_tmp_51[$S5002]
    set $P5007, $P5005
    goto if163_end314
  if163_else313:
    null $P5006
    set $P5007, $P5006
  if163_end314:
    unless_null $P5007, vivi_164315
    nqp_get_sc_object $P5008, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5007, $P5008
  vivi_164315:
    store_lex "$result", $P5007
    set $P5011, $P5007
    goto if162_end312
  if162_else311:
.annotate 'line', 623
    find_lex $P5009, "@name"
    join $S5004, "::", $P5009
    concat $S5003, "Could not locate compile-time value for symbol ", $S5004
    box $P5010, $S5003
    die $P5010
    set $P5011, $P5010
  if162_end312:
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_397_1361734139.417") :anon :lex :outer("cuid_374_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 634
    .const 'Sub' $P5199 = 'cuid_35_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_36_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_37_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_38_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_39_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_40_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_41_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_43_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_45_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_46_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_47_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_49_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_50_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_51_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_52_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_53_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_54_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_55_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_56_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_57_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_58_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_59_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_60_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_61_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_62_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_63_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_64_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_65_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_67_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_68_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_69_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_70_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_71_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_72_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_73_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_74_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_75_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_76_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_77_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_78_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_79_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_80_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_81_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_82_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_83_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_84_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_85_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_86_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_87_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_88_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_89_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_90_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_93_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_94_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_95_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_96_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_97_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_98_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_99_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_100_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_101_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_102_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_103_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_104_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_105_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_106_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_107_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_108_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_109_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_110_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_111_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_112_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_113_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_114_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_115_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_116_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_117_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_118_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_119_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_120_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_121_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_122_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_123_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_124_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_125_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_126_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_127_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_128_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_129_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_131_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_132_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_133_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_134_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_135_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_136_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_137_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_138_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_139_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_140_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_141_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_142_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_143_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_144_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_145_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_146_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_147_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_148_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_149_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_150_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_151_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_152_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_153_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_154_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_155_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_156_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_157_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_158_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_159_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_160_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_161_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_162_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_163_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_164_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_165_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_166_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_167_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_168_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_169_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_170_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_171_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_172_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_173_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_174_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_175_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_176_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_177_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_178_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_179_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_180_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_181_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_182_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_183_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_184_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_185_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_186_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_187_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_188_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_189_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_190_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_191_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_192_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_193_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_194_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_195_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_196_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_197_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_198_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_199_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_200_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_201_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_202_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_203_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_204_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_205_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_206_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_207_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_208_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_209_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_210_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_211_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_212_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_213_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_214_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_215_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_216_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_217_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_218_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_219_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_220_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_221_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_223_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_225_1361734139.417' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_227_1361734139.417' 
    capture_lex $P5199 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
.annotate 'line', 1304
.annotate 'line', 1305
    nqp_get_sc_object $P5001, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 38
    $P5001."O"(":prec<y=>, :assoc<unary>", "%methodop")
.annotate 'line', 1306
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 38
    $P5002."O"(":prec<x=>, :assoc<unary>", "%autoincrement")
.annotate 'line', 1307
    nqp_get_sc_object $P5003, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 38
    $P5003."O"(":prec<w=>, :assoc<left>", "%exponentiation")
.annotate 'line', 1308
    nqp_get_sc_object $P5004, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 38
    $P5004."O"(":prec<v=>, :assoc<unary>", "%symbolic_unary")
.annotate 'line', 1309
    nqp_get_sc_object $P5005, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 38
    $P5005."O"(":prec<u=>, :assoc<left>", "%multiplicative")
.annotate 'line', 1310
    nqp_get_sc_object $P5006, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 38
    $P5006."O"(":prec<t=>, :assoc<left>", "%additive")
.annotate 'line', 1311
    nqp_get_sc_object $P5007, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 38
    $P5007."O"(":prec<r=>, :assoc<left>", "%concatenation")
.annotate 'line', 1312
    nqp_get_sc_object $P5008, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 38
    $P5008."O"(":prec<m=>, :assoc<left>", "%relational")
.annotate 'line', 1313
    nqp_get_sc_object $P5009, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 38
    $P5009."O"(":prec<l=>, :assoc<left>", "%tight_and")
.annotate 'line', 1314
    nqp_get_sc_object $P5010, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 38
    $P5010."O"(":prec<k=>, :assoc<left>", "%tight_or")
.annotate 'line', 1315
    nqp_get_sc_object $P5011, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 38
    $P5011."O"(":prec<j=>, :assoc<right>", "%conditional")
.annotate 'line', 1316
    nqp_get_sc_object $P5012, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 38
    $P5012."O"(":prec<i=>, :assoc<right>", "%assignment")
.annotate 'line', 1317
    nqp_get_sc_object $P5013, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 38
    $P5013."O"(":prec<g=>, :assoc<list>, :nextterm<nulltermish>", "%comma")
.annotate 'line', 1318
    nqp_get_sc_object $P5014, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 38
    $P5014."O"(":prec<f=>, :assoc<list>", "%list_infix")
.annotate 'line', 1319
    nqp_get_sc_object $P5015, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 38
    $P5015."O"(":prec<e=>, :assoc<unary>", "%list_prefix")
.annotate 'line', 634
    .const 'Sub' $P5016 = 'cuid_35_1361734139.417' 
    capture_lex $P5016
    .const 'Sub' $P5017 = 'cuid_36_1361734139.417' 
    capture_lex $P5017
    .const 'Sub' $P5018 = 'cuid_37_1361734139.417' 
    capture_lex $P5018
    .const 'Sub' $P5019 = 'cuid_38_1361734139.417' 
    capture_lex $P5019
    .const 'Sub' $P5020 = 'cuid_39_1361734139.417' 
    capture_lex $P5020
    .const 'Sub' $P5021 = 'cuid_40_1361734139.417' 
    capture_lex $P5021
    .const 'Sub' $P5022 = 'cuid_41_1361734139.417' 
    capture_lex $P5022
    .const 'Sub' $P5023 = 'cuid_43_1361734139.417' 
    capture_lex $P5023
    .const 'Sub' $P5024 = 'cuid_45_1361734139.417' 
    capture_lex $P5024
    .const 'Sub' $P5025 = 'cuid_46_1361734139.417' 
    capture_lex $P5025
    .const 'Sub' $P5026 = 'cuid_47_1361734139.417' 
    capture_lex $P5026
    .const 'Sub' $P5027 = 'cuid_49_1361734139.417' 
    capture_lex $P5027
    .const 'Sub' $P5028 = 'cuid_50_1361734139.417' 
    capture_lex $P5028
    .const 'Sub' $P5029 = 'cuid_51_1361734139.417' 
    capture_lex $P5029
    .const 'Sub' $P5030 = 'cuid_52_1361734139.417' 
    capture_lex $P5030
    .const 'Sub' $P5031 = 'cuid_53_1361734139.417' 
    capture_lex $P5031
    .const 'Sub' $P5032 = 'cuid_54_1361734139.417' 
    capture_lex $P5032
    .const 'Sub' $P5033 = 'cuid_55_1361734139.417' 
    capture_lex $P5033
    .const 'Sub' $P5034 = 'cuid_56_1361734139.417' 
    capture_lex $P5034
    .const 'Sub' $P5035 = 'cuid_57_1361734139.417' 
    capture_lex $P5035
    .const 'Sub' $P5036 = 'cuid_58_1361734139.417' 
    capture_lex $P5036
    .const 'Sub' $P5037 = 'cuid_59_1361734139.417' 
    capture_lex $P5037
    .const 'Sub' $P5038 = 'cuid_60_1361734139.417' 
    capture_lex $P5038
    .const 'Sub' $P5039 = 'cuid_61_1361734139.417' 
    capture_lex $P5039
    .const 'Sub' $P5040 = 'cuid_62_1361734139.417' 
    capture_lex $P5040
    .const 'Sub' $P5041 = 'cuid_63_1361734139.417' 
    capture_lex $P5041
    .const 'Sub' $P5042 = 'cuid_64_1361734139.417' 
    capture_lex $P5042
    .const 'Sub' $P5043 = 'cuid_65_1361734139.417' 
    capture_lex $P5043
    .const 'Sub' $P5044 = 'cuid_67_1361734139.417' 
    capture_lex $P5044
    .const 'Sub' $P5045 = 'cuid_68_1361734139.417' 
    capture_lex $P5045
    .const 'Sub' $P5046 = 'cuid_69_1361734139.417' 
    capture_lex $P5046
    .const 'Sub' $P5047 = 'cuid_70_1361734139.417' 
    capture_lex $P5047
    .const 'Sub' $P5048 = 'cuid_71_1361734139.417' 
    capture_lex $P5048
    .const 'Sub' $P5049 = 'cuid_72_1361734139.417' 
    capture_lex $P5049
    .const 'Sub' $P5050 = 'cuid_73_1361734139.417' 
    capture_lex $P5050
    .const 'Sub' $P5051 = 'cuid_74_1361734139.417' 
    capture_lex $P5051
    .const 'Sub' $P5052 = 'cuid_75_1361734139.417' 
    capture_lex $P5052
    .const 'Sub' $P5053 = 'cuid_76_1361734139.417' 
    capture_lex $P5053
    .const 'Sub' $P5054 = 'cuid_77_1361734139.417' 
    capture_lex $P5054
    .const 'Sub' $P5055 = 'cuid_78_1361734139.417' 
    capture_lex $P5055
    .const 'Sub' $P5056 = 'cuid_79_1361734139.417' 
    capture_lex $P5056
    .const 'Sub' $P5057 = 'cuid_80_1361734139.417' 
    capture_lex $P5057
    .const 'Sub' $P5058 = 'cuid_81_1361734139.417' 
    capture_lex $P5058
    .const 'Sub' $P5059 = 'cuid_82_1361734139.417' 
    capture_lex $P5059
    .const 'Sub' $P5060 = 'cuid_83_1361734139.417' 
    capture_lex $P5060
    .const 'Sub' $P5061 = 'cuid_84_1361734139.417' 
    capture_lex $P5061
    .const 'Sub' $P5062 = 'cuid_85_1361734139.417' 
    capture_lex $P5062
    .const 'Sub' $P5063 = 'cuid_86_1361734139.417' 
    capture_lex $P5063
    .const 'Sub' $P5064 = 'cuid_87_1361734139.417' 
    capture_lex $P5064
    .const 'Sub' $P5065 = 'cuid_88_1361734139.417' 
    capture_lex $P5065
    .const 'Sub' $P5066 = 'cuid_89_1361734139.417' 
    capture_lex $P5066
    .const 'Sub' $P5067 = 'cuid_90_1361734139.417' 
    capture_lex $P5067
    .const 'Sub' $P5068 = 'cuid_93_1361734139.417' 
    capture_lex $P5068
    .const 'Sub' $P5069 = 'cuid_94_1361734139.417' 
    capture_lex $P5069
    .const 'Sub' $P5070 = 'cuid_95_1361734139.417' 
    capture_lex $P5070
    .const 'Sub' $P5071 = 'cuid_96_1361734139.417' 
    capture_lex $P5071
    .const 'Sub' $P5072 = 'cuid_97_1361734139.417' 
    capture_lex $P5072
    .const 'Sub' $P5073 = 'cuid_98_1361734139.417' 
    capture_lex $P5073
    .const 'Sub' $P5074 = 'cuid_99_1361734139.417' 
    capture_lex $P5074
    .const 'Sub' $P5075 = 'cuid_100_1361734139.417' 
    capture_lex $P5075
    .const 'Sub' $P5076 = 'cuid_101_1361734139.417' 
    capture_lex $P5076
    .const 'Sub' $P5077 = 'cuid_102_1361734139.417' 
    capture_lex $P5077
    .const 'Sub' $P5078 = 'cuid_103_1361734139.417' 
    capture_lex $P5078
    .const 'Sub' $P5079 = 'cuid_104_1361734139.417' 
    capture_lex $P5079
    .const 'Sub' $P5080 = 'cuid_105_1361734139.417' 
    capture_lex $P5080
    .const 'Sub' $P5081 = 'cuid_106_1361734139.417' 
    capture_lex $P5081
    .const 'Sub' $P5082 = 'cuid_107_1361734139.417' 
    capture_lex $P5082
    .const 'Sub' $P5083 = 'cuid_108_1361734139.417' 
    capture_lex $P5083
    .const 'Sub' $P5084 = 'cuid_109_1361734139.417' 
    capture_lex $P5084
    .const 'Sub' $P5085 = 'cuid_110_1361734139.417' 
    capture_lex $P5085
    .const 'Sub' $P5086 = 'cuid_111_1361734139.417' 
    capture_lex $P5086
    .const 'Sub' $P5087 = 'cuid_112_1361734139.417' 
    capture_lex $P5087
    .const 'Sub' $P5088 = 'cuid_113_1361734139.417' 
    capture_lex $P5088
    .const 'Sub' $P5089 = 'cuid_114_1361734139.417' 
    capture_lex $P5089
    .const 'Sub' $P5090 = 'cuid_115_1361734139.417' 
    capture_lex $P5090
    .const 'Sub' $P5091 = 'cuid_116_1361734139.417' 
    capture_lex $P5091
    .const 'Sub' $P5092 = 'cuid_117_1361734139.417' 
    capture_lex $P5092
    .const 'Sub' $P5093 = 'cuid_118_1361734139.417' 
    capture_lex $P5093
    .const 'Sub' $P5094 = 'cuid_119_1361734139.417' 
    capture_lex $P5094
    .const 'Sub' $P5095 = 'cuid_120_1361734139.417' 
    capture_lex $P5095
    .const 'Sub' $P5096 = 'cuid_121_1361734139.417' 
    capture_lex $P5096
    .const 'Sub' $P5097 = 'cuid_122_1361734139.417' 
    capture_lex $P5097
    .const 'Sub' $P5098 = 'cuid_123_1361734139.417' 
    capture_lex $P5098
    .const 'Sub' $P5099 = 'cuid_124_1361734139.417' 
    capture_lex $P5099
    .const 'Sub' $P5100 = 'cuid_125_1361734139.417' 
    capture_lex $P5100
    .const 'Sub' $P5101 = 'cuid_126_1361734139.417' 
    capture_lex $P5101
    .const 'Sub' $P5102 = 'cuid_127_1361734139.417' 
    capture_lex $P5102
    .const 'Sub' $P5103 = 'cuid_128_1361734139.417' 
    capture_lex $P5103
    .const 'Sub' $P5104 = 'cuid_129_1361734139.417' 
    capture_lex $P5104
    .const 'Sub' $P5105 = 'cuid_131_1361734139.417' 
    capture_lex $P5105
    .const 'Sub' $P5106 = 'cuid_132_1361734139.417' 
    capture_lex $P5106
    .const 'Sub' $P5107 = 'cuid_133_1361734139.417' 
    capture_lex $P5107
    .const 'Sub' $P5108 = 'cuid_134_1361734139.417' 
    capture_lex $P5108
    .const 'Sub' $P5109 = 'cuid_135_1361734139.417' 
    capture_lex $P5109
    .const 'Sub' $P5110 = 'cuid_136_1361734139.417' 
    capture_lex $P5110
    .const 'Sub' $P5111 = 'cuid_137_1361734139.417' 
    capture_lex $P5111
    .const 'Sub' $P5112 = 'cuid_138_1361734139.417' 
    capture_lex $P5112
    .const 'Sub' $P5113 = 'cuid_139_1361734139.417' 
    capture_lex $P5113
    .const 'Sub' $P5114 = 'cuid_140_1361734139.417' 
    capture_lex $P5114
    .const 'Sub' $P5115 = 'cuid_141_1361734139.417' 
    capture_lex $P5115
    .const 'Sub' $P5116 = 'cuid_142_1361734139.417' 
    capture_lex $P5116
    .const 'Sub' $P5117 = 'cuid_143_1361734139.417' 
    capture_lex $P5117
    .const 'Sub' $P5118 = 'cuid_144_1361734139.417' 
    capture_lex $P5118
    .const 'Sub' $P5119 = 'cuid_145_1361734139.417' 
    capture_lex $P5119
    .const 'Sub' $P5120 = 'cuid_146_1361734139.417' 
    capture_lex $P5120
    .const 'Sub' $P5121 = 'cuid_147_1361734139.417' 
    capture_lex $P5121
    .const 'Sub' $P5122 = 'cuid_148_1361734139.417' 
    capture_lex $P5122
    .const 'Sub' $P5123 = 'cuid_149_1361734139.417' 
    capture_lex $P5123
    .const 'Sub' $P5124 = 'cuid_150_1361734139.417' 
    capture_lex $P5124
    .const 'Sub' $P5125 = 'cuid_151_1361734139.417' 
    capture_lex $P5125
    .const 'Sub' $P5126 = 'cuid_152_1361734139.417' 
    capture_lex $P5126
    .const 'Sub' $P5127 = 'cuid_153_1361734139.417' 
    capture_lex $P5127
    .const 'Sub' $P5128 = 'cuid_154_1361734139.417' 
    capture_lex $P5128
    .const 'Sub' $P5129 = 'cuid_155_1361734139.417' 
    capture_lex $P5129
    .const 'Sub' $P5130 = 'cuid_156_1361734139.417' 
    capture_lex $P5130
    .const 'Sub' $P5131 = 'cuid_157_1361734139.417' 
    capture_lex $P5131
    .const 'Sub' $P5132 = 'cuid_158_1361734139.417' 
    capture_lex $P5132
    .const 'Sub' $P5133 = 'cuid_159_1361734139.417' 
    capture_lex $P5133
    .const 'Sub' $P5134 = 'cuid_160_1361734139.417' 
    capture_lex $P5134
    .const 'Sub' $P5135 = 'cuid_161_1361734139.417' 
    capture_lex $P5135
    .const 'Sub' $P5136 = 'cuid_162_1361734139.417' 
    capture_lex $P5136
    .const 'Sub' $P5137 = 'cuid_163_1361734139.417' 
    capture_lex $P5137
    .const 'Sub' $P5138 = 'cuid_164_1361734139.417' 
    capture_lex $P5138
    .const 'Sub' $P5139 = 'cuid_165_1361734139.417' 
    capture_lex $P5139
    .const 'Sub' $P5140 = 'cuid_166_1361734139.417' 
    capture_lex $P5140
    .const 'Sub' $P5141 = 'cuid_167_1361734139.417' 
    capture_lex $P5141
    .const 'Sub' $P5142 = 'cuid_168_1361734139.417' 
    capture_lex $P5142
    .const 'Sub' $P5143 = 'cuid_169_1361734139.417' 
    capture_lex $P5143
    .const 'Sub' $P5144 = 'cuid_170_1361734139.417' 
    capture_lex $P5144
    .const 'Sub' $P5145 = 'cuid_171_1361734139.417' 
    capture_lex $P5145
    .const 'Sub' $P5146 = 'cuid_172_1361734139.417' 
    capture_lex $P5146
    .const 'Sub' $P5147 = 'cuid_173_1361734139.417' 
    capture_lex $P5147
    .const 'Sub' $P5148 = 'cuid_174_1361734139.417' 
    capture_lex $P5148
    .const 'Sub' $P5149 = 'cuid_175_1361734139.417' 
    capture_lex $P5149
    .const 'Sub' $P5150 = 'cuid_176_1361734139.417' 
    capture_lex $P5150
    .const 'Sub' $P5151 = 'cuid_177_1361734139.417' 
    capture_lex $P5151
    .const 'Sub' $P5152 = 'cuid_178_1361734139.417' 
    capture_lex $P5152
    .const 'Sub' $P5153 = 'cuid_179_1361734139.417' 
    capture_lex $P5153
    .const 'Sub' $P5154 = 'cuid_180_1361734139.417' 
    capture_lex $P5154
    .const 'Sub' $P5155 = 'cuid_181_1361734139.417' 
    capture_lex $P5155
    .const 'Sub' $P5156 = 'cuid_182_1361734139.417' 
    capture_lex $P5156
    .const 'Sub' $P5157 = 'cuid_183_1361734139.417' 
    capture_lex $P5157
    .const 'Sub' $P5158 = 'cuid_184_1361734139.417' 
    capture_lex $P5158
    .const 'Sub' $P5159 = 'cuid_185_1361734139.417' 
    capture_lex $P5159
    .const 'Sub' $P5160 = 'cuid_186_1361734139.417' 
    capture_lex $P5160
    .const 'Sub' $P5161 = 'cuid_187_1361734139.417' 
    capture_lex $P5161
    .const 'Sub' $P5162 = 'cuid_188_1361734139.417' 
    capture_lex $P5162
    .const 'Sub' $P5163 = 'cuid_189_1361734139.417' 
    capture_lex $P5163
    .const 'Sub' $P5164 = 'cuid_190_1361734139.417' 
    capture_lex $P5164
    .const 'Sub' $P5165 = 'cuid_191_1361734139.417' 
    capture_lex $P5165
    .const 'Sub' $P5166 = 'cuid_192_1361734139.417' 
    capture_lex $P5166
    .const 'Sub' $P5167 = 'cuid_193_1361734139.417' 
    capture_lex $P5167
    .const 'Sub' $P5168 = 'cuid_194_1361734139.417' 
    capture_lex $P5168
    .const 'Sub' $P5169 = 'cuid_195_1361734139.417' 
    capture_lex $P5169
    .const 'Sub' $P5170 = 'cuid_196_1361734139.417' 
    capture_lex $P5170
    .const 'Sub' $P5171 = 'cuid_197_1361734139.417' 
    capture_lex $P5171
    .const 'Sub' $P5172 = 'cuid_198_1361734139.417' 
    capture_lex $P5172
    .const 'Sub' $P5173 = 'cuid_199_1361734139.417' 
    capture_lex $P5173
    .const 'Sub' $P5174 = 'cuid_200_1361734139.417' 
    capture_lex $P5174
    .const 'Sub' $P5175 = 'cuid_201_1361734139.417' 
    capture_lex $P5175
    .const 'Sub' $P5176 = 'cuid_202_1361734139.417' 
    capture_lex $P5176
    .const 'Sub' $P5177 = 'cuid_203_1361734139.417' 
    capture_lex $P5177
    .const 'Sub' $P5178 = 'cuid_204_1361734139.417' 
    capture_lex $P5178
    .const 'Sub' $P5179 = 'cuid_205_1361734139.417' 
    capture_lex $P5179
    .const 'Sub' $P5180 = 'cuid_206_1361734139.417' 
    capture_lex $P5180
    .const 'Sub' $P5181 = 'cuid_207_1361734139.417' 
    capture_lex $P5181
    .const 'Sub' $P5182 = 'cuid_208_1361734139.417' 
    capture_lex $P5182
    .const 'Sub' $P5183 = 'cuid_209_1361734139.417' 
    capture_lex $P5183
    .const 'Sub' $P5184 = 'cuid_210_1361734139.417' 
    capture_lex $P5184
    .const 'Sub' $P5185 = 'cuid_211_1361734139.417' 
    capture_lex $P5185
    .const 'Sub' $P5186 = 'cuid_212_1361734139.417' 
    capture_lex $P5186
    .const 'Sub' $P5187 = 'cuid_213_1361734139.417' 
    capture_lex $P5187
    .const 'Sub' $P5188 = 'cuid_214_1361734139.417' 
    capture_lex $P5188
    .const 'Sub' $P5189 = 'cuid_215_1361734139.417' 
    capture_lex $P5189
    .const 'Sub' $P5190 = 'cuid_216_1361734139.417' 
    capture_lex $P5190
    .const 'Sub' $P5191 = 'cuid_217_1361734139.417' 
    capture_lex $P5191
    .const 'Sub' $P5192 = 'cuid_218_1361734139.417' 
    capture_lex $P5192
    .const 'Sub' $P5193 = 'cuid_219_1361734139.417' 
    capture_lex $P5193
    .const 'Sub' $P5194 = 'cuid_220_1361734139.417' 
    capture_lex $P5194
    .const 'Sub' $P5195 = 'cuid_221_1361734139.417' 
    capture_lex $P5195
    .const 'Sub' $P5196 = 'cuid_223_1361734139.417' 
    capture_lex $P5196
    .const 'Sub' $P5197 = 'cuid_225_1361734139.417' 
    capture_lex $P5197
    .const 'Sub' $P5198 = 'cuid_227_1361734139.417' 
    capture_lex $P5198
    .return ($P5198) 
.end
.HLL "nqp"
.namespace []
.sub "TOP" :subid("cuid_35_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 635
    .param pmc _lex_param_0 
    .lex "%*LANG", $P101 
    .lex "%*HOW", $P102 
    .lex "$file", $P103 
    .lex "$source_id", $P104 
    .lex "$*W", $P105 
    .lex "$*SCOPE", $P106 
    .lex "$*MULTINESS", $P107 
    .lex "$*PKGDECL", $P108 
    .lex "$*INVOCANT_OK", $P109 
    .lex "$*RETURN_USED", $P110 
    .lex "$*CONTROL_USED", $P111 
    .lex "%*HANDLERS", $P112 
    .lex "self", _lex_param_0 
    .local pmc fb_tmp_52 
    .local pmc pkg_viv_tmp_7 
    .local pmc fb_tmp_53 
    .local pmc pkg_viv_tmp_8 
    .local pmc fb_tmp_54 
    .local pmc pkg_lookup_tmp_1 
    .local pmc fb_tmp_55 
    .local pmc pkg_viv_tmp_9 
    .local pmc fb_tmp_56 
    .local pmc pkg_lookup_tmp_2 
    .local pmc fb_tmp_57 
    .local pmc pkg_viv_tmp_10 
    .local pmc fb_tmp_58 
    .local pmc pkg_viv_tmp_11 
    .local pmc fb_tmp_59 
    .local pmc pkg_lookup_tmp_3 
    .local pmc fb_tmp_60 
    .local pmc pkg_viv_tmp_12 
    .local pmc fb_tmp_61 
    .local pmc pkg_viv_tmp_13 
    .local pmc fb_tmp_62 
    .local pmc pkg_viv_tmp_14 
    .local pmc fb_tmp_63 
    .local pmc fb_tmp_64 
    .local pmc fb_tmp_65 
    .local pmc pkg_viv_tmp_15 
    .local pmc fb_tmp_66 
    .local pmc pkg_viv_tmp_16 
    new $P5001, 'Hash'
    set $P101, $P5001
    new $P5002, 'Hash'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P105, $P5005
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P106, $P5006
    nqp_get_sc_object $P5007, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P107, $P5007
    nqp_get_sc_object $P5008, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P108, $P5008
    nqp_get_sc_object $P5009, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P109, $P5009
    nqp_get_sc_object $P5010, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P110, $P5010
    nqp_get_sc_object $P5011, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P111, $P5011
    new $P5012, 'Hash'
    set $P112, $P5012
    unless_null $P101, fallback324
    nqp_get_sc_object $P5021, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5020, $P5021
    set pkg_viv_tmp_8, $P5020
    set fb_tmp_53, pkg_viv_tmp_8
    repr_defined $I5002, fb_tmp_53
    unless $I5002 goto if168_else325 
    set $P5022, fb_tmp_53["%LANG"]
    set $P5024, $P5022
    goto if168_end326
  if168_else325:
    null $P5023
    set $P5024, $P5023
  if168_end326:
    unless_null $P5024, vivi_169327
    new $P5025, 'Hash'
    set pkg_viv_tmp_8["%LANG"], $P5025
    set $P5024, $P5025
  vivi_169327:
    unless_null $P5024, vivi_170328
    die "Contextual %*LANG not found"
    box $P5026, "Contextual %*LANG not found"
    set $P5024, $P5026
  vivi_170328:
    set $P101, $P5024
  fallback324:
    nqp_get_sc_object $P5028, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    set pkg_lookup_tmp_1, $P5028
    get_who $P5029, pkg_lookup_tmp_1
    exists $I5004, $P5029["NQP"]
    unless $I5004 goto if172_else331 
    get_who $P5031, pkg_lookup_tmp_1
    set $P5030, $P5031["NQP"]
    set $P5033, $P5030
    goto if172_end332
  if172_else331:
    nqp_get_sc_object $P5032, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5033, $P5032
  if172_end332:
    get_who $P5027, $P5033
    set fb_tmp_54, $P5027
    repr_defined $I5003, fb_tmp_54
    unless $I5003 goto if171_else329 
    set $P5034, fb_tmp_54["Regex"]
    set $P5036, $P5034
    goto if171_end330
  if171_else329:
    null $P5035
    set $P5036, $P5035
  if171_end330:
    unless_null $P5036, vivi_173333
    nqp_get_sc_object $P5037, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5036, $P5037
  vivi_173333:
    set $P101["Regex"], $P5036
    unless_null $P101, fallback334
    nqp_get_sc_object $P5039, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5038, $P5039
    set pkg_viv_tmp_9, $P5038
    set fb_tmp_55, pkg_viv_tmp_9
    repr_defined $I5005, fb_tmp_55
    unless $I5005 goto if174_else335 
    set $P5040, fb_tmp_55["%LANG"]
    set $P5042, $P5040
    goto if174_end336
  if174_else335:
    null $P5041
    set $P5042, $P5041
  if174_end336:
    unless_null $P5042, vivi_175337
    new $P5043, 'Hash'
    set pkg_viv_tmp_9["%LANG"], $P5043
    set $P5042, $P5043
  vivi_175337:
    unless_null $P5042, vivi_176338
    die "Contextual %*LANG not found"
    box $P5044, "Contextual %*LANG not found"
    set $P5042, $P5044
  vivi_176338:
    set $P101, $P5042
  fallback334:
    nqp_get_sc_object $P5046, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    set pkg_lookup_tmp_2, $P5046
    get_who $P5047, pkg_lookup_tmp_2
    exists $I5007, $P5047["NQP"]
    unless $I5007 goto if178_else341 
    get_who $P5049, pkg_lookup_tmp_2
    set $P5048, $P5049["NQP"]
    set $P5051, $P5048
    goto if178_end342
  if178_else341:
    nqp_get_sc_object $P5050, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5051, $P5050
  if178_end342:
    get_who $P5045, $P5051
    set fb_tmp_56, $P5045
    repr_defined $I5006, fb_tmp_56
    unless $I5006 goto if177_else339 
    set $P5052, fb_tmp_56["RegexActions"]
    set $P5054, $P5052
    goto if177_end340
  if177_else339:
    null $P5053
    set $P5054, $P5053
  if177_end340:
    unless_null $P5054, vivi_179343
    nqp_get_sc_object $P5055, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5054, $P5055
  vivi_179343:
    set $P101["Regex-actions"], $P5054
    unless_null $P101, fallback344
    nqp_get_sc_object $P5057, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5056, $P5057
    set pkg_viv_tmp_10, $P5056
    set fb_tmp_57, pkg_viv_tmp_10
    repr_defined $I5008, fb_tmp_57
    unless $I5008 goto if180_else345 
    set $P5058, fb_tmp_57["%LANG"]
    set $P5060, $P5058
    goto if180_end346
  if180_else345:
    null $P5059
    set $P5060, $P5059
  if180_end346:
    unless_null $P5060, vivi_181347
    new $P5061, 'Hash'
    set pkg_viv_tmp_10["%LANG"], $P5061
    set $P5060, $P5061
  vivi_181347:
    unless_null $P5060, vivi_182348
    die "Contextual %*LANG not found"
    box $P5062, "Contextual %*LANG not found"
    set $P5060, $P5062
  vivi_182348:
    set $P101, $P5060
  fallback344:
    nqp_get_sc_object $P5063, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 38
    set $P101["MAIN"], $P5063
    unless_null $P101, fallback349
    nqp_get_sc_object $P5065, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5064, $P5065
    set pkg_viv_tmp_11, $P5064
    set fb_tmp_58, pkg_viv_tmp_11
    repr_defined $I5009, fb_tmp_58
    unless $I5009 goto if183_else350 
    set $P5066, fb_tmp_58["%LANG"]
    set $P5068, $P5066
    goto if183_end351
  if183_else350:
    null $P5067
    set $P5068, $P5067
  if183_end351:
    unless_null $P5068, vivi_184352
    new $P5069, 'Hash'
    set pkg_viv_tmp_11["%LANG"], $P5069
    set $P5068, $P5069
  vivi_184352:
    unless_null $P5068, vivi_185353
    die "Contextual %*LANG not found"
    box $P5070, "Contextual %*LANG not found"
    set $P5068, $P5070
  vivi_185353:
    set $P101, $P5068
  fallback349:
    nqp_get_sc_object $P5072, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    set pkg_lookup_tmp_3, $P5072
    get_who $P5073, pkg_lookup_tmp_3
    exists $I5011, $P5073["NQP"]
    unless $I5011 goto if187_else356 
    get_who $P5075, pkg_lookup_tmp_3
    set $P5074, $P5075["NQP"]
    set $P5077, $P5074
    goto if187_end357
  if187_else356:
    nqp_get_sc_object $P5076, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5077, $P5076
  if187_end357:
    get_who $P5071, $P5077
    set fb_tmp_59, $P5071
    repr_defined $I5010, fb_tmp_59
    unless $I5010 goto if186_else354 
    set $P5078, fb_tmp_59["Actions"]
    set $P5080, $P5078
    goto if186_end355
  if186_else354:
    null $P5079
    set $P5080, $P5079
  if186_end355:
    unless_null $P5080, vivi_188358
    nqp_get_sc_object $P5081, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5080, $P5081
  vivi_188358:
    set $P101["MAIN-actions"], $P5080
    unless_null $P102, fallback364
    nqp_get_sc_object $P5090, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5089, $P5090
    set pkg_viv_tmp_13, $P5089
    set fb_tmp_61, pkg_viv_tmp_13
    repr_defined $I5013, fb_tmp_61
    unless $I5013 goto if192_else365 
    set $P5091, fb_tmp_61["%HOW"]
    set $P5093, $P5091
    goto if192_end366
  if192_else365:
    null $P5092
    set $P5093, $P5092
  if192_end366:
    unless_null $P5093, vivi_193367
    new $P5094, 'Hash'
    set pkg_viv_tmp_13["%HOW"], $P5094
    set $P5093, $P5094
  vivi_193367:
    unless_null $P5093, vivi_194368
    die "Contextual %*HOW not found"
    box $P5095, "Contextual %*HOW not found"
    set $P5093, $P5095
  vivi_194368:
    set $P102, $P5093
  fallback364:
    get_knowhow $P5096
    set $P102["knowhow"], $P5096
    unless_null $P102, fallback369
    nqp_get_sc_object $P5098, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5097, $P5098
    set pkg_viv_tmp_14, $P5097
    set fb_tmp_62, pkg_viv_tmp_14
    repr_defined $I5014, fb_tmp_62
    unless $I5014 goto if195_else370 
    set $P5099, fb_tmp_62["%HOW"]
    set $P5101, $P5099
    goto if195_end371
  if195_else370:
    null $P5100
    set $P5101, $P5100
  if195_end371:
    unless_null $P5101, vivi_196372
    new $P5102, 'Hash'
    set pkg_viv_tmp_14["%HOW"], $P5102
    set $P5101, $P5102
  vivi_196372:
    unless_null $P5101, vivi_197373
    die "Contextual %*HOW not found"
    box $P5103, "Contextual %*HOW not found"
    set $P5101, $P5103
  vivi_197373:
    set $P102, $P5101
  fallback369:
    get_knowhow_attribute $P5104
    set $P102["knowhow-attr"], $P5104
    find_dynamic_lex $P5105, "$?FILES"
    set $P103, $P5105
.annotate 'line', 654
    nqp_decontainerize $P5106, _lex_param_0
    $P5107 = $P5106."target"()
    set $S5003, $P5107
    nqp_sha1 $S5002, $S5003
    find_dynamic_lex $P5108, "%*COMPILING"
    unless_null $P5108, fallback380
    nqp_get_sc_object $P5110, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5109, $P5110
    set pkg_viv_tmp_15, $P5109
    set fb_tmp_65, pkg_viv_tmp_15
    repr_defined $I5017, fb_tmp_65
    unless $I5017 goto if201_else381 
    set $P5111, fb_tmp_65["%COMPILING"]
    set $P5113, $P5111
    goto if201_end382
  if201_else381:
    null $P5112
    set $P5113, $P5112
  if201_end382:
    unless_null $P5113, vivi_202383
    new $P5114, 'Hash'
    set pkg_viv_tmp_15["%COMPILING"], $P5114
    set $P5113, $P5114
  vivi_202383:
    unless_null $P5113, vivi_203384
    die "Contextual %*COMPILING not found"
    box $P5115, "Contextual %*COMPILING not found"
    set $P5113, $P5115
  vivi_203384:
    set $P5108, $P5113
  fallback380:
    set fb_tmp_64, $P5108
    repr_defined $I5016, fb_tmp_64
    unless $I5016 goto if200_else378 
    set $P5116, fb_tmp_64["%?OPTIONS"]
    set $P5118, $P5116
    goto if200_end379
  if200_else378:
    null $P5117
    set $P5118, $P5117
  if200_end379:
    unless_null $P5118, vivi_204385
    nqp_get_sc_object $P5119, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5118, $P5119
  vivi_204385:
    set fb_tmp_63, $P5118
    repr_defined $I5015, fb_tmp_63
    unless $I5015 goto if199_else376 
    set $P5120, fb_tmp_63["stable-sc"]
    set $P5122, $P5120
    goto if199_end377
  if199_else376:
    null $P5121
    set $P5122, $P5121
  if199_end377:
    unless_null $P5122, vivi_205386
    nqp_get_sc_object $P5123, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5122, $P5123
  vivi_205386:
    unless $P5122 goto if198_else374 
    set $S5006, ""
    goto if198_end375
  if198_else374:
    time $N5001
    set $S5005, $N5001
    concat $S5004, "-", $S5005
    set $S5006, $S5004
  if198_end375:
    concat $S5001, $S5002, $S5006
    box $P5124, $S5001
    set $P104, $P5124
    isnull $I5018, $P103
    unless $I5018 goto if206_else387 
.annotate 'line', 657
    nqp_get_sc_object $P5125, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 3
    $P5126 = $P5125."new"($P104 :named("handle"))
    set $P5129, $P5126
    goto if206_end388
  if206_else387:
.annotate 'line', 658
    nqp_get_sc_object $P5127, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 3
    $P5128 = $P5127."new"($P104 :named("handle"), $P103 :named("description"))
    set $P5129, $P5128
  if206_end388:
    set $P105, $P5129
    box $P5130, ""
    set $P106, $P5130
    box $P5131, ""
    set $P107, $P5131
    box $P5132, ""
    set $P108, $P5132
    box $P5133, 0
    set $P109, $P5133
    box $P5134, 0
    set $P110, $P5134
    box $P5135, 0
    set $P111, $P5135
.annotate 'line', 667
    nqp_decontainerize $P5143, _lex_param_0
    $P5144 = $P5143."comp_unit"()
    .return ($P5144) 
.end
.HLL "nqp"
.namespace []
.sub "identifier" :subid("cuid_36_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 672
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx210_start
    .local string rx210_tgt
    .local int rx210_pos
    .local int rx210_off
    .local int rx210_eos
    .local int rx210_rep
    .local pmc rx210_cur
    .local pmc rx210_curclass
    .local pmc rx210_bstack
    .local pmc rx210_cstack
    rx210_start = self."!cursor_start_all"()
    set rx210_cur, rx210_start[0]
    set rx210_tgt, rx210_start[1]
    set rx210_pos, rx210_start[2]
    set rx210_curclass, rx210_start[3]
    set rx210_bstack, rx210_start[4]
    set $I19, rx210_start[5]
    store_lex unicode:"$\x{a2}", rx210_cur
    length rx210_eos, rx210_tgt
    eq $I19, 1, rx210_restart396
    gt rx210_pos, rx210_eos, rx210_fail397
    repr_get_attr_int $I11, self, rx210_curclass, "$!from"
    ne $I11, -1, rxscan211_done403
    goto rxscan211_scan402
  rxscan211_loop401:
    inc rx210_pos
    gt rx210_pos, rx210_eos, rx210_fail397
    repr_bind_attr_int rx210_cur, rx210_curclass, "$!from", rx210_pos
  rxscan211_scan402:
    nqp_rxmark rx210_bstack, rxscan211_loop401, rx210_pos, 0
  rxscan211_done403:
    repr_bind_attr_int rx210_cur, rx210_curclass, "$!pos", rx210_pos
    $P11 = rx210_cur."ident"()
    repr_get_attr_int $I11, $P11, rx210_curclass, "$!pos"
    lt $I11, 0, rx210_fail397
    repr_get_attr_int rx210_pos, $P11, rx210_curclass, "$!pos"
    nqp_rxmark rx210_bstack, rxquantr213_done406, rx210_pos, 0
  rxquantr213_loop405:
  alt214_0408:
    nqp_rxmark rx210_bstack, alt214_1409, rx210_pos, 0
    add $I11, rx210_pos, 1
    gt $I11, rx210_eos, rx210_fail397
    substr $S10, rx210_tgt, rx210_pos, 1
    ne $S10, ucs4:"-", rx210_fail397
    add rx210_pos, 1
    goto alt214_end407
  alt214_1409:
    ge rx210_pos, rx210_eos, rx210_fail397
    substr $S11, rx210_tgt, rx210_pos, 1
    index $I11, ucs4:"'", $S11
    lt $I11, 0, rx210_fail397
    inc rx210_pos
  alt214_end407:
    repr_bind_attr_int rx210_cur, rx210_curclass, "$!pos", rx210_pos
    $P11 = rx210_cur."ident"()
    repr_get_attr_int $I11, $P11, rx210_curclass, "$!pos"
    lt $I11, 0, rx210_fail397
    repr_get_attr_int rx210_pos, $P11, rx210_curclass, "$!pos"
    nqp_rxpeek $I19, rx210_bstack, rxquantr213_done406
    inc $I19
    inc $I19
    set rx210_rep, rx210_bstack[$I19]
    nqp_rxcommit rx210_bstack, rxquantr213_done406
    inc rx210_rep
    nqp_rxmark rx210_bstack, rxquantr213_done406, rx210_pos, rx210_rep
    goto rxquantr213_loop405
  rxquantr213_done406:
    rx210_cur."!cursor_pass"(rx210_pos, "identifier", 'backtrack'=>1)
    .return (rx210_cur)
  rx210_restart396:
    repr_get_attr_obj rx210_cstack, rx210_cur, rx210_curclass, "$!cstack"
  rx210_fail397:
    unless rx210_bstack, rx210_done395
    pop $I19, rx210_bstack
    if_null rx210_cstack, rx210_cstack_done400
    unless rx210_cstack, rx210_cstack_done400
    dec $I19
    set $P11, rx210_cstack[$I19]
  rx210_cstack_done400:
    pop rx210_rep, rx210_bstack
    pop rx210_pos, rx210_bstack
    pop $I19, rx210_bstack
    lt rx210_pos, -1, rx210_done395
    lt rx210_pos, 0, rx210_fail397
    eq $I19, 0, rx210_fail397
    nqp_islist $I20, rx210_cstack
    unless $I20, rx210_jump398
    elements $I18, rx210_bstack
    le $I18, 0, rx210_cut399
    dec $I18
    set $I18, rx210_bstack[$I18]
  rx210_cut399:
    assign rx210_cstack, $I18
  rx210_jump398:
    jump $I19
  rx210_done395:
    rx210_cur."!cursor_fail"()
    .return (rx210_cur) 
.end
.HLL "nqp"
.namespace []
.sub "name" :subid("cuid_37_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 674
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx216_start
    .local string rx216_tgt
    .local int rx216_pos
    .local int rx216_off
    .local int rx216_eos
    .local int rx216_rep
    .local pmc rx216_cur
    .local pmc rx216_curclass
    .local pmc rx216_bstack
    .local pmc rx216_cstack
    rx216_start = self."!cursor_start_all"()
    set rx216_cur, rx216_start[0]
    set rx216_tgt, rx216_start[1]
    set rx216_pos, rx216_start[2]
    set rx216_curclass, rx216_start[3]
    set rx216_bstack, rx216_start[4]
    set $I19, rx216_start[5]
    store_lex unicode:"$\x{a2}", rx216_cur
    length rx216_eos, rx216_tgt
    eq $I19, 1, rx216_restart413
    gt rx216_pos, rx216_eos, rx216_fail414
    repr_get_attr_int $I11, self, rx216_curclass, "$!from"
    ne $I11, -1, rxscan217_done420
    goto rxscan217_scan419
  rxscan217_loop418:
    inc rx216_pos
    gt rx216_pos, rx216_eos, rx216_fail414
    repr_bind_attr_int rx216_cur, rx216_curclass, "$!from", rx216_pos
  rxscan217_scan419:
    nqp_rxmark rx216_bstack, rxscan217_loop418, rx216_pos, 0
  rxscan217_done420:
    repr_bind_attr_int rx216_cur, rx216_curclass, "$!pos", rx216_pos
    $P11 = rx216_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx216_curclass, "$!pos"
    lt $I11, 0, rx216_fail414
    nqp_rxmark rx216_bstack, rxsubrule218_pass421, -1, 0
  rxsubrule218_pass421:
    rx216_cstack = rx216_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx216_pos, $P11, rx216_curclass, "$!pos"
    nqp_rxmark rx216_bstack, rxquantr219_done423, rx216_pos, 0
  rxquantr219_loop422:
    add $I11, rx216_pos, 2
    gt $I11, rx216_eos, rx216_fail414
    substr $S10, rx216_tgt, rx216_pos, 2
    ne $S10, ucs4:"::", rx216_fail414
    add rx216_pos, 2
    repr_bind_attr_int rx216_cur, rx216_curclass, "$!pos", rx216_pos
    $P11 = rx216_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx216_curclass, "$!pos"
    lt $I11, 0, rx216_fail414
    nqp_rxmark rx216_bstack, rxsubrule220_pass424, -1, 0
  rxsubrule220_pass424:
    rx216_cstack = rx216_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx216_pos, $P11, rx216_curclass, "$!pos"
    nqp_rxpeek $I19, rx216_bstack, rxquantr219_done423
    inc $I19
    inc $I19
    set rx216_rep, rx216_bstack[$I19]
    nqp_rxcommit rx216_bstack, rxquantr219_done423
    inc rx216_rep
    nqp_rxmark rx216_bstack, rxquantr219_done423, rx216_pos, rx216_rep
    goto rxquantr219_loop422
  rxquantr219_done423:
    rx216_cur."!cursor_pass"(rx216_pos, "name", 'backtrack'=>1)
    .return (rx216_cur)
  rx216_restart413:
    repr_get_attr_obj rx216_cstack, rx216_cur, rx216_curclass, "$!cstack"
  rx216_fail414:
    unless rx216_bstack, rx216_done412
    pop $I19, rx216_bstack
    if_null rx216_cstack, rx216_cstack_done417
    unless rx216_cstack, rx216_cstack_done417
    dec $I19
    set $P11, rx216_cstack[$I19]
  rx216_cstack_done417:
    pop rx216_rep, rx216_bstack
    pop rx216_pos, rx216_bstack
    pop $I19, rx216_bstack
    lt rx216_pos, -1, rx216_done412
    lt rx216_pos, 0, rx216_fail414
    eq $I19, 0, rx216_fail414
    nqp_islist $I20, rx216_cstack
    unless $I20, rx216_jump415
    elements $I18, rx216_bstack
    le $I18, 0, rx216_cut416
    dec $I18
    set $I18, rx216_bstack[$I18]
  rx216_cut416:
    assign rx216_cstack, $I18
  rx216_jump415:
    jump $I19
  rx216_done412:
    rx216_cur."!cursor_fail"()
    .return (rx216_cur) 
.end
.HLL "nqp"
.namespace []
.sub "deflongname" :subid("cuid_38_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 676
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx221_start
    .local string rx221_tgt
    .local int rx221_pos
    .local int rx221_off
    .local int rx221_eos
    .local int rx221_rep
    .local pmc rx221_cur
    .local pmc rx221_curclass
    .local pmc rx221_bstack
    .local pmc rx221_cstack
    rx221_start = self."!cursor_start_all"()
    set rx221_cur, rx221_start[0]
    set rx221_tgt, rx221_start[1]
    set rx221_pos, rx221_start[2]
    set rx221_curclass, rx221_start[3]
    set rx221_bstack, rx221_start[4]
    set $I19, rx221_start[5]
    store_lex unicode:"$\x{a2}", rx221_cur
    length rx221_eos, rx221_tgt
    eq $I19, 1, rx221_restart427
    gt rx221_pos, rx221_eos, rx221_fail428
    repr_get_attr_int $I11, self, rx221_curclass, "$!from"
    ne $I11, -1, rxscan222_done434
    goto rxscan222_scan433
  rxscan222_loop432:
    inc rx221_pos
    gt rx221_pos, rx221_eos, rx221_fail428
    repr_bind_attr_int rx221_cur, rx221_curclass, "$!from", rx221_pos
  rxscan222_scan433:
    nqp_rxmark rx221_bstack, rxscan222_loop432, rx221_pos, 0
  rxscan222_done434:
    repr_bind_attr_int rx221_cur, rx221_curclass, "$!pos", rx221_pos
    $P11 = rx221_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx221_curclass, "$!pos"
    lt $I11, 0, rx221_fail428
    nqp_rxmark rx221_bstack, rxsubrule223_pass435, -1, 0
  rxsubrule223_pass435:
    rx221_cstack = rx221_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx221_pos, $P11, rx221_curclass, "$!pos"
    nqp_rxmark rx221_bstack, rxquantr224_done437, rx221_pos, 0
  rxquantr224_loop436:
    repr_bind_attr_int rx221_cur, rx221_curclass, "$!pos", rx221_pos
    $P11 = rx221_cur."colonpair"()
    repr_get_attr_int $I11, $P11, rx221_curclass, "$!pos"
    lt $I11, 0, rx221_fail428
    goto rxsubrule225_pass438
  rxsubrule225_back439:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx221_curclass, "$!pos"
    lt $I11, 0, rx221_fail428
  rxsubrule225_pass438:
    rx221_cstack = rx221_cur."!cursor_capture"($P11, "colonpair")
    set_addr $I11, rxsubrule225_back439
    push rx221_bstack, $I11
    push rx221_bstack, 0
    push rx221_bstack, rx221_pos
    elements $I11, rx221_cstack
    push rx221_bstack, $I11
    repr_get_attr_int rx221_pos, $P11, rx221_curclass, "$!pos"
    nqp_rxpeek $I19, rx221_bstack, rxquantr224_done437
    inc $I19
    inc $I19
    set rx221_rep, rx221_bstack[$I19]
    nqp_rxcommit rx221_bstack, rxquantr224_done437
    inc rx221_rep
  rxquantr224_done437:
    rx221_cur."!cursor_pass"(rx221_pos, "deflongname", 'backtrack'=>1)
    .return (rx221_cur)
  rx221_restart427:
    repr_get_attr_obj rx221_cstack, rx221_cur, rx221_curclass, "$!cstack"
  rx221_fail428:
    unless rx221_bstack, rx221_done426
    pop $I19, rx221_bstack
    if_null rx221_cstack, rx221_cstack_done431
    unless rx221_cstack, rx221_cstack_done431
    dec $I19
    set $P11, rx221_cstack[$I19]
  rx221_cstack_done431:
    pop rx221_rep, rx221_bstack
    pop rx221_pos, rx221_bstack
    pop $I19, rx221_bstack
    lt rx221_pos, -1, rx221_done426
    lt rx221_pos, 0, rx221_fail428
    eq $I19, 0, rx221_fail428
    nqp_islist $I20, rx221_cstack
    unless $I20, rx221_jump429
    elements $I18, rx221_bstack
    le $I18, 0, rx221_cut430
    dec $I18
    set $I18, rx221_bstack[$I18]
  rx221_cut430:
    assign rx221_cstack, $I18
  rx221_jump429:
    jump $I19
  rx221_done426:
    rx221_cur."!cursor_fail"()
    .return (rx221_cur) 
.end
.HLL "nqp"
.namespace []
.sub "ENDSTMT" :subid("cuid_39_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 680
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx226_start
    .local string rx226_tgt
    .local int rx226_pos
    .local int rx226_off
    .local int rx226_eos
    .local int rx226_rep
    .local pmc rx226_cur
    .local pmc rx226_curclass
    .local pmc rx226_bstack
    .local pmc rx226_cstack
    rx226_start = self."!cursor_start_all"()
    set rx226_cur, rx226_start[0]
    set rx226_tgt, rx226_start[1]
    set rx226_pos, rx226_start[2]
    set rx226_curclass, rx226_start[3]
    set rx226_bstack, rx226_start[4]
    set $I19, rx226_start[5]
    store_lex unicode:"$\x{a2}", rx226_cur
    length rx226_eos, rx226_tgt
    eq $I19, 1, rx226_restart442
    gt rx226_pos, rx226_eos, rx226_fail443
    repr_get_attr_int $I11, self, rx226_curclass, "$!from"
    ne $I11, -1, rxscan227_done449
    goto rxscan227_scan448
  rxscan227_loop447:
    inc rx226_pos
    gt rx226_pos, rx226_eos, rx226_fail443
    repr_bind_attr_int rx226_cur, rx226_curclass, "$!from", rx226_pos
  rxscan227_scan448:
    nqp_rxmark rx226_bstack, rxscan227_loop447, rx226_pos, 0
  rxscan227_done449:
    nqp_rxmark rx226_bstack, rxquantr228_done451, rx226_pos, 0
  rxquantr228_loop450:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt229_0453
    nqp_push_label $P11, alt229_1458
    nqp_rxmark rx226_bstack, alt229_end452, -1, 0
    rx226_cur."!alt"(rx226_pos, "alt_nfa__1_1361734140.733", $P11)
    goto rx226_fail443
  alt229_0453:
    nqp_rxmark rx226_bstack, rxquantr230_done455, rx226_pos, 0
  rxquantr230_loop454:
    ge rx226_pos, rx226_eos, rx226_fail443
    substr $S11, rx226_tgt, rx226_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx226_fail443
    inc rx226_pos
    nqp_rxpeek $I19, rx226_bstack, rxquantr230_done455
    inc $I19
    inc $I19
    set rx226_rep, rx226_bstack[$I19]
    nqp_rxcommit rx226_bstack, rxquantr230_done455
    inc rx226_rep
    nqp_rxmark rx226_bstack, rxquantr230_done455, rx226_pos, rx226_rep
    goto rxquantr230_loop454
  rxquantr230_done455:
    is_cclass $I11, .CCLASS_NEWLINE, rx226_tgt, rx226_pos
    if $I11, rxanchor231_done456
    ne rx226_pos, rx226_eos, rx226_fail443
    eq rx226_pos, 0, rxanchor231_done456
    sub $I11, rx226_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx226_tgt, $I11
    if $I11, rx226_fail443
  rxanchor231_done456:
    repr_bind_attr_int rx226_cur, rx226_curclass, "$!pos", rx226_pos
    $P11 = rx226_cur."ws"()
    repr_get_attr_int $I11, $P11, rx226_curclass, "$!pos"
    lt $I11, 0, rx226_fail443
    repr_get_attr_int rx226_pos, $P11, rx226_curclass, "$!pos"
    repr_bind_attr_int rx226_cur, rx226_curclass, "$!pos", rx226_pos
    $P11 = rx226_cur."MARKER"("endstmt")
    repr_get_attr_int $I11, $P11, rx226_curclass, "$!pos"
    lt $I11, 0, rx226_fail443
    goto alt229_end452
  alt229_1458:
    nqp_rxmark rx226_bstack, rxquantr233_done460, rx226_pos, 0
  rxquantr233_loop459:
    repr_bind_attr_int rx226_cur, rx226_curclass, "$!pos", rx226_pos
    $P11 = rx226_cur."unv"()
    repr_get_attr_int $I11, $P11, rx226_curclass, "$!pos"
    lt $I11, 0, rx226_fail443
    goto rxsubrule234_pass461
  rxsubrule234_back462:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx226_curclass, "$!pos"
    lt $I11, 0, rx226_fail443
  rxsubrule234_pass461:
    rx226_cstack = rx226_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule234_back462
    push rx226_bstack, $I11
    push rx226_bstack, 0
    push rx226_bstack, rx226_pos
    elements $I11, rx226_cstack
    push rx226_bstack, $I11
    repr_get_attr_int rx226_pos, $P11, rx226_curclass, "$!pos"
    nqp_rxpeek $I19, rx226_bstack, rxquantr233_done460
    inc $I19
    inc $I19
    set rx226_rep, rx226_bstack[$I19]
    nqp_rxcommit rx226_bstack, rxquantr233_done460
    inc rx226_rep
  rxquantr233_done460:
    is_cclass $I11, .CCLASS_NEWLINE, rx226_tgt, rx226_pos
    if $I11, rxanchor235_done463
    ne rx226_pos, rx226_eos, rx226_fail443
    eq rx226_pos, 0, rxanchor235_done463
    sub $I11, rx226_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx226_tgt, $I11
    if $I11, rx226_fail443
  rxanchor235_done463:
    repr_bind_attr_int rx226_cur, rx226_curclass, "$!pos", rx226_pos
    $P11 = rx226_cur."ws"()
    repr_get_attr_int $I11, $P11, rx226_curclass, "$!pos"
    lt $I11, 0, rx226_fail443
    repr_get_attr_int rx226_pos, $P11, rx226_curclass, "$!pos"
    repr_bind_attr_int rx226_cur, rx226_curclass, "$!pos", rx226_pos
    $P11 = rx226_cur."MARKER"("endstmt")
    repr_get_attr_int $I11, $P11, rx226_curclass, "$!pos"
    lt $I11, 0, rx226_fail443
    goto alt229_end452
  alt229_end452:
    nqp_rxpeek $I19, rx226_bstack, rxquantr228_done451
    inc $I19
    inc $I19
    set rx226_rep, rx226_bstack[$I19]
    nqp_rxcommit rx226_bstack, rxquantr228_done451
    inc rx226_rep
  rxquantr228_done451:
    rx226_cur."!cursor_pass"(rx226_pos, "ENDSTMT", 'backtrack'=>1)
    .return (rx226_cur)
  rx226_restart442:
    repr_get_attr_obj rx226_cstack, rx226_cur, rx226_curclass, "$!cstack"
  rx226_fail443:
    unless rx226_bstack, rx226_done441
    pop $I19, rx226_bstack
    if_null rx226_cstack, rx226_cstack_done446
    unless rx226_cstack, rx226_cstack_done446
    dec $I19
    set $P11, rx226_cstack[$I19]
  rx226_cstack_done446:
    pop rx226_rep, rx226_bstack
    pop rx226_pos, rx226_bstack
    pop $I19, rx226_bstack
    lt rx226_pos, -1, rx226_done441
    lt rx226_pos, 0, rx226_fail443
    eq $I19, 0, rx226_fail443
    nqp_islist $I20, rx226_cstack
    unless $I20, rx226_jump444
    elements $I18, rx226_bstack
    le $I18, 0, rx226_cut445
    dec $I18
    set $I18, rx226_bstack[$I18]
  rx226_cut445:
    assign rx226_cstack, $I18
  rx226_jump444:
    jump $I19
  rx226_done441:
    rx226_cur."!cursor_fail"()
    .return (rx226_cur) 
.end
.HLL "nqp"
.namespace []
.sub "ws" :subid("cuid_40_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 687
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx237_start
    .local string rx237_tgt
    .local int rx237_pos
    .local int rx237_off
    .local int rx237_eos
    .local int rx237_rep
    .local pmc rx237_cur
    .local pmc rx237_curclass
    .local pmc rx237_bstack
    .local pmc rx237_cstack
    rx237_start = self."!cursor_start_all"()
    set rx237_cur, rx237_start[0]
    set rx237_tgt, rx237_start[1]
    set rx237_pos, rx237_start[2]
    set rx237_curclass, rx237_start[3]
    set rx237_bstack, rx237_start[4]
    set $I19, rx237_start[5]
    store_lex unicode:"$\x{a2}", rx237_cur
    length rx237_eos, rx237_tgt
    eq $I19, 1, rx237_restart467
    gt rx237_pos, rx237_eos, rx237_fail468
    repr_get_attr_int $I11, self, rx237_curclass, "$!from"
    ne $I11, -1, rxscan238_done474
    goto rxscan238_scan473
  rxscan238_loop472:
    inc rx237_pos
    gt rx237_pos, rx237_eos, rx237_fail468
    repr_bind_attr_int rx237_cur, rx237_curclass, "$!from", rx237_pos
  rxscan238_scan473:
    nqp_rxmark rx237_bstack, rxscan238_loop472, rx237_pos, 0
  rxscan238_done474:
  alt239_0476:
    nqp_rxmark rx237_bstack, alt239_1477, rx237_pos, 0
    repr_bind_attr_int rx237_cur, rx237_curclass, "$!pos", rx237_pos
    $P11 = rx237_cur."MARKED"("ws")
    repr_get_attr_int $I11, $P11, rx237_curclass, "$!pos"
    lt $I11, 0, rx237_fail468
    goto alt239_end475
  alt239_1477:
    repr_bind_attr_int rx237_cur, rx237_curclass, "$!pos", rx237_pos
    $P11 = rx237_cur."ww"()
    repr_get_attr_int $I11, $P11, rx237_curclass, "$!pos"
    ge $I11, 0, rx237_fail468
    nqp_rxmark rx237_bstack, rxquantr240_done479, rx237_pos, 0
  rxquantr240_loop478:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt241_0481
    nqp_push_label $P11, alt241_1484
    nqp_push_label $P11, alt241_2487
    nqp_push_label $P11, alt241_3490
    nqp_rxmark rx237_bstack, alt241_end480, -1, 0
    rx237_cur."!alt"(rx237_pos, "alt_nfa__2_1361734140.75", $P11)
    goto rx237_fail468
  alt241_0481:
    nqp_rxmark rx237_bstack, rxquantr242_done483, -1, 0
  rxquantr242_loop482:
    ge rx237_pos, rx237_eos, rx237_fail468
    substr $S11, rx237_tgt, rx237_pos, 1
    index $I11, ucs4:"\n\x{b}\f\r\x{85}\u2028\u2029", $S11
    lt $I11, 0, rx237_fail468
    inc rx237_pos
    nqp_rxpeek $I19, rx237_bstack, rxquantr242_done483
    inc $I19
    inc $I19
    set rx237_rep, rx237_bstack[$I19]
    nqp_rxcommit rx237_bstack, rxquantr242_done483
    inc rx237_rep
    nqp_rxmark rx237_bstack, rxquantr242_done483, rx237_pos, rx237_rep
    goto rxquantr242_loop482
  rxquantr242_done483:
    goto alt241_end480
  alt241_1484:
    add $I11, rx237_pos, 1
    gt $I11, rx237_eos, rx237_fail468
    substr $S10, rx237_tgt, rx237_pos, 1
    ne $S10, ucs4:"#", rx237_fail468
    add rx237_pos, 1
    nqp_rxmark rx237_bstack, rxquantr243_done486, rx237_pos, 0
  rxquantr243_loop485:
    ge rx237_pos, rx237_eos, rx237_fail468
    is_cclass $I11, .CCLASS_NEWLINE, rx237_tgt, rx237_pos
    if $I11, rx237_fail468
    add rx237_pos, 1
    nqp_rxpeek $I19, rx237_bstack, rxquantr243_done486
    inc $I19
    inc $I19
    set rx237_rep, rx237_bstack[$I19]
    nqp_rxcommit rx237_bstack, rxquantr243_done486
    inc rx237_rep
    nqp_rxmark rx237_bstack, rxquantr243_done486, rx237_pos, rx237_rep
    goto rxquantr243_loop485
  rxquantr243_done486:
    goto alt241_end480
  alt241_2487:
    eq rx237_pos, 0, rxanchor244_done488
    ge rx237_pos, rx237_eos, rx237_fail468
    sub $I11, rx237_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx237_tgt, $I11
    unless $I11, rx237_fail468
  rxanchor244_done488:
    repr_bind_attr_int rx237_cur, rx237_curclass, "$!pos", rx237_pos
    $P11 = rx237_cur."pod_comment"()
    repr_get_attr_int $I11, $P11, rx237_curclass, "$!pos"
    lt $I11, 0, rx237_fail468
    repr_get_attr_int rx237_pos, $P11, rx237_curclass, "$!pos"
    goto alt241_end480
  alt241_3490:
    nqp_rxmark rx237_bstack, rxquantr246_done492, -1, 0
  rxquantr246_loop491:
    ge rx237_pos, rx237_eos, rx237_fail468
    substr $S11, rx237_tgt, rx237_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx237_fail468
    inc rx237_pos
    nqp_rxpeek $I19, rx237_bstack, rxquantr246_done492
    inc $I19
    inc $I19
    set rx237_rep, rx237_bstack[$I19]
    nqp_rxcommit rx237_bstack, rxquantr246_done492
    inc rx237_rep
    nqp_rxmark rx237_bstack, rxquantr246_done492, rx237_pos, rx237_rep
    goto rxquantr246_loop491
  rxquantr246_done492:
    goto alt241_end480
  alt241_end480:
    nqp_rxpeek $I19, rx237_bstack, rxquantr240_done479
    inc $I19
    inc $I19
    set rx237_rep, rx237_bstack[$I19]
    nqp_rxcommit rx237_bstack, rxquantr240_done479
    inc rx237_rep
    nqp_rxmark rx237_bstack, rxquantr240_done479, rx237_pos, rx237_rep
    goto rxquantr240_loop478
  rxquantr240_done479:
    repr_bind_attr_int rx237_cur, rx237_curclass, "$!pos", rx237_pos
    $P11 = rx237_cur."MARKER"("ws")
    repr_get_attr_int $I11, $P11, rx237_curclass, "$!pos"
    lt $I11, 0, rx237_fail468
  alt239_end475:
    rx237_cur."!cursor_pass"(rx237_pos, "ws", 'backtrack'=>1)
    .return (rx237_cur)
  rx237_restart467:
    repr_get_attr_obj rx237_cstack, rx237_cur, rx237_curclass, "$!cstack"
  rx237_fail468:
    unless rx237_bstack, rx237_done466
    pop $I19, rx237_bstack
    if_null rx237_cstack, rx237_cstack_done471
    unless rx237_cstack, rx237_cstack_done471
    dec $I19
    set $P11, rx237_cstack[$I19]
  rx237_cstack_done471:
    pop rx237_rep, rx237_bstack
    pop rx237_pos, rx237_bstack
    pop $I19, rx237_bstack
    lt rx237_pos, -1, rx237_done466
    lt rx237_pos, 0, rx237_fail468
    eq $I19, 0, rx237_fail468
    nqp_islist $I20, rx237_cstack
    unless $I20, rx237_jump469
    elements $I18, rx237_bstack
    le $I18, 0, rx237_cut470
    dec $I18
    set $I18, rx237_bstack[$I18]
  rx237_cut470:
    assign rx237_cstack, $I18
  rx237_jump469:
    jump $I19
  rx237_done466:
    rx237_cur."!cursor_fail"()
    .return (rx237_cur) 
.end
.HLL "nqp"
.namespace []
.sub "unv" :subid("cuid_41_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 698
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_42_1361734139.417' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx247_start
    .local string rx247_tgt
    .local int rx247_pos
    .local int rx247_off
    .local int rx247_eos
    .local int rx247_rep
    .local pmc rx247_cur
    .local pmc rx247_curclass
    .local pmc rx247_bstack
    .local pmc rx247_cstack
    rx247_start = self."!cursor_start_all"()
    set rx247_cur, rx247_start[0]
    set rx247_tgt, rx247_start[1]
    set rx247_pos, rx247_start[2]
    set rx247_curclass, rx247_start[3]
    set rx247_bstack, rx247_start[4]
    set $I19, rx247_start[5]
    store_lex unicode:"$\x{a2}", rx247_cur
    length rx247_eos, rx247_tgt
    eq $I19, 1, rx247_restart495
    gt rx247_pos, rx247_eos, rx247_fail496
    repr_get_attr_int $I11, self, rx247_curclass, "$!from"
    ne $I11, -1, rxscan248_done502
    goto rxscan248_scan501
  rxscan248_loop500:
    inc rx247_pos
    gt rx247_pos, rx247_eos, rx247_fail496
    repr_bind_attr_int rx247_cur, rx247_curclass, "$!from", rx247_pos
  rxscan248_scan501:
    nqp_rxmark rx247_bstack, rxscan248_loop500, rx247_pos, 0
  rxscan248_done502:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt249_0504
    nqp_push_label $P11, alt249_1522
    nqp_push_label $P11, alt249_2527
    nqp_rxmark rx247_bstack, alt249_end503, -1, 0
    rx247_cur."!alt"(rx247_pos, "alt_nfa__4_1361734140.769", $P11)
    goto rx247_fail496
  alt249_0504:
    eq rx247_pos, 0, rxanchor250_done505
    ge rx247_pos, rx247_eos, rx247_fail496
    sub $I11, rx247_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx247_tgt, $I11
    unless $I11, rx247_fail496
  rxanchor250_done505:
    .const 'Sub' $P5001 = 'cuid_42_1361734139.417' 
    capture_lex $P5001
    repr_bind_attr_int rx247_cur, rx247_curclass, "$!pos", rx247_pos
    $P11 = rx247_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx247_curclass, "$!pos"
    lt $I11, 0, rx247_fail496
    repr_bind_attr_int rx247_cur, rx247_curclass, "$!pos", rx247_pos
    $P11 = rx247_cur."pod_comment"()
    repr_get_attr_int $I11, $P11, rx247_curclass, "$!pos"
    lt $I11, 0, rx247_fail496
    repr_get_attr_int rx247_pos, $P11, rx247_curclass, "$!pos"
    goto alt249_end503
  alt249_1522:
    nqp_rxmark rx247_bstack, rxquantr256_done524, rx247_pos, 0
  rxquantr256_loop523:
    ge rx247_pos, rx247_eos, rx247_fail496
    substr $S11, rx247_tgt, rx247_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx247_fail496
    inc rx247_pos
    nqp_rxpeek $I19, rx247_bstack, rxquantr256_done524
    inc $I19
    inc $I19
    set rx247_rep, rx247_bstack[$I19]
    nqp_rxcommit rx247_bstack, rxquantr256_done524
    inc rx247_rep
    nqp_rxmark rx247_bstack, rxquantr256_done524, rx247_pos, rx247_rep
    goto rxquantr256_loop523
  rxquantr256_done524:
    add $I11, rx247_pos, 1
    gt $I11, rx247_eos, rx247_fail496
    substr $S10, rx247_tgt, rx247_pos, 1
    ne $S10, ucs4:"#", rx247_fail496
    add rx247_pos, 1
    nqp_rxmark rx247_bstack, rxquantr257_done526, rx247_pos, 0
  rxquantr257_loop525:
    ge rx247_pos, rx247_eos, rx247_fail496
    is_cclass $I11, .CCLASS_NEWLINE, rx247_tgt, rx247_pos
    if $I11, rx247_fail496
    add rx247_pos, 1
    nqp_rxpeek $I19, rx247_bstack, rxquantr257_done526
    inc $I19
    inc $I19
    set rx247_rep, rx247_bstack[$I19]
    nqp_rxcommit rx247_bstack, rxquantr257_done526
    inc rx247_rep
    nqp_rxmark rx247_bstack, rxquantr257_done526, rx247_pos, rx247_rep
    goto rxquantr257_loop525
  rxquantr257_done526:
    goto alt249_end503
  alt249_2527:
    nqp_rxmark rx247_bstack, rxquantr258_done529, -1, 0
  rxquantr258_loop528:
    ge rx247_pos, rx247_eos, rx247_fail496
    substr $S11, rx247_tgt, rx247_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx247_fail496
    inc rx247_pos
    nqp_rxpeek $I19, rx247_bstack, rxquantr258_done529
    inc $I19
    inc $I19
    set rx247_rep, rx247_bstack[$I19]
    nqp_rxcommit rx247_bstack, rxquantr258_done529
    inc rx247_rep
    nqp_rxmark rx247_bstack, rxquantr258_done529, rx247_pos, rx247_rep
    goto rxquantr258_loop528
  rxquantr258_done529:
    goto alt249_end503
  alt249_end503:
    nqp_rxcommit rx247_bstack, alt249_end503
    rx247_cur."!cursor_pass"(rx247_pos, "unv", 'backtrack'=>1)
    .return (rx247_cur)
  rx247_restart495:
    repr_get_attr_obj rx247_cstack, rx247_cur, rx247_curclass, "$!cstack"
  rx247_fail496:
    unless rx247_bstack, rx247_done494
    pop $I19, rx247_bstack
    if_null rx247_cstack, rx247_cstack_done499
    unless rx247_cstack, rx247_cstack_done499
    dec $I19
    set $P11, rx247_cstack[$I19]
  rx247_cstack_done499:
    pop rx247_rep, rx247_bstack
    pop rx247_pos, rx247_bstack
    pop $I19, rx247_bstack
    lt rx247_pos, -1, rx247_done494
    lt rx247_pos, 0, rx247_fail496
    eq $I19, 0, rx247_fail496
    nqp_islist $I20, rx247_cstack
    unless $I20, rx247_jump497
    elements $I18, rx247_bstack
    le $I18, 0, rx247_cut498
    dec $I18
    set $I18, rx247_bstack[$I18]
  rx247_cut498:
    assign rx247_cstack, $I18
  rx247_jump497:
    jump $I19
  rx247_done494:
    rx247_cur."!cursor_fail"()
    .return (rx247_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_42_1361734139.417") :anon :lex :outer("cuid_41_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx251_start
    .local string rx251_tgt
    .local int rx251_pos
    .local int rx251_off
    .local int rx251_eos
    .local int rx251_rep
    .local pmc rx251_cur
    .local pmc rx251_curclass
    .local pmc rx251_bstack
    .local pmc rx251_cstack
    rx251_start = self."!cursor_start_all"()
    set rx251_cur, rx251_start[0]
    set rx251_tgt, rx251_start[1]
    set rx251_pos, rx251_start[2]
    set rx251_curclass, rx251_start[3]
    set rx251_bstack, rx251_start[4]
    set $I19, rx251_start[5]
    store_lex unicode:"$\x{a2}", rx251_cur
    length rx251_eos, rx251_tgt
    eq $I19, 1, rx251_restart508
    gt rx251_pos, rx251_eos, rx251_fail509
    repr_get_attr_int $I11, self, rx251_curclass, "$!from"
    ne $I11, -1, rxscan252_done515
    goto rxscan252_scan514
  rxscan252_loop513:
    inc rx251_pos
    gt rx251_pos, rx251_eos, rx251_fail509
    repr_bind_attr_int rx251_cur, rx251_curclass, "$!from", rx251_pos
  rxscan252_scan514:
    nqp_rxmark rx251_bstack, rxscan252_loop513, rx251_pos, 0
  rxscan252_done515:
    nqp_rxmark rx251_bstack, rxquantr253_done517, rx251_pos, 0
  rxquantr253_loop516:
    ge rx251_pos, rx251_eos, rx251_fail509
    substr $S11, rx251_tgt, rx251_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx251_fail509
    inc rx251_pos
    nqp_rxpeek $I19, rx251_bstack, rxquantr253_done517
    inc $I19
    inc $I19
    set rx251_rep, rx251_bstack[$I19]
    nqp_rxcommit rx251_bstack, rxquantr253_done517
    inc rx251_rep
    nqp_rxmark rx251_bstack, rxquantr253_done517, rx251_pos, rx251_rep
    goto rxquantr253_loop516
  rxquantr253_done517:
    add $I11, rx251_pos, 1
    gt $I11, rx251_eos, rx251_fail509
    substr $S10, rx251_tgt, rx251_pos, 1
    ne $S10, ucs4:"=", rx251_fail509
    add rx251_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt254_0519
    nqp_push_label $P11, alt254_1520
    nqp_rxmark rx251_bstack, alt254_end518, -1, 0
    rx251_cur."!alt"(rx251_pos, "alt_nfa__3_1361734140.76", $P11)
    goto rx251_fail509
  alt254_0519:
    ge rx251_pos, rx251_eos, rx251_fail509
    is_cclass $I11, .CCLASS_WORD, rx251_tgt, rx251_pos
    unless $I11, rx251_fail509
    add rx251_pos, 1
    goto alt254_end518
  alt254_1520:
    add $I11, rx251_pos, 1
    gt $I11, rx251_eos, rx251_fail509
    substr $S10, rx251_tgt, rx251_pos, 1
    ne $S10, ucs4:"\\", rx251_fail509
    add rx251_pos, 1
    goto alt254_end518
  alt254_end518:
    nqp_rxcommit rx251_bstack, alt254_end518
    rx251_cur."!cursor_pass"(rx251_pos, 'backtrack'=>1)
    .return (rx251_cur)
  rx251_restart508:
    repr_get_attr_obj rx251_cstack, rx251_cur, rx251_curclass, "$!cstack"
  rx251_fail509:
    unless rx251_bstack, rx251_done507
    pop $I19, rx251_bstack
    if_null rx251_cstack, rx251_cstack_done512
    unless rx251_cstack, rx251_cstack_done512
    dec $I19
    set $P11, rx251_cstack[$I19]
  rx251_cstack_done512:
    pop rx251_rep, rx251_bstack
    pop rx251_pos, rx251_bstack
    pop $I19, rx251_bstack
    lt rx251_pos, -1, rx251_done507
    lt rx251_pos, 0, rx251_fail509
    eq $I19, 0, rx251_fail509
    nqp_islist $I20, rx251_cstack
    unless $I20, rx251_jump510
    elements $I18, rx251_bstack
    le $I18, 0, rx251_cut511
    dec $I18
    set $I18, rx251_bstack[$I18]
  rx251_cut511:
    assign rx251_cstack, $I18
  rx251_jump510:
    jump $I19
  rx251_done507:
    rx251_cur."!cursor_fail"()
    .return (rx251_cur) 
.end
.HLL "nqp"
.namespace []
.sub "pod_comment" :subid("cuid_43_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 707
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_44_1361734139.417' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx259_start
    .local string rx259_tgt
    .local int rx259_pos
    .local int rx259_off
    .local int rx259_eos
    .local int rx259_rep
    .local pmc rx259_cur
    .local pmc rx259_curclass
    .local pmc rx259_bstack
    .local pmc rx259_cstack
    rx259_start = self."!cursor_start_all"()
    set rx259_cur, rx259_start[0]
    set rx259_tgt, rx259_start[1]
    set rx259_pos, rx259_start[2]
    set rx259_curclass, rx259_start[3]
    set rx259_bstack, rx259_start[4]
    set $I19, rx259_start[5]
    store_lex unicode:"$\x{a2}", rx259_cur
    length rx259_eos, rx259_tgt
    eq $I19, 1, rx259_restart532
    gt rx259_pos, rx259_eos, rx259_fail533
    repr_get_attr_int $I11, self, rx259_curclass, "$!from"
    ne $I11, -1, rxscan260_done539
    goto rxscan260_scan538
  rxscan260_loop537:
    inc rx259_pos
    gt rx259_pos, rx259_eos, rx259_fail533
    repr_bind_attr_int rx259_cur, rx259_curclass, "$!from", rx259_pos
  rxscan260_scan538:
    nqp_rxmark rx259_bstack, rxscan260_loop537, rx259_pos, 0
  rxscan260_done539:
    eq rx259_pos, 0, rxanchor261_done540
    ge rx259_pos, rx259_eos, rx259_fail533
    sub $I11, rx259_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx259_tgt, $I11
    unless $I11, rx259_fail533
  rxanchor261_done540:
    nqp_rxmark rx259_bstack, rxquantr262_done542, rx259_pos, 0
  rxquantr262_loop541:
    ge rx259_pos, rx259_eos, rx259_fail533
    substr $S11, rx259_tgt, rx259_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx259_fail533
    inc rx259_pos
    nqp_rxpeek $I19, rx259_bstack, rxquantr262_done542
    inc $I19
    inc $I19
    set rx259_rep, rx259_bstack[$I19]
    nqp_rxcommit rx259_bstack, rxquantr262_done542
    inc rx259_rep
    nqp_rxmark rx259_bstack, rxquantr262_done542, rx259_pos, rx259_rep
    goto rxquantr262_loop541
  rxquantr262_done542:
    add $I11, rx259_pos, 1
    gt $I11, rx259_eos, rx259_fail533
    substr $S10, rx259_tgt, rx259_pos, 1
    ne $S10, ucs4:"=", rx259_fail533
    add rx259_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt263_0544
    nqp_push_label $P11, alt263_1563
    nqp_push_label $P11, alt263_2582
    nqp_push_label $P11, alt263_3604
    nqp_push_label $P11, alt263_4629
    nqp_rxmark rx259_bstack, alt263_end543, -1, 0
    rx259_cur."!alt"(rx259_pos, "alt_nfa__6_1361734140.856", $P11)
    goto rx259_fail533
  alt263_0544:
    add $I11, rx259_pos, 5
    gt $I11, rx259_eos, rx259_fail533
    substr $S10, rx259_tgt, rx259_pos, 5
    ne $S10, ucs4:"begin", rx259_fail533
    add rx259_pos, 5
    nqp_rxmark rx259_bstack, rxquantr264_done546, -1, 0
  rxquantr264_loop545:
    ge rx259_pos, rx259_eos, rx259_fail533
    substr $S11, rx259_tgt, rx259_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx259_fail533
    inc rx259_pos
    nqp_rxpeek $I19, rx259_bstack, rxquantr264_done546
    inc $I19
    inc $I19
    set rx259_rep, rx259_bstack[$I19]
    nqp_rxcommit rx259_bstack, rxquantr264_done546
    inc rx259_rep
    nqp_rxmark rx259_bstack, rxquantr264_done546, rx259_pos, rx259_rep
    goto rxquantr264_loop545
  rxquantr264_done546:
    add $I11, rx259_pos, 3
    gt $I11, rx259_eos, rx259_fail533
    substr $S10, rx259_tgt, rx259_pos, 3
    ne $S10, ucs4:"END", rx259_fail533
    add rx259_pos, 3
    le rx259_pos, 0, rx259_fail533
    is_cclass $I11, .CCLASS_WORD, rx259_tgt, rx259_pos
    if $I11, rx259_fail533
    sub $I11, rx259_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx259_tgt, $I11
    unless $I11, rx259_fail533
  alt266_0549:
    nqp_rxmark rx259_bstack, alt266_1560, rx259_pos, 0
    set rx259_rep, 0
    nqp_rxmark rx259_bstack, rxquantf267_loop550, rx259_pos, rx259_rep
    goto rxquantf267_done551
  rxquantf267_loop550:
    set $I12, rx259_rep
    ge rx259_pos, rx259_eos, rx259_fail533
    add rx259_pos, 1
    set rx259_rep, $I12
    inc rx259_rep
    nqp_rxmark rx259_bstack, rxquantf267_loop550, rx259_pos, rx259_rep
  rxquantf267_done551:
    ge rx259_pos, rx259_eos, rx259_fail533
    is_cclass $I11, .CCLASS_NEWLINE, rx259_tgt, rx259_pos
    unless $I11, rx259_fail533
    substr $S10, rx259_tgt, rx259_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx259_pos, $I11
    add rx259_pos, 1
    nqp_rxmark rx259_bstack, rxquantr268_done554, rx259_pos, 0
  rxquantr268_loop553:
    ge rx259_pos, rx259_eos, rx259_fail533
    substr $S11, rx259_tgt, rx259_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx259_fail533
    inc rx259_pos
    nqp_rxpeek $I19, rx259_bstack, rxquantr268_done554
    inc $I19
    inc $I19
    set rx259_rep, rx259_bstack[$I19]
    nqp_rxcommit rx259_bstack, rxquantr268_done554
    inc rx259_rep
    nqp_rxmark rx259_bstack, rxquantr268_done554, rx259_pos, rx259_rep
    goto rxquantr268_loop553
  rxquantr268_done554:
    add $I11, rx259_pos, 4
    gt $I11, rx259_eos, rx259_fail533
    substr $S10, rx259_tgt, rx259_pos, 4
    ne $S10, ucs4:"=end", rx259_fail533
    add rx259_pos, 4
    nqp_rxmark rx259_bstack, rxquantr269_done556, -1, 0
  rxquantr269_loop555:
    ge rx259_pos, rx259_eos, rx259_fail533
    substr $S11, rx259_tgt, rx259_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx259_fail533
    inc rx259_pos
    nqp_rxpeek $I19, rx259_bstack, rxquantr269_done556
    inc $I19
    inc $I19
    set rx259_rep, rx259_bstack[$I19]
    nqp_rxcommit rx259_bstack, rxquantr269_done556
    inc rx259_rep
    nqp_rxmark rx259_bstack, rxquantr269_done556, rx259_pos, rx259_rep
    goto rxquantr269_loop555
  rxquantr269_done556:
    add $I11, rx259_pos, 3
    gt $I11, rx259_eos, rx259_fail533
    substr $S10, rx259_tgt, rx259_pos, 3
    ne $S10, ucs4:"END", rx259_fail533
    add rx259_pos, 3
    le rx259_pos, 0, rx259_fail533
    is_cclass $I11, .CCLASS_WORD, rx259_tgt, rx259_pos
    if $I11, rx259_fail533
    sub $I11, rx259_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx259_tgt, $I11
    unless $I11, rx259_fail533
    nqp_rxmark rx259_bstack, rxquantr271_done559, rx259_pos, 0
  rxquantr271_loop558:
    ge rx259_pos, rx259_eos, rx259_fail533
    is_cclass $I11, .CCLASS_NEWLINE, rx259_tgt, rx259_pos
    if $I11, rx259_fail533
    add rx259_pos, 1
    nqp_rxpeek $I19, rx259_bstack, rxquantr271_done559
    inc $I19
    inc $I19
    set rx259_rep, rx259_bstack[$I19]
    nqp_rxcommit rx259_bstack, rxquantr271_done559
    inc rx259_rep
    nqp_rxmark rx259_bstack, rxquantr271_done559, rx259_pos, rx259_rep
    goto rxquantr271_loop558
  rxquantr271_done559:
    goto alt266_end548
  alt266_1560:
    nqp_rxmark rx259_bstack, rxquantr272_done562, rx259_pos, 0
  rxquantr272_loop561:
    ge rx259_pos, rx259_eos, rx259_fail533
    add rx259_pos, 1
    nqp_rxpeek $I19, rx259_bstack, rxquantr272_done562
    inc $I19
    inc $I19
    set rx259_rep, rx259_bstack[$I19]
    nqp_rxcommit rx259_bstack, rxquantr272_done562
    inc rx259_rep
    nqp_rxmark rx259_bstack, rxquantr272_done562, rx259_pos, rx259_rep
    goto rxquantr272_loop561
  rxquantr272_done562:
  alt266_end548:
    goto alt263_end543
  alt263_1563:
    add $I11, rx259_pos, 5
    gt $I11, rx259_eos, rx259_fail533
    substr $S10, rx259_tgt, rx259_pos, 5
    ne $S10, ucs4:"begin", rx259_fail533
    add rx259_pos, 5
    nqp_rxmark rx259_bstack, rxquantr273_done565, -1, 0
  rxquantr273_loop564:
    ge rx259_pos, rx259_eos, rx259_fail533
    substr $S11, rx259_tgt, rx259_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx259_fail533
    inc rx259_pos
    nqp_rxpeek $I19, rx259_bstack, rxquantr273_done565
    inc $I19
    inc $I19
    set rx259_rep, rx259_bstack[$I19]
    nqp_rxcommit rx259_bstack, rxquantr273_done565
    inc rx259_rep
    nqp_rxmark rx259_bstack, rxquantr273_done565, rx259_pos, rx259_rep
    goto rxquantr273_loop564
  rxquantr273_done565:
    repr_bind_attr_int rx259_cur, rx259_curclass, "$!pos", rx259_pos
    $P11 = rx259_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx259_curclass, "$!pos"
    lt $I11, 0, rx259_fail533
    nqp_rxmark rx259_bstack, rxsubrule274_pass566, -1, 0
  rxsubrule274_pass566:
    rx259_cstack = rx259_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx259_pos, $P11, rx259_curclass, "$!pos"
  alt275_0568:
    nqp_rxmark rx259_bstack, alt275_1580, rx259_pos, 0
    set rx259_rep, 0
    nqp_rxmark rx259_bstack, rxquantf276_loop569, rx259_pos, rx259_rep
    goto rxquantf276_done570
  rxquantf276_loop569:
    set $I12, rx259_rep
    ge rx259_pos, rx259_eos, rx259_fail533
    add rx259_pos, 1
    set rx259_rep, $I12
    inc rx259_rep
    nqp_rxmark rx259_bstack, rxquantf276_loop569, rx259_pos, rx259_rep
  rxquantf276_done570:
    ge rx259_pos, rx259_eos, rx259_fail533
    is_cclass $I11, .CCLASS_NEWLINE, rx259_tgt, rx259_pos
    unless $I11, rx259_fail533
    substr $S10, rx259_tgt, rx259_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx259_pos, $I11
    add rx259_pos, 1
    nqp_rxmark rx259_bstack, rxquantr277_done573, rx259_pos, 0
  rxquantr277_loop572:
    ge rx259_pos, rx259_eos, rx259_fail533
    substr $S11, rx259_tgt, rx259_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx259_fail533
    inc rx259_pos
    nqp_rxpeek $I19, rx259_bstack, rxquantr277_done573
    inc $I19
    inc $I19
    set rx259_rep, rx259_bstack[$I19]
    nqp_rxcommit rx259_bstack, rxquantr277_done573
    inc rx259_rep
    nqp_rxmark rx259_bstack, rxquantr277_done573, rx259_pos, rx259_rep
    goto rxquantr277_loop572
  rxquantr277_done573:
    add $I11, rx259_pos, 4
    gt $I11, rx259_eos, rx259_fail533
    substr $S10, rx259_tgt, rx259_pos, 4
    ne $S10, ucs4:"=end", rx259_fail533
    add rx259_pos, 4
    nqp_rxmark rx259_bstack, rxquantr278_done575, -1, 0
  rxquantr278_loop574:
    ge rx259_pos, rx259_eos, rx259_fail533
    substr $S11, rx259_tgt, rx259_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx259_fail533
    inc rx259_pos
    nqp_rxpeek $I19, rx259_bstack, rxquantr278_done575
    inc $I19
    inc $I19
    set rx259_rep, rx259_bstack[$I19]
    nqp_rxcommit rx259_bstack, rxquantr278_done575
    inc rx259_rep
    nqp_rxmark rx259_bstack, rxquantr278_done575, rx259_pos, rx259_rep
    goto rxquantr278_loop574
  rxquantr278_done575:
    repr_bind_attr_int rx259_cur, rx259_curclass, "$!pos", rx259_pos
    $P11 = rx259_cur."!BACKREF"("identifier")
    repr_get_attr_int $I11, $P11, rx259_curclass, "$!pos"
    lt $I11, 0, rx259_fail533
    repr_get_attr_int rx259_pos, $P11, rx259_curclass, "$!pos"
    le rx259_pos, 0, rx259_fail533
    is_cclass $I11, .CCLASS_WORD, rx259_tgt, rx259_pos
    if $I11, rx259_fail533
    sub $I11, rx259_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx259_tgt, $I11
    unless $I11, rx259_fail533
    nqp_rxmark rx259_bstack, rxquantr281_done579, rx259_pos, 0
  rxquantr281_loop578:
    ge rx259_pos, rx259_eos, rx259_fail533
    is_cclass $I11, .CCLASS_NEWLINE, rx259_tgt, rx259_pos
    if $I11, rx259_fail533
    add rx259_pos, 1
    nqp_rxpeek $I19, rx259_bstack, rxquantr281_done579
    inc $I19
    inc $I19
    set rx259_rep, rx259_bstack[$I19]
    nqp_rxcommit rx259_bstack, rxquantr281_done579
    inc rx259_rep
    nqp_rxmark rx259_bstack, rxquantr281_done579, rx259_pos, rx259_rep
    goto rxquantr281_loop578
  rxquantr281_done579:
    goto alt275_end567
  alt275_1580:
    repr_bind_attr_int rx259_cur, rx259_curclass, "$!pos", rx259_pos
    $P11 = rx259_cur."panic"("=begin without matching =end")
    repr_get_attr_int $I11, $P11, rx259_curclass, "$!pos"
    lt $I11, 0, rx259_fail533
    repr_get_attr_int rx259_pos, $P11, rx259_curclass, "$!pos"
  alt275_end567:
    goto alt263_end543
  alt263_2582:
    add $I11, rx259_pos, 5
    gt $I11, rx259_eos, rx259_fail533
    substr $S10, rx259_tgt, rx259_pos, 5
    ne $S10, ucs4:"begin", rx259_fail533
    add rx259_pos, 5
    le rx259_pos, 0, rx259_fail533
    is_cclass $I11, .CCLASS_WORD, rx259_tgt, rx259_pos
    if $I11, rx259_fail533
    sub $I11, rx259_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx259_tgt, $I11
    unless $I11, rx259_fail533
    nqp_rxmark rx259_bstack, rxquantr284_done585, rx259_pos, 0
  rxquantr284_loop584:
    ge rx259_pos, rx259_eos, rx259_fail533
    substr $S11, rx259_tgt, rx259_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx259_fail533
    inc rx259_pos
    nqp_rxpeek $I19, rx259_bstack, rxquantr284_done585
    inc $I19
    inc $I19
    set rx259_rep, rx259_bstack[$I19]
    nqp_rxcommit rx259_bstack, rxquantr284_done585
    inc rx259_rep
    nqp_rxmark rx259_bstack, rxquantr284_done585, rx259_pos, rx259_rep
    goto rxquantr284_loop584
  rxquantr284_done585:
  alt285_0587:
    nqp_rxmark rx259_bstack, alt285_1589, rx259_pos, 0
    is_cclass $I11, .CCLASS_NEWLINE, rx259_tgt, rx259_pos
    if $I11, rxanchor286_done588
    ne rx259_pos, rx259_eos, rx259_fail533
    eq rx259_pos, 0, rxanchor286_done588
    sub $I11, rx259_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx259_tgt, $I11
    if $I11, rx259_fail533
  rxanchor286_done588:
    goto alt285_end586
  alt285_1589:
    nqp_rxmark rx259_bstack, alt285_2590, rx259_pos, 0
    add $I11, rx259_pos, 1
    gt $I11, rx259_eos, rx259_fail533
    substr $S10, rx259_tgt, rx259_pos, 1
    ne $S10, ucs4:"#", rx259_fail533
    add rx259_pos, 1
    goto alt285_end586
  alt285_2590:
    repr_bind_attr_int rx259_cur, rx259_curclass, "$!pos", rx259_pos
    $P11 = rx259_cur."panic"("Unrecognized token after =begin")
    repr_get_attr_int $I11, $P11, rx259_curclass, "$!pos"
    lt $I11, 0, rx259_fail533
    repr_get_attr_int rx259_pos, $P11, rx259_curclass, "$!pos"
  alt285_end586:
  alt288_0593:
    nqp_rxmark rx259_bstack, alt288_1602, rx259_pos, 0
    set rx259_rep, 0
    nqp_rxmark rx259_bstack, rxquantf289_loop594, rx259_pos, rx259_rep
    goto rxquantf289_done595
  rxquantf289_loop594:
    set $I12, rx259_rep
    ge rx259_pos, rx259_eos, rx259_fail533
    add rx259_pos, 1
    set rx259_rep, $I12
    inc rx259_rep
    nqp_rxmark rx259_bstack, rxquantf289_loop594, rx259_pos, rx259_rep
  rxquantf289_done595:
    ge rx259_pos, rx259_eos, rx259_fail533
    is_cclass $I11, .CCLASS_NEWLINE, rx259_tgt, rx259_pos
    unless $I11, rx259_fail533
    substr $S10, rx259_tgt, rx259_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx259_pos, $I11
    add rx259_pos, 1
    nqp_rxmark rx259_bstack, rxquantr290_done598, rx259_pos, 0
  rxquantr290_loop597:
    ge rx259_pos, rx259_eos, rx259_fail533
    substr $S11, rx259_tgt, rx259_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx259_fail533
    inc rx259_pos
    nqp_rxpeek $I19, rx259_bstack, rxquantr290_done598
    inc $I19
    inc $I19
    set rx259_rep, rx259_bstack[$I19]
    nqp_rxcommit rx259_bstack, rxquantr290_done598
    inc rx259_rep
    nqp_rxmark rx259_bstack, rxquantr290_done598, rx259_pos, rx259_rep
    goto rxquantr290_loop597
  rxquantr290_done598:
    add $I11, rx259_pos, 4
    gt $I11, rx259_eos, rx259_fail533
    substr $S10, rx259_tgt, rx259_pos, 4
    ne $S10, ucs4:"=end", rx259_fail533
    add rx259_pos, 4
    le rx259_pos, 0, rx259_fail533
    is_cclass $I11, .CCLASS_WORD, rx259_tgt, rx259_pos
    if $I11, rx259_fail533
    sub $I11, rx259_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx259_tgt, $I11
    unless $I11, rx259_fail533
    nqp_rxmark rx259_bstack, rxquantr292_done601, rx259_pos, 0
  rxquantr292_loop600:
    ge rx259_pos, rx259_eos, rx259_fail533
    is_cclass $I11, .CCLASS_NEWLINE, rx259_tgt, rx259_pos
    if $I11, rx259_fail533
    add rx259_pos, 1
    nqp_rxpeek $I19, rx259_bstack, rxquantr292_done601
    inc $I19
    inc $I19
    set rx259_rep, rx259_bstack[$I19]
    nqp_rxcommit rx259_bstack, rxquantr292_done601
    inc rx259_rep
    nqp_rxmark rx259_bstack, rxquantr292_done601, rx259_pos, rx259_rep
    goto rxquantr292_loop600
  rxquantr292_done601:
    goto alt288_end592
  alt288_1602:
    repr_bind_attr_int rx259_cur, rx259_curclass, "$!pos", rx259_pos
    $P11 = rx259_cur."panic"("=begin without matching =end")
    repr_get_attr_int $I11, $P11, rx259_curclass, "$!pos"
    lt $I11, 0, rx259_fail533
    repr_get_attr_int rx259_pos, $P11, rx259_curclass, "$!pos"
  alt288_end592:
    goto alt263_end543
  alt263_3604:
    repr_bind_attr_int rx259_cur, rx259_curclass, "$!pos", rx259_pos
    $P11 = rx259_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx259_curclass, "$!pos"
    lt $I11, 0, rx259_fail533
    nqp_rxmark rx259_bstack, rxsubrule294_pass605, -1, 0
  rxsubrule294_pass605:
    rx259_cstack = rx259_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx259_pos, $P11, rx259_curclass, "$!pos"
    set rx259_rep, 0
    nqp_rxmark rx259_bstack, rxquantf295_loop606, rx259_pos, rx259_rep
    goto rxquantf295_done607
  rxquantf295_loop606:
    set $I12, rx259_rep
    ge rx259_pos, rx259_eos, rx259_fail533
    add rx259_pos, 1
    set rx259_rep, $I12
    inc rx259_rep
    nqp_rxmark rx259_bstack, rxquantf295_loop606, rx259_pos, rx259_rep
  rxquantf295_done607:
    eq rx259_pos, 0, rxanchor296_done609
    ge rx259_pos, rx259_eos, rx259_fail533
    sub $I11, rx259_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx259_tgt, $I11
    unless $I11, rx259_fail533
  rxanchor296_done609:
    .const 'Sub' $P5001 = 'cuid_44_1361734139.417' 
    capture_lex $P5001
    repr_bind_attr_int rx259_cur, rx259_curclass, "$!pos", rx259_pos
    $P11 = rx259_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx259_curclass, "$!pos"
    lt $I11, 0, rx259_fail533
    goto alt263_end543
  alt263_4629:
  alt304_0631:
    nqp_rxmark rx259_bstack, alt304_1632, rx259_pos, 0
    ge rx259_pos, rx259_eos, rx259_fail533
    is_cclass $I11, .CCLASS_WHITESPACE, rx259_tgt, rx259_pos
    unless $I11, rx259_fail533
    add rx259_pos, 1
    goto alt304_end630
  alt304_1632:
    repr_bind_attr_int rx259_cur, rx259_curclass, "$!pos", rx259_pos
    $P11 = rx259_cur."panic"("Illegal pod directive")
    repr_get_attr_int $I11, $P11, rx259_curclass, "$!pos"
    lt $I11, 0, rx259_fail533
    repr_get_attr_int rx259_pos, $P11, rx259_curclass, "$!pos"
  alt304_end630:
    nqp_rxmark rx259_bstack, rxquantr306_done635, rx259_pos, 0
  rxquantr306_loop634:
    ge rx259_pos, rx259_eos, rx259_fail533
    is_cclass $I11, .CCLASS_NEWLINE, rx259_tgt, rx259_pos
    if $I11, rx259_fail533
    add rx259_pos, 1
    nqp_rxpeek $I19, rx259_bstack, rxquantr306_done635
    inc $I19
    inc $I19
    set rx259_rep, rx259_bstack[$I19]
    nqp_rxcommit rx259_bstack, rxquantr306_done635
    inc rx259_rep
    nqp_rxmark rx259_bstack, rxquantr306_done635, rx259_pos, rx259_rep
    goto rxquantr306_loop634
  rxquantr306_done635:
    goto alt263_end543
  alt263_end543:
    nqp_rxcommit rx259_bstack, alt263_end543
    rx259_cur."!cursor_pass"(rx259_pos, "pod_comment", 'backtrack'=>1)
    .return (rx259_cur)
  rx259_restart532:
    repr_get_attr_obj rx259_cstack, rx259_cur, rx259_curclass, "$!cstack"
  rx259_fail533:
    unless rx259_bstack, rx259_done531
    pop $I19, rx259_bstack
    if_null rx259_cstack, rx259_cstack_done536
    unless rx259_cstack, rx259_cstack_done536
    dec $I19
    set $P11, rx259_cstack[$I19]
  rx259_cstack_done536:
    pop rx259_rep, rx259_bstack
    pop rx259_pos, rx259_bstack
    pop $I19, rx259_bstack
    lt rx259_pos, -1, rx259_done531
    lt rx259_pos, 0, rx259_fail533
    eq $I19, 0, rx259_fail533
    nqp_islist $I20, rx259_cstack
    unless $I20, rx259_jump534
    elements $I18, rx259_bstack
    le $I18, 0, rx259_cut535
    dec $I18
    set $I18, rx259_bstack[$I18]
  rx259_cut535:
    assign rx259_cstack, $I18
  rx259_jump534:
    jump $I19
  rx259_done531:
    rx259_cur."!cursor_fail"()
    .return (rx259_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_44_1361734139.417") :anon :lex :outer("cuid_43_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx297_start
    .local string rx297_tgt
    .local int rx297_pos
    .local int rx297_off
    .local int rx297_eos
    .local int rx297_rep
    .local pmc rx297_cur
    .local pmc rx297_curclass
    .local pmc rx297_bstack
    .local pmc rx297_cstack
    rx297_start = self."!cursor_start_all"()
    set rx297_cur, rx297_start[0]
    set rx297_tgt, rx297_start[1]
    set rx297_pos, rx297_start[2]
    set rx297_curclass, rx297_start[3]
    set rx297_bstack, rx297_start[4]
    set $I19, rx297_start[5]
    store_lex unicode:"$\x{a2}", rx297_cur
    length rx297_eos, rx297_tgt
    eq $I19, 1, rx297_restart612
    gt rx297_pos, rx297_eos, rx297_fail613
    repr_get_attr_int $I11, self, rx297_curclass, "$!from"
    ne $I11, -1, rxscan298_done619
    goto rxscan298_scan618
  rxscan298_loop617:
    inc rx297_pos
    gt rx297_pos, rx297_eos, rx297_fail613
    repr_bind_attr_int rx297_cur, rx297_curclass, "$!from", rx297_pos
  rxscan298_scan618:
    nqp_rxmark rx297_bstack, rxscan298_loop617, rx297_pos, 0
  rxscan298_done619:
    nqp_rxmark rx297_bstack, rxquantr299_done621, rx297_pos, 0
  rxquantr299_loop620:
    ge rx297_pos, rx297_eos, rx297_fail613
    substr $S11, rx297_tgt, rx297_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx297_fail613
    inc rx297_pos
    nqp_rxpeek $I19, rx297_bstack, rxquantr299_done621
    inc $I19
    inc $I19
    set rx297_rep, rx297_bstack[$I19]
    nqp_rxcommit rx297_bstack, rxquantr299_done621
    inc rx297_rep
    nqp_rxmark rx297_bstack, rxquantr299_done621, rx297_pos, rx297_rep
    goto rxquantr299_loop620
  rxquantr299_done621:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt300_0623
    nqp_push_label $P11, alt300_1628
    nqp_rxmark rx297_bstack, alt300_end622, -1, 0
    rx297_cur."!alt"(rx297_pos, "alt_nfa__5_1361734140.843", $P11)
    goto rx297_fail613
  alt300_0623:
    add $I11, rx297_pos, 1
    gt $I11, rx297_eos, rx297_fail613
    substr $S10, rx297_tgt, rx297_pos, 1
    ne $S10, ucs4:"=", rx297_fail613
    add rx297_pos, 1
    nqp_rxmark rx297_bstack, rxquantr301_done625, rx297_pos, 0
  rxquantr301_loop624:
    add $I11, rx297_pos, 3
    gt $I11, rx297_eos, rx297_fail613
    substr $S10, rx297_tgt, rx297_pos, 3
    ne $S10, ucs4:"cut", rx297_fail613
    add rx297_pos, 3
    le rx297_pos, 0, rx297_fail613
    is_cclass $I11, .CCLASS_WORD, rx297_tgt, rx297_pos
    if $I11, rx297_fail613
    sub $I11, rx297_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx297_tgt, $I11
    unless $I11, rx297_fail613
    repr_bind_attr_int rx297_cur, rx297_curclass, "$!pos", rx297_pos
    $P11 = rx297_cur."panic"("Obsolete pod format, please use =begin/=end instead")
    repr_get_attr_int $I11, $P11, rx297_curclass, "$!pos"
    lt $I11, 0, rx297_fail613
    repr_get_attr_int rx297_pos, $P11, rx297_curclass, "$!pos"
    nqp_rxpeek $I19, rx297_bstack, rxquantr301_done625
    inc $I19
    inc $I19
    set rx297_rep, rx297_bstack[$I19]
    nqp_rxcommit rx297_bstack, rxquantr301_done625
    inc rx297_rep
  rxquantr301_done625:
    goto alt300_end622
  alt300_1628:
    ge rx297_pos, rx297_eos, rx297_fail613
    is_cclass $I11, .CCLASS_NEWLINE, rx297_tgt, rx297_pos
    unless $I11, rx297_fail613
    substr $S10, rx297_tgt, rx297_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx297_pos, $I11
    add rx297_pos, 1
    goto alt300_end622
  alt300_end622:
    nqp_rxcommit rx297_bstack, alt300_end622
    rx297_cur."!cursor_pass"(rx297_pos, 'backtrack'=>1)
    .return (rx297_cur)
  rx297_restart612:
    repr_get_attr_obj rx297_cstack, rx297_cur, rx297_curclass, "$!cstack"
  rx297_fail613:
    unless rx297_bstack, rx297_done611
    pop $I19, rx297_bstack
    if_null rx297_cstack, rx297_cstack_done616
    unless rx297_cstack, rx297_cstack_done616
    dec $I19
    set $P11, rx297_cstack[$I19]
  rx297_cstack_done616:
    pop rx297_rep, rx297_bstack
    pop rx297_pos, rx297_bstack
    pop $I19, rx297_bstack
    lt rx297_pos, -1, rx297_done611
    lt rx297_pos, 0, rx297_fail613
    eq $I19, 0, rx297_fail613
    nqp_islist $I20, rx297_cstack
    unless $I20, rx297_jump614
    elements $I18, rx297_bstack
    le $I18, 0, rx297_cut615
    dec $I18
    set $I18, rx297_bstack[$I18]
  rx297_cut615:
    assign rx297_cstack, $I18
  rx297_jump614:
    jump $I19
  rx297_done611:
    rx297_cur."!cursor_fail"()
    .return (rx297_cur) 
.end
.HLL "nqp"
.namespace []
.sub "comp_unit" :subid("cuid_45_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 738
    .param pmc _lex_param_0 
    .const 'Sub' $P5073 = 'cuid_398_1361734139.417' 
    capture_lex $P5073 
    .const 'Sub' $P5073 = 'cuid_399_1361734139.417' 
    capture_lex $P5073 
    .const 'Sub' $P5073 = 'cuid_401_1361734139.417' 
    capture_lex $P5073 
    .const 'Sub' $P5073 = 'cuid_402_1361734139.417' 
    capture_lex $P5073 
    .lex "$*IN_DECL", $P101 
    .lex "$*HAS_YOU_ARE_HERE", $P102 
    .lex "$*MAIN_SUB", $P103 
    .lex "$*UNIT", $P104 
    .lex "$*GLOBALish", $P105 
    .lex "$*PACKAGE", $P106 
    .lex "$*EXPORT", $P107 
    .lex utf8:"$\x{a2}", $P108 
    .lex "$/", $P109 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_67 
    .local pmc fb_tmp_68 
    .local pmc fb_tmp_69 
    .local pmc fb_tmp_70 
    .local pmc fb_tmp_71 
    .local pmc pkg_viv_tmp_17 
    .local pmc fb_tmp_77 
    .local pmc fb_tmp_81 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P105, $P5005
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P106, $P5006
    nqp_get_sc_object $P5007, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P107, $P5007
    set self, _lex_param_0
    .local pmc rx307_start
    .local string rx307_tgt
    .local int rx307_pos
    .local int rx307_off
    .local int rx307_eos
    .local int rx307_rep
    .local pmc rx307_cur
    .local pmc rx307_curclass
    .local pmc rx307_bstack
    .local pmc rx307_cstack
    rx307_start = self."!cursor_start_all"()
    set rx307_cur, rx307_start[0]
    set rx307_tgt, rx307_start[1]
    set rx307_pos, rx307_start[2]
    set rx307_curclass, rx307_start[3]
    set rx307_bstack, rx307_start[4]
    set $I19, rx307_start[5]
    store_lex unicode:"$\x{a2}", rx307_cur
    length rx307_eos, rx307_tgt
    eq $I19, 1, rx307_restart638
    gt rx307_pos, rx307_eos, rx307_fail639
    repr_get_attr_int $I11, self, rx307_curclass, "$!from"
    ne $I11, -1, rxscan308_done645
    goto rxscan308_scan644
  rxscan308_loop643:
    inc rx307_pos
    gt rx307_pos, rx307_eos, rx307_fail639
    repr_bind_attr_int rx307_cur, rx307_curclass, "$!from", rx307_pos
  rxscan308_scan644:
    nqp_rxmark rx307_bstack, rxscan308_loop643, rx307_pos, 0
  rxscan308_done645:
    repr_bind_attr_int rx307_cur, rx307_curclass, "$!pos", rx307_pos
    store_lex unicode:"$\x{a2}", rx307_cur
    box $P5008, ""
    set $P101, $P5008
    repr_bind_attr_int rx307_cur, rx307_curclass, "$!pos", rx307_pos
    store_lex unicode:"$\x{a2}", rx307_cur
    box $P5009, 0
    set $P102, $P5009
    repr_bind_attr_int rx307_cur, rx307_curclass, "$!pos", rx307_pos
    store_lex unicode:"$\x{a2}", rx307_cur
    unless_null $P103, fallback646
    nqp_get_sc_object $P5011, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5010, $P5011
    set fb_tmp_67, $P5010
    repr_defined $I5001, fb_tmp_67
    unless $I5001 goto if309_else647 
    set $P5012, fb_tmp_67["$MAIN_SUB"]
    set $P5014, $P5012
    goto if309_end648
  if309_else647:
    null $P5013
    set $P5014, $P5013
  if309_end648:
    unless_null $P5014, vivi_310649
    nqp_get_sc_object $P5015, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5014, $P5015
  vivi_310649:
    unless_null $P5014, vivi_311650
    die "Contextual $*MAIN_SUB not found"
    box $P5016, "Contextual $*MAIN_SUB not found"
    set $P5014, $P5016
  vivi_311650:
    set $P103, $P5014
  fallback646:
    repr_bind_attr_int rx307_cur, rx307_curclass, "$!pos", rx307_pos
    store_lex unicode:"$\x{a2}", rx307_cur
.annotate 'line', 743
    find_dynamic_lex $P5017, "$*W"
    unless_null $P5017, fallback651
    nqp_get_sc_object $P5019, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5018, $P5019
    set fb_tmp_68, $P5018
    repr_defined $I5002, fb_tmp_68
    unless $I5002 goto if312_else652 
    set $P5020, fb_tmp_68["$W"]
    set $P5022, $P5020
    goto if312_end653
  if312_else652:
    null $P5021
    set $P5022, $P5021
  if312_end653:
    unless_null $P5022, vivi_313654
    nqp_get_sc_object $P5023, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5022, $P5023
  vivi_313654:
    unless_null $P5022, vivi_314655
    die "Contextual $*W not found"
    box $P5024, "Contextual $*W not found"
    set $P5022, $P5024
  vivi_314655:
    set $P5017, $P5022
  fallback651:
    $P5025 = $P5017."push_lexpad"($P109)
    set $P104, $P5025
    repr_bind_attr_int rx307_cur, rx307_curclass, "$!pos", rx307_pos
    store_lex unicode:"$\x{a2}", rx307_cur
.annotate 'line', 747
    find_dynamic_lex $P5026, "$*W"
    unless_null $P5026, fallback656
    nqp_get_sc_object $P5028, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5027, $P5028
    set fb_tmp_69, $P5027
    repr_defined $I5003, fb_tmp_69
    unless $I5003 goto if315_else657 
    set $P5029, fb_tmp_69["$W"]
    set $P5031, $P5029
    goto if315_end658
  if315_else657:
    null $P5030
    set $P5031, $P5030
  if315_end658:
    unless_null $P5031, vivi_316659
    nqp_get_sc_object $P5032, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5031, $P5032
  vivi_316659:
    unless_null $P5031, vivi_317660
    die "Contextual $*W not found"
    box $P5033, "Contextual $*W not found"
    set $P5031, $P5033
  vivi_317660:
    set $P5026, $P5031
  fallback656:
    find_dynamic_lex $P5034, "%*HOW"
    unless_null $P5034, fallback663
    nqp_get_sc_object $P5036, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5035, $P5036
    set pkg_viv_tmp_17, $P5035
    set fb_tmp_71, pkg_viv_tmp_17
    repr_defined $I5005, fb_tmp_71
    unless $I5005 goto if319_else664 
    set $P5037, fb_tmp_71["%HOW"]
    set $P5039, $P5037
    goto if319_end665
  if319_else664:
    null $P5038
    set $P5039, $P5038
  if319_end665:
    unless_null $P5039, vivi_320666
    new $P5040, 'Hash'
    set pkg_viv_tmp_17["%HOW"], $P5040
    set $P5039, $P5040
  vivi_320666:
    unless_null $P5039, vivi_321667
    die "Contextual %*HOW not found"
    box $P5041, "Contextual %*HOW not found"
    set $P5039, $P5041
  vivi_321667:
    set $P5034, $P5039
  fallback663:
    set fb_tmp_70, $P5034
    repr_defined $I5004, fb_tmp_70
    unless $I5004 goto if318_else661 
    set $P5042, fb_tmp_70["knowhow"]
    set $P5044, $P5042
    goto if318_end662
  if318_else661:
    null $P5043
    set $P5044, $P5043
  if318_end662:
    unless_null $P5044, vivi_322668
    nqp_get_sc_object $P5045, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5044, $P5045
  vivi_322668:
    $P5046 = $P5026."pkg_create_mo"($P5044, "GLOBALish" :named("name"))
    set $P105, $P5046
    repr_bind_attr_int rx307_cur, rx307_curclass, "$!pos", rx307_pos
    store_lex unicode:"$\x{a2}", rx307_cur
    $P5047 = $P108."MATCH"()
    set $P109, $P5047
    .const 'Sub' $P5048 = 'cuid_398_1361734139.417' 
    capture_lex $P5048
    $P5049 = $P5048()
    repr_bind_attr_int rx307_cur, rx307_curclass, "$!pos", rx307_pos
    store_lex unicode:"$\x{a2}", rx307_cur
    unless_null $P105, fallback694
    nqp_get_sc_object $P5051, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5050, $P5051
    set fb_tmp_77, $P5050
    repr_defined $I5006, fb_tmp_77
    unless $I5006 goto if338_else695 
    set $P5052, fb_tmp_77["$GLOBALish"]
    set $P5054, $P5052
    goto if338_end696
  if338_else695:
    null $P5053
    set $P5054, $P5053
  if338_end696:
    unless_null $P5054, vivi_339697
    nqp_get_sc_object $P5055, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5054, $P5055
  vivi_339697:
    unless_null $P5054, vivi_340698
    die "Contextual $*GLOBALish not found"
    box $P5056, "Contextual $*GLOBALish not found"
    set $P5054, $P5056
  vivi_340698:
    set $P105, $P5054
  fallback694:
    set $P106, $P105
    repr_bind_attr_int rx307_cur, rx307_curclass, "$!pos", rx307_pos
    store_lex unicode:"$\x{a2}", rx307_cur
    $P5057 = $P108."MATCH"()
    set $P109, $P5057
    .const 'Sub' $P5058 = 'cuid_399_1361734139.417' 
    capture_lex $P5058
    $P5059 = $P5058()
    repr_bind_attr_int rx307_cur, rx307_curclass, "$!pos", rx307_pos
    store_lex unicode:"$\x{a2}", rx307_cur
    unless_null $P107, fallback714
    nqp_get_sc_object $P5061, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5060, $P5061
    set fb_tmp_81, $P5060
    repr_defined $I5007, fb_tmp_81
    unless $I5007 goto if350_else715 
    set $P5062, fb_tmp_81["$EXPORT"]
    set $P5064, $P5062
    goto if350_end716
  if350_else715:
    null $P5063
    set $P5064, $P5063
  if350_end716:
    unless_null $P5064, vivi_351717
    nqp_get_sc_object $P5065, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5064, $P5065
  vivi_351717:
    unless_null $P5064, vivi_352718
    die "Contextual $*EXPORT not found"
    box $P5066, "Contextual $*EXPORT not found"
    set $P5064, $P5066
  vivi_352718:
    set $P107, $P5064
  fallback714:
    repr_bind_attr_int rx307_cur, rx307_curclass, "$!pos", rx307_pos
    store_lex unicode:"$\x{a2}", rx307_cur
    $P5067 = $P108."MATCH"()
    set $P109, $P5067
    .const 'Sub' $P5068 = 'cuid_401_1361734139.417' 
    capture_lex $P5068
    $P5069 = $P5068()
    repr_bind_attr_int rx307_cur, rx307_curclass, "$!pos", rx307_pos
    store_lex unicode:"$\x{a2}", rx307_cur
    $P5070 = $P108."MATCH"()
    set $P109, $P5070
    .const 'Sub' $P5071 = 'cuid_402_1361734139.417' 
    capture_lex $P5071
    $P5072 = $P5071()
    repr_bind_attr_int rx307_cur, rx307_curclass, "$!pos", rx307_pos
    $P11 = rx307_cur."outerctx"()
    repr_get_attr_int $I11, $P11, rx307_curclass, "$!pos"
    lt $I11, 0, rx307_fail639
    repr_get_attr_int rx307_pos, $P11, rx307_curclass, "$!pos"
    repr_bind_attr_int rx307_cur, rx307_curclass, "$!pos", rx307_pos
    $P11 = rx307_cur."statementlist"()
    repr_get_attr_int $I11, $P11, rx307_curclass, "$!pos"
    lt $I11, 0, rx307_fail639
    nqp_rxmark rx307_bstack, rxsubrule399_pass794, -1, 0
  rxsubrule399_pass794:
    rx307_cstack = rx307_cur."!cursor_capture"($P11, "statementlist")
    repr_get_attr_int rx307_pos, $P11, rx307_curclass, "$!pos"
  alt400_0796:
    nqp_rxmark rx307_bstack, alt400_1798, rx307_pos, 0
    lt rx307_pos, rx307_eos, rx307_fail639
    goto alt400_end795
  alt400_1798:
    repr_bind_attr_int rx307_cur, rx307_curclass, "$!pos", rx307_pos
    $P11 = rx307_cur."panic"("Confused")
    repr_get_attr_int $I11, $P11, rx307_curclass, "$!pos"
    lt $I11, 0, rx307_fail639
    repr_get_attr_int rx307_pos, $P11, rx307_curclass, "$!pos"
  alt400_end795:
    rx307_cur."!cursor_pass"(rx307_pos, "comp_unit", 'backtrack'=>1)
    .return (rx307_cur)
  rx307_restart638:
    repr_get_attr_obj rx307_cstack, rx307_cur, rx307_curclass, "$!cstack"
  rx307_fail639:
    unless rx307_bstack, rx307_done637
    pop $I19, rx307_bstack
    if_null rx307_cstack, rx307_cstack_done642
    unless rx307_cstack, rx307_cstack_done642
    dec $I19
    set $P11, rx307_cstack[$I19]
  rx307_cstack_done642:
    pop rx307_rep, rx307_bstack
    pop rx307_pos, rx307_bstack
    pop $I19, rx307_bstack
    lt rx307_pos, -1, rx307_done637
    lt rx307_pos, 0, rx307_fail639
    eq $I19, 0, rx307_fail639
    nqp_islist $I20, rx307_cstack
    unless $I20, rx307_jump640
    elements $I18, rx307_bstack
    le $I18, 0, rx307_cut641
    dec $I18
    set $I18, rx307_bstack[$I18]
  rx307_cut641:
    assign rx307_cstack, $I18
  rx307_jump640:
    jump $I19
  rx307_done637:
    rx307_cur."!cursor_fail"()
    .return (rx307_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_398_1361734139.417") :anon :lex :outer("cuid_45_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 748
    .local pmc fb_tmp_72 
    .local pmc fb_tmp_73 
    .local pmc fb_tmp_74 
    .local pmc fb_tmp_75 
    .local pmc fb_tmp_76 
.annotate 'line', 749
    find_dynamic_lex $P5002, "$*GLOBALish"
    unless_null $P5002, fallback669
    nqp_get_sc_object $P5004, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5003, $P5004
    set fb_tmp_72, $P5003
    repr_defined $I5001, fb_tmp_72
    unless $I5001 goto if323_else670 
    set $P5005, fb_tmp_72["$GLOBALish"]
    set $P5007, $P5005
    goto if323_end671
  if323_else670:
    null $P5006
    set $P5007, $P5006
  if323_end671:
    unless_null $P5007, vivi_324672
    nqp_get_sc_object $P5008, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5007, $P5008
  vivi_324672:
    unless_null $P5007, vivi_325673
    die "Contextual $*GLOBALish not found"
    box $P5009, "Contextual $*GLOBALish not found"
    set $P5007, $P5009
  vivi_325673:
    set $P5002, $P5007
  fallback669:
    get_how $P5001, $P5002
    find_dynamic_lex $P5010, "$*GLOBALish"
    unless_null $P5010, fallback674
    nqp_get_sc_object $P5012, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5011, $P5012
    set fb_tmp_73, $P5011
    repr_defined $I5002, fb_tmp_73
    unless $I5002 goto if326_else675 
    set $P5013, fb_tmp_73["$GLOBALish"]
    set $P5015, $P5013
    goto if326_end676
  if326_else675:
    null $P5014
    set $P5015, $P5014
  if326_end676:
    unless_null $P5015, vivi_327677
    nqp_get_sc_object $P5016, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5015, $P5016
  vivi_327677:
    unless_null $P5015, vivi_328678
    die "Contextual $*GLOBALish not found"
    box $P5017, "Contextual $*GLOBALish not found"
    set $P5015, $P5017
  vivi_328678:
    set $P5010, $P5015
  fallback674:
    $P5001."compose"($P5010)
.annotate 'line', 750
    find_dynamic_lex $P5018, "$*W"
    unless_null $P5018, fallback679
    nqp_get_sc_object $P5020, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5019, $P5020
    set fb_tmp_74, $P5019
    repr_defined $I5003, fb_tmp_74
    unless $I5003 goto if329_else680 
    set $P5021, fb_tmp_74["$W"]
    set $P5023, $P5021
    goto if329_end681
  if329_else680:
    null $P5022
    set $P5023, $P5022
  if329_end681:
    unless_null $P5023, vivi_330682
    nqp_get_sc_object $P5024, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5023, $P5024
  vivi_330682:
    unless_null $P5023, vivi_331683
    die "Contextual $*W not found"
    box $P5025, "Contextual $*W not found"
    set $P5023, $P5025
  vivi_331683:
    set $P5018, $P5023
  fallback679:
    find_dynamic_lex $P5026, "$*UNIT"
    unless_null $P5026, fallback684
    nqp_get_sc_object $P5028, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5027, $P5028
    set fb_tmp_75, $P5027
    repr_defined $I5004, fb_tmp_75
    unless $I5004 goto if332_else685 
    set $P5029, fb_tmp_75["$UNIT"]
    set $P5031, $P5029
    goto if332_end686
  if332_else685:
    null $P5030
    set $P5031, $P5030
  if332_end686:
    unless_null $P5031, vivi_333687
    nqp_get_sc_object $P5032, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5031, $P5032
  vivi_333687:
    unless_null $P5031, vivi_334688
    die "Contextual $*UNIT not found"
    box $P5033, "Contextual $*UNIT not found"
    set $P5031, $P5033
  vivi_334688:
    set $P5026, $P5031
  fallback684:
    find_dynamic_lex $P5034, "$*GLOBALish"
    unless_null $P5034, fallback689
    nqp_get_sc_object $P5036, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5035, $P5036
    set fb_tmp_76, $P5035
    repr_defined $I5005, fb_tmp_76
    unless $I5005 goto if335_else690 
    set $P5037, fb_tmp_76["$GLOBALish"]
    set $P5039, $P5037
    goto if335_end691
  if335_else690:
    null $P5038
    set $P5039, $P5038
  if335_end691:
    unless_null $P5039, vivi_336692
    nqp_get_sc_object $P5040, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5039, $P5040
  vivi_336692:
    unless_null $P5039, vivi_337693
    die "Contextual $*GLOBALish not found"
    box $P5041, "Contextual $*GLOBALish not found"
    set $P5039, $P5041
  vivi_337693:
    set $P5034, $P5039
  fallback689:
    $P5042 = $P5018."install_lexical_symbol"($P5026, "GLOBALish", $P5034)
    .return ($P5042) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_399_1361734139.417") :anon :lex :outer("cuid_45_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 755
    .local pmc fb_tmp_78 
    .local pmc fb_tmp_79 
    .local pmc fb_tmp_80 
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback699
    nqp_get_sc_object $P5003, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5002, $P5003
    set fb_tmp_78, $P5002
    repr_defined $I5001, fb_tmp_78
    unless $I5001 goto if341_else700 
    set $P5004, fb_tmp_78["$W"]
    set $P5006, $P5004
    goto if341_end701
  if341_else700:
    null $P5005
    set $P5006, $P5005
  if341_end701:
    unless_null $P5006, vivi_342702
    nqp_get_sc_object $P5007, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5006, $P5007
  vivi_342702:
    unless_null $P5006, vivi_343703
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_343703:
    set $P5001, $P5006
  fallback699:
    find_dynamic_lex $P5009, "$*UNIT"
    unless_null $P5009, fallback704
    nqp_get_sc_object $P5011, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5010, $P5011
    set fb_tmp_79, $P5010
    repr_defined $I5002, fb_tmp_79
    unless $I5002 goto if344_else705 
    set $P5012, fb_tmp_79["$UNIT"]
    set $P5014, $P5012
    goto if344_end706
  if344_else705:
    null $P5013
    set $P5014, $P5013
  if344_end706:
    unless_null $P5014, vivi_345707
    nqp_get_sc_object $P5015, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5014, $P5015
  vivi_345707:
    unless_null $P5014, vivi_346708
    die "Contextual $*UNIT not found"
    box $P5016, "Contextual $*UNIT not found"
    set $P5014, $P5016
  vivi_346708:
    set $P5009, $P5014
  fallback704:
    find_dynamic_lex $P5017, "$*PACKAGE"
    unless_null $P5017, fallback709
    nqp_get_sc_object $P5019, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5018, $P5019
    set fb_tmp_80, $P5018
    repr_defined $I5003, fb_tmp_80
    unless $I5003 goto if347_else710 
    set $P5020, fb_tmp_80["$PACKAGE"]
    set $P5022, $P5020
    goto if347_end711
  if347_else710:
    null $P5021
    set $P5022, $P5021
  if347_end711:
    unless_null $P5022, vivi_348712
    nqp_get_sc_object $P5023, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5022, $P5023
  vivi_348712:
    unless_null $P5022, vivi_349713
    die "Contextual $*PACKAGE not found"
    box $P5024, "Contextual $*PACKAGE not found"
    set $P5022, $P5024
  vivi_349713:
    set $P5017, $P5022
  fallback709:
    $P5025 = $P5001."install_lexical_symbol"($P5009, "$?PACKAGE", $P5017)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_401_1361734139.417") :anon :lex :outer("cuid_45_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 759
    .const 'Sub' $P5021 = 'cuid_400_1361734139.417' 
    capture_lex $P5021 
    .local pmc fb_tmp_82 
    .local pmc fb_tmp_83 
    .local pmc fb_tmp_84 
    .local pmc pkg_viv_tmp_18 
    find_dynamic_lex $P5001, "%*COMPILING"
    unless_null $P5001, fallback725
    nqp_get_sc_object $P5003, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_18, $P5002
    set fb_tmp_84, pkg_viv_tmp_18
    repr_defined $I5004, fb_tmp_84
    unless $I5004 goto if356_else726 
    set $P5004, fb_tmp_84["%COMPILING"]
    set $P5006, $P5004
    goto if356_end727
  if356_else726:
    null $P5005
    set $P5006, $P5005
  if356_end727:
    unless_null $P5006, vivi_357728
    new $P5007, 'Hash'
    set pkg_viv_tmp_18["%COMPILING"], $P5007
    set $P5006, $P5007
  vivi_357728:
    unless_null $P5006, vivi_358729
    die "Contextual %*COMPILING not found"
    box $P5008, "Contextual %*COMPILING not found"
    set $P5006, $P5008
  vivi_358729:
    set $P5001, $P5006
  fallback725:
    set fb_tmp_83, $P5001
    repr_defined $I5003, fb_tmp_83
    unless $I5003 goto if355_else723 
    set $P5009, fb_tmp_83["%?OPTIONS"]
    set $P5011, $P5009
    goto if355_end724
  if355_else723:
    null $P5010
    set $P5011, $P5010
  if355_end724:
    unless_null $P5011, vivi_359730
    nqp_get_sc_object $P5012, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5011, $P5012
  vivi_359730:
    set fb_tmp_82, $P5011
    repr_defined $I5002, fb_tmp_82
    unless $I5002 goto if354_else721 
    set $P5013, fb_tmp_82["setting"]
    set $P5015, $P5013
    goto if354_end722
  if354_else721:
    null $P5014
    set $P5015, $P5014
  if354_end722:
    unless_null $P5015, vivi_360731
    nqp_get_sc_object $P5016, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5015, $P5016
  vivi_360731:
    set $S5001, $P5015
    iseq $I5001, $S5001, "NULL"
    box $P5020, $I5001
    set $P5019, $P5020
    if $I5001 goto unless353_end720 
    .const 'Sub' $P5017 = 'cuid_400_1361734139.417' 
    capture_lex $P5017
    $P5018 = $P5017()
    set $P5019, $P5018
  unless353_end720:
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_400_1361734139.417") :anon :lex :outer("cuid_401_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 760
    .lex "$DEFAULT", $P101 
    .local pmc fb_tmp_85 
    .local pmc fb_tmp_86 
    .local pmc fb_tmp_87 
    .local pmc pkg_viv_tmp_19 
    .local pmc fb_tmp_88 
    .local pmc fb_tmp_89 
    .local pmc fb_tmp_90 
    .local pmc fb_tmp_91 
    .local pmc fb_tmp_92 
    .local pmc fb_tmp_93 
    .local pmc fb_tmp_94 
    .local pmc fb_tmp_95 
    .local pmc pkg_viv_tmp_20 
    .local pmc fb_tmp_96 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
.annotate 'line', 761
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback732
    nqp_get_sc_object $P5004, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5003, $P5004
    set fb_tmp_85, $P5003
    repr_defined $I5001, fb_tmp_85
    unless $I5001 goto if361_else733 
    set $P5005, fb_tmp_85["$W"]
    set $P5007, $P5005
    goto if361_end734
  if361_else733:
    null $P5006
    set $P5007, $P5006
  if361_end734:
    unless_null $P5007, vivi_362735
    nqp_get_sc_object $P5008, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5007, $P5008
  vivi_362735:
    unless_null $P5007, vivi_363736
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_363736:
    set $P5002, $P5007
  fallback732:
    find_dynamic_lex $P5010, "%*HOW"
    unless_null $P5010, fallback739
    nqp_get_sc_object $P5012, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5011, $P5012
    set pkg_viv_tmp_19, $P5011
    set fb_tmp_87, pkg_viv_tmp_19
    repr_defined $I5003, fb_tmp_87
    unless $I5003 goto if365_else740 
    set $P5013, fb_tmp_87["%HOW"]
    set $P5015, $P5013
    goto if365_end741
  if365_else740:
    null $P5014
    set $P5015, $P5014
  if365_end741:
    unless_null $P5015, vivi_366742
    new $P5016, 'Hash'
    set pkg_viv_tmp_19["%HOW"], $P5016
    set $P5015, $P5016
  vivi_366742:
    unless_null $P5015, vivi_367743
    die "Contextual %*HOW not found"
    box $P5017, "Contextual %*HOW not found"
    set $P5015, $P5017
  vivi_367743:
    set $P5010, $P5015
  fallback739:
    set fb_tmp_86, $P5010
    repr_defined $I5002, fb_tmp_86
    unless $I5002 goto if364_else737 
    set $P5018, fb_tmp_86["knowhow"]
    set $P5020, $P5018
    goto if364_end738
  if364_else737:
    null $P5019
    set $P5020, $P5019
  if364_end738:
    unless_null $P5020, vivi_368744
    nqp_get_sc_object $P5021, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5020, $P5021
  vivi_368744:
    $P5022 = $P5002."pkg_create_mo"($P5020, "EXPORT" :named("name"))
    store_dynamic_lex "$*EXPORT", $P5022
.annotate 'line', 762
    find_dynamic_lex $P5024, "$*EXPORT"
    unless_null $P5024, fallback745
    nqp_get_sc_object $P5026, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5025, $P5026
    set fb_tmp_88, $P5025
    repr_defined $I5004, fb_tmp_88
    unless $I5004 goto if369_else746 
    set $P5027, fb_tmp_88["$EXPORT"]
    set $P5029, $P5027
    goto if369_end747
  if369_else746:
    null $P5028
    set $P5029, $P5028
  if369_end747:
    unless_null $P5029, vivi_370748
    nqp_get_sc_object $P5030, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5029, $P5030
  vivi_370748:
    unless_null $P5029, vivi_371749
    die "Contextual $*EXPORT not found"
    box $P5031, "Contextual $*EXPORT not found"
    set $P5029, $P5031
  vivi_371749:
    set $P5024, $P5029
  fallback745:
    get_how $P5023, $P5024
    find_dynamic_lex $P5032, "$*EXPORT"
    unless_null $P5032, fallback750
    nqp_get_sc_object $P5034, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5033, $P5034
    set fb_tmp_89, $P5033
    repr_defined $I5005, fb_tmp_89
    unless $I5005 goto if372_else751 
    set $P5035, fb_tmp_89["$EXPORT"]
    set $P5037, $P5035
    goto if372_end752
  if372_else751:
    null $P5036
    set $P5037, $P5036
  if372_end752:
    unless_null $P5037, vivi_373753
    nqp_get_sc_object $P5038, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5037, $P5038
  vivi_373753:
    unless_null $P5037, vivi_374754
    die "Contextual $*EXPORT not found"
    box $P5039, "Contextual $*EXPORT not found"
    set $P5037, $P5039
  vivi_374754:
    set $P5032, $P5037
  fallback750:
    $P5023."compose"($P5032)
.annotate 'line', 763
    find_dynamic_lex $P5040, "$*W"
    unless_null $P5040, fallback755
    nqp_get_sc_object $P5042, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5041, $P5042
    set fb_tmp_90, $P5041
    repr_defined $I5006, fb_tmp_90
    unless $I5006 goto if375_else756 
    set $P5043, fb_tmp_90["$W"]
    set $P5045, $P5043
    goto if375_end757
  if375_else756:
    null $P5044
    set $P5045, $P5044
  if375_end757:
    unless_null $P5045, vivi_376758
    nqp_get_sc_object $P5046, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5045, $P5046
  vivi_376758:
    unless_null $P5045, vivi_377759
    die "Contextual $*W not found"
    box $P5047, "Contextual $*W not found"
    set $P5045, $P5047
  vivi_377759:
    set $P5040, $P5045
  fallback755:
    find_dynamic_lex $P5048, "$*UNIT"
    unless_null $P5048, fallback760
    nqp_get_sc_object $P5050, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5049, $P5050
    set fb_tmp_91, $P5049
    repr_defined $I5007, fb_tmp_91
    unless $I5007 goto if378_else761 
    set $P5051, fb_tmp_91["$UNIT"]
    set $P5053, $P5051
    goto if378_end762
  if378_else761:
    null $P5052
    set $P5053, $P5052
  if378_end762:
    unless_null $P5053, vivi_379763
    nqp_get_sc_object $P5054, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5053, $P5054
  vivi_379763:
    unless_null $P5053, vivi_380764
    die "Contextual $*UNIT not found"
    box $P5055, "Contextual $*UNIT not found"
    set $P5053, $P5055
  vivi_380764:
    set $P5048, $P5053
  fallback760:
    find_dynamic_lex $P5056, "$*EXPORT"
    unless_null $P5056, fallback765
    nqp_get_sc_object $P5058, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5057, $P5058
    set fb_tmp_92, $P5057
    repr_defined $I5008, fb_tmp_92
    unless $I5008 goto if381_else766 
    set $P5059, fb_tmp_92["$EXPORT"]
    set $P5061, $P5059
    goto if381_end767
  if381_else766:
    null $P5060
    set $P5061, $P5060
  if381_end767:
    unless_null $P5061, vivi_382768
    nqp_get_sc_object $P5062, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5061, $P5062
  vivi_382768:
    unless_null $P5061, vivi_383769
    die "Contextual $*EXPORT not found"
    box $P5063, "Contextual $*EXPORT not found"
    set $P5061, $P5063
  vivi_383769:
    set $P5056, $P5061
  fallback765:
    $P5040."install_lexical_symbol"($P5048, "EXPORT", $P5056)
.annotate 'line', 764
    find_dynamic_lex $P5064, "$*W"
    unless_null $P5064, fallback770
    nqp_get_sc_object $P5066, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5065, $P5066
    set fb_tmp_93, $P5065
    repr_defined $I5009, fb_tmp_93
    unless $I5009 goto if384_else771 
    set $P5067, fb_tmp_93["$W"]
    set $P5069, $P5067
    goto if384_end772
  if384_else771:
    null $P5068
    set $P5069, $P5068
  if384_end772:
    unless_null $P5069, vivi_385773
    nqp_get_sc_object $P5070, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5069, $P5070
  vivi_385773:
    unless_null $P5069, vivi_386774
    die "Contextual $*W not found"
    box $P5071, "Contextual $*W not found"
    set $P5069, $P5071
  vivi_386774:
    set $P5064, $P5069
  fallback770:
    find_dynamic_lex $P5072, "%*HOW"
    unless_null $P5072, fallback777
    nqp_get_sc_object $P5074, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5073, $P5074
    set pkg_viv_tmp_20, $P5073
    set fb_tmp_95, pkg_viv_tmp_20
    repr_defined $I5011, fb_tmp_95
    unless $I5011 goto if388_else778 
    set $P5075, fb_tmp_95["%HOW"]
    set $P5077, $P5075
    goto if388_end779
  if388_else778:
    null $P5076
    set $P5077, $P5076
  if388_end779:
    unless_null $P5077, vivi_389780
    new $P5078, 'Hash'
    set pkg_viv_tmp_20["%HOW"], $P5078
    set $P5077, $P5078
  vivi_389780:
    unless_null $P5077, vivi_390781
    die "Contextual %*HOW not found"
    box $P5079, "Contextual %*HOW not found"
    set $P5077, $P5079
  vivi_390781:
    set $P5072, $P5077
  fallback777:
    set fb_tmp_94, $P5072
    repr_defined $I5010, fb_tmp_94
    unless $I5010 goto if387_else775 
    set $P5080, fb_tmp_94["knowhow"]
    set $P5082, $P5080
    goto if387_end776
  if387_else775:
    null $P5081
    set $P5082, $P5081
  if387_end776:
    unless_null $P5082, vivi_391782
    nqp_get_sc_object $P5083, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5082, $P5083
  vivi_391782:
    $P5084 = $P5064."pkg_create_mo"($P5082, "DEFAULT" :named("name"))
    set $P101, $P5084
.annotate 'line', 765
    get_how $P5085, $P101
    $P5085."compose"($P101)
    find_dynamic_lex $P5087, "$*EXPORT"
    unless_null $P5087, fallback783
    nqp_get_sc_object $P5089, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5088, $P5089
    set fb_tmp_96, $P5088
    repr_defined $I5012, fb_tmp_96
    unless $I5012 goto if392_else784 
    set $P5090, fb_tmp_96["$EXPORT"]
    set $P5092, $P5090
    goto if392_end785
  if392_else784:
    null $P5091
    set $P5092, $P5091
  if392_end785:
    unless_null $P5092, vivi_393786
    nqp_get_sc_object $P5093, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5092, $P5093
  vivi_393786:
    unless_null $P5092, vivi_394787
    die "Contextual $*EXPORT not found"
    box $P5094, "Contextual $*EXPORT not found"
    set $P5092, $P5094
  vivi_394787:
    set $P5087, $P5092
  fallback783:
    get_who $P5086, $P5087
    set $P5086["DEFAULT"], $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_402_1361734139.417") :anon :lex :outer("cuid_45_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 770
    .local pmc fb_tmp_97 
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback788
    nqp_get_sc_object $P5003, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5002, $P5003
    set fb_tmp_97, $P5002
    repr_defined $I5001, fb_tmp_97
    unless $I5001 goto if395_else789 
    set $P5004, fb_tmp_97["$W"]
    set $P5006, $P5004
    goto if395_end790
  if395_else789:
    null $P5005
    set $P5006, $P5005
  if395_end790:
    unless_null $P5006, vivi_396791
    nqp_get_sc_object $P5007, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5006, $P5007
  vivi_396791:
    unless_null $P5006, vivi_397792
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_397792:
    set $P5001, $P5006
  fallback788:
    $P5009 = $P5001."add_initializations"()
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "statementlist" :subid("cuid_46_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 778
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx403_start
    .local string rx403_tgt
    .local int rx403_pos
    .local int rx403_off
    .local int rx403_eos
    .local int rx403_rep
    .local pmc rx403_cur
    .local pmc rx403_curclass
    .local pmc rx403_bstack
    .local pmc rx403_cstack
    rx403_start = self."!cursor_start_all"()
    set rx403_cur, rx403_start[0]
    set rx403_tgt, rx403_start[1]
    set rx403_pos, rx403_start[2]
    set rx403_curclass, rx403_start[3]
    set rx403_bstack, rx403_start[4]
    set $I19, rx403_start[5]
    store_lex unicode:"$\x{a2}", rx403_cur
    length rx403_eos, rx403_tgt
    eq $I19, 1, rx403_restart802
    gt rx403_pos, rx403_eos, rx403_fail803
    repr_get_attr_int $I11, self, rx403_curclass, "$!from"
    ne $I11, -1, rxscan404_done809
    goto rxscan404_scan808
  rxscan404_loop807:
    inc rx403_pos
    gt rx403_pos, rx403_eos, rx403_fail803
    repr_bind_attr_int rx403_cur, rx403_curclass, "$!from", rx403_pos
  rxscan404_scan808:
    nqp_rxmark rx403_bstack, rxscan404_loop807, rx403_pos, 0
  rxscan404_done809:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt405_0811
    nqp_push_label $P11, alt405_1815
    nqp_rxmark rx403_bstack, alt405_end810, -1, 0
    rx403_cur."!alt"(rx403_pos, "alt_nfa__7_1361734140.949", $P11)
    goto rx403_fail803
  alt405_0811:
    repr_bind_attr_int rx403_cur, rx403_curclass, "$!pos", rx403_pos
    $P11 = rx403_cur."ws"()
    repr_get_attr_int $I11, $P11, rx403_curclass, "$!pos"
    lt $I11, 0, rx403_fail803
    repr_get_attr_int rx403_pos, $P11, rx403_curclass, "$!pos"
    lt rx403_pos, rx403_eos, rx403_fail803
    repr_bind_attr_int rx403_cur, rx403_curclass, "$!pos", rx403_pos
    $P11 = rx403_cur."ws"()
    repr_get_attr_int $I11, $P11, rx403_curclass, "$!pos"
    lt $I11, 0, rx403_fail803
    repr_get_attr_int rx403_pos, $P11, rx403_curclass, "$!pos"
    goto alt405_end810
  alt405_1815:
    repr_bind_attr_int rx403_cur, rx403_curclass, "$!pos", rx403_pos
    $P11 = rx403_cur."ws"()
    repr_get_attr_int $I11, $P11, rx403_curclass, "$!pos"
    lt $I11, 0, rx403_fail803
    repr_get_attr_int rx403_pos, $P11, rx403_curclass, "$!pos"
    nqp_rxmark rx403_bstack, rxquantr410_done818, rx403_pos, 0
  rxquantr410_loop817:
    repr_bind_attr_int rx403_cur, rx403_curclass, "$!pos", rx403_pos
    $P11 = rx403_cur."statement"()
    repr_get_attr_int $I11, $P11, rx403_curclass, "$!pos"
    lt $I11, 0, rx403_fail803
    nqp_rxmark rx403_bstack, rxsubrule411_pass819, -1, 0
  rxsubrule411_pass819:
    rx403_cstack = rx403_cur."!cursor_capture"($P11, "statement")
    repr_get_attr_int rx403_pos, $P11, rx403_curclass, "$!pos"
    repr_bind_attr_int rx403_cur, rx403_curclass, "$!pos", rx403_pos
    $P11 = rx403_cur."eat_terminator"()
    repr_get_attr_int $I11, $P11, rx403_curclass, "$!pos"
    lt $I11, 0, rx403_fail803
    repr_get_attr_int rx403_pos, $P11, rx403_curclass, "$!pos"
    repr_bind_attr_int rx403_cur, rx403_curclass, "$!pos", rx403_pos
    $P11 = rx403_cur."ws"()
    repr_get_attr_int $I11, $P11, rx403_curclass, "$!pos"
    lt $I11, 0, rx403_fail803
    repr_get_attr_int rx403_pos, $P11, rx403_curclass, "$!pos"
    nqp_rxpeek $I19, rx403_bstack, rxquantr410_done818
    inc $I19
    inc $I19
    set rx403_rep, rx403_bstack[$I19]
    nqp_rxcommit rx403_bstack, rxquantr410_done818
    inc rx403_rep
    nqp_rxmark rx403_bstack, rxquantr410_done818, rx403_pos, rx403_rep
    goto rxquantr410_loop817
  rxquantr410_done818:
    repr_bind_attr_int rx403_cur, rx403_curclass, "$!pos", rx403_pos
    $P11 = rx403_cur."ws"()
    repr_get_attr_int $I11, $P11, rx403_curclass, "$!pos"
    lt $I11, 0, rx403_fail803
    repr_get_attr_int rx403_pos, $P11, rx403_curclass, "$!pos"
    goto alt405_end810
  alt405_end810:
    rx403_cur."!cursor_pass"(rx403_pos, "statementlist", 'backtrack'=>1)
    .return (rx403_cur)
  rx403_restart802:
    repr_get_attr_obj rx403_cstack, rx403_cur, rx403_curclass, "$!cstack"
  rx403_fail803:
    unless rx403_bstack, rx403_done801
    pop $I19, rx403_bstack
    if_null rx403_cstack, rx403_cstack_done806
    unless rx403_cstack, rx403_cstack_done806
    dec $I19
    set $P11, rx403_cstack[$I19]
  rx403_cstack_done806:
    pop rx403_rep, rx403_bstack
    pop rx403_pos, rx403_bstack
    pop $I19, rx403_bstack
    lt rx403_pos, -1, rx403_done801
    lt rx403_pos, 0, rx403_fail803
    eq $I19, 0, rx403_fail803
    nqp_islist $I20, rx403_cstack
    unless $I20, rx403_jump804
    elements $I18, rx403_bstack
    le $I18, 0, rx403_cut805
    dec $I18
    set $I18, rx403_bstack[$I18]
  rx403_cut805:
    assign rx403_cstack, $I18
  rx403_jump804:
    jump $I19
  rx403_done801:
    rx403_cur."!cursor_fail"()
    .return (rx403_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement" :subid("cuid_47_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 783
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_48_1361734139.417' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx415_start
    .local string rx415_tgt
    .local int rx415_pos
    .local int rx415_off
    .local int rx415_eos
    .local int rx415_rep
    .local pmc rx415_cur
    .local pmc rx415_curclass
    .local pmc rx415_bstack
    .local pmc rx415_cstack
    rx415_start = self."!cursor_start_all"()
    set rx415_cur, rx415_start[0]
    set rx415_tgt, rx415_start[1]
    set rx415_pos, rx415_start[2]
    set rx415_curclass, rx415_start[3]
    set rx415_bstack, rx415_start[4]
    set $I19, rx415_start[5]
    store_lex unicode:"$\x{a2}", rx415_cur
    length rx415_eos, rx415_tgt
    eq $I19, 1, rx415_restart825
    gt rx415_pos, rx415_eos, rx415_fail826
    repr_get_attr_int $I11, self, rx415_curclass, "$!from"
    ne $I11, -1, rxscan416_done832
    goto rxscan416_scan831
  rxscan416_loop830:
    inc rx415_pos
    gt rx415_pos, rx415_eos, rx415_fail826
    repr_bind_attr_int rx415_cur, rx415_curclass, "$!from", rx415_pos
  rxscan416_scan831:
    nqp_rxmark rx415_bstack, rxscan416_loop830, rx415_pos, 0
  rxscan416_done832:
    .const 'Sub' $P5001 = 'cuid_48_1361734139.417' 
    capture_lex $P5001
    repr_bind_attr_int rx415_cur, rx415_curclass, "$!pos", rx415_pos
    $P11 = rx415_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx415_curclass, "$!pos"
    ge $I11, 0, rx415_fail826
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt422_0851
    nqp_push_label $P11, alt422_1853
    nqp_rxmark rx415_bstack, alt422_end850, -1, 0
    rx415_cur."!alt"(rx415_pos, "alt_nfa__9_1361734140.97", $P11)
    goto rx415_fail826
  alt422_0851:
    repr_bind_attr_int rx415_cur, rx415_curclass, "$!pos", rx415_pos
    $P11 = rx415_cur."statement_control"()
    repr_get_attr_int $I11, $P11, rx415_curclass, "$!pos"
    lt $I11, 0, rx415_fail826
    nqp_rxmark rx415_bstack, rxsubrule423_pass852, -1, 0
  rxsubrule423_pass852:
    rx415_cstack = rx415_cur."!cursor_capture"($P11, "statement_control")
    repr_get_attr_int rx415_pos, $P11, rx415_curclass, "$!pos"
    goto alt422_end850
  alt422_1853:
    repr_bind_attr_int rx415_cur, rx415_curclass, "$!pos", rx415_pos
    $P11 = rx415_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx415_curclass, "$!pos"
    lt $I11, 0, rx415_fail826
    nqp_rxmark rx415_bstack, rxsubrule424_pass854, -1, 0
  rxsubrule424_pass854:
    rx415_cstack = rx415_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx415_pos, $P11, rx415_curclass, "$!pos"
    repr_bind_attr_int rx415_cur, rx415_curclass, "$!pos", rx415_pos
    $P11 = rx415_cur."ws"()
    repr_get_attr_int $I11, $P11, rx415_curclass, "$!pos"
    lt $I11, 0, rx415_fail826
    repr_get_attr_int rx415_pos, $P11, rx415_curclass, "$!pos"
    nqp_rxmark rx415_bstack, rxquantr426_done857, rx415_pos, 0
  rxquantr426_loop856:
  alt427_0859:
    nqp_rxmark rx415_bstack, alt427_1860, rx415_pos, 0
    repr_bind_attr_int rx415_cur, rx415_curclass, "$!pos", rx415_pos
    $P11 = rx415_cur."MARKED"("endstmt")
    repr_get_attr_int $I11, $P11, rx415_curclass, "$!pos"
    lt $I11, 0, rx415_fail826
    goto alt427_end858
  alt427_1860:
    nqp_rxmark rx415_bstack, alt427_2866, rx415_pos, 0
    repr_bind_attr_int rx415_cur, rx415_curclass, "$!pos", rx415_pos
    $P11 = rx415_cur."statement_mod_cond"()
    repr_get_attr_int $I11, $P11, rx415_curclass, "$!pos"
    lt $I11, 0, rx415_fail826
    nqp_rxmark rx415_bstack, rxsubrule428_pass861, -1, 0
  rxsubrule428_pass861:
    rx415_cstack = rx415_cur."!cursor_capture"($P11, "statement_mod_cond")
    repr_get_attr_int rx415_pos, $P11, rx415_curclass, "$!pos"
    nqp_rxmark rx415_bstack, rxquantr429_done863, rx415_pos, 0
  rxquantr429_loop862:
    repr_bind_attr_int rx415_cur, rx415_curclass, "$!pos", rx415_pos
    $P11 = rx415_cur."statement_mod_loop"()
    repr_get_attr_int $I11, $P11, rx415_curclass, "$!pos"
    lt $I11, 0, rx415_fail826
    goto rxsubrule430_pass864
  rxsubrule430_back865:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx415_curclass, "$!pos"
    lt $I11, 0, rx415_fail826
  rxsubrule430_pass864:
    rx415_cstack = rx415_cur."!cursor_capture"($P11, "statement_mod_loop")
    set_addr $I11, rxsubrule430_back865
    push rx415_bstack, $I11
    push rx415_bstack, 0
    push rx415_bstack, rx415_pos
    elements $I11, rx415_cstack
    push rx415_bstack, $I11
    repr_get_attr_int rx415_pos, $P11, rx415_curclass, "$!pos"
    nqp_rxpeek $I19, rx415_bstack, rxquantr429_done863
    inc $I19
    inc $I19
    set rx415_rep, rx415_bstack[$I19]
    nqp_rxcommit rx415_bstack, rxquantr429_done863
    inc rx415_rep
  rxquantr429_done863:
    goto alt427_end858
  alt427_2866:
    repr_bind_attr_int rx415_cur, rx415_curclass, "$!pos", rx415_pos
    $P11 = rx415_cur."statement_mod_loop"()
    repr_get_attr_int $I11, $P11, rx415_curclass, "$!pos"
    lt $I11, 0, rx415_fail826
    nqp_rxmark rx415_bstack, rxsubrule431_pass867, -1, 0
  rxsubrule431_pass867:
    rx415_cstack = rx415_cur."!cursor_capture"($P11, "statement_mod_loop")
    repr_get_attr_int rx415_pos, $P11, rx415_curclass, "$!pos"
  alt427_end858:
    nqp_rxpeek $I19, rx415_bstack, rxquantr426_done857
    inc $I19
    inc $I19
    set rx415_rep, rx415_bstack[$I19]
    nqp_rxcommit rx415_bstack, rxquantr426_done857
    inc rx415_rep
  rxquantr426_done857:
    goto alt422_end850
  alt422_end850:
    nqp_rxcommit rx415_bstack, alt422_end850
    rx415_cur."!cursor_pass"(rx415_pos, "statement", 'backtrack'=>1)
    .return (rx415_cur)
  rx415_restart825:
    repr_get_attr_obj rx415_cstack, rx415_cur, rx415_curclass, "$!cstack"
  rx415_fail826:
    unless rx415_bstack, rx415_done824
    pop $I19, rx415_bstack
    if_null rx415_cstack, rx415_cstack_done829
    unless rx415_cstack, rx415_cstack_done829
    dec $I19
    set $P11, rx415_cstack[$I19]
  rx415_cstack_done829:
    pop rx415_rep, rx415_bstack
    pop rx415_pos, rx415_bstack
    pop $I19, rx415_bstack
    lt rx415_pos, -1, rx415_done824
    lt rx415_pos, 0, rx415_fail826
    eq $I19, 0, rx415_fail826
    nqp_islist $I20, rx415_cstack
    unless $I20, rx415_jump827
    elements $I18, rx415_bstack
    le $I18, 0, rx415_cut828
    dec $I18
    set $I18, rx415_bstack[$I18]
  rx415_cut828:
    assign rx415_cstack, $I18
  rx415_jump827:
    jump $I19
  rx415_done824:
    rx415_cur."!cursor_fail"()
    .return (rx415_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_48_1361734139.417") :anon :lex :outer("cuid_47_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx417_start
    .local string rx417_tgt
    .local int rx417_pos
    .local int rx417_off
    .local int rx417_eos
    .local int rx417_rep
    .local pmc rx417_cur
    .local pmc rx417_curclass
    .local pmc rx417_bstack
    .local pmc rx417_cstack
    rx417_start = self."!cursor_start_all"()
    set rx417_cur, rx417_start[0]
    set rx417_tgt, rx417_start[1]
    set rx417_pos, rx417_start[2]
    set rx417_curclass, rx417_start[3]
    set rx417_bstack, rx417_start[4]
    set $I19, rx417_start[5]
    store_lex unicode:"$\x{a2}", rx417_cur
    length rx417_eos, rx417_tgt
    eq $I19, 1, rx417_restart835
    gt rx417_pos, rx417_eos, rx417_fail836
    repr_get_attr_int $I11, self, rx417_curclass, "$!from"
    ne $I11, -1, rxscan418_done842
    goto rxscan418_scan841
  rxscan418_loop840:
    inc rx417_pos
    gt rx417_pos, rx417_eos, rx417_fail836
    repr_bind_attr_int rx417_cur, rx417_curclass, "$!from", rx417_pos
  rxscan418_scan841:
    nqp_rxmark rx417_bstack, rxscan418_loop840, rx417_pos, 0
  rxscan418_done842:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt419_0844
    nqp_push_label $P11, alt419_1848
    nqp_rxmark rx417_bstack, alt419_end843, -1, 0
    rx417_cur."!alt"(rx417_pos, "alt_nfa__8_1361734140.955", $P11)
    goto rx417_fail836
  alt419_0844:
  alt420_0846:
    nqp_rxmark rx417_bstack, alt420_1847, rx417_pos, 0
    add $I11, rx417_pos, 1
    gt $I11, rx417_eos, rx417_fail836
    substr $S10, rx417_tgt, rx417_pos, 1
    ne $S10, ucs4:"]", rx417_fail836
    add rx417_pos, 1
    goto alt420_end845
  alt420_1847:
    ge rx417_pos, rx417_eos, rx417_fail836
    substr $S11, rx417_tgt, rx417_pos, 1
    index $I11, ucs4:")}", $S11
    lt $I11, 0, rx417_fail836
    inc rx417_pos
  alt420_end845:
    goto alt419_end843
  alt419_1848:
    lt rx417_pos, rx417_eos, rx417_fail836
    goto alt419_end843
  alt419_end843:
    rx417_cur."!cursor_pass"(rx417_pos, 'backtrack'=>1)
    .return (rx417_cur)
  rx417_restart835:
    repr_get_attr_obj rx417_cstack, rx417_cur, rx417_curclass, "$!cstack"
  rx417_fail836:
    unless rx417_bstack, rx417_done834
    pop $I19, rx417_bstack
    if_null rx417_cstack, rx417_cstack_done839
    unless rx417_cstack, rx417_cstack_done839
    dec $I19
    set $P11, rx417_cstack[$I19]
  rx417_cstack_done839:
    pop rx417_rep, rx417_bstack
    pop rx417_pos, rx417_bstack
    pop $I19, rx417_bstack
    lt rx417_pos, -1, rx417_done834
    lt rx417_pos, 0, rx417_fail836
    eq $I19, 0, rx417_fail836
    nqp_islist $I20, rx417_cstack
    unless $I20, rx417_jump837
    elements $I18, rx417_bstack
    le $I18, 0, rx417_cut838
    dec $I18
    set $I18, rx417_bstack[$I18]
  rx417_cut838:
    assign rx417_cstack, $I18
  rx417_jump837:
    jump $I19
  rx417_done834:
    rx417_cur."!cursor_fail"()
    .return (rx417_cur) 
.end
.HLL "nqp"
.namespace []
.sub "eat_terminator" :subid("cuid_49_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 796
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx432_start
    .local string rx432_tgt
    .local int rx432_pos
    .local int rx432_off
    .local int rx432_eos
    .local int rx432_rep
    .local pmc rx432_cur
    .local pmc rx432_curclass
    .local pmc rx432_bstack
    .local pmc rx432_cstack
    rx432_start = self."!cursor_start_all"()
    set rx432_cur, rx432_start[0]
    set rx432_tgt, rx432_start[1]
    set rx432_pos, rx432_start[2]
    set rx432_curclass, rx432_start[3]
    set rx432_bstack, rx432_start[4]
    set $I19, rx432_start[5]
    store_lex unicode:"$\x{a2}", rx432_cur
    length rx432_eos, rx432_tgt
    eq $I19, 1, rx432_restart870
    gt rx432_pos, rx432_eos, rx432_fail871
    repr_get_attr_int $I11, self, rx432_curclass, "$!from"
    ne $I11, -1, rxscan433_done877
    goto rxscan433_scan876
  rxscan433_loop875:
    inc rx432_pos
    gt rx432_pos, rx432_eos, rx432_fail871
    repr_bind_attr_int rx432_cur, rx432_curclass, "$!from", rx432_pos
  rxscan433_scan876:
    nqp_rxmark rx432_bstack, rxscan433_loop875, rx432_pos, 0
  rxscan433_done877:
  alt434_0879:
    nqp_rxmark rx432_bstack, alt434_1880, rx432_pos, 0
    add $I11, rx432_pos, 1
    gt $I11, rx432_eos, rx432_fail871
    substr $S10, rx432_tgt, rx432_pos, 1
    ne $S10, ucs4:";", rx432_fail871
    add rx432_pos, 1
    goto alt434_end878
  alt434_1880:
    nqp_rxmark rx432_bstack, alt434_2881, rx432_pos, 0
    repr_bind_attr_int rx432_cur, rx432_curclass, "$!pos", rx432_pos
    $P11 = rx432_cur."MARKED"("endstmt")
    repr_get_attr_int $I11, $P11, rx432_curclass, "$!pos"
    lt $I11, 0, rx432_fail871
    goto alt434_end878
  alt434_2881:
    nqp_rxmark rx432_bstack, alt434_3882, rx432_pos, 0
    repr_bind_attr_int rx432_cur, rx432_curclass, "$!pos", rx432_pos
    $P11 = rx432_cur."terminator"()
    repr_get_attr_int $I11, $P11, rx432_curclass, "$!pos"
    lt $I11, 0, rx432_fail871
    goto alt434_end878
  alt434_3882:
    lt rx432_pos, rx432_eos, rx432_fail871
  alt434_end878:
    rx432_cur."!cursor_pass"(rx432_pos, "eat_terminator", 'backtrack'=>1)
    .return (rx432_cur)
  rx432_restart870:
    repr_get_attr_obj rx432_cstack, rx432_cur, rx432_curclass, "$!cstack"
  rx432_fail871:
    unless rx432_bstack, rx432_done869
    pop $I19, rx432_bstack
    if_null rx432_cstack, rx432_cstack_done874
    unless rx432_cstack, rx432_cstack_done874
    dec $I19
    set $P11, rx432_cstack[$I19]
  rx432_cstack_done874:
    pop rx432_rep, rx432_bstack
    pop rx432_pos, rx432_bstack
    pop $I19, rx432_bstack
    lt rx432_pos, -1, rx432_done869
    lt rx432_pos, 0, rx432_fail871
    eq $I19, 0, rx432_fail871
    nqp_islist $I20, rx432_cstack
    unless $I20, rx432_jump872
    elements $I18, rx432_bstack
    le $I18, 0, rx432_cut873
    dec $I18
    set $I18, rx432_bstack[$I18]
  rx432_cut873:
    assign rx432_cstack, $I18
  rx432_jump872:
    jump $I19
  rx432_done869:
    rx432_cur."!cursor_fail"()
    .return (rx432_cur) 
.end
.HLL "nqp"
.namespace []
.sub "xblock" :subid("cuid_50_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 803
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx436_start
    .local string rx436_tgt
    .local int rx436_pos
    .local int rx436_off
    .local int rx436_eos
    .local int rx436_rep
    .local pmc rx436_cur
    .local pmc rx436_curclass
    .local pmc rx436_bstack
    .local pmc rx436_cstack
    rx436_start = self."!cursor_start_all"()
    set rx436_cur, rx436_start[0]
    set rx436_tgt, rx436_start[1]
    set rx436_pos, rx436_start[2]
    set rx436_curclass, rx436_start[3]
    set rx436_bstack, rx436_start[4]
    set $I19, rx436_start[5]
    store_lex unicode:"$\x{a2}", rx436_cur
    length rx436_eos, rx436_tgt
    eq $I19, 1, rx436_restart886
    gt rx436_pos, rx436_eos, rx436_fail887
    repr_get_attr_int $I11, self, rx436_curclass, "$!from"
    ne $I11, -1, rxscan437_done893
    goto rxscan437_scan892
  rxscan437_loop891:
    inc rx436_pos
    gt rx436_pos, rx436_eos, rx436_fail887
    repr_bind_attr_int rx436_cur, rx436_curclass, "$!from", rx436_pos
  rxscan437_scan892:
    nqp_rxmark rx436_bstack, rxscan437_loop891, rx436_pos, 0
  rxscan437_done893:
    repr_bind_attr_int rx436_cur, rx436_curclass, "$!pos", rx436_pos
    $P11 = rx436_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx436_curclass, "$!pos"
    lt $I11, 0, rx436_fail887
    nqp_rxmark rx436_bstack, rxsubrule438_pass894, -1, 0
  rxsubrule438_pass894:
    rx436_cstack = rx436_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx436_pos, $P11, rx436_curclass, "$!pos"
    repr_bind_attr_int rx436_cur, rx436_curclass, "$!pos", rx436_pos
    $P11 = rx436_cur."ws"()
    repr_get_attr_int $I11, $P11, rx436_curclass, "$!pos"
    lt $I11, 0, rx436_fail887
    repr_get_attr_int rx436_pos, $P11, rx436_curclass, "$!pos"
    repr_bind_attr_int rx436_cur, rx436_curclass, "$!pos", rx436_pos
    $P11 = rx436_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx436_curclass, "$!pos"
    lt $I11, 0, rx436_fail887
    nqp_rxmark rx436_bstack, rxsubrule440_pass896, -1, 0
  rxsubrule440_pass896:
    rx436_cstack = rx436_cur."!cursor_capture"($P11, "pblock")
    repr_get_attr_int rx436_pos, $P11, rx436_curclass, "$!pos"
    rx436_cur."!cursor_pass"(rx436_pos, "xblock", 'backtrack'=>1)
    .return (rx436_cur)
  rx436_restart886:
    repr_get_attr_obj rx436_cstack, rx436_cur, rx436_curclass, "$!cstack"
  rx436_fail887:
    unless rx436_bstack, rx436_done885
    pop $I19, rx436_bstack
    if_null rx436_cstack, rx436_cstack_done890
    unless rx436_cstack, rx436_cstack_done890
    dec $I19
    set $P11, rx436_cstack[$I19]
  rx436_cstack_done890:
    pop rx436_rep, rx436_bstack
    pop rx436_pos, rx436_bstack
    pop $I19, rx436_bstack
    lt rx436_pos, -1, rx436_done885
    lt rx436_pos, 0, rx436_fail887
    eq $I19, 0, rx436_fail887
    nqp_islist $I20, rx436_cstack
    unless $I20, rx436_jump888
    elements $I18, rx436_bstack
    le $I18, 0, rx436_cut889
    dec $I18
    set $I18, rx436_bstack[$I18]
  rx436_cut889:
    assign rx436_cstack, $I18
  rx436_jump888:
    jump $I19
  rx436_done885:
    rx436_cur."!cursor_fail"()
    .return (rx436_cur) 
.end
.HLL "nqp"
.namespace []
.sub "pblock" :subid("cuid_51_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 807
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx441_start
    .local string rx441_tgt
    .local int rx441_pos
    .local int rx441_off
    .local int rx441_eos
    .local int rx441_rep
    .local pmc rx441_cur
    .local pmc rx441_curclass
    .local pmc rx441_bstack
    .local pmc rx441_cstack
    rx441_start = self."!cursor_start_all"()
    set rx441_cur, rx441_start[0]
    set rx441_tgt, rx441_start[1]
    set rx441_pos, rx441_start[2]
    set rx441_curclass, rx441_start[3]
    set rx441_bstack, rx441_start[4]
    set $I19, rx441_start[5]
    store_lex unicode:"$\x{a2}", rx441_cur
    length rx441_eos, rx441_tgt
    eq $I19, 1, rx441_restart899
    gt rx441_pos, rx441_eos, rx441_fail900
    repr_get_attr_int $I11, self, rx441_curclass, "$!from"
    ne $I11, -1, rxscan442_done906
    goto rxscan442_scan905
  rxscan442_loop904:
    inc rx441_pos
    gt rx441_pos, rx441_eos, rx441_fail900
    repr_bind_attr_int rx441_cur, rx441_curclass, "$!from", rx441_pos
  rxscan442_scan905:
    nqp_rxmark rx441_bstack, rxscan442_loop904, rx441_pos, 0
  rxscan442_done906:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt443_0908
    nqp_push_label $P11, alt443_1914
    nqp_push_label $P11, alt443_2917
    nqp_rxmark rx441_bstack, alt443_end907, -1, 0
    rx441_cur."!alt"(rx441_pos, "alt_nfa__10_1361734140.999", $P11)
    goto rx441_fail900
  alt443_0908:
    repr_bind_attr_int rx441_cur, rx441_curclass, "$!pos", rx441_pos
    $P11 = rx441_cur."lambda"()
    repr_get_attr_int $I11, $P11, rx441_curclass, "$!pos"
    lt $I11, 0, rx441_fail900
    repr_get_attr_int rx441_pos, $P11, rx441_curclass, "$!pos"
    repr_bind_attr_int rx441_cur, rx441_curclass, "$!pos", rx441_pos
    $P11 = rx441_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx441_curclass, "$!pos"
    lt $I11, 0, rx441_fail900
    repr_get_attr_int rx441_pos, $P11, rx441_curclass, "$!pos"
    repr_bind_attr_int rx441_cur, rx441_curclass, "$!pos", rx441_pos
    $P11 = rx441_cur."signature"()
    repr_get_attr_int $I11, $P11, rx441_curclass, "$!pos"
    lt $I11, 0, rx441_fail900
    nqp_rxmark rx441_bstack, rxsubrule446_pass911, -1, 0
  rxsubrule446_pass911:
    rx441_cstack = rx441_cur."!cursor_capture"($P11, "signature")
    repr_get_attr_int rx441_pos, $P11, rx441_curclass, "$!pos"
    repr_bind_attr_int rx441_cur, rx441_curclass, "$!pos", rx441_pos
    $P11 = rx441_cur."ws"()
    repr_get_attr_int $I11, $P11, rx441_curclass, "$!pos"
    lt $I11, 0, rx441_fail900
    repr_get_attr_int rx441_pos, $P11, rx441_curclass, "$!pos"
    repr_bind_attr_int rx441_cur, rx441_curclass, "$!pos", rx441_pos
    $P11 = rx441_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx441_curclass, "$!pos"
    lt $I11, 0, rx441_fail900
    nqp_rxmark rx441_bstack, rxsubrule448_pass913, -1, 0
  rxsubrule448_pass913:
    rx441_cstack = rx441_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx441_pos, $P11, rx441_curclass, "$!pos"
    goto alt443_end907
  alt443_1914:
    ge rx441_pos, rx441_eos, rx441_fail900
    substr $S11, rx441_tgt, rx441_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx441_fail900
    repr_bind_attr_int rx441_cur, rx441_curclass, "$!pos", rx441_pos
    $P11 = rx441_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx441_curclass, "$!pos"
    lt $I11, 0, rx441_fail900
    repr_get_attr_int rx441_pos, $P11, rx441_curclass, "$!pos"
    repr_bind_attr_int rx441_cur, rx441_curclass, "$!pos", rx441_pos
    $P11 = rx441_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx441_curclass, "$!pos"
    lt $I11, 0, rx441_fail900
    nqp_rxmark rx441_bstack, rxsubrule450_pass916, -1, 0
  rxsubrule450_pass916:
    rx441_cstack = rx441_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx441_pos, $P11, rx441_curclass, "$!pos"
    goto alt443_end907
  alt443_2917:
    repr_bind_attr_int rx441_cur, rx441_curclass, "$!pos", rx441_pos
    $P11 = rx441_cur."panic"("Missing block")
    repr_get_attr_int $I11, $P11, rx441_curclass, "$!pos"
    lt $I11, 0, rx441_fail900
    repr_get_attr_int rx441_pos, $P11, rx441_curclass, "$!pos"
    goto alt443_end907
  alt443_end907:
    rx441_cur."!cursor_pass"(rx441_pos, "pblock", 'backtrack'=>1)
    .return (rx441_cur)
  rx441_restart899:
    repr_get_attr_obj rx441_cstack, rx441_cur, rx441_curclass, "$!cstack"
  rx441_fail900:
    unless rx441_bstack, rx441_done898
    pop $I19, rx441_bstack
    if_null rx441_cstack, rx441_cstack_done903
    unless rx441_cstack, rx441_cstack_done903
    dec $I19
    set $P11, rx441_cstack[$I19]
  rx441_cstack_done903:
    pop rx441_rep, rx441_bstack
    pop rx441_pos, rx441_bstack
    pop $I19, rx441_bstack
    lt rx441_pos, -1, rx441_done898
    lt rx441_pos, 0, rx441_fail900
    eq $I19, 0, rx441_fail900
    nqp_islist $I20, rx441_cstack
    unless $I20, rx441_jump901
    elements $I18, rx441_bstack
    le $I18, 0, rx441_cut902
    dec $I18
    set $I18, rx441_bstack[$I18]
  rx441_cut902:
    assign rx441_cstack, $I18
  rx441_jump901:
    jump $I19
  rx441_done898:
    rx441_cur."!cursor_fail"()
    .return (rx441_cur) 
.end
.HLL "nqp"
.namespace []
.sub "lambda" :subid("cuid_52_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 818
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx452_start
    .local string rx452_tgt
    .local int rx452_pos
    .local int rx452_off
    .local int rx452_eos
    .local int rx452_rep
    .local pmc rx452_cur
    .local pmc rx452_curclass
    .local pmc rx452_bstack
    .local pmc rx452_cstack
    rx452_start = self."!cursor_start_all"()
    set rx452_cur, rx452_start[0]
    set rx452_tgt, rx452_start[1]
    set rx452_pos, rx452_start[2]
    set rx452_curclass, rx452_start[3]
    set rx452_bstack, rx452_start[4]
    set $I19, rx452_start[5]
    store_lex unicode:"$\x{a2}", rx452_cur
    length rx452_eos, rx452_tgt
    eq $I19, 1, rx452_restart921
    gt rx452_pos, rx452_eos, rx452_fail922
    repr_get_attr_int $I11, self, rx452_curclass, "$!from"
    ne $I11, -1, rxscan453_done928
    goto rxscan453_scan927
  rxscan453_loop926:
    inc rx452_pos
    gt rx452_pos, rx452_eos, rx452_fail922
    repr_bind_attr_int rx452_cur, rx452_curclass, "$!from", rx452_pos
  rxscan453_scan927:
    nqp_rxmark rx452_bstack, rxscan453_loop926, rx452_pos, 0
  rxscan453_done928:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt454_0930
    nqp_push_label $P11, alt454_1931
    nqp_rxmark rx452_bstack, alt454_end929, -1, 0
    rx452_cur."!alt"(rx452_pos, "alt_nfa__11_1361734141.005", $P11)
    goto rx452_fail922
  alt454_0930:
    add $I11, rx452_pos, 2
    gt $I11, rx452_eos, rx452_fail922
    substr $S10, rx452_tgt, rx452_pos, 2
    ne $S10, ucs4:"->", rx452_fail922
    add rx452_pos, 2
    goto alt454_end929
  alt454_1931:
    add $I11, rx452_pos, 3
    gt $I11, rx452_eos, rx452_fail922
    substr $S10, rx452_tgt, rx452_pos, 3
    ne $S10, ucs4:"<->", rx452_fail922
    add rx452_pos, 3
    goto alt454_end929
  alt454_end929:
    rx452_cur."!cursor_pass"(rx452_pos, "lambda", 'backtrack'=>1)
    .return (rx452_cur)
  rx452_restart921:
    repr_get_attr_obj rx452_cstack, rx452_cur, rx452_curclass, "$!cstack"
  rx452_fail922:
    unless rx452_bstack, rx452_done920
    pop $I19, rx452_bstack
    if_null rx452_cstack, rx452_cstack_done925
    unless rx452_cstack, rx452_cstack_done925
    dec $I19
    set $P11, rx452_cstack[$I19]
  rx452_cstack_done925:
    pop rx452_rep, rx452_bstack
    pop rx452_pos, rx452_bstack
    pop $I19, rx452_bstack
    lt rx452_pos, -1, rx452_done920
    lt rx452_pos, 0, rx452_fail922
    eq $I19, 0, rx452_fail922
    nqp_islist $I20, rx452_cstack
    unless $I20, rx452_jump923
    elements $I18, rx452_bstack
    le $I18, 0, rx452_cut924
    dec $I18
    set $I18, rx452_bstack[$I18]
  rx452_cut924:
    assign rx452_cstack, $I18
  rx452_jump923:
    jump $I19
  rx452_done920:
    rx452_cur."!cursor_fail"()
    .return (rx452_cur) 
.end
.HLL "nqp"
.namespace []
.sub "block" :subid("cuid_53_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 820
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx455_start
    .local string rx455_tgt
    .local int rx455_pos
    .local int rx455_off
    .local int rx455_eos
    .local int rx455_rep
    .local pmc rx455_cur
    .local pmc rx455_curclass
    .local pmc rx455_bstack
    .local pmc rx455_cstack
    rx455_start = self."!cursor_start_all"()
    set rx455_cur, rx455_start[0]
    set rx455_tgt, rx455_start[1]
    set rx455_pos, rx455_start[2]
    set rx455_curclass, rx455_start[3]
    set rx455_bstack, rx455_start[4]
    set $I19, rx455_start[5]
    store_lex unicode:"$\x{a2}", rx455_cur
    length rx455_eos, rx455_tgt
    eq $I19, 1, rx455_restart934
    gt rx455_pos, rx455_eos, rx455_fail935
    repr_get_attr_int $I11, self, rx455_curclass, "$!from"
    ne $I11, -1, rxscan456_done941
    goto rxscan456_scan940
  rxscan456_loop939:
    inc rx455_pos
    gt rx455_pos, rx455_eos, rx455_fail935
    repr_bind_attr_int rx455_cur, rx455_curclass, "$!from", rx455_pos
  rxscan456_scan940:
    nqp_rxmark rx455_bstack, rxscan456_loop939, rx455_pos, 0
  rxscan456_done941:
  alt457_0943:
    nqp_rxmark rx455_bstack, alt457_1944, rx455_pos, 0
    ge rx455_pos, rx455_eos, rx455_fail935
    substr $S11, rx455_tgt, rx455_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx455_fail935
    goto alt457_end942
  alt457_1944:
    repr_bind_attr_int rx455_cur, rx455_curclass, "$!pos", rx455_pos
    $P11 = rx455_cur."panic"("Missing block")
    repr_get_attr_int $I11, $P11, rx455_curclass, "$!pos"
    lt $I11, 0, rx455_fail935
    repr_get_attr_int rx455_pos, $P11, rx455_curclass, "$!pos"
  alt457_end942:
    repr_bind_attr_int rx455_cur, rx455_curclass, "$!pos", rx455_pos
    $P11 = rx455_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx455_curclass, "$!pos"
    lt $I11, 0, rx455_fail935
    repr_get_attr_int rx455_pos, $P11, rx455_curclass, "$!pos"
    repr_bind_attr_int rx455_cur, rx455_curclass, "$!pos", rx455_pos
    $P11 = rx455_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx455_curclass, "$!pos"
    lt $I11, 0, rx455_fail935
    nqp_rxmark rx455_bstack, rxsubrule460_pass947, -1, 0
  rxsubrule460_pass947:
    rx455_cstack = rx455_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx455_pos, $P11, rx455_curclass, "$!pos"
    rx455_cur."!cursor_pass"(rx455_pos, "block", 'backtrack'=>1)
    .return (rx455_cur)
  rx455_restart934:
    repr_get_attr_obj rx455_cstack, rx455_cur, rx455_curclass, "$!cstack"
  rx455_fail935:
    unless rx455_bstack, rx455_done933
    pop $I19, rx455_bstack
    if_null rx455_cstack, rx455_cstack_done938
    unless rx455_cstack, rx455_cstack_done938
    dec $I19
    set $P11, rx455_cstack[$I19]
  rx455_cstack_done938:
    pop rx455_rep, rx455_bstack
    pop rx455_pos, rx455_bstack
    pop $I19, rx455_bstack
    lt rx455_pos, -1, rx455_done933
    lt rx455_pos, 0, rx455_fail935
    eq $I19, 0, rx455_fail935
    nqp_islist $I20, rx455_cstack
    unless $I20, rx455_jump936
    elements $I18, rx455_bstack
    le $I18, 0, rx455_cut937
    dec $I18
    set $I18, rx455_bstack[$I18]
  rx455_cut937:
    assign rx455_cstack, $I18
  rx455_jump936:
    jump $I19
  rx455_done933:
    rx455_cur."!cursor_fail"()
    .return (rx455_cur) 
.end
.HLL "nqp"
.namespace []
.sub "blockoid" :subid("cuid_54_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 826
    .param pmc _lex_param_0 
    .lex "%*HANDLERS", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_98 
    .local pmc pkg_viv_tmp_21 
    new $P5001, 'Hash'
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx461_start
    .local string rx461_tgt
    .local int rx461_pos
    .local int rx461_off
    .local int rx461_eos
    .local int rx461_rep
    .local pmc rx461_cur
    .local pmc rx461_curclass
    .local pmc rx461_bstack
    .local pmc rx461_cstack
    rx461_start = self."!cursor_start_all"()
    set rx461_cur, rx461_start[0]
    set rx461_tgt, rx461_start[1]
    set rx461_pos, rx461_start[2]
    set rx461_curclass, rx461_start[3]
    set rx461_bstack, rx461_start[4]
    set $I19, rx461_start[5]
    store_lex unicode:"$\x{a2}", rx461_cur
    length rx461_eos, rx461_tgt
    eq $I19, 1, rx461_restart950
    gt rx461_pos, rx461_eos, rx461_fail951
    repr_get_attr_int $I11, self, rx461_curclass, "$!from"
    ne $I11, -1, rxscan462_done957
    goto rxscan462_scan956
  rxscan462_loop955:
    inc rx461_pos
    gt rx461_pos, rx461_eos, rx461_fail951
    repr_bind_attr_int rx461_cur, rx461_curclass, "$!from", rx461_pos
  rxscan462_scan956:
    nqp_rxmark rx461_bstack, rxscan462_loop955, rx461_pos, 0
  rxscan462_done957:
    repr_bind_attr_int rx461_cur, rx461_curclass, "$!pos", rx461_pos
    store_lex unicode:"$\x{a2}", rx461_cur
    unless_null $P101, fallback958
    nqp_get_sc_object $P5003, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_21, $P5002
    set fb_tmp_98, pkg_viv_tmp_21
    repr_defined $I5001, fb_tmp_98
    unless $I5001 goto if463_else959 
    set $P5004, fb_tmp_98["%HANDLERS"]
    set $P5006, $P5004
    goto if463_end960
  if463_else959:
    null $P5005
    set $P5006, $P5005
  if463_end960:
    unless_null $P5006, vivi_464961
    new $P5007, 'Hash'
    set pkg_viv_tmp_21["%HANDLERS"], $P5007
    set $P5006, $P5007
  vivi_464961:
    unless_null $P5006, vivi_465962
    die "Contextual %*HANDLERS not found"
    box $P5008, "Contextual %*HANDLERS not found"
    set $P5006, $P5008
  vivi_465962:
    set $P101, $P5006
  fallback958:
    repr_bind_attr_int rx461_cur, rx461_curclass, "$!pos", rx461_pos
    $P11 = rx461_cur."finishpad"()
    repr_get_attr_int $I11, $P11, rx461_curclass, "$!pos"
    lt $I11, 0, rx461_fail951
    repr_get_attr_int rx461_pos, $P11, rx461_curclass, "$!pos"
  alt467_0965:
    nqp_rxmark rx461_bstack, alt467_1967, rx461_pos, 0
    add $I11, rx461_pos, 14
    gt $I11, rx461_eos, rx461_fail951
    substr $S10, rx461_tgt, rx461_pos, 14
    ne $S10, ucs4:"{YOU_ARE_HERE}", rx461_fail951
    add rx461_pos, 14
    repr_bind_attr_int rx461_cur, rx461_curclass, "$!pos", rx461_pos
    $P11 = rx461_cur."you_are_here"()
    repr_get_attr_int $I11, $P11, rx461_curclass, "$!pos"
    lt $I11, 0, rx461_fail951
    nqp_rxmark rx461_bstack, rxsubrule468_pass966, -1, 0
  rxsubrule468_pass966:
    rx461_cstack = rx461_cur."!cursor_capture"($P11, "you_are_here")
    repr_get_attr_int rx461_pos, $P11, rx461_curclass, "$!pos"
    goto alt467_end964
  alt467_1967:
    add $I11, rx461_pos, 1
    gt $I11, rx461_eos, rx461_fail951
    substr $S10, rx461_tgt, rx461_pos, 1
    ne $S10, ucs4:"{", rx461_fail951
    add rx461_pos, 1
    repr_bind_attr_int rx461_cur, rx461_curclass, "$!pos", rx461_pos
    $P11 = rx461_cur."statementlist"()
    repr_get_attr_int $I11, $P11, rx461_curclass, "$!pos"
    lt $I11, 0, rx461_fail951
    nqp_rxmark rx461_bstack, rxsubrule469_pass968, -1, 0
  rxsubrule469_pass968:
    rx461_cstack = rx461_cur."!cursor_capture"($P11, "statementlist")
    repr_get_attr_int rx461_pos, $P11, rx461_curclass, "$!pos"
  alt470_0970:
    nqp_rxmark rx461_bstack, alt470_1971, rx461_pos, 0
    add $I11, rx461_pos, 1
    gt $I11, rx461_eos, rx461_fail951
    substr $S10, rx461_tgt, rx461_pos, 1
    ne $S10, ucs4:"}", rx461_fail951
    add rx461_pos, 1
    goto alt470_end969
  alt470_1971:
    repr_bind_attr_int rx461_cur, rx461_curclass, "$!pos", rx461_pos
    $P11 = rx461_cur."FAILGOAL"("'}'")
    repr_get_attr_int $I11, $P11, rx461_curclass, "$!pos"
    lt $I11, 0, rx461_fail951
    goto rxsubrule471_pass972
  rxsubrule471_back973:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx461_curclass, "$!pos"
    lt $I11, 0, rx461_fail951
  rxsubrule471_pass972:
    rx461_cstack = rx461_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule471_back973
    push rx461_bstack, $I11
    push rx461_bstack, 0
    push rx461_bstack, rx461_pos
    elements $I11, rx461_cstack
    push rx461_bstack, $I11
    repr_get_attr_int rx461_pos, $P11, rx461_curclass, "$!pos"
  alt470_end969:
  alt467_end964:
    repr_bind_attr_int rx461_cur, rx461_curclass, "$!pos", rx461_pos
    $P11 = rx461_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx461_curclass, "$!pos"
    lt $I11, 0, rx461_fail951
    rx461_cur."!cursor_pass"(rx461_pos, "blockoid", 'backtrack'=>1)
    .return (rx461_cur)
  rx461_restart950:
    repr_get_attr_obj rx461_cstack, rx461_cur, rx461_curclass, "$!cstack"
  rx461_fail951:
    unless rx461_bstack, rx461_done949
    pop $I19, rx461_bstack
    if_null rx461_cstack, rx461_cstack_done954
    unless rx461_cstack, rx461_cstack_done954
    dec $I19
    set $P11, rx461_cstack[$I19]
  rx461_cstack_done954:
    pop rx461_rep, rx461_bstack
    pop rx461_pos, rx461_bstack
    pop $I19, rx461_bstack
    lt rx461_pos, -1, rx461_done949
    lt rx461_pos, 0, rx461_fail951
    eq $I19, 0, rx461_fail951
    nqp_islist $I20, rx461_cstack
    unless $I20, rx461_jump952
    elements $I18, rx461_bstack
    le $I18, 0, rx461_cut953
    dec $I18
    set $I18, rx461_bstack[$I18]
  rx461_cut953:
    assign rx461_cstack, $I18
  rx461_jump952:
    jump $I19
  rx461_done949:
    rx461_cur."!cursor_fail"()
    .return (rx461_cur) 
.end
.HLL "nqp"
.namespace []
.sub "newpad" :subid("cuid_55_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 836
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx472_start
    .local string rx472_tgt
    .local int rx472_pos
    .local int rx472_off
    .local int rx472_eos
    .local int rx472_rep
    .local pmc rx472_cur
    .local pmc rx472_curclass
    .local pmc rx472_bstack
    .local pmc rx472_cstack
    rx472_start = self."!cursor_start_all"()
    set rx472_cur, rx472_start[0]
    set rx472_tgt, rx472_start[1]
    set rx472_pos, rx472_start[2]
    set rx472_curclass, rx472_start[3]
    set rx472_bstack, rx472_start[4]
    set $I19, rx472_start[5]
    store_lex unicode:"$\x{a2}", rx472_cur
    length rx472_eos, rx472_tgt
    eq $I19, 1, rx472_restart976
    gt rx472_pos, rx472_eos, rx472_fail977
    repr_get_attr_int $I11, self, rx472_curclass, "$!from"
    ne $I11, -1, rxscan473_done983
    goto rxscan473_scan982
  rxscan473_loop981:
    inc rx472_pos
    gt rx472_pos, rx472_eos, rx472_fail977
    repr_bind_attr_int rx472_cur, rx472_curclass, "$!from", rx472_pos
  rxscan473_scan982:
    nqp_rxmark rx472_bstack, rxscan473_loop981, rx472_pos, 0
  rxscan473_done983:
    rx472_cur."!cursor_pass"(rx472_pos, "newpad", 'backtrack'=>1)
    .return (rx472_cur)
  rx472_restart976:
    repr_get_attr_obj rx472_cstack, rx472_cur, rx472_curclass, "$!cstack"
  rx472_fail977:
    unless rx472_bstack, rx472_done975
    pop $I19, rx472_bstack
    if_null rx472_cstack, rx472_cstack_done980
    unless rx472_cstack, rx472_cstack_done980
    dec $I19
    set $P11, rx472_cstack[$I19]
  rx472_cstack_done980:
    pop rx472_rep, rx472_bstack
    pop rx472_pos, rx472_bstack
    pop $I19, rx472_bstack
    lt rx472_pos, -1, rx472_done975
    lt rx472_pos, 0, rx472_fail977
    eq $I19, 0, rx472_fail977
    nqp_islist $I20, rx472_cstack
    unless $I20, rx472_jump978
    elements $I18, rx472_bstack
    le $I18, 0, rx472_cut979
    dec $I18
    set $I18, rx472_bstack[$I18]
  rx472_cut979:
    assign rx472_cstack, $I18
  rx472_jump978:
    jump $I19
  rx472_done975:
    rx472_cur."!cursor_fail"()
    .return (rx472_cur) 
.end
.HLL "nqp"
.namespace []
.sub "outerctx" :subid("cuid_56_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 837
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx475_start
    .local string rx475_tgt
    .local int rx475_pos
    .local int rx475_off
    .local int rx475_eos
    .local int rx475_rep
    .local pmc rx475_cur
    .local pmc rx475_curclass
    .local pmc rx475_bstack
    .local pmc rx475_cstack
    rx475_start = self."!cursor_start_all"()
    set rx475_cur, rx475_start[0]
    set rx475_tgt, rx475_start[1]
    set rx475_pos, rx475_start[2]
    set rx475_curclass, rx475_start[3]
    set rx475_bstack, rx475_start[4]
    set $I19, rx475_start[5]
    store_lex unicode:"$\x{a2}", rx475_cur
    length rx475_eos, rx475_tgt
    eq $I19, 1, rx475_restart987
    gt rx475_pos, rx475_eos, rx475_fail988
    repr_get_attr_int $I11, self, rx475_curclass, "$!from"
    ne $I11, -1, rxscan476_done994
    goto rxscan476_scan993
  rxscan476_loop992:
    inc rx475_pos
    gt rx475_pos, rx475_eos, rx475_fail988
    repr_bind_attr_int rx475_cur, rx475_curclass, "$!from", rx475_pos
  rxscan476_scan993:
    nqp_rxmark rx475_bstack, rxscan476_loop992, rx475_pos, 0
  rxscan476_done994:
    rx475_cur."!cursor_pass"(rx475_pos, "outerctx", 'backtrack'=>1)
    .return (rx475_cur)
  rx475_restart987:
    repr_get_attr_obj rx475_cstack, rx475_cur, rx475_curclass, "$!cstack"
  rx475_fail988:
    unless rx475_bstack, rx475_done986
    pop $I19, rx475_bstack
    if_null rx475_cstack, rx475_cstack_done991
    unless rx475_cstack, rx475_cstack_done991
    dec $I19
    set $P11, rx475_cstack[$I19]
  rx475_cstack_done991:
    pop rx475_rep, rx475_bstack
    pop rx475_pos, rx475_bstack
    pop $I19, rx475_bstack
    lt rx475_pos, -1, rx475_done986
    lt rx475_pos, 0, rx475_fail988
    eq $I19, 0, rx475_fail988
    nqp_islist $I20, rx475_cstack
    unless $I20, rx475_jump989
    elements $I18, rx475_bstack
    le $I18, 0, rx475_cut990
    dec $I18
    set $I18, rx475_bstack[$I18]
  rx475_cut990:
    assign rx475_cstack, $I18
  rx475_jump989:
    jump $I19
  rx475_done986:
    rx475_cur."!cursor_fail"()
    .return (rx475_cur) 
.end
.HLL "nqp"
.namespace []
.sub "finishpad" :subid("cuid_57_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 838
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx478_start
    .local string rx478_tgt
    .local int rx478_pos
    .local int rx478_off
    .local int rx478_eos
    .local int rx478_rep
    .local pmc rx478_cur
    .local pmc rx478_curclass
    .local pmc rx478_bstack
    .local pmc rx478_cstack
    rx478_start = self."!cursor_start_all"()
    set rx478_cur, rx478_start[0]
    set rx478_tgt, rx478_start[1]
    set rx478_pos, rx478_start[2]
    set rx478_curclass, rx478_start[3]
    set rx478_bstack, rx478_start[4]
    set $I19, rx478_start[5]
    store_lex unicode:"$\x{a2}", rx478_cur
    length rx478_eos, rx478_tgt
    eq $I19, 1, rx478_restart998
    gt rx478_pos, rx478_eos, rx478_fail999
    repr_get_attr_int $I11, self, rx478_curclass, "$!from"
    ne $I11, -1, rxscan479_done1005
    goto rxscan479_scan1004
  rxscan479_loop1003:
    inc rx478_pos
    gt rx478_pos, rx478_eos, rx478_fail999
    repr_bind_attr_int rx478_cur, rx478_curclass, "$!from", rx478_pos
  rxscan479_scan1004:
    nqp_rxmark rx478_bstack, rxscan479_loop1003, rx478_pos, 0
  rxscan479_done1005:
    rx478_cur."!cursor_pass"(rx478_pos, "finishpad", 'backtrack'=>1)
    .return (rx478_cur)
  rx478_restart998:
    repr_get_attr_obj rx478_cstack, rx478_cur, rx478_curclass, "$!cstack"
  rx478_fail999:
    unless rx478_bstack, rx478_done997
    pop $I19, rx478_bstack
    if_null rx478_cstack, rx478_cstack_done1002
    unless rx478_cstack, rx478_cstack_done1002
    dec $I19
    set $P11, rx478_cstack[$I19]
  rx478_cstack_done1002:
    pop rx478_rep, rx478_bstack
    pop rx478_pos, rx478_bstack
    pop $I19, rx478_bstack
    lt rx478_pos, -1, rx478_done997
    lt rx478_pos, 0, rx478_fail999
    eq $I19, 0, rx478_fail999
    nqp_islist $I20, rx478_cstack
    unless $I20, rx478_jump1000
    elements $I18, rx478_bstack
    le $I18, 0, rx478_cut1001
    dec $I18
    set $I18, rx478_bstack[$I18]
  rx478_cut1001:
    assign rx478_cstack, $I18
  rx478_jump1000:
    jump $I19
  rx478_done997:
    rx478_cur."!cursor_fail"()
    .return (rx478_cur) 
.end
.HLL "nqp"
.namespace []
.sub "you_are_here" :subid("cuid_58_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 839
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx481_start
    .local string rx481_tgt
    .local int rx481_pos
    .local int rx481_off
    .local int rx481_eos
    .local int rx481_rep
    .local pmc rx481_cur
    .local pmc rx481_curclass
    .local pmc rx481_bstack
    .local pmc rx481_cstack
    rx481_start = self."!cursor_start_all"()
    set rx481_cur, rx481_start[0]
    set rx481_tgt, rx481_start[1]
    set rx481_pos, rx481_start[2]
    set rx481_curclass, rx481_start[3]
    set rx481_bstack, rx481_start[4]
    set $I19, rx481_start[5]
    store_lex unicode:"$\x{a2}", rx481_cur
    length rx481_eos, rx481_tgt
    eq $I19, 1, rx481_restart1009
    gt rx481_pos, rx481_eos, rx481_fail1010
    repr_get_attr_int $I11, self, rx481_curclass, "$!from"
    ne $I11, -1, rxscan482_done1016
    goto rxscan482_scan1015
  rxscan482_loop1014:
    inc rx481_pos
    gt rx481_pos, rx481_eos, rx481_fail1010
    repr_bind_attr_int rx481_cur, rx481_curclass, "$!from", rx481_pos
  rxscan482_scan1015:
    nqp_rxmark rx481_bstack, rxscan482_loop1014, rx481_pos, 0
  rxscan482_done1016:
    rx481_cur."!cursor_pass"(rx481_pos, "you_are_here", 'backtrack'=>1)
    .return (rx481_cur)
  rx481_restart1009:
    repr_get_attr_obj rx481_cstack, rx481_cur, rx481_curclass, "$!cstack"
  rx481_fail1010:
    unless rx481_bstack, rx481_done1008
    pop $I19, rx481_bstack
    if_null rx481_cstack, rx481_cstack_done1013
    unless rx481_cstack, rx481_cstack_done1013
    dec $I19
    set $P11, rx481_cstack[$I19]
  rx481_cstack_done1013:
    pop rx481_rep, rx481_bstack
    pop rx481_pos, rx481_bstack
    pop $I19, rx481_bstack
    lt rx481_pos, -1, rx481_done1008
    lt rx481_pos, 0, rx481_fail1010
    eq $I19, 0, rx481_fail1010
    nqp_islist $I20, rx481_cstack
    unless $I20, rx481_jump1011
    elements $I18, rx481_bstack
    le $I18, 0, rx481_cut1012
    dec $I18
    set $I18, rx481_bstack[$I18]
  rx481_cut1012:
    assign rx481_cstack, $I18
  rx481_jump1011:
    jump $I19
  rx481_done1008:
    rx481_cur."!cursor_fail"()
    .return (rx481_cur) 
.end
.HLL "nqp"
.namespace []
.sub "terminator" :subid("cuid_59_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 841
    .param pmc self 
    $P5001 = self."!protoregex"("terminator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "terminator:sym<;>" :subid("cuid_60_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 843
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx484_start
    .local string rx484_tgt
    .local int rx484_pos
    .local int rx484_off
    .local int rx484_eos
    .local int rx484_rep
    .local pmc rx484_cur
    .local pmc rx484_curclass
    .local pmc rx484_bstack
    .local pmc rx484_cstack
    rx484_start = self."!cursor_start_all"()
    set rx484_cur, rx484_start[0]
    set rx484_tgt, rx484_start[1]
    set rx484_pos, rx484_start[2]
    set rx484_curclass, rx484_start[3]
    set rx484_bstack, rx484_start[4]
    set $I19, rx484_start[5]
    store_lex unicode:"$\x{a2}", rx484_cur
    length rx484_eos, rx484_tgt
    eq $I19, 1, rx484_restart1020
    gt rx484_pos, rx484_eos, rx484_fail1021
    repr_get_attr_int $I11, self, rx484_curclass, "$!from"
    ne $I11, -1, rxscan485_done1027
    goto rxscan485_scan1026
  rxscan485_loop1025:
    inc rx484_pos
    gt rx484_pos, rx484_eos, rx484_fail1021
    repr_bind_attr_int rx484_cur, rx484_curclass, "$!from", rx484_pos
  rxscan485_scan1026:
    nqp_rxmark rx484_bstack, rxscan485_loop1025, rx484_pos, 0
  rxscan485_done1027:
    ge rx484_pos, rx484_eos, rx484_fail1021
    substr $S11, rx484_tgt, rx484_pos, 1
    index $I11, ucs4:";", $S11
    lt $I11, 0, rx484_fail1021
    rx484_cur."!cursor_pass"(rx484_pos, "terminator:sym<;>", 'backtrack'=>1)
    .return (rx484_cur)
  rx484_restart1020:
    repr_get_attr_obj rx484_cstack, rx484_cur, rx484_curclass, "$!cstack"
  rx484_fail1021:
    unless rx484_bstack, rx484_done1019
    pop $I19, rx484_bstack
    if_null rx484_cstack, rx484_cstack_done1024
    unless rx484_cstack, rx484_cstack_done1024
    dec $I19
    set $P11, rx484_cstack[$I19]
  rx484_cstack_done1024:
    pop rx484_rep, rx484_bstack
    pop rx484_pos, rx484_bstack
    pop $I19, rx484_bstack
    lt rx484_pos, -1, rx484_done1019
    lt rx484_pos, 0, rx484_fail1021
    eq $I19, 0, rx484_fail1021
    nqp_islist $I20, rx484_cstack
    unless $I20, rx484_jump1022
    elements $I18, rx484_bstack
    le $I18, 0, rx484_cut1023
    dec $I18
    set $I18, rx484_bstack[$I18]
  rx484_cut1023:
    assign rx484_cstack, $I18
  rx484_jump1022:
    jump $I19
  rx484_done1019:
    rx484_cur."!cursor_fail"()
    .return (rx484_cur) 
.end
.HLL "nqp"
.namespace []
.sub "terminator:sym<}>" :subid("cuid_61_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 844
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx486_start
    .local string rx486_tgt
    .local int rx486_pos
    .local int rx486_off
    .local int rx486_eos
    .local int rx486_rep
    .local pmc rx486_cur
    .local pmc rx486_curclass
    .local pmc rx486_bstack
    .local pmc rx486_cstack
    rx486_start = self."!cursor_start_all"()
    set rx486_cur, rx486_start[0]
    set rx486_tgt, rx486_start[1]
    set rx486_pos, rx486_start[2]
    set rx486_curclass, rx486_start[3]
    set rx486_bstack, rx486_start[4]
    set $I19, rx486_start[5]
    store_lex unicode:"$\x{a2}", rx486_cur
    length rx486_eos, rx486_tgt
    eq $I19, 1, rx486_restart1030
    gt rx486_pos, rx486_eos, rx486_fail1031
    repr_get_attr_int $I11, self, rx486_curclass, "$!from"
    ne $I11, -1, rxscan487_done1037
    goto rxscan487_scan1036
  rxscan487_loop1035:
    inc rx486_pos
    gt rx486_pos, rx486_eos, rx486_fail1031
    repr_bind_attr_int rx486_cur, rx486_curclass, "$!from", rx486_pos
  rxscan487_scan1036:
    nqp_rxmark rx486_bstack, rxscan487_loop1035, rx486_pos, 0
  rxscan487_done1037:
    ge rx486_pos, rx486_eos, rx486_fail1031
    substr $S11, rx486_tgt, rx486_pos, 1
    index $I11, ucs4:"}", $S11
    lt $I11, 0, rx486_fail1031
    rx486_cur."!cursor_pass"(rx486_pos, "terminator:sym<}>", 'backtrack'=>1)
    .return (rx486_cur)
  rx486_restart1030:
    repr_get_attr_obj rx486_cstack, rx486_cur, rx486_curclass, "$!cstack"
  rx486_fail1031:
    unless rx486_bstack, rx486_done1029
    pop $I19, rx486_bstack
    if_null rx486_cstack, rx486_cstack_done1034
    unless rx486_cstack, rx486_cstack_done1034
    dec $I19
    set $P11, rx486_cstack[$I19]
  rx486_cstack_done1034:
    pop rx486_rep, rx486_bstack
    pop rx486_pos, rx486_bstack
    pop $I19, rx486_bstack
    lt rx486_pos, -1, rx486_done1029
    lt rx486_pos, 0, rx486_fail1031
    eq $I19, 0, rx486_fail1031
    nqp_islist $I20, rx486_cstack
    unless $I20, rx486_jump1032
    elements $I18, rx486_bstack
    le $I18, 0, rx486_cut1033
    dec $I18
    set $I18, rx486_bstack[$I18]
  rx486_cut1033:
    assign rx486_cstack, $I18
  rx486_jump1032:
    jump $I19
  rx486_done1029:
    rx486_cur."!cursor_fail"()
    .return (rx486_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control" :subid("cuid_62_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 848
    .param pmc self 
    $P5001 = self."!protoregex"("statement_control")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<use>" :subid("cuid_63_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 850
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx488_start
    .local string rx488_tgt
    .local int rx488_pos
    .local int rx488_off
    .local int rx488_eos
    .local int rx488_rep
    .local pmc rx488_cur
    .local pmc rx488_curclass
    .local pmc rx488_bstack
    .local pmc rx488_cstack
    rx488_start = self."!cursor_start_all"()
    set rx488_cur, rx488_start[0]
    set rx488_tgt, rx488_start[1]
    set rx488_pos, rx488_start[2]
    set rx488_curclass, rx488_start[3]
    set rx488_bstack, rx488_start[4]
    set $I19, rx488_start[5]
    store_lex unicode:"$\x{a2}", rx488_cur
    length rx488_eos, rx488_tgt
    eq $I19, 1, rx488_restart1040
    gt rx488_pos, rx488_eos, rx488_fail1041
    repr_get_attr_int $I11, self, rx488_curclass, "$!from"
    ne $I11, -1, rxscan489_done1047
    goto rxscan489_scan1046
  rxscan489_loop1045:
    inc rx488_pos
    gt rx488_pos, rx488_eos, rx488_fail1041
    repr_bind_attr_int rx488_cur, rx488_curclass, "$!from", rx488_pos
  rxscan489_scan1046:
    nqp_rxmark rx488_bstack, rxscan489_loop1045, rx488_pos, 0
  rxscan489_done1047:
    nqp_rxmark rx488_bstack, rxcap490_fail1049, rx488_pos, 0
    add $I11, rx488_pos, 3
    gt $I11, rx488_eos, rx488_fail1041
    substr $S10, rx488_tgt, rx488_pos, 3
    ne $S10, ucs4:"use", rx488_fail1041
    add rx488_pos, 3
    nqp_rxpeek $I19, rx488_bstack, rxcap490_fail1049
    inc $I19
    set $I11, rx488_bstack[$I19]
    repr_bind_attr_int rx488_cur, rx488_curclass, "$!pos", rx488_pos
    $P11 = rx488_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx488_pos)
    rx488_cstack = rx488_cur."!cursor_capture"($P11, "sym")
    goto rxcap490_done1048
  rxcap490_fail1049:
    goto rx488_fail1041
  rxcap490_done1048:
    ge rx488_pos, rx488_eos, rx488_fail1041
    is_cclass $I11, .CCLASS_WHITESPACE, rx488_tgt, rx488_pos
    unless $I11, rx488_fail1041
    add rx488_pos, 1
    repr_bind_attr_int rx488_cur, rx488_curclass, "$!pos", rx488_pos
    $P11 = rx488_cur."ws"()
    repr_get_attr_int $I11, $P11, rx488_curclass, "$!pos"
    lt $I11, 0, rx488_fail1041
    repr_get_attr_int rx488_pos, $P11, rx488_curclass, "$!pos"
    repr_bind_attr_int rx488_cur, rx488_curclass, "$!pos", rx488_pos
    $P11 = rx488_cur."name"()
    repr_get_attr_int $I11, $P11, rx488_curclass, "$!pos"
    lt $I11, 0, rx488_fail1041
    nqp_rxmark rx488_bstack, rxsubrule492_pass1051, -1, 0
  rxsubrule492_pass1051:
    rx488_cstack = rx488_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx488_pos, $P11, rx488_curclass, "$!pos"
    repr_bind_attr_int rx488_cur, rx488_curclass, "$!pos", rx488_pos
    $P11 = rx488_cur."ws"()
    repr_get_attr_int $I11, $P11, rx488_curclass, "$!pos"
    lt $I11, 0, rx488_fail1041
    repr_get_attr_int rx488_pos, $P11, rx488_curclass, "$!pos"
    rx488_cur."!cursor_pass"(rx488_pos, "statement_control:sym<use>", 'backtrack'=>1)
    .return (rx488_cur)
  rx488_restart1040:
    repr_get_attr_obj rx488_cstack, rx488_cur, rx488_curclass, "$!cstack"
  rx488_fail1041:
    unless rx488_bstack, rx488_done1039
    pop $I19, rx488_bstack
    if_null rx488_cstack, rx488_cstack_done1044
    unless rx488_cstack, rx488_cstack_done1044
    dec $I19
    set $P11, rx488_cstack[$I19]
  rx488_cstack_done1044:
    pop rx488_rep, rx488_bstack
    pop rx488_pos, rx488_bstack
    pop $I19, rx488_bstack
    lt rx488_pos, -1, rx488_done1039
    lt rx488_pos, 0, rx488_fail1041
    eq $I19, 0, rx488_fail1041
    nqp_islist $I20, rx488_cstack
    unless $I20, rx488_jump1042
    elements $I18, rx488_bstack
    le $I18, 0, rx488_cut1043
    dec $I18
    set $I18, rx488_bstack[$I18]
  rx488_cut1043:
    assign rx488_cstack, $I18
  rx488_jump1042:
    jump $I19
  rx488_done1039:
    rx488_cur."!cursor_fail"()
    .return (rx488_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<if>" :subid("cuid_64_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 854
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx494_start
    .local string rx494_tgt
    .local int rx494_pos
    .local int rx494_off
    .local int rx494_eos
    .local int rx494_rep
    .local pmc rx494_cur
    .local pmc rx494_curclass
    .local pmc rx494_bstack
    .local pmc rx494_cstack
    rx494_start = self."!cursor_start_all"()
    set rx494_cur, rx494_start[0]
    set rx494_tgt, rx494_start[1]
    set rx494_pos, rx494_start[2]
    set rx494_curclass, rx494_start[3]
    set rx494_bstack, rx494_start[4]
    set $I19, rx494_start[5]
    store_lex unicode:"$\x{a2}", rx494_cur
    length rx494_eos, rx494_tgt
    eq $I19, 1, rx494_restart1055
    gt rx494_pos, rx494_eos, rx494_fail1056
    repr_get_attr_int $I11, self, rx494_curclass, "$!from"
    ne $I11, -1, rxscan495_done1062
    goto rxscan495_scan1061
  rxscan495_loop1060:
    inc rx494_pos
    gt rx494_pos, rx494_eos, rx494_fail1056
    repr_bind_attr_int rx494_cur, rx494_curclass, "$!from", rx494_pos
  rxscan495_scan1061:
    nqp_rxmark rx494_bstack, rxscan495_loop1060, rx494_pos, 0
  rxscan495_done1062:
    nqp_rxmark rx494_bstack, rxcap496_fail1064, rx494_pos, 0
    add $I11, rx494_pos, 2
    gt $I11, rx494_eos, rx494_fail1056
    substr $S10, rx494_tgt, rx494_pos, 2
    ne $S10, ucs4:"if", rx494_fail1056
    add rx494_pos, 2
    nqp_rxpeek $I19, rx494_bstack, rxcap496_fail1064
    inc $I19
    set $I11, rx494_bstack[$I19]
    repr_bind_attr_int rx494_cur, rx494_curclass, "$!pos", rx494_pos
    $P11 = rx494_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx494_pos)
    rx494_cstack = rx494_cur."!cursor_capture"($P11, "sym")
    goto rxcap496_done1063
  rxcap496_fail1064:
    goto rx494_fail1056
  rxcap496_done1063:
    ge rx494_pos, rx494_eos, rx494_fail1056
    is_cclass $I11, .CCLASS_WHITESPACE, rx494_tgt, rx494_pos
    unless $I11, rx494_fail1056
    add rx494_pos, 1
    repr_bind_attr_int rx494_cur, rx494_curclass, "$!pos", rx494_pos
    $P11 = rx494_cur."ws"()
    repr_get_attr_int $I11, $P11, rx494_curclass, "$!pos"
    lt $I11, 0, rx494_fail1056
    repr_get_attr_int rx494_pos, $P11, rx494_curclass, "$!pos"
    repr_bind_attr_int rx494_cur, rx494_curclass, "$!pos", rx494_pos
    $P11 = rx494_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx494_curclass, "$!pos"
    lt $I11, 0, rx494_fail1056
    nqp_rxmark rx494_bstack, rxsubrule498_pass1066, -1, 0
  rxsubrule498_pass1066:
    rx494_cstack = rx494_cur."!cursor_capture"($P11, "xblock")
    repr_get_attr_int rx494_pos, $P11, rx494_curclass, "$!pos"
    repr_bind_attr_int rx494_cur, rx494_curclass, "$!pos", rx494_pos
    $P11 = rx494_cur."ws"()
    repr_get_attr_int $I11, $P11, rx494_curclass, "$!pos"
    lt $I11, 0, rx494_fail1056
    repr_get_attr_int rx494_pos, $P11, rx494_curclass, "$!pos"
    nqp_rxmark rx494_bstack, rxquantr500_done1069, rx494_pos, 0
  rxquantr500_loop1068:
    repr_bind_attr_int rx494_cur, rx494_curclass, "$!pos", rx494_pos
    $P11 = rx494_cur."ws"()
    repr_get_attr_int $I11, $P11, rx494_curclass, "$!pos"
    lt $I11, 0, rx494_fail1056
    repr_get_attr_int rx494_pos, $P11, rx494_curclass, "$!pos"
    add $I11, rx494_pos, 5
    gt $I11, rx494_eos, rx494_fail1056
    substr $S10, rx494_tgt, rx494_pos, 5
    ne $S10, ucs4:"elsif", rx494_fail1056
    add rx494_pos, 5
    ge rx494_pos, rx494_eos, rx494_fail1056
    is_cclass $I11, .CCLASS_WHITESPACE, rx494_tgt, rx494_pos
    unless $I11, rx494_fail1056
    add rx494_pos, 1
    repr_bind_attr_int rx494_cur, rx494_curclass, "$!pos", rx494_pos
    $P11 = rx494_cur."ws"()
    repr_get_attr_int $I11, $P11, rx494_curclass, "$!pos"
    lt $I11, 0, rx494_fail1056
    repr_get_attr_int rx494_pos, $P11, rx494_curclass, "$!pos"
    repr_bind_attr_int rx494_cur, rx494_curclass, "$!pos", rx494_pos
    $P11 = rx494_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx494_curclass, "$!pos"
    lt $I11, 0, rx494_fail1056
    nqp_rxmark rx494_bstack, rxsubrule503_pass1072, -1, 0
  rxsubrule503_pass1072:
    rx494_cstack = rx494_cur."!cursor_capture"($P11, "xblock")
    repr_get_attr_int rx494_pos, $P11, rx494_curclass, "$!pos"
    repr_bind_attr_int rx494_cur, rx494_curclass, "$!pos", rx494_pos
    $P11 = rx494_cur."ws"()
    repr_get_attr_int $I11, $P11, rx494_curclass, "$!pos"
    lt $I11, 0, rx494_fail1056
    repr_get_attr_int rx494_pos, $P11, rx494_curclass, "$!pos"
    nqp_rxpeek $I19, rx494_bstack, rxquantr500_done1069
    inc $I19
    inc $I19
    set rx494_rep, rx494_bstack[$I19]
    nqp_rxcommit rx494_bstack, rxquantr500_done1069
    inc rx494_rep
    nqp_rxmark rx494_bstack, rxquantr500_done1069, rx494_pos, rx494_rep
    goto rxquantr500_loop1068
  rxquantr500_done1069:
    repr_bind_attr_int rx494_cur, rx494_curclass, "$!pos", rx494_pos
    $P11 = rx494_cur."ws"()
    repr_get_attr_int $I11, $P11, rx494_curclass, "$!pos"
    lt $I11, 0, rx494_fail1056
    repr_get_attr_int rx494_pos, $P11, rx494_curclass, "$!pos"
    nqp_rxmark rx494_bstack, rxquantr506_done1076, rx494_pos, 0
  rxquantr506_loop1075:
    repr_bind_attr_int rx494_cur, rx494_curclass, "$!pos", rx494_pos
    $P11 = rx494_cur."ws"()
    repr_get_attr_int $I11, $P11, rx494_curclass, "$!pos"
    lt $I11, 0, rx494_fail1056
    repr_get_attr_int rx494_pos, $P11, rx494_curclass, "$!pos"
    add $I11, rx494_pos, 4
    gt $I11, rx494_eos, rx494_fail1056
    substr $S10, rx494_tgt, rx494_pos, 4
    ne $S10, ucs4:"else", rx494_fail1056
    add rx494_pos, 4
    ge rx494_pos, rx494_eos, rx494_fail1056
    is_cclass $I11, .CCLASS_WHITESPACE, rx494_tgt, rx494_pos
    unless $I11, rx494_fail1056
    add rx494_pos, 1
    repr_bind_attr_int rx494_cur, rx494_curclass, "$!pos", rx494_pos
    $P11 = rx494_cur."ws"()
    repr_get_attr_int $I11, $P11, rx494_curclass, "$!pos"
    lt $I11, 0, rx494_fail1056
    repr_get_attr_int rx494_pos, $P11, rx494_curclass, "$!pos"
    repr_bind_attr_int rx494_cur, rx494_curclass, "$!pos", rx494_pos
    $P11 = rx494_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx494_curclass, "$!pos"
    lt $I11, 0, rx494_fail1056
    nqp_rxmark rx494_bstack, rxsubrule509_pass1079, -1, 0
  rxsubrule509_pass1079:
    rx494_cstack = rx494_cur."!cursor_capture"($P11, "else")
    repr_get_attr_int rx494_pos, $P11, rx494_curclass, "$!pos"
    repr_bind_attr_int rx494_cur, rx494_curclass, "$!pos", rx494_pos
    $P11 = rx494_cur."ws"()
    repr_get_attr_int $I11, $P11, rx494_curclass, "$!pos"
    lt $I11, 0, rx494_fail1056
    repr_get_attr_int rx494_pos, $P11, rx494_curclass, "$!pos"
    nqp_rxpeek $I19, rx494_bstack, rxquantr506_done1076
    inc $I19
    inc $I19
    set rx494_rep, rx494_bstack[$I19]
    nqp_rxcommit rx494_bstack, rxquantr506_done1076
    inc rx494_rep
  rxquantr506_done1076:
    repr_bind_attr_int rx494_cur, rx494_curclass, "$!pos", rx494_pos
    $P11 = rx494_cur."ws"()
    repr_get_attr_int $I11, $P11, rx494_curclass, "$!pos"
    lt $I11, 0, rx494_fail1056
    repr_get_attr_int rx494_pos, $P11, rx494_curclass, "$!pos"
    rx494_cur."!cursor_pass"(rx494_pos, "statement_control:sym<if>", 'backtrack'=>1)
    .return (rx494_cur)
  rx494_restart1055:
    repr_get_attr_obj rx494_cstack, rx494_cur, rx494_curclass, "$!cstack"
  rx494_fail1056:
    unless rx494_bstack, rx494_done1054
    pop $I19, rx494_bstack
    if_null rx494_cstack, rx494_cstack_done1059
    unless rx494_cstack, rx494_cstack_done1059
    dec $I19
    set $P11, rx494_cstack[$I19]
  rx494_cstack_done1059:
    pop rx494_rep, rx494_bstack
    pop rx494_pos, rx494_bstack
    pop $I19, rx494_bstack
    lt rx494_pos, -1, rx494_done1054
    lt rx494_pos, 0, rx494_fail1056
    eq $I19, 0, rx494_fail1056
    nqp_islist $I20, rx494_cstack
    unless $I20, rx494_jump1057
    elements $I18, rx494_bstack
    le $I18, 0, rx494_cut1058
    dec $I18
    set $I18, rx494_bstack[$I18]
  rx494_cut1058:
    assign rx494_cstack, $I18
  rx494_jump1057:
    jump $I19
  rx494_done1054:
    rx494_cur."!cursor_fail"()
    .return (rx494_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<unless>" :subid("cuid_65_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 861
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_66_1361734139.417' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx512_start
    .local string rx512_tgt
    .local int rx512_pos
    .local int rx512_off
    .local int rx512_eos
    .local int rx512_rep
    .local pmc rx512_cur
    .local pmc rx512_curclass
    .local pmc rx512_bstack
    .local pmc rx512_cstack
    rx512_start = self."!cursor_start_all"()
    set rx512_cur, rx512_start[0]
    set rx512_tgt, rx512_start[1]
    set rx512_pos, rx512_start[2]
    set rx512_curclass, rx512_start[3]
    set rx512_bstack, rx512_start[4]
    set $I19, rx512_start[5]
    store_lex unicode:"$\x{a2}", rx512_cur
    length rx512_eos, rx512_tgt
    eq $I19, 1, rx512_restart1084
    gt rx512_pos, rx512_eos, rx512_fail1085
    repr_get_attr_int $I11, self, rx512_curclass, "$!from"
    ne $I11, -1, rxscan513_done1091
    goto rxscan513_scan1090
  rxscan513_loop1089:
    inc rx512_pos
    gt rx512_pos, rx512_eos, rx512_fail1085
    repr_bind_attr_int rx512_cur, rx512_curclass, "$!from", rx512_pos
  rxscan513_scan1090:
    nqp_rxmark rx512_bstack, rxscan513_loop1089, rx512_pos, 0
  rxscan513_done1091:
    nqp_rxmark rx512_bstack, rxcap514_fail1093, rx512_pos, 0
    add $I11, rx512_pos, 6
    gt $I11, rx512_eos, rx512_fail1085
    substr $S10, rx512_tgt, rx512_pos, 6
    ne $S10, ucs4:"unless", rx512_fail1085
    add rx512_pos, 6
    nqp_rxpeek $I19, rx512_bstack, rxcap514_fail1093
    inc $I19
    set $I11, rx512_bstack[$I19]
    repr_bind_attr_int rx512_cur, rx512_curclass, "$!pos", rx512_pos
    $P11 = rx512_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx512_pos)
    rx512_cstack = rx512_cur."!cursor_capture"($P11, "sym")
    goto rxcap514_done1092
  rxcap514_fail1093:
    goto rx512_fail1085
  rxcap514_done1092:
    ge rx512_pos, rx512_eos, rx512_fail1085
    is_cclass $I11, .CCLASS_WHITESPACE, rx512_tgt, rx512_pos
    unless $I11, rx512_fail1085
    add rx512_pos, 1
    repr_bind_attr_int rx512_cur, rx512_curclass, "$!pos", rx512_pos
    $P11 = rx512_cur."ws"()
    repr_get_attr_int $I11, $P11, rx512_curclass, "$!pos"
    lt $I11, 0, rx512_fail1085
    repr_get_attr_int rx512_pos, $P11, rx512_curclass, "$!pos"
    repr_bind_attr_int rx512_cur, rx512_curclass, "$!pos", rx512_pos
    $P11 = rx512_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx512_curclass, "$!pos"
    lt $I11, 0, rx512_fail1085
    nqp_rxmark rx512_bstack, rxsubrule516_pass1095, -1, 0
  rxsubrule516_pass1095:
    rx512_cstack = rx512_cur."!cursor_capture"($P11, "xblock")
    repr_get_attr_int rx512_pos, $P11, rx512_curclass, "$!pos"
    repr_bind_attr_int rx512_cur, rx512_curclass, "$!pos", rx512_pos
    $P11 = rx512_cur."ws"()
    repr_get_attr_int $I11, $P11, rx512_curclass, "$!pos"
    lt $I11, 0, rx512_fail1085
    repr_get_attr_int rx512_pos, $P11, rx512_curclass, "$!pos"
  alt518_01098:
    nqp_rxmark rx512_bstack, alt518_11111, rx512_pos, 0
    repr_bind_attr_int rx512_cur, rx512_curclass, "$!pos", rx512_pos
    $P11 = rx512_cur."ws"()
    repr_get_attr_int $I11, $P11, rx512_curclass, "$!pos"
    lt $I11, 0, rx512_fail1085
    repr_get_attr_int rx512_pos, $P11, rx512_curclass, "$!pos"
    .const 'Sub' $P5001 = 'cuid_66_1361734139.417' 
    capture_lex $P5001
    repr_bind_attr_int rx512_cur, rx512_curclass, "$!pos", rx512_pos
    $P11 = rx512_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx512_curclass, "$!pos"
    ge $I11, 0, rx512_fail1085
    repr_bind_attr_int rx512_cur, rx512_curclass, "$!pos", rx512_pos
    $P11 = rx512_cur."ws"()
    repr_get_attr_int $I11, $P11, rx512_curclass, "$!pos"
    lt $I11, 0, rx512_fail1085
    repr_get_attr_int rx512_pos, $P11, rx512_curclass, "$!pos"
    goto alt518_end1097
  alt518_11111:
    repr_bind_attr_int rx512_cur, rx512_curclass, "$!pos", rx512_pos
    $P11 = rx512_cur."ws"()
    repr_get_attr_int $I11, $P11, rx512_curclass, "$!pos"
    lt $I11, 0, rx512_fail1085
    repr_get_attr_int rx512_pos, $P11, rx512_curclass, "$!pos"
    repr_bind_attr_int rx512_cur, rx512_curclass, "$!pos", rx512_pos
    $P11 = rx512_cur."panic"("unless does not take \"else\", please rewrite using \"if\"")
    repr_get_attr_int $I11, $P11, rx512_curclass, "$!pos"
    lt $I11, 0, rx512_fail1085
    repr_get_attr_int rx512_pos, $P11, rx512_curclass, "$!pos"
    repr_bind_attr_int rx512_cur, rx512_curclass, "$!pos", rx512_pos
    $P11 = rx512_cur."ws"()
    repr_get_attr_int $I11, $P11, rx512_curclass, "$!pos"
    lt $I11, 0, rx512_fail1085
    repr_get_attr_int rx512_pos, $P11, rx512_curclass, "$!pos"
  alt518_end1097:
    repr_bind_attr_int rx512_cur, rx512_curclass, "$!pos", rx512_pos
    $P11 = rx512_cur."ws"()
    repr_get_attr_int $I11, $P11, rx512_curclass, "$!pos"
    lt $I11, 0, rx512_fail1085
    repr_get_attr_int rx512_pos, $P11, rx512_curclass, "$!pos"
    rx512_cur."!cursor_pass"(rx512_pos, "statement_control:sym<unless>", 'backtrack'=>1)
    .return (rx512_cur)
  rx512_restart1084:
    repr_get_attr_obj rx512_cstack, rx512_cur, rx512_curclass, "$!cstack"
  rx512_fail1085:
    unless rx512_bstack, rx512_done1083
    pop $I19, rx512_bstack
    if_null rx512_cstack, rx512_cstack_done1088
    unless rx512_cstack, rx512_cstack_done1088
    dec $I19
    set $P11, rx512_cstack[$I19]
  rx512_cstack_done1088:
    pop rx512_rep, rx512_bstack
    pop rx512_pos, rx512_bstack
    pop $I19, rx512_bstack
    lt rx512_pos, -1, rx512_done1083
    lt rx512_pos, 0, rx512_fail1085
    eq $I19, 0, rx512_fail1085
    nqp_islist $I20, rx512_cstack
    unless $I20, rx512_jump1086
    elements $I18, rx512_bstack
    le $I18, 0, rx512_cut1087
    dec $I18
    set $I18, rx512_bstack[$I18]
  rx512_cut1087:
    assign rx512_cstack, $I18
  rx512_jump1086:
    jump $I19
  rx512_done1083:
    rx512_cur."!cursor_fail"()
    .return (rx512_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_66_1361734139.417") :anon :lex :outer("cuid_65_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx520_start
    .local string rx520_tgt
    .local int rx520_pos
    .local int rx520_off
    .local int rx520_eos
    .local int rx520_rep
    .local pmc rx520_cur
    .local pmc rx520_curclass
    .local pmc rx520_bstack
    .local pmc rx520_cstack
    rx520_start = self."!cursor_start_all"()
    set rx520_cur, rx520_start[0]
    set rx520_tgt, rx520_start[1]
    set rx520_pos, rx520_start[2]
    set rx520_curclass, rx520_start[3]
    set rx520_bstack, rx520_start[4]
    set $I19, rx520_start[5]
    store_lex unicode:"$\x{a2}", rx520_cur
    length rx520_eos, rx520_tgt
    eq $I19, 1, rx520_restart1102
    gt rx520_pos, rx520_eos, rx520_fail1103
    repr_get_attr_int $I11, self, rx520_curclass, "$!from"
    ne $I11, -1, rxscan521_done1109
    goto rxscan521_scan1108
  rxscan521_loop1107:
    inc rx520_pos
    gt rx520_pos, rx520_eos, rx520_fail1103
    repr_bind_attr_int rx520_cur, rx520_curclass, "$!from", rx520_pos
  rxscan521_scan1108:
    nqp_rxmark rx520_bstack, rxscan521_loop1107, rx520_pos, 0
  rxscan521_done1109:
    add $I11, rx520_pos, 4
    gt $I11, rx520_eos, rx520_fail1103
    substr $S10, rx520_tgt, rx520_pos, 4
    ne $S10, ucs4:"else", rx520_fail1103
    add rx520_pos, 4
    rx520_cur."!cursor_pass"(rx520_pos, 'backtrack'=>1)
    .return (rx520_cur)
  rx520_restart1102:
    repr_get_attr_obj rx520_cstack, rx520_cur, rx520_curclass, "$!cstack"
  rx520_fail1103:
    unless rx520_bstack, rx520_done1101
    pop $I19, rx520_bstack
    if_null rx520_cstack, rx520_cstack_done1106
    unless rx520_cstack, rx520_cstack_done1106
    dec $I19
    set $P11, rx520_cstack[$I19]
  rx520_cstack_done1106:
    pop rx520_rep, rx520_bstack
    pop rx520_pos, rx520_bstack
    pop $I19, rx520_bstack
    lt rx520_pos, -1, rx520_done1101
    lt rx520_pos, 0, rx520_fail1103
    eq $I19, 0, rx520_fail1103
    nqp_islist $I20, rx520_cstack
    unless $I20, rx520_jump1104
    elements $I18, rx520_bstack
    le $I18, 0, rx520_cut1105
    dec $I18
    set $I18, rx520_bstack[$I18]
  rx520_cut1105:
    assign rx520_cstack, $I18
  rx520_jump1104:
    jump $I19
  rx520_done1101:
    rx520_cur."!cursor_fail"()
    .return (rx520_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<while>" :subid("cuid_67_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 867
    .param pmc _lex_param_0 
    .lex "$*CONTROL_USED", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx527_start
    .local string rx527_tgt
    .local int rx527_pos
    .local int rx527_off
    .local int rx527_eos
    .local int rx527_rep
    .local pmc rx527_cur
    .local pmc rx527_curclass
    .local pmc rx527_bstack
    .local pmc rx527_cstack
    rx527_start = self."!cursor_start_all"()
    set rx527_cur, rx527_start[0]
    set rx527_tgt, rx527_start[1]
    set rx527_pos, rx527_start[2]
    set rx527_curclass, rx527_start[3]
    set rx527_bstack, rx527_start[4]
    set $I19, rx527_start[5]
    store_lex unicode:"$\x{a2}", rx527_cur
    length rx527_eos, rx527_tgt
    eq $I19, 1, rx527_restart1118
    gt rx527_pos, rx527_eos, rx527_fail1119
    repr_get_attr_int $I11, self, rx527_curclass, "$!from"
    ne $I11, -1, rxscan528_done1125
    goto rxscan528_scan1124
  rxscan528_loop1123:
    inc rx527_pos
    gt rx527_pos, rx527_eos, rx527_fail1119
    repr_bind_attr_int rx527_cur, rx527_curclass, "$!from", rx527_pos
  rxscan528_scan1124:
    nqp_rxmark rx527_bstack, rxscan528_loop1123, rx527_pos, 0
  rxscan528_done1125:
    repr_bind_attr_int rx527_cur, rx527_curclass, "$!pos", rx527_pos
    store_lex unicode:"$\x{a2}", rx527_cur
    box $P5002, 0
    set $P101, $P5002
    nqp_rxmark rx527_bstack, rxcap529_fail1127, rx527_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt530_01129
    nqp_push_label $P11, alt530_11130
    nqp_rxmark rx527_bstack, alt530_end1128, -1, 0
    rx527_cur."!alt"(rx527_pos, "alt_nfa__12_1361734141.11", $P11)
    goto rx527_fail1119
  alt530_01129:
    add $I11, rx527_pos, 5
    gt $I11, rx527_eos, rx527_fail1119
    substr $S10, rx527_tgt, rx527_pos, 5
    ne $S10, ucs4:"while", rx527_fail1119
    add rx527_pos, 5
    goto alt530_end1128
  alt530_11130:
    add $I11, rx527_pos, 5
    gt $I11, rx527_eos, rx527_fail1119
    substr $S10, rx527_tgt, rx527_pos, 5
    ne $S10, ucs4:"until", rx527_fail1119
    add rx527_pos, 5
    goto alt530_end1128
  alt530_end1128:
    nqp_rxcommit rx527_bstack, alt530_end1128
    nqp_rxpeek $I19, rx527_bstack, rxcap529_fail1127
    inc $I19
    set $I11, rx527_bstack[$I19]
    repr_bind_attr_int rx527_cur, rx527_curclass, "$!pos", rx527_pos
    $P11 = rx527_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx527_pos)
    rx527_cstack = rx527_cur."!cursor_capture"($P11, "sym")
    goto rxcap529_done1126
  rxcap529_fail1127:
    goto rx527_fail1119
  rxcap529_done1126:
    ge rx527_pos, rx527_eos, rx527_fail1119
    is_cclass $I11, .CCLASS_WHITESPACE, rx527_tgt, rx527_pos
    unless $I11, rx527_fail1119
    add rx527_pos, 1
    repr_bind_attr_int rx527_cur, rx527_curclass, "$!pos", rx527_pos
    $P11 = rx527_cur."ws"()
    repr_get_attr_int $I11, $P11, rx527_curclass, "$!pos"
    lt $I11, 0, rx527_fail1119
    repr_get_attr_int rx527_pos, $P11, rx527_curclass, "$!pos"
    repr_bind_attr_int rx527_cur, rx527_curclass, "$!pos", rx527_pos
    $P11 = rx527_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx527_curclass, "$!pos"
    lt $I11, 0, rx527_fail1119
    nqp_rxmark rx527_bstack, rxsubrule532_pass1132, -1, 0
  rxsubrule532_pass1132:
    rx527_cstack = rx527_cur."!cursor_capture"($P11, "xblock")
    repr_get_attr_int rx527_pos, $P11, rx527_curclass, "$!pos"
    repr_bind_attr_int rx527_cur, rx527_curclass, "$!pos", rx527_pos
    $P11 = rx527_cur."ws"()
    repr_get_attr_int $I11, $P11, rx527_curclass, "$!pos"
    lt $I11, 0, rx527_fail1119
    repr_get_attr_int rx527_pos, $P11, rx527_curclass, "$!pos"
    rx527_cur."!cursor_pass"(rx527_pos, "statement_control:sym<while>", 'backtrack'=>1)
    .return (rx527_cur)
  rx527_restart1118:
    repr_get_attr_obj rx527_cstack, rx527_cur, rx527_curclass, "$!cstack"
  rx527_fail1119:
    unless rx527_bstack, rx527_done1117
    pop $I19, rx527_bstack
    if_null rx527_cstack, rx527_cstack_done1122
    unless rx527_cstack, rx527_cstack_done1122
    dec $I19
    set $P11, rx527_cstack[$I19]
  rx527_cstack_done1122:
    pop rx527_rep, rx527_bstack
    pop rx527_pos, rx527_bstack
    pop $I19, rx527_bstack
    lt rx527_pos, -1, rx527_done1117
    lt rx527_pos, 0, rx527_fail1119
    eq $I19, 0, rx527_fail1119
    nqp_islist $I20, rx527_cstack
    unless $I20, rx527_jump1120
    elements $I18, rx527_bstack
    le $I18, 0, rx527_cut1121
    dec $I18
    set $I18, rx527_bstack[$I18]
  rx527_cut1121:
    assign rx527_cstack, $I18
  rx527_jump1120:
    jump $I19
  rx527_done1117:
    rx527_cur."!cursor_fail"()
    .return (rx527_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<repeat>" :subid("cuid_68_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 873
    .param pmc _lex_param_0 
    .lex "$*CONTROL_USED", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx534_start
    .local string rx534_tgt
    .local int rx534_pos
    .local int rx534_off
    .local int rx534_eos
    .local int rx534_rep
    .local pmc rx534_cur
    .local pmc rx534_curclass
    .local pmc rx534_bstack
    .local pmc rx534_cstack
    rx534_start = self."!cursor_start_all"()
    set rx534_cur, rx534_start[0]
    set rx534_tgt, rx534_start[1]
    set rx534_pos, rx534_start[2]
    set rx534_curclass, rx534_start[3]
    set rx534_bstack, rx534_start[4]
    set $I19, rx534_start[5]
    store_lex unicode:"$\x{a2}", rx534_cur
    length rx534_eos, rx534_tgt
    eq $I19, 1, rx534_restart1136
    gt rx534_pos, rx534_eos, rx534_fail1137
    repr_get_attr_int $I11, self, rx534_curclass, "$!from"
    ne $I11, -1, rxscan535_done1143
    goto rxscan535_scan1142
  rxscan535_loop1141:
    inc rx534_pos
    gt rx534_pos, rx534_eos, rx534_fail1137
    repr_bind_attr_int rx534_cur, rx534_curclass, "$!from", rx534_pos
  rxscan535_scan1142:
    nqp_rxmark rx534_bstack, rxscan535_loop1141, rx534_pos, 0
  rxscan535_done1143:
    repr_bind_attr_int rx534_cur, rx534_curclass, "$!pos", rx534_pos
    store_lex unicode:"$\x{a2}", rx534_cur
    box $P5002, 0
    set $P101, $P5002
    nqp_rxmark rx534_bstack, rxcap536_fail1145, rx534_pos, 0
    add $I11, rx534_pos, 6
    gt $I11, rx534_eos, rx534_fail1137
    substr $S10, rx534_tgt, rx534_pos, 6
    ne $S10, ucs4:"repeat", rx534_fail1137
    add rx534_pos, 6
    nqp_rxpeek $I19, rx534_bstack, rxcap536_fail1145
    inc $I19
    set $I11, rx534_bstack[$I19]
    repr_bind_attr_int rx534_cur, rx534_curclass, "$!pos", rx534_pos
    $P11 = rx534_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx534_pos)
    rx534_cstack = rx534_cur."!cursor_capture"($P11, "sym")
    goto rxcap536_done1144
  rxcap536_fail1145:
    goto rx534_fail1137
  rxcap536_done1144:
    ge rx534_pos, rx534_eos, rx534_fail1137
    is_cclass $I11, .CCLASS_WHITESPACE, rx534_tgt, rx534_pos
    unless $I11, rx534_fail1137
    add rx534_pos, 1
    repr_bind_attr_int rx534_cur, rx534_curclass, "$!pos", rx534_pos
    $P11 = rx534_cur."ws"()
    repr_get_attr_int $I11, $P11, rx534_curclass, "$!pos"
    lt $I11, 0, rx534_fail1137
    repr_get_attr_int rx534_pos, $P11, rx534_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt538_01148
    nqp_push_label $P11, alt538_11158
    nqp_rxmark rx534_bstack, alt538_end1147, -1, 0
    rx534_cur."!alt"(rx534_pos, "alt_nfa__15_1361734141.133", $P11)
    goto rx534_fail1137
  alt538_01148:
    repr_bind_attr_int rx534_cur, rx534_curclass, "$!pos", rx534_pos
    $P11 = rx534_cur."ws"()
    repr_get_attr_int $I11, $P11, rx534_curclass, "$!pos"
    lt $I11, 0, rx534_fail1137
    repr_get_attr_int rx534_pos, $P11, rx534_curclass, "$!pos"
    nqp_rxmark rx534_bstack, rxcap540_fail1151, rx534_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt541_01153
    nqp_push_label $P11, alt541_11154
    nqp_rxmark rx534_bstack, alt541_end1152, -1, 0
    rx534_cur."!alt"(rx534_pos, "alt_nfa__13_1361734141.132", $P11)
    goto rx534_fail1137
  alt541_01153:
    add $I11, rx534_pos, 5
    gt $I11, rx534_eos, rx534_fail1137
    substr $S10, rx534_tgt, rx534_pos, 5
    ne $S10, ucs4:"while", rx534_fail1137
    add rx534_pos, 5
    goto alt541_end1152
  alt541_11154:
    add $I11, rx534_pos, 5
    gt $I11, rx534_eos, rx534_fail1137
    substr $S10, rx534_tgt, rx534_pos, 5
    ne $S10, ucs4:"until", rx534_fail1137
    add rx534_pos, 5
    goto alt541_end1152
  alt541_end1152:
    nqp_rxcommit rx534_bstack, alt541_end1152
    nqp_rxpeek $I19, rx534_bstack, rxcap540_fail1151
    inc $I19
    set $I11, rx534_bstack[$I19]
    repr_bind_attr_int rx534_cur, rx534_curclass, "$!pos", rx534_pos
    $P11 = rx534_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx534_pos)
    rx534_cstack = rx534_cur."!cursor_capture"($P11, "wu")
    goto rxcap540_done1150
  rxcap540_fail1151:
    goto rx534_fail1137
  rxcap540_done1150:
    ge rx534_pos, rx534_eos, rx534_fail1137
    is_cclass $I11, .CCLASS_WHITESPACE, rx534_tgt, rx534_pos
    unless $I11, rx534_fail1137
    add rx534_pos, 1
    repr_bind_attr_int rx534_cur, rx534_curclass, "$!pos", rx534_pos
    $P11 = rx534_cur."ws"()
    repr_get_attr_int $I11, $P11, rx534_curclass, "$!pos"
    lt $I11, 0, rx534_fail1137
    repr_get_attr_int rx534_pos, $P11, rx534_curclass, "$!pos"
    repr_bind_attr_int rx534_cur, rx534_curclass, "$!pos", rx534_pos
    $P11 = rx534_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx534_curclass, "$!pos"
    lt $I11, 0, rx534_fail1137
    nqp_rxmark rx534_bstack, rxsubrule543_pass1156, -1, 0
  rxsubrule543_pass1156:
    rx534_cstack = rx534_cur."!cursor_capture"($P11, "xblock")
    repr_get_attr_int rx534_pos, $P11, rx534_curclass, "$!pos"
    repr_bind_attr_int rx534_cur, rx534_curclass, "$!pos", rx534_pos
    $P11 = rx534_cur."ws"()
    repr_get_attr_int $I11, $P11, rx534_curclass, "$!pos"
    lt $I11, 0, rx534_fail1137
    repr_get_attr_int rx534_pos, $P11, rx534_curclass, "$!pos"
    goto alt538_end1147
  alt538_11158:
    repr_bind_attr_int rx534_cur, rx534_curclass, "$!pos", rx534_pos
    $P11 = rx534_cur."ws"()
    repr_get_attr_int $I11, $P11, rx534_curclass, "$!pos"
    lt $I11, 0, rx534_fail1137
    repr_get_attr_int rx534_pos, $P11, rx534_curclass, "$!pos"
    repr_bind_attr_int rx534_cur, rx534_curclass, "$!pos", rx534_pos
    $P11 = rx534_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx534_curclass, "$!pos"
    lt $I11, 0, rx534_fail1137
    nqp_rxmark rx534_bstack, rxsubrule546_pass1160, -1, 0
  rxsubrule546_pass1160:
    rx534_cstack = rx534_cur."!cursor_capture"($P11, "pblock")
    repr_get_attr_int rx534_pos, $P11, rx534_curclass, "$!pos"
    repr_bind_attr_int rx534_cur, rx534_curclass, "$!pos", rx534_pos
    $P11 = rx534_cur."ws"()
    repr_get_attr_int $I11, $P11, rx534_curclass, "$!pos"
    lt $I11, 0, rx534_fail1137
    repr_get_attr_int rx534_pos, $P11, rx534_curclass, "$!pos"
    nqp_rxmark rx534_bstack, rxcap548_fail1163, rx534_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt549_01165
    nqp_push_label $P11, alt549_11166
    nqp_rxmark rx534_bstack, alt549_end1164, -1, 0
    rx534_cur."!alt"(rx534_pos, "alt_nfa__14_1361734141.133", $P11)
    goto rx534_fail1137
  alt549_01165:
    add $I11, rx534_pos, 5
    gt $I11, rx534_eos, rx534_fail1137
    substr $S10, rx534_tgt, rx534_pos, 5
    ne $S10, ucs4:"while", rx534_fail1137
    add rx534_pos, 5
    goto alt549_end1164
  alt549_11166:
    add $I11, rx534_pos, 5
    gt $I11, rx534_eos, rx534_fail1137
    substr $S10, rx534_tgt, rx534_pos, 5
    ne $S10, ucs4:"until", rx534_fail1137
    add rx534_pos, 5
    goto alt549_end1164
  alt549_end1164:
    nqp_rxcommit rx534_bstack, alt549_end1164
    nqp_rxpeek $I19, rx534_bstack, rxcap548_fail1163
    inc $I19
    set $I11, rx534_bstack[$I19]
    repr_bind_attr_int rx534_cur, rx534_curclass, "$!pos", rx534_pos
    $P11 = rx534_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx534_pos)
    rx534_cstack = rx534_cur."!cursor_capture"($P11, "wu")
    goto rxcap548_done1162
  rxcap548_fail1163:
    goto rx534_fail1137
  rxcap548_done1162:
    ge rx534_pos, rx534_eos, rx534_fail1137
    is_cclass $I11, .CCLASS_WHITESPACE, rx534_tgt, rx534_pos
    unless $I11, rx534_fail1137
    add rx534_pos, 1
    repr_bind_attr_int rx534_cur, rx534_curclass, "$!pos", rx534_pos
    $P11 = rx534_cur."ws"()
    repr_get_attr_int $I11, $P11, rx534_curclass, "$!pos"
    lt $I11, 0, rx534_fail1137
    repr_get_attr_int rx534_pos, $P11, rx534_curclass, "$!pos"
    repr_bind_attr_int rx534_cur, rx534_curclass, "$!pos", rx534_pos
    $P11 = rx534_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx534_curclass, "$!pos"
    lt $I11, 0, rx534_fail1137
    nqp_rxmark rx534_bstack, rxsubrule551_pass1168, -1, 0
  rxsubrule551_pass1168:
    rx534_cstack = rx534_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx534_pos, $P11, rx534_curclass, "$!pos"
    repr_bind_attr_int rx534_cur, rx534_curclass, "$!pos", rx534_pos
    $P11 = rx534_cur."ws"()
    repr_get_attr_int $I11, $P11, rx534_curclass, "$!pos"
    lt $I11, 0, rx534_fail1137
    repr_get_attr_int rx534_pos, $P11, rx534_curclass, "$!pos"
    goto alt538_end1147
  alt538_end1147:
    nqp_rxcommit rx534_bstack, alt538_end1147
    repr_bind_attr_int rx534_cur, rx534_curclass, "$!pos", rx534_pos
    $P11 = rx534_cur."ws"()
    repr_get_attr_int $I11, $P11, rx534_curclass, "$!pos"
    lt $I11, 0, rx534_fail1137
    repr_get_attr_int rx534_pos, $P11, rx534_curclass, "$!pos"
    rx534_cur."!cursor_pass"(rx534_pos, "statement_control:sym<repeat>", 'backtrack'=>1)
    .return (rx534_cur)
  rx534_restart1136:
    repr_get_attr_obj rx534_cstack, rx534_cur, rx534_curclass, "$!cstack"
  rx534_fail1137:
    unless rx534_bstack, rx534_done1135
    pop $I19, rx534_bstack
    if_null rx534_cstack, rx534_cstack_done1140
    unless rx534_cstack, rx534_cstack_done1140
    dec $I19
    set $P11, rx534_cstack[$I19]
  rx534_cstack_done1140:
    pop rx534_rep, rx534_bstack
    pop rx534_pos, rx534_bstack
    pop $I19, rx534_bstack
    lt rx534_pos, -1, rx534_done1135
    lt rx534_pos, 0, rx534_fail1137
    eq $I19, 0, rx534_fail1137
    nqp_islist $I20, rx534_cstack
    unless $I20, rx534_jump1138
    elements $I18, rx534_bstack
    le $I18, 0, rx534_cut1139
    dec $I18
    set $I18, rx534_bstack[$I18]
  rx534_cut1139:
    assign rx534_cstack, $I18
  rx534_jump1138:
    jump $I19
  rx534_done1135:
    rx534_cur."!cursor_fail"()
    .return (rx534_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<for>" :subid("cuid_69_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 882
    .param pmc _lex_param_0 
    .lex "$*CONTROL_USED", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx554_start
    .local string rx554_tgt
    .local int rx554_pos
    .local int rx554_off
    .local int rx554_eos
    .local int rx554_rep
    .local pmc rx554_cur
    .local pmc rx554_curclass
    .local pmc rx554_bstack
    .local pmc rx554_cstack
    rx554_start = self."!cursor_start_all"()
    set rx554_cur, rx554_start[0]
    set rx554_tgt, rx554_start[1]
    set rx554_pos, rx554_start[2]
    set rx554_curclass, rx554_start[3]
    set rx554_bstack, rx554_start[4]
    set $I19, rx554_start[5]
    store_lex unicode:"$\x{a2}", rx554_cur
    length rx554_eos, rx554_tgt
    eq $I19, 1, rx554_restart1173
    gt rx554_pos, rx554_eos, rx554_fail1174
    repr_get_attr_int $I11, self, rx554_curclass, "$!from"
    ne $I11, -1, rxscan555_done1180
    goto rxscan555_scan1179
  rxscan555_loop1178:
    inc rx554_pos
    gt rx554_pos, rx554_eos, rx554_fail1174
    repr_bind_attr_int rx554_cur, rx554_curclass, "$!from", rx554_pos
  rxscan555_scan1179:
    nqp_rxmark rx554_bstack, rxscan555_loop1178, rx554_pos, 0
  rxscan555_done1180:
    repr_bind_attr_int rx554_cur, rx554_curclass, "$!pos", rx554_pos
    store_lex unicode:"$\x{a2}", rx554_cur
    box $P5002, 0
    set $P101, $P5002
    nqp_rxmark rx554_bstack, rxcap556_fail1182, rx554_pos, 0
    add $I11, rx554_pos, 3
    gt $I11, rx554_eos, rx554_fail1174
    substr $S10, rx554_tgt, rx554_pos, 3
    ne $S10, ucs4:"for", rx554_fail1174
    add rx554_pos, 3
    nqp_rxpeek $I19, rx554_bstack, rxcap556_fail1182
    inc $I19
    set $I11, rx554_bstack[$I19]
    repr_bind_attr_int rx554_cur, rx554_curclass, "$!pos", rx554_pos
    $P11 = rx554_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx554_pos)
    rx554_cstack = rx554_cur."!cursor_capture"($P11, "sym")
    goto rxcap556_done1181
  rxcap556_fail1182:
    goto rx554_fail1174
  rxcap556_done1181:
    ge rx554_pos, rx554_eos, rx554_fail1174
    is_cclass $I11, .CCLASS_WHITESPACE, rx554_tgt, rx554_pos
    unless $I11, rx554_fail1174
    add rx554_pos, 1
    repr_bind_attr_int rx554_cur, rx554_curclass, "$!pos", rx554_pos
    $P11 = rx554_cur."ws"()
    repr_get_attr_int $I11, $P11, rx554_curclass, "$!pos"
    lt $I11, 0, rx554_fail1174
    repr_get_attr_int rx554_pos, $P11, rx554_curclass, "$!pos"
    repr_bind_attr_int rx554_cur, rx554_curclass, "$!pos", rx554_pos
    $P11 = rx554_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx554_curclass, "$!pos"
    lt $I11, 0, rx554_fail1174
    nqp_rxmark rx554_bstack, rxsubrule558_pass1184, -1, 0
  rxsubrule558_pass1184:
    rx554_cstack = rx554_cur."!cursor_capture"($P11, "xblock")
    repr_get_attr_int rx554_pos, $P11, rx554_curclass, "$!pos"
    repr_bind_attr_int rx554_cur, rx554_curclass, "$!pos", rx554_pos
    $P11 = rx554_cur."ws"()
    repr_get_attr_int $I11, $P11, rx554_curclass, "$!pos"
    lt $I11, 0, rx554_fail1174
    repr_get_attr_int rx554_pos, $P11, rx554_curclass, "$!pos"
    rx554_cur."!cursor_pass"(rx554_pos, "statement_control:sym<for>", 'backtrack'=>1)
    .return (rx554_cur)
  rx554_restart1173:
    repr_get_attr_obj rx554_cstack, rx554_cur, rx554_curclass, "$!cstack"
  rx554_fail1174:
    unless rx554_bstack, rx554_done1172
    pop $I19, rx554_bstack
    if_null rx554_cstack, rx554_cstack_done1177
    unless rx554_cstack, rx554_cstack_done1177
    dec $I19
    set $P11, rx554_cstack[$I19]
  rx554_cstack_done1177:
    pop rx554_rep, rx554_bstack
    pop rx554_pos, rx554_bstack
    pop $I19, rx554_bstack
    lt rx554_pos, -1, rx554_done1172
    lt rx554_pos, 0, rx554_fail1174
    eq $I19, 0, rx554_fail1174
    nqp_islist $I20, rx554_cstack
    unless $I20, rx554_jump1175
    elements $I18, rx554_bstack
    le $I18, 0, rx554_cut1176
    dec $I18
    set $I18, rx554_bstack[$I18]
  rx554_cut1176:
    assign rx554_cstack, $I18
  rx554_jump1175:
    jump $I19
  rx554_done1172:
    rx554_cur."!cursor_fail"()
    .return (rx554_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<CATCH>" :subid("cuid_70_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 888
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx560_start
    .local string rx560_tgt
    .local int rx560_pos
    .local int rx560_off
    .local int rx560_eos
    .local int rx560_rep
    .local pmc rx560_cur
    .local pmc rx560_curclass
    .local pmc rx560_bstack
    .local pmc rx560_cstack
    rx560_start = self."!cursor_start_all"()
    set rx560_cur, rx560_start[0]
    set rx560_tgt, rx560_start[1]
    set rx560_pos, rx560_start[2]
    set rx560_curclass, rx560_start[3]
    set rx560_bstack, rx560_start[4]
    set $I19, rx560_start[5]
    store_lex unicode:"$\x{a2}", rx560_cur
    length rx560_eos, rx560_tgt
    eq $I19, 1, rx560_restart1188
    gt rx560_pos, rx560_eos, rx560_fail1189
    repr_get_attr_int $I11, self, rx560_curclass, "$!from"
    ne $I11, -1, rxscan561_done1195
    goto rxscan561_scan1194
  rxscan561_loop1193:
    inc rx560_pos
    gt rx560_pos, rx560_eos, rx560_fail1189
    repr_bind_attr_int rx560_cur, rx560_curclass, "$!from", rx560_pos
  rxscan561_scan1194:
    nqp_rxmark rx560_bstack, rxscan561_loop1193, rx560_pos, 0
  rxscan561_done1195:
    nqp_rxmark rx560_bstack, rxcap562_fail1197, rx560_pos, 0
    add $I11, rx560_pos, 5
    gt $I11, rx560_eos, rx560_fail1189
    substr $S10, rx560_tgt, rx560_pos, 5
    ne $S10, ucs4:"CATCH", rx560_fail1189
    add rx560_pos, 5
    nqp_rxpeek $I19, rx560_bstack, rxcap562_fail1197
    inc $I19
    set $I11, rx560_bstack[$I19]
    repr_bind_attr_int rx560_cur, rx560_curclass, "$!pos", rx560_pos
    $P11 = rx560_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx560_pos)
    rx560_cstack = rx560_cur."!cursor_capture"($P11, "sym")
    goto rxcap562_done1196
  rxcap562_fail1197:
    goto rx560_fail1189
  rxcap562_done1196:
    ge rx560_pos, rx560_eos, rx560_fail1189
    is_cclass $I11, .CCLASS_WHITESPACE, rx560_tgt, rx560_pos
    unless $I11, rx560_fail1189
    add rx560_pos, 1
    repr_bind_attr_int rx560_cur, rx560_curclass, "$!pos", rx560_pos
    $P11 = rx560_cur."ws"()
    repr_get_attr_int $I11, $P11, rx560_curclass, "$!pos"
    lt $I11, 0, rx560_fail1189
    repr_get_attr_int rx560_pos, $P11, rx560_curclass, "$!pos"
    repr_bind_attr_int rx560_cur, rx560_curclass, "$!pos", rx560_pos
    $P11 = rx560_cur."block"()
    repr_get_attr_int $I11, $P11, rx560_curclass, "$!pos"
    lt $I11, 0, rx560_fail1189
    nqp_rxmark rx560_bstack, rxsubrule564_pass1199, -1, 0
  rxsubrule564_pass1199:
    rx560_cstack = rx560_cur."!cursor_capture"($P11, "block")
    repr_get_attr_int rx560_pos, $P11, rx560_curclass, "$!pos"
    repr_bind_attr_int rx560_cur, rx560_curclass, "$!pos", rx560_pos
    $P11 = rx560_cur."ws"()
    repr_get_attr_int $I11, $P11, rx560_curclass, "$!pos"
    lt $I11, 0, rx560_fail1189
    repr_get_attr_int rx560_pos, $P11, rx560_curclass, "$!pos"
    rx560_cur."!cursor_pass"(rx560_pos, "statement_control:sym<CATCH>", 'backtrack'=>1)
    .return (rx560_cur)
  rx560_restart1188:
    repr_get_attr_obj rx560_cstack, rx560_cur, rx560_curclass, "$!cstack"
  rx560_fail1189:
    unless rx560_bstack, rx560_done1187
    pop $I19, rx560_bstack
    if_null rx560_cstack, rx560_cstack_done1192
    unless rx560_cstack, rx560_cstack_done1192
    dec $I19
    set $P11, rx560_cstack[$I19]
  rx560_cstack_done1192:
    pop rx560_rep, rx560_bstack
    pop rx560_pos, rx560_bstack
    pop $I19, rx560_bstack
    lt rx560_pos, -1, rx560_done1187
    lt rx560_pos, 0, rx560_fail1189
    eq $I19, 0, rx560_fail1189
    nqp_islist $I20, rx560_cstack
    unless $I20, rx560_jump1190
    elements $I18, rx560_bstack
    le $I18, 0, rx560_cut1191
    dec $I18
    set $I18, rx560_bstack[$I18]
  rx560_cut1191:
    assign rx560_cstack, $I18
  rx560_jump1190:
    jump $I19
  rx560_done1187:
    rx560_cur."!cursor_fail"()
    .return (rx560_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<CONTROL>" :subid("cuid_71_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 893
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx566_start
    .local string rx566_tgt
    .local int rx566_pos
    .local int rx566_off
    .local int rx566_eos
    .local int rx566_rep
    .local pmc rx566_cur
    .local pmc rx566_curclass
    .local pmc rx566_bstack
    .local pmc rx566_cstack
    rx566_start = self."!cursor_start_all"()
    set rx566_cur, rx566_start[0]
    set rx566_tgt, rx566_start[1]
    set rx566_pos, rx566_start[2]
    set rx566_curclass, rx566_start[3]
    set rx566_bstack, rx566_start[4]
    set $I19, rx566_start[5]
    store_lex unicode:"$\x{a2}", rx566_cur
    length rx566_eos, rx566_tgt
    eq $I19, 1, rx566_restart1203
    gt rx566_pos, rx566_eos, rx566_fail1204
    repr_get_attr_int $I11, self, rx566_curclass, "$!from"
    ne $I11, -1, rxscan567_done1210
    goto rxscan567_scan1209
  rxscan567_loop1208:
    inc rx566_pos
    gt rx566_pos, rx566_eos, rx566_fail1204
    repr_bind_attr_int rx566_cur, rx566_curclass, "$!from", rx566_pos
  rxscan567_scan1209:
    nqp_rxmark rx566_bstack, rxscan567_loop1208, rx566_pos, 0
  rxscan567_done1210:
    nqp_rxmark rx566_bstack, rxcap568_fail1212, rx566_pos, 0
    add $I11, rx566_pos, 7
    gt $I11, rx566_eos, rx566_fail1204
    substr $S10, rx566_tgt, rx566_pos, 7
    ne $S10, ucs4:"CONTROL", rx566_fail1204
    add rx566_pos, 7
    nqp_rxpeek $I19, rx566_bstack, rxcap568_fail1212
    inc $I19
    set $I11, rx566_bstack[$I19]
    repr_bind_attr_int rx566_cur, rx566_curclass, "$!pos", rx566_pos
    $P11 = rx566_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx566_pos)
    rx566_cstack = rx566_cur."!cursor_capture"($P11, "sym")
    goto rxcap568_done1211
  rxcap568_fail1212:
    goto rx566_fail1204
  rxcap568_done1211:
    ge rx566_pos, rx566_eos, rx566_fail1204
    is_cclass $I11, .CCLASS_WHITESPACE, rx566_tgt, rx566_pos
    unless $I11, rx566_fail1204
    add rx566_pos, 1
    repr_bind_attr_int rx566_cur, rx566_curclass, "$!pos", rx566_pos
    $P11 = rx566_cur."ws"()
    repr_get_attr_int $I11, $P11, rx566_curclass, "$!pos"
    lt $I11, 0, rx566_fail1204
    repr_get_attr_int rx566_pos, $P11, rx566_curclass, "$!pos"
    repr_bind_attr_int rx566_cur, rx566_curclass, "$!pos", rx566_pos
    $P11 = rx566_cur."block"()
    repr_get_attr_int $I11, $P11, rx566_curclass, "$!pos"
    lt $I11, 0, rx566_fail1204
    nqp_rxmark rx566_bstack, rxsubrule570_pass1214, -1, 0
  rxsubrule570_pass1214:
    rx566_cstack = rx566_cur."!cursor_capture"($P11, "block")
    repr_get_attr_int rx566_pos, $P11, rx566_curclass, "$!pos"
    repr_bind_attr_int rx566_cur, rx566_curclass, "$!pos", rx566_pos
    $P11 = rx566_cur."ws"()
    repr_get_attr_int $I11, $P11, rx566_curclass, "$!pos"
    lt $I11, 0, rx566_fail1204
    repr_get_attr_int rx566_pos, $P11, rx566_curclass, "$!pos"
    rx566_cur."!cursor_pass"(rx566_pos, "statement_control:sym<CONTROL>", 'backtrack'=>1)
    .return (rx566_cur)
  rx566_restart1203:
    repr_get_attr_obj rx566_cstack, rx566_cur, rx566_curclass, "$!cstack"
  rx566_fail1204:
    unless rx566_bstack, rx566_done1202
    pop $I19, rx566_bstack
    if_null rx566_cstack, rx566_cstack_done1207
    unless rx566_cstack, rx566_cstack_done1207
    dec $I19
    set $P11, rx566_cstack[$I19]
  rx566_cstack_done1207:
    pop rx566_rep, rx566_bstack
    pop rx566_pos, rx566_bstack
    pop $I19, rx566_bstack
    lt rx566_pos, -1, rx566_done1202
    lt rx566_pos, 0, rx566_fail1204
    eq $I19, 0, rx566_fail1204
    nqp_islist $I20, rx566_cstack
    unless $I20, rx566_jump1205
    elements $I18, rx566_bstack
    le $I18, 0, rx566_cut1206
    dec $I18
    set $I18, rx566_bstack[$I18]
  rx566_cut1206:
    assign rx566_cstack, $I18
  rx566_jump1205:
    jump $I19
  rx566_done1202:
    rx566_cur."!cursor_fail"()
    .return (rx566_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix" :subid("cuid_72_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 898
    .param pmc self 
    $P5001 = self."!protoregex"("statement_prefix")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<BEGIN>" :subid("cuid_73_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 899
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx572_start
    .local string rx572_tgt
    .local int rx572_pos
    .local int rx572_off
    .local int rx572_eos
    .local int rx572_rep
    .local pmc rx572_cur
    .local pmc rx572_curclass
    .local pmc rx572_bstack
    .local pmc rx572_cstack
    rx572_start = self."!cursor_start_all"()
    set rx572_cur, rx572_start[0]
    set rx572_tgt, rx572_start[1]
    set rx572_pos, rx572_start[2]
    set rx572_curclass, rx572_start[3]
    set rx572_bstack, rx572_start[4]
    set $I19, rx572_start[5]
    store_lex unicode:"$\x{a2}", rx572_cur
    length rx572_eos, rx572_tgt
    eq $I19, 1, rx572_restart1218
    gt rx572_pos, rx572_eos, rx572_fail1219
    repr_get_attr_int $I11, self, rx572_curclass, "$!from"
    ne $I11, -1, rxscan573_done1225
    goto rxscan573_scan1224
  rxscan573_loop1223:
    inc rx572_pos
    gt rx572_pos, rx572_eos, rx572_fail1219
    repr_bind_attr_int rx572_cur, rx572_curclass, "$!from", rx572_pos
  rxscan573_scan1224:
    nqp_rxmark rx572_bstack, rxscan573_loop1223, rx572_pos, 0
  rxscan573_done1225:
    nqp_rxmark rx572_bstack, rxcap574_fail1227, rx572_pos, 0
    add $I11, rx572_pos, 5
    gt $I11, rx572_eos, rx572_fail1219
    substr $S10, rx572_tgt, rx572_pos, 5
    ne $S10, ucs4:"BEGIN", rx572_fail1219
    add rx572_pos, 5
    nqp_rxpeek $I19, rx572_bstack, rxcap574_fail1227
    inc $I19
    set $I11, rx572_bstack[$I19]
    repr_bind_attr_int rx572_cur, rx572_curclass, "$!pos", rx572_pos
    $P11 = rx572_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx572_pos)
    rx572_cstack = rx572_cur."!cursor_capture"($P11, "sym")
    goto rxcap574_done1226
  rxcap574_fail1227:
    goto rx572_fail1219
  rxcap574_done1226:
    repr_bind_attr_int rx572_cur, rx572_curclass, "$!pos", rx572_pos
    $P11 = rx572_cur."blorst"()
    repr_get_attr_int $I11, $P11, rx572_curclass, "$!pos"
    lt $I11, 0, rx572_fail1219
    nqp_rxmark rx572_bstack, rxsubrule575_pass1228, -1, 0
  rxsubrule575_pass1228:
    rx572_cstack = rx572_cur."!cursor_capture"($P11, "blorst")
    repr_get_attr_int rx572_pos, $P11, rx572_curclass, "$!pos"
    rx572_cur."!cursor_pass"(rx572_pos, "statement_prefix:sym<BEGIN>", 'backtrack'=>1)
    .return (rx572_cur)
  rx572_restart1218:
    repr_get_attr_obj rx572_cstack, rx572_cur, rx572_curclass, "$!cstack"
  rx572_fail1219:
    unless rx572_bstack, rx572_done1217
    pop $I19, rx572_bstack
    if_null rx572_cstack, rx572_cstack_done1222
    unless rx572_cstack, rx572_cstack_done1222
    dec $I19
    set $P11, rx572_cstack[$I19]
  rx572_cstack_done1222:
    pop rx572_rep, rx572_bstack
    pop rx572_pos, rx572_bstack
    pop $I19, rx572_bstack
    lt rx572_pos, -1, rx572_done1217
    lt rx572_pos, 0, rx572_fail1219
    eq $I19, 0, rx572_fail1219
    nqp_islist $I20, rx572_cstack
    unless $I20, rx572_jump1220
    elements $I18, rx572_bstack
    le $I18, 0, rx572_cut1221
    dec $I18
    set $I18, rx572_bstack[$I18]
  rx572_cut1221:
    assign rx572_cstack, $I18
  rx572_jump1220:
    jump $I19
  rx572_done1217:
    rx572_cur."!cursor_fail"()
    .return (rx572_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<INIT>" :subid("cuid_74_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 900
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx576_start
    .local string rx576_tgt
    .local int rx576_pos
    .local int rx576_off
    .local int rx576_eos
    .local int rx576_rep
    .local pmc rx576_cur
    .local pmc rx576_curclass
    .local pmc rx576_bstack
    .local pmc rx576_cstack
    rx576_start = self."!cursor_start_all"()
    set rx576_cur, rx576_start[0]
    set rx576_tgt, rx576_start[1]
    set rx576_pos, rx576_start[2]
    set rx576_curclass, rx576_start[3]
    set rx576_bstack, rx576_start[4]
    set $I19, rx576_start[5]
    store_lex unicode:"$\x{a2}", rx576_cur
    length rx576_eos, rx576_tgt
    eq $I19, 1, rx576_restart1231
    gt rx576_pos, rx576_eos, rx576_fail1232
    repr_get_attr_int $I11, self, rx576_curclass, "$!from"
    ne $I11, -1, rxscan577_done1238
    goto rxscan577_scan1237
  rxscan577_loop1236:
    inc rx576_pos
    gt rx576_pos, rx576_eos, rx576_fail1232
    repr_bind_attr_int rx576_cur, rx576_curclass, "$!from", rx576_pos
  rxscan577_scan1237:
    nqp_rxmark rx576_bstack, rxscan577_loop1236, rx576_pos, 0
  rxscan577_done1238:
    nqp_rxmark rx576_bstack, rxcap578_fail1240, rx576_pos, 0
    add $I11, rx576_pos, 4
    gt $I11, rx576_eos, rx576_fail1232
    substr $S10, rx576_tgt, rx576_pos, 4
    ne $S10, ucs4:"INIT", rx576_fail1232
    add rx576_pos, 4
    nqp_rxpeek $I19, rx576_bstack, rxcap578_fail1240
    inc $I19
    set $I11, rx576_bstack[$I19]
    repr_bind_attr_int rx576_cur, rx576_curclass, "$!pos", rx576_pos
    $P11 = rx576_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx576_pos)
    rx576_cstack = rx576_cur."!cursor_capture"($P11, "sym")
    goto rxcap578_done1239
  rxcap578_fail1240:
    goto rx576_fail1232
  rxcap578_done1239:
    repr_bind_attr_int rx576_cur, rx576_curclass, "$!pos", rx576_pos
    $P11 = rx576_cur."blorst"()
    repr_get_attr_int $I11, $P11, rx576_curclass, "$!pos"
    lt $I11, 0, rx576_fail1232
    nqp_rxmark rx576_bstack, rxsubrule579_pass1241, -1, 0
  rxsubrule579_pass1241:
    rx576_cstack = rx576_cur."!cursor_capture"($P11, "blorst")
    repr_get_attr_int rx576_pos, $P11, rx576_curclass, "$!pos"
    rx576_cur."!cursor_pass"(rx576_pos, "statement_prefix:sym<INIT>", 'backtrack'=>1)
    .return (rx576_cur)
  rx576_restart1231:
    repr_get_attr_obj rx576_cstack, rx576_cur, rx576_curclass, "$!cstack"
  rx576_fail1232:
    unless rx576_bstack, rx576_done1230
    pop $I19, rx576_bstack
    if_null rx576_cstack, rx576_cstack_done1235
    unless rx576_cstack, rx576_cstack_done1235
    dec $I19
    set $P11, rx576_cstack[$I19]
  rx576_cstack_done1235:
    pop rx576_rep, rx576_bstack
    pop rx576_pos, rx576_bstack
    pop $I19, rx576_bstack
    lt rx576_pos, -1, rx576_done1230
    lt rx576_pos, 0, rx576_fail1232
    eq $I19, 0, rx576_fail1232
    nqp_islist $I20, rx576_cstack
    unless $I20, rx576_jump1233
    elements $I18, rx576_bstack
    le $I18, 0, rx576_cut1234
    dec $I18
    set $I18, rx576_bstack[$I18]
  rx576_cut1234:
    assign rx576_cstack, $I18
  rx576_jump1233:
    jump $I19
  rx576_done1230:
    rx576_cur."!cursor_fail"()
    .return (rx576_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<try>" :subid("cuid_75_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 902
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx580_start
    .local string rx580_tgt
    .local int rx580_pos
    .local int rx580_off
    .local int rx580_eos
    .local int rx580_rep
    .local pmc rx580_cur
    .local pmc rx580_curclass
    .local pmc rx580_bstack
    .local pmc rx580_cstack
    rx580_start = self."!cursor_start_all"()
    set rx580_cur, rx580_start[0]
    set rx580_tgt, rx580_start[1]
    set rx580_pos, rx580_start[2]
    set rx580_curclass, rx580_start[3]
    set rx580_bstack, rx580_start[4]
    set $I19, rx580_start[5]
    store_lex unicode:"$\x{a2}", rx580_cur
    length rx580_eos, rx580_tgt
    eq $I19, 1, rx580_restart1244
    gt rx580_pos, rx580_eos, rx580_fail1245
    repr_get_attr_int $I11, self, rx580_curclass, "$!from"
    ne $I11, -1, rxscan581_done1251
    goto rxscan581_scan1250
  rxscan581_loop1249:
    inc rx580_pos
    gt rx580_pos, rx580_eos, rx580_fail1245
    repr_bind_attr_int rx580_cur, rx580_curclass, "$!from", rx580_pos
  rxscan581_scan1250:
    nqp_rxmark rx580_bstack, rxscan581_loop1249, rx580_pos, 0
  rxscan581_done1251:
    nqp_rxmark rx580_bstack, rxcap582_fail1253, rx580_pos, 0
    add $I11, rx580_pos, 3
    gt $I11, rx580_eos, rx580_fail1245
    substr $S10, rx580_tgt, rx580_pos, 3
    ne $S10, ucs4:"try", rx580_fail1245
    add rx580_pos, 3
    nqp_rxpeek $I19, rx580_bstack, rxcap582_fail1253
    inc $I19
    set $I11, rx580_bstack[$I19]
    repr_bind_attr_int rx580_cur, rx580_curclass, "$!pos", rx580_pos
    $P11 = rx580_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx580_pos)
    rx580_cstack = rx580_cur."!cursor_capture"($P11, "sym")
    goto rxcap582_done1252
  rxcap582_fail1253:
    goto rx580_fail1245
  rxcap582_done1252:
    repr_bind_attr_int rx580_cur, rx580_curclass, "$!pos", rx580_pos
    $P11 = rx580_cur."blorst"()
    repr_get_attr_int $I11, $P11, rx580_curclass, "$!pos"
    lt $I11, 0, rx580_fail1245
    nqp_rxmark rx580_bstack, rxsubrule583_pass1254, -1, 0
  rxsubrule583_pass1254:
    rx580_cstack = rx580_cur."!cursor_capture"($P11, "blorst")
    repr_get_attr_int rx580_pos, $P11, rx580_curclass, "$!pos"
    rx580_cur."!cursor_pass"(rx580_pos, "statement_prefix:sym<try>", 'backtrack'=>1)
    .return (rx580_cur)
  rx580_restart1244:
    repr_get_attr_obj rx580_cstack, rx580_cur, rx580_curclass, "$!cstack"
  rx580_fail1245:
    unless rx580_bstack, rx580_done1243
    pop $I19, rx580_bstack
    if_null rx580_cstack, rx580_cstack_done1248
    unless rx580_cstack, rx580_cstack_done1248
    dec $I19
    set $P11, rx580_cstack[$I19]
  rx580_cstack_done1248:
    pop rx580_rep, rx580_bstack
    pop rx580_pos, rx580_bstack
    pop $I19, rx580_bstack
    lt rx580_pos, -1, rx580_done1243
    lt rx580_pos, 0, rx580_fail1245
    eq $I19, 0, rx580_fail1245
    nqp_islist $I20, rx580_cstack
    unless $I20, rx580_jump1246
    elements $I18, rx580_bstack
    le $I18, 0, rx580_cut1247
    dec $I18
    set $I18, rx580_bstack[$I18]
  rx580_cut1247:
    assign rx580_cstack, $I18
  rx580_jump1246:
    jump $I19
  rx580_done1243:
    rx580_cur."!cursor_fail"()
    .return (rx580_cur) 
.end
.HLL "nqp"
.namespace []
.sub "blorst" :subid("cuid_76_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 907
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx584_start
    .local string rx584_tgt
    .local int rx584_pos
    .local int rx584_off
    .local int rx584_eos
    .local int rx584_rep
    .local pmc rx584_cur
    .local pmc rx584_curclass
    .local pmc rx584_bstack
    .local pmc rx584_cstack
    rx584_start = self."!cursor_start_all"()
    set rx584_cur, rx584_start[0]
    set rx584_tgt, rx584_start[1]
    set rx584_pos, rx584_start[2]
    set rx584_curclass, rx584_start[3]
    set rx584_bstack, rx584_start[4]
    set $I19, rx584_start[5]
    store_lex unicode:"$\x{a2}", rx584_cur
    length rx584_eos, rx584_tgt
    eq $I19, 1, rx584_restart1257
    gt rx584_pos, rx584_eos, rx584_fail1258
    repr_get_attr_int $I11, self, rx584_curclass, "$!from"
    ne $I11, -1, rxscan585_done1264
    goto rxscan585_scan1263
  rxscan585_loop1262:
    inc rx584_pos
    gt rx584_pos, rx584_eos, rx584_fail1258
    repr_bind_attr_int rx584_cur, rx584_curclass, "$!from", rx584_pos
  rxscan585_scan1263:
    nqp_rxmark rx584_bstack, rxscan585_loop1262, rx584_pos, 0
  rxscan585_done1264:
    ge rx584_pos, rx584_eos, rx584_fail1258
    is_cclass $I11, .CCLASS_WHITESPACE, rx584_tgt, rx584_pos
    unless $I11, rx584_fail1258
    add rx584_pos, 1
    repr_bind_attr_int rx584_cur, rx584_curclass, "$!pos", rx584_pos
    $P11 = rx584_cur."ws"()
    repr_get_attr_int $I11, $P11, rx584_curclass, "$!pos"
    lt $I11, 0, rx584_fail1258
    repr_get_attr_int rx584_pos, $P11, rx584_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt587_01267
    nqp_push_label $P11, alt587_11269
    nqp_rxmark rx584_bstack, alt587_end1266, -1, 0
    rx584_cur."!alt"(rx584_pos, "alt_nfa__16_1361734141.186", $P11)
    goto rx584_fail1258
  alt587_01267:
    ge rx584_pos, rx584_eos, rx584_fail1258
    substr $S11, rx584_tgt, rx584_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx584_fail1258
    repr_bind_attr_int rx584_cur, rx584_curclass, "$!pos", rx584_pos
    $P11 = rx584_cur."block"()
    repr_get_attr_int $I11, $P11, rx584_curclass, "$!pos"
    lt $I11, 0, rx584_fail1258
    nqp_rxmark rx584_bstack, rxsubrule588_pass1268, -1, 0
  rxsubrule588_pass1268:
    rx584_cstack = rx584_cur."!cursor_capture"($P11, "block")
    repr_get_attr_int rx584_pos, $P11, rx584_curclass, "$!pos"
    goto alt587_end1266
  alt587_11269:
    repr_bind_attr_int rx584_cur, rx584_curclass, "$!pos", rx584_pos
    $P11 = rx584_cur."statement"()
    repr_get_attr_int $I11, $P11, rx584_curclass, "$!pos"
    lt $I11, 0, rx584_fail1258
    nqp_rxmark rx584_bstack, rxsubrule589_pass1270, -1, 0
  rxsubrule589_pass1270:
    rx584_cstack = rx584_cur."!cursor_capture"($P11, "statement")
    repr_get_attr_int rx584_pos, $P11, rx584_curclass, "$!pos"
    goto alt587_end1266
  alt587_end1266:
    nqp_rxcommit rx584_bstack, alt587_end1266
    rx584_cur."!cursor_pass"(rx584_pos, "blorst", 'backtrack'=>1)
    .return (rx584_cur)
  rx584_restart1257:
    repr_get_attr_obj rx584_cstack, rx584_cur, rx584_curclass, "$!cstack"
  rx584_fail1258:
    unless rx584_bstack, rx584_done1256
    pop $I19, rx584_bstack
    if_null rx584_cstack, rx584_cstack_done1261
    unless rx584_cstack, rx584_cstack_done1261
    dec $I19
    set $P11, rx584_cstack[$I19]
  rx584_cstack_done1261:
    pop rx584_rep, rx584_bstack
    pop rx584_pos, rx584_bstack
    pop $I19, rx584_bstack
    lt rx584_pos, -1, rx584_done1256
    lt rx584_pos, 0, rx584_fail1258
    eq $I19, 0, rx584_fail1258
    nqp_islist $I20, rx584_cstack
    unless $I20, rx584_jump1259
    elements $I18, rx584_bstack
    le $I18, 0, rx584_cut1260
    dec $I18
    set $I18, rx584_bstack[$I18]
  rx584_cut1260:
    assign rx584_cstack, $I18
  rx584_jump1259:
    jump $I19
  rx584_done1256:
    rx584_cur."!cursor_fail"()
    .return (rx584_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond" :subid("cuid_77_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 913
    .param pmc self 
    $P5001 = self."!protoregex"("statement_mod_cond")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond:sym<if>" :subid("cuid_78_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 915
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx590_start
    .local string rx590_tgt
    .local int rx590_pos
    .local int rx590_off
    .local int rx590_eos
    .local int rx590_rep
    .local pmc rx590_cur
    .local pmc rx590_curclass
    .local pmc rx590_bstack
    .local pmc rx590_cstack
    rx590_start = self."!cursor_start_all"()
    set rx590_cur, rx590_start[0]
    set rx590_tgt, rx590_start[1]
    set rx590_pos, rx590_start[2]
    set rx590_curclass, rx590_start[3]
    set rx590_bstack, rx590_start[4]
    set $I19, rx590_start[5]
    store_lex unicode:"$\x{a2}", rx590_cur
    length rx590_eos, rx590_tgt
    eq $I19, 1, rx590_restart1273
    gt rx590_pos, rx590_eos, rx590_fail1274
    repr_get_attr_int $I11, self, rx590_curclass, "$!from"
    ne $I11, -1, rxscan591_done1280
    goto rxscan591_scan1279
  rxscan591_loop1278:
    inc rx590_pos
    gt rx590_pos, rx590_eos, rx590_fail1274
    repr_bind_attr_int rx590_cur, rx590_curclass, "$!from", rx590_pos
  rxscan591_scan1279:
    nqp_rxmark rx590_bstack, rxscan591_loop1278, rx590_pos, 0
  rxscan591_done1280:
    nqp_rxmark rx590_bstack, rxcap592_fail1282, rx590_pos, 0
    add $I11, rx590_pos, 2
    gt $I11, rx590_eos, rx590_fail1274
    substr $S10, rx590_tgt, rx590_pos, 2
    ne $S10, ucs4:"if", rx590_fail1274
    add rx590_pos, 2
    nqp_rxpeek $I19, rx590_bstack, rxcap592_fail1282
    inc $I19
    set $I11, rx590_bstack[$I19]
    repr_bind_attr_int rx590_cur, rx590_curclass, "$!pos", rx590_pos
    $P11 = rx590_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx590_pos)
    rx590_cstack = rx590_cur."!cursor_capture"($P11, "sym")
    goto rxcap592_done1281
  rxcap592_fail1282:
    goto rx590_fail1274
  rxcap592_done1281:
    repr_bind_attr_int rx590_cur, rx590_curclass, "$!pos", rx590_pos
    $P11 = rx590_cur."ws"()
    repr_get_attr_int $I11, $P11, rx590_curclass, "$!pos"
    lt $I11, 0, rx590_fail1274
    repr_get_attr_int rx590_pos, $P11, rx590_curclass, "$!pos"
    repr_bind_attr_int rx590_cur, rx590_curclass, "$!pos", rx590_pos
    $P11 = rx590_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx590_curclass, "$!pos"
    lt $I11, 0, rx590_fail1274
    nqp_rxmark rx590_bstack, rxsubrule594_pass1284, -1, 0
  rxsubrule594_pass1284:
    rx590_cstack = rx590_cur."!cursor_capture"($P11, "cond")
    repr_get_attr_int rx590_pos, $P11, rx590_curclass, "$!pos"
    repr_bind_attr_int rx590_cur, rx590_curclass, "$!pos", rx590_pos
    $P11 = rx590_cur."ws"()
    repr_get_attr_int $I11, $P11, rx590_curclass, "$!pos"
    lt $I11, 0, rx590_fail1274
    repr_get_attr_int rx590_pos, $P11, rx590_curclass, "$!pos"
    rx590_cur."!cursor_pass"(rx590_pos, "statement_mod_cond:sym<if>", 'backtrack'=>1)
    .return (rx590_cur)
  rx590_restart1273:
    repr_get_attr_obj rx590_cstack, rx590_cur, rx590_curclass, "$!cstack"
  rx590_fail1274:
    unless rx590_bstack, rx590_done1272
    pop $I19, rx590_bstack
    if_null rx590_cstack, rx590_cstack_done1277
    unless rx590_cstack, rx590_cstack_done1277
    dec $I19
    set $P11, rx590_cstack[$I19]
  rx590_cstack_done1277:
    pop rx590_rep, rx590_bstack
    pop rx590_pos, rx590_bstack
    pop $I19, rx590_bstack
    lt rx590_pos, -1, rx590_done1272
    lt rx590_pos, 0, rx590_fail1274
    eq $I19, 0, rx590_fail1274
    nqp_islist $I20, rx590_cstack
    unless $I20, rx590_jump1275
    elements $I18, rx590_bstack
    le $I18, 0, rx590_cut1276
    dec $I18
    set $I18, rx590_bstack[$I18]
  rx590_cut1276:
    assign rx590_cstack, $I18
  rx590_jump1275:
    jump $I19
  rx590_done1272:
    rx590_cur."!cursor_fail"()
    .return (rx590_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond:sym<unless>" :subid("cuid_79_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 916
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx596_start
    .local string rx596_tgt
    .local int rx596_pos
    .local int rx596_off
    .local int rx596_eos
    .local int rx596_rep
    .local pmc rx596_cur
    .local pmc rx596_curclass
    .local pmc rx596_bstack
    .local pmc rx596_cstack
    rx596_start = self."!cursor_start_all"()
    set rx596_cur, rx596_start[0]
    set rx596_tgt, rx596_start[1]
    set rx596_pos, rx596_start[2]
    set rx596_curclass, rx596_start[3]
    set rx596_bstack, rx596_start[4]
    set $I19, rx596_start[5]
    store_lex unicode:"$\x{a2}", rx596_cur
    length rx596_eos, rx596_tgt
    eq $I19, 1, rx596_restart1288
    gt rx596_pos, rx596_eos, rx596_fail1289
    repr_get_attr_int $I11, self, rx596_curclass, "$!from"
    ne $I11, -1, rxscan597_done1295
    goto rxscan597_scan1294
  rxscan597_loop1293:
    inc rx596_pos
    gt rx596_pos, rx596_eos, rx596_fail1289
    repr_bind_attr_int rx596_cur, rx596_curclass, "$!from", rx596_pos
  rxscan597_scan1294:
    nqp_rxmark rx596_bstack, rxscan597_loop1293, rx596_pos, 0
  rxscan597_done1295:
    nqp_rxmark rx596_bstack, rxcap598_fail1297, rx596_pos, 0
    add $I11, rx596_pos, 6
    gt $I11, rx596_eos, rx596_fail1289
    substr $S10, rx596_tgt, rx596_pos, 6
    ne $S10, ucs4:"unless", rx596_fail1289
    add rx596_pos, 6
    nqp_rxpeek $I19, rx596_bstack, rxcap598_fail1297
    inc $I19
    set $I11, rx596_bstack[$I19]
    repr_bind_attr_int rx596_cur, rx596_curclass, "$!pos", rx596_pos
    $P11 = rx596_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx596_pos)
    rx596_cstack = rx596_cur."!cursor_capture"($P11, "sym")
    goto rxcap598_done1296
  rxcap598_fail1297:
    goto rx596_fail1289
  rxcap598_done1296:
    repr_bind_attr_int rx596_cur, rx596_curclass, "$!pos", rx596_pos
    $P11 = rx596_cur."ws"()
    repr_get_attr_int $I11, $P11, rx596_curclass, "$!pos"
    lt $I11, 0, rx596_fail1289
    repr_get_attr_int rx596_pos, $P11, rx596_curclass, "$!pos"
    repr_bind_attr_int rx596_cur, rx596_curclass, "$!pos", rx596_pos
    $P11 = rx596_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx596_curclass, "$!pos"
    lt $I11, 0, rx596_fail1289
    nqp_rxmark rx596_bstack, rxsubrule600_pass1299, -1, 0
  rxsubrule600_pass1299:
    rx596_cstack = rx596_cur."!cursor_capture"($P11, "cond")
    repr_get_attr_int rx596_pos, $P11, rx596_curclass, "$!pos"
    repr_bind_attr_int rx596_cur, rx596_curclass, "$!pos", rx596_pos
    $P11 = rx596_cur."ws"()
    repr_get_attr_int $I11, $P11, rx596_curclass, "$!pos"
    lt $I11, 0, rx596_fail1289
    repr_get_attr_int rx596_pos, $P11, rx596_curclass, "$!pos"
    rx596_cur."!cursor_pass"(rx596_pos, "statement_mod_cond:sym<unless>", 'backtrack'=>1)
    .return (rx596_cur)
  rx596_restart1288:
    repr_get_attr_obj rx596_cstack, rx596_cur, rx596_curclass, "$!cstack"
  rx596_fail1289:
    unless rx596_bstack, rx596_done1287
    pop $I19, rx596_bstack
    if_null rx596_cstack, rx596_cstack_done1292
    unless rx596_cstack, rx596_cstack_done1292
    dec $I19
    set $P11, rx596_cstack[$I19]
  rx596_cstack_done1292:
    pop rx596_rep, rx596_bstack
    pop rx596_pos, rx596_bstack
    pop $I19, rx596_bstack
    lt rx596_pos, -1, rx596_done1287
    lt rx596_pos, 0, rx596_fail1289
    eq $I19, 0, rx596_fail1289
    nqp_islist $I20, rx596_cstack
    unless $I20, rx596_jump1290
    elements $I18, rx596_bstack
    le $I18, 0, rx596_cut1291
    dec $I18
    set $I18, rx596_bstack[$I18]
  rx596_cut1291:
    assign rx596_cstack, $I18
  rx596_jump1290:
    jump $I19
  rx596_done1287:
    rx596_cur."!cursor_fail"()
    .return (rx596_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop" :subid("cuid_80_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 918
    .param pmc self 
    $P5001 = self."!protoregex"("statement_mod_loop")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<while>" :subid("cuid_81_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 920
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx602_start
    .local string rx602_tgt
    .local int rx602_pos
    .local int rx602_off
    .local int rx602_eos
    .local int rx602_rep
    .local pmc rx602_cur
    .local pmc rx602_curclass
    .local pmc rx602_bstack
    .local pmc rx602_cstack
    rx602_start = self."!cursor_start_all"()
    set rx602_cur, rx602_start[0]
    set rx602_tgt, rx602_start[1]
    set rx602_pos, rx602_start[2]
    set rx602_curclass, rx602_start[3]
    set rx602_bstack, rx602_start[4]
    set $I19, rx602_start[5]
    store_lex unicode:"$\x{a2}", rx602_cur
    length rx602_eos, rx602_tgt
    eq $I19, 1, rx602_restart1303
    gt rx602_pos, rx602_eos, rx602_fail1304
    repr_get_attr_int $I11, self, rx602_curclass, "$!from"
    ne $I11, -1, rxscan603_done1310
    goto rxscan603_scan1309
  rxscan603_loop1308:
    inc rx602_pos
    gt rx602_pos, rx602_eos, rx602_fail1304
    repr_bind_attr_int rx602_cur, rx602_curclass, "$!from", rx602_pos
  rxscan603_scan1309:
    nqp_rxmark rx602_bstack, rxscan603_loop1308, rx602_pos, 0
  rxscan603_done1310:
    nqp_rxmark rx602_bstack, rxcap604_fail1312, rx602_pos, 0
    add $I11, rx602_pos, 5
    gt $I11, rx602_eos, rx602_fail1304
    substr $S10, rx602_tgt, rx602_pos, 5
    ne $S10, ucs4:"while", rx602_fail1304
    add rx602_pos, 5
    nqp_rxpeek $I19, rx602_bstack, rxcap604_fail1312
    inc $I19
    set $I11, rx602_bstack[$I19]
    repr_bind_attr_int rx602_cur, rx602_curclass, "$!pos", rx602_pos
    $P11 = rx602_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx602_pos)
    rx602_cstack = rx602_cur."!cursor_capture"($P11, "sym")
    goto rxcap604_done1311
  rxcap604_fail1312:
    goto rx602_fail1304
  rxcap604_done1311:
    repr_bind_attr_int rx602_cur, rx602_curclass, "$!pos", rx602_pos
    $P11 = rx602_cur."ws"()
    repr_get_attr_int $I11, $P11, rx602_curclass, "$!pos"
    lt $I11, 0, rx602_fail1304
    repr_get_attr_int rx602_pos, $P11, rx602_curclass, "$!pos"
    repr_bind_attr_int rx602_cur, rx602_curclass, "$!pos", rx602_pos
    $P11 = rx602_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx602_curclass, "$!pos"
    lt $I11, 0, rx602_fail1304
    nqp_rxmark rx602_bstack, rxsubrule606_pass1314, -1, 0
  rxsubrule606_pass1314:
    rx602_cstack = rx602_cur."!cursor_capture"($P11, "cond")
    repr_get_attr_int rx602_pos, $P11, rx602_curclass, "$!pos"
    repr_bind_attr_int rx602_cur, rx602_curclass, "$!pos", rx602_pos
    $P11 = rx602_cur."ws"()
    repr_get_attr_int $I11, $P11, rx602_curclass, "$!pos"
    lt $I11, 0, rx602_fail1304
    repr_get_attr_int rx602_pos, $P11, rx602_curclass, "$!pos"
    rx602_cur."!cursor_pass"(rx602_pos, "statement_mod_loop:sym<while>", 'backtrack'=>1)
    .return (rx602_cur)
  rx602_restart1303:
    repr_get_attr_obj rx602_cstack, rx602_cur, rx602_curclass, "$!cstack"
  rx602_fail1304:
    unless rx602_bstack, rx602_done1302
    pop $I19, rx602_bstack
    if_null rx602_cstack, rx602_cstack_done1307
    unless rx602_cstack, rx602_cstack_done1307
    dec $I19
    set $P11, rx602_cstack[$I19]
  rx602_cstack_done1307:
    pop rx602_rep, rx602_bstack
    pop rx602_pos, rx602_bstack
    pop $I19, rx602_bstack
    lt rx602_pos, -1, rx602_done1302
    lt rx602_pos, 0, rx602_fail1304
    eq $I19, 0, rx602_fail1304
    nqp_islist $I20, rx602_cstack
    unless $I20, rx602_jump1305
    elements $I18, rx602_bstack
    le $I18, 0, rx602_cut1306
    dec $I18
    set $I18, rx602_bstack[$I18]
  rx602_cut1306:
    assign rx602_cstack, $I18
  rx602_jump1305:
    jump $I19
  rx602_done1302:
    rx602_cur."!cursor_fail"()
    .return (rx602_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<until>" :subid("cuid_82_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 921
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx608_start
    .local string rx608_tgt
    .local int rx608_pos
    .local int rx608_off
    .local int rx608_eos
    .local int rx608_rep
    .local pmc rx608_cur
    .local pmc rx608_curclass
    .local pmc rx608_bstack
    .local pmc rx608_cstack
    rx608_start = self."!cursor_start_all"()
    set rx608_cur, rx608_start[0]
    set rx608_tgt, rx608_start[1]
    set rx608_pos, rx608_start[2]
    set rx608_curclass, rx608_start[3]
    set rx608_bstack, rx608_start[4]
    set $I19, rx608_start[5]
    store_lex unicode:"$\x{a2}", rx608_cur
    length rx608_eos, rx608_tgt
    eq $I19, 1, rx608_restart1318
    gt rx608_pos, rx608_eos, rx608_fail1319
    repr_get_attr_int $I11, self, rx608_curclass, "$!from"
    ne $I11, -1, rxscan609_done1325
    goto rxscan609_scan1324
  rxscan609_loop1323:
    inc rx608_pos
    gt rx608_pos, rx608_eos, rx608_fail1319
    repr_bind_attr_int rx608_cur, rx608_curclass, "$!from", rx608_pos
  rxscan609_scan1324:
    nqp_rxmark rx608_bstack, rxscan609_loop1323, rx608_pos, 0
  rxscan609_done1325:
    nqp_rxmark rx608_bstack, rxcap610_fail1327, rx608_pos, 0
    add $I11, rx608_pos, 5
    gt $I11, rx608_eos, rx608_fail1319
    substr $S10, rx608_tgt, rx608_pos, 5
    ne $S10, ucs4:"until", rx608_fail1319
    add rx608_pos, 5
    nqp_rxpeek $I19, rx608_bstack, rxcap610_fail1327
    inc $I19
    set $I11, rx608_bstack[$I19]
    repr_bind_attr_int rx608_cur, rx608_curclass, "$!pos", rx608_pos
    $P11 = rx608_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx608_pos)
    rx608_cstack = rx608_cur."!cursor_capture"($P11, "sym")
    goto rxcap610_done1326
  rxcap610_fail1327:
    goto rx608_fail1319
  rxcap610_done1326:
    repr_bind_attr_int rx608_cur, rx608_curclass, "$!pos", rx608_pos
    $P11 = rx608_cur."ws"()
    repr_get_attr_int $I11, $P11, rx608_curclass, "$!pos"
    lt $I11, 0, rx608_fail1319
    repr_get_attr_int rx608_pos, $P11, rx608_curclass, "$!pos"
    repr_bind_attr_int rx608_cur, rx608_curclass, "$!pos", rx608_pos
    $P11 = rx608_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx608_curclass, "$!pos"
    lt $I11, 0, rx608_fail1319
    nqp_rxmark rx608_bstack, rxsubrule612_pass1329, -1, 0
  rxsubrule612_pass1329:
    rx608_cstack = rx608_cur."!cursor_capture"($P11, "cond")
    repr_get_attr_int rx608_pos, $P11, rx608_curclass, "$!pos"
    repr_bind_attr_int rx608_cur, rx608_curclass, "$!pos", rx608_pos
    $P11 = rx608_cur."ws"()
    repr_get_attr_int $I11, $P11, rx608_curclass, "$!pos"
    lt $I11, 0, rx608_fail1319
    repr_get_attr_int rx608_pos, $P11, rx608_curclass, "$!pos"
    rx608_cur."!cursor_pass"(rx608_pos, "statement_mod_loop:sym<until>", 'backtrack'=>1)
    .return (rx608_cur)
  rx608_restart1318:
    repr_get_attr_obj rx608_cstack, rx608_cur, rx608_curclass, "$!cstack"
  rx608_fail1319:
    unless rx608_bstack, rx608_done1317
    pop $I19, rx608_bstack
    if_null rx608_cstack, rx608_cstack_done1322
    unless rx608_cstack, rx608_cstack_done1322
    dec $I19
    set $P11, rx608_cstack[$I19]
  rx608_cstack_done1322:
    pop rx608_rep, rx608_bstack
    pop rx608_pos, rx608_bstack
    pop $I19, rx608_bstack
    lt rx608_pos, -1, rx608_done1317
    lt rx608_pos, 0, rx608_fail1319
    eq $I19, 0, rx608_fail1319
    nqp_islist $I20, rx608_cstack
    unless $I20, rx608_jump1320
    elements $I18, rx608_bstack
    le $I18, 0, rx608_cut1321
    dec $I18
    set $I18, rx608_bstack[$I18]
  rx608_cut1321:
    assign rx608_cstack, $I18
  rx608_jump1320:
    jump $I19
  rx608_done1317:
    rx608_cur."!cursor_fail"()
    .return (rx608_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<for>" :subid("cuid_83_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 922
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx614_start
    .local string rx614_tgt
    .local int rx614_pos
    .local int rx614_off
    .local int rx614_eos
    .local int rx614_rep
    .local pmc rx614_cur
    .local pmc rx614_curclass
    .local pmc rx614_bstack
    .local pmc rx614_cstack
    rx614_start = self."!cursor_start_all"()
    set rx614_cur, rx614_start[0]
    set rx614_tgt, rx614_start[1]
    set rx614_pos, rx614_start[2]
    set rx614_curclass, rx614_start[3]
    set rx614_bstack, rx614_start[4]
    set $I19, rx614_start[5]
    store_lex unicode:"$\x{a2}", rx614_cur
    length rx614_eos, rx614_tgt
    eq $I19, 1, rx614_restart1333
    gt rx614_pos, rx614_eos, rx614_fail1334
    repr_get_attr_int $I11, self, rx614_curclass, "$!from"
    ne $I11, -1, rxscan615_done1340
    goto rxscan615_scan1339
  rxscan615_loop1338:
    inc rx614_pos
    gt rx614_pos, rx614_eos, rx614_fail1334
    repr_bind_attr_int rx614_cur, rx614_curclass, "$!from", rx614_pos
  rxscan615_scan1339:
    nqp_rxmark rx614_bstack, rxscan615_loop1338, rx614_pos, 0
  rxscan615_done1340:
    nqp_rxmark rx614_bstack, rxcap616_fail1342, rx614_pos, 0
    add $I11, rx614_pos, 3
    gt $I11, rx614_eos, rx614_fail1334
    substr $S10, rx614_tgt, rx614_pos, 3
    ne $S10, ucs4:"for", rx614_fail1334
    add rx614_pos, 3
    nqp_rxpeek $I19, rx614_bstack, rxcap616_fail1342
    inc $I19
    set $I11, rx614_bstack[$I19]
    repr_bind_attr_int rx614_cur, rx614_curclass, "$!pos", rx614_pos
    $P11 = rx614_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx614_pos)
    rx614_cstack = rx614_cur."!cursor_capture"($P11, "sym")
    goto rxcap616_done1341
  rxcap616_fail1342:
    goto rx614_fail1334
  rxcap616_done1341:
    repr_bind_attr_int rx614_cur, rx614_curclass, "$!pos", rx614_pos
    $P11 = rx614_cur."ws"()
    repr_get_attr_int $I11, $P11, rx614_curclass, "$!pos"
    lt $I11, 0, rx614_fail1334
    repr_get_attr_int rx614_pos, $P11, rx614_curclass, "$!pos"
    repr_bind_attr_int rx614_cur, rx614_curclass, "$!pos", rx614_pos
    $P11 = rx614_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx614_curclass, "$!pos"
    lt $I11, 0, rx614_fail1334
    nqp_rxmark rx614_bstack, rxsubrule618_pass1344, -1, 0
  rxsubrule618_pass1344:
    rx614_cstack = rx614_cur."!cursor_capture"($P11, "cond")
    repr_get_attr_int rx614_pos, $P11, rx614_curclass, "$!pos"
    repr_bind_attr_int rx614_cur, rx614_curclass, "$!pos", rx614_pos
    $P11 = rx614_cur."ws"()
    repr_get_attr_int $I11, $P11, rx614_curclass, "$!pos"
    lt $I11, 0, rx614_fail1334
    repr_get_attr_int rx614_pos, $P11, rx614_curclass, "$!pos"
    rx614_cur."!cursor_pass"(rx614_pos, "statement_mod_loop:sym<for>", 'backtrack'=>1)
    .return (rx614_cur)
  rx614_restart1333:
    repr_get_attr_obj rx614_cstack, rx614_cur, rx614_curclass, "$!cstack"
  rx614_fail1334:
    unless rx614_bstack, rx614_done1332
    pop $I19, rx614_bstack
    if_null rx614_cstack, rx614_cstack_done1337
    unless rx614_cstack, rx614_cstack_done1337
    dec $I19
    set $P11, rx614_cstack[$I19]
  rx614_cstack_done1337:
    pop rx614_rep, rx614_bstack
    pop rx614_pos, rx614_bstack
    pop $I19, rx614_bstack
    lt rx614_pos, -1, rx614_done1332
    lt rx614_pos, 0, rx614_fail1334
    eq $I19, 0, rx614_fail1334
    nqp_islist $I20, rx614_cstack
    unless $I20, rx614_jump1335
    elements $I18, rx614_bstack
    le $I18, 0, rx614_cut1336
    dec $I18
    set $I18, rx614_bstack[$I18]
  rx614_cut1336:
    assign rx614_cstack, $I18
  rx614_jump1335:
    jump $I19
  rx614_done1332:
    rx614_cur."!cursor_fail"()
    .return (rx614_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<fatarrow>" :subid("cuid_84_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 926
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx620_start
    .local string rx620_tgt
    .local int rx620_pos
    .local int rx620_off
    .local int rx620_eos
    .local int rx620_rep
    .local pmc rx620_cur
    .local pmc rx620_curclass
    .local pmc rx620_bstack
    .local pmc rx620_cstack
    rx620_start = self."!cursor_start_all"()
    set rx620_cur, rx620_start[0]
    set rx620_tgt, rx620_start[1]
    set rx620_pos, rx620_start[2]
    set rx620_curclass, rx620_start[3]
    set rx620_bstack, rx620_start[4]
    set $I19, rx620_start[5]
    store_lex unicode:"$\x{a2}", rx620_cur
    length rx620_eos, rx620_tgt
    eq $I19, 1, rx620_restart1348
    gt rx620_pos, rx620_eos, rx620_fail1349
    repr_get_attr_int $I11, self, rx620_curclass, "$!from"
    ne $I11, -1, rxscan621_done1355
    goto rxscan621_scan1354
  rxscan621_loop1353:
    inc rx620_pos
    gt rx620_pos, rx620_eos, rx620_fail1349
    repr_bind_attr_int rx620_cur, rx620_curclass, "$!from", rx620_pos
  rxscan621_scan1354:
    nqp_rxmark rx620_bstack, rxscan621_loop1353, rx620_pos, 0
  rxscan621_done1355:
    repr_bind_attr_int rx620_cur, rx620_curclass, "$!pos", rx620_pos
    $P11 = rx620_cur."fatarrow"()
    repr_get_attr_int $I11, $P11, rx620_curclass, "$!pos"
    lt $I11, 0, rx620_fail1349
    nqp_rxmark rx620_bstack, rxsubrule622_pass1356, -1, 0
  rxsubrule622_pass1356:
    rx620_cstack = rx620_cur."!cursor_capture"($P11, "fatarrow")
    repr_get_attr_int rx620_pos, $P11, rx620_curclass, "$!pos"
    rx620_cur."!cursor_pass"(rx620_pos, "term:sym<fatarrow>", 'backtrack'=>1)
    .return (rx620_cur)
  rx620_restart1348:
    repr_get_attr_obj rx620_cstack, rx620_cur, rx620_curclass, "$!cstack"
  rx620_fail1349:
    unless rx620_bstack, rx620_done1347
    pop $I19, rx620_bstack
    if_null rx620_cstack, rx620_cstack_done1352
    unless rx620_cstack, rx620_cstack_done1352
    dec $I19
    set $P11, rx620_cstack[$I19]
  rx620_cstack_done1352:
    pop rx620_rep, rx620_bstack
    pop rx620_pos, rx620_bstack
    pop $I19, rx620_bstack
    lt rx620_pos, -1, rx620_done1347
    lt rx620_pos, 0, rx620_fail1349
    eq $I19, 0, rx620_fail1349
    nqp_islist $I20, rx620_cstack
    unless $I20, rx620_jump1350
    elements $I18, rx620_bstack
    le $I18, 0, rx620_cut1351
    dec $I18
    set $I18, rx620_bstack[$I18]
  rx620_cut1351:
    assign rx620_cstack, $I18
  rx620_jump1350:
    jump $I19
  rx620_done1347:
    rx620_cur."!cursor_fail"()
    .return (rx620_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<colonpair>" :subid("cuid_85_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 927
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx623_start
    .local string rx623_tgt
    .local int rx623_pos
    .local int rx623_off
    .local int rx623_eos
    .local int rx623_rep
    .local pmc rx623_cur
    .local pmc rx623_curclass
    .local pmc rx623_bstack
    .local pmc rx623_cstack
    rx623_start = self."!cursor_start_all"()
    set rx623_cur, rx623_start[0]
    set rx623_tgt, rx623_start[1]
    set rx623_pos, rx623_start[2]
    set rx623_curclass, rx623_start[3]
    set rx623_bstack, rx623_start[4]
    set $I19, rx623_start[5]
    store_lex unicode:"$\x{a2}", rx623_cur
    length rx623_eos, rx623_tgt
    eq $I19, 1, rx623_restart1359
    gt rx623_pos, rx623_eos, rx623_fail1360
    repr_get_attr_int $I11, self, rx623_curclass, "$!from"
    ne $I11, -1, rxscan624_done1366
    goto rxscan624_scan1365
  rxscan624_loop1364:
    inc rx623_pos
    gt rx623_pos, rx623_eos, rx623_fail1360
    repr_bind_attr_int rx623_cur, rx623_curclass, "$!from", rx623_pos
  rxscan624_scan1365:
    nqp_rxmark rx623_bstack, rxscan624_loop1364, rx623_pos, 0
  rxscan624_done1366:
    repr_bind_attr_int rx623_cur, rx623_curclass, "$!pos", rx623_pos
    $P11 = rx623_cur."colonpair"()
    repr_get_attr_int $I11, $P11, rx623_curclass, "$!pos"
    lt $I11, 0, rx623_fail1360
    nqp_rxmark rx623_bstack, rxsubrule625_pass1367, -1, 0
  rxsubrule625_pass1367:
    rx623_cstack = rx623_cur."!cursor_capture"($P11, "colonpair")
    repr_get_attr_int rx623_pos, $P11, rx623_curclass, "$!pos"
    rx623_cur."!cursor_pass"(rx623_pos, "term:sym<colonpair>", 'backtrack'=>1)
    .return (rx623_cur)
  rx623_restart1359:
    repr_get_attr_obj rx623_cstack, rx623_cur, rx623_curclass, "$!cstack"
  rx623_fail1360:
    unless rx623_bstack, rx623_done1358
    pop $I19, rx623_bstack
    if_null rx623_cstack, rx623_cstack_done1363
    unless rx623_cstack, rx623_cstack_done1363
    dec $I19
    set $P11, rx623_cstack[$I19]
  rx623_cstack_done1363:
    pop rx623_rep, rx623_bstack
    pop rx623_pos, rx623_bstack
    pop $I19, rx623_bstack
    lt rx623_pos, -1, rx623_done1358
    lt rx623_pos, 0, rx623_fail1360
    eq $I19, 0, rx623_fail1360
    nqp_islist $I20, rx623_cstack
    unless $I20, rx623_jump1361
    elements $I18, rx623_bstack
    le $I18, 0, rx623_cut1362
    dec $I18
    set $I18, rx623_bstack[$I18]
  rx623_cut1362:
    assign rx623_cstack, $I18
  rx623_jump1361:
    jump $I19
  rx623_done1358:
    rx623_cur."!cursor_fail"()
    .return (rx623_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<variable>" :subid("cuid_86_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 928
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx626_start
    .local string rx626_tgt
    .local int rx626_pos
    .local int rx626_off
    .local int rx626_eos
    .local int rx626_rep
    .local pmc rx626_cur
    .local pmc rx626_curclass
    .local pmc rx626_bstack
    .local pmc rx626_cstack
    rx626_start = self."!cursor_start_all"()
    set rx626_cur, rx626_start[0]
    set rx626_tgt, rx626_start[1]
    set rx626_pos, rx626_start[2]
    set rx626_curclass, rx626_start[3]
    set rx626_bstack, rx626_start[4]
    set $I19, rx626_start[5]
    store_lex unicode:"$\x{a2}", rx626_cur
    length rx626_eos, rx626_tgt
    eq $I19, 1, rx626_restart1370
    gt rx626_pos, rx626_eos, rx626_fail1371
    repr_get_attr_int $I11, self, rx626_curclass, "$!from"
    ne $I11, -1, rxscan627_done1377
    goto rxscan627_scan1376
  rxscan627_loop1375:
    inc rx626_pos
    gt rx626_pos, rx626_eos, rx626_fail1371
    repr_bind_attr_int rx626_cur, rx626_curclass, "$!from", rx626_pos
  rxscan627_scan1376:
    nqp_rxmark rx626_bstack, rxscan627_loop1375, rx626_pos, 0
  rxscan627_done1377:
    repr_bind_attr_int rx626_cur, rx626_curclass, "$!pos", rx626_pos
    $P11 = rx626_cur."variable"()
    repr_get_attr_int $I11, $P11, rx626_curclass, "$!pos"
    lt $I11, 0, rx626_fail1371
    nqp_rxmark rx626_bstack, rxsubrule628_pass1378, -1, 0
  rxsubrule628_pass1378:
    rx626_cstack = rx626_cur."!cursor_capture"($P11, "variable")
    repr_get_attr_int rx626_pos, $P11, rx626_curclass, "$!pos"
    rx626_cur."!cursor_pass"(rx626_pos, "term:sym<variable>", 'backtrack'=>1)
    .return (rx626_cur)
  rx626_restart1370:
    repr_get_attr_obj rx626_cstack, rx626_cur, rx626_curclass, "$!cstack"
  rx626_fail1371:
    unless rx626_bstack, rx626_done1369
    pop $I19, rx626_bstack
    if_null rx626_cstack, rx626_cstack_done1374
    unless rx626_cstack, rx626_cstack_done1374
    dec $I19
    set $P11, rx626_cstack[$I19]
  rx626_cstack_done1374:
    pop rx626_rep, rx626_bstack
    pop rx626_pos, rx626_bstack
    pop $I19, rx626_bstack
    lt rx626_pos, -1, rx626_done1369
    lt rx626_pos, 0, rx626_fail1371
    eq $I19, 0, rx626_fail1371
    nqp_islist $I20, rx626_cstack
    unless $I20, rx626_jump1372
    elements $I18, rx626_bstack
    le $I18, 0, rx626_cut1373
    dec $I18
    set $I18, rx626_bstack[$I18]
  rx626_cut1373:
    assign rx626_cstack, $I18
  rx626_jump1372:
    jump $I19
  rx626_done1369:
    rx626_cur."!cursor_fail"()
    .return (rx626_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<package_declarator>" :subid("cuid_87_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 929
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx629_start
    .local string rx629_tgt
    .local int rx629_pos
    .local int rx629_off
    .local int rx629_eos
    .local int rx629_rep
    .local pmc rx629_cur
    .local pmc rx629_curclass
    .local pmc rx629_bstack
    .local pmc rx629_cstack
    rx629_start = self."!cursor_start_all"()
    set rx629_cur, rx629_start[0]
    set rx629_tgt, rx629_start[1]
    set rx629_pos, rx629_start[2]
    set rx629_curclass, rx629_start[3]
    set rx629_bstack, rx629_start[4]
    set $I19, rx629_start[5]
    store_lex unicode:"$\x{a2}", rx629_cur
    length rx629_eos, rx629_tgt
    eq $I19, 1, rx629_restart1381
    gt rx629_pos, rx629_eos, rx629_fail1382
    repr_get_attr_int $I11, self, rx629_curclass, "$!from"
    ne $I11, -1, rxscan630_done1388
    goto rxscan630_scan1387
  rxscan630_loop1386:
    inc rx629_pos
    gt rx629_pos, rx629_eos, rx629_fail1382
    repr_bind_attr_int rx629_cur, rx629_curclass, "$!from", rx629_pos
  rxscan630_scan1387:
    nqp_rxmark rx629_bstack, rxscan630_loop1386, rx629_pos, 0
  rxscan630_done1388:
    repr_bind_attr_int rx629_cur, rx629_curclass, "$!pos", rx629_pos
    $P11 = rx629_cur."package_declarator"()
    repr_get_attr_int $I11, $P11, rx629_curclass, "$!pos"
    lt $I11, 0, rx629_fail1382
    nqp_rxmark rx629_bstack, rxsubrule631_pass1389, -1, 0
  rxsubrule631_pass1389:
    rx629_cstack = rx629_cur."!cursor_capture"($P11, "package_declarator")
    repr_get_attr_int rx629_pos, $P11, rx629_curclass, "$!pos"
    rx629_cur."!cursor_pass"(rx629_pos, "term:sym<package_declarator>", 'backtrack'=>1)
    .return (rx629_cur)
  rx629_restart1381:
    repr_get_attr_obj rx629_cstack, rx629_cur, rx629_curclass, "$!cstack"
  rx629_fail1382:
    unless rx629_bstack, rx629_done1380
    pop $I19, rx629_bstack
    if_null rx629_cstack, rx629_cstack_done1385
    unless rx629_cstack, rx629_cstack_done1385
    dec $I19
    set $P11, rx629_cstack[$I19]
  rx629_cstack_done1385:
    pop rx629_rep, rx629_bstack
    pop rx629_pos, rx629_bstack
    pop $I19, rx629_bstack
    lt rx629_pos, -1, rx629_done1380
    lt rx629_pos, 0, rx629_fail1382
    eq $I19, 0, rx629_fail1382
    nqp_islist $I20, rx629_cstack
    unless $I20, rx629_jump1383
    elements $I18, rx629_bstack
    le $I18, 0, rx629_cut1384
    dec $I18
    set $I18, rx629_bstack[$I18]
  rx629_cut1384:
    assign rx629_cstack, $I18
  rx629_jump1383:
    jump $I19
  rx629_done1380:
    rx629_cur."!cursor_fail"()
    .return (rx629_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<scope_declarator>" :subid("cuid_88_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 930
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx632_start
    .local string rx632_tgt
    .local int rx632_pos
    .local int rx632_off
    .local int rx632_eos
    .local int rx632_rep
    .local pmc rx632_cur
    .local pmc rx632_curclass
    .local pmc rx632_bstack
    .local pmc rx632_cstack
    rx632_start = self."!cursor_start_all"()
    set rx632_cur, rx632_start[0]
    set rx632_tgt, rx632_start[1]
    set rx632_pos, rx632_start[2]
    set rx632_curclass, rx632_start[3]
    set rx632_bstack, rx632_start[4]
    set $I19, rx632_start[5]
    store_lex unicode:"$\x{a2}", rx632_cur
    length rx632_eos, rx632_tgt
    eq $I19, 1, rx632_restart1392
    gt rx632_pos, rx632_eos, rx632_fail1393
    repr_get_attr_int $I11, self, rx632_curclass, "$!from"
    ne $I11, -1, rxscan633_done1399
    goto rxscan633_scan1398
  rxscan633_loop1397:
    inc rx632_pos
    gt rx632_pos, rx632_eos, rx632_fail1393
    repr_bind_attr_int rx632_cur, rx632_curclass, "$!from", rx632_pos
  rxscan633_scan1398:
    nqp_rxmark rx632_bstack, rxscan633_loop1397, rx632_pos, 0
  rxscan633_done1399:
    repr_bind_attr_int rx632_cur, rx632_curclass, "$!pos", rx632_pos
    $P11 = rx632_cur."scope_declarator"()
    repr_get_attr_int $I11, $P11, rx632_curclass, "$!pos"
    lt $I11, 0, rx632_fail1393
    nqp_rxmark rx632_bstack, rxsubrule634_pass1400, -1, 0
  rxsubrule634_pass1400:
    rx632_cstack = rx632_cur."!cursor_capture"($P11, "scope_declarator")
    repr_get_attr_int rx632_pos, $P11, rx632_curclass, "$!pos"
    rx632_cur."!cursor_pass"(rx632_pos, "term:sym<scope_declarator>", 'backtrack'=>1)
    .return (rx632_cur)
  rx632_restart1392:
    repr_get_attr_obj rx632_cstack, rx632_cur, rx632_curclass, "$!cstack"
  rx632_fail1393:
    unless rx632_bstack, rx632_done1391
    pop $I19, rx632_bstack
    if_null rx632_cstack, rx632_cstack_done1396
    unless rx632_cstack, rx632_cstack_done1396
    dec $I19
    set $P11, rx632_cstack[$I19]
  rx632_cstack_done1396:
    pop rx632_rep, rx632_bstack
    pop rx632_pos, rx632_bstack
    pop $I19, rx632_bstack
    lt rx632_pos, -1, rx632_done1391
    lt rx632_pos, 0, rx632_fail1393
    eq $I19, 0, rx632_fail1393
    nqp_islist $I20, rx632_cstack
    unless $I20, rx632_jump1394
    elements $I18, rx632_bstack
    le $I18, 0, rx632_cut1395
    dec $I18
    set $I18, rx632_bstack[$I18]
  rx632_cut1395:
    assign rx632_cstack, $I18
  rx632_jump1394:
    jump $I19
  rx632_done1391:
    rx632_cur."!cursor_fail"()
    .return (rx632_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<routine_declarator>" :subid("cuid_89_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 931
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx635_start
    .local string rx635_tgt
    .local int rx635_pos
    .local int rx635_off
    .local int rx635_eos
    .local int rx635_rep
    .local pmc rx635_cur
    .local pmc rx635_curclass
    .local pmc rx635_bstack
    .local pmc rx635_cstack
    rx635_start = self."!cursor_start_all"()
    set rx635_cur, rx635_start[0]
    set rx635_tgt, rx635_start[1]
    set rx635_pos, rx635_start[2]
    set rx635_curclass, rx635_start[3]
    set rx635_bstack, rx635_start[4]
    set $I19, rx635_start[5]
    store_lex unicode:"$\x{a2}", rx635_cur
    length rx635_eos, rx635_tgt
    eq $I19, 1, rx635_restart1403
    gt rx635_pos, rx635_eos, rx635_fail1404
    repr_get_attr_int $I11, self, rx635_curclass, "$!from"
    ne $I11, -1, rxscan636_done1410
    goto rxscan636_scan1409
  rxscan636_loop1408:
    inc rx635_pos
    gt rx635_pos, rx635_eos, rx635_fail1404
    repr_bind_attr_int rx635_cur, rx635_curclass, "$!from", rx635_pos
  rxscan636_scan1409:
    nqp_rxmark rx635_bstack, rxscan636_loop1408, rx635_pos, 0
  rxscan636_done1410:
    repr_bind_attr_int rx635_cur, rx635_curclass, "$!pos", rx635_pos
    $P11 = rx635_cur."routine_declarator"()
    repr_get_attr_int $I11, $P11, rx635_curclass, "$!pos"
    lt $I11, 0, rx635_fail1404
    nqp_rxmark rx635_bstack, rxsubrule637_pass1411, -1, 0
  rxsubrule637_pass1411:
    rx635_cstack = rx635_cur."!cursor_capture"($P11, "routine_declarator")
    repr_get_attr_int rx635_pos, $P11, rx635_curclass, "$!pos"
    rx635_cur."!cursor_pass"(rx635_pos, "term:sym<routine_declarator>", 'backtrack'=>1)
    .return (rx635_cur)
  rx635_restart1403:
    repr_get_attr_obj rx635_cstack, rx635_cur, rx635_curclass, "$!cstack"
  rx635_fail1404:
    unless rx635_bstack, rx635_done1402
    pop $I19, rx635_bstack
    if_null rx635_cstack, rx635_cstack_done1407
    unless rx635_cstack, rx635_cstack_done1407
    dec $I19
    set $P11, rx635_cstack[$I19]
  rx635_cstack_done1407:
    pop rx635_rep, rx635_bstack
    pop rx635_pos, rx635_bstack
    pop $I19, rx635_bstack
    lt rx635_pos, -1, rx635_done1402
    lt rx635_pos, 0, rx635_fail1404
    eq $I19, 0, rx635_fail1404
    nqp_islist $I20, rx635_cstack
    unless $I20, rx635_jump1405
    elements $I18, rx635_bstack
    le $I18, 0, rx635_cut1406
    dec $I18
    set $I18, rx635_bstack[$I18]
  rx635_cut1406:
    assign rx635_cstack, $I18
  rx635_jump1405:
    jump $I19
  rx635_done1402:
    rx635_cur."!cursor_fail"()
    .return (rx635_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<multi_declarator>" :subid("cuid_90_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 932
    .param pmc _lex_param_0 
    .const 'Sub' $P5003 = 'cuid_91_1361734139.417' 
    capture_lex $P5003 
    .const 'Sub' $P5003 = 'cuid_92_1361734139.417' 
    capture_lex $P5003 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx638_start
    .local string rx638_tgt
    .local int rx638_pos
    .local int rx638_off
    .local int rx638_eos
    .local int rx638_rep
    .local pmc rx638_cur
    .local pmc rx638_curclass
    .local pmc rx638_bstack
    .local pmc rx638_cstack
    rx638_start = self."!cursor_start_all"()
    set rx638_cur, rx638_start[0]
    set rx638_tgt, rx638_start[1]
    set rx638_pos, rx638_start[2]
    set rx638_curclass, rx638_start[3]
    set rx638_bstack, rx638_start[4]
    set $I19, rx638_start[5]
    store_lex unicode:"$\x{a2}", rx638_cur
    length rx638_eos, rx638_tgt
    eq $I19, 1, rx638_restart1414
    gt rx638_pos, rx638_eos, rx638_fail1415
    repr_get_attr_int $I11, self, rx638_curclass, "$!from"
    ne $I11, -1, rxscan639_done1421
    goto rxscan639_scan1420
  rxscan639_loop1419:
    inc rx638_pos
    gt rx638_pos, rx638_eos, rx638_fail1415
    repr_bind_attr_int rx638_cur, rx638_curclass, "$!from", rx638_pos
  rxscan639_scan1420:
    nqp_rxmark rx638_bstack, rxscan639_loop1419, rx638_pos, 0
  rxscan639_done1421:
    .const 'Sub' $P5001 = 'cuid_91_1361734139.417' 
    capture_lex $P5001
    repr_bind_attr_int rx638_cur, rx638_curclass, "$!pos", rx638_pos
    $P11 = rx638_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx638_curclass, "$!pos"
    lt $I11, 0, rx638_fail1415
    .const 'Sub' $P5002 = 'cuid_92_1361734139.417' 
    capture_lex $P5002
    repr_bind_attr_int rx638_cur, rx638_curclass, "$!pos", rx638_pos
    $P11 = rx638_cur."before"($P5002)
    repr_get_attr_int $I11, $P11, rx638_curclass, "$!pos"
    ge $I11, 0, rx638_fail1415
    repr_bind_attr_int rx638_cur, rx638_curclass, "$!pos", rx638_pos
    $P11 = rx638_cur."multi_declarator"()
    repr_get_attr_int $I11, $P11, rx638_curclass, "$!pos"
    lt $I11, 0, rx638_fail1415
    nqp_rxmark rx638_bstack, rxsubrule647_pass1451, -1, 0
  rxsubrule647_pass1451:
    rx638_cstack = rx638_cur."!cursor_capture"($P11, "multi_declarator")
    repr_get_attr_int rx638_pos, $P11, rx638_curclass, "$!pos"
    rx638_cur."!cursor_pass"(rx638_pos, "term:sym<multi_declarator>", 'backtrack'=>1)
    .return (rx638_cur)
  rx638_restart1414:
    repr_get_attr_obj rx638_cstack, rx638_cur, rx638_curclass, "$!cstack"
  rx638_fail1415:
    unless rx638_bstack, rx638_done1413
    pop $I19, rx638_bstack
    if_null rx638_cstack, rx638_cstack_done1418
    unless rx638_cstack, rx638_cstack_done1418
    dec $I19
    set $P11, rx638_cstack[$I19]
  rx638_cstack_done1418:
    pop rx638_rep, rx638_bstack
    pop rx638_pos, rx638_bstack
    pop $I19, rx638_bstack
    lt rx638_pos, -1, rx638_done1413
    lt rx638_pos, 0, rx638_fail1415
    eq $I19, 0, rx638_fail1415
    nqp_islist $I20, rx638_cstack
    unless $I20, rx638_jump1416
    elements $I18, rx638_bstack
    le $I18, 0, rx638_cut1417
    dec $I18
    set $I18, rx638_bstack[$I18]
  rx638_cut1417:
    assign rx638_cstack, $I18
  rx638_jump1416:
    jump $I19
  rx638_done1413:
    rx638_cur."!cursor_fail"()
    .return (rx638_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_91_1361734139.417") :anon :lex :outer("cuid_90_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx640_start
    .local string rx640_tgt
    .local int rx640_pos
    .local int rx640_off
    .local int rx640_eos
    .local int rx640_rep
    .local pmc rx640_cur
    .local pmc rx640_curclass
    .local pmc rx640_bstack
    .local pmc rx640_cstack
    rx640_start = self."!cursor_start_all"()
    set rx640_cur, rx640_start[0]
    set rx640_tgt, rx640_start[1]
    set rx640_pos, rx640_start[2]
    set rx640_curclass, rx640_start[3]
    set rx640_bstack, rx640_start[4]
    set $I19, rx640_start[5]
    store_lex unicode:"$\x{a2}", rx640_cur
    length rx640_eos, rx640_tgt
    eq $I19, 1, rx640_restart1424
    gt rx640_pos, rx640_eos, rx640_fail1425
    repr_get_attr_int $I11, self, rx640_curclass, "$!from"
    ne $I11, -1, rxscan641_done1431
    goto rxscan641_scan1430
  rxscan641_loop1429:
    inc rx640_pos
    gt rx640_pos, rx640_eos, rx640_fail1425
    repr_bind_attr_int rx640_cur, rx640_curclass, "$!from", rx640_pos
  rxscan641_scan1430:
    nqp_rxmark rx640_bstack, rxscan641_loop1429, rx640_pos, 0
  rxscan641_done1431:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt642_01433
    nqp_push_label $P11, alt642_11434
    nqp_push_label $P11, alt642_21435
    nqp_rxmark rx640_bstack, alt642_end1432, -1, 0
    rx640_cur."!alt"(rx640_pos, "alt_nfa__17_1361734141.261", $P11)
    goto rx640_fail1425
  alt642_01433:
    add $I11, rx640_pos, 5
    gt $I11, rx640_eos, rx640_fail1425
    substr $S10, rx640_tgt, rx640_pos, 5
    ne $S10, ucs4:"multi", rx640_fail1425
    add rx640_pos, 5
    goto alt642_end1432
  alt642_11434:
    add $I11, rx640_pos, 5
    gt $I11, rx640_eos, rx640_fail1425
    substr $S10, rx640_tgt, rx640_pos, 5
    ne $S10, ucs4:"proto", rx640_fail1425
    add rx640_pos, 5
    goto alt642_end1432
  alt642_21435:
    add $I11, rx640_pos, 4
    gt $I11, rx640_eos, rx640_fail1425
    substr $S10, rx640_tgt, rx640_pos, 4
    ne $S10, ucs4:"only", rx640_fail1425
    add rx640_pos, 4
    goto alt642_end1432
  alt642_end1432:
    rx640_cur."!cursor_pass"(rx640_pos, 'backtrack'=>1)
    .return (rx640_cur)
  rx640_restart1424:
    repr_get_attr_obj rx640_cstack, rx640_cur, rx640_curclass, "$!cstack"
  rx640_fail1425:
    unless rx640_bstack, rx640_done1423
    pop $I19, rx640_bstack
    if_null rx640_cstack, rx640_cstack_done1428
    unless rx640_cstack, rx640_cstack_done1428
    dec $I19
    set $P11, rx640_cstack[$I19]
  rx640_cstack_done1428:
    pop rx640_rep, rx640_bstack
    pop rx640_pos, rx640_bstack
    pop $I19, rx640_bstack
    lt rx640_pos, -1, rx640_done1423
    lt rx640_pos, 0, rx640_fail1425
    eq $I19, 0, rx640_fail1425
    nqp_islist $I20, rx640_cstack
    unless $I20, rx640_jump1426
    elements $I18, rx640_bstack
    le $I18, 0, rx640_cut1427
    dec $I18
    set $I18, rx640_bstack[$I18]
  rx640_cut1427:
    assign rx640_cstack, $I18
  rx640_jump1426:
    jump $I19
  rx640_done1423:
    rx640_cur."!cursor_fail"()
    .return (rx640_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_92_1361734139.417") :anon :lex :outer("cuid_90_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx643_start
    .local string rx643_tgt
    .local int rx643_pos
    .local int rx643_off
    .local int rx643_eos
    .local int rx643_rep
    .local pmc rx643_cur
    .local pmc rx643_curclass
    .local pmc rx643_bstack
    .local pmc rx643_cstack
    rx643_start = self."!cursor_start_all"()
    set rx643_cur, rx643_start[0]
    set rx643_tgt, rx643_start[1]
    set rx643_pos, rx643_start[2]
    set rx643_curclass, rx643_start[3]
    set rx643_bstack, rx643_start[4]
    set $I19, rx643_start[5]
    store_lex unicode:"$\x{a2}", rx643_cur
    length rx643_eos, rx643_tgt
    eq $I19, 1, rx643_restart1438
    gt rx643_pos, rx643_eos, rx643_fail1439
    repr_get_attr_int $I11, self, rx643_curclass, "$!from"
    ne $I11, -1, rxscan644_done1445
    goto rxscan644_scan1444
  rxscan644_loop1443:
    inc rx643_pos
    gt rx643_pos, rx643_eos, rx643_fail1439
    repr_bind_attr_int rx643_cur, rx643_curclass, "$!from", rx643_pos
  rxscan644_scan1444:
    nqp_rxmark rx643_bstack, rxscan644_loop1443, rx643_pos, 0
  rxscan644_done1445:
    add $I11, rx643_pos, 5
    gt $I11, rx643_eos, rx643_fail1439
    substr $S10, rx643_tgt, rx643_pos, 5
    ne $S10, ucs4:"proto", rx643_fail1439
    add rx643_pos, 5
    repr_bind_attr_int rx643_cur, rx643_curclass, "$!pos", rx643_pos
    $P11 = rx643_cur."ws"()
    repr_get_attr_int $I11, $P11, rx643_curclass, "$!pos"
    lt $I11, 0, rx643_fail1439
    repr_get_attr_int rx643_pos, $P11, rx643_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt646_01448
    nqp_push_label $P11, alt646_11449
    nqp_push_label $P11, alt646_21450
    nqp_rxmark rx643_bstack, alt646_end1447, -1, 0
    rx643_cur."!alt"(rx643_pos, "alt_nfa__18_1361734141.27", $P11)
    goto rx643_fail1439
  alt646_01448:
    add $I11, rx643_pos, 5
    gt $I11, rx643_eos, rx643_fail1439
    substr $S10, rx643_tgt, rx643_pos, 5
    ne $S10, ucs4:"regex", rx643_fail1439
    add rx643_pos, 5
    goto alt646_end1447
  alt646_11449:
    add $I11, rx643_pos, 5
    gt $I11, rx643_eos, rx643_fail1439
    substr $S10, rx643_tgt, rx643_pos, 5
    ne $S10, ucs4:"token", rx643_fail1439
    add rx643_pos, 5
    goto alt646_end1447
  alt646_21450:
    add $I11, rx643_pos, 4
    gt $I11, rx643_eos, rx643_fail1439
    substr $S10, rx643_tgt, rx643_pos, 4
    ne $S10, ucs4:"rule", rx643_fail1439
    add rx643_pos, 4
    goto alt646_end1447
  alt646_end1447:
    nqp_rxcommit rx643_bstack, alt646_end1447
    rx643_cur."!cursor_pass"(rx643_pos, 'backtrack'=>1)
    .return (rx643_cur)
  rx643_restart1438:
    repr_get_attr_obj rx643_cstack, rx643_cur, rx643_curclass, "$!cstack"
  rx643_fail1439:
    unless rx643_bstack, rx643_done1437
    pop $I19, rx643_bstack
    if_null rx643_cstack, rx643_cstack_done1442
    unless rx643_cstack, rx643_cstack_done1442
    dec $I19
    set $P11, rx643_cstack[$I19]
  rx643_cstack_done1442:
    pop rx643_rep, rx643_bstack
    pop rx643_pos, rx643_bstack
    pop $I19, rx643_bstack
    lt rx643_pos, -1, rx643_done1437
    lt rx643_pos, 0, rx643_fail1439
    eq $I19, 0, rx643_fail1439
    nqp_islist $I20, rx643_cstack
    unless $I20, rx643_jump1440
    elements $I18, rx643_bstack
    le $I18, 0, rx643_cut1441
    dec $I18
    set $I18, rx643_bstack[$I18]
  rx643_cut1441:
    assign rx643_cstack, $I18
  rx643_jump1440:
    jump $I19
  rx643_done1437:
    rx643_cur."!cursor_fail"()
    .return (rx643_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<regex_declarator>" :subid("cuid_93_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 937
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx648_start
    .local string rx648_tgt
    .local int rx648_pos
    .local int rx648_off
    .local int rx648_eos
    .local int rx648_rep
    .local pmc rx648_cur
    .local pmc rx648_curclass
    .local pmc rx648_bstack
    .local pmc rx648_cstack
    rx648_start = self."!cursor_start_all"()
    set rx648_cur, rx648_start[0]
    set rx648_tgt, rx648_start[1]
    set rx648_pos, rx648_start[2]
    set rx648_curclass, rx648_start[3]
    set rx648_bstack, rx648_start[4]
    set $I19, rx648_start[5]
    store_lex unicode:"$\x{a2}", rx648_cur
    length rx648_eos, rx648_tgt
    eq $I19, 1, rx648_restart1454
    gt rx648_pos, rx648_eos, rx648_fail1455
    repr_get_attr_int $I11, self, rx648_curclass, "$!from"
    ne $I11, -1, rxscan649_done1461
    goto rxscan649_scan1460
  rxscan649_loop1459:
    inc rx648_pos
    gt rx648_pos, rx648_eos, rx648_fail1455
    repr_bind_attr_int rx648_cur, rx648_curclass, "$!from", rx648_pos
  rxscan649_scan1460:
    nqp_rxmark rx648_bstack, rxscan649_loop1459, rx648_pos, 0
  rxscan649_done1461:
    repr_bind_attr_int rx648_cur, rx648_curclass, "$!pos", rx648_pos
    $P11 = rx648_cur."regex_declarator"()
    repr_get_attr_int $I11, $P11, rx648_curclass, "$!pos"
    lt $I11, 0, rx648_fail1455
    nqp_rxmark rx648_bstack, rxsubrule650_pass1462, -1, 0
  rxsubrule650_pass1462:
    rx648_cstack = rx648_cur."!cursor_capture"($P11, "regex_declarator")
    repr_get_attr_int rx648_pos, $P11, rx648_curclass, "$!pos"
    rx648_cur."!cursor_pass"(rx648_pos, "term:sym<regex_declarator>", 'backtrack'=>1)
    .return (rx648_cur)
  rx648_restart1454:
    repr_get_attr_obj rx648_cstack, rx648_cur, rx648_curclass, "$!cstack"
  rx648_fail1455:
    unless rx648_bstack, rx648_done1453
    pop $I19, rx648_bstack
    if_null rx648_cstack, rx648_cstack_done1458
    unless rx648_cstack, rx648_cstack_done1458
    dec $I19
    set $P11, rx648_cstack[$I19]
  rx648_cstack_done1458:
    pop rx648_rep, rx648_bstack
    pop rx648_pos, rx648_bstack
    pop $I19, rx648_bstack
    lt rx648_pos, -1, rx648_done1453
    lt rx648_pos, 0, rx648_fail1455
    eq $I19, 0, rx648_fail1455
    nqp_islist $I20, rx648_cstack
    unless $I20, rx648_jump1456
    elements $I18, rx648_bstack
    le $I18, 0, rx648_cut1457
    dec $I18
    set $I18, rx648_bstack[$I18]
  rx648_cut1457:
    assign rx648_cstack, $I18
  rx648_jump1456:
    jump $I19
  rx648_done1453:
    rx648_cur."!cursor_fail"()
    .return (rx648_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<statement_prefix>" :subid("cuid_94_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 938
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx651_start
    .local string rx651_tgt
    .local int rx651_pos
    .local int rx651_off
    .local int rx651_eos
    .local int rx651_rep
    .local pmc rx651_cur
    .local pmc rx651_curclass
    .local pmc rx651_bstack
    .local pmc rx651_cstack
    rx651_start = self."!cursor_start_all"()
    set rx651_cur, rx651_start[0]
    set rx651_tgt, rx651_start[1]
    set rx651_pos, rx651_start[2]
    set rx651_curclass, rx651_start[3]
    set rx651_bstack, rx651_start[4]
    set $I19, rx651_start[5]
    store_lex unicode:"$\x{a2}", rx651_cur
    length rx651_eos, rx651_tgt
    eq $I19, 1, rx651_restart1465
    gt rx651_pos, rx651_eos, rx651_fail1466
    repr_get_attr_int $I11, self, rx651_curclass, "$!from"
    ne $I11, -1, rxscan652_done1472
    goto rxscan652_scan1471
  rxscan652_loop1470:
    inc rx651_pos
    gt rx651_pos, rx651_eos, rx651_fail1466
    repr_bind_attr_int rx651_cur, rx651_curclass, "$!from", rx651_pos
  rxscan652_scan1471:
    nqp_rxmark rx651_bstack, rxscan652_loop1470, rx651_pos, 0
  rxscan652_done1472:
    repr_bind_attr_int rx651_cur, rx651_curclass, "$!pos", rx651_pos
    $P11 = rx651_cur."statement_prefix"()
    repr_get_attr_int $I11, $P11, rx651_curclass, "$!pos"
    lt $I11, 0, rx651_fail1466
    nqp_rxmark rx651_bstack, rxsubrule653_pass1473, -1, 0
  rxsubrule653_pass1473:
    rx651_cstack = rx651_cur."!cursor_capture"($P11, "statement_prefix")
    repr_get_attr_int rx651_pos, $P11, rx651_curclass, "$!pos"
    rx651_cur."!cursor_pass"(rx651_pos, "term:sym<statement_prefix>", 'backtrack'=>1)
    .return (rx651_cur)
  rx651_restart1465:
    repr_get_attr_obj rx651_cstack, rx651_cur, rx651_curclass, "$!cstack"
  rx651_fail1466:
    unless rx651_bstack, rx651_done1464
    pop $I19, rx651_bstack
    if_null rx651_cstack, rx651_cstack_done1469
    unless rx651_cstack, rx651_cstack_done1469
    dec $I19
    set $P11, rx651_cstack[$I19]
  rx651_cstack_done1469:
    pop rx651_rep, rx651_bstack
    pop rx651_pos, rx651_bstack
    pop $I19, rx651_bstack
    lt rx651_pos, -1, rx651_done1464
    lt rx651_pos, 0, rx651_fail1466
    eq $I19, 0, rx651_fail1466
    nqp_islist $I20, rx651_cstack
    unless $I20, rx651_jump1467
    elements $I18, rx651_bstack
    le $I18, 0, rx651_cut1468
    dec $I18
    set $I18, rx651_bstack[$I18]
  rx651_cut1468:
    assign rx651_cstack, $I18
  rx651_jump1467:
    jump $I19
  rx651_done1464:
    rx651_cur."!cursor_fail"()
    .return (rx651_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<lambda>" :subid("cuid_95_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 939
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx654_start
    .local string rx654_tgt
    .local int rx654_pos
    .local int rx654_off
    .local int rx654_eos
    .local int rx654_rep
    .local pmc rx654_cur
    .local pmc rx654_curclass
    .local pmc rx654_bstack
    .local pmc rx654_cstack
    rx654_start = self."!cursor_start_all"()
    set rx654_cur, rx654_start[0]
    set rx654_tgt, rx654_start[1]
    set rx654_pos, rx654_start[2]
    set rx654_curclass, rx654_start[3]
    set rx654_bstack, rx654_start[4]
    set $I19, rx654_start[5]
    store_lex unicode:"$\x{a2}", rx654_cur
    length rx654_eos, rx654_tgt
    eq $I19, 1, rx654_restart1476
    gt rx654_pos, rx654_eos, rx654_fail1477
    repr_get_attr_int $I11, self, rx654_curclass, "$!from"
    ne $I11, -1, rxscan655_done1483
    goto rxscan655_scan1482
  rxscan655_loop1481:
    inc rx654_pos
    gt rx654_pos, rx654_eos, rx654_fail1477
    repr_bind_attr_int rx654_cur, rx654_curclass, "$!from", rx654_pos
  rxscan655_scan1482:
    nqp_rxmark rx654_bstack, rxscan655_loop1481, rx654_pos, 0
  rxscan655_done1483:
    repr_bind_attr_int rx654_cur, rx654_curclass, "$!pos", rx654_pos
    $P11 = rx654_cur."lambda"()
    repr_get_attr_int $I11, $P11, rx654_curclass, "$!pos"
    lt $I11, 0, rx654_fail1477
    repr_bind_attr_int rx654_cur, rx654_curclass, "$!pos", rx654_pos
    $P11 = rx654_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx654_curclass, "$!pos"
    lt $I11, 0, rx654_fail1477
    nqp_rxmark rx654_bstack, rxsubrule656_pass1484, -1, 0
  rxsubrule656_pass1484:
    rx654_cstack = rx654_cur."!cursor_capture"($P11, "pblock")
    repr_get_attr_int rx654_pos, $P11, rx654_curclass, "$!pos"
    rx654_cur."!cursor_pass"(rx654_pos, "term:sym<lambda>", 'backtrack'=>1)
    .return (rx654_cur)
  rx654_restart1476:
    repr_get_attr_obj rx654_cstack, rx654_cur, rx654_curclass, "$!cstack"
  rx654_fail1477:
    unless rx654_bstack, rx654_done1475
    pop $I19, rx654_bstack
    if_null rx654_cstack, rx654_cstack_done1480
    unless rx654_cstack, rx654_cstack_done1480
    dec $I19
    set $P11, rx654_cstack[$I19]
  rx654_cstack_done1480:
    pop rx654_rep, rx654_bstack
    pop rx654_pos, rx654_bstack
    pop $I19, rx654_bstack
    lt rx654_pos, -1, rx654_done1475
    lt rx654_pos, 0, rx654_fail1477
    eq $I19, 0, rx654_fail1477
    nqp_islist $I20, rx654_cstack
    unless $I20, rx654_jump1478
    elements $I18, rx654_bstack
    le $I18, 0, rx654_cut1479
    dec $I18
    set $I18, rx654_bstack[$I18]
  rx654_cut1479:
    assign rx654_cstack, $I18
  rx654_jump1478:
    jump $I19
  rx654_done1475:
    rx654_cur."!cursor_fail"()
    .return (rx654_cur) 
.end
.HLL "nqp"
.namespace []
.sub "fatarrow" :subid("cuid_96_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 941
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx657_start
    .local string rx657_tgt
    .local int rx657_pos
    .local int rx657_off
    .local int rx657_eos
    .local int rx657_rep
    .local pmc rx657_cur
    .local pmc rx657_curclass
    .local pmc rx657_bstack
    .local pmc rx657_cstack
    rx657_start = self."!cursor_start_all"()
    set rx657_cur, rx657_start[0]
    set rx657_tgt, rx657_start[1]
    set rx657_pos, rx657_start[2]
    set rx657_curclass, rx657_start[3]
    set rx657_bstack, rx657_start[4]
    set $I19, rx657_start[5]
    store_lex unicode:"$\x{a2}", rx657_cur
    length rx657_eos, rx657_tgt
    eq $I19, 1, rx657_restart1487
    gt rx657_pos, rx657_eos, rx657_fail1488
    repr_get_attr_int $I11, self, rx657_curclass, "$!from"
    ne $I11, -1, rxscan658_done1494
    goto rxscan658_scan1493
  rxscan658_loop1492:
    inc rx657_pos
    gt rx657_pos, rx657_eos, rx657_fail1488
    repr_bind_attr_int rx657_cur, rx657_curclass, "$!from", rx657_pos
  rxscan658_scan1493:
    nqp_rxmark rx657_bstack, rxscan658_loop1492, rx657_pos, 0
  rxscan658_done1494:
    repr_bind_attr_int rx657_cur, rx657_curclass, "$!pos", rx657_pos
    $P11 = rx657_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx657_curclass, "$!pos"
    lt $I11, 0, rx657_fail1488
    nqp_rxmark rx657_bstack, rxsubrule659_pass1495, -1, 0
  rxsubrule659_pass1495:
    rx657_cstack = rx657_cur."!cursor_capture"($P11, "key")
    repr_get_attr_int rx657_pos, $P11, rx657_curclass, "$!pos"
    nqp_rxmark rx657_bstack, rxquantr660_done1497, rx657_pos, 0
  rxquantr660_loop1496:
    ge rx657_pos, rx657_eos, rx657_fail1488
    substr $S11, rx657_tgt, rx657_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx657_fail1488
    inc rx657_pos
    nqp_rxpeek $I19, rx657_bstack, rxquantr660_done1497
    inc $I19
    inc $I19
    set rx657_rep, rx657_bstack[$I19]
    nqp_rxcommit rx657_bstack, rxquantr660_done1497
    inc rx657_rep
    nqp_rxmark rx657_bstack, rxquantr660_done1497, rx657_pos, rx657_rep
    goto rxquantr660_loop1496
  rxquantr660_done1497:
    add $I11, rx657_pos, 2
    gt $I11, rx657_eos, rx657_fail1488
    substr $S10, rx657_tgt, rx657_pos, 2
    ne $S10, ucs4:"=>", rx657_fail1488
    add rx657_pos, 2
    repr_bind_attr_int rx657_cur, rx657_curclass, "$!pos", rx657_pos
    $P11 = rx657_cur."ws"()
    repr_get_attr_int $I11, $P11, rx657_curclass, "$!pos"
    lt $I11, 0, rx657_fail1488
    repr_get_attr_int rx657_pos, $P11, rx657_curclass, "$!pos"
    repr_bind_attr_int rx657_cur, rx657_curclass, "$!pos", rx657_pos
    $P11 = rx657_cur."EXPR"("i=")
    repr_get_attr_int $I11, $P11, rx657_curclass, "$!pos"
    lt $I11, 0, rx657_fail1488
    nqp_rxmark rx657_bstack, rxsubrule662_pass1499, -1, 0
  rxsubrule662_pass1499:
    rx657_cstack = rx657_cur."!cursor_capture"($P11, "val")
    repr_get_attr_int rx657_pos, $P11, rx657_curclass, "$!pos"
    rx657_cur."!cursor_pass"(rx657_pos, "fatarrow", 'backtrack'=>1)
    .return (rx657_cur)
  rx657_restart1487:
    repr_get_attr_obj rx657_cstack, rx657_cur, rx657_curclass, "$!cstack"
  rx657_fail1488:
    unless rx657_bstack, rx657_done1486
    pop $I19, rx657_bstack
    if_null rx657_cstack, rx657_cstack_done1491
    unless rx657_cstack, rx657_cstack_done1491
    dec $I19
    set $P11, rx657_cstack[$I19]
  rx657_cstack_done1491:
    pop rx657_rep, rx657_bstack
    pop rx657_pos, rx657_bstack
    pop $I19, rx657_bstack
    lt rx657_pos, -1, rx657_done1486
    lt rx657_pos, 0, rx657_fail1488
    eq $I19, 0, rx657_fail1488
    nqp_islist $I20, rx657_cstack
    unless $I20, rx657_jump1489
    elements $I18, rx657_bstack
    le $I18, 0, rx657_cut1490
    dec $I18
    set $I18, rx657_bstack[$I18]
  rx657_cut1490:
    assign rx657_cstack, $I18
  rx657_jump1489:
    jump $I19
  rx657_done1486:
    rx657_cur."!cursor_fail"()
    .return (rx657_cur) 
.end
.HLL "nqp"
.namespace []
.sub "colonpair" :subid("cuid_97_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 945
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx663_start
    .local string rx663_tgt
    .local int rx663_pos
    .local int rx663_off
    .local int rx663_eos
    .local int rx663_rep
    .local pmc rx663_cur
    .local pmc rx663_curclass
    .local pmc rx663_bstack
    .local pmc rx663_cstack
    rx663_start = self."!cursor_start_all"()
    set rx663_cur, rx663_start[0]
    set rx663_tgt, rx663_start[1]
    set rx663_pos, rx663_start[2]
    set rx663_curclass, rx663_start[3]
    set rx663_bstack, rx663_start[4]
    set $I19, rx663_start[5]
    store_lex unicode:"$\x{a2}", rx663_cur
    length rx663_eos, rx663_tgt
    eq $I19, 1, rx663_restart1502
    gt rx663_pos, rx663_eos, rx663_fail1503
    repr_get_attr_int $I11, self, rx663_curclass, "$!from"
    ne $I11, -1, rxscan664_done1509
    goto rxscan664_scan1508
  rxscan664_loop1507:
    inc rx663_pos
    gt rx663_pos, rx663_eos, rx663_fail1503
    repr_bind_attr_int rx663_cur, rx663_curclass, "$!from", rx663_pos
  rxscan664_scan1508:
    nqp_rxmark rx663_bstack, rxscan664_loop1507, rx663_pos, 0
  rxscan664_done1509:
    add $I11, rx663_pos, 1
    gt $I11, rx663_eos, rx663_fail1503
    substr $S10, rx663_tgt, rx663_pos, 1
    ne $S10, ucs4:":", rx663_fail1503
    add rx663_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt665_01511
    nqp_push_label $P11, alt665_11515
    nqp_push_label $P11, alt665_21521
    nqp_push_label $P11, alt665_31523
    nqp_rxmark rx663_bstack, alt665_end1510, -1, 0
    rx663_cur."!alt"(rx663_pos, "alt_nfa__19_1361734141.312", $P11)
    goto rx663_fail1503
  alt665_01511:
    nqp_rxmark rx663_bstack, rxcap666_fail1513, rx663_pos, 0
    add $I11, rx663_pos, 1
    gt $I11, rx663_eos, rx663_fail1503
    substr $S10, rx663_tgt, rx663_pos, 1
    ne $S10, ucs4:"!", rx663_fail1503
    add rx663_pos, 1
    nqp_rxpeek $I19, rx663_bstack, rxcap666_fail1513
    inc $I19
    set $I11, rx663_bstack[$I19]
    repr_bind_attr_int rx663_cur, rx663_curclass, "$!pos", rx663_pos
    $P11 = rx663_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx663_pos)
    rx663_cstack = rx663_cur."!cursor_capture"($P11, "not")
    goto rxcap666_done1512
  rxcap666_fail1513:
    goto rx663_fail1503
  rxcap666_done1512:
    repr_bind_attr_int rx663_cur, rx663_curclass, "$!pos", rx663_pos
    $P11 = rx663_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx663_curclass, "$!pos"
    lt $I11, 0, rx663_fail1503
    nqp_rxmark rx663_bstack, rxsubrule667_pass1514, -1, 0
  rxsubrule667_pass1514:
    rx663_cstack = rx663_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx663_pos, $P11, rx663_curclass, "$!pos"
    goto alt665_end1510
  alt665_11515:
    repr_bind_attr_int rx663_cur, rx663_curclass, "$!pos", rx663_pos
    $P11 = rx663_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx663_curclass, "$!pos"
    lt $I11, 0, rx663_fail1503
    nqp_rxmark rx663_bstack, rxsubrule668_pass1516, -1, 0
  rxsubrule668_pass1516:
    rx663_cstack = rx663_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx663_pos, $P11, rx663_curclass, "$!pos"
    nqp_rxmark rx663_bstack, rxquantr669_done1518, rx663_pos, 0
  rxquantr669_loop1517:
    repr_bind_attr_int rx663_cur, rx663_curclass, "$!pos", rx663_pos
    $P11 = rx663_cur."circumfix"()
    repr_get_attr_int $I11, $P11, rx663_curclass, "$!pos"
    lt $I11, 0, rx663_fail1503
    goto rxsubrule670_pass1519
  rxsubrule670_back1520:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx663_curclass, "$!pos"
    lt $I11, 0, rx663_fail1503
  rxsubrule670_pass1519:
    rx663_cstack = rx663_cur."!cursor_capture"($P11, "circumfix")
    set_addr $I11, rxsubrule670_back1520
    push rx663_bstack, $I11
    push rx663_bstack, 0
    push rx663_bstack, rx663_pos
    elements $I11, rx663_cstack
    push rx663_bstack, $I11
    repr_get_attr_int rx663_pos, $P11, rx663_curclass, "$!pos"
    nqp_rxpeek $I19, rx663_bstack, rxquantr669_done1518
    inc $I19
    inc $I19
    set rx663_rep, rx663_bstack[$I19]
    nqp_rxcommit rx663_bstack, rxquantr669_done1518
    inc rx663_rep
  rxquantr669_done1518:
    goto alt665_end1510
  alt665_21521:
    repr_bind_attr_int rx663_cur, rx663_curclass, "$!pos", rx663_pos
    $P11 = rx663_cur."circumfix"()
    repr_get_attr_int $I11, $P11, rx663_curclass, "$!pos"
    lt $I11, 0, rx663_fail1503
    nqp_rxmark rx663_bstack, rxsubrule671_pass1522, -1, 0
  rxsubrule671_pass1522:
    rx663_cstack = rx663_cur."!cursor_capture"($P11, "circumfix")
    repr_get_attr_int rx663_pos, $P11, rx663_curclass, "$!pos"
    goto alt665_end1510
  alt665_31523:
    repr_bind_attr_int rx663_cur, rx663_curclass, "$!pos", rx663_pos
    $P11 = rx663_cur."variable"()
    repr_get_attr_int $I11, $P11, rx663_curclass, "$!pos"
    lt $I11, 0, rx663_fail1503
    nqp_rxmark rx663_bstack, rxsubrule672_pass1524, -1, 0
  rxsubrule672_pass1524:
    rx663_cstack = rx663_cur."!cursor_capture"($P11, "variable")
    repr_get_attr_int rx663_pos, $P11, rx663_curclass, "$!pos"
    goto alt665_end1510
  alt665_end1510:
    nqp_rxcommit rx663_bstack, alt665_end1510
    rx663_cur."!cursor_pass"(rx663_pos, "colonpair", 'backtrack'=>1)
    .return (rx663_cur)
  rx663_restart1502:
    repr_get_attr_obj rx663_cstack, rx663_cur, rx663_curclass, "$!cstack"
  rx663_fail1503:
    unless rx663_bstack, rx663_done1501
    pop $I19, rx663_bstack
    if_null rx663_cstack, rx663_cstack_done1506
    unless rx663_cstack, rx663_cstack_done1506
    dec $I19
    set $P11, rx663_cstack[$I19]
  rx663_cstack_done1506:
    pop rx663_rep, rx663_bstack
    pop rx663_pos, rx663_bstack
    pop $I19, rx663_bstack
    lt rx663_pos, -1, rx663_done1501
    lt rx663_pos, 0, rx663_fail1503
    eq $I19, 0, rx663_fail1503
    nqp_islist $I20, rx663_cstack
    unless $I20, rx663_jump1504
    elements $I18, rx663_bstack
    le $I18, 0, rx663_cut1505
    dec $I18
    set $I18, rx663_bstack[$I18]
  rx663_cut1505:
    assign rx663_cstack, $I18
  rx663_jump1504:
    jump $I19
  rx663_done1501:
    rx663_cur."!cursor_fail"()
    .return (rx663_cur) 
.end
.HLL "nqp"
.namespace []
.sub "variable" :subid("cuid_98_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 955
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx673_start
    .local string rx673_tgt
    .local int rx673_pos
    .local int rx673_off
    .local int rx673_eos
    .local int rx673_rep
    .local pmc rx673_cur
    .local pmc rx673_curclass
    .local pmc rx673_bstack
    .local pmc rx673_cstack
    rx673_start = self."!cursor_start_all"()
    set rx673_cur, rx673_start[0]
    set rx673_tgt, rx673_start[1]
    set rx673_pos, rx673_start[2]
    set rx673_curclass, rx673_start[3]
    set rx673_bstack, rx673_start[4]
    set $I19, rx673_start[5]
    store_lex unicode:"$\x{a2}", rx673_cur
    length rx673_eos, rx673_tgt
    eq $I19, 1, rx673_restart1527
    gt rx673_pos, rx673_eos, rx673_fail1528
    repr_get_attr_int $I11, self, rx673_curclass, "$!from"
    ne $I11, -1, rxscan674_done1534
    goto rxscan674_scan1533
  rxscan674_loop1532:
    inc rx673_pos
    gt rx673_pos, rx673_eos, rx673_fail1528
    repr_bind_attr_int rx673_cur, rx673_curclass, "$!from", rx673_pos
  rxscan674_scan1533:
    nqp_rxmark rx673_bstack, rxscan674_loop1532, rx673_pos, 0
  rxscan674_done1534:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt675_01536
    nqp_push_label $P11, alt675_11543
    nqp_push_label $P11, alt675_21546
    nqp_push_label $P11, alt675_31554
    nqp_rxmark rx673_bstack, alt675_end1535, -1, 0
    rx673_cur."!alt"(rx673_pos, "alt_nfa__20_1361734141.426", $P11)
    goto rx673_fail1528
  alt675_01536:
    repr_bind_attr_int rx673_cur, rx673_curclass, "$!pos", rx673_pos
    $P11 = rx673_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx673_curclass, "$!pos"
    lt $I11, 0, rx673_fail1528
    nqp_rxmark rx673_bstack, rxsubrule676_pass1537, -1, 0
  rxsubrule676_pass1537:
    rx673_cstack = rx673_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx673_pos, $P11, rx673_curclass, "$!pos"
    nqp_rxmark rx673_bstack, rxquantr677_done1539, rx673_pos, 0
  rxquantr677_loop1538:
    repr_bind_attr_int rx673_cur, rx673_curclass, "$!pos", rx673_pos
    $P11 = rx673_cur."twigil"()
    repr_get_attr_int $I11, $P11, rx673_curclass, "$!pos"
    lt $I11, 0, rx673_fail1528
    goto rxsubrule678_pass1540
  rxsubrule678_back1541:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx673_curclass, "$!pos"
    lt $I11, 0, rx673_fail1528
  rxsubrule678_pass1540:
    rx673_cstack = rx673_cur."!cursor_capture"($P11, "twigil")
    set_addr $I11, rxsubrule678_back1541
    push rx673_bstack, $I11
    push rx673_bstack, 0
    push rx673_bstack, rx673_pos
    elements $I11, rx673_cstack
    push rx673_bstack, $I11
    repr_get_attr_int rx673_pos, $P11, rx673_curclass, "$!pos"
    nqp_rxpeek $I19, rx673_bstack, rxquantr677_done1539
    inc $I19
    inc $I19
    set rx673_rep, rx673_bstack[$I19]
    nqp_rxcommit rx673_bstack, rxquantr677_done1539
    inc rx673_rep
  rxquantr677_done1539:
    repr_bind_attr_int rx673_cur, rx673_curclass, "$!pos", rx673_pos
    $P11 = rx673_cur."name"()
    repr_get_attr_int $I11, $P11, rx673_curclass, "$!pos"
    lt $I11, 0, rx673_fail1528
    nqp_rxmark rx673_bstack, rxsubrule679_pass1542, -1, 0
  rxsubrule679_pass1542:
    rx673_cstack = rx673_cur."!cursor_capture"($P11, "desigilname")
    repr_get_attr_int rx673_pos, $P11, rx673_curclass, "$!pos"
    goto alt675_end1535
  alt675_11543:
    repr_bind_attr_int rx673_cur, rx673_curclass, "$!pos", rx673_pos
    $P11 = rx673_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx673_curclass, "$!pos"
    lt $I11, 0, rx673_fail1528
    nqp_rxmark rx673_bstack, rxsubrule680_pass1544, -1, 0
  rxsubrule680_pass1544:
    rx673_cstack = rx673_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx673_pos, $P11, rx673_curclass, "$!pos"
    ge rx673_pos, rx673_eos, rx673_fail1528
    substr $S11, rx673_tgt, rx673_pos, 1
    index $I11, ucs4:"<", $S11
    lt $I11, 0, rx673_fail1528
    repr_bind_attr_int rx673_cur, rx673_curclass, "$!pos", rx673_pos
    $P11 = rx673_cur."postcircumfix"()
    repr_get_attr_int $I11, $P11, rx673_curclass, "$!pos"
    lt $I11, 0, rx673_fail1528
    nqp_rxmark rx673_bstack, rxsubrule681_pass1545, -1, 0
  rxsubrule681_pass1545:
    rx673_cstack = rx673_cur."!cursor_capture"($P11, "postcircumfix")
    repr_get_attr_int rx673_pos, $P11, rx673_curclass, "$!pos"
    goto alt675_end1535
  alt675_21546:
    repr_bind_attr_int rx673_cur, rx673_curclass, "$!pos", rx673_pos
    $P11 = rx673_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx673_curclass, "$!pos"
    lt $I11, 0, rx673_fail1528
    nqp_rxmark rx673_bstack, rxsubrule682_pass1547, -1, 0
  rxsubrule682_pass1547:
    rx673_cstack = rx673_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx673_pos, $P11, rx673_curclass, "$!pos"
    add $I11, rx673_pos, 1
    gt $I11, rx673_eos, rx673_fail1528
    substr $S10, rx673_tgt, rx673_pos, 1
    ne $S10, ucs4:"(", rx673_fail1528
    add rx673_pos, 1
    repr_bind_attr_int rx673_cur, rx673_curclass, "$!pos", rx673_pos
    $P11 = rx673_cur."semilist"()
    repr_get_attr_int $I11, $P11, rx673_curclass, "$!pos"
    lt $I11, 0, rx673_fail1528
    nqp_rxmark rx673_bstack, rxsubrule683_pass1548, -1, 0
  rxsubrule683_pass1548:
    rx673_cstack = rx673_cur."!cursor_capture"($P11, "semilist")
    repr_get_attr_int rx673_pos, $P11, rx673_curclass, "$!pos"
  alt684_01550:
    nqp_rxmark rx673_bstack, alt684_11551, rx673_pos, 0
    add $I11, rx673_pos, 1
    gt $I11, rx673_eos, rx673_fail1528
    substr $S10, rx673_tgt, rx673_pos, 1
    ne $S10, ucs4:")", rx673_fail1528
    add rx673_pos, 1
    goto alt684_end1549
  alt684_11551:
    repr_bind_attr_int rx673_cur, rx673_curclass, "$!pos", rx673_pos
    $P11 = rx673_cur."FAILGOAL"("')'")
    repr_get_attr_int $I11, $P11, rx673_curclass, "$!pos"
    lt $I11, 0, rx673_fail1528
    goto rxsubrule685_pass1552
  rxsubrule685_back1553:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx673_curclass, "$!pos"
    lt $I11, 0, rx673_fail1528
  rxsubrule685_pass1552:
    rx673_cstack = rx673_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule685_back1553
    push rx673_bstack, $I11
    push rx673_bstack, 0
    push rx673_bstack, rx673_pos
    elements $I11, rx673_cstack
    push rx673_bstack, $I11
    repr_get_attr_int rx673_pos, $P11, rx673_curclass, "$!pos"
  alt684_end1549:
    goto alt675_end1535
  alt675_31554:
    nqp_rxmark rx673_bstack, rxcap686_fail1556, rx673_pos, 0
    add $I11, rx673_pos, 1
    gt $I11, rx673_eos, rx673_fail1528
    substr $S10, rx673_tgt, rx673_pos, 1
    ne $S10, ucs4:"$", rx673_fail1528
    add rx673_pos, 1
    nqp_rxpeek $I19, rx673_bstack, rxcap686_fail1556
    inc $I19
    set $I11, rx673_bstack[$I19]
    repr_bind_attr_int rx673_cur, rx673_curclass, "$!pos", rx673_pos
    $P11 = rx673_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx673_pos)
    rx673_cstack = rx673_cur."!cursor_capture"($P11, "sigil")
    goto rxcap686_done1555
  rxcap686_fail1556:
    goto rx673_fail1528
  rxcap686_done1555:
    nqp_rxmark rx673_bstack, rxcap687_fail1558, rx673_pos, 0
    ge rx673_pos, rx673_eos, rx673_fail1528
    substr $S11, rx673_tgt, rx673_pos, 1
    index $I11, ucs4:"/_!", $S11
    lt $I11, 0, rx673_fail1528
    inc rx673_pos
    nqp_rxpeek $I19, rx673_bstack, rxcap687_fail1558
    inc $I19
    set $I11, rx673_bstack[$I19]
    repr_bind_attr_int rx673_cur, rx673_curclass, "$!pos", rx673_pos
    $P11 = rx673_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx673_pos)
    rx673_cstack = rx673_cur."!cursor_capture"($P11, "desigilname")
    goto rxcap687_done1557
  rxcap687_fail1558:
    goto rx673_fail1528
  rxcap687_done1557:
    goto alt675_end1535
  alt675_end1535:
    rx673_cur."!cursor_pass"(rx673_pos, "variable", 'backtrack'=>1)
    .return (rx673_cur)
  rx673_restart1527:
    repr_get_attr_obj rx673_cstack, rx673_cur, rx673_curclass, "$!cstack"
  rx673_fail1528:
    unless rx673_bstack, rx673_done1526
    pop $I19, rx673_bstack
    if_null rx673_cstack, rx673_cstack_done1531
    unless rx673_cstack, rx673_cstack_done1531
    dec $I19
    set $P11, rx673_cstack[$I19]
  rx673_cstack_done1531:
    pop rx673_rep, rx673_bstack
    pop rx673_pos, rx673_bstack
    pop $I19, rx673_bstack
    lt rx673_pos, -1, rx673_done1526
    lt rx673_pos, 0, rx673_fail1528
    eq $I19, 0, rx673_fail1528
    nqp_islist $I20, rx673_cstack
    unless $I20, rx673_jump1529
    elements $I18, rx673_bstack
    le $I18, 0, rx673_cut1530
    dec $I18
    set $I18, rx673_bstack[$I18]
  rx673_cut1530:
    assign rx673_cstack, $I18
  rx673_jump1529:
    jump $I19
  rx673_done1526:
    rx673_cur."!cursor_fail"()
    .return (rx673_cur) 
.end
.HLL "nqp"
.namespace []
.sub "sigil" :subid("cuid_99_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 962
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx688_start
    .local string rx688_tgt
    .local int rx688_pos
    .local int rx688_off
    .local int rx688_eos
    .local int rx688_rep
    .local pmc rx688_cur
    .local pmc rx688_curclass
    .local pmc rx688_bstack
    .local pmc rx688_cstack
    rx688_start = self."!cursor_start_all"()
    set rx688_cur, rx688_start[0]
    set rx688_tgt, rx688_start[1]
    set rx688_pos, rx688_start[2]
    set rx688_curclass, rx688_start[3]
    set rx688_bstack, rx688_start[4]
    set $I19, rx688_start[5]
    store_lex unicode:"$\x{a2}", rx688_cur
    length rx688_eos, rx688_tgt
    eq $I19, 1, rx688_restart1561
    gt rx688_pos, rx688_eos, rx688_fail1562
    repr_get_attr_int $I11, self, rx688_curclass, "$!from"
    ne $I11, -1, rxscan689_done1568
    goto rxscan689_scan1567
  rxscan689_loop1566:
    inc rx688_pos
    gt rx688_pos, rx688_eos, rx688_fail1562
    repr_bind_attr_int rx688_cur, rx688_curclass, "$!from", rx688_pos
  rxscan689_scan1567:
    nqp_rxmark rx688_bstack, rxscan689_loop1566, rx688_pos, 0
  rxscan689_done1568:
    ge rx688_pos, rx688_eos, rx688_fail1562
    substr $S11, rx688_tgt, rx688_pos, 1
    index $I11, ucs4:"$@%&", $S11
    lt $I11, 0, rx688_fail1562
    inc rx688_pos
    rx688_cur."!cursor_pass"(rx688_pos, "sigil", 'backtrack'=>1)
    .return (rx688_cur)
  rx688_restart1561:
    repr_get_attr_obj rx688_cstack, rx688_cur, rx688_curclass, "$!cstack"
  rx688_fail1562:
    unless rx688_bstack, rx688_done1560
    pop $I19, rx688_bstack
    if_null rx688_cstack, rx688_cstack_done1565
    unless rx688_cstack, rx688_cstack_done1565
    dec $I19
    set $P11, rx688_cstack[$I19]
  rx688_cstack_done1565:
    pop rx688_rep, rx688_bstack
    pop rx688_pos, rx688_bstack
    pop $I19, rx688_bstack
    lt rx688_pos, -1, rx688_done1560
    lt rx688_pos, 0, rx688_fail1562
    eq $I19, 0, rx688_fail1562
    nqp_islist $I20, rx688_cstack
    unless $I20, rx688_jump1563
    elements $I18, rx688_bstack
    le $I18, 0, rx688_cut1564
    dec $I18
    set $I18, rx688_bstack[$I18]
  rx688_cut1564:
    assign rx688_cstack, $I18
  rx688_jump1563:
    jump $I19
  rx688_done1560:
    rx688_cur."!cursor_fail"()
    .return (rx688_cur) 
.end
.HLL "nqp"
.namespace []
.sub "twigil" :subid("cuid_100_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 964
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx690_start
    .local string rx690_tgt
    .local int rx690_pos
    .local int rx690_off
    .local int rx690_eos
    .local int rx690_rep
    .local pmc rx690_cur
    .local pmc rx690_curclass
    .local pmc rx690_bstack
    .local pmc rx690_cstack
    rx690_start = self."!cursor_start_all"()
    set rx690_cur, rx690_start[0]
    set rx690_tgt, rx690_start[1]
    set rx690_pos, rx690_start[2]
    set rx690_curclass, rx690_start[3]
    set rx690_bstack, rx690_start[4]
    set $I19, rx690_start[5]
    store_lex unicode:"$\x{a2}", rx690_cur
    length rx690_eos, rx690_tgt
    eq $I19, 1, rx690_restart1571
    gt rx690_pos, rx690_eos, rx690_fail1572
    repr_get_attr_int $I11, self, rx690_curclass, "$!from"
    ne $I11, -1, rxscan691_done1578
    goto rxscan691_scan1577
  rxscan691_loop1576:
    inc rx690_pos
    gt rx690_pos, rx690_eos, rx690_fail1572
    repr_bind_attr_int rx690_cur, rx690_curclass, "$!from", rx690_pos
  rxscan691_scan1577:
    nqp_rxmark rx690_bstack, rxscan691_loop1576, rx690_pos, 0
  rxscan691_done1578:
    ge rx690_pos, rx690_eos, rx690_fail1572
    substr $S11, rx690_tgt, rx690_pos, 1
    index $I11, ucs4:"*!?", $S11
    lt $I11, 0, rx690_fail1572
    inc rx690_pos
    rx690_cur."!cursor_pass"(rx690_pos, "twigil", 'backtrack'=>1)
    .return (rx690_cur)
  rx690_restart1571:
    repr_get_attr_obj rx690_cstack, rx690_cur, rx690_curclass, "$!cstack"
  rx690_fail1572:
    unless rx690_bstack, rx690_done1570
    pop $I19, rx690_bstack
    if_null rx690_cstack, rx690_cstack_done1575
    unless rx690_cstack, rx690_cstack_done1575
    dec $I19
    set $P11, rx690_cstack[$I19]
  rx690_cstack_done1575:
    pop rx690_rep, rx690_bstack
    pop rx690_pos, rx690_bstack
    pop $I19, rx690_bstack
    lt rx690_pos, -1, rx690_done1570
    lt rx690_pos, 0, rx690_fail1572
    eq $I19, 0, rx690_fail1572
    nqp_islist $I20, rx690_cstack
    unless $I20, rx690_jump1573
    elements $I18, rx690_bstack
    le $I18, 0, rx690_cut1574
    dec $I18
    set $I18, rx690_bstack[$I18]
  rx690_cut1574:
    assign rx690_cstack, $I18
  rx690_jump1573:
    jump $I19
  rx690_done1570:
    rx690_cur."!cursor_fail"()
    .return (rx690_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator" :subid("cuid_101_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 966
    .param pmc self 
    $P5001 = self."!protoregex"("package_declarator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<module>" :subid("cuid_102_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 967
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_99 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx692_start
    .local string rx692_tgt
    .local int rx692_pos
    .local int rx692_off
    .local int rx692_eos
    .local int rx692_rep
    .local pmc rx692_cur
    .local pmc rx692_curclass
    .local pmc rx692_bstack
    .local pmc rx692_cstack
    rx692_start = self."!cursor_start_all"()
    set rx692_cur, rx692_start[0]
    set rx692_tgt, rx692_start[1]
    set rx692_pos, rx692_start[2]
    set rx692_curclass, rx692_start[3]
    set rx692_bstack, rx692_start[4]
    set $I19, rx692_start[5]
    store_lex unicode:"$\x{a2}", rx692_cur
    length rx692_eos, rx692_tgt
    eq $I19, 1, rx692_restart1581
    gt rx692_pos, rx692_eos, rx692_fail1582
    repr_get_attr_int $I11, self, rx692_curclass, "$!from"
    ne $I11, -1, rxscan693_done1588
    goto rxscan693_scan1587
  rxscan693_loop1586:
    inc rx692_pos
    gt rx692_pos, rx692_eos, rx692_fail1582
    repr_bind_attr_int rx692_cur, rx692_curclass, "$!from", rx692_pos
  rxscan693_scan1587:
    nqp_rxmark rx692_bstack, rxscan693_loop1586, rx692_pos, 0
  rxscan693_done1588:
    repr_bind_attr_int rx692_cur, rx692_curclass, "$!pos", rx692_pos
    store_lex unicode:"$\x{a2}", rx692_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1589
    nqp_get_sc_object $P5005, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5004, $P5005
    set fb_tmp_99, $P5004
    repr_defined $I5001, fb_tmp_99
    unless $I5001 goto if694_else1590 
    set $P5006, fb_tmp_99["$PACKAGE"]
    set $P5008, $P5006
    goto if694_end1591
  if694_else1590:
    null $P5007
    set $P5008, $P5007
  if694_end1591:
    unless_null $P5008, vivi_6951592
    nqp_get_sc_object $P5009, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5008, $P5009
  vivi_6951592:
    unless_null $P5008, vivi_6961593
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_6961593:
    set $P5003, $P5008
  fallback1589:
    set $P101, $P5003
    repr_bind_attr_int rx692_cur, rx692_curclass, "$!pos", rx692_pos
    store_lex unicode:"$\x{a2}", rx692_cur
    box $P5011, "module"
    set $P102, $P5011
    nqp_rxmark rx692_bstack, rxcap697_fail1595, rx692_pos, 0
    add $I11, rx692_pos, 6
    gt $I11, rx692_eos, rx692_fail1582
    substr $S10, rx692_tgt, rx692_pos, 6
    ne $S10, ucs4:"module", rx692_fail1582
    add rx692_pos, 6
    nqp_rxpeek $I19, rx692_bstack, rxcap697_fail1595
    inc $I19
    set $I11, rx692_bstack[$I19]
    repr_bind_attr_int rx692_cur, rx692_curclass, "$!pos", rx692_pos
    $P11 = rx692_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx692_pos)
    rx692_cstack = rx692_cur."!cursor_capture"($P11, "sym")
    goto rxcap697_done1594
  rxcap697_fail1595:
    goto rx692_fail1582
  rxcap697_done1594:
    repr_bind_attr_int rx692_cur, rx692_curclass, "$!pos", rx692_pos
    $P11 = rx692_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx692_curclass, "$!pos"
    lt $I11, 0, rx692_fail1582
    nqp_rxmark rx692_bstack, rxsubrule698_pass1596, -1, 0
  rxsubrule698_pass1596:
    rx692_cstack = rx692_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx692_pos, $P11, rx692_curclass, "$!pos"
    rx692_cur."!cursor_pass"(rx692_pos, "package_declarator:sym<module>", 'backtrack'=>1)
    .return (rx692_cur)
  rx692_restart1581:
    repr_get_attr_obj rx692_cstack, rx692_cur, rx692_curclass, "$!cstack"
  rx692_fail1582:
    unless rx692_bstack, rx692_done1580
    pop $I19, rx692_bstack
    if_null rx692_cstack, rx692_cstack_done1585
    unless rx692_cstack, rx692_cstack_done1585
    dec $I19
    set $P11, rx692_cstack[$I19]
  rx692_cstack_done1585:
    pop rx692_rep, rx692_bstack
    pop rx692_pos, rx692_bstack
    pop $I19, rx692_bstack
    lt rx692_pos, -1, rx692_done1580
    lt rx692_pos, 0, rx692_fail1582
    eq $I19, 0, rx692_fail1582
    nqp_islist $I20, rx692_cstack
    unless $I20, rx692_jump1583
    elements $I18, rx692_bstack
    le $I18, 0, rx692_cut1584
    dec $I18
    set $I18, rx692_bstack[$I18]
  rx692_cut1584:
    assign rx692_cstack, $I18
  rx692_jump1583:
    jump $I19
  rx692_done1580:
    rx692_cur."!cursor_fail"()
    .return (rx692_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<knowhow>" :subid("cuid_103_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 972
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_100 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx699_start
    .local string rx699_tgt
    .local int rx699_pos
    .local int rx699_off
    .local int rx699_eos
    .local int rx699_rep
    .local pmc rx699_cur
    .local pmc rx699_curclass
    .local pmc rx699_bstack
    .local pmc rx699_cstack
    rx699_start = self."!cursor_start_all"()
    set rx699_cur, rx699_start[0]
    set rx699_tgt, rx699_start[1]
    set rx699_pos, rx699_start[2]
    set rx699_curclass, rx699_start[3]
    set rx699_bstack, rx699_start[4]
    set $I19, rx699_start[5]
    store_lex unicode:"$\x{a2}", rx699_cur
    length rx699_eos, rx699_tgt
    eq $I19, 1, rx699_restart1599
    gt rx699_pos, rx699_eos, rx699_fail1600
    repr_get_attr_int $I11, self, rx699_curclass, "$!from"
    ne $I11, -1, rxscan700_done1606
    goto rxscan700_scan1605
  rxscan700_loop1604:
    inc rx699_pos
    gt rx699_pos, rx699_eos, rx699_fail1600
    repr_bind_attr_int rx699_cur, rx699_curclass, "$!from", rx699_pos
  rxscan700_scan1605:
    nqp_rxmark rx699_bstack, rxscan700_loop1604, rx699_pos, 0
  rxscan700_done1606:
    repr_bind_attr_int rx699_cur, rx699_curclass, "$!pos", rx699_pos
    store_lex unicode:"$\x{a2}", rx699_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1607
    nqp_get_sc_object $P5005, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5004, $P5005
    set fb_tmp_100, $P5004
    repr_defined $I5001, fb_tmp_100
    unless $I5001 goto if701_else1608 
    set $P5006, fb_tmp_100["$PACKAGE"]
    set $P5008, $P5006
    goto if701_end1609
  if701_else1608:
    null $P5007
    set $P5008, $P5007
  if701_end1609:
    unless_null $P5008, vivi_7021610
    nqp_get_sc_object $P5009, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5008, $P5009
  vivi_7021610:
    unless_null $P5008, vivi_7031611
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7031611:
    set $P5003, $P5008
  fallback1607:
    set $P101, $P5003
    repr_bind_attr_int rx699_cur, rx699_curclass, "$!pos", rx699_pos
    store_lex unicode:"$\x{a2}", rx699_cur
    box $P5011, "knowhow"
    set $P102, $P5011
    nqp_rxmark rx699_bstack, rxcap704_fail1613, rx699_pos, 0
    add $I11, rx699_pos, 7
    gt $I11, rx699_eos, rx699_fail1600
    substr $S10, rx699_tgt, rx699_pos, 7
    ne $S10, ucs4:"knowhow", rx699_fail1600
    add rx699_pos, 7
    nqp_rxpeek $I19, rx699_bstack, rxcap704_fail1613
    inc $I19
    set $I11, rx699_bstack[$I19]
    repr_bind_attr_int rx699_cur, rx699_curclass, "$!pos", rx699_pos
    $P11 = rx699_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx699_pos)
    rx699_cstack = rx699_cur."!cursor_capture"($P11, "sym")
    goto rxcap704_done1612
  rxcap704_fail1613:
    goto rx699_fail1600
  rxcap704_done1612:
    repr_bind_attr_int rx699_cur, rx699_curclass, "$!pos", rx699_pos
    $P11 = rx699_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx699_curclass, "$!pos"
    lt $I11, 0, rx699_fail1600
    nqp_rxmark rx699_bstack, rxsubrule705_pass1614, -1, 0
  rxsubrule705_pass1614:
    rx699_cstack = rx699_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx699_pos, $P11, rx699_curclass, "$!pos"
    rx699_cur."!cursor_pass"(rx699_pos, "package_declarator:sym<knowhow>", 'backtrack'=>1)
    .return (rx699_cur)
  rx699_restart1599:
    repr_get_attr_obj rx699_cstack, rx699_cur, rx699_curclass, "$!cstack"
  rx699_fail1600:
    unless rx699_bstack, rx699_done1598
    pop $I19, rx699_bstack
    if_null rx699_cstack, rx699_cstack_done1603
    unless rx699_cstack, rx699_cstack_done1603
    dec $I19
    set $P11, rx699_cstack[$I19]
  rx699_cstack_done1603:
    pop rx699_rep, rx699_bstack
    pop rx699_pos, rx699_bstack
    pop $I19, rx699_bstack
    lt rx699_pos, -1, rx699_done1598
    lt rx699_pos, 0, rx699_fail1600
    eq $I19, 0, rx699_fail1600
    nqp_islist $I20, rx699_cstack
    unless $I20, rx699_jump1601
    elements $I18, rx699_bstack
    le $I18, 0, rx699_cut1602
    dec $I18
    set $I18, rx699_bstack[$I18]
  rx699_cut1602:
    assign rx699_cstack, $I18
  rx699_jump1601:
    jump $I19
  rx699_done1598:
    rx699_cur."!cursor_fail"()
    .return (rx699_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<class>" :subid("cuid_104_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 977
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_101 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx706_start
    .local string rx706_tgt
    .local int rx706_pos
    .local int rx706_off
    .local int rx706_eos
    .local int rx706_rep
    .local pmc rx706_cur
    .local pmc rx706_curclass
    .local pmc rx706_bstack
    .local pmc rx706_cstack
    rx706_start = self."!cursor_start_all"()
    set rx706_cur, rx706_start[0]
    set rx706_tgt, rx706_start[1]
    set rx706_pos, rx706_start[2]
    set rx706_curclass, rx706_start[3]
    set rx706_bstack, rx706_start[4]
    set $I19, rx706_start[5]
    store_lex unicode:"$\x{a2}", rx706_cur
    length rx706_eos, rx706_tgt
    eq $I19, 1, rx706_restart1617
    gt rx706_pos, rx706_eos, rx706_fail1618
    repr_get_attr_int $I11, self, rx706_curclass, "$!from"
    ne $I11, -1, rxscan707_done1624
    goto rxscan707_scan1623
  rxscan707_loop1622:
    inc rx706_pos
    gt rx706_pos, rx706_eos, rx706_fail1618
    repr_bind_attr_int rx706_cur, rx706_curclass, "$!from", rx706_pos
  rxscan707_scan1623:
    nqp_rxmark rx706_bstack, rxscan707_loop1622, rx706_pos, 0
  rxscan707_done1624:
    repr_bind_attr_int rx706_cur, rx706_curclass, "$!pos", rx706_pos
    store_lex unicode:"$\x{a2}", rx706_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1625
    nqp_get_sc_object $P5005, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5004, $P5005
    set fb_tmp_101, $P5004
    repr_defined $I5001, fb_tmp_101
    unless $I5001 goto if708_else1626 
    set $P5006, fb_tmp_101["$PACKAGE"]
    set $P5008, $P5006
    goto if708_end1627
  if708_else1626:
    null $P5007
    set $P5008, $P5007
  if708_end1627:
    unless_null $P5008, vivi_7091628
    nqp_get_sc_object $P5009, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5008, $P5009
  vivi_7091628:
    unless_null $P5008, vivi_7101629
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7101629:
    set $P5003, $P5008
  fallback1625:
    set $P101, $P5003
    repr_bind_attr_int rx706_cur, rx706_curclass, "$!pos", rx706_pos
    store_lex unicode:"$\x{a2}", rx706_cur
    box $P5011, "class"
    set $P102, $P5011
    nqp_rxmark rx706_bstack, rxcap711_fail1631, rx706_pos, 0
    add $I11, rx706_pos, 5
    gt $I11, rx706_eos, rx706_fail1618
    substr $S10, rx706_tgt, rx706_pos, 5
    ne $S10, ucs4:"class", rx706_fail1618
    add rx706_pos, 5
    nqp_rxpeek $I19, rx706_bstack, rxcap711_fail1631
    inc $I19
    set $I11, rx706_bstack[$I19]
    repr_bind_attr_int rx706_cur, rx706_curclass, "$!pos", rx706_pos
    $P11 = rx706_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx706_pos)
    rx706_cstack = rx706_cur."!cursor_capture"($P11, "sym")
    goto rxcap711_done1630
  rxcap711_fail1631:
    goto rx706_fail1618
  rxcap711_done1630:
    repr_bind_attr_int rx706_cur, rx706_curclass, "$!pos", rx706_pos
    $P11 = rx706_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx706_curclass, "$!pos"
    lt $I11, 0, rx706_fail1618
    nqp_rxmark rx706_bstack, rxsubrule712_pass1632, -1, 0
  rxsubrule712_pass1632:
    rx706_cstack = rx706_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx706_pos, $P11, rx706_curclass, "$!pos"
    rx706_cur."!cursor_pass"(rx706_pos, "package_declarator:sym<class>", 'backtrack'=>1)
    .return (rx706_cur)
  rx706_restart1617:
    repr_get_attr_obj rx706_cstack, rx706_cur, rx706_curclass, "$!cstack"
  rx706_fail1618:
    unless rx706_bstack, rx706_done1616
    pop $I19, rx706_bstack
    if_null rx706_cstack, rx706_cstack_done1621
    unless rx706_cstack, rx706_cstack_done1621
    dec $I19
    set $P11, rx706_cstack[$I19]
  rx706_cstack_done1621:
    pop rx706_rep, rx706_bstack
    pop rx706_pos, rx706_bstack
    pop $I19, rx706_bstack
    lt rx706_pos, -1, rx706_done1616
    lt rx706_pos, 0, rx706_fail1618
    eq $I19, 0, rx706_fail1618
    nqp_islist $I20, rx706_cstack
    unless $I20, rx706_jump1619
    elements $I18, rx706_bstack
    le $I18, 0, rx706_cut1620
    dec $I18
    set $I18, rx706_bstack[$I18]
  rx706_cut1620:
    assign rx706_cstack, $I18
  rx706_jump1619:
    jump $I19
  rx706_done1616:
    rx706_cur."!cursor_fail"()
    .return (rx706_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<grammar>" :subid("cuid_105_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 982
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_102 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx713_start
    .local string rx713_tgt
    .local int rx713_pos
    .local int rx713_off
    .local int rx713_eos
    .local int rx713_rep
    .local pmc rx713_cur
    .local pmc rx713_curclass
    .local pmc rx713_bstack
    .local pmc rx713_cstack
    rx713_start = self."!cursor_start_all"()
    set rx713_cur, rx713_start[0]
    set rx713_tgt, rx713_start[1]
    set rx713_pos, rx713_start[2]
    set rx713_curclass, rx713_start[3]
    set rx713_bstack, rx713_start[4]
    set $I19, rx713_start[5]
    store_lex unicode:"$\x{a2}", rx713_cur
    length rx713_eos, rx713_tgt
    eq $I19, 1, rx713_restart1635
    gt rx713_pos, rx713_eos, rx713_fail1636
    repr_get_attr_int $I11, self, rx713_curclass, "$!from"
    ne $I11, -1, rxscan714_done1642
    goto rxscan714_scan1641
  rxscan714_loop1640:
    inc rx713_pos
    gt rx713_pos, rx713_eos, rx713_fail1636
    repr_bind_attr_int rx713_cur, rx713_curclass, "$!from", rx713_pos
  rxscan714_scan1641:
    nqp_rxmark rx713_bstack, rxscan714_loop1640, rx713_pos, 0
  rxscan714_done1642:
    repr_bind_attr_int rx713_cur, rx713_curclass, "$!pos", rx713_pos
    store_lex unicode:"$\x{a2}", rx713_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1643
    nqp_get_sc_object $P5005, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5004, $P5005
    set fb_tmp_102, $P5004
    repr_defined $I5001, fb_tmp_102
    unless $I5001 goto if715_else1644 
    set $P5006, fb_tmp_102["$PACKAGE"]
    set $P5008, $P5006
    goto if715_end1645
  if715_else1644:
    null $P5007
    set $P5008, $P5007
  if715_end1645:
    unless_null $P5008, vivi_7161646
    nqp_get_sc_object $P5009, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5008, $P5009
  vivi_7161646:
    unless_null $P5008, vivi_7171647
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7171647:
    set $P5003, $P5008
  fallback1643:
    set $P101, $P5003
    repr_bind_attr_int rx713_cur, rx713_curclass, "$!pos", rx713_pos
    store_lex unicode:"$\x{a2}", rx713_cur
    box $P5011, "grammar"
    set $P102, $P5011
    nqp_rxmark rx713_bstack, rxcap718_fail1649, rx713_pos, 0
    add $I11, rx713_pos, 7
    gt $I11, rx713_eos, rx713_fail1636
    substr $S10, rx713_tgt, rx713_pos, 7
    ne $S10, ucs4:"grammar", rx713_fail1636
    add rx713_pos, 7
    nqp_rxpeek $I19, rx713_bstack, rxcap718_fail1649
    inc $I19
    set $I11, rx713_bstack[$I19]
    repr_bind_attr_int rx713_cur, rx713_curclass, "$!pos", rx713_pos
    $P11 = rx713_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx713_pos)
    rx713_cstack = rx713_cur."!cursor_capture"($P11, "sym")
    goto rxcap718_done1648
  rxcap718_fail1649:
    goto rx713_fail1636
  rxcap718_done1648:
    repr_bind_attr_int rx713_cur, rx713_curclass, "$!pos", rx713_pos
    $P11 = rx713_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx713_curclass, "$!pos"
    lt $I11, 0, rx713_fail1636
    nqp_rxmark rx713_bstack, rxsubrule719_pass1650, -1, 0
  rxsubrule719_pass1650:
    rx713_cstack = rx713_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx713_pos, $P11, rx713_curclass, "$!pos"
    rx713_cur."!cursor_pass"(rx713_pos, "package_declarator:sym<grammar>", 'backtrack'=>1)
    .return (rx713_cur)
  rx713_restart1635:
    repr_get_attr_obj rx713_cstack, rx713_cur, rx713_curclass, "$!cstack"
  rx713_fail1636:
    unless rx713_bstack, rx713_done1634
    pop $I19, rx713_bstack
    if_null rx713_cstack, rx713_cstack_done1639
    unless rx713_cstack, rx713_cstack_done1639
    dec $I19
    set $P11, rx713_cstack[$I19]
  rx713_cstack_done1639:
    pop rx713_rep, rx713_bstack
    pop rx713_pos, rx713_bstack
    pop $I19, rx713_bstack
    lt rx713_pos, -1, rx713_done1634
    lt rx713_pos, 0, rx713_fail1636
    eq $I19, 0, rx713_fail1636
    nqp_islist $I20, rx713_cstack
    unless $I20, rx713_jump1637
    elements $I18, rx713_bstack
    le $I18, 0, rx713_cut1638
    dec $I18
    set $I18, rx713_bstack[$I18]
  rx713_cut1638:
    assign rx713_cstack, $I18
  rx713_jump1637:
    jump $I19
  rx713_done1634:
    rx713_cur."!cursor_fail"()
    .return (rx713_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<role>" :subid("cuid_106_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 987
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_103 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx720_start
    .local string rx720_tgt
    .local int rx720_pos
    .local int rx720_off
    .local int rx720_eos
    .local int rx720_rep
    .local pmc rx720_cur
    .local pmc rx720_curclass
    .local pmc rx720_bstack
    .local pmc rx720_cstack
    rx720_start = self."!cursor_start_all"()
    set rx720_cur, rx720_start[0]
    set rx720_tgt, rx720_start[1]
    set rx720_pos, rx720_start[2]
    set rx720_curclass, rx720_start[3]
    set rx720_bstack, rx720_start[4]
    set $I19, rx720_start[5]
    store_lex unicode:"$\x{a2}", rx720_cur
    length rx720_eos, rx720_tgt
    eq $I19, 1, rx720_restart1653
    gt rx720_pos, rx720_eos, rx720_fail1654
    repr_get_attr_int $I11, self, rx720_curclass, "$!from"
    ne $I11, -1, rxscan721_done1660
    goto rxscan721_scan1659
  rxscan721_loop1658:
    inc rx720_pos
    gt rx720_pos, rx720_eos, rx720_fail1654
    repr_bind_attr_int rx720_cur, rx720_curclass, "$!from", rx720_pos
  rxscan721_scan1659:
    nqp_rxmark rx720_bstack, rxscan721_loop1658, rx720_pos, 0
  rxscan721_done1660:
    repr_bind_attr_int rx720_cur, rx720_curclass, "$!pos", rx720_pos
    store_lex unicode:"$\x{a2}", rx720_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1661
    nqp_get_sc_object $P5005, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5004, $P5005
    set fb_tmp_103, $P5004
    repr_defined $I5001, fb_tmp_103
    unless $I5001 goto if722_else1662 
    set $P5006, fb_tmp_103["$PACKAGE"]
    set $P5008, $P5006
    goto if722_end1663
  if722_else1662:
    null $P5007
    set $P5008, $P5007
  if722_end1663:
    unless_null $P5008, vivi_7231664
    nqp_get_sc_object $P5009, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5008, $P5009
  vivi_7231664:
    unless_null $P5008, vivi_7241665
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7241665:
    set $P5003, $P5008
  fallback1661:
    set $P101, $P5003
    repr_bind_attr_int rx720_cur, rx720_curclass, "$!pos", rx720_pos
    store_lex unicode:"$\x{a2}", rx720_cur
    box $P5011, "role"
    set $P102, $P5011
    nqp_rxmark rx720_bstack, rxcap725_fail1667, rx720_pos, 0
    add $I11, rx720_pos, 4
    gt $I11, rx720_eos, rx720_fail1654
    substr $S10, rx720_tgt, rx720_pos, 4
    ne $S10, ucs4:"role", rx720_fail1654
    add rx720_pos, 4
    nqp_rxpeek $I19, rx720_bstack, rxcap725_fail1667
    inc $I19
    set $I11, rx720_bstack[$I19]
    repr_bind_attr_int rx720_cur, rx720_curclass, "$!pos", rx720_pos
    $P11 = rx720_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx720_pos)
    rx720_cstack = rx720_cur."!cursor_capture"($P11, "sym")
    goto rxcap725_done1666
  rxcap725_fail1667:
    goto rx720_fail1654
  rxcap725_done1666:
    repr_bind_attr_int rx720_cur, rx720_curclass, "$!pos", rx720_pos
    $P11 = rx720_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx720_curclass, "$!pos"
    lt $I11, 0, rx720_fail1654
    nqp_rxmark rx720_bstack, rxsubrule726_pass1668, -1, 0
  rxsubrule726_pass1668:
    rx720_cstack = rx720_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx720_pos, $P11, rx720_curclass, "$!pos"
    rx720_cur."!cursor_pass"(rx720_pos, "package_declarator:sym<role>", 'backtrack'=>1)
    .return (rx720_cur)
  rx720_restart1653:
    repr_get_attr_obj rx720_cstack, rx720_cur, rx720_curclass, "$!cstack"
  rx720_fail1654:
    unless rx720_bstack, rx720_done1652
    pop $I19, rx720_bstack
    if_null rx720_cstack, rx720_cstack_done1657
    unless rx720_cstack, rx720_cstack_done1657
    dec $I19
    set $P11, rx720_cstack[$I19]
  rx720_cstack_done1657:
    pop rx720_rep, rx720_bstack
    pop rx720_pos, rx720_bstack
    pop $I19, rx720_bstack
    lt rx720_pos, -1, rx720_done1652
    lt rx720_pos, 0, rx720_fail1654
    eq $I19, 0, rx720_fail1654
    nqp_islist $I20, rx720_cstack
    unless $I20, rx720_jump1655
    elements $I18, rx720_bstack
    le $I18, 0, rx720_cut1656
    dec $I18
    set $I18, rx720_bstack[$I18]
  rx720_cut1656:
    assign rx720_cstack, $I18
  rx720_jump1655:
    jump $I19
  rx720_done1652:
    rx720_cur."!cursor_fail"()
    .return (rx720_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<native>" :subid("cuid_107_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 992
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_104 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx727_start
    .local string rx727_tgt
    .local int rx727_pos
    .local int rx727_off
    .local int rx727_eos
    .local int rx727_rep
    .local pmc rx727_cur
    .local pmc rx727_curclass
    .local pmc rx727_bstack
    .local pmc rx727_cstack
    rx727_start = self."!cursor_start_all"()
    set rx727_cur, rx727_start[0]
    set rx727_tgt, rx727_start[1]
    set rx727_pos, rx727_start[2]
    set rx727_curclass, rx727_start[3]
    set rx727_bstack, rx727_start[4]
    set $I19, rx727_start[5]
    store_lex unicode:"$\x{a2}", rx727_cur
    length rx727_eos, rx727_tgt
    eq $I19, 1, rx727_restart1671
    gt rx727_pos, rx727_eos, rx727_fail1672
    repr_get_attr_int $I11, self, rx727_curclass, "$!from"
    ne $I11, -1, rxscan728_done1678
    goto rxscan728_scan1677
  rxscan728_loop1676:
    inc rx727_pos
    gt rx727_pos, rx727_eos, rx727_fail1672
    repr_bind_attr_int rx727_cur, rx727_curclass, "$!from", rx727_pos
  rxscan728_scan1677:
    nqp_rxmark rx727_bstack, rxscan728_loop1676, rx727_pos, 0
  rxscan728_done1678:
    repr_bind_attr_int rx727_cur, rx727_curclass, "$!pos", rx727_pos
    store_lex unicode:"$\x{a2}", rx727_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1679
    nqp_get_sc_object $P5005, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5004, $P5005
    set fb_tmp_104, $P5004
    repr_defined $I5001, fb_tmp_104
    unless $I5001 goto if729_else1680 
    set $P5006, fb_tmp_104["$PACKAGE"]
    set $P5008, $P5006
    goto if729_end1681
  if729_else1680:
    null $P5007
    set $P5008, $P5007
  if729_end1681:
    unless_null $P5008, vivi_7301682
    nqp_get_sc_object $P5009, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5008, $P5009
  vivi_7301682:
    unless_null $P5008, vivi_7311683
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7311683:
    set $P5003, $P5008
  fallback1679:
    set $P101, $P5003
    repr_bind_attr_int rx727_cur, rx727_curclass, "$!pos", rx727_pos
    store_lex unicode:"$\x{a2}", rx727_cur
    box $P5011, "native"
    set $P102, $P5011
    nqp_rxmark rx727_bstack, rxcap732_fail1685, rx727_pos, 0
    add $I11, rx727_pos, 6
    gt $I11, rx727_eos, rx727_fail1672
    substr $S10, rx727_tgt, rx727_pos, 6
    ne $S10, ucs4:"native", rx727_fail1672
    add rx727_pos, 6
    nqp_rxpeek $I19, rx727_bstack, rxcap732_fail1685
    inc $I19
    set $I11, rx727_bstack[$I19]
    repr_bind_attr_int rx727_cur, rx727_curclass, "$!pos", rx727_pos
    $P11 = rx727_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx727_pos)
    rx727_cstack = rx727_cur."!cursor_capture"($P11, "sym")
    goto rxcap732_done1684
  rxcap732_fail1685:
    goto rx727_fail1672
  rxcap732_done1684:
    repr_bind_attr_int rx727_cur, rx727_curclass, "$!pos", rx727_pos
    $P11 = rx727_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx727_curclass, "$!pos"
    lt $I11, 0, rx727_fail1672
    nqp_rxmark rx727_bstack, rxsubrule733_pass1686, -1, 0
  rxsubrule733_pass1686:
    rx727_cstack = rx727_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx727_pos, $P11, rx727_curclass, "$!pos"
    rx727_cur."!cursor_pass"(rx727_pos, "package_declarator:sym<native>", 'backtrack'=>1)
    .return (rx727_cur)
  rx727_restart1671:
    repr_get_attr_obj rx727_cstack, rx727_cur, rx727_curclass, "$!cstack"
  rx727_fail1672:
    unless rx727_bstack, rx727_done1670
    pop $I19, rx727_bstack
    if_null rx727_cstack, rx727_cstack_done1675
    unless rx727_cstack, rx727_cstack_done1675
    dec $I19
    set $P11, rx727_cstack[$I19]
  rx727_cstack_done1675:
    pop rx727_rep, rx727_bstack
    pop rx727_pos, rx727_bstack
    pop $I19, rx727_bstack
    lt rx727_pos, -1, rx727_done1670
    lt rx727_pos, 0, rx727_fail1672
    eq $I19, 0, rx727_fail1672
    nqp_islist $I20, rx727_cstack
    unless $I20, rx727_jump1673
    elements $I18, rx727_bstack
    le $I18, 0, rx727_cut1674
    dec $I18
    set $I18, rx727_bstack[$I18]
  rx727_cut1674:
    assign rx727_cstack, $I18
  rx727_jump1673:
    jump $I19
  rx727_done1670:
    rx727_cur."!cursor_fail"()
    .return (rx727_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<stub>" :subid("cuid_108_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 997
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_105 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx734_start
    .local string rx734_tgt
    .local int rx734_pos
    .local int rx734_off
    .local int rx734_eos
    .local int rx734_rep
    .local pmc rx734_cur
    .local pmc rx734_curclass
    .local pmc rx734_bstack
    .local pmc rx734_cstack
    rx734_start = self."!cursor_start_all"()
    set rx734_cur, rx734_start[0]
    set rx734_tgt, rx734_start[1]
    set rx734_pos, rx734_start[2]
    set rx734_curclass, rx734_start[3]
    set rx734_bstack, rx734_start[4]
    set $I19, rx734_start[5]
    store_lex unicode:"$\x{a2}", rx734_cur
    length rx734_eos, rx734_tgt
    eq $I19, 1, rx734_restart1689
    gt rx734_pos, rx734_eos, rx734_fail1690
    repr_get_attr_int $I11, self, rx734_curclass, "$!from"
    ne $I11, -1, rxscan735_done1696
    goto rxscan735_scan1695
  rxscan735_loop1694:
    inc rx734_pos
    gt rx734_pos, rx734_eos, rx734_fail1690
    repr_bind_attr_int rx734_cur, rx734_curclass, "$!from", rx734_pos
  rxscan735_scan1695:
    nqp_rxmark rx734_bstack, rxscan735_loop1694, rx734_pos, 0
  rxscan735_done1696:
    repr_bind_attr_int rx734_cur, rx734_curclass, "$!pos", rx734_pos
    store_lex unicode:"$\x{a2}", rx734_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1697
    nqp_get_sc_object $P5005, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5004, $P5005
    set fb_tmp_105, $P5004
    repr_defined $I5001, fb_tmp_105
    unless $I5001 goto if736_else1698 
    set $P5006, fb_tmp_105["$PACKAGE"]
    set $P5008, $P5006
    goto if736_end1699
  if736_else1698:
    null $P5007
    set $P5008, $P5007
  if736_end1699:
    unless_null $P5008, vivi_7371700
    nqp_get_sc_object $P5009, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5008, $P5009
  vivi_7371700:
    unless_null $P5008, vivi_7381701
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7381701:
    set $P5003, $P5008
  fallback1697:
    set $P101, $P5003
    repr_bind_attr_int rx734_cur, rx734_curclass, "$!pos", rx734_pos
    store_lex unicode:"$\x{a2}", rx734_cur
    box $P5011, "stub"
    set $P102, $P5011
    nqp_rxmark rx734_bstack, rxcap739_fail1703, rx734_pos, 0
    add $I11, rx734_pos, 4
    gt $I11, rx734_eos, rx734_fail1690
    substr $S10, rx734_tgt, rx734_pos, 4
    ne $S10, ucs4:"stub", rx734_fail1690
    add rx734_pos, 4
    nqp_rxpeek $I19, rx734_bstack, rxcap739_fail1703
    inc $I19
    set $I11, rx734_bstack[$I19]
    repr_bind_attr_int rx734_cur, rx734_curclass, "$!pos", rx734_pos
    $P11 = rx734_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx734_pos)
    rx734_cstack = rx734_cur."!cursor_capture"($P11, "sym")
    goto rxcap739_done1702
  rxcap739_fail1703:
    goto rx734_fail1690
  rxcap739_done1702:
    repr_bind_attr_int rx734_cur, rx734_curclass, "$!pos", rx734_pos
    $P11 = rx734_cur."ws"()
    repr_get_attr_int $I11, $P11, rx734_curclass, "$!pos"
    lt $I11, 0, rx734_fail1690
    repr_get_attr_int rx734_pos, $P11, rx734_curclass, "$!pos"
    repr_bind_attr_int rx734_cur, rx734_curclass, "$!pos", rx734_pos
    $P11 = rx734_cur."name"()
    repr_get_attr_int $I11, $P11, rx734_curclass, "$!pos"
    lt $I11, 0, rx734_fail1690
    nqp_rxmark rx734_bstack, rxsubrule741_pass1705, -1, 0
  rxsubrule741_pass1705:
    rx734_cstack = rx734_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx734_pos, $P11, rx734_curclass, "$!pos"
    repr_bind_attr_int rx734_cur, rx734_curclass, "$!pos", rx734_pos
    $P11 = rx734_cur."ws"()
    repr_get_attr_int $I11, $P11, rx734_curclass, "$!pos"
    lt $I11, 0, rx734_fail1690
    repr_get_attr_int rx734_pos, $P11, rx734_curclass, "$!pos"
    add $I11, rx734_pos, 9
    gt $I11, rx734_eos, rx734_fail1690
    substr $S10, rx734_tgt, rx734_pos, 9
    ne $S10, ucs4:"metaclass", rx734_fail1690
    add rx734_pos, 9
    repr_bind_attr_int rx734_cur, rx734_curclass, "$!pos", rx734_pos
    $P11 = rx734_cur."ws"()
    repr_get_attr_int $I11, $P11, rx734_curclass, "$!pos"
    lt $I11, 0, rx734_fail1690
    repr_get_attr_int rx734_pos, $P11, rx734_curclass, "$!pos"
    repr_bind_attr_int rx734_cur, rx734_curclass, "$!pos", rx734_pos
    $P11 = rx734_cur."name"()
    repr_get_attr_int $I11, $P11, rx734_curclass, "$!pos"
    lt $I11, 0, rx734_fail1690
    nqp_rxmark rx734_bstack, rxsubrule744_pass1708, -1, 0
  rxsubrule744_pass1708:
    rx734_cstack = rx734_cur."!cursor_capture"($P11, "metaclass")
    repr_get_attr_int rx734_pos, $P11, rx734_curclass, "$!pos"
    repr_bind_attr_int rx734_cur, rx734_curclass, "$!pos", rx734_pos
    $P11 = rx734_cur."ws"()
    repr_get_attr_int $I11, $P11, rx734_curclass, "$!pos"
    lt $I11, 0, rx734_fail1690
    repr_get_attr_int rx734_pos, $P11, rx734_curclass, "$!pos"
    add $I11, rx734_pos, 1
    gt $I11, rx734_eos, rx734_fail1690
    substr $S10, rx734_tgt, rx734_pos, 1
    ne $S10, ucs4:"{", rx734_fail1690
    add rx734_pos, 1
    repr_bind_attr_int rx734_cur, rx734_curclass, "$!pos", rx734_pos
    $P11 = rx734_cur."ws"()
    repr_get_attr_int $I11, $P11, rx734_curclass, "$!pos"
    lt $I11, 0, rx734_fail1690
    repr_get_attr_int rx734_pos, $P11, rx734_curclass, "$!pos"
    add $I11, rx734_pos, 3
    gt $I11, rx734_eos, rx734_fail1690
    substr $S10, rx734_tgt, rx734_pos, 3
    ne $S10, ucs4:"...", rx734_fail1690
    add rx734_pos, 3
    repr_bind_attr_int rx734_cur, rx734_curclass, "$!pos", rx734_pos
    $P11 = rx734_cur."ws"()
    repr_get_attr_int $I11, $P11, rx734_curclass, "$!pos"
    lt $I11, 0, rx734_fail1690
    repr_get_attr_int rx734_pos, $P11, rx734_curclass, "$!pos"
    add $I11, rx734_pos, 1
    gt $I11, rx734_eos, rx734_fail1690
    substr $S10, rx734_tgt, rx734_pos, 1
    ne $S10, ucs4:"}", rx734_fail1690
    add rx734_pos, 1
    repr_bind_attr_int rx734_cur, rx734_curclass, "$!pos", rx734_pos
    $P11 = rx734_cur."ws"()
    repr_get_attr_int $I11, $P11, rx734_curclass, "$!pos"
    lt $I11, 0, rx734_fail1690
    repr_get_attr_int rx734_pos, $P11, rx734_curclass, "$!pos"
    rx734_cur."!cursor_pass"(rx734_pos, "package_declarator:sym<stub>", 'backtrack'=>1)
    .return (rx734_cur)
  rx734_restart1689:
    repr_get_attr_obj rx734_cstack, rx734_cur, rx734_curclass, "$!cstack"
  rx734_fail1690:
    unless rx734_bstack, rx734_done1688
    pop $I19, rx734_bstack
    if_null rx734_cstack, rx734_cstack_done1693
    unless rx734_cstack, rx734_cstack_done1693
    dec $I19
    set $P11, rx734_cstack[$I19]
  rx734_cstack_done1693:
    pop rx734_rep, rx734_bstack
    pop rx734_pos, rx734_bstack
    pop $I19, rx734_bstack
    lt rx734_pos, -1, rx734_done1688
    lt rx734_pos, 0, rx734_fail1690
    eq $I19, 0, rx734_fail1690
    nqp_islist $I20, rx734_cstack
    unless $I20, rx734_jump1691
    elements $I18, rx734_bstack
    le $I18, 0, rx734_cut1692
    dec $I18
    set $I18, rx734_bstack[$I18]
  rx734_cut1692:
    assign rx734_cstack, $I18
  rx734_jump1691:
    jump $I19
  rx734_done1688:
    rx734_cur."!cursor_fail"()
    .return (rx734_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_def" :subid("cuid_109_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1005
    .param pmc _lex_param_0 
    .const 'Sub' $P5025 = 'cuid_403_1361734139.417' 
    capture_lex $P5025 
    .const 'Sub' $P5025 = 'cuid_404_1361734139.417' 
    capture_lex $P5025 
    .lex "$*PACKAGE", $P101 
    .lex "$OUTER", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_106 
    .local pmc fb_tmp_107 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx749_start
    .local string rx749_tgt
    .local int rx749_pos
    .local int rx749_off
    .local int rx749_eos
    .local int rx749_rep
    .local pmc rx749_cur
    .local pmc rx749_curclass
    .local pmc rx749_bstack
    .local pmc rx749_cstack
    rx749_start = self."!cursor_start_all"()
    set rx749_cur, rx749_start[0]
    set rx749_tgt, rx749_start[1]
    set rx749_pos, rx749_start[2]
    set rx749_curclass, rx749_start[3]
    set rx749_bstack, rx749_start[4]
    set $I19, rx749_start[5]
    store_lex unicode:"$\x{a2}", rx749_cur
    length rx749_eos, rx749_tgt
    eq $I19, 1, rx749_restart1715
    gt rx749_pos, rx749_eos, rx749_fail1716
    repr_get_attr_int $I11, self, rx749_curclass, "$!from"
    ne $I11, -1, rxscan750_done1722
    goto rxscan750_scan1721
  rxscan750_loop1720:
    inc rx749_pos
    gt rx749_pos, rx749_eos, rx749_fail1716
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!from", rx749_pos
  rxscan750_scan1721:
    nqp_rxmark rx749_bstack, rxscan750_loop1720, rx749_pos, 0
  rxscan750_done1722:
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."ws"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    store_lex unicode:"$\x{a2}", rx749_cur
    unless_null $P101, fallback1724
    nqp_get_sc_object $P5004, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5003, $P5004
    set fb_tmp_106, $P5003
    repr_defined $I5001, fb_tmp_106
    unless $I5001 goto if752_else1725 
    set $P5005, fb_tmp_106["$PACKAGE"]
    set $P5007, $P5005
    goto if752_end1726
  if752_else1725:
    null $P5006
    set $P5007, $P5006
  if752_end1726:
    unless_null $P5007, vivi_7531727
    nqp_get_sc_object $P5008, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5007, $P5008
  vivi_7531727:
    unless_null $P5007, vivi_7541728
    die "Contextual $*PACKAGE not found"
    box $P5009, "Contextual $*PACKAGE not found"
    set $P5007, $P5009
  vivi_7541728:
    set $P101, $P5007
  fallback1724:
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."ws"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    store_lex unicode:"$\x{a2}", rx749_cur
.annotate 'line', 1007
    find_dynamic_lex $P5010, "$*W"
    unless_null $P5010, fallback1730
    nqp_get_sc_object $P5012, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5011, $P5012
    set fb_tmp_107, $P5011
    repr_defined $I5002, fb_tmp_107
    unless $I5002 goto if756_else1731 
    set $P5013, fb_tmp_107["$W"]
    set $P5015, $P5013
    goto if756_end1732
  if756_else1731:
    null $P5014
    set $P5015, $P5014
  if756_end1732:
    unless_null $P5015, vivi_7571733
    nqp_get_sc_object $P5016, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5015, $P5016
  vivi_7571733:
    unless_null $P5015, vivi_7581734
    die "Contextual $*W not found"
    box $P5017, "Contextual $*W not found"
    set $P5015, $P5017
  vivi_7581734:
    set $P5010, $P5015
  fallback1730:
    $P5018 = $P5010."cur_lexpad"()
    set $P102, $P5018
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."ws"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."name"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    nqp_rxmark rx749_bstack, rxsubrule760_pass1736, -1, 0
  rxsubrule760_pass1736:
    rx749_cstack = rx749_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."ws"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."ws"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
    nqp_rxmark rx749_bstack, rxquantr764_done1741, rx749_pos, 0
  rxquantr764_loop1740:
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."ws"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    store_lex unicode:"$\x{a2}", rx749_cur
    $P5019 = $P103."MATCH"()
    set $P104, $P5019
    .const 'Sub' $P5020 = 'cuid_403_1361734139.417' 
    capture_lex $P5020
    $P5021 = $P5020()
    unless $P5021, rx749_fail1716
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."ws"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
    add $I11, rx749_pos, 1
    gt $I11, rx749_eos, rx749_fail1716
    substr $S10, rx749_tgt, rx749_pos, 1
    ne $S10, ucs4:"[", rx749_fail1716
    add rx749_pos, 1
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."ws"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."role_params"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    nqp_rxmark rx749_bstack, rxsubrule771_pass1750, -1, 0
  rxsubrule771_pass1750:
    rx749_cstack = rx749_cur."!cursor_capture"($P11, "role_params")
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
  alt772_01752:
    nqp_rxmark rx749_bstack, alt772_11753, rx749_pos, 0
    add $I11, rx749_pos, 1
    gt $I11, rx749_eos, rx749_fail1716
    substr $S10, rx749_tgt, rx749_pos, 1
    ne $S10, ucs4:"]", rx749_fail1716
    add rx749_pos, 1
    goto alt772_end1751
  alt772_11753:
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."FAILGOAL"("']'")
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    goto rxsubrule773_pass1754
  rxsubrule773_back1755:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
  rxsubrule773_pass1754:
    rx749_cstack = rx749_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule773_back1755
    push rx749_bstack, $I11
    push rx749_bstack, 0
    push rx749_bstack, rx749_pos
    elements $I11, rx749_cstack
    push rx749_bstack, $I11
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
  alt772_end1751:
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."ws"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
    nqp_rxpeek $I19, rx749_bstack, rxquantr764_done1741
    inc $I19
    inc $I19
    set rx749_rep, rx749_bstack[$I19]
    nqp_rxcommit rx749_bstack, rxquantr764_done1741
    inc rx749_rep
  rxquantr764_done1741:
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."ws"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
    nqp_rxmark rx749_bstack, rxquantr776_done1759, rx749_pos, 0
  rxquantr776_loop1758:
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."ws"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
    add $I11, rx749_pos, 2
    gt $I11, rx749_eos, rx749_fail1716
    substr $S10, rx749_tgt, rx749_pos, 2
    ne $S10, ucs4:"is", rx749_fail1716
    add rx749_pos, 2
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."ws"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
    add $I11, rx749_pos, 5
    gt $I11, rx749_eos, rx749_fail1716
    substr $S10, rx749_tgt, rx749_pos, 5
    ne $S10, ucs4:"repr(", rx749_fail1716
    add rx749_pos, 5
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."ws"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."quote_EXPR"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    nqp_rxmark rx749_bstack, rxsubrule780_pass1763, -1, 0
  rxsubrule780_pass1763:
    rx749_cstack = rx749_cur."!cursor_capture"($P11, "repr")
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."ws"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
    add $I11, rx749_pos, 1
    gt $I11, rx749_eos, rx749_fail1716
    substr $S10, rx749_tgt, rx749_pos, 1
    ne $S10, ucs4:")", rx749_fail1716
    add rx749_pos, 1
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."ws"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
    nqp_rxpeek $I19, rx749_bstack, rxquantr776_done1759
    inc $I19
    inc $I19
    set rx749_rep, rx749_bstack[$I19]
    nqp_rxcommit rx749_bstack, rxquantr776_done1759
    inc rx749_rep
  rxquantr776_done1759:
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."ws"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    store_lex unicode:"$\x{a2}", rx749_cur
    $P5022 = $P103."MATCH"()
    set $P104, $P5022
    .const 'Sub' $P5023 = 'cuid_404_1361734139.417' 
    capture_lex $P5023
    $P5024 = $P5023()
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."ws"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
    nqp_rxmark rx749_bstack, rxquantr875_done1923, rx749_pos, 0
  rxquantr875_loop1922:
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."ws"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
    nqp_rxmark rx749_bstack, rxcap877_fail1926, rx749_pos, 0
    add $I11, rx749_pos, 9
    gt $I11, rx749_eos, rx749_fail1716
    substr $S10, rx749_tgt, rx749_pos, 9
    ne $S10, ucs4:"is export", rx749_fail1716
    add rx749_pos, 9
    nqp_rxpeek $I19, rx749_bstack, rxcap877_fail1926
    inc $I19
    set $I11, rx749_bstack[$I19]
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx749_pos)
    rx749_cstack = rx749_cur."!cursor_capture"($P11, "export")
    goto rxcap877_done1925
  rxcap877_fail1926:
    goto rx749_fail1716
  rxcap877_done1925:
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."ws"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
    nqp_rxpeek $I19, rx749_bstack, rxquantr875_done1923
    inc $I19
    inc $I19
    set rx749_rep, rx749_bstack[$I19]
    nqp_rxcommit rx749_bstack, rxquantr875_done1923
    inc rx749_rep
  rxquantr875_done1923:
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."ws"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
    nqp_rxmark rx749_bstack, rxquantr880_done1930, rx749_pos, 0
  rxquantr880_loop1929:
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."ws"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
    add $I11, rx749_pos, 2
    gt $I11, rx749_eos, rx749_fail1716
    substr $S10, rx749_tgt, rx749_pos, 2
    ne $S10, ucs4:"is", rx749_fail1716
    add rx749_pos, 2
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."ws"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."name"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    nqp_rxmark rx749_bstack, rxsubrule883_pass1933, -1, 0
  rxsubrule883_pass1933:
    rx749_cstack = rx749_cur."!cursor_capture"($P11, "parent")
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."ws"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
    nqp_rxpeek $I19, rx749_bstack, rxquantr880_done1930
    inc $I19
    inc $I19
    set rx749_rep, rx749_bstack[$I19]
    nqp_rxcommit rx749_bstack, rxquantr880_done1930
    inc rx749_rep
  rxquantr880_done1930:
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."ws"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
    nqp_rxmark rx749_bstack, rxquantr886_done1937, rx749_pos, 0
  rxquantr886_loop1936:
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."ws"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
    add $I11, rx749_pos, 4
    gt $I11, rx749_eos, rx749_fail1716
    substr $S10, rx749_tgt, rx749_pos, 4
    ne $S10, ucs4:"does", rx749_fail1716
    add rx749_pos, 4
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."ws"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."name"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    nqp_rxmark rx749_bstack, rxsubrule889_pass1940, -1, 0
  rxsubrule889_pass1940:
    rx749_cstack = rx749_cur."!cursor_capture"($P11, "role")
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."ws"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
    nqp_rxpeek $I19, rx749_bstack, rxquantr886_done1937
    inc $I19
    inc $I19
    set rx749_rep, rx749_bstack[$I19]
    nqp_rxcommit rx749_bstack, rxquantr886_done1937
    inc rx749_rep
    nqp_rxmark rx749_bstack, rxquantr886_done1937, rx749_pos, rx749_rep
    goto rxquantr886_loop1936
  rxquantr886_done1937:
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."ws"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
  alt892_01944:
    nqp_rxmark rx749_bstack, alt892_11959, rx749_pos, 0
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."ws"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
    add $I11, rx749_pos, 1
    gt $I11, rx749_eos, rx749_fail1716
    substr $S10, rx749_tgt, rx749_pos, 1
    ne $S10, ucs4:";", rx749_fail1716
    add rx749_pos, 1
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."ws"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."statementlist"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    nqp_rxmark rx749_bstack, rxsubrule895_pass1947, -1, 0
  rxsubrule895_pass1947:
    rx749_cstack = rx749_cur."!cursor_capture"($P11, "statementlist")
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."ws"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
  alt897_01950:
    nqp_rxmark rx749_bstack, alt897_11954, rx749_pos, 0
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."ws"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
    lt rx749_pos, rx749_eos, rx749_fail1716
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."ws"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
    goto alt897_end1949
  alt897_11954:
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."ws"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."panic"("Confused")
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."ws"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
  alt897_end1949:
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."ws"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
    goto alt892_end1943
  alt892_11959:
    nqp_rxmark rx749_bstack, alt892_21964, rx749_pos, 0
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."ws"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
    ge rx749_pos, rx749_eos, rx749_fail1716
    substr $S11, rx749_tgt, rx749_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx749_fail1716
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."ws"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    nqp_rxmark rx749_bstack, rxsubrule907_pass1962, -1, 0
  rxsubrule907_pass1962:
    rx749_cstack = rx749_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."ws"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
    goto alt892_end1943
  alt892_21964:
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."ws"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."panic"("Malformed package declaration")
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."ws"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
  alt892_end1943:
    repr_bind_attr_int rx749_cur, rx749_curclass, "$!pos", rx749_pos
    $P11 = rx749_cur."ws"()
    repr_get_attr_int $I11, $P11, rx749_curclass, "$!pos"
    lt $I11, 0, rx749_fail1716
    repr_get_attr_int rx749_pos, $P11, rx749_curclass, "$!pos"
    rx749_cur."!cursor_pass"(rx749_pos, "package_def", 'backtrack'=>1)
    .return (rx749_cur)
  rx749_restart1715:
    repr_get_attr_obj rx749_cstack, rx749_cur, rx749_curclass, "$!cstack"
  rx749_fail1716:
    unless rx749_bstack, rx749_done1714
    pop $I19, rx749_bstack
    if_null rx749_cstack, rx749_cstack_done1719
    unless rx749_cstack, rx749_cstack_done1719
    dec $I19
    set $P11, rx749_cstack[$I19]
  rx749_cstack_done1719:
    pop rx749_rep, rx749_bstack
    pop rx749_pos, rx749_bstack
    pop $I19, rx749_bstack
    lt rx749_pos, -1, rx749_done1714
    lt rx749_pos, 0, rx749_fail1716
    eq $I19, 0, rx749_fail1716
    nqp_islist $I20, rx749_cstack
    unless $I20, rx749_jump1717
    elements $I18, rx749_bstack
    le $I18, 0, rx749_cut1718
    dec $I18
    set $I18, rx749_bstack[$I18]
  rx749_cut1718:
    assign rx749_cstack, $I18
  rx749_jump1717:
    jump $I19
  rx749_done1714:
    rx749_cur."!cursor_fail"()
    .return (rx749_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_403_1361734139.417") :anon :lex :outer("cuid_109_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1011
    .local pmc fb_tmp_108 
    find_dynamic_lex $P5001, "$*PKGDECL"
    unless_null $P5001, fallback1743
    nqp_get_sc_object $P5003, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5002, $P5003
    set fb_tmp_108, $P5002
    repr_defined $I5002, fb_tmp_108
    unless $I5002 goto if766_else1744 
    set $P5004, fb_tmp_108["$PKGDECL"]
    set $P5006, $P5004
    goto if766_end1745
  if766_else1744:
    null $P5005
    set $P5006, $P5005
  if766_end1745:
    unless_null $P5006, vivi_7671746
    nqp_get_sc_object $P5007, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5006, $P5007
  vivi_7671746:
    unless_null $P5006, vivi_7681747
    die "Contextual $*PKGDECL not found"
    box $P5008, "Contextual $*PKGDECL not found"
    set $P5006, $P5008
  vivi_7681747:
    set $P5001, $P5006
  fallback1743:
    set $S5001, $P5001
    iseq $I5001, $S5001, "role"
    .return ($I5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_404_1361734139.417") :anon :lex :outer("cuid_109_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1014
    .lex "%args", $P101 
    .local pmc fb_tmp_109 
    .local pmc fb_tmp_110 
    .local pmc fb_tmp_111 
    .local pmc fb_tmp_112 
    .local pmc fb_tmp_113 
    .local pmc fb_tmp_114 
    .local pmc fb_tmp_115 
    .local pmc fb_tmp_116 
    .local pmc fb_tmp_117 
    .local pmc fb_tmp_118 
    .local pmc pkg_viv_tmp_22 
    .local pmc fb_tmp_119 
    .local pmc fb_tmp_120 
    .local pmc fb_tmp_121 
    .local pmc fb_tmp_122 
    .local pmc fb_tmp_123 
    .local pmc fb_tmp_124 
    .local pmc fb_tmp_125 
    .local pmc fb_tmp_126 
    .local pmc fb_tmp_127 
    .local pmc fb_tmp_128 
    .local pmc fb_tmp_129 
    .local pmc fb_tmp_130 
    .local pmc fb_tmp_131 
    .local pmc fb_tmp_132 
    .local pmc fb_tmp_133 
    .local pmc fb_tmp_134 
    .local pmc fb_tmp_135 
    .local pmc fb_tmp_136 
    .local pmc fb_tmp_137 
    .local pmc fb_tmp_138 
    .local pmc fb_tmp_139 
    .local pmc fb_tmp_140 
    .local pmc fb_tmp_141 
    .local pmc fb_tmp_142 
    .local pmc fb_tmp_143 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $P5002, "$/"
    unless_null $P5002, fallback1769
    nqp_get_sc_object $P5003, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5002, $P5003
  fallback1769:
    set fb_tmp_109, $P5002
    repr_defined $I5001, fb_tmp_109
    unless $I5001 goto if784_else1767 
    set $P5004, fb_tmp_109["name"]
    set $P5006, $P5004
    goto if784_end1768
  if784_else1767:
    null $P5005
    set $P5006, $P5005
  if784_end1768:
    unless_null $P5006, vivi_7851770
    nqp_get_sc_object $P5007, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5006, $P5007
  vivi_7851770:
    set $S5001, $P5006
    box $P5008, $S5001
    set $P101["name"], $P5008
    find_lex $P5009, "$/"
    unless_null $P5009, fallback1775
    nqp_get_sc_object $P5010, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5009, $P5010
  fallback1775:
    set fb_tmp_110, $P5009
    repr_defined $I5002, fb_tmp_110
    unless $I5002 goto if787_else1773 
    set $P5011, fb_tmp_110["repr"]
    set $P5013, $P5011
    goto if787_end1774
  if787_else1773:
    null $P5012
    set $P5013, $P5012
  if787_end1774:
    unless_null $P5013, vivi_7881776
    nqp_get_sc_object $P5014, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5013, $P5014
  vivi_7881776:
    unless $P5013 goto if786_end1772 
.annotate 'line', 1019
    find_lex $P5015, "$/"
    unless_null $P5015, fallback1787
    nqp_get_sc_object $P5016, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5015, $P5016
  fallback1787:
    set fb_tmp_115, $P5015
    repr_defined $I5007, fb_tmp_115
    unless $I5007 goto if793_else1785 
    set $P5017, fb_tmp_115["repr"]
    set $P5019, $P5017
    goto if793_end1786
  if793_else1785:
    null $P5018
    set $P5019, $P5018
  if793_end1786:
    unless_null $P5019, vivi_7941788
    nqp_get_sc_object $P5020, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5019, $P5020
  vivi_7941788:
    set fb_tmp_114, $P5019
    repr_defined $I5006, fb_tmp_114
    unless $I5006 goto if792_else1783 
    set $P5021, fb_tmp_114[0]
    set $P5023, $P5021
    goto if792_end1784
  if792_else1783:
    null $P5022
    set $P5023, $P5022
  if792_end1784:
    unless_null $P5023, vivi_7951789
    nqp_get_sc_object $P5024, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5023, $P5024
  vivi_7951789:
    set fb_tmp_113, $P5023
    repr_defined $I5005, fb_tmp_113
    unless $I5005 goto if791_else1781 
    set $P5025, fb_tmp_113["quote_delimited"]
    set $P5027, $P5025
    goto if791_end1782
  if791_else1781:
    null $P5026
    set $P5027, $P5026
  if791_end1782:
    unless_null $P5027, vivi_7961790
    nqp_get_sc_object $P5028, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5027, $P5028
  vivi_7961790:
    set fb_tmp_112, $P5027
    repr_defined $I5004, fb_tmp_112
    unless $I5004 goto if790_else1779 
    set $P5029, fb_tmp_112["quote_atom"]
    set $P5031, $P5029
    goto if790_end1780
  if790_else1779:
    null $P5030
    set $P5031, $P5030
  if790_end1780:
    unless_null $P5031, vivi_7971791
    nqp_get_sc_object $P5032, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5031, $P5032
  vivi_7971791:
    set fb_tmp_111, $P5031
    repr_defined $I5003, fb_tmp_111
    unless $I5003 goto if789_else1777 
    set $P5033, fb_tmp_111[0]
    set $P5035, $P5033
    goto if789_end1778
  if789_else1777:
    null $P5034
    set $P5035, $P5034
  if789_end1778:
    unless_null $P5035, vivi_7981792
    nqp_get_sc_object $P5036, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5035, $P5036
  vivi_7981792:
    set $S5002, $P5035
    box $P5037, $S5002
    set $P101["repr"], $P5037
  if786_end1772:
.annotate 'line', 1022
    find_dynamic_lex $P5038, "$*W"
    unless_null $P5038, fallback1793
    nqp_get_sc_object $P5040, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5039, $P5040
    set fb_tmp_116, $P5039
    repr_defined $I5008, fb_tmp_116
    unless $I5008 goto if799_else1794 
    set $P5041, fb_tmp_116["$W"]
    set $P5043, $P5041
    goto if799_end1795
  if799_else1794:
    null $P5042
    set $P5043, $P5042
  if799_end1795:
    unless_null $P5043, vivi_8001796
    nqp_get_sc_object $P5044, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5043, $P5044
  vivi_8001796:
    unless_null $P5043, vivi_8011797
    die "Contextual $*W not found"
    box $P5045, "Contextual $*W not found"
    set $P5043, $P5045
  vivi_8011797:
    set $P5038, $P5043
  fallback1793:
    find_dynamic_lex $P5046, "%*HOW"
    unless_null $P5046, fallback1800
    nqp_get_sc_object $P5048, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5047, $P5048
    set pkg_viv_tmp_22, $P5047
    set fb_tmp_118, pkg_viv_tmp_22
    repr_defined $I5010, fb_tmp_118
    unless $I5010 goto if803_else1801 
    set $P5049, fb_tmp_118["%HOW"]
    set $P5051, $P5049
    goto if803_end1802
  if803_else1801:
    null $P5050
    set $P5051, $P5050
  if803_end1802:
    unless_null $P5051, vivi_8041803
    new $P5052, 'Hash'
    set pkg_viv_tmp_22["%HOW"], $P5052
    set $P5051, $P5052
  vivi_8041803:
    unless_null $P5051, vivi_8051804
    die "Contextual %*HOW not found"
    box $P5053, "Contextual %*HOW not found"
    set $P5051, $P5053
  vivi_8051804:
    set $P5046, $P5051
  fallback1800:
    set fb_tmp_117, $P5046
    repr_defined $I5009, fb_tmp_117
    unless $I5009 goto if802_else1798 
    find_dynamic_lex $P5055, "$*PKGDECL"
    unless_null $P5055, fallback1805
    nqp_get_sc_object $P5057, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5056, $P5057
    set fb_tmp_119, $P5056
    repr_defined $I5011, fb_tmp_119
    unless $I5011 goto if806_else1806 
    set $P5058, fb_tmp_119["$PKGDECL"]
    set $P5060, $P5058
    goto if806_end1807
  if806_else1806:
    null $P5059
    set $P5060, $P5059
  if806_end1807:
    unless_null $P5060, vivi_8071808
    nqp_get_sc_object $P5061, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5060, $P5061
  vivi_8071808:
    unless_null $P5060, vivi_8081809
    die "Contextual $*PKGDECL not found"
    box $P5062, "Contextual $*PKGDECL not found"
    set $P5060, $P5062
  vivi_8081809:
    set $P5055, $P5060
  fallback1805:
    set $S5003, $P5055
    set $P5054, fb_tmp_117[$S5003]
    set $P5064, $P5054
    goto if802_end1799
  if802_else1798:
    null $P5063
    set $P5064, $P5063
  if802_end1799:
    unless_null $P5064, vivi_8091810
    nqp_get_sc_object $P5065, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5064, $P5065
  vivi_8091810:
    $P5066 = $P5038."pkg_create_mo"($P5064, $P101 :flat :named)
    store_dynamic_lex "$*PACKAGE", $P5066
    find_dynamic_lex $P5067, "$*SCOPE"
    unless_null $P5067, fallback1815
    nqp_get_sc_object $P5069, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5068, $P5069
    set fb_tmp_120, $P5068
    repr_defined $I5013, fb_tmp_120
    unless $I5013 goto if812_else1816 
    set $P5070, fb_tmp_120["$SCOPE"]
    set $P5072, $P5070
    goto if812_end1817
  if812_else1816:
    null $P5071
    set $P5072, $P5071
  if812_end1817:
    unless_null $P5072, vivi_8131818
    nqp_get_sc_object $P5073, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5072, $P5073
  vivi_8131818:
    unless_null $P5072, vivi_8141819
    die "Contextual $*SCOPE not found"
    box $P5074, "Contextual $*SCOPE not found"
    set $P5072, $P5074
  vivi_8141819:
    set $P5067, $P5072
  fallback1815:
    set $S5004, $P5067
    iseq $I5012, $S5004, "our"
    set $I5016, $I5012
    if $I5012 goto unless811_end1814 
    find_dynamic_lex $P5075, "$*SCOPE"
    unless_null $P5075, fallback1820
    nqp_get_sc_object $P5077, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5076, $P5077
    set fb_tmp_121, $P5076
    repr_defined $I5015, fb_tmp_121
    unless $I5015 goto if815_else1821 
    set $P5078, fb_tmp_121["$SCOPE"]
    set $P5080, $P5078
    goto if815_end1822
  if815_else1821:
    null $P5079
    set $P5080, $P5079
  if815_end1822:
    unless_null $P5080, vivi_8161823
    nqp_get_sc_object $P5081, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5080, $P5081
  vivi_8161823:
    unless_null $P5080, vivi_8171824
    die "Contextual $*SCOPE not found"
    box $P5082, "Contextual $*SCOPE not found"
    set $P5080, $P5082
  vivi_8171824:
    set $P5075, $P5080
  fallback1820:
    set $S5005, $P5075
    iseq $I5014, $S5005, ""
    set $I5016, $I5014
  unless811_end1814:
    unless $I5016 goto if810_else1811 
.annotate 'line', 1025
.annotate 'line', 1026
    find_dynamic_lex $P5083, "$*W"
    unless_null $P5083, fallback1825
    nqp_get_sc_object $P5085, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5084, $P5085
    set fb_tmp_122, $P5084
    repr_defined $I5017, fb_tmp_122
    unless $I5017 goto if818_else1826 
    set $P5086, fb_tmp_122["$W"]
    set $P5088, $P5086
    goto if818_end1827
  if818_else1826:
    null $P5087
    set $P5088, $P5087
  if818_end1827:
    unless_null $P5088, vivi_8191828
    nqp_get_sc_object $P5089, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5088, $P5089
  vivi_8191828:
    unless_null $P5088, vivi_8201829
    die "Contextual $*W not found"
    box $P5090, "Contextual $*W not found"
    set $P5088, $P5090
  vivi_8201829:
    set $P5083, $P5088
  fallback1825:
    find_dynamic_lex $P5091, "$*OUTERPACKAGE"
    unless_null $P5091, fallback1830
    nqp_get_sc_object $P5093, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5092, $P5093
    set fb_tmp_123, $P5092
    repr_defined $I5018, fb_tmp_123
    unless $I5018 goto if821_else1831 
    set $P5094, fb_tmp_123["$OUTERPACKAGE"]
    set $P5096, $P5094
    goto if821_end1832
  if821_else1831:
    null $P5095
    set $P5096, $P5095
  if821_end1832:
    unless_null $P5096, vivi_8221833
    nqp_get_sc_object $P5097, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5096, $P5097
  vivi_8221833:
    unless_null $P5096, vivi_8231834
    die "Contextual $*OUTERPACKAGE not found"
    box $P5098, "Contextual $*OUTERPACKAGE not found"
    set $P5096, $P5098
  vivi_8231834:
    set $P5091, $P5096
  fallback1830:
    find_lex $P5099, "$/"
    unless_null $P5099, fallback1839
    nqp_get_sc_object $P5100, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5099, $P5100
  fallback1839:
    set fb_tmp_125, $P5099
    repr_defined $I5020, fb_tmp_125
    unless $I5020 goto if825_else1837 
    set $P5101, fb_tmp_125["name"]
    set $P5103, $P5101
    goto if825_end1838
  if825_else1837:
    null $P5102
    set $P5103, $P5102
  if825_end1838:
    unless_null $P5103, vivi_8261840
    nqp_get_sc_object $P5104, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5103, $P5104
  vivi_8261840:
    set fb_tmp_124, $P5103
    repr_defined $I5019, fb_tmp_124
    unless $I5019 goto if824_else1835 
    set $P5105, fb_tmp_124["identifier"]
    set $P5107, $P5105
    goto if824_end1836
  if824_else1835:
    null $P5106
    set $P5107, $P5106
  if824_end1836:
    unless_null $P5107, vivi_8271841
    nqp_get_sc_object $P5108, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5107, $P5108
  vivi_8271841:
    find_dynamic_lex $P5109, "$*PACKAGE"
    unless_null $P5109, fallback1842
    nqp_get_sc_object $P5111, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5110, $P5111
    set fb_tmp_126, $P5110
    repr_defined $I5021, fb_tmp_126
    unless $I5021 goto if828_else1843 
    set $P5112, fb_tmp_126["$PACKAGE"]
    set $P5114, $P5112
    goto if828_end1844
  if828_else1843:
    null $P5113
    set $P5114, $P5113
  if828_end1844:
    unless_null $P5114, vivi_8291845
    nqp_get_sc_object $P5115, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5114, $P5115
  vivi_8291845:
    unless_null $P5114, vivi_8301846
    die "Contextual $*PACKAGE not found"
    box $P5116, "Contextual $*PACKAGE not found"
    set $P5114, $P5116
  vivi_8301846:
    set $P5109, $P5114
  fallback1842:
    $P5083."install_package_symbol"($P5091, $P5107, $P5109)
    find_lex $P5117, "$/"
    unless_null $P5117, fallback1853
    nqp_get_sc_object $P5118, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5117, $P5118
  fallback1853:
    set fb_tmp_128, $P5117
    repr_defined $I5024, fb_tmp_128
    unless $I5024 goto if833_else1851 
    set $P5119, fb_tmp_128["name"]
    set $P5121, $P5119
    goto if833_end1852
  if833_else1851:
    null $P5120
    set $P5121, $P5120
  if833_end1852:
    unless_null $P5121, vivi_8341854
    nqp_get_sc_object $P5122, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5121, $P5122
  vivi_8341854:
    set fb_tmp_127, $P5121
    repr_defined $I5023, fb_tmp_127
    unless $I5023 goto if832_else1849 
    set $P5123, fb_tmp_127["identifier"]
    set $P5125, $P5123
    goto if832_end1850
  if832_else1849:
    null $P5124
    set $P5125, $P5124
  if832_end1850:
    unless_null $P5125, vivi_8351855
    nqp_get_sc_object $P5126, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5125, $P5126
  vivi_8351855:
    set $N5001, $P5125
    set $N5002, 1
    iseq $I5022, $N5001, $N5002
    box $P5160, $I5022
    set $P5159, $P5160
    unless $I5022 goto if831_end1848 
.annotate 'line', 1027
.annotate 'line', 1028
    find_dynamic_lex $P5127, "$*W"
    unless_null $P5127, fallback1856
    nqp_get_sc_object $P5129, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5128, $P5129
    set fb_tmp_129, $P5128
    repr_defined $I5025, fb_tmp_129
    unless $I5025 goto if836_else1857 
    set $P5130, fb_tmp_129["$W"]
    set $P5132, $P5130
    goto if836_end1858
  if836_else1857:
    null $P5131
    set $P5132, $P5131
  if836_end1858:
    unless_null $P5132, vivi_8371859
    nqp_get_sc_object $P5133, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5132, $P5133
  vivi_8371859:
    unless_null $P5132, vivi_8381860
    die "Contextual $*W not found"
    box $P5134, "Contextual $*W not found"
    set $P5132, $P5134
  vivi_8381860:
    set $P5127, $P5132
  fallback1856:
    find_lex $P5135, "$OUTER"
    find_lex $P5136, "$/"
    unless_null $P5136, fallback1867
    nqp_get_sc_object $P5137, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5136, $P5137
  fallback1867:
    set fb_tmp_132, $P5136
    repr_defined $I5028, fb_tmp_132
    unless $I5028 goto if841_else1865 
    set $P5138, fb_tmp_132["name"]
    set $P5140, $P5138
    goto if841_end1866
  if841_else1865:
    null $P5139
    set $P5140, $P5139
  if841_end1866:
    unless_null $P5140, vivi_8421868
    nqp_get_sc_object $P5141, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5140, $P5141
  vivi_8421868:
    set fb_tmp_131, $P5140
    repr_defined $I5027, fb_tmp_131
    unless $I5027 goto if840_else1863 
    set $P5142, fb_tmp_131["identifier"]
    set $P5144, $P5142
    goto if840_end1864
  if840_else1863:
    null $P5143
    set $P5144, $P5143
  if840_end1864:
    unless_null $P5144, vivi_8431869
    nqp_get_sc_object $P5145, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5144, $P5145
  vivi_8431869:
    set fb_tmp_130, $P5144
    repr_defined $I5026, fb_tmp_130
    unless $I5026 goto if839_else1861 
    set $P5146, fb_tmp_130[0]
    set $P5148, $P5146
    goto if839_end1862
  if839_else1861:
    null $P5147
    set $P5148, $P5147
  if839_end1862:
    unless_null $P5148, vivi_8441870
    nqp_get_sc_object $P5149, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5148, $P5149
  vivi_8441870:
    find_dynamic_lex $P5150, "$*PACKAGE"
    unless_null $P5150, fallback1871
    nqp_get_sc_object $P5152, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5151, $P5152
    set fb_tmp_133, $P5151
    repr_defined $I5029, fb_tmp_133
    unless $I5029 goto if845_else1872 
    set $P5153, fb_tmp_133["$PACKAGE"]
    set $P5155, $P5153
    goto if845_end1873
  if845_else1872:
    null $P5154
    set $P5155, $P5154
  if845_end1873:
    unless_null $P5155, vivi_8461874
    nqp_get_sc_object $P5156, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5155, $P5156
  vivi_8461874:
    unless_null $P5155, vivi_8471875
    die "Contextual $*PACKAGE not found"
    box $P5157, "Contextual $*PACKAGE not found"
    set $P5155, $P5157
  vivi_8471875:
    set $P5150, $P5155
  fallback1871:
    $P5158 = $P5127."install_lexical_symbol"($P5135, $P5148, $P5150)
    set $P5159, $P5158
  if831_end1848:
    set $P5231, $P5159
    goto if810_end1812
  if810_else1811:
    find_dynamic_lex $P5161, "$*SCOPE"
    unless_null $P5161, fallback1878
    nqp_get_sc_object $P5163, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5162, $P5163
    set fb_tmp_134, $P5162
    repr_defined $I5031, fb_tmp_134
    unless $I5031 goto if849_else1879 
    set $P5164, fb_tmp_134["$SCOPE"]
    set $P5166, $P5164
    goto if849_end1880
  if849_else1879:
    null $P5165
    set $P5166, $P5165
  if849_end1880:
    unless_null $P5166, vivi_8501881
    nqp_get_sc_object $P5167, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5166, $P5167
  vivi_8501881:
    unless_null $P5166, vivi_8511882
    die "Contextual $*SCOPE not found"
    box $P5168, "Contextual $*SCOPE not found"
    set $P5166, $P5168
  vivi_8511882:
    set $P5161, $P5166
  fallback1878:
    set $S5006, $P5161
    iseq $I5030, $S5006, "my"
    unless $I5030 goto if848_else1876 
.annotate 'line', 1031
    find_lex $P5169, "$/"
    unless_null $P5169, fallback1889
    nqp_get_sc_object $P5170, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5169, $P5170
  fallback1889:
    set fb_tmp_136, $P5169
    repr_defined $I5034, fb_tmp_136
    unless $I5034 goto if854_else1887 
    set $P5171, fb_tmp_136["name"]
    set $P5173, $P5171
    goto if854_end1888
  if854_else1887:
    null $P5172
    set $P5173, $P5172
  if854_end1888:
    unless_null $P5173, vivi_8551890
    nqp_get_sc_object $P5174, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5173, $P5174
  vivi_8551890:
    set fb_tmp_135, $P5173
    repr_defined $I5033, fb_tmp_135
    unless $I5033 goto if853_else1885 
    set $P5175, fb_tmp_135["identifier"]
    set $P5177, $P5175
    goto if853_end1886
  if853_else1885:
    null $P5176
    set $P5177, $P5176
  if853_end1886:
    unless_null $P5177, vivi_8561891
    nqp_get_sc_object $P5178, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5177, $P5178
  vivi_8561891:
    set $N5003, $P5177
    set $N5004, 1
    isne $I5032, $N5003, $N5004
    unless $I5032 goto if852_end1884 
.annotate 'line', 1032
.annotate 'line', 1033
    find_lex $P5179, "$/"
    unless_null $P5179, fallback1894
    nqp_get_sc_object $P5180, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5179, $P5180
  fallback1894:
    set fb_tmp_137, $P5179
    repr_defined $I5035, fb_tmp_137
    unless $I5035 goto if857_else1892 
    set $P5181, fb_tmp_137["name"]
    set $P5183, $P5181
    goto if857_end1893
  if857_else1892:
    null $P5182
    set $P5183, $P5182
  if857_end1893:
    unless_null $P5183, vivi_8581895
    nqp_get_sc_object $P5184, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5183, $P5184
  vivi_8581895:
    $P5185 = $P5183."CURSOR"()
    $P5186 = $P5185."panic"("A my scoped package cannot have a multi-part name yet")
  if852_end1884:
.annotate 'line', 1035
    find_dynamic_lex $P5187, "$*W"
    unless_null $P5187, fallback1896
    nqp_get_sc_object $P5189, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5188, $P5189
    set fb_tmp_138, $P5188
    repr_defined $I5036, fb_tmp_138
    unless $I5036 goto if859_else1897 
    set $P5190, fb_tmp_138["$W"]
    set $P5192, $P5190
    goto if859_end1898
  if859_else1897:
    null $P5191
    set $P5192, $P5191
  if859_end1898:
    unless_null $P5192, vivi_8601899
    nqp_get_sc_object $P5193, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5192, $P5193
  vivi_8601899:
    unless_null $P5192, vivi_8611900
    die "Contextual $*W not found"
    box $P5194, "Contextual $*W not found"
    set $P5192, $P5194
  vivi_8611900:
    set $P5187, $P5192
  fallback1896:
    find_lex $P5195, "$OUTER"
    find_lex $P5196, "$/"
    unless_null $P5196, fallback1907
    nqp_get_sc_object $P5197, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5196, $P5197
  fallback1907:
    set fb_tmp_141, $P5196
    repr_defined $I5039, fb_tmp_141
    unless $I5039 goto if864_else1905 
    set $P5198, fb_tmp_141["name"]
    set $P5200, $P5198
    goto if864_end1906
  if864_else1905:
    null $P5199
    set $P5200, $P5199
  if864_end1906:
    unless_null $P5200, vivi_8651908
    nqp_get_sc_object $P5201, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5200, $P5201
  vivi_8651908:
    set fb_tmp_140, $P5200
    repr_defined $I5038, fb_tmp_140
    unless $I5038 goto if863_else1903 
    set $P5202, fb_tmp_140["identifier"]
    set $P5204, $P5202
    goto if863_end1904
  if863_else1903:
    null $P5203
    set $P5204, $P5203
  if863_end1904:
    unless_null $P5204, vivi_8661909
    nqp_get_sc_object $P5205, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5204, $P5205
  vivi_8661909:
    set fb_tmp_139, $P5204
    repr_defined $I5037, fb_tmp_139
    unless $I5037 goto if862_else1901 
    set $P5206, fb_tmp_139[0]
    set $P5208, $P5206
    goto if862_end1902
  if862_else1901:
    null $P5207
    set $P5208, $P5207
  if862_end1902:
    unless_null $P5208, vivi_8671910
    nqp_get_sc_object $P5209, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5208, $P5209
  vivi_8671910:
    find_dynamic_lex $P5210, "$*PACKAGE"
    unless_null $P5210, fallback1911
    nqp_get_sc_object $P5212, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5211, $P5212
    set fb_tmp_142, $P5211
    repr_defined $I5040, fb_tmp_142
    unless $I5040 goto if868_else1912 
    set $P5213, fb_tmp_142["$PACKAGE"]
    set $P5215, $P5213
    goto if868_end1913
  if868_else1912:
    null $P5214
    set $P5215, $P5214
  if868_end1913:
    unless_null $P5215, vivi_8691914
    nqp_get_sc_object $P5216, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5215, $P5216
  vivi_8691914:
    unless_null $P5215, vivi_8701915
    die "Contextual $*PACKAGE not found"
    box $P5217, "Contextual $*PACKAGE not found"
    set $P5215, $P5217
  vivi_8701915:
    set $P5210, $P5215
  fallback1911:
    $P5218 = $P5187."install_lexical_symbol"($P5195, $P5208, $P5210)
    set $P5230, $P5218
    goto if848_end1877
  if848_else1876:
.annotate 'line', 1037
.annotate 'line', 1038
    find_lex $P5219, "$/"
    $P5220 = $P5219."CURSOR"()
    find_dynamic_lex $P5221, "$*SCOPE"
    unless_null $P5221, fallback1916
    nqp_get_sc_object $P5223, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5222, $P5223
    set fb_tmp_143, $P5222
    repr_defined $I5041, fb_tmp_143
    unless $I5041 goto if871_else1917 
    set $P5224, fb_tmp_143["$SCOPE"]
    set $P5226, $P5224
    goto if871_end1918
  if871_else1917:
    null $P5225
    set $P5226, $P5225
  if871_end1918:
    unless_null $P5226, vivi_8721919
    nqp_get_sc_object $P5227, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5226, $P5227
  vivi_8721919:
    unless_null $P5226, vivi_8731920
    die "Contextual $*SCOPE not found"
    box $P5228, "Contextual $*SCOPE not found"
    set $P5226, $P5228
  vivi_8731920:
    set $P5221, $P5226
  fallback1916:
    set $S5008, $P5221
    concat $S5007, $S5008, " scoped packages are not supported"
    $P5229 = $P5220."panic"($S5007)
    set $P5230, $P5229
  if848_end1877:
    set $P5231, $P5230
  if810_end1812:
    .return ($P5231) 
.end
.HLL "nqp"
.namespace []
.sub "role_params" :subid("cuid_110_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1052
    .param pmc _lex_param_0 
    .lex "$*SCOPE", $P101 
    .lex "$*IN_DECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx913_start
    .local string rx913_tgt
    .local int rx913_pos
    .local int rx913_off
    .local int rx913_eos
    .local int rx913_rep
    .local pmc rx913_cur
    .local pmc rx913_curclass
    .local pmc rx913_bstack
    .local pmc rx913_cstack
    rx913_start = self."!cursor_start_all"()
    set rx913_cur, rx913_start[0]
    set rx913_tgt, rx913_start[1]
    set rx913_pos, rx913_start[2]
    set rx913_curclass, rx913_start[3]
    set rx913_bstack, rx913_start[4]
    set $I19, rx913_start[5]
    store_lex unicode:"$\x{a2}", rx913_cur
    length rx913_eos, rx913_tgt
    eq $I19, 1, rx913_restart1971
    gt rx913_pos, rx913_eos, rx913_fail1972
    repr_get_attr_int $I11, self, rx913_curclass, "$!from"
    ne $I11, -1, rxscan914_done1978
    goto rxscan914_scan1977
  rxscan914_loop1976:
    inc rx913_pos
    gt rx913_pos, rx913_eos, rx913_fail1972
    repr_bind_attr_int rx913_cur, rx913_curclass, "$!from", rx913_pos
  rxscan914_scan1977:
    nqp_rxmark rx913_bstack, rxscan914_loop1976, rx913_pos, 0
  rxscan914_done1978:
    repr_bind_attr_int rx913_cur, rx913_curclass, "$!pos", rx913_pos
    $P11 = rx913_cur."ws"()
    repr_get_attr_int $I11, $P11, rx913_curclass, "$!pos"
    lt $I11, 0, rx913_fail1972
    repr_get_attr_int rx913_pos, $P11, rx913_curclass, "$!pos"
    repr_bind_attr_int rx913_cur, rx913_curclass, "$!pos", rx913_pos
    store_lex unicode:"$\x{a2}", rx913_cur
    box $P5003, "my"
    set $P101, $P5003
    repr_bind_attr_int rx913_cur, rx913_curclass, "$!pos", rx913_pos
    $P11 = rx913_cur."ws"()
    repr_get_attr_int $I11, $P11, rx913_curclass, "$!pos"
    lt $I11, 0, rx913_fail1972
    repr_get_attr_int rx913_pos, $P11, rx913_curclass, "$!pos"
    repr_bind_attr_int rx913_cur, rx913_curclass, "$!pos", rx913_pos
    store_lex unicode:"$\x{a2}", rx913_cur
    box $P5004, "variable"
    set $P102, $P5004
    repr_bind_attr_int rx913_cur, rx913_curclass, "$!pos", rx913_pos
    $P11 = rx913_cur."ws"()
    repr_get_attr_int $I11, $P11, rx913_curclass, "$!pos"
    lt $I11, 0, rx913_fail1972
    repr_get_attr_int rx913_pos, $P11, rx913_curclass, "$!pos"
    nqp_rxmark rx913_bstack, rxquantr918_done1983, -1, 0
  rxquantr918_loop1982:
    repr_bind_attr_int rx913_cur, rx913_curclass, "$!pos", rx913_pos
    $P11 = rx913_cur."ws"()
    repr_get_attr_int $I11, $P11, rx913_curclass, "$!pos"
    lt $I11, 0, rx913_fail1972
    repr_get_attr_int rx913_pos, $P11, rx913_curclass, "$!pos"
    repr_bind_attr_int rx913_cur, rx913_curclass, "$!pos", rx913_pos
    $P11 = rx913_cur."variable"()
    repr_get_attr_int $I11, $P11, rx913_curclass, "$!pos"
    lt $I11, 0, rx913_fail1972
    nqp_rxmark rx913_bstack, rxsubrule920_pass1985, -1, 0
  rxsubrule920_pass1985:
    rx913_cstack = rx913_cur."!cursor_capture"($P11, "variable")
    repr_get_attr_int rx913_pos, $P11, rx913_curclass, "$!pos"
    repr_bind_attr_int rx913_cur, rx913_curclass, "$!pos", rx913_pos
    $P11 = rx913_cur."ws"()
    repr_get_attr_int $I11, $P11, rx913_curclass, "$!pos"
    lt $I11, 0, rx913_fail1972
    repr_get_attr_int rx913_pos, $P11, rx913_curclass, "$!pos"
    nqp_rxpeek $I19, rx913_bstack, rxquantr918_done1983
    inc $I19
    inc $I19
    set rx913_rep, rx913_bstack[$I19]
    nqp_rxcommit rx913_bstack, rxquantr918_done1983
    inc rx913_rep
    nqp_rxmark rx913_bstack, rxquantr918_done1983, rx913_pos, rx913_rep
    repr_bind_attr_int rx913_cur, rx913_curclass, "$!pos", rx913_pos
    $P11 = rx913_cur."ws"()
    repr_get_attr_int $I11, $P11, rx913_curclass, "$!pos"
    lt $I11, 0, rx913_fail1972
    repr_get_attr_int rx913_pos, $P11, rx913_curclass, "$!pos"
    add $I11, rx913_pos, 1
    gt $I11, rx913_eos, rx913_fail1972
    substr $S10, rx913_tgt, rx913_pos, 1
    ne $S10, ucs4:",", rx913_fail1972
    add rx913_pos, 1
    repr_bind_attr_int rx913_cur, rx913_curclass, "$!pos", rx913_pos
    $P11 = rx913_cur."ws"()
    repr_get_attr_int $I11, $P11, rx913_curclass, "$!pos"
    lt $I11, 0, rx913_fail1972
    repr_get_attr_int rx913_pos, $P11, rx913_curclass, "$!pos"
    goto rxquantr918_loop1982
  rxquantr918_done1983:
    repr_bind_attr_int rx913_cur, rx913_curclass, "$!pos", rx913_pos
    $P11 = rx913_cur."ws"()
    repr_get_attr_int $I11, $P11, rx913_curclass, "$!pos"
    lt $I11, 0, rx913_fail1972
    repr_get_attr_int rx913_pos, $P11, rx913_curclass, "$!pos"
    rx913_cur."!cursor_pass"(rx913_pos, "role_params", 'backtrack'=>1)
    .return (rx913_cur)
  rx913_restart1971:
    repr_get_attr_obj rx913_cstack, rx913_cur, rx913_curclass, "$!cstack"
  rx913_fail1972:
    unless rx913_bstack, rx913_done1970
    pop $I19, rx913_bstack
    if_null rx913_cstack, rx913_cstack_done1975
    unless rx913_cstack, rx913_cstack_done1975
    dec $I19
    set $P11, rx913_cstack[$I19]
  rx913_cstack_done1975:
    pop rx913_rep, rx913_bstack
    pop rx913_pos, rx913_bstack
    pop $I19, rx913_bstack
    lt rx913_pos, -1, rx913_done1970
    lt rx913_pos, 0, rx913_fail1972
    eq $I19, 0, rx913_fail1972
    nqp_islist $I20, rx913_cstack
    unless $I20, rx913_jump1973
    elements $I18, rx913_bstack
    le $I18, 0, rx913_cut1974
    dec $I18
    set $I18, rx913_bstack[$I18]
  rx913_cut1974:
    assign rx913_cstack, $I18
  rx913_jump1973:
    jump $I19
  rx913_done1970:
    rx913_cur."!cursor_fail"()
    .return (rx913_cur) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator" :subid("cuid_111_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1058
    .param pmc self 
    $P5001 = self."!protoregex"("scope_declarator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<my>" :subid("cuid_112_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1059
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx925_start
    .local string rx925_tgt
    .local int rx925_pos
    .local int rx925_off
    .local int rx925_eos
    .local int rx925_rep
    .local pmc rx925_cur
    .local pmc rx925_curclass
    .local pmc rx925_bstack
    .local pmc rx925_cstack
    rx925_start = self."!cursor_start_all"()
    set rx925_cur, rx925_start[0]
    set rx925_tgt, rx925_start[1]
    set rx925_pos, rx925_start[2]
    set rx925_curclass, rx925_start[3]
    set rx925_bstack, rx925_start[4]
    set $I19, rx925_start[5]
    store_lex unicode:"$\x{a2}", rx925_cur
    length rx925_eos, rx925_tgt
    eq $I19, 1, rx925_restart1992
    gt rx925_pos, rx925_eos, rx925_fail1993
    repr_get_attr_int $I11, self, rx925_curclass, "$!from"
    ne $I11, -1, rxscan926_done1999
    goto rxscan926_scan1998
  rxscan926_loop1997:
    inc rx925_pos
    gt rx925_pos, rx925_eos, rx925_fail1993
    repr_bind_attr_int rx925_cur, rx925_curclass, "$!from", rx925_pos
  rxscan926_scan1998:
    nqp_rxmark rx925_bstack, rxscan926_loop1997, rx925_pos, 0
  rxscan926_done1999:
    nqp_rxmark rx925_bstack, rxcap927_fail2001, rx925_pos, 0
    add $I11, rx925_pos, 2
    gt $I11, rx925_eos, rx925_fail1993
    substr $S10, rx925_tgt, rx925_pos, 2
    ne $S10, ucs4:"my", rx925_fail1993
    add rx925_pos, 2
    nqp_rxpeek $I19, rx925_bstack, rxcap927_fail2001
    inc $I19
    set $I11, rx925_bstack[$I19]
    repr_bind_attr_int rx925_cur, rx925_curclass, "$!pos", rx925_pos
    $P11 = rx925_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx925_pos)
    rx925_cstack = rx925_cur."!cursor_capture"($P11, "sym")
    goto rxcap927_done2000
  rxcap927_fail2001:
    goto rx925_fail1993
  rxcap927_done2000:
    repr_bind_attr_int rx925_cur, rx925_curclass, "$!pos", rx925_pos
    $P11 = rx925_cur."scoped"("my")
    repr_get_attr_int $I11, $P11, rx925_curclass, "$!pos"
    lt $I11, 0, rx925_fail1993
    nqp_rxmark rx925_bstack, rxsubrule928_pass2002, -1, 0
  rxsubrule928_pass2002:
    rx925_cstack = rx925_cur."!cursor_capture"($P11, "scoped")
    repr_get_attr_int rx925_pos, $P11, rx925_curclass, "$!pos"
    rx925_cur."!cursor_pass"(rx925_pos, "scope_declarator:sym<my>", 'backtrack'=>1)
    .return (rx925_cur)
  rx925_restart1992:
    repr_get_attr_obj rx925_cstack, rx925_cur, rx925_curclass, "$!cstack"
  rx925_fail1993:
    unless rx925_bstack, rx925_done1991
    pop $I19, rx925_bstack
    if_null rx925_cstack, rx925_cstack_done1996
    unless rx925_cstack, rx925_cstack_done1996
    dec $I19
    set $P11, rx925_cstack[$I19]
  rx925_cstack_done1996:
    pop rx925_rep, rx925_bstack
    pop rx925_pos, rx925_bstack
    pop $I19, rx925_bstack
    lt rx925_pos, -1, rx925_done1991
    lt rx925_pos, 0, rx925_fail1993
    eq $I19, 0, rx925_fail1993
    nqp_islist $I20, rx925_cstack
    unless $I20, rx925_jump1994
    elements $I18, rx925_bstack
    le $I18, 0, rx925_cut1995
    dec $I18
    set $I18, rx925_bstack[$I18]
  rx925_cut1995:
    assign rx925_cstack, $I18
  rx925_jump1994:
    jump $I19
  rx925_done1991:
    rx925_cur."!cursor_fail"()
    .return (rx925_cur) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<our>" :subid("cuid_113_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1060
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx929_start
    .local string rx929_tgt
    .local int rx929_pos
    .local int rx929_off
    .local int rx929_eos
    .local int rx929_rep
    .local pmc rx929_cur
    .local pmc rx929_curclass
    .local pmc rx929_bstack
    .local pmc rx929_cstack
    rx929_start = self."!cursor_start_all"()
    set rx929_cur, rx929_start[0]
    set rx929_tgt, rx929_start[1]
    set rx929_pos, rx929_start[2]
    set rx929_curclass, rx929_start[3]
    set rx929_bstack, rx929_start[4]
    set $I19, rx929_start[5]
    store_lex unicode:"$\x{a2}", rx929_cur
    length rx929_eos, rx929_tgt
    eq $I19, 1, rx929_restart2005
    gt rx929_pos, rx929_eos, rx929_fail2006
    repr_get_attr_int $I11, self, rx929_curclass, "$!from"
    ne $I11, -1, rxscan930_done2012
    goto rxscan930_scan2011
  rxscan930_loop2010:
    inc rx929_pos
    gt rx929_pos, rx929_eos, rx929_fail2006
    repr_bind_attr_int rx929_cur, rx929_curclass, "$!from", rx929_pos
  rxscan930_scan2011:
    nqp_rxmark rx929_bstack, rxscan930_loop2010, rx929_pos, 0
  rxscan930_done2012:
    nqp_rxmark rx929_bstack, rxcap931_fail2014, rx929_pos, 0
    add $I11, rx929_pos, 3
    gt $I11, rx929_eos, rx929_fail2006
    substr $S10, rx929_tgt, rx929_pos, 3
    ne $S10, ucs4:"our", rx929_fail2006
    add rx929_pos, 3
    nqp_rxpeek $I19, rx929_bstack, rxcap931_fail2014
    inc $I19
    set $I11, rx929_bstack[$I19]
    repr_bind_attr_int rx929_cur, rx929_curclass, "$!pos", rx929_pos
    $P11 = rx929_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx929_pos)
    rx929_cstack = rx929_cur."!cursor_capture"($P11, "sym")
    goto rxcap931_done2013
  rxcap931_fail2014:
    goto rx929_fail2006
  rxcap931_done2013:
    repr_bind_attr_int rx929_cur, rx929_curclass, "$!pos", rx929_pos
    $P11 = rx929_cur."scoped"("our")
    repr_get_attr_int $I11, $P11, rx929_curclass, "$!pos"
    lt $I11, 0, rx929_fail2006
    nqp_rxmark rx929_bstack, rxsubrule932_pass2015, -1, 0
  rxsubrule932_pass2015:
    rx929_cstack = rx929_cur."!cursor_capture"($P11, "scoped")
    repr_get_attr_int rx929_pos, $P11, rx929_curclass, "$!pos"
    rx929_cur."!cursor_pass"(rx929_pos, "scope_declarator:sym<our>", 'backtrack'=>1)
    .return (rx929_cur)
  rx929_restart2005:
    repr_get_attr_obj rx929_cstack, rx929_cur, rx929_curclass, "$!cstack"
  rx929_fail2006:
    unless rx929_bstack, rx929_done2004
    pop $I19, rx929_bstack
    if_null rx929_cstack, rx929_cstack_done2009
    unless rx929_cstack, rx929_cstack_done2009
    dec $I19
    set $P11, rx929_cstack[$I19]
  rx929_cstack_done2009:
    pop rx929_rep, rx929_bstack
    pop rx929_pos, rx929_bstack
    pop $I19, rx929_bstack
    lt rx929_pos, -1, rx929_done2004
    lt rx929_pos, 0, rx929_fail2006
    eq $I19, 0, rx929_fail2006
    nqp_islist $I20, rx929_cstack
    unless $I20, rx929_jump2007
    elements $I18, rx929_bstack
    le $I18, 0, rx929_cut2008
    dec $I18
    set $I18, rx929_bstack[$I18]
  rx929_cut2008:
    assign rx929_cstack, $I18
  rx929_jump2007:
    jump $I19
  rx929_done2004:
    rx929_cur."!cursor_fail"()
    .return (rx929_cur) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<has>" :subid("cuid_114_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1061
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx933_start
    .local string rx933_tgt
    .local int rx933_pos
    .local int rx933_off
    .local int rx933_eos
    .local int rx933_rep
    .local pmc rx933_cur
    .local pmc rx933_curclass
    .local pmc rx933_bstack
    .local pmc rx933_cstack
    rx933_start = self."!cursor_start_all"()
    set rx933_cur, rx933_start[0]
    set rx933_tgt, rx933_start[1]
    set rx933_pos, rx933_start[2]
    set rx933_curclass, rx933_start[3]
    set rx933_bstack, rx933_start[4]
    set $I19, rx933_start[5]
    store_lex unicode:"$\x{a2}", rx933_cur
    length rx933_eos, rx933_tgt
    eq $I19, 1, rx933_restart2018
    gt rx933_pos, rx933_eos, rx933_fail2019
    repr_get_attr_int $I11, self, rx933_curclass, "$!from"
    ne $I11, -1, rxscan934_done2025
    goto rxscan934_scan2024
  rxscan934_loop2023:
    inc rx933_pos
    gt rx933_pos, rx933_eos, rx933_fail2019
    repr_bind_attr_int rx933_cur, rx933_curclass, "$!from", rx933_pos
  rxscan934_scan2024:
    nqp_rxmark rx933_bstack, rxscan934_loop2023, rx933_pos, 0
  rxscan934_done2025:
    nqp_rxmark rx933_bstack, rxcap935_fail2027, rx933_pos, 0
    add $I11, rx933_pos, 3
    gt $I11, rx933_eos, rx933_fail2019
    substr $S10, rx933_tgt, rx933_pos, 3
    ne $S10, ucs4:"has", rx933_fail2019
    add rx933_pos, 3
    nqp_rxpeek $I19, rx933_bstack, rxcap935_fail2027
    inc $I19
    set $I11, rx933_bstack[$I19]
    repr_bind_attr_int rx933_cur, rx933_curclass, "$!pos", rx933_pos
    $P11 = rx933_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx933_pos)
    rx933_cstack = rx933_cur."!cursor_capture"($P11, "sym")
    goto rxcap935_done2026
  rxcap935_fail2027:
    goto rx933_fail2019
  rxcap935_done2026:
    repr_bind_attr_int rx933_cur, rx933_curclass, "$!pos", rx933_pos
    $P11 = rx933_cur."scoped"("has")
    repr_get_attr_int $I11, $P11, rx933_curclass, "$!pos"
    lt $I11, 0, rx933_fail2019
    nqp_rxmark rx933_bstack, rxsubrule936_pass2028, -1, 0
  rxsubrule936_pass2028:
    rx933_cstack = rx933_cur."!cursor_capture"($P11, "scoped")
    repr_get_attr_int rx933_pos, $P11, rx933_curclass, "$!pos"
    rx933_cur."!cursor_pass"(rx933_pos, "scope_declarator:sym<has>", 'backtrack'=>1)
    .return (rx933_cur)
  rx933_restart2018:
    repr_get_attr_obj rx933_cstack, rx933_cur, rx933_curclass, "$!cstack"
  rx933_fail2019:
    unless rx933_bstack, rx933_done2017
    pop $I19, rx933_bstack
    if_null rx933_cstack, rx933_cstack_done2022
    unless rx933_cstack, rx933_cstack_done2022
    dec $I19
    set $P11, rx933_cstack[$I19]
  rx933_cstack_done2022:
    pop rx933_rep, rx933_bstack
    pop rx933_pos, rx933_bstack
    pop $I19, rx933_bstack
    lt rx933_pos, -1, rx933_done2017
    lt rx933_pos, 0, rx933_fail2019
    eq $I19, 0, rx933_fail2019
    nqp_islist $I20, rx933_cstack
    unless $I20, rx933_jump2020
    elements $I18, rx933_bstack
    le $I18, 0, rx933_cut2021
    dec $I18
    set $I18, rx933_bstack[$I18]
  rx933_cut2021:
    assign rx933_cstack, $I18
  rx933_jump2020:
    jump $I19
  rx933_done2017:
    rx933_cur."!cursor_fail"()
    .return (rx933_cur) 
.end
.HLL "nqp"
.namespace []
.sub "scoped" :subid("cuid_115_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1063
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .lex "$*SCOPE", _lex_param_1 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx937_start
    .local string rx937_tgt
    .local int rx937_pos
    .local int rx937_off
    .local int rx937_eos
    .local int rx937_rep
    .local pmc rx937_cur
    .local pmc rx937_curclass
    .local pmc rx937_bstack
    .local pmc rx937_cstack
    rx937_start = self."!cursor_start_all"()
    set rx937_cur, rx937_start[0]
    set rx937_tgt, rx937_start[1]
    set rx937_pos, rx937_start[2]
    set rx937_curclass, rx937_start[3]
    set rx937_bstack, rx937_start[4]
    set $I19, rx937_start[5]
    store_lex unicode:"$\x{a2}", rx937_cur
    length rx937_eos, rx937_tgt
    eq $I19, 1, rx937_restart2031
    gt rx937_pos, rx937_eos, rx937_fail2032
    repr_get_attr_int $I11, self, rx937_curclass, "$!from"
    ne $I11, -1, rxscan938_done2038
    goto rxscan938_scan2037
  rxscan938_loop2036:
    inc rx937_pos
    gt rx937_pos, rx937_eos, rx937_fail2032
    repr_bind_attr_int rx937_cur, rx937_curclass, "$!from", rx937_pos
  rxscan938_scan2037:
    nqp_rxmark rx937_bstack, rxscan938_loop2036, rx937_pos, 0
  rxscan938_done2038:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt939_02040
    nqp_push_label $P11, alt939_12044
    nqp_push_label $P11, alt939_22048
    nqp_rxmark rx937_bstack, alt939_end2039, -1, 0
    rx937_cur."!alt"(rx937_pos, "alt_nfa__21_1361734141.692", $P11)
    goto rx937_fail2032
  alt939_02040:
    repr_bind_attr_int rx937_cur, rx937_curclass, "$!pos", rx937_pos
    $P11 = rx937_cur."ws"()
    repr_get_attr_int $I11, $P11, rx937_curclass, "$!pos"
    lt $I11, 0, rx937_fail2032
    repr_get_attr_int rx937_pos, $P11, rx937_curclass, "$!pos"
    repr_bind_attr_int rx937_cur, rx937_curclass, "$!pos", rx937_pos
    $P11 = rx937_cur."declarator"()
    repr_get_attr_int $I11, $P11, rx937_curclass, "$!pos"
    lt $I11, 0, rx937_fail2032
    nqp_rxmark rx937_bstack, rxsubrule941_pass2042, -1, 0
  rxsubrule941_pass2042:
    rx937_cstack = rx937_cur."!cursor_capture"($P11, "declarator")
    repr_get_attr_int rx937_pos, $P11, rx937_curclass, "$!pos"
    repr_bind_attr_int rx937_cur, rx937_curclass, "$!pos", rx937_pos
    $P11 = rx937_cur."ws"()
    repr_get_attr_int $I11, $P11, rx937_curclass, "$!pos"
    lt $I11, 0, rx937_fail2032
    repr_get_attr_int rx937_pos, $P11, rx937_curclass, "$!pos"
    goto alt939_end2039
  alt939_12044:
    repr_bind_attr_int rx937_cur, rx937_curclass, "$!pos", rx937_pos
    $P11 = rx937_cur."ws"()
    repr_get_attr_int $I11, $P11, rx937_curclass, "$!pos"
    lt $I11, 0, rx937_fail2032
    repr_get_attr_int rx937_pos, $P11, rx937_curclass, "$!pos"
    repr_bind_attr_int rx937_cur, rx937_curclass, "$!pos", rx937_pos
    $P11 = rx937_cur."multi_declarator"()
    repr_get_attr_int $I11, $P11, rx937_curclass, "$!pos"
    lt $I11, 0, rx937_fail2032
    nqp_rxmark rx937_bstack, rxsubrule944_pass2046, -1, 0
  rxsubrule944_pass2046:
    rx937_cstack = rx937_cur."!cursor_capture"($P11, "multi_declarator")
    repr_get_attr_int rx937_pos, $P11, rx937_curclass, "$!pos"
    repr_bind_attr_int rx937_cur, rx937_curclass, "$!pos", rx937_pos
    $P11 = rx937_cur."ws"()
    repr_get_attr_int $I11, $P11, rx937_curclass, "$!pos"
    lt $I11, 0, rx937_fail2032
    repr_get_attr_int rx937_pos, $P11, rx937_curclass, "$!pos"
    goto alt939_end2039
  alt939_22048:
    repr_bind_attr_int rx937_cur, rx937_curclass, "$!pos", rx937_pos
    $P11 = rx937_cur."ws"()
    repr_get_attr_int $I11, $P11, rx937_curclass, "$!pos"
    lt $I11, 0, rx937_fail2032
    repr_get_attr_int rx937_pos, $P11, rx937_curclass, "$!pos"
    repr_bind_attr_int rx937_cur, rx937_curclass, "$!pos", rx937_pos
    $P11 = rx937_cur."package_declarator"()
    repr_get_attr_int $I11, $P11, rx937_curclass, "$!pos"
    lt $I11, 0, rx937_fail2032
    nqp_rxmark rx937_bstack, rxsubrule947_pass2050, -1, 0
  rxsubrule947_pass2050:
    rx937_cstack = rx937_cur."!cursor_capture"($P11, "package_declarator")
    repr_get_attr_int rx937_pos, $P11, rx937_curclass, "$!pos"
    repr_bind_attr_int rx937_cur, rx937_curclass, "$!pos", rx937_pos
    $P11 = rx937_cur."ws"()
    repr_get_attr_int $I11, $P11, rx937_curclass, "$!pos"
    lt $I11, 0, rx937_fail2032
    repr_get_attr_int rx937_pos, $P11, rx937_curclass, "$!pos"
    goto alt939_end2039
  alt939_end2039:
    rx937_cur."!cursor_pass"(rx937_pos, "scoped", 'backtrack'=>1)
    .return (rx937_cur)
  rx937_restart2031:
    repr_get_attr_obj rx937_cstack, rx937_cur, rx937_curclass, "$!cstack"
  rx937_fail2032:
    unless rx937_bstack, rx937_done2030
    pop $I19, rx937_bstack
    if_null rx937_cstack, rx937_cstack_done2035
    unless rx937_cstack, rx937_cstack_done2035
    dec $I19
    set $P11, rx937_cstack[$I19]
  rx937_cstack_done2035:
    pop rx937_rep, rx937_bstack
    pop rx937_pos, rx937_bstack
    pop $I19, rx937_bstack
    lt rx937_pos, -1, rx937_done2030
    lt rx937_pos, 0, rx937_fail2032
    eq $I19, 0, rx937_fail2032
    nqp_islist $I20, rx937_cstack
    unless $I20, rx937_jump2033
    elements $I18, rx937_bstack
    le $I18, 0, rx937_cut2034
    dec $I18
    set $I18, rx937_bstack[$I18]
  rx937_cut2034:
    assign rx937_cstack, $I18
  rx937_jump2033:
    jump $I19
  rx937_done2030:
    rx937_cur."!cursor_fail"()
    .return (rx937_cur) 
.end
.HLL "nqp"
.namespace []
.sub "typename" :subid("cuid_116_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1069
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_405_1361734139.417' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx949_start
    .local string rx949_tgt
    .local int rx949_pos
    .local int rx949_off
    .local int rx949_eos
    .local int rx949_rep
    .local pmc rx949_cur
    .local pmc rx949_curclass
    .local pmc rx949_bstack
    .local pmc rx949_cstack
    rx949_start = self."!cursor_start_all"()
    set rx949_cur, rx949_start[0]
    set rx949_tgt, rx949_start[1]
    set rx949_pos, rx949_start[2]
    set rx949_curclass, rx949_start[3]
    set rx949_bstack, rx949_start[4]
    set $I19, rx949_start[5]
    store_lex unicode:"$\x{a2}", rx949_cur
    length rx949_eos, rx949_tgt
    eq $I19, 1, rx949_restart2054
    gt rx949_pos, rx949_eos, rx949_fail2055
    repr_get_attr_int $I11, self, rx949_curclass, "$!from"
    ne $I11, -1, rxscan950_done2061
    goto rxscan950_scan2060
  rxscan950_loop2059:
    inc rx949_pos
    gt rx949_pos, rx949_eos, rx949_fail2055
    repr_bind_attr_int rx949_cur, rx949_curclass, "$!from", rx949_pos
  rxscan950_scan2060:
    nqp_rxmark rx949_bstack, rxscan950_loop2059, rx949_pos, 0
  rxscan950_done2061:
    repr_bind_attr_int rx949_cur, rx949_curclass, "$!pos", rx949_pos
    $P11 = rx949_cur."name"()
    repr_get_attr_int $I11, $P11, rx949_curclass, "$!pos"
    lt $I11, 0, rx949_fail2055
    nqp_rxmark rx949_bstack, rxsubrule951_pass2062, -1, 0
  rxsubrule951_pass2062:
    rx949_cstack = rx949_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx949_pos, $P11, rx949_curclass, "$!pos"
    repr_bind_attr_int rx949_cur, rx949_curclass, "$!pos", rx949_pos
    store_lex unicode:"$\x{a2}", rx949_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_405_1361734139.417' 
    capture_lex $P5002
    $P5003 = $P5002()
    unless $P5003, rx949_fail2055
    rx949_cur."!cursor_pass"(rx949_pos, "typename", 'backtrack'=>1)
    .return (rx949_cur)
  rx949_restart2054:
    repr_get_attr_obj rx949_cstack, rx949_cur, rx949_curclass, "$!cstack"
  rx949_fail2055:
    unless rx949_bstack, rx949_done2053
    pop $I19, rx949_bstack
    if_null rx949_cstack, rx949_cstack_done2058
    unless rx949_cstack, rx949_cstack_done2058
    dec $I19
    set $P11, rx949_cstack[$I19]
  rx949_cstack_done2058:
    pop rx949_rep, rx949_bstack
    pop rx949_pos, rx949_bstack
    pop $I19, rx949_bstack
    lt rx949_pos, -1, rx949_done2053
    lt rx949_pos, 0, rx949_fail2055
    eq $I19, 0, rx949_fail2055
    nqp_islist $I20, rx949_cstack
    unless $I20, rx949_jump2056
    elements $I18, rx949_bstack
    le $I18, 0, rx949_cut2057
    dec $I18
    set $I18, rx949_bstack[$I18]
  rx949_cut2057:
    assign rx949_cstack, $I18
  rx949_jump2056:
    jump $I19
  rx949_done2053:
    rx949_cur."!cursor_fail"()
    .return (rx949_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_405_1361734139.417") :anon :lex :outer("cuid_116_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1071
    .local pmc fb_tmp_144 
    .local pmc fb_tmp_145 
    .local pmc fb_tmp_146 
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback2063
    nqp_get_sc_object $P5003, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5002, $P5003
    set fb_tmp_144, $P5002
    repr_defined $I5001, fb_tmp_144
    unless $I5001 goto if952_else2064 
    set $P5004, fb_tmp_144["$W"]
    set $P5006, $P5004
    goto if952_end2065
  if952_else2064:
    null $P5005
    set $P5006, $P5005
  if952_end2065:
    unless_null $P5006, vivi_9532066
    nqp_get_sc_object $P5007, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5006, $P5007
  vivi_9532066:
    unless_null $P5006, vivi_9542067
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_9542067:
    set $P5001, $P5006
  fallback2063:
    find_lex $P5009, "$/"
    find_lex $P5010, "$/"
    unless_null $P5010, fallback2072
    nqp_get_sc_object $P5011, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5010, $P5011
  fallback2072:
    set fb_tmp_146, $P5010
    repr_defined $I5003, fb_tmp_146
    unless $I5003 goto if956_else2070 
    set $P5012, fb_tmp_146["name"]
    set $P5014, $P5012
    goto if956_end2071
  if956_else2070:
    null $P5013
    set $P5014, $P5013
  if956_end2071:
    unless_null $P5014, vivi_9572073
    nqp_get_sc_object $P5015, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5014, $P5015
  vivi_9572073:
    set fb_tmp_145, $P5014
    repr_defined $I5002, fb_tmp_145
    unless $I5002 goto if955_else2068 
    set $P5016, fb_tmp_145["identifier"]
    set $P5018, $P5016
    goto if955_end2069
  if955_else2068:
    null $P5017
    set $P5018, $P5017
  if955_end2069:
    unless_null $P5018, vivi_9582074
    nqp_get_sc_object $P5019, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5018, $P5019
  vivi_9582074:
    $P5020 = $P5001."known_sym"($P5009, $P5018)
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "declarator" :subid("cuid_117_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1074
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx959_start
    .local string rx959_tgt
    .local int rx959_pos
    .local int rx959_off
    .local int rx959_eos
    .local int rx959_rep
    .local pmc rx959_cur
    .local pmc rx959_curclass
    .local pmc rx959_bstack
    .local pmc rx959_cstack
    rx959_start = self."!cursor_start_all"()
    set rx959_cur, rx959_start[0]
    set rx959_tgt, rx959_start[1]
    set rx959_pos, rx959_start[2]
    set rx959_curclass, rx959_start[3]
    set rx959_bstack, rx959_start[4]
    set $I19, rx959_start[5]
    store_lex unicode:"$\x{a2}", rx959_cur
    length rx959_eos, rx959_tgt
    eq $I19, 1, rx959_restart2077
    gt rx959_pos, rx959_eos, rx959_fail2078
    repr_get_attr_int $I11, self, rx959_curclass, "$!from"
    ne $I11, -1, rxscan960_done2084
    goto rxscan960_scan2083
  rxscan960_loop2082:
    inc rx959_pos
    gt rx959_pos, rx959_eos, rx959_fail2078
    repr_bind_attr_int rx959_cur, rx959_curclass, "$!from", rx959_pos
  rxscan960_scan2083:
    nqp_rxmark rx959_bstack, rxscan960_loop2082, rx959_pos, 0
  rxscan960_done2084:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt961_02086
    nqp_push_label $P11, alt961_12088
    nqp_rxmark rx959_bstack, alt961_end2085, -1, 0
    rx959_cur."!alt"(rx959_pos, "alt_nfa__22_1361734141.707", $P11)
    goto rx959_fail2078
  alt961_02086:
    repr_bind_attr_int rx959_cur, rx959_curclass, "$!pos", rx959_pos
    $P11 = rx959_cur."variable_declarator"()
    repr_get_attr_int $I11, $P11, rx959_curclass, "$!pos"
    lt $I11, 0, rx959_fail2078
    nqp_rxmark rx959_bstack, rxsubrule962_pass2087, -1, 0
  rxsubrule962_pass2087:
    rx959_cstack = rx959_cur."!cursor_capture"($P11, "variable_declarator")
    repr_get_attr_int rx959_pos, $P11, rx959_curclass, "$!pos"
    goto alt961_end2085
  alt961_12088:
    repr_bind_attr_int rx959_cur, rx959_curclass, "$!pos", rx959_pos
    $P11 = rx959_cur."routine_declarator"()
    repr_get_attr_int $I11, $P11, rx959_curclass, "$!pos"
    lt $I11, 0, rx959_fail2078
    nqp_rxmark rx959_bstack, rxsubrule963_pass2089, -1, 0
  rxsubrule963_pass2089:
    rx959_cstack = rx959_cur."!cursor_capture"($P11, "routine_declarator")
    repr_get_attr_int rx959_pos, $P11, rx959_curclass, "$!pos"
    goto alt961_end2085
  alt961_end2085:
    rx959_cur."!cursor_pass"(rx959_pos, "declarator", 'backtrack'=>1)
    .return (rx959_cur)
  rx959_restart2077:
    repr_get_attr_obj rx959_cstack, rx959_cur, rx959_curclass, "$!cstack"
  rx959_fail2078:
    unless rx959_bstack, rx959_done2076
    pop $I19, rx959_bstack
    if_null rx959_cstack, rx959_cstack_done2081
    unless rx959_cstack, rx959_cstack_done2081
    dec $I19
    set $P11, rx959_cstack[$I19]
  rx959_cstack_done2081:
    pop rx959_rep, rx959_bstack
    pop rx959_pos, rx959_bstack
    pop $I19, rx959_bstack
    lt rx959_pos, -1, rx959_done2076
    lt rx959_pos, 0, rx959_fail2078
    eq $I19, 0, rx959_fail2078
    nqp_islist $I20, rx959_cstack
    unless $I20, rx959_jump2079
    elements $I18, rx959_bstack
    le $I18, 0, rx959_cut2080
    dec $I18
    set $I18, rx959_bstack[$I18]
  rx959_cut2080:
    assign rx959_cstack, $I18
  rx959_jump2079:
    jump $I19
  rx959_done2076:
    rx959_cur."!cursor_fail"()
    .return (rx959_cur) 
.end
.HLL "nqp"
.namespace []
.sub "variable_declarator" :subid("cuid_118_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1079
    .param pmc _lex_param_0 
    .const 'Sub' $P5006 = 'cuid_406_1361734139.417' 
    capture_lex $P5006 
    .lex "$*IN_DECL", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx964_start
    .local string rx964_tgt
    .local int rx964_pos
    .local int rx964_off
    .local int rx964_eos
    .local int rx964_rep
    .local pmc rx964_cur
    .local pmc rx964_curclass
    .local pmc rx964_bstack
    .local pmc rx964_cstack
    rx964_start = self."!cursor_start_all"()
    set rx964_cur, rx964_start[0]
    set rx964_tgt, rx964_start[1]
    set rx964_pos, rx964_start[2]
    set rx964_curclass, rx964_start[3]
    set rx964_bstack, rx964_start[4]
    set $I19, rx964_start[5]
    store_lex unicode:"$\x{a2}", rx964_cur
    length rx964_eos, rx964_tgt
    eq $I19, 1, rx964_restart2092
    gt rx964_pos, rx964_eos, rx964_fail2093
    repr_get_attr_int $I11, self, rx964_curclass, "$!from"
    ne $I11, -1, rxscan965_done2099
    goto rxscan965_scan2098
  rxscan965_loop2097:
    inc rx964_pos
    gt rx964_pos, rx964_eos, rx964_fail2093
    repr_bind_attr_int rx964_cur, rx964_curclass, "$!from", rx964_pos
  rxscan965_scan2098:
    nqp_rxmark rx964_bstack, rxscan965_loop2097, rx964_pos, 0
  rxscan965_done2099:
    repr_bind_attr_int rx964_cur, rx964_curclass, "$!pos", rx964_pos
    $P11 = rx964_cur."ws"()
    repr_get_attr_int $I11, $P11, rx964_curclass, "$!pos"
    lt $I11, 0, rx964_fail2093
    repr_get_attr_int rx964_pos, $P11, rx964_curclass, "$!pos"
    nqp_rxmark rx964_bstack, rxquantr967_done2102, rx964_pos, 0
  rxquantr967_loop2101:
    repr_bind_attr_int rx964_cur, rx964_curclass, "$!pos", rx964_pos
    $P11 = rx964_cur."typename"()
    repr_get_attr_int $I11, $P11, rx964_curclass, "$!pos"
    lt $I11, 0, rx964_fail2093
    goto rxsubrule968_pass2103
  rxsubrule968_back2104:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx964_curclass, "$!pos"
    lt $I11, 0, rx964_fail2093
  rxsubrule968_pass2103:
    rx964_cstack = rx964_cur."!cursor_capture"($P11, "typename")
    set_addr $I11, rxsubrule968_back2104
    push rx964_bstack, $I11
    push rx964_bstack, 0
    push rx964_bstack, rx964_pos
    elements $I11, rx964_cstack
    push rx964_bstack, $I11
    repr_get_attr_int rx964_pos, $P11, rx964_curclass, "$!pos"
    nqp_rxpeek $I19, rx964_bstack, rxquantr967_done2102
    inc $I19
    inc $I19
    set rx964_rep, rx964_bstack[$I19]
    nqp_rxcommit rx964_bstack, rxquantr967_done2102
    inc rx964_rep
  rxquantr967_done2102:
    repr_bind_attr_int rx964_cur, rx964_curclass, "$!pos", rx964_pos
    $P11 = rx964_cur."ws"()
    repr_get_attr_int $I11, $P11, rx964_curclass, "$!pos"
    lt $I11, 0, rx964_fail2093
    repr_get_attr_int rx964_pos, $P11, rx964_curclass, "$!pos"
    repr_bind_attr_int rx964_cur, rx964_curclass, "$!pos", rx964_pos
    store_lex unicode:"$\x{a2}", rx964_cur
    box $P5002, "variable"
    set $P101, $P5002
    repr_bind_attr_int rx964_cur, rx964_curclass, "$!pos", rx964_pos
    $P11 = rx964_cur."ws"()
    repr_get_attr_int $I11, $P11, rx964_curclass, "$!pos"
    lt $I11, 0, rx964_fail2093
    repr_get_attr_int rx964_pos, $P11, rx964_curclass, "$!pos"
    repr_bind_attr_int rx964_cur, rx964_curclass, "$!pos", rx964_pos
    $P11 = rx964_cur."variable"()
    repr_get_attr_int $I11, $P11, rx964_curclass, "$!pos"
    lt $I11, 0, rx964_fail2093
    nqp_rxmark rx964_bstack, rxsubrule971_pass2107, -1, 0
  rxsubrule971_pass2107:
    rx964_cstack = rx964_cur."!cursor_capture"($P11, "variable")
    repr_get_attr_int rx964_pos, $P11, rx964_curclass, "$!pos"
    repr_bind_attr_int rx964_cur, rx964_curclass, "$!pos", rx964_pos
    $P11 = rx964_cur."ws"()
    repr_get_attr_int $I11, $P11, rx964_curclass, "$!pos"
    lt $I11, 0, rx964_fail2093
    repr_get_attr_int rx964_pos, $P11, rx964_curclass, "$!pos"
    repr_bind_attr_int rx964_cur, rx964_curclass, "$!pos", rx964_pos
    store_lex unicode:"$\x{a2}", rx964_cur
    $P5003 = $P102."MATCH"()
    set $P103, $P5003
    .const 'Sub' $P5004 = 'cuid_406_1361734139.417' 
    capture_lex $P5004
    $P5005 = $P5004()
    repr_bind_attr_int rx964_cur, rx964_curclass, "$!pos", rx964_pos
    $P11 = rx964_cur."ws"()
    repr_get_attr_int $I11, $P11, rx964_curclass, "$!pos"
    lt $I11, 0, rx964_fail2093
    repr_get_attr_int rx964_pos, $P11, rx964_curclass, "$!pos"
    nqp_rxmark rx964_bstack, rxquantr974_done2111, rx964_pos, 0
  rxquantr974_loop2110:
    repr_bind_attr_int rx964_cur, rx964_curclass, "$!pos", rx964_pos
    $P11 = rx964_cur."trait"()
    repr_get_attr_int $I11, $P11, rx964_curclass, "$!pos"
    lt $I11, 0, rx964_fail2093
    goto rxsubrule975_pass2112
  rxsubrule975_back2113:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx964_curclass, "$!pos"
    lt $I11, 0, rx964_fail2093
  rxsubrule975_pass2112:
    rx964_cstack = rx964_cur."!cursor_capture"($P11, "trait")
    set_addr $I11, rxsubrule975_back2113
    push rx964_bstack, $I11
    push rx964_bstack, 0
    push rx964_bstack, rx964_pos
    elements $I11, rx964_cstack
    push rx964_bstack, $I11
    repr_get_attr_int rx964_pos, $P11, rx964_curclass, "$!pos"
    nqp_rxpeek $I19, rx964_bstack, rxquantr974_done2111
    inc $I19
    inc $I19
    set rx964_rep, rx964_bstack[$I19]
    nqp_rxcommit rx964_bstack, rxquantr974_done2111
    inc rx964_rep
    nqp_rxmark rx964_bstack, rxquantr974_done2111, rx964_pos, rx964_rep
    goto rxquantr974_loop2110
  rxquantr974_done2111:
    repr_bind_attr_int rx964_cur, rx964_curclass, "$!pos", rx964_pos
    $P11 = rx964_cur."ws"()
    repr_get_attr_int $I11, $P11, rx964_curclass, "$!pos"
    lt $I11, 0, rx964_fail2093
    repr_get_attr_int rx964_pos, $P11, rx964_curclass, "$!pos"
    rx964_cur."!cursor_pass"(rx964_pos, "variable_declarator", 'backtrack'=>1)
    .return (rx964_cur)
  rx964_restart2092:
    repr_get_attr_obj rx964_cstack, rx964_cur, rx964_curclass, "$!cstack"
  rx964_fail2093:
    unless rx964_bstack, rx964_done2091
    pop $I19, rx964_bstack
    if_null rx964_cstack, rx964_cstack_done2096
    unless rx964_cstack, rx964_cstack_done2096
    dec $I19
    set $P11, rx964_cstack[$I19]
  rx964_cstack_done2096:
    pop rx964_rep, rx964_bstack
    pop rx964_pos, rx964_bstack
    pop $I19, rx964_bstack
    lt rx964_pos, -1, rx964_done2091
    lt rx964_pos, 0, rx964_fail2093
    eq $I19, 0, rx964_fail2093
    nqp_islist $I20, rx964_cstack
    unless $I20, rx964_jump2094
    elements $I18, rx964_bstack
    le $I18, 0, rx964_cut2095
    dec $I18
    set $I18, rx964_bstack[$I18]
  rx964_cut2095:
    assign rx964_cstack, $I18
  rx964_jump2094:
    jump $I19
  rx964_done2091:
    rx964_cur."!cursor_fail"()
    .return (rx964_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_406_1361734139.417") :anon :lex :outer("cuid_118_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1083

    box $P5001, 0
    store_dynamic_lex "$*IN_DECL", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator" :subid("cuid_119_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1087
    .param pmc self 
    $P5001 = self."!protoregex"("routine_declarator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator:sym<sub>" :subid("cuid_120_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1088
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx977_start
    .local string rx977_tgt
    .local int rx977_pos
    .local int rx977_off
    .local int rx977_eos
    .local int rx977_rep
    .local pmc rx977_cur
    .local pmc rx977_curclass
    .local pmc rx977_bstack
    .local pmc rx977_cstack
    rx977_start = self."!cursor_start_all"()
    set rx977_cur, rx977_start[0]
    set rx977_tgt, rx977_start[1]
    set rx977_pos, rx977_start[2]
    set rx977_curclass, rx977_start[3]
    set rx977_bstack, rx977_start[4]
    set $I19, rx977_start[5]
    store_lex unicode:"$\x{a2}", rx977_cur
    length rx977_eos, rx977_tgt
    eq $I19, 1, rx977_restart2117
    gt rx977_pos, rx977_eos, rx977_fail2118
    repr_get_attr_int $I11, self, rx977_curclass, "$!from"
    ne $I11, -1, rxscan978_done2124
    goto rxscan978_scan2123
  rxscan978_loop2122:
    inc rx977_pos
    gt rx977_pos, rx977_eos, rx977_fail2118
    repr_bind_attr_int rx977_cur, rx977_curclass, "$!from", rx977_pos
  rxscan978_scan2123:
    nqp_rxmark rx977_bstack, rxscan978_loop2122, rx977_pos, 0
  rxscan978_done2124:
    nqp_rxmark rx977_bstack, rxcap979_fail2126, rx977_pos, 0
    add $I11, rx977_pos, 3
    gt $I11, rx977_eos, rx977_fail2118
    substr $S10, rx977_tgt, rx977_pos, 3
    ne $S10, ucs4:"sub", rx977_fail2118
    add rx977_pos, 3
    nqp_rxpeek $I19, rx977_bstack, rxcap979_fail2126
    inc $I19
    set $I11, rx977_bstack[$I19]
    repr_bind_attr_int rx977_cur, rx977_curclass, "$!pos", rx977_pos
    $P11 = rx977_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx977_pos)
    rx977_cstack = rx977_cur."!cursor_capture"($P11, "sym")
    goto rxcap979_done2125
  rxcap979_fail2126:
    goto rx977_fail2118
  rxcap979_done2125:
    repr_bind_attr_int rx977_cur, rx977_curclass, "$!pos", rx977_pos
    $P11 = rx977_cur."routine_def"()
    repr_get_attr_int $I11, $P11, rx977_curclass, "$!pos"
    lt $I11, 0, rx977_fail2118
    nqp_rxmark rx977_bstack, rxsubrule980_pass2127, -1, 0
  rxsubrule980_pass2127:
    rx977_cstack = rx977_cur."!cursor_capture"($P11, "routine_def")
    repr_get_attr_int rx977_pos, $P11, rx977_curclass, "$!pos"
    rx977_cur."!cursor_pass"(rx977_pos, "routine_declarator:sym<sub>", 'backtrack'=>1)
    .return (rx977_cur)
  rx977_restart2117:
    repr_get_attr_obj rx977_cstack, rx977_cur, rx977_curclass, "$!cstack"
  rx977_fail2118:
    unless rx977_bstack, rx977_done2116
    pop $I19, rx977_bstack
    if_null rx977_cstack, rx977_cstack_done2121
    unless rx977_cstack, rx977_cstack_done2121
    dec $I19
    set $P11, rx977_cstack[$I19]
  rx977_cstack_done2121:
    pop rx977_rep, rx977_bstack
    pop rx977_pos, rx977_bstack
    pop $I19, rx977_bstack
    lt rx977_pos, -1, rx977_done2116
    lt rx977_pos, 0, rx977_fail2118
    eq $I19, 0, rx977_fail2118
    nqp_islist $I20, rx977_cstack
    unless $I20, rx977_jump2119
    elements $I18, rx977_bstack
    le $I18, 0, rx977_cut2120
    dec $I18
    set $I18, rx977_bstack[$I18]
  rx977_cut2120:
    assign rx977_cstack, $I18
  rx977_jump2119:
    jump $I19
  rx977_done2116:
    rx977_cur."!cursor_fail"()
    .return (rx977_cur) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator:sym<method>" :subid("cuid_121_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1089
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx981_start
    .local string rx981_tgt
    .local int rx981_pos
    .local int rx981_off
    .local int rx981_eos
    .local int rx981_rep
    .local pmc rx981_cur
    .local pmc rx981_curclass
    .local pmc rx981_bstack
    .local pmc rx981_cstack
    rx981_start = self."!cursor_start_all"()
    set rx981_cur, rx981_start[0]
    set rx981_tgt, rx981_start[1]
    set rx981_pos, rx981_start[2]
    set rx981_curclass, rx981_start[3]
    set rx981_bstack, rx981_start[4]
    set $I19, rx981_start[5]
    store_lex unicode:"$\x{a2}", rx981_cur
    length rx981_eos, rx981_tgt
    eq $I19, 1, rx981_restart2130
    gt rx981_pos, rx981_eos, rx981_fail2131
    repr_get_attr_int $I11, self, rx981_curclass, "$!from"
    ne $I11, -1, rxscan982_done2137
    goto rxscan982_scan2136
  rxscan982_loop2135:
    inc rx981_pos
    gt rx981_pos, rx981_eos, rx981_fail2131
    repr_bind_attr_int rx981_cur, rx981_curclass, "$!from", rx981_pos
  rxscan982_scan2136:
    nqp_rxmark rx981_bstack, rxscan982_loop2135, rx981_pos, 0
  rxscan982_done2137:
    nqp_rxmark rx981_bstack, rxcap983_fail2139, rx981_pos, 0
    add $I11, rx981_pos, 6
    gt $I11, rx981_eos, rx981_fail2131
    substr $S10, rx981_tgt, rx981_pos, 6
    ne $S10, ucs4:"method", rx981_fail2131
    add rx981_pos, 6
    nqp_rxpeek $I19, rx981_bstack, rxcap983_fail2139
    inc $I19
    set $I11, rx981_bstack[$I19]
    repr_bind_attr_int rx981_cur, rx981_curclass, "$!pos", rx981_pos
    $P11 = rx981_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx981_pos)
    rx981_cstack = rx981_cur."!cursor_capture"($P11, "sym")
    goto rxcap983_done2138
  rxcap983_fail2139:
    goto rx981_fail2131
  rxcap983_done2138:
    repr_bind_attr_int rx981_cur, rx981_curclass, "$!pos", rx981_pos
    $P11 = rx981_cur."method_def"()
    repr_get_attr_int $I11, $P11, rx981_curclass, "$!pos"
    lt $I11, 0, rx981_fail2131
    nqp_rxmark rx981_bstack, rxsubrule984_pass2140, -1, 0
  rxsubrule984_pass2140:
    rx981_cstack = rx981_cur."!cursor_capture"($P11, "method_def")
    repr_get_attr_int rx981_pos, $P11, rx981_curclass, "$!pos"
    rx981_cur."!cursor_pass"(rx981_pos, "routine_declarator:sym<method>", 'backtrack'=>1)
    .return (rx981_cur)
  rx981_restart2130:
    repr_get_attr_obj rx981_cstack, rx981_cur, rx981_curclass, "$!cstack"
  rx981_fail2131:
    unless rx981_bstack, rx981_done2129
    pop $I19, rx981_bstack
    if_null rx981_cstack, rx981_cstack_done2134
    unless rx981_cstack, rx981_cstack_done2134
    dec $I19
    set $P11, rx981_cstack[$I19]
  rx981_cstack_done2134:
    pop rx981_rep, rx981_bstack
    pop rx981_pos, rx981_bstack
    pop $I19, rx981_bstack
    lt rx981_pos, -1, rx981_done2129
    lt rx981_pos, 0, rx981_fail2131
    eq $I19, 0, rx981_fail2131
    nqp_islist $I20, rx981_cstack
    unless $I20, rx981_jump2132
    elements $I18, rx981_bstack
    le $I18, 0, rx981_cut2133
    dec $I18
    set $I18, rx981_bstack[$I18]
  rx981_cut2133:
    assign rx981_cstack, $I18
  rx981_jump2132:
    jump $I19
  rx981_done2129:
    rx981_cur."!cursor_fail"()
    .return (rx981_cur) 
.end
.HLL "nqp"
.namespace []
.sub "routine_def" :subid("cuid_122_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1091
    .param pmc _lex_param_0 
    .lex "$*RETURN_USED", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx985_start
    .local string rx985_tgt
    .local int rx985_pos
    .local int rx985_off
    .local int rx985_eos
    .local int rx985_rep
    .local pmc rx985_cur
    .local pmc rx985_curclass
    .local pmc rx985_bstack
    .local pmc rx985_cstack
    rx985_start = self."!cursor_start_all"()
    set rx985_cur, rx985_start[0]
    set rx985_tgt, rx985_start[1]
    set rx985_pos, rx985_start[2]
    set rx985_curclass, rx985_start[3]
    set rx985_bstack, rx985_start[4]
    set $I19, rx985_start[5]
    store_lex unicode:"$\x{a2}", rx985_cur
    length rx985_eos, rx985_tgt
    eq $I19, 1, rx985_restart2143
    gt rx985_pos, rx985_eos, rx985_fail2144
    repr_get_attr_int $I11, self, rx985_curclass, "$!from"
    ne $I11, -1, rxscan986_done2150
    goto rxscan986_scan2149
  rxscan986_loop2148:
    inc rx985_pos
    gt rx985_pos, rx985_eos, rx985_fail2144
    repr_bind_attr_int rx985_cur, rx985_curclass, "$!from", rx985_pos
  rxscan986_scan2149:
    nqp_rxmark rx985_bstack, rxscan986_loop2148, rx985_pos, 0
  rxscan986_done2150:
    repr_bind_attr_int rx985_cur, rx985_curclass, "$!pos", rx985_pos
    $P11 = rx985_cur."ws"()
    repr_get_attr_int $I11, $P11, rx985_curclass, "$!pos"
    lt $I11, 0, rx985_fail2144
    repr_get_attr_int rx985_pos, $P11, rx985_curclass, "$!pos"
    repr_bind_attr_int rx985_cur, rx985_curclass, "$!pos", rx985_pos
    store_lex unicode:"$\x{a2}", rx985_cur
    box $P5002, 0
    set $P101, $P5002
    repr_bind_attr_int rx985_cur, rx985_curclass, "$!pos", rx985_pos
    $P11 = rx985_cur."ws"()
    repr_get_attr_int $I11, $P11, rx985_curclass, "$!pos"
    lt $I11, 0, rx985_fail2144
    repr_get_attr_int rx985_pos, $P11, rx985_curclass, "$!pos"
    nqp_rxmark rx985_bstack, rxquantr989_done2154, rx985_pos, 0
  rxquantr989_loop2153:
    repr_bind_attr_int rx985_cur, rx985_curclass, "$!pos", rx985_pos
    $P11 = rx985_cur."ws"()
    repr_get_attr_int $I11, $P11, rx985_curclass, "$!pos"
    lt $I11, 0, rx985_fail2144
    repr_get_attr_int rx985_pos, $P11, rx985_curclass, "$!pos"
    nqp_rxmark rx985_bstack, rxcap991_fail2157, rx985_pos, 0
    nqp_rxmark rx985_bstack, rxquantr992_done2159, rx985_pos, 0
  rxquantr992_loop2158:
    add $I11, rx985_pos, 1
    gt $I11, rx985_eos, rx985_fail2144
    substr $S10, rx985_tgt, rx985_pos, 1
    ne $S10, ucs4:"&", rx985_fail2144
    add rx985_pos, 1
    nqp_rxpeek $I19, rx985_bstack, rxquantr992_done2159
    inc $I19
    inc $I19
    set rx985_rep, rx985_bstack[$I19]
    nqp_rxcommit rx985_bstack, rxquantr992_done2159
    inc rx985_rep
  rxquantr992_done2159:
    nqp_rxpeek $I19, rx985_bstack, rxcap991_fail2157
    inc $I19
    set $I11, rx985_bstack[$I19]
    repr_bind_attr_int rx985_cur, rx985_curclass, "$!pos", rx985_pos
    $P11 = rx985_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx985_pos)
    rx985_cstack = rx985_cur."!cursor_capture"($P11, "sigil")
    goto rxcap991_done2156
  rxcap991_fail2157:
    goto rx985_fail2144
  rxcap991_done2156:
    repr_bind_attr_int rx985_cur, rx985_curclass, "$!pos", rx985_pos
    $P11 = rx985_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx985_curclass, "$!pos"
    lt $I11, 0, rx985_fail2144
    nqp_rxmark rx985_bstack, rxsubrule993_pass2160, -1, 0
  rxsubrule993_pass2160:
    rx985_cstack = rx985_cur."!cursor_capture"($P11, "deflongname")
    repr_get_attr_int rx985_pos, $P11, rx985_curclass, "$!pos"
    repr_bind_attr_int rx985_cur, rx985_curclass, "$!pos", rx985_pos
    $P11 = rx985_cur."ws"()
    repr_get_attr_int $I11, $P11, rx985_curclass, "$!pos"
    lt $I11, 0, rx985_fail2144
    repr_get_attr_int rx985_pos, $P11, rx985_curclass, "$!pos"
    nqp_rxpeek $I19, rx985_bstack, rxquantr989_done2154
    inc $I19
    inc $I19
    set rx985_rep, rx985_bstack[$I19]
    nqp_rxcommit rx985_bstack, rxquantr989_done2154
    inc rx985_rep
  rxquantr989_done2154:
    repr_bind_attr_int rx985_cur, rx985_curclass, "$!pos", rx985_pos
    $P11 = rx985_cur."ws"()
    repr_get_attr_int $I11, $P11, rx985_curclass, "$!pos"
    lt $I11, 0, rx985_fail2144
    repr_get_attr_int rx985_pos, $P11, rx985_curclass, "$!pos"
    repr_bind_attr_int rx985_cur, rx985_curclass, "$!pos", rx985_pos
    $P11 = rx985_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx985_curclass, "$!pos"
    lt $I11, 0, rx985_fail2144
    repr_get_attr_int rx985_pos, $P11, rx985_curclass, "$!pos"
    repr_bind_attr_int rx985_cur, rx985_curclass, "$!pos", rx985_pos
    $P11 = rx985_cur."ws"()
    repr_get_attr_int $I11, $P11, rx985_curclass, "$!pos"
    lt $I11, 0, rx985_fail2144
    repr_get_attr_int rx985_pos, $P11, rx985_curclass, "$!pos"
  alt998_02166:
    nqp_rxmark rx985_bstack, alt998_12172, rx985_pos, 0
    repr_bind_attr_int rx985_cur, rx985_curclass, "$!pos", rx985_pos
    $P11 = rx985_cur."ws"()
    repr_get_attr_int $I11, $P11, rx985_curclass, "$!pos"
    lt $I11, 0, rx985_fail2144
    repr_get_attr_int rx985_pos, $P11, rx985_curclass, "$!pos"
    add $I11, rx985_pos, 1
    gt $I11, rx985_eos, rx985_fail2144
    substr $S10, rx985_tgt, rx985_pos, 1
    ne $S10, ucs4:"(", rx985_fail2144
    add rx985_pos, 1
    repr_bind_attr_int rx985_cur, rx985_curclass, "$!pos", rx985_pos
    $P11 = rx985_cur."ws"()
    repr_get_attr_int $I11, $P11, rx985_curclass, "$!pos"
    lt $I11, 0, rx985_fail2144
    repr_get_attr_int rx985_pos, $P11, rx985_curclass, "$!pos"
    repr_bind_attr_int rx985_cur, rx985_curclass, "$!pos", rx985_pos
    $P11 = rx985_cur."signature"()
    repr_get_attr_int $I11, $P11, rx985_curclass, "$!pos"
    lt $I11, 0, rx985_fail2144
    nqp_rxmark rx985_bstack, rxsubrule1001_pass2169, -1, 0
  rxsubrule1001_pass2169:
    rx985_cstack = rx985_cur."!cursor_capture"($P11, "signature")
    repr_get_attr_int rx985_pos, $P11, rx985_curclass, "$!pos"
    repr_bind_attr_int rx985_cur, rx985_curclass, "$!pos", rx985_pos
    $P11 = rx985_cur."ws"()
    repr_get_attr_int $I11, $P11, rx985_curclass, "$!pos"
    lt $I11, 0, rx985_fail2144
    repr_get_attr_int rx985_pos, $P11, rx985_curclass, "$!pos"
    add $I11, rx985_pos, 1
    gt $I11, rx985_eos, rx985_fail2144
    substr $S10, rx985_tgt, rx985_pos, 1
    ne $S10, ucs4:")", rx985_fail2144
    add rx985_pos, 1
    repr_bind_attr_int rx985_cur, rx985_curclass, "$!pos", rx985_pos
    $P11 = rx985_cur."ws"()
    repr_get_attr_int $I11, $P11, rx985_curclass, "$!pos"
    lt $I11, 0, rx985_fail2144
    repr_get_attr_int rx985_pos, $P11, rx985_curclass, "$!pos"
    goto alt998_end2165
  alt998_12172:
    repr_bind_attr_int rx985_cur, rx985_curclass, "$!pos", rx985_pos
    $P11 = rx985_cur."ws"()
    repr_get_attr_int $I11, $P11, rx985_curclass, "$!pos"
    lt $I11, 0, rx985_fail2144
    repr_get_attr_int rx985_pos, $P11, rx985_curclass, "$!pos"
    repr_bind_attr_int rx985_cur, rx985_curclass, "$!pos", rx985_pos
    $P11 = rx985_cur."panic"("Routine declaration requires a signature")
    repr_get_attr_int $I11, $P11, rx985_curclass, "$!pos"
    lt $I11, 0, rx985_fail2144
    repr_get_attr_int rx985_pos, $P11, rx985_curclass, "$!pos"
    repr_bind_attr_int rx985_cur, rx985_curclass, "$!pos", rx985_pos
    $P11 = rx985_cur."ws"()
    repr_get_attr_int $I11, $P11, rx985_curclass, "$!pos"
    lt $I11, 0, rx985_fail2144
    repr_get_attr_int rx985_pos, $P11, rx985_curclass, "$!pos"
  alt998_end2165:
    repr_bind_attr_int rx985_cur, rx985_curclass, "$!pos", rx985_pos
    $P11 = rx985_cur."ws"()
    repr_get_attr_int $I11, $P11, rx985_curclass, "$!pos"
    lt $I11, 0, rx985_fail2144
    repr_get_attr_int rx985_pos, $P11, rx985_curclass, "$!pos"
    nqp_rxmark rx985_bstack, rxquantr1008_done2178, rx985_pos, 0
  rxquantr1008_loop2177:
    repr_bind_attr_int rx985_cur, rx985_curclass, "$!pos", rx985_pos
    $P11 = rx985_cur."trait"()
    repr_get_attr_int $I11, $P11, rx985_curclass, "$!pos"
    lt $I11, 0, rx985_fail2144
    goto rxsubrule1009_pass2179
  rxsubrule1009_back2180:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx985_curclass, "$!pos"
    lt $I11, 0, rx985_fail2144
  rxsubrule1009_pass2179:
    rx985_cstack = rx985_cur."!cursor_capture"($P11, "trait")
    set_addr $I11, rxsubrule1009_back2180
    push rx985_bstack, $I11
    push rx985_bstack, 0
    push rx985_bstack, rx985_pos
    elements $I11, rx985_cstack
    push rx985_bstack, $I11
    repr_get_attr_int rx985_pos, $P11, rx985_curclass, "$!pos"
    nqp_rxpeek $I19, rx985_bstack, rxquantr1008_done2178
    inc $I19
    inc $I19
    set rx985_rep, rx985_bstack[$I19]
    nqp_rxcommit rx985_bstack, rxquantr1008_done2178
    inc rx985_rep
    nqp_rxmark rx985_bstack, rxquantr1008_done2178, rx985_pos, rx985_rep
    goto rxquantr1008_loop2177
  rxquantr1008_done2178:
    repr_bind_attr_int rx985_cur, rx985_curclass, "$!pos", rx985_pos
    $P11 = rx985_cur."ws"()
    repr_get_attr_int $I11, $P11, rx985_curclass, "$!pos"
    lt $I11, 0, rx985_fail2144
    repr_get_attr_int rx985_pos, $P11, rx985_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1011_02183
    nqp_push_label $P11, alt1011_12187
    nqp_rxmark rx985_bstack, alt1011_end2182, -1, 0
    rx985_cur."!alt"(rx985_pos, "alt_nfa__23_1361734141.758", $P11)
    goto rx985_fail2144
  alt1011_02183:
    repr_bind_attr_int rx985_cur, rx985_curclass, "$!pos", rx985_pos
    $P11 = rx985_cur."ws"()
    repr_get_attr_int $I11, $P11, rx985_curclass, "$!pos"
    lt $I11, 0, rx985_fail2144
    repr_get_attr_int rx985_pos, $P11, rx985_curclass, "$!pos"
    repr_bind_attr_int rx985_cur, rx985_curclass, "$!pos", rx985_pos
    $P11 = rx985_cur."onlystar"()
    repr_get_attr_int $I11, $P11, rx985_curclass, "$!pos"
    lt $I11, 0, rx985_fail2144
    nqp_rxmark rx985_bstack, rxsubrule1013_pass2185, -1, 0
  rxsubrule1013_pass2185:
    rx985_cstack = rx985_cur."!cursor_capture"($P11, "onlystar")
    repr_get_attr_int rx985_pos, $P11, rx985_curclass, "$!pos"
    repr_bind_attr_int rx985_cur, rx985_curclass, "$!pos", rx985_pos
    $P11 = rx985_cur."ws"()
    repr_get_attr_int $I11, $P11, rx985_curclass, "$!pos"
    lt $I11, 0, rx985_fail2144
    repr_get_attr_int rx985_pos, $P11, rx985_curclass, "$!pos"
    goto alt1011_end2182
  alt1011_12187:
    repr_bind_attr_int rx985_cur, rx985_curclass, "$!pos", rx985_pos
    $P11 = rx985_cur."ws"()
    repr_get_attr_int $I11, $P11, rx985_curclass, "$!pos"
    lt $I11, 0, rx985_fail2144
    repr_get_attr_int rx985_pos, $P11, rx985_curclass, "$!pos"
    repr_bind_attr_int rx985_cur, rx985_curclass, "$!pos", rx985_pos
    $P11 = rx985_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx985_curclass, "$!pos"
    lt $I11, 0, rx985_fail2144
    nqp_rxmark rx985_bstack, rxsubrule1016_pass2189, -1, 0
  rxsubrule1016_pass2189:
    rx985_cstack = rx985_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx985_pos, $P11, rx985_curclass, "$!pos"
    repr_bind_attr_int rx985_cur, rx985_curclass, "$!pos", rx985_pos
    $P11 = rx985_cur."ws"()
    repr_get_attr_int $I11, $P11, rx985_curclass, "$!pos"
    lt $I11, 0, rx985_fail2144
    repr_get_attr_int rx985_pos, $P11, rx985_curclass, "$!pos"
    goto alt1011_end2182
  alt1011_end2182:
    nqp_rxcommit rx985_bstack, alt1011_end2182
    repr_bind_attr_int rx985_cur, rx985_curclass, "$!pos", rx985_pos
    $P11 = rx985_cur."ws"()
    repr_get_attr_int $I11, $P11, rx985_curclass, "$!pos"
    lt $I11, 0, rx985_fail2144
    repr_get_attr_int rx985_pos, $P11, rx985_curclass, "$!pos"
    rx985_cur."!cursor_pass"(rx985_pos, "routine_def", 'backtrack'=>1)
    .return (rx985_cur)
  rx985_restart2143:
    repr_get_attr_obj rx985_cstack, rx985_cur, rx985_curclass, "$!cstack"
  rx985_fail2144:
    unless rx985_bstack, rx985_done2142
    pop $I19, rx985_bstack
    if_null rx985_cstack, rx985_cstack_done2147
    unless rx985_cstack, rx985_cstack_done2147
    dec $I19
    set $P11, rx985_cstack[$I19]
  rx985_cstack_done2147:
    pop rx985_rep, rx985_bstack
    pop rx985_pos, rx985_bstack
    pop $I19, rx985_bstack
    lt rx985_pos, -1, rx985_done2142
    lt rx985_pos, 0, rx985_fail2144
    eq $I19, 0, rx985_fail2144
    nqp_islist $I20, rx985_cstack
    unless $I20, rx985_jump2145
    elements $I18, rx985_bstack
    le $I18, 0, rx985_cut2146
    dec $I18
    set $I18, rx985_bstack[$I18]
  rx985_cut2146:
    assign rx985_cstack, $I18
  rx985_jump2145:
    jump $I19
  rx985_done2142:
    rx985_cur."!cursor_fail"()
    .return (rx985_cur) 
.end
.HLL "nqp"
.namespace []
.sub "method_def" :subid("cuid_123_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1104
    .param pmc _lex_param_0 
    .const 'Sub' $P5008 = 'cuid_407_1361734139.417' 
    capture_lex $P5008 
    .lex "$*RETURN_USED", $P101 
    .lex "$*INVOCANT_OK", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx1019_start
    .local string rx1019_tgt
    .local int rx1019_pos
    .local int rx1019_off
    .local int rx1019_eos
    .local int rx1019_rep
    .local pmc rx1019_cur
    .local pmc rx1019_curclass
    .local pmc rx1019_bstack
    .local pmc rx1019_cstack
    rx1019_start = self."!cursor_start_all"()
    set rx1019_cur, rx1019_start[0]
    set rx1019_tgt, rx1019_start[1]
    set rx1019_pos, rx1019_start[2]
    set rx1019_curclass, rx1019_start[3]
    set rx1019_bstack, rx1019_start[4]
    set $I19, rx1019_start[5]
    store_lex unicode:"$\x{a2}", rx1019_cur
    length rx1019_eos, rx1019_tgt
    eq $I19, 1, rx1019_restart2194
    gt rx1019_pos, rx1019_eos, rx1019_fail2195
    repr_get_attr_int $I11, self, rx1019_curclass, "$!from"
    ne $I11, -1, rxscan1020_done2201
    goto rxscan1020_scan2200
  rxscan1020_loop2199:
    inc rx1019_pos
    gt rx1019_pos, rx1019_eos, rx1019_fail2195
    repr_bind_attr_int rx1019_cur, rx1019_curclass, "$!from", rx1019_pos
  rxscan1020_scan2200:
    nqp_rxmark rx1019_bstack, rxscan1020_loop2199, rx1019_pos, 0
  rxscan1020_done2201:
    repr_bind_attr_int rx1019_cur, rx1019_curclass, "$!pos", rx1019_pos
    $P11 = rx1019_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1019_curclass, "$!pos"
    lt $I11, 0, rx1019_fail2195
    repr_get_attr_int rx1019_pos, $P11, rx1019_curclass, "$!pos"
    repr_bind_attr_int rx1019_cur, rx1019_curclass, "$!pos", rx1019_pos
    store_lex unicode:"$\x{a2}", rx1019_cur
    box $P5003, 0
    set $P101, $P5003
    repr_bind_attr_int rx1019_cur, rx1019_curclass, "$!pos", rx1019_pos
    $P11 = rx1019_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1019_curclass, "$!pos"
    lt $I11, 0, rx1019_fail2195
    repr_get_attr_int rx1019_pos, $P11, rx1019_curclass, "$!pos"
    repr_bind_attr_int rx1019_cur, rx1019_curclass, "$!pos", rx1019_pos
    store_lex unicode:"$\x{a2}", rx1019_cur
    box $P5004, 1
    set $P102, $P5004
    repr_bind_attr_int rx1019_cur, rx1019_curclass, "$!pos", rx1019_pos
    $P11 = rx1019_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1019_curclass, "$!pos"
    lt $I11, 0, rx1019_fail2195
    repr_get_attr_int rx1019_pos, $P11, rx1019_curclass, "$!pos"
  alt1024_02206:
    nqp_rxmark rx1019_bstack, alt1024_12212, rx1019_pos, 0
    repr_bind_attr_int rx1019_cur, rx1019_curclass, "$!pos", rx1019_pos
    $P11 = rx1019_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1019_curclass, "$!pos"
    lt $I11, 0, rx1019_fail2195
    repr_get_attr_int rx1019_pos, $P11, rx1019_curclass, "$!pos"
    add $I11, rx1019_pos, 3
    gt $I11, rx1019_eos, rx1019_fail2195
    substr $S10, rx1019_tgt, rx1019_pos, 3
    ne $S10, ucs4:"::(", rx1019_fail2195
    add rx1019_pos, 3
    repr_bind_attr_int rx1019_cur, rx1019_curclass, "$!pos", rx1019_pos
    $P11 = rx1019_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1019_curclass, "$!pos"
    lt $I11, 0, rx1019_fail2195
    repr_get_attr_int rx1019_pos, $P11, rx1019_curclass, "$!pos"
    repr_bind_attr_int rx1019_cur, rx1019_curclass, "$!pos", rx1019_pos
    $P11 = rx1019_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1019_curclass, "$!pos"
    lt $I11, 0, rx1019_fail2195
    nqp_rxmark rx1019_bstack, rxsubrule1027_pass2209, -1, 0
  rxsubrule1027_pass2209:
    rx1019_cstack = rx1019_cur."!cursor_capture"($P11, "latename=variable")
    repr_get_attr_int rx1019_pos, $P11, rx1019_curclass, "$!pos"
    repr_bind_attr_int rx1019_cur, rx1019_curclass, "$!pos", rx1019_pos
    $P11 = rx1019_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1019_curclass, "$!pos"
    lt $I11, 0, rx1019_fail2195
    repr_get_attr_int rx1019_pos, $P11, rx1019_curclass, "$!pos"
    add $I11, rx1019_pos, 1
    gt $I11, rx1019_eos, rx1019_fail2195
    substr $S10, rx1019_tgt, rx1019_pos, 1
    ne $S10, ucs4:")", rx1019_fail2195
    add rx1019_pos, 1
    repr_bind_attr_int rx1019_cur, rx1019_curclass, "$!pos", rx1019_pos
    $P11 = rx1019_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1019_curclass, "$!pos"
    lt $I11, 0, rx1019_fail2195
    repr_get_attr_int rx1019_pos, $P11, rx1019_curclass, "$!pos"
    goto alt1024_end2205
  alt1024_12212:
    repr_bind_attr_int rx1019_cur, rx1019_curclass, "$!pos", rx1019_pos
    $P11 = rx1019_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1019_curclass, "$!pos"
    lt $I11, 0, rx1019_fail2195
    repr_get_attr_int rx1019_pos, $P11, rx1019_curclass, "$!pos"
    nqp_rxmark rx1019_bstack, rxcap1031_fail2215, rx1019_pos, 0
    nqp_rxmark rx1019_bstack, rxquantr1032_done2217, rx1019_pos, 0
  rxquantr1032_loop2216:
    add $I11, rx1019_pos, 1
    gt $I11, rx1019_eos, rx1019_fail2195
    substr $S10, rx1019_tgt, rx1019_pos, 1
    ne $S10, ucs4:"!", rx1019_fail2195
    add rx1019_pos, 1
    nqp_rxpeek $I19, rx1019_bstack, rxquantr1032_done2217
    inc $I19
    inc $I19
    set rx1019_rep, rx1019_bstack[$I19]
    nqp_rxcommit rx1019_bstack, rxquantr1032_done2217
    inc rx1019_rep
  rxquantr1032_done2217:
    nqp_rxpeek $I19, rx1019_bstack, rxcap1031_fail2215
    inc $I19
    set $I11, rx1019_bstack[$I19]
    repr_bind_attr_int rx1019_cur, rx1019_curclass, "$!pos", rx1019_pos
    $P11 = rx1019_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1019_pos)
    rx1019_cstack = rx1019_cur."!cursor_capture"($P11, "private")
    goto rxcap1031_done2214
  rxcap1031_fail2215:
    goto rx1019_fail2195
  rxcap1031_done2214:
    repr_bind_attr_int rx1019_cur, rx1019_curclass, "$!pos", rx1019_pos
    $P11 = rx1019_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1019_curclass, "$!pos"
    lt $I11, 0, rx1019_fail2195
    repr_get_attr_int rx1019_pos, $P11, rx1019_curclass, "$!pos"
    nqp_rxmark rx1019_bstack, rxquantr1034_done2220, rx1019_pos, 0
  rxquantr1034_loop2219:
    repr_bind_attr_int rx1019_cur, rx1019_curclass, "$!pos", rx1019_pos
    $P11 = rx1019_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1019_curclass, "$!pos"
    lt $I11, 0, rx1019_fail2195
    goto rxsubrule1035_pass2221
  rxsubrule1035_back2222:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1019_curclass, "$!pos"
    lt $I11, 0, rx1019_fail2195
  rxsubrule1035_pass2221:
    rx1019_cstack = rx1019_cur."!cursor_capture"($P11, "deflongname")
    set_addr $I11, rxsubrule1035_back2222
    push rx1019_bstack, $I11
    push rx1019_bstack, 0
    push rx1019_bstack, rx1019_pos
    elements $I11, rx1019_cstack
    push rx1019_bstack, $I11
    repr_get_attr_int rx1019_pos, $P11, rx1019_curclass, "$!pos"
    nqp_rxpeek $I19, rx1019_bstack, rxquantr1034_done2220
    inc $I19
    inc $I19
    set rx1019_rep, rx1019_bstack[$I19]
    nqp_rxcommit rx1019_bstack, rxquantr1034_done2220
    inc rx1019_rep
  rxquantr1034_done2220:
    repr_bind_attr_int rx1019_cur, rx1019_curclass, "$!pos", rx1019_pos
    $P11 = rx1019_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1019_curclass, "$!pos"
    lt $I11, 0, rx1019_fail2195
    repr_get_attr_int rx1019_pos, $P11, rx1019_curclass, "$!pos"
  alt1024_end2205:
    repr_bind_attr_int rx1019_cur, rx1019_curclass, "$!pos", rx1019_pos
    $P11 = rx1019_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1019_curclass, "$!pos"
    lt $I11, 0, rx1019_fail2195
    repr_get_attr_int rx1019_pos, $P11, rx1019_curclass, "$!pos"
    repr_bind_attr_int rx1019_cur, rx1019_curclass, "$!pos", rx1019_pos
    $P11 = rx1019_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx1019_curclass, "$!pos"
    lt $I11, 0, rx1019_fail2195
    repr_get_attr_int rx1019_pos, $P11, rx1019_curclass, "$!pos"
    repr_bind_attr_int rx1019_cur, rx1019_curclass, "$!pos", rx1019_pos
    $P11 = rx1019_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1019_curclass, "$!pos"
    lt $I11, 0, rx1019_fail2195
    repr_get_attr_int rx1019_pos, $P11, rx1019_curclass, "$!pos"
  alt1040_02228:
    nqp_rxmark rx1019_bstack, alt1040_12234, rx1019_pos, 0
    repr_bind_attr_int rx1019_cur, rx1019_curclass, "$!pos", rx1019_pos
    $P11 = rx1019_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1019_curclass, "$!pos"
    lt $I11, 0, rx1019_fail2195
    repr_get_attr_int rx1019_pos, $P11, rx1019_curclass, "$!pos"
    add $I11, rx1019_pos, 1
    gt $I11, rx1019_eos, rx1019_fail2195
    substr $S10, rx1019_tgt, rx1019_pos, 1
    ne $S10, ucs4:"(", rx1019_fail2195
    add rx1019_pos, 1
    repr_bind_attr_int rx1019_cur, rx1019_curclass, "$!pos", rx1019_pos
    $P11 = rx1019_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1019_curclass, "$!pos"
    lt $I11, 0, rx1019_fail2195
    repr_get_attr_int rx1019_pos, $P11, rx1019_curclass, "$!pos"
    repr_bind_attr_int rx1019_cur, rx1019_curclass, "$!pos", rx1019_pos
    $P11 = rx1019_cur."signature"()
    repr_get_attr_int $I11, $P11, rx1019_curclass, "$!pos"
    lt $I11, 0, rx1019_fail2195
    nqp_rxmark rx1019_bstack, rxsubrule1043_pass2231, -1, 0
  rxsubrule1043_pass2231:
    rx1019_cstack = rx1019_cur."!cursor_capture"($P11, "signature")
    repr_get_attr_int rx1019_pos, $P11, rx1019_curclass, "$!pos"
    repr_bind_attr_int rx1019_cur, rx1019_curclass, "$!pos", rx1019_pos
    $P11 = rx1019_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1019_curclass, "$!pos"
    lt $I11, 0, rx1019_fail2195
    repr_get_attr_int rx1019_pos, $P11, rx1019_curclass, "$!pos"
    add $I11, rx1019_pos, 1
    gt $I11, rx1019_eos, rx1019_fail2195
    substr $S10, rx1019_tgt, rx1019_pos, 1
    ne $S10, ucs4:")", rx1019_fail2195
    add rx1019_pos, 1
    repr_bind_attr_int rx1019_cur, rx1019_curclass, "$!pos", rx1019_pos
    $P11 = rx1019_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1019_curclass, "$!pos"
    lt $I11, 0, rx1019_fail2195
    repr_get_attr_int rx1019_pos, $P11, rx1019_curclass, "$!pos"
    goto alt1040_end2227
  alt1040_12234:
    repr_bind_attr_int rx1019_cur, rx1019_curclass, "$!pos", rx1019_pos
    $P11 = rx1019_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1019_curclass, "$!pos"
    lt $I11, 0, rx1019_fail2195
    repr_get_attr_int rx1019_pos, $P11, rx1019_curclass, "$!pos"
    repr_bind_attr_int rx1019_cur, rx1019_curclass, "$!pos", rx1019_pos
    $P11 = rx1019_cur."panic"("Routine declaration requires a signature")
    repr_get_attr_int $I11, $P11, rx1019_curclass, "$!pos"
    lt $I11, 0, rx1019_fail2195
    repr_get_attr_int rx1019_pos, $P11, rx1019_curclass, "$!pos"
    repr_bind_attr_int rx1019_cur, rx1019_curclass, "$!pos", rx1019_pos
    $P11 = rx1019_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1019_curclass, "$!pos"
    lt $I11, 0, rx1019_fail2195
    repr_get_attr_int rx1019_pos, $P11, rx1019_curclass, "$!pos"
  alt1040_end2227:
    repr_bind_attr_int rx1019_cur, rx1019_curclass, "$!pos", rx1019_pos
    $P11 = rx1019_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1019_curclass, "$!pos"
    lt $I11, 0, rx1019_fail2195
    repr_get_attr_int rx1019_pos, $P11, rx1019_curclass, "$!pos"
    repr_bind_attr_int rx1019_cur, rx1019_curclass, "$!pos", rx1019_pos
    store_lex unicode:"$\x{a2}", rx1019_cur
    $P5005 = $P103."MATCH"()
    set $P104, $P5005
    .const 'Sub' $P5006 = 'cuid_407_1361734139.417' 
    capture_lex $P5006
    $P5007 = $P5006()
    repr_bind_attr_int rx1019_cur, rx1019_curclass, "$!pos", rx1019_pos
    $P11 = rx1019_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1019_curclass, "$!pos"
    lt $I11, 0, rx1019_fail2195
    repr_get_attr_int rx1019_pos, $P11, rx1019_curclass, "$!pos"
    nqp_rxmark rx1019_bstack, rxquantr1051_done2241, rx1019_pos, 0
  rxquantr1051_loop2240:
    repr_bind_attr_int rx1019_cur, rx1019_curclass, "$!pos", rx1019_pos
    $P11 = rx1019_cur."trait"()
    repr_get_attr_int $I11, $P11, rx1019_curclass, "$!pos"
    lt $I11, 0, rx1019_fail2195
    goto rxsubrule1052_pass2242
  rxsubrule1052_back2243:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1019_curclass, "$!pos"
    lt $I11, 0, rx1019_fail2195
  rxsubrule1052_pass2242:
    rx1019_cstack = rx1019_cur."!cursor_capture"($P11, "trait")
    set_addr $I11, rxsubrule1052_back2243
    push rx1019_bstack, $I11
    push rx1019_bstack, 0
    push rx1019_bstack, rx1019_pos
    elements $I11, rx1019_cstack
    push rx1019_bstack, $I11
    repr_get_attr_int rx1019_pos, $P11, rx1019_curclass, "$!pos"
    nqp_rxpeek $I19, rx1019_bstack, rxquantr1051_done2241
    inc $I19
    inc $I19
    set rx1019_rep, rx1019_bstack[$I19]
    nqp_rxcommit rx1019_bstack, rxquantr1051_done2241
    inc rx1019_rep
    nqp_rxmark rx1019_bstack, rxquantr1051_done2241, rx1019_pos, rx1019_rep
    goto rxquantr1051_loop2240
  rxquantr1051_done2241:
    repr_bind_attr_int rx1019_cur, rx1019_curclass, "$!pos", rx1019_pos
    $P11 = rx1019_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1019_curclass, "$!pos"
    lt $I11, 0, rx1019_fail2195
    repr_get_attr_int rx1019_pos, $P11, rx1019_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1054_02246
    nqp_push_label $P11, alt1054_12250
    nqp_rxmark rx1019_bstack, alt1054_end2245, -1, 0
    rx1019_cur."!alt"(rx1019_pos, "alt_nfa__24_1361734141.794", $P11)
    goto rx1019_fail2195
  alt1054_02246:
    repr_bind_attr_int rx1019_cur, rx1019_curclass, "$!pos", rx1019_pos
    $P11 = rx1019_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1019_curclass, "$!pos"
    lt $I11, 0, rx1019_fail2195
    repr_get_attr_int rx1019_pos, $P11, rx1019_curclass, "$!pos"
    repr_bind_attr_int rx1019_cur, rx1019_curclass, "$!pos", rx1019_pos
    $P11 = rx1019_cur."onlystar"()
    repr_get_attr_int $I11, $P11, rx1019_curclass, "$!pos"
    lt $I11, 0, rx1019_fail2195
    nqp_rxmark rx1019_bstack, rxsubrule1056_pass2248, -1, 0
  rxsubrule1056_pass2248:
    rx1019_cstack = rx1019_cur."!cursor_capture"($P11, "onlystar")
    repr_get_attr_int rx1019_pos, $P11, rx1019_curclass, "$!pos"
    repr_bind_attr_int rx1019_cur, rx1019_curclass, "$!pos", rx1019_pos
    $P11 = rx1019_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1019_curclass, "$!pos"
    lt $I11, 0, rx1019_fail2195
    repr_get_attr_int rx1019_pos, $P11, rx1019_curclass, "$!pos"
    goto alt1054_end2245
  alt1054_12250:
    repr_bind_attr_int rx1019_cur, rx1019_curclass, "$!pos", rx1019_pos
    $P11 = rx1019_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1019_curclass, "$!pos"
    lt $I11, 0, rx1019_fail2195
    repr_get_attr_int rx1019_pos, $P11, rx1019_curclass, "$!pos"
    repr_bind_attr_int rx1019_cur, rx1019_curclass, "$!pos", rx1019_pos
    $P11 = rx1019_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx1019_curclass, "$!pos"
    lt $I11, 0, rx1019_fail2195
    nqp_rxmark rx1019_bstack, rxsubrule1059_pass2252, -1, 0
  rxsubrule1059_pass2252:
    rx1019_cstack = rx1019_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx1019_pos, $P11, rx1019_curclass, "$!pos"
    repr_bind_attr_int rx1019_cur, rx1019_curclass, "$!pos", rx1019_pos
    $P11 = rx1019_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1019_curclass, "$!pos"
    lt $I11, 0, rx1019_fail2195
    repr_get_attr_int rx1019_pos, $P11, rx1019_curclass, "$!pos"
    goto alt1054_end2245
  alt1054_end2245:
    nqp_rxcommit rx1019_bstack, alt1054_end2245
    repr_bind_attr_int rx1019_cur, rx1019_curclass, "$!pos", rx1019_pos
    $P11 = rx1019_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1019_curclass, "$!pos"
    lt $I11, 0, rx1019_fail2195
    repr_get_attr_int rx1019_pos, $P11, rx1019_curclass, "$!pos"
    rx1019_cur."!cursor_pass"(rx1019_pos, "method_def", 'backtrack'=>1)
    .return (rx1019_cur)
  rx1019_restart2194:
    repr_get_attr_obj rx1019_cstack, rx1019_cur, rx1019_curclass, "$!cstack"
  rx1019_fail2195:
    unless rx1019_bstack, rx1019_done2193
    pop $I19, rx1019_bstack
    if_null rx1019_cstack, rx1019_cstack_done2198
    unless rx1019_cstack, rx1019_cstack_done2198
    dec $I19
    set $P11, rx1019_cstack[$I19]
  rx1019_cstack_done2198:
    pop rx1019_rep, rx1019_bstack
    pop rx1019_pos, rx1019_bstack
    pop $I19, rx1019_bstack
    lt rx1019_pos, -1, rx1019_done2193
    lt rx1019_pos, 0, rx1019_fail2195
    eq $I19, 0, rx1019_fail2195
    nqp_islist $I20, rx1019_cstack
    unless $I20, rx1019_jump2196
    elements $I18, rx1019_bstack
    le $I18, 0, rx1019_cut2197
    dec $I18
    set $I18, rx1019_bstack[$I18]
  rx1019_cut2197:
    assign rx1019_cstack, $I18
  rx1019_jump2196:
    jump $I19
  rx1019_done2193:
    rx1019_cur."!cursor_fail"()
    .return (rx1019_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_407_1361734139.417") :anon :lex :outer("cuid_123_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1114

    box $P5001, 0
    store_dynamic_lex "$*INVOCANT_OK", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "onlystar" :subid("cuid_124_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1122
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_408_1361734139.417' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1062_start
    .local string rx1062_tgt
    .local int rx1062_pos
    .local int rx1062_off
    .local int rx1062_eos
    .local int rx1062_rep
    .local pmc rx1062_cur
    .local pmc rx1062_curclass
    .local pmc rx1062_bstack
    .local pmc rx1062_cstack
    rx1062_start = self."!cursor_start_all"()
    set rx1062_cur, rx1062_start[0]
    set rx1062_tgt, rx1062_start[1]
    set rx1062_pos, rx1062_start[2]
    set rx1062_curclass, rx1062_start[3]
    set rx1062_bstack, rx1062_start[4]
    set $I19, rx1062_start[5]
    store_lex unicode:"$\x{a2}", rx1062_cur
    length rx1062_eos, rx1062_tgt
    eq $I19, 1, rx1062_restart2257
    gt rx1062_pos, rx1062_eos, rx1062_fail2258
    repr_get_attr_int $I11, self, rx1062_curclass, "$!from"
    ne $I11, -1, rxscan1063_done2264
    goto rxscan1063_scan2263
  rxscan1063_loop2262:
    inc rx1062_pos
    gt rx1062_pos, rx1062_eos, rx1062_fail2258
    repr_bind_attr_int rx1062_cur, rx1062_curclass, "$!from", rx1062_pos
  rxscan1063_scan2263:
    nqp_rxmark rx1062_bstack, rxscan1063_loop2262, rx1062_pos, 0
  rxscan1063_done2264:
    repr_bind_attr_int rx1062_cur, rx1062_curclass, "$!pos", rx1062_pos
    store_lex unicode:"$\x{a2}", rx1062_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_408_1361734139.417' 
    capture_lex $P5002
    $P5003 = $P5002()
    unless $P5003, rx1062_fail2258
    add $I11, rx1062_pos, 1
    gt $I11, rx1062_eos, rx1062_fail2258
    substr $S10, rx1062_tgt, rx1062_pos, 1
    ne $S10, ucs4:"{", rx1062_fail2258
    add rx1062_pos, 1
    repr_bind_attr_int rx1062_cur, rx1062_curclass, "$!pos", rx1062_pos
    $P11 = rx1062_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1062_curclass, "$!pos"
    lt $I11, 0, rx1062_fail2258
    repr_get_attr_int rx1062_pos, $P11, rx1062_curclass, "$!pos"
    add $I11, rx1062_pos, 1
    gt $I11, rx1062_eos, rx1062_fail2258
    substr $S10, rx1062_tgt, rx1062_pos, 1
    ne $S10, ucs4:"*", rx1062_fail2258
    add rx1062_pos, 1
    repr_bind_attr_int rx1062_cur, rx1062_curclass, "$!pos", rx1062_pos
    $P11 = rx1062_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1062_curclass, "$!pos"
    lt $I11, 0, rx1062_fail2258
    repr_get_attr_int rx1062_pos, $P11, rx1062_curclass, "$!pos"
    add $I11, rx1062_pos, 1
    gt $I11, rx1062_eos, rx1062_fail2258
    substr $S10, rx1062_tgt, rx1062_pos, 1
    ne $S10, ucs4:"}", rx1062_fail2258
    add rx1062_pos, 1
    repr_bind_attr_int rx1062_cur, rx1062_curclass, "$!pos", rx1062_pos
    $P11 = rx1062_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1062_curclass, "$!pos"
    lt $I11, 0, rx1062_fail2258
    repr_bind_attr_int rx1062_cur, rx1062_curclass, "$!pos", rx1062_pos
    $P11 = rx1062_cur."finishpad"()
    repr_get_attr_int $I11, $P11, rx1062_curclass, "$!pos"
    lt $I11, 0, rx1062_fail2258
    repr_get_attr_int rx1062_pos, $P11, rx1062_curclass, "$!pos"
    rx1062_cur."!cursor_pass"(rx1062_pos, "onlystar", 'backtrack'=>1)
    .return (rx1062_cur)
  rx1062_restart2257:
    repr_get_attr_obj rx1062_cstack, rx1062_cur, rx1062_curclass, "$!cstack"
  rx1062_fail2258:
    unless rx1062_bstack, rx1062_done2256
    pop $I19, rx1062_bstack
    if_null rx1062_cstack, rx1062_cstack_done2261
    unless rx1062_cstack, rx1062_cstack_done2261
    dec $I19
    set $P11, rx1062_cstack[$I19]
  rx1062_cstack_done2261:
    pop rx1062_rep, rx1062_bstack
    pop rx1062_pos, rx1062_bstack
    pop $I19, rx1062_bstack
    lt rx1062_pos, -1, rx1062_done2256
    lt rx1062_pos, 0, rx1062_fail2258
    eq $I19, 0, rx1062_fail2258
    nqp_islist $I20, rx1062_cstack
    unless $I20, rx1062_jump2259
    elements $I18, rx1062_bstack
    le $I18, 0, rx1062_cut2260
    dec $I18
    set $I18, rx1062_bstack[$I18]
  rx1062_cut2260:
    assign rx1062_cstack, $I18
  rx1062_jump2259:
    jump $I19
  rx1062_done2256:
    rx1062_cur."!cursor_fail"()
    .return (rx1062_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_408_1361734139.417") :anon :lex :outer("cuid_124_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1123
    .local pmc fb_tmp_147 
    find_dynamic_lex $P5001, "$*MULTINESS"
    unless_null $P5001, fallback2265
    nqp_get_sc_object $P5003, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5002, $P5003
    set fb_tmp_147, $P5002
    repr_defined $I5002, fb_tmp_147
    unless $I5002 goto if1064_else2266 
    set $P5004, fb_tmp_147["$MULTINESS"]
    set $P5006, $P5004
    goto if1064_end2267
  if1064_else2266:
    null $P5005
    set $P5006, $P5005
  if1064_end2267:
    unless_null $P5006, vivi_10652268
    nqp_get_sc_object $P5007, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5006, $P5007
  vivi_10652268:
    unless_null $P5006, vivi_10662269
    die "Contextual $*MULTINESS not found"
    box $P5008, "Contextual $*MULTINESS not found"
    set $P5006, $P5008
  vivi_10662269:
    set $P5001, $P5006
  fallback2265:
    set $S5001, $P5001
    iseq $I5001, $S5001, "proto"
    .return ($I5001) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator" :subid("cuid_125_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1129
    .param pmc self 
    $P5001 = self."!protoregex"("multi_declarator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<multi>" :subid("cuid_126_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1130
    .param pmc _lex_param_0 
    .lex "$*MULTINESS", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1070_start
    .local string rx1070_tgt
    .local int rx1070_pos
    .local int rx1070_off
    .local int rx1070_eos
    .local int rx1070_rep
    .local pmc rx1070_cur
    .local pmc rx1070_curclass
    .local pmc rx1070_bstack
    .local pmc rx1070_cstack
    rx1070_start = self."!cursor_start_all"()
    set rx1070_cur, rx1070_start[0]
    set rx1070_tgt, rx1070_start[1]
    set rx1070_pos, rx1070_start[2]
    set rx1070_curclass, rx1070_start[3]
    set rx1070_bstack, rx1070_start[4]
    set $I19, rx1070_start[5]
    store_lex unicode:"$\x{a2}", rx1070_cur
    length rx1070_eos, rx1070_tgt
    eq $I19, 1, rx1070_restart2275
    gt rx1070_pos, rx1070_eos, rx1070_fail2276
    repr_get_attr_int $I11, self, rx1070_curclass, "$!from"
    ne $I11, -1, rxscan1071_done2282
    goto rxscan1071_scan2281
  rxscan1071_loop2280:
    inc rx1070_pos
    gt rx1070_pos, rx1070_eos, rx1070_fail2276
    repr_bind_attr_int rx1070_cur, rx1070_curclass, "$!from", rx1070_pos
  rxscan1071_scan2281:
    nqp_rxmark rx1070_bstack, rxscan1071_loop2280, rx1070_pos, 0
  rxscan1071_done2282:
    repr_bind_attr_int rx1070_cur, rx1070_curclass, "$!pos", rx1070_pos
    store_lex unicode:"$\x{a2}", rx1070_cur
    box $P5002, "multi"
    set $P101, $P5002
    nqp_rxmark rx1070_bstack, rxcap1072_fail2284, rx1070_pos, 0
    add $I11, rx1070_pos, 5
    gt $I11, rx1070_eos, rx1070_fail2276
    substr $S10, rx1070_tgt, rx1070_pos, 5
    ne $S10, ucs4:"multi", rx1070_fail2276
    add rx1070_pos, 5
    nqp_rxpeek $I19, rx1070_bstack, rxcap1072_fail2284
    inc $I19
    set $I11, rx1070_bstack[$I19]
    repr_bind_attr_int rx1070_cur, rx1070_curclass, "$!pos", rx1070_pos
    $P11 = rx1070_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1070_pos)
    rx1070_cstack = rx1070_cur."!cursor_capture"($P11, "sym")
    goto rxcap1072_done2283
  rxcap1072_fail2284:
    goto rx1070_fail2276
  rxcap1072_done2283:
    repr_bind_attr_int rx1070_cur, rx1070_curclass, "$!pos", rx1070_pos
    $P11 = rx1070_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1070_curclass, "$!pos"
    lt $I11, 0, rx1070_fail2276
    repr_get_attr_int rx1070_pos, $P11, rx1070_curclass, "$!pos"
  alt1074_02287:
    nqp_rxmark rx1070_bstack, alt1074_12289, rx1070_pos, 0
    repr_bind_attr_int rx1070_cur, rx1070_curclass, "$!pos", rx1070_pos
    $P11 = rx1070_cur."declarator"()
    repr_get_attr_int $I11, $P11, rx1070_curclass, "$!pos"
    lt $I11, 0, rx1070_fail2276
    nqp_rxmark rx1070_bstack, rxsubrule1075_pass2288, -1, 0
  rxsubrule1075_pass2288:
    rx1070_cstack = rx1070_cur."!cursor_capture"($P11, "declarator")
    repr_get_attr_int rx1070_pos, $P11, rx1070_curclass, "$!pos"
    goto alt1074_end2286
  alt1074_12289:
    nqp_rxmark rx1070_bstack, alt1074_22291, rx1070_pos, 0
    repr_bind_attr_int rx1070_cur, rx1070_curclass, "$!pos", rx1070_pos
    $P11 = rx1070_cur."routine_def"()
    repr_get_attr_int $I11, $P11, rx1070_curclass, "$!pos"
    lt $I11, 0, rx1070_fail2276
    nqp_rxmark rx1070_bstack, rxsubrule1076_pass2290, -1, 0
  rxsubrule1076_pass2290:
    rx1070_cstack = rx1070_cur."!cursor_capture"($P11, "routine_def")
    repr_get_attr_int rx1070_pos, $P11, rx1070_curclass, "$!pos"
    goto alt1074_end2286
  alt1074_22291:
    repr_bind_attr_int rx1070_cur, rx1070_curclass, "$!pos", rx1070_pos
    $P11 = rx1070_cur."panic"("Malformed multi")
    repr_get_attr_int $I11, $P11, rx1070_curclass, "$!pos"
    lt $I11, 0, rx1070_fail2276
    repr_get_attr_int rx1070_pos, $P11, rx1070_curclass, "$!pos"
  alt1074_end2286:
    rx1070_cur."!cursor_pass"(rx1070_pos, "multi_declarator:sym<multi>", 'backtrack'=>1)
    .return (rx1070_cur)
  rx1070_restart2275:
    repr_get_attr_obj rx1070_cstack, rx1070_cur, rx1070_curclass, "$!cstack"
  rx1070_fail2276:
    unless rx1070_bstack, rx1070_done2274
    pop $I19, rx1070_bstack
    if_null rx1070_cstack, rx1070_cstack_done2279
    unless rx1070_cstack, rx1070_cstack_done2279
    dec $I19
    set $P11, rx1070_cstack[$I19]
  rx1070_cstack_done2279:
    pop rx1070_rep, rx1070_bstack
    pop rx1070_pos, rx1070_bstack
    pop $I19, rx1070_bstack
    lt rx1070_pos, -1, rx1070_done2274
    lt rx1070_pos, 0, rx1070_fail2276
    eq $I19, 0, rx1070_fail2276
    nqp_islist $I20, rx1070_cstack
    unless $I20, rx1070_jump2277
    elements $I18, rx1070_bstack
    le $I18, 0, rx1070_cut2278
    dec $I18
    set $I18, rx1070_bstack[$I18]
  rx1070_cut2278:
    assign rx1070_cstack, $I18
  rx1070_jump2277:
    jump $I19
  rx1070_done2274:
    rx1070_cur."!cursor_fail"()
    .return (rx1070_cur) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<proto>" :subid("cuid_127_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1135
    .param pmc _lex_param_0 
    .lex "$*MULTINESS", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1078_start
    .local string rx1078_tgt
    .local int rx1078_pos
    .local int rx1078_off
    .local int rx1078_eos
    .local int rx1078_rep
    .local pmc rx1078_cur
    .local pmc rx1078_curclass
    .local pmc rx1078_bstack
    .local pmc rx1078_cstack
    rx1078_start = self."!cursor_start_all"()
    set rx1078_cur, rx1078_start[0]
    set rx1078_tgt, rx1078_start[1]
    set rx1078_pos, rx1078_start[2]
    set rx1078_curclass, rx1078_start[3]
    set rx1078_bstack, rx1078_start[4]
    set $I19, rx1078_start[5]
    store_lex unicode:"$\x{a2}", rx1078_cur
    length rx1078_eos, rx1078_tgt
    eq $I19, 1, rx1078_restart2295
    gt rx1078_pos, rx1078_eos, rx1078_fail2296
    repr_get_attr_int $I11, self, rx1078_curclass, "$!from"
    ne $I11, -1, rxscan1079_done2302
    goto rxscan1079_scan2301
  rxscan1079_loop2300:
    inc rx1078_pos
    gt rx1078_pos, rx1078_eos, rx1078_fail2296
    repr_bind_attr_int rx1078_cur, rx1078_curclass, "$!from", rx1078_pos
  rxscan1079_scan2301:
    nqp_rxmark rx1078_bstack, rxscan1079_loop2300, rx1078_pos, 0
  rxscan1079_done2302:
    repr_bind_attr_int rx1078_cur, rx1078_curclass, "$!pos", rx1078_pos
    store_lex unicode:"$\x{a2}", rx1078_cur
    box $P5002, "proto"
    set $P101, $P5002
    nqp_rxmark rx1078_bstack, rxcap1080_fail2304, rx1078_pos, 0
    add $I11, rx1078_pos, 5
    gt $I11, rx1078_eos, rx1078_fail2296
    substr $S10, rx1078_tgt, rx1078_pos, 5
    ne $S10, ucs4:"proto", rx1078_fail2296
    add rx1078_pos, 5
    nqp_rxpeek $I19, rx1078_bstack, rxcap1080_fail2304
    inc $I19
    set $I11, rx1078_bstack[$I19]
    repr_bind_attr_int rx1078_cur, rx1078_curclass, "$!pos", rx1078_pos
    $P11 = rx1078_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1078_pos)
    rx1078_cstack = rx1078_cur."!cursor_capture"($P11, "sym")
    goto rxcap1080_done2303
  rxcap1080_fail2304:
    goto rx1078_fail2296
  rxcap1080_done2303:
    repr_bind_attr_int rx1078_cur, rx1078_curclass, "$!pos", rx1078_pos
    $P11 = rx1078_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1078_curclass, "$!pos"
    lt $I11, 0, rx1078_fail2296
    repr_get_attr_int rx1078_pos, $P11, rx1078_curclass, "$!pos"
  alt1082_02307:
    nqp_rxmark rx1078_bstack, alt1082_12309, rx1078_pos, 0
    repr_bind_attr_int rx1078_cur, rx1078_curclass, "$!pos", rx1078_pos
    $P11 = rx1078_cur."declarator"()
    repr_get_attr_int $I11, $P11, rx1078_curclass, "$!pos"
    lt $I11, 0, rx1078_fail2296
    nqp_rxmark rx1078_bstack, rxsubrule1083_pass2308, -1, 0
  rxsubrule1083_pass2308:
    rx1078_cstack = rx1078_cur."!cursor_capture"($P11, "declarator")
    repr_get_attr_int rx1078_pos, $P11, rx1078_curclass, "$!pos"
    goto alt1082_end2306
  alt1082_12309:
    nqp_rxmark rx1078_bstack, alt1082_22311, rx1078_pos, 0
    repr_bind_attr_int rx1078_cur, rx1078_curclass, "$!pos", rx1078_pos
    $P11 = rx1078_cur."routine_def"()
    repr_get_attr_int $I11, $P11, rx1078_curclass, "$!pos"
    lt $I11, 0, rx1078_fail2296
    nqp_rxmark rx1078_bstack, rxsubrule1084_pass2310, -1, 0
  rxsubrule1084_pass2310:
    rx1078_cstack = rx1078_cur."!cursor_capture"($P11, "routine_def")
    repr_get_attr_int rx1078_pos, $P11, rx1078_curclass, "$!pos"
    goto alt1082_end2306
  alt1082_22311:
    repr_bind_attr_int rx1078_cur, rx1078_curclass, "$!pos", rx1078_pos
    $P11 = rx1078_cur."panic"("Malformed proto")
    repr_get_attr_int $I11, $P11, rx1078_curclass, "$!pos"
    lt $I11, 0, rx1078_fail2296
    repr_get_attr_int rx1078_pos, $P11, rx1078_curclass, "$!pos"
  alt1082_end2306:
    rx1078_cur."!cursor_pass"(rx1078_pos, "multi_declarator:sym<proto>", 'backtrack'=>1)
    .return (rx1078_cur)
  rx1078_restart2295:
    repr_get_attr_obj rx1078_cstack, rx1078_cur, rx1078_curclass, "$!cstack"
  rx1078_fail2296:
    unless rx1078_bstack, rx1078_done2294
    pop $I19, rx1078_bstack
    if_null rx1078_cstack, rx1078_cstack_done2299
    unless rx1078_cstack, rx1078_cstack_done2299
    dec $I19
    set $P11, rx1078_cstack[$I19]
  rx1078_cstack_done2299:
    pop rx1078_rep, rx1078_bstack
    pop rx1078_pos, rx1078_bstack
    pop $I19, rx1078_bstack
    lt rx1078_pos, -1, rx1078_done2294
    lt rx1078_pos, 0, rx1078_fail2296
    eq $I19, 0, rx1078_fail2296
    nqp_islist $I20, rx1078_cstack
    unless $I20, rx1078_jump2297
    elements $I18, rx1078_bstack
    le $I18, 0, rx1078_cut2298
    dec $I18
    set $I18, rx1078_bstack[$I18]
  rx1078_cut2298:
    assign rx1078_cstack, $I18
  rx1078_jump2297:
    jump $I19
  rx1078_done2294:
    rx1078_cur."!cursor_fail"()
    .return (rx1078_cur) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<null>" :subid("cuid_128_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1140
    .param pmc _lex_param_0 
    .lex "$*MULTINESS", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1086_start
    .local string rx1086_tgt
    .local int rx1086_pos
    .local int rx1086_off
    .local int rx1086_eos
    .local int rx1086_rep
    .local pmc rx1086_cur
    .local pmc rx1086_curclass
    .local pmc rx1086_bstack
    .local pmc rx1086_cstack
    rx1086_start = self."!cursor_start_all"()
    set rx1086_cur, rx1086_start[0]
    set rx1086_tgt, rx1086_start[1]
    set rx1086_pos, rx1086_start[2]
    set rx1086_curclass, rx1086_start[3]
    set rx1086_bstack, rx1086_start[4]
    set $I19, rx1086_start[5]
    store_lex unicode:"$\x{a2}", rx1086_cur
    length rx1086_eos, rx1086_tgt
    eq $I19, 1, rx1086_restart2315
    gt rx1086_pos, rx1086_eos, rx1086_fail2316
    repr_get_attr_int $I11, self, rx1086_curclass, "$!from"
    ne $I11, -1, rxscan1087_done2322
    goto rxscan1087_scan2321
  rxscan1087_loop2320:
    inc rx1086_pos
    gt rx1086_pos, rx1086_eos, rx1086_fail2316
    repr_bind_attr_int rx1086_cur, rx1086_curclass, "$!from", rx1086_pos
  rxscan1087_scan2321:
    nqp_rxmark rx1086_bstack, rxscan1087_loop2320, rx1086_pos, 0
  rxscan1087_done2322:
    repr_bind_attr_int rx1086_cur, rx1086_curclass, "$!pos", rx1086_pos
    store_lex unicode:"$\x{a2}", rx1086_cur
    box $P5002, ""
    set $P101, $P5002
    repr_bind_attr_int rx1086_cur, rx1086_curclass, "$!pos", rx1086_pos
    $P11 = rx1086_cur."declarator"()
    repr_get_attr_int $I11, $P11, rx1086_curclass, "$!pos"
    lt $I11, 0, rx1086_fail2316
    nqp_rxmark rx1086_bstack, rxsubrule1088_pass2323, -1, 0
  rxsubrule1088_pass2323:
    rx1086_cstack = rx1086_cur."!cursor_capture"($P11, "declarator")
    repr_get_attr_int rx1086_pos, $P11, rx1086_curclass, "$!pos"
    rx1086_cur."!cursor_pass"(rx1086_pos, "multi_declarator:sym<null>", 'backtrack'=>1)
    .return (rx1086_cur)
  rx1086_restart2315:
    repr_get_attr_obj rx1086_cstack, rx1086_cur, rx1086_curclass, "$!cstack"
  rx1086_fail2316:
    unless rx1086_bstack, rx1086_done2314
    pop $I19, rx1086_bstack
    if_null rx1086_cstack, rx1086_cstack_done2319
    unless rx1086_cstack, rx1086_cstack_done2319
    dec $I19
    set $P11, rx1086_cstack[$I19]
  rx1086_cstack_done2319:
    pop rx1086_rep, rx1086_bstack
    pop rx1086_pos, rx1086_bstack
    pop $I19, rx1086_bstack
    lt rx1086_pos, -1, rx1086_done2314
    lt rx1086_pos, 0, rx1086_fail2316
    eq $I19, 0, rx1086_fail2316
    nqp_islist $I20, rx1086_cstack
    unless $I20, rx1086_jump2317
    elements $I18, rx1086_bstack
    le $I18, 0, rx1086_cut2318
    dec $I18
    set $I18, rx1086_bstack[$I18]
  rx1086_cut2318:
    assign rx1086_cstack, $I18
  rx1086_jump2317:
    jump $I19
  rx1086_done2314:
    rx1086_cur."!cursor_fail"()
    .return (rx1086_cur) 
.end
.HLL "nqp"
.namespace []
.sub "signature" :subid("cuid_129_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1145
    .param pmc _lex_param_0 
    .const 'Sub' $P5005 = 'cuid_409_1361734139.417' 
    capture_lex $P5005 
    .const 'Sub' $P5005 = 'cuid_130_1361734139.417' 
    capture_lex $P5005 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1089_start
    .local string rx1089_tgt
    .local int rx1089_pos
    .local int rx1089_off
    .local int rx1089_eos
    .local int rx1089_rep
    .local pmc rx1089_cur
    .local pmc rx1089_curclass
    .local pmc rx1089_bstack
    .local pmc rx1089_cstack
    rx1089_start = self."!cursor_start_all"()
    set rx1089_cur, rx1089_start[0]
    set rx1089_tgt, rx1089_start[1]
    set rx1089_pos, rx1089_start[2]
    set rx1089_curclass, rx1089_start[3]
    set rx1089_bstack, rx1089_start[4]
    set $I19, rx1089_start[5]
    store_lex unicode:"$\x{a2}", rx1089_cur
    length rx1089_eos, rx1089_tgt
    eq $I19, 1, rx1089_restart2326
    gt rx1089_pos, rx1089_eos, rx1089_fail2327
    repr_get_attr_int $I11, self, rx1089_curclass, "$!from"
    ne $I11, -1, rxscan1090_done2333
    goto rxscan1090_scan2332
  rxscan1090_loop2331:
    inc rx1089_pos
    gt rx1089_pos, rx1089_eos, rx1089_fail2327
    repr_bind_attr_int rx1089_cur, rx1089_curclass, "$!from", rx1089_pos
  rxscan1090_scan2332:
    nqp_rxmark rx1089_bstack, rxscan1090_loop2331, rx1089_pos, 0
  rxscan1090_done2333:
    nqp_rxmark rx1089_bstack, rxquantr1091_done2335, rx1089_pos, 0
  rxquantr1091_loop2334:
    repr_bind_attr_int rx1089_cur, rx1089_curclass, "$!pos", rx1089_pos
    store_lex unicode:"$\x{a2}", rx1089_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_409_1361734139.417' 
    capture_lex $P5002
    $P5003 = $P5002()
    unless $P5003, rx1089_fail2327
    repr_bind_attr_int rx1089_cur, rx1089_curclass, "$!pos", rx1089_pos
    $P11 = rx1089_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1089_curclass, "$!pos"
    lt $I11, 0, rx1089_fail2327
    repr_get_attr_int rx1089_pos, $P11, rx1089_curclass, "$!pos"
    repr_bind_attr_int rx1089_cur, rx1089_curclass, "$!pos", rx1089_pos
    $P11 = rx1089_cur."parameter"()
    repr_get_attr_int $I11, $P11, rx1089_curclass, "$!pos"
    lt $I11, 0, rx1089_fail2327
    nqp_rxmark rx1089_bstack, rxsubrule1096_pass2342, -1, 0
  rxsubrule1096_pass2342:
    rx1089_cstack = rx1089_cur."!cursor_capture"($P11, "invocant")
    repr_get_attr_int rx1089_pos, $P11, rx1089_curclass, "$!pos"
    repr_bind_attr_int rx1089_cur, rx1089_curclass, "$!pos", rx1089_pos
    $P11 = rx1089_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1089_curclass, "$!pos"
    lt $I11, 0, rx1089_fail2327
    repr_get_attr_int rx1089_pos, $P11, rx1089_curclass, "$!pos"
    add $I11, rx1089_pos, 1
    gt $I11, rx1089_eos, rx1089_fail2327
    substr $S10, rx1089_tgt, rx1089_pos, 1
    ne $S10, ucs4:":", rx1089_fail2327
    add rx1089_pos, 1
    nqp_rxpeek $I19, rx1089_bstack, rxquantr1091_done2335
    inc $I19
    inc $I19
    set rx1089_rep, rx1089_bstack[$I19]
    nqp_rxcommit rx1089_bstack, rxquantr1091_done2335
    inc rx1089_rep
  rxquantr1091_done2335:
    nqp_rxmark rx1089_bstack, rxquantr1098_done2345, rx1089_pos, 0
  rxquantr1098_loop2344:
    nqp_rxmark rx1089_bstack, rxquantr1099_done2347, rx1089_pos, 0
  rxquantr1099_loop2346:
    repr_bind_attr_int rx1089_cur, rx1089_curclass, "$!pos", rx1089_pos
    $P11 = rx1089_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1089_curclass, "$!pos"
    lt $I11, 0, rx1089_fail2327
    repr_get_attr_int rx1089_pos, $P11, rx1089_curclass, "$!pos"
    repr_bind_attr_int rx1089_cur, rx1089_curclass, "$!pos", rx1089_pos
    $P11 = rx1089_cur."parameter"()
    repr_get_attr_int $I11, $P11, rx1089_curclass, "$!pos"
    lt $I11, 0, rx1089_fail2327
    nqp_rxmark rx1089_bstack, rxsubrule1101_pass2349, -1, 0
  rxsubrule1101_pass2349:
    rx1089_cstack = rx1089_cur."!cursor_capture"($P11, "parameter")
    repr_get_attr_int rx1089_pos, $P11, rx1089_curclass, "$!pos"
    repr_bind_attr_int rx1089_cur, rx1089_curclass, "$!pos", rx1089_pos
    $P11 = rx1089_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1089_curclass, "$!pos"
    lt $I11, 0, rx1089_fail2327
    repr_get_attr_int rx1089_pos, $P11, rx1089_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1103_02352
    nqp_push_label $P11, alt1103_12353
    nqp_rxmark rx1089_bstack, alt1103_end2351, -1, 0
    rx1089_cur."!alt"(rx1089_pos, "alt_nfa__26_1361734141.873", $P11)
    goto rx1089_fail2327
  alt1103_02352:
    add $I11, rx1089_pos, 1
    gt $I11, rx1089_eos, rx1089_fail2327
    substr $S10, rx1089_tgt, rx1089_pos, 1
    ne $S10, ucs4:",", rx1089_fail2327
    add rx1089_pos, 1
    goto alt1103_end2351
  alt1103_12353:
    .const 'Sub' $P5004 = 'cuid_130_1361734139.417' 
    capture_lex $P5004
    repr_bind_attr_int rx1089_cur, rx1089_curclass, "$!pos", rx1089_pos
    $P11 = rx1089_cur."before"($P5004)
    repr_get_attr_int $I11, $P11, rx1089_curclass, "$!pos"
    lt $I11, 0, rx1089_fail2327
    nqp_rxmark rx1089_bstack, rxsubrule1108_pass2369, -1, 0
  rxsubrule1108_pass2369:
    rx1089_cstack = rx1089_cur."!cursor_capture"($P11, "before")
    repr_get_attr_int rx1089_pos, $P11, rx1089_curclass, "$!pos"
    goto alt1103_end2351
  alt1103_end2351:
    nqp_rxcommit rx1089_bstack, alt1103_end2351
    nqp_rxpeek $I19, rx1089_bstack, rxquantr1099_done2347
    inc $I19
    inc $I19
    set rx1089_rep, rx1089_bstack[$I19]
    nqp_rxcommit rx1089_bstack, rxquantr1099_done2347
    inc rx1089_rep
    nqp_rxmark rx1089_bstack, rxquantr1099_done2347, rx1089_pos, rx1089_rep
    goto rxquantr1099_loop2346
  rxquantr1099_done2347:
    nqp_rxpeek $I19, rx1089_bstack, rxquantr1098_done2345
    inc $I19
    inc $I19
    set rx1089_rep, rx1089_bstack[$I19]
    nqp_rxcommit rx1089_bstack, rxquantr1098_done2345
    inc rx1089_rep
  rxquantr1098_done2345:
    rx1089_cur."!cursor_pass"(rx1089_pos, "signature", 'backtrack'=>1)
    .return (rx1089_cur)
  rx1089_restart2326:
    repr_get_attr_obj rx1089_cstack, rx1089_cur, rx1089_curclass, "$!cstack"
  rx1089_fail2327:
    unless rx1089_bstack, rx1089_done2325
    pop $I19, rx1089_bstack
    if_null rx1089_cstack, rx1089_cstack_done2330
    unless rx1089_cstack, rx1089_cstack_done2330
    dec $I19
    set $P11, rx1089_cstack[$I19]
  rx1089_cstack_done2330:
    pop rx1089_rep, rx1089_bstack
    pop rx1089_pos, rx1089_bstack
    pop $I19, rx1089_bstack
    lt rx1089_pos, -1, rx1089_done2325
    lt rx1089_pos, 0, rx1089_fail2327
    eq $I19, 0, rx1089_fail2327
    nqp_islist $I20, rx1089_cstack
    unless $I20, rx1089_jump2328
    elements $I18, rx1089_bstack
    le $I18, 0, rx1089_cut2329
    dec $I18
    set $I18, rx1089_bstack[$I18]
  rx1089_cut2329:
    assign rx1089_cstack, $I18
  rx1089_jump2328:
    jump $I19
  rx1089_done2325:
    rx1089_cur."!cursor_fail"()
    .return (rx1089_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_409_1361734139.417") :anon :lex :outer("cuid_129_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1146
    .local pmc fb_tmp_148 
    find_dynamic_lex $P5001, "$*INVOCANT_OK"
    unless_null $P5001, fallback2336
    nqp_get_sc_object $P5003, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5002, $P5003
    set fb_tmp_148, $P5002
    repr_defined $I5001, fb_tmp_148
    unless $I5001 goto if1092_else2337 
    set $P5004, fb_tmp_148["$INVOCANT_OK"]
    set $P5006, $P5004
    goto if1092_end2338
  if1092_else2337:
    null $P5005
    set $P5006, $P5005
  if1092_end2338:
    unless_null $P5006, vivi_10932339
    nqp_get_sc_object $P5007, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5006, $P5007
  vivi_10932339:
    unless_null $P5006, vivi_10942340
    die "Contextual $*INVOCANT_OK not found"
    box $P5008, "Contextual $*INVOCANT_OK not found"
    set $P5006, $P5008
  vivi_10942340:
    set $P5001, $P5006
  fallback2336:
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_130_1361734139.417") :anon :lex :outer("cuid_129_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1104_start
    .local string rx1104_tgt
    .local int rx1104_pos
    .local int rx1104_off
    .local int rx1104_eos
    .local int rx1104_rep
    .local pmc rx1104_cur
    .local pmc rx1104_curclass
    .local pmc rx1104_bstack
    .local pmc rx1104_cstack
    rx1104_start = self."!cursor_start_all"()
    set rx1104_cur, rx1104_start[0]
    set rx1104_tgt, rx1104_start[1]
    set rx1104_pos, rx1104_start[2]
    set rx1104_curclass, rx1104_start[3]
    set rx1104_bstack, rx1104_start[4]
    set $I19, rx1104_start[5]
    store_lex unicode:"$\x{a2}", rx1104_cur
    length rx1104_eos, rx1104_tgt
    eq $I19, 1, rx1104_restart2356
    gt rx1104_pos, rx1104_eos, rx1104_fail2357
    repr_get_attr_int $I11, self, rx1104_curclass, "$!from"
    ne $I11, -1, rxscan1105_done2363
    goto rxscan1105_scan2362
  rxscan1105_loop2361:
    inc rx1104_pos
    gt rx1104_pos, rx1104_eos, rx1104_fail2357
    repr_bind_attr_int rx1104_cur, rx1104_curclass, "$!from", rx1104_pos
  rxscan1105_scan2362:
    nqp_rxmark rx1104_bstack, rxscan1105_loop2361, rx1104_pos, 0
  rxscan1105_done2363:
    nqp_rxmark rx1104_bstack, rxquantr1106_done2365, rx1104_pos, 0
  rxquantr1106_loop2364:
    ge rx1104_pos, rx1104_eos, rx1104_fail2357
    is_cclass $I11, .CCLASS_WHITESPACE, rx1104_tgt, rx1104_pos
    unless $I11, rx1104_fail2357
    add rx1104_pos, 1
    nqp_rxpeek $I19, rx1104_bstack, rxquantr1106_done2365
    inc $I19
    inc $I19
    set rx1104_rep, rx1104_bstack[$I19]
    nqp_rxcommit rx1104_bstack, rxquantr1106_done2365
    inc rx1104_rep
    nqp_rxmark rx1104_bstack, rxquantr1106_done2365, rx1104_pos, rx1104_rep
    goto rxquantr1106_loop2364
  rxquantr1106_done2365:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1107_02367
    nqp_push_label $P11, alt1107_12368
    nqp_rxmark rx1104_bstack, alt1107_end2366, -1, 0
    rx1104_cur."!alt"(rx1104_pos, "alt_nfa__25_1361734141.868", $P11)
    goto rx1104_fail2357
  alt1107_02367:
    add $I11, rx1104_pos, 1
    gt $I11, rx1104_eos, rx1104_fail2357
    substr $S10, rx1104_tgt, rx1104_pos, 1
    ne $S10, ucs4:")", rx1104_fail2357
    add rx1104_pos, 1
    goto alt1107_end2366
  alt1107_12368:
    add $I11, rx1104_pos, 1
    gt $I11, rx1104_eos, rx1104_fail2357
    substr $S10, rx1104_tgt, rx1104_pos, 1
    ne $S10, ucs4:"{", rx1104_fail2357
    add rx1104_pos, 1
    goto alt1107_end2366
  alt1107_end2366:
    nqp_rxcommit rx1104_bstack, alt1107_end2366
    rx1104_cur."!cursor_pass"(rx1104_pos, 'backtrack'=>1)
    .return (rx1104_cur)
  rx1104_restart2356:
    repr_get_attr_obj rx1104_cstack, rx1104_cur, rx1104_curclass, "$!cstack"
  rx1104_fail2357:
    unless rx1104_bstack, rx1104_done2355
    pop $I19, rx1104_bstack
    if_null rx1104_cstack, rx1104_cstack_done2360
    unless rx1104_cstack, rx1104_cstack_done2360
    dec $I19
    set $P11, rx1104_cstack[$I19]
  rx1104_cstack_done2360:
    pop rx1104_rep, rx1104_bstack
    pop rx1104_pos, rx1104_bstack
    pop $I19, rx1104_bstack
    lt rx1104_pos, -1, rx1104_done2355
    lt rx1104_pos, 0, rx1104_fail2357
    eq $I19, 0, rx1104_fail2357
    nqp_islist $I20, rx1104_cstack
    unless $I20, rx1104_jump2358
    elements $I18, rx1104_bstack
    le $I18, 0, rx1104_cut2359
    dec $I18
    set $I18, rx1104_bstack[$I18]
  rx1104_cut2359:
    assign rx1104_cstack, $I18
  rx1104_jump2358:
    jump $I19
  rx1104_done2355:
    rx1104_cur."!cursor_fail"()
    .return (rx1104_cur) 
.end
.HLL "nqp"
.namespace []
.sub "parameter" :subid("cuid_131_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1150
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1109_start
    .local string rx1109_tgt
    .local int rx1109_pos
    .local int rx1109_off
    .local int rx1109_eos
    .local int rx1109_rep
    .local pmc rx1109_cur
    .local pmc rx1109_curclass
    .local pmc rx1109_bstack
    .local pmc rx1109_cstack
    rx1109_start = self."!cursor_start_all"()
    set rx1109_cur, rx1109_start[0]
    set rx1109_tgt, rx1109_start[1]
    set rx1109_pos, rx1109_start[2]
    set rx1109_curclass, rx1109_start[3]
    set rx1109_bstack, rx1109_start[4]
    set $I19, rx1109_start[5]
    store_lex unicode:"$\x{a2}", rx1109_cur
    length rx1109_eos, rx1109_tgt
    eq $I19, 1, rx1109_restart2372
    gt rx1109_pos, rx1109_eos, rx1109_fail2373
    repr_get_attr_int $I11, self, rx1109_curclass, "$!from"
    ne $I11, -1, rxscan1110_done2379
    goto rxscan1110_scan2378
  rxscan1110_loop2377:
    inc rx1109_pos
    gt rx1109_pos, rx1109_eos, rx1109_fail2373
    repr_bind_attr_int rx1109_cur, rx1109_curclass, "$!from", rx1109_pos
  rxscan1110_scan2378:
    nqp_rxmark rx1109_bstack, rxscan1110_loop2377, rx1109_pos, 0
  rxscan1110_done2379:
    nqp_rxmark rx1109_bstack, rxquantr1111_done2381, rx1109_pos, 0
  rxquantr1111_loop2380:
    repr_bind_attr_int rx1109_cur, rx1109_curclass, "$!pos", rx1109_pos
    $P11 = rx1109_cur."typename"()
    repr_get_attr_int $I11, $P11, rx1109_curclass, "$!pos"
    lt $I11, 0, rx1109_fail2373
    nqp_rxmark rx1109_bstack, rxsubrule1112_pass2382, -1, 0
  rxsubrule1112_pass2382:
    rx1109_cstack = rx1109_cur."!cursor_capture"($P11, "typename")
    repr_get_attr_int rx1109_pos, $P11, rx1109_curclass, "$!pos"
    nqp_rxmark rx1109_bstack, rxquantr1113_done2384, rx1109_pos, 0
  rxquantr1113_loop2383:
    add $I11, rx1109_pos, 1
    gt $I11, rx1109_eos, rx1109_fail2373
    substr $S10, rx1109_tgt, rx1109_pos, 1
    ne $S10, ucs4:":", rx1109_fail2373
    add rx1109_pos, 1
    nqp_rxmark rx1109_bstack, rxcap1114_fail2386, rx1109_pos, 0
    ge rx1109_pos, rx1109_eos, rx1109_fail2373
    substr $S11, rx1109_tgt, rx1109_pos, 1
    index $I11, ucs4:"_DU", $S11
    lt $I11, 0, rx1109_fail2373
    inc rx1109_pos
    nqp_rxpeek $I19, rx1109_bstack, rxcap1114_fail2386
    inc $I19
    set $I11, rx1109_bstack[$I19]
    repr_bind_attr_int rx1109_cur, rx1109_curclass, "$!pos", rx1109_pos
    $P11 = rx1109_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1109_pos)
    rx1109_cstack = rx1109_cur."!cursor_capture"($P11, "definedness")
    goto rxcap1114_done2385
  rxcap1114_fail2386:
    goto rx1109_fail2373
  rxcap1114_done2385:
    nqp_rxpeek $I19, rx1109_bstack, rxquantr1113_done2384
    inc $I19
    inc $I19
    set rx1109_rep, rx1109_bstack[$I19]
    nqp_rxcommit rx1109_bstack, rxquantr1113_done2384
    inc rx1109_rep
  rxquantr1113_done2384:
    repr_bind_attr_int rx1109_cur, rx1109_curclass, "$!pos", rx1109_pos
    $P11 = rx1109_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1109_curclass, "$!pos"
    lt $I11, 0, rx1109_fail2373
    repr_get_attr_int rx1109_pos, $P11, rx1109_curclass, "$!pos"
    nqp_rxpeek $I19, rx1109_bstack, rxquantr1111_done2381
    inc $I19
    inc $I19
    set rx1109_rep, rx1109_bstack[$I19]
    nqp_rxcommit rx1109_bstack, rxquantr1111_done2381
    inc rx1109_rep
    nqp_rxmark rx1109_bstack, rxquantr1111_done2381, rx1109_pos, rx1109_rep
    goto rxquantr1111_loop2380
  rxquantr1111_done2381:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1116_02389
    nqp_push_label $P11, alt1116_12393
    nqp_rxmark rx1109_bstack, alt1116_end2388, -1, 0
    rx1109_cur."!alt"(rx1109_pos, "alt_nfa__29_1361734141.899", $P11)
    goto rx1109_fail2373
  alt1116_02389:
    nqp_rxmark rx1109_bstack, rxcap1117_fail2391, rx1109_pos, 0
    add $I11, rx1109_pos, 1
    gt $I11, rx1109_eos, rx1109_fail2373
    substr $S10, rx1109_tgt, rx1109_pos, 1
    ne $S10, ucs4:"*", rx1109_fail2373
    add rx1109_pos, 1
    nqp_rxpeek $I19, rx1109_bstack, rxcap1117_fail2391
    inc $I19
    set $I11, rx1109_bstack[$I19]
    repr_bind_attr_int rx1109_cur, rx1109_curclass, "$!pos", rx1109_pos
    $P11 = rx1109_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1109_pos)
    rx1109_cstack = rx1109_cur."!cursor_capture"($P11, "quant")
    goto rxcap1117_done2390
  rxcap1117_fail2391:
    goto rx1109_fail2373
  rxcap1117_done2390:
    repr_bind_attr_int rx1109_cur, rx1109_curclass, "$!pos", rx1109_pos
    $P11 = rx1109_cur."param_var"()
    repr_get_attr_int $I11, $P11, rx1109_curclass, "$!pos"
    lt $I11, 0, rx1109_fail2373
    nqp_rxmark rx1109_bstack, rxsubrule1118_pass2392, -1, 0
  rxsubrule1118_pass2392:
    rx1109_cstack = rx1109_cur."!cursor_capture"($P11, "param_var")
    repr_get_attr_int rx1109_pos, $P11, rx1109_curclass, "$!pos"
    goto alt1116_end2388
  alt1116_12393:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1119_02395
    nqp_push_label $P11, alt1119_12397
    nqp_rxmark rx1109_bstack, alt1119_end2394, -1, 0
    rx1109_cur."!alt"(rx1109_pos, "alt_nfa__27_1361734141.899", $P11)
    goto rx1109_fail2373
  alt1119_02395:
    repr_bind_attr_int rx1109_cur, rx1109_curclass, "$!pos", rx1109_pos
    $P11 = rx1109_cur."param_var"()
    repr_get_attr_int $I11, $P11, rx1109_curclass, "$!pos"
    lt $I11, 0, rx1109_fail2373
    nqp_rxmark rx1109_bstack, rxsubrule1120_pass2396, -1, 0
  rxsubrule1120_pass2396:
    rx1109_cstack = rx1109_cur."!cursor_capture"($P11, "param_var")
    repr_get_attr_int rx1109_pos, $P11, rx1109_curclass, "$!pos"
    goto alt1119_end2394
  alt1119_12397:
    repr_bind_attr_int rx1109_cur, rx1109_curclass, "$!pos", rx1109_pos
    $P11 = rx1109_cur."named_param"()
    repr_get_attr_int $I11, $P11, rx1109_curclass, "$!pos"
    lt $I11, 0, rx1109_fail2373
    nqp_rxmark rx1109_bstack, rxsubrule1121_pass2398, -1, 0
  rxsubrule1121_pass2398:
    rx1109_cstack = rx1109_cur."!cursor_capture"($P11, "named_param")
    repr_get_attr_int rx1109_pos, $P11, rx1109_curclass, "$!pos"
    goto alt1119_end2394
  alt1119_end2394:
    nqp_rxcommit rx1109_bstack, alt1119_end2394
    nqp_rxmark rx1109_bstack, rxcap1122_fail2400, rx1109_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1123_02402
    nqp_push_label $P11, alt1123_12403
    nqp_push_label $P11, alt1123_22404
    nqp_rxmark rx1109_bstack, alt1123_end2401, -1, 0
    rx1109_cur."!alt"(rx1109_pos, "alt_nfa__28_1361734141.899", $P11)
    goto rx1109_fail2373
  alt1123_02402:
    add $I11, rx1109_pos, 1
    gt $I11, rx1109_eos, rx1109_fail2373
    substr $S10, rx1109_tgt, rx1109_pos, 1
    ne $S10, ucs4:"?", rx1109_fail2373
    add rx1109_pos, 1
    goto alt1123_end2401
  alt1123_12403:
    add $I11, rx1109_pos, 1
    gt $I11, rx1109_eos, rx1109_fail2373
    substr $S10, rx1109_tgt, rx1109_pos, 1
    ne $S10, ucs4:"!", rx1109_fail2373
    add rx1109_pos, 1
    goto alt1123_end2401
  alt1123_22404:
    goto alt1123_end2401
  alt1123_end2401:
    nqp_rxcommit rx1109_bstack, alt1123_end2401
    nqp_rxpeek $I19, rx1109_bstack, rxcap1122_fail2400
    inc $I19
    set $I11, rx1109_bstack[$I19]
    repr_bind_attr_int rx1109_cur, rx1109_curclass, "$!pos", rx1109_pos
    $P11 = rx1109_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1109_pos)
    rx1109_cstack = rx1109_cur."!cursor_capture"($P11, "quant")
    goto rxcap1122_done2399
  rxcap1122_fail2400:
    goto rx1109_fail2373
  rxcap1122_done2399:
    goto alt1116_end2388
  alt1116_end2388:
    nqp_rxcommit rx1109_bstack, alt1116_end2388
    nqp_rxmark rx1109_bstack, rxquantr1125_done2407, rx1109_pos, 0
  rxquantr1125_loop2406:
    repr_bind_attr_int rx1109_cur, rx1109_curclass, "$!pos", rx1109_pos
    $P11 = rx1109_cur."default_value"()
    repr_get_attr_int $I11, $P11, rx1109_curclass, "$!pos"
    lt $I11, 0, rx1109_fail2373
    goto rxsubrule1126_pass2408
  rxsubrule1126_back2409:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1109_curclass, "$!pos"
    lt $I11, 0, rx1109_fail2373
  rxsubrule1126_pass2408:
    rx1109_cstack = rx1109_cur."!cursor_capture"($P11, "default_value")
    set_addr $I11, rxsubrule1126_back2409
    push rx1109_bstack, $I11
    push rx1109_bstack, 0
    push rx1109_bstack, rx1109_pos
    elements $I11, rx1109_cstack
    push rx1109_bstack, $I11
    repr_get_attr_int rx1109_pos, $P11, rx1109_curclass, "$!pos"
    nqp_rxpeek $I19, rx1109_bstack, rxquantr1125_done2407
    inc $I19
    inc $I19
    set rx1109_rep, rx1109_bstack[$I19]
    nqp_rxcommit rx1109_bstack, rxquantr1125_done2407
    inc rx1109_rep
  rxquantr1125_done2407:
    rx1109_cur."!cursor_pass"(rx1109_pos, "parameter", 'backtrack'=>1)
    .return (rx1109_cur)
  rx1109_restart2372:
    repr_get_attr_obj rx1109_cstack, rx1109_cur, rx1109_curclass, "$!cstack"
  rx1109_fail2373:
    unless rx1109_bstack, rx1109_done2371
    pop $I19, rx1109_bstack
    if_null rx1109_cstack, rx1109_cstack_done2376
    unless rx1109_cstack, rx1109_cstack_done2376
    dec $I19
    set $P11, rx1109_cstack[$I19]
  rx1109_cstack_done2376:
    pop rx1109_rep, rx1109_bstack
    pop rx1109_pos, rx1109_bstack
    pop $I19, rx1109_bstack
    lt rx1109_pos, -1, rx1109_done2371
    lt rx1109_pos, 0, rx1109_fail2373
    eq $I19, 0, rx1109_fail2373
    nqp_islist $I20, rx1109_cstack
    unless $I20, rx1109_jump2374
    elements $I18, rx1109_bstack
    le $I18, 0, rx1109_cut2375
    dec $I18
    set $I18, rx1109_bstack[$I18]
  rx1109_cut2375:
    assign rx1109_cstack, $I18
  rx1109_jump2374:
    jump $I19
  rx1109_done2371:
    rx1109_cur."!cursor_fail"()
    .return (rx1109_cur) 
.end
.HLL "nqp"
.namespace []
.sub "param_var" :subid("cuid_132_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1159
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1127_start
    .local string rx1127_tgt
    .local int rx1127_pos
    .local int rx1127_off
    .local int rx1127_eos
    .local int rx1127_rep
    .local pmc rx1127_cur
    .local pmc rx1127_curclass
    .local pmc rx1127_bstack
    .local pmc rx1127_cstack
    rx1127_start = self."!cursor_start_all"()
    set rx1127_cur, rx1127_start[0]
    set rx1127_tgt, rx1127_start[1]
    set rx1127_pos, rx1127_start[2]
    set rx1127_curclass, rx1127_start[3]
    set rx1127_bstack, rx1127_start[4]
    set $I19, rx1127_start[5]
    store_lex unicode:"$\x{a2}", rx1127_cur
    length rx1127_eos, rx1127_tgt
    eq $I19, 1, rx1127_restart2412
    gt rx1127_pos, rx1127_eos, rx1127_fail2413
    repr_get_attr_int $I11, self, rx1127_curclass, "$!from"
    ne $I11, -1, rxscan1128_done2419
    goto rxscan1128_scan2418
  rxscan1128_loop2417:
    inc rx1127_pos
    gt rx1127_pos, rx1127_eos, rx1127_fail2413
    repr_bind_attr_int rx1127_cur, rx1127_curclass, "$!from", rx1127_pos
  rxscan1128_scan2418:
    nqp_rxmark rx1127_bstack, rxscan1128_loop2417, rx1127_pos, 0
  rxscan1128_done2419:
    repr_bind_attr_int rx1127_cur, rx1127_curclass, "$!pos", rx1127_pos
    $P11 = rx1127_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx1127_curclass, "$!pos"
    lt $I11, 0, rx1127_fail2413
    nqp_rxmark rx1127_bstack, rxsubrule1129_pass2420, -1, 0
  rxsubrule1129_pass2420:
    rx1127_cstack = rx1127_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx1127_pos, $P11, rx1127_curclass, "$!pos"
    nqp_rxmark rx1127_bstack, rxquantr1130_done2422, rx1127_pos, 0
  rxquantr1130_loop2421:
    repr_bind_attr_int rx1127_cur, rx1127_curclass, "$!pos", rx1127_pos
    $P11 = rx1127_cur."twigil"()
    repr_get_attr_int $I11, $P11, rx1127_curclass, "$!pos"
    lt $I11, 0, rx1127_fail2413
    goto rxsubrule1131_pass2423
  rxsubrule1131_back2424:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1127_curclass, "$!pos"
    lt $I11, 0, rx1127_fail2413
  rxsubrule1131_pass2423:
    rx1127_cstack = rx1127_cur."!cursor_capture"($P11, "twigil")
    set_addr $I11, rxsubrule1131_back2424
    push rx1127_bstack, $I11
    push rx1127_bstack, 0
    push rx1127_bstack, rx1127_pos
    elements $I11, rx1127_cstack
    push rx1127_bstack, $I11
    repr_get_attr_int rx1127_pos, $P11, rx1127_curclass, "$!pos"
    nqp_rxpeek $I19, rx1127_bstack, rxquantr1130_done2422
    inc $I19
    inc $I19
    set rx1127_rep, rx1127_bstack[$I19]
    nqp_rxcommit rx1127_bstack, rxquantr1130_done2422
    inc rx1127_rep
  rxquantr1130_done2422:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1132_02426
    nqp_push_label $P11, alt1132_12428
    nqp_rxmark rx1127_bstack, alt1132_end2425, -1, 0
    rx1127_cur."!alt"(rx1127_pos, "alt_nfa__30_1361734141.91", $P11)
    goto rx1127_fail2413
  alt1132_02426:
    repr_bind_attr_int rx1127_cur, rx1127_curclass, "$!pos", rx1127_pos
    $P11 = rx1127_cur."ident"()
    repr_get_attr_int $I11, $P11, rx1127_curclass, "$!pos"
    lt $I11, 0, rx1127_fail2413
    nqp_rxmark rx1127_bstack, rxsubrule1133_pass2427, -1, 0
  rxsubrule1133_pass2427:
    rx1127_cstack = rx1127_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx1127_pos, $P11, rx1127_curclass, "$!pos"
    goto alt1132_end2425
  alt1132_12428:
    nqp_rxmark rx1127_bstack, rxcap1134_fail2430, rx1127_pos, 0
    ge rx1127_pos, rx1127_eos, rx1127_fail2413
    substr $S11, rx1127_tgt, rx1127_pos, 1
    index $I11, ucs4:"/!", $S11
    lt $I11, 0, rx1127_fail2413
    inc rx1127_pos
    nqp_rxpeek $I19, rx1127_bstack, rxcap1134_fail2430
    inc $I19
    set $I11, rx1127_bstack[$I19]
    repr_bind_attr_int rx1127_cur, rx1127_curclass, "$!pos", rx1127_pos
    $P11 = rx1127_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1127_pos)
    rx1127_cstack = rx1127_cur."!cursor_capture"($P11, "name")
    goto rxcap1134_done2429
  rxcap1134_fail2430:
    goto rx1127_fail2413
  rxcap1134_done2429:
    goto alt1132_end2425
  alt1132_end2425:
    nqp_rxcommit rx1127_bstack, alt1132_end2425
    rx1127_cur."!cursor_pass"(rx1127_pos, "param_var", 'backtrack'=>1)
    .return (rx1127_cur)
  rx1127_restart2412:
    repr_get_attr_obj rx1127_cstack, rx1127_cur, rx1127_curclass, "$!cstack"
  rx1127_fail2413:
    unless rx1127_bstack, rx1127_done2411
    pop $I19, rx1127_bstack
    if_null rx1127_cstack, rx1127_cstack_done2416
    unless rx1127_cstack, rx1127_cstack_done2416
    dec $I19
    set $P11, rx1127_cstack[$I19]
  rx1127_cstack_done2416:
    pop rx1127_rep, rx1127_bstack
    pop rx1127_pos, rx1127_bstack
    pop $I19, rx1127_bstack
    lt rx1127_pos, -1, rx1127_done2411
    lt rx1127_pos, 0, rx1127_fail2413
    eq $I19, 0, rx1127_fail2413
    nqp_islist $I20, rx1127_cstack
    unless $I20, rx1127_jump2414
    elements $I18, rx1127_bstack
    le $I18, 0, rx1127_cut2415
    dec $I18
    set $I18, rx1127_bstack[$I18]
  rx1127_cut2415:
    assign rx1127_cstack, $I18
  rx1127_jump2414:
    jump $I19
  rx1127_done2411:
    rx1127_cur."!cursor_fail"()
    .return (rx1127_cur) 
.end
.HLL "nqp"
.namespace []
.sub "named_param" :subid("cuid_133_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1164
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1135_start
    .local string rx1135_tgt
    .local int rx1135_pos
    .local int rx1135_off
    .local int rx1135_eos
    .local int rx1135_rep
    .local pmc rx1135_cur
    .local pmc rx1135_curclass
    .local pmc rx1135_bstack
    .local pmc rx1135_cstack
    rx1135_start = self."!cursor_start_all"()
    set rx1135_cur, rx1135_start[0]
    set rx1135_tgt, rx1135_start[1]
    set rx1135_pos, rx1135_start[2]
    set rx1135_curclass, rx1135_start[3]
    set rx1135_bstack, rx1135_start[4]
    set $I19, rx1135_start[5]
    store_lex unicode:"$\x{a2}", rx1135_cur
    length rx1135_eos, rx1135_tgt
    eq $I19, 1, rx1135_restart2433
    gt rx1135_pos, rx1135_eos, rx1135_fail2434
    repr_get_attr_int $I11, self, rx1135_curclass, "$!from"
    ne $I11, -1, rxscan1136_done2440
    goto rxscan1136_scan2439
  rxscan1136_loop2438:
    inc rx1135_pos
    gt rx1135_pos, rx1135_eos, rx1135_fail2434
    repr_bind_attr_int rx1135_cur, rx1135_curclass, "$!from", rx1135_pos
  rxscan1136_scan2439:
    nqp_rxmark rx1135_bstack, rxscan1136_loop2438, rx1135_pos, 0
  rxscan1136_done2440:
    add $I11, rx1135_pos, 1
    gt $I11, rx1135_eos, rx1135_fail2434
    substr $S10, rx1135_tgt, rx1135_pos, 1
    ne $S10, ucs4:":", rx1135_fail2434
    add rx1135_pos, 1
    repr_bind_attr_int rx1135_cur, rx1135_curclass, "$!pos", rx1135_pos
    $P11 = rx1135_cur."param_var"()
    repr_get_attr_int $I11, $P11, rx1135_curclass, "$!pos"
    lt $I11, 0, rx1135_fail2434
    nqp_rxmark rx1135_bstack, rxsubrule1137_pass2441, -1, 0
  rxsubrule1137_pass2441:
    rx1135_cstack = rx1135_cur."!cursor_capture"($P11, "param_var")
    repr_get_attr_int rx1135_pos, $P11, rx1135_curclass, "$!pos"
    rx1135_cur."!cursor_pass"(rx1135_pos, "named_param", 'backtrack'=>1)
    .return (rx1135_cur)
  rx1135_restart2433:
    repr_get_attr_obj rx1135_cstack, rx1135_cur, rx1135_curclass, "$!cstack"
  rx1135_fail2434:
    unless rx1135_bstack, rx1135_done2432
    pop $I19, rx1135_bstack
    if_null rx1135_cstack, rx1135_cstack_done2437
    unless rx1135_cstack, rx1135_cstack_done2437
    dec $I19
    set $P11, rx1135_cstack[$I19]
  rx1135_cstack_done2437:
    pop rx1135_rep, rx1135_bstack
    pop rx1135_pos, rx1135_bstack
    pop $I19, rx1135_bstack
    lt rx1135_pos, -1, rx1135_done2432
    lt rx1135_pos, 0, rx1135_fail2434
    eq $I19, 0, rx1135_fail2434
    nqp_islist $I20, rx1135_cstack
    unless $I20, rx1135_jump2435
    elements $I18, rx1135_bstack
    le $I18, 0, rx1135_cut2436
    dec $I18
    set $I18, rx1135_bstack[$I18]
  rx1135_cut2436:
    assign rx1135_cstack, $I18
  rx1135_jump2435:
    jump $I19
  rx1135_done2432:
    rx1135_cur."!cursor_fail"()
    .return (rx1135_cur) 
.end
.HLL "nqp"
.namespace []
.sub "default_value" :subid("cuid_134_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1168
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1138_start
    .local string rx1138_tgt
    .local int rx1138_pos
    .local int rx1138_off
    .local int rx1138_eos
    .local int rx1138_rep
    .local pmc rx1138_cur
    .local pmc rx1138_curclass
    .local pmc rx1138_bstack
    .local pmc rx1138_cstack
    rx1138_start = self."!cursor_start_all"()
    set rx1138_cur, rx1138_start[0]
    set rx1138_tgt, rx1138_start[1]
    set rx1138_pos, rx1138_start[2]
    set rx1138_curclass, rx1138_start[3]
    set rx1138_bstack, rx1138_start[4]
    set $I19, rx1138_start[5]
    store_lex unicode:"$\x{a2}", rx1138_cur
    length rx1138_eos, rx1138_tgt
    eq $I19, 1, rx1138_restart2444
    gt rx1138_pos, rx1138_eos, rx1138_fail2445
    repr_get_attr_int $I11, self, rx1138_curclass, "$!from"
    ne $I11, -1, rxscan1139_done2451
    goto rxscan1139_scan2450
  rxscan1139_loop2449:
    inc rx1138_pos
    gt rx1138_pos, rx1138_eos, rx1138_fail2445
    repr_bind_attr_int rx1138_cur, rx1138_curclass, "$!from", rx1138_pos
  rxscan1139_scan2450:
    nqp_rxmark rx1138_bstack, rxscan1139_loop2449, rx1138_pos, 0
  rxscan1139_done2451:
    repr_bind_attr_int rx1138_cur, rx1138_curclass, "$!pos", rx1138_pos
    $P11 = rx1138_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2445
    repr_get_attr_int rx1138_pos, $P11, rx1138_curclass, "$!pos"
    add $I11, rx1138_pos, 1
    gt $I11, rx1138_eos, rx1138_fail2445
    substr $S10, rx1138_tgt, rx1138_pos, 1
    ne $S10, ucs4:"=", rx1138_fail2445
    add rx1138_pos, 1
    repr_bind_attr_int rx1138_cur, rx1138_curclass, "$!pos", rx1138_pos
    $P11 = rx1138_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2445
    repr_get_attr_int rx1138_pos, $P11, rx1138_curclass, "$!pos"
    repr_bind_attr_int rx1138_cur, rx1138_curclass, "$!pos", rx1138_pos
    $P11 = rx1138_cur."EXPR"("i=")
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2445
    nqp_rxmark rx1138_bstack, rxsubrule1142_pass2454, -1, 0
  rxsubrule1142_pass2454:
    rx1138_cstack = rx1138_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx1138_pos, $P11, rx1138_curclass, "$!pos"
    repr_bind_attr_int rx1138_cur, rx1138_curclass, "$!pos", rx1138_pos
    $P11 = rx1138_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1138_curclass, "$!pos"
    lt $I11, 0, rx1138_fail2445
    repr_get_attr_int rx1138_pos, $P11, rx1138_curclass, "$!pos"
    rx1138_cur."!cursor_pass"(rx1138_pos, "default_value", 'backtrack'=>1)
    .return (rx1138_cur)
  rx1138_restart2444:
    repr_get_attr_obj rx1138_cstack, rx1138_cur, rx1138_curclass, "$!cstack"
  rx1138_fail2445:
    unless rx1138_bstack, rx1138_done2443
    pop $I19, rx1138_bstack
    if_null rx1138_cstack, rx1138_cstack_done2448
    unless rx1138_cstack, rx1138_cstack_done2448
    dec $I19
    set $P11, rx1138_cstack[$I19]
  rx1138_cstack_done2448:
    pop rx1138_rep, rx1138_bstack
    pop rx1138_pos, rx1138_bstack
    pop $I19, rx1138_bstack
    lt rx1138_pos, -1, rx1138_done2443
    lt rx1138_pos, 0, rx1138_fail2445
    eq $I19, 0, rx1138_fail2445
    nqp_islist $I20, rx1138_cstack
    unless $I20, rx1138_jump2446
    elements $I18, rx1138_bstack
    le $I18, 0, rx1138_cut2447
    dec $I18
    set $I18, rx1138_bstack[$I18]
  rx1138_cut2447:
    assign rx1138_cstack, $I18
  rx1138_jump2446:
    jump $I19
  rx1138_done2443:
    rx1138_cur."!cursor_fail"()
    .return (rx1138_cur) 
.end
.HLL "nqp"
.namespace []
.sub "trait" :subid("cuid_135_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1170
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1144_start
    .local string rx1144_tgt
    .local int rx1144_pos
    .local int rx1144_off
    .local int rx1144_eos
    .local int rx1144_rep
    .local pmc rx1144_cur
    .local pmc rx1144_curclass
    .local pmc rx1144_bstack
    .local pmc rx1144_cstack
    rx1144_start = self."!cursor_start_all"()
    set rx1144_cur, rx1144_start[0]
    set rx1144_tgt, rx1144_start[1]
    set rx1144_pos, rx1144_start[2]
    set rx1144_curclass, rx1144_start[3]
    set rx1144_bstack, rx1144_start[4]
    set $I19, rx1144_start[5]
    store_lex unicode:"$\x{a2}", rx1144_cur
    length rx1144_eos, rx1144_tgt
    eq $I19, 1, rx1144_restart2458
    gt rx1144_pos, rx1144_eos, rx1144_fail2459
    repr_get_attr_int $I11, self, rx1144_curclass, "$!from"
    ne $I11, -1, rxscan1145_done2465
    goto rxscan1145_scan2464
  rxscan1145_loop2463:
    inc rx1144_pos
    gt rx1144_pos, rx1144_eos, rx1144_fail2459
    repr_bind_attr_int rx1144_cur, rx1144_curclass, "$!from", rx1144_pos
  rxscan1145_scan2464:
    nqp_rxmark rx1144_bstack, rxscan1145_loop2463, rx1144_pos, 0
  rxscan1145_done2465:
    repr_bind_attr_int rx1144_cur, rx1144_curclass, "$!pos", rx1144_pos
    $P11 = rx1144_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1144_curclass, "$!pos"
    lt $I11, 0, rx1144_fail2459
    repr_get_attr_int rx1144_pos, $P11, rx1144_curclass, "$!pos"
    repr_bind_attr_int rx1144_cur, rx1144_curclass, "$!pos", rx1144_pos
    $P11 = rx1144_cur."trait_mod"()
    repr_get_attr_int $I11, $P11, rx1144_curclass, "$!pos"
    lt $I11, 0, rx1144_fail2459
    nqp_rxmark rx1144_bstack, rxsubrule1147_pass2467, -1, 0
  rxsubrule1147_pass2467:
    rx1144_cstack = rx1144_cur."!cursor_capture"($P11, "trait_mod")
    repr_get_attr_int rx1144_pos, $P11, rx1144_curclass, "$!pos"
    repr_bind_attr_int rx1144_cur, rx1144_curclass, "$!pos", rx1144_pos
    $P11 = rx1144_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1144_curclass, "$!pos"
    lt $I11, 0, rx1144_fail2459
    repr_get_attr_int rx1144_pos, $P11, rx1144_curclass, "$!pos"
    rx1144_cur."!cursor_pass"(rx1144_pos, "trait", 'backtrack'=>1)
    .return (rx1144_cur)
  rx1144_restart2458:
    repr_get_attr_obj rx1144_cstack, rx1144_cur, rx1144_curclass, "$!cstack"
  rx1144_fail2459:
    unless rx1144_bstack, rx1144_done2457
    pop $I19, rx1144_bstack
    if_null rx1144_cstack, rx1144_cstack_done2462
    unless rx1144_cstack, rx1144_cstack_done2462
    dec $I19
    set $P11, rx1144_cstack[$I19]
  rx1144_cstack_done2462:
    pop rx1144_rep, rx1144_bstack
    pop rx1144_pos, rx1144_bstack
    pop $I19, rx1144_bstack
    lt rx1144_pos, -1, rx1144_done2457
    lt rx1144_pos, 0, rx1144_fail2459
    eq $I19, 0, rx1144_fail2459
    nqp_islist $I20, rx1144_cstack
    unless $I20, rx1144_jump2460
    elements $I18, rx1144_bstack
    le $I18, 0, rx1144_cut2461
    dec $I18
    set $I18, rx1144_bstack[$I18]
  rx1144_cut2461:
    assign rx1144_cstack, $I18
  rx1144_jump2460:
    jump $I19
  rx1144_done2457:
    rx1144_cur."!cursor_fail"()
    .return (rx1144_cur) 
.end
.HLL "nqp"
.namespace []
.sub "trait_mod" :subid("cuid_136_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1172
    .param pmc self 
    $P5001 = self."!protoregex"("trait_mod")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "trait_mod:sym<is>" :subid("cuid_137_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1173
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1149_start
    .local string rx1149_tgt
    .local int rx1149_pos
    .local int rx1149_off
    .local int rx1149_eos
    .local int rx1149_rep
    .local pmc rx1149_cur
    .local pmc rx1149_curclass
    .local pmc rx1149_bstack
    .local pmc rx1149_cstack
    rx1149_start = self."!cursor_start_all"()
    set rx1149_cur, rx1149_start[0]
    set rx1149_tgt, rx1149_start[1]
    set rx1149_pos, rx1149_start[2]
    set rx1149_curclass, rx1149_start[3]
    set rx1149_bstack, rx1149_start[4]
    set $I19, rx1149_start[5]
    store_lex unicode:"$\x{a2}", rx1149_cur
    length rx1149_eos, rx1149_tgt
    eq $I19, 1, rx1149_restart2471
    gt rx1149_pos, rx1149_eos, rx1149_fail2472
    repr_get_attr_int $I11, self, rx1149_curclass, "$!from"
    ne $I11, -1, rxscan1150_done2478
    goto rxscan1150_scan2477
  rxscan1150_loop2476:
    inc rx1149_pos
    gt rx1149_pos, rx1149_eos, rx1149_fail2472
    repr_bind_attr_int rx1149_cur, rx1149_curclass, "$!from", rx1149_pos
  rxscan1150_scan2477:
    nqp_rxmark rx1149_bstack, rxscan1150_loop2476, rx1149_pos, 0
  rxscan1150_done2478:
    nqp_rxmark rx1149_bstack, rxcap1151_fail2480, rx1149_pos, 0
    add $I11, rx1149_pos, 2
    gt $I11, rx1149_eos, rx1149_fail2472
    substr $S10, rx1149_tgt, rx1149_pos, 2
    ne $S10, ucs4:"is", rx1149_fail2472
    add rx1149_pos, 2
    nqp_rxpeek $I19, rx1149_bstack, rxcap1151_fail2480
    inc $I19
    set $I11, rx1149_bstack[$I19]
    repr_bind_attr_int rx1149_cur, rx1149_curclass, "$!pos", rx1149_pos
    $P11 = rx1149_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1149_pos)
    rx1149_cstack = rx1149_cur."!cursor_capture"($P11, "sym")
    goto rxcap1151_done2479
  rxcap1151_fail2480:
    goto rx1149_fail2472
  rxcap1151_done2479:
    repr_bind_attr_int rx1149_cur, rx1149_curclass, "$!pos", rx1149_pos
    $P11 = rx1149_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1149_curclass, "$!pos"
    lt $I11, 0, rx1149_fail2472
    repr_get_attr_int rx1149_pos, $P11, rx1149_curclass, "$!pos"
    repr_bind_attr_int rx1149_cur, rx1149_curclass, "$!pos", rx1149_pos
    $P11 = rx1149_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1149_curclass, "$!pos"
    lt $I11, 0, rx1149_fail2472
    nqp_rxmark rx1149_bstack, rxsubrule1153_pass2482, -1, 0
  rxsubrule1153_pass2482:
    rx1149_cstack = rx1149_cur."!cursor_capture"($P11, "longname")
    repr_get_attr_int rx1149_pos, $P11, rx1149_curclass, "$!pos"
    nqp_rxmark rx1149_bstack, rxquantr1154_done2484, rx1149_pos, 0
  rxquantr1154_loop2483:
    repr_bind_attr_int rx1149_cur, rx1149_curclass, "$!pos", rx1149_pos
    $P11 = rx1149_cur."circumfix"()
    repr_get_attr_int $I11, $P11, rx1149_curclass, "$!pos"
    lt $I11, 0, rx1149_fail2472
    goto rxsubrule1155_pass2485
  rxsubrule1155_back2486:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1149_curclass, "$!pos"
    lt $I11, 0, rx1149_fail2472
  rxsubrule1155_pass2485:
    rx1149_cstack = rx1149_cur."!cursor_capture"($P11, "circumfix")
    set_addr $I11, rxsubrule1155_back2486
    push rx1149_bstack, $I11
    push rx1149_bstack, 0
    push rx1149_bstack, rx1149_pos
    elements $I11, rx1149_cstack
    push rx1149_bstack, $I11
    repr_get_attr_int rx1149_pos, $P11, rx1149_curclass, "$!pos"
    nqp_rxpeek $I19, rx1149_bstack, rxquantr1154_done2484
    inc $I19
    inc $I19
    set rx1149_rep, rx1149_bstack[$I19]
    nqp_rxcommit rx1149_bstack, rxquantr1154_done2484
    inc rx1149_rep
  rxquantr1154_done2484:
    repr_bind_attr_int rx1149_cur, rx1149_curclass, "$!pos", rx1149_pos
    $P11 = rx1149_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1149_curclass, "$!pos"
    lt $I11, 0, rx1149_fail2472
    repr_get_attr_int rx1149_pos, $P11, rx1149_curclass, "$!pos"
    rx1149_cur."!cursor_pass"(rx1149_pos, "trait_mod:sym<is>", 'backtrack'=>1)
    .return (rx1149_cur)
  rx1149_restart2471:
    repr_get_attr_obj rx1149_cstack, rx1149_cur, rx1149_curclass, "$!cstack"
  rx1149_fail2472:
    unless rx1149_bstack, rx1149_done2470
    pop $I19, rx1149_bstack
    if_null rx1149_cstack, rx1149_cstack_done2475
    unless rx1149_cstack, rx1149_cstack_done2475
    dec $I19
    set $P11, rx1149_cstack[$I19]
  rx1149_cstack_done2475:
    pop rx1149_rep, rx1149_bstack
    pop rx1149_pos, rx1149_bstack
    pop $I19, rx1149_bstack
    lt rx1149_pos, -1, rx1149_done2470
    lt rx1149_pos, 0, rx1149_fail2472
    eq $I19, 0, rx1149_fail2472
    nqp_islist $I20, rx1149_cstack
    unless $I20, rx1149_jump2473
    elements $I18, rx1149_bstack
    le $I18, 0, rx1149_cut2474
    dec $I18
    set $I18, rx1149_bstack[$I18]
  rx1149_cut2474:
    assign rx1149_cstack, $I18
  rx1149_jump2473:
    jump $I19
  rx1149_done2470:
    rx1149_cur."!cursor_fail"()
    .return (rx1149_cur) 
.end
.HLL "nqp"
.namespace []
.sub "regex_declarator" :subid("cuid_138_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1175
    .param pmc _lex_param_0 
    .const 'Sub' $P5012 = 'cuid_410_1361734139.417' 
    capture_lex $P5012 
    .lex "%*RX", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_149 
    .local pmc pkg_viv_tmp_23 
    new $P5001, 'Hash'
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1157_start
    .local string rx1157_tgt
    .local int rx1157_pos
    .local int rx1157_off
    .local int rx1157_eos
    .local int rx1157_rep
    .local pmc rx1157_cur
    .local pmc rx1157_curclass
    .local pmc rx1157_bstack
    .local pmc rx1157_cstack
    rx1157_start = self."!cursor_start_all"()
    set rx1157_cur, rx1157_start[0]
    set rx1157_tgt, rx1157_start[1]
    set rx1157_pos, rx1157_start[2]
    set rx1157_curclass, rx1157_start[3]
    set rx1157_bstack, rx1157_start[4]
    set $I19, rx1157_start[5]
    store_lex unicode:"$\x{a2}", rx1157_cur
    length rx1157_eos, rx1157_tgt
    eq $I19, 1, rx1157_restart2490
    gt rx1157_pos, rx1157_eos, rx1157_fail2491
    repr_get_attr_int $I11, self, rx1157_curclass, "$!from"
    ne $I11, -1, rxscan1158_done2497
    goto rxscan1158_scan2496
  rxscan1158_loop2495:
    inc rx1157_pos
    gt rx1157_pos, rx1157_eos, rx1157_fail2491
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!from", rx1157_pos
  rxscan1158_scan2496:
    nqp_rxmark rx1157_bstack, rxscan1158_loop2495, rx1157_pos, 0
  rxscan1158_done2497:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1159_02499
    nqp_push_label $P11, alt1159_12539
    nqp_rxmark rx1157_bstack, alt1159_end2498, -1, 0
    rx1157_cur."!alt"(rx1157_pos, "alt_nfa__33_1361734142.028", $P11)
    goto rx1157_fail2491
  alt1159_02499:
    nqp_rxmark rx1157_bstack, rxcap1160_fail2501, rx1157_pos, 0
    add $I11, rx1157_pos, 5
    gt $I11, rx1157_eos, rx1157_fail2491
    substr $S10, rx1157_tgt, rx1157_pos, 5
    ne $S10, ucs4:"proto", rx1157_fail2491
    add rx1157_pos, 5
    nqp_rxpeek $I19, rx1157_bstack, rxcap1160_fail2501
    inc $I19
    set $I11, rx1157_bstack[$I19]
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1157_pos)
    rx1157_cstack = rx1157_cur."!cursor_capture"($P11, "proto")
    goto rxcap1160_done2500
  rxcap1160_fail2501:
    goto rx1157_fail2491
  rxcap1160_done2500:
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1162_02504
    nqp_push_label $P11, alt1162_12505
    nqp_push_label $P11, alt1162_22506
    nqp_rxmark rx1157_bstack, alt1162_end2503, -1, 0
    rx1157_cur."!alt"(rx1157_pos, "alt_nfa__31_1361734142.027", $P11)
    goto rx1157_fail2491
  alt1162_02504:
    add $I11, rx1157_pos, 5
    gt $I11, rx1157_eos, rx1157_fail2491
    substr $S10, rx1157_tgt, rx1157_pos, 5
    ne $S10, ucs4:"regex", rx1157_fail2491
    add rx1157_pos, 5
    goto alt1162_end2503
  alt1162_12505:
    add $I11, rx1157_pos, 5
    gt $I11, rx1157_eos, rx1157_fail2491
    substr $S10, rx1157_tgt, rx1157_pos, 5
    ne $S10, ucs4:"token", rx1157_fail2491
    add rx1157_pos, 5
    goto alt1162_end2503
  alt1162_22506:
    add $I11, rx1157_pos, 4
    gt $I11, rx1157_eos, rx1157_fail2491
    substr $S10, rx1157_tgt, rx1157_pos, 4
    ne $S10, ucs4:"rule", rx1157_fail2491
    add rx1157_pos, 4
    goto alt1162_end2503
  alt1162_end2503:
    nqp_rxcommit rx1157_bstack, alt1162_end2503
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
  alt1164_02509:
    nqp_rxmark rx1157_bstack, alt1164_12515, rx1157_pos, 0
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    add $I11, rx1157_pos, 3
    gt $I11, rx1157_eos, rx1157_fail2491
    substr $S10, rx1157_tgt, rx1157_pos, 3
    ne $S10, ucs4:"::(", rx1157_fail2491
    add rx1157_pos, 3
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    nqp_rxmark rx1157_bstack, rxsubrule1167_pass2512, -1, 0
  rxsubrule1167_pass2512:
    rx1157_cstack = rx1157_cur."!cursor_capture"($P11, "latename=variable")
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    add $I11, rx1157_pos, 1
    gt $I11, rx1157_eos, rx1157_fail2491
    substr $S10, rx1157_tgt, rx1157_pos, 1
    ne $S10, ucs4:")", rx1157_fail2491
    add rx1157_pos, 1
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    goto alt1164_end2508
  alt1164_12515:
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    nqp_rxmark rx1157_bstack, rxsubrule1171_pass2517, -1, 0
  rxsubrule1171_pass2517:
    rx1157_cstack = rx1157_cur."!cursor_capture"($P11, "deflongname")
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
  alt1164_end2508:
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
  alt1174_02521:
    nqp_rxmark rx1157_bstack, alt1174_12524, rx1157_pos, 0
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    add $I11, rx1157_pos, 3
    gt $I11, rx1157_eos, rx1157_fail2491
    substr $S10, rx1157_tgt, rx1157_pos, 3
    ne $S10, ucs4:"{*}", rx1157_fail2491
    add rx1157_pos, 3
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    goto alt1174_end2520
  alt1174_12524:
    nqp_rxmark rx1157_bstack, alt1174_22529, rx1157_pos, 0
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    add $I11, rx1157_pos, 1
    gt $I11, rx1157_eos, rx1157_fail2491
    substr $S10, rx1157_tgt, rx1157_pos, 1
    ne $S10, ucs4:"{", rx1157_fail2491
    add rx1157_pos, 1
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    add $I11, rx1157_pos, 5
    gt $I11, rx1157_eos, rx1157_fail2491
    substr $S10, rx1157_tgt, rx1157_pos, 5
    ne $S10, ucs4:"<...>", rx1157_fail2491
    add rx1157_pos, 5
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    add $I11, rx1157_pos, 1
    gt $I11, rx1157_eos, rx1157_fail2491
    substr $S10, rx1157_tgt, rx1157_pos, 1
    ne $S10, ucs4:"}", rx1157_fail2491
    add rx1157_pos, 1
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    goto alt1174_end2520
  alt1174_22529:
    nqp_rxmark rx1157_bstack, alt1174_32534, rx1157_pos, 0
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    add $I11, rx1157_pos, 1
    gt $I11, rx1157_eos, rx1157_fail2491
    substr $S10, rx1157_tgt, rx1157_pos, 1
    ne $S10, ucs4:"{", rx1157_fail2491
    add rx1157_pos, 1
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    add $I11, rx1157_pos, 3
    gt $I11, rx1157_eos, rx1157_fail2491
    substr $S10, rx1157_tgt, rx1157_pos, 3
    ne $S10, ucs4:"<*>", rx1157_fail2491
    add rx1157_pos, 3
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    add $I11, rx1157_pos, 1
    gt $I11, rx1157_eos, rx1157_fail2491
    substr $S10, rx1157_tgt, rx1157_pos, 1
    ne $S10, ucs4:"}", rx1157_fail2491
    add rx1157_pos, 1
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    goto alt1174_end2520
  alt1174_32534:
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."panic"("Proto regex body must be \\{*\\} (or <*> or <...>, which are deprecated)")
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
  alt1174_end2520:
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    goto alt1159_end2498
  alt1159_12539:
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    nqp_rxmark rx1157_bstack, rxcap1190_fail2542, rx1157_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1191_02544
    nqp_push_label $P11, alt1191_12545
    nqp_push_label $P11, alt1191_22546
    nqp_rxmark rx1157_bstack, alt1191_end2543, -1, 0
    rx1157_cur."!alt"(rx1157_pos, "alt_nfa__32_1361734142.027", $P11)
    goto rx1157_fail2491
  alt1191_02544:
    add $I11, rx1157_pos, 5
    gt $I11, rx1157_eos, rx1157_fail2491
    substr $S10, rx1157_tgt, rx1157_pos, 5
    ne $S10, ucs4:"regex", rx1157_fail2491
    add rx1157_pos, 5
    goto alt1191_end2543
  alt1191_12545:
    add $I11, rx1157_pos, 5
    gt $I11, rx1157_eos, rx1157_fail2491
    substr $S10, rx1157_tgt, rx1157_pos, 5
    ne $S10, ucs4:"token", rx1157_fail2491
    add rx1157_pos, 5
    goto alt1191_end2543
  alt1191_22546:
    add $I11, rx1157_pos, 4
    gt $I11, rx1157_eos, rx1157_fail2491
    substr $S10, rx1157_tgt, rx1157_pos, 4
    ne $S10, ucs4:"rule", rx1157_fail2491
    add rx1157_pos, 4
    goto alt1191_end2543
  alt1191_end2543:
    nqp_rxcommit rx1157_bstack, alt1191_end2543
    nqp_rxpeek $I19, rx1157_bstack, rxcap1190_fail2542
    inc $I19
    set $I11, rx1157_bstack[$I19]
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1157_pos)
    rx1157_cstack = rx1157_cur."!cursor_capture"($P11, "sym")
    goto rxcap1190_done2541
  rxcap1190_fail2542:
    goto rx1157_fail2491
  rxcap1190_done2541:
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
  alt1194_02550:
    nqp_rxmark rx1157_bstack, alt1194_12556, rx1157_pos, 0
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    add $I11, rx1157_pos, 3
    gt $I11, rx1157_eos, rx1157_fail2491
    substr $S10, rx1157_tgt, rx1157_pos, 3
    ne $S10, ucs4:"::(", rx1157_fail2491
    add rx1157_pos, 3
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    nqp_rxmark rx1157_bstack, rxsubrule1197_pass2553, -1, 0
  rxsubrule1197_pass2553:
    rx1157_cstack = rx1157_cur."!cursor_capture"($P11, "latename=variable")
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    add $I11, rx1157_pos, 1
    gt $I11, rx1157_eos, rx1157_fail2491
    substr $S10, rx1157_tgt, rx1157_pos, 1
    ne $S10, ucs4:")", rx1157_fail2491
    add rx1157_pos, 1
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    goto alt1194_end2549
  alt1194_12556:
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    nqp_rxmark rx1157_bstack, rxsubrule1201_pass2558, -1, 0
  rxsubrule1201_pass2558:
    rx1157_cstack = rx1157_cur."!cursor_capture"($P11, "deflongname")
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
  alt1194_end2549:
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    nqp_rxmark rx1157_bstack, rxquantr1206_done2564, rx1157_pos, 0
  rxquantr1206_loop2563:
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    add $I11, rx1157_pos, 1
    gt $I11, rx1157_eos, rx1157_fail2491
    substr $S10, rx1157_tgt, rx1157_pos, 1
    ne $S10, ucs4:"(", rx1157_fail2491
    add rx1157_pos, 1
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."signature"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    nqp_rxmark rx1157_bstack, rxsubrule1209_pass2567, -1, 0
  rxsubrule1209_pass2567:
    rx1157_cstack = rx1157_cur."!cursor_capture"($P11, "signature")
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    add $I11, rx1157_pos, 1
    gt $I11, rx1157_eos, rx1157_fail2491
    substr $S10, rx1157_tgt, rx1157_pos, 1
    ne $S10, ucs4:")", rx1157_fail2491
    add rx1157_pos, 1
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    nqp_rxpeek $I19, rx1157_bstack, rxquantr1206_done2564
    inc $I19
    inc $I19
    set rx1157_rep, rx1157_bstack[$I19]
    nqp_rxcommit rx1157_bstack, rxquantr1206_done2564
    inc rx1157_rep
  rxquantr1206_done2564:
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    store_lex unicode:"$\x{a2}", rx1157_cur
    unless_null $P101, fallback2571
    nqp_get_sc_object $P5003, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_23, $P5002
    set fb_tmp_149, pkg_viv_tmp_23
    repr_defined $I5001, fb_tmp_149
    unless $I5001 goto if1213_else2572 
    set $P5004, fb_tmp_149["%RX"]
    set $P5006, $P5004
    goto if1213_end2573
  if1213_else2572:
    null $P5005
    set $P5006, $P5005
  if1213_end2573:
    unless_null $P5006, vivi_12142574
    new $P5007, 'Hash'
    set pkg_viv_tmp_23["%RX"], $P5007
    set $P5006, $P5007
  vivi_12142574:
    unless_null $P5006, vivi_12152575
    die "Contextual %*RX not found"
    box $P5008, "Contextual %*RX not found"
    set $P5006, $P5008
  vivi_12152575:
    set $P101, $P5006
  fallback2571:
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    store_lex unicode:"$\x{a2}", rx1157_cur
    $P5009 = $P102."MATCH"()
    set $P103, $P5009
    .const 'Sub' $P5010 = 'cuid_410_1361734139.417' 
    capture_lex $P5010
    $P5011 = $P5010()
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    add $I11, rx1157_pos, 1
    gt $I11, rx1157_eos, rx1157_fail2491
    substr $S10, rx1157_tgt, rx1157_pos, 1
    ne $S10, ucs4:"{", rx1157_fail2491
    add rx1157_pos, 1
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."LANG"("Regex", "nibbler")
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    nqp_rxmark rx1157_bstack, rxsubrule1255_pass2644, -1, 0
  rxsubrule1255_pass2644:
    rx1157_cstack = rx1157_cur."!cursor_capture"($P11, "p6regex")
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    add $I11, rx1157_pos, 1
    gt $I11, rx1157_eos, rx1157_fail2491
    substr $S10, rx1157_tgt, rx1157_pos, 1
    ne $S10, ucs4:"}", rx1157_fail2491
    add rx1157_pos, 1
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    repr_bind_attr_int rx1157_cur, rx1157_curclass, "$!pos", rx1157_pos
    $P11 = rx1157_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1157_curclass, "$!pos"
    lt $I11, 0, rx1157_fail2491
    repr_get_attr_int rx1157_pos, $P11, rx1157_curclass, "$!pos"
    goto alt1159_end2498
  alt1159_end2498:
    nqp_rxcommit rx1157_bstack, alt1159_end2498
    rx1157_cur."!cursor_pass"(rx1157_pos, "regex_declarator", 'backtrack'=>1)
    .return (rx1157_cur)
  rx1157_restart2490:
    repr_get_attr_obj rx1157_cstack, rx1157_cur, rx1157_curclass, "$!cstack"
  rx1157_fail2491:
    unless rx1157_bstack, rx1157_done2489
    pop $I19, rx1157_bstack
    if_null rx1157_cstack, rx1157_cstack_done2494
    unless rx1157_cstack, rx1157_cstack_done2494
    dec $I19
    set $P11, rx1157_cstack[$I19]
  rx1157_cstack_done2494:
    pop rx1157_rep, rx1157_bstack
    pop rx1157_pos, rx1157_bstack
    pop $I19, rx1157_bstack
    lt rx1157_pos, -1, rx1157_done2489
    lt rx1157_pos, 0, rx1157_fail2491
    eq $I19, 0, rx1157_fail2491
    nqp_islist $I20, rx1157_cstack
    unless $I20, rx1157_jump2492
    elements $I18, rx1157_bstack
    le $I18, 0, rx1157_cut2493
    dec $I18
    set $I18, rx1157_bstack[$I18]
  rx1157_cut2493:
    assign rx1157_cstack, $I18
  rx1157_jump2492:
    jump $I19
  rx1157_done2489:
    rx1157_cur."!cursor_fail"()
    .return (rx1157_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_410_1361734139.417") :anon :lex :outer("cuid_138_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1196
    .local pmc fb_tmp_150 
    .local pmc pkg_viv_tmp_24 
    .local pmc fb_tmp_151 
    .local pmc fb_tmp_152 
    .local pmc pkg_viv_tmp_25 
    .local pmc fb_tmp_153 
    .local pmc fb_tmp_154 
    .local pmc fb_tmp_155 
    .local pmc pkg_viv_tmp_26 
    .local pmc fb_tmp_156 
    .local pmc fb_tmp_157 
    .local pmc fb_tmp_158 
    .local pmc fb_tmp_159 
    .local pmc pkg_viv_tmp_27 
    .local pmc fb_tmp_160 
    .local pmc fb_tmp_161 
    .local pmc fb_tmp_162 
    .local pmc fb_tmp_163 
    .local pmc pkg_viv_tmp_28 
    find_dynamic_lex $P5001, "%*RX"
    unless_null $P5001, fallback2577
    nqp_get_sc_object $P5003, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_24, $P5002
    set fb_tmp_150, pkg_viv_tmp_24
    repr_defined $I5001, fb_tmp_150
    unless $I5001 goto if1217_else2578 
    set $P5004, fb_tmp_150["%RX"]
    set $P5006, $P5004
    goto if1217_end2579
  if1217_else2578:
    null $P5005
    set $P5006, $P5005
  if1217_end2579:
    unless_null $P5006, vivi_12182580
    new $P5007, 'Hash'
    set pkg_viv_tmp_24["%RX"], $P5007
    set $P5006, $P5007
  vivi_12182580:
    unless_null $P5006, vivi_12192581
    die "Contextual %*RX not found"
    box $P5008, "Contextual %*RX not found"
    set $P5006, $P5008
  vivi_12192581:
    set $P5001, $P5006
  fallback2577:
    find_lex $P5009, "$/"
    unless_null $P5009, fallback2584
    nqp_get_sc_object $P5010, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5009, $P5010
  fallback2584:
    set fb_tmp_151, $P5009
    repr_defined $I5003, fb_tmp_151
    unless $I5003 goto if1220_else2582 
    set $P5011, fb_tmp_151["sym"]
    set $P5013, $P5011
    goto if1220_end2583
  if1220_else2582:
    null $P5012
    set $P5013, $P5012
  if1220_end2583:
    unless_null $P5013, vivi_12212585
    nqp_get_sc_object $P5014, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5013, $P5014
  vivi_12212585:
    set $S5001, $P5013
    iseq $I5002, $S5001, "rule"
    box $P5015, $I5002
    set $P5001["s"], $P5015
    find_dynamic_lex $P5016, "%*RX"
    unless_null $P5016, fallback2586
    nqp_get_sc_object $P5018, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5017, $P5018
    set pkg_viv_tmp_25, $P5017
    set fb_tmp_152, pkg_viv_tmp_25
    repr_defined $I5004, fb_tmp_152
    unless $I5004 goto if1222_else2587 
    set $P5019, fb_tmp_152["%RX"]
    set $P5021, $P5019
    goto if1222_end2588
  if1222_else2587:
    null $P5020
    set $P5021, $P5020
  if1222_end2588:
    unless_null $P5021, vivi_12232589
    new $P5022, 'Hash'
    set pkg_viv_tmp_25["%RX"], $P5022
    set $P5021, $P5022
  vivi_12232589:
    unless_null $P5021, vivi_12242590
    die "Contextual %*RX not found"
    box $P5023, "Contextual %*RX not found"
    set $P5021, $P5023
  vivi_12242590:
    set $P5016, $P5021
  fallback2586:
    find_lex $P5024, "$/"
    unless_null $P5024, fallback2595
    nqp_get_sc_object $P5025, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5024, $P5025
  fallback2595:
    set fb_tmp_153, $P5024
    repr_defined $I5006, fb_tmp_153
    unless $I5006 goto if1226_else2593 
    set $P5026, fb_tmp_153["sym"]
    set $P5028, $P5026
    goto if1226_end2594
  if1226_else2593:
    null $P5027
    set $P5028, $P5027
  if1226_end2594:
    unless_null $P5028, vivi_12272596
    nqp_get_sc_object $P5029, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5028, $P5029
  vivi_12272596:
    set $S5002, $P5028
    iseq $I5005, $S5002, "token"
    set $I5009, $I5005
    if $I5005 goto unless1225_end2592 
    find_lex $P5030, "$/"
    unless_null $P5030, fallback2599
    nqp_get_sc_object $P5031, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5030, $P5031
  fallback2599:
    set fb_tmp_154, $P5030
    repr_defined $I5008, fb_tmp_154
    unless $I5008 goto if1228_else2597 
    set $P5032, fb_tmp_154["sym"]
    set $P5034, $P5032
    goto if1228_end2598
  if1228_else2597:
    null $P5033
    set $P5034, $P5033
  if1228_end2598:
    unless_null $P5034, vivi_12292600
    nqp_get_sc_object $P5035, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5034, $P5035
  vivi_12292600:
    set $S5003, $P5034
    iseq $I5007, $S5003, "rule"
    set $I5009, $I5007
  unless1225_end2592:
    box $P5036, $I5009
    set $P5016["r"], $P5036
    find_dynamic_lex $P5037, "%*RX"
    unless_null $P5037, fallback2601
    nqp_get_sc_object $P5039, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5038, $P5039
    set pkg_viv_tmp_26, $P5038
    set fb_tmp_155, pkg_viv_tmp_26
    repr_defined $I5010, fb_tmp_155
    unless $I5010 goto if1230_else2602 
    set $P5040, fb_tmp_155["%RX"]
    set $P5042, $P5040
    goto if1230_end2603
  if1230_else2602:
    null $P5041
    set $P5042, $P5041
  if1230_end2603:
    unless_null $P5042, vivi_12312604
    new $P5043, 'Hash'
    set pkg_viv_tmp_26["%RX"], $P5043
    set $P5042, $P5043
  vivi_12312604:
    unless_null $P5042, vivi_12322605
    die "Contextual %*RX not found"
    box $P5044, "Contextual %*RX not found"
    set $P5042, $P5044
  vivi_12322605:
    set $P5037, $P5042
  fallback2601:
    find_lex $P5045, "$/"
    unless_null $P5045, fallback2610
    nqp_get_sc_object $P5046, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5045, $P5046
  fallback2610:
    set fb_tmp_156, $P5045
    repr_defined $I5011, fb_tmp_156
    unless $I5011 goto if1234_else2608 
    set $P5047, fb_tmp_156["deflongname"]
    set $P5049, $P5047
    goto if1234_end2609
  if1234_else2608:
    null $P5048
    set $P5049, $P5048
  if1234_end2609:
    unless_null $P5049, vivi_12352611
    nqp_get_sc_object $P5050, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5049, $P5050
  vivi_12352611:
    unless $P5049 goto if1233_else2606 
.annotate 'line', 1199
    find_lex $P5051, "$/"
    unless_null $P5051, fallback2614
    nqp_get_sc_object $P5052, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5051, $P5052
  fallback2614:
    set fb_tmp_157, $P5051
    repr_defined $I5012, fb_tmp_157
    unless $I5012 goto if1236_else2612 
    set $P5053, fb_tmp_157["deflongname"]
    set $P5055, $P5053
    goto if1236_end2613
  if1236_else2612:
    null $P5054
    set $P5055, $P5054
  if1236_end2613:
    unless_null $P5055, vivi_12372615
    nqp_get_sc_object $P5056, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5055, $P5056
  vivi_12372615:
    $P5057 = $P5055."ast"()
    set $P5064, $P5057
    goto if1233_end2607
  if1233_else2606:
    find_lex $P5058, "$/"
    unless_null $P5058, fallback2618
    nqp_get_sc_object $P5059, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5058, $P5059
  fallback2618:
    set fb_tmp_158, $P5058
    repr_defined $I5013, fb_tmp_158
    unless $I5013 goto if1238_else2616 
    set $P5060, fb_tmp_158["latename"]
    set $P5062, $P5060
    goto if1238_end2617
  if1238_else2616:
    null $P5061
    set $P5062, $P5061
  if1238_end2617:
    unless_null $P5062, vivi_12392619
    nqp_get_sc_object $P5063, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5062, $P5063
  vivi_12392619:
    set $S5005, $P5062
    concat $S5004, "!!LATENAME!!", $S5005
    box $P5065, $S5004
    set $P5064, $P5065
  if1233_end2607:
    set $P5037["name"], $P5064
    find_dynamic_lex $P5066, "%*RX"
    unless_null $P5066, fallback2620
    nqp_get_sc_object $P5068, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5067, $P5068
    set pkg_viv_tmp_27, $P5067
    set fb_tmp_159, pkg_viv_tmp_27
    repr_defined $I5014, fb_tmp_159
    unless $I5014 goto if1240_else2621 
    set $P5069, fb_tmp_159["%RX"]
    set $P5071, $P5069
    goto if1240_end2622
  if1240_else2621:
    null $P5070
    set $P5071, $P5070
  if1240_end2622:
    unless_null $P5071, vivi_12412623
    new $P5072, 'Hash'
    set pkg_viv_tmp_27["%RX"], $P5072
    set $P5071, $P5072
  vivi_12412623:
    unless_null $P5071, vivi_12422624
    die "Contextual %*RX not found"
    box $P5073, "Contextual %*RX not found"
    set $P5071, $P5073
  vivi_12422624:
    set $P5066, $P5071
  fallback2620:
.annotate 'line', 1200
    find_dynamic_lex $P5074, "$*W"
    unless_null $P5074, fallback2625
    nqp_get_sc_object $P5076, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5075, $P5076
    set fb_tmp_160, $P5075
    repr_defined $I5015, fb_tmp_160
    unless $I5015 goto if1243_else2626 
    set $P5077, fb_tmp_160["$W"]
    set $P5079, $P5077
    goto if1243_end2627
  if1243_else2626:
    null $P5078
    set $P5079, $P5078
  if1243_end2627:
    unless_null $P5079, vivi_12442628
    nqp_get_sc_object $P5080, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5079, $P5080
  vivi_12442628:
    unless_null $P5079, vivi_12452629
    die "Contextual $*W not found"
    box $P5081, "Contextual $*W not found"
    set $P5079, $P5081
  vivi_12452629:
    set $P5074, $P5079
  fallback2625:
    find_dynamic_lex $P5082, "$*W"
    unless_null $P5082, fallback2630
    nqp_get_sc_object $P5084, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5083, $P5084
    set fb_tmp_161, $P5083
    repr_defined $I5016, fb_tmp_161
    unless $I5016 goto if1246_else2631 
    set $P5085, fb_tmp_161["$W"]
    set $P5087, $P5085
    goto if1246_end2632
  if1246_else2631:
    null $P5086
    set $P5087, $P5086
  if1246_end2632:
    unless_null $P5087, vivi_12472633
    nqp_get_sc_object $P5088, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5087, $P5088
  vivi_12472633:
    unless_null $P5087, vivi_12482634
    die "Contextual $*W not found"
    box $P5089, "Contextual $*W not found"
    set $P5087, $P5089
  vivi_12482634:
    set $P5082, $P5087
  fallback2630:
    $P5090 = $P5082."cur_lexpad"()
    find_dynamic_lex $P5091, "%*RX"
    unless_null $P5091, fallback2637
    nqp_get_sc_object $P5093, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5092, $P5093
    set pkg_viv_tmp_28, $P5092
    set fb_tmp_163, pkg_viv_tmp_28
    repr_defined $I5018, fb_tmp_163
    unless $I5018 goto if1250_else2638 
    set $P5094, fb_tmp_163["%RX"]
    set $P5096, $P5094
    goto if1250_end2639
  if1250_else2638:
    null $P5095
    set $P5096, $P5095
  if1250_end2639:
    unless_null $P5096, vivi_12512640
    new $P5097, 'Hash'
    set pkg_viv_tmp_28["%RX"], $P5097
    set $P5096, $P5097
  vivi_12512640:
    unless_null $P5096, vivi_12522641
    die "Contextual %*RX not found"
    box $P5098, "Contextual %*RX not found"
    set $P5096, $P5098
  vivi_12522641:
    set $P5091, $P5096
  fallback2637:
    set fb_tmp_162, $P5091
    repr_defined $I5017, fb_tmp_162
    unless $I5017 goto if1249_else2635 
    set $P5099, fb_tmp_162["name"]
    set $P5101, $P5099
    goto if1249_end2636
  if1249_else2635:
    null $P5100
    set $P5101, $P5100
  if1249_end2636:
    unless_null $P5101, vivi_12532642
    nqp_get_sc_object $P5102, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5101, $P5102
  vivi_12532642:
    $P5103 = $P5074."create_code"($P5090, $P5101, 0, "NQPRegex" :named("code_type_name"))
    set $P5066["code"], $P5103
    .return ($P5103) 
.end
.HLL "nqp"
.namespace []
.sub "dotty" :subid("cuid_139_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1206
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1257_start
    .local string rx1257_tgt
    .local int rx1257_pos
    .local int rx1257_off
    .local int rx1257_eos
    .local int rx1257_rep
    .local pmc rx1257_cur
    .local pmc rx1257_curclass
    .local pmc rx1257_bstack
    .local pmc rx1257_cstack
    rx1257_start = self."!cursor_start_all"()
    set rx1257_cur, rx1257_start[0]
    set rx1257_tgt, rx1257_start[1]
    set rx1257_pos, rx1257_start[2]
    set rx1257_curclass, rx1257_start[3]
    set rx1257_bstack, rx1257_start[4]
    set $I19, rx1257_start[5]
    store_lex unicode:"$\x{a2}", rx1257_cur
    length rx1257_eos, rx1257_tgt
    eq $I19, 1, rx1257_restart2648
    gt rx1257_pos, rx1257_eos, rx1257_fail2649
    repr_get_attr_int $I11, self, rx1257_curclass, "$!from"
    ne $I11, -1, rxscan1258_done2655
    goto rxscan1258_scan2654
  rxscan1258_loop2653:
    inc rx1257_pos
    gt rx1257_pos, rx1257_eos, rx1257_fail2649
    repr_bind_attr_int rx1257_cur, rx1257_curclass, "$!from", rx1257_pos
  rxscan1258_scan2654:
    nqp_rxmark rx1257_bstack, rxscan1258_loop2653, rx1257_pos, 0
  rxscan1258_done2655:
    add $I11, rx1257_pos, 1
    gt $I11, rx1257_eos, rx1257_fail2649
    substr $S10, rx1257_tgt, rx1257_pos, 1
    ne $S10, ucs4:".", rx1257_fail2649
    add rx1257_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1259_02657
    nqp_push_label $P11, alt1259_12659
    nqp_rxmark rx1257_bstack, alt1259_end2656, -1, 0
    rx1257_cur."!alt"(rx1257_pos, "alt_nfa__34_1361734142.055", $P11)
    goto rx1257_fail2649
  alt1259_02657:
    repr_bind_attr_int rx1257_cur, rx1257_curclass, "$!pos", rx1257_pos
    $P11 = rx1257_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1257_curclass, "$!pos"
    lt $I11, 0, rx1257_fail2649
    nqp_rxmark rx1257_bstack, rxsubrule1260_pass2658, -1, 0
  rxsubrule1260_pass2658:
    rx1257_cstack = rx1257_cur."!cursor_capture"($P11, "longname=deflongname")
    repr_get_attr_int rx1257_pos, $P11, rx1257_curclass, "$!pos"
    goto alt1259_end2656
  alt1259_12659:
    ge rx1257_pos, rx1257_eos, rx1257_fail2649
    substr $S11, rx1257_tgt, rx1257_pos, 1
    index $I11, ucs4:"'\"", $S11
    lt $I11, 0, rx1257_fail2649
    repr_bind_attr_int rx1257_cur, rx1257_curclass, "$!pos", rx1257_pos
    $P11 = rx1257_cur."quote"()
    repr_get_attr_int $I11, $P11, rx1257_curclass, "$!pos"
    lt $I11, 0, rx1257_fail2649
    nqp_rxmark rx1257_bstack, rxsubrule1261_pass2660, -1, 0
  rxsubrule1261_pass2660:
    rx1257_cstack = rx1257_cur."!cursor_capture"($P11, "quote")
    repr_get_attr_int rx1257_pos, $P11, rx1257_curclass, "$!pos"
  alt1262_02662:
    nqp_rxmark rx1257_bstack, alt1262_12663, rx1257_pos, 0
    ge rx1257_pos, rx1257_eos, rx1257_fail2649
    substr $S11, rx1257_tgt, rx1257_pos, 1
    index $I11, ucs4:"(", $S11
    lt $I11, 0, rx1257_fail2649
    goto alt1262_end2661
  alt1262_12663:
    repr_bind_attr_int rx1257_cur, rx1257_curclass, "$!pos", rx1257_pos
    $P11 = rx1257_cur."panic"("Quoted method name requires parenthesized arguments")
    repr_get_attr_int $I11, $P11, rx1257_curclass, "$!pos"
    lt $I11, 0, rx1257_fail2649
    repr_get_attr_int rx1257_pos, $P11, rx1257_curclass, "$!pos"
  alt1262_end2661:
    goto alt1259_end2656
  alt1259_end2656:
    nqp_rxcommit rx1257_bstack, alt1259_end2656
    nqp_rxmark rx1257_bstack, rxquantr1264_done2666, rx1257_pos, 0
  rxquantr1264_loop2665:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1265_02668
    nqp_push_label $P11, alt1265_12670
    nqp_rxmark rx1257_bstack, alt1265_end2667, -1, 0
    rx1257_cur."!alt"(rx1257_pos, "alt_nfa__35_1361734142.055", $P11)
    goto rx1257_fail2649
  alt1265_02668:
    ge rx1257_pos, rx1257_eos, rx1257_fail2649
    substr $S11, rx1257_tgt, rx1257_pos, 1
    index $I11, ucs4:"(", $S11
    lt $I11, 0, rx1257_fail2649
    repr_bind_attr_int rx1257_cur, rx1257_curclass, "$!pos", rx1257_pos
    $P11 = rx1257_cur."args"()
    repr_get_attr_int $I11, $P11, rx1257_curclass, "$!pos"
    lt $I11, 0, rx1257_fail2649
    nqp_rxmark rx1257_bstack, rxsubrule1266_pass2669, -1, 0
  rxsubrule1266_pass2669:
    rx1257_cstack = rx1257_cur."!cursor_capture"($P11, "args")
    repr_get_attr_int rx1257_pos, $P11, rx1257_curclass, "$!pos"
    goto alt1265_end2667
  alt1265_12670:
    add $I11, rx1257_pos, 1
    gt $I11, rx1257_eos, rx1257_fail2649
    substr $S10, rx1257_tgt, rx1257_pos, 1
    ne $S10, ucs4:":", rx1257_fail2649
    add rx1257_pos, 1
    ge rx1257_pos, rx1257_eos, rx1257_fail2649
    is_cclass $I11, .CCLASS_WHITESPACE, rx1257_tgt, rx1257_pos
    unless $I11, rx1257_fail2649
    add rx1257_pos, 1
    repr_bind_attr_int rx1257_cur, rx1257_curclass, "$!pos", rx1257_pos
    $P11 = rx1257_cur."arglist"()
    repr_get_attr_int $I11, $P11, rx1257_curclass, "$!pos"
    lt $I11, 0, rx1257_fail2649
    nqp_rxmark rx1257_bstack, rxsubrule1267_pass2671, -1, 0
  rxsubrule1267_pass2671:
    rx1257_cstack = rx1257_cur."!cursor_capture"($P11, "args")
    repr_get_attr_int rx1257_pos, $P11, rx1257_curclass, "$!pos"
    goto alt1265_end2667
  alt1265_end2667:
    nqp_rxpeek $I19, rx1257_bstack, rxquantr1264_done2666
    inc $I19
    inc $I19
    set rx1257_rep, rx1257_bstack[$I19]
    nqp_rxcommit rx1257_bstack, rxquantr1264_done2666
    inc rx1257_rep
  rxquantr1264_done2666:
    rx1257_cur."!cursor_pass"(rx1257_pos, "dotty", 'backtrack'=>1)
    .return (rx1257_cur)
  rx1257_restart2648:
    repr_get_attr_obj rx1257_cstack, rx1257_cur, rx1257_curclass, "$!cstack"
  rx1257_fail2649:
    unless rx1257_bstack, rx1257_done2647
    pop $I19, rx1257_bstack
    if_null rx1257_cstack, rx1257_cstack_done2652
    unless rx1257_cstack, rx1257_cstack_done2652
    dec $I19
    set $P11, rx1257_cstack[$I19]
  rx1257_cstack_done2652:
    pop rx1257_rep, rx1257_bstack
    pop rx1257_pos, rx1257_bstack
    pop $I19, rx1257_bstack
    lt rx1257_pos, -1, rx1257_done2647
    lt rx1257_pos, 0, rx1257_fail2649
    eq $I19, 0, rx1257_fail2649
    nqp_islist $I20, rx1257_cstack
    unless $I20, rx1257_jump2650
    elements $I18, rx1257_bstack
    le $I18, 0, rx1257_cut2651
    dec $I18
    set $I18, rx1257_bstack[$I18]
  rx1257_cut2651:
    assign rx1257_cstack, $I18
  rx1257_jump2650:
    jump $I19
  rx1257_done2647:
    rx1257_cur."!cursor_fail"()
    .return (rx1257_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<self>" :subid("cuid_140_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1219
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1268_start
    .local string rx1268_tgt
    .local int rx1268_pos
    .local int rx1268_off
    .local int rx1268_eos
    .local int rx1268_rep
    .local pmc rx1268_cur
    .local pmc rx1268_curclass
    .local pmc rx1268_bstack
    .local pmc rx1268_cstack
    rx1268_start = self."!cursor_start_all"()
    set rx1268_cur, rx1268_start[0]
    set rx1268_tgt, rx1268_start[1]
    set rx1268_pos, rx1268_start[2]
    set rx1268_curclass, rx1268_start[3]
    set rx1268_bstack, rx1268_start[4]
    set $I19, rx1268_start[5]
    store_lex unicode:"$\x{a2}", rx1268_cur
    length rx1268_eos, rx1268_tgt
    eq $I19, 1, rx1268_restart2674
    gt rx1268_pos, rx1268_eos, rx1268_fail2675
    repr_get_attr_int $I11, self, rx1268_curclass, "$!from"
    ne $I11, -1, rxscan1269_done2681
    goto rxscan1269_scan2680
  rxscan1269_loop2679:
    inc rx1268_pos
    gt rx1268_pos, rx1268_eos, rx1268_fail2675
    repr_bind_attr_int rx1268_cur, rx1268_curclass, "$!from", rx1268_pos
  rxscan1269_scan2680:
    nqp_rxmark rx1268_bstack, rxscan1269_loop2679, rx1268_pos, 0
  rxscan1269_done2681:
    nqp_rxmark rx1268_bstack, rxcap1270_fail2683, rx1268_pos, 0
    add $I11, rx1268_pos, 4
    gt $I11, rx1268_eos, rx1268_fail2675
    substr $S10, rx1268_tgt, rx1268_pos, 4
    ne $S10, ucs4:"self", rx1268_fail2675
    add rx1268_pos, 4
    nqp_rxpeek $I19, rx1268_bstack, rxcap1270_fail2683
    inc $I19
    set $I11, rx1268_bstack[$I19]
    repr_bind_attr_int rx1268_cur, rx1268_curclass, "$!pos", rx1268_pos
    $P11 = rx1268_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1268_pos)
    rx1268_cstack = rx1268_cur."!cursor_capture"($P11, "sym")
    goto rxcap1270_done2682
  rxcap1270_fail2683:
    goto rx1268_fail2675
  rxcap1270_done2682:
    le rx1268_pos, 0, rx1268_fail2675
    is_cclass $I11, .CCLASS_WORD, rx1268_tgt, rx1268_pos
    if $I11, rx1268_fail2675
    sub $I11, rx1268_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx1268_tgt, $I11
    unless $I11, rx1268_fail2675
    rx1268_cur."!cursor_pass"(rx1268_pos, "term:sym<self>", 'backtrack'=>1)
    .return (rx1268_cur)
  rx1268_restart2674:
    repr_get_attr_obj rx1268_cstack, rx1268_cur, rx1268_curclass, "$!cstack"
  rx1268_fail2675:
    unless rx1268_bstack, rx1268_done2673
    pop $I19, rx1268_bstack
    if_null rx1268_cstack, rx1268_cstack_done2678
    unless rx1268_cstack, rx1268_cstack_done2678
    dec $I19
    set $P11, rx1268_cstack[$I19]
  rx1268_cstack_done2678:
    pop rx1268_rep, rx1268_bstack
    pop rx1268_pos, rx1268_bstack
    pop $I19, rx1268_bstack
    lt rx1268_pos, -1, rx1268_done2673
    lt rx1268_pos, 0, rx1268_fail2675
    eq $I19, 0, rx1268_fail2675
    nqp_islist $I20, rx1268_cstack
    unless $I20, rx1268_jump2676
    elements $I18, rx1268_bstack
    le $I18, 0, rx1268_cut2677
    dec $I18
    set $I18, rx1268_bstack[$I18]
  rx1268_cut2677:
    assign rx1268_cstack, $I18
  rx1268_jump2676:
    jump $I19
  rx1268_done2673:
    rx1268_cur."!cursor_fail"()
    .return (rx1268_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<identifier>" :subid("cuid_141_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1221
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1272_start
    .local string rx1272_tgt
    .local int rx1272_pos
    .local int rx1272_off
    .local int rx1272_eos
    .local int rx1272_rep
    .local pmc rx1272_cur
    .local pmc rx1272_curclass
    .local pmc rx1272_bstack
    .local pmc rx1272_cstack
    rx1272_start = self."!cursor_start_all"()
    set rx1272_cur, rx1272_start[0]
    set rx1272_tgt, rx1272_start[1]
    set rx1272_pos, rx1272_start[2]
    set rx1272_curclass, rx1272_start[3]
    set rx1272_bstack, rx1272_start[4]
    set $I19, rx1272_start[5]
    store_lex unicode:"$\x{a2}", rx1272_cur
    length rx1272_eos, rx1272_tgt
    eq $I19, 1, rx1272_restart2687
    gt rx1272_pos, rx1272_eos, rx1272_fail2688
    repr_get_attr_int $I11, self, rx1272_curclass, "$!from"
    ne $I11, -1, rxscan1273_done2694
    goto rxscan1273_scan2693
  rxscan1273_loop2692:
    inc rx1272_pos
    gt rx1272_pos, rx1272_eos, rx1272_fail2688
    repr_bind_attr_int rx1272_cur, rx1272_curclass, "$!from", rx1272_pos
  rxscan1273_scan2693:
    nqp_rxmark rx1272_bstack, rxscan1273_loop2692, rx1272_pos, 0
  rxscan1273_done2694:
    repr_bind_attr_int rx1272_cur, rx1272_curclass, "$!pos", rx1272_pos
    $P11 = rx1272_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1272_curclass, "$!pos"
    lt $I11, 0, rx1272_fail2688
    nqp_rxmark rx1272_bstack, rxsubrule1274_pass2695, -1, 0
  rxsubrule1274_pass2695:
    rx1272_cstack = rx1272_cur."!cursor_capture"($P11, "deflongname")
    repr_get_attr_int rx1272_pos, $P11, rx1272_curclass, "$!pos"
    ge rx1272_pos, rx1272_eos, rx1272_fail2688
    substr $S11, rx1272_tgt, rx1272_pos, 1
    index $I11, ucs4:"(", $S11
    lt $I11, 0, rx1272_fail2688
    repr_bind_attr_int rx1272_cur, rx1272_curclass, "$!pos", rx1272_pos
    $P11 = rx1272_cur."args"()
    repr_get_attr_int $I11, $P11, rx1272_curclass, "$!pos"
    lt $I11, 0, rx1272_fail2688
    nqp_rxmark rx1272_bstack, rxsubrule1275_pass2696, -1, 0
  rxsubrule1275_pass2696:
    rx1272_cstack = rx1272_cur."!cursor_capture"($P11, "args")
    repr_get_attr_int rx1272_pos, $P11, rx1272_curclass, "$!pos"
    rx1272_cur."!cursor_pass"(rx1272_pos, "term:sym<identifier>", 'backtrack'=>1)
    .return (rx1272_cur)
  rx1272_restart2687:
    repr_get_attr_obj rx1272_cstack, rx1272_cur, rx1272_curclass, "$!cstack"
  rx1272_fail2688:
    unless rx1272_bstack, rx1272_done2686
    pop $I19, rx1272_bstack
    if_null rx1272_cstack, rx1272_cstack_done2691
    unless rx1272_cstack, rx1272_cstack_done2691
    dec $I19
    set $P11, rx1272_cstack[$I19]
  rx1272_cstack_done2691:
    pop rx1272_rep, rx1272_bstack
    pop rx1272_pos, rx1272_bstack
    pop $I19, rx1272_bstack
    lt rx1272_pos, -1, rx1272_done2686
    lt rx1272_pos, 0, rx1272_fail2688
    eq $I19, 0, rx1272_fail2688
    nqp_islist $I20, rx1272_cstack
    unless $I20, rx1272_jump2689
    elements $I18, rx1272_bstack
    le $I18, 0, rx1272_cut2690
    dec $I18
    set $I18, rx1272_bstack[$I18]
  rx1272_cut2690:
    assign rx1272_cstack, $I18
  rx1272_jump2689:
    jump $I19
  rx1272_done2686:
    rx1272_cur."!cursor_fail"()
    .return (rx1272_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<name>" :subid("cuid_142_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1225
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1276_start
    .local string rx1276_tgt
    .local int rx1276_pos
    .local int rx1276_off
    .local int rx1276_eos
    .local int rx1276_rep
    .local pmc rx1276_cur
    .local pmc rx1276_curclass
    .local pmc rx1276_bstack
    .local pmc rx1276_cstack
    rx1276_start = self."!cursor_start_all"()
    set rx1276_cur, rx1276_start[0]
    set rx1276_tgt, rx1276_start[1]
    set rx1276_pos, rx1276_start[2]
    set rx1276_curclass, rx1276_start[3]
    set rx1276_bstack, rx1276_start[4]
    set $I19, rx1276_start[5]
    store_lex unicode:"$\x{a2}", rx1276_cur
    length rx1276_eos, rx1276_tgt
    eq $I19, 1, rx1276_restart2699
    gt rx1276_pos, rx1276_eos, rx1276_fail2700
    repr_get_attr_int $I11, self, rx1276_curclass, "$!from"
    ne $I11, -1, rxscan1277_done2706
    goto rxscan1277_scan2705
  rxscan1277_loop2704:
    inc rx1276_pos
    gt rx1276_pos, rx1276_eos, rx1276_fail2700
    repr_bind_attr_int rx1276_cur, rx1276_curclass, "$!from", rx1276_pos
  rxscan1277_scan2705:
    nqp_rxmark rx1276_bstack, rxscan1277_loop2704, rx1276_pos, 0
  rxscan1277_done2706:
    repr_bind_attr_int rx1276_cur, rx1276_curclass, "$!pos", rx1276_pos
    $P11 = rx1276_cur."name"()
    repr_get_attr_int $I11, $P11, rx1276_curclass, "$!pos"
    lt $I11, 0, rx1276_fail2700
    nqp_rxmark rx1276_bstack, rxsubrule1278_pass2707, -1, 0
  rxsubrule1278_pass2707:
    rx1276_cstack = rx1276_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx1276_pos, $P11, rx1276_curclass, "$!pos"
    nqp_rxmark rx1276_bstack, rxquantr1279_done2709, rx1276_pos, 0
  rxquantr1279_loop2708:
    repr_bind_attr_int rx1276_cur, rx1276_curclass, "$!pos", rx1276_pos
    $P11 = rx1276_cur."args"()
    repr_get_attr_int $I11, $P11, rx1276_curclass, "$!pos"
    lt $I11, 0, rx1276_fail2700
    goto rxsubrule1280_pass2710
  rxsubrule1280_back2711:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1276_curclass, "$!pos"
    lt $I11, 0, rx1276_fail2700
  rxsubrule1280_pass2710:
    rx1276_cstack = rx1276_cur."!cursor_capture"($P11, "args")
    set_addr $I11, rxsubrule1280_back2711
    push rx1276_bstack, $I11
    push rx1276_bstack, 0
    push rx1276_bstack, rx1276_pos
    elements $I11, rx1276_cstack
    push rx1276_bstack, $I11
    repr_get_attr_int rx1276_pos, $P11, rx1276_curclass, "$!pos"
    nqp_rxpeek $I19, rx1276_bstack, rxquantr1279_done2709
    inc $I19
    inc $I19
    set rx1276_rep, rx1276_bstack[$I19]
    nqp_rxcommit rx1276_bstack, rxquantr1279_done2709
    inc rx1276_rep
  rxquantr1279_done2709:
    rx1276_cur."!cursor_pass"(rx1276_pos, "term:sym<name>", 'backtrack'=>1)
    .return (rx1276_cur)
  rx1276_restart2699:
    repr_get_attr_obj rx1276_cstack, rx1276_cur, rx1276_curclass, "$!cstack"
  rx1276_fail2700:
    unless rx1276_bstack, rx1276_done2698
    pop $I19, rx1276_bstack
    if_null rx1276_cstack, rx1276_cstack_done2703
    unless rx1276_cstack, rx1276_cstack_done2703
    dec $I19
    set $P11, rx1276_cstack[$I19]
  rx1276_cstack_done2703:
    pop rx1276_rep, rx1276_bstack
    pop rx1276_pos, rx1276_bstack
    pop $I19, rx1276_bstack
    lt rx1276_pos, -1, rx1276_done2698
    lt rx1276_pos, 0, rx1276_fail2700
    eq $I19, 0, rx1276_fail2700
    nqp_islist $I20, rx1276_cstack
    unless $I20, rx1276_jump2701
    elements $I18, rx1276_bstack
    le $I18, 0, rx1276_cut2702
    dec $I18
    set $I18, rx1276_bstack[$I18]
  rx1276_cut2702:
    assign rx1276_cstack, $I18
  rx1276_jump2701:
    jump $I19
  rx1276_done2698:
    rx1276_cur."!cursor_fail"()
    .return (rx1276_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<pir::op>" :subid("cuid_143_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1229
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1281_start
    .local string rx1281_tgt
    .local int rx1281_pos
    .local int rx1281_off
    .local int rx1281_eos
    .local int rx1281_rep
    .local pmc rx1281_cur
    .local pmc rx1281_curclass
    .local pmc rx1281_bstack
    .local pmc rx1281_cstack
    rx1281_start = self."!cursor_start_all"()
    set rx1281_cur, rx1281_start[0]
    set rx1281_tgt, rx1281_start[1]
    set rx1281_pos, rx1281_start[2]
    set rx1281_curclass, rx1281_start[3]
    set rx1281_bstack, rx1281_start[4]
    set $I19, rx1281_start[5]
    store_lex unicode:"$\x{a2}", rx1281_cur
    length rx1281_eos, rx1281_tgt
    eq $I19, 1, rx1281_restart2714
    gt rx1281_pos, rx1281_eos, rx1281_fail2715
    repr_get_attr_int $I11, self, rx1281_curclass, "$!from"
    ne $I11, -1, rxscan1282_done2721
    goto rxscan1282_scan2720
  rxscan1282_loop2719:
    inc rx1281_pos
    gt rx1281_pos, rx1281_eos, rx1281_fail2715
    repr_bind_attr_int rx1281_cur, rx1281_curclass, "$!from", rx1281_pos
  rxscan1282_scan2720:
    nqp_rxmark rx1281_bstack, rxscan1282_loop2719, rx1281_pos, 0
  rxscan1282_done2721:
    add $I11, rx1281_pos, 5
    gt $I11, rx1281_eos, rx1281_fail2715
    substr $S10, rx1281_tgt, rx1281_pos, 5
    ne $S10, ucs4:"pir::", rx1281_fail2715
    add rx1281_pos, 5
    nqp_rxmark rx1281_bstack, rxcap1283_fail2723, rx1281_pos, 0
    nqp_rxmark rx1281_bstack, rxquantr1284_done2725, -1, 0
  rxquantr1284_loop2724:
    ge rx1281_pos, rx1281_eos, rx1281_fail2715
    is_cclass $I11, .CCLASS_WORD, rx1281_tgt, rx1281_pos
    unless $I11, rx1281_fail2715
    add rx1281_pos, 1
    nqp_rxpeek $I19, rx1281_bstack, rxquantr1284_done2725
    inc $I19
    inc $I19
    set rx1281_rep, rx1281_bstack[$I19]
    nqp_rxcommit rx1281_bstack, rxquantr1284_done2725
    inc rx1281_rep
    nqp_rxmark rx1281_bstack, rxquantr1284_done2725, rx1281_pos, rx1281_rep
    goto rxquantr1284_loop2724
  rxquantr1284_done2725:
    nqp_rxpeek $I19, rx1281_bstack, rxcap1283_fail2723
    inc $I19
    set $I11, rx1281_bstack[$I19]
    repr_bind_attr_int rx1281_cur, rx1281_curclass, "$!pos", rx1281_pos
    $P11 = rx1281_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1281_pos)
    rx1281_cstack = rx1281_cur."!cursor_capture"($P11, "op")
    goto rxcap1283_done2722
  rxcap1283_fail2723:
    goto rx1281_fail2715
  rxcap1283_done2722:
    nqp_rxmark rx1281_bstack, rxquantr1285_done2727, rx1281_pos, 0
  rxquantr1285_loop2726:
    repr_bind_attr_int rx1281_cur, rx1281_curclass, "$!pos", rx1281_pos
    $P11 = rx1281_cur."args"()
    repr_get_attr_int $I11, $P11, rx1281_curclass, "$!pos"
    lt $I11, 0, rx1281_fail2715
    goto rxsubrule1286_pass2728
  rxsubrule1286_back2729:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1281_curclass, "$!pos"
    lt $I11, 0, rx1281_fail2715
  rxsubrule1286_pass2728:
    rx1281_cstack = rx1281_cur."!cursor_capture"($P11, "args")
    set_addr $I11, rxsubrule1286_back2729
    push rx1281_bstack, $I11
    push rx1281_bstack, 0
    push rx1281_bstack, rx1281_pos
    elements $I11, rx1281_cstack
    push rx1281_bstack, $I11
    repr_get_attr_int rx1281_pos, $P11, rx1281_curclass, "$!pos"
    nqp_rxpeek $I19, rx1281_bstack, rxquantr1285_done2727
    inc $I19
    inc $I19
    set rx1281_rep, rx1281_bstack[$I19]
    nqp_rxcommit rx1281_bstack, rxquantr1285_done2727
    inc rx1281_rep
  rxquantr1285_done2727:
    rx1281_cur."!cursor_pass"(rx1281_pos, "term:sym<pir::op>", 'backtrack'=>1)
    .return (rx1281_cur)
  rx1281_restart2714:
    repr_get_attr_obj rx1281_cstack, rx1281_cur, rx1281_curclass, "$!cstack"
  rx1281_fail2715:
    unless rx1281_bstack, rx1281_done2713
    pop $I19, rx1281_bstack
    if_null rx1281_cstack, rx1281_cstack_done2718
    unless rx1281_cstack, rx1281_cstack_done2718
    dec $I19
    set $P11, rx1281_cstack[$I19]
  rx1281_cstack_done2718:
    pop rx1281_rep, rx1281_bstack
    pop rx1281_pos, rx1281_bstack
    pop $I19, rx1281_bstack
    lt rx1281_pos, -1, rx1281_done2713
    lt rx1281_pos, 0, rx1281_fail2715
    eq $I19, 0, rx1281_fail2715
    nqp_islist $I20, rx1281_cstack
    unless $I20, rx1281_jump2716
    elements $I18, rx1281_bstack
    le $I18, 0, rx1281_cut2717
    dec $I18
    set $I18, rx1281_bstack[$I18]
  rx1281_cut2717:
    assign rx1281_cstack, $I18
  rx1281_jump2716:
    jump $I19
  rx1281_done2713:
    rx1281_cur."!cursor_fail"()
    .return (rx1281_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<pir::const>" :subid("cuid_144_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1233
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1287_start
    .local string rx1287_tgt
    .local int rx1287_pos
    .local int rx1287_off
    .local int rx1287_eos
    .local int rx1287_rep
    .local pmc rx1287_cur
    .local pmc rx1287_curclass
    .local pmc rx1287_bstack
    .local pmc rx1287_cstack
    rx1287_start = self."!cursor_start_all"()
    set rx1287_cur, rx1287_start[0]
    set rx1287_tgt, rx1287_start[1]
    set rx1287_pos, rx1287_start[2]
    set rx1287_curclass, rx1287_start[3]
    set rx1287_bstack, rx1287_start[4]
    set $I19, rx1287_start[5]
    store_lex unicode:"$\x{a2}", rx1287_cur
    length rx1287_eos, rx1287_tgt
    eq $I19, 1, rx1287_restart2732
    gt rx1287_pos, rx1287_eos, rx1287_fail2733
    repr_get_attr_int $I11, self, rx1287_curclass, "$!from"
    ne $I11, -1, rxscan1288_done2739
    goto rxscan1288_scan2738
  rxscan1288_loop2737:
    inc rx1287_pos
    gt rx1287_pos, rx1287_eos, rx1287_fail2733
    repr_bind_attr_int rx1287_cur, rx1287_curclass, "$!from", rx1287_pos
  rxscan1288_scan2738:
    nqp_rxmark rx1287_bstack, rxscan1288_loop2737, rx1287_pos, 0
  rxscan1288_done2739:
    add $I11, rx1287_pos, 12
    gt $I11, rx1287_eos, rx1287_fail2733
    substr $S10, rx1287_tgt, rx1287_pos, 12
    ne $S10, ucs4:"pir::const::", rx1287_fail2733
    add rx1287_pos, 12
    nqp_rxmark rx1287_bstack, rxcap1289_fail2741, rx1287_pos, 0
    nqp_rxmark rx1287_bstack, rxquantr1290_done2743, -1, 0
  rxquantr1290_loop2742:
    ge rx1287_pos, rx1287_eos, rx1287_fail2733
    is_cclass $I11, .CCLASS_WORD, rx1287_tgt, rx1287_pos
    unless $I11, rx1287_fail2733
    add rx1287_pos, 1
    nqp_rxpeek $I19, rx1287_bstack, rxquantr1290_done2743
    inc $I19
    inc $I19
    set rx1287_rep, rx1287_bstack[$I19]
    nqp_rxcommit rx1287_bstack, rxquantr1290_done2743
    inc rx1287_rep
    nqp_rxmark rx1287_bstack, rxquantr1290_done2743, rx1287_pos, rx1287_rep
    goto rxquantr1290_loop2742
  rxquantr1290_done2743:
    nqp_rxpeek $I19, rx1287_bstack, rxcap1289_fail2741
    inc $I19
    set $I11, rx1287_bstack[$I19]
    repr_bind_attr_int rx1287_cur, rx1287_curclass, "$!pos", rx1287_pos
    $P11 = rx1287_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1287_pos)
    rx1287_cstack = rx1287_cur."!cursor_capture"($P11, "const")
    goto rxcap1289_done2740
  rxcap1289_fail2741:
    goto rx1287_fail2733
  rxcap1289_done2740:
    rx1287_cur."!cursor_pass"(rx1287_pos, "term:sym<pir::const>", 'backtrack'=>1)
    .return (rx1287_cur)
  rx1287_restart2732:
    repr_get_attr_obj rx1287_cstack, rx1287_cur, rx1287_curclass, "$!cstack"
  rx1287_fail2733:
    unless rx1287_bstack, rx1287_done2731
    pop $I19, rx1287_bstack
    if_null rx1287_cstack, rx1287_cstack_done2736
    unless rx1287_cstack, rx1287_cstack_done2736
    dec $I19
    set $P11, rx1287_cstack[$I19]
  rx1287_cstack_done2736:
    pop rx1287_rep, rx1287_bstack
    pop rx1287_pos, rx1287_bstack
    pop $I19, rx1287_bstack
    lt rx1287_pos, -1, rx1287_done2731
    lt rx1287_pos, 0, rx1287_fail2733
    eq $I19, 0, rx1287_fail2733
    nqp_islist $I20, rx1287_cstack
    unless $I20, rx1287_jump2734
    elements $I18, rx1287_bstack
    le $I18, 0, rx1287_cut2735
    dec $I18
    set $I18, rx1287_bstack[$I18]
  rx1287_cut2735:
    assign rx1287_cstack, $I18
  rx1287_jump2734:
    jump $I19
  rx1287_done2731:
    rx1287_cur."!cursor_fail"()
    .return (rx1287_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<nqp::op>" :subid("cuid_145_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1237
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1291_start
    .local string rx1291_tgt
    .local int rx1291_pos
    .local int rx1291_off
    .local int rx1291_eos
    .local int rx1291_rep
    .local pmc rx1291_cur
    .local pmc rx1291_curclass
    .local pmc rx1291_bstack
    .local pmc rx1291_cstack
    rx1291_start = self."!cursor_start_all"()
    set rx1291_cur, rx1291_start[0]
    set rx1291_tgt, rx1291_start[1]
    set rx1291_pos, rx1291_start[2]
    set rx1291_curclass, rx1291_start[3]
    set rx1291_bstack, rx1291_start[4]
    set $I19, rx1291_start[5]
    store_lex unicode:"$\x{a2}", rx1291_cur
    length rx1291_eos, rx1291_tgt
    eq $I19, 1, rx1291_restart2746
    gt rx1291_pos, rx1291_eos, rx1291_fail2747
    repr_get_attr_int $I11, self, rx1291_curclass, "$!from"
    ne $I11, -1, rxscan1292_done2753
    goto rxscan1292_scan2752
  rxscan1292_loop2751:
    inc rx1291_pos
    gt rx1291_pos, rx1291_eos, rx1291_fail2747
    repr_bind_attr_int rx1291_cur, rx1291_curclass, "$!from", rx1291_pos
  rxscan1292_scan2752:
    nqp_rxmark rx1291_bstack, rxscan1292_loop2751, rx1291_pos, 0
  rxscan1292_done2753:
    add $I11, rx1291_pos, 5
    gt $I11, rx1291_eos, rx1291_fail2747
    substr $S10, rx1291_tgt, rx1291_pos, 5
    ne $S10, ucs4:"nqp::", rx1291_fail2747
    add rx1291_pos, 5
    nqp_rxmark rx1291_bstack, rxcap1293_fail2755, rx1291_pos, 0
    nqp_rxmark rx1291_bstack, rxquantr1294_done2757, -1, 0
  rxquantr1294_loop2756:
    ge rx1291_pos, rx1291_eos, rx1291_fail2747
    is_cclass $I11, .CCLASS_WORD, rx1291_tgt, rx1291_pos
    unless $I11, rx1291_fail2747
    add rx1291_pos, 1
    nqp_rxpeek $I19, rx1291_bstack, rxquantr1294_done2757
    inc $I19
    inc $I19
    set rx1291_rep, rx1291_bstack[$I19]
    nqp_rxcommit rx1291_bstack, rxquantr1294_done2757
    inc rx1291_rep
    nqp_rxmark rx1291_bstack, rxquantr1294_done2757, rx1291_pos, rx1291_rep
    goto rxquantr1294_loop2756
  rxquantr1294_done2757:
    nqp_rxpeek $I19, rx1291_bstack, rxcap1293_fail2755
    inc $I19
    set $I11, rx1291_bstack[$I19]
    repr_bind_attr_int rx1291_cur, rx1291_curclass, "$!pos", rx1291_pos
    $P11 = rx1291_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1291_pos)
    rx1291_cstack = rx1291_cur."!cursor_capture"($P11, "op")
    goto rxcap1293_done2754
  rxcap1293_fail2755:
    goto rx1291_fail2747
  rxcap1293_done2754:
    nqp_rxmark rx1291_bstack, rxquantr1295_done2759, rx1291_pos, 0
  rxquantr1295_loop2758:
    repr_bind_attr_int rx1291_cur, rx1291_curclass, "$!pos", rx1291_pos
    $P11 = rx1291_cur."args"()
    repr_get_attr_int $I11, $P11, rx1291_curclass, "$!pos"
    lt $I11, 0, rx1291_fail2747
    goto rxsubrule1296_pass2760
  rxsubrule1296_back2761:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1291_curclass, "$!pos"
    lt $I11, 0, rx1291_fail2747
  rxsubrule1296_pass2760:
    rx1291_cstack = rx1291_cur."!cursor_capture"($P11, "args")
    set_addr $I11, rxsubrule1296_back2761
    push rx1291_bstack, $I11
    push rx1291_bstack, 0
    push rx1291_bstack, rx1291_pos
    elements $I11, rx1291_cstack
    push rx1291_bstack, $I11
    repr_get_attr_int rx1291_pos, $P11, rx1291_curclass, "$!pos"
    nqp_rxpeek $I19, rx1291_bstack, rxquantr1295_done2759
    inc $I19
    inc $I19
    set rx1291_rep, rx1291_bstack[$I19]
    nqp_rxcommit rx1291_bstack, rxquantr1295_done2759
    inc rx1291_rep
  rxquantr1295_done2759:
    rx1291_cur."!cursor_pass"(rx1291_pos, "term:sym<nqp::op>", 'backtrack'=>1)
    .return (rx1291_cur)
  rx1291_restart2746:
    repr_get_attr_obj rx1291_cstack, rx1291_cur, rx1291_curclass, "$!cstack"
  rx1291_fail2747:
    unless rx1291_bstack, rx1291_done2745
    pop $I19, rx1291_bstack
    if_null rx1291_cstack, rx1291_cstack_done2750
    unless rx1291_cstack, rx1291_cstack_done2750
    dec $I19
    set $P11, rx1291_cstack[$I19]
  rx1291_cstack_done2750:
    pop rx1291_rep, rx1291_bstack
    pop rx1291_pos, rx1291_bstack
    pop $I19, rx1291_bstack
    lt rx1291_pos, -1, rx1291_done2745
    lt rx1291_pos, 0, rx1291_fail2747
    eq $I19, 0, rx1291_fail2747
    nqp_islist $I20, rx1291_cstack
    unless $I20, rx1291_jump2748
    elements $I18, rx1291_bstack
    le $I18, 0, rx1291_cut2749
    dec $I18
    set $I18, rx1291_bstack[$I18]
  rx1291_cut2749:
    assign rx1291_cstack, $I18
  rx1291_jump2748:
    jump $I19
  rx1291_done2745:
    rx1291_cur."!cursor_fail"()
    .return (rx1291_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<nqp::const>" :subid("cuid_146_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1241
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1297_start
    .local string rx1297_tgt
    .local int rx1297_pos
    .local int rx1297_off
    .local int rx1297_eos
    .local int rx1297_rep
    .local pmc rx1297_cur
    .local pmc rx1297_curclass
    .local pmc rx1297_bstack
    .local pmc rx1297_cstack
    rx1297_start = self."!cursor_start_all"()
    set rx1297_cur, rx1297_start[0]
    set rx1297_tgt, rx1297_start[1]
    set rx1297_pos, rx1297_start[2]
    set rx1297_curclass, rx1297_start[3]
    set rx1297_bstack, rx1297_start[4]
    set $I19, rx1297_start[5]
    store_lex unicode:"$\x{a2}", rx1297_cur
    length rx1297_eos, rx1297_tgt
    eq $I19, 1, rx1297_restart2764
    gt rx1297_pos, rx1297_eos, rx1297_fail2765
    repr_get_attr_int $I11, self, rx1297_curclass, "$!from"
    ne $I11, -1, rxscan1298_done2771
    goto rxscan1298_scan2770
  rxscan1298_loop2769:
    inc rx1297_pos
    gt rx1297_pos, rx1297_eos, rx1297_fail2765
    repr_bind_attr_int rx1297_cur, rx1297_curclass, "$!from", rx1297_pos
  rxscan1298_scan2770:
    nqp_rxmark rx1297_bstack, rxscan1298_loop2769, rx1297_pos, 0
  rxscan1298_done2771:
    add $I11, rx1297_pos, 12
    gt $I11, rx1297_eos, rx1297_fail2765
    substr $S10, rx1297_tgt, rx1297_pos, 12
    ne $S10, ucs4:"nqp::const::", rx1297_fail2765
    add rx1297_pos, 12
    nqp_rxmark rx1297_bstack, rxcap1299_fail2773, rx1297_pos, 0
    nqp_rxmark rx1297_bstack, rxquantr1300_done2775, -1, 0
  rxquantr1300_loop2774:
    ge rx1297_pos, rx1297_eos, rx1297_fail2765
    is_cclass $I11, .CCLASS_WORD, rx1297_tgt, rx1297_pos
    unless $I11, rx1297_fail2765
    add rx1297_pos, 1
    nqp_rxpeek $I19, rx1297_bstack, rxquantr1300_done2775
    inc $I19
    inc $I19
    set rx1297_rep, rx1297_bstack[$I19]
    nqp_rxcommit rx1297_bstack, rxquantr1300_done2775
    inc rx1297_rep
    nqp_rxmark rx1297_bstack, rxquantr1300_done2775, rx1297_pos, rx1297_rep
    goto rxquantr1300_loop2774
  rxquantr1300_done2775:
    nqp_rxpeek $I19, rx1297_bstack, rxcap1299_fail2773
    inc $I19
    set $I11, rx1297_bstack[$I19]
    repr_bind_attr_int rx1297_cur, rx1297_curclass, "$!pos", rx1297_pos
    $P11 = rx1297_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1297_pos)
    rx1297_cstack = rx1297_cur."!cursor_capture"($P11, "const")
    goto rxcap1299_done2772
  rxcap1299_fail2773:
    goto rx1297_fail2765
  rxcap1299_done2772:
    rx1297_cur."!cursor_pass"(rx1297_pos, "term:sym<nqp::const>", 'backtrack'=>1)
    .return (rx1297_cur)
  rx1297_restart2764:
    repr_get_attr_obj rx1297_cstack, rx1297_cur, rx1297_curclass, "$!cstack"
  rx1297_fail2765:
    unless rx1297_bstack, rx1297_done2763
    pop $I19, rx1297_bstack
    if_null rx1297_cstack, rx1297_cstack_done2768
    unless rx1297_cstack, rx1297_cstack_done2768
    dec $I19
    set $P11, rx1297_cstack[$I19]
  rx1297_cstack_done2768:
    pop rx1297_rep, rx1297_bstack
    pop rx1297_pos, rx1297_bstack
    pop $I19, rx1297_bstack
    lt rx1297_pos, -1, rx1297_done2763
    lt rx1297_pos, 0, rx1297_fail2765
    eq $I19, 0, rx1297_fail2765
    nqp_islist $I20, rx1297_cstack
    unless $I20, rx1297_jump2766
    elements $I18, rx1297_bstack
    le $I18, 0, rx1297_cut2767
    dec $I18
    set $I18, rx1297_bstack[$I18]
  rx1297_cut2767:
    assign rx1297_cstack, $I18
  rx1297_jump2766:
    jump $I19
  rx1297_done2763:
    rx1297_cur."!cursor_fail"()
    .return (rx1297_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<onlystar>" :subid("cuid_147_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1245
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_411_1361734139.417' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1301_start
    .local string rx1301_tgt
    .local int rx1301_pos
    .local int rx1301_off
    .local int rx1301_eos
    .local int rx1301_rep
    .local pmc rx1301_cur
    .local pmc rx1301_curclass
    .local pmc rx1301_bstack
    .local pmc rx1301_cstack
    rx1301_start = self."!cursor_start_all"()
    set rx1301_cur, rx1301_start[0]
    set rx1301_tgt, rx1301_start[1]
    set rx1301_pos, rx1301_start[2]
    set rx1301_curclass, rx1301_start[3]
    set rx1301_bstack, rx1301_start[4]
    set $I19, rx1301_start[5]
    store_lex unicode:"$\x{a2}", rx1301_cur
    length rx1301_eos, rx1301_tgt
    eq $I19, 1, rx1301_restart2778
    gt rx1301_pos, rx1301_eos, rx1301_fail2779
    repr_get_attr_int $I11, self, rx1301_curclass, "$!from"
    ne $I11, -1, rxscan1302_done2785
    goto rxscan1302_scan2784
  rxscan1302_loop2783:
    inc rx1301_pos
    gt rx1301_pos, rx1301_eos, rx1301_fail2779
    repr_bind_attr_int rx1301_cur, rx1301_curclass, "$!from", rx1301_pos
  rxscan1302_scan2784:
    nqp_rxmark rx1301_bstack, rxscan1302_loop2783, rx1301_pos, 0
  rxscan1302_done2785:
    add $I11, rx1301_pos, 3
    gt $I11, rx1301_eos, rx1301_fail2779
    substr $S10, rx1301_tgt, rx1301_pos, 3
    ne $S10, ucs4:"{*}", rx1301_fail2779
    add rx1301_pos, 3
    repr_bind_attr_int rx1301_cur, rx1301_curclass, "$!pos", rx1301_pos
    $P11 = rx1301_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1301_curclass, "$!pos"
    lt $I11, 0, rx1301_fail2779
  alt1303_02787:
    nqp_rxmark rx1301_bstack, alt1303_12793, rx1301_pos, 0
    repr_bind_attr_int rx1301_cur, rx1301_curclass, "$!pos", rx1301_pos
    store_lex unicode:"$\x{a2}", rx1301_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_411_1361734139.417' 
    capture_lex $P5002
    $P5003 = $P5002()
    unless $P5003, rx1301_fail2779
    goto alt1303_end2786
  alt1303_12793:
    repr_bind_attr_int rx1301_cur, rx1301_curclass, "$!pos", rx1301_pos
    $P11 = rx1301_cur."panic"("{*} may only appear in proto")
    repr_get_attr_int $I11, $P11, rx1301_curclass, "$!pos"
    lt $I11, 0, rx1301_fail2779
    repr_get_attr_int rx1301_pos, $P11, rx1301_curclass, "$!pos"
  alt1303_end2786:
    rx1301_cur."!cursor_pass"(rx1301_pos, "term:sym<onlystar>", 'backtrack'=>1)
    .return (rx1301_cur)
  rx1301_restart2778:
    repr_get_attr_obj rx1301_cstack, rx1301_cur, rx1301_curclass, "$!cstack"
  rx1301_fail2779:
    unless rx1301_bstack, rx1301_done2777
    pop $I19, rx1301_bstack
    if_null rx1301_cstack, rx1301_cstack_done2782
    unless rx1301_cstack, rx1301_cstack_done2782
    dec $I19
    set $P11, rx1301_cstack[$I19]
  rx1301_cstack_done2782:
    pop rx1301_rep, rx1301_bstack
    pop rx1301_pos, rx1301_bstack
    pop $I19, rx1301_bstack
    lt rx1301_pos, -1, rx1301_done2777
    lt rx1301_pos, 0, rx1301_fail2779
    eq $I19, 0, rx1301_fail2779
    nqp_islist $I20, rx1301_cstack
    unless $I20, rx1301_jump2780
    elements $I18, rx1301_bstack
    le $I18, 0, rx1301_cut2781
    dec $I18
    set $I18, rx1301_bstack[$I18]
  rx1301_cut2781:
    assign rx1301_cstack, $I18
  rx1301_jump2780:
    jump $I19
  rx1301_done2777:
    rx1301_cur."!cursor_fail"()
    .return (rx1301_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_411_1361734139.417") :anon :lex :outer("cuid_147_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1247
    .local pmc fb_tmp_164 
    find_dynamic_lex $P5001, "$*MULTINESS"
    unless_null $P5001, fallback2788
    nqp_get_sc_object $P5003, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5002, $P5003
    set fb_tmp_164, $P5002
    repr_defined $I5002, fb_tmp_164
    unless $I5002 goto if1304_else2789 
    set $P5004, fb_tmp_164["$MULTINESS"]
    set $P5006, $P5004
    goto if1304_end2790
  if1304_else2789:
    null $P5005
    set $P5006, $P5005
  if1304_end2790:
    unless_null $P5006, vivi_13052791
    nqp_get_sc_object $P5007, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5006, $P5007
  vivi_13052791:
    unless_null $P5006, vivi_13062792
    die "Contextual $*MULTINESS not found"
    box $P5008, "Contextual $*MULTINESS not found"
    set $P5006, $P5008
  vivi_13062792:
    set $P5001, $P5006
  fallback2788:
    set $S5001, $P5001
    iseq $I5001, $S5001, "proto"
    .return ($I5001) 
.end
.HLL "nqp"
.namespace []
.sub "args" :subid("cuid_148_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1250
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1308_start
    .local string rx1308_tgt
    .local int rx1308_pos
    .local int rx1308_off
    .local int rx1308_eos
    .local int rx1308_rep
    .local pmc rx1308_cur
    .local pmc rx1308_curclass
    .local pmc rx1308_bstack
    .local pmc rx1308_cstack
    rx1308_start = self."!cursor_start_all"()
    set rx1308_cur, rx1308_start[0]
    set rx1308_tgt, rx1308_start[1]
    set rx1308_pos, rx1308_start[2]
    set rx1308_curclass, rx1308_start[3]
    set rx1308_bstack, rx1308_start[4]
    set $I19, rx1308_start[5]
    store_lex unicode:"$\x{a2}", rx1308_cur
    length rx1308_eos, rx1308_tgt
    eq $I19, 1, rx1308_restart2797
    gt rx1308_pos, rx1308_eos, rx1308_fail2798
    repr_get_attr_int $I11, self, rx1308_curclass, "$!from"
    ne $I11, -1, rxscan1309_done2804
    goto rxscan1309_scan2803
  rxscan1309_loop2802:
    inc rx1308_pos
    gt rx1308_pos, rx1308_eos, rx1308_fail2798
    repr_bind_attr_int rx1308_cur, rx1308_curclass, "$!from", rx1308_pos
  rxscan1309_scan2803:
    nqp_rxmark rx1308_bstack, rxscan1309_loop2802, rx1308_pos, 0
  rxscan1309_done2804:
    add $I11, rx1308_pos, 1
    gt $I11, rx1308_eos, rx1308_fail2798
    substr $S10, rx1308_tgt, rx1308_pos, 1
    ne $S10, ucs4:"(", rx1308_fail2798
    add rx1308_pos, 1
    repr_bind_attr_int rx1308_cur, rx1308_curclass, "$!pos", rx1308_pos
    $P11 = rx1308_cur."arglist"()
    repr_get_attr_int $I11, $P11, rx1308_curclass, "$!pos"
    lt $I11, 0, rx1308_fail2798
    nqp_rxmark rx1308_bstack, rxsubrule1310_pass2805, -1, 0
  rxsubrule1310_pass2805:
    rx1308_cstack = rx1308_cur."!cursor_capture"($P11, "arglist")
    repr_get_attr_int rx1308_pos, $P11, rx1308_curclass, "$!pos"
    add $I11, rx1308_pos, 1
    gt $I11, rx1308_eos, rx1308_fail2798
    substr $S10, rx1308_tgt, rx1308_pos, 1
    ne $S10, ucs4:")", rx1308_fail2798
    add rx1308_pos, 1
    rx1308_cur."!cursor_pass"(rx1308_pos, "args", 'backtrack'=>1)
    .return (rx1308_cur)
  rx1308_restart2797:
    repr_get_attr_obj rx1308_cstack, rx1308_cur, rx1308_curclass, "$!cstack"
  rx1308_fail2798:
    unless rx1308_bstack, rx1308_done2796
    pop $I19, rx1308_bstack
    if_null rx1308_cstack, rx1308_cstack_done2801
    unless rx1308_cstack, rx1308_cstack_done2801
    dec $I19
    set $P11, rx1308_cstack[$I19]
  rx1308_cstack_done2801:
    pop rx1308_rep, rx1308_bstack
    pop rx1308_pos, rx1308_bstack
    pop $I19, rx1308_bstack
    lt rx1308_pos, -1, rx1308_done2796
    lt rx1308_pos, 0, rx1308_fail2798
    eq $I19, 0, rx1308_fail2798
    nqp_islist $I20, rx1308_cstack
    unless $I20, rx1308_jump2799
    elements $I18, rx1308_bstack
    le $I18, 0, rx1308_cut2800
    dec $I18
    set $I18, rx1308_bstack[$I18]
  rx1308_cut2800:
    assign rx1308_cstack, $I18
  rx1308_jump2799:
    jump $I19
  rx1308_done2796:
    rx1308_cur."!cursor_fail"()
    .return (rx1308_cur) 
.end
.HLL "nqp"
.namespace []
.sub "arglist" :subid("cuid_149_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1254
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1311_start
    .local string rx1311_tgt
    .local int rx1311_pos
    .local int rx1311_off
    .local int rx1311_eos
    .local int rx1311_rep
    .local pmc rx1311_cur
    .local pmc rx1311_curclass
    .local pmc rx1311_bstack
    .local pmc rx1311_cstack
    rx1311_start = self."!cursor_start_all"()
    set rx1311_cur, rx1311_start[0]
    set rx1311_tgt, rx1311_start[1]
    set rx1311_pos, rx1311_start[2]
    set rx1311_curclass, rx1311_start[3]
    set rx1311_bstack, rx1311_start[4]
    set $I19, rx1311_start[5]
    store_lex unicode:"$\x{a2}", rx1311_cur
    length rx1311_eos, rx1311_tgt
    eq $I19, 1, rx1311_restart2808
    gt rx1311_pos, rx1311_eos, rx1311_fail2809
    repr_get_attr_int $I11, self, rx1311_curclass, "$!from"
    ne $I11, -1, rxscan1312_done2815
    goto rxscan1312_scan2814
  rxscan1312_loop2813:
    inc rx1311_pos
    gt rx1311_pos, rx1311_eos, rx1311_fail2809
    repr_bind_attr_int rx1311_cur, rx1311_curclass, "$!from", rx1311_pos
  rxscan1312_scan2814:
    nqp_rxmark rx1311_bstack, rxscan1312_loop2813, rx1311_pos, 0
  rxscan1312_done2815:
    repr_bind_attr_int rx1311_cur, rx1311_curclass, "$!pos", rx1311_pos
    $P11 = rx1311_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1311_curclass, "$!pos"
    lt $I11, 0, rx1311_fail2809
    repr_get_attr_int rx1311_pos, $P11, rx1311_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1314_02818
    nqp_push_label $P11, alt1314_12820
    nqp_rxmark rx1311_bstack, alt1314_end2817, -1, 0
    rx1311_cur."!alt"(rx1311_pos, "alt_nfa__36_1361734142.141", $P11)
    goto rx1311_fail2809
  alt1314_02818:
    repr_bind_attr_int rx1311_cur, rx1311_curclass, "$!pos", rx1311_pos
    $P11 = rx1311_cur."EXPR"("f=")
    repr_get_attr_int $I11, $P11, rx1311_curclass, "$!pos"
    lt $I11, 0, rx1311_fail2809
    nqp_rxmark rx1311_bstack, rxsubrule1315_pass2819, -1, 0
  rxsubrule1315_pass2819:
    rx1311_cstack = rx1311_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx1311_pos, $P11, rx1311_curclass, "$!pos"
    goto alt1314_end2817
  alt1314_12820:
    goto alt1314_end2817
  alt1314_end2817:
    nqp_rxcommit rx1311_bstack, alt1314_end2817
    rx1311_cur."!cursor_pass"(rx1311_pos, "arglist", 'backtrack'=>1)
    .return (rx1311_cur)
  rx1311_restart2808:
    repr_get_attr_obj rx1311_cstack, rx1311_cur, rx1311_curclass, "$!cstack"
  rx1311_fail2809:
    unless rx1311_bstack, rx1311_done2807
    pop $I19, rx1311_bstack
    if_null rx1311_cstack, rx1311_cstack_done2812
    unless rx1311_cstack, rx1311_cstack_done2812
    dec $I19
    set $P11, rx1311_cstack[$I19]
  rx1311_cstack_done2812:
    pop rx1311_rep, rx1311_bstack
    pop rx1311_pos, rx1311_bstack
    pop $I19, rx1311_bstack
    lt rx1311_pos, -1, rx1311_done2807
    lt rx1311_pos, 0, rx1311_fail2809
    eq $I19, 0, rx1311_fail2809
    nqp_islist $I20, rx1311_cstack
    unless $I20, rx1311_jump2810
    elements $I18, rx1311_bstack
    le $I18, 0, rx1311_cut2811
    dec $I18
    set $I18, rx1311_bstack[$I18]
  rx1311_cut2811:
    assign rx1311_cstack, $I18
  rx1311_jump2810:
    jump $I19
  rx1311_done2807:
    rx1311_cur."!cursor_fail"()
    .return (rx1311_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<value>" :subid("cuid_150_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1263
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1317_start
    .local string rx1317_tgt
    .local int rx1317_pos
    .local int rx1317_off
    .local int rx1317_eos
    .local int rx1317_rep
    .local pmc rx1317_cur
    .local pmc rx1317_curclass
    .local pmc rx1317_bstack
    .local pmc rx1317_cstack
    rx1317_start = self."!cursor_start_all"()
    set rx1317_cur, rx1317_start[0]
    set rx1317_tgt, rx1317_start[1]
    set rx1317_pos, rx1317_start[2]
    set rx1317_curclass, rx1317_start[3]
    set rx1317_bstack, rx1317_start[4]
    set $I19, rx1317_start[5]
    store_lex unicode:"$\x{a2}", rx1317_cur
    length rx1317_eos, rx1317_tgt
    eq $I19, 1, rx1317_restart2824
    gt rx1317_pos, rx1317_eos, rx1317_fail2825
    repr_get_attr_int $I11, self, rx1317_curclass, "$!from"
    ne $I11, -1, rxscan1318_done2831
    goto rxscan1318_scan2830
  rxscan1318_loop2829:
    inc rx1317_pos
    gt rx1317_pos, rx1317_eos, rx1317_fail2825
    repr_bind_attr_int rx1317_cur, rx1317_curclass, "$!from", rx1317_pos
  rxscan1318_scan2830:
    nqp_rxmark rx1317_bstack, rxscan1318_loop2829, rx1317_pos, 0
  rxscan1318_done2831:
    repr_bind_attr_int rx1317_cur, rx1317_curclass, "$!pos", rx1317_pos
    $P11 = rx1317_cur."value"()
    repr_get_attr_int $I11, $P11, rx1317_curclass, "$!pos"
    lt $I11, 0, rx1317_fail2825
    nqp_rxmark rx1317_bstack, rxsubrule1319_pass2832, -1, 0
  rxsubrule1319_pass2832:
    rx1317_cstack = rx1317_cur."!cursor_capture"($P11, "value")
    repr_get_attr_int rx1317_pos, $P11, rx1317_curclass, "$!pos"
    rx1317_cur."!cursor_pass"(rx1317_pos, "term:sym<value>", 'backtrack'=>1)
    .return (rx1317_cur)
  rx1317_restart2824:
    repr_get_attr_obj rx1317_cstack, rx1317_cur, rx1317_curclass, "$!cstack"
  rx1317_fail2825:
    unless rx1317_bstack, rx1317_done2823
    pop $I19, rx1317_bstack
    if_null rx1317_cstack, rx1317_cstack_done2828
    unless rx1317_cstack, rx1317_cstack_done2828
    dec $I19
    set $P11, rx1317_cstack[$I19]
  rx1317_cstack_done2828:
    pop rx1317_rep, rx1317_bstack
    pop rx1317_pos, rx1317_bstack
    pop $I19, rx1317_bstack
    lt rx1317_pos, -1, rx1317_done2823
    lt rx1317_pos, 0, rx1317_fail2825
    eq $I19, 0, rx1317_fail2825
    nqp_islist $I20, rx1317_cstack
    unless $I20, rx1317_jump2826
    elements $I18, rx1317_bstack
    le $I18, 0, rx1317_cut2827
    dec $I18
    set $I18, rx1317_bstack[$I18]
  rx1317_cut2827:
    assign rx1317_cstack, $I18
  rx1317_jump2826:
    jump $I19
  rx1317_done2823:
    rx1317_cur."!cursor_fail"()
    .return (rx1317_cur) 
.end
.HLL "nqp"
.namespace []
.sub "value" :subid("cuid_151_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1265
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1320_start
    .local string rx1320_tgt
    .local int rx1320_pos
    .local int rx1320_off
    .local int rx1320_eos
    .local int rx1320_rep
    .local pmc rx1320_cur
    .local pmc rx1320_curclass
    .local pmc rx1320_bstack
    .local pmc rx1320_cstack
    rx1320_start = self."!cursor_start_all"()
    set rx1320_cur, rx1320_start[0]
    set rx1320_tgt, rx1320_start[1]
    set rx1320_pos, rx1320_start[2]
    set rx1320_curclass, rx1320_start[3]
    set rx1320_bstack, rx1320_start[4]
    set $I19, rx1320_start[5]
    store_lex unicode:"$\x{a2}", rx1320_cur
    length rx1320_eos, rx1320_tgt
    eq $I19, 1, rx1320_restart2835
    gt rx1320_pos, rx1320_eos, rx1320_fail2836
    repr_get_attr_int $I11, self, rx1320_curclass, "$!from"
    ne $I11, -1, rxscan1321_done2842
    goto rxscan1321_scan2841
  rxscan1321_loop2840:
    inc rx1320_pos
    gt rx1320_pos, rx1320_eos, rx1320_fail2836
    repr_bind_attr_int rx1320_cur, rx1320_curclass, "$!from", rx1320_pos
  rxscan1321_scan2841:
    nqp_rxmark rx1320_bstack, rxscan1321_loop2840, rx1320_pos, 0
  rxscan1321_done2842:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1322_02844
    nqp_push_label $P11, alt1322_12846
    nqp_rxmark rx1320_bstack, alt1322_end2843, -1, 0
    rx1320_cur."!alt"(rx1320_pos, "alt_nfa__37_1361734142.151", $P11)
    goto rx1320_fail2836
  alt1322_02844:
    repr_bind_attr_int rx1320_cur, rx1320_curclass, "$!pos", rx1320_pos
    $P11 = rx1320_cur."quote"()
    repr_get_attr_int $I11, $P11, rx1320_curclass, "$!pos"
    lt $I11, 0, rx1320_fail2836
    nqp_rxmark rx1320_bstack, rxsubrule1323_pass2845, -1, 0
  rxsubrule1323_pass2845:
    rx1320_cstack = rx1320_cur."!cursor_capture"($P11, "quote")
    repr_get_attr_int rx1320_pos, $P11, rx1320_curclass, "$!pos"
    goto alt1322_end2843
  alt1322_12846:
    repr_bind_attr_int rx1320_cur, rx1320_curclass, "$!pos", rx1320_pos
    $P11 = rx1320_cur."number"()
    repr_get_attr_int $I11, $P11, rx1320_curclass, "$!pos"
    lt $I11, 0, rx1320_fail2836
    nqp_rxmark rx1320_bstack, rxsubrule1324_pass2847, -1, 0
  rxsubrule1324_pass2847:
    rx1320_cstack = rx1320_cur."!cursor_capture"($P11, "number")
    repr_get_attr_int rx1320_pos, $P11, rx1320_curclass, "$!pos"
    goto alt1322_end2843
  alt1322_end2843:
    rx1320_cur."!cursor_pass"(rx1320_pos, "value", 'backtrack'=>1)
    .return (rx1320_cur)
  rx1320_restart2835:
    repr_get_attr_obj rx1320_cstack, rx1320_cur, rx1320_curclass, "$!cstack"
  rx1320_fail2836:
    unless rx1320_bstack, rx1320_done2834
    pop $I19, rx1320_bstack
    if_null rx1320_cstack, rx1320_cstack_done2839
    unless rx1320_cstack, rx1320_cstack_done2839
    dec $I19
    set $P11, rx1320_cstack[$I19]
  rx1320_cstack_done2839:
    pop rx1320_rep, rx1320_bstack
    pop rx1320_pos, rx1320_bstack
    pop $I19, rx1320_bstack
    lt rx1320_pos, -1, rx1320_done2834
    lt rx1320_pos, 0, rx1320_fail2836
    eq $I19, 0, rx1320_fail2836
    nqp_islist $I20, rx1320_cstack
    unless $I20, rx1320_jump2837
    elements $I18, rx1320_bstack
    le $I18, 0, rx1320_cut2838
    dec $I18
    set $I18, rx1320_bstack[$I18]
  rx1320_cut2838:
    assign rx1320_cstack, $I18
  rx1320_jump2837:
    jump $I19
  rx1320_done2834:
    rx1320_cur."!cursor_fail"()
    .return (rx1320_cur) 
.end
.HLL "nqp"
.namespace []
.sub "number" :subid("cuid_152_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1270
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1325_start
    .local string rx1325_tgt
    .local int rx1325_pos
    .local int rx1325_off
    .local int rx1325_eos
    .local int rx1325_rep
    .local pmc rx1325_cur
    .local pmc rx1325_curclass
    .local pmc rx1325_bstack
    .local pmc rx1325_cstack
    rx1325_start = self."!cursor_start_all"()
    set rx1325_cur, rx1325_start[0]
    set rx1325_tgt, rx1325_start[1]
    set rx1325_pos, rx1325_start[2]
    set rx1325_curclass, rx1325_start[3]
    set rx1325_bstack, rx1325_start[4]
    set $I19, rx1325_start[5]
    store_lex unicode:"$\x{a2}", rx1325_cur
    length rx1325_eos, rx1325_tgt
    eq $I19, 1, rx1325_restart2850
    gt rx1325_pos, rx1325_eos, rx1325_fail2851
    repr_get_attr_int $I11, self, rx1325_curclass, "$!from"
    ne $I11, -1, rxscan1326_done2857
    goto rxscan1326_scan2856
  rxscan1326_loop2855:
    inc rx1325_pos
    gt rx1325_pos, rx1325_eos, rx1325_fail2851
    repr_bind_attr_int rx1325_cur, rx1325_curclass, "$!from", rx1325_pos
  rxscan1326_scan2856:
    nqp_rxmark rx1325_bstack, rxscan1326_loop2855, rx1325_pos, 0
  rxscan1326_done2857:
    nqp_rxmark rx1325_bstack, rxcap1327_fail2859, rx1325_pos, 0
    nqp_rxmark rx1325_bstack, rxquantr1328_done2861, rx1325_pos, 0
  rxquantr1328_loop2860:
  alt1329_02863:
    nqp_rxmark rx1325_bstack, alt1329_12864, rx1325_pos, 0
    add $I11, rx1325_pos, 1
    gt $I11, rx1325_eos, rx1325_fail2851
    substr $S10, rx1325_tgt, rx1325_pos, 1
    ne $S10, ucs4:"-", rx1325_fail2851
    add rx1325_pos, 1
    goto alt1329_end2862
  alt1329_12864:
    ge rx1325_pos, rx1325_eos, rx1325_fail2851
    substr $S11, rx1325_tgt, rx1325_pos, 1
    index $I11, ucs4:"+", $S11
    lt $I11, 0, rx1325_fail2851
    inc rx1325_pos
  alt1329_end2862:
    nqp_rxpeek $I19, rx1325_bstack, rxquantr1328_done2861
    inc $I19
    inc $I19
    set rx1325_rep, rx1325_bstack[$I19]
    nqp_rxcommit rx1325_bstack, rxquantr1328_done2861
    inc rx1325_rep
  rxquantr1328_done2861:
    nqp_rxpeek $I19, rx1325_bstack, rxcap1327_fail2859
    inc $I19
    set $I11, rx1325_bstack[$I19]
    repr_bind_attr_int rx1325_cur, rx1325_curclass, "$!pos", rx1325_pos
    $P11 = rx1325_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1325_pos)
    rx1325_cstack = rx1325_cur."!cursor_capture"($P11, "sign")
    goto rxcap1327_done2858
  rxcap1327_fail2859:
    goto rx1325_fail2851
  rxcap1327_done2858:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1330_02866
    nqp_push_label $P11, alt1330_12868
    nqp_rxmark rx1325_bstack, alt1330_end2865, -1, 0
    rx1325_cur."!alt"(rx1325_pos, "alt_nfa__38_1361734142.161", $P11)
    goto rx1325_fail2851
  alt1330_02866:
    repr_bind_attr_int rx1325_cur, rx1325_curclass, "$!pos", rx1325_pos
    $P11 = rx1325_cur."dec_number"()
    repr_get_attr_int $I11, $P11, rx1325_curclass, "$!pos"
    lt $I11, 0, rx1325_fail2851
    nqp_rxmark rx1325_bstack, rxsubrule1331_pass2867, -1, 0
  rxsubrule1331_pass2867:
    rx1325_cstack = rx1325_cur."!cursor_capture"($P11, "dec_number")
    repr_get_attr_int rx1325_pos, $P11, rx1325_curclass, "$!pos"
    goto alt1330_end2865
  alt1330_12868:
    repr_bind_attr_int rx1325_cur, rx1325_curclass, "$!pos", rx1325_pos
    $P11 = rx1325_cur."integer"()
    repr_get_attr_int $I11, $P11, rx1325_curclass, "$!pos"
    lt $I11, 0, rx1325_fail2851
    nqp_rxmark rx1325_bstack, rxsubrule1332_pass2869, -1, 0
  rxsubrule1332_pass2869:
    rx1325_cstack = rx1325_cur."!cursor_capture"($P11, "integer")
    repr_get_attr_int rx1325_pos, $P11, rx1325_curclass, "$!pos"
    goto alt1330_end2865
  alt1330_end2865:
    nqp_rxcommit rx1325_bstack, alt1330_end2865
    rx1325_cur."!cursor_pass"(rx1325_pos, "number", 'backtrack'=>1)
    .return (rx1325_cur)
  rx1325_restart2850:
    repr_get_attr_obj rx1325_cstack, rx1325_cur, rx1325_curclass, "$!cstack"
  rx1325_fail2851:
    unless rx1325_bstack, rx1325_done2849
    pop $I19, rx1325_bstack
    if_null rx1325_cstack, rx1325_cstack_done2854
    unless rx1325_cstack, rx1325_cstack_done2854
    dec $I19
    set $P11, rx1325_cstack[$I19]
  rx1325_cstack_done2854:
    pop rx1325_rep, rx1325_bstack
    pop rx1325_pos, rx1325_bstack
    pop $I19, rx1325_bstack
    lt rx1325_pos, -1, rx1325_done2849
    lt rx1325_pos, 0, rx1325_fail2851
    eq $I19, 0, rx1325_fail2851
    nqp_islist $I20, rx1325_cstack
    unless $I20, rx1325_jump2852
    elements $I18, rx1325_bstack
    le $I18, 0, rx1325_cut2853
    dec $I18
    set $I18, rx1325_bstack[$I18]
  rx1325_cut2853:
    assign rx1325_cstack, $I18
  rx1325_jump2852:
    jump $I19
  rx1325_done2849:
    rx1325_cur."!cursor_fail"()
    .return (rx1325_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote" :subid("cuid_153_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1275
    .param pmc self 
    $P5001 = self."!protoregex"("quote")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<apos>" :subid("cuid_154_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1276
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1333_start
    .local string rx1333_tgt
    .local int rx1333_pos
    .local int rx1333_off
    .local int rx1333_eos
    .local int rx1333_rep
    .local pmc rx1333_cur
    .local pmc rx1333_curclass
    .local pmc rx1333_bstack
    .local pmc rx1333_cstack
    rx1333_start = self."!cursor_start_all"()
    set rx1333_cur, rx1333_start[0]
    set rx1333_tgt, rx1333_start[1]
    set rx1333_pos, rx1333_start[2]
    set rx1333_curclass, rx1333_start[3]
    set rx1333_bstack, rx1333_start[4]
    set $I19, rx1333_start[5]
    store_lex unicode:"$\x{a2}", rx1333_cur
    length rx1333_eos, rx1333_tgt
    eq $I19, 1, rx1333_restart2872
    gt rx1333_pos, rx1333_eos, rx1333_fail2873
    repr_get_attr_int $I11, self, rx1333_curclass, "$!from"
    ne $I11, -1, rxscan1334_done2879
    goto rxscan1334_scan2878
  rxscan1334_loop2877:
    inc rx1333_pos
    gt rx1333_pos, rx1333_eos, rx1333_fail2873
    repr_bind_attr_int rx1333_cur, rx1333_curclass, "$!from", rx1333_pos
  rxscan1334_scan2878:
    nqp_rxmark rx1333_bstack, rxscan1334_loop2877, rx1333_pos, 0
  rxscan1334_done2879:
    ge rx1333_pos, rx1333_eos, rx1333_fail2873
    substr $S11, rx1333_tgt, rx1333_pos, 1
    index $I11, ucs4:"'", $S11
    lt $I11, 0, rx1333_fail2873
    repr_bind_attr_int rx1333_cur, rx1333_curclass, "$!pos", rx1333_pos
    $P11 = rx1333_cur."quote_EXPR"(":q")
    repr_get_attr_int $I11, $P11, rx1333_curclass, "$!pos"
    lt $I11, 0, rx1333_fail2873
    nqp_rxmark rx1333_bstack, rxsubrule1335_pass2880, -1, 0
  rxsubrule1335_pass2880:
    rx1333_cstack = rx1333_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1333_pos, $P11, rx1333_curclass, "$!pos"
    rx1333_cur."!cursor_pass"(rx1333_pos, "quote:sym<apos>", 'backtrack'=>1)
    .return (rx1333_cur)
  rx1333_restart2872:
    repr_get_attr_obj rx1333_cstack, rx1333_cur, rx1333_curclass, "$!cstack"
  rx1333_fail2873:
    unless rx1333_bstack, rx1333_done2871
    pop $I19, rx1333_bstack
    if_null rx1333_cstack, rx1333_cstack_done2876
    unless rx1333_cstack, rx1333_cstack_done2876
    dec $I19
    set $P11, rx1333_cstack[$I19]
  rx1333_cstack_done2876:
    pop rx1333_rep, rx1333_bstack
    pop rx1333_pos, rx1333_bstack
    pop $I19, rx1333_bstack
    lt rx1333_pos, -1, rx1333_done2871
    lt rx1333_pos, 0, rx1333_fail2873
    eq $I19, 0, rx1333_fail2873
    nqp_islist $I20, rx1333_cstack
    unless $I20, rx1333_jump2874
    elements $I18, rx1333_bstack
    le $I18, 0, rx1333_cut2875
    dec $I18
    set $I18, rx1333_bstack[$I18]
  rx1333_cut2875:
    assign rx1333_cstack, $I18
  rx1333_jump2874:
    jump $I19
  rx1333_done2871:
    rx1333_cur."!cursor_fail"()
    .return (rx1333_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<dblq>" :subid("cuid_155_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1277
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1336_start
    .local string rx1336_tgt
    .local int rx1336_pos
    .local int rx1336_off
    .local int rx1336_eos
    .local int rx1336_rep
    .local pmc rx1336_cur
    .local pmc rx1336_curclass
    .local pmc rx1336_bstack
    .local pmc rx1336_cstack
    rx1336_start = self."!cursor_start_all"()
    set rx1336_cur, rx1336_start[0]
    set rx1336_tgt, rx1336_start[1]
    set rx1336_pos, rx1336_start[2]
    set rx1336_curclass, rx1336_start[3]
    set rx1336_bstack, rx1336_start[4]
    set $I19, rx1336_start[5]
    store_lex unicode:"$\x{a2}", rx1336_cur
    length rx1336_eos, rx1336_tgt
    eq $I19, 1, rx1336_restart2883
    gt rx1336_pos, rx1336_eos, rx1336_fail2884
    repr_get_attr_int $I11, self, rx1336_curclass, "$!from"
    ne $I11, -1, rxscan1337_done2890
    goto rxscan1337_scan2889
  rxscan1337_loop2888:
    inc rx1336_pos
    gt rx1336_pos, rx1336_eos, rx1336_fail2884
    repr_bind_attr_int rx1336_cur, rx1336_curclass, "$!from", rx1336_pos
  rxscan1337_scan2889:
    nqp_rxmark rx1336_bstack, rxscan1337_loop2888, rx1336_pos, 0
  rxscan1337_done2890:
    ge rx1336_pos, rx1336_eos, rx1336_fail2884
    substr $S11, rx1336_tgt, rx1336_pos, 1
    index $I11, ucs4:"\"", $S11
    lt $I11, 0, rx1336_fail2884
    repr_bind_attr_int rx1336_cur, rx1336_curclass, "$!pos", rx1336_pos
    $P11 = rx1336_cur."quote_EXPR"(":qq")
    repr_get_attr_int $I11, $P11, rx1336_curclass, "$!pos"
    lt $I11, 0, rx1336_fail2884
    nqp_rxmark rx1336_bstack, rxsubrule1338_pass2891, -1, 0
  rxsubrule1338_pass2891:
    rx1336_cstack = rx1336_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1336_pos, $P11, rx1336_curclass, "$!pos"
    rx1336_cur."!cursor_pass"(rx1336_pos, "quote:sym<dblq>", 'backtrack'=>1)
    .return (rx1336_cur)
  rx1336_restart2883:
    repr_get_attr_obj rx1336_cstack, rx1336_cur, rx1336_curclass, "$!cstack"
  rx1336_fail2884:
    unless rx1336_bstack, rx1336_done2882
    pop $I19, rx1336_bstack
    if_null rx1336_cstack, rx1336_cstack_done2887
    unless rx1336_cstack, rx1336_cstack_done2887
    dec $I19
    set $P11, rx1336_cstack[$I19]
  rx1336_cstack_done2887:
    pop rx1336_rep, rx1336_bstack
    pop rx1336_pos, rx1336_bstack
    pop $I19, rx1336_bstack
    lt rx1336_pos, -1, rx1336_done2882
    lt rx1336_pos, 0, rx1336_fail2884
    eq $I19, 0, rx1336_fail2884
    nqp_islist $I20, rx1336_cstack
    unless $I20, rx1336_jump2885
    elements $I18, rx1336_bstack
    le $I18, 0, rx1336_cut2886
    dec $I18
    set $I18, rx1336_bstack[$I18]
  rx1336_cut2886:
    assign rx1336_cstack, $I18
  rx1336_jump2885:
    jump $I19
  rx1336_done2882:
    rx1336_cur."!cursor_fail"()
    .return (rx1336_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<q>" :subid("cuid_156_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1278
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1339_start
    .local string rx1339_tgt
    .local int rx1339_pos
    .local int rx1339_off
    .local int rx1339_eos
    .local int rx1339_rep
    .local pmc rx1339_cur
    .local pmc rx1339_curclass
    .local pmc rx1339_bstack
    .local pmc rx1339_cstack
    rx1339_start = self."!cursor_start_all"()
    set rx1339_cur, rx1339_start[0]
    set rx1339_tgt, rx1339_start[1]
    set rx1339_pos, rx1339_start[2]
    set rx1339_curclass, rx1339_start[3]
    set rx1339_bstack, rx1339_start[4]
    set $I19, rx1339_start[5]
    store_lex unicode:"$\x{a2}", rx1339_cur
    length rx1339_eos, rx1339_tgt
    eq $I19, 1, rx1339_restart2894
    gt rx1339_pos, rx1339_eos, rx1339_fail2895
    repr_get_attr_int $I11, self, rx1339_curclass, "$!from"
    ne $I11, -1, rxscan1340_done2901
    goto rxscan1340_scan2900
  rxscan1340_loop2899:
    inc rx1339_pos
    gt rx1339_pos, rx1339_eos, rx1339_fail2895
    repr_bind_attr_int rx1339_cur, rx1339_curclass, "$!from", rx1339_pos
  rxscan1340_scan2900:
    nqp_rxmark rx1339_bstack, rxscan1340_loop2899, rx1339_pos, 0
  rxscan1340_done2901:
    nqp_rxmark rx1339_bstack, rxcap1341_fail2903, rx1339_pos, 0
    add $I11, rx1339_pos, 1
    gt $I11, rx1339_eos, rx1339_fail2895
    substr $S10, rx1339_tgt, rx1339_pos, 1
    ne $S10, ucs4:"q", rx1339_fail2895
    add rx1339_pos, 1
    nqp_rxpeek $I19, rx1339_bstack, rxcap1341_fail2903
    inc $I19
    set $I11, rx1339_bstack[$I19]
    repr_bind_attr_int rx1339_cur, rx1339_curclass, "$!pos", rx1339_pos
    $P11 = rx1339_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1339_pos)
    rx1339_cstack = rx1339_cur."!cursor_capture"($P11, "sym")
    goto rxcap1341_done2902
  rxcap1341_fail2903:
    goto rx1339_fail2895
  rxcap1341_done2902:
    le rx1339_pos, 0, rx1339_fail2895
    is_cclass $I11, .CCLASS_WORD, rx1339_tgt, rx1339_pos
    if $I11, rx1339_fail2895
    sub $I11, rx1339_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx1339_tgt, $I11
    unless $I11, rx1339_fail2895
    ge rx1339_pos, rx1339_eos, rx1339_fail2895
    substr $S11, rx1339_tgt, rx1339_pos, 1
    index $I11, ucs4:"(", $S11
    ge $I11, 0, rx1339_fail2895
    repr_bind_attr_int rx1339_cur, rx1339_curclass, "$!pos", rx1339_pos
    $P11 = rx1339_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1339_curclass, "$!pos"
    lt $I11, 0, rx1339_fail2895
    repr_get_attr_int rx1339_pos, $P11, rx1339_curclass, "$!pos"
    repr_bind_attr_int rx1339_cur, rx1339_curclass, "$!pos", rx1339_pos
    $P11 = rx1339_cur."quote_EXPR"(":q")
    repr_get_attr_int $I11, $P11, rx1339_curclass, "$!pos"
    lt $I11, 0, rx1339_fail2895
    nqp_rxmark rx1339_bstack, rxsubrule1344_pass2906, -1, 0
  rxsubrule1344_pass2906:
    rx1339_cstack = rx1339_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1339_pos, $P11, rx1339_curclass, "$!pos"
    rx1339_cur."!cursor_pass"(rx1339_pos, "quote:sym<q>", 'backtrack'=>1)
    .return (rx1339_cur)
  rx1339_restart2894:
    repr_get_attr_obj rx1339_cstack, rx1339_cur, rx1339_curclass, "$!cstack"
  rx1339_fail2895:
    unless rx1339_bstack, rx1339_done2893
    pop $I19, rx1339_bstack
    if_null rx1339_cstack, rx1339_cstack_done2898
    unless rx1339_cstack, rx1339_cstack_done2898
    dec $I19
    set $P11, rx1339_cstack[$I19]
  rx1339_cstack_done2898:
    pop rx1339_rep, rx1339_bstack
    pop rx1339_pos, rx1339_bstack
    pop $I19, rx1339_bstack
    lt rx1339_pos, -1, rx1339_done2893
    lt rx1339_pos, 0, rx1339_fail2895
    eq $I19, 0, rx1339_fail2895
    nqp_islist $I20, rx1339_cstack
    unless $I20, rx1339_jump2896
    elements $I18, rx1339_bstack
    le $I18, 0, rx1339_cut2897
    dec $I18
    set $I18, rx1339_bstack[$I18]
  rx1339_cut2897:
    assign rx1339_cstack, $I18
  rx1339_jump2896:
    jump $I19
  rx1339_done2893:
    rx1339_cur."!cursor_fail"()
    .return (rx1339_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<qq>" :subid("cuid_157_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1279
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1345_start
    .local string rx1345_tgt
    .local int rx1345_pos
    .local int rx1345_off
    .local int rx1345_eos
    .local int rx1345_rep
    .local pmc rx1345_cur
    .local pmc rx1345_curclass
    .local pmc rx1345_bstack
    .local pmc rx1345_cstack
    rx1345_start = self."!cursor_start_all"()
    set rx1345_cur, rx1345_start[0]
    set rx1345_tgt, rx1345_start[1]
    set rx1345_pos, rx1345_start[2]
    set rx1345_curclass, rx1345_start[3]
    set rx1345_bstack, rx1345_start[4]
    set $I19, rx1345_start[5]
    store_lex unicode:"$\x{a2}", rx1345_cur
    length rx1345_eos, rx1345_tgt
    eq $I19, 1, rx1345_restart2909
    gt rx1345_pos, rx1345_eos, rx1345_fail2910
    repr_get_attr_int $I11, self, rx1345_curclass, "$!from"
    ne $I11, -1, rxscan1346_done2916
    goto rxscan1346_scan2915
  rxscan1346_loop2914:
    inc rx1345_pos
    gt rx1345_pos, rx1345_eos, rx1345_fail2910
    repr_bind_attr_int rx1345_cur, rx1345_curclass, "$!from", rx1345_pos
  rxscan1346_scan2915:
    nqp_rxmark rx1345_bstack, rxscan1346_loop2914, rx1345_pos, 0
  rxscan1346_done2916:
    nqp_rxmark rx1345_bstack, rxcap1347_fail2918, rx1345_pos, 0
    add $I11, rx1345_pos, 2
    gt $I11, rx1345_eos, rx1345_fail2910
    substr $S10, rx1345_tgt, rx1345_pos, 2
    ne $S10, ucs4:"qq", rx1345_fail2910
    add rx1345_pos, 2
    nqp_rxpeek $I19, rx1345_bstack, rxcap1347_fail2918
    inc $I19
    set $I11, rx1345_bstack[$I19]
    repr_bind_attr_int rx1345_cur, rx1345_curclass, "$!pos", rx1345_pos
    $P11 = rx1345_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1345_pos)
    rx1345_cstack = rx1345_cur."!cursor_capture"($P11, "sym")
    goto rxcap1347_done2917
  rxcap1347_fail2918:
    goto rx1345_fail2910
  rxcap1347_done2917:
    le rx1345_pos, 0, rx1345_fail2910
    is_cclass $I11, .CCLASS_WORD, rx1345_tgt, rx1345_pos
    if $I11, rx1345_fail2910
    sub $I11, rx1345_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx1345_tgt, $I11
    unless $I11, rx1345_fail2910
    ge rx1345_pos, rx1345_eos, rx1345_fail2910
    substr $S11, rx1345_tgt, rx1345_pos, 1
    index $I11, ucs4:"(", $S11
    ge $I11, 0, rx1345_fail2910
    repr_bind_attr_int rx1345_cur, rx1345_curclass, "$!pos", rx1345_pos
    $P11 = rx1345_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1345_curclass, "$!pos"
    lt $I11, 0, rx1345_fail2910
    repr_get_attr_int rx1345_pos, $P11, rx1345_curclass, "$!pos"
    repr_bind_attr_int rx1345_cur, rx1345_curclass, "$!pos", rx1345_pos
    $P11 = rx1345_cur."quote_EXPR"(":qq")
    repr_get_attr_int $I11, $P11, rx1345_curclass, "$!pos"
    lt $I11, 0, rx1345_fail2910
    nqp_rxmark rx1345_bstack, rxsubrule1350_pass2921, -1, 0
  rxsubrule1350_pass2921:
    rx1345_cstack = rx1345_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1345_pos, $P11, rx1345_curclass, "$!pos"
    rx1345_cur."!cursor_pass"(rx1345_pos, "quote:sym<qq>", 'backtrack'=>1)
    .return (rx1345_cur)
  rx1345_restart2909:
    repr_get_attr_obj rx1345_cstack, rx1345_cur, rx1345_curclass, "$!cstack"
  rx1345_fail2910:
    unless rx1345_bstack, rx1345_done2908
    pop $I19, rx1345_bstack
    if_null rx1345_cstack, rx1345_cstack_done2913
    unless rx1345_cstack, rx1345_cstack_done2913
    dec $I19
    set $P11, rx1345_cstack[$I19]
  rx1345_cstack_done2913:
    pop rx1345_rep, rx1345_bstack
    pop rx1345_pos, rx1345_bstack
    pop $I19, rx1345_bstack
    lt rx1345_pos, -1, rx1345_done2908
    lt rx1345_pos, 0, rx1345_fail2910
    eq $I19, 0, rx1345_fail2910
    nqp_islist $I20, rx1345_cstack
    unless $I20, rx1345_jump2911
    elements $I18, rx1345_bstack
    le $I18, 0, rx1345_cut2912
    dec $I18
    set $I18, rx1345_bstack[$I18]
  rx1345_cut2912:
    assign rx1345_cstack, $I18
  rx1345_jump2911:
    jump $I19
  rx1345_done2908:
    rx1345_cur."!cursor_fail"()
    .return (rx1345_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<Q>" :subid("cuid_158_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1280
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1351_start
    .local string rx1351_tgt
    .local int rx1351_pos
    .local int rx1351_off
    .local int rx1351_eos
    .local int rx1351_rep
    .local pmc rx1351_cur
    .local pmc rx1351_curclass
    .local pmc rx1351_bstack
    .local pmc rx1351_cstack
    rx1351_start = self."!cursor_start_all"()
    set rx1351_cur, rx1351_start[0]
    set rx1351_tgt, rx1351_start[1]
    set rx1351_pos, rx1351_start[2]
    set rx1351_curclass, rx1351_start[3]
    set rx1351_bstack, rx1351_start[4]
    set $I19, rx1351_start[5]
    store_lex unicode:"$\x{a2}", rx1351_cur
    length rx1351_eos, rx1351_tgt
    eq $I19, 1, rx1351_restart2924
    gt rx1351_pos, rx1351_eos, rx1351_fail2925
    repr_get_attr_int $I11, self, rx1351_curclass, "$!from"
    ne $I11, -1, rxscan1352_done2931
    goto rxscan1352_scan2930
  rxscan1352_loop2929:
    inc rx1351_pos
    gt rx1351_pos, rx1351_eos, rx1351_fail2925
    repr_bind_attr_int rx1351_cur, rx1351_curclass, "$!from", rx1351_pos
  rxscan1352_scan2930:
    nqp_rxmark rx1351_bstack, rxscan1352_loop2929, rx1351_pos, 0
  rxscan1352_done2931:
    nqp_rxmark rx1351_bstack, rxcap1353_fail2933, rx1351_pos, 0
    add $I11, rx1351_pos, 1
    gt $I11, rx1351_eos, rx1351_fail2925
    substr $S10, rx1351_tgt, rx1351_pos, 1
    ne $S10, ucs4:"Q", rx1351_fail2925
    add rx1351_pos, 1
    nqp_rxpeek $I19, rx1351_bstack, rxcap1353_fail2933
    inc $I19
    set $I11, rx1351_bstack[$I19]
    repr_bind_attr_int rx1351_cur, rx1351_curclass, "$!pos", rx1351_pos
    $P11 = rx1351_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1351_pos)
    rx1351_cstack = rx1351_cur."!cursor_capture"($P11, "sym")
    goto rxcap1353_done2932
  rxcap1353_fail2933:
    goto rx1351_fail2925
  rxcap1353_done2932:
    le rx1351_pos, 0, rx1351_fail2925
    is_cclass $I11, .CCLASS_WORD, rx1351_tgt, rx1351_pos
    if $I11, rx1351_fail2925
    sub $I11, rx1351_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx1351_tgt, $I11
    unless $I11, rx1351_fail2925
    ge rx1351_pos, rx1351_eos, rx1351_fail2925
    substr $S11, rx1351_tgt, rx1351_pos, 1
    index $I11, ucs4:"(", $S11
    ge $I11, 0, rx1351_fail2925
    repr_bind_attr_int rx1351_cur, rx1351_curclass, "$!pos", rx1351_pos
    $P11 = rx1351_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1351_curclass, "$!pos"
    lt $I11, 0, rx1351_fail2925
    repr_get_attr_int rx1351_pos, $P11, rx1351_curclass, "$!pos"
    repr_bind_attr_int rx1351_cur, rx1351_curclass, "$!pos", rx1351_pos
    $P11 = rx1351_cur."quote_EXPR"()
    repr_get_attr_int $I11, $P11, rx1351_curclass, "$!pos"
    lt $I11, 0, rx1351_fail2925
    nqp_rxmark rx1351_bstack, rxsubrule1356_pass2936, -1, 0
  rxsubrule1356_pass2936:
    rx1351_cstack = rx1351_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1351_pos, $P11, rx1351_curclass, "$!pos"
    rx1351_cur."!cursor_pass"(rx1351_pos, "quote:sym<Q>", 'backtrack'=>1)
    .return (rx1351_cur)
  rx1351_restart2924:
    repr_get_attr_obj rx1351_cstack, rx1351_cur, rx1351_curclass, "$!cstack"
  rx1351_fail2925:
    unless rx1351_bstack, rx1351_done2923
    pop $I19, rx1351_bstack
    if_null rx1351_cstack, rx1351_cstack_done2928
    unless rx1351_cstack, rx1351_cstack_done2928
    dec $I19
    set $P11, rx1351_cstack[$I19]
  rx1351_cstack_done2928:
    pop rx1351_rep, rx1351_bstack
    pop rx1351_pos, rx1351_bstack
    pop $I19, rx1351_bstack
    lt rx1351_pos, -1, rx1351_done2923
    lt rx1351_pos, 0, rx1351_fail2925
    eq $I19, 0, rx1351_fail2925
    nqp_islist $I20, rx1351_cstack
    unless $I20, rx1351_jump2926
    elements $I18, rx1351_bstack
    le $I18, 0, rx1351_cut2927
    dec $I18
    set $I18, rx1351_bstack[$I18]
  rx1351_cut2927:
    assign rx1351_cstack, $I18
  rx1351_jump2926:
    jump $I19
  rx1351_done2923:
    rx1351_cur."!cursor_fail"()
    .return (rx1351_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<Q:PIR>" :subid("cuid_159_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1281
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1357_start
    .local string rx1357_tgt
    .local int rx1357_pos
    .local int rx1357_off
    .local int rx1357_eos
    .local int rx1357_rep
    .local pmc rx1357_cur
    .local pmc rx1357_curclass
    .local pmc rx1357_bstack
    .local pmc rx1357_cstack
    rx1357_start = self."!cursor_start_all"()
    set rx1357_cur, rx1357_start[0]
    set rx1357_tgt, rx1357_start[1]
    set rx1357_pos, rx1357_start[2]
    set rx1357_curclass, rx1357_start[3]
    set rx1357_bstack, rx1357_start[4]
    set $I19, rx1357_start[5]
    store_lex unicode:"$\x{a2}", rx1357_cur
    length rx1357_eos, rx1357_tgt
    eq $I19, 1, rx1357_restart2939
    gt rx1357_pos, rx1357_eos, rx1357_fail2940
    repr_get_attr_int $I11, self, rx1357_curclass, "$!from"
    ne $I11, -1, rxscan1358_done2946
    goto rxscan1358_scan2945
  rxscan1358_loop2944:
    inc rx1357_pos
    gt rx1357_pos, rx1357_eos, rx1357_fail2940
    repr_bind_attr_int rx1357_cur, rx1357_curclass, "$!from", rx1357_pos
  rxscan1358_scan2945:
    nqp_rxmark rx1357_bstack, rxscan1358_loop2944, rx1357_pos, 0
  rxscan1358_done2946:
    nqp_rxmark rx1357_bstack, rxcap1359_fail2948, rx1357_pos, 0
    add $I11, rx1357_pos, 5
    gt $I11, rx1357_eos, rx1357_fail2940
    substr $S10, rx1357_tgt, rx1357_pos, 5
    ne $S10, ucs4:"Q:PIR", rx1357_fail2940
    add rx1357_pos, 5
    nqp_rxpeek $I19, rx1357_bstack, rxcap1359_fail2948
    inc $I19
    set $I11, rx1357_bstack[$I19]
    repr_bind_attr_int rx1357_cur, rx1357_curclass, "$!pos", rx1357_pos
    $P11 = rx1357_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1357_pos)
    rx1357_cstack = rx1357_cur."!cursor_capture"($P11, "sym")
    goto rxcap1359_done2947
  rxcap1359_fail2948:
    goto rx1357_fail2940
  rxcap1359_done2947:
    repr_bind_attr_int rx1357_cur, rx1357_curclass, "$!pos", rx1357_pos
    $P11 = rx1357_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1357_curclass, "$!pos"
    lt $I11, 0, rx1357_fail2940
    repr_get_attr_int rx1357_pos, $P11, rx1357_curclass, "$!pos"
    repr_bind_attr_int rx1357_cur, rx1357_curclass, "$!pos", rx1357_pos
    $P11 = rx1357_cur."quote_EXPR"()
    repr_get_attr_int $I11, $P11, rx1357_curclass, "$!pos"
    lt $I11, 0, rx1357_fail2940
    nqp_rxmark rx1357_bstack, rxsubrule1361_pass2950, -1, 0
  rxsubrule1361_pass2950:
    rx1357_cstack = rx1357_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1357_pos, $P11, rx1357_curclass, "$!pos"
    rx1357_cur."!cursor_pass"(rx1357_pos, "quote:sym<Q:PIR>", 'backtrack'=>1)
    .return (rx1357_cur)
  rx1357_restart2939:
    repr_get_attr_obj rx1357_cstack, rx1357_cur, rx1357_curclass, "$!cstack"
  rx1357_fail2940:
    unless rx1357_bstack, rx1357_done2938
    pop $I19, rx1357_bstack
    if_null rx1357_cstack, rx1357_cstack_done2943
    unless rx1357_cstack, rx1357_cstack_done2943
    dec $I19
    set $P11, rx1357_cstack[$I19]
  rx1357_cstack_done2943:
    pop rx1357_rep, rx1357_bstack
    pop rx1357_pos, rx1357_bstack
    pop $I19, rx1357_bstack
    lt rx1357_pos, -1, rx1357_done2938
    lt rx1357_pos, 0, rx1357_fail2940
    eq $I19, 0, rx1357_fail2940
    nqp_islist $I20, rx1357_cstack
    unless $I20, rx1357_jump2941
    elements $I18, rx1357_bstack
    le $I18, 0, rx1357_cut2942
    dec $I18
    set $I18, rx1357_bstack[$I18]
  rx1357_cut2942:
    assign rx1357_cstack, $I18
  rx1357_jump2941:
    jump $I19
  rx1357_done2938:
    rx1357_cur."!cursor_fail"()
    .return (rx1357_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym</ />" :subid("cuid_160_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1282
    .param pmc _lex_param_0 
    .lex "%*RX", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_165 
    .local pmc pkg_viv_tmp_29 
    new $P5001, 'Hash'
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1362_start
    .local string rx1362_tgt
    .local int rx1362_pos
    .local int rx1362_off
    .local int rx1362_eos
    .local int rx1362_rep
    .local pmc rx1362_cur
    .local pmc rx1362_curclass
    .local pmc rx1362_bstack
    .local pmc rx1362_cstack
    rx1362_start = self."!cursor_start_all"()
    set rx1362_cur, rx1362_start[0]
    set rx1362_tgt, rx1362_start[1]
    set rx1362_pos, rx1362_start[2]
    set rx1362_curclass, rx1362_start[3]
    set rx1362_bstack, rx1362_start[4]
    set $I19, rx1362_start[5]
    store_lex unicode:"$\x{a2}", rx1362_cur
    length rx1362_eos, rx1362_tgt
    eq $I19, 1, rx1362_restart2953
    gt rx1362_pos, rx1362_eos, rx1362_fail2954
    repr_get_attr_int $I11, self, rx1362_curclass, "$!from"
    ne $I11, -1, rxscan1363_done2960
    goto rxscan1363_scan2959
  rxscan1363_loop2958:
    inc rx1362_pos
    gt rx1362_pos, rx1362_eos, rx1362_fail2954
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!from", rx1362_pos
  rxscan1363_scan2959:
    nqp_rxmark rx1362_bstack, rxscan1363_loop2958, rx1362_pos, 0
  rxscan1363_done2960:
    add $I11, rx1362_pos, 1
    gt $I11, rx1362_eos, rx1362_fail2954
    substr $S10, rx1362_tgt, rx1362_pos, 1
    ne $S10, ucs4:"/", rx1362_fail2954
    add rx1362_pos, 1
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2954
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    store_lex unicode:"$\x{a2}", rx1362_cur
    unless_null $P101, fallback2962
    nqp_get_sc_object $P5003, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_29, $P5002
    set fb_tmp_165, pkg_viv_tmp_29
    repr_defined $I5001, fb_tmp_165
    unless $I5001 goto if1365_else2963 
    set $P5004, fb_tmp_165["%RX"]
    set $P5006, $P5004
    goto if1365_end2964
  if1365_else2963:
    null $P5005
    set $P5006, $P5005
  if1365_end2964:
    unless_null $P5006, vivi_13662965
    new $P5007, 'Hash'
    set pkg_viv_tmp_29["%RX"], $P5007
    set $P5006, $P5007
  vivi_13662965:
    unless_null $P5006, vivi_13672966
    die "Contextual %*RX not found"
    box $P5008, "Contextual %*RX not found"
    set $P5006, $P5008
  vivi_13672966:
    set $P101, $P5006
  fallback2962:
    repr_bind_attr_int rx1362_cur, rx1362_curclass, "$!pos", rx1362_pos
    $P11 = rx1362_cur."LANG"("Regex", "nibbler")
    repr_get_attr_int $I11, $P11, rx1362_curclass, "$!pos"
    lt $I11, 0, rx1362_fail2954
    nqp_rxmark rx1362_bstack, rxsubrule1368_pass2967, -1, 0
  rxsubrule1368_pass2967:
    rx1362_cstack = rx1362_cur."!cursor_capture"($P11, "p6regex")
    repr_get_attr_int rx1362_pos, $P11, rx1362_curclass, "$!pos"
    add $I11, rx1362_pos, 1
    gt $I11, rx1362_eos, rx1362_fail2954
    substr $S10, rx1362_tgt, rx1362_pos, 1
    ne $S10, ucs4:"/", rx1362_fail2954
    add rx1362_pos, 1
    rx1362_cur."!cursor_pass"(rx1362_pos, "quote:sym</ />", 'backtrack'=>1)
    .return (rx1362_cur)
  rx1362_restart2953:
    repr_get_attr_obj rx1362_cstack, rx1362_cur, rx1362_curclass, "$!cstack"
  rx1362_fail2954:
    unless rx1362_bstack, rx1362_done2952
    pop $I19, rx1362_bstack
    if_null rx1362_cstack, rx1362_cstack_done2957
    unless rx1362_cstack, rx1362_cstack_done2957
    dec $I19
    set $P11, rx1362_cstack[$I19]
  rx1362_cstack_done2957:
    pop rx1362_rep, rx1362_bstack
    pop rx1362_pos, rx1362_bstack
    pop $I19, rx1362_bstack
    lt rx1362_pos, -1, rx1362_done2952
    lt rx1362_pos, 0, rx1362_fail2954
    eq $I19, 0, rx1362_fail2954
    nqp_islist $I20, rx1362_cstack
    unless $I20, rx1362_jump2955
    elements $I18, rx1362_bstack
    le $I18, 0, rx1362_cut2956
    dec $I18
    set $I18, rx1362_bstack[$I18]
  rx1362_cut2956:
    assign rx1362_cstack, $I18
  rx1362_jump2955:
    jump $I19
  rx1362_done2952:
    rx1362_cur."!cursor_fail"()
    .return (rx1362_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<$>" :subid("cuid_161_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1290
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1369_start
    .local string rx1369_tgt
    .local int rx1369_pos
    .local int rx1369_off
    .local int rx1369_eos
    .local int rx1369_rep
    .local pmc rx1369_cur
    .local pmc rx1369_curclass
    .local pmc rx1369_bstack
    .local pmc rx1369_cstack
    rx1369_start = self."!cursor_start_all"()
    set rx1369_cur, rx1369_start[0]
    set rx1369_tgt, rx1369_start[1]
    set rx1369_pos, rx1369_start[2]
    set rx1369_curclass, rx1369_start[3]
    set rx1369_bstack, rx1369_start[4]
    set $I19, rx1369_start[5]
    store_lex unicode:"$\x{a2}", rx1369_cur
    length rx1369_eos, rx1369_tgt
    eq $I19, 1, rx1369_restart2970
    gt rx1369_pos, rx1369_eos, rx1369_fail2971
    repr_get_attr_int $I11, self, rx1369_curclass, "$!from"
    ne $I11, -1, rxscan1370_done2977
    goto rxscan1370_scan2976
  rxscan1370_loop2975:
    inc rx1369_pos
    gt rx1369_pos, rx1369_eos, rx1369_fail2971
    repr_bind_attr_int rx1369_cur, rx1369_curclass, "$!from", rx1369_pos
  rxscan1370_scan2976:
    nqp_rxmark rx1369_bstack, rxscan1370_loop2975, rx1369_pos, 0
  rxscan1370_done2977:
    ge rx1369_pos, rx1369_eos, rx1369_fail2971
    substr $S11, rx1369_tgt, rx1369_pos, 1
    index $I11, ucs4:"$", $S11
    lt $I11, 0, rx1369_fail2971
    repr_bind_attr_int rx1369_cur, rx1369_curclass, "$!pos", rx1369_pos
    $P11 = rx1369_cur."quotemod_check"("s")
    repr_get_attr_int $I11, $P11, rx1369_curclass, "$!pos"
    lt $I11, 0, rx1369_fail2971
    repr_bind_attr_int rx1369_cur, rx1369_curclass, "$!pos", rx1369_pos
    $P11 = rx1369_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1369_curclass, "$!pos"
    lt $I11, 0, rx1369_fail2971
    nqp_rxmark rx1369_bstack, rxsubrule1371_pass2978, -1, 0
  rxsubrule1371_pass2978:
    rx1369_cstack = rx1369_cur."!cursor_capture"($P11, "variable")
    repr_get_attr_int rx1369_pos, $P11, rx1369_curclass, "$!pos"
    rx1369_cur."!cursor_pass"(rx1369_pos, "quote_escape:sym<$>", 'backtrack'=>1)
    .return (rx1369_cur)
  rx1369_restart2970:
    repr_get_attr_obj rx1369_cstack, rx1369_cur, rx1369_curclass, "$!cstack"
  rx1369_fail2971:
    unless rx1369_bstack, rx1369_done2969
    pop $I19, rx1369_bstack
    if_null rx1369_cstack, rx1369_cstack_done2974
    unless rx1369_cstack, rx1369_cstack_done2974
    dec $I19
    set $P11, rx1369_cstack[$I19]
  rx1369_cstack_done2974:
    pop rx1369_rep, rx1369_bstack
    pop rx1369_pos, rx1369_bstack
    pop $I19, rx1369_bstack
    lt rx1369_pos, -1, rx1369_done2969
    lt rx1369_pos, 0, rx1369_fail2971
    eq $I19, 0, rx1369_fail2971
    nqp_islist $I20, rx1369_cstack
    unless $I20, rx1369_jump2972
    elements $I18, rx1369_bstack
    le $I18, 0, rx1369_cut2973
    dec $I18
    set $I18, rx1369_bstack[$I18]
  rx1369_cut2973:
    assign rx1369_cstack, $I18
  rx1369_jump2972:
    jump $I19
  rx1369_done2969:
    rx1369_cur."!cursor_fail"()
    .return (rx1369_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<{ }>" :subid("cuid_162_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1291
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1372_start
    .local string rx1372_tgt
    .local int rx1372_pos
    .local int rx1372_off
    .local int rx1372_eos
    .local int rx1372_rep
    .local pmc rx1372_cur
    .local pmc rx1372_curclass
    .local pmc rx1372_bstack
    .local pmc rx1372_cstack
    rx1372_start = self."!cursor_start_all"()
    set rx1372_cur, rx1372_start[0]
    set rx1372_tgt, rx1372_start[1]
    set rx1372_pos, rx1372_start[2]
    set rx1372_curclass, rx1372_start[3]
    set rx1372_bstack, rx1372_start[4]
    set $I19, rx1372_start[5]
    store_lex unicode:"$\x{a2}", rx1372_cur
    length rx1372_eos, rx1372_tgt
    eq $I19, 1, rx1372_restart2981
    gt rx1372_pos, rx1372_eos, rx1372_fail2982
    repr_get_attr_int $I11, self, rx1372_curclass, "$!from"
    ne $I11, -1, rxscan1373_done2988
    goto rxscan1373_scan2987
  rxscan1373_loop2986:
    inc rx1372_pos
    gt rx1372_pos, rx1372_eos, rx1372_fail2982
    repr_bind_attr_int rx1372_cur, rx1372_curclass, "$!from", rx1372_pos
  rxscan1373_scan2987:
    nqp_rxmark rx1372_bstack, rxscan1373_loop2986, rx1372_pos, 0
  rxscan1373_done2988:
    ge rx1372_pos, rx1372_eos, rx1372_fail2982
    substr $S11, rx1372_tgt, rx1372_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx1372_fail2982
    repr_bind_attr_int rx1372_cur, rx1372_curclass, "$!pos", rx1372_pos
    $P11 = rx1372_cur."quotemod_check"("c")
    repr_get_attr_int $I11, $P11, rx1372_curclass, "$!pos"
    lt $I11, 0, rx1372_fail2982
    repr_bind_attr_int rx1372_cur, rx1372_curclass, "$!pos", rx1372_pos
    $P11 = rx1372_cur."block"()
    repr_get_attr_int $I11, $P11, rx1372_curclass, "$!pos"
    lt $I11, 0, rx1372_fail2982
    nqp_rxmark rx1372_bstack, rxsubrule1374_pass2989, -1, 0
  rxsubrule1374_pass2989:
    rx1372_cstack = rx1372_cur."!cursor_capture"($P11, "block")
    repr_get_attr_int rx1372_pos, $P11, rx1372_curclass, "$!pos"
    rx1372_cur."!cursor_pass"(rx1372_pos, "quote_escape:sym<{ }>", 'backtrack'=>1)
    .return (rx1372_cur)
  rx1372_restart2981:
    repr_get_attr_obj rx1372_cstack, rx1372_cur, rx1372_curclass, "$!cstack"
  rx1372_fail2982:
    unless rx1372_bstack, rx1372_done2980
    pop $I19, rx1372_bstack
    if_null rx1372_cstack, rx1372_cstack_done2985
    unless rx1372_cstack, rx1372_cstack_done2985
    dec $I19
    set $P11, rx1372_cstack[$I19]
  rx1372_cstack_done2985:
    pop rx1372_rep, rx1372_bstack
    pop rx1372_pos, rx1372_bstack
    pop $I19, rx1372_bstack
    lt rx1372_pos, -1, rx1372_done2980
    lt rx1372_pos, 0, rx1372_fail2982
    eq $I19, 0, rx1372_fail2982
    nqp_islist $I20, rx1372_cstack
    unless $I20, rx1372_jump2983
    elements $I18, rx1372_bstack
    le $I18, 0, rx1372_cut2984
    dec $I18
    set $I18, rx1372_bstack[$I18]
  rx1372_cut2984:
    assign rx1372_cstack, $I18
  rx1372_jump2983:
    jump $I19
  rx1372_done2980:
    rx1372_cur."!cursor_fail"()
    .return (rx1372_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<esc>" :subid("cuid_163_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1292
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1375_start
    .local string rx1375_tgt
    .local int rx1375_pos
    .local int rx1375_off
    .local int rx1375_eos
    .local int rx1375_rep
    .local pmc rx1375_cur
    .local pmc rx1375_curclass
    .local pmc rx1375_bstack
    .local pmc rx1375_cstack
    rx1375_start = self."!cursor_start_all"()
    set rx1375_cur, rx1375_start[0]
    set rx1375_tgt, rx1375_start[1]
    set rx1375_pos, rx1375_start[2]
    set rx1375_curclass, rx1375_start[3]
    set rx1375_bstack, rx1375_start[4]
    set $I19, rx1375_start[5]
    store_lex unicode:"$\x{a2}", rx1375_cur
    length rx1375_eos, rx1375_tgt
    eq $I19, 1, rx1375_restart2992
    gt rx1375_pos, rx1375_eos, rx1375_fail2993
    repr_get_attr_int $I11, self, rx1375_curclass, "$!from"
    ne $I11, -1, rxscan1376_done2999
    goto rxscan1376_scan2998
  rxscan1376_loop2997:
    inc rx1375_pos
    gt rx1375_pos, rx1375_eos, rx1375_fail2993
    repr_bind_attr_int rx1375_cur, rx1375_curclass, "$!from", rx1375_pos
  rxscan1376_scan2998:
    nqp_rxmark rx1375_bstack, rxscan1376_loop2997, rx1375_pos, 0
  rxscan1376_done2999:
    add $I11, rx1375_pos, 2
    gt $I11, rx1375_eos, rx1375_fail2993
    substr $S10, rx1375_tgt, rx1375_pos, 2
    ne $S10, ucs4:"\\e", rx1375_fail2993
    add rx1375_pos, 2
    repr_bind_attr_int rx1375_cur, rx1375_curclass, "$!pos", rx1375_pos
    $P11 = rx1375_cur."quotemod_check"("b")
    repr_get_attr_int $I11, $P11, rx1375_curclass, "$!pos"
    lt $I11, 0, rx1375_fail2993
    rx1375_cur."!cursor_pass"(rx1375_pos, "quote_escape:sym<esc>", 'backtrack'=>1)
    .return (rx1375_cur)
  rx1375_restart2992:
    repr_get_attr_obj rx1375_cstack, rx1375_cur, rx1375_curclass, "$!cstack"
  rx1375_fail2993:
    unless rx1375_bstack, rx1375_done2991
    pop $I19, rx1375_bstack
    if_null rx1375_cstack, rx1375_cstack_done2996
    unless rx1375_cstack, rx1375_cstack_done2996
    dec $I19
    set $P11, rx1375_cstack[$I19]
  rx1375_cstack_done2996:
    pop rx1375_rep, rx1375_bstack
    pop rx1375_pos, rx1375_bstack
    pop $I19, rx1375_bstack
    lt rx1375_pos, -1, rx1375_done2991
    lt rx1375_pos, 0, rx1375_fail2993
    eq $I19, 0, rx1375_fail2993
    nqp_islist $I20, rx1375_cstack
    unless $I20, rx1375_jump2994
    elements $I18, rx1375_bstack
    le $I18, 0, rx1375_cut2995
    dec $I18
    set $I18, rx1375_bstack[$I18]
  rx1375_cut2995:
    assign rx1375_cstack, $I18
  rx1375_jump2994:
    jump $I19
  rx1375_done2991:
    rx1375_cur."!cursor_fail"()
    .return (rx1375_cur) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<( )>" :subid("cuid_164_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1294
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1377_start
    .local string rx1377_tgt
    .local int rx1377_pos
    .local int rx1377_off
    .local int rx1377_eos
    .local int rx1377_rep
    .local pmc rx1377_cur
    .local pmc rx1377_curclass
    .local pmc rx1377_bstack
    .local pmc rx1377_cstack
    rx1377_start = self."!cursor_start_all"()
    set rx1377_cur, rx1377_start[0]
    set rx1377_tgt, rx1377_start[1]
    set rx1377_pos, rx1377_start[2]
    set rx1377_curclass, rx1377_start[3]
    set rx1377_bstack, rx1377_start[4]
    set $I19, rx1377_start[5]
    store_lex unicode:"$\x{a2}", rx1377_cur
    length rx1377_eos, rx1377_tgt
    eq $I19, 1, rx1377_restart3002
    gt rx1377_pos, rx1377_eos, rx1377_fail3003
    repr_get_attr_int $I11, self, rx1377_curclass, "$!from"
    ne $I11, -1, rxscan1378_done3009
    goto rxscan1378_scan3008
  rxscan1378_loop3007:
    inc rx1377_pos
    gt rx1377_pos, rx1377_eos, rx1377_fail3003
    repr_bind_attr_int rx1377_cur, rx1377_curclass, "$!from", rx1377_pos
  rxscan1378_scan3008:
    nqp_rxmark rx1377_bstack, rxscan1378_loop3007, rx1377_pos, 0
  rxscan1378_done3009:
    add $I11, rx1377_pos, 1
    gt $I11, rx1377_eos, rx1377_fail3003
    substr $S10, rx1377_tgt, rx1377_pos, 1
    ne $S10, ucs4:"(", rx1377_fail3003
    add rx1377_pos, 1
    repr_bind_attr_int rx1377_cur, rx1377_curclass, "$!pos", rx1377_pos
    $P11 = rx1377_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1377_curclass, "$!pos"
    lt $I11, 0, rx1377_fail3003
    repr_get_attr_int rx1377_pos, $P11, rx1377_curclass, "$!pos"
    nqp_rxmark rx1377_bstack, rxquantr1380_done3012, rx1377_pos, 0
  rxquantr1380_loop3011:
    repr_bind_attr_int rx1377_cur, rx1377_curclass, "$!pos", rx1377_pos
    $P11 = rx1377_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx1377_curclass, "$!pos"
    lt $I11, 0, rx1377_fail3003
    goto rxsubrule1381_pass3013
  rxsubrule1381_back3014:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1377_curclass, "$!pos"
    lt $I11, 0, rx1377_fail3003
  rxsubrule1381_pass3013:
    rx1377_cstack = rx1377_cur."!cursor_capture"($P11, "EXPR")
    set_addr $I11, rxsubrule1381_back3014
    push rx1377_bstack, $I11
    push rx1377_bstack, 0
    push rx1377_bstack, rx1377_pos
    elements $I11, rx1377_cstack
    push rx1377_bstack, $I11
    repr_get_attr_int rx1377_pos, $P11, rx1377_curclass, "$!pos"
    nqp_rxpeek $I19, rx1377_bstack, rxquantr1380_done3012
    inc $I19
    inc $I19
    set rx1377_rep, rx1377_bstack[$I19]
    nqp_rxcommit rx1377_bstack, rxquantr1380_done3012
    inc rx1377_rep
  rxquantr1380_done3012:
    add $I11, rx1377_pos, 1
    gt $I11, rx1377_eos, rx1377_fail3003
    substr $S10, rx1377_tgt, rx1377_pos, 1
    ne $S10, ucs4:")", rx1377_fail3003
    add rx1377_pos, 1
    rx1377_cur."!cursor_pass"(rx1377_pos, "circumfix:sym<( )>", 'backtrack'=>1)
    .return (rx1377_cur)
  rx1377_restart3002:
    repr_get_attr_obj rx1377_cstack, rx1377_cur, rx1377_curclass, "$!cstack"
  rx1377_fail3003:
    unless rx1377_bstack, rx1377_done3001
    pop $I19, rx1377_bstack
    if_null rx1377_cstack, rx1377_cstack_done3006
    unless rx1377_cstack, rx1377_cstack_done3006
    dec $I19
    set $P11, rx1377_cstack[$I19]
  rx1377_cstack_done3006:
    pop rx1377_rep, rx1377_bstack
    pop rx1377_pos, rx1377_bstack
    pop $I19, rx1377_bstack
    lt rx1377_pos, -1, rx1377_done3001
    lt rx1377_pos, 0, rx1377_fail3003
    eq $I19, 0, rx1377_fail3003
    nqp_islist $I20, rx1377_cstack
    unless $I20, rx1377_jump3004
    elements $I18, rx1377_bstack
    le $I18, 0, rx1377_cut3005
    dec $I18
    set $I18, rx1377_bstack[$I18]
  rx1377_cut3005:
    assign rx1377_cstack, $I18
  rx1377_jump3004:
    jump $I19
  rx1377_done3001:
    rx1377_cur."!cursor_fail"()
    .return (rx1377_cur) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<[ ]>" :subid("cuid_165_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1295
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1382_start
    .local string rx1382_tgt
    .local int rx1382_pos
    .local int rx1382_off
    .local int rx1382_eos
    .local int rx1382_rep
    .local pmc rx1382_cur
    .local pmc rx1382_curclass
    .local pmc rx1382_bstack
    .local pmc rx1382_cstack
    rx1382_start = self."!cursor_start_all"()
    set rx1382_cur, rx1382_start[0]
    set rx1382_tgt, rx1382_start[1]
    set rx1382_pos, rx1382_start[2]
    set rx1382_curclass, rx1382_start[3]
    set rx1382_bstack, rx1382_start[4]
    set $I19, rx1382_start[5]
    store_lex unicode:"$\x{a2}", rx1382_cur
    length rx1382_eos, rx1382_tgt
    eq $I19, 1, rx1382_restart3017
    gt rx1382_pos, rx1382_eos, rx1382_fail3018
    repr_get_attr_int $I11, self, rx1382_curclass, "$!from"
    ne $I11, -1, rxscan1383_done3024
    goto rxscan1383_scan3023
  rxscan1383_loop3022:
    inc rx1382_pos
    gt rx1382_pos, rx1382_eos, rx1382_fail3018
    repr_bind_attr_int rx1382_cur, rx1382_curclass, "$!from", rx1382_pos
  rxscan1383_scan3023:
    nqp_rxmark rx1382_bstack, rxscan1383_loop3022, rx1382_pos, 0
  rxscan1383_done3024:
    add $I11, rx1382_pos, 1
    gt $I11, rx1382_eos, rx1382_fail3018
    substr $S10, rx1382_tgt, rx1382_pos, 1
    ne $S10, ucs4:"[", rx1382_fail3018
    add rx1382_pos, 1
    repr_bind_attr_int rx1382_cur, rx1382_curclass, "$!pos", rx1382_pos
    $P11 = rx1382_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1382_curclass, "$!pos"
    lt $I11, 0, rx1382_fail3018
    repr_get_attr_int rx1382_pos, $P11, rx1382_curclass, "$!pos"
    nqp_rxmark rx1382_bstack, rxquantr1385_done3027, rx1382_pos, 0
  rxquantr1385_loop3026:
    repr_bind_attr_int rx1382_cur, rx1382_curclass, "$!pos", rx1382_pos
    $P11 = rx1382_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx1382_curclass, "$!pos"
    lt $I11, 0, rx1382_fail3018
    goto rxsubrule1386_pass3028
  rxsubrule1386_back3029:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1382_curclass, "$!pos"
    lt $I11, 0, rx1382_fail3018
  rxsubrule1386_pass3028:
    rx1382_cstack = rx1382_cur."!cursor_capture"($P11, "EXPR")
    set_addr $I11, rxsubrule1386_back3029
    push rx1382_bstack, $I11
    push rx1382_bstack, 0
    push rx1382_bstack, rx1382_pos
    elements $I11, rx1382_cstack
    push rx1382_bstack, $I11
    repr_get_attr_int rx1382_pos, $P11, rx1382_curclass, "$!pos"
    nqp_rxpeek $I19, rx1382_bstack, rxquantr1385_done3027
    inc $I19
    inc $I19
    set rx1382_rep, rx1382_bstack[$I19]
    nqp_rxcommit rx1382_bstack, rxquantr1385_done3027
    inc rx1382_rep
  rxquantr1385_done3027:
    add $I11, rx1382_pos, 1
    gt $I11, rx1382_eos, rx1382_fail3018
    substr $S10, rx1382_tgt, rx1382_pos, 1
    ne $S10, ucs4:"]", rx1382_fail3018
    add rx1382_pos, 1
    rx1382_cur."!cursor_pass"(rx1382_pos, "circumfix:sym<[ ]>", 'backtrack'=>1)
    .return (rx1382_cur)
  rx1382_restart3017:
    repr_get_attr_obj rx1382_cstack, rx1382_cur, rx1382_curclass, "$!cstack"
  rx1382_fail3018:
    unless rx1382_bstack, rx1382_done3016
    pop $I19, rx1382_bstack
    if_null rx1382_cstack, rx1382_cstack_done3021
    unless rx1382_cstack, rx1382_cstack_done3021
    dec $I19
    set $P11, rx1382_cstack[$I19]
  rx1382_cstack_done3021:
    pop rx1382_rep, rx1382_bstack
    pop rx1382_pos, rx1382_bstack
    pop $I19, rx1382_bstack
    lt rx1382_pos, -1, rx1382_done3016
    lt rx1382_pos, 0, rx1382_fail3018
    eq $I19, 0, rx1382_fail3018
    nqp_islist $I20, rx1382_cstack
    unless $I20, rx1382_jump3019
    elements $I18, rx1382_bstack
    le $I18, 0, rx1382_cut3020
    dec $I18
    set $I18, rx1382_bstack[$I18]
  rx1382_cut3020:
    assign rx1382_cstack, $I18
  rx1382_jump3019:
    jump $I19
  rx1382_done3016:
    rx1382_cur."!cursor_fail"()
    .return (rx1382_cur) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<ang>" :subid("cuid_166_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1296
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1387_start
    .local string rx1387_tgt
    .local int rx1387_pos
    .local int rx1387_off
    .local int rx1387_eos
    .local int rx1387_rep
    .local pmc rx1387_cur
    .local pmc rx1387_curclass
    .local pmc rx1387_bstack
    .local pmc rx1387_cstack
    rx1387_start = self."!cursor_start_all"()
    set rx1387_cur, rx1387_start[0]
    set rx1387_tgt, rx1387_start[1]
    set rx1387_pos, rx1387_start[2]
    set rx1387_curclass, rx1387_start[3]
    set rx1387_bstack, rx1387_start[4]
    set $I19, rx1387_start[5]
    store_lex unicode:"$\x{a2}", rx1387_cur
    length rx1387_eos, rx1387_tgt
    eq $I19, 1, rx1387_restart3032
    gt rx1387_pos, rx1387_eos, rx1387_fail3033
    repr_get_attr_int $I11, self, rx1387_curclass, "$!from"
    ne $I11, -1, rxscan1388_done3039
    goto rxscan1388_scan3038
  rxscan1388_loop3037:
    inc rx1387_pos
    gt rx1387_pos, rx1387_eos, rx1387_fail3033
    repr_bind_attr_int rx1387_cur, rx1387_curclass, "$!from", rx1387_pos
  rxscan1388_scan3038:
    nqp_rxmark rx1387_bstack, rxscan1388_loop3037, rx1387_pos, 0
  rxscan1388_done3039:
    ge rx1387_pos, rx1387_eos, rx1387_fail3033
    substr $S11, rx1387_tgt, rx1387_pos, 1
    index $I11, ucs4:"<", $S11
    lt $I11, 0, rx1387_fail3033
    repr_bind_attr_int rx1387_cur, rx1387_curclass, "$!pos", rx1387_pos
    $P11 = rx1387_cur."quote_EXPR"(":q", ":w")
    repr_get_attr_int $I11, $P11, rx1387_curclass, "$!pos"
    lt $I11, 0, rx1387_fail3033
    nqp_rxmark rx1387_bstack, rxsubrule1389_pass3040, -1, 0
  rxsubrule1389_pass3040:
    rx1387_cstack = rx1387_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1387_pos, $P11, rx1387_curclass, "$!pos"
    rx1387_cur."!cursor_pass"(rx1387_pos, "circumfix:sym<ang>", 'backtrack'=>1)
    .return (rx1387_cur)
  rx1387_restart3032:
    repr_get_attr_obj rx1387_cstack, rx1387_cur, rx1387_curclass, "$!cstack"
  rx1387_fail3033:
    unless rx1387_bstack, rx1387_done3031
    pop $I19, rx1387_bstack
    if_null rx1387_cstack, rx1387_cstack_done3036
    unless rx1387_cstack, rx1387_cstack_done3036
    dec $I19
    set $P11, rx1387_cstack[$I19]
  rx1387_cstack_done3036:
    pop rx1387_rep, rx1387_bstack
    pop rx1387_pos, rx1387_bstack
    pop $I19, rx1387_bstack
    lt rx1387_pos, -1, rx1387_done3031
    lt rx1387_pos, 0, rx1387_fail3033
    eq $I19, 0, rx1387_fail3033
    nqp_islist $I20, rx1387_cstack
    unless $I20, rx1387_jump3034
    elements $I18, rx1387_bstack
    le $I18, 0, rx1387_cut3035
    dec $I18
    set $I18, rx1387_bstack[$I18]
  rx1387_cut3035:
    assign rx1387_cstack, $I18
  rx1387_jump3034:
    jump $I19
  rx1387_done3031:
    rx1387_cur."!cursor_fail"()
    .return (rx1387_cur) 
.end
.HLL "nqp"
.namespace []
.sub utf8:"circumfix:sym<\x{ab} \x{bb}>" :subid("cuid_167_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1297
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1390_start
    .local string rx1390_tgt
    .local int rx1390_pos
    .local int rx1390_off
    .local int rx1390_eos
    .local int rx1390_rep
    .local pmc rx1390_cur
    .local pmc rx1390_curclass
    .local pmc rx1390_bstack
    .local pmc rx1390_cstack
    rx1390_start = self."!cursor_start_all"()
    set rx1390_cur, rx1390_start[0]
    set rx1390_tgt, rx1390_start[1]
    set rx1390_pos, rx1390_start[2]
    set rx1390_curclass, rx1390_start[3]
    set rx1390_bstack, rx1390_start[4]
    set $I19, rx1390_start[5]
    store_lex unicode:"$\x{a2}", rx1390_cur
    length rx1390_eos, rx1390_tgt
    eq $I19, 1, rx1390_restart3043
    gt rx1390_pos, rx1390_eos, rx1390_fail3044
    repr_get_attr_int $I11, self, rx1390_curclass, "$!from"
    ne $I11, -1, rxscan1391_done3050
    goto rxscan1391_scan3049
  rxscan1391_loop3048:
    inc rx1390_pos
    gt rx1390_pos, rx1390_eos, rx1390_fail3044
    repr_bind_attr_int rx1390_cur, rx1390_curclass, "$!from", rx1390_pos
  rxscan1391_scan3049:
    nqp_rxmark rx1390_bstack, rxscan1391_loop3048, rx1390_pos, 0
  rxscan1391_done3050:
    ge rx1390_pos, rx1390_eos, rx1390_fail3044
    substr $S11, rx1390_tgt, rx1390_pos, 1
    index $I11, ucs4:"\x{ab}", $S11
    lt $I11, 0, rx1390_fail3044
    repr_bind_attr_int rx1390_cur, rx1390_curclass, "$!pos", rx1390_pos
    $P11 = rx1390_cur."quote_EXPR"(":qq", ":w")
    repr_get_attr_int $I11, $P11, rx1390_curclass, "$!pos"
    lt $I11, 0, rx1390_fail3044
    nqp_rxmark rx1390_bstack, rxsubrule1392_pass3051, -1, 0
  rxsubrule1392_pass3051:
    rx1390_cstack = rx1390_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1390_pos, $P11, rx1390_curclass, "$!pos"
    rx1390_cur."!cursor_pass"(rx1390_pos, utf8:"circumfix:sym<\x{ab} \x{bb}>", 'backtrack'=>1)
    .return (rx1390_cur)
  rx1390_restart3043:
    repr_get_attr_obj rx1390_cstack, rx1390_cur, rx1390_curclass, "$!cstack"
  rx1390_fail3044:
    unless rx1390_bstack, rx1390_done3042
    pop $I19, rx1390_bstack
    if_null rx1390_cstack, rx1390_cstack_done3047
    unless rx1390_cstack, rx1390_cstack_done3047
    dec $I19
    set $P11, rx1390_cstack[$I19]
  rx1390_cstack_done3047:
    pop rx1390_rep, rx1390_bstack
    pop rx1390_pos, rx1390_bstack
    pop $I19, rx1390_bstack
    lt rx1390_pos, -1, rx1390_done3042
    lt rx1390_pos, 0, rx1390_fail3044
    eq $I19, 0, rx1390_fail3044
    nqp_islist $I20, rx1390_cstack
    unless $I20, rx1390_jump3045
    elements $I18, rx1390_bstack
    le $I18, 0, rx1390_cut3046
    dec $I18
    set $I18, rx1390_bstack[$I18]
  rx1390_cut3046:
    assign rx1390_cstack, $I18
  rx1390_jump3045:
    jump $I19
  rx1390_done3042:
    rx1390_cur."!cursor_fail"()
    .return (rx1390_cur) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<{ }>" :subid("cuid_168_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1298
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1393_start
    .local string rx1393_tgt
    .local int rx1393_pos
    .local int rx1393_off
    .local int rx1393_eos
    .local int rx1393_rep
    .local pmc rx1393_cur
    .local pmc rx1393_curclass
    .local pmc rx1393_bstack
    .local pmc rx1393_cstack
    rx1393_start = self."!cursor_start_all"()
    set rx1393_cur, rx1393_start[0]
    set rx1393_tgt, rx1393_start[1]
    set rx1393_pos, rx1393_start[2]
    set rx1393_curclass, rx1393_start[3]
    set rx1393_bstack, rx1393_start[4]
    set $I19, rx1393_start[5]
    store_lex unicode:"$\x{a2}", rx1393_cur
    length rx1393_eos, rx1393_tgt
    eq $I19, 1, rx1393_restart3054
    gt rx1393_pos, rx1393_eos, rx1393_fail3055
    repr_get_attr_int $I11, self, rx1393_curclass, "$!from"
    ne $I11, -1, rxscan1394_done3061
    goto rxscan1394_scan3060
  rxscan1394_loop3059:
    inc rx1393_pos
    gt rx1393_pos, rx1393_eos, rx1393_fail3055
    repr_bind_attr_int rx1393_cur, rx1393_curclass, "$!from", rx1393_pos
  rxscan1394_scan3060:
    nqp_rxmark rx1393_bstack, rxscan1394_loop3059, rx1393_pos, 0
  rxscan1394_done3061:
    ge rx1393_pos, rx1393_eos, rx1393_fail3055
    substr $S11, rx1393_tgt, rx1393_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx1393_fail3055
    repr_bind_attr_int rx1393_cur, rx1393_curclass, "$!pos", rx1393_pos
    $P11 = rx1393_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx1393_curclass, "$!pos"
    lt $I11, 0, rx1393_fail3055
    nqp_rxmark rx1393_bstack, rxsubrule1395_pass3062, -1, 0
  rxsubrule1395_pass3062:
    rx1393_cstack = rx1393_cur."!cursor_capture"($P11, "pblock")
    repr_get_attr_int rx1393_pos, $P11, rx1393_curclass, "$!pos"
    rx1393_cur."!cursor_pass"(rx1393_pos, "circumfix:sym<{ }>", 'backtrack'=>1)
    .return (rx1393_cur)
  rx1393_restart3054:
    repr_get_attr_obj rx1393_cstack, rx1393_cur, rx1393_curclass, "$!cstack"
  rx1393_fail3055:
    unless rx1393_bstack, rx1393_done3053
    pop $I19, rx1393_bstack
    if_null rx1393_cstack, rx1393_cstack_done3058
    unless rx1393_cstack, rx1393_cstack_done3058
    dec $I19
    set $P11, rx1393_cstack[$I19]
  rx1393_cstack_done3058:
    pop rx1393_rep, rx1393_bstack
    pop rx1393_pos, rx1393_bstack
    pop $I19, rx1393_bstack
    lt rx1393_pos, -1, rx1393_done3053
    lt rx1393_pos, 0, rx1393_fail3055
    eq $I19, 0, rx1393_fail3055
    nqp_islist $I20, rx1393_cstack
    unless $I20, rx1393_jump3056
    elements $I18, rx1393_bstack
    le $I18, 0, rx1393_cut3057
    dec $I18
    set $I18, rx1393_bstack[$I18]
  rx1393_cut3057:
    assign rx1393_cstack, $I18
  rx1393_jump3056:
    jump $I19
  rx1393_done3053:
    rx1393_cur."!cursor_fail"()
    .return (rx1393_cur) 
.end
.HLL "nqp"
.namespace []
.sub "semilist" :subid("cuid_169_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1300
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1396_start
    .local string rx1396_tgt
    .local int rx1396_pos
    .local int rx1396_off
    .local int rx1396_eos
    .local int rx1396_rep
    .local pmc rx1396_cur
    .local pmc rx1396_curclass
    .local pmc rx1396_bstack
    .local pmc rx1396_cstack
    rx1396_start = self."!cursor_start_all"()
    set rx1396_cur, rx1396_start[0]
    set rx1396_tgt, rx1396_start[1]
    set rx1396_pos, rx1396_start[2]
    set rx1396_curclass, rx1396_start[3]
    set rx1396_bstack, rx1396_start[4]
    set $I19, rx1396_start[5]
    store_lex unicode:"$\x{a2}", rx1396_cur
    length rx1396_eos, rx1396_tgt
    eq $I19, 1, rx1396_restart3065
    gt rx1396_pos, rx1396_eos, rx1396_fail3066
    repr_get_attr_int $I11, self, rx1396_curclass, "$!from"
    ne $I11, -1, rxscan1397_done3072
    goto rxscan1397_scan3071
  rxscan1397_loop3070:
    inc rx1396_pos
    gt rx1396_pos, rx1396_eos, rx1396_fail3066
    repr_bind_attr_int rx1396_cur, rx1396_curclass, "$!from", rx1396_pos
  rxscan1397_scan3071:
    nqp_rxmark rx1396_bstack, rxscan1397_loop3070, rx1396_pos, 0
  rxscan1397_done3072:
    repr_bind_attr_int rx1396_cur, rx1396_curclass, "$!pos", rx1396_pos
    $P11 = rx1396_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1396_curclass, "$!pos"
    lt $I11, 0, rx1396_fail3066
    repr_get_attr_int rx1396_pos, $P11, rx1396_curclass, "$!pos"
    repr_bind_attr_int rx1396_cur, rx1396_curclass, "$!pos", rx1396_pos
    $P11 = rx1396_cur."statement"()
    repr_get_attr_int $I11, $P11, rx1396_curclass, "$!pos"
    lt $I11, 0, rx1396_fail3066
    nqp_rxmark rx1396_bstack, rxsubrule1399_pass3074, -1, 0
  rxsubrule1399_pass3074:
    rx1396_cstack = rx1396_cur."!cursor_capture"($P11, "statement")
    repr_get_attr_int rx1396_pos, $P11, rx1396_curclass, "$!pos"
    repr_bind_attr_int rx1396_cur, rx1396_curclass, "$!pos", rx1396_pos
    $P11 = rx1396_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1396_curclass, "$!pos"
    lt $I11, 0, rx1396_fail3066
    repr_get_attr_int rx1396_pos, $P11, rx1396_curclass, "$!pos"
    rx1396_cur."!cursor_pass"(rx1396_pos, "semilist", 'backtrack'=>1)
    .return (rx1396_cur)
  rx1396_restart3065:
    repr_get_attr_obj rx1396_cstack, rx1396_cur, rx1396_curclass, "$!cstack"
  rx1396_fail3066:
    unless rx1396_bstack, rx1396_done3064
    pop $I19, rx1396_bstack
    if_null rx1396_cstack, rx1396_cstack_done3069
    unless rx1396_cstack, rx1396_cstack_done3069
    dec $I19
    set $P11, rx1396_cstack[$I19]
  rx1396_cstack_done3069:
    pop rx1396_rep, rx1396_bstack
    pop rx1396_pos, rx1396_bstack
    pop $I19, rx1396_bstack
    lt rx1396_pos, -1, rx1396_done3064
    lt rx1396_pos, 0, rx1396_fail3066
    eq $I19, 0, rx1396_fail3066
    nqp_islist $I20, rx1396_cstack
    unless $I20, rx1396_jump3067
    elements $I18, rx1396_bstack
    le $I18, 0, rx1396_cut3068
    dec $I18
    set $I18, rx1396_bstack[$I18]
  rx1396_cut3068:
    assign rx1396_cstack, $I18
  rx1396_jump3067:
    jump $I19
  rx1396_done3064:
    rx1396_cur."!cursor_fail"()
    .return (rx1396_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infixish" :subid("cuid_170_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1323
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1401_start
    .local string rx1401_tgt
    .local int rx1401_pos
    .local int rx1401_off
    .local int rx1401_eos
    .local int rx1401_rep
    .local pmc rx1401_cur
    .local pmc rx1401_curclass
    .local pmc rx1401_bstack
    .local pmc rx1401_cstack
    rx1401_start = self."!cursor_start_all"()
    set rx1401_cur, rx1401_start[0]
    set rx1401_tgt, rx1401_start[1]
    set rx1401_pos, rx1401_start[2]
    set rx1401_curclass, rx1401_start[3]
    set rx1401_bstack, rx1401_start[4]
    set $I19, rx1401_start[5]
    store_lex unicode:"$\x{a2}", rx1401_cur
    length rx1401_eos, rx1401_tgt
    eq $I19, 1, rx1401_restart3078
    gt rx1401_pos, rx1401_eos, rx1401_fail3079
    repr_get_attr_int $I11, self, rx1401_curclass, "$!from"
    ne $I11, -1, rxscan1402_done3085
    goto rxscan1402_scan3084
  rxscan1402_loop3083:
    inc rx1401_pos
    gt rx1401_pos, rx1401_eos, rx1401_fail3079
    repr_bind_attr_int rx1401_cur, rx1401_curclass, "$!from", rx1401_pos
  rxscan1402_scan3084:
    nqp_rxmark rx1401_bstack, rxscan1402_loop3083, rx1401_pos, 0
  rxscan1402_done3085:
    repr_bind_attr_int rx1401_cur, rx1401_curclass, "$!pos", rx1401_pos
    $P11 = rx1401_cur."infixstopper"()
    repr_get_attr_int $I11, $P11, rx1401_curclass, "$!pos"
    ge $I11, 0, rx1401_fail3079
    repr_bind_attr_int rx1401_cur, rx1401_curclass, "$!pos", rx1401_pos
    $P11 = rx1401_cur."infix"()
    repr_get_attr_int $I11, $P11, rx1401_curclass, "$!pos"
    lt $I11, 0, rx1401_fail3079
    nqp_rxmark rx1401_bstack, rxsubrule1403_pass3086, -1, 0
  rxsubrule1403_pass3086:
    rx1401_cstack = rx1401_cur."!cursor_capture"($P11, "OPER=infix")
    repr_get_attr_int rx1401_pos, $P11, rx1401_curclass, "$!pos"
    rx1401_cur."!cursor_pass"(rx1401_pos, "infixish", 'backtrack'=>1)
    .return (rx1401_cur)
  rx1401_restart3078:
    repr_get_attr_obj rx1401_cstack, rx1401_cur, rx1401_curclass, "$!cstack"
  rx1401_fail3079:
    unless rx1401_bstack, rx1401_done3077
    pop $I19, rx1401_bstack
    if_null rx1401_cstack, rx1401_cstack_done3082
    unless rx1401_cstack, rx1401_cstack_done3082
    dec $I19
    set $P11, rx1401_cstack[$I19]
  rx1401_cstack_done3082:
    pop rx1401_rep, rx1401_bstack
    pop rx1401_pos, rx1401_bstack
    pop $I19, rx1401_bstack
    lt rx1401_pos, -1, rx1401_done3077
    lt rx1401_pos, 0, rx1401_fail3079
    eq $I19, 0, rx1401_fail3079
    nqp_islist $I20, rx1401_cstack
    unless $I20, rx1401_jump3080
    elements $I18, rx1401_bstack
    le $I18, 0, rx1401_cut3081
    dec $I18
    set $I18, rx1401_bstack[$I18]
  rx1401_cut3081:
    assign rx1401_cstack, $I18
  rx1401_jump3080:
    jump $I19
  rx1401_done3077:
    rx1401_cur."!cursor_fail"()
    .return (rx1401_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infixstopper" :subid("cuid_171_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1324
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1404_start
    .local string rx1404_tgt
    .local int rx1404_pos
    .local int rx1404_off
    .local int rx1404_eos
    .local int rx1404_rep
    .local pmc rx1404_cur
    .local pmc rx1404_curclass
    .local pmc rx1404_bstack
    .local pmc rx1404_cstack
    rx1404_start = self."!cursor_start_all"()
    set rx1404_cur, rx1404_start[0]
    set rx1404_tgt, rx1404_start[1]
    set rx1404_pos, rx1404_start[2]
    set rx1404_curclass, rx1404_start[3]
    set rx1404_bstack, rx1404_start[4]
    set $I19, rx1404_start[5]
    store_lex unicode:"$\x{a2}", rx1404_cur
    length rx1404_eos, rx1404_tgt
    eq $I19, 1, rx1404_restart3089
    gt rx1404_pos, rx1404_eos, rx1404_fail3090
    repr_get_attr_int $I11, self, rx1404_curclass, "$!from"
    ne $I11, -1, rxscan1405_done3096
    goto rxscan1405_scan3095
  rxscan1405_loop3094:
    inc rx1404_pos
    gt rx1404_pos, rx1404_eos, rx1404_fail3090
    repr_bind_attr_int rx1404_cur, rx1404_curclass, "$!from", rx1404_pos
  rxscan1405_scan3095:
    nqp_rxmark rx1404_bstack, rxscan1405_loop3094, rx1404_pos, 0
  rxscan1405_done3096:
    repr_bind_attr_int rx1404_cur, rx1404_curclass, "$!pos", rx1404_pos
    $P11 = rx1404_cur."lambda"()
    repr_get_attr_int $I11, $P11, rx1404_curclass, "$!pos"
    lt $I11, 0, rx1404_fail3090
    rx1404_cur."!cursor_pass"(rx1404_pos, "infixstopper", 'backtrack'=>1)
    .return (rx1404_cur)
  rx1404_restart3089:
    repr_get_attr_obj rx1404_cstack, rx1404_cur, rx1404_curclass, "$!cstack"
  rx1404_fail3090:
    unless rx1404_bstack, rx1404_done3088
    pop $I19, rx1404_bstack
    if_null rx1404_cstack, rx1404_cstack_done3093
    unless rx1404_cstack, rx1404_cstack_done3093
    dec $I19
    set $P11, rx1404_cstack[$I19]
  rx1404_cstack_done3093:
    pop rx1404_rep, rx1404_bstack
    pop rx1404_pos, rx1404_bstack
    pop $I19, rx1404_bstack
    lt rx1404_pos, -1, rx1404_done3088
    lt rx1404_pos, 0, rx1404_fail3090
    eq $I19, 0, rx1404_fail3090
    nqp_islist $I20, rx1404_cstack
    unless $I20, rx1404_jump3091
    elements $I18, rx1404_bstack
    le $I18, 0, rx1404_cut3092
    dec $I18
    set $I18, rx1404_bstack[$I18]
  rx1404_cut3092:
    assign rx1404_cstack, $I18
  rx1404_jump3091:
    jump $I19
  rx1404_done3088:
    rx1404_cur."!cursor_fail"()
    .return (rx1404_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<[ ]>" :subid("cuid_172_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1326
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1406_start
    .local string rx1406_tgt
    .local int rx1406_pos
    .local int rx1406_off
    .local int rx1406_eos
    .local int rx1406_rep
    .local pmc rx1406_cur
    .local pmc rx1406_curclass
    .local pmc rx1406_bstack
    .local pmc rx1406_cstack
    rx1406_start = self."!cursor_start_all"()
    set rx1406_cur, rx1406_start[0]
    set rx1406_tgt, rx1406_start[1]
    set rx1406_pos, rx1406_start[2]
    set rx1406_curclass, rx1406_start[3]
    set rx1406_bstack, rx1406_start[4]
    set $I19, rx1406_start[5]
    store_lex unicode:"$\x{a2}", rx1406_cur
    length rx1406_eos, rx1406_tgt
    eq $I19, 1, rx1406_restart3099
    gt rx1406_pos, rx1406_eos, rx1406_fail3100
    repr_get_attr_int $I11, self, rx1406_curclass, "$!from"
    ne $I11, -1, rxscan1407_done3106
    goto rxscan1407_scan3105
  rxscan1407_loop3104:
    inc rx1406_pos
    gt rx1406_pos, rx1406_eos, rx1406_fail3100
    repr_bind_attr_int rx1406_cur, rx1406_curclass, "$!from", rx1406_pos
  rxscan1407_scan3105:
    nqp_rxmark rx1406_bstack, rxscan1407_loop3104, rx1406_pos, 0
  rxscan1407_done3106:
    add $I11, rx1406_pos, 1
    gt $I11, rx1406_eos, rx1406_fail3100
    substr $S10, rx1406_tgt, rx1406_pos, 1
    ne $S10, ucs4:"[", rx1406_fail3100
    add rx1406_pos, 1
    repr_bind_attr_int rx1406_cur, rx1406_curclass, "$!pos", rx1406_pos
    $P11 = rx1406_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1406_curclass, "$!pos"
    lt $I11, 0, rx1406_fail3100
    repr_get_attr_int rx1406_pos, $P11, rx1406_curclass, "$!pos"
    repr_bind_attr_int rx1406_cur, rx1406_curclass, "$!pos", rx1406_pos
    $P11 = rx1406_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx1406_curclass, "$!pos"
    lt $I11, 0, rx1406_fail3100
    nqp_rxmark rx1406_bstack, rxsubrule1409_pass3108, -1, 0
  rxsubrule1409_pass3108:
    rx1406_cstack = rx1406_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx1406_pos, $P11, rx1406_curclass, "$!pos"
    add $I11, rx1406_pos, 1
    gt $I11, rx1406_eos, rx1406_fail3100
    substr $S10, rx1406_tgt, rx1406_pos, 1
    ne $S10, ucs4:"]", rx1406_fail3100
    add rx1406_pos, 1
    repr_bind_attr_int rx1406_cur, rx1406_curclass, "$!pos", rx1406_pos
    $P11 = rx1406_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1406_curclass, "$!pos"
    lt $I11, 0, rx1406_fail3100
    nqp_rxmark rx1406_bstack, rxsubrule1410_pass3109, -1, 0
  rxsubrule1410_pass3109:
    rx1406_cstack = rx1406_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1406_pos, $P11, rx1406_curclass, "$!pos"
    rx1406_cur."!cursor_pass"(rx1406_pos, "postcircumfix:sym<[ ]>", 'backtrack'=>1)
    .return (rx1406_cur)
  rx1406_restart3099:
    repr_get_attr_obj rx1406_cstack, rx1406_cur, rx1406_curclass, "$!cstack"
  rx1406_fail3100:
    unless rx1406_bstack, rx1406_done3098
    pop $I19, rx1406_bstack
    if_null rx1406_cstack, rx1406_cstack_done3103
    unless rx1406_cstack, rx1406_cstack_done3103
    dec $I19
    set $P11, rx1406_cstack[$I19]
  rx1406_cstack_done3103:
    pop rx1406_rep, rx1406_bstack
    pop rx1406_pos, rx1406_bstack
    pop $I19, rx1406_bstack
    lt rx1406_pos, -1, rx1406_done3098
    lt rx1406_pos, 0, rx1406_fail3100
    eq $I19, 0, rx1406_fail3100
    nqp_islist $I20, rx1406_cstack
    unless $I20, rx1406_jump3101
    elements $I18, rx1406_bstack
    le $I18, 0, rx1406_cut3102
    dec $I18
    set $I18, rx1406_bstack[$I18]
  rx1406_cut3102:
    assign rx1406_cstack, $I18
  rx1406_jump3101:
    jump $I19
  rx1406_done3098:
    rx1406_cur."!cursor_fail"()
    .return (rx1406_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<{ }>" :subid("cuid_173_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1331
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1411_start
    .local string rx1411_tgt
    .local int rx1411_pos
    .local int rx1411_off
    .local int rx1411_eos
    .local int rx1411_rep
    .local pmc rx1411_cur
    .local pmc rx1411_curclass
    .local pmc rx1411_bstack
    .local pmc rx1411_cstack
    rx1411_start = self."!cursor_start_all"()
    set rx1411_cur, rx1411_start[0]
    set rx1411_tgt, rx1411_start[1]
    set rx1411_pos, rx1411_start[2]
    set rx1411_curclass, rx1411_start[3]
    set rx1411_bstack, rx1411_start[4]
    set $I19, rx1411_start[5]
    store_lex unicode:"$\x{a2}", rx1411_cur
    length rx1411_eos, rx1411_tgt
    eq $I19, 1, rx1411_restart3112
    gt rx1411_pos, rx1411_eos, rx1411_fail3113
    repr_get_attr_int $I11, self, rx1411_curclass, "$!from"
    ne $I11, -1, rxscan1412_done3119
    goto rxscan1412_scan3118
  rxscan1412_loop3117:
    inc rx1411_pos
    gt rx1411_pos, rx1411_eos, rx1411_fail3113
    repr_bind_attr_int rx1411_cur, rx1411_curclass, "$!from", rx1411_pos
  rxscan1412_scan3118:
    nqp_rxmark rx1411_bstack, rxscan1412_loop3117, rx1411_pos, 0
  rxscan1412_done3119:
    add $I11, rx1411_pos, 1
    gt $I11, rx1411_eos, rx1411_fail3113
    substr $S10, rx1411_tgt, rx1411_pos, 1
    ne $S10, ucs4:"{", rx1411_fail3113
    add rx1411_pos, 1
    repr_bind_attr_int rx1411_cur, rx1411_curclass, "$!pos", rx1411_pos
    $P11 = rx1411_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1411_curclass, "$!pos"
    lt $I11, 0, rx1411_fail3113
    repr_get_attr_int rx1411_pos, $P11, rx1411_curclass, "$!pos"
    repr_bind_attr_int rx1411_cur, rx1411_curclass, "$!pos", rx1411_pos
    $P11 = rx1411_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx1411_curclass, "$!pos"
    lt $I11, 0, rx1411_fail3113
    nqp_rxmark rx1411_bstack, rxsubrule1414_pass3121, -1, 0
  rxsubrule1414_pass3121:
    rx1411_cstack = rx1411_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx1411_pos, $P11, rx1411_curclass, "$!pos"
    add $I11, rx1411_pos, 1
    gt $I11, rx1411_eos, rx1411_fail3113
    substr $S10, rx1411_tgt, rx1411_pos, 1
    ne $S10, ucs4:"}", rx1411_fail3113
    add rx1411_pos, 1
    repr_bind_attr_int rx1411_cur, rx1411_curclass, "$!pos", rx1411_pos
    $P11 = rx1411_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1411_curclass, "$!pos"
    lt $I11, 0, rx1411_fail3113
    nqp_rxmark rx1411_bstack, rxsubrule1415_pass3122, -1, 0
  rxsubrule1415_pass3122:
    rx1411_cstack = rx1411_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1411_pos, $P11, rx1411_curclass, "$!pos"
    rx1411_cur."!cursor_pass"(rx1411_pos, "postcircumfix:sym<{ }>", 'backtrack'=>1)
    .return (rx1411_cur)
  rx1411_restart3112:
    repr_get_attr_obj rx1411_cstack, rx1411_cur, rx1411_curclass, "$!cstack"
  rx1411_fail3113:
    unless rx1411_bstack, rx1411_done3111
    pop $I19, rx1411_bstack
    if_null rx1411_cstack, rx1411_cstack_done3116
    unless rx1411_cstack, rx1411_cstack_done3116
    dec $I19
    set $P11, rx1411_cstack[$I19]
  rx1411_cstack_done3116:
    pop rx1411_rep, rx1411_bstack
    pop rx1411_pos, rx1411_bstack
    pop $I19, rx1411_bstack
    lt rx1411_pos, -1, rx1411_done3111
    lt rx1411_pos, 0, rx1411_fail3113
    eq $I19, 0, rx1411_fail3113
    nqp_islist $I20, rx1411_cstack
    unless $I20, rx1411_jump3114
    elements $I18, rx1411_bstack
    le $I18, 0, rx1411_cut3115
    dec $I18
    set $I18, rx1411_bstack[$I18]
  rx1411_cut3115:
    assign rx1411_cstack, $I18
  rx1411_jump3114:
    jump $I19
  rx1411_done3111:
    rx1411_cur."!cursor_fail"()
    .return (rx1411_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<ang>" :subid("cuid_174_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1336
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1416_start
    .local string rx1416_tgt
    .local int rx1416_pos
    .local int rx1416_off
    .local int rx1416_eos
    .local int rx1416_rep
    .local pmc rx1416_cur
    .local pmc rx1416_curclass
    .local pmc rx1416_bstack
    .local pmc rx1416_cstack
    rx1416_start = self."!cursor_start_all"()
    set rx1416_cur, rx1416_start[0]
    set rx1416_tgt, rx1416_start[1]
    set rx1416_pos, rx1416_start[2]
    set rx1416_curclass, rx1416_start[3]
    set rx1416_bstack, rx1416_start[4]
    set $I19, rx1416_start[5]
    store_lex unicode:"$\x{a2}", rx1416_cur
    length rx1416_eos, rx1416_tgt
    eq $I19, 1, rx1416_restart3125
    gt rx1416_pos, rx1416_eos, rx1416_fail3126
    repr_get_attr_int $I11, self, rx1416_curclass, "$!from"
    ne $I11, -1, rxscan1417_done3132
    goto rxscan1417_scan3131
  rxscan1417_loop3130:
    inc rx1416_pos
    gt rx1416_pos, rx1416_eos, rx1416_fail3126
    repr_bind_attr_int rx1416_cur, rx1416_curclass, "$!from", rx1416_pos
  rxscan1417_scan3131:
    nqp_rxmark rx1416_bstack, rxscan1417_loop3130, rx1416_pos, 0
  rxscan1417_done3132:
    ge rx1416_pos, rx1416_eos, rx1416_fail3126
    substr $S11, rx1416_tgt, rx1416_pos, 1
    index $I11, ucs4:"<", $S11
    lt $I11, 0, rx1416_fail3126
    repr_bind_attr_int rx1416_cur, rx1416_curclass, "$!pos", rx1416_pos
    $P11 = rx1416_cur."quote_EXPR"(":q")
    repr_get_attr_int $I11, $P11, rx1416_curclass, "$!pos"
    lt $I11, 0, rx1416_fail3126
    nqp_rxmark rx1416_bstack, rxsubrule1418_pass3133, -1, 0
  rxsubrule1418_pass3133:
    rx1416_cstack = rx1416_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1416_pos, $P11, rx1416_curclass, "$!pos"
    repr_bind_attr_int rx1416_cur, rx1416_curclass, "$!pos", rx1416_pos
    $P11 = rx1416_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1416_curclass, "$!pos"
    lt $I11, 0, rx1416_fail3126
    nqp_rxmark rx1416_bstack, rxsubrule1419_pass3134, -1, 0
  rxsubrule1419_pass3134:
    rx1416_cstack = rx1416_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1416_pos, $P11, rx1416_curclass, "$!pos"
    rx1416_cur."!cursor_pass"(rx1416_pos, "postcircumfix:sym<ang>", 'backtrack'=>1)
    .return (rx1416_cur)
  rx1416_restart3125:
    repr_get_attr_obj rx1416_cstack, rx1416_cur, rx1416_curclass, "$!cstack"
  rx1416_fail3126:
    unless rx1416_bstack, rx1416_done3124
    pop $I19, rx1416_bstack
    if_null rx1416_cstack, rx1416_cstack_done3129
    unless rx1416_cstack, rx1416_cstack_done3129
    dec $I19
    set $P11, rx1416_cstack[$I19]
  rx1416_cstack_done3129:
    pop rx1416_rep, rx1416_bstack
    pop rx1416_pos, rx1416_bstack
    pop $I19, rx1416_bstack
    lt rx1416_pos, -1, rx1416_done3124
    lt rx1416_pos, 0, rx1416_fail3126
    eq $I19, 0, rx1416_fail3126
    nqp_islist $I20, rx1416_cstack
    unless $I20, rx1416_jump3127
    elements $I18, rx1416_bstack
    le $I18, 0, rx1416_cut3128
    dec $I18
    set $I18, rx1416_bstack[$I18]
  rx1416_cut3128:
    assign rx1416_cstack, $I18
  rx1416_jump3127:
    jump $I19
  rx1416_done3124:
    rx1416_cur."!cursor_fail"()
    .return (rx1416_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<( )>" :subid("cuid_175_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1341
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1420_start
    .local string rx1420_tgt
    .local int rx1420_pos
    .local int rx1420_off
    .local int rx1420_eos
    .local int rx1420_rep
    .local pmc rx1420_cur
    .local pmc rx1420_curclass
    .local pmc rx1420_bstack
    .local pmc rx1420_cstack
    rx1420_start = self."!cursor_start_all"()
    set rx1420_cur, rx1420_start[0]
    set rx1420_tgt, rx1420_start[1]
    set rx1420_pos, rx1420_start[2]
    set rx1420_curclass, rx1420_start[3]
    set rx1420_bstack, rx1420_start[4]
    set $I19, rx1420_start[5]
    store_lex unicode:"$\x{a2}", rx1420_cur
    length rx1420_eos, rx1420_tgt
    eq $I19, 1, rx1420_restart3137
    gt rx1420_pos, rx1420_eos, rx1420_fail3138
    repr_get_attr_int $I11, self, rx1420_curclass, "$!from"
    ne $I11, -1, rxscan1421_done3144
    goto rxscan1421_scan3143
  rxscan1421_loop3142:
    inc rx1420_pos
    gt rx1420_pos, rx1420_eos, rx1420_fail3138
    repr_bind_attr_int rx1420_cur, rx1420_curclass, "$!from", rx1420_pos
  rxscan1421_scan3143:
    nqp_rxmark rx1420_bstack, rxscan1421_loop3142, rx1420_pos, 0
  rxscan1421_done3144:
    add $I11, rx1420_pos, 1
    gt $I11, rx1420_eos, rx1420_fail3138
    substr $S10, rx1420_tgt, rx1420_pos, 1
    ne $S10, ucs4:"(", rx1420_fail3138
    add rx1420_pos, 1
    repr_bind_attr_int rx1420_cur, rx1420_curclass, "$!pos", rx1420_pos
    $P11 = rx1420_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1420_curclass, "$!pos"
    lt $I11, 0, rx1420_fail3138
    repr_get_attr_int rx1420_pos, $P11, rx1420_curclass, "$!pos"
    repr_bind_attr_int rx1420_cur, rx1420_curclass, "$!pos", rx1420_pos
    $P11 = rx1420_cur."arglist"()
    repr_get_attr_int $I11, $P11, rx1420_curclass, "$!pos"
    lt $I11, 0, rx1420_fail3138
    nqp_rxmark rx1420_bstack, rxsubrule1423_pass3146, -1, 0
  rxsubrule1423_pass3146:
    rx1420_cstack = rx1420_cur."!cursor_capture"($P11, "arglist")
    repr_get_attr_int rx1420_pos, $P11, rx1420_curclass, "$!pos"
    add $I11, rx1420_pos, 1
    gt $I11, rx1420_eos, rx1420_fail3138
    substr $S10, rx1420_tgt, rx1420_pos, 1
    ne $S10, ucs4:")", rx1420_fail3138
    add rx1420_pos, 1
    repr_bind_attr_int rx1420_cur, rx1420_curclass, "$!pos", rx1420_pos
    $P11 = rx1420_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1420_curclass, "$!pos"
    lt $I11, 0, rx1420_fail3138
    nqp_rxmark rx1420_bstack, rxsubrule1424_pass3147, -1, 0
  rxsubrule1424_pass3147:
    rx1420_cstack = rx1420_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1420_pos, $P11, rx1420_curclass, "$!pos"
    rx1420_cur."!cursor_pass"(rx1420_pos, "postcircumfix:sym<( )>", 'backtrack'=>1)
    .return (rx1420_cur)
  rx1420_restart3137:
    repr_get_attr_obj rx1420_cstack, rx1420_cur, rx1420_curclass, "$!cstack"
  rx1420_fail3138:
    unless rx1420_bstack, rx1420_done3136
    pop $I19, rx1420_bstack
    if_null rx1420_cstack, rx1420_cstack_done3141
    unless rx1420_cstack, rx1420_cstack_done3141
    dec $I19
    set $P11, rx1420_cstack[$I19]
  rx1420_cstack_done3141:
    pop rx1420_rep, rx1420_bstack
    pop rx1420_pos, rx1420_bstack
    pop $I19, rx1420_bstack
    lt rx1420_pos, -1, rx1420_done3136
    lt rx1420_pos, 0, rx1420_fail3138
    eq $I19, 0, rx1420_fail3138
    nqp_islist $I20, rx1420_cstack
    unless $I20, rx1420_jump3139
    elements $I18, rx1420_bstack
    le $I18, 0, rx1420_cut3140
    dec $I18
    set $I18, rx1420_bstack[$I18]
  rx1420_cut3140:
    assign rx1420_cstack, $I18
  rx1420_jump3139:
    jump $I19
  rx1420_done3136:
    rx1420_cur."!cursor_fail"()
    .return (rx1420_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postfix:sym<.>" :subid("cuid_176_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1346
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1425_start
    .local string rx1425_tgt
    .local int rx1425_pos
    .local int rx1425_off
    .local int rx1425_eos
    .local int rx1425_rep
    .local pmc rx1425_cur
    .local pmc rx1425_curclass
    .local pmc rx1425_bstack
    .local pmc rx1425_cstack
    rx1425_start = self."!cursor_start_all"()
    set rx1425_cur, rx1425_start[0]
    set rx1425_tgt, rx1425_start[1]
    set rx1425_pos, rx1425_start[2]
    set rx1425_curclass, rx1425_start[3]
    set rx1425_bstack, rx1425_start[4]
    set $I19, rx1425_start[5]
    store_lex unicode:"$\x{a2}", rx1425_cur
    length rx1425_eos, rx1425_tgt
    eq $I19, 1, rx1425_restart3150
    gt rx1425_pos, rx1425_eos, rx1425_fail3151
    repr_get_attr_int $I11, self, rx1425_curclass, "$!from"
    ne $I11, -1, rxscan1426_done3157
    goto rxscan1426_scan3156
  rxscan1426_loop3155:
    inc rx1425_pos
    gt rx1425_pos, rx1425_eos, rx1425_fail3151
    repr_bind_attr_int rx1425_cur, rx1425_curclass, "$!from", rx1425_pos
  rxscan1426_scan3156:
    nqp_rxmark rx1425_bstack, rxscan1426_loop3155, rx1425_pos, 0
  rxscan1426_done3157:
    repr_bind_attr_int rx1425_cur, rx1425_curclass, "$!pos", rx1425_pos
    $P11 = rx1425_cur."dotty"()
    repr_get_attr_int $I11, $P11, rx1425_curclass, "$!pos"
    lt $I11, 0, rx1425_fail3151
    nqp_rxmark rx1425_bstack, rxsubrule1427_pass3158, -1, 0
  rxsubrule1427_pass3158:
    rx1425_cstack = rx1425_cur."!cursor_capture"($P11, "dotty")
    repr_get_attr_int rx1425_pos, $P11, rx1425_curclass, "$!pos"
    repr_bind_attr_int rx1425_cur, rx1425_curclass, "$!pos", rx1425_pos
    $P11 = rx1425_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1425_curclass, "$!pos"
    lt $I11, 0, rx1425_fail3151
    nqp_rxmark rx1425_bstack, rxsubrule1428_pass3159, -1, 0
  rxsubrule1428_pass3159:
    rx1425_cstack = rx1425_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1425_pos, $P11, rx1425_curclass, "$!pos"
    rx1425_cur."!cursor_pass"(rx1425_pos, "postfix:sym<.>", 'backtrack'=>1)
    .return (rx1425_cur)
  rx1425_restart3150:
    repr_get_attr_obj rx1425_cstack, rx1425_cur, rx1425_curclass, "$!cstack"
  rx1425_fail3151:
    unless rx1425_bstack, rx1425_done3149
    pop $I19, rx1425_bstack
    if_null rx1425_cstack, rx1425_cstack_done3154
    unless rx1425_cstack, rx1425_cstack_done3154
    dec $I19
    set $P11, rx1425_cstack[$I19]
  rx1425_cstack_done3154:
    pop rx1425_rep, rx1425_bstack
    pop rx1425_pos, rx1425_bstack
    pop $I19, rx1425_bstack
    lt rx1425_pos, -1, rx1425_done3149
    lt rx1425_pos, 0, rx1425_fail3151
    eq $I19, 0, rx1425_fail3151
    nqp_islist $I20, rx1425_cstack
    unless $I20, rx1425_jump3152
    elements $I18, rx1425_bstack
    le $I18, 0, rx1425_cut3153
    dec $I18
    set $I18, rx1425_bstack[$I18]
  rx1425_cut3153:
    assign rx1425_cstack, $I18
  rx1425_jump3152:
    jump $I19
  rx1425_done3149:
    rx1425_cur."!cursor_fail"()
    .return (rx1425_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<++>" :subid("cuid_177_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1348
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1429_start
    .local string rx1429_tgt
    .local int rx1429_pos
    .local int rx1429_off
    .local int rx1429_eos
    .local int rx1429_rep
    .local pmc rx1429_cur
    .local pmc rx1429_curclass
    .local pmc rx1429_bstack
    .local pmc rx1429_cstack
    rx1429_start = self."!cursor_start_all"()
    set rx1429_cur, rx1429_start[0]
    set rx1429_tgt, rx1429_start[1]
    set rx1429_pos, rx1429_start[2]
    set rx1429_curclass, rx1429_start[3]
    set rx1429_bstack, rx1429_start[4]
    set $I19, rx1429_start[5]
    store_lex unicode:"$\x{a2}", rx1429_cur
    length rx1429_eos, rx1429_tgt
    eq $I19, 1, rx1429_restart3162
    gt rx1429_pos, rx1429_eos, rx1429_fail3163
    repr_get_attr_int $I11, self, rx1429_curclass, "$!from"
    ne $I11, -1, rxscan1430_done3169
    goto rxscan1430_scan3168
  rxscan1430_loop3167:
    inc rx1429_pos
    gt rx1429_pos, rx1429_eos, rx1429_fail3163
    repr_bind_attr_int rx1429_cur, rx1429_curclass, "$!from", rx1429_pos
  rxscan1430_scan3168:
    nqp_rxmark rx1429_bstack, rxscan1430_loop3167, rx1429_pos, 0
  rxscan1430_done3169:
    nqp_rxmark rx1429_bstack, rxcap1431_fail3171, rx1429_pos, 0
    add $I11, rx1429_pos, 2
    gt $I11, rx1429_eos, rx1429_fail3163
    substr $S10, rx1429_tgt, rx1429_pos, 2
    ne $S10, ucs4:"++", rx1429_fail3163
    add rx1429_pos, 2
    nqp_rxpeek $I19, rx1429_bstack, rxcap1431_fail3171
    inc $I19
    set $I11, rx1429_bstack[$I19]
    repr_bind_attr_int rx1429_cur, rx1429_curclass, "$!pos", rx1429_pos
    $P11 = rx1429_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1429_pos)
    rx1429_cstack = rx1429_cur."!cursor_capture"($P11, "sym")
    goto rxcap1431_done3170
  rxcap1431_fail3171:
    goto rx1429_fail3163
  rxcap1431_done3170:
    repr_bind_attr_int rx1429_cur, rx1429_curclass, "$!pos", rx1429_pos
    $P11 = rx1429_cur."O"("%autoincrement, :op<preinc>")
    repr_get_attr_int $I11, $P11, rx1429_curclass, "$!pos"
    lt $I11, 0, rx1429_fail3163
    nqp_rxmark rx1429_bstack, rxsubrule1432_pass3172, -1, 0
  rxsubrule1432_pass3172:
    rx1429_cstack = rx1429_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1429_pos, $P11, rx1429_curclass, "$!pos"
    rx1429_cur."!cursor_pass"(rx1429_pos, "prefix:sym<++>", 'backtrack'=>1)
    .return (rx1429_cur)
  rx1429_restart3162:
    repr_get_attr_obj rx1429_cstack, rx1429_cur, rx1429_curclass, "$!cstack"
  rx1429_fail3163:
    unless rx1429_bstack, rx1429_done3161
    pop $I19, rx1429_bstack
    if_null rx1429_cstack, rx1429_cstack_done3166
    unless rx1429_cstack, rx1429_cstack_done3166
    dec $I19
    set $P11, rx1429_cstack[$I19]
  rx1429_cstack_done3166:
    pop rx1429_rep, rx1429_bstack
    pop rx1429_pos, rx1429_bstack
    pop $I19, rx1429_bstack
    lt rx1429_pos, -1, rx1429_done3161
    lt rx1429_pos, 0, rx1429_fail3163
    eq $I19, 0, rx1429_fail3163
    nqp_islist $I20, rx1429_cstack
    unless $I20, rx1429_jump3164
    elements $I18, rx1429_bstack
    le $I18, 0, rx1429_cut3165
    dec $I18
    set $I18, rx1429_bstack[$I18]
  rx1429_cut3165:
    assign rx1429_cstack, $I18
  rx1429_jump3164:
    jump $I19
  rx1429_done3161:
    rx1429_cur."!cursor_fail"()
    .return (rx1429_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<-->" :subid("cuid_178_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1349
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1433_start
    .local string rx1433_tgt
    .local int rx1433_pos
    .local int rx1433_off
    .local int rx1433_eos
    .local int rx1433_rep
    .local pmc rx1433_cur
    .local pmc rx1433_curclass
    .local pmc rx1433_bstack
    .local pmc rx1433_cstack
    rx1433_start = self."!cursor_start_all"()
    set rx1433_cur, rx1433_start[0]
    set rx1433_tgt, rx1433_start[1]
    set rx1433_pos, rx1433_start[2]
    set rx1433_curclass, rx1433_start[3]
    set rx1433_bstack, rx1433_start[4]
    set $I19, rx1433_start[5]
    store_lex unicode:"$\x{a2}", rx1433_cur
    length rx1433_eos, rx1433_tgt
    eq $I19, 1, rx1433_restart3175
    gt rx1433_pos, rx1433_eos, rx1433_fail3176
    repr_get_attr_int $I11, self, rx1433_curclass, "$!from"
    ne $I11, -1, rxscan1434_done3182
    goto rxscan1434_scan3181
  rxscan1434_loop3180:
    inc rx1433_pos
    gt rx1433_pos, rx1433_eos, rx1433_fail3176
    repr_bind_attr_int rx1433_cur, rx1433_curclass, "$!from", rx1433_pos
  rxscan1434_scan3181:
    nqp_rxmark rx1433_bstack, rxscan1434_loop3180, rx1433_pos, 0
  rxscan1434_done3182:
    nqp_rxmark rx1433_bstack, rxcap1435_fail3184, rx1433_pos, 0
    add $I11, rx1433_pos, 2
    gt $I11, rx1433_eos, rx1433_fail3176
    substr $S10, rx1433_tgt, rx1433_pos, 2
    ne $S10, ucs4:"--", rx1433_fail3176
    add rx1433_pos, 2
    nqp_rxpeek $I19, rx1433_bstack, rxcap1435_fail3184
    inc $I19
    set $I11, rx1433_bstack[$I19]
    repr_bind_attr_int rx1433_cur, rx1433_curclass, "$!pos", rx1433_pos
    $P11 = rx1433_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1433_pos)
    rx1433_cstack = rx1433_cur."!cursor_capture"($P11, "sym")
    goto rxcap1435_done3183
  rxcap1435_fail3184:
    goto rx1433_fail3176
  rxcap1435_done3183:
    repr_bind_attr_int rx1433_cur, rx1433_curclass, "$!pos", rx1433_pos
    $P11 = rx1433_cur."O"("%autoincrement, :op<predec>")
    repr_get_attr_int $I11, $P11, rx1433_curclass, "$!pos"
    lt $I11, 0, rx1433_fail3176
    nqp_rxmark rx1433_bstack, rxsubrule1436_pass3185, -1, 0
  rxsubrule1436_pass3185:
    rx1433_cstack = rx1433_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1433_pos, $P11, rx1433_curclass, "$!pos"
    rx1433_cur."!cursor_pass"(rx1433_pos, "prefix:sym<-->", 'backtrack'=>1)
    .return (rx1433_cur)
  rx1433_restart3175:
    repr_get_attr_obj rx1433_cstack, rx1433_cur, rx1433_curclass, "$!cstack"
  rx1433_fail3176:
    unless rx1433_bstack, rx1433_done3174
    pop $I19, rx1433_bstack
    if_null rx1433_cstack, rx1433_cstack_done3179
    unless rx1433_cstack, rx1433_cstack_done3179
    dec $I19
    set $P11, rx1433_cstack[$I19]
  rx1433_cstack_done3179:
    pop rx1433_rep, rx1433_bstack
    pop rx1433_pos, rx1433_bstack
    pop $I19, rx1433_bstack
    lt rx1433_pos, -1, rx1433_done3174
    lt rx1433_pos, 0, rx1433_fail3176
    eq $I19, 0, rx1433_fail3176
    nqp_islist $I20, rx1433_cstack
    unless $I20, rx1433_jump3177
    elements $I18, rx1433_bstack
    le $I18, 0, rx1433_cut3178
    dec $I18
    set $I18, rx1433_bstack[$I18]
  rx1433_cut3178:
    assign rx1433_cstack, $I18
  rx1433_jump3177:
    jump $I19
  rx1433_done3174:
    rx1433_cur."!cursor_fail"()
    .return (rx1433_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postfix:sym<++>" :subid("cuid_179_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1351
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1437_start
    .local string rx1437_tgt
    .local int rx1437_pos
    .local int rx1437_off
    .local int rx1437_eos
    .local int rx1437_rep
    .local pmc rx1437_cur
    .local pmc rx1437_curclass
    .local pmc rx1437_bstack
    .local pmc rx1437_cstack
    rx1437_start = self."!cursor_start_all"()
    set rx1437_cur, rx1437_start[0]
    set rx1437_tgt, rx1437_start[1]
    set rx1437_pos, rx1437_start[2]
    set rx1437_curclass, rx1437_start[3]
    set rx1437_bstack, rx1437_start[4]
    set $I19, rx1437_start[5]
    store_lex unicode:"$\x{a2}", rx1437_cur
    length rx1437_eos, rx1437_tgt
    eq $I19, 1, rx1437_restart3188
    gt rx1437_pos, rx1437_eos, rx1437_fail3189
    repr_get_attr_int $I11, self, rx1437_curclass, "$!from"
    ne $I11, -1, rxscan1438_done3195
    goto rxscan1438_scan3194
  rxscan1438_loop3193:
    inc rx1437_pos
    gt rx1437_pos, rx1437_eos, rx1437_fail3189
    repr_bind_attr_int rx1437_cur, rx1437_curclass, "$!from", rx1437_pos
  rxscan1438_scan3194:
    nqp_rxmark rx1437_bstack, rxscan1438_loop3193, rx1437_pos, 0
  rxscan1438_done3195:
    nqp_rxmark rx1437_bstack, rxcap1439_fail3197, rx1437_pos, 0
    add $I11, rx1437_pos, 2
    gt $I11, rx1437_eos, rx1437_fail3189
    substr $S10, rx1437_tgt, rx1437_pos, 2
    ne $S10, ucs4:"++", rx1437_fail3189
    add rx1437_pos, 2
    nqp_rxpeek $I19, rx1437_bstack, rxcap1439_fail3197
    inc $I19
    set $I11, rx1437_bstack[$I19]
    repr_bind_attr_int rx1437_cur, rx1437_curclass, "$!pos", rx1437_pos
    $P11 = rx1437_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1437_pos)
    rx1437_cstack = rx1437_cur."!cursor_capture"($P11, "sym")
    goto rxcap1439_done3196
  rxcap1439_fail3197:
    goto rx1437_fail3189
  rxcap1439_done3196:
    repr_bind_attr_int rx1437_cur, rx1437_curclass, "$!pos", rx1437_pos
    $P11 = rx1437_cur."O"("%autoincrement, :op<postinc>")
    repr_get_attr_int $I11, $P11, rx1437_curclass, "$!pos"
    lt $I11, 0, rx1437_fail3189
    nqp_rxmark rx1437_bstack, rxsubrule1440_pass3198, -1, 0
  rxsubrule1440_pass3198:
    rx1437_cstack = rx1437_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1437_pos, $P11, rx1437_curclass, "$!pos"
    rx1437_cur."!cursor_pass"(rx1437_pos, "postfix:sym<++>", 'backtrack'=>1)
    .return (rx1437_cur)
  rx1437_restart3188:
    repr_get_attr_obj rx1437_cstack, rx1437_cur, rx1437_curclass, "$!cstack"
  rx1437_fail3189:
    unless rx1437_bstack, rx1437_done3187
    pop $I19, rx1437_bstack
    if_null rx1437_cstack, rx1437_cstack_done3192
    unless rx1437_cstack, rx1437_cstack_done3192
    dec $I19
    set $P11, rx1437_cstack[$I19]
  rx1437_cstack_done3192:
    pop rx1437_rep, rx1437_bstack
    pop rx1437_pos, rx1437_bstack
    pop $I19, rx1437_bstack
    lt rx1437_pos, -1, rx1437_done3187
    lt rx1437_pos, 0, rx1437_fail3189
    eq $I19, 0, rx1437_fail3189
    nqp_islist $I20, rx1437_cstack
    unless $I20, rx1437_jump3190
    elements $I18, rx1437_bstack
    le $I18, 0, rx1437_cut3191
    dec $I18
    set $I18, rx1437_bstack[$I18]
  rx1437_cut3191:
    assign rx1437_cstack, $I18
  rx1437_jump3190:
    jump $I19
  rx1437_done3187:
    rx1437_cur."!cursor_fail"()
    .return (rx1437_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postfix:sym<-->" :subid("cuid_180_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1352
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1441_start
    .local string rx1441_tgt
    .local int rx1441_pos
    .local int rx1441_off
    .local int rx1441_eos
    .local int rx1441_rep
    .local pmc rx1441_cur
    .local pmc rx1441_curclass
    .local pmc rx1441_bstack
    .local pmc rx1441_cstack
    rx1441_start = self."!cursor_start_all"()
    set rx1441_cur, rx1441_start[0]
    set rx1441_tgt, rx1441_start[1]
    set rx1441_pos, rx1441_start[2]
    set rx1441_curclass, rx1441_start[3]
    set rx1441_bstack, rx1441_start[4]
    set $I19, rx1441_start[5]
    store_lex unicode:"$\x{a2}", rx1441_cur
    length rx1441_eos, rx1441_tgt
    eq $I19, 1, rx1441_restart3201
    gt rx1441_pos, rx1441_eos, rx1441_fail3202
    repr_get_attr_int $I11, self, rx1441_curclass, "$!from"
    ne $I11, -1, rxscan1442_done3208
    goto rxscan1442_scan3207
  rxscan1442_loop3206:
    inc rx1441_pos
    gt rx1441_pos, rx1441_eos, rx1441_fail3202
    repr_bind_attr_int rx1441_cur, rx1441_curclass, "$!from", rx1441_pos
  rxscan1442_scan3207:
    nqp_rxmark rx1441_bstack, rxscan1442_loop3206, rx1441_pos, 0
  rxscan1442_done3208:
    nqp_rxmark rx1441_bstack, rxcap1443_fail3210, rx1441_pos, 0
    add $I11, rx1441_pos, 2
    gt $I11, rx1441_eos, rx1441_fail3202
    substr $S10, rx1441_tgt, rx1441_pos, 2
    ne $S10, ucs4:"--", rx1441_fail3202
    add rx1441_pos, 2
    nqp_rxpeek $I19, rx1441_bstack, rxcap1443_fail3210
    inc $I19
    set $I11, rx1441_bstack[$I19]
    repr_bind_attr_int rx1441_cur, rx1441_curclass, "$!pos", rx1441_pos
    $P11 = rx1441_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1441_pos)
    rx1441_cstack = rx1441_cur."!cursor_capture"($P11, "sym")
    goto rxcap1443_done3209
  rxcap1443_fail3210:
    goto rx1441_fail3202
  rxcap1443_done3209:
    repr_bind_attr_int rx1441_cur, rx1441_curclass, "$!pos", rx1441_pos
    $P11 = rx1441_cur."O"("%autoincrement, :op<postdec>")
    repr_get_attr_int $I11, $P11, rx1441_curclass, "$!pos"
    lt $I11, 0, rx1441_fail3202
    nqp_rxmark rx1441_bstack, rxsubrule1444_pass3211, -1, 0
  rxsubrule1444_pass3211:
    rx1441_cstack = rx1441_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1441_pos, $P11, rx1441_curclass, "$!pos"
    rx1441_cur."!cursor_pass"(rx1441_pos, "postfix:sym<-->", 'backtrack'=>1)
    .return (rx1441_cur)
  rx1441_restart3201:
    repr_get_attr_obj rx1441_cstack, rx1441_cur, rx1441_curclass, "$!cstack"
  rx1441_fail3202:
    unless rx1441_bstack, rx1441_done3200
    pop $I19, rx1441_bstack
    if_null rx1441_cstack, rx1441_cstack_done3205
    unless rx1441_cstack, rx1441_cstack_done3205
    dec $I19
    set $P11, rx1441_cstack[$I19]
  rx1441_cstack_done3205:
    pop rx1441_rep, rx1441_bstack
    pop rx1441_pos, rx1441_bstack
    pop $I19, rx1441_bstack
    lt rx1441_pos, -1, rx1441_done3200
    lt rx1441_pos, 0, rx1441_fail3202
    eq $I19, 0, rx1441_fail3202
    nqp_islist $I20, rx1441_cstack
    unless $I20, rx1441_jump3203
    elements $I18, rx1441_bstack
    le $I18, 0, rx1441_cut3204
    dec $I18
    set $I18, rx1441_bstack[$I18]
  rx1441_cut3204:
    assign rx1441_cstack, $I18
  rx1441_jump3203:
    jump $I19
  rx1441_done3200:
    rx1441_cur."!cursor_fail"()
    .return (rx1441_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<**>" :subid("cuid_181_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1354
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1445_start
    .local string rx1445_tgt
    .local int rx1445_pos
    .local int rx1445_off
    .local int rx1445_eos
    .local int rx1445_rep
    .local pmc rx1445_cur
    .local pmc rx1445_curclass
    .local pmc rx1445_bstack
    .local pmc rx1445_cstack
    rx1445_start = self."!cursor_start_all"()
    set rx1445_cur, rx1445_start[0]
    set rx1445_tgt, rx1445_start[1]
    set rx1445_pos, rx1445_start[2]
    set rx1445_curclass, rx1445_start[3]
    set rx1445_bstack, rx1445_start[4]
    set $I19, rx1445_start[5]
    store_lex unicode:"$\x{a2}", rx1445_cur
    length rx1445_eos, rx1445_tgt
    eq $I19, 1, rx1445_restart3214
    gt rx1445_pos, rx1445_eos, rx1445_fail3215
    repr_get_attr_int $I11, self, rx1445_curclass, "$!from"
    ne $I11, -1, rxscan1446_done3221
    goto rxscan1446_scan3220
  rxscan1446_loop3219:
    inc rx1445_pos
    gt rx1445_pos, rx1445_eos, rx1445_fail3215
    repr_bind_attr_int rx1445_cur, rx1445_curclass, "$!from", rx1445_pos
  rxscan1446_scan3220:
    nqp_rxmark rx1445_bstack, rxscan1446_loop3219, rx1445_pos, 0
  rxscan1446_done3221:
    nqp_rxmark rx1445_bstack, rxcap1447_fail3223, rx1445_pos, 0
    add $I11, rx1445_pos, 2
    gt $I11, rx1445_eos, rx1445_fail3215
    substr $S10, rx1445_tgt, rx1445_pos, 2
    ne $S10, ucs4:"**", rx1445_fail3215
    add rx1445_pos, 2
    nqp_rxpeek $I19, rx1445_bstack, rxcap1447_fail3223
    inc $I19
    set $I11, rx1445_bstack[$I19]
    repr_bind_attr_int rx1445_cur, rx1445_curclass, "$!pos", rx1445_pos
    $P11 = rx1445_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1445_pos)
    rx1445_cstack = rx1445_cur."!cursor_capture"($P11, "sym")
    goto rxcap1447_done3222
  rxcap1447_fail3223:
    goto rx1445_fail3215
  rxcap1447_done3222:
    repr_bind_attr_int rx1445_cur, rx1445_curclass, "$!pos", rx1445_pos
    $P11 = rx1445_cur."O"("%exponentiation, :op<pow_n>")
    repr_get_attr_int $I11, $P11, rx1445_curclass, "$!pos"
    lt $I11, 0, rx1445_fail3215
    nqp_rxmark rx1445_bstack, rxsubrule1448_pass3224, -1, 0
  rxsubrule1448_pass3224:
    rx1445_cstack = rx1445_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1445_pos, $P11, rx1445_curclass, "$!pos"
    rx1445_cur."!cursor_pass"(rx1445_pos, "infix:sym<**>", 'backtrack'=>1)
    .return (rx1445_cur)
  rx1445_restart3214:
    repr_get_attr_obj rx1445_cstack, rx1445_cur, rx1445_curclass, "$!cstack"
  rx1445_fail3215:
    unless rx1445_bstack, rx1445_done3213
    pop $I19, rx1445_bstack
    if_null rx1445_cstack, rx1445_cstack_done3218
    unless rx1445_cstack, rx1445_cstack_done3218
    dec $I19
    set $P11, rx1445_cstack[$I19]
  rx1445_cstack_done3218:
    pop rx1445_rep, rx1445_bstack
    pop rx1445_pos, rx1445_bstack
    pop $I19, rx1445_bstack
    lt rx1445_pos, -1, rx1445_done3213
    lt rx1445_pos, 0, rx1445_fail3215
    eq $I19, 0, rx1445_fail3215
    nqp_islist $I20, rx1445_cstack
    unless $I20, rx1445_jump3216
    elements $I18, rx1445_bstack
    le $I18, 0, rx1445_cut3217
    dec $I18
    set $I18, rx1445_bstack[$I18]
  rx1445_cut3217:
    assign rx1445_cstack, $I18
  rx1445_jump3216:
    jump $I19
  rx1445_done3213:
    rx1445_cur."!cursor_fail"()
    .return (rx1445_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<+>" :subid("cuid_182_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1356
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1449_start
    .local string rx1449_tgt
    .local int rx1449_pos
    .local int rx1449_off
    .local int rx1449_eos
    .local int rx1449_rep
    .local pmc rx1449_cur
    .local pmc rx1449_curclass
    .local pmc rx1449_bstack
    .local pmc rx1449_cstack
    rx1449_start = self."!cursor_start_all"()
    set rx1449_cur, rx1449_start[0]
    set rx1449_tgt, rx1449_start[1]
    set rx1449_pos, rx1449_start[2]
    set rx1449_curclass, rx1449_start[3]
    set rx1449_bstack, rx1449_start[4]
    set $I19, rx1449_start[5]
    store_lex unicode:"$\x{a2}", rx1449_cur
    length rx1449_eos, rx1449_tgt
    eq $I19, 1, rx1449_restart3227
    gt rx1449_pos, rx1449_eos, rx1449_fail3228
    repr_get_attr_int $I11, self, rx1449_curclass, "$!from"
    ne $I11, -1, rxscan1450_done3234
    goto rxscan1450_scan3233
  rxscan1450_loop3232:
    inc rx1449_pos
    gt rx1449_pos, rx1449_eos, rx1449_fail3228
    repr_bind_attr_int rx1449_cur, rx1449_curclass, "$!from", rx1449_pos
  rxscan1450_scan3233:
    nqp_rxmark rx1449_bstack, rxscan1450_loop3232, rx1449_pos, 0
  rxscan1450_done3234:
    nqp_rxmark rx1449_bstack, rxcap1451_fail3236, rx1449_pos, 0
    add $I11, rx1449_pos, 1
    gt $I11, rx1449_eos, rx1449_fail3228
    substr $S10, rx1449_tgt, rx1449_pos, 1
    ne $S10, ucs4:"+", rx1449_fail3228
    add rx1449_pos, 1
    nqp_rxpeek $I19, rx1449_bstack, rxcap1451_fail3236
    inc $I19
    set $I11, rx1449_bstack[$I19]
    repr_bind_attr_int rx1449_cur, rx1449_curclass, "$!pos", rx1449_pos
    $P11 = rx1449_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1449_pos)
    rx1449_cstack = rx1449_cur."!cursor_capture"($P11, "sym")
    goto rxcap1451_done3235
  rxcap1451_fail3236:
    goto rx1449_fail3228
  rxcap1451_done3235:
    repr_bind_attr_int rx1449_cur, rx1449_curclass, "$!pos", rx1449_pos
    $P11 = rx1449_cur."O"("%symbolic_unary, :op<numify>")
    repr_get_attr_int $I11, $P11, rx1449_curclass, "$!pos"
    lt $I11, 0, rx1449_fail3228
    nqp_rxmark rx1449_bstack, rxsubrule1452_pass3237, -1, 0
  rxsubrule1452_pass3237:
    rx1449_cstack = rx1449_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1449_pos, $P11, rx1449_curclass, "$!pos"
    rx1449_cur."!cursor_pass"(rx1449_pos, "prefix:sym<+>", 'backtrack'=>1)
    .return (rx1449_cur)
  rx1449_restart3227:
    repr_get_attr_obj rx1449_cstack, rx1449_cur, rx1449_curclass, "$!cstack"
  rx1449_fail3228:
    unless rx1449_bstack, rx1449_done3226
    pop $I19, rx1449_bstack
    if_null rx1449_cstack, rx1449_cstack_done3231
    unless rx1449_cstack, rx1449_cstack_done3231
    dec $I19
    set $P11, rx1449_cstack[$I19]
  rx1449_cstack_done3231:
    pop rx1449_rep, rx1449_bstack
    pop rx1449_pos, rx1449_bstack
    pop $I19, rx1449_bstack
    lt rx1449_pos, -1, rx1449_done3226
    lt rx1449_pos, 0, rx1449_fail3228
    eq $I19, 0, rx1449_fail3228
    nqp_islist $I20, rx1449_cstack
    unless $I20, rx1449_jump3229
    elements $I18, rx1449_bstack
    le $I18, 0, rx1449_cut3230
    dec $I18
    set $I18, rx1449_bstack[$I18]
  rx1449_cut3230:
    assign rx1449_cstack, $I18
  rx1449_jump3229:
    jump $I19
  rx1449_done3226:
    rx1449_cur."!cursor_fail"()
    .return (rx1449_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<~>" :subid("cuid_183_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1357
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1453_start
    .local string rx1453_tgt
    .local int rx1453_pos
    .local int rx1453_off
    .local int rx1453_eos
    .local int rx1453_rep
    .local pmc rx1453_cur
    .local pmc rx1453_curclass
    .local pmc rx1453_bstack
    .local pmc rx1453_cstack
    rx1453_start = self."!cursor_start_all"()
    set rx1453_cur, rx1453_start[0]
    set rx1453_tgt, rx1453_start[1]
    set rx1453_pos, rx1453_start[2]
    set rx1453_curclass, rx1453_start[3]
    set rx1453_bstack, rx1453_start[4]
    set $I19, rx1453_start[5]
    store_lex unicode:"$\x{a2}", rx1453_cur
    length rx1453_eos, rx1453_tgt
    eq $I19, 1, rx1453_restart3240
    gt rx1453_pos, rx1453_eos, rx1453_fail3241
    repr_get_attr_int $I11, self, rx1453_curclass, "$!from"
    ne $I11, -1, rxscan1454_done3247
    goto rxscan1454_scan3246
  rxscan1454_loop3245:
    inc rx1453_pos
    gt rx1453_pos, rx1453_eos, rx1453_fail3241
    repr_bind_attr_int rx1453_cur, rx1453_curclass, "$!from", rx1453_pos
  rxscan1454_scan3246:
    nqp_rxmark rx1453_bstack, rxscan1454_loop3245, rx1453_pos, 0
  rxscan1454_done3247:
    nqp_rxmark rx1453_bstack, rxcap1455_fail3249, rx1453_pos, 0
    add $I11, rx1453_pos, 1
    gt $I11, rx1453_eos, rx1453_fail3241
    substr $S10, rx1453_tgt, rx1453_pos, 1
    ne $S10, ucs4:"~", rx1453_fail3241
    add rx1453_pos, 1
    nqp_rxpeek $I19, rx1453_bstack, rxcap1455_fail3249
    inc $I19
    set $I11, rx1453_bstack[$I19]
    repr_bind_attr_int rx1453_cur, rx1453_curclass, "$!pos", rx1453_pos
    $P11 = rx1453_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1453_pos)
    rx1453_cstack = rx1453_cur."!cursor_capture"($P11, "sym")
    goto rxcap1455_done3248
  rxcap1455_fail3249:
    goto rx1453_fail3241
  rxcap1455_done3248:
    repr_bind_attr_int rx1453_cur, rx1453_curclass, "$!pos", rx1453_pos
    $P11 = rx1453_cur."O"("%symbolic_unary, :op<stringify>")
    repr_get_attr_int $I11, $P11, rx1453_curclass, "$!pos"
    lt $I11, 0, rx1453_fail3241
    nqp_rxmark rx1453_bstack, rxsubrule1456_pass3250, -1, 0
  rxsubrule1456_pass3250:
    rx1453_cstack = rx1453_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1453_pos, $P11, rx1453_curclass, "$!pos"
    rx1453_cur."!cursor_pass"(rx1453_pos, "prefix:sym<~>", 'backtrack'=>1)
    .return (rx1453_cur)
  rx1453_restart3240:
    repr_get_attr_obj rx1453_cstack, rx1453_cur, rx1453_curclass, "$!cstack"
  rx1453_fail3241:
    unless rx1453_bstack, rx1453_done3239
    pop $I19, rx1453_bstack
    if_null rx1453_cstack, rx1453_cstack_done3244
    unless rx1453_cstack, rx1453_cstack_done3244
    dec $I19
    set $P11, rx1453_cstack[$I19]
  rx1453_cstack_done3244:
    pop rx1453_rep, rx1453_bstack
    pop rx1453_pos, rx1453_bstack
    pop $I19, rx1453_bstack
    lt rx1453_pos, -1, rx1453_done3239
    lt rx1453_pos, 0, rx1453_fail3241
    eq $I19, 0, rx1453_fail3241
    nqp_islist $I20, rx1453_cstack
    unless $I20, rx1453_jump3242
    elements $I18, rx1453_bstack
    le $I18, 0, rx1453_cut3243
    dec $I18
    set $I18, rx1453_bstack[$I18]
  rx1453_cut3243:
    assign rx1453_cstack, $I18
  rx1453_jump3242:
    jump $I19
  rx1453_done3239:
    rx1453_cur."!cursor_fail"()
    .return (rx1453_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<->" :subid("cuid_184_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1358
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1457_start
    .local string rx1457_tgt
    .local int rx1457_pos
    .local int rx1457_off
    .local int rx1457_eos
    .local int rx1457_rep
    .local pmc rx1457_cur
    .local pmc rx1457_curclass
    .local pmc rx1457_bstack
    .local pmc rx1457_cstack
    rx1457_start = self."!cursor_start_all"()
    set rx1457_cur, rx1457_start[0]
    set rx1457_tgt, rx1457_start[1]
    set rx1457_pos, rx1457_start[2]
    set rx1457_curclass, rx1457_start[3]
    set rx1457_bstack, rx1457_start[4]
    set $I19, rx1457_start[5]
    store_lex unicode:"$\x{a2}", rx1457_cur
    length rx1457_eos, rx1457_tgt
    eq $I19, 1, rx1457_restart3253
    gt rx1457_pos, rx1457_eos, rx1457_fail3254
    repr_get_attr_int $I11, self, rx1457_curclass, "$!from"
    ne $I11, -1, rxscan1458_done3260
    goto rxscan1458_scan3259
  rxscan1458_loop3258:
    inc rx1457_pos
    gt rx1457_pos, rx1457_eos, rx1457_fail3254
    repr_bind_attr_int rx1457_cur, rx1457_curclass, "$!from", rx1457_pos
  rxscan1458_scan3259:
    nqp_rxmark rx1457_bstack, rxscan1458_loop3258, rx1457_pos, 0
  rxscan1458_done3260:
    nqp_rxmark rx1457_bstack, rxcap1459_fail3262, rx1457_pos, 0
    add $I11, rx1457_pos, 1
    gt $I11, rx1457_eos, rx1457_fail3254
    substr $S10, rx1457_tgt, rx1457_pos, 1
    ne $S10, ucs4:"-", rx1457_fail3254
    add rx1457_pos, 1
    nqp_rxpeek $I19, rx1457_bstack, rxcap1459_fail3262
    inc $I19
    set $I11, rx1457_bstack[$I19]
    repr_bind_attr_int rx1457_cur, rx1457_curclass, "$!pos", rx1457_pos
    $P11 = rx1457_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1457_pos)
    rx1457_cstack = rx1457_cur."!cursor_capture"($P11, "sym")
    goto rxcap1459_done3261
  rxcap1459_fail3262:
    goto rx1457_fail3254
  rxcap1459_done3261:
    ge rx1457_pos, rx1457_eos, rx1457_fail3254
    substr $S11, rx1457_tgt, rx1457_pos, 1
    index $I11, ucs4:">", $S11
    ge $I11, 0, rx1457_fail3254
    repr_bind_attr_int rx1457_cur, rx1457_curclass, "$!pos", rx1457_pos
    $P11 = rx1457_cur."number"()
    repr_get_attr_int $I11, $P11, rx1457_curclass, "$!pos"
    ge $I11, 0, rx1457_fail3254
    repr_bind_attr_int rx1457_cur, rx1457_curclass, "$!pos", rx1457_pos
    $P11 = rx1457_cur."O"("%symbolic_unary, :op<neg_n>")
    repr_get_attr_int $I11, $P11, rx1457_curclass, "$!pos"
    lt $I11, 0, rx1457_fail3254
    nqp_rxmark rx1457_bstack, rxsubrule1460_pass3263, -1, 0
  rxsubrule1460_pass3263:
    rx1457_cstack = rx1457_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1457_pos, $P11, rx1457_curclass, "$!pos"
    rx1457_cur."!cursor_pass"(rx1457_pos, "prefix:sym<->", 'backtrack'=>1)
    .return (rx1457_cur)
  rx1457_restart3253:
    repr_get_attr_obj rx1457_cstack, rx1457_cur, rx1457_curclass, "$!cstack"
  rx1457_fail3254:
    unless rx1457_bstack, rx1457_done3252
    pop $I19, rx1457_bstack
    if_null rx1457_cstack, rx1457_cstack_done3257
    unless rx1457_cstack, rx1457_cstack_done3257
    dec $I19
    set $P11, rx1457_cstack[$I19]
  rx1457_cstack_done3257:
    pop rx1457_rep, rx1457_bstack
    pop rx1457_pos, rx1457_bstack
    pop $I19, rx1457_bstack
    lt rx1457_pos, -1, rx1457_done3252
    lt rx1457_pos, 0, rx1457_fail3254
    eq $I19, 0, rx1457_fail3254
    nqp_islist $I20, rx1457_cstack
    unless $I20, rx1457_jump3255
    elements $I18, rx1457_bstack
    le $I18, 0, rx1457_cut3256
    dec $I18
    set $I18, rx1457_bstack[$I18]
  rx1457_cut3256:
    assign rx1457_cstack, $I18
  rx1457_jump3255:
    jump $I19
  rx1457_done3252:
    rx1457_cur."!cursor_fail"()
    .return (rx1457_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<?>" :subid("cuid_185_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1359
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1461_start
    .local string rx1461_tgt
    .local int rx1461_pos
    .local int rx1461_off
    .local int rx1461_eos
    .local int rx1461_rep
    .local pmc rx1461_cur
    .local pmc rx1461_curclass
    .local pmc rx1461_bstack
    .local pmc rx1461_cstack
    rx1461_start = self."!cursor_start_all"()
    set rx1461_cur, rx1461_start[0]
    set rx1461_tgt, rx1461_start[1]
    set rx1461_pos, rx1461_start[2]
    set rx1461_curclass, rx1461_start[3]
    set rx1461_bstack, rx1461_start[4]
    set $I19, rx1461_start[5]
    store_lex unicode:"$\x{a2}", rx1461_cur
    length rx1461_eos, rx1461_tgt
    eq $I19, 1, rx1461_restart3266
    gt rx1461_pos, rx1461_eos, rx1461_fail3267
    repr_get_attr_int $I11, self, rx1461_curclass, "$!from"
    ne $I11, -1, rxscan1462_done3273
    goto rxscan1462_scan3272
  rxscan1462_loop3271:
    inc rx1461_pos
    gt rx1461_pos, rx1461_eos, rx1461_fail3267
    repr_bind_attr_int rx1461_cur, rx1461_curclass, "$!from", rx1461_pos
  rxscan1462_scan3272:
    nqp_rxmark rx1461_bstack, rxscan1462_loop3271, rx1461_pos, 0
  rxscan1462_done3273:
    nqp_rxmark rx1461_bstack, rxcap1463_fail3275, rx1461_pos, 0
    add $I11, rx1461_pos, 1
    gt $I11, rx1461_eos, rx1461_fail3267
    substr $S10, rx1461_tgt, rx1461_pos, 1
    ne $S10, ucs4:"?", rx1461_fail3267
    add rx1461_pos, 1
    nqp_rxpeek $I19, rx1461_bstack, rxcap1463_fail3275
    inc $I19
    set $I11, rx1461_bstack[$I19]
    repr_bind_attr_int rx1461_cur, rx1461_curclass, "$!pos", rx1461_pos
    $P11 = rx1461_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1461_pos)
    rx1461_cstack = rx1461_cur."!cursor_capture"($P11, "sym")
    goto rxcap1463_done3274
  rxcap1463_fail3275:
    goto rx1461_fail3267
  rxcap1463_done3274:
    repr_bind_attr_int rx1461_cur, rx1461_curclass, "$!pos", rx1461_pos
    $P11 = rx1461_cur."O"("%symbolic_unary, :op<istrue>")
    repr_get_attr_int $I11, $P11, rx1461_curclass, "$!pos"
    lt $I11, 0, rx1461_fail3267
    nqp_rxmark rx1461_bstack, rxsubrule1464_pass3276, -1, 0
  rxsubrule1464_pass3276:
    rx1461_cstack = rx1461_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1461_pos, $P11, rx1461_curclass, "$!pos"
    rx1461_cur."!cursor_pass"(rx1461_pos, "prefix:sym<?>", 'backtrack'=>1)
    .return (rx1461_cur)
  rx1461_restart3266:
    repr_get_attr_obj rx1461_cstack, rx1461_cur, rx1461_curclass, "$!cstack"
  rx1461_fail3267:
    unless rx1461_bstack, rx1461_done3265
    pop $I19, rx1461_bstack
    if_null rx1461_cstack, rx1461_cstack_done3270
    unless rx1461_cstack, rx1461_cstack_done3270
    dec $I19
    set $P11, rx1461_cstack[$I19]
  rx1461_cstack_done3270:
    pop rx1461_rep, rx1461_bstack
    pop rx1461_pos, rx1461_bstack
    pop $I19, rx1461_bstack
    lt rx1461_pos, -1, rx1461_done3265
    lt rx1461_pos, 0, rx1461_fail3267
    eq $I19, 0, rx1461_fail3267
    nqp_islist $I20, rx1461_cstack
    unless $I20, rx1461_jump3268
    elements $I18, rx1461_bstack
    le $I18, 0, rx1461_cut3269
    dec $I18
    set $I18, rx1461_bstack[$I18]
  rx1461_cut3269:
    assign rx1461_cstack, $I18
  rx1461_jump3268:
    jump $I19
  rx1461_done3265:
    rx1461_cur."!cursor_fail"()
    .return (rx1461_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<!>" :subid("cuid_186_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1360
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1465_start
    .local string rx1465_tgt
    .local int rx1465_pos
    .local int rx1465_off
    .local int rx1465_eos
    .local int rx1465_rep
    .local pmc rx1465_cur
    .local pmc rx1465_curclass
    .local pmc rx1465_bstack
    .local pmc rx1465_cstack
    rx1465_start = self."!cursor_start_all"()
    set rx1465_cur, rx1465_start[0]
    set rx1465_tgt, rx1465_start[1]
    set rx1465_pos, rx1465_start[2]
    set rx1465_curclass, rx1465_start[3]
    set rx1465_bstack, rx1465_start[4]
    set $I19, rx1465_start[5]
    store_lex unicode:"$\x{a2}", rx1465_cur
    length rx1465_eos, rx1465_tgt
    eq $I19, 1, rx1465_restart3279
    gt rx1465_pos, rx1465_eos, rx1465_fail3280
    repr_get_attr_int $I11, self, rx1465_curclass, "$!from"
    ne $I11, -1, rxscan1466_done3286
    goto rxscan1466_scan3285
  rxscan1466_loop3284:
    inc rx1465_pos
    gt rx1465_pos, rx1465_eos, rx1465_fail3280
    repr_bind_attr_int rx1465_cur, rx1465_curclass, "$!from", rx1465_pos
  rxscan1466_scan3285:
    nqp_rxmark rx1465_bstack, rxscan1466_loop3284, rx1465_pos, 0
  rxscan1466_done3286:
    nqp_rxmark rx1465_bstack, rxcap1467_fail3288, rx1465_pos, 0
    add $I11, rx1465_pos, 1
    gt $I11, rx1465_eos, rx1465_fail3280
    substr $S10, rx1465_tgt, rx1465_pos, 1
    ne $S10, ucs4:"!", rx1465_fail3280
    add rx1465_pos, 1
    nqp_rxpeek $I19, rx1465_bstack, rxcap1467_fail3288
    inc $I19
    set $I11, rx1465_bstack[$I19]
    repr_bind_attr_int rx1465_cur, rx1465_curclass, "$!pos", rx1465_pos
    $P11 = rx1465_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1465_pos)
    rx1465_cstack = rx1465_cur."!cursor_capture"($P11, "sym")
    goto rxcap1467_done3287
  rxcap1467_fail3288:
    goto rx1465_fail3280
  rxcap1467_done3287:
    repr_bind_attr_int rx1465_cur, rx1465_curclass, "$!pos", rx1465_pos
    $P11 = rx1465_cur."O"("%symbolic_unary, :op<falsey>")
    repr_get_attr_int $I11, $P11, rx1465_curclass, "$!pos"
    lt $I11, 0, rx1465_fail3280
    nqp_rxmark rx1465_bstack, rxsubrule1468_pass3289, -1, 0
  rxsubrule1468_pass3289:
    rx1465_cstack = rx1465_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1465_pos, $P11, rx1465_curclass, "$!pos"
    rx1465_cur."!cursor_pass"(rx1465_pos, "prefix:sym<!>", 'backtrack'=>1)
    .return (rx1465_cur)
  rx1465_restart3279:
    repr_get_attr_obj rx1465_cstack, rx1465_cur, rx1465_curclass, "$!cstack"
  rx1465_fail3280:
    unless rx1465_bstack, rx1465_done3278
    pop $I19, rx1465_bstack
    if_null rx1465_cstack, rx1465_cstack_done3283
    unless rx1465_cstack, rx1465_cstack_done3283
    dec $I19
    set $P11, rx1465_cstack[$I19]
  rx1465_cstack_done3283:
    pop rx1465_rep, rx1465_bstack
    pop rx1465_pos, rx1465_bstack
    pop $I19, rx1465_bstack
    lt rx1465_pos, -1, rx1465_done3278
    lt rx1465_pos, 0, rx1465_fail3280
    eq $I19, 0, rx1465_fail3280
    nqp_islist $I20, rx1465_cstack
    unless $I20, rx1465_jump3281
    elements $I18, rx1465_bstack
    le $I18, 0, rx1465_cut3282
    dec $I18
    set $I18, rx1465_bstack[$I18]
  rx1465_cut3282:
    assign rx1465_cstack, $I18
  rx1465_jump3281:
    jump $I19
  rx1465_done3278:
    rx1465_cur."!cursor_fail"()
    .return (rx1465_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<|>" :subid("cuid_187_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1361
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1469_start
    .local string rx1469_tgt
    .local int rx1469_pos
    .local int rx1469_off
    .local int rx1469_eos
    .local int rx1469_rep
    .local pmc rx1469_cur
    .local pmc rx1469_curclass
    .local pmc rx1469_bstack
    .local pmc rx1469_cstack
    rx1469_start = self."!cursor_start_all"()
    set rx1469_cur, rx1469_start[0]
    set rx1469_tgt, rx1469_start[1]
    set rx1469_pos, rx1469_start[2]
    set rx1469_curclass, rx1469_start[3]
    set rx1469_bstack, rx1469_start[4]
    set $I19, rx1469_start[5]
    store_lex unicode:"$\x{a2}", rx1469_cur
    length rx1469_eos, rx1469_tgt
    eq $I19, 1, rx1469_restart3292
    gt rx1469_pos, rx1469_eos, rx1469_fail3293
    repr_get_attr_int $I11, self, rx1469_curclass, "$!from"
    ne $I11, -1, rxscan1470_done3299
    goto rxscan1470_scan3298
  rxscan1470_loop3297:
    inc rx1469_pos
    gt rx1469_pos, rx1469_eos, rx1469_fail3293
    repr_bind_attr_int rx1469_cur, rx1469_curclass, "$!from", rx1469_pos
  rxscan1470_scan3298:
    nqp_rxmark rx1469_bstack, rxscan1470_loop3297, rx1469_pos, 0
  rxscan1470_done3299:
    nqp_rxmark rx1469_bstack, rxcap1471_fail3301, rx1469_pos, 0
    add $I11, rx1469_pos, 1
    gt $I11, rx1469_eos, rx1469_fail3293
    substr $S10, rx1469_tgt, rx1469_pos, 1
    ne $S10, ucs4:"|", rx1469_fail3293
    add rx1469_pos, 1
    nqp_rxpeek $I19, rx1469_bstack, rxcap1471_fail3301
    inc $I19
    set $I11, rx1469_bstack[$I19]
    repr_bind_attr_int rx1469_cur, rx1469_curclass, "$!pos", rx1469_pos
    $P11 = rx1469_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1469_pos)
    rx1469_cstack = rx1469_cur."!cursor_capture"($P11, "sym")
    goto rxcap1471_done3300
  rxcap1471_fail3301:
    goto rx1469_fail3293
  rxcap1471_done3300:
    repr_bind_attr_int rx1469_cur, rx1469_curclass, "$!pos", rx1469_pos
    $P11 = rx1469_cur."O"("%symbolic_unary")
    repr_get_attr_int $I11, $P11, rx1469_curclass, "$!pos"
    lt $I11, 0, rx1469_fail3293
    nqp_rxmark rx1469_bstack, rxsubrule1472_pass3302, -1, 0
  rxsubrule1472_pass3302:
    rx1469_cstack = rx1469_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1469_pos, $P11, rx1469_curclass, "$!pos"
    rx1469_cur."!cursor_pass"(rx1469_pos, "prefix:sym<|>", 'backtrack'=>1)
    .return (rx1469_cur)
  rx1469_restart3292:
    repr_get_attr_obj rx1469_cstack, rx1469_cur, rx1469_curclass, "$!cstack"
  rx1469_fail3293:
    unless rx1469_bstack, rx1469_done3291
    pop $I19, rx1469_bstack
    if_null rx1469_cstack, rx1469_cstack_done3296
    unless rx1469_cstack, rx1469_cstack_done3296
    dec $I19
    set $P11, rx1469_cstack[$I19]
  rx1469_cstack_done3296:
    pop rx1469_rep, rx1469_bstack
    pop rx1469_pos, rx1469_bstack
    pop $I19, rx1469_bstack
    lt rx1469_pos, -1, rx1469_done3291
    lt rx1469_pos, 0, rx1469_fail3293
    eq $I19, 0, rx1469_fail3293
    nqp_islist $I20, rx1469_cstack
    unless $I20, rx1469_jump3294
    elements $I18, rx1469_bstack
    le $I18, 0, rx1469_cut3295
    dec $I18
    set $I18, rx1469_bstack[$I18]
  rx1469_cut3295:
    assign rx1469_cstack, $I18
  rx1469_jump3294:
    jump $I19
  rx1469_done3291:
    rx1469_cur."!cursor_fail"()
    .return (rx1469_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<*>" :subid("cuid_188_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1363
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1473_start
    .local string rx1473_tgt
    .local int rx1473_pos
    .local int rx1473_off
    .local int rx1473_eos
    .local int rx1473_rep
    .local pmc rx1473_cur
    .local pmc rx1473_curclass
    .local pmc rx1473_bstack
    .local pmc rx1473_cstack
    rx1473_start = self."!cursor_start_all"()
    set rx1473_cur, rx1473_start[0]
    set rx1473_tgt, rx1473_start[1]
    set rx1473_pos, rx1473_start[2]
    set rx1473_curclass, rx1473_start[3]
    set rx1473_bstack, rx1473_start[4]
    set $I19, rx1473_start[5]
    store_lex unicode:"$\x{a2}", rx1473_cur
    length rx1473_eos, rx1473_tgt
    eq $I19, 1, rx1473_restart3305
    gt rx1473_pos, rx1473_eos, rx1473_fail3306
    repr_get_attr_int $I11, self, rx1473_curclass, "$!from"
    ne $I11, -1, rxscan1474_done3312
    goto rxscan1474_scan3311
  rxscan1474_loop3310:
    inc rx1473_pos
    gt rx1473_pos, rx1473_eos, rx1473_fail3306
    repr_bind_attr_int rx1473_cur, rx1473_curclass, "$!from", rx1473_pos
  rxscan1474_scan3311:
    nqp_rxmark rx1473_bstack, rxscan1474_loop3310, rx1473_pos, 0
  rxscan1474_done3312:
    nqp_rxmark rx1473_bstack, rxcap1475_fail3314, rx1473_pos, 0
    add $I11, rx1473_pos, 1
    gt $I11, rx1473_eos, rx1473_fail3306
    substr $S10, rx1473_tgt, rx1473_pos, 1
    ne $S10, ucs4:"*", rx1473_fail3306
    add rx1473_pos, 1
    nqp_rxpeek $I19, rx1473_bstack, rxcap1475_fail3314
    inc $I19
    set $I11, rx1473_bstack[$I19]
    repr_bind_attr_int rx1473_cur, rx1473_curclass, "$!pos", rx1473_pos
    $P11 = rx1473_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1473_pos)
    rx1473_cstack = rx1473_cur."!cursor_capture"($P11, "sym")
    goto rxcap1475_done3313
  rxcap1475_fail3314:
    goto rx1473_fail3306
  rxcap1475_done3313:
    repr_bind_attr_int rx1473_cur, rx1473_curclass, "$!pos", rx1473_pos
    $P11 = rx1473_cur."O"("%multiplicative, :op<mul_n>")
    repr_get_attr_int $I11, $P11, rx1473_curclass, "$!pos"
    lt $I11, 0, rx1473_fail3306
    nqp_rxmark rx1473_bstack, rxsubrule1476_pass3315, -1, 0
  rxsubrule1476_pass3315:
    rx1473_cstack = rx1473_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1473_pos, $P11, rx1473_curclass, "$!pos"
    rx1473_cur."!cursor_pass"(rx1473_pos, "infix:sym<*>", 'backtrack'=>1)
    .return (rx1473_cur)
  rx1473_restart3305:
    repr_get_attr_obj rx1473_cstack, rx1473_cur, rx1473_curclass, "$!cstack"
  rx1473_fail3306:
    unless rx1473_bstack, rx1473_done3304
    pop $I19, rx1473_bstack
    if_null rx1473_cstack, rx1473_cstack_done3309
    unless rx1473_cstack, rx1473_cstack_done3309
    dec $I19
    set $P11, rx1473_cstack[$I19]
  rx1473_cstack_done3309:
    pop rx1473_rep, rx1473_bstack
    pop rx1473_pos, rx1473_bstack
    pop $I19, rx1473_bstack
    lt rx1473_pos, -1, rx1473_done3304
    lt rx1473_pos, 0, rx1473_fail3306
    eq $I19, 0, rx1473_fail3306
    nqp_islist $I20, rx1473_cstack
    unless $I20, rx1473_jump3307
    elements $I18, rx1473_bstack
    le $I18, 0, rx1473_cut3308
    dec $I18
    set $I18, rx1473_bstack[$I18]
  rx1473_cut3308:
    assign rx1473_cstack, $I18
  rx1473_jump3307:
    jump $I19
  rx1473_done3304:
    rx1473_cur."!cursor_fail"()
    .return (rx1473_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym</>" :subid("cuid_189_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1364
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1477_start
    .local string rx1477_tgt
    .local int rx1477_pos
    .local int rx1477_off
    .local int rx1477_eos
    .local int rx1477_rep
    .local pmc rx1477_cur
    .local pmc rx1477_curclass
    .local pmc rx1477_bstack
    .local pmc rx1477_cstack
    rx1477_start = self."!cursor_start_all"()
    set rx1477_cur, rx1477_start[0]
    set rx1477_tgt, rx1477_start[1]
    set rx1477_pos, rx1477_start[2]
    set rx1477_curclass, rx1477_start[3]
    set rx1477_bstack, rx1477_start[4]
    set $I19, rx1477_start[5]
    store_lex unicode:"$\x{a2}", rx1477_cur
    length rx1477_eos, rx1477_tgt
    eq $I19, 1, rx1477_restart3318
    gt rx1477_pos, rx1477_eos, rx1477_fail3319
    repr_get_attr_int $I11, self, rx1477_curclass, "$!from"
    ne $I11, -1, rxscan1478_done3325
    goto rxscan1478_scan3324
  rxscan1478_loop3323:
    inc rx1477_pos
    gt rx1477_pos, rx1477_eos, rx1477_fail3319
    repr_bind_attr_int rx1477_cur, rx1477_curclass, "$!from", rx1477_pos
  rxscan1478_scan3324:
    nqp_rxmark rx1477_bstack, rxscan1478_loop3323, rx1477_pos, 0
  rxscan1478_done3325:
    nqp_rxmark rx1477_bstack, rxcap1479_fail3327, rx1477_pos, 0
    add $I11, rx1477_pos, 1
    gt $I11, rx1477_eos, rx1477_fail3319
    substr $S10, rx1477_tgt, rx1477_pos, 1
    ne $S10, ucs4:"/", rx1477_fail3319
    add rx1477_pos, 1
    nqp_rxpeek $I19, rx1477_bstack, rxcap1479_fail3327
    inc $I19
    set $I11, rx1477_bstack[$I19]
    repr_bind_attr_int rx1477_cur, rx1477_curclass, "$!pos", rx1477_pos
    $P11 = rx1477_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1477_pos)
    rx1477_cstack = rx1477_cur."!cursor_capture"($P11, "sym")
    goto rxcap1479_done3326
  rxcap1479_fail3327:
    goto rx1477_fail3319
  rxcap1479_done3326:
    repr_bind_attr_int rx1477_cur, rx1477_curclass, "$!pos", rx1477_pos
    $P11 = rx1477_cur."O"("%multiplicative, :op<div_n>")
    repr_get_attr_int $I11, $P11, rx1477_curclass, "$!pos"
    lt $I11, 0, rx1477_fail3319
    nqp_rxmark rx1477_bstack, rxsubrule1480_pass3328, -1, 0
  rxsubrule1480_pass3328:
    rx1477_cstack = rx1477_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1477_pos, $P11, rx1477_curclass, "$!pos"
    rx1477_cur."!cursor_pass"(rx1477_pos, "infix:sym</>", 'backtrack'=>1)
    .return (rx1477_cur)
  rx1477_restart3318:
    repr_get_attr_obj rx1477_cstack, rx1477_cur, rx1477_curclass, "$!cstack"
  rx1477_fail3319:
    unless rx1477_bstack, rx1477_done3317
    pop $I19, rx1477_bstack
    if_null rx1477_cstack, rx1477_cstack_done3322
    unless rx1477_cstack, rx1477_cstack_done3322
    dec $I19
    set $P11, rx1477_cstack[$I19]
  rx1477_cstack_done3322:
    pop rx1477_rep, rx1477_bstack
    pop rx1477_pos, rx1477_bstack
    pop $I19, rx1477_bstack
    lt rx1477_pos, -1, rx1477_done3317
    lt rx1477_pos, 0, rx1477_fail3319
    eq $I19, 0, rx1477_fail3319
    nqp_islist $I20, rx1477_cstack
    unless $I20, rx1477_jump3320
    elements $I18, rx1477_bstack
    le $I18, 0, rx1477_cut3321
    dec $I18
    set $I18, rx1477_bstack[$I18]
  rx1477_cut3321:
    assign rx1477_cstack, $I18
  rx1477_jump3320:
    jump $I19
  rx1477_done3317:
    rx1477_cur."!cursor_fail"()
    .return (rx1477_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<%>" :subid("cuid_190_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1365
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1481_start
    .local string rx1481_tgt
    .local int rx1481_pos
    .local int rx1481_off
    .local int rx1481_eos
    .local int rx1481_rep
    .local pmc rx1481_cur
    .local pmc rx1481_curclass
    .local pmc rx1481_bstack
    .local pmc rx1481_cstack
    rx1481_start = self."!cursor_start_all"()
    set rx1481_cur, rx1481_start[0]
    set rx1481_tgt, rx1481_start[1]
    set rx1481_pos, rx1481_start[2]
    set rx1481_curclass, rx1481_start[3]
    set rx1481_bstack, rx1481_start[4]
    set $I19, rx1481_start[5]
    store_lex unicode:"$\x{a2}", rx1481_cur
    length rx1481_eos, rx1481_tgt
    eq $I19, 1, rx1481_restart3331
    gt rx1481_pos, rx1481_eos, rx1481_fail3332
    repr_get_attr_int $I11, self, rx1481_curclass, "$!from"
    ne $I11, -1, rxscan1482_done3338
    goto rxscan1482_scan3337
  rxscan1482_loop3336:
    inc rx1481_pos
    gt rx1481_pos, rx1481_eos, rx1481_fail3332
    repr_bind_attr_int rx1481_cur, rx1481_curclass, "$!from", rx1481_pos
  rxscan1482_scan3337:
    nqp_rxmark rx1481_bstack, rxscan1482_loop3336, rx1481_pos, 0
  rxscan1482_done3338:
    nqp_rxmark rx1481_bstack, rxcap1483_fail3340, rx1481_pos, 0
    add $I11, rx1481_pos, 1
    gt $I11, rx1481_eos, rx1481_fail3332
    substr $S10, rx1481_tgt, rx1481_pos, 1
    ne $S10, ucs4:"%", rx1481_fail3332
    add rx1481_pos, 1
    nqp_rxpeek $I19, rx1481_bstack, rxcap1483_fail3340
    inc $I19
    set $I11, rx1481_bstack[$I19]
    repr_bind_attr_int rx1481_cur, rx1481_curclass, "$!pos", rx1481_pos
    $P11 = rx1481_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1481_pos)
    rx1481_cstack = rx1481_cur."!cursor_capture"($P11, "sym")
    goto rxcap1483_done3339
  rxcap1483_fail3340:
    goto rx1481_fail3332
  rxcap1483_done3339:
    repr_bind_attr_int rx1481_cur, rx1481_curclass, "$!pos", rx1481_pos
    $P11 = rx1481_cur."O"("%multiplicative, :op<mod_n>")
    repr_get_attr_int $I11, $P11, rx1481_curclass, "$!pos"
    lt $I11, 0, rx1481_fail3332
    nqp_rxmark rx1481_bstack, rxsubrule1484_pass3341, -1, 0
  rxsubrule1484_pass3341:
    rx1481_cstack = rx1481_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1481_pos, $P11, rx1481_curclass, "$!pos"
    rx1481_cur."!cursor_pass"(rx1481_pos, "infix:sym<%>", 'backtrack'=>1)
    .return (rx1481_cur)
  rx1481_restart3331:
    repr_get_attr_obj rx1481_cstack, rx1481_cur, rx1481_curclass, "$!cstack"
  rx1481_fail3332:
    unless rx1481_bstack, rx1481_done3330
    pop $I19, rx1481_bstack
    if_null rx1481_cstack, rx1481_cstack_done3335
    unless rx1481_cstack, rx1481_cstack_done3335
    dec $I19
    set $P11, rx1481_cstack[$I19]
  rx1481_cstack_done3335:
    pop rx1481_rep, rx1481_bstack
    pop rx1481_pos, rx1481_bstack
    pop $I19, rx1481_bstack
    lt rx1481_pos, -1, rx1481_done3330
    lt rx1481_pos, 0, rx1481_fail3332
    eq $I19, 0, rx1481_fail3332
    nqp_islist $I20, rx1481_cstack
    unless $I20, rx1481_jump3333
    elements $I18, rx1481_bstack
    le $I18, 0, rx1481_cut3334
    dec $I18
    set $I18, rx1481_bstack[$I18]
  rx1481_cut3334:
    assign rx1481_cstack, $I18
  rx1481_jump3333:
    jump $I19
  rx1481_done3330:
    rx1481_cur."!cursor_fail"()
    .return (rx1481_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<+&>" :subid("cuid_191_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1366
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1485_start
    .local string rx1485_tgt
    .local int rx1485_pos
    .local int rx1485_off
    .local int rx1485_eos
    .local int rx1485_rep
    .local pmc rx1485_cur
    .local pmc rx1485_curclass
    .local pmc rx1485_bstack
    .local pmc rx1485_cstack
    rx1485_start = self."!cursor_start_all"()
    set rx1485_cur, rx1485_start[0]
    set rx1485_tgt, rx1485_start[1]
    set rx1485_pos, rx1485_start[2]
    set rx1485_curclass, rx1485_start[3]
    set rx1485_bstack, rx1485_start[4]
    set $I19, rx1485_start[5]
    store_lex unicode:"$\x{a2}", rx1485_cur
    length rx1485_eos, rx1485_tgt
    eq $I19, 1, rx1485_restart3344
    gt rx1485_pos, rx1485_eos, rx1485_fail3345
    repr_get_attr_int $I11, self, rx1485_curclass, "$!from"
    ne $I11, -1, rxscan1486_done3351
    goto rxscan1486_scan3350
  rxscan1486_loop3349:
    inc rx1485_pos
    gt rx1485_pos, rx1485_eos, rx1485_fail3345
    repr_bind_attr_int rx1485_cur, rx1485_curclass, "$!from", rx1485_pos
  rxscan1486_scan3350:
    nqp_rxmark rx1485_bstack, rxscan1486_loop3349, rx1485_pos, 0
  rxscan1486_done3351:
    nqp_rxmark rx1485_bstack, rxcap1487_fail3353, rx1485_pos, 0
    add $I11, rx1485_pos, 2
    gt $I11, rx1485_eos, rx1485_fail3345
    substr $S10, rx1485_tgt, rx1485_pos, 2
    ne $S10, ucs4:"+&", rx1485_fail3345
    add rx1485_pos, 2
    nqp_rxpeek $I19, rx1485_bstack, rxcap1487_fail3353
    inc $I19
    set $I11, rx1485_bstack[$I19]
    repr_bind_attr_int rx1485_cur, rx1485_curclass, "$!pos", rx1485_pos
    $P11 = rx1485_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1485_pos)
    rx1485_cstack = rx1485_cur."!cursor_capture"($P11, "sym")
    goto rxcap1487_done3352
  rxcap1487_fail3353:
    goto rx1485_fail3345
  rxcap1487_done3352:
    repr_bind_attr_int rx1485_cur, rx1485_curclass, "$!pos", rx1485_pos
    $P11 = rx1485_cur."O"("%multiplicative, :op<bitand_i>")
    repr_get_attr_int $I11, $P11, rx1485_curclass, "$!pos"
    lt $I11, 0, rx1485_fail3345
    nqp_rxmark rx1485_bstack, rxsubrule1488_pass3354, -1, 0
  rxsubrule1488_pass3354:
    rx1485_cstack = rx1485_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1485_pos, $P11, rx1485_curclass, "$!pos"
    rx1485_cur."!cursor_pass"(rx1485_pos, "infix:sym<+&>", 'backtrack'=>1)
    .return (rx1485_cur)
  rx1485_restart3344:
    repr_get_attr_obj rx1485_cstack, rx1485_cur, rx1485_curclass, "$!cstack"
  rx1485_fail3345:
    unless rx1485_bstack, rx1485_done3343
    pop $I19, rx1485_bstack
    if_null rx1485_cstack, rx1485_cstack_done3348
    unless rx1485_cstack, rx1485_cstack_done3348
    dec $I19
    set $P11, rx1485_cstack[$I19]
  rx1485_cstack_done3348:
    pop rx1485_rep, rx1485_bstack
    pop rx1485_pos, rx1485_bstack
    pop $I19, rx1485_bstack
    lt rx1485_pos, -1, rx1485_done3343
    lt rx1485_pos, 0, rx1485_fail3345
    eq $I19, 0, rx1485_fail3345
    nqp_islist $I20, rx1485_cstack
    unless $I20, rx1485_jump3346
    elements $I18, rx1485_bstack
    le $I18, 0, rx1485_cut3347
    dec $I18
    set $I18, rx1485_bstack[$I18]
  rx1485_cut3347:
    assign rx1485_cstack, $I18
  rx1485_jump3346:
    jump $I19
  rx1485_done3343:
    rx1485_cur."!cursor_fail"()
    .return (rx1485_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<+>" :subid("cuid_192_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1368
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1489_start
    .local string rx1489_tgt
    .local int rx1489_pos
    .local int rx1489_off
    .local int rx1489_eos
    .local int rx1489_rep
    .local pmc rx1489_cur
    .local pmc rx1489_curclass
    .local pmc rx1489_bstack
    .local pmc rx1489_cstack
    rx1489_start = self."!cursor_start_all"()
    set rx1489_cur, rx1489_start[0]
    set rx1489_tgt, rx1489_start[1]
    set rx1489_pos, rx1489_start[2]
    set rx1489_curclass, rx1489_start[3]
    set rx1489_bstack, rx1489_start[4]
    set $I19, rx1489_start[5]
    store_lex unicode:"$\x{a2}", rx1489_cur
    length rx1489_eos, rx1489_tgt
    eq $I19, 1, rx1489_restart3357
    gt rx1489_pos, rx1489_eos, rx1489_fail3358
    repr_get_attr_int $I11, self, rx1489_curclass, "$!from"
    ne $I11, -1, rxscan1490_done3364
    goto rxscan1490_scan3363
  rxscan1490_loop3362:
    inc rx1489_pos
    gt rx1489_pos, rx1489_eos, rx1489_fail3358
    repr_bind_attr_int rx1489_cur, rx1489_curclass, "$!from", rx1489_pos
  rxscan1490_scan3363:
    nqp_rxmark rx1489_bstack, rxscan1490_loop3362, rx1489_pos, 0
  rxscan1490_done3364:
    nqp_rxmark rx1489_bstack, rxcap1491_fail3366, rx1489_pos, 0
    add $I11, rx1489_pos, 1
    gt $I11, rx1489_eos, rx1489_fail3358
    substr $S10, rx1489_tgt, rx1489_pos, 1
    ne $S10, ucs4:"+", rx1489_fail3358
    add rx1489_pos, 1
    nqp_rxpeek $I19, rx1489_bstack, rxcap1491_fail3366
    inc $I19
    set $I11, rx1489_bstack[$I19]
    repr_bind_attr_int rx1489_cur, rx1489_curclass, "$!pos", rx1489_pos
    $P11 = rx1489_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1489_pos)
    rx1489_cstack = rx1489_cur."!cursor_capture"($P11, "sym")
    goto rxcap1491_done3365
  rxcap1491_fail3366:
    goto rx1489_fail3358
  rxcap1491_done3365:
    repr_bind_attr_int rx1489_cur, rx1489_curclass, "$!pos", rx1489_pos
    $P11 = rx1489_cur."O"("%additive, :op<add_n>")
    repr_get_attr_int $I11, $P11, rx1489_curclass, "$!pos"
    lt $I11, 0, rx1489_fail3358
    nqp_rxmark rx1489_bstack, rxsubrule1492_pass3367, -1, 0
  rxsubrule1492_pass3367:
    rx1489_cstack = rx1489_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1489_pos, $P11, rx1489_curclass, "$!pos"
    rx1489_cur."!cursor_pass"(rx1489_pos, "infix:sym<+>", 'backtrack'=>1)
    .return (rx1489_cur)
  rx1489_restart3357:
    repr_get_attr_obj rx1489_cstack, rx1489_cur, rx1489_curclass, "$!cstack"
  rx1489_fail3358:
    unless rx1489_bstack, rx1489_done3356
    pop $I19, rx1489_bstack
    if_null rx1489_cstack, rx1489_cstack_done3361
    unless rx1489_cstack, rx1489_cstack_done3361
    dec $I19
    set $P11, rx1489_cstack[$I19]
  rx1489_cstack_done3361:
    pop rx1489_rep, rx1489_bstack
    pop rx1489_pos, rx1489_bstack
    pop $I19, rx1489_bstack
    lt rx1489_pos, -1, rx1489_done3356
    lt rx1489_pos, 0, rx1489_fail3358
    eq $I19, 0, rx1489_fail3358
    nqp_islist $I20, rx1489_cstack
    unless $I20, rx1489_jump3359
    elements $I18, rx1489_bstack
    le $I18, 0, rx1489_cut3360
    dec $I18
    set $I18, rx1489_bstack[$I18]
  rx1489_cut3360:
    assign rx1489_cstack, $I18
  rx1489_jump3359:
    jump $I19
  rx1489_done3356:
    rx1489_cur."!cursor_fail"()
    .return (rx1489_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<->" :subid("cuid_193_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1369
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1493_start
    .local string rx1493_tgt
    .local int rx1493_pos
    .local int rx1493_off
    .local int rx1493_eos
    .local int rx1493_rep
    .local pmc rx1493_cur
    .local pmc rx1493_curclass
    .local pmc rx1493_bstack
    .local pmc rx1493_cstack
    rx1493_start = self."!cursor_start_all"()
    set rx1493_cur, rx1493_start[0]
    set rx1493_tgt, rx1493_start[1]
    set rx1493_pos, rx1493_start[2]
    set rx1493_curclass, rx1493_start[3]
    set rx1493_bstack, rx1493_start[4]
    set $I19, rx1493_start[5]
    store_lex unicode:"$\x{a2}", rx1493_cur
    length rx1493_eos, rx1493_tgt
    eq $I19, 1, rx1493_restart3370
    gt rx1493_pos, rx1493_eos, rx1493_fail3371
    repr_get_attr_int $I11, self, rx1493_curclass, "$!from"
    ne $I11, -1, rxscan1494_done3377
    goto rxscan1494_scan3376
  rxscan1494_loop3375:
    inc rx1493_pos
    gt rx1493_pos, rx1493_eos, rx1493_fail3371
    repr_bind_attr_int rx1493_cur, rx1493_curclass, "$!from", rx1493_pos
  rxscan1494_scan3376:
    nqp_rxmark rx1493_bstack, rxscan1494_loop3375, rx1493_pos, 0
  rxscan1494_done3377:
    nqp_rxmark rx1493_bstack, rxcap1495_fail3379, rx1493_pos, 0
    add $I11, rx1493_pos, 1
    gt $I11, rx1493_eos, rx1493_fail3371
    substr $S10, rx1493_tgt, rx1493_pos, 1
    ne $S10, ucs4:"-", rx1493_fail3371
    add rx1493_pos, 1
    nqp_rxpeek $I19, rx1493_bstack, rxcap1495_fail3379
    inc $I19
    set $I11, rx1493_bstack[$I19]
    repr_bind_attr_int rx1493_cur, rx1493_curclass, "$!pos", rx1493_pos
    $P11 = rx1493_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1493_pos)
    rx1493_cstack = rx1493_cur."!cursor_capture"($P11, "sym")
    goto rxcap1495_done3378
  rxcap1495_fail3379:
    goto rx1493_fail3371
  rxcap1495_done3378:
    repr_bind_attr_int rx1493_cur, rx1493_curclass, "$!pos", rx1493_pos
    $P11 = rx1493_cur."O"("%additive, :op<sub_n>")
    repr_get_attr_int $I11, $P11, rx1493_curclass, "$!pos"
    lt $I11, 0, rx1493_fail3371
    nqp_rxmark rx1493_bstack, rxsubrule1496_pass3380, -1, 0
  rxsubrule1496_pass3380:
    rx1493_cstack = rx1493_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1493_pos, $P11, rx1493_curclass, "$!pos"
    rx1493_cur."!cursor_pass"(rx1493_pos, "infix:sym<->", 'backtrack'=>1)
    .return (rx1493_cur)
  rx1493_restart3370:
    repr_get_attr_obj rx1493_cstack, rx1493_cur, rx1493_curclass, "$!cstack"
  rx1493_fail3371:
    unless rx1493_bstack, rx1493_done3369
    pop $I19, rx1493_bstack
    if_null rx1493_cstack, rx1493_cstack_done3374
    unless rx1493_cstack, rx1493_cstack_done3374
    dec $I19
    set $P11, rx1493_cstack[$I19]
  rx1493_cstack_done3374:
    pop rx1493_rep, rx1493_bstack
    pop rx1493_pos, rx1493_bstack
    pop $I19, rx1493_bstack
    lt rx1493_pos, -1, rx1493_done3369
    lt rx1493_pos, 0, rx1493_fail3371
    eq $I19, 0, rx1493_fail3371
    nqp_islist $I20, rx1493_cstack
    unless $I20, rx1493_jump3372
    elements $I18, rx1493_bstack
    le $I18, 0, rx1493_cut3373
    dec $I18
    set $I18, rx1493_bstack[$I18]
  rx1493_cut3373:
    assign rx1493_cstack, $I18
  rx1493_jump3372:
    jump $I19
  rx1493_done3369:
    rx1493_cur."!cursor_fail"()
    .return (rx1493_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<+|>" :subid("cuid_194_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1370
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1497_start
    .local string rx1497_tgt
    .local int rx1497_pos
    .local int rx1497_off
    .local int rx1497_eos
    .local int rx1497_rep
    .local pmc rx1497_cur
    .local pmc rx1497_curclass
    .local pmc rx1497_bstack
    .local pmc rx1497_cstack
    rx1497_start = self."!cursor_start_all"()
    set rx1497_cur, rx1497_start[0]
    set rx1497_tgt, rx1497_start[1]
    set rx1497_pos, rx1497_start[2]
    set rx1497_curclass, rx1497_start[3]
    set rx1497_bstack, rx1497_start[4]
    set $I19, rx1497_start[5]
    store_lex unicode:"$\x{a2}", rx1497_cur
    length rx1497_eos, rx1497_tgt
    eq $I19, 1, rx1497_restart3383
    gt rx1497_pos, rx1497_eos, rx1497_fail3384
    repr_get_attr_int $I11, self, rx1497_curclass, "$!from"
    ne $I11, -1, rxscan1498_done3390
    goto rxscan1498_scan3389
  rxscan1498_loop3388:
    inc rx1497_pos
    gt rx1497_pos, rx1497_eos, rx1497_fail3384
    repr_bind_attr_int rx1497_cur, rx1497_curclass, "$!from", rx1497_pos
  rxscan1498_scan3389:
    nqp_rxmark rx1497_bstack, rxscan1498_loop3388, rx1497_pos, 0
  rxscan1498_done3390:
    nqp_rxmark rx1497_bstack, rxcap1499_fail3392, rx1497_pos, 0
    add $I11, rx1497_pos, 2
    gt $I11, rx1497_eos, rx1497_fail3384
    substr $S10, rx1497_tgt, rx1497_pos, 2
    ne $S10, ucs4:"+|", rx1497_fail3384
    add rx1497_pos, 2
    nqp_rxpeek $I19, rx1497_bstack, rxcap1499_fail3392
    inc $I19
    set $I11, rx1497_bstack[$I19]
    repr_bind_attr_int rx1497_cur, rx1497_curclass, "$!pos", rx1497_pos
    $P11 = rx1497_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1497_pos)
    rx1497_cstack = rx1497_cur."!cursor_capture"($P11, "sym")
    goto rxcap1499_done3391
  rxcap1499_fail3392:
    goto rx1497_fail3384
  rxcap1499_done3391:
    repr_bind_attr_int rx1497_cur, rx1497_curclass, "$!pos", rx1497_pos
    $P11 = rx1497_cur."O"("%additive, :op<bitor_i>")
    repr_get_attr_int $I11, $P11, rx1497_curclass, "$!pos"
    lt $I11, 0, rx1497_fail3384
    nqp_rxmark rx1497_bstack, rxsubrule1500_pass3393, -1, 0
  rxsubrule1500_pass3393:
    rx1497_cstack = rx1497_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1497_pos, $P11, rx1497_curclass, "$!pos"
    rx1497_cur."!cursor_pass"(rx1497_pos, "infix:sym<+|>", 'backtrack'=>1)
    .return (rx1497_cur)
  rx1497_restart3383:
    repr_get_attr_obj rx1497_cstack, rx1497_cur, rx1497_curclass, "$!cstack"
  rx1497_fail3384:
    unless rx1497_bstack, rx1497_done3382
    pop $I19, rx1497_bstack
    if_null rx1497_cstack, rx1497_cstack_done3387
    unless rx1497_cstack, rx1497_cstack_done3387
    dec $I19
    set $P11, rx1497_cstack[$I19]
  rx1497_cstack_done3387:
    pop rx1497_rep, rx1497_bstack
    pop rx1497_pos, rx1497_bstack
    pop $I19, rx1497_bstack
    lt rx1497_pos, -1, rx1497_done3382
    lt rx1497_pos, 0, rx1497_fail3384
    eq $I19, 0, rx1497_fail3384
    nqp_islist $I20, rx1497_cstack
    unless $I20, rx1497_jump3385
    elements $I18, rx1497_bstack
    le $I18, 0, rx1497_cut3386
    dec $I18
    set $I18, rx1497_bstack[$I18]
  rx1497_cut3386:
    assign rx1497_cstack, $I18
  rx1497_jump3385:
    jump $I19
  rx1497_done3382:
    rx1497_cur."!cursor_fail"()
    .return (rx1497_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<+^>" :subid("cuid_195_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1371
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1501_start
    .local string rx1501_tgt
    .local int rx1501_pos
    .local int rx1501_off
    .local int rx1501_eos
    .local int rx1501_rep
    .local pmc rx1501_cur
    .local pmc rx1501_curclass
    .local pmc rx1501_bstack
    .local pmc rx1501_cstack
    rx1501_start = self."!cursor_start_all"()
    set rx1501_cur, rx1501_start[0]
    set rx1501_tgt, rx1501_start[1]
    set rx1501_pos, rx1501_start[2]
    set rx1501_curclass, rx1501_start[3]
    set rx1501_bstack, rx1501_start[4]
    set $I19, rx1501_start[5]
    store_lex unicode:"$\x{a2}", rx1501_cur
    length rx1501_eos, rx1501_tgt
    eq $I19, 1, rx1501_restart3396
    gt rx1501_pos, rx1501_eos, rx1501_fail3397
    repr_get_attr_int $I11, self, rx1501_curclass, "$!from"
    ne $I11, -1, rxscan1502_done3403
    goto rxscan1502_scan3402
  rxscan1502_loop3401:
    inc rx1501_pos
    gt rx1501_pos, rx1501_eos, rx1501_fail3397
    repr_bind_attr_int rx1501_cur, rx1501_curclass, "$!from", rx1501_pos
  rxscan1502_scan3402:
    nqp_rxmark rx1501_bstack, rxscan1502_loop3401, rx1501_pos, 0
  rxscan1502_done3403:
    nqp_rxmark rx1501_bstack, rxcap1503_fail3405, rx1501_pos, 0
    add $I11, rx1501_pos, 2
    gt $I11, rx1501_eos, rx1501_fail3397
    substr $S10, rx1501_tgt, rx1501_pos, 2
    ne $S10, ucs4:"+^", rx1501_fail3397
    add rx1501_pos, 2
    nqp_rxpeek $I19, rx1501_bstack, rxcap1503_fail3405
    inc $I19
    set $I11, rx1501_bstack[$I19]
    repr_bind_attr_int rx1501_cur, rx1501_curclass, "$!pos", rx1501_pos
    $P11 = rx1501_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1501_pos)
    rx1501_cstack = rx1501_cur."!cursor_capture"($P11, "sym")
    goto rxcap1503_done3404
  rxcap1503_fail3405:
    goto rx1501_fail3397
  rxcap1503_done3404:
    repr_bind_attr_int rx1501_cur, rx1501_curclass, "$!pos", rx1501_pos
    $P11 = rx1501_cur."O"("%additive, :op<bitxor_i>")
    repr_get_attr_int $I11, $P11, rx1501_curclass, "$!pos"
    lt $I11, 0, rx1501_fail3397
    nqp_rxmark rx1501_bstack, rxsubrule1504_pass3406, -1, 0
  rxsubrule1504_pass3406:
    rx1501_cstack = rx1501_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1501_pos, $P11, rx1501_curclass, "$!pos"
    rx1501_cur."!cursor_pass"(rx1501_pos, "infix:sym<+^>", 'backtrack'=>1)
    .return (rx1501_cur)
  rx1501_restart3396:
    repr_get_attr_obj rx1501_cstack, rx1501_cur, rx1501_curclass, "$!cstack"
  rx1501_fail3397:
    unless rx1501_bstack, rx1501_done3395
    pop $I19, rx1501_bstack
    if_null rx1501_cstack, rx1501_cstack_done3400
    unless rx1501_cstack, rx1501_cstack_done3400
    dec $I19
    set $P11, rx1501_cstack[$I19]
  rx1501_cstack_done3400:
    pop rx1501_rep, rx1501_bstack
    pop rx1501_pos, rx1501_bstack
    pop $I19, rx1501_bstack
    lt rx1501_pos, -1, rx1501_done3395
    lt rx1501_pos, 0, rx1501_fail3397
    eq $I19, 0, rx1501_fail3397
    nqp_islist $I20, rx1501_cstack
    unless $I20, rx1501_jump3398
    elements $I18, rx1501_bstack
    le $I18, 0, rx1501_cut3399
    dec $I18
    set $I18, rx1501_bstack[$I18]
  rx1501_cut3399:
    assign rx1501_cstack, $I18
  rx1501_jump3398:
    jump $I19
  rx1501_done3395:
    rx1501_cur."!cursor_fail"()
    .return (rx1501_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<~>" :subid("cuid_196_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1373
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1505_start
    .local string rx1505_tgt
    .local int rx1505_pos
    .local int rx1505_off
    .local int rx1505_eos
    .local int rx1505_rep
    .local pmc rx1505_cur
    .local pmc rx1505_curclass
    .local pmc rx1505_bstack
    .local pmc rx1505_cstack
    rx1505_start = self."!cursor_start_all"()
    set rx1505_cur, rx1505_start[0]
    set rx1505_tgt, rx1505_start[1]
    set rx1505_pos, rx1505_start[2]
    set rx1505_curclass, rx1505_start[3]
    set rx1505_bstack, rx1505_start[4]
    set $I19, rx1505_start[5]
    store_lex unicode:"$\x{a2}", rx1505_cur
    length rx1505_eos, rx1505_tgt
    eq $I19, 1, rx1505_restart3409
    gt rx1505_pos, rx1505_eos, rx1505_fail3410
    repr_get_attr_int $I11, self, rx1505_curclass, "$!from"
    ne $I11, -1, rxscan1506_done3416
    goto rxscan1506_scan3415
  rxscan1506_loop3414:
    inc rx1505_pos
    gt rx1505_pos, rx1505_eos, rx1505_fail3410
    repr_bind_attr_int rx1505_cur, rx1505_curclass, "$!from", rx1505_pos
  rxscan1506_scan3415:
    nqp_rxmark rx1505_bstack, rxscan1506_loop3414, rx1505_pos, 0
  rxscan1506_done3416:
    nqp_rxmark rx1505_bstack, rxcap1507_fail3418, rx1505_pos, 0
    add $I11, rx1505_pos, 1
    gt $I11, rx1505_eos, rx1505_fail3410
    substr $S10, rx1505_tgt, rx1505_pos, 1
    ne $S10, ucs4:"~", rx1505_fail3410
    add rx1505_pos, 1
    nqp_rxpeek $I19, rx1505_bstack, rxcap1507_fail3418
    inc $I19
    set $I11, rx1505_bstack[$I19]
    repr_bind_attr_int rx1505_cur, rx1505_curclass, "$!pos", rx1505_pos
    $P11 = rx1505_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1505_pos)
    rx1505_cstack = rx1505_cur."!cursor_capture"($P11, "sym")
    goto rxcap1507_done3417
  rxcap1507_fail3418:
    goto rx1505_fail3410
  rxcap1507_done3417:
    repr_bind_attr_int rx1505_cur, rx1505_curclass, "$!pos", rx1505_pos
    $P11 = rx1505_cur."O"("%concatenation , :op<concat>")
    repr_get_attr_int $I11, $P11, rx1505_curclass, "$!pos"
    lt $I11, 0, rx1505_fail3410
    nqp_rxmark rx1505_bstack, rxsubrule1508_pass3419, -1, 0
  rxsubrule1508_pass3419:
    rx1505_cstack = rx1505_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1505_pos, $P11, rx1505_curclass, "$!pos"
    rx1505_cur."!cursor_pass"(rx1505_pos, "infix:sym<~>", 'backtrack'=>1)
    .return (rx1505_cur)
  rx1505_restart3409:
    repr_get_attr_obj rx1505_cstack, rx1505_cur, rx1505_curclass, "$!cstack"
  rx1505_fail3410:
    unless rx1505_bstack, rx1505_done3408
    pop $I19, rx1505_bstack
    if_null rx1505_cstack, rx1505_cstack_done3413
    unless rx1505_cstack, rx1505_cstack_done3413
    dec $I19
    set $P11, rx1505_cstack[$I19]
  rx1505_cstack_done3413:
    pop rx1505_rep, rx1505_bstack
    pop rx1505_pos, rx1505_bstack
    pop $I19, rx1505_bstack
    lt rx1505_pos, -1, rx1505_done3408
    lt rx1505_pos, 0, rx1505_fail3410
    eq $I19, 0, rx1505_fail3410
    nqp_islist $I20, rx1505_cstack
    unless $I20, rx1505_jump3411
    elements $I18, rx1505_bstack
    le $I18, 0, rx1505_cut3412
    dec $I18
    set $I18, rx1505_bstack[$I18]
  rx1505_cut3412:
    assign rx1505_cstack, $I18
  rx1505_jump3411:
    jump $I19
  rx1505_done3408:
    rx1505_cur."!cursor_fail"()
    .return (rx1505_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<==>" :subid("cuid_197_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1375
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1509_start
    .local string rx1509_tgt
    .local int rx1509_pos
    .local int rx1509_off
    .local int rx1509_eos
    .local int rx1509_rep
    .local pmc rx1509_cur
    .local pmc rx1509_curclass
    .local pmc rx1509_bstack
    .local pmc rx1509_cstack
    rx1509_start = self."!cursor_start_all"()
    set rx1509_cur, rx1509_start[0]
    set rx1509_tgt, rx1509_start[1]
    set rx1509_pos, rx1509_start[2]
    set rx1509_curclass, rx1509_start[3]
    set rx1509_bstack, rx1509_start[4]
    set $I19, rx1509_start[5]
    store_lex unicode:"$\x{a2}", rx1509_cur
    length rx1509_eos, rx1509_tgt
    eq $I19, 1, rx1509_restart3422
    gt rx1509_pos, rx1509_eos, rx1509_fail3423
    repr_get_attr_int $I11, self, rx1509_curclass, "$!from"
    ne $I11, -1, rxscan1510_done3429
    goto rxscan1510_scan3428
  rxscan1510_loop3427:
    inc rx1509_pos
    gt rx1509_pos, rx1509_eos, rx1509_fail3423
    repr_bind_attr_int rx1509_cur, rx1509_curclass, "$!from", rx1509_pos
  rxscan1510_scan3428:
    nqp_rxmark rx1509_bstack, rxscan1510_loop3427, rx1509_pos, 0
  rxscan1510_done3429:
    nqp_rxmark rx1509_bstack, rxcap1511_fail3431, rx1509_pos, 0
    add $I11, rx1509_pos, 2
    gt $I11, rx1509_eos, rx1509_fail3423
    substr $S10, rx1509_tgt, rx1509_pos, 2
    ne $S10, ucs4:"==", rx1509_fail3423
    add rx1509_pos, 2
    nqp_rxpeek $I19, rx1509_bstack, rxcap1511_fail3431
    inc $I19
    set $I11, rx1509_bstack[$I19]
    repr_bind_attr_int rx1509_cur, rx1509_curclass, "$!pos", rx1509_pos
    $P11 = rx1509_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1509_pos)
    rx1509_cstack = rx1509_cur."!cursor_capture"($P11, "sym")
    goto rxcap1511_done3430
  rxcap1511_fail3431:
    goto rx1509_fail3423
  rxcap1511_done3430:
    repr_bind_attr_int rx1509_cur, rx1509_curclass, "$!pos", rx1509_pos
    $P11 = rx1509_cur."O"("%relational, :op<iseq_n>")
    repr_get_attr_int $I11, $P11, rx1509_curclass, "$!pos"
    lt $I11, 0, rx1509_fail3423
    nqp_rxmark rx1509_bstack, rxsubrule1512_pass3432, -1, 0
  rxsubrule1512_pass3432:
    rx1509_cstack = rx1509_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1509_pos, $P11, rx1509_curclass, "$!pos"
    rx1509_cur."!cursor_pass"(rx1509_pos, "infix:sym<==>", 'backtrack'=>1)
    .return (rx1509_cur)
  rx1509_restart3422:
    repr_get_attr_obj rx1509_cstack, rx1509_cur, rx1509_curclass, "$!cstack"
  rx1509_fail3423:
    unless rx1509_bstack, rx1509_done3421
    pop $I19, rx1509_bstack
    if_null rx1509_cstack, rx1509_cstack_done3426
    unless rx1509_cstack, rx1509_cstack_done3426
    dec $I19
    set $P11, rx1509_cstack[$I19]
  rx1509_cstack_done3426:
    pop rx1509_rep, rx1509_bstack
    pop rx1509_pos, rx1509_bstack
    pop $I19, rx1509_bstack
    lt rx1509_pos, -1, rx1509_done3421
    lt rx1509_pos, 0, rx1509_fail3423
    eq $I19, 0, rx1509_fail3423
    nqp_islist $I20, rx1509_cstack
    unless $I20, rx1509_jump3424
    elements $I18, rx1509_bstack
    le $I18, 0, rx1509_cut3425
    dec $I18
    set $I18, rx1509_bstack[$I18]
  rx1509_cut3425:
    assign rx1509_cstack, $I18
  rx1509_jump3424:
    jump $I19
  rx1509_done3421:
    rx1509_cur."!cursor_fail"()
    .return (rx1509_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<!=>" :subid("cuid_198_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1376
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1513_start
    .local string rx1513_tgt
    .local int rx1513_pos
    .local int rx1513_off
    .local int rx1513_eos
    .local int rx1513_rep
    .local pmc rx1513_cur
    .local pmc rx1513_curclass
    .local pmc rx1513_bstack
    .local pmc rx1513_cstack
    rx1513_start = self."!cursor_start_all"()
    set rx1513_cur, rx1513_start[0]
    set rx1513_tgt, rx1513_start[1]
    set rx1513_pos, rx1513_start[2]
    set rx1513_curclass, rx1513_start[3]
    set rx1513_bstack, rx1513_start[4]
    set $I19, rx1513_start[5]
    store_lex unicode:"$\x{a2}", rx1513_cur
    length rx1513_eos, rx1513_tgt
    eq $I19, 1, rx1513_restart3435
    gt rx1513_pos, rx1513_eos, rx1513_fail3436
    repr_get_attr_int $I11, self, rx1513_curclass, "$!from"
    ne $I11, -1, rxscan1514_done3442
    goto rxscan1514_scan3441
  rxscan1514_loop3440:
    inc rx1513_pos
    gt rx1513_pos, rx1513_eos, rx1513_fail3436
    repr_bind_attr_int rx1513_cur, rx1513_curclass, "$!from", rx1513_pos
  rxscan1514_scan3441:
    nqp_rxmark rx1513_bstack, rxscan1514_loop3440, rx1513_pos, 0
  rxscan1514_done3442:
    nqp_rxmark rx1513_bstack, rxcap1515_fail3444, rx1513_pos, 0
    add $I11, rx1513_pos, 2
    gt $I11, rx1513_eos, rx1513_fail3436
    substr $S10, rx1513_tgt, rx1513_pos, 2
    ne $S10, ucs4:"!=", rx1513_fail3436
    add rx1513_pos, 2
    nqp_rxpeek $I19, rx1513_bstack, rxcap1515_fail3444
    inc $I19
    set $I11, rx1513_bstack[$I19]
    repr_bind_attr_int rx1513_cur, rx1513_curclass, "$!pos", rx1513_pos
    $P11 = rx1513_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1513_pos)
    rx1513_cstack = rx1513_cur."!cursor_capture"($P11, "sym")
    goto rxcap1515_done3443
  rxcap1515_fail3444:
    goto rx1513_fail3436
  rxcap1515_done3443:
    repr_bind_attr_int rx1513_cur, rx1513_curclass, "$!pos", rx1513_pos
    $P11 = rx1513_cur."O"("%relational, :op<isne_n>")
    repr_get_attr_int $I11, $P11, rx1513_curclass, "$!pos"
    lt $I11, 0, rx1513_fail3436
    nqp_rxmark rx1513_bstack, rxsubrule1516_pass3445, -1, 0
  rxsubrule1516_pass3445:
    rx1513_cstack = rx1513_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1513_pos, $P11, rx1513_curclass, "$!pos"
    rx1513_cur."!cursor_pass"(rx1513_pos, "infix:sym<!=>", 'backtrack'=>1)
    .return (rx1513_cur)
  rx1513_restart3435:
    repr_get_attr_obj rx1513_cstack, rx1513_cur, rx1513_curclass, "$!cstack"
  rx1513_fail3436:
    unless rx1513_bstack, rx1513_done3434
    pop $I19, rx1513_bstack
    if_null rx1513_cstack, rx1513_cstack_done3439
    unless rx1513_cstack, rx1513_cstack_done3439
    dec $I19
    set $P11, rx1513_cstack[$I19]
  rx1513_cstack_done3439:
    pop rx1513_rep, rx1513_bstack
    pop rx1513_pos, rx1513_bstack
    pop $I19, rx1513_bstack
    lt rx1513_pos, -1, rx1513_done3434
    lt rx1513_pos, 0, rx1513_fail3436
    eq $I19, 0, rx1513_fail3436
    nqp_islist $I20, rx1513_cstack
    unless $I20, rx1513_jump3437
    elements $I18, rx1513_bstack
    le $I18, 0, rx1513_cut3438
    dec $I18
    set $I18, rx1513_bstack[$I18]
  rx1513_cut3438:
    assign rx1513_cstack, $I18
  rx1513_jump3437:
    jump $I19
  rx1513_done3434:
    rx1513_cur."!cursor_fail"()
    .return (rx1513_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<<=>" :subid("cuid_199_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1377
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1517_start
    .local string rx1517_tgt
    .local int rx1517_pos
    .local int rx1517_off
    .local int rx1517_eos
    .local int rx1517_rep
    .local pmc rx1517_cur
    .local pmc rx1517_curclass
    .local pmc rx1517_bstack
    .local pmc rx1517_cstack
    rx1517_start = self."!cursor_start_all"()
    set rx1517_cur, rx1517_start[0]
    set rx1517_tgt, rx1517_start[1]
    set rx1517_pos, rx1517_start[2]
    set rx1517_curclass, rx1517_start[3]
    set rx1517_bstack, rx1517_start[4]
    set $I19, rx1517_start[5]
    store_lex unicode:"$\x{a2}", rx1517_cur
    length rx1517_eos, rx1517_tgt
    eq $I19, 1, rx1517_restart3448
    gt rx1517_pos, rx1517_eos, rx1517_fail3449
    repr_get_attr_int $I11, self, rx1517_curclass, "$!from"
    ne $I11, -1, rxscan1518_done3455
    goto rxscan1518_scan3454
  rxscan1518_loop3453:
    inc rx1517_pos
    gt rx1517_pos, rx1517_eos, rx1517_fail3449
    repr_bind_attr_int rx1517_cur, rx1517_curclass, "$!from", rx1517_pos
  rxscan1518_scan3454:
    nqp_rxmark rx1517_bstack, rxscan1518_loop3453, rx1517_pos, 0
  rxscan1518_done3455:
    nqp_rxmark rx1517_bstack, rxcap1519_fail3457, rx1517_pos, 0
    add $I11, rx1517_pos, 2
    gt $I11, rx1517_eos, rx1517_fail3449
    substr $S10, rx1517_tgt, rx1517_pos, 2
    ne $S10, ucs4:"<=", rx1517_fail3449
    add rx1517_pos, 2
    nqp_rxpeek $I19, rx1517_bstack, rxcap1519_fail3457
    inc $I19
    set $I11, rx1517_bstack[$I19]
    repr_bind_attr_int rx1517_cur, rx1517_curclass, "$!pos", rx1517_pos
    $P11 = rx1517_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1517_pos)
    rx1517_cstack = rx1517_cur."!cursor_capture"($P11, "sym")
    goto rxcap1519_done3456
  rxcap1519_fail3457:
    goto rx1517_fail3449
  rxcap1519_done3456:
    repr_bind_attr_int rx1517_cur, rx1517_curclass, "$!pos", rx1517_pos
    $P11 = rx1517_cur."O"("%relational, :op<isle_n>")
    repr_get_attr_int $I11, $P11, rx1517_curclass, "$!pos"
    lt $I11, 0, rx1517_fail3449
    nqp_rxmark rx1517_bstack, rxsubrule1520_pass3458, -1, 0
  rxsubrule1520_pass3458:
    rx1517_cstack = rx1517_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1517_pos, $P11, rx1517_curclass, "$!pos"
    rx1517_cur."!cursor_pass"(rx1517_pos, "infix:sym<<=>", 'backtrack'=>1)
    .return (rx1517_cur)
  rx1517_restart3448:
    repr_get_attr_obj rx1517_cstack, rx1517_cur, rx1517_curclass, "$!cstack"
  rx1517_fail3449:
    unless rx1517_bstack, rx1517_done3447
    pop $I19, rx1517_bstack
    if_null rx1517_cstack, rx1517_cstack_done3452
    unless rx1517_cstack, rx1517_cstack_done3452
    dec $I19
    set $P11, rx1517_cstack[$I19]
  rx1517_cstack_done3452:
    pop rx1517_rep, rx1517_bstack
    pop rx1517_pos, rx1517_bstack
    pop $I19, rx1517_bstack
    lt rx1517_pos, -1, rx1517_done3447
    lt rx1517_pos, 0, rx1517_fail3449
    eq $I19, 0, rx1517_fail3449
    nqp_islist $I20, rx1517_cstack
    unless $I20, rx1517_jump3450
    elements $I18, rx1517_bstack
    le $I18, 0, rx1517_cut3451
    dec $I18
    set $I18, rx1517_bstack[$I18]
  rx1517_cut3451:
    assign rx1517_cstack, $I18
  rx1517_jump3450:
    jump $I19
  rx1517_done3447:
    rx1517_cur."!cursor_fail"()
    .return (rx1517_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<>=>" :subid("cuid_200_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1378
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1521_start
    .local string rx1521_tgt
    .local int rx1521_pos
    .local int rx1521_off
    .local int rx1521_eos
    .local int rx1521_rep
    .local pmc rx1521_cur
    .local pmc rx1521_curclass
    .local pmc rx1521_bstack
    .local pmc rx1521_cstack
    rx1521_start = self."!cursor_start_all"()
    set rx1521_cur, rx1521_start[0]
    set rx1521_tgt, rx1521_start[1]
    set rx1521_pos, rx1521_start[2]
    set rx1521_curclass, rx1521_start[3]
    set rx1521_bstack, rx1521_start[4]
    set $I19, rx1521_start[5]
    store_lex unicode:"$\x{a2}", rx1521_cur
    length rx1521_eos, rx1521_tgt
    eq $I19, 1, rx1521_restart3461
    gt rx1521_pos, rx1521_eos, rx1521_fail3462
    repr_get_attr_int $I11, self, rx1521_curclass, "$!from"
    ne $I11, -1, rxscan1522_done3468
    goto rxscan1522_scan3467
  rxscan1522_loop3466:
    inc rx1521_pos
    gt rx1521_pos, rx1521_eos, rx1521_fail3462
    repr_bind_attr_int rx1521_cur, rx1521_curclass, "$!from", rx1521_pos
  rxscan1522_scan3467:
    nqp_rxmark rx1521_bstack, rxscan1522_loop3466, rx1521_pos, 0
  rxscan1522_done3468:
    nqp_rxmark rx1521_bstack, rxcap1523_fail3470, rx1521_pos, 0
    add $I11, rx1521_pos, 2
    gt $I11, rx1521_eos, rx1521_fail3462
    substr $S10, rx1521_tgt, rx1521_pos, 2
    ne $S10, ucs4:">=", rx1521_fail3462
    add rx1521_pos, 2
    nqp_rxpeek $I19, rx1521_bstack, rxcap1523_fail3470
    inc $I19
    set $I11, rx1521_bstack[$I19]
    repr_bind_attr_int rx1521_cur, rx1521_curclass, "$!pos", rx1521_pos
    $P11 = rx1521_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1521_pos)
    rx1521_cstack = rx1521_cur."!cursor_capture"($P11, "sym")
    goto rxcap1523_done3469
  rxcap1523_fail3470:
    goto rx1521_fail3462
  rxcap1523_done3469:
    repr_bind_attr_int rx1521_cur, rx1521_curclass, "$!pos", rx1521_pos
    $P11 = rx1521_cur."O"("%relational, :op<isge_n>")
    repr_get_attr_int $I11, $P11, rx1521_curclass, "$!pos"
    lt $I11, 0, rx1521_fail3462
    nqp_rxmark rx1521_bstack, rxsubrule1524_pass3471, -1, 0
  rxsubrule1524_pass3471:
    rx1521_cstack = rx1521_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1521_pos, $P11, rx1521_curclass, "$!pos"
    rx1521_cur."!cursor_pass"(rx1521_pos, "infix:sym<>=>", 'backtrack'=>1)
    .return (rx1521_cur)
  rx1521_restart3461:
    repr_get_attr_obj rx1521_cstack, rx1521_cur, rx1521_curclass, "$!cstack"
  rx1521_fail3462:
    unless rx1521_bstack, rx1521_done3460
    pop $I19, rx1521_bstack
    if_null rx1521_cstack, rx1521_cstack_done3465
    unless rx1521_cstack, rx1521_cstack_done3465
    dec $I19
    set $P11, rx1521_cstack[$I19]
  rx1521_cstack_done3465:
    pop rx1521_rep, rx1521_bstack
    pop rx1521_pos, rx1521_bstack
    pop $I19, rx1521_bstack
    lt rx1521_pos, -1, rx1521_done3460
    lt rx1521_pos, 0, rx1521_fail3462
    eq $I19, 0, rx1521_fail3462
    nqp_islist $I20, rx1521_cstack
    unless $I20, rx1521_jump3463
    elements $I18, rx1521_bstack
    le $I18, 0, rx1521_cut3464
    dec $I18
    set $I18, rx1521_bstack[$I18]
  rx1521_cut3464:
    assign rx1521_cstack, $I18
  rx1521_jump3463:
    jump $I19
  rx1521_done3460:
    rx1521_cur."!cursor_fail"()
    .return (rx1521_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<<>" :subid("cuid_201_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1379
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1525_start
    .local string rx1525_tgt
    .local int rx1525_pos
    .local int rx1525_off
    .local int rx1525_eos
    .local int rx1525_rep
    .local pmc rx1525_cur
    .local pmc rx1525_curclass
    .local pmc rx1525_bstack
    .local pmc rx1525_cstack
    rx1525_start = self."!cursor_start_all"()
    set rx1525_cur, rx1525_start[0]
    set rx1525_tgt, rx1525_start[1]
    set rx1525_pos, rx1525_start[2]
    set rx1525_curclass, rx1525_start[3]
    set rx1525_bstack, rx1525_start[4]
    set $I19, rx1525_start[5]
    store_lex unicode:"$\x{a2}", rx1525_cur
    length rx1525_eos, rx1525_tgt
    eq $I19, 1, rx1525_restart3474
    gt rx1525_pos, rx1525_eos, rx1525_fail3475
    repr_get_attr_int $I11, self, rx1525_curclass, "$!from"
    ne $I11, -1, rxscan1526_done3481
    goto rxscan1526_scan3480
  rxscan1526_loop3479:
    inc rx1525_pos
    gt rx1525_pos, rx1525_eos, rx1525_fail3475
    repr_bind_attr_int rx1525_cur, rx1525_curclass, "$!from", rx1525_pos
  rxscan1526_scan3480:
    nqp_rxmark rx1525_bstack, rxscan1526_loop3479, rx1525_pos, 0
  rxscan1526_done3481:
    nqp_rxmark rx1525_bstack, rxcap1527_fail3483, rx1525_pos, 0
    add $I11, rx1525_pos, 1
    gt $I11, rx1525_eos, rx1525_fail3475
    substr $S10, rx1525_tgt, rx1525_pos, 1
    ne $S10, ucs4:"<", rx1525_fail3475
    add rx1525_pos, 1
    nqp_rxpeek $I19, rx1525_bstack, rxcap1527_fail3483
    inc $I19
    set $I11, rx1525_bstack[$I19]
    repr_bind_attr_int rx1525_cur, rx1525_curclass, "$!pos", rx1525_pos
    $P11 = rx1525_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1525_pos)
    rx1525_cstack = rx1525_cur."!cursor_capture"($P11, "sym")
    goto rxcap1527_done3482
  rxcap1527_fail3483:
    goto rx1525_fail3475
  rxcap1527_done3482:
    repr_bind_attr_int rx1525_cur, rx1525_curclass, "$!pos", rx1525_pos
    $P11 = rx1525_cur."O"("%relational, :op<islt_n>")
    repr_get_attr_int $I11, $P11, rx1525_curclass, "$!pos"
    lt $I11, 0, rx1525_fail3475
    nqp_rxmark rx1525_bstack, rxsubrule1528_pass3484, -1, 0
  rxsubrule1528_pass3484:
    rx1525_cstack = rx1525_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1525_pos, $P11, rx1525_curclass, "$!pos"
    rx1525_cur."!cursor_pass"(rx1525_pos, "infix:sym<<>", 'backtrack'=>1)
    .return (rx1525_cur)
  rx1525_restart3474:
    repr_get_attr_obj rx1525_cstack, rx1525_cur, rx1525_curclass, "$!cstack"
  rx1525_fail3475:
    unless rx1525_bstack, rx1525_done3473
    pop $I19, rx1525_bstack
    if_null rx1525_cstack, rx1525_cstack_done3478
    unless rx1525_cstack, rx1525_cstack_done3478
    dec $I19
    set $P11, rx1525_cstack[$I19]
  rx1525_cstack_done3478:
    pop rx1525_rep, rx1525_bstack
    pop rx1525_pos, rx1525_bstack
    pop $I19, rx1525_bstack
    lt rx1525_pos, -1, rx1525_done3473
    lt rx1525_pos, 0, rx1525_fail3475
    eq $I19, 0, rx1525_fail3475
    nqp_islist $I20, rx1525_cstack
    unless $I20, rx1525_jump3476
    elements $I18, rx1525_bstack
    le $I18, 0, rx1525_cut3477
    dec $I18
    set $I18, rx1525_bstack[$I18]
  rx1525_cut3477:
    assign rx1525_cstack, $I18
  rx1525_jump3476:
    jump $I19
  rx1525_done3473:
    rx1525_cur."!cursor_fail"()
    .return (rx1525_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<>>" :subid("cuid_202_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1380
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1529_start
    .local string rx1529_tgt
    .local int rx1529_pos
    .local int rx1529_off
    .local int rx1529_eos
    .local int rx1529_rep
    .local pmc rx1529_cur
    .local pmc rx1529_curclass
    .local pmc rx1529_bstack
    .local pmc rx1529_cstack
    rx1529_start = self."!cursor_start_all"()
    set rx1529_cur, rx1529_start[0]
    set rx1529_tgt, rx1529_start[1]
    set rx1529_pos, rx1529_start[2]
    set rx1529_curclass, rx1529_start[3]
    set rx1529_bstack, rx1529_start[4]
    set $I19, rx1529_start[5]
    store_lex unicode:"$\x{a2}", rx1529_cur
    length rx1529_eos, rx1529_tgt
    eq $I19, 1, rx1529_restart3487
    gt rx1529_pos, rx1529_eos, rx1529_fail3488
    repr_get_attr_int $I11, self, rx1529_curclass, "$!from"
    ne $I11, -1, rxscan1530_done3494
    goto rxscan1530_scan3493
  rxscan1530_loop3492:
    inc rx1529_pos
    gt rx1529_pos, rx1529_eos, rx1529_fail3488
    repr_bind_attr_int rx1529_cur, rx1529_curclass, "$!from", rx1529_pos
  rxscan1530_scan3493:
    nqp_rxmark rx1529_bstack, rxscan1530_loop3492, rx1529_pos, 0
  rxscan1530_done3494:
    nqp_rxmark rx1529_bstack, rxcap1531_fail3496, rx1529_pos, 0
    add $I11, rx1529_pos, 1
    gt $I11, rx1529_eos, rx1529_fail3488
    substr $S10, rx1529_tgt, rx1529_pos, 1
    ne $S10, ucs4:">", rx1529_fail3488
    add rx1529_pos, 1
    nqp_rxpeek $I19, rx1529_bstack, rxcap1531_fail3496
    inc $I19
    set $I11, rx1529_bstack[$I19]
    repr_bind_attr_int rx1529_cur, rx1529_curclass, "$!pos", rx1529_pos
    $P11 = rx1529_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1529_pos)
    rx1529_cstack = rx1529_cur."!cursor_capture"($P11, "sym")
    goto rxcap1531_done3495
  rxcap1531_fail3496:
    goto rx1529_fail3488
  rxcap1531_done3495:
    repr_bind_attr_int rx1529_cur, rx1529_curclass, "$!pos", rx1529_pos
    $P11 = rx1529_cur."O"("%relational, :op<isgt_n>")
    repr_get_attr_int $I11, $P11, rx1529_curclass, "$!pos"
    lt $I11, 0, rx1529_fail3488
    nqp_rxmark rx1529_bstack, rxsubrule1532_pass3497, -1, 0
  rxsubrule1532_pass3497:
    rx1529_cstack = rx1529_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1529_pos, $P11, rx1529_curclass, "$!pos"
    rx1529_cur."!cursor_pass"(rx1529_pos, "infix:sym<>>", 'backtrack'=>1)
    .return (rx1529_cur)
  rx1529_restart3487:
    repr_get_attr_obj rx1529_cstack, rx1529_cur, rx1529_curclass, "$!cstack"
  rx1529_fail3488:
    unless rx1529_bstack, rx1529_done3486
    pop $I19, rx1529_bstack
    if_null rx1529_cstack, rx1529_cstack_done3491
    unless rx1529_cstack, rx1529_cstack_done3491
    dec $I19
    set $P11, rx1529_cstack[$I19]
  rx1529_cstack_done3491:
    pop rx1529_rep, rx1529_bstack
    pop rx1529_pos, rx1529_bstack
    pop $I19, rx1529_bstack
    lt rx1529_pos, -1, rx1529_done3486
    lt rx1529_pos, 0, rx1529_fail3488
    eq $I19, 0, rx1529_fail3488
    nqp_islist $I20, rx1529_cstack
    unless $I20, rx1529_jump3489
    elements $I18, rx1529_bstack
    le $I18, 0, rx1529_cut3490
    dec $I18
    set $I18, rx1529_bstack[$I18]
  rx1529_cut3490:
    assign rx1529_cstack, $I18
  rx1529_jump3489:
    jump $I19
  rx1529_done3486:
    rx1529_cur."!cursor_fail"()
    .return (rx1529_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<eq>" :subid("cuid_203_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1381
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1533_start
    .local string rx1533_tgt
    .local int rx1533_pos
    .local int rx1533_off
    .local int rx1533_eos
    .local int rx1533_rep
    .local pmc rx1533_cur
    .local pmc rx1533_curclass
    .local pmc rx1533_bstack
    .local pmc rx1533_cstack
    rx1533_start = self."!cursor_start_all"()
    set rx1533_cur, rx1533_start[0]
    set rx1533_tgt, rx1533_start[1]
    set rx1533_pos, rx1533_start[2]
    set rx1533_curclass, rx1533_start[3]
    set rx1533_bstack, rx1533_start[4]
    set $I19, rx1533_start[5]
    store_lex unicode:"$\x{a2}", rx1533_cur
    length rx1533_eos, rx1533_tgt
    eq $I19, 1, rx1533_restart3500
    gt rx1533_pos, rx1533_eos, rx1533_fail3501
    repr_get_attr_int $I11, self, rx1533_curclass, "$!from"
    ne $I11, -1, rxscan1534_done3507
    goto rxscan1534_scan3506
  rxscan1534_loop3505:
    inc rx1533_pos
    gt rx1533_pos, rx1533_eos, rx1533_fail3501
    repr_bind_attr_int rx1533_cur, rx1533_curclass, "$!from", rx1533_pos
  rxscan1534_scan3506:
    nqp_rxmark rx1533_bstack, rxscan1534_loop3505, rx1533_pos, 0
  rxscan1534_done3507:
    nqp_rxmark rx1533_bstack, rxcap1535_fail3509, rx1533_pos, 0
    add $I11, rx1533_pos, 2
    gt $I11, rx1533_eos, rx1533_fail3501
    substr $S10, rx1533_tgt, rx1533_pos, 2
    ne $S10, ucs4:"eq", rx1533_fail3501
    add rx1533_pos, 2
    nqp_rxpeek $I19, rx1533_bstack, rxcap1535_fail3509
    inc $I19
    set $I11, rx1533_bstack[$I19]
    repr_bind_attr_int rx1533_cur, rx1533_curclass, "$!pos", rx1533_pos
    $P11 = rx1533_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1533_pos)
    rx1533_cstack = rx1533_cur."!cursor_capture"($P11, "sym")
    goto rxcap1535_done3508
  rxcap1535_fail3509:
    goto rx1533_fail3501
  rxcap1535_done3508:
    repr_bind_attr_int rx1533_cur, rx1533_curclass, "$!pos", rx1533_pos
    $P11 = rx1533_cur."O"("%relational, :op<iseq_s>")
    repr_get_attr_int $I11, $P11, rx1533_curclass, "$!pos"
    lt $I11, 0, rx1533_fail3501
    nqp_rxmark rx1533_bstack, rxsubrule1536_pass3510, -1, 0
  rxsubrule1536_pass3510:
    rx1533_cstack = rx1533_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1533_pos, $P11, rx1533_curclass, "$!pos"
    rx1533_cur."!cursor_pass"(rx1533_pos, "infix:sym<eq>", 'backtrack'=>1)
    .return (rx1533_cur)
  rx1533_restart3500:
    repr_get_attr_obj rx1533_cstack, rx1533_cur, rx1533_curclass, "$!cstack"
  rx1533_fail3501:
    unless rx1533_bstack, rx1533_done3499
    pop $I19, rx1533_bstack
    if_null rx1533_cstack, rx1533_cstack_done3504
    unless rx1533_cstack, rx1533_cstack_done3504
    dec $I19
    set $P11, rx1533_cstack[$I19]
  rx1533_cstack_done3504:
    pop rx1533_rep, rx1533_bstack
    pop rx1533_pos, rx1533_bstack
    pop $I19, rx1533_bstack
    lt rx1533_pos, -1, rx1533_done3499
    lt rx1533_pos, 0, rx1533_fail3501
    eq $I19, 0, rx1533_fail3501
    nqp_islist $I20, rx1533_cstack
    unless $I20, rx1533_jump3502
    elements $I18, rx1533_bstack
    le $I18, 0, rx1533_cut3503
    dec $I18
    set $I18, rx1533_bstack[$I18]
  rx1533_cut3503:
    assign rx1533_cstack, $I18
  rx1533_jump3502:
    jump $I19
  rx1533_done3499:
    rx1533_cur."!cursor_fail"()
    .return (rx1533_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<ne>" :subid("cuid_204_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1382
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1537_start
    .local string rx1537_tgt
    .local int rx1537_pos
    .local int rx1537_off
    .local int rx1537_eos
    .local int rx1537_rep
    .local pmc rx1537_cur
    .local pmc rx1537_curclass
    .local pmc rx1537_bstack
    .local pmc rx1537_cstack
    rx1537_start = self."!cursor_start_all"()
    set rx1537_cur, rx1537_start[0]
    set rx1537_tgt, rx1537_start[1]
    set rx1537_pos, rx1537_start[2]
    set rx1537_curclass, rx1537_start[3]
    set rx1537_bstack, rx1537_start[4]
    set $I19, rx1537_start[5]
    store_lex unicode:"$\x{a2}", rx1537_cur
    length rx1537_eos, rx1537_tgt
    eq $I19, 1, rx1537_restart3513
    gt rx1537_pos, rx1537_eos, rx1537_fail3514
    repr_get_attr_int $I11, self, rx1537_curclass, "$!from"
    ne $I11, -1, rxscan1538_done3520
    goto rxscan1538_scan3519
  rxscan1538_loop3518:
    inc rx1537_pos
    gt rx1537_pos, rx1537_eos, rx1537_fail3514
    repr_bind_attr_int rx1537_cur, rx1537_curclass, "$!from", rx1537_pos
  rxscan1538_scan3519:
    nqp_rxmark rx1537_bstack, rxscan1538_loop3518, rx1537_pos, 0
  rxscan1538_done3520:
    nqp_rxmark rx1537_bstack, rxcap1539_fail3522, rx1537_pos, 0
    add $I11, rx1537_pos, 2
    gt $I11, rx1537_eos, rx1537_fail3514
    substr $S10, rx1537_tgt, rx1537_pos, 2
    ne $S10, ucs4:"ne", rx1537_fail3514
    add rx1537_pos, 2
    nqp_rxpeek $I19, rx1537_bstack, rxcap1539_fail3522
    inc $I19
    set $I11, rx1537_bstack[$I19]
    repr_bind_attr_int rx1537_cur, rx1537_curclass, "$!pos", rx1537_pos
    $P11 = rx1537_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1537_pos)
    rx1537_cstack = rx1537_cur."!cursor_capture"($P11, "sym")
    goto rxcap1539_done3521
  rxcap1539_fail3522:
    goto rx1537_fail3514
  rxcap1539_done3521:
    repr_bind_attr_int rx1537_cur, rx1537_curclass, "$!pos", rx1537_pos
    $P11 = rx1537_cur."O"("%relational, :op<isne_s>")
    repr_get_attr_int $I11, $P11, rx1537_curclass, "$!pos"
    lt $I11, 0, rx1537_fail3514
    nqp_rxmark rx1537_bstack, rxsubrule1540_pass3523, -1, 0
  rxsubrule1540_pass3523:
    rx1537_cstack = rx1537_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1537_pos, $P11, rx1537_curclass, "$!pos"
    rx1537_cur."!cursor_pass"(rx1537_pos, "infix:sym<ne>", 'backtrack'=>1)
    .return (rx1537_cur)
  rx1537_restart3513:
    repr_get_attr_obj rx1537_cstack, rx1537_cur, rx1537_curclass, "$!cstack"
  rx1537_fail3514:
    unless rx1537_bstack, rx1537_done3512
    pop $I19, rx1537_bstack
    if_null rx1537_cstack, rx1537_cstack_done3517
    unless rx1537_cstack, rx1537_cstack_done3517
    dec $I19
    set $P11, rx1537_cstack[$I19]
  rx1537_cstack_done3517:
    pop rx1537_rep, rx1537_bstack
    pop rx1537_pos, rx1537_bstack
    pop $I19, rx1537_bstack
    lt rx1537_pos, -1, rx1537_done3512
    lt rx1537_pos, 0, rx1537_fail3514
    eq $I19, 0, rx1537_fail3514
    nqp_islist $I20, rx1537_cstack
    unless $I20, rx1537_jump3515
    elements $I18, rx1537_bstack
    le $I18, 0, rx1537_cut3516
    dec $I18
    set $I18, rx1537_bstack[$I18]
  rx1537_cut3516:
    assign rx1537_cstack, $I18
  rx1537_jump3515:
    jump $I19
  rx1537_done3512:
    rx1537_cur."!cursor_fail"()
    .return (rx1537_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<le>" :subid("cuid_205_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1383
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1541_start
    .local string rx1541_tgt
    .local int rx1541_pos
    .local int rx1541_off
    .local int rx1541_eos
    .local int rx1541_rep
    .local pmc rx1541_cur
    .local pmc rx1541_curclass
    .local pmc rx1541_bstack
    .local pmc rx1541_cstack
    rx1541_start = self."!cursor_start_all"()
    set rx1541_cur, rx1541_start[0]
    set rx1541_tgt, rx1541_start[1]
    set rx1541_pos, rx1541_start[2]
    set rx1541_curclass, rx1541_start[3]
    set rx1541_bstack, rx1541_start[4]
    set $I19, rx1541_start[5]
    store_lex unicode:"$\x{a2}", rx1541_cur
    length rx1541_eos, rx1541_tgt
    eq $I19, 1, rx1541_restart3526
    gt rx1541_pos, rx1541_eos, rx1541_fail3527
    repr_get_attr_int $I11, self, rx1541_curclass, "$!from"
    ne $I11, -1, rxscan1542_done3533
    goto rxscan1542_scan3532
  rxscan1542_loop3531:
    inc rx1541_pos
    gt rx1541_pos, rx1541_eos, rx1541_fail3527
    repr_bind_attr_int rx1541_cur, rx1541_curclass, "$!from", rx1541_pos
  rxscan1542_scan3532:
    nqp_rxmark rx1541_bstack, rxscan1542_loop3531, rx1541_pos, 0
  rxscan1542_done3533:
    nqp_rxmark rx1541_bstack, rxcap1543_fail3535, rx1541_pos, 0
    add $I11, rx1541_pos, 2
    gt $I11, rx1541_eos, rx1541_fail3527
    substr $S10, rx1541_tgt, rx1541_pos, 2
    ne $S10, ucs4:"le", rx1541_fail3527
    add rx1541_pos, 2
    nqp_rxpeek $I19, rx1541_bstack, rxcap1543_fail3535
    inc $I19
    set $I11, rx1541_bstack[$I19]
    repr_bind_attr_int rx1541_cur, rx1541_curclass, "$!pos", rx1541_pos
    $P11 = rx1541_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1541_pos)
    rx1541_cstack = rx1541_cur."!cursor_capture"($P11, "sym")
    goto rxcap1543_done3534
  rxcap1543_fail3535:
    goto rx1541_fail3527
  rxcap1543_done3534:
    repr_bind_attr_int rx1541_cur, rx1541_curclass, "$!pos", rx1541_pos
    $P11 = rx1541_cur."O"("%relational, :op<isle_s>")
    repr_get_attr_int $I11, $P11, rx1541_curclass, "$!pos"
    lt $I11, 0, rx1541_fail3527
    nqp_rxmark rx1541_bstack, rxsubrule1544_pass3536, -1, 0
  rxsubrule1544_pass3536:
    rx1541_cstack = rx1541_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1541_pos, $P11, rx1541_curclass, "$!pos"
    rx1541_cur."!cursor_pass"(rx1541_pos, "infix:sym<le>", 'backtrack'=>1)
    .return (rx1541_cur)
  rx1541_restart3526:
    repr_get_attr_obj rx1541_cstack, rx1541_cur, rx1541_curclass, "$!cstack"
  rx1541_fail3527:
    unless rx1541_bstack, rx1541_done3525
    pop $I19, rx1541_bstack
    if_null rx1541_cstack, rx1541_cstack_done3530
    unless rx1541_cstack, rx1541_cstack_done3530
    dec $I19
    set $P11, rx1541_cstack[$I19]
  rx1541_cstack_done3530:
    pop rx1541_rep, rx1541_bstack
    pop rx1541_pos, rx1541_bstack
    pop $I19, rx1541_bstack
    lt rx1541_pos, -1, rx1541_done3525
    lt rx1541_pos, 0, rx1541_fail3527
    eq $I19, 0, rx1541_fail3527
    nqp_islist $I20, rx1541_cstack
    unless $I20, rx1541_jump3528
    elements $I18, rx1541_bstack
    le $I18, 0, rx1541_cut3529
    dec $I18
    set $I18, rx1541_bstack[$I18]
  rx1541_cut3529:
    assign rx1541_cstack, $I18
  rx1541_jump3528:
    jump $I19
  rx1541_done3525:
    rx1541_cur."!cursor_fail"()
    .return (rx1541_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<ge>" :subid("cuid_206_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1384
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1545_start
    .local string rx1545_tgt
    .local int rx1545_pos
    .local int rx1545_off
    .local int rx1545_eos
    .local int rx1545_rep
    .local pmc rx1545_cur
    .local pmc rx1545_curclass
    .local pmc rx1545_bstack
    .local pmc rx1545_cstack
    rx1545_start = self."!cursor_start_all"()
    set rx1545_cur, rx1545_start[0]
    set rx1545_tgt, rx1545_start[1]
    set rx1545_pos, rx1545_start[2]
    set rx1545_curclass, rx1545_start[3]
    set rx1545_bstack, rx1545_start[4]
    set $I19, rx1545_start[5]
    store_lex unicode:"$\x{a2}", rx1545_cur
    length rx1545_eos, rx1545_tgt
    eq $I19, 1, rx1545_restart3539
    gt rx1545_pos, rx1545_eos, rx1545_fail3540
    repr_get_attr_int $I11, self, rx1545_curclass, "$!from"
    ne $I11, -1, rxscan1546_done3546
    goto rxscan1546_scan3545
  rxscan1546_loop3544:
    inc rx1545_pos
    gt rx1545_pos, rx1545_eos, rx1545_fail3540
    repr_bind_attr_int rx1545_cur, rx1545_curclass, "$!from", rx1545_pos
  rxscan1546_scan3545:
    nqp_rxmark rx1545_bstack, rxscan1546_loop3544, rx1545_pos, 0
  rxscan1546_done3546:
    nqp_rxmark rx1545_bstack, rxcap1547_fail3548, rx1545_pos, 0
    add $I11, rx1545_pos, 2
    gt $I11, rx1545_eos, rx1545_fail3540
    substr $S10, rx1545_tgt, rx1545_pos, 2
    ne $S10, ucs4:"ge", rx1545_fail3540
    add rx1545_pos, 2
    nqp_rxpeek $I19, rx1545_bstack, rxcap1547_fail3548
    inc $I19
    set $I11, rx1545_bstack[$I19]
    repr_bind_attr_int rx1545_cur, rx1545_curclass, "$!pos", rx1545_pos
    $P11 = rx1545_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1545_pos)
    rx1545_cstack = rx1545_cur."!cursor_capture"($P11, "sym")
    goto rxcap1547_done3547
  rxcap1547_fail3548:
    goto rx1545_fail3540
  rxcap1547_done3547:
    repr_bind_attr_int rx1545_cur, rx1545_curclass, "$!pos", rx1545_pos
    $P11 = rx1545_cur."O"("%relational, :op<isge_s>")
    repr_get_attr_int $I11, $P11, rx1545_curclass, "$!pos"
    lt $I11, 0, rx1545_fail3540
    nqp_rxmark rx1545_bstack, rxsubrule1548_pass3549, -1, 0
  rxsubrule1548_pass3549:
    rx1545_cstack = rx1545_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1545_pos, $P11, rx1545_curclass, "$!pos"
    rx1545_cur."!cursor_pass"(rx1545_pos, "infix:sym<ge>", 'backtrack'=>1)
    .return (rx1545_cur)
  rx1545_restart3539:
    repr_get_attr_obj rx1545_cstack, rx1545_cur, rx1545_curclass, "$!cstack"
  rx1545_fail3540:
    unless rx1545_bstack, rx1545_done3538
    pop $I19, rx1545_bstack
    if_null rx1545_cstack, rx1545_cstack_done3543
    unless rx1545_cstack, rx1545_cstack_done3543
    dec $I19
    set $P11, rx1545_cstack[$I19]
  rx1545_cstack_done3543:
    pop rx1545_rep, rx1545_bstack
    pop rx1545_pos, rx1545_bstack
    pop $I19, rx1545_bstack
    lt rx1545_pos, -1, rx1545_done3538
    lt rx1545_pos, 0, rx1545_fail3540
    eq $I19, 0, rx1545_fail3540
    nqp_islist $I20, rx1545_cstack
    unless $I20, rx1545_jump3541
    elements $I18, rx1545_bstack
    le $I18, 0, rx1545_cut3542
    dec $I18
    set $I18, rx1545_bstack[$I18]
  rx1545_cut3542:
    assign rx1545_cstack, $I18
  rx1545_jump3541:
    jump $I19
  rx1545_done3538:
    rx1545_cur."!cursor_fail"()
    .return (rx1545_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<lt>" :subid("cuid_207_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1385
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1549_start
    .local string rx1549_tgt
    .local int rx1549_pos
    .local int rx1549_off
    .local int rx1549_eos
    .local int rx1549_rep
    .local pmc rx1549_cur
    .local pmc rx1549_curclass
    .local pmc rx1549_bstack
    .local pmc rx1549_cstack
    rx1549_start = self."!cursor_start_all"()
    set rx1549_cur, rx1549_start[0]
    set rx1549_tgt, rx1549_start[1]
    set rx1549_pos, rx1549_start[2]
    set rx1549_curclass, rx1549_start[3]
    set rx1549_bstack, rx1549_start[4]
    set $I19, rx1549_start[5]
    store_lex unicode:"$\x{a2}", rx1549_cur
    length rx1549_eos, rx1549_tgt
    eq $I19, 1, rx1549_restart3552
    gt rx1549_pos, rx1549_eos, rx1549_fail3553
    repr_get_attr_int $I11, self, rx1549_curclass, "$!from"
    ne $I11, -1, rxscan1550_done3559
    goto rxscan1550_scan3558
  rxscan1550_loop3557:
    inc rx1549_pos
    gt rx1549_pos, rx1549_eos, rx1549_fail3553
    repr_bind_attr_int rx1549_cur, rx1549_curclass, "$!from", rx1549_pos
  rxscan1550_scan3558:
    nqp_rxmark rx1549_bstack, rxscan1550_loop3557, rx1549_pos, 0
  rxscan1550_done3559:
    nqp_rxmark rx1549_bstack, rxcap1551_fail3561, rx1549_pos, 0
    add $I11, rx1549_pos, 2
    gt $I11, rx1549_eos, rx1549_fail3553
    substr $S10, rx1549_tgt, rx1549_pos, 2
    ne $S10, ucs4:"lt", rx1549_fail3553
    add rx1549_pos, 2
    nqp_rxpeek $I19, rx1549_bstack, rxcap1551_fail3561
    inc $I19
    set $I11, rx1549_bstack[$I19]
    repr_bind_attr_int rx1549_cur, rx1549_curclass, "$!pos", rx1549_pos
    $P11 = rx1549_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1549_pos)
    rx1549_cstack = rx1549_cur."!cursor_capture"($P11, "sym")
    goto rxcap1551_done3560
  rxcap1551_fail3561:
    goto rx1549_fail3553
  rxcap1551_done3560:
    repr_bind_attr_int rx1549_cur, rx1549_curclass, "$!pos", rx1549_pos
    $P11 = rx1549_cur."O"("%relational, :op<islt_s>")
    repr_get_attr_int $I11, $P11, rx1549_curclass, "$!pos"
    lt $I11, 0, rx1549_fail3553
    nqp_rxmark rx1549_bstack, rxsubrule1552_pass3562, -1, 0
  rxsubrule1552_pass3562:
    rx1549_cstack = rx1549_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1549_pos, $P11, rx1549_curclass, "$!pos"
    rx1549_cur."!cursor_pass"(rx1549_pos, "infix:sym<lt>", 'backtrack'=>1)
    .return (rx1549_cur)
  rx1549_restart3552:
    repr_get_attr_obj rx1549_cstack, rx1549_cur, rx1549_curclass, "$!cstack"
  rx1549_fail3553:
    unless rx1549_bstack, rx1549_done3551
    pop $I19, rx1549_bstack
    if_null rx1549_cstack, rx1549_cstack_done3556
    unless rx1549_cstack, rx1549_cstack_done3556
    dec $I19
    set $P11, rx1549_cstack[$I19]
  rx1549_cstack_done3556:
    pop rx1549_rep, rx1549_bstack
    pop rx1549_pos, rx1549_bstack
    pop $I19, rx1549_bstack
    lt rx1549_pos, -1, rx1549_done3551
    lt rx1549_pos, 0, rx1549_fail3553
    eq $I19, 0, rx1549_fail3553
    nqp_islist $I20, rx1549_cstack
    unless $I20, rx1549_jump3554
    elements $I18, rx1549_bstack
    le $I18, 0, rx1549_cut3555
    dec $I18
    set $I18, rx1549_bstack[$I18]
  rx1549_cut3555:
    assign rx1549_cstack, $I18
  rx1549_jump3554:
    jump $I19
  rx1549_done3551:
    rx1549_cur."!cursor_fail"()
    .return (rx1549_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<gt>" :subid("cuid_208_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1386
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1553_start
    .local string rx1553_tgt
    .local int rx1553_pos
    .local int rx1553_off
    .local int rx1553_eos
    .local int rx1553_rep
    .local pmc rx1553_cur
    .local pmc rx1553_curclass
    .local pmc rx1553_bstack
    .local pmc rx1553_cstack
    rx1553_start = self."!cursor_start_all"()
    set rx1553_cur, rx1553_start[0]
    set rx1553_tgt, rx1553_start[1]
    set rx1553_pos, rx1553_start[2]
    set rx1553_curclass, rx1553_start[3]
    set rx1553_bstack, rx1553_start[4]
    set $I19, rx1553_start[5]
    store_lex unicode:"$\x{a2}", rx1553_cur
    length rx1553_eos, rx1553_tgt
    eq $I19, 1, rx1553_restart3565
    gt rx1553_pos, rx1553_eos, rx1553_fail3566
    repr_get_attr_int $I11, self, rx1553_curclass, "$!from"
    ne $I11, -1, rxscan1554_done3572
    goto rxscan1554_scan3571
  rxscan1554_loop3570:
    inc rx1553_pos
    gt rx1553_pos, rx1553_eos, rx1553_fail3566
    repr_bind_attr_int rx1553_cur, rx1553_curclass, "$!from", rx1553_pos
  rxscan1554_scan3571:
    nqp_rxmark rx1553_bstack, rxscan1554_loop3570, rx1553_pos, 0
  rxscan1554_done3572:
    nqp_rxmark rx1553_bstack, rxcap1555_fail3574, rx1553_pos, 0
    add $I11, rx1553_pos, 2
    gt $I11, rx1553_eos, rx1553_fail3566
    substr $S10, rx1553_tgt, rx1553_pos, 2
    ne $S10, ucs4:"gt", rx1553_fail3566
    add rx1553_pos, 2
    nqp_rxpeek $I19, rx1553_bstack, rxcap1555_fail3574
    inc $I19
    set $I11, rx1553_bstack[$I19]
    repr_bind_attr_int rx1553_cur, rx1553_curclass, "$!pos", rx1553_pos
    $P11 = rx1553_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1553_pos)
    rx1553_cstack = rx1553_cur."!cursor_capture"($P11, "sym")
    goto rxcap1555_done3573
  rxcap1555_fail3574:
    goto rx1553_fail3566
  rxcap1555_done3573:
    repr_bind_attr_int rx1553_cur, rx1553_curclass, "$!pos", rx1553_pos
    $P11 = rx1553_cur."O"("%relational, :op<isgt_s>")
    repr_get_attr_int $I11, $P11, rx1553_curclass, "$!pos"
    lt $I11, 0, rx1553_fail3566
    nqp_rxmark rx1553_bstack, rxsubrule1556_pass3575, -1, 0
  rxsubrule1556_pass3575:
    rx1553_cstack = rx1553_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1553_pos, $P11, rx1553_curclass, "$!pos"
    rx1553_cur."!cursor_pass"(rx1553_pos, "infix:sym<gt>", 'backtrack'=>1)
    .return (rx1553_cur)
  rx1553_restart3565:
    repr_get_attr_obj rx1553_cstack, rx1553_cur, rx1553_curclass, "$!cstack"
  rx1553_fail3566:
    unless rx1553_bstack, rx1553_done3564
    pop $I19, rx1553_bstack
    if_null rx1553_cstack, rx1553_cstack_done3569
    unless rx1553_cstack, rx1553_cstack_done3569
    dec $I19
    set $P11, rx1553_cstack[$I19]
  rx1553_cstack_done3569:
    pop rx1553_rep, rx1553_bstack
    pop rx1553_pos, rx1553_bstack
    pop $I19, rx1553_bstack
    lt rx1553_pos, -1, rx1553_done3564
    lt rx1553_pos, 0, rx1553_fail3566
    eq $I19, 0, rx1553_fail3566
    nqp_islist $I20, rx1553_cstack
    unless $I20, rx1553_jump3567
    elements $I18, rx1553_bstack
    le $I18, 0, rx1553_cut3568
    dec $I18
    set $I18, rx1553_bstack[$I18]
  rx1553_cut3568:
    assign rx1553_cstack, $I18
  rx1553_jump3567:
    jump $I19
  rx1553_done3564:
    rx1553_cur."!cursor_fail"()
    .return (rx1553_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<=:=>" :subid("cuid_209_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1387
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1557_start
    .local string rx1557_tgt
    .local int rx1557_pos
    .local int rx1557_off
    .local int rx1557_eos
    .local int rx1557_rep
    .local pmc rx1557_cur
    .local pmc rx1557_curclass
    .local pmc rx1557_bstack
    .local pmc rx1557_cstack
    rx1557_start = self."!cursor_start_all"()
    set rx1557_cur, rx1557_start[0]
    set rx1557_tgt, rx1557_start[1]
    set rx1557_pos, rx1557_start[2]
    set rx1557_curclass, rx1557_start[3]
    set rx1557_bstack, rx1557_start[4]
    set $I19, rx1557_start[5]
    store_lex unicode:"$\x{a2}", rx1557_cur
    length rx1557_eos, rx1557_tgt
    eq $I19, 1, rx1557_restart3578
    gt rx1557_pos, rx1557_eos, rx1557_fail3579
    repr_get_attr_int $I11, self, rx1557_curclass, "$!from"
    ne $I11, -1, rxscan1558_done3585
    goto rxscan1558_scan3584
  rxscan1558_loop3583:
    inc rx1557_pos
    gt rx1557_pos, rx1557_eos, rx1557_fail3579
    repr_bind_attr_int rx1557_cur, rx1557_curclass, "$!from", rx1557_pos
  rxscan1558_scan3584:
    nqp_rxmark rx1557_bstack, rxscan1558_loop3583, rx1557_pos, 0
  rxscan1558_done3585:
    nqp_rxmark rx1557_bstack, rxcap1559_fail3587, rx1557_pos, 0
    add $I11, rx1557_pos, 3
    gt $I11, rx1557_eos, rx1557_fail3579
    substr $S10, rx1557_tgt, rx1557_pos, 3
    ne $S10, ucs4:"=:=", rx1557_fail3579
    add rx1557_pos, 3
    nqp_rxpeek $I19, rx1557_bstack, rxcap1559_fail3587
    inc $I19
    set $I11, rx1557_bstack[$I19]
    repr_bind_attr_int rx1557_cur, rx1557_curclass, "$!pos", rx1557_pos
    $P11 = rx1557_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1557_pos)
    rx1557_cstack = rx1557_cur."!cursor_capture"($P11, "sym")
    goto rxcap1559_done3586
  rxcap1559_fail3587:
    goto rx1557_fail3579
  rxcap1559_done3586:
    repr_bind_attr_int rx1557_cur, rx1557_curclass, "$!pos", rx1557_pos
    $P11 = rx1557_cur."O"("%relational, :op<eqaddr>")
    repr_get_attr_int $I11, $P11, rx1557_curclass, "$!pos"
    lt $I11, 0, rx1557_fail3579
    nqp_rxmark rx1557_bstack, rxsubrule1560_pass3588, -1, 0
  rxsubrule1560_pass3588:
    rx1557_cstack = rx1557_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1557_pos, $P11, rx1557_curclass, "$!pos"
    rx1557_cur."!cursor_pass"(rx1557_pos, "infix:sym<=:=>", 'backtrack'=>1)
    .return (rx1557_cur)
  rx1557_restart3578:
    repr_get_attr_obj rx1557_cstack, rx1557_cur, rx1557_curclass, "$!cstack"
  rx1557_fail3579:
    unless rx1557_bstack, rx1557_done3577
    pop $I19, rx1557_bstack
    if_null rx1557_cstack, rx1557_cstack_done3582
    unless rx1557_cstack, rx1557_cstack_done3582
    dec $I19
    set $P11, rx1557_cstack[$I19]
  rx1557_cstack_done3582:
    pop rx1557_rep, rx1557_bstack
    pop rx1557_pos, rx1557_bstack
    pop $I19, rx1557_bstack
    lt rx1557_pos, -1, rx1557_done3577
    lt rx1557_pos, 0, rx1557_fail3579
    eq $I19, 0, rx1557_fail3579
    nqp_islist $I20, rx1557_cstack
    unless $I20, rx1557_jump3580
    elements $I18, rx1557_bstack
    le $I18, 0, rx1557_cut3581
    dec $I18
    set $I18, rx1557_bstack[$I18]
  rx1557_cut3581:
    assign rx1557_cstack, $I18
  rx1557_jump3580:
    jump $I19
  rx1557_done3577:
    rx1557_cur."!cursor_fail"()
    .return (rx1557_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<~~>" :subid("cuid_210_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1388
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1561_start
    .local string rx1561_tgt
    .local int rx1561_pos
    .local int rx1561_off
    .local int rx1561_eos
    .local int rx1561_rep
    .local pmc rx1561_cur
    .local pmc rx1561_curclass
    .local pmc rx1561_bstack
    .local pmc rx1561_cstack
    rx1561_start = self."!cursor_start_all"()
    set rx1561_cur, rx1561_start[0]
    set rx1561_tgt, rx1561_start[1]
    set rx1561_pos, rx1561_start[2]
    set rx1561_curclass, rx1561_start[3]
    set rx1561_bstack, rx1561_start[4]
    set $I19, rx1561_start[5]
    store_lex unicode:"$\x{a2}", rx1561_cur
    length rx1561_eos, rx1561_tgt
    eq $I19, 1, rx1561_restart3591
    gt rx1561_pos, rx1561_eos, rx1561_fail3592
    repr_get_attr_int $I11, self, rx1561_curclass, "$!from"
    ne $I11, -1, rxscan1562_done3598
    goto rxscan1562_scan3597
  rxscan1562_loop3596:
    inc rx1561_pos
    gt rx1561_pos, rx1561_eos, rx1561_fail3592
    repr_bind_attr_int rx1561_cur, rx1561_curclass, "$!from", rx1561_pos
  rxscan1562_scan3597:
    nqp_rxmark rx1561_bstack, rxscan1562_loop3596, rx1561_pos, 0
  rxscan1562_done3598:
    nqp_rxmark rx1561_bstack, rxcap1563_fail3600, rx1561_pos, 0
    add $I11, rx1561_pos, 2
    gt $I11, rx1561_eos, rx1561_fail3592
    substr $S10, rx1561_tgt, rx1561_pos, 2
    ne $S10, ucs4:"~~", rx1561_fail3592
    add rx1561_pos, 2
    nqp_rxpeek $I19, rx1561_bstack, rxcap1563_fail3600
    inc $I19
    set $I11, rx1561_bstack[$I19]
    repr_bind_attr_int rx1561_cur, rx1561_curclass, "$!pos", rx1561_pos
    $P11 = rx1561_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1561_pos)
    rx1561_cstack = rx1561_cur."!cursor_capture"($P11, "sym")
    goto rxcap1563_done3599
  rxcap1563_fail3600:
    goto rx1561_fail3592
  rxcap1563_done3599:
    repr_bind_attr_int rx1561_cur, rx1561_curclass, "$!pos", rx1561_pos
    $P11 = rx1561_cur."O"("%relational, :reducecheck<smartmatch>")
    repr_get_attr_int $I11, $P11, rx1561_curclass, "$!pos"
    lt $I11, 0, rx1561_fail3592
    nqp_rxmark rx1561_bstack, rxsubrule1564_pass3601, -1, 0
  rxsubrule1564_pass3601:
    rx1561_cstack = rx1561_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1561_pos, $P11, rx1561_curclass, "$!pos"
    rx1561_cur."!cursor_pass"(rx1561_pos, "infix:sym<~~>", 'backtrack'=>1)
    .return (rx1561_cur)
  rx1561_restart3591:
    repr_get_attr_obj rx1561_cstack, rx1561_cur, rx1561_curclass, "$!cstack"
  rx1561_fail3592:
    unless rx1561_bstack, rx1561_done3590
    pop $I19, rx1561_bstack
    if_null rx1561_cstack, rx1561_cstack_done3595
    unless rx1561_cstack, rx1561_cstack_done3595
    dec $I19
    set $P11, rx1561_cstack[$I19]
  rx1561_cstack_done3595:
    pop rx1561_rep, rx1561_bstack
    pop rx1561_pos, rx1561_bstack
    pop $I19, rx1561_bstack
    lt rx1561_pos, -1, rx1561_done3590
    lt rx1561_pos, 0, rx1561_fail3592
    eq $I19, 0, rx1561_fail3592
    nqp_islist $I20, rx1561_cstack
    unless $I20, rx1561_jump3593
    elements $I18, rx1561_bstack
    le $I18, 0, rx1561_cut3594
    dec $I18
    set $I18, rx1561_bstack[$I18]
  rx1561_cut3594:
    assign rx1561_cstack, $I18
  rx1561_jump3593:
    jump $I19
  rx1561_done3590:
    rx1561_cur."!cursor_fail"()
    .return (rx1561_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<&&>" :subid("cuid_211_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1390
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1565_start
    .local string rx1565_tgt
    .local int rx1565_pos
    .local int rx1565_off
    .local int rx1565_eos
    .local int rx1565_rep
    .local pmc rx1565_cur
    .local pmc rx1565_curclass
    .local pmc rx1565_bstack
    .local pmc rx1565_cstack
    rx1565_start = self."!cursor_start_all"()
    set rx1565_cur, rx1565_start[0]
    set rx1565_tgt, rx1565_start[1]
    set rx1565_pos, rx1565_start[2]
    set rx1565_curclass, rx1565_start[3]
    set rx1565_bstack, rx1565_start[4]
    set $I19, rx1565_start[5]
    store_lex unicode:"$\x{a2}", rx1565_cur
    length rx1565_eos, rx1565_tgt
    eq $I19, 1, rx1565_restart3604
    gt rx1565_pos, rx1565_eos, rx1565_fail3605
    repr_get_attr_int $I11, self, rx1565_curclass, "$!from"
    ne $I11, -1, rxscan1566_done3611
    goto rxscan1566_scan3610
  rxscan1566_loop3609:
    inc rx1565_pos
    gt rx1565_pos, rx1565_eos, rx1565_fail3605
    repr_bind_attr_int rx1565_cur, rx1565_curclass, "$!from", rx1565_pos
  rxscan1566_scan3610:
    nqp_rxmark rx1565_bstack, rxscan1566_loop3609, rx1565_pos, 0
  rxscan1566_done3611:
    nqp_rxmark rx1565_bstack, rxcap1567_fail3613, rx1565_pos, 0
    add $I11, rx1565_pos, 2
    gt $I11, rx1565_eos, rx1565_fail3605
    substr $S10, rx1565_tgt, rx1565_pos, 2
    ne $S10, ucs4:"&&", rx1565_fail3605
    add rx1565_pos, 2
    nqp_rxpeek $I19, rx1565_bstack, rxcap1567_fail3613
    inc $I19
    set $I11, rx1565_bstack[$I19]
    repr_bind_attr_int rx1565_cur, rx1565_curclass, "$!pos", rx1565_pos
    $P11 = rx1565_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1565_pos)
    rx1565_cstack = rx1565_cur."!cursor_capture"($P11, "sym")
    goto rxcap1567_done3612
  rxcap1567_fail3613:
    goto rx1565_fail3605
  rxcap1567_done3612:
    repr_bind_attr_int rx1565_cur, rx1565_curclass, "$!pos", rx1565_pos
    $P11 = rx1565_cur."O"("%tight_and, :op<if>")
    repr_get_attr_int $I11, $P11, rx1565_curclass, "$!pos"
    lt $I11, 0, rx1565_fail3605
    nqp_rxmark rx1565_bstack, rxsubrule1568_pass3614, -1, 0
  rxsubrule1568_pass3614:
    rx1565_cstack = rx1565_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1565_pos, $P11, rx1565_curclass, "$!pos"
    rx1565_cur."!cursor_pass"(rx1565_pos, "infix:sym<&&>", 'backtrack'=>1)
    .return (rx1565_cur)
  rx1565_restart3604:
    repr_get_attr_obj rx1565_cstack, rx1565_cur, rx1565_curclass, "$!cstack"
  rx1565_fail3605:
    unless rx1565_bstack, rx1565_done3603
    pop $I19, rx1565_bstack
    if_null rx1565_cstack, rx1565_cstack_done3608
    unless rx1565_cstack, rx1565_cstack_done3608
    dec $I19
    set $P11, rx1565_cstack[$I19]
  rx1565_cstack_done3608:
    pop rx1565_rep, rx1565_bstack
    pop rx1565_pos, rx1565_bstack
    pop $I19, rx1565_bstack
    lt rx1565_pos, -1, rx1565_done3603
    lt rx1565_pos, 0, rx1565_fail3605
    eq $I19, 0, rx1565_fail3605
    nqp_islist $I20, rx1565_cstack
    unless $I20, rx1565_jump3606
    elements $I18, rx1565_bstack
    le $I18, 0, rx1565_cut3607
    dec $I18
    set $I18, rx1565_bstack[$I18]
  rx1565_cut3607:
    assign rx1565_cstack, $I18
  rx1565_jump3606:
    jump $I19
  rx1565_done3603:
    rx1565_cur."!cursor_fail"()
    .return (rx1565_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<||>" :subid("cuid_212_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1392
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1569_start
    .local string rx1569_tgt
    .local int rx1569_pos
    .local int rx1569_off
    .local int rx1569_eos
    .local int rx1569_rep
    .local pmc rx1569_cur
    .local pmc rx1569_curclass
    .local pmc rx1569_bstack
    .local pmc rx1569_cstack
    rx1569_start = self."!cursor_start_all"()
    set rx1569_cur, rx1569_start[0]
    set rx1569_tgt, rx1569_start[1]
    set rx1569_pos, rx1569_start[2]
    set rx1569_curclass, rx1569_start[3]
    set rx1569_bstack, rx1569_start[4]
    set $I19, rx1569_start[5]
    store_lex unicode:"$\x{a2}", rx1569_cur
    length rx1569_eos, rx1569_tgt
    eq $I19, 1, rx1569_restart3617
    gt rx1569_pos, rx1569_eos, rx1569_fail3618
    repr_get_attr_int $I11, self, rx1569_curclass, "$!from"
    ne $I11, -1, rxscan1570_done3624
    goto rxscan1570_scan3623
  rxscan1570_loop3622:
    inc rx1569_pos
    gt rx1569_pos, rx1569_eos, rx1569_fail3618
    repr_bind_attr_int rx1569_cur, rx1569_curclass, "$!from", rx1569_pos
  rxscan1570_scan3623:
    nqp_rxmark rx1569_bstack, rxscan1570_loop3622, rx1569_pos, 0
  rxscan1570_done3624:
    nqp_rxmark rx1569_bstack, rxcap1571_fail3626, rx1569_pos, 0
    add $I11, rx1569_pos, 2
    gt $I11, rx1569_eos, rx1569_fail3618
    substr $S10, rx1569_tgt, rx1569_pos, 2
    ne $S10, ucs4:"||", rx1569_fail3618
    add rx1569_pos, 2
    nqp_rxpeek $I19, rx1569_bstack, rxcap1571_fail3626
    inc $I19
    set $I11, rx1569_bstack[$I19]
    repr_bind_attr_int rx1569_cur, rx1569_curclass, "$!pos", rx1569_pos
    $P11 = rx1569_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1569_pos)
    rx1569_cstack = rx1569_cur."!cursor_capture"($P11, "sym")
    goto rxcap1571_done3625
  rxcap1571_fail3626:
    goto rx1569_fail3618
  rxcap1571_done3625:
    repr_bind_attr_int rx1569_cur, rx1569_curclass, "$!pos", rx1569_pos
    $P11 = rx1569_cur."O"("%tight_or, :op<unless>")
    repr_get_attr_int $I11, $P11, rx1569_curclass, "$!pos"
    lt $I11, 0, rx1569_fail3618
    nqp_rxmark rx1569_bstack, rxsubrule1572_pass3627, -1, 0
  rxsubrule1572_pass3627:
    rx1569_cstack = rx1569_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1569_pos, $P11, rx1569_curclass, "$!pos"
    rx1569_cur."!cursor_pass"(rx1569_pos, "infix:sym<||>", 'backtrack'=>1)
    .return (rx1569_cur)
  rx1569_restart3617:
    repr_get_attr_obj rx1569_cstack, rx1569_cur, rx1569_curclass, "$!cstack"
  rx1569_fail3618:
    unless rx1569_bstack, rx1569_done3616
    pop $I19, rx1569_bstack
    if_null rx1569_cstack, rx1569_cstack_done3621
    unless rx1569_cstack, rx1569_cstack_done3621
    dec $I19
    set $P11, rx1569_cstack[$I19]
  rx1569_cstack_done3621:
    pop rx1569_rep, rx1569_bstack
    pop rx1569_pos, rx1569_bstack
    pop $I19, rx1569_bstack
    lt rx1569_pos, -1, rx1569_done3616
    lt rx1569_pos, 0, rx1569_fail3618
    eq $I19, 0, rx1569_fail3618
    nqp_islist $I20, rx1569_cstack
    unless $I20, rx1569_jump3619
    elements $I18, rx1569_bstack
    le $I18, 0, rx1569_cut3620
    dec $I18
    set $I18, rx1569_bstack[$I18]
  rx1569_cut3620:
    assign rx1569_cstack, $I18
  rx1569_jump3619:
    jump $I19
  rx1569_done3616:
    rx1569_cur."!cursor_fail"()
    .return (rx1569_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<//>" :subid("cuid_213_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1393
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1573_start
    .local string rx1573_tgt
    .local int rx1573_pos
    .local int rx1573_off
    .local int rx1573_eos
    .local int rx1573_rep
    .local pmc rx1573_cur
    .local pmc rx1573_curclass
    .local pmc rx1573_bstack
    .local pmc rx1573_cstack
    rx1573_start = self."!cursor_start_all"()
    set rx1573_cur, rx1573_start[0]
    set rx1573_tgt, rx1573_start[1]
    set rx1573_pos, rx1573_start[2]
    set rx1573_curclass, rx1573_start[3]
    set rx1573_bstack, rx1573_start[4]
    set $I19, rx1573_start[5]
    store_lex unicode:"$\x{a2}", rx1573_cur
    length rx1573_eos, rx1573_tgt
    eq $I19, 1, rx1573_restart3630
    gt rx1573_pos, rx1573_eos, rx1573_fail3631
    repr_get_attr_int $I11, self, rx1573_curclass, "$!from"
    ne $I11, -1, rxscan1574_done3637
    goto rxscan1574_scan3636
  rxscan1574_loop3635:
    inc rx1573_pos
    gt rx1573_pos, rx1573_eos, rx1573_fail3631
    repr_bind_attr_int rx1573_cur, rx1573_curclass, "$!from", rx1573_pos
  rxscan1574_scan3636:
    nqp_rxmark rx1573_bstack, rxscan1574_loop3635, rx1573_pos, 0
  rxscan1574_done3637:
    nqp_rxmark rx1573_bstack, rxcap1575_fail3639, rx1573_pos, 0
    add $I11, rx1573_pos, 2
    gt $I11, rx1573_eos, rx1573_fail3631
    substr $S10, rx1573_tgt, rx1573_pos, 2
    ne $S10, ucs4:"//", rx1573_fail3631
    add rx1573_pos, 2
    nqp_rxpeek $I19, rx1573_bstack, rxcap1575_fail3639
    inc $I19
    set $I11, rx1573_bstack[$I19]
    repr_bind_attr_int rx1573_cur, rx1573_curclass, "$!pos", rx1573_pos
    $P11 = rx1573_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1573_pos)
    rx1573_cstack = rx1573_cur."!cursor_capture"($P11, "sym")
    goto rxcap1575_done3638
  rxcap1575_fail3639:
    goto rx1573_fail3631
  rxcap1575_done3638:
    repr_bind_attr_int rx1573_cur, rx1573_curclass, "$!pos", rx1573_pos
    $P11 = rx1573_cur."O"("%tight_or, :op<defor>")
    repr_get_attr_int $I11, $P11, rx1573_curclass, "$!pos"
    lt $I11, 0, rx1573_fail3631
    nqp_rxmark rx1573_bstack, rxsubrule1576_pass3640, -1, 0
  rxsubrule1576_pass3640:
    rx1573_cstack = rx1573_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1573_pos, $P11, rx1573_curclass, "$!pos"
    rx1573_cur."!cursor_pass"(rx1573_pos, "infix:sym<//>", 'backtrack'=>1)
    .return (rx1573_cur)
  rx1573_restart3630:
    repr_get_attr_obj rx1573_cstack, rx1573_cur, rx1573_curclass, "$!cstack"
  rx1573_fail3631:
    unless rx1573_bstack, rx1573_done3629
    pop $I19, rx1573_bstack
    if_null rx1573_cstack, rx1573_cstack_done3634
    unless rx1573_cstack, rx1573_cstack_done3634
    dec $I19
    set $P11, rx1573_cstack[$I19]
  rx1573_cstack_done3634:
    pop rx1573_rep, rx1573_bstack
    pop rx1573_pos, rx1573_bstack
    pop $I19, rx1573_bstack
    lt rx1573_pos, -1, rx1573_done3629
    lt rx1573_pos, 0, rx1573_fail3631
    eq $I19, 0, rx1573_fail3631
    nqp_islist $I20, rx1573_cstack
    unless $I20, rx1573_jump3632
    elements $I18, rx1573_bstack
    le $I18, 0, rx1573_cut3633
    dec $I18
    set $I18, rx1573_bstack[$I18]
  rx1573_cut3633:
    assign rx1573_cstack, $I18
  rx1573_jump3632:
    jump $I19
  rx1573_done3629:
    rx1573_cur."!cursor_fail"()
    .return (rx1573_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<?? !!>" :subid("cuid_214_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1395
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1577_start
    .local string rx1577_tgt
    .local int rx1577_pos
    .local int rx1577_off
    .local int rx1577_eos
    .local int rx1577_rep
    .local pmc rx1577_cur
    .local pmc rx1577_curclass
    .local pmc rx1577_bstack
    .local pmc rx1577_cstack
    rx1577_start = self."!cursor_start_all"()
    set rx1577_cur, rx1577_start[0]
    set rx1577_tgt, rx1577_start[1]
    set rx1577_pos, rx1577_start[2]
    set rx1577_curclass, rx1577_start[3]
    set rx1577_bstack, rx1577_start[4]
    set $I19, rx1577_start[5]
    store_lex unicode:"$\x{a2}", rx1577_cur
    length rx1577_eos, rx1577_tgt
    eq $I19, 1, rx1577_restart3643
    gt rx1577_pos, rx1577_eos, rx1577_fail3644
    repr_get_attr_int $I11, self, rx1577_curclass, "$!from"
    ne $I11, -1, rxscan1578_done3650
    goto rxscan1578_scan3649
  rxscan1578_loop3648:
    inc rx1577_pos
    gt rx1577_pos, rx1577_eos, rx1577_fail3644
    repr_bind_attr_int rx1577_cur, rx1577_curclass, "$!from", rx1577_pos
  rxscan1578_scan3649:
    nqp_rxmark rx1577_bstack, rxscan1578_loop3648, rx1577_pos, 0
  rxscan1578_done3650:
    add $I11, rx1577_pos, 2
    gt $I11, rx1577_eos, rx1577_fail3644
    substr $S10, rx1577_tgt, rx1577_pos, 2
    ne $S10, ucs4:"??", rx1577_fail3644
    add rx1577_pos, 2
    repr_bind_attr_int rx1577_cur, rx1577_curclass, "$!pos", rx1577_pos
    $P11 = rx1577_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1577_curclass, "$!pos"
    lt $I11, 0, rx1577_fail3644
    repr_get_attr_int rx1577_pos, $P11, rx1577_curclass, "$!pos"
    repr_bind_attr_int rx1577_cur, rx1577_curclass, "$!pos", rx1577_pos
    $P11 = rx1577_cur."EXPR"("i=")
    repr_get_attr_int $I11, $P11, rx1577_curclass, "$!pos"
    lt $I11, 0, rx1577_fail3644
    nqp_rxmark rx1577_bstack, rxsubrule1580_pass3652, -1, 0
  rxsubrule1580_pass3652:
    rx1577_cstack = rx1577_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx1577_pos, $P11, rx1577_curclass, "$!pos"
    add $I11, rx1577_pos, 2
    gt $I11, rx1577_eos, rx1577_fail3644
    substr $S10, rx1577_tgt, rx1577_pos, 2
    ne $S10, ucs4:"!!", rx1577_fail3644
    add rx1577_pos, 2
    repr_bind_attr_int rx1577_cur, rx1577_curclass, "$!pos", rx1577_pos
    $P11 = rx1577_cur."O"("%conditional, :reducecheck<ternary>, :op<if>")
    repr_get_attr_int $I11, $P11, rx1577_curclass, "$!pos"
    lt $I11, 0, rx1577_fail3644
    nqp_rxmark rx1577_bstack, rxsubrule1581_pass3653, -1, 0
  rxsubrule1581_pass3653:
    rx1577_cstack = rx1577_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1577_pos, $P11, rx1577_curclass, "$!pos"
    rx1577_cur."!cursor_pass"(rx1577_pos, "infix:sym<?? !!>", 'backtrack'=>1)
    .return (rx1577_cur)
  rx1577_restart3643:
    repr_get_attr_obj rx1577_cstack, rx1577_cur, rx1577_curclass, "$!cstack"
  rx1577_fail3644:
    unless rx1577_bstack, rx1577_done3642
    pop $I19, rx1577_bstack
    if_null rx1577_cstack, rx1577_cstack_done3647
    unless rx1577_cstack, rx1577_cstack_done3647
    dec $I19
    set $P11, rx1577_cstack[$I19]
  rx1577_cstack_done3647:
    pop rx1577_rep, rx1577_bstack
    pop rx1577_pos, rx1577_bstack
    pop $I19, rx1577_bstack
    lt rx1577_pos, -1, rx1577_done3642
    lt rx1577_pos, 0, rx1577_fail3644
    eq $I19, 0, rx1577_fail3644
    nqp_islist $I20, rx1577_cstack
    unless $I20, rx1577_jump3645
    elements $I18, rx1577_bstack
    le $I18, 0, rx1577_cut3646
    dec $I18
    set $I18, rx1577_bstack[$I18]
  rx1577_cut3646:
    assign rx1577_cstack, $I18
  rx1577_jump3645:
    jump $I19
  rx1577_done3642:
    rx1577_cur."!cursor_fail"()
    .return (rx1577_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<=>" :subid("cuid_215_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1403
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1582_start
    .local string rx1582_tgt
    .local int rx1582_pos
    .local int rx1582_off
    .local int rx1582_eos
    .local int rx1582_rep
    .local pmc rx1582_cur
    .local pmc rx1582_curclass
    .local pmc rx1582_bstack
    .local pmc rx1582_cstack
    rx1582_start = self."!cursor_start_all"()
    set rx1582_cur, rx1582_start[0]
    set rx1582_tgt, rx1582_start[1]
    set rx1582_pos, rx1582_start[2]
    set rx1582_curclass, rx1582_start[3]
    set rx1582_bstack, rx1582_start[4]
    set $I19, rx1582_start[5]
    store_lex unicode:"$\x{a2}", rx1582_cur
    length rx1582_eos, rx1582_tgt
    eq $I19, 1, rx1582_restart3656
    gt rx1582_pos, rx1582_eos, rx1582_fail3657
    repr_get_attr_int $I11, self, rx1582_curclass, "$!from"
    ne $I11, -1, rxscan1583_done3663
    goto rxscan1583_scan3662
  rxscan1583_loop3661:
    inc rx1582_pos
    gt rx1582_pos, rx1582_eos, rx1582_fail3657
    repr_bind_attr_int rx1582_cur, rx1582_curclass, "$!from", rx1582_pos
  rxscan1583_scan3662:
    nqp_rxmark rx1582_bstack, rxscan1583_loop3661, rx1582_pos, 0
  rxscan1583_done3663:
    nqp_rxmark rx1582_bstack, rxcap1584_fail3665, rx1582_pos, 0
    add $I11, rx1582_pos, 1
    gt $I11, rx1582_eos, rx1582_fail3657
    substr $S10, rx1582_tgt, rx1582_pos, 1
    ne $S10, ucs4:"=", rx1582_fail3657
    add rx1582_pos, 1
    nqp_rxpeek $I19, rx1582_bstack, rxcap1584_fail3665
    inc $I19
    set $I11, rx1582_bstack[$I19]
    repr_bind_attr_int rx1582_cur, rx1582_curclass, "$!pos", rx1582_pos
    $P11 = rx1582_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1582_pos)
    rx1582_cstack = rx1582_cur."!cursor_capture"($P11, "sym")
    goto rxcap1584_done3664
  rxcap1584_fail3665:
    goto rx1582_fail3657
  rxcap1584_done3664:
    repr_bind_attr_int rx1582_cur, rx1582_curclass, "$!pos", rx1582_pos
    $P11 = rx1582_cur."panic"("Assignment (\"=\") not supported in NQP, use \":=\" instead")
    repr_get_attr_int $I11, $P11, rx1582_curclass, "$!pos"
    lt $I11, 0, rx1582_fail3657
    repr_get_attr_int rx1582_pos, $P11, rx1582_curclass, "$!pos"
    rx1582_cur."!cursor_pass"(rx1582_pos, "infix:sym<=>", 'backtrack'=>1)
    .return (rx1582_cur)
  rx1582_restart3656:
    repr_get_attr_obj rx1582_cstack, rx1582_cur, rx1582_curclass, "$!cstack"
  rx1582_fail3657:
    unless rx1582_bstack, rx1582_done3655
    pop $I19, rx1582_bstack
    if_null rx1582_cstack, rx1582_cstack_done3660
    unless rx1582_cstack, rx1582_cstack_done3660
    dec $I19
    set $P11, rx1582_cstack[$I19]
  rx1582_cstack_done3660:
    pop rx1582_rep, rx1582_bstack
    pop rx1582_pos, rx1582_bstack
    pop $I19, rx1582_bstack
    lt rx1582_pos, -1, rx1582_done3655
    lt rx1582_pos, 0, rx1582_fail3657
    eq $I19, 0, rx1582_fail3657
    nqp_islist $I20, rx1582_cstack
    unless $I20, rx1582_jump3658
    elements $I18, rx1582_bstack
    le $I18, 0, rx1582_cut3659
    dec $I18
    set $I18, rx1582_bstack[$I18]
  rx1582_cut3659:
    assign rx1582_cstack, $I18
  rx1582_jump3658:
    jump $I19
  rx1582_done3655:
    rx1582_cur."!cursor_fail"()
    .return (rx1582_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<:=>" :subid("cuid_216_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1406
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1586_start
    .local string rx1586_tgt
    .local int rx1586_pos
    .local int rx1586_off
    .local int rx1586_eos
    .local int rx1586_rep
    .local pmc rx1586_cur
    .local pmc rx1586_curclass
    .local pmc rx1586_bstack
    .local pmc rx1586_cstack
    rx1586_start = self."!cursor_start_all"()
    set rx1586_cur, rx1586_start[0]
    set rx1586_tgt, rx1586_start[1]
    set rx1586_pos, rx1586_start[2]
    set rx1586_curclass, rx1586_start[3]
    set rx1586_bstack, rx1586_start[4]
    set $I19, rx1586_start[5]
    store_lex unicode:"$\x{a2}", rx1586_cur
    length rx1586_eos, rx1586_tgt
    eq $I19, 1, rx1586_restart3669
    gt rx1586_pos, rx1586_eos, rx1586_fail3670
    repr_get_attr_int $I11, self, rx1586_curclass, "$!from"
    ne $I11, -1, rxscan1587_done3676
    goto rxscan1587_scan3675
  rxscan1587_loop3674:
    inc rx1586_pos
    gt rx1586_pos, rx1586_eos, rx1586_fail3670
    repr_bind_attr_int rx1586_cur, rx1586_curclass, "$!from", rx1586_pos
  rxscan1587_scan3675:
    nqp_rxmark rx1586_bstack, rxscan1587_loop3674, rx1586_pos, 0
  rxscan1587_done3676:
    nqp_rxmark rx1586_bstack, rxcap1588_fail3678, rx1586_pos, 0
    add $I11, rx1586_pos, 2
    gt $I11, rx1586_eos, rx1586_fail3670
    substr $S10, rx1586_tgt, rx1586_pos, 2
    ne $S10, ucs4:":=", rx1586_fail3670
    add rx1586_pos, 2
    nqp_rxpeek $I19, rx1586_bstack, rxcap1588_fail3678
    inc $I19
    set $I11, rx1586_bstack[$I19]
    repr_bind_attr_int rx1586_cur, rx1586_curclass, "$!pos", rx1586_pos
    $P11 = rx1586_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1586_pos)
    rx1586_cstack = rx1586_cur."!cursor_capture"($P11, "sym")
    goto rxcap1588_done3677
  rxcap1588_fail3678:
    goto rx1586_fail3670
  rxcap1588_done3677:
    repr_bind_attr_int rx1586_cur, rx1586_curclass, "$!pos", rx1586_pos
    $P11 = rx1586_cur."O"("%assignment, :op<bind>")
    repr_get_attr_int $I11, $P11, rx1586_curclass, "$!pos"
    lt $I11, 0, rx1586_fail3670
    nqp_rxmark rx1586_bstack, rxsubrule1589_pass3679, -1, 0
  rxsubrule1589_pass3679:
    rx1586_cstack = rx1586_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1586_pos, $P11, rx1586_curclass, "$!pos"
    rx1586_cur."!cursor_pass"(rx1586_pos, "infix:sym<:=>", 'backtrack'=>1)
    .return (rx1586_cur)
  rx1586_restart3669:
    repr_get_attr_obj rx1586_cstack, rx1586_cur, rx1586_curclass, "$!cstack"
  rx1586_fail3670:
    unless rx1586_bstack, rx1586_done3668
    pop $I19, rx1586_bstack
    if_null rx1586_cstack, rx1586_cstack_done3673
    unless rx1586_cstack, rx1586_cstack_done3673
    dec $I19
    set $P11, rx1586_cstack[$I19]
  rx1586_cstack_done3673:
    pop rx1586_rep, rx1586_bstack
    pop rx1586_pos, rx1586_bstack
    pop $I19, rx1586_bstack
    lt rx1586_pos, -1, rx1586_done3668
    lt rx1586_pos, 0, rx1586_fail3670
    eq $I19, 0, rx1586_fail3670
    nqp_islist $I20, rx1586_cstack
    unless $I20, rx1586_jump3671
    elements $I18, rx1586_bstack
    le $I18, 0, rx1586_cut3672
    dec $I18
    set $I18, rx1586_bstack[$I18]
  rx1586_cut3672:
    assign rx1586_cstack, $I18
  rx1586_jump3671:
    jump $I19
  rx1586_done3668:
    rx1586_cur."!cursor_fail"()
    .return (rx1586_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<::=>" :subid("cuid_217_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1407
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1590_start
    .local string rx1590_tgt
    .local int rx1590_pos
    .local int rx1590_off
    .local int rx1590_eos
    .local int rx1590_rep
    .local pmc rx1590_cur
    .local pmc rx1590_curclass
    .local pmc rx1590_bstack
    .local pmc rx1590_cstack
    rx1590_start = self."!cursor_start_all"()
    set rx1590_cur, rx1590_start[0]
    set rx1590_tgt, rx1590_start[1]
    set rx1590_pos, rx1590_start[2]
    set rx1590_curclass, rx1590_start[3]
    set rx1590_bstack, rx1590_start[4]
    set $I19, rx1590_start[5]
    store_lex unicode:"$\x{a2}", rx1590_cur
    length rx1590_eos, rx1590_tgt
    eq $I19, 1, rx1590_restart3682
    gt rx1590_pos, rx1590_eos, rx1590_fail3683
    repr_get_attr_int $I11, self, rx1590_curclass, "$!from"
    ne $I11, -1, rxscan1591_done3689
    goto rxscan1591_scan3688
  rxscan1591_loop3687:
    inc rx1590_pos
    gt rx1590_pos, rx1590_eos, rx1590_fail3683
    repr_bind_attr_int rx1590_cur, rx1590_curclass, "$!from", rx1590_pos
  rxscan1591_scan3688:
    nqp_rxmark rx1590_bstack, rxscan1591_loop3687, rx1590_pos, 0
  rxscan1591_done3689:
    nqp_rxmark rx1590_bstack, rxcap1592_fail3691, rx1590_pos, 0
    add $I11, rx1590_pos, 3
    gt $I11, rx1590_eos, rx1590_fail3683
    substr $S10, rx1590_tgt, rx1590_pos, 3
    ne $S10, ucs4:"::=", rx1590_fail3683
    add rx1590_pos, 3
    nqp_rxpeek $I19, rx1590_bstack, rxcap1592_fail3691
    inc $I19
    set $I11, rx1590_bstack[$I19]
    repr_bind_attr_int rx1590_cur, rx1590_curclass, "$!pos", rx1590_pos
    $P11 = rx1590_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1590_pos)
    rx1590_cstack = rx1590_cur."!cursor_capture"($P11, "sym")
    goto rxcap1592_done3690
  rxcap1592_fail3691:
    goto rx1590_fail3683
  rxcap1592_done3690:
    repr_bind_attr_int rx1590_cur, rx1590_curclass, "$!pos", rx1590_pos
    $P11 = rx1590_cur."O"("%assignment, :op<bind>")
    repr_get_attr_int $I11, $P11, rx1590_curclass, "$!pos"
    lt $I11, 0, rx1590_fail3683
    nqp_rxmark rx1590_bstack, rxsubrule1593_pass3692, -1, 0
  rxsubrule1593_pass3692:
    rx1590_cstack = rx1590_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1590_pos, $P11, rx1590_curclass, "$!pos"
    rx1590_cur."!cursor_pass"(rx1590_pos, "infix:sym<::=>", 'backtrack'=>1)
    .return (rx1590_cur)
  rx1590_restart3682:
    repr_get_attr_obj rx1590_cstack, rx1590_cur, rx1590_curclass, "$!cstack"
  rx1590_fail3683:
    unless rx1590_bstack, rx1590_done3681
    pop $I19, rx1590_bstack
    if_null rx1590_cstack, rx1590_cstack_done3686
    unless rx1590_cstack, rx1590_cstack_done3686
    dec $I19
    set $P11, rx1590_cstack[$I19]
  rx1590_cstack_done3686:
    pop rx1590_rep, rx1590_bstack
    pop rx1590_pos, rx1590_bstack
    pop $I19, rx1590_bstack
    lt rx1590_pos, -1, rx1590_done3681
    lt rx1590_pos, 0, rx1590_fail3683
    eq $I19, 0, rx1590_fail3683
    nqp_islist $I20, rx1590_cstack
    unless $I20, rx1590_jump3684
    elements $I18, rx1590_bstack
    le $I18, 0, rx1590_cut3685
    dec $I18
    set $I18, rx1590_bstack[$I18]
  rx1590_cut3685:
    assign rx1590_cstack, $I18
  rx1590_jump3684:
    jump $I19
  rx1590_done3681:
    rx1590_cur."!cursor_fail"()
    .return (rx1590_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<,>" :subid("cuid_218_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1409
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1594_start
    .local string rx1594_tgt
    .local int rx1594_pos
    .local int rx1594_off
    .local int rx1594_eos
    .local int rx1594_rep
    .local pmc rx1594_cur
    .local pmc rx1594_curclass
    .local pmc rx1594_bstack
    .local pmc rx1594_cstack
    rx1594_start = self."!cursor_start_all"()
    set rx1594_cur, rx1594_start[0]
    set rx1594_tgt, rx1594_start[1]
    set rx1594_pos, rx1594_start[2]
    set rx1594_curclass, rx1594_start[3]
    set rx1594_bstack, rx1594_start[4]
    set $I19, rx1594_start[5]
    store_lex unicode:"$\x{a2}", rx1594_cur
    length rx1594_eos, rx1594_tgt
    eq $I19, 1, rx1594_restart3695
    gt rx1594_pos, rx1594_eos, rx1594_fail3696
    repr_get_attr_int $I11, self, rx1594_curclass, "$!from"
    ne $I11, -1, rxscan1595_done3702
    goto rxscan1595_scan3701
  rxscan1595_loop3700:
    inc rx1594_pos
    gt rx1594_pos, rx1594_eos, rx1594_fail3696
    repr_bind_attr_int rx1594_cur, rx1594_curclass, "$!from", rx1594_pos
  rxscan1595_scan3701:
    nqp_rxmark rx1594_bstack, rxscan1595_loop3700, rx1594_pos, 0
  rxscan1595_done3702:
    nqp_rxmark rx1594_bstack, rxcap1596_fail3704, rx1594_pos, 0
    add $I11, rx1594_pos, 1
    gt $I11, rx1594_eos, rx1594_fail3696
    substr $S10, rx1594_tgt, rx1594_pos, 1
    ne $S10, ucs4:",", rx1594_fail3696
    add rx1594_pos, 1
    nqp_rxpeek $I19, rx1594_bstack, rxcap1596_fail3704
    inc $I19
    set $I11, rx1594_bstack[$I19]
    repr_bind_attr_int rx1594_cur, rx1594_curclass, "$!pos", rx1594_pos
    $P11 = rx1594_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1594_pos)
    rx1594_cstack = rx1594_cur."!cursor_capture"($P11, "sym")
    goto rxcap1596_done3703
  rxcap1596_fail3704:
    goto rx1594_fail3696
  rxcap1596_done3703:
    repr_bind_attr_int rx1594_cur, rx1594_curclass, "$!pos", rx1594_pos
    $P11 = rx1594_cur."O"("%comma, :op<list>")
    repr_get_attr_int $I11, $P11, rx1594_curclass, "$!pos"
    lt $I11, 0, rx1594_fail3696
    nqp_rxmark rx1594_bstack, rxsubrule1597_pass3705, -1, 0
  rxsubrule1597_pass3705:
    rx1594_cstack = rx1594_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1594_pos, $P11, rx1594_curclass, "$!pos"
    rx1594_cur."!cursor_pass"(rx1594_pos, "infix:sym<,>", 'backtrack'=>1)
    .return (rx1594_cur)
  rx1594_restart3695:
    repr_get_attr_obj rx1594_cstack, rx1594_cur, rx1594_curclass, "$!cstack"
  rx1594_fail3696:
    unless rx1594_bstack, rx1594_done3694
    pop $I19, rx1594_bstack
    if_null rx1594_cstack, rx1594_cstack_done3699
    unless rx1594_cstack, rx1594_cstack_done3699
    dec $I19
    set $P11, rx1594_cstack[$I19]
  rx1594_cstack_done3699:
    pop rx1594_rep, rx1594_bstack
    pop rx1594_pos, rx1594_bstack
    pop $I19, rx1594_bstack
    lt rx1594_pos, -1, rx1594_done3694
    lt rx1594_pos, 0, rx1594_fail3696
    eq $I19, 0, rx1594_fail3696
    nqp_islist $I20, rx1594_cstack
    unless $I20, rx1594_jump3697
    elements $I18, rx1594_bstack
    le $I18, 0, rx1594_cut3698
    dec $I18
    set $I18, rx1594_bstack[$I18]
  rx1594_cut3698:
    assign rx1594_cstack, $I18
  rx1594_jump3697:
    jump $I19
  rx1594_done3694:
    rx1594_cur."!cursor_fail"()
    .return (rx1594_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<return>" :subid("cuid_219_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1411
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_412_1361734139.417' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1598_start
    .local string rx1598_tgt
    .local int rx1598_pos
    .local int rx1598_off
    .local int rx1598_eos
    .local int rx1598_rep
    .local pmc rx1598_cur
    .local pmc rx1598_curclass
    .local pmc rx1598_bstack
    .local pmc rx1598_cstack
    rx1598_start = self."!cursor_start_all"()
    set rx1598_cur, rx1598_start[0]
    set rx1598_tgt, rx1598_start[1]
    set rx1598_pos, rx1598_start[2]
    set rx1598_curclass, rx1598_start[3]
    set rx1598_bstack, rx1598_start[4]
    set $I19, rx1598_start[5]
    store_lex unicode:"$\x{a2}", rx1598_cur
    length rx1598_eos, rx1598_tgt
    eq $I19, 1, rx1598_restart3708
    gt rx1598_pos, rx1598_eos, rx1598_fail3709
    repr_get_attr_int $I11, self, rx1598_curclass, "$!from"
    ne $I11, -1, rxscan1599_done3715
    goto rxscan1599_scan3714
  rxscan1599_loop3713:
    inc rx1598_pos
    gt rx1598_pos, rx1598_eos, rx1598_fail3709
    repr_bind_attr_int rx1598_cur, rx1598_curclass, "$!from", rx1598_pos
  rxscan1599_scan3714:
    nqp_rxmark rx1598_bstack, rxscan1599_loop3713, rx1598_pos, 0
  rxscan1599_done3715:
    nqp_rxmark rx1598_bstack, rxcap1600_fail3717, rx1598_pos, 0
    add $I11, rx1598_pos, 6
    gt $I11, rx1598_eos, rx1598_fail3709
    substr $S10, rx1598_tgt, rx1598_pos, 6
    ne $S10, ucs4:"return", rx1598_fail3709
    add rx1598_pos, 6
    nqp_rxpeek $I19, rx1598_bstack, rxcap1600_fail3717
    inc $I19
    set $I11, rx1598_bstack[$I19]
    repr_bind_attr_int rx1598_cur, rx1598_curclass, "$!pos", rx1598_pos
    $P11 = rx1598_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1598_pos)
    rx1598_cstack = rx1598_cur."!cursor_capture"($P11, "sym")
    goto rxcap1600_done3716
  rxcap1600_fail3717:
    goto rx1598_fail3709
  rxcap1600_done3716:
    ge rx1598_pos, rx1598_eos, rx1598_fail3709
    is_cclass $I11, .CCLASS_WHITESPACE, rx1598_tgt, rx1598_pos
    unless $I11, rx1598_fail3709
    add rx1598_pos, 1
    repr_bind_attr_int rx1598_cur, rx1598_curclass, "$!pos", rx1598_pos
    $P11 = rx1598_cur."O"("%list_prefix")
    repr_get_attr_int $I11, $P11, rx1598_curclass, "$!pos"
    lt $I11, 0, rx1598_fail3709
    nqp_rxmark rx1598_bstack, rxsubrule1601_pass3718, -1, 0
  rxsubrule1601_pass3718:
    rx1598_cstack = rx1598_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1598_pos, $P11, rx1598_curclass, "$!pos"
    repr_bind_attr_int rx1598_cur, rx1598_curclass, "$!pos", rx1598_pos
    store_lex unicode:"$\x{a2}", rx1598_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_412_1361734139.417' 
    capture_lex $P5002
    $P5003 = $P5002()
    rx1598_cur."!cursor_pass"(rx1598_pos, "prefix:sym<return>", 'backtrack'=>1)
    .return (rx1598_cur)
  rx1598_restart3708:
    repr_get_attr_obj rx1598_cstack, rx1598_cur, rx1598_curclass, "$!cstack"
  rx1598_fail3709:
    unless rx1598_bstack, rx1598_done3707
    pop $I19, rx1598_bstack
    if_null rx1598_cstack, rx1598_cstack_done3712
    unless rx1598_cstack, rx1598_cstack_done3712
    dec $I19
    set $P11, rx1598_cstack[$I19]
  rx1598_cstack_done3712:
    pop rx1598_rep, rx1598_bstack
    pop rx1598_pos, rx1598_bstack
    pop $I19, rx1598_bstack
    lt rx1598_pos, -1, rx1598_done3707
    lt rx1598_pos, 0, rx1598_fail3709
    eq $I19, 0, rx1598_fail3709
    nqp_islist $I20, rx1598_cstack
    unless $I20, rx1598_jump3710
    elements $I18, rx1598_bstack
    le $I18, 0, rx1598_cut3711
    dec $I18
    set $I18, rx1598_bstack[$I18]
  rx1598_cut3711:
    assign rx1598_cstack, $I18
  rx1598_jump3710:
    jump $I19
  rx1598_done3707:
    rx1598_cur."!cursor_fail"()
    .return (rx1598_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_412_1361734139.417") :anon :lex :outer("cuid_219_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1411

    box $P5001, 1
    store_dynamic_lex "$*RETURN_USED", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<make>" :subid("cuid_220_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1412
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1602_start
    .local string rx1602_tgt
    .local int rx1602_pos
    .local int rx1602_off
    .local int rx1602_eos
    .local int rx1602_rep
    .local pmc rx1602_cur
    .local pmc rx1602_curclass
    .local pmc rx1602_bstack
    .local pmc rx1602_cstack
    rx1602_start = self."!cursor_start_all"()
    set rx1602_cur, rx1602_start[0]
    set rx1602_tgt, rx1602_start[1]
    set rx1602_pos, rx1602_start[2]
    set rx1602_curclass, rx1602_start[3]
    set rx1602_bstack, rx1602_start[4]
    set $I19, rx1602_start[5]
    store_lex unicode:"$\x{a2}", rx1602_cur
    length rx1602_eos, rx1602_tgt
    eq $I19, 1, rx1602_restart3721
    gt rx1602_pos, rx1602_eos, rx1602_fail3722
    repr_get_attr_int $I11, self, rx1602_curclass, "$!from"
    ne $I11, -1, rxscan1603_done3728
    goto rxscan1603_scan3727
  rxscan1603_loop3726:
    inc rx1602_pos
    gt rx1602_pos, rx1602_eos, rx1602_fail3722
    repr_bind_attr_int rx1602_cur, rx1602_curclass, "$!from", rx1602_pos
  rxscan1603_scan3727:
    nqp_rxmark rx1602_bstack, rxscan1603_loop3726, rx1602_pos, 0
  rxscan1603_done3728:
    nqp_rxmark rx1602_bstack, rxcap1604_fail3730, rx1602_pos, 0
    add $I11, rx1602_pos, 4
    gt $I11, rx1602_eos, rx1602_fail3722
    substr $S10, rx1602_tgt, rx1602_pos, 4
    ne $S10, ucs4:"make", rx1602_fail3722
    add rx1602_pos, 4
    nqp_rxpeek $I19, rx1602_bstack, rxcap1604_fail3730
    inc $I19
    set $I11, rx1602_bstack[$I19]
    repr_bind_attr_int rx1602_cur, rx1602_curclass, "$!pos", rx1602_pos
    $P11 = rx1602_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1602_pos)
    rx1602_cstack = rx1602_cur."!cursor_capture"($P11, "sym")
    goto rxcap1604_done3729
  rxcap1604_fail3730:
    goto rx1602_fail3722
  rxcap1604_done3729:
    ge rx1602_pos, rx1602_eos, rx1602_fail3722
    is_cclass $I11, .CCLASS_WHITESPACE, rx1602_tgt, rx1602_pos
    unless $I11, rx1602_fail3722
    add rx1602_pos, 1
    repr_bind_attr_int rx1602_cur, rx1602_curclass, "$!pos", rx1602_pos
    $P11 = rx1602_cur."O"("%list_prefix")
    repr_get_attr_int $I11, $P11, rx1602_curclass, "$!pos"
    lt $I11, 0, rx1602_fail3722
    nqp_rxmark rx1602_bstack, rxsubrule1605_pass3731, -1, 0
  rxsubrule1605_pass3731:
    rx1602_cstack = rx1602_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1602_pos, $P11, rx1602_curclass, "$!pos"
    rx1602_cur."!cursor_pass"(rx1602_pos, "prefix:sym<make>", 'backtrack'=>1)
    .return (rx1602_cur)
  rx1602_restart3721:
    repr_get_attr_obj rx1602_cstack, rx1602_cur, rx1602_curclass, "$!cstack"
  rx1602_fail3722:
    unless rx1602_bstack, rx1602_done3720
    pop $I19, rx1602_bstack
    if_null rx1602_cstack, rx1602_cstack_done3725
    unless rx1602_cstack, rx1602_cstack_done3725
    dec $I19
    set $P11, rx1602_cstack[$I19]
  rx1602_cstack_done3725:
    pop rx1602_rep, rx1602_bstack
    pop rx1602_pos, rx1602_bstack
    pop $I19, rx1602_bstack
    lt rx1602_pos, -1, rx1602_done3720
    lt rx1602_pos, 0, rx1602_fail3722
    eq $I19, 0, rx1602_fail3722
    nqp_islist $I20, rx1602_cstack
    unless $I20, rx1602_jump3723
    elements $I18, rx1602_bstack
    le $I18, 0, rx1602_cut3724
    dec $I18
    set $I18, rx1602_bstack[$I18]
  rx1602_cut3724:
    assign rx1602_cstack, $I18
  rx1602_jump3723:
    jump $I19
  rx1602_done3720:
    rx1602_cur."!cursor_fail"()
    .return (rx1602_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<last>" :subid("cuid_221_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1413
    .param pmc _lex_param_0 
    .const 'Sub' $P5005 = 'cuid_222_1361734139.417' 
    capture_lex $P5005 
    .const 'Sub' $P5005 = 'cuid_413_1361734139.417' 
    capture_lex $P5005 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1606_start
    .local string rx1606_tgt
    .local int rx1606_pos
    .local int rx1606_off
    .local int rx1606_eos
    .local int rx1606_rep
    .local pmc rx1606_cur
    .local pmc rx1606_curclass
    .local pmc rx1606_bstack
    .local pmc rx1606_cstack
    rx1606_start = self."!cursor_start_all"()
    set rx1606_cur, rx1606_start[0]
    set rx1606_tgt, rx1606_start[1]
    set rx1606_pos, rx1606_start[2]
    set rx1606_curclass, rx1606_start[3]
    set rx1606_bstack, rx1606_start[4]
    set $I19, rx1606_start[5]
    store_lex unicode:"$\x{a2}", rx1606_cur
    length rx1606_eos, rx1606_tgt
    eq $I19, 1, rx1606_restart3734
    gt rx1606_pos, rx1606_eos, rx1606_fail3735
    repr_get_attr_int $I11, self, rx1606_curclass, "$!from"
    ne $I11, -1, rxscan1607_done3741
    goto rxscan1607_scan3740
  rxscan1607_loop3739:
    inc rx1606_pos
    gt rx1606_pos, rx1606_eos, rx1606_fail3735
    repr_bind_attr_int rx1606_cur, rx1606_curclass, "$!from", rx1606_pos
  rxscan1607_scan3740:
    nqp_rxmark rx1606_bstack, rxscan1607_loop3739, rx1606_pos, 0
  rxscan1607_done3741:
    nqp_rxmark rx1606_bstack, rxcap1608_fail3743, rx1606_pos, 0
    add $I11, rx1606_pos, 4
    gt $I11, rx1606_eos, rx1606_fail3735
    substr $S10, rx1606_tgt, rx1606_pos, 4
    ne $S10, ucs4:"last", rx1606_fail3735
    add rx1606_pos, 4
    nqp_rxpeek $I19, rx1606_bstack, rxcap1608_fail3743
    inc $I19
    set $I11, rx1606_bstack[$I19]
    repr_bind_attr_int rx1606_cur, rx1606_curclass, "$!pos", rx1606_pos
    $P11 = rx1606_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1606_pos)
    rx1606_cstack = rx1606_cur."!cursor_capture"($P11, "sym")
    goto rxcap1608_done3742
  rxcap1608_fail3743:
    goto rx1606_fail3735
  rxcap1608_done3742:
    .const 'Sub' $P5001 = 'cuid_222_1361734139.417' 
    capture_lex $P5001
    repr_bind_attr_int rx1606_cur, rx1606_curclass, "$!pos", rx1606_pos
    $P11 = rx1606_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1606_curclass, "$!pos"
    ge $I11, 0, rx1606_fail3735
    repr_bind_attr_int rx1606_cur, rx1606_curclass, "$!pos", rx1606_pos
    store_lex unicode:"$\x{a2}", rx1606_cur
    $P5002 = $P101."MATCH"()
    set $P102, $P5002
    .const 'Sub' $P5003 = 'cuid_413_1361734139.417' 
    capture_lex $P5003
    $P5004 = $P5003()
    rx1606_cur."!cursor_pass"(rx1606_pos, "term:sym<last>", 'backtrack'=>1)
    .return (rx1606_cur)
  rx1606_restart3734:
    repr_get_attr_obj rx1606_cstack, rx1606_cur, rx1606_curclass, "$!cstack"
  rx1606_fail3735:
    unless rx1606_bstack, rx1606_done3733
    pop $I19, rx1606_bstack
    if_null rx1606_cstack, rx1606_cstack_done3738
    unless rx1606_cstack, rx1606_cstack_done3738
    dec $I19
    set $P11, rx1606_cstack[$I19]
  rx1606_cstack_done3738:
    pop rx1606_rep, rx1606_bstack
    pop rx1606_pos, rx1606_bstack
    pop $I19, rx1606_bstack
    lt rx1606_pos, -1, rx1606_done3733
    lt rx1606_pos, 0, rx1606_fail3735
    eq $I19, 0, rx1606_fail3735
    nqp_islist $I20, rx1606_cstack
    unless $I20, rx1606_jump3736
    elements $I18, rx1606_bstack
    le $I18, 0, rx1606_cut3737
    dec $I18
    set $I18, rx1606_bstack[$I18]
  rx1606_cut3737:
    assign rx1606_cstack, $I18
  rx1606_jump3736:
    jump $I19
  rx1606_done3733:
    rx1606_cur."!cursor_fail"()
    .return (rx1606_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_222_1361734139.417") :anon :lex :outer("cuid_221_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1609_start
    .local string rx1609_tgt
    .local int rx1609_pos
    .local int rx1609_off
    .local int rx1609_eos
    .local int rx1609_rep
    .local pmc rx1609_cur
    .local pmc rx1609_curclass
    .local pmc rx1609_bstack
    .local pmc rx1609_cstack
    rx1609_start = self."!cursor_start_all"()
    set rx1609_cur, rx1609_start[0]
    set rx1609_tgt, rx1609_start[1]
    set rx1609_pos, rx1609_start[2]
    set rx1609_curclass, rx1609_start[3]
    set rx1609_bstack, rx1609_start[4]
    set $I19, rx1609_start[5]
    store_lex unicode:"$\x{a2}", rx1609_cur
    length rx1609_eos, rx1609_tgt
    eq $I19, 1, rx1609_restart3746
    gt rx1609_pos, rx1609_eos, rx1609_fail3747
    repr_get_attr_int $I11, self, rx1609_curclass, "$!from"
    ne $I11, -1, rxscan1610_done3753
    goto rxscan1610_scan3752
  rxscan1610_loop3751:
    inc rx1609_pos
    gt rx1609_pos, rx1609_eos, rx1609_fail3747
    repr_bind_attr_int rx1609_cur, rx1609_curclass, "$!from", rx1609_pos
  rxscan1610_scan3752:
    nqp_rxmark rx1609_bstack, rxscan1610_loop3751, rx1609_pos, 0
  rxscan1610_done3753:
    repr_bind_attr_int rx1609_cur, rx1609_curclass, "$!pos", rx1609_pos
    $P11 = rx1609_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx1609_curclass, "$!pos"
    lt $I11, 0, rx1609_fail3747
    nqp_rxmark rx1609_bstack, rxsubrule1611_pass3754, -1, 0
  rxsubrule1611_pass3754:
    rx1609_cstack = rx1609_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx1609_pos, $P11, rx1609_curclass, "$!pos"
    rx1609_cur."!cursor_pass"(rx1609_pos, 'backtrack'=>1)
    .return (rx1609_cur)
  rx1609_restart3746:
    repr_get_attr_obj rx1609_cstack, rx1609_cur, rx1609_curclass, "$!cstack"
  rx1609_fail3747:
    unless rx1609_bstack, rx1609_done3745
    pop $I19, rx1609_bstack
    if_null rx1609_cstack, rx1609_cstack_done3750
    unless rx1609_cstack, rx1609_cstack_done3750
    dec $I19
    set $P11, rx1609_cstack[$I19]
  rx1609_cstack_done3750:
    pop rx1609_rep, rx1609_bstack
    pop rx1609_pos, rx1609_bstack
    pop $I19, rx1609_bstack
    lt rx1609_pos, -1, rx1609_done3745
    lt rx1609_pos, 0, rx1609_fail3747
    eq $I19, 0, rx1609_fail3747
    nqp_islist $I20, rx1609_cstack
    unless $I20, rx1609_jump3748
    elements $I18, rx1609_bstack
    le $I18, 0, rx1609_cut3749
    dec $I18
    set $I18, rx1609_bstack[$I18]
  rx1609_cut3749:
    assign rx1609_cstack, $I18
  rx1609_jump3748:
    jump $I19
  rx1609_done3745:
    rx1609_cur."!cursor_fail"()
    .return (rx1609_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_413_1361734139.417") :anon :lex :outer("cuid_221_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1413

    box $P5001, 1
    store_dynamic_lex "$*CONTROL_USED", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<next>" :subid("cuid_223_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1414
    .param pmc _lex_param_0 
    .const 'Sub' $P5005 = 'cuid_224_1361734139.417' 
    capture_lex $P5005 
    .const 'Sub' $P5005 = 'cuid_414_1361734139.417' 
    capture_lex $P5005 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1612_start
    .local string rx1612_tgt
    .local int rx1612_pos
    .local int rx1612_off
    .local int rx1612_eos
    .local int rx1612_rep
    .local pmc rx1612_cur
    .local pmc rx1612_curclass
    .local pmc rx1612_bstack
    .local pmc rx1612_cstack
    rx1612_start = self."!cursor_start_all"()
    set rx1612_cur, rx1612_start[0]
    set rx1612_tgt, rx1612_start[1]
    set rx1612_pos, rx1612_start[2]
    set rx1612_curclass, rx1612_start[3]
    set rx1612_bstack, rx1612_start[4]
    set $I19, rx1612_start[5]
    store_lex unicode:"$\x{a2}", rx1612_cur
    length rx1612_eos, rx1612_tgt
    eq $I19, 1, rx1612_restart3757
    gt rx1612_pos, rx1612_eos, rx1612_fail3758
    repr_get_attr_int $I11, self, rx1612_curclass, "$!from"
    ne $I11, -1, rxscan1613_done3764
    goto rxscan1613_scan3763
  rxscan1613_loop3762:
    inc rx1612_pos
    gt rx1612_pos, rx1612_eos, rx1612_fail3758
    repr_bind_attr_int rx1612_cur, rx1612_curclass, "$!from", rx1612_pos
  rxscan1613_scan3763:
    nqp_rxmark rx1612_bstack, rxscan1613_loop3762, rx1612_pos, 0
  rxscan1613_done3764:
    nqp_rxmark rx1612_bstack, rxcap1614_fail3766, rx1612_pos, 0
    add $I11, rx1612_pos, 4
    gt $I11, rx1612_eos, rx1612_fail3758
    substr $S10, rx1612_tgt, rx1612_pos, 4
    ne $S10, ucs4:"next", rx1612_fail3758
    add rx1612_pos, 4
    nqp_rxpeek $I19, rx1612_bstack, rxcap1614_fail3766
    inc $I19
    set $I11, rx1612_bstack[$I19]
    repr_bind_attr_int rx1612_cur, rx1612_curclass, "$!pos", rx1612_pos
    $P11 = rx1612_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1612_pos)
    rx1612_cstack = rx1612_cur."!cursor_capture"($P11, "sym")
    goto rxcap1614_done3765
  rxcap1614_fail3766:
    goto rx1612_fail3758
  rxcap1614_done3765:
    .const 'Sub' $P5001 = 'cuid_224_1361734139.417' 
    capture_lex $P5001
    repr_bind_attr_int rx1612_cur, rx1612_curclass, "$!pos", rx1612_pos
    $P11 = rx1612_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1612_curclass, "$!pos"
    ge $I11, 0, rx1612_fail3758
    repr_bind_attr_int rx1612_cur, rx1612_curclass, "$!pos", rx1612_pos
    store_lex unicode:"$\x{a2}", rx1612_cur
    $P5002 = $P101."MATCH"()
    set $P102, $P5002
    .const 'Sub' $P5003 = 'cuid_414_1361734139.417' 
    capture_lex $P5003
    $P5004 = $P5003()
    rx1612_cur."!cursor_pass"(rx1612_pos, "term:sym<next>", 'backtrack'=>1)
    .return (rx1612_cur)
  rx1612_restart3757:
    repr_get_attr_obj rx1612_cstack, rx1612_cur, rx1612_curclass, "$!cstack"
  rx1612_fail3758:
    unless rx1612_bstack, rx1612_done3756
    pop $I19, rx1612_bstack
    if_null rx1612_cstack, rx1612_cstack_done3761
    unless rx1612_cstack, rx1612_cstack_done3761
    dec $I19
    set $P11, rx1612_cstack[$I19]
  rx1612_cstack_done3761:
    pop rx1612_rep, rx1612_bstack
    pop rx1612_pos, rx1612_bstack
    pop $I19, rx1612_bstack
    lt rx1612_pos, -1, rx1612_done3756
    lt rx1612_pos, 0, rx1612_fail3758
    eq $I19, 0, rx1612_fail3758
    nqp_islist $I20, rx1612_cstack
    unless $I20, rx1612_jump3759
    elements $I18, rx1612_bstack
    le $I18, 0, rx1612_cut3760
    dec $I18
    set $I18, rx1612_bstack[$I18]
  rx1612_cut3760:
    assign rx1612_cstack, $I18
  rx1612_jump3759:
    jump $I19
  rx1612_done3756:
    rx1612_cur."!cursor_fail"()
    .return (rx1612_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_224_1361734139.417") :anon :lex :outer("cuid_223_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1615_start
    .local string rx1615_tgt
    .local int rx1615_pos
    .local int rx1615_off
    .local int rx1615_eos
    .local int rx1615_rep
    .local pmc rx1615_cur
    .local pmc rx1615_curclass
    .local pmc rx1615_bstack
    .local pmc rx1615_cstack
    rx1615_start = self."!cursor_start_all"()
    set rx1615_cur, rx1615_start[0]
    set rx1615_tgt, rx1615_start[1]
    set rx1615_pos, rx1615_start[2]
    set rx1615_curclass, rx1615_start[3]
    set rx1615_bstack, rx1615_start[4]
    set $I19, rx1615_start[5]
    store_lex unicode:"$\x{a2}", rx1615_cur
    length rx1615_eos, rx1615_tgt
    eq $I19, 1, rx1615_restart3769
    gt rx1615_pos, rx1615_eos, rx1615_fail3770
    repr_get_attr_int $I11, self, rx1615_curclass, "$!from"
    ne $I11, -1, rxscan1616_done3776
    goto rxscan1616_scan3775
  rxscan1616_loop3774:
    inc rx1615_pos
    gt rx1615_pos, rx1615_eos, rx1615_fail3770
    repr_bind_attr_int rx1615_cur, rx1615_curclass, "$!from", rx1615_pos
  rxscan1616_scan3775:
    nqp_rxmark rx1615_bstack, rxscan1616_loop3774, rx1615_pos, 0
  rxscan1616_done3776:
    repr_bind_attr_int rx1615_cur, rx1615_curclass, "$!pos", rx1615_pos
    $P11 = rx1615_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx1615_curclass, "$!pos"
    lt $I11, 0, rx1615_fail3770
    nqp_rxmark rx1615_bstack, rxsubrule1617_pass3777, -1, 0
  rxsubrule1617_pass3777:
    rx1615_cstack = rx1615_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx1615_pos, $P11, rx1615_curclass, "$!pos"
    rx1615_cur."!cursor_pass"(rx1615_pos, 'backtrack'=>1)
    .return (rx1615_cur)
  rx1615_restart3769:
    repr_get_attr_obj rx1615_cstack, rx1615_cur, rx1615_curclass, "$!cstack"
  rx1615_fail3770:
    unless rx1615_bstack, rx1615_done3768
    pop $I19, rx1615_bstack
    if_null rx1615_cstack, rx1615_cstack_done3773
    unless rx1615_cstack, rx1615_cstack_done3773
    dec $I19
    set $P11, rx1615_cstack[$I19]
  rx1615_cstack_done3773:
    pop rx1615_rep, rx1615_bstack
    pop rx1615_pos, rx1615_bstack
    pop $I19, rx1615_bstack
    lt rx1615_pos, -1, rx1615_done3768
    lt rx1615_pos, 0, rx1615_fail3770
    eq $I19, 0, rx1615_fail3770
    nqp_islist $I20, rx1615_cstack
    unless $I20, rx1615_jump3771
    elements $I18, rx1615_bstack
    le $I18, 0, rx1615_cut3772
    dec $I18
    set $I18, rx1615_bstack[$I18]
  rx1615_cut3772:
    assign rx1615_cstack, $I18
  rx1615_jump3771:
    jump $I19
  rx1615_done3768:
    rx1615_cur."!cursor_fail"()
    .return (rx1615_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_414_1361734139.417") :anon :lex :outer("cuid_223_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1414

    box $P5001, 1
    store_dynamic_lex "$*CONTROL_USED", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<redo>" :subid("cuid_225_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1415
    .param pmc _lex_param_0 
    .const 'Sub' $P5005 = 'cuid_226_1361734139.417' 
    capture_lex $P5005 
    .const 'Sub' $P5005 = 'cuid_415_1361734139.417' 
    capture_lex $P5005 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1618_start
    .local string rx1618_tgt
    .local int rx1618_pos
    .local int rx1618_off
    .local int rx1618_eos
    .local int rx1618_rep
    .local pmc rx1618_cur
    .local pmc rx1618_curclass
    .local pmc rx1618_bstack
    .local pmc rx1618_cstack
    rx1618_start = self."!cursor_start_all"()
    set rx1618_cur, rx1618_start[0]
    set rx1618_tgt, rx1618_start[1]
    set rx1618_pos, rx1618_start[2]
    set rx1618_curclass, rx1618_start[3]
    set rx1618_bstack, rx1618_start[4]
    set $I19, rx1618_start[5]
    store_lex unicode:"$\x{a2}", rx1618_cur
    length rx1618_eos, rx1618_tgt
    eq $I19, 1, rx1618_restart3780
    gt rx1618_pos, rx1618_eos, rx1618_fail3781
    repr_get_attr_int $I11, self, rx1618_curclass, "$!from"
    ne $I11, -1, rxscan1619_done3787
    goto rxscan1619_scan3786
  rxscan1619_loop3785:
    inc rx1618_pos
    gt rx1618_pos, rx1618_eos, rx1618_fail3781
    repr_bind_attr_int rx1618_cur, rx1618_curclass, "$!from", rx1618_pos
  rxscan1619_scan3786:
    nqp_rxmark rx1618_bstack, rxscan1619_loop3785, rx1618_pos, 0
  rxscan1619_done3787:
    nqp_rxmark rx1618_bstack, rxcap1620_fail3789, rx1618_pos, 0
    add $I11, rx1618_pos, 4
    gt $I11, rx1618_eos, rx1618_fail3781
    substr $S10, rx1618_tgt, rx1618_pos, 4
    ne $S10, ucs4:"redo", rx1618_fail3781
    add rx1618_pos, 4
    nqp_rxpeek $I19, rx1618_bstack, rxcap1620_fail3789
    inc $I19
    set $I11, rx1618_bstack[$I19]
    repr_bind_attr_int rx1618_cur, rx1618_curclass, "$!pos", rx1618_pos
    $P11 = rx1618_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1618_pos)
    rx1618_cstack = rx1618_cur."!cursor_capture"($P11, "sym")
    goto rxcap1620_done3788
  rxcap1620_fail3789:
    goto rx1618_fail3781
  rxcap1620_done3788:
    .const 'Sub' $P5001 = 'cuid_226_1361734139.417' 
    capture_lex $P5001
    repr_bind_attr_int rx1618_cur, rx1618_curclass, "$!pos", rx1618_pos
    $P11 = rx1618_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1618_curclass, "$!pos"
    ge $I11, 0, rx1618_fail3781
    repr_bind_attr_int rx1618_cur, rx1618_curclass, "$!pos", rx1618_pos
    store_lex unicode:"$\x{a2}", rx1618_cur
    $P5002 = $P101."MATCH"()
    set $P102, $P5002
    .const 'Sub' $P5003 = 'cuid_415_1361734139.417' 
    capture_lex $P5003
    $P5004 = $P5003()
    rx1618_cur."!cursor_pass"(rx1618_pos, "term:sym<redo>", 'backtrack'=>1)
    .return (rx1618_cur)
  rx1618_restart3780:
    repr_get_attr_obj rx1618_cstack, rx1618_cur, rx1618_curclass, "$!cstack"
  rx1618_fail3781:
    unless rx1618_bstack, rx1618_done3779
    pop $I19, rx1618_bstack
    if_null rx1618_cstack, rx1618_cstack_done3784
    unless rx1618_cstack, rx1618_cstack_done3784
    dec $I19
    set $P11, rx1618_cstack[$I19]
  rx1618_cstack_done3784:
    pop rx1618_rep, rx1618_bstack
    pop rx1618_pos, rx1618_bstack
    pop $I19, rx1618_bstack
    lt rx1618_pos, -1, rx1618_done3779
    lt rx1618_pos, 0, rx1618_fail3781
    eq $I19, 0, rx1618_fail3781
    nqp_islist $I20, rx1618_cstack
    unless $I20, rx1618_jump3782
    elements $I18, rx1618_bstack
    le $I18, 0, rx1618_cut3783
    dec $I18
    set $I18, rx1618_bstack[$I18]
  rx1618_cut3783:
    assign rx1618_cstack, $I18
  rx1618_jump3782:
    jump $I19
  rx1618_done3779:
    rx1618_cur."!cursor_fail"()
    .return (rx1618_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_226_1361734139.417") :anon :lex :outer("cuid_225_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1621_start
    .local string rx1621_tgt
    .local int rx1621_pos
    .local int rx1621_off
    .local int rx1621_eos
    .local int rx1621_rep
    .local pmc rx1621_cur
    .local pmc rx1621_curclass
    .local pmc rx1621_bstack
    .local pmc rx1621_cstack
    rx1621_start = self."!cursor_start_all"()
    set rx1621_cur, rx1621_start[0]
    set rx1621_tgt, rx1621_start[1]
    set rx1621_pos, rx1621_start[2]
    set rx1621_curclass, rx1621_start[3]
    set rx1621_bstack, rx1621_start[4]
    set $I19, rx1621_start[5]
    store_lex unicode:"$\x{a2}", rx1621_cur
    length rx1621_eos, rx1621_tgt
    eq $I19, 1, rx1621_restart3792
    gt rx1621_pos, rx1621_eos, rx1621_fail3793
    repr_get_attr_int $I11, self, rx1621_curclass, "$!from"
    ne $I11, -1, rxscan1622_done3799
    goto rxscan1622_scan3798
  rxscan1622_loop3797:
    inc rx1621_pos
    gt rx1621_pos, rx1621_eos, rx1621_fail3793
    repr_bind_attr_int rx1621_cur, rx1621_curclass, "$!from", rx1621_pos
  rxscan1622_scan3798:
    nqp_rxmark rx1621_bstack, rxscan1622_loop3797, rx1621_pos, 0
  rxscan1622_done3799:
    repr_bind_attr_int rx1621_cur, rx1621_curclass, "$!pos", rx1621_pos
    $P11 = rx1621_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx1621_curclass, "$!pos"
    lt $I11, 0, rx1621_fail3793
    nqp_rxmark rx1621_bstack, rxsubrule1623_pass3800, -1, 0
  rxsubrule1623_pass3800:
    rx1621_cstack = rx1621_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx1621_pos, $P11, rx1621_curclass, "$!pos"
    rx1621_cur."!cursor_pass"(rx1621_pos, 'backtrack'=>1)
    .return (rx1621_cur)
  rx1621_restart3792:
    repr_get_attr_obj rx1621_cstack, rx1621_cur, rx1621_curclass, "$!cstack"
  rx1621_fail3793:
    unless rx1621_bstack, rx1621_done3791
    pop $I19, rx1621_bstack
    if_null rx1621_cstack, rx1621_cstack_done3796
    unless rx1621_cstack, rx1621_cstack_done3796
    dec $I19
    set $P11, rx1621_cstack[$I19]
  rx1621_cstack_done3796:
    pop rx1621_rep, rx1621_bstack
    pop rx1621_pos, rx1621_bstack
    pop $I19, rx1621_bstack
    lt rx1621_pos, -1, rx1621_done3791
    lt rx1621_pos, 0, rx1621_fail3793
    eq $I19, 0, rx1621_fail3793
    nqp_islist $I20, rx1621_cstack
    unless $I20, rx1621_jump3794
    elements $I18, rx1621_bstack
    le $I18, 0, rx1621_cut3795
    dec $I18
    set $I18, rx1621_bstack[$I18]
  rx1621_cut3795:
    assign rx1621_cstack, $I18
  rx1621_jump3794:
    jump $I19
  rx1621_done3791:
    rx1621_cur."!cursor_fail"()
    .return (rx1621_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_415_1361734139.417") :anon :lex :outer("cuid_225_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1415

    box $P5001, 1
    store_dynamic_lex "$*CONTROL_USED", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "smartmatch" :subid("cuid_227_1361734139.417") :anon :lex :outer("cuid_397_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1417
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$t", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_166 
    .local pmc fb_tmp_167 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    set fb_tmp_166, _lex_param_1
    repr_defined $I5001, fb_tmp_166
    unless $I5001 goto if1624_else3801 
    set $P5002, fb_tmp_166[0]
    set $P5004, $P5002
    goto if1624_end3802
  if1624_else3801:
    null $P5003
    set $P5004, $P5003
  if1624_end3802:
    unless_null $P5004, vivi_16253803
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_16253803:
    set $P101, $P5004
    set fb_tmp_167, _lex_param_1
    repr_defined $I5002, fb_tmp_167
    unless $I5002 goto if1626_else3804 
    set $P5006, fb_tmp_167[1]
    set $P5008, $P5006
    goto if1626_end3805
  if1626_else3804:
    null $P5007
    set $P5008, $P5007
  if1626_end3805:
    unless_null $P5008, vivi_16273806
    nqp_get_sc_object $P5009, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5008, $P5009
  vivi_16273806:
    set _lex_param_1[0], $P5008
    set _lex_param_1[1], $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_416_1361734139.417") :anon :lex :outer("cuid_374_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1423
    .const 'Sub' $P5013 = 'cuid_228_1361734139.417' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_229_1361734139.417' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_231_1361734139.417' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_232_1361734139.417' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_234_1361734139.417' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_235_1361734139.417' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_238_1361734139.417' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_241_1361734139.417' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_243_1361734139.417' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_245_1361734139.417' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_246_1361734139.417' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_247_1361734139.417' 
    capture_lex $P5013 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .const 'Sub' $P5001 = 'cuid_228_1361734139.417' 
    capture_lex $P5001
    .const 'Sub' $P5002 = 'cuid_229_1361734139.417' 
    capture_lex $P5002
    .const 'Sub' $P5003 = 'cuid_231_1361734139.417' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_232_1361734139.417' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_234_1361734139.417' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_235_1361734139.417' 
    capture_lex $P5006
    .const 'Sub' $P5007 = 'cuid_238_1361734139.417' 
    capture_lex $P5007
    .const 'Sub' $P5008 = 'cuid_241_1361734139.417' 
    capture_lex $P5008
    .const 'Sub' $P5009 = 'cuid_243_1361734139.417' 
    capture_lex $P5009
    .const 'Sub' $P5010 = 'cuid_245_1361734139.417' 
    capture_lex $P5010
    .const 'Sub' $P5011 = 'cuid_246_1361734139.417' 
    capture_lex $P5011
    .const 'Sub' $P5012 = 'cuid_247_1361734139.417' 
    capture_lex $P5012
    .return ($P5012) 
.end
.HLL "nqp"
.namespace []
.sub "rxstopper" :subid("cuid_228_1361734139.417") :anon :lex :outer("cuid_416_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1424
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1628_start
    .local string rx1628_tgt
    .local int rx1628_pos
    .local int rx1628_off
    .local int rx1628_eos
    .local int rx1628_rep
    .local pmc rx1628_cur
    .local pmc rx1628_curclass
    .local pmc rx1628_bstack
    .local pmc rx1628_cstack
    rx1628_start = self."!cursor_start_all"()
    set rx1628_cur, rx1628_start[0]
    set rx1628_tgt, rx1628_start[1]
    set rx1628_pos, rx1628_start[2]
    set rx1628_curclass, rx1628_start[3]
    set rx1628_bstack, rx1628_start[4]
    set $I19, rx1628_start[5]
    store_lex unicode:"$\x{a2}", rx1628_cur
    length rx1628_eos, rx1628_tgt
    eq $I19, 1, rx1628_restart3809
    gt rx1628_pos, rx1628_eos, rx1628_fail3810
    repr_get_attr_int $I11, self, rx1628_curclass, "$!from"
    ne $I11, -1, rxscan1629_done3816
    goto rxscan1629_scan3815
  rxscan1629_loop3814:
    inc rx1628_pos
    gt rx1628_pos, rx1628_eos, rx1628_fail3810
    repr_bind_attr_int rx1628_cur, rx1628_curclass, "$!from", rx1628_pos
  rxscan1629_scan3815:
    nqp_rxmark rx1628_bstack, rxscan1629_loop3814, rx1628_pos, 0
  rxscan1629_done3816:
    ge rx1628_pos, rx1628_eos, rx1628_fail3810
    substr $S11, rx1628_tgt, rx1628_pos, 1
    index $I11, ucs4:"}/", $S11
    lt $I11, 0, rx1628_fail3810
    inc rx1628_pos
    rx1628_cur."!cursor_pass"(rx1628_pos, "rxstopper", 'backtrack'=>1)
    .return (rx1628_cur)
  rx1628_restart3809:
    repr_get_attr_obj rx1628_cstack, rx1628_cur, rx1628_curclass, "$!cstack"
  rx1628_fail3810:
    unless rx1628_bstack, rx1628_done3808
    pop $I19, rx1628_bstack
    if_null rx1628_cstack, rx1628_cstack_done3813
    unless rx1628_cstack, rx1628_cstack_done3813
    dec $I19
    set $P11, rx1628_cstack[$I19]
  rx1628_cstack_done3813:
    pop rx1628_rep, rx1628_bstack
    pop rx1628_pos, rx1628_bstack
    pop $I19, rx1628_bstack
    lt rx1628_pos, -1, rx1628_done3808
    lt rx1628_pos, 0, rx1628_fail3810
    eq $I19, 0, rx1628_fail3810
    nqp_islist $I20, rx1628_cstack
    unless $I20, rx1628_jump3811
    elements $I18, rx1628_bstack
    le $I18, 0, rx1628_cut3812
    dec $I18
    set $I18, rx1628_bstack[$I18]
  rx1628_cut3812:
    assign rx1628_cstack, $I18
  rx1628_jump3811:
    jump $I19
  rx1628_done3808:
    rx1628_cur."!cursor_fail"()
    .return (rx1628_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<:my>" :subid("cuid_229_1361734139.417") :anon :lex :outer("cuid_416_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1428
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_230_1361734139.417' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1630_start
    .local string rx1630_tgt
    .local int rx1630_pos
    .local int rx1630_off
    .local int rx1630_eos
    .local int rx1630_rep
    .local pmc rx1630_cur
    .local pmc rx1630_curclass
    .local pmc rx1630_bstack
    .local pmc rx1630_cstack
    rx1630_start = self."!cursor_start_all"()
    set rx1630_cur, rx1630_start[0]
    set rx1630_tgt, rx1630_start[1]
    set rx1630_pos, rx1630_start[2]
    set rx1630_curclass, rx1630_start[3]
    set rx1630_bstack, rx1630_start[4]
    set $I19, rx1630_start[5]
    store_lex unicode:"$\x{a2}", rx1630_cur
    length rx1630_eos, rx1630_tgt
    eq $I19, 1, rx1630_restart3819
    gt rx1630_pos, rx1630_eos, rx1630_fail3820
    repr_get_attr_int $I11, self, rx1630_curclass, "$!from"
    ne $I11, -1, rxscan1631_done3826
    goto rxscan1631_scan3825
  rxscan1631_loop3824:
    inc rx1630_pos
    gt rx1630_pos, rx1630_eos, rx1630_fail3820
    repr_bind_attr_int rx1630_cur, rx1630_curclass, "$!from", rx1630_pos
  rxscan1631_scan3825:
    nqp_rxmark rx1630_bstack, rxscan1631_loop3824, rx1630_pos, 0
  rxscan1631_done3826:
    add $I11, rx1630_pos, 1
    gt $I11, rx1630_eos, rx1630_fail3820
    substr $S10, rx1630_tgt, rx1630_pos, 1
    ne $S10, ucs4:":", rx1630_fail3820
    add rx1630_pos, 1
    .const 'Sub' $P5001 = 'cuid_230_1361734139.417' 
    capture_lex $P5001
    repr_bind_attr_int rx1630_cur, rx1630_curclass, "$!pos", rx1630_pos
    $P11 = rx1630_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1630_curclass, "$!pos"
    lt $I11, 0, rx1630_fail3820
    repr_bind_attr_int rx1630_cur, rx1630_curclass, "$!pos", rx1630_pos
    $P11 = rx1630_cur."LANG"("MAIN", "statement")
    repr_get_attr_int $I11, $P11, rx1630_curclass, "$!pos"
    lt $I11, 0, rx1630_fail3820
    nqp_rxmark rx1630_bstack, rxsubrule1634_pass3837, -1, 0
  rxsubrule1634_pass3837:
    rx1630_cstack = rx1630_cur."!cursor_capture"($P11, "statement")
    repr_get_attr_int rx1630_pos, $P11, rx1630_curclass, "$!pos"
    repr_bind_attr_int rx1630_cur, rx1630_curclass, "$!pos", rx1630_pos
    $P11 = rx1630_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1630_curclass, "$!pos"
    lt $I11, 0, rx1630_fail3820
    repr_get_attr_int rx1630_pos, $P11, rx1630_curclass, "$!pos"
    add $I11, rx1630_pos, 1
    gt $I11, rx1630_eos, rx1630_fail3820
    substr $S10, rx1630_tgt, rx1630_pos, 1
    ne $S10, ucs4:";", rx1630_fail3820
    add rx1630_pos, 1
    rx1630_cur."!cursor_pass"(rx1630_pos, "metachar:sym<:my>", 'backtrack'=>1)
    .return (rx1630_cur)
  rx1630_restart3819:
    repr_get_attr_obj rx1630_cstack, rx1630_cur, rx1630_curclass, "$!cstack"
  rx1630_fail3820:
    unless rx1630_bstack, rx1630_done3818
    pop $I19, rx1630_bstack
    if_null rx1630_cstack, rx1630_cstack_done3823
    unless rx1630_cstack, rx1630_cstack_done3823
    dec $I19
    set $P11, rx1630_cstack[$I19]
  rx1630_cstack_done3823:
    pop rx1630_rep, rx1630_bstack
    pop rx1630_pos, rx1630_bstack
    pop $I19, rx1630_bstack
    lt rx1630_pos, -1, rx1630_done3818
    lt rx1630_pos, 0, rx1630_fail3820
    eq $I19, 0, rx1630_fail3820
    nqp_islist $I20, rx1630_cstack
    unless $I20, rx1630_jump3821
    elements $I18, rx1630_bstack
    le $I18, 0, rx1630_cut3822
    dec $I18
    set $I18, rx1630_bstack[$I18]
  rx1630_cut3822:
    assign rx1630_cstack, $I18
  rx1630_jump3821:
    jump $I19
  rx1630_done3818:
    rx1630_cur."!cursor_fail"()
    .return (rx1630_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_230_1361734139.417") :anon :lex :outer("cuid_229_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1632_start
    .local string rx1632_tgt
    .local int rx1632_pos
    .local int rx1632_off
    .local int rx1632_eos
    .local int rx1632_rep
    .local pmc rx1632_cur
    .local pmc rx1632_curclass
    .local pmc rx1632_bstack
    .local pmc rx1632_cstack
    rx1632_start = self."!cursor_start_all"()
    set rx1632_cur, rx1632_start[0]
    set rx1632_tgt, rx1632_start[1]
    set rx1632_pos, rx1632_start[2]
    set rx1632_curclass, rx1632_start[3]
    set rx1632_bstack, rx1632_start[4]
    set $I19, rx1632_start[5]
    store_lex unicode:"$\x{a2}", rx1632_cur
    length rx1632_eos, rx1632_tgt
    eq $I19, 1, rx1632_restart3829
    gt rx1632_pos, rx1632_eos, rx1632_fail3830
    repr_get_attr_int $I11, self, rx1632_curclass, "$!from"
    ne $I11, -1, rxscan1633_done3836
    goto rxscan1633_scan3835
  rxscan1633_loop3834:
    inc rx1632_pos
    gt rx1632_pos, rx1632_eos, rx1632_fail3830
    repr_bind_attr_int rx1632_cur, rx1632_curclass, "$!from", rx1632_pos
  rxscan1633_scan3835:
    nqp_rxmark rx1632_bstack, rxscan1633_loop3834, rx1632_pos, 0
  rxscan1633_done3836:
    add $I11, rx1632_pos, 2
    gt $I11, rx1632_eos, rx1632_fail3830
    substr $S10, rx1632_tgt, rx1632_pos, 2
    ne $S10, ucs4:"my", rx1632_fail3830
    add rx1632_pos, 2
    rx1632_cur."!cursor_pass"(rx1632_pos, 'backtrack'=>1)
    .return (rx1632_cur)
  rx1632_restart3829:
    repr_get_attr_obj rx1632_cstack, rx1632_cur, rx1632_curclass, "$!cstack"
  rx1632_fail3830:
    unless rx1632_bstack, rx1632_done3828
    pop $I19, rx1632_bstack
    if_null rx1632_cstack, rx1632_cstack_done3833
    unless rx1632_cstack, rx1632_cstack_done3833
    dec $I19
    set $P11, rx1632_cstack[$I19]
  rx1632_cstack_done3833:
    pop rx1632_rep, rx1632_bstack
    pop rx1632_pos, rx1632_bstack
    pop $I19, rx1632_bstack
    lt rx1632_pos, -1, rx1632_done3828
    lt rx1632_pos, 0, rx1632_fail3830
    eq $I19, 0, rx1632_fail3830
    nqp_islist $I20, rx1632_cstack
    unless $I20, rx1632_jump3831
    elements $I18, rx1632_bstack
    le $I18, 0, rx1632_cut3832
    dec $I18
    set $I18, rx1632_bstack[$I18]
  rx1632_cut3832:
    assign rx1632_cstack, $I18
  rx1632_jump3831:
    jump $I19
  rx1632_done3828:
    rx1632_cur."!cursor_fail"()
    .return (rx1632_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<{ }>" :subid("cuid_231_1361734139.417") :anon :lex :outer("cuid_416_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1432
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1636_start
    .local string rx1636_tgt
    .local int rx1636_pos
    .local int rx1636_off
    .local int rx1636_eos
    .local int rx1636_rep
    .local pmc rx1636_cur
    .local pmc rx1636_curclass
    .local pmc rx1636_bstack
    .local pmc rx1636_cstack
    rx1636_start = self."!cursor_start_all"()
    set rx1636_cur, rx1636_start[0]
    set rx1636_tgt, rx1636_start[1]
    set rx1636_pos, rx1636_start[2]
    set rx1636_curclass, rx1636_start[3]
    set rx1636_bstack, rx1636_start[4]
    set $I19, rx1636_start[5]
    store_lex unicode:"$\x{a2}", rx1636_cur
    length rx1636_eos, rx1636_tgt
    eq $I19, 1, rx1636_restart3841
    gt rx1636_pos, rx1636_eos, rx1636_fail3842
    repr_get_attr_int $I11, self, rx1636_curclass, "$!from"
    ne $I11, -1, rxscan1637_done3848
    goto rxscan1637_scan3847
  rxscan1637_loop3846:
    inc rx1636_pos
    gt rx1636_pos, rx1636_eos, rx1636_fail3842
    repr_bind_attr_int rx1636_cur, rx1636_curclass, "$!from", rx1636_pos
  rxscan1637_scan3847:
    nqp_rxmark rx1636_bstack, rxscan1637_loop3846, rx1636_pos, 0
  rxscan1637_done3848:
    ge rx1636_pos, rx1636_eos, rx1636_fail3842
    substr $S11, rx1636_tgt, rx1636_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx1636_fail3842
    repr_bind_attr_int rx1636_cur, rx1636_curclass, "$!pos", rx1636_pos
    $P11 = rx1636_cur."codeblock"()
    repr_get_attr_int $I11, $P11, rx1636_curclass, "$!pos"
    lt $I11, 0, rx1636_fail3842
    nqp_rxmark rx1636_bstack, rxsubrule1638_pass3849, -1, 0
  rxsubrule1638_pass3849:
    rx1636_cstack = rx1636_cur."!cursor_capture"($P11, "codeblock")
    repr_get_attr_int rx1636_pos, $P11, rx1636_curclass, "$!pos"
    rx1636_cur."!cursor_pass"(rx1636_pos, "metachar:sym<{ }>", 'backtrack'=>1)
    .return (rx1636_cur)
  rx1636_restart3841:
    repr_get_attr_obj rx1636_cstack, rx1636_cur, rx1636_curclass, "$!cstack"
  rx1636_fail3842:
    unless rx1636_bstack, rx1636_done3840
    pop $I19, rx1636_bstack
    if_null rx1636_cstack, rx1636_cstack_done3845
    unless rx1636_cstack, rx1636_cstack_done3845
    dec $I19
    set $P11, rx1636_cstack[$I19]
  rx1636_cstack_done3845:
    pop rx1636_rep, rx1636_bstack
    pop rx1636_pos, rx1636_bstack
    pop $I19, rx1636_bstack
    lt rx1636_pos, -1, rx1636_done3840
    lt rx1636_pos, 0, rx1636_fail3842
    eq $I19, 0, rx1636_fail3842
    nqp_islist $I20, rx1636_cstack
    unless $I20, rx1636_jump3843
    elements $I18, rx1636_bstack
    le $I18, 0, rx1636_cut3844
    dec $I18
    set $I18, rx1636_bstack[$I18]
  rx1636_cut3844:
    assign rx1636_cstack, $I18
  rx1636_jump3843:
    jump $I19
  rx1636_done3840:
    rx1636_cur."!cursor_fail"()
    .return (rx1636_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<nqpvar>" :subid("cuid_232_1361734139.417") :anon :lex :outer("cuid_416_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1436
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_233_1361734139.417' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1639_start
    .local string rx1639_tgt
    .local int rx1639_pos
    .local int rx1639_off
    .local int rx1639_eos
    .local int rx1639_rep
    .local pmc rx1639_cur
    .local pmc rx1639_curclass
    .local pmc rx1639_bstack
    .local pmc rx1639_cstack
    rx1639_start = self."!cursor_start_all"()
    set rx1639_cur, rx1639_start[0]
    set rx1639_tgt, rx1639_start[1]
    set rx1639_pos, rx1639_start[2]
    set rx1639_curclass, rx1639_start[3]
    set rx1639_bstack, rx1639_start[4]
    set $I19, rx1639_start[5]
    store_lex unicode:"$\x{a2}", rx1639_cur
    length rx1639_eos, rx1639_tgt
    eq $I19, 1, rx1639_restart3852
    gt rx1639_pos, rx1639_eos, rx1639_fail3853
    repr_get_attr_int $I11, self, rx1639_curclass, "$!from"
    ne $I11, -1, rxscan1640_done3859
    goto rxscan1640_scan3858
  rxscan1640_loop3857:
    inc rx1639_pos
    gt rx1639_pos, rx1639_eos, rx1639_fail3853
    repr_bind_attr_int rx1639_cur, rx1639_curclass, "$!from", rx1639_pos
  rxscan1640_scan3858:
    nqp_rxmark rx1639_bstack, rxscan1640_loop3857, rx1639_pos, 0
  rxscan1640_done3859:
    .const 'Sub' $P5001 = 'cuid_233_1361734139.417' 
    capture_lex $P5001
    repr_bind_attr_int rx1639_cur, rx1639_curclass, "$!pos", rx1639_pos
    $P11 = rx1639_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1639_curclass, "$!pos"
    lt $I11, 0, rx1639_fail3853
    repr_bind_attr_int rx1639_cur, rx1639_curclass, "$!pos", rx1639_pos
    $P11 = rx1639_cur."LANG"("MAIN", "variable")
    repr_get_attr_int $I11, $P11, rx1639_curclass, "$!pos"
    lt $I11, 0, rx1639_fail3853
    nqp_rxmark rx1639_bstack, rxsubrule1645_pass3874, -1, 0
  rxsubrule1645_pass3874:
    rx1639_cstack = rx1639_cur."!cursor_capture"($P11, "var")
    repr_get_attr_int rx1639_pos, $P11, rx1639_curclass, "$!pos"
    rx1639_cur."!cursor_pass"(rx1639_pos, "metachar:sym<nqpvar>", 'backtrack'=>1)
    .return (rx1639_cur)
  rx1639_restart3852:
    repr_get_attr_obj rx1639_cstack, rx1639_cur, rx1639_curclass, "$!cstack"
  rx1639_fail3853:
    unless rx1639_bstack, rx1639_done3851
    pop $I19, rx1639_bstack
    if_null rx1639_cstack, rx1639_cstack_done3856
    unless rx1639_cstack, rx1639_cstack_done3856
    dec $I19
    set $P11, rx1639_cstack[$I19]
  rx1639_cstack_done3856:
    pop rx1639_rep, rx1639_bstack
    pop rx1639_pos, rx1639_bstack
    pop $I19, rx1639_bstack
    lt rx1639_pos, -1, rx1639_done3851
    lt rx1639_pos, 0, rx1639_fail3853
    eq $I19, 0, rx1639_fail3853
    nqp_islist $I20, rx1639_cstack
    unless $I20, rx1639_jump3854
    elements $I18, rx1639_bstack
    le $I18, 0, rx1639_cut3855
    dec $I18
    set $I18, rx1639_bstack[$I18]
  rx1639_cut3855:
    assign rx1639_cstack, $I18
  rx1639_jump3854:
    jump $I19
  rx1639_done3851:
    rx1639_cur."!cursor_fail"()
    .return (rx1639_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_233_1361734139.417") :anon :lex :outer("cuid_232_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1641_start
    .local string rx1641_tgt
    .local int rx1641_pos
    .local int rx1641_off
    .local int rx1641_eos
    .local int rx1641_rep
    .local pmc rx1641_cur
    .local pmc rx1641_curclass
    .local pmc rx1641_bstack
    .local pmc rx1641_cstack
    rx1641_start = self."!cursor_start_all"()
    set rx1641_cur, rx1641_start[0]
    set rx1641_tgt, rx1641_start[1]
    set rx1641_pos, rx1641_start[2]
    set rx1641_curclass, rx1641_start[3]
    set rx1641_bstack, rx1641_start[4]
    set $I19, rx1641_start[5]
    store_lex unicode:"$\x{a2}", rx1641_cur
    length rx1641_eos, rx1641_tgt
    eq $I19, 1, rx1641_restart3862
    gt rx1641_pos, rx1641_eos, rx1641_fail3863
    repr_get_attr_int $I11, self, rx1641_curclass, "$!from"
    ne $I11, -1, rxscan1642_done3869
    goto rxscan1642_scan3868
  rxscan1642_loop3867:
    inc rx1641_pos
    gt rx1641_pos, rx1641_eos, rx1641_fail3863
    repr_bind_attr_int rx1641_cur, rx1641_curclass, "$!from", rx1641_pos
  rxscan1642_scan3868:
    nqp_rxmark rx1641_bstack, rxscan1642_loop3867, rx1641_pos, 0
  rxscan1642_done3869:
    repr_bind_attr_int rx1641_cur, rx1641_curclass, "$!pos", rx1641_pos
    $P11 = rx1641_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx1641_curclass, "$!pos"
    lt $I11, 0, rx1641_fail3863
    nqp_rxmark rx1641_bstack, rxsubrule1643_pass3870, -1, 0
  rxsubrule1643_pass3870:
    rx1641_cstack = rx1641_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx1641_pos, $P11, rx1641_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1644_03872
    nqp_push_label $P11, alt1644_13873
    nqp_rxmark rx1641_bstack, alt1644_end3871, -1, 0
    rx1641_cur."!alt"(rx1641_pos, "alt_nfa__39_1361734142.967", $P11)
    goto rx1641_fail3863
  alt1644_03872:
    ge rx1641_pos, rx1641_eos, rx1641_fail3863
    is_cclass $I11, .CCLASS_WORD, rx1641_tgt, rx1641_pos
    if $I11, rx1641_fail3863
    add rx1641_pos, 1
    ge rx1641_pos, rx1641_eos, rx1641_fail3863
    is_cclass $I11, .CCLASS_WORD, rx1641_tgt, rx1641_pos
    unless $I11, rx1641_fail3863
    add rx1641_pos, 1
    goto alt1644_end3871
  alt1644_13873:
    ge rx1641_pos, rx1641_eos, rx1641_fail3863
    is_cclass $I11, .CCLASS_WORD, rx1641_tgt, rx1641_pos
    unless $I11, rx1641_fail3863
    add rx1641_pos, 1
    goto alt1644_end3871
  alt1644_end3871:
    nqp_rxcommit rx1641_bstack, alt1644_end3871
    rx1641_cur."!cursor_pass"(rx1641_pos, 'backtrack'=>1)
    .return (rx1641_cur)
  rx1641_restart3862:
    repr_get_attr_obj rx1641_cstack, rx1641_cur, rx1641_curclass, "$!cstack"
  rx1641_fail3863:
    unless rx1641_bstack, rx1641_done3861
    pop $I19, rx1641_bstack
    if_null rx1641_cstack, rx1641_cstack_done3866
    unless rx1641_cstack, rx1641_cstack_done3866
    dec $I19
    set $P11, rx1641_cstack[$I19]
  rx1641_cstack_done3866:
    pop rx1641_rep, rx1641_bstack
    pop rx1641_pos, rx1641_bstack
    pop $I19, rx1641_bstack
    lt rx1641_pos, -1, rx1641_done3861
    lt rx1641_pos, 0, rx1641_fail3863
    eq $I19, 0, rx1641_fail3863
    nqp_islist $I20, rx1641_cstack
    unless $I20, rx1641_jump3864
    elements $I18, rx1641_bstack
    le $I18, 0, rx1641_cut3865
    dec $I18
    set $I18, rx1641_bstack[$I18]
  rx1641_cut3865:
    assign rx1641_cstack, $I18
  rx1641_jump3864:
    jump $I19
  rx1641_done3861:
    rx1641_cur."!cursor_fail"()
    .return (rx1641_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<{ }>" :subid("cuid_234_1361734139.417") :anon :lex :outer("cuid_416_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1440
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1646_start
    .local string rx1646_tgt
    .local int rx1646_pos
    .local int rx1646_off
    .local int rx1646_eos
    .local int rx1646_rep
    .local pmc rx1646_cur
    .local pmc rx1646_curclass
    .local pmc rx1646_bstack
    .local pmc rx1646_cstack
    rx1646_start = self."!cursor_start_all"()
    set rx1646_cur, rx1646_start[0]
    set rx1646_tgt, rx1646_start[1]
    set rx1646_pos, rx1646_start[2]
    set rx1646_curclass, rx1646_start[3]
    set rx1646_bstack, rx1646_start[4]
    set $I19, rx1646_start[5]
    store_lex unicode:"$\x{a2}", rx1646_cur
    length rx1646_eos, rx1646_tgt
    eq $I19, 1, rx1646_restart3877
    gt rx1646_pos, rx1646_eos, rx1646_fail3878
    repr_get_attr_int $I11, self, rx1646_curclass, "$!from"
    ne $I11, -1, rxscan1647_done3884
    goto rxscan1647_scan3883
  rxscan1647_loop3882:
    inc rx1646_pos
    gt rx1646_pos, rx1646_eos, rx1646_fail3878
    repr_bind_attr_int rx1646_cur, rx1646_curclass, "$!from", rx1646_pos
  rxscan1647_scan3883:
    nqp_rxmark rx1646_bstack, rxscan1647_loop3882, rx1646_pos, 0
  rxscan1647_done3884:
    ge rx1646_pos, rx1646_eos, rx1646_fail3878
    substr $S11, rx1646_tgt, rx1646_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx1646_fail3878
    repr_bind_attr_int rx1646_cur, rx1646_curclass, "$!pos", rx1646_pos
    $P11 = rx1646_cur."codeblock"()
    repr_get_attr_int $I11, $P11, rx1646_curclass, "$!pos"
    lt $I11, 0, rx1646_fail3878
    nqp_rxmark rx1646_bstack, rxsubrule1648_pass3885, -1, 0
  rxsubrule1648_pass3885:
    rx1646_cstack = rx1646_cur."!cursor_capture"($P11, "codeblock")
    repr_get_attr_int rx1646_pos, $P11, rx1646_curclass, "$!pos"
    rx1646_cur."!cursor_pass"(rx1646_pos, "assertion:sym<{ }>", 'backtrack'=>1)
    .return (rx1646_cur)
  rx1646_restart3877:
    repr_get_attr_obj rx1646_cstack, rx1646_cur, rx1646_curclass, "$!cstack"
  rx1646_fail3878:
    unless rx1646_bstack, rx1646_done3876
    pop $I19, rx1646_bstack
    if_null rx1646_cstack, rx1646_cstack_done3881
    unless rx1646_cstack, rx1646_cstack_done3881
    dec $I19
    set $P11, rx1646_cstack[$I19]
  rx1646_cstack_done3881:
    pop rx1646_rep, rx1646_bstack
    pop rx1646_pos, rx1646_bstack
    pop $I19, rx1646_bstack
    lt rx1646_pos, -1, rx1646_done3876
    lt rx1646_pos, 0, rx1646_fail3878
    eq $I19, 0, rx1646_fail3878
    nqp_islist $I20, rx1646_cstack
    unless $I20, rx1646_jump3879
    elements $I18, rx1646_bstack
    le $I18, 0, rx1646_cut3880
    dec $I18
    set $I18, rx1646_bstack[$I18]
  rx1646_cut3880:
    assign rx1646_cstack, $I18
  rx1646_jump3879:
    jump $I19
  rx1646_done3876:
    rx1646_cur."!cursor_fail"()
    .return (rx1646_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<?>" :subid("cuid_235_1361734139.417") :anon :lex :outer("cuid_416_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1444
    .param pmc _lex_param_0 
    .const 'Sub' $P5003 = 'cuid_236_1361734139.417' 
    capture_lex $P5003 
    .const 'Sub' $P5003 = 'cuid_237_1361734139.417' 
    capture_lex $P5003 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1649_start
    .local string rx1649_tgt
    .local int rx1649_pos
    .local int rx1649_off
    .local int rx1649_eos
    .local int rx1649_rep
    .local pmc rx1649_cur
    .local pmc rx1649_curclass
    .local pmc rx1649_bstack
    .local pmc rx1649_cstack
    rx1649_start = self."!cursor_start_all"()
    set rx1649_cur, rx1649_start[0]
    set rx1649_tgt, rx1649_start[1]
    set rx1649_pos, rx1649_start[2]
    set rx1649_curclass, rx1649_start[3]
    set rx1649_bstack, rx1649_start[4]
    set $I19, rx1649_start[5]
    store_lex unicode:"$\x{a2}", rx1649_cur
    length rx1649_eos, rx1649_tgt
    eq $I19, 1, rx1649_restart3888
    gt rx1649_pos, rx1649_eos, rx1649_fail3889
    repr_get_attr_int $I11, self, rx1649_curclass, "$!from"
    ne $I11, -1, rxscan1650_done3895
    goto rxscan1650_scan3894
  rxscan1650_loop3893:
    inc rx1649_pos
    gt rx1649_pos, rx1649_eos, rx1649_fail3889
    repr_bind_attr_int rx1649_cur, rx1649_curclass, "$!from", rx1649_pos
  rxscan1650_scan3894:
    nqp_rxmark rx1649_bstack, rxscan1650_loop3893, rx1649_pos, 0
  rxscan1650_done3895:
    add $I11, rx1649_pos, 1
    gt $I11, rx1649_eos, rx1649_fail3889
    substr $S10, rx1649_tgt, rx1649_pos, 1
    ne $S10, ucs4:"?", rx1649_fail3889
    add rx1649_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1651_03897
    nqp_push_label $P11, alt1651_13908
    nqp_rxmark rx1649_bstack, alt1651_end3896, -1, 0
    rx1649_cur."!alt"(rx1649_pos, "alt_nfa__40_1361734142.991", $P11)
    goto rx1649_fail3889
  alt1651_03897:
    .const 'Sub' $P5001 = 'cuid_236_1361734139.417' 
    capture_lex $P5001
    repr_bind_attr_int rx1649_cur, rx1649_curclass, "$!pos", rx1649_pos
    $P11 = rx1649_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1649_curclass, "$!pos"
    lt $I11, 0, rx1649_fail3889
    goto alt1651_end3896
  alt1651_13908:
    .const 'Sub' $P5002 = 'cuid_237_1361734139.417' 
    capture_lex $P5002
    repr_bind_attr_int rx1649_cur, rx1649_curclass, "$!pos", rx1649_pos
    $P11 = rx1649_cur."before"($P5002)
    repr_get_attr_int $I11, $P11, rx1649_curclass, "$!pos"
    ge $I11, 0, rx1649_fail3889
    repr_bind_attr_int rx1649_cur, rx1649_curclass, "$!pos", rx1649_pos
    $P11 = rx1649_cur."assertion"()
    repr_get_attr_int $I11, $P11, rx1649_curclass, "$!pos"
    lt $I11, 0, rx1649_fail3889
    nqp_rxmark rx1649_bstack, rxsubrule1656_pass3919, -1, 0
  rxsubrule1656_pass3919:
    rx1649_cstack = rx1649_cur."!cursor_capture"($P11, "assertion")
    repr_get_attr_int rx1649_pos, $P11, rx1649_curclass, "$!pos"
    goto alt1651_end3896
  alt1651_end3896:
    nqp_rxcommit rx1649_bstack, alt1651_end3896
    rx1649_cur."!cursor_pass"(rx1649_pos, "assertion:sym<?>", 'backtrack'=>1)
    .return (rx1649_cur)
  rx1649_restart3888:
    repr_get_attr_obj rx1649_cstack, rx1649_cur, rx1649_curclass, "$!cstack"
  rx1649_fail3889:
    unless rx1649_bstack, rx1649_done3887
    pop $I19, rx1649_bstack
    if_null rx1649_cstack, rx1649_cstack_done3892
    unless rx1649_cstack, rx1649_cstack_done3892
    dec $I19
    set $P11, rx1649_cstack[$I19]
  rx1649_cstack_done3892:
    pop rx1649_rep, rx1649_bstack
    pop rx1649_pos, rx1649_bstack
    pop $I19, rx1649_bstack
    lt rx1649_pos, -1, rx1649_done3887
    lt rx1649_pos, 0, rx1649_fail3889
    eq $I19, 0, rx1649_fail3889
    nqp_islist $I20, rx1649_cstack
    unless $I20, rx1649_jump3890
    elements $I18, rx1649_bstack
    le $I18, 0, rx1649_cut3891
    dec $I18
    set $I18, rx1649_bstack[$I18]
  rx1649_cut3891:
    assign rx1649_cstack, $I18
  rx1649_jump3890:
    jump $I19
  rx1649_done3887:
    rx1649_cur."!cursor_fail"()
    .return (rx1649_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_236_1361734139.417") :anon :lex :outer("cuid_235_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1652_start
    .local string rx1652_tgt
    .local int rx1652_pos
    .local int rx1652_off
    .local int rx1652_eos
    .local int rx1652_rep
    .local pmc rx1652_cur
    .local pmc rx1652_curclass
    .local pmc rx1652_bstack
    .local pmc rx1652_cstack
    rx1652_start = self."!cursor_start_all"()
    set rx1652_cur, rx1652_start[0]
    set rx1652_tgt, rx1652_start[1]
    set rx1652_pos, rx1652_start[2]
    set rx1652_curclass, rx1652_start[3]
    set rx1652_bstack, rx1652_start[4]
    set $I19, rx1652_start[5]
    store_lex unicode:"$\x{a2}", rx1652_cur
    length rx1652_eos, rx1652_tgt
    eq $I19, 1, rx1652_restart3900
    gt rx1652_pos, rx1652_eos, rx1652_fail3901
    repr_get_attr_int $I11, self, rx1652_curclass, "$!from"
    ne $I11, -1, rxscan1653_done3907
    goto rxscan1653_scan3906
  rxscan1653_loop3905:
    inc rx1652_pos
    gt rx1652_pos, rx1652_eos, rx1652_fail3901
    repr_bind_attr_int rx1652_cur, rx1652_curclass, "$!from", rx1652_pos
  rxscan1653_scan3906:
    nqp_rxmark rx1652_bstack, rxscan1653_loop3905, rx1652_pos, 0
  rxscan1653_done3907:
    add $I11, rx1652_pos, 1
    gt $I11, rx1652_eos, rx1652_fail3901
    substr $S10, rx1652_tgt, rx1652_pos, 1
    ne $S10, ucs4:">", rx1652_fail3901
    add rx1652_pos, 1
    rx1652_cur."!cursor_pass"(rx1652_pos, 'backtrack'=>1)
    .return (rx1652_cur)
  rx1652_restart3900:
    repr_get_attr_obj rx1652_cstack, rx1652_cur, rx1652_curclass, "$!cstack"
  rx1652_fail3901:
    unless rx1652_bstack, rx1652_done3899
    pop $I19, rx1652_bstack
    if_null rx1652_cstack, rx1652_cstack_done3904
    unless rx1652_cstack, rx1652_cstack_done3904
    dec $I19
    set $P11, rx1652_cstack[$I19]
  rx1652_cstack_done3904:
    pop rx1652_rep, rx1652_bstack
    pop rx1652_pos, rx1652_bstack
    pop $I19, rx1652_bstack
    lt rx1652_pos, -1, rx1652_done3899
    lt rx1652_pos, 0, rx1652_fail3901
    eq $I19, 0, rx1652_fail3901
    nqp_islist $I20, rx1652_cstack
    unless $I20, rx1652_jump3902
    elements $I18, rx1652_bstack
    le $I18, 0, rx1652_cut3903
    dec $I18
    set $I18, rx1652_bstack[$I18]
  rx1652_cut3903:
    assign rx1652_cstack, $I18
  rx1652_jump3902:
    jump $I19
  rx1652_done3899:
    rx1652_cur."!cursor_fail"()
    .return (rx1652_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_237_1361734139.417") :anon :lex :outer("cuid_235_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1654_start
    .local string rx1654_tgt
    .local int rx1654_pos
    .local int rx1654_off
    .local int rx1654_eos
    .local int rx1654_rep
    .local pmc rx1654_cur
    .local pmc rx1654_curclass
    .local pmc rx1654_bstack
    .local pmc rx1654_cstack
    rx1654_start = self."!cursor_start_all"()
    set rx1654_cur, rx1654_start[0]
    set rx1654_tgt, rx1654_start[1]
    set rx1654_pos, rx1654_start[2]
    set rx1654_curclass, rx1654_start[3]
    set rx1654_bstack, rx1654_start[4]
    set $I19, rx1654_start[5]
    store_lex unicode:"$\x{a2}", rx1654_cur
    length rx1654_eos, rx1654_tgt
    eq $I19, 1, rx1654_restart3911
    gt rx1654_pos, rx1654_eos, rx1654_fail3912
    repr_get_attr_int $I11, self, rx1654_curclass, "$!from"
    ne $I11, -1, rxscan1655_done3918
    goto rxscan1655_scan3917
  rxscan1655_loop3916:
    inc rx1654_pos
    gt rx1654_pos, rx1654_eos, rx1654_fail3912
    repr_bind_attr_int rx1654_cur, rx1654_curclass, "$!from", rx1654_pos
  rxscan1655_scan3917:
    nqp_rxmark rx1654_bstack, rxscan1655_loop3916, rx1654_pos, 0
  rxscan1655_done3918:
    add $I11, rx1654_pos, 1
    gt $I11, rx1654_eos, rx1654_fail3912
    substr $S10, rx1654_tgt, rx1654_pos, 1
    ne $S10, ucs4:"{", rx1654_fail3912
    add rx1654_pos, 1
    rx1654_cur."!cursor_pass"(rx1654_pos, 'backtrack'=>1)
    .return (rx1654_cur)
  rx1654_restart3911:
    repr_get_attr_obj rx1654_cstack, rx1654_cur, rx1654_curclass, "$!cstack"
  rx1654_fail3912:
    unless rx1654_bstack, rx1654_done3910
    pop $I19, rx1654_bstack
    if_null rx1654_cstack, rx1654_cstack_done3915
    unless rx1654_cstack, rx1654_cstack_done3915
    dec $I19
    set $P11, rx1654_cstack[$I19]
  rx1654_cstack_done3915:
    pop rx1654_rep, rx1654_bstack
    pop rx1654_pos, rx1654_bstack
    pop $I19, rx1654_bstack
    lt rx1654_pos, -1, rx1654_done3910
    lt rx1654_pos, 0, rx1654_fail3912
    eq $I19, 0, rx1654_fail3912
    nqp_islist $I20, rx1654_cstack
    unless $I20, rx1654_jump3913
    elements $I18, rx1654_bstack
    le $I18, 0, rx1654_cut3914
    dec $I18
    set $I18, rx1654_bstack[$I18]
  rx1654_cut3914:
    assign rx1654_cstack, $I18
  rx1654_jump3913:
    jump $I19
  rx1654_done3910:
    rx1654_cur."!cursor_fail"()
    .return (rx1654_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<!>" :subid("cuid_238_1361734139.417") :anon :lex :outer("cuid_416_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1445
    .param pmc _lex_param_0 
    .const 'Sub' $P5003 = 'cuid_239_1361734139.417' 
    capture_lex $P5003 
    .const 'Sub' $P5003 = 'cuid_240_1361734139.417' 
    capture_lex $P5003 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1657_start
    .local string rx1657_tgt
    .local int rx1657_pos
    .local int rx1657_off
    .local int rx1657_eos
    .local int rx1657_rep
    .local pmc rx1657_cur
    .local pmc rx1657_curclass
    .local pmc rx1657_bstack
    .local pmc rx1657_cstack
    rx1657_start = self."!cursor_start_all"()
    set rx1657_cur, rx1657_start[0]
    set rx1657_tgt, rx1657_start[1]
    set rx1657_pos, rx1657_start[2]
    set rx1657_curclass, rx1657_start[3]
    set rx1657_bstack, rx1657_start[4]
    set $I19, rx1657_start[5]
    store_lex unicode:"$\x{a2}", rx1657_cur
    length rx1657_eos, rx1657_tgt
    eq $I19, 1, rx1657_restart3922
    gt rx1657_pos, rx1657_eos, rx1657_fail3923
    repr_get_attr_int $I11, self, rx1657_curclass, "$!from"
    ne $I11, -1, rxscan1658_done3929
    goto rxscan1658_scan3928
  rxscan1658_loop3927:
    inc rx1657_pos
    gt rx1657_pos, rx1657_eos, rx1657_fail3923
    repr_bind_attr_int rx1657_cur, rx1657_curclass, "$!from", rx1657_pos
  rxscan1658_scan3928:
    nqp_rxmark rx1657_bstack, rxscan1658_loop3927, rx1657_pos, 0
  rxscan1658_done3929:
    add $I11, rx1657_pos, 1
    gt $I11, rx1657_eos, rx1657_fail3923
    substr $S10, rx1657_tgt, rx1657_pos, 1
    ne $S10, ucs4:"!", rx1657_fail3923
    add rx1657_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1659_03931
    nqp_push_label $P11, alt1659_13942
    nqp_rxmark rx1657_bstack, alt1659_end3930, -1, 0
    rx1657_cur."!alt"(rx1657_pos, "alt_nfa__41_1361734143.005", $P11)
    goto rx1657_fail3923
  alt1659_03931:
    .const 'Sub' $P5001 = 'cuid_239_1361734139.417' 
    capture_lex $P5001
    repr_bind_attr_int rx1657_cur, rx1657_curclass, "$!pos", rx1657_pos
    $P11 = rx1657_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1657_curclass, "$!pos"
    lt $I11, 0, rx1657_fail3923
    goto alt1659_end3930
  alt1659_13942:
    .const 'Sub' $P5002 = 'cuid_240_1361734139.417' 
    capture_lex $P5002
    repr_bind_attr_int rx1657_cur, rx1657_curclass, "$!pos", rx1657_pos
    $P11 = rx1657_cur."before"($P5002)
    repr_get_attr_int $I11, $P11, rx1657_curclass, "$!pos"
    ge $I11, 0, rx1657_fail3923
    repr_bind_attr_int rx1657_cur, rx1657_curclass, "$!pos", rx1657_pos
    $P11 = rx1657_cur."assertion"()
    repr_get_attr_int $I11, $P11, rx1657_curclass, "$!pos"
    lt $I11, 0, rx1657_fail3923
    nqp_rxmark rx1657_bstack, rxsubrule1664_pass3953, -1, 0
  rxsubrule1664_pass3953:
    rx1657_cstack = rx1657_cur."!cursor_capture"($P11, "assertion")
    repr_get_attr_int rx1657_pos, $P11, rx1657_curclass, "$!pos"
    goto alt1659_end3930
  alt1659_end3930:
    nqp_rxcommit rx1657_bstack, alt1659_end3930
    rx1657_cur."!cursor_pass"(rx1657_pos, "assertion:sym<!>", 'backtrack'=>1)
    .return (rx1657_cur)
  rx1657_restart3922:
    repr_get_attr_obj rx1657_cstack, rx1657_cur, rx1657_curclass, "$!cstack"
  rx1657_fail3923:
    unless rx1657_bstack, rx1657_done3921
    pop $I19, rx1657_bstack
    if_null rx1657_cstack, rx1657_cstack_done3926
    unless rx1657_cstack, rx1657_cstack_done3926
    dec $I19
    set $P11, rx1657_cstack[$I19]
  rx1657_cstack_done3926:
    pop rx1657_rep, rx1657_bstack
    pop rx1657_pos, rx1657_bstack
    pop $I19, rx1657_bstack
    lt rx1657_pos, -1, rx1657_done3921
    lt rx1657_pos, 0, rx1657_fail3923
    eq $I19, 0, rx1657_fail3923
    nqp_islist $I20, rx1657_cstack
    unless $I20, rx1657_jump3924
    elements $I18, rx1657_bstack
    le $I18, 0, rx1657_cut3925
    dec $I18
    set $I18, rx1657_bstack[$I18]
  rx1657_cut3925:
    assign rx1657_cstack, $I18
  rx1657_jump3924:
    jump $I19
  rx1657_done3921:
    rx1657_cur."!cursor_fail"()
    .return (rx1657_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_239_1361734139.417") :anon :lex :outer("cuid_238_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1660_start
    .local string rx1660_tgt
    .local int rx1660_pos
    .local int rx1660_off
    .local int rx1660_eos
    .local int rx1660_rep
    .local pmc rx1660_cur
    .local pmc rx1660_curclass
    .local pmc rx1660_bstack
    .local pmc rx1660_cstack
    rx1660_start = self."!cursor_start_all"()
    set rx1660_cur, rx1660_start[0]
    set rx1660_tgt, rx1660_start[1]
    set rx1660_pos, rx1660_start[2]
    set rx1660_curclass, rx1660_start[3]
    set rx1660_bstack, rx1660_start[4]
    set $I19, rx1660_start[5]
    store_lex unicode:"$\x{a2}", rx1660_cur
    length rx1660_eos, rx1660_tgt
    eq $I19, 1, rx1660_restart3934
    gt rx1660_pos, rx1660_eos, rx1660_fail3935
    repr_get_attr_int $I11, self, rx1660_curclass, "$!from"
    ne $I11, -1, rxscan1661_done3941
    goto rxscan1661_scan3940
  rxscan1661_loop3939:
    inc rx1660_pos
    gt rx1660_pos, rx1660_eos, rx1660_fail3935
    repr_bind_attr_int rx1660_cur, rx1660_curclass, "$!from", rx1660_pos
  rxscan1661_scan3940:
    nqp_rxmark rx1660_bstack, rxscan1661_loop3939, rx1660_pos, 0
  rxscan1661_done3941:
    add $I11, rx1660_pos, 1
    gt $I11, rx1660_eos, rx1660_fail3935
    substr $S10, rx1660_tgt, rx1660_pos, 1
    ne $S10, ucs4:">", rx1660_fail3935
    add rx1660_pos, 1
    rx1660_cur."!cursor_pass"(rx1660_pos, 'backtrack'=>1)
    .return (rx1660_cur)
  rx1660_restart3934:
    repr_get_attr_obj rx1660_cstack, rx1660_cur, rx1660_curclass, "$!cstack"
  rx1660_fail3935:
    unless rx1660_bstack, rx1660_done3933
    pop $I19, rx1660_bstack
    if_null rx1660_cstack, rx1660_cstack_done3938
    unless rx1660_cstack, rx1660_cstack_done3938
    dec $I19
    set $P11, rx1660_cstack[$I19]
  rx1660_cstack_done3938:
    pop rx1660_rep, rx1660_bstack
    pop rx1660_pos, rx1660_bstack
    pop $I19, rx1660_bstack
    lt rx1660_pos, -1, rx1660_done3933
    lt rx1660_pos, 0, rx1660_fail3935
    eq $I19, 0, rx1660_fail3935
    nqp_islist $I20, rx1660_cstack
    unless $I20, rx1660_jump3936
    elements $I18, rx1660_bstack
    le $I18, 0, rx1660_cut3937
    dec $I18
    set $I18, rx1660_bstack[$I18]
  rx1660_cut3937:
    assign rx1660_cstack, $I18
  rx1660_jump3936:
    jump $I19
  rx1660_done3933:
    rx1660_cur."!cursor_fail"()
    .return (rx1660_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_240_1361734139.417") :anon :lex :outer("cuid_238_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1662_start
    .local string rx1662_tgt
    .local int rx1662_pos
    .local int rx1662_off
    .local int rx1662_eos
    .local int rx1662_rep
    .local pmc rx1662_cur
    .local pmc rx1662_curclass
    .local pmc rx1662_bstack
    .local pmc rx1662_cstack
    rx1662_start = self."!cursor_start_all"()
    set rx1662_cur, rx1662_start[0]
    set rx1662_tgt, rx1662_start[1]
    set rx1662_pos, rx1662_start[2]
    set rx1662_curclass, rx1662_start[3]
    set rx1662_bstack, rx1662_start[4]
    set $I19, rx1662_start[5]
    store_lex unicode:"$\x{a2}", rx1662_cur
    length rx1662_eos, rx1662_tgt
    eq $I19, 1, rx1662_restart3945
    gt rx1662_pos, rx1662_eos, rx1662_fail3946
    repr_get_attr_int $I11, self, rx1662_curclass, "$!from"
    ne $I11, -1, rxscan1663_done3952
    goto rxscan1663_scan3951
  rxscan1663_loop3950:
    inc rx1662_pos
    gt rx1662_pos, rx1662_eos, rx1662_fail3946
    repr_bind_attr_int rx1662_cur, rx1662_curclass, "$!from", rx1662_pos
  rxscan1663_scan3951:
    nqp_rxmark rx1662_bstack, rxscan1663_loop3950, rx1662_pos, 0
  rxscan1663_done3952:
    add $I11, rx1662_pos, 1
    gt $I11, rx1662_eos, rx1662_fail3946
    substr $S10, rx1662_tgt, rx1662_pos, 1
    ne $S10, ucs4:"{", rx1662_fail3946
    add rx1662_pos, 1
    rx1662_cur."!cursor_pass"(rx1662_pos, 'backtrack'=>1)
    .return (rx1662_cur)
  rx1662_restart3945:
    repr_get_attr_obj rx1662_cstack, rx1662_cur, rx1662_curclass, "$!cstack"
  rx1662_fail3946:
    unless rx1662_bstack, rx1662_done3944
    pop $I19, rx1662_bstack
    if_null rx1662_cstack, rx1662_cstack_done3949
    unless rx1662_cstack, rx1662_cstack_done3949
    dec $I19
    set $P11, rx1662_cstack[$I19]
  rx1662_cstack_done3949:
    pop rx1662_rep, rx1662_bstack
    pop rx1662_pos, rx1662_bstack
    pop $I19, rx1662_bstack
    lt rx1662_pos, -1, rx1662_done3944
    lt rx1662_pos, 0, rx1662_fail3946
    eq $I19, 0, rx1662_fail3946
    nqp_islist $I20, rx1662_cstack
    unless $I20, rx1662_jump3947
    elements $I18, rx1662_bstack
    le $I18, 0, rx1662_cut3948
    dec $I18
    set $I18, rx1662_bstack[$I18]
  rx1662_cut3948:
    assign rx1662_cstack, $I18
  rx1662_jump3947:
    jump $I19
  rx1662_done3944:
    rx1662_cur."!cursor_fail"()
    .return (rx1662_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<?{ }>" :subid("cuid_241_1361734139.417") :anon :lex :outer("cuid_416_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1447
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_242_1361734139.417' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1665_start
    .local string rx1665_tgt
    .local int rx1665_pos
    .local int rx1665_off
    .local int rx1665_eos
    .local int rx1665_rep
    .local pmc rx1665_cur
    .local pmc rx1665_curclass
    .local pmc rx1665_bstack
    .local pmc rx1665_cstack
    rx1665_start = self."!cursor_start_all"()
    set rx1665_cur, rx1665_start[0]
    set rx1665_tgt, rx1665_start[1]
    set rx1665_pos, rx1665_start[2]
    set rx1665_curclass, rx1665_start[3]
    set rx1665_bstack, rx1665_start[4]
    set $I19, rx1665_start[5]
    store_lex unicode:"$\x{a2}", rx1665_cur
    length rx1665_eos, rx1665_tgt
    eq $I19, 1, rx1665_restart3956
    gt rx1665_pos, rx1665_eos, rx1665_fail3957
    repr_get_attr_int $I11, self, rx1665_curclass, "$!from"
    ne $I11, -1, rxscan1666_done3963
    goto rxscan1666_scan3962
  rxscan1666_loop3961:
    inc rx1665_pos
    gt rx1665_pos, rx1665_eos, rx1665_fail3957
    repr_bind_attr_int rx1665_cur, rx1665_curclass, "$!from", rx1665_pos
  rxscan1666_scan3962:
    nqp_rxmark rx1665_bstack, rxscan1666_loop3961, rx1665_pos, 0
  rxscan1666_done3963:
    nqp_rxmark rx1665_bstack, rxcap1667_fail3965, rx1665_pos, 0
    ge rx1665_pos, rx1665_eos, rx1665_fail3957
    substr $S11, rx1665_tgt, rx1665_pos, 1
    index $I11, ucs4:"?!", $S11
    lt $I11, 0, rx1665_fail3957
    inc rx1665_pos
    .const 'Sub' $P5001 = 'cuid_242_1361734139.417' 
    capture_lex $P5001
    repr_bind_attr_int rx1665_cur, rx1665_curclass, "$!pos", rx1665_pos
    $P11 = rx1665_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1665_curclass, "$!pos"
    lt $I11, 0, rx1665_fail3957
    nqp_rxpeek $I19, rx1665_bstack, rxcap1667_fail3965
    inc $I19
    set $I11, rx1665_bstack[$I19]
    repr_bind_attr_int rx1665_cur, rx1665_curclass, "$!pos", rx1665_pos
    $P11 = rx1665_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1665_pos)
    rx1665_cstack = rx1665_cur."!cursor_capture"($P11, "zw")
    goto rxcap1667_done3964
  rxcap1667_fail3965:
    goto rx1665_fail3957
  rxcap1667_done3964:
    repr_bind_attr_int rx1665_cur, rx1665_curclass, "$!pos", rx1665_pos
    $P11 = rx1665_cur."codeblock"()
    repr_get_attr_int $I11, $P11, rx1665_curclass, "$!pos"
    lt $I11, 0, rx1665_fail3957
    nqp_rxmark rx1665_bstack, rxsubrule1670_pass3976, -1, 0
  rxsubrule1670_pass3976:
    rx1665_cstack = rx1665_cur."!cursor_capture"($P11, "codeblock")
    repr_get_attr_int rx1665_pos, $P11, rx1665_curclass, "$!pos"
    rx1665_cur."!cursor_pass"(rx1665_pos, "assertion:sym<?{ }>", 'backtrack'=>1)
    .return (rx1665_cur)
  rx1665_restart3956:
    repr_get_attr_obj rx1665_cstack, rx1665_cur, rx1665_curclass, "$!cstack"
  rx1665_fail3957:
    unless rx1665_bstack, rx1665_done3955
    pop $I19, rx1665_bstack
    if_null rx1665_cstack, rx1665_cstack_done3960
    unless rx1665_cstack, rx1665_cstack_done3960
    dec $I19
    set $P11, rx1665_cstack[$I19]
  rx1665_cstack_done3960:
    pop rx1665_rep, rx1665_bstack
    pop rx1665_pos, rx1665_bstack
    pop $I19, rx1665_bstack
    lt rx1665_pos, -1, rx1665_done3955
    lt rx1665_pos, 0, rx1665_fail3957
    eq $I19, 0, rx1665_fail3957
    nqp_islist $I20, rx1665_cstack
    unless $I20, rx1665_jump3958
    elements $I18, rx1665_bstack
    le $I18, 0, rx1665_cut3959
    dec $I18
    set $I18, rx1665_bstack[$I18]
  rx1665_cut3959:
    assign rx1665_cstack, $I18
  rx1665_jump3958:
    jump $I19
  rx1665_done3955:
    rx1665_cur."!cursor_fail"()
    .return (rx1665_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_242_1361734139.417") :anon :lex :outer("cuid_241_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1668_start
    .local string rx1668_tgt
    .local int rx1668_pos
    .local int rx1668_off
    .local int rx1668_eos
    .local int rx1668_rep
    .local pmc rx1668_cur
    .local pmc rx1668_curclass
    .local pmc rx1668_bstack
    .local pmc rx1668_cstack
    rx1668_start = self."!cursor_start_all"()
    set rx1668_cur, rx1668_start[0]
    set rx1668_tgt, rx1668_start[1]
    set rx1668_pos, rx1668_start[2]
    set rx1668_curclass, rx1668_start[3]
    set rx1668_bstack, rx1668_start[4]
    set $I19, rx1668_start[5]
    store_lex unicode:"$\x{a2}", rx1668_cur
    length rx1668_eos, rx1668_tgt
    eq $I19, 1, rx1668_restart3968
    gt rx1668_pos, rx1668_eos, rx1668_fail3969
    repr_get_attr_int $I11, self, rx1668_curclass, "$!from"
    ne $I11, -1, rxscan1669_done3975
    goto rxscan1669_scan3974
  rxscan1669_loop3973:
    inc rx1668_pos
    gt rx1668_pos, rx1668_eos, rx1668_fail3969
    repr_bind_attr_int rx1668_cur, rx1668_curclass, "$!from", rx1668_pos
  rxscan1669_scan3974:
    nqp_rxmark rx1668_bstack, rxscan1669_loop3973, rx1668_pos, 0
  rxscan1669_done3975:
    add $I11, rx1668_pos, 1
    gt $I11, rx1668_eos, rx1668_fail3969
    substr $S10, rx1668_tgt, rx1668_pos, 1
    ne $S10, ucs4:"{", rx1668_fail3969
    add rx1668_pos, 1
    rx1668_cur."!cursor_pass"(rx1668_pos, 'backtrack'=>1)
    .return (rx1668_cur)
  rx1668_restart3968:
    repr_get_attr_obj rx1668_cstack, rx1668_cur, rx1668_curclass, "$!cstack"
  rx1668_fail3969:
    unless rx1668_bstack, rx1668_done3967
    pop $I19, rx1668_bstack
    if_null rx1668_cstack, rx1668_cstack_done3972
    unless rx1668_cstack, rx1668_cstack_done3972
    dec $I19
    set $P11, rx1668_cstack[$I19]
  rx1668_cstack_done3972:
    pop rx1668_rep, rx1668_bstack
    pop rx1668_pos, rx1668_bstack
    pop $I19, rx1668_bstack
    lt rx1668_pos, -1, rx1668_done3967
    lt rx1668_pos, 0, rx1668_fail3969
    eq $I19, 0, rx1668_fail3969
    nqp_islist $I20, rx1668_cstack
    unless $I20, rx1668_jump3970
    elements $I18, rx1668_bstack
    le $I18, 0, rx1668_cut3971
    dec $I18
    set $I18, rx1668_bstack[$I18]
  rx1668_cut3971:
    assign rx1668_cstack, $I18
  rx1668_jump3970:
    jump $I19
  rx1668_done3967:
    rx1668_cur."!cursor_fail"()
    .return (rx1668_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<name>" :subid("cuid_243_1361734139.417") :anon :lex :outer("cuid_416_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1451
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_244_1361734139.417' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1671_start
    .local string rx1671_tgt
    .local int rx1671_pos
    .local int rx1671_off
    .local int rx1671_eos
    .local int rx1671_rep
    .local pmc rx1671_cur
    .local pmc rx1671_curclass
    .local pmc rx1671_bstack
    .local pmc rx1671_cstack
    rx1671_start = self."!cursor_start_all"()
    set rx1671_cur, rx1671_start[0]
    set rx1671_tgt, rx1671_start[1]
    set rx1671_pos, rx1671_start[2]
    set rx1671_curclass, rx1671_start[3]
    set rx1671_bstack, rx1671_start[4]
    set $I19, rx1671_start[5]
    store_lex unicode:"$\x{a2}", rx1671_cur
    length rx1671_eos, rx1671_tgt
    eq $I19, 1, rx1671_restart3979
    gt rx1671_pos, rx1671_eos, rx1671_fail3980
    repr_get_attr_int $I11, self, rx1671_curclass, "$!from"
    ne $I11, -1, rxscan1672_done3986
    goto rxscan1672_scan3985
  rxscan1672_loop3984:
    inc rx1671_pos
    gt rx1671_pos, rx1671_eos, rx1671_fail3980
    repr_bind_attr_int rx1671_cur, rx1671_curclass, "$!from", rx1671_pos
  rxscan1672_scan3985:
    nqp_rxmark rx1671_bstack, rxscan1672_loop3984, rx1671_pos, 0
  rxscan1672_done3986:
    repr_bind_attr_int rx1671_cur, rx1671_curclass, "$!pos", rx1671_pos
    $P11 = rx1671_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx1671_curclass, "$!pos"
    lt $I11, 0, rx1671_fail3980
    nqp_rxmark rx1671_bstack, rxsubrule1673_pass3987, -1, 0
  rxsubrule1673_pass3987:
    rx1671_cstack = rx1671_cur."!cursor_capture"($P11, "longname")
    repr_get_attr_int rx1671_pos, $P11, rx1671_curclass, "$!pos"
    nqp_rxmark rx1671_bstack, rxquantr1674_done3989, rx1671_pos, 0
  rxquantr1674_loop3988:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1675_03991
    nqp_push_label $P11, alt1675_14002
    nqp_push_label $P11, alt1675_24004
    nqp_push_label $P11, alt1675_34006
    nqp_push_label $P11, alt1675_44008
    nqp_rxmark rx1671_bstack, alt1675_end3990, -1, 0
    rx1671_cur."!alt"(rx1671_pos, "alt_nfa__42_1361734143.038", $P11)
    goto rx1671_fail3980
  alt1675_03991:
    .const 'Sub' $P5001 = 'cuid_244_1361734139.417' 
    capture_lex $P5001
    repr_bind_attr_int rx1671_cur, rx1671_curclass, "$!pos", rx1671_pos
    $P11 = rx1671_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1671_curclass, "$!pos"
    lt $I11, 0, rx1671_fail3980
    goto alt1675_end3990
  alt1675_14002:
    add $I11, rx1671_pos, 1
    gt $I11, rx1671_eos, rx1671_fail3980
    substr $S10, rx1671_tgt, rx1671_pos, 1
    ne $S10, ucs4:"=", rx1671_fail3980
    add rx1671_pos, 1
    repr_bind_attr_int rx1671_cur, rx1671_curclass, "$!pos", rx1671_pos
    $P11 = rx1671_cur."assertion"()
    repr_get_attr_int $I11, $P11, rx1671_curclass, "$!pos"
    lt $I11, 0, rx1671_fail3980
    nqp_rxmark rx1671_bstack, rxsubrule1678_pass4003, -1, 0
  rxsubrule1678_pass4003:
    rx1671_cstack = rx1671_cur."!cursor_capture"($P11, "assertion")
    repr_get_attr_int rx1671_pos, $P11, rx1671_curclass, "$!pos"
    goto alt1675_end3990
  alt1675_24004:
    add $I11, rx1671_pos, 1
    gt $I11, rx1671_eos, rx1671_fail3980
    substr $S10, rx1671_tgt, rx1671_pos, 1
    ne $S10, ucs4:":", rx1671_fail3980
    add rx1671_pos, 1
    repr_bind_attr_int rx1671_cur, rx1671_curclass, "$!pos", rx1671_pos
    $P11 = rx1671_cur."arglist"()
    repr_get_attr_int $I11, $P11, rx1671_curclass, "$!pos"
    lt $I11, 0, rx1671_fail3980
    nqp_rxmark rx1671_bstack, rxsubrule1679_pass4005, -1, 0
  rxsubrule1679_pass4005:
    rx1671_cstack = rx1671_cur."!cursor_capture"($P11, "arglist")
    repr_get_attr_int rx1671_pos, $P11, rx1671_curclass, "$!pos"
    goto alt1675_end3990
  alt1675_34006:
    add $I11, rx1671_pos, 1
    gt $I11, rx1671_eos, rx1671_fail3980
    substr $S10, rx1671_tgt, rx1671_pos, 1
    ne $S10, ucs4:"(", rx1671_fail3980
    add rx1671_pos, 1
    repr_bind_attr_int rx1671_cur, rx1671_curclass, "$!pos", rx1671_pos
    $P11 = rx1671_cur."LANG"("MAIN", "arglist")
    repr_get_attr_int $I11, $P11, rx1671_curclass, "$!pos"
    lt $I11, 0, rx1671_fail3980
    nqp_rxmark rx1671_bstack, rxsubrule1680_pass4007, -1, 0
  rxsubrule1680_pass4007:
    rx1671_cstack = rx1671_cur."!cursor_capture"($P11, "arglist")
    repr_get_attr_int rx1671_pos, $P11, rx1671_curclass, "$!pos"
    add $I11, rx1671_pos, 1
    gt $I11, rx1671_eos, rx1671_fail3980
    substr $S10, rx1671_tgt, rx1671_pos, 1
    ne $S10, ucs4:")", rx1671_fail3980
    add rx1671_pos, 1
    goto alt1675_end3990
  alt1675_44008:
    repr_bind_attr_int rx1671_cur, rx1671_curclass, "$!pos", rx1671_pos
    $P11 = rx1671_cur."normspace"()
    repr_get_attr_int $I11, $P11, rx1671_curclass, "$!pos"
    lt $I11, 0, rx1671_fail3980
    repr_get_attr_int rx1671_pos, $P11, rx1671_curclass, "$!pos"
    repr_bind_attr_int rx1671_cur, rx1671_curclass, "$!pos", rx1671_pos
    $P11 = rx1671_cur."nibbler"()
    repr_get_attr_int $I11, $P11, rx1671_curclass, "$!pos"
    lt $I11, 0, rx1671_fail3980
    nqp_rxmark rx1671_bstack, rxsubrule1682_pass4010, -1, 0
  rxsubrule1682_pass4010:
    rx1671_cstack = rx1671_cur."!cursor_capture"($P11, "nibbler")
    repr_get_attr_int rx1671_pos, $P11, rx1671_curclass, "$!pos"
    goto alt1675_end3990
  alt1675_end3990:
    nqp_rxpeek $I19, rx1671_bstack, rxquantr1674_done3989
    inc $I19
    inc $I19
    set rx1671_rep, rx1671_bstack[$I19]
    nqp_rxcommit rx1671_bstack, rxquantr1674_done3989
    inc rx1671_rep
  rxquantr1674_done3989:
    rx1671_cur."!cursor_pass"(rx1671_pos, "assertion:sym<name>", 'backtrack'=>1)
    .return (rx1671_cur)
  rx1671_restart3979:
    repr_get_attr_obj rx1671_cstack, rx1671_cur, rx1671_curclass, "$!cstack"
  rx1671_fail3980:
    unless rx1671_bstack, rx1671_done3978
    pop $I19, rx1671_bstack
    if_null rx1671_cstack, rx1671_cstack_done3983
    unless rx1671_cstack, rx1671_cstack_done3983
    dec $I19
    set $P11, rx1671_cstack[$I19]
  rx1671_cstack_done3983:
    pop rx1671_rep, rx1671_bstack
    pop rx1671_pos, rx1671_bstack
    pop $I19, rx1671_bstack
    lt rx1671_pos, -1, rx1671_done3978
    lt rx1671_pos, 0, rx1671_fail3980
    eq $I19, 0, rx1671_fail3980
    nqp_islist $I20, rx1671_cstack
    unless $I20, rx1671_jump3981
    elements $I18, rx1671_bstack
    le $I18, 0, rx1671_cut3982
    dec $I18
    set $I18, rx1671_bstack[$I18]
  rx1671_cut3982:
    assign rx1671_cstack, $I18
  rx1671_jump3981:
    jump $I19
  rx1671_done3978:
    rx1671_cur."!cursor_fail"()
    .return (rx1671_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_244_1361734139.417") :anon :lex :outer("cuid_243_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1676_start
    .local string rx1676_tgt
    .local int rx1676_pos
    .local int rx1676_off
    .local int rx1676_eos
    .local int rx1676_rep
    .local pmc rx1676_cur
    .local pmc rx1676_curclass
    .local pmc rx1676_bstack
    .local pmc rx1676_cstack
    rx1676_start = self."!cursor_start_all"()
    set rx1676_cur, rx1676_start[0]
    set rx1676_tgt, rx1676_start[1]
    set rx1676_pos, rx1676_start[2]
    set rx1676_curclass, rx1676_start[3]
    set rx1676_bstack, rx1676_start[4]
    set $I19, rx1676_start[5]
    store_lex unicode:"$\x{a2}", rx1676_cur
    length rx1676_eos, rx1676_tgt
    eq $I19, 1, rx1676_restart3994
    gt rx1676_pos, rx1676_eos, rx1676_fail3995
    repr_get_attr_int $I11, self, rx1676_curclass, "$!from"
    ne $I11, -1, rxscan1677_done4001
    goto rxscan1677_scan4000
  rxscan1677_loop3999:
    inc rx1676_pos
    gt rx1676_pos, rx1676_eos, rx1676_fail3995
    repr_bind_attr_int rx1676_cur, rx1676_curclass, "$!from", rx1676_pos
  rxscan1677_scan4000:
    nqp_rxmark rx1676_bstack, rxscan1677_loop3999, rx1676_pos, 0
  rxscan1677_done4001:
    add $I11, rx1676_pos, 1
    gt $I11, rx1676_eos, rx1676_fail3995
    substr $S10, rx1676_tgt, rx1676_pos, 1
    ne $S10, ucs4:">", rx1676_fail3995
    add rx1676_pos, 1
    rx1676_cur."!cursor_pass"(rx1676_pos, 'backtrack'=>1)
    .return (rx1676_cur)
  rx1676_restart3994:
    repr_get_attr_obj rx1676_cstack, rx1676_cur, rx1676_curclass, "$!cstack"
  rx1676_fail3995:
    unless rx1676_bstack, rx1676_done3993
    pop $I19, rx1676_bstack
    if_null rx1676_cstack, rx1676_cstack_done3998
    unless rx1676_cstack, rx1676_cstack_done3998
    dec $I19
    set $P11, rx1676_cstack[$I19]
  rx1676_cstack_done3998:
    pop rx1676_rep, rx1676_bstack
    pop rx1676_pos, rx1676_bstack
    pop $I19, rx1676_bstack
    lt rx1676_pos, -1, rx1676_done3993
    lt rx1676_pos, 0, rx1676_fail3995
    eq $I19, 0, rx1676_fail3995
    nqp_islist $I20, rx1676_cstack
    unless $I20, rx1676_jump3996
    elements $I18, rx1676_bstack
    le $I18, 0, rx1676_cut3997
    dec $I18
    set $I18, rx1676_bstack[$I18]
  rx1676_cut3997:
    assign rx1676_cstack, $I18
  rx1676_jump3996:
    jump $I19
  rx1676_done3993:
    rx1676_cur."!cursor_fail"()
    .return (rx1676_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<var>" :subid("cuid_245_1361734139.417") :anon :lex :outer("cuid_416_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1462
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1683_start
    .local string rx1683_tgt
    .local int rx1683_pos
    .local int rx1683_off
    .local int rx1683_eos
    .local int rx1683_rep
    .local pmc rx1683_cur
    .local pmc rx1683_curclass
    .local pmc rx1683_bstack
    .local pmc rx1683_cstack
    rx1683_start = self."!cursor_start_all"()
    set rx1683_cur, rx1683_start[0]
    set rx1683_tgt, rx1683_start[1]
    set rx1683_pos, rx1683_start[2]
    set rx1683_curclass, rx1683_start[3]
    set rx1683_bstack, rx1683_start[4]
    set $I19, rx1683_start[5]
    store_lex unicode:"$\x{a2}", rx1683_cur
    length rx1683_eos, rx1683_tgt
    eq $I19, 1, rx1683_restart4013
    gt rx1683_pos, rx1683_eos, rx1683_fail4014
    repr_get_attr_int $I11, self, rx1683_curclass, "$!from"
    ne $I11, -1, rxscan1684_done4020
    goto rxscan1684_scan4019
  rxscan1684_loop4018:
    inc rx1683_pos
    gt rx1683_pos, rx1683_eos, rx1683_fail4014
    repr_bind_attr_int rx1683_cur, rx1683_curclass, "$!from", rx1683_pos
  rxscan1684_scan4019:
    nqp_rxmark rx1683_bstack, rxscan1684_loop4018, rx1683_pos, 0
  rxscan1684_done4020:
    ge rx1683_pos, rx1683_eos, rx1683_fail4014
    substr $S11, rx1683_tgt, rx1683_pos, 1
    index $I11, ucs4:"$@", $S11
    lt $I11, 0, rx1683_fail4014
    repr_bind_attr_int rx1683_cur, rx1683_curclass, "$!pos", rx1683_pos
    $P11 = rx1683_cur."LANG"("MAIN", "variable")
    repr_get_attr_int $I11, $P11, rx1683_curclass, "$!pos"
    lt $I11, 0, rx1683_fail4014
    nqp_rxmark rx1683_bstack, rxsubrule1685_pass4021, -1, 0
  rxsubrule1685_pass4021:
    rx1683_cstack = rx1683_cur."!cursor_capture"($P11, "var")
    repr_get_attr_int rx1683_pos, $P11, rx1683_curclass, "$!pos"
    rx1683_cur."!cursor_pass"(rx1683_pos, "assertion:sym<var>", 'backtrack'=>1)
    .return (rx1683_cur)
  rx1683_restart4013:
    repr_get_attr_obj rx1683_cstack, rx1683_cur, rx1683_curclass, "$!cstack"
  rx1683_fail4014:
    unless rx1683_bstack, rx1683_done4012
    pop $I19, rx1683_bstack
    if_null rx1683_cstack, rx1683_cstack_done4017
    unless rx1683_cstack, rx1683_cstack_done4017
    dec $I19
    set $P11, rx1683_cstack[$I19]
  rx1683_cstack_done4017:
    pop rx1683_rep, rx1683_bstack
    pop rx1683_pos, rx1683_bstack
    pop $I19, rx1683_bstack
    lt rx1683_pos, -1, rx1683_done4012
    lt rx1683_pos, 0, rx1683_fail4014
    eq $I19, 0, rx1683_fail4014
    nqp_islist $I20, rx1683_cstack
    unless $I20, rx1683_jump4015
    elements $I18, rx1683_bstack
    le $I18, 0, rx1683_cut4016
    dec $I18
    set $I18, rx1683_bstack[$I18]
  rx1683_cut4016:
    assign rx1683_cstack, $I18
  rx1683_jump4015:
    jump $I19
  rx1683_done4012:
    rx1683_cur."!cursor_fail"()
    .return (rx1683_cur) 
.end
.HLL "nqp"
.namespace []
.sub "codeblock" :subid("cuid_246_1361734139.417") :anon :lex :outer("cuid_416_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1466
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1686_start
    .local string rx1686_tgt
    .local int rx1686_pos
    .local int rx1686_off
    .local int rx1686_eos
    .local int rx1686_rep
    .local pmc rx1686_cur
    .local pmc rx1686_curclass
    .local pmc rx1686_bstack
    .local pmc rx1686_cstack
    rx1686_start = self."!cursor_start_all"()
    set rx1686_cur, rx1686_start[0]
    set rx1686_tgt, rx1686_start[1]
    set rx1686_pos, rx1686_start[2]
    set rx1686_curclass, rx1686_start[3]
    set rx1686_bstack, rx1686_start[4]
    set $I19, rx1686_start[5]
    store_lex unicode:"$\x{a2}", rx1686_cur
    length rx1686_eos, rx1686_tgt
    eq $I19, 1, rx1686_restart4024
    gt rx1686_pos, rx1686_eos, rx1686_fail4025
    repr_get_attr_int $I11, self, rx1686_curclass, "$!from"
    ne $I11, -1, rxscan1687_done4031
    goto rxscan1687_scan4030
  rxscan1687_loop4029:
    inc rx1686_pos
    gt rx1686_pos, rx1686_eos, rx1686_fail4025
    repr_bind_attr_int rx1686_cur, rx1686_curclass, "$!from", rx1686_pos
  rxscan1687_scan4030:
    nqp_rxmark rx1686_bstack, rxscan1687_loop4029, rx1686_pos, 0
  rxscan1687_done4031:
    repr_bind_attr_int rx1686_cur, rx1686_curclass, "$!pos", rx1686_pos
    $P11 = rx1686_cur."LANG"("MAIN", "pblock")
    repr_get_attr_int $I11, $P11, rx1686_curclass, "$!pos"
    lt $I11, 0, rx1686_fail4025
    nqp_rxmark rx1686_bstack, rxsubrule1688_pass4032, -1, 0
  rxsubrule1688_pass4032:
    rx1686_cstack = rx1686_cur."!cursor_capture"($P11, "block")
    repr_get_attr_int rx1686_pos, $P11, rx1686_curclass, "$!pos"
    rx1686_cur."!cursor_pass"(rx1686_pos, "codeblock", 'backtrack'=>1)
    .return (rx1686_cur)
  rx1686_restart4024:
    repr_get_attr_obj rx1686_cstack, rx1686_cur, rx1686_curclass, "$!cstack"
  rx1686_fail4025:
    unless rx1686_bstack, rx1686_done4023
    pop $I19, rx1686_bstack
    if_null rx1686_cstack, rx1686_cstack_done4028
    unless rx1686_cstack, rx1686_cstack_done4028
    dec $I19
    set $P11, rx1686_cstack[$I19]
  rx1686_cstack_done4028:
    pop rx1686_rep, rx1686_bstack
    pop rx1686_pos, rx1686_bstack
    pop $I19, rx1686_bstack
    lt rx1686_pos, -1, rx1686_done4023
    lt rx1686_pos, 0, rx1686_fail4025
    eq $I19, 0, rx1686_fail4025
    nqp_islist $I20, rx1686_cstack
    unless $I20, rx1686_jump4026
    elements $I18, rx1686_bstack
    le $I18, 0, rx1686_cut4027
    dec $I18
    set $I18, rx1686_bstack[$I18]
  rx1686_cut4027:
    assign rx1686_cstack, $I18
  rx1686_jump4026:
    jump $I19
  rx1686_done4023:
    rx1686_cur."!cursor_fail"()
    .return (rx1686_cur) 
.end
.HLL "nqp"
.namespace []
.sub "arg" :subid("cuid_247_1361734139.417") :anon :lex :outer("cuid_416_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1470
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1689_start
    .local string rx1689_tgt
    .local int rx1689_pos
    .local int rx1689_off
    .local int rx1689_eos
    .local int rx1689_rep
    .local pmc rx1689_cur
    .local pmc rx1689_curclass
    .local pmc rx1689_bstack
    .local pmc rx1689_cstack
    rx1689_start = self."!cursor_start_all"()
    set rx1689_cur, rx1689_start[0]
    set rx1689_tgt, rx1689_start[1]
    set rx1689_pos, rx1689_start[2]
    set rx1689_curclass, rx1689_start[3]
    set rx1689_bstack, rx1689_start[4]
    set $I19, rx1689_start[5]
    store_lex unicode:"$\x{a2}", rx1689_cur
    length rx1689_eos, rx1689_tgt
    eq $I19, 1, rx1689_restart4035
    gt rx1689_pos, rx1689_eos, rx1689_fail4036
    repr_get_attr_int $I11, self, rx1689_curclass, "$!from"
    ne $I11, -1, rxscan1690_done4042
    goto rxscan1690_scan4041
  rxscan1690_loop4040:
    inc rx1689_pos
    gt rx1689_pos, rx1689_eos, rx1689_fail4036
    repr_bind_attr_int rx1689_cur, rx1689_curclass, "$!from", rx1689_pos
  rxscan1690_scan4041:
    nqp_rxmark rx1689_bstack, rxscan1690_loop4040, rx1689_pos, 0
  rxscan1690_done4042:
    repr_bind_attr_int rx1689_cur, rx1689_curclass, "$!pos", rx1689_pos
    $P11 = rx1689_cur."LANG"("MAIN", "quote_EXPR")
    repr_get_attr_int $I11, $P11, rx1689_curclass, "$!pos"
    lt $I11, 0, rx1689_fail4036
    nqp_rxmark rx1689_bstack, rxsubrule1691_pass4043, -1, 0
  rxsubrule1691_pass4043:
    rx1689_cstack = rx1689_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1689_pos, $P11, rx1689_curclass, "$!pos"
    rx1689_cur."!cursor_pass"(rx1689_pos, "arg", 'backtrack'=>1)
    .return (rx1689_cur)
  rx1689_restart4035:
    repr_get_attr_obj rx1689_cstack, rx1689_cur, rx1689_curclass, "$!cstack"
  rx1689_fail4036:
    unless rx1689_bstack, rx1689_done4034
    pop $I19, rx1689_bstack
    if_null rx1689_cstack, rx1689_cstack_done4039
    unless rx1689_cstack, rx1689_cstack_done4039
    dec $I19
    set $P11, rx1689_cstack[$I19]
  rx1689_cstack_done4039:
    pop rx1689_rep, rx1689_bstack
    pop rx1689_pos, rx1689_bstack
    pop $I19, rx1689_bstack
    lt rx1689_pos, -1, rx1689_done4034
    lt rx1689_pos, 0, rx1689_fail4036
    eq $I19, 0, rx1689_fail4036
    nqp_islist $I20, rx1689_cstack
    unless $I20, rx1689_jump4037
    elements $I18, rx1689_bstack
    le $I18, 0, rx1689_cut4038
    dec $I18
    set $I18, rx1689_bstack[$I18]
  rx1689_cut4038:
    assign rx1689_cstack, $I18
  rx1689_jump4037:
    jump $I19
  rx1689_done4034:
    rx1689_cur."!cursor_fail"()
    .return (rx1689_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_417_1361734139.417") :anon :lex :outer("cuid_374_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1479
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$var", $P101 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_168 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    set fb_tmp_168, _lex_param_1
    repr_defined $I5001, fb_tmp_168
    unless $I5001 goto if1692_else4044 
    set $P5002, fb_tmp_168[0]
    set $P5004, $P5002
    goto if1692_end4045
  if1692_else4044:
    null $P5003
    set $P5004, $P5003
  if1692_end4045:
    unless_null $P5004, vivi_16934046
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_16934046:
    set $P101, $P5004
    nqp_get_sc_object $P5006, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    type_check $I5002, $P101, $P5006
    if $I5002 goto unless1694_end4048 
.annotate 'line', 1481
    box $P5007, "Pre-increment can only work on a variable"
    die $P5007
  unless1694_end4048:
.annotate 'line', 1484
    nqp_get_sc_object $P5008, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 1487
    nqp_get_sc_object $P5009, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 1490
    nqp_get_sc_object $P5010, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 42
    $P5011 = $P5010."new"(1 :named("value"))
    $P5012 = $P5009."new"($P101, $P5011, "add_n" :named("op"))
    $P5013 = $P5008."new"($P101, $P5012, "bind" :named("op"))
    $P5014 = _lex_param_0."as_post"($P5013)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_418_1361734139.417") :anon :lex :outer("cuid_374_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1494
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$var", $P101 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_169 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    set fb_tmp_169, _lex_param_1
    repr_defined $I5001, fb_tmp_169
    unless $I5001 goto if1695_else4049 
    set $P5002, fb_tmp_169[0]
    set $P5004, $P5002
    goto if1695_end4050
  if1695_else4049:
    null $P5003
    set $P5004, $P5003
  if1695_end4050:
    unless_null $P5004, vivi_16964051
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_16964051:
    set $P101, $P5004
    nqp_get_sc_object $P5006, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    type_check $I5002, $P101, $P5006
    if $I5002 goto unless1697_end4053 
.annotate 'line', 1496
    box $P5007, "Pre-decrement can only work on a variable"
    die $P5007
  unless1697_end4053:
.annotate 'line', 1499
    nqp_get_sc_object $P5008, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 1502
    nqp_get_sc_object $P5009, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 1505
    nqp_get_sc_object $P5010, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 42
    $P5011 = $P5010."new"(1 :named("value"))
    $P5012 = $P5009."new"($P101, $P5011, "sub_n" :named("op"))
    $P5013 = $P5008."new"($P101, $P5012, "bind" :named("op"))
    $P5014 = _lex_param_0."as_post"($P5013)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_419_1361734139.417") :anon :lex :outer("cuid_374_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1509
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$var", $P101 
    .lex "$tmp", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_170 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
    set fb_tmp_170, _lex_param_1
    repr_defined $I5001, fb_tmp_170
    unless $I5001 goto if1698_else4054 
    set $P5003, fb_tmp_170[0]
    set $P5005, $P5003
    goto if1698_end4055
  if1698_else4054:
    null $P5004
    set $P5005, $P5004
  if1698_end4055:
    unless_null $P5005, vivi_16994056
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5005, $P5006
  vivi_16994056:
    set $P101, $P5005
.annotate 'line', 1511
    nqp_get_sc_object $P5007, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    $P5008 = $P5007."unique"("tmp")
    set $P102, $P5008
    nqp_get_sc_object $P5009, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    type_check $I5002, $P101, $P5009
    if $I5002 goto unless1700_end4058 
.annotate 'line', 1512
    box $P5010, "Post-increment can only work on a variable"
    die $P5010
  unless1700_end4058:
.annotate 'line', 1515
    nqp_get_sc_object $P5011, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 98
.annotate 'line', 1517
    nqp_get_sc_object $P5012, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 1519
    nqp_get_sc_object $P5013, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5014 = $P101."returns"()
    $P5015 = $P5013."new"($P102 :named("name"), "local" :named("scope"), "var" :named("decl"), $P5014 :named("returns"))
    $P5016 = $P5012."new"($P5015, $P101, "bind" :named("op"))
.annotate 'line', 1522
    nqp_get_sc_object $P5017, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 1525
    nqp_get_sc_object $P5018, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 1527
    nqp_get_sc_object $P5019, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5020 = $P101."returns"()
    $P5021 = $P5019."new"($P102 :named("name"), "local" :named("scope"), $P5020 :named("returns"))
.annotate 'line', 1528
    nqp_get_sc_object $P5022, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 42
    $P5023 = $P5022."new"(1 :named("value"))
    $P5024 = $P5018."new"($P5021, $P5023, "add_n" :named("op"))
    $P5025 = $P5017."new"($P101, $P5024, "bind" :named("op"))
    $P5026 = $P5011."new"($P5016, $P5025, 0 :named("resultchild"))
    $P5027 = _lex_param_0."as_post"($P5026)
    .return ($P5027) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_420_1361734139.417") :anon :lex :outer("cuid_374_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1533
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$var", $P101 
    .lex "$tmp", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_171 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
    set fb_tmp_171, _lex_param_1
    repr_defined $I5001, fb_tmp_171
    unless $I5001 goto if1701_else4059 
    set $P5003, fb_tmp_171[0]
    set $P5005, $P5003
    goto if1701_end4060
  if1701_else4059:
    null $P5004
    set $P5005, $P5004
  if1701_end4060:
    unless_null $P5005, vivi_17024061
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5005, $P5006
  vivi_17024061:
    set $P101, $P5005
.annotate 'line', 1535
    nqp_get_sc_object $P5007, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    $P5008 = $P5007."unique"("tmp")
    set $P102, $P5008
    nqp_get_sc_object $P5009, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    type_check $I5002, $P101, $P5009
    if $I5002 goto unless1703_end4063 
.annotate 'line', 1536
    box $P5010, "Post-decrement can only work on a variable"
    die $P5010
  unless1703_end4063:
.annotate 'line', 1539
    nqp_get_sc_object $P5011, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 98
.annotate 'line', 1541
    nqp_get_sc_object $P5012, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 1543
    nqp_get_sc_object $P5013, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5014 = $P5013."new"($P102 :named("name"), "local" :named("scope"), "var" :named("decl"))
    $P5015 = $P5012."new"($P5014, $P101, "bind" :named("op"))
.annotate 'line', 1546
    nqp_get_sc_object $P5016, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 1549
    nqp_get_sc_object $P5017, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 1551
    nqp_get_sc_object $P5018, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5019 = $P5018."new"($P102 :named("name"), "local" :named("scope"))
.annotate 'line', 1552
    nqp_get_sc_object $P5020, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 42
    $P5021 = $P5020."new"(1 :named("value"))
    $P5022 = $P5017."new"($P5019, $P5021, "sub_n" :named("op"))
    $P5023 = $P5016."new"($P101, $P5022, "bind" :named("op"))
    $P5024 = $P5011."new"($P5015, $P5023, 0 :named("resultchild"))
    $P5025 = _lex_param_0."as_post"($P5024)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_421_1361734139.417") :anon :lex :outer("cuid_374_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1557
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_172 
.annotate 'line', 1558
    set fb_tmp_172, _lex_param_1
    repr_defined $I5001, fb_tmp_172
    unless $I5001 goto if1704_else4064 
    set $P5001, fb_tmp_172[0]
    set $P5003, $P5001
    goto if1704_end4065
  if1704_else4064:
    null $P5002
    set $P5003, $P5002
  if1704_end4065:
    unless_null $P5003, vivi_17054066
    nqp_get_sc_object $P5004, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5003, $P5004
  vivi_17054066:
    $P5005 = _lex_param_0."as_post"($P5003, "n" :named("want"))
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_422_1361734139.417") :anon :lex :outer("cuid_374_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1561
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_173 
.annotate 'line', 1562
    set fb_tmp_173, _lex_param_1
    repr_defined $I5001, fb_tmp_173
    unless $I5001 goto if1706_else4067 
    set $P5001, fb_tmp_173[0]
    set $P5003, $P5001
    goto if1706_end4068
  if1706_else4067:
    null $P5002
    set $P5003, $P5002
  if1706_end4068:
    unless_null $P5003, vivi_17074069
    nqp_get_sc_object $P5004, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5003, $P5004
  vivi_17074069:
    $P5005 = _lex_param_0."as_post"($P5003, "s" :named("want"))
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_423_1361734139.417") :anon :lex :outer("cuid_374_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1565
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_174 
    .local pmc fb_tmp_175 
.annotate 'line', 1566
    nqp_get_sc_object $P5001, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 1568
    nqp_get_sc_object $P5002, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    set fb_tmp_174, _lex_param_1
    repr_defined $I5001, fb_tmp_174
    unless $I5001 goto if1708_else4070 
    set $P5003, fb_tmp_174[0]
    set $P5005, $P5003
    goto if1708_end4071
  if1708_else4070:
    null $P5004
    set $P5005, $P5004
  if1708_end4071:
    unless_null $P5005, vivi_17094072
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5005, $P5006
  vivi_17094072:
    $P5007 = $P5002."new"($P5005, "where" :named("op"))
.annotate 'line', 1569
    nqp_get_sc_object $P5008, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    set fb_tmp_175, _lex_param_1
    repr_defined $I5002, fb_tmp_175
    unless $I5002 goto if1710_else4073 
    set $P5009, fb_tmp_175[1]
    set $P5011, $P5009
    goto if1710_end4074
  if1710_else4073:
    null $P5010
    set $P5011, $P5010
  if1710_end4074:
    unless_null $P5011, vivi_17114075
    nqp_get_sc_object $P5012, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5011, $P5012
  vivi_17114075:
    $P5013 = $P5008."new"($P5011, "where" :named("op"))
    $P5014 = $P5001."new"($P5007, $P5013, "iseq_i" :named("op"))
    $P5015 = _lex_param_0."as_post"($P5014)
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_424_1361734139.417") :anon :lex :outer("cuid_374_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1573
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$res", $P101 
    .lex "$ops", $P102 
    .lex "$arg_post", $P103 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_176 
    .local pmc fb_tmp_177 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P103, $P5003
.annotate 'line', 1574
    find_dynamic_lex $P5004, "$*REGALLOC"
    unless_null $P5004, fallback4076
    nqp_get_sc_object $P5006, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5005, $P5006
    set fb_tmp_176, $P5005
    repr_defined $I5001, fb_tmp_176
    unless $I5001 goto if1712_else4077 
    set $P5007, fb_tmp_176["$REGALLOC"]
    set $P5009, $P5007
    goto if1712_end4078
  if1712_else4077:
    null $P5008
    set $P5009, $P5008
  if1712_end4078:
    unless_null $P5009, vivi_17134079
    nqp_get_sc_object $P5010, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5009, $P5010
  vivi_17134079:
    unless_null $P5009, vivi_17144080
    die "Contextual $*REGALLOC not found"
    box $P5011, "Contextual $*REGALLOC not found"
    set $P5009, $P5011
  vivi_17144080:
    set $P5004, $P5009
  fallback4076:
    $P5012 = $P5004."fresh_i"()
    set $P101, $P5012
.annotate 'line', 1575
    nqp_get_sc_object $P5013, "8401C578AB7B881D927A9D59824BE7FD2532AA0E-1361734121.453", 31
    $P5014 = $P5013."new"($P101 :named("result"))
    set $P102, $P5014
.annotate 'line', 1576
    set fb_tmp_177, _lex_param_1
    repr_defined $I5002, fb_tmp_177
    unless $I5002 goto if1715_else4081 
    set $P5015, fb_tmp_177[0]
    set $P5017, $P5015
    goto if1715_end4082
  if1715_else4081:
    null $P5016
    set $P5017, $P5016
  if1715_end4082:
    unless_null $P5017, vivi_17164083
    nqp_get_sc_object $P5018, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5017, $P5018
  vivi_17164083:
    $P5019 = _lex_param_0."as_post"($P5017)
    set $P103, $P5019
.annotate 'line', 1577
    $P5020 = $P103."result"()
    $P5021 = _lex_param_0."infer_type"($P5020)
    set $S5002, $P5021
    downcase $S5001, $S5002
    iseq $I5003, $S5001, "i"
    unless $I5003 goto if1717_else4084 
.annotate 'line', 1578
    $P102."push"($P103)
.annotate 'line', 1579
    $P5022 = $P102."push_pirop"("not", $P101, $P103)
    goto if1717_end4085
  if1717_else4084:
.annotate 'line', 1581
.annotate 'line', 1582
    $P5023 = _lex_param_0."coerce"($P103, "P")
    set $P103, $P5023
.annotate 'line', 1583
    $P102."push"($P103)
.annotate 'line', 1584
    $P5024 = $P102."push_pirop"("isfalse", $P101, $P103)
  if1717_end4085:
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_426_1361734139.417") :anon :lex :outer("cuid_374_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1590
    .const 'Sub' $P5124 = 'cuid_425_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_429_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_432_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_433_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_436_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_438_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_439_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_440_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_442_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_443_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_449_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_248_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_249_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_250_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_251_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_252_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_253_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_254_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_255_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_256_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_257_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_258_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_259_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_260_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_261_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_262_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_263_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_264_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_265_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_266_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_267_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_268_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_269_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_270_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_271_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_272_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_273_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_274_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_275_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_276_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_277_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_278_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_279_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_280_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_281_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_282_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_283_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_284_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_285_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_286_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_287_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_288_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_289_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_290_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_291_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_292_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_293_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_294_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_295_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_296_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_297_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_298_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_299_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_300_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_301_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_302_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_303_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_304_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_305_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_306_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_307_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_308_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_309_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_310_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_311_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_312_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_313_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_314_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_315_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_316_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_317_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_318_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_319_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_320_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_321_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_322_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_323_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_324_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_325_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_326_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_327_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_328_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_329_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_330_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_331_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_332_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_333_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_334_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_335_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_336_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_337_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_338_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_339_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_340_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_341_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_342_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_343_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_344_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_345_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_346_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_347_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_348_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_349_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_350_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_351_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_352_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_353_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_354_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_355_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_356_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_357_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_358_1361734139.417' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_359_1361734139.417' 
    capture_lex $P5124 
    .lex "&xblock_immediate", $P101 
    .lex "&block_immediate", $P102 
    .lex "&default_for", $P103 
    .lex "&default_value_for_prim", $P104 
    .lex "&colonpair_str", $P105 
    .lex "&import_HOW_exports", $P106 
    .lex "&set_block_handler", $P107 
    .lex "&only_star_block", $P108 
    .lex "&attach_multi_signature", $P109 
    .lex "&wrap_return_handler", $P110 
    .lex "&lexical_package_lookup", $P111 
    .lex "$?PACKAGE", $P112 
    .lex "$?CLASS", $P113 
    .const 'Sub' $P5001 = 'cuid_425_1361734139.417' 
    capture_lex $P5001
    set $P101, $P5001
    .const 'Sub' $P5002 = 'cuid_429_1361734139.417' 
    capture_lex $P5002
    set $P102, $P5002
    .const 'Sub' $P5003 = 'cuid_432_1361734139.417' 
    capture_lex $P5003
    set $P103, $P5003
    .const 'Sub' $P5004 = 'cuid_433_1361734139.417' 
    capture_lex $P5004
    set $P104, $P5004
    .const 'Sub' $P5005 = 'cuid_436_1361734139.417' 
    capture_lex $P5005
    set $P105, $P5005
    .const 'Sub' $P5006 = 'cuid_438_1361734139.417' 
    capture_lex $P5006
    set $P106, $P5006
    .const 'Sub' $P5007 = 'cuid_439_1361734139.417' 
    capture_lex $P5007
    set $P107, $P5007
    .const 'Sub' $P5008 = 'cuid_440_1361734139.417' 
    capture_lex $P5008
    set $P108, $P5008
    .const 'Sub' $P5009 = 'cuid_442_1361734139.417' 
    capture_lex $P5009
    set $P109, $P5009
    .const 'Sub' $P5010 = 'cuid_443_1361734139.417' 
    capture_lex $P5010
    set $P110, $P5010
    .const 'Sub' $P5011 = 'cuid_449_1361734139.417' 
    capture_lex $P5011
    set $P111, $P5011
    .const 'Sub' $P5012 = 'cuid_248_1361734139.417' 
    capture_lex $P5012
    .const 'Sub' $P5013 = 'cuid_249_1361734139.417' 
    capture_lex $P5013
    .const 'Sub' $P5014 = 'cuid_250_1361734139.417' 
    capture_lex $P5014
    .const 'Sub' $P5015 = 'cuid_251_1361734139.417' 
    capture_lex $P5015
    .const 'Sub' $P5016 = 'cuid_252_1361734139.417' 
    capture_lex $P5016
    .const 'Sub' $P5017 = 'cuid_253_1361734139.417' 
    capture_lex $P5017
    .const 'Sub' $P5018 = 'cuid_254_1361734139.417' 
    capture_lex $P5018
    .const 'Sub' $P5019 = 'cuid_255_1361734139.417' 
    capture_lex $P5019
    .const 'Sub' $P5020 = 'cuid_256_1361734139.417' 
    capture_lex $P5020
    .const 'Sub' $P5021 = 'cuid_257_1361734139.417' 
    capture_lex $P5021
    .const 'Sub' $P5022 = 'cuid_258_1361734139.417' 
    capture_lex $P5022
    .const 'Sub' $P5023 = 'cuid_259_1361734139.417' 
    capture_lex $P5023
    .const 'Sub' $P5024 = 'cuid_260_1361734139.417' 
    capture_lex $P5024
    .const 'Sub' $P5025 = 'cuid_261_1361734139.417' 
    capture_lex $P5025
    .const 'Sub' $P5026 = 'cuid_262_1361734139.417' 
    capture_lex $P5026
    .const 'Sub' $P5027 = 'cuid_263_1361734139.417' 
    capture_lex $P5027
    .const 'Sub' $P5028 = 'cuid_264_1361734139.417' 
    capture_lex $P5028
    .const 'Sub' $P5029 = 'cuid_265_1361734139.417' 
    capture_lex $P5029
    .const 'Sub' $P5030 = 'cuid_266_1361734139.417' 
    capture_lex $P5030
    .const 'Sub' $P5031 = 'cuid_267_1361734139.417' 
    capture_lex $P5031
    .const 'Sub' $P5032 = 'cuid_268_1361734139.417' 
    capture_lex $P5032
    .const 'Sub' $P5033 = 'cuid_269_1361734139.417' 
    capture_lex $P5033
    .const 'Sub' $P5034 = 'cuid_270_1361734139.417' 
    capture_lex $P5034
    .const 'Sub' $P5035 = 'cuid_271_1361734139.417' 
    capture_lex $P5035
    .const 'Sub' $P5036 = 'cuid_272_1361734139.417' 
    capture_lex $P5036
    .const 'Sub' $P5037 = 'cuid_273_1361734139.417' 
    capture_lex $P5037
    .const 'Sub' $P5038 = 'cuid_274_1361734139.417' 
    capture_lex $P5038
    .const 'Sub' $P5039 = 'cuid_275_1361734139.417' 
    capture_lex $P5039
    .const 'Sub' $P5040 = 'cuid_276_1361734139.417' 
    capture_lex $P5040
    .const 'Sub' $P5041 = 'cuid_277_1361734139.417' 
    capture_lex $P5041
    .const 'Sub' $P5042 = 'cuid_278_1361734139.417' 
    capture_lex $P5042
    .const 'Sub' $P5043 = 'cuid_279_1361734139.417' 
    capture_lex $P5043
    .const 'Sub' $P5044 = 'cuid_280_1361734139.417' 
    capture_lex $P5044
    .const 'Sub' $P5045 = 'cuid_281_1361734139.417' 
    capture_lex $P5045
    .const 'Sub' $P5046 = 'cuid_282_1361734139.417' 
    capture_lex $P5046
    .const 'Sub' $P5047 = 'cuid_283_1361734139.417' 
    capture_lex $P5047
    .const 'Sub' $P5048 = 'cuid_284_1361734139.417' 
    capture_lex $P5048
    .const 'Sub' $P5049 = 'cuid_285_1361734139.417' 
    capture_lex $P5049
    .const 'Sub' $P5050 = 'cuid_286_1361734139.417' 
    capture_lex $P5050
    .const 'Sub' $P5051 = 'cuid_287_1361734139.417' 
    capture_lex $P5051
    .const 'Sub' $P5052 = 'cuid_288_1361734139.417' 
    capture_lex $P5052
    .const 'Sub' $P5053 = 'cuid_289_1361734139.417' 
    capture_lex $P5053
    .const 'Sub' $P5054 = 'cuid_290_1361734139.417' 
    capture_lex $P5054
    .const 'Sub' $P5055 = 'cuid_291_1361734139.417' 
    capture_lex $P5055
    .const 'Sub' $P5056 = 'cuid_292_1361734139.417' 
    capture_lex $P5056
    .const 'Sub' $P5057 = 'cuid_293_1361734139.417' 
    capture_lex $P5057
    .const 'Sub' $P5058 = 'cuid_294_1361734139.417' 
    capture_lex $P5058
    .const 'Sub' $P5059 = 'cuid_295_1361734139.417' 
    capture_lex $P5059
    .const 'Sub' $P5060 = 'cuid_296_1361734139.417' 
    capture_lex $P5060
    .const 'Sub' $P5061 = 'cuid_297_1361734139.417' 
    capture_lex $P5061
    .const 'Sub' $P5062 = 'cuid_298_1361734139.417' 
    capture_lex $P5062
    .const 'Sub' $P5063 = 'cuid_299_1361734139.417' 
    capture_lex $P5063
    .const 'Sub' $P5064 = 'cuid_300_1361734139.417' 
    capture_lex $P5064
    .const 'Sub' $P5065 = 'cuid_301_1361734139.417' 
    capture_lex $P5065
    .const 'Sub' $P5066 = 'cuid_302_1361734139.417' 
    capture_lex $P5066
    .const 'Sub' $P5067 = 'cuid_303_1361734139.417' 
    capture_lex $P5067
    .const 'Sub' $P5068 = 'cuid_304_1361734139.417' 
    capture_lex $P5068
    .const 'Sub' $P5069 = 'cuid_305_1361734139.417' 
    capture_lex $P5069
    .const 'Sub' $P5070 = 'cuid_306_1361734139.417' 
    capture_lex $P5070
    .const 'Sub' $P5071 = 'cuid_307_1361734139.417' 
    capture_lex $P5071
    .const 'Sub' $P5072 = 'cuid_308_1361734139.417' 
    capture_lex $P5072
    .const 'Sub' $P5073 = 'cuid_309_1361734139.417' 
    capture_lex $P5073
    .const 'Sub' $P5074 = 'cuid_310_1361734139.417' 
    capture_lex $P5074
    .const 'Sub' $P5075 = 'cuid_311_1361734139.417' 
    capture_lex $P5075
    .const 'Sub' $P5076 = 'cuid_312_1361734139.417' 
    capture_lex $P5076
    .const 'Sub' $P5077 = 'cuid_313_1361734139.417' 
    capture_lex $P5077
    .const 'Sub' $P5078 = 'cuid_314_1361734139.417' 
    capture_lex $P5078
    .const 'Sub' $P5079 = 'cuid_315_1361734139.417' 
    capture_lex $P5079
    .const 'Sub' $P5080 = 'cuid_316_1361734139.417' 
    capture_lex $P5080
    .const 'Sub' $P5081 = 'cuid_317_1361734139.417' 
    capture_lex $P5081
    .const 'Sub' $P5082 = 'cuid_318_1361734139.417' 
    capture_lex $P5082
    .const 'Sub' $P5083 = 'cuid_319_1361734139.417' 
    capture_lex $P5083
    .const 'Sub' $P5084 = 'cuid_320_1361734139.417' 
    capture_lex $P5084
    .const 'Sub' $P5085 = 'cuid_321_1361734139.417' 
    capture_lex $P5085
    .const 'Sub' $P5086 = 'cuid_322_1361734139.417' 
    capture_lex $P5086
    .const 'Sub' $P5087 = 'cuid_323_1361734139.417' 
    capture_lex $P5087
    .const 'Sub' $P5088 = 'cuid_324_1361734139.417' 
    capture_lex $P5088
    .const 'Sub' $P5089 = 'cuid_325_1361734139.417' 
    capture_lex $P5089
    .const 'Sub' $P5090 = 'cuid_326_1361734139.417' 
    capture_lex $P5090
    .const 'Sub' $P5091 = 'cuid_327_1361734139.417' 
    capture_lex $P5091
    .const 'Sub' $P5092 = 'cuid_328_1361734139.417' 
    capture_lex $P5092
    .const 'Sub' $P5093 = 'cuid_329_1361734139.417' 
    capture_lex $P5093
    .const 'Sub' $P5094 = 'cuid_330_1361734139.417' 
    capture_lex $P5094
    .const 'Sub' $P5095 = 'cuid_331_1361734139.417' 
    capture_lex $P5095
    .const 'Sub' $P5096 = 'cuid_332_1361734139.417' 
    capture_lex $P5096
    .const 'Sub' $P5097 = 'cuid_333_1361734139.417' 
    capture_lex $P5097
    .const 'Sub' $P5098 = 'cuid_334_1361734139.417' 
    capture_lex $P5098
    .const 'Sub' $P5099 = 'cuid_335_1361734139.417' 
    capture_lex $P5099
    .const 'Sub' $P5100 = 'cuid_336_1361734139.417' 
    capture_lex $P5100
    .const 'Sub' $P5101 = 'cuid_337_1361734139.417' 
    capture_lex $P5101
    .const 'Sub' $P5102 = 'cuid_338_1361734139.417' 
    capture_lex $P5102
    .const 'Sub' $P5103 = 'cuid_339_1361734139.417' 
    capture_lex $P5103
    .const 'Sub' $P5104 = 'cuid_340_1361734139.417' 
    capture_lex $P5104
    .const 'Sub' $P5105 = 'cuid_341_1361734139.417' 
    capture_lex $P5105
    .const 'Sub' $P5106 = 'cuid_342_1361734139.417' 
    capture_lex $P5106
    .const 'Sub' $P5107 = 'cuid_343_1361734139.417' 
    capture_lex $P5107
    .const 'Sub' $P5108 = 'cuid_344_1361734139.417' 
    capture_lex $P5108
    .const 'Sub' $P5109 = 'cuid_345_1361734139.417' 
    capture_lex $P5109
    .const 'Sub' $P5110 = 'cuid_346_1361734139.417' 
    capture_lex $P5110
    .const 'Sub' $P5111 = 'cuid_347_1361734139.417' 
    capture_lex $P5111
    .const 'Sub' $P5112 = 'cuid_348_1361734139.417' 
    capture_lex $P5112
    .const 'Sub' $P5113 = 'cuid_349_1361734139.417' 
    capture_lex $P5113
    .const 'Sub' $P5114 = 'cuid_350_1361734139.417' 
    capture_lex $P5114
    .const 'Sub' $P5115 = 'cuid_351_1361734139.417' 
    capture_lex $P5115
    .const 'Sub' $P5116 = 'cuid_352_1361734139.417' 
    capture_lex $P5116
    .const 'Sub' $P5117 = 'cuid_353_1361734139.417' 
    capture_lex $P5117
    .const 'Sub' $P5118 = 'cuid_354_1361734139.417' 
    capture_lex $P5118
    .const 'Sub' $P5119 = 'cuid_355_1361734139.417' 
    capture_lex $P5119
    .const 'Sub' $P5120 = 'cuid_356_1361734139.417' 
    capture_lex $P5120
    .const 'Sub' $P5121 = 'cuid_357_1361734139.417' 
    capture_lex $P5121
    .const 'Sub' $P5122 = 'cuid_358_1361734139.417' 
    capture_lex $P5122
    .const 'Sub' $P5123 = 'cuid_359_1361734139.417' 
    capture_lex $P5123
    .return ($P111) 
.end
.HLL "nqp"
.namespace []
.sub "xblock_immediate" :subid("cuid_425_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1591
    .param pmc _lex_param_0 
    .lex "$xblock", _lex_param_0 
    .local pmc fb_tmp_178 
.annotate 'line', 1592
    set fb_tmp_178, _lex_param_0
    repr_defined $I5001, fb_tmp_178
    unless $I5001 goto if1718_else4086 
    set $P5001, fb_tmp_178[1]
    set $P5003, $P5001
    goto if1718_end4087
  if1718_else4086:
    null $P5002
    set $P5003, $P5002
  if1718_end4087:
    unless_null $P5003, vivi_17194088
    nqp_get_sc_object $P5004, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5003, $P5004
  vivi_17194088:
    $P5005 = "&block_immediate"($P5003)
    set _lex_param_0[1], $P5005
    .return (_lex_param_0) 
.end
.HLL "nqp"
.namespace []
.sub "block_immediate" :subid("cuid_429_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1596
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_428_1361734139.417' 
    capture_lex $P5004 
    .lex "$block", _lex_param_0 
.annotate 'line', 1597
    _lex_param_0."blocktype"("immediate")
.annotate 'line', 1598
    $P5001 = _lex_param_0."symtable"()
    if $P5001 goto unless1720_end4090 
    .const 'Sub' $P5002 = 'cuid_428_1361734139.417' 
    capture_lex $P5002
    $P5003 = $P5002()
  unless1720_end4090:
    .return (_lex_param_0) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_428_1361734139.417") :anon :lex :outer("cuid_429_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1598
    .const 'Sub' $P5013 = 'cuid_427_1361734139.417' 
    capture_lex $P5013 
    .lex "$stmts", $P101 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
.annotate 'line', 1599
    nqp_get_sc_object $P5002, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 93
    find_lex $P5003, "$block"
    $P5004 = $P5003."node"()
    $P5005 = $P5002."new"($P5004 :named("node"))
    set $P101, $P5005
.annotate 'line', 1600
    find_lex $P5009, "$block"
    $P5010 = $P5009."list"()
    set $P5006, $P5010
    iter $P5008, $P5010
  for_next4091:
    unless $P5008, for_done4093
    shift $P5012, $P5008
  for_redo4092:
    .const 'Sub' $P5011 = 'cuid_427_1361734139.417' 
    capture_lex $P5011
    $P5006 = $P5011($P5012)
    goto for_next4091
  for_done4093:
    store_lex "$block", $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_427_1361734139.417") :anon :lex :outer("cuid_428_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1600
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "$stmts"
    $P5002 = $P5001."push"(_lex_param_0)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "default_for" :subid("cuid_432_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1606
    .param pmc _lex_param_0 
    .const 'Sub' $P5009 = 'cuid_431_1361734139.417' 
    capture_lex $P5009 
    .lex "$sigil", _lex_param_0 
    set $S5001, _lex_param_0
    iseq $I5001, $S5001, "@"
    unless $I5001 goto if1721_else4094 
.annotate 'line', 1607
.annotate 'line', 1608
    nqp_get_sc_object $P5001, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    $P5002 = $P5001."new"("list" :named("op"))
    set $P5008, $P5002
    goto if1721_end4095
  if1721_else4094:
    set $S5002, _lex_param_0
    iseq $I5002, $S5002, "%"
    unless $I5002 goto if1722_else4096 
.annotate 'line', 1610
.annotate 'line', 1611
    nqp_get_sc_object $P5003, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    $P5004 = $P5003."new"("hash" :named("op"))
    set $P5007, $P5004
    goto if1722_end4097
  if1722_else4096:
    .const 'Sub' $P5005 = 'cuid_431_1361734139.417' 
    capture_lex $P5005
    $P5006 = $P5005()
    set $P5007, $P5006
  if1722_end4097:
    set $P5008, $P5007
  if1721_end4095:
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_431_1361734139.417") :anon :lex :outer("cuid_432_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1613
    .const 'Sub' $P5020 = 'cuid_430_1361734139.417' 
    capture_lex $P5020 
    .lex "$default", $P101 
    .local pmc fb_tmp_179 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    new $P5018, 'ExceptionHandler'
    set_label $P5018, catch_handler_17294106
    $P5018.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5018
.annotate 'line', 1615
    new $P5016, 'ExceptionHandler'
    set_label $P5016, catch_handler_17274104
    $P5016.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5016
.annotate 'line', 1616
    nqp_get_sc_object $P5002, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 61
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback4098
    nqp_get_sc_object $P5005, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5004, $P5005
    set fb_tmp_179, $P5004
    repr_defined $I5001, fb_tmp_179
    unless $I5001 goto if1723_else4099 
    set $P5006, fb_tmp_179["$W"]
    set $P5008, $P5006
    goto if1723_end4100
  if1723_else4099:
    null $P5007
    set $P5008, $P5007
  if1723_end4100:
    unless_null $P5008, vivi_17244101
    nqp_get_sc_object $P5009, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5008, $P5009
  vivi_17244101:
    unless_null $P5008, vivi_17254102
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_17254102:
    set $P5003, $P5008
  fallback4098:
    new $P5011, 'ResizablePMCArray'
    box $P5012, "NQPMu"
    push $P5011, $P5012
    $P5013 = $P5003."find_sym"($P5011)
    $P5014 = $P5002."new"($P5013 :named("value"))
    set $P101, $P5014
    nqp_get_sc_object $P5015, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5017, $P5015
    pop_eh 
    goto skip_handler_17264103
  catch_handler_17274104:
    .get_results ($P5016) 
    .const 'Sub' $P10001 = 'cuid_430_1361734139.417' 
    capture_lex $P10001
    $P10001($P5016)
    set $I10001, 1
    set $P5016["handled"], $I10001
    nqp_get_sc_object $P10002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    finalize $P5016
    pop_upto_eh $P5016
    pop_eh 
    set $P5017, $P10002
    goto skip_handler_17264103
  skip_handler_17264103:
    set $P5019, $P5017
    pop_eh 
    goto skip_handler_17284105
  catch_handler_17294106:
    .get_results ($P5018) 
    set $I10001, 1
    set $P5018["handled"], $I10001
    nqp_get_sc_object $P10001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    finalize $P5018
    pop_upto_eh $P5018
    pop_eh 
    set $P5019, $P10001
    goto skip_handler_17284105
  skip_handler_17284105:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_430_1361734139.417") :anon :lex :outer("cuid_431_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1617
    .param pmc _lex_param_0 
    .lex "$!", $P101 
    .lex "$_", _lex_param_0 
    set $P101, _lex_param_0
    nqp_get_sc_object $P5001, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    $P5002 = $P5001."new"("null" :named("op"))
    store_lex "$default", $P5002
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "default_value_for_prim" :subid("cuid_433_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1623
    .param pmc _lex_param_0 
    .lex "$prim", _lex_param_0 
    set $N5001, _lex_param_0
    set $N5002, 1
    iseq $I5001, $N5001, $N5002
    unless $I5001 goto if1730_else4107 
.annotate 'line', 1624
    nqp_get_sc_object $P5001, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 42
    $P5002 = $P5001."new"(0 :named("value"))
    set $P5008, $P5002
    goto if1730_end4108
  if1730_else4107:
    set $N5003, _lex_param_0
    set $N5004, 2
    iseq $I5002, $N5003, $N5004
    unless $I5002 goto if1731_else4109 
.annotate 'line', 1625
    nqp_get_sc_object $P5003, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 47
    $P5004 = $P5003."new"(0.0 :named("value"))
    set $P5007, $P5004
    goto if1731_end4110
  if1731_else4109:
.annotate 'line', 1626
    nqp_get_sc_object $P5005, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 52
    $P5006 = $P5005."new"("" :named("value"))
    set $P5007, $P5006
  if1731_end4110:
    set $P5008, $P5007
  if1730_end4108:
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "colonpair_str" :subid("cuid_436_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1638
    .param pmc _lex_param_0 
    .const 'Sub' $P5006 = 'cuid_435_1361734139.417' 
    capture_lex $P5006 
    .lex "$ast", _lex_param_0 
    nqp_get_sc_object $P5001, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    type_check $I5001, _lex_param_0, $P5001
    unless $I5001 goto if1732_else4111 
    .const 'Sub' $P5002 = 'cuid_435_1361734139.417' 
    capture_lex $P5002
    $P5003 = $P5002()
    set $P5005, $P5003
    goto if1732_end4112
  if1732_else4111:
.annotate 'line', 1643
.annotate 'line', 1644
    $P5004 = _lex_param_0."value"()
    set $P5005, $P5004
  if1732_end4112:
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_435_1361734139.417") :anon :lex :outer("cuid_436_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1639
    .const 'Sub' $P5009 = 'cuid_434_1361734139.417' 
    capture_lex $P5009 
    .lex "@parts", $P101 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
.annotate 'line', 1641
    find_lex $P5005, "$ast"
    $P5006 = $P5005."list"()
    set $P5002, $P5006
    iter $P5004, $P5006
  for_next4113:
    unless $P5004, for_done4115
    shift $P5008, $P5004
  for_redo4114:
    .const 'Sub' $P5007 = 'cuid_434_1361734139.417' 
    capture_lex $P5007
    $P5002 = $P5007($P5008)
    goto for_next4113
  for_done4115:
    join $S5001, " ", $P101
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_434_1361734139.417") :anon :lex :outer("cuid_435_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1641
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "@parts"
    $P5002 = _lex_param_0."value"()
    $P5003 = $P5001."push"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "import_HOW_exports" :subid("cuid_438_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1830
    .param pmc _lex_param_0 
    .const 'Sub' $P5013 = 'cuid_437_1361734139.417' 
    capture_lex $P5013 
    .lex "$UNIT", _lex_param_0 
    .local pmc fb_tmp_180 
    exists $I5001, _lex_param_0["EXPORTHOW"]
    box $P5012, $I5001
    set $P5011, $P5012
    unless $I5001 goto if1733_end4117 
.annotate 'line', 1832
    set fb_tmp_180, _lex_param_0
    repr_defined $I5002, fb_tmp_180
    unless $I5002 goto if1734_else4118 
    set $P5005, fb_tmp_180["EXPORTHOW"]
    set $P5007, $P5005
    goto if1734_end4119
  if1734_else4118:
    null $P5006
    set $P5007, $P5006
  if1734_end4119:
    unless_null $P5007, vivi_17354120
    nqp_get_sc_object $P5008, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5007, $P5008
  vivi_17354120:
    get_who $P5004, $P5007
    set $P5001, $P5004
    iter $P5003, $P5004
  for_next4126:
    unless $P5003, for_done4128
    shift $P5010, $P5003
  for_redo4127:
    .const 'Sub' $P5009 = 'cuid_437_1361734139.417' 
    capture_lex $P5009
    $P5001 = $P5009($P5010)
    goto for_next4126
  for_done4128:
    set $P5011, $P5001
  if1733_end4117:
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_437_1361734139.417") :anon :lex :outer("cuid_438_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1833
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_181 
    .local pmc pkg_viv_tmp_39 
    find_dynamic_lex $P5001, "%*HOW"
    unless_null $P5001, fallback4121
    nqp_get_sc_object $P5003, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_39, $P5002
    set fb_tmp_181, pkg_viv_tmp_39
    repr_defined $I5001, fb_tmp_181
    unless $I5001 goto if1736_else4122 
    set $P5004, fb_tmp_181["%HOW"]
    set $P5006, $P5004
    goto if1736_end4123
  if1736_else4122:
    null $P5005
    set $P5006, $P5005
  if1736_end4123:
    unless_null $P5006, vivi_17374124
    new $P5007, 'Hash'
    set pkg_viv_tmp_39["%HOW"], $P5007
    set $P5006, $P5007
  vivi_17374124:
    unless_null $P5006, vivi_17384125
    die "Contextual %*HOW not found"
    box $P5008, "Contextual %*HOW not found"
    set $P5006, $P5008
  vivi_17384125:
    set $P5001, $P5006
  fallback4121:
.annotate 'line', 1834
    $P5009 = _lex_param_0."key"()
    set $S5001, $P5009
    $P5010 = _lex_param_0."value"()
    set $P5001[$S5001], $P5010
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "set_block_handler" :subid("cuid_439_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1932
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$/", _lex_param_0 
    .lex "$block", _lex_param_1 
    .lex "$type", _lex_param_2 
    .local pmc fb_tmp_182 
    .local pmc pkg_viv_tmp_40 
    .local pmc fb_tmp_183 
    .local pmc pkg_viv_tmp_41 
    find_dynamic_lex $P5001, "%*HANDLERS"
    unless_null $P5001, fallback4131
    nqp_get_sc_object $P5003, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_40, $P5002
    set fb_tmp_182, pkg_viv_tmp_40
    repr_defined $I5002, fb_tmp_182
    unless $I5002 goto if1740_else4132 
    set $P5004, fb_tmp_182["%HANDLERS"]
    set $P5006, $P5004
    goto if1740_end4133
  if1740_else4132:
    null $P5005
    set $P5006, $P5005
  if1740_end4133:
    unless_null $P5006, vivi_17414134
    new $P5007, 'Hash'
    set pkg_viv_tmp_40["%HANDLERS"], $P5007
    set $P5006, $P5007
  vivi_17414134:
    unless_null $P5006, vivi_17424135
    die "Contextual %*HANDLERS not found"
    box $P5008, "Contextual %*HANDLERS not found"
    set $P5006, $P5008
  vivi_17424135:
    set $P5001, $P5006
  fallback4131:
    set $S5001, _lex_param_2
    exists $I5001, $P5001[$S5001]
    unless $I5001 goto if1739_end4130 
.annotate 'line', 1933
    set $S5004, _lex_param_2
    concat $S5003, "Duplicate ", $S5004
    concat $S5002, $S5003, " handler in block"
    box $P5009, $S5002
    die $P5009
  if1739_end4130:
.annotate 'line', 1936
    $P5010 = _lex_param_1."arity"()
    if $P5010 goto unless1743_end4137 
.annotate 'line', 1937
.annotate 'line', 1938
    nqp_get_sc_object $P5011, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 1939
    nqp_get_sc_object $P5012, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5013 = $P5012."new"("lexical" :named("scope"), "$!" :named("name"), "var" :named("decl"))
.annotate 'line', 1940
    nqp_get_sc_object $P5014, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5015 = $P5014."new"("lexical" :named("scope"), "$_" :named("name"))
    $P5016 = $P5011."new"($P5013, $P5015, "bind" :named("op"))
    _lex_param_1."unshift"($P5016)
.annotate 'line', 1943
    nqp_get_sc_object $P5017, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5018 = $P5017."new"("$_" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    _lex_param_1."unshift"($P5018)
.annotate 'line', 1944
    _lex_param_1."symbol"("$_", "lexical" :named("scope"))
.annotate 'line', 1945
    _lex_param_1."symbol"("$!", "lexical" :named("scope"))
.annotate 'line', 1946
    $P5019 = _lex_param_1."arity"(1)
  unless1743_end4137:
.annotate 'line', 1948
    _lex_param_1."blocktype"("declaration")
    find_dynamic_lex $P5020, "%*HANDLERS"
    unless_null $P5020, fallback4138
    nqp_get_sc_object $P5022, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5021, $P5022
    set pkg_viv_tmp_41, $P5021
    set fb_tmp_183, pkg_viv_tmp_41
    repr_defined $I5003, fb_tmp_183
    unless $I5003 goto if1744_else4139 
    set $P5023, fb_tmp_183["%HANDLERS"]
    set $P5025, $P5023
    goto if1744_end4140
  if1744_else4139:
    null $P5024
    set $P5025, $P5024
  if1744_end4140:
    unless_null $P5025, vivi_17454141
    new $P5026, 'Hash'
    set pkg_viv_tmp_41["%HANDLERS"], $P5026
    set $P5025, $P5026
  vivi_17454141:
    unless_null $P5025, vivi_17464142
    die "Contextual %*HANDLERS not found"
    box $P5027, "Contextual %*HANDLERS not found"
    set $P5025, $P5027
  vivi_17464142:
    set $P5020, $P5025
  fallback4138:
    set $S5005, _lex_param_2
.annotate 'line', 1949
    nqp_get_sc_object $P5028, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 93
.annotate 'line', 1950
    nqp_get_sc_object $P5029, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 1952
    nqp_get_sc_object $P5030, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    $P5031 = $P5030."new"("exception" :named("op"))
    $P5032 = $P5029."new"(_lex_param_1, $P5031, "call" :named("op"))
.annotate 'line', 1954
    nqp_get_sc_object $P5033, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 89
.annotate 'line', 1955
    nqp_get_sc_object $P5034, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 1957
    nqp_get_sc_object $P5035, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    $P5036 = $P5035."new"("exception" :named("op"))
.annotate 'line', 1958
    nqp_get_sc_object $P5037, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 52
    $P5038 = $P5037."new"("handled" :named("value"))
.annotate 'line', 1959
    nqp_get_sc_object $P5039, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 42
    $P5040 = $P5039."new"(1 :named("value"))
    $P5041 = $P5034."new"($P5036, $P5038, $P5040, "bindkey_i" :named("op"))
.annotate 'line', 1961
    nqp_get_sc_object $P5042, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    $P5043 = $P5042."new"("null" :named("op"))
    $P5044 = $P5033."new"($P5041 :named("parrot"), $P5043 :named("jvm"))
.annotate 'line', 1963
    $P5045 = "&default_for"("$")
    $P5046 = $P5028."new"($P5032, $P5044, $P5045)
    set $P5020[$S5005], $P5046
    .return ($P5046) 
.end
.HLL "nqp"
.namespace []
.sub "only_star_block" :subid("cuid_440_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2603
    .lex "$past", $P101 
    .local pmc fb_tmp_184 
    .local pmc fb_tmp_185 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
.annotate 'line', 2604
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback4143
    nqp_get_sc_object $P5004, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5003, $P5004
    set fb_tmp_184, $P5003
    repr_defined $I5001, fb_tmp_184
    unless $I5001 goto if1747_else4144 
    set $P5005, fb_tmp_184["$W"]
    set $P5007, $P5005
    goto if1747_end4145
  if1747_else4144:
    null $P5006
    set $P5007, $P5006
  if1747_end4145:
    unless_null $P5007, vivi_17484146
    nqp_get_sc_object $P5008, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5007, $P5008
  vivi_17484146:
    unless_null $P5007, vivi_17494147
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_17494147:
    set $P5002, $P5007
  fallback4143:
    $P5010 = $P5002."pop_lexpad"()
    set $P101, $P5010
.annotate 'line', 2605
    nqp_get_sc_object $P5011, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 2607
    nqp_get_sc_object $P5012, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 2609
    nqp_get_sc_object $P5013, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 2611
    nqp_get_sc_object $P5014, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
.annotate 'line', 2613
    nqp_get_sc_object $P5015, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    nqp_get_sc_object $P5016, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    $P5017 = $P5016."new"("curcode" :named("op"))
    $P5018 = $P5015."new"($P5017, "getcodeobj" :named("op"))
.annotate 'line', 2614
    nqp_get_sc_object $P5019, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 61
    find_dynamic_lex $P5020, "$*W"
    unless_null $P5020, fallback4148
    nqp_get_sc_object $P5022, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5021, $P5022
    set fb_tmp_185, $P5021
    repr_defined $I5002, fb_tmp_185
    unless $I5002 goto if1750_else4149 
    set $P5023, fb_tmp_185["$W"]
    set $P5025, $P5023
    goto if1750_end4150
  if1750_else4149:
    null $P5024
    set $P5025, $P5024
  if1750_end4150:
    unless_null $P5025, vivi_17514151
    nqp_get_sc_object $P5026, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5025, $P5026
  vivi_17514151:
    unless_null $P5025, vivi_17524152
    die "Contextual $*W not found"
    box $P5027, "Contextual $*W not found"
    set $P5025, $P5027
  vivi_17524152:
    set $P5020, $P5025
  fallback4148:
    new $P5028, 'ResizablePMCArray'
    box $P5029, "NQPRoutine"
    push $P5028, $P5029
    $P5030 = $P5020."find_sym"($P5028)
    $P5031 = $P5019."new"($P5030 :named("value"))
    $P5032 = $P5014."new"($P5018, $P5031, "$!dispatch_cache" :named("name"), "attribute" :named("scope"))
.annotate 'line', 2616
    nqp_get_sc_object $P5033, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    $P5034 = $P5033."new"("usecapture" :named("op"))
    $P5035 = $P5013."new"($P5032, $P5034, "multicachefind" :named("op"))
.annotate 'line', 2618
    nqp_get_sc_object $P5036, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 2620
    nqp_get_sc_object $P5037, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    nqp_get_sc_object $P5038, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    $P5039 = $P5038."new"("curcode" :named("op"))
    $P5040 = $P5037."new"($P5039, "getcodeobj" :named("op"))
.annotate 'line', 2621
    nqp_get_sc_object $P5041, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    $P5042 = $P5041."new"("usecapture" :named("op"))
    $P5043 = $P5036."new"($P5040, $P5042, "callmethod" :named("op"), "dispatch" :named("name"))
    $P5044 = $P5012."new"($P5035, $P5043, "ifnull" :named("op"))
.annotate 'line', 2624
    nqp_get_sc_object $P5045, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    $P5046 = $P5045."new"("usecapture" :named("op"))
    $P5047 = $P5011."new"($P5044, $P5046, "invokewithcapture" :named("op"))
    $P101."push"($P5047)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "attach_multi_signature" :subid("cuid_442_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2629
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5024 = 'cuid_441_1361734139.417' 
    capture_lex $P5024 
    .lex "$types", $P101 
    .lex "$definednesses", $P102 
    .lex "$code_obj", _lex_param_0 
    .lex "$routine", _lex_param_1 
    .local pmc fb_tmp_186 
    .local pmc fb_tmp_189 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
    new $P5003, 'ResizablePMCArray'
    set $P101, $P5003
    new $P5004, 'ResizablePMCArray'
    set $P102, $P5004
    set fb_tmp_186, _lex_param_1
    repr_defined $I5001, fb_tmp_186
    unless $I5001 goto if1753_else4153 
    set $P5008, fb_tmp_186[0]
    set $P5010, $P5008
    goto if1753_end4154
  if1753_else4153:
    null $P5009
    set $P5010, $P5009
  if1753_end4154:
    unless_null $P5010, vivi_17544155
    nqp_get_sc_object $P5011, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5010, $P5011
  vivi_17544155:
    $P5012 = $P5010."list"()
    set $P5005, $P5012
    iter $P5007, $P5012
  for_next4174:
    unless $P5007, for_done4176
    shift $P5014, $P5007
  for_redo4175:
    .const 'Sub' $P5013 = 'cuid_441_1361734139.417' 
    capture_lex $P5013
    $P5005 = $P5013($P5014)
    goto for_next4174
  for_done4176:
.annotate 'line', 2641
    find_dynamic_lex $P5015, "$*W"
    unless_null $P5015, fallback4177
    nqp_get_sc_object $P5017, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5016, $P5017
    set fb_tmp_189, $P5016
    repr_defined $I5002, fb_tmp_189
    unless $I5002 goto if1765_else4178 
    set $P5018, fb_tmp_189["$W"]
    set $P5020, $P5018
    goto if1765_end4179
  if1765_else4178:
    null $P5019
    set $P5020, $P5019
  if1765_end4179:
    unless_null $P5020, vivi_17664180
    nqp_get_sc_object $P5021, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5020, $P5021
  vivi_17664180:
    unless_null $P5020, vivi_17674181
    die "Contextual $*W not found"
    box $P5022, "Contextual $*W not found"
    set $P5020, $P5022
  vivi_17674181:
    set $P5015, $P5020
  fallback4177:
    $P5023 = $P5015."set_routine_signature"(_lex_param_0, $P101, $P102)
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_441_1361734139.417") :anon :lex :outer("cuid_442_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2632
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_187 
    .local pmc fb_tmp_188 
    nqp_get_sc_object $P5001, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    type_check $I5001, _lex_param_0, $P5001
    set $I5003, $I5001
    unless $I5001 goto if1757_end4161 
.annotate 'line', 2633
    $P5002 = _lex_param_0."decl"()
    set $S5001, $P5002
    iseq $I5002, $S5001, "param"
    set $I5003, $I5002
  if1757_end4161:
    set $I5005, $I5003
    unless $I5003 goto if1756_end4159 
    $P5003 = _lex_param_0."named"()
    isfalse $I5004, $P5003
    set $I5005, $I5004
  if1756_end4159:
    box $P5021, $I5005
    set $P5020, $P5021
    unless $I5005 goto if1755_end4157 
.annotate 'line', 2634
    find_lex $P5004, "$types"
    $P5005 = _lex_param_0."returns"()
    get_id $I5007, $P5005
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    get_id $I5008, $P5006
    iseq $I5006, $I5007, $I5008
    unless $I5006 goto if1758_else4162 
    null $P5007
    set $P5009, $P5007
    goto if1758_end4163
  if1758_else4162:
.annotate 'line', 2636
    $P5008 = _lex_param_0."returns"()
    set $P5009, $P5008
  if1758_end4163:
    $P5004."push"($P5009)
.annotate 'line', 2637
    find_lex $P5010, "$definednesses"
    set fb_tmp_187, _lex_param_0
    repr_defined $I5010, fb_tmp_187
    unless $I5010 goto if1760_else4166 
    set $P5011, fb_tmp_187["definedness"]
    set $P5013, $P5011
    goto if1760_end4167
  if1760_else4166:
    null $P5012
    set $P5013, $P5012
  if1760_end4167:
    unless_null $P5013, vivi_17614168
    nqp_get_sc_object $P5014, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5013, $P5014
  vivi_17614168:
    set $S5002, $P5013
    iseq $I5009, $S5002, "D"
    unless $I5009 goto if1759_else4164 
    set $I5014, 1
    goto if1759_end4165
  if1759_else4164:
    set fb_tmp_188, _lex_param_0
    repr_defined $I5012, fb_tmp_188
    unless $I5012 goto if1763_else4171 
    set $P5015, fb_tmp_188["definedness"]
    set $P5017, $P5015
    goto if1763_end4172
  if1763_else4171:
    null $P5016
    set $P5017, $P5016
  if1763_end4172:
    unless_null $P5017, vivi_17644173
    nqp_get_sc_object $P5018, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5017, $P5018
  vivi_17644173:
    set $S5003, $P5017
    iseq $I5011, $S5003, "U"
    unless $I5011 goto if1762_else4169 
    set $I5013, 2
    goto if1762_end4170
  if1762_else4169:
    set $I5013, 0
  if1762_end4170:
    set $I5014, $I5013
  if1759_end4165:
    $P5019 = $P5010."push"($I5014)
    set $P5020, $P5019
  if1755_end4157:
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "wrap_return_handler" :subid("cuid_443_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2644
    .param pmc _lex_param_0 
    .lex "$past", _lex_param_0 
.annotate 'line', 2645
    nqp_get_sc_object $P5001, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    $P5002 = $P5001."new"(_lex_param_0, "lexotic" :named("op"), "RETURN" :named("name"))
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "lexical_package_lookup" :subid("cuid_449_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3162
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5038 = 'cuid_446_1361734139.417' 
    capture_lex $P5038 
    .lex "$final_name", $P101 
    .lex "$lookup", $P102 
    .lex "@name", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_190 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
    root_new $P103, ['parrot';'Continuation']
    set_label $P103, lexotic_4182
    .lex "RETURN", $P103
    set $N5001, _lex_param_0
    set $N5002, 0
    iseq $I5001, $N5001, $N5002
    unless $I5001 goto if1768_end4185 
.annotate 'line', 3164
    $P5003 = _lex_param_1."CURSOR"()
    $P5004 = $P5003."panic"("Cannot compile empty name")
  if1768_end4185:
.annotate 'line', 3168
    $P5005 = _lex_param_0."pop"()
    set $P101, $P5005
.annotate 'line', 3169
    nqp_get_sc_object $P5006, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 80
.annotate 'line', 3171
    nqp_get_sc_object $P5007, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 52
    set $S5001, $P101
    $P5008 = $P5007."new"($S5001 :named("value"))
    $P5009 = $P5006."new"($P5008, "associative" :named("scope"))
    set $P102, $P5009
    set $N5003, _lex_param_0
    set $N5004, 0
    iseq $I5002, $N5003, $N5004
    unless $I5002 goto if1769_else4186 
.annotate 'line', 3176
.annotate 'line', 3177
    nqp_get_sc_object $P5010, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 3179
    nqp_get_sc_object $P5011, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5012 = $P5011."new"("$?PACKAGE" :named("name"), "lexical" :named("scope"))
    $P5013 = $P5010."new"($P5012, "who" :named("op"))
    $P102."unshift"($P5013)
.annotate 'line', 3181
    nqp_get_sc_object $P5014, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 3183
    nqp_get_sc_object $P5015, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 3185
    nqp_get_sc_object $P5016, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 3187
    nqp_get_sc_object $P5017, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 61
    find_dynamic_lex $P5018, "$*GLOBALish"
    unless_null $P5018, fallback4188
    nqp_get_sc_object $P5020, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5019, $P5020
    set fb_tmp_190, $P5019
    repr_defined $I5003, fb_tmp_190
    unless $I5003 goto if1770_else4189 
    set $P5021, fb_tmp_190["$GLOBALish"]
    set $P5023, $P5021
    goto if1770_end4190
  if1770_else4189:
    null $P5022
    set $P5023, $P5022
  if1770_end4190:
    unless_null $P5023, vivi_17714191
    nqp_get_sc_object $P5024, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5023, $P5024
  vivi_17714191:
    unless_null $P5023, vivi_17724192
    die "Contextual $*GLOBALish not found"
    box $P5025, "Contextual $*GLOBALish not found"
    set $P5023, $P5025
  vivi_17724192:
    set $P5018, $P5023
  fallback4188:
    $P5026 = $P5017."new"($P5018 :named("value"))
    $P5027 = $P5016."new"($P5026, "who" :named("op"))
.annotate 'line', 3189
    nqp_get_sc_object $P5028, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 52
    set $S5002, $P101
    $P5029 = $P5028."new"($S5002 :named("value"))
    $P5030 = $P5015."new"($P5027, $P5029, "atkey" :named("op"))
.annotate 'line', 3191
    set $S5004, $P101
    substr $S5003, $S5004, 0, 1
    $P5031 = "&default_for"($S5003)
    $P5032 = $P5014."new"($P5030, $P5031, "ifnull" :named("op"))
    $P5033 = $P102."fallback"($P5032)
    goto if1769_end4187
  if1769_else4186:
    .const 'Sub' $P5034 = 'cuid_446_1361734139.417' 
    capture_lex $P5034
    $P5035 = $P5034()
  if1769_end4187:
    find_lex $P5036, "RETURN"
    $P5037 = $P5036($P102)
    goto lexotic_4183
  lexotic_4182:
    .get_results ($P5037)
  lexotic_4183:
    .return ($P5037) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_446_1361734139.417") :anon :lex :outer("cuid_449_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3197
    .const 'Sub' $P5053 = 'cuid_445_1361734139.417' 
    capture_lex $P5053 
    .const 'Sub' $P5053 = 'cuid_447_1361734139.417' 
    capture_lex $P5053 
    .const 'Sub' $P5053 = 'cuid_448_1361734139.417' 
    capture_lex $P5053 
    .lex "$path", $P101 
    .lex "$sigil", $P102 
    .local pmc fb_tmp_191 
    .local pmc fb_tmp_192 
    .local pmc fb_tmp_194 
    .local pmc fb_tmp_195 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
.annotate 'line', 3199
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback4195
    nqp_get_sc_object $P5005, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5004, $P5005
    set fb_tmp_191, $P5004
    repr_defined $I5001, fb_tmp_191
    unless $I5001 goto if1774_else4196 
    set $P5006, fb_tmp_191["$W"]
    set $P5008, $P5006
    goto if1774_end4197
  if1774_else4196:
    null $P5007
    set $P5008, $P5007
  if1774_end4197:
    unless_null $P5008, vivi_17754198
    nqp_get_sc_object $P5009, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5008, $P5009
  vivi_17754198:
    unless_null $P5008, vivi_17764199
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_17764199:
    set $P5003, $P5008
  fallback4195:
    find_lex $P5011, "@name"
    set fb_tmp_192, $P5011
    repr_defined $I5002, fb_tmp_192
    unless $I5002 goto if1777_else4200 
    set $P5012, fb_tmp_192[0]
    set $P5014, $P5012
    goto if1777_end4201
  if1777_else4200:
    null $P5013
    set $P5014, $P5013
  if1777_end4201:
    unless_null $P5014, vivi_17784202
    nqp_get_sc_object $P5015, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5014, $P5015
  vivi_17784202:
    $P5016 = $P5003."is_lexical"($P5014)
    unless $P5016 goto if1773_else4193 
    .const 'Sub' $P5017 = 'cuid_445_1361734139.417' 
    capture_lex $P5017
    $P5018 = $P5017()
    goto if1773_end4194
  if1773_else4193:
.annotate 'line', 3208
.annotate 'line', 3209
    nqp_get_sc_object $P5019, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 61
    find_dynamic_lex $P5020, "$*GLOBALish"
    unless_null $P5020, fallback4210
    nqp_get_sc_object $P5022, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5021, $P5022
    set fb_tmp_194, $P5021
    repr_defined $I5003, fb_tmp_194
    unless $I5003 goto if1784_else4211 
    set $P5023, fb_tmp_194["$GLOBALish"]
    set $P5025, $P5023
    goto if1784_end4212
  if1784_else4211:
    null $P5024
    set $P5025, $P5024
  if1784_end4212:
    unless_null $P5025, vivi_17854213
    nqp_get_sc_object $P5026, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5025, $P5026
  vivi_17854213:
    unless_null $P5025, vivi_17864214
    die "Contextual $*GLOBALish not found"
    box $P5027, "Contextual $*GLOBALish not found"
    set $P5025, $P5027
  vivi_17864214:
    set $P5020, $P5025
  fallback4210:
    $P5028 = $P5019."new"($P5020 :named("value"))
    set $P101, $P5028
  if1773_end4194:
    find_lex $P5029, "@name"
    set fb_tmp_195, $P5029
    repr_defined $I5005, fb_tmp_195
    unless $I5005 goto if1788_else4217 
    set $P5030, fb_tmp_195[0]
    set $P5032, $P5030
    goto if1788_end4218
  if1788_else4217:
    null $P5031
    set $P5032, $P5031
  if1788_end4218:
    unless_null $P5032, vivi_17894219
    nqp_get_sc_object $P5033, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5032, $P5033
  vivi_17894219:
    set $S5001, $P5032
    iseq $I5004, $S5001, "GLOBAL"
    unless $I5004 goto if1787_end4216 
.annotate 'line', 3211
.annotate 'line', 3212
    find_lex $P5034, "@name"
    $P5035 = $P5034."shift"()
  if1787_end4216:
    find_lex $P5039, "@name"
    set $P5036, $P5039
    iter $P5038, $P5039
  for_next4220:
    unless $P5038, for_done4222
    shift $P5041, $P5038
  for_redo4221:
    .const 'Sub' $P5040 = 'cuid_447_1361734139.417' 
    capture_lex $P5040
    $P5036 = $P5040($P5041)
    goto for_next4220
  for_done4222:
.annotate 'line', 3237
    find_lex $P5042, "$lookup"
    nqp_get_sc_object $P5043, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    $P5044 = $P5043."new"($P101, "who" :named("op"))
    $P5042."unshift"($P5044)
    find_lex $P5045, "$final_name"
    set $S5003, $P5045
    substr $S5002, $S5003, 0, 1
    box $P5046, $S5002
    set $P102, $P5046
    set $S5004, $P102
    iseq $I5006, $S5004, "@"
    set $I5008, $I5006
    if $I5006 goto unless1791_end4226 
    set $S5005, $P102
    iseq $I5007, $S5005, "%"
    set $I5008, $I5007
  unless1791_end4226:
    unless $I5008 goto if1790_else4223 
    .const 'Sub' $P5047 = 'cuid_448_1361734139.417' 
    capture_lex $P5047
    $P5048 = $P5047()
    set $P5052, $P5048
    goto if1790_end4224
  if1790_else4223:
.annotate 'line', 3252
.annotate 'line', 3253
    find_lex $P5049, "$lookup"
    $P5050 = "&default_for"($P102)
    $P5051 = $P5049."fallback"($P5050)
    set $P5052, $P5051
  if1790_end4224:
    .return ($P5052) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_445_1361734139.417") :anon :lex :outer("cuid_446_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3200
    .const 'Sub' $P5019 = 'cuid_444_1361734139.417' 
    capture_lex $P5019 
    .lex "$first", $P101 
    .local pmc fb_tmp_193 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    new $P5017, 'ExceptionHandler'
    set_label $P5017, catch_handler_17834209
    $P5017.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5017
.annotate 'line', 3201
    find_lex $P5002, "@name"
    $P5003 = $P5002."shift"()
    set $P101, $P5003
.annotate 'line', 3202
    nqp_get_sc_object $P5004, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 61
    find_dynamic_lex $P5005, "$*W"
    unless_null $P5005, fallback4203
    nqp_get_sc_object $P5007, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5006, $P5007
    set fb_tmp_193, $P5006
    repr_defined $I5001, fb_tmp_193
    unless $I5001 goto if1779_else4204 
    set $P5008, fb_tmp_193["$W"]
    set $P5010, $P5008
    goto if1779_end4205
  if1779_else4204:
    null $P5009
    set $P5010, $P5009
  if1779_end4205:
    unless_null $P5010, vivi_17804206
    nqp_get_sc_object $P5011, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5010, $P5011
  vivi_17804206:
    unless_null $P5010, vivi_17814207
    die "Contextual $*W not found"
    box $P5012, "Contextual $*W not found"
    set $P5010, $P5012
  vivi_17814207:
    set $P5005, $P5010
  fallback4203:
    new $P5013, 'ResizablePMCArray'
    push $P5013, $P101
    $P5014 = $P5005."find_sym"($P5013)
    $P5015 = $P5004."new"($P5014 :named("value"))
    store_lex "$path", $P5015
    nqp_get_sc_object $P5016, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5018, $P5016
    pop_eh 
    goto skip_handler_17824208
  catch_handler_17834209:
    .get_results ($P5017) 
    .const 'Sub' $P10001 = 'cuid_444_1361734139.417' 
    capture_lex $P10001
    $P10001($P5017)
    set $I10001, 1
    set $P5017["handled"], $I10001
    nqp_get_sc_object $P10002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    finalize $P5017
    pop_upto_eh $P5017
    pop_eh 
    set $P5018, $P10002
    goto skip_handler_17824208
  skip_handler_17824208:
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_444_1361734139.417") :anon :lex :outer("cuid_445_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3203
    .param pmc _lex_param_0 
    .lex "$!", $P101 
    .lex "$_", _lex_param_0 
    set $P101, _lex_param_0
.annotate 'line', 3204
    nqp_get_sc_object $P5001, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    find_lex $P5002, "$first"
    $P5003 = $P5001."new"($P5002 :named("name"), "lexical" :named("scope"))
    store_lex "$path", $P5003
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_447_1361734139.417") :anon :lex :outer("cuid_446_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3214
    .param pmc _lex_param_0 
    .lex "$path_temp", $P101 
    .lex "$_", _lex_param_0 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
.annotate 'line', 3215
    nqp_get_sc_object $P5002, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 12
    $P5003 = $P5002."unique"("pkg_lookup_tmp")
    set $P101, $P5003
.annotate 'line', 3216
    nqp_get_sc_object $P5004, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 93
.annotate 'line', 3217
    nqp_get_sc_object $P5005, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 3219
    nqp_get_sc_object $P5006, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5007 = $P5006."new"($P101 :named("name"), "local" :named("scope"), "var" :named("decl"))
    find_lex $P5008, "$path"
    $P5009 = $P5005."new"($P5007, $P5008, "bind" :named("op"))
.annotate 'line', 3222
    nqp_get_sc_object $P5010, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 3224
    nqp_get_sc_object $P5011, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 3226
    nqp_get_sc_object $P5012, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    nqp_get_sc_object $P5013, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5014 = $P5013."new"($P101 :named("name"), "local" :named("scope"))
    $P5015 = $P5012."new"($P5014, "who" :named("op"))
.annotate 'line', 3227
    nqp_get_sc_object $P5016, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 52
    set $S5001, _lex_param_0
    $P5017 = $P5016."new"($S5001 :named("value"))
    $P5018 = $P5011."new"($P5015, $P5017, "existskey" :named("op"))
.annotate 'line', 3229
    nqp_get_sc_object $P5019, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 3231
    nqp_get_sc_object $P5020, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    nqp_get_sc_object $P5021, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5022 = $P5021."new"($P101 :named("name"), "local" :named("scope"))
    $P5023 = $P5020."new"($P5022, "who" :named("op"))
.annotate 'line', 3232
    nqp_get_sc_object $P5024, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 52
    set $S5002, _lex_param_0
    $P5025 = $P5024."new"($S5002 :named("value"))
    $P5026 = $P5019."new"($P5023, $P5025, "atkey" :named("op"))
.annotate 'line', 3234
    $P5027 = "&default_for"("$")
    $P5028 = $P5010."new"($P5018, $P5026, $P5027, "if" :named("op"))
    $P5029 = $P5004."new"($P5009, $P5028)
    store_lex "$path", $P5029
    .return ($P5029) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_448_1361734139.417") :anon :lex :outer("cuid_446_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3239
    .lex "$viv_temp", $P101 
    .local pmc fb_tmp_196 
    .local pmc fb_tmp_197 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
.annotate 'line', 3240
    nqp_get_sc_object $P5002, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 12
    $P5003 = $P5002."unique"("pkg_viv_tmp")
    set $P101, $P5003
    find_lex $P5004, "$lookup"
.annotate 'line', 3241
    nqp_get_sc_object $P5005, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 3243
    nqp_get_sc_object $P5006, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5007 = $P5006."new"($P101 :named("name"), "local" :named("scope"), "var" :named("decl"))
    find_lex $P5008, "$lookup"
    set fb_tmp_196, $P5008
    repr_defined $I5001, fb_tmp_196
    unless $I5001 goto if1792_else4227 
    set $P5009, fb_tmp_196[0]
    set $P5011, $P5009
    goto if1792_end4228
  if1792_else4227:
    null $P5010
    set $P5011, $P5010
  if1792_end4228:
    unless_null $P5011, vivi_17934229
    nqp_get_sc_object $P5012, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5011, $P5012
  vivi_17934229:
    $P5013 = $P5005."new"($P5007, $P5011, "bind" :named("op"))
    set $P5004[0], $P5013
.annotate 'line', 3245
    find_lex $P5014, "$lookup"
    nqp_get_sc_object $P5015, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 3247
    nqp_get_sc_object $P5016, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5017 = $P5016."new"($P101 :named("name"), "local" :named("scope"))
    find_lex $P5018, "$lookup"
    set fb_tmp_197, $P5018
    repr_defined $I5002, fb_tmp_197
    unless $I5002 goto if1794_else4230 
    set $P5019, fb_tmp_197[1]
    set $P5021, $P5019
    goto if1794_end4231
  if1794_else4230:
    null $P5020
    set $P5021, $P5020
  if1794_end4231:
    unless_null $P5021, vivi_17954232
    nqp_get_sc_object $P5022, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5021, $P5022
  vivi_17954232:
.annotate 'line', 3249
    find_lex $P5023, "$sigil"
    $P5024 = "&default_for"($P5023)
    $P5025 = $P5015."new"($P5017, $P5021, $P5024, "bindkey" :named("op"))
    $P5026 = $P5014."fallback"($P5025)
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "TOP" :subid("cuid_248_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1629
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_198 
    unless_null _lex_param_1, fallback4235
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback4235:
    set fb_tmp_198, _lex_param_1
    repr_defined $I5001, fb_tmp_198
    unless $I5001 goto if1796_else4233 
    set $P5002, fb_tmp_198["comp_unit"]
    set $P5004, $P5002
    goto if1796_end4234
  if1796_else4233:
    null $P5003
    set $P5004, $P5003
  if1796_end4234:
    unless_null $P5004, vivi_17974236
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_17974236:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "deflongname" :subid("cuid_249_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1631
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_199 
    .local pmc fb_tmp_200 
    .local pmc fb_tmp_201 
    .local pmc fb_tmp_202 
    .local pmc fb_tmp_203 
    .local pmc fb_tmp_204 
.annotate 'line', 1632
    unless_null _lex_param_1, fallback4241
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback4241:
    set fb_tmp_199, _lex_param_1
    repr_defined $I5001, fb_tmp_199
    unless $I5001 goto if1799_else4239 
    set $P5002, fb_tmp_199["colonpair"]
    set $P5004, $P5002
    goto if1799_end4240
  if1799_else4239:
    null $P5003
    set $P5004, $P5003
  if1799_end4240:
    unless_null $P5004, vivi_18004242
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_18004242:
    unless $P5004 goto if1798_else4237 
    unless_null _lex_param_1, fallback4245
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5006
  fallback4245:
    set fb_tmp_200, _lex_param_1
    repr_defined $I5002, fb_tmp_200
    unless $I5002 goto if1801_else4243 
    set $P5007, fb_tmp_200["identifier"]
    set $P5009, $P5007
    goto if1801_end4244
  if1801_else4243:
    null $P5008
    set $P5009, $P5008
  if1801_end4244:
    unless_null $P5009, vivi_18024246
    nqp_get_sc_object $P5010, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5009, $P5010
  vivi_18024246:
    set $S5006, $P5009
    concat $S5005, $S5006, ":"
.annotate 'line', 1633
    unless_null _lex_param_1, fallback4251
    nqp_get_sc_object $P5011, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5011
  fallback4251:
    set fb_tmp_202, _lex_param_1
    repr_defined $I5004, fb_tmp_202
    unless $I5004 goto if1804_else4249 
    set $P5012, fb_tmp_202["colonpair"]
    set $P5014, $P5012
    goto if1804_end4250
  if1804_else4249:
    null $P5013
    set $P5014, $P5013
  if1804_end4250:
    unless_null $P5014, vivi_18054252
    nqp_get_sc_object $P5015, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5014, $P5015
  vivi_18054252:
    set fb_tmp_201, $P5014
    repr_defined $I5003, fb_tmp_201
    unless $I5003 goto if1803_else4247 
    set $P5016, fb_tmp_201[0]
    set $P5018, $P5016
    goto if1803_end4248
  if1803_else4247:
    null $P5017
    set $P5018, $P5017
  if1803_end4248:
    unless_null $P5018, vivi_18064253
    nqp_get_sc_object $P5019, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5018, $P5019
  vivi_18064253:
    $P5020 = $P5018."ast"()
    $P5021 = $P5020."named"()
    set $S5007, $P5021
    concat $S5004, $S5005, $S5007
    concat $S5003, $S5004, "<"
.annotate 'line', 1634
    unless_null _lex_param_1, fallback4258
    nqp_get_sc_object $P5022, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5022
  fallback4258:
    set fb_tmp_204, _lex_param_1
    repr_defined $I5006, fb_tmp_204
    unless $I5006 goto if1808_else4256 
    set $P5023, fb_tmp_204["colonpair"]
    set $P5025, $P5023
    goto if1808_end4257
  if1808_else4256:
    null $P5024
    set $P5025, $P5024
  if1808_end4257:
    unless_null $P5025, vivi_18094259
    nqp_get_sc_object $P5026, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5025, $P5026
  vivi_18094259:
    set fb_tmp_203, $P5025
    repr_defined $I5005, fb_tmp_203
    unless $I5005 goto if1807_else4254 
    set $P5027, fb_tmp_203[0]
    set $P5029, $P5027
    goto if1807_end4255
  if1807_else4254:
    null $P5028
    set $P5029, $P5028
  if1807_end4255:
    unless_null $P5029, vivi_18104260
    nqp_get_sc_object $P5030, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5029, $P5030
  vivi_18104260:
    $P5031 = $P5029."ast"()
    $P5032 = "&colonpair_str"($P5031)
    set $S5008, $P5032
    concat $S5002, $S5003, $S5008
    concat $S5001, $S5002, ">"
    set $S5010, $S5001
    goto if1798_end4238
  if1798_else4237:
    set $S5009, _lex_param_1
    set $S5010, $S5009
  if1798_end4238:
    $P5033 = _lex_param_1."!make"($S5010)
    .return ($P5033) 
.end
.HLL "nqp"
.namespace []
.sub "comp_unit" :subid("cuid_250_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1648
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$mainline", $P101 
    .lex "$unit", $P102 
    .lex "$compunit", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_205 
    .local pmc fb_tmp_206 
    .local pmc fb_tmp_207 
    .local pmc fb_tmp_208 
    .local pmc fb_tmp_209 
    .local pmc fb_tmp_210 
    .local pmc fb_tmp_211 
    .local pmc fb_tmp_212 
    .local pmc fb_tmp_213 
    .local pmc fb_tmp_214 
    .local pmc fb_tmp_215 
    .local pmc fb_tmp_216 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P103, $P5003
.annotate 'line', 1649
    unless_null _lex_param_1, fallback4263
    nqp_get_sc_object $P5004, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5004
  fallback4263:
    set fb_tmp_205, _lex_param_1
    repr_defined $I5001, fb_tmp_205
    unless $I5001 goto if1811_else4261 
    set $P5005, fb_tmp_205["statementlist"]
    set $P5007, $P5005
    goto if1811_end4262
  if1811_else4261:
    null $P5006
    set $P5007, $P5006
  if1811_end4262:
    unless_null $P5007, vivi_18124264
    nqp_get_sc_object $P5008, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5007, $P5008
  vivi_18124264:
    $P5009 = $P5007."ast"()
    set $P101, $P5009
.annotate 'line', 1650
    find_dynamic_lex $P5010, "$*W"
    unless_null $P5010, fallback4265
    nqp_get_sc_object $P5012, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5011, $P5012
    set fb_tmp_206, $P5011
    repr_defined $I5002, fb_tmp_206
    unless $I5002 goto if1813_else4266 
    set $P5013, fb_tmp_206["$W"]
    set $P5015, $P5013
    goto if1813_end4267
  if1813_else4266:
    null $P5014
    set $P5015, $P5014
  if1813_end4267:
    unless_null $P5015, vivi_18144268
    nqp_get_sc_object $P5016, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5015, $P5016
  vivi_18144268:
    unless_null $P5015, vivi_18154269
    die "Contextual $*W not found"
    box $P5017, "Contextual $*W not found"
    set $P5015, $P5017
  vivi_18154269:
    set $P5010, $P5015
  fallback4265:
    $P5018 = $P5010."pop_lexpad"()
    set $P102, $P5018
    find_dynamic_lex $P5019, "$*HAS_YOU_ARE_HERE"
    unless_null $P5019, fallback4272
    nqp_get_sc_object $P5021, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5020, $P5021
    set fb_tmp_207, $P5020
    repr_defined $I5003, fb_tmp_207
    unless $I5003 goto if1817_else4273 
    set $P5022, fb_tmp_207["$HAS_YOU_ARE_HERE"]
    set $P5024, $P5022
    goto if1817_end4274
  if1817_else4273:
    null $P5023
    set $P5024, $P5023
  if1817_end4274:
    unless_null $P5024, vivi_18184275
    nqp_get_sc_object $P5025, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5024, $P5025
  vivi_18184275:
    unless_null $P5024, vivi_18194276
    die "Contextual $*HAS_YOU_ARE_HERE not found"
    box $P5026, "Contextual $*HAS_YOU_ARE_HERE not found"
    set $P5024, $P5026
  vivi_18194276:
    set $P5019, $P5024
  fallback4272:
    if $P5019 goto unless1816_end4271 
.annotate 'line', 1655
.annotate 'line', 1656
    nqp_decontainerize $P5027, _lex_param_0
    $P5028 = $P5027."CTXSAVE"()
    $P5029 = $P102."push"($P5028)
  unless1816_end4271:
.annotate 'line', 1663
    nqp_get_sc_object $P5030, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5031 = $P5030."new"("lexical" :named("scope"), "@ARGS" :named("name"), "param" :named("decl"), 1 :named("slurpy"))
    $P102."unshift"($P5031)
    find_dynamic_lex $P5032, "$*MAIN_SUB"
    unless_null $P5032, fallback4279
    nqp_get_sc_object $P5034, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5033, $P5034
    set fb_tmp_208, $P5033
    repr_defined $I5004, fb_tmp_208
    unless $I5004 goto if1821_else4280 
    set $P5035, fb_tmp_208["$MAIN_SUB"]
    set $P5037, $P5035
    goto if1821_end4281
  if1821_else4280:
    null $P5036
    set $P5037, $P5036
  if1821_end4281:
    unless_null $P5037, vivi_18224282
    nqp_get_sc_object $P5038, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5037, $P5038
  vivi_18224282:
    unless_null $P5037, vivi_18234283
    die "Contextual $*MAIN_SUB not found"
    box $P5039, "Contextual $*MAIN_SUB not found"
    set $P5037, $P5039
  vivi_18234283:
    set $P5032, $P5037
  fallback4279:
    unless $P5032 goto if1820_end4278 
.annotate 'line', 1664
.annotate 'line', 1665
    nqp_get_sc_object $P5040, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 1667
    nqp_get_sc_object $P5041, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5042 = $P5041."new"("lexical" :named("scope"), "@ARGS" :named("name"))
.annotate 'line', 1668
    nqp_get_sc_object $P5043, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 1669
    nqp_get_sc_object $P5044, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 57
    find_dynamic_lex $P5045, "$*MAIN_SUB"
    unless_null $P5045, fallback4284
    nqp_get_sc_object $P5047, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5046, $P5047
    set fb_tmp_209, $P5046
    repr_defined $I5005, fb_tmp_209
    unless $I5005 goto if1824_else4285 
    set $P5048, fb_tmp_209["$MAIN_SUB"]
    set $P5050, $P5048
    goto if1824_end4286
  if1824_else4285:
    null $P5049
    set $P5050, $P5049
  if1824_end4286:
    unless_null $P5050, vivi_18254287
    nqp_get_sc_object $P5051, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5050, $P5051
  vivi_18254287:
    unless_null $P5050, vivi_18264288
    die "Contextual $*MAIN_SUB not found"
    box $P5052, "Contextual $*MAIN_SUB not found"
    set $P5050, $P5052
  vivi_18264288:
    set $P5045, $P5050
  fallback4284:
    $P5053 = $P5044."new"($P5045 :named("value"))
.annotate 'line', 1670
    nqp_get_sc_object $P5054, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5055 = $P5054."new"("lexical" :named("scope"), "@ARGS" :named("name"), 1 :named("flat"))
    $P5056 = $P5043."new"($P5053, $P5055, "call" :named("op"))
    $P5057 = $P5040."new"($P5042, $P5056, "if" :named("op"))
    $P5058 = $P101."push"($P5057)
  if1820_end4278:
.annotate 'line', 1676
    $P102."push"($P101)
.annotate 'line', 1679
    find_dynamic_lex $P5059, "$*W"
    unless_null $P5059, fallback4289
    nqp_get_sc_object $P5061, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5060, $P5061
    set fb_tmp_210, $P5060
    repr_defined $I5006, fb_tmp_210
    unless $I5006 goto if1827_else4290 
    set $P5062, fb_tmp_210["$W"]
    set $P5064, $P5062
    goto if1827_end4291
  if1827_else4290:
    null $P5063
    set $P5064, $P5063
  if1827_end4291:
    unless_null $P5064, vivi_18284292
    nqp_get_sc_object $P5065, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5064, $P5065
  vivi_18284292:
    unless_null $P5064, vivi_18294293
    die "Contextual $*W not found"
    box $P5066, "Contextual $*W not found"
    set $P5064, $P5066
  vivi_18294293:
    set $P5059, $P5064
  fallback4289:
    $P5067 = $P5059."libs"()
    $P102."push"($P5067)
.annotate 'line', 1682
    nqp_get_sc_object $P5068, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 114
.annotate 'line', 1686
    find_dynamic_lex $P5069, "$*W"
    unless_null $P5069, fallback4294
    nqp_get_sc_object $P5071, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5070, $P5071
    set fb_tmp_211, $P5070
    repr_defined $I5007, fb_tmp_211
    unless $I5007 goto if1830_else4295 
    set $P5072, fb_tmp_211["$W"]
    set $P5074, $P5072
    goto if1830_end4296
  if1830_else4295:
    null $P5073
    set $P5074, $P5073
  if1830_end4296:
    unless_null $P5074, vivi_18314297
    nqp_get_sc_object $P5075, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5074, $P5075
  vivi_18314297:
    unless_null $P5074, vivi_18324298
    die "Contextual $*W not found"
    box $P5076, "Contextual $*W not found"
    set $P5074, $P5076
  vivi_18324298:
    set $P5069, $P5074
  fallback4294:
    $P5077 = $P5069."sc"()
.annotate 'line', 1687
    find_dynamic_lex $P5078, "$*W"
    unless_null $P5078, fallback4299
    nqp_get_sc_object $P5080, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5079, $P5080
    set fb_tmp_212, $P5079
    repr_defined $I5008, fb_tmp_212
    unless $I5008 goto if1833_else4300 
    set $P5081, fb_tmp_212["$W"]
    set $P5083, $P5081
    goto if1833_end4301
  if1833_else4300:
    null $P5082
    set $P5083, $P5082
  if1833_end4301:
    unless_null $P5083, vivi_18344302
    nqp_get_sc_object $P5084, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5083, $P5084
  vivi_18344302:
    unless_null $P5083, vivi_18354303
    die "Contextual $*W not found"
    box $P5085, "Contextual $*W not found"
    set $P5083, $P5085
  vivi_18354303:
    set $P5078, $P5083
  fallback4299:
    $P5086 = $P5078."code_ref_blocks"()
.annotate 'line', 1688
    find_dynamic_lex $P5087, "$*W"
    unless_null $P5087, fallback4304
    nqp_get_sc_object $P5089, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5088, $P5089
    set fb_tmp_213, $P5088
    repr_defined $I5009, fb_tmp_213
    unless $I5009 goto if1836_else4305 
    set $P5090, fb_tmp_213["$W"]
    set $P5092, $P5090
    goto if1836_end4306
  if1836_else4305:
    null $P5091
    set $P5092, $P5091
  if1836_end4306:
    unless_null $P5092, vivi_18374307
    nqp_get_sc_object $P5093, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5092, $P5093
  vivi_18374307:
    unless_null $P5092, vivi_18384308
    die "Contextual $*W not found"
    box $P5094, "Contextual $*W not found"
    set $P5092, $P5094
  vivi_18384308:
    set $P5087, $P5092
  fallback4304:
    $P5095 = $P5087."is_precompilation_mode"()
.annotate 'line', 1689
    find_dynamic_lex $P5096, "$*W"
    unless_null $P5096, fallback4309
    nqp_get_sc_object $P5098, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5097, $P5098
    set fb_tmp_214, $P5097
    repr_defined $I5010, fb_tmp_214
    unless $I5010 goto if1839_else4310 
    set $P5099, fb_tmp_214["$W"]
    set $P5101, $P5099
    goto if1839_end4311
  if1839_else4310:
    null $P5100
    set $P5101, $P5100
  if1839_end4311:
    unless_null $P5101, vivi_18404312
    nqp_get_sc_object $P5102, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5101, $P5102
  vivi_18404312:
    unless_null $P5101, vivi_18414313
    die "Contextual $*W not found"
    box $P5103, "Contextual $*W not found"
    set $P5101, $P5103
  vivi_18414313:
    set $P5096, $P5101
  fallback4309:
    $P5104 = $P5096."load_dependency_tasks"()
.annotate 'line', 1690
    find_dynamic_lex $P5105, "$*W"
    unless_null $P5105, fallback4314
    nqp_get_sc_object $P5107, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5106, $P5107
    set fb_tmp_215, $P5106
    repr_defined $I5011, fb_tmp_215
    unless $I5011 goto if1842_else4315 
    set $P5108, fb_tmp_215["$W"]
    set $P5110, $P5108
    goto if1842_end4316
  if1842_else4315:
    null $P5109
    set $P5110, $P5109
  if1842_end4316:
    unless_null $P5110, vivi_18434317
    nqp_get_sc_object $P5111, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5110, $P5111
  vivi_18434317:
    unless_null $P5110, vivi_18444318
    die "Contextual $*W not found"
    box $P5112, "Contextual $*W not found"
    set $P5110, $P5112
  vivi_18444318:
    set $P5105, $P5110
  fallback4314:
    $P5113 = $P5105."fixup_tasks"()
.annotate 'line', 1695
    nqp_get_sc_object $P5114, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 1697
    nqp_get_sc_object $P5115, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 57
    $P5116 = $P5115."new"($P102 :named("value"))
    $P5117 = $P5114."new"($P5116, "call" :named("op"))
.annotate 'line', 1702
    nqp_get_sc_object $P5118, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 93
.annotate 'line', 1703
    nqp_get_sc_object $P5119, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 1705
    nqp_get_sc_object $P5120, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 57
    $P5121 = $P5120."new"($P102 :named("value"))
.annotate 'line', 1706
    nqp_get_sc_object $P5122, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5123 = $P5122."new"("ARGS" :named("name"), "local" :named("scope"), "param" :named("decl"), 1 :named("slurpy"), 1 :named("flat"))
    $P5124 = $P5119."new"($P5121, $P5123, "call" :named("op"))
    $P5125 = $P5118."new"($P5124)
    $P5126 = $P5068."new"($P102, "nqp" :named("hll"), $P5077 :named("sc"), $P5086 :named("code_ref_blocks"), $P5095 :named("compilation_mode"), $P5104 :named("pre_deserialize"), $P5113 :named("post_deserialize"), $P5117 :named("load"), $P5125 :named("main"))
    set $P103, $P5126
.annotate 'line', 1715
    find_dynamic_lex $P5127, "$*W"
    unless_null $P5127, fallback4319
    nqp_get_sc_object $P5129, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5128, $P5129
    set fb_tmp_216, $P5128
    repr_defined $I5012, fb_tmp_216
    unless $I5012 goto if1845_else4320 
    set $P5130, fb_tmp_216["$W"]
    set $P5132, $P5130
    goto if1845_end4321
  if1845_else4320:
    null $P5131
    set $P5132, $P5131
  if1845_end4321:
    unless_null $P5132, vivi_18464322
    nqp_get_sc_object $P5133, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5132, $P5133
  vivi_18464322:
    unless_null $P5132, vivi_18474323
    die "Contextual $*W not found"
    box $P5134, "Contextual $*W not found"
    set $P5132, $P5134
  vivi_18474323:
    set $P5127, $P5132
  fallback4319:
    $P5127."cleanup"()
.annotate 'line', 1717
    $P5135 = _lex_param_1."!make"($P103)
    .return ($P5135) 
.end
.HLL "nqp"
.namespace []
.sub "statementlist" :subid("cuid_251_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1720
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5022 = 'cuid_450_1361734139.417' 
    capture_lex $P5022 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_217 
    .local pmc fb_tmp_218 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
.annotate 'line', 1721
    nqp_get_sc_object $P5002, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 93
    $P5003 = $P5002."new"(_lex_param_1 :named("node"))
    set $P101, $P5003
    unless_null _lex_param_1, fallback4328
    nqp_get_sc_object $P5004, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5004
  fallback4328:
    set fb_tmp_217, _lex_param_1
    repr_defined $I5001, fb_tmp_217
    unless $I5001 goto if1849_else4326 
    set $P5005, fb_tmp_217["statement"]
    set $P5007, $P5005
    goto if1849_end4327
  if1849_else4326:
    null $P5006
    set $P5007, $P5006
  if1849_end4327:
    unless_null $P5007, vivi_18504329
    nqp_get_sc_object $P5008, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5007, $P5008
  vivi_18504329:
    unless $P5007 goto if1848_else4324 
.annotate 'line', 1722
    unless_null _lex_param_1, fallback4332
    nqp_get_sc_object $P5012, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5012
  fallback4332:
    set fb_tmp_218, _lex_param_1
    repr_defined $I5002, fb_tmp_218
    unless $I5002 goto if1851_else4330 
    set $P5013, fb_tmp_218["statement"]
    set $P5015, $P5013
    goto if1851_end4331
  if1851_else4330:
    null $P5014
    set $P5015, $P5014
  if1851_end4331:
    unless_null $P5015, vivi_18524333
    nqp_get_sc_object $P5016, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5015, $P5016
  vivi_18524333:
    set $P5009, $P5015
    iter $P5011, $P5015
  for_next4352:
    unless $P5011, for_done4354
    shift $P5018, $P5011
  for_redo4353:
    .const 'Sub' $P5017 = 'cuid_450_1361734139.417' 
    capture_lex $P5017
    $P5009 = $P5017($P5018)
    goto for_next4352
  for_done4354:
    goto if1848_end4325
  if1848_else4324:
.annotate 'line', 1731
.annotate 'line', 1732
    $P5019 = "&default_for"("$")
    $P5020 = $P101."push"($P5019)
  if1848_end4325:
.annotate 'line', 1734
    $P5021 = _lex_param_1."!make"($P101)
    .return ($P5021) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_450_1361734139.417") :anon :lex :outer("cuid_251_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1723
    .param pmc _lex_param_0 
    .lex "$ast", $P101 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_219 
    .local pmc fb_tmp_220 
    .local pmc fb_tmp_221 
    .local pmc fb_tmp_222 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
.annotate 'line', 1724
    $P5002 = _lex_param_0."ast"()
    set $P101, $P5002
    set fb_tmp_219, $P101
    repr_defined $I5002, fb_tmp_219
    unless $I5002 goto if1854_else4336 
    set $P5003, fb_tmp_219["sink"]
    set $P5005, $P5003
    goto if1854_end4337
  if1854_else4336:
    null $P5004
    set $P5005, $P5004
  if1854_end4337:
    unless_null $P5005, vivi_18554338
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5005, $P5006
  vivi_18554338:
    defined $I5001, $P5005
    unless $I5001 goto if1853_end4335 
    set fb_tmp_220, $P101
    repr_defined $I5003, fb_tmp_220
    unless $I5003 goto if1856_else4339 
    set $P5007, fb_tmp_220["sink"]
    set $P5009, $P5007
    goto if1856_end4340
  if1856_else4339:
    null $P5008
    set $P5009, $P5008
  if1856_end4340:
    unless_null $P5009, vivi_18574341
    nqp_get_sc_object $P5010, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5009, $P5010
  vivi_18574341:
    set $P101, $P5009
  if1853_end4335:
    set fb_tmp_221, $P101
    repr_defined $I5004, fb_tmp_221
    unless $I5004 goto if1859_else4344 
    set $P5011, fb_tmp_221["bareblock"]
    set $P5013, $P5011
    goto if1859_end4345
  if1859_else4344:
    null $P5012
    set $P5013, $P5012
  if1859_end4345:
    unless_null $P5013, vivi_18604346
    nqp_get_sc_object $P5014, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5013, $P5014
  vivi_18604346:
    unless $P5013 goto if1858_end4343 
.annotate 'line', 1726
    set fb_tmp_222, $P101
    repr_defined $I5005, fb_tmp_222
    unless $I5005 goto if1861_else4347 
    set $P5015, fb_tmp_222[0]
    set $P5017, $P5015
    goto if1861_end4348
  if1861_else4347:
    null $P5016
    set $P5017, $P5016
  if1861_end4348:
    unless_null $P5017, vivi_18624349
    nqp_get_sc_object $P5018, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5017, $P5018
  vivi_18624349:
    $P5019 = "&block_immediate"($P5017)
    set $P101, $P5019
  if1858_end4343:
    nqp_get_sc_object $P5020, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 12
    type_check $I5006, $P101, $P5020
    unless $I5006 goto if1863_end4351 
.annotate 'line', 1727
    nqp_get_sc_object $P5021, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 93
    $P5022 = $P5021."new"($P101)
    set $P101, $P5022
  if1863_end4351:
.annotate 'line', 1728
    find_lex $P5023, "$past"
    $P5024 = $P5023."push"($P101)
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "statement" :subid("cuid_252_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1737
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :optional 
    .param int haz_param_4 :opt_flag 
    .const 'Sub' $P5024 = 'cuid_451_1361734139.417' 
    capture_lex $P5024 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .lex "$key", _lex_param_2 
    .local pmc fb_tmp_223 
    .local pmc fb_tmp_236 
    .local pmc fb_tmp_237 
    if haz_param_4, default4416
    nqp_get_sc_object $P5023, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_2, $P5023
  default4416:
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    unless_null _lex_param_1, fallback4359
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5002
  fallback4359:
    set fb_tmp_223, _lex_param_1
    repr_defined $I5001, fb_tmp_223
    unless $I5001 goto if1865_else4357 
    set $P5003, fb_tmp_223["EXPR"]
    set $P5005, $P5003
    goto if1865_end4358
  if1865_else4357:
    null $P5004
    set $P5005, $P5004
  if1865_end4358:
    unless_null $P5005, vivi_18664360
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5005, $P5006
  vivi_18664360:
    unless $P5005 goto if1864_else4355 
    .const 'Sub' $P5007 = 'cuid_451_1361734139.417' 
    capture_lex $P5007
    $P5008 = $P5007()
    goto if1864_end4356
  if1864_else4355:
    unless_null _lex_param_1, fallback4410
    nqp_get_sc_object $P5009, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5009
  fallback4410:
    set fb_tmp_236, _lex_param_1
    repr_defined $I5002, fb_tmp_236
    unless $I5002 goto if1895_else4408 
    set $P5010, fb_tmp_236["statement_control"]
    set $P5012, $P5010
    goto if1895_end4409
  if1895_else4408:
    null $P5011
    set $P5012, $P5011
  if1895_end4409:
    unless_null $P5012, vivi_18964411
    nqp_get_sc_object $P5013, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5012, $P5013
  vivi_18964411:
    unless $P5012 goto if1894_else4406 
.annotate 'line', 1760
    unless_null _lex_param_1, fallback4414
    nqp_get_sc_object $P5014, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5014
  fallback4414:
    set fb_tmp_237, _lex_param_1
    repr_defined $I5003, fb_tmp_237
    unless $I5003 goto if1897_else4412 
    set $P5015, fb_tmp_237["statement_control"]
    set $P5017, $P5015
    goto if1897_end4413
  if1897_else4412:
    null $P5016
    set $P5017, $P5016
  if1897_end4413:
    unless_null $P5017, vivi_18984415
    nqp_get_sc_object $P5018, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5017, $P5018
  vivi_18984415:
    $P5019 = $P5017."ast"()
    set $P101, $P5019
    set $P5021, $P101
    goto if1894_end4407
  if1894_else4406:
.annotate 'line', 1761
    box $P5020, 0
    set $P101, $P5020
    set $P5021, $P101
  if1894_end4407:
  if1864_end4356:
.annotate 'line', 1762
    $P5022 = _lex_param_1."!make"($P101)
    .return ($P5022) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_451_1361734139.417") :anon :lex :outer("cuid_252_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1739
    .lex "$mc", $P101 
    .lex "$ml", $P102 
    .local pmc fb_tmp_224 
    .local pmc fb_tmp_225 
    .local pmc fb_tmp_226 
    .local pmc fb_tmp_227 
    .local pmc fb_tmp_228 
    .local pmc fb_tmp_229 
    .local pmc fb_tmp_230 
    .local pmc fb_tmp_231 
    .local pmc fb_tmp_232 
    .local pmc fb_tmp_233 
    .local pmc fb_tmp_234 
    .local pmc fb_tmp_235 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
    find_lex $P5003, "$/"
    unless_null $P5003, fallback4365
    nqp_get_sc_object $P5004, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5003, $P5004
  fallback4365:
    set fb_tmp_225, $P5003
    repr_defined $I5002, fb_tmp_225
    unless $I5002 goto if1868_else4363 
    set $P5005, fb_tmp_225["statement_mod_cond"]
    set $P5007, $P5005
    goto if1868_end4364
  if1868_else4363:
    null $P5006
    set $P5007, $P5006
  if1868_end4364:
    unless_null $P5007, vivi_18694366
    nqp_get_sc_object $P5008, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5007, $P5008
  vivi_18694366:
    set fb_tmp_224, $P5007
    repr_defined $I5001, fb_tmp_224
    unless $I5001 goto if1867_else4361 
    set $P5009, fb_tmp_224[0]
    set $P5011, $P5009
    goto if1867_end4362
  if1867_else4361:
    null $P5010
    set $P5011, $P5010
  if1867_end4362:
    unless_null $P5011, vivi_18704367
    nqp_get_sc_object $P5012, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5011, $P5012
  vivi_18704367:
    set $P101, $P5011
    find_lex $P5013, "$/"
    unless_null $P5013, fallback4372
    nqp_get_sc_object $P5014, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5013, $P5014
  fallback4372:
    set fb_tmp_227, $P5013
    repr_defined $I5004, fb_tmp_227
    unless $I5004 goto if1872_else4370 
    set $P5015, fb_tmp_227["statement_mod_loop"]
    set $P5017, $P5015
    goto if1872_end4371
  if1872_else4370:
    null $P5016
    set $P5017, $P5016
  if1872_end4371:
    unless_null $P5017, vivi_18734373
    nqp_get_sc_object $P5018, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5017, $P5018
  vivi_18734373:
    set fb_tmp_226, $P5017
    repr_defined $I5003, fb_tmp_226
    unless $I5003 goto if1871_else4368 
    set $P5019, fb_tmp_226[0]
    set $P5021, $P5019
    goto if1871_end4369
  if1871_else4368:
    null $P5020
    set $P5021, $P5020
  if1871_end4369:
    unless_null $P5021, vivi_18744374
    nqp_get_sc_object $P5022, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5021, $P5022
  vivi_18744374:
    set $P102, $P5021
.annotate 'line', 1742
    find_lex $P5023, "$/"
    unless_null $P5023, fallback4377
    nqp_get_sc_object $P5024, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5023, $P5024
  fallback4377:
    set fb_tmp_228, $P5023
    repr_defined $I5005, fb_tmp_228
    unless $I5005 goto if1875_else4375 
    set $P5025, fb_tmp_228["EXPR"]
    set $P5027, $P5025
    goto if1875_end4376
  if1875_else4375:
    null $P5026
    set $P5027, $P5026
  if1875_end4376:
    unless_null $P5027, vivi_18764378
    nqp_get_sc_object $P5028, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5027, $P5028
  vivi_18764378:
    $P5029 = $P5027."ast"()
    store_lex "$past", $P5029
    unless $P101 goto if1877_end4380 
.annotate 'line', 1743
.annotate 'line', 1744
    nqp_get_sc_object $P5030, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    set fb_tmp_229, $P101
    repr_defined $I5006, fb_tmp_229
    unless $I5006 goto if1878_else4381 
    set $P5031, fb_tmp_229["cond"]
    set $P5033, $P5031
    goto if1878_end4382
  if1878_else4381:
    null $P5032
    set $P5033, $P5032
  if1878_end4382:
    unless_null $P5033, vivi_18794383
    nqp_get_sc_object $P5034, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5033, $P5034
  vivi_18794383:
    $P5035 = $P5033."ast"()
    find_lex $P5036, "$past"
    set fb_tmp_230, $P101
    repr_defined $I5007, fb_tmp_230
    unless $I5007 goto if1880_else4384 
    set $P5037, fb_tmp_230["sym"]
    set $P5039, $P5037
    goto if1880_end4385
  if1880_else4384:
    null $P5038
    set $P5039, $P5038
  if1880_end4385:
    unless_null $P5039, vivi_18814386
    nqp_get_sc_object $P5040, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5039, $P5040
  vivi_18814386:
    set $S5001, $P5039
    find_lex $P5041, "$/"
    $P5042 = $P5030."new"($P5035, $P5036, $S5001 :named("op"), $P5041 :named("node"))
    store_lex "$past", $P5042
  if1877_end4380:
    set $P5081, $P102
    unless $P102 goto if1882_end4388 
.annotate 'line', 1746
    set fb_tmp_231, $P102
    repr_defined $I5009, fb_tmp_231
    unless $I5009 goto if1884_else4391 
    set $P5043, fb_tmp_231["sym"]
    set $P5045, $P5043
    goto if1884_end4392
  if1884_else4391:
    null $P5044
    set $P5045, $P5044
  if1884_end4392:
    unless_null $P5045, vivi_18854393
    nqp_get_sc_object $P5046, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5045, $P5046
  vivi_18854393:
    set $S5002, $P5045
    iseq $I5008, $S5002, "for"
    unless $I5008 goto if1883_else4389 
.annotate 'line', 1747
.annotate 'line', 1748
    nqp_get_sc_object $P5047, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 103
.annotate 'line', 1749
    nqp_get_sc_object $P5048, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5049 = $P5048."new"("$_" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    find_lex $P5050, "$past"
    $P5051 = $P5047."new"($P5049, $P5050, "immediate" :named("blocktype"))
    store_lex "$past", $P5051
.annotate 'line', 1751
    find_lex $P5052, "$past"
    $P5052."symbol"("$_", "lexical" :named("scope"))
.annotate 'line', 1752
    find_lex $P5053, "$past"
    $P5053."arity"(1)
.annotate 'line', 1753
    nqp_get_sc_object $P5054, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    set fb_tmp_232, $P102
    repr_defined $I5010, fb_tmp_232
    unless $I5010 goto if1886_else4394 
    set $P5055, fb_tmp_232["cond"]
    set $P5057, $P5055
    goto if1886_end4395
  if1886_else4394:
    null $P5056
    set $P5057, $P5056
  if1886_end4395:
    unless_null $P5057, vivi_18874396
    nqp_get_sc_object $P5058, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5057, $P5058
  vivi_18874396:
    $P5059 = $P5057."ast"()
    find_lex $P5060, "$past"
    set fb_tmp_233, $P102
    repr_defined $I5011, fb_tmp_233
    unless $I5011 goto if1888_else4397 
    set $P5061, fb_tmp_233["sym"]
    set $P5063, $P5061
    goto if1888_end4398
  if1888_else4397:
    null $P5062
    set $P5063, $P5062
  if1888_end4398:
    unless_null $P5063, vivi_18894399
    nqp_get_sc_object $P5064, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5063, $P5064
  vivi_18894399:
    set $S5003, $P5063
    find_lex $P5065, "$/"
    $P5066 = $P5054."new"($P5059, $P5060, $S5003 :named("op"), $P5065 :named("node"))
    store_lex "$past", $P5066
    set $P5080, $P5066
    goto if1883_end4390
  if1883_else4389:
.annotate 'line', 1755
.annotate 'line', 1756
    nqp_get_sc_object $P5067, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    set fb_tmp_234, $P102
    repr_defined $I5012, fb_tmp_234
    unless $I5012 goto if1890_else4400 
    set $P5068, fb_tmp_234["cond"]
    set $P5070, $P5068
    goto if1890_end4401
  if1890_else4400:
    null $P5069
    set $P5070, $P5069
  if1890_end4401:
    unless_null $P5070, vivi_18914402
    nqp_get_sc_object $P5071, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5070, $P5071
  vivi_18914402:
    $P5072 = $P5070."ast"()
    find_lex $P5073, "$past"
    set fb_tmp_235, $P102
    repr_defined $I5013, fb_tmp_235
    unless $I5013 goto if1892_else4403 
    set $P5074, fb_tmp_235["sym"]
    set $P5076, $P5074
    goto if1892_end4404
  if1892_else4403:
    null $P5075
    set $P5076, $P5075
  if1892_end4404:
    unless_null $P5076, vivi_18934405
    nqp_get_sc_object $P5077, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5076, $P5077
  vivi_18934405:
    set $S5004, $P5076
    find_lex $P5078, "$/"
    $P5079 = $P5067."new"($P5072, $P5073, $S5004 :named("op"), $P5078 :named("node"))
    store_lex "$past", $P5079
    set $P5080, $P5079
  if1883_end4390:
    set $P5081, $P5080
  if1882_end4388:
    .return ($P5081) 
.end
.HLL "nqp"
.namespace []
.sub "xblock" :subid("cuid_253_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1765
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_238 
    .local pmc fb_tmp_239 
.annotate 'line', 1766
    nqp_get_sc_object $P5001, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    unless_null _lex_param_1, fallback4419
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5002
  fallback4419:
    set fb_tmp_238, _lex_param_1
    repr_defined $I5001, fb_tmp_238
    unless $I5001 goto if1899_else4417 
    set $P5003, fb_tmp_238["EXPR"]
    set $P5005, $P5003
    goto if1899_end4418
  if1899_else4417:
    null $P5004
    set $P5005, $P5004
  if1899_end4418:
    unless_null $P5005, vivi_19004420
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5005, $P5006
  vivi_19004420:
    $P5007 = $P5005."ast"()
    unless_null _lex_param_1, fallback4423
    nqp_get_sc_object $P5008, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5008
  fallback4423:
    set fb_tmp_239, _lex_param_1
    repr_defined $I5002, fb_tmp_239
    unless $I5002 goto if1901_else4421 
    set $P5009, fb_tmp_239["pblock"]
    set $P5011, $P5009
    goto if1901_end4422
  if1901_else4421:
    null $P5010
    set $P5011, $P5010
  if1901_end4422:
    unless_null $P5011, vivi_19024424
    nqp_get_sc_object $P5012, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5011, $P5012
  vivi_19024424:
    $P5013 = $P5011."ast"()
    $P5014 = $P5001."new"($P5007, $P5013, "if" :named("op"), _lex_param_1 :named("node"))
    $P5015 = _lex_param_1."!make"($P5014)
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "pblock" :subid("cuid_254_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1769
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_240 
.annotate 'line', 1770
    unless_null _lex_param_1, fallback4427
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback4427:
    set fb_tmp_240, _lex_param_1
    repr_defined $I5001, fb_tmp_240
    unless $I5001 goto if1903_else4425 
    set $P5002, fb_tmp_240["blockoid"]
    set $P5004, $P5002
    goto if1903_end4426
  if1903_else4425:
    null $P5003
    set $P5004, $P5003
  if1903_end4426:
    unless_null $P5004, vivi_19044428
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_19044428:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "block" :subid("cuid_255_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1773
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_241 
.annotate 'line', 1774
    unless_null _lex_param_1, fallback4431
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback4431:
    set fb_tmp_241, _lex_param_1
    repr_defined $I5001, fb_tmp_241
    unless $I5001 goto if1905_else4429 
    set $P5002, fb_tmp_241["blockoid"]
    set $P5004, $P5002
    goto if1905_end4430
  if1905_else4429:
    null $P5003
    set $P5004, $P5003
  if1905_end4430:
    unless_null $P5004, vivi_19064432
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_19064432:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "blockoid" :subid("cuid_256_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1777
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5037 = 'cuid_453_1361734139.417' 
    capture_lex $P5037 
    .lex "$BLOCK", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_242 
    .local pmc fb_tmp_243 
    .local pmc fb_tmp_249 
    .local pmc fb_tmp_250 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
.annotate 'line', 1778
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback4433
    nqp_get_sc_object $P5004, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5003, $P5004
    set fb_tmp_242, $P5003
    repr_defined $I5001, fb_tmp_242
    unless $I5001 goto if1907_else4434 
    set $P5005, fb_tmp_242["$W"]
    set $P5007, $P5005
    goto if1907_end4435
  if1907_else4434:
    null $P5006
    set $P5007, $P5006
  if1907_end4435:
    unless_null $P5007, vivi_19084436
    nqp_get_sc_object $P5008, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5007, $P5008
  vivi_19084436:
    unless_null $P5007, vivi_19094437
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_19094437:
    set $P5002, $P5007
  fallback4433:
    $P5010 = $P5002."pop_lexpad"()
    set $P101, $P5010
    unless_null _lex_param_1, fallback4442
    nqp_get_sc_object $P5011, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5011
  fallback4442:
    set fb_tmp_243, _lex_param_1
    repr_defined $I5002, fb_tmp_243
    unless $I5002 goto if1911_else4440 
    set $P5012, fb_tmp_243["statementlist"]
    set $P5014, $P5012
    goto if1911_end4441
  if1911_else4440:
    null $P5013
    set $P5014, $P5013
  if1911_end4441:
    unless_null $P5014, vivi_19124443
    nqp_get_sc_object $P5015, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5014, $P5015
  vivi_19124443:
    unless $P5014 goto if1910_else4438 
    .const 'Sub' $P5016 = 'cuid_453_1361734139.417' 
    capture_lex $P5016
    $P5017 = $P5016()
    set $P5036, $P5017
    goto if1910_end4439
  if1910_else4438:
.annotate 'line', 1793
    find_dynamic_lex $P5018, "$*HAS_YOU_ARE_HERE"
    unless_null $P5018, fallback4477
    nqp_get_sc_object $P5020, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5019, $P5020
    set fb_tmp_249, $P5019
    repr_defined $I5003, fb_tmp_249
    unless $I5003 goto if1930_else4478 
    set $P5021, fb_tmp_249["$HAS_YOU_ARE_HERE"]
    set $P5023, $P5021
    goto if1930_end4479
  if1930_else4478:
    null $P5022
    set $P5023, $P5022
  if1930_end4479:
    unless_null $P5023, vivi_19314480
    nqp_get_sc_object $P5024, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5023, $P5024
  vivi_19314480:
    unless_null $P5023, vivi_19324481
    die "Contextual $*HAS_YOU_ARE_HERE not found"
    box $P5025, "Contextual $*HAS_YOU_ARE_HERE not found"
    set $P5023, $P5025
  vivi_19324481:
    set $P5018, $P5023
  fallback4477:
    unless $P5018 goto if1929_end4476 
.annotate 'line', 1794
.annotate 'line', 1795
    $P5026 = _lex_param_1."CURSOR"()
    $P5027 = $P5026."panic"("{YOU_ARE_HERE} may only appear once in a setting")
  if1929_end4476:
    box $P5028, 1
    store_dynamic_lex "$*HAS_YOU_ARE_HERE", $P5028
.annotate 'line', 1798
    unless_null _lex_param_1, fallback4484
    nqp_get_sc_object $P5029, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5029
  fallback4484:
    set fb_tmp_250, _lex_param_1
    repr_defined $I5004, fb_tmp_250
    unless $I5004 goto if1933_else4482 
    set $P5030, fb_tmp_250["you_are_here"]
    set $P5032, $P5030
    goto if1933_end4483
  if1933_else4482:
    null $P5031
    set $P5032, $P5031
  if1933_end4483:
    unless_null $P5032, vivi_19344485
    nqp_get_sc_object $P5033, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5032, $P5033
  vivi_19344485:
    $P5034 = $P5032."ast"()
    $P5035 = _lex_param_1."!make"($P5034)
    set $P5036, $P5035
  if1910_end4439:
    .return ($P5036) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_453_1361734139.417") :anon :lex :outer("cuid_256_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1779
    .const 'Sub' $P5055 = 'cuid_452_1361734139.417' 
    capture_lex $P5055 
    .lex "$past", $P101 
    .local pmc fb_tmp_244 
    .local pmc fb_tmp_245 
    .local pmc pkg_viv_tmp_30 
    .local pmc fb_tmp_246 
    .local pmc pkg_viv_tmp_31 
    .local pmc fb_tmp_247 
    .local pmc pkg_viv_tmp_33 
    .local pmc fb_tmp_248 
    .local pmc pkg_viv_tmp_32 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
.annotate 'line', 1780
    find_lex $P5002, "$/"
    unless_null $P5002, fallback4446
    nqp_get_sc_object $P5003, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5002, $P5003
  fallback4446:
    set fb_tmp_244, $P5002
    repr_defined $I5001, fb_tmp_244
    unless $I5001 goto if1913_else4444 
    set $P5004, fb_tmp_244["statementlist"]
    set $P5006, $P5004
    goto if1913_end4445
  if1913_else4444:
    null $P5005
    set $P5006, $P5005
  if1913_end4445:
    unless_null $P5006, vivi_19144447
    nqp_get_sc_object $P5007, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5006, $P5007
  vivi_19144447:
    $P5008 = $P5006."ast"()
    set $P101, $P5008
    find_dynamic_lex $P5009, "%*HANDLERS"
    unless_null $P5009, fallback4450
    nqp_get_sc_object $P5011, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5010, $P5011
    set pkg_viv_tmp_30, $P5010
    set fb_tmp_245, pkg_viv_tmp_30
    repr_defined $I5002, fb_tmp_245
    unless $I5002 goto if1916_else4451 
    set $P5012, fb_tmp_245["%HANDLERS"]
    set $P5014, $P5012
    goto if1916_end4452
  if1916_else4451:
    null $P5013
    set $P5014, $P5013
  if1916_end4452:
    unless_null $P5014, vivi_19174453
    new $P5015, 'Hash'
    set pkg_viv_tmp_30["%HANDLERS"], $P5015
    set $P5014, $P5015
  vivi_19174453:
    unless_null $P5014, vivi_19184454
    die "Contextual %*HANDLERS not found"
    box $P5016, "Contextual %*HANDLERS not found"
    set $P5014, $P5016
  vivi_19184454:
    set $P5009, $P5014
  fallback4450:
    unless $P5009 goto if1915_end4449 
.annotate 'line', 1781
.annotate 'line', 1782
    nqp_get_sc_object $P5017, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    $P5018 = $P5017."new"($P101, "handle" :named("op"))
    set $P101, $P5018
    find_dynamic_lex $P5022, "%*HANDLERS"
    unless_null $P5022, fallback4455
    nqp_get_sc_object $P5024, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5023, $P5024
    set pkg_viv_tmp_31, $P5023
    set fb_tmp_246, pkg_viv_tmp_31
    repr_defined $I5003, fb_tmp_246
    unless $I5003 goto if1919_else4456 
    set $P5025, fb_tmp_246["%HANDLERS"]
    set $P5027, $P5025
    goto if1919_end4457
  if1919_else4456:
    null $P5026
    set $P5027, $P5026
  if1919_end4457:
    unless_null $P5027, vivi_19204458
    new $P5028, 'Hash'
    set pkg_viv_tmp_31["%HANDLERS"], $P5028
    set $P5027, $P5028
  vivi_19204458:
    unless_null $P5027, vivi_19214459
    die "Contextual %*HANDLERS not found"
    box $P5029, "Contextual %*HANDLERS not found"
    set $P5027, $P5029
  vivi_19214459:
    set $P5022, $P5027
  fallback4455:
    set $P5019, $P5022
    iter $P5021, $P5022
  for_next4460:
    unless $P5021, for_done4462
    shift $P5031, $P5021
  for_redo4461:
    .const 'Sub' $P5030 = 'cuid_452_1361734139.417' 
    capture_lex $P5030
    $P5019 = $P5030($P5031)
    goto for_next4460
  for_done4462:
  if1915_end4449:
.annotate 'line', 1788
    find_lex $P5032, "$BLOCK"
    $P5032."push"($P101)
.annotate 'line', 1789
    find_lex $P5033, "$BLOCK"
    find_lex $P5034, "$/"
    $P5033."node"($P5034)
    find_dynamic_lex $P5035, "%*HANDLERS"
    unless_null $P5035, fallback4465
    nqp_get_sc_object $P5037, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5036, $P5037
    set pkg_viv_tmp_33, $P5036
    set fb_tmp_247, pkg_viv_tmp_33
    repr_defined $I5004, fb_tmp_247
    unless $I5004 goto if1923_else4466 
    set $P5038, fb_tmp_247["%HANDLERS"]
    set $P5040, $P5038
    goto if1923_end4467
  if1923_else4466:
    null $P5039
    set $P5040, $P5039
  if1923_end4467:
    unless_null $P5040, vivi_19244468
    new $P5041, 'Hash'
    set pkg_viv_tmp_33["%HANDLERS"], $P5041
    set $P5040, $P5041
  vivi_19244468:
    unless_null $P5040, vivi_19254469
    die "Contextual %*HANDLERS not found"
    box $P5042, "Contextual %*HANDLERS not found"
    set $P5040, $P5042
  vivi_19254469:
    set $P5035, $P5040
  fallback4465:
    unless $P5035 goto if1922_end4464 
    find_lex $P5043, "$BLOCK"
    find_dynamic_lex $P5044, "%*HANDLERS"
    unless_null $P5044, fallback4470
    nqp_get_sc_object $P5046, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5045, $P5046
    set pkg_viv_tmp_32, $P5045
    set fb_tmp_248, pkg_viv_tmp_32
    repr_defined $I5005, fb_tmp_248
    unless $I5005 goto if1926_else4471 
    set $P5047, fb_tmp_248["%HANDLERS"]
    set $P5049, $P5047
    goto if1926_end4472
  if1926_else4471:
    null $P5048
    set $P5049, $P5048
  if1926_end4472:
    unless_null $P5049, vivi_19274473
    new $P5050, 'Hash'
    set pkg_viv_tmp_32["%HANDLERS"], $P5050
    set $P5049, $P5050
  vivi_19274473:
    unless_null $P5049, vivi_19284474
    die "Contextual %*HANDLERS not found"
    box $P5051, "Contextual %*HANDLERS not found"
    set $P5049, $P5051
  vivi_19284474:
    set $P5044, $P5049
  fallback4470:
    set $P5043["handlers"], $P5044
  if1922_end4464:
.annotate 'line', 1791
    find_dynamic_lex $P5052, "$/"
    find_lex $P5053, "$BLOCK"
    $P5054 = $P5052."!make"($P5053)
    .return ($P5054) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_452_1361734139.417") :anon :lex :outer("cuid_453_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1783
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 1784
    find_lex $P5001, "$past"
    $P5002 = _lex_param_0."key"()
    $P5001."push"($P5002)
.annotate 'line', 1785
    find_lex $P5003, "$past"
    $P5004 = _lex_param_0."value"()
    $P5005 = $P5003."push"($P5004)
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "newpad" :subid("cuid_257_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1802
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_251 
.annotate 'line', 1803
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback4486
    nqp_get_sc_object $P5003, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5002, $P5003
    set fb_tmp_251, $P5002
    repr_defined $I5001, fb_tmp_251
    unless $I5001 goto if1935_else4487 
    set $P5004, fb_tmp_251["$W"]
    set $P5006, $P5004
    goto if1935_end4488
  if1935_else4487:
    null $P5005
    set $P5006, $P5005
  if1935_end4488:
    unless_null $P5006, vivi_19364489
    nqp_get_sc_object $P5007, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5006, $P5007
  vivi_19364489:
    unless_null $P5006, vivi_19374490
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_19374490:
    set $P5001, $P5006
  fallback4486:
    $P5009 = $P5001."push_lexpad"(_lex_param_1)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "outerctx" :subid("cuid_258_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1806
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5030 = 'cuid_455_1361734139.417' 
    capture_lex $P5030 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_252 
    .local pmc fb_tmp_253 
    .local pmc fb_tmp_254 
    .local pmc pkg_viv_tmp_34 
    .local pmc fb_tmp_272 
    find_dynamic_lex $P5001, "%*COMPILING"
    unless_null $P5001, fallback4497
    nqp_get_sc_object $P5003, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_34, $P5002
    set fb_tmp_254, pkg_viv_tmp_34
    repr_defined $I5004, fb_tmp_254
    unless $I5004 goto if1941_else4498 
    set $P5004, fb_tmp_254["%COMPILING"]
    set $P5006, $P5004
    goto if1941_end4499
  if1941_else4498:
    null $P5005
    set $P5006, $P5005
  if1941_end4499:
    unless_null $P5006, vivi_19424500
    new $P5007, 'Hash'
    set pkg_viv_tmp_34["%COMPILING"], $P5007
    set $P5006, $P5007
  vivi_19424500:
    unless_null $P5006, vivi_19434501
    die "Contextual %*COMPILING not found"
    box $P5008, "Contextual %*COMPILING not found"
    set $P5006, $P5008
  vivi_19434501:
    set $P5001, $P5006
  fallback4497:
    set fb_tmp_253, $P5001
    repr_defined $I5003, fb_tmp_253
    unless $I5003 goto if1940_else4495 
    set $P5009, fb_tmp_253["%?OPTIONS"]
    set $P5011, $P5009
    goto if1940_end4496
  if1940_else4495:
    null $P5010
    set $P5011, $P5010
  if1940_end4496:
    unless_null $P5011, vivi_19444502
    nqp_get_sc_object $P5012, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5011, $P5012
  vivi_19444502:
    set fb_tmp_252, $P5011
    repr_defined $I5002, fb_tmp_252
    unless $I5002 goto if1939_else4493 
    set $P5013, fb_tmp_252["outer_ctx"]
    set $P5015, $P5013
    goto if1939_end4494
  if1939_else4493:
    null $P5014
    set $P5015, $P5014
  if1939_end4494:
    unless_null $P5015, vivi_19454503
    nqp_get_sc_object $P5016, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5015, $P5016
  vivi_19454503:
    defined $I5001, $P5015
    if $I5001 goto unless1938_end4492 
    .const 'Sub' $P5017 = 'cuid_455_1361734139.417' 
    capture_lex $P5017
    $P5018 = $P5017()
  unless1938_end4492:
.annotate 'line', 1827
    nqp_decontainerize $P5019, _lex_param_0
    find_dynamic_lex $P5020, "$*W"
    unless_null $P5020, fallback4580
    nqp_get_sc_object $P5022, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5021, $P5022
    set fb_tmp_272, $P5021
    repr_defined $I5005, fb_tmp_272
    unless $I5005 goto if1992_else4581 
    set $P5023, fb_tmp_272["$W"]
    set $P5025, $P5023
    goto if1992_end4582
  if1992_else4581:
    null $P5024
    set $P5025, $P5024
  if1992_end4582:
    unless_null $P5025, vivi_19934583
    nqp_get_sc_object $P5026, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5025, $P5026
  vivi_19934583:
    unless_null $P5025, vivi_19944584
    die "Contextual $*W not found"
    box $P5027, "Contextual $*W not found"
    set $P5025, $P5027
  vivi_19944584:
    set $P5020, $P5025
  fallback4580:
    $P5028 = $P5020."cur_lexpad"()
    $P5029 = $P5019."SET_BLOCK_OUTER_CTX"($P5028)
    .return ($P5029) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_455_1361734139.417") :anon :lex :outer("cuid_258_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1807
    .const 'Sub' $P5100 = 'cuid_454_1361734139.417' 
    capture_lex $P5100 
    .lex "$SETTING", $P101 
    .local pmc fb_tmp_255 
    .local pmc fb_tmp_256 
    .local pmc fb_tmp_257 
    .local pmc fb_tmp_258 
    .local pmc pkg_viv_tmp_35 
    .local pmc fb_tmp_259 
    .local pmc fb_tmp_260 
    .local pmc fb_tmp_261 
    .local pmc pkg_viv_tmp_36 
    .local pmc fb_tmp_262 
    .local pmc fb_tmp_263 
    .local pmc fb_tmp_264 
    .local pmc pkg_viv_tmp_37 
    .local pmc fb_tmp_265 
    .local pmc fb_tmp_266 
    .local pmc fb_tmp_267 
    .local pmc pkg_viv_tmp_38 
    .local pmc fb_tmp_270 
    .local pmc fb_tmp_271 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
.annotate 'line', 1810
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback4504
    nqp_get_sc_object $P5004, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5003, $P5004
    set fb_tmp_255, $P5003
    repr_defined $I5001, fb_tmp_255
    unless $I5001 goto if1946_else4505 
    set $P5005, fb_tmp_255["$W"]
    set $P5007, $P5005
    goto if1946_end4506
  if1946_else4505:
    null $P5006
    set $P5007, $P5006
  if1946_end4506:
    unless_null $P5007, vivi_19474507
    nqp_get_sc_object $P5008, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5007, $P5008
  vivi_19474507:
    unless_null $P5007, vivi_19484508
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_19484508:
    set $P5002, $P5007
  fallback4504:
    find_dynamic_lex $P5011, "%*COMPILING"
    unless_null $P5011, fallback4514
    nqp_get_sc_object $P5013, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5012, $P5013
    set pkg_viv_tmp_35, $P5012
    set fb_tmp_258, pkg_viv_tmp_35
    repr_defined $I5005, fb_tmp_258
    unless $I5005 goto if1951_else4515 
    set $P5014, fb_tmp_258["%COMPILING"]
    set $P5016, $P5014
    goto if1951_end4516
  if1951_else4515:
    null $P5015
    set $P5016, $P5015
  if1951_end4516:
    unless_null $P5016, vivi_19524517
    new $P5017, 'Hash'
    set pkg_viv_tmp_35["%COMPILING"], $P5017
    set $P5016, $P5017
  vivi_19524517:
    unless_null $P5016, vivi_19534518
    die "Contextual %*COMPILING not found"
    box $P5018, "Contextual %*COMPILING not found"
    set $P5016, $P5018
  vivi_19534518:
    set $P5011, $P5016
  fallback4514:
    set fb_tmp_257, $P5011
    repr_defined $I5004, fb_tmp_257
    unless $I5004 goto if1950_else4512 
    set $P5019, fb_tmp_257["%?OPTIONS"]
    set $P5021, $P5019
    goto if1950_end4513
  if1950_else4512:
    null $P5020
    set $P5021, $P5020
  if1950_end4513:
    unless_null $P5021, vivi_19544519
    nqp_get_sc_object $P5022, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5021, $P5022
  vivi_19544519:
    set fb_tmp_256, $P5021
    repr_defined $I5003, fb_tmp_256
    unless $I5003 goto if1949_else4510 
    set $P5023, fb_tmp_256["setting"]
    set $P5025, $P5023
    goto if1949_end4511
  if1949_else4510:
    null $P5024
    set $P5025, $P5024
  if1949_end4511:
    unless_null $P5025, vivi_19554520
    nqp_get_sc_object $P5026, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5025, $P5026
  vivi_19554520:
    set $P5010, $P5025
    defined $I5002, $P5010
    if $I5002, defor4509
    box $P5027, "NQPCORE"
    set $P5010, $P5027
  defor4509:
    $P5028 = $P5002."load_setting"($P5010)
    set $P101, $P5028
    find_dynamic_lex $P5029, "%*COMPILING"
    unless_null $P5029, fallback4527
    nqp_get_sc_object $P5031, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5030, $P5031
    set pkg_viv_tmp_36, $P5030
    set fb_tmp_261, pkg_viv_tmp_36
    repr_defined $I5009, fb_tmp_261
    unless $I5009 goto if1959_else4528 
    set $P5032, fb_tmp_261["%COMPILING"]
    set $P5034, $P5032
    goto if1959_end4529
  if1959_else4528:
    null $P5033
    set $P5034, $P5033
  if1959_end4529:
    unless_null $P5034, vivi_19604530
    new $P5035, 'Hash'
    set pkg_viv_tmp_36["%COMPILING"], $P5035
    set $P5034, $P5035
  vivi_19604530:
    unless_null $P5034, vivi_19614531
    die "Contextual %*COMPILING not found"
    box $P5036, "Contextual %*COMPILING not found"
    set $P5034, $P5036
  vivi_19614531:
    set $P5029, $P5034
  fallback4527:
    set fb_tmp_260, $P5029
    repr_defined $I5008, fb_tmp_260
    unless $I5008 goto if1958_else4525 
    set $P5037, fb_tmp_260["%?OPTIONS"]
    set $P5039, $P5037
    goto if1958_end4526
  if1958_else4525:
    null $P5038
    set $P5039, $P5038
  if1958_end4526:
    unless_null $P5039, vivi_19624532
    nqp_get_sc_object $P5040, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5039, $P5040
  vivi_19624532:
    set fb_tmp_259, $P5039
    repr_defined $I5007, fb_tmp_259
    unless $I5007 goto if1957_else4523 
    set $P5041, fb_tmp_259["setting"]
    set $P5043, $P5041
    goto if1957_end4524
  if1957_else4523:
    null $P5042
    set $P5043, $P5042
  if1957_end4524:
    unless_null $P5043, vivi_19634533
    nqp_get_sc_object $P5044, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5043, $P5044
  vivi_19634533:
    set $S5001, $P5043
    iseq $I5006, $S5001, "NULL"
    box $P5099, $I5006
    set $P5098, $P5099
    if $I5006 goto unless1956_end4522 
.annotate 'line', 1815
.annotate 'line', 1816
    "&import_HOW_exports"($P101)
    find_dynamic_lex $P5045, "%*COMPILING"
    unless_null $P5045, fallback4540
    nqp_get_sc_object $P5047, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5046, $P5047
    set pkg_viv_tmp_37, $P5046
    set fb_tmp_264, pkg_viv_tmp_37
    repr_defined $I5012, fb_tmp_264
    unless $I5012 goto if1967_else4541 
    set $P5048, fb_tmp_264["%COMPILING"]
    set $P5050, $P5048
    goto if1967_end4542
  if1967_else4541:
    null $P5049
    set $P5050, $P5049
  if1967_end4542:
    unless_null $P5050, vivi_19684543
    new $P5051, 'Hash'
    set pkg_viv_tmp_37["%COMPILING"], $P5051
    set $P5050, $P5051
  vivi_19684543:
    unless_null $P5050, vivi_19694544
    die "Contextual %*COMPILING not found"
    box $P5052, "Contextual %*COMPILING not found"
    set $P5050, $P5052
  vivi_19694544:
    set $P5045, $P5050
  fallback4540:
    set fb_tmp_263, $P5045
    repr_defined $I5011, fb_tmp_263
    unless $I5011 goto if1966_else4538 
    set $P5053, fb_tmp_263["%?OPTIONS"]
    set $P5055, $P5053
    goto if1966_end4539
  if1966_else4538:
    null $P5054
    set $P5055, $P5054
  if1966_end4539:
    unless_null $P5055, vivi_19704545
    nqp_get_sc_object $P5056, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5055, $P5056
  vivi_19704545:
    set fb_tmp_262, $P5055
    repr_defined $I5010, fb_tmp_262
    unless $I5010 goto if1965_else4536 
    set $P5057, fb_tmp_262["no-regex-lib"]
    set $P5059, $P5057
    goto if1965_end4537
  if1965_else4536:
    null $P5058
    set $P5059, $P5058
  if1965_end4537:
    unless_null $P5059, vivi_19714546
    nqp_get_sc_object $P5060, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5059, $P5060
  vivi_19714546:
    set $P5097, $P5059
    if $P5059 goto unless1964_end4535 
.annotate 'line', 1817
    find_dynamic_lex $P5061, "%*COMPILING"
    unless_null $P5061, fallback4553
    nqp_get_sc_object $P5063, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5062, $P5063
    set pkg_viv_tmp_38, $P5062
    set fb_tmp_267, pkg_viv_tmp_38
    repr_defined $I5015, fb_tmp_267
    unless $I5015 goto if1975_else4554 
    set $P5064, fb_tmp_267["%COMPILING"]
    set $P5066, $P5064
    goto if1975_end4555
  if1975_else4554:
    null $P5065
    set $P5066, $P5065
  if1975_end4555:
    unless_null $P5066, vivi_19764556
    new $P5067, 'Hash'
    set pkg_viv_tmp_38["%COMPILING"], $P5067
    set $P5066, $P5067
  vivi_19764556:
    unless_null $P5066, vivi_19774557
    die "Contextual %*COMPILING not found"
    box $P5068, "Contextual %*COMPILING not found"
    set $P5066, $P5068
  vivi_19774557:
    set $P5061, $P5066
  fallback4553:
    set fb_tmp_266, $P5061
    repr_defined $I5014, fb_tmp_266
    unless $I5014 goto if1974_else4551 
    set $P5069, fb_tmp_266["%?OPTIONS"]
    set $P5071, $P5069
    goto if1974_end4552
  if1974_else4551:
    null $P5070
    set $P5071, $P5070
  if1974_end4552:
    unless_null $P5071, vivi_19784558
    nqp_get_sc_object $P5072, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5071, $P5072
  vivi_19784558:
    set fb_tmp_265, $P5071
    repr_defined $I5013, fb_tmp_265
    unless $I5013 goto if1973_else4549 
    set $P5073, fb_tmp_265["custom-regex-lib"]
    set $P5075, $P5073
    goto if1973_end4550
  if1973_else4549:
    null $P5074
    set $P5075, $P5074
  if1973_end4550:
    unless_null $P5075, vivi_19794559
    nqp_get_sc_object $P5076, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5075, $P5076
  vivi_19794559:
    unless $P5075 goto if1972_else4547 
    .const 'Sub' $P5077 = 'cuid_454_1361734139.417' 
    capture_lex $P5077
    $P5078 = $P5077($P5075)
    set $P5096, $P5078
    goto if1972_end4548
  if1972_else4547:
.annotate 'line', 1821
.annotate 'line', 1822
    find_dynamic_lex $P5079, "$*W"
    unless_null $P5079, fallback4570
    nqp_get_sc_object $P5081, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5080, $P5081
    set fb_tmp_270, $P5080
    repr_defined $I5016, fb_tmp_270
    unless $I5016 goto if1986_else4571 
    set $P5082, fb_tmp_270["$W"]
    set $P5084, $P5082
    goto if1986_end4572
  if1986_else4571:
    null $P5083
    set $P5084, $P5083
  if1986_end4572:
    unless_null $P5084, vivi_19874573
    nqp_get_sc_object $P5085, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5084, $P5085
  vivi_19874573:
    unless_null $P5084, vivi_19884574
    die "Contextual $*W not found"
    box $P5086, "Contextual $*W not found"
    set $P5084, $P5086
  vivi_19884574:
    set $P5079, $P5084
  fallback4570:
    find_dynamic_lex $P5087, "$*GLOBALish"
    unless_null $P5087, fallback4575
    nqp_get_sc_object $P5089, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5088, $P5089
    set fb_tmp_271, $P5088
    repr_defined $I5017, fb_tmp_271
    unless $I5017 goto if1989_else4576 
    set $P5090, fb_tmp_271["$GLOBALish"]
    set $P5092, $P5090
    goto if1989_end4577
  if1989_else4576:
    null $P5091
    set $P5092, $P5091
  if1989_end4577:
    unless_null $P5092, vivi_19904578
    nqp_get_sc_object $P5093, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5092, $P5093
  vivi_19904578:
    unless_null $P5092, vivi_19914579
    die "Contextual $*GLOBALish not found"
    box $P5094, "Contextual $*GLOBALish not found"
    set $P5092, $P5094
  vivi_19914579:
    set $P5087, $P5092
  fallback4575:
    $P5095 = $P5079."load_module"("NQPP6QRegex", $P5087)
    set $P5096, $P5095
  if1972_end4548:
    set $P5097, $P5096
  unless1964_end4535:
    set $P5098, $P5097
  unless1956_end4522:
    .return ($P5098) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_454_1361734139.417") :anon :lex :outer("cuid_455_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1818
    .param pmc _lex_param_0 
    .lex "$lib", _lex_param_0 
    .local pmc fb_tmp_268 
    .local pmc fb_tmp_269 
.annotate 'line', 1819
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback4560
    nqp_get_sc_object $P5003, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5002, $P5003
    set fb_tmp_268, $P5002
    repr_defined $I5001, fb_tmp_268
    unless $I5001 goto if1980_else4561 
    set $P5004, fb_tmp_268["$W"]
    set $P5006, $P5004
    goto if1980_end4562
  if1980_else4561:
    null $P5005
    set $P5006, $P5005
  if1980_end4562:
    unless_null $P5006, vivi_19814563
    nqp_get_sc_object $P5007, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5006, $P5007
  vivi_19814563:
    unless_null $P5006, vivi_19824564
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_19824564:
    set $P5001, $P5006
  fallback4560:
    find_dynamic_lex $P5009, "$*GLOBALish"
    unless_null $P5009, fallback4565
    nqp_get_sc_object $P5011, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5010, $P5011
    set fb_tmp_269, $P5010
    repr_defined $I5002, fb_tmp_269
    unless $I5002 goto if1983_else4566 
    set $P5012, fb_tmp_269["$GLOBALish"]
    set $P5014, $P5012
    goto if1983_end4567
  if1983_else4566:
    null $P5013
    set $P5014, $P5013
  if1983_end4567:
    unless_null $P5014, vivi_19844568
    nqp_get_sc_object $P5015, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5014, $P5015
  vivi_19844568:
    unless_null $P5014, vivi_19854569
    die "Contextual $*GLOBALish not found"
    box $P5016, "Contextual $*GLOBALish not found"
    set $P5014, $P5016
  vivi_19854569:
    set $P5009, $P5014
  fallback4565:
    $P5017 = $P5001."load_module"(_lex_param_0, $P5009)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "you_are_here" :subid("cuid_259_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1839
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
.annotate 'line', 1840
    nqp_decontainerize $P5001, _lex_param_0
    $P5002 = $P5001."CTXSAVE"()
    $P5003 = _lex_param_1."!make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<use>" :subid("cuid_260_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1845
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$module", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_273 
    .local pmc fb_tmp_274 
    .local pmc fb_tmp_275 
    .local pmc fb_tmp_276 
    .local pmc fb_tmp_277 
    .local pmc fb_tmp_278 
    .local pmc fb_tmp_279 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
.annotate 'line', 1846
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback4585
    nqp_get_sc_object $P5004, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5003, $P5004
    set fb_tmp_273, $P5003
    repr_defined $I5001, fb_tmp_273
    unless $I5001 goto if1995_else4586 
    set $P5005, fb_tmp_273["$W"]
    set $P5007, $P5005
    goto if1995_end4587
  if1995_else4586:
    null $P5006
    set $P5007, $P5006
  if1995_end4587:
    unless_null $P5007, vivi_19964588
    nqp_get_sc_object $P5008, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5007, $P5008
  vivi_19964588:
    unless_null $P5007, vivi_19974589
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_19974589:
    set $P5002, $P5007
  fallback4585:
    unless_null _lex_param_1, fallback4592
    nqp_get_sc_object $P5010, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5010
  fallback4592:
    set fb_tmp_274, _lex_param_1
    repr_defined $I5002, fb_tmp_274
    unless $I5002 goto if1998_else4590 
    set $P5011, fb_tmp_274["name"]
    set $P5013, $P5011
    goto if1998_end4591
  if1998_else4590:
    null $P5012
    set $P5013, $P5012
  if1998_end4591:
    unless_null $P5013, vivi_19994593
    nqp_get_sc_object $P5014, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5013, $P5014
  vivi_19994593:
    set $S5001, $P5013
    find_dynamic_lex $P5015, "$*GLOBALish"
    unless_null $P5015, fallback4594
    nqp_get_sc_object $P5017, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5016, $P5017
    set fb_tmp_275, $P5016
    repr_defined $I5003, fb_tmp_275
    unless $I5003 goto if2000_else4595 
    set $P5018, fb_tmp_275["$GLOBALish"]
    set $P5020, $P5018
    goto if2000_end4596
  if2000_else4595:
    null $P5019
    set $P5020, $P5019
  if2000_end4596:
    unless_null $P5020, vivi_20014597
    nqp_get_sc_object $P5021, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5020, $P5021
  vivi_20014597:
    unless_null $P5020, vivi_20024598
    die "Contextual $*GLOBALish not found"
    box $P5022, "Contextual $*GLOBALish not found"
    set $P5020, $P5022
  vivi_20024598:
    set $P5015, $P5020
  fallback4594:
    $P5023 = $P5002."load_module"($S5001, $P5015)
    set $P101, $P5023
    defined $I5004, $P101
    unless $I5004 goto if2003_end4600 
.annotate 'line', 1847
    exists $I5005, $P101["EXPORT"]
    set $I5008, $I5005
    unless $I5005 goto if2005_end4604 
    set fb_tmp_276, $P101
    repr_defined $I5007, fb_tmp_276
    unless $I5007 goto if2006_else4605 
    set $P5025, fb_tmp_276["EXPORT"]
    set $P5027, $P5025
    goto if2006_end4606
  if2006_else4605:
    null $P5026
    set $P5027, $P5026
  if2006_end4606:
    unless_null $P5027, vivi_20074607
    nqp_get_sc_object $P5028, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5027, $P5028
  vivi_20074607:
    get_who $P5024, $P5027
    exists $I5006, $P5024["DEFAULT"]
    set $I5008, $I5006
  if2005_end4604:
    unless $I5008 goto if2004_end4602 
.annotate 'line', 1848
    find_dynamic_lex $P5029, "$*W"
    unless_null $P5029, fallback4608
    nqp_get_sc_object $P5031, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5030, $P5031
    set fb_tmp_277, $P5030
    repr_defined $I5009, fb_tmp_277
    unless $I5009 goto if2008_else4609 
    set $P5032, fb_tmp_277["$W"]
    set $P5034, $P5032
    goto if2008_end4610
  if2008_else4609:
    null $P5033
    set $P5034, $P5033
  if2008_end4610:
    unless_null $P5034, vivi_20094611
    nqp_get_sc_object $P5035, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5034, $P5035
  vivi_20094611:
    unless_null $P5034, vivi_20104612
    die "Contextual $*W not found"
    box $P5036, "Contextual $*W not found"
    set $P5034, $P5036
  vivi_20104612:
    set $P5029, $P5034
  fallback4608:
    set fb_tmp_279, $P101
    repr_defined $I5011, fb_tmp_279
    unless $I5011 goto if2012_else4615 
    set $P5039, fb_tmp_279["EXPORT"]
    set $P5041, $P5039
    goto if2012_end4616
  if2012_else4615:
    null $P5040
    set $P5041, $P5040
  if2012_end4616:
    unless_null $P5041, vivi_20134617
    nqp_get_sc_object $P5042, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5041, $P5042
  vivi_20134617:
    get_who $P5038, $P5041
    set fb_tmp_278, $P5038
    repr_defined $I5010, fb_tmp_278
    unless $I5010 goto if2011_else4613 
    set $P5043, fb_tmp_278["DEFAULT"]
    set $P5045, $P5043
    goto if2011_end4614
  if2011_else4613:
    null $P5044
    set $P5045, $P5044
  if2011_end4614:
    unless_null $P5045, vivi_20144618
    nqp_get_sc_object $P5046, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5045, $P5046
  vivi_20144618:
    get_who $P5037, $P5045
    $P5047 = $P5029."import"($P5037)
  if2004_end4602:
.annotate 'line', 1851
    $P5048 = "&import_HOW_exports"($P101)
  if2003_end4600:
.annotate 'line', 1853
    nqp_get_sc_object $P5049, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 93
    $P5050 = $P5049."new"()
    $P5051 = _lex_param_1."!make"($P5050)
    .return ($P5051) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<if>" :subid("cuid_261_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1856
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5042 = 'cuid_456_1361734139.417' 
    capture_lex $P5042 
    .lex "$count", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_280 
    .local pmc fb_tmp_281 
    .local pmc fb_tmp_282 
    .local pmc fb_tmp_283 
    .local pmc fb_tmp_284 
    .local pmc fb_tmp_285 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
    unless_null _lex_param_1, fallback4621
    nqp_get_sc_object $P5003, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5003
  fallback4621:
    set fb_tmp_280, _lex_param_1
    repr_defined $I5001, fb_tmp_280
    unless $I5001 goto if2015_else4619 
    set $P5004, fb_tmp_280["xblock"]
    set $P5006, $P5004
    goto if2015_end4620
  if2015_else4619:
    null $P5005
    set $P5006, $P5005
  if2015_end4620:
    unless_null $P5006, vivi_20164622
    nqp_get_sc_object $P5007, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5006, $P5007
  vivi_20164622:
    set $N5002, $P5006
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5008, $N5001
    set $P101, $P5008
.annotate 'line', 1858
    unless_null _lex_param_1, fallback4627
    nqp_get_sc_object $P5009, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5009
  fallback4627:
    set fb_tmp_282, _lex_param_1
    repr_defined $I5003, fb_tmp_282
    unless $I5003 goto if2018_else4625 
    set $P5010, fb_tmp_282["xblock"]
    set $P5012, $P5010
    goto if2018_end4626
  if2018_else4625:
    null $P5011
    set $P5012, $P5011
  if2018_end4626:
    unless_null $P5012, vivi_20194628
    nqp_get_sc_object $P5013, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5012, $P5013
  vivi_20194628:
    set fb_tmp_281, $P5012
    repr_defined $I5002, fb_tmp_281
    unless $I5002 goto if2017_else4623 
    set $I5004, $P101
    set $P5014, fb_tmp_281[$I5004]
    set $P5016, $P5014
    goto if2017_end4624
  if2017_else4623:
    null $P5015
    set $P5016, $P5015
  if2017_end4624:
    unless_null $P5016, vivi_20204629
    nqp_get_sc_object $P5017, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5016, $P5017
  vivi_20204629:
    $P5018 = $P5016."ast"()
    $P5019 = "&xblock_immediate"($P5018)
    set $P102, $P5019
    unless_null _lex_param_1, fallback4634
    nqp_get_sc_object $P5020, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5020
  fallback4634:
    set fb_tmp_283, _lex_param_1
    repr_defined $I5005, fb_tmp_283
    unless $I5005 goto if2022_else4632 
    set $P5021, fb_tmp_283["else"]
    set $P5023, $P5021
    goto if2022_end4633
  if2022_else4632:
    null $P5022
    set $P5023, $P5022
  if2022_end4633:
    unless_null $P5023, vivi_20234635
    nqp_get_sc_object $P5024, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5023, $P5024
  vivi_20234635:
    unless $P5023 goto if2021_end4631 
.annotate 'line', 1859
.annotate 'line', 1860
    unless_null _lex_param_1, fallback4640
    nqp_get_sc_object $P5025, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5025
  fallback4640:
    set fb_tmp_285, _lex_param_1
    repr_defined $I5007, fb_tmp_285
    unless $I5007 goto if2025_else4638 
    set $P5026, fb_tmp_285["else"]
    set $P5028, $P5026
    goto if2025_end4639
  if2025_else4638:
    null $P5027
    set $P5028, $P5027
  if2025_end4639:
    unless_null $P5028, vivi_20264641
    nqp_get_sc_object $P5029, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5028, $P5029
  vivi_20264641:
    set fb_tmp_284, $P5028
    repr_defined $I5006, fb_tmp_284
    unless $I5006 goto if2024_else4636 
    set $P5030, fb_tmp_284[0]
    set $P5032, $P5030
    goto if2024_end4637
  if2024_else4636:
    null $P5031
    set $P5032, $P5031
  if2024_end4637:
    unless_null $P5032, vivi_20274642
    nqp_get_sc_object $P5033, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5032, $P5033
  vivi_20274642:
    $P5034 = $P5032."ast"()
    $P5035 = "&block_immediate"($P5034)
    $P5036 = $P102."push"($P5035)
  if2021_end4631:
  while2028_test4643:
    set $N5004, $P101
    set $N5005, 0
    isgt $I5008, $N5004, $N5005
    box $P5040, $I5008
    set $P5039, $P5040
    unless $I5008 goto while2028_done4647 
  while2028_redo4645:
    .const 'Sub' $P5037 = 'cuid_456_1361734139.417' 
    capture_lex $P5037
    $P5038 = $P5037()
    set $P5039, $P5038
    goto while2028_test4643 
  while2028_done4647:
.annotate 'line', 1869
    $P5041 = _lex_param_1."!make"($P102)
    .return ($P5041) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_456_1361734139.417") :anon :lex :outer("cuid_261_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1863
    .lex "$else", $P101 
    .local pmc tmp_1 
    .local pmc fb_tmp_286 
    .local pmc fb_tmp_287 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    find_lex $P5002, "$count"
    set tmp_1, $P5002
    set $N5002, tmp_1
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$count", $P5003
    find_lex $P5002, "$past"
    set $P101, $P5002
.annotate 'line', 1866
    find_lex $P5003, "$/"
    unless_null $P5003, fallback4652
    nqp_get_sc_object $P5004, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5003, $P5004
  fallback4652:
    set fb_tmp_287, $P5003
    repr_defined $I5002, fb_tmp_287
    unless $I5002 goto if2030_else4650 
    set $P5005, fb_tmp_287["xblock"]
    set $P5007, $P5005
    goto if2030_end4651
  if2030_else4650:
    null $P5006
    set $P5007, $P5006
  if2030_end4651:
    unless_null $P5007, vivi_20314653
    nqp_get_sc_object $P5008, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5007, $P5008
  vivi_20314653:
    set fb_tmp_286, $P5007
    repr_defined $I5001, fb_tmp_286
    unless $I5001 goto if2029_else4648 
    find_lex $P5010, "$count"
    set $I5003, $P5010
    set $P5009, fb_tmp_286[$I5003]
    set $P5012, $P5009
    goto if2029_end4649
  if2029_else4648:
    null $P5011
    set $P5012, $P5011
  if2029_end4649:
    unless_null $P5012, vivi_20324654
    nqp_get_sc_object $P5013, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5012, $P5013
  vivi_20324654:
    $P5014 = $P5012."ast"()
    $P5015 = "&xblock_immediate"($P5014)
    store_lex "$past", $P5015
.annotate 'line', 1867
    find_lex $P5016, "$past"
    $P5017 = $P5016."push"($P101)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<unless>" :subid("cuid_262_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1872
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_288 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
.annotate 'line', 1873
    unless_null _lex_param_1, fallback4657
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5002
  fallback4657:
    set fb_tmp_288, _lex_param_1
    repr_defined $I5001, fb_tmp_288
    unless $I5001 goto if2033_else4655 
    set $P5003, fb_tmp_288["xblock"]
    set $P5005, $P5003
    goto if2033_end4656
  if2033_else4655:
    null $P5004
    set $P5005, $P5004
  if2033_end4656:
    unless_null $P5005, vivi_20344658
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5005, $P5006
  vivi_20344658:
    $P5007 = $P5005."ast"()
    $P5008 = "&xblock_immediate"($P5007)
    set $P101, $P5008
.annotate 'line', 1874
    $P101."op"("unless")
.annotate 'line', 1875
    $P5009 = _lex_param_1."!make"($P101)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<while>" :subid("cuid_263_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1878
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_289 
    .local pmc fb_tmp_290 
    .local pmc fb_tmp_291 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
.annotate 'line', 1879
    unless_null _lex_param_1, fallback4661
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5002
  fallback4661:
    set fb_tmp_289, _lex_param_1
    repr_defined $I5001, fb_tmp_289
    unless $I5001 goto if2035_else4659 
    set $P5003, fb_tmp_289["xblock"]
    set $P5005, $P5003
    goto if2035_end4660
  if2035_else4659:
    null $P5004
    set $P5005, $P5004
  if2035_end4660:
    unless_null $P5005, vivi_20364662
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5005, $P5006
  vivi_20364662:
    $P5007 = $P5005."ast"()
    $P5008 = "&xblock_immediate"($P5007)
    set $P101, $P5008
.annotate 'line', 1880
    unless_null _lex_param_1, fallback4665
    nqp_get_sc_object $P5009, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5009
  fallback4665:
    set fb_tmp_290, _lex_param_1
    repr_defined $I5002, fb_tmp_290
    unless $I5002 goto if2037_else4663 
    set $P5010, fb_tmp_290["sym"]
    set $P5012, $P5010
    goto if2037_end4664
  if2037_else4663:
    null $P5011
    set $P5012, $P5011
  if2037_end4664:
    unless_null $P5012, vivi_20384666
    nqp_get_sc_object $P5013, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5012, $P5013
  vivi_20384666:
    set $S5001, $P5012
    $P101."op"($S5001)
    find_dynamic_lex $P5014, "$*CONTROL_USED"
    unless_null $P5014, fallback4669
    nqp_get_sc_object $P5016, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5015, $P5016
    set fb_tmp_291, $P5015
    repr_defined $I5003, fb_tmp_291
    unless $I5003 goto if2040_else4670 
    set $P5017, fb_tmp_291["$CONTROL_USED"]
    set $P5019, $P5017
    goto if2040_end4671
  if2040_else4670:
    null $P5018
    set $P5019, $P5018
  if2040_end4671:
    unless_null $P5019, vivi_20414672
    nqp_get_sc_object $P5020, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5019, $P5020
  vivi_20414672:
    unless_null $P5019, vivi_20424673
    die "Contextual $*CONTROL_USED not found"
    box $P5021, "Contextual $*CONTROL_USED not found"
    set $P5019, $P5021
  vivi_20424673:
    set $P5014, $P5019
  fallback4669:
    if $P5014 goto unless2039_end4668 
.annotate 'line', 1881
.annotate 'line', 1882
    nqp_get_sc_object $P5022, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 42
    $P5023 = $P5022."new"(1 :named("value"), "nohandler" :named("named"))
    $P5024 = $P101."push"($P5023)
  unless2039_end4668:
.annotate 'line', 1884
    $P5025 = _lex_param_1."!make"($P101)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<repeat>" :subid("cuid_264_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1887
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$op", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_292 
    .local pmc fb_tmp_293 
    .local pmc fb_tmp_294 
    .local pmc fb_tmp_295 
    .local pmc fb_tmp_296 
    .local pmc fb_tmp_297 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
    unless_null _lex_param_1, fallback4676
    nqp_get_sc_object $P5003, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5003
  fallback4676:
    set fb_tmp_292, _lex_param_1
    repr_defined $I5001, fb_tmp_292
    unless $I5001 goto if2043_else4674 
    set $P5004, fb_tmp_292["wu"]
    set $P5006, $P5004
    goto if2043_end4675
  if2043_else4674:
    null $P5005
    set $P5006, $P5005
  if2043_end4675:
    unless_null $P5006, vivi_20444677
    nqp_get_sc_object $P5007, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5006, $P5007
  vivi_20444677:
    set $S5002, $P5006
    concat $S5001, "repeat_", $S5002
    box $P5008, $S5001
    set $P101, $P5008
    unless_null _lex_param_1, fallback4682
    nqp_get_sc_object $P5009, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5009
  fallback4682:
    set fb_tmp_293, _lex_param_1
    repr_defined $I5002, fb_tmp_293
    unless $I5002 goto if2046_else4680 
    set $P5010, fb_tmp_293["xblock"]
    set $P5012, $P5010
    goto if2046_end4681
  if2046_else4680:
    null $P5011
    set $P5012, $P5011
  if2046_end4681:
    unless_null $P5012, vivi_20474683
    nqp_get_sc_object $P5013, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5012, $P5013
  vivi_20474683:
    unless $P5012 goto if2045_else4678 
.annotate 'line', 1890
.annotate 'line', 1891
    unless_null _lex_param_1, fallback4686
    nqp_get_sc_object $P5014, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5014
  fallback4686:
    set fb_tmp_294, _lex_param_1
    repr_defined $I5003, fb_tmp_294
    unless $I5003 goto if2048_else4684 
    set $P5015, fb_tmp_294["xblock"]
    set $P5017, $P5015
    goto if2048_end4685
  if2048_else4684:
    null $P5016
    set $P5017, $P5016
  if2048_end4685:
    unless_null $P5017, vivi_20494687
    nqp_get_sc_object $P5018, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5017, $P5018
  vivi_20494687:
    $P5019 = $P5017."ast"()
    $P5020 = "&xblock_immediate"($P5019)
    set $P102, $P5020
.annotate 'line', 1892
    $P5021 = $P102."op"($P101)
    goto if2045_end4679
  if2045_else4678:
.annotate 'line', 1894
.annotate 'line', 1895
    nqp_get_sc_object $P5022, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    unless_null _lex_param_1, fallback4690
    nqp_get_sc_object $P5023, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5023
  fallback4690:
    set fb_tmp_295, _lex_param_1
    repr_defined $I5004, fb_tmp_295
    unless $I5004 goto if2050_else4688 
    set $P5024, fb_tmp_295["EXPR"]
    set $P5026, $P5024
    goto if2050_end4689
  if2050_else4688:
    null $P5025
    set $P5026, $P5025
  if2050_end4689:
    unless_null $P5026, vivi_20514691
    nqp_get_sc_object $P5027, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5026, $P5027
  vivi_20514691:
    $P5028 = $P5026."ast"()
    unless_null _lex_param_1, fallback4694
    nqp_get_sc_object $P5029, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5029
  fallback4694:
    set fb_tmp_296, _lex_param_1
    repr_defined $I5005, fb_tmp_296
    unless $I5005 goto if2052_else4692 
    set $P5030, fb_tmp_296["pblock"]
    set $P5032, $P5030
    goto if2052_end4693
  if2052_else4692:
    null $P5031
    set $P5032, $P5031
  if2052_end4693:
    unless_null $P5032, vivi_20534695
    nqp_get_sc_object $P5033, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5032, $P5033
  vivi_20534695:
    $P5034 = $P5032."ast"()
    $P5035 = "&block_immediate"($P5034)
    $P5036 = $P5022."new"($P5028, $P5035, $P101 :named("op"), _lex_param_1 :named("node"))
    set $P102, $P5036
  if2045_end4679:
    find_dynamic_lex $P5037, "$*CONTROL_USED"
    unless_null $P5037, fallback4698
    nqp_get_sc_object $P5039, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5038, $P5039
    set fb_tmp_297, $P5038
    repr_defined $I5006, fb_tmp_297
    unless $I5006 goto if2055_else4699 
    set $P5040, fb_tmp_297["$CONTROL_USED"]
    set $P5042, $P5040
    goto if2055_end4700
  if2055_else4699:
    null $P5041
    set $P5042, $P5041
  if2055_end4700:
    unless_null $P5042, vivi_20564701
    nqp_get_sc_object $P5043, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5042, $P5043
  vivi_20564701:
    unless_null $P5042, vivi_20574702
    die "Contextual $*CONTROL_USED not found"
    box $P5044, "Contextual $*CONTROL_USED not found"
    set $P5042, $P5044
  vivi_20574702:
    set $P5037, $P5042
  fallback4698:
    if $P5037 goto unless2054_end4697 
.annotate 'line', 1898
.annotate 'line', 1899
    nqp_get_sc_object $P5045, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 42
    $P5046 = $P5045."new"(1 :named("value"), "nohandler" :named("named"))
    $P5047 = $P102."push"($P5046)
  unless2054_end4697:
.annotate 'line', 1901
    $P5048 = _lex_param_1."!make"($P102)
    .return ($P5048) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<for>" :subid("cuid_265_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1904
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "$block", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_298 
    .local pmc fb_tmp_299 
    .local pmc fb_tmp_300 
    .local pmc fb_tmp_301 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
.annotate 'line', 1905
    unless_null _lex_param_1, fallback4705
    nqp_get_sc_object $P5003, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5003
  fallback4705:
    set fb_tmp_298, _lex_param_1
    repr_defined $I5001, fb_tmp_298
    unless $I5001 goto if2058_else4703 
    set $P5004, fb_tmp_298["xblock"]
    set $P5006, $P5004
    goto if2058_end4704
  if2058_else4703:
    null $P5005
    set $P5006, $P5005
  if2058_end4704:
    unless_null $P5006, vivi_20594706
    nqp_get_sc_object $P5007, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5006, $P5007
  vivi_20594706:
    $P5008 = $P5006."ast"()
    set $P101, $P5008
.annotate 'line', 1906
    $P101."op"("for")
    set fb_tmp_299, $P101
    repr_defined $I5002, fb_tmp_299
    unless $I5002 goto if2060_else4707 
    set $P5009, fb_tmp_299[1]
    set $P5011, $P5009
    goto if2060_end4708
  if2060_else4707:
    null $P5010
    set $P5011, $P5010
  if2060_end4708:
    unless_null $P5011, vivi_20614709
    nqp_get_sc_object $P5012, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5011, $P5012
  vivi_20614709:
    set $P102, $P5011
.annotate 'line', 1908
    $P5013 = $P102."arity"()
    if $P5013 goto unless2062_end4711 
.annotate 'line', 1909
    set fb_tmp_300, $P102
    repr_defined $I5003, fb_tmp_300
    unless $I5003 goto if2063_else4712 
    set $P5014, fb_tmp_300[0]
    set $P5016, $P5014
    goto if2063_end4713
  if2063_else4712:
    null $P5015
    set $P5016, $P5015
  if2063_end4713:
    unless_null $P5016, vivi_20644714
    nqp_get_sc_object $P5017, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5016, $P5017
  vivi_20644714:
    nqp_get_sc_object $P5018, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5019 = $P5018."new"("$_" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    $P5016."push"($P5019)
.annotate 'line', 1910
    $P102."symbol"("$_", "lexical" :named("scope"))
.annotate 'line', 1911
    $P5020 = $P102."arity"(1)
  unless2062_end4711:
.annotate 'line', 1913
    $P102."blocktype"("immediate")
    find_dynamic_lex $P5021, "$*CONTROL_USED"
    unless_null $P5021, fallback4717
    nqp_get_sc_object $P5023, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5022, $P5023
    set fb_tmp_301, $P5022
    repr_defined $I5004, fb_tmp_301
    unless $I5004 goto if2066_else4718 
    set $P5024, fb_tmp_301["$CONTROL_USED"]
    set $P5026, $P5024
    goto if2066_end4719
  if2066_else4718:
    null $P5025
    set $P5026, $P5025
  if2066_end4719:
    unless_null $P5026, vivi_20674720
    nqp_get_sc_object $P5027, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5026, $P5027
  vivi_20674720:
    unless_null $P5026, vivi_20684721
    die "Contextual $*CONTROL_USED not found"
    box $P5028, "Contextual $*CONTROL_USED not found"
    set $P5026, $P5028
  vivi_20684721:
    set $P5021, $P5026
  fallback4717:
    if $P5021 goto unless2065_end4716 
.annotate 'line', 1914
.annotate 'line', 1915
    nqp_get_sc_object $P5029, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 42
    $P5030 = $P5029."new"(1 :named("value"), "nohandler" :named("named"))
    $P5031 = $P101."push"($P5030)
  unless2065_end4716:
.annotate 'line', 1917
    $P5032 = _lex_param_1."!make"($P101)
    .return ($P5032) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<CATCH>" :subid("cuid_266_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1920
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$block", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_302 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
.annotate 'line', 1921
    unless_null _lex_param_1, fallback4724
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5002
  fallback4724:
    set fb_tmp_302, _lex_param_1
    repr_defined $I5001, fb_tmp_302
    unless $I5001 goto if2069_else4722 
    set $P5003, fb_tmp_302["block"]
    set $P5005, $P5003
    goto if2069_end4723
  if2069_else4722:
    null $P5004
    set $P5005, $P5004
  if2069_end4723:
    unless_null $P5005, vivi_20704725
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5005, $P5006
  vivi_20704725:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 1922
    "&set_block_handler"(_lex_param_1, $P101, "CATCH")
.annotate 'line', 1923
    $P5008 = "&default_for"("$")
    $P5009 = _lex_param_1."!make"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<CONTROL>" :subid("cuid_267_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1926
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$block", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_303 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
.annotate 'line', 1927
    unless_null _lex_param_1, fallback4728
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5002
  fallback4728:
    set fb_tmp_303, _lex_param_1
    repr_defined $I5001, fb_tmp_303
    unless $I5001 goto if2071_else4726 
    set $P5003, fb_tmp_303["block"]
    set $P5005, $P5003
    goto if2071_end4727
  if2071_else4726:
    null $P5004
    set $P5005, $P5004
  if2071_end4727:
    unless_null $P5005, vivi_20724729
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5005, $P5006
  vivi_20724729:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 1928
    "&set_block_handler"(_lex_param_1, $P101, "CONTROL")
.annotate 'line', 1929
    $P5008 = "&default_for"("$")
    $P5009 = _lex_param_1."!make"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<BEGIN>" :subid("cuid_268_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1966
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_304 
    .local pmc fb_tmp_305 
.annotate 'line', 1967
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback4730
    nqp_get_sc_object $P5003, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5002, $P5003
    set fb_tmp_304, $P5002
    repr_defined $I5001, fb_tmp_304
    unless $I5001 goto if2073_else4731 
    set $P5004, fb_tmp_304["$W"]
    set $P5006, $P5004
    goto if2073_end4732
  if2073_else4731:
    null $P5005
    set $P5006, $P5005
  if2073_end4732:
    unless_null $P5006, vivi_20744733
    nqp_get_sc_object $P5007, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5006, $P5007
  vivi_20744733:
    unless_null $P5006, vivi_20754734
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_20754734:
    set $P5001, $P5006
  fallback4730:
    unless_null _lex_param_1, fallback4737
    nqp_get_sc_object $P5009, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5009
  fallback4737:
    set fb_tmp_305, _lex_param_1
    repr_defined $I5002, fb_tmp_305
    unless $I5002 goto if2076_else4735 
    set $P5010, fb_tmp_305["blorst"]
    set $P5012, $P5010
    goto if2076_end4736
  if2076_else4735:
    null $P5011
    set $P5012, $P5011
  if2076_end4736:
    unless_null $P5012, vivi_20774738
    nqp_get_sc_object $P5013, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5012, $P5013
  vivi_20774738:
    $P5014 = $P5012."ast"()
    $P5015 = $P5001."run_begin_block"($P5014)
    $P5016 = _lex_param_1."!make"($P5015)
    .return ($P5016) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<INIT>" :subid("cuid_269_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1970
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_306 
    .local pmc fb_tmp_307 
.annotate 'line', 1971
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback4739
    nqp_get_sc_object $P5003, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5002, $P5003
    set fb_tmp_306, $P5002
    repr_defined $I5001, fb_tmp_306
    unless $I5001 goto if2078_else4740 
    set $P5004, fb_tmp_306["$W"]
    set $P5006, $P5004
    goto if2078_end4741
  if2078_else4740:
    null $P5005
    set $P5006, $P5005
  if2078_end4741:
    unless_null $P5006, vivi_20794742
    nqp_get_sc_object $P5007, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5006, $P5007
  vivi_20794742:
    unless_null $P5006, vivi_20804743
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_20804743:
    set $P5001, $P5006
  fallback4739:
    $P5009 = $P5001."cur_lexpad"()
    unless_null _lex_param_1, fallback4746
    nqp_get_sc_object $P5010, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5010
  fallback4746:
    set fb_tmp_307, _lex_param_1
    repr_defined $I5002, fb_tmp_307
    unless $I5002 goto if2081_else4744 
    set $P5011, fb_tmp_307["blorst"]
    set $P5013, $P5011
    goto if2081_end4745
  if2081_else4744:
    null $P5012
    set $P5013, $P5012
  if2081_end4745:
    unless_null $P5013, vivi_20824747
    nqp_get_sc_object $P5014, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5013, $P5014
  vivi_20824747:
    $P5015 = $P5013."ast"()
    $P5009."push"($P5015)
.annotate 'line', 1972
    nqp_get_sc_object $P5016, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 93
    $P5017 = $P5016."new"()
    $P5018 = _lex_param_1."!make"($P5017)
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<try>" :subid("cuid_270_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1975
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_308 
    .local pmc fb_tmp_309 
    .local pmc fb_tmp_310 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_4748
    .lex "RETURN", $P102
.annotate 'line', 1976
    unless_null _lex_param_1, fallback4752
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5002
  fallback4752:
    set fb_tmp_308, _lex_param_1
    repr_defined $I5001, fb_tmp_308
    unless $I5001 goto if2083_else4750 
    set $P5003, fb_tmp_308["blorst"]
    set $P5005, $P5003
    goto if2083_end4751
  if2083_else4750:
    null $P5004
    set $P5005, $P5004
  if2083_end4751:
    unless_null $P5005, vivi_20844753
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5005, $P5006
  vivi_20844753:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
    nqp_get_sc_object $P5008, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 103
    type_check $I5002, $P101, $P5008
    unless $I5002 goto if2085_end4755 
.annotate 'line', 1977
    set fb_tmp_309, $P101
    repr_defined $I5003, fb_tmp_309
    unless $I5003 goto if2088_else4760 
    set $P5009, fb_tmp_309["handlers"]
    set $P5011, $P5009
    goto if2088_end4761
  if2088_else4760:
    null $P5010
    set $P5011, $P5010
  if2088_end4761:
    unless_null $P5011, vivi_20894762
    nqp_get_sc_object $P5012, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5011, $P5012
  vivi_20894762:
    set $P5017, $P5011
    unless $P5011 goto if2087_end4759 
    set fb_tmp_310, $P101
    repr_defined $I5005, fb_tmp_310
    unless $I5005 goto if2090_else4763 
    set $P5013, fb_tmp_310["handlers"]
    set $P5015, $P5013
    goto if2090_end4764
  if2090_else4763:
    null $P5014
    set $P5015, $P5014
  if2090_end4764:
    unless_null $P5015, vivi_20914765
    nqp_get_sc_object $P5016, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5015, $P5016
  vivi_20914765:
    exists $I5004, $P5015["CATCH"]
    box $P5018, $I5004
    set $P5017, $P5018
  if2087_end4759:
    unless $P5017 goto if2086_else4756 
.annotate 'line', 1978
.annotate 'line', 1979
    _lex_param_1."!make"($P101)
    find_lex $P5019, "RETURN"
    $P5020 = $P5019(1)
    set $P5022, $P5020
    goto if2086_end4757
  if2086_else4756:
.annotate 'line', 1982
.annotate 'line', 1983
    $P5021 = $P101."blocktype"("immediate")
    set $P5022, $P5021
  if2086_end4757:
  if2085_end4755:
.annotate 'line', 1986
    nqp_get_sc_object $P5023, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 1990
    nqp_get_sc_object $P5024, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 93
.annotate 'line', 1991
    nqp_get_sc_object $P5025, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 89
.annotate 'line', 1992
    nqp_get_sc_object $P5026, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 1994
    nqp_get_sc_object $P5027, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    $P5028 = $P5027."new"("exception" :named("op"))
.annotate 'line', 1995
    nqp_get_sc_object $P5029, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 52
    $P5030 = $P5029."new"("handled" :named("value"))
.annotate 'line', 1996
    nqp_get_sc_object $P5031, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 42
    $P5032 = $P5031."new"(1 :named("value"))
    $P5033 = $P5026."new"($P5028, $P5030, $P5032, "bindkey_i" :named("op"))
.annotate 'line', 1998
    nqp_get_sc_object $P5034, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    $P5035 = $P5034."new"("null" :named("op"))
    $P5036 = $P5025."new"($P5033 :named("parrot"), $P5035 :named("jvm"))
.annotate 'line', 2000
    $P5037 = "&default_for"("$")
    $P5038 = $P5024."new"($P5036, $P5037)
    $P5039 = $P5023."new"($P101, "CATCH", $P5038, "handle" :named("op"))
    $P5040 = _lex_param_1."!make"($P5039)
    goto lexotic_4749
  lexotic_4748:
    .get_results ($P5040)
  lexotic_4749:
    .return ($P5040) 
.end
.HLL "nqp"
.namespace []
.sub "blorst" :subid("cuid_271_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2004
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_311 
    .local pmc fb_tmp_312 
    .local pmc fb_tmp_313 
.annotate 'line', 2005
    unless_null _lex_param_1, fallback4770
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback4770:
    set fb_tmp_311, _lex_param_1
    repr_defined $I5001, fb_tmp_311
    unless $I5001 goto if2093_else4768 
    set $P5002, fb_tmp_311["block"]
    set $P5004, $P5002
    goto if2093_end4769
  if2093_else4768:
    null $P5003
    set $P5004, $P5003
  if2093_end4769:
    unless_null $P5004, vivi_20944771
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_20944771:
    unless $P5004 goto if2092_else4766 
.annotate 'line', 2006
    unless_null _lex_param_1, fallback4774
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5006
  fallback4774:
    set fb_tmp_312, _lex_param_1
    repr_defined $I5002, fb_tmp_312
    unless $I5002 goto if2095_else4772 
    set $P5007, fb_tmp_312["block"]
    set $P5009, $P5007
    goto if2095_end4773
  if2095_else4772:
    null $P5008
    set $P5009, $P5008
  if2095_end4773:
    unless_null $P5009, vivi_20964775
    nqp_get_sc_object $P5010, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5009, $P5010
  vivi_20964775:
    $P5011 = $P5009."ast"()
    $P5012 = "&block_immediate"($P5011)
    set $P5019, $P5012
    goto if2092_end4767
  if2092_else4766:
.annotate 'line', 2007
    unless_null _lex_param_1, fallback4778
    nqp_get_sc_object $P5013, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5013
  fallback4778:
    set fb_tmp_313, _lex_param_1
    repr_defined $I5003, fb_tmp_313
    unless $I5003 goto if2097_else4776 
    set $P5014, fb_tmp_313["statement"]
    set $P5016, $P5014
    goto if2097_end4777
  if2097_else4776:
    null $P5015
    set $P5016, $P5015
  if2097_end4777:
    unless_null $P5016, vivi_20984779
    nqp_get_sc_object $P5017, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5016, $P5017
  vivi_20984779:
    $P5018 = $P5016."ast"()
    set $P5019, $P5018
  if2092_end4767:
    $P5020 = _lex_param_1."!make"($P5019)
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond:sym<if>" :subid("cuid_272_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2012
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_314 
    unless_null _lex_param_1, fallback4782
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback4782:
    set fb_tmp_314, _lex_param_1
    repr_defined $I5001, fb_tmp_314
    unless $I5001 goto if2099_else4780 
    set $P5002, fb_tmp_314["cond"]
    set $P5004, $P5002
    goto if2099_end4781
  if2099_else4780:
    null $P5003
    set $P5004, $P5003
  if2099_end4781:
    unless_null $P5004, vivi_21004783
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_21004783:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond:sym<unless>" :subid("cuid_273_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2013
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_315 
    unless_null _lex_param_1, fallback4786
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback4786:
    set fb_tmp_315, _lex_param_1
    repr_defined $I5001, fb_tmp_315
    unless $I5001 goto if2101_else4784 
    set $P5002, fb_tmp_315["cond"]
    set $P5004, $P5002
    goto if2101_end4785
  if2101_else4784:
    null $P5003
    set $P5004, $P5003
  if2101_end4785:
    unless_null $P5004, vivi_21024787
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_21024787:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<while>" :subid("cuid_274_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2015
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_316 
    unless_null _lex_param_1, fallback4790
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback4790:
    set fb_tmp_316, _lex_param_1
    repr_defined $I5001, fb_tmp_316
    unless $I5001 goto if2103_else4788 
    set $P5002, fb_tmp_316["cond"]
    set $P5004, $P5002
    goto if2103_end4789
  if2103_else4788:
    null $P5003
    set $P5004, $P5003
  if2103_end4789:
    unless_null $P5004, vivi_21044791
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_21044791:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<until>" :subid("cuid_275_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2016
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_317 
    unless_null _lex_param_1, fallback4794
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback4794:
    set fb_tmp_317, _lex_param_1
    repr_defined $I5001, fb_tmp_317
    unless $I5001 goto if2105_else4792 
    set $P5002, fb_tmp_317["cond"]
    set $P5004, $P5002
    goto if2105_end4793
  if2105_else4792:
    null $P5003
    set $P5004, $P5003
  if2105_end4793:
    unless_null $P5004, vivi_21064795
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_21064795:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<fatarrow>" :subid("cuid_276_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2020
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_318 
    unless_null _lex_param_1, fallback4798
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback4798:
    set fb_tmp_318, _lex_param_1
    repr_defined $I5001, fb_tmp_318
    unless $I5001 goto if2107_else4796 
    set $P5002, fb_tmp_318["fatarrow"]
    set $P5004, $P5002
    goto if2107_end4797
  if2107_else4796:
    null $P5003
    set $P5004, $P5003
  if2107_end4797:
    unless_null $P5004, vivi_21084799
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_21084799:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<colonpair>" :subid("cuid_277_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2021
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_319 
    unless_null _lex_param_1, fallback4802
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback4802:
    set fb_tmp_319, _lex_param_1
    repr_defined $I5001, fb_tmp_319
    unless $I5001 goto if2109_else4800 
    set $P5002, fb_tmp_319["colonpair"]
    set $P5004, $P5002
    goto if2109_end4801
  if2109_else4800:
    null $P5003
    set $P5004, $P5003
  if2109_end4801:
    unless_null $P5004, vivi_21104803
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_21104803:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<variable>" :subid("cuid_278_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2022
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_320 
    unless_null _lex_param_1, fallback4806
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback4806:
    set fb_tmp_320, _lex_param_1
    repr_defined $I5001, fb_tmp_320
    unless $I5001 goto if2111_else4804 
    set $P5002, fb_tmp_320["variable"]
    set $P5004, $P5002
    goto if2111_end4805
  if2111_else4804:
    null $P5003
    set $P5004, $P5003
  if2111_end4805:
    unless_null $P5004, vivi_21124807
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_21124807:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<package_declarator>" :subid("cuid_279_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2023
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_321 
    unless_null _lex_param_1, fallback4810
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback4810:
    set fb_tmp_321, _lex_param_1
    repr_defined $I5001, fb_tmp_321
    unless $I5001 goto if2113_else4808 
    set $P5002, fb_tmp_321["package_declarator"]
    set $P5004, $P5002
    goto if2113_end4809
  if2113_else4808:
    null $P5003
    set $P5004, $P5003
  if2113_end4809:
    unless_null $P5004, vivi_21144811
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_21144811:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<scope_declarator>" :subid("cuid_280_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2024
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_322 
    unless_null _lex_param_1, fallback4814
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback4814:
    set fb_tmp_322, _lex_param_1
    repr_defined $I5001, fb_tmp_322
    unless $I5001 goto if2115_else4812 
    set $P5002, fb_tmp_322["scope_declarator"]
    set $P5004, $P5002
    goto if2115_end4813
  if2115_else4812:
    null $P5003
    set $P5004, $P5003
  if2115_end4813:
    unless_null $P5004, vivi_21164815
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_21164815:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<routine_declarator>" :subid("cuid_281_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2025
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_323 
    unless_null _lex_param_1, fallback4818
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback4818:
    set fb_tmp_323, _lex_param_1
    repr_defined $I5001, fb_tmp_323
    unless $I5001 goto if2117_else4816 
    set $P5002, fb_tmp_323["routine_declarator"]
    set $P5004, $P5002
    goto if2117_end4817
  if2117_else4816:
    null $P5003
    set $P5004, $P5003
  if2117_end4817:
    unless_null $P5004, vivi_21184819
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_21184819:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<regex_declarator>" :subid("cuid_282_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2026
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_324 
    unless_null _lex_param_1, fallback4822
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback4822:
    set fb_tmp_324, _lex_param_1
    repr_defined $I5001, fb_tmp_324
    unless $I5001 goto if2119_else4820 
    set $P5002, fb_tmp_324["regex_declarator"]
    set $P5004, $P5002
    goto if2119_end4821
  if2119_else4820:
    null $P5003
    set $P5004, $P5003
  if2119_end4821:
    unless_null $P5004, vivi_21204823
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_21204823:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<statement_prefix>" :subid("cuid_283_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2027
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_325 
    unless_null _lex_param_1, fallback4826
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback4826:
    set fb_tmp_325, _lex_param_1
    repr_defined $I5001, fb_tmp_325
    unless $I5001 goto if2121_else4824 
    set $P5002, fb_tmp_325["statement_prefix"]
    set $P5004, $P5002
    goto if2121_end4825
  if2121_else4824:
    null $P5003
    set $P5004, $P5003
  if2121_end4825:
    unless_null $P5004, vivi_21224827
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_21224827:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<lambda>" :subid("cuid_284_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2028
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_326 
.annotate 'line', 2029
    nqp_get_sc_object $P5001, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    unless_null _lex_param_1, fallback4830
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5002
  fallback4830:
    set fb_tmp_326, _lex_param_1
    repr_defined $I5001, fb_tmp_326
    unless $I5001 goto if2123_else4828 
    set $P5003, fb_tmp_326["pblock"]
    set $P5005, $P5003
    goto if2123_end4829
  if2123_else4828:
    null $P5004
    set $P5005, $P5004
  if2123_end4829:
    unless_null $P5005, vivi_21244831
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5005, $P5006
  vivi_21244831:
    $P5007 = $P5005."ast"()
    $P5008 = $P5001."new"($P5007, "takeclosure" :named("op"))
    $P5009 = _lex_param_1."!make"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "fatarrow" :subid("cuid_285_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2032
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_327 
    .local pmc fb_tmp_328 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
.annotate 'line', 2033
    unless_null _lex_param_1, fallback4834
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5002
  fallback4834:
    set fb_tmp_327, _lex_param_1
    repr_defined $I5001, fb_tmp_327
    unless $I5001 goto if2125_else4832 
    set $P5003, fb_tmp_327["val"]
    set $P5005, $P5003
    goto if2125_end4833
  if2125_else4832:
    null $P5004
    set $P5005, $P5004
  if2125_end4833:
    unless_null $P5005, vivi_21264835
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5005, $P5006
  vivi_21264835:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 2034
    unless_null _lex_param_1, fallback4838
    nqp_get_sc_object $P5008, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5008
  fallback4838:
    set fb_tmp_328, _lex_param_1
    repr_defined $I5002, fb_tmp_328
    unless $I5002 goto if2127_else4836 
    set $P5009, fb_tmp_328["key"]
    set $P5011, $P5009
    goto if2127_end4837
  if2127_else4836:
    null $P5010
    set $P5011, $P5010
  if2127_end4837:
    unless_null $P5011, vivi_21284839
    nqp_get_sc_object $P5012, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5011, $P5012
  vivi_21284839:
    $P5013 = $P5011."Str"()
    $P101."named"($P5013)
.annotate 'line', 2035
    $P5014 = _lex_param_1."!make"($P101)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "colonpair" :subid("cuid_286_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2038
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5031 = 'cuid_457_1361734139.417' 
    capture_lex $P5031 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_329 
    .local pmc fb_tmp_330 
    .local pmc fb_tmp_331 
    .local pmc fb_tmp_332 
    .local pmc fb_tmp_333 
    unless_null _lex_param_1, fallback4844
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback4844:
    set fb_tmp_329, _lex_param_1
    repr_defined $I5001, fb_tmp_329
    unless $I5001 goto if2130_else4842 
    set $P5002, fb_tmp_329["variable"]
    set $P5004, $P5002
    goto if2130_end4843
  if2130_else4842:
    null $P5003
    set $P5004, $P5003
  if2130_end4843:
    unless_null $P5004, vivi_21314845
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_21314845:
    unless $P5004 goto if2129_else4840 
.annotate 'line', 2039
.annotate 'line', 2040
    unless_null _lex_param_1, fallback4848
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5006
  fallback4848:
    set fb_tmp_330, _lex_param_1
    repr_defined $I5002, fb_tmp_330
    unless $I5002 goto if2132_else4846 
    set $P5007, fb_tmp_330["variable"]
    set $P5009, $P5007
    goto if2132_end4847
  if2132_else4846:
    null $P5008
    set $P5009, $P5008
  if2132_end4847:
    unless_null $P5009, vivi_21334849
    nqp_get_sc_object $P5010, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5009, $P5010
  vivi_21334849:
    $P5011 = $P5009."ast"()
    unless_null _lex_param_1, fallback4854
    nqp_get_sc_object $P5012, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5012
  fallback4854:
    set fb_tmp_332, _lex_param_1
    repr_defined $I5004, fb_tmp_332
    unless $I5004 goto if2135_else4852 
    set $P5013, fb_tmp_332["variable"]
    set $P5015, $P5013
    goto if2135_end4853
  if2135_else4852:
    null $P5014
    set $P5015, $P5014
  if2135_end4853:
    unless_null $P5015, vivi_21364855
    nqp_get_sc_object $P5016, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5015, $P5016
  vivi_21364855:
    set fb_tmp_331, $P5015
    repr_defined $I5003, fb_tmp_331
    unless $I5003 goto if2134_else4850 
    set $P5017, fb_tmp_331["desigilname"]
    set $P5019, $P5017
    goto if2134_end4851
  if2134_else4850:
    null $P5018
    set $P5019, $P5018
  if2134_end4851:
    unless_null $P5019, vivi_21374856
    nqp_get_sc_object $P5020, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5019, $P5020
  vivi_21374856:
    set $S5001, $P5019
    $P5011."named"($S5001)
.annotate 'line', 2041
    unless_null _lex_param_1, fallback4859
    nqp_get_sc_object $P5021, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5021
  fallback4859:
    set fb_tmp_333, _lex_param_1
    repr_defined $I5005, fb_tmp_333
    unless $I5005 goto if2138_else4857 
    set $P5022, fb_tmp_333["variable"]
    set $P5024, $P5022
    goto if2138_end4858
  if2138_else4857:
    null $P5023
    set $P5024, $P5023
  if2138_end4858:
    unless_null $P5024, vivi_21394860
    nqp_get_sc_object $P5025, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5024, $P5025
  vivi_21394860:
    $P5026 = $P5024."ast"()
    $P5027 = _lex_param_1."!make"($P5026)
    set $P5030, $P5027
    goto if2129_end4841
  if2129_else4840:
    .const 'Sub' $P5028 = 'cuid_457_1361734139.417' 
    capture_lex $P5028
    $P5029 = $P5028()
    set $P5030, $P5029
  if2129_end4841:
    .return ($P5030) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_457_1361734139.417") :anon :lex :outer("cuid_286_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2042
    .lex "$past", $P101 
    .local pmc fb_tmp_334 
    .local pmc fb_tmp_335 
    .local pmc fb_tmp_336 
    .local pmc fb_tmp_337 
    .local pmc fb_tmp_338 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    find_lex $P5002, "$/"
    unless_null $P5002, fallback4865
    nqp_get_sc_object $P5003, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5002, $P5003
  fallback4865:
    set fb_tmp_334, $P5002
    repr_defined $I5001, fb_tmp_334
    unless $I5001 goto if2141_else4863 
    set $P5004, fb_tmp_334["circumfix"]
    set $P5006, $P5004
    goto if2141_end4864
  if2141_else4863:
    null $P5005
    set $P5006, $P5005
  if2141_end4864:
    unless_null $P5006, vivi_21424866
    nqp_get_sc_object $P5007, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5006, $P5007
  vivi_21424866:
    unless $P5006 goto if2140_else4861 
.annotate 'line', 2044
    find_lex $P5008, "$/"
    unless_null $P5008, fallback4871
    nqp_get_sc_object $P5009, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5008, $P5009
  fallback4871:
    set fb_tmp_336, $P5008
    repr_defined $I5003, fb_tmp_336
    unless $I5003 goto if2144_else4869 
    set $P5010, fb_tmp_336["circumfix"]
    set $P5012, $P5010
    goto if2144_end4870
  if2144_else4869:
    null $P5011
    set $P5012, $P5011
  if2144_end4870:
    unless_null $P5012, vivi_21454872
    nqp_get_sc_object $P5013, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5012, $P5013
  vivi_21454872:
    set fb_tmp_335, $P5012
    repr_defined $I5002, fb_tmp_335
    unless $I5002 goto if2143_else4867 
    set $P5014, fb_tmp_335[0]
    set $P5016, $P5014
    goto if2143_end4868
  if2143_else4867:
    null $P5015
    set $P5016, $P5015
  if2143_end4868:
    unless_null $P5016, vivi_21464873
    nqp_get_sc_object $P5017, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5016, $P5017
  vivi_21464873:
    $P5018 = $P5016."ast"()
    set $P5027, $P5018
    goto if2140_end4862
  if2140_else4861:
.annotate 'line', 2045
    nqp_get_sc_object $P5019, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 42
    find_lex $P5020, "$/"
    unless_null $P5020, fallback4876
    nqp_get_sc_object $P5021, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5020, $P5021
  fallback4876:
    set fb_tmp_337, $P5020
    repr_defined $I5005, fb_tmp_337
    unless $I5005 goto if2147_else4874 
    set $P5022, fb_tmp_337["not"]
    set $P5024, $P5022
    goto if2147_end4875
  if2147_else4874:
    null $P5023
    set $P5024, $P5023
  if2147_end4875:
    unless_null $P5024, vivi_21484877
    nqp_get_sc_object $P5025, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5024, $P5025
  vivi_21484877:
    isfalse $I5004, $P5024
    $P5026 = $P5019."new"($I5004 :named("value"))
    set $P5027, $P5026
  if2140_end4862:
    set $P101, $P5027
.annotate 'line', 2046
    find_lex $P5028, "$/"
    unless_null $P5028, fallback4880
    nqp_get_sc_object $P5029, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5028, $P5029
  fallback4880:
    set fb_tmp_338, $P5028
    repr_defined $I5006, fb_tmp_338
    unless $I5006 goto if2149_else4878 
    set $P5030, fb_tmp_338["identifier"]
    set $P5032, $P5030
    goto if2149_end4879
  if2149_else4878:
    null $P5031
    set $P5032, $P5031
  if2149_end4879:
    unless_null $P5032, vivi_21504881
    nqp_get_sc_object $P5033, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5032, $P5033
  vivi_21504881:
    set $S5001, $P5032
    $P101."named"($S5001)
.annotate 'line', 2047
    find_dynamic_lex $P5034, "$/"
    $P5035 = $P5034."!make"($P101)
    .return ($P5035) 
.end
.HLL "nqp"
.namespace []
.sub "variable" :subid("cuid_287_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2051
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5020 = 'cuid_459_1361734139.417' 
    capture_lex $P5020 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_339 
    .local pmc fb_tmp_340 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    unless_null _lex_param_1, fallback4886
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5002
  fallback4886:
    set fb_tmp_339, _lex_param_1
    repr_defined $I5001, fb_tmp_339
    unless $I5001 goto if2152_else4884 
    set $P5003, fb_tmp_339["postcircumfix"]
    set $P5005, $P5003
    goto if2152_end4885
  if2152_else4884:
    null $P5004
    set $P5005, $P5004
  if2152_end4885:
    unless_null $P5005, vivi_21534887
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5005, $P5006
  vivi_21534887:
    unless $P5005 goto if2151_else4882 
.annotate 'line', 2053
.annotate 'line', 2054
    unless_null _lex_param_1, fallback4890
    nqp_get_sc_object $P5007, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5007
  fallback4890:
    set fb_tmp_340, _lex_param_1
    repr_defined $I5002, fb_tmp_340
    unless $I5002 goto if2154_else4888 
    set $P5008, fb_tmp_340["postcircumfix"]
    set $P5010, $P5008
    goto if2154_end4889
  if2154_else4888:
    null $P5009
    set $P5010, $P5009
  if2154_end4889:
    unless_null $P5010, vivi_21554891
    nqp_get_sc_object $P5011, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5010, $P5011
  vivi_21554891:
    $P5012 = $P5010."ast"()
    set $P101, $P5012
.annotate 'line', 2055
    nqp_get_sc_object $P5013, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 80
.annotate 'line', 2056
    $P5014 = "&default_for"("$")
    $P5015 = $P5013."new"("$/" :named("name"), "lexical" :named("scope"), $P5014 :named("fallback"))
    $P5016 = $P101."unshift"($P5015)
    goto if2151_end4883
  if2151_else4882:
    .const 'Sub' $P5017 = 'cuid_459_1361734139.417' 
    capture_lex $P5017
    $P5018 = $P5017()
  if2151_end4883:
.annotate 'line', 2137
    $P5019 = _lex_param_1."!make"($P101)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_459_1361734139.417") :anon :lex :outer("cuid_287_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2059
    .const 'Sub' $P5089 = 'cuid_458_1361734139.417' 
    capture_lex $P5089 
    .const 'Sub' $P5089 = 'cuid_462_1361734139.417' 
    capture_lex $P5089 
    .const 'Sub' $P5089 = 'cuid_463_1361734139.417' 
    capture_lex $P5089 
    .const 'Sub' $P5089 = 'cuid_464_1361734139.417' 
    capture_lex $P5089 
    .lex "@name", $P101 
    .local pmc fb_tmp_341 
    .local pmc pkg_lookup_tmp_4 
    .local pmc fb_tmp_342 
    .local pmc fb_tmp_343 
    .local pmc fb_tmp_344 
    .local pmc fb_tmp_347 
    .local pmc fb_tmp_348 
    .local pmc fb_tmp_355 
    .local pmc fb_tmp_359 
    .local pmc fb_tmp_360 
    .local pmc fb_tmp_361 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
.annotate 'line', 2060
    nqp_get_sc_object $P5003, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    set pkg_lookup_tmp_4, $P5003
    get_who $P5004, pkg_lookup_tmp_4
    exists $I5002, $P5004["NQP"]
    unless $I5002 goto if2157_else4894 
    get_who $P5006, pkg_lookup_tmp_4
    set $P5005, $P5006["NQP"]
    set $P5008, $P5005
    goto if2157_end4895
  if2157_else4894:
    nqp_get_sc_object $P5007, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5008, $P5007
  if2157_end4895:
    get_who $P5002, $P5008
    set fb_tmp_341, $P5002
    repr_defined $I5001, fb_tmp_341
    unless $I5001 goto if2156_else4892 
    set $P5009, fb_tmp_341["Compiler"]
    set $P5011, $P5009
    goto if2156_end4893
  if2156_else4892:
    null $P5010
    set $P5011, $P5010
  if2156_end4893:
    unless_null $P5011, vivi_21584896
    nqp_get_sc_object $P5012, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5011, $P5012
  vivi_21584896:
    find_lex $P5013, "$/"
    set $S5001, $P5013
    $P5014 = $P5011."parse_name"($S5001)
    set $P101, $P5014
    set $N5001, $P101
    set $N5002, 1
    isgt $I5003, $N5001, $N5002
    unless $I5003 goto if2159_else4897 
.annotate 'line', 2061
    find_lex $P5015, "$/"
    unless_null $P5015, fallback4903
    nqp_get_sc_object $P5016, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5015, $P5016
  fallback4903:
    set fb_tmp_342, $P5015
    repr_defined $I5004, fb_tmp_342
    unless $I5004 goto if2161_else4901 
    set $P5017, fb_tmp_342["twigil"]
    set $P5019, $P5017
    goto if2161_end4902
  if2161_else4901:
    null $P5018
    set $P5019, $P5018
  if2161_end4902:
    unless_null $P5019, vivi_21624904
    nqp_get_sc_object $P5020, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5019, $P5020
  vivi_21624904:
    unless $P5019 goto if2160_end4900 
.annotate 'line', 2062
.annotate 'line', 2063
    find_lex $P5021, "$/"
    $P5022 = $P5021."CURSOR"()
    $P5023 = $P5022."panic"("Twigil not allowed on multi-part name")
  if2160_end4900:
.annotate 'line', 2065
    find_lex $P5024, "$/"
    $P5025 = "&lexical_package_lookup"($P101, $P5024)
    store_lex "$past", $P5025
    set $P5088, $P5025
    goto if2159_end4898
  if2159_else4897:
    find_lex $P5026, "$/"
    unless_null $P5026, fallback4911
    nqp_get_sc_object $P5027, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5026, $P5027
  fallback4911:
    set fb_tmp_344, $P5026
    repr_defined $I5007, fb_tmp_344
    unless $I5007 goto if2165_else4909 
    set $P5028, fb_tmp_344["twigil"]
    set $P5030, $P5028
    goto if2165_end4910
  if2165_else4909:
    null $P5029
    set $P5030, $P5029
  if2165_end4910:
    unless_null $P5030, vivi_21664912
    nqp_get_sc_object $P5031, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5030, $P5031
  vivi_21664912:
    set fb_tmp_343, $P5030
    repr_defined $I5006, fb_tmp_343
    unless $I5006 goto if2164_else4907 
    set $P5032, fb_tmp_343[0]
    set $P5034, $P5032
    goto if2164_end4908
  if2164_else4907:
    null $P5033
    set $P5034, $P5033
  if2164_end4908:
    unless_null $P5034, vivi_21674913
    nqp_get_sc_object $P5035, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5034, $P5035
  vivi_21674913:
    set $S5002, $P5034
    iseq $I5005, $S5002, "*"
    unless $I5005 goto if2163_else4905 
    .const 'Sub' $P5036 = 'cuid_458_1361734139.417' 
    capture_lex $P5036
    $P5037 = $P5036()
    set $P5087, $P5037
    goto if2163_end4906
  if2163_else4905:
    find_lex $P5038, "$/"
    unless_null $P5038, fallback4928
    nqp_get_sc_object $P5039, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5038, $P5039
  fallback4928:
    set fb_tmp_348, $P5038
    repr_defined $I5010, fb_tmp_348
    unless $I5010 goto if2174_else4926 
    set $P5040, fb_tmp_348["twigil"]
    set $P5042, $P5040
    goto if2174_end4927
  if2174_else4926:
    null $P5041
    set $P5042, $P5041
  if2174_end4927:
    unless_null $P5042, vivi_21754929
    nqp_get_sc_object $P5043, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5042, $P5043
  vivi_21754929:
    set fb_tmp_347, $P5042
    repr_defined $I5009, fb_tmp_347
    unless $I5009 goto if2173_else4924 
    set $P5044, fb_tmp_347[0]
    set $P5046, $P5044
    goto if2173_end4925
  if2173_else4924:
    null $P5045
    set $P5046, $P5045
  if2173_end4925:
    unless_null $P5046, vivi_21764930
    nqp_get_sc_object $P5047, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5046, $P5047
  vivi_21764930:
    set $S5003, $P5046
    iseq $I5008, $S5003, "!"
    unless $I5008 goto if2172_else4922 
    .const 'Sub' $P5048 = 'cuid_462_1361734139.417' 
    capture_lex $P5048
    $P5049 = $P5048()
    set $P5086, $P5049
    goto if2172_end4923
  if2172_else4922:
    find_lex $P5050, "$/"
    unless_null $P5050, fallback4979
    nqp_get_sc_object $P5051, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5050, $P5051
  fallback4979:
    set fb_tmp_355, $P5050
    repr_defined $I5011, fb_tmp_355
    unless $I5011 goto if2201_else4977 
    set $P5052, fb_tmp_355["semilist"]
    set $P5054, $P5052
    goto if2201_end4978
  if2201_else4977:
    null $P5053
    set $P5054, $P5053
  if2201_end4978:
    unless_null $P5054, vivi_22024980
    nqp_get_sc_object $P5055, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5054, $P5055
  vivi_22024980:
    unless $P5054 goto if2200_else4975 
    .const 'Sub' $P5056 = 'cuid_463_1361734139.417' 
    capture_lex $P5056
    $P5057 = $P5056()
    set $P5085, $P5057
    goto if2200_end4976
  if2200_else4975:
.annotate 'line', 2122
    find_dynamic_lex $P5058, "$*W"
    unless_null $P5058, fallback4999
    nqp_get_sc_object $P5060, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5059, $P5060
    set fb_tmp_359, $P5059
    repr_defined $I5012, fb_tmp_359
    unless $I5012 goto if2212_else5000 
    set $P5061, fb_tmp_359["$W"]
    set $P5063, $P5061
    goto if2212_end5001
  if2212_else5000:
    null $P5062
    set $P5063, $P5062
  if2212_end5001:
    unless_null $P5063, vivi_22135002
    nqp_get_sc_object $P5064, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5063, $P5064
  vivi_22135002:
    unless_null $P5063, vivi_22145003
    die "Contextual $*W not found"
    box $P5065, "Contextual $*W not found"
    set $P5063, $P5065
  vivi_22145003:
    set $P5058, $P5063
  fallback4999:
    set fb_tmp_360, $P101
    repr_defined $I5013, fb_tmp_360
    unless $I5013 goto if2215_else5004 
    set $P5066, fb_tmp_360[0]
    set $P5068, $P5066
    goto if2215_end5005
  if2215_else5004:
    null $P5067
    set $P5068, $P5067
  if2215_end5005:
    unless_null $P5068, vivi_22165006
    nqp_get_sc_object $P5069, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5068, $P5069
  vivi_22165006:
    set $S5004, $P5068
    $P5070 = $P5058."is_package"($S5004)
    unless $P5070 goto if2211_else4997 
.annotate 'line', 2123
    find_lex $P5071, "$/"
    $P5072 = "&lexical_package_lookup"($P101, $P5071)
    store_lex "$past", $P5072
.annotate 'line', 2124
    find_lex $P5073, "$past"
    find_lex $P5074, "$/"
    unless_null $P5074, fallback5009
    nqp_get_sc_object $P5075, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5074, $P5075
  fallback5009:
    set fb_tmp_361, $P5074
    repr_defined $I5014, fb_tmp_361
    unless $I5014 goto if2217_else5007 
    set $P5076, fb_tmp_361["sigil"]
    set $P5078, $P5076
    goto if2217_end5008
  if2217_else5007:
    null $P5077
    set $P5078, $P5077
  if2217_end5008:
    unless_null $P5078, vivi_22185010
    nqp_get_sc_object $P5079, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5078, $P5079
  vivi_22185010:
    $P5080 = "&default_for"($P5078)
    $P5081 = $P5073."fallback"($P5080)
    set $P5084, $P5081
    goto if2211_end4998
  if2211_else4997:
    .const 'Sub' $P5082 = 'cuid_464_1361734139.417' 
    capture_lex $P5082
    $P5083 = $P5082()
    set $P5084, $P5083
  if2211_end4998:
    set $P5085, $P5084
  if2200_end4976:
    set $P5086, $P5085
  if2172_end4923:
    set $P5087, $P5086
  if2163_end4906:
    set $P5088, $P5087
  if2159_end4898:
    .return ($P5088) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_458_1361734139.417") :anon :lex :outer("cuid_459_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2067
    .lex "$global_fallback", $P101 
    .local pmc fb_tmp_345 
    .local pmc fb_tmp_346 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
.annotate 'line', 2068
    nqp_get_sc_object $P5002, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 2070
    new $P5003, 'ResizablePMCArray'
    box $P5004, "GLOBAL"
    push $P5003, $P5004
    find_lex $P5005, "$/"
    unless_null $P5005, fallback4916
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5005, $P5006
  fallback4916:
    set fb_tmp_345, $P5005
    repr_defined $I5001, fb_tmp_345
    unless $I5001 goto if2168_else4914 
    set $P5007, fb_tmp_345["sigil"]
    set $P5009, $P5007
    goto if2168_end4915
  if2168_else4914:
    null $P5008
    set $P5009, $P5008
  if2168_end4915:
    unless_null $P5009, vivi_21694917
    nqp_get_sc_object $P5010, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5009, $P5010
  vivi_21694917:
    set $S5002, $P5009
    find_lex $P5011, "$/"
    unless_null $P5011, fallback4920
    nqp_get_sc_object $P5012, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5011, $P5012
  fallback4920:
    set fb_tmp_346, $P5011
    repr_defined $I5002, fb_tmp_346
    unless $I5002 goto if2170_else4918 
    set $P5013, fb_tmp_346["desigilname"]
    set $P5015, $P5013
    goto if2170_end4919
  if2170_else4918:
    null $P5014
    set $P5015, $P5014
  if2170_end4919:
    unless_null $P5015, vivi_21714921
    nqp_get_sc_object $P5016, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5015, $P5016
  vivi_21714921:
    set $S5003, $P5015
    concat $S5001, $S5002, $S5003
    box $P5017, $S5001
    push $P5003, $P5017
    find_lex $P5018, "$/"
    $P5019 = "&lexical_package_lookup"($P5003, $P5018)
.annotate 'line', 2071
    nqp_get_sc_object $P5020, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 2073
    nqp_get_sc_object $P5021, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 52
    find_lex $P5022, "$/"
    set $S5006, $P5022
    concat $S5005, "Contextual ", $S5006
    concat $S5004, $S5005, " not found"
    $P5023 = $P5021."new"($S5004 :named("value"))
    $P5024 = $P5020."new"($P5023, "die_s" :named("op"))
    $P5025 = $P5002."new"($P5019, $P5024, "ifnull" :named("op"))
    set $P101, $P5025
.annotate 'line', 2075
    nqp_get_sc_object $P5026, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 80
.annotate 'line', 2076
    find_lex $P5027, "@name"
    $P5028 = $P5027."pop"()
    set $S5007, $P5028
    $P5029 = $P5026."new"($S5007 :named("name"), "contextual" :named("scope"), $P101 :named("fallback"))
    store_lex "$past", $P5029
    .return ($P5029) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_462_1361734139.417") :anon :lex :outer("cuid_459_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2080
    .const 'Sub' $P5052 = 'cuid_461_1361734139.417' 
    capture_lex $P5052 
    .lex "$name", $P101 
    .lex "$ch", $P102 
    .local pmc fb_tmp_349 
    .local pmc fb_tmp_350 
    .local pmc fb_tmp_351 
    .local pmc fb_tmp_352 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
.annotate 'line', 2081
    find_lex $P5003, "@name"
    $P5004 = $P5003."pop"()
    set $S5001, $P5004
    box $P5005, $S5001
    set $P101, $P5005
    find_dynamic_lex $P5006, "$*PKGDECL"
    unless_null $P5006, fallback4933
    nqp_get_sc_object $P5008, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5007, $P5008
    set fb_tmp_349, $P5007
    repr_defined $I5002, fb_tmp_349
    unless $I5002 goto if2178_else4934 
    set $P5009, fb_tmp_349["$PKGDECL"]
    set $P5011, $P5009
    goto if2178_end4935
  if2178_else4934:
    null $P5010
    set $P5011, $P5010
  if2178_end4935:
    unless_null $P5011, vivi_21794936
    nqp_get_sc_object $P5012, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5011, $P5012
  vivi_21794936:
    unless_null $P5011, vivi_21804937
    die "Contextual $*PKGDECL not found"
    box $P5013, "Contextual $*PKGDECL not found"
    set $P5011, $P5013
  vivi_21804937:
    set $P5006, $P5011
  fallback4933:
    set $S5002, $P5006
    iseq $I5001, $S5002, "role"
    unless $I5001 goto if2177_else4931 
.annotate 'line', 2083
.annotate 'line', 2084
    nqp_get_sc_object $P5014, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5015 = $P5014."new"("$?CLASS" :named("name"), "lexical" :named("scope"))
    set $P102, $P5015
.annotate 'line', 2085
    find_dynamic_lex $P5016, "$*PACKAGE"
    unless_null $P5016, fallback4938
    nqp_get_sc_object $P5018, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5017, $P5018
    set fb_tmp_350, $P5017
    repr_defined $I5003, fb_tmp_350
    unless $I5003 goto if2181_else4939 
    set $P5019, fb_tmp_350["$PACKAGE"]
    set $P5021, $P5019
    goto if2181_end4940
  if2181_else4939:
    null $P5020
    set $P5021, $P5020
  if2181_end4940:
    unless_null $P5021, vivi_21824941
    nqp_get_sc_object $P5022, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5021, $P5022
  vivi_21824941:
    unless_null $P5021, vivi_21834942
    die "Contextual $*PACKAGE not found"
    box $P5023, "Contextual $*PACKAGE not found"
    set $P5021, $P5023
  vivi_21834942:
    set $P5016, $P5021
  fallback4938:
    $P5024 = $P102."set_compile_time_value"($P5016)
    goto if2177_end4932
  if2177_else4931:
.annotate 'line', 2087
.annotate 'line', 2088
    nqp_get_sc_object $P5025, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 61
    find_dynamic_lex $P5026, "$*PACKAGE"
    unless_null $P5026, fallback4943
    nqp_get_sc_object $P5028, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5027, $P5028
    set fb_tmp_351, $P5027
    repr_defined $I5004, fb_tmp_351
    unless $I5004 goto if2184_else4944 
    set $P5029, fb_tmp_351["$PACKAGE"]
    set $P5031, $P5029
    goto if2184_end4945
  if2184_else4944:
    null $P5030
    set $P5031, $P5030
  if2184_end4945:
    unless_null $P5031, vivi_21854946
    nqp_get_sc_object $P5032, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5031, $P5032
  vivi_21854946:
    unless_null $P5031, vivi_21864947
    die "Contextual $*PACKAGE not found"
    box $P5033, "Contextual $*PACKAGE not found"
    set $P5031, $P5033
  vivi_21864947:
    set $P5026, $P5031
  fallback4943:
    $P5034 = $P5025."new"($P5026 :named("value"))
    set $P102, $P5034
  if2177_end4932:
.annotate 'line', 2090
    nqp_get_sc_object $P5035, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
.annotate 'line', 2092
    nqp_get_sc_object $P5036, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 2093
    nqp_get_sc_object $P5037, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5038 = $P5037."new"("self" :named("name"), "lexical" :named("scope"))
    $P5039 = $P5036."new"($P5038, "decont" :named("op"))
    $P5040 = $P5035."new"($P5039, $P102, $P101 :named("name"), "attribute" :named("scope"))
    store_lex "$past", $P5040
    find_dynamic_lex $P5041, "$*IN_DECL"
    unless_null $P5041, fallback4950
    nqp_get_sc_object $P5043, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5042, $P5043
    set fb_tmp_352, $P5042
    repr_defined $I5005, fb_tmp_352
    unless $I5005 goto if2188_else4951 
    set $P5044, fb_tmp_352["$IN_DECL"]
    set $P5046, $P5044
    goto if2188_end4952
  if2188_else4951:
    null $P5045
    set $P5046, $P5045
  if2188_end4952:
    unless_null $P5046, vivi_21894953
    nqp_get_sc_object $P5047, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5046, $P5047
  vivi_21894953:
    unless_null $P5046, vivi_21904954
    die "Contextual $*IN_DECL not found"
    box $P5048, "Contextual $*IN_DECL not found"
    set $P5046, $P5048
  vivi_21904954:
    set $P5041, $P5046
  fallback4950:
    set $P5051, $P5041
    if $P5041 goto unless2187_end4949 
    .const 'Sub' $P5049 = 'cuid_461_1361734139.417' 
    capture_lex $P5049
    $P5050 = $P5049()
    set $P5051, $P5050
  unless2187_end4949:
    .return ($P5051) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_461_1361734139.417") :anon :lex :outer("cuid_462_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2098
    .const 'Sub' $P5036 = 'cuid_460_1361734139.417' 
    capture_lex $P5036 
    .lex "$attr", $P101 
    .local pmc fb_tmp_353 
    .local pmc fb_tmp_354 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
.annotate 'line', 2100
    find_dynamic_lex $P5006, "$*PACKAGE"
    unless_null $P5006, fallback4955
    nqp_get_sc_object $P5008, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5007, $P5008
    set fb_tmp_353, $P5007
    repr_defined $I5001, fb_tmp_353
    unless $I5001 goto if2191_else4956 
    set $P5009, fb_tmp_353["$PACKAGE"]
    set $P5011, $P5009
    goto if2191_end4957
  if2191_else4956:
    null $P5010
    set $P5011, $P5010
  if2191_end4957:
    unless_null $P5011, vivi_21924958
    nqp_get_sc_object $P5012, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5011, $P5012
  vivi_21924958:
    unless_null $P5011, vivi_21934959
    die "Contextual $*PACKAGE not found"
    box $P5013, "Contextual $*PACKAGE not found"
    set $P5011, $P5013
  vivi_21934959:
    set $P5006, $P5011
  fallback4955:
    get_how $P5005, $P5006
    find_dynamic_lex $P5014, "$*PACKAGE"
    unless_null $P5014, fallback4960
    nqp_get_sc_object $P5016, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5015, $P5016
    set fb_tmp_354, $P5015
    repr_defined $I5002, fb_tmp_354
    unless $I5002 goto if2194_else4961 
    set $P5017, fb_tmp_354["$PACKAGE"]
    set $P5019, $P5017
    goto if2194_end4962
  if2194_else4961:
    null $P5018
    set $P5019, $P5018
  if2194_end4962:
    unless_null $P5019, vivi_21954963
    nqp_get_sc_object $P5020, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5019, $P5020
  vivi_21954963:
    unless_null $P5019, vivi_21964964
    die "Contextual $*PACKAGE not found"
    box $P5021, "Contextual $*PACKAGE not found"
    set $P5019, $P5021
  vivi_21964964:
    set $P5014, $P5019
  fallback4960:
    $P5022 = $P5005."attributes"($P5014, 1 :named("local"))
    set $P5002, $P5022
    iter $P5004, $P5022
    new $P5024, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5024, for_handlers4967
    push_eh $P5024
  for_next4968:
    unless $P5004, for_done4970
    shift $P5025, $P5004
  for_redo4969:
    .const 'Sub' $P5023 = 'cuid_460_1361734139.417' 
    capture_lex $P5023
    $P5002 = $P5023($P5025)
    goto for_next4968
  for_handlers4967:
    .get_results ($P5024)
    pop_upto_eh $P5024
    getattribute $P5024, $P5024, 'type'
    eq $P5024, .CONTROL_LOOP_NEXT, for_next4968
    eq $P5024, .CONTROL_LOOP_REDO, for_redo4969
  for_done4970:
    pop_eh 
    defined $I5003, $P101
    unless $I5003 goto if2198_else4971 
.annotate 'line', 2106
    can $I5004, $P101, "type"
    box $P5030, $I5004
    set $P5029, $P5030
    unless $I5004 goto if2199_end4974 
.annotate 'line', 2107
.annotate 'line', 2108
    find_lex $P5026, "$past"
    $P5027 = $P101."type"()
    $P5028 = $P5026."returns"($P5027)
    set $P5029, $P5028
  if2199_end4974:
    set $P5035, $P5029
    goto if2198_end4972
  if2198_else4971:
.annotate 'line', 2111
.annotate 'line', 2112
    find_lex $P5031, "$/"
    $P5032 = $P5031."CURSOR"()
    find_lex $P5033, "$name"
    set $S5003, $P5033
    concat $S5002, "Attribute '", $S5003
    concat $S5001, $S5002, "' not declared"
    $P5034 = $P5032."panic"($S5001)
    set $P5035, $P5034
  if2198_end4972:
    .return ($P5035) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_460_1361734139.417") :anon :lex :outer("cuid_461_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2100
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 2101
    $P5001 = _lex_param_0."name"()
    set $S5001, $P5001
    find_lex $P5002, "$name"
    set $S5002, $P5002
    iseq $I5001, $S5001, $S5002
    set $I5002, $I5001
    unless $I5001 goto if2197_end4966 
    store_lex "$attr", _lex_param_0
    die 0, .CONTROL_LOOP_LAST
    set $I5002, 0
  if2197_end4966:
    .return ($I5002) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_463_1361734139.417") :anon :lex :outer("cuid_459_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2116
    .lex "$name", $P101 
    .local pmc fb_tmp_356 
    .local pmc fb_tmp_357 
    .local pmc fb_tmp_358 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    find_lex $P5002, "$/"
    unless_null $P5002, fallback4985
    nqp_get_sc_object $P5003, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5002, $P5003
  fallback4985:
    set fb_tmp_356, $P5002
    repr_defined $I5002, fb_tmp_356
    unless $I5002 goto if2204_else4983 
    set $P5004, fb_tmp_356["sigil"]
    set $P5006, $P5004
    goto if2204_end4984
  if2204_else4983:
    null $P5005
    set $P5006, $P5005
  if2204_end4984:
    unless_null $P5006, vivi_22054986
    nqp_get_sc_object $P5007, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5006, $P5007
  vivi_22054986:
    set $S5001, $P5006
    iseq $I5001, $S5001, "@"
    unless $I5001 goto if2203_else4981 
    set $S5004, "list"
    goto if2203_end4982
  if2203_else4981:
    find_lex $P5008, "$/"
    unless_null $P5008, fallback4991
    nqp_get_sc_object $P5009, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5008, $P5009
  fallback4991:
    set fb_tmp_357, $P5008
    repr_defined $I5004, fb_tmp_357
    unless $I5004 goto if2207_else4989 
    set $P5010, fb_tmp_357["sigil"]
    set $P5012, $P5010
    goto if2207_end4990
  if2207_else4989:
    null $P5011
    set $P5012, $P5011
  if2207_end4990:
    unless_null $P5012, vivi_22084992
    nqp_get_sc_object $P5013, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5012, $P5013
  vivi_22084992:
    set $S5002, $P5012
    iseq $I5003, $S5002, "%"
    unless $I5003 goto if2206_else4987 
    set $S5003, "hash"
    goto if2206_end4988
  if2206_else4987:
    set $S5003, "item"
  if2206_end4988:
    set $S5004, $S5003
  if2203_end4982:
    box $P5014, $S5004
    set $P101, $P5014
.annotate 'line', 2120
    nqp_get_sc_object $P5015, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    find_lex $P5016, "$/"
    unless_null $P5016, fallback4995
    nqp_get_sc_object $P5017, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5016, $P5017
  fallback4995:
    set fb_tmp_358, $P5016
    repr_defined $I5005, fb_tmp_358
    unless $I5005 goto if2209_else4993 
    set $P5018, fb_tmp_358["semilist"]
    set $P5020, $P5018
    goto if2209_end4994
  if2209_else4993:
    null $P5019
    set $P5020, $P5019
  if2209_end4994:
    unless_null $P5020, vivi_22104996
    nqp_get_sc_object $P5021, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5020, $P5021
  vivi_22104996:
    $P5022 = $P5020."ast"()
    $P5023 = $P5015."new"($P5022, "callmethod" :named("op"), $P101 :named("name"))
    store_lex "$past", $P5023
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_464_1361734139.417") :anon :lex :outer("cuid_459_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2126
    .lex "$name", $P101 
    .local pmc fb_tmp_362 
    .local pmc fb_tmp_363 
    .local pmc fb_tmp_364 
    .local pmc fb_tmp_365 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
.annotate 'line', 2127
    find_lex $P5002, "@name"
    $P5003 = $P5002."pop"()
    set $S5001, $P5003
    box $P5004, $S5001
    set $P101, $P5004
    find_dynamic_lex $P5005, "$*IN_DECL"
    unless_null $P5005, fallback5023
    nqp_get_sc_object $P5007, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5006, $P5007
    set fb_tmp_362, $P5006
    repr_defined $I5002, fb_tmp_362
    unless $I5002 goto if2225_else5024 
    set $P5008, fb_tmp_362["$IN_DECL"]
    set $P5010, $P5008
    goto if2225_end5025
  if2225_else5024:
    null $P5009
    set $P5010, $P5009
  if2225_end5025:
    unless_null $P5010, vivi_22265026
    nqp_get_sc_object $P5011, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5010, $P5011
  vivi_22265026:
    unless_null $P5010, vivi_22275027
    die "Contextual $*IN_DECL not found"
    box $P5012, "Contextual $*IN_DECL not found"
    set $P5010, $P5012
  vivi_22275027:
    set $P5005, $P5010
  fallback5023:
    set $S5002, $P5005
    iseq $I5001, $S5002, "variable"
    set $I5004, $I5001
    if $I5001 goto unless2224_end5022 
    set $S5003, $P101
    iseq $I5003, $S5003, "$_"
    set $I5004, $I5003
  unless2224_end5022:
    set $I5006, $I5004
    if $I5004 goto unless2223_end5020 
    set $S5004, $P101
    iseq $I5005, $S5004, "$/"
    set $I5006, $I5005
  unless2223_end5020:
    set $I5008, $I5006
    if $I5006 goto unless2222_end5018 
    set $S5005, $P101
    iseq $I5007, $S5005, "$!"
    set $I5008, $I5007
  unless2222_end5018:
    set $I5012, $I5008
    if $I5008 goto unless2221_end5016 
    find_lex $P5013, "$/"
    unless_null $P5013, fallback5032
    nqp_get_sc_object $P5014, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5013, $P5014
  fallback5032:
    set fb_tmp_364, $P5013
    repr_defined $I5011, fb_tmp_364
    unless $I5011 goto if2229_else5030 
    set $P5015, fb_tmp_364["twigil"]
    set $P5017, $P5015
    goto if2229_end5031
  if2229_else5030:
    null $P5016
    set $P5017, $P5016
  if2229_end5031:
    unless_null $P5017, vivi_22305033
    nqp_get_sc_object $P5018, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5017, $P5018
  vivi_22305033:
    set fb_tmp_363, $P5017
    repr_defined $I5010, fb_tmp_363
    unless $I5010 goto if2228_else5028 
    set $P5019, fb_tmp_363[0]
    set $P5021, $P5019
    goto if2228_end5029
  if2228_else5028:
    null $P5020
    set $P5021, $P5020
  if2228_end5029:
    unless_null $P5021, vivi_22315034
    nqp_get_sc_object $P5022, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5021, $P5022
  vivi_22315034:
    set $S5006, $P5021
    iseq $I5009, $S5006, "?"
    set $I5012, $I5009
  unless2221_end5016:
    box $P5033, $I5012
    set $P5032, $P5033
    if $I5012 goto unless2220_end5014 
.annotate 'line', 2129
    find_dynamic_lex $P5023, "$*W"
    unless_null $P5023, fallback5035
    nqp_get_sc_object $P5025, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5024, $P5025
    set fb_tmp_365, $P5024
    repr_defined $I5013, fb_tmp_365
    unless $I5013 goto if2232_else5036 
    set $P5026, fb_tmp_365["$W"]
    set $P5028, $P5026
    goto if2232_end5037
  if2232_else5036:
    null $P5027
    set $P5028, $P5027
  if2232_end5037:
    unless_null $P5028, vivi_22335038
    nqp_get_sc_object $P5029, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5028, $P5029
  vivi_22335038:
    unless_null $P5028, vivi_22345039
    die "Contextual $*W not found"
    box $P5030, "Contextual $*W not found"
    set $P5028, $P5030
  vivi_22345039:
    set $P5023, $P5028
  fallback5035:
    $P5031 = $P5023."is_lexical"($P101)
    set $P5032, $P5031
  unless2220_end5014:
    unless $P5032 goto if2219_else5011 
.annotate 'line', 2130
    nqp_get_sc_object $P5034, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5035 = $P5034."new"($P101 :named("name"), "lexical" :named("scope"))
    store_lex "$past", $P5035
    set $P5039, $P5035
    goto if2219_end5012
  if2219_else5011:
.annotate 'line', 2132
.annotate 'line', 2133
    find_lex $P5036, "$/"
    $P5037 = $P5036."CURSOR"()
    set $S5009, $P101
    concat $S5008, "Use of undeclared variable '", $S5009
    concat $S5007, $S5008, "'"
    $P5038 = $P5037."panic"($S5007)
    set $P5039, $P5038
  if2219_end5012:
    .return ($P5039) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<module>" :subid("cuid_288_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2140
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_366 
    unless_null _lex_param_1, fallback5042
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback5042:
    set fb_tmp_366, _lex_param_1
    repr_defined $I5001, fb_tmp_366
    unless $I5001 goto if2235_else5040 
    set $P5002, fb_tmp_366["package_def"]
    set $P5004, $P5002
    goto if2235_end5041
  if2235_else5040:
    null $P5003
    set $P5004, $P5003
  if2235_end5041:
    unless_null $P5004, vivi_22365043
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_22365043:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<knowhow>" :subid("cuid_289_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2141
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_367 
    unless_null _lex_param_1, fallback5046
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback5046:
    set fb_tmp_367, _lex_param_1
    repr_defined $I5001, fb_tmp_367
    unless $I5001 goto if2237_else5044 
    set $P5002, fb_tmp_367["package_def"]
    set $P5004, $P5002
    goto if2237_end5045
  if2237_else5044:
    null $P5003
    set $P5004, $P5003
  if2237_end5045:
    unless_null $P5004, vivi_22385047
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_22385047:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<class>" :subid("cuid_290_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2142
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_368 
    unless_null _lex_param_1, fallback5050
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback5050:
    set fb_tmp_368, _lex_param_1
    repr_defined $I5001, fb_tmp_368
    unless $I5001 goto if2239_else5048 
    set $P5002, fb_tmp_368["package_def"]
    set $P5004, $P5002
    goto if2239_end5049
  if2239_else5048:
    null $P5003
    set $P5004, $P5003
  if2239_end5049:
    unless_null $P5004, vivi_22405051
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_22405051:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<grammar>" :subid("cuid_291_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2143
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_369 
    unless_null _lex_param_1, fallback5054
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback5054:
    set fb_tmp_369, _lex_param_1
    repr_defined $I5001, fb_tmp_369
    unless $I5001 goto if2241_else5052 
    set $P5002, fb_tmp_369["package_def"]
    set $P5004, $P5002
    goto if2241_end5053
  if2241_else5052:
    null $P5003
    set $P5004, $P5003
  if2241_end5053:
    unless_null $P5004, vivi_22425055
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_22425055:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<role>" :subid("cuid_292_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2144
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_370 
    unless_null _lex_param_1, fallback5058
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback5058:
    set fb_tmp_370, _lex_param_1
    repr_defined $I5001, fb_tmp_370
    unless $I5001 goto if2243_else5056 
    set $P5002, fb_tmp_370["package_def"]
    set $P5004, $P5002
    goto if2243_end5057
  if2243_else5056:
    null $P5003
    set $P5004, $P5003
  if2243_end5057:
    unless_null $P5004, vivi_22445059
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_22445059:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<native>" :subid("cuid_293_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2145
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_371 
    unless_null _lex_param_1, fallback5062
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback5062:
    set fb_tmp_371, _lex_param_1
    repr_defined $I5001, fb_tmp_371
    unless $I5001 goto if2245_else5060 
    set $P5002, fb_tmp_371["package_def"]
    set $P5004, $P5002
    goto if2245_end5061
  if2245_else5060:
    null $P5003
    set $P5004, $P5003
  if2245_end5061:
    unless_null $P5004, vivi_22465063
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_22465063:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<stub>" :subid("cuid_294_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2147
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$HOW", $P101 
    .lex "$PACKAGE", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_372 
    .local pmc fb_tmp_373 
    .local pmc fb_tmp_374 
    .local pmc fb_tmp_375 
    .local pmc fb_tmp_376 
    .local pmc fb_tmp_377 
    .local pmc fb_tmp_378 
    .local pmc fb_tmp_379 
    .local pmc fb_tmp_380 
    .local pmc fb_tmp_381 
    .local pmc fb_tmp_382 
    .local pmc fb_tmp_383 
    .local pmc fb_tmp_384 
    .local pmc fb_tmp_385 
    .local pmc fb_tmp_386 
    .local pmc fb_tmp_387 
    .local pmc fb_tmp_388 
    .local pmc fb_tmp_389 
    .local pmc fb_tmp_390 
    .local pmc fb_tmp_391 
    .local pmc fb_tmp_392 
    .local pmc fb_tmp_393 
    .local pmc fb_tmp_394 
    .local pmc fb_tmp_395 
    .local pmc fb_tmp_396 
    .local pmc fb_tmp_397 
    .local pmc fb_tmp_398 
    .local pmc fb_tmp_399 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
.annotate 'line', 2150
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback5064
    nqp_get_sc_object $P5005, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5004, $P5005
    set fb_tmp_372, $P5004
    repr_defined $I5001, fb_tmp_372
    unless $I5001 goto if2247_else5065 
    set $P5006, fb_tmp_372["$W"]
    set $P5008, $P5006
    goto if2247_end5066
  if2247_else5065:
    null $P5007
    set $P5008, $P5007
  if2247_end5066:
    unless_null $P5008, vivi_22485067
    nqp_get_sc_object $P5009, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5008, $P5009
  vivi_22485067:
    unless_null $P5008, vivi_22495068
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_22495068:
    set $P5003, $P5008
  fallback5064:
    unless_null _lex_param_1, fallback5073
    nqp_get_sc_object $P5011, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5011
  fallback5073:
    set fb_tmp_374, _lex_param_1
    repr_defined $I5003, fb_tmp_374
    unless $I5003 goto if2251_else5071 
    set $P5012, fb_tmp_374["metaclass"]
    set $P5014, $P5012
    goto if2251_end5072
  if2251_else5071:
    null $P5013
    set $P5014, $P5013
  if2251_end5072:
    unless_null $P5014, vivi_22525074
    nqp_get_sc_object $P5015, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5014, $P5015
  vivi_22525074:
    set fb_tmp_373, $P5014
    repr_defined $I5002, fb_tmp_373
    unless $I5002 goto if2250_else5069 
    set $P5016, fb_tmp_373["identifier"]
    set $P5018, $P5016
    goto if2250_end5070
  if2250_else5069:
    null $P5017
    set $P5018, $P5017
  if2250_end5070:
    unless_null $P5018, vivi_22535075
    nqp_get_sc_object $P5019, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5018, $P5019
  vivi_22535075:
    $P5020 = $P5003."find_sym"($P5018)
    set $P101, $P5020
.annotate 'line', 2151
    find_dynamic_lex $P5021, "$*W"
    unless_null $P5021, fallback5076
    nqp_get_sc_object $P5023, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5022, $P5023
    set fb_tmp_375, $P5022
    repr_defined $I5004, fb_tmp_375
    unless $I5004 goto if2254_else5077 
    set $P5024, fb_tmp_375["$W"]
    set $P5026, $P5024
    goto if2254_end5078
  if2254_else5077:
    null $P5025
    set $P5026, $P5025
  if2254_end5078:
    unless_null $P5026, vivi_22555079
    nqp_get_sc_object $P5027, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5026, $P5027
  vivi_22555079:
    unless_null $P5026, vivi_22565080
    die "Contextual $*W not found"
    box $P5028, "Contextual $*W not found"
    set $P5026, $P5028
  vivi_22565080:
    set $P5021, $P5026
  fallback5076:
    unless_null _lex_param_1, fallback5083
    nqp_get_sc_object $P5029, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5029
  fallback5083:
    set fb_tmp_376, _lex_param_1
    repr_defined $I5005, fb_tmp_376
    unless $I5005 goto if2257_else5081 
    set $P5030, fb_tmp_376["name"]
    set $P5032, $P5030
    goto if2257_end5082
  if2257_else5081:
    null $P5031
    set $P5032, $P5031
  if2257_end5082:
    unless_null $P5032, vivi_22585084
    nqp_get_sc_object $P5033, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5032, $P5033
  vivi_22585084:
    set $S5001, $P5032
    $P5034 = $P5021."pkg_create_mo"($P101, $S5001 :named("name"))
    set $P102, $P5034
    find_dynamic_lex $P5035, "$*SCOPE"
    unless_null $P5035, fallback5089
    nqp_get_sc_object $P5037, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5036, $P5037
    set fb_tmp_377, $P5036
    repr_defined $I5007, fb_tmp_377
    unless $I5007 goto if2261_else5090 
    set $P5038, fb_tmp_377["$SCOPE"]
    set $P5040, $P5038
    goto if2261_end5091
  if2261_else5090:
    null $P5039
    set $P5040, $P5039
  if2261_end5091:
    unless_null $P5040, vivi_22625092
    nqp_get_sc_object $P5041, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5040, $P5041
  vivi_22625092:
    unless_null $P5040, vivi_22635093
    die "Contextual $*SCOPE not found"
    box $P5042, "Contextual $*SCOPE not found"
    set $P5040, $P5042
  vivi_22635093:
    set $P5035, $P5040
  fallback5089:
    set $S5002, $P5035
    iseq $I5006, $S5002, "our"
    set $I5010, $I5006
    if $I5006 goto unless2260_end5088 
    find_dynamic_lex $P5043, "$*SCOPE"
    unless_null $P5043, fallback5094
    nqp_get_sc_object $P5045, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5044, $P5045
    set fb_tmp_378, $P5044
    repr_defined $I5009, fb_tmp_378
    unless $I5009 goto if2264_else5095 
    set $P5046, fb_tmp_378["$SCOPE"]
    set $P5048, $P5046
    goto if2264_end5096
  if2264_else5095:
    null $P5047
    set $P5048, $P5047
  if2264_end5096:
    unless_null $P5048, vivi_22655097
    nqp_get_sc_object $P5049, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5048, $P5049
  vivi_22655097:
    unless_null $P5048, vivi_22665098
    die "Contextual $*SCOPE not found"
    box $P5050, "Contextual $*SCOPE not found"
    set $P5048, $P5050
  vivi_22665098:
    set $P5043, $P5048
  fallback5094:
    set $S5003, $P5043
    iseq $I5008, $S5003, ""
    set $I5010, $I5008
  unless2260_end5088:
    unless $I5010 goto if2259_else5085 
.annotate 'line', 2154
.annotate 'line', 2155
    find_dynamic_lex $P5051, "$*W"
    unless_null $P5051, fallback5099
    nqp_get_sc_object $P5053, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5052, $P5053
    set fb_tmp_379, $P5052
    repr_defined $I5011, fb_tmp_379
    unless $I5011 goto if2267_else5100 
    set $P5054, fb_tmp_379["$W"]
    set $P5056, $P5054
    goto if2267_end5101
  if2267_else5100:
    null $P5055
    set $P5056, $P5055
  if2267_end5101:
    unless_null $P5056, vivi_22685102
    nqp_get_sc_object $P5057, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5056, $P5057
  vivi_22685102:
    unless_null $P5056, vivi_22695103
    die "Contextual $*W not found"
    box $P5058, "Contextual $*W not found"
    set $P5056, $P5058
  vivi_22695103:
    set $P5051, $P5056
  fallback5099:
    find_dynamic_lex $P5059, "$*OUTERPACKAGE"
    unless_null $P5059, fallback5104
    nqp_get_sc_object $P5061, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5060, $P5061
    set fb_tmp_380, $P5060
    repr_defined $I5012, fb_tmp_380
    unless $I5012 goto if2270_else5105 
    set $P5062, fb_tmp_380["$OUTERPACKAGE"]
    set $P5064, $P5062
    goto if2270_end5106
  if2270_else5105:
    null $P5063
    set $P5064, $P5063
  if2270_end5106:
    unless_null $P5064, vivi_22715107
    nqp_get_sc_object $P5065, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5064, $P5065
  vivi_22715107:
    unless_null $P5064, vivi_22725108
    die "Contextual $*OUTERPACKAGE not found"
    box $P5066, "Contextual $*OUTERPACKAGE not found"
    set $P5064, $P5066
  vivi_22725108:
    set $P5059, $P5064
  fallback5104:
    unless_null _lex_param_1, fallback5113
    nqp_get_sc_object $P5067, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5067
  fallback5113:
    set fb_tmp_382, _lex_param_1
    repr_defined $I5014, fb_tmp_382
    unless $I5014 goto if2274_else5111 
    set $P5068, fb_tmp_382["name"]
    set $P5070, $P5068
    goto if2274_end5112
  if2274_else5111:
    null $P5069
    set $P5070, $P5069
  if2274_end5112:
    unless_null $P5070, vivi_22755114
    nqp_get_sc_object $P5071, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5070, $P5071
  vivi_22755114:
    set fb_tmp_381, $P5070
    repr_defined $I5013, fb_tmp_381
    unless $I5013 goto if2273_else5109 
    set $P5072, fb_tmp_381["identifier"]
    set $P5074, $P5072
    goto if2273_end5110
  if2273_else5109:
    null $P5073
    set $P5074, $P5073
  if2273_end5110:
    unless_null $P5074, vivi_22765115
    nqp_get_sc_object $P5075, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5074, $P5075
  vivi_22765115:
    $P5051."install_package_symbol"($P5059, $P5074, $P102)
    unless_null _lex_param_1, fallback5122
    nqp_get_sc_object $P5076, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5076
  fallback5122:
    set fb_tmp_384, _lex_param_1
    repr_defined $I5017, fb_tmp_384
    unless $I5017 goto if2279_else5120 
    set $P5077, fb_tmp_384["name"]
    set $P5079, $P5077
    goto if2279_end5121
  if2279_else5120:
    null $P5078
    set $P5079, $P5078
  if2279_end5121:
    unless_null $P5079, vivi_22805123
    nqp_get_sc_object $P5080, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5079, $P5080
  vivi_22805123:
    set fb_tmp_383, $P5079
    repr_defined $I5016, fb_tmp_383
    unless $I5016 goto if2278_else5118 
    set $P5081, fb_tmp_383["identifier"]
    set $P5083, $P5081
    goto if2278_end5119
  if2278_else5118:
    null $P5082
    set $P5083, $P5082
  if2278_end5119:
    unless_null $P5083, vivi_22815124
    nqp_get_sc_object $P5084, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5083, $P5084
  vivi_22815124:
    set $N5001, $P5083
    set $N5002, 1
    iseq $I5015, $N5001, $N5002
    box $P5117, $I5015
    set $P5116, $P5117
    unless $I5015 goto if2277_end5117 
.annotate 'line', 2156
.annotate 'line', 2157
    find_dynamic_lex $P5085, "$*W"
    unless_null $P5085, fallback5125
    nqp_get_sc_object $P5087, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5086, $P5087
    set fb_tmp_385, $P5086
    repr_defined $I5018, fb_tmp_385
    unless $I5018 goto if2282_else5126 
    set $P5088, fb_tmp_385["$W"]
    set $P5090, $P5088
    goto if2282_end5127
  if2282_else5126:
    null $P5089
    set $P5090, $P5089
  if2282_end5127:
    unless_null $P5090, vivi_22835128
    nqp_get_sc_object $P5091, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5090, $P5091
  vivi_22835128:
    unless_null $P5090, vivi_22845129
    die "Contextual $*W not found"
    box $P5092, "Contextual $*W not found"
    set $P5090, $P5092
  vivi_22845129:
    set $P5085, $P5090
  fallback5125:
    find_dynamic_lex $P5093, "$*W"
    unless_null $P5093, fallback5130
    nqp_get_sc_object $P5095, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5094, $P5095
    set fb_tmp_386, $P5094
    repr_defined $I5019, fb_tmp_386
    unless $I5019 goto if2285_else5131 
    set $P5096, fb_tmp_386["$W"]
    set $P5098, $P5096
    goto if2285_end5132
  if2285_else5131:
    null $P5097
    set $P5098, $P5097
  if2285_end5132:
    unless_null $P5098, vivi_22865133
    nqp_get_sc_object $P5099, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5098, $P5099
  vivi_22865133:
    unless_null $P5098, vivi_22875134
    die "Contextual $*W not found"
    box $P5100, "Contextual $*W not found"
    set $P5098, $P5100
  vivi_22875134:
    set $P5093, $P5098
  fallback5130:
    $P5101 = $P5093."cur_lexpad"()
    unless_null _lex_param_1, fallback5141
    nqp_get_sc_object $P5102, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5102
  fallback5141:
    set fb_tmp_389, _lex_param_1
    repr_defined $I5022, fb_tmp_389
    unless $I5022 goto if2290_else5139 
    set $P5103, fb_tmp_389["name"]
    set $P5105, $P5103
    goto if2290_end5140
  if2290_else5139:
    null $P5104
    set $P5105, $P5104
  if2290_end5140:
    unless_null $P5105, vivi_22915142
    nqp_get_sc_object $P5106, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5105, $P5106
  vivi_22915142:
    set fb_tmp_388, $P5105
    repr_defined $I5021, fb_tmp_388
    unless $I5021 goto if2289_else5137 
    set $P5107, fb_tmp_388["identifier"]
    set $P5109, $P5107
    goto if2289_end5138
  if2289_else5137:
    null $P5108
    set $P5109, $P5108
  if2289_end5138:
    unless_null $P5109, vivi_22925143
    nqp_get_sc_object $P5110, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5109, $P5110
  vivi_22925143:
    set fb_tmp_387, $P5109
    repr_defined $I5020, fb_tmp_387
    unless $I5020 goto if2288_else5135 
    set $P5111, fb_tmp_387[0]
    set $P5113, $P5111
    goto if2288_end5136
  if2288_else5135:
    null $P5112
    set $P5113, $P5112
  if2288_end5136:
    unless_null $P5113, vivi_22935144
    nqp_get_sc_object $P5114, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5113, $P5114
  vivi_22935144:
    $P5115 = $P5085."install_lexical_symbol"($P5101, $P5113, $P102)
    set $P5116, $P5115
  if2277_end5117:
    goto if2259_end5086
  if2259_else5085:
    find_dynamic_lex $P5118, "$*SCOPE"
    unless_null $P5118, fallback5147
    nqp_get_sc_object $P5120, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5119, $P5120
    set fb_tmp_390, $P5119
    repr_defined $I5024, fb_tmp_390
    unless $I5024 goto if2295_else5148 
    set $P5121, fb_tmp_390["$SCOPE"]
    set $P5123, $P5121
    goto if2295_end5149
  if2295_else5148:
    null $P5122
    set $P5123, $P5122
  if2295_end5149:
    unless_null $P5123, vivi_22965150
    nqp_get_sc_object $P5124, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5123, $P5124
  vivi_22965150:
    unless_null $P5123, vivi_22975151
    die "Contextual $*SCOPE not found"
    box $P5125, "Contextual $*SCOPE not found"
    set $P5123, $P5125
  vivi_22975151:
    set $P5118, $P5123
  fallback5147:
    set $S5004, $P5118
    iseq $I5023, $S5004, "my"
    unless $I5023 goto if2294_else5145 
.annotate 'line', 2160
    unless_null _lex_param_1, fallback5158
    nqp_get_sc_object $P5126, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5126
  fallback5158:
    set fb_tmp_392, _lex_param_1
    repr_defined $I5027, fb_tmp_392
    unless $I5027 goto if2300_else5156 
    set $P5127, fb_tmp_392["name"]
    set $P5129, $P5127
    goto if2300_end5157
  if2300_else5156:
    null $P5128
    set $P5129, $P5128
  if2300_end5157:
    unless_null $P5129, vivi_23015159
    nqp_get_sc_object $P5130, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5129, $P5130
  vivi_23015159:
    set fb_tmp_391, $P5129
    repr_defined $I5026, fb_tmp_391
    unless $I5026 goto if2299_else5154 
    set $P5131, fb_tmp_391["identifier"]
    set $P5133, $P5131
    goto if2299_end5155
  if2299_else5154:
    null $P5132
    set $P5133, $P5132
  if2299_end5155:
    unless_null $P5133, vivi_23025160
    nqp_get_sc_object $P5134, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5133, $P5134
  vivi_23025160:
    set $N5003, $P5133
    set $N5004, 1
    isne $I5025, $N5003, $N5004
    unless $I5025 goto if2298_end5153 
.annotate 'line', 2161
.annotate 'line', 2162
    unless_null _lex_param_1, fallback5163
    nqp_get_sc_object $P5135, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5135
  fallback5163:
    set fb_tmp_393, _lex_param_1
    repr_defined $I5028, fb_tmp_393
    unless $I5028 goto if2303_else5161 
    set $P5136, fb_tmp_393["name"]
    set $P5138, $P5136
    goto if2303_end5162
  if2303_else5161:
    null $P5137
    set $P5138, $P5137
  if2303_end5162:
    unless_null $P5138, vivi_23045164
    nqp_get_sc_object $P5139, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5138, $P5139
  vivi_23045164:
    $P5140 = $P5138."CURSOR"()
    $P5141 = $P5140."panic"("A my scoped package cannot have a multi-part name yet")
  if2298_end5153:
.annotate 'line', 2164
    find_dynamic_lex $P5142, "$*W"
    unless_null $P5142, fallback5165
    nqp_get_sc_object $P5144, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5143, $P5144
    set fb_tmp_394, $P5143
    repr_defined $I5029, fb_tmp_394
    unless $I5029 goto if2305_else5166 
    set $P5145, fb_tmp_394["$W"]
    set $P5147, $P5145
    goto if2305_end5167
  if2305_else5166:
    null $P5146
    set $P5147, $P5146
  if2305_end5167:
    unless_null $P5147, vivi_23065168
    nqp_get_sc_object $P5148, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5147, $P5148
  vivi_23065168:
    unless_null $P5147, vivi_23075169
    die "Contextual $*W not found"
    box $P5149, "Contextual $*W not found"
    set $P5147, $P5149
  vivi_23075169:
    set $P5142, $P5147
  fallback5165:
    find_dynamic_lex $P5150, "$*W"
    unless_null $P5150, fallback5170
    nqp_get_sc_object $P5152, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5151, $P5152
    set fb_tmp_395, $P5151
    repr_defined $I5030, fb_tmp_395
    unless $I5030 goto if2308_else5171 
    set $P5153, fb_tmp_395["$W"]
    set $P5155, $P5153
    goto if2308_end5172
  if2308_else5171:
    null $P5154
    set $P5155, $P5154
  if2308_end5172:
    unless_null $P5155, vivi_23095173
    nqp_get_sc_object $P5156, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5155, $P5156
  vivi_23095173:
    unless_null $P5155, vivi_23105174
    die "Contextual $*W not found"
    box $P5157, "Contextual $*W not found"
    set $P5155, $P5157
  vivi_23105174:
    set $P5150, $P5155
  fallback5170:
    $P5158 = $P5150."cur_lexpad"()
    unless_null _lex_param_1, fallback5181
    nqp_get_sc_object $P5159, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5159
  fallback5181:
    set fb_tmp_398, _lex_param_1
    repr_defined $I5033, fb_tmp_398
    unless $I5033 goto if2313_else5179 
    set $P5160, fb_tmp_398["name"]
    set $P5162, $P5160
    goto if2313_end5180
  if2313_else5179:
    null $P5161
    set $P5162, $P5161
  if2313_end5180:
    unless_null $P5162, vivi_23145182
    nqp_get_sc_object $P5163, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5162, $P5163
  vivi_23145182:
    set fb_tmp_397, $P5162
    repr_defined $I5032, fb_tmp_397
    unless $I5032 goto if2312_else5177 
    set $P5164, fb_tmp_397["identifier"]
    set $P5166, $P5164
    goto if2312_end5178
  if2312_else5177:
    null $P5165
    set $P5166, $P5165
  if2312_end5178:
    unless_null $P5166, vivi_23155183
    nqp_get_sc_object $P5167, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5166, $P5167
  vivi_23155183:
    set fb_tmp_396, $P5166
    repr_defined $I5031, fb_tmp_396
    unless $I5031 goto if2311_else5175 
    set $P5168, fb_tmp_396[0]
    set $P5170, $P5168
    goto if2311_end5176
  if2311_else5175:
    null $P5169
    set $P5170, $P5169
  if2311_end5176:
    unless_null $P5170, vivi_23165184
    nqp_get_sc_object $P5171, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5170, $P5171
  vivi_23165184:
    $P5172 = $P5142."install_lexical_symbol"($P5158, $P5170, $P102)
    set $P5183, $P5172
    goto if2294_end5146
  if2294_else5145:
.annotate 'line', 2166
.annotate 'line', 2167
    $P5173 = _lex_param_1."CURSOR"()
    find_dynamic_lex $P5174, "$*SCOPE"
    unless_null $P5174, fallback5185
    nqp_get_sc_object $P5176, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5175, $P5176
    set fb_tmp_399, $P5175
    repr_defined $I5034, fb_tmp_399
    unless $I5034 goto if2317_else5186 
    set $P5177, fb_tmp_399["$SCOPE"]
    set $P5179, $P5177
    goto if2317_end5187
  if2317_else5186:
    null $P5178
    set $P5179, $P5178
  if2317_end5187:
    unless_null $P5179, vivi_23185188
    nqp_get_sc_object $P5180, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5179, $P5180
  vivi_23185188:
    unless_null $P5179, vivi_23195189
    die "Contextual $*SCOPE not found"
    box $P5181, "Contextual $*SCOPE not found"
    set $P5179, $P5181
  vivi_23195189:
    set $P5174, $P5179
  fallback5185:
    set $S5006, $P5174
    concat $S5005, $S5006, " scoped packages are not supported"
    $P5182 = $P5173."panic"($S5005)
    set $P5183, $P5182
  if2294_end5146:
  if2259_end5086:
.annotate 'line', 2170
    nqp_get_sc_object $P5184, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 93
    $P5185 = $P5184."new"()
    $P5186 = _lex_param_1."!make"($P5185)
    .return ($P5186) 
.end
.HLL "nqp"
.namespace []
.sub "package_def" :subid("cuid_295_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2173
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5197 = 'cuid_466_1361734139.417' 
    capture_lex $P5197 
    .const 'Sub' $P5197 = 'cuid_467_1361734139.417' 
    capture_lex $P5197 
    .const 'Sub' $P5197 = 'cuid_468_1361734139.417' 
    capture_lex $P5197 
    .const 'Sub' $P5197 = 'cuid_469_1361734139.417' 
    capture_lex $P5197 
    .lex "@ns", $P101 
    .lex "$name", $P102 
    .lex "$how", $P103 
    .lex "$past", $P104 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_400 
    .local pmc fb_tmp_401 
    .local pmc fb_tmp_402 
    .local pmc fb_tmp_403 
    .local pmc pkg_viv_tmp_42 
    .local pmc fb_tmp_404 
    .local pmc fb_tmp_405 
    .local pmc fb_tmp_406 
    .local pmc fb_tmp_407 
    .local pmc fb_tmp_408 
    .local pmc fb_tmp_419 
    .local pmc fb_tmp_420 
    .local pmc fb_tmp_421 
    .local pmc fb_tmp_422 
    .local pmc fb_tmp_423 
    .local pmc fb_tmp_436 
    .local pmc fb_tmp_437 
    .local pmc fb_tmp_442 
    .local pmc fb_tmp_443 
    .local pmc fb_tmp_444 
    .local pmc fb_tmp_445 
    .local pmc fb_tmp_446 
    .local pmc fb_tmp_447 
    .local pmc fb_tmp_448 
    .local pmc fb_tmp_449 
    .local pmc fb_tmp_450 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P104, $P5004
    unless_null _lex_param_1, fallback5194
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5006
  fallback5194:
    set fb_tmp_401, _lex_param_1
    repr_defined $I5002, fb_tmp_401
    unless $I5002 goto if2321_else5192 
    set $P5007, fb_tmp_401["name"]
    set $P5009, $P5007
    goto if2321_end5193
  if2321_else5192:
    null $P5008
    set $P5009, $P5008
  if2321_end5193:
    unless_null $P5009, vivi_23225195
    nqp_get_sc_object $P5010, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5009, $P5010
  vivi_23225195:
    set fb_tmp_400, $P5009
    repr_defined $I5001, fb_tmp_400
    unless $I5001 goto if2320_else5190 
    set $P5011, fb_tmp_400["identifier"]
    set $P5013, $P5011
    goto if2320_end5191
  if2320_else5190:
    null $P5012
    set $P5013, $P5012
  if2320_end5191:
    unless_null $P5013, vivi_23235196
    nqp_get_sc_object $P5014, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5013, $P5014
  vivi_23235196:
    repr_clone $P5005, $P5013
    set $P101, $P5005
.annotate 'line', 2176
    $P5015 = $P101."pop"()
    set $S5001, $P5015
    box $P5016, $S5001
    set $P102, $P5016
    find_dynamic_lex $P5017, "%*HOW"
    unless_null $P5017, fallback5199
    nqp_get_sc_object $P5019, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5018, $P5019
    set pkg_viv_tmp_42, $P5018
    set fb_tmp_403, pkg_viv_tmp_42
    repr_defined $I5004, fb_tmp_403
    unless $I5004 goto if2325_else5200 
    set $P5020, fb_tmp_403["%HOW"]
    set $P5022, $P5020
    goto if2325_end5201
  if2325_else5200:
    null $P5021
    set $P5022, $P5021
  if2325_end5201:
    unless_null $P5022, vivi_23265202
    new $P5023, 'Hash'
    set pkg_viv_tmp_42["%HOW"], $P5023
    set $P5022, $P5023
  vivi_23265202:
    unless_null $P5022, vivi_23275203
    die "Contextual %*HOW not found"
    box $P5024, "Contextual %*HOW not found"
    set $P5022, $P5024
  vivi_23275203:
    set $P5017, $P5022
  fallback5199:
    set fb_tmp_402, $P5017
    repr_defined $I5003, fb_tmp_402
    unless $I5003 goto if2324_else5197 
    find_dynamic_lex $P5026, "$*PKGDECL"
    unless_null $P5026, fallback5204
    nqp_get_sc_object $P5028, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5027, $P5028
    set fb_tmp_404, $P5027
    repr_defined $I5005, fb_tmp_404
    unless $I5005 goto if2328_else5205 
    set $P5029, fb_tmp_404["$PKGDECL"]
    set $P5031, $P5029
    goto if2328_end5206
  if2328_else5205:
    null $P5030
    set $P5031, $P5030
  if2328_end5206:
    unless_null $P5031, vivi_23295207
    nqp_get_sc_object $P5032, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5031, $P5032
  vivi_23295207:
    unless_null $P5031, vivi_23305208
    die "Contextual $*PKGDECL not found"
    box $P5033, "Contextual $*PKGDECL not found"
    set $P5031, $P5033
  vivi_23305208:
    set $P5026, $P5031
  fallback5204:
    set $S5002, $P5026
    set $P5025, fb_tmp_402[$S5002]
    set $P5035, $P5025
    goto if2324_end5198
  if2324_else5197:
    null $P5034
    set $P5035, $P5034
  if2324_end5198:
    unless_null $P5035, vivi_23315209
    nqp_get_sc_object $P5036, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5035, $P5036
  vivi_23315209:
    set $P103, $P5035
    unless_null _lex_param_1, fallback5214
    nqp_get_sc_object $P5037, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5037
  fallback5214:
    set fb_tmp_405, _lex_param_1
    repr_defined $I5006, fb_tmp_405
    unless $I5006 goto if2333_else5212 
    set $P5038, fb_tmp_405["blockoid"]
    set $P5040, $P5038
    goto if2333_end5213
  if2333_else5212:
    null $P5039
    set $P5040, $P5039
  if2333_end5213:
    unless_null $P5040, vivi_23345215
    nqp_get_sc_object $P5041, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5040, $P5041
  vivi_23345215:
    unless $P5040 goto if2332_else5210 
.annotate 'line', 2181
.annotate 'line', 2182
    unless_null _lex_param_1, fallback5218
    nqp_get_sc_object $P5042, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5042
  fallback5218:
    set fb_tmp_406, _lex_param_1
    repr_defined $I5007, fb_tmp_406
    unless $I5007 goto if2335_else5216 
    set $P5043, fb_tmp_406["blockoid"]
    set $P5045, $P5043
    goto if2335_end5217
  if2335_else5216:
    null $P5044
    set $P5045, $P5044
  if2335_end5217:
    unless_null $P5045, vivi_23365219
    nqp_get_sc_object $P5046, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5045, $P5046
  vivi_23365219:
    $P5047 = $P5045."ast"()
    set $P104, $P5047
    goto if2332_end5211
  if2332_else5210:
.annotate 'line', 2184
.annotate 'line', 2185
    find_dynamic_lex $P5048, "$*W"
    unless_null $P5048, fallback5220
    nqp_get_sc_object $P5050, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5049, $P5050
    set fb_tmp_407, $P5049
    repr_defined $I5008, fb_tmp_407
    unless $I5008 goto if2337_else5221 
    set $P5051, fb_tmp_407["$W"]
    set $P5053, $P5051
    goto if2337_end5222
  if2337_else5221:
    null $P5052
    set $P5053, $P5052
  if2337_end5222:
    unless_null $P5053, vivi_23385223
    nqp_get_sc_object $P5054, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5053, $P5054
  vivi_23385223:
    unless_null $P5053, vivi_23395224
    die "Contextual $*W not found"
    box $P5055, "Contextual $*W not found"
    set $P5053, $P5055
  vivi_23395224:
    set $P5048, $P5053
  fallback5220:
    $P5056 = $P5048."pop_lexpad"()
    set $P104, $P5056
.annotate 'line', 2186
    unless_null _lex_param_1, fallback5227
    nqp_get_sc_object $P5057, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5057
  fallback5227:
    set fb_tmp_408, _lex_param_1
    repr_defined $I5009, fb_tmp_408
    unless $I5009 goto if2340_else5225 
    set $P5058, fb_tmp_408["statementlist"]
    set $P5060, $P5058
    goto if2340_end5226
  if2340_else5225:
    null $P5059
    set $P5060, $P5059
  if2340_end5226:
    unless_null $P5060, vivi_23415228
    nqp_get_sc_object $P5061, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5060, $P5061
  vivi_23415228:
    $P5062 = $P5060."ast"()
    $P5063 = $P104."push"($P5062)
  if2332_end5211:
    can $I5010, $P103, "parametric"
    box $P5066, $I5010
    set $P5065, $P5066
    unless $I5010 goto if2343_end5232 
.annotate 'line', 2193
    $P5064 = $P103."parametric"($P103)
    set $P5065, $P5064
  if2343_end5232:
    unless $P5065 goto if2342_else5229 
    .const 'Sub' $P5067 = 'cuid_466_1361734139.417' 
    capture_lex $P5067
    $P5068 = $P5067()
    goto if2342_end5230
  if2342_else5229:
.annotate 'line', 2210
.annotate 'line', 2211
    $P104."blocktype"("immediate")
.annotate 'line', 2212
    find_dynamic_lex $P5069, "$*W"
    unless_null $P5069, fallback5282
    nqp_get_sc_object $P5071, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5070, $P5071
    set fb_tmp_419, $P5070
    repr_defined $I5011, fb_tmp_419
    unless $I5011 goto if2371_else5283 
    set $P5072, fb_tmp_419["$W"]
    set $P5074, $P5072
    goto if2371_end5284
  if2371_else5283:
    null $P5073
    set $P5074, $P5073
  if2371_end5284:
    unless_null $P5074, vivi_23725285
    nqp_get_sc_object $P5075, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5074, $P5075
  vivi_23725285:
    unless_null $P5074, vivi_23735286
    die "Contextual $*W not found"
    box $P5076, "Contextual $*W not found"
    set $P5074, $P5076
  vivi_23735286:
    set $P5069, $P5074
  fallback5282:
    find_dynamic_lex $P5077, "$*PACKAGE"
    unless_null $P5077, fallback5287
    nqp_get_sc_object $P5079, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5078, $P5079
    set fb_tmp_420, $P5078
    repr_defined $I5012, fb_tmp_420
    unless $I5012 goto if2374_else5288 
    set $P5080, fb_tmp_420["$PACKAGE"]
    set $P5082, $P5080
    goto if2374_end5289
  if2374_else5288:
    null $P5081
    set $P5082, $P5081
  if2374_end5289:
    unless_null $P5082, vivi_23755290
    nqp_get_sc_object $P5083, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5082, $P5083
  vivi_23755290:
    unless_null $P5082, vivi_23765291
    die "Contextual $*PACKAGE not found"
    box $P5084, "Contextual $*PACKAGE not found"
    set $P5082, $P5084
  vivi_23765291:
    set $P5077, $P5082
  fallback5287:
    $P5069."install_lexical_symbol"($P104, "$?PACKAGE", $P5077)
.annotate 'line', 2213
    find_dynamic_lex $P5085, "$*W"
    unless_null $P5085, fallback5292
    nqp_get_sc_object $P5087, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5086, $P5087
    set fb_tmp_421, $P5086
    repr_defined $I5013, fb_tmp_421
    unless $I5013 goto if2377_else5293 
    set $P5088, fb_tmp_421["$W"]
    set $P5090, $P5088
    goto if2377_end5294
  if2377_else5293:
    null $P5089
    set $P5090, $P5089
  if2377_end5294:
    unless_null $P5090, vivi_23785295
    nqp_get_sc_object $P5091, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5090, $P5091
  vivi_23785295:
    unless_null $P5090, vivi_23795296
    die "Contextual $*W not found"
    box $P5092, "Contextual $*W not found"
    set $P5090, $P5092
  vivi_23795296:
    set $P5085, $P5090
  fallback5292:
    find_dynamic_lex $P5093, "$*PACKAGE"
    unless_null $P5093, fallback5297
    nqp_get_sc_object $P5095, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5094, $P5095
    set fb_tmp_422, $P5094
    repr_defined $I5014, fb_tmp_422
    unless $I5014 goto if2380_else5298 
    set $P5096, fb_tmp_422["$PACKAGE"]
    set $P5098, $P5096
    goto if2380_end5299
  if2380_else5298:
    null $P5097
    set $P5098, $P5097
  if2380_end5299:
    unless_null $P5098, vivi_23815300
    nqp_get_sc_object $P5099, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5098, $P5099
  vivi_23815300:
    unless_null $P5098, vivi_23825301
    die "Contextual $*PACKAGE not found"
    box $P5100, "Contextual $*PACKAGE not found"
    set $P5098, $P5100
  vivi_23825301:
    set $P5093, $P5098
  fallback5297:
    $P5101 = $P5085."install_lexical_symbol"($P104, "$?CLASS", $P5093)
  if2342_end5230:
    unless_null _lex_param_1, fallback5306
    nqp_get_sc_object $P5102, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5102
  fallback5306:
    set fb_tmp_423, _lex_param_1
    repr_defined $I5015, fb_tmp_423
    unless $I5015 goto if2384_else5304 
    set $P5103, fb_tmp_423["parent"]
    set $P5105, $P5103
    goto if2384_end5305
  if2384_else5304:
    null $P5104
    set $P5105, $P5104
  if2384_end5305:
    unless_null $P5105, vivi_23855307
    nqp_get_sc_object $P5106, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5105, $P5106
  vivi_23855307:
    unless $P5105 goto if2383_else5302 
    .const 'Sub' $P5107 = 'cuid_467_1361734139.417' 
    capture_lex $P5107
    $P5108 = $P5107()
    goto if2383_end5303
  if2383_else5302:
    can $I5016, $P103, "set_default_parent"
    box $P5112, $I5016
    set $P5111, $P5112
    unless $I5016 goto if2408_end5345 
    .const 'Sub' $P5109 = 'cuid_468_1361734139.417' 
    capture_lex $P5109
    $P5110 = $P5109()
    set $P5111, $P5110
  if2408_end5345:
  if2383_end5303:
    unless_null _lex_param_1, fallback5372
    nqp_get_sc_object $P5113, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5113
  fallback5372:
    set fb_tmp_436, _lex_param_1
    repr_defined $I5017, fb_tmp_436
    unless $I5017 goto if2423_else5370 
    set $P5114, fb_tmp_436["role"]
    set $P5116, $P5114
    goto if2423_end5371
  if2423_else5370:
    null $P5115
    set $P5116, $P5115
  if2423_end5371:
    unless_null $P5116, vivi_24245373
    nqp_get_sc_object $P5117, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5116, $P5117
  vivi_24245373:
    unless $P5116 goto if2422_end5369 
.annotate 'line', 2238
    unless_null _lex_param_1, fallback5376
    nqp_get_sc_object $P5121, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5121
  fallback5376:
    set fb_tmp_437, _lex_param_1
    repr_defined $I5018, fb_tmp_437
    unless $I5018 goto if2425_else5374 
    set $P5122, fb_tmp_437["role"]
    set $P5124, $P5122
    goto if2425_end5375
  if2425_else5374:
    null $P5123
    set $P5124, $P5123
  if2425_end5375:
    unless_null $P5124, vivi_24265377
    nqp_get_sc_object $P5125, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5124, $P5125
  vivi_24265377:
    set $P5118, $P5124
    iter $P5120, $P5124
  for_next5400:
    unless $P5120, for_done5402
    shift $P5127, $P5120
  for_redo5401:
    .const 'Sub' $P5126 = 'cuid_469_1361734139.417' 
    capture_lex $P5126
    $P5118 = $P5126($P5127)
    goto for_next5400
  for_done5402:
  if2422_end5369:
.annotate 'line', 2256
    find_dynamic_lex $P5128, "$*W"
    unless_null $P5128, fallback5403
    nqp_get_sc_object $P5130, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5129, $P5130
    set fb_tmp_442, $P5129
    repr_defined $I5019, fb_tmp_442
    unless $I5019 goto if2441_else5404 
    set $P5131, fb_tmp_442["$W"]
    set $P5133, $P5131
    goto if2441_end5405
  if2441_else5404:
    null $P5132
    set $P5133, $P5132
  if2441_end5405:
    unless_null $P5133, vivi_24425406
    nqp_get_sc_object $P5134, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5133, $P5134
  vivi_24425406:
    unless_null $P5133, vivi_24435407
    die "Contextual $*W not found"
    box $P5135, "Contextual $*W not found"
    set $P5133, $P5135
  vivi_24435407:
    set $P5128, $P5133
  fallback5403:
    find_dynamic_lex $P5136, "$*PACKAGE"
    unless_null $P5136, fallback5408
    nqp_get_sc_object $P5138, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5137, $P5138
    set fb_tmp_443, $P5137
    repr_defined $I5020, fb_tmp_443
    unless $I5020 goto if2444_else5409 
    set $P5139, fb_tmp_443["$PACKAGE"]
    set $P5141, $P5139
    goto if2444_end5410
  if2444_else5409:
    null $P5140
    set $P5141, $P5140
  if2444_end5410:
    unless_null $P5141, vivi_24455411
    nqp_get_sc_object $P5142, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5141, $P5142
  vivi_24455411:
    unless_null $P5141, vivi_24465412
    die "Contextual $*PACKAGE not found"
    box $P5143, "Contextual $*PACKAGE not found"
    set $P5141, $P5143
  vivi_24465412:
    set $P5136, $P5141
  fallback5408:
    $P5128."pkg_compose"($P5136)
    find_dynamic_lex $P5144, "$*PKGDECL"
    unless_null $P5144, fallback5417
    nqp_get_sc_object $P5146, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5145, $P5146
    set fb_tmp_444, $P5145
    repr_defined $I5022, fb_tmp_444
    unless $I5022 goto if2449_else5418 
    set $P5147, fb_tmp_444["$PKGDECL"]
    set $P5149, $P5147
    goto if2449_end5419
  if2449_else5418:
    null $P5148
    set $P5149, $P5148
  if2449_end5419:
    unless_null $P5149, vivi_24505420
    nqp_get_sc_object $P5150, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5149, $P5150
  vivi_24505420:
    unless_null $P5149, vivi_24515421
    die "Contextual $*PKGDECL not found"
    box $P5151, "Contextual $*PKGDECL not found"
    set $P5149, $P5151
  vivi_24515421:
    set $P5144, $P5149
  fallback5417:
    set $S5003, $P5144
    iseq $I5021, $S5003, "grammar"
    set $I5025, $I5021
    unless $I5021 goto if2448_end5416 
    find_dynamic_lex $P5152, "$*PACKAGE"
    unless_null $P5152, fallback5422
    nqp_get_sc_object $P5154, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5153, $P5154
    set fb_tmp_445, $P5153
    repr_defined $I5024, fb_tmp_445
    unless $I5024 goto if2452_else5423 
    set $P5155, fb_tmp_445["$PACKAGE"]
    set $P5157, $P5155
    goto if2452_end5424
  if2452_else5423:
    null $P5156
    set $P5157, $P5156
  if2452_end5424:
    unless_null $P5157, vivi_24535425
    nqp_get_sc_object $P5158, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5157, $P5158
  vivi_24535425:
    unless_null $P5157, vivi_24545426
    die "Contextual $*PACKAGE not found"
    box $P5159, "Contextual $*PACKAGE not found"
    set $P5157, $P5159
  vivi_24545426:
    set $P5152, $P5157
  fallback5422:
    can $I5023, $P5152, "!precompute_nfas"
    set $I5025, $I5023
  if2448_end5416:
    unless $I5025 goto if2447_end5414 
.annotate 'line', 2259
.annotate 'line', 2260
    find_dynamic_lex $P5160, "$*PACKAGE"
    unless_null $P5160, fallback5427
    nqp_get_sc_object $P5162, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5161, $P5162
    set fb_tmp_446, $P5161
    repr_defined $I5026, fb_tmp_446
    unless $I5026 goto if2455_else5428 
    set $P5163, fb_tmp_446["$PACKAGE"]
    set $P5165, $P5163
    goto if2455_end5429
  if2455_else5428:
    null $P5164
    set $P5165, $P5164
  if2455_end5429:
    unless_null $P5165, vivi_24565430
    nqp_get_sc_object $P5166, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5165, $P5166
  vivi_24565430:
    unless_null $P5165, vivi_24575431
    die "Contextual $*PACKAGE not found"
    box $P5167, "Contextual $*PACKAGE not found"
    set $P5165, $P5167
  vivi_24575431:
    set $P5160, $P5165
  fallback5427:
    $P5168 = $P5160."!precompute_nfas"()
  if2447_end5414:
    unless_null _lex_param_1, fallback5436
    nqp_get_sc_object $P5169, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5169
  fallback5436:
    set fb_tmp_447, _lex_param_1
    repr_defined $I5027, fb_tmp_447
    unless $I5027 goto if2459_else5434 
    set $P5170, fb_tmp_447["export"]
    set $P5172, $P5170
    goto if2459_end5435
  if2459_else5434:
    null $P5171
    set $P5172, $P5171
  if2459_end5435:
    unless_null $P5172, vivi_24605437
    nqp_get_sc_object $P5173, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5172, $P5173
  vivi_24605437:
    unless $P5172 goto if2458_end5433 
.annotate 'line', 2264
    find_dynamic_lex $P5176, "$*EXPORT"
    unless_null $P5176, fallback5440
    nqp_get_sc_object $P5178, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5177, $P5178
    set fb_tmp_449, $P5177
    repr_defined $I5029, fb_tmp_449
    unless $I5029 goto if2462_else5441 
    set $P5179, fb_tmp_449["$EXPORT"]
    set $P5181, $P5179
    goto if2462_end5442
  if2462_else5441:
    null $P5180
    set $P5181, $P5180
  if2462_end5442:
    unless_null $P5181, vivi_24635443
    nqp_get_sc_object $P5182, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5181, $P5182
  vivi_24635443:
    unless_null $P5181, vivi_24645444
    die "Contextual $*EXPORT not found"
    box $P5183, "Contextual $*EXPORT not found"
    set $P5181, $P5183
  vivi_24645444:
    set $P5176, $P5181
  fallback5440:
    get_who $P5175, $P5176
    set fb_tmp_448, $P5175
    repr_defined $I5028, fb_tmp_448
    unless $I5028 goto if2461_else5438 
    set $P5184, fb_tmp_448["DEFAULT"]
    set $P5186, $P5184
    goto if2461_end5439
  if2461_else5438:
    null $P5185
    set $P5186, $P5185
  if2461_end5439:
    unless_null $P5186, vivi_24655445
    nqp_get_sc_object $P5187, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5186, $P5187
  vivi_24655445:
    get_who $P5174, $P5186
    set $S5004, $P102
    find_dynamic_lex $P5188, "$*PACKAGE"
    unless_null $P5188, fallback5446
    nqp_get_sc_object $P5190, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5189, $P5190
    set fb_tmp_450, $P5189
    repr_defined $I5030, fb_tmp_450
    unless $I5030 goto if2466_else5447 
    set $P5191, fb_tmp_450["$PACKAGE"]
    set $P5193, $P5191
    goto if2466_end5448
  if2466_else5447:
    null $P5192
    set $P5193, $P5192
  if2466_end5448:
    unless_null $P5193, vivi_24675449
    nqp_get_sc_object $P5194, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5193, $P5194
  vivi_24675449:
    unless_null $P5193, vivi_24685450
    die "Contextual $*PACKAGE not found"
    box $P5195, "Contextual $*PACKAGE not found"
    set $P5193, $P5195
  vivi_24685450:
    set $P5188, $P5193
  fallback5446:
    set $P5174[$S5004], $P5188
  if2458_end5433:
.annotate 'line', 2268
    $P5196 = _lex_param_1."!make"($P104)
    .return ($P5196) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_466_1361734139.417") :anon :lex :outer("cuid_295_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2193
    .const 'Sub' $P5089 = 'cuid_465_1361734139.417' 
    capture_lex $P5089 
    .lex "$params", $P101 
    .local pmc fb_tmp_409 
    .local pmc fb_tmp_410 
    .local pmc fb_tmp_411 
    .local pmc fb_tmp_412 
    .local pmc fb_tmp_413 
    .local pmc fb_tmp_414 
    .local pmc fb_tmp_415 
    .local pmc fb_tmp_416 
    .local pmc fb_tmp_417 
    .local pmc fb_tmp_418 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
.annotate 'line', 2194
    find_lex $P5002, "$past"
    $P5002."blocktype"("declaration")
.annotate 'line', 2195
    nqp_get_sc_object $P5003, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 93
.annotate 'line', 2196
    nqp_get_sc_object $P5004, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5005 = $P5004."new"("$?CLASS" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    $P5006 = $P5003."new"($P5005)
    set $P101, $P5006
    find_lex $P5007, "$/"
    unless_null $P5007, fallback5237
    nqp_get_sc_object $P5008, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5007, $P5008
  fallback5237:
    set fb_tmp_409, $P5007
    repr_defined $I5001, fb_tmp_409
    unless $I5001 goto if2345_else5235 
    set $P5009, fb_tmp_409["role_params"]
    set $P5011, $P5009
    goto if2345_end5236
  if2345_else5235:
    null $P5010
    set $P5011, $P5010
  if2345_end5236:
    unless_null $P5011, vivi_23465238
    nqp_get_sc_object $P5012, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5011, $P5012
  vivi_23465238:
    unless $P5011 goto if2344_end5234 
.annotate 'line', 2198
    find_lex $P5016, "$/"
    unless_null $P5016, fallback5245
    nqp_get_sc_object $P5017, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5016, $P5017
  fallback5245:
    set fb_tmp_412, $P5016
    repr_defined $I5004, fb_tmp_412
    unless $I5004 goto if2349_else5243 
    set $P5018, fb_tmp_412["role_params"]
    set $P5020, $P5018
    goto if2349_end5244
  if2349_else5243:
    null $P5019
    set $P5020, $P5019
  if2349_end5244:
    unless_null $P5020, vivi_23505246
    nqp_get_sc_object $P5021, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5020, $P5021
  vivi_23505246:
    set fb_tmp_411, $P5020
    repr_defined $I5003, fb_tmp_411
    unless $I5003 goto if2348_else5241 
    set $P5022, fb_tmp_411[0]
    set $P5024, $P5022
    goto if2348_end5242
  if2348_else5241:
    null $P5023
    set $P5024, $P5023
  if2348_end5242:
    unless_null $P5024, vivi_23515247
    nqp_get_sc_object $P5025, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5024, $P5025
  vivi_23515247:
    set fb_tmp_410, $P5024
    repr_defined $I5002, fb_tmp_410
    unless $I5002 goto if2347_else5239 
    set $P5026, fb_tmp_410["variable"]
    set $P5028, $P5026
    goto if2347_end5240
  if2347_else5239:
    null $P5027
    set $P5028, $P5027
  if2347_end5240:
    unless_null $P5028, vivi_23525248
    nqp_get_sc_object $P5029, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5028, $P5029
  vivi_23525248:
    set $P5013, $P5028
    iter $P5015, $P5028
  for_next5249:
    unless $P5015, for_done5251
    shift $P5031, $P5015
  for_redo5250:
    .const 'Sub' $P5030 = 'cuid_465_1361734139.417' 
    capture_lex $P5030
    $P5013 = $P5030($P5031)
    goto for_next5249
  for_done5251:
  if2344_end5234:
.annotate 'line', 2203
    find_lex $P5032, "$past"
    $P5032."unshift"($P101)
.annotate 'line', 2204
    find_lex $P5033, "$past"
    nqp_get_sc_object $P5034, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    $P5035 = $P5034."new"("curlexpad" :named("op"))
    $P5033."push"($P5035)
.annotate 'line', 2205
    find_lex $P5036, "$past"
    $P5036."symbol"("$?CLASS", "lexical" :named("scope"))
.annotate 'line', 2206
    find_dynamic_lex $P5037, "$*W"
    unless_null $P5037, fallback5252
    nqp_get_sc_object $P5039, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5038, $P5039
    set fb_tmp_413, $P5038
    repr_defined $I5005, fb_tmp_413
    unless $I5005 goto if2353_else5253 
    set $P5040, fb_tmp_413["$W"]
    set $P5042, $P5040
    goto if2353_end5254
  if2353_else5253:
    null $P5041
    set $P5042, $P5041
  if2353_end5254:
    unless_null $P5042, vivi_23545255
    nqp_get_sc_object $P5043, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5042, $P5043
  vivi_23545255:
    unless_null $P5042, vivi_23555256
    die "Contextual $*W not found"
    box $P5044, "Contextual $*W not found"
    set $P5042, $P5044
  vivi_23555256:
    set $P5037, $P5042
  fallback5252:
    find_dynamic_lex $P5045, "$*PACKAGE"
    unless_null $P5045, fallback5257
    nqp_get_sc_object $P5047, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5046, $P5047
    set fb_tmp_414, $P5046
    repr_defined $I5006, fb_tmp_414
    unless $I5006 goto if2356_else5258 
    set $P5048, fb_tmp_414["$PACKAGE"]
    set $P5050, $P5048
    goto if2356_end5259
  if2356_else5258:
    null $P5049
    set $P5050, $P5049
  if2356_end5259:
    unless_null $P5050, vivi_23575260
    nqp_get_sc_object $P5051, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5050, $P5051
  vivi_23575260:
    unless_null $P5050, vivi_23585261
    die "Contextual $*PACKAGE not found"
    box $P5052, "Contextual $*PACKAGE not found"
    set $P5050, $P5052
  vivi_23585261:
    set $P5045, $P5050
  fallback5257:
    find_lex $P5053, "$past"
    $P5037."pkg_set_body_block"($P5045, $P5053)
.annotate 'line', 2207
    find_dynamic_lex $P5054, "$*W"
    unless_null $P5054, fallback5262
    nqp_get_sc_object $P5056, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5055, $P5056
    set fb_tmp_415, $P5055
    repr_defined $I5007, fb_tmp_415
    unless $I5007 goto if2359_else5263 
    set $P5057, fb_tmp_415["$W"]
    set $P5059, $P5057
    goto if2359_end5264
  if2359_else5263:
    null $P5058
    set $P5059, $P5058
  if2359_end5264:
    unless_null $P5059, vivi_23605265
    nqp_get_sc_object $P5060, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5059, $P5060
  vivi_23605265:
    unless_null $P5059, vivi_23615266
    die "Contextual $*W not found"
    box $P5061, "Contextual $*W not found"
    set $P5059, $P5061
  vivi_23615266:
    set $P5054, $P5059
  fallback5262:
    find_lex $P5062, "$past"
    find_dynamic_lex $P5063, "$*PACKAGE"
    unless_null $P5063, fallback5267
    nqp_get_sc_object $P5065, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5064, $P5065
    set fb_tmp_416, $P5064
    repr_defined $I5008, fb_tmp_416
    unless $I5008 goto if2362_else5268 
    set $P5066, fb_tmp_416["$PACKAGE"]
    set $P5068, $P5066
    goto if2362_end5269
  if2362_else5268:
    null $P5067
    set $P5068, $P5067
  if2362_end5269:
    unless_null $P5068, vivi_23635270
    nqp_get_sc_object $P5069, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5068, $P5069
  vivi_23635270:
    unless_null $P5068, vivi_23645271
    die "Contextual $*PACKAGE not found"
    box $P5070, "Contextual $*PACKAGE not found"
    set $P5068, $P5070
  vivi_23645271:
    set $P5063, $P5068
  fallback5267:
    $P5054."install_lexical_symbol"($P5062, "$?PACKAGE", $P5063)
.annotate 'line', 2208
    find_dynamic_lex $P5071, "$*W"
    unless_null $P5071, fallback5272
    nqp_get_sc_object $P5073, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5072, $P5073
    set fb_tmp_417, $P5072
    repr_defined $I5009, fb_tmp_417
    unless $I5009 goto if2365_else5273 
    set $P5074, fb_tmp_417["$W"]
    set $P5076, $P5074
    goto if2365_end5274
  if2365_else5273:
    null $P5075
    set $P5076, $P5075
  if2365_end5274:
    unless_null $P5076, vivi_23665275
    nqp_get_sc_object $P5077, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5076, $P5077
  vivi_23665275:
    unless_null $P5076, vivi_23675276
    die "Contextual $*W not found"
    box $P5078, "Contextual $*W not found"
    set $P5076, $P5078
  vivi_23675276:
    set $P5071, $P5076
  fallback5272:
    find_lex $P5079, "$past"
    find_dynamic_lex $P5080, "$*PACKAGE"
    unless_null $P5080, fallback5277
    nqp_get_sc_object $P5082, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5081, $P5082
    set fb_tmp_418, $P5081
    repr_defined $I5010, fb_tmp_418
    unless $I5010 goto if2368_else5278 
    set $P5083, fb_tmp_418["$PACKAGE"]
    set $P5085, $P5083
    goto if2368_end5279
  if2368_else5278:
    null $P5084
    set $P5085, $P5084
  if2368_end5279:
    unless_null $P5085, vivi_23695280
    nqp_get_sc_object $P5086, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5085, $P5086
  vivi_23695280:
    unless_null $P5085, vivi_23705281
    die "Contextual $*PACKAGE not found"
    box $P5087, "Contextual $*PACKAGE not found"
    set $P5085, $P5087
  vivi_23705281:
    set $P5080, $P5085
  fallback5277:
    $P5088 = $P5071."install_lexical_symbol"($P5079, "$?ROLE", $P5080)
    .return ($P5088) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_465_1361734139.417") :anon :lex :outer("cuid_466_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2199
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 2200
    find_lex $P5001, "$params"
    $P5002 = _lex_param_0."ast"()
    $P5003 = $P5001."push"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_467_1361734139.417") :anon :lex :outer("cuid_295_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2217
    .lex "$parent", $P101 
    .lex "$parent_found", $P102 
    .local pmc fb_tmp_424 
    .local pmc fb_tmp_425 
    .local pmc fb_tmp_426 
    .local pmc fb_tmp_427 
    .local pmc fb_tmp_428 
    .local pmc fb_tmp_429 
    .local pmc fb_tmp_430 
    .local pmc fb_tmp_431 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
    new $P5028, 'ExceptionHandler'
    set_label $P5028, catch_handler_23965324
    $P5028.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5028
.annotate 'line', 2220
.annotate 'line', 2221
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback5308
    nqp_get_sc_object $P5005, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5004, $P5005
    set fb_tmp_424, $P5004
    repr_defined $I5001, fb_tmp_424
    unless $I5001 goto if2386_else5309 
    set $P5006, fb_tmp_424["$W"]
    set $P5008, $P5006
    goto if2386_end5310
  if2386_else5309:
    null $P5007
    set $P5008, $P5007
  if2386_end5310:
    unless_null $P5008, vivi_23875311
    nqp_get_sc_object $P5009, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5008, $P5009
  vivi_23875311:
    unless_null $P5008, vivi_23885312
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_23885312:
    set $P5003, $P5008
  fallback5308:
    find_lex $P5012, "$/"
    unless_null $P5012, fallback5319
    nqp_get_sc_object $P5013, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5012, $P5013
  fallback5319:
    set fb_tmp_427, $P5012
    repr_defined $I5004, fb_tmp_427
    unless $I5004 goto if2391_else5317 
    set $P5014, fb_tmp_427["parent"]
    set $P5016, $P5014
    goto if2391_end5318
  if2391_else5317:
    null $P5015
    set $P5016, $P5015
  if2391_end5318:
    unless_null $P5016, vivi_23925320
    nqp_get_sc_object $P5017, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5016, $P5017
  vivi_23925320:
    set fb_tmp_426, $P5016
    repr_defined $I5003, fb_tmp_426
    unless $I5003 goto if2390_else5315 
    set $P5018, fb_tmp_426[0]
    set $P5020, $P5018
    goto if2390_end5316
  if2390_else5315:
    null $P5019
    set $P5020, $P5019
  if2390_end5316:
    unless_null $P5020, vivi_23935321
    nqp_get_sc_object $P5021, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5020, $P5021
  vivi_23935321:
    set fb_tmp_425, $P5020
    repr_defined $I5002, fb_tmp_425
    unless $I5002 goto if2389_else5313 
    set $P5022, fb_tmp_425["identifier"]
    set $P5024, $P5022
    goto if2389_end5314
  if2389_else5313:
    null $P5023
    set $P5024, $P5023
  if2389_end5314:
    unless_null $P5024, vivi_23945322
    nqp_get_sc_object $P5025, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5024, $P5025
  vivi_23945322:
    repr_clone $P5011, $P5024
    $P5026 = $P5003."find_sym"($P5011)
    set $P101, $P5026
    box $P5027, 1
    set $P102, $P5027
    set $P5029, $P102
    pop_eh 
    goto skip_handler_23955323
  catch_handler_23965324:
    .get_results ($P5028) 
    set $I10001, 1
    set $P5028["handled"], $I10001
    nqp_get_sc_object $P10001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    finalize $P5028
    pop_upto_eh $P5028
    pop_eh 
    set $P5029, $P10001
    goto skip_handler_23955323
  skip_handler_23955323:
    unless $P102 goto if2397_else5325 
.annotate 'line', 2224
.annotate 'line', 2225
    find_dynamic_lex $P5030, "$*W"
    unless_null $P5030, fallback5327
    nqp_get_sc_object $P5032, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5031, $P5032
    set fb_tmp_428, $P5031
    repr_defined $I5005, fb_tmp_428
    unless $I5005 goto if2398_else5328 
    set $P5033, fb_tmp_428["$W"]
    set $P5035, $P5033
    goto if2398_end5329
  if2398_else5328:
    null $P5034
    set $P5035, $P5034
  if2398_end5329:
    unless_null $P5035, vivi_23995330
    nqp_get_sc_object $P5036, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5035, $P5036
  vivi_23995330:
    unless_null $P5035, vivi_24005331
    die "Contextual $*W not found"
    box $P5037, "Contextual $*W not found"
    set $P5035, $P5037
  vivi_24005331:
    set $P5030, $P5035
  fallback5327:
    find_dynamic_lex $P5038, "$*PACKAGE"
    unless_null $P5038, fallback5332
    nqp_get_sc_object $P5040, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5039, $P5040
    set fb_tmp_429, $P5039
    repr_defined $I5006, fb_tmp_429
    unless $I5006 goto if2401_else5333 
    set $P5041, fb_tmp_429["$PACKAGE"]
    set $P5043, $P5041
    goto if2401_end5334
  if2401_else5333:
    null $P5042
    set $P5043, $P5042
  if2401_end5334:
    unless_null $P5043, vivi_24025335
    nqp_get_sc_object $P5044, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5043, $P5044
  vivi_24025335:
    unless_null $P5043, vivi_24035336
    die "Contextual $*PACKAGE not found"
    box $P5045, "Contextual $*PACKAGE not found"
    set $P5043, $P5045
  vivi_24035336:
    set $P5038, $P5043
  fallback5332:
    $P5046 = $P5030."pkg_add_parent_or_role"($P5038, "add_parent", $P101)
    set $P5060, $P5046
    goto if2397_end5326
  if2397_else5325:
.annotate 'line', 2227
.annotate 'line', 2228
    find_lex $P5047, "$/"
    $P5048 = $P5047."CURSOR"()
    find_lex $P5049, "$/"
    unless_null $P5049, fallback5341
    nqp_get_sc_object $P5050, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5049, $P5050
  fallback5341:
    set fb_tmp_431, $P5049
    repr_defined $I5008, fb_tmp_431
    unless $I5008 goto if2405_else5339 
    set $P5051, fb_tmp_431["parent"]
    set $P5053, $P5051
    goto if2405_end5340
  if2405_else5339:
    null $P5052
    set $P5053, $P5052
  if2405_end5340:
    unless_null $P5053, vivi_24065342
    nqp_get_sc_object $P5054, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5053, $P5054
  vivi_24065342:
    set fb_tmp_430, $P5053
    repr_defined $I5007, fb_tmp_430
    unless $I5007 goto if2404_else5337 
    set $P5055, fb_tmp_430[0]
    set $P5057, $P5055
    goto if2404_end5338
  if2404_else5337:
    null $P5056
    set $P5057, $P5056
  if2404_end5338:
    unless_null $P5057, vivi_24075343
    nqp_get_sc_object $P5058, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5057, $P5058
  vivi_24075343:
    set $S5003, $P5057
    concat $S5002, "Could not find parent class '", $S5003
    concat $S5001, $S5002, "'"
    $P5059 = $P5048."panic"($S5001)
    set $P5060, $P5059
  if2397_end5326:
    .return ($P5060) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_468_1361734139.417") :anon :lex :outer("cuid_295_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2231
    .lex "$default", $P101 
    .local pmc fb_tmp_432 
    .local pmc fb_tmp_433 
    .local pmc fb_tmp_434 
    .local pmc fb_tmp_435 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    find_dynamic_lex $P5002, "$*PKGDECL"
    unless_null $P5002, fallback5348
    nqp_get_sc_object $P5004, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5003, $P5004
    set fb_tmp_432, $P5003
    repr_defined $I5002, fb_tmp_432
    unless $I5002 goto if2410_else5349 
    set $P5005, fb_tmp_432["$PKGDECL"]
    set $P5007, $P5005
    goto if2410_end5350
  if2410_else5349:
    null $P5006
    set $P5007, $P5006
  if2410_end5350:
    unless_null $P5007, vivi_24115351
    nqp_get_sc_object $P5008, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5007, $P5008
  vivi_24115351:
    unless_null $P5007, vivi_24125352
    die "Contextual $*PKGDECL not found"
    box $P5009, "Contextual $*PKGDECL not found"
    set $P5007, $P5009
  vivi_24125352:
    set $P5002, $P5007
  fallback5348:
    set $S5001, $P5002
    iseq $I5001, $S5001, "grammar"
    unless $I5001 goto if2409_else5346 
    new $P5010, 'ResizablePMCArray'
    box $P5011, "NQPCursor"
    push $P5010, $P5011
    set $P5014, $P5010
    goto if2409_end5347
  if2409_else5346:
    new $P5012, 'ResizablePMCArray'
    box $P5013, "NQPMu"
    push $P5012, $P5013
    set $P5014, $P5012
  if2409_end5347:
    set $P101, $P5014
.annotate 'line', 2233
    find_dynamic_lex $P5015, "$*W"
    unless_null $P5015, fallback5353
    nqp_get_sc_object $P5017, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5016, $P5017
    set fb_tmp_433, $P5016
    repr_defined $I5003, fb_tmp_433
    unless $I5003 goto if2413_else5354 
    set $P5018, fb_tmp_433["$W"]
    set $P5020, $P5018
    goto if2413_end5355
  if2413_else5354:
    null $P5019
    set $P5020, $P5019
  if2413_end5355:
    unless_null $P5020, vivi_24145356
    nqp_get_sc_object $P5021, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5020, $P5021
  vivi_24145356:
    unless_null $P5020, vivi_24155357
    die "Contextual $*W not found"
    box $P5022, "Contextual $*W not found"
    set $P5020, $P5022
  vivi_24155357:
    set $P5015, $P5020
  fallback5353:
    find_dynamic_lex $P5023, "$*PACKAGE"
    unless_null $P5023, fallback5358
    nqp_get_sc_object $P5025, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5024, $P5025
    set fb_tmp_434, $P5024
    repr_defined $I5004, fb_tmp_434
    unless $I5004 goto if2416_else5359 
    set $P5026, fb_tmp_434["$PACKAGE"]
    set $P5028, $P5026
    goto if2416_end5360
  if2416_else5359:
    null $P5027
    set $P5028, $P5027
  if2416_end5360:
    unless_null $P5028, vivi_24175361
    nqp_get_sc_object $P5029, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5028, $P5029
  vivi_24175361:
    unless_null $P5028, vivi_24185362
    die "Contextual $*PACKAGE not found"
    box $P5030, "Contextual $*PACKAGE not found"
    set $P5028, $P5030
  vivi_24185362:
    set $P5023, $P5028
  fallback5358:
.annotate 'line', 2234
    find_dynamic_lex $P5031, "$*W"
    unless_null $P5031, fallback5363
    nqp_get_sc_object $P5033, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5032, $P5033
    set fb_tmp_435, $P5032
    repr_defined $I5005, fb_tmp_435
    unless $I5005 goto if2419_else5364 
    set $P5034, fb_tmp_435["$W"]
    set $P5036, $P5034
    goto if2419_end5365
  if2419_else5364:
    null $P5035
    set $P5036, $P5035
  if2419_end5365:
    unless_null $P5036, vivi_24205366
    nqp_get_sc_object $P5037, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5036, $P5037
  vivi_24205366:
    unless_null $P5036, vivi_24215367
    die "Contextual $*W not found"
    box $P5038, "Contextual $*W not found"
    set $P5036, $P5038
  vivi_24215367:
    set $P5031, $P5036
  fallback5363:
    $P5039 = $P5031."find_sym"($P101)
    $P5040 = $P5015."pkg_add_parent_or_role"($P5023, "set_default_parent", $P5039)
    .return ($P5040) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_469_1361734139.417") :anon :lex :outer("cuid_295_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2239
    .param pmc _lex_param_0 
    .lex "$role", $P101 
    .lex "$role_found", $P102 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_438 
    .local pmc fb_tmp_439 
    .local pmc fb_tmp_440 
    .local pmc fb_tmp_441 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
    new $P5018, 'ExceptionHandler'
    set_label $P5018, catch_handler_24335387
    $P5018.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5018
.annotate 'line', 2242
.annotate 'line', 2243
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback5378
    nqp_get_sc_object $P5005, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5004, $P5005
    set fb_tmp_438, $P5004
    repr_defined $I5001, fb_tmp_438
    unless $I5001 goto if2427_else5379 
    set $P5006, fb_tmp_438["$W"]
    set $P5008, $P5006
    goto if2427_end5380
  if2427_else5379:
    null $P5007
    set $P5008, $P5007
  if2427_end5380:
    unless_null $P5008, vivi_24285381
    nqp_get_sc_object $P5009, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5008, $P5009
  vivi_24285381:
    unless_null $P5008, vivi_24295382
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_24295382:
    set $P5003, $P5008
  fallback5378:
    set fb_tmp_439, _lex_param_0
    repr_defined $I5002, fb_tmp_439
    unless $I5002 goto if2430_else5383 
    set $P5012, fb_tmp_439["identifier"]
    set $P5014, $P5012
    goto if2430_end5384
  if2430_else5383:
    null $P5013
    set $P5014, $P5013
  if2430_end5384:
    unless_null $P5014, vivi_24315385
    nqp_get_sc_object $P5015, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5014, $P5015
  vivi_24315385:
    repr_clone $P5011, $P5014
    $P5016 = $P5003."find_sym"($P5011)
    set $P101, $P5016
    box $P5017, 1
    set $P102, $P5017
    set $P5019, $P102
    pop_eh 
    goto skip_handler_24325386
  catch_handler_24335387:
    .get_results ($P5018) 
    set $I10001, 1
    set $P5018["handled"], $I10001
    nqp_get_sc_object $P10001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    finalize $P5018
    pop_upto_eh $P5018
    pop_eh 
    set $P5019, $P10001
    goto skip_handler_24325386
  skip_handler_24325386:
    unless $P102 goto if2434_else5388 
.annotate 'line', 2246
.annotate 'line', 2247
    find_dynamic_lex $P5020, "$*W"
    unless_null $P5020, fallback5390
    nqp_get_sc_object $P5022, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5021, $P5022
    set fb_tmp_440, $P5021
    repr_defined $I5003, fb_tmp_440
    unless $I5003 goto if2435_else5391 
    set $P5023, fb_tmp_440["$W"]
    set $P5025, $P5023
    goto if2435_end5392
  if2435_else5391:
    null $P5024
    set $P5025, $P5024
  if2435_end5392:
    unless_null $P5025, vivi_24365393
    nqp_get_sc_object $P5026, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5025, $P5026
  vivi_24365393:
    unless_null $P5025, vivi_24375394
    die "Contextual $*W not found"
    box $P5027, "Contextual $*W not found"
    set $P5025, $P5027
  vivi_24375394:
    set $P5020, $P5025
  fallback5390:
    find_dynamic_lex $P5028, "$*PACKAGE"
    unless_null $P5028, fallback5395
    nqp_get_sc_object $P5030, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5029, $P5030
    set fb_tmp_441, $P5029
    repr_defined $I5004, fb_tmp_441
    unless $I5004 goto if2438_else5396 
    set $P5031, fb_tmp_441["$PACKAGE"]
    set $P5033, $P5031
    goto if2438_end5397
  if2438_else5396:
    null $P5032
    set $P5033, $P5032
  if2438_end5397:
    unless_null $P5033, vivi_24395398
    nqp_get_sc_object $P5034, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5033, $P5034
  vivi_24395398:
    unless_null $P5033, vivi_24405399
    die "Contextual $*PACKAGE not found"
    box $P5035, "Contextual $*PACKAGE not found"
    set $P5033, $P5035
  vivi_24405399:
    set $P5028, $P5033
  fallback5395:
    $P5036 = $P5020."pkg_add_parent_or_role"($P5028, "add_role", $P101)
    set $P5040, $P5036
    goto if2434_end5389
  if2434_else5388:
.annotate 'line', 2249
.annotate 'line', 2250
    find_lex $P5037, "$/"
    $P5038 = $P5037."CURSOR"()
    set $S5003, _lex_param_0
    concat $S5002, "Could not find role '", $S5003
    concat $S5001, $S5002, "'"
    $P5039 = $P5038."panic"($S5001)
    set $P5040, $P5039
  if2434_end5389:
    .return ($P5040) 
.end
.HLL "nqp"
.namespace []
.sub "role_params" :subid("cuid_296_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2271
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5011 = 'cuid_470_1361734139.417' 
    capture_lex $P5011 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_451 
    unless_null _lex_param_1, fallback5453
    nqp_get_sc_object $P5004, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5004
  fallback5453:
    set fb_tmp_451, _lex_param_1
    repr_defined $I5001, fb_tmp_451
    unless $I5001 goto if2469_else5451 
    set $P5005, fb_tmp_451["variable"]
    set $P5007, $P5005
    goto if2469_end5452
  if2469_else5451:
    null $P5006
    set $P5007, $P5006
  if2469_end5452:
    unless_null $P5007, vivi_24705454
    nqp_get_sc_object $P5008, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5007, $P5008
  vivi_24705454:
    set $P5001, $P5007
    iter $P5003, $P5007
  for_next5460:
    unless $P5003, for_done5462
    shift $P5010, $P5003
  for_redo5461:
    .const 'Sub' $P5009 = 'cuid_470_1361734139.417' 
    capture_lex $P5009
    $P5001 = $P5009($P5010)
    goto for_next5460
  for_done5462:
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_470_1361734139.417") :anon :lex :outer("cuid_296_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2272
    .param pmc _lex_param_0 
    .lex "$var", $P101 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_452 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
.annotate 'line', 2273
    $P5002 = _lex_param_0."ast"()
    set $P101, $P5002
.annotate 'line', 2274
    $P101."scope"("lexical")
.annotate 'line', 2275
    $P101."decl"("param")
.annotate 'line', 2276
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback5455
    nqp_get_sc_object $P5005, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5004, $P5005
    set fb_tmp_452, $P5004
    repr_defined $I5001, fb_tmp_452
    unless $I5001 goto if2471_else5456 
    set $P5006, fb_tmp_452["$W"]
    set $P5008, $P5006
    goto if2471_end5457
  if2471_else5456:
    null $P5007
    set $P5008, $P5007
  if2471_end5457:
    unless_null $P5008, vivi_24725458
    nqp_get_sc_object $P5009, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5008, $P5009
  vivi_24725458:
    unless_null $P5008, vivi_24735459
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_24735459:
    set $P5003, $P5008
  fallback5455:
    $P5011 = $P5003."cur_lexpad"()
    $P5012 = $P101."name"()
    $P5013 = $P5011."symbol"($P5012, "lexical" :named("scope"))
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<my>" :subid("cuid_297_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2280
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_453 
    unless_null _lex_param_1, fallback5465
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback5465:
    set fb_tmp_453, _lex_param_1
    repr_defined $I5001, fb_tmp_453
    unless $I5001 goto if2474_else5463 
    set $P5002, fb_tmp_453["scoped"]
    set $P5004, $P5002
    goto if2474_end5464
  if2474_else5463:
    null $P5003
    set $P5004, $P5003
  if2474_end5464:
    unless_null $P5004, vivi_24755466
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_24755466:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<our>" :subid("cuid_298_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2281
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_454 
    unless_null _lex_param_1, fallback5469
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback5469:
    set fb_tmp_454, _lex_param_1
    repr_defined $I5001, fb_tmp_454
    unless $I5001 goto if2476_else5467 
    set $P5002, fb_tmp_454["scoped"]
    set $P5004, $P5002
    goto if2476_end5468
  if2476_else5467:
    null $P5003
    set $P5004, $P5003
  if2476_end5468:
    unless_null $P5004, vivi_24775470
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_24775470:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<has>" :subid("cuid_299_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2282
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_455 
    unless_null _lex_param_1, fallback5473
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback5473:
    set fb_tmp_455, _lex_param_1
    repr_defined $I5001, fb_tmp_455
    unless $I5001 goto if2478_else5471 
    set $P5002, fb_tmp_455["scoped"]
    set $P5004, $P5002
    goto if2478_end5472
  if2478_else5471:
    null $P5003
    set $P5004, $P5003
  if2478_end5472:
    unless_null $P5004, vivi_24795474
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_24795474:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "scoped" :subid("cuid_300_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2284
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_456 
    .local pmc fb_tmp_457 
    .local pmc fb_tmp_458 
    .local pmc fb_tmp_459 
    .local pmc fb_tmp_460 
.annotate 'line', 2285
    unless_null _lex_param_1, fallback5479
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback5479:
    set fb_tmp_456, _lex_param_1
    repr_defined $I5001, fb_tmp_456
    unless $I5001 goto if2481_else5477 
    set $P5002, fb_tmp_456["declarator"]
    set $P5004, $P5002
    goto if2481_end5478
  if2481_else5477:
    null $P5003
    set $P5004, $P5003
  if2481_end5478:
    unless_null $P5004, vivi_24825480
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_24825480:
    unless $P5004 goto if2480_else5475 
    unless_null _lex_param_1, fallback5483
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5006
  fallback5483:
    set fb_tmp_457, _lex_param_1
    repr_defined $I5002, fb_tmp_457
    unless $I5002 goto if2483_else5481 
    set $P5007, fb_tmp_457["declarator"]
    set $P5009, $P5007
    goto if2483_end5482
  if2483_else5481:
    null $P5008
    set $P5009, $P5008
  if2483_end5482:
    unless_null $P5009, vivi_24845484
    nqp_get_sc_object $P5010, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5009, $P5010
  vivi_24845484:
    $P5011 = $P5009."ast"()
    set $P5030, $P5011
    goto if2480_end5476
  if2480_else5475:
    unless_null _lex_param_1, fallback5489
    nqp_get_sc_object $P5012, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5012
  fallback5489:
    set fb_tmp_458, _lex_param_1
    repr_defined $I5003, fb_tmp_458
    unless $I5003 goto if2486_else5487 
    set $P5013, fb_tmp_458["multi_declarator"]
    set $P5015, $P5013
    goto if2486_end5488
  if2486_else5487:
    null $P5014
    set $P5015, $P5014
  if2486_end5488:
    unless_null $P5015, vivi_24875490
    nqp_get_sc_object $P5016, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5015, $P5016
  vivi_24875490:
    unless $P5015 goto if2485_else5485 
.annotate 'line', 2286
    unless_null _lex_param_1, fallback5493
    nqp_get_sc_object $P5017, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5017
  fallback5493:
    set fb_tmp_459, _lex_param_1
    repr_defined $I5004, fb_tmp_459
    unless $I5004 goto if2488_else5491 
    set $P5018, fb_tmp_459["multi_declarator"]
    set $P5020, $P5018
    goto if2488_end5492
  if2488_else5491:
    null $P5019
    set $P5020, $P5019
  if2488_end5492:
    unless_null $P5020, vivi_24895494
    nqp_get_sc_object $P5021, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5020, $P5021
  vivi_24895494:
    $P5022 = $P5020."ast"()
    set $P5029, $P5022
    goto if2485_end5486
  if2485_else5485:
.annotate 'line', 2287
    unless_null _lex_param_1, fallback5497
    nqp_get_sc_object $P5023, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5023
  fallback5497:
    set fb_tmp_460, _lex_param_1
    repr_defined $I5005, fb_tmp_460
    unless $I5005 goto if2490_else5495 
    set $P5024, fb_tmp_460["package_declarator"]
    set $P5026, $P5024
    goto if2490_end5496
  if2490_else5495:
    null $P5025
    set $P5026, $P5025
  if2490_end5496:
    unless_null $P5026, vivi_24915498
    nqp_get_sc_object $P5027, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5026, $P5027
  vivi_24915498:
    $P5028 = $P5026."ast"()
    set $P5029, $P5028
  if2485_end5486:
    set $P5030, $P5029
  if2480_end5476:
    $P5031 = _lex_param_1."!make"($P5030)
    .return ($P5031) 
.end
.HLL "nqp"
.namespace []
.sub "declarator" :subid("cuid_301_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2290
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_461 
    .local pmc fb_tmp_462 
    .local pmc fb_tmp_463 
.annotate 'line', 2291
    unless_null _lex_param_1, fallback5503
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback5503:
    set fb_tmp_461, _lex_param_1
    repr_defined $I5001, fb_tmp_461
    unless $I5001 goto if2493_else5501 
    set $P5002, fb_tmp_461["routine_declarator"]
    set $P5004, $P5002
    goto if2493_end5502
  if2493_else5501:
    null $P5003
    set $P5004, $P5003
  if2493_end5502:
    unless_null $P5004, vivi_24945504
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_24945504:
    unless $P5004 goto if2492_else5499 
.annotate 'line', 2292
    unless_null _lex_param_1, fallback5507
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5006
  fallback5507:
    set fb_tmp_462, _lex_param_1
    repr_defined $I5002, fb_tmp_462
    unless $I5002 goto if2495_else5505 
    set $P5007, fb_tmp_462["routine_declarator"]
    set $P5009, $P5007
    goto if2495_end5506
  if2495_else5505:
    null $P5008
    set $P5009, $P5008
  if2495_end5506:
    unless_null $P5009, vivi_24965508
    nqp_get_sc_object $P5010, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5009, $P5010
  vivi_24965508:
    $P5011 = $P5009."ast"()
    set $P5018, $P5011
    goto if2492_end5500
  if2492_else5499:
.annotate 'line', 2293
    unless_null _lex_param_1, fallback5511
    nqp_get_sc_object $P5012, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5012
  fallback5511:
    set fb_tmp_463, _lex_param_1
    repr_defined $I5003, fb_tmp_463
    unless $I5003 goto if2497_else5509 
    set $P5013, fb_tmp_463["variable_declarator"]
    set $P5015, $P5013
    goto if2497_end5510
  if2497_else5509:
    null $P5014
    set $P5015, $P5014
  if2497_end5510:
    unless_null $P5015, vivi_24985512
    nqp_get_sc_object $P5016, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5015, $P5016
  vivi_24985512:
    $P5017 = $P5015."ast"()
    set $P5018, $P5017
  if2492_end5500:
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<multi>" :subid("cuid_302_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2296
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_464 
    .local pmc fb_tmp_465 
    .local pmc fb_tmp_466 
    unless_null _lex_param_1, fallback5517
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback5517:
    set fb_tmp_464, _lex_param_1
    repr_defined $I5001, fb_tmp_464
    unless $I5001 goto if2500_else5515 
    set $P5002, fb_tmp_464["declarator"]
    set $P5004, $P5002
    goto if2500_end5516
  if2500_else5515:
    null $P5003
    set $P5004, $P5003
  if2500_end5516:
    unless_null $P5004, vivi_25015518
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_25015518:
    unless $P5004 goto if2499_else5513 
    unless_null _lex_param_1, fallback5521
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5006
  fallback5521:
    set fb_tmp_465, _lex_param_1
    repr_defined $I5002, fb_tmp_465
    unless $I5002 goto if2502_else5519 
    set $P5007, fb_tmp_465["declarator"]
    set $P5009, $P5007
    goto if2502_end5520
  if2502_else5519:
    null $P5008
    set $P5009, $P5008
  if2502_end5520:
    unless_null $P5009, vivi_25035522
    nqp_get_sc_object $P5010, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5009, $P5010
  vivi_25035522:
    $P5011 = $P5009."ast"()
    set $P5018, $P5011
    goto if2499_end5514
  if2499_else5513:
    unless_null _lex_param_1, fallback5525
    nqp_get_sc_object $P5012, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5012
  fallback5525:
    set fb_tmp_466, _lex_param_1
    repr_defined $I5003, fb_tmp_466
    unless $I5003 goto if2504_else5523 
    set $P5013, fb_tmp_466["routine_def"]
    set $P5015, $P5013
    goto if2504_end5524
  if2504_else5523:
    null $P5014
    set $P5015, $P5014
  if2504_end5524:
    unless_null $P5015, vivi_25055526
    nqp_get_sc_object $P5016, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5015, $P5016
  vivi_25055526:
    $P5017 = $P5015."ast"()
    set $P5018, $P5017
  if2499_end5514:
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<proto>" :subid("cuid_303_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2297
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_467 
    .local pmc fb_tmp_468 
    .local pmc fb_tmp_469 
    unless_null _lex_param_1, fallback5531
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback5531:
    set fb_tmp_467, _lex_param_1
    repr_defined $I5001, fb_tmp_467
    unless $I5001 goto if2507_else5529 
    set $P5002, fb_tmp_467["declarator"]
    set $P5004, $P5002
    goto if2507_end5530
  if2507_else5529:
    null $P5003
    set $P5004, $P5003
  if2507_end5530:
    unless_null $P5004, vivi_25085532
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_25085532:
    unless $P5004 goto if2506_else5527 
    unless_null _lex_param_1, fallback5535
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5006
  fallback5535:
    set fb_tmp_468, _lex_param_1
    repr_defined $I5002, fb_tmp_468
    unless $I5002 goto if2509_else5533 
    set $P5007, fb_tmp_468["declarator"]
    set $P5009, $P5007
    goto if2509_end5534
  if2509_else5533:
    null $P5008
    set $P5009, $P5008
  if2509_end5534:
    unless_null $P5009, vivi_25105536
    nqp_get_sc_object $P5010, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5009, $P5010
  vivi_25105536:
    $P5011 = $P5009."ast"()
    set $P5018, $P5011
    goto if2506_end5528
  if2506_else5527:
    unless_null _lex_param_1, fallback5539
    nqp_get_sc_object $P5012, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5012
  fallback5539:
    set fb_tmp_469, _lex_param_1
    repr_defined $I5003, fb_tmp_469
    unless $I5003 goto if2511_else5537 
    set $P5013, fb_tmp_469["routine_def"]
    set $P5015, $P5013
    goto if2511_end5538
  if2511_else5537:
    null $P5014
    set $P5015, $P5014
  if2511_end5538:
    unless_null $P5015, vivi_25125540
    nqp_get_sc_object $P5016, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5015, $P5016
  vivi_25125540:
    $P5017 = $P5015."ast"()
    set $P5018, $P5017
  if2506_end5528:
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<null>" :subid("cuid_304_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2298
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_470 
    unless_null _lex_param_1, fallback5543
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback5543:
    set fb_tmp_470, _lex_param_1
    repr_defined $I5001, fb_tmp_470
    unless $I5001 goto if2513_else5541 
    set $P5002, fb_tmp_470["declarator"]
    set $P5004, $P5002
    goto if2513_end5542
  if2513_else5541:
    null $P5003
    set $P5004, $P5003
  if2513_end5542:
    unless_null $P5004, vivi_25145544
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_25145544:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "variable_declarator" :subid("cuid_305_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2301
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5095 = 'cuid_471_1361734139.417' 
    capture_lex $P5095 
    .const 'Sub' $P5095 = 'cuid_473_1361734139.417' 
    capture_lex $P5095 
    .const 'Sub' $P5095 = 'cuid_474_1361734139.417' 
    capture_lex $P5095 
    .lex "$past", $P101 
    .lex "$sigil", $P102 
    .lex "$name", $P103 
    .lex "$BLOCK", $P104 
    .lex "$*DECLARAND_ATTR", $P105 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_471 
    .local pmc fb_tmp_472 
    .local pmc fb_tmp_473 
    .local pmc fb_tmp_474 
    .local pmc fb_tmp_475 
    .local pmc fb_tmp_476 
    .local pmc fb_tmp_492 
    .local pmc fb_tmp_493 
    .local pmc fb_tmp_494 
    .local pmc fb_tmp_500 
    .local pmc fb_tmp_501 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P105, $P5005
.annotate 'line', 2302
    unless_null _lex_param_1, fallback5547
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5006
  fallback5547:
    set fb_tmp_471, _lex_param_1
    repr_defined $I5001, fb_tmp_471
    unless $I5001 goto if2515_else5545 
    set $P5007, fb_tmp_471["variable"]
    set $P5009, $P5007
    goto if2515_end5546
  if2515_else5545:
    null $P5008
    set $P5009, $P5008
  if2515_end5546:
    unless_null $P5009, vivi_25165548
    nqp_get_sc_object $P5010, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5009, $P5010
  vivi_25165548:
    $P5011 = $P5009."ast"()
    set $P101, $P5011
    unless_null _lex_param_1, fallback5553
    nqp_get_sc_object $P5012, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5012
  fallback5553:
    set fb_tmp_473, _lex_param_1
    repr_defined $I5003, fb_tmp_473
    unless $I5003 goto if2518_else5551 
    set $P5013, fb_tmp_473["variable"]
    set $P5015, $P5013
    goto if2518_end5552
  if2518_else5551:
    null $P5014
    set $P5015, $P5014
  if2518_end5552:
    unless_null $P5015, vivi_25195554
    nqp_get_sc_object $P5016, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5015, $P5016
  vivi_25195554:
    set fb_tmp_472, $P5015
    repr_defined $I5002, fb_tmp_472
    unless $I5002 goto if2517_else5549 
    set $P5017, fb_tmp_472["sigil"]
    set $P5019, $P5017
    goto if2517_end5550
  if2517_else5549:
    null $P5018
    set $P5019, $P5018
  if2517_end5550:
    unless_null $P5019, vivi_25205555
    nqp_get_sc_object $P5020, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5019, $P5020
  vivi_25205555:
    set $P102, $P5019
.annotate 'line', 2304
    $P5021 = $P101."name"()
    set $P103, $P5021
.annotate 'line', 2305
    find_dynamic_lex $P5022, "$*W"
    unless_null $P5022, fallback5556
    nqp_get_sc_object $P5024, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5023, $P5024
    set fb_tmp_474, $P5023
    repr_defined $I5004, fb_tmp_474
    unless $I5004 goto if2521_else5557 
    set $P5025, fb_tmp_474["$W"]
    set $P5027, $P5025
    goto if2521_end5558
  if2521_else5557:
    null $P5026
    set $P5027, $P5026
  if2521_end5558:
    unless_null $P5027, vivi_25225559
    nqp_get_sc_object $P5028, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5027, $P5028
  vivi_25225559:
    unless_null $P5027, vivi_25235560
    die "Contextual $*W not found"
    box $P5029, "Contextual $*W not found"
    set $P5027, $P5029
  vivi_25235560:
    set $P5022, $P5027
  fallback5556:
    $P5030 = $P5022."cur_lexpad"()
    set $P104, $P5030
    set $P5039, $P103
    unless $P103 goto if2528_end5569 
.annotate 'line', 2307
    $P5038 = $P104."symbol"($P103)
    set $P5039, $P5038
  if2528_end5569:
    unless $P5039 goto if2527_end5567 
.annotate 'line', 2308
    $P5040 = _lex_param_1."CURSOR"()
    $P5041 = $P5040."panic"("Redeclaration of symbol ", $P103)
  if2527_end5567:
    find_dynamic_lex $P5042, "$*SCOPE"
    unless_null $P5042, fallback5572
    nqp_get_sc_object $P5044, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5043, $P5044
    set fb_tmp_476, $P5043
    repr_defined $I5007, fb_tmp_476
    unless $I5007 goto if2530_else5573 
    set $P5045, fb_tmp_476["$SCOPE"]
    set $P5047, $P5045
    goto if2530_end5574
  if2530_else5573:
    null $P5046
    set $P5047, $P5046
  if2530_end5574:
    unless_null $P5047, vivi_25315575
    nqp_get_sc_object $P5048, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5047, $P5048
  vivi_25315575:
    unless_null $P5047, vivi_25325576
    die "Contextual $*SCOPE not found"
    box $P5049, "Contextual $*SCOPE not found"
    set $P5047, $P5049
  vivi_25325576:
    set $P5042, $P5047
  fallback5572:
    set $S5001, $P5042
    iseq $I5006, $S5001, "has"
    unless $I5006 goto if2529_else5570 
    .const 'Sub' $P5050 = 'cuid_471_1361734139.417' 
    capture_lex $P5050
    $P5051 = $P5050()
    goto if2529_end5571
  if2529_else5570:
    find_dynamic_lex $P5052, "$*SCOPE"
    unless_null $P5052, fallback5657
    nqp_get_sc_object $P5054, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5053, $P5054
    set fb_tmp_492, $P5053
    repr_defined $I5009, fb_tmp_492
    unless $I5009 goto if2580_else5658 
    set $P5055, fb_tmp_492["$SCOPE"]
    set $P5057, $P5055
    goto if2580_end5659
  if2580_else5658:
    null $P5056
    set $P5057, $P5056
  if2580_end5659:
    unless_null $P5057, vivi_25815660
    nqp_get_sc_object $P5058, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5057, $P5058
  vivi_25815660:
    unless_null $P5057, vivi_25825661
    die "Contextual $*SCOPE not found"
    box $P5059, "Contextual $*SCOPE not found"
    set $P5057, $P5059
  vivi_25825661:
    set $P5052, $P5057
  fallback5657:
    set $S5002, $P5052
    iseq $I5008, $S5002, "our"
    unless $I5008 goto if2579_else5655 
.annotate 'line', 2338
    unless_null _lex_param_1, fallback5666
    nqp_get_sc_object $P5060, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5060
  fallback5666:
    set fb_tmp_493, _lex_param_1
    repr_defined $I5010, fb_tmp_493
    unless $I5010 goto if2584_else5664 
    set $P5061, fb_tmp_493["typename"]
    set $P5063, $P5061
    goto if2584_end5665
  if2584_else5664:
    null $P5062
    set $P5063, $P5062
  if2584_end5665:
    unless_null $P5063, vivi_25855667
    nqp_get_sc_object $P5064, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5063, $P5064
  vivi_25855667:
    unless $P5063 goto if2583_end5663 
.annotate 'line', 2342
.annotate 'line', 2343
    $P5065 = _lex_param_1."CURSOR"()
    $P5066 = $P5065."panic"("Cannot put types on our-scoped variables")
  if2583_end5663:
    unless_null _lex_param_1, fallback5670
    nqp_get_sc_object $P5067, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5067
  fallback5670:
    set fb_tmp_494, _lex_param_1
    repr_defined $I5011, fb_tmp_494
    unless $I5011 goto if2586_else5668 
    set $P5068, fb_tmp_494["variable"]
    set $P5070, $P5068
    goto if2586_end5669
  if2586_else5668:
    null $P5069
    set $P5070, $P5069
  if2586_end5669:
    unless_null $P5070, vivi_25875671
    nqp_get_sc_object $P5071, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5070, $P5071
  vivi_25875671:
    set $S5003, $P5070
    box $P5072, $S5003
    set $P103, $P5072
.annotate 'line', 2346
    new $P5073, 'ResizablePMCArray'
    push $P5073, $P103
    $P5074 = "&lexical_package_lookup"($P5073, _lex_param_1)
    set $P101, $P5074
.annotate 'line', 2347
    $P5075 = $P104."symbol"($P103, "package" :named("scope"))
    set $P5078, $P5075
    goto if2579_end5656
  if2579_else5655:
    .const 'Sub' $P5076 = 'cuid_473_1361734139.417' 
    capture_lex $P5076
    $P5077 = $P5076()
    set $P5078, $P5077
  if2579_end5656:
  if2529_end5571:
    unless_null _lex_param_1, fallback5701
    nqp_get_sc_object $P5079, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5079
  fallback5701:
    set fb_tmp_500, _lex_param_1
    repr_defined $I5012, fb_tmp_500
    unless $I5012 goto if2603_else5699 
    set $P5080, fb_tmp_500["trait"]
    set $P5082, $P5080
    goto if2603_end5700
  if2603_else5699:
    null $P5081
    set $P5082, $P5081
  if2603_end5700:
    unless_null $P5082, vivi_26045702
    nqp_get_sc_object $P5083, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5082, $P5083
  vivi_26045702:
    unless $P5082 goto if2602_end5698 
.annotate 'line', 2376
    unless_null _lex_param_1, fallback5705
    nqp_get_sc_object $P5087, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5087
  fallback5705:
    set fb_tmp_501, _lex_param_1
    repr_defined $I5013, fb_tmp_501
    unless $I5013 goto if2605_else5703 
    set $P5088, fb_tmp_501["trait"]
    set $P5090, $P5088
    goto if2605_end5704
  if2605_else5703:
    null $P5089
    set $P5090, $P5089
  if2605_end5704:
    unless_null $P5090, vivi_26065706
    nqp_get_sc_object $P5091, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5090, $P5091
  vivi_26065706:
    set $P5084, $P5090
    iter $P5086, $P5090
  for_next5707:
    unless $P5086, for_done5709
    shift $P5093, $P5086
  for_redo5708:
    .const 'Sub' $P5092 = 'cuid_474_1361734139.417' 
    capture_lex $P5092
    $P5084 = $P5092($P5093)
    goto for_next5707
  for_done5709:
  if2602_end5698:
.annotate 'line', 2380
    $P5094 = _lex_param_1."!make"($P101)
    .return ($P5094) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_471_1361734139.417") :anon :lex :outer("cuid_305_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2310
    .lex "%lit_args", $P101 
    .lex "%obj_args", $P102 
    .local pmc fb_tmp_477 
    .local pmc pkg_viv_tmp_43 
    .local pmc fb_tmp_478 
    .local pmc fb_tmp_479 
    .local pmc fb_tmp_480 
    .local pmc fb_tmp_481 
    .local pmc fb_tmp_482 
    .local pmc fb_tmp_483 
    .local pmc fb_tmp_484 
    .local pmc fb_tmp_485 
    .local pmc fb_tmp_486 
    .local pmc fb_tmp_487 
    .local pmc fb_tmp_488 
    .local pmc fb_tmp_489 
    .local pmc fb_tmp_490 
    .local pmc pkg_viv_tmp_44 
    .local pmc fb_tmp_491 
    new $P5001, 'Hash'
    set $P101, $P5001
    new $P5002, 'Hash'
    set $P102, $P5002
    find_dynamic_lex $P5003, "%*HOW"
    unless_null $P5003, fallback5579
    nqp_get_sc_object $P5005, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5004, $P5005
    set pkg_viv_tmp_43, $P5004
    set fb_tmp_477, pkg_viv_tmp_43
    repr_defined $I5002, fb_tmp_477
    unless $I5002 goto if2534_else5580 
    set $P5006, fb_tmp_477["%HOW"]
    set $P5008, $P5006
    goto if2534_end5581
  if2534_else5580:
    null $P5007
    set $P5008, $P5007
  if2534_end5581:
    unless_null $P5008, vivi_25355582
    new $P5009, 'Hash'
    set pkg_viv_tmp_43["%HOW"], $P5009
    set $P5008, $P5009
  vivi_25355582:
    unless_null $P5008, vivi_25365583
    die "Contextual %*HOW not found"
    box $P5010, "Contextual %*HOW not found"
    set $P5008, $P5010
  vivi_25365583:
    set $P5003, $P5008
  fallback5579:
    find_dynamic_lex $P5011, "$*PKGDECL"
    unless_null $P5011, fallback5584
    nqp_get_sc_object $P5013, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5012, $P5013
    set fb_tmp_478, $P5012
    repr_defined $I5003, fb_tmp_478
    unless $I5003 goto if2537_else5585 
    set $P5014, fb_tmp_478["$PKGDECL"]
    set $P5016, $P5014
    goto if2537_end5586
  if2537_else5585:
    null $P5015
    set $P5016, $P5015
  if2537_end5586:
    unless_null $P5016, vivi_25385587
    nqp_get_sc_object $P5017, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5016, $P5017
  vivi_25385587:
    unless_null $P5016, vivi_25395588
    die "Contextual $*PKGDECL not found"
    box $P5018, "Contextual $*PKGDECL not found"
    set $P5016, $P5018
  vivi_25395588:
    set $P5011, $P5016
  fallback5584:
    set $S5002, $P5011
    concat $S5001, $S5002, "-attr"
    exists $I5001, $P5003[$S5001]
    if $I5001 goto unless2533_end5578 
.annotate 'line', 2312
.annotate 'line', 2313
    find_lex $P5019, "$/"
    $P5020 = $P5019."CURSOR"()
    find_dynamic_lex $P5021, "$*PKGDECL"
    unless_null $P5021, fallback5589
    nqp_get_sc_object $P5023, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5022, $P5023
    set fb_tmp_479, $P5022
    repr_defined $I5004, fb_tmp_479
    unless $I5004 goto if2540_else5590 
    set $P5024, fb_tmp_479["$PKGDECL"]
    set $P5026, $P5024
    goto if2540_end5591
  if2540_else5590:
    null $P5025
    set $P5026, $P5025
  if2540_end5591:
    unless_null $P5026, vivi_25415592
    nqp_get_sc_object $P5027, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5026, $P5027
  vivi_25415592:
    unless_null $P5026, vivi_25425593
    die "Contextual $*PKGDECL not found"
    box $P5028, "Contextual $*PKGDECL not found"
    set $P5026, $P5028
  vivi_25425593:
    set $P5021, $P5026
  fallback5589:
    set $S5004, $P5021
    concat $S5003, $S5004, " packages do not support attributes"
    $P5029 = $P5020."panic"($S5003)
  unless2533_end5578:
    find_lex $P5030, "$name"
    set $P101["name"], $P5030
    find_lex $P5031, "$/"
    unless_null $P5031, fallback5598
    nqp_get_sc_object $P5032, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5031, $P5032
  fallback5598:
    set fb_tmp_480, $P5031
    repr_defined $I5005, fb_tmp_480
    unless $I5005 goto if2544_else5596 
    set $P5033, fb_tmp_480["typename"]
    set $P5035, $P5033
    goto if2544_end5597
  if2544_else5596:
    null $P5034
    set $P5035, $P5034
  if2544_end5597:
    unless_null $P5035, vivi_25455599
    nqp_get_sc_object $P5036, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5035, $P5036
  vivi_25455599:
    unless $P5035 goto if2543_end5595 
.annotate 'line', 2320
.annotate 'line', 2321
    find_dynamic_lex $P5037, "$*W"
    unless_null $P5037, fallback5600
    nqp_get_sc_object $P5039, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5038, $P5039
    set fb_tmp_481, $P5038
    repr_defined $I5006, fb_tmp_481
    unless $I5006 goto if2546_else5601 
    set $P5040, fb_tmp_481["$W"]
    set $P5042, $P5040
    goto if2546_end5602
  if2546_else5601:
    null $P5041
    set $P5042, $P5041
  if2546_end5602:
    unless_null $P5042, vivi_25475603
    nqp_get_sc_object $P5043, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5042, $P5043
  vivi_25475603:
    unless_null $P5042, vivi_25485604
    die "Contextual $*W not found"
    box $P5044, "Contextual $*W not found"
    set $P5042, $P5044
  vivi_25485604:
    set $P5037, $P5042
  fallback5600:
    new $P5045, 'ResizablePMCArray'
    find_lex $P5046, "$/"
    unless_null $P5046, fallback5609
    nqp_get_sc_object $P5047, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5046, $P5047
  fallback5609:
    set fb_tmp_483, $P5046
    repr_defined $I5008, fb_tmp_483
    unless $I5008 goto if2550_else5607 
    set $P5048, fb_tmp_483["typename"]
    set $P5050, $P5048
    goto if2550_end5608
  if2550_else5607:
    null $P5049
    set $P5050, $P5049
  if2550_end5608:
    unless_null $P5050, vivi_25515610
    nqp_get_sc_object $P5051, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5050, $P5051
  vivi_25515610:
    set fb_tmp_482, $P5050
    repr_defined $I5007, fb_tmp_482
    unless $I5007 goto if2549_else5605 
    set $P5052, fb_tmp_482[0]
    set $P5054, $P5052
    goto if2549_end5606
  if2549_else5605:
    null $P5053
    set $P5054, $P5053
  if2549_end5606:
    unless_null $P5054, vivi_25525611
    nqp_get_sc_object $P5055, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5054, $P5055
  vivi_25525611:
    set $S5005, $P5054
    box $P5056, $S5005
    push $P5045, $P5056
    $P5057 = $P5037."find_sym"($P5045)
    set $P102["type"], $P5057
  if2543_end5595:
    find_lex $P5058, "$sigil"
    set $S5006, $P5058
    iseq $I5009, $S5006, "$"
    set $I5011, $I5009
    if $I5009 goto unless2554_end5615 
    find_lex $P5059, "$sigil"
    set $S5007, $P5059
    iseq $I5010, $S5007, "&"
    set $I5011, $I5010
  unless2554_end5615:
    unless $I5011 goto if2553_end5613 
.annotate 'line', 2323
    find_lex $P5060, "$/"
    unless_null $P5060, fallback5620
    nqp_get_sc_object $P5061, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5060, $P5061
  fallback5620:
    set fb_tmp_484, $P5060
    repr_defined $I5012, fb_tmp_484
    unless $I5012 goto if2556_else5618 
    set $P5062, fb_tmp_484["typename"]
    set $P5064, $P5062
    goto if2556_end5619
  if2556_else5618:
    null $P5063
    set $P5064, $P5063
  if2556_end5619:
    unless_null $P5064, vivi_25575621
    nqp_get_sc_object $P5065, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5064, $P5065
  vivi_25575621:
    unless $P5064 goto if2555_else5616 
.annotate 'line', 2324
    set fb_tmp_485, $P102
    repr_defined $I5013, fb_tmp_485
    unless $I5013 goto if2558_else5622 
    set $P5066, fb_tmp_485["type"]
    set $P5068, $P5066
    goto if2558_end5623
  if2558_else5622:
    null $P5067
    set $P5068, $P5067
  if2558_end5623:
    unless_null $P5068, vivi_25595624
    nqp_get_sc_object $P5069, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5068, $P5069
  vivi_25595624:
    set $P102["default"], $P5068
    set $P5083, $P5068
    goto if2555_end5617
  if2555_else5616:
.annotate 'line', 2327
    new $P5081, 'ExceptionHandler'
    set_label $P5081, catch_handler_25645631
    $P5081.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5081
.annotate 'line', 2328
    find_dynamic_lex $P5070, "$*W"
    unless_null $P5070, fallback5625
    nqp_get_sc_object $P5072, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5071, $P5072
    set fb_tmp_486, $P5071
    repr_defined $I5014, fb_tmp_486
    unless $I5014 goto if2560_else5626 
    set $P5073, fb_tmp_486["$W"]
    set $P5075, $P5073
    goto if2560_end5627
  if2560_else5626:
    null $P5074
    set $P5075, $P5074
  if2560_end5627:
    unless_null $P5075, vivi_25615628
    nqp_get_sc_object $P5076, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5075, $P5076
  vivi_25615628:
    unless_null $P5075, vivi_25625629
    die "Contextual $*W not found"
    box $P5077, "Contextual $*W not found"
    set $P5075, $P5077
  vivi_25625629:
    set $P5070, $P5075
  fallback5625:
    new $P5078, 'ResizablePMCArray'
    box $P5079, "NQPMu"
    push $P5078, $P5079
    $P5080 = $P5070."find_sym"($P5078)
    set $P102["default"], $P5080
    set $P5082, $P5080
    pop_eh 
    goto skip_handler_25635630
  catch_handler_25645631:
    .get_results ($P5081) 
    set $I10001, 1
    set $P5081["handled"], $I10001
    nqp_get_sc_object $P10001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    finalize $P5081
    pop_upto_eh $P5081
    pop_eh 
    set $P5082, $P10001
    goto skip_handler_25635630
  skip_handler_25635630:
    set $P5083, $P5082
  if2555_end5617:
  if2553_end5613:
.annotate 'line', 2333
    find_dynamic_lex $P5084, "$*W"
    unless_null $P5084, fallback5632
    nqp_get_sc_object $P5086, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5085, $P5086
    set fb_tmp_487, $P5085
    repr_defined $I5015, fb_tmp_487
    unless $I5015 goto if2565_else5633 
    set $P5087, fb_tmp_487["$W"]
    set $P5089, $P5087
    goto if2565_end5634
  if2565_else5633:
    null $P5088
    set $P5089, $P5088
  if2565_end5634:
    unless_null $P5089, vivi_25665635
    nqp_get_sc_object $P5090, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5089, $P5090
  vivi_25665635:
    unless_null $P5089, vivi_25675636
    die "Contextual $*W not found"
    box $P5091, "Contextual $*W not found"
    set $P5089, $P5091
  vivi_25675636:
    set $P5084, $P5089
  fallback5632:
    find_dynamic_lex $P5092, "$*PACKAGE"
    unless_null $P5092, fallback5637
    nqp_get_sc_object $P5094, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5093, $P5094
    set fb_tmp_488, $P5093
    repr_defined $I5016, fb_tmp_488
    unless $I5016 goto if2568_else5638 
    set $P5095, fb_tmp_488["$PACKAGE"]
    set $P5097, $P5095
    goto if2568_end5639
  if2568_else5638:
    null $P5096
    set $P5097, $P5096
  if2568_end5639:
    unless_null $P5097, vivi_25695640
    nqp_get_sc_object $P5098, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5097, $P5098
  vivi_25695640:
    unless_null $P5097, vivi_25705641
    die "Contextual $*PACKAGE not found"
    box $P5099, "Contextual $*PACKAGE not found"
    set $P5097, $P5099
  vivi_25705641:
    set $P5092, $P5097
  fallback5637:
    find_dynamic_lex $P5100, "%*HOW"
    unless_null $P5100, fallback5644
    nqp_get_sc_object $P5102, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5101, $P5102
    set pkg_viv_tmp_44, $P5101
    set fb_tmp_490, pkg_viv_tmp_44
    repr_defined $I5018, fb_tmp_490
    unless $I5018 goto if2572_else5645 
    set $P5103, fb_tmp_490["%HOW"]
    set $P5105, $P5103
    goto if2572_end5646
  if2572_else5645:
    null $P5104
    set $P5105, $P5104
  if2572_end5646:
    unless_null $P5105, vivi_25735647
    new $P5106, 'Hash'
    set pkg_viv_tmp_44["%HOW"], $P5106
    set $P5105, $P5106
  vivi_25735647:
    unless_null $P5105, vivi_25745648
    die "Contextual %*HOW not found"
    box $P5107, "Contextual %*HOW not found"
    set $P5105, $P5107
  vivi_25745648:
    set $P5100, $P5105
  fallback5644:
    set fb_tmp_489, $P5100
    repr_defined $I5017, fb_tmp_489
    unless $I5017 goto if2571_else5642 
    find_dynamic_lex $P5109, "$*PKGDECL"
    unless_null $P5109, fallback5649
    nqp_get_sc_object $P5111, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5110, $P5111
    set fb_tmp_491, $P5110
    repr_defined $I5019, fb_tmp_491
    unless $I5019 goto if2575_else5650 
    set $P5112, fb_tmp_491["$PKGDECL"]
    set $P5114, $P5112
    goto if2575_end5651
  if2575_else5650:
    null $P5113
    set $P5114, $P5113
  if2575_end5651:
    unless_null $P5114, vivi_25765652
    nqp_get_sc_object $P5115, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5114, $P5115
  vivi_25765652:
    unless_null $P5114, vivi_25775653
    die "Contextual $*PKGDECL not found"
    box $P5116, "Contextual $*PKGDECL not found"
    set $P5114, $P5116
  vivi_25775653:
    set $P5109, $P5114
  fallback5649:
    set $S5009, $P5109
    concat $S5008, $S5009, "-attr"
    set $P5108, fb_tmp_489[$S5008]
    set $P5118, $P5108
    goto if2571_end5643
  if2571_else5642:
    null $P5117
    set $P5118, $P5117
  if2571_end5643:
    unless_null $P5118, vivi_25785654
    nqp_get_sc_object $P5119, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5118, $P5119
  vivi_25785654:
    $P5120 = $P5084."pkg_add_attribute"($P5092, $P5118, $P101, $P102)
    store_dynamic_lex "$*DECLARAND_ATTR", $P5120
.annotate 'line', 2336
    nqp_get_sc_object $P5121, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 93
    $P5122 = $P5121."new"()
    store_lex "$past", $P5122
    .return ($P5122) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_473_1361734139.417") :anon :lex :outer("cuid_305_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2349
    .const 'Sub' $P5056 = 'cuid_472_1361734139.417' 
    capture_lex $P5056 
    .lex "$type", $P101 
    .lex "$default", $P102 
    .local pmc fb_tmp_495 
    .local pmc fb_tmp_496 
    .local pmc fb_tmp_497 
    .local pmc fb_tmp_498 
    .local pmc fb_tmp_499 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
    find_lex $P5003, "$/"
    unless_null $P5003, fallback5676
    nqp_get_sc_object $P5004, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5003, $P5004
  fallback5676:
    set fb_tmp_495, $P5003
    repr_defined $I5001, fb_tmp_495
    unless $I5001 goto if2589_else5674 
    set $P5005, fb_tmp_495["typename"]
    set $P5007, $P5005
    goto if2589_end5675
  if2589_else5674:
    null $P5006
    set $P5007, $P5006
  if2589_end5675:
    unless_null $P5007, vivi_25905677
    nqp_get_sc_object $P5008, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5007, $P5008
  vivi_25905677:
    unless $P5007 goto if2588_else5672 
.annotate 'line', 2352
    find_lex $P5009, "$sigil"
    set $S5001, $P5009
    iseq $I5002, $S5001, "$"
    if $I5002 goto unless2591_end5679 
.annotate 'line', 2353
.annotate 'line', 2354
    find_lex $P5010, "$/"
    $P5011 = $P5010."CURSOR"()
    $P5012 = $P5011."panic"("Only typed scalars are currently supported in NQP")
  unless2591_end5679:
.annotate 'line', 2356
    find_dynamic_lex $P5013, "$*W"
    unless_null $P5013, fallback5680
    nqp_get_sc_object $P5015, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5014, $P5015
    set fb_tmp_496, $P5014
    repr_defined $I5003, fb_tmp_496
    unless $I5003 goto if2592_else5681 
    set $P5016, fb_tmp_496["$W"]
    set $P5018, $P5016
    goto if2592_end5682
  if2592_else5681:
    null $P5017
    set $P5018, $P5017
  if2592_end5682:
    unless_null $P5018, vivi_25935683
    nqp_get_sc_object $P5019, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5018, $P5019
  vivi_25935683:
    unless_null $P5018, vivi_25945684
    die "Contextual $*W not found"
    box $P5020, "Contextual $*W not found"
    set $P5018, $P5020
  vivi_25945684:
    set $P5013, $P5018
  fallback5680:
    new $P5021, 'ResizablePMCArray'
    find_lex $P5022, "$/"
    unless_null $P5022, fallback5689
    nqp_get_sc_object $P5023, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5022, $P5023
  fallback5689:
    set fb_tmp_498, $P5022
    repr_defined $I5005, fb_tmp_498
    unless $I5005 goto if2596_else5687 
    set $P5024, fb_tmp_498["typename"]
    set $P5026, $P5024
    goto if2596_end5688
  if2596_else5687:
    null $P5025
    set $P5026, $P5025
  if2596_end5688:
    unless_null $P5026, vivi_25975690
    nqp_get_sc_object $P5027, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5026, $P5027
  vivi_25975690:
    set fb_tmp_497, $P5026
    repr_defined $I5004, fb_tmp_497
    unless $I5004 goto if2595_else5685 
    set $P5028, fb_tmp_497[0]
    set $P5030, $P5028
    goto if2595_end5686
  if2595_else5685:
    null $P5029
    set $P5030, $P5029
  if2595_end5686:
    unless_null $P5030, vivi_25985691
    nqp_get_sc_object $P5031, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5030, $P5031
  vivi_25985691:
    set $S5002, $P5030
    box $P5032, $S5002
    push $P5021, $P5032
    $P5033 = $P5013."find_sym"($P5021)
    set $P101, $P5033
    repr_get_primitive_type_spec $I5006, $P101
    unless $I5006 goto if2599_else5692 
    .const 'Sub' $P5034 = 'cuid_472_1361734139.417' 
    capture_lex $P5034
    $P5035 = $P5034($I5006)
    set $P5039, $P5035
    goto if2599_end5693
  if2599_else5692:
.annotate 'line', 2360
.annotate 'line', 2361
    find_lex $P5036, "$/"
    $P5037 = $P5036."CURSOR"()
    $P5038 = $P5037."panic"("Only native types are currently supported/checked")
    set $P5039, $P5038
  if2599_end5693:
    goto if2588_end5673
  if2588_else5672:
.annotate 'line', 2364
.annotate 'line', 2365
    find_lex $P5040, "$sigil"
    $P5041 = "&default_for"($P5040)
    set $P102, $P5041
  if2588_end5673:
.annotate 'line', 2367
    find_lex $P5042, "$BLOCK"
    set fb_tmp_499, $P5042
    repr_defined $I5007, fb_tmp_499
    unless $I5007 goto if2600_else5694 
    set $P5043, fb_tmp_499[0]
    set $P5045, $P5043
    goto if2600_end5695
  if2600_else5694:
    null $P5044
    set $P5045, $P5044
  if2600_end5695:
    unless_null $P5045, vivi_26015696
    nqp_get_sc_object $P5046, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5045, $P5046
  vivi_26015696:
    nqp_get_sc_object $P5047, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    find_lex $P5048, "$/"
.annotate 'line', 2369
    nqp_get_sc_object $P5049, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    find_lex $P5050, "$name"
    $P5051 = $P5049."new"($P5050 :named("name"), "lexical" :named("scope"), "var" :named("decl"), $P101 :named("returns"))
    $P5052 = $P5047."new"($P5051, $P102, "bind" :named("op"), $P5048 :named("node"))
    $P5045."push"($P5052)
.annotate 'line', 2372
    find_lex $P5053, "$BLOCK"
    find_lex $P5054, "$name"
    $P5055 = $P5053."symbol"($P5054, "lexical" :named("scope"), $P101 :named("type"))
    .return ($P5055) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_472_1361734139.417") :anon :lex :outer("cuid_473_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2357
    .param pmc _lex_param_0 
    .lex "$prim_spec", _lex_param_0 
.annotate 'line', 2358
    $P5001 = "&default_value_for_prim"(_lex_param_0)
    store_lex "$default", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_474_1361734139.417") :anon :lex :outer("cuid_305_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2377
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5002, "$/"
    $P5001 = _lex_param_0."ast"()
    $P5003 = $P5001($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator:sym<sub>" :subid("cuid_306_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2383
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_502 
    unless_null _lex_param_1, fallback5712
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback5712:
    set fb_tmp_502, _lex_param_1
    repr_defined $I5001, fb_tmp_502
    unless $I5001 goto if2607_else5710 
    set $P5002, fb_tmp_502["routine_def"]
    set $P5004, $P5002
    goto if2607_end5711
  if2607_else5710:
    null $P5003
    set $P5004, $P5003
  if2607_end5711:
    unless_null $P5004, vivi_26085713
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_26085713:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator:sym<method>" :subid("cuid_307_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2384
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_503 
    unless_null _lex_param_1, fallback5716
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback5716:
    set fb_tmp_503, _lex_param_1
    repr_defined $I5001, fb_tmp_503
    unless $I5001 goto if2609_else5714 
    set $P5002, fb_tmp_503["method_def"]
    set $P5004, $P5002
    goto if2609_end5715
  if2609_else5714:
    null $P5003
    set $P5004, $P5003
  if2609_end5715:
    unless_null $P5004, vivi_26105717
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_26105717:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "routine_def" :subid("cuid_308_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2386
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5074 = 'cuid_478_1361734139.417' 
    capture_lex $P5074 
    .const 'Sub' $P5074 = 'cuid_481_1361734139.417' 
    capture_lex $P5074 
    .lex "$past", $P101 
    .lex "$block", $P102 
    .lex "$lexpast", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_504 
    .local pmc fb_tmp_505 
    .local pmc fb_tmp_506 
    .local pmc fb_tmp_507 
    .local pmc fb_tmp_508 
    .local pmc fb_tmp_542 
    .local pmc fb_tmp_543 
    .local pmc fb_tmp_544 
    .local pmc fb_tmp_545 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P103, $P5003
    unless_null _lex_param_1, fallback5722
    nqp_get_sc_object $P5004, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5004
  fallback5722:
    set fb_tmp_504, _lex_param_1
    repr_defined $I5001, fb_tmp_504
    unless $I5001 goto if2612_else5720 
    set $P5005, fb_tmp_504["onlystar"]
    set $P5007, $P5005
    goto if2612_end5721
  if2612_else5720:
    null $P5006
    set $P5007, $P5006
  if2612_end5721:
    unless_null $P5007, vivi_26135723
    nqp_get_sc_object $P5008, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5007, $P5008
  vivi_26135723:
    unless $P5007 goto if2611_else5718 
.annotate 'line', 2390
.annotate 'line', 2391
    $P5009 = "&only_star_block"()
    set $P101, $P5009
    goto if2611_end5719
  if2611_else5718:
.annotate 'line', 2393
.annotate 'line', 2394
    unless_null _lex_param_1, fallback5726
    nqp_get_sc_object $P5010, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5010
  fallback5726:
    set fb_tmp_505, _lex_param_1
    repr_defined $I5002, fb_tmp_505
    unless $I5002 goto if2614_else5724 
    set $P5011, fb_tmp_505["blockoid"]
    set $P5013, $P5011
    goto if2614_end5725
  if2614_else5724:
    null $P5012
    set $P5013, $P5012
  if2614_end5725:
    unless_null $P5013, vivi_26155727
    nqp_get_sc_object $P5014, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5013, $P5014
  vivi_26155727:
    $P5015 = $P5013."ast"()
    set $P101, $P5015
.annotate 'line', 2395
    $P101."blocktype"("declaration")
    find_dynamic_lex $P5016, "$*RETURN_USED"
    unless_null $P5016, fallback5730
    nqp_get_sc_object $P5018, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5017, $P5018
    set fb_tmp_506, $P5017
    repr_defined $I5003, fb_tmp_506
    unless $I5003 goto if2617_else5731 
    set $P5019, fb_tmp_506["$RETURN_USED"]
    set $P5021, $P5019
    goto if2617_end5732
  if2617_else5731:
    null $P5020
    set $P5021, $P5020
  if2617_end5732:
    unless_null $P5021, vivi_26185733
    nqp_get_sc_object $P5022, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5021, $P5022
  vivi_26185733:
    unless_null $P5021, vivi_26195734
    die "Contextual $*RETURN_USED not found"
    box $P5023, "Contextual $*RETURN_USED not found"
    set $P5021, $P5023
  vivi_26195734:
    set $P5016, $P5021
  fallback5730:
    set $P5029, $P5016
    unless $P5016 goto if2616_end5729 
.annotate 'line', 2396
.annotate 'line', 2397
    set fb_tmp_507, $P101
    repr_defined $I5004, fb_tmp_507
    unless $I5004 goto if2620_else5735 
    set $P5024, fb_tmp_507[1]
    set $P5026, $P5024
    goto if2620_end5736
  if2620_else5735:
    null $P5025
    set $P5026, $P5025
  if2620_end5736:
    unless_null $P5026, vivi_26215737
    nqp_get_sc_object $P5027, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5026, $P5027
  vivi_26215737:
    $P5028 = "&wrap_return_handler"($P5026)
    set $P101[1], $P5028
    set $P5029, $P5028
  if2616_end5729:
  if2611_end5719:
    set $P102, $P101
    unless_null _lex_param_1, fallback5742
    nqp_get_sc_object $P5030, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5030
  fallback5742:
    set fb_tmp_508, _lex_param_1
    repr_defined $I5005, fb_tmp_508
    unless $I5005 goto if2623_else5740 
    set $P5031, fb_tmp_508["deflongname"]
    set $P5033, $P5031
    goto if2623_end5741
  if2623_else5740:
    null $P5032
    set $P5033, $P5032
  if2623_end5741:
    unless_null $P5033, vivi_26245743
    nqp_get_sc_object $P5034, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5033, $P5034
  vivi_26245743:
    unless $P5033 goto if2622_else5738 
    .const 'Sub' $P5035 = 'cuid_478_1361734139.417' 
    capture_lex $P5035
    $P5036 = $P5035()
    goto if2622_end5739
  if2622_else5738:
.annotate 'line', 2507
.annotate 'line', 2508
    find_dynamic_lex $P5037, "$*W"
    unless_null $P5037, fallback5916
    nqp_get_sc_object $P5039, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5038, $P5039
    set fb_tmp_542, $P5038
    repr_defined $I5006, fb_tmp_542
    unless $I5006 goto if2725_else5917 
    set $P5040, fb_tmp_542["$W"]
    set $P5042, $P5040
    goto if2725_end5918
  if2725_else5917:
    null $P5041
    set $P5042, $P5041
  if2725_end5918:
    unless_null $P5042, vivi_27265919
    nqp_get_sc_object $P5043, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5042, $P5043
  vivi_27265919:
    unless_null $P5042, vivi_27275920
    die "Contextual $*W not found"
    box $P5044, "Contextual $*W not found"
    set $P5042, $P5044
  vivi_27275920:
    set $P5037, $P5042
  fallback5916:
    $P5045 = $P5037."is_precompilation_mode"()
    set $P5055, $P5045
    unless $P5045 goto if2724_end5915 
.annotate 'line', 2509
    find_dynamic_lex $P5046, "$*W"
    unless_null $P5046, fallback5921
    nqp_get_sc_object $P5048, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5047, $P5048
    set fb_tmp_543, $P5047
    repr_defined $I5007, fb_tmp_543
    unless $I5007 goto if2728_else5922 
    set $P5049, fb_tmp_543["$W"]
    set $P5051, $P5049
    goto if2728_end5923
  if2728_else5922:
    null $P5050
    set $P5051, $P5050
  if2728_end5923:
    unless_null $P5051, vivi_27295924
    nqp_get_sc_object $P5052, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5051, $P5052
  vivi_27295924:
    unless_null $P5051, vivi_27305925
    die "Contextual $*W not found"
    box $P5053, "Contextual $*W not found"
    set $P5051, $P5053
  vivi_27305925:
    set $P5046, $P5051
  fallback5921:
    $P5054 = $P5046."create_code"($P101, "<anon>", 0)
    set $P5055, $P5054
  if2724_end5915:
  if2622_end5739:
.annotate 'line', 2513
    nqp_get_sc_object $P5056, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    $P5057 = $P5056."new"($P101, "takeclosure" :named("op"))
    set $P103, $P5057
    set $P103["sink"], $P101
    set $P103["block_past"], $P102
.annotate 'line', 2516
    _lex_param_1."!make"($P103)
    unless_null _lex_param_1, fallback5930
    nqp_get_sc_object $P5058, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5058
  fallback5930:
    set fb_tmp_544, _lex_param_1
    repr_defined $I5008, fb_tmp_544
    unless $I5008 goto if2732_else5928 
    set $P5059, fb_tmp_544["trait"]
    set $P5061, $P5059
    goto if2732_end5929
  if2732_else5928:
    null $P5060
    set $P5061, $P5060
  if2732_end5929:
    unless_null $P5061, vivi_27335931
    nqp_get_sc_object $P5062, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5061, $P5062
  vivi_27335931:
    set $P5073, $P5061
    unless $P5061 goto if2731_end5927 
.annotate 'line', 2519
    unless_null _lex_param_1, fallback5934
    nqp_get_sc_object $P5066, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5066
  fallback5934:
    set fb_tmp_545, _lex_param_1
    repr_defined $I5009, fb_tmp_545
    unless $I5009 goto if2734_else5932 
    set $P5067, fb_tmp_545["trait"]
    set $P5069, $P5067
    goto if2734_end5933
  if2734_else5932:
    null $P5068
    set $P5069, $P5068
  if2734_end5933:
    unless_null $P5069, vivi_27355935
    nqp_get_sc_object $P5070, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5069, $P5070
  vivi_27355935:
    set $P5063, $P5069
    iter $P5065, $P5069
  for_next5936:
    unless $P5065, for_done5938
    shift $P5072, $P5065
  for_redo5937:
    .const 'Sub' $P5071 = 'cuid_481_1361734139.417' 
    capture_lex $P5071
    $P5063 = $P5071($P5072)
    goto for_next5936
  for_done5938:
    set $P5073, $P5063
  if2731_end5927:
    .return ($P5073) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_478_1361734139.417") :anon :lex :outer("cuid_308_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2402
    .const 'Sub' $P5096 = 'cuid_477_1361734139.417' 
    capture_lex $P5096 
    .const 'Sub' $P5096 = 'cuid_479_1361734139.417' 
    capture_lex $P5096 
    .const 'Sub' $P5096 = 'cuid_480_1361734139.417' 
    capture_lex $P5096 
    .lex "$name", $P101 
    .local pmc fb_tmp_509 
    .local pmc fb_tmp_510 
    .local pmc fb_tmp_511 
    .local pmc fb_tmp_512 
    .local pmc fb_tmp_513 
    .local pmc fb_tmp_514 
    .local pmc fb_tmp_515 
    .local pmc fb_tmp_516 
    .local pmc fb_tmp_527 
    .local pmc fb_tmp_540 
    .local pmc fb_tmp_541 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    find_lex $P5002, "$/"
    unless_null $P5002, fallback5748
    nqp_get_sc_object $P5003, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5002, $P5003
  fallback5748:
    set fb_tmp_510, $P5002
    repr_defined $I5002, fb_tmp_510
    unless $I5002 goto if2626_else5746 
    set $P5004, fb_tmp_510["sigil"]
    set $P5006, $P5004
    goto if2626_end5747
  if2626_else5746:
    null $P5005
    set $P5006, $P5005
  if2626_end5747:
    unless_null $P5006, vivi_26275749
    nqp_get_sc_object $P5007, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5006, $P5007
  vivi_26275749:
    set fb_tmp_509, $P5006
    repr_defined $I5001, fb_tmp_509
    unless $I5001 goto if2625_else5744 
    set $P5008, fb_tmp_509[0]
    set $P5010, $P5008
    goto if2625_end5745
  if2625_else5744:
    null $P5009
    set $P5010, $P5009
  if2625_end5745:
    unless_null $P5010, vivi_26285750
    nqp_get_sc_object $P5011, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5010, $P5011
  vivi_26285750:
    set $S5002, $P5010
.annotate 'line', 2403
    find_lex $P5012, "$/"
    unless_null $P5012, fallback5755
    nqp_get_sc_object $P5013, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5012, $P5013
  fallback5755:
    set fb_tmp_512, $P5012
    repr_defined $I5004, fb_tmp_512
    unless $I5004 goto if2630_else5753 
    set $P5014, fb_tmp_512["deflongname"]
    set $P5016, $P5014
    goto if2630_end5754
  if2630_else5753:
    null $P5015
    set $P5016, $P5015
  if2630_end5754:
    unless_null $P5016, vivi_26315756
    nqp_get_sc_object $P5017, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5016, $P5017
  vivi_26315756:
    set fb_tmp_511, $P5016
    repr_defined $I5003, fb_tmp_511
    unless $I5003 goto if2629_else5751 
    set $P5018, fb_tmp_511[0]
    set $P5020, $P5018
    goto if2629_end5752
  if2629_else5751:
    null $P5019
    set $P5020, $P5019
  if2629_end5752:
    unless_null $P5020, vivi_26325757
    nqp_get_sc_object $P5021, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5020, $P5021
  vivi_26325757:
    $P5022 = $P5020."ast"()
    set $S5003, $P5022
    concat $S5001, $S5002, $S5003
    box $P5023, $S5001
    set $P101, $P5023
.annotate 'line', 2404
    find_lex $P5024, "$past"
    $P5024."name"($P101)
    find_dynamic_lex $P5025, "$*SCOPE"
    unless_null $P5025, fallback5764
    nqp_get_sc_object $P5027, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5026, $P5027
    set fb_tmp_513, $P5026
    repr_defined $I5006, fb_tmp_513
    unless $I5006 goto if2636_else5765 
    set $P5028, fb_tmp_513["$SCOPE"]
    set $P5030, $P5028
    goto if2636_end5766
  if2636_else5765:
    null $P5029
    set $P5030, $P5029
  if2636_end5766:
    unless_null $P5030, vivi_26375767
    nqp_get_sc_object $P5031, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5030, $P5031
  vivi_26375767:
    unless_null $P5030, vivi_26385768
    die "Contextual $*SCOPE not found"
    box $P5032, "Contextual $*SCOPE not found"
    set $P5030, $P5032
  vivi_26385768:
    set $P5025, $P5030
  fallback5764:
    set $S5004, $P5025
    iseq $I5005, $S5004, ""
    set $I5009, $I5005
    if $I5005 goto unless2635_end5763 
    find_dynamic_lex $P5033, "$*SCOPE"
    unless_null $P5033, fallback5769
    nqp_get_sc_object $P5035, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5034, $P5035
    set fb_tmp_514, $P5034
    repr_defined $I5008, fb_tmp_514
    unless $I5008 goto if2639_else5770 
    set $P5036, fb_tmp_514["$SCOPE"]
    set $P5038, $P5036
    goto if2639_end5771
  if2639_else5770:
    null $P5037
    set $P5038, $P5037
  if2639_end5771:
    unless_null $P5038, vivi_26405772
    nqp_get_sc_object $P5039, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5038, $P5039
  vivi_26405772:
    unless_null $P5038, vivi_26415773
    die "Contextual $*SCOPE not found"
    box $P5040, "Contextual $*SCOPE not found"
    set $P5038, $P5040
  vivi_26415773:
    set $P5033, $P5038
  fallback5769:
    set $S5005, $P5033
    iseq $I5007, $S5005, "my"
    set $I5009, $I5007
  unless2635_end5763:
    set $I5012, $I5009
    if $I5009 goto unless2634_end5761 
    find_dynamic_lex $P5041, "$*SCOPE"
    unless_null $P5041, fallback5774
    nqp_get_sc_object $P5043, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5042, $P5043
    set fb_tmp_515, $P5042
    repr_defined $I5011, fb_tmp_515
    unless $I5011 goto if2642_else5775 
    set $P5044, fb_tmp_515["$SCOPE"]
    set $P5046, $P5044
    goto if2642_end5776
  if2642_else5775:
    null $P5045
    set $P5046, $P5045
  if2642_end5776:
    unless_null $P5046, vivi_26435777
    nqp_get_sc_object $P5047, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5046, $P5047
  vivi_26435777:
    unless_null $P5046, vivi_26445778
    die "Contextual $*SCOPE not found"
    box $P5048, "Contextual $*SCOPE not found"
    set $P5046, $P5048
  vivi_26445778:
    set $P5041, $P5046
  fallback5774:
    set $S5006, $P5041
    iseq $I5010, $S5006, "our"
    set $I5012, $I5010
  unless2634_end5761:
    unless $I5012 goto if2633_else5758 
.annotate 'line', 2405
    find_dynamic_lex $P5049, "$*MULTINESS"
    unless_null $P5049, fallback5781
    nqp_get_sc_object $P5051, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5050, $P5051
    set fb_tmp_516, $P5050
    repr_defined $I5014, fb_tmp_516
    unless $I5014 goto if2646_else5782 
    set $P5052, fb_tmp_516["$MULTINESS"]
    set $P5054, $P5052
    goto if2646_end5783
  if2646_else5782:
    null $P5053
    set $P5054, $P5053
  if2646_end5783:
    unless_null $P5054, vivi_26475784
    nqp_get_sc_object $P5055, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5054, $P5055
  vivi_26475784:
    unless_null $P5054, vivi_26485785
    die "Contextual $*MULTINESS not found"
    box $P5056, "Contextual $*MULTINESS not found"
    set $P5054, $P5056
  vivi_26485785:
    set $P5049, $P5054
  fallback5781:
    set $S5007, $P5049
    iseq $I5013, $S5007, "multi"
    unless $I5013 goto if2645_else5779 
    .const 'Sub' $P5057 = 'cuid_477_1361734139.417' 
    capture_lex $P5057
    $P5058 = $P5057()
    goto if2645_end5780
  if2645_else5779:
    find_dynamic_lex $P5059, "$*MULTINESS"
    unless_null $P5059, fallback5841
    nqp_get_sc_object $P5061, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5060, $P5061
    set fb_tmp_527, $P5060
    repr_defined $I5016, fb_tmp_527
    unless $I5016 goto if2680_else5842 
    set $P5062, fb_tmp_527["$MULTINESS"]
    set $P5064, $P5062
    goto if2680_end5843
  if2680_else5842:
    null $P5063
    set $P5064, $P5063
  if2680_end5843:
    unless_null $P5064, vivi_26815844
    nqp_get_sc_object $P5065, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5064, $P5065
  vivi_26815844:
    unless_null $P5064, vivi_26825845
    die "Contextual $*MULTINESS not found"
    box $P5066, "Contextual $*MULTINESS not found"
    set $P5064, $P5066
  vivi_26825845:
    set $P5059, $P5064
  fallback5841:
    set $S5008, $P5059
    iseq $I5015, $S5008, "proto"
    unless $I5015 goto if2679_else5839 
    .const 'Sub' $P5067 = 'cuid_479_1361734139.417' 
    capture_lex $P5067
    $P5068 = $P5067()
    set $P5071, $P5068
    goto if2679_end5840
  if2679_else5839:
    .const 'Sub' $P5069 = 'cuid_480_1361734139.417' 
    capture_lex $P5069
    $P5070 = $P5069()
    set $P5071, $P5070
  if2679_end5840:
  if2645_end5780:
.annotate 'line', 2496
    nqp_get_sc_object $P5072, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    set $S5010, $P101
    concat $S5009, "&", $S5010
    $P5073 = $P5072."new"($S5009 :named("name"), "lexical" :named("scope"))
    store_lex "$past", $P5073
    goto if2633_end5759
  if2633_else5758:
.annotate 'line', 2498
.annotate 'line', 2499
    find_lex $P5074, "$/"
    $P5075 = $P5074."CURSOR"()
    find_dynamic_lex $P5076, "$*SCOPE"
    unless_null $P5076, fallback5900
    nqp_get_sc_object $P5078, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5077, $P5078
    set fb_tmp_540, $P5077
    repr_defined $I5017, fb_tmp_540
    unless $I5017 goto if2716_else5901 
    set $P5079, fb_tmp_540["$SCOPE"]
    set $P5081, $P5079
    goto if2716_end5902
  if2716_else5901:
    null $P5080
    set $P5081, $P5080
  if2716_end5902:
    unless_null $P5081, vivi_27175903
    nqp_get_sc_object $P5082, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5081, $P5082
  vivi_27175903:
    unless_null $P5081, vivi_27185904
    die "Contextual $*SCOPE not found"
    box $P5083, "Contextual $*SCOPE not found"
    set $P5081, $P5083
  vivi_27185904:
    set $P5076, $P5081
  fallback5900:
    set $S5012, $P5076
    concat $S5011, $S5012, " scoped routines are not supported yet"
    $P5084 = $P5075."panic"($S5011)
  if2633_end5759:
    set $S5013, $P101
    iseq $I5018, $S5013, "MAIN"
    set $I5021, $I5018
    unless $I5018 goto if2720_end5908 
    find_dynamic_lex $P5085, "$*MULTINESS"
    unless_null $P5085, fallback5909
    nqp_get_sc_object $P5087, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5086, $P5087
    set fb_tmp_541, $P5086
    repr_defined $I5020, fb_tmp_541
    unless $I5020 goto if2721_else5910 
    set $P5088, fb_tmp_541["$MULTINESS"]
    set $P5090, $P5088
    goto if2721_end5911
  if2721_else5910:
    null $P5089
    set $P5090, $P5089
  if2721_end5911:
    unless_null $P5090, vivi_27225912
    nqp_get_sc_object $P5091, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5090, $P5091
  vivi_27225912:
    unless_null $P5090, vivi_27235913
    die "Contextual $*MULTINESS not found"
    box $P5092, "Contextual $*MULTINESS not found"
    set $P5090, $P5092
  vivi_27235913:
    set $P5085, $P5090
  fallback5909:
    set $S5014, $P5085
    isne $I5019, $S5014, "multi"
    set $I5021, $I5019
  if2720_end5908:
    box $P5095, $I5021
    set $P5094, $P5095
    unless $I5021 goto if2719_end5906 
.annotate 'line', 2503
    find_lex $P5093, "$block"
    store_dynamic_lex "$*MAIN_SUB", $P5093
    set $P5094, $P5093
  if2719_end5906:
    .return ($P5094) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_477_1361734139.417") :anon :lex :outer("cuid_478_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2406
    .const 'Sub' $P5062 = 'cuid_476_1361734139.417' 
    capture_lex $P5062 
    .lex "$proto", $P101 
    .lex "%sym", $P102 
    .lex "$code", $P103 
    .lex "$BLOCK", $P104 
    .local pmc fb_tmp_517 
    .local pmc fb_tmp_518 
    .local pmc fb_tmp_519 
    .local pmc fb_tmp_520 
    .local pmc fb_tmp_524 
    .local pmc fb_tmp_525 
    .local pmc fb_tmp_526 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    new $P5002, 'Hash'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P104, $P5004
    find_dynamic_lex $P5005, "$*SCOPE"
    unless_null $P5005, fallback5788
    nqp_get_sc_object $P5007, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5006, $P5007
    set fb_tmp_517, $P5006
    repr_defined $I5002, fb_tmp_517
    unless $I5002 goto if2650_else5789 
    set $P5008, fb_tmp_517["$SCOPE"]
    set $P5010, $P5008
    goto if2650_end5790
  if2650_else5789:
    null $P5009
    set $P5010, $P5009
  if2650_end5790:
    unless_null $P5010, vivi_26515791
    nqp_get_sc_object $P5011, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5010, $P5011
  vivi_26515791:
    unless_null $P5010, vivi_26525792
    die "Contextual $*SCOPE not found"
    box $P5012, "Contextual $*SCOPE not found"
    set $P5010, $P5012
  vivi_26525792:
    set $P5005, $P5010
  fallback5788:
    set $S5001, $P5005
    iseq $I5001, $S5001, "our"
    unless $I5001 goto if2649_end5787 
.annotate 'line', 2408
    box $P5013, "a multi can not be our-scoped"
    die $P5013
  if2649_end5787:
.annotate 'line', 2410
    find_dynamic_lex $P5014, "$*W"
    unless_null $P5014, fallback5793
    nqp_get_sc_object $P5016, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5015, $P5016
    set fb_tmp_518, $P5015
    repr_defined $I5003, fb_tmp_518
    unless $I5003 goto if2653_else5794 
    set $P5017, fb_tmp_518["$W"]
    set $P5019, $P5017
    goto if2653_end5795
  if2653_else5794:
    null $P5018
    set $P5019, $P5018
  if2653_end5795:
    unless_null $P5019, vivi_26545796
    nqp_get_sc_object $P5020, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5019, $P5020
  vivi_26545796:
    unless_null $P5019, vivi_26555797
    die "Contextual $*W not found"
    box $P5021, "Contextual $*W not found"
    set $P5019, $P5021
  vivi_26555797:
    set $P5014, $P5019
  fallback5793:
    $P5022 = $P5014."cur_lexpad"()
    find_lex $P5023, "$name"
    set $S5003, $P5023
    concat $S5002, "&", $S5003
    $P5024 = $P5022."symbol"($S5002)
    set $P102, $P5024
    set fb_tmp_519, $P102
    repr_defined $I5004, fb_tmp_519
    unless $I5004 goto if2657_else5800 
    set $P5025, fb_tmp_519["proto"]
    set $P5027, $P5025
    goto if2657_end5801
  if2657_else5800:
    null $P5026
    set $P5027, $P5026
  if2657_end5801:
    unless_null $P5027, vivi_26585802
    nqp_get_sc_object $P5028, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5027, $P5028
  vivi_26585802:
    unless $P5027 goto if2656_else5798 
.annotate 'line', 2411
    set fb_tmp_520, $P102
    repr_defined $I5005, fb_tmp_520
    unless $I5005 goto if2659_else5803 
    set $P5029, fb_tmp_520["value"]
    set $P5031, $P5029
    goto if2659_end5804
  if2659_else5803:
    null $P5030
    set $P5031, $P5030
  if2659_end5804:
    unless_null $P5031, vivi_26605805
    nqp_get_sc_object $P5032, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5031, $P5032
  vivi_26605805:
    set $P101, $P5031
    goto if2656_end5799
  if2656_else5798:
    .const 'Sub' $P5033 = 'cuid_476_1361734139.417' 
    capture_lex $P5033
    $P5034 = $P5033()
  if2656_end5799:
.annotate 'line', 2440
    find_dynamic_lex $P5035, "$*W"
    unless_null $P5035, fallback5826
    nqp_get_sc_object $P5037, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5036, $P5037
    set fb_tmp_524, $P5036
    repr_defined $I5006, fb_tmp_524
    unless $I5006 goto if2671_else5827 
    set $P5038, fb_tmp_524["$W"]
    set $P5040, $P5038
    goto if2671_end5828
  if2671_else5827:
    null $P5039
    set $P5040, $P5039
  if2671_end5828:
    unless_null $P5040, vivi_26725829
    nqp_get_sc_object $P5041, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5040, $P5041
  vivi_26725829:
    unless_null $P5040, vivi_26735830
    die "Contextual $*W not found"
    box $P5042, "Contextual $*W not found"
    set $P5040, $P5042
  vivi_26735830:
    set $P5035, $P5040
  fallback5826:
    find_lex $P5043, "$past"
    find_lex $P5044, "$name"
    $P5045 = $P5035."create_code"($P5043, $P5044, 0)
    set $P103, $P5045
.annotate 'line', 2441
    find_lex $P5046, "$past"
    "&attach_multi_signature"($P103, $P5046)
.annotate 'line', 2444
    $P101."add_dispatchee"($P103)
.annotate 'line', 2447
    find_dynamic_lex $P5047, "$*W"
    unless_null $P5047, fallback5831
    nqp_get_sc_object $P5049, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5048, $P5049
    set fb_tmp_525, $P5048
    repr_defined $I5007, fb_tmp_525
    unless $I5007 goto if2674_else5832 
    set $P5050, fb_tmp_525["$W"]
    set $P5052, $P5050
    goto if2674_end5833
  if2674_else5832:
    null $P5051
    set $P5052, $P5051
  if2674_end5833:
    unless_null $P5052, vivi_26755834
    nqp_get_sc_object $P5053, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5052, $P5053
  vivi_26755834:
    unless_null $P5052, vivi_26765835
    die "Contextual $*W not found"
    box $P5054, "Contextual $*W not found"
    set $P5052, $P5054
  vivi_26765835:
    set $P5047, $P5052
  fallback5831:
    $P5055 = $P5047."cur_lexpad"()
    set $P104, $P5055
.annotate 'line', 2448
    set fb_tmp_526, $P104
    repr_defined $I5008, fb_tmp_526
    unless $I5008 goto if2677_else5836 
    set $P5056, fb_tmp_526[0]
    set $P5058, $P5056
    goto if2677_end5837
  if2677_else5836:
    null $P5057
    set $P5058, $P5057
  if2677_end5837:
    unless_null $P5058, vivi_26785838
    nqp_get_sc_object $P5059, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5058, $P5059
  vivi_26785838:
    find_lex $P5060, "$past"
    $P5061 = $P5058."push"($P5060)
    .return ($P5061) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_476_1361734139.417") :anon :lex :outer("cuid_477_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2416
    .const 'Sub' $P5020 = 'cuid_475_1361734139.417' 
    capture_lex $P5020 
    .lex "$found_proto", $P101 
    .local pmc fb_tmp_521 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
.annotate 'line', 2419
    find_dynamic_lex $P5005, "$*W"
    unless_null $P5005, fallback5806
    nqp_get_sc_object $P5007, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5006, $P5007
    set fb_tmp_521, $P5006
    repr_defined $I5001, fb_tmp_521
    unless $I5001 goto if2661_else5807 
    set $P5008, fb_tmp_521["$W"]
    set $P5010, $P5008
    goto if2661_end5808
  if2661_else5807:
    null $P5009
    set $P5010, $P5009
  if2661_end5808:
    unless_null $P5010, vivi_26625809
    nqp_get_sc_object $P5011, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5010, $P5011
  vivi_26625809:
    unless_null $P5010, vivi_26635810
    die "Contextual $*W not found"
    box $P5012, "Contextual $*W not found"
    set $P5010, $P5012
  vivi_26635810:
    set $P5005, $P5010
  fallback5806:
    $P5013 = $P5005."get_legacy_block_list"()
    set $P5002, $P5013
    iter $P5004, $P5013
  for_next5821:
    unless $P5004, for_done5823
    shift $P5015, $P5004
  for_redo5822:
    .const 'Sub' $P5014 = 'cuid_475_1361734139.417' 
    capture_lex $P5014
    $P5002 = $P5014($P5015)
    goto for_next5821
  for_done5823:
    if $P101 goto unless2670_end5825 
.annotate 'line', 2431
.annotate 'line', 2432
    find_lex $P5016, "$/"
    $P5017 = $P5016."CURSOR"()
    $P5018 = $P5017."panic"("Sorry, no proto sub in scope, and auto-generation of protos is not yet implemented.")
  unless2670_end5825:
    box $P5019, "Dispatcher derivation NYI"
    die $P5019
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_475_1361734139.417") :anon :lex :outer("cuid_476_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2419
    .param pmc _lex_param_0 
    .lex "%sym", $P101 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_522 
    .local pmc fb_tmp_523 
    new $P5001, 'Hash'
    set $P101, $P5001
.annotate 'line', 2420
    find_lex $P5002, "$name"
    set $S5002, $P5002
    concat $S5001, "&", $S5002
    $P5003 = _lex_param_0."symbol"($S5001)
    set $P101, $P5003
    set fb_tmp_522, $P101
    repr_defined $I5001, fb_tmp_522
    unless $I5001 goto if2665_else5813 
    set $P5004, fb_tmp_522["proto"]
    set $P5006, $P5004
    goto if2665_end5814
  if2665_else5813:
    null $P5005
    set $P5006, $P5005
  if2665_end5814:
    unless_null $P5006, vivi_26665815
    nqp_get_sc_object $P5007, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5006, $P5007
  vivi_26665815:
    unless $P5006 goto if2664_else5811 
.annotate 'line', 2421
    set fb_tmp_523, $P101
    repr_defined $I5002, fb_tmp_523
    unless $I5002 goto if2667_else5816 
    set $P5008, fb_tmp_523["value"]
    set $P5010, $P5008
    goto if2667_end5817
  if2667_else5816:
    null $P5009
    set $P5010, $P5009
  if2667_end5817:
    unless_null $P5010, vivi_26685818
    nqp_get_sc_object $P5011, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5010, $P5011
  vivi_26685818:
    store_lex "$proto", $P5010
    box $P5012, 1
    store_lex "$found_proto", $P5012
    set $P5017, $P5012
    goto if2664_end5812
  if2664_else5811:
    set $P5016, $P101
    unless $P101 goto if2669_end5820 
.annotate 'line', 2425
.annotate 'line', 2426
    find_lex $P5013, "$/"
    $P5014 = $P5013."CURSOR"()
    $P5015 = $P5014."panic"("Cannot declare a multi when an only is already in scope.")
    set $P5016, $P5015
  if2669_end5820:
    set $P5017, $P5016
  if2664_end5812:
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_479_1361734139.417") :anon :lex :outer("cuid_478_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2450
    .lex "$code", $P101 
    .lex "$BLOCK", $P102 
    .local pmc fb_tmp_528 
    .local pmc fb_tmp_529 
    .local pmc fb_tmp_530 
    .local pmc fb_tmp_531 
    .local pmc fb_tmp_532 
    .local pmc fb_tmp_533 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
    find_dynamic_lex $P5003, "$*SCOPE"
    unless_null $P5003, fallback5848
    nqp_get_sc_object $P5005, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5004, $P5005
    set fb_tmp_528, $P5004
    repr_defined $I5002, fb_tmp_528
    unless $I5002 goto if2684_else5849 
    set $P5006, fb_tmp_528["$SCOPE"]
    set $P5008, $P5006
    goto if2684_end5850
  if2684_else5849:
    null $P5007
    set $P5008, $P5007
  if2684_end5850:
    unless_null $P5008, vivi_26855851
    nqp_get_sc_object $P5009, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5008, $P5009
  vivi_26855851:
    unless_null $P5008, vivi_26865852
    die "Contextual $*SCOPE not found"
    box $P5010, "Contextual $*SCOPE not found"
    set $P5008, $P5010
  vivi_26865852:
    set $P5003, $P5008
  fallback5848:
    set $S5001, $P5003
    iseq $I5001, $S5001, "our"
    unless $I5001 goto if2683_end5847 
.annotate 'line', 2454
    box $P5011, "our-scoped protos not yet implemented"
    die $P5011
  if2683_end5847:
.annotate 'line', 2455
    find_dynamic_lex $P5012, "$*W"
    unless_null $P5012, fallback5853
    nqp_get_sc_object $P5014, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5013, $P5014
    set fb_tmp_529, $P5013
    repr_defined $I5003, fb_tmp_529
    unless $I5003 goto if2687_else5854 
    set $P5015, fb_tmp_529["$W"]
    set $P5017, $P5015
    goto if2687_end5855
  if2687_else5854:
    null $P5016
    set $P5017, $P5016
  if2687_end5855:
    unless_null $P5017, vivi_26885856
    nqp_get_sc_object $P5018, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5017, $P5018
  vivi_26885856:
    unless_null $P5017, vivi_26895857
    die "Contextual $*W not found"
    box $P5019, "Contextual $*W not found"
    set $P5017, $P5019
  vivi_26895857:
    set $P5012, $P5017
  fallback5853:
    find_lex $P5020, "$past"
    find_lex $P5021, "$name"
    $P5022 = $P5012."create_code"($P5020, $P5021, 1)
    set $P101, $P5022
.annotate 'line', 2456
    find_dynamic_lex $P5023, "$*W"
    unless_null $P5023, fallback5858
    nqp_get_sc_object $P5025, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5024, $P5025
    set fb_tmp_530, $P5024
    repr_defined $I5004, fb_tmp_530
    unless $I5004 goto if2690_else5859 
    set $P5026, fb_tmp_530["$W"]
    set $P5028, $P5026
    goto if2690_end5860
  if2690_else5859:
    null $P5027
    set $P5028, $P5027
  if2690_end5860:
    unless_null $P5028, vivi_26915861
    nqp_get_sc_object $P5029, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5028, $P5029
  vivi_26915861:
    unless_null $P5028, vivi_26925862
    die "Contextual $*W not found"
    box $P5030, "Contextual $*W not found"
    set $P5028, $P5030
  vivi_26925862:
    set $P5023, $P5028
  fallback5858:
    $P5031 = $P5023."cur_lexpad"()
    set $P102, $P5031
.annotate 'line', 2457
    set fb_tmp_531, $P102
    repr_defined $I5005, fb_tmp_531
    unless $I5005 goto if2693_else5863 
    set $P5032, fb_tmp_531[0]
    set $P5034, $P5032
    goto if2693_end5864
  if2693_else5863:
    null $P5033
    set $P5034, $P5033
  if2693_end5864:
    unless_null $P5034, vivi_26945865
    nqp_get_sc_object $P5035, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5034, $P5035
  vivi_26945865:
    nqp_get_sc_object $P5036, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 2459
    nqp_get_sc_object $P5037, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    find_lex $P5038, "$name"
    set $S5003, $P5038
    concat $S5002, "&", $S5003
    $P5039 = $P5037."new"($S5002 :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    find_lex $P5040, "$past"
    $P5041 = $P5036."new"($P5039, $P5040, "bind" :named("op"))
    $P5034."push"($P5041)
.annotate 'line', 2462
    find_lex $P5042, "$name"
    set $S5005, $P5042
    concat $S5004, "&", $S5005
    $P102."symbol"($S5004, "lexical" :named("scope"), 1 :named("proto"), $P101 :named("value"))
.annotate 'line', 2466
    find_lex $P5043, "$block"
    set fb_tmp_532, $P5043
    repr_defined $I5006, fb_tmp_532
    unless $I5006 goto if2695_else5866 
    set $P5044, fb_tmp_532[0]
    set $P5046, $P5044
    goto if2695_end5867
  if2695_else5866:
    null $P5045
    set $P5046, $P5045
  if2695_end5867:
    unless_null $P5046, vivi_26965868
    nqp_get_sc_object $P5047, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5046, $P5047
  vivi_26965868:
    nqp_get_sc_object $P5048, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 2468
    nqp_get_sc_object $P5049, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5050 = $P5049."new"("CURRENT_DISPATCH_CAPTURE" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2469
    nqp_get_sc_object $P5051, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    $P5052 = $P5051."new"("savecapture" :named("op"))
    $P5053 = $P5048."new"($P5050, $P5052, "bind" :named("op"))
    $P5046."push"($P5053)
.annotate 'line', 2471
    find_lex $P5054, "$block"
    set fb_tmp_533, $P5054
    repr_defined $I5007, fb_tmp_533
    unless $I5007 goto if2697_else5869 
    set $P5055, fb_tmp_533[0]
    set $P5057, $P5055
    goto if2697_end5870
  if2697_else5869:
    null $P5056
    set $P5057, $P5056
  if2697_end5870:
    unless_null $P5057, vivi_26985871
    nqp_get_sc_object $P5058, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5057, $P5058
  vivi_26985871:
    nqp_get_sc_object $P5059, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 2473
    nqp_get_sc_object $P5060, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5061 = $P5060."new"("&*CURRENT_DISPATCHER" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2474
    nqp_get_sc_object $P5062, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    nqp_get_sc_object $P5063, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    $P5064 = $P5063."new"("curcode" :named("op"))
    $P5065 = $P5062."new"($P5064, "getcodeobj" :named("op"))
    $P5066 = $P5059."new"($P5061, $P5065, "bind" :named("op"))
    $P5067 = $P5057."push"($P5066)
    .return ($P5067) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_480_1361734139.417") :anon :lex :outer("cuid_478_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2477
    .lex "$BLOCK", $P101 
    .local pmc fb_tmp_534 
    .local pmc fb_tmp_535 
    .local pmc fb_tmp_536 
    .local pmc fb_tmp_537 
    .local pmc fb_tmp_538 
    .local pmc fb_tmp_539 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
.annotate 'line', 2478
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback5872
    nqp_get_sc_object $P5004, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5003, $P5004
    set fb_tmp_534, $P5003
    repr_defined $I5001, fb_tmp_534
    unless $I5001 goto if2699_else5873 
    set $P5005, fb_tmp_534["$W"]
    set $P5007, $P5005
    goto if2699_end5874
  if2699_else5873:
    null $P5006
    set $P5007, $P5006
  if2699_end5874:
    unless_null $P5007, vivi_27005875
    nqp_get_sc_object $P5008, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5007, $P5008
  vivi_27005875:
    unless_null $P5007, vivi_27015876
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_27015876:
    set $P5002, $P5007
  fallback5872:
    $P5010 = $P5002."cur_lexpad"()
    set $P101, $P5010
.annotate 'line', 2479
    set fb_tmp_535, $P101
    repr_defined $I5002, fb_tmp_535
    unless $I5002 goto if2702_else5877 
    set $P5011, fb_tmp_535[0]
    set $P5013, $P5011
    goto if2702_end5878
  if2702_else5877:
    null $P5012
    set $P5013, $P5012
  if2702_end5878:
    unless_null $P5013, vivi_27035879
    nqp_get_sc_object $P5014, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5013, $P5014
  vivi_27035879:
    nqp_get_sc_object $P5015, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 2481
    nqp_get_sc_object $P5016, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    find_lex $P5017, "$name"
    set $S5002, $P5017
    concat $S5001, "&", $S5002
    $P5018 = $P5016."new"($S5001 :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    find_lex $P5019, "$past"
    $P5020 = $P5015."new"($P5018, $P5019, "bind" :named("op"))
    $P5013."push"($P5020)
.annotate 'line', 2484
    find_lex $P5021, "$name"
    set $S5004, $P5021
    concat $S5003, "&", $S5004
    $P101."symbol"($S5003, "lexical" :named("scope"))
    find_dynamic_lex $P5022, "$*SCOPE"
    unless_null $P5022, fallback5882
    nqp_get_sc_object $P5024, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5023, $P5024
    set fb_tmp_536, $P5023
    repr_defined $I5004, fb_tmp_536
    unless $I5004 goto if2705_else5883 
    set $P5025, fb_tmp_536["$SCOPE"]
    set $P5027, $P5025
    goto if2705_end5884
  if2705_else5883:
    null $P5026
    set $P5027, $P5026
  if2705_end5884:
    unless_null $P5027, vivi_27065885
    nqp_get_sc_object $P5028, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5027, $P5028
  vivi_27065885:
    unless_null $P5027, vivi_27075886
    die "Contextual $*SCOPE not found"
    box $P5029, "Contextual $*SCOPE not found"
    set $P5027, $P5029
  vivi_27075886:
    set $P5022, $P5027
  fallback5882:
    set $S5005, $P5022
    iseq $I5003, $S5005, "our"
    box $P5063, $I5003
    set $P5062, $P5063
    unless $I5003 goto if2704_end5881 
.annotate 'line', 2485
.annotate 'line', 2488
    find_dynamic_lex $P5030, "$*W"
    unless_null $P5030, fallback5887
    nqp_get_sc_object $P5032, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5031, $P5032
    set fb_tmp_537, $P5031
    repr_defined $I5005, fb_tmp_537
    unless $I5005 goto if2708_else5888 
    set $P5033, fb_tmp_537["$W"]
    set $P5035, $P5033
    goto if2708_end5889
  if2708_else5888:
    null $P5034
    set $P5035, $P5034
  if2708_end5889:
    unless_null $P5035, vivi_27095890
    nqp_get_sc_object $P5036, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5035, $P5036
  vivi_27095890:
    unless_null $P5035, vivi_27105891
    die "Contextual $*W not found"
    box $P5037, "Contextual $*W not found"
    set $P5035, $P5037
  vivi_27105891:
    set $P5030, $P5035
  fallback5887:
    find_dynamic_lex $P5038, "$*PACKAGE"
    unless_null $P5038, fallback5892
    nqp_get_sc_object $P5040, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5039, $P5040
    set fb_tmp_538, $P5039
    repr_defined $I5006, fb_tmp_538
    unless $I5006 goto if2711_else5893 
    set $P5041, fb_tmp_538["$PACKAGE"]
    set $P5043, $P5041
    goto if2711_end5894
  if2711_else5893:
    null $P5042
    set $P5043, $P5042
  if2711_end5894:
    unless_null $P5043, vivi_27125895
    nqp_get_sc_object $P5044, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5043, $P5044
  vivi_27125895:
    unless_null $P5043, vivi_27135896
    die "Contextual $*PACKAGE not found"
    box $P5045, "Contextual $*PACKAGE not found"
    set $P5043, $P5045
  vivi_27135896:
    set $P5038, $P5043
  fallback5892:
    find_lex $P5046, "$name"
    find_lex $P5047, "$past"
    $P5030."install_package_routine"($P5038, $P5046, $P5047)
.annotate 'line', 2489
    set fb_tmp_539, $P101
    repr_defined $I5007, fb_tmp_539
    unless $I5007 goto if2714_else5897 
    set $P5048, fb_tmp_539[0]
    set $P5050, $P5048
    goto if2714_end5898
  if2714_else5897:
    null $P5049
    set $P5050, $P5049
  if2714_end5898:
    unless_null $P5050, vivi_27155899
    nqp_get_sc_object $P5051, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5050, $P5051
  vivi_27155899:
    nqp_get_sc_object $P5052, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 2491
    new $P5053, 'ResizablePMCArray'
    find_lex $P5054, "$name"
    push $P5053, $P5054
    find_lex $P5055, "$/"
    $P5056 = "&lexical_package_lookup"($P5053, $P5055)
.annotate 'line', 2492
    nqp_get_sc_object $P5057, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    find_lex $P5058, "$name"
    set $S5007, $P5058
    concat $S5006, "&", $S5007
    $P5059 = $P5057."new"($S5006 :named("name"), "lexical" :named("scope"))
    $P5060 = $P5052."new"($P5056, $P5059, "bind" :named("op"))
    $P5061 = $P5050."push"($P5060)
    set $P5062, $P5061
  if2704_end5881:
    .return ($P5062) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_481_1361734139.417") :anon :lex :outer("cuid_308_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2520
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5002, "$/"
    $P5001 = _lex_param_0."ast"()
    $P5003 = $P5001($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "method_def" :subid("cuid_309_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2524
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5117 = 'cuid_482_1361734139.417' 
    capture_lex $P5117 
    .const 'Sub' $P5117 = 'cuid_483_1361734139.417' 
    capture_lex $P5117 
    .lex "$past", $P101 
    .lex "$name", $P102 
    .lex "$lexpast", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_546 
    .local pmc fb_tmp_547 
    .local pmc fb_tmp_548 
    .local pmc fb_tmp_549 
    .local pmc fb_tmp_550 
    .local pmc fb_tmp_551 
    .local pmc fb_tmp_552 
    .local pmc fb_tmp_553 
    .local pmc fb_tmp_554 
    .local pmc fb_tmp_555 
    .local pmc fb_tmp_556 
    .local pmc fb_tmp_557 
    .local pmc fb_tmp_558 
    .local pmc fb_tmp_559 
    .local pmc fb_tmp_571 
    .local pmc fb_tmp_572 
    .local pmc fb_tmp_573 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P103, $P5003
    unless_null _lex_param_1, fallback5943
    nqp_get_sc_object $P5004, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5004
  fallback5943:
    set fb_tmp_546, _lex_param_1
    repr_defined $I5001, fb_tmp_546
    unless $I5001 goto if2737_else5941 
    set $P5005, fb_tmp_546["onlystar"]
    set $P5007, $P5005
    goto if2737_end5942
  if2737_else5941:
    null $P5006
    set $P5007, $P5006
  if2737_end5942:
    unless_null $P5007, vivi_27385944
    nqp_get_sc_object $P5008, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5007, $P5008
  vivi_27385944:
    unless $P5007 goto if2736_else5939 
.annotate 'line', 2528
.annotate 'line', 2529
    $P5009 = "&only_star_block"()
    set $P101, $P5009
    goto if2736_end5940
  if2736_else5939:
.annotate 'line', 2531
.annotate 'line', 2532
    unless_null _lex_param_1, fallback5947
    nqp_get_sc_object $P5010, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5010
  fallback5947:
    set fb_tmp_547, _lex_param_1
    repr_defined $I5002, fb_tmp_547
    unless $I5002 goto if2739_else5945 
    set $P5011, fb_tmp_547["blockoid"]
    set $P5013, $P5011
    goto if2739_end5946
  if2739_else5945:
    null $P5012
    set $P5013, $P5012
  if2739_end5946:
    unless_null $P5013, vivi_27405948
    nqp_get_sc_object $P5014, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5013, $P5014
  vivi_27405948:
    $P5015 = $P5013."ast"()
    set $P101, $P5015
.annotate 'line', 2533
    $P101."blocktype"("declaration")
    find_dynamic_lex $P5016, "$*RETURN_USED"
    unless_null $P5016, fallback5951
    nqp_get_sc_object $P5018, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5017, $P5018
    set fb_tmp_548, $P5017
    repr_defined $I5003, fb_tmp_548
    unless $I5003 goto if2742_else5952 
    set $P5019, fb_tmp_548["$RETURN_USED"]
    set $P5021, $P5019
    goto if2742_end5953
  if2742_else5952:
    null $P5020
    set $P5021, $P5020
  if2742_end5953:
    unless_null $P5021, vivi_27435954
    nqp_get_sc_object $P5022, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5021, $P5022
  vivi_27435954:
    unless_null $P5021, vivi_27445955
    die "Contextual $*RETURN_USED not found"
    box $P5023, "Contextual $*RETURN_USED not found"
    set $P5021, $P5023
  vivi_27445955:
    set $P5016, $P5021
  fallback5951:
    set $P5029, $P5016
    unless $P5016 goto if2741_end5950 
.annotate 'line', 2534
.annotate 'line', 2535
    set fb_tmp_549, $P101
    repr_defined $I5004, fb_tmp_549
    unless $I5004 goto if2745_else5956 
    set $P5024, fb_tmp_549[1]
    set $P5026, $P5024
    goto if2745_end5957
  if2745_else5956:
    null $P5025
    set $P5026, $P5025
  if2745_end5957:
    unless_null $P5026, vivi_27465958
    nqp_get_sc_object $P5027, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5026, $P5027
  vivi_27465958:
    $P5028 = "&wrap_return_handler"($P5026)
    set $P101[1], $P5028
    set $P5029, $P5028
  if2741_end5950:
  if2736_end5940:
    set fb_tmp_550, $P101
    repr_defined $I5005, fb_tmp_550
    unless $I5005 goto if2748_else5961 
    set $P5030, fb_tmp_550["signature_has_invocant"]
    set $P5032, $P5030
    goto if2748_end5962
  if2748_else5961:
    null $P5031
    set $P5032, $P5031
  if2748_end5962:
    unless_null $P5032, vivi_27495963
    nqp_get_sc_object $P5033, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5032, $P5033
  vivi_27495963:
    if $P5032 goto unless2747_end5960 
.annotate 'line', 2540
.annotate 'line', 2541
    set fb_tmp_551, $P101
    repr_defined $I5006, fb_tmp_551
    unless $I5006 goto if2750_else5964 
    set $P5034, fb_tmp_551[0]
    set $P5036, $P5034
    goto if2750_end5965
  if2750_else5964:
    null $P5035
    set $P5036, $P5035
  if2750_end5965:
    unless_null $P5036, vivi_27515966
    nqp_get_sc_object $P5037, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5036, $P5037
  vivi_27515966:
    nqp_get_sc_object $P5038, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    find_dynamic_lex $P5039, "$*PACKAGE"
    unless_null $P5039, fallback5967
    nqp_get_sc_object $P5041, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5040, $P5041
    set fb_tmp_552, $P5040
    repr_defined $I5007, fb_tmp_552
    unless $I5007 goto if2752_else5968 
    set $P5042, fb_tmp_552["$PACKAGE"]
    set $P5044, $P5042
    goto if2752_end5969
  if2752_else5968:
    null $P5043
    set $P5044, $P5043
  if2752_end5969:
    unless_null $P5044, vivi_27535970
    nqp_get_sc_object $P5045, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5044, $P5045
  vivi_27535970:
    unless_null $P5044, vivi_27545971
    die "Contextual $*PACKAGE not found"
    box $P5046, "Contextual $*PACKAGE not found"
    set $P5044, $P5046
  vivi_27545971:
    set $P5039, $P5044
  fallback5967:
    $P5047 = $P5038."new"("self" :named("name"), "lexical" :named("scope"), "param" :named("decl"), $P5039 :named("returns"))
    $P5048 = $P5036."unshift"($P5047)
  unless2747_end5960:
.annotate 'line', 2546
    $P101."symbol"("self", "lexical" :named("scope"))
    box $P5049, ""
    set $P102, $P5049
    unless_null _lex_param_1, fallback5976
    nqp_get_sc_object $P5050, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5050
  fallback5976:
    set fb_tmp_553, _lex_param_1
    repr_defined $I5008, fb_tmp_553
    unless $I5008 goto if2756_else5974 
    set $P5051, fb_tmp_553["deflongname"]
    set $P5053, $P5051
    goto if2756_end5975
  if2756_else5974:
    null $P5052
    set $P5053, $P5052
  if2756_end5975:
    unless_null $P5053, vivi_27575977
    nqp_get_sc_object $P5054, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5053, $P5054
  vivi_27575977:
    unless $P5053 goto if2755_else5972 
.annotate 'line', 2550
    unless_null _lex_param_1, fallback5980
    nqp_get_sc_object $P5055, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5055
  fallback5980:
    set fb_tmp_554, _lex_param_1
    repr_defined $I5009, fb_tmp_554
    unless $I5009 goto if2758_else5978 
    set $P5056, fb_tmp_554["private"]
    set $P5058, $P5056
    goto if2758_end5979
  if2758_else5978:
    null $P5057
    set $P5058, $P5057
  if2758_end5979:
    unless_null $P5058, vivi_27595981
    nqp_get_sc_object $P5059, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5058, $P5059
  vivi_27595981:
    set $S5002, $P5058
.annotate 'line', 2551
    unless_null _lex_param_1, fallback5986
    nqp_get_sc_object $P5060, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5060
  fallback5986:
    set fb_tmp_556, _lex_param_1
    repr_defined $I5011, fb_tmp_556
    unless $I5011 goto if2761_else5984 
    set $P5061, fb_tmp_556["deflongname"]
    set $P5063, $P5061
    goto if2761_end5985
  if2761_else5984:
    null $P5062
    set $P5063, $P5062
  if2761_end5985:
    unless_null $P5063, vivi_27625987
    nqp_get_sc_object $P5064, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5063, $P5064
  vivi_27625987:
    set fb_tmp_555, $P5063
    repr_defined $I5010, fb_tmp_555
    unless $I5010 goto if2760_else5982 
    set $P5065, fb_tmp_555[0]
    set $P5067, $P5065
    goto if2760_end5983
  if2760_else5982:
    null $P5066
    set $P5067, $P5066
  if2760_end5983:
    unless_null $P5067, vivi_27635988
    nqp_get_sc_object $P5068, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5067, $P5068
  vivi_27635988:
    $P5069 = $P5067."ast"()
    set $S5003, $P5069
    concat $S5001, $S5002, $S5003
    box $P5070, $S5001
    set $P102, $P5070
    goto if2755_end5973
  if2755_else5972:
    unless_null _lex_param_1, fallback5993
    nqp_get_sc_object $P5071, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5071
  fallback5993:
    set fb_tmp_557, _lex_param_1
    repr_defined $I5012, fb_tmp_557
    unless $I5012 goto if2765_else5991 
    set $P5072, fb_tmp_557["latename"]
    set $P5074, $P5072
    goto if2765_end5992
  if2765_else5991:
    null $P5073
    set $P5074, $P5073
  if2765_end5992:
    unless_null $P5074, vivi_27665994
    nqp_get_sc_object $P5075, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5074, $P5075
  vivi_27665994:
    set $P5092, $P5074
    unless $P5074 goto if2764_end5990 
.annotate 'line', 2553
    find_dynamic_lex $P5076, "$*PKGDECL"
    unless_null $P5076, fallback5997
    nqp_get_sc_object $P5078, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5077, $P5078
    set fb_tmp_558, $P5077
    repr_defined $I5014, fb_tmp_558
    unless $I5014 goto if2768_else5998 
    set $P5079, fb_tmp_558["$PKGDECL"]
    set $P5081, $P5079
    goto if2768_end5999
  if2768_else5998:
    null $P5080
    set $P5081, $P5080
  if2768_end5999:
    unless_null $P5081, vivi_27696000
    nqp_get_sc_object $P5082, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5081, $P5082
  vivi_27696000:
    unless_null $P5081, vivi_27706001
    die "Contextual $*PKGDECL not found"
    box $P5083, "Contextual $*PKGDECL not found"
    set $P5081, $P5083
  vivi_27706001:
    set $P5076, $P5081
  fallback5997:
    set $S5004, $P5076
    isne $I5013, $S5004, "role"
    unless $I5013 goto if2767_end5996 
.annotate 'line', 2554
.annotate 'line', 2555
    $P5084 = _lex_param_1."CURSOR"()
    $P5085 = $P5084."panic"("Late-bound method name only valid in role")
  if2767_end5996:
    unless_null _lex_param_1, fallback6004
    nqp_get_sc_object $P5086, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5086
  fallback6004:
    set fb_tmp_559, _lex_param_1
    repr_defined $I5015, fb_tmp_559
    unless $I5015 goto if2771_else6002 
    set $P5087, fb_tmp_559["latename"]
    set $P5089, $P5087
    goto if2771_end6003
  if2771_else6002:
    null $P5088
    set $P5089, $P5088
  if2771_end6003:
    unless_null $P5089, vivi_27726005
    nqp_get_sc_object $P5090, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5089, $P5090
  vivi_27726005:
    set $S5006, $P5089
    concat $S5005, "!!LATENAME!!", $S5006
    box $P5091, $S5005
    set $P102, $P5091
    set $P5092, $P102
  if2764_end5990:
  if2755_end5973:
    set $S5007, $P102
    isne $I5016, $S5007, ""
    unless $I5016 goto if2773_end6007 
    .const 'Sub' $P5093 = 'cuid_482_1361734139.417' 
    capture_lex $P5093
    $P5094 = $P5093()
  if2773_end6007:
.annotate 'line', 2593
    nqp_get_sc_object $P5095, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    $P5096 = $P5095."new"($P101, "takeclosure" :named("op"))
    set $P103, $P5096
    set $P103["sink"], $P101
    set $P103["block_past"], $P101
    set fb_tmp_571, $P101
    repr_defined $I5017, fb_tmp_571
    unless $I5017 goto if2809_else6067 
    set $P5097, fb_tmp_571["code_obj"]
    set $P5099, $P5097
    goto if2809_end6068
  if2809_else6067:
    null $P5098
    set $P5099, $P5098
  if2809_end6068:
    unless_null $P5099, vivi_28106069
    nqp_get_sc_object $P5100, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5099, $P5100
  vivi_28106069:
    set $P103["code_obj"], $P5099
.annotate 'line', 2597
    _lex_param_1."!make"($P103)
    unless_null _lex_param_1, fallback6074
    nqp_get_sc_object $P5101, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5101
  fallback6074:
    set fb_tmp_572, _lex_param_1
    repr_defined $I5018, fb_tmp_572
    unless $I5018 goto if2812_else6072 
    set $P5102, fb_tmp_572["trait"]
    set $P5104, $P5102
    goto if2812_end6073
  if2812_else6072:
    null $P5103
    set $P5104, $P5103
  if2812_end6073:
    unless_null $P5104, vivi_28136075
    nqp_get_sc_object $P5105, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5104, $P5105
  vivi_28136075:
    set $P5116, $P5104
    unless $P5104 goto if2811_end6071 
.annotate 'line', 2598
    unless_null _lex_param_1, fallback6078
    nqp_get_sc_object $P5109, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5109
  fallback6078:
    set fb_tmp_573, _lex_param_1
    repr_defined $I5019, fb_tmp_573
    unless $I5019 goto if2814_else6076 
    set $P5110, fb_tmp_573["trait"]
    set $P5112, $P5110
    goto if2814_end6077
  if2814_else6076:
    null $P5111
    set $P5112, $P5111
  if2814_end6077:
    unless_null $P5112, vivi_28156079
    nqp_get_sc_object $P5113, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5112, $P5113
  vivi_28156079:
    set $P5106, $P5112
    iter $P5108, $P5112
  for_next6080:
    unless $P5108, for_done6082
    shift $P5115, $P5108
  for_redo6081:
    .const 'Sub' $P5114 = 'cuid_483_1361734139.417' 
    capture_lex $P5114
    $P5106 = $P5114($P5115)
    goto for_next6080
  for_done6082:
    set $P5116, $P5106
  if2811_end6071:
    .return ($P5116) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_482_1361734139.417") :anon :lex :outer("cuid_309_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2559
    .lex "$meta_meth", $P101 
    .lex "$is_dispatcher", $P102 
    .lex "$code", $P103 
    .local pmc fb_tmp_560 
    .local pmc fb_tmp_561 
    .local pmc fb_tmp_562 
    .local pmc fb_tmp_563 
    .local pmc fb_tmp_564 
    .local pmc fb_tmp_565 
    .local pmc fb_tmp_566 
    .local pmc fb_tmp_567 
    .local pmc fb_tmp_568 
    .local pmc fb_tmp_569 
    .local pmc fb_tmp_570 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P103, $P5003
.annotate 'line', 2561
    find_lex $P5004, "$past"
    find_lex $P5005, "$name"
    $P5004."name"($P5005)
    find_dynamic_lex $P5006, "$*MULTINESS"
    unless_null $P5006, fallback6010
    nqp_get_sc_object $P5008, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5007, $P5008
    set fb_tmp_560, $P5007
    repr_defined $I5002, fb_tmp_560
    unless $I5002 goto if2775_else6011 
    set $P5009, fb_tmp_560["$MULTINESS"]
    set $P5011, $P5009
    goto if2775_end6012
  if2775_else6011:
    null $P5010
    set $P5011, $P5010
  if2775_end6012:
    unless_null $P5011, vivi_27766013
    nqp_get_sc_object $P5012, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5011, $P5012
  vivi_27766013:
    unless_null $P5011, vivi_27776014
    die "Contextual $*MULTINESS not found"
    box $P5013, "Contextual $*MULTINESS not found"
    set $P5011, $P5013
  vivi_27776014:
    set $P5006, $P5011
  fallback6010:
    set $S5001, $P5006
    iseq $I5001, $S5001, "multi"
    unless $I5001 goto if2774_else6008 
    set $S5002, "add_multi_method"
    goto if2774_end6009
  if2774_else6008:
    set $S5002, "add_method"
  if2774_end6009:
    box $P5014, $S5002
    set $P101, $P5014
    find_dynamic_lex $P5015, "$*MULTINESS"
    unless_null $P5015, fallback6015
    nqp_get_sc_object $P5017, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5016, $P5017
    set fb_tmp_561, $P5016
    repr_defined $I5004, fb_tmp_561
    unless $I5004 goto if2778_else6016 
    set $P5018, fb_tmp_561["$MULTINESS"]
    set $P5020, $P5018
    goto if2778_end6017
  if2778_else6016:
    null $P5019
    set $P5020, $P5019
  if2778_end6017:
    unless_null $P5020, vivi_27796018
    nqp_get_sc_object $P5021, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5020, $P5021
  vivi_27796018:
    unless_null $P5020, vivi_27806019
    die "Contextual $*MULTINESS not found"
    box $P5022, "Contextual $*MULTINESS not found"
    set $P5020, $P5022
  vivi_27806019:
    set $P5015, $P5020
  fallback6015:
    set $S5003, $P5015
    iseq $I5003, $S5003, "proto"
    box $P5023, $I5003
    set $P102, $P5023
.annotate 'line', 2566
    find_dynamic_lex $P5024, "$*W"
    unless_null $P5024, fallback6020
    nqp_get_sc_object $P5026, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5025, $P5026
    set fb_tmp_562, $P5025
    repr_defined $I5005, fb_tmp_562
    unless $I5005 goto if2781_else6021 
    set $P5027, fb_tmp_562["$W"]
    set $P5029, $P5027
    goto if2781_end6022
  if2781_else6021:
    null $P5028
    set $P5029, $P5028
  if2781_end6022:
    unless_null $P5029, vivi_27826023
    nqp_get_sc_object $P5030, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5029, $P5030
  vivi_27826023:
    unless_null $P5029, vivi_27836024
    die "Contextual $*W not found"
    box $P5031, "Contextual $*W not found"
    set $P5029, $P5031
  vivi_27836024:
    set $P5024, $P5029
  fallback6020:
    find_lex $P5032, "$past"
    find_lex $P5033, "$name"
    $P5034 = $P5024."create_code"($P5032, $P5033, $P102)
    set $P103, $P5034
    find_dynamic_lex $P5035, "$*MULTINESS"
    unless_null $P5035, fallback6027
    nqp_get_sc_object $P5037, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5036, $P5037
    set fb_tmp_563, $P5036
    repr_defined $I5007, fb_tmp_563
    unless $I5007 goto if2785_else6028 
    set $P5038, fb_tmp_563["$MULTINESS"]
    set $P5040, $P5038
    goto if2785_end6029
  if2785_else6028:
    null $P5039
    set $P5040, $P5039
  if2785_end6029:
    unless_null $P5040, vivi_27866030
    nqp_get_sc_object $P5041, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5040, $P5041
  vivi_27866030:
    unless_null $P5040, vivi_27876031
    die "Contextual $*MULTINESS not found"
    box $P5042, "Contextual $*MULTINESS not found"
    set $P5040, $P5042
  vivi_27876031:
    set $P5035, $P5040
  fallback6027:
    set $S5004, $P5035
    iseq $I5006, $S5004, "multi"
    unless $I5006 goto if2784_end6026 
.annotate 'line', 2567
    find_lex $P5043, "$past"
    $P5044 = "&attach_multi_signature"($P103, $P5043)
  if2784_end6026:
.annotate 'line', 2568
    find_dynamic_lex $P5045, "$*W"
    unless_null $P5045, fallback6032
    nqp_get_sc_object $P5047, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5046, $P5047
    set fb_tmp_564, $P5046
    repr_defined $I5008, fb_tmp_564
    unless $I5008 goto if2788_else6033 
    set $P5048, fb_tmp_564["$W"]
    set $P5050, $P5048
    goto if2788_end6034
  if2788_else6033:
    null $P5049
    set $P5050, $P5049
  if2788_end6034:
    unless_null $P5050, vivi_27896035
    nqp_get_sc_object $P5051, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5050, $P5051
  vivi_27896035:
    unless_null $P5050, vivi_27906036
    die "Contextual $*W not found"
    box $P5052, "Contextual $*W not found"
    set $P5050, $P5052
  vivi_27906036:
    set $P5045, $P5050
  fallback6032:
    find_dynamic_lex $P5053, "$*PACKAGE"
    unless_null $P5053, fallback6037
    nqp_get_sc_object $P5055, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5054, $P5055
    set fb_tmp_565, $P5054
    repr_defined $I5009, fb_tmp_565
    unless $I5009 goto if2791_else6038 
    set $P5056, fb_tmp_565["$PACKAGE"]
    set $P5058, $P5056
    goto if2791_end6039
  if2791_else6038:
    null $P5057
    set $P5058, $P5057
  if2791_end6039:
    unless_null $P5058, vivi_27926040
    nqp_get_sc_object $P5059, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5058, $P5059
  vivi_27926040:
    unless_null $P5058, vivi_27936041
    die "Contextual $*PACKAGE not found"
    box $P5060, "Contextual $*PACKAGE not found"
    set $P5058, $P5060
  vivi_27936041:
    set $P5053, $P5058
  fallback6037:
    find_lex $P5061, "$name"
    $P5045."pkg_add_method"($P5053, $P101, $P5061, $P103)
    find_lex $P5062, "$past"
    set $P5062["code_obj"], $P103
    find_dynamic_lex $P5063, "$*SCOPE"
    unless_null $P5063, fallback6044
    nqp_get_sc_object $P5065, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5064, $P5065
    set fb_tmp_566, $P5064
    repr_defined $I5011, fb_tmp_566
    unless $I5011 goto if2795_else6045 
    set $P5066, fb_tmp_566["$SCOPE"]
    set $P5068, $P5066
    goto if2795_end6046
  if2795_else6045:
    null $P5067
    set $P5068, $P5067
  if2795_end6046:
    unless_null $P5068, vivi_27966047
    nqp_get_sc_object $P5069, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5068, $P5069
  vivi_27966047:
    unless_null $P5068, vivi_27976048
    die "Contextual $*SCOPE not found"
    box $P5070, "Contextual $*SCOPE not found"
    set $P5068, $P5070
  vivi_27976048:
    set $P5063, $P5068
  fallback6044:
    set $S5005, $P5063
    iseq $I5010, $S5005, "our"
    unless $I5010 goto if2794_end6043 
.annotate 'line', 2572
.annotate 'line', 2573
    find_dynamic_lex $P5071, "$*W"
    unless_null $P5071, fallback6049
    nqp_get_sc_object $P5073, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5072, $P5073
    set fb_tmp_567, $P5072
    repr_defined $I5012, fb_tmp_567
    unless $I5012 goto if2798_else6050 
    set $P5074, fb_tmp_567["$W"]
    set $P5076, $P5074
    goto if2798_end6051
  if2798_else6050:
    null $P5075
    set $P5076, $P5075
  if2798_end6051:
    unless_null $P5076, vivi_27996052
    nqp_get_sc_object $P5077, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5076, $P5077
  vivi_27996052:
    unless_null $P5076, vivi_28006053
    die "Contextual $*W not found"
    box $P5078, "Contextual $*W not found"
    set $P5076, $P5078
  vivi_28006053:
    set $P5071, $P5076
  fallback6049:
    find_dynamic_lex $P5079, "$*PACKAGE"
    unless_null $P5079, fallback6054
    nqp_get_sc_object $P5081, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5080, $P5081
    set fb_tmp_568, $P5080
    repr_defined $I5013, fb_tmp_568
    unless $I5013 goto if2801_else6055 
    set $P5082, fb_tmp_568["$PACKAGE"]
    set $P5084, $P5082
    goto if2801_end6056
  if2801_else6055:
    null $P5083
    set $P5084, $P5083
  if2801_end6056:
    unless_null $P5084, vivi_28026057
    nqp_get_sc_object $P5085, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5084, $P5085
  vivi_28026057:
    unless_null $P5084, vivi_28036058
    die "Contextual $*PACKAGE not found"
    box $P5086, "Contextual $*PACKAGE not found"
    set $P5084, $P5086
  vivi_28036058:
    set $P5079, $P5084
  fallback6054:
    find_lex $P5087, "$name"
    find_lex $P5088, "$past"
    $P5089 = $P5071."install_package_routine"($P5079, $P5087, $P5088)
  if2794_end6043:
    set $P5115, $P102
    unless $P102 goto if2804_end6060 
.annotate 'line', 2578
.annotate 'line', 2579
    find_lex $P5090, "$past"
    set fb_tmp_569, $P5090
    repr_defined $I5014, fb_tmp_569
    unless $I5014 goto if2805_else6061 
    set $P5091, fb_tmp_569[0]
    set $P5093, $P5091
    goto if2805_end6062
  if2805_else6061:
    null $P5092
    set $P5093, $P5092
  if2805_end6062:
    unless_null $P5093, vivi_28066063
    nqp_get_sc_object $P5094, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5093, $P5094
  vivi_28066063:
    nqp_get_sc_object $P5095, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 2581
    nqp_get_sc_object $P5096, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5097 = $P5096."new"("CURRENT_DISPATCH_CAPTURE" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2582
    nqp_get_sc_object $P5098, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    $P5099 = $P5098."new"("savecapture" :named("op"))
    $P5100 = $P5095."new"($P5097, $P5099, "bind" :named("op"))
    $P5093."push"($P5100)
.annotate 'line', 2584
    find_lex $P5101, "$past"
    set fb_tmp_570, $P5101
    repr_defined $I5015, fb_tmp_570
    unless $I5015 goto if2807_else6064 
    set $P5102, fb_tmp_570[0]
    set $P5104, $P5102
    goto if2807_end6065
  if2807_else6064:
    null $P5103
    set $P5104, $P5103
  if2807_end6065:
    unless_null $P5104, vivi_28086066
    nqp_get_sc_object $P5105, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5104, $P5105
  vivi_28086066:
    nqp_get_sc_object $P5106, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 2586
    nqp_get_sc_object $P5107, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5108 = $P5107."new"("&*CURRENT_DISPATCHER" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2587
    nqp_get_sc_object $P5109, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    nqp_get_sc_object $P5110, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    $P5111 = $P5110."new"("curcode" :named("op"))
    $P5112 = $P5109."new"($P5111, "getcodeobj" :named("op"))
    $P5113 = $P5106."new"($P5108, $P5112, "bind" :named("op"))
    $P5114 = $P5104."push"($P5113)
    set $P5115, $P5114
  if2804_end6060:
    .return ($P5115) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_483_1361734139.417") :anon :lex :outer("cuid_309_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2599
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5002, "$/"
    $P5001 = _lex_param_0."ast"()
    $P5003 = $P5001($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "signature" :subid("cuid_310_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2651
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5033 = 'cuid_484_1361734139.417' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_485_1361734139.417' 
    capture_lex $P5033 
    .lex "$BLOCK", $P101 
    .lex "$BLOCKINIT", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_574 
    .local pmc fb_tmp_575 
    .local pmc fb_tmp_576 
    .local pmc fb_tmp_579 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
.annotate 'line', 2652
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback6083
    nqp_get_sc_object $P5005, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5004, $P5005
    set fb_tmp_574, $P5004
    repr_defined $I5001, fb_tmp_574
    unless $I5001 goto if2816_else6084 
    set $P5006, fb_tmp_574["$W"]
    set $P5008, $P5006
    goto if2816_end6085
  if2816_else6084:
    null $P5007
    set $P5008, $P5007
  if2816_end6085:
    unless_null $P5008, vivi_28176086
    nqp_get_sc_object $P5009, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5008, $P5009
  vivi_28176086:
    unless_null $P5008, vivi_28186087
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_28186087:
    set $P5003, $P5008
  fallback6083:
    $P5011 = $P5003."cur_lexpad"()
    set $P101, $P5011
    set fb_tmp_575, $P101
    repr_defined $I5002, fb_tmp_575
    unless $I5002 goto if2819_else6088 
    set $P5012, fb_tmp_575[0]
    set $P5014, $P5012
    goto if2819_end6089
  if2819_else6088:
    null $P5013
    set $P5014, $P5013
  if2819_end6089:
    unless_null $P5014, vivi_28206090
    nqp_get_sc_object $P5015, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5014, $P5015
  vivi_28206090:
    set $P102, $P5014
    unless_null _lex_param_1, fallback6095
    nqp_get_sc_object $P5016, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5016
  fallback6095:
    set fb_tmp_576, _lex_param_1
    repr_defined $I5003, fb_tmp_576
    unless $I5003 goto if2822_else6093 
    set $P5017, fb_tmp_576["invocant"]
    set $P5019, $P5017
    goto if2822_end6094
  if2822_else6093:
    null $P5018
    set $P5019, $P5018
  if2822_end6094:
    unless_null $P5019, vivi_28236096
    nqp_get_sc_object $P5020, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5019, $P5020
  vivi_28236096:
    unless $P5019 goto if2821_end6092 
    .const 'Sub' $P5021 = 'cuid_484_1361734139.417' 
    capture_lex $P5021
    $P5022 = $P5021()
  if2821_end6092:
    unless_null _lex_param_1, fallback6106
    nqp_get_sc_object $P5026, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5026
  fallback6106:
    set fb_tmp_579, _lex_param_1
    repr_defined $I5004, fb_tmp_579
    unless $I5004 goto if2828_else6104 
    set $P5027, fb_tmp_579["parameter"]
    set $P5029, $P5027
    goto if2828_end6105
  if2828_else6104:
    null $P5028
    set $P5029, $P5028
  if2828_end6105:
    unless_null $P5029, vivi_28296107
    nqp_get_sc_object $P5030, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5029, $P5030
  vivi_28296107:
    set $P5023, $P5029
    iter $P5025, $P5029
  for_next6108:
    unless $P5025, for_done6110
    shift $P5032, $P5025
  for_redo6109:
    .const 'Sub' $P5031 = 'cuid_485_1361734139.417' 
    capture_lex $P5031
    $P5023 = $P5031($P5032)
    goto for_next6108
  for_done6110:
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_484_1361734139.417") :anon :lex :outer("cuid_310_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2654
    .lex "$inv", $P101 
    .local pmc fb_tmp_577 
    .local pmc fb_tmp_578 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
.annotate 'line', 2655
    find_lex $P5002, "$/"
    unless_null $P5002, fallback6101
    nqp_get_sc_object $P5003, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5002, $P5003
  fallback6101:
    set fb_tmp_578, $P5002
    repr_defined $I5002, fb_tmp_578
    unless $I5002 goto if2825_else6099 
    set $P5004, fb_tmp_578["invocant"]
    set $P5006, $P5004
    goto if2825_end6100
  if2825_else6099:
    null $P5005
    set $P5006, $P5005
  if2825_end6100:
    unless_null $P5006, vivi_28266102
    nqp_get_sc_object $P5007, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5006, $P5007
  vivi_28266102:
    set fb_tmp_577, $P5006
    repr_defined $I5001, fb_tmp_577
    unless $I5001 goto if2824_else6097 
    set $P5008, fb_tmp_577[0]
    set $P5010, $P5008
    goto if2824_end6098
  if2824_else6097:
    null $P5009
    set $P5010, $P5009
  if2824_end6098:
    unless_null $P5010, vivi_28276103
    nqp_get_sc_object $P5011, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5010, $P5011
  vivi_28276103:
    $P5012 = $P5010."ast"()
    set $P101, $P5012
.annotate 'line', 2656
    find_lex $P5013, "$BLOCKINIT"
    $P5013."push"($P101)
.annotate 'line', 2657
    find_lex $P5014, "$BLOCKINIT"
    nqp_get_sc_object $P5015, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 2659
    nqp_get_sc_object $P5016, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5017 = $P5016."new"("self" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2660
    nqp_get_sc_object $P5018, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5019 = $P101."name"()
    $P5020 = $P5018."new"("lexical" :named("scope"), $P5019 :named("name"))
    $P5021 = $P5015."new"($P5017, $P5020, "bind" :named("op"))
    $P5014."push"($P5021)
    find_lex $P5022, "$BLOCK"
    box $P5023, 1
    set $P5022["signature_has_invocant"], $P5023
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_485_1361734139.417") :anon :lex :outer("cuid_310_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2664
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "$BLOCKINIT"
    $P5002 = _lex_param_0."ast"()
    $P5003 = $P5001."push"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "parameter" :subid("cuid_311_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2667
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5134 = 'cuid_487_1361734139.417' 
    capture_lex $P5134 
    .lex "$quant", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_580 
    .local pmc fb_tmp_581 
    .local pmc fb_tmp_582 
    .local pmc fb_tmp_583 
    .local pmc fb_tmp_584 
    .local pmc fb_tmp_585 
    .local pmc fb_tmp_586 
    .local pmc fb_tmp_587 
    .local pmc fb_tmp_588 
    .local pmc fb_tmp_589 
    .local pmc fb_tmp_590 
    .local pmc fb_tmp_591 
    .local pmc fb_tmp_592 
    .local pmc fb_tmp_593 
    .local pmc fb_tmp_594 
    .local pmc fb_tmp_595 
    .local pmc fb_tmp_596 
    .local pmc fb_tmp_597 
    .local pmc fb_tmp_602 
    .local pmc fb_tmp_603 
    .local pmc fb_tmp_604 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
    unless_null _lex_param_1, fallback6113
    nqp_get_sc_object $P5003, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5003
  fallback6113:
    set fb_tmp_580, _lex_param_1
    repr_defined $I5001, fb_tmp_580
    unless $I5001 goto if2830_else6111 
    set $P5004, fb_tmp_580["quant"]
    set $P5006, $P5004
    goto if2830_end6112
  if2830_else6111:
    null $P5005
    set $P5006, $P5005
  if2830_end6112:
    unless_null $P5006, vivi_28316114
    nqp_get_sc_object $P5007, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5006, $P5007
  vivi_28316114:
    set $P101, $P5006
    unless_null _lex_param_1, fallback6119
    nqp_get_sc_object $P5008, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5008
  fallback6119:
    set fb_tmp_581, _lex_param_1
    repr_defined $I5002, fb_tmp_581
    unless $I5002 goto if2833_else6117 
    set $P5009, fb_tmp_581["named_param"]
    set $P5011, $P5009
    goto if2833_end6118
  if2833_else6117:
    null $P5010
    set $P5011, $P5010
  if2833_end6118:
    unless_null $P5011, vivi_28346120
    nqp_get_sc_object $P5012, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5011, $P5012
  vivi_28346120:
    unless $P5011 goto if2832_else6115 
.annotate 'line', 2670
.annotate 'line', 2671
    unless_null _lex_param_1, fallback6123
    nqp_get_sc_object $P5013, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5013
  fallback6123:
    set fb_tmp_582, _lex_param_1
    repr_defined $I5003, fb_tmp_582
    unless $I5003 goto if2835_else6121 
    set $P5014, fb_tmp_582["named_param"]
    set $P5016, $P5014
    goto if2835_end6122
  if2835_else6121:
    null $P5015
    set $P5016, $P5015
  if2835_end6122:
    unless_null $P5016, vivi_28366124
    nqp_get_sc_object $P5017, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5016, $P5017
  vivi_28366124:
    $P5018 = $P5016."ast"()
    set $P102, $P5018
    set $S5001, $P101
    isne $I5004, $S5001, "!"
    box $P5035, $I5004
    set $P5034, $P5035
    unless $I5004 goto if2837_end6126 
.annotate 'line', 2672
.annotate 'line', 2673
    unless_null _lex_param_1, fallback6133
    nqp_get_sc_object $P5019, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5019
  fallback6133:
    set fb_tmp_585, _lex_param_1
    repr_defined $I5007, fb_tmp_585
    unless $I5007 goto if2840_else6131 
    set $P5020, fb_tmp_585["named_param"]
    set $P5022, $P5020
    goto if2840_end6132
  if2840_else6131:
    null $P5021
    set $P5022, $P5021
  if2840_end6132:
    unless_null $P5022, vivi_28416134
    nqp_get_sc_object $P5023, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5022, $P5023
  vivi_28416134:
    set fb_tmp_584, $P5022
    repr_defined $I5006, fb_tmp_584
    unless $I5006 goto if2839_else6129 
    set $P5024, fb_tmp_584["param_var"]
    set $P5026, $P5024
    goto if2839_end6130
  if2839_else6129:
    null $P5025
    set $P5026, $P5025
  if2839_end6130:
    unless_null $P5026, vivi_28426135
    nqp_get_sc_object $P5027, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5026, $P5027
  vivi_28426135:
    set fb_tmp_583, $P5026
    repr_defined $I5005, fb_tmp_583
    unless $I5005 goto if2838_else6127 
    set $P5028, fb_tmp_583["sigil"]
    set $P5030, $P5028
    goto if2838_end6128
  if2838_else6127:
    null $P5029
    set $P5030, $P5029
  if2838_end6128:
    unless_null $P5030, vivi_28436136
    nqp_get_sc_object $P5031, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5030, $P5031
  vivi_28436136:
    $P5032 = "&default_for"($P5030)
    $P5033 = $P102."default"($P5032)
    set $P5034, $P5033
  if2837_end6126:
    goto if2832_end6116
  if2832_else6115:
.annotate 'line', 2676
.annotate 'line', 2677
    unless_null _lex_param_1, fallback6139
    nqp_get_sc_object $P5036, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5036
  fallback6139:
    set fb_tmp_586, _lex_param_1
    repr_defined $I5008, fb_tmp_586
    unless $I5008 goto if2844_else6137 
    set $P5037, fb_tmp_586["param_var"]
    set $P5039, $P5037
    goto if2844_end6138
  if2844_else6137:
    null $P5038
    set $P5039, $P5038
  if2844_end6138:
    unless_null $P5039, vivi_28456140
    nqp_get_sc_object $P5040, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5039, $P5040
  vivi_28456140:
    $P5041 = $P5039."ast"()
    set $P102, $P5041
    set $S5002, $P101
    iseq $I5009, $S5002, "*"
    unless $I5009 goto if2846_else6141 
.annotate 'line', 2678
.annotate 'line', 2679
    $P102."slurpy"(1)
.annotate 'line', 2680
    unless_null _lex_param_1, fallback6147
    nqp_get_sc_object $P5042, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5042
  fallback6147:
    set fb_tmp_588, _lex_param_1
    repr_defined $I5012, fb_tmp_588
    unless $I5012 goto if2848_else6145 
    set $P5043, fb_tmp_588["param_var"]
    set $P5045, $P5043
    goto if2848_end6146
  if2848_else6145:
    null $P5044
    set $P5045, $P5044
  if2848_end6146:
    unless_null $P5045, vivi_28496148
    nqp_get_sc_object $P5046, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5045, $P5046
  vivi_28496148:
    set fb_tmp_587, $P5045
    repr_defined $I5011, fb_tmp_587
    unless $I5011 goto if2847_else6143 
    set $P5047, fb_tmp_587["sigil"]
    set $P5049, $P5047
    goto if2847_end6144
  if2847_else6143:
    null $P5048
    set $P5049, $P5048
  if2847_end6144:
    unless_null $P5049, vivi_28506149
    nqp_get_sc_object $P5050, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5049, $P5050
  vivi_28506149:
    set $S5003, $P5049
    iseq $I5010, $S5003, "%"
    $P5051 = $P102."named"($I5010)
    set $P5065, $P5051
    goto if2846_end6142
  if2846_else6141:
    set $S5004, $P101
    iseq $I5013, $S5004, "?"
    box $P5064, $I5013
    set $P5063, $P5064
    unless $I5013 goto if2851_end6151 
.annotate 'line', 2682
.annotate 'line', 2683
    unless_null _lex_param_1, fallback6156
    nqp_get_sc_object $P5052, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5052
  fallback6156:
    set fb_tmp_590, _lex_param_1
    repr_defined $I5015, fb_tmp_590
    unless $I5015 goto if2853_else6154 
    set $P5053, fb_tmp_590["param_var"]
    set $P5055, $P5053
    goto if2853_end6155
  if2853_else6154:
    null $P5054
    set $P5055, $P5054
  if2853_end6155:
    unless_null $P5055, vivi_28546157
    nqp_get_sc_object $P5056, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5055, $P5056
  vivi_28546157:
    set fb_tmp_589, $P5055
    repr_defined $I5014, fb_tmp_589
    unless $I5014 goto if2852_else6152 
    set $P5057, fb_tmp_589["sigil"]
    set $P5059, $P5057
    goto if2852_end6153
  if2852_else6152:
    null $P5058
    set $P5059, $P5058
  if2852_end6153:
    unless_null $P5059, vivi_28556158
    nqp_get_sc_object $P5060, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5059, $P5060
  vivi_28556158:
    $P5061 = "&default_for"($P5059)
    $P5062 = $P102."default"($P5061)
    set $P5063, $P5062
  if2851_end6151:
    set $P5065, $P5063
  if2846_end6142:
  if2832_end6116:
    unless_null _lex_param_1, fallback6163
    nqp_get_sc_object $P5066, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5066
  fallback6163:
    set fb_tmp_591, _lex_param_1
    repr_defined $I5016, fb_tmp_591
    unless $I5016 goto if2857_else6161 
    set $P5067, fb_tmp_591["default_value"]
    set $P5069, $P5067
    goto if2857_end6162
  if2857_else6161:
    null $P5068
    set $P5069, $P5068
  if2857_end6162:
    unless_null $P5069, vivi_28586164
    nqp_get_sc_object $P5070, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5069, $P5070
  vivi_28586164:
    unless $P5069 goto if2856_end6160 
.annotate 'line', 2686
    set $S5005, $P101
    iseq $I5017, $S5005, "*"
    unless $I5017 goto if2859_end6166 
.annotate 'line', 2687
.annotate 'line', 2688
    $P5071 = _lex_param_1."CURSOR"()
    $P5072 = $P5071."panic"("Can't put default on slurpy parameter")
  if2859_end6166:
    set $S5006, $P101
    iseq $I5018, $S5006, "!"
    unless $I5018 goto if2860_end6168 
.annotate 'line', 2690
.annotate 'line', 2691
    $P5073 = _lex_param_1."CURSOR"()
    $P5074 = $P5073."panic"("Can't put default on required parameter")
  if2860_end6168:
.annotate 'line', 2693
    unless_null _lex_param_1, fallback6175
    nqp_get_sc_object $P5075, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5075
  fallback6175:
    set fb_tmp_594, _lex_param_1
    repr_defined $I5021, fb_tmp_594
    unless $I5021 goto if2863_else6173 
    set $P5076, fb_tmp_594["default_value"]
    set $P5078, $P5076
    goto if2863_end6174
  if2863_else6173:
    null $P5077
    set $P5078, $P5077
  if2863_end6174:
    unless_null $P5078, vivi_28646176
    nqp_get_sc_object $P5079, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5078, $P5079
  vivi_28646176:
    set fb_tmp_593, $P5078
    repr_defined $I5020, fb_tmp_593
    unless $I5020 goto if2862_else6171 
    set $P5080, fb_tmp_593[0]
    set $P5082, $P5080
    goto if2862_end6172
  if2862_else6171:
    null $P5081
    set $P5082, $P5081
  if2862_end6172:
    unless_null $P5082, vivi_28656177
    nqp_get_sc_object $P5083, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5082, $P5083
  vivi_28656177:
    set fb_tmp_592, $P5082
    repr_defined $I5019, fb_tmp_592
    unless $I5019 goto if2861_else6169 
    set $P5084, fb_tmp_592["EXPR"]
    set $P5086, $P5084
    goto if2861_end6170
  if2861_else6169:
    null $P5085
    set $P5086, $P5085
  if2861_end6170:
    unless_null $P5086, vivi_28666178
    nqp_get_sc_object $P5087, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5086, $P5087
  vivi_28666178:
    $P5088 = $P5086."ast"()
    $P5089 = $P102."default"($P5088)
  if2856_end6160:
.annotate 'line', 2695
    $P5090 = $P102."default"()
    if $P5090 goto unless2867_end6180 
    find_dynamic_lex $P5091, "$*W"
    unless_null $P5091, fallback6181
    nqp_get_sc_object $P5093, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5092, $P5093
    set fb_tmp_595, $P5092
    repr_defined $I5022, fb_tmp_595
    unless $I5022 goto if2868_else6182 
    set $P5094, fb_tmp_595["$W"]
    set $P5096, $P5094
    goto if2868_end6183
  if2868_else6182:
    null $P5095
    set $P5096, $P5095
  if2868_end6183:
    unless_null $P5096, vivi_28696184
    nqp_get_sc_object $P5097, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5096, $P5097
  vivi_28696184:
    unless_null $P5096, vivi_28706185
    die "Contextual $*W not found"
    box $P5098, "Contextual $*W not found"
    set $P5096, $P5098
  vivi_28706185:
    set $P5091, $P5096
  fallback6181:
    $P5099 = $P5091."cur_lexpad"()
    find_dynamic_lex $P5100, "$*W"
    unless_null $P5100, fallback6186
    nqp_get_sc_object $P5102, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5101, $P5102
    set fb_tmp_596, $P5101
    repr_defined $I5023, fb_tmp_596
    unless $I5023 goto if2871_else6187 
    set $P5103, fb_tmp_596["$W"]
    set $P5105, $P5103
    goto if2871_end6188
  if2871_else6187:
    null $P5104
    set $P5105, $P5104
  if2871_end6188:
    unless_null $P5105, vivi_28726189
    nqp_get_sc_object $P5106, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5105, $P5106
  vivi_28726189:
    unless_null $P5105, vivi_28736190
    die "Contextual $*W not found"
    box $P5107, "Contextual $*W not found"
    set $P5105, $P5107
  vivi_28736190:
    set $P5100, $P5105
  fallback6186:
    $P5108 = $P5100."cur_lexpad"()
    $P5109 = $P5108."arity"()
    set $N5002, $P5109
    set $N5003, 1
    add $N5001, $N5002, $N5003
    $P5110 = $P5099."arity"($N5001)
  unless2867_end6180:
    unless_null _lex_param_1, fallback6195
    nqp_get_sc_object $P5111, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5111
  fallback6195:
    set fb_tmp_597, _lex_param_1
    repr_defined $I5024, fb_tmp_597
    unless $I5024 goto if2875_else6193 
    set $P5112, fb_tmp_597["typename"]
    set $P5114, $P5112
    goto if2875_end6194
  if2875_else6193:
    null $P5113
    set $P5114, $P5113
  if2875_end6194:
    unless_null $P5114, vivi_28766196
    nqp_get_sc_object $P5115, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5114, $P5115
  vivi_28766196:
    unless $P5114 goto if2874_end6192 
    .const 'Sub' $P5116 = 'cuid_487_1361734139.417' 
    capture_lex $P5116
    $P5117 = $P5116()
  if2874_end6192:
    unless_null _lex_param_1, fallback6223
    nqp_get_sc_object $P5118, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5118
  fallback6223:
    set fb_tmp_602, _lex_param_1
    repr_defined $I5025, fb_tmp_602
    unless $I5025 goto if2890_else6221 
    set $P5119, fb_tmp_602["definedness"]
    set $P5121, $P5119
    goto if2890_end6222
  if2890_else6221:
    null $P5120
    set $P5121, $P5120
  if2890_end6222:
    unless_null $P5121, vivi_28916224
    nqp_get_sc_object $P5122, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5121, $P5122
  vivi_28916224:
    unless $P5121 goto if2889_end6220 
.annotate 'line', 2710
    unless_null _lex_param_1, fallback6229
    nqp_get_sc_object $P5123, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5123
  fallback6229:
    set fb_tmp_604, _lex_param_1
    repr_defined $I5027, fb_tmp_604
    unless $I5027 goto if2893_else6227 
    set $P5124, fb_tmp_604["definedness"]
    set $P5126, $P5124
    goto if2893_end6228
  if2893_else6227:
    null $P5125
    set $P5126, $P5125
  if2893_end6228:
    unless_null $P5126, vivi_28946230
    nqp_get_sc_object $P5127, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5126, $P5127
  vivi_28946230:
    set fb_tmp_603, $P5126
    repr_defined $I5026, fb_tmp_603
    unless $I5026 goto if2892_else6225 
    set $P5128, fb_tmp_603[0]
    set $P5130, $P5128
    goto if2892_end6226
  if2892_else6225:
    null $P5129
    set $P5130, $P5129
  if2892_end6226:
    unless_null $P5130, vivi_28956231
    nqp_get_sc_object $P5131, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5130, $P5131
  vivi_28956231:
    set $S5007, $P5130
    box $P5132, $S5007
    set $P102["definedness"], $P5132
  if2889_end6220:
.annotate 'line', 2714
    $P5133 = _lex_param_1."!make"($P102)
    .return ($P5133) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_487_1361734139.417") :anon :lex :outer("cuid_311_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2698
    .const 'Sub' $P5019 = 'cuid_486_1361734139.417' 
    capture_lex $P5019 
    .lex "$type", $P101 
    .local pmc fb_tmp_598 
    .local pmc fb_tmp_599 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
.annotate 'line', 2699
    find_lex $P5002, "$/"
    unless_null $P5002, fallback6201
    nqp_get_sc_object $P5003, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5002, $P5003
  fallback6201:
    set fb_tmp_599, $P5002
    repr_defined $I5002, fb_tmp_599
    unless $I5002 goto if2878_else6199 
    set $P5004, fb_tmp_599["typename"]
    set $P5006, $P5004
    goto if2878_end6200
  if2878_else6199:
    null $P5005
    set $P5006, $P5005
  if2878_end6200:
    unless_null $P5006, vivi_28796202
    nqp_get_sc_object $P5007, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5006, $P5007
  vivi_28796202:
    set fb_tmp_598, $P5006
    repr_defined $I5001, fb_tmp_598
    unless $I5001 goto if2877_else6197 
    set $P5008, fb_tmp_598[0]
    set $P5010, $P5008
    goto if2877_end6198
  if2877_else6197:
    null $P5009
    set $P5010, $P5009
  if2877_end6198:
    unless_null $P5010, vivi_28806203
    nqp_get_sc_object $P5011, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5010, $P5011
  vivi_28806203:
    $P5012 = $P5010."ast"()
    $P5013 = $P5012."value"()
    set $P101, $P5013
.annotate 'line', 2700
    find_lex $P5014, "$past"
    $P5014."returns"($P101)
    repr_get_primitive_type_spec $I5003, $P101
    box $P5018, $I5003
    set $P5017, $P5018
    unless $I5003 goto if2881_end6205 
    .const 'Sub' $P5015 = 'cuid_486_1361734139.417' 
    capture_lex $P5015
    $P5016 = $P5015($P5018)
    set $P5017, $P5016
  if2881_end6205:
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_486_1361734139.417") :anon :lex :outer("cuid_487_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2701
    .param pmc _lex_param_0 
    .lex "$prim", _lex_param_0 
    .local pmc fb_tmp_600 
    .local pmc fb_tmp_601 
.annotate 'line', 2702
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback6206
    nqp_get_sc_object $P5003, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5002, $P5003
    set fb_tmp_600, $P5002
    repr_defined $I5001, fb_tmp_600
    unless $I5001 goto if2882_else6207 
    set $P5004, fb_tmp_600["$W"]
    set $P5006, $P5004
    goto if2882_end6208
  if2882_else6207:
    null $P5005
    set $P5006, $P5005
  if2882_end6208:
    unless_null $P5006, vivi_28836209
    nqp_get_sc_object $P5007, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5006, $P5007
  vivi_28836209:
    unless_null $P5006, vivi_28846210
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_28846210:
    set $P5001, $P5006
  fallback6206:
    $P5009 = $P5001."cur_lexpad"()
    find_lex $P5010, "$past"
    $P5011 = $P5010."name"()
    find_lex $P5012, "$type"
    $P5009."symbol"($P5011, $P5012 :named("type"))
.annotate 'line', 2703
    find_lex $P5013, "$past"
    $P5014 = $P5013."default"()
    set $P5021, $P5014
    unless $P5014 goto if2886_end6214 
    find_lex $P5015, "$/"
    unless_null $P5015, fallback6217
    nqp_get_sc_object $P5016, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5015, $P5016
  fallback6217:
    set fb_tmp_601, $P5015
    repr_defined $I5003, fb_tmp_601
    unless $I5003 goto if2887_else6215 
    set $P5017, fb_tmp_601["default_value"]
    set $P5019, $P5017
    goto if2887_end6216
  if2887_else6215:
    null $P5018
    set $P5019, $P5018
  if2887_end6216:
    unless_null $P5019, vivi_28886218
    nqp_get_sc_object $P5020, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5019, $P5020
  vivi_28886218:
    isfalse $I5002, $P5019
    box $P5022, $I5002
    set $P5021, $P5022
  if2886_end6214:
    set $P5026, $P5021
    unless $P5021 goto if2885_end6212 
.annotate 'line', 2704
    find_lex $P5023, "$past"
    $P5024 = "&default_value_for_prim"(_lex_param_0)
    $P5025 = $P5023."default"($P5024)
    set $P5026, $P5025
  if2885_end6212:
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "param_var" :subid("cuid_312_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2717
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$name", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_605 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
    set $S5001, _lex_param_1
    box $P5003, $S5001
    set $P101, $P5003
.annotate 'line', 2719
    nqp_get_sc_object $P5004, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5005 = $P5004."new"($P101 :named("name"), "lexical" :named("scope"), "param" :named("decl"), _lex_param_1 :named("node"))
    set $P102, $P5005
.annotate 'line', 2721
    find_dynamic_lex $P5006, "$*W"
    unless_null $P5006, fallback6232
    nqp_get_sc_object $P5008, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5007, $P5008
    set fb_tmp_605, $P5007
    repr_defined $I5001, fb_tmp_605
    unless $I5001 goto if2896_else6233 
    set $P5009, fb_tmp_605["$W"]
    set $P5011, $P5009
    goto if2896_end6234
  if2896_else6233:
    null $P5010
    set $P5011, $P5010
  if2896_end6234:
    unless_null $P5011, vivi_28976235
    nqp_get_sc_object $P5012, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5011, $P5012
  vivi_28976235:
    unless_null $P5011, vivi_28986236
    die "Contextual $*W not found"
    box $P5013, "Contextual $*W not found"
    set $P5011, $P5013
  vivi_28986236:
    set $P5006, $P5011
  fallback6232:
    $P5014 = $P5006."cur_lexpad"()
    $P5014."symbol"($P101, "lexical" :named("scope"))
.annotate 'line', 2722
    $P5015 = _lex_param_1."!make"($P102)
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "named_param" :subid("cuid_313_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2725
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_606 
    .local pmc fb_tmp_607 
    .local pmc fb_tmp_608 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
.annotate 'line', 2726
    unless_null _lex_param_1, fallback6239
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5002
  fallback6239:
    set fb_tmp_606, _lex_param_1
    repr_defined $I5001, fb_tmp_606
    unless $I5001 goto if2899_else6237 
    set $P5003, fb_tmp_606["param_var"]
    set $P5005, $P5003
    goto if2899_end6238
  if2899_else6237:
    null $P5004
    set $P5005, $P5004
  if2899_end6238:
    unless_null $P5005, vivi_29006240
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5005, $P5006
  vivi_29006240:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 2727
    unless_null _lex_param_1, fallback6245
    nqp_get_sc_object $P5008, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5008
  fallback6245:
    set fb_tmp_608, _lex_param_1
    repr_defined $I5003, fb_tmp_608
    unless $I5003 goto if2902_else6243 
    set $P5009, fb_tmp_608["param_var"]
    set $P5011, $P5009
    goto if2902_end6244
  if2902_else6243:
    null $P5010
    set $P5011, $P5010
  if2902_end6244:
    unless_null $P5011, vivi_29036246
    nqp_get_sc_object $P5012, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5011, $P5012
  vivi_29036246:
    set fb_tmp_607, $P5011
    repr_defined $I5002, fb_tmp_607
    unless $I5002 goto if2901_else6241 
    set $P5013, fb_tmp_607["name"]
    set $P5015, $P5013
    goto if2901_end6242
  if2901_else6241:
    null $P5014
    set $P5015, $P5014
  if2901_end6242:
    unless_null $P5015, vivi_29046247
    nqp_get_sc_object $P5016, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5015, $P5016
  vivi_29046247:
    set $S5001, $P5015
    $P101."named"($S5001)
.annotate 'line', 2728
    $P5017 = _lex_param_1."!make"($P101)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "typename" :subid("cuid_314_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2731
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5013 = 'cuid_488_1361734139.417' 
    capture_lex $P5013 
    .lex "@name", $P101 
    .lex "$found", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
.annotate 'line', 2735
    nqp_get_sc_object $P5003, "F31909CE26533F17A86F2092D09E004F0E94FA0C-1361734116.632", 102
    set $S5001, _lex_param_1
    $P5004 = $P5003."parse_name"($S5001)
    set $P101, $P5004
    box $P5005, 0
    set $P102, $P5005
    new $P5008, 'ExceptionHandler'
    set_label $P5008, catch_handler_29096254
    $P5008.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5008
    .const 'Sub' $P5006 = 'cuid_488_1361734139.417' 
    capture_lex $P5006
    $P5007 = $P5006()
    set $P5009, $P5007
    pop_eh 
    goto skip_handler_29086253
  catch_handler_29096254:
    .get_results ($P5008) 
    set $I10001, 1
    set $P5008["handled"], $I10001
    nqp_get_sc_object $P10001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    finalize $P5008
    pop_upto_eh $P5008
    pop_eh 
    set $P5009, $P10001
    goto skip_handler_29086253
  skip_handler_29086253:
    set $P5012, $P102
    if $P102 goto unless2910_end6256 
.annotate 'line', 2742
.annotate 'line', 2743
    $P5010 = _lex_param_1."CURSOR"()
    set $S5004, _lex_param_1
    concat $S5003, "Use of undeclared type '", $S5004
    concat $S5002, $S5003, "'"
    $P5011 = $P5010."panic"($S5002)
    set $P5012, $P5011
  unless2910_end6256:
    .return ($P5012) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_488_1361734139.417") :anon :lex :outer("cuid_314_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2737
    .lex "$sym", $P101 
    .local pmc fb_tmp_609 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
.annotate 'line', 2738
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback6248
    nqp_get_sc_object $P5004, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5003, $P5004
    set fb_tmp_609, $P5003
    repr_defined $I5001, fb_tmp_609
    unless $I5001 goto if2905_else6249 
    set $P5005, fb_tmp_609["$W"]
    set $P5007, $P5005
    goto if2905_end6250
  if2905_else6249:
    null $P5006
    set $P5007, $P5006
  if2905_end6250:
    unless_null $P5007, vivi_29066251
    nqp_get_sc_object $P5008, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5007, $P5008
  vivi_29066251:
    unless_null $P5007, vivi_29076252
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_29076252:
    set $P5002, $P5007
  fallback6248:
    find_lex $P5010, "@name"
    $P5011 = $P5002."find_sym"($P5010)
    set $P101, $P5011
.annotate 'line', 2739
    find_dynamic_lex $P5012, "$/"
    nqp_get_sc_object $P5013, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 61
    $P5014 = $P5013."new"($P101 :named("value"))
    $P5012."!make"($P5014)
    box $P5015, 1
    store_lex "$found", $P5015
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "trait" :subid("cuid_315_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2747
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_610 
.annotate 'line', 2748
    unless_null _lex_param_1, fallback6259
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback6259:
    set fb_tmp_610, _lex_param_1
    repr_defined $I5001, fb_tmp_610
    unless $I5001 goto if2911_else6257 
    set $P5002, fb_tmp_610["trait_mod"]
    set $P5004, $P5002
    goto if2911_end6258
  if2911_else6257:
    null $P5003
    set $P5004, $P5003
  if2911_end6258:
    unless_null $P5004, vivi_29126260
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_29126260:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "trait_mod:sym<is>" :subid("cuid_316_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2751
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5051 = 'cuid_490_1361734139.417' 
    capture_lex $P5051 
    .const 'Sub' $P5051 = 'cuid_492_1361734139.417' 
    capture_lex $P5051 
    .const 'Sub' $P5051 = 'cuid_493_1361734139.417' 
    capture_lex $P5051 
    .const 'Sub' $P5051 = 'cuid_494_1361734139.417' 
    capture_lex $P5051 
    .const 'Sub' $P5051 = 'cuid_495_1361734139.417' 
    capture_lex $P5051 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_611 
    .local pmc fb_tmp_620 
    .local pmc fb_tmp_626 
    .local pmc fb_tmp_628 
    .local pmc fb_tmp_630 
    .local pmc fb_tmp_637 
    unless_null _lex_param_1, fallback6265
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback6265:
    set fb_tmp_611, _lex_param_1
    repr_defined $I5002, fb_tmp_611
    unless $I5002 goto if2914_else6263 
    set $P5002, fb_tmp_611["longname"]
    set $P5004, $P5002
    goto if2914_end6264
  if2914_else6263:
    null $P5003
    set $P5004, $P5003
  if2914_end6264:
    unless_null $P5004, vivi_29156266
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_29156266:
    set $S5001, $P5004
    iseq $I5001, $S5001, "parrot_vtable"
    unless $I5001 goto if2913_else6261 
    .const 'Sub' $P5006 = 'cuid_490_1361734139.417' 
    capture_lex $P5006
    $P5007 = $P5006()
    set $P5050, $P5007
    goto if2913_end6262
  if2913_else6261:
    unless_null _lex_param_1, fallback6307
    nqp_get_sc_object $P5008, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5008
  fallback6307:
    set fb_tmp_620, _lex_param_1
    repr_defined $I5004, fb_tmp_620
    unless $I5004 goto if2938_else6305 
    set $P5009, fb_tmp_620["longname"]
    set $P5011, $P5009
    goto if2938_end6306
  if2938_else6305:
    null $P5010
    set $P5011, $P5010
  if2938_end6306:
    unless_null $P5011, vivi_29396308
    nqp_get_sc_object $P5012, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5011, $P5012
  vivi_29396308:
    set $S5002, $P5011
    iseq $I5003, $S5002, "parrot_vtable_handler"
    unless $I5003 goto if2937_else6303 
    .const 'Sub' $P5013 = 'cuid_492_1361734139.417' 
    capture_lex $P5013
    $P5014 = $P5013()
    set $P5049, $P5014
    goto if2937_end6304
  if2937_else6303:
    unless_null _lex_param_1, fallback6335
    nqp_get_sc_object $P5015, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5015
  fallback6335:
    set fb_tmp_626, _lex_param_1
    repr_defined $I5006, fb_tmp_626
    unless $I5006 goto if2954_else6333 
    set $P5016, fb_tmp_626["longname"]
    set $P5018, $P5016
    goto if2954_end6334
  if2954_else6333:
    null $P5017
    set $P5018, $P5017
  if2954_end6334:
    unless_null $P5018, vivi_29556336
    nqp_get_sc_object $P5019, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5018, $P5019
  vivi_29556336:
    set $S5003, $P5018
    iseq $I5005, $S5003, "positional_delegate"
    unless $I5005 goto if2953_else6331 
.annotate 'line', 2777
.annotate 'line', 2778
    .const 'Sub' $P5021 = 'cuid_493_1361734139.417' 
    capture_lex $P5021
    newclosure $P5020, $P5021
    $P5022 = _lex_param_1."!make"($P5020)
    set $P5048, $P5022
    goto if2953_end6332
  if2953_else6331:
    unless_null _lex_param_1, fallback6346
    nqp_get_sc_object $P5023, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5023
  fallback6346:
    set fb_tmp_628, _lex_param_1
    repr_defined $I5008, fb_tmp_628
    unless $I5008 goto if2960_else6344 
    set $P5024, fb_tmp_628["longname"]
    set $P5026, $P5024
    goto if2960_end6345
  if2960_else6344:
    null $P5025
    set $P5026, $P5025
  if2960_end6345:
    unless_null $P5026, vivi_29616347
    nqp_get_sc_object $P5027, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5026, $P5027
  vivi_29616347:
    set $S5004, $P5026
    iseq $I5007, $S5004, "associative_delegate"
    unless $I5007 goto if2959_else6342 
.annotate 'line', 2780
.annotate 'line', 2781
    .const 'Sub' $P5029 = 'cuid_494_1361734139.417' 
    capture_lex $P5029
    newclosure $P5028, $P5029
    $P5030 = _lex_param_1."!make"($P5028)
    set $P5047, $P5030
    goto if2959_end6343
  if2959_else6342:
    unless_null _lex_param_1, fallback6357
    nqp_get_sc_object $P5031, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5031
  fallback6357:
    set fb_tmp_630, _lex_param_1
    repr_defined $I5010, fb_tmp_630
    unless $I5010 goto if2966_else6355 
    set $P5032, fb_tmp_630["longname"]
    set $P5034, $P5032
    goto if2966_end6356
  if2966_else6355:
    null $P5033
    set $P5034, $P5033
  if2966_end6356:
    unless_null $P5034, vivi_29676358
    nqp_get_sc_object $P5035, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5034, $P5035
  vivi_29676358:
    set $S5005, $P5034
    iseq $I5009, $S5005, "export"
    unless $I5009 goto if2965_else6353 
.annotate 'line', 2783
.annotate 'line', 2784
    .const 'Sub' $P5037 = 'cuid_495_1361734139.417' 
    capture_lex $P5037
    newclosure $P5036, $P5037
    $P5038 = _lex_param_1."!make"($P5036)
    set $P5046, $P5038
    goto if2965_end6354
  if2965_else6353:
.annotate 'line', 2791
.annotate 'line', 2792
    $P5039 = _lex_param_1."CURSOR"()
    unless_null _lex_param_1, fallback6384
    nqp_get_sc_object $P5040, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5040
  fallback6384:
    set fb_tmp_637, _lex_param_1
    repr_defined $I5011, fb_tmp_637
    unless $I5011 goto if2982_else6382 
    set $P5041, fb_tmp_637["longname"]
    set $P5043, $P5041
    goto if2982_end6383
  if2982_else6382:
    null $P5042
    set $P5043, $P5042
  if2982_end6383:
    unless_null $P5043, vivi_29836385
    nqp_get_sc_object $P5044, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5043, $P5044
  vivi_29836385:
    set $S5008, $P5043
    concat $S5007, "Trait '", $S5008
    concat $S5006, $S5007, "' not implemented"
    $P5045 = $P5039."panic"($S5006)
    set $P5046, $P5045
  if2965_end6354:
    set $P5047, $P5046
  if2959_end6343:
    set $P5048, $P5047
  if2953_end6332:
    set $P5049, $P5048
  if2937_end6304:
    set $P5050, $P5049
  if2913_end6262:
    .return ($P5050) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_490_1361734139.417") :anon :lex :outer("cuid_316_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2752
    .const 'Sub' $P5043 = 'cuid_489_1361734139.417' 
    capture_lex $P5043 
    .lex "$cpast", $P101 
    .lex "$name", $P102 
    .lex "$package", $P103 
    .lex "$is_dispatcher", $P104 
    .local pmc fb_tmp_612 
    .local pmc fb_tmp_613 
    .local pmc fb_tmp_614 
    .local pmc fb_tmp_615 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P104, $P5004
.annotate 'line', 2754
    find_lex $P5005, "$/"
    unless_null $P5005, fallback6271
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5005, $P5006
  fallback6271:
    set fb_tmp_613, $P5005
    repr_defined $I5002, fb_tmp_613
    unless $I5002 goto if2917_else6269 
    set $P5007, fb_tmp_613["circumfix"]
    set $P5009, $P5007
    goto if2917_end6270
  if2917_else6269:
    null $P5008
    set $P5009, $P5008
  if2917_end6270:
    unless_null $P5009, vivi_29186272
    nqp_get_sc_object $P5010, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5009, $P5010
  vivi_29186272:
    set fb_tmp_612, $P5009
    repr_defined $I5001, fb_tmp_612
    unless $I5001 goto if2916_else6267 
    set $P5011, fb_tmp_612[0]
    set $P5013, $P5011
    goto if2916_end6268
  if2916_else6267:
    null $P5012
    set $P5013, $P5012
  if2916_end6268:
    unless_null $P5013, vivi_29196273
    nqp_get_sc_object $P5014, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5013, $P5014
  vivi_29196273:
    $P5015 = $P5013."ast"()
    set $P101, $P5015
.annotate 'line', 2756
    nqp_get_sc_object $P5016, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 52
    $P5017 = $P5016."ACCEPTS"($P101)
    if $P5017 goto unless2920_end6275 
.annotate 'line', 2755
    find_lex $P5018, "$/"
    $P5019 = $P5018."CURSOR"()
    $P5020 = $P5019."panic"("Trait 'parrot_vtable' requires constant scalar argument")
  unless2920_end6275:
.annotate 'line', 2757
    $P5021 = $P101."value"()
    set $P102, $P5021
    find_dynamic_lex $P5022, "$*PACKAGE"
    unless_null $P5022, fallback6276
    nqp_get_sc_object $P5024, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5023, $P5024
    set fb_tmp_614, $P5023
    repr_defined $I5003, fb_tmp_614
    unless $I5003 goto if2921_else6277 
    set $P5025, fb_tmp_614["$PACKAGE"]
    set $P5027, $P5025
    goto if2921_end6278
  if2921_else6277:
    null $P5026
    set $P5027, $P5026
  if2921_end6278:
    unless_null $P5027, vivi_29226279
    nqp_get_sc_object $P5028, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5027, $P5028
  vivi_29226279:
    unless_null $P5027, vivi_29236280
    die "Contextual $*PACKAGE not found"
    box $P5029, "Contextual $*PACKAGE not found"
    set $P5027, $P5029
  vivi_29236280:
    set $P5022, $P5027
  fallback6276:
    set $P103, $P5022
    find_dynamic_lex $P5030, "$*SCOPE"
    unless_null $P5030, fallback6281
    nqp_get_sc_object $P5032, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5031, $P5032
    set fb_tmp_615, $P5031
    repr_defined $I5005, fb_tmp_615
    unless $I5005 goto if2924_else6282 
    set $P5033, fb_tmp_615["$SCOPE"]
    set $P5035, $P5033
    goto if2924_end6283
  if2924_else6282:
    null $P5034
    set $P5035, $P5034
  if2924_end6283:
    unless_null $P5035, vivi_29256284
    nqp_get_sc_object $P5036, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5035, $P5036
  vivi_29256284:
    unless_null $P5035, vivi_29266285
    die "Contextual $*SCOPE not found"
    box $P5037, "Contextual $*SCOPE not found"
    set $P5035, $P5037
  vivi_29266285:
    set $P5030, $P5035
  fallback6281:
    set $S5001, $P5030
    iseq $I5004, $S5001, "proto"
    box $P5038, $I5004
    set $P104, $P5038
.annotate 'line', 2760
    find_dynamic_lex $P5039, "$/"
    .const 'Sub' $P5041 = 'cuid_489_1361734139.417' 
    capture_lex $P5041
    newclosure $P5040, $P5041
    $P5042 = $P5039."!make"($P5040)
    .return ($P5042) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_489_1361734139.417") :anon :lex :outer("cuid_490_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2760
    .param pmc _lex_param_0 
    .lex "$match", _lex_param_0 
    .local pmc fb_tmp_616 
    .local pmc fb_tmp_617 
    .local pmc fb_tmp_618 
    .local pmc fb_tmp_619 
.annotate 'line', 2761
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback6286
    nqp_get_sc_object $P5003, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5002, $P5003
    set fb_tmp_616, $P5002
    repr_defined $I5001, fb_tmp_616
    unless $I5001 goto if2927_else6287 
    set $P5004, fb_tmp_616["$W"]
    set $P5006, $P5004
    goto if2927_end6288
  if2927_else6287:
    null $P5005
    set $P5006, $P5005
  if2927_end6288:
    unless_null $P5006, vivi_29286289
    nqp_get_sc_object $P5007, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5006, $P5007
  vivi_29286289:
    unless_null $P5006, vivi_29296290
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_29296290:
    set $P5001, $P5006
  fallback6286:
    find_lex $P5009, "$package"
    find_lex $P5010, "$name"
.annotate 'line', 2762
    $P5012 = _lex_param_0."ast"()
    set fb_tmp_617, $P5012
    repr_defined $I5003, fb_tmp_617
    unless $I5003 goto if2930_else6292 
    set $P5013, fb_tmp_617["code_obj"]
    set $P5015, $P5013
    goto if2930_end6293
  if2930_else6292:
    null $P5014
    set $P5015, $P5014
  if2930_end6293:
    unless_null $P5015, vivi_29316294
    nqp_get_sc_object $P5016, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5015, $P5016
  vivi_29316294:
    set $P5011, $P5015
    defined $I5002, $P5011
    if $I5002, defor6291
.annotate 'line', 2763
    find_dynamic_lex $P5017, "$*W"
    unless_null $P5017, fallback6295
    nqp_get_sc_object $P5019, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5018, $P5019
    set fb_tmp_618, $P5018
    repr_defined $I5004, fb_tmp_618
    unless $I5004 goto if2932_else6296 
    set $P5020, fb_tmp_618["$W"]
    set $P5022, $P5020
    goto if2932_end6297
  if2932_else6296:
    null $P5021
    set $P5022, $P5021
  if2932_end6297:
    unless_null $P5022, vivi_29336298
    nqp_get_sc_object $P5023, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5022, $P5023
  vivi_29336298:
    unless_null $P5022, vivi_29346299
    die "Contextual $*W not found"
    box $P5024, "Contextual $*W not found"
    set $P5022, $P5024
  vivi_29346299:
    set $P5017, $P5022
  fallback6295:
    $P5025 = _lex_param_0."ast"()
    set fb_tmp_619, $P5025
    repr_defined $I5005, fb_tmp_619
    unless $I5005 goto if2935_else6300 
    set $P5026, fb_tmp_619["block_past"]
    set $P5028, $P5026
    goto if2935_end6301
  if2935_else6300:
    null $P5027
    set $P5028, $P5027
  if2935_end6301:
    unless_null $P5028, vivi_29366302
    nqp_get_sc_object $P5029, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5028, $P5029
  vivi_29366302:
    find_lex $P5030, "$name"
    find_lex $P5031, "$is_dispatcher"
    $P5032 = $P5017."create_code"($P5028, $P5030, $P5031)
    set $P5011, $P5032
  defor6291:
    $P5033 = $P5001."pkg_add_method"($P5009, "add_parrot_vtable_mapping", $P5010, $P5011)
    .return ($P5033) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_492_1361734139.417") :anon :lex :outer("cuid_316_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2766
    .const 'Sub' $P5033 = 'cuid_491_1361734139.417' 
    capture_lex $P5033 
    .lex "$cpast", $P101 
    .lex "$name", $P102 
    .lex "$package", $P103 
    .local pmc fb_tmp_621 
    .local pmc fb_tmp_622 
    .local pmc fb_tmp_623 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P103, $P5003
.annotate 'line', 2768
    find_lex $P5004, "$/"
    unless_null $P5004, fallback6313
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  fallback6313:
    set fb_tmp_622, $P5004
    repr_defined $I5002, fb_tmp_622
    unless $I5002 goto if2941_else6311 
    set $P5006, fb_tmp_622["circumfix"]
    set $P5008, $P5006
    goto if2941_end6312
  if2941_else6311:
    null $P5007
    set $P5008, $P5007
  if2941_end6312:
    unless_null $P5008, vivi_29426314
    nqp_get_sc_object $P5009, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5008, $P5009
  vivi_29426314:
    set fb_tmp_621, $P5008
    repr_defined $I5001, fb_tmp_621
    unless $I5001 goto if2940_else6309 
    set $P5010, fb_tmp_621[0]
    set $P5012, $P5010
    goto if2940_end6310
  if2940_else6309:
    null $P5011
    set $P5012, $P5011
  if2940_end6310:
    unless_null $P5012, vivi_29436315
    nqp_get_sc_object $P5013, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5012, $P5013
  vivi_29436315:
    $P5014 = $P5012."ast"()
    set $P101, $P5014
.annotate 'line', 2770
    nqp_get_sc_object $P5015, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 52
    $P5016 = $P5015."ACCEPTS"($P101)
    if $P5016 goto unless2944_end6317 
.annotate 'line', 2769
    find_lex $P5017, "$/"
    $P5018 = $P5017."CURSOR"()
    $P5019 = $P5018."panic"("Trait 'parrot_vtable_handler' requires constant scalar argument")
  unless2944_end6317:
.annotate 'line', 2771
    $P5020 = $P101."value"()
    set $P102, $P5020
    find_dynamic_lex $P5021, "$*PACKAGE"
    unless_null $P5021, fallback6318
    nqp_get_sc_object $P5023, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5022, $P5023
    set fb_tmp_623, $P5022
    repr_defined $I5003, fb_tmp_623
    unless $I5003 goto if2945_else6319 
    set $P5024, fb_tmp_623["$PACKAGE"]
    set $P5026, $P5024
    goto if2945_end6320
  if2945_else6319:
    null $P5025
    set $P5026, $P5025
  if2945_end6320:
    unless_null $P5026, vivi_29466321
    nqp_get_sc_object $P5027, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5026, $P5027
  vivi_29466321:
    unless_null $P5026, vivi_29476322
    die "Contextual $*PACKAGE not found"
    box $P5028, "Contextual $*PACKAGE not found"
    set $P5026, $P5028
  vivi_29476322:
    set $P5021, $P5026
  fallback6318:
    set $P103, $P5021
.annotate 'line', 2773
    find_dynamic_lex $P5029, "$/"
    .const 'Sub' $P5031 = 'cuid_491_1361734139.417' 
    capture_lex $P5031
    newclosure $P5030, $P5031
    $P5032 = $P5029."!make"($P5030)
    .return ($P5032) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_491_1361734139.417") :anon :lex :outer("cuid_492_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2773
    .param pmc _lex_param_0 
    .lex "$match", _lex_param_0 
    .local pmc fb_tmp_624 
    .local pmc fb_tmp_625 
.annotate 'line', 2774
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback6323
    nqp_get_sc_object $P5003, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5002, $P5003
    set fb_tmp_624, $P5002
    repr_defined $I5001, fb_tmp_624
    unless $I5001 goto if2948_else6324 
    set $P5004, fb_tmp_624["$W"]
    set $P5006, $P5004
    goto if2948_end6325
  if2948_else6324:
    null $P5005
    set $P5006, $P5005
  if2948_end6325:
    unless_null $P5006, vivi_29496326
    nqp_get_sc_object $P5007, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5006, $P5007
  vivi_29496326:
    unless_null $P5006, vivi_29506327
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_29506327:
    set $P5001, $P5006
  fallback6323:
    find_lex $P5009, "$package"
    find_lex $P5010, "$name"
    set fb_tmp_625, _lex_param_0
    repr_defined $I5002, fb_tmp_625
    unless $I5002 goto if2951_else6328 
    set $P5011, fb_tmp_625["variable"]
    set $P5013, $P5011
    goto if2951_end6329
  if2951_else6328:
    null $P5012
    set $P5013, $P5012
  if2951_end6329:
    unless_null $P5013, vivi_29526330
    nqp_get_sc_object $P5014, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5013, $P5014
  vivi_29526330:
    set $S5001, $P5013
    $P5015 = $P5001."pkg_add_parrot_vtable_handler_mapping"($P5009, $P5010, $S5001)
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_493_1361734139.417") :anon :lex :outer("cuid_316_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2778
    .param pmc _lex_param_0 
    .lex "$m", _lex_param_0 
    .local pmc fb_tmp_627 
    find_dynamic_lex $P5001, "$*DECLARAND_ATTR"
    unless_null $P5001, fallback6337
    nqp_get_sc_object $P5003, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5002, $P5003
    set fb_tmp_627, $P5002
    repr_defined $I5001, fb_tmp_627
    unless $I5001 goto if2956_else6338 
    set $P5004, fb_tmp_627["$DECLARAND_ATTR"]
    set $P5006, $P5004
    goto if2956_end6339
  if2956_else6338:
    null $P5005
    set $P5006, $P5005
  if2956_end6339:
    unless_null $P5006, vivi_29576340
    nqp_get_sc_object $P5007, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5006, $P5007
  vivi_29576340:
    unless_null $P5006, vivi_29586341
    die "Contextual $*DECLARAND_ATTR not found"
    box $P5008, "Contextual $*DECLARAND_ATTR not found"
    set $P5006, $P5008
  vivi_29586341:
    set $P5001, $P5006
  fallback6337:
    $P5009 = $P5001."set_positional_delegate"(1)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_494_1361734139.417") :anon :lex :outer("cuid_316_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2781
    .param pmc _lex_param_0 
    .lex "$m", _lex_param_0 
    .local pmc fb_tmp_629 
    find_dynamic_lex $P5001, "$*DECLARAND_ATTR"
    unless_null $P5001, fallback6348
    nqp_get_sc_object $P5003, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5002, $P5003
    set fb_tmp_629, $P5002
    repr_defined $I5001, fb_tmp_629
    unless $I5001 goto if2962_else6349 
    set $P5004, fb_tmp_629["$DECLARAND_ATTR"]
    set $P5006, $P5004
    goto if2962_end6350
  if2962_else6349:
    null $P5005
    set $P5006, $P5005
  if2962_end6350:
    unless_null $P5006, vivi_29636351
    nqp_get_sc_object $P5007, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5006, $P5007
  vivi_29636351:
    unless_null $P5006, vivi_29646352
    die "Contextual $*DECLARAND_ATTR not found"
    box $P5008, "Contextual $*DECLARAND_ATTR not found"
    set $P5006, $P5008
  vivi_29646352:
    set $P5001, $P5006
  fallback6348:
    $P5009 = $P5001."set_associative_delegate"(1)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_495_1361734139.417") :anon :lex :outer("cuid_316_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2784
    .param pmc _lex_param_0 
    .lex "$ast", $P101 
    .lex "$name", $P102 
    .lex "$match", _lex_param_0 
    .local pmc fb_tmp_631 
    .local pmc fb_tmp_632 
    .local pmc fb_tmp_633 
    .local pmc fb_tmp_634 
    .local pmc fb_tmp_635 
    .local pmc fb_tmp_636 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
.annotate 'line', 2785
    $P5003 = _lex_param_0."ast"()
    set $P101, $P5003
.annotate 'line', 2786
    set fb_tmp_631, $P101
    repr_defined $I5001, fb_tmp_631
    unless $I5001 goto if2968_else6359 
    set $P5004, fb_tmp_631["block_past"]
    set $P5006, $P5004
    goto if2968_end6360
  if2968_else6359:
    null $P5005
    set $P5006, $P5005
  if2968_end6360:
    unless_null $P5006, vivi_29696361
    nqp_get_sc_object $P5007, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5006, $P5007
  vivi_29696361:
    $P5008 = $P5006."name"()
    set $P102, $P5008
    find_dynamic_lex $P5011, "$*EXPORT"
    unless_null $P5011, fallback6364
    nqp_get_sc_object $P5013, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5012, $P5013
    set fb_tmp_633, $P5012
    repr_defined $I5003, fb_tmp_633
    unless $I5003 goto if2971_else6365 
    set $P5014, fb_tmp_633["$EXPORT"]
    set $P5016, $P5014
    goto if2971_end6366
  if2971_else6365:
    null $P5015
    set $P5016, $P5015
  if2971_end6366:
    unless_null $P5016, vivi_29726367
    nqp_get_sc_object $P5017, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5016, $P5017
  vivi_29726367:
    unless_null $P5016, vivi_29736368
    die "Contextual $*EXPORT not found"
    box $P5018, "Contextual $*EXPORT not found"
    set $P5016, $P5018
  vivi_29736368:
    set $P5011, $P5016
  fallback6364:
    get_who $P5010, $P5011
    set fb_tmp_632, $P5010
    repr_defined $I5002, fb_tmp_632
    unless $I5002 goto if2970_else6362 
    set $P5019, fb_tmp_632["DEFAULT"]
    set $P5021, $P5019
    goto if2970_end6363
  if2970_else6362:
    null $P5020
    set $P5021, $P5020
  if2970_end6363:
    unless_null $P5021, vivi_29746369
    nqp_get_sc_object $P5022, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5021, $P5022
  vivi_29746369:
    get_who $P5009, $P5021
    set $S5002, $P102
    concat $S5001, "&", $S5002
    set fb_tmp_634, $P101
    repr_defined $I5005, fb_tmp_634
    unless $I5005 goto if2975_else6371 
    set $P5024, fb_tmp_634["code_obj"]
    set $P5026, $P5024
    goto if2975_end6372
  if2975_else6371:
    null $P5025
    set $P5026, $P5025
  if2975_end6372:
    unless_null $P5026, vivi_29766373
    nqp_get_sc_object $P5027, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5026, $P5027
  vivi_29766373:
    set $P5023, $P5026
    defined $I5004, $P5023
    if $I5004, defor6370
.annotate 'line', 2788
    find_dynamic_lex $P5028, "$*W"
    unless_null $P5028, fallback6374
    nqp_get_sc_object $P5030, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5029, $P5030
    set fb_tmp_635, $P5029
    repr_defined $I5006, fb_tmp_635
    unless $I5006 goto if2977_else6375 
    set $P5031, fb_tmp_635["$W"]
    set $P5033, $P5031
    goto if2977_end6376
  if2977_else6375:
    null $P5032
    set $P5033, $P5032
  if2977_end6376:
    unless_null $P5033, vivi_29786377
    nqp_get_sc_object $P5034, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5033, $P5034
  vivi_29786377:
    unless_null $P5033, vivi_29796378
    die "Contextual $*W not found"
    box $P5035, "Contextual $*W not found"
    set $P5033, $P5035
  vivi_29796378:
    set $P5028, $P5033
  fallback6374:
    set fb_tmp_636, $P101
    repr_defined $I5007, fb_tmp_636
    unless $I5007 goto if2980_else6379 
    set $P5036, fb_tmp_636["block_past"]
    set $P5038, $P5036
    goto if2980_end6380
  if2980_else6379:
    null $P5037
    set $P5038, $P5037
  if2980_end6380:
    unless_null $P5038, vivi_29816381
    nqp_get_sc_object $P5039, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5038, $P5039
  vivi_29816381:
    $P5040 = $P5028."create_code"($P5038, $P102, 0)
    set $P5023, $P5040
  defor6370:
    set $P5009[$S5001], $P5023
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "regex_declarator" :subid("cuid_317_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2796
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :optional 
    .param int haz_param_5 :opt_flag 
    .const 'Sub' $P5074 = 'cuid_497_1361734139.417' 
    capture_lex $P5074 
    .lex "$name", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .lex "$key", _lex_param_2 
    .local pmc fb_tmp_638 
    .local pmc fb_tmp_639 
    .local pmc fb_tmp_640 
    .local pmc fb_tmp_641 
    .local pmc fb_tmp_642 
    .local pmc fb_tmp_643 
    .local pmc fb_tmp_644 
    .local pmc fb_tmp_645 
    if haz_param_5, default6502
    nqp_get_sc_object $P5073, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_2, $P5073
  default6502:
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
    unless_null _lex_param_1, fallback6390
    nqp_get_sc_object $P5003, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5003
  fallback6390:
    set fb_tmp_638, _lex_param_1
    repr_defined $I5001, fb_tmp_638
    unless $I5001 goto if2985_else6388 
    set $P5004, fb_tmp_638["deflongname"]
    set $P5006, $P5004
    goto if2985_end6389
  if2985_else6388:
    null $P5005
    set $P5006, $P5005
  if2985_end6389:
    unless_null $P5006, vivi_29866391
    nqp_get_sc_object $P5007, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5006, $P5007
  vivi_29866391:
    unless $P5006 goto if2984_else6386 
.annotate 'line', 2798
.annotate 'line', 2799
    unless_null _lex_param_1, fallback6394
    nqp_get_sc_object $P5008, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5008
  fallback6394:
    set fb_tmp_639, _lex_param_1
    repr_defined $I5002, fb_tmp_639
    unless $I5002 goto if2987_else6392 
    set $P5009, fb_tmp_639["deflongname"]
    set $P5011, $P5009
    goto if2987_end6393
  if2987_else6392:
    null $P5010
    set $P5011, $P5010
  if2987_end6393:
    unless_null $P5011, vivi_29886395
    nqp_get_sc_object $P5012, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5011, $P5012
  vivi_29886395:
    $P5013 = $P5011."ast"()
    set $S5001, $P5013
    box $P5014, $S5001
    set $P101, $P5014
    goto if2984_end6387
  if2984_else6386:
.annotate 'line', 2801
    find_dynamic_lex $P5015, "$*PKGDECL"
    unless_null $P5015, fallback6398
    nqp_get_sc_object $P5017, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5016, $P5017
    set fb_tmp_640, $P5016
    repr_defined $I5004, fb_tmp_640
    unless $I5004 goto if2990_else6399 
    set $P5018, fb_tmp_640["$PKGDECL"]
    set $P5020, $P5018
    goto if2990_end6400
  if2990_else6399:
    null $P5019
    set $P5020, $P5019
  if2990_end6400:
    unless_null $P5020, vivi_29916401
    nqp_get_sc_object $P5021, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5020, $P5021
  vivi_29916401:
    unless_null $P5020, vivi_29926402
    die "Contextual $*PKGDECL not found"
    box $P5022, "Contextual $*PKGDECL not found"
    set $P5020, $P5022
  vivi_29926402:
    set $P5015, $P5020
  fallback6398:
    set $S5002, $P5015
    isne $I5003, $S5002, "role"
    unless $I5003 goto if2989_end6397 
.annotate 'line', 2802
.annotate 'line', 2803
    $P5023 = _lex_param_1."CURSOR"()
    $P5024 = $P5023."panic"("Late-bound method name only valid in role")
  if2989_end6397:
    unless_null _lex_param_1, fallback6405
    nqp_get_sc_object $P5025, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5025
  fallback6405:
    set fb_tmp_641, _lex_param_1
    repr_defined $I5005, fb_tmp_641
    unless $I5005 goto if2993_else6403 
    set $P5026, fb_tmp_641["latename"]
    set $P5028, $P5026
    goto if2993_end6404
  if2993_else6403:
    null $P5027
    set $P5028, $P5027
  if2993_end6404:
    unless_null $P5028, vivi_29946406
    nqp_get_sc_object $P5029, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5028, $P5029
  vivi_29946406:
    set $S5004, $P5028
    concat $S5003, "!!LATENAME!!", $S5004
    box $P5030, $S5003
    set $P101, $P5030
  if2984_end6387:
    unless_null _lex_param_1, fallback6411
    nqp_get_sc_object $P5031, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5031
  fallback6411:
    set fb_tmp_642, _lex_param_1
    repr_defined $I5006, fb_tmp_642
    unless $I5006 goto if2996_else6409 
    set $P5032, fb_tmp_642["proto"]
    set $P5034, $P5032
    goto if2996_end6410
  if2996_else6409:
    null $P5033
    set $P5034, $P5033
  if2996_end6410:
    unless_null $P5034, vivi_29976412
    nqp_get_sc_object $P5035, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5034, $P5035
  vivi_29976412:
    unless $P5034 goto if2995_else6407 
.annotate 'line', 2808
.annotate 'line', 2809
    nqp_get_sc_object $P5036, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 103
.annotate 'line', 2811
    nqp_get_sc_object $P5037, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 2812
    nqp_get_sc_object $P5038, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5039 = $P5038."new"("self" :named("name"), "local" :named("scope"), "param" :named("decl"))
.annotate 'line', 2813
    nqp_get_sc_object $P5040, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 52
    $P5041 = $P5040."new"($P101 :named("value"))
    $P5042 = $P5037."new"($P5039, $P5041, "!protoregex" :named("name"), "callmethod" :named("op"))
    $P5043 = $P5036."new"($P5042, $P101 :named("name"), "declaration" :named("blocktype"), _lex_param_1 :named("node"))
    set $P102, $P5043
.annotate 'line', 2820
    find_dynamic_lex $P5044, "$*W"
    unless_null $P5044, fallback6413
    nqp_get_sc_object $P5046, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5045, $P5046
    set fb_tmp_643, $P5045
    repr_defined $I5007, fb_tmp_643
    unless $I5007 goto if2998_else6414 
    set $P5047, fb_tmp_643["$W"]
    set $P5049, $P5047
    goto if2998_end6415
  if2998_else6414:
    null $P5048
    set $P5049, $P5048
  if2998_end6415:
    unless_null $P5049, vivi_29996416
    nqp_get_sc_object $P5050, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5049, $P5050
  vivi_29996416:
    unless_null $P5049, vivi_30006417
    die "Contextual $*W not found"
    box $P5051, "Contextual $*W not found"
    set $P5049, $P5051
  vivi_30006417:
    set $P5044, $P5049
  fallback6413:
    find_dynamic_lex $P5052, "$*PACKAGE"
    unless_null $P5052, fallback6418
    nqp_get_sc_object $P5054, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5053, $P5054
    set fb_tmp_644, $P5053
    repr_defined $I5008, fb_tmp_644
    unless $I5008 goto if3001_else6419 
    set $P5055, fb_tmp_644["$PACKAGE"]
    set $P5057, $P5055
    goto if3001_end6420
  if3001_else6419:
    null $P5056
    set $P5057, $P5056
  if3001_end6420:
    unless_null $P5057, vivi_30026421
    nqp_get_sc_object $P5058, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5057, $P5058
  vivi_30026421:
    unless_null $P5057, vivi_30036422
    die "Contextual $*PACKAGE not found"
    box $P5059, "Contextual $*PACKAGE not found"
    set $P5057, $P5059
  vivi_30036422:
    set $P5052, $P5057
  fallback6418:
.annotate 'line', 2821
    find_dynamic_lex $P5060, "$*W"
    unless_null $P5060, fallback6423
    nqp_get_sc_object $P5062, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5061, $P5062
    set fb_tmp_645, $P5061
    repr_defined $I5009, fb_tmp_645
    unless $I5009 goto if3004_else6424 
    set $P5063, fb_tmp_645["$W"]
    set $P5065, $P5063
    goto if3004_end6425
  if3004_else6424:
    null $P5064
    set $P5065, $P5064
  if3004_end6425:
    unless_null $P5065, vivi_30056426
    nqp_get_sc_object $P5066, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5065, $P5066
  vivi_30056426:
    unless_null $P5065, vivi_30066427
    die "Contextual $*W not found"
    box $P5067, "Contextual $*W not found"
    set $P5065, $P5067
  vivi_30066427:
    set $P5060, $P5065
  fallback6423:
    $P5068 = $P5060."create_code"($P102, $P101, 0, "NQPRegex" :named("code_type_name"))
    $P5069 = $P5044."pkg_add_method"($P5052, "add_method", $P101, $P5068)
    goto if2995_end6408
  if2995_else6407:
    .const 'Sub' $P5070 = 'cuid_497_1361734139.417' 
    capture_lex $P5070
    $P5071 = $P5070()
  if2995_end6408:
.annotate 'line', 2860
    $P5072 = _lex_param_1."!make"($P102)
    .return ($P5072) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_497_1361734139.417") :anon :lex :outer("cuid_317_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2823
    .const 'Sub' $P5128 = 'cuid_496_1361734139.417' 
    capture_lex $P5128 
    .lex "$block", $P101 
    .lex "$code", $P102 
    .lex "$regex", $P103 
    .local pmc fb_tmp_646 
    .local pmc fb_tmp_647 
    .local pmc fb_tmp_648 
    .local pmc fb_tmp_649 
    .local pmc fb_tmp_650 
    .local pmc fb_tmp_651 
    .local pmc fb_tmp_652 
    .local pmc pkg_viv_tmp_45 
    .local pmc fb_tmp_653 
    .local pmc fb_tmp_654 
    .local pmc pkg_viv_tmp_46 
    .local pmc fb_tmp_655 
    .local pmc fb_tmp_656 
    .local pmc fb_tmp_657 
    .local pmc fb_tmp_658 
    .local pmc fb_tmp_659 
    .local pmc fb_tmp_660 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P103, $P5003
.annotate 'line', 2824
    find_dynamic_lex $P5004, "$*W"
    unless_null $P5004, fallback6428
    nqp_get_sc_object $P5006, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5005, $P5006
    set fb_tmp_646, $P5005
    repr_defined $I5001, fb_tmp_646
    unless $I5001 goto if3007_else6429 
    set $P5007, fb_tmp_646["$W"]
    set $P5009, $P5007
    goto if3007_end6430
  if3007_else6429:
    null $P5008
    set $P5009, $P5008
  if3007_end6430:
    unless_null $P5009, vivi_30086431
    nqp_get_sc_object $P5010, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5009, $P5010
  vivi_30086431:
    unless_null $P5009, vivi_30096432
    die "Contextual $*W not found"
    box $P5011, "Contextual $*W not found"
    set $P5009, $P5011
  vivi_30096432:
    set $P5004, $P5009
  fallback6428:
    $P5012 = $P5004."pop_lexpad"()
    set $P101, $P5012
.annotate 'line', 2825
    set fb_tmp_647, $P101
    repr_defined $I5002, fb_tmp_647
    unless $I5002 goto if3010_else6433 
    set $P5013, fb_tmp_647[0]
    set $P5015, $P5013
    goto if3010_end6434
  if3010_else6433:
    null $P5014
    set $P5015, $P5014
  if3010_end6434:
    unless_null $P5015, vivi_30116435
    nqp_get_sc_object $P5016, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5015, $P5016
  vivi_30116435:
    nqp_get_sc_object $P5017, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5018 = $P5017."new"("self" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    $P5015."unshift"($P5018)
.annotate 'line', 2826
    set fb_tmp_648, $P101
    repr_defined $I5003, fb_tmp_648
    unless $I5003 goto if3012_else6436 
    set $P5019, fb_tmp_648[0]
    set $P5021, $P5019
    goto if3012_end6437
  if3012_else6436:
    null $P5020
    set $P5021, $P5020
  if3012_end6437:
    unless_null $P5021, vivi_30136438
    nqp_get_sc_object $P5022, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5021, $P5022
  vivi_30136438:
    nqp_get_sc_object $P5023, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 2828
    nqp_get_sc_object $P5024, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5025 = $P5024."new"("self" :named("name"), "local" :named("scope"), "var" :named("decl"))
.annotate 'line', 2829
    nqp_get_sc_object $P5026, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5027 = $P5026."new"("self" :named("name"), "lexical" :named("scope"))
    $P5028 = $P5023."new"($P5025, $P5027, "bind" :named("op"))
    $P5021."push"($P5028)
.annotate 'line', 2830
    set fb_tmp_649, $P101
    repr_defined $I5004, fb_tmp_649
    unless $I5004 goto if3014_else6439 
    set $P5029, fb_tmp_649[0]
    set $P5031, $P5029
    goto if3014_end6440
  if3014_else6439:
    null $P5030
    set $P5031, $P5030
  if3014_end6440:
    unless_null $P5031, vivi_30156441
    nqp_get_sc_object $P5032, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5031, $P5032
  vivi_30156441:
    nqp_get_sc_object $P5033, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5034 = $P5033."new"(utf8:"$\x{a2}" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    $P5031."push"($P5034)
.annotate 'line', 2831
    set fb_tmp_650, $P101
    repr_defined $I5005, fb_tmp_650
    unless $I5005 goto if3016_else6442 
    set $P5035, fb_tmp_650[0]
    set $P5037, $P5035
    goto if3016_end6443
  if3016_else6442:
    null $P5036
    set $P5037, $P5036
  if3016_end6443:
    unless_null $P5037, vivi_30176444
    nqp_get_sc_object $P5038, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5037, $P5038
  vivi_30176444:
    nqp_get_sc_object $P5039, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5040 = $P5039."new"("$/" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    $P5037."push"($P5040)
.annotate 'line', 2832
    $P101."symbol"(utf8:"$\x{a2}", "lexical" :named("scope"))
.annotate 'line', 2833
    $P101."symbol"("$/", "lexical" :named("scope"))
    find_dynamic_lex $P5041, "%*RX"
    unless_null $P5041, fallback6447
    nqp_get_sc_object $P5043, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5042, $P5043
    set pkg_viv_tmp_45, $P5042
    set fb_tmp_652, pkg_viv_tmp_45
    repr_defined $I5007, fb_tmp_652
    unless $I5007 goto if3019_else6448 
    set $P5044, fb_tmp_652["%RX"]
    set $P5046, $P5044
    goto if3019_end6449
  if3019_else6448:
    null $P5045
    set $P5046, $P5045
  if3019_end6449:
    unless_null $P5046, vivi_30206450
    new $P5047, 'Hash'
    set pkg_viv_tmp_45["%RX"], $P5047
    set $P5046, $P5047
  vivi_30206450:
    unless_null $P5046, vivi_30216451
    die "Contextual %*RX not found"
    box $P5048, "Contextual %*RX not found"
    set $P5046, $P5048
  vivi_30216451:
    set $P5041, $P5046
  fallback6447:
    set fb_tmp_651, $P5041
    repr_defined $I5006, fb_tmp_651
    unless $I5006 goto if3018_else6445 
    set $P5049, fb_tmp_651["code"]
    set $P5051, $P5049
    goto if3018_end6446
  if3018_else6445:
    null $P5050
    set $P5051, $P5050
  if3018_end6446:
    unless_null $P5051, vivi_30226452
    nqp_get_sc_object $P5052, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5051, $P5052
  vivi_30226452:
    set $P102, $P5051
.annotate 'line', 2835
    find_dynamic_lex $P5053, "%*LANG"
    unless_null $P5053, fallback6455
    nqp_get_sc_object $P5055, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5054, $P5055
    set pkg_viv_tmp_46, $P5054
    set fb_tmp_654, pkg_viv_tmp_46
    repr_defined $I5009, fb_tmp_654
    unless $I5009 goto if3024_else6456 
    set $P5056, fb_tmp_654["%LANG"]
    set $P5058, $P5056
    goto if3024_end6457
  if3024_else6456:
    null $P5057
    set $P5058, $P5057
  if3024_end6457:
    unless_null $P5058, vivi_30256458
    new $P5059, 'Hash'
    set pkg_viv_tmp_46["%LANG"], $P5059
    set $P5058, $P5059
  vivi_30256458:
    unless_null $P5058, vivi_30266459
    die "Contextual %*LANG not found"
    box $P5060, "Contextual %*LANG not found"
    set $P5058, $P5060
  vivi_30266459:
    set $P5053, $P5058
  fallback6455:
    set fb_tmp_653, $P5053
    repr_defined $I5008, fb_tmp_653
    unless $I5008 goto if3023_else6453 
    set $P5061, fb_tmp_653["Regex-actions"]
    set $P5063, $P5061
    goto if3023_end6454
  if3023_else6453:
    null $P5062
    set $P5063, $P5062
  if3023_end6454:
    unless_null $P5063, vivi_30276460
    nqp_get_sc_object $P5064, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5063, $P5064
  vivi_30276460:
    find_lex $P5065, "$/"
    unless_null $P5065, fallback6463
    nqp_get_sc_object $P5066, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5065, $P5066
  fallback6463:
    set fb_tmp_655, $P5065
    repr_defined $I5010, fb_tmp_655
    unless $I5010 goto if3028_else6461 
    set $P5067, fb_tmp_655["p6regex"]
    set $P5069, $P5067
    goto if3028_end6462
  if3028_else6461:
    null $P5068
    set $P5069, $P5068
  if3028_end6462:
    unless_null $P5069, vivi_30296464
    nqp_get_sc_object $P5070, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5069, $P5070
  vivi_30296464:
    $P5071 = $P5069."ast"()
    $P5072 = $P5063."qbuildsub"($P5071, $P101, $P102 :named("code_obj"))
    set $P103, $P5072
.annotate 'line', 2836
    find_lex $P5073, "$name"
    $P103."name"($P5073)
    find_dynamic_lex $P5074, "$*PKGDECL"
    unless_null $P5074, fallback6469
    nqp_get_sc_object $P5076, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5075, $P5076
    set fb_tmp_656, $P5075
    repr_defined $I5011, fb_tmp_656
    unless $I5011 goto if3032_else6470 
    set $P5077, fb_tmp_656["$PKGDECL"]
    set $P5079, $P5077
    goto if3032_end6471
  if3032_else6470:
    null $P5078
    set $P5079, $P5078
  if3032_end6471:
    unless_null $P5079, vivi_30336472
    nqp_get_sc_object $P5080, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5079, $P5080
  vivi_30336472:
    unless_null $P5079, vivi_30346473
    die "Contextual $*PKGDECL not found"
    box $P5081, "Contextual $*PKGDECL not found"
    set $P5079, $P5081
  vivi_30346473:
    set $P5074, $P5079
  fallback6469:
    set $P5091, $P5074
    unless $P5074 goto if3031_end6468 
    find_dynamic_lex $P5083, "$*PACKAGE"
    unless_null $P5083, fallback6474
    nqp_get_sc_object $P5085, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5084, $P5085
    set fb_tmp_657, $P5084
    repr_defined $I5013, fb_tmp_657
    unless $I5013 goto if3035_else6475 
    set $P5086, fb_tmp_657["$PACKAGE"]
    set $P5088, $P5086
    goto if3035_end6476
  if3035_else6475:
    null $P5087
    set $P5088, $P5087
  if3035_end6476:
    unless_null $P5088, vivi_30366477
    nqp_get_sc_object $P5089, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5088, $P5089
  vivi_30366477:
    unless_null $P5088, vivi_30376478
    die "Contextual $*PACKAGE not found"
    box $P5090, "Contextual $*PACKAGE not found"
    set $P5088, $P5090
  vivi_30376478:
    set $P5083, $P5088
  fallback6474:
    get_how $P5082, $P5083
    can $I5012, $P5082, "add_method"
    box $P5092, $I5012
    set $P5091, $P5092
  if3031_end6468:
    unless $P5091 goto if3030_end6466 
.annotate 'line', 2838
.annotate 'line', 2840
    find_dynamic_lex $P5093, "$*W"
    unless_null $P5093, fallback6479
    nqp_get_sc_object $P5095, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5094, $P5095
    set fb_tmp_658, $P5094
    repr_defined $I5014, fb_tmp_658
    unless $I5014 goto if3038_else6480 
    set $P5096, fb_tmp_658["$W"]
    set $P5098, $P5096
    goto if3038_end6481
  if3038_else6480:
    null $P5097
    set $P5098, $P5097
  if3038_end6481:
    unless_null $P5098, vivi_30396482
    nqp_get_sc_object $P5099, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5098, $P5099
  vivi_30396482:
    unless_null $P5098, vivi_30406483
    die "Contextual $*W not found"
    box $P5100, "Contextual $*W not found"
    set $P5098, $P5100
  vivi_30406483:
    set $P5093, $P5098
  fallback6479:
    find_dynamic_lex $P5101, "$*PACKAGE"
    unless_null $P5101, fallback6484
    nqp_get_sc_object $P5103, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5102, $P5103
    set fb_tmp_659, $P5102
    repr_defined $I5015, fb_tmp_659
    unless $I5015 goto if3041_else6485 
    set $P5104, fb_tmp_659["$PACKAGE"]
    set $P5106, $P5104
    goto if3041_end6486
  if3041_else6485:
    null $P5105
    set $P5106, $P5105
  if3041_end6486:
    unless_null $P5106, vivi_30426487
    nqp_get_sc_object $P5107, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5106, $P5107
  vivi_30426487:
    unless_null $P5106, vivi_30436488
    die "Contextual $*PACKAGE not found"
    box $P5108, "Contextual $*PACKAGE not found"
    set $P5106, $P5108
  vivi_30436488:
    set $P5101, $P5106
  fallback6484:
    find_lex $P5109, "$name"
    $P5110 = $P5093."pkg_add_method"($P5101, "add_method", $P5109, $P102)
  if3030_end6466:
    find_dynamic_lex $P5111, "$*PKGDECL"
    unless_null $P5111, fallback6491
    nqp_get_sc_object $P5113, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5112, $P5113
    set fb_tmp_660, $P5112
    repr_defined $I5017, fb_tmp_660
    unless $I5017 goto if3045_else6492 
    set $P5114, fb_tmp_660["$PKGDECL"]
    set $P5116, $P5114
    goto if3045_end6493
  if3045_else6492:
    null $P5115
    set $P5116, $P5115
  if3045_end6493:
    unless_null $P5116, vivi_30466494
    nqp_get_sc_object $P5117, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5116, $P5117
  vivi_30466494:
    unless_null $P5116, vivi_30476495
    die "Contextual $*PKGDECL not found"
    box $P5118, "Contextual $*PKGDECL not found"
    set $P5116, $P5118
  vivi_30476495:
    set $P5111, $P5116
  fallback6491:
    set $S5001, $P5111
    iseq $I5016, $S5001, "role"
    unless $I5016 goto if3044_end6490 
    .const 'Sub' $P5119 = 'cuid_496_1361734139.417' 
    capture_lex $P5119
    $P5120 = $P5119()
  if3044_end6490:
.annotate 'line', 2854
    nqp_get_sc_object $P5121, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 2856
    new $P5122, 'ResizablePMCArray'
    box $P5123, "NQPRegexMethod"
    push $P5122, $P5123
    find_lex $P5124, "$/"
    $P5125 = "&lexical_package_lookup"($P5122, $P5124)
    $P5126 = $P5121."new"($P5125, $P103, "callmethod" :named("op"), "new" :named("name"))
    store_lex "$past", $P5126
    find_lex $P5127, "$past"
    set $P5127["sink"], $P103
    .return ($P103) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_496_1361734139.417") :anon :lex :outer("cuid_497_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2845
    .lex "$gen_nfa", $P101 
    .local pmc fb_tmp_661 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
.annotate 'line', 2846
    nqp_get_sc_object $P5002, "5C3E4C1FCD8659050D16E0C0EEB21CECC0CE7086-1361734112.314", 3
    $P5003 = $P5002."new"()
    set $P101, $P5003
.annotate 'line', 2847
    find_lex $P5004, "$/"
    unless_null $P5004, fallback6498
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  fallback6498:
    set fb_tmp_661, $P5004
    repr_defined $I5001, fb_tmp_661
    unless $I5001 goto if3048_else6496 
    set $P5006, fb_tmp_661["p6regex"]
    set $P5008, $P5006
    goto if3048_end6497
  if3048_else6496:
    null $P5007
    set $P5008, $P5007
  if3048_end6497:
    unless_null $P5008, vivi_30496499
    nqp_get_sc_object $P5009, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5008, $P5009
  vivi_30496499:
    $P5010 = $P5008."ast"()
    $P101."addnode"($P5010, 1 :named("vars_as_generic"))
.annotate 'line', 2848
    $P5011 = $P101."generic"()
    set $P5014, $P5011
    unless $P5011 goto if3050_end6501 
.annotate 'line', 2849
    find_lex $P5012, "$code"
    $P5013 = $P5012."SET_GENERIC_NFA"($P101)
    set $P5014, $P5013
  if3050_end6501:
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "dotty" :subid("cuid_318_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2864
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_662 
    .local pmc fb_tmp_663 
    .local pmc fb_tmp_664 
    .local pmc fb_tmp_665 
    .local pmc fb_tmp_666 
    .local pmc fb_tmp_667 
    .local pmc fb_tmp_668 
    .local pmc fb_tmp_669 
    .local pmc fb_tmp_670 
    .local pmc fb_tmp_671 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    unless_null _lex_param_1, fallback6507
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5002
  fallback6507:
    set fb_tmp_662, _lex_param_1
    repr_defined $I5001, fb_tmp_662
    unless $I5001 goto if3052_else6505 
    set $P5003, fb_tmp_662["args"]
    set $P5005, $P5003
    goto if3052_end6506
  if3052_else6505:
    null $P5004
    set $P5005, $P5004
  if3052_end6506:
    unless_null $P5005, vivi_30536508
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5005, $P5006
  vivi_30536508:
    unless $P5005 goto if3051_else6503 
.annotate 'line', 2865
    unless_null _lex_param_1, fallback6513
    nqp_get_sc_object $P5007, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5007
  fallback6513:
    set fb_tmp_664, _lex_param_1
    repr_defined $I5003, fb_tmp_664
    unless $I5003 goto if3055_else6511 
    set $P5008, fb_tmp_664["args"]
    set $P5010, $P5008
    goto if3055_end6512
  if3055_else6511:
    null $P5009
    set $P5010, $P5009
  if3055_end6512:
    unless_null $P5010, vivi_30566514
    nqp_get_sc_object $P5011, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5010, $P5011
  vivi_30566514:
    set fb_tmp_663, $P5010
    repr_defined $I5002, fb_tmp_663
    unless $I5002 goto if3054_else6509 
    set $P5012, fb_tmp_663[0]
    set $P5014, $P5012
    goto if3054_end6510
  if3054_else6509:
    null $P5013
    set $P5014, $P5013
  if3054_end6510:
    unless_null $P5014, vivi_30576515
    nqp_get_sc_object $P5015, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5014, $P5015
  vivi_30576515:
    $P5016 = $P5014."ast"()
    set $P5019, $P5016
    goto if3051_end6504
  if3051_else6503:
    nqp_get_sc_object $P5017, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    $P5018 = $P5017."new"(_lex_param_1 :named("node"))
    set $P5019, $P5018
  if3051_end6504:
    set $P101, $P5019
    unless_null _lex_param_1, fallback6520
    nqp_get_sc_object $P5020, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5020
  fallback6520:
    set fb_tmp_665, _lex_param_1
    repr_defined $I5004, fb_tmp_665
    unless $I5004 goto if3059_else6518 
    set $P5021, fb_tmp_665["quote"]
    set $P5023, $P5021
    goto if3059_end6519
  if3059_else6518:
    null $P5022
    set $P5023, $P5022
  if3059_end6519:
    unless_null $P5023, vivi_30606521
    nqp_get_sc_object $P5024, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5023, $P5024
  vivi_30606521:
    unless $P5023 goto if3058_else6516 
.annotate 'line', 2866
.annotate 'line', 2867
    unless_null _lex_param_1, fallback6524
    nqp_get_sc_object $P5025, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5025
  fallback6524:
    set fb_tmp_666, _lex_param_1
    repr_defined $I5005, fb_tmp_666
    unless $I5005 goto if3061_else6522 
    set $P5026, fb_tmp_666["quote"]
    set $P5028, $P5026
    goto if3061_end6523
  if3061_else6522:
    null $P5027
    set $P5028, $P5027
  if3061_end6523:
    unless_null $P5028, vivi_30626525
    nqp_get_sc_object $P5029, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5028, $P5029
  vivi_30626525:
    $P5030 = $P5028."ast"()
    $P101."unshift"($P5030)
.annotate 'line', 2868
    $P5031 = $P101."op"("callmethod")
    goto if3058_end6517
  if3058_else6516:
    unless_null _lex_param_1, fallback6530
    nqp_get_sc_object $P5032, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5032
  fallback6530:
    set fb_tmp_667, _lex_param_1
    repr_defined $I5007, fb_tmp_667
    unless $I5007 goto if3064_else6528 
    set $P5033, fb_tmp_667["longname"]
    set $P5035, $P5033
    goto if3064_end6529
  if3064_else6528:
    null $P5034
    set $P5035, $P5034
  if3064_end6529:
    unless_null $P5035, vivi_30656531
    nqp_get_sc_object $P5036, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5035, $P5036
  vivi_30656531:
    set $S5001, $P5035
    iseq $I5006, $S5001, "HOW"
    unless $I5006 goto if3063_else6526 
.annotate 'line', 2870
.annotate 'line', 2871
    $P5037 = $P101."op"("how")
    set $P5065, $P5037
    goto if3063_end6527
  if3063_else6526:
    unless_null _lex_param_1, fallback6536
    nqp_get_sc_object $P5038, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5038
  fallback6536:
    set fb_tmp_668, _lex_param_1
    repr_defined $I5009, fb_tmp_668
    unless $I5009 goto if3067_else6534 
    set $P5039, fb_tmp_668["longname"]
    set $P5041, $P5039
    goto if3067_end6535
  if3067_else6534:
    null $P5040
    set $P5041, $P5040
  if3067_end6535:
    unless_null $P5041, vivi_30686537
    nqp_get_sc_object $P5042, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5041, $P5042
  vivi_30686537:
    set $S5002, $P5041
    iseq $I5008, $S5002, "WHAT"
    unless $I5008 goto if3066_else6532 
.annotate 'line', 2873
.annotate 'line', 2874
    $P5043 = $P101."op"("what")
    set $P5064, $P5043
    goto if3066_end6533
  if3066_else6532:
    unless_null _lex_param_1, fallback6542
    nqp_get_sc_object $P5044, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5044
  fallback6542:
    set fb_tmp_669, _lex_param_1
    repr_defined $I5011, fb_tmp_669
    unless $I5011 goto if3070_else6540 
    set $P5045, fb_tmp_669["longname"]
    set $P5047, $P5045
    goto if3070_end6541
  if3070_else6540:
    null $P5046
    set $P5047, $P5046
  if3070_end6541:
    unless_null $P5047, vivi_30716543
    nqp_get_sc_object $P5048, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5047, $P5048
  vivi_30716543:
    set $S5003, $P5047
    iseq $I5010, $S5003, "WHO"
    unless $I5010 goto if3069_else6538 
.annotate 'line', 2876
.annotate 'line', 2877
    $P5049 = $P101."op"("who")
    set $P5063, $P5049
    goto if3069_end6539
  if3069_else6538:
    unless_null _lex_param_1, fallback6548
    nqp_get_sc_object $P5050, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5050
  fallback6548:
    set fb_tmp_670, _lex_param_1
    repr_defined $I5013, fb_tmp_670
    unless $I5013 goto if3073_else6546 
    set $P5051, fb_tmp_670["longname"]
    set $P5053, $P5051
    goto if3073_end6547
  if3073_else6546:
    null $P5052
    set $P5053, $P5052
  if3073_end6547:
    unless_null $P5053, vivi_30746549
    nqp_get_sc_object $P5054, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5053, $P5054
  vivi_30746549:
    set $S5004, $P5053
    iseq $I5012, $S5004, "REPR"
    unless $I5012 goto if3072_else6544 
.annotate 'line', 2879
.annotate 'line', 2880
    $P5055 = $P101."op"("reprname")
    set $P5062, $P5055
    goto if3072_end6545
  if3072_else6544:
.annotate 'line', 2882
.annotate 'line', 2883
    unless_null _lex_param_1, fallback6552
    nqp_get_sc_object $P5056, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5056
  fallback6552:
    set fb_tmp_671, _lex_param_1
    repr_defined $I5014, fb_tmp_671
    unless $I5014 goto if3075_else6550 
    set $P5057, fb_tmp_671["longname"]
    set $P5059, $P5057
    goto if3075_end6551
  if3075_else6550:
    null $P5058
    set $P5059, $P5058
  if3075_end6551:
    unless_null $P5059, vivi_30766553
    nqp_get_sc_object $P5060, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5059, $P5060
  vivi_30766553:
    set $S5005, $P5059
    $P101."name"($S5005)
.annotate 'line', 2884
    $P5061 = $P101."op"("callmethod")
    set $P5062, $P5061
  if3072_end6545:
    set $P5063, $P5062
  if3069_end6539:
    set $P5064, $P5063
  if3066_end6533:
    set $P5065, $P5064
  if3063_end6527:
  if3058_end6517:
.annotate 'line', 2886
    $P5066 = _lex_param_1."!make"($P101)
    .return ($P5066) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<self>" :subid("cuid_319_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2891
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
.annotate 'line', 2892
    nqp_get_sc_object $P5001, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 2893
    nqp_get_sc_object $P5002, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5003 = $P5002."new"("self" :named("name"), "lexical" :named("scope"))
    $P5004 = $P5001."new"($P5003, "decont" :named("op"))
    $P5005 = _lex_param_1."!make"($P5004)
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<identifier>" :subid("cuid_320_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2896
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_672 
    .local pmc fb_tmp_673 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
.annotate 'line', 2897
    unless_null _lex_param_1, fallback6556
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5002
  fallback6556:
    set fb_tmp_672, _lex_param_1
    repr_defined $I5001, fb_tmp_672
    unless $I5001 goto if3077_else6554 
    set $P5003, fb_tmp_672["args"]
    set $P5005, $P5003
    goto if3077_end6555
  if3077_else6554:
    null $P5004
    set $P5005, $P5004
  if3077_end6555:
    unless_null $P5005, vivi_30786557
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5005, $P5006
  vivi_30786557:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 2898
    unless_null _lex_param_1, fallback6560
    nqp_get_sc_object $P5008, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5008
  fallback6560:
    set fb_tmp_673, _lex_param_1
    repr_defined $I5002, fb_tmp_673
    unless $I5002 goto if3079_else6558 
    set $P5009, fb_tmp_673["deflongname"]
    set $P5011, $P5009
    goto if3079_end6559
  if3079_else6558:
    null $P5010
    set $P5011, $P5010
  if3079_end6559:
    unless_null $P5011, vivi_30806561
    nqp_get_sc_object $P5012, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5011, $P5012
  vivi_30806561:
    set $S5002, $P5011
    concat $S5001, "&", $S5002
    $P101."name"($S5001)
.annotate 'line', 2899
    $P5013 = _lex_param_1."!make"($P101)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<name>" :subid("cuid_321_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2902
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5053 = 'cuid_498_1361734139.417' 
    capture_lex $P5053 
    .const 'Sub' $P5053 = 'cuid_500_1361734139.417' 
    capture_lex $P5053 
    .lex "$var", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_674 
    .local pmc fb_tmp_675 
    .local pmc fb_tmp_676 
    .local pmc fb_tmp_679 
    .local pmc fb_tmp_684 
    .local pmc fb_tmp_685 
    .local pmc fb_tmp_686 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
.annotate 'line', 2905
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback6564
    nqp_get_sc_object $P5005, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5004, $P5005
    set fb_tmp_674, $P5004
    repr_defined $I5001, fb_tmp_674
    unless $I5001 goto if3082_else6565 
    set $P5006, fb_tmp_674["$W"]
    set $P5008, $P5006
    goto if3082_end6566
  if3082_else6565:
    null $P5007
    set $P5008, $P5007
  if3082_end6566:
    unless_null $P5008, vivi_30836567
    nqp_get_sc_object $P5009, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5008, $P5009
  vivi_30836567:
    unless_null $P5008, vivi_30846568
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_30846568:
    set $P5003, $P5008
  fallback6564:
    unless_null _lex_param_1, fallback6571
    nqp_get_sc_object $P5011, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5011
  fallback6571:
    set fb_tmp_675, _lex_param_1
    repr_defined $I5002, fb_tmp_675
    unless $I5002 goto if3085_else6569 
    set $P5012, fb_tmp_675["name"]
    set $P5014, $P5012
    goto if3085_end6570
  if3085_else6569:
    null $P5013
    set $P5014, $P5013
  if3085_end6570:
    unless_null $P5014, vivi_30866572
    nqp_get_sc_object $P5015, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5014, $P5015
  vivi_30866572:
    set $S5001, $P5014
    $P5016 = $P5003."is_lexical"($S5001)
    unless $P5016 goto if3081_else6562 
    unless_null _lex_param_1, fallback6577
    nqp_get_sc_object $P5017, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5017
  fallback6577:
    set fb_tmp_676, _lex_param_1
    repr_defined $I5003, fb_tmp_676
    unless $I5003 goto if3088_else6575 
    set $P5018, fb_tmp_676["args"]
    set $P5020, $P5018
    goto if3088_end6576
  if3088_else6575:
    null $P5019
    set $P5020, $P5019
  if3088_end6576:
    unless_null $P5020, vivi_30896578
    nqp_get_sc_object $P5021, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5020, $P5021
  vivi_30896578:
    if $P5020 goto unless3087_end6574 
.annotate 'line', 2906
    new $P5024, 'ExceptionHandler'
    set_label $P5024, catch_handler_30976591
    $P5024.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5024
    .const 'Sub' $P5022 = 'cuid_498_1361734139.417' 
    capture_lex $P5022
    $P5023 = $P5022()
    set $P5025, $P5023
    pop_eh 
    goto skip_handler_30966590
  catch_handler_30976591:
    .get_results ($P5024) 
    set $I10001, 1
    set $P5024["handled"], $I10001
    nqp_get_sc_object $P10001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    finalize $P5024
    pop_upto_eh $P5024
    pop_eh 
    set $P5025, $P10001
    goto skip_handler_30966590
  skip_handler_30966590:
  unless3087_end6574:
    set $P5033, $P101
    if $P101 goto unless3098_end6593 
.annotate 'line', 2914
.annotate 'line', 2915
    nqp_get_sc_object $P5026, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    unless_null _lex_param_1, fallback6596
    nqp_get_sc_object $P5027, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5027
  fallback6596:
    set fb_tmp_679, _lex_param_1
    repr_defined $I5004, fb_tmp_679
    unless $I5004 goto if3099_else6594 
    set $P5028, fb_tmp_679["name"]
    set $P5030, $P5028
    goto if3099_end6595
  if3099_else6594:
    null $P5029
    set $P5030, $P5029
  if3099_end6595:
    unless_null $P5030, vivi_31006597
    nqp_get_sc_object $P5031, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5030, $P5031
  vivi_31006597:
    set $S5002, $P5030
    $P5032 = $P5026."new"($S5002 :named("name"), "lexical" :named("scope"))
    set $P101, $P5032
    set $P5033, $P101
  unless3098_end6593:
    goto if3081_end6563
  if3081_else6562:
    .const 'Sub' $P5034 = 'cuid_500_1361734139.417' 
    capture_lex $P5034
    $P5035 = $P5034()
  if3081_end6563:
    set $P102, $P101
    unless_null _lex_param_1, fallback6626
    nqp_get_sc_object $P5036, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5036
  fallback6626:
    set fb_tmp_684, _lex_param_1
    repr_defined $I5005, fb_tmp_684
    unless $I5005 goto if3116_else6624 
    set $P5037, fb_tmp_684["args"]
    set $P5039, $P5037
    goto if3116_end6625
  if3116_else6624:
    null $P5038
    set $P5039, $P5038
  if3116_end6625:
    unless_null $P5039, vivi_31176627
    nqp_get_sc_object $P5040, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5039, $P5040
  vivi_31176627:
    unless $P5039 goto if3115_end6623 
.annotate 'line', 2935
.annotate 'line', 2936
    unless_null _lex_param_1, fallback6632
    nqp_get_sc_object $P5041, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5041
  fallback6632:
    set fb_tmp_686, _lex_param_1
    repr_defined $I5007, fb_tmp_686
    unless $I5007 goto if3119_else6630 
    set $P5042, fb_tmp_686["args"]
    set $P5044, $P5042
    goto if3119_end6631
  if3119_else6630:
    null $P5043
    set $P5044, $P5043
  if3119_end6631:
    unless_null $P5044, vivi_31206633
    nqp_get_sc_object $P5045, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5044, $P5045
  vivi_31206633:
    set fb_tmp_685, $P5044
    repr_defined $I5006, fb_tmp_685
    unless $I5006 goto if3118_else6628 
    set $P5046, fb_tmp_685[0]
    set $P5048, $P5046
    goto if3118_end6629
  if3118_else6628:
    null $P5047
    set $P5048, $P5047
  if3118_end6629:
    unless_null $P5048, vivi_31216634
    nqp_get_sc_object $P5049, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5048, $P5049
  vivi_31216634:
    $P5050 = $P5048."ast"()
    set $P102, $P5050
.annotate 'line', 2937
    $P5051 = $P102."unshift"($P101)
  if3115_end6623:
.annotate 'line', 2939
    $P5052 = _lex_param_1."!make"($P102)
    .return ($P5052) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_498_1361734139.417") :anon :lex :outer("cuid_321_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2907
    .lex "$sym", $P101 
    .local pmc fb_tmp_677 
    .local pmc fb_tmp_678 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
.annotate 'line', 2908
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback6579
    nqp_get_sc_object $P5004, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5003, $P5004
    set fb_tmp_677, $P5003
    repr_defined $I5001, fb_tmp_677
    unless $I5001 goto if3090_else6580 
    set $P5005, fb_tmp_677["$W"]
    set $P5007, $P5005
    goto if3090_end6581
  if3090_else6580:
    null $P5006
    set $P5007, $P5006
  if3090_end6581:
    unless_null $P5007, vivi_30916582
    nqp_get_sc_object $P5008, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5007, $P5008
  vivi_30916582:
    unless_null $P5007, vivi_30926583
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_30926583:
    set $P5002, $P5007
  fallback6579:
    new $P5010, 'ResizablePMCArray'
    find_lex $P5011, "$/"
    unless_null $P5011, fallback6586
    nqp_get_sc_object $P5012, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5011, $P5012
  fallback6586:
    set fb_tmp_678, $P5011
    repr_defined $I5002, fb_tmp_678
    unless $I5002 goto if3093_else6584 
    set $P5013, fb_tmp_678["name"]
    set $P5015, $P5013
    goto if3093_end6585
  if3093_else6584:
    null $P5014
    set $P5015, $P5014
  if3093_end6585:
    unless_null $P5015, vivi_30946587
    nqp_get_sc_object $P5016, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5015, $P5016
  vivi_30946587:
    set $S5001, $P5015
    box $P5017, $S5001
    push $P5010, $P5017
    $P5018 = $P5002."find_sym"($P5010)
    set $P101, $P5018
    nqp_get_sc_for_object $P5019, $P101
    isnull $I5003, $P5019
    box $P5023, $I5003
    set $P5022, $P5023
    if $I5003 goto unless3095_end6589 
.annotate 'line', 2909
.annotate 'line', 2910
    nqp_get_sc_object $P5020, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 61
    $P5021 = $P5020."new"($P101 :named("value"))
    store_lex "$var", $P5021
    set $P5022, $P5021
  unless3095_end6589:
    .return ($P5022) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_500_1361734139.417") :anon :lex :outer("cuid_321_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2918
    .const 'Sub' $P5027 = 'cuid_499_1361734139.417' 
    capture_lex $P5027 
    .lex "@ns", $P101 
    .local pmc fb_tmp_680 
    .local pmc fb_tmp_681 
    .local pmc fb_tmp_682 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    find_lex $P5003, "$/"
    unless_null $P5003, fallback6602
    nqp_get_sc_object $P5004, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5003, $P5004
  fallback6602:
    set fb_tmp_681, $P5003
    repr_defined $I5002, fb_tmp_681
    unless $I5002 goto if3102_else6600 
    set $P5005, fb_tmp_681["name"]
    set $P5007, $P5005
    goto if3102_end6601
  if3102_else6600:
    null $P5006
    set $P5007, $P5006
  if3102_end6601:
    unless_null $P5007, vivi_31036603
    nqp_get_sc_object $P5008, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5007, $P5008
  vivi_31036603:
    set fb_tmp_680, $P5007
    repr_defined $I5001, fb_tmp_680
    unless $I5001 goto if3101_else6598 
    set $P5009, fb_tmp_680["identifier"]
    set $P5011, $P5009
    goto if3101_end6599
  if3101_else6598:
    null $P5010
    set $P5011, $P5010
  if3101_end6599:
    unless_null $P5011, vivi_31046604
    nqp_get_sc_object $P5012, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5011, $P5012
  vivi_31046604:
    repr_clone $P5002, $P5011
    set $P101, $P5002
    find_lex $P5013, "$/"
    unless_null $P5013, fallback6609
    nqp_get_sc_object $P5014, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5013, $P5014
  fallback6609:
    set fb_tmp_682, $P5013
    repr_defined $I5003, fb_tmp_682
    unless $I5003 goto if3106_else6607 
    set $P5015, fb_tmp_682["args"]
    set $P5017, $P5015
    goto if3106_end6608
  if3106_else6607:
    null $P5016
    set $P5017, $P5016
  if3106_end6608:
    unless_null $P5017, vivi_31076610
    nqp_get_sc_object $P5018, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5017, $P5018
  vivi_31076610:
    if $P5017 goto unless3105_end6606 
.annotate 'line', 2920
    new $P5021, 'ExceptionHandler'
    set_label $P5021, catch_handler_31136619
    $P5021.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5021
    .const 'Sub' $P5019 = 'cuid_499_1361734139.417' 
    capture_lex $P5019
    $P5020 = $P5019()
    set $P5022, $P5020
    pop_eh 
    goto skip_handler_31126618
  catch_handler_31136619:
    .get_results ($P5021) 
    set $I10001, 1
    set $P5021["handled"], $I10001
    nqp_get_sc_object $P10001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    finalize $P5021
    pop_upto_eh $P5021
    pop_eh 
    set $P5022, $P10001
    goto skip_handler_31126618
  skip_handler_31126618:
  unless3105_end6606:
    find_lex $P5023, "$var"
    set $P5026, $P5023
    if $P5023 goto unless3114_end6621 
.annotate 'line', 2928
.annotate 'line', 2929
    find_lex $P5024, "$/"
    $P5025 = "&lexical_package_lookup"($P101, $P5024)
    store_lex "$var", $P5025
    set $P5026, $P5025
  unless3114_end6621:
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_499_1361734139.417") :anon :lex :outer("cuid_500_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2921
    .lex "$sym", $P101 
    .local pmc fb_tmp_683 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
.annotate 'line', 2922
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback6611
    nqp_get_sc_object $P5004, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5003, $P5004
    set fb_tmp_683, $P5003
    repr_defined $I5001, fb_tmp_683
    unless $I5001 goto if3108_else6612 
    set $P5005, fb_tmp_683["$W"]
    set $P5007, $P5005
    goto if3108_end6613
  if3108_else6612:
    null $P5006
    set $P5007, $P5006
  if3108_end6613:
    unless_null $P5007, vivi_31096614
    nqp_get_sc_object $P5008, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5007, $P5008
  vivi_31096614:
    unless_null $P5007, vivi_31106615
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_31106615:
    set $P5002, $P5007
  fallback6611:
    find_lex $P5010, "@ns"
    $P5011 = $P5002."find_sym"($P5010)
    set $P101, $P5011
    nqp_get_sc_for_object $P5012, $P101
    isnull $I5002, $P5012
    box $P5016, $I5002
    set $P5015, $P5016
    if $I5002 goto unless3111_end6617 
.annotate 'line', 2923
.annotate 'line', 2924
    nqp_get_sc_object $P5013, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 61
    $P5014 = $P5013."new"($P101 :named("value"))
    store_lex "$var", $P5014
    set $P5015, $P5014
  unless3111_end6617:
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<pir::op>" :subid("cuid_322_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2942
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "@args", $P101 
    .lex "$pirop", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_687 
    .local pmc fb_tmp_688 
    .local pmc fb_tmp_689 
    .local pmc fb_tmp_690 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
    unless_null _lex_param_1, fallback6639
    nqp_get_sc_object $P5003, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5003
  fallback6639:
    set fb_tmp_687, _lex_param_1
    repr_defined $I5001, fb_tmp_687
    unless $I5001 goto if3123_else6637 
    set $P5004, fb_tmp_687["args"]
    set $P5006, $P5004
    goto if3123_end6638
  if3123_else6637:
    null $P5005
    set $P5006, $P5005
  if3123_end6638:
    unless_null $P5006, vivi_31246640
    nqp_get_sc_object $P5007, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5006, $P5007
  vivi_31246640:
    unless $P5006 goto if3122_else6635 
.annotate 'line', 2943
    unless_null _lex_param_1, fallback6645
    nqp_get_sc_object $P5008, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5008
  fallback6645:
    set fb_tmp_689, _lex_param_1
    repr_defined $I5003, fb_tmp_689
    unless $I5003 goto if3126_else6643 
    set $P5009, fb_tmp_689["args"]
    set $P5011, $P5009
    goto if3126_end6644
  if3126_else6643:
    null $P5010
    set $P5011, $P5010
  if3126_end6644:
    unless_null $P5011, vivi_31276646
    nqp_get_sc_object $P5012, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5011, $P5012
  vivi_31276646:
    set fb_tmp_688, $P5011
    repr_defined $I5002, fb_tmp_688
    unless $I5002 goto if3125_else6641 
    set $P5013, fb_tmp_688[0]
    set $P5015, $P5013
    goto if3125_end6642
  if3125_else6641:
    null $P5014
    set $P5015, $P5014
  if3125_end6642:
    unless_null $P5015, vivi_31286647
    nqp_get_sc_object $P5016, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5015, $P5016
  vivi_31286647:
    $P5017 = $P5015."ast"()
    $P5018 = $P5017."list"()
    set $P5020, $P5018
    goto if3122_end6636
  if3122_else6635:
    new $P5019, 'ResizablePMCArray'
    set $P5020, $P5019
  if3122_end6636:
    set $P101, $P5020
    unless_null _lex_param_1, fallback6650
    nqp_get_sc_object $P5021, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5021
  fallback6650:
    set fb_tmp_690, _lex_param_1
    repr_defined $I5004, fb_tmp_690
    unless $I5004 goto if3129_else6648 
    set $P5022, fb_tmp_690["op"]
    set $P5024, $P5022
    goto if3129_end6649
  if3129_else6648:
    null $P5023
    set $P5024, $P5023
  if3129_end6649:
    unless_null $P5024, vivi_31306651
    nqp_get_sc_object $P5025, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5024, $P5025
  vivi_31306651:
    set $S5001, $P5024
    box $P5026, $S5001
    set $P102, $P5026
    set $S5003, $P102
    split $P5027, "__", $S5003
    join $S5002, " ", $P5027
    box $P5028, $S5002
    set $P102, $P5028
.annotate 'line', 2946
    nqp_get_sc_object $P5029, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 89
    $P5030 = $P5029."new"($P101 :flat, $P102 :named("pirop"), _lex_param_1 :named("node"))
    $P5031 = _lex_param_1."!make"($P5030)
    .return ($P5031) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<pir::const>" :subid("cuid_323_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2949
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_691 
.annotate 'line', 2950
    nqp_get_sc_object $P5001, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 89
    unless_null _lex_param_1, fallback6654
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5002
  fallback6654:
    set fb_tmp_691, _lex_param_1
    repr_defined $I5001, fb_tmp_691
    unless $I5001 goto if3131_else6652 
    set $P5003, fb_tmp_691["const"]
    set $P5005, $P5003
    goto if3131_end6653
  if3131_else6652:
    null $P5004
    set $P5005, $P5004
  if3131_end6653:
    unless_null $P5005, vivi_31326655
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5005, $P5006
  vivi_31326655:
    set $S5001, $P5005
    $P5007 = $P5001."new"($S5001 :named("pirconst"))
    $P5008 = _lex_param_1."!make"($P5007)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<nqp::op>" :subid("cuid_324_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2953
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$op", $P101 
    .lex "@args", $P102 
    .lex "$past", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_692 
    .local pmc fb_tmp_693 
    .local pmc fb_tmp_694 
    .local pmc fb_tmp_695 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    new $P5002, 'ResizablePMCArray'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P103, $P5003
    unless_null _lex_param_1, fallback6658
    nqp_get_sc_object $P5004, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5004
  fallback6658:
    set fb_tmp_692, _lex_param_1
    repr_defined $I5001, fb_tmp_692
    unless $I5001 goto if3133_else6656 
    set $P5005, fb_tmp_692["op"]
    set $P5007, $P5005
    goto if3133_end6657
  if3133_else6656:
    null $P5006
    set $P5007, $P5006
  if3133_end6657:
    unless_null $P5007, vivi_31346659
    nqp_get_sc_object $P5008, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5007, $P5008
  vivi_31346659:
    set $S5001, $P5007
    box $P5009, $S5001
    set $P101, $P5009
    unless_null _lex_param_1, fallback6664
    nqp_get_sc_object $P5010, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5010
  fallback6664:
    set fb_tmp_693, _lex_param_1
    repr_defined $I5002, fb_tmp_693
    unless $I5002 goto if3136_else6662 
    set $P5011, fb_tmp_693["args"]
    set $P5013, $P5011
    goto if3136_end6663
  if3136_else6662:
    null $P5012
    set $P5013, $P5012
  if3136_end6663:
    unless_null $P5013, vivi_31376665
    nqp_get_sc_object $P5014, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5013, $P5014
  vivi_31376665:
    unless $P5013 goto if3135_else6660 
.annotate 'line', 2955
    unless_null _lex_param_1, fallback6670
    nqp_get_sc_object $P5015, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5015
  fallback6670:
    set fb_tmp_695, _lex_param_1
    repr_defined $I5004, fb_tmp_695
    unless $I5004 goto if3139_else6668 
    set $P5016, fb_tmp_695["args"]
    set $P5018, $P5016
    goto if3139_end6669
  if3139_else6668:
    null $P5017
    set $P5018, $P5017
  if3139_end6669:
    unless_null $P5018, vivi_31406671
    nqp_get_sc_object $P5019, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5018, $P5019
  vivi_31406671:
    set fb_tmp_694, $P5018
    repr_defined $I5003, fb_tmp_694
    unless $I5003 goto if3138_else6666 
    set $P5020, fb_tmp_694[0]
    set $P5022, $P5020
    goto if3138_end6667
  if3138_else6666:
    null $P5021
    set $P5022, $P5021
  if3138_end6667:
    unless_null $P5022, vivi_31416672
    nqp_get_sc_object $P5023, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5022, $P5023
  vivi_31416672:
    $P5024 = $P5022."ast"()
    $P5025 = $P5024."list"()
    set $P5027, $P5025
    goto if3135_end6661
  if3135_else6660:
    new $P5026, 'ResizablePMCArray'
    set $P5027, $P5026
  if3135_end6661:
    set $P102, $P5027
.annotate 'line', 2956
    nqp_get_sc_object $P5028, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    $P5029 = $P5028."new"($P102 :flat, $P101 :named("op"), _lex_param_1 :named("node"))
    set $P103, $P5029
.annotate 'line', 2957
    $P5030 = _lex_param_1."!make"($P103)
    .return ($P5030) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<nqp::const>" :subid("cuid_325_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2960
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_696 
.annotate 'line', 2961
    nqp_get_sc_object $P5001, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    unless_null _lex_param_1, fallback6675
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5002
  fallback6675:
    set fb_tmp_696, _lex_param_1
    repr_defined $I5001, fb_tmp_696
    unless $I5001 goto if3142_else6673 
    set $P5003, fb_tmp_696["const"]
    set $P5005, $P5003
    goto if3142_end6674
  if3142_else6673:
    null $P5004
    set $P5005, $P5004
  if3142_end6674:
    unless_null $P5005, vivi_31436676
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5005, $P5006
  vivi_31436676:
    set $S5001, $P5005
    $P5007 = $P5001."new"("const" :named("op"), $S5001 :named("name"))
    $P5008 = _lex_param_1."!make"($P5007)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<onlystar>" :subid("cuid_326_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2964
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$dc_name", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_697 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
.annotate 'line', 2965
    nqp_get_sc_object $P5002, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 12
    $P5003 = $P5002."unique"("dispatch_cap")
    set $P101, $P5003
.annotate 'line', 2966
    nqp_get_sc_object $P5004, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 93
.annotate 'line', 2967
    nqp_get_sc_object $P5005, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 2969
    nqp_get_sc_object $P5006, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5007 = $P5006."new"($P101 :named("name"), "local" :named("scope"), "var" :named("decl"))
.annotate 'line', 2970
    nqp_get_sc_object $P5008, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5009 = $P5008."new"("CURRENT_DISPATCH_CAPTURE" :named("name"), "lexical" :named("scope"))
    $P5010 = $P5005."new"($P5007, $P5009, "bind" :named("op"))
.annotate 'line', 2972
    nqp_get_sc_object $P5011, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 2974
    nqp_get_sc_object $P5012, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 2976
    nqp_get_sc_object $P5013, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 2978
    nqp_get_sc_object $P5014, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
.annotate 'line', 2980
    nqp_get_sc_object $P5015, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5016 = $P5015."new"("&*CURRENT_DISPATCHER" :named("name"), "lexical" :named("scope"))
.annotate 'line', 2981
    nqp_get_sc_object $P5017, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 61
    find_dynamic_lex $P5018, "$*W"
    unless_null $P5018, fallback6677
    nqp_get_sc_object $P5020, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5019, $P5020
    set fb_tmp_697, $P5019
    repr_defined $I5001, fb_tmp_697
    unless $I5001 goto if3144_else6678 
    set $P5021, fb_tmp_697["$W"]
    set $P5023, $P5021
    goto if3144_end6679
  if3144_else6678:
    null $P5022
    set $P5023, $P5022
  if3144_end6679:
    unless_null $P5023, vivi_31456680
    nqp_get_sc_object $P5024, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5023, $P5024
  vivi_31456680:
    unless_null $P5023, vivi_31466681
    die "Contextual $*W not found"
    box $P5025, "Contextual $*W not found"
    set $P5023, $P5025
  vivi_31466681:
    set $P5018, $P5023
  fallback6677:
    new $P5026, 'ResizablePMCArray'
    box $P5027, "NQPRoutine"
    push $P5026, $P5027
    $P5028 = $P5018."find_sym"($P5026)
    $P5029 = $P5017."new"($P5028 :named("value"))
    $P5030 = $P5014."new"($P5016, $P5029, "$!dispatch_cache" :named("name"), "attribute" :named("scope"))
.annotate 'line', 2983
    nqp_get_sc_object $P5031, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5032 = $P5031."new"($P101 :named("name"), "local" :named("scope"))
    $P5033 = $P5013."new"($P5030, $P5032, "multicachefind" :named("op"))
.annotate 'line', 2985
    nqp_get_sc_object $P5034, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 2987
    nqp_get_sc_object $P5035, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5036 = $P5035."new"("&*CURRENT_DISPATCHER" :named("name"), "lexical" :named("scope"))
.annotate 'line', 2988
    nqp_get_sc_object $P5037, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5038 = $P5037."new"($P101 :named("name"), "local" :named("scope"))
    $P5039 = $P5034."new"($P5036, $P5038, "callmethod" :named("op"), "dispatch" :named("name"))
    $P5040 = $P5012."new"($P5033, $P5039, "ifnull" :named("op"))
.annotate 'line', 2991
    nqp_get_sc_object $P5041, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5042 = $P5041."new"($P101 :named("name"), "local" :named("scope"))
    $P5043 = $P5011."new"($P5040, $P5042, "invokewithcapture" :named("op"))
    $P5044 = $P5004."new"($P5010, $P5043)
    $P5045 = _lex_param_1."!make"($P5044)
    .return ($P5045) 
.end
.HLL "nqp"
.namespace []
.sub "args" :subid("cuid_327_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2995
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_698 
    unless_null _lex_param_1, fallback6684
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback6684:
    set fb_tmp_698, _lex_param_1
    repr_defined $I5001, fb_tmp_698
    unless $I5001 goto if3147_else6682 
    set $P5002, fb_tmp_698["arglist"]
    set $P5004, $P5002
    goto if3147_end6683
  if3147_else6682:
    null $P5003
    set $P5004, $P5003
  if3147_end6683:
    unless_null $P5004, vivi_31486685
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_31486685:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "arglist" :subid("cuid_328_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2997
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5058 = 'cuid_502_1361734139.417' 
    capture_lex $P5058 
    .lex "$past", $P101 
    .lex "$i", $P102 
    .lex "$n", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_699 
    .local pmc fb_tmp_701 
    .local pmc fb_tmp_702 
    .local pmc fb_tmp_703 
    .local pmc fb_tmp_704 
    .local pmc fb_tmp_705 
    .local pmc fb_tmp_706 
    .local pmc fb_tmp_707 
    .local pmc fb_tmp_708 
    .local pmc tmp_2 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P103, $P5003
.annotate 'line', 2998
    nqp_get_sc_object $P5004, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    $P5005 = $P5004."new"("call" :named("op"), _lex_param_1 :named("node"))
    set $P101, $P5005
    unless_null _lex_param_1, fallback6690
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5006
  fallback6690:
    set fb_tmp_699, _lex_param_1
    repr_defined $I5001, fb_tmp_699
    unless $I5001 goto if3150_else6688 
    set $P5007, fb_tmp_699["EXPR"]
    set $P5009, $P5007
    goto if3150_end6689
  if3150_else6688:
    null $P5008
    set $P5009, $P5008
  if3150_end6689:
    unless_null $P5009, vivi_31516691
    nqp_get_sc_object $P5010, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5009, $P5010
  vivi_31516691:
    unless $P5009 goto if3149_end6687 
    .const 'Sub' $P5011 = 'cuid_502_1361734139.417' 
    capture_lex $P5011
    $P5012 = $P5011()
  if3149_end6687:
    box $P5013, 0
    set $P102, $P5013
.annotate 'line', 3007
    $P5014 = $P101."list"()
    set $N5001, $P5014
    box $P5015, $N5001
    set $P103, $P5015
  while3157_test6705:
    set $N5002, $P102
    set $N5003, $P103
    islt $I5002, $N5002, $N5003
    box $P5056, $I5002
    set $P5055, $P5056
    unless $I5002 goto while3157_done6709 
  while3157_redo6707:
.annotate 'line', 3008
    set fb_tmp_701, $P101
    repr_defined $I5004, fb_tmp_701
    unless $I5004 goto if3160_else6714 
    set $I5005, $P102
    set $P5016, fb_tmp_701[$I5005]
    set $P5018, $P5016
    goto if3160_end6715
  if3160_else6714:
    null $P5017
    set $P5018, $P5017
  if3160_end6715:
    unless_null $P5018, vivi_31616716
    nqp_get_sc_object $P5019, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5018, $P5019
  vivi_31616716:
    nqp_get_sc_object $P5020, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    type_check $I5003, $P5018, $P5020
    set $I5009, $I5003
    unless $I5003 goto if3159_end6713 
.annotate 'line', 3009
    set fb_tmp_702, $P101
    repr_defined $I5007, fb_tmp_702
    unless $I5007 goto if3162_else6717 
    set $I5008, $P102
    set $P5021, fb_tmp_702[$I5008]
    set $P5023, $P5021
    goto if3162_end6718
  if3162_else6717:
    null $P5022
    set $P5023, $P5022
  if3162_end6718:
    unless_null $P5023, vivi_31636719
    nqp_get_sc_object $P5024, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5023, $P5024
  vivi_31636719:
    $P5025 = $P5023."name"()
    set $S5001, $P5025
    iseq $I5006, $S5001, "&prefix:<|>"
    set $I5009, $I5006
  if3159_end6713:
    unless $I5009 goto if3158_end6711 
    set $I5010, $P102
    set fb_tmp_704, $P101
    repr_defined $I5012, fb_tmp_704
    unless $I5012 goto if3165_else6722 
    set $I5013, $P102
    set $P5026, fb_tmp_704[$I5013]
    set $P5028, $P5026
    goto if3165_end6723
  if3165_else6722:
    null $P5027
    set $P5028, $P5027
  if3165_end6723:
    unless_null $P5028, vivi_31666724
    nqp_get_sc_object $P5029, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5028, $P5029
  vivi_31666724:
    set fb_tmp_703, $P5028
    repr_defined $I5011, fb_tmp_703
    unless $I5011 goto if3164_else6720 
    set $P5030, fb_tmp_703[0]
    set $P5032, $P5030
    goto if3164_end6721
  if3164_else6720:
    null $P5031
    set $P5032, $P5031
  if3164_end6721:
    unless_null $P5032, vivi_31676725
    nqp_get_sc_object $P5033, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5032, $P5033
  vivi_31676725:
    set $P101[$I5010], $P5032
.annotate 'line', 3011
    set fb_tmp_705, $P101
    repr_defined $I5014, fb_tmp_705
    unless $I5014 goto if3168_else6726 
    set $I5015, $P102
    set $P5034, fb_tmp_705[$I5015]
    set $P5036, $P5034
    goto if3168_end6727
  if3168_else6726:
    null $P5035
    set $P5036, $P5035
  if3168_end6727:
    unless_null $P5036, vivi_31696728
    nqp_get_sc_object $P5037, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5036, $P5037
  vivi_31696728:
    $P5036."flat"(1)
    set fb_tmp_706, $P101
    repr_defined $I5017, fb_tmp_706
    unless $I5017 goto if3172_else6733 
    set $I5018, $P102
    set $P5038, fb_tmp_706[$I5018]
    set $P5040, $P5038
    goto if3172_end6734
  if3172_else6733:
    null $P5039
    set $P5040, $P5039
  if3172_end6734:
    unless_null $P5040, vivi_31736735
    nqp_get_sc_object $P5041, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5040, $P5041
  vivi_31736735:
    nqp_get_sc_object $P5042, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    type_check $I5016, $P5040, $P5042
    set $I5022, $I5016
    unless $I5016 goto if3171_end6732 
.annotate 'line', 3013
    set fb_tmp_707, $P101
    repr_defined $I5020, fb_tmp_707
    unless $I5020 goto if3174_else6736 
    set $I5021, $P102
    set $P5043, fb_tmp_707[$I5021]
    set $P5045, $P5043
    goto if3174_end6737
  if3174_else6736:
    null $P5044
    set $P5045, $P5044
  if3174_end6737:
    unless_null $P5045, vivi_31756738
    nqp_get_sc_object $P5046, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5045, $P5046
  vivi_31756738:
    $P5047 = $P5045."name"()
    set $S5003, $P5047
    substr $S5002, $S5003, 0, 1
    iseq $I5019, $S5002, "%"
    set $I5022, $I5019
  if3171_end6732:
    box $P5054, $I5022
    set $P5053, $P5054
    unless $I5022 goto if3170_end6730 
.annotate 'line', 3012
    set fb_tmp_708, $P101
    repr_defined $I5023, fb_tmp_708
    unless $I5023 goto if3176_else6739 
    set $I5024, $P102
    set $P5048, fb_tmp_708[$I5024]
    set $P5050, $P5048
    goto if3176_end6740
  if3176_else6739:
    null $P5049
    set $P5050, $P5049
  if3176_end6740:
    unless_null $P5050, vivi_31776741
    nqp_get_sc_object $P5051, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5050, $P5051
  vivi_31776741:
    $P5052 = $P5050."named"(1)
    set $P5053, $P5052
  if3170_end6730:
  if3158_end6711:
    set tmp_2, $P102
    set $N5005, tmp_2
    set $N5006, 1
    add $N5004, $N5005, $N5006
    box $P5055, $N5004
    set $P102, $P5055
    set $P5055, tmp_2
    goto while3157_test6705 
  while3157_done6709:
.annotate 'line', 3017
    $P5057 = _lex_param_1."!make"($P101)
    .return ($P5057) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_502_1361734139.417") :anon :lex :outer("cuid_328_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2999
    .const 'Sub' $P5021 = 'cuid_501_1361734139.417' 
    capture_lex $P5021 
    .lex "$expr", $P101 
    .local pmc fb_tmp_700 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
.annotate 'line', 3000
    find_lex $P5002, "$/"
    unless_null $P5002, fallback6694
    nqp_get_sc_object $P5003, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5002, $P5003
  fallback6694:
    set fb_tmp_700, $P5002
    repr_defined $I5001, fb_tmp_700
    unless $I5001 goto if3152_else6692 
    set $P5004, fb_tmp_700["EXPR"]
    set $P5006, $P5004
    goto if3152_end6693
  if3152_else6692:
    null $P5005
    set $P5006, $P5005
  if3152_end6693:
    unless_null $P5006, vivi_31536695
    nqp_get_sc_object $P5007, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5006, $P5007
  vivi_31536695:
    $P5008 = $P5006."ast"()
    set $P101, $P5008
    nqp_get_sc_object $P5009, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    type_check $I5002, $P101, $P5009
    set $I5004, $I5002
    unless $I5002 goto if3156_end6701 
.annotate 'line', 3001
    $P5010 = $P101."name"()
    set $S5001, $P5010
    iseq $I5003, $S5001, "&infix:<,>"
    set $I5004, $I5003
  if3156_end6701:
    set $I5006, $I5004
    unless $I5004 goto if3155_end6699 
    $P5011 = $P101."named"()
    isfalse $I5005, $P5011
    set $I5006, $I5005
  if3155_end6699:
    unless $I5006 goto if3154_else6696 
.annotate 'line', 3002
    $P5015 = $P101."list"()
    set $P5012, $P5015
    iter $P5014, $P5015
  for_next6702:
    unless $P5014, for_done6704
    shift $P5017, $P5014
  for_redo6703:
    .const 'Sub' $P5016 = 'cuid_501_1361734139.417' 
    capture_lex $P5016
    $P5012 = $P5016($P5017)
    goto for_next6702
  for_done6704:
    set $P5020, $P5012
    goto if3154_end6697
  if3154_else6696:
.annotate 'line', 3004
    find_lex $P5018, "$past"
    $P5019 = $P5018."push"($P101)
    set $P5020, $P5019
  if3154_end6697:
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_501_1361734139.417") :anon :lex :outer("cuid_502_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3002
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "$past"
    $P5002 = $P5001."push"(_lex_param_0)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<multi_declarator>" :subid("cuid_329_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3020
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_709 
    unless_null _lex_param_1, fallback6744
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback6744:
    set fb_tmp_709, _lex_param_1
    repr_defined $I5001, fb_tmp_709
    unless $I5001 goto if3178_else6742 
    set $P5002, fb_tmp_709["multi_declarator"]
    set $P5004, $P5002
    goto if3178_end6743
  if3178_else6742:
    null $P5003
    set $P5004, $P5003
  if3178_end6743:
    unless_null $P5004, vivi_31796745
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_31796745:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<value>" :subid("cuid_330_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3022
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_710 
    unless_null _lex_param_1, fallback6748
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback6748:
    set fb_tmp_710, _lex_param_1
    repr_defined $I5001, fb_tmp_710
    unless $I5001 goto if3180_else6746 
    set $P5002, fb_tmp_710["value"]
    set $P5004, $P5002
    goto if3180_end6747
  if3180_else6746:
    null $P5003
    set $P5004, $P5003
  if3180_end6747:
    unless_null $P5004, vivi_31816749
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_31816749:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<( )>" :subid("cuid_331_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3024
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_711 
    .local pmc fb_tmp_712 
    .local pmc fb_tmp_713 
.annotate 'line', 3025
    unless_null _lex_param_1, fallback6754
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback6754:
    set fb_tmp_711, _lex_param_1
    repr_defined $I5001, fb_tmp_711
    unless $I5001 goto if3183_else6752 
    set $P5002, fb_tmp_711["EXPR"]
    set $P5004, $P5002
    goto if3183_end6753
  if3183_else6752:
    null $P5003
    set $P5004, $P5003
  if3183_end6753:
    unless_null $P5004, vivi_31846755
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_31846755:
    unless $P5004 goto if3182_else6750 
.annotate 'line', 3026
    unless_null _lex_param_1, fallback6760
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5006
  fallback6760:
    set fb_tmp_713, _lex_param_1
    repr_defined $I5003, fb_tmp_713
    unless $I5003 goto if3186_else6758 
    set $P5007, fb_tmp_713["EXPR"]
    set $P5009, $P5007
    goto if3186_end6759
  if3186_else6758:
    null $P5008
    set $P5009, $P5008
  if3186_end6759:
    unless_null $P5009, vivi_31876761
    nqp_get_sc_object $P5010, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5009, $P5010
  vivi_31876761:
    set fb_tmp_712, $P5009
    repr_defined $I5002, fb_tmp_712
    unless $I5002 goto if3185_else6756 
    set $P5011, fb_tmp_712[0]
    set $P5013, $P5011
    goto if3185_end6757
  if3185_else6756:
    null $P5012
    set $P5013, $P5012
  if3185_end6757:
    unless_null $P5013, vivi_31886762
    nqp_get_sc_object $P5014, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5013, $P5014
  vivi_31886762:
    $P5015 = $P5013."ast"()
    set $P5018, $P5015
    goto if3182_end6751
  if3182_else6750:
.annotate 'line', 3027
    nqp_get_sc_object $P5016, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    $P5017 = $P5016."new"("list" :named("op"), _lex_param_1 :named("node"))
    set $P5018, $P5017
  if3182_end6751:
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<[ ]>" :subid("cuid_332_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3030
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_714 
    .local pmc fb_tmp_715 
    .local pmc fb_tmp_716 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    unless_null _lex_param_1, fallback6767
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5002
  fallback6767:
    set fb_tmp_714, _lex_param_1
    repr_defined $I5001, fb_tmp_714
    unless $I5001 goto if3190_else6765 
    set $P5003, fb_tmp_714["EXPR"]
    set $P5005, $P5003
    goto if3190_end6766
  if3190_else6765:
    null $P5004
    set $P5005, $P5004
  if3190_end6766:
    unless_null $P5005, vivi_31916768
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5005, $P5006
  vivi_31916768:
    unless $P5005 goto if3189_else6763 
.annotate 'line', 3032
.annotate 'line', 3033
    unless_null _lex_param_1, fallback6773
    nqp_get_sc_object $P5007, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5007
  fallback6773:
    set fb_tmp_716, _lex_param_1
    repr_defined $I5003, fb_tmp_716
    unless $I5003 goto if3193_else6771 
    set $P5008, fb_tmp_716["EXPR"]
    set $P5010, $P5008
    goto if3193_end6772
  if3193_else6771:
    null $P5009
    set $P5010, $P5009
  if3193_end6772:
    unless_null $P5010, vivi_31946774
    nqp_get_sc_object $P5011, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5010, $P5011
  vivi_31946774:
    set fb_tmp_715, $P5010
    repr_defined $I5002, fb_tmp_715
    unless $I5002 goto if3192_else6769 
    set $P5012, fb_tmp_715[0]
    set $P5014, $P5012
    goto if3192_end6770
  if3192_else6769:
    null $P5013
    set $P5014, $P5013
  if3192_end6770:
    unless_null $P5014, vivi_31956775
    nqp_get_sc_object $P5015, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5014, $P5015
  vivi_31956775:
    $P5016 = $P5014."ast"()
    set $P101, $P5016
    nqp_get_sc_object $P5017, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    type_check $I5004, $P101, $P5017
    set $I5006, $I5004
    unless $I5004 goto if3197_end6779 
.annotate 'line', 3034
    $P5018 = $P101."name"()
    set $S5001, $P5018
    iseq $I5005, $S5001, "&infix:<,>"
    set $I5006, $I5005
  if3197_end6779:
    box $P5022, $I5006
    set $P5021, $P5022
    if $I5006 goto unless3196_end6777 
.annotate 'line', 3035
    nqp_get_sc_object $P5019, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    $P5020 = $P5019."new"($P101, "list" :named("op"))
    set $P101, $P5020
    set $P5021, $P101
  unless3196_end6777:
    goto if3189_end6764
  if3189_else6763:
.annotate 'line', 3038
.annotate 'line', 3039
    nqp_get_sc_object $P5023, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    $P5024 = $P5023."new"("list" :named("op"))
    set $P101, $P5024
  if3189_end6764:
.annotate 'line', 3041
    $P101."name"("&circumfix:<[ ]>")
.annotate 'line', 3042
    $P5025 = _lex_param_1."!make"($P101)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<ang>" :subid("cuid_333_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3045
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_717 
    unless_null _lex_param_1, fallback6782
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback6782:
    set fb_tmp_717, _lex_param_1
    repr_defined $I5001, fb_tmp_717
    unless $I5001 goto if3198_else6780 
    set $P5002, fb_tmp_717["quote_EXPR"]
    set $P5004, $P5002
    goto if3198_end6781
  if3198_else6780:
    null $P5003
    set $P5004, $P5003
  if3198_end6781:
    unless_null $P5004, vivi_31996783
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_31996783:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub utf8:"circumfix:sym<\x{ab} \x{bb}>" :subid("cuid_334_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3046
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_718 
    unless_null _lex_param_1, fallback6786
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback6786:
    set fb_tmp_718, _lex_param_1
    repr_defined $I5001, fb_tmp_718
    unless $I5001 goto if3200_else6784 
    set $P5002, fb_tmp_718["quote_EXPR"]
    set $P5004, $P5002
    goto if3200_end6785
  if3200_else6784:
    null $P5003
    set $P5004, $P5003
  if3200_end6785:
    unless_null $P5004, vivi_32016787
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_32016787:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<{ }>" :subid("cuid_335_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3048
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5044 = 'cuid_503_1361734139.417' 
    capture_lex $P5044 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_719 
    .local pmc fb_tmp_720 
    .local pmc fb_tmp_721 
    .local pmc fb_tmp_722 
    .local pmc fb_tmp_724 
    .local pmc fb_tmp_725 
    .local pmc fb_tmp_726 
    .local pmc fb_tmp_727 
    unless_null _lex_param_1, fallback6798
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback6798:
    set fb_tmp_722, _lex_param_1
    repr_defined $I5005, fb_tmp_722
    unless $I5005 goto if3206_else6796 
    set $P5002, fb_tmp_722["pblock"]
    set $P5004, $P5002
    goto if3206_end6797
  if3206_else6796:
    null $P5003
    set $P5004, $P5003
  if3206_end6797:
    unless_null $P5004, vivi_32076799
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_32076799:
    set fb_tmp_721, $P5004
    repr_defined $I5004, fb_tmp_721
    unless $I5004 goto if3205_else6794 
    set $P5006, fb_tmp_721["blockoid"]
    set $P5008, $P5006
    goto if3205_end6795
  if3205_else6794:
    null $P5007
    set $P5008, $P5007
  if3205_end6795:
    unless_null $P5008, vivi_32086800
    nqp_get_sc_object $P5009, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5008, $P5009
  vivi_32086800:
    set fb_tmp_720, $P5008
    repr_defined $I5003, fb_tmp_720
    unless $I5003 goto if3204_else6792 
    set $P5010, fb_tmp_720["statementlist"]
    set $P5012, $P5010
    goto if3204_end6793
  if3204_else6792:
    null $P5011
    set $P5012, $P5011
  if3204_end6793:
    unless_null $P5012, vivi_32096801
    nqp_get_sc_object $P5013, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5012, $P5013
  vivi_32096801:
    set fb_tmp_719, $P5012
    repr_defined $I5002, fb_tmp_719
    unless $I5002 goto if3203_else6790 
    set $P5014, fb_tmp_719["statement"]
    set $P5016, $P5014
    goto if3203_end6791
  if3203_else6790:
    null $P5015
    set $P5016, $P5015
  if3203_end6791:
    unless_null $P5016, vivi_32106802
    nqp_get_sc_object $P5017, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5016, $P5017
  vivi_32106802:
    set $N5001, $P5016
    set $N5002, 0
    isgt $I5001, $N5001, $N5002
    unless $I5001 goto if3202_else6788 
    .const 'Sub' $P5018 = 'cuid_503_1361734139.417' 
    capture_lex $P5018
    $P5019 = $P5018()
    set $P5043, $P5019
    goto if3202_end6789
  if3202_else6788:
    unless_null _lex_param_1, fallback6815
    nqp_get_sc_object $P5020, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5020
  fallback6815:
    set fb_tmp_726, _lex_param_1
    repr_defined $I5008, fb_tmp_726
    unless $I5008 goto if3216_else6813 
    set $P5021, fb_tmp_726["pblock"]
    set $P5023, $P5021
    goto if3216_end6814
  if3216_else6813:
    null $P5022
    set $P5023, $P5022
  if3216_end6814:
    unless_null $P5023, vivi_32176816
    nqp_get_sc_object $P5024, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5023, $P5024
  vivi_32176816:
    set fb_tmp_725, $P5023
    repr_defined $I5007, fb_tmp_725
    unless $I5007 goto if3215_else6811 
    set $P5025, fb_tmp_725["blockoid"]
    set $P5027, $P5025
    goto if3215_end6812
  if3215_else6811:
    null $P5026
    set $P5027, $P5026
  if3215_end6812:
    unless_null $P5027, vivi_32186817
    nqp_get_sc_object $P5028, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5027, $P5028
  vivi_32186817:
    set fb_tmp_724, $P5027
    repr_defined $I5006, fb_tmp_724
    unless $I5006 goto if3214_else6809 
    set $P5029, fb_tmp_724["you_are_here"]
    set $P5031, $P5029
    goto if3214_end6810
  if3214_else6809:
    null $P5030
    set $P5031, $P5030
  if3214_end6810:
    unless_null $P5031, vivi_32196818
    nqp_get_sc_object $P5032, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5031, $P5032
  vivi_32196818:
    unless $P5031 goto if3213_else6807 
.annotate 'line', 3054
.annotate 'line', 3055
    unless_null _lex_param_1, fallback6821
    nqp_get_sc_object $P5033, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5033
  fallback6821:
    set fb_tmp_727, _lex_param_1
    repr_defined $I5009, fb_tmp_727
    unless $I5009 goto if3220_else6819 
    set $P5034, fb_tmp_727["pblock"]
    set $P5036, $P5034
    goto if3220_end6820
  if3220_else6819:
    null $P5035
    set $P5036, $P5035
  if3220_end6820:
    unless_null $P5036, vivi_32216822
    nqp_get_sc_object $P5037, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5036, $P5037
  vivi_32216822:
    $P5038 = $P5036."ast"()
    $P5039 = _lex_param_1."!make"($P5038)
    set $P5042, $P5039
    goto if3213_end6808
  if3213_else6807:
.annotate 'line', 3057
.annotate 'line', 3058
    $P5040 = "&default_for"("%")
    $P5041 = _lex_param_1."!make"($P5040)
    set $P5042, $P5041
  if3213_end6808:
    set $P5043, $P5042
  if3202_end6789:
    .return ($P5043) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_503_1361734139.417") :anon :lex :outer("cuid_335_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3049
    .lex "$past", $P101 
    .local pmc fb_tmp_723 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
.annotate 'line', 3050
    nqp_get_sc_object $P5002, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    find_lex $P5003, "$/"
    unless_null $P5003, fallback6805
    nqp_get_sc_object $P5004, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5003, $P5004
  fallback6805:
    set fb_tmp_723, $P5003
    repr_defined $I5001, fb_tmp_723
    unless $I5001 goto if3211_else6803 
    set $P5005, fb_tmp_723["pblock"]
    set $P5007, $P5005
    goto if3211_end6804
  if3211_else6803:
    null $P5006
    set $P5007, $P5006
  if3211_end6804:
    unless_null $P5007, vivi_32126806
    nqp_get_sc_object $P5008, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5007, $P5008
  vivi_32126806:
    $P5009 = $P5007."ast"()
    $P5010 = $P5002."new"($P5009, "takeclosure" :named("op"))
    set $P101, $P5010
    box $P5011, 1
    set $P101["bareblock"], $P5011
.annotate 'line', 3052
    find_dynamic_lex $P5012, "$/"
    $P5013 = $P5012."!make"($P101)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "semilist" :subid("cuid_336_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3062
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_728 
    unless_null _lex_param_1, fallback6825
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback6825:
    set fb_tmp_728, _lex_param_1
    repr_defined $I5001, fb_tmp_728
    unless $I5001 goto if3222_else6823 
    set $P5002, fb_tmp_728["statement"]
    set $P5004, $P5002
    goto if3222_end6824
  if3222_else6823:
    null $P5003
    set $P5004, $P5003
  if3222_end6824:
    unless_null $P5004, vivi_32236826
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_32236826:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<[ ]>" :subid("cuid_337_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3064
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_729 
.annotate 'line', 3065
    nqp_get_sc_object $P5001, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 80
    unless_null _lex_param_1, fallback6829
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5002
  fallback6829:
    set fb_tmp_729, _lex_param_1
    repr_defined $I5001, fb_tmp_729
    unless $I5001 goto if3224_else6827 
    set $P5003, fb_tmp_729["EXPR"]
    set $P5005, $P5003
    goto if3224_end6828
  if3224_else6827:
    null $P5004
    set $P5005, $P5004
  if3224_end6828:
    unless_null $P5005, vivi_32256830
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5005, $P5006
  vivi_32256830:
    $P5007 = $P5005."ast"()
    $P5008 = "&default_for"("$")
    $P5009 = $P5001."new"($P5007, "positional" :named("scope"), $P5008 :named("fallback"))
    $P5010 = _lex_param_1."!make"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<{ }>" :subid("cuid_338_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3068
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_730 
.annotate 'line', 3069
    nqp_get_sc_object $P5001, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 80
    unless_null _lex_param_1, fallback6833
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5002
  fallback6833:
    set fb_tmp_730, _lex_param_1
    repr_defined $I5001, fb_tmp_730
    unless $I5001 goto if3226_else6831 
    set $P5003, fb_tmp_730["EXPR"]
    set $P5005, $P5003
    goto if3226_end6832
  if3226_else6831:
    null $P5004
    set $P5005, $P5004
  if3226_end6832:
    unless_null $P5005, vivi_32276834
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5005, $P5006
  vivi_32276834:
    $P5007 = $P5005."ast"()
    $P5008 = "&default_for"("$")
    $P5009 = $P5001."new"($P5007, "associative" :named("scope"), $P5008 :named("fallback"))
    $P5010 = _lex_param_1."!make"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<ang>" :subid("cuid_339_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3072
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_731 
.annotate 'line', 3073
    nqp_get_sc_object $P5001, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 80
    unless_null _lex_param_1, fallback6837
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5002
  fallback6837:
    set fb_tmp_731, _lex_param_1
    repr_defined $I5001, fb_tmp_731
    unless $I5001 goto if3228_else6835 
    set $P5003, fb_tmp_731["quote_EXPR"]
    set $P5005, $P5003
    goto if3228_end6836
  if3228_else6835:
    null $P5004
    set $P5005, $P5004
  if3228_end6836:
    unless_null $P5005, vivi_32296838
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5005, $P5006
  vivi_32296838:
    $P5007 = $P5005."ast"()
    $P5008 = "&default_for"("$")
    $P5009 = $P5001."new"($P5007, "associative" :named("scope"), $P5008 :named("fallback"))
    $P5010 = _lex_param_1."!make"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<( )>" :subid("cuid_340_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3076
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_732 
.annotate 'line', 3077
    unless_null _lex_param_1, fallback6841
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback6841:
    set fb_tmp_732, _lex_param_1
    repr_defined $I5001, fb_tmp_732
    unless $I5001 goto if3230_else6839 
    set $P5002, fb_tmp_732["arglist"]
    set $P5004, $P5002
    goto if3230_end6840
  if3230_else6839:
    null $P5003
    set $P5004, $P5003
  if3230_end6840:
    unless_null $P5004, vivi_32316842
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_32316842:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "value" :subid("cuid_341_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3080
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_733 
    .local pmc fb_tmp_734 
    .local pmc fb_tmp_735 
.annotate 'line', 3081
    unless_null _lex_param_1, fallback6847
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback6847:
    set fb_tmp_733, _lex_param_1
    repr_defined $I5001, fb_tmp_733
    unless $I5001 goto if3233_else6845 
    set $P5002, fb_tmp_733["quote"]
    set $P5004, $P5002
    goto if3233_end6846
  if3233_else6845:
    null $P5003
    set $P5004, $P5003
  if3233_end6846:
    unless_null $P5004, vivi_32346848
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_32346848:
    unless $P5004 goto if3232_else6843 
    unless_null _lex_param_1, fallback6851
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5006
  fallback6851:
    set fb_tmp_734, _lex_param_1
    repr_defined $I5002, fb_tmp_734
    unless $I5002 goto if3235_else6849 
    set $P5007, fb_tmp_734["quote"]
    set $P5009, $P5007
    goto if3235_end6850
  if3235_else6849:
    null $P5008
    set $P5009, $P5008
  if3235_end6850:
    unless_null $P5009, vivi_32366852
    nqp_get_sc_object $P5010, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5009, $P5010
  vivi_32366852:
    $P5011 = $P5009."ast"()
    set $P5018, $P5011
    goto if3232_end6844
  if3232_else6843:
    unless_null _lex_param_1, fallback6855
    nqp_get_sc_object $P5012, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5012
  fallback6855:
    set fb_tmp_735, _lex_param_1
    repr_defined $I5003, fb_tmp_735
    unless $I5003 goto if3237_else6853 
    set $P5013, fb_tmp_735["number"]
    set $P5015, $P5013
    goto if3237_end6854
  if3237_else6853:
    null $P5014
    set $P5015, $P5014
  if3237_end6854:
    unless_null $P5015, vivi_32386856
    nqp_get_sc_object $P5016, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5015, $P5016
  vivi_32386856:
    $P5017 = $P5015."ast"()
    set $P5018, $P5017
  if3232_end6844:
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "number" :subid("cuid_342_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3084
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$value", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_736 
    .local pmc fb_tmp_737 
    .local pmc fb_tmp_738 
    .local pmc fb_tmp_739 
    .local pmc fb_tmp_740 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    unless_null _lex_param_1, fallback6861
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5002
  fallback6861:
    set fb_tmp_736, _lex_param_1
    repr_defined $I5001, fb_tmp_736
    unless $I5001 goto if3240_else6859 
    set $P5003, fb_tmp_736["dec_number"]
    set $P5005, $P5003
    goto if3240_end6860
  if3240_else6859:
    null $P5004
    set $P5005, $P5004
  if3240_end6860:
    unless_null $P5005, vivi_32416862
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5005, $P5006
  vivi_32416862:
    unless $P5005 goto if3239_else6857 
.annotate 'line', 3085
    unless_null _lex_param_1, fallback6865
    nqp_get_sc_object $P5007, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5007
  fallback6865:
    set fb_tmp_737, _lex_param_1
    repr_defined $I5002, fb_tmp_737
    unless $I5002 goto if3242_else6863 
    set $P5008, fb_tmp_737["dec_number"]
    set $P5010, $P5008
    goto if3242_end6864
  if3242_else6863:
    null $P5009
    set $P5010, $P5009
  if3242_end6864:
    unless_null $P5010, vivi_32436866
    nqp_get_sc_object $P5011, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5010, $P5011
  vivi_32436866:
    $P5012 = $P5010."ast"()
    set $P5019, $P5012
    goto if3239_end6858
  if3239_else6857:
    unless_null _lex_param_1, fallback6869
    nqp_get_sc_object $P5013, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5013
  fallback6869:
    set fb_tmp_738, _lex_param_1
    repr_defined $I5003, fb_tmp_738
    unless $I5003 goto if3244_else6867 
    set $P5014, fb_tmp_738["integer"]
    set $P5016, $P5014
    goto if3244_end6868
  if3244_else6867:
    null $P5015
    set $P5016, $P5015
  if3244_end6868:
    unless_null $P5016, vivi_32456870
    nqp_get_sc_object $P5017, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5016, $P5017
  vivi_32456870:
    $P5018 = $P5016."ast"()
    set $P5019, $P5018
  if3239_end6858:
    set $P101, $P5019
    unless_null _lex_param_1, fallback6875
    nqp_get_sc_object $P5020, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5020
  fallback6875:
    set fb_tmp_739, _lex_param_1
    repr_defined $I5005, fb_tmp_739
    unless $I5005 goto if3247_else6873 
    set $P5021, fb_tmp_739["sign"]
    set $P5023, $P5021
    goto if3247_end6874
  if3247_else6873:
    null $P5022
    set $P5023, $P5022
  if3247_end6874:
    unless_null $P5023, vivi_32486876
    nqp_get_sc_object $P5024, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5023, $P5024
  vivi_32486876:
    set $S5001, $P5023
    iseq $I5004, $S5001, "-"
    unless $I5004 goto if3246_end6872 
.annotate 'line', 3086
    set $N5002, $P101
    neg $N5001, $N5002
    box $P5025, $N5001
    set $P101, $P5025
  if3246_end6872:
.annotate 'line', 3087
    unless_null _lex_param_1, fallback6881
    nqp_get_sc_object $P5026, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5026
  fallback6881:
    set fb_tmp_740, _lex_param_1
    repr_defined $I5006, fb_tmp_740
    unless $I5006 goto if3250_else6879 
    set $P5027, fb_tmp_740["dec_number"]
    set $P5029, $P5027
    goto if3250_end6880
  if3250_else6879:
    null $P5028
    set $P5029, $P5028
  if3250_end6880:
    unless_null $P5029, vivi_32516882
    nqp_get_sc_object $P5030, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5029, $P5030
  vivi_32516882:
    unless $P5029 goto if3249_else6877 
.annotate 'line', 3088
    nqp_get_sc_object $P5031, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 47
    $P5032 = $P5031."new"($P101 :named("value"))
    set $P5035, $P5032
    goto if3249_end6878
  if3249_else6877:
.annotate 'line', 3089
    nqp_get_sc_object $P5033, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 42
    $P5034 = $P5033."new"($P101 :named("value"))
    set $P5035, $P5034
  if3249_end6878:
    $P5036 = _lex_param_1."!make"($P5035)
    .return ($P5036) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<apos>" :subid("cuid_343_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3092
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_741 
    unless_null _lex_param_1, fallback6885
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback6885:
    set fb_tmp_741, _lex_param_1
    repr_defined $I5001, fb_tmp_741
    unless $I5001 goto if3252_else6883 
    set $P5002, fb_tmp_741["quote_EXPR"]
    set $P5004, $P5002
    goto if3252_end6884
  if3252_else6883:
    null $P5003
    set $P5004, $P5003
  if3252_end6884:
    unless_null $P5004, vivi_32536886
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_32536886:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<dblq>" :subid("cuid_344_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3093
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_742 
    unless_null _lex_param_1, fallback6889
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback6889:
    set fb_tmp_742, _lex_param_1
    repr_defined $I5001, fb_tmp_742
    unless $I5001 goto if3254_else6887 
    set $P5002, fb_tmp_742["quote_EXPR"]
    set $P5004, $P5002
    goto if3254_end6888
  if3254_else6887:
    null $P5003
    set $P5004, $P5003
  if3254_end6888:
    unless_null $P5004, vivi_32556890
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_32556890:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<qq>" :subid("cuid_345_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3094
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_743 
    unless_null _lex_param_1, fallback6893
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback6893:
    set fb_tmp_743, _lex_param_1
    repr_defined $I5001, fb_tmp_743
    unless $I5001 goto if3256_else6891 
    set $P5002, fb_tmp_743["quote_EXPR"]
    set $P5004, $P5002
    goto if3256_end6892
  if3256_else6891:
    null $P5003
    set $P5004, $P5003
  if3256_end6892:
    unless_null $P5004, vivi_32576894
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_32576894:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<q>" :subid("cuid_346_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3095
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_744 
    unless_null _lex_param_1, fallback6897
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback6897:
    set fb_tmp_744, _lex_param_1
    repr_defined $I5001, fb_tmp_744
    unless $I5001 goto if3258_else6895 
    set $P5002, fb_tmp_744["quote_EXPR"]
    set $P5004, $P5002
    goto if3258_end6896
  if3258_else6895:
    null $P5003
    set $P5004, $P5003
  if3258_end6896:
    unless_null $P5004, vivi_32596898
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_32596898:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<Q>" :subid("cuid_347_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3096
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_745 
    unless_null _lex_param_1, fallback6901
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback6901:
    set fb_tmp_745, _lex_param_1
    repr_defined $I5001, fb_tmp_745
    unless $I5001 goto if3260_else6899 
    set $P5002, fb_tmp_745["quote_EXPR"]
    set $P5004, $P5002
    goto if3260_end6900
  if3260_else6899:
    null $P5003
    set $P5004, $P5003
  if3260_end6900:
    unless_null $P5004, vivi_32616902
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_32616902:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<Q:PIR>" :subid("cuid_348_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3097
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_746 
.annotate 'line', 3098
    nqp_get_sc_object $P5001, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 89
    unless_null _lex_param_1, fallback6905
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5002
  fallback6905:
    set fb_tmp_746, _lex_param_1
    repr_defined $I5001, fb_tmp_746
    unless $I5001 goto if3262_else6903 
    set $P5003, fb_tmp_746["quote_EXPR"]
    set $P5005, $P5003
    goto if3262_end6904
  if3262_else6903:
    null $P5004
    set $P5005, $P5004
  if3262_end6904:
    unless_null $P5005, vivi_32636906
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5005, $P5006
  vivi_32636906:
    $P5007 = $P5005."ast"()
    $P5008 = $P5007."value"()
    $P5009 = $P5001."new"($P5008 :named("pir"), _lex_param_1 :named("node"))
    $P5010 = _lex_param_1."!make"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym</ />" :subid("cuid_349_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3101
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$block", $P101 
    .lex "$regex", $P102 
    .lex "$past", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_747 
    .local pmc fb_tmp_748 
    .local pmc fb_tmp_749 
    .local pmc fb_tmp_750 
    .local pmc fb_tmp_751 
    .local pmc fb_tmp_752 
    .local pmc fb_tmp_753 
    .local pmc pkg_viv_tmp_47 
    .local pmc fb_tmp_754 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P103, $P5003
.annotate 'line', 3102
    find_dynamic_lex $P5004, "$*W"
    unless_null $P5004, fallback6907
    nqp_get_sc_object $P5006, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5005, $P5006
    set fb_tmp_747, $P5005
    repr_defined $I5001, fb_tmp_747
    unless $I5001 goto if3264_else6908 
    set $P5007, fb_tmp_747["$W"]
    set $P5009, $P5007
    goto if3264_end6909
  if3264_else6908:
    null $P5008
    set $P5009, $P5008
  if3264_end6909:
    unless_null $P5009, vivi_32656910
    nqp_get_sc_object $P5010, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5009, $P5010
  vivi_32656910:
    unless_null $P5009, vivi_32666911
    die "Contextual $*W not found"
    box $P5011, "Contextual $*W not found"
    set $P5009, $P5011
  vivi_32666911:
    set $P5004, $P5009
  fallback6907:
    $P5012 = $P5004."pop_lexpad"()
    set $P101, $P5012
.annotate 'line', 3103
    set fb_tmp_748, $P101
    repr_defined $I5002, fb_tmp_748
    unless $I5002 goto if3267_else6912 
    set $P5013, fb_tmp_748[0]
    set $P5015, $P5013
    goto if3267_end6913
  if3267_else6912:
    null $P5014
    set $P5015, $P5014
  if3267_end6913:
    unless_null $P5015, vivi_32686914
    nqp_get_sc_object $P5016, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5015, $P5016
  vivi_32686914:
    nqp_get_sc_object $P5017, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5018 = $P5017."new"("self" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    $P5015."push"($P5018)
.annotate 'line', 3104
    set fb_tmp_749, $P101
    repr_defined $I5003, fb_tmp_749
    unless $I5003 goto if3269_else6915 
    set $P5019, fb_tmp_749[0]
    set $P5021, $P5019
    goto if3269_end6916
  if3269_else6915:
    null $P5020
    set $P5021, $P5020
  if3269_end6916:
    unless_null $P5021, vivi_32706917
    nqp_get_sc_object $P5022, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5021, $P5022
  vivi_32706917:
    nqp_get_sc_object $P5023, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 3106
    nqp_get_sc_object $P5024, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5025 = $P5024."new"("self" :named("name"), "local" :named("scope"), "var" :named("decl"))
.annotate 'line', 3107
    nqp_get_sc_object $P5026, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5027 = $P5026."new"("self" :named("name"), "lexical" :named("scope"))
    $P5028 = $P5023."new"($P5025, $P5027, "bind" :named("op"))
    $P5021."push"($P5028)
.annotate 'line', 3108
    set fb_tmp_750, $P101
    repr_defined $I5004, fb_tmp_750
    unless $I5004 goto if3271_else6918 
    set $P5029, fb_tmp_750[0]
    set $P5031, $P5029
    goto if3271_end6919
  if3271_else6918:
    null $P5030
    set $P5031, $P5030
  if3271_end6919:
    unless_null $P5031, vivi_32726920
    nqp_get_sc_object $P5032, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5031, $P5032
  vivi_32726920:
    nqp_get_sc_object $P5033, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5034 = $P5033."new"(utf8:"$\x{a2}" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    $P5031."push"($P5034)
.annotate 'line', 3109
    set fb_tmp_751, $P101
    repr_defined $I5005, fb_tmp_751
    unless $I5005 goto if3273_else6921 
    set $P5035, fb_tmp_751[0]
    set $P5037, $P5035
    goto if3273_end6922
  if3273_else6921:
    null $P5036
    set $P5037, $P5036
  if3273_end6922:
    unless_null $P5037, vivi_32746923
    nqp_get_sc_object $P5038, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5037, $P5038
  vivi_32746923:
    nqp_get_sc_object $P5039, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5040 = $P5039."new"("$/" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    $P5037."push"($P5040)
.annotate 'line', 3110
    $P101."symbol"(utf8:"$\x{a2}", "lexical" :named("scope"))
.annotate 'line', 3111
    $P101."symbol"("$/", "lexical" :named("scope"))
.annotate 'line', 3113
    find_dynamic_lex $P5041, "%*LANG"
    unless_null $P5041, fallback6926
    nqp_get_sc_object $P5043, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5042, $P5043
    set pkg_viv_tmp_47, $P5042
    set fb_tmp_753, pkg_viv_tmp_47
    repr_defined $I5007, fb_tmp_753
    unless $I5007 goto if3276_else6927 
    set $P5044, fb_tmp_753["%LANG"]
    set $P5046, $P5044
    goto if3276_end6928
  if3276_else6927:
    null $P5045
    set $P5046, $P5045
  if3276_end6928:
    unless_null $P5046, vivi_32776929
    new $P5047, 'Hash'
    set pkg_viv_tmp_47["%LANG"], $P5047
    set $P5046, $P5047
  vivi_32776929:
    unless_null $P5046, vivi_32786930
    die "Contextual %*LANG not found"
    box $P5048, "Contextual %*LANG not found"
    set $P5046, $P5048
  vivi_32786930:
    set $P5041, $P5046
  fallback6926:
    set fb_tmp_752, $P5041
    repr_defined $I5006, fb_tmp_752
    unless $I5006 goto if3275_else6924 
    set $P5049, fb_tmp_752["Regex-actions"]
    set $P5051, $P5049
    goto if3275_end6925
  if3275_else6924:
    null $P5050
    set $P5051, $P5050
  if3275_end6925:
    unless_null $P5051, vivi_32796931
    nqp_get_sc_object $P5052, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5051, $P5052
  vivi_32796931:
    unless_null _lex_param_1, fallback6934
    nqp_get_sc_object $P5053, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5053
  fallback6934:
    set fb_tmp_754, _lex_param_1
    repr_defined $I5008, fb_tmp_754
    unless $I5008 goto if3280_else6932 
    set $P5054, fb_tmp_754["p6regex"]
    set $P5056, $P5054
    goto if3280_end6933
  if3280_else6932:
    null $P5055
    set $P5056, $P5055
  if3280_end6933:
    unless_null $P5056, vivi_32816935
    nqp_get_sc_object $P5057, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5056, $P5057
  vivi_32816935:
    $P5058 = $P5056."ast"()
    $P5059 = $P5051."qbuildsub"($P5058, $P101)
    set $P102, $P5059
.annotate 'line', 3114
    nqp_get_sc_object $P5060, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 3116
    new $P5061, 'ResizablePMCArray'
    box $P5062, "NQPRegex"
    push $P5061, $P5062
    $P5063 = "&lexical_package_lookup"($P5061, _lex_param_1)
    $P5064 = $P5060."new"($P5063, $P102, "callmethod" :named("op"), "new" :named("name"))
    set $P103, $P5064
    set $P103["sink"], $P102
.annotate 'line', 3121
    $P5065 = _lex_param_1."!make"($P103)
    .return ($P5065) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<$>" :subid("cuid_350_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3124
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_755 
    unless_null _lex_param_1, fallback6938
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback6938:
    set fb_tmp_755, _lex_param_1
    repr_defined $I5001, fb_tmp_755
    unless $I5001 goto if3282_else6936 
    set $P5002, fb_tmp_755["variable"]
    set $P5004, $P5002
    goto if3282_end6937
  if3282_else6936:
    null $P5003
    set $P5004, $P5003
  if3282_end6937:
    unless_null $P5004, vivi_32836939
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_32836939:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<{ }>" :subid("cuid_351_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3125
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_756 
.annotate 'line', 3126
    nqp_get_sc_object $P5001, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 3127
    unless_null _lex_param_1, fallback6942
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5002
  fallback6942:
    set fb_tmp_756, _lex_param_1
    repr_defined $I5001, fb_tmp_756
    unless $I5001 goto if3284_else6940 
    set $P5003, fb_tmp_756["block"]
    set $P5005, $P5003
    goto if3284_end6941
  if3284_else6940:
    null $P5004
    set $P5005, $P5004
  if3284_end6941:
    unless_null $P5005, vivi_32856943
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5005, $P5006
  vivi_32856943:
    $P5007 = $P5005."ast"()
    $P5008 = "&block_immediate"($P5007)
    $P5009 = $P5001."new"($P5008, "stringify" :named("op"), _lex_param_1 :named("node"))
    $P5010 = _lex_param_1."!make"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<esc>" :subid("cuid_352_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3130
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    $P5001 = _lex_param_1."!make"("\e")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "postfix:sym<.>" :subid("cuid_353_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3134
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_757 
    unless_null _lex_param_1, fallback6946
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback6946:
    set fb_tmp_757, _lex_param_1
    repr_defined $I5001, fb_tmp_757
    unless $I5001 goto if3286_else6944 
    set $P5002, fb_tmp_757["dotty"]
    set $P5004, $P5002
    goto if3286_end6945
  if3286_else6944:
    null $P5003
    set $P5004, $P5003
  if3286_end6945:
    unless_null $P5004, vivi_32876947
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_32876947:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<return>" :subid("cuid_354_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3136
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
.annotate 'line', 3137
    nqp_get_sc_object $P5001, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 3139
    nqp_get_sc_object $P5002, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5003 = $P5002."new"("RETURN" :named("name"), "lexical" :named("scope"))
    $P5004 = $P5001."new"($P5003, "call" :named("op"))
    $P5005 = _lex_param_1."!make"($P5004)
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<make>" :subid("cuid_355_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3143
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
.annotate 'line', 3144
    nqp_get_sc_object $P5001, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 3145
    nqp_get_sc_object $P5002, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5003 = $P5002."new"("$/" :named("name"), "contextual" :named("scope"))
    $P5004 = $P5001."new"($P5003, "callmethod" :named("op"), "!make" :named("name"), _lex_param_1 :named("node"))
    $P5005 = _lex_param_1."!make"($P5004)
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<next>" :subid("cuid_356_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3152
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    nqp_get_sc_object $P5001, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    $P5002 = $P5001."new"("control" :named("op"), "next" :named("name"))
    $P5003 = _lex_param_1."!make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<last>" :subid("cuid_357_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3153
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    nqp_get_sc_object $P5001, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    $P5002 = $P5001."new"("control" :named("op"), "last" :named("name"))
    $P5003 = _lex_param_1."!make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<redo>" :subid("cuid_358_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3154
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    nqp_get_sc_object $P5001, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    $P5002 = $P5001."new"("control" :named("op"), "redo" :named("name"))
    $P5003 = _lex_param_1."!make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<~~>" :subid("cuid_359_1361734139.417") :anon :lex :outer("cuid_426_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3156
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
.annotate 'line', 3157
    nqp_get_sc_object $P5001, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
    $P5002 = $P5001."new"("callmethod" :named("op"), "ACCEPTS" :named("name"), _lex_param_1 :named("node"))
    $P5003 = _lex_param_1."!make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_504_1361734139.417") :anon :lex :outer("cuid_374_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3261
    .const 'Sub' $P5014 = 'cuid_360_1361734139.417' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_361_1361734139.417' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_362_1361734139.417' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_363_1361734139.417' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_364_1361734139.417' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_365_1361734139.417' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_366_1361734139.417' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_367_1361734139.417' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_368_1361734139.417' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_369_1361734139.417' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_370_1361734139.417' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_371_1361734139.417' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_372_1361734139.417' 
    capture_lex $P5014 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .const 'Sub' $P5001 = 'cuid_360_1361734139.417' 
    capture_lex $P5001
    .const 'Sub' $P5002 = 'cuid_361_1361734139.417' 
    capture_lex $P5002
    .const 'Sub' $P5003 = 'cuid_362_1361734139.417' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_363_1361734139.417' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_364_1361734139.417' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_365_1361734139.417' 
    capture_lex $P5006
    .const 'Sub' $P5007 = 'cuid_366_1361734139.417' 
    capture_lex $P5007
    .const 'Sub' $P5008 = 'cuid_367_1361734139.417' 
    capture_lex $P5008
    .const 'Sub' $P5009 = 'cuid_368_1361734139.417' 
    capture_lex $P5009
    .const 'Sub' $P5010 = 'cuid_369_1361734139.417' 
    capture_lex $P5010
    .const 'Sub' $P5011 = 'cuid_370_1361734139.417' 
    capture_lex $P5011
    .const 'Sub' $P5012 = 'cuid_371_1361734139.417' 
    capture_lex $P5012
    .const 'Sub' $P5013 = 'cuid_372_1361734139.417' 
    capture_lex $P5013
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<:my>" :subid("cuid_360_1361734139.417") :anon :lex :outer("cuid_504_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3263
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_758 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
.annotate 'line', 3264
    unless_null _lex_param_1, fallback6950
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5002
  fallback6950:
    set fb_tmp_758, _lex_param_1
    repr_defined $I5001, fb_tmp_758
    unless $I5001 goto if3288_else6948 
    set $P5003, fb_tmp_758["statement"]
    set $P5005, $P5003
    goto if3288_end6949
  if3288_else6948:
    null $P5004
    set $P5005, $P5004
  if3288_end6949:
    unless_null $P5005, vivi_32896951
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5005, $P5006
  vivi_32896951:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 3265
    nqp_get_sc_object $P5008, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 34
    $P5009 = $P5008."new"($P101, "qastnode" :named("rxtype"), "declarative" :named("subtype"), _lex_param_1 :named("node"))
    $P5010 = _lex_param_1."!make"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<{ }>" :subid("cuid_361_1361734139.417") :anon :lex :outer("cuid_504_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3269
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_759 
.annotate 'line', 3270
    nqp_get_sc_object $P5001, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 34
    unless_null _lex_param_1, fallback6954
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5002
  fallback6954:
    set fb_tmp_759, _lex_param_1
    repr_defined $I5001, fb_tmp_759
    unless $I5001 goto if3290_else6952 
    set $P5003, fb_tmp_759["codeblock"]
    set $P5005, $P5003
    goto if3290_end6953
  if3290_else6952:
    null $P5004
    set $P5005, $P5004
  if3290_end6953:
    unless_null $P5005, vivi_32916955
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5005, $P5006
  vivi_32916955:
    $P5007 = $P5005."ast"()
    $P5008 = $P5001."new"($P5007, "qastnode" :named("rxtype"), _lex_param_1 :named("node"))
    $P5009 = _lex_param_1."!make"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<nqpvar>" :subid("cuid_362_1361734139.417") :anon :lex :outer("cuid_504_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3274
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_760 
    .local pmc fb_tmp_761 
.annotate 'line', 3275
    nqp_get_sc_object $P5001, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 34
    nqp_get_sc_object $P5002, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 12
.annotate 'line', 3276
    nqp_get_sc_object $P5003, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 52
    $P5004 = $P5003."new"("!INTERPOLATE" :named("value"))
.annotate 'line', 3277
    unless_null _lex_param_1, fallback6958
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5005
  fallback6958:
    set fb_tmp_760, _lex_param_1
    repr_defined $I5001, fb_tmp_760
    unless $I5001 goto if3292_else6956 
    set $P5006, fb_tmp_760["var"]
    set $P5008, $P5006
    goto if3292_end6957
  if3292_else6956:
    null $P5007
    set $P5008, $P5007
  if3292_end6957:
    unless_null $P5008, vivi_32936959
    nqp_get_sc_object $P5009, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5008, $P5009
  vivi_32936959:
    $P5010 = $P5008."ast"()
.annotate 'line', 3278
    nqp_get_sc_object $P5011, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 42
    find_dynamic_lex $P5012, "$*SEQ"
    unless_null $P5012, fallback6962
    nqp_get_sc_object $P5014, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5013, $P5014
    set fb_tmp_761, $P5013
    repr_defined $I5002, fb_tmp_761
    unless $I5002 goto if3295_else6963 
    set $P5015, fb_tmp_761["$SEQ"]
    set $P5017, $P5015
    goto if3295_end6964
  if3295_else6963:
    null $P5016
    set $P5017, $P5016
  if3295_end6964:
    unless_null $P5017, vivi_32966965
    nqp_get_sc_object $P5018, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5017, $P5018
  vivi_32966965:
    unless_null $P5017, vivi_32976966
    die "Contextual $*SEQ not found"
    box $P5019, "Contextual $*SEQ not found"
    set $P5017, $P5019
  vivi_32976966:
    set $P5012, $P5017
  fallback6962:
    unless $P5012 goto if3294_else6960 
    set $I5003, 1
    goto if3294_end6961
  if3294_else6960:
    set $I5003, 0
  if3294_end6961:
    $P5020 = $P5011."new"($I5003 :named("value"))
    $P5021 = $P5002."new"($P5004, $P5010, $P5020)
    $P5022 = $P5001."new"($P5021, "subrule" :named("rxtype"), "method" :named("subtype"), _lex_param_1 :named("node"))
    $P5023 = _lex_param_1."!make"($P5022)
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<{ }>" :subid("cuid_363_1361734139.417") :anon :lex :outer("cuid_504_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3282
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_762 
.annotate 'line', 3283
    nqp_get_sc_object $P5001, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 34
    nqp_get_sc_object $P5002, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 12
.annotate 'line', 3284
    nqp_get_sc_object $P5003, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 52
    $P5004 = $P5003."new"("!INTERPOLATE_REGEX" :named("value"))
.annotate 'line', 3285
    unless_null _lex_param_1, fallback6969
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5005
  fallback6969:
    set fb_tmp_762, _lex_param_1
    repr_defined $I5001, fb_tmp_762
    unless $I5001 goto if3298_else6967 
    set $P5006, fb_tmp_762["codeblock"]
    set $P5008, $P5006
    goto if3298_end6968
  if3298_else6967:
    null $P5007
    set $P5008, $P5007
  if3298_end6968:
    unless_null $P5008, vivi_32996970
    nqp_get_sc_object $P5009, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5008, $P5009
  vivi_32996970:
    $P5010 = $P5008."ast"()
    $P5011 = $P5002."new"($P5004, $P5010)
    $P5012 = $P5001."new"($P5011, "subrule" :named("rxtype"), "method" :named("subtype"), _lex_param_1 :named("node"))
    $P5013 = _lex_param_1."!make"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<?{ }>" :subid("cuid_364_1361734139.417") :anon :lex :outer("cuid_504_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3289
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_763 
    .local pmc fb_tmp_764 
.annotate 'line', 3290
    nqp_get_sc_object $P5001, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 34
    unless_null _lex_param_1, fallback6973
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5002
  fallback6973:
    set fb_tmp_763, _lex_param_1
    repr_defined $I5001, fb_tmp_763
    unless $I5001 goto if3300_else6971 
    set $P5003, fb_tmp_763["codeblock"]
    set $P5005, $P5003
    goto if3300_end6972
  if3300_else6971:
    null $P5004
    set $P5005, $P5004
  if3300_end6972:
    unless_null $P5005, vivi_33016974
    nqp_get_sc_object $P5006, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5005, $P5006
  vivi_33016974:
    $P5007 = $P5005."ast"()
    unless_null _lex_param_1, fallback6977
    nqp_get_sc_object $P5008, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5008
  fallback6977:
    set fb_tmp_764, _lex_param_1
    repr_defined $I5003, fb_tmp_764
    unless $I5003 goto if3302_else6975 
    set $P5009, fb_tmp_764["zw"]
    set $P5011, $P5009
    goto if3302_end6976
  if3302_else6975:
    null $P5010
    set $P5011, $P5010
  if3302_end6976:
    unless_null $P5011, vivi_33036978
    nqp_get_sc_object $P5012, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5011, $P5012
  vivi_33036978:
    set $S5001, $P5011
    iseq $I5002, $S5001, "!"
    $P5013 = $P5001."new"($P5007, "zerowidth" :named("subtype"), $I5002 :named("negate"), "qastnode" :named("rxtype"), _lex_param_1 :named("node"))
    $P5014 = _lex_param_1."!make"($P5013)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<var>" :subid("cuid_365_1361734139.417") :anon :lex :outer("cuid_504_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3295
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_765 
.annotate 'line', 3296
    nqp_get_sc_object $P5001, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 34
    nqp_get_sc_object $P5002, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 12
.annotate 'line', 3297
    nqp_get_sc_object $P5003, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 52
    $P5004 = $P5003."new"("!INTERPOLATE_REGEX" :named("value"))
.annotate 'line', 3298
    unless_null _lex_param_1, fallback6981
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5005
  fallback6981:
    set fb_tmp_765, _lex_param_1
    repr_defined $I5001, fb_tmp_765
    unless $I5001 goto if3304_else6979 
    set $P5006, fb_tmp_765["var"]
    set $P5008, $P5006
    goto if3304_end6980
  if3304_else6979:
    null $P5007
    set $P5008, $P5007
  if3304_end6980:
    unless_null $P5008, vivi_33056982
    nqp_get_sc_object $P5009, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5008, $P5009
  vivi_33056982:
    $P5010 = $P5008."ast"()
    $P5011 = $P5002."new"($P5004, $P5010)
    $P5012 = $P5001."new"($P5011, "subrule" :named("rxtype"), "method" :named("subtype"), _lex_param_1 :named("node"))
    $P5013 = _lex_param_1."!make"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "codeblock" :subid("cuid_366_1361734139.417") :anon :lex :outer("cuid_504_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3302
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$block", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_766 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
.annotate 'line', 3303
    unless_null _lex_param_1, fallback6985
    nqp_get_sc_object $P5003, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5003
  fallback6985:
    set fb_tmp_766, _lex_param_1
    repr_defined $I5001, fb_tmp_766
    unless $I5001 goto if3306_else6983 
    set $P5004, fb_tmp_766["block"]
    set $P5006, $P5004
    goto if3306_end6984
  if3306_else6983:
    null $P5005
    set $P5006, $P5005
  if3306_end6984:
    unless_null $P5006, vivi_33076986
    nqp_get_sc_object $P5007, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5006, $P5007
  vivi_33076986:
    $P5008 = $P5006."ast"()
    set $P101, $P5008
.annotate 'line', 3304
    $P101."blocktype"("immediate")
.annotate 'line', 3306
    nqp_get_sc_object $P5009, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 93
.annotate 'line', 3307
    nqp_get_sc_object $P5010, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 3309
    nqp_get_sc_object $P5011, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5012 = $P5011."new"("$/" :named("name"), "contextual" :named("scope"))
.annotate 'line', 3310
    nqp_get_sc_object $P5013, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 82
.annotate 'line', 3311
    nqp_get_sc_object $P5014, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 71
    $P5015 = $P5014."new"(utf8:"$\x{a2}" :named("name"), "contextual" :named("scope"))
    $P5016 = $P5013."new"($P5015, "MATCH" :named("name"), "callmethod" :named("op"))
    $P5017 = $P5010."new"($P5012, $P5016, "bind" :named("op"))
    $P5018 = $P5009."new"($P5017, $P101)
    set $P102, $P5018
.annotate 'line', 3318
    $P5019 = _lex_param_1."!make"($P102)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<name>" :subid("cuid_367_1361734139.417") :anon :lex :outer("cuid_504_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3321
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5101 = 'cuid_505_1361734139.417' 
    capture_lex $P5101 
    .const 'Sub' $P5101 = 'cuid_506_1361734139.417' 
    capture_lex $P5101 
    .lex "$name", $P101 
    .lex "$qast", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_767 
    .local pmc fb_tmp_768 
    .local pmc fb_tmp_769 
    .local pmc fb_tmp_770 
    .local pmc fb_tmp_773 
    .local pmc fb_tmp_774 
    .local pmc fb_tmp_775 
    .local pmc fb_tmp_777 
    .local pmc fb_tmp_778 
    .local pmc fb_tmp_779 
    .local pmc fb_tmp_780 
    .local pmc fb_tmp_781 
    .local pmc fb_tmp_782 
    .local pmc fb_tmp_783 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P102, $P5002
    unless_null _lex_param_1, fallback6989
    nqp_get_sc_object $P5003, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5003
  fallback6989:
    set fb_tmp_767, _lex_param_1
    repr_defined $I5001, fb_tmp_767
    unless $I5001 goto if3308_else6987 
    set $P5004, fb_tmp_767["longname"]
    set $P5006, $P5004
    goto if3308_end6988
  if3308_else6987:
    null $P5005
    set $P5006, $P5005
  if3308_end6988:
    unless_null $P5006, vivi_33096990
    nqp_get_sc_object $P5007, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5006, $P5007
  vivi_33096990:
    set $S5001, $P5006
    box $P5008, $S5001
    set $P101, $P5008
    unless_null _lex_param_1, fallback6995
    nqp_get_sc_object $P5009, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5009
  fallback6995:
    set fb_tmp_768, _lex_param_1
    repr_defined $I5002, fb_tmp_768
    unless $I5002 goto if3311_else6993 
    set $P5010, fb_tmp_768["assertion"]
    set $P5012, $P5010
    goto if3311_end6994
  if3311_else6993:
    null $P5011
    set $P5012, $P5011
  if3311_end6994:
    unless_null $P5012, vivi_33126996
    nqp_get_sc_object $P5013, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5012, $P5013
  vivi_33126996:
    unless $P5012 goto if3310_else6991 
.annotate 'line', 3324
.annotate 'line', 3325
    unless_null _lex_param_1, fallback7001
    nqp_get_sc_object $P5014, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5014
  fallback7001:
    set fb_tmp_770, _lex_param_1
    repr_defined $I5004, fb_tmp_770
    unless $I5004 goto if3314_else6999 
    set $P5015, fb_tmp_770["assertion"]
    set $P5017, $P5015
    goto if3314_end7000
  if3314_else6999:
    null $P5016
    set $P5017, $P5016
  if3314_end7000:
    unless_null $P5017, vivi_33157002
    nqp_get_sc_object $P5018, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5017, $P5018
  vivi_33157002:
    set fb_tmp_769, $P5017
    repr_defined $I5003, fb_tmp_769
    unless $I5003 goto if3313_else6997 
    set $P5019, fb_tmp_769[0]
    set $P5021, $P5019
    goto if3313_end6998
  if3313_else6997:
    null $P5020
    set $P5021, $P5020
  if3313_end6998:
    unless_null $P5021, vivi_33167003
    nqp_get_sc_object $P5022, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5021, $P5022
  vivi_33167003:
    $P5023 = $P5021."ast"()
    set $P102, $P5023
.annotate 'line', 3326
    nqp_decontainerize $P5024, _lex_param_0
    $P5025 = $P5024."subrule_alias"($P102, $P101)
    goto if3310_end6992
  if3310_else6991:
    set $S5002, $P101
    iseq $I5005, $S5002, "sym"
    unless $I5005 goto if3317_else7004 
    .const 'Sub' $P5026 = 'cuid_505_1361734139.417' 
    capture_lex $P5026
    $P5027 = $P5026()
    set $P5099, $P5027
    goto if3317_end7005
  if3317_else7004:
.annotate 'line', 3337
.annotate 'line', 3338
    nqp_get_sc_object $P5028, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 34
.annotate 'line', 3340
    nqp_get_sc_object $P5029, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 12
    nqp_get_sc_object $P5030, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 52
    $P5031 = $P5030."new"($P101 :named("value"))
    $P5032 = $P5029."new"($P5031)
    $P5033 = $P5028."new"($P5032, "subrule" :named("rxtype"), "capture" :named("subtype"), _lex_param_1 :named("node"), $P101 :named("name"))
    set $P102, $P5033
    unless_null _lex_param_1, fallback7020
    nqp_get_sc_object $P5034, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5034
  fallback7020:
    set fb_tmp_773, _lex_param_1
    repr_defined $I5006, fb_tmp_773
    unless $I5006 goto if3325_else7018 
    set $P5035, fb_tmp_773["arglist"]
    set $P5037, $P5035
    goto if3325_end7019
  if3325_else7018:
    null $P5036
    set $P5037, $P5036
  if3325_end7019:
    unless_null $P5037, vivi_33267021
    nqp_get_sc_object $P5038, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5037, $P5038
  vivi_33267021:
    unless $P5037 goto if3324_else7016 
.annotate 'line', 3341
.annotate 'line', 3342
    unless_null _lex_param_1, fallback7026
    nqp_get_sc_object $P5042, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5042
  fallback7026:
    set fb_tmp_775, _lex_param_1
    repr_defined $I5008, fb_tmp_775
    unless $I5008 goto if3328_else7024 
    set $P5043, fb_tmp_775["arglist"]
    set $P5045, $P5043
    goto if3328_end7025
  if3328_else7024:
    null $P5044
    set $P5045, $P5044
  if3328_end7025:
    unless_null $P5045, vivi_33297027
    nqp_get_sc_object $P5046, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5045, $P5046
  vivi_33297027:
    set fb_tmp_774, $P5045
    repr_defined $I5007, fb_tmp_774
    unless $I5007 goto if3327_else7022 
    set $P5047, fb_tmp_774[0]
    set $P5049, $P5047
    goto if3327_end7023
  if3327_else7022:
    null $P5048
    set $P5049, $P5048
  if3327_end7023:
    unless_null $P5049, vivi_33307028
    nqp_get_sc_object $P5050, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5049, $P5050
  vivi_33307028:
    $P5051 = $P5049."ast"()
    $P5052 = $P5051."list"()
    set $P5039, $P5052
    iter $P5041, $P5052
  for_next7032:
    unless $P5041, for_done7034
    shift $P5054, $P5041
  for_redo7033:
    .const 'Sub' $P5053 = 'cuid_506_1361734139.417' 
    capture_lex $P5053
    $P5039 = $P5053($P5054)
    goto for_next7032
  for_done7034:
    set $P5098, $P5039
    goto if3324_end7017
  if3324_else7016:
    unless_null _lex_param_1, fallback7039
    nqp_get_sc_object $P5055, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5055
  fallback7039:
    set fb_tmp_777, _lex_param_1
    repr_defined $I5009, fb_tmp_777
    unless $I5009 goto if3334_else7037 
    set $P5056, fb_tmp_777["nibbler"]
    set $P5058, $P5056
    goto if3334_end7038
  if3334_else7037:
    null $P5057
    set $P5058, $P5057
  if3334_end7038:
    unless_null $P5058, vivi_33357040
    nqp_get_sc_object $P5059, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5058, $P5059
  vivi_33357040:
    set $P5097, $P5058
    unless $P5058 goto if3333_end7036 
.annotate 'line', 3344
    set $S5003, $P101
    iseq $I5010, $S5003, "after"
    unless $I5010 goto if3336_else7041 
.annotate 'line', 3346
    set fb_tmp_778, $P102
    repr_defined $I5011, fb_tmp_778
    unless $I5011 goto if3337_else7043 
    set $P5060, fb_tmp_778[0]
    set $P5062, $P5060
    goto if3337_end7044
  if3337_else7043:
    null $P5061
    set $P5062, $P5061
  if3337_end7044:
    unless_null $P5062, vivi_33387045
    nqp_get_sc_object $P5063, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5062, $P5063
  vivi_33387045:
    nqp_decontainerize $P5064, _lex_param_0
    nqp_decontainerize $P5065, _lex_param_0
    unless_null _lex_param_1, fallback7050
    nqp_get_sc_object $P5066, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5066
  fallback7050:
    set fb_tmp_780, _lex_param_1
    repr_defined $I5013, fb_tmp_780
    unless $I5013 goto if3340_else7048 
    set $P5067, fb_tmp_780["nibbler"]
    set $P5069, $P5067
    goto if3340_end7049
  if3340_else7048:
    null $P5068
    set $P5069, $P5068
  if3340_end7049:
    unless_null $P5069, vivi_33417051
    nqp_get_sc_object $P5070, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5069, $P5070
  vivi_33417051:
    set fb_tmp_779, $P5069
    repr_defined $I5012, fb_tmp_779
    unless $I5012 goto if3339_else7046 
    set $P5071, fb_tmp_779[0]
    set $P5073, $P5071
    goto if3339_end7047
  if3339_else7046:
    null $P5072
    set $P5073, $P5072
  if3339_end7047:
    unless_null $P5073, vivi_33427052
    nqp_get_sc_object $P5074, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5073, $P5074
  vivi_33427052:
    $P5075 = $P5073."ast"()
    $P5076 = $P5065."flip_ast"($P5075)
    $P5077 = $P5064."qbuildsub"($P5076, 1 :named("anon"), 1 :named("addself"))
    $P5078 = $P5062."push"($P5077)
    set $P5096, $P5078
    goto if3336_end7042
  if3336_else7041:
.annotate 'line', 3347
    set fb_tmp_781, $P102
    repr_defined $I5014, fb_tmp_781
    unless $I5014 goto if3343_else7053 
    set $P5079, fb_tmp_781[0]
    set $P5081, $P5079
    goto if3343_end7054
  if3343_else7053:
    null $P5080
    set $P5081, $P5080
  if3343_end7054:
    unless_null $P5081, vivi_33447055
    nqp_get_sc_object $P5082, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5081, $P5082
  vivi_33447055:
    nqp_decontainerize $P5083, _lex_param_0
    unless_null _lex_param_1, fallback7060
    nqp_get_sc_object $P5084, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5084
  fallback7060:
    set fb_tmp_783, _lex_param_1
    repr_defined $I5016, fb_tmp_783
    unless $I5016 goto if3346_else7058 
    set $P5085, fb_tmp_783["nibbler"]
    set $P5087, $P5085
    goto if3346_end7059
  if3346_else7058:
    null $P5086
    set $P5087, $P5086
  if3346_end7059:
    unless_null $P5087, vivi_33477061
    nqp_get_sc_object $P5088, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5087, $P5088
  vivi_33477061:
    set fb_tmp_782, $P5087
    repr_defined $I5015, fb_tmp_782
    unless $I5015 goto if3345_else7056 
    set $P5089, fb_tmp_782[0]
    set $P5091, $P5089
    goto if3345_end7057
  if3345_else7056:
    null $P5090
    set $P5091, $P5090
  if3345_end7057:
    unless_null $P5091, vivi_33487062
    nqp_get_sc_object $P5092, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5091, $P5092
  vivi_33487062:
    $P5093 = $P5091."ast"()
    $P5094 = $P5083."qbuildsub"($P5093, 1 :named("anon"), 1 :named("addself"))
    $P5095 = $P5081."push"($P5094)
    set $P5096, $P5095
  if3336_end7042:
    set $P5097, $P5096
  if3333_end7036:
    set $P5098, $P5097
  if3324_end7017:
    set $P5099, $P5098
  if3317_end7005:
  if3310_end6992:
.annotate 'line', 3350
    $P5100 = _lex_param_1."!make"($P102)
    .return ($P5100) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_505_1361734139.417") :anon :lex :outer("cuid_367_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3328
    .lex "$fullrxname", $S101 
    .lex "$loc", $I101 
    .lex "$rxname", $S102 
    .local pmc fb_tmp_771 
    .local pmc fb_tmp_772 
    .local pmc pkg_viv_tmp_48 
    set $S101, ""
    set $I101, 0
    set $S102, ""
    find_dynamic_lex $P5001, "%*RX"
    unless_null $P5001, fallback7008
    nqp_get_sc_object $P5003, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_48, $P5002
    set fb_tmp_772, pkg_viv_tmp_48
    repr_defined $I5002, fb_tmp_772
    unless $I5002 goto if3319_else7009 
    set $P5004, fb_tmp_772["%RX"]
    set $P5006, $P5004
    goto if3319_end7010
  if3319_else7009:
    null $P5005
    set $P5006, $P5005
  if3319_end7010:
    unless_null $P5006, vivi_33207011
    new $P5007, 'Hash'
    set pkg_viv_tmp_48["%RX"], $P5007
    set $P5006, $P5007
  vivi_33207011:
    unless_null $P5006, vivi_33217012
    die "Contextual %*RX not found"
    box $P5008, "Contextual %*RX not found"
    set $P5006, $P5008
  vivi_33217012:
    set $P5001, $P5006
  fallback7008:
    set fb_tmp_771, $P5001
    repr_defined $I5001, fb_tmp_771
    unless $I5001 goto if3318_else7006 
    set $P5009, fb_tmp_771["name"]
    set $P5011, $P5009
    goto if3318_end7007
  if3318_else7006:
    null $P5010
    set $P5011, $P5010
  if3318_end7007:
    unless_null $P5011, vivi_33227013
    nqp_get_sc_object $P5012, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5011, $P5012
  vivi_33227013:
    set $S5001, $P5011
    set $S101, $S5001
    index $I5003, $S101, ":sym<", 0
    set $I101, $I5003
    set $N5001, $I101
    set $N5002, 0
    islt $I5004, $N5001, $N5002
    unless $I5004 goto if3323_end7015 
    index $I5005, $S101, utf8:":sym\x{ab}", 0
    set $I101, $I5005
  if3323_end7015:
    set $N5004, $I101
    set $N5005, 5
    add $N5003, $N5004, $N5005
    set $I5006, $N5003
    length $I5007, $S101
    set $N5008, $I5007
    set $N5009, $I101
    sub $N5007, $N5008, $N5009
    set $N5010, 6
    sub $N5006, $N5007, $N5010
    set $I5008, $N5006
    substr $S5002, $S101, $I5006, $I5008
    set $S102, $S5002
.annotate 'line', 3334
    nqp_get_sc_object $P5013, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 34
    find_lex $P5014, "$/"
.annotate 'line', 3335
    nqp_get_sc_object $P5015, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609", 34
    find_lex $P5016, "$/"
    $P5017 = $P5015."new"($S102, "literal" :named("rxtype"), $P5016 :named("node"))
    $P5018 = $P5013."new"($P5017, "sym" :named("name"), "subcapture" :named("rxtype"), $P5014 :named("node"))
    store_lex "$qast", $P5018
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_506_1361734139.417") :anon :lex :outer("cuid_367_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3342
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_776 
    find_lex $P5001, "$qast"
    set fb_tmp_776, $P5001
    repr_defined $I5001, fb_tmp_776
    unless $I5001 goto if3331_else7029 
    set $P5002, fb_tmp_776[0]
    set $P5004, $P5002
    goto if3331_end7030
  if3331_else7029:
    null $P5003
    set $P5004, $P5003
  if3331_end7030:
    unless_null $P5004, vivi_33327031
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_33327031:
    $P5006 = $P5004."push"(_lex_param_0)
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "arg" :subid("cuid_368_1361734139.417") :anon :lex :outer("cuid_504_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3353
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_784 
.annotate 'line', 3354
    unless_null _lex_param_1, fallback7065
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set _lex_param_1, $P5001
  fallback7065:
    set fb_tmp_784, _lex_param_1
    repr_defined $I5001, fb_tmp_784
    unless $I5001 goto if3349_else7063 
    set $P5002, fb_tmp_784["quote_EXPR"]
    set $P5004, $P5002
    goto if3349_end7064
  if3349_else7063:
    null $P5003
    set $P5004, $P5003
  if3349_end7064:
    unless_null $P5004, vivi_33507066
    nqp_get_sc_object $P5005, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5004, $P5005
  vivi_33507066:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "create_regex_code_object" :subid("cuid_369_1361734139.417") :anon :lex :outer("cuid_504_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3357
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$code", $P101 
    .lex "self", _lex_param_0 
    .lex "$block", _lex_param_1 
    .local pmc fb_tmp_785 
    .local pmc fb_tmp_786 
    .local pmc pkg_viv_tmp_49 
    .local pmc fb_tmp_787 
    .local pmc fb_tmp_788 
    .local pmc pkg_viv_tmp_50 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P101, $P5001
.annotate 'line', 3358
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback7067
    nqp_get_sc_object $P5004, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5003, $P5004
    set fb_tmp_785, $P5003
    repr_defined $I5001, fb_tmp_785
    unless $I5001 goto if3351_else7068 
    set $P5005, fb_tmp_785["$W"]
    set $P5007, $P5005
    goto if3351_end7069
  if3351_else7068:
    null $P5006
    set $P5007, $P5006
  if3351_end7069:
    unless_null $P5007, vivi_33527070
    nqp_get_sc_object $P5008, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5007, $P5008
  vivi_33527070:
    unless_null $P5007, vivi_33537071
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_33537071:
    set $P5002, $P5007
  fallback7067:
    $P5010 = $P5002."create_code"(_lex_param_1, "", 0, "NQPRegex" :named("code_type_name"))
    set $P101, $P5010
    find_dynamic_lex $P5011, "%*RX"
    unless_null $P5011, fallback7074
    nqp_get_sc_object $P5013, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5012, $P5013
    set pkg_viv_tmp_49, $P5012
    set fb_tmp_786, pkg_viv_tmp_49
    repr_defined $I5003, fb_tmp_786
    unless $I5003 goto if3355_else7075 
    set $P5014, fb_tmp_786["%RX"]
    set $P5016, $P5014
    goto if3355_end7076
  if3355_else7075:
    null $P5015
    set $P5016, $P5015
  if3355_end7076:
    unless_null $P5016, vivi_33567077
    new $P5017, 'Hash'
    set pkg_viv_tmp_49["%RX"], $P5017
    set $P5016, $P5017
  vivi_33567077:
    unless_null $P5016, vivi_33577078
    die "Contextual %*RX not found"
    box $P5018, "Contextual %*RX not found"
    set $P5016, $P5018
  vivi_33577078:
    set $P5011, $P5016
  fallback7074:
    exists $I5002, $P5011["code"]
    unless $I5002 goto if3354_end7073 
.annotate 'line', 3359
.annotate 'line', 3360
    find_dynamic_lex $P5019, "%*RX"
    unless_null $P5019, fallback7081
    nqp_get_sc_object $P5021, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    get_who $P5020, $P5021
    set pkg_viv_tmp_50, $P5020
    set fb_tmp_788, pkg_viv_tmp_50
    repr_defined $I5005, fb_tmp_788
    unless $I5005 goto if3359_else7082 
    set $P5022, fb_tmp_788["%RX"]
    set $P5024, $P5022
    goto if3359_end7083
  if3359_else7082:
    null $P5023
    set $P5024, $P5023
  if3359_end7083:
    unless_null $P5024, vivi_33607084
    new $P5025, 'Hash'
    set pkg_viv_tmp_50["%RX"], $P5025
    set $P5024, $P5025
  vivi_33607084:
    unless_null $P5024, vivi_33617085
    die "Contextual %*RX not found"
    box $P5026, "Contextual %*RX not found"
    set $P5024, $P5026
  vivi_33617085:
    set $P5019, $P5024
  fallback7081:
    set fb_tmp_787, $P5019
    repr_defined $I5004, fb_tmp_787
    unless $I5004 goto if3358_else7079 
    set $P5027, fb_tmp_787["code"]
    set $P5029, $P5027
    goto if3358_end7080
  if3358_else7079:
    null $P5028
    set $P5029, $P5028
  if3358_end7080:
    unless_null $P5029, vivi_33627086
    nqp_get_sc_object $P5030, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    set $P5029, $P5030
  vivi_33627086:
    $P5031 = $P5029."ADD_NESTED_CODE"($P101)
  if3354_end7073:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "store_regex_nfa" :subid("cuid_370_1361734139.417") :anon :lex :outer("cuid_504_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3365
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$code_obj", _lex_param_1 
    .lex "$block", _lex_param_2 
    .lex "$nfa", _lex_param_3 
.annotate 'line', 3366
    $P5001 = _lex_param_3."save"()
    $P5002 = _lex_param_1."SET_NFA"($P5001)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "store_regex_caps" :subid("cuid_371_1361734139.417") :anon :lex :outer("cuid_504_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3369
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$code_obj", _lex_param_1 
    .lex "$block", _lex_param_2 
    .lex "%caps", _lex_param_3 
.annotate 'line', 3370
    $P5001 = _lex_param_1."SET_CAPS"(_lex_param_3)
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "store_regex_alt_nfa" :subid("cuid_372_1361734139.417") :anon :lex :outer("cuid_504_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3373
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 
    .const 'Sub' $P5008 = 'cuid_507_1361734139.417' 
    capture_lex $P5008 
    .lex "@saved", $P101 
    .lex "self", _lex_param_0 
    .lex "$code_obj", _lex_param_1 
    .lex "$block", _lex_param_2 
    .lex "$key", _lex_param_3 
    .lex "@alternatives", _lex_param_4 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    set $P5002, _lex_param_4
    iter $P5004, _lex_param_4
  for_next7087:
    unless $P5004, for_done7089
    shift $P5006, $P5004
  for_redo7088:
    .const 'Sub' $P5005 = 'cuid_507_1361734139.417' 
    capture_lex $P5005
    $P5002 = $P5005($P5006)
    goto for_next7087
  for_done7089:
.annotate 'line', 3378
    $P5007 = _lex_param_1."SET_ALT_NFA"(_lex_param_3, $P101)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_507_1361734139.417") :anon :lex :outer("cuid_372_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3375
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 3376
    find_lex $P5001, "@saved"
    $P5002 = _lex_param_0."save"(1 :named("non_empty"))
    $P5003 = $P5001."push"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_508_1361734139.417") :anon :lex :outer("cuid_374_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3383
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    nqp_get_sc_object $P5001, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676", 25
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_510_1361734139.417") :load :init
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .const 'Sub' $P5001 = 'cuid_509_1361734139.417' 
    capture_lex $P5001 
    .local pmc cur_sc 
    .local pmc conflicts 
    nqp_dynop_setup 
    nqp_bigint_setup 
    getinterp $P5001
    get_class $P5002, "LexPad"
    get_class $P5003, "NQPLexPad"
    $P5004 = $P5001."hll_map"($P5002, $P5003)
    load_bytecode "ModuleLoader.pbc"
    .const 'Sub' $P5001 = "cuid_374_1361734139.417" 
    get_hll_global $P5002, "ModuleLoader"
    $P5003 = $P5002."load_setting"("NQPCORE")
    $P5004 = $P5001."set_outer_ctx"($P5003)
    load_bytecode "ModuleLoader.pbc"
    get_hll_global $P5001, "ModuleLoader"
    $P5001."load_module"("NQPP6QRegex")
    load_bytecode "ModuleLoader.pbc"
    get_hll_global $P5001, "ModuleLoader"
    $P5001."load_module"("NQPP6QRegex")
    load_bytecode "ModuleLoader.pbc"
    get_hll_global $P5001, "ModuleLoader"
    $P5001."load_module"("QAST")
    nqp_create_sc $P5001, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442"
    set cur_sc, $P5001
    $P5002 = cur_sc."set_description"("src\\stage2\\gen\\NQP.pm")
    new $P5003, 'ResizablePMCArray'
    set conflicts, $P5003
    new $P5004, 'ResizableStringArray'
    null $S5001
    push $P5004, $S5001
    push $P5004, "P6opaque"
    push $P5004, "QAST"
    push $P5004, "QRegex"
    push $P5004, "NQPCursorRole"
    push $P5004, "5C3E4C1FCD8659050D16E0C0EEB21CECC0CE7086-1361734112.314"
    push $P5004, "src\\stage2\\QRegex.nqp"
    push $P5004, "NQPMatch"
    push $P5004, "NQPCursor"
    push $P5004, "NQPRegexMethod"
    push $P5004, "NQPRegex"
    push $P5004, "HLL"
    push $P5004, "PIRT"
    push $P5004, "NQP"
    push $P5004, "DEFAULT"
    push $P5004, "CREATE"
    push $P5004, "1257622A8BE01376CD78513B390E6A7986C55701-1361734108.676"
    push $P5004, "src\\stage2\\NQPCORE.setting"
    push $P5004, "bless"
    push $P5004, "BUILDALL"
    push $P5004, "new"
    push $P5004, "Str"
    push $P5004, "Numeric"
    push $P5004, "Int"
    push $P5004, "defined"
    push $P5004, "ACCEPTS"
    push $P5004, "isa"
    push $P5004, "__dump"
    push $P5004, "BUILD"
    push $P5004, "slot_for_object"
    push $P5004, "F31909CE26533F17A86F2092D09E004F0E94FA0C-1361734116.632"
    push $P5004, "src\\stage2\\gen\\NQPHLL.pm"
    push $P5004, "add_object"
    push $P5004, "add_root_code_ref"
    push $P5004, "update_root_code_ref"
    push $P5004, "is_precompilation_mode"
    push $P5004, "add_load_dependency_task"
    push $P5004, "add_fixup_task"
    push $P5004, "sc"
    push $P5004, "handle"
    push $P5004, "code_ref_blocks"
    push $P5004, "load_dependency_tasks"
    push $P5004, "fixup_tasks"
    push $P5004, "push_lexpad"
    push $P5004, "pop_lexpad"
    push $P5004, "cur_lexpad"
    push $P5004, "get_legacy_block_list"
    push $P5004, "load_setting"
    push $P5004, "load_module"
    push $P5004, "import"
    push $P5004, "install_package_symbol"
    push $P5004, "install_lexical_symbol"
    push $P5004, "install_package_routine"
    push $P5004, "create_code"
    push $P5004, "pkg_create_mo"
    push $P5004, "pkg_add_attribute"
    push $P5004, "pkg_add_method"
    push $P5004, "set_routine_signature"
    push $P5004, "pkg_set_body_block"
    push $P5004, "pkg_add_parent_or_role"
    push $P5004, "pkg_add_parrot_vtable_handler_mapping"
    push $P5004, "pkg_compose"
    push $P5004, "run_begin_block"
    push $P5004, "libs"
    push $P5004, "add_initializations"
    push $P5004, "cleanup"
    push $P5004, "is_lexical"
    push $P5004, "is_package"
    push $P5004, "is_scope"
    push $P5004, "known_sym"
    push $P5004, "find_sym"
    push $P5004, "$!sc"
    push $P5004, "$!handle"
    push $P5004, "$!precomp_mode"
    push $P5004, "$!num_code_refs"
    push $P5004, "$!code_ref_blocks"
    push $P5004, "@!load_dependency_tasks"
    push $P5004, "@!fixup_tasks"
    push $P5004, "%!addr_to_slot"
    push $P5004, "@!BLOCKS"
    push $P5004, "%!code_objects_to_fix_up"
    push $P5004, "%!code_object_types"
    push $P5004, "%!code_object_fixup_list"
    push $P5004, "%!code_stub_sc_idx"
    push $P5004, "@!clearup_tasks"
    push $P5004, "MATCH"
    push $P5004, "Bool"
    push $P5004, "parse"
    push $P5004, "!INTERPOLATE"
    push $P5004, "!INTERPOLATE_REGEX"
    push $P5004, "orig"
    push $P5004, "target"
    push $P5004, "from"
    push $P5004, "pos"
    push $P5004, "CAPHASH"
    push $P5004, "!cursor_init"
    push $P5004, "!cursor_start_all"
    push $P5004, "!cursor_start_cur"
    push $P5004, "!cursor_start_subcapture"
    push $P5004, "!cursor_capture"
    push $P5004, "!cursor_push_cstack"
    push $P5004, "!cursor_pass"
    push $P5004, "!cursor_fail"
    push $P5004, "!cursor_pos"
    push $P5004, "!cursor_next"
    push $P5004, "!cursor_more"
    push $P5004, "!reduce"
    push $P5004, "!reduce_with_match"
    push $P5004, "!shared"
    push $P5004, "!protoregex"
    push $P5004, "!protoregex_nfa"
    push $P5004, "!protoregex_table"
    push $P5004, "!alt"
    push $P5004, "!alt_nfa"
    push $P5004, "!precompute_nfas"
    push $P5004, "!dba"
    push $P5004, "!highwater"
    push $P5004, "!highexpect"
    push $P5004, "!fresh_highexpect"
    push $P5004, "!set_highexpect"
    push $P5004, "!clear_highwater"
    push $P5004, "!BACKREF"
    push $P5004, "!LITERAL"
    push $P5004, "at"
    push $P5004, "before"
    push $P5004, "after"
    push $P5004, "ws"
    push $P5004, "ww"
    push $P5004, "wb"
    push $P5004, "ident"
    push $P5004, "alpha"
    push $P5004, "alnum"
    push $P5004, "upper"
    push $P5004, "lower"
    push $P5004, "digit"
    push $P5004, "xdigit"
    push $P5004, "space"
    push $P5004, "blank"
    push $P5004, "cntrl"
    push $P5004, "punct"
    push $P5004, "FAILGOAL"
    push $P5004, "throw_unrecog_backslash_seq"
    push $P5004, "termish"
    push $P5004, "term"
    push $P5004, "infix"
    push $P5004, "prefix"
    push $P5004, "postfix"
    push $P5004, "circumfix"
    push $P5004, "postcircumfix"
    push $P5004, "term:sym<circumfix>"
    push $P5004, "infixish"
    push $P5004, "prefixish"
    push $P5004, "postfixish"
    push $P5004, "nullterm"
    push $P5004, "nullterm_alt"
    push $P5004, "nulltermish"
    push $P5004, "quote_delimited"
    push $P5004, "quote_atom"
    push $P5004, "decint"
    push $P5004, "decints"
    push $P5004, "hexint"
    push $P5004, "hexints"
    push $P5004, "octint"
    push $P5004, "octints"
    push $P5004, "binint"
    push $P5004, "binints"
    push $P5004, "integer"
    push $P5004, "dec_number"
    push $P5004, "escale"
    push $P5004, "quote_escape"
    push $P5004, "quote_escape:sym<backslash>"
    push $P5004, "quote_escape:sym<stopper>"
    push $P5004, "quote_escape:sym<bs>"
    push $P5004, "quote_escape:sym<nl>"
    push $P5004, "quote_escape:sym<cr>"
    push $P5004, "quote_escape:sym<tab>"
    push $P5004, "quote_escape:sym<ff>"
    push $P5004, "quote_escape:sym<esc>"
    push $P5004, "quote_escape:sym<hex>"
    push $P5004, "quote_escape:sym<oct>"
    push $P5004, "quote_escape:sym<chr>"
    push $P5004, "quote_escape:sym<0>"
    push $P5004, "quote_escape:sym<misc>"
    push $P5004, "charname"
    push $P5004, "charnames"
    push $P5004, "charspec"
    push $P5004, "O"
    push $P5004, "panic"
    push $P5004, "peek_delimiters"
    push $P5004, "quote_EXPR"
    push $P5004, "quotemod_check"
    push $P5004, "starter"
    push $P5004, "stopper"
    push $P5004, "split_words"
    push $P5004, "EXPR"
    push $P5004, "EXPR_reduce"
    push $P5004, "EXPR_nonassoc"
    push $P5004, "ternary"
    push $P5004, "MARKER"
    push $P5004, "MARKED"
    push $P5004, "LANG"
    push $P5004, "TOP"
    push $P5004, "identifier"
    push $P5004, "name"
    push $P5004, "deflongname"
    push $P5004, "ENDSTMT"
    push $P5004, "unv"
    push $P5004, "pod_comment"
    push $P5004, "comp_unit"
    push $P5004, "statementlist"
    push $P5004, "statement"
    push $P5004, "eat_terminator"
    push $P5004, "xblock"
    push $P5004, "pblock"
    push $P5004, "lambda"
    push $P5004, "block"
    push $P5004, "blockoid"
    push $P5004, "newpad"
    push $P5004, "outerctx"
    push $P5004, "finishpad"
    push $P5004, "you_are_here"
    push $P5004, "terminator"
    push $P5004, "terminator:sym<;>"
    push $P5004, "terminator:sym<}>"
    push $P5004, "statement_control"
    push $P5004, "statement_control:sym<use>"
    push $P5004, "statement_control:sym<if>"
    push $P5004, "statement_control:sym<unless>"
    push $P5004, "statement_control:sym<while>"
    push $P5004, "statement_control:sym<repeat>"
    push $P5004, "statement_control:sym<for>"
    push $P5004, "statement_control:sym<CATCH>"
    push $P5004, "statement_control:sym<CONTROL>"
    push $P5004, "statement_prefix"
    push $P5004, "statement_prefix:sym<BEGIN>"
    push $P5004, "statement_prefix:sym<INIT>"
    push $P5004, "statement_prefix:sym<try>"
    push $P5004, "blorst"
    push $P5004, "statement_mod_cond"
    push $P5004, "statement_mod_cond:sym<if>"
    push $P5004, "statement_mod_cond:sym<unless>"
    push $P5004, "statement_mod_loop"
    push $P5004, "statement_mod_loop:sym<while>"
    push $P5004, "statement_mod_loop:sym<until>"
    push $P5004, "statement_mod_loop:sym<for>"
    push $P5004, "term:sym<fatarrow>"
    push $P5004, "term:sym<colonpair>"
    push $P5004, "term:sym<variable>"
    push $P5004, "term:sym<package_declarator>"
    push $P5004, "term:sym<scope_declarator>"
    push $P5004, "term:sym<routine_declarator>"
    push $P5004, "term:sym<multi_declarator>"
    push $P5004, "term:sym<regex_declarator>"
    push $P5004, "term:sym<statement_prefix>"
    push $P5004, "term:sym<lambda>"
    push $P5004, "fatarrow"
    push $P5004, "colonpair"
    push $P5004, "variable"
    push $P5004, "sigil"
    push $P5004, "twigil"
    push $P5004, "package_declarator"
    push $P5004, "package_declarator:sym<module>"
    push $P5004, "package_declarator:sym<knowhow>"
    push $P5004, "package_declarator:sym<class>"
    push $P5004, "package_declarator:sym<grammar>"
    push $P5004, "package_declarator:sym<role>"
    push $P5004, "package_declarator:sym<native>"
    push $P5004, "package_declarator:sym<stub>"
    push $P5004, "package_def"
    push $P5004, "role_params"
    push $P5004, "scope_declarator"
    push $P5004, "scope_declarator:sym<my>"
    push $P5004, "scope_declarator:sym<our>"
    push $P5004, "scope_declarator:sym<has>"
    push $P5004, "scoped"
    push $P5004, "typename"
    push $P5004, "declarator"
    push $P5004, "variable_declarator"
    push $P5004, "routine_declarator"
    push $P5004, "routine_declarator:sym<sub>"
    push $P5004, "routine_declarator:sym<method>"
    push $P5004, "routine_def"
    push $P5004, "method_def"
    push $P5004, "onlystar"
    push $P5004, "multi_declarator"
    push $P5004, "multi_declarator:sym<multi>"
    push $P5004, "multi_declarator:sym<proto>"
    push $P5004, "multi_declarator:sym<null>"
    push $P5004, "signature"
    push $P5004, "parameter"
    push $P5004, "param_var"
    push $P5004, "named_param"
    push $P5004, "default_value"
    push $P5004, "trait"
    push $P5004, "trait_mod"
    push $P5004, "trait_mod:sym<is>"
    push $P5004, "regex_declarator"
    push $P5004, "dotty"
    push $P5004, "term:sym<self>"
    push $P5004, "term:sym<identifier>"
    push $P5004, "term:sym<name>"
    push $P5004, "term:sym<pir::op>"
    push $P5004, "term:sym<pir::const>"
    push $P5004, "term:sym<nqp::op>"
    push $P5004, "term:sym<nqp::const>"
    push $P5004, "term:sym<onlystar>"
    push $P5004, "args"
    push $P5004, "arglist"
    push $P5004, "term:sym<value>"
    push $P5004, "value"
    push $P5004, "number"
    push $P5004, "quote"
    push $P5004, "quote:sym<apos>"
    push $P5004, "quote:sym<dblq>"
    push $P5004, "quote:sym<q>"
    push $P5004, "quote:sym<qq>"
    push $P5004, "quote:sym<Q>"
    push $P5004, "quote:sym<Q:PIR>"
    push $P5004, "quote:sym</ />"
    push $P5004, "quote_escape:sym<$>"
    push $P5004, "quote_escape:sym<{ }>"
    push $P5004, "circumfix:sym<( )>"
    push $P5004, "circumfix:sym<[ ]>"
    push $P5004, "circumfix:sym<ang>"
    push $P5004, utf8:"circumfix:sym<\x{ab} \x{bb}>"
    push $P5004, "circumfix:sym<{ }>"
    push $P5004, "semilist"
    push $P5004, "infixstopper"
    push $P5004, "postcircumfix:sym<[ ]>"
    push $P5004, "postcircumfix:sym<{ }>"
    push $P5004, "postcircumfix:sym<ang>"
    push $P5004, "postcircumfix:sym<( )>"
    push $P5004, "postfix:sym<.>"
    push $P5004, "prefix:sym<++>"
    push $P5004, "prefix:sym<-->"
    push $P5004, "postfix:sym<++>"
    push $P5004, "postfix:sym<-->"
    push $P5004, "infix:sym<**>"
    push $P5004, "prefix:sym<+>"
    push $P5004, "prefix:sym<~>"
    push $P5004, "prefix:sym<->"
    push $P5004, "prefix:sym<?>"
    push $P5004, "prefix:sym<!>"
    push $P5004, "prefix:sym<|>"
    push $P5004, "infix:sym<*>"
    push $P5004, "infix:sym</>"
    push $P5004, "infix:sym<%>"
    push $P5004, "infix:sym<+&>"
    push $P5004, "infix:sym<+>"
    push $P5004, "infix:sym<->"
    push $P5004, "infix:sym<+|>"
    push $P5004, "infix:sym<+^>"
    push $P5004, "infix:sym<~>"
    push $P5004, "infix:sym<==>"
    push $P5004, "infix:sym<!=>"
    push $P5004, "infix:sym<<=>"
    push $P5004, "infix:sym<>=>"
    push $P5004, "infix:sym<<>"
    push $P5004, "infix:sym<>>"
    push $P5004, "infix:sym<eq>"
    push $P5004, "infix:sym<ne>"
    push $P5004, "infix:sym<le>"
    push $P5004, "infix:sym<ge>"
    push $P5004, "infix:sym<lt>"
    push $P5004, "infix:sym<gt>"
    push $P5004, "infix:sym<=:=>"
    push $P5004, "infix:sym<~~>"
    push $P5004, "infix:sym<&&>"
    push $P5004, "infix:sym<||>"
    push $P5004, "infix:sym<//>"
    push $P5004, "infix:sym<?? !!>"
    push $P5004, "infix:sym<=>"
    push $P5004, "infix:sym<:=>"
    push $P5004, "infix:sym<::=>"
    push $P5004, "infix:sym<,>"
    push $P5004, "prefix:sym<return>"
    push $P5004, "prefix:sym<make>"
    push $P5004, "term:sym<last>"
    push $P5004, "term:sym<next>"
    push $P5004, "term:sym<redo>"
    push $P5004, "smartmatch"
    push $P5004, "$!shared"
    push $P5004, "$!from"
    push $P5004, "$!pos"
    push $P5004, "$!match"
    push $P5004, "$!name"
    push $P5004, "$!bstack"
    push $P5004, "$!cstack"
    push $P5004, "$!regexsub"
    push $P5004, "$!restart"
    push $P5004, "82953FABFDD9ED3A9360DB6B7DA3EFCD15C2E42E-1361734135.011"
    push $P5004, "src\\stage2\\gen\\NQPP6QRegex.pm"
    push $P5004, "obs"
    push $P5004, "throw_unrecognized_metachar"
    push $P5004, "throw_null_pattern"
    push $P5004, "normspace"
    push $P5004, "arg"
    push $P5004, "nibbler"
    push $P5004, "rxstopper"
    push $P5004, "termaltseq"
    push $P5004, "termconjseq"
    push $P5004, "termalt"
    push $P5004, "termconj"
    push $P5004, "quantified_atom"
    push $P5004, "separator"
    push $P5004, "atom"
    push $P5004, "quantifier"
    push $P5004, "quantifier:sym<*>"
    push $P5004, "quantifier:sym<+>"
    push $P5004, "quantifier:sym<?>"
    push $P5004, "quantifier:sym<{N,M}>"
    push $P5004, "quantifier:sym<**>"
    push $P5004, "backmod"
    push $P5004, "metachar"
    push $P5004, "metachar:sym<ws>"
    push $P5004, "metachar:sym<[ ]>"
    push $P5004, "metachar:sym<( )>"
    push $P5004, "metachar:sym<'>"
    push $P5004, "metachar:sym<\">"
    push $P5004, "metachar:sym<.>"
    push $P5004, "metachar:sym<^>"
    push $P5004, "metachar:sym<^^>"
    push $P5004, "metachar:sym<$>"
    push $P5004, "metachar:sym<$$>"
    push $P5004, "metachar:sym<:::>"
    push $P5004, "metachar:sym<::>"
    push $P5004, "metachar:sym<lwb>"
    push $P5004, "metachar:sym<rwb>"
    push $P5004, "metachar:sym<from>"
    push $P5004, "metachar:sym<to>"
    push $P5004, "metachar:sym<bs>"
    push $P5004, "metachar:sym<mod>"
    push $P5004, "metachar:sym<quantifier>"
    push $P5004, "metachar:sym<~>"
    push $P5004, "metachar:sym<{*}>"
    push $P5004, "metachar:sym<assert>"
    push $P5004, "metachar:sym<var>"
    push $P5004, "backslash"
    push $P5004, "backslash:sym<s>"
    push $P5004, "backslash:sym<b>"
    push $P5004, "backslash:sym<e>"
    push $P5004, "backslash:sym<f>"
    push $P5004, "backslash:sym<h>"
    push $P5004, "backslash:sym<r>"
    push $P5004, "backslash:sym<t>"
    push $P5004, "backslash:sym<v>"
    push $P5004, "backslash:sym<o>"
    push $P5004, "backslash:sym<x>"
    push $P5004, "backslash:sym<c>"
    push $P5004, "backslash:sym<A>"
    push $P5004, "backslash:sym<z>"
    push $P5004, "backslash:sym<Z>"
    push $P5004, "backslash:sym<Q>"
    push $P5004, "backslash:sym<unrec>"
    push $P5004, "backslash:sym<misc>"
    push $P5004, "assertion"
    push $P5004, "assertion:sym<?>"
    push $P5004, "assertion:sym<!>"
    push $P5004, "assertion:sym<|>"
    push $P5004, "assertion:sym<method>"
    push $P5004, "assertion:sym<name>"
    push $P5004, "assertion:sym<[>"
    push $P5004, "cclass_elem"
    push $P5004, "mod_internal"
    push $P5004, "mod_ident"
    push $P5004, "mod_ident:sym<ignorecase>"
    push $P5004, "mod_ident:sym<ratchet>"
    push $P5004, "mod_ident:sym<sigspace>"
    push $P5004, "mod_ident:sym<dba>"
    push $P5004, "mod_ident:sym<oops>"
    push $P5004, "metachar:sym<:my>"
    push $P5004, "metachar:sym<{ }>"
    push $P5004, "metachar:sym<nqpvar>"
    push $P5004, "assertion:sym<{ }>"
    push $P5004, "assertion:sym<?{ }>"
    push $P5004, "assertion:sym<var>"
    push $P5004, "codeblock"
    push $P5004, "ints_to_string"
    push $P5004, "CTXSAVE"
    push $P5004, "SET_BLOCK_OUTER_CTX"
    push $P5004, "qbuildsub"
    push $P5004, "alt_nfas"
    push $P5004, "subrule_alias"
    push $P5004, "flip_ast"
    push $P5004, "create_regex_code_object"
    push $P5004, "store_regex_caps"
    push $P5004, "store_regex_nfa"
    push $P5004, "store_regex_alt_nfa"
    push $P5004, "language"
    push $P5004, "compiler"
    push $P5004, "config"
    push $P5004, "autoprint"
    push $P5004, "interactive"
    push $P5004, "interactive_result"
    push $P5004, "interactive_exception"
    push $P5004, "eval"
    push $P5004, "ctxsave"
    push $P5004, "stages"
    push $P5004, "parsegrammar"
    push $P5004, "parseactions"
    push $P5004, "interactive_banner"
    push $P5004, "interactive_prompt"
    push $P5004, "compiler_progname"
    push $P5004, "commandline_options"
    push $P5004, "command_line"
    push $P5004, "command_eval"
    push $P5004, "process_args"
    push $P5004, "evalfiles"
    push $P5004, "compile"
    push $P5004, "start"
    push $P5004, "past"
    push $P5004, "post"
    push $P5004, "pirbegin"
    push $P5004, "pir"
    push $P5004, "evalpmc"
    push $P5004, "dumper"
    push $P5004, "usage"
    push $P5004, "version"
    push $P5004, "show-config"
    push $P5004, "verbose-config"
    push $P5004, "vmstat"
    push $P5004, "nqpevent"
    push $P5004, "removestage"
    push $P5004, "addstage"
    push $P5004, "parse_name"
    push $P5004, "lineof"
    push $P5004, "user-progname"
    push $P5004, "cli-options"
    push $P5004, "cli-arguments"
    push $P5004, "@!stages"
    push $P5004, "$!parsegrammar"
    push $P5004, "$!parseactions"
    push $P5004, "@!cmdoptions"
    push $P5004, "$!usage"
    push $P5004, "$!compiler_progname"
    push $P5004, "$!language"
    push $P5004, "%!config"
    push $P5004, "$!user_progname"
    push $P5004, "@!cli-arguments"
    push $P5004, "%!cli-options"
    push $P5004, ""
    push $P5004, utf8:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000"
    push $P5004, "alt_nfa__1_1361734140.733"
    push $P5004, "alt_nfa__2_1361734140.75"
    push $P5004, utf8:"\n\x{b}\f\r\x{85}\u2028\u2029"
    push $P5004, "alt_nfa__4_1361734140.769"
    push $P5004, "alt_nfa__3_1361734140.76"
    push $P5004, "alt_nfa__6_1361734140.856"
    push $P5004, "alt_nfa__5_1361734140.843"
    push $P5004, "alt_nfa__7_1361734140.949"
    push $P5004, "alt_nfa__9_1361734140.97"
    push $P5004, "alt_nfa__8_1361734140.955"
    push $P5004, "{"
    push $P5004, "alt_nfa__10_1361734140.999"
    push $P5004, "alt_nfa__11_1361734141.005"
    push $P5004, ";"
    push $P5004, "}"
    push $P5004, "sym"
    push $P5004, "else"
    push $P5004, "alt_nfa__12_1361734141.11"
    push $P5004, "wu"
    push $P5004, "alt_nfa__13_1361734141.132"
    push $P5004, "alt_nfa__14_1361734141.133"
    push $P5004, "alt_nfa__15_1361734141.133"
    push $P5004, "alt_nfa__16_1361734141.186"
    push $P5004, "cond"
    push $P5004, "alt_nfa__17_1361734141.261"
    push $P5004, "alt_nfa__18_1361734141.27"
    push $P5004, "key"
    push $P5004, "val"
    push $P5004, "not"
    push $P5004, "alt_nfa__19_1361734141.312"
    push $P5004, "desigilname"
    push $P5004, "<"
    push $P5004, "/_!"
    push $P5004, "alt_nfa__20_1361734141.426"
    push $P5004, "$@%&"
    push $P5004, "*!?"
    push $P5004, "metaclass"
    push $P5004, "repr"
    push $P5004, "export"
    push $P5004, "parent"
    push $P5004, "role"
    push $P5004, "alt_nfa__21_1361734141.692"
    push $P5004, "alt_nfa__22_1361734141.707"
    push $P5004, "alt_nfa__23_1361734141.758"
    push $P5004, "latename"
    push $P5004, "private"
    push $P5004, "alt_nfa__24_1361734141.794"
    push $P5004, "invocant"
    push $P5004, "alt_nfa__26_1361734141.873"
    push $P5004, "alt_nfa__25_1361734141.868"
    push $P5004, "definedness"
    push $P5004, "quant"
    push $P5004, "_DU"
    push $P5004, "alt_nfa__27_1361734141.899"
    push $P5004, "alt_nfa__28_1361734141.899"
    push $P5004, "alt_nfa__29_1361734141.899"
    push $P5004, "/!"
    push $P5004, "alt_nfa__30_1361734141.91"
    push $P5004, "longname"
    push $P5004, "proto"
    push $P5004, "p6regex"
    push $P5004, "alt_nfa__31_1361734142.027"
    push $P5004, "alt_nfa__32_1361734142.027"
    push $P5004, "alt_nfa__33_1361734142.028"
    push $P5004, "'\""
    push $P5004, "("
    push $P5004, "alt_nfa__34_1361734142.055"
    push $P5004, "alt_nfa__35_1361734142.055"
    push $P5004, "op"
    push $P5004, "const"
    push $P5004, "alt_nfa__36_1361734142.141"
    push $P5004, "alt_nfa__37_1361734142.151"
    push $P5004, "sign"
    push $P5004, "alt_nfa__38_1361734142.161"
    push $P5004, "'"
    push $P5004, "\""
    push $P5004, "$"
    push $P5004, utf8:"\x{ab}"
    push $P5004, "OPER"
    push $P5004, ">"
    push $P5004, "}/"
    push $P5004, "var"
    push $P5004, "alt_nfa__39_1361734142.967"
    push $P5004, "alt_nfa__40_1361734142.991"
    push $P5004, "alt_nfa__41_1361734143.005"
    push $P5004, "zw"
    push $P5004, "?!"
    push $P5004, "alt_nfa__42_1361734143.038"
    push $P5004, "$@"
    push $P5004, "__6MODEL_CORE__"
    push $P5004, "GLOBALish"
    push $P5004, "EXPORT"
    push $P5004, "5E1A9226ADF1F89B3A6172DD75C456ECBCF40100-1361734105.006"
    push $P5004, "src\\stage2\\gen\\nqp-mo.pm"
    push $P5004, "NQP::World"
    push $P5004, "NQP::Grammar"
    push $P5004, "alt_nfa__1_1361734116.737"
    push $P5004, "alt_nfa__2_1361734116.769"
    push $P5004, "alt_nfa__3_1361734116.841"
    push $P5004, "alt_nfa__4_1361734116.841"
    push $P5004, "alt_nfa__5_1361734116.864"
    push $P5004, "alt_nfa__6_1361734116.941"
    push $P5004, "alt_nfa__7_1361734116.954"
    push $P5004, "alt_nfa__8_1361734116.993"
    push $P5004, "alt_nfa__9_1361734117.033"
    push $P5004, "shared"
    push $P5004, "match"
    push $P5004, "bstack"
    push $P5004, "cstack"
    push $P5004, "regexsub"
    push $P5004, "restart"
    push $P5004, "NQP::Regex"
    push $P5004, "alt_nfa__1_1361734135.136"
    push $P5004, "alt_nfa__2_1361734135.142"
    push $P5004, "alt_nfa__3_1361734135.165"
    push $P5004, "alt_nfa__4_1361734135.241"
    push $P5004, "alt_nfa__5_1361734135.26"
    push $P5004, "alt_nfa__6_1361734135.326"
    push $P5004, "alt_nfa__7_1361734135.352"
    push $P5004, "alt_nfa__8_1361734135.372"
    push $P5004, "alt_nfa__9_1361734135.443"
    push $P5004, "alt_nfa__10_1361734135.517"
    push $P5004, "alt_nfa__11_1361734135.524"
    push $P5004, "alt_nfa__12_1361734135.611"
    push $P5004, "alt_nfa__13_1361734135.673"
    push $P5004, "alt_nfa__14_1361734135.685"
    push $P5004, "alt_nfa__15_1361734135.754"
    push $P5004, "alt_nfa__16_1361734135.764"
    push $P5004, "alt_nfa__17_1361734135.796"
    push $P5004, "alt_nfa__18_1361734135.804"
    push $P5004, "alt_nfa__19_1361734135.966"
    push $P5004, "alt_nfa__20_1361734135.967"
    push $P5004, "alt_nfa__21_1361734135.967"
    push $P5004, "alt_nfa__23_1361734135.995"
    push $P5004, "alt_nfa__24_1361734135.995"
    push $P5004, "alt_nfa__22_1361734135.974"
    push $P5004, "NQP::Actions"
    push $P5004, "NQP::RegexActions"
    push $P5004, "NQP::Compiler"
    push $P5004, "CompileTimeValue"
    push $P5004, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361734110.609"
    push $P5004, "src\\stage2\\QASTNode.nqp"
    push $P5004, "SpecialArg"
    push $P5004, "Node"
    push $P5004, "Regex"
    push $P5004, "IVal"
    push $P5004, "NVal"
    push $P5004, "SVal"
    push $P5004, "BVal"
    push $P5004, "WVal"
    push $P5004, "Want"
    push $P5004, "Var"
    push $P5004, "VarWithFallback"
    push $P5004, "Op"
    push $P5004, "VM"
    push $P5004, "Stmts"
    push $P5004, "Stmt"
    push $P5004, "Block"
    push $P5004, "Unquote"
    push $P5004, "CompUnit"
    push $P5004, "InlinePlaceholder"
    push $P5004, "Operations"
    push $P5004, "8401C578AB7B881D927A9D59824BE7FD2532AA0E-1361734121.453"
    push $P5004, "src\\stage2\\QAST.nqp"
    push $P5004, "Compiler"
    push $P5004, "NFA"
    push $P5004, "P6Regex"
    push $P5004, "Grammar"
    push $P5004, "Actions"
    push $P5004, "CommandLine"
    push $P5004, "World"
    push $P5004, "CallResult"
    push $P5004, "Sub"
    push $P5004, "Ops"
    push $P5004, "Label"
    push $P5004, "RegexActions"
    push $P5004, "Ee"
    push $P5004, "01"
    push $P5004, "01234567"
    push $P5004, "0123456789abcdefABCDEF"
    push $P5004, "?@ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    push $P5004, "dDnNsSwW"
    push $P5004, "bB"
    push $P5004, "eE"
    push $P5004, "fF"
    push $P5004, "hH"
    push $P5004, "rR"
    push $P5004, "tT"
    push $P5004, "vV"
    push $P5004, "oO"
    push $P5004, "xX"
    push $P5004, "cC"
    push $P5004, "&|~"
    .const 'Sub' $P5005 = 'cuid_509_1361734139.417' 
    capture_lex $P5005
    $P5006 = $P5005()
    nqp_deserialize_sc "", cur_sc, $P5004, $P5006, conflicts
    unless conflicts goto if3364_end7093 
    die "Repossession conflicts occurred during deserialization"
  if3364_end7093:
    .const "LexInfo" $P5001 = "cuid_374_1361734139.417"
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    $P5001."set_static_lexpad_value"("GLOBALish", $P5002)
    .const "LexInfo" $P5003 = "cuid_374_1361734139.417"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_374_1361734139.417"
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 0
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_374_1361734139.417"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_374_1361734139.417"
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 1
    $P5001."set_static_lexpad_value"("EXPORT", $P5002)
    .const "LexInfo" $P5003 = "cuid_374_1361734139.417"
    $P5004 = $P5003."finish_static_lexpad"()
    .const 'Sub' $P5001 = "cuid_1_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 4
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_2_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 5
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_3_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 6
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_4_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 7
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_5_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 8
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_6_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 9
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_7_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 10
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_8_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 11
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_9_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 12
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_10_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 13
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_11_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 14
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_12_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 15
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_13_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 16
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_14_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 17
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_15_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 18
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_16_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 19
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_17_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 20
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_18_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 21
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_19_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 22
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_20_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 23
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_21_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 24
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_22_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 25
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_23_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 26
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_24_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 27
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_25_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 28
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_26_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 29
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_27_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 30
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_28_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 31
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_29_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 32
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_30_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 33
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_31_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 34
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_32_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 35
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_33_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 36
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_34_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 37
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_376_1361734139.417"
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 3
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_376_1361734139.417"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_376_1361734139.417"
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 3
    $P5001."set_static_lexpad_value"("$?CLASS", $P5002)
    .const "LexInfo" $P5003 = "cuid_376_1361734139.417"
    $P5004 = $P5003."finish_static_lexpad"()
    .const 'Sub' $P5001 = "cuid_35_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 39
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_36_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 40
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_37_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 41
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_38_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 42
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_39_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 43
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_40_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 44
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_41_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 45
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_42_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 46
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_43_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 47
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_44_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 48
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_45_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 49
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_46_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 50
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_47_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 51
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_48_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 52
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_49_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 53
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_50_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 54
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_51_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 55
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_52_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 56
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_53_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 57
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_54_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 58
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_55_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 59
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_56_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 60
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_57_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 61
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_58_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 62
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_59_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 63
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_60_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 64
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_61_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 65
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_62_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 66
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_63_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 67
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_64_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 68
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_65_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 69
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_66_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 70
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_67_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 71
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_68_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 72
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_69_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 73
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_70_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 74
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_71_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 75
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_72_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 76
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_73_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 77
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_74_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 78
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_75_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 79
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_76_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 80
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_77_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 81
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_78_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 82
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_79_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 83
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_80_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 84
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_81_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 85
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_82_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 86
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_83_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 87
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_84_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 88
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_85_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 89
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_86_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 90
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_87_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 91
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_88_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 92
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_89_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 93
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_90_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 94
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_91_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 95
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_92_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 96
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_93_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 97
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_94_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 98
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_95_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 99
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_96_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 100
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_97_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 101
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_98_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 102
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_99_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 103
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_100_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 104
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_101_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 105
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_102_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 106
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_103_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 107
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_104_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 108
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_105_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 109
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_106_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 110
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_107_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 111
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_108_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 112
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_109_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 113
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_110_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 114
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_111_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 115
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_112_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 116
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_113_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 117
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_114_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 118
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_115_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 119
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_116_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 120
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_117_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 121
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_118_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 122
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_119_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 123
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_120_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 124
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_121_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 125
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_122_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 126
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_123_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 127
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_124_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 128
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_125_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 129
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_126_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 130
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_127_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 131
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_128_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 132
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_129_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 133
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_130_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 134
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_131_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 135
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_132_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 136
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_133_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 137
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_134_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 138
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_135_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 139
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_136_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 140
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_137_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 141
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_138_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 142
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_139_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 143
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_140_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 144
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_141_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 145
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_142_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 146
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_143_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 147
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_144_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 148
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_145_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 149
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_146_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 150
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_147_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 151
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_148_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 152
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_149_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 153
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_150_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 154
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_151_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 155
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_152_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 156
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_153_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 157
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_154_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 158
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_155_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 159
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_156_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 160
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_157_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 161
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_158_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 162
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_159_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 163
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_160_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 164
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_161_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 165
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_162_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 166
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_163_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 167
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_164_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 168
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_165_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 169
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_166_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 170
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_167_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 171
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_168_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 172
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_169_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 173
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_170_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 174
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_171_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 175
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_172_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 176
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_173_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 177
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_174_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 178
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_175_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 179
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_176_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 180
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_177_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 181
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_178_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 182
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_179_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 183
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_180_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 184
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_181_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 185
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_182_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 186
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_183_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 187
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_184_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 188
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_185_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 189
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_186_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 190
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_187_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 191
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_188_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 192
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_189_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 193
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_190_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 194
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_191_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 195
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_192_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 196
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_193_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 197
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_194_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 198
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_195_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 199
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_196_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 200
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_197_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 201
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_198_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 202
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_199_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 203
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_200_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 204
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_201_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 205
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_202_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 206
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_203_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 207
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_204_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 208
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_205_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 209
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_206_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 210
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_207_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 211
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_208_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 212
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_209_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 213
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_210_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 214
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_211_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 215
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_212_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 216
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_213_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 217
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_214_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 218
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_215_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 219
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_216_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 220
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_217_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 221
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_218_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 222
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_219_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 223
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_220_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 224
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_221_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 225
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_222_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 226
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_223_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 227
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_224_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 228
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_225_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 229
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_226_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 230
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_227_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 231
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_397_1361734139.417"
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 38
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_397_1361734139.417"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_397_1361734139.417"
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 38
    $P5001."set_static_lexpad_value"("$?CLASS", $P5002)
    .const "LexInfo" $P5003 = "cuid_397_1361734139.417"
    $P5004 = $P5003."finish_static_lexpad"()
    .const 'Sub' $P5001 = "cuid_228_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 233
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_229_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 234
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_230_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 235
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_231_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 236
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_232_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 237
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_233_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 238
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_234_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 239
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_235_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 240
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_236_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 241
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_237_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 242
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_238_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 243
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_239_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 244
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_240_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 245
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_241_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 246
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_242_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 247
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_243_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 248
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_244_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 249
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_245_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 250
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_246_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 251
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_247_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 252
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_416_1361734139.417"
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 232
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_416_1361734139.417"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_416_1361734139.417"
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 232
    $P5001."set_static_lexpad_value"("$?CLASS", $P5002)
    .const "LexInfo" $P5003 = "cuid_416_1361734139.417"
    $P5004 = $P5003."finish_static_lexpad"()
    .const 'Sub' $P5001 = "cuid_248_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 254
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_249_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 255
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_250_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 256
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_251_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 257
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_252_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 258
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_253_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 259
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_254_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 260
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_255_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 261
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_256_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 262
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_257_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 263
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_258_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 264
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_259_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 265
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_260_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 266
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_261_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 267
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_262_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 268
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_263_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 269
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_264_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 270
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_265_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 271
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_266_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 272
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_267_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 273
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_268_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 274
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_269_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 275
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_270_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 276
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_271_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 277
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_272_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 278
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_273_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 279
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_274_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 280
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_275_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 281
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_276_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 282
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_277_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 283
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_278_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 284
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_279_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 285
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_280_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 286
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_281_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 287
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_282_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 288
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_283_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 289
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_284_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 290
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_285_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 291
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_286_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 292
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_287_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 293
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_288_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 294
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_289_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 295
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_290_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 296
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_291_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 297
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_292_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 298
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_293_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 299
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_294_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 300
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_295_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 301
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_296_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 302
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_297_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 303
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_298_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 304
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_299_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 305
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_300_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 306
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_301_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 307
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_302_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 308
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_303_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 309
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_304_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 310
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_305_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 311
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_306_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 312
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_307_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 313
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_308_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 314
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_309_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 315
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_310_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 316
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_311_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 317
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_312_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 318
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_313_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 319
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_314_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 320
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_315_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 321
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_316_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 322
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_317_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 323
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_318_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 324
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_319_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 325
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_320_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 326
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_321_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 327
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_322_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 328
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_323_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 329
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_324_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 330
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_325_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 331
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_326_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 332
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_327_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 333
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_328_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 334
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_329_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 335
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_330_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 336
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_331_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 337
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_332_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 338
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_333_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 339
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_334_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 340
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_335_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 341
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_336_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 342
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_337_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 343
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_338_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 344
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_339_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 345
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_340_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 346
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_341_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 347
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_342_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 348
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_343_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 349
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_344_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 350
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_345_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 351
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_346_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 352
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_347_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 353
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_348_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 354
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_349_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 355
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_350_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 356
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_351_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 357
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_352_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 358
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_353_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 359
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_354_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 360
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_355_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 361
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_356_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 362
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_357_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 363
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_358_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 364
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_359_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 365
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_426_1361734139.417"
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 253
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_426_1361734139.417"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_426_1361734139.417"
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 253
    $P5001."set_static_lexpad_value"("$?CLASS", $P5002)
    .const "LexInfo" $P5003 = "cuid_426_1361734139.417"
    $P5004 = $P5003."finish_static_lexpad"()
    .const 'Sub' $P5001 = "cuid_360_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 367
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_361_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 368
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_362_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 369
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_363_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 370
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_364_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 371
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_365_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 372
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_366_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 373
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_367_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 374
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_368_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 375
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_369_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 376
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_370_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 377
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_371_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 378
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_372_1361734139.417" 
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 379
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_504_1361734139.417"
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 366
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_504_1361734139.417"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_504_1361734139.417"
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 366
    $P5001."set_static_lexpad_value"("$?CLASS", $P5002)
    .const "LexInfo" $P5003 = "cuid_504_1361734139.417"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_508_1361734139.417"
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 380
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_508_1361734139.417"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_508_1361734139.417"
    nqp_get_sc_object $P5002, "ED4508E87B797F7309BA62D4FB9CD72D534D3ADE-1361734139.442", 380
    $P5001."set_static_lexpad_value"("$?CLASS", $P5002)
    .const "LexInfo" $P5003 = "cuid_508_1361734139.417"
    $P5004 = $P5003."finish_static_lexpad"()
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_509_1361734139.417") :anon :lex :outer("cuid_510_1361734139.417")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    new $P5001, 'ResizablePMCArray'
    .const 'Sub' $P5002 = "cuid_1_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_2_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_3_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_4_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_5_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_6_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_7_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_8_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_9_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_10_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_11_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_12_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_13_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_14_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_15_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_16_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_17_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_18_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_19_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_20_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_21_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_22_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_23_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_24_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_25_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_26_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_27_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_28_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_29_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_30_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_31_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_32_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_33_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_34_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_35_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_36_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_37_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_38_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_39_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_40_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_41_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_42_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_43_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_44_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_45_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_46_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_47_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_48_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_49_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_50_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_51_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_52_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_53_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_54_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_55_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_56_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_57_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_58_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_59_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_60_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_61_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_62_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_63_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_64_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_65_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_66_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_67_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_68_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_69_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_70_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_71_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_72_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_73_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_74_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_75_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_76_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_77_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_78_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_79_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_80_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_81_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_82_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_83_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_84_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_85_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_86_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_87_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_88_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_89_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_90_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_91_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_92_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_93_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_94_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_95_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_96_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_97_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_98_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_99_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_100_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_101_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_102_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_103_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_104_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_105_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_106_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_107_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_108_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_109_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_110_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_111_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_112_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_113_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_114_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_115_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_116_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_117_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_118_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_119_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_120_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_121_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_122_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_123_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_124_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_125_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_126_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_127_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_128_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_129_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_130_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_131_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_132_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_133_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_134_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_135_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_136_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_137_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_138_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_139_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_140_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_141_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_142_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_143_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_144_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_145_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_146_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_147_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_148_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_149_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_150_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_151_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_152_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_153_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_154_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_155_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_156_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_157_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_158_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_159_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_160_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_161_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_162_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_163_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_164_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_165_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_166_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_167_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_168_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_169_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_170_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_171_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_172_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_173_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_174_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_175_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_176_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_177_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_178_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_179_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_180_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_181_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_182_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_183_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_184_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_185_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_186_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_187_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_188_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_189_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_190_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_191_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_192_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_193_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_194_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_195_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_196_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_197_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_198_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_199_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_200_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_201_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_202_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_203_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_204_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_205_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_206_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_207_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_208_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_209_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_210_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_211_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_212_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_213_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_214_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_215_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_216_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_217_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_218_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_219_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_220_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_221_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_222_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_223_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_224_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_225_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_226_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_227_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_228_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_229_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_230_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_231_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_232_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_233_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_234_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_235_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_236_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_237_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_238_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_239_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_240_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_241_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_242_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_243_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_244_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_245_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_246_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_247_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_248_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_249_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_250_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_251_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_252_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_253_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_254_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_255_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_256_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_257_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_258_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_259_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_260_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_261_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_262_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_263_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_264_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_265_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_266_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_267_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_268_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_269_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_270_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_271_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_272_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_273_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_274_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_275_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_276_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_277_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_278_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_279_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_280_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_281_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_282_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_283_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_284_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_285_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_286_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_287_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_288_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_289_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_290_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_291_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_292_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_293_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_294_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_295_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_296_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_297_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_298_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_299_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_300_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_301_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_302_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_303_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_304_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_305_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_306_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_307_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_308_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_309_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_310_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_311_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_312_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_313_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_314_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_315_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_316_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_317_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_318_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_319_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_320_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_321_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_322_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_323_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_324_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_325_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_326_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_327_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_328_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_329_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_330_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_331_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_332_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_333_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_334_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_335_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_336_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_337_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_338_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_339_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_340_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_341_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_342_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_343_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_344_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_345_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_346_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_347_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_348_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_349_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_350_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_351_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_352_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_353_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_354_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_355_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_356_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_357_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_358_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_359_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_360_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_361_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_362_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_363_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_364_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_365_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_366_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_367_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_368_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_369_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_370_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_371_1361734139.417" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_372_1361734139.417" 
    push $P5001, $P5002
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_511_1361734139.417") :load
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .const 'Sub' $P5001 = "cuid_374_1361734139.417" 
    $P5002 = $P5001()
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_512_1361734139.417") :main
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc ARGS :slurpy 
    .const 'Sub' $P5001 = "cuid_374_1361734139.417" 
    $P5002 = $P5001(ARGS :flat)
    .return ($P5002) 
.end