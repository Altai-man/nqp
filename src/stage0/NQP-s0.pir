.include 'cclass.pasm'
.include 'except_severity.pasm'
.include 'except_types.pasm'
.include 'iglobals.pasm'
.include 'interpinfo.pasm'
.include 'iterator.pasm'
.include 'sysinfo.pasm'
.include 'stat.pasm'
.include 'datatypes.pasm'
.include 'libpaths.pasm'
.include 'nqp_const.pir'
.loadlib "nqp_group"
.loadlib "nqp_ops"
.loadlib "nqp_bigint_ops"
.loadlib "trans_ops"
.loadlib "io_ops"
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_374_1365879995.227") :anon :lex
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc _lex_param_0 :slurpy 
    .const 'Sub' $P5048 = 'cuid_373_1365879995.227' 
    capture_lex $P5048 
    .const 'Sub' $P5048 = 'cuid_375_1365879995.227' 
    capture_lex $P5048 
    .const 'Sub' $P5048 = 'cuid_376_1365879995.227' 
    capture_lex $P5048 
    .const 'Sub' $P5048 = 'cuid_397_1365879995.227' 
    capture_lex $P5048 
    .const 'Sub' $P5048 = 'cuid_416_1365879995.227' 
    capture_lex $P5048 
    .const 'Sub' $P5048 = 'cuid_417_1365879995.227' 
    capture_lex $P5048 
    .const 'Sub' $P5048 = 'cuid_418_1365879995.227' 
    capture_lex $P5048 
    .const 'Sub' $P5048 = 'cuid_419_1365879995.227' 
    capture_lex $P5048 
    .const 'Sub' $P5048 = 'cuid_420_1365879995.227' 
    capture_lex $P5048 
    .const 'Sub' $P5048 = 'cuid_421_1365879995.227' 
    capture_lex $P5048 
    .const 'Sub' $P5048 = 'cuid_422_1365879995.227' 
    capture_lex $P5048 
    .const 'Sub' $P5048 = 'cuid_423_1365879995.227' 
    capture_lex $P5048 
    .const 'Sub' $P5048 = 'cuid_424_1365879995.227' 
    capture_lex $P5048 
    .const 'Sub' $P5048 = 'cuid_426_1365879995.227' 
    capture_lex $P5048 
    .const 'Sub' $P5048 = 'cuid_504_1365879995.227' 
    capture_lex $P5048 
    .const 'Sub' $P5048 = 'cuid_508_1365879995.227' 
    capture_lex $P5048 
    .lex "GLOBALish", $P101 
    .lex "$?PACKAGE", $P102 
    .lex "EXPORT", $P103 
    .lex "$ops", $P104 
    .lex "$nqpcomp", $P105 
    .lex "@clo", $P106 
    .lex "&MAIN", $P107 
    .lex "&hll-config", $P108 
    .lex "@ARGS", _lex_param_0 
    .local pmc ctxsave 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P104, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P105, $P5002
    new $P5003, 'QRPA'
    set $P106, $P5003
    .const 'Sub' $P5004 = 'cuid_373_1365879995.227' 
    capture_lex $P5004
    set $P107, $P5004
    .const 'Sub' $P5005 = 'cuid_375_1365879995.227' 
    capture_lex $P5005
    set $P108, $P5005
    find_dynamic_lex $P5006, "$*CTXSAVE"
    set ctxsave, $P5006
    isnull $I5001, ctxsave
    if $I5001 goto unless10_end11 
    can $I5002, ctxsave, "ctxsave"
    box $P5009, $I5002
    set $P5008, $P5009
    unless $I5002 goto if11_end13 
    $P5007 = ctxsave."ctxsave"()
    set $P5008, $P5007
  if11_end13:
  unless10_end11:
.annotate 'line', 1
    .const 'Sub' $P5010 = 'cuid_376_1365879995.227' 
    capture_lex $P5010
    $P5011 = $P5010()
    .const 'Sub' $P5012 = 'cuid_397_1365879995.227' 
    capture_lex $P5012
    $P5013 = $P5012()
    .const 'Sub' $P5014 = 'cuid_416_1365879995.227' 
    capture_lex $P5014
    $P5015 = $P5014()
.annotate 'line', 1467
    nqp_get_sc_object $P5016, "1BD2754E13656C3F57411A23AD0833C5FE250812-1365879974.339", 60
    $P5017 = $P5016."operations"()
    set $P104, $P5017
.annotate 'line', 1469
    .const 'Sub' $P5019 = 'cuid_417_1365879995.227' 
    capture_lex $P5019
    newclosure $P5018, $P5019
    $P104."add_hll_op"("nqp", "preinc", $P5018)
.annotate 'line', 1484
    .const 'Sub' $P5021 = 'cuid_418_1365879995.227' 
    capture_lex $P5021
    newclosure $P5020, $P5021
    $P104."add_hll_op"("nqp", "predec", $P5020)
.annotate 'line', 1499
    .const 'Sub' $P5023 = 'cuid_419_1365879995.227' 
    capture_lex $P5023
    newclosure $P5022, $P5023
    $P104."add_hll_op"("nqp", "postinc", $P5022)
.annotate 'line', 1523
    .const 'Sub' $P5025 = 'cuid_420_1365879995.227' 
    capture_lex $P5025
    newclosure $P5024, $P5025
    $P104."add_hll_op"("nqp", "postdec", $P5024)
.annotate 'line', 1547
    .const 'Sub' $P5027 = 'cuid_421_1365879995.227' 
    capture_lex $P5027
    newclosure $P5026, $P5027
    $P104."add_hll_op"("nqp", "numify", $P5026)
.annotate 'line', 1551
    .const 'Sub' $P5029 = 'cuid_422_1365879995.227' 
    capture_lex $P5029
    newclosure $P5028, $P5029
    $P104."add_hll_op"("nqp", "stringify", $P5028)
.annotate 'line', 1555
    .const 'Sub' $P5031 = 'cuid_423_1365879995.227' 
    capture_lex $P5031
    newclosure $P5030, $P5031
    $P104."add_hll_op"("nqp", "eqaddr", $P5030)
.annotate 'line', 1563
    .const 'Sub' $P5033 = 'cuid_424_1365879995.227' 
    capture_lex $P5033
    newclosure $P5032, $P5033
    $P104."add_hll_op"("nqp", "falsey", $P5032)
    .const 'Sub' $P5034 = 'cuid_426_1365879995.227' 
    capture_lex $P5034
    $P5035 = $P5034()
    .const 'Sub' $P5036 = 'cuid_504_1365879995.227' 
    capture_lex $P5036
    $P5037 = $P5036()
    .const 'Sub' $P5038 = 'cuid_508_1365879995.227' 
    capture_lex $P5038
    $P5039 = $P5038()
.annotate 'line', 3377
    nqp_get_sc_object $P5040, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 380
    $P5041 = $P5040."new"()
    set $P105, $P5041
.annotate 'line', 3378
    $P105."language"("nqp")
.annotate 'line', 3379
    nqp_get_sc_object $P5042, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 38
    $P105."parsegrammar"($P5042)
.annotate 'line', 3380
    nqp_get_sc_object $P5043, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 253
    $P105."parseactions"($P5043)
.annotate 'line', 3381
    $P5044 = $P105."config"()
    "&hll-config"($P5044)
.annotate 'line', 3384
    $P5045 = $P105."commandline_options"()
    set $P106, $P5045
.annotate 'line', 3385
    $P106."push"("parsetrace")
.annotate 'line', 3386
    $P106."push"("setting=s")
.annotate 'line', 3387
    $P106."push"("setting-path=s")
.annotate 'line', 3388
    $P106."push"("module-path=s")
.annotate 'line', 3389
    $P106."push"("vmlibs=s")
.annotate 'line', 3390
    $P106."push"("no-regex-lib")
.annotate 'line', 3391
    $P106."push"("dynext=s")
.annotate 'line', 3392
    $P106."push"("stable-sc")
    unless _lex_param_0 goto if3358_end7083 
    .const 'Sub' $P5046 = "cuid_373_1365879995.227" 
    $P5047 = $P5046(_lex_param_0 :flat)
  if3358_end7083:
    .return () 
.end
.HLL "nqp"
.namespace []
.sub "MAIN" :subid("cuid_373_1365879995.227") :anon :lex :outer("cuid_374_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3394
    .param pmc _lex_param_0 
    .lex "@ARGS", _lex_param_0 
.annotate 'line', 3396
    find_lex $P5001, "$nqpcomp"
    $P5001."command_line"(_lex_param_0, "utf8" :named("encoding"), "ascii iso-8859-1" :named("transcode"))
.annotate 'line', 3399
    find_lex $P5002, "$nqpcomp"
    $P5003 = $P5002."nqpevent"()
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "hll-config" :subid("cuid_375_1365879995.227") :anon :lex :outer("cuid_374_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3403
    .param pmc _lex_param_0 
    .lex "$config", _lex_param_0 
    box $P5001, "2013.03-20-g008a923"
    set _lex_param_0["version"], $P5001
    box $P5002, "2013-04-13T19:06:35Z"
    set _lex_param_0["build-date"], $P5002
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_376_1365879995.227") :anon :lex :outer("cuid_374_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 8
    .const 'Sub' $P5032 = 'cuid_1_1365879995.227' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_2_1365879995.227' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_3_1365879995.227' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_4_1365879995.227' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_5_1365879995.227' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_6_1365879995.227' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_7_1365879995.227' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_8_1365879995.227' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_9_1365879995.227' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_10_1365879995.227' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_11_1365879995.227' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_17_1365879995.227' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_18_1365879995.227' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_19_1365879995.227' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_20_1365879995.227' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_21_1365879995.227' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_22_1365879995.227' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_23_1365879995.227' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_24_1365879995.227' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_25_1365879995.227' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_26_1365879995.227' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_27_1365879995.227' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_28_1365879995.227' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_29_1365879995.227' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_30_1365879995.227' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_31_1365879995.227' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_32_1365879995.227' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_33_1365879995.227' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_34_1365879995.227' 
    capture_lex $P5032 
    .lex "$loader", $P101 
    .lex "$?PACKAGE", $P102 
    .lex "$?CLASS", $P103 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    .const 'Sub' $P5002 = 'cuid_1_1365879995.227' 
    capture_lex $P5002
    .const 'Sub' $P5003 = 'cuid_2_1365879995.227' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_3_1365879995.227' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_4_1365879995.227' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_5_1365879995.227' 
    capture_lex $P5006
    get_hll_global $P5007, "ModuleLoader"
    set $P101, $P5007
    .const 'Sub' $P5008 = 'cuid_6_1365879995.227' 
    capture_lex $P5008
    .const 'Sub' $P5009 = 'cuid_7_1365879995.227' 
    capture_lex $P5009
    .const 'Sub' $P5010 = 'cuid_8_1365879995.227' 
    capture_lex $P5010
    .const 'Sub' $P5011 = 'cuid_9_1365879995.227' 
    capture_lex $P5011
    .const 'Sub' $P5012 = 'cuid_10_1365879995.227' 
    capture_lex $P5012
    .const 'Sub' $P5013 = 'cuid_11_1365879995.227' 
    capture_lex $P5013
    .const 'Sub' $P5014 = 'cuid_17_1365879995.227' 
    capture_lex $P5014
    .const 'Sub' $P5015 = 'cuid_18_1365879995.227' 
    capture_lex $P5015
    .const 'Sub' $P5016 = 'cuid_19_1365879995.227' 
    capture_lex $P5016
    .const 'Sub' $P5017 = 'cuid_20_1365879995.227' 
    capture_lex $P5017
    .const 'Sub' $P5018 = 'cuid_21_1365879995.227' 
    capture_lex $P5018
    .const 'Sub' $P5019 = 'cuid_22_1365879995.227' 
    capture_lex $P5019
    .const 'Sub' $P5020 = 'cuid_23_1365879995.227' 
    capture_lex $P5020
    .const 'Sub' $P5021 = 'cuid_24_1365879995.227' 
    capture_lex $P5021
    .const 'Sub' $P5022 = 'cuid_25_1365879995.227' 
    capture_lex $P5022
    .const 'Sub' $P5023 = 'cuid_26_1365879995.227' 
    capture_lex $P5023
    .const 'Sub' $P5024 = 'cuid_27_1365879995.227' 
    capture_lex $P5024
    .const 'Sub' $P5025 = 'cuid_28_1365879995.227' 
    capture_lex $P5025
    .const 'Sub' $P5026 = 'cuid_29_1365879995.227' 
    capture_lex $P5026
    .const 'Sub' $P5027 = 'cuid_30_1365879995.227' 
    capture_lex $P5027
    .const 'Sub' $P5028 = 'cuid_31_1365879995.227' 
    capture_lex $P5028
    .const 'Sub' $P5029 = 'cuid_32_1365879995.227' 
    capture_lex $P5029
    .const 'Sub' $P5030 = 'cuid_33_1365879995.227' 
    capture_lex $P5030
    .const 'Sub' $P5031 = 'cuid_34_1365879995.227' 
    capture_lex $P5031
    .return ($P5031) 
.end
.HLL "nqp"
.namespace []
.sub "BUILD" :subid("cuid_1_1365879995.227") :anon :lex :outer("cuid_376_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 33
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :slurpy :named 
    .lex "self", _lex_param_0 
    .lex "%opts", _lex_param_1 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 3
    new $P5003, 'QRPA'
    repr_bind_attr_obj $P5001, $P5002, "@!BLOCKS", $P5003
    nqp_decontainerize $P5004, _lex_param_0
    nqp_get_sc_object $P5005, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 3
    new $P5006, 'Hash'
    repr_bind_attr_obj $P5004, $P5005, "%!code_objects_to_fix_up", $P5006
    nqp_decontainerize $P5007, _lex_param_0
    nqp_get_sc_object $P5008, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 3
    new $P5009, 'Hash'
    repr_bind_attr_obj $P5007, $P5008, "%!code_object_types", $P5009
    nqp_decontainerize $P5010, _lex_param_0
    nqp_get_sc_object $P5011, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 3
    new $P5012, 'Hash'
    repr_bind_attr_obj $P5010, $P5011, "%!code_object_fixup_list", $P5012
    nqp_decontainerize $P5013, _lex_param_0
    nqp_get_sc_object $P5014, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 3
    new $P5015, 'Hash'
    repr_bind_attr_obj $P5013, $P5014, "%!code_stub_sc_idx", $P5015
    nqp_decontainerize $P5016, _lex_param_0
    nqp_get_sc_object $P5017, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 3
    new $P5018, 'QRPA'
    repr_bind_attr_obj $P5016, $P5017, "@!clearup_tasks", $P5018
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "push_lexpad" :subid("cuid_2_1365879995.227") :anon :lex :outer("cuid_376_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 43
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$pad", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
.annotate 'line', 45
    nqp_get_sc_object $P5002, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 103
    nqp_get_sc_object $P5003, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 93
    $P5004 = $P5003."new"()
    $P5005 = $P5002."new"($P5004, _lex_param_1 :named("node"))
    set $P101, $P5005
    nqp_decontainerize $P5006, _lex_param_0
    nqp_get_sc_object $P5007, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 3
    repr_get_attr_obj $P5008, $P5006, $P5007, "@!BLOCKS"
    set $N5001, $P5008
    unless $N5001 goto if12_end15 
.annotate 'line', 46
    nqp_decontainerize $P5009, _lex_param_0
    nqp_get_sc_object $P5010, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 3
    repr_get_attr_obj $P5011, $P5009, $P5010, "@!BLOCKS"
    set fb_tmp_1, $P5011
    repr_defined $I5001, fb_tmp_1
    unless $I5001 goto if13_else16 
    nqp_decontainerize $P5013, _lex_param_0
    nqp_get_sc_object $P5014, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 3
    repr_get_attr_obj $P5015, $P5013, $P5014, "@!BLOCKS"
    set $N5003, $P5015
    set $N5004, 1
    sub $N5002, $N5003, $N5004
    set $I5002, $N5002
    set $P5012, fb_tmp_1[$I5002]
    set $P5017, $P5012
    goto if13_end17
  if13_else16:
    null $P5016
    set $P5017, $P5016
  if13_end17:
    unless_null $P5017, vivi_1418
    nqp_get_sc_object $P5018, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5017, $P5018
  vivi_1418:
    set $P101["outer"], $P5017
  if12_end15:
    nqp_decontainerize $P5019, _lex_param_0
    nqp_get_sc_object $P5020, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 3
    repr_get_attr_obj $P5021, $P5019, $P5020, "@!BLOCKS"
    nqp_decontainerize $P5022, _lex_param_0
    nqp_get_sc_object $P5023, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 3
    repr_get_attr_obj $P5024, $P5022, $P5023, "@!BLOCKS"
    set $N5005, $P5024
    set $I5003, $N5005
    set $P5021[$I5003], $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "pop_lexpad" :subid("cuid_3_1365879995.227") :anon :lex :outer("cuid_376_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 54
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
.annotate 'line', 55
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 3
    repr_get_attr_obj $P5003, $P5001, $P5002, "@!BLOCKS"
    $P5004 = $P5003."pop"()
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "cur_lexpad" :subid("cuid_4_1365879995.227") :anon :lex :outer("cuid_376_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 59
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    .local pmc fb_tmp_2 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 3
    repr_get_attr_obj $P5003, $P5001, $P5002, "@!BLOCKS"
    set fb_tmp_2, $P5003
    repr_defined $I5001, fb_tmp_2
    unless $I5001 goto if15_else19 
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 3
    repr_get_attr_obj $P5007, $P5005, $P5006, "@!BLOCKS"
    set $N5002, $P5007
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    set $I5002, $N5001
    set $P5004, fb_tmp_2[$I5002]
    set $P5009, $P5004
    goto if15_end20
  if15_else19:
    null $P5008
    set $P5009, $P5008
  if15_end20:
    unless_null $P5009, vivi_1621
    nqp_get_sc_object $P5010, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5009, $P5010
  vivi_1621:
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "get_legacy_block_list" :subid("cuid_5_1365879995.227") :anon :lex :outer("cuid_376_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 64
    .param pmc _lex_param_0 
    .lex "@x", $P101 
    .lex "self", _lex_param_0 
    new $P5001, 'QRPA'
    set $P101, $P5001
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 3
    repr_get_attr_obj $P5005, $P5003, $P5004, "@!BLOCKS"
    repr_clone $P5002, $P5005
    set $P101, $P5002
.annotate 'line', 66
    $P101."reverse"()
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "load_setting" :subid("cuid_6_1365879995.227") :anon :lex :outer("cuid_376_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 76
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5005 = 'cuid_377_1365879995.227' 
    capture_lex $P5005 
    .lex "self", _lex_param_0 
    .lex "$setting_name", _lex_param_1 
    root_new $P101, ['parrot';'Continuation']
    set_label $P101, lexotic_22
    .lex "RETURN", $P101
    set $S5001, _lex_param_1
    isne $I5001, $S5001, "NULL"
    box $P5004, $I5001
    set $P5003, $P5004
    unless $I5001 goto if17_end25 
    .const 'Sub' $P5001 = 'cuid_377_1365879995.227' 
    capture_lex $P5001
    $P5002 = $P5001()
    set $P5003, $P5002
  if17_end25:
    goto lexotic_23
  lexotic_22:
    .get_results ($P5003)
  lexotic_23:
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_377_1365879995.227") :anon :lex :outer("cuid_6_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 78
    .lex "$setting", $P101 
    .lex "$set_outer", $P102 
    .local pmc fb_tmp_3 
    .local pmc fb_tmp_4 
    .local pmc pkg_viv_tmp_1 
    .local pmc fb_tmp_5 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
    find_dynamic_lex $P5003, "%*COMPILING"
    unless_null $P5003, fallback28
    nqp_get_sc_object $P5005, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5004, $P5005
    set pkg_viv_tmp_1, $P5004
    set fb_tmp_4, pkg_viv_tmp_1
    repr_defined $I5002, fb_tmp_4
    unless $I5002 goto if19_else29 
    set $P5006, fb_tmp_4["%COMPILING"]
    set $P5008, $P5006
    goto if19_end30
  if19_else29:
    null $P5007
    set $P5008, $P5007
  if19_end30:
    unless_null $P5008, vivi_2031
    new $P5009, 'Hash'
    set pkg_viv_tmp_1["%COMPILING"], $P5009
    set $P5008, $P5009
  vivi_2031:
    unless_null $P5008, vivi_2132
    die "Contextual %*COMPILING not found"
    box $P5010, "Contextual %*COMPILING not found"
    set $P5008, $P5010
  vivi_2132:
    set $P5003, $P5008
  fallback28:
    set fb_tmp_3, $P5003
    repr_defined $I5001, fb_tmp_3
    unless $I5001 goto if18_else26 
    set $P5011, fb_tmp_3["%?OPTIONS"]
    set $P5013, $P5011
    goto if18_end27
  if18_else26:
    null $P5012
    set $P5013, $P5012
  if18_end27:
    unless_null $P5013, vivi_2233
    nqp_get_sc_object $P5014, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5013, $P5014
  vivi_2233:
.annotate 'line', 83
    find_lex $P5015, "$loader"
    find_lex $P5016, "$setting_name"
    $P5017 = $P5015."load_setting"($P5016)
    set $P5013["outer_ctx"], $P5017
    set $P101, $P5017
.annotate 'line', 87
    nqp_get_sc_object $P5018, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 89
    nqp_get_sc_object $P5019, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 57
    find_dynamic_lex $P5020, "$*UNIT"
    unless_null $P5020, fallback34
    nqp_get_sc_object $P5022, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5021, $P5022
    set fb_tmp_5, $P5021
    repr_defined $I5003, fb_tmp_5
    unless $I5003 goto if23_else35 
    set $P5023, fb_tmp_5["$UNIT"]
    set $P5025, $P5023
    goto if23_end36
  if23_else35:
    null $P5024
    set $P5025, $P5024
  if23_end36:
    unless_null $P5025, vivi_2437
    nqp_get_sc_object $P5026, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5025, $P5026
  vivi_2437:
    unless_null $P5025, vivi_2538
    die "Contextual $*UNIT not found"
    box $P5027, "Contextual $*UNIT not found"
    set $P5025, $P5027
  vivi_2538:
    set $P5020, $P5025
  fallback34:
    $P5028 = $P5019."new"($P5020 :named("value"))
.annotate 'line', 90
    nqp_get_sc_object $P5029, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 92
    nqp_get_sc_object $P5030, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 94
    nqp_get_sc_object $P5031, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 52
    $P5032 = $P5031."new"("ModuleLoader" :named("value"))
    $P5033 = $P5030."new"($P5032, "getcurhllsym" :named("op"))
.annotate 'line', 96
    nqp_get_sc_object $P5034, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 52
    find_lex $P5035, "$setting_name"
    $P5036 = $P5034."new"($P5035 :named("value"))
    $P5037 = $P5029."new"($P5033, $P5036, "callmethod" :named("op"), "load_setting" :named("name"))
    $P5038 = $P5018."new"($P5028, $P5037, "forceouterctx" :named("op"))
    set $P102, $P5038
.annotate 'line', 98
    find_lex $P5040, "self"
    nqp_decontainerize $P5039, $P5040
    $P5041 = $P5039."is_precompilation_mode"()
    unless $P5041 goto if26_else39 
.annotate 'line', 99
    find_lex $P5043, "self"
    nqp_decontainerize $P5042, $P5043
    nqp_get_sc_object $P5044, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 93
.annotate 'line', 100
    nqp_get_sc_object $P5045, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 102
    nqp_get_sc_object $P5046, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 89
.annotate 'line', 103
    nqp_get_sc_object $P5047, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 52
    $P5048 = $P5047."new"("ModuleLoader.pbc" :named("value"))
.annotate 'line', 104
    nqp_get_sc_object $P5049, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 52
    $P5050 = $P5049."new"("ModuleLoader.class" :named("value"))
    $P5051 = $P5046."new"($P5048 :named("parrot"), $P5050 :named("jvm"))
    $P5052 = $P5045."new"($P5051, "loadbytecode" :named("op"))
    $P5053 = $P5044."new"($P5052, $P102)
    $P5054 = $P5042."add_load_dependency_task"($P5053 :named("deserialize_past"))
    goto if26_end40
  if26_else39:
.annotate 'line', 109
.annotate 'line', 110
    find_lex $P5056, "self"
    nqp_decontainerize $P5055, $P5056
    $P5057 = $P5055."add_fixup_task"($P102 :named("fixup_past"))
  if26_end40:
    getattribute $P5059, $P101, 'lex_pad'
    find_lex $P5058, "RETURN"
    $P5060 = $P5058($P5059)
    .return ($P5060) 
.end
.HLL "nqp"
.namespace []
.sub "load_module" :subid("cuid_7_1365879995.227") :anon :lex :outer("cuid_376_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 119
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$module", $P101 
    .lex "self", _lex_param_0 
    .lex "$module_name", _lex_param_1 
    .lex "$cur_GLOBALish", _lex_param_2 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_41
    .lex "RETURN", $P102
.annotate 'line', 121
    find_lex $P5002, "$loader"
    $P5003 = $P5002."load_module"(_lex_param_1, _lex_param_2)
    set $P101, $P5003
.annotate 'line', 124
    nqp_decontainerize $P5004, _lex_param_0
    $P5005 = $P5004."is_precompilation_mode"()
    unless $P5005 goto if27_end44 
.annotate 'line', 125
    nqp_decontainerize $P5006, _lex_param_0
    nqp_get_sc_object $P5007, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 93
.annotate 'line', 126
    nqp_get_sc_object $P5008, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 128
    nqp_get_sc_object $P5009, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 89
.annotate 'line', 129
    nqp_get_sc_object $P5010, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 52
    $P5011 = $P5010."new"("ModuleLoader.pbc" :named("value"))
.annotate 'line', 130
    nqp_get_sc_object $P5012, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 52
    $P5013 = $P5012."new"("ModuleLoader.class" :named("value"))
    $P5014 = $P5009."new"($P5011 :named("parrot"), $P5013 :named("jvm"))
    $P5015 = $P5008."new"($P5014, "loadbytecode" :named("op"))
.annotate 'line', 132
    nqp_get_sc_object $P5016, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 134
    nqp_get_sc_object $P5017, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 136
    nqp_get_sc_object $P5018, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 52
    $P5019 = $P5018."new"("ModuleLoader" :named("value"))
    $P5020 = $P5017."new"($P5019, "getcurhllsym" :named("op"))
.annotate 'line', 138
    nqp_get_sc_object $P5021, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 52
    $P5022 = $P5021."new"(_lex_param_1 :named("value"))
    $P5023 = $P5016."new"($P5020, $P5022, "callmethod" :named("op"), "load_module" :named("name"))
    $P5024 = $P5007."new"($P5015, $P5023)
    $P5025 = $P5006."add_load_dependency_task"($P5024 :named("deserialize_past"))
  if27_end44:
    getattribute $P5027, $P101, 'lex_pad'
    find_lex $P5026, "RETURN"
    $P5028 = $P5026($P5027)
    goto lexotic_42
  lexotic_41:
    .get_results ($P5028)
  lexotic_42:
    .return ($P5028) 
.end
.HLL "nqp"
.namespace []
.sub "import" :subid("cuid_8_1365879995.227") :anon :lex :outer("cuid_376_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 145
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5009 = 'cuid_378_1365879995.227' 
    capture_lex $P5009 
    .lex "$target", $P101 
    .lex "self", _lex_param_0 
    .lex "$stash", _lex_param_1 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
.annotate 'line', 146
    nqp_decontainerize $P5002, _lex_param_0
    $P5003 = $P5002."cur_lexpad"()
    set $P101, $P5003
    set $P5004, _lex_param_1
    iter $P5006, _lex_param_1
  for_next45:
    unless $P5006, for_done47
    shift $P5008, $P5006
  for_redo46:
    .const 'Sub' $P5007 = 'cuid_378_1365879995.227' 
    capture_lex $P5007
    $P5004 = $P5007($P5008)
    goto for_next45
  for_done47:
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_378_1365879995.227") :anon :lex :outer("cuid_8_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 147
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 148
    find_lex $P5002, "self"
    nqp_decontainerize $P5001, $P5002
    find_lex $P5003, "$target"
    $P5004 = _lex_param_0."key"()
    $P5005 = _lex_param_0."value"()
    $P5006 = $P5001."install_lexical_symbol"($P5003, $P5004, $P5005)
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "install_package_symbol" :subid("cuid_9_1365879995.227") :anon :lex :outer("cuid_376_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 154
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .const 'Sub' $P5012 = 'cuid_380_1365879995.227' 
    capture_lex $P5012 
    .lex "$name", $P101 
    .lex "$target", $P102 
    .lex "self", _lex_param_0 
    .lex "$package", _lex_param_1 
    .lex "@sym", _lex_param_2 
    .lex "$obj", _lex_param_3 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
    repr_clone $P5003, _lex_param_2
    set _lex_param_2, $P5003
.annotate 'line', 156
    $P5004 = _lex_param_2."pop"()
    set $S5001, $P5004
    box $P5005, $S5001
    set $P101, $P5005
    set $P102, _lex_param_1
    set $P5006, _lex_param_2
    iter $P5008, _lex_param_2
  for_next67:
    unless $P5008, for_done69
    shift $P5010, $P5008
  for_redo68:
    .const 'Sub' $P5009 = 'cuid_380_1365879995.227' 
    capture_lex $P5009
    $P5006 = $P5009($P5010)
    goto for_next67
  for_done69:
    get_who $P5011, $P102
    set $S5002, $P101
    set $P5011[$S5002], _lex_param_3
    .return (_lex_param_3) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_380_1365879995.227") :anon :lex :outer("cuid_9_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 160
    .param pmc _lex_param_0 
    .const 'Sub' $P5009 = 'cuid_379_1365879995.227' 
    capture_lex $P5009 
    .lex "$_", _lex_param_0 
    find_lex $P5002, "$target"
    get_who $P5001, $P5002
    set $S5001, _lex_param_0
    exists $I5001, $P5001[$S5001]
    unless $I5001 goto if28_else48 
.annotate 'line', 161
    find_lex $P5005, "$target"
    get_who $P5004, $P5005
    set $S5002, _lex_param_0
    set $P5003, $P5004[$S5002]
    store_lex "$target", $P5003
    set $P5008, $P5003
    goto if28_end49
  if28_else48:
    .const 'Sub' $P5006 = 'cuid_379_1365879995.227' 
    capture_lex $P5006
    $P5007 = $P5006()
    set $P5008, $P5007
  if28_end49:
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_379_1365879995.227") :anon :lex :outer("cuid_380_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 164
    .lex "$pkgtype", $P101 
    .lex "$pkg", $P102 
    .local pmc fb_tmp_6 
    .local pmc pkg_viv_tmp_2 
    .local pmc fb_tmp_7 
    .local pmc pkg_viv_tmp_3 
    .local pmc fb_tmp_8 
    .local pmc pkg_viv_tmp_4 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
    find_dynamic_lex $P5003, "%*HOW"
    unless_null $P5003, fallback52
    nqp_get_sc_object $P5005, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5004, $P5005
    set pkg_viv_tmp_2, $P5004
    set fb_tmp_6, pkg_viv_tmp_2
    repr_defined $I5002, fb_tmp_6
    unless $I5002 goto if30_else53 
    set $P5006, fb_tmp_6["%HOW"]
    set $P5008, $P5006
    goto if30_end54
  if30_else53:
    null $P5007
    set $P5008, $P5007
  if30_end54:
    unless_null $P5008, vivi_3155
    new $P5009, 'Hash'
    set pkg_viv_tmp_2["%HOW"], $P5009
    set $P5008, $P5009
  vivi_3155:
    unless_null $P5008, vivi_3256
    die "Contextual %*HOW not found"
    box $P5010, "Contextual %*HOW not found"
    set $P5008, $P5010
  vivi_3256:
    set $P5003, $P5008
  fallback52:
    exists $I5001, $P5003["package"]
    unless $I5001 goto if29_else50 
    find_dynamic_lex $P5012, "%*HOW"
    unless_null $P5012, fallback57
    nqp_get_sc_object $P5014, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5013, $P5014
    set pkg_viv_tmp_3, $P5013
    set fb_tmp_7, pkg_viv_tmp_3
    repr_defined $I5003, fb_tmp_7
    unless $I5003 goto if33_else58 
    set $P5015, fb_tmp_7["%HOW"]
    set $P5017, $P5015
    goto if33_end59
  if33_else58:
    null $P5016
    set $P5017, $P5016
  if33_end59:
    unless_null $P5017, vivi_3460
    new $P5018, 'Hash'
    set pkg_viv_tmp_3["%HOW"], $P5018
    set $P5017, $P5018
  vivi_3460:
    unless_null $P5017, vivi_3561
    die "Contextual %*HOW not found"
    box $P5019, "Contextual %*HOW not found"
    set $P5017, $P5019
  vivi_3561:
    set $P5012, $P5017
  fallback57:
    set $P5011, $P5012["package"]
    set $P5029, $P5011
    goto if29_end51
  if29_else50:
    find_dynamic_lex $P5021, "%*HOW"
    unless_null $P5021, fallback62
    nqp_get_sc_object $P5023, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5022, $P5023
    set pkg_viv_tmp_4, $P5022
    set fb_tmp_8, pkg_viv_tmp_4
    repr_defined $I5004, fb_tmp_8
    unless $I5004 goto if36_else63 
    set $P5024, fb_tmp_8["%HOW"]
    set $P5026, $P5024
    goto if36_end64
  if36_else63:
    null $P5025
    set $P5026, $P5025
  if36_end64:
    unless_null $P5026, vivi_3765
    new $P5027, 'Hash'
    set pkg_viv_tmp_4["%HOW"], $P5027
    set $P5026, $P5027
  vivi_3765:
    unless_null $P5026, vivi_3866
    die "Contextual %*HOW not found"
    box $P5028, "Contextual %*HOW not found"
    set $P5026, $P5028
  vivi_3866:
    set $P5021, $P5026
  fallback62:
    set $P5020, $P5021["knowhow"]
    set $P5029, $P5020
  if29_end51:
    set $P101, $P5029
.annotate 'line', 168
    find_lex $P5030, "$_"
    $P5031 = $P101."new_type"($P5030 :named("name"))
    set $P102, $P5031
.annotate 'line', 169
    get_how $P5032, $P102
    $P5032."compose"($P102)
    find_lex $P5034, "$target"
    get_who $P5033, $P5034
    find_lex $P5035, "$_"
    set $S5001, $P5035
    set $P5033[$S5001], $P102
    store_lex "$target", $P102
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "install_lexical_symbol" :subid("cuid_10_1365879995.227") :anon :lex :outer("cuid_376_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 180
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "$fixup", $P101 
    .lex "self", _lex_param_0 
    .lex "$block", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$obj", _lex_param_3 
    .local pmc fb_tmp_9 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
.annotate 'line', 182
    _lex_param_1."symbol"(_lex_param_2, "lexical" :named("scope"), _lex_param_3 :named("value"))
.annotate 'line', 183
    set fb_tmp_9, _lex_param_1
    repr_defined $I5001, fb_tmp_9
    unless $I5001 goto if39_else70 
    set $P5002, fb_tmp_9[0]
    set $P5004, $P5002
    goto if39_end71
  if39_else70:
    null $P5003
    set $P5004, $P5003
  if39_end71:
    unless_null $P5004, vivi_4072
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_4072:
    nqp_get_sc_object $P5006, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5007 = $P5006."new"("lexical" :named("scope"), _lex_param_2 :named("name"), "var" :named("decl"))
    $P5004."push"($P5007)
.annotate 'line', 186
    nqp_get_sc_object $P5008, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 189
    nqp_get_sc_object $P5009, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 52
    $P5010 = $P5009."new"(_lex_param_2 :named("value"))
.annotate 'line', 190
    nqp_get_sc_object $P5011, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 61
    $P5012 = $P5011."new"(_lex_param_3 :named("value"))
    $P5013 = $P5008."new"(_lex_param_1, $P5010, $P5012, "setstaticlex" :named("op"))
    set $P101, $P5013
.annotate 'line', 192
    nqp_decontainerize $P5014, _lex_param_0
    $P5015 = $P5014."add_fixup_task"($P101 :named("deserialize_past"), $P101 :named("fixup_past"))
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "install_package_routine" :subid("cuid_11_1365879995.227") :anon :lex :outer("cuid_376_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 197
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "$fixup", $P101 
    .lex "self", _lex_param_0 
    .lex "$package", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$past_block", _lex_param_3 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
.annotate 'line', 198
    nqp_get_sc_object $P5002, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 200
    nqp_get_sc_object $P5003, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    nqp_get_sc_object $P5004, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 61
    $P5005 = $P5004."new"(_lex_param_1 :named("value"))
    $P5006 = $P5003."new"($P5005, "who" :named("op"))
.annotate 'line', 201
    nqp_get_sc_object $P5007, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 52
    set $S5001, _lex_param_2
    $P5008 = $P5007."new"($S5001 :named("value"))
.annotate 'line', 202
    nqp_get_sc_object $P5009, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 57
    $P5010 = $P5009."new"(_lex_param_3 :named("value"))
    $P5011 = $P5002."new"($P5006, $P5008, $P5010, "bindkey" :named("op"))
    set $P101, $P5011
.annotate 'line', 204
    nqp_decontainerize $P5012, _lex_param_0
    $P5013 = $P5012."add_fixup_task"($P101 :named("deserialize_past"), $P101 :named("fixup_past"))
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "create_code" :subid("cuid_17_1365879995.227") :anon :lex :outer("cuid_376_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 209
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 :named("code_type_name") :optional 
    .param int haz_param_1 :opt_flag 
    .const 'Sub' $P5084 = 'cuid_12_1365879995.227' 
    capture_lex $P5084 
    .const 'Sub' $P5084 = 'cuid_384_1365879995.227' 
    capture_lex $P5084 
    .const 'Sub' $P5084 = 'cuid_385_1365879995.227' 
    capture_lex $P5084 
    .const 'Sub' $P5084 = 'cuid_386_1365879995.227' 
    capture_lex $P5084 
    .lex "$code_type", $P101 
    .lex "$have_code_type", $P102 
    .lex "$stub_code", $P103 
    .lex "$code_obj", $P104 
    .lex "$fixups", $P105 
    .lex "$dummy", $P106 
    .lex "$code_ref_idx", $P107 
    .lex "self", _lex_param_0 
    .lex "$past", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$is_dispatcher", _lex_param_3 
    .lex "$code_type_name", _lex_param_4 
    .local pmc fb_tmp_10 
    .local pmc fb_tmp_11 
    .local pmc fb_tmp_25 
    .local pmc fb_tmp_26 
    if haz_param_1, default165
    box $P5083, "NQPRoutine"
    set _lex_param_4, $P5083
  default165:
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P105, $P5005
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P106, $P5006
    nqp_get_sc_object $P5007, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P107, $P5007
    root_new $P108, ['parrot';'Continuation']
    set_label $P108, lexotic_73
    .lex "RETURN", $P108
    box $P5008, 0
    set $P102, $P5008
    new $P5031, 'ExceptionHandler'
    set_label $P5031, catch_handler_4886
    $P5031.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5031
.annotate 'line', 213
.annotate 'line', 214
    nqp_decontainerize $P5009, _lex_param_0
    new $P5010, 'QRPA'
    push $P5010, _lex_param_4
    $P5011 = $P5009."find_sym"($P5010)
    set $P101, $P5011
.annotate 'line', 215
    find_dynamic_lex $P5013, "$*PACKAGE"
    unless_null $P5013, fallback75
    nqp_get_sc_object $P5015, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5014, $P5015
    set fb_tmp_10, $P5014
    repr_defined $I5002, fb_tmp_10
    unless $I5002 goto if41_else76 
    set $P5016, fb_tmp_10["$PACKAGE"]
    set $P5018, $P5016
    goto if41_end77
  if41_else76:
    null $P5017
    set $P5018, $P5017
  if41_end77:
    unless_null $P5018, vivi_4278
    nqp_get_sc_object $P5019, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5018, $P5019
  vivi_4278:
    unless_null $P5018, vivi_4379
    die "Contextual $*PACKAGE not found"
    box $P5020, "Contextual $*PACKAGE not found"
    set $P5018, $P5020
  vivi_4379:
    set $P5013, $P5018
  fallback75:
    get_how $P5012, $P5013
    find_dynamic_lex $P5021, "$*PACKAGE"
    unless_null $P5021, fallback80
    nqp_get_sc_object $P5023, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5022, $P5023
    set fb_tmp_11, $P5022
    repr_defined $I5003, fb_tmp_11
    unless $I5003 goto if44_else81 
    set $P5024, fb_tmp_11["$PACKAGE"]
    set $P5026, $P5024
    goto if44_end82
  if44_else81:
    null $P5025
    set $P5026, $P5025
  if44_end82:
    unless_null $P5026, vivi_4583
    nqp_get_sc_object $P5027, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5026, $P5027
  vivi_4583:
    unless_null $P5026, vivi_4684
    die "Contextual $*PACKAGE not found"
    box $P5028, "Contextual $*PACKAGE not found"
    set $P5026, $P5028
  vivi_4684:
    set $P5021, $P5026
  fallback80:
    $P5029 = $P5012."name"($P5021)
    set $S5001, $P5029
    set $S5002, _lex_param_4
    isne $I5001, $S5001, $S5002
    box $P5030, $I5001
    set $P102, $P5030
    set $P5032, $P102
    pop_eh 
    goto skip_handler_4785
  catch_handler_4886:
    .get_results ($P5031) 
    set $I10001, 1
    set $P5031["handled"], $I10001
    nqp_get_sc_object $P10001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    finalize $P5031
    pop_upto_eh $P5031
    pop_eh 
    set $P5032, $P10001
    goto skip_handler_4785
  skip_handler_4785:
    .const 'Sub' $P5034 = 'cuid_12_1365879995.227' 
    capture_lex $P5034
    newclosure $P5033, $P5034
    set $P103, $P5033
    unless $P102 goto if78_end142 
.annotate 'line', 263
    repr_instance_of $P5035, $P101
    set $P104, $P5035
  if78_end142:
.annotate 'line', 268
    nqp_get_sc_object $P5036, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 93
    $P5037 = $P5036."new"()
    set $P105, $P5037
    set fb_tmp_25, _lex_param_1
    repr_defined $I5005, fb_tmp_25
    unless $I5005 goto if80_else145 
    set $P5038, fb_tmp_25["compile_time_dummy"]
    set $P5040, $P5038
    goto if80_end146
  if80_else145:
    null $P5039
    set $P5040, $P5039
  if80_end146:
    unless_null $P5040, vivi_81147
    nqp_get_sc_object $P5041, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5040, $P5041
  vivi_81147:
    defined $I5004, $P5040
    unless $I5004 goto if79_else143 
.annotate 'line', 271
    set fb_tmp_26, _lex_param_1
    repr_defined $I5006, fb_tmp_26
    unless $I5006 goto if82_else148 
    set $P5042, fb_tmp_26["compile_time_dummy"]
    set $P5044, $P5042
    goto if82_end149
  if82_else148:
    null $P5043
    set $P5044, $P5043
  if82_end149:
    unless_null $P5044, vivi_83150
    nqp_get_sc_object $P5045, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5044, $P5045
  vivi_83150:
    set $P106, $P5044
    goto if79_end144
  if79_else143:
.annotate 'line', 274
    nqp_fresh_stub $P5046, $P103
    set $P106, $P5046
    set $S5003, _lex_param_2
    assign $P106, $S5003
    setprop $P106, 'STATIC_CODE_REF', $P106
    setprop $P106, 'COMPILER_STUB', $P106
.annotate 'line', 282
    nqp_decontainerize $P5047, _lex_param_0
    $P5048 = $P5047."add_root_code_ref"($P106, _lex_param_1)
    set $P107, $P5048
    nqp_decontainerize $P5049, _lex_param_0
    nqp_get_sc_object $P5050, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 3
    repr_get_attr_obj $P5051, $P5049, $P5050, "%!code_stub_sc_idx"
.annotate 'line', 283
    $P5052 = _lex_param_1."cuid"()
    set $S5004, $P5052
    set $P5051[$S5004], $P107
    set _lex_param_1["compile_time_dummy"], $P106
    set $P5064, $P102
    unless $P102 goto if84_end152 
.annotate 'line', 289
    nqp_decontainerize $P5053, _lex_param_0
    nqp_get_sc_object $P5054, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 3
    repr_get_attr_obj $P5055, $P5053, $P5054, "%!code_object_fixup_list"
.annotate 'line', 290
    $P5056 = _lex_param_1."cuid"()
    set $S5005, $P5056
    set $P5055[$S5005], $P105
.annotate 'line', 291
    nqp_decontainerize $P5057, _lex_param_0
    $P5058 = $P5057."is_precompilation_mode"()
    unless $P5058 goto if85_else153 
    .const 'Sub' $P5059 = 'cuid_384_1365879995.227' 
    capture_lex $P5059
    $P5060 = $P5059()
    set $P5063, $P5060
    goto if85_end154
  if85_else153:
    .const 'Sub' $P5061 = 'cuid_385_1365879995.227' 
    capture_lex $P5061
    $P5062 = $P5061()
    set $P5063, $P5062
  if85_end154:
    set $P5064, $P5063
  if84_end152:
  if79_end144:
.annotate 'line', 331
    nqp_decontainerize $P5065, _lex_param_0
    $P5065."add_fixup_task"($P105 :named("fixup_past"))
    unless $P102 goto if90_else161 
    .const 'Sub' $P5066 = 'cuid_386_1365879995.227' 
    capture_lex $P5066
    $P5067 = $P5066()
    set $P5082, $P5067
    goto if90_end162
  if90_else161:
.annotate 'line', 370
.annotate 'line', 373
    nqp_get_sc_object $P5068, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 375
    nqp_get_sc_object $P5069, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 377
    nqp_get_sc_object $P5070, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 52
    nqp_decontainerize $P5071, _lex_param_0
    $P5072 = $P5071."handle"()
    $P5073 = $P5070."new"($P5072 :named("value"))
.annotate 'line', 378
    nqp_get_sc_object $P5074, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 42
    $P5075 = $P5074."new"($P107 :named("value"))
    $P5076 = $P5069."new"($P5073, $P5075, "scgetcode" :named("op"))
.annotate 'line', 380
    nqp_get_sc_object $P5077, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 57
    $P5078 = $P5077."new"(_lex_param_1 :named("value"))
    $P5079 = $P5068."new"($P5076, $P5078, "replacecoderef" :named("op"))
    $P105."push"($P5079)
    find_lex $P5080, "RETURN"
    $P5081 = $P5080($P106)
    set $P5082, $P5081
  if90_end162:
    goto lexotic_74
  lexotic_73:
    .get_results ($P5082)
  lexotic_74:
    .return ($P5082) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_12_1365879995.227") :anon :lex :outer("cuid_17_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 222
    .param pmc _lex_param_0 :slurpy 
    .param pmc _lex_param_1 :slurpy :named 
    .const 'Sub' $P5027 = 'cuid_383_1365879995.227' 
    capture_lex $P5027 
    .lex "$compiler", $P101 
    .lex "$compiled", $P102 
    .lex "@allcodes", $P103 
    .lex "$c", $P104 
    .lex "$i", $P105 
    .lex "$mainline", $P106 
    .lex "@args", _lex_param_0 
    .lex "%named", _lex_param_1 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
    new $P5003, 'QRPA'
    set $P103, $P5003
    nqp_get_sc_object $P5004, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P105, $P5005
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P106, $P5006
.annotate 'line', 224
    find_lex $P5007, "$past"
    find_lex $P5009, "self"
    nqp_decontainerize $P5008, $P5009
    $P5010 = $P5008."libs"()
    $P5007."unshift"($P5010)
    compreg $P5011, "nqp"
    set $P101, $P5011
.annotate 'line', 226
.annotate 'line', 227
    nqp_get_sc_object $P5012, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 114
    find_lex $P5013, "$past"
    $P5014 = $P5012."new"($P5013, "nqp" :named("hll"))
    $P5015 = $P101."compile"($P5014, "ast" :named("from"))
    set $P102, $P5015
.annotate 'line', 231
    $P5016 = $P101."backend"()
    $P5017 = $P5016."compunit_coderefs"($P102)
    set $P103, $P5017
    elements $I5001, $P103
    box $P5018, $I5001
    set $P104, $P5018
    box $P5019, 0
    set $P105, $P5019
  while49_test87:
    set $N5001, $P105
    set $N5002, $P104
    islt $I5002, $N5001, $N5002
    box $P5023, $I5002
    set $P5022, $P5023
    unless $I5002 goto while49_done91 
  while49_redo89:
    .const 'Sub' $P5020 = 'cuid_383_1365879995.227' 
    capture_lex $P5020
    $P5021 = $P5020()
    set $P5022, $P5021
    goto while49_test87 
  while49_done91:
.annotate 'line', 257
    $P5024 = $P101."backend"()
    $P5025 = $P5024."compunit_mainline"($P102)
    set $P106, $P5025
.annotate 'line', 258
    $P5026 = $P106(_lex_param_0 :flat, _lex_param_1 :flat :named)
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_383_1365879995.227") :anon :lex :outer("cuid_12_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 234
    .const 'Sub' $P5017 = 'cuid_382_1365879995.227' 
    capture_lex $P5017 
    .lex "$subid", $P101 
    .local pmc fb_tmp_12 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    find_lex $P5002, "@allcodes"
    set fb_tmp_12, $P5002
    repr_defined $I5001, fb_tmp_12
    unless $I5001 goto if50_else92 
    find_lex $P5004, "$i"
    set $I5002, $P5004
    set $P5003, fb_tmp_12[$I5002]
    set $P5006, $P5003
    goto if50_end93
  if50_else92:
    null $P5005
    set $P5006, $P5005
  if50_end93:
    unless_null $P5006, vivi_5194
    nqp_get_sc_object $P5007, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5006, $P5007
  vivi_5194:
    $P5008 = $P5006."get_subid"()
    set $P101, $P5008
    find_lex $P5010, "self"
    nqp_decontainerize $P5009, $P5010
    nqp_get_sc_object $P5011, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 3
    repr_get_attr_obj $P5012, $P5009, $P5011, "%!code_objects_to_fix_up"
    set $S5001, $P101
    exists $I5003, $P5012[$S5001]
    unless $I5003 goto if52_end96 
    .const 'Sub' $P5013 = 'cuid_382_1365879995.227' 
    capture_lex $P5013
    $P5014 = $P5013()
  if52_end96:
    find_lex $P5015, "$i"
    set $N5002, $P5015
    set $N5003, 1
    add $N5001, $N5002, $N5003
    box $P5016, $N5001
    store_lex "$i", $P5016
    .return ($P5016) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_382_1365879995.227") :anon :lex :outer("cuid_383_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 236
    .const 'Sub' $P5089 = 'cuid_381_1365879995.227' 
    capture_lex $P5089 
    .lex "$static", $P101 
    .lex "$fixup_stmts", $P102 
    .local pmc fb_tmp_13 
    .local pmc fb_tmp_14 
    .local pmc fb_tmp_15 
    .local pmc fb_tmp_16 
    .local pmc fb_tmp_17 
    .local pmc fb_tmp_21 
    .local pmc fb_tmp_22 
    .local pmc fb_tmp_23 
    .local pmc fb_tmp_24 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
.annotate 'line', 240
    find_lex $P5004, "self"
    nqp_decontainerize $P5003, $P5004
    nqp_get_sc_object $P5005, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 3
    repr_get_attr_obj $P5006, $P5003, $P5005, "%!code_objects_to_fix_up"
    set fb_tmp_13, $P5006
    repr_defined $I5001, fb_tmp_13
    unless $I5001 goto if53_else97 
    find_lex $P5008, "$subid"
    set $S5001, $P5008
    set $P5007, fb_tmp_13[$S5001]
    set $P5010, $P5007
    goto if53_end98
  if53_else97:
    null $P5009
    set $P5010, $P5009
  if53_end98:
    unless_null $P5010, vivi_5499
    nqp_get_sc_object $P5011, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5010, $P5011
  vivi_5499:
    $P5012 = $P5010."shift"()
    set $P101, $P5012
    find_lex $P5014, "self"
    nqp_decontainerize $P5013, $P5014
    nqp_get_sc_object $P5015, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 3
    repr_get_attr_obj $P5016, $P5013, $P5015, "%!code_object_types"
    set fb_tmp_14, $P5016
    repr_defined $I5002, fb_tmp_14
    unless $I5002 goto if55_else100 
    find_lex $P5018, "$subid"
    set $S5002, $P5018
    set $P5017, fb_tmp_14[$S5002]
    set $P5020, $P5017
    goto if55_end101
  if55_else100:
    null $P5019
    set $P5020, $P5019
  if55_end101:
    unless_null $P5020, vivi_56102
    nqp_get_sc_object $P5021, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5020, $P5021
  vivi_56102:
    find_lex $P5022, "@allcodes"
    set fb_tmp_15, $P5022
    repr_defined $I5003, fb_tmp_15
    unless $I5003 goto if57_else103 
    find_lex $P5024, "$i"
    set $I5004, $P5024
    set $P5023, fb_tmp_15[$I5004]
    set $P5026, $P5023
    goto if57_end104
  if57_else103:
    null $P5025
    set $P5026, $P5025
  if57_end104:
    unless_null $P5026, vivi_58105
    nqp_get_sc_object $P5027, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5026, $P5027
  vivi_58105:
    setattribute $P101, $P5020, "$!do", $P5026
    find_lex $P5029, "self"
    nqp_decontainerize $P5028, $P5029
    nqp_get_sc_object $P5030, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 3
    repr_get_attr_obj $P5031, $P5028, $P5030, "%!code_object_types"
    set fb_tmp_16, $P5031
    repr_defined $I5005, fb_tmp_16
    unless $I5005 goto if59_else106 
    find_lex $P5033, "$subid"
    set $S5003, $P5033
    set $P5032, fb_tmp_16[$S5003]
    set $P5035, $P5032
    goto if59_end107
  if59_else106:
    null $P5034
    set $P5035, $P5034
  if59_end107:
    unless_null $P5035, vivi_60108
    nqp_get_sc_object $P5036, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5035, $P5036
  vivi_60108:
    null $P5037
    setattribute $P101, $P5035, "$!clone_callback", $P5037
    find_lex $P5042, "self"
    nqp_decontainerize $P5041, $P5042
    nqp_get_sc_object $P5043, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 3
    repr_get_attr_obj $P5044, $P5041, $P5043, "%!code_objects_to_fix_up"
    set fb_tmp_17, $P5044
    repr_defined $I5006, fb_tmp_17
    unless $I5006 goto if61_else109 
    find_lex $P5046, "$subid"
    set $S5004, $P5046
    set $P5045, fb_tmp_17[$S5004]
    set $P5048, $P5045
    goto if61_end110
  if61_else109:
    null $P5047
    set $P5048, $P5047
  if61_end110:
    unless_null $P5048, vivi_62111
    nqp_get_sc_object $P5049, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5048, $P5049
  vivi_62111:
    set $P5038, $P5048
    iter $P5040, $P5048
  for_next121:
    unless $P5040, for_done123
    shift $P5051, $P5040
  for_redo122:
    .const 'Sub' $P5050 = 'cuid_381_1365879995.227' 
    capture_lex $P5050
    $P5038 = $P5050($P5051)
    goto for_next121
  for_done123:
    find_lex $P5052, "@allcodes"
    set fb_tmp_21, $P5052
    repr_defined $I5007, fb_tmp_21
    unless $I5007 goto if69_else124 
    find_lex $P5054, "$i"
    set $I5008, $P5054
    set $P5053, fb_tmp_21[$I5008]
    set $P5056, $P5053
    goto if69_end125
  if69_else124:
    null $P5055
    set $P5056, $P5055
  if69_end125:
    unless_null $P5056, vivi_70126
    nqp_get_sc_object $P5057, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5056, $P5057
  vivi_70126:
    setprop $P5056, 'STATIC_CODE_REF', $P5056
.annotate 'line', 248
    find_lex $P5059, "self"
    nqp_decontainerize $P5058, $P5059
    find_lex $P5061, "self"
    nqp_decontainerize $P5060, $P5061
    nqp_get_sc_object $P5062, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 3
    repr_get_attr_obj $P5063, $P5060, $P5062, "%!code_stub_sc_idx"
    set fb_tmp_22, $P5063
    repr_defined $I5009, fb_tmp_22
    unless $I5009 goto if71_else127 
    find_lex $P5065, "$subid"
    set $S5005, $P5065
    set $P5064, fb_tmp_22[$S5005]
    set $P5067, $P5064
    goto if71_end128
  if71_else127:
    null $P5066
    set $P5067, $P5066
  if71_end128:
    unless_null $P5067, vivi_72129
    nqp_get_sc_object $P5068, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5067, $P5068
  vivi_72129:
    find_lex $P5069, "@allcodes"
    set fb_tmp_23, $P5069
    repr_defined $I5010, fb_tmp_23
    unless $I5010 goto if73_else130 
    find_lex $P5071, "$i"
    set $I5011, $P5071
    set $P5070, fb_tmp_23[$I5011]
    set $P5073, $P5070
    goto if73_end131
  if73_else130:
    null $P5072
    set $P5073, $P5072
  if73_end131:
    unless_null $P5073, vivi_74132
    nqp_get_sc_object $P5074, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5073, $P5074
  vivi_74132:
    $P5058."update_root_code_ref"($P5067, $P5073)
    find_lex $P5076, "self"
    nqp_decontainerize $P5075, $P5076
    nqp_get_sc_object $P5077, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 3
    repr_get_attr_obj $P5078, $P5075, $P5077, "%!code_object_fixup_list"
    set fb_tmp_24, $P5078
    repr_defined $I5012, fb_tmp_24
    unless $I5012 goto if75_else133 
    find_lex $P5080, "$subid"
    set $S5006, $P5080
    set $P5079, fb_tmp_24[$S5006]
    set $P5082, $P5079
    goto if75_end134
  if75_else133:
    null $P5081
    set $P5082, $P5081
  if75_end134:
    unless_null $P5082, vivi_76135
    nqp_get_sc_object $P5083, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5082, $P5083
  vivi_76135:
    set $P102, $P5082
    new $P5087, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5087, while77_handlers139
    push_eh $P5087
  while77_test136:
    $P5084 = $P102."list"()
    set $N5001, $P5084
    box $P5088, $N5001
    set $P5086, $P5088
    unless $N5001 goto while77_done140 
  while77_redo138:
.annotate 'line', 252
    $P5085 = $P102."shift"()
    set $P5086, $P5085
    goto while77_test136 
  while77_handlers139:
    .get_results ($P5087)
    pop_upto_eh $P5087
    getattribute $P5087, $P5087, 'type'
    eq $P5087, .CONTROL_LOOP_NEXT, while77_test136
    eq $P5087, .CONTROL_LOOP_REDO, while77_redo138
  while77_done140:
    pop_eh 
    .return ($P5086) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_381_1365879995.227") :anon :lex :outer("cuid_382_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 243
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_18 
    .local pmc fb_tmp_19 
    .local pmc fb_tmp_20 
    find_lex $P5002, "self"
    nqp_decontainerize $P5001, $P5002
    nqp_get_sc_object $P5003, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 3
    repr_get_attr_obj $P5004, $P5001, $P5003, "%!code_object_types"
    set fb_tmp_18, $P5004
    repr_defined $I5001, fb_tmp_18
    unless $I5001 goto if63_else112 
    find_lex $P5006, "$subid"
    set $S5001, $P5006
    set $P5005, fb_tmp_18[$S5001]
    set $P5008, $P5005
    goto if63_end113
  if63_else112:
    null $P5007
    set $P5008, $P5007
  if63_end113:
    unless_null $P5008, vivi_64114
    nqp_get_sc_object $P5009, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5008, $P5009
  vivi_64114:
    find_lex $P5011, "@allcodes"
    set fb_tmp_19, $P5011
    repr_defined $I5002, fb_tmp_19
    unless $I5002 goto if65_else115 
    find_lex $P5013, "$i"
    set $I5003, $P5013
    set $P5012, fb_tmp_19[$I5003]
    set $P5015, $P5012
    goto if65_end116
  if65_else115:
    null $P5014
    set $P5015, $P5014
  if65_end116:
    unless_null $P5015, vivi_66117
    nqp_get_sc_object $P5016, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5015, $P5016
  vivi_66117:
    repr_clone $P5010, $P5015
    setattribute _lex_param_0, $P5008, "$!do", $P5010
    find_lex $P5018, "self"
    nqp_decontainerize $P5017, $P5018
    nqp_get_sc_object $P5019, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 3
    repr_get_attr_obj $P5020, $P5017, $P5019, "%!code_object_types"
    set fb_tmp_20, $P5020
    repr_defined $I5004, fb_tmp_20
    unless $I5004 goto if67_else118 
    find_lex $P5022, "$subid"
    set $S5002, $P5022
    set $P5021, fb_tmp_20[$S5002]
    set $P5024, $P5021
    goto if67_end119
  if67_else118:
    null $P5023
    set $P5024, $P5023
  if67_end119:
    unless_null $P5024, vivi_68120
    nqp_get_sc_object $P5025, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5024, $P5025
  vivi_68120:
    null $P5026
    setattribute _lex_param_0, $P5024, "$!clone_callback", $P5026
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_384_1365879995.227") :anon :lex :outer("cuid_17_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 291
    .const 'Sub' $P5012 = 'cuid_13_1365879995.227' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_14_1365879995.227' 
    capture_lex $P5012 
    .lex "$cb", $P101 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    .const 'Sub' $P5003 = 'cuid_13_1365879995.227' 
    capture_lex $P5003
    newclosure $P5002, $P5003
    set $P101, $P5002
    find_lex $P5004, "$code_obj"
    find_lex $P5005, "$code_type"
    setattribute $P5004, $P5005, "$!clone_callback", $P101
    find_lex $P5007, "self"
    nqp_decontainerize $P5006, $P5007
    nqp_get_sc_object $P5008, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 3
    repr_get_attr_obj $P5009, $P5006, $P5008, "@!clearup_tasks"
    .const 'Sub' $P5011 = 'cuid_14_1365879995.227' 
    capture_lex $P5011
    newclosure $P5010, $P5011
    push $P5009, $P5010
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_13_1365879995.227") :anon :lex :outer("cuid_384_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 292
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$do", $P101 
    .lex "$orig", _lex_param_0 
    .lex "$clone", _lex_param_1 
    .lex "$code_obj", _lex_param_2 
    .local pmc fb_tmp_27 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
.annotate 'line', 293
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    nqp_get_sc_object $P5004, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 3
    repr_get_attr_obj $P5005, $P5002, $P5004, "%!code_objects_to_fix_up"
    set fb_tmp_27, $P5005
    repr_defined $I5001, fb_tmp_27
    unless $I5001 goto if86_else155 
    find_lex $P5007, "$past"
    $P5008 = $P5007."cuid"()
    set $S5001, $P5008
    set $P5006, fb_tmp_27[$S5001]
    set $P5010, $P5006
    goto if86_end156
  if86_else155:
    null $P5009
    set $P5010, $P5009
  if86_end156:
    unless_null $P5010, vivi_87157
    nqp_get_sc_object $P5011, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5010, $P5011
  vivi_87157:
    $P5010."push"(_lex_param_2)
    find_lex $P5012, "$code_type"
    null $P5013
    setattribute _lex_param_2, $P5012, "$!clone_callback", $P5013
    find_lex $P5015, "$code_type"
    getattribute $P5014, _lex_param_2, $P5015, "$!do"
    set $P101, $P5014
    setprop $P101, 'COMPILER_STUB', $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_14_1365879995.227") :anon :lex :outer("cuid_384_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 299

    find_lex $P5001, "$code_obj"
    find_lex $P5002, "$code_type"
    null $P5003
    setattribute $P5001, $P5002, "$!clone_callback", $P5003
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_385_1365879995.227") :anon :lex :outer("cuid_17_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 303
    .const 'Sub' $P5012 = 'cuid_15_1365879995.227' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_16_1365879995.227' 
    capture_lex $P5012 
    .lex "$cb", $P101 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    .const 'Sub' $P5003 = 'cuid_15_1365879995.227' 
    capture_lex $P5003
    newclosure $P5002, $P5003
    set $P101, $P5002
    find_lex $P5004, "$code_obj"
    find_lex $P5005, "$code_type"
    setattribute $P5004, $P5005, "$!clone_callback", $P101
    find_lex $P5007, "self"
    nqp_decontainerize $P5006, $P5007
    nqp_get_sc_object $P5008, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 3
    repr_get_attr_obj $P5009, $P5006, $P5008, "@!clearup_tasks"
    .const 'Sub' $P5011 = 'cuid_16_1365879995.227' 
    capture_lex $P5011
    newclosure $P5010, $P5011
    push $P5009, $P5010
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_15_1365879995.227") :anon :lex :outer("cuid_385_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 304
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$orig", _lex_param_0 
    .lex "$clone", _lex_param_1 
    .lex "$code_obj", _lex_param_2 
    .local pmc fb_tmp_28 
.annotate 'line', 306
    find_lex $P5002, "self"
    nqp_decontainerize $P5001, $P5002
    $P5001."add_object"(_lex_param_2)
.annotate 'line', 307
    find_lex $P5003, "$fixups"
    nqp_get_sc_object $P5004, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 309
    nqp_get_sc_object $P5005, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 311
    nqp_get_sc_object $P5006, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 61
    $P5007 = $P5006."new"(_lex_param_2 :named("value"))
.annotate 'line', 312
    nqp_get_sc_object $P5008, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 61
    find_lex $P5009, "$code_type"
    $P5010 = $P5008."new"($P5009 :named("value"))
.annotate 'line', 313
    nqp_get_sc_object $P5011, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 52
    $P5012 = $P5011."new"("$!do" :named("value"))
.annotate 'line', 314
    nqp_get_sc_object $P5013, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    nqp_get_sc_object $P5014, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 57
    find_lex $P5015, "$past"
    $P5016 = $P5014."new"($P5015 :named("value"))
    $P5017 = $P5013."new"($P5016, "clone" :named("op"))
    $P5018 = $P5005."new"($P5007, $P5010, $P5012, $P5017, "bindattr" :named("op"))
.annotate 'line', 316
    nqp_get_sc_object $P5019, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 61
    $P5020 = $P5019."new"(_lex_param_2 :named("value"))
    $P5021 = $P5004."new"($P5018, $P5020, "setcodeobj" :named("op"))
    $P5003."push"($P5021)
.annotate 'line', 320
    find_lex $P5023, "self"
    nqp_decontainerize $P5022, $P5023
    nqp_get_sc_object $P5024, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 3
    repr_get_attr_obj $P5025, $P5022, $P5024, "%!code_objects_to_fix_up"
    set fb_tmp_28, $P5025
    repr_defined $I5001, fb_tmp_28
    unless $I5001 goto if88_else158 
    find_lex $P5027, "$past"
    $P5028 = $P5027."cuid"()
    set $S5001, $P5028
    set $P5026, fb_tmp_28[$S5001]
    set $P5030, $P5026
    goto if88_end159
  if88_else158:
    null $P5029
    set $P5030, $P5029
  if88_end159:
    unless_null $P5030, vivi_89160
    nqp_get_sc_object $P5031, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5030, $P5031
  vivi_89160:
    $P5032 = $P5030."push"(_lex_param_2)
    .return ($P5032) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_16_1365879995.227") :anon :lex :outer("cuid_385_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 323

    find_lex $P5001, "$code_obj"
    find_lex $P5002, "$code_type"
    null $P5003
    setattribute $P5001, $P5002, "$!clone_callback", $P5003
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_386_1365879995.227") :anon :lex :outer("cuid_17_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 335
    .lex "$slot", $P101 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    find_lex $P5002, "$code_obj"
    find_lex $P5003, "$code_type"
    find_lex $P5004, "$dummy"
    setattribute $P5002, $P5003, "$!do", $P5004
    find_lex $P5005, "$is_dispatcher"
    unless $P5005 goto if91_end164 
    find_lex $P5006, "$code_obj"
    find_lex $P5007, "$code_type"
    new $P5008, 'QRPA'
    setattribute $P5006, $P5007, "$!dispatchees", $P5008
  if91_end164:
.annotate 'line', 340
    find_lex $P5010, "self"
    nqp_decontainerize $P5009, $P5010
    find_lex $P5011, "$code_obj"
    $P5012 = $P5009."add_object"($P5011)
    set $P101, $P5012
.annotate 'line', 343
    find_lex $P5014, "self"
    nqp_decontainerize $P5013, $P5014
.annotate 'line', 344
    nqp_get_sc_object $P5015, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 346
    nqp_get_sc_object $P5016, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 57
    find_lex $P5017, "$past"
    $P5018 = $P5016."new"($P5017 :named("value"))
.annotate 'line', 347
    nqp_get_sc_object $P5019, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 61
    find_lex $P5020, "$code_obj"
    $P5021 = $P5019."new"($P5020 :named("value"))
    $P5022 = $P5015."new"($P5018, $P5021, "setcodeobj" :named("op"))
    $P5013."add_fixup_task"($P5022 :named("deserialize_past"))
.annotate 'line', 351
    find_lex $P5023, "$fixups"
    nqp_get_sc_object $P5024, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 353
    nqp_get_sc_object $P5025, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 61
    find_lex $P5026, "$code_obj"
    $P5027 = $P5025."new"($P5026 :named("value"))
.annotate 'line', 354
    nqp_get_sc_object $P5028, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 61
    find_lex $P5029, "$code_type"
    $P5030 = $P5028."new"($P5029 :named("value"))
.annotate 'line', 355
    nqp_get_sc_object $P5031, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 52
    $P5032 = $P5031."new"("$!do" :named("value"))
.annotate 'line', 356
    nqp_get_sc_object $P5033, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 57
    find_lex $P5034, "$past"
    $P5035 = $P5033."new"($P5034 :named("value"))
    $P5036 = $P5024."new"($P5027, $P5030, $P5032, $P5035, "bindattr" :named("op"))
    $P5023."push"($P5036)
.annotate 'line', 358
    find_lex $P5037, "$fixups"
    nqp_get_sc_object $P5038, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 360
    nqp_get_sc_object $P5039, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 57
    find_lex $P5040, "$past"
    $P5041 = $P5039."new"($P5040 :named("value"))
.annotate 'line', 361
    nqp_get_sc_object $P5042, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 61
    find_lex $P5043, "$code_obj"
    $P5044 = $P5042."new"($P5043 :named("value"))
    $P5045 = $P5038."new"($P5041, $P5044, "setcodeobj" :named("op"))
    $P5037."push"($P5045)
    find_lex $P5047, "self"
    nqp_decontainerize $P5046, $P5047
    nqp_get_sc_object $P5048, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 3
    repr_get_attr_obj $P5049, $P5046, $P5048, "%!code_objects_to_fix_up"
.annotate 'line', 365
    find_lex $P5050, "$past"
    $P5051 = $P5050."cuid"()
    set $S5001, $P5051
    new $P5052, 'QRPA'
    find_lex $P5053, "$code_obj"
    push $P5052, $P5053
    set $P5049[$S5001], $P5052
    find_lex $P5055, "self"
    nqp_decontainerize $P5054, $P5055
    nqp_get_sc_object $P5056, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 3
    repr_get_attr_obj $P5057, $P5054, $P5056, "%!code_object_types"
.annotate 'line', 366
    find_lex $P5058, "$past"
    $P5059 = $P5058."cuid"()
    set $S5002, $P5059
    find_lex $P5060, "$code_type"
    set $P5057[$S5002], $P5060
    find_lex $P5061, "$code_obj"
    .return ($P5061) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_create_mo" :subid("cuid_18_1365879995.227") :anon :lex :outer("cuid_376_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 388
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("name") :optional 
    .param int haz_param_2 :opt_flag 
    .param pmc _lex_param_3 :named("repr") :optional 
    .param int haz_param_3 :opt_flag 
    .lex "%args", $P101 
    .lex "$mo", $P102 
    .lex "self", _lex_param_0 
    .lex "$how", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$repr", _lex_param_3 
    if haz_param_2, default172
    nqp_get_sc_object $P5007, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_2, $P5007
  default172:
    if haz_param_3, default173
    nqp_get_sc_object $P5008, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_3, $P5008
  default173:
    new $P5001, 'Hash'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
    root_new $P103, ['parrot';'Continuation']
    set_label $P103, lexotic_166
    .lex "RETURN", $P103
    defined $I5001, _lex_param_2
    unless $I5001 goto if92_end169 
.annotate 'line', 391
    set $P101["name"], _lex_param_2
  if92_end169:
    defined $I5002, _lex_param_3
    unless $I5002 goto if93_end171 
.annotate 'line', 392
    set $P101["repr"], _lex_param_3
  if93_end171:
.annotate 'line', 393
    $P5003 = _lex_param_1."new_type"($P101 :flat :named)
    set $P102, $P5003
.annotate 'line', 394
    nqp_decontainerize $P5004, _lex_param_0
    $P5004."add_object"($P102)
    find_lex $P5005, "RETURN"
    $P5006 = $P5005($P102)
    goto lexotic_167
  lexotic_166:
    .get_results ($P5006)
  lexotic_167:
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_add_attribute" :subid("cuid_19_1365879995.227") :anon :lex :outer("cuid_376_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 405
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 
    .lex "$attr", $P101 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$meta_attr", _lex_param_2 
    .lex "%lit_args", _lex_param_3 
    .lex "%obj_args", _lex_param_4 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
.annotate 'line', 406
    $P5002 = _lex_param_2."new"(_lex_param_3 :flat :named, _lex_param_4 :flat :named)
    set $P101, $P5002
.annotate 'line', 407
    get_how $P5003, _lex_param_1
    $P5003."add_attribute"(_lex_param_1, $P101)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_add_method" :subid("cuid_20_1365879995.227") :anon :lex :outer("cuid_376_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 412
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$meta_method_name", _lex_param_2 
    .lex "$name", _lex_param_3 
    .lex "$code", _lex_param_4 
.annotate 'line', 413
    get_how $P5001, _lex_param_1
    set $S5001, _lex_param_2
    $P5002 = $P5001.$S5001(_lex_param_1, _lex_param_3, _lex_param_4)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "set_routine_signature" :subid("cuid_21_1365879995.227") :anon :lex :outer("cuid_376_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 417
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "$sig_type", $P101 
    .lex "$code_type", $P102 
    .lex "$sig_obj", $P103 
    .lex "self", _lex_param_0 
    .lex "$code_obj", _lex_param_1 
    .lex "$types", _lex_param_2 
    .lex "$definednesses", _lex_param_3 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P103, $P5003
.annotate 'line', 418
    nqp_decontainerize $P5004, _lex_param_0
    new $P5005, 'QRPA'
    box $P5006, "NQPSignature"
    push $P5005, $P5006
    $P5007 = $P5004."find_sym"($P5005)
    set $P101, $P5007
.annotate 'line', 419
    nqp_decontainerize $P5008, _lex_param_0
    new $P5009, 'QRPA'
    box $P5010, "NQPRoutine"
    push $P5009, $P5010
    $P5011 = $P5008."find_sym"($P5009)
    set $P102, $P5011
    repr_instance_of $P5012, $P101
    set $P103, $P5012
    setattribute $P103, $P101, "$!types", _lex_param_2
    setattribute $P103, $P101, "$!definednesses", _lex_param_3
    setattribute _lex_param_1, $P102, "$!signature", $P103
    .return ($P103) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_set_body_block" :subid("cuid_22_1365879995.227") :anon :lex :outer("cuid_376_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 427
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$body_code_obj", $P101 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$body_past", _lex_param_2 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
.annotate 'line', 429
    nqp_decontainerize $P5002, _lex_param_0
    $P5003 = _lex_param_2."name"()
    $P5004 = $P5002."create_code"(_lex_param_2, $P5003, 0)
    set $P101, $P5004
.annotate 'line', 432
    get_how $P5005, _lex_param_1
    $P5006 = $P5005."set_body_block"(_lex_param_1, $P101)
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_add_parent_or_role" :subid("cuid_23_1365879995.227") :anon :lex :outer("cuid_376_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 436
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$meta_method_name", _lex_param_2 
    .lex "$to_add", _lex_param_3 
.annotate 'line', 437
    get_how $P5001, _lex_param_1
    set $S5001, _lex_param_2
    $P5002 = $P5001.$S5001(_lex_param_1, _lex_param_3)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_add_parrot_vtable_handler_mapping" :subid("cuid_24_1365879995.227") :anon :lex :outer("cuid_376_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 440
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$att_name", _lex_param_3 
.annotate 'line', 441
    get_how $P5001, _lex_param_1
    $P5002 = $P5001."add_parrot_vtable_handler_mapping"(_lex_param_1, _lex_param_2, _lex_param_3)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_compose" :subid("cuid_25_1365879995.227") :anon :lex :outer("cuid_376_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 445
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
.annotate 'line', 446
    get_how $P5001, _lex_param_1
    $P5002 = $P5001."compose"(_lex_param_1)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "run_begin_block" :subid("cuid_26_1365879995.227") :anon :lex :outer("cuid_376_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 450
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5031 = 'cuid_388_1365879995.227' 
    capture_lex $P5031 
    .lex "$wrapper", $P101 
    .lex "%seen", $P102 
    .lex "$i", $P103 
    .lex "$code", $P104 
    .lex "$old_global", $P105 
    .lex "self", _lex_param_0 
    .lex "$past", _lex_param_1 
    .local pmc fb_tmp_33 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    new $P5002, 'Hash'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P105, $P5005
    root_new $P106, ['parrot';'Continuation']
    set_label $P106, lexotic_174
    .lex "RETURN", $P106
.annotate 'line', 452
    nqp_get_sc_object $P5006, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 103
.annotate 'line', 453
    nqp_get_sc_object $P5007, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 93
    $P5008 = $P5007."new"()
    $P5009 = $P5006."new"($P5008, _lex_param_1)
    set $P101, $P5009
    nqp_decontainerize $P5010, _lex_param_0
    nqp_get_sc_object $P5011, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 3
    repr_get_attr_obj $P5012, $P5010, $P5011, "@!BLOCKS"
    set $N5001, $P5012
    box $P5013, $N5001
    set $P103, $P5013
  while94_test176:
    set $N5002, $P103
    set $N5003, 0
    isgt $I5001, $N5002, $N5003
    box $P5017, $I5001
    set $P5016, $P5017
    unless $I5001 goto while94_done180 
  while94_redo178:
    .const 'Sub' $P5014 = 'cuid_388_1365879995.227' 
    capture_lex $P5014
    $P5015 = $P5014()
    set $P5016, $P5015
    goto while94_test176 
  while94_done180:
.annotate 'line', 476
    nqp_decontainerize $P5018, _lex_param_0
    $P5019 = $P5018."create_code"($P101, "BEGIN block", 0)
    set $P104, $P5019
    get_hll_global $P5020, "GLOBAL"
    set $P105, $P5020
    find_dynamic_lex $P5021, "$*GLOBALish"
    unless_null $P5021, fallback202
    nqp_get_sc_object $P5023, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5022, $P5023
    set fb_tmp_33, $P5022
    repr_defined $I5002, fb_tmp_33
    unless $I5002 goto if107_else203 
    set $P5024, fb_tmp_33["$GLOBALish"]
    set $P5026, $P5024
    goto if107_end204
  if107_else203:
    null $P5025
    set $P5026, $P5025
  if107_end204:
    unless_null $P5026, vivi_108205
    nqp_get_sc_object $P5027, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5026, $P5027
  vivi_108205:
    unless_null $P5026, vivi_109206
    die "Contextual $*GLOBALish not found"
    box $P5028, "Contextual $*GLOBALish not found"
    set $P5026, $P5028
  vivi_109206:
    set $P5021, $P5026
  fallback202:
    set_hll_global "GLOBAL", $P5021
.annotate 'line', 479
    $P104()
    set_hll_global "GLOBAL", $P105
.annotate 'line', 484
    $P101."shift"()
    find_lex $P5029, "RETURN"
    $P5030 = $P5029($P101)
    goto lexotic_175
  lexotic_174:
    .get_results ($P5030)
  lexotic_175:
    .return ($P5030) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_388_1365879995.227") :anon :lex :outer("cuid_26_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 458
    .const 'Sub' $P5019 = 'cuid_387_1365879995.227' 
    capture_lex $P5019 
    .lex "%symbols", $P101 
    .local pmc fb_tmp_29 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $P5002, "$i"
    set $N5002, $P5002
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$i", $P5003
.annotate 'line', 460
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    nqp_get_sc_object $P5006, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 3
    repr_get_attr_obj $P5007, $P5004, $P5006, "@!BLOCKS"
    set fb_tmp_29, $P5007
    repr_defined $I5001, fb_tmp_29
    unless $I5001 goto if95_else181 
    find_lex $P5009, "$i"
    set $I5002, $P5009
    set $P5008, fb_tmp_29[$I5002]
    set $P5011, $P5008
    goto if95_end182
  if95_else181:
    null $P5010
    set $P5011, $P5010
  if95_end182:
    unless_null $P5011, vivi_96183
    nqp_get_sc_object $P5012, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5011, $P5012
  vivi_96183:
    $P5013 = $P5011."symtable"()
    set $P101, $P5013
    set $P5014, $P101
    iter $P5016, $P101
  for_next199:
    unless $P5016, for_done201
    shift $P5018, $P5016
  for_redo200:
    .const 'Sub' $P5017 = 'cuid_387_1365879995.227' 
    capture_lex $P5017
    $P5014 = $P5017($P5018)
    goto for_next199
  for_done201:
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_387_1365879995.227") :anon :lex :outer("cuid_388_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 461
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_30 
    .local pmc fb_tmp_31 
    .local pmc fb_tmp_32 
    find_lex $P5001, "%seen"
    set fb_tmp_30, $P5001
    repr_defined $I5002, fb_tmp_30
    unless $I5002 goto if99_else188 
.annotate 'line', 462
    $P5003 = _lex_param_0."key"()
    set $S5001, $P5003
    set $P5002, fb_tmp_30[$S5001]
    set $P5005, $P5002
    goto if99_end189
  if99_else188:
    null $P5004
    set $P5005, $P5004
  if99_end189:
    unless_null $P5005, vivi_100190
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5005, $P5006
  vivi_100190:
    isfalse $I5001, $P5005
    set $I5004, $I5001
    unless $I5001 goto if98_end187 
    $P5007 = _lex_param_0."value"()
    exists $I5003, $P5007["value"]
    set $I5004, $I5003
  if98_end187:
    box $P5032, $I5004
    set $P5031, $P5032
    unless $I5004 goto if97_end185 
    new $P5026, 'ExceptionHandler'
    set_label $P5026, catch_handler_106198
    $P5026.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5026
.annotate 'line', 463
.annotate 'line', 464
    find_lex $P5008, "$wrapper"
    set fb_tmp_31, $P5008
    repr_defined $I5005, fb_tmp_31
    unless $I5005 goto if101_else191 
    set $P5009, fb_tmp_31[0]
    set $P5011, $P5009
    goto if101_end192
  if101_else191:
    null $P5010
    set $P5011, $P5010
  if101_end192:
    unless_null $P5011, vivi_102193
    nqp_get_sc_object $P5012, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5011, $P5012
  vivi_102193:
    nqp_get_sc_object $P5013, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 466
    nqp_get_sc_object $P5014, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5015 = _lex_param_0."key"()
    $P5016 = $P5014."new"($P5015 :named("name"), "lexical" :named("scope"), "var" :named("isdecl"))
.annotate 'line', 467
    nqp_get_sc_object $P5017, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 61
    $P5018 = _lex_param_0."value"()
    set fb_tmp_32, $P5018
    repr_defined $I5006, fb_tmp_32
    unless $I5006 goto if103_else194 
    set $P5019, fb_tmp_32["value"]
    set $P5021, $P5019
    goto if103_end195
  if103_else194:
    null $P5020
    set $P5021, $P5020
  if103_end195:
    unless_null $P5021, vivi_104196
    nqp_get_sc_object $P5022, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5021, $P5022
  vivi_104196:
    $P5023 = $P5017."new"($P5021 :named("value"))
    $P5024 = $P5013."new"($P5016, $P5023, "bind" :named("op"))
    $P5025 = $P5011."push"($P5024)
    set $P5027, $P5025
    pop_eh 
    goto skip_handler_105197
  catch_handler_106198:
    .get_results ($P5026) 
    set $I10001, 1
    set $P5026["handled"], $I10001
    nqp_get_sc_object $P10001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    finalize $P5026
    pop_upto_eh $P5026
    pop_eh 
    set $P5027, $P10001
    goto skip_handler_105197
  skip_handler_105197:
    find_lex $P5028, "%seen"
.annotate 'line', 470
    $P5029 = _lex_param_0."key"()
    set $S5002, $P5029
    box $P5030, 1
    set $P5028[$S5002], $P5030
    set $P5031, $P5030
  if97_end185:
    .return ($P5031) 
.end
.HLL "nqp"
.namespace []
.sub "libs" :subid("cuid_27_1365879995.227") :anon :lex :outer("cuid_376_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 489
    .param pmc _lex_param_0 
    .const 'Sub' $P5050 = 'cuid_389_1365879995.227' 
    capture_lex $P5050 
    .lex "@loadlibs", $P101 
    .lex "self", _lex_param_0 
    .local pmc fb_tmp_34 
    .local pmc fb_tmp_35 
    .local pmc fb_tmp_36 
    .local pmc pkg_viv_tmp_5 
    .local pmc fb_tmp_37 
    .local pmc fb_tmp_38 
    .local pmc fb_tmp_39 
    .local pmc pkg_viv_tmp_6 
    new $P5001, 'QRPA'
    set $P101, $P5001
    new $P5002, 'QRPA'
    box $P5003, "nqp_group"
    push $P5002, $P5003
    box $P5004, "nqp_ops"
    push $P5002, $P5004
    box $P5005, "nqp_bigint_ops"
    push $P5002, $P5005
    box $P5006, "trans_ops"
    push $P5002, $P5006
    box $P5007, "io_ops"
    push $P5002, $P5007
    set $P101, $P5002
    find_dynamic_lex $P5008, "%*COMPILING"
    unless_null $P5008, fallback213
    nqp_get_sc_object $P5010, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5009, $P5010
    set pkg_viv_tmp_5, $P5009
    set fb_tmp_36, pkg_viv_tmp_5
    repr_defined $I5003, fb_tmp_36
    unless $I5003 goto if113_else214 
    set $P5011, fb_tmp_36["%COMPILING"]
    set $P5013, $P5011
    goto if113_end215
  if113_else214:
    null $P5012
    set $P5013, $P5012
  if113_end215:
    unless_null $P5013, vivi_114216
    new $P5014, 'Hash'
    set pkg_viv_tmp_5["%COMPILING"], $P5014
    set $P5013, $P5014
  vivi_114216:
    unless_null $P5013, vivi_115217
    die "Contextual %*COMPILING not found"
    box $P5015, "Contextual %*COMPILING not found"
    set $P5013, $P5015
  vivi_115217:
    set $P5008, $P5013
  fallback213:
    set fb_tmp_35, $P5008
    repr_defined $I5002, fb_tmp_35
    unless $I5002 goto if112_else211 
    set $P5016, fb_tmp_35["%?OPTIONS"]
    set $P5018, $P5016
    goto if112_end212
  if112_else211:
    null $P5017
    set $P5018, $P5017
  if112_end212:
    unless_null $P5018, vivi_116218
    nqp_get_sc_object $P5019, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5018, $P5019
  vivi_116218:
    set fb_tmp_34, $P5018
    repr_defined $I5001, fb_tmp_34
    unless $I5001 goto if111_else209 
    set $P5020, fb_tmp_34["vmlibs"]
    set $P5022, $P5020
    goto if111_end210
  if111_else209:
    null $P5021
    set $P5022, $P5021
  if111_end210:
    unless_null $P5022, vivi_117219
    nqp_get_sc_object $P5023, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5022, $P5023
  vivi_117219:
    unless $P5022 goto if110_end208 
.annotate 'line', 492
    find_dynamic_lex $P5028, "%*COMPILING"
    unless_null $P5028, fallback224
    nqp_get_sc_object $P5030, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5029, $P5030
    set pkg_viv_tmp_6, $P5029
    set fb_tmp_39, pkg_viv_tmp_6
    repr_defined $I5006, fb_tmp_39
    unless $I5006 goto if120_else225 
    set $P5031, fb_tmp_39["%COMPILING"]
    set $P5033, $P5031
    goto if120_end226
  if120_else225:
    null $P5032
    set $P5033, $P5032
  if120_end226:
    unless_null $P5033, vivi_121227
    new $P5034, 'Hash'
    set pkg_viv_tmp_6["%COMPILING"], $P5034
    set $P5033, $P5034
  vivi_121227:
    unless_null $P5033, vivi_122228
    die "Contextual %*COMPILING not found"
    box $P5035, "Contextual %*COMPILING not found"
    set $P5033, $P5035
  vivi_122228:
    set $P5028, $P5033
  fallback224:
    set fb_tmp_38, $P5028
    repr_defined $I5005, fb_tmp_38
    unless $I5005 goto if119_else222 
    set $P5036, fb_tmp_38["%?OPTIONS"]
    set $P5038, $P5036
    goto if119_end223
  if119_else222:
    null $P5037
    set $P5038, $P5037
  if119_end223:
    unless_null $P5038, vivi_123229
    nqp_get_sc_object $P5039, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5038, $P5039
  vivi_123229:
    set fb_tmp_37, $P5038
    repr_defined $I5004, fb_tmp_37
    unless $I5004 goto if118_else220 
    set $P5040, fb_tmp_37["vmlibs"]
    set $P5042, $P5040
    goto if118_end221
  if118_else220:
    null $P5041
    set $P5042, $P5041
  if118_end221:
    unless_null $P5042, vivi_124230
    nqp_get_sc_object $P5043, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5042, $P5043
  vivi_124230:
    set $S5001, $P5042
    split $P5027, ",", $S5001
    set $P5024, $P5027
    iter $P5026, $P5027
  for_next231:
    unless $P5026, for_done233
    shift $P5045, $P5026
  for_redo232:
    .const 'Sub' $P5044 = 'cuid_389_1365879995.227' 
    capture_lex $P5044
    $P5024 = $P5044($P5045)
    goto for_next231
  for_done233:
  if110_end208:
.annotate 'line', 497
    nqp_get_sc_object $P5046, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 89
.annotate 'line', 499
    nqp_get_sc_object $P5047, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    $P5048 = $P5047."new"("null" :named("op"))
    $P5049 = $P5046."new"($P101 :named("loadlibs"), $P5048 :named("jvm"))
    .return ($P5049) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_389_1365879995.227") :anon :lex :outer("cuid_27_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 493
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 494
    find_lex $P5001, "@loadlibs"
    $P5002 = $P5001."push"(_lex_param_0)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "add_initializations" :subid("cuid_28_1365879995.227") :anon :lex :outer("cuid_376_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 503
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
.annotate 'line', 504
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 89
.annotate 'line', 505
    nqp_get_sc_object $P5003, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 93
.annotate 'line', 506
    nqp_get_sc_object $P5004, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 89
    $P5005 = $P5004."new"("nqp_dynop_setup v" :named("pirop"))
.annotate 'line', 507
    nqp_get_sc_object $P5006, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 89
    $P5007 = $P5006."new"("nqp_bigint_setup v" :named("pirop"))
.annotate 'line', 508
    nqp_get_sc_object $P5008, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 510
    nqp_get_sc_object $P5009, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 89
    $P5010 = $P5009."new"("getinterp P" :named("pirop"))
.annotate 'line', 511
    nqp_get_sc_object $P5011, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 89
    nqp_get_sc_object $P5012, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 52
    $P5013 = $P5012."new"("LexPad" :named("value"))
    $P5014 = $P5011."new"($P5013, "get_class Ps" :named("pirop"))
.annotate 'line', 512
    nqp_get_sc_object $P5015, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 89
    nqp_get_sc_object $P5016, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 52
    $P5017 = $P5016."new"("NQPLexPad" :named("value"))
    $P5018 = $P5015."new"($P5017, "get_class Ps" :named("pirop"))
    $P5019 = $P5008."new"($P5010, $P5014, $P5018, "callmethod" :named("op"), "hll_map" :named("name"))
    $P5020 = $P5003."new"($P5005, $P5007, $P5019)
.annotate 'line', 514
    nqp_get_sc_object $P5021, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    $P5022 = $P5021."new"("null" :named("op"))
    $P5023 = $P5002."new"($P5020 :named("parrot"), $P5022 :named("jvm"))
    $P5024 = $P5001."add_load_dependency_task"($P5023 :named("deserialize_past"))
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "cleanup" :subid("cuid_29_1365879995.227") :anon :lex :outer("cuid_376_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 519
    .param pmc _lex_param_0 
    .const 'Sub' $P5009 = 'cuid_390_1365879995.227' 
    capture_lex $P5009 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5004, _lex_param_0
    nqp_get_sc_object $P5005, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 3
    repr_get_attr_obj $P5006, $P5004, $P5005, "@!clearup_tasks"
    set $P5001, $P5006
    iter $P5003, $P5006
  for_next234:
    unless $P5003, for_done236
    shift $P5008, $P5003
  for_redo235:
    .const 'Sub' $P5007 = 'cuid_390_1365879995.227' 
    capture_lex $P5007
    $P5001 = $P5007($P5008)
    goto for_next234
  for_done236:
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_390_1365879995.227") :anon :lex :outer("cuid_29_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 520
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    $P5001 = _lex_param_0()
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "is_lexical" :subid("cuid_30_1365879995.227") :anon :lex :outer("cuid_376_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 525
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
.annotate 'line', 526
    nqp_decontainerize $P5001, _lex_param_0
    $P5002 = $P5001."is_scope"(_lex_param_1, "lexical")
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "is_package" :subid("cuid_31_1365879995.227") :anon :lex :outer("cuid_376_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 531
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
.annotate 'line', 532
    nqp_decontainerize $P5001, _lex_param_0
    $P5002 = $P5001."is_scope"(_lex_param_1, "package")
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "is_scope" :subid("cuid_32_1365879995.227") :anon :lex :outer("cuid_376_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 537
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .const 'Sub' $P5011 = 'cuid_391_1365879995.227' 
    capture_lex $P5011 
    .lex "$i", $P101 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
    .lex "$wanted_scope", _lex_param_2 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_237
    .lex "RETURN", $P102
    nqp_decontainerize $P5002, _lex_param_0
    nqp_get_sc_object $P5003, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 3
    repr_get_attr_obj $P5004, $P5002, $P5003, "@!BLOCKS"
    set $N5001, $P5004
    box $P5005, $N5001
    set $P101, $P5005
  while125_test239:
    set $N5002, $P101
    set $N5003, 0
    isgt $I5001, $N5002, $N5003
    box $P5009, $I5001
    set $P5008, $P5009
    unless $I5001 goto while125_done243 
  while125_redo241:
    .const 'Sub' $P5006 = 'cuid_391_1365879995.227' 
    capture_lex $P5006
    $P5007 = $P5006()
    set $P5008, $P5007
    goto while125_test239 
  while125_done243:
    box $P5010, 0
    goto lexotic_238
  lexotic_237:
    .get_results ($P5010)
  lexotic_238:
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_391_1365879995.227") :anon :lex :outer("cuid_32_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 539
    .lex "%sym", $P101 
    .local pmc fb_tmp_40 
    .local pmc fb_tmp_41 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $P5002, "$i"
    set $N5002, $P5002
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$i", $P5003
.annotate 'line', 541
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    nqp_get_sc_object $P5006, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 3
    repr_get_attr_obj $P5007, $P5004, $P5006, "@!BLOCKS"
    set fb_tmp_40, $P5007
    repr_defined $I5001, fb_tmp_40
    unless $I5001 goto if126_else244 
    find_lex $P5009, "$i"
    set $I5002, $P5009
    set $P5008, fb_tmp_40[$I5002]
    set $P5011, $P5008
    goto if126_end245
  if126_else244:
    null $P5010
    set $P5011, $P5010
  if126_end245:
    unless_null $P5011, vivi_127246
    nqp_get_sc_object $P5012, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5011, $P5012
  vivi_127246:
    find_lex $P5013, "$name"
    $P5014 = $P5011."symbol"($P5013)
    set $P101, $P5014
    set $N5004, $P101
    box $P5023, $N5004
    set $P5022, $P5023
    unless $N5004 goto if128_end248 
.annotate 'line', 542
    set fb_tmp_41, $P101
    repr_defined $I5004, fb_tmp_41
    unless $I5004 goto if129_else249 
    set $P5016, fb_tmp_41["scope"]
    set $P5018, $P5016
    goto if129_end250
  if129_else249:
    null $P5017
    set $P5018, $P5017
  if129_end250:
    unless_null $P5018, vivi_130251
    nqp_get_sc_object $P5019, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5018, $P5019
  vivi_130251:
    set $S5001, $P5018
    find_lex $P5020, "$wanted_scope"
    set $S5002, $P5020
    iseq $I5003, $S5001, $S5002
    find_lex $P5015, "RETURN"
    $P5021 = $P5015($I5003)
    set $P5022, $P5021
  if128_end248:
    .return ($P5022) 
.end
.HLL "nqp"
.namespace []
.sub "known_sym" :subid("cuid_33_1365879995.227") :anon :lex :outer("cuid_376_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 550
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$known", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .lex "@name", _lex_param_2 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    box $P5002, 0
    set $P101, $P5002
    new $P5005, 'ExceptionHandler'
    set_label $P5005, catch_handler_132253
    $P5005.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5005
.annotate 'line', 552
.annotate 'line', 553
    nqp_decontainerize $P5003, _lex_param_0
    $P5003."find_sym"(_lex_param_2)
    box $P5004, 1
    set $P101, $P5004
    set $P5006, $P101
    pop_eh 
    goto skip_handler_131252
  catch_handler_132253:
    .get_results ($P5005) 
    set $I10001, 1
    set $P5005["handled"], $I10001
    nqp_get_sc_object $P10001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    finalize $P5005
    pop_upto_eh $P5005
    pop_eh 
    set $P5006, $P10001
    goto skip_handler_131252
  skip_handler_131252:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "find_sym" :subid("cuid_34_1365879995.227") :anon :lex :outer("cuid_376_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 562
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5020 = 'cuid_393_1365879995.227' 
    capture_lex $P5020 
    .const 'Sub' $P5020 = 'cuid_395_1365879995.227' 
    capture_lex $P5020 
    .const 'Sub' $P5020 = 'cuid_396_1365879995.227' 
    capture_lex $P5020 
    .lex "$result", $P101 
    .lex "self", _lex_param_0 
    .lex "@name", _lex_param_1 
    .local pmc fb_tmp_45 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_254
    .lex "RETURN", $P102
    set $N5001, _lex_param_1
    if $N5001 goto unless133_end257 
.annotate 'line', 564
    box $P5002, "Cannot look up empty name"
    die $P5002
  unless133_end257:
    set $N5002, _lex_param_1
    set $N5003, 1
    iseq $I5001, $N5002, $N5003
    unless $I5001 goto if134_end259 
    .const 'Sub' $P5003 = 'cuid_393_1365879995.227' 
    capture_lex $P5003
    $P5004 = $P5003()
  if134_end259:
    find_dynamic_lex $P5005, "$*GLOBALish"
    unless_null $P5005, fallback278
    nqp_get_sc_object $P5007, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5006, $P5007
    set fb_tmp_45, $P5006
    repr_defined $I5002, fb_tmp_45
    unless $I5002 goto if144_else279 
    set $P5008, fb_tmp_45["$GLOBALish"]
    set $P5010, $P5008
    goto if144_end280
  if144_else279:
    null $P5009
    set $P5010, $P5009
  if144_end280:
    unless_null $P5010, vivi_145281
    nqp_get_sc_object $P5011, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5010, $P5011
  vivi_145281:
    unless_null $P5010, vivi_146282
    die "Contextual $*GLOBALish not found"
    box $P5012, "Contextual $*GLOBALish not found"
    set $P5010, $P5012
  vivi_146282:
    set $P5005, $P5010
  fallback278:
    set $P101, $P5005
    set $N5004, _lex_param_1
    set $N5005, 2
    isge $I5003, $N5004, $N5005
    unless $I5003 goto if147_end284 
    .const 'Sub' $P5013 = 'cuid_395_1365879995.227' 
    capture_lex $P5013
    $P5014 = $P5013()
  if147_end284:
    set $P5015, _lex_param_1
    iter $P5017, _lex_param_1
  for_next308:
    unless $P5017, for_done310
    shift $P5019, $P5017
  for_redo309:
    .const 'Sub' $P5018 = 'cuid_396_1365879995.227' 
    capture_lex $P5018
    $P5015 = $P5018($P5019)
    goto for_next308
  for_done310:
    goto lexotic_255
  lexotic_254:
    .get_results ($P101)
  lexotic_255:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_393_1365879995.227") :anon :lex :outer("cuid_34_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 568
    .const 'Sub' $P5017 = 'cuid_392_1365879995.227' 
    capture_lex $P5017 
    .lex "$final_name", $P101 
    .lex "$i", $P102 
    .local pmc fb_tmp_42 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
    find_lex $P5003, "@name"
    set fb_tmp_42, $P5003
    repr_defined $I5001, fb_tmp_42
    unless $I5001 goto if135_else260 
    set $P5004, fb_tmp_42[0]
    set $P5006, $P5004
    goto if135_end261
  if135_else260:
    null $P5005
    set $P5006, $P5005
  if135_end261:
    unless_null $P5006, vivi_136262
    nqp_get_sc_object $P5007, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5006, $P5007
  vivi_136262:
    set $P101, $P5006
    find_lex $P5009, "self"
    nqp_decontainerize $P5008, $P5009
    nqp_get_sc_object $P5010, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 3
    repr_get_attr_obj $P5011, $P5008, $P5010, "@!BLOCKS"
    set $N5001, $P5011
    box $P5012, $N5001
    set $P102, $P5012
  while137_test263:
    set $N5002, $P102
    set $N5003, 0
    isgt $I5002, $N5002, $N5003
    box $P5016, $I5002
    set $P5015, $P5016
    unless $I5002 goto while137_done267 
  while137_redo265:
    .const 'Sub' $P5013 = 'cuid_392_1365879995.227' 
    capture_lex $P5013
    $P5014 = $P5013()
    set $P5015, $P5014
    goto while137_test263 
  while137_done267:
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_392_1365879995.227") :anon :lex :outer("cuid_393_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 571
    .lex "%sym", $P101 
    .local pmc fb_tmp_43 
    .local pmc fb_tmp_44 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $P5002, "$i"
    set $N5002, $P5002
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$i", $P5003
.annotate 'line', 573
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    nqp_get_sc_object $P5006, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 3
    repr_get_attr_obj $P5007, $P5004, $P5006, "@!BLOCKS"
    set fb_tmp_43, $P5007
    repr_defined $I5001, fb_tmp_43
    unless $I5001 goto if138_else268 
    find_lex $P5009, "$i"
    set $I5002, $P5009
    set $P5008, fb_tmp_43[$I5002]
    set $P5011, $P5008
    goto if138_end269
  if138_else268:
    null $P5010
    set $P5011, $P5010
  if138_end269:
    unless_null $P5011, vivi_139270
    nqp_get_sc_object $P5012, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5011, $P5012
  vivi_139270:
    find_lex $P5013, "$final_name"
    $P5014 = $P5011."symbol"($P5013)
    set $P101, $P5014
    set $N5004, $P101
    box $P5025, $N5004
    set $P5024, $P5025
    unless $N5004 goto if140_end272 
.annotate 'line', 574
    exists $I5003, $P101["value"]
    unless $I5003 goto if141_else273 
.annotate 'line', 575
    set fb_tmp_44, $P101
    repr_defined $I5004, fb_tmp_44
    unless $I5004 goto if142_else275 
    set $P5016, fb_tmp_44["value"]
    set $P5018, $P5016
    goto if142_end276
  if142_else275:
    null $P5017
    set $P5018, $P5017
  if142_end276:
    unless_null $P5018, vivi_143277
    nqp_get_sc_object $P5019, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5018, $P5019
  vivi_143277:
    find_lex $P5015, "RETURN"
    $P5020 = $P5015($P5018)
    set $P5023, $P5020
    goto if141_end274
  if141_else273:
.annotate 'line', 578
    find_lex $P5021, "$final_name"
    set $S5002, $P5021
    concat $S5001, "No compile-time value for ", $S5002
    box $P5022, $S5001
    die $P5022
    set $P5023, $P5022
  if141_end274:
    set $P5024, $P5023
  if140_end272:
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_395_1365879995.227") :anon :lex :outer("cuid_34_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 589
    .const 'Sub' $P5017 = 'cuid_394_1365879995.227' 
    capture_lex $P5017 
    .lex "$first", $P101 
    .lex "$i", $P102 
    .local pmc fb_tmp_46 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
    find_lex $P5003, "@name"
    set fb_tmp_46, $P5003
    repr_defined $I5001, fb_tmp_46
    unless $I5001 goto if148_else285 
    set $P5004, fb_tmp_46[0]
    set $P5006, $P5004
    goto if148_end286
  if148_else285:
    null $P5005
    set $P5006, $P5005
  if148_end286:
    unless_null $P5006, vivi_149287
    nqp_get_sc_object $P5007, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5006, $P5007
  vivi_149287:
    set $P101, $P5006
    find_lex $P5009, "self"
    nqp_decontainerize $P5008, $P5009
    nqp_get_sc_object $P5010, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 3
    repr_get_attr_obj $P5011, $P5008, $P5010, "@!BLOCKS"
    set $N5001, $P5011
    box $P5012, $N5001
    set $P102, $P5012
  while150_test288:
    set $N5002, $P102
    set $N5003, 0
    isgt $I5002, $N5002, $N5003
    box $P5016, $I5002
    set $P5015, $P5016
    unless $I5002 goto while150_done292 
  while150_redo290:
    .const 'Sub' $P5013 = 'cuid_394_1365879995.227' 
    capture_lex $P5013
    $P5014 = $P5013()
    set $P5015, $P5014
    goto while150_test288 
  while150_done292:
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_394_1365879995.227") :anon :lex :outer("cuid_395_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 592
    .lex "%sym", $P101 
    .local pmc fb_tmp_47 
    .local pmc fb_tmp_48 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $P5002, "$i"
    set $N5002, $P5002
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$i", $P5003
.annotate 'line', 594
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    nqp_get_sc_object $P5006, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 3
    repr_get_attr_obj $P5007, $P5004, $P5006, "@!BLOCKS"
    set fb_tmp_47, $P5007
    repr_defined $I5001, fb_tmp_47
    unless $I5001 goto if151_else293 
    find_lex $P5009, "$i"
    set $I5002, $P5009
    set $P5008, fb_tmp_47[$I5002]
    set $P5011, $P5008
    goto if151_end294
  if151_else293:
    null $P5010
    set $P5011, $P5010
  if151_end294:
    unless_null $P5011, vivi_152295
    nqp_get_sc_object $P5012, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5011, $P5012
  vivi_152295:
    find_lex $P5013, "$first"
    $P5014 = $P5011."symbol"($P5013)
    set $P101, $P5014
    set $N5004, $P101
    box $P5025, $N5004
    set $P5024, $P5025
    unless $N5004 goto if153_end297 
.annotate 'line', 595
    exists $I5003, $P101["value"]
    unless $I5003 goto if154_else298 
.annotate 'line', 596
    set fb_tmp_48, $P101
    repr_defined $I5004, fb_tmp_48
    unless $I5004 goto if155_else300 
    set $P5015, fb_tmp_48["value"]
    set $P5017, $P5015
    goto if155_end301
  if155_else300:
    null $P5016
    set $P5017, $P5016
  if155_end301:
    unless_null $P5017, vivi_156302
    nqp_get_sc_object $P5018, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5017, $P5018
  vivi_156302:
    store_lex "$result", $P5017
.annotate 'line', 598
    find_lex $P5019, "@name"
    $P5019."shift"()
    box $P5020, 0
    store_lex "$i", $P5020
    set $P5023, $P5020
    goto if154_end299
  if154_else298:
.annotate 'line', 601
    find_lex $P5021, "$first"
    set $S5002, $P5021
    concat $S5001, "No compile-time value for ", $S5002
    box $P5022, $S5001
    die $P5022
    set $P5023, $P5022
  if154_end299:
    set $P5024, $P5023
  if153_end297:
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_396_1365879995.227") :anon :lex :outer("cuid_34_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 609
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_49 
    find_lex $P5002, "$result"
    get_who $P5001, $P5002
    set $S5001, _lex_param_0
    exists $I5001, $P5001[$S5001]
    unless $I5001 goto if157_else303 
.annotate 'line', 610
    find_lex $P5004, "$result"
    get_who $P5003, $P5004
    set fb_tmp_49, $P5003
    repr_defined $I5002, fb_tmp_49
    unless $I5002 goto if158_else305 
    set $S5002, _lex_param_0
    set $P5005, fb_tmp_49[$S5002]
    set $P5007, $P5005
    goto if158_end306
  if158_else305:
    null $P5006
    set $P5007, $P5006
  if158_end306:
    unless_null $P5007, vivi_159307
    nqp_get_sc_object $P5008, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5007, $P5008
  vivi_159307:
    store_lex "$result", $P5007
    set $P5011, $P5007
    goto if157_end304
  if157_else303:
.annotate 'line', 613
    find_lex $P5009, "@name"
    join $S5004, "::", $P5009
    concat $S5003, "Could not locate compile-time value for symbol ", $S5004
    box $P5010, $S5003
    die $P5010
    set $P5011, $P5010
  if157_end304:
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_397_1365879995.227") :anon :lex :outer("cuid_374_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 624
    .const 'Sub' $P5199 = 'cuid_35_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_36_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_37_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_38_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_39_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_40_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_41_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_43_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_45_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_46_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_47_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_49_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_50_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_51_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_52_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_53_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_54_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_55_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_56_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_57_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_58_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_59_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_60_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_61_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_62_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_63_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_64_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_65_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_67_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_68_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_69_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_70_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_71_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_72_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_73_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_74_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_75_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_76_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_77_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_78_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_79_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_80_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_81_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_82_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_83_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_84_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_85_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_86_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_87_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_88_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_89_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_90_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_93_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_94_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_95_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_96_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_97_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_98_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_99_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_100_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_101_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_102_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_103_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_104_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_105_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_106_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_107_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_108_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_109_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_110_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_111_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_112_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_113_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_114_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_115_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_116_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_117_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_118_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_119_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_120_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_121_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_122_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_123_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_124_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_125_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_126_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_127_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_128_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_129_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_131_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_132_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_133_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_134_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_135_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_136_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_137_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_138_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_139_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_140_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_141_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_142_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_143_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_144_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_145_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_146_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_147_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_148_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_149_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_150_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_151_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_152_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_153_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_154_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_155_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_156_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_157_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_158_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_159_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_160_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_161_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_162_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_163_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_164_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_165_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_166_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_167_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_168_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_169_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_170_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_171_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_172_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_173_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_174_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_175_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_176_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_177_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_178_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_179_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_180_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_181_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_182_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_183_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_184_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_185_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_186_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_187_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_188_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_189_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_190_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_191_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_192_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_193_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_194_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_195_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_196_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_197_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_198_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_199_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_200_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_201_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_202_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_203_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_204_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_205_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_206_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_207_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_208_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_209_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_210_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_211_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_212_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_213_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_214_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_215_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_216_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_217_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_218_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_219_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_220_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_221_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_223_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_225_1365879995.227' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_227_1365879995.227' 
    capture_lex $P5199 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
.annotate 'line', 1294
.annotate 'line', 1295
    nqp_get_sc_object $P5001, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 38
    $P5001."O"(":prec<y=>, :assoc<unary>", "%methodop")
.annotate 'line', 1296
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 38
    $P5002."O"(":prec<x=>, :assoc<unary>", "%autoincrement")
.annotate 'line', 1297
    nqp_get_sc_object $P5003, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 38
    $P5003."O"(":prec<w=>, :assoc<left>", "%exponentiation")
.annotate 'line', 1298
    nqp_get_sc_object $P5004, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 38
    $P5004."O"(":prec<v=>, :assoc<unary>", "%symbolic_unary")
.annotate 'line', 1299
    nqp_get_sc_object $P5005, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 38
    $P5005."O"(":prec<u=>, :assoc<left>", "%multiplicative")
.annotate 'line', 1300
    nqp_get_sc_object $P5006, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 38
    $P5006."O"(":prec<t=>, :assoc<left>", "%additive")
.annotate 'line', 1301
    nqp_get_sc_object $P5007, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 38
    $P5007."O"(":prec<r=>, :assoc<left>", "%concatenation")
.annotate 'line', 1302
    nqp_get_sc_object $P5008, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 38
    $P5008."O"(":prec<m=>, :assoc<left>", "%relational")
.annotate 'line', 1303
    nqp_get_sc_object $P5009, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 38
    $P5009."O"(":prec<l=>, :assoc<left>", "%tight_and")
.annotate 'line', 1304
    nqp_get_sc_object $P5010, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 38
    $P5010."O"(":prec<k=>, :assoc<left>", "%tight_or")
.annotate 'line', 1305
    nqp_get_sc_object $P5011, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 38
    $P5011."O"(":prec<j=>, :assoc<right>", "%conditional")
.annotate 'line', 1306
    nqp_get_sc_object $P5012, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 38
    $P5012."O"(":prec<i=>, :assoc<right>", "%assignment")
.annotate 'line', 1307
    nqp_get_sc_object $P5013, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 38
    $P5013."O"(":prec<g=>, :assoc<list>, :nextterm<nulltermish>", "%comma")
.annotate 'line', 1308
    nqp_get_sc_object $P5014, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 38
    $P5014."O"(":prec<f=>, :assoc<list>", "%list_infix")
.annotate 'line', 1309
    nqp_get_sc_object $P5015, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 38
    $P5015."O"(":prec<e=>, :assoc<unary>", "%list_prefix")
.annotate 'line', 624
    .const 'Sub' $P5016 = 'cuid_35_1365879995.227' 
    capture_lex $P5016
    .const 'Sub' $P5017 = 'cuid_36_1365879995.227' 
    capture_lex $P5017
    .const 'Sub' $P5018 = 'cuid_37_1365879995.227' 
    capture_lex $P5018
    .const 'Sub' $P5019 = 'cuid_38_1365879995.227' 
    capture_lex $P5019
    .const 'Sub' $P5020 = 'cuid_39_1365879995.227' 
    capture_lex $P5020
    .const 'Sub' $P5021 = 'cuid_40_1365879995.227' 
    capture_lex $P5021
    .const 'Sub' $P5022 = 'cuid_41_1365879995.227' 
    capture_lex $P5022
    .const 'Sub' $P5023 = 'cuid_43_1365879995.227' 
    capture_lex $P5023
    .const 'Sub' $P5024 = 'cuid_45_1365879995.227' 
    capture_lex $P5024
    .const 'Sub' $P5025 = 'cuid_46_1365879995.227' 
    capture_lex $P5025
    .const 'Sub' $P5026 = 'cuid_47_1365879995.227' 
    capture_lex $P5026
    .const 'Sub' $P5027 = 'cuid_49_1365879995.227' 
    capture_lex $P5027
    .const 'Sub' $P5028 = 'cuid_50_1365879995.227' 
    capture_lex $P5028
    .const 'Sub' $P5029 = 'cuid_51_1365879995.227' 
    capture_lex $P5029
    .const 'Sub' $P5030 = 'cuid_52_1365879995.227' 
    capture_lex $P5030
    .const 'Sub' $P5031 = 'cuid_53_1365879995.227' 
    capture_lex $P5031
    .const 'Sub' $P5032 = 'cuid_54_1365879995.227' 
    capture_lex $P5032
    .const 'Sub' $P5033 = 'cuid_55_1365879995.227' 
    capture_lex $P5033
    .const 'Sub' $P5034 = 'cuid_56_1365879995.227' 
    capture_lex $P5034
    .const 'Sub' $P5035 = 'cuid_57_1365879995.227' 
    capture_lex $P5035
    .const 'Sub' $P5036 = 'cuid_58_1365879995.227' 
    capture_lex $P5036
    .const 'Sub' $P5037 = 'cuid_59_1365879995.227' 
    capture_lex $P5037
    .const 'Sub' $P5038 = 'cuid_60_1365879995.227' 
    capture_lex $P5038
    .const 'Sub' $P5039 = 'cuid_61_1365879995.227' 
    capture_lex $P5039
    .const 'Sub' $P5040 = 'cuid_62_1365879995.227' 
    capture_lex $P5040
    .const 'Sub' $P5041 = 'cuid_63_1365879995.227' 
    capture_lex $P5041
    .const 'Sub' $P5042 = 'cuid_64_1365879995.227' 
    capture_lex $P5042
    .const 'Sub' $P5043 = 'cuid_65_1365879995.227' 
    capture_lex $P5043
    .const 'Sub' $P5044 = 'cuid_67_1365879995.227' 
    capture_lex $P5044
    .const 'Sub' $P5045 = 'cuid_68_1365879995.227' 
    capture_lex $P5045
    .const 'Sub' $P5046 = 'cuid_69_1365879995.227' 
    capture_lex $P5046
    .const 'Sub' $P5047 = 'cuid_70_1365879995.227' 
    capture_lex $P5047
    .const 'Sub' $P5048 = 'cuid_71_1365879995.227' 
    capture_lex $P5048
    .const 'Sub' $P5049 = 'cuid_72_1365879995.227' 
    capture_lex $P5049
    .const 'Sub' $P5050 = 'cuid_73_1365879995.227' 
    capture_lex $P5050
    .const 'Sub' $P5051 = 'cuid_74_1365879995.227' 
    capture_lex $P5051
    .const 'Sub' $P5052 = 'cuid_75_1365879995.227' 
    capture_lex $P5052
    .const 'Sub' $P5053 = 'cuid_76_1365879995.227' 
    capture_lex $P5053
    .const 'Sub' $P5054 = 'cuid_77_1365879995.227' 
    capture_lex $P5054
    .const 'Sub' $P5055 = 'cuid_78_1365879995.227' 
    capture_lex $P5055
    .const 'Sub' $P5056 = 'cuid_79_1365879995.227' 
    capture_lex $P5056
    .const 'Sub' $P5057 = 'cuid_80_1365879995.227' 
    capture_lex $P5057
    .const 'Sub' $P5058 = 'cuid_81_1365879995.227' 
    capture_lex $P5058
    .const 'Sub' $P5059 = 'cuid_82_1365879995.227' 
    capture_lex $P5059
    .const 'Sub' $P5060 = 'cuid_83_1365879995.227' 
    capture_lex $P5060
    .const 'Sub' $P5061 = 'cuid_84_1365879995.227' 
    capture_lex $P5061
    .const 'Sub' $P5062 = 'cuid_85_1365879995.227' 
    capture_lex $P5062
    .const 'Sub' $P5063 = 'cuid_86_1365879995.227' 
    capture_lex $P5063
    .const 'Sub' $P5064 = 'cuid_87_1365879995.227' 
    capture_lex $P5064
    .const 'Sub' $P5065 = 'cuid_88_1365879995.227' 
    capture_lex $P5065
    .const 'Sub' $P5066 = 'cuid_89_1365879995.227' 
    capture_lex $P5066
    .const 'Sub' $P5067 = 'cuid_90_1365879995.227' 
    capture_lex $P5067
    .const 'Sub' $P5068 = 'cuid_93_1365879995.227' 
    capture_lex $P5068
    .const 'Sub' $P5069 = 'cuid_94_1365879995.227' 
    capture_lex $P5069
    .const 'Sub' $P5070 = 'cuid_95_1365879995.227' 
    capture_lex $P5070
    .const 'Sub' $P5071 = 'cuid_96_1365879995.227' 
    capture_lex $P5071
    .const 'Sub' $P5072 = 'cuid_97_1365879995.227' 
    capture_lex $P5072
    .const 'Sub' $P5073 = 'cuid_98_1365879995.227' 
    capture_lex $P5073
    .const 'Sub' $P5074 = 'cuid_99_1365879995.227' 
    capture_lex $P5074
    .const 'Sub' $P5075 = 'cuid_100_1365879995.227' 
    capture_lex $P5075
    .const 'Sub' $P5076 = 'cuid_101_1365879995.227' 
    capture_lex $P5076
    .const 'Sub' $P5077 = 'cuid_102_1365879995.227' 
    capture_lex $P5077
    .const 'Sub' $P5078 = 'cuid_103_1365879995.227' 
    capture_lex $P5078
    .const 'Sub' $P5079 = 'cuid_104_1365879995.227' 
    capture_lex $P5079
    .const 'Sub' $P5080 = 'cuid_105_1365879995.227' 
    capture_lex $P5080
    .const 'Sub' $P5081 = 'cuid_106_1365879995.227' 
    capture_lex $P5081
    .const 'Sub' $P5082 = 'cuid_107_1365879995.227' 
    capture_lex $P5082
    .const 'Sub' $P5083 = 'cuid_108_1365879995.227' 
    capture_lex $P5083
    .const 'Sub' $P5084 = 'cuid_109_1365879995.227' 
    capture_lex $P5084
    .const 'Sub' $P5085 = 'cuid_110_1365879995.227' 
    capture_lex $P5085
    .const 'Sub' $P5086 = 'cuid_111_1365879995.227' 
    capture_lex $P5086
    .const 'Sub' $P5087 = 'cuid_112_1365879995.227' 
    capture_lex $P5087
    .const 'Sub' $P5088 = 'cuid_113_1365879995.227' 
    capture_lex $P5088
    .const 'Sub' $P5089 = 'cuid_114_1365879995.227' 
    capture_lex $P5089
    .const 'Sub' $P5090 = 'cuid_115_1365879995.227' 
    capture_lex $P5090
    .const 'Sub' $P5091 = 'cuid_116_1365879995.227' 
    capture_lex $P5091
    .const 'Sub' $P5092 = 'cuid_117_1365879995.227' 
    capture_lex $P5092
    .const 'Sub' $P5093 = 'cuid_118_1365879995.227' 
    capture_lex $P5093
    .const 'Sub' $P5094 = 'cuid_119_1365879995.227' 
    capture_lex $P5094
    .const 'Sub' $P5095 = 'cuid_120_1365879995.227' 
    capture_lex $P5095
    .const 'Sub' $P5096 = 'cuid_121_1365879995.227' 
    capture_lex $P5096
    .const 'Sub' $P5097 = 'cuid_122_1365879995.227' 
    capture_lex $P5097
    .const 'Sub' $P5098 = 'cuid_123_1365879995.227' 
    capture_lex $P5098
    .const 'Sub' $P5099 = 'cuid_124_1365879995.227' 
    capture_lex $P5099
    .const 'Sub' $P5100 = 'cuid_125_1365879995.227' 
    capture_lex $P5100
    .const 'Sub' $P5101 = 'cuid_126_1365879995.227' 
    capture_lex $P5101
    .const 'Sub' $P5102 = 'cuid_127_1365879995.227' 
    capture_lex $P5102
    .const 'Sub' $P5103 = 'cuid_128_1365879995.227' 
    capture_lex $P5103
    .const 'Sub' $P5104 = 'cuid_129_1365879995.227' 
    capture_lex $P5104
    .const 'Sub' $P5105 = 'cuid_131_1365879995.227' 
    capture_lex $P5105
    .const 'Sub' $P5106 = 'cuid_132_1365879995.227' 
    capture_lex $P5106
    .const 'Sub' $P5107 = 'cuid_133_1365879995.227' 
    capture_lex $P5107
    .const 'Sub' $P5108 = 'cuid_134_1365879995.227' 
    capture_lex $P5108
    .const 'Sub' $P5109 = 'cuid_135_1365879995.227' 
    capture_lex $P5109
    .const 'Sub' $P5110 = 'cuid_136_1365879995.227' 
    capture_lex $P5110
    .const 'Sub' $P5111 = 'cuid_137_1365879995.227' 
    capture_lex $P5111
    .const 'Sub' $P5112 = 'cuid_138_1365879995.227' 
    capture_lex $P5112
    .const 'Sub' $P5113 = 'cuid_139_1365879995.227' 
    capture_lex $P5113
    .const 'Sub' $P5114 = 'cuid_140_1365879995.227' 
    capture_lex $P5114
    .const 'Sub' $P5115 = 'cuid_141_1365879995.227' 
    capture_lex $P5115
    .const 'Sub' $P5116 = 'cuid_142_1365879995.227' 
    capture_lex $P5116
    .const 'Sub' $P5117 = 'cuid_143_1365879995.227' 
    capture_lex $P5117
    .const 'Sub' $P5118 = 'cuid_144_1365879995.227' 
    capture_lex $P5118
    .const 'Sub' $P5119 = 'cuid_145_1365879995.227' 
    capture_lex $P5119
    .const 'Sub' $P5120 = 'cuid_146_1365879995.227' 
    capture_lex $P5120
    .const 'Sub' $P5121 = 'cuid_147_1365879995.227' 
    capture_lex $P5121
    .const 'Sub' $P5122 = 'cuid_148_1365879995.227' 
    capture_lex $P5122
    .const 'Sub' $P5123 = 'cuid_149_1365879995.227' 
    capture_lex $P5123
    .const 'Sub' $P5124 = 'cuid_150_1365879995.227' 
    capture_lex $P5124
    .const 'Sub' $P5125 = 'cuid_151_1365879995.227' 
    capture_lex $P5125
    .const 'Sub' $P5126 = 'cuid_152_1365879995.227' 
    capture_lex $P5126
    .const 'Sub' $P5127 = 'cuid_153_1365879995.227' 
    capture_lex $P5127
    .const 'Sub' $P5128 = 'cuid_154_1365879995.227' 
    capture_lex $P5128
    .const 'Sub' $P5129 = 'cuid_155_1365879995.227' 
    capture_lex $P5129
    .const 'Sub' $P5130 = 'cuid_156_1365879995.227' 
    capture_lex $P5130
    .const 'Sub' $P5131 = 'cuid_157_1365879995.227' 
    capture_lex $P5131
    .const 'Sub' $P5132 = 'cuid_158_1365879995.227' 
    capture_lex $P5132
    .const 'Sub' $P5133 = 'cuid_159_1365879995.227' 
    capture_lex $P5133
    .const 'Sub' $P5134 = 'cuid_160_1365879995.227' 
    capture_lex $P5134
    .const 'Sub' $P5135 = 'cuid_161_1365879995.227' 
    capture_lex $P5135
    .const 'Sub' $P5136 = 'cuid_162_1365879995.227' 
    capture_lex $P5136
    .const 'Sub' $P5137 = 'cuid_163_1365879995.227' 
    capture_lex $P5137
    .const 'Sub' $P5138 = 'cuid_164_1365879995.227' 
    capture_lex $P5138
    .const 'Sub' $P5139 = 'cuid_165_1365879995.227' 
    capture_lex $P5139
    .const 'Sub' $P5140 = 'cuid_166_1365879995.227' 
    capture_lex $P5140
    .const 'Sub' $P5141 = 'cuid_167_1365879995.227' 
    capture_lex $P5141
    .const 'Sub' $P5142 = 'cuid_168_1365879995.227' 
    capture_lex $P5142
    .const 'Sub' $P5143 = 'cuid_169_1365879995.227' 
    capture_lex $P5143
    .const 'Sub' $P5144 = 'cuid_170_1365879995.227' 
    capture_lex $P5144
    .const 'Sub' $P5145 = 'cuid_171_1365879995.227' 
    capture_lex $P5145
    .const 'Sub' $P5146 = 'cuid_172_1365879995.227' 
    capture_lex $P5146
    .const 'Sub' $P5147 = 'cuid_173_1365879995.227' 
    capture_lex $P5147
    .const 'Sub' $P5148 = 'cuid_174_1365879995.227' 
    capture_lex $P5148
    .const 'Sub' $P5149 = 'cuid_175_1365879995.227' 
    capture_lex $P5149
    .const 'Sub' $P5150 = 'cuid_176_1365879995.227' 
    capture_lex $P5150
    .const 'Sub' $P5151 = 'cuid_177_1365879995.227' 
    capture_lex $P5151
    .const 'Sub' $P5152 = 'cuid_178_1365879995.227' 
    capture_lex $P5152
    .const 'Sub' $P5153 = 'cuid_179_1365879995.227' 
    capture_lex $P5153
    .const 'Sub' $P5154 = 'cuid_180_1365879995.227' 
    capture_lex $P5154
    .const 'Sub' $P5155 = 'cuid_181_1365879995.227' 
    capture_lex $P5155
    .const 'Sub' $P5156 = 'cuid_182_1365879995.227' 
    capture_lex $P5156
    .const 'Sub' $P5157 = 'cuid_183_1365879995.227' 
    capture_lex $P5157
    .const 'Sub' $P5158 = 'cuid_184_1365879995.227' 
    capture_lex $P5158
    .const 'Sub' $P5159 = 'cuid_185_1365879995.227' 
    capture_lex $P5159
    .const 'Sub' $P5160 = 'cuid_186_1365879995.227' 
    capture_lex $P5160
    .const 'Sub' $P5161 = 'cuid_187_1365879995.227' 
    capture_lex $P5161
    .const 'Sub' $P5162 = 'cuid_188_1365879995.227' 
    capture_lex $P5162
    .const 'Sub' $P5163 = 'cuid_189_1365879995.227' 
    capture_lex $P5163
    .const 'Sub' $P5164 = 'cuid_190_1365879995.227' 
    capture_lex $P5164
    .const 'Sub' $P5165 = 'cuid_191_1365879995.227' 
    capture_lex $P5165
    .const 'Sub' $P5166 = 'cuid_192_1365879995.227' 
    capture_lex $P5166
    .const 'Sub' $P5167 = 'cuid_193_1365879995.227' 
    capture_lex $P5167
    .const 'Sub' $P5168 = 'cuid_194_1365879995.227' 
    capture_lex $P5168
    .const 'Sub' $P5169 = 'cuid_195_1365879995.227' 
    capture_lex $P5169
    .const 'Sub' $P5170 = 'cuid_196_1365879995.227' 
    capture_lex $P5170
    .const 'Sub' $P5171 = 'cuid_197_1365879995.227' 
    capture_lex $P5171
    .const 'Sub' $P5172 = 'cuid_198_1365879995.227' 
    capture_lex $P5172
    .const 'Sub' $P5173 = 'cuid_199_1365879995.227' 
    capture_lex $P5173
    .const 'Sub' $P5174 = 'cuid_200_1365879995.227' 
    capture_lex $P5174
    .const 'Sub' $P5175 = 'cuid_201_1365879995.227' 
    capture_lex $P5175
    .const 'Sub' $P5176 = 'cuid_202_1365879995.227' 
    capture_lex $P5176
    .const 'Sub' $P5177 = 'cuid_203_1365879995.227' 
    capture_lex $P5177
    .const 'Sub' $P5178 = 'cuid_204_1365879995.227' 
    capture_lex $P5178
    .const 'Sub' $P5179 = 'cuid_205_1365879995.227' 
    capture_lex $P5179
    .const 'Sub' $P5180 = 'cuid_206_1365879995.227' 
    capture_lex $P5180
    .const 'Sub' $P5181 = 'cuid_207_1365879995.227' 
    capture_lex $P5181
    .const 'Sub' $P5182 = 'cuid_208_1365879995.227' 
    capture_lex $P5182
    .const 'Sub' $P5183 = 'cuid_209_1365879995.227' 
    capture_lex $P5183
    .const 'Sub' $P5184 = 'cuid_210_1365879995.227' 
    capture_lex $P5184
    .const 'Sub' $P5185 = 'cuid_211_1365879995.227' 
    capture_lex $P5185
    .const 'Sub' $P5186 = 'cuid_212_1365879995.227' 
    capture_lex $P5186
    .const 'Sub' $P5187 = 'cuid_213_1365879995.227' 
    capture_lex $P5187
    .const 'Sub' $P5188 = 'cuid_214_1365879995.227' 
    capture_lex $P5188
    .const 'Sub' $P5189 = 'cuid_215_1365879995.227' 
    capture_lex $P5189
    .const 'Sub' $P5190 = 'cuid_216_1365879995.227' 
    capture_lex $P5190
    .const 'Sub' $P5191 = 'cuid_217_1365879995.227' 
    capture_lex $P5191
    .const 'Sub' $P5192 = 'cuid_218_1365879995.227' 
    capture_lex $P5192
    .const 'Sub' $P5193 = 'cuid_219_1365879995.227' 
    capture_lex $P5193
    .const 'Sub' $P5194 = 'cuid_220_1365879995.227' 
    capture_lex $P5194
    .const 'Sub' $P5195 = 'cuid_221_1365879995.227' 
    capture_lex $P5195
    .const 'Sub' $P5196 = 'cuid_223_1365879995.227' 
    capture_lex $P5196
    .const 'Sub' $P5197 = 'cuid_225_1365879995.227' 
    capture_lex $P5197
    .const 'Sub' $P5198 = 'cuid_227_1365879995.227' 
    capture_lex $P5198
    .return ($P5198) 
.end
.HLL "nqp"
.namespace []
.sub "TOP" :subid("cuid_35_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 625
    .param pmc _lex_param_0 
    .lex "%*LANG", $P101 
    .lex "%*HOW", $P102 
    .lex "$file", $P103 
    .lex "$source_id", $P104 
    .lex "$*W", $P105 
    .lex "$*SCOPE", $P106 
    .lex "$*MULTINESS", $P107 
    .lex "$*PKGDECL", $P108 
    .lex "$*INVOCANT_OK", $P109 
    .lex "$*RETURN_USED", $P110 
    .lex "$*CONTROL_USED", $P111 
    .lex "%*HANDLERS", $P112 
    .lex "self", _lex_param_0 
    .local pmc fb_tmp_50 
    .local pmc pkg_viv_tmp_7 
    .local pmc fb_tmp_51 
    .local pmc pkg_viv_tmp_8 
    .local pmc fb_tmp_52 
    .local pmc pkg_lookup_tmp_1 
    .local pmc fb_tmp_53 
    .local pmc pkg_viv_tmp_9 
    .local pmc fb_tmp_54 
    .local pmc pkg_lookup_tmp_2 
    .local pmc fb_tmp_55 
    .local pmc pkg_viv_tmp_10 
    .local pmc fb_tmp_56 
    .local pmc pkg_viv_tmp_11 
    .local pmc fb_tmp_57 
    .local pmc pkg_lookup_tmp_3 
    .local pmc fb_tmp_58 
    .local pmc pkg_viv_tmp_12 
    .local pmc fb_tmp_59 
    .local pmc pkg_viv_tmp_13 
    .local pmc fb_tmp_60 
    .local pmc pkg_viv_tmp_14 
    .local pmc fb_tmp_61 
    .local pmc fb_tmp_62 
    .local pmc fb_tmp_63 
    .local pmc pkg_viv_tmp_15 
    .local pmc fb_tmp_64 
    .local pmc pkg_viv_tmp_16 
    new $P5001, 'Hash'
    set $P101, $P5001
    new $P5002, 'Hash'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P105, $P5005
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P106, $P5006
    nqp_get_sc_object $P5007, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P107, $P5007
    nqp_get_sc_object $P5008, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P108, $P5008
    nqp_get_sc_object $P5009, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P109, $P5009
    nqp_get_sc_object $P5010, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P110, $P5010
    nqp_get_sc_object $P5011, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P111, $P5011
    new $P5012, 'Hash'
    set $P112, $P5012
    unless_null $P101, fallback316
    nqp_get_sc_object $P5021, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5020, $P5021
    set pkg_viv_tmp_8, $P5020
    set fb_tmp_51, pkg_viv_tmp_8
    repr_defined $I5002, fb_tmp_51
    unless $I5002 goto if163_else317 
    set $P5022, fb_tmp_51["%LANG"]
    set $P5024, $P5022
    goto if163_end318
  if163_else317:
    null $P5023
    set $P5024, $P5023
  if163_end318:
    unless_null $P5024, vivi_164319
    new $P5025, 'Hash'
    set pkg_viv_tmp_8["%LANG"], $P5025
    set $P5024, $P5025
  vivi_164319:
    unless_null $P5024, vivi_165320
    die "Contextual %*LANG not found"
    box $P5026, "Contextual %*LANG not found"
    set $P5024, $P5026
  vivi_165320:
    set $P101, $P5024
  fallback316:
    nqp_get_sc_object $P5028, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    set pkg_lookup_tmp_1, $P5028
    get_who $P5029, pkg_lookup_tmp_1
    exists $I5004, $P5029["NQP"]
    unless $I5004 goto if167_else323 
    get_who $P5031, pkg_lookup_tmp_1
    set $P5030, $P5031["NQP"]
    set $P5033, $P5030
    goto if167_end324
  if167_else323:
    nqp_get_sc_object $P5032, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5033, $P5032
  if167_end324:
    get_who $P5027, $P5033
    set fb_tmp_52, $P5027
    repr_defined $I5003, fb_tmp_52
    unless $I5003 goto if166_else321 
    set $P5034, fb_tmp_52["Regex"]
    set $P5036, $P5034
    goto if166_end322
  if166_else321:
    null $P5035
    set $P5036, $P5035
  if166_end322:
    unless_null $P5036, vivi_168325
    nqp_get_sc_object $P5037, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5036, $P5037
  vivi_168325:
    set $P101["Regex"], $P5036
    unless_null $P101, fallback326
    nqp_get_sc_object $P5039, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5038, $P5039
    set pkg_viv_tmp_9, $P5038
    set fb_tmp_53, pkg_viv_tmp_9
    repr_defined $I5005, fb_tmp_53
    unless $I5005 goto if169_else327 
    set $P5040, fb_tmp_53["%LANG"]
    set $P5042, $P5040
    goto if169_end328
  if169_else327:
    null $P5041
    set $P5042, $P5041
  if169_end328:
    unless_null $P5042, vivi_170329
    new $P5043, 'Hash'
    set pkg_viv_tmp_9["%LANG"], $P5043
    set $P5042, $P5043
  vivi_170329:
    unless_null $P5042, vivi_171330
    die "Contextual %*LANG not found"
    box $P5044, "Contextual %*LANG not found"
    set $P5042, $P5044
  vivi_171330:
    set $P101, $P5042
  fallback326:
    nqp_get_sc_object $P5046, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    set pkg_lookup_tmp_2, $P5046
    get_who $P5047, pkg_lookup_tmp_2
    exists $I5007, $P5047["NQP"]
    unless $I5007 goto if173_else333 
    get_who $P5049, pkg_lookup_tmp_2
    set $P5048, $P5049["NQP"]
    set $P5051, $P5048
    goto if173_end334
  if173_else333:
    nqp_get_sc_object $P5050, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5051, $P5050
  if173_end334:
    get_who $P5045, $P5051
    set fb_tmp_54, $P5045
    repr_defined $I5006, fb_tmp_54
    unless $I5006 goto if172_else331 
    set $P5052, fb_tmp_54["RegexActions"]
    set $P5054, $P5052
    goto if172_end332
  if172_else331:
    null $P5053
    set $P5054, $P5053
  if172_end332:
    unless_null $P5054, vivi_174335
    nqp_get_sc_object $P5055, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5054, $P5055
  vivi_174335:
    set $P101["Regex-actions"], $P5054
    unless_null $P101, fallback336
    nqp_get_sc_object $P5057, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5056, $P5057
    set pkg_viv_tmp_10, $P5056
    set fb_tmp_55, pkg_viv_tmp_10
    repr_defined $I5008, fb_tmp_55
    unless $I5008 goto if175_else337 
    set $P5058, fb_tmp_55["%LANG"]
    set $P5060, $P5058
    goto if175_end338
  if175_else337:
    null $P5059
    set $P5060, $P5059
  if175_end338:
    unless_null $P5060, vivi_176339
    new $P5061, 'Hash'
    set pkg_viv_tmp_10["%LANG"], $P5061
    set $P5060, $P5061
  vivi_176339:
    unless_null $P5060, vivi_177340
    die "Contextual %*LANG not found"
    box $P5062, "Contextual %*LANG not found"
    set $P5060, $P5062
  vivi_177340:
    set $P101, $P5060
  fallback336:
    nqp_get_sc_object $P5063, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 38
    set $P101["MAIN"], $P5063
    unless_null $P101, fallback341
    nqp_get_sc_object $P5065, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5064, $P5065
    set pkg_viv_tmp_11, $P5064
    set fb_tmp_56, pkg_viv_tmp_11
    repr_defined $I5009, fb_tmp_56
    unless $I5009 goto if178_else342 
    set $P5066, fb_tmp_56["%LANG"]
    set $P5068, $P5066
    goto if178_end343
  if178_else342:
    null $P5067
    set $P5068, $P5067
  if178_end343:
    unless_null $P5068, vivi_179344
    new $P5069, 'Hash'
    set pkg_viv_tmp_11["%LANG"], $P5069
    set $P5068, $P5069
  vivi_179344:
    unless_null $P5068, vivi_180345
    die "Contextual %*LANG not found"
    box $P5070, "Contextual %*LANG not found"
    set $P5068, $P5070
  vivi_180345:
    set $P101, $P5068
  fallback341:
    nqp_get_sc_object $P5072, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    set pkg_lookup_tmp_3, $P5072
    get_who $P5073, pkg_lookup_tmp_3
    exists $I5011, $P5073["NQP"]
    unless $I5011 goto if182_else348 
    get_who $P5075, pkg_lookup_tmp_3
    set $P5074, $P5075["NQP"]
    set $P5077, $P5074
    goto if182_end349
  if182_else348:
    nqp_get_sc_object $P5076, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5077, $P5076
  if182_end349:
    get_who $P5071, $P5077
    set fb_tmp_57, $P5071
    repr_defined $I5010, fb_tmp_57
    unless $I5010 goto if181_else346 
    set $P5078, fb_tmp_57["Actions"]
    set $P5080, $P5078
    goto if181_end347
  if181_else346:
    null $P5079
    set $P5080, $P5079
  if181_end347:
    unless_null $P5080, vivi_183350
    nqp_get_sc_object $P5081, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5080, $P5081
  vivi_183350:
    set $P101["MAIN-actions"], $P5080
    unless_null $P102, fallback356
    nqp_get_sc_object $P5090, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5089, $P5090
    set pkg_viv_tmp_13, $P5089
    set fb_tmp_59, pkg_viv_tmp_13
    repr_defined $I5013, fb_tmp_59
    unless $I5013 goto if187_else357 
    set $P5091, fb_tmp_59["%HOW"]
    set $P5093, $P5091
    goto if187_end358
  if187_else357:
    null $P5092
    set $P5093, $P5092
  if187_end358:
    unless_null $P5093, vivi_188359
    new $P5094, 'Hash'
    set pkg_viv_tmp_13["%HOW"], $P5094
    set $P5093, $P5094
  vivi_188359:
    unless_null $P5093, vivi_189360
    die "Contextual %*HOW not found"
    box $P5095, "Contextual %*HOW not found"
    set $P5093, $P5095
  vivi_189360:
    set $P102, $P5093
  fallback356:
    get_knowhow $P5096
    set $P102["knowhow"], $P5096
    unless_null $P102, fallback361
    nqp_get_sc_object $P5098, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5097, $P5098
    set pkg_viv_tmp_14, $P5097
    set fb_tmp_60, pkg_viv_tmp_14
    repr_defined $I5014, fb_tmp_60
    unless $I5014 goto if190_else362 
    set $P5099, fb_tmp_60["%HOW"]
    set $P5101, $P5099
    goto if190_end363
  if190_else362:
    null $P5100
    set $P5101, $P5100
  if190_end363:
    unless_null $P5101, vivi_191364
    new $P5102, 'Hash'
    set pkg_viv_tmp_14["%HOW"], $P5102
    set $P5101, $P5102
  vivi_191364:
    unless_null $P5101, vivi_192365
    die "Contextual %*HOW not found"
    box $P5103, "Contextual %*HOW not found"
    set $P5101, $P5103
  vivi_192365:
    set $P102, $P5101
  fallback361:
    get_knowhow_attribute $P5104
    set $P102["knowhow-attr"], $P5104
    find_dynamic_lex $P5105, "$?FILES"
    set $P103, $P5105
.annotate 'line', 644
    nqp_decontainerize $P5106, _lex_param_0
    $P5107 = $P5106."target"()
    set $S5003, $P5107
    nqp_sha1 $S5002, $S5003
    find_dynamic_lex $P5108, "%*COMPILING"
    unless_null $P5108, fallback372
    nqp_get_sc_object $P5110, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5109, $P5110
    set pkg_viv_tmp_15, $P5109
    set fb_tmp_63, pkg_viv_tmp_15
    repr_defined $I5017, fb_tmp_63
    unless $I5017 goto if196_else373 
    set $P5111, fb_tmp_63["%COMPILING"]
    set $P5113, $P5111
    goto if196_end374
  if196_else373:
    null $P5112
    set $P5113, $P5112
  if196_end374:
    unless_null $P5113, vivi_197375
    new $P5114, 'Hash'
    set pkg_viv_tmp_15["%COMPILING"], $P5114
    set $P5113, $P5114
  vivi_197375:
    unless_null $P5113, vivi_198376
    die "Contextual %*COMPILING not found"
    box $P5115, "Contextual %*COMPILING not found"
    set $P5113, $P5115
  vivi_198376:
    set $P5108, $P5113
  fallback372:
    set fb_tmp_62, $P5108
    repr_defined $I5016, fb_tmp_62
    unless $I5016 goto if195_else370 
    set $P5116, fb_tmp_62["%?OPTIONS"]
    set $P5118, $P5116
    goto if195_end371
  if195_else370:
    null $P5117
    set $P5118, $P5117
  if195_end371:
    unless_null $P5118, vivi_199377
    nqp_get_sc_object $P5119, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5118, $P5119
  vivi_199377:
    set fb_tmp_61, $P5118
    repr_defined $I5015, fb_tmp_61
    unless $I5015 goto if194_else368 
    set $P5120, fb_tmp_61["stable-sc"]
    set $P5122, $P5120
    goto if194_end369
  if194_else368:
    null $P5121
    set $P5122, $P5121
  if194_end369:
    unless_null $P5122, vivi_200378
    nqp_get_sc_object $P5123, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5122, $P5123
  vivi_200378:
    unless $P5122 goto if193_else366 
    set $S5006, ""
    goto if193_end367
  if193_else366:
    time $N5001
    set $S5005, $N5001
    concat $S5004, "-", $S5005
    set $S5006, $S5004
  if193_end367:
    concat $S5001, $S5002, $S5006
    box $P5124, $S5001
    set $P104, $P5124
    isnull $I5018, $P103
    unless $I5018 goto if201_else379 
.annotate 'line', 647
    nqp_get_sc_object $P5125, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 3
    $P5126 = $P5125."new"($P104 :named("handle"))
    set $P5129, $P5126
    goto if201_end380
  if201_else379:
.annotate 'line', 648
    nqp_get_sc_object $P5127, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 3
    $P5128 = $P5127."new"($P104 :named("handle"), $P103 :named("description"))
    set $P5129, $P5128
  if201_end380:
    set $P105, $P5129
    box $P5130, ""
    set $P106, $P5130
    box $P5131, ""
    set $P107, $P5131
    box $P5132, ""
    set $P108, $P5132
    box $P5133, 0
    set $P109, $P5133
    box $P5134, 0
    set $P110, $P5134
    box $P5135, 0
    set $P111, $P5135
.annotate 'line', 657
    nqp_decontainerize $P5143, _lex_param_0
    $P5144 = $P5143."comp_unit"()
    .return ($P5144) 
.end
.HLL "nqp"
.namespace []
.sub "identifier" :subid("cuid_36_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 662
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx205_start
    .local string rx205_tgt
    .local int rx205_pos
    .local int rx205_off
    .local int rx205_eos
    .local int rx205_rep
    .local pmc rx205_cur
    .local pmc rx205_curclass
    .local pmc rx205_bstack
    .local pmc rx205_cstack
    rx205_start = self."!cursor_start_all"()
    set rx205_cur, rx205_start[0]
    set rx205_tgt, rx205_start[1]
    set rx205_pos, rx205_start[2]
    set rx205_curclass, rx205_start[3]
    set rx205_bstack, rx205_start[4]
    set $I19, rx205_start[5]
    store_lex unicode:"$\x{a2}", rx205_cur
    length rx205_eos, rx205_tgt
    eq $I19, 1, rx205_restart388
    gt rx205_pos, rx205_eos, rx205_fail389
    repr_get_attr_int $I11, self, rx205_curclass, "$!from"
    ne $I11, -1, rxscan206_done395
    goto rxscan206_scan394
  rxscan206_loop393:
    inc rx205_pos
    gt rx205_pos, rx205_eos, rx205_fail389
    repr_bind_attr_int rx205_cur, rx205_curclass, "$!from", rx205_pos
  rxscan206_scan394:
    nqp_rxmark rx205_bstack, rxscan206_loop393, rx205_pos, 0
  rxscan206_done395:
    repr_bind_attr_int rx205_cur, rx205_curclass, "$!pos", rx205_pos
    $P11 = rx205_cur."ident"()
    repr_get_attr_int $I11, $P11, rx205_curclass, "$!pos"
    lt $I11, 0, rx205_fail389
    repr_get_attr_int rx205_pos, $P11, rx205_curclass, "$!pos"
    nqp_rxmark rx205_bstack, rxquantr208_done398, rx205_pos, 0
  rxquantr208_loop397:
  alt209_0400:
    nqp_rxmark rx205_bstack, alt209_1401, rx205_pos, 0
    add $I11, rx205_pos, 1
    gt $I11, rx205_eos, rx205_fail389
    substr $S10, rx205_tgt, rx205_pos, 1
    ne $S10, ucs4:"-", rx205_fail389
    add rx205_pos, 1
    goto alt209_end399
  alt209_1401:
    ge rx205_pos, rx205_eos, rx205_fail389
    substr $S11, rx205_tgt, rx205_pos, 1
    index $I11, ucs4:"'", $S11
    lt $I11, 0, rx205_fail389
    inc rx205_pos
  alt209_end399:
    repr_bind_attr_int rx205_cur, rx205_curclass, "$!pos", rx205_pos
    $P11 = rx205_cur."ident"()
    repr_get_attr_int $I11, $P11, rx205_curclass, "$!pos"
    lt $I11, 0, rx205_fail389
    repr_get_attr_int rx205_pos, $P11, rx205_curclass, "$!pos"
    nqp_rxpeek $I19, rx205_bstack, rxquantr208_done398
    inc $I19
    inc $I19
    set rx205_rep, rx205_bstack[$I19]
    nqp_rxcommit rx205_bstack, rxquantr208_done398
    inc rx205_rep
    nqp_rxmark rx205_bstack, rxquantr208_done398, rx205_pos, rx205_rep
    goto rxquantr208_loop397
  rxquantr208_done398:
    rx205_cur."!cursor_pass"(rx205_pos, "identifier", 'backtrack'=>1)
    .return (rx205_cur)
  rx205_restart388:
    repr_get_attr_obj rx205_cstack, rx205_cur, rx205_curclass, "$!cstack"
  rx205_fail389:
    unless rx205_bstack, rx205_done387
    pop $I19, rx205_bstack
    if_null rx205_cstack, rx205_cstack_done392
    unless rx205_cstack, rx205_cstack_done392
    dec $I19
    set $P11, rx205_cstack[$I19]
  rx205_cstack_done392:
    pop rx205_rep, rx205_bstack
    pop rx205_pos, rx205_bstack
    pop $I19, rx205_bstack
    lt rx205_pos, -1, rx205_done387
    lt rx205_pos, 0, rx205_fail389
    eq $I19, 0, rx205_fail389
    nqp_islist $I20, rx205_cstack
    unless $I20, rx205_jump390
    elements $I18, rx205_bstack
    le $I18, 0, rx205_cut391
    dec $I18
    set $I18, rx205_bstack[$I18]
  rx205_cut391:
    assign rx205_cstack, $I18
  rx205_jump390:
    jump $I19
  rx205_done387:
    rx205_cur."!cursor_fail"()
    .return (rx205_cur) 
.end
.HLL "nqp"
.namespace []
.sub "name" :subid("cuid_37_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 664
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx211_start
    .local string rx211_tgt
    .local int rx211_pos
    .local int rx211_off
    .local int rx211_eos
    .local int rx211_rep
    .local pmc rx211_cur
    .local pmc rx211_curclass
    .local pmc rx211_bstack
    .local pmc rx211_cstack
    rx211_start = self."!cursor_start_all"()
    set rx211_cur, rx211_start[0]
    set rx211_tgt, rx211_start[1]
    set rx211_pos, rx211_start[2]
    set rx211_curclass, rx211_start[3]
    set rx211_bstack, rx211_start[4]
    set $I19, rx211_start[5]
    store_lex unicode:"$\x{a2}", rx211_cur
    length rx211_eos, rx211_tgt
    eq $I19, 1, rx211_restart405
    gt rx211_pos, rx211_eos, rx211_fail406
    repr_get_attr_int $I11, self, rx211_curclass, "$!from"
    ne $I11, -1, rxscan212_done412
    goto rxscan212_scan411
  rxscan212_loop410:
    inc rx211_pos
    gt rx211_pos, rx211_eos, rx211_fail406
    repr_bind_attr_int rx211_cur, rx211_curclass, "$!from", rx211_pos
  rxscan212_scan411:
    nqp_rxmark rx211_bstack, rxscan212_loop410, rx211_pos, 0
  rxscan212_done412:
    repr_bind_attr_int rx211_cur, rx211_curclass, "$!pos", rx211_pos
    $P11 = rx211_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx211_curclass, "$!pos"
    lt $I11, 0, rx211_fail406
    nqp_rxmark rx211_bstack, rxsubrule213_pass413, -1, 0
  rxsubrule213_pass413:
    rx211_cstack = rx211_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx211_pos, $P11, rx211_curclass, "$!pos"
    nqp_rxmark rx211_bstack, rxquantr214_done415, rx211_pos, 0
  rxquantr214_loop414:
    add $I11, rx211_pos, 2
    gt $I11, rx211_eos, rx211_fail406
    substr $S10, rx211_tgt, rx211_pos, 2
    ne $S10, ucs4:"::", rx211_fail406
    add rx211_pos, 2
    repr_bind_attr_int rx211_cur, rx211_curclass, "$!pos", rx211_pos
    $P11 = rx211_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx211_curclass, "$!pos"
    lt $I11, 0, rx211_fail406
    nqp_rxmark rx211_bstack, rxsubrule215_pass416, -1, 0
  rxsubrule215_pass416:
    rx211_cstack = rx211_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx211_pos, $P11, rx211_curclass, "$!pos"
    nqp_rxpeek $I19, rx211_bstack, rxquantr214_done415
    inc $I19
    inc $I19
    set rx211_rep, rx211_bstack[$I19]
    nqp_rxcommit rx211_bstack, rxquantr214_done415
    inc rx211_rep
    nqp_rxmark rx211_bstack, rxquantr214_done415, rx211_pos, rx211_rep
    goto rxquantr214_loop414
  rxquantr214_done415:
    rx211_cur."!cursor_pass"(rx211_pos, "name", 'backtrack'=>1)
    .return (rx211_cur)
  rx211_restart405:
    repr_get_attr_obj rx211_cstack, rx211_cur, rx211_curclass, "$!cstack"
  rx211_fail406:
    unless rx211_bstack, rx211_done404
    pop $I19, rx211_bstack
    if_null rx211_cstack, rx211_cstack_done409
    unless rx211_cstack, rx211_cstack_done409
    dec $I19
    set $P11, rx211_cstack[$I19]
  rx211_cstack_done409:
    pop rx211_rep, rx211_bstack
    pop rx211_pos, rx211_bstack
    pop $I19, rx211_bstack
    lt rx211_pos, -1, rx211_done404
    lt rx211_pos, 0, rx211_fail406
    eq $I19, 0, rx211_fail406
    nqp_islist $I20, rx211_cstack
    unless $I20, rx211_jump407
    elements $I18, rx211_bstack
    le $I18, 0, rx211_cut408
    dec $I18
    set $I18, rx211_bstack[$I18]
  rx211_cut408:
    assign rx211_cstack, $I18
  rx211_jump407:
    jump $I19
  rx211_done404:
    rx211_cur."!cursor_fail"()
    .return (rx211_cur) 
.end
.HLL "nqp"
.namespace []
.sub "deflongname" :subid("cuid_38_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 666
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx216_start
    .local string rx216_tgt
    .local int rx216_pos
    .local int rx216_off
    .local int rx216_eos
    .local int rx216_rep
    .local pmc rx216_cur
    .local pmc rx216_curclass
    .local pmc rx216_bstack
    .local pmc rx216_cstack
    rx216_start = self."!cursor_start_all"()
    set rx216_cur, rx216_start[0]
    set rx216_tgt, rx216_start[1]
    set rx216_pos, rx216_start[2]
    set rx216_curclass, rx216_start[3]
    set rx216_bstack, rx216_start[4]
    set $I19, rx216_start[5]
    store_lex unicode:"$\x{a2}", rx216_cur
    length rx216_eos, rx216_tgt
    eq $I19, 1, rx216_restart419
    gt rx216_pos, rx216_eos, rx216_fail420
    repr_get_attr_int $I11, self, rx216_curclass, "$!from"
    ne $I11, -1, rxscan217_done426
    goto rxscan217_scan425
  rxscan217_loop424:
    inc rx216_pos
    gt rx216_pos, rx216_eos, rx216_fail420
    repr_bind_attr_int rx216_cur, rx216_curclass, "$!from", rx216_pos
  rxscan217_scan425:
    nqp_rxmark rx216_bstack, rxscan217_loop424, rx216_pos, 0
  rxscan217_done426:
    repr_bind_attr_int rx216_cur, rx216_curclass, "$!pos", rx216_pos
    $P11 = rx216_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx216_curclass, "$!pos"
    lt $I11, 0, rx216_fail420
    nqp_rxmark rx216_bstack, rxsubrule218_pass427, -1, 0
  rxsubrule218_pass427:
    rx216_cstack = rx216_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx216_pos, $P11, rx216_curclass, "$!pos"
    nqp_rxmark rx216_bstack, rxquantr219_done429, rx216_pos, 0
  rxquantr219_loop428:
    repr_bind_attr_int rx216_cur, rx216_curclass, "$!pos", rx216_pos
    $P11 = rx216_cur."colonpair"()
    repr_get_attr_int $I11, $P11, rx216_curclass, "$!pos"
    lt $I11, 0, rx216_fail420
    goto rxsubrule220_pass430
  rxsubrule220_back431:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx216_curclass, "$!pos"
    lt $I11, 0, rx216_fail420
  rxsubrule220_pass430:
    rx216_cstack = rx216_cur."!cursor_capture"($P11, "colonpair")
    set_addr $I11, rxsubrule220_back431
    push rx216_bstack, $I11
    push rx216_bstack, 0
    push rx216_bstack, rx216_pos
    elements $I11, rx216_cstack
    push rx216_bstack, $I11
    repr_get_attr_int rx216_pos, $P11, rx216_curclass, "$!pos"
    nqp_rxpeek $I19, rx216_bstack, rxquantr219_done429
    inc $I19
    inc $I19
    set rx216_rep, rx216_bstack[$I19]
    nqp_rxcommit rx216_bstack, rxquantr219_done429
    inc rx216_rep
  rxquantr219_done429:
    rx216_cur."!cursor_pass"(rx216_pos, "deflongname", 'backtrack'=>1)
    .return (rx216_cur)
  rx216_restart419:
    repr_get_attr_obj rx216_cstack, rx216_cur, rx216_curclass, "$!cstack"
  rx216_fail420:
    unless rx216_bstack, rx216_done418
    pop $I19, rx216_bstack
    if_null rx216_cstack, rx216_cstack_done423
    unless rx216_cstack, rx216_cstack_done423
    dec $I19
    set $P11, rx216_cstack[$I19]
  rx216_cstack_done423:
    pop rx216_rep, rx216_bstack
    pop rx216_pos, rx216_bstack
    pop $I19, rx216_bstack
    lt rx216_pos, -1, rx216_done418
    lt rx216_pos, 0, rx216_fail420
    eq $I19, 0, rx216_fail420
    nqp_islist $I20, rx216_cstack
    unless $I20, rx216_jump421
    elements $I18, rx216_bstack
    le $I18, 0, rx216_cut422
    dec $I18
    set $I18, rx216_bstack[$I18]
  rx216_cut422:
    assign rx216_cstack, $I18
  rx216_jump421:
    jump $I19
  rx216_done418:
    rx216_cur."!cursor_fail"()
    .return (rx216_cur) 
.end
.HLL "nqp"
.namespace []
.sub "ENDSTMT" :subid("cuid_39_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 670
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx221_start
    .local string rx221_tgt
    .local int rx221_pos
    .local int rx221_off
    .local int rx221_eos
    .local int rx221_rep
    .local pmc rx221_cur
    .local pmc rx221_curclass
    .local pmc rx221_bstack
    .local pmc rx221_cstack
    rx221_start = self."!cursor_start_all"()
    set rx221_cur, rx221_start[0]
    set rx221_tgt, rx221_start[1]
    set rx221_pos, rx221_start[2]
    set rx221_curclass, rx221_start[3]
    set rx221_bstack, rx221_start[4]
    set $I19, rx221_start[5]
    store_lex unicode:"$\x{a2}", rx221_cur
    length rx221_eos, rx221_tgt
    eq $I19, 1, rx221_restart434
    gt rx221_pos, rx221_eos, rx221_fail435
    repr_get_attr_int $I11, self, rx221_curclass, "$!from"
    ne $I11, -1, rxscan222_done441
    goto rxscan222_scan440
  rxscan222_loop439:
    inc rx221_pos
    gt rx221_pos, rx221_eos, rx221_fail435
    repr_bind_attr_int rx221_cur, rx221_curclass, "$!from", rx221_pos
  rxscan222_scan440:
    nqp_rxmark rx221_bstack, rxscan222_loop439, rx221_pos, 0
  rxscan222_done441:
    nqp_rxmark rx221_bstack, rxquantr223_done443, rx221_pos, 0
  rxquantr223_loop442:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt224_0445
    nqp_push_label $P11, alt224_1450
    nqp_rxmark rx221_bstack, alt224_end444, -1, 0
    rx221_cur."!alt"(rx221_pos, "alt_nfa__1_1365879996.59", $P11)
    goto rx221_fail435
  alt224_0445:
    nqp_rxmark rx221_bstack, rxquantr225_done447, rx221_pos, 0
  rxquantr225_loop446:
    ge rx221_pos, rx221_eos, rx221_fail435
    substr $S11, rx221_tgt, rx221_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx221_fail435
    inc rx221_pos
    nqp_rxpeek $I19, rx221_bstack, rxquantr225_done447
    inc $I19
    inc $I19
    set rx221_rep, rx221_bstack[$I19]
    nqp_rxcommit rx221_bstack, rxquantr225_done447
    inc rx221_rep
    nqp_rxmark rx221_bstack, rxquantr225_done447, rx221_pos, rx221_rep
    goto rxquantr225_loop446
  rxquantr225_done447:
    is_cclass $I11, .CCLASS_NEWLINE, rx221_tgt, rx221_pos
    if $I11, rxanchor226_done448
    ne rx221_pos, rx221_eos, rx221_fail435
    eq rx221_pos, 0, rxanchor226_done448
    sub $I11, rx221_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx221_tgt, $I11
    if $I11, rx221_fail435
  rxanchor226_done448:
    repr_bind_attr_int rx221_cur, rx221_curclass, "$!pos", rx221_pos
    $P11 = rx221_cur."ws"()
    repr_get_attr_int $I11, $P11, rx221_curclass, "$!pos"
    lt $I11, 0, rx221_fail435
    repr_get_attr_int rx221_pos, $P11, rx221_curclass, "$!pos"
    repr_bind_attr_int rx221_cur, rx221_curclass, "$!pos", rx221_pos
    $P11 = rx221_cur."MARKER"("endstmt")
    repr_get_attr_int $I11, $P11, rx221_curclass, "$!pos"
    lt $I11, 0, rx221_fail435
    goto alt224_end444
  alt224_1450:
    nqp_rxmark rx221_bstack, rxquantr228_done452, rx221_pos, 0
  rxquantr228_loop451:
    repr_bind_attr_int rx221_cur, rx221_curclass, "$!pos", rx221_pos
    $P11 = rx221_cur."unv"()
    repr_get_attr_int $I11, $P11, rx221_curclass, "$!pos"
    lt $I11, 0, rx221_fail435
    goto rxsubrule229_pass453
  rxsubrule229_back454:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx221_curclass, "$!pos"
    lt $I11, 0, rx221_fail435
  rxsubrule229_pass453:
    rx221_cstack = rx221_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule229_back454
    push rx221_bstack, $I11
    push rx221_bstack, 0
    push rx221_bstack, rx221_pos
    elements $I11, rx221_cstack
    push rx221_bstack, $I11
    repr_get_attr_int rx221_pos, $P11, rx221_curclass, "$!pos"
    nqp_rxpeek $I19, rx221_bstack, rxquantr228_done452
    inc $I19
    inc $I19
    set rx221_rep, rx221_bstack[$I19]
    nqp_rxcommit rx221_bstack, rxquantr228_done452
    inc rx221_rep
  rxquantr228_done452:
    is_cclass $I11, .CCLASS_NEWLINE, rx221_tgt, rx221_pos
    if $I11, rxanchor230_done455
    ne rx221_pos, rx221_eos, rx221_fail435
    eq rx221_pos, 0, rxanchor230_done455
    sub $I11, rx221_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx221_tgt, $I11
    if $I11, rx221_fail435
  rxanchor230_done455:
    repr_bind_attr_int rx221_cur, rx221_curclass, "$!pos", rx221_pos
    $P11 = rx221_cur."ws"()
    repr_get_attr_int $I11, $P11, rx221_curclass, "$!pos"
    lt $I11, 0, rx221_fail435
    repr_get_attr_int rx221_pos, $P11, rx221_curclass, "$!pos"
    repr_bind_attr_int rx221_cur, rx221_curclass, "$!pos", rx221_pos
    $P11 = rx221_cur."MARKER"("endstmt")
    repr_get_attr_int $I11, $P11, rx221_curclass, "$!pos"
    lt $I11, 0, rx221_fail435
    goto alt224_end444
  alt224_end444:
    nqp_rxpeek $I19, rx221_bstack, rxquantr223_done443
    inc $I19
    inc $I19
    set rx221_rep, rx221_bstack[$I19]
    nqp_rxcommit rx221_bstack, rxquantr223_done443
    inc rx221_rep
  rxquantr223_done443:
    rx221_cur."!cursor_pass"(rx221_pos, "ENDSTMT", 'backtrack'=>1)
    .return (rx221_cur)
  rx221_restart434:
    repr_get_attr_obj rx221_cstack, rx221_cur, rx221_curclass, "$!cstack"
  rx221_fail435:
    unless rx221_bstack, rx221_done433
    pop $I19, rx221_bstack
    if_null rx221_cstack, rx221_cstack_done438
    unless rx221_cstack, rx221_cstack_done438
    dec $I19
    set $P11, rx221_cstack[$I19]
  rx221_cstack_done438:
    pop rx221_rep, rx221_bstack
    pop rx221_pos, rx221_bstack
    pop $I19, rx221_bstack
    lt rx221_pos, -1, rx221_done433
    lt rx221_pos, 0, rx221_fail435
    eq $I19, 0, rx221_fail435
    nqp_islist $I20, rx221_cstack
    unless $I20, rx221_jump436
    elements $I18, rx221_bstack
    le $I18, 0, rx221_cut437
    dec $I18
    set $I18, rx221_bstack[$I18]
  rx221_cut437:
    assign rx221_cstack, $I18
  rx221_jump436:
    jump $I19
  rx221_done433:
    rx221_cur."!cursor_fail"()
    .return (rx221_cur) 
.end
.HLL "nqp"
.namespace []
.sub "ws" :subid("cuid_40_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 677
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx232_start
    .local string rx232_tgt
    .local int rx232_pos
    .local int rx232_off
    .local int rx232_eos
    .local int rx232_rep
    .local pmc rx232_cur
    .local pmc rx232_curclass
    .local pmc rx232_bstack
    .local pmc rx232_cstack
    rx232_start = self."!cursor_start_all"()
    set rx232_cur, rx232_start[0]
    set rx232_tgt, rx232_start[1]
    set rx232_pos, rx232_start[2]
    set rx232_curclass, rx232_start[3]
    set rx232_bstack, rx232_start[4]
    set $I19, rx232_start[5]
    store_lex unicode:"$\x{a2}", rx232_cur
    length rx232_eos, rx232_tgt
    eq $I19, 1, rx232_restart459
    gt rx232_pos, rx232_eos, rx232_fail460
    repr_get_attr_int $I11, self, rx232_curclass, "$!from"
    ne $I11, -1, rxscan233_done466
    goto rxscan233_scan465
  rxscan233_loop464:
    inc rx232_pos
    gt rx232_pos, rx232_eos, rx232_fail460
    repr_bind_attr_int rx232_cur, rx232_curclass, "$!from", rx232_pos
  rxscan233_scan465:
    nqp_rxmark rx232_bstack, rxscan233_loop464, rx232_pos, 0
  rxscan233_done466:
  alt234_0468:
    nqp_rxmark rx232_bstack, alt234_1469, rx232_pos, 0
    repr_bind_attr_int rx232_cur, rx232_curclass, "$!pos", rx232_pos
    $P11 = rx232_cur."MARKED"("ws")
    repr_get_attr_int $I11, $P11, rx232_curclass, "$!pos"
    lt $I11, 0, rx232_fail460
    goto alt234_end467
  alt234_1469:
    repr_bind_attr_int rx232_cur, rx232_curclass, "$!pos", rx232_pos
    $P11 = rx232_cur."ww"()
    repr_get_attr_int $I11, $P11, rx232_curclass, "$!pos"
    ge $I11, 0, rx232_fail460
    nqp_rxmark rx232_bstack, rxquantr235_done471, rx232_pos, 0
  rxquantr235_loop470:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt236_0473
    nqp_push_label $P11, alt236_1476
    nqp_push_label $P11, alt236_2479
    nqp_push_label $P11, alt236_3482
    nqp_rxmark rx232_bstack, alt236_end472, -1, 0
    rx232_cur."!alt"(rx232_pos, "alt_nfa__2_1365879996.609", $P11)
    goto rx232_fail460
  alt236_0473:
    nqp_rxmark rx232_bstack, rxquantr237_done475, -1, 0
  rxquantr237_loop474:
    ge rx232_pos, rx232_eos, rx232_fail460
    substr $S11, rx232_tgt, rx232_pos, 1
    index $I11, ucs4:"\n\x{b}\f\r\x{85}\u2028\u2029", $S11
    lt $I11, 0, rx232_fail460
    inc rx232_pos
    nqp_rxpeek $I19, rx232_bstack, rxquantr237_done475
    inc $I19
    inc $I19
    set rx232_rep, rx232_bstack[$I19]
    nqp_rxcommit rx232_bstack, rxquantr237_done475
    inc rx232_rep
    nqp_rxmark rx232_bstack, rxquantr237_done475, rx232_pos, rx232_rep
    goto rxquantr237_loop474
  rxquantr237_done475:
    goto alt236_end472
  alt236_1476:
    add $I11, rx232_pos, 1
    gt $I11, rx232_eos, rx232_fail460
    substr $S10, rx232_tgt, rx232_pos, 1
    ne $S10, ucs4:"#", rx232_fail460
    add rx232_pos, 1
    nqp_rxmark rx232_bstack, rxquantr238_done478, rx232_pos, 0
  rxquantr238_loop477:
    ge rx232_pos, rx232_eos, rx232_fail460
    is_cclass $I11, .CCLASS_NEWLINE, rx232_tgt, rx232_pos
    if $I11, rx232_fail460
    substr $S10, rx232_tgt, rx232_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx232_pos, $I11
    add rx232_pos, 1
    nqp_rxpeek $I19, rx232_bstack, rxquantr238_done478
    inc $I19
    inc $I19
    set rx232_rep, rx232_bstack[$I19]
    nqp_rxcommit rx232_bstack, rxquantr238_done478
    inc rx232_rep
    nqp_rxmark rx232_bstack, rxquantr238_done478, rx232_pos, rx232_rep
    goto rxquantr238_loop477
  rxquantr238_done478:
    goto alt236_end472
  alt236_2479:
    eq rx232_pos, 0, rxanchor239_done480
    ge rx232_pos, rx232_eos, rx232_fail460
    sub $I11, rx232_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx232_tgt, $I11
    unless $I11, rx232_fail460
  rxanchor239_done480:
    repr_bind_attr_int rx232_cur, rx232_curclass, "$!pos", rx232_pos
    $P11 = rx232_cur."pod_comment"()
    repr_get_attr_int $I11, $P11, rx232_curclass, "$!pos"
    lt $I11, 0, rx232_fail460
    repr_get_attr_int rx232_pos, $P11, rx232_curclass, "$!pos"
    goto alt236_end472
  alt236_3482:
    nqp_rxmark rx232_bstack, rxquantr241_done484, -1, 0
  rxquantr241_loop483:
    ge rx232_pos, rx232_eos, rx232_fail460
    substr $S11, rx232_tgt, rx232_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx232_fail460
    inc rx232_pos
    nqp_rxpeek $I19, rx232_bstack, rxquantr241_done484
    inc $I19
    inc $I19
    set rx232_rep, rx232_bstack[$I19]
    nqp_rxcommit rx232_bstack, rxquantr241_done484
    inc rx232_rep
    nqp_rxmark rx232_bstack, rxquantr241_done484, rx232_pos, rx232_rep
    goto rxquantr241_loop483
  rxquantr241_done484:
    goto alt236_end472
  alt236_end472:
    nqp_rxpeek $I19, rx232_bstack, rxquantr235_done471
    inc $I19
    inc $I19
    set rx232_rep, rx232_bstack[$I19]
    nqp_rxcommit rx232_bstack, rxquantr235_done471
    inc rx232_rep
    nqp_rxmark rx232_bstack, rxquantr235_done471, rx232_pos, rx232_rep
    goto rxquantr235_loop470
  rxquantr235_done471:
    repr_bind_attr_int rx232_cur, rx232_curclass, "$!pos", rx232_pos
    $P11 = rx232_cur."MARKER"("ws")
    repr_get_attr_int $I11, $P11, rx232_curclass, "$!pos"
    lt $I11, 0, rx232_fail460
  alt234_end467:
    rx232_cur."!cursor_pass"(rx232_pos, "ws", 'backtrack'=>1)
    .return (rx232_cur)
  rx232_restart459:
    repr_get_attr_obj rx232_cstack, rx232_cur, rx232_curclass, "$!cstack"
  rx232_fail460:
    unless rx232_bstack, rx232_done458
    pop $I19, rx232_bstack
    if_null rx232_cstack, rx232_cstack_done463
    unless rx232_cstack, rx232_cstack_done463
    dec $I19
    set $P11, rx232_cstack[$I19]
  rx232_cstack_done463:
    pop rx232_rep, rx232_bstack
    pop rx232_pos, rx232_bstack
    pop $I19, rx232_bstack
    lt rx232_pos, -1, rx232_done458
    lt rx232_pos, 0, rx232_fail460
    eq $I19, 0, rx232_fail460
    nqp_islist $I20, rx232_cstack
    unless $I20, rx232_jump461
    elements $I18, rx232_bstack
    le $I18, 0, rx232_cut462
    dec $I18
    set $I18, rx232_bstack[$I18]
  rx232_cut462:
    assign rx232_cstack, $I18
  rx232_jump461:
    jump $I19
  rx232_done458:
    rx232_cur."!cursor_fail"()
    .return (rx232_cur) 
.end
.HLL "nqp"
.namespace []
.sub "unv" :subid("cuid_41_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 688
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_42_1365879995.227' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx242_start
    .local string rx242_tgt
    .local int rx242_pos
    .local int rx242_off
    .local int rx242_eos
    .local int rx242_rep
    .local pmc rx242_cur
    .local pmc rx242_curclass
    .local pmc rx242_bstack
    .local pmc rx242_cstack
    rx242_start = self."!cursor_start_all"()
    set rx242_cur, rx242_start[0]
    set rx242_tgt, rx242_start[1]
    set rx242_pos, rx242_start[2]
    set rx242_curclass, rx242_start[3]
    set rx242_bstack, rx242_start[4]
    set $I19, rx242_start[5]
    store_lex unicode:"$\x{a2}", rx242_cur
    length rx242_eos, rx242_tgt
    eq $I19, 1, rx242_restart487
    gt rx242_pos, rx242_eos, rx242_fail488
    repr_get_attr_int $I11, self, rx242_curclass, "$!from"
    ne $I11, -1, rxscan243_done494
    goto rxscan243_scan493
  rxscan243_loop492:
    inc rx242_pos
    gt rx242_pos, rx242_eos, rx242_fail488
    repr_bind_attr_int rx242_cur, rx242_curclass, "$!from", rx242_pos
  rxscan243_scan493:
    nqp_rxmark rx242_bstack, rxscan243_loop492, rx242_pos, 0
  rxscan243_done494:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt244_0496
    nqp_push_label $P11, alt244_1514
    nqp_push_label $P11, alt244_2519
    nqp_rxmark rx242_bstack, alt244_end495, -1, 0
    rx242_cur."!alt"(rx242_pos, "alt_nfa__4_1365879996.63", $P11)
    goto rx242_fail488
  alt244_0496:
    eq rx242_pos, 0, rxanchor245_done497
    ge rx242_pos, rx242_eos, rx242_fail488
    sub $I11, rx242_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx242_tgt, $I11
    unless $I11, rx242_fail488
  rxanchor245_done497:
    .const 'Sub' $P5001 = 'cuid_42_1365879995.227' 
    capture_lex $P5001
    repr_bind_attr_int rx242_cur, rx242_curclass, "$!pos", rx242_pos
    $P11 = rx242_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx242_curclass, "$!pos"
    lt $I11, 0, rx242_fail488
    repr_bind_attr_int rx242_cur, rx242_curclass, "$!pos", rx242_pos
    $P11 = rx242_cur."pod_comment"()
    repr_get_attr_int $I11, $P11, rx242_curclass, "$!pos"
    lt $I11, 0, rx242_fail488
    repr_get_attr_int rx242_pos, $P11, rx242_curclass, "$!pos"
    goto alt244_end495
  alt244_1514:
    nqp_rxmark rx242_bstack, rxquantr251_done516, rx242_pos, 0
  rxquantr251_loop515:
    ge rx242_pos, rx242_eos, rx242_fail488
    substr $S11, rx242_tgt, rx242_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx242_fail488
    inc rx242_pos
    nqp_rxpeek $I19, rx242_bstack, rxquantr251_done516
    inc $I19
    inc $I19
    set rx242_rep, rx242_bstack[$I19]
    nqp_rxcommit rx242_bstack, rxquantr251_done516
    inc rx242_rep
    nqp_rxmark rx242_bstack, rxquantr251_done516, rx242_pos, rx242_rep
    goto rxquantr251_loop515
  rxquantr251_done516:
    add $I11, rx242_pos, 1
    gt $I11, rx242_eos, rx242_fail488
    substr $S10, rx242_tgt, rx242_pos, 1
    ne $S10, ucs4:"#", rx242_fail488
    add rx242_pos, 1
    nqp_rxmark rx242_bstack, rxquantr252_done518, rx242_pos, 0
  rxquantr252_loop517:
    ge rx242_pos, rx242_eos, rx242_fail488
    is_cclass $I11, .CCLASS_NEWLINE, rx242_tgt, rx242_pos
    if $I11, rx242_fail488
    substr $S10, rx242_tgt, rx242_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx242_pos, $I11
    add rx242_pos, 1
    nqp_rxpeek $I19, rx242_bstack, rxquantr252_done518
    inc $I19
    inc $I19
    set rx242_rep, rx242_bstack[$I19]
    nqp_rxcommit rx242_bstack, rxquantr252_done518
    inc rx242_rep
    nqp_rxmark rx242_bstack, rxquantr252_done518, rx242_pos, rx242_rep
    goto rxquantr252_loop517
  rxquantr252_done518:
    goto alt244_end495
  alt244_2519:
    nqp_rxmark rx242_bstack, rxquantr253_done521, -1, 0
  rxquantr253_loop520:
    ge rx242_pos, rx242_eos, rx242_fail488
    substr $S11, rx242_tgt, rx242_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx242_fail488
    inc rx242_pos
    nqp_rxpeek $I19, rx242_bstack, rxquantr253_done521
    inc $I19
    inc $I19
    set rx242_rep, rx242_bstack[$I19]
    nqp_rxcommit rx242_bstack, rxquantr253_done521
    inc rx242_rep
    nqp_rxmark rx242_bstack, rxquantr253_done521, rx242_pos, rx242_rep
    goto rxquantr253_loop520
  rxquantr253_done521:
    goto alt244_end495
  alt244_end495:
    nqp_rxcommit rx242_bstack, alt244_end495
    rx242_cur."!cursor_pass"(rx242_pos, "unv", 'backtrack'=>1)
    .return (rx242_cur)
  rx242_restart487:
    repr_get_attr_obj rx242_cstack, rx242_cur, rx242_curclass, "$!cstack"
  rx242_fail488:
    unless rx242_bstack, rx242_done486
    pop $I19, rx242_bstack
    if_null rx242_cstack, rx242_cstack_done491
    unless rx242_cstack, rx242_cstack_done491
    dec $I19
    set $P11, rx242_cstack[$I19]
  rx242_cstack_done491:
    pop rx242_rep, rx242_bstack
    pop rx242_pos, rx242_bstack
    pop $I19, rx242_bstack
    lt rx242_pos, -1, rx242_done486
    lt rx242_pos, 0, rx242_fail488
    eq $I19, 0, rx242_fail488
    nqp_islist $I20, rx242_cstack
    unless $I20, rx242_jump489
    elements $I18, rx242_bstack
    le $I18, 0, rx242_cut490
    dec $I18
    set $I18, rx242_bstack[$I18]
  rx242_cut490:
    assign rx242_cstack, $I18
  rx242_jump489:
    jump $I19
  rx242_done486:
    rx242_cur."!cursor_fail"()
    .return (rx242_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_42_1365879995.227") :anon :lex :outer("cuid_41_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx246_start
    .local string rx246_tgt
    .local int rx246_pos
    .local int rx246_off
    .local int rx246_eos
    .local int rx246_rep
    .local pmc rx246_cur
    .local pmc rx246_curclass
    .local pmc rx246_bstack
    .local pmc rx246_cstack
    rx246_start = self."!cursor_start_all"()
    set rx246_cur, rx246_start[0]
    set rx246_tgt, rx246_start[1]
    set rx246_pos, rx246_start[2]
    set rx246_curclass, rx246_start[3]
    set rx246_bstack, rx246_start[4]
    set $I19, rx246_start[5]
    store_lex unicode:"$\x{a2}", rx246_cur
    length rx246_eos, rx246_tgt
    eq $I19, 1, rx246_restart500
    gt rx246_pos, rx246_eos, rx246_fail501
    repr_get_attr_int $I11, self, rx246_curclass, "$!from"
    ne $I11, -1, rxscan247_done507
    goto rxscan247_scan506
  rxscan247_loop505:
    inc rx246_pos
    gt rx246_pos, rx246_eos, rx246_fail501
    repr_bind_attr_int rx246_cur, rx246_curclass, "$!from", rx246_pos
  rxscan247_scan506:
    nqp_rxmark rx246_bstack, rxscan247_loop505, rx246_pos, 0
  rxscan247_done507:
    nqp_rxmark rx246_bstack, rxquantr248_done509, rx246_pos, 0
  rxquantr248_loop508:
    ge rx246_pos, rx246_eos, rx246_fail501
    substr $S11, rx246_tgt, rx246_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx246_fail501
    inc rx246_pos
    nqp_rxpeek $I19, rx246_bstack, rxquantr248_done509
    inc $I19
    inc $I19
    set rx246_rep, rx246_bstack[$I19]
    nqp_rxcommit rx246_bstack, rxquantr248_done509
    inc rx246_rep
    nqp_rxmark rx246_bstack, rxquantr248_done509, rx246_pos, rx246_rep
    goto rxquantr248_loop508
  rxquantr248_done509:
    add $I11, rx246_pos, 1
    gt $I11, rx246_eos, rx246_fail501
    substr $S10, rx246_tgt, rx246_pos, 1
    ne $S10, ucs4:"=", rx246_fail501
    add rx246_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt249_0511
    nqp_push_label $P11, alt249_1512
    nqp_rxmark rx246_bstack, alt249_end510, -1, 0
    rx246_cur."!alt"(rx246_pos, "alt_nfa__3_1365879996.62", $P11)
    goto rx246_fail501
  alt249_0511:
    ge rx246_pos, rx246_eos, rx246_fail501
    is_cclass $I11, .CCLASS_WORD, rx246_tgt, rx246_pos
    unless $I11, rx246_fail501
    add rx246_pos, 1
    goto alt249_end510
  alt249_1512:
    add $I11, rx246_pos, 1
    gt $I11, rx246_eos, rx246_fail501
    substr $S10, rx246_tgt, rx246_pos, 1
    ne $S10, ucs4:"\\", rx246_fail501
    add rx246_pos, 1
    goto alt249_end510
  alt249_end510:
    nqp_rxcommit rx246_bstack, alt249_end510
    rx246_cur."!cursor_pass"(rx246_pos, 'backtrack'=>1)
    .return (rx246_cur)
  rx246_restart500:
    repr_get_attr_obj rx246_cstack, rx246_cur, rx246_curclass, "$!cstack"
  rx246_fail501:
    unless rx246_bstack, rx246_done499
    pop $I19, rx246_bstack
    if_null rx246_cstack, rx246_cstack_done504
    unless rx246_cstack, rx246_cstack_done504
    dec $I19
    set $P11, rx246_cstack[$I19]
  rx246_cstack_done504:
    pop rx246_rep, rx246_bstack
    pop rx246_pos, rx246_bstack
    pop $I19, rx246_bstack
    lt rx246_pos, -1, rx246_done499
    lt rx246_pos, 0, rx246_fail501
    eq $I19, 0, rx246_fail501
    nqp_islist $I20, rx246_cstack
    unless $I20, rx246_jump502
    elements $I18, rx246_bstack
    le $I18, 0, rx246_cut503
    dec $I18
    set $I18, rx246_bstack[$I18]
  rx246_cut503:
    assign rx246_cstack, $I18
  rx246_jump502:
    jump $I19
  rx246_done499:
    rx246_cur."!cursor_fail"()
    .return (rx246_cur) 
.end
.HLL "nqp"
.namespace []
.sub "pod_comment" :subid("cuid_43_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 697
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_44_1365879995.227' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx254_start
    .local string rx254_tgt
    .local int rx254_pos
    .local int rx254_off
    .local int rx254_eos
    .local int rx254_rep
    .local pmc rx254_cur
    .local pmc rx254_curclass
    .local pmc rx254_bstack
    .local pmc rx254_cstack
    rx254_start = self."!cursor_start_all"()
    set rx254_cur, rx254_start[0]
    set rx254_tgt, rx254_start[1]
    set rx254_pos, rx254_start[2]
    set rx254_curclass, rx254_start[3]
    set rx254_bstack, rx254_start[4]
    set $I19, rx254_start[5]
    store_lex unicode:"$\x{a2}", rx254_cur
    length rx254_eos, rx254_tgt
    eq $I19, 1, rx254_restart524
    gt rx254_pos, rx254_eos, rx254_fail525
    repr_get_attr_int $I11, self, rx254_curclass, "$!from"
    ne $I11, -1, rxscan255_done531
    goto rxscan255_scan530
  rxscan255_loop529:
    inc rx254_pos
    gt rx254_pos, rx254_eos, rx254_fail525
    repr_bind_attr_int rx254_cur, rx254_curclass, "$!from", rx254_pos
  rxscan255_scan530:
    nqp_rxmark rx254_bstack, rxscan255_loop529, rx254_pos, 0
  rxscan255_done531:
    eq rx254_pos, 0, rxanchor256_done532
    ge rx254_pos, rx254_eos, rx254_fail525
    sub $I11, rx254_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx254_tgt, $I11
    unless $I11, rx254_fail525
  rxanchor256_done532:
    nqp_rxmark rx254_bstack, rxquantr257_done534, rx254_pos, 0
  rxquantr257_loop533:
    ge rx254_pos, rx254_eos, rx254_fail525
    substr $S11, rx254_tgt, rx254_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx254_fail525
    inc rx254_pos
    nqp_rxpeek $I19, rx254_bstack, rxquantr257_done534
    inc $I19
    inc $I19
    set rx254_rep, rx254_bstack[$I19]
    nqp_rxcommit rx254_bstack, rxquantr257_done534
    inc rx254_rep
    nqp_rxmark rx254_bstack, rxquantr257_done534, rx254_pos, rx254_rep
    goto rxquantr257_loop533
  rxquantr257_done534:
    add $I11, rx254_pos, 1
    gt $I11, rx254_eos, rx254_fail525
    substr $S10, rx254_tgt, rx254_pos, 1
    ne $S10, ucs4:"=", rx254_fail525
    add rx254_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt258_0536
    nqp_push_label $P11, alt258_1555
    nqp_push_label $P11, alt258_2574
    nqp_push_label $P11, alt258_3596
    nqp_push_label $P11, alt258_4621
    nqp_rxmark rx254_bstack, alt258_end535, -1, 0
    rx254_cur."!alt"(rx254_pos, "alt_nfa__6_1365879996.724", $P11)
    goto rx254_fail525
  alt258_0536:
    add $I11, rx254_pos, 5
    gt $I11, rx254_eos, rx254_fail525
    substr $S10, rx254_tgt, rx254_pos, 5
    ne $S10, ucs4:"begin", rx254_fail525
    add rx254_pos, 5
    nqp_rxmark rx254_bstack, rxquantr259_done538, -1, 0
  rxquantr259_loop537:
    ge rx254_pos, rx254_eos, rx254_fail525
    substr $S11, rx254_tgt, rx254_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx254_fail525
    inc rx254_pos
    nqp_rxpeek $I19, rx254_bstack, rxquantr259_done538
    inc $I19
    inc $I19
    set rx254_rep, rx254_bstack[$I19]
    nqp_rxcommit rx254_bstack, rxquantr259_done538
    inc rx254_rep
    nqp_rxmark rx254_bstack, rxquantr259_done538, rx254_pos, rx254_rep
    goto rxquantr259_loop537
  rxquantr259_done538:
    add $I11, rx254_pos, 3
    gt $I11, rx254_eos, rx254_fail525
    substr $S10, rx254_tgt, rx254_pos, 3
    ne $S10, ucs4:"END", rx254_fail525
    add rx254_pos, 3
    le rx254_pos, 0, rx254_fail525
    is_cclass $I11, .CCLASS_WORD, rx254_tgt, rx254_pos
    if $I11, rx254_fail525
    sub $I11, rx254_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx254_tgt, $I11
    unless $I11, rx254_fail525
  alt261_0541:
    nqp_rxmark rx254_bstack, alt261_1552, rx254_pos, 0
    set rx254_rep, 0
    nqp_rxmark rx254_bstack, rxquantf262_loop542, rx254_pos, rx254_rep
    goto rxquantf262_done543
  rxquantf262_loop542:
    set $I12, rx254_rep
    ge rx254_pos, rx254_eos, rx254_fail525
    add rx254_pos, 1
    set rx254_rep, $I12
    inc rx254_rep
    nqp_rxmark rx254_bstack, rxquantf262_loop542, rx254_pos, rx254_rep
  rxquantf262_done543:
    ge rx254_pos, rx254_eos, rx254_fail525
    is_cclass $I11, .CCLASS_NEWLINE, rx254_tgt, rx254_pos
    unless $I11, rx254_fail525
    substr $S10, rx254_tgt, rx254_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx254_pos, $I11
    add rx254_pos, 1
    nqp_rxmark rx254_bstack, rxquantr263_done546, rx254_pos, 0
  rxquantr263_loop545:
    ge rx254_pos, rx254_eos, rx254_fail525
    substr $S11, rx254_tgt, rx254_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx254_fail525
    inc rx254_pos
    nqp_rxpeek $I19, rx254_bstack, rxquantr263_done546
    inc $I19
    inc $I19
    set rx254_rep, rx254_bstack[$I19]
    nqp_rxcommit rx254_bstack, rxquantr263_done546
    inc rx254_rep
    nqp_rxmark rx254_bstack, rxquantr263_done546, rx254_pos, rx254_rep
    goto rxquantr263_loop545
  rxquantr263_done546:
    add $I11, rx254_pos, 4
    gt $I11, rx254_eos, rx254_fail525
    substr $S10, rx254_tgt, rx254_pos, 4
    ne $S10, ucs4:"=end", rx254_fail525
    add rx254_pos, 4
    nqp_rxmark rx254_bstack, rxquantr264_done548, -1, 0
  rxquantr264_loop547:
    ge rx254_pos, rx254_eos, rx254_fail525
    substr $S11, rx254_tgt, rx254_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx254_fail525
    inc rx254_pos
    nqp_rxpeek $I19, rx254_bstack, rxquantr264_done548
    inc $I19
    inc $I19
    set rx254_rep, rx254_bstack[$I19]
    nqp_rxcommit rx254_bstack, rxquantr264_done548
    inc rx254_rep
    nqp_rxmark rx254_bstack, rxquantr264_done548, rx254_pos, rx254_rep
    goto rxquantr264_loop547
  rxquantr264_done548:
    add $I11, rx254_pos, 3
    gt $I11, rx254_eos, rx254_fail525
    substr $S10, rx254_tgt, rx254_pos, 3
    ne $S10, ucs4:"END", rx254_fail525
    add rx254_pos, 3
    le rx254_pos, 0, rx254_fail525
    is_cclass $I11, .CCLASS_WORD, rx254_tgt, rx254_pos
    if $I11, rx254_fail525
    sub $I11, rx254_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx254_tgt, $I11
    unless $I11, rx254_fail525
    nqp_rxmark rx254_bstack, rxquantr266_done551, rx254_pos, 0
  rxquantr266_loop550:
    ge rx254_pos, rx254_eos, rx254_fail525
    is_cclass $I11, .CCLASS_NEWLINE, rx254_tgt, rx254_pos
    if $I11, rx254_fail525
    substr $S10, rx254_tgt, rx254_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx254_pos, $I11
    add rx254_pos, 1
    nqp_rxpeek $I19, rx254_bstack, rxquantr266_done551
    inc $I19
    inc $I19
    set rx254_rep, rx254_bstack[$I19]
    nqp_rxcommit rx254_bstack, rxquantr266_done551
    inc rx254_rep
    nqp_rxmark rx254_bstack, rxquantr266_done551, rx254_pos, rx254_rep
    goto rxquantr266_loop550
  rxquantr266_done551:
    goto alt261_end540
  alt261_1552:
    nqp_rxmark rx254_bstack, rxquantr267_done554, rx254_pos, 0
  rxquantr267_loop553:
    ge rx254_pos, rx254_eos, rx254_fail525
    add rx254_pos, 1
    nqp_rxpeek $I19, rx254_bstack, rxquantr267_done554
    inc $I19
    inc $I19
    set rx254_rep, rx254_bstack[$I19]
    nqp_rxcommit rx254_bstack, rxquantr267_done554
    inc rx254_rep
    nqp_rxmark rx254_bstack, rxquantr267_done554, rx254_pos, rx254_rep
    goto rxquantr267_loop553
  rxquantr267_done554:
  alt261_end540:
    goto alt258_end535
  alt258_1555:
    add $I11, rx254_pos, 5
    gt $I11, rx254_eos, rx254_fail525
    substr $S10, rx254_tgt, rx254_pos, 5
    ne $S10, ucs4:"begin", rx254_fail525
    add rx254_pos, 5
    nqp_rxmark rx254_bstack, rxquantr268_done557, -1, 0
  rxquantr268_loop556:
    ge rx254_pos, rx254_eos, rx254_fail525
    substr $S11, rx254_tgt, rx254_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx254_fail525
    inc rx254_pos
    nqp_rxpeek $I19, rx254_bstack, rxquantr268_done557
    inc $I19
    inc $I19
    set rx254_rep, rx254_bstack[$I19]
    nqp_rxcommit rx254_bstack, rxquantr268_done557
    inc rx254_rep
    nqp_rxmark rx254_bstack, rxquantr268_done557, rx254_pos, rx254_rep
    goto rxquantr268_loop556
  rxquantr268_done557:
    repr_bind_attr_int rx254_cur, rx254_curclass, "$!pos", rx254_pos
    $P11 = rx254_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx254_curclass, "$!pos"
    lt $I11, 0, rx254_fail525
    nqp_rxmark rx254_bstack, rxsubrule269_pass558, -1, 0
  rxsubrule269_pass558:
    rx254_cstack = rx254_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx254_pos, $P11, rx254_curclass, "$!pos"
  alt270_0560:
    nqp_rxmark rx254_bstack, alt270_1572, rx254_pos, 0
    set rx254_rep, 0
    nqp_rxmark rx254_bstack, rxquantf271_loop561, rx254_pos, rx254_rep
    goto rxquantf271_done562
  rxquantf271_loop561:
    set $I12, rx254_rep
    ge rx254_pos, rx254_eos, rx254_fail525
    add rx254_pos, 1
    set rx254_rep, $I12
    inc rx254_rep
    nqp_rxmark rx254_bstack, rxquantf271_loop561, rx254_pos, rx254_rep
  rxquantf271_done562:
    ge rx254_pos, rx254_eos, rx254_fail525
    is_cclass $I11, .CCLASS_NEWLINE, rx254_tgt, rx254_pos
    unless $I11, rx254_fail525
    substr $S10, rx254_tgt, rx254_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx254_pos, $I11
    add rx254_pos, 1
    nqp_rxmark rx254_bstack, rxquantr272_done565, rx254_pos, 0
  rxquantr272_loop564:
    ge rx254_pos, rx254_eos, rx254_fail525
    substr $S11, rx254_tgt, rx254_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx254_fail525
    inc rx254_pos
    nqp_rxpeek $I19, rx254_bstack, rxquantr272_done565
    inc $I19
    inc $I19
    set rx254_rep, rx254_bstack[$I19]
    nqp_rxcommit rx254_bstack, rxquantr272_done565
    inc rx254_rep
    nqp_rxmark rx254_bstack, rxquantr272_done565, rx254_pos, rx254_rep
    goto rxquantr272_loop564
  rxquantr272_done565:
    add $I11, rx254_pos, 4
    gt $I11, rx254_eos, rx254_fail525
    substr $S10, rx254_tgt, rx254_pos, 4
    ne $S10, ucs4:"=end", rx254_fail525
    add rx254_pos, 4
    nqp_rxmark rx254_bstack, rxquantr273_done567, -1, 0
  rxquantr273_loop566:
    ge rx254_pos, rx254_eos, rx254_fail525
    substr $S11, rx254_tgt, rx254_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx254_fail525
    inc rx254_pos
    nqp_rxpeek $I19, rx254_bstack, rxquantr273_done567
    inc $I19
    inc $I19
    set rx254_rep, rx254_bstack[$I19]
    nqp_rxcommit rx254_bstack, rxquantr273_done567
    inc rx254_rep
    nqp_rxmark rx254_bstack, rxquantr273_done567, rx254_pos, rx254_rep
    goto rxquantr273_loop566
  rxquantr273_done567:
    repr_bind_attr_int rx254_cur, rx254_curclass, "$!pos", rx254_pos
    $P11 = rx254_cur."!BACKREF"("identifier")
    repr_get_attr_int $I11, $P11, rx254_curclass, "$!pos"
    lt $I11, 0, rx254_fail525
    repr_get_attr_int rx254_pos, $P11, rx254_curclass, "$!pos"
    le rx254_pos, 0, rx254_fail525
    is_cclass $I11, .CCLASS_WORD, rx254_tgt, rx254_pos
    if $I11, rx254_fail525
    sub $I11, rx254_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx254_tgt, $I11
    unless $I11, rx254_fail525
    nqp_rxmark rx254_bstack, rxquantr276_done571, rx254_pos, 0
  rxquantr276_loop570:
    ge rx254_pos, rx254_eos, rx254_fail525
    is_cclass $I11, .CCLASS_NEWLINE, rx254_tgt, rx254_pos
    if $I11, rx254_fail525
    substr $S10, rx254_tgt, rx254_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx254_pos, $I11
    add rx254_pos, 1
    nqp_rxpeek $I19, rx254_bstack, rxquantr276_done571
    inc $I19
    inc $I19
    set rx254_rep, rx254_bstack[$I19]
    nqp_rxcommit rx254_bstack, rxquantr276_done571
    inc rx254_rep
    nqp_rxmark rx254_bstack, rxquantr276_done571, rx254_pos, rx254_rep
    goto rxquantr276_loop570
  rxquantr276_done571:
    goto alt270_end559
  alt270_1572:
    repr_bind_attr_int rx254_cur, rx254_curclass, "$!pos", rx254_pos
    $P11 = rx254_cur."panic"("=begin without matching =end")
    repr_get_attr_int $I11, $P11, rx254_curclass, "$!pos"
    lt $I11, 0, rx254_fail525
    repr_get_attr_int rx254_pos, $P11, rx254_curclass, "$!pos"
  alt270_end559:
    goto alt258_end535
  alt258_2574:
    add $I11, rx254_pos, 5
    gt $I11, rx254_eos, rx254_fail525
    substr $S10, rx254_tgt, rx254_pos, 5
    ne $S10, ucs4:"begin", rx254_fail525
    add rx254_pos, 5
    le rx254_pos, 0, rx254_fail525
    is_cclass $I11, .CCLASS_WORD, rx254_tgt, rx254_pos
    if $I11, rx254_fail525
    sub $I11, rx254_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx254_tgt, $I11
    unless $I11, rx254_fail525
    nqp_rxmark rx254_bstack, rxquantr279_done577, rx254_pos, 0
  rxquantr279_loop576:
    ge rx254_pos, rx254_eos, rx254_fail525
    substr $S11, rx254_tgt, rx254_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx254_fail525
    inc rx254_pos
    nqp_rxpeek $I19, rx254_bstack, rxquantr279_done577
    inc $I19
    inc $I19
    set rx254_rep, rx254_bstack[$I19]
    nqp_rxcommit rx254_bstack, rxquantr279_done577
    inc rx254_rep
    nqp_rxmark rx254_bstack, rxquantr279_done577, rx254_pos, rx254_rep
    goto rxquantr279_loop576
  rxquantr279_done577:
  alt280_0579:
    nqp_rxmark rx254_bstack, alt280_1581, rx254_pos, 0
    is_cclass $I11, .CCLASS_NEWLINE, rx254_tgt, rx254_pos
    if $I11, rxanchor281_done580
    ne rx254_pos, rx254_eos, rx254_fail525
    eq rx254_pos, 0, rxanchor281_done580
    sub $I11, rx254_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx254_tgt, $I11
    if $I11, rx254_fail525
  rxanchor281_done580:
    goto alt280_end578
  alt280_1581:
    nqp_rxmark rx254_bstack, alt280_2582, rx254_pos, 0
    add $I11, rx254_pos, 1
    gt $I11, rx254_eos, rx254_fail525
    substr $S10, rx254_tgt, rx254_pos, 1
    ne $S10, ucs4:"#", rx254_fail525
    add rx254_pos, 1
    goto alt280_end578
  alt280_2582:
    repr_bind_attr_int rx254_cur, rx254_curclass, "$!pos", rx254_pos
    $P11 = rx254_cur."panic"("Unrecognized token after =begin")
    repr_get_attr_int $I11, $P11, rx254_curclass, "$!pos"
    lt $I11, 0, rx254_fail525
    repr_get_attr_int rx254_pos, $P11, rx254_curclass, "$!pos"
  alt280_end578:
  alt283_0585:
    nqp_rxmark rx254_bstack, alt283_1594, rx254_pos, 0
    set rx254_rep, 0
    nqp_rxmark rx254_bstack, rxquantf284_loop586, rx254_pos, rx254_rep
    goto rxquantf284_done587
  rxquantf284_loop586:
    set $I12, rx254_rep
    ge rx254_pos, rx254_eos, rx254_fail525
    add rx254_pos, 1
    set rx254_rep, $I12
    inc rx254_rep
    nqp_rxmark rx254_bstack, rxquantf284_loop586, rx254_pos, rx254_rep
  rxquantf284_done587:
    ge rx254_pos, rx254_eos, rx254_fail525
    is_cclass $I11, .CCLASS_NEWLINE, rx254_tgt, rx254_pos
    unless $I11, rx254_fail525
    substr $S10, rx254_tgt, rx254_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx254_pos, $I11
    add rx254_pos, 1
    nqp_rxmark rx254_bstack, rxquantr285_done590, rx254_pos, 0
  rxquantr285_loop589:
    ge rx254_pos, rx254_eos, rx254_fail525
    substr $S11, rx254_tgt, rx254_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx254_fail525
    inc rx254_pos
    nqp_rxpeek $I19, rx254_bstack, rxquantr285_done590
    inc $I19
    inc $I19
    set rx254_rep, rx254_bstack[$I19]
    nqp_rxcommit rx254_bstack, rxquantr285_done590
    inc rx254_rep
    nqp_rxmark rx254_bstack, rxquantr285_done590, rx254_pos, rx254_rep
    goto rxquantr285_loop589
  rxquantr285_done590:
    add $I11, rx254_pos, 4
    gt $I11, rx254_eos, rx254_fail525
    substr $S10, rx254_tgt, rx254_pos, 4
    ne $S10, ucs4:"=end", rx254_fail525
    add rx254_pos, 4
    le rx254_pos, 0, rx254_fail525
    is_cclass $I11, .CCLASS_WORD, rx254_tgt, rx254_pos
    if $I11, rx254_fail525
    sub $I11, rx254_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx254_tgt, $I11
    unless $I11, rx254_fail525
    nqp_rxmark rx254_bstack, rxquantr287_done593, rx254_pos, 0
  rxquantr287_loop592:
    ge rx254_pos, rx254_eos, rx254_fail525
    is_cclass $I11, .CCLASS_NEWLINE, rx254_tgt, rx254_pos
    if $I11, rx254_fail525
    substr $S10, rx254_tgt, rx254_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx254_pos, $I11
    add rx254_pos, 1
    nqp_rxpeek $I19, rx254_bstack, rxquantr287_done593
    inc $I19
    inc $I19
    set rx254_rep, rx254_bstack[$I19]
    nqp_rxcommit rx254_bstack, rxquantr287_done593
    inc rx254_rep
    nqp_rxmark rx254_bstack, rxquantr287_done593, rx254_pos, rx254_rep
    goto rxquantr287_loop592
  rxquantr287_done593:
    goto alt283_end584
  alt283_1594:
    repr_bind_attr_int rx254_cur, rx254_curclass, "$!pos", rx254_pos
    $P11 = rx254_cur."panic"("=begin without matching =end")
    repr_get_attr_int $I11, $P11, rx254_curclass, "$!pos"
    lt $I11, 0, rx254_fail525
    repr_get_attr_int rx254_pos, $P11, rx254_curclass, "$!pos"
  alt283_end584:
    goto alt258_end535
  alt258_3596:
    repr_bind_attr_int rx254_cur, rx254_curclass, "$!pos", rx254_pos
    $P11 = rx254_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx254_curclass, "$!pos"
    lt $I11, 0, rx254_fail525
    nqp_rxmark rx254_bstack, rxsubrule289_pass597, -1, 0
  rxsubrule289_pass597:
    rx254_cstack = rx254_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx254_pos, $P11, rx254_curclass, "$!pos"
    set rx254_rep, 0
    nqp_rxmark rx254_bstack, rxquantf290_loop598, rx254_pos, rx254_rep
    goto rxquantf290_done599
  rxquantf290_loop598:
    set $I12, rx254_rep
    ge rx254_pos, rx254_eos, rx254_fail525
    add rx254_pos, 1
    set rx254_rep, $I12
    inc rx254_rep
    nqp_rxmark rx254_bstack, rxquantf290_loop598, rx254_pos, rx254_rep
  rxquantf290_done599:
    eq rx254_pos, 0, rxanchor291_done601
    ge rx254_pos, rx254_eos, rx254_fail525
    sub $I11, rx254_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx254_tgt, $I11
    unless $I11, rx254_fail525
  rxanchor291_done601:
    .const 'Sub' $P5001 = 'cuid_44_1365879995.227' 
    capture_lex $P5001
    repr_bind_attr_int rx254_cur, rx254_curclass, "$!pos", rx254_pos
    $P11 = rx254_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx254_curclass, "$!pos"
    lt $I11, 0, rx254_fail525
    goto alt258_end535
  alt258_4621:
  alt299_0623:
    nqp_rxmark rx254_bstack, alt299_1624, rx254_pos, 0
    ge rx254_pos, rx254_eos, rx254_fail525
    is_cclass $I11, .CCLASS_WHITESPACE, rx254_tgt, rx254_pos
    unless $I11, rx254_fail525
    add rx254_pos, 1
    goto alt299_end622
  alt299_1624:
    repr_bind_attr_int rx254_cur, rx254_curclass, "$!pos", rx254_pos
    $P11 = rx254_cur."panic"("Illegal pod directive")
    repr_get_attr_int $I11, $P11, rx254_curclass, "$!pos"
    lt $I11, 0, rx254_fail525
    repr_get_attr_int rx254_pos, $P11, rx254_curclass, "$!pos"
  alt299_end622:
    nqp_rxmark rx254_bstack, rxquantr301_done627, rx254_pos, 0
  rxquantr301_loop626:
    ge rx254_pos, rx254_eos, rx254_fail525
    is_cclass $I11, .CCLASS_NEWLINE, rx254_tgt, rx254_pos
    if $I11, rx254_fail525
    substr $S10, rx254_tgt, rx254_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx254_pos, $I11
    add rx254_pos, 1
    nqp_rxpeek $I19, rx254_bstack, rxquantr301_done627
    inc $I19
    inc $I19
    set rx254_rep, rx254_bstack[$I19]
    nqp_rxcommit rx254_bstack, rxquantr301_done627
    inc rx254_rep
    nqp_rxmark rx254_bstack, rxquantr301_done627, rx254_pos, rx254_rep
    goto rxquantr301_loop626
  rxquantr301_done627:
    goto alt258_end535
  alt258_end535:
    nqp_rxcommit rx254_bstack, alt258_end535
    rx254_cur."!cursor_pass"(rx254_pos, "pod_comment", 'backtrack'=>1)
    .return (rx254_cur)
  rx254_restart524:
    repr_get_attr_obj rx254_cstack, rx254_cur, rx254_curclass, "$!cstack"
  rx254_fail525:
    unless rx254_bstack, rx254_done523
    pop $I19, rx254_bstack
    if_null rx254_cstack, rx254_cstack_done528
    unless rx254_cstack, rx254_cstack_done528
    dec $I19
    set $P11, rx254_cstack[$I19]
  rx254_cstack_done528:
    pop rx254_rep, rx254_bstack
    pop rx254_pos, rx254_bstack
    pop $I19, rx254_bstack
    lt rx254_pos, -1, rx254_done523
    lt rx254_pos, 0, rx254_fail525
    eq $I19, 0, rx254_fail525
    nqp_islist $I20, rx254_cstack
    unless $I20, rx254_jump526
    elements $I18, rx254_bstack
    le $I18, 0, rx254_cut527
    dec $I18
    set $I18, rx254_bstack[$I18]
  rx254_cut527:
    assign rx254_cstack, $I18
  rx254_jump526:
    jump $I19
  rx254_done523:
    rx254_cur."!cursor_fail"()
    .return (rx254_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_44_1365879995.227") :anon :lex :outer("cuid_43_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx292_start
    .local string rx292_tgt
    .local int rx292_pos
    .local int rx292_off
    .local int rx292_eos
    .local int rx292_rep
    .local pmc rx292_cur
    .local pmc rx292_curclass
    .local pmc rx292_bstack
    .local pmc rx292_cstack
    rx292_start = self."!cursor_start_all"()
    set rx292_cur, rx292_start[0]
    set rx292_tgt, rx292_start[1]
    set rx292_pos, rx292_start[2]
    set rx292_curclass, rx292_start[3]
    set rx292_bstack, rx292_start[4]
    set $I19, rx292_start[5]
    store_lex unicode:"$\x{a2}", rx292_cur
    length rx292_eos, rx292_tgt
    eq $I19, 1, rx292_restart604
    gt rx292_pos, rx292_eos, rx292_fail605
    repr_get_attr_int $I11, self, rx292_curclass, "$!from"
    ne $I11, -1, rxscan293_done611
    goto rxscan293_scan610
  rxscan293_loop609:
    inc rx292_pos
    gt rx292_pos, rx292_eos, rx292_fail605
    repr_bind_attr_int rx292_cur, rx292_curclass, "$!from", rx292_pos
  rxscan293_scan610:
    nqp_rxmark rx292_bstack, rxscan293_loop609, rx292_pos, 0
  rxscan293_done611:
    nqp_rxmark rx292_bstack, rxquantr294_done613, rx292_pos, 0
  rxquantr294_loop612:
    ge rx292_pos, rx292_eos, rx292_fail605
    substr $S11, rx292_tgt, rx292_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx292_fail605
    inc rx292_pos
    nqp_rxpeek $I19, rx292_bstack, rxquantr294_done613
    inc $I19
    inc $I19
    set rx292_rep, rx292_bstack[$I19]
    nqp_rxcommit rx292_bstack, rxquantr294_done613
    inc rx292_rep
    nqp_rxmark rx292_bstack, rxquantr294_done613, rx292_pos, rx292_rep
    goto rxquantr294_loop612
  rxquantr294_done613:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt295_0615
    nqp_push_label $P11, alt295_1620
    nqp_rxmark rx292_bstack, alt295_end614, -1, 0
    rx292_cur."!alt"(rx292_pos, "alt_nfa__5_1365879996.71", $P11)
    goto rx292_fail605
  alt295_0615:
    add $I11, rx292_pos, 1
    gt $I11, rx292_eos, rx292_fail605
    substr $S10, rx292_tgt, rx292_pos, 1
    ne $S10, ucs4:"=", rx292_fail605
    add rx292_pos, 1
    nqp_rxmark rx292_bstack, rxquantr296_done617, rx292_pos, 0
  rxquantr296_loop616:
    add $I11, rx292_pos, 3
    gt $I11, rx292_eos, rx292_fail605
    substr $S10, rx292_tgt, rx292_pos, 3
    ne $S10, ucs4:"cut", rx292_fail605
    add rx292_pos, 3
    le rx292_pos, 0, rx292_fail605
    is_cclass $I11, .CCLASS_WORD, rx292_tgt, rx292_pos
    if $I11, rx292_fail605
    sub $I11, rx292_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx292_tgt, $I11
    unless $I11, rx292_fail605
    repr_bind_attr_int rx292_cur, rx292_curclass, "$!pos", rx292_pos
    $P11 = rx292_cur."panic"("Obsolete pod format, please use =begin/=end instead")
    repr_get_attr_int $I11, $P11, rx292_curclass, "$!pos"
    lt $I11, 0, rx292_fail605
    repr_get_attr_int rx292_pos, $P11, rx292_curclass, "$!pos"
    nqp_rxpeek $I19, rx292_bstack, rxquantr296_done617
    inc $I19
    inc $I19
    set rx292_rep, rx292_bstack[$I19]
    nqp_rxcommit rx292_bstack, rxquantr296_done617
    inc rx292_rep
  rxquantr296_done617:
    goto alt295_end614
  alt295_1620:
    ge rx292_pos, rx292_eos, rx292_fail605
    is_cclass $I11, .CCLASS_NEWLINE, rx292_tgt, rx292_pos
    unless $I11, rx292_fail605
    substr $S10, rx292_tgt, rx292_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx292_pos, $I11
    add rx292_pos, 1
    goto alt295_end614
  alt295_end614:
    nqp_rxcommit rx292_bstack, alt295_end614
    rx292_cur."!cursor_pass"(rx292_pos, 'backtrack'=>1)
    .return (rx292_cur)
  rx292_restart604:
    repr_get_attr_obj rx292_cstack, rx292_cur, rx292_curclass, "$!cstack"
  rx292_fail605:
    unless rx292_bstack, rx292_done603
    pop $I19, rx292_bstack
    if_null rx292_cstack, rx292_cstack_done608
    unless rx292_cstack, rx292_cstack_done608
    dec $I19
    set $P11, rx292_cstack[$I19]
  rx292_cstack_done608:
    pop rx292_rep, rx292_bstack
    pop rx292_pos, rx292_bstack
    pop $I19, rx292_bstack
    lt rx292_pos, -1, rx292_done603
    lt rx292_pos, 0, rx292_fail605
    eq $I19, 0, rx292_fail605
    nqp_islist $I20, rx292_cstack
    unless $I20, rx292_jump606
    elements $I18, rx292_bstack
    le $I18, 0, rx292_cut607
    dec $I18
    set $I18, rx292_bstack[$I18]
  rx292_cut607:
    assign rx292_cstack, $I18
  rx292_jump606:
    jump $I19
  rx292_done603:
    rx292_cur."!cursor_fail"()
    .return (rx292_cur) 
.end
.HLL "nqp"
.namespace []
.sub "comp_unit" :subid("cuid_45_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 728
    .param pmc _lex_param_0 
    .const 'Sub' $P5073 = 'cuid_398_1365879995.227' 
    capture_lex $P5073 
    .const 'Sub' $P5073 = 'cuid_399_1365879995.227' 
    capture_lex $P5073 
    .const 'Sub' $P5073 = 'cuid_401_1365879995.227' 
    capture_lex $P5073 
    .const 'Sub' $P5073 = 'cuid_402_1365879995.227' 
    capture_lex $P5073 
    .lex "$*IN_DECL", $P101 
    .lex "$*HAS_YOU_ARE_HERE", $P102 
    .lex "$*MAIN_SUB", $P103 
    .lex "$*UNIT", $P104 
    .lex "$*GLOBALish", $P105 
    .lex "$*PACKAGE", $P106 
    .lex "$*EXPORT", $P107 
    .lex utf8:"$\x{a2}", $P108 
    .lex "$/", $P109 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_65 
    .local pmc fb_tmp_66 
    .local pmc fb_tmp_67 
    .local pmc fb_tmp_68 
    .local pmc fb_tmp_69 
    .local pmc pkg_viv_tmp_17 
    .local pmc fb_tmp_75 
    .local pmc fb_tmp_79 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P105, $P5005
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P106, $P5006
    nqp_get_sc_object $P5007, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P107, $P5007
    set self, _lex_param_0
    .local pmc rx302_start
    .local string rx302_tgt
    .local int rx302_pos
    .local int rx302_off
    .local int rx302_eos
    .local int rx302_rep
    .local pmc rx302_cur
    .local pmc rx302_curclass
    .local pmc rx302_bstack
    .local pmc rx302_cstack
    rx302_start = self."!cursor_start_all"()
    set rx302_cur, rx302_start[0]
    set rx302_tgt, rx302_start[1]
    set rx302_pos, rx302_start[2]
    set rx302_curclass, rx302_start[3]
    set rx302_bstack, rx302_start[4]
    set $I19, rx302_start[5]
    store_lex unicode:"$\x{a2}", rx302_cur
    length rx302_eos, rx302_tgt
    eq $I19, 1, rx302_restart630
    gt rx302_pos, rx302_eos, rx302_fail631
    repr_get_attr_int $I11, self, rx302_curclass, "$!from"
    ne $I11, -1, rxscan303_done637
    goto rxscan303_scan636
  rxscan303_loop635:
    inc rx302_pos
    gt rx302_pos, rx302_eos, rx302_fail631
    repr_bind_attr_int rx302_cur, rx302_curclass, "$!from", rx302_pos
  rxscan303_scan636:
    nqp_rxmark rx302_bstack, rxscan303_loop635, rx302_pos, 0
  rxscan303_done637:
    repr_bind_attr_int rx302_cur, rx302_curclass, "$!pos", rx302_pos
    store_lex unicode:"$\x{a2}", rx302_cur
    box $P5008, ""
    set $P101, $P5008
    repr_bind_attr_int rx302_cur, rx302_curclass, "$!pos", rx302_pos
    store_lex unicode:"$\x{a2}", rx302_cur
    box $P5009, 0
    set $P102, $P5009
    repr_bind_attr_int rx302_cur, rx302_curclass, "$!pos", rx302_pos
    store_lex unicode:"$\x{a2}", rx302_cur
    unless_null $P103, fallback638
    nqp_get_sc_object $P5011, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5010, $P5011
    set fb_tmp_65, $P5010
    repr_defined $I5001, fb_tmp_65
    unless $I5001 goto if304_else639 
    set $P5012, fb_tmp_65["$MAIN_SUB"]
    set $P5014, $P5012
    goto if304_end640
  if304_else639:
    null $P5013
    set $P5014, $P5013
  if304_end640:
    unless_null $P5014, vivi_305641
    nqp_get_sc_object $P5015, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5014, $P5015
  vivi_305641:
    unless_null $P5014, vivi_306642
    die "Contextual $*MAIN_SUB not found"
    box $P5016, "Contextual $*MAIN_SUB not found"
    set $P5014, $P5016
  vivi_306642:
    set $P103, $P5014
  fallback638:
    repr_bind_attr_int rx302_cur, rx302_curclass, "$!pos", rx302_pos
    store_lex unicode:"$\x{a2}", rx302_cur
.annotate 'line', 733
    find_dynamic_lex $P5017, "$*W"
    unless_null $P5017, fallback643
    nqp_get_sc_object $P5019, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5018, $P5019
    set fb_tmp_66, $P5018
    repr_defined $I5002, fb_tmp_66
    unless $I5002 goto if307_else644 
    set $P5020, fb_tmp_66["$W"]
    set $P5022, $P5020
    goto if307_end645
  if307_else644:
    null $P5021
    set $P5022, $P5021
  if307_end645:
    unless_null $P5022, vivi_308646
    nqp_get_sc_object $P5023, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5022, $P5023
  vivi_308646:
    unless_null $P5022, vivi_309647
    die "Contextual $*W not found"
    box $P5024, "Contextual $*W not found"
    set $P5022, $P5024
  vivi_309647:
    set $P5017, $P5022
  fallback643:
    $P5025 = $P5017."push_lexpad"($P109)
    set $P104, $P5025
    repr_bind_attr_int rx302_cur, rx302_curclass, "$!pos", rx302_pos
    store_lex unicode:"$\x{a2}", rx302_cur
.annotate 'line', 737
    find_dynamic_lex $P5026, "$*W"
    unless_null $P5026, fallback648
    nqp_get_sc_object $P5028, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5027, $P5028
    set fb_tmp_67, $P5027
    repr_defined $I5003, fb_tmp_67
    unless $I5003 goto if310_else649 
    set $P5029, fb_tmp_67["$W"]
    set $P5031, $P5029
    goto if310_end650
  if310_else649:
    null $P5030
    set $P5031, $P5030
  if310_end650:
    unless_null $P5031, vivi_311651
    nqp_get_sc_object $P5032, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5031, $P5032
  vivi_311651:
    unless_null $P5031, vivi_312652
    die "Contextual $*W not found"
    box $P5033, "Contextual $*W not found"
    set $P5031, $P5033
  vivi_312652:
    set $P5026, $P5031
  fallback648:
    find_dynamic_lex $P5034, "%*HOW"
    unless_null $P5034, fallback655
    nqp_get_sc_object $P5036, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5035, $P5036
    set pkg_viv_tmp_17, $P5035
    set fb_tmp_69, pkg_viv_tmp_17
    repr_defined $I5005, fb_tmp_69
    unless $I5005 goto if314_else656 
    set $P5037, fb_tmp_69["%HOW"]
    set $P5039, $P5037
    goto if314_end657
  if314_else656:
    null $P5038
    set $P5039, $P5038
  if314_end657:
    unless_null $P5039, vivi_315658
    new $P5040, 'Hash'
    set pkg_viv_tmp_17["%HOW"], $P5040
    set $P5039, $P5040
  vivi_315658:
    unless_null $P5039, vivi_316659
    die "Contextual %*HOW not found"
    box $P5041, "Contextual %*HOW not found"
    set $P5039, $P5041
  vivi_316659:
    set $P5034, $P5039
  fallback655:
    set fb_tmp_68, $P5034
    repr_defined $I5004, fb_tmp_68
    unless $I5004 goto if313_else653 
    set $P5042, fb_tmp_68["knowhow"]
    set $P5044, $P5042
    goto if313_end654
  if313_else653:
    null $P5043
    set $P5044, $P5043
  if313_end654:
    unless_null $P5044, vivi_317660
    nqp_get_sc_object $P5045, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5044, $P5045
  vivi_317660:
    $P5046 = $P5026."pkg_create_mo"($P5044, "GLOBALish" :named("name"))
    set $P105, $P5046
    repr_bind_attr_int rx302_cur, rx302_curclass, "$!pos", rx302_pos
    store_lex unicode:"$\x{a2}", rx302_cur
    $P5047 = $P108."MATCH"()
    set $P109, $P5047
    .const 'Sub' $P5048 = 'cuid_398_1365879995.227' 
    capture_lex $P5048
    $P5049 = $P5048()
    repr_bind_attr_int rx302_cur, rx302_curclass, "$!pos", rx302_pos
    store_lex unicode:"$\x{a2}", rx302_cur
    unless_null $P105, fallback686
    nqp_get_sc_object $P5051, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5050, $P5051
    set fb_tmp_75, $P5050
    repr_defined $I5006, fb_tmp_75
    unless $I5006 goto if333_else687 
    set $P5052, fb_tmp_75["$GLOBALish"]
    set $P5054, $P5052
    goto if333_end688
  if333_else687:
    null $P5053
    set $P5054, $P5053
  if333_end688:
    unless_null $P5054, vivi_334689
    nqp_get_sc_object $P5055, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5054, $P5055
  vivi_334689:
    unless_null $P5054, vivi_335690
    die "Contextual $*GLOBALish not found"
    box $P5056, "Contextual $*GLOBALish not found"
    set $P5054, $P5056
  vivi_335690:
    set $P105, $P5054
  fallback686:
    set $P106, $P105
    repr_bind_attr_int rx302_cur, rx302_curclass, "$!pos", rx302_pos
    store_lex unicode:"$\x{a2}", rx302_cur
    $P5057 = $P108."MATCH"()
    set $P109, $P5057
    .const 'Sub' $P5058 = 'cuid_399_1365879995.227' 
    capture_lex $P5058
    $P5059 = $P5058()
    repr_bind_attr_int rx302_cur, rx302_curclass, "$!pos", rx302_pos
    store_lex unicode:"$\x{a2}", rx302_cur
    unless_null $P107, fallback706
    nqp_get_sc_object $P5061, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5060, $P5061
    set fb_tmp_79, $P5060
    repr_defined $I5007, fb_tmp_79
    unless $I5007 goto if345_else707 
    set $P5062, fb_tmp_79["$EXPORT"]
    set $P5064, $P5062
    goto if345_end708
  if345_else707:
    null $P5063
    set $P5064, $P5063
  if345_end708:
    unless_null $P5064, vivi_346709
    nqp_get_sc_object $P5065, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5064, $P5065
  vivi_346709:
    unless_null $P5064, vivi_347710
    die "Contextual $*EXPORT not found"
    box $P5066, "Contextual $*EXPORT not found"
    set $P5064, $P5066
  vivi_347710:
    set $P107, $P5064
  fallback706:
    repr_bind_attr_int rx302_cur, rx302_curclass, "$!pos", rx302_pos
    store_lex unicode:"$\x{a2}", rx302_cur
    $P5067 = $P108."MATCH"()
    set $P109, $P5067
    .const 'Sub' $P5068 = 'cuid_401_1365879995.227' 
    capture_lex $P5068
    $P5069 = $P5068()
    repr_bind_attr_int rx302_cur, rx302_curclass, "$!pos", rx302_pos
    store_lex unicode:"$\x{a2}", rx302_cur
    $P5070 = $P108."MATCH"()
    set $P109, $P5070
    .const 'Sub' $P5071 = 'cuid_402_1365879995.227' 
    capture_lex $P5071
    $P5072 = $P5071()
    repr_bind_attr_int rx302_cur, rx302_curclass, "$!pos", rx302_pos
    $P11 = rx302_cur."outerctx"()
    repr_get_attr_int $I11, $P11, rx302_curclass, "$!pos"
    lt $I11, 0, rx302_fail631
    repr_get_attr_int rx302_pos, $P11, rx302_curclass, "$!pos"
    repr_bind_attr_int rx302_cur, rx302_curclass, "$!pos", rx302_pos
    $P11 = rx302_cur."statementlist"()
    repr_get_attr_int $I11, $P11, rx302_curclass, "$!pos"
    lt $I11, 0, rx302_fail631
    nqp_rxmark rx302_bstack, rxsubrule394_pass786, -1, 0
  rxsubrule394_pass786:
    rx302_cstack = rx302_cur."!cursor_capture"($P11, "statementlist")
    repr_get_attr_int rx302_pos, $P11, rx302_curclass, "$!pos"
  alt395_0788:
    nqp_rxmark rx302_bstack, alt395_1790, rx302_pos, 0
    lt rx302_pos, rx302_eos, rx302_fail631
    goto alt395_end787
  alt395_1790:
    repr_bind_attr_int rx302_cur, rx302_curclass, "$!pos", rx302_pos
    $P11 = rx302_cur."panic"("Confused")
    repr_get_attr_int $I11, $P11, rx302_curclass, "$!pos"
    lt $I11, 0, rx302_fail631
    repr_get_attr_int rx302_pos, $P11, rx302_curclass, "$!pos"
  alt395_end787:
    rx302_cur."!cursor_pass"(rx302_pos, "comp_unit", 'backtrack'=>1)
    .return (rx302_cur)
  rx302_restart630:
    repr_get_attr_obj rx302_cstack, rx302_cur, rx302_curclass, "$!cstack"
  rx302_fail631:
    unless rx302_bstack, rx302_done629
    pop $I19, rx302_bstack
    if_null rx302_cstack, rx302_cstack_done634
    unless rx302_cstack, rx302_cstack_done634
    dec $I19
    set $P11, rx302_cstack[$I19]
  rx302_cstack_done634:
    pop rx302_rep, rx302_bstack
    pop rx302_pos, rx302_bstack
    pop $I19, rx302_bstack
    lt rx302_pos, -1, rx302_done629
    lt rx302_pos, 0, rx302_fail631
    eq $I19, 0, rx302_fail631
    nqp_islist $I20, rx302_cstack
    unless $I20, rx302_jump632
    elements $I18, rx302_bstack
    le $I18, 0, rx302_cut633
    dec $I18
    set $I18, rx302_bstack[$I18]
  rx302_cut633:
    assign rx302_cstack, $I18
  rx302_jump632:
    jump $I19
  rx302_done629:
    rx302_cur."!cursor_fail"()
    .return (rx302_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_398_1365879995.227") :anon :lex :outer("cuid_45_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 738
    .local pmc fb_tmp_70 
    .local pmc fb_tmp_71 
    .local pmc fb_tmp_72 
    .local pmc fb_tmp_73 
    .local pmc fb_tmp_74 
.annotate 'line', 739
    find_dynamic_lex $P5002, "$*GLOBALish"
    unless_null $P5002, fallback661
    nqp_get_sc_object $P5004, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5003, $P5004
    set fb_tmp_70, $P5003
    repr_defined $I5001, fb_tmp_70
    unless $I5001 goto if318_else662 
    set $P5005, fb_tmp_70["$GLOBALish"]
    set $P5007, $P5005
    goto if318_end663
  if318_else662:
    null $P5006
    set $P5007, $P5006
  if318_end663:
    unless_null $P5007, vivi_319664
    nqp_get_sc_object $P5008, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5007, $P5008
  vivi_319664:
    unless_null $P5007, vivi_320665
    die "Contextual $*GLOBALish not found"
    box $P5009, "Contextual $*GLOBALish not found"
    set $P5007, $P5009
  vivi_320665:
    set $P5002, $P5007
  fallback661:
    get_how $P5001, $P5002
    find_dynamic_lex $P5010, "$*GLOBALish"
    unless_null $P5010, fallback666
    nqp_get_sc_object $P5012, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5011, $P5012
    set fb_tmp_71, $P5011
    repr_defined $I5002, fb_tmp_71
    unless $I5002 goto if321_else667 
    set $P5013, fb_tmp_71["$GLOBALish"]
    set $P5015, $P5013
    goto if321_end668
  if321_else667:
    null $P5014
    set $P5015, $P5014
  if321_end668:
    unless_null $P5015, vivi_322669
    nqp_get_sc_object $P5016, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5015, $P5016
  vivi_322669:
    unless_null $P5015, vivi_323670
    die "Contextual $*GLOBALish not found"
    box $P5017, "Contextual $*GLOBALish not found"
    set $P5015, $P5017
  vivi_323670:
    set $P5010, $P5015
  fallback666:
    $P5001."compose"($P5010)
.annotate 'line', 740
    find_dynamic_lex $P5018, "$*W"
    unless_null $P5018, fallback671
    nqp_get_sc_object $P5020, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5019, $P5020
    set fb_tmp_72, $P5019
    repr_defined $I5003, fb_tmp_72
    unless $I5003 goto if324_else672 
    set $P5021, fb_tmp_72["$W"]
    set $P5023, $P5021
    goto if324_end673
  if324_else672:
    null $P5022
    set $P5023, $P5022
  if324_end673:
    unless_null $P5023, vivi_325674
    nqp_get_sc_object $P5024, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5023, $P5024
  vivi_325674:
    unless_null $P5023, vivi_326675
    die "Contextual $*W not found"
    box $P5025, "Contextual $*W not found"
    set $P5023, $P5025
  vivi_326675:
    set $P5018, $P5023
  fallback671:
    find_dynamic_lex $P5026, "$*UNIT"
    unless_null $P5026, fallback676
    nqp_get_sc_object $P5028, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5027, $P5028
    set fb_tmp_73, $P5027
    repr_defined $I5004, fb_tmp_73
    unless $I5004 goto if327_else677 
    set $P5029, fb_tmp_73["$UNIT"]
    set $P5031, $P5029
    goto if327_end678
  if327_else677:
    null $P5030
    set $P5031, $P5030
  if327_end678:
    unless_null $P5031, vivi_328679
    nqp_get_sc_object $P5032, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5031, $P5032
  vivi_328679:
    unless_null $P5031, vivi_329680
    die "Contextual $*UNIT not found"
    box $P5033, "Contextual $*UNIT not found"
    set $P5031, $P5033
  vivi_329680:
    set $P5026, $P5031
  fallback676:
    find_dynamic_lex $P5034, "$*GLOBALish"
    unless_null $P5034, fallback681
    nqp_get_sc_object $P5036, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5035, $P5036
    set fb_tmp_74, $P5035
    repr_defined $I5005, fb_tmp_74
    unless $I5005 goto if330_else682 
    set $P5037, fb_tmp_74["$GLOBALish"]
    set $P5039, $P5037
    goto if330_end683
  if330_else682:
    null $P5038
    set $P5039, $P5038
  if330_end683:
    unless_null $P5039, vivi_331684
    nqp_get_sc_object $P5040, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5039, $P5040
  vivi_331684:
    unless_null $P5039, vivi_332685
    die "Contextual $*GLOBALish not found"
    box $P5041, "Contextual $*GLOBALish not found"
    set $P5039, $P5041
  vivi_332685:
    set $P5034, $P5039
  fallback681:
    $P5042 = $P5018."install_lexical_symbol"($P5026, "GLOBALish", $P5034)
    .return ($P5042) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_399_1365879995.227") :anon :lex :outer("cuid_45_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 745
    .local pmc fb_tmp_76 
    .local pmc fb_tmp_77 
    .local pmc fb_tmp_78 
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback691
    nqp_get_sc_object $P5003, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5002, $P5003
    set fb_tmp_76, $P5002
    repr_defined $I5001, fb_tmp_76
    unless $I5001 goto if336_else692 
    set $P5004, fb_tmp_76["$W"]
    set $P5006, $P5004
    goto if336_end693
  if336_else692:
    null $P5005
    set $P5006, $P5005
  if336_end693:
    unless_null $P5006, vivi_337694
    nqp_get_sc_object $P5007, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5006, $P5007
  vivi_337694:
    unless_null $P5006, vivi_338695
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_338695:
    set $P5001, $P5006
  fallback691:
    find_dynamic_lex $P5009, "$*UNIT"
    unless_null $P5009, fallback696
    nqp_get_sc_object $P5011, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5010, $P5011
    set fb_tmp_77, $P5010
    repr_defined $I5002, fb_tmp_77
    unless $I5002 goto if339_else697 
    set $P5012, fb_tmp_77["$UNIT"]
    set $P5014, $P5012
    goto if339_end698
  if339_else697:
    null $P5013
    set $P5014, $P5013
  if339_end698:
    unless_null $P5014, vivi_340699
    nqp_get_sc_object $P5015, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5014, $P5015
  vivi_340699:
    unless_null $P5014, vivi_341700
    die "Contextual $*UNIT not found"
    box $P5016, "Contextual $*UNIT not found"
    set $P5014, $P5016
  vivi_341700:
    set $P5009, $P5014
  fallback696:
    find_dynamic_lex $P5017, "$*PACKAGE"
    unless_null $P5017, fallback701
    nqp_get_sc_object $P5019, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5018, $P5019
    set fb_tmp_78, $P5018
    repr_defined $I5003, fb_tmp_78
    unless $I5003 goto if342_else702 
    set $P5020, fb_tmp_78["$PACKAGE"]
    set $P5022, $P5020
    goto if342_end703
  if342_else702:
    null $P5021
    set $P5022, $P5021
  if342_end703:
    unless_null $P5022, vivi_343704
    nqp_get_sc_object $P5023, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5022, $P5023
  vivi_343704:
    unless_null $P5022, vivi_344705
    die "Contextual $*PACKAGE not found"
    box $P5024, "Contextual $*PACKAGE not found"
    set $P5022, $P5024
  vivi_344705:
    set $P5017, $P5022
  fallback701:
    $P5025 = $P5001."install_lexical_symbol"($P5009, "$?PACKAGE", $P5017)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_401_1365879995.227") :anon :lex :outer("cuid_45_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 749
    .const 'Sub' $P5021 = 'cuid_400_1365879995.227' 
    capture_lex $P5021 
    .local pmc fb_tmp_80 
    .local pmc fb_tmp_81 
    .local pmc fb_tmp_82 
    .local pmc pkg_viv_tmp_18 
    find_dynamic_lex $P5001, "%*COMPILING"
    unless_null $P5001, fallback717
    nqp_get_sc_object $P5003, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_18, $P5002
    set fb_tmp_82, pkg_viv_tmp_18
    repr_defined $I5004, fb_tmp_82
    unless $I5004 goto if351_else718 
    set $P5004, fb_tmp_82["%COMPILING"]
    set $P5006, $P5004
    goto if351_end719
  if351_else718:
    null $P5005
    set $P5006, $P5005
  if351_end719:
    unless_null $P5006, vivi_352720
    new $P5007, 'Hash'
    set pkg_viv_tmp_18["%COMPILING"], $P5007
    set $P5006, $P5007
  vivi_352720:
    unless_null $P5006, vivi_353721
    die "Contextual %*COMPILING not found"
    box $P5008, "Contextual %*COMPILING not found"
    set $P5006, $P5008
  vivi_353721:
    set $P5001, $P5006
  fallback717:
    set fb_tmp_81, $P5001
    repr_defined $I5003, fb_tmp_81
    unless $I5003 goto if350_else715 
    set $P5009, fb_tmp_81["%?OPTIONS"]
    set $P5011, $P5009
    goto if350_end716
  if350_else715:
    null $P5010
    set $P5011, $P5010
  if350_end716:
    unless_null $P5011, vivi_354722
    nqp_get_sc_object $P5012, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5011, $P5012
  vivi_354722:
    set fb_tmp_80, $P5011
    repr_defined $I5002, fb_tmp_80
    unless $I5002 goto if349_else713 
    set $P5013, fb_tmp_80["setting"]
    set $P5015, $P5013
    goto if349_end714
  if349_else713:
    null $P5014
    set $P5015, $P5014
  if349_end714:
    unless_null $P5015, vivi_355723
    nqp_get_sc_object $P5016, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5015, $P5016
  vivi_355723:
    set $S5001, $P5015
    iseq $I5001, $S5001, "NULL"
    box $P5020, $I5001
    set $P5019, $P5020
    if $I5001 goto unless348_end712 
    .const 'Sub' $P5017 = 'cuid_400_1365879995.227' 
    capture_lex $P5017
    $P5018 = $P5017()
    set $P5019, $P5018
  unless348_end712:
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_400_1365879995.227") :anon :lex :outer("cuid_401_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 750
    .lex "$DEFAULT", $P101 
    .local pmc fb_tmp_83 
    .local pmc fb_tmp_84 
    .local pmc fb_tmp_85 
    .local pmc pkg_viv_tmp_19 
    .local pmc fb_tmp_86 
    .local pmc fb_tmp_87 
    .local pmc fb_tmp_88 
    .local pmc fb_tmp_89 
    .local pmc fb_tmp_90 
    .local pmc fb_tmp_91 
    .local pmc fb_tmp_92 
    .local pmc fb_tmp_93 
    .local pmc pkg_viv_tmp_20 
    .local pmc fb_tmp_94 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
.annotate 'line', 751
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback724
    nqp_get_sc_object $P5004, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5003, $P5004
    set fb_tmp_83, $P5003
    repr_defined $I5001, fb_tmp_83
    unless $I5001 goto if356_else725 
    set $P5005, fb_tmp_83["$W"]
    set $P5007, $P5005
    goto if356_end726
  if356_else725:
    null $P5006
    set $P5007, $P5006
  if356_end726:
    unless_null $P5007, vivi_357727
    nqp_get_sc_object $P5008, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5007, $P5008
  vivi_357727:
    unless_null $P5007, vivi_358728
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_358728:
    set $P5002, $P5007
  fallback724:
    find_dynamic_lex $P5010, "%*HOW"
    unless_null $P5010, fallback731
    nqp_get_sc_object $P5012, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5011, $P5012
    set pkg_viv_tmp_19, $P5011
    set fb_tmp_85, pkg_viv_tmp_19
    repr_defined $I5003, fb_tmp_85
    unless $I5003 goto if360_else732 
    set $P5013, fb_tmp_85["%HOW"]
    set $P5015, $P5013
    goto if360_end733
  if360_else732:
    null $P5014
    set $P5015, $P5014
  if360_end733:
    unless_null $P5015, vivi_361734
    new $P5016, 'Hash'
    set pkg_viv_tmp_19["%HOW"], $P5016
    set $P5015, $P5016
  vivi_361734:
    unless_null $P5015, vivi_362735
    die "Contextual %*HOW not found"
    box $P5017, "Contextual %*HOW not found"
    set $P5015, $P5017
  vivi_362735:
    set $P5010, $P5015
  fallback731:
    set fb_tmp_84, $P5010
    repr_defined $I5002, fb_tmp_84
    unless $I5002 goto if359_else729 
    set $P5018, fb_tmp_84["knowhow"]
    set $P5020, $P5018
    goto if359_end730
  if359_else729:
    null $P5019
    set $P5020, $P5019
  if359_end730:
    unless_null $P5020, vivi_363736
    nqp_get_sc_object $P5021, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5020, $P5021
  vivi_363736:
    $P5022 = $P5002."pkg_create_mo"($P5020, "EXPORT" :named("name"))
    store_dynamic_lex "$*EXPORT", $P5022
.annotate 'line', 752
    find_dynamic_lex $P5024, "$*EXPORT"
    unless_null $P5024, fallback737
    nqp_get_sc_object $P5026, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5025, $P5026
    set fb_tmp_86, $P5025
    repr_defined $I5004, fb_tmp_86
    unless $I5004 goto if364_else738 
    set $P5027, fb_tmp_86["$EXPORT"]
    set $P5029, $P5027
    goto if364_end739
  if364_else738:
    null $P5028
    set $P5029, $P5028
  if364_end739:
    unless_null $P5029, vivi_365740
    nqp_get_sc_object $P5030, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5029, $P5030
  vivi_365740:
    unless_null $P5029, vivi_366741
    die "Contextual $*EXPORT not found"
    box $P5031, "Contextual $*EXPORT not found"
    set $P5029, $P5031
  vivi_366741:
    set $P5024, $P5029
  fallback737:
    get_how $P5023, $P5024
    find_dynamic_lex $P5032, "$*EXPORT"
    unless_null $P5032, fallback742
    nqp_get_sc_object $P5034, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5033, $P5034
    set fb_tmp_87, $P5033
    repr_defined $I5005, fb_tmp_87
    unless $I5005 goto if367_else743 
    set $P5035, fb_tmp_87["$EXPORT"]
    set $P5037, $P5035
    goto if367_end744
  if367_else743:
    null $P5036
    set $P5037, $P5036
  if367_end744:
    unless_null $P5037, vivi_368745
    nqp_get_sc_object $P5038, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5037, $P5038
  vivi_368745:
    unless_null $P5037, vivi_369746
    die "Contextual $*EXPORT not found"
    box $P5039, "Contextual $*EXPORT not found"
    set $P5037, $P5039
  vivi_369746:
    set $P5032, $P5037
  fallback742:
    $P5023."compose"($P5032)
.annotate 'line', 753
    find_dynamic_lex $P5040, "$*W"
    unless_null $P5040, fallback747
    nqp_get_sc_object $P5042, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5041, $P5042
    set fb_tmp_88, $P5041
    repr_defined $I5006, fb_tmp_88
    unless $I5006 goto if370_else748 
    set $P5043, fb_tmp_88["$W"]
    set $P5045, $P5043
    goto if370_end749
  if370_else748:
    null $P5044
    set $P5045, $P5044
  if370_end749:
    unless_null $P5045, vivi_371750
    nqp_get_sc_object $P5046, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5045, $P5046
  vivi_371750:
    unless_null $P5045, vivi_372751
    die "Contextual $*W not found"
    box $P5047, "Contextual $*W not found"
    set $P5045, $P5047
  vivi_372751:
    set $P5040, $P5045
  fallback747:
    find_dynamic_lex $P5048, "$*UNIT"
    unless_null $P5048, fallback752
    nqp_get_sc_object $P5050, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5049, $P5050
    set fb_tmp_89, $P5049
    repr_defined $I5007, fb_tmp_89
    unless $I5007 goto if373_else753 
    set $P5051, fb_tmp_89["$UNIT"]
    set $P5053, $P5051
    goto if373_end754
  if373_else753:
    null $P5052
    set $P5053, $P5052
  if373_end754:
    unless_null $P5053, vivi_374755
    nqp_get_sc_object $P5054, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5053, $P5054
  vivi_374755:
    unless_null $P5053, vivi_375756
    die "Contextual $*UNIT not found"
    box $P5055, "Contextual $*UNIT not found"
    set $P5053, $P5055
  vivi_375756:
    set $P5048, $P5053
  fallback752:
    find_dynamic_lex $P5056, "$*EXPORT"
    unless_null $P5056, fallback757
    nqp_get_sc_object $P5058, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5057, $P5058
    set fb_tmp_90, $P5057
    repr_defined $I5008, fb_tmp_90
    unless $I5008 goto if376_else758 
    set $P5059, fb_tmp_90["$EXPORT"]
    set $P5061, $P5059
    goto if376_end759
  if376_else758:
    null $P5060
    set $P5061, $P5060
  if376_end759:
    unless_null $P5061, vivi_377760
    nqp_get_sc_object $P5062, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5061, $P5062
  vivi_377760:
    unless_null $P5061, vivi_378761
    die "Contextual $*EXPORT not found"
    box $P5063, "Contextual $*EXPORT not found"
    set $P5061, $P5063
  vivi_378761:
    set $P5056, $P5061
  fallback757:
    $P5040."install_lexical_symbol"($P5048, "EXPORT", $P5056)
.annotate 'line', 754
    find_dynamic_lex $P5064, "$*W"
    unless_null $P5064, fallback762
    nqp_get_sc_object $P5066, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5065, $P5066
    set fb_tmp_91, $P5065
    repr_defined $I5009, fb_tmp_91
    unless $I5009 goto if379_else763 
    set $P5067, fb_tmp_91["$W"]
    set $P5069, $P5067
    goto if379_end764
  if379_else763:
    null $P5068
    set $P5069, $P5068
  if379_end764:
    unless_null $P5069, vivi_380765
    nqp_get_sc_object $P5070, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5069, $P5070
  vivi_380765:
    unless_null $P5069, vivi_381766
    die "Contextual $*W not found"
    box $P5071, "Contextual $*W not found"
    set $P5069, $P5071
  vivi_381766:
    set $P5064, $P5069
  fallback762:
    find_dynamic_lex $P5072, "%*HOW"
    unless_null $P5072, fallback769
    nqp_get_sc_object $P5074, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5073, $P5074
    set pkg_viv_tmp_20, $P5073
    set fb_tmp_93, pkg_viv_tmp_20
    repr_defined $I5011, fb_tmp_93
    unless $I5011 goto if383_else770 
    set $P5075, fb_tmp_93["%HOW"]
    set $P5077, $P5075
    goto if383_end771
  if383_else770:
    null $P5076
    set $P5077, $P5076
  if383_end771:
    unless_null $P5077, vivi_384772
    new $P5078, 'Hash'
    set pkg_viv_tmp_20["%HOW"], $P5078
    set $P5077, $P5078
  vivi_384772:
    unless_null $P5077, vivi_385773
    die "Contextual %*HOW not found"
    box $P5079, "Contextual %*HOW not found"
    set $P5077, $P5079
  vivi_385773:
    set $P5072, $P5077
  fallback769:
    set fb_tmp_92, $P5072
    repr_defined $I5010, fb_tmp_92
    unless $I5010 goto if382_else767 
    set $P5080, fb_tmp_92["knowhow"]
    set $P5082, $P5080
    goto if382_end768
  if382_else767:
    null $P5081
    set $P5082, $P5081
  if382_end768:
    unless_null $P5082, vivi_386774
    nqp_get_sc_object $P5083, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5082, $P5083
  vivi_386774:
    $P5084 = $P5064."pkg_create_mo"($P5082, "DEFAULT" :named("name"))
    set $P101, $P5084
.annotate 'line', 755
    get_how $P5085, $P101
    $P5085."compose"($P101)
    find_dynamic_lex $P5087, "$*EXPORT"
    unless_null $P5087, fallback775
    nqp_get_sc_object $P5089, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5088, $P5089
    set fb_tmp_94, $P5088
    repr_defined $I5012, fb_tmp_94
    unless $I5012 goto if387_else776 
    set $P5090, fb_tmp_94["$EXPORT"]
    set $P5092, $P5090
    goto if387_end777
  if387_else776:
    null $P5091
    set $P5092, $P5091
  if387_end777:
    unless_null $P5092, vivi_388778
    nqp_get_sc_object $P5093, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5092, $P5093
  vivi_388778:
    unless_null $P5092, vivi_389779
    die "Contextual $*EXPORT not found"
    box $P5094, "Contextual $*EXPORT not found"
    set $P5092, $P5094
  vivi_389779:
    set $P5087, $P5092
  fallback775:
    get_who $P5086, $P5087
    set $P5086["DEFAULT"], $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_402_1365879995.227") :anon :lex :outer("cuid_45_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 760
    .local pmc fb_tmp_95 
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback780
    nqp_get_sc_object $P5003, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5002, $P5003
    set fb_tmp_95, $P5002
    repr_defined $I5001, fb_tmp_95
    unless $I5001 goto if390_else781 
    set $P5004, fb_tmp_95["$W"]
    set $P5006, $P5004
    goto if390_end782
  if390_else781:
    null $P5005
    set $P5006, $P5005
  if390_end782:
    unless_null $P5006, vivi_391783
    nqp_get_sc_object $P5007, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5006, $P5007
  vivi_391783:
    unless_null $P5006, vivi_392784
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_392784:
    set $P5001, $P5006
  fallback780:
    $P5009 = $P5001."add_initializations"()
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "statementlist" :subid("cuid_46_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 768
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx398_start
    .local string rx398_tgt
    .local int rx398_pos
    .local int rx398_off
    .local int rx398_eos
    .local int rx398_rep
    .local pmc rx398_cur
    .local pmc rx398_curclass
    .local pmc rx398_bstack
    .local pmc rx398_cstack
    rx398_start = self."!cursor_start_all"()
    set rx398_cur, rx398_start[0]
    set rx398_tgt, rx398_start[1]
    set rx398_pos, rx398_start[2]
    set rx398_curclass, rx398_start[3]
    set rx398_bstack, rx398_start[4]
    set $I19, rx398_start[5]
    store_lex unicode:"$\x{a2}", rx398_cur
    length rx398_eos, rx398_tgt
    eq $I19, 1, rx398_restart794
    gt rx398_pos, rx398_eos, rx398_fail795
    repr_get_attr_int $I11, self, rx398_curclass, "$!from"
    ne $I11, -1, rxscan399_done801
    goto rxscan399_scan800
  rxscan399_loop799:
    inc rx398_pos
    gt rx398_pos, rx398_eos, rx398_fail795
    repr_bind_attr_int rx398_cur, rx398_curclass, "$!from", rx398_pos
  rxscan399_scan800:
    nqp_rxmark rx398_bstack, rxscan399_loop799, rx398_pos, 0
  rxscan399_done801:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt400_0803
    nqp_push_label $P11, alt400_1807
    nqp_rxmark rx398_bstack, alt400_end802, -1, 0
    rx398_cur."!alt"(rx398_pos, "alt_nfa__7_1365879996.823", $P11)
    goto rx398_fail795
  alt400_0803:
    repr_bind_attr_int rx398_cur, rx398_curclass, "$!pos", rx398_pos
    $P11 = rx398_cur."ws"()
    repr_get_attr_int $I11, $P11, rx398_curclass, "$!pos"
    lt $I11, 0, rx398_fail795
    repr_get_attr_int rx398_pos, $P11, rx398_curclass, "$!pos"
    lt rx398_pos, rx398_eos, rx398_fail795
    repr_bind_attr_int rx398_cur, rx398_curclass, "$!pos", rx398_pos
    $P11 = rx398_cur."ws"()
    repr_get_attr_int $I11, $P11, rx398_curclass, "$!pos"
    lt $I11, 0, rx398_fail795
    repr_get_attr_int rx398_pos, $P11, rx398_curclass, "$!pos"
    goto alt400_end802
  alt400_1807:
    repr_bind_attr_int rx398_cur, rx398_curclass, "$!pos", rx398_pos
    $P11 = rx398_cur."ws"()
    repr_get_attr_int $I11, $P11, rx398_curclass, "$!pos"
    lt $I11, 0, rx398_fail795
    repr_get_attr_int rx398_pos, $P11, rx398_curclass, "$!pos"
    nqp_rxmark rx398_bstack, rxquantr405_done810, rx398_pos, 0
  rxquantr405_loop809:
    repr_bind_attr_int rx398_cur, rx398_curclass, "$!pos", rx398_pos
    $P11 = rx398_cur."statement"()
    repr_get_attr_int $I11, $P11, rx398_curclass, "$!pos"
    lt $I11, 0, rx398_fail795
    nqp_rxmark rx398_bstack, rxsubrule406_pass811, -1, 0
  rxsubrule406_pass811:
    rx398_cstack = rx398_cur."!cursor_capture"($P11, "statement")
    repr_get_attr_int rx398_pos, $P11, rx398_curclass, "$!pos"
    repr_bind_attr_int rx398_cur, rx398_curclass, "$!pos", rx398_pos
    $P11 = rx398_cur."eat_terminator"()
    repr_get_attr_int $I11, $P11, rx398_curclass, "$!pos"
    lt $I11, 0, rx398_fail795
    repr_get_attr_int rx398_pos, $P11, rx398_curclass, "$!pos"
    repr_bind_attr_int rx398_cur, rx398_curclass, "$!pos", rx398_pos
    $P11 = rx398_cur."ws"()
    repr_get_attr_int $I11, $P11, rx398_curclass, "$!pos"
    lt $I11, 0, rx398_fail795
    repr_get_attr_int rx398_pos, $P11, rx398_curclass, "$!pos"
    nqp_rxpeek $I19, rx398_bstack, rxquantr405_done810
    inc $I19
    inc $I19
    set rx398_rep, rx398_bstack[$I19]
    nqp_rxcommit rx398_bstack, rxquantr405_done810
    inc rx398_rep
    nqp_rxmark rx398_bstack, rxquantr405_done810, rx398_pos, rx398_rep
    goto rxquantr405_loop809
  rxquantr405_done810:
    repr_bind_attr_int rx398_cur, rx398_curclass, "$!pos", rx398_pos
    $P11 = rx398_cur."ws"()
    repr_get_attr_int $I11, $P11, rx398_curclass, "$!pos"
    lt $I11, 0, rx398_fail795
    repr_get_attr_int rx398_pos, $P11, rx398_curclass, "$!pos"
    goto alt400_end802
  alt400_end802:
    rx398_cur."!cursor_pass"(rx398_pos, "statementlist", 'backtrack'=>1)
    .return (rx398_cur)
  rx398_restart794:
    repr_get_attr_obj rx398_cstack, rx398_cur, rx398_curclass, "$!cstack"
  rx398_fail795:
    unless rx398_bstack, rx398_done793
    pop $I19, rx398_bstack
    if_null rx398_cstack, rx398_cstack_done798
    unless rx398_cstack, rx398_cstack_done798
    dec $I19
    set $P11, rx398_cstack[$I19]
  rx398_cstack_done798:
    pop rx398_rep, rx398_bstack
    pop rx398_pos, rx398_bstack
    pop $I19, rx398_bstack
    lt rx398_pos, -1, rx398_done793
    lt rx398_pos, 0, rx398_fail795
    eq $I19, 0, rx398_fail795
    nqp_islist $I20, rx398_cstack
    unless $I20, rx398_jump796
    elements $I18, rx398_bstack
    le $I18, 0, rx398_cut797
    dec $I18
    set $I18, rx398_bstack[$I18]
  rx398_cut797:
    assign rx398_cstack, $I18
  rx398_jump796:
    jump $I19
  rx398_done793:
    rx398_cur."!cursor_fail"()
    .return (rx398_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement" :subid("cuid_47_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 773
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_48_1365879995.227' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx410_start
    .local string rx410_tgt
    .local int rx410_pos
    .local int rx410_off
    .local int rx410_eos
    .local int rx410_rep
    .local pmc rx410_cur
    .local pmc rx410_curclass
    .local pmc rx410_bstack
    .local pmc rx410_cstack
    rx410_start = self."!cursor_start_all"()
    set rx410_cur, rx410_start[0]
    set rx410_tgt, rx410_start[1]
    set rx410_pos, rx410_start[2]
    set rx410_curclass, rx410_start[3]
    set rx410_bstack, rx410_start[4]
    set $I19, rx410_start[5]
    store_lex unicode:"$\x{a2}", rx410_cur
    length rx410_eos, rx410_tgt
    eq $I19, 1, rx410_restart817
    gt rx410_pos, rx410_eos, rx410_fail818
    repr_get_attr_int $I11, self, rx410_curclass, "$!from"
    ne $I11, -1, rxscan411_done824
    goto rxscan411_scan823
  rxscan411_loop822:
    inc rx410_pos
    gt rx410_pos, rx410_eos, rx410_fail818
    repr_bind_attr_int rx410_cur, rx410_curclass, "$!from", rx410_pos
  rxscan411_scan823:
    nqp_rxmark rx410_bstack, rxscan411_loop822, rx410_pos, 0
  rxscan411_done824:
    .const 'Sub' $P5001 = 'cuid_48_1365879995.227' 
    capture_lex $P5001
    repr_bind_attr_int rx410_cur, rx410_curclass, "$!pos", rx410_pos
    $P11 = rx410_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx410_curclass, "$!pos"
    ge $I11, 0, rx410_fail818
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt417_0843
    nqp_push_label $P11, alt417_1845
    nqp_rxmark rx410_bstack, alt417_end842, -1, 0
    rx410_cur."!alt"(rx410_pos, "alt_nfa__9_1365879996.845", $P11)
    goto rx410_fail818
  alt417_0843:
    repr_bind_attr_int rx410_cur, rx410_curclass, "$!pos", rx410_pos
    $P11 = rx410_cur."statement_control"()
    repr_get_attr_int $I11, $P11, rx410_curclass, "$!pos"
    lt $I11, 0, rx410_fail818
    nqp_rxmark rx410_bstack, rxsubrule418_pass844, -1, 0
  rxsubrule418_pass844:
    rx410_cstack = rx410_cur."!cursor_capture"($P11, "statement_control")
    repr_get_attr_int rx410_pos, $P11, rx410_curclass, "$!pos"
    goto alt417_end842
  alt417_1845:
    repr_bind_attr_int rx410_cur, rx410_curclass, "$!pos", rx410_pos
    $P11 = rx410_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx410_curclass, "$!pos"
    lt $I11, 0, rx410_fail818
    nqp_rxmark rx410_bstack, rxsubrule419_pass846, -1, 0
  rxsubrule419_pass846:
    rx410_cstack = rx410_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx410_pos, $P11, rx410_curclass, "$!pos"
    repr_bind_attr_int rx410_cur, rx410_curclass, "$!pos", rx410_pos
    $P11 = rx410_cur."ws"()
    repr_get_attr_int $I11, $P11, rx410_curclass, "$!pos"
    lt $I11, 0, rx410_fail818
    repr_get_attr_int rx410_pos, $P11, rx410_curclass, "$!pos"
    nqp_rxmark rx410_bstack, rxquantr421_done849, rx410_pos, 0
  rxquantr421_loop848:
  alt422_0851:
    nqp_rxmark rx410_bstack, alt422_1852, rx410_pos, 0
    repr_bind_attr_int rx410_cur, rx410_curclass, "$!pos", rx410_pos
    $P11 = rx410_cur."MARKED"("endstmt")
    repr_get_attr_int $I11, $P11, rx410_curclass, "$!pos"
    lt $I11, 0, rx410_fail818
    goto alt422_end850
  alt422_1852:
    nqp_rxmark rx410_bstack, alt422_2858, rx410_pos, 0
    repr_bind_attr_int rx410_cur, rx410_curclass, "$!pos", rx410_pos
    $P11 = rx410_cur."statement_mod_cond"()
    repr_get_attr_int $I11, $P11, rx410_curclass, "$!pos"
    lt $I11, 0, rx410_fail818
    nqp_rxmark rx410_bstack, rxsubrule423_pass853, -1, 0
  rxsubrule423_pass853:
    rx410_cstack = rx410_cur."!cursor_capture"($P11, "statement_mod_cond")
    repr_get_attr_int rx410_pos, $P11, rx410_curclass, "$!pos"
    nqp_rxmark rx410_bstack, rxquantr424_done855, rx410_pos, 0
  rxquantr424_loop854:
    repr_bind_attr_int rx410_cur, rx410_curclass, "$!pos", rx410_pos
    $P11 = rx410_cur."statement_mod_loop"()
    repr_get_attr_int $I11, $P11, rx410_curclass, "$!pos"
    lt $I11, 0, rx410_fail818
    goto rxsubrule425_pass856
  rxsubrule425_back857:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx410_curclass, "$!pos"
    lt $I11, 0, rx410_fail818
  rxsubrule425_pass856:
    rx410_cstack = rx410_cur."!cursor_capture"($P11, "statement_mod_loop")
    set_addr $I11, rxsubrule425_back857
    push rx410_bstack, $I11
    push rx410_bstack, 0
    push rx410_bstack, rx410_pos
    elements $I11, rx410_cstack
    push rx410_bstack, $I11
    repr_get_attr_int rx410_pos, $P11, rx410_curclass, "$!pos"
    nqp_rxpeek $I19, rx410_bstack, rxquantr424_done855
    inc $I19
    inc $I19
    set rx410_rep, rx410_bstack[$I19]
    nqp_rxcommit rx410_bstack, rxquantr424_done855
    inc rx410_rep
  rxquantr424_done855:
    goto alt422_end850
  alt422_2858:
    repr_bind_attr_int rx410_cur, rx410_curclass, "$!pos", rx410_pos
    $P11 = rx410_cur."statement_mod_loop"()
    repr_get_attr_int $I11, $P11, rx410_curclass, "$!pos"
    lt $I11, 0, rx410_fail818
    nqp_rxmark rx410_bstack, rxsubrule426_pass859, -1, 0
  rxsubrule426_pass859:
    rx410_cstack = rx410_cur."!cursor_capture"($P11, "statement_mod_loop")
    repr_get_attr_int rx410_pos, $P11, rx410_curclass, "$!pos"
  alt422_end850:
    nqp_rxpeek $I19, rx410_bstack, rxquantr421_done849
    inc $I19
    inc $I19
    set rx410_rep, rx410_bstack[$I19]
    nqp_rxcommit rx410_bstack, rxquantr421_done849
    inc rx410_rep
  rxquantr421_done849:
    goto alt417_end842
  alt417_end842:
    nqp_rxcommit rx410_bstack, alt417_end842
    rx410_cur."!cursor_pass"(rx410_pos, "statement", 'backtrack'=>1)
    .return (rx410_cur)
  rx410_restart817:
    repr_get_attr_obj rx410_cstack, rx410_cur, rx410_curclass, "$!cstack"
  rx410_fail818:
    unless rx410_bstack, rx410_done816
    pop $I19, rx410_bstack
    if_null rx410_cstack, rx410_cstack_done821
    unless rx410_cstack, rx410_cstack_done821
    dec $I19
    set $P11, rx410_cstack[$I19]
  rx410_cstack_done821:
    pop rx410_rep, rx410_bstack
    pop rx410_pos, rx410_bstack
    pop $I19, rx410_bstack
    lt rx410_pos, -1, rx410_done816
    lt rx410_pos, 0, rx410_fail818
    eq $I19, 0, rx410_fail818
    nqp_islist $I20, rx410_cstack
    unless $I20, rx410_jump819
    elements $I18, rx410_bstack
    le $I18, 0, rx410_cut820
    dec $I18
    set $I18, rx410_bstack[$I18]
  rx410_cut820:
    assign rx410_cstack, $I18
  rx410_jump819:
    jump $I19
  rx410_done816:
    rx410_cur."!cursor_fail"()
    .return (rx410_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_48_1365879995.227") :anon :lex :outer("cuid_47_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx412_start
    .local string rx412_tgt
    .local int rx412_pos
    .local int rx412_off
    .local int rx412_eos
    .local int rx412_rep
    .local pmc rx412_cur
    .local pmc rx412_curclass
    .local pmc rx412_bstack
    .local pmc rx412_cstack
    rx412_start = self."!cursor_start_all"()
    set rx412_cur, rx412_start[0]
    set rx412_tgt, rx412_start[1]
    set rx412_pos, rx412_start[2]
    set rx412_curclass, rx412_start[3]
    set rx412_bstack, rx412_start[4]
    set $I19, rx412_start[5]
    store_lex unicode:"$\x{a2}", rx412_cur
    length rx412_eos, rx412_tgt
    eq $I19, 1, rx412_restart827
    gt rx412_pos, rx412_eos, rx412_fail828
    repr_get_attr_int $I11, self, rx412_curclass, "$!from"
    ne $I11, -1, rxscan413_done834
    goto rxscan413_scan833
  rxscan413_loop832:
    inc rx412_pos
    gt rx412_pos, rx412_eos, rx412_fail828
    repr_bind_attr_int rx412_cur, rx412_curclass, "$!from", rx412_pos
  rxscan413_scan833:
    nqp_rxmark rx412_bstack, rxscan413_loop832, rx412_pos, 0
  rxscan413_done834:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt414_0836
    nqp_push_label $P11, alt414_1840
    nqp_rxmark rx412_bstack, alt414_end835, -1, 0
    rx412_cur."!alt"(rx412_pos, "alt_nfa__8_1365879996.829", $P11)
    goto rx412_fail828
  alt414_0836:
  alt415_0838:
    nqp_rxmark rx412_bstack, alt415_1839, rx412_pos, 0
    add $I11, rx412_pos, 1
    gt $I11, rx412_eos, rx412_fail828
    substr $S10, rx412_tgt, rx412_pos, 1
    ne $S10, ucs4:"]", rx412_fail828
    add rx412_pos, 1
    goto alt415_end837
  alt415_1839:
    ge rx412_pos, rx412_eos, rx412_fail828
    substr $S11, rx412_tgt, rx412_pos, 1
    index $I11, ucs4:")}", $S11
    lt $I11, 0, rx412_fail828
    inc rx412_pos
  alt415_end837:
    goto alt414_end835
  alt414_1840:
    lt rx412_pos, rx412_eos, rx412_fail828
    goto alt414_end835
  alt414_end835:
    rx412_cur."!cursor_pass"(rx412_pos, 'backtrack'=>1)
    .return (rx412_cur)
  rx412_restart827:
    repr_get_attr_obj rx412_cstack, rx412_cur, rx412_curclass, "$!cstack"
  rx412_fail828:
    unless rx412_bstack, rx412_done826
    pop $I19, rx412_bstack
    if_null rx412_cstack, rx412_cstack_done831
    unless rx412_cstack, rx412_cstack_done831
    dec $I19
    set $P11, rx412_cstack[$I19]
  rx412_cstack_done831:
    pop rx412_rep, rx412_bstack
    pop rx412_pos, rx412_bstack
    pop $I19, rx412_bstack
    lt rx412_pos, -1, rx412_done826
    lt rx412_pos, 0, rx412_fail828
    eq $I19, 0, rx412_fail828
    nqp_islist $I20, rx412_cstack
    unless $I20, rx412_jump829
    elements $I18, rx412_bstack
    le $I18, 0, rx412_cut830
    dec $I18
    set $I18, rx412_bstack[$I18]
  rx412_cut830:
    assign rx412_cstack, $I18
  rx412_jump829:
    jump $I19
  rx412_done826:
    rx412_cur."!cursor_fail"()
    .return (rx412_cur) 
.end
.HLL "nqp"
.namespace []
.sub "eat_terminator" :subid("cuid_49_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 786
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx427_start
    .local string rx427_tgt
    .local int rx427_pos
    .local int rx427_off
    .local int rx427_eos
    .local int rx427_rep
    .local pmc rx427_cur
    .local pmc rx427_curclass
    .local pmc rx427_bstack
    .local pmc rx427_cstack
    rx427_start = self."!cursor_start_all"()
    set rx427_cur, rx427_start[0]
    set rx427_tgt, rx427_start[1]
    set rx427_pos, rx427_start[2]
    set rx427_curclass, rx427_start[3]
    set rx427_bstack, rx427_start[4]
    set $I19, rx427_start[5]
    store_lex unicode:"$\x{a2}", rx427_cur
    length rx427_eos, rx427_tgt
    eq $I19, 1, rx427_restart862
    gt rx427_pos, rx427_eos, rx427_fail863
    repr_get_attr_int $I11, self, rx427_curclass, "$!from"
    ne $I11, -1, rxscan428_done869
    goto rxscan428_scan868
  rxscan428_loop867:
    inc rx427_pos
    gt rx427_pos, rx427_eos, rx427_fail863
    repr_bind_attr_int rx427_cur, rx427_curclass, "$!from", rx427_pos
  rxscan428_scan868:
    nqp_rxmark rx427_bstack, rxscan428_loop867, rx427_pos, 0
  rxscan428_done869:
  alt429_0871:
    nqp_rxmark rx427_bstack, alt429_1872, rx427_pos, 0
    add $I11, rx427_pos, 1
    gt $I11, rx427_eos, rx427_fail863
    substr $S10, rx427_tgt, rx427_pos, 1
    ne $S10, ucs4:";", rx427_fail863
    add rx427_pos, 1
    goto alt429_end870
  alt429_1872:
    nqp_rxmark rx427_bstack, alt429_2873, rx427_pos, 0
    repr_bind_attr_int rx427_cur, rx427_curclass, "$!pos", rx427_pos
    $P11 = rx427_cur."MARKED"("endstmt")
    repr_get_attr_int $I11, $P11, rx427_curclass, "$!pos"
    lt $I11, 0, rx427_fail863
    goto alt429_end870
  alt429_2873:
    nqp_rxmark rx427_bstack, alt429_3874, rx427_pos, 0
    repr_bind_attr_int rx427_cur, rx427_curclass, "$!pos", rx427_pos
    $P11 = rx427_cur."terminator"()
    repr_get_attr_int $I11, $P11, rx427_curclass, "$!pos"
    lt $I11, 0, rx427_fail863
    goto alt429_end870
  alt429_3874:
    lt rx427_pos, rx427_eos, rx427_fail863
  alt429_end870:
    rx427_cur."!cursor_pass"(rx427_pos, "eat_terminator", 'backtrack'=>1)
    .return (rx427_cur)
  rx427_restart862:
    repr_get_attr_obj rx427_cstack, rx427_cur, rx427_curclass, "$!cstack"
  rx427_fail863:
    unless rx427_bstack, rx427_done861
    pop $I19, rx427_bstack
    if_null rx427_cstack, rx427_cstack_done866
    unless rx427_cstack, rx427_cstack_done866
    dec $I19
    set $P11, rx427_cstack[$I19]
  rx427_cstack_done866:
    pop rx427_rep, rx427_bstack
    pop rx427_pos, rx427_bstack
    pop $I19, rx427_bstack
    lt rx427_pos, -1, rx427_done861
    lt rx427_pos, 0, rx427_fail863
    eq $I19, 0, rx427_fail863
    nqp_islist $I20, rx427_cstack
    unless $I20, rx427_jump864
    elements $I18, rx427_bstack
    le $I18, 0, rx427_cut865
    dec $I18
    set $I18, rx427_bstack[$I18]
  rx427_cut865:
    assign rx427_cstack, $I18
  rx427_jump864:
    jump $I19
  rx427_done861:
    rx427_cur."!cursor_fail"()
    .return (rx427_cur) 
.end
.HLL "nqp"
.namespace []
.sub "xblock" :subid("cuid_50_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 793
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx431_start
    .local string rx431_tgt
    .local int rx431_pos
    .local int rx431_off
    .local int rx431_eos
    .local int rx431_rep
    .local pmc rx431_cur
    .local pmc rx431_curclass
    .local pmc rx431_bstack
    .local pmc rx431_cstack
    rx431_start = self."!cursor_start_all"()
    set rx431_cur, rx431_start[0]
    set rx431_tgt, rx431_start[1]
    set rx431_pos, rx431_start[2]
    set rx431_curclass, rx431_start[3]
    set rx431_bstack, rx431_start[4]
    set $I19, rx431_start[5]
    store_lex unicode:"$\x{a2}", rx431_cur
    length rx431_eos, rx431_tgt
    eq $I19, 1, rx431_restart878
    gt rx431_pos, rx431_eos, rx431_fail879
    repr_get_attr_int $I11, self, rx431_curclass, "$!from"
    ne $I11, -1, rxscan432_done885
    goto rxscan432_scan884
  rxscan432_loop883:
    inc rx431_pos
    gt rx431_pos, rx431_eos, rx431_fail879
    repr_bind_attr_int rx431_cur, rx431_curclass, "$!from", rx431_pos
  rxscan432_scan884:
    nqp_rxmark rx431_bstack, rxscan432_loop883, rx431_pos, 0
  rxscan432_done885:
    repr_bind_attr_int rx431_cur, rx431_curclass, "$!pos", rx431_pos
    $P11 = rx431_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx431_curclass, "$!pos"
    lt $I11, 0, rx431_fail879
    nqp_rxmark rx431_bstack, rxsubrule433_pass886, -1, 0
  rxsubrule433_pass886:
    rx431_cstack = rx431_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx431_pos, $P11, rx431_curclass, "$!pos"
    repr_bind_attr_int rx431_cur, rx431_curclass, "$!pos", rx431_pos
    $P11 = rx431_cur."ws"()
    repr_get_attr_int $I11, $P11, rx431_curclass, "$!pos"
    lt $I11, 0, rx431_fail879
    repr_get_attr_int rx431_pos, $P11, rx431_curclass, "$!pos"
    repr_bind_attr_int rx431_cur, rx431_curclass, "$!pos", rx431_pos
    $P11 = rx431_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx431_curclass, "$!pos"
    lt $I11, 0, rx431_fail879
    nqp_rxmark rx431_bstack, rxsubrule435_pass888, -1, 0
  rxsubrule435_pass888:
    rx431_cstack = rx431_cur."!cursor_capture"($P11, "pblock")
    repr_get_attr_int rx431_pos, $P11, rx431_curclass, "$!pos"
    rx431_cur."!cursor_pass"(rx431_pos, "xblock", 'backtrack'=>1)
    .return (rx431_cur)
  rx431_restart878:
    repr_get_attr_obj rx431_cstack, rx431_cur, rx431_curclass, "$!cstack"
  rx431_fail879:
    unless rx431_bstack, rx431_done877
    pop $I19, rx431_bstack
    if_null rx431_cstack, rx431_cstack_done882
    unless rx431_cstack, rx431_cstack_done882
    dec $I19
    set $P11, rx431_cstack[$I19]
  rx431_cstack_done882:
    pop rx431_rep, rx431_bstack
    pop rx431_pos, rx431_bstack
    pop $I19, rx431_bstack
    lt rx431_pos, -1, rx431_done877
    lt rx431_pos, 0, rx431_fail879
    eq $I19, 0, rx431_fail879
    nqp_islist $I20, rx431_cstack
    unless $I20, rx431_jump880
    elements $I18, rx431_bstack
    le $I18, 0, rx431_cut881
    dec $I18
    set $I18, rx431_bstack[$I18]
  rx431_cut881:
    assign rx431_cstack, $I18
  rx431_jump880:
    jump $I19
  rx431_done877:
    rx431_cur."!cursor_fail"()
    .return (rx431_cur) 
.end
.HLL "nqp"
.namespace []
.sub "pblock" :subid("cuid_51_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 797
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx436_start
    .local string rx436_tgt
    .local int rx436_pos
    .local int rx436_off
    .local int rx436_eos
    .local int rx436_rep
    .local pmc rx436_cur
    .local pmc rx436_curclass
    .local pmc rx436_bstack
    .local pmc rx436_cstack
    rx436_start = self."!cursor_start_all"()
    set rx436_cur, rx436_start[0]
    set rx436_tgt, rx436_start[1]
    set rx436_pos, rx436_start[2]
    set rx436_curclass, rx436_start[3]
    set rx436_bstack, rx436_start[4]
    set $I19, rx436_start[5]
    store_lex unicode:"$\x{a2}", rx436_cur
    length rx436_eos, rx436_tgt
    eq $I19, 1, rx436_restart891
    gt rx436_pos, rx436_eos, rx436_fail892
    repr_get_attr_int $I11, self, rx436_curclass, "$!from"
    ne $I11, -1, rxscan437_done898
    goto rxscan437_scan897
  rxscan437_loop896:
    inc rx436_pos
    gt rx436_pos, rx436_eos, rx436_fail892
    repr_bind_attr_int rx436_cur, rx436_curclass, "$!from", rx436_pos
  rxscan437_scan897:
    nqp_rxmark rx436_bstack, rxscan437_loop896, rx436_pos, 0
  rxscan437_done898:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt438_0900
    nqp_push_label $P11, alt438_1906
    nqp_push_label $P11, alt438_2909
    nqp_rxmark rx436_bstack, alt438_end899, -1, 0
    rx436_cur."!alt"(rx436_pos, "alt_nfa__10_1365879996.876", $P11)
    goto rx436_fail892
  alt438_0900:
    repr_bind_attr_int rx436_cur, rx436_curclass, "$!pos", rx436_pos
    $P11 = rx436_cur."lambda"()
    repr_get_attr_int $I11, $P11, rx436_curclass, "$!pos"
    lt $I11, 0, rx436_fail892
    repr_get_attr_int rx436_pos, $P11, rx436_curclass, "$!pos"
    repr_bind_attr_int rx436_cur, rx436_curclass, "$!pos", rx436_pos
    $P11 = rx436_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx436_curclass, "$!pos"
    lt $I11, 0, rx436_fail892
    repr_get_attr_int rx436_pos, $P11, rx436_curclass, "$!pos"
    repr_bind_attr_int rx436_cur, rx436_curclass, "$!pos", rx436_pos
    $P11 = rx436_cur."signature"()
    repr_get_attr_int $I11, $P11, rx436_curclass, "$!pos"
    lt $I11, 0, rx436_fail892
    nqp_rxmark rx436_bstack, rxsubrule441_pass903, -1, 0
  rxsubrule441_pass903:
    rx436_cstack = rx436_cur."!cursor_capture"($P11, "signature")
    repr_get_attr_int rx436_pos, $P11, rx436_curclass, "$!pos"
    repr_bind_attr_int rx436_cur, rx436_curclass, "$!pos", rx436_pos
    $P11 = rx436_cur."ws"()
    repr_get_attr_int $I11, $P11, rx436_curclass, "$!pos"
    lt $I11, 0, rx436_fail892
    repr_get_attr_int rx436_pos, $P11, rx436_curclass, "$!pos"
    repr_bind_attr_int rx436_cur, rx436_curclass, "$!pos", rx436_pos
    $P11 = rx436_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx436_curclass, "$!pos"
    lt $I11, 0, rx436_fail892
    nqp_rxmark rx436_bstack, rxsubrule443_pass905, -1, 0
  rxsubrule443_pass905:
    rx436_cstack = rx436_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx436_pos, $P11, rx436_curclass, "$!pos"
    goto alt438_end899
  alt438_1906:
    ge rx436_pos, rx436_eos, rx436_fail892
    substr $S11, rx436_tgt, rx436_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx436_fail892
    repr_bind_attr_int rx436_cur, rx436_curclass, "$!pos", rx436_pos
    $P11 = rx436_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx436_curclass, "$!pos"
    lt $I11, 0, rx436_fail892
    repr_get_attr_int rx436_pos, $P11, rx436_curclass, "$!pos"
    repr_bind_attr_int rx436_cur, rx436_curclass, "$!pos", rx436_pos
    $P11 = rx436_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx436_curclass, "$!pos"
    lt $I11, 0, rx436_fail892
    nqp_rxmark rx436_bstack, rxsubrule445_pass908, -1, 0
  rxsubrule445_pass908:
    rx436_cstack = rx436_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx436_pos, $P11, rx436_curclass, "$!pos"
    goto alt438_end899
  alt438_2909:
    repr_bind_attr_int rx436_cur, rx436_curclass, "$!pos", rx436_pos
    $P11 = rx436_cur."panic"("Missing block")
    repr_get_attr_int $I11, $P11, rx436_curclass, "$!pos"
    lt $I11, 0, rx436_fail892
    repr_get_attr_int rx436_pos, $P11, rx436_curclass, "$!pos"
    goto alt438_end899
  alt438_end899:
    rx436_cur."!cursor_pass"(rx436_pos, "pblock", 'backtrack'=>1)
    .return (rx436_cur)
  rx436_restart891:
    repr_get_attr_obj rx436_cstack, rx436_cur, rx436_curclass, "$!cstack"
  rx436_fail892:
    unless rx436_bstack, rx436_done890
    pop $I19, rx436_bstack
    if_null rx436_cstack, rx436_cstack_done895
    unless rx436_cstack, rx436_cstack_done895
    dec $I19
    set $P11, rx436_cstack[$I19]
  rx436_cstack_done895:
    pop rx436_rep, rx436_bstack
    pop rx436_pos, rx436_bstack
    pop $I19, rx436_bstack
    lt rx436_pos, -1, rx436_done890
    lt rx436_pos, 0, rx436_fail892
    eq $I19, 0, rx436_fail892
    nqp_islist $I20, rx436_cstack
    unless $I20, rx436_jump893
    elements $I18, rx436_bstack
    le $I18, 0, rx436_cut894
    dec $I18
    set $I18, rx436_bstack[$I18]
  rx436_cut894:
    assign rx436_cstack, $I18
  rx436_jump893:
    jump $I19
  rx436_done890:
    rx436_cur."!cursor_fail"()
    .return (rx436_cur) 
.end
.HLL "nqp"
.namespace []
.sub "lambda" :subid("cuid_52_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 808
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx447_start
    .local string rx447_tgt
    .local int rx447_pos
    .local int rx447_off
    .local int rx447_eos
    .local int rx447_rep
    .local pmc rx447_cur
    .local pmc rx447_curclass
    .local pmc rx447_bstack
    .local pmc rx447_cstack
    rx447_start = self."!cursor_start_all"()
    set rx447_cur, rx447_start[0]
    set rx447_tgt, rx447_start[1]
    set rx447_pos, rx447_start[2]
    set rx447_curclass, rx447_start[3]
    set rx447_bstack, rx447_start[4]
    set $I19, rx447_start[5]
    store_lex unicode:"$\x{a2}", rx447_cur
    length rx447_eos, rx447_tgt
    eq $I19, 1, rx447_restart913
    gt rx447_pos, rx447_eos, rx447_fail914
    repr_get_attr_int $I11, self, rx447_curclass, "$!from"
    ne $I11, -1, rxscan448_done920
    goto rxscan448_scan919
  rxscan448_loop918:
    inc rx447_pos
    gt rx447_pos, rx447_eos, rx447_fail914
    repr_bind_attr_int rx447_cur, rx447_curclass, "$!from", rx447_pos
  rxscan448_scan919:
    nqp_rxmark rx447_bstack, rxscan448_loop918, rx447_pos, 0
  rxscan448_done920:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt449_0922
    nqp_push_label $P11, alt449_1923
    nqp_rxmark rx447_bstack, alt449_end921, -1, 0
    rx447_cur."!alt"(rx447_pos, "alt_nfa__11_1365879996.882", $P11)
    goto rx447_fail914
  alt449_0922:
    add $I11, rx447_pos, 2
    gt $I11, rx447_eos, rx447_fail914
    substr $S10, rx447_tgt, rx447_pos, 2
    ne $S10, ucs4:"->", rx447_fail914
    add rx447_pos, 2
    goto alt449_end921
  alt449_1923:
    add $I11, rx447_pos, 3
    gt $I11, rx447_eos, rx447_fail914
    substr $S10, rx447_tgt, rx447_pos, 3
    ne $S10, ucs4:"<->", rx447_fail914
    add rx447_pos, 3
    goto alt449_end921
  alt449_end921:
    rx447_cur."!cursor_pass"(rx447_pos, "lambda", 'backtrack'=>1)
    .return (rx447_cur)
  rx447_restart913:
    repr_get_attr_obj rx447_cstack, rx447_cur, rx447_curclass, "$!cstack"
  rx447_fail914:
    unless rx447_bstack, rx447_done912
    pop $I19, rx447_bstack
    if_null rx447_cstack, rx447_cstack_done917
    unless rx447_cstack, rx447_cstack_done917
    dec $I19
    set $P11, rx447_cstack[$I19]
  rx447_cstack_done917:
    pop rx447_rep, rx447_bstack
    pop rx447_pos, rx447_bstack
    pop $I19, rx447_bstack
    lt rx447_pos, -1, rx447_done912
    lt rx447_pos, 0, rx447_fail914
    eq $I19, 0, rx447_fail914
    nqp_islist $I20, rx447_cstack
    unless $I20, rx447_jump915
    elements $I18, rx447_bstack
    le $I18, 0, rx447_cut916
    dec $I18
    set $I18, rx447_bstack[$I18]
  rx447_cut916:
    assign rx447_cstack, $I18
  rx447_jump915:
    jump $I19
  rx447_done912:
    rx447_cur."!cursor_fail"()
    .return (rx447_cur) 
.end
.HLL "nqp"
.namespace []
.sub "block" :subid("cuid_53_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 810
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx450_start
    .local string rx450_tgt
    .local int rx450_pos
    .local int rx450_off
    .local int rx450_eos
    .local int rx450_rep
    .local pmc rx450_cur
    .local pmc rx450_curclass
    .local pmc rx450_bstack
    .local pmc rx450_cstack
    rx450_start = self."!cursor_start_all"()
    set rx450_cur, rx450_start[0]
    set rx450_tgt, rx450_start[1]
    set rx450_pos, rx450_start[2]
    set rx450_curclass, rx450_start[3]
    set rx450_bstack, rx450_start[4]
    set $I19, rx450_start[5]
    store_lex unicode:"$\x{a2}", rx450_cur
    length rx450_eos, rx450_tgt
    eq $I19, 1, rx450_restart926
    gt rx450_pos, rx450_eos, rx450_fail927
    repr_get_attr_int $I11, self, rx450_curclass, "$!from"
    ne $I11, -1, rxscan451_done933
    goto rxscan451_scan932
  rxscan451_loop931:
    inc rx450_pos
    gt rx450_pos, rx450_eos, rx450_fail927
    repr_bind_attr_int rx450_cur, rx450_curclass, "$!from", rx450_pos
  rxscan451_scan932:
    nqp_rxmark rx450_bstack, rxscan451_loop931, rx450_pos, 0
  rxscan451_done933:
  alt452_0935:
    nqp_rxmark rx450_bstack, alt452_1936, rx450_pos, 0
    ge rx450_pos, rx450_eos, rx450_fail927
    substr $S11, rx450_tgt, rx450_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx450_fail927
    goto alt452_end934
  alt452_1936:
    repr_bind_attr_int rx450_cur, rx450_curclass, "$!pos", rx450_pos
    $P11 = rx450_cur."panic"("Missing block")
    repr_get_attr_int $I11, $P11, rx450_curclass, "$!pos"
    lt $I11, 0, rx450_fail927
    repr_get_attr_int rx450_pos, $P11, rx450_curclass, "$!pos"
  alt452_end934:
    repr_bind_attr_int rx450_cur, rx450_curclass, "$!pos", rx450_pos
    $P11 = rx450_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx450_curclass, "$!pos"
    lt $I11, 0, rx450_fail927
    repr_get_attr_int rx450_pos, $P11, rx450_curclass, "$!pos"
    repr_bind_attr_int rx450_cur, rx450_curclass, "$!pos", rx450_pos
    $P11 = rx450_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx450_curclass, "$!pos"
    lt $I11, 0, rx450_fail927
    nqp_rxmark rx450_bstack, rxsubrule455_pass939, -1, 0
  rxsubrule455_pass939:
    rx450_cstack = rx450_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx450_pos, $P11, rx450_curclass, "$!pos"
    rx450_cur."!cursor_pass"(rx450_pos, "block", 'backtrack'=>1)
    .return (rx450_cur)
  rx450_restart926:
    repr_get_attr_obj rx450_cstack, rx450_cur, rx450_curclass, "$!cstack"
  rx450_fail927:
    unless rx450_bstack, rx450_done925
    pop $I19, rx450_bstack
    if_null rx450_cstack, rx450_cstack_done930
    unless rx450_cstack, rx450_cstack_done930
    dec $I19
    set $P11, rx450_cstack[$I19]
  rx450_cstack_done930:
    pop rx450_rep, rx450_bstack
    pop rx450_pos, rx450_bstack
    pop $I19, rx450_bstack
    lt rx450_pos, -1, rx450_done925
    lt rx450_pos, 0, rx450_fail927
    eq $I19, 0, rx450_fail927
    nqp_islist $I20, rx450_cstack
    unless $I20, rx450_jump928
    elements $I18, rx450_bstack
    le $I18, 0, rx450_cut929
    dec $I18
    set $I18, rx450_bstack[$I18]
  rx450_cut929:
    assign rx450_cstack, $I18
  rx450_jump928:
    jump $I19
  rx450_done925:
    rx450_cur."!cursor_fail"()
    .return (rx450_cur) 
.end
.HLL "nqp"
.namespace []
.sub "blockoid" :subid("cuid_54_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 816
    .param pmc _lex_param_0 
    .lex "%*HANDLERS", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_96 
    .local pmc pkg_viv_tmp_21 
    new $P5001, 'Hash'
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx456_start
    .local string rx456_tgt
    .local int rx456_pos
    .local int rx456_off
    .local int rx456_eos
    .local int rx456_rep
    .local pmc rx456_cur
    .local pmc rx456_curclass
    .local pmc rx456_bstack
    .local pmc rx456_cstack
    rx456_start = self."!cursor_start_all"()
    set rx456_cur, rx456_start[0]
    set rx456_tgt, rx456_start[1]
    set rx456_pos, rx456_start[2]
    set rx456_curclass, rx456_start[3]
    set rx456_bstack, rx456_start[4]
    set $I19, rx456_start[5]
    store_lex unicode:"$\x{a2}", rx456_cur
    length rx456_eos, rx456_tgt
    eq $I19, 1, rx456_restart942
    gt rx456_pos, rx456_eos, rx456_fail943
    repr_get_attr_int $I11, self, rx456_curclass, "$!from"
    ne $I11, -1, rxscan457_done949
    goto rxscan457_scan948
  rxscan457_loop947:
    inc rx456_pos
    gt rx456_pos, rx456_eos, rx456_fail943
    repr_bind_attr_int rx456_cur, rx456_curclass, "$!from", rx456_pos
  rxscan457_scan948:
    nqp_rxmark rx456_bstack, rxscan457_loop947, rx456_pos, 0
  rxscan457_done949:
    repr_bind_attr_int rx456_cur, rx456_curclass, "$!pos", rx456_pos
    store_lex unicode:"$\x{a2}", rx456_cur
    unless_null $P101, fallback950
    nqp_get_sc_object $P5003, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_21, $P5002
    set fb_tmp_96, pkg_viv_tmp_21
    repr_defined $I5001, fb_tmp_96
    unless $I5001 goto if458_else951 
    set $P5004, fb_tmp_96["%HANDLERS"]
    set $P5006, $P5004
    goto if458_end952
  if458_else951:
    null $P5005
    set $P5006, $P5005
  if458_end952:
    unless_null $P5006, vivi_459953
    new $P5007, 'Hash'
    set pkg_viv_tmp_21["%HANDLERS"], $P5007
    set $P5006, $P5007
  vivi_459953:
    unless_null $P5006, vivi_460954
    die "Contextual %*HANDLERS not found"
    box $P5008, "Contextual %*HANDLERS not found"
    set $P5006, $P5008
  vivi_460954:
    set $P101, $P5006
  fallback950:
    repr_bind_attr_int rx456_cur, rx456_curclass, "$!pos", rx456_pos
    $P11 = rx456_cur."finishpad"()
    repr_get_attr_int $I11, $P11, rx456_curclass, "$!pos"
    lt $I11, 0, rx456_fail943
    repr_get_attr_int rx456_pos, $P11, rx456_curclass, "$!pos"
  alt462_0957:
    nqp_rxmark rx456_bstack, alt462_1959, rx456_pos, 0
    add $I11, rx456_pos, 14
    gt $I11, rx456_eos, rx456_fail943
    substr $S10, rx456_tgt, rx456_pos, 14
    ne $S10, ucs4:"{YOU_ARE_HERE}", rx456_fail943
    add rx456_pos, 14
    repr_bind_attr_int rx456_cur, rx456_curclass, "$!pos", rx456_pos
    $P11 = rx456_cur."you_are_here"()
    repr_get_attr_int $I11, $P11, rx456_curclass, "$!pos"
    lt $I11, 0, rx456_fail943
    nqp_rxmark rx456_bstack, rxsubrule463_pass958, -1, 0
  rxsubrule463_pass958:
    rx456_cstack = rx456_cur."!cursor_capture"($P11, "you_are_here")
    repr_get_attr_int rx456_pos, $P11, rx456_curclass, "$!pos"
    goto alt462_end956
  alt462_1959:
    add $I11, rx456_pos, 1
    gt $I11, rx456_eos, rx456_fail943
    substr $S10, rx456_tgt, rx456_pos, 1
    ne $S10, ucs4:"{", rx456_fail943
    add rx456_pos, 1
    repr_bind_attr_int rx456_cur, rx456_curclass, "$!pos", rx456_pos
    $P11 = rx456_cur."statementlist"()
    repr_get_attr_int $I11, $P11, rx456_curclass, "$!pos"
    lt $I11, 0, rx456_fail943
    nqp_rxmark rx456_bstack, rxsubrule464_pass960, -1, 0
  rxsubrule464_pass960:
    rx456_cstack = rx456_cur."!cursor_capture"($P11, "statementlist")
    repr_get_attr_int rx456_pos, $P11, rx456_curclass, "$!pos"
  alt465_0962:
    nqp_rxmark rx456_bstack, alt465_1963, rx456_pos, 0
    add $I11, rx456_pos, 1
    gt $I11, rx456_eos, rx456_fail943
    substr $S10, rx456_tgt, rx456_pos, 1
    ne $S10, ucs4:"}", rx456_fail943
    add rx456_pos, 1
    goto alt465_end961
  alt465_1963:
    repr_bind_attr_int rx456_cur, rx456_curclass, "$!pos", rx456_pos
    $P11 = rx456_cur."FAILGOAL"("'}'")
    repr_get_attr_int $I11, $P11, rx456_curclass, "$!pos"
    lt $I11, 0, rx456_fail943
    goto rxsubrule466_pass964
  rxsubrule466_back965:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx456_curclass, "$!pos"
    lt $I11, 0, rx456_fail943
  rxsubrule466_pass964:
    rx456_cstack = rx456_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule466_back965
    push rx456_bstack, $I11
    push rx456_bstack, 0
    push rx456_bstack, rx456_pos
    elements $I11, rx456_cstack
    push rx456_bstack, $I11
    repr_get_attr_int rx456_pos, $P11, rx456_curclass, "$!pos"
  alt465_end961:
  alt462_end956:
    repr_bind_attr_int rx456_cur, rx456_curclass, "$!pos", rx456_pos
    $P11 = rx456_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx456_curclass, "$!pos"
    lt $I11, 0, rx456_fail943
    rx456_cur."!cursor_pass"(rx456_pos, "blockoid", 'backtrack'=>1)
    .return (rx456_cur)
  rx456_restart942:
    repr_get_attr_obj rx456_cstack, rx456_cur, rx456_curclass, "$!cstack"
  rx456_fail943:
    unless rx456_bstack, rx456_done941
    pop $I19, rx456_bstack
    if_null rx456_cstack, rx456_cstack_done946
    unless rx456_cstack, rx456_cstack_done946
    dec $I19
    set $P11, rx456_cstack[$I19]
  rx456_cstack_done946:
    pop rx456_rep, rx456_bstack
    pop rx456_pos, rx456_bstack
    pop $I19, rx456_bstack
    lt rx456_pos, -1, rx456_done941
    lt rx456_pos, 0, rx456_fail943
    eq $I19, 0, rx456_fail943
    nqp_islist $I20, rx456_cstack
    unless $I20, rx456_jump944
    elements $I18, rx456_bstack
    le $I18, 0, rx456_cut945
    dec $I18
    set $I18, rx456_bstack[$I18]
  rx456_cut945:
    assign rx456_cstack, $I18
  rx456_jump944:
    jump $I19
  rx456_done941:
    rx456_cur."!cursor_fail"()
    .return (rx456_cur) 
.end
.HLL "nqp"
.namespace []
.sub "newpad" :subid("cuid_55_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 826
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx467_start
    .local string rx467_tgt
    .local int rx467_pos
    .local int rx467_off
    .local int rx467_eos
    .local int rx467_rep
    .local pmc rx467_cur
    .local pmc rx467_curclass
    .local pmc rx467_bstack
    .local pmc rx467_cstack
    rx467_start = self."!cursor_start_all"()
    set rx467_cur, rx467_start[0]
    set rx467_tgt, rx467_start[1]
    set rx467_pos, rx467_start[2]
    set rx467_curclass, rx467_start[3]
    set rx467_bstack, rx467_start[4]
    set $I19, rx467_start[5]
    store_lex unicode:"$\x{a2}", rx467_cur
    length rx467_eos, rx467_tgt
    eq $I19, 1, rx467_restart968
    gt rx467_pos, rx467_eos, rx467_fail969
    repr_get_attr_int $I11, self, rx467_curclass, "$!from"
    ne $I11, -1, rxscan468_done975
    goto rxscan468_scan974
  rxscan468_loop973:
    inc rx467_pos
    gt rx467_pos, rx467_eos, rx467_fail969
    repr_bind_attr_int rx467_cur, rx467_curclass, "$!from", rx467_pos
  rxscan468_scan974:
    nqp_rxmark rx467_bstack, rxscan468_loop973, rx467_pos, 0
  rxscan468_done975:
    rx467_cur."!cursor_pass"(rx467_pos, "newpad", 'backtrack'=>1)
    .return (rx467_cur)
  rx467_restart968:
    repr_get_attr_obj rx467_cstack, rx467_cur, rx467_curclass, "$!cstack"
  rx467_fail969:
    unless rx467_bstack, rx467_done967
    pop $I19, rx467_bstack
    if_null rx467_cstack, rx467_cstack_done972
    unless rx467_cstack, rx467_cstack_done972
    dec $I19
    set $P11, rx467_cstack[$I19]
  rx467_cstack_done972:
    pop rx467_rep, rx467_bstack
    pop rx467_pos, rx467_bstack
    pop $I19, rx467_bstack
    lt rx467_pos, -1, rx467_done967
    lt rx467_pos, 0, rx467_fail969
    eq $I19, 0, rx467_fail969
    nqp_islist $I20, rx467_cstack
    unless $I20, rx467_jump970
    elements $I18, rx467_bstack
    le $I18, 0, rx467_cut971
    dec $I18
    set $I18, rx467_bstack[$I18]
  rx467_cut971:
    assign rx467_cstack, $I18
  rx467_jump970:
    jump $I19
  rx467_done967:
    rx467_cur."!cursor_fail"()
    .return (rx467_cur) 
.end
.HLL "nqp"
.namespace []
.sub "outerctx" :subid("cuid_56_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 827
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx470_start
    .local string rx470_tgt
    .local int rx470_pos
    .local int rx470_off
    .local int rx470_eos
    .local int rx470_rep
    .local pmc rx470_cur
    .local pmc rx470_curclass
    .local pmc rx470_bstack
    .local pmc rx470_cstack
    rx470_start = self."!cursor_start_all"()
    set rx470_cur, rx470_start[0]
    set rx470_tgt, rx470_start[1]
    set rx470_pos, rx470_start[2]
    set rx470_curclass, rx470_start[3]
    set rx470_bstack, rx470_start[4]
    set $I19, rx470_start[5]
    store_lex unicode:"$\x{a2}", rx470_cur
    length rx470_eos, rx470_tgt
    eq $I19, 1, rx470_restart979
    gt rx470_pos, rx470_eos, rx470_fail980
    repr_get_attr_int $I11, self, rx470_curclass, "$!from"
    ne $I11, -1, rxscan471_done986
    goto rxscan471_scan985
  rxscan471_loop984:
    inc rx470_pos
    gt rx470_pos, rx470_eos, rx470_fail980
    repr_bind_attr_int rx470_cur, rx470_curclass, "$!from", rx470_pos
  rxscan471_scan985:
    nqp_rxmark rx470_bstack, rxscan471_loop984, rx470_pos, 0
  rxscan471_done986:
    rx470_cur."!cursor_pass"(rx470_pos, "outerctx", 'backtrack'=>1)
    .return (rx470_cur)
  rx470_restart979:
    repr_get_attr_obj rx470_cstack, rx470_cur, rx470_curclass, "$!cstack"
  rx470_fail980:
    unless rx470_bstack, rx470_done978
    pop $I19, rx470_bstack
    if_null rx470_cstack, rx470_cstack_done983
    unless rx470_cstack, rx470_cstack_done983
    dec $I19
    set $P11, rx470_cstack[$I19]
  rx470_cstack_done983:
    pop rx470_rep, rx470_bstack
    pop rx470_pos, rx470_bstack
    pop $I19, rx470_bstack
    lt rx470_pos, -1, rx470_done978
    lt rx470_pos, 0, rx470_fail980
    eq $I19, 0, rx470_fail980
    nqp_islist $I20, rx470_cstack
    unless $I20, rx470_jump981
    elements $I18, rx470_bstack
    le $I18, 0, rx470_cut982
    dec $I18
    set $I18, rx470_bstack[$I18]
  rx470_cut982:
    assign rx470_cstack, $I18
  rx470_jump981:
    jump $I19
  rx470_done978:
    rx470_cur."!cursor_fail"()
    .return (rx470_cur) 
.end
.HLL "nqp"
.namespace []
.sub "finishpad" :subid("cuid_57_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 828
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx473_start
    .local string rx473_tgt
    .local int rx473_pos
    .local int rx473_off
    .local int rx473_eos
    .local int rx473_rep
    .local pmc rx473_cur
    .local pmc rx473_curclass
    .local pmc rx473_bstack
    .local pmc rx473_cstack
    rx473_start = self."!cursor_start_all"()
    set rx473_cur, rx473_start[0]
    set rx473_tgt, rx473_start[1]
    set rx473_pos, rx473_start[2]
    set rx473_curclass, rx473_start[3]
    set rx473_bstack, rx473_start[4]
    set $I19, rx473_start[5]
    store_lex unicode:"$\x{a2}", rx473_cur
    length rx473_eos, rx473_tgt
    eq $I19, 1, rx473_restart990
    gt rx473_pos, rx473_eos, rx473_fail991
    repr_get_attr_int $I11, self, rx473_curclass, "$!from"
    ne $I11, -1, rxscan474_done997
    goto rxscan474_scan996
  rxscan474_loop995:
    inc rx473_pos
    gt rx473_pos, rx473_eos, rx473_fail991
    repr_bind_attr_int rx473_cur, rx473_curclass, "$!from", rx473_pos
  rxscan474_scan996:
    nqp_rxmark rx473_bstack, rxscan474_loop995, rx473_pos, 0
  rxscan474_done997:
    rx473_cur."!cursor_pass"(rx473_pos, "finishpad", 'backtrack'=>1)
    .return (rx473_cur)
  rx473_restart990:
    repr_get_attr_obj rx473_cstack, rx473_cur, rx473_curclass, "$!cstack"
  rx473_fail991:
    unless rx473_bstack, rx473_done989
    pop $I19, rx473_bstack
    if_null rx473_cstack, rx473_cstack_done994
    unless rx473_cstack, rx473_cstack_done994
    dec $I19
    set $P11, rx473_cstack[$I19]
  rx473_cstack_done994:
    pop rx473_rep, rx473_bstack
    pop rx473_pos, rx473_bstack
    pop $I19, rx473_bstack
    lt rx473_pos, -1, rx473_done989
    lt rx473_pos, 0, rx473_fail991
    eq $I19, 0, rx473_fail991
    nqp_islist $I20, rx473_cstack
    unless $I20, rx473_jump992
    elements $I18, rx473_bstack
    le $I18, 0, rx473_cut993
    dec $I18
    set $I18, rx473_bstack[$I18]
  rx473_cut993:
    assign rx473_cstack, $I18
  rx473_jump992:
    jump $I19
  rx473_done989:
    rx473_cur."!cursor_fail"()
    .return (rx473_cur) 
.end
.HLL "nqp"
.namespace []
.sub "you_are_here" :subid("cuid_58_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 829
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx476_start
    .local string rx476_tgt
    .local int rx476_pos
    .local int rx476_off
    .local int rx476_eos
    .local int rx476_rep
    .local pmc rx476_cur
    .local pmc rx476_curclass
    .local pmc rx476_bstack
    .local pmc rx476_cstack
    rx476_start = self."!cursor_start_all"()
    set rx476_cur, rx476_start[0]
    set rx476_tgt, rx476_start[1]
    set rx476_pos, rx476_start[2]
    set rx476_curclass, rx476_start[3]
    set rx476_bstack, rx476_start[4]
    set $I19, rx476_start[5]
    store_lex unicode:"$\x{a2}", rx476_cur
    length rx476_eos, rx476_tgt
    eq $I19, 1, rx476_restart1001
    gt rx476_pos, rx476_eos, rx476_fail1002
    repr_get_attr_int $I11, self, rx476_curclass, "$!from"
    ne $I11, -1, rxscan477_done1008
    goto rxscan477_scan1007
  rxscan477_loop1006:
    inc rx476_pos
    gt rx476_pos, rx476_eos, rx476_fail1002
    repr_bind_attr_int rx476_cur, rx476_curclass, "$!from", rx476_pos
  rxscan477_scan1007:
    nqp_rxmark rx476_bstack, rxscan477_loop1006, rx476_pos, 0
  rxscan477_done1008:
    rx476_cur."!cursor_pass"(rx476_pos, "you_are_here", 'backtrack'=>1)
    .return (rx476_cur)
  rx476_restart1001:
    repr_get_attr_obj rx476_cstack, rx476_cur, rx476_curclass, "$!cstack"
  rx476_fail1002:
    unless rx476_bstack, rx476_done1000
    pop $I19, rx476_bstack
    if_null rx476_cstack, rx476_cstack_done1005
    unless rx476_cstack, rx476_cstack_done1005
    dec $I19
    set $P11, rx476_cstack[$I19]
  rx476_cstack_done1005:
    pop rx476_rep, rx476_bstack
    pop rx476_pos, rx476_bstack
    pop $I19, rx476_bstack
    lt rx476_pos, -1, rx476_done1000
    lt rx476_pos, 0, rx476_fail1002
    eq $I19, 0, rx476_fail1002
    nqp_islist $I20, rx476_cstack
    unless $I20, rx476_jump1003
    elements $I18, rx476_bstack
    le $I18, 0, rx476_cut1004
    dec $I18
    set $I18, rx476_bstack[$I18]
  rx476_cut1004:
    assign rx476_cstack, $I18
  rx476_jump1003:
    jump $I19
  rx476_done1000:
    rx476_cur."!cursor_fail"()
    .return (rx476_cur) 
.end
.HLL "nqp"
.namespace []
.sub "terminator" :subid("cuid_59_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 831
    .param pmc self 
    $P5001 = self."!protoregex"("terminator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "terminator:sym<;>" :subid("cuid_60_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 833
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx479_start
    .local string rx479_tgt
    .local int rx479_pos
    .local int rx479_off
    .local int rx479_eos
    .local int rx479_rep
    .local pmc rx479_cur
    .local pmc rx479_curclass
    .local pmc rx479_bstack
    .local pmc rx479_cstack
    rx479_start = self."!cursor_start_all"()
    set rx479_cur, rx479_start[0]
    set rx479_tgt, rx479_start[1]
    set rx479_pos, rx479_start[2]
    set rx479_curclass, rx479_start[3]
    set rx479_bstack, rx479_start[4]
    set $I19, rx479_start[5]
    store_lex unicode:"$\x{a2}", rx479_cur
    length rx479_eos, rx479_tgt
    eq $I19, 1, rx479_restart1012
    gt rx479_pos, rx479_eos, rx479_fail1013
    repr_get_attr_int $I11, self, rx479_curclass, "$!from"
    ne $I11, -1, rxscan480_done1019
    goto rxscan480_scan1018
  rxscan480_loop1017:
    inc rx479_pos
    gt rx479_pos, rx479_eos, rx479_fail1013
    repr_bind_attr_int rx479_cur, rx479_curclass, "$!from", rx479_pos
  rxscan480_scan1018:
    nqp_rxmark rx479_bstack, rxscan480_loop1017, rx479_pos, 0
  rxscan480_done1019:
    ge rx479_pos, rx479_eos, rx479_fail1013
    substr $S11, rx479_tgt, rx479_pos, 1
    index $I11, ucs4:";", $S11
    lt $I11, 0, rx479_fail1013
    rx479_cur."!cursor_pass"(rx479_pos, "terminator:sym<;>", 'backtrack'=>1)
    .return (rx479_cur)
  rx479_restart1012:
    repr_get_attr_obj rx479_cstack, rx479_cur, rx479_curclass, "$!cstack"
  rx479_fail1013:
    unless rx479_bstack, rx479_done1011
    pop $I19, rx479_bstack
    if_null rx479_cstack, rx479_cstack_done1016
    unless rx479_cstack, rx479_cstack_done1016
    dec $I19
    set $P11, rx479_cstack[$I19]
  rx479_cstack_done1016:
    pop rx479_rep, rx479_bstack
    pop rx479_pos, rx479_bstack
    pop $I19, rx479_bstack
    lt rx479_pos, -1, rx479_done1011
    lt rx479_pos, 0, rx479_fail1013
    eq $I19, 0, rx479_fail1013
    nqp_islist $I20, rx479_cstack
    unless $I20, rx479_jump1014
    elements $I18, rx479_bstack
    le $I18, 0, rx479_cut1015
    dec $I18
    set $I18, rx479_bstack[$I18]
  rx479_cut1015:
    assign rx479_cstack, $I18
  rx479_jump1014:
    jump $I19
  rx479_done1011:
    rx479_cur."!cursor_fail"()
    .return (rx479_cur) 
.end
.HLL "nqp"
.namespace []
.sub "terminator:sym<}>" :subid("cuid_61_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 834
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx481_start
    .local string rx481_tgt
    .local int rx481_pos
    .local int rx481_off
    .local int rx481_eos
    .local int rx481_rep
    .local pmc rx481_cur
    .local pmc rx481_curclass
    .local pmc rx481_bstack
    .local pmc rx481_cstack
    rx481_start = self."!cursor_start_all"()
    set rx481_cur, rx481_start[0]
    set rx481_tgt, rx481_start[1]
    set rx481_pos, rx481_start[2]
    set rx481_curclass, rx481_start[3]
    set rx481_bstack, rx481_start[4]
    set $I19, rx481_start[5]
    store_lex unicode:"$\x{a2}", rx481_cur
    length rx481_eos, rx481_tgt
    eq $I19, 1, rx481_restart1022
    gt rx481_pos, rx481_eos, rx481_fail1023
    repr_get_attr_int $I11, self, rx481_curclass, "$!from"
    ne $I11, -1, rxscan482_done1029
    goto rxscan482_scan1028
  rxscan482_loop1027:
    inc rx481_pos
    gt rx481_pos, rx481_eos, rx481_fail1023
    repr_bind_attr_int rx481_cur, rx481_curclass, "$!from", rx481_pos
  rxscan482_scan1028:
    nqp_rxmark rx481_bstack, rxscan482_loop1027, rx481_pos, 0
  rxscan482_done1029:
    ge rx481_pos, rx481_eos, rx481_fail1023
    substr $S11, rx481_tgt, rx481_pos, 1
    index $I11, ucs4:"}", $S11
    lt $I11, 0, rx481_fail1023
    rx481_cur."!cursor_pass"(rx481_pos, "terminator:sym<}>", 'backtrack'=>1)
    .return (rx481_cur)
  rx481_restart1022:
    repr_get_attr_obj rx481_cstack, rx481_cur, rx481_curclass, "$!cstack"
  rx481_fail1023:
    unless rx481_bstack, rx481_done1021
    pop $I19, rx481_bstack
    if_null rx481_cstack, rx481_cstack_done1026
    unless rx481_cstack, rx481_cstack_done1026
    dec $I19
    set $P11, rx481_cstack[$I19]
  rx481_cstack_done1026:
    pop rx481_rep, rx481_bstack
    pop rx481_pos, rx481_bstack
    pop $I19, rx481_bstack
    lt rx481_pos, -1, rx481_done1021
    lt rx481_pos, 0, rx481_fail1023
    eq $I19, 0, rx481_fail1023
    nqp_islist $I20, rx481_cstack
    unless $I20, rx481_jump1024
    elements $I18, rx481_bstack
    le $I18, 0, rx481_cut1025
    dec $I18
    set $I18, rx481_bstack[$I18]
  rx481_cut1025:
    assign rx481_cstack, $I18
  rx481_jump1024:
    jump $I19
  rx481_done1021:
    rx481_cur."!cursor_fail"()
    .return (rx481_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control" :subid("cuid_62_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 838
    .param pmc self 
    $P5001 = self."!protoregex"("statement_control")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<use>" :subid("cuid_63_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 840
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx483_start
    .local string rx483_tgt
    .local int rx483_pos
    .local int rx483_off
    .local int rx483_eos
    .local int rx483_rep
    .local pmc rx483_cur
    .local pmc rx483_curclass
    .local pmc rx483_bstack
    .local pmc rx483_cstack
    rx483_start = self."!cursor_start_all"()
    set rx483_cur, rx483_start[0]
    set rx483_tgt, rx483_start[1]
    set rx483_pos, rx483_start[2]
    set rx483_curclass, rx483_start[3]
    set rx483_bstack, rx483_start[4]
    set $I19, rx483_start[5]
    store_lex unicode:"$\x{a2}", rx483_cur
    length rx483_eos, rx483_tgt
    eq $I19, 1, rx483_restart1032
    gt rx483_pos, rx483_eos, rx483_fail1033
    repr_get_attr_int $I11, self, rx483_curclass, "$!from"
    ne $I11, -1, rxscan484_done1039
    goto rxscan484_scan1038
  rxscan484_loop1037:
    inc rx483_pos
    gt rx483_pos, rx483_eos, rx483_fail1033
    repr_bind_attr_int rx483_cur, rx483_curclass, "$!from", rx483_pos
  rxscan484_scan1038:
    nqp_rxmark rx483_bstack, rxscan484_loop1037, rx483_pos, 0
  rxscan484_done1039:
    nqp_rxmark rx483_bstack, rxcap485_fail1041, rx483_pos, 0
    add $I11, rx483_pos, 3
    gt $I11, rx483_eos, rx483_fail1033
    substr $S10, rx483_tgt, rx483_pos, 3
    ne $S10, ucs4:"use", rx483_fail1033
    add rx483_pos, 3
    nqp_rxpeek $I19, rx483_bstack, rxcap485_fail1041
    inc $I19
    set $I11, rx483_bstack[$I19]
    repr_bind_attr_int rx483_cur, rx483_curclass, "$!pos", rx483_pos
    $P11 = rx483_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx483_pos)
    rx483_cstack = rx483_cur."!cursor_capture"($P11, "sym")
    goto rxcap485_done1040
  rxcap485_fail1041:
    goto rx483_fail1033
  rxcap485_done1040:
    ge rx483_pos, rx483_eos, rx483_fail1033
    is_cclass $I11, .CCLASS_WHITESPACE, rx483_tgt, rx483_pos
    unless $I11, rx483_fail1033
    add rx483_pos, 1
    repr_bind_attr_int rx483_cur, rx483_curclass, "$!pos", rx483_pos
    $P11 = rx483_cur."ws"()
    repr_get_attr_int $I11, $P11, rx483_curclass, "$!pos"
    lt $I11, 0, rx483_fail1033
    repr_get_attr_int rx483_pos, $P11, rx483_curclass, "$!pos"
    repr_bind_attr_int rx483_cur, rx483_curclass, "$!pos", rx483_pos
    $P11 = rx483_cur."name"()
    repr_get_attr_int $I11, $P11, rx483_curclass, "$!pos"
    lt $I11, 0, rx483_fail1033
    nqp_rxmark rx483_bstack, rxsubrule487_pass1043, -1, 0
  rxsubrule487_pass1043:
    rx483_cstack = rx483_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx483_pos, $P11, rx483_curclass, "$!pos"
    repr_bind_attr_int rx483_cur, rx483_curclass, "$!pos", rx483_pos
    $P11 = rx483_cur."ws"()
    repr_get_attr_int $I11, $P11, rx483_curclass, "$!pos"
    lt $I11, 0, rx483_fail1033
    repr_get_attr_int rx483_pos, $P11, rx483_curclass, "$!pos"
    rx483_cur."!cursor_pass"(rx483_pos, "statement_control:sym<use>", 'backtrack'=>1)
    .return (rx483_cur)
  rx483_restart1032:
    repr_get_attr_obj rx483_cstack, rx483_cur, rx483_curclass, "$!cstack"
  rx483_fail1033:
    unless rx483_bstack, rx483_done1031
    pop $I19, rx483_bstack
    if_null rx483_cstack, rx483_cstack_done1036
    unless rx483_cstack, rx483_cstack_done1036
    dec $I19
    set $P11, rx483_cstack[$I19]
  rx483_cstack_done1036:
    pop rx483_rep, rx483_bstack
    pop rx483_pos, rx483_bstack
    pop $I19, rx483_bstack
    lt rx483_pos, -1, rx483_done1031
    lt rx483_pos, 0, rx483_fail1033
    eq $I19, 0, rx483_fail1033
    nqp_islist $I20, rx483_cstack
    unless $I20, rx483_jump1034
    elements $I18, rx483_bstack
    le $I18, 0, rx483_cut1035
    dec $I18
    set $I18, rx483_bstack[$I18]
  rx483_cut1035:
    assign rx483_cstack, $I18
  rx483_jump1034:
    jump $I19
  rx483_done1031:
    rx483_cur."!cursor_fail"()
    .return (rx483_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<if>" :subid("cuid_64_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 844
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx489_start
    .local string rx489_tgt
    .local int rx489_pos
    .local int rx489_off
    .local int rx489_eos
    .local int rx489_rep
    .local pmc rx489_cur
    .local pmc rx489_curclass
    .local pmc rx489_bstack
    .local pmc rx489_cstack
    rx489_start = self."!cursor_start_all"()
    set rx489_cur, rx489_start[0]
    set rx489_tgt, rx489_start[1]
    set rx489_pos, rx489_start[2]
    set rx489_curclass, rx489_start[3]
    set rx489_bstack, rx489_start[4]
    set $I19, rx489_start[5]
    store_lex unicode:"$\x{a2}", rx489_cur
    length rx489_eos, rx489_tgt
    eq $I19, 1, rx489_restart1047
    gt rx489_pos, rx489_eos, rx489_fail1048
    repr_get_attr_int $I11, self, rx489_curclass, "$!from"
    ne $I11, -1, rxscan490_done1054
    goto rxscan490_scan1053
  rxscan490_loop1052:
    inc rx489_pos
    gt rx489_pos, rx489_eos, rx489_fail1048
    repr_bind_attr_int rx489_cur, rx489_curclass, "$!from", rx489_pos
  rxscan490_scan1053:
    nqp_rxmark rx489_bstack, rxscan490_loop1052, rx489_pos, 0
  rxscan490_done1054:
    nqp_rxmark rx489_bstack, rxcap491_fail1056, rx489_pos, 0
    add $I11, rx489_pos, 2
    gt $I11, rx489_eos, rx489_fail1048
    substr $S10, rx489_tgt, rx489_pos, 2
    ne $S10, ucs4:"if", rx489_fail1048
    add rx489_pos, 2
    nqp_rxpeek $I19, rx489_bstack, rxcap491_fail1056
    inc $I19
    set $I11, rx489_bstack[$I19]
    repr_bind_attr_int rx489_cur, rx489_curclass, "$!pos", rx489_pos
    $P11 = rx489_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx489_pos)
    rx489_cstack = rx489_cur."!cursor_capture"($P11, "sym")
    goto rxcap491_done1055
  rxcap491_fail1056:
    goto rx489_fail1048
  rxcap491_done1055:
    ge rx489_pos, rx489_eos, rx489_fail1048
    is_cclass $I11, .CCLASS_WHITESPACE, rx489_tgt, rx489_pos
    unless $I11, rx489_fail1048
    add rx489_pos, 1
    repr_bind_attr_int rx489_cur, rx489_curclass, "$!pos", rx489_pos
    $P11 = rx489_cur."ws"()
    repr_get_attr_int $I11, $P11, rx489_curclass, "$!pos"
    lt $I11, 0, rx489_fail1048
    repr_get_attr_int rx489_pos, $P11, rx489_curclass, "$!pos"
    repr_bind_attr_int rx489_cur, rx489_curclass, "$!pos", rx489_pos
    $P11 = rx489_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx489_curclass, "$!pos"
    lt $I11, 0, rx489_fail1048
    nqp_rxmark rx489_bstack, rxsubrule493_pass1058, -1, 0
  rxsubrule493_pass1058:
    rx489_cstack = rx489_cur."!cursor_capture"($P11, "xblock")
    repr_get_attr_int rx489_pos, $P11, rx489_curclass, "$!pos"
    repr_bind_attr_int rx489_cur, rx489_curclass, "$!pos", rx489_pos
    $P11 = rx489_cur."ws"()
    repr_get_attr_int $I11, $P11, rx489_curclass, "$!pos"
    lt $I11, 0, rx489_fail1048
    repr_get_attr_int rx489_pos, $P11, rx489_curclass, "$!pos"
    nqp_rxmark rx489_bstack, rxquantr495_done1061, rx489_pos, 0
  rxquantr495_loop1060:
    repr_bind_attr_int rx489_cur, rx489_curclass, "$!pos", rx489_pos
    $P11 = rx489_cur."ws"()
    repr_get_attr_int $I11, $P11, rx489_curclass, "$!pos"
    lt $I11, 0, rx489_fail1048
    repr_get_attr_int rx489_pos, $P11, rx489_curclass, "$!pos"
    add $I11, rx489_pos, 5
    gt $I11, rx489_eos, rx489_fail1048
    substr $S10, rx489_tgt, rx489_pos, 5
    ne $S10, ucs4:"elsif", rx489_fail1048
    add rx489_pos, 5
    ge rx489_pos, rx489_eos, rx489_fail1048
    is_cclass $I11, .CCLASS_WHITESPACE, rx489_tgt, rx489_pos
    unless $I11, rx489_fail1048
    add rx489_pos, 1
    repr_bind_attr_int rx489_cur, rx489_curclass, "$!pos", rx489_pos
    $P11 = rx489_cur."ws"()
    repr_get_attr_int $I11, $P11, rx489_curclass, "$!pos"
    lt $I11, 0, rx489_fail1048
    repr_get_attr_int rx489_pos, $P11, rx489_curclass, "$!pos"
    repr_bind_attr_int rx489_cur, rx489_curclass, "$!pos", rx489_pos
    $P11 = rx489_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx489_curclass, "$!pos"
    lt $I11, 0, rx489_fail1048
    nqp_rxmark rx489_bstack, rxsubrule498_pass1064, -1, 0
  rxsubrule498_pass1064:
    rx489_cstack = rx489_cur."!cursor_capture"($P11, "xblock")
    repr_get_attr_int rx489_pos, $P11, rx489_curclass, "$!pos"
    repr_bind_attr_int rx489_cur, rx489_curclass, "$!pos", rx489_pos
    $P11 = rx489_cur."ws"()
    repr_get_attr_int $I11, $P11, rx489_curclass, "$!pos"
    lt $I11, 0, rx489_fail1048
    repr_get_attr_int rx489_pos, $P11, rx489_curclass, "$!pos"
    nqp_rxpeek $I19, rx489_bstack, rxquantr495_done1061
    inc $I19
    inc $I19
    set rx489_rep, rx489_bstack[$I19]
    nqp_rxcommit rx489_bstack, rxquantr495_done1061
    inc rx489_rep
    nqp_rxmark rx489_bstack, rxquantr495_done1061, rx489_pos, rx489_rep
    goto rxquantr495_loop1060
  rxquantr495_done1061:
    repr_bind_attr_int rx489_cur, rx489_curclass, "$!pos", rx489_pos
    $P11 = rx489_cur."ws"()
    repr_get_attr_int $I11, $P11, rx489_curclass, "$!pos"
    lt $I11, 0, rx489_fail1048
    repr_get_attr_int rx489_pos, $P11, rx489_curclass, "$!pos"
    nqp_rxmark rx489_bstack, rxquantr501_done1068, rx489_pos, 0
  rxquantr501_loop1067:
    repr_bind_attr_int rx489_cur, rx489_curclass, "$!pos", rx489_pos
    $P11 = rx489_cur."ws"()
    repr_get_attr_int $I11, $P11, rx489_curclass, "$!pos"
    lt $I11, 0, rx489_fail1048
    repr_get_attr_int rx489_pos, $P11, rx489_curclass, "$!pos"
    add $I11, rx489_pos, 4
    gt $I11, rx489_eos, rx489_fail1048
    substr $S10, rx489_tgt, rx489_pos, 4
    ne $S10, ucs4:"else", rx489_fail1048
    add rx489_pos, 4
    ge rx489_pos, rx489_eos, rx489_fail1048
    is_cclass $I11, .CCLASS_WHITESPACE, rx489_tgt, rx489_pos
    unless $I11, rx489_fail1048
    add rx489_pos, 1
    repr_bind_attr_int rx489_cur, rx489_curclass, "$!pos", rx489_pos
    $P11 = rx489_cur."ws"()
    repr_get_attr_int $I11, $P11, rx489_curclass, "$!pos"
    lt $I11, 0, rx489_fail1048
    repr_get_attr_int rx489_pos, $P11, rx489_curclass, "$!pos"
    repr_bind_attr_int rx489_cur, rx489_curclass, "$!pos", rx489_pos
    $P11 = rx489_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx489_curclass, "$!pos"
    lt $I11, 0, rx489_fail1048
    nqp_rxmark rx489_bstack, rxsubrule504_pass1071, -1, 0
  rxsubrule504_pass1071:
    rx489_cstack = rx489_cur."!cursor_capture"($P11, "else")
    repr_get_attr_int rx489_pos, $P11, rx489_curclass, "$!pos"
    repr_bind_attr_int rx489_cur, rx489_curclass, "$!pos", rx489_pos
    $P11 = rx489_cur."ws"()
    repr_get_attr_int $I11, $P11, rx489_curclass, "$!pos"
    lt $I11, 0, rx489_fail1048
    repr_get_attr_int rx489_pos, $P11, rx489_curclass, "$!pos"
    nqp_rxpeek $I19, rx489_bstack, rxquantr501_done1068
    inc $I19
    inc $I19
    set rx489_rep, rx489_bstack[$I19]
    nqp_rxcommit rx489_bstack, rxquantr501_done1068
    inc rx489_rep
  rxquantr501_done1068:
    repr_bind_attr_int rx489_cur, rx489_curclass, "$!pos", rx489_pos
    $P11 = rx489_cur."ws"()
    repr_get_attr_int $I11, $P11, rx489_curclass, "$!pos"
    lt $I11, 0, rx489_fail1048
    repr_get_attr_int rx489_pos, $P11, rx489_curclass, "$!pos"
    rx489_cur."!cursor_pass"(rx489_pos, "statement_control:sym<if>", 'backtrack'=>1)
    .return (rx489_cur)
  rx489_restart1047:
    repr_get_attr_obj rx489_cstack, rx489_cur, rx489_curclass, "$!cstack"
  rx489_fail1048:
    unless rx489_bstack, rx489_done1046
    pop $I19, rx489_bstack
    if_null rx489_cstack, rx489_cstack_done1051
    unless rx489_cstack, rx489_cstack_done1051
    dec $I19
    set $P11, rx489_cstack[$I19]
  rx489_cstack_done1051:
    pop rx489_rep, rx489_bstack
    pop rx489_pos, rx489_bstack
    pop $I19, rx489_bstack
    lt rx489_pos, -1, rx489_done1046
    lt rx489_pos, 0, rx489_fail1048
    eq $I19, 0, rx489_fail1048
    nqp_islist $I20, rx489_cstack
    unless $I20, rx489_jump1049
    elements $I18, rx489_bstack
    le $I18, 0, rx489_cut1050
    dec $I18
    set $I18, rx489_bstack[$I18]
  rx489_cut1050:
    assign rx489_cstack, $I18
  rx489_jump1049:
    jump $I19
  rx489_done1046:
    rx489_cur."!cursor_fail"()
    .return (rx489_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<unless>" :subid("cuid_65_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 851
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_66_1365879995.227' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx507_start
    .local string rx507_tgt
    .local int rx507_pos
    .local int rx507_off
    .local int rx507_eos
    .local int rx507_rep
    .local pmc rx507_cur
    .local pmc rx507_curclass
    .local pmc rx507_bstack
    .local pmc rx507_cstack
    rx507_start = self."!cursor_start_all"()
    set rx507_cur, rx507_start[0]
    set rx507_tgt, rx507_start[1]
    set rx507_pos, rx507_start[2]
    set rx507_curclass, rx507_start[3]
    set rx507_bstack, rx507_start[4]
    set $I19, rx507_start[5]
    store_lex unicode:"$\x{a2}", rx507_cur
    length rx507_eos, rx507_tgt
    eq $I19, 1, rx507_restart1076
    gt rx507_pos, rx507_eos, rx507_fail1077
    repr_get_attr_int $I11, self, rx507_curclass, "$!from"
    ne $I11, -1, rxscan508_done1083
    goto rxscan508_scan1082
  rxscan508_loop1081:
    inc rx507_pos
    gt rx507_pos, rx507_eos, rx507_fail1077
    repr_bind_attr_int rx507_cur, rx507_curclass, "$!from", rx507_pos
  rxscan508_scan1082:
    nqp_rxmark rx507_bstack, rxscan508_loop1081, rx507_pos, 0
  rxscan508_done1083:
    nqp_rxmark rx507_bstack, rxcap509_fail1085, rx507_pos, 0
    add $I11, rx507_pos, 6
    gt $I11, rx507_eos, rx507_fail1077
    substr $S10, rx507_tgt, rx507_pos, 6
    ne $S10, ucs4:"unless", rx507_fail1077
    add rx507_pos, 6
    nqp_rxpeek $I19, rx507_bstack, rxcap509_fail1085
    inc $I19
    set $I11, rx507_bstack[$I19]
    repr_bind_attr_int rx507_cur, rx507_curclass, "$!pos", rx507_pos
    $P11 = rx507_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx507_pos)
    rx507_cstack = rx507_cur."!cursor_capture"($P11, "sym")
    goto rxcap509_done1084
  rxcap509_fail1085:
    goto rx507_fail1077
  rxcap509_done1084:
    ge rx507_pos, rx507_eos, rx507_fail1077
    is_cclass $I11, .CCLASS_WHITESPACE, rx507_tgt, rx507_pos
    unless $I11, rx507_fail1077
    add rx507_pos, 1
    repr_bind_attr_int rx507_cur, rx507_curclass, "$!pos", rx507_pos
    $P11 = rx507_cur."ws"()
    repr_get_attr_int $I11, $P11, rx507_curclass, "$!pos"
    lt $I11, 0, rx507_fail1077
    repr_get_attr_int rx507_pos, $P11, rx507_curclass, "$!pos"
    repr_bind_attr_int rx507_cur, rx507_curclass, "$!pos", rx507_pos
    $P11 = rx507_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx507_curclass, "$!pos"
    lt $I11, 0, rx507_fail1077
    nqp_rxmark rx507_bstack, rxsubrule511_pass1087, -1, 0
  rxsubrule511_pass1087:
    rx507_cstack = rx507_cur."!cursor_capture"($P11, "xblock")
    repr_get_attr_int rx507_pos, $P11, rx507_curclass, "$!pos"
    repr_bind_attr_int rx507_cur, rx507_curclass, "$!pos", rx507_pos
    $P11 = rx507_cur."ws"()
    repr_get_attr_int $I11, $P11, rx507_curclass, "$!pos"
    lt $I11, 0, rx507_fail1077
    repr_get_attr_int rx507_pos, $P11, rx507_curclass, "$!pos"
  alt513_01090:
    nqp_rxmark rx507_bstack, alt513_11103, rx507_pos, 0
    repr_bind_attr_int rx507_cur, rx507_curclass, "$!pos", rx507_pos
    $P11 = rx507_cur."ws"()
    repr_get_attr_int $I11, $P11, rx507_curclass, "$!pos"
    lt $I11, 0, rx507_fail1077
    repr_get_attr_int rx507_pos, $P11, rx507_curclass, "$!pos"
    .const 'Sub' $P5001 = 'cuid_66_1365879995.227' 
    capture_lex $P5001
    repr_bind_attr_int rx507_cur, rx507_curclass, "$!pos", rx507_pos
    $P11 = rx507_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx507_curclass, "$!pos"
    ge $I11, 0, rx507_fail1077
    repr_bind_attr_int rx507_cur, rx507_curclass, "$!pos", rx507_pos
    $P11 = rx507_cur."ws"()
    repr_get_attr_int $I11, $P11, rx507_curclass, "$!pos"
    lt $I11, 0, rx507_fail1077
    repr_get_attr_int rx507_pos, $P11, rx507_curclass, "$!pos"
    goto alt513_end1089
  alt513_11103:
    repr_bind_attr_int rx507_cur, rx507_curclass, "$!pos", rx507_pos
    $P11 = rx507_cur."ws"()
    repr_get_attr_int $I11, $P11, rx507_curclass, "$!pos"
    lt $I11, 0, rx507_fail1077
    repr_get_attr_int rx507_pos, $P11, rx507_curclass, "$!pos"
    repr_bind_attr_int rx507_cur, rx507_curclass, "$!pos", rx507_pos
    $P11 = rx507_cur."panic"("unless does not take \"else\", please rewrite using \"if\"")
    repr_get_attr_int $I11, $P11, rx507_curclass, "$!pos"
    lt $I11, 0, rx507_fail1077
    repr_get_attr_int rx507_pos, $P11, rx507_curclass, "$!pos"
    repr_bind_attr_int rx507_cur, rx507_curclass, "$!pos", rx507_pos
    $P11 = rx507_cur."ws"()
    repr_get_attr_int $I11, $P11, rx507_curclass, "$!pos"
    lt $I11, 0, rx507_fail1077
    repr_get_attr_int rx507_pos, $P11, rx507_curclass, "$!pos"
  alt513_end1089:
    repr_bind_attr_int rx507_cur, rx507_curclass, "$!pos", rx507_pos
    $P11 = rx507_cur."ws"()
    repr_get_attr_int $I11, $P11, rx507_curclass, "$!pos"
    lt $I11, 0, rx507_fail1077
    repr_get_attr_int rx507_pos, $P11, rx507_curclass, "$!pos"
    rx507_cur."!cursor_pass"(rx507_pos, "statement_control:sym<unless>", 'backtrack'=>1)
    .return (rx507_cur)
  rx507_restart1076:
    repr_get_attr_obj rx507_cstack, rx507_cur, rx507_curclass, "$!cstack"
  rx507_fail1077:
    unless rx507_bstack, rx507_done1075
    pop $I19, rx507_bstack
    if_null rx507_cstack, rx507_cstack_done1080
    unless rx507_cstack, rx507_cstack_done1080
    dec $I19
    set $P11, rx507_cstack[$I19]
  rx507_cstack_done1080:
    pop rx507_rep, rx507_bstack
    pop rx507_pos, rx507_bstack
    pop $I19, rx507_bstack
    lt rx507_pos, -1, rx507_done1075
    lt rx507_pos, 0, rx507_fail1077
    eq $I19, 0, rx507_fail1077
    nqp_islist $I20, rx507_cstack
    unless $I20, rx507_jump1078
    elements $I18, rx507_bstack
    le $I18, 0, rx507_cut1079
    dec $I18
    set $I18, rx507_bstack[$I18]
  rx507_cut1079:
    assign rx507_cstack, $I18
  rx507_jump1078:
    jump $I19
  rx507_done1075:
    rx507_cur."!cursor_fail"()
    .return (rx507_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_66_1365879995.227") :anon :lex :outer("cuid_65_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx515_start
    .local string rx515_tgt
    .local int rx515_pos
    .local int rx515_off
    .local int rx515_eos
    .local int rx515_rep
    .local pmc rx515_cur
    .local pmc rx515_curclass
    .local pmc rx515_bstack
    .local pmc rx515_cstack
    rx515_start = self."!cursor_start_all"()
    set rx515_cur, rx515_start[0]
    set rx515_tgt, rx515_start[1]
    set rx515_pos, rx515_start[2]
    set rx515_curclass, rx515_start[3]
    set rx515_bstack, rx515_start[4]
    set $I19, rx515_start[5]
    store_lex unicode:"$\x{a2}", rx515_cur
    length rx515_eos, rx515_tgt
    eq $I19, 1, rx515_restart1094
    gt rx515_pos, rx515_eos, rx515_fail1095
    repr_get_attr_int $I11, self, rx515_curclass, "$!from"
    ne $I11, -1, rxscan516_done1101
    goto rxscan516_scan1100
  rxscan516_loop1099:
    inc rx515_pos
    gt rx515_pos, rx515_eos, rx515_fail1095
    repr_bind_attr_int rx515_cur, rx515_curclass, "$!from", rx515_pos
  rxscan516_scan1100:
    nqp_rxmark rx515_bstack, rxscan516_loop1099, rx515_pos, 0
  rxscan516_done1101:
    add $I11, rx515_pos, 4
    gt $I11, rx515_eos, rx515_fail1095
    substr $S10, rx515_tgt, rx515_pos, 4
    ne $S10, ucs4:"else", rx515_fail1095
    add rx515_pos, 4
    rx515_cur."!cursor_pass"(rx515_pos, 'backtrack'=>1)
    .return (rx515_cur)
  rx515_restart1094:
    repr_get_attr_obj rx515_cstack, rx515_cur, rx515_curclass, "$!cstack"
  rx515_fail1095:
    unless rx515_bstack, rx515_done1093
    pop $I19, rx515_bstack
    if_null rx515_cstack, rx515_cstack_done1098
    unless rx515_cstack, rx515_cstack_done1098
    dec $I19
    set $P11, rx515_cstack[$I19]
  rx515_cstack_done1098:
    pop rx515_rep, rx515_bstack
    pop rx515_pos, rx515_bstack
    pop $I19, rx515_bstack
    lt rx515_pos, -1, rx515_done1093
    lt rx515_pos, 0, rx515_fail1095
    eq $I19, 0, rx515_fail1095
    nqp_islist $I20, rx515_cstack
    unless $I20, rx515_jump1096
    elements $I18, rx515_bstack
    le $I18, 0, rx515_cut1097
    dec $I18
    set $I18, rx515_bstack[$I18]
  rx515_cut1097:
    assign rx515_cstack, $I18
  rx515_jump1096:
    jump $I19
  rx515_done1093:
    rx515_cur."!cursor_fail"()
    .return (rx515_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<while>" :subid("cuid_67_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 857
    .param pmc _lex_param_0 
    .lex "$*CONTROL_USED", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx522_start
    .local string rx522_tgt
    .local int rx522_pos
    .local int rx522_off
    .local int rx522_eos
    .local int rx522_rep
    .local pmc rx522_cur
    .local pmc rx522_curclass
    .local pmc rx522_bstack
    .local pmc rx522_cstack
    rx522_start = self."!cursor_start_all"()
    set rx522_cur, rx522_start[0]
    set rx522_tgt, rx522_start[1]
    set rx522_pos, rx522_start[2]
    set rx522_curclass, rx522_start[3]
    set rx522_bstack, rx522_start[4]
    set $I19, rx522_start[5]
    store_lex unicode:"$\x{a2}", rx522_cur
    length rx522_eos, rx522_tgt
    eq $I19, 1, rx522_restart1110
    gt rx522_pos, rx522_eos, rx522_fail1111
    repr_get_attr_int $I11, self, rx522_curclass, "$!from"
    ne $I11, -1, rxscan523_done1117
    goto rxscan523_scan1116
  rxscan523_loop1115:
    inc rx522_pos
    gt rx522_pos, rx522_eos, rx522_fail1111
    repr_bind_attr_int rx522_cur, rx522_curclass, "$!from", rx522_pos
  rxscan523_scan1116:
    nqp_rxmark rx522_bstack, rxscan523_loop1115, rx522_pos, 0
  rxscan523_done1117:
    repr_bind_attr_int rx522_cur, rx522_curclass, "$!pos", rx522_pos
    store_lex unicode:"$\x{a2}", rx522_cur
    box $P5002, 0
    set $P101, $P5002
    nqp_rxmark rx522_bstack, rxcap524_fail1119, rx522_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt525_01121
    nqp_push_label $P11, alt525_11122
    nqp_rxmark rx522_bstack, alt525_end1120, -1, 0
    rx522_cur."!alt"(rx522_pos, "alt_nfa__12_1365879996.995", $P11)
    goto rx522_fail1111
  alt525_01121:
    add $I11, rx522_pos, 5
    gt $I11, rx522_eos, rx522_fail1111
    substr $S10, rx522_tgt, rx522_pos, 5
    ne $S10, ucs4:"while", rx522_fail1111
    add rx522_pos, 5
    goto alt525_end1120
  alt525_11122:
    add $I11, rx522_pos, 5
    gt $I11, rx522_eos, rx522_fail1111
    substr $S10, rx522_tgt, rx522_pos, 5
    ne $S10, ucs4:"until", rx522_fail1111
    add rx522_pos, 5
    goto alt525_end1120
  alt525_end1120:
    nqp_rxcommit rx522_bstack, alt525_end1120
    nqp_rxpeek $I19, rx522_bstack, rxcap524_fail1119
    inc $I19
    set $I11, rx522_bstack[$I19]
    repr_bind_attr_int rx522_cur, rx522_curclass, "$!pos", rx522_pos
    $P11 = rx522_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx522_pos)
    rx522_cstack = rx522_cur."!cursor_capture"($P11, "sym")
    goto rxcap524_done1118
  rxcap524_fail1119:
    goto rx522_fail1111
  rxcap524_done1118:
    ge rx522_pos, rx522_eos, rx522_fail1111
    is_cclass $I11, .CCLASS_WHITESPACE, rx522_tgt, rx522_pos
    unless $I11, rx522_fail1111
    add rx522_pos, 1
    repr_bind_attr_int rx522_cur, rx522_curclass, "$!pos", rx522_pos
    $P11 = rx522_cur."ws"()
    repr_get_attr_int $I11, $P11, rx522_curclass, "$!pos"
    lt $I11, 0, rx522_fail1111
    repr_get_attr_int rx522_pos, $P11, rx522_curclass, "$!pos"
    repr_bind_attr_int rx522_cur, rx522_curclass, "$!pos", rx522_pos
    $P11 = rx522_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx522_curclass, "$!pos"
    lt $I11, 0, rx522_fail1111
    nqp_rxmark rx522_bstack, rxsubrule527_pass1124, -1, 0
  rxsubrule527_pass1124:
    rx522_cstack = rx522_cur."!cursor_capture"($P11, "xblock")
    repr_get_attr_int rx522_pos, $P11, rx522_curclass, "$!pos"
    repr_bind_attr_int rx522_cur, rx522_curclass, "$!pos", rx522_pos
    $P11 = rx522_cur."ws"()
    repr_get_attr_int $I11, $P11, rx522_curclass, "$!pos"
    lt $I11, 0, rx522_fail1111
    repr_get_attr_int rx522_pos, $P11, rx522_curclass, "$!pos"
    rx522_cur."!cursor_pass"(rx522_pos, "statement_control:sym<while>", 'backtrack'=>1)
    .return (rx522_cur)
  rx522_restart1110:
    repr_get_attr_obj rx522_cstack, rx522_cur, rx522_curclass, "$!cstack"
  rx522_fail1111:
    unless rx522_bstack, rx522_done1109
    pop $I19, rx522_bstack
    if_null rx522_cstack, rx522_cstack_done1114
    unless rx522_cstack, rx522_cstack_done1114
    dec $I19
    set $P11, rx522_cstack[$I19]
  rx522_cstack_done1114:
    pop rx522_rep, rx522_bstack
    pop rx522_pos, rx522_bstack
    pop $I19, rx522_bstack
    lt rx522_pos, -1, rx522_done1109
    lt rx522_pos, 0, rx522_fail1111
    eq $I19, 0, rx522_fail1111
    nqp_islist $I20, rx522_cstack
    unless $I20, rx522_jump1112
    elements $I18, rx522_bstack
    le $I18, 0, rx522_cut1113
    dec $I18
    set $I18, rx522_bstack[$I18]
  rx522_cut1113:
    assign rx522_cstack, $I18
  rx522_jump1112:
    jump $I19
  rx522_done1109:
    rx522_cur."!cursor_fail"()
    .return (rx522_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<repeat>" :subid("cuid_68_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 863
    .param pmc _lex_param_0 
    .lex "$*CONTROL_USED", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx529_start
    .local string rx529_tgt
    .local int rx529_pos
    .local int rx529_off
    .local int rx529_eos
    .local int rx529_rep
    .local pmc rx529_cur
    .local pmc rx529_curclass
    .local pmc rx529_bstack
    .local pmc rx529_cstack
    rx529_start = self."!cursor_start_all"()
    set rx529_cur, rx529_start[0]
    set rx529_tgt, rx529_start[1]
    set rx529_pos, rx529_start[2]
    set rx529_curclass, rx529_start[3]
    set rx529_bstack, rx529_start[4]
    set $I19, rx529_start[5]
    store_lex unicode:"$\x{a2}", rx529_cur
    length rx529_eos, rx529_tgt
    eq $I19, 1, rx529_restart1128
    gt rx529_pos, rx529_eos, rx529_fail1129
    repr_get_attr_int $I11, self, rx529_curclass, "$!from"
    ne $I11, -1, rxscan530_done1135
    goto rxscan530_scan1134
  rxscan530_loop1133:
    inc rx529_pos
    gt rx529_pos, rx529_eos, rx529_fail1129
    repr_bind_attr_int rx529_cur, rx529_curclass, "$!from", rx529_pos
  rxscan530_scan1134:
    nqp_rxmark rx529_bstack, rxscan530_loop1133, rx529_pos, 0
  rxscan530_done1135:
    repr_bind_attr_int rx529_cur, rx529_curclass, "$!pos", rx529_pos
    store_lex unicode:"$\x{a2}", rx529_cur
    box $P5002, 0
    set $P101, $P5002
    nqp_rxmark rx529_bstack, rxcap531_fail1137, rx529_pos, 0
    add $I11, rx529_pos, 6
    gt $I11, rx529_eos, rx529_fail1129
    substr $S10, rx529_tgt, rx529_pos, 6
    ne $S10, ucs4:"repeat", rx529_fail1129
    add rx529_pos, 6
    nqp_rxpeek $I19, rx529_bstack, rxcap531_fail1137
    inc $I19
    set $I11, rx529_bstack[$I19]
    repr_bind_attr_int rx529_cur, rx529_curclass, "$!pos", rx529_pos
    $P11 = rx529_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx529_pos)
    rx529_cstack = rx529_cur."!cursor_capture"($P11, "sym")
    goto rxcap531_done1136
  rxcap531_fail1137:
    goto rx529_fail1129
  rxcap531_done1136:
    ge rx529_pos, rx529_eos, rx529_fail1129
    is_cclass $I11, .CCLASS_WHITESPACE, rx529_tgt, rx529_pos
    unless $I11, rx529_fail1129
    add rx529_pos, 1
    repr_bind_attr_int rx529_cur, rx529_curclass, "$!pos", rx529_pos
    $P11 = rx529_cur."ws"()
    repr_get_attr_int $I11, $P11, rx529_curclass, "$!pos"
    lt $I11, 0, rx529_fail1129
    repr_get_attr_int rx529_pos, $P11, rx529_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt533_01140
    nqp_push_label $P11, alt533_11150
    nqp_rxmark rx529_bstack, alt533_end1139, -1, 0
    rx529_cur."!alt"(rx529_pos, "alt_nfa__15_1365879997.018", $P11)
    goto rx529_fail1129
  alt533_01140:
    repr_bind_attr_int rx529_cur, rx529_curclass, "$!pos", rx529_pos
    $P11 = rx529_cur."ws"()
    repr_get_attr_int $I11, $P11, rx529_curclass, "$!pos"
    lt $I11, 0, rx529_fail1129
    repr_get_attr_int rx529_pos, $P11, rx529_curclass, "$!pos"
    nqp_rxmark rx529_bstack, rxcap535_fail1143, rx529_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt536_01145
    nqp_push_label $P11, alt536_11146
    nqp_rxmark rx529_bstack, alt536_end1144, -1, 0
    rx529_cur."!alt"(rx529_pos, "alt_nfa__13_1365879997.018", $P11)
    goto rx529_fail1129
  alt536_01145:
    add $I11, rx529_pos, 5
    gt $I11, rx529_eos, rx529_fail1129
    substr $S10, rx529_tgt, rx529_pos, 5
    ne $S10, ucs4:"while", rx529_fail1129
    add rx529_pos, 5
    goto alt536_end1144
  alt536_11146:
    add $I11, rx529_pos, 5
    gt $I11, rx529_eos, rx529_fail1129
    substr $S10, rx529_tgt, rx529_pos, 5
    ne $S10, ucs4:"until", rx529_fail1129
    add rx529_pos, 5
    goto alt536_end1144
  alt536_end1144:
    nqp_rxcommit rx529_bstack, alt536_end1144
    nqp_rxpeek $I19, rx529_bstack, rxcap535_fail1143
    inc $I19
    set $I11, rx529_bstack[$I19]
    repr_bind_attr_int rx529_cur, rx529_curclass, "$!pos", rx529_pos
    $P11 = rx529_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx529_pos)
    rx529_cstack = rx529_cur."!cursor_capture"($P11, "wu")
    goto rxcap535_done1142
  rxcap535_fail1143:
    goto rx529_fail1129
  rxcap535_done1142:
    ge rx529_pos, rx529_eos, rx529_fail1129
    is_cclass $I11, .CCLASS_WHITESPACE, rx529_tgt, rx529_pos
    unless $I11, rx529_fail1129
    add rx529_pos, 1
    repr_bind_attr_int rx529_cur, rx529_curclass, "$!pos", rx529_pos
    $P11 = rx529_cur."ws"()
    repr_get_attr_int $I11, $P11, rx529_curclass, "$!pos"
    lt $I11, 0, rx529_fail1129
    repr_get_attr_int rx529_pos, $P11, rx529_curclass, "$!pos"
    repr_bind_attr_int rx529_cur, rx529_curclass, "$!pos", rx529_pos
    $P11 = rx529_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx529_curclass, "$!pos"
    lt $I11, 0, rx529_fail1129
    nqp_rxmark rx529_bstack, rxsubrule538_pass1148, -1, 0
  rxsubrule538_pass1148:
    rx529_cstack = rx529_cur."!cursor_capture"($P11, "xblock")
    repr_get_attr_int rx529_pos, $P11, rx529_curclass, "$!pos"
    repr_bind_attr_int rx529_cur, rx529_curclass, "$!pos", rx529_pos
    $P11 = rx529_cur."ws"()
    repr_get_attr_int $I11, $P11, rx529_curclass, "$!pos"
    lt $I11, 0, rx529_fail1129
    repr_get_attr_int rx529_pos, $P11, rx529_curclass, "$!pos"
    goto alt533_end1139
  alt533_11150:
    repr_bind_attr_int rx529_cur, rx529_curclass, "$!pos", rx529_pos
    $P11 = rx529_cur."ws"()
    repr_get_attr_int $I11, $P11, rx529_curclass, "$!pos"
    lt $I11, 0, rx529_fail1129
    repr_get_attr_int rx529_pos, $P11, rx529_curclass, "$!pos"
    repr_bind_attr_int rx529_cur, rx529_curclass, "$!pos", rx529_pos
    $P11 = rx529_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx529_curclass, "$!pos"
    lt $I11, 0, rx529_fail1129
    nqp_rxmark rx529_bstack, rxsubrule541_pass1152, -1, 0
  rxsubrule541_pass1152:
    rx529_cstack = rx529_cur."!cursor_capture"($P11, "pblock")
    repr_get_attr_int rx529_pos, $P11, rx529_curclass, "$!pos"
    repr_bind_attr_int rx529_cur, rx529_curclass, "$!pos", rx529_pos
    $P11 = rx529_cur."ws"()
    repr_get_attr_int $I11, $P11, rx529_curclass, "$!pos"
    lt $I11, 0, rx529_fail1129
    repr_get_attr_int rx529_pos, $P11, rx529_curclass, "$!pos"
    nqp_rxmark rx529_bstack, rxcap543_fail1155, rx529_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt544_01157
    nqp_push_label $P11, alt544_11158
    nqp_rxmark rx529_bstack, alt544_end1156, -1, 0
    rx529_cur."!alt"(rx529_pos, "alt_nfa__14_1365879997.018", $P11)
    goto rx529_fail1129
  alt544_01157:
    add $I11, rx529_pos, 5
    gt $I11, rx529_eos, rx529_fail1129
    substr $S10, rx529_tgt, rx529_pos, 5
    ne $S10, ucs4:"while", rx529_fail1129
    add rx529_pos, 5
    goto alt544_end1156
  alt544_11158:
    add $I11, rx529_pos, 5
    gt $I11, rx529_eos, rx529_fail1129
    substr $S10, rx529_tgt, rx529_pos, 5
    ne $S10, ucs4:"until", rx529_fail1129
    add rx529_pos, 5
    goto alt544_end1156
  alt544_end1156:
    nqp_rxcommit rx529_bstack, alt544_end1156
    nqp_rxpeek $I19, rx529_bstack, rxcap543_fail1155
    inc $I19
    set $I11, rx529_bstack[$I19]
    repr_bind_attr_int rx529_cur, rx529_curclass, "$!pos", rx529_pos
    $P11 = rx529_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx529_pos)
    rx529_cstack = rx529_cur."!cursor_capture"($P11, "wu")
    goto rxcap543_done1154
  rxcap543_fail1155:
    goto rx529_fail1129
  rxcap543_done1154:
    ge rx529_pos, rx529_eos, rx529_fail1129
    is_cclass $I11, .CCLASS_WHITESPACE, rx529_tgt, rx529_pos
    unless $I11, rx529_fail1129
    add rx529_pos, 1
    repr_bind_attr_int rx529_cur, rx529_curclass, "$!pos", rx529_pos
    $P11 = rx529_cur."ws"()
    repr_get_attr_int $I11, $P11, rx529_curclass, "$!pos"
    lt $I11, 0, rx529_fail1129
    repr_get_attr_int rx529_pos, $P11, rx529_curclass, "$!pos"
    repr_bind_attr_int rx529_cur, rx529_curclass, "$!pos", rx529_pos
    $P11 = rx529_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx529_curclass, "$!pos"
    lt $I11, 0, rx529_fail1129
    nqp_rxmark rx529_bstack, rxsubrule546_pass1160, -1, 0
  rxsubrule546_pass1160:
    rx529_cstack = rx529_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx529_pos, $P11, rx529_curclass, "$!pos"
    repr_bind_attr_int rx529_cur, rx529_curclass, "$!pos", rx529_pos
    $P11 = rx529_cur."ws"()
    repr_get_attr_int $I11, $P11, rx529_curclass, "$!pos"
    lt $I11, 0, rx529_fail1129
    repr_get_attr_int rx529_pos, $P11, rx529_curclass, "$!pos"
    goto alt533_end1139
  alt533_end1139:
    nqp_rxcommit rx529_bstack, alt533_end1139
    repr_bind_attr_int rx529_cur, rx529_curclass, "$!pos", rx529_pos
    $P11 = rx529_cur."ws"()
    repr_get_attr_int $I11, $P11, rx529_curclass, "$!pos"
    lt $I11, 0, rx529_fail1129
    repr_get_attr_int rx529_pos, $P11, rx529_curclass, "$!pos"
    rx529_cur."!cursor_pass"(rx529_pos, "statement_control:sym<repeat>", 'backtrack'=>1)
    .return (rx529_cur)
  rx529_restart1128:
    repr_get_attr_obj rx529_cstack, rx529_cur, rx529_curclass, "$!cstack"
  rx529_fail1129:
    unless rx529_bstack, rx529_done1127
    pop $I19, rx529_bstack
    if_null rx529_cstack, rx529_cstack_done1132
    unless rx529_cstack, rx529_cstack_done1132
    dec $I19
    set $P11, rx529_cstack[$I19]
  rx529_cstack_done1132:
    pop rx529_rep, rx529_bstack
    pop rx529_pos, rx529_bstack
    pop $I19, rx529_bstack
    lt rx529_pos, -1, rx529_done1127
    lt rx529_pos, 0, rx529_fail1129
    eq $I19, 0, rx529_fail1129
    nqp_islist $I20, rx529_cstack
    unless $I20, rx529_jump1130
    elements $I18, rx529_bstack
    le $I18, 0, rx529_cut1131
    dec $I18
    set $I18, rx529_bstack[$I18]
  rx529_cut1131:
    assign rx529_cstack, $I18
  rx529_jump1130:
    jump $I19
  rx529_done1127:
    rx529_cur."!cursor_fail"()
    .return (rx529_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<for>" :subid("cuid_69_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 872
    .param pmc _lex_param_0 
    .lex "$*CONTROL_USED", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx549_start
    .local string rx549_tgt
    .local int rx549_pos
    .local int rx549_off
    .local int rx549_eos
    .local int rx549_rep
    .local pmc rx549_cur
    .local pmc rx549_curclass
    .local pmc rx549_bstack
    .local pmc rx549_cstack
    rx549_start = self."!cursor_start_all"()
    set rx549_cur, rx549_start[0]
    set rx549_tgt, rx549_start[1]
    set rx549_pos, rx549_start[2]
    set rx549_curclass, rx549_start[3]
    set rx549_bstack, rx549_start[4]
    set $I19, rx549_start[5]
    store_lex unicode:"$\x{a2}", rx549_cur
    length rx549_eos, rx549_tgt
    eq $I19, 1, rx549_restart1165
    gt rx549_pos, rx549_eos, rx549_fail1166
    repr_get_attr_int $I11, self, rx549_curclass, "$!from"
    ne $I11, -1, rxscan550_done1172
    goto rxscan550_scan1171
  rxscan550_loop1170:
    inc rx549_pos
    gt rx549_pos, rx549_eos, rx549_fail1166
    repr_bind_attr_int rx549_cur, rx549_curclass, "$!from", rx549_pos
  rxscan550_scan1171:
    nqp_rxmark rx549_bstack, rxscan550_loop1170, rx549_pos, 0
  rxscan550_done1172:
    repr_bind_attr_int rx549_cur, rx549_curclass, "$!pos", rx549_pos
    store_lex unicode:"$\x{a2}", rx549_cur
    box $P5002, 0
    set $P101, $P5002
    nqp_rxmark rx549_bstack, rxcap551_fail1174, rx549_pos, 0
    add $I11, rx549_pos, 3
    gt $I11, rx549_eos, rx549_fail1166
    substr $S10, rx549_tgt, rx549_pos, 3
    ne $S10, ucs4:"for", rx549_fail1166
    add rx549_pos, 3
    nqp_rxpeek $I19, rx549_bstack, rxcap551_fail1174
    inc $I19
    set $I11, rx549_bstack[$I19]
    repr_bind_attr_int rx549_cur, rx549_curclass, "$!pos", rx549_pos
    $P11 = rx549_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx549_pos)
    rx549_cstack = rx549_cur."!cursor_capture"($P11, "sym")
    goto rxcap551_done1173
  rxcap551_fail1174:
    goto rx549_fail1166
  rxcap551_done1173:
    ge rx549_pos, rx549_eos, rx549_fail1166
    is_cclass $I11, .CCLASS_WHITESPACE, rx549_tgt, rx549_pos
    unless $I11, rx549_fail1166
    add rx549_pos, 1
    repr_bind_attr_int rx549_cur, rx549_curclass, "$!pos", rx549_pos
    $P11 = rx549_cur."ws"()
    repr_get_attr_int $I11, $P11, rx549_curclass, "$!pos"
    lt $I11, 0, rx549_fail1166
    repr_get_attr_int rx549_pos, $P11, rx549_curclass, "$!pos"
    repr_bind_attr_int rx549_cur, rx549_curclass, "$!pos", rx549_pos
    $P11 = rx549_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx549_curclass, "$!pos"
    lt $I11, 0, rx549_fail1166
    nqp_rxmark rx549_bstack, rxsubrule553_pass1176, -1, 0
  rxsubrule553_pass1176:
    rx549_cstack = rx549_cur."!cursor_capture"($P11, "xblock")
    repr_get_attr_int rx549_pos, $P11, rx549_curclass, "$!pos"
    repr_bind_attr_int rx549_cur, rx549_curclass, "$!pos", rx549_pos
    $P11 = rx549_cur."ws"()
    repr_get_attr_int $I11, $P11, rx549_curclass, "$!pos"
    lt $I11, 0, rx549_fail1166
    repr_get_attr_int rx549_pos, $P11, rx549_curclass, "$!pos"
    rx549_cur."!cursor_pass"(rx549_pos, "statement_control:sym<for>", 'backtrack'=>1)
    .return (rx549_cur)
  rx549_restart1165:
    repr_get_attr_obj rx549_cstack, rx549_cur, rx549_curclass, "$!cstack"
  rx549_fail1166:
    unless rx549_bstack, rx549_done1164
    pop $I19, rx549_bstack
    if_null rx549_cstack, rx549_cstack_done1169
    unless rx549_cstack, rx549_cstack_done1169
    dec $I19
    set $P11, rx549_cstack[$I19]
  rx549_cstack_done1169:
    pop rx549_rep, rx549_bstack
    pop rx549_pos, rx549_bstack
    pop $I19, rx549_bstack
    lt rx549_pos, -1, rx549_done1164
    lt rx549_pos, 0, rx549_fail1166
    eq $I19, 0, rx549_fail1166
    nqp_islist $I20, rx549_cstack
    unless $I20, rx549_jump1167
    elements $I18, rx549_bstack
    le $I18, 0, rx549_cut1168
    dec $I18
    set $I18, rx549_bstack[$I18]
  rx549_cut1168:
    assign rx549_cstack, $I18
  rx549_jump1167:
    jump $I19
  rx549_done1164:
    rx549_cur."!cursor_fail"()
    .return (rx549_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<CATCH>" :subid("cuid_70_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 878
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx555_start
    .local string rx555_tgt
    .local int rx555_pos
    .local int rx555_off
    .local int rx555_eos
    .local int rx555_rep
    .local pmc rx555_cur
    .local pmc rx555_curclass
    .local pmc rx555_bstack
    .local pmc rx555_cstack
    rx555_start = self."!cursor_start_all"()
    set rx555_cur, rx555_start[0]
    set rx555_tgt, rx555_start[1]
    set rx555_pos, rx555_start[2]
    set rx555_curclass, rx555_start[3]
    set rx555_bstack, rx555_start[4]
    set $I19, rx555_start[5]
    store_lex unicode:"$\x{a2}", rx555_cur
    length rx555_eos, rx555_tgt
    eq $I19, 1, rx555_restart1180
    gt rx555_pos, rx555_eos, rx555_fail1181
    repr_get_attr_int $I11, self, rx555_curclass, "$!from"
    ne $I11, -1, rxscan556_done1187
    goto rxscan556_scan1186
  rxscan556_loop1185:
    inc rx555_pos
    gt rx555_pos, rx555_eos, rx555_fail1181
    repr_bind_attr_int rx555_cur, rx555_curclass, "$!from", rx555_pos
  rxscan556_scan1186:
    nqp_rxmark rx555_bstack, rxscan556_loop1185, rx555_pos, 0
  rxscan556_done1187:
    nqp_rxmark rx555_bstack, rxcap557_fail1189, rx555_pos, 0
    add $I11, rx555_pos, 5
    gt $I11, rx555_eos, rx555_fail1181
    substr $S10, rx555_tgt, rx555_pos, 5
    ne $S10, ucs4:"CATCH", rx555_fail1181
    add rx555_pos, 5
    nqp_rxpeek $I19, rx555_bstack, rxcap557_fail1189
    inc $I19
    set $I11, rx555_bstack[$I19]
    repr_bind_attr_int rx555_cur, rx555_curclass, "$!pos", rx555_pos
    $P11 = rx555_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx555_pos)
    rx555_cstack = rx555_cur."!cursor_capture"($P11, "sym")
    goto rxcap557_done1188
  rxcap557_fail1189:
    goto rx555_fail1181
  rxcap557_done1188:
    ge rx555_pos, rx555_eos, rx555_fail1181
    is_cclass $I11, .CCLASS_WHITESPACE, rx555_tgt, rx555_pos
    unless $I11, rx555_fail1181
    add rx555_pos, 1
    repr_bind_attr_int rx555_cur, rx555_curclass, "$!pos", rx555_pos
    $P11 = rx555_cur."ws"()
    repr_get_attr_int $I11, $P11, rx555_curclass, "$!pos"
    lt $I11, 0, rx555_fail1181
    repr_get_attr_int rx555_pos, $P11, rx555_curclass, "$!pos"
    repr_bind_attr_int rx555_cur, rx555_curclass, "$!pos", rx555_pos
    $P11 = rx555_cur."block"()
    repr_get_attr_int $I11, $P11, rx555_curclass, "$!pos"
    lt $I11, 0, rx555_fail1181
    nqp_rxmark rx555_bstack, rxsubrule559_pass1191, -1, 0
  rxsubrule559_pass1191:
    rx555_cstack = rx555_cur."!cursor_capture"($P11, "block")
    repr_get_attr_int rx555_pos, $P11, rx555_curclass, "$!pos"
    repr_bind_attr_int rx555_cur, rx555_curclass, "$!pos", rx555_pos
    $P11 = rx555_cur."ws"()
    repr_get_attr_int $I11, $P11, rx555_curclass, "$!pos"
    lt $I11, 0, rx555_fail1181
    repr_get_attr_int rx555_pos, $P11, rx555_curclass, "$!pos"
    rx555_cur."!cursor_pass"(rx555_pos, "statement_control:sym<CATCH>", 'backtrack'=>1)
    .return (rx555_cur)
  rx555_restart1180:
    repr_get_attr_obj rx555_cstack, rx555_cur, rx555_curclass, "$!cstack"
  rx555_fail1181:
    unless rx555_bstack, rx555_done1179
    pop $I19, rx555_bstack
    if_null rx555_cstack, rx555_cstack_done1184
    unless rx555_cstack, rx555_cstack_done1184
    dec $I19
    set $P11, rx555_cstack[$I19]
  rx555_cstack_done1184:
    pop rx555_rep, rx555_bstack
    pop rx555_pos, rx555_bstack
    pop $I19, rx555_bstack
    lt rx555_pos, -1, rx555_done1179
    lt rx555_pos, 0, rx555_fail1181
    eq $I19, 0, rx555_fail1181
    nqp_islist $I20, rx555_cstack
    unless $I20, rx555_jump1182
    elements $I18, rx555_bstack
    le $I18, 0, rx555_cut1183
    dec $I18
    set $I18, rx555_bstack[$I18]
  rx555_cut1183:
    assign rx555_cstack, $I18
  rx555_jump1182:
    jump $I19
  rx555_done1179:
    rx555_cur."!cursor_fail"()
    .return (rx555_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<CONTROL>" :subid("cuid_71_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 883
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx561_start
    .local string rx561_tgt
    .local int rx561_pos
    .local int rx561_off
    .local int rx561_eos
    .local int rx561_rep
    .local pmc rx561_cur
    .local pmc rx561_curclass
    .local pmc rx561_bstack
    .local pmc rx561_cstack
    rx561_start = self."!cursor_start_all"()
    set rx561_cur, rx561_start[0]
    set rx561_tgt, rx561_start[1]
    set rx561_pos, rx561_start[2]
    set rx561_curclass, rx561_start[3]
    set rx561_bstack, rx561_start[4]
    set $I19, rx561_start[5]
    store_lex unicode:"$\x{a2}", rx561_cur
    length rx561_eos, rx561_tgt
    eq $I19, 1, rx561_restart1195
    gt rx561_pos, rx561_eos, rx561_fail1196
    repr_get_attr_int $I11, self, rx561_curclass, "$!from"
    ne $I11, -1, rxscan562_done1202
    goto rxscan562_scan1201
  rxscan562_loop1200:
    inc rx561_pos
    gt rx561_pos, rx561_eos, rx561_fail1196
    repr_bind_attr_int rx561_cur, rx561_curclass, "$!from", rx561_pos
  rxscan562_scan1201:
    nqp_rxmark rx561_bstack, rxscan562_loop1200, rx561_pos, 0
  rxscan562_done1202:
    nqp_rxmark rx561_bstack, rxcap563_fail1204, rx561_pos, 0
    add $I11, rx561_pos, 7
    gt $I11, rx561_eos, rx561_fail1196
    substr $S10, rx561_tgt, rx561_pos, 7
    ne $S10, ucs4:"CONTROL", rx561_fail1196
    add rx561_pos, 7
    nqp_rxpeek $I19, rx561_bstack, rxcap563_fail1204
    inc $I19
    set $I11, rx561_bstack[$I19]
    repr_bind_attr_int rx561_cur, rx561_curclass, "$!pos", rx561_pos
    $P11 = rx561_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx561_pos)
    rx561_cstack = rx561_cur."!cursor_capture"($P11, "sym")
    goto rxcap563_done1203
  rxcap563_fail1204:
    goto rx561_fail1196
  rxcap563_done1203:
    ge rx561_pos, rx561_eos, rx561_fail1196
    is_cclass $I11, .CCLASS_WHITESPACE, rx561_tgt, rx561_pos
    unless $I11, rx561_fail1196
    add rx561_pos, 1
    repr_bind_attr_int rx561_cur, rx561_curclass, "$!pos", rx561_pos
    $P11 = rx561_cur."ws"()
    repr_get_attr_int $I11, $P11, rx561_curclass, "$!pos"
    lt $I11, 0, rx561_fail1196
    repr_get_attr_int rx561_pos, $P11, rx561_curclass, "$!pos"
    repr_bind_attr_int rx561_cur, rx561_curclass, "$!pos", rx561_pos
    $P11 = rx561_cur."block"()
    repr_get_attr_int $I11, $P11, rx561_curclass, "$!pos"
    lt $I11, 0, rx561_fail1196
    nqp_rxmark rx561_bstack, rxsubrule565_pass1206, -1, 0
  rxsubrule565_pass1206:
    rx561_cstack = rx561_cur."!cursor_capture"($P11, "block")
    repr_get_attr_int rx561_pos, $P11, rx561_curclass, "$!pos"
    repr_bind_attr_int rx561_cur, rx561_curclass, "$!pos", rx561_pos
    $P11 = rx561_cur."ws"()
    repr_get_attr_int $I11, $P11, rx561_curclass, "$!pos"
    lt $I11, 0, rx561_fail1196
    repr_get_attr_int rx561_pos, $P11, rx561_curclass, "$!pos"
    rx561_cur."!cursor_pass"(rx561_pos, "statement_control:sym<CONTROL>", 'backtrack'=>1)
    .return (rx561_cur)
  rx561_restart1195:
    repr_get_attr_obj rx561_cstack, rx561_cur, rx561_curclass, "$!cstack"
  rx561_fail1196:
    unless rx561_bstack, rx561_done1194
    pop $I19, rx561_bstack
    if_null rx561_cstack, rx561_cstack_done1199
    unless rx561_cstack, rx561_cstack_done1199
    dec $I19
    set $P11, rx561_cstack[$I19]
  rx561_cstack_done1199:
    pop rx561_rep, rx561_bstack
    pop rx561_pos, rx561_bstack
    pop $I19, rx561_bstack
    lt rx561_pos, -1, rx561_done1194
    lt rx561_pos, 0, rx561_fail1196
    eq $I19, 0, rx561_fail1196
    nqp_islist $I20, rx561_cstack
    unless $I20, rx561_jump1197
    elements $I18, rx561_bstack
    le $I18, 0, rx561_cut1198
    dec $I18
    set $I18, rx561_bstack[$I18]
  rx561_cut1198:
    assign rx561_cstack, $I18
  rx561_jump1197:
    jump $I19
  rx561_done1194:
    rx561_cur."!cursor_fail"()
    .return (rx561_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix" :subid("cuid_72_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 888
    .param pmc self 
    $P5001 = self."!protoregex"("statement_prefix")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<BEGIN>" :subid("cuid_73_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 889
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx567_start
    .local string rx567_tgt
    .local int rx567_pos
    .local int rx567_off
    .local int rx567_eos
    .local int rx567_rep
    .local pmc rx567_cur
    .local pmc rx567_curclass
    .local pmc rx567_bstack
    .local pmc rx567_cstack
    rx567_start = self."!cursor_start_all"()
    set rx567_cur, rx567_start[0]
    set rx567_tgt, rx567_start[1]
    set rx567_pos, rx567_start[2]
    set rx567_curclass, rx567_start[3]
    set rx567_bstack, rx567_start[4]
    set $I19, rx567_start[5]
    store_lex unicode:"$\x{a2}", rx567_cur
    length rx567_eos, rx567_tgt
    eq $I19, 1, rx567_restart1210
    gt rx567_pos, rx567_eos, rx567_fail1211
    repr_get_attr_int $I11, self, rx567_curclass, "$!from"
    ne $I11, -1, rxscan568_done1217
    goto rxscan568_scan1216
  rxscan568_loop1215:
    inc rx567_pos
    gt rx567_pos, rx567_eos, rx567_fail1211
    repr_bind_attr_int rx567_cur, rx567_curclass, "$!from", rx567_pos
  rxscan568_scan1216:
    nqp_rxmark rx567_bstack, rxscan568_loop1215, rx567_pos, 0
  rxscan568_done1217:
    nqp_rxmark rx567_bstack, rxcap569_fail1219, rx567_pos, 0
    add $I11, rx567_pos, 5
    gt $I11, rx567_eos, rx567_fail1211
    substr $S10, rx567_tgt, rx567_pos, 5
    ne $S10, ucs4:"BEGIN", rx567_fail1211
    add rx567_pos, 5
    nqp_rxpeek $I19, rx567_bstack, rxcap569_fail1219
    inc $I19
    set $I11, rx567_bstack[$I19]
    repr_bind_attr_int rx567_cur, rx567_curclass, "$!pos", rx567_pos
    $P11 = rx567_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx567_pos)
    rx567_cstack = rx567_cur."!cursor_capture"($P11, "sym")
    goto rxcap569_done1218
  rxcap569_fail1219:
    goto rx567_fail1211
  rxcap569_done1218:
    repr_bind_attr_int rx567_cur, rx567_curclass, "$!pos", rx567_pos
    $P11 = rx567_cur."blorst"()
    repr_get_attr_int $I11, $P11, rx567_curclass, "$!pos"
    lt $I11, 0, rx567_fail1211
    nqp_rxmark rx567_bstack, rxsubrule570_pass1220, -1, 0
  rxsubrule570_pass1220:
    rx567_cstack = rx567_cur."!cursor_capture"($P11, "blorst")
    repr_get_attr_int rx567_pos, $P11, rx567_curclass, "$!pos"
    rx567_cur."!cursor_pass"(rx567_pos, "statement_prefix:sym<BEGIN>", 'backtrack'=>1)
    .return (rx567_cur)
  rx567_restart1210:
    repr_get_attr_obj rx567_cstack, rx567_cur, rx567_curclass, "$!cstack"
  rx567_fail1211:
    unless rx567_bstack, rx567_done1209
    pop $I19, rx567_bstack
    if_null rx567_cstack, rx567_cstack_done1214
    unless rx567_cstack, rx567_cstack_done1214
    dec $I19
    set $P11, rx567_cstack[$I19]
  rx567_cstack_done1214:
    pop rx567_rep, rx567_bstack
    pop rx567_pos, rx567_bstack
    pop $I19, rx567_bstack
    lt rx567_pos, -1, rx567_done1209
    lt rx567_pos, 0, rx567_fail1211
    eq $I19, 0, rx567_fail1211
    nqp_islist $I20, rx567_cstack
    unless $I20, rx567_jump1212
    elements $I18, rx567_bstack
    le $I18, 0, rx567_cut1213
    dec $I18
    set $I18, rx567_bstack[$I18]
  rx567_cut1213:
    assign rx567_cstack, $I18
  rx567_jump1212:
    jump $I19
  rx567_done1209:
    rx567_cur."!cursor_fail"()
    .return (rx567_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<INIT>" :subid("cuid_74_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 890
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx571_start
    .local string rx571_tgt
    .local int rx571_pos
    .local int rx571_off
    .local int rx571_eos
    .local int rx571_rep
    .local pmc rx571_cur
    .local pmc rx571_curclass
    .local pmc rx571_bstack
    .local pmc rx571_cstack
    rx571_start = self."!cursor_start_all"()
    set rx571_cur, rx571_start[0]
    set rx571_tgt, rx571_start[1]
    set rx571_pos, rx571_start[2]
    set rx571_curclass, rx571_start[3]
    set rx571_bstack, rx571_start[4]
    set $I19, rx571_start[5]
    store_lex unicode:"$\x{a2}", rx571_cur
    length rx571_eos, rx571_tgt
    eq $I19, 1, rx571_restart1223
    gt rx571_pos, rx571_eos, rx571_fail1224
    repr_get_attr_int $I11, self, rx571_curclass, "$!from"
    ne $I11, -1, rxscan572_done1230
    goto rxscan572_scan1229
  rxscan572_loop1228:
    inc rx571_pos
    gt rx571_pos, rx571_eos, rx571_fail1224
    repr_bind_attr_int rx571_cur, rx571_curclass, "$!from", rx571_pos
  rxscan572_scan1229:
    nqp_rxmark rx571_bstack, rxscan572_loop1228, rx571_pos, 0
  rxscan572_done1230:
    nqp_rxmark rx571_bstack, rxcap573_fail1232, rx571_pos, 0
    add $I11, rx571_pos, 4
    gt $I11, rx571_eos, rx571_fail1224
    substr $S10, rx571_tgt, rx571_pos, 4
    ne $S10, ucs4:"INIT", rx571_fail1224
    add rx571_pos, 4
    nqp_rxpeek $I19, rx571_bstack, rxcap573_fail1232
    inc $I19
    set $I11, rx571_bstack[$I19]
    repr_bind_attr_int rx571_cur, rx571_curclass, "$!pos", rx571_pos
    $P11 = rx571_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx571_pos)
    rx571_cstack = rx571_cur."!cursor_capture"($P11, "sym")
    goto rxcap573_done1231
  rxcap573_fail1232:
    goto rx571_fail1224
  rxcap573_done1231:
    repr_bind_attr_int rx571_cur, rx571_curclass, "$!pos", rx571_pos
    $P11 = rx571_cur."blorst"()
    repr_get_attr_int $I11, $P11, rx571_curclass, "$!pos"
    lt $I11, 0, rx571_fail1224
    nqp_rxmark rx571_bstack, rxsubrule574_pass1233, -1, 0
  rxsubrule574_pass1233:
    rx571_cstack = rx571_cur."!cursor_capture"($P11, "blorst")
    repr_get_attr_int rx571_pos, $P11, rx571_curclass, "$!pos"
    rx571_cur."!cursor_pass"(rx571_pos, "statement_prefix:sym<INIT>", 'backtrack'=>1)
    .return (rx571_cur)
  rx571_restart1223:
    repr_get_attr_obj rx571_cstack, rx571_cur, rx571_curclass, "$!cstack"
  rx571_fail1224:
    unless rx571_bstack, rx571_done1222
    pop $I19, rx571_bstack
    if_null rx571_cstack, rx571_cstack_done1227
    unless rx571_cstack, rx571_cstack_done1227
    dec $I19
    set $P11, rx571_cstack[$I19]
  rx571_cstack_done1227:
    pop rx571_rep, rx571_bstack
    pop rx571_pos, rx571_bstack
    pop $I19, rx571_bstack
    lt rx571_pos, -1, rx571_done1222
    lt rx571_pos, 0, rx571_fail1224
    eq $I19, 0, rx571_fail1224
    nqp_islist $I20, rx571_cstack
    unless $I20, rx571_jump1225
    elements $I18, rx571_bstack
    le $I18, 0, rx571_cut1226
    dec $I18
    set $I18, rx571_bstack[$I18]
  rx571_cut1226:
    assign rx571_cstack, $I18
  rx571_jump1225:
    jump $I19
  rx571_done1222:
    rx571_cur."!cursor_fail"()
    .return (rx571_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<try>" :subid("cuid_75_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 892
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx575_start
    .local string rx575_tgt
    .local int rx575_pos
    .local int rx575_off
    .local int rx575_eos
    .local int rx575_rep
    .local pmc rx575_cur
    .local pmc rx575_curclass
    .local pmc rx575_bstack
    .local pmc rx575_cstack
    rx575_start = self."!cursor_start_all"()
    set rx575_cur, rx575_start[0]
    set rx575_tgt, rx575_start[1]
    set rx575_pos, rx575_start[2]
    set rx575_curclass, rx575_start[3]
    set rx575_bstack, rx575_start[4]
    set $I19, rx575_start[5]
    store_lex unicode:"$\x{a2}", rx575_cur
    length rx575_eos, rx575_tgt
    eq $I19, 1, rx575_restart1236
    gt rx575_pos, rx575_eos, rx575_fail1237
    repr_get_attr_int $I11, self, rx575_curclass, "$!from"
    ne $I11, -1, rxscan576_done1243
    goto rxscan576_scan1242
  rxscan576_loop1241:
    inc rx575_pos
    gt rx575_pos, rx575_eos, rx575_fail1237
    repr_bind_attr_int rx575_cur, rx575_curclass, "$!from", rx575_pos
  rxscan576_scan1242:
    nqp_rxmark rx575_bstack, rxscan576_loop1241, rx575_pos, 0
  rxscan576_done1243:
    nqp_rxmark rx575_bstack, rxcap577_fail1245, rx575_pos, 0
    add $I11, rx575_pos, 3
    gt $I11, rx575_eos, rx575_fail1237
    substr $S10, rx575_tgt, rx575_pos, 3
    ne $S10, ucs4:"try", rx575_fail1237
    add rx575_pos, 3
    nqp_rxpeek $I19, rx575_bstack, rxcap577_fail1245
    inc $I19
    set $I11, rx575_bstack[$I19]
    repr_bind_attr_int rx575_cur, rx575_curclass, "$!pos", rx575_pos
    $P11 = rx575_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx575_pos)
    rx575_cstack = rx575_cur."!cursor_capture"($P11, "sym")
    goto rxcap577_done1244
  rxcap577_fail1245:
    goto rx575_fail1237
  rxcap577_done1244:
    repr_bind_attr_int rx575_cur, rx575_curclass, "$!pos", rx575_pos
    $P11 = rx575_cur."blorst"()
    repr_get_attr_int $I11, $P11, rx575_curclass, "$!pos"
    lt $I11, 0, rx575_fail1237
    nqp_rxmark rx575_bstack, rxsubrule578_pass1246, -1, 0
  rxsubrule578_pass1246:
    rx575_cstack = rx575_cur."!cursor_capture"($P11, "blorst")
    repr_get_attr_int rx575_pos, $P11, rx575_curclass, "$!pos"
    rx575_cur."!cursor_pass"(rx575_pos, "statement_prefix:sym<try>", 'backtrack'=>1)
    .return (rx575_cur)
  rx575_restart1236:
    repr_get_attr_obj rx575_cstack, rx575_cur, rx575_curclass, "$!cstack"
  rx575_fail1237:
    unless rx575_bstack, rx575_done1235
    pop $I19, rx575_bstack
    if_null rx575_cstack, rx575_cstack_done1240
    unless rx575_cstack, rx575_cstack_done1240
    dec $I19
    set $P11, rx575_cstack[$I19]
  rx575_cstack_done1240:
    pop rx575_rep, rx575_bstack
    pop rx575_pos, rx575_bstack
    pop $I19, rx575_bstack
    lt rx575_pos, -1, rx575_done1235
    lt rx575_pos, 0, rx575_fail1237
    eq $I19, 0, rx575_fail1237
    nqp_islist $I20, rx575_cstack
    unless $I20, rx575_jump1238
    elements $I18, rx575_bstack
    le $I18, 0, rx575_cut1239
    dec $I18
    set $I18, rx575_bstack[$I18]
  rx575_cut1239:
    assign rx575_cstack, $I18
  rx575_jump1238:
    jump $I19
  rx575_done1235:
    rx575_cur."!cursor_fail"()
    .return (rx575_cur) 
.end
.HLL "nqp"
.namespace []
.sub "blorst" :subid("cuid_76_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 897
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx579_start
    .local string rx579_tgt
    .local int rx579_pos
    .local int rx579_off
    .local int rx579_eos
    .local int rx579_rep
    .local pmc rx579_cur
    .local pmc rx579_curclass
    .local pmc rx579_bstack
    .local pmc rx579_cstack
    rx579_start = self."!cursor_start_all"()
    set rx579_cur, rx579_start[0]
    set rx579_tgt, rx579_start[1]
    set rx579_pos, rx579_start[2]
    set rx579_curclass, rx579_start[3]
    set rx579_bstack, rx579_start[4]
    set $I19, rx579_start[5]
    store_lex unicode:"$\x{a2}", rx579_cur
    length rx579_eos, rx579_tgt
    eq $I19, 1, rx579_restart1249
    gt rx579_pos, rx579_eos, rx579_fail1250
    repr_get_attr_int $I11, self, rx579_curclass, "$!from"
    ne $I11, -1, rxscan580_done1256
    goto rxscan580_scan1255
  rxscan580_loop1254:
    inc rx579_pos
    gt rx579_pos, rx579_eos, rx579_fail1250
    repr_bind_attr_int rx579_cur, rx579_curclass, "$!from", rx579_pos
  rxscan580_scan1255:
    nqp_rxmark rx579_bstack, rxscan580_loop1254, rx579_pos, 0
  rxscan580_done1256:
    ge rx579_pos, rx579_eos, rx579_fail1250
    is_cclass $I11, .CCLASS_WHITESPACE, rx579_tgt, rx579_pos
    unless $I11, rx579_fail1250
    add rx579_pos, 1
    repr_bind_attr_int rx579_cur, rx579_curclass, "$!pos", rx579_pos
    $P11 = rx579_cur."ws"()
    repr_get_attr_int $I11, $P11, rx579_curclass, "$!pos"
    lt $I11, 0, rx579_fail1250
    repr_get_attr_int rx579_pos, $P11, rx579_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt582_01259
    nqp_push_label $P11, alt582_11261
    nqp_rxmark rx579_bstack, alt582_end1258, -1, 0
    rx579_cur."!alt"(rx579_pos, "alt_nfa__16_1365879997.074", $P11)
    goto rx579_fail1250
  alt582_01259:
    ge rx579_pos, rx579_eos, rx579_fail1250
    substr $S11, rx579_tgt, rx579_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx579_fail1250
    repr_bind_attr_int rx579_cur, rx579_curclass, "$!pos", rx579_pos
    $P11 = rx579_cur."block"()
    repr_get_attr_int $I11, $P11, rx579_curclass, "$!pos"
    lt $I11, 0, rx579_fail1250
    nqp_rxmark rx579_bstack, rxsubrule583_pass1260, -1, 0
  rxsubrule583_pass1260:
    rx579_cstack = rx579_cur."!cursor_capture"($P11, "block")
    repr_get_attr_int rx579_pos, $P11, rx579_curclass, "$!pos"
    goto alt582_end1258
  alt582_11261:
    repr_bind_attr_int rx579_cur, rx579_curclass, "$!pos", rx579_pos
    $P11 = rx579_cur."statement"()
    repr_get_attr_int $I11, $P11, rx579_curclass, "$!pos"
    lt $I11, 0, rx579_fail1250
    nqp_rxmark rx579_bstack, rxsubrule584_pass1262, -1, 0
  rxsubrule584_pass1262:
    rx579_cstack = rx579_cur."!cursor_capture"($P11, "statement")
    repr_get_attr_int rx579_pos, $P11, rx579_curclass, "$!pos"
    goto alt582_end1258
  alt582_end1258:
    nqp_rxcommit rx579_bstack, alt582_end1258
    rx579_cur."!cursor_pass"(rx579_pos, "blorst", 'backtrack'=>1)
    .return (rx579_cur)
  rx579_restart1249:
    repr_get_attr_obj rx579_cstack, rx579_cur, rx579_curclass, "$!cstack"
  rx579_fail1250:
    unless rx579_bstack, rx579_done1248
    pop $I19, rx579_bstack
    if_null rx579_cstack, rx579_cstack_done1253
    unless rx579_cstack, rx579_cstack_done1253
    dec $I19
    set $P11, rx579_cstack[$I19]
  rx579_cstack_done1253:
    pop rx579_rep, rx579_bstack
    pop rx579_pos, rx579_bstack
    pop $I19, rx579_bstack
    lt rx579_pos, -1, rx579_done1248
    lt rx579_pos, 0, rx579_fail1250
    eq $I19, 0, rx579_fail1250
    nqp_islist $I20, rx579_cstack
    unless $I20, rx579_jump1251
    elements $I18, rx579_bstack
    le $I18, 0, rx579_cut1252
    dec $I18
    set $I18, rx579_bstack[$I18]
  rx579_cut1252:
    assign rx579_cstack, $I18
  rx579_jump1251:
    jump $I19
  rx579_done1248:
    rx579_cur."!cursor_fail"()
    .return (rx579_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond" :subid("cuid_77_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 903
    .param pmc self 
    $P5001 = self."!protoregex"("statement_mod_cond")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond:sym<if>" :subid("cuid_78_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 905
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx585_start
    .local string rx585_tgt
    .local int rx585_pos
    .local int rx585_off
    .local int rx585_eos
    .local int rx585_rep
    .local pmc rx585_cur
    .local pmc rx585_curclass
    .local pmc rx585_bstack
    .local pmc rx585_cstack
    rx585_start = self."!cursor_start_all"()
    set rx585_cur, rx585_start[0]
    set rx585_tgt, rx585_start[1]
    set rx585_pos, rx585_start[2]
    set rx585_curclass, rx585_start[3]
    set rx585_bstack, rx585_start[4]
    set $I19, rx585_start[5]
    store_lex unicode:"$\x{a2}", rx585_cur
    length rx585_eos, rx585_tgt
    eq $I19, 1, rx585_restart1265
    gt rx585_pos, rx585_eos, rx585_fail1266
    repr_get_attr_int $I11, self, rx585_curclass, "$!from"
    ne $I11, -1, rxscan586_done1272
    goto rxscan586_scan1271
  rxscan586_loop1270:
    inc rx585_pos
    gt rx585_pos, rx585_eos, rx585_fail1266
    repr_bind_attr_int rx585_cur, rx585_curclass, "$!from", rx585_pos
  rxscan586_scan1271:
    nqp_rxmark rx585_bstack, rxscan586_loop1270, rx585_pos, 0
  rxscan586_done1272:
    nqp_rxmark rx585_bstack, rxcap587_fail1274, rx585_pos, 0
    add $I11, rx585_pos, 2
    gt $I11, rx585_eos, rx585_fail1266
    substr $S10, rx585_tgt, rx585_pos, 2
    ne $S10, ucs4:"if", rx585_fail1266
    add rx585_pos, 2
    nqp_rxpeek $I19, rx585_bstack, rxcap587_fail1274
    inc $I19
    set $I11, rx585_bstack[$I19]
    repr_bind_attr_int rx585_cur, rx585_curclass, "$!pos", rx585_pos
    $P11 = rx585_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx585_pos)
    rx585_cstack = rx585_cur."!cursor_capture"($P11, "sym")
    goto rxcap587_done1273
  rxcap587_fail1274:
    goto rx585_fail1266
  rxcap587_done1273:
    repr_bind_attr_int rx585_cur, rx585_curclass, "$!pos", rx585_pos
    $P11 = rx585_cur."ws"()
    repr_get_attr_int $I11, $P11, rx585_curclass, "$!pos"
    lt $I11, 0, rx585_fail1266
    repr_get_attr_int rx585_pos, $P11, rx585_curclass, "$!pos"
    repr_bind_attr_int rx585_cur, rx585_curclass, "$!pos", rx585_pos
    $P11 = rx585_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx585_curclass, "$!pos"
    lt $I11, 0, rx585_fail1266
    nqp_rxmark rx585_bstack, rxsubrule589_pass1276, -1, 0
  rxsubrule589_pass1276:
    rx585_cstack = rx585_cur."!cursor_capture"($P11, "cond")
    repr_get_attr_int rx585_pos, $P11, rx585_curclass, "$!pos"
    repr_bind_attr_int rx585_cur, rx585_curclass, "$!pos", rx585_pos
    $P11 = rx585_cur."ws"()
    repr_get_attr_int $I11, $P11, rx585_curclass, "$!pos"
    lt $I11, 0, rx585_fail1266
    repr_get_attr_int rx585_pos, $P11, rx585_curclass, "$!pos"
    rx585_cur."!cursor_pass"(rx585_pos, "statement_mod_cond:sym<if>", 'backtrack'=>1)
    .return (rx585_cur)
  rx585_restart1265:
    repr_get_attr_obj rx585_cstack, rx585_cur, rx585_curclass, "$!cstack"
  rx585_fail1266:
    unless rx585_bstack, rx585_done1264
    pop $I19, rx585_bstack
    if_null rx585_cstack, rx585_cstack_done1269
    unless rx585_cstack, rx585_cstack_done1269
    dec $I19
    set $P11, rx585_cstack[$I19]
  rx585_cstack_done1269:
    pop rx585_rep, rx585_bstack
    pop rx585_pos, rx585_bstack
    pop $I19, rx585_bstack
    lt rx585_pos, -1, rx585_done1264
    lt rx585_pos, 0, rx585_fail1266
    eq $I19, 0, rx585_fail1266
    nqp_islist $I20, rx585_cstack
    unless $I20, rx585_jump1267
    elements $I18, rx585_bstack
    le $I18, 0, rx585_cut1268
    dec $I18
    set $I18, rx585_bstack[$I18]
  rx585_cut1268:
    assign rx585_cstack, $I18
  rx585_jump1267:
    jump $I19
  rx585_done1264:
    rx585_cur."!cursor_fail"()
    .return (rx585_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond:sym<unless>" :subid("cuid_79_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 906
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx591_start
    .local string rx591_tgt
    .local int rx591_pos
    .local int rx591_off
    .local int rx591_eos
    .local int rx591_rep
    .local pmc rx591_cur
    .local pmc rx591_curclass
    .local pmc rx591_bstack
    .local pmc rx591_cstack
    rx591_start = self."!cursor_start_all"()
    set rx591_cur, rx591_start[0]
    set rx591_tgt, rx591_start[1]
    set rx591_pos, rx591_start[2]
    set rx591_curclass, rx591_start[3]
    set rx591_bstack, rx591_start[4]
    set $I19, rx591_start[5]
    store_lex unicode:"$\x{a2}", rx591_cur
    length rx591_eos, rx591_tgt
    eq $I19, 1, rx591_restart1280
    gt rx591_pos, rx591_eos, rx591_fail1281
    repr_get_attr_int $I11, self, rx591_curclass, "$!from"
    ne $I11, -1, rxscan592_done1287
    goto rxscan592_scan1286
  rxscan592_loop1285:
    inc rx591_pos
    gt rx591_pos, rx591_eos, rx591_fail1281
    repr_bind_attr_int rx591_cur, rx591_curclass, "$!from", rx591_pos
  rxscan592_scan1286:
    nqp_rxmark rx591_bstack, rxscan592_loop1285, rx591_pos, 0
  rxscan592_done1287:
    nqp_rxmark rx591_bstack, rxcap593_fail1289, rx591_pos, 0
    add $I11, rx591_pos, 6
    gt $I11, rx591_eos, rx591_fail1281
    substr $S10, rx591_tgt, rx591_pos, 6
    ne $S10, ucs4:"unless", rx591_fail1281
    add rx591_pos, 6
    nqp_rxpeek $I19, rx591_bstack, rxcap593_fail1289
    inc $I19
    set $I11, rx591_bstack[$I19]
    repr_bind_attr_int rx591_cur, rx591_curclass, "$!pos", rx591_pos
    $P11 = rx591_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx591_pos)
    rx591_cstack = rx591_cur."!cursor_capture"($P11, "sym")
    goto rxcap593_done1288
  rxcap593_fail1289:
    goto rx591_fail1281
  rxcap593_done1288:
    repr_bind_attr_int rx591_cur, rx591_curclass, "$!pos", rx591_pos
    $P11 = rx591_cur."ws"()
    repr_get_attr_int $I11, $P11, rx591_curclass, "$!pos"
    lt $I11, 0, rx591_fail1281
    repr_get_attr_int rx591_pos, $P11, rx591_curclass, "$!pos"
    repr_bind_attr_int rx591_cur, rx591_curclass, "$!pos", rx591_pos
    $P11 = rx591_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx591_curclass, "$!pos"
    lt $I11, 0, rx591_fail1281
    nqp_rxmark rx591_bstack, rxsubrule595_pass1291, -1, 0
  rxsubrule595_pass1291:
    rx591_cstack = rx591_cur."!cursor_capture"($P11, "cond")
    repr_get_attr_int rx591_pos, $P11, rx591_curclass, "$!pos"
    repr_bind_attr_int rx591_cur, rx591_curclass, "$!pos", rx591_pos
    $P11 = rx591_cur."ws"()
    repr_get_attr_int $I11, $P11, rx591_curclass, "$!pos"
    lt $I11, 0, rx591_fail1281
    repr_get_attr_int rx591_pos, $P11, rx591_curclass, "$!pos"
    rx591_cur."!cursor_pass"(rx591_pos, "statement_mod_cond:sym<unless>", 'backtrack'=>1)
    .return (rx591_cur)
  rx591_restart1280:
    repr_get_attr_obj rx591_cstack, rx591_cur, rx591_curclass, "$!cstack"
  rx591_fail1281:
    unless rx591_bstack, rx591_done1279
    pop $I19, rx591_bstack
    if_null rx591_cstack, rx591_cstack_done1284
    unless rx591_cstack, rx591_cstack_done1284
    dec $I19
    set $P11, rx591_cstack[$I19]
  rx591_cstack_done1284:
    pop rx591_rep, rx591_bstack
    pop rx591_pos, rx591_bstack
    pop $I19, rx591_bstack
    lt rx591_pos, -1, rx591_done1279
    lt rx591_pos, 0, rx591_fail1281
    eq $I19, 0, rx591_fail1281
    nqp_islist $I20, rx591_cstack
    unless $I20, rx591_jump1282
    elements $I18, rx591_bstack
    le $I18, 0, rx591_cut1283
    dec $I18
    set $I18, rx591_bstack[$I18]
  rx591_cut1283:
    assign rx591_cstack, $I18
  rx591_jump1282:
    jump $I19
  rx591_done1279:
    rx591_cur."!cursor_fail"()
    .return (rx591_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop" :subid("cuid_80_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 908
    .param pmc self 
    $P5001 = self."!protoregex"("statement_mod_loop")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<while>" :subid("cuid_81_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 910
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx597_start
    .local string rx597_tgt
    .local int rx597_pos
    .local int rx597_off
    .local int rx597_eos
    .local int rx597_rep
    .local pmc rx597_cur
    .local pmc rx597_curclass
    .local pmc rx597_bstack
    .local pmc rx597_cstack
    rx597_start = self."!cursor_start_all"()
    set rx597_cur, rx597_start[0]
    set rx597_tgt, rx597_start[1]
    set rx597_pos, rx597_start[2]
    set rx597_curclass, rx597_start[3]
    set rx597_bstack, rx597_start[4]
    set $I19, rx597_start[5]
    store_lex unicode:"$\x{a2}", rx597_cur
    length rx597_eos, rx597_tgt
    eq $I19, 1, rx597_restart1295
    gt rx597_pos, rx597_eos, rx597_fail1296
    repr_get_attr_int $I11, self, rx597_curclass, "$!from"
    ne $I11, -1, rxscan598_done1302
    goto rxscan598_scan1301
  rxscan598_loop1300:
    inc rx597_pos
    gt rx597_pos, rx597_eos, rx597_fail1296
    repr_bind_attr_int rx597_cur, rx597_curclass, "$!from", rx597_pos
  rxscan598_scan1301:
    nqp_rxmark rx597_bstack, rxscan598_loop1300, rx597_pos, 0
  rxscan598_done1302:
    nqp_rxmark rx597_bstack, rxcap599_fail1304, rx597_pos, 0
    add $I11, rx597_pos, 5
    gt $I11, rx597_eos, rx597_fail1296
    substr $S10, rx597_tgt, rx597_pos, 5
    ne $S10, ucs4:"while", rx597_fail1296
    add rx597_pos, 5
    nqp_rxpeek $I19, rx597_bstack, rxcap599_fail1304
    inc $I19
    set $I11, rx597_bstack[$I19]
    repr_bind_attr_int rx597_cur, rx597_curclass, "$!pos", rx597_pos
    $P11 = rx597_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx597_pos)
    rx597_cstack = rx597_cur."!cursor_capture"($P11, "sym")
    goto rxcap599_done1303
  rxcap599_fail1304:
    goto rx597_fail1296
  rxcap599_done1303:
    repr_bind_attr_int rx597_cur, rx597_curclass, "$!pos", rx597_pos
    $P11 = rx597_cur."ws"()
    repr_get_attr_int $I11, $P11, rx597_curclass, "$!pos"
    lt $I11, 0, rx597_fail1296
    repr_get_attr_int rx597_pos, $P11, rx597_curclass, "$!pos"
    repr_bind_attr_int rx597_cur, rx597_curclass, "$!pos", rx597_pos
    $P11 = rx597_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx597_curclass, "$!pos"
    lt $I11, 0, rx597_fail1296
    nqp_rxmark rx597_bstack, rxsubrule601_pass1306, -1, 0
  rxsubrule601_pass1306:
    rx597_cstack = rx597_cur."!cursor_capture"($P11, "cond")
    repr_get_attr_int rx597_pos, $P11, rx597_curclass, "$!pos"
    repr_bind_attr_int rx597_cur, rx597_curclass, "$!pos", rx597_pos
    $P11 = rx597_cur."ws"()
    repr_get_attr_int $I11, $P11, rx597_curclass, "$!pos"
    lt $I11, 0, rx597_fail1296
    repr_get_attr_int rx597_pos, $P11, rx597_curclass, "$!pos"
    rx597_cur."!cursor_pass"(rx597_pos, "statement_mod_loop:sym<while>", 'backtrack'=>1)
    .return (rx597_cur)
  rx597_restart1295:
    repr_get_attr_obj rx597_cstack, rx597_cur, rx597_curclass, "$!cstack"
  rx597_fail1296:
    unless rx597_bstack, rx597_done1294
    pop $I19, rx597_bstack
    if_null rx597_cstack, rx597_cstack_done1299
    unless rx597_cstack, rx597_cstack_done1299
    dec $I19
    set $P11, rx597_cstack[$I19]
  rx597_cstack_done1299:
    pop rx597_rep, rx597_bstack
    pop rx597_pos, rx597_bstack
    pop $I19, rx597_bstack
    lt rx597_pos, -1, rx597_done1294
    lt rx597_pos, 0, rx597_fail1296
    eq $I19, 0, rx597_fail1296
    nqp_islist $I20, rx597_cstack
    unless $I20, rx597_jump1297
    elements $I18, rx597_bstack
    le $I18, 0, rx597_cut1298
    dec $I18
    set $I18, rx597_bstack[$I18]
  rx597_cut1298:
    assign rx597_cstack, $I18
  rx597_jump1297:
    jump $I19
  rx597_done1294:
    rx597_cur."!cursor_fail"()
    .return (rx597_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<until>" :subid("cuid_82_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 911
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx603_start
    .local string rx603_tgt
    .local int rx603_pos
    .local int rx603_off
    .local int rx603_eos
    .local int rx603_rep
    .local pmc rx603_cur
    .local pmc rx603_curclass
    .local pmc rx603_bstack
    .local pmc rx603_cstack
    rx603_start = self."!cursor_start_all"()
    set rx603_cur, rx603_start[0]
    set rx603_tgt, rx603_start[1]
    set rx603_pos, rx603_start[2]
    set rx603_curclass, rx603_start[3]
    set rx603_bstack, rx603_start[4]
    set $I19, rx603_start[5]
    store_lex unicode:"$\x{a2}", rx603_cur
    length rx603_eos, rx603_tgt
    eq $I19, 1, rx603_restart1310
    gt rx603_pos, rx603_eos, rx603_fail1311
    repr_get_attr_int $I11, self, rx603_curclass, "$!from"
    ne $I11, -1, rxscan604_done1317
    goto rxscan604_scan1316
  rxscan604_loop1315:
    inc rx603_pos
    gt rx603_pos, rx603_eos, rx603_fail1311
    repr_bind_attr_int rx603_cur, rx603_curclass, "$!from", rx603_pos
  rxscan604_scan1316:
    nqp_rxmark rx603_bstack, rxscan604_loop1315, rx603_pos, 0
  rxscan604_done1317:
    nqp_rxmark rx603_bstack, rxcap605_fail1319, rx603_pos, 0
    add $I11, rx603_pos, 5
    gt $I11, rx603_eos, rx603_fail1311
    substr $S10, rx603_tgt, rx603_pos, 5
    ne $S10, ucs4:"until", rx603_fail1311
    add rx603_pos, 5
    nqp_rxpeek $I19, rx603_bstack, rxcap605_fail1319
    inc $I19
    set $I11, rx603_bstack[$I19]
    repr_bind_attr_int rx603_cur, rx603_curclass, "$!pos", rx603_pos
    $P11 = rx603_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx603_pos)
    rx603_cstack = rx603_cur."!cursor_capture"($P11, "sym")
    goto rxcap605_done1318
  rxcap605_fail1319:
    goto rx603_fail1311
  rxcap605_done1318:
    repr_bind_attr_int rx603_cur, rx603_curclass, "$!pos", rx603_pos
    $P11 = rx603_cur."ws"()
    repr_get_attr_int $I11, $P11, rx603_curclass, "$!pos"
    lt $I11, 0, rx603_fail1311
    repr_get_attr_int rx603_pos, $P11, rx603_curclass, "$!pos"
    repr_bind_attr_int rx603_cur, rx603_curclass, "$!pos", rx603_pos
    $P11 = rx603_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx603_curclass, "$!pos"
    lt $I11, 0, rx603_fail1311
    nqp_rxmark rx603_bstack, rxsubrule607_pass1321, -1, 0
  rxsubrule607_pass1321:
    rx603_cstack = rx603_cur."!cursor_capture"($P11, "cond")
    repr_get_attr_int rx603_pos, $P11, rx603_curclass, "$!pos"
    repr_bind_attr_int rx603_cur, rx603_curclass, "$!pos", rx603_pos
    $P11 = rx603_cur."ws"()
    repr_get_attr_int $I11, $P11, rx603_curclass, "$!pos"
    lt $I11, 0, rx603_fail1311
    repr_get_attr_int rx603_pos, $P11, rx603_curclass, "$!pos"
    rx603_cur."!cursor_pass"(rx603_pos, "statement_mod_loop:sym<until>", 'backtrack'=>1)
    .return (rx603_cur)
  rx603_restart1310:
    repr_get_attr_obj rx603_cstack, rx603_cur, rx603_curclass, "$!cstack"
  rx603_fail1311:
    unless rx603_bstack, rx603_done1309
    pop $I19, rx603_bstack
    if_null rx603_cstack, rx603_cstack_done1314
    unless rx603_cstack, rx603_cstack_done1314
    dec $I19
    set $P11, rx603_cstack[$I19]
  rx603_cstack_done1314:
    pop rx603_rep, rx603_bstack
    pop rx603_pos, rx603_bstack
    pop $I19, rx603_bstack
    lt rx603_pos, -1, rx603_done1309
    lt rx603_pos, 0, rx603_fail1311
    eq $I19, 0, rx603_fail1311
    nqp_islist $I20, rx603_cstack
    unless $I20, rx603_jump1312
    elements $I18, rx603_bstack
    le $I18, 0, rx603_cut1313
    dec $I18
    set $I18, rx603_bstack[$I18]
  rx603_cut1313:
    assign rx603_cstack, $I18
  rx603_jump1312:
    jump $I19
  rx603_done1309:
    rx603_cur."!cursor_fail"()
    .return (rx603_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<for>" :subid("cuid_83_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 912
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx609_start
    .local string rx609_tgt
    .local int rx609_pos
    .local int rx609_off
    .local int rx609_eos
    .local int rx609_rep
    .local pmc rx609_cur
    .local pmc rx609_curclass
    .local pmc rx609_bstack
    .local pmc rx609_cstack
    rx609_start = self."!cursor_start_all"()
    set rx609_cur, rx609_start[0]
    set rx609_tgt, rx609_start[1]
    set rx609_pos, rx609_start[2]
    set rx609_curclass, rx609_start[3]
    set rx609_bstack, rx609_start[4]
    set $I19, rx609_start[5]
    store_lex unicode:"$\x{a2}", rx609_cur
    length rx609_eos, rx609_tgt
    eq $I19, 1, rx609_restart1325
    gt rx609_pos, rx609_eos, rx609_fail1326
    repr_get_attr_int $I11, self, rx609_curclass, "$!from"
    ne $I11, -1, rxscan610_done1332
    goto rxscan610_scan1331
  rxscan610_loop1330:
    inc rx609_pos
    gt rx609_pos, rx609_eos, rx609_fail1326
    repr_bind_attr_int rx609_cur, rx609_curclass, "$!from", rx609_pos
  rxscan610_scan1331:
    nqp_rxmark rx609_bstack, rxscan610_loop1330, rx609_pos, 0
  rxscan610_done1332:
    nqp_rxmark rx609_bstack, rxcap611_fail1334, rx609_pos, 0
    add $I11, rx609_pos, 3
    gt $I11, rx609_eos, rx609_fail1326
    substr $S10, rx609_tgt, rx609_pos, 3
    ne $S10, ucs4:"for", rx609_fail1326
    add rx609_pos, 3
    nqp_rxpeek $I19, rx609_bstack, rxcap611_fail1334
    inc $I19
    set $I11, rx609_bstack[$I19]
    repr_bind_attr_int rx609_cur, rx609_curclass, "$!pos", rx609_pos
    $P11 = rx609_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx609_pos)
    rx609_cstack = rx609_cur."!cursor_capture"($P11, "sym")
    goto rxcap611_done1333
  rxcap611_fail1334:
    goto rx609_fail1326
  rxcap611_done1333:
    repr_bind_attr_int rx609_cur, rx609_curclass, "$!pos", rx609_pos
    $P11 = rx609_cur."ws"()
    repr_get_attr_int $I11, $P11, rx609_curclass, "$!pos"
    lt $I11, 0, rx609_fail1326
    repr_get_attr_int rx609_pos, $P11, rx609_curclass, "$!pos"
    repr_bind_attr_int rx609_cur, rx609_curclass, "$!pos", rx609_pos
    $P11 = rx609_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx609_curclass, "$!pos"
    lt $I11, 0, rx609_fail1326
    nqp_rxmark rx609_bstack, rxsubrule613_pass1336, -1, 0
  rxsubrule613_pass1336:
    rx609_cstack = rx609_cur."!cursor_capture"($P11, "cond")
    repr_get_attr_int rx609_pos, $P11, rx609_curclass, "$!pos"
    repr_bind_attr_int rx609_cur, rx609_curclass, "$!pos", rx609_pos
    $P11 = rx609_cur."ws"()
    repr_get_attr_int $I11, $P11, rx609_curclass, "$!pos"
    lt $I11, 0, rx609_fail1326
    repr_get_attr_int rx609_pos, $P11, rx609_curclass, "$!pos"
    rx609_cur."!cursor_pass"(rx609_pos, "statement_mod_loop:sym<for>", 'backtrack'=>1)
    .return (rx609_cur)
  rx609_restart1325:
    repr_get_attr_obj rx609_cstack, rx609_cur, rx609_curclass, "$!cstack"
  rx609_fail1326:
    unless rx609_bstack, rx609_done1324
    pop $I19, rx609_bstack
    if_null rx609_cstack, rx609_cstack_done1329
    unless rx609_cstack, rx609_cstack_done1329
    dec $I19
    set $P11, rx609_cstack[$I19]
  rx609_cstack_done1329:
    pop rx609_rep, rx609_bstack
    pop rx609_pos, rx609_bstack
    pop $I19, rx609_bstack
    lt rx609_pos, -1, rx609_done1324
    lt rx609_pos, 0, rx609_fail1326
    eq $I19, 0, rx609_fail1326
    nqp_islist $I20, rx609_cstack
    unless $I20, rx609_jump1327
    elements $I18, rx609_bstack
    le $I18, 0, rx609_cut1328
    dec $I18
    set $I18, rx609_bstack[$I18]
  rx609_cut1328:
    assign rx609_cstack, $I18
  rx609_jump1327:
    jump $I19
  rx609_done1324:
    rx609_cur."!cursor_fail"()
    .return (rx609_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<fatarrow>" :subid("cuid_84_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 916
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx615_start
    .local string rx615_tgt
    .local int rx615_pos
    .local int rx615_off
    .local int rx615_eos
    .local int rx615_rep
    .local pmc rx615_cur
    .local pmc rx615_curclass
    .local pmc rx615_bstack
    .local pmc rx615_cstack
    rx615_start = self."!cursor_start_all"()
    set rx615_cur, rx615_start[0]
    set rx615_tgt, rx615_start[1]
    set rx615_pos, rx615_start[2]
    set rx615_curclass, rx615_start[3]
    set rx615_bstack, rx615_start[4]
    set $I19, rx615_start[5]
    store_lex unicode:"$\x{a2}", rx615_cur
    length rx615_eos, rx615_tgt
    eq $I19, 1, rx615_restart1340
    gt rx615_pos, rx615_eos, rx615_fail1341
    repr_get_attr_int $I11, self, rx615_curclass, "$!from"
    ne $I11, -1, rxscan616_done1347
    goto rxscan616_scan1346
  rxscan616_loop1345:
    inc rx615_pos
    gt rx615_pos, rx615_eos, rx615_fail1341
    repr_bind_attr_int rx615_cur, rx615_curclass, "$!from", rx615_pos
  rxscan616_scan1346:
    nqp_rxmark rx615_bstack, rxscan616_loop1345, rx615_pos, 0
  rxscan616_done1347:
    repr_bind_attr_int rx615_cur, rx615_curclass, "$!pos", rx615_pos
    $P11 = rx615_cur."fatarrow"()
    repr_get_attr_int $I11, $P11, rx615_curclass, "$!pos"
    lt $I11, 0, rx615_fail1341
    nqp_rxmark rx615_bstack, rxsubrule617_pass1348, -1, 0
  rxsubrule617_pass1348:
    rx615_cstack = rx615_cur."!cursor_capture"($P11, "fatarrow")
    repr_get_attr_int rx615_pos, $P11, rx615_curclass, "$!pos"
    rx615_cur."!cursor_pass"(rx615_pos, "term:sym<fatarrow>", 'backtrack'=>1)
    .return (rx615_cur)
  rx615_restart1340:
    repr_get_attr_obj rx615_cstack, rx615_cur, rx615_curclass, "$!cstack"
  rx615_fail1341:
    unless rx615_bstack, rx615_done1339
    pop $I19, rx615_bstack
    if_null rx615_cstack, rx615_cstack_done1344
    unless rx615_cstack, rx615_cstack_done1344
    dec $I19
    set $P11, rx615_cstack[$I19]
  rx615_cstack_done1344:
    pop rx615_rep, rx615_bstack
    pop rx615_pos, rx615_bstack
    pop $I19, rx615_bstack
    lt rx615_pos, -1, rx615_done1339
    lt rx615_pos, 0, rx615_fail1341
    eq $I19, 0, rx615_fail1341
    nqp_islist $I20, rx615_cstack
    unless $I20, rx615_jump1342
    elements $I18, rx615_bstack
    le $I18, 0, rx615_cut1343
    dec $I18
    set $I18, rx615_bstack[$I18]
  rx615_cut1343:
    assign rx615_cstack, $I18
  rx615_jump1342:
    jump $I19
  rx615_done1339:
    rx615_cur."!cursor_fail"()
    .return (rx615_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<colonpair>" :subid("cuid_85_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 917
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx618_start
    .local string rx618_tgt
    .local int rx618_pos
    .local int rx618_off
    .local int rx618_eos
    .local int rx618_rep
    .local pmc rx618_cur
    .local pmc rx618_curclass
    .local pmc rx618_bstack
    .local pmc rx618_cstack
    rx618_start = self."!cursor_start_all"()
    set rx618_cur, rx618_start[0]
    set rx618_tgt, rx618_start[1]
    set rx618_pos, rx618_start[2]
    set rx618_curclass, rx618_start[3]
    set rx618_bstack, rx618_start[4]
    set $I19, rx618_start[5]
    store_lex unicode:"$\x{a2}", rx618_cur
    length rx618_eos, rx618_tgt
    eq $I19, 1, rx618_restart1351
    gt rx618_pos, rx618_eos, rx618_fail1352
    repr_get_attr_int $I11, self, rx618_curclass, "$!from"
    ne $I11, -1, rxscan619_done1358
    goto rxscan619_scan1357
  rxscan619_loop1356:
    inc rx618_pos
    gt rx618_pos, rx618_eos, rx618_fail1352
    repr_bind_attr_int rx618_cur, rx618_curclass, "$!from", rx618_pos
  rxscan619_scan1357:
    nqp_rxmark rx618_bstack, rxscan619_loop1356, rx618_pos, 0
  rxscan619_done1358:
    repr_bind_attr_int rx618_cur, rx618_curclass, "$!pos", rx618_pos
    $P11 = rx618_cur."colonpair"()
    repr_get_attr_int $I11, $P11, rx618_curclass, "$!pos"
    lt $I11, 0, rx618_fail1352
    nqp_rxmark rx618_bstack, rxsubrule620_pass1359, -1, 0
  rxsubrule620_pass1359:
    rx618_cstack = rx618_cur."!cursor_capture"($P11, "colonpair")
    repr_get_attr_int rx618_pos, $P11, rx618_curclass, "$!pos"
    rx618_cur."!cursor_pass"(rx618_pos, "term:sym<colonpair>", 'backtrack'=>1)
    .return (rx618_cur)
  rx618_restart1351:
    repr_get_attr_obj rx618_cstack, rx618_cur, rx618_curclass, "$!cstack"
  rx618_fail1352:
    unless rx618_bstack, rx618_done1350
    pop $I19, rx618_bstack
    if_null rx618_cstack, rx618_cstack_done1355
    unless rx618_cstack, rx618_cstack_done1355
    dec $I19
    set $P11, rx618_cstack[$I19]
  rx618_cstack_done1355:
    pop rx618_rep, rx618_bstack
    pop rx618_pos, rx618_bstack
    pop $I19, rx618_bstack
    lt rx618_pos, -1, rx618_done1350
    lt rx618_pos, 0, rx618_fail1352
    eq $I19, 0, rx618_fail1352
    nqp_islist $I20, rx618_cstack
    unless $I20, rx618_jump1353
    elements $I18, rx618_bstack
    le $I18, 0, rx618_cut1354
    dec $I18
    set $I18, rx618_bstack[$I18]
  rx618_cut1354:
    assign rx618_cstack, $I18
  rx618_jump1353:
    jump $I19
  rx618_done1350:
    rx618_cur."!cursor_fail"()
    .return (rx618_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<variable>" :subid("cuid_86_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 918
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx621_start
    .local string rx621_tgt
    .local int rx621_pos
    .local int rx621_off
    .local int rx621_eos
    .local int rx621_rep
    .local pmc rx621_cur
    .local pmc rx621_curclass
    .local pmc rx621_bstack
    .local pmc rx621_cstack
    rx621_start = self."!cursor_start_all"()
    set rx621_cur, rx621_start[0]
    set rx621_tgt, rx621_start[1]
    set rx621_pos, rx621_start[2]
    set rx621_curclass, rx621_start[3]
    set rx621_bstack, rx621_start[4]
    set $I19, rx621_start[5]
    store_lex unicode:"$\x{a2}", rx621_cur
    length rx621_eos, rx621_tgt
    eq $I19, 1, rx621_restart1362
    gt rx621_pos, rx621_eos, rx621_fail1363
    repr_get_attr_int $I11, self, rx621_curclass, "$!from"
    ne $I11, -1, rxscan622_done1369
    goto rxscan622_scan1368
  rxscan622_loop1367:
    inc rx621_pos
    gt rx621_pos, rx621_eos, rx621_fail1363
    repr_bind_attr_int rx621_cur, rx621_curclass, "$!from", rx621_pos
  rxscan622_scan1368:
    nqp_rxmark rx621_bstack, rxscan622_loop1367, rx621_pos, 0
  rxscan622_done1369:
    repr_bind_attr_int rx621_cur, rx621_curclass, "$!pos", rx621_pos
    $P11 = rx621_cur."variable"()
    repr_get_attr_int $I11, $P11, rx621_curclass, "$!pos"
    lt $I11, 0, rx621_fail1363
    nqp_rxmark rx621_bstack, rxsubrule623_pass1370, -1, 0
  rxsubrule623_pass1370:
    rx621_cstack = rx621_cur."!cursor_capture"($P11, "variable")
    repr_get_attr_int rx621_pos, $P11, rx621_curclass, "$!pos"
    rx621_cur."!cursor_pass"(rx621_pos, "term:sym<variable>", 'backtrack'=>1)
    .return (rx621_cur)
  rx621_restart1362:
    repr_get_attr_obj rx621_cstack, rx621_cur, rx621_curclass, "$!cstack"
  rx621_fail1363:
    unless rx621_bstack, rx621_done1361
    pop $I19, rx621_bstack
    if_null rx621_cstack, rx621_cstack_done1366
    unless rx621_cstack, rx621_cstack_done1366
    dec $I19
    set $P11, rx621_cstack[$I19]
  rx621_cstack_done1366:
    pop rx621_rep, rx621_bstack
    pop rx621_pos, rx621_bstack
    pop $I19, rx621_bstack
    lt rx621_pos, -1, rx621_done1361
    lt rx621_pos, 0, rx621_fail1363
    eq $I19, 0, rx621_fail1363
    nqp_islist $I20, rx621_cstack
    unless $I20, rx621_jump1364
    elements $I18, rx621_bstack
    le $I18, 0, rx621_cut1365
    dec $I18
    set $I18, rx621_bstack[$I18]
  rx621_cut1365:
    assign rx621_cstack, $I18
  rx621_jump1364:
    jump $I19
  rx621_done1361:
    rx621_cur."!cursor_fail"()
    .return (rx621_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<package_declarator>" :subid("cuid_87_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 919
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx624_start
    .local string rx624_tgt
    .local int rx624_pos
    .local int rx624_off
    .local int rx624_eos
    .local int rx624_rep
    .local pmc rx624_cur
    .local pmc rx624_curclass
    .local pmc rx624_bstack
    .local pmc rx624_cstack
    rx624_start = self."!cursor_start_all"()
    set rx624_cur, rx624_start[0]
    set rx624_tgt, rx624_start[1]
    set rx624_pos, rx624_start[2]
    set rx624_curclass, rx624_start[3]
    set rx624_bstack, rx624_start[4]
    set $I19, rx624_start[5]
    store_lex unicode:"$\x{a2}", rx624_cur
    length rx624_eos, rx624_tgt
    eq $I19, 1, rx624_restart1373
    gt rx624_pos, rx624_eos, rx624_fail1374
    repr_get_attr_int $I11, self, rx624_curclass, "$!from"
    ne $I11, -1, rxscan625_done1380
    goto rxscan625_scan1379
  rxscan625_loop1378:
    inc rx624_pos
    gt rx624_pos, rx624_eos, rx624_fail1374
    repr_bind_attr_int rx624_cur, rx624_curclass, "$!from", rx624_pos
  rxscan625_scan1379:
    nqp_rxmark rx624_bstack, rxscan625_loop1378, rx624_pos, 0
  rxscan625_done1380:
    repr_bind_attr_int rx624_cur, rx624_curclass, "$!pos", rx624_pos
    $P11 = rx624_cur."package_declarator"()
    repr_get_attr_int $I11, $P11, rx624_curclass, "$!pos"
    lt $I11, 0, rx624_fail1374
    nqp_rxmark rx624_bstack, rxsubrule626_pass1381, -1, 0
  rxsubrule626_pass1381:
    rx624_cstack = rx624_cur."!cursor_capture"($P11, "package_declarator")
    repr_get_attr_int rx624_pos, $P11, rx624_curclass, "$!pos"
    rx624_cur."!cursor_pass"(rx624_pos, "term:sym<package_declarator>", 'backtrack'=>1)
    .return (rx624_cur)
  rx624_restart1373:
    repr_get_attr_obj rx624_cstack, rx624_cur, rx624_curclass, "$!cstack"
  rx624_fail1374:
    unless rx624_bstack, rx624_done1372
    pop $I19, rx624_bstack
    if_null rx624_cstack, rx624_cstack_done1377
    unless rx624_cstack, rx624_cstack_done1377
    dec $I19
    set $P11, rx624_cstack[$I19]
  rx624_cstack_done1377:
    pop rx624_rep, rx624_bstack
    pop rx624_pos, rx624_bstack
    pop $I19, rx624_bstack
    lt rx624_pos, -1, rx624_done1372
    lt rx624_pos, 0, rx624_fail1374
    eq $I19, 0, rx624_fail1374
    nqp_islist $I20, rx624_cstack
    unless $I20, rx624_jump1375
    elements $I18, rx624_bstack
    le $I18, 0, rx624_cut1376
    dec $I18
    set $I18, rx624_bstack[$I18]
  rx624_cut1376:
    assign rx624_cstack, $I18
  rx624_jump1375:
    jump $I19
  rx624_done1372:
    rx624_cur."!cursor_fail"()
    .return (rx624_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<scope_declarator>" :subid("cuid_88_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 920
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx627_start
    .local string rx627_tgt
    .local int rx627_pos
    .local int rx627_off
    .local int rx627_eos
    .local int rx627_rep
    .local pmc rx627_cur
    .local pmc rx627_curclass
    .local pmc rx627_bstack
    .local pmc rx627_cstack
    rx627_start = self."!cursor_start_all"()
    set rx627_cur, rx627_start[0]
    set rx627_tgt, rx627_start[1]
    set rx627_pos, rx627_start[2]
    set rx627_curclass, rx627_start[3]
    set rx627_bstack, rx627_start[4]
    set $I19, rx627_start[5]
    store_lex unicode:"$\x{a2}", rx627_cur
    length rx627_eos, rx627_tgt
    eq $I19, 1, rx627_restart1384
    gt rx627_pos, rx627_eos, rx627_fail1385
    repr_get_attr_int $I11, self, rx627_curclass, "$!from"
    ne $I11, -1, rxscan628_done1391
    goto rxscan628_scan1390
  rxscan628_loop1389:
    inc rx627_pos
    gt rx627_pos, rx627_eos, rx627_fail1385
    repr_bind_attr_int rx627_cur, rx627_curclass, "$!from", rx627_pos
  rxscan628_scan1390:
    nqp_rxmark rx627_bstack, rxscan628_loop1389, rx627_pos, 0
  rxscan628_done1391:
    repr_bind_attr_int rx627_cur, rx627_curclass, "$!pos", rx627_pos
    $P11 = rx627_cur."scope_declarator"()
    repr_get_attr_int $I11, $P11, rx627_curclass, "$!pos"
    lt $I11, 0, rx627_fail1385
    nqp_rxmark rx627_bstack, rxsubrule629_pass1392, -1, 0
  rxsubrule629_pass1392:
    rx627_cstack = rx627_cur."!cursor_capture"($P11, "scope_declarator")
    repr_get_attr_int rx627_pos, $P11, rx627_curclass, "$!pos"
    rx627_cur."!cursor_pass"(rx627_pos, "term:sym<scope_declarator>", 'backtrack'=>1)
    .return (rx627_cur)
  rx627_restart1384:
    repr_get_attr_obj rx627_cstack, rx627_cur, rx627_curclass, "$!cstack"
  rx627_fail1385:
    unless rx627_bstack, rx627_done1383
    pop $I19, rx627_bstack
    if_null rx627_cstack, rx627_cstack_done1388
    unless rx627_cstack, rx627_cstack_done1388
    dec $I19
    set $P11, rx627_cstack[$I19]
  rx627_cstack_done1388:
    pop rx627_rep, rx627_bstack
    pop rx627_pos, rx627_bstack
    pop $I19, rx627_bstack
    lt rx627_pos, -1, rx627_done1383
    lt rx627_pos, 0, rx627_fail1385
    eq $I19, 0, rx627_fail1385
    nqp_islist $I20, rx627_cstack
    unless $I20, rx627_jump1386
    elements $I18, rx627_bstack
    le $I18, 0, rx627_cut1387
    dec $I18
    set $I18, rx627_bstack[$I18]
  rx627_cut1387:
    assign rx627_cstack, $I18
  rx627_jump1386:
    jump $I19
  rx627_done1383:
    rx627_cur."!cursor_fail"()
    .return (rx627_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<routine_declarator>" :subid("cuid_89_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 921
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx630_start
    .local string rx630_tgt
    .local int rx630_pos
    .local int rx630_off
    .local int rx630_eos
    .local int rx630_rep
    .local pmc rx630_cur
    .local pmc rx630_curclass
    .local pmc rx630_bstack
    .local pmc rx630_cstack
    rx630_start = self."!cursor_start_all"()
    set rx630_cur, rx630_start[0]
    set rx630_tgt, rx630_start[1]
    set rx630_pos, rx630_start[2]
    set rx630_curclass, rx630_start[3]
    set rx630_bstack, rx630_start[4]
    set $I19, rx630_start[5]
    store_lex unicode:"$\x{a2}", rx630_cur
    length rx630_eos, rx630_tgt
    eq $I19, 1, rx630_restart1395
    gt rx630_pos, rx630_eos, rx630_fail1396
    repr_get_attr_int $I11, self, rx630_curclass, "$!from"
    ne $I11, -1, rxscan631_done1402
    goto rxscan631_scan1401
  rxscan631_loop1400:
    inc rx630_pos
    gt rx630_pos, rx630_eos, rx630_fail1396
    repr_bind_attr_int rx630_cur, rx630_curclass, "$!from", rx630_pos
  rxscan631_scan1401:
    nqp_rxmark rx630_bstack, rxscan631_loop1400, rx630_pos, 0
  rxscan631_done1402:
    repr_bind_attr_int rx630_cur, rx630_curclass, "$!pos", rx630_pos
    $P11 = rx630_cur."routine_declarator"()
    repr_get_attr_int $I11, $P11, rx630_curclass, "$!pos"
    lt $I11, 0, rx630_fail1396
    nqp_rxmark rx630_bstack, rxsubrule632_pass1403, -1, 0
  rxsubrule632_pass1403:
    rx630_cstack = rx630_cur."!cursor_capture"($P11, "routine_declarator")
    repr_get_attr_int rx630_pos, $P11, rx630_curclass, "$!pos"
    rx630_cur."!cursor_pass"(rx630_pos, "term:sym<routine_declarator>", 'backtrack'=>1)
    .return (rx630_cur)
  rx630_restart1395:
    repr_get_attr_obj rx630_cstack, rx630_cur, rx630_curclass, "$!cstack"
  rx630_fail1396:
    unless rx630_bstack, rx630_done1394
    pop $I19, rx630_bstack
    if_null rx630_cstack, rx630_cstack_done1399
    unless rx630_cstack, rx630_cstack_done1399
    dec $I19
    set $P11, rx630_cstack[$I19]
  rx630_cstack_done1399:
    pop rx630_rep, rx630_bstack
    pop rx630_pos, rx630_bstack
    pop $I19, rx630_bstack
    lt rx630_pos, -1, rx630_done1394
    lt rx630_pos, 0, rx630_fail1396
    eq $I19, 0, rx630_fail1396
    nqp_islist $I20, rx630_cstack
    unless $I20, rx630_jump1397
    elements $I18, rx630_bstack
    le $I18, 0, rx630_cut1398
    dec $I18
    set $I18, rx630_bstack[$I18]
  rx630_cut1398:
    assign rx630_cstack, $I18
  rx630_jump1397:
    jump $I19
  rx630_done1394:
    rx630_cur."!cursor_fail"()
    .return (rx630_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<multi_declarator>" :subid("cuid_90_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 922
    .param pmc _lex_param_0 
    .const 'Sub' $P5003 = 'cuid_91_1365879995.227' 
    capture_lex $P5003 
    .const 'Sub' $P5003 = 'cuid_92_1365879995.227' 
    capture_lex $P5003 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx633_start
    .local string rx633_tgt
    .local int rx633_pos
    .local int rx633_off
    .local int rx633_eos
    .local int rx633_rep
    .local pmc rx633_cur
    .local pmc rx633_curclass
    .local pmc rx633_bstack
    .local pmc rx633_cstack
    rx633_start = self."!cursor_start_all"()
    set rx633_cur, rx633_start[0]
    set rx633_tgt, rx633_start[1]
    set rx633_pos, rx633_start[2]
    set rx633_curclass, rx633_start[3]
    set rx633_bstack, rx633_start[4]
    set $I19, rx633_start[5]
    store_lex unicode:"$\x{a2}", rx633_cur
    length rx633_eos, rx633_tgt
    eq $I19, 1, rx633_restart1406
    gt rx633_pos, rx633_eos, rx633_fail1407
    repr_get_attr_int $I11, self, rx633_curclass, "$!from"
    ne $I11, -1, rxscan634_done1413
    goto rxscan634_scan1412
  rxscan634_loop1411:
    inc rx633_pos
    gt rx633_pos, rx633_eos, rx633_fail1407
    repr_bind_attr_int rx633_cur, rx633_curclass, "$!from", rx633_pos
  rxscan634_scan1412:
    nqp_rxmark rx633_bstack, rxscan634_loop1411, rx633_pos, 0
  rxscan634_done1413:
    .const 'Sub' $P5001 = 'cuid_91_1365879995.227' 
    capture_lex $P5001
    repr_bind_attr_int rx633_cur, rx633_curclass, "$!pos", rx633_pos
    $P11 = rx633_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx633_curclass, "$!pos"
    lt $I11, 0, rx633_fail1407
    .const 'Sub' $P5002 = 'cuid_92_1365879995.227' 
    capture_lex $P5002
    repr_bind_attr_int rx633_cur, rx633_curclass, "$!pos", rx633_pos
    $P11 = rx633_cur."before"($P5002)
    repr_get_attr_int $I11, $P11, rx633_curclass, "$!pos"
    ge $I11, 0, rx633_fail1407
    repr_bind_attr_int rx633_cur, rx633_curclass, "$!pos", rx633_pos
    $P11 = rx633_cur."multi_declarator"()
    repr_get_attr_int $I11, $P11, rx633_curclass, "$!pos"
    lt $I11, 0, rx633_fail1407
    nqp_rxmark rx633_bstack, rxsubrule642_pass1443, -1, 0
  rxsubrule642_pass1443:
    rx633_cstack = rx633_cur."!cursor_capture"($P11, "multi_declarator")
    repr_get_attr_int rx633_pos, $P11, rx633_curclass, "$!pos"
    rx633_cur."!cursor_pass"(rx633_pos, "term:sym<multi_declarator>", 'backtrack'=>1)
    .return (rx633_cur)
  rx633_restart1406:
    repr_get_attr_obj rx633_cstack, rx633_cur, rx633_curclass, "$!cstack"
  rx633_fail1407:
    unless rx633_bstack, rx633_done1405
    pop $I19, rx633_bstack
    if_null rx633_cstack, rx633_cstack_done1410
    unless rx633_cstack, rx633_cstack_done1410
    dec $I19
    set $P11, rx633_cstack[$I19]
  rx633_cstack_done1410:
    pop rx633_rep, rx633_bstack
    pop rx633_pos, rx633_bstack
    pop $I19, rx633_bstack
    lt rx633_pos, -1, rx633_done1405
    lt rx633_pos, 0, rx633_fail1407
    eq $I19, 0, rx633_fail1407
    nqp_islist $I20, rx633_cstack
    unless $I20, rx633_jump1408
    elements $I18, rx633_bstack
    le $I18, 0, rx633_cut1409
    dec $I18
    set $I18, rx633_bstack[$I18]
  rx633_cut1409:
    assign rx633_cstack, $I18
  rx633_jump1408:
    jump $I19
  rx633_done1405:
    rx633_cur."!cursor_fail"()
    .return (rx633_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_91_1365879995.227") :anon :lex :outer("cuid_90_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx635_start
    .local string rx635_tgt
    .local int rx635_pos
    .local int rx635_off
    .local int rx635_eos
    .local int rx635_rep
    .local pmc rx635_cur
    .local pmc rx635_curclass
    .local pmc rx635_bstack
    .local pmc rx635_cstack
    rx635_start = self."!cursor_start_all"()
    set rx635_cur, rx635_start[0]
    set rx635_tgt, rx635_start[1]
    set rx635_pos, rx635_start[2]
    set rx635_curclass, rx635_start[3]
    set rx635_bstack, rx635_start[4]
    set $I19, rx635_start[5]
    store_lex unicode:"$\x{a2}", rx635_cur
    length rx635_eos, rx635_tgt
    eq $I19, 1, rx635_restart1416
    gt rx635_pos, rx635_eos, rx635_fail1417
    repr_get_attr_int $I11, self, rx635_curclass, "$!from"
    ne $I11, -1, rxscan636_done1423
    goto rxscan636_scan1422
  rxscan636_loop1421:
    inc rx635_pos
    gt rx635_pos, rx635_eos, rx635_fail1417
    repr_bind_attr_int rx635_cur, rx635_curclass, "$!from", rx635_pos
  rxscan636_scan1422:
    nqp_rxmark rx635_bstack, rxscan636_loop1421, rx635_pos, 0
  rxscan636_done1423:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt637_01425
    nqp_push_label $P11, alt637_11426
    nqp_push_label $P11, alt637_21427
    nqp_rxmark rx635_bstack, alt637_end1424, -1, 0
    rx635_cur."!alt"(rx635_pos, "alt_nfa__17_1365879997.153", $P11)
    goto rx635_fail1417
  alt637_01425:
    add $I11, rx635_pos, 5
    gt $I11, rx635_eos, rx635_fail1417
    substr $S10, rx635_tgt, rx635_pos, 5
    ne $S10, ucs4:"multi", rx635_fail1417
    add rx635_pos, 5
    goto alt637_end1424
  alt637_11426:
    add $I11, rx635_pos, 5
    gt $I11, rx635_eos, rx635_fail1417
    substr $S10, rx635_tgt, rx635_pos, 5
    ne $S10, ucs4:"proto", rx635_fail1417
    add rx635_pos, 5
    goto alt637_end1424
  alt637_21427:
    add $I11, rx635_pos, 4
    gt $I11, rx635_eos, rx635_fail1417
    substr $S10, rx635_tgt, rx635_pos, 4
    ne $S10, ucs4:"only", rx635_fail1417
    add rx635_pos, 4
    goto alt637_end1424
  alt637_end1424:
    rx635_cur."!cursor_pass"(rx635_pos, 'backtrack'=>1)
    .return (rx635_cur)
  rx635_restart1416:
    repr_get_attr_obj rx635_cstack, rx635_cur, rx635_curclass, "$!cstack"
  rx635_fail1417:
    unless rx635_bstack, rx635_done1415
    pop $I19, rx635_bstack
    if_null rx635_cstack, rx635_cstack_done1420
    unless rx635_cstack, rx635_cstack_done1420
    dec $I19
    set $P11, rx635_cstack[$I19]
  rx635_cstack_done1420:
    pop rx635_rep, rx635_bstack
    pop rx635_pos, rx635_bstack
    pop $I19, rx635_bstack
    lt rx635_pos, -1, rx635_done1415
    lt rx635_pos, 0, rx635_fail1417
    eq $I19, 0, rx635_fail1417
    nqp_islist $I20, rx635_cstack
    unless $I20, rx635_jump1418
    elements $I18, rx635_bstack
    le $I18, 0, rx635_cut1419
    dec $I18
    set $I18, rx635_bstack[$I18]
  rx635_cut1419:
    assign rx635_cstack, $I18
  rx635_jump1418:
    jump $I19
  rx635_done1415:
    rx635_cur."!cursor_fail"()
    .return (rx635_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_92_1365879995.227") :anon :lex :outer("cuid_90_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx638_start
    .local string rx638_tgt
    .local int rx638_pos
    .local int rx638_off
    .local int rx638_eos
    .local int rx638_rep
    .local pmc rx638_cur
    .local pmc rx638_curclass
    .local pmc rx638_bstack
    .local pmc rx638_cstack
    rx638_start = self."!cursor_start_all"()
    set rx638_cur, rx638_start[0]
    set rx638_tgt, rx638_start[1]
    set rx638_pos, rx638_start[2]
    set rx638_curclass, rx638_start[3]
    set rx638_bstack, rx638_start[4]
    set $I19, rx638_start[5]
    store_lex unicode:"$\x{a2}", rx638_cur
    length rx638_eos, rx638_tgt
    eq $I19, 1, rx638_restart1430
    gt rx638_pos, rx638_eos, rx638_fail1431
    repr_get_attr_int $I11, self, rx638_curclass, "$!from"
    ne $I11, -1, rxscan639_done1437
    goto rxscan639_scan1436
  rxscan639_loop1435:
    inc rx638_pos
    gt rx638_pos, rx638_eos, rx638_fail1431
    repr_bind_attr_int rx638_cur, rx638_curclass, "$!from", rx638_pos
  rxscan639_scan1436:
    nqp_rxmark rx638_bstack, rxscan639_loop1435, rx638_pos, 0
  rxscan639_done1437:
    add $I11, rx638_pos, 5
    gt $I11, rx638_eos, rx638_fail1431
    substr $S10, rx638_tgt, rx638_pos, 5
    ne $S10, ucs4:"proto", rx638_fail1431
    add rx638_pos, 5
    repr_bind_attr_int rx638_cur, rx638_curclass, "$!pos", rx638_pos
    $P11 = rx638_cur."ws"()
    repr_get_attr_int $I11, $P11, rx638_curclass, "$!pos"
    lt $I11, 0, rx638_fail1431
    repr_get_attr_int rx638_pos, $P11, rx638_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt641_01440
    nqp_push_label $P11, alt641_11441
    nqp_push_label $P11, alt641_21442
    nqp_rxmark rx638_bstack, alt641_end1439, -1, 0
    rx638_cur."!alt"(rx638_pos, "alt_nfa__18_1365879997.162", $P11)
    goto rx638_fail1431
  alt641_01440:
    add $I11, rx638_pos, 5
    gt $I11, rx638_eos, rx638_fail1431
    substr $S10, rx638_tgt, rx638_pos, 5
    ne $S10, ucs4:"regex", rx638_fail1431
    add rx638_pos, 5
    goto alt641_end1439
  alt641_11441:
    add $I11, rx638_pos, 5
    gt $I11, rx638_eos, rx638_fail1431
    substr $S10, rx638_tgt, rx638_pos, 5
    ne $S10, ucs4:"token", rx638_fail1431
    add rx638_pos, 5
    goto alt641_end1439
  alt641_21442:
    add $I11, rx638_pos, 4
    gt $I11, rx638_eos, rx638_fail1431
    substr $S10, rx638_tgt, rx638_pos, 4
    ne $S10, ucs4:"rule", rx638_fail1431
    add rx638_pos, 4
    goto alt641_end1439
  alt641_end1439:
    nqp_rxcommit rx638_bstack, alt641_end1439
    rx638_cur."!cursor_pass"(rx638_pos, 'backtrack'=>1)
    .return (rx638_cur)
  rx638_restart1430:
    repr_get_attr_obj rx638_cstack, rx638_cur, rx638_curclass, "$!cstack"
  rx638_fail1431:
    unless rx638_bstack, rx638_done1429
    pop $I19, rx638_bstack
    if_null rx638_cstack, rx638_cstack_done1434
    unless rx638_cstack, rx638_cstack_done1434
    dec $I19
    set $P11, rx638_cstack[$I19]
  rx638_cstack_done1434:
    pop rx638_rep, rx638_bstack
    pop rx638_pos, rx638_bstack
    pop $I19, rx638_bstack
    lt rx638_pos, -1, rx638_done1429
    lt rx638_pos, 0, rx638_fail1431
    eq $I19, 0, rx638_fail1431
    nqp_islist $I20, rx638_cstack
    unless $I20, rx638_jump1432
    elements $I18, rx638_bstack
    le $I18, 0, rx638_cut1433
    dec $I18
    set $I18, rx638_bstack[$I18]
  rx638_cut1433:
    assign rx638_cstack, $I18
  rx638_jump1432:
    jump $I19
  rx638_done1429:
    rx638_cur."!cursor_fail"()
    .return (rx638_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<regex_declarator>" :subid("cuid_93_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 927
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx643_start
    .local string rx643_tgt
    .local int rx643_pos
    .local int rx643_off
    .local int rx643_eos
    .local int rx643_rep
    .local pmc rx643_cur
    .local pmc rx643_curclass
    .local pmc rx643_bstack
    .local pmc rx643_cstack
    rx643_start = self."!cursor_start_all"()
    set rx643_cur, rx643_start[0]
    set rx643_tgt, rx643_start[1]
    set rx643_pos, rx643_start[2]
    set rx643_curclass, rx643_start[3]
    set rx643_bstack, rx643_start[4]
    set $I19, rx643_start[5]
    store_lex unicode:"$\x{a2}", rx643_cur
    length rx643_eos, rx643_tgt
    eq $I19, 1, rx643_restart1446
    gt rx643_pos, rx643_eos, rx643_fail1447
    repr_get_attr_int $I11, self, rx643_curclass, "$!from"
    ne $I11, -1, rxscan644_done1453
    goto rxscan644_scan1452
  rxscan644_loop1451:
    inc rx643_pos
    gt rx643_pos, rx643_eos, rx643_fail1447
    repr_bind_attr_int rx643_cur, rx643_curclass, "$!from", rx643_pos
  rxscan644_scan1452:
    nqp_rxmark rx643_bstack, rxscan644_loop1451, rx643_pos, 0
  rxscan644_done1453:
    repr_bind_attr_int rx643_cur, rx643_curclass, "$!pos", rx643_pos
    $P11 = rx643_cur."regex_declarator"()
    repr_get_attr_int $I11, $P11, rx643_curclass, "$!pos"
    lt $I11, 0, rx643_fail1447
    nqp_rxmark rx643_bstack, rxsubrule645_pass1454, -1, 0
  rxsubrule645_pass1454:
    rx643_cstack = rx643_cur."!cursor_capture"($P11, "regex_declarator")
    repr_get_attr_int rx643_pos, $P11, rx643_curclass, "$!pos"
    rx643_cur."!cursor_pass"(rx643_pos, "term:sym<regex_declarator>", 'backtrack'=>1)
    .return (rx643_cur)
  rx643_restart1446:
    repr_get_attr_obj rx643_cstack, rx643_cur, rx643_curclass, "$!cstack"
  rx643_fail1447:
    unless rx643_bstack, rx643_done1445
    pop $I19, rx643_bstack
    if_null rx643_cstack, rx643_cstack_done1450
    unless rx643_cstack, rx643_cstack_done1450
    dec $I19
    set $P11, rx643_cstack[$I19]
  rx643_cstack_done1450:
    pop rx643_rep, rx643_bstack
    pop rx643_pos, rx643_bstack
    pop $I19, rx643_bstack
    lt rx643_pos, -1, rx643_done1445
    lt rx643_pos, 0, rx643_fail1447
    eq $I19, 0, rx643_fail1447
    nqp_islist $I20, rx643_cstack
    unless $I20, rx643_jump1448
    elements $I18, rx643_bstack
    le $I18, 0, rx643_cut1449
    dec $I18
    set $I18, rx643_bstack[$I18]
  rx643_cut1449:
    assign rx643_cstack, $I18
  rx643_jump1448:
    jump $I19
  rx643_done1445:
    rx643_cur."!cursor_fail"()
    .return (rx643_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<statement_prefix>" :subid("cuid_94_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 928
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx646_start
    .local string rx646_tgt
    .local int rx646_pos
    .local int rx646_off
    .local int rx646_eos
    .local int rx646_rep
    .local pmc rx646_cur
    .local pmc rx646_curclass
    .local pmc rx646_bstack
    .local pmc rx646_cstack
    rx646_start = self."!cursor_start_all"()
    set rx646_cur, rx646_start[0]
    set rx646_tgt, rx646_start[1]
    set rx646_pos, rx646_start[2]
    set rx646_curclass, rx646_start[3]
    set rx646_bstack, rx646_start[4]
    set $I19, rx646_start[5]
    store_lex unicode:"$\x{a2}", rx646_cur
    length rx646_eos, rx646_tgt
    eq $I19, 1, rx646_restart1457
    gt rx646_pos, rx646_eos, rx646_fail1458
    repr_get_attr_int $I11, self, rx646_curclass, "$!from"
    ne $I11, -1, rxscan647_done1464
    goto rxscan647_scan1463
  rxscan647_loop1462:
    inc rx646_pos
    gt rx646_pos, rx646_eos, rx646_fail1458
    repr_bind_attr_int rx646_cur, rx646_curclass, "$!from", rx646_pos
  rxscan647_scan1463:
    nqp_rxmark rx646_bstack, rxscan647_loop1462, rx646_pos, 0
  rxscan647_done1464:
    repr_bind_attr_int rx646_cur, rx646_curclass, "$!pos", rx646_pos
    $P11 = rx646_cur."statement_prefix"()
    repr_get_attr_int $I11, $P11, rx646_curclass, "$!pos"
    lt $I11, 0, rx646_fail1458
    nqp_rxmark rx646_bstack, rxsubrule648_pass1465, -1, 0
  rxsubrule648_pass1465:
    rx646_cstack = rx646_cur."!cursor_capture"($P11, "statement_prefix")
    repr_get_attr_int rx646_pos, $P11, rx646_curclass, "$!pos"
    rx646_cur."!cursor_pass"(rx646_pos, "term:sym<statement_prefix>", 'backtrack'=>1)
    .return (rx646_cur)
  rx646_restart1457:
    repr_get_attr_obj rx646_cstack, rx646_cur, rx646_curclass, "$!cstack"
  rx646_fail1458:
    unless rx646_bstack, rx646_done1456
    pop $I19, rx646_bstack
    if_null rx646_cstack, rx646_cstack_done1461
    unless rx646_cstack, rx646_cstack_done1461
    dec $I19
    set $P11, rx646_cstack[$I19]
  rx646_cstack_done1461:
    pop rx646_rep, rx646_bstack
    pop rx646_pos, rx646_bstack
    pop $I19, rx646_bstack
    lt rx646_pos, -1, rx646_done1456
    lt rx646_pos, 0, rx646_fail1458
    eq $I19, 0, rx646_fail1458
    nqp_islist $I20, rx646_cstack
    unless $I20, rx646_jump1459
    elements $I18, rx646_bstack
    le $I18, 0, rx646_cut1460
    dec $I18
    set $I18, rx646_bstack[$I18]
  rx646_cut1460:
    assign rx646_cstack, $I18
  rx646_jump1459:
    jump $I19
  rx646_done1456:
    rx646_cur."!cursor_fail"()
    .return (rx646_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<lambda>" :subid("cuid_95_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 929
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx649_start
    .local string rx649_tgt
    .local int rx649_pos
    .local int rx649_off
    .local int rx649_eos
    .local int rx649_rep
    .local pmc rx649_cur
    .local pmc rx649_curclass
    .local pmc rx649_bstack
    .local pmc rx649_cstack
    rx649_start = self."!cursor_start_all"()
    set rx649_cur, rx649_start[0]
    set rx649_tgt, rx649_start[1]
    set rx649_pos, rx649_start[2]
    set rx649_curclass, rx649_start[3]
    set rx649_bstack, rx649_start[4]
    set $I19, rx649_start[5]
    store_lex unicode:"$\x{a2}", rx649_cur
    length rx649_eos, rx649_tgt
    eq $I19, 1, rx649_restart1468
    gt rx649_pos, rx649_eos, rx649_fail1469
    repr_get_attr_int $I11, self, rx649_curclass, "$!from"
    ne $I11, -1, rxscan650_done1475
    goto rxscan650_scan1474
  rxscan650_loop1473:
    inc rx649_pos
    gt rx649_pos, rx649_eos, rx649_fail1469
    repr_bind_attr_int rx649_cur, rx649_curclass, "$!from", rx649_pos
  rxscan650_scan1474:
    nqp_rxmark rx649_bstack, rxscan650_loop1473, rx649_pos, 0
  rxscan650_done1475:
    repr_bind_attr_int rx649_cur, rx649_curclass, "$!pos", rx649_pos
    $P11 = rx649_cur."lambda"()
    repr_get_attr_int $I11, $P11, rx649_curclass, "$!pos"
    lt $I11, 0, rx649_fail1469
    repr_bind_attr_int rx649_cur, rx649_curclass, "$!pos", rx649_pos
    $P11 = rx649_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx649_curclass, "$!pos"
    lt $I11, 0, rx649_fail1469
    nqp_rxmark rx649_bstack, rxsubrule651_pass1476, -1, 0
  rxsubrule651_pass1476:
    rx649_cstack = rx649_cur."!cursor_capture"($P11, "pblock")
    repr_get_attr_int rx649_pos, $P11, rx649_curclass, "$!pos"
    rx649_cur."!cursor_pass"(rx649_pos, "term:sym<lambda>", 'backtrack'=>1)
    .return (rx649_cur)
  rx649_restart1468:
    repr_get_attr_obj rx649_cstack, rx649_cur, rx649_curclass, "$!cstack"
  rx649_fail1469:
    unless rx649_bstack, rx649_done1467
    pop $I19, rx649_bstack
    if_null rx649_cstack, rx649_cstack_done1472
    unless rx649_cstack, rx649_cstack_done1472
    dec $I19
    set $P11, rx649_cstack[$I19]
  rx649_cstack_done1472:
    pop rx649_rep, rx649_bstack
    pop rx649_pos, rx649_bstack
    pop $I19, rx649_bstack
    lt rx649_pos, -1, rx649_done1467
    lt rx649_pos, 0, rx649_fail1469
    eq $I19, 0, rx649_fail1469
    nqp_islist $I20, rx649_cstack
    unless $I20, rx649_jump1470
    elements $I18, rx649_bstack
    le $I18, 0, rx649_cut1471
    dec $I18
    set $I18, rx649_bstack[$I18]
  rx649_cut1471:
    assign rx649_cstack, $I18
  rx649_jump1470:
    jump $I19
  rx649_done1467:
    rx649_cur."!cursor_fail"()
    .return (rx649_cur) 
.end
.HLL "nqp"
.namespace []
.sub "fatarrow" :subid("cuid_96_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 931
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx652_start
    .local string rx652_tgt
    .local int rx652_pos
    .local int rx652_off
    .local int rx652_eos
    .local int rx652_rep
    .local pmc rx652_cur
    .local pmc rx652_curclass
    .local pmc rx652_bstack
    .local pmc rx652_cstack
    rx652_start = self."!cursor_start_all"()
    set rx652_cur, rx652_start[0]
    set rx652_tgt, rx652_start[1]
    set rx652_pos, rx652_start[2]
    set rx652_curclass, rx652_start[3]
    set rx652_bstack, rx652_start[4]
    set $I19, rx652_start[5]
    store_lex unicode:"$\x{a2}", rx652_cur
    length rx652_eos, rx652_tgt
    eq $I19, 1, rx652_restart1479
    gt rx652_pos, rx652_eos, rx652_fail1480
    repr_get_attr_int $I11, self, rx652_curclass, "$!from"
    ne $I11, -1, rxscan653_done1486
    goto rxscan653_scan1485
  rxscan653_loop1484:
    inc rx652_pos
    gt rx652_pos, rx652_eos, rx652_fail1480
    repr_bind_attr_int rx652_cur, rx652_curclass, "$!from", rx652_pos
  rxscan653_scan1485:
    nqp_rxmark rx652_bstack, rxscan653_loop1484, rx652_pos, 0
  rxscan653_done1486:
    repr_bind_attr_int rx652_cur, rx652_curclass, "$!pos", rx652_pos
    $P11 = rx652_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx652_curclass, "$!pos"
    lt $I11, 0, rx652_fail1480
    nqp_rxmark rx652_bstack, rxsubrule654_pass1487, -1, 0
  rxsubrule654_pass1487:
    rx652_cstack = rx652_cur."!cursor_capture"($P11, "key")
    repr_get_attr_int rx652_pos, $P11, rx652_curclass, "$!pos"
    nqp_rxmark rx652_bstack, rxquantr655_done1489, rx652_pos, 0
  rxquantr655_loop1488:
    ge rx652_pos, rx652_eos, rx652_fail1480
    substr $S11, rx652_tgt, rx652_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx652_fail1480
    inc rx652_pos
    nqp_rxpeek $I19, rx652_bstack, rxquantr655_done1489
    inc $I19
    inc $I19
    set rx652_rep, rx652_bstack[$I19]
    nqp_rxcommit rx652_bstack, rxquantr655_done1489
    inc rx652_rep
    nqp_rxmark rx652_bstack, rxquantr655_done1489, rx652_pos, rx652_rep
    goto rxquantr655_loop1488
  rxquantr655_done1489:
    add $I11, rx652_pos, 2
    gt $I11, rx652_eos, rx652_fail1480
    substr $S10, rx652_tgt, rx652_pos, 2
    ne $S10, ucs4:"=>", rx652_fail1480
    add rx652_pos, 2
    repr_bind_attr_int rx652_cur, rx652_curclass, "$!pos", rx652_pos
    $P11 = rx652_cur."ws"()
    repr_get_attr_int $I11, $P11, rx652_curclass, "$!pos"
    lt $I11, 0, rx652_fail1480
    repr_get_attr_int rx652_pos, $P11, rx652_curclass, "$!pos"
    repr_bind_attr_int rx652_cur, rx652_curclass, "$!pos", rx652_pos
    $P11 = rx652_cur."EXPR"("i=")
    repr_get_attr_int $I11, $P11, rx652_curclass, "$!pos"
    lt $I11, 0, rx652_fail1480
    nqp_rxmark rx652_bstack, rxsubrule657_pass1491, -1, 0
  rxsubrule657_pass1491:
    rx652_cstack = rx652_cur."!cursor_capture"($P11, "val")
    repr_get_attr_int rx652_pos, $P11, rx652_curclass, "$!pos"
    rx652_cur."!cursor_pass"(rx652_pos, "fatarrow", 'backtrack'=>1)
    .return (rx652_cur)
  rx652_restart1479:
    repr_get_attr_obj rx652_cstack, rx652_cur, rx652_curclass, "$!cstack"
  rx652_fail1480:
    unless rx652_bstack, rx652_done1478
    pop $I19, rx652_bstack
    if_null rx652_cstack, rx652_cstack_done1483
    unless rx652_cstack, rx652_cstack_done1483
    dec $I19
    set $P11, rx652_cstack[$I19]
  rx652_cstack_done1483:
    pop rx652_rep, rx652_bstack
    pop rx652_pos, rx652_bstack
    pop $I19, rx652_bstack
    lt rx652_pos, -1, rx652_done1478
    lt rx652_pos, 0, rx652_fail1480
    eq $I19, 0, rx652_fail1480
    nqp_islist $I20, rx652_cstack
    unless $I20, rx652_jump1481
    elements $I18, rx652_bstack
    le $I18, 0, rx652_cut1482
    dec $I18
    set $I18, rx652_bstack[$I18]
  rx652_cut1482:
    assign rx652_cstack, $I18
  rx652_jump1481:
    jump $I19
  rx652_done1478:
    rx652_cur."!cursor_fail"()
    .return (rx652_cur) 
.end
.HLL "nqp"
.namespace []
.sub "colonpair" :subid("cuid_97_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 935
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx658_start
    .local string rx658_tgt
    .local int rx658_pos
    .local int rx658_off
    .local int rx658_eos
    .local int rx658_rep
    .local pmc rx658_cur
    .local pmc rx658_curclass
    .local pmc rx658_bstack
    .local pmc rx658_cstack
    rx658_start = self."!cursor_start_all"()
    set rx658_cur, rx658_start[0]
    set rx658_tgt, rx658_start[1]
    set rx658_pos, rx658_start[2]
    set rx658_curclass, rx658_start[3]
    set rx658_bstack, rx658_start[4]
    set $I19, rx658_start[5]
    store_lex unicode:"$\x{a2}", rx658_cur
    length rx658_eos, rx658_tgt
    eq $I19, 1, rx658_restart1494
    gt rx658_pos, rx658_eos, rx658_fail1495
    repr_get_attr_int $I11, self, rx658_curclass, "$!from"
    ne $I11, -1, rxscan659_done1501
    goto rxscan659_scan1500
  rxscan659_loop1499:
    inc rx658_pos
    gt rx658_pos, rx658_eos, rx658_fail1495
    repr_bind_attr_int rx658_cur, rx658_curclass, "$!from", rx658_pos
  rxscan659_scan1500:
    nqp_rxmark rx658_bstack, rxscan659_loop1499, rx658_pos, 0
  rxscan659_done1501:
    add $I11, rx658_pos, 1
    gt $I11, rx658_eos, rx658_fail1495
    substr $S10, rx658_tgt, rx658_pos, 1
    ne $S10, ucs4:":", rx658_fail1495
    add rx658_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt660_01503
    nqp_push_label $P11, alt660_11507
    nqp_push_label $P11, alt660_21513
    nqp_push_label $P11, alt660_31515
    nqp_rxmark rx658_bstack, alt660_end1502, -1, 0
    rx658_cur."!alt"(rx658_pos, "alt_nfa__19_1365879997.207", $P11)
    goto rx658_fail1495
  alt660_01503:
    nqp_rxmark rx658_bstack, rxcap661_fail1505, rx658_pos, 0
    add $I11, rx658_pos, 1
    gt $I11, rx658_eos, rx658_fail1495
    substr $S10, rx658_tgt, rx658_pos, 1
    ne $S10, ucs4:"!", rx658_fail1495
    add rx658_pos, 1
    nqp_rxpeek $I19, rx658_bstack, rxcap661_fail1505
    inc $I19
    set $I11, rx658_bstack[$I19]
    repr_bind_attr_int rx658_cur, rx658_curclass, "$!pos", rx658_pos
    $P11 = rx658_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx658_pos)
    rx658_cstack = rx658_cur."!cursor_capture"($P11, "not")
    goto rxcap661_done1504
  rxcap661_fail1505:
    goto rx658_fail1495
  rxcap661_done1504:
    repr_bind_attr_int rx658_cur, rx658_curclass, "$!pos", rx658_pos
    $P11 = rx658_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx658_curclass, "$!pos"
    lt $I11, 0, rx658_fail1495
    nqp_rxmark rx658_bstack, rxsubrule662_pass1506, -1, 0
  rxsubrule662_pass1506:
    rx658_cstack = rx658_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx658_pos, $P11, rx658_curclass, "$!pos"
    goto alt660_end1502
  alt660_11507:
    repr_bind_attr_int rx658_cur, rx658_curclass, "$!pos", rx658_pos
    $P11 = rx658_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx658_curclass, "$!pos"
    lt $I11, 0, rx658_fail1495
    nqp_rxmark rx658_bstack, rxsubrule663_pass1508, -1, 0
  rxsubrule663_pass1508:
    rx658_cstack = rx658_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx658_pos, $P11, rx658_curclass, "$!pos"
    nqp_rxmark rx658_bstack, rxquantr664_done1510, rx658_pos, 0
  rxquantr664_loop1509:
    repr_bind_attr_int rx658_cur, rx658_curclass, "$!pos", rx658_pos
    $P11 = rx658_cur."circumfix"()
    repr_get_attr_int $I11, $P11, rx658_curclass, "$!pos"
    lt $I11, 0, rx658_fail1495
    goto rxsubrule665_pass1511
  rxsubrule665_back1512:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx658_curclass, "$!pos"
    lt $I11, 0, rx658_fail1495
  rxsubrule665_pass1511:
    rx658_cstack = rx658_cur."!cursor_capture"($P11, "circumfix")
    set_addr $I11, rxsubrule665_back1512
    push rx658_bstack, $I11
    push rx658_bstack, 0
    push rx658_bstack, rx658_pos
    elements $I11, rx658_cstack
    push rx658_bstack, $I11
    repr_get_attr_int rx658_pos, $P11, rx658_curclass, "$!pos"
    nqp_rxpeek $I19, rx658_bstack, rxquantr664_done1510
    inc $I19
    inc $I19
    set rx658_rep, rx658_bstack[$I19]
    nqp_rxcommit rx658_bstack, rxquantr664_done1510
    inc rx658_rep
  rxquantr664_done1510:
    goto alt660_end1502
  alt660_21513:
    repr_bind_attr_int rx658_cur, rx658_curclass, "$!pos", rx658_pos
    $P11 = rx658_cur."circumfix"()
    repr_get_attr_int $I11, $P11, rx658_curclass, "$!pos"
    lt $I11, 0, rx658_fail1495
    nqp_rxmark rx658_bstack, rxsubrule666_pass1514, -1, 0
  rxsubrule666_pass1514:
    rx658_cstack = rx658_cur."!cursor_capture"($P11, "circumfix")
    repr_get_attr_int rx658_pos, $P11, rx658_curclass, "$!pos"
    goto alt660_end1502
  alt660_31515:
    repr_bind_attr_int rx658_cur, rx658_curclass, "$!pos", rx658_pos
    $P11 = rx658_cur."variable"()
    repr_get_attr_int $I11, $P11, rx658_curclass, "$!pos"
    lt $I11, 0, rx658_fail1495
    nqp_rxmark rx658_bstack, rxsubrule667_pass1516, -1, 0
  rxsubrule667_pass1516:
    rx658_cstack = rx658_cur."!cursor_capture"($P11, "variable")
    repr_get_attr_int rx658_pos, $P11, rx658_curclass, "$!pos"
    goto alt660_end1502
  alt660_end1502:
    nqp_rxcommit rx658_bstack, alt660_end1502
    rx658_cur."!cursor_pass"(rx658_pos, "colonpair", 'backtrack'=>1)
    .return (rx658_cur)
  rx658_restart1494:
    repr_get_attr_obj rx658_cstack, rx658_cur, rx658_curclass, "$!cstack"
  rx658_fail1495:
    unless rx658_bstack, rx658_done1493
    pop $I19, rx658_bstack
    if_null rx658_cstack, rx658_cstack_done1498
    unless rx658_cstack, rx658_cstack_done1498
    dec $I19
    set $P11, rx658_cstack[$I19]
  rx658_cstack_done1498:
    pop rx658_rep, rx658_bstack
    pop rx658_pos, rx658_bstack
    pop $I19, rx658_bstack
    lt rx658_pos, -1, rx658_done1493
    lt rx658_pos, 0, rx658_fail1495
    eq $I19, 0, rx658_fail1495
    nqp_islist $I20, rx658_cstack
    unless $I20, rx658_jump1496
    elements $I18, rx658_bstack
    le $I18, 0, rx658_cut1497
    dec $I18
    set $I18, rx658_bstack[$I18]
  rx658_cut1497:
    assign rx658_cstack, $I18
  rx658_jump1496:
    jump $I19
  rx658_done1493:
    rx658_cur."!cursor_fail"()
    .return (rx658_cur) 
.end
.HLL "nqp"
.namespace []
.sub "variable" :subid("cuid_98_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 945
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx668_start
    .local string rx668_tgt
    .local int rx668_pos
    .local int rx668_off
    .local int rx668_eos
    .local int rx668_rep
    .local pmc rx668_cur
    .local pmc rx668_curclass
    .local pmc rx668_bstack
    .local pmc rx668_cstack
    rx668_start = self."!cursor_start_all"()
    set rx668_cur, rx668_start[0]
    set rx668_tgt, rx668_start[1]
    set rx668_pos, rx668_start[2]
    set rx668_curclass, rx668_start[3]
    set rx668_bstack, rx668_start[4]
    set $I19, rx668_start[5]
    store_lex unicode:"$\x{a2}", rx668_cur
    length rx668_eos, rx668_tgt
    eq $I19, 1, rx668_restart1519
    gt rx668_pos, rx668_eos, rx668_fail1520
    repr_get_attr_int $I11, self, rx668_curclass, "$!from"
    ne $I11, -1, rxscan669_done1526
    goto rxscan669_scan1525
  rxscan669_loop1524:
    inc rx668_pos
    gt rx668_pos, rx668_eos, rx668_fail1520
    repr_bind_attr_int rx668_cur, rx668_curclass, "$!from", rx668_pos
  rxscan669_scan1525:
    nqp_rxmark rx668_bstack, rxscan669_loop1524, rx668_pos, 0
  rxscan669_done1526:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt670_01528
    nqp_push_label $P11, alt670_11535
    nqp_push_label $P11, alt670_21538
    nqp_push_label $P11, alt670_31546
    nqp_rxmark rx668_bstack, alt670_end1527, -1, 0
    rx668_cur."!alt"(rx668_pos, "alt_nfa__20_1365879997.228", $P11)
    goto rx668_fail1520
  alt670_01528:
    repr_bind_attr_int rx668_cur, rx668_curclass, "$!pos", rx668_pos
    $P11 = rx668_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx668_curclass, "$!pos"
    lt $I11, 0, rx668_fail1520
    nqp_rxmark rx668_bstack, rxsubrule671_pass1529, -1, 0
  rxsubrule671_pass1529:
    rx668_cstack = rx668_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx668_pos, $P11, rx668_curclass, "$!pos"
    nqp_rxmark rx668_bstack, rxquantr672_done1531, rx668_pos, 0
  rxquantr672_loop1530:
    repr_bind_attr_int rx668_cur, rx668_curclass, "$!pos", rx668_pos
    $P11 = rx668_cur."twigil"()
    repr_get_attr_int $I11, $P11, rx668_curclass, "$!pos"
    lt $I11, 0, rx668_fail1520
    goto rxsubrule673_pass1532
  rxsubrule673_back1533:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx668_curclass, "$!pos"
    lt $I11, 0, rx668_fail1520
  rxsubrule673_pass1532:
    rx668_cstack = rx668_cur."!cursor_capture"($P11, "twigil")
    set_addr $I11, rxsubrule673_back1533
    push rx668_bstack, $I11
    push rx668_bstack, 0
    push rx668_bstack, rx668_pos
    elements $I11, rx668_cstack
    push rx668_bstack, $I11
    repr_get_attr_int rx668_pos, $P11, rx668_curclass, "$!pos"
    nqp_rxpeek $I19, rx668_bstack, rxquantr672_done1531
    inc $I19
    inc $I19
    set rx668_rep, rx668_bstack[$I19]
    nqp_rxcommit rx668_bstack, rxquantr672_done1531
    inc rx668_rep
  rxquantr672_done1531:
    repr_bind_attr_int rx668_cur, rx668_curclass, "$!pos", rx668_pos
    $P11 = rx668_cur."name"()
    repr_get_attr_int $I11, $P11, rx668_curclass, "$!pos"
    lt $I11, 0, rx668_fail1520
    nqp_rxmark rx668_bstack, rxsubrule674_pass1534, -1, 0
  rxsubrule674_pass1534:
    rx668_cstack = rx668_cur."!cursor_capture"($P11, "desigilname")
    repr_get_attr_int rx668_pos, $P11, rx668_curclass, "$!pos"
    goto alt670_end1527
  alt670_11535:
    repr_bind_attr_int rx668_cur, rx668_curclass, "$!pos", rx668_pos
    $P11 = rx668_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx668_curclass, "$!pos"
    lt $I11, 0, rx668_fail1520
    nqp_rxmark rx668_bstack, rxsubrule675_pass1536, -1, 0
  rxsubrule675_pass1536:
    rx668_cstack = rx668_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx668_pos, $P11, rx668_curclass, "$!pos"
    ge rx668_pos, rx668_eos, rx668_fail1520
    substr $S11, rx668_tgt, rx668_pos, 1
    index $I11, ucs4:"<", $S11
    lt $I11, 0, rx668_fail1520
    repr_bind_attr_int rx668_cur, rx668_curclass, "$!pos", rx668_pos
    $P11 = rx668_cur."postcircumfix"()
    repr_get_attr_int $I11, $P11, rx668_curclass, "$!pos"
    lt $I11, 0, rx668_fail1520
    nqp_rxmark rx668_bstack, rxsubrule676_pass1537, -1, 0
  rxsubrule676_pass1537:
    rx668_cstack = rx668_cur."!cursor_capture"($P11, "postcircumfix")
    repr_get_attr_int rx668_pos, $P11, rx668_curclass, "$!pos"
    goto alt670_end1527
  alt670_21538:
    repr_bind_attr_int rx668_cur, rx668_curclass, "$!pos", rx668_pos
    $P11 = rx668_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx668_curclass, "$!pos"
    lt $I11, 0, rx668_fail1520
    nqp_rxmark rx668_bstack, rxsubrule677_pass1539, -1, 0
  rxsubrule677_pass1539:
    rx668_cstack = rx668_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx668_pos, $P11, rx668_curclass, "$!pos"
    add $I11, rx668_pos, 1
    gt $I11, rx668_eos, rx668_fail1520
    substr $S10, rx668_tgt, rx668_pos, 1
    ne $S10, ucs4:"(", rx668_fail1520
    add rx668_pos, 1
    repr_bind_attr_int rx668_cur, rx668_curclass, "$!pos", rx668_pos
    $P11 = rx668_cur."semilist"()
    repr_get_attr_int $I11, $P11, rx668_curclass, "$!pos"
    lt $I11, 0, rx668_fail1520
    nqp_rxmark rx668_bstack, rxsubrule678_pass1540, -1, 0
  rxsubrule678_pass1540:
    rx668_cstack = rx668_cur."!cursor_capture"($P11, "semilist")
    repr_get_attr_int rx668_pos, $P11, rx668_curclass, "$!pos"
  alt679_01542:
    nqp_rxmark rx668_bstack, alt679_11543, rx668_pos, 0
    add $I11, rx668_pos, 1
    gt $I11, rx668_eos, rx668_fail1520
    substr $S10, rx668_tgt, rx668_pos, 1
    ne $S10, ucs4:")", rx668_fail1520
    add rx668_pos, 1
    goto alt679_end1541
  alt679_11543:
    repr_bind_attr_int rx668_cur, rx668_curclass, "$!pos", rx668_pos
    $P11 = rx668_cur."FAILGOAL"("')'")
    repr_get_attr_int $I11, $P11, rx668_curclass, "$!pos"
    lt $I11, 0, rx668_fail1520
    goto rxsubrule680_pass1544
  rxsubrule680_back1545:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx668_curclass, "$!pos"
    lt $I11, 0, rx668_fail1520
  rxsubrule680_pass1544:
    rx668_cstack = rx668_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule680_back1545
    push rx668_bstack, $I11
    push rx668_bstack, 0
    push rx668_bstack, rx668_pos
    elements $I11, rx668_cstack
    push rx668_bstack, $I11
    repr_get_attr_int rx668_pos, $P11, rx668_curclass, "$!pos"
  alt679_end1541:
    goto alt670_end1527
  alt670_31546:
    nqp_rxmark rx668_bstack, rxcap681_fail1548, rx668_pos, 0
    add $I11, rx668_pos, 1
    gt $I11, rx668_eos, rx668_fail1520
    substr $S10, rx668_tgt, rx668_pos, 1
    ne $S10, ucs4:"$", rx668_fail1520
    add rx668_pos, 1
    nqp_rxpeek $I19, rx668_bstack, rxcap681_fail1548
    inc $I19
    set $I11, rx668_bstack[$I19]
    repr_bind_attr_int rx668_cur, rx668_curclass, "$!pos", rx668_pos
    $P11 = rx668_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx668_pos)
    rx668_cstack = rx668_cur."!cursor_capture"($P11, "sigil")
    goto rxcap681_done1547
  rxcap681_fail1548:
    goto rx668_fail1520
  rxcap681_done1547:
    nqp_rxmark rx668_bstack, rxcap682_fail1550, rx668_pos, 0
    ge rx668_pos, rx668_eos, rx668_fail1520
    substr $S11, rx668_tgt, rx668_pos, 1
    index $I11, ucs4:"/_!", $S11
    lt $I11, 0, rx668_fail1520
    inc rx668_pos
    nqp_rxpeek $I19, rx668_bstack, rxcap682_fail1550
    inc $I19
    set $I11, rx668_bstack[$I19]
    repr_bind_attr_int rx668_cur, rx668_curclass, "$!pos", rx668_pos
    $P11 = rx668_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx668_pos)
    rx668_cstack = rx668_cur."!cursor_capture"($P11, "desigilname")
    goto rxcap682_done1549
  rxcap682_fail1550:
    goto rx668_fail1520
  rxcap682_done1549:
    goto alt670_end1527
  alt670_end1527:
    rx668_cur."!cursor_pass"(rx668_pos, "variable", 'backtrack'=>1)
    .return (rx668_cur)
  rx668_restart1519:
    repr_get_attr_obj rx668_cstack, rx668_cur, rx668_curclass, "$!cstack"
  rx668_fail1520:
    unless rx668_bstack, rx668_done1518
    pop $I19, rx668_bstack
    if_null rx668_cstack, rx668_cstack_done1523
    unless rx668_cstack, rx668_cstack_done1523
    dec $I19
    set $P11, rx668_cstack[$I19]
  rx668_cstack_done1523:
    pop rx668_rep, rx668_bstack
    pop rx668_pos, rx668_bstack
    pop $I19, rx668_bstack
    lt rx668_pos, -1, rx668_done1518
    lt rx668_pos, 0, rx668_fail1520
    eq $I19, 0, rx668_fail1520
    nqp_islist $I20, rx668_cstack
    unless $I20, rx668_jump1521
    elements $I18, rx668_bstack
    le $I18, 0, rx668_cut1522
    dec $I18
    set $I18, rx668_bstack[$I18]
  rx668_cut1522:
    assign rx668_cstack, $I18
  rx668_jump1521:
    jump $I19
  rx668_done1518:
    rx668_cur."!cursor_fail"()
    .return (rx668_cur) 
.end
.HLL "nqp"
.namespace []
.sub "sigil" :subid("cuid_99_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 952
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx683_start
    .local string rx683_tgt
    .local int rx683_pos
    .local int rx683_off
    .local int rx683_eos
    .local int rx683_rep
    .local pmc rx683_cur
    .local pmc rx683_curclass
    .local pmc rx683_bstack
    .local pmc rx683_cstack
    rx683_start = self."!cursor_start_all"()
    set rx683_cur, rx683_start[0]
    set rx683_tgt, rx683_start[1]
    set rx683_pos, rx683_start[2]
    set rx683_curclass, rx683_start[3]
    set rx683_bstack, rx683_start[4]
    set $I19, rx683_start[5]
    store_lex unicode:"$\x{a2}", rx683_cur
    length rx683_eos, rx683_tgt
    eq $I19, 1, rx683_restart1553
    gt rx683_pos, rx683_eos, rx683_fail1554
    repr_get_attr_int $I11, self, rx683_curclass, "$!from"
    ne $I11, -1, rxscan684_done1560
    goto rxscan684_scan1559
  rxscan684_loop1558:
    inc rx683_pos
    gt rx683_pos, rx683_eos, rx683_fail1554
    repr_bind_attr_int rx683_cur, rx683_curclass, "$!from", rx683_pos
  rxscan684_scan1559:
    nqp_rxmark rx683_bstack, rxscan684_loop1558, rx683_pos, 0
  rxscan684_done1560:
    ge rx683_pos, rx683_eos, rx683_fail1554
    substr $S11, rx683_tgt, rx683_pos, 1
    index $I11, ucs4:"$@%&", $S11
    lt $I11, 0, rx683_fail1554
    inc rx683_pos
    rx683_cur."!cursor_pass"(rx683_pos, "sigil", 'backtrack'=>1)
    .return (rx683_cur)
  rx683_restart1553:
    repr_get_attr_obj rx683_cstack, rx683_cur, rx683_curclass, "$!cstack"
  rx683_fail1554:
    unless rx683_bstack, rx683_done1552
    pop $I19, rx683_bstack
    if_null rx683_cstack, rx683_cstack_done1557
    unless rx683_cstack, rx683_cstack_done1557
    dec $I19
    set $P11, rx683_cstack[$I19]
  rx683_cstack_done1557:
    pop rx683_rep, rx683_bstack
    pop rx683_pos, rx683_bstack
    pop $I19, rx683_bstack
    lt rx683_pos, -1, rx683_done1552
    lt rx683_pos, 0, rx683_fail1554
    eq $I19, 0, rx683_fail1554
    nqp_islist $I20, rx683_cstack
    unless $I20, rx683_jump1555
    elements $I18, rx683_bstack
    le $I18, 0, rx683_cut1556
    dec $I18
    set $I18, rx683_bstack[$I18]
  rx683_cut1556:
    assign rx683_cstack, $I18
  rx683_jump1555:
    jump $I19
  rx683_done1552:
    rx683_cur."!cursor_fail"()
    .return (rx683_cur) 
.end
.HLL "nqp"
.namespace []
.sub "twigil" :subid("cuid_100_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 954
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx685_start
    .local string rx685_tgt
    .local int rx685_pos
    .local int rx685_off
    .local int rx685_eos
    .local int rx685_rep
    .local pmc rx685_cur
    .local pmc rx685_curclass
    .local pmc rx685_bstack
    .local pmc rx685_cstack
    rx685_start = self."!cursor_start_all"()
    set rx685_cur, rx685_start[0]
    set rx685_tgt, rx685_start[1]
    set rx685_pos, rx685_start[2]
    set rx685_curclass, rx685_start[3]
    set rx685_bstack, rx685_start[4]
    set $I19, rx685_start[5]
    store_lex unicode:"$\x{a2}", rx685_cur
    length rx685_eos, rx685_tgt
    eq $I19, 1, rx685_restart1563
    gt rx685_pos, rx685_eos, rx685_fail1564
    repr_get_attr_int $I11, self, rx685_curclass, "$!from"
    ne $I11, -1, rxscan686_done1570
    goto rxscan686_scan1569
  rxscan686_loop1568:
    inc rx685_pos
    gt rx685_pos, rx685_eos, rx685_fail1564
    repr_bind_attr_int rx685_cur, rx685_curclass, "$!from", rx685_pos
  rxscan686_scan1569:
    nqp_rxmark rx685_bstack, rxscan686_loop1568, rx685_pos, 0
  rxscan686_done1570:
    ge rx685_pos, rx685_eos, rx685_fail1564
    substr $S11, rx685_tgt, rx685_pos, 1
    index $I11, ucs4:"*!?", $S11
    lt $I11, 0, rx685_fail1564
    inc rx685_pos
    rx685_cur."!cursor_pass"(rx685_pos, "twigil", 'backtrack'=>1)
    .return (rx685_cur)
  rx685_restart1563:
    repr_get_attr_obj rx685_cstack, rx685_cur, rx685_curclass, "$!cstack"
  rx685_fail1564:
    unless rx685_bstack, rx685_done1562
    pop $I19, rx685_bstack
    if_null rx685_cstack, rx685_cstack_done1567
    unless rx685_cstack, rx685_cstack_done1567
    dec $I19
    set $P11, rx685_cstack[$I19]
  rx685_cstack_done1567:
    pop rx685_rep, rx685_bstack
    pop rx685_pos, rx685_bstack
    pop $I19, rx685_bstack
    lt rx685_pos, -1, rx685_done1562
    lt rx685_pos, 0, rx685_fail1564
    eq $I19, 0, rx685_fail1564
    nqp_islist $I20, rx685_cstack
    unless $I20, rx685_jump1565
    elements $I18, rx685_bstack
    le $I18, 0, rx685_cut1566
    dec $I18
    set $I18, rx685_bstack[$I18]
  rx685_cut1566:
    assign rx685_cstack, $I18
  rx685_jump1565:
    jump $I19
  rx685_done1562:
    rx685_cur."!cursor_fail"()
    .return (rx685_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator" :subid("cuid_101_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 956
    .param pmc self 
    $P5001 = self."!protoregex"("package_declarator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<module>" :subid("cuid_102_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 957
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_97 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx687_start
    .local string rx687_tgt
    .local int rx687_pos
    .local int rx687_off
    .local int rx687_eos
    .local int rx687_rep
    .local pmc rx687_cur
    .local pmc rx687_curclass
    .local pmc rx687_bstack
    .local pmc rx687_cstack
    rx687_start = self."!cursor_start_all"()
    set rx687_cur, rx687_start[0]
    set rx687_tgt, rx687_start[1]
    set rx687_pos, rx687_start[2]
    set rx687_curclass, rx687_start[3]
    set rx687_bstack, rx687_start[4]
    set $I19, rx687_start[5]
    store_lex unicode:"$\x{a2}", rx687_cur
    length rx687_eos, rx687_tgt
    eq $I19, 1, rx687_restart1573
    gt rx687_pos, rx687_eos, rx687_fail1574
    repr_get_attr_int $I11, self, rx687_curclass, "$!from"
    ne $I11, -1, rxscan688_done1580
    goto rxscan688_scan1579
  rxscan688_loop1578:
    inc rx687_pos
    gt rx687_pos, rx687_eos, rx687_fail1574
    repr_bind_attr_int rx687_cur, rx687_curclass, "$!from", rx687_pos
  rxscan688_scan1579:
    nqp_rxmark rx687_bstack, rxscan688_loop1578, rx687_pos, 0
  rxscan688_done1580:
    repr_bind_attr_int rx687_cur, rx687_curclass, "$!pos", rx687_pos
    store_lex unicode:"$\x{a2}", rx687_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1581
    nqp_get_sc_object $P5005, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5004, $P5005
    set fb_tmp_97, $P5004
    repr_defined $I5001, fb_tmp_97
    unless $I5001 goto if689_else1582 
    set $P5006, fb_tmp_97["$PACKAGE"]
    set $P5008, $P5006
    goto if689_end1583
  if689_else1582:
    null $P5007
    set $P5008, $P5007
  if689_end1583:
    unless_null $P5008, vivi_6901584
    nqp_get_sc_object $P5009, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5008, $P5009
  vivi_6901584:
    unless_null $P5008, vivi_6911585
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_6911585:
    set $P5003, $P5008
  fallback1581:
    set $P101, $P5003
    repr_bind_attr_int rx687_cur, rx687_curclass, "$!pos", rx687_pos
    store_lex unicode:"$\x{a2}", rx687_cur
    box $P5011, "module"
    set $P102, $P5011
    nqp_rxmark rx687_bstack, rxcap692_fail1587, rx687_pos, 0
    add $I11, rx687_pos, 6
    gt $I11, rx687_eos, rx687_fail1574
    substr $S10, rx687_tgt, rx687_pos, 6
    ne $S10, ucs4:"module", rx687_fail1574
    add rx687_pos, 6
    nqp_rxpeek $I19, rx687_bstack, rxcap692_fail1587
    inc $I19
    set $I11, rx687_bstack[$I19]
    repr_bind_attr_int rx687_cur, rx687_curclass, "$!pos", rx687_pos
    $P11 = rx687_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx687_pos)
    rx687_cstack = rx687_cur."!cursor_capture"($P11, "sym")
    goto rxcap692_done1586
  rxcap692_fail1587:
    goto rx687_fail1574
  rxcap692_done1586:
    repr_bind_attr_int rx687_cur, rx687_curclass, "$!pos", rx687_pos
    $P11 = rx687_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx687_curclass, "$!pos"
    lt $I11, 0, rx687_fail1574
    nqp_rxmark rx687_bstack, rxsubrule693_pass1588, -1, 0
  rxsubrule693_pass1588:
    rx687_cstack = rx687_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx687_pos, $P11, rx687_curclass, "$!pos"
    rx687_cur."!cursor_pass"(rx687_pos, "package_declarator:sym<module>", 'backtrack'=>1)
    .return (rx687_cur)
  rx687_restart1573:
    repr_get_attr_obj rx687_cstack, rx687_cur, rx687_curclass, "$!cstack"
  rx687_fail1574:
    unless rx687_bstack, rx687_done1572
    pop $I19, rx687_bstack
    if_null rx687_cstack, rx687_cstack_done1577
    unless rx687_cstack, rx687_cstack_done1577
    dec $I19
    set $P11, rx687_cstack[$I19]
  rx687_cstack_done1577:
    pop rx687_rep, rx687_bstack
    pop rx687_pos, rx687_bstack
    pop $I19, rx687_bstack
    lt rx687_pos, -1, rx687_done1572
    lt rx687_pos, 0, rx687_fail1574
    eq $I19, 0, rx687_fail1574
    nqp_islist $I20, rx687_cstack
    unless $I20, rx687_jump1575
    elements $I18, rx687_bstack
    le $I18, 0, rx687_cut1576
    dec $I18
    set $I18, rx687_bstack[$I18]
  rx687_cut1576:
    assign rx687_cstack, $I18
  rx687_jump1575:
    jump $I19
  rx687_done1572:
    rx687_cur."!cursor_fail"()
    .return (rx687_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<knowhow>" :subid("cuid_103_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 962
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_98 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx694_start
    .local string rx694_tgt
    .local int rx694_pos
    .local int rx694_off
    .local int rx694_eos
    .local int rx694_rep
    .local pmc rx694_cur
    .local pmc rx694_curclass
    .local pmc rx694_bstack
    .local pmc rx694_cstack
    rx694_start = self."!cursor_start_all"()
    set rx694_cur, rx694_start[0]
    set rx694_tgt, rx694_start[1]
    set rx694_pos, rx694_start[2]
    set rx694_curclass, rx694_start[3]
    set rx694_bstack, rx694_start[4]
    set $I19, rx694_start[5]
    store_lex unicode:"$\x{a2}", rx694_cur
    length rx694_eos, rx694_tgt
    eq $I19, 1, rx694_restart1591
    gt rx694_pos, rx694_eos, rx694_fail1592
    repr_get_attr_int $I11, self, rx694_curclass, "$!from"
    ne $I11, -1, rxscan695_done1598
    goto rxscan695_scan1597
  rxscan695_loop1596:
    inc rx694_pos
    gt rx694_pos, rx694_eos, rx694_fail1592
    repr_bind_attr_int rx694_cur, rx694_curclass, "$!from", rx694_pos
  rxscan695_scan1597:
    nqp_rxmark rx694_bstack, rxscan695_loop1596, rx694_pos, 0
  rxscan695_done1598:
    repr_bind_attr_int rx694_cur, rx694_curclass, "$!pos", rx694_pos
    store_lex unicode:"$\x{a2}", rx694_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1599
    nqp_get_sc_object $P5005, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5004, $P5005
    set fb_tmp_98, $P5004
    repr_defined $I5001, fb_tmp_98
    unless $I5001 goto if696_else1600 
    set $P5006, fb_tmp_98["$PACKAGE"]
    set $P5008, $P5006
    goto if696_end1601
  if696_else1600:
    null $P5007
    set $P5008, $P5007
  if696_end1601:
    unless_null $P5008, vivi_6971602
    nqp_get_sc_object $P5009, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5008, $P5009
  vivi_6971602:
    unless_null $P5008, vivi_6981603
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_6981603:
    set $P5003, $P5008
  fallback1599:
    set $P101, $P5003
    repr_bind_attr_int rx694_cur, rx694_curclass, "$!pos", rx694_pos
    store_lex unicode:"$\x{a2}", rx694_cur
    box $P5011, "knowhow"
    set $P102, $P5011
    nqp_rxmark rx694_bstack, rxcap699_fail1605, rx694_pos, 0
    add $I11, rx694_pos, 7
    gt $I11, rx694_eos, rx694_fail1592
    substr $S10, rx694_tgt, rx694_pos, 7
    ne $S10, ucs4:"knowhow", rx694_fail1592
    add rx694_pos, 7
    nqp_rxpeek $I19, rx694_bstack, rxcap699_fail1605
    inc $I19
    set $I11, rx694_bstack[$I19]
    repr_bind_attr_int rx694_cur, rx694_curclass, "$!pos", rx694_pos
    $P11 = rx694_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx694_pos)
    rx694_cstack = rx694_cur."!cursor_capture"($P11, "sym")
    goto rxcap699_done1604
  rxcap699_fail1605:
    goto rx694_fail1592
  rxcap699_done1604:
    repr_bind_attr_int rx694_cur, rx694_curclass, "$!pos", rx694_pos
    $P11 = rx694_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx694_curclass, "$!pos"
    lt $I11, 0, rx694_fail1592
    nqp_rxmark rx694_bstack, rxsubrule700_pass1606, -1, 0
  rxsubrule700_pass1606:
    rx694_cstack = rx694_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx694_pos, $P11, rx694_curclass, "$!pos"
    rx694_cur."!cursor_pass"(rx694_pos, "package_declarator:sym<knowhow>", 'backtrack'=>1)
    .return (rx694_cur)
  rx694_restart1591:
    repr_get_attr_obj rx694_cstack, rx694_cur, rx694_curclass, "$!cstack"
  rx694_fail1592:
    unless rx694_bstack, rx694_done1590
    pop $I19, rx694_bstack
    if_null rx694_cstack, rx694_cstack_done1595
    unless rx694_cstack, rx694_cstack_done1595
    dec $I19
    set $P11, rx694_cstack[$I19]
  rx694_cstack_done1595:
    pop rx694_rep, rx694_bstack
    pop rx694_pos, rx694_bstack
    pop $I19, rx694_bstack
    lt rx694_pos, -1, rx694_done1590
    lt rx694_pos, 0, rx694_fail1592
    eq $I19, 0, rx694_fail1592
    nqp_islist $I20, rx694_cstack
    unless $I20, rx694_jump1593
    elements $I18, rx694_bstack
    le $I18, 0, rx694_cut1594
    dec $I18
    set $I18, rx694_bstack[$I18]
  rx694_cut1594:
    assign rx694_cstack, $I18
  rx694_jump1593:
    jump $I19
  rx694_done1590:
    rx694_cur."!cursor_fail"()
    .return (rx694_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<class>" :subid("cuid_104_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 967
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_99 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx701_start
    .local string rx701_tgt
    .local int rx701_pos
    .local int rx701_off
    .local int rx701_eos
    .local int rx701_rep
    .local pmc rx701_cur
    .local pmc rx701_curclass
    .local pmc rx701_bstack
    .local pmc rx701_cstack
    rx701_start = self."!cursor_start_all"()
    set rx701_cur, rx701_start[0]
    set rx701_tgt, rx701_start[1]
    set rx701_pos, rx701_start[2]
    set rx701_curclass, rx701_start[3]
    set rx701_bstack, rx701_start[4]
    set $I19, rx701_start[5]
    store_lex unicode:"$\x{a2}", rx701_cur
    length rx701_eos, rx701_tgt
    eq $I19, 1, rx701_restart1609
    gt rx701_pos, rx701_eos, rx701_fail1610
    repr_get_attr_int $I11, self, rx701_curclass, "$!from"
    ne $I11, -1, rxscan702_done1616
    goto rxscan702_scan1615
  rxscan702_loop1614:
    inc rx701_pos
    gt rx701_pos, rx701_eos, rx701_fail1610
    repr_bind_attr_int rx701_cur, rx701_curclass, "$!from", rx701_pos
  rxscan702_scan1615:
    nqp_rxmark rx701_bstack, rxscan702_loop1614, rx701_pos, 0
  rxscan702_done1616:
    repr_bind_attr_int rx701_cur, rx701_curclass, "$!pos", rx701_pos
    store_lex unicode:"$\x{a2}", rx701_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1617
    nqp_get_sc_object $P5005, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5004, $P5005
    set fb_tmp_99, $P5004
    repr_defined $I5001, fb_tmp_99
    unless $I5001 goto if703_else1618 
    set $P5006, fb_tmp_99["$PACKAGE"]
    set $P5008, $P5006
    goto if703_end1619
  if703_else1618:
    null $P5007
    set $P5008, $P5007
  if703_end1619:
    unless_null $P5008, vivi_7041620
    nqp_get_sc_object $P5009, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5008, $P5009
  vivi_7041620:
    unless_null $P5008, vivi_7051621
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7051621:
    set $P5003, $P5008
  fallback1617:
    set $P101, $P5003
    repr_bind_attr_int rx701_cur, rx701_curclass, "$!pos", rx701_pos
    store_lex unicode:"$\x{a2}", rx701_cur
    box $P5011, "class"
    set $P102, $P5011
    nqp_rxmark rx701_bstack, rxcap706_fail1623, rx701_pos, 0
    add $I11, rx701_pos, 5
    gt $I11, rx701_eos, rx701_fail1610
    substr $S10, rx701_tgt, rx701_pos, 5
    ne $S10, ucs4:"class", rx701_fail1610
    add rx701_pos, 5
    nqp_rxpeek $I19, rx701_bstack, rxcap706_fail1623
    inc $I19
    set $I11, rx701_bstack[$I19]
    repr_bind_attr_int rx701_cur, rx701_curclass, "$!pos", rx701_pos
    $P11 = rx701_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx701_pos)
    rx701_cstack = rx701_cur."!cursor_capture"($P11, "sym")
    goto rxcap706_done1622
  rxcap706_fail1623:
    goto rx701_fail1610
  rxcap706_done1622:
    repr_bind_attr_int rx701_cur, rx701_curclass, "$!pos", rx701_pos
    $P11 = rx701_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx701_curclass, "$!pos"
    lt $I11, 0, rx701_fail1610
    nqp_rxmark rx701_bstack, rxsubrule707_pass1624, -1, 0
  rxsubrule707_pass1624:
    rx701_cstack = rx701_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx701_pos, $P11, rx701_curclass, "$!pos"
    rx701_cur."!cursor_pass"(rx701_pos, "package_declarator:sym<class>", 'backtrack'=>1)
    .return (rx701_cur)
  rx701_restart1609:
    repr_get_attr_obj rx701_cstack, rx701_cur, rx701_curclass, "$!cstack"
  rx701_fail1610:
    unless rx701_bstack, rx701_done1608
    pop $I19, rx701_bstack
    if_null rx701_cstack, rx701_cstack_done1613
    unless rx701_cstack, rx701_cstack_done1613
    dec $I19
    set $P11, rx701_cstack[$I19]
  rx701_cstack_done1613:
    pop rx701_rep, rx701_bstack
    pop rx701_pos, rx701_bstack
    pop $I19, rx701_bstack
    lt rx701_pos, -1, rx701_done1608
    lt rx701_pos, 0, rx701_fail1610
    eq $I19, 0, rx701_fail1610
    nqp_islist $I20, rx701_cstack
    unless $I20, rx701_jump1611
    elements $I18, rx701_bstack
    le $I18, 0, rx701_cut1612
    dec $I18
    set $I18, rx701_bstack[$I18]
  rx701_cut1612:
    assign rx701_cstack, $I18
  rx701_jump1611:
    jump $I19
  rx701_done1608:
    rx701_cur."!cursor_fail"()
    .return (rx701_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<grammar>" :subid("cuid_105_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 972
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_100 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx708_start
    .local string rx708_tgt
    .local int rx708_pos
    .local int rx708_off
    .local int rx708_eos
    .local int rx708_rep
    .local pmc rx708_cur
    .local pmc rx708_curclass
    .local pmc rx708_bstack
    .local pmc rx708_cstack
    rx708_start = self."!cursor_start_all"()
    set rx708_cur, rx708_start[0]
    set rx708_tgt, rx708_start[1]
    set rx708_pos, rx708_start[2]
    set rx708_curclass, rx708_start[3]
    set rx708_bstack, rx708_start[4]
    set $I19, rx708_start[5]
    store_lex unicode:"$\x{a2}", rx708_cur
    length rx708_eos, rx708_tgt
    eq $I19, 1, rx708_restart1627
    gt rx708_pos, rx708_eos, rx708_fail1628
    repr_get_attr_int $I11, self, rx708_curclass, "$!from"
    ne $I11, -1, rxscan709_done1634
    goto rxscan709_scan1633
  rxscan709_loop1632:
    inc rx708_pos
    gt rx708_pos, rx708_eos, rx708_fail1628
    repr_bind_attr_int rx708_cur, rx708_curclass, "$!from", rx708_pos
  rxscan709_scan1633:
    nqp_rxmark rx708_bstack, rxscan709_loop1632, rx708_pos, 0
  rxscan709_done1634:
    repr_bind_attr_int rx708_cur, rx708_curclass, "$!pos", rx708_pos
    store_lex unicode:"$\x{a2}", rx708_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1635
    nqp_get_sc_object $P5005, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5004, $P5005
    set fb_tmp_100, $P5004
    repr_defined $I5001, fb_tmp_100
    unless $I5001 goto if710_else1636 
    set $P5006, fb_tmp_100["$PACKAGE"]
    set $P5008, $P5006
    goto if710_end1637
  if710_else1636:
    null $P5007
    set $P5008, $P5007
  if710_end1637:
    unless_null $P5008, vivi_7111638
    nqp_get_sc_object $P5009, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5008, $P5009
  vivi_7111638:
    unless_null $P5008, vivi_7121639
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7121639:
    set $P5003, $P5008
  fallback1635:
    set $P101, $P5003
    repr_bind_attr_int rx708_cur, rx708_curclass, "$!pos", rx708_pos
    store_lex unicode:"$\x{a2}", rx708_cur
    box $P5011, "grammar"
    set $P102, $P5011
    nqp_rxmark rx708_bstack, rxcap713_fail1641, rx708_pos, 0
    add $I11, rx708_pos, 7
    gt $I11, rx708_eos, rx708_fail1628
    substr $S10, rx708_tgt, rx708_pos, 7
    ne $S10, ucs4:"grammar", rx708_fail1628
    add rx708_pos, 7
    nqp_rxpeek $I19, rx708_bstack, rxcap713_fail1641
    inc $I19
    set $I11, rx708_bstack[$I19]
    repr_bind_attr_int rx708_cur, rx708_curclass, "$!pos", rx708_pos
    $P11 = rx708_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx708_pos)
    rx708_cstack = rx708_cur."!cursor_capture"($P11, "sym")
    goto rxcap713_done1640
  rxcap713_fail1641:
    goto rx708_fail1628
  rxcap713_done1640:
    repr_bind_attr_int rx708_cur, rx708_curclass, "$!pos", rx708_pos
    $P11 = rx708_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx708_curclass, "$!pos"
    lt $I11, 0, rx708_fail1628
    nqp_rxmark rx708_bstack, rxsubrule714_pass1642, -1, 0
  rxsubrule714_pass1642:
    rx708_cstack = rx708_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx708_pos, $P11, rx708_curclass, "$!pos"
    rx708_cur."!cursor_pass"(rx708_pos, "package_declarator:sym<grammar>", 'backtrack'=>1)
    .return (rx708_cur)
  rx708_restart1627:
    repr_get_attr_obj rx708_cstack, rx708_cur, rx708_curclass, "$!cstack"
  rx708_fail1628:
    unless rx708_bstack, rx708_done1626
    pop $I19, rx708_bstack
    if_null rx708_cstack, rx708_cstack_done1631
    unless rx708_cstack, rx708_cstack_done1631
    dec $I19
    set $P11, rx708_cstack[$I19]
  rx708_cstack_done1631:
    pop rx708_rep, rx708_bstack
    pop rx708_pos, rx708_bstack
    pop $I19, rx708_bstack
    lt rx708_pos, -1, rx708_done1626
    lt rx708_pos, 0, rx708_fail1628
    eq $I19, 0, rx708_fail1628
    nqp_islist $I20, rx708_cstack
    unless $I20, rx708_jump1629
    elements $I18, rx708_bstack
    le $I18, 0, rx708_cut1630
    dec $I18
    set $I18, rx708_bstack[$I18]
  rx708_cut1630:
    assign rx708_cstack, $I18
  rx708_jump1629:
    jump $I19
  rx708_done1626:
    rx708_cur."!cursor_fail"()
    .return (rx708_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<role>" :subid("cuid_106_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 977
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_101 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx715_start
    .local string rx715_tgt
    .local int rx715_pos
    .local int rx715_off
    .local int rx715_eos
    .local int rx715_rep
    .local pmc rx715_cur
    .local pmc rx715_curclass
    .local pmc rx715_bstack
    .local pmc rx715_cstack
    rx715_start = self."!cursor_start_all"()
    set rx715_cur, rx715_start[0]
    set rx715_tgt, rx715_start[1]
    set rx715_pos, rx715_start[2]
    set rx715_curclass, rx715_start[3]
    set rx715_bstack, rx715_start[4]
    set $I19, rx715_start[5]
    store_lex unicode:"$\x{a2}", rx715_cur
    length rx715_eos, rx715_tgt
    eq $I19, 1, rx715_restart1645
    gt rx715_pos, rx715_eos, rx715_fail1646
    repr_get_attr_int $I11, self, rx715_curclass, "$!from"
    ne $I11, -1, rxscan716_done1652
    goto rxscan716_scan1651
  rxscan716_loop1650:
    inc rx715_pos
    gt rx715_pos, rx715_eos, rx715_fail1646
    repr_bind_attr_int rx715_cur, rx715_curclass, "$!from", rx715_pos
  rxscan716_scan1651:
    nqp_rxmark rx715_bstack, rxscan716_loop1650, rx715_pos, 0
  rxscan716_done1652:
    repr_bind_attr_int rx715_cur, rx715_curclass, "$!pos", rx715_pos
    store_lex unicode:"$\x{a2}", rx715_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1653
    nqp_get_sc_object $P5005, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5004, $P5005
    set fb_tmp_101, $P5004
    repr_defined $I5001, fb_tmp_101
    unless $I5001 goto if717_else1654 
    set $P5006, fb_tmp_101["$PACKAGE"]
    set $P5008, $P5006
    goto if717_end1655
  if717_else1654:
    null $P5007
    set $P5008, $P5007
  if717_end1655:
    unless_null $P5008, vivi_7181656
    nqp_get_sc_object $P5009, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5008, $P5009
  vivi_7181656:
    unless_null $P5008, vivi_7191657
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7191657:
    set $P5003, $P5008
  fallback1653:
    set $P101, $P5003
    repr_bind_attr_int rx715_cur, rx715_curclass, "$!pos", rx715_pos
    store_lex unicode:"$\x{a2}", rx715_cur
    box $P5011, "role"
    set $P102, $P5011
    nqp_rxmark rx715_bstack, rxcap720_fail1659, rx715_pos, 0
    add $I11, rx715_pos, 4
    gt $I11, rx715_eos, rx715_fail1646
    substr $S10, rx715_tgt, rx715_pos, 4
    ne $S10, ucs4:"role", rx715_fail1646
    add rx715_pos, 4
    nqp_rxpeek $I19, rx715_bstack, rxcap720_fail1659
    inc $I19
    set $I11, rx715_bstack[$I19]
    repr_bind_attr_int rx715_cur, rx715_curclass, "$!pos", rx715_pos
    $P11 = rx715_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx715_pos)
    rx715_cstack = rx715_cur."!cursor_capture"($P11, "sym")
    goto rxcap720_done1658
  rxcap720_fail1659:
    goto rx715_fail1646
  rxcap720_done1658:
    repr_bind_attr_int rx715_cur, rx715_curclass, "$!pos", rx715_pos
    $P11 = rx715_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx715_curclass, "$!pos"
    lt $I11, 0, rx715_fail1646
    nqp_rxmark rx715_bstack, rxsubrule721_pass1660, -1, 0
  rxsubrule721_pass1660:
    rx715_cstack = rx715_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx715_pos, $P11, rx715_curclass, "$!pos"
    rx715_cur."!cursor_pass"(rx715_pos, "package_declarator:sym<role>", 'backtrack'=>1)
    .return (rx715_cur)
  rx715_restart1645:
    repr_get_attr_obj rx715_cstack, rx715_cur, rx715_curclass, "$!cstack"
  rx715_fail1646:
    unless rx715_bstack, rx715_done1644
    pop $I19, rx715_bstack
    if_null rx715_cstack, rx715_cstack_done1649
    unless rx715_cstack, rx715_cstack_done1649
    dec $I19
    set $P11, rx715_cstack[$I19]
  rx715_cstack_done1649:
    pop rx715_rep, rx715_bstack
    pop rx715_pos, rx715_bstack
    pop $I19, rx715_bstack
    lt rx715_pos, -1, rx715_done1644
    lt rx715_pos, 0, rx715_fail1646
    eq $I19, 0, rx715_fail1646
    nqp_islist $I20, rx715_cstack
    unless $I20, rx715_jump1647
    elements $I18, rx715_bstack
    le $I18, 0, rx715_cut1648
    dec $I18
    set $I18, rx715_bstack[$I18]
  rx715_cut1648:
    assign rx715_cstack, $I18
  rx715_jump1647:
    jump $I19
  rx715_done1644:
    rx715_cur."!cursor_fail"()
    .return (rx715_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<native>" :subid("cuid_107_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 982
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_102 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx722_start
    .local string rx722_tgt
    .local int rx722_pos
    .local int rx722_off
    .local int rx722_eos
    .local int rx722_rep
    .local pmc rx722_cur
    .local pmc rx722_curclass
    .local pmc rx722_bstack
    .local pmc rx722_cstack
    rx722_start = self."!cursor_start_all"()
    set rx722_cur, rx722_start[0]
    set rx722_tgt, rx722_start[1]
    set rx722_pos, rx722_start[2]
    set rx722_curclass, rx722_start[3]
    set rx722_bstack, rx722_start[4]
    set $I19, rx722_start[5]
    store_lex unicode:"$\x{a2}", rx722_cur
    length rx722_eos, rx722_tgt
    eq $I19, 1, rx722_restart1663
    gt rx722_pos, rx722_eos, rx722_fail1664
    repr_get_attr_int $I11, self, rx722_curclass, "$!from"
    ne $I11, -1, rxscan723_done1670
    goto rxscan723_scan1669
  rxscan723_loop1668:
    inc rx722_pos
    gt rx722_pos, rx722_eos, rx722_fail1664
    repr_bind_attr_int rx722_cur, rx722_curclass, "$!from", rx722_pos
  rxscan723_scan1669:
    nqp_rxmark rx722_bstack, rxscan723_loop1668, rx722_pos, 0
  rxscan723_done1670:
    repr_bind_attr_int rx722_cur, rx722_curclass, "$!pos", rx722_pos
    store_lex unicode:"$\x{a2}", rx722_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1671
    nqp_get_sc_object $P5005, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5004, $P5005
    set fb_tmp_102, $P5004
    repr_defined $I5001, fb_tmp_102
    unless $I5001 goto if724_else1672 
    set $P5006, fb_tmp_102["$PACKAGE"]
    set $P5008, $P5006
    goto if724_end1673
  if724_else1672:
    null $P5007
    set $P5008, $P5007
  if724_end1673:
    unless_null $P5008, vivi_7251674
    nqp_get_sc_object $P5009, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5008, $P5009
  vivi_7251674:
    unless_null $P5008, vivi_7261675
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7261675:
    set $P5003, $P5008
  fallback1671:
    set $P101, $P5003
    repr_bind_attr_int rx722_cur, rx722_curclass, "$!pos", rx722_pos
    store_lex unicode:"$\x{a2}", rx722_cur
    box $P5011, "native"
    set $P102, $P5011
    nqp_rxmark rx722_bstack, rxcap727_fail1677, rx722_pos, 0
    add $I11, rx722_pos, 6
    gt $I11, rx722_eos, rx722_fail1664
    substr $S10, rx722_tgt, rx722_pos, 6
    ne $S10, ucs4:"native", rx722_fail1664
    add rx722_pos, 6
    nqp_rxpeek $I19, rx722_bstack, rxcap727_fail1677
    inc $I19
    set $I11, rx722_bstack[$I19]
    repr_bind_attr_int rx722_cur, rx722_curclass, "$!pos", rx722_pos
    $P11 = rx722_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx722_pos)
    rx722_cstack = rx722_cur."!cursor_capture"($P11, "sym")
    goto rxcap727_done1676
  rxcap727_fail1677:
    goto rx722_fail1664
  rxcap727_done1676:
    repr_bind_attr_int rx722_cur, rx722_curclass, "$!pos", rx722_pos
    $P11 = rx722_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx722_curclass, "$!pos"
    lt $I11, 0, rx722_fail1664
    nqp_rxmark rx722_bstack, rxsubrule728_pass1678, -1, 0
  rxsubrule728_pass1678:
    rx722_cstack = rx722_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx722_pos, $P11, rx722_curclass, "$!pos"
    rx722_cur."!cursor_pass"(rx722_pos, "package_declarator:sym<native>", 'backtrack'=>1)
    .return (rx722_cur)
  rx722_restart1663:
    repr_get_attr_obj rx722_cstack, rx722_cur, rx722_curclass, "$!cstack"
  rx722_fail1664:
    unless rx722_bstack, rx722_done1662
    pop $I19, rx722_bstack
    if_null rx722_cstack, rx722_cstack_done1667
    unless rx722_cstack, rx722_cstack_done1667
    dec $I19
    set $P11, rx722_cstack[$I19]
  rx722_cstack_done1667:
    pop rx722_rep, rx722_bstack
    pop rx722_pos, rx722_bstack
    pop $I19, rx722_bstack
    lt rx722_pos, -1, rx722_done1662
    lt rx722_pos, 0, rx722_fail1664
    eq $I19, 0, rx722_fail1664
    nqp_islist $I20, rx722_cstack
    unless $I20, rx722_jump1665
    elements $I18, rx722_bstack
    le $I18, 0, rx722_cut1666
    dec $I18
    set $I18, rx722_bstack[$I18]
  rx722_cut1666:
    assign rx722_cstack, $I18
  rx722_jump1665:
    jump $I19
  rx722_done1662:
    rx722_cur."!cursor_fail"()
    .return (rx722_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<stub>" :subid("cuid_108_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 987
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_103 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx729_start
    .local string rx729_tgt
    .local int rx729_pos
    .local int rx729_off
    .local int rx729_eos
    .local int rx729_rep
    .local pmc rx729_cur
    .local pmc rx729_curclass
    .local pmc rx729_bstack
    .local pmc rx729_cstack
    rx729_start = self."!cursor_start_all"()
    set rx729_cur, rx729_start[0]
    set rx729_tgt, rx729_start[1]
    set rx729_pos, rx729_start[2]
    set rx729_curclass, rx729_start[3]
    set rx729_bstack, rx729_start[4]
    set $I19, rx729_start[5]
    store_lex unicode:"$\x{a2}", rx729_cur
    length rx729_eos, rx729_tgt
    eq $I19, 1, rx729_restart1681
    gt rx729_pos, rx729_eos, rx729_fail1682
    repr_get_attr_int $I11, self, rx729_curclass, "$!from"
    ne $I11, -1, rxscan730_done1688
    goto rxscan730_scan1687
  rxscan730_loop1686:
    inc rx729_pos
    gt rx729_pos, rx729_eos, rx729_fail1682
    repr_bind_attr_int rx729_cur, rx729_curclass, "$!from", rx729_pos
  rxscan730_scan1687:
    nqp_rxmark rx729_bstack, rxscan730_loop1686, rx729_pos, 0
  rxscan730_done1688:
    repr_bind_attr_int rx729_cur, rx729_curclass, "$!pos", rx729_pos
    store_lex unicode:"$\x{a2}", rx729_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1689
    nqp_get_sc_object $P5005, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5004, $P5005
    set fb_tmp_103, $P5004
    repr_defined $I5001, fb_tmp_103
    unless $I5001 goto if731_else1690 
    set $P5006, fb_tmp_103["$PACKAGE"]
    set $P5008, $P5006
    goto if731_end1691
  if731_else1690:
    null $P5007
    set $P5008, $P5007
  if731_end1691:
    unless_null $P5008, vivi_7321692
    nqp_get_sc_object $P5009, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5008, $P5009
  vivi_7321692:
    unless_null $P5008, vivi_7331693
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7331693:
    set $P5003, $P5008
  fallback1689:
    set $P101, $P5003
    repr_bind_attr_int rx729_cur, rx729_curclass, "$!pos", rx729_pos
    store_lex unicode:"$\x{a2}", rx729_cur
    box $P5011, "stub"
    set $P102, $P5011
    nqp_rxmark rx729_bstack, rxcap734_fail1695, rx729_pos, 0
    add $I11, rx729_pos, 4
    gt $I11, rx729_eos, rx729_fail1682
    substr $S10, rx729_tgt, rx729_pos, 4
    ne $S10, ucs4:"stub", rx729_fail1682
    add rx729_pos, 4
    nqp_rxpeek $I19, rx729_bstack, rxcap734_fail1695
    inc $I19
    set $I11, rx729_bstack[$I19]
    repr_bind_attr_int rx729_cur, rx729_curclass, "$!pos", rx729_pos
    $P11 = rx729_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx729_pos)
    rx729_cstack = rx729_cur."!cursor_capture"($P11, "sym")
    goto rxcap734_done1694
  rxcap734_fail1695:
    goto rx729_fail1682
  rxcap734_done1694:
    repr_bind_attr_int rx729_cur, rx729_curclass, "$!pos", rx729_pos
    $P11 = rx729_cur."ws"()
    repr_get_attr_int $I11, $P11, rx729_curclass, "$!pos"
    lt $I11, 0, rx729_fail1682
    repr_get_attr_int rx729_pos, $P11, rx729_curclass, "$!pos"
    repr_bind_attr_int rx729_cur, rx729_curclass, "$!pos", rx729_pos
    $P11 = rx729_cur."name"()
    repr_get_attr_int $I11, $P11, rx729_curclass, "$!pos"
    lt $I11, 0, rx729_fail1682
    nqp_rxmark rx729_bstack, rxsubrule736_pass1697, -1, 0
  rxsubrule736_pass1697:
    rx729_cstack = rx729_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx729_pos, $P11, rx729_curclass, "$!pos"
    repr_bind_attr_int rx729_cur, rx729_curclass, "$!pos", rx729_pos
    $P11 = rx729_cur."ws"()
    repr_get_attr_int $I11, $P11, rx729_curclass, "$!pos"
    lt $I11, 0, rx729_fail1682
    repr_get_attr_int rx729_pos, $P11, rx729_curclass, "$!pos"
    add $I11, rx729_pos, 9
    gt $I11, rx729_eos, rx729_fail1682
    substr $S10, rx729_tgt, rx729_pos, 9
    ne $S10, ucs4:"metaclass", rx729_fail1682
    add rx729_pos, 9
    repr_bind_attr_int rx729_cur, rx729_curclass, "$!pos", rx729_pos
    $P11 = rx729_cur."ws"()
    repr_get_attr_int $I11, $P11, rx729_curclass, "$!pos"
    lt $I11, 0, rx729_fail1682
    repr_get_attr_int rx729_pos, $P11, rx729_curclass, "$!pos"
    repr_bind_attr_int rx729_cur, rx729_curclass, "$!pos", rx729_pos
    $P11 = rx729_cur."name"()
    repr_get_attr_int $I11, $P11, rx729_curclass, "$!pos"
    lt $I11, 0, rx729_fail1682
    nqp_rxmark rx729_bstack, rxsubrule739_pass1700, -1, 0
  rxsubrule739_pass1700:
    rx729_cstack = rx729_cur."!cursor_capture"($P11, "metaclass")
    repr_get_attr_int rx729_pos, $P11, rx729_curclass, "$!pos"
    repr_bind_attr_int rx729_cur, rx729_curclass, "$!pos", rx729_pos
    $P11 = rx729_cur."ws"()
    repr_get_attr_int $I11, $P11, rx729_curclass, "$!pos"
    lt $I11, 0, rx729_fail1682
    repr_get_attr_int rx729_pos, $P11, rx729_curclass, "$!pos"
    add $I11, rx729_pos, 1
    gt $I11, rx729_eos, rx729_fail1682
    substr $S10, rx729_tgt, rx729_pos, 1
    ne $S10, ucs4:"{", rx729_fail1682
    add rx729_pos, 1
    repr_bind_attr_int rx729_cur, rx729_curclass, "$!pos", rx729_pos
    $P11 = rx729_cur."ws"()
    repr_get_attr_int $I11, $P11, rx729_curclass, "$!pos"
    lt $I11, 0, rx729_fail1682
    repr_get_attr_int rx729_pos, $P11, rx729_curclass, "$!pos"
    add $I11, rx729_pos, 3
    gt $I11, rx729_eos, rx729_fail1682
    substr $S10, rx729_tgt, rx729_pos, 3
    ne $S10, ucs4:"...", rx729_fail1682
    add rx729_pos, 3
    repr_bind_attr_int rx729_cur, rx729_curclass, "$!pos", rx729_pos
    $P11 = rx729_cur."ws"()
    repr_get_attr_int $I11, $P11, rx729_curclass, "$!pos"
    lt $I11, 0, rx729_fail1682
    repr_get_attr_int rx729_pos, $P11, rx729_curclass, "$!pos"
    add $I11, rx729_pos, 1
    gt $I11, rx729_eos, rx729_fail1682
    substr $S10, rx729_tgt, rx729_pos, 1
    ne $S10, ucs4:"}", rx729_fail1682
    add rx729_pos, 1
    repr_bind_attr_int rx729_cur, rx729_curclass, "$!pos", rx729_pos
    $P11 = rx729_cur."ws"()
    repr_get_attr_int $I11, $P11, rx729_curclass, "$!pos"
    lt $I11, 0, rx729_fail1682
    repr_get_attr_int rx729_pos, $P11, rx729_curclass, "$!pos"
    rx729_cur."!cursor_pass"(rx729_pos, "package_declarator:sym<stub>", 'backtrack'=>1)
    .return (rx729_cur)
  rx729_restart1681:
    repr_get_attr_obj rx729_cstack, rx729_cur, rx729_curclass, "$!cstack"
  rx729_fail1682:
    unless rx729_bstack, rx729_done1680
    pop $I19, rx729_bstack
    if_null rx729_cstack, rx729_cstack_done1685
    unless rx729_cstack, rx729_cstack_done1685
    dec $I19
    set $P11, rx729_cstack[$I19]
  rx729_cstack_done1685:
    pop rx729_rep, rx729_bstack
    pop rx729_pos, rx729_bstack
    pop $I19, rx729_bstack
    lt rx729_pos, -1, rx729_done1680
    lt rx729_pos, 0, rx729_fail1682
    eq $I19, 0, rx729_fail1682
    nqp_islist $I20, rx729_cstack
    unless $I20, rx729_jump1683
    elements $I18, rx729_bstack
    le $I18, 0, rx729_cut1684
    dec $I18
    set $I18, rx729_bstack[$I18]
  rx729_cut1684:
    assign rx729_cstack, $I18
  rx729_jump1683:
    jump $I19
  rx729_done1680:
    rx729_cur."!cursor_fail"()
    .return (rx729_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_def" :subid("cuid_109_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 995
    .param pmc _lex_param_0 
    .const 'Sub' $P5025 = 'cuid_403_1365879995.227' 
    capture_lex $P5025 
    .const 'Sub' $P5025 = 'cuid_404_1365879995.227' 
    capture_lex $P5025 
    .lex "$*PACKAGE", $P101 
    .lex "$OUTER", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_104 
    .local pmc fb_tmp_105 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx744_start
    .local string rx744_tgt
    .local int rx744_pos
    .local int rx744_off
    .local int rx744_eos
    .local int rx744_rep
    .local pmc rx744_cur
    .local pmc rx744_curclass
    .local pmc rx744_bstack
    .local pmc rx744_cstack
    rx744_start = self."!cursor_start_all"()
    set rx744_cur, rx744_start[0]
    set rx744_tgt, rx744_start[1]
    set rx744_pos, rx744_start[2]
    set rx744_curclass, rx744_start[3]
    set rx744_bstack, rx744_start[4]
    set $I19, rx744_start[5]
    store_lex unicode:"$\x{a2}", rx744_cur
    length rx744_eos, rx744_tgt
    eq $I19, 1, rx744_restart1707
    gt rx744_pos, rx744_eos, rx744_fail1708
    repr_get_attr_int $I11, self, rx744_curclass, "$!from"
    ne $I11, -1, rxscan745_done1714
    goto rxscan745_scan1713
  rxscan745_loop1712:
    inc rx744_pos
    gt rx744_pos, rx744_eos, rx744_fail1708
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!from", rx744_pos
  rxscan745_scan1713:
    nqp_rxmark rx744_bstack, rxscan745_loop1712, rx744_pos, 0
  rxscan745_done1714:
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."ws"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    store_lex unicode:"$\x{a2}", rx744_cur
    unless_null $P101, fallback1716
    nqp_get_sc_object $P5004, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5003, $P5004
    set fb_tmp_104, $P5003
    repr_defined $I5001, fb_tmp_104
    unless $I5001 goto if747_else1717 
    set $P5005, fb_tmp_104["$PACKAGE"]
    set $P5007, $P5005
    goto if747_end1718
  if747_else1717:
    null $P5006
    set $P5007, $P5006
  if747_end1718:
    unless_null $P5007, vivi_7481719
    nqp_get_sc_object $P5008, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5007, $P5008
  vivi_7481719:
    unless_null $P5007, vivi_7491720
    die "Contextual $*PACKAGE not found"
    box $P5009, "Contextual $*PACKAGE not found"
    set $P5007, $P5009
  vivi_7491720:
    set $P101, $P5007
  fallback1716:
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."ws"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    store_lex unicode:"$\x{a2}", rx744_cur
.annotate 'line', 997
    find_dynamic_lex $P5010, "$*W"
    unless_null $P5010, fallback1722
    nqp_get_sc_object $P5012, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5011, $P5012
    set fb_tmp_105, $P5011
    repr_defined $I5002, fb_tmp_105
    unless $I5002 goto if751_else1723 
    set $P5013, fb_tmp_105["$W"]
    set $P5015, $P5013
    goto if751_end1724
  if751_else1723:
    null $P5014
    set $P5015, $P5014
  if751_end1724:
    unless_null $P5015, vivi_7521725
    nqp_get_sc_object $P5016, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5015, $P5016
  vivi_7521725:
    unless_null $P5015, vivi_7531726
    die "Contextual $*W not found"
    box $P5017, "Contextual $*W not found"
    set $P5015, $P5017
  vivi_7531726:
    set $P5010, $P5015
  fallback1722:
    $P5018 = $P5010."cur_lexpad"()
    set $P102, $P5018
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."ws"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."name"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    nqp_rxmark rx744_bstack, rxsubrule755_pass1728, -1, 0
  rxsubrule755_pass1728:
    rx744_cstack = rx744_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."ws"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."ws"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
    nqp_rxmark rx744_bstack, rxquantr759_done1733, rx744_pos, 0
  rxquantr759_loop1732:
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."ws"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    store_lex unicode:"$\x{a2}", rx744_cur
    $P5019 = $P103."MATCH"()
    set $P104, $P5019
    .const 'Sub' $P5020 = 'cuid_403_1365879995.227' 
    capture_lex $P5020
    $P5021 = $P5020()
    unless $P5021, rx744_fail1708
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."ws"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
    add $I11, rx744_pos, 1
    gt $I11, rx744_eos, rx744_fail1708
    substr $S10, rx744_tgt, rx744_pos, 1
    ne $S10, ucs4:"[", rx744_fail1708
    add rx744_pos, 1
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."ws"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."role_params"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    nqp_rxmark rx744_bstack, rxsubrule766_pass1742, -1, 0
  rxsubrule766_pass1742:
    rx744_cstack = rx744_cur."!cursor_capture"($P11, "role_params")
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
  alt767_01744:
    nqp_rxmark rx744_bstack, alt767_11745, rx744_pos, 0
    add $I11, rx744_pos, 1
    gt $I11, rx744_eos, rx744_fail1708
    substr $S10, rx744_tgt, rx744_pos, 1
    ne $S10, ucs4:"]", rx744_fail1708
    add rx744_pos, 1
    goto alt767_end1743
  alt767_11745:
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."FAILGOAL"("']'")
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    goto rxsubrule768_pass1746
  rxsubrule768_back1747:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
  rxsubrule768_pass1746:
    rx744_cstack = rx744_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule768_back1747
    push rx744_bstack, $I11
    push rx744_bstack, 0
    push rx744_bstack, rx744_pos
    elements $I11, rx744_cstack
    push rx744_bstack, $I11
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
  alt767_end1743:
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."ws"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
    nqp_rxpeek $I19, rx744_bstack, rxquantr759_done1733
    inc $I19
    inc $I19
    set rx744_rep, rx744_bstack[$I19]
    nqp_rxcommit rx744_bstack, rxquantr759_done1733
    inc rx744_rep
  rxquantr759_done1733:
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."ws"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
    nqp_rxmark rx744_bstack, rxquantr771_done1751, rx744_pos, 0
  rxquantr771_loop1750:
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."ws"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
    add $I11, rx744_pos, 2
    gt $I11, rx744_eos, rx744_fail1708
    substr $S10, rx744_tgt, rx744_pos, 2
    ne $S10, ucs4:"is", rx744_fail1708
    add rx744_pos, 2
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."ws"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
    add $I11, rx744_pos, 5
    gt $I11, rx744_eos, rx744_fail1708
    substr $S10, rx744_tgt, rx744_pos, 5
    ne $S10, ucs4:"repr(", rx744_fail1708
    add rx744_pos, 5
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."ws"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."quote_EXPR"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    nqp_rxmark rx744_bstack, rxsubrule775_pass1755, -1, 0
  rxsubrule775_pass1755:
    rx744_cstack = rx744_cur."!cursor_capture"($P11, "repr")
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."ws"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
    add $I11, rx744_pos, 1
    gt $I11, rx744_eos, rx744_fail1708
    substr $S10, rx744_tgt, rx744_pos, 1
    ne $S10, ucs4:")", rx744_fail1708
    add rx744_pos, 1
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."ws"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
    nqp_rxpeek $I19, rx744_bstack, rxquantr771_done1751
    inc $I19
    inc $I19
    set rx744_rep, rx744_bstack[$I19]
    nqp_rxcommit rx744_bstack, rxquantr771_done1751
    inc rx744_rep
  rxquantr771_done1751:
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."ws"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    store_lex unicode:"$\x{a2}", rx744_cur
    $P5022 = $P103."MATCH"()
    set $P104, $P5022
    .const 'Sub' $P5023 = 'cuid_404_1365879995.227' 
    capture_lex $P5023
    $P5024 = $P5023()
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."ws"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
    nqp_rxmark rx744_bstack, rxquantr870_done1915, rx744_pos, 0
  rxquantr870_loop1914:
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."ws"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
    nqp_rxmark rx744_bstack, rxcap872_fail1918, rx744_pos, 0
    add $I11, rx744_pos, 9
    gt $I11, rx744_eos, rx744_fail1708
    substr $S10, rx744_tgt, rx744_pos, 9
    ne $S10, ucs4:"is export", rx744_fail1708
    add rx744_pos, 9
    nqp_rxpeek $I19, rx744_bstack, rxcap872_fail1918
    inc $I19
    set $I11, rx744_bstack[$I19]
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx744_pos)
    rx744_cstack = rx744_cur."!cursor_capture"($P11, "export")
    goto rxcap872_done1917
  rxcap872_fail1918:
    goto rx744_fail1708
  rxcap872_done1917:
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."ws"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
    nqp_rxpeek $I19, rx744_bstack, rxquantr870_done1915
    inc $I19
    inc $I19
    set rx744_rep, rx744_bstack[$I19]
    nqp_rxcommit rx744_bstack, rxquantr870_done1915
    inc rx744_rep
  rxquantr870_done1915:
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."ws"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
    nqp_rxmark rx744_bstack, rxquantr875_done1922, rx744_pos, 0
  rxquantr875_loop1921:
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."ws"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
    add $I11, rx744_pos, 2
    gt $I11, rx744_eos, rx744_fail1708
    substr $S10, rx744_tgt, rx744_pos, 2
    ne $S10, ucs4:"is", rx744_fail1708
    add rx744_pos, 2
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."ws"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."name"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    nqp_rxmark rx744_bstack, rxsubrule878_pass1925, -1, 0
  rxsubrule878_pass1925:
    rx744_cstack = rx744_cur."!cursor_capture"($P11, "parent")
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."ws"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
    nqp_rxpeek $I19, rx744_bstack, rxquantr875_done1922
    inc $I19
    inc $I19
    set rx744_rep, rx744_bstack[$I19]
    nqp_rxcommit rx744_bstack, rxquantr875_done1922
    inc rx744_rep
  rxquantr875_done1922:
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."ws"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
    nqp_rxmark rx744_bstack, rxquantr881_done1929, rx744_pos, 0
  rxquantr881_loop1928:
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."ws"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
    add $I11, rx744_pos, 4
    gt $I11, rx744_eos, rx744_fail1708
    substr $S10, rx744_tgt, rx744_pos, 4
    ne $S10, ucs4:"does", rx744_fail1708
    add rx744_pos, 4
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."ws"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."name"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    nqp_rxmark rx744_bstack, rxsubrule884_pass1932, -1, 0
  rxsubrule884_pass1932:
    rx744_cstack = rx744_cur."!cursor_capture"($P11, "role")
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."ws"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
    nqp_rxpeek $I19, rx744_bstack, rxquantr881_done1929
    inc $I19
    inc $I19
    set rx744_rep, rx744_bstack[$I19]
    nqp_rxcommit rx744_bstack, rxquantr881_done1929
    inc rx744_rep
    nqp_rxmark rx744_bstack, rxquantr881_done1929, rx744_pos, rx744_rep
    goto rxquantr881_loop1928
  rxquantr881_done1929:
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."ws"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
  alt887_01936:
    nqp_rxmark rx744_bstack, alt887_11951, rx744_pos, 0
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."ws"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
    add $I11, rx744_pos, 1
    gt $I11, rx744_eos, rx744_fail1708
    substr $S10, rx744_tgt, rx744_pos, 1
    ne $S10, ucs4:";", rx744_fail1708
    add rx744_pos, 1
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."ws"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."statementlist"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    nqp_rxmark rx744_bstack, rxsubrule890_pass1939, -1, 0
  rxsubrule890_pass1939:
    rx744_cstack = rx744_cur."!cursor_capture"($P11, "statementlist")
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."ws"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
  alt892_01942:
    nqp_rxmark rx744_bstack, alt892_11946, rx744_pos, 0
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."ws"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
    lt rx744_pos, rx744_eos, rx744_fail1708
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."ws"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
    goto alt892_end1941
  alt892_11946:
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."ws"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."panic"("Confused")
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."ws"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
  alt892_end1941:
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."ws"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
    goto alt887_end1935
  alt887_11951:
    nqp_rxmark rx744_bstack, alt887_21956, rx744_pos, 0
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."ws"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
    ge rx744_pos, rx744_eos, rx744_fail1708
    substr $S11, rx744_tgt, rx744_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx744_fail1708
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."ws"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    nqp_rxmark rx744_bstack, rxsubrule902_pass1954, -1, 0
  rxsubrule902_pass1954:
    rx744_cstack = rx744_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."ws"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
    goto alt887_end1935
  alt887_21956:
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."ws"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."panic"("Malformed package declaration")
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."ws"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
  alt887_end1935:
    repr_bind_attr_int rx744_cur, rx744_curclass, "$!pos", rx744_pos
    $P11 = rx744_cur."ws"()
    repr_get_attr_int $I11, $P11, rx744_curclass, "$!pos"
    lt $I11, 0, rx744_fail1708
    repr_get_attr_int rx744_pos, $P11, rx744_curclass, "$!pos"
    rx744_cur."!cursor_pass"(rx744_pos, "package_def", 'backtrack'=>1)
    .return (rx744_cur)
  rx744_restart1707:
    repr_get_attr_obj rx744_cstack, rx744_cur, rx744_curclass, "$!cstack"
  rx744_fail1708:
    unless rx744_bstack, rx744_done1706
    pop $I19, rx744_bstack
    if_null rx744_cstack, rx744_cstack_done1711
    unless rx744_cstack, rx744_cstack_done1711
    dec $I19
    set $P11, rx744_cstack[$I19]
  rx744_cstack_done1711:
    pop rx744_rep, rx744_bstack
    pop rx744_pos, rx744_bstack
    pop $I19, rx744_bstack
    lt rx744_pos, -1, rx744_done1706
    lt rx744_pos, 0, rx744_fail1708
    eq $I19, 0, rx744_fail1708
    nqp_islist $I20, rx744_cstack
    unless $I20, rx744_jump1709
    elements $I18, rx744_bstack
    le $I18, 0, rx744_cut1710
    dec $I18
    set $I18, rx744_bstack[$I18]
  rx744_cut1710:
    assign rx744_cstack, $I18
  rx744_jump1709:
    jump $I19
  rx744_done1706:
    rx744_cur."!cursor_fail"()
    .return (rx744_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_403_1365879995.227") :anon :lex :outer("cuid_109_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1001
    .local pmc fb_tmp_106 
    find_dynamic_lex $P5001, "$*PKGDECL"
    unless_null $P5001, fallback1735
    nqp_get_sc_object $P5003, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5002, $P5003
    set fb_tmp_106, $P5002
    repr_defined $I5002, fb_tmp_106
    unless $I5002 goto if761_else1736 
    set $P5004, fb_tmp_106["$PKGDECL"]
    set $P5006, $P5004
    goto if761_end1737
  if761_else1736:
    null $P5005
    set $P5006, $P5005
  if761_end1737:
    unless_null $P5006, vivi_7621738
    nqp_get_sc_object $P5007, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5006, $P5007
  vivi_7621738:
    unless_null $P5006, vivi_7631739
    die "Contextual $*PKGDECL not found"
    box $P5008, "Contextual $*PKGDECL not found"
    set $P5006, $P5008
  vivi_7631739:
    set $P5001, $P5006
  fallback1735:
    set $S5001, $P5001
    iseq $I5001, $S5001, "role"
    .return ($I5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_404_1365879995.227") :anon :lex :outer("cuid_109_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1004
    .lex "%args", $P101 
    .local pmc fb_tmp_107 
    .local pmc fb_tmp_108 
    .local pmc fb_tmp_109 
    .local pmc fb_tmp_110 
    .local pmc fb_tmp_111 
    .local pmc fb_tmp_112 
    .local pmc fb_tmp_113 
    .local pmc fb_tmp_114 
    .local pmc fb_tmp_115 
    .local pmc fb_tmp_116 
    .local pmc pkg_viv_tmp_22 
    .local pmc fb_tmp_117 
    .local pmc fb_tmp_118 
    .local pmc fb_tmp_119 
    .local pmc fb_tmp_120 
    .local pmc fb_tmp_121 
    .local pmc fb_tmp_122 
    .local pmc fb_tmp_123 
    .local pmc fb_tmp_124 
    .local pmc fb_tmp_125 
    .local pmc fb_tmp_126 
    .local pmc fb_tmp_127 
    .local pmc fb_tmp_128 
    .local pmc fb_tmp_129 
    .local pmc fb_tmp_130 
    .local pmc fb_tmp_131 
    .local pmc fb_tmp_132 
    .local pmc fb_tmp_133 
    .local pmc fb_tmp_134 
    .local pmc fb_tmp_135 
    .local pmc fb_tmp_136 
    .local pmc fb_tmp_137 
    .local pmc fb_tmp_138 
    .local pmc fb_tmp_139 
    .local pmc fb_tmp_140 
    .local pmc fb_tmp_141 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $P5002, "$/"
    unless_null $P5002, fallback1761
    nqp_get_sc_object $P5003, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5002, $P5003
  fallback1761:
    set fb_tmp_107, $P5002
    repr_defined $I5001, fb_tmp_107
    unless $I5001 goto if779_else1759 
    set $P5004, fb_tmp_107["name"]
    set $P5006, $P5004
    goto if779_end1760
  if779_else1759:
    null $P5005
    set $P5006, $P5005
  if779_end1760:
    unless_null $P5006, vivi_7801762
    nqp_get_sc_object $P5007, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5006, $P5007
  vivi_7801762:
    set $S5001, $P5006
    box $P5008, $S5001
    set $P101["name"], $P5008
    find_lex $P5009, "$/"
    unless_null $P5009, fallback1767
    nqp_get_sc_object $P5010, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5009, $P5010
  fallback1767:
    set fb_tmp_108, $P5009
    repr_defined $I5002, fb_tmp_108
    unless $I5002 goto if782_else1765 
    set $P5011, fb_tmp_108["repr"]
    set $P5013, $P5011
    goto if782_end1766
  if782_else1765:
    null $P5012
    set $P5013, $P5012
  if782_end1766:
    unless_null $P5013, vivi_7831768
    nqp_get_sc_object $P5014, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5013, $P5014
  vivi_7831768:
    unless $P5013 goto if781_end1764 
.annotate 'line', 1009
    find_lex $P5015, "$/"
    unless_null $P5015, fallback1779
    nqp_get_sc_object $P5016, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5015, $P5016
  fallback1779:
    set fb_tmp_113, $P5015
    repr_defined $I5007, fb_tmp_113
    unless $I5007 goto if788_else1777 
    set $P5017, fb_tmp_113["repr"]
    set $P5019, $P5017
    goto if788_end1778
  if788_else1777:
    null $P5018
    set $P5019, $P5018
  if788_end1778:
    unless_null $P5019, vivi_7891780
    nqp_get_sc_object $P5020, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5019, $P5020
  vivi_7891780:
    set fb_tmp_112, $P5019
    repr_defined $I5006, fb_tmp_112
    unless $I5006 goto if787_else1775 
    set $P5021, fb_tmp_112[0]
    set $P5023, $P5021
    goto if787_end1776
  if787_else1775:
    null $P5022
    set $P5023, $P5022
  if787_end1776:
    unless_null $P5023, vivi_7901781
    nqp_get_sc_object $P5024, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5023, $P5024
  vivi_7901781:
    set fb_tmp_111, $P5023
    repr_defined $I5005, fb_tmp_111
    unless $I5005 goto if786_else1773 
    set $P5025, fb_tmp_111["quote_delimited"]
    set $P5027, $P5025
    goto if786_end1774
  if786_else1773:
    null $P5026
    set $P5027, $P5026
  if786_end1774:
    unless_null $P5027, vivi_7911782
    nqp_get_sc_object $P5028, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5027, $P5028
  vivi_7911782:
    set fb_tmp_110, $P5027
    repr_defined $I5004, fb_tmp_110
    unless $I5004 goto if785_else1771 
    set $P5029, fb_tmp_110["quote_atom"]
    set $P5031, $P5029
    goto if785_end1772
  if785_else1771:
    null $P5030
    set $P5031, $P5030
  if785_end1772:
    unless_null $P5031, vivi_7921783
    nqp_get_sc_object $P5032, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5031, $P5032
  vivi_7921783:
    set fb_tmp_109, $P5031
    repr_defined $I5003, fb_tmp_109
    unless $I5003 goto if784_else1769 
    set $P5033, fb_tmp_109[0]
    set $P5035, $P5033
    goto if784_end1770
  if784_else1769:
    null $P5034
    set $P5035, $P5034
  if784_end1770:
    unless_null $P5035, vivi_7931784
    nqp_get_sc_object $P5036, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5035, $P5036
  vivi_7931784:
    set $S5002, $P5035
    box $P5037, $S5002
    set $P101["repr"], $P5037
  if781_end1764:
.annotate 'line', 1012
    find_dynamic_lex $P5038, "$*W"
    unless_null $P5038, fallback1785
    nqp_get_sc_object $P5040, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5039, $P5040
    set fb_tmp_114, $P5039
    repr_defined $I5008, fb_tmp_114
    unless $I5008 goto if794_else1786 
    set $P5041, fb_tmp_114["$W"]
    set $P5043, $P5041
    goto if794_end1787
  if794_else1786:
    null $P5042
    set $P5043, $P5042
  if794_end1787:
    unless_null $P5043, vivi_7951788
    nqp_get_sc_object $P5044, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5043, $P5044
  vivi_7951788:
    unless_null $P5043, vivi_7961789
    die "Contextual $*W not found"
    box $P5045, "Contextual $*W not found"
    set $P5043, $P5045
  vivi_7961789:
    set $P5038, $P5043
  fallback1785:
    find_dynamic_lex $P5046, "%*HOW"
    unless_null $P5046, fallback1792
    nqp_get_sc_object $P5048, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5047, $P5048
    set pkg_viv_tmp_22, $P5047
    set fb_tmp_116, pkg_viv_tmp_22
    repr_defined $I5010, fb_tmp_116
    unless $I5010 goto if798_else1793 
    set $P5049, fb_tmp_116["%HOW"]
    set $P5051, $P5049
    goto if798_end1794
  if798_else1793:
    null $P5050
    set $P5051, $P5050
  if798_end1794:
    unless_null $P5051, vivi_7991795
    new $P5052, 'Hash'
    set pkg_viv_tmp_22["%HOW"], $P5052
    set $P5051, $P5052
  vivi_7991795:
    unless_null $P5051, vivi_8001796
    die "Contextual %*HOW not found"
    box $P5053, "Contextual %*HOW not found"
    set $P5051, $P5053
  vivi_8001796:
    set $P5046, $P5051
  fallback1792:
    set fb_tmp_115, $P5046
    repr_defined $I5009, fb_tmp_115
    unless $I5009 goto if797_else1790 
    find_dynamic_lex $P5055, "$*PKGDECL"
    unless_null $P5055, fallback1797
    nqp_get_sc_object $P5057, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5056, $P5057
    set fb_tmp_117, $P5056
    repr_defined $I5011, fb_tmp_117
    unless $I5011 goto if801_else1798 
    set $P5058, fb_tmp_117["$PKGDECL"]
    set $P5060, $P5058
    goto if801_end1799
  if801_else1798:
    null $P5059
    set $P5060, $P5059
  if801_end1799:
    unless_null $P5060, vivi_8021800
    nqp_get_sc_object $P5061, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5060, $P5061
  vivi_8021800:
    unless_null $P5060, vivi_8031801
    die "Contextual $*PKGDECL not found"
    box $P5062, "Contextual $*PKGDECL not found"
    set $P5060, $P5062
  vivi_8031801:
    set $P5055, $P5060
  fallback1797:
    set $S5003, $P5055
    set $P5054, fb_tmp_115[$S5003]
    set $P5064, $P5054
    goto if797_end1791
  if797_else1790:
    null $P5063
    set $P5064, $P5063
  if797_end1791:
    unless_null $P5064, vivi_8041802
    nqp_get_sc_object $P5065, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5064, $P5065
  vivi_8041802:
    $P5066 = $P5038."pkg_create_mo"($P5064, $P101 :flat :named)
    store_dynamic_lex "$*PACKAGE", $P5066
    find_dynamic_lex $P5067, "$*SCOPE"
    unless_null $P5067, fallback1807
    nqp_get_sc_object $P5069, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5068, $P5069
    set fb_tmp_118, $P5068
    repr_defined $I5013, fb_tmp_118
    unless $I5013 goto if807_else1808 
    set $P5070, fb_tmp_118["$SCOPE"]
    set $P5072, $P5070
    goto if807_end1809
  if807_else1808:
    null $P5071
    set $P5072, $P5071
  if807_end1809:
    unless_null $P5072, vivi_8081810
    nqp_get_sc_object $P5073, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5072, $P5073
  vivi_8081810:
    unless_null $P5072, vivi_8091811
    die "Contextual $*SCOPE not found"
    box $P5074, "Contextual $*SCOPE not found"
    set $P5072, $P5074
  vivi_8091811:
    set $P5067, $P5072
  fallback1807:
    set $S5004, $P5067
    iseq $I5012, $S5004, "our"
    set $I5016, $I5012
    if $I5012 goto unless806_end1806 
    find_dynamic_lex $P5075, "$*SCOPE"
    unless_null $P5075, fallback1812
    nqp_get_sc_object $P5077, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5076, $P5077
    set fb_tmp_119, $P5076
    repr_defined $I5015, fb_tmp_119
    unless $I5015 goto if810_else1813 
    set $P5078, fb_tmp_119["$SCOPE"]
    set $P5080, $P5078
    goto if810_end1814
  if810_else1813:
    null $P5079
    set $P5080, $P5079
  if810_end1814:
    unless_null $P5080, vivi_8111815
    nqp_get_sc_object $P5081, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5080, $P5081
  vivi_8111815:
    unless_null $P5080, vivi_8121816
    die "Contextual $*SCOPE not found"
    box $P5082, "Contextual $*SCOPE not found"
    set $P5080, $P5082
  vivi_8121816:
    set $P5075, $P5080
  fallback1812:
    set $S5005, $P5075
    iseq $I5014, $S5005, ""
    set $I5016, $I5014
  unless806_end1806:
    unless $I5016 goto if805_else1803 
.annotate 'line', 1015
.annotate 'line', 1016
    find_dynamic_lex $P5083, "$*W"
    unless_null $P5083, fallback1817
    nqp_get_sc_object $P5085, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5084, $P5085
    set fb_tmp_120, $P5084
    repr_defined $I5017, fb_tmp_120
    unless $I5017 goto if813_else1818 
    set $P5086, fb_tmp_120["$W"]
    set $P5088, $P5086
    goto if813_end1819
  if813_else1818:
    null $P5087
    set $P5088, $P5087
  if813_end1819:
    unless_null $P5088, vivi_8141820
    nqp_get_sc_object $P5089, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5088, $P5089
  vivi_8141820:
    unless_null $P5088, vivi_8151821
    die "Contextual $*W not found"
    box $P5090, "Contextual $*W not found"
    set $P5088, $P5090
  vivi_8151821:
    set $P5083, $P5088
  fallback1817:
    find_dynamic_lex $P5091, "$*OUTERPACKAGE"
    unless_null $P5091, fallback1822
    nqp_get_sc_object $P5093, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5092, $P5093
    set fb_tmp_121, $P5092
    repr_defined $I5018, fb_tmp_121
    unless $I5018 goto if816_else1823 
    set $P5094, fb_tmp_121["$OUTERPACKAGE"]
    set $P5096, $P5094
    goto if816_end1824
  if816_else1823:
    null $P5095
    set $P5096, $P5095
  if816_end1824:
    unless_null $P5096, vivi_8171825
    nqp_get_sc_object $P5097, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5096, $P5097
  vivi_8171825:
    unless_null $P5096, vivi_8181826
    die "Contextual $*OUTERPACKAGE not found"
    box $P5098, "Contextual $*OUTERPACKAGE not found"
    set $P5096, $P5098
  vivi_8181826:
    set $P5091, $P5096
  fallback1822:
    find_lex $P5099, "$/"
    unless_null $P5099, fallback1831
    nqp_get_sc_object $P5100, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5099, $P5100
  fallback1831:
    set fb_tmp_123, $P5099
    repr_defined $I5020, fb_tmp_123
    unless $I5020 goto if820_else1829 
    set $P5101, fb_tmp_123["name"]
    set $P5103, $P5101
    goto if820_end1830
  if820_else1829:
    null $P5102
    set $P5103, $P5102
  if820_end1830:
    unless_null $P5103, vivi_8211832
    nqp_get_sc_object $P5104, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5103, $P5104
  vivi_8211832:
    set fb_tmp_122, $P5103
    repr_defined $I5019, fb_tmp_122
    unless $I5019 goto if819_else1827 
    set $P5105, fb_tmp_122["identifier"]
    set $P5107, $P5105
    goto if819_end1828
  if819_else1827:
    null $P5106
    set $P5107, $P5106
  if819_end1828:
    unless_null $P5107, vivi_8221833
    nqp_get_sc_object $P5108, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5107, $P5108
  vivi_8221833:
    find_dynamic_lex $P5109, "$*PACKAGE"
    unless_null $P5109, fallback1834
    nqp_get_sc_object $P5111, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5110, $P5111
    set fb_tmp_124, $P5110
    repr_defined $I5021, fb_tmp_124
    unless $I5021 goto if823_else1835 
    set $P5112, fb_tmp_124["$PACKAGE"]
    set $P5114, $P5112
    goto if823_end1836
  if823_else1835:
    null $P5113
    set $P5114, $P5113
  if823_end1836:
    unless_null $P5114, vivi_8241837
    nqp_get_sc_object $P5115, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5114, $P5115
  vivi_8241837:
    unless_null $P5114, vivi_8251838
    die "Contextual $*PACKAGE not found"
    box $P5116, "Contextual $*PACKAGE not found"
    set $P5114, $P5116
  vivi_8251838:
    set $P5109, $P5114
  fallback1834:
    $P5083."install_package_symbol"($P5091, $P5107, $P5109)
    find_lex $P5117, "$/"
    unless_null $P5117, fallback1845
    nqp_get_sc_object $P5118, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5117, $P5118
  fallback1845:
    set fb_tmp_126, $P5117
    repr_defined $I5024, fb_tmp_126
    unless $I5024 goto if828_else1843 
    set $P5119, fb_tmp_126["name"]
    set $P5121, $P5119
    goto if828_end1844
  if828_else1843:
    null $P5120
    set $P5121, $P5120
  if828_end1844:
    unless_null $P5121, vivi_8291846
    nqp_get_sc_object $P5122, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5121, $P5122
  vivi_8291846:
    set fb_tmp_125, $P5121
    repr_defined $I5023, fb_tmp_125
    unless $I5023 goto if827_else1841 
    set $P5123, fb_tmp_125["identifier"]
    set $P5125, $P5123
    goto if827_end1842
  if827_else1841:
    null $P5124
    set $P5125, $P5124
  if827_end1842:
    unless_null $P5125, vivi_8301847
    nqp_get_sc_object $P5126, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5125, $P5126
  vivi_8301847:
    set $N5001, $P5125
    set $N5002, 1
    iseq $I5022, $N5001, $N5002
    box $P5160, $I5022
    set $P5159, $P5160
    unless $I5022 goto if826_end1840 
.annotate 'line', 1017
.annotate 'line', 1018
    find_dynamic_lex $P5127, "$*W"
    unless_null $P5127, fallback1848
    nqp_get_sc_object $P5129, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5128, $P5129
    set fb_tmp_127, $P5128
    repr_defined $I5025, fb_tmp_127
    unless $I5025 goto if831_else1849 
    set $P5130, fb_tmp_127["$W"]
    set $P5132, $P5130
    goto if831_end1850
  if831_else1849:
    null $P5131
    set $P5132, $P5131
  if831_end1850:
    unless_null $P5132, vivi_8321851
    nqp_get_sc_object $P5133, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5132, $P5133
  vivi_8321851:
    unless_null $P5132, vivi_8331852
    die "Contextual $*W not found"
    box $P5134, "Contextual $*W not found"
    set $P5132, $P5134
  vivi_8331852:
    set $P5127, $P5132
  fallback1848:
    find_lex $P5135, "$OUTER"
    find_lex $P5136, "$/"
    unless_null $P5136, fallback1859
    nqp_get_sc_object $P5137, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5136, $P5137
  fallback1859:
    set fb_tmp_130, $P5136
    repr_defined $I5028, fb_tmp_130
    unless $I5028 goto if836_else1857 
    set $P5138, fb_tmp_130["name"]
    set $P5140, $P5138
    goto if836_end1858
  if836_else1857:
    null $P5139
    set $P5140, $P5139
  if836_end1858:
    unless_null $P5140, vivi_8371860
    nqp_get_sc_object $P5141, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5140, $P5141
  vivi_8371860:
    set fb_tmp_129, $P5140
    repr_defined $I5027, fb_tmp_129
    unless $I5027 goto if835_else1855 
    set $P5142, fb_tmp_129["identifier"]
    set $P5144, $P5142
    goto if835_end1856
  if835_else1855:
    null $P5143
    set $P5144, $P5143
  if835_end1856:
    unless_null $P5144, vivi_8381861
    nqp_get_sc_object $P5145, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5144, $P5145
  vivi_8381861:
    set fb_tmp_128, $P5144
    repr_defined $I5026, fb_tmp_128
    unless $I5026 goto if834_else1853 
    set $P5146, fb_tmp_128[0]
    set $P5148, $P5146
    goto if834_end1854
  if834_else1853:
    null $P5147
    set $P5148, $P5147
  if834_end1854:
    unless_null $P5148, vivi_8391862
    nqp_get_sc_object $P5149, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5148, $P5149
  vivi_8391862:
    find_dynamic_lex $P5150, "$*PACKAGE"
    unless_null $P5150, fallback1863
    nqp_get_sc_object $P5152, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5151, $P5152
    set fb_tmp_131, $P5151
    repr_defined $I5029, fb_tmp_131
    unless $I5029 goto if840_else1864 
    set $P5153, fb_tmp_131["$PACKAGE"]
    set $P5155, $P5153
    goto if840_end1865
  if840_else1864:
    null $P5154
    set $P5155, $P5154
  if840_end1865:
    unless_null $P5155, vivi_8411866
    nqp_get_sc_object $P5156, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5155, $P5156
  vivi_8411866:
    unless_null $P5155, vivi_8421867
    die "Contextual $*PACKAGE not found"
    box $P5157, "Contextual $*PACKAGE not found"
    set $P5155, $P5157
  vivi_8421867:
    set $P5150, $P5155
  fallback1863:
    $P5158 = $P5127."install_lexical_symbol"($P5135, $P5148, $P5150)
    set $P5159, $P5158
  if826_end1840:
    set $P5231, $P5159
    goto if805_end1804
  if805_else1803:
    find_dynamic_lex $P5161, "$*SCOPE"
    unless_null $P5161, fallback1870
    nqp_get_sc_object $P5163, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5162, $P5163
    set fb_tmp_132, $P5162
    repr_defined $I5031, fb_tmp_132
    unless $I5031 goto if844_else1871 
    set $P5164, fb_tmp_132["$SCOPE"]
    set $P5166, $P5164
    goto if844_end1872
  if844_else1871:
    null $P5165
    set $P5166, $P5165
  if844_end1872:
    unless_null $P5166, vivi_8451873
    nqp_get_sc_object $P5167, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5166, $P5167
  vivi_8451873:
    unless_null $P5166, vivi_8461874
    die "Contextual $*SCOPE not found"
    box $P5168, "Contextual $*SCOPE not found"
    set $P5166, $P5168
  vivi_8461874:
    set $P5161, $P5166
  fallback1870:
    set $S5006, $P5161
    iseq $I5030, $S5006, "my"
    unless $I5030 goto if843_else1868 
.annotate 'line', 1021
    find_lex $P5169, "$/"
    unless_null $P5169, fallback1881
    nqp_get_sc_object $P5170, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5169, $P5170
  fallback1881:
    set fb_tmp_134, $P5169
    repr_defined $I5034, fb_tmp_134
    unless $I5034 goto if849_else1879 
    set $P5171, fb_tmp_134["name"]
    set $P5173, $P5171
    goto if849_end1880
  if849_else1879:
    null $P5172
    set $P5173, $P5172
  if849_end1880:
    unless_null $P5173, vivi_8501882
    nqp_get_sc_object $P5174, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5173, $P5174
  vivi_8501882:
    set fb_tmp_133, $P5173
    repr_defined $I5033, fb_tmp_133
    unless $I5033 goto if848_else1877 
    set $P5175, fb_tmp_133["identifier"]
    set $P5177, $P5175
    goto if848_end1878
  if848_else1877:
    null $P5176
    set $P5177, $P5176
  if848_end1878:
    unless_null $P5177, vivi_8511883
    nqp_get_sc_object $P5178, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5177, $P5178
  vivi_8511883:
    set $N5003, $P5177
    set $N5004, 1
    isne $I5032, $N5003, $N5004
    unless $I5032 goto if847_end1876 
.annotate 'line', 1022
.annotate 'line', 1023
    find_lex $P5179, "$/"
    unless_null $P5179, fallback1886
    nqp_get_sc_object $P5180, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5179, $P5180
  fallback1886:
    set fb_tmp_135, $P5179
    repr_defined $I5035, fb_tmp_135
    unless $I5035 goto if852_else1884 
    set $P5181, fb_tmp_135["name"]
    set $P5183, $P5181
    goto if852_end1885
  if852_else1884:
    null $P5182
    set $P5183, $P5182
  if852_end1885:
    unless_null $P5183, vivi_8531887
    nqp_get_sc_object $P5184, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5183, $P5184
  vivi_8531887:
    $P5185 = $P5183."CURSOR"()
    $P5186 = $P5185."panic"("A my scoped package cannot have a multi-part name yet")
  if847_end1876:
.annotate 'line', 1025
    find_dynamic_lex $P5187, "$*W"
    unless_null $P5187, fallback1888
    nqp_get_sc_object $P5189, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5188, $P5189
    set fb_tmp_136, $P5188
    repr_defined $I5036, fb_tmp_136
    unless $I5036 goto if854_else1889 
    set $P5190, fb_tmp_136["$W"]
    set $P5192, $P5190
    goto if854_end1890
  if854_else1889:
    null $P5191
    set $P5192, $P5191
  if854_end1890:
    unless_null $P5192, vivi_8551891
    nqp_get_sc_object $P5193, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5192, $P5193
  vivi_8551891:
    unless_null $P5192, vivi_8561892
    die "Contextual $*W not found"
    box $P5194, "Contextual $*W not found"
    set $P5192, $P5194
  vivi_8561892:
    set $P5187, $P5192
  fallback1888:
    find_lex $P5195, "$OUTER"
    find_lex $P5196, "$/"
    unless_null $P5196, fallback1899
    nqp_get_sc_object $P5197, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5196, $P5197
  fallback1899:
    set fb_tmp_139, $P5196
    repr_defined $I5039, fb_tmp_139
    unless $I5039 goto if859_else1897 
    set $P5198, fb_tmp_139["name"]
    set $P5200, $P5198
    goto if859_end1898
  if859_else1897:
    null $P5199
    set $P5200, $P5199
  if859_end1898:
    unless_null $P5200, vivi_8601900
    nqp_get_sc_object $P5201, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5200, $P5201
  vivi_8601900:
    set fb_tmp_138, $P5200
    repr_defined $I5038, fb_tmp_138
    unless $I5038 goto if858_else1895 
    set $P5202, fb_tmp_138["identifier"]
    set $P5204, $P5202
    goto if858_end1896
  if858_else1895:
    null $P5203
    set $P5204, $P5203
  if858_end1896:
    unless_null $P5204, vivi_8611901
    nqp_get_sc_object $P5205, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5204, $P5205
  vivi_8611901:
    set fb_tmp_137, $P5204
    repr_defined $I5037, fb_tmp_137
    unless $I5037 goto if857_else1893 
    set $P5206, fb_tmp_137[0]
    set $P5208, $P5206
    goto if857_end1894
  if857_else1893:
    null $P5207
    set $P5208, $P5207
  if857_end1894:
    unless_null $P5208, vivi_8621902
    nqp_get_sc_object $P5209, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5208, $P5209
  vivi_8621902:
    find_dynamic_lex $P5210, "$*PACKAGE"
    unless_null $P5210, fallback1903
    nqp_get_sc_object $P5212, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5211, $P5212
    set fb_tmp_140, $P5211
    repr_defined $I5040, fb_tmp_140
    unless $I5040 goto if863_else1904 
    set $P5213, fb_tmp_140["$PACKAGE"]
    set $P5215, $P5213
    goto if863_end1905
  if863_else1904:
    null $P5214
    set $P5215, $P5214
  if863_end1905:
    unless_null $P5215, vivi_8641906
    nqp_get_sc_object $P5216, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5215, $P5216
  vivi_8641906:
    unless_null $P5215, vivi_8651907
    die "Contextual $*PACKAGE not found"
    box $P5217, "Contextual $*PACKAGE not found"
    set $P5215, $P5217
  vivi_8651907:
    set $P5210, $P5215
  fallback1903:
    $P5218 = $P5187."install_lexical_symbol"($P5195, $P5208, $P5210)
    set $P5230, $P5218
    goto if843_end1869
  if843_else1868:
.annotate 'line', 1027
.annotate 'line', 1028
    find_lex $P5219, "$/"
    $P5220 = $P5219."CURSOR"()
    find_dynamic_lex $P5221, "$*SCOPE"
    unless_null $P5221, fallback1908
    nqp_get_sc_object $P5223, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5222, $P5223
    set fb_tmp_141, $P5222
    repr_defined $I5041, fb_tmp_141
    unless $I5041 goto if866_else1909 
    set $P5224, fb_tmp_141["$SCOPE"]
    set $P5226, $P5224
    goto if866_end1910
  if866_else1909:
    null $P5225
    set $P5226, $P5225
  if866_end1910:
    unless_null $P5226, vivi_8671911
    nqp_get_sc_object $P5227, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5226, $P5227
  vivi_8671911:
    unless_null $P5226, vivi_8681912
    die "Contextual $*SCOPE not found"
    box $P5228, "Contextual $*SCOPE not found"
    set $P5226, $P5228
  vivi_8681912:
    set $P5221, $P5226
  fallback1908:
    set $S5008, $P5221
    concat $S5007, $S5008, " scoped packages are not supported"
    $P5229 = $P5220."panic"($S5007)
    set $P5230, $P5229
  if843_end1869:
    set $P5231, $P5230
  if805_end1804:
    .return ($P5231) 
.end
.HLL "nqp"
.namespace []
.sub "role_params" :subid("cuid_110_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1042
    .param pmc _lex_param_0 
    .lex "$*SCOPE", $P101 
    .lex "$*IN_DECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx908_start
    .local string rx908_tgt
    .local int rx908_pos
    .local int rx908_off
    .local int rx908_eos
    .local int rx908_rep
    .local pmc rx908_cur
    .local pmc rx908_curclass
    .local pmc rx908_bstack
    .local pmc rx908_cstack
    rx908_start = self."!cursor_start_all"()
    set rx908_cur, rx908_start[0]
    set rx908_tgt, rx908_start[1]
    set rx908_pos, rx908_start[2]
    set rx908_curclass, rx908_start[3]
    set rx908_bstack, rx908_start[4]
    set $I19, rx908_start[5]
    store_lex unicode:"$\x{a2}", rx908_cur
    length rx908_eos, rx908_tgt
    eq $I19, 1, rx908_restart1963
    gt rx908_pos, rx908_eos, rx908_fail1964
    repr_get_attr_int $I11, self, rx908_curclass, "$!from"
    ne $I11, -1, rxscan909_done1970
    goto rxscan909_scan1969
  rxscan909_loop1968:
    inc rx908_pos
    gt rx908_pos, rx908_eos, rx908_fail1964
    repr_bind_attr_int rx908_cur, rx908_curclass, "$!from", rx908_pos
  rxscan909_scan1969:
    nqp_rxmark rx908_bstack, rxscan909_loop1968, rx908_pos, 0
  rxscan909_done1970:
    repr_bind_attr_int rx908_cur, rx908_curclass, "$!pos", rx908_pos
    $P11 = rx908_cur."ws"()
    repr_get_attr_int $I11, $P11, rx908_curclass, "$!pos"
    lt $I11, 0, rx908_fail1964
    repr_get_attr_int rx908_pos, $P11, rx908_curclass, "$!pos"
    repr_bind_attr_int rx908_cur, rx908_curclass, "$!pos", rx908_pos
    store_lex unicode:"$\x{a2}", rx908_cur
    box $P5003, "my"
    set $P101, $P5003
    repr_bind_attr_int rx908_cur, rx908_curclass, "$!pos", rx908_pos
    $P11 = rx908_cur."ws"()
    repr_get_attr_int $I11, $P11, rx908_curclass, "$!pos"
    lt $I11, 0, rx908_fail1964
    repr_get_attr_int rx908_pos, $P11, rx908_curclass, "$!pos"
    repr_bind_attr_int rx908_cur, rx908_curclass, "$!pos", rx908_pos
    store_lex unicode:"$\x{a2}", rx908_cur
    box $P5004, "variable"
    set $P102, $P5004
    repr_bind_attr_int rx908_cur, rx908_curclass, "$!pos", rx908_pos
    $P11 = rx908_cur."ws"()
    repr_get_attr_int $I11, $P11, rx908_curclass, "$!pos"
    lt $I11, 0, rx908_fail1964
    repr_get_attr_int rx908_pos, $P11, rx908_curclass, "$!pos"
    nqp_rxmark rx908_bstack, rxquantr913_done1975, -1, 0
  rxquantr913_loop1974:
    repr_bind_attr_int rx908_cur, rx908_curclass, "$!pos", rx908_pos
    $P11 = rx908_cur."ws"()
    repr_get_attr_int $I11, $P11, rx908_curclass, "$!pos"
    lt $I11, 0, rx908_fail1964
    repr_get_attr_int rx908_pos, $P11, rx908_curclass, "$!pos"
    repr_bind_attr_int rx908_cur, rx908_curclass, "$!pos", rx908_pos
    $P11 = rx908_cur."variable"()
    repr_get_attr_int $I11, $P11, rx908_curclass, "$!pos"
    lt $I11, 0, rx908_fail1964
    nqp_rxmark rx908_bstack, rxsubrule915_pass1977, -1, 0
  rxsubrule915_pass1977:
    rx908_cstack = rx908_cur."!cursor_capture"($P11, "variable")
    repr_get_attr_int rx908_pos, $P11, rx908_curclass, "$!pos"
    repr_bind_attr_int rx908_cur, rx908_curclass, "$!pos", rx908_pos
    $P11 = rx908_cur."ws"()
    repr_get_attr_int $I11, $P11, rx908_curclass, "$!pos"
    lt $I11, 0, rx908_fail1964
    repr_get_attr_int rx908_pos, $P11, rx908_curclass, "$!pos"
    nqp_rxpeek $I19, rx908_bstack, rxquantr913_done1975
    inc $I19
    inc $I19
    set rx908_rep, rx908_bstack[$I19]
    nqp_rxcommit rx908_bstack, rxquantr913_done1975
    inc rx908_rep
    nqp_rxmark rx908_bstack, rxquantr913_done1975, rx908_pos, rx908_rep
    repr_bind_attr_int rx908_cur, rx908_curclass, "$!pos", rx908_pos
    $P11 = rx908_cur."ws"()
    repr_get_attr_int $I11, $P11, rx908_curclass, "$!pos"
    lt $I11, 0, rx908_fail1964
    repr_get_attr_int rx908_pos, $P11, rx908_curclass, "$!pos"
    add $I11, rx908_pos, 1
    gt $I11, rx908_eos, rx908_fail1964
    substr $S10, rx908_tgt, rx908_pos, 1
    ne $S10, ucs4:",", rx908_fail1964
    add rx908_pos, 1
    repr_bind_attr_int rx908_cur, rx908_curclass, "$!pos", rx908_pos
    $P11 = rx908_cur."ws"()
    repr_get_attr_int $I11, $P11, rx908_curclass, "$!pos"
    lt $I11, 0, rx908_fail1964
    repr_get_attr_int rx908_pos, $P11, rx908_curclass, "$!pos"
    goto rxquantr913_loop1974
  rxquantr913_done1975:
    repr_bind_attr_int rx908_cur, rx908_curclass, "$!pos", rx908_pos
    $P11 = rx908_cur."ws"()
    repr_get_attr_int $I11, $P11, rx908_curclass, "$!pos"
    lt $I11, 0, rx908_fail1964
    repr_get_attr_int rx908_pos, $P11, rx908_curclass, "$!pos"
    rx908_cur."!cursor_pass"(rx908_pos, "role_params", 'backtrack'=>1)
    .return (rx908_cur)
  rx908_restart1963:
    repr_get_attr_obj rx908_cstack, rx908_cur, rx908_curclass, "$!cstack"
  rx908_fail1964:
    unless rx908_bstack, rx908_done1962
    pop $I19, rx908_bstack
    if_null rx908_cstack, rx908_cstack_done1967
    unless rx908_cstack, rx908_cstack_done1967
    dec $I19
    set $P11, rx908_cstack[$I19]
  rx908_cstack_done1967:
    pop rx908_rep, rx908_bstack
    pop rx908_pos, rx908_bstack
    pop $I19, rx908_bstack
    lt rx908_pos, -1, rx908_done1962
    lt rx908_pos, 0, rx908_fail1964
    eq $I19, 0, rx908_fail1964
    nqp_islist $I20, rx908_cstack
    unless $I20, rx908_jump1965
    elements $I18, rx908_bstack
    le $I18, 0, rx908_cut1966
    dec $I18
    set $I18, rx908_bstack[$I18]
  rx908_cut1966:
    assign rx908_cstack, $I18
  rx908_jump1965:
    jump $I19
  rx908_done1962:
    rx908_cur."!cursor_fail"()
    .return (rx908_cur) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator" :subid("cuid_111_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1048
    .param pmc self 
    $P5001 = self."!protoregex"("scope_declarator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<my>" :subid("cuid_112_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1049
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx920_start
    .local string rx920_tgt
    .local int rx920_pos
    .local int rx920_off
    .local int rx920_eos
    .local int rx920_rep
    .local pmc rx920_cur
    .local pmc rx920_curclass
    .local pmc rx920_bstack
    .local pmc rx920_cstack
    rx920_start = self."!cursor_start_all"()
    set rx920_cur, rx920_start[0]
    set rx920_tgt, rx920_start[1]
    set rx920_pos, rx920_start[2]
    set rx920_curclass, rx920_start[3]
    set rx920_bstack, rx920_start[4]
    set $I19, rx920_start[5]
    store_lex unicode:"$\x{a2}", rx920_cur
    length rx920_eos, rx920_tgt
    eq $I19, 1, rx920_restart1984
    gt rx920_pos, rx920_eos, rx920_fail1985
    repr_get_attr_int $I11, self, rx920_curclass, "$!from"
    ne $I11, -1, rxscan921_done1991
    goto rxscan921_scan1990
  rxscan921_loop1989:
    inc rx920_pos
    gt rx920_pos, rx920_eos, rx920_fail1985
    repr_bind_attr_int rx920_cur, rx920_curclass, "$!from", rx920_pos
  rxscan921_scan1990:
    nqp_rxmark rx920_bstack, rxscan921_loop1989, rx920_pos, 0
  rxscan921_done1991:
    nqp_rxmark rx920_bstack, rxcap922_fail1993, rx920_pos, 0
    add $I11, rx920_pos, 2
    gt $I11, rx920_eos, rx920_fail1985
    substr $S10, rx920_tgt, rx920_pos, 2
    ne $S10, ucs4:"my", rx920_fail1985
    add rx920_pos, 2
    nqp_rxpeek $I19, rx920_bstack, rxcap922_fail1993
    inc $I19
    set $I11, rx920_bstack[$I19]
    repr_bind_attr_int rx920_cur, rx920_curclass, "$!pos", rx920_pos
    $P11 = rx920_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx920_pos)
    rx920_cstack = rx920_cur."!cursor_capture"($P11, "sym")
    goto rxcap922_done1992
  rxcap922_fail1993:
    goto rx920_fail1985
  rxcap922_done1992:
    repr_bind_attr_int rx920_cur, rx920_curclass, "$!pos", rx920_pos
    $P11 = rx920_cur."scoped"("my")
    repr_get_attr_int $I11, $P11, rx920_curclass, "$!pos"
    lt $I11, 0, rx920_fail1985
    nqp_rxmark rx920_bstack, rxsubrule923_pass1994, -1, 0
  rxsubrule923_pass1994:
    rx920_cstack = rx920_cur."!cursor_capture"($P11, "scoped")
    repr_get_attr_int rx920_pos, $P11, rx920_curclass, "$!pos"
    rx920_cur."!cursor_pass"(rx920_pos, "scope_declarator:sym<my>", 'backtrack'=>1)
    .return (rx920_cur)
  rx920_restart1984:
    repr_get_attr_obj rx920_cstack, rx920_cur, rx920_curclass, "$!cstack"
  rx920_fail1985:
    unless rx920_bstack, rx920_done1983
    pop $I19, rx920_bstack
    if_null rx920_cstack, rx920_cstack_done1988
    unless rx920_cstack, rx920_cstack_done1988
    dec $I19
    set $P11, rx920_cstack[$I19]
  rx920_cstack_done1988:
    pop rx920_rep, rx920_bstack
    pop rx920_pos, rx920_bstack
    pop $I19, rx920_bstack
    lt rx920_pos, -1, rx920_done1983
    lt rx920_pos, 0, rx920_fail1985
    eq $I19, 0, rx920_fail1985
    nqp_islist $I20, rx920_cstack
    unless $I20, rx920_jump1986
    elements $I18, rx920_bstack
    le $I18, 0, rx920_cut1987
    dec $I18
    set $I18, rx920_bstack[$I18]
  rx920_cut1987:
    assign rx920_cstack, $I18
  rx920_jump1986:
    jump $I19
  rx920_done1983:
    rx920_cur."!cursor_fail"()
    .return (rx920_cur) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<our>" :subid("cuid_113_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1050
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx924_start
    .local string rx924_tgt
    .local int rx924_pos
    .local int rx924_off
    .local int rx924_eos
    .local int rx924_rep
    .local pmc rx924_cur
    .local pmc rx924_curclass
    .local pmc rx924_bstack
    .local pmc rx924_cstack
    rx924_start = self."!cursor_start_all"()
    set rx924_cur, rx924_start[0]
    set rx924_tgt, rx924_start[1]
    set rx924_pos, rx924_start[2]
    set rx924_curclass, rx924_start[3]
    set rx924_bstack, rx924_start[4]
    set $I19, rx924_start[5]
    store_lex unicode:"$\x{a2}", rx924_cur
    length rx924_eos, rx924_tgt
    eq $I19, 1, rx924_restart1997
    gt rx924_pos, rx924_eos, rx924_fail1998
    repr_get_attr_int $I11, self, rx924_curclass, "$!from"
    ne $I11, -1, rxscan925_done2004
    goto rxscan925_scan2003
  rxscan925_loop2002:
    inc rx924_pos
    gt rx924_pos, rx924_eos, rx924_fail1998
    repr_bind_attr_int rx924_cur, rx924_curclass, "$!from", rx924_pos
  rxscan925_scan2003:
    nqp_rxmark rx924_bstack, rxscan925_loop2002, rx924_pos, 0
  rxscan925_done2004:
    nqp_rxmark rx924_bstack, rxcap926_fail2006, rx924_pos, 0
    add $I11, rx924_pos, 3
    gt $I11, rx924_eos, rx924_fail1998
    substr $S10, rx924_tgt, rx924_pos, 3
    ne $S10, ucs4:"our", rx924_fail1998
    add rx924_pos, 3
    nqp_rxpeek $I19, rx924_bstack, rxcap926_fail2006
    inc $I19
    set $I11, rx924_bstack[$I19]
    repr_bind_attr_int rx924_cur, rx924_curclass, "$!pos", rx924_pos
    $P11 = rx924_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx924_pos)
    rx924_cstack = rx924_cur."!cursor_capture"($P11, "sym")
    goto rxcap926_done2005
  rxcap926_fail2006:
    goto rx924_fail1998
  rxcap926_done2005:
    repr_bind_attr_int rx924_cur, rx924_curclass, "$!pos", rx924_pos
    $P11 = rx924_cur."scoped"("our")
    repr_get_attr_int $I11, $P11, rx924_curclass, "$!pos"
    lt $I11, 0, rx924_fail1998
    nqp_rxmark rx924_bstack, rxsubrule927_pass2007, -1, 0
  rxsubrule927_pass2007:
    rx924_cstack = rx924_cur."!cursor_capture"($P11, "scoped")
    repr_get_attr_int rx924_pos, $P11, rx924_curclass, "$!pos"
    rx924_cur."!cursor_pass"(rx924_pos, "scope_declarator:sym<our>", 'backtrack'=>1)
    .return (rx924_cur)
  rx924_restart1997:
    repr_get_attr_obj rx924_cstack, rx924_cur, rx924_curclass, "$!cstack"
  rx924_fail1998:
    unless rx924_bstack, rx924_done1996
    pop $I19, rx924_bstack
    if_null rx924_cstack, rx924_cstack_done2001
    unless rx924_cstack, rx924_cstack_done2001
    dec $I19
    set $P11, rx924_cstack[$I19]
  rx924_cstack_done2001:
    pop rx924_rep, rx924_bstack
    pop rx924_pos, rx924_bstack
    pop $I19, rx924_bstack
    lt rx924_pos, -1, rx924_done1996
    lt rx924_pos, 0, rx924_fail1998
    eq $I19, 0, rx924_fail1998
    nqp_islist $I20, rx924_cstack
    unless $I20, rx924_jump1999
    elements $I18, rx924_bstack
    le $I18, 0, rx924_cut2000
    dec $I18
    set $I18, rx924_bstack[$I18]
  rx924_cut2000:
    assign rx924_cstack, $I18
  rx924_jump1999:
    jump $I19
  rx924_done1996:
    rx924_cur."!cursor_fail"()
    .return (rx924_cur) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<has>" :subid("cuid_114_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1051
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx928_start
    .local string rx928_tgt
    .local int rx928_pos
    .local int rx928_off
    .local int rx928_eos
    .local int rx928_rep
    .local pmc rx928_cur
    .local pmc rx928_curclass
    .local pmc rx928_bstack
    .local pmc rx928_cstack
    rx928_start = self."!cursor_start_all"()
    set rx928_cur, rx928_start[0]
    set rx928_tgt, rx928_start[1]
    set rx928_pos, rx928_start[2]
    set rx928_curclass, rx928_start[3]
    set rx928_bstack, rx928_start[4]
    set $I19, rx928_start[5]
    store_lex unicode:"$\x{a2}", rx928_cur
    length rx928_eos, rx928_tgt
    eq $I19, 1, rx928_restart2010
    gt rx928_pos, rx928_eos, rx928_fail2011
    repr_get_attr_int $I11, self, rx928_curclass, "$!from"
    ne $I11, -1, rxscan929_done2017
    goto rxscan929_scan2016
  rxscan929_loop2015:
    inc rx928_pos
    gt rx928_pos, rx928_eos, rx928_fail2011
    repr_bind_attr_int rx928_cur, rx928_curclass, "$!from", rx928_pos
  rxscan929_scan2016:
    nqp_rxmark rx928_bstack, rxscan929_loop2015, rx928_pos, 0
  rxscan929_done2017:
    nqp_rxmark rx928_bstack, rxcap930_fail2019, rx928_pos, 0
    add $I11, rx928_pos, 3
    gt $I11, rx928_eos, rx928_fail2011
    substr $S10, rx928_tgt, rx928_pos, 3
    ne $S10, ucs4:"has", rx928_fail2011
    add rx928_pos, 3
    nqp_rxpeek $I19, rx928_bstack, rxcap930_fail2019
    inc $I19
    set $I11, rx928_bstack[$I19]
    repr_bind_attr_int rx928_cur, rx928_curclass, "$!pos", rx928_pos
    $P11 = rx928_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx928_pos)
    rx928_cstack = rx928_cur."!cursor_capture"($P11, "sym")
    goto rxcap930_done2018
  rxcap930_fail2019:
    goto rx928_fail2011
  rxcap930_done2018:
    repr_bind_attr_int rx928_cur, rx928_curclass, "$!pos", rx928_pos
    $P11 = rx928_cur."scoped"("has")
    repr_get_attr_int $I11, $P11, rx928_curclass, "$!pos"
    lt $I11, 0, rx928_fail2011
    nqp_rxmark rx928_bstack, rxsubrule931_pass2020, -1, 0
  rxsubrule931_pass2020:
    rx928_cstack = rx928_cur."!cursor_capture"($P11, "scoped")
    repr_get_attr_int rx928_pos, $P11, rx928_curclass, "$!pos"
    rx928_cur."!cursor_pass"(rx928_pos, "scope_declarator:sym<has>", 'backtrack'=>1)
    .return (rx928_cur)
  rx928_restart2010:
    repr_get_attr_obj rx928_cstack, rx928_cur, rx928_curclass, "$!cstack"
  rx928_fail2011:
    unless rx928_bstack, rx928_done2009
    pop $I19, rx928_bstack
    if_null rx928_cstack, rx928_cstack_done2014
    unless rx928_cstack, rx928_cstack_done2014
    dec $I19
    set $P11, rx928_cstack[$I19]
  rx928_cstack_done2014:
    pop rx928_rep, rx928_bstack
    pop rx928_pos, rx928_bstack
    pop $I19, rx928_bstack
    lt rx928_pos, -1, rx928_done2009
    lt rx928_pos, 0, rx928_fail2011
    eq $I19, 0, rx928_fail2011
    nqp_islist $I20, rx928_cstack
    unless $I20, rx928_jump2012
    elements $I18, rx928_bstack
    le $I18, 0, rx928_cut2013
    dec $I18
    set $I18, rx928_bstack[$I18]
  rx928_cut2013:
    assign rx928_cstack, $I18
  rx928_jump2012:
    jump $I19
  rx928_done2009:
    rx928_cur."!cursor_fail"()
    .return (rx928_cur) 
.end
.HLL "nqp"
.namespace []
.sub "scoped" :subid("cuid_115_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1053
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .lex "$*SCOPE", _lex_param_1 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx932_start
    .local string rx932_tgt
    .local int rx932_pos
    .local int rx932_off
    .local int rx932_eos
    .local int rx932_rep
    .local pmc rx932_cur
    .local pmc rx932_curclass
    .local pmc rx932_bstack
    .local pmc rx932_cstack
    rx932_start = self."!cursor_start_all"()
    set rx932_cur, rx932_start[0]
    set rx932_tgt, rx932_start[1]
    set rx932_pos, rx932_start[2]
    set rx932_curclass, rx932_start[3]
    set rx932_bstack, rx932_start[4]
    set $I19, rx932_start[5]
    store_lex unicode:"$\x{a2}", rx932_cur
    length rx932_eos, rx932_tgt
    eq $I19, 1, rx932_restart2023
    gt rx932_pos, rx932_eos, rx932_fail2024
    repr_get_attr_int $I11, self, rx932_curclass, "$!from"
    ne $I11, -1, rxscan933_done2030
    goto rxscan933_scan2029
  rxscan933_loop2028:
    inc rx932_pos
    gt rx932_pos, rx932_eos, rx932_fail2024
    repr_bind_attr_int rx932_cur, rx932_curclass, "$!from", rx932_pos
  rxscan933_scan2029:
    nqp_rxmark rx932_bstack, rxscan933_loop2028, rx932_pos, 0
  rxscan933_done2030:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt934_02032
    nqp_push_label $P11, alt934_12036
    nqp_push_label $P11, alt934_22040
    nqp_rxmark rx932_bstack, alt934_end2031, -1, 0
    rx932_cur."!alt"(rx932_pos, "alt_nfa__21_1365879997.613", $P11)
    goto rx932_fail2024
  alt934_02032:
    repr_bind_attr_int rx932_cur, rx932_curclass, "$!pos", rx932_pos
    $P11 = rx932_cur."ws"()
    repr_get_attr_int $I11, $P11, rx932_curclass, "$!pos"
    lt $I11, 0, rx932_fail2024
    repr_get_attr_int rx932_pos, $P11, rx932_curclass, "$!pos"
    repr_bind_attr_int rx932_cur, rx932_curclass, "$!pos", rx932_pos
    $P11 = rx932_cur."declarator"()
    repr_get_attr_int $I11, $P11, rx932_curclass, "$!pos"
    lt $I11, 0, rx932_fail2024
    nqp_rxmark rx932_bstack, rxsubrule936_pass2034, -1, 0
  rxsubrule936_pass2034:
    rx932_cstack = rx932_cur."!cursor_capture"($P11, "declarator")
    repr_get_attr_int rx932_pos, $P11, rx932_curclass, "$!pos"
    repr_bind_attr_int rx932_cur, rx932_curclass, "$!pos", rx932_pos
    $P11 = rx932_cur."ws"()
    repr_get_attr_int $I11, $P11, rx932_curclass, "$!pos"
    lt $I11, 0, rx932_fail2024
    repr_get_attr_int rx932_pos, $P11, rx932_curclass, "$!pos"
    goto alt934_end2031
  alt934_12036:
    repr_bind_attr_int rx932_cur, rx932_curclass, "$!pos", rx932_pos
    $P11 = rx932_cur."ws"()
    repr_get_attr_int $I11, $P11, rx932_curclass, "$!pos"
    lt $I11, 0, rx932_fail2024
    repr_get_attr_int rx932_pos, $P11, rx932_curclass, "$!pos"
    repr_bind_attr_int rx932_cur, rx932_curclass, "$!pos", rx932_pos
    $P11 = rx932_cur."multi_declarator"()
    repr_get_attr_int $I11, $P11, rx932_curclass, "$!pos"
    lt $I11, 0, rx932_fail2024
    nqp_rxmark rx932_bstack, rxsubrule939_pass2038, -1, 0
  rxsubrule939_pass2038:
    rx932_cstack = rx932_cur."!cursor_capture"($P11, "multi_declarator")
    repr_get_attr_int rx932_pos, $P11, rx932_curclass, "$!pos"
    repr_bind_attr_int rx932_cur, rx932_curclass, "$!pos", rx932_pos
    $P11 = rx932_cur."ws"()
    repr_get_attr_int $I11, $P11, rx932_curclass, "$!pos"
    lt $I11, 0, rx932_fail2024
    repr_get_attr_int rx932_pos, $P11, rx932_curclass, "$!pos"
    goto alt934_end2031
  alt934_22040:
    repr_bind_attr_int rx932_cur, rx932_curclass, "$!pos", rx932_pos
    $P11 = rx932_cur."ws"()
    repr_get_attr_int $I11, $P11, rx932_curclass, "$!pos"
    lt $I11, 0, rx932_fail2024
    repr_get_attr_int rx932_pos, $P11, rx932_curclass, "$!pos"
    repr_bind_attr_int rx932_cur, rx932_curclass, "$!pos", rx932_pos
    $P11 = rx932_cur."package_declarator"()
    repr_get_attr_int $I11, $P11, rx932_curclass, "$!pos"
    lt $I11, 0, rx932_fail2024
    nqp_rxmark rx932_bstack, rxsubrule942_pass2042, -1, 0
  rxsubrule942_pass2042:
    rx932_cstack = rx932_cur."!cursor_capture"($P11, "package_declarator")
    repr_get_attr_int rx932_pos, $P11, rx932_curclass, "$!pos"
    repr_bind_attr_int rx932_cur, rx932_curclass, "$!pos", rx932_pos
    $P11 = rx932_cur."ws"()
    repr_get_attr_int $I11, $P11, rx932_curclass, "$!pos"
    lt $I11, 0, rx932_fail2024
    repr_get_attr_int rx932_pos, $P11, rx932_curclass, "$!pos"
    goto alt934_end2031
  alt934_end2031:
    rx932_cur."!cursor_pass"(rx932_pos, "scoped", 'backtrack'=>1)
    .return (rx932_cur)
  rx932_restart2023:
    repr_get_attr_obj rx932_cstack, rx932_cur, rx932_curclass, "$!cstack"
  rx932_fail2024:
    unless rx932_bstack, rx932_done2022
    pop $I19, rx932_bstack
    if_null rx932_cstack, rx932_cstack_done2027
    unless rx932_cstack, rx932_cstack_done2027
    dec $I19
    set $P11, rx932_cstack[$I19]
  rx932_cstack_done2027:
    pop rx932_rep, rx932_bstack
    pop rx932_pos, rx932_bstack
    pop $I19, rx932_bstack
    lt rx932_pos, -1, rx932_done2022
    lt rx932_pos, 0, rx932_fail2024
    eq $I19, 0, rx932_fail2024
    nqp_islist $I20, rx932_cstack
    unless $I20, rx932_jump2025
    elements $I18, rx932_bstack
    le $I18, 0, rx932_cut2026
    dec $I18
    set $I18, rx932_bstack[$I18]
  rx932_cut2026:
    assign rx932_cstack, $I18
  rx932_jump2025:
    jump $I19
  rx932_done2022:
    rx932_cur."!cursor_fail"()
    .return (rx932_cur) 
.end
.HLL "nqp"
.namespace []
.sub "typename" :subid("cuid_116_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1059
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_405_1365879995.227' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx944_start
    .local string rx944_tgt
    .local int rx944_pos
    .local int rx944_off
    .local int rx944_eos
    .local int rx944_rep
    .local pmc rx944_cur
    .local pmc rx944_curclass
    .local pmc rx944_bstack
    .local pmc rx944_cstack
    rx944_start = self."!cursor_start_all"()
    set rx944_cur, rx944_start[0]
    set rx944_tgt, rx944_start[1]
    set rx944_pos, rx944_start[2]
    set rx944_curclass, rx944_start[3]
    set rx944_bstack, rx944_start[4]
    set $I19, rx944_start[5]
    store_lex unicode:"$\x{a2}", rx944_cur
    length rx944_eos, rx944_tgt
    eq $I19, 1, rx944_restart2046
    gt rx944_pos, rx944_eos, rx944_fail2047
    repr_get_attr_int $I11, self, rx944_curclass, "$!from"
    ne $I11, -1, rxscan945_done2053
    goto rxscan945_scan2052
  rxscan945_loop2051:
    inc rx944_pos
    gt rx944_pos, rx944_eos, rx944_fail2047
    repr_bind_attr_int rx944_cur, rx944_curclass, "$!from", rx944_pos
  rxscan945_scan2052:
    nqp_rxmark rx944_bstack, rxscan945_loop2051, rx944_pos, 0
  rxscan945_done2053:
    repr_bind_attr_int rx944_cur, rx944_curclass, "$!pos", rx944_pos
    $P11 = rx944_cur."name"()
    repr_get_attr_int $I11, $P11, rx944_curclass, "$!pos"
    lt $I11, 0, rx944_fail2047
    nqp_rxmark rx944_bstack, rxsubrule946_pass2054, -1, 0
  rxsubrule946_pass2054:
    rx944_cstack = rx944_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx944_pos, $P11, rx944_curclass, "$!pos"
    repr_bind_attr_int rx944_cur, rx944_curclass, "$!pos", rx944_pos
    store_lex unicode:"$\x{a2}", rx944_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_405_1365879995.227' 
    capture_lex $P5002
    $P5003 = $P5002()
    unless $P5003, rx944_fail2047
    rx944_cur."!cursor_pass"(rx944_pos, "typename", 'backtrack'=>1)
    .return (rx944_cur)
  rx944_restart2046:
    repr_get_attr_obj rx944_cstack, rx944_cur, rx944_curclass, "$!cstack"
  rx944_fail2047:
    unless rx944_bstack, rx944_done2045
    pop $I19, rx944_bstack
    if_null rx944_cstack, rx944_cstack_done2050
    unless rx944_cstack, rx944_cstack_done2050
    dec $I19
    set $P11, rx944_cstack[$I19]
  rx944_cstack_done2050:
    pop rx944_rep, rx944_bstack
    pop rx944_pos, rx944_bstack
    pop $I19, rx944_bstack
    lt rx944_pos, -1, rx944_done2045
    lt rx944_pos, 0, rx944_fail2047
    eq $I19, 0, rx944_fail2047
    nqp_islist $I20, rx944_cstack
    unless $I20, rx944_jump2048
    elements $I18, rx944_bstack
    le $I18, 0, rx944_cut2049
    dec $I18
    set $I18, rx944_bstack[$I18]
  rx944_cut2049:
    assign rx944_cstack, $I18
  rx944_jump2048:
    jump $I19
  rx944_done2045:
    rx944_cur."!cursor_fail"()
    .return (rx944_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_405_1365879995.227") :anon :lex :outer("cuid_116_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1061
    .local pmc fb_tmp_142 
    .local pmc fb_tmp_143 
    .local pmc fb_tmp_144 
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback2055
    nqp_get_sc_object $P5003, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5002, $P5003
    set fb_tmp_142, $P5002
    repr_defined $I5001, fb_tmp_142
    unless $I5001 goto if947_else2056 
    set $P5004, fb_tmp_142["$W"]
    set $P5006, $P5004
    goto if947_end2057
  if947_else2056:
    null $P5005
    set $P5006, $P5005
  if947_end2057:
    unless_null $P5006, vivi_9482058
    nqp_get_sc_object $P5007, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5006, $P5007
  vivi_9482058:
    unless_null $P5006, vivi_9492059
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_9492059:
    set $P5001, $P5006
  fallback2055:
    find_lex $P5009, "$/"
    find_lex $P5010, "$/"
    unless_null $P5010, fallback2064
    nqp_get_sc_object $P5011, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5010, $P5011
  fallback2064:
    set fb_tmp_144, $P5010
    repr_defined $I5003, fb_tmp_144
    unless $I5003 goto if951_else2062 
    set $P5012, fb_tmp_144["name"]
    set $P5014, $P5012
    goto if951_end2063
  if951_else2062:
    null $P5013
    set $P5014, $P5013
  if951_end2063:
    unless_null $P5014, vivi_9522065
    nqp_get_sc_object $P5015, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5014, $P5015
  vivi_9522065:
    set fb_tmp_143, $P5014
    repr_defined $I5002, fb_tmp_143
    unless $I5002 goto if950_else2060 
    set $P5016, fb_tmp_143["identifier"]
    set $P5018, $P5016
    goto if950_end2061
  if950_else2060:
    null $P5017
    set $P5018, $P5017
  if950_end2061:
    unless_null $P5018, vivi_9532066
    nqp_get_sc_object $P5019, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5018, $P5019
  vivi_9532066:
    $P5020 = $P5001."known_sym"($P5009, $P5018)
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "declarator" :subid("cuid_117_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1064
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx954_start
    .local string rx954_tgt
    .local int rx954_pos
    .local int rx954_off
    .local int rx954_eos
    .local int rx954_rep
    .local pmc rx954_cur
    .local pmc rx954_curclass
    .local pmc rx954_bstack
    .local pmc rx954_cstack
    rx954_start = self."!cursor_start_all"()
    set rx954_cur, rx954_start[0]
    set rx954_tgt, rx954_start[1]
    set rx954_pos, rx954_start[2]
    set rx954_curclass, rx954_start[3]
    set rx954_bstack, rx954_start[4]
    set $I19, rx954_start[5]
    store_lex unicode:"$\x{a2}", rx954_cur
    length rx954_eos, rx954_tgt
    eq $I19, 1, rx954_restart2069
    gt rx954_pos, rx954_eos, rx954_fail2070
    repr_get_attr_int $I11, self, rx954_curclass, "$!from"
    ne $I11, -1, rxscan955_done2076
    goto rxscan955_scan2075
  rxscan955_loop2074:
    inc rx954_pos
    gt rx954_pos, rx954_eos, rx954_fail2070
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!from", rx954_pos
  rxscan955_scan2075:
    nqp_rxmark rx954_bstack, rxscan955_loop2074, rx954_pos, 0
  rxscan955_done2076:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt956_02078
    nqp_push_label $P11, alt956_12080
    nqp_rxmark rx954_bstack, alt956_end2077, -1, 0
    rx954_cur."!alt"(rx954_pos, "alt_nfa__22_1365879997.629", $P11)
    goto rx954_fail2070
  alt956_02078:
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."variable_declarator"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2070
    nqp_rxmark rx954_bstack, rxsubrule957_pass2079, -1, 0
  rxsubrule957_pass2079:
    rx954_cstack = rx954_cur."!cursor_capture"($P11, "variable_declarator")
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    goto alt956_end2077
  alt956_12080:
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."routine_declarator"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail2070
    nqp_rxmark rx954_bstack, rxsubrule958_pass2081, -1, 0
  rxsubrule958_pass2081:
    rx954_cstack = rx954_cur."!cursor_capture"($P11, "routine_declarator")
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    goto alt956_end2077
  alt956_end2077:
    rx954_cur."!cursor_pass"(rx954_pos, "declarator", 'backtrack'=>1)
    .return (rx954_cur)
  rx954_restart2069:
    repr_get_attr_obj rx954_cstack, rx954_cur, rx954_curclass, "$!cstack"
  rx954_fail2070:
    unless rx954_bstack, rx954_done2068
    pop $I19, rx954_bstack
    if_null rx954_cstack, rx954_cstack_done2073
    unless rx954_cstack, rx954_cstack_done2073
    dec $I19
    set $P11, rx954_cstack[$I19]
  rx954_cstack_done2073:
    pop rx954_rep, rx954_bstack
    pop rx954_pos, rx954_bstack
    pop $I19, rx954_bstack
    lt rx954_pos, -1, rx954_done2068
    lt rx954_pos, 0, rx954_fail2070
    eq $I19, 0, rx954_fail2070
    nqp_islist $I20, rx954_cstack
    unless $I20, rx954_jump2071
    elements $I18, rx954_bstack
    le $I18, 0, rx954_cut2072
    dec $I18
    set $I18, rx954_bstack[$I18]
  rx954_cut2072:
    assign rx954_cstack, $I18
  rx954_jump2071:
    jump $I19
  rx954_done2068:
    rx954_cur."!cursor_fail"()
    .return (rx954_cur) 
.end
.HLL "nqp"
.namespace []
.sub "variable_declarator" :subid("cuid_118_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1069
    .param pmc _lex_param_0 
    .const 'Sub' $P5006 = 'cuid_406_1365879995.227' 
    capture_lex $P5006 
    .lex "$*IN_DECL", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx959_start
    .local string rx959_tgt
    .local int rx959_pos
    .local int rx959_off
    .local int rx959_eos
    .local int rx959_rep
    .local pmc rx959_cur
    .local pmc rx959_curclass
    .local pmc rx959_bstack
    .local pmc rx959_cstack
    rx959_start = self."!cursor_start_all"()
    set rx959_cur, rx959_start[0]
    set rx959_tgt, rx959_start[1]
    set rx959_pos, rx959_start[2]
    set rx959_curclass, rx959_start[3]
    set rx959_bstack, rx959_start[4]
    set $I19, rx959_start[5]
    store_lex unicode:"$\x{a2}", rx959_cur
    length rx959_eos, rx959_tgt
    eq $I19, 1, rx959_restart2084
    gt rx959_pos, rx959_eos, rx959_fail2085
    repr_get_attr_int $I11, self, rx959_curclass, "$!from"
    ne $I11, -1, rxscan960_done2091
    goto rxscan960_scan2090
  rxscan960_loop2089:
    inc rx959_pos
    gt rx959_pos, rx959_eos, rx959_fail2085
    repr_bind_attr_int rx959_cur, rx959_curclass, "$!from", rx959_pos
  rxscan960_scan2090:
    nqp_rxmark rx959_bstack, rxscan960_loop2089, rx959_pos, 0
  rxscan960_done2091:
    repr_bind_attr_int rx959_cur, rx959_curclass, "$!pos", rx959_pos
    $P11 = rx959_cur."ws"()
    repr_get_attr_int $I11, $P11, rx959_curclass, "$!pos"
    lt $I11, 0, rx959_fail2085
    repr_get_attr_int rx959_pos, $P11, rx959_curclass, "$!pos"
    nqp_rxmark rx959_bstack, rxquantr962_done2094, rx959_pos, 0
  rxquantr962_loop2093:
    repr_bind_attr_int rx959_cur, rx959_curclass, "$!pos", rx959_pos
    $P11 = rx959_cur."typename"()
    repr_get_attr_int $I11, $P11, rx959_curclass, "$!pos"
    lt $I11, 0, rx959_fail2085
    goto rxsubrule963_pass2095
  rxsubrule963_back2096:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx959_curclass, "$!pos"
    lt $I11, 0, rx959_fail2085
  rxsubrule963_pass2095:
    rx959_cstack = rx959_cur."!cursor_capture"($P11, "typename")
    set_addr $I11, rxsubrule963_back2096
    push rx959_bstack, $I11
    push rx959_bstack, 0
    push rx959_bstack, rx959_pos
    elements $I11, rx959_cstack
    push rx959_bstack, $I11
    repr_get_attr_int rx959_pos, $P11, rx959_curclass, "$!pos"
    nqp_rxpeek $I19, rx959_bstack, rxquantr962_done2094
    inc $I19
    inc $I19
    set rx959_rep, rx959_bstack[$I19]
    nqp_rxcommit rx959_bstack, rxquantr962_done2094
    inc rx959_rep
  rxquantr962_done2094:
    repr_bind_attr_int rx959_cur, rx959_curclass, "$!pos", rx959_pos
    $P11 = rx959_cur."ws"()
    repr_get_attr_int $I11, $P11, rx959_curclass, "$!pos"
    lt $I11, 0, rx959_fail2085
    repr_get_attr_int rx959_pos, $P11, rx959_curclass, "$!pos"
    repr_bind_attr_int rx959_cur, rx959_curclass, "$!pos", rx959_pos
    store_lex unicode:"$\x{a2}", rx959_cur
    box $P5002, "variable"
    set $P101, $P5002
    repr_bind_attr_int rx959_cur, rx959_curclass, "$!pos", rx959_pos
    $P11 = rx959_cur."ws"()
    repr_get_attr_int $I11, $P11, rx959_curclass, "$!pos"
    lt $I11, 0, rx959_fail2085
    repr_get_attr_int rx959_pos, $P11, rx959_curclass, "$!pos"
    repr_bind_attr_int rx959_cur, rx959_curclass, "$!pos", rx959_pos
    $P11 = rx959_cur."variable"()
    repr_get_attr_int $I11, $P11, rx959_curclass, "$!pos"
    lt $I11, 0, rx959_fail2085
    nqp_rxmark rx959_bstack, rxsubrule966_pass2099, -1, 0
  rxsubrule966_pass2099:
    rx959_cstack = rx959_cur."!cursor_capture"($P11, "variable")
    repr_get_attr_int rx959_pos, $P11, rx959_curclass, "$!pos"
    repr_bind_attr_int rx959_cur, rx959_curclass, "$!pos", rx959_pos
    $P11 = rx959_cur."ws"()
    repr_get_attr_int $I11, $P11, rx959_curclass, "$!pos"
    lt $I11, 0, rx959_fail2085
    repr_get_attr_int rx959_pos, $P11, rx959_curclass, "$!pos"
    repr_bind_attr_int rx959_cur, rx959_curclass, "$!pos", rx959_pos
    store_lex unicode:"$\x{a2}", rx959_cur
    $P5003 = $P102."MATCH"()
    set $P103, $P5003
    .const 'Sub' $P5004 = 'cuid_406_1365879995.227' 
    capture_lex $P5004
    $P5005 = $P5004()
    repr_bind_attr_int rx959_cur, rx959_curclass, "$!pos", rx959_pos
    $P11 = rx959_cur."ws"()
    repr_get_attr_int $I11, $P11, rx959_curclass, "$!pos"
    lt $I11, 0, rx959_fail2085
    repr_get_attr_int rx959_pos, $P11, rx959_curclass, "$!pos"
    nqp_rxmark rx959_bstack, rxquantr969_done2103, rx959_pos, 0
  rxquantr969_loop2102:
    repr_bind_attr_int rx959_cur, rx959_curclass, "$!pos", rx959_pos
    $P11 = rx959_cur."trait"()
    repr_get_attr_int $I11, $P11, rx959_curclass, "$!pos"
    lt $I11, 0, rx959_fail2085
    goto rxsubrule970_pass2104
  rxsubrule970_back2105:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx959_curclass, "$!pos"
    lt $I11, 0, rx959_fail2085
  rxsubrule970_pass2104:
    rx959_cstack = rx959_cur."!cursor_capture"($P11, "trait")
    set_addr $I11, rxsubrule970_back2105
    push rx959_bstack, $I11
    push rx959_bstack, 0
    push rx959_bstack, rx959_pos
    elements $I11, rx959_cstack
    push rx959_bstack, $I11
    repr_get_attr_int rx959_pos, $P11, rx959_curclass, "$!pos"
    nqp_rxpeek $I19, rx959_bstack, rxquantr969_done2103
    inc $I19
    inc $I19
    set rx959_rep, rx959_bstack[$I19]
    nqp_rxcommit rx959_bstack, rxquantr969_done2103
    inc rx959_rep
    nqp_rxmark rx959_bstack, rxquantr969_done2103, rx959_pos, rx959_rep
    goto rxquantr969_loop2102
  rxquantr969_done2103:
    repr_bind_attr_int rx959_cur, rx959_curclass, "$!pos", rx959_pos
    $P11 = rx959_cur."ws"()
    repr_get_attr_int $I11, $P11, rx959_curclass, "$!pos"
    lt $I11, 0, rx959_fail2085
    repr_get_attr_int rx959_pos, $P11, rx959_curclass, "$!pos"
    rx959_cur."!cursor_pass"(rx959_pos, "variable_declarator", 'backtrack'=>1)
    .return (rx959_cur)
  rx959_restart2084:
    repr_get_attr_obj rx959_cstack, rx959_cur, rx959_curclass, "$!cstack"
  rx959_fail2085:
    unless rx959_bstack, rx959_done2083
    pop $I19, rx959_bstack
    if_null rx959_cstack, rx959_cstack_done2088
    unless rx959_cstack, rx959_cstack_done2088
    dec $I19
    set $P11, rx959_cstack[$I19]
  rx959_cstack_done2088:
    pop rx959_rep, rx959_bstack
    pop rx959_pos, rx959_bstack
    pop $I19, rx959_bstack
    lt rx959_pos, -1, rx959_done2083
    lt rx959_pos, 0, rx959_fail2085
    eq $I19, 0, rx959_fail2085
    nqp_islist $I20, rx959_cstack
    unless $I20, rx959_jump2086
    elements $I18, rx959_bstack
    le $I18, 0, rx959_cut2087
    dec $I18
    set $I18, rx959_bstack[$I18]
  rx959_cut2087:
    assign rx959_cstack, $I18
  rx959_jump2086:
    jump $I19
  rx959_done2083:
    rx959_cur."!cursor_fail"()
    .return (rx959_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_406_1365879995.227") :anon :lex :outer("cuid_118_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1073

    box $P5001, 0
    store_dynamic_lex "$*IN_DECL", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator" :subid("cuid_119_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1077
    .param pmc self 
    $P5001 = self."!protoregex"("routine_declarator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator:sym<sub>" :subid("cuid_120_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1078
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx972_start
    .local string rx972_tgt
    .local int rx972_pos
    .local int rx972_off
    .local int rx972_eos
    .local int rx972_rep
    .local pmc rx972_cur
    .local pmc rx972_curclass
    .local pmc rx972_bstack
    .local pmc rx972_cstack
    rx972_start = self."!cursor_start_all"()
    set rx972_cur, rx972_start[0]
    set rx972_tgt, rx972_start[1]
    set rx972_pos, rx972_start[2]
    set rx972_curclass, rx972_start[3]
    set rx972_bstack, rx972_start[4]
    set $I19, rx972_start[5]
    store_lex unicode:"$\x{a2}", rx972_cur
    length rx972_eos, rx972_tgt
    eq $I19, 1, rx972_restart2109
    gt rx972_pos, rx972_eos, rx972_fail2110
    repr_get_attr_int $I11, self, rx972_curclass, "$!from"
    ne $I11, -1, rxscan973_done2116
    goto rxscan973_scan2115
  rxscan973_loop2114:
    inc rx972_pos
    gt rx972_pos, rx972_eos, rx972_fail2110
    repr_bind_attr_int rx972_cur, rx972_curclass, "$!from", rx972_pos
  rxscan973_scan2115:
    nqp_rxmark rx972_bstack, rxscan973_loop2114, rx972_pos, 0
  rxscan973_done2116:
    nqp_rxmark rx972_bstack, rxcap974_fail2118, rx972_pos, 0
    add $I11, rx972_pos, 3
    gt $I11, rx972_eos, rx972_fail2110
    substr $S10, rx972_tgt, rx972_pos, 3
    ne $S10, ucs4:"sub", rx972_fail2110
    add rx972_pos, 3
    nqp_rxpeek $I19, rx972_bstack, rxcap974_fail2118
    inc $I19
    set $I11, rx972_bstack[$I19]
    repr_bind_attr_int rx972_cur, rx972_curclass, "$!pos", rx972_pos
    $P11 = rx972_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx972_pos)
    rx972_cstack = rx972_cur."!cursor_capture"($P11, "sym")
    goto rxcap974_done2117
  rxcap974_fail2118:
    goto rx972_fail2110
  rxcap974_done2117:
    repr_bind_attr_int rx972_cur, rx972_curclass, "$!pos", rx972_pos
    $P11 = rx972_cur."routine_def"()
    repr_get_attr_int $I11, $P11, rx972_curclass, "$!pos"
    lt $I11, 0, rx972_fail2110
    nqp_rxmark rx972_bstack, rxsubrule975_pass2119, -1, 0
  rxsubrule975_pass2119:
    rx972_cstack = rx972_cur."!cursor_capture"($P11, "routine_def")
    repr_get_attr_int rx972_pos, $P11, rx972_curclass, "$!pos"
    rx972_cur."!cursor_pass"(rx972_pos, "routine_declarator:sym<sub>", 'backtrack'=>1)
    .return (rx972_cur)
  rx972_restart2109:
    repr_get_attr_obj rx972_cstack, rx972_cur, rx972_curclass, "$!cstack"
  rx972_fail2110:
    unless rx972_bstack, rx972_done2108
    pop $I19, rx972_bstack
    if_null rx972_cstack, rx972_cstack_done2113
    unless rx972_cstack, rx972_cstack_done2113
    dec $I19
    set $P11, rx972_cstack[$I19]
  rx972_cstack_done2113:
    pop rx972_rep, rx972_bstack
    pop rx972_pos, rx972_bstack
    pop $I19, rx972_bstack
    lt rx972_pos, -1, rx972_done2108
    lt rx972_pos, 0, rx972_fail2110
    eq $I19, 0, rx972_fail2110
    nqp_islist $I20, rx972_cstack
    unless $I20, rx972_jump2111
    elements $I18, rx972_bstack
    le $I18, 0, rx972_cut2112
    dec $I18
    set $I18, rx972_bstack[$I18]
  rx972_cut2112:
    assign rx972_cstack, $I18
  rx972_jump2111:
    jump $I19
  rx972_done2108:
    rx972_cur."!cursor_fail"()
    .return (rx972_cur) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator:sym<method>" :subid("cuid_121_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1079
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx976_start
    .local string rx976_tgt
    .local int rx976_pos
    .local int rx976_off
    .local int rx976_eos
    .local int rx976_rep
    .local pmc rx976_cur
    .local pmc rx976_curclass
    .local pmc rx976_bstack
    .local pmc rx976_cstack
    rx976_start = self."!cursor_start_all"()
    set rx976_cur, rx976_start[0]
    set rx976_tgt, rx976_start[1]
    set rx976_pos, rx976_start[2]
    set rx976_curclass, rx976_start[3]
    set rx976_bstack, rx976_start[4]
    set $I19, rx976_start[5]
    store_lex unicode:"$\x{a2}", rx976_cur
    length rx976_eos, rx976_tgt
    eq $I19, 1, rx976_restart2122
    gt rx976_pos, rx976_eos, rx976_fail2123
    repr_get_attr_int $I11, self, rx976_curclass, "$!from"
    ne $I11, -1, rxscan977_done2129
    goto rxscan977_scan2128
  rxscan977_loop2127:
    inc rx976_pos
    gt rx976_pos, rx976_eos, rx976_fail2123
    repr_bind_attr_int rx976_cur, rx976_curclass, "$!from", rx976_pos
  rxscan977_scan2128:
    nqp_rxmark rx976_bstack, rxscan977_loop2127, rx976_pos, 0
  rxscan977_done2129:
    nqp_rxmark rx976_bstack, rxcap978_fail2131, rx976_pos, 0
    add $I11, rx976_pos, 6
    gt $I11, rx976_eos, rx976_fail2123
    substr $S10, rx976_tgt, rx976_pos, 6
    ne $S10, ucs4:"method", rx976_fail2123
    add rx976_pos, 6
    nqp_rxpeek $I19, rx976_bstack, rxcap978_fail2131
    inc $I19
    set $I11, rx976_bstack[$I19]
    repr_bind_attr_int rx976_cur, rx976_curclass, "$!pos", rx976_pos
    $P11 = rx976_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx976_pos)
    rx976_cstack = rx976_cur."!cursor_capture"($P11, "sym")
    goto rxcap978_done2130
  rxcap978_fail2131:
    goto rx976_fail2123
  rxcap978_done2130:
    repr_bind_attr_int rx976_cur, rx976_curclass, "$!pos", rx976_pos
    $P11 = rx976_cur."method_def"()
    repr_get_attr_int $I11, $P11, rx976_curclass, "$!pos"
    lt $I11, 0, rx976_fail2123
    nqp_rxmark rx976_bstack, rxsubrule979_pass2132, -1, 0
  rxsubrule979_pass2132:
    rx976_cstack = rx976_cur."!cursor_capture"($P11, "method_def")
    repr_get_attr_int rx976_pos, $P11, rx976_curclass, "$!pos"
    rx976_cur."!cursor_pass"(rx976_pos, "routine_declarator:sym<method>", 'backtrack'=>1)
    .return (rx976_cur)
  rx976_restart2122:
    repr_get_attr_obj rx976_cstack, rx976_cur, rx976_curclass, "$!cstack"
  rx976_fail2123:
    unless rx976_bstack, rx976_done2121
    pop $I19, rx976_bstack
    if_null rx976_cstack, rx976_cstack_done2126
    unless rx976_cstack, rx976_cstack_done2126
    dec $I19
    set $P11, rx976_cstack[$I19]
  rx976_cstack_done2126:
    pop rx976_rep, rx976_bstack
    pop rx976_pos, rx976_bstack
    pop $I19, rx976_bstack
    lt rx976_pos, -1, rx976_done2121
    lt rx976_pos, 0, rx976_fail2123
    eq $I19, 0, rx976_fail2123
    nqp_islist $I20, rx976_cstack
    unless $I20, rx976_jump2124
    elements $I18, rx976_bstack
    le $I18, 0, rx976_cut2125
    dec $I18
    set $I18, rx976_bstack[$I18]
  rx976_cut2125:
    assign rx976_cstack, $I18
  rx976_jump2124:
    jump $I19
  rx976_done2121:
    rx976_cur."!cursor_fail"()
    .return (rx976_cur) 
.end
.HLL "nqp"
.namespace []
.sub "routine_def" :subid("cuid_122_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1081
    .param pmc _lex_param_0 
    .lex "$*RETURN_USED", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx980_start
    .local string rx980_tgt
    .local int rx980_pos
    .local int rx980_off
    .local int rx980_eos
    .local int rx980_rep
    .local pmc rx980_cur
    .local pmc rx980_curclass
    .local pmc rx980_bstack
    .local pmc rx980_cstack
    rx980_start = self."!cursor_start_all"()
    set rx980_cur, rx980_start[0]
    set rx980_tgt, rx980_start[1]
    set rx980_pos, rx980_start[2]
    set rx980_curclass, rx980_start[3]
    set rx980_bstack, rx980_start[4]
    set $I19, rx980_start[5]
    store_lex unicode:"$\x{a2}", rx980_cur
    length rx980_eos, rx980_tgt
    eq $I19, 1, rx980_restart2135
    gt rx980_pos, rx980_eos, rx980_fail2136
    repr_get_attr_int $I11, self, rx980_curclass, "$!from"
    ne $I11, -1, rxscan981_done2142
    goto rxscan981_scan2141
  rxscan981_loop2140:
    inc rx980_pos
    gt rx980_pos, rx980_eos, rx980_fail2136
    repr_bind_attr_int rx980_cur, rx980_curclass, "$!from", rx980_pos
  rxscan981_scan2141:
    nqp_rxmark rx980_bstack, rxscan981_loop2140, rx980_pos, 0
  rxscan981_done2142:
    repr_bind_attr_int rx980_cur, rx980_curclass, "$!pos", rx980_pos
    $P11 = rx980_cur."ws"()
    repr_get_attr_int $I11, $P11, rx980_curclass, "$!pos"
    lt $I11, 0, rx980_fail2136
    repr_get_attr_int rx980_pos, $P11, rx980_curclass, "$!pos"
    repr_bind_attr_int rx980_cur, rx980_curclass, "$!pos", rx980_pos
    store_lex unicode:"$\x{a2}", rx980_cur
    box $P5002, 0
    set $P101, $P5002
    repr_bind_attr_int rx980_cur, rx980_curclass, "$!pos", rx980_pos
    $P11 = rx980_cur."ws"()
    repr_get_attr_int $I11, $P11, rx980_curclass, "$!pos"
    lt $I11, 0, rx980_fail2136
    repr_get_attr_int rx980_pos, $P11, rx980_curclass, "$!pos"
    nqp_rxmark rx980_bstack, rxquantr984_done2146, rx980_pos, 0
  rxquantr984_loop2145:
    repr_bind_attr_int rx980_cur, rx980_curclass, "$!pos", rx980_pos
    $P11 = rx980_cur."ws"()
    repr_get_attr_int $I11, $P11, rx980_curclass, "$!pos"
    lt $I11, 0, rx980_fail2136
    repr_get_attr_int rx980_pos, $P11, rx980_curclass, "$!pos"
    nqp_rxmark rx980_bstack, rxcap986_fail2149, rx980_pos, 0
    nqp_rxmark rx980_bstack, rxquantr987_done2151, rx980_pos, 0
  rxquantr987_loop2150:
    add $I11, rx980_pos, 1
    gt $I11, rx980_eos, rx980_fail2136
    substr $S10, rx980_tgt, rx980_pos, 1
    ne $S10, ucs4:"&", rx980_fail2136
    add rx980_pos, 1
    nqp_rxpeek $I19, rx980_bstack, rxquantr987_done2151
    inc $I19
    inc $I19
    set rx980_rep, rx980_bstack[$I19]
    nqp_rxcommit rx980_bstack, rxquantr987_done2151
    inc rx980_rep
  rxquantr987_done2151:
    nqp_rxpeek $I19, rx980_bstack, rxcap986_fail2149
    inc $I19
    set $I11, rx980_bstack[$I19]
    repr_bind_attr_int rx980_cur, rx980_curclass, "$!pos", rx980_pos
    $P11 = rx980_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx980_pos)
    rx980_cstack = rx980_cur."!cursor_capture"($P11, "sigil")
    goto rxcap986_done2148
  rxcap986_fail2149:
    goto rx980_fail2136
  rxcap986_done2148:
    repr_bind_attr_int rx980_cur, rx980_curclass, "$!pos", rx980_pos
    $P11 = rx980_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx980_curclass, "$!pos"
    lt $I11, 0, rx980_fail2136
    nqp_rxmark rx980_bstack, rxsubrule988_pass2152, -1, 0
  rxsubrule988_pass2152:
    rx980_cstack = rx980_cur."!cursor_capture"($P11, "deflongname")
    repr_get_attr_int rx980_pos, $P11, rx980_curclass, "$!pos"
    repr_bind_attr_int rx980_cur, rx980_curclass, "$!pos", rx980_pos
    $P11 = rx980_cur."ws"()
    repr_get_attr_int $I11, $P11, rx980_curclass, "$!pos"
    lt $I11, 0, rx980_fail2136
    repr_get_attr_int rx980_pos, $P11, rx980_curclass, "$!pos"
    nqp_rxpeek $I19, rx980_bstack, rxquantr984_done2146
    inc $I19
    inc $I19
    set rx980_rep, rx980_bstack[$I19]
    nqp_rxcommit rx980_bstack, rxquantr984_done2146
    inc rx980_rep
  rxquantr984_done2146:
    repr_bind_attr_int rx980_cur, rx980_curclass, "$!pos", rx980_pos
    $P11 = rx980_cur."ws"()
    repr_get_attr_int $I11, $P11, rx980_curclass, "$!pos"
    lt $I11, 0, rx980_fail2136
    repr_get_attr_int rx980_pos, $P11, rx980_curclass, "$!pos"
    repr_bind_attr_int rx980_cur, rx980_curclass, "$!pos", rx980_pos
    $P11 = rx980_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx980_curclass, "$!pos"
    lt $I11, 0, rx980_fail2136
    repr_get_attr_int rx980_pos, $P11, rx980_curclass, "$!pos"
    repr_bind_attr_int rx980_cur, rx980_curclass, "$!pos", rx980_pos
    $P11 = rx980_cur."ws"()
    repr_get_attr_int $I11, $P11, rx980_curclass, "$!pos"
    lt $I11, 0, rx980_fail2136
    repr_get_attr_int rx980_pos, $P11, rx980_curclass, "$!pos"
  alt993_02158:
    nqp_rxmark rx980_bstack, alt993_12164, rx980_pos, 0
    repr_bind_attr_int rx980_cur, rx980_curclass, "$!pos", rx980_pos
    $P11 = rx980_cur."ws"()
    repr_get_attr_int $I11, $P11, rx980_curclass, "$!pos"
    lt $I11, 0, rx980_fail2136
    repr_get_attr_int rx980_pos, $P11, rx980_curclass, "$!pos"
    add $I11, rx980_pos, 1
    gt $I11, rx980_eos, rx980_fail2136
    substr $S10, rx980_tgt, rx980_pos, 1
    ne $S10, ucs4:"(", rx980_fail2136
    add rx980_pos, 1
    repr_bind_attr_int rx980_cur, rx980_curclass, "$!pos", rx980_pos
    $P11 = rx980_cur."ws"()
    repr_get_attr_int $I11, $P11, rx980_curclass, "$!pos"
    lt $I11, 0, rx980_fail2136
    repr_get_attr_int rx980_pos, $P11, rx980_curclass, "$!pos"
    repr_bind_attr_int rx980_cur, rx980_curclass, "$!pos", rx980_pos
    $P11 = rx980_cur."signature"()
    repr_get_attr_int $I11, $P11, rx980_curclass, "$!pos"
    lt $I11, 0, rx980_fail2136
    nqp_rxmark rx980_bstack, rxsubrule996_pass2161, -1, 0
  rxsubrule996_pass2161:
    rx980_cstack = rx980_cur."!cursor_capture"($P11, "signature")
    repr_get_attr_int rx980_pos, $P11, rx980_curclass, "$!pos"
    repr_bind_attr_int rx980_cur, rx980_curclass, "$!pos", rx980_pos
    $P11 = rx980_cur."ws"()
    repr_get_attr_int $I11, $P11, rx980_curclass, "$!pos"
    lt $I11, 0, rx980_fail2136
    repr_get_attr_int rx980_pos, $P11, rx980_curclass, "$!pos"
    add $I11, rx980_pos, 1
    gt $I11, rx980_eos, rx980_fail2136
    substr $S10, rx980_tgt, rx980_pos, 1
    ne $S10, ucs4:")", rx980_fail2136
    add rx980_pos, 1
    repr_bind_attr_int rx980_cur, rx980_curclass, "$!pos", rx980_pos
    $P11 = rx980_cur."ws"()
    repr_get_attr_int $I11, $P11, rx980_curclass, "$!pos"
    lt $I11, 0, rx980_fail2136
    repr_get_attr_int rx980_pos, $P11, rx980_curclass, "$!pos"
    goto alt993_end2157
  alt993_12164:
    repr_bind_attr_int rx980_cur, rx980_curclass, "$!pos", rx980_pos
    $P11 = rx980_cur."ws"()
    repr_get_attr_int $I11, $P11, rx980_curclass, "$!pos"
    lt $I11, 0, rx980_fail2136
    repr_get_attr_int rx980_pos, $P11, rx980_curclass, "$!pos"
    repr_bind_attr_int rx980_cur, rx980_curclass, "$!pos", rx980_pos
    $P11 = rx980_cur."panic"("Routine declaration requires a signature")
    repr_get_attr_int $I11, $P11, rx980_curclass, "$!pos"
    lt $I11, 0, rx980_fail2136
    repr_get_attr_int rx980_pos, $P11, rx980_curclass, "$!pos"
    repr_bind_attr_int rx980_cur, rx980_curclass, "$!pos", rx980_pos
    $P11 = rx980_cur."ws"()
    repr_get_attr_int $I11, $P11, rx980_curclass, "$!pos"
    lt $I11, 0, rx980_fail2136
    repr_get_attr_int rx980_pos, $P11, rx980_curclass, "$!pos"
  alt993_end2157:
    repr_bind_attr_int rx980_cur, rx980_curclass, "$!pos", rx980_pos
    $P11 = rx980_cur."ws"()
    repr_get_attr_int $I11, $P11, rx980_curclass, "$!pos"
    lt $I11, 0, rx980_fail2136
    repr_get_attr_int rx980_pos, $P11, rx980_curclass, "$!pos"
    nqp_rxmark rx980_bstack, rxquantr1003_done2170, rx980_pos, 0
  rxquantr1003_loop2169:
    repr_bind_attr_int rx980_cur, rx980_curclass, "$!pos", rx980_pos
    $P11 = rx980_cur."trait"()
    repr_get_attr_int $I11, $P11, rx980_curclass, "$!pos"
    lt $I11, 0, rx980_fail2136
    goto rxsubrule1004_pass2171
  rxsubrule1004_back2172:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx980_curclass, "$!pos"
    lt $I11, 0, rx980_fail2136
  rxsubrule1004_pass2171:
    rx980_cstack = rx980_cur."!cursor_capture"($P11, "trait")
    set_addr $I11, rxsubrule1004_back2172
    push rx980_bstack, $I11
    push rx980_bstack, 0
    push rx980_bstack, rx980_pos
    elements $I11, rx980_cstack
    push rx980_bstack, $I11
    repr_get_attr_int rx980_pos, $P11, rx980_curclass, "$!pos"
    nqp_rxpeek $I19, rx980_bstack, rxquantr1003_done2170
    inc $I19
    inc $I19
    set rx980_rep, rx980_bstack[$I19]
    nqp_rxcommit rx980_bstack, rxquantr1003_done2170
    inc rx980_rep
    nqp_rxmark rx980_bstack, rxquantr1003_done2170, rx980_pos, rx980_rep
    goto rxquantr1003_loop2169
  rxquantr1003_done2170:
    repr_bind_attr_int rx980_cur, rx980_curclass, "$!pos", rx980_pos
    $P11 = rx980_cur."ws"()
    repr_get_attr_int $I11, $P11, rx980_curclass, "$!pos"
    lt $I11, 0, rx980_fail2136
    repr_get_attr_int rx980_pos, $P11, rx980_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1006_02175
    nqp_push_label $P11, alt1006_12179
    nqp_rxmark rx980_bstack, alt1006_end2174, -1, 0
    rx980_cur."!alt"(rx980_pos, "alt_nfa__23_1365879997.683", $P11)
    goto rx980_fail2136
  alt1006_02175:
    repr_bind_attr_int rx980_cur, rx980_curclass, "$!pos", rx980_pos
    $P11 = rx980_cur."ws"()
    repr_get_attr_int $I11, $P11, rx980_curclass, "$!pos"
    lt $I11, 0, rx980_fail2136
    repr_get_attr_int rx980_pos, $P11, rx980_curclass, "$!pos"
    repr_bind_attr_int rx980_cur, rx980_curclass, "$!pos", rx980_pos
    $P11 = rx980_cur."onlystar"()
    repr_get_attr_int $I11, $P11, rx980_curclass, "$!pos"
    lt $I11, 0, rx980_fail2136
    nqp_rxmark rx980_bstack, rxsubrule1008_pass2177, -1, 0
  rxsubrule1008_pass2177:
    rx980_cstack = rx980_cur."!cursor_capture"($P11, "onlystar")
    repr_get_attr_int rx980_pos, $P11, rx980_curclass, "$!pos"
    repr_bind_attr_int rx980_cur, rx980_curclass, "$!pos", rx980_pos
    $P11 = rx980_cur."ws"()
    repr_get_attr_int $I11, $P11, rx980_curclass, "$!pos"
    lt $I11, 0, rx980_fail2136
    repr_get_attr_int rx980_pos, $P11, rx980_curclass, "$!pos"
    goto alt1006_end2174
  alt1006_12179:
    repr_bind_attr_int rx980_cur, rx980_curclass, "$!pos", rx980_pos
    $P11 = rx980_cur."ws"()
    repr_get_attr_int $I11, $P11, rx980_curclass, "$!pos"
    lt $I11, 0, rx980_fail2136
    repr_get_attr_int rx980_pos, $P11, rx980_curclass, "$!pos"
    repr_bind_attr_int rx980_cur, rx980_curclass, "$!pos", rx980_pos
    $P11 = rx980_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx980_curclass, "$!pos"
    lt $I11, 0, rx980_fail2136
    nqp_rxmark rx980_bstack, rxsubrule1011_pass2181, -1, 0
  rxsubrule1011_pass2181:
    rx980_cstack = rx980_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx980_pos, $P11, rx980_curclass, "$!pos"
    repr_bind_attr_int rx980_cur, rx980_curclass, "$!pos", rx980_pos
    $P11 = rx980_cur."ws"()
    repr_get_attr_int $I11, $P11, rx980_curclass, "$!pos"
    lt $I11, 0, rx980_fail2136
    repr_get_attr_int rx980_pos, $P11, rx980_curclass, "$!pos"
    goto alt1006_end2174
  alt1006_end2174:
    nqp_rxcommit rx980_bstack, alt1006_end2174
    repr_bind_attr_int rx980_cur, rx980_curclass, "$!pos", rx980_pos
    $P11 = rx980_cur."ws"()
    repr_get_attr_int $I11, $P11, rx980_curclass, "$!pos"
    lt $I11, 0, rx980_fail2136
    repr_get_attr_int rx980_pos, $P11, rx980_curclass, "$!pos"
    rx980_cur."!cursor_pass"(rx980_pos, "routine_def", 'backtrack'=>1)
    .return (rx980_cur)
  rx980_restart2135:
    repr_get_attr_obj rx980_cstack, rx980_cur, rx980_curclass, "$!cstack"
  rx980_fail2136:
    unless rx980_bstack, rx980_done2134
    pop $I19, rx980_bstack
    if_null rx980_cstack, rx980_cstack_done2139
    unless rx980_cstack, rx980_cstack_done2139
    dec $I19
    set $P11, rx980_cstack[$I19]
  rx980_cstack_done2139:
    pop rx980_rep, rx980_bstack
    pop rx980_pos, rx980_bstack
    pop $I19, rx980_bstack
    lt rx980_pos, -1, rx980_done2134
    lt rx980_pos, 0, rx980_fail2136
    eq $I19, 0, rx980_fail2136
    nqp_islist $I20, rx980_cstack
    unless $I20, rx980_jump2137
    elements $I18, rx980_bstack
    le $I18, 0, rx980_cut2138
    dec $I18
    set $I18, rx980_bstack[$I18]
  rx980_cut2138:
    assign rx980_cstack, $I18
  rx980_jump2137:
    jump $I19
  rx980_done2134:
    rx980_cur."!cursor_fail"()
    .return (rx980_cur) 
.end
.HLL "nqp"
.namespace []
.sub "method_def" :subid("cuid_123_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1094
    .param pmc _lex_param_0 
    .const 'Sub' $P5008 = 'cuid_407_1365879995.227' 
    capture_lex $P5008 
    .lex "$*RETURN_USED", $P101 
    .lex "$*INVOCANT_OK", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx1014_start
    .local string rx1014_tgt
    .local int rx1014_pos
    .local int rx1014_off
    .local int rx1014_eos
    .local int rx1014_rep
    .local pmc rx1014_cur
    .local pmc rx1014_curclass
    .local pmc rx1014_bstack
    .local pmc rx1014_cstack
    rx1014_start = self."!cursor_start_all"()
    set rx1014_cur, rx1014_start[0]
    set rx1014_tgt, rx1014_start[1]
    set rx1014_pos, rx1014_start[2]
    set rx1014_curclass, rx1014_start[3]
    set rx1014_bstack, rx1014_start[4]
    set $I19, rx1014_start[5]
    store_lex unicode:"$\x{a2}", rx1014_cur
    length rx1014_eos, rx1014_tgt
    eq $I19, 1, rx1014_restart2186
    gt rx1014_pos, rx1014_eos, rx1014_fail2187
    repr_get_attr_int $I11, self, rx1014_curclass, "$!from"
    ne $I11, -1, rxscan1015_done2193
    goto rxscan1015_scan2192
  rxscan1015_loop2191:
    inc rx1014_pos
    gt rx1014_pos, rx1014_eos, rx1014_fail2187
    repr_bind_attr_int rx1014_cur, rx1014_curclass, "$!from", rx1014_pos
  rxscan1015_scan2192:
    nqp_rxmark rx1014_bstack, rxscan1015_loop2191, rx1014_pos, 0
  rxscan1015_done2193:
    repr_bind_attr_int rx1014_cur, rx1014_curclass, "$!pos", rx1014_pos
    $P11 = rx1014_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1014_curclass, "$!pos"
    lt $I11, 0, rx1014_fail2187
    repr_get_attr_int rx1014_pos, $P11, rx1014_curclass, "$!pos"
    repr_bind_attr_int rx1014_cur, rx1014_curclass, "$!pos", rx1014_pos
    store_lex unicode:"$\x{a2}", rx1014_cur
    box $P5003, 0
    set $P101, $P5003
    repr_bind_attr_int rx1014_cur, rx1014_curclass, "$!pos", rx1014_pos
    $P11 = rx1014_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1014_curclass, "$!pos"
    lt $I11, 0, rx1014_fail2187
    repr_get_attr_int rx1014_pos, $P11, rx1014_curclass, "$!pos"
    repr_bind_attr_int rx1014_cur, rx1014_curclass, "$!pos", rx1014_pos
    store_lex unicode:"$\x{a2}", rx1014_cur
    box $P5004, 1
    set $P102, $P5004
    repr_bind_attr_int rx1014_cur, rx1014_curclass, "$!pos", rx1014_pos
    $P11 = rx1014_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1014_curclass, "$!pos"
    lt $I11, 0, rx1014_fail2187
    repr_get_attr_int rx1014_pos, $P11, rx1014_curclass, "$!pos"
  alt1019_02198:
    nqp_rxmark rx1014_bstack, alt1019_12204, rx1014_pos, 0
    repr_bind_attr_int rx1014_cur, rx1014_curclass, "$!pos", rx1014_pos
    $P11 = rx1014_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1014_curclass, "$!pos"
    lt $I11, 0, rx1014_fail2187
    repr_get_attr_int rx1014_pos, $P11, rx1014_curclass, "$!pos"
    add $I11, rx1014_pos, 3
    gt $I11, rx1014_eos, rx1014_fail2187
    substr $S10, rx1014_tgt, rx1014_pos, 3
    ne $S10, ucs4:"::(", rx1014_fail2187
    add rx1014_pos, 3
    repr_bind_attr_int rx1014_cur, rx1014_curclass, "$!pos", rx1014_pos
    $P11 = rx1014_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1014_curclass, "$!pos"
    lt $I11, 0, rx1014_fail2187
    repr_get_attr_int rx1014_pos, $P11, rx1014_curclass, "$!pos"
    repr_bind_attr_int rx1014_cur, rx1014_curclass, "$!pos", rx1014_pos
    $P11 = rx1014_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1014_curclass, "$!pos"
    lt $I11, 0, rx1014_fail2187
    nqp_rxmark rx1014_bstack, rxsubrule1022_pass2201, -1, 0
  rxsubrule1022_pass2201:
    rx1014_cstack = rx1014_cur."!cursor_capture"($P11, "latename=variable")
    repr_get_attr_int rx1014_pos, $P11, rx1014_curclass, "$!pos"
    repr_bind_attr_int rx1014_cur, rx1014_curclass, "$!pos", rx1014_pos
    $P11 = rx1014_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1014_curclass, "$!pos"
    lt $I11, 0, rx1014_fail2187
    repr_get_attr_int rx1014_pos, $P11, rx1014_curclass, "$!pos"
    add $I11, rx1014_pos, 1
    gt $I11, rx1014_eos, rx1014_fail2187
    substr $S10, rx1014_tgt, rx1014_pos, 1
    ne $S10, ucs4:")", rx1014_fail2187
    add rx1014_pos, 1
    repr_bind_attr_int rx1014_cur, rx1014_curclass, "$!pos", rx1014_pos
    $P11 = rx1014_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1014_curclass, "$!pos"
    lt $I11, 0, rx1014_fail2187
    repr_get_attr_int rx1014_pos, $P11, rx1014_curclass, "$!pos"
    goto alt1019_end2197
  alt1019_12204:
    repr_bind_attr_int rx1014_cur, rx1014_curclass, "$!pos", rx1014_pos
    $P11 = rx1014_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1014_curclass, "$!pos"
    lt $I11, 0, rx1014_fail2187
    repr_get_attr_int rx1014_pos, $P11, rx1014_curclass, "$!pos"
    nqp_rxmark rx1014_bstack, rxcap1026_fail2207, rx1014_pos, 0
    nqp_rxmark rx1014_bstack, rxquantr1027_done2209, rx1014_pos, 0
  rxquantr1027_loop2208:
    add $I11, rx1014_pos, 1
    gt $I11, rx1014_eos, rx1014_fail2187
    substr $S10, rx1014_tgt, rx1014_pos, 1
    ne $S10, ucs4:"!", rx1014_fail2187
    add rx1014_pos, 1
    nqp_rxpeek $I19, rx1014_bstack, rxquantr1027_done2209
    inc $I19
    inc $I19
    set rx1014_rep, rx1014_bstack[$I19]
    nqp_rxcommit rx1014_bstack, rxquantr1027_done2209
    inc rx1014_rep
  rxquantr1027_done2209:
    nqp_rxpeek $I19, rx1014_bstack, rxcap1026_fail2207
    inc $I19
    set $I11, rx1014_bstack[$I19]
    repr_bind_attr_int rx1014_cur, rx1014_curclass, "$!pos", rx1014_pos
    $P11 = rx1014_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1014_pos)
    rx1014_cstack = rx1014_cur."!cursor_capture"($P11, "private")
    goto rxcap1026_done2206
  rxcap1026_fail2207:
    goto rx1014_fail2187
  rxcap1026_done2206:
    repr_bind_attr_int rx1014_cur, rx1014_curclass, "$!pos", rx1014_pos
    $P11 = rx1014_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1014_curclass, "$!pos"
    lt $I11, 0, rx1014_fail2187
    repr_get_attr_int rx1014_pos, $P11, rx1014_curclass, "$!pos"
    nqp_rxmark rx1014_bstack, rxquantr1029_done2212, rx1014_pos, 0
  rxquantr1029_loop2211:
    repr_bind_attr_int rx1014_cur, rx1014_curclass, "$!pos", rx1014_pos
    $P11 = rx1014_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1014_curclass, "$!pos"
    lt $I11, 0, rx1014_fail2187
    goto rxsubrule1030_pass2213
  rxsubrule1030_back2214:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1014_curclass, "$!pos"
    lt $I11, 0, rx1014_fail2187
  rxsubrule1030_pass2213:
    rx1014_cstack = rx1014_cur."!cursor_capture"($P11, "deflongname")
    set_addr $I11, rxsubrule1030_back2214
    push rx1014_bstack, $I11
    push rx1014_bstack, 0
    push rx1014_bstack, rx1014_pos
    elements $I11, rx1014_cstack
    push rx1014_bstack, $I11
    repr_get_attr_int rx1014_pos, $P11, rx1014_curclass, "$!pos"
    nqp_rxpeek $I19, rx1014_bstack, rxquantr1029_done2212
    inc $I19
    inc $I19
    set rx1014_rep, rx1014_bstack[$I19]
    nqp_rxcommit rx1014_bstack, rxquantr1029_done2212
    inc rx1014_rep
  rxquantr1029_done2212:
    repr_bind_attr_int rx1014_cur, rx1014_curclass, "$!pos", rx1014_pos
    $P11 = rx1014_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1014_curclass, "$!pos"
    lt $I11, 0, rx1014_fail2187
    repr_get_attr_int rx1014_pos, $P11, rx1014_curclass, "$!pos"
  alt1019_end2197:
    repr_bind_attr_int rx1014_cur, rx1014_curclass, "$!pos", rx1014_pos
    $P11 = rx1014_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1014_curclass, "$!pos"
    lt $I11, 0, rx1014_fail2187
    repr_get_attr_int rx1014_pos, $P11, rx1014_curclass, "$!pos"
    repr_bind_attr_int rx1014_cur, rx1014_curclass, "$!pos", rx1014_pos
    $P11 = rx1014_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx1014_curclass, "$!pos"
    lt $I11, 0, rx1014_fail2187
    repr_get_attr_int rx1014_pos, $P11, rx1014_curclass, "$!pos"
    repr_bind_attr_int rx1014_cur, rx1014_curclass, "$!pos", rx1014_pos
    $P11 = rx1014_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1014_curclass, "$!pos"
    lt $I11, 0, rx1014_fail2187
    repr_get_attr_int rx1014_pos, $P11, rx1014_curclass, "$!pos"
  alt1035_02220:
    nqp_rxmark rx1014_bstack, alt1035_12226, rx1014_pos, 0
    repr_bind_attr_int rx1014_cur, rx1014_curclass, "$!pos", rx1014_pos
    $P11 = rx1014_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1014_curclass, "$!pos"
    lt $I11, 0, rx1014_fail2187
    repr_get_attr_int rx1014_pos, $P11, rx1014_curclass, "$!pos"
    add $I11, rx1014_pos, 1
    gt $I11, rx1014_eos, rx1014_fail2187
    substr $S10, rx1014_tgt, rx1014_pos, 1
    ne $S10, ucs4:"(", rx1014_fail2187
    add rx1014_pos, 1
    repr_bind_attr_int rx1014_cur, rx1014_curclass, "$!pos", rx1014_pos
    $P11 = rx1014_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1014_curclass, "$!pos"
    lt $I11, 0, rx1014_fail2187
    repr_get_attr_int rx1014_pos, $P11, rx1014_curclass, "$!pos"
    repr_bind_attr_int rx1014_cur, rx1014_curclass, "$!pos", rx1014_pos
    $P11 = rx1014_cur."signature"()
    repr_get_attr_int $I11, $P11, rx1014_curclass, "$!pos"
    lt $I11, 0, rx1014_fail2187
    nqp_rxmark rx1014_bstack, rxsubrule1038_pass2223, -1, 0
  rxsubrule1038_pass2223:
    rx1014_cstack = rx1014_cur."!cursor_capture"($P11, "signature")
    repr_get_attr_int rx1014_pos, $P11, rx1014_curclass, "$!pos"
    repr_bind_attr_int rx1014_cur, rx1014_curclass, "$!pos", rx1014_pos
    $P11 = rx1014_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1014_curclass, "$!pos"
    lt $I11, 0, rx1014_fail2187
    repr_get_attr_int rx1014_pos, $P11, rx1014_curclass, "$!pos"
    add $I11, rx1014_pos, 1
    gt $I11, rx1014_eos, rx1014_fail2187
    substr $S10, rx1014_tgt, rx1014_pos, 1
    ne $S10, ucs4:")", rx1014_fail2187
    add rx1014_pos, 1
    repr_bind_attr_int rx1014_cur, rx1014_curclass, "$!pos", rx1014_pos
    $P11 = rx1014_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1014_curclass, "$!pos"
    lt $I11, 0, rx1014_fail2187
    repr_get_attr_int rx1014_pos, $P11, rx1014_curclass, "$!pos"
    goto alt1035_end2219
  alt1035_12226:
    repr_bind_attr_int rx1014_cur, rx1014_curclass, "$!pos", rx1014_pos
    $P11 = rx1014_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1014_curclass, "$!pos"
    lt $I11, 0, rx1014_fail2187
    repr_get_attr_int rx1014_pos, $P11, rx1014_curclass, "$!pos"
    repr_bind_attr_int rx1014_cur, rx1014_curclass, "$!pos", rx1014_pos
    $P11 = rx1014_cur."panic"("Routine declaration requires a signature")
    repr_get_attr_int $I11, $P11, rx1014_curclass, "$!pos"
    lt $I11, 0, rx1014_fail2187
    repr_get_attr_int rx1014_pos, $P11, rx1014_curclass, "$!pos"
    repr_bind_attr_int rx1014_cur, rx1014_curclass, "$!pos", rx1014_pos
    $P11 = rx1014_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1014_curclass, "$!pos"
    lt $I11, 0, rx1014_fail2187
    repr_get_attr_int rx1014_pos, $P11, rx1014_curclass, "$!pos"
  alt1035_end2219:
    repr_bind_attr_int rx1014_cur, rx1014_curclass, "$!pos", rx1014_pos
    $P11 = rx1014_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1014_curclass, "$!pos"
    lt $I11, 0, rx1014_fail2187
    repr_get_attr_int rx1014_pos, $P11, rx1014_curclass, "$!pos"
    repr_bind_attr_int rx1014_cur, rx1014_curclass, "$!pos", rx1014_pos
    store_lex unicode:"$\x{a2}", rx1014_cur
    $P5005 = $P103."MATCH"()
    set $P104, $P5005
    .const 'Sub' $P5006 = 'cuid_407_1365879995.227' 
    capture_lex $P5006
    $P5007 = $P5006()
    repr_bind_attr_int rx1014_cur, rx1014_curclass, "$!pos", rx1014_pos
    $P11 = rx1014_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1014_curclass, "$!pos"
    lt $I11, 0, rx1014_fail2187
    repr_get_attr_int rx1014_pos, $P11, rx1014_curclass, "$!pos"
    nqp_rxmark rx1014_bstack, rxquantr1046_done2233, rx1014_pos, 0
  rxquantr1046_loop2232:
    repr_bind_attr_int rx1014_cur, rx1014_curclass, "$!pos", rx1014_pos
    $P11 = rx1014_cur."trait"()
    repr_get_attr_int $I11, $P11, rx1014_curclass, "$!pos"
    lt $I11, 0, rx1014_fail2187
    goto rxsubrule1047_pass2234
  rxsubrule1047_back2235:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1014_curclass, "$!pos"
    lt $I11, 0, rx1014_fail2187
  rxsubrule1047_pass2234:
    rx1014_cstack = rx1014_cur."!cursor_capture"($P11, "trait")
    set_addr $I11, rxsubrule1047_back2235
    push rx1014_bstack, $I11
    push rx1014_bstack, 0
    push rx1014_bstack, rx1014_pos
    elements $I11, rx1014_cstack
    push rx1014_bstack, $I11
    repr_get_attr_int rx1014_pos, $P11, rx1014_curclass, "$!pos"
    nqp_rxpeek $I19, rx1014_bstack, rxquantr1046_done2233
    inc $I19
    inc $I19
    set rx1014_rep, rx1014_bstack[$I19]
    nqp_rxcommit rx1014_bstack, rxquantr1046_done2233
    inc rx1014_rep
    nqp_rxmark rx1014_bstack, rxquantr1046_done2233, rx1014_pos, rx1014_rep
    goto rxquantr1046_loop2232
  rxquantr1046_done2233:
    repr_bind_attr_int rx1014_cur, rx1014_curclass, "$!pos", rx1014_pos
    $P11 = rx1014_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1014_curclass, "$!pos"
    lt $I11, 0, rx1014_fail2187
    repr_get_attr_int rx1014_pos, $P11, rx1014_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1049_02238
    nqp_push_label $P11, alt1049_12242
    nqp_rxmark rx1014_bstack, alt1049_end2237, -1, 0
    rx1014_cur."!alt"(rx1014_pos, "alt_nfa__24_1365879997.723", $P11)
    goto rx1014_fail2187
  alt1049_02238:
    repr_bind_attr_int rx1014_cur, rx1014_curclass, "$!pos", rx1014_pos
    $P11 = rx1014_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1014_curclass, "$!pos"
    lt $I11, 0, rx1014_fail2187
    repr_get_attr_int rx1014_pos, $P11, rx1014_curclass, "$!pos"
    repr_bind_attr_int rx1014_cur, rx1014_curclass, "$!pos", rx1014_pos
    $P11 = rx1014_cur."onlystar"()
    repr_get_attr_int $I11, $P11, rx1014_curclass, "$!pos"
    lt $I11, 0, rx1014_fail2187
    nqp_rxmark rx1014_bstack, rxsubrule1051_pass2240, -1, 0
  rxsubrule1051_pass2240:
    rx1014_cstack = rx1014_cur."!cursor_capture"($P11, "onlystar")
    repr_get_attr_int rx1014_pos, $P11, rx1014_curclass, "$!pos"
    repr_bind_attr_int rx1014_cur, rx1014_curclass, "$!pos", rx1014_pos
    $P11 = rx1014_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1014_curclass, "$!pos"
    lt $I11, 0, rx1014_fail2187
    repr_get_attr_int rx1014_pos, $P11, rx1014_curclass, "$!pos"
    goto alt1049_end2237
  alt1049_12242:
    repr_bind_attr_int rx1014_cur, rx1014_curclass, "$!pos", rx1014_pos
    $P11 = rx1014_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1014_curclass, "$!pos"
    lt $I11, 0, rx1014_fail2187
    repr_get_attr_int rx1014_pos, $P11, rx1014_curclass, "$!pos"
    repr_bind_attr_int rx1014_cur, rx1014_curclass, "$!pos", rx1014_pos
    $P11 = rx1014_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx1014_curclass, "$!pos"
    lt $I11, 0, rx1014_fail2187
    nqp_rxmark rx1014_bstack, rxsubrule1054_pass2244, -1, 0
  rxsubrule1054_pass2244:
    rx1014_cstack = rx1014_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx1014_pos, $P11, rx1014_curclass, "$!pos"
    repr_bind_attr_int rx1014_cur, rx1014_curclass, "$!pos", rx1014_pos
    $P11 = rx1014_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1014_curclass, "$!pos"
    lt $I11, 0, rx1014_fail2187
    repr_get_attr_int rx1014_pos, $P11, rx1014_curclass, "$!pos"
    goto alt1049_end2237
  alt1049_end2237:
    nqp_rxcommit rx1014_bstack, alt1049_end2237
    repr_bind_attr_int rx1014_cur, rx1014_curclass, "$!pos", rx1014_pos
    $P11 = rx1014_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1014_curclass, "$!pos"
    lt $I11, 0, rx1014_fail2187
    repr_get_attr_int rx1014_pos, $P11, rx1014_curclass, "$!pos"
    rx1014_cur."!cursor_pass"(rx1014_pos, "method_def", 'backtrack'=>1)
    .return (rx1014_cur)
  rx1014_restart2186:
    repr_get_attr_obj rx1014_cstack, rx1014_cur, rx1014_curclass, "$!cstack"
  rx1014_fail2187:
    unless rx1014_bstack, rx1014_done2185
    pop $I19, rx1014_bstack
    if_null rx1014_cstack, rx1014_cstack_done2190
    unless rx1014_cstack, rx1014_cstack_done2190
    dec $I19
    set $P11, rx1014_cstack[$I19]
  rx1014_cstack_done2190:
    pop rx1014_rep, rx1014_bstack
    pop rx1014_pos, rx1014_bstack
    pop $I19, rx1014_bstack
    lt rx1014_pos, -1, rx1014_done2185
    lt rx1014_pos, 0, rx1014_fail2187
    eq $I19, 0, rx1014_fail2187
    nqp_islist $I20, rx1014_cstack
    unless $I20, rx1014_jump2188
    elements $I18, rx1014_bstack
    le $I18, 0, rx1014_cut2189
    dec $I18
    set $I18, rx1014_bstack[$I18]
  rx1014_cut2189:
    assign rx1014_cstack, $I18
  rx1014_jump2188:
    jump $I19
  rx1014_done2185:
    rx1014_cur."!cursor_fail"()
    .return (rx1014_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_407_1365879995.227") :anon :lex :outer("cuid_123_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1104

    box $P5001, 0
    store_dynamic_lex "$*INVOCANT_OK", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "onlystar" :subid("cuid_124_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1112
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_408_1365879995.227' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1057_start
    .local string rx1057_tgt
    .local int rx1057_pos
    .local int rx1057_off
    .local int rx1057_eos
    .local int rx1057_rep
    .local pmc rx1057_cur
    .local pmc rx1057_curclass
    .local pmc rx1057_bstack
    .local pmc rx1057_cstack
    rx1057_start = self."!cursor_start_all"()
    set rx1057_cur, rx1057_start[0]
    set rx1057_tgt, rx1057_start[1]
    set rx1057_pos, rx1057_start[2]
    set rx1057_curclass, rx1057_start[3]
    set rx1057_bstack, rx1057_start[4]
    set $I19, rx1057_start[5]
    store_lex unicode:"$\x{a2}", rx1057_cur
    length rx1057_eos, rx1057_tgt
    eq $I19, 1, rx1057_restart2249
    gt rx1057_pos, rx1057_eos, rx1057_fail2250
    repr_get_attr_int $I11, self, rx1057_curclass, "$!from"
    ne $I11, -1, rxscan1058_done2256
    goto rxscan1058_scan2255
  rxscan1058_loop2254:
    inc rx1057_pos
    gt rx1057_pos, rx1057_eos, rx1057_fail2250
    repr_bind_attr_int rx1057_cur, rx1057_curclass, "$!from", rx1057_pos
  rxscan1058_scan2255:
    nqp_rxmark rx1057_bstack, rxscan1058_loop2254, rx1057_pos, 0
  rxscan1058_done2256:
    repr_bind_attr_int rx1057_cur, rx1057_curclass, "$!pos", rx1057_pos
    store_lex unicode:"$\x{a2}", rx1057_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_408_1365879995.227' 
    capture_lex $P5002
    $P5003 = $P5002()
    unless $P5003, rx1057_fail2250
    add $I11, rx1057_pos, 1
    gt $I11, rx1057_eos, rx1057_fail2250
    substr $S10, rx1057_tgt, rx1057_pos, 1
    ne $S10, ucs4:"{", rx1057_fail2250
    add rx1057_pos, 1
    repr_bind_attr_int rx1057_cur, rx1057_curclass, "$!pos", rx1057_pos
    $P11 = rx1057_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1057_curclass, "$!pos"
    lt $I11, 0, rx1057_fail2250
    repr_get_attr_int rx1057_pos, $P11, rx1057_curclass, "$!pos"
    add $I11, rx1057_pos, 1
    gt $I11, rx1057_eos, rx1057_fail2250
    substr $S10, rx1057_tgt, rx1057_pos, 1
    ne $S10, ucs4:"*", rx1057_fail2250
    add rx1057_pos, 1
    repr_bind_attr_int rx1057_cur, rx1057_curclass, "$!pos", rx1057_pos
    $P11 = rx1057_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1057_curclass, "$!pos"
    lt $I11, 0, rx1057_fail2250
    repr_get_attr_int rx1057_pos, $P11, rx1057_curclass, "$!pos"
    add $I11, rx1057_pos, 1
    gt $I11, rx1057_eos, rx1057_fail2250
    substr $S10, rx1057_tgt, rx1057_pos, 1
    ne $S10, ucs4:"}", rx1057_fail2250
    add rx1057_pos, 1
    repr_bind_attr_int rx1057_cur, rx1057_curclass, "$!pos", rx1057_pos
    $P11 = rx1057_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1057_curclass, "$!pos"
    lt $I11, 0, rx1057_fail2250
    repr_bind_attr_int rx1057_cur, rx1057_curclass, "$!pos", rx1057_pos
    $P11 = rx1057_cur."finishpad"()
    repr_get_attr_int $I11, $P11, rx1057_curclass, "$!pos"
    lt $I11, 0, rx1057_fail2250
    repr_get_attr_int rx1057_pos, $P11, rx1057_curclass, "$!pos"
    rx1057_cur."!cursor_pass"(rx1057_pos, "onlystar", 'backtrack'=>1)
    .return (rx1057_cur)
  rx1057_restart2249:
    repr_get_attr_obj rx1057_cstack, rx1057_cur, rx1057_curclass, "$!cstack"
  rx1057_fail2250:
    unless rx1057_bstack, rx1057_done2248
    pop $I19, rx1057_bstack
    if_null rx1057_cstack, rx1057_cstack_done2253
    unless rx1057_cstack, rx1057_cstack_done2253
    dec $I19
    set $P11, rx1057_cstack[$I19]
  rx1057_cstack_done2253:
    pop rx1057_rep, rx1057_bstack
    pop rx1057_pos, rx1057_bstack
    pop $I19, rx1057_bstack
    lt rx1057_pos, -1, rx1057_done2248
    lt rx1057_pos, 0, rx1057_fail2250
    eq $I19, 0, rx1057_fail2250
    nqp_islist $I20, rx1057_cstack
    unless $I20, rx1057_jump2251
    elements $I18, rx1057_bstack
    le $I18, 0, rx1057_cut2252
    dec $I18
    set $I18, rx1057_bstack[$I18]
  rx1057_cut2252:
    assign rx1057_cstack, $I18
  rx1057_jump2251:
    jump $I19
  rx1057_done2248:
    rx1057_cur."!cursor_fail"()
    .return (rx1057_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_408_1365879995.227") :anon :lex :outer("cuid_124_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1113
    .local pmc fb_tmp_145 
    find_dynamic_lex $P5001, "$*MULTINESS"
    unless_null $P5001, fallback2257
    nqp_get_sc_object $P5003, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5002, $P5003
    set fb_tmp_145, $P5002
    repr_defined $I5002, fb_tmp_145
    unless $I5002 goto if1059_else2258 
    set $P5004, fb_tmp_145["$MULTINESS"]
    set $P5006, $P5004
    goto if1059_end2259
  if1059_else2258:
    null $P5005
    set $P5006, $P5005
  if1059_end2259:
    unless_null $P5006, vivi_10602260
    nqp_get_sc_object $P5007, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5006, $P5007
  vivi_10602260:
    unless_null $P5006, vivi_10612261
    die "Contextual $*MULTINESS not found"
    box $P5008, "Contextual $*MULTINESS not found"
    set $P5006, $P5008
  vivi_10612261:
    set $P5001, $P5006
  fallback2257:
    set $S5001, $P5001
    iseq $I5001, $S5001, "proto"
    .return ($I5001) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator" :subid("cuid_125_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1119
    .param pmc self 
    $P5001 = self."!protoregex"("multi_declarator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<multi>" :subid("cuid_126_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1120
    .param pmc _lex_param_0 
    .lex "$*MULTINESS", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1065_start
    .local string rx1065_tgt
    .local int rx1065_pos
    .local int rx1065_off
    .local int rx1065_eos
    .local int rx1065_rep
    .local pmc rx1065_cur
    .local pmc rx1065_curclass
    .local pmc rx1065_bstack
    .local pmc rx1065_cstack
    rx1065_start = self."!cursor_start_all"()
    set rx1065_cur, rx1065_start[0]
    set rx1065_tgt, rx1065_start[1]
    set rx1065_pos, rx1065_start[2]
    set rx1065_curclass, rx1065_start[3]
    set rx1065_bstack, rx1065_start[4]
    set $I19, rx1065_start[5]
    store_lex unicode:"$\x{a2}", rx1065_cur
    length rx1065_eos, rx1065_tgt
    eq $I19, 1, rx1065_restart2267
    gt rx1065_pos, rx1065_eos, rx1065_fail2268
    repr_get_attr_int $I11, self, rx1065_curclass, "$!from"
    ne $I11, -1, rxscan1066_done2274
    goto rxscan1066_scan2273
  rxscan1066_loop2272:
    inc rx1065_pos
    gt rx1065_pos, rx1065_eos, rx1065_fail2268
    repr_bind_attr_int rx1065_cur, rx1065_curclass, "$!from", rx1065_pos
  rxscan1066_scan2273:
    nqp_rxmark rx1065_bstack, rxscan1066_loop2272, rx1065_pos, 0
  rxscan1066_done2274:
    repr_bind_attr_int rx1065_cur, rx1065_curclass, "$!pos", rx1065_pos
    store_lex unicode:"$\x{a2}", rx1065_cur
    box $P5002, "multi"
    set $P101, $P5002
    nqp_rxmark rx1065_bstack, rxcap1067_fail2276, rx1065_pos, 0
    add $I11, rx1065_pos, 5
    gt $I11, rx1065_eos, rx1065_fail2268
    substr $S10, rx1065_tgt, rx1065_pos, 5
    ne $S10, ucs4:"multi", rx1065_fail2268
    add rx1065_pos, 5
    nqp_rxpeek $I19, rx1065_bstack, rxcap1067_fail2276
    inc $I19
    set $I11, rx1065_bstack[$I19]
    repr_bind_attr_int rx1065_cur, rx1065_curclass, "$!pos", rx1065_pos
    $P11 = rx1065_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1065_pos)
    rx1065_cstack = rx1065_cur."!cursor_capture"($P11, "sym")
    goto rxcap1067_done2275
  rxcap1067_fail2276:
    goto rx1065_fail2268
  rxcap1067_done2275:
    repr_bind_attr_int rx1065_cur, rx1065_curclass, "$!pos", rx1065_pos
    $P11 = rx1065_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1065_curclass, "$!pos"
    lt $I11, 0, rx1065_fail2268
    repr_get_attr_int rx1065_pos, $P11, rx1065_curclass, "$!pos"
  alt1069_02279:
    nqp_rxmark rx1065_bstack, alt1069_12281, rx1065_pos, 0
    repr_bind_attr_int rx1065_cur, rx1065_curclass, "$!pos", rx1065_pos
    $P11 = rx1065_cur."declarator"()
    repr_get_attr_int $I11, $P11, rx1065_curclass, "$!pos"
    lt $I11, 0, rx1065_fail2268
    nqp_rxmark rx1065_bstack, rxsubrule1070_pass2280, -1, 0
  rxsubrule1070_pass2280:
    rx1065_cstack = rx1065_cur."!cursor_capture"($P11, "declarator")
    repr_get_attr_int rx1065_pos, $P11, rx1065_curclass, "$!pos"
    goto alt1069_end2278
  alt1069_12281:
    nqp_rxmark rx1065_bstack, alt1069_22283, rx1065_pos, 0
    repr_bind_attr_int rx1065_cur, rx1065_curclass, "$!pos", rx1065_pos
    $P11 = rx1065_cur."routine_def"()
    repr_get_attr_int $I11, $P11, rx1065_curclass, "$!pos"
    lt $I11, 0, rx1065_fail2268
    nqp_rxmark rx1065_bstack, rxsubrule1071_pass2282, -1, 0
  rxsubrule1071_pass2282:
    rx1065_cstack = rx1065_cur."!cursor_capture"($P11, "routine_def")
    repr_get_attr_int rx1065_pos, $P11, rx1065_curclass, "$!pos"
    goto alt1069_end2278
  alt1069_22283:
    repr_bind_attr_int rx1065_cur, rx1065_curclass, "$!pos", rx1065_pos
    $P11 = rx1065_cur."panic"("Malformed multi")
    repr_get_attr_int $I11, $P11, rx1065_curclass, "$!pos"
    lt $I11, 0, rx1065_fail2268
    repr_get_attr_int rx1065_pos, $P11, rx1065_curclass, "$!pos"
  alt1069_end2278:
    rx1065_cur."!cursor_pass"(rx1065_pos, "multi_declarator:sym<multi>", 'backtrack'=>1)
    .return (rx1065_cur)
  rx1065_restart2267:
    repr_get_attr_obj rx1065_cstack, rx1065_cur, rx1065_curclass, "$!cstack"
  rx1065_fail2268:
    unless rx1065_bstack, rx1065_done2266
    pop $I19, rx1065_bstack
    if_null rx1065_cstack, rx1065_cstack_done2271
    unless rx1065_cstack, rx1065_cstack_done2271
    dec $I19
    set $P11, rx1065_cstack[$I19]
  rx1065_cstack_done2271:
    pop rx1065_rep, rx1065_bstack
    pop rx1065_pos, rx1065_bstack
    pop $I19, rx1065_bstack
    lt rx1065_pos, -1, rx1065_done2266
    lt rx1065_pos, 0, rx1065_fail2268
    eq $I19, 0, rx1065_fail2268
    nqp_islist $I20, rx1065_cstack
    unless $I20, rx1065_jump2269
    elements $I18, rx1065_bstack
    le $I18, 0, rx1065_cut2270
    dec $I18
    set $I18, rx1065_bstack[$I18]
  rx1065_cut2270:
    assign rx1065_cstack, $I18
  rx1065_jump2269:
    jump $I19
  rx1065_done2266:
    rx1065_cur."!cursor_fail"()
    .return (rx1065_cur) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<proto>" :subid("cuid_127_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1125
    .param pmc _lex_param_0 
    .lex "$*MULTINESS", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1073_start
    .local string rx1073_tgt
    .local int rx1073_pos
    .local int rx1073_off
    .local int rx1073_eos
    .local int rx1073_rep
    .local pmc rx1073_cur
    .local pmc rx1073_curclass
    .local pmc rx1073_bstack
    .local pmc rx1073_cstack
    rx1073_start = self."!cursor_start_all"()
    set rx1073_cur, rx1073_start[0]
    set rx1073_tgt, rx1073_start[1]
    set rx1073_pos, rx1073_start[2]
    set rx1073_curclass, rx1073_start[3]
    set rx1073_bstack, rx1073_start[4]
    set $I19, rx1073_start[5]
    store_lex unicode:"$\x{a2}", rx1073_cur
    length rx1073_eos, rx1073_tgt
    eq $I19, 1, rx1073_restart2287
    gt rx1073_pos, rx1073_eos, rx1073_fail2288
    repr_get_attr_int $I11, self, rx1073_curclass, "$!from"
    ne $I11, -1, rxscan1074_done2294
    goto rxscan1074_scan2293
  rxscan1074_loop2292:
    inc rx1073_pos
    gt rx1073_pos, rx1073_eos, rx1073_fail2288
    repr_bind_attr_int rx1073_cur, rx1073_curclass, "$!from", rx1073_pos
  rxscan1074_scan2293:
    nqp_rxmark rx1073_bstack, rxscan1074_loop2292, rx1073_pos, 0
  rxscan1074_done2294:
    repr_bind_attr_int rx1073_cur, rx1073_curclass, "$!pos", rx1073_pos
    store_lex unicode:"$\x{a2}", rx1073_cur
    box $P5002, "proto"
    set $P101, $P5002
    nqp_rxmark rx1073_bstack, rxcap1075_fail2296, rx1073_pos, 0
    add $I11, rx1073_pos, 5
    gt $I11, rx1073_eos, rx1073_fail2288
    substr $S10, rx1073_tgt, rx1073_pos, 5
    ne $S10, ucs4:"proto", rx1073_fail2288
    add rx1073_pos, 5
    nqp_rxpeek $I19, rx1073_bstack, rxcap1075_fail2296
    inc $I19
    set $I11, rx1073_bstack[$I19]
    repr_bind_attr_int rx1073_cur, rx1073_curclass, "$!pos", rx1073_pos
    $P11 = rx1073_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1073_pos)
    rx1073_cstack = rx1073_cur."!cursor_capture"($P11, "sym")
    goto rxcap1075_done2295
  rxcap1075_fail2296:
    goto rx1073_fail2288
  rxcap1075_done2295:
    repr_bind_attr_int rx1073_cur, rx1073_curclass, "$!pos", rx1073_pos
    $P11 = rx1073_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1073_curclass, "$!pos"
    lt $I11, 0, rx1073_fail2288
    repr_get_attr_int rx1073_pos, $P11, rx1073_curclass, "$!pos"
  alt1077_02299:
    nqp_rxmark rx1073_bstack, alt1077_12301, rx1073_pos, 0
    repr_bind_attr_int rx1073_cur, rx1073_curclass, "$!pos", rx1073_pos
    $P11 = rx1073_cur."declarator"()
    repr_get_attr_int $I11, $P11, rx1073_curclass, "$!pos"
    lt $I11, 0, rx1073_fail2288
    nqp_rxmark rx1073_bstack, rxsubrule1078_pass2300, -1, 0
  rxsubrule1078_pass2300:
    rx1073_cstack = rx1073_cur."!cursor_capture"($P11, "declarator")
    repr_get_attr_int rx1073_pos, $P11, rx1073_curclass, "$!pos"
    goto alt1077_end2298
  alt1077_12301:
    nqp_rxmark rx1073_bstack, alt1077_22303, rx1073_pos, 0
    repr_bind_attr_int rx1073_cur, rx1073_curclass, "$!pos", rx1073_pos
    $P11 = rx1073_cur."routine_def"()
    repr_get_attr_int $I11, $P11, rx1073_curclass, "$!pos"
    lt $I11, 0, rx1073_fail2288
    nqp_rxmark rx1073_bstack, rxsubrule1079_pass2302, -1, 0
  rxsubrule1079_pass2302:
    rx1073_cstack = rx1073_cur."!cursor_capture"($P11, "routine_def")
    repr_get_attr_int rx1073_pos, $P11, rx1073_curclass, "$!pos"
    goto alt1077_end2298
  alt1077_22303:
    repr_bind_attr_int rx1073_cur, rx1073_curclass, "$!pos", rx1073_pos
    $P11 = rx1073_cur."panic"("Malformed proto")
    repr_get_attr_int $I11, $P11, rx1073_curclass, "$!pos"
    lt $I11, 0, rx1073_fail2288
    repr_get_attr_int rx1073_pos, $P11, rx1073_curclass, "$!pos"
  alt1077_end2298:
    rx1073_cur."!cursor_pass"(rx1073_pos, "multi_declarator:sym<proto>", 'backtrack'=>1)
    .return (rx1073_cur)
  rx1073_restart2287:
    repr_get_attr_obj rx1073_cstack, rx1073_cur, rx1073_curclass, "$!cstack"
  rx1073_fail2288:
    unless rx1073_bstack, rx1073_done2286
    pop $I19, rx1073_bstack
    if_null rx1073_cstack, rx1073_cstack_done2291
    unless rx1073_cstack, rx1073_cstack_done2291
    dec $I19
    set $P11, rx1073_cstack[$I19]
  rx1073_cstack_done2291:
    pop rx1073_rep, rx1073_bstack
    pop rx1073_pos, rx1073_bstack
    pop $I19, rx1073_bstack
    lt rx1073_pos, -1, rx1073_done2286
    lt rx1073_pos, 0, rx1073_fail2288
    eq $I19, 0, rx1073_fail2288
    nqp_islist $I20, rx1073_cstack
    unless $I20, rx1073_jump2289
    elements $I18, rx1073_bstack
    le $I18, 0, rx1073_cut2290
    dec $I18
    set $I18, rx1073_bstack[$I18]
  rx1073_cut2290:
    assign rx1073_cstack, $I18
  rx1073_jump2289:
    jump $I19
  rx1073_done2286:
    rx1073_cur."!cursor_fail"()
    .return (rx1073_cur) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<null>" :subid("cuid_128_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1130
    .param pmc _lex_param_0 
    .lex "$*MULTINESS", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1081_start
    .local string rx1081_tgt
    .local int rx1081_pos
    .local int rx1081_off
    .local int rx1081_eos
    .local int rx1081_rep
    .local pmc rx1081_cur
    .local pmc rx1081_curclass
    .local pmc rx1081_bstack
    .local pmc rx1081_cstack
    rx1081_start = self."!cursor_start_all"()
    set rx1081_cur, rx1081_start[0]
    set rx1081_tgt, rx1081_start[1]
    set rx1081_pos, rx1081_start[2]
    set rx1081_curclass, rx1081_start[3]
    set rx1081_bstack, rx1081_start[4]
    set $I19, rx1081_start[5]
    store_lex unicode:"$\x{a2}", rx1081_cur
    length rx1081_eos, rx1081_tgt
    eq $I19, 1, rx1081_restart2307
    gt rx1081_pos, rx1081_eos, rx1081_fail2308
    repr_get_attr_int $I11, self, rx1081_curclass, "$!from"
    ne $I11, -1, rxscan1082_done2314
    goto rxscan1082_scan2313
  rxscan1082_loop2312:
    inc rx1081_pos
    gt rx1081_pos, rx1081_eos, rx1081_fail2308
    repr_bind_attr_int rx1081_cur, rx1081_curclass, "$!from", rx1081_pos
  rxscan1082_scan2313:
    nqp_rxmark rx1081_bstack, rxscan1082_loop2312, rx1081_pos, 0
  rxscan1082_done2314:
    repr_bind_attr_int rx1081_cur, rx1081_curclass, "$!pos", rx1081_pos
    store_lex unicode:"$\x{a2}", rx1081_cur
    box $P5002, ""
    set $P101, $P5002
    repr_bind_attr_int rx1081_cur, rx1081_curclass, "$!pos", rx1081_pos
    $P11 = rx1081_cur."declarator"()
    repr_get_attr_int $I11, $P11, rx1081_curclass, "$!pos"
    lt $I11, 0, rx1081_fail2308
    nqp_rxmark rx1081_bstack, rxsubrule1083_pass2315, -1, 0
  rxsubrule1083_pass2315:
    rx1081_cstack = rx1081_cur."!cursor_capture"($P11, "declarator")
    repr_get_attr_int rx1081_pos, $P11, rx1081_curclass, "$!pos"
    rx1081_cur."!cursor_pass"(rx1081_pos, "multi_declarator:sym<null>", 'backtrack'=>1)
    .return (rx1081_cur)
  rx1081_restart2307:
    repr_get_attr_obj rx1081_cstack, rx1081_cur, rx1081_curclass, "$!cstack"
  rx1081_fail2308:
    unless rx1081_bstack, rx1081_done2306
    pop $I19, rx1081_bstack
    if_null rx1081_cstack, rx1081_cstack_done2311
    unless rx1081_cstack, rx1081_cstack_done2311
    dec $I19
    set $P11, rx1081_cstack[$I19]
  rx1081_cstack_done2311:
    pop rx1081_rep, rx1081_bstack
    pop rx1081_pos, rx1081_bstack
    pop $I19, rx1081_bstack
    lt rx1081_pos, -1, rx1081_done2306
    lt rx1081_pos, 0, rx1081_fail2308
    eq $I19, 0, rx1081_fail2308
    nqp_islist $I20, rx1081_cstack
    unless $I20, rx1081_jump2309
    elements $I18, rx1081_bstack
    le $I18, 0, rx1081_cut2310
    dec $I18
    set $I18, rx1081_bstack[$I18]
  rx1081_cut2310:
    assign rx1081_cstack, $I18
  rx1081_jump2309:
    jump $I19
  rx1081_done2306:
    rx1081_cur."!cursor_fail"()
    .return (rx1081_cur) 
.end
.HLL "nqp"
.namespace []
.sub "signature" :subid("cuid_129_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1135
    .param pmc _lex_param_0 
    .const 'Sub' $P5005 = 'cuid_409_1365879995.227' 
    capture_lex $P5005 
    .const 'Sub' $P5005 = 'cuid_130_1365879995.227' 
    capture_lex $P5005 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1084_start
    .local string rx1084_tgt
    .local int rx1084_pos
    .local int rx1084_off
    .local int rx1084_eos
    .local int rx1084_rep
    .local pmc rx1084_cur
    .local pmc rx1084_curclass
    .local pmc rx1084_bstack
    .local pmc rx1084_cstack
    rx1084_start = self."!cursor_start_all"()
    set rx1084_cur, rx1084_start[0]
    set rx1084_tgt, rx1084_start[1]
    set rx1084_pos, rx1084_start[2]
    set rx1084_curclass, rx1084_start[3]
    set rx1084_bstack, rx1084_start[4]
    set $I19, rx1084_start[5]
    store_lex unicode:"$\x{a2}", rx1084_cur
    length rx1084_eos, rx1084_tgt
    eq $I19, 1, rx1084_restart2318
    gt rx1084_pos, rx1084_eos, rx1084_fail2319
    repr_get_attr_int $I11, self, rx1084_curclass, "$!from"
    ne $I11, -1, rxscan1085_done2325
    goto rxscan1085_scan2324
  rxscan1085_loop2323:
    inc rx1084_pos
    gt rx1084_pos, rx1084_eos, rx1084_fail2319
    repr_bind_attr_int rx1084_cur, rx1084_curclass, "$!from", rx1084_pos
  rxscan1085_scan2324:
    nqp_rxmark rx1084_bstack, rxscan1085_loop2323, rx1084_pos, 0
  rxscan1085_done2325:
    nqp_rxmark rx1084_bstack, rxquantr1086_done2327, rx1084_pos, 0
  rxquantr1086_loop2326:
    repr_bind_attr_int rx1084_cur, rx1084_curclass, "$!pos", rx1084_pos
    store_lex unicode:"$\x{a2}", rx1084_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_409_1365879995.227' 
    capture_lex $P5002
    $P5003 = $P5002()
    unless $P5003, rx1084_fail2319
    repr_bind_attr_int rx1084_cur, rx1084_curclass, "$!pos", rx1084_pos
    $P11 = rx1084_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1084_curclass, "$!pos"
    lt $I11, 0, rx1084_fail2319
    repr_get_attr_int rx1084_pos, $P11, rx1084_curclass, "$!pos"
    repr_bind_attr_int rx1084_cur, rx1084_curclass, "$!pos", rx1084_pos
    $P11 = rx1084_cur."parameter"()
    repr_get_attr_int $I11, $P11, rx1084_curclass, "$!pos"
    lt $I11, 0, rx1084_fail2319
    nqp_rxmark rx1084_bstack, rxsubrule1091_pass2334, -1, 0
  rxsubrule1091_pass2334:
    rx1084_cstack = rx1084_cur."!cursor_capture"($P11, "invocant")
    repr_get_attr_int rx1084_pos, $P11, rx1084_curclass, "$!pos"
    repr_bind_attr_int rx1084_cur, rx1084_curclass, "$!pos", rx1084_pos
    $P11 = rx1084_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1084_curclass, "$!pos"
    lt $I11, 0, rx1084_fail2319
    repr_get_attr_int rx1084_pos, $P11, rx1084_curclass, "$!pos"
    add $I11, rx1084_pos, 1
    gt $I11, rx1084_eos, rx1084_fail2319
    substr $S10, rx1084_tgt, rx1084_pos, 1
    ne $S10, ucs4:":", rx1084_fail2319
    add rx1084_pos, 1
    nqp_rxpeek $I19, rx1084_bstack, rxquantr1086_done2327
    inc $I19
    inc $I19
    set rx1084_rep, rx1084_bstack[$I19]
    nqp_rxcommit rx1084_bstack, rxquantr1086_done2327
    inc rx1084_rep
  rxquantr1086_done2327:
    nqp_rxmark rx1084_bstack, rxquantr1093_done2337, rx1084_pos, 0
  rxquantr1093_loop2336:
    nqp_rxmark rx1084_bstack, rxquantr1094_done2339, rx1084_pos, 0
  rxquantr1094_loop2338:
    repr_bind_attr_int rx1084_cur, rx1084_curclass, "$!pos", rx1084_pos
    $P11 = rx1084_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1084_curclass, "$!pos"
    lt $I11, 0, rx1084_fail2319
    repr_get_attr_int rx1084_pos, $P11, rx1084_curclass, "$!pos"
    repr_bind_attr_int rx1084_cur, rx1084_curclass, "$!pos", rx1084_pos
    $P11 = rx1084_cur."parameter"()
    repr_get_attr_int $I11, $P11, rx1084_curclass, "$!pos"
    lt $I11, 0, rx1084_fail2319
    nqp_rxmark rx1084_bstack, rxsubrule1096_pass2341, -1, 0
  rxsubrule1096_pass2341:
    rx1084_cstack = rx1084_cur."!cursor_capture"($P11, "parameter")
    repr_get_attr_int rx1084_pos, $P11, rx1084_curclass, "$!pos"
    repr_bind_attr_int rx1084_cur, rx1084_curclass, "$!pos", rx1084_pos
    $P11 = rx1084_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1084_curclass, "$!pos"
    lt $I11, 0, rx1084_fail2319
    repr_get_attr_int rx1084_pos, $P11, rx1084_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1098_02344
    nqp_push_label $P11, alt1098_12345
    nqp_rxmark rx1084_bstack, alt1098_end2343, -1, 0
    rx1084_cur."!alt"(rx1084_pos, "alt_nfa__26_1365879997.807", $P11)
    goto rx1084_fail2319
  alt1098_02344:
    add $I11, rx1084_pos, 1
    gt $I11, rx1084_eos, rx1084_fail2319
    substr $S10, rx1084_tgt, rx1084_pos, 1
    ne $S10, ucs4:",", rx1084_fail2319
    add rx1084_pos, 1
    goto alt1098_end2343
  alt1098_12345:
    .const 'Sub' $P5004 = 'cuid_130_1365879995.227' 
    capture_lex $P5004
    repr_bind_attr_int rx1084_cur, rx1084_curclass, "$!pos", rx1084_pos
    $P11 = rx1084_cur."before"($P5004)
    repr_get_attr_int $I11, $P11, rx1084_curclass, "$!pos"
    lt $I11, 0, rx1084_fail2319
    nqp_rxmark rx1084_bstack, rxsubrule1103_pass2361, -1, 0
  rxsubrule1103_pass2361:
    rx1084_cstack = rx1084_cur."!cursor_capture"($P11, "before")
    repr_get_attr_int rx1084_pos, $P11, rx1084_curclass, "$!pos"
    goto alt1098_end2343
  alt1098_end2343:
    nqp_rxcommit rx1084_bstack, alt1098_end2343
    nqp_rxpeek $I19, rx1084_bstack, rxquantr1094_done2339
    inc $I19
    inc $I19
    set rx1084_rep, rx1084_bstack[$I19]
    nqp_rxcommit rx1084_bstack, rxquantr1094_done2339
    inc rx1084_rep
    nqp_rxmark rx1084_bstack, rxquantr1094_done2339, rx1084_pos, rx1084_rep
    goto rxquantr1094_loop2338
  rxquantr1094_done2339:
    nqp_rxpeek $I19, rx1084_bstack, rxquantr1093_done2337
    inc $I19
    inc $I19
    set rx1084_rep, rx1084_bstack[$I19]
    nqp_rxcommit rx1084_bstack, rxquantr1093_done2337
    inc rx1084_rep
  rxquantr1093_done2337:
    rx1084_cur."!cursor_pass"(rx1084_pos, "signature", 'backtrack'=>1)
    .return (rx1084_cur)
  rx1084_restart2318:
    repr_get_attr_obj rx1084_cstack, rx1084_cur, rx1084_curclass, "$!cstack"
  rx1084_fail2319:
    unless rx1084_bstack, rx1084_done2317
    pop $I19, rx1084_bstack
    if_null rx1084_cstack, rx1084_cstack_done2322
    unless rx1084_cstack, rx1084_cstack_done2322
    dec $I19
    set $P11, rx1084_cstack[$I19]
  rx1084_cstack_done2322:
    pop rx1084_rep, rx1084_bstack
    pop rx1084_pos, rx1084_bstack
    pop $I19, rx1084_bstack
    lt rx1084_pos, -1, rx1084_done2317
    lt rx1084_pos, 0, rx1084_fail2319
    eq $I19, 0, rx1084_fail2319
    nqp_islist $I20, rx1084_cstack
    unless $I20, rx1084_jump2320
    elements $I18, rx1084_bstack
    le $I18, 0, rx1084_cut2321
    dec $I18
    set $I18, rx1084_bstack[$I18]
  rx1084_cut2321:
    assign rx1084_cstack, $I18
  rx1084_jump2320:
    jump $I19
  rx1084_done2317:
    rx1084_cur."!cursor_fail"()
    .return (rx1084_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_409_1365879995.227") :anon :lex :outer("cuid_129_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1136
    .local pmc fb_tmp_146 
    find_dynamic_lex $P5001, "$*INVOCANT_OK"
    unless_null $P5001, fallback2328
    nqp_get_sc_object $P5003, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5002, $P5003
    set fb_tmp_146, $P5002
    repr_defined $I5001, fb_tmp_146
    unless $I5001 goto if1087_else2329 
    set $P5004, fb_tmp_146["$INVOCANT_OK"]
    set $P5006, $P5004
    goto if1087_end2330
  if1087_else2329:
    null $P5005
    set $P5006, $P5005
  if1087_end2330:
    unless_null $P5006, vivi_10882331
    nqp_get_sc_object $P5007, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5006, $P5007
  vivi_10882331:
    unless_null $P5006, vivi_10892332
    die "Contextual $*INVOCANT_OK not found"
    box $P5008, "Contextual $*INVOCANT_OK not found"
    set $P5006, $P5008
  vivi_10892332:
    set $P5001, $P5006
  fallback2328:
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_130_1365879995.227") :anon :lex :outer("cuid_129_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1099_start
    .local string rx1099_tgt
    .local int rx1099_pos
    .local int rx1099_off
    .local int rx1099_eos
    .local int rx1099_rep
    .local pmc rx1099_cur
    .local pmc rx1099_curclass
    .local pmc rx1099_bstack
    .local pmc rx1099_cstack
    rx1099_start = self."!cursor_start_all"()
    set rx1099_cur, rx1099_start[0]
    set rx1099_tgt, rx1099_start[1]
    set rx1099_pos, rx1099_start[2]
    set rx1099_curclass, rx1099_start[3]
    set rx1099_bstack, rx1099_start[4]
    set $I19, rx1099_start[5]
    store_lex unicode:"$\x{a2}", rx1099_cur
    length rx1099_eos, rx1099_tgt
    eq $I19, 1, rx1099_restart2348
    gt rx1099_pos, rx1099_eos, rx1099_fail2349
    repr_get_attr_int $I11, self, rx1099_curclass, "$!from"
    ne $I11, -1, rxscan1100_done2355
    goto rxscan1100_scan2354
  rxscan1100_loop2353:
    inc rx1099_pos
    gt rx1099_pos, rx1099_eos, rx1099_fail2349
    repr_bind_attr_int rx1099_cur, rx1099_curclass, "$!from", rx1099_pos
  rxscan1100_scan2354:
    nqp_rxmark rx1099_bstack, rxscan1100_loop2353, rx1099_pos, 0
  rxscan1100_done2355:
    nqp_rxmark rx1099_bstack, rxquantr1101_done2357, rx1099_pos, 0
  rxquantr1101_loop2356:
    ge rx1099_pos, rx1099_eos, rx1099_fail2349
    is_cclass $I11, .CCLASS_WHITESPACE, rx1099_tgt, rx1099_pos
    unless $I11, rx1099_fail2349
    add rx1099_pos, 1
    nqp_rxpeek $I19, rx1099_bstack, rxquantr1101_done2357
    inc $I19
    inc $I19
    set rx1099_rep, rx1099_bstack[$I19]
    nqp_rxcommit rx1099_bstack, rxquantr1101_done2357
    inc rx1099_rep
    nqp_rxmark rx1099_bstack, rxquantr1101_done2357, rx1099_pos, rx1099_rep
    goto rxquantr1101_loop2356
  rxquantr1101_done2357:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1102_02359
    nqp_push_label $P11, alt1102_12360
    nqp_rxmark rx1099_bstack, alt1102_end2358, -1, 0
    rx1099_cur."!alt"(rx1099_pos, "alt_nfa__25_1365879997.802", $P11)
    goto rx1099_fail2349
  alt1102_02359:
    add $I11, rx1099_pos, 1
    gt $I11, rx1099_eos, rx1099_fail2349
    substr $S10, rx1099_tgt, rx1099_pos, 1
    ne $S10, ucs4:")", rx1099_fail2349
    add rx1099_pos, 1
    goto alt1102_end2358
  alt1102_12360:
    add $I11, rx1099_pos, 1
    gt $I11, rx1099_eos, rx1099_fail2349
    substr $S10, rx1099_tgt, rx1099_pos, 1
    ne $S10, ucs4:"{", rx1099_fail2349
    add rx1099_pos, 1
    goto alt1102_end2358
  alt1102_end2358:
    nqp_rxcommit rx1099_bstack, alt1102_end2358
    rx1099_cur."!cursor_pass"(rx1099_pos, 'backtrack'=>1)
    .return (rx1099_cur)
  rx1099_restart2348:
    repr_get_attr_obj rx1099_cstack, rx1099_cur, rx1099_curclass, "$!cstack"
  rx1099_fail2349:
    unless rx1099_bstack, rx1099_done2347
    pop $I19, rx1099_bstack
    if_null rx1099_cstack, rx1099_cstack_done2352
    unless rx1099_cstack, rx1099_cstack_done2352
    dec $I19
    set $P11, rx1099_cstack[$I19]
  rx1099_cstack_done2352:
    pop rx1099_rep, rx1099_bstack
    pop rx1099_pos, rx1099_bstack
    pop $I19, rx1099_bstack
    lt rx1099_pos, -1, rx1099_done2347
    lt rx1099_pos, 0, rx1099_fail2349
    eq $I19, 0, rx1099_fail2349
    nqp_islist $I20, rx1099_cstack
    unless $I20, rx1099_jump2350
    elements $I18, rx1099_bstack
    le $I18, 0, rx1099_cut2351
    dec $I18
    set $I18, rx1099_bstack[$I18]
  rx1099_cut2351:
    assign rx1099_cstack, $I18
  rx1099_jump2350:
    jump $I19
  rx1099_done2347:
    rx1099_cur."!cursor_fail"()
    .return (rx1099_cur) 
.end
.HLL "nqp"
.namespace []
.sub "parameter" :subid("cuid_131_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1140
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1104_start
    .local string rx1104_tgt
    .local int rx1104_pos
    .local int rx1104_off
    .local int rx1104_eos
    .local int rx1104_rep
    .local pmc rx1104_cur
    .local pmc rx1104_curclass
    .local pmc rx1104_bstack
    .local pmc rx1104_cstack
    rx1104_start = self."!cursor_start_all"()
    set rx1104_cur, rx1104_start[0]
    set rx1104_tgt, rx1104_start[1]
    set rx1104_pos, rx1104_start[2]
    set rx1104_curclass, rx1104_start[3]
    set rx1104_bstack, rx1104_start[4]
    set $I19, rx1104_start[5]
    store_lex unicode:"$\x{a2}", rx1104_cur
    length rx1104_eos, rx1104_tgt
    eq $I19, 1, rx1104_restart2364
    gt rx1104_pos, rx1104_eos, rx1104_fail2365
    repr_get_attr_int $I11, self, rx1104_curclass, "$!from"
    ne $I11, -1, rxscan1105_done2371
    goto rxscan1105_scan2370
  rxscan1105_loop2369:
    inc rx1104_pos
    gt rx1104_pos, rx1104_eos, rx1104_fail2365
    repr_bind_attr_int rx1104_cur, rx1104_curclass, "$!from", rx1104_pos
  rxscan1105_scan2370:
    nqp_rxmark rx1104_bstack, rxscan1105_loop2369, rx1104_pos, 0
  rxscan1105_done2371:
    nqp_rxmark rx1104_bstack, rxquantr1106_done2373, rx1104_pos, 0
  rxquantr1106_loop2372:
    repr_bind_attr_int rx1104_cur, rx1104_curclass, "$!pos", rx1104_pos
    $P11 = rx1104_cur."typename"()
    repr_get_attr_int $I11, $P11, rx1104_curclass, "$!pos"
    lt $I11, 0, rx1104_fail2365
    nqp_rxmark rx1104_bstack, rxsubrule1107_pass2374, -1, 0
  rxsubrule1107_pass2374:
    rx1104_cstack = rx1104_cur."!cursor_capture"($P11, "typename")
    repr_get_attr_int rx1104_pos, $P11, rx1104_curclass, "$!pos"
    nqp_rxmark rx1104_bstack, rxquantr1108_done2376, rx1104_pos, 0
  rxquantr1108_loop2375:
    add $I11, rx1104_pos, 1
    gt $I11, rx1104_eos, rx1104_fail2365
    substr $S10, rx1104_tgt, rx1104_pos, 1
    ne $S10, ucs4:":", rx1104_fail2365
    add rx1104_pos, 1
    nqp_rxmark rx1104_bstack, rxcap1109_fail2378, rx1104_pos, 0
    ge rx1104_pos, rx1104_eos, rx1104_fail2365
    substr $S11, rx1104_tgt, rx1104_pos, 1
    index $I11, ucs4:"_DU", $S11
    lt $I11, 0, rx1104_fail2365
    inc rx1104_pos
    nqp_rxpeek $I19, rx1104_bstack, rxcap1109_fail2378
    inc $I19
    set $I11, rx1104_bstack[$I19]
    repr_bind_attr_int rx1104_cur, rx1104_curclass, "$!pos", rx1104_pos
    $P11 = rx1104_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1104_pos)
    rx1104_cstack = rx1104_cur."!cursor_capture"($P11, "definedness")
    goto rxcap1109_done2377
  rxcap1109_fail2378:
    goto rx1104_fail2365
  rxcap1109_done2377:
    nqp_rxpeek $I19, rx1104_bstack, rxquantr1108_done2376
    inc $I19
    inc $I19
    set rx1104_rep, rx1104_bstack[$I19]
    nqp_rxcommit rx1104_bstack, rxquantr1108_done2376
    inc rx1104_rep
  rxquantr1108_done2376:
    repr_bind_attr_int rx1104_cur, rx1104_curclass, "$!pos", rx1104_pos
    $P11 = rx1104_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1104_curclass, "$!pos"
    lt $I11, 0, rx1104_fail2365
    repr_get_attr_int rx1104_pos, $P11, rx1104_curclass, "$!pos"
    nqp_rxpeek $I19, rx1104_bstack, rxquantr1106_done2373
    inc $I19
    inc $I19
    set rx1104_rep, rx1104_bstack[$I19]
    nqp_rxcommit rx1104_bstack, rxquantr1106_done2373
    inc rx1104_rep
    nqp_rxmark rx1104_bstack, rxquantr1106_done2373, rx1104_pos, rx1104_rep
    goto rxquantr1106_loop2372
  rxquantr1106_done2373:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1111_02381
    nqp_push_label $P11, alt1111_12385
    nqp_rxmark rx1104_bstack, alt1111_end2380, -1, 0
    rx1104_cur."!alt"(rx1104_pos, "alt_nfa__29_1365879997.835", $P11)
    goto rx1104_fail2365
  alt1111_02381:
    nqp_rxmark rx1104_bstack, rxcap1112_fail2383, rx1104_pos, 0
    add $I11, rx1104_pos, 1
    gt $I11, rx1104_eos, rx1104_fail2365
    substr $S10, rx1104_tgt, rx1104_pos, 1
    ne $S10, ucs4:"*", rx1104_fail2365
    add rx1104_pos, 1
    nqp_rxpeek $I19, rx1104_bstack, rxcap1112_fail2383
    inc $I19
    set $I11, rx1104_bstack[$I19]
    repr_bind_attr_int rx1104_cur, rx1104_curclass, "$!pos", rx1104_pos
    $P11 = rx1104_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1104_pos)
    rx1104_cstack = rx1104_cur."!cursor_capture"($P11, "quant")
    goto rxcap1112_done2382
  rxcap1112_fail2383:
    goto rx1104_fail2365
  rxcap1112_done2382:
    repr_bind_attr_int rx1104_cur, rx1104_curclass, "$!pos", rx1104_pos
    $P11 = rx1104_cur."param_var"()
    repr_get_attr_int $I11, $P11, rx1104_curclass, "$!pos"
    lt $I11, 0, rx1104_fail2365
    nqp_rxmark rx1104_bstack, rxsubrule1113_pass2384, -1, 0
  rxsubrule1113_pass2384:
    rx1104_cstack = rx1104_cur."!cursor_capture"($P11, "param_var")
    repr_get_attr_int rx1104_pos, $P11, rx1104_curclass, "$!pos"
    goto alt1111_end2380
  alt1111_12385:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1114_02387
    nqp_push_label $P11, alt1114_12389
    nqp_rxmark rx1104_bstack, alt1114_end2386, -1, 0
    rx1104_cur."!alt"(rx1104_pos, "alt_nfa__27_1365879997.835", $P11)
    goto rx1104_fail2365
  alt1114_02387:
    repr_bind_attr_int rx1104_cur, rx1104_curclass, "$!pos", rx1104_pos
    $P11 = rx1104_cur."param_var"()
    repr_get_attr_int $I11, $P11, rx1104_curclass, "$!pos"
    lt $I11, 0, rx1104_fail2365
    nqp_rxmark rx1104_bstack, rxsubrule1115_pass2388, -1, 0
  rxsubrule1115_pass2388:
    rx1104_cstack = rx1104_cur."!cursor_capture"($P11, "param_var")
    repr_get_attr_int rx1104_pos, $P11, rx1104_curclass, "$!pos"
    goto alt1114_end2386
  alt1114_12389:
    repr_bind_attr_int rx1104_cur, rx1104_curclass, "$!pos", rx1104_pos
    $P11 = rx1104_cur."named_param"()
    repr_get_attr_int $I11, $P11, rx1104_curclass, "$!pos"
    lt $I11, 0, rx1104_fail2365
    nqp_rxmark rx1104_bstack, rxsubrule1116_pass2390, -1, 0
  rxsubrule1116_pass2390:
    rx1104_cstack = rx1104_cur."!cursor_capture"($P11, "named_param")
    repr_get_attr_int rx1104_pos, $P11, rx1104_curclass, "$!pos"
    goto alt1114_end2386
  alt1114_end2386:
    nqp_rxcommit rx1104_bstack, alt1114_end2386
    nqp_rxmark rx1104_bstack, rxcap1117_fail2392, rx1104_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1118_02394
    nqp_push_label $P11, alt1118_12395
    nqp_push_label $P11, alt1118_22396
    nqp_rxmark rx1104_bstack, alt1118_end2393, -1, 0
    rx1104_cur."!alt"(rx1104_pos, "alt_nfa__28_1365879997.835", $P11)
    goto rx1104_fail2365
  alt1118_02394:
    add $I11, rx1104_pos, 1
    gt $I11, rx1104_eos, rx1104_fail2365
    substr $S10, rx1104_tgt, rx1104_pos, 1
    ne $S10, ucs4:"?", rx1104_fail2365
    add rx1104_pos, 1
    goto alt1118_end2393
  alt1118_12395:
    add $I11, rx1104_pos, 1
    gt $I11, rx1104_eos, rx1104_fail2365
    substr $S10, rx1104_tgt, rx1104_pos, 1
    ne $S10, ucs4:"!", rx1104_fail2365
    add rx1104_pos, 1
    goto alt1118_end2393
  alt1118_22396:
    goto alt1118_end2393
  alt1118_end2393:
    nqp_rxcommit rx1104_bstack, alt1118_end2393
    nqp_rxpeek $I19, rx1104_bstack, rxcap1117_fail2392
    inc $I19
    set $I11, rx1104_bstack[$I19]
    repr_bind_attr_int rx1104_cur, rx1104_curclass, "$!pos", rx1104_pos
    $P11 = rx1104_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1104_pos)
    rx1104_cstack = rx1104_cur."!cursor_capture"($P11, "quant")
    goto rxcap1117_done2391
  rxcap1117_fail2392:
    goto rx1104_fail2365
  rxcap1117_done2391:
    goto alt1111_end2380
  alt1111_end2380:
    nqp_rxcommit rx1104_bstack, alt1111_end2380
    nqp_rxmark rx1104_bstack, rxquantr1120_done2399, rx1104_pos, 0
  rxquantr1120_loop2398:
    repr_bind_attr_int rx1104_cur, rx1104_curclass, "$!pos", rx1104_pos
    $P11 = rx1104_cur."default_value"()
    repr_get_attr_int $I11, $P11, rx1104_curclass, "$!pos"
    lt $I11, 0, rx1104_fail2365
    goto rxsubrule1121_pass2400
  rxsubrule1121_back2401:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1104_curclass, "$!pos"
    lt $I11, 0, rx1104_fail2365
  rxsubrule1121_pass2400:
    rx1104_cstack = rx1104_cur."!cursor_capture"($P11, "default_value")
    set_addr $I11, rxsubrule1121_back2401
    push rx1104_bstack, $I11
    push rx1104_bstack, 0
    push rx1104_bstack, rx1104_pos
    elements $I11, rx1104_cstack
    push rx1104_bstack, $I11
    repr_get_attr_int rx1104_pos, $P11, rx1104_curclass, "$!pos"
    nqp_rxpeek $I19, rx1104_bstack, rxquantr1120_done2399
    inc $I19
    inc $I19
    set rx1104_rep, rx1104_bstack[$I19]
    nqp_rxcommit rx1104_bstack, rxquantr1120_done2399
    inc rx1104_rep
  rxquantr1120_done2399:
    rx1104_cur."!cursor_pass"(rx1104_pos, "parameter", 'backtrack'=>1)
    .return (rx1104_cur)
  rx1104_restart2364:
    repr_get_attr_obj rx1104_cstack, rx1104_cur, rx1104_curclass, "$!cstack"
  rx1104_fail2365:
    unless rx1104_bstack, rx1104_done2363
    pop $I19, rx1104_bstack
    if_null rx1104_cstack, rx1104_cstack_done2368
    unless rx1104_cstack, rx1104_cstack_done2368
    dec $I19
    set $P11, rx1104_cstack[$I19]
  rx1104_cstack_done2368:
    pop rx1104_rep, rx1104_bstack
    pop rx1104_pos, rx1104_bstack
    pop $I19, rx1104_bstack
    lt rx1104_pos, -1, rx1104_done2363
    lt rx1104_pos, 0, rx1104_fail2365
    eq $I19, 0, rx1104_fail2365
    nqp_islist $I20, rx1104_cstack
    unless $I20, rx1104_jump2366
    elements $I18, rx1104_bstack
    le $I18, 0, rx1104_cut2367
    dec $I18
    set $I18, rx1104_bstack[$I18]
  rx1104_cut2367:
    assign rx1104_cstack, $I18
  rx1104_jump2366:
    jump $I19
  rx1104_done2363:
    rx1104_cur."!cursor_fail"()
    .return (rx1104_cur) 
.end
.HLL "nqp"
.namespace []
.sub "param_var" :subid("cuid_132_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1149
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1122_start
    .local string rx1122_tgt
    .local int rx1122_pos
    .local int rx1122_off
    .local int rx1122_eos
    .local int rx1122_rep
    .local pmc rx1122_cur
    .local pmc rx1122_curclass
    .local pmc rx1122_bstack
    .local pmc rx1122_cstack
    rx1122_start = self."!cursor_start_all"()
    set rx1122_cur, rx1122_start[0]
    set rx1122_tgt, rx1122_start[1]
    set rx1122_pos, rx1122_start[2]
    set rx1122_curclass, rx1122_start[3]
    set rx1122_bstack, rx1122_start[4]
    set $I19, rx1122_start[5]
    store_lex unicode:"$\x{a2}", rx1122_cur
    length rx1122_eos, rx1122_tgt
    eq $I19, 1, rx1122_restart2404
    gt rx1122_pos, rx1122_eos, rx1122_fail2405
    repr_get_attr_int $I11, self, rx1122_curclass, "$!from"
    ne $I11, -1, rxscan1123_done2411
    goto rxscan1123_scan2410
  rxscan1123_loop2409:
    inc rx1122_pos
    gt rx1122_pos, rx1122_eos, rx1122_fail2405
    repr_bind_attr_int rx1122_cur, rx1122_curclass, "$!from", rx1122_pos
  rxscan1123_scan2410:
    nqp_rxmark rx1122_bstack, rxscan1123_loop2409, rx1122_pos, 0
  rxscan1123_done2411:
    repr_bind_attr_int rx1122_cur, rx1122_curclass, "$!pos", rx1122_pos
    $P11 = rx1122_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx1122_curclass, "$!pos"
    lt $I11, 0, rx1122_fail2405
    nqp_rxmark rx1122_bstack, rxsubrule1124_pass2412, -1, 0
  rxsubrule1124_pass2412:
    rx1122_cstack = rx1122_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx1122_pos, $P11, rx1122_curclass, "$!pos"
    nqp_rxmark rx1122_bstack, rxquantr1125_done2414, rx1122_pos, 0
  rxquantr1125_loop2413:
    repr_bind_attr_int rx1122_cur, rx1122_curclass, "$!pos", rx1122_pos
    $P11 = rx1122_cur."twigil"()
    repr_get_attr_int $I11, $P11, rx1122_curclass, "$!pos"
    lt $I11, 0, rx1122_fail2405
    goto rxsubrule1126_pass2415
  rxsubrule1126_back2416:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1122_curclass, "$!pos"
    lt $I11, 0, rx1122_fail2405
  rxsubrule1126_pass2415:
    rx1122_cstack = rx1122_cur."!cursor_capture"($P11, "twigil")
    set_addr $I11, rxsubrule1126_back2416
    push rx1122_bstack, $I11
    push rx1122_bstack, 0
    push rx1122_bstack, rx1122_pos
    elements $I11, rx1122_cstack
    push rx1122_bstack, $I11
    repr_get_attr_int rx1122_pos, $P11, rx1122_curclass, "$!pos"
    nqp_rxpeek $I19, rx1122_bstack, rxquantr1125_done2414
    inc $I19
    inc $I19
    set rx1122_rep, rx1122_bstack[$I19]
    nqp_rxcommit rx1122_bstack, rxquantr1125_done2414
    inc rx1122_rep
  rxquantr1125_done2414:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1127_02418
    nqp_push_label $P11, alt1127_12420
    nqp_rxmark rx1122_bstack, alt1127_end2417, -1, 0
    rx1122_cur."!alt"(rx1122_pos, "alt_nfa__30_1365879997.847", $P11)
    goto rx1122_fail2405
  alt1127_02418:
    repr_bind_attr_int rx1122_cur, rx1122_curclass, "$!pos", rx1122_pos
    $P11 = rx1122_cur."ident"()
    repr_get_attr_int $I11, $P11, rx1122_curclass, "$!pos"
    lt $I11, 0, rx1122_fail2405
    nqp_rxmark rx1122_bstack, rxsubrule1128_pass2419, -1, 0
  rxsubrule1128_pass2419:
    rx1122_cstack = rx1122_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx1122_pos, $P11, rx1122_curclass, "$!pos"
    goto alt1127_end2417
  alt1127_12420:
    nqp_rxmark rx1122_bstack, rxcap1129_fail2422, rx1122_pos, 0
    ge rx1122_pos, rx1122_eos, rx1122_fail2405
    substr $S11, rx1122_tgt, rx1122_pos, 1
    index $I11, ucs4:"/!", $S11
    lt $I11, 0, rx1122_fail2405
    inc rx1122_pos
    nqp_rxpeek $I19, rx1122_bstack, rxcap1129_fail2422
    inc $I19
    set $I11, rx1122_bstack[$I19]
    repr_bind_attr_int rx1122_cur, rx1122_curclass, "$!pos", rx1122_pos
    $P11 = rx1122_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1122_pos)
    rx1122_cstack = rx1122_cur."!cursor_capture"($P11, "name")
    goto rxcap1129_done2421
  rxcap1129_fail2422:
    goto rx1122_fail2405
  rxcap1129_done2421:
    goto alt1127_end2417
  alt1127_end2417:
    nqp_rxcommit rx1122_bstack, alt1127_end2417
    rx1122_cur."!cursor_pass"(rx1122_pos, "param_var", 'backtrack'=>1)
    .return (rx1122_cur)
  rx1122_restart2404:
    repr_get_attr_obj rx1122_cstack, rx1122_cur, rx1122_curclass, "$!cstack"
  rx1122_fail2405:
    unless rx1122_bstack, rx1122_done2403
    pop $I19, rx1122_bstack
    if_null rx1122_cstack, rx1122_cstack_done2408
    unless rx1122_cstack, rx1122_cstack_done2408
    dec $I19
    set $P11, rx1122_cstack[$I19]
  rx1122_cstack_done2408:
    pop rx1122_rep, rx1122_bstack
    pop rx1122_pos, rx1122_bstack
    pop $I19, rx1122_bstack
    lt rx1122_pos, -1, rx1122_done2403
    lt rx1122_pos, 0, rx1122_fail2405
    eq $I19, 0, rx1122_fail2405
    nqp_islist $I20, rx1122_cstack
    unless $I20, rx1122_jump2406
    elements $I18, rx1122_bstack
    le $I18, 0, rx1122_cut2407
    dec $I18
    set $I18, rx1122_bstack[$I18]
  rx1122_cut2407:
    assign rx1122_cstack, $I18
  rx1122_jump2406:
    jump $I19
  rx1122_done2403:
    rx1122_cur."!cursor_fail"()
    .return (rx1122_cur) 
.end
.HLL "nqp"
.namespace []
.sub "named_param" :subid("cuid_133_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1154
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1130_start
    .local string rx1130_tgt
    .local int rx1130_pos
    .local int rx1130_off
    .local int rx1130_eos
    .local int rx1130_rep
    .local pmc rx1130_cur
    .local pmc rx1130_curclass
    .local pmc rx1130_bstack
    .local pmc rx1130_cstack
    rx1130_start = self."!cursor_start_all"()
    set rx1130_cur, rx1130_start[0]
    set rx1130_tgt, rx1130_start[1]
    set rx1130_pos, rx1130_start[2]
    set rx1130_curclass, rx1130_start[3]
    set rx1130_bstack, rx1130_start[4]
    set $I19, rx1130_start[5]
    store_lex unicode:"$\x{a2}", rx1130_cur
    length rx1130_eos, rx1130_tgt
    eq $I19, 1, rx1130_restart2425
    gt rx1130_pos, rx1130_eos, rx1130_fail2426
    repr_get_attr_int $I11, self, rx1130_curclass, "$!from"
    ne $I11, -1, rxscan1131_done2432
    goto rxscan1131_scan2431
  rxscan1131_loop2430:
    inc rx1130_pos
    gt rx1130_pos, rx1130_eos, rx1130_fail2426
    repr_bind_attr_int rx1130_cur, rx1130_curclass, "$!from", rx1130_pos
  rxscan1131_scan2431:
    nqp_rxmark rx1130_bstack, rxscan1131_loop2430, rx1130_pos, 0
  rxscan1131_done2432:
    add $I11, rx1130_pos, 1
    gt $I11, rx1130_eos, rx1130_fail2426
    substr $S10, rx1130_tgt, rx1130_pos, 1
    ne $S10, ucs4:":", rx1130_fail2426
    add rx1130_pos, 1
    repr_bind_attr_int rx1130_cur, rx1130_curclass, "$!pos", rx1130_pos
    $P11 = rx1130_cur."param_var"()
    repr_get_attr_int $I11, $P11, rx1130_curclass, "$!pos"
    lt $I11, 0, rx1130_fail2426
    nqp_rxmark rx1130_bstack, rxsubrule1132_pass2433, -1, 0
  rxsubrule1132_pass2433:
    rx1130_cstack = rx1130_cur."!cursor_capture"($P11, "param_var")
    repr_get_attr_int rx1130_pos, $P11, rx1130_curclass, "$!pos"
    rx1130_cur."!cursor_pass"(rx1130_pos, "named_param", 'backtrack'=>1)
    .return (rx1130_cur)
  rx1130_restart2425:
    repr_get_attr_obj rx1130_cstack, rx1130_cur, rx1130_curclass, "$!cstack"
  rx1130_fail2426:
    unless rx1130_bstack, rx1130_done2424
    pop $I19, rx1130_bstack
    if_null rx1130_cstack, rx1130_cstack_done2429
    unless rx1130_cstack, rx1130_cstack_done2429
    dec $I19
    set $P11, rx1130_cstack[$I19]
  rx1130_cstack_done2429:
    pop rx1130_rep, rx1130_bstack
    pop rx1130_pos, rx1130_bstack
    pop $I19, rx1130_bstack
    lt rx1130_pos, -1, rx1130_done2424
    lt rx1130_pos, 0, rx1130_fail2426
    eq $I19, 0, rx1130_fail2426
    nqp_islist $I20, rx1130_cstack
    unless $I20, rx1130_jump2427
    elements $I18, rx1130_bstack
    le $I18, 0, rx1130_cut2428
    dec $I18
    set $I18, rx1130_bstack[$I18]
  rx1130_cut2428:
    assign rx1130_cstack, $I18
  rx1130_jump2427:
    jump $I19
  rx1130_done2424:
    rx1130_cur."!cursor_fail"()
    .return (rx1130_cur) 
.end
.HLL "nqp"
.namespace []
.sub "default_value" :subid("cuid_134_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1158
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1133_start
    .local string rx1133_tgt
    .local int rx1133_pos
    .local int rx1133_off
    .local int rx1133_eos
    .local int rx1133_rep
    .local pmc rx1133_cur
    .local pmc rx1133_curclass
    .local pmc rx1133_bstack
    .local pmc rx1133_cstack
    rx1133_start = self."!cursor_start_all"()
    set rx1133_cur, rx1133_start[0]
    set rx1133_tgt, rx1133_start[1]
    set rx1133_pos, rx1133_start[2]
    set rx1133_curclass, rx1133_start[3]
    set rx1133_bstack, rx1133_start[4]
    set $I19, rx1133_start[5]
    store_lex unicode:"$\x{a2}", rx1133_cur
    length rx1133_eos, rx1133_tgt
    eq $I19, 1, rx1133_restart2436
    gt rx1133_pos, rx1133_eos, rx1133_fail2437
    repr_get_attr_int $I11, self, rx1133_curclass, "$!from"
    ne $I11, -1, rxscan1134_done2443
    goto rxscan1134_scan2442
  rxscan1134_loop2441:
    inc rx1133_pos
    gt rx1133_pos, rx1133_eos, rx1133_fail2437
    repr_bind_attr_int rx1133_cur, rx1133_curclass, "$!from", rx1133_pos
  rxscan1134_scan2442:
    nqp_rxmark rx1133_bstack, rxscan1134_loop2441, rx1133_pos, 0
  rxscan1134_done2443:
    repr_bind_attr_int rx1133_cur, rx1133_curclass, "$!pos", rx1133_pos
    $P11 = rx1133_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1133_curclass, "$!pos"
    lt $I11, 0, rx1133_fail2437
    repr_get_attr_int rx1133_pos, $P11, rx1133_curclass, "$!pos"
    add $I11, rx1133_pos, 1
    gt $I11, rx1133_eos, rx1133_fail2437
    substr $S10, rx1133_tgt, rx1133_pos, 1
    ne $S10, ucs4:"=", rx1133_fail2437
    add rx1133_pos, 1
    repr_bind_attr_int rx1133_cur, rx1133_curclass, "$!pos", rx1133_pos
    $P11 = rx1133_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1133_curclass, "$!pos"
    lt $I11, 0, rx1133_fail2437
    repr_get_attr_int rx1133_pos, $P11, rx1133_curclass, "$!pos"
    repr_bind_attr_int rx1133_cur, rx1133_curclass, "$!pos", rx1133_pos
    $P11 = rx1133_cur."EXPR"("i=")
    repr_get_attr_int $I11, $P11, rx1133_curclass, "$!pos"
    lt $I11, 0, rx1133_fail2437
    nqp_rxmark rx1133_bstack, rxsubrule1137_pass2446, -1, 0
  rxsubrule1137_pass2446:
    rx1133_cstack = rx1133_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx1133_pos, $P11, rx1133_curclass, "$!pos"
    repr_bind_attr_int rx1133_cur, rx1133_curclass, "$!pos", rx1133_pos
    $P11 = rx1133_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1133_curclass, "$!pos"
    lt $I11, 0, rx1133_fail2437
    repr_get_attr_int rx1133_pos, $P11, rx1133_curclass, "$!pos"
    rx1133_cur."!cursor_pass"(rx1133_pos, "default_value", 'backtrack'=>1)
    .return (rx1133_cur)
  rx1133_restart2436:
    repr_get_attr_obj rx1133_cstack, rx1133_cur, rx1133_curclass, "$!cstack"
  rx1133_fail2437:
    unless rx1133_bstack, rx1133_done2435
    pop $I19, rx1133_bstack
    if_null rx1133_cstack, rx1133_cstack_done2440
    unless rx1133_cstack, rx1133_cstack_done2440
    dec $I19
    set $P11, rx1133_cstack[$I19]
  rx1133_cstack_done2440:
    pop rx1133_rep, rx1133_bstack
    pop rx1133_pos, rx1133_bstack
    pop $I19, rx1133_bstack
    lt rx1133_pos, -1, rx1133_done2435
    lt rx1133_pos, 0, rx1133_fail2437
    eq $I19, 0, rx1133_fail2437
    nqp_islist $I20, rx1133_cstack
    unless $I20, rx1133_jump2438
    elements $I18, rx1133_bstack
    le $I18, 0, rx1133_cut2439
    dec $I18
    set $I18, rx1133_bstack[$I18]
  rx1133_cut2439:
    assign rx1133_cstack, $I18
  rx1133_jump2438:
    jump $I19
  rx1133_done2435:
    rx1133_cur."!cursor_fail"()
    .return (rx1133_cur) 
.end
.HLL "nqp"
.namespace []
.sub "trait" :subid("cuid_135_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1160
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1139_start
    .local string rx1139_tgt
    .local int rx1139_pos
    .local int rx1139_off
    .local int rx1139_eos
    .local int rx1139_rep
    .local pmc rx1139_cur
    .local pmc rx1139_curclass
    .local pmc rx1139_bstack
    .local pmc rx1139_cstack
    rx1139_start = self."!cursor_start_all"()
    set rx1139_cur, rx1139_start[0]
    set rx1139_tgt, rx1139_start[1]
    set rx1139_pos, rx1139_start[2]
    set rx1139_curclass, rx1139_start[3]
    set rx1139_bstack, rx1139_start[4]
    set $I19, rx1139_start[5]
    store_lex unicode:"$\x{a2}", rx1139_cur
    length rx1139_eos, rx1139_tgt
    eq $I19, 1, rx1139_restart2450
    gt rx1139_pos, rx1139_eos, rx1139_fail2451
    repr_get_attr_int $I11, self, rx1139_curclass, "$!from"
    ne $I11, -1, rxscan1140_done2457
    goto rxscan1140_scan2456
  rxscan1140_loop2455:
    inc rx1139_pos
    gt rx1139_pos, rx1139_eos, rx1139_fail2451
    repr_bind_attr_int rx1139_cur, rx1139_curclass, "$!from", rx1139_pos
  rxscan1140_scan2456:
    nqp_rxmark rx1139_bstack, rxscan1140_loop2455, rx1139_pos, 0
  rxscan1140_done2457:
    repr_bind_attr_int rx1139_cur, rx1139_curclass, "$!pos", rx1139_pos
    $P11 = rx1139_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1139_curclass, "$!pos"
    lt $I11, 0, rx1139_fail2451
    repr_get_attr_int rx1139_pos, $P11, rx1139_curclass, "$!pos"
    repr_bind_attr_int rx1139_cur, rx1139_curclass, "$!pos", rx1139_pos
    $P11 = rx1139_cur."trait_mod"()
    repr_get_attr_int $I11, $P11, rx1139_curclass, "$!pos"
    lt $I11, 0, rx1139_fail2451
    nqp_rxmark rx1139_bstack, rxsubrule1142_pass2459, -1, 0
  rxsubrule1142_pass2459:
    rx1139_cstack = rx1139_cur."!cursor_capture"($P11, "trait_mod")
    repr_get_attr_int rx1139_pos, $P11, rx1139_curclass, "$!pos"
    repr_bind_attr_int rx1139_cur, rx1139_curclass, "$!pos", rx1139_pos
    $P11 = rx1139_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1139_curclass, "$!pos"
    lt $I11, 0, rx1139_fail2451
    repr_get_attr_int rx1139_pos, $P11, rx1139_curclass, "$!pos"
    rx1139_cur."!cursor_pass"(rx1139_pos, "trait", 'backtrack'=>1)
    .return (rx1139_cur)
  rx1139_restart2450:
    repr_get_attr_obj rx1139_cstack, rx1139_cur, rx1139_curclass, "$!cstack"
  rx1139_fail2451:
    unless rx1139_bstack, rx1139_done2449
    pop $I19, rx1139_bstack
    if_null rx1139_cstack, rx1139_cstack_done2454
    unless rx1139_cstack, rx1139_cstack_done2454
    dec $I19
    set $P11, rx1139_cstack[$I19]
  rx1139_cstack_done2454:
    pop rx1139_rep, rx1139_bstack
    pop rx1139_pos, rx1139_bstack
    pop $I19, rx1139_bstack
    lt rx1139_pos, -1, rx1139_done2449
    lt rx1139_pos, 0, rx1139_fail2451
    eq $I19, 0, rx1139_fail2451
    nqp_islist $I20, rx1139_cstack
    unless $I20, rx1139_jump2452
    elements $I18, rx1139_bstack
    le $I18, 0, rx1139_cut2453
    dec $I18
    set $I18, rx1139_bstack[$I18]
  rx1139_cut2453:
    assign rx1139_cstack, $I18
  rx1139_jump2452:
    jump $I19
  rx1139_done2449:
    rx1139_cur."!cursor_fail"()
    .return (rx1139_cur) 
.end
.HLL "nqp"
.namespace []
.sub "trait_mod" :subid("cuid_136_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1162
    .param pmc self 
    $P5001 = self."!protoregex"("trait_mod")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "trait_mod:sym<is>" :subid("cuid_137_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1163
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1144_start
    .local string rx1144_tgt
    .local int rx1144_pos
    .local int rx1144_off
    .local int rx1144_eos
    .local int rx1144_rep
    .local pmc rx1144_cur
    .local pmc rx1144_curclass
    .local pmc rx1144_bstack
    .local pmc rx1144_cstack
    rx1144_start = self."!cursor_start_all"()
    set rx1144_cur, rx1144_start[0]
    set rx1144_tgt, rx1144_start[1]
    set rx1144_pos, rx1144_start[2]
    set rx1144_curclass, rx1144_start[3]
    set rx1144_bstack, rx1144_start[4]
    set $I19, rx1144_start[5]
    store_lex unicode:"$\x{a2}", rx1144_cur
    length rx1144_eos, rx1144_tgt
    eq $I19, 1, rx1144_restart2463
    gt rx1144_pos, rx1144_eos, rx1144_fail2464
    repr_get_attr_int $I11, self, rx1144_curclass, "$!from"
    ne $I11, -1, rxscan1145_done2470
    goto rxscan1145_scan2469
  rxscan1145_loop2468:
    inc rx1144_pos
    gt rx1144_pos, rx1144_eos, rx1144_fail2464
    repr_bind_attr_int rx1144_cur, rx1144_curclass, "$!from", rx1144_pos
  rxscan1145_scan2469:
    nqp_rxmark rx1144_bstack, rxscan1145_loop2468, rx1144_pos, 0
  rxscan1145_done2470:
    nqp_rxmark rx1144_bstack, rxcap1146_fail2472, rx1144_pos, 0
    add $I11, rx1144_pos, 2
    gt $I11, rx1144_eos, rx1144_fail2464
    substr $S10, rx1144_tgt, rx1144_pos, 2
    ne $S10, ucs4:"is", rx1144_fail2464
    add rx1144_pos, 2
    nqp_rxpeek $I19, rx1144_bstack, rxcap1146_fail2472
    inc $I19
    set $I11, rx1144_bstack[$I19]
    repr_bind_attr_int rx1144_cur, rx1144_curclass, "$!pos", rx1144_pos
    $P11 = rx1144_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1144_pos)
    rx1144_cstack = rx1144_cur."!cursor_capture"($P11, "sym")
    goto rxcap1146_done2471
  rxcap1146_fail2472:
    goto rx1144_fail2464
  rxcap1146_done2471:
    repr_bind_attr_int rx1144_cur, rx1144_curclass, "$!pos", rx1144_pos
    $P11 = rx1144_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1144_curclass, "$!pos"
    lt $I11, 0, rx1144_fail2464
    repr_get_attr_int rx1144_pos, $P11, rx1144_curclass, "$!pos"
    repr_bind_attr_int rx1144_cur, rx1144_curclass, "$!pos", rx1144_pos
    $P11 = rx1144_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1144_curclass, "$!pos"
    lt $I11, 0, rx1144_fail2464
    nqp_rxmark rx1144_bstack, rxsubrule1148_pass2474, -1, 0
  rxsubrule1148_pass2474:
    rx1144_cstack = rx1144_cur."!cursor_capture"($P11, "longname")
    repr_get_attr_int rx1144_pos, $P11, rx1144_curclass, "$!pos"
    nqp_rxmark rx1144_bstack, rxquantr1149_done2476, rx1144_pos, 0
  rxquantr1149_loop2475:
    repr_bind_attr_int rx1144_cur, rx1144_curclass, "$!pos", rx1144_pos
    $P11 = rx1144_cur."circumfix"()
    repr_get_attr_int $I11, $P11, rx1144_curclass, "$!pos"
    lt $I11, 0, rx1144_fail2464
    goto rxsubrule1150_pass2477
  rxsubrule1150_back2478:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1144_curclass, "$!pos"
    lt $I11, 0, rx1144_fail2464
  rxsubrule1150_pass2477:
    rx1144_cstack = rx1144_cur."!cursor_capture"($P11, "circumfix")
    set_addr $I11, rxsubrule1150_back2478
    push rx1144_bstack, $I11
    push rx1144_bstack, 0
    push rx1144_bstack, rx1144_pos
    elements $I11, rx1144_cstack
    push rx1144_bstack, $I11
    repr_get_attr_int rx1144_pos, $P11, rx1144_curclass, "$!pos"
    nqp_rxpeek $I19, rx1144_bstack, rxquantr1149_done2476
    inc $I19
    inc $I19
    set rx1144_rep, rx1144_bstack[$I19]
    nqp_rxcommit rx1144_bstack, rxquantr1149_done2476
    inc rx1144_rep
  rxquantr1149_done2476:
    repr_bind_attr_int rx1144_cur, rx1144_curclass, "$!pos", rx1144_pos
    $P11 = rx1144_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1144_curclass, "$!pos"
    lt $I11, 0, rx1144_fail2464
    repr_get_attr_int rx1144_pos, $P11, rx1144_curclass, "$!pos"
    rx1144_cur."!cursor_pass"(rx1144_pos, "trait_mod:sym<is>", 'backtrack'=>1)
    .return (rx1144_cur)
  rx1144_restart2463:
    repr_get_attr_obj rx1144_cstack, rx1144_cur, rx1144_curclass, "$!cstack"
  rx1144_fail2464:
    unless rx1144_bstack, rx1144_done2462
    pop $I19, rx1144_bstack
    if_null rx1144_cstack, rx1144_cstack_done2467
    unless rx1144_cstack, rx1144_cstack_done2467
    dec $I19
    set $P11, rx1144_cstack[$I19]
  rx1144_cstack_done2467:
    pop rx1144_rep, rx1144_bstack
    pop rx1144_pos, rx1144_bstack
    pop $I19, rx1144_bstack
    lt rx1144_pos, -1, rx1144_done2462
    lt rx1144_pos, 0, rx1144_fail2464
    eq $I19, 0, rx1144_fail2464
    nqp_islist $I20, rx1144_cstack
    unless $I20, rx1144_jump2465
    elements $I18, rx1144_bstack
    le $I18, 0, rx1144_cut2466
    dec $I18
    set $I18, rx1144_bstack[$I18]
  rx1144_cut2466:
    assign rx1144_cstack, $I18
  rx1144_jump2465:
    jump $I19
  rx1144_done2462:
    rx1144_cur."!cursor_fail"()
    .return (rx1144_cur) 
.end
.HLL "nqp"
.namespace []
.sub "regex_declarator" :subid("cuid_138_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1165
    .param pmc _lex_param_0 
    .const 'Sub' $P5012 = 'cuid_410_1365879995.227' 
    capture_lex $P5012 
    .lex "%*RX", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_147 
    .local pmc pkg_viv_tmp_23 
    new $P5001, 'Hash'
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1152_start
    .local string rx1152_tgt
    .local int rx1152_pos
    .local int rx1152_off
    .local int rx1152_eos
    .local int rx1152_rep
    .local pmc rx1152_cur
    .local pmc rx1152_curclass
    .local pmc rx1152_bstack
    .local pmc rx1152_cstack
    rx1152_start = self."!cursor_start_all"()
    set rx1152_cur, rx1152_start[0]
    set rx1152_tgt, rx1152_start[1]
    set rx1152_pos, rx1152_start[2]
    set rx1152_curclass, rx1152_start[3]
    set rx1152_bstack, rx1152_start[4]
    set $I19, rx1152_start[5]
    store_lex unicode:"$\x{a2}", rx1152_cur
    length rx1152_eos, rx1152_tgt
    eq $I19, 1, rx1152_restart2482
    gt rx1152_pos, rx1152_eos, rx1152_fail2483
    repr_get_attr_int $I11, self, rx1152_curclass, "$!from"
    ne $I11, -1, rxscan1153_done2489
    goto rxscan1153_scan2488
  rxscan1153_loop2487:
    inc rx1152_pos
    gt rx1152_pos, rx1152_eos, rx1152_fail2483
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!from", rx1152_pos
  rxscan1153_scan2488:
    nqp_rxmark rx1152_bstack, rxscan1153_loop2487, rx1152_pos, 0
  rxscan1153_done2489:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1154_02491
    nqp_push_label $P11, alt1154_12531
    nqp_rxmark rx1152_bstack, alt1154_end2490, -1, 0
    rx1152_cur."!alt"(rx1152_pos, "alt_nfa__33_1365879997.972", $P11)
    goto rx1152_fail2483
  alt1154_02491:
    nqp_rxmark rx1152_bstack, rxcap1155_fail2493, rx1152_pos, 0
    add $I11, rx1152_pos, 5
    gt $I11, rx1152_eos, rx1152_fail2483
    substr $S10, rx1152_tgt, rx1152_pos, 5
    ne $S10, ucs4:"proto", rx1152_fail2483
    add rx1152_pos, 5
    nqp_rxpeek $I19, rx1152_bstack, rxcap1155_fail2493
    inc $I19
    set $I11, rx1152_bstack[$I19]
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1152_pos)
    rx1152_cstack = rx1152_cur."!cursor_capture"($P11, "proto")
    goto rxcap1155_done2492
  rxcap1155_fail2493:
    goto rx1152_fail2483
  rxcap1155_done2492:
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1157_02496
    nqp_push_label $P11, alt1157_12497
    nqp_push_label $P11, alt1157_22498
    nqp_rxmark rx1152_bstack, alt1157_end2495, -1, 0
    rx1152_cur."!alt"(rx1152_pos, "alt_nfa__31_1365879997.971", $P11)
    goto rx1152_fail2483
  alt1157_02496:
    add $I11, rx1152_pos, 5
    gt $I11, rx1152_eos, rx1152_fail2483
    substr $S10, rx1152_tgt, rx1152_pos, 5
    ne $S10, ucs4:"regex", rx1152_fail2483
    add rx1152_pos, 5
    goto alt1157_end2495
  alt1157_12497:
    add $I11, rx1152_pos, 5
    gt $I11, rx1152_eos, rx1152_fail2483
    substr $S10, rx1152_tgt, rx1152_pos, 5
    ne $S10, ucs4:"token", rx1152_fail2483
    add rx1152_pos, 5
    goto alt1157_end2495
  alt1157_22498:
    add $I11, rx1152_pos, 4
    gt $I11, rx1152_eos, rx1152_fail2483
    substr $S10, rx1152_tgt, rx1152_pos, 4
    ne $S10, ucs4:"rule", rx1152_fail2483
    add rx1152_pos, 4
    goto alt1157_end2495
  alt1157_end2495:
    nqp_rxcommit rx1152_bstack, alt1157_end2495
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
  alt1159_02501:
    nqp_rxmark rx1152_bstack, alt1159_12507, rx1152_pos, 0
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
    add $I11, rx1152_pos, 3
    gt $I11, rx1152_eos, rx1152_fail2483
    substr $S10, rx1152_tgt, rx1152_pos, 3
    ne $S10, ucs4:"::(", rx1152_fail2483
    add rx1152_pos, 3
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    nqp_rxmark rx1152_bstack, rxsubrule1162_pass2504, -1, 0
  rxsubrule1162_pass2504:
    rx1152_cstack = rx1152_cur."!cursor_capture"($P11, "latename=variable")
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
    add $I11, rx1152_pos, 1
    gt $I11, rx1152_eos, rx1152_fail2483
    substr $S10, rx1152_tgt, rx1152_pos, 1
    ne $S10, ucs4:")", rx1152_fail2483
    add rx1152_pos, 1
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
    goto alt1159_end2500
  alt1159_12507:
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    nqp_rxmark rx1152_bstack, rxsubrule1166_pass2509, -1, 0
  rxsubrule1166_pass2509:
    rx1152_cstack = rx1152_cur."!cursor_capture"($P11, "deflongname")
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
  alt1159_end2500:
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
  alt1169_02513:
    nqp_rxmark rx1152_bstack, alt1169_12516, rx1152_pos, 0
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
    add $I11, rx1152_pos, 3
    gt $I11, rx1152_eos, rx1152_fail2483
    substr $S10, rx1152_tgt, rx1152_pos, 3
    ne $S10, ucs4:"{*}", rx1152_fail2483
    add rx1152_pos, 3
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
    goto alt1169_end2512
  alt1169_12516:
    nqp_rxmark rx1152_bstack, alt1169_22521, rx1152_pos, 0
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
    add $I11, rx1152_pos, 1
    gt $I11, rx1152_eos, rx1152_fail2483
    substr $S10, rx1152_tgt, rx1152_pos, 1
    ne $S10, ucs4:"{", rx1152_fail2483
    add rx1152_pos, 1
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
    add $I11, rx1152_pos, 5
    gt $I11, rx1152_eos, rx1152_fail2483
    substr $S10, rx1152_tgt, rx1152_pos, 5
    ne $S10, ucs4:"<...>", rx1152_fail2483
    add rx1152_pos, 5
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
    add $I11, rx1152_pos, 1
    gt $I11, rx1152_eos, rx1152_fail2483
    substr $S10, rx1152_tgt, rx1152_pos, 1
    ne $S10, ucs4:"}", rx1152_fail2483
    add rx1152_pos, 1
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
    goto alt1169_end2512
  alt1169_22521:
    nqp_rxmark rx1152_bstack, alt1169_32526, rx1152_pos, 0
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
    add $I11, rx1152_pos, 1
    gt $I11, rx1152_eos, rx1152_fail2483
    substr $S10, rx1152_tgt, rx1152_pos, 1
    ne $S10, ucs4:"{", rx1152_fail2483
    add rx1152_pos, 1
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
    add $I11, rx1152_pos, 3
    gt $I11, rx1152_eos, rx1152_fail2483
    substr $S10, rx1152_tgt, rx1152_pos, 3
    ne $S10, ucs4:"<*>", rx1152_fail2483
    add rx1152_pos, 3
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
    add $I11, rx1152_pos, 1
    gt $I11, rx1152_eos, rx1152_fail2483
    substr $S10, rx1152_tgt, rx1152_pos, 1
    ne $S10, ucs4:"}", rx1152_fail2483
    add rx1152_pos, 1
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
    goto alt1169_end2512
  alt1169_32526:
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."panic"("Proto regex body must be \\{*\\} (or <*> or <...>, which are deprecated)")
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
  alt1169_end2512:
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
    goto alt1154_end2490
  alt1154_12531:
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
    nqp_rxmark rx1152_bstack, rxcap1185_fail2534, rx1152_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1186_02536
    nqp_push_label $P11, alt1186_12537
    nqp_push_label $P11, alt1186_22538
    nqp_rxmark rx1152_bstack, alt1186_end2535, -1, 0
    rx1152_cur."!alt"(rx1152_pos, "alt_nfa__32_1365879997.972", $P11)
    goto rx1152_fail2483
  alt1186_02536:
    add $I11, rx1152_pos, 5
    gt $I11, rx1152_eos, rx1152_fail2483
    substr $S10, rx1152_tgt, rx1152_pos, 5
    ne $S10, ucs4:"regex", rx1152_fail2483
    add rx1152_pos, 5
    goto alt1186_end2535
  alt1186_12537:
    add $I11, rx1152_pos, 5
    gt $I11, rx1152_eos, rx1152_fail2483
    substr $S10, rx1152_tgt, rx1152_pos, 5
    ne $S10, ucs4:"token", rx1152_fail2483
    add rx1152_pos, 5
    goto alt1186_end2535
  alt1186_22538:
    add $I11, rx1152_pos, 4
    gt $I11, rx1152_eos, rx1152_fail2483
    substr $S10, rx1152_tgt, rx1152_pos, 4
    ne $S10, ucs4:"rule", rx1152_fail2483
    add rx1152_pos, 4
    goto alt1186_end2535
  alt1186_end2535:
    nqp_rxcommit rx1152_bstack, alt1186_end2535
    nqp_rxpeek $I19, rx1152_bstack, rxcap1185_fail2534
    inc $I19
    set $I11, rx1152_bstack[$I19]
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1152_pos)
    rx1152_cstack = rx1152_cur."!cursor_capture"($P11, "sym")
    goto rxcap1185_done2533
  rxcap1185_fail2534:
    goto rx1152_fail2483
  rxcap1185_done2533:
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
  alt1189_02542:
    nqp_rxmark rx1152_bstack, alt1189_12548, rx1152_pos, 0
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
    add $I11, rx1152_pos, 3
    gt $I11, rx1152_eos, rx1152_fail2483
    substr $S10, rx1152_tgt, rx1152_pos, 3
    ne $S10, ucs4:"::(", rx1152_fail2483
    add rx1152_pos, 3
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    nqp_rxmark rx1152_bstack, rxsubrule1192_pass2545, -1, 0
  rxsubrule1192_pass2545:
    rx1152_cstack = rx1152_cur."!cursor_capture"($P11, "latename=variable")
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
    add $I11, rx1152_pos, 1
    gt $I11, rx1152_eos, rx1152_fail2483
    substr $S10, rx1152_tgt, rx1152_pos, 1
    ne $S10, ucs4:")", rx1152_fail2483
    add rx1152_pos, 1
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
    goto alt1189_end2541
  alt1189_12548:
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    nqp_rxmark rx1152_bstack, rxsubrule1196_pass2550, -1, 0
  rxsubrule1196_pass2550:
    rx1152_cstack = rx1152_cur."!cursor_capture"($P11, "deflongname")
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
  alt1189_end2541:
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
    nqp_rxmark rx1152_bstack, rxquantr1201_done2556, rx1152_pos, 0
  rxquantr1201_loop2555:
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
    add $I11, rx1152_pos, 1
    gt $I11, rx1152_eos, rx1152_fail2483
    substr $S10, rx1152_tgt, rx1152_pos, 1
    ne $S10, ucs4:"(", rx1152_fail2483
    add rx1152_pos, 1
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."signature"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    nqp_rxmark rx1152_bstack, rxsubrule1204_pass2559, -1, 0
  rxsubrule1204_pass2559:
    rx1152_cstack = rx1152_cur."!cursor_capture"($P11, "signature")
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
    add $I11, rx1152_pos, 1
    gt $I11, rx1152_eos, rx1152_fail2483
    substr $S10, rx1152_tgt, rx1152_pos, 1
    ne $S10, ucs4:")", rx1152_fail2483
    add rx1152_pos, 1
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
    nqp_rxpeek $I19, rx1152_bstack, rxquantr1201_done2556
    inc $I19
    inc $I19
    set rx1152_rep, rx1152_bstack[$I19]
    nqp_rxcommit rx1152_bstack, rxquantr1201_done2556
    inc rx1152_rep
  rxquantr1201_done2556:
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    store_lex unicode:"$\x{a2}", rx1152_cur
    unless_null $P101, fallback2563
    nqp_get_sc_object $P5003, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_23, $P5002
    set fb_tmp_147, pkg_viv_tmp_23
    repr_defined $I5001, fb_tmp_147
    unless $I5001 goto if1208_else2564 
    set $P5004, fb_tmp_147["%RX"]
    set $P5006, $P5004
    goto if1208_end2565
  if1208_else2564:
    null $P5005
    set $P5006, $P5005
  if1208_end2565:
    unless_null $P5006, vivi_12092566
    new $P5007, 'Hash'
    set pkg_viv_tmp_23["%RX"], $P5007
    set $P5006, $P5007
  vivi_12092566:
    unless_null $P5006, vivi_12102567
    die "Contextual %*RX not found"
    box $P5008, "Contextual %*RX not found"
    set $P5006, $P5008
  vivi_12102567:
    set $P101, $P5006
  fallback2563:
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    store_lex unicode:"$\x{a2}", rx1152_cur
    $P5009 = $P102."MATCH"()
    set $P103, $P5009
    .const 'Sub' $P5010 = 'cuid_410_1365879995.227' 
    capture_lex $P5010
    $P5011 = $P5010()
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
    add $I11, rx1152_pos, 1
    gt $I11, rx1152_eos, rx1152_fail2483
    substr $S10, rx1152_tgt, rx1152_pos, 1
    ne $S10, ucs4:"{", rx1152_fail2483
    add rx1152_pos, 1
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."LANG"("Regex", "nibbler")
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    nqp_rxmark rx1152_bstack, rxsubrule1250_pass2636, -1, 0
  rxsubrule1250_pass2636:
    rx1152_cstack = rx1152_cur."!cursor_capture"($P11, "p6regex")
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
    add $I11, rx1152_pos, 1
    gt $I11, rx1152_eos, rx1152_fail2483
    substr $S10, rx1152_tgt, rx1152_pos, 1
    ne $S10, ucs4:"}", rx1152_fail2483
    add rx1152_pos, 1
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    repr_bind_attr_int rx1152_cur, rx1152_curclass, "$!pos", rx1152_pos
    $P11 = rx1152_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1152_curclass, "$!pos"
    lt $I11, 0, rx1152_fail2483
    repr_get_attr_int rx1152_pos, $P11, rx1152_curclass, "$!pos"
    goto alt1154_end2490
  alt1154_end2490:
    nqp_rxcommit rx1152_bstack, alt1154_end2490
    rx1152_cur."!cursor_pass"(rx1152_pos, "regex_declarator", 'backtrack'=>1)
    .return (rx1152_cur)
  rx1152_restart2482:
    repr_get_attr_obj rx1152_cstack, rx1152_cur, rx1152_curclass, "$!cstack"
  rx1152_fail2483:
    unless rx1152_bstack, rx1152_done2481
    pop $I19, rx1152_bstack
    if_null rx1152_cstack, rx1152_cstack_done2486
    unless rx1152_cstack, rx1152_cstack_done2486
    dec $I19
    set $P11, rx1152_cstack[$I19]
  rx1152_cstack_done2486:
    pop rx1152_rep, rx1152_bstack
    pop rx1152_pos, rx1152_bstack
    pop $I19, rx1152_bstack
    lt rx1152_pos, -1, rx1152_done2481
    lt rx1152_pos, 0, rx1152_fail2483
    eq $I19, 0, rx1152_fail2483
    nqp_islist $I20, rx1152_cstack
    unless $I20, rx1152_jump2484
    elements $I18, rx1152_bstack
    le $I18, 0, rx1152_cut2485
    dec $I18
    set $I18, rx1152_bstack[$I18]
  rx1152_cut2485:
    assign rx1152_cstack, $I18
  rx1152_jump2484:
    jump $I19
  rx1152_done2481:
    rx1152_cur."!cursor_fail"()
    .return (rx1152_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_410_1365879995.227") :anon :lex :outer("cuid_138_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1186
    .local pmc fb_tmp_148 
    .local pmc pkg_viv_tmp_24 
    .local pmc fb_tmp_149 
    .local pmc fb_tmp_150 
    .local pmc pkg_viv_tmp_25 
    .local pmc fb_tmp_151 
    .local pmc fb_tmp_152 
    .local pmc fb_tmp_153 
    .local pmc pkg_viv_tmp_26 
    .local pmc fb_tmp_154 
    .local pmc fb_tmp_155 
    .local pmc fb_tmp_156 
    .local pmc fb_tmp_157 
    .local pmc pkg_viv_tmp_27 
    .local pmc fb_tmp_158 
    .local pmc fb_tmp_159 
    .local pmc fb_tmp_160 
    .local pmc fb_tmp_161 
    .local pmc pkg_viv_tmp_28 
    find_dynamic_lex $P5001, "%*RX"
    unless_null $P5001, fallback2569
    nqp_get_sc_object $P5003, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_24, $P5002
    set fb_tmp_148, pkg_viv_tmp_24
    repr_defined $I5001, fb_tmp_148
    unless $I5001 goto if1212_else2570 
    set $P5004, fb_tmp_148["%RX"]
    set $P5006, $P5004
    goto if1212_end2571
  if1212_else2570:
    null $P5005
    set $P5006, $P5005
  if1212_end2571:
    unless_null $P5006, vivi_12132572
    new $P5007, 'Hash'
    set pkg_viv_tmp_24["%RX"], $P5007
    set $P5006, $P5007
  vivi_12132572:
    unless_null $P5006, vivi_12142573
    die "Contextual %*RX not found"
    box $P5008, "Contextual %*RX not found"
    set $P5006, $P5008
  vivi_12142573:
    set $P5001, $P5006
  fallback2569:
    find_lex $P5009, "$/"
    unless_null $P5009, fallback2576
    nqp_get_sc_object $P5010, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5009, $P5010
  fallback2576:
    set fb_tmp_149, $P5009
    repr_defined $I5003, fb_tmp_149
    unless $I5003 goto if1215_else2574 
    set $P5011, fb_tmp_149["sym"]
    set $P5013, $P5011
    goto if1215_end2575
  if1215_else2574:
    null $P5012
    set $P5013, $P5012
  if1215_end2575:
    unless_null $P5013, vivi_12162577
    nqp_get_sc_object $P5014, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5013, $P5014
  vivi_12162577:
    set $S5001, $P5013
    iseq $I5002, $S5001, "rule"
    box $P5015, $I5002
    set $P5001["s"], $P5015
    find_dynamic_lex $P5016, "%*RX"
    unless_null $P5016, fallback2578
    nqp_get_sc_object $P5018, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5017, $P5018
    set pkg_viv_tmp_25, $P5017
    set fb_tmp_150, pkg_viv_tmp_25
    repr_defined $I5004, fb_tmp_150
    unless $I5004 goto if1217_else2579 
    set $P5019, fb_tmp_150["%RX"]
    set $P5021, $P5019
    goto if1217_end2580
  if1217_else2579:
    null $P5020
    set $P5021, $P5020
  if1217_end2580:
    unless_null $P5021, vivi_12182581
    new $P5022, 'Hash'
    set pkg_viv_tmp_25["%RX"], $P5022
    set $P5021, $P5022
  vivi_12182581:
    unless_null $P5021, vivi_12192582
    die "Contextual %*RX not found"
    box $P5023, "Contextual %*RX not found"
    set $P5021, $P5023
  vivi_12192582:
    set $P5016, $P5021
  fallback2578:
    find_lex $P5024, "$/"
    unless_null $P5024, fallback2587
    nqp_get_sc_object $P5025, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5024, $P5025
  fallback2587:
    set fb_tmp_151, $P5024
    repr_defined $I5006, fb_tmp_151
    unless $I5006 goto if1221_else2585 
    set $P5026, fb_tmp_151["sym"]
    set $P5028, $P5026
    goto if1221_end2586
  if1221_else2585:
    null $P5027
    set $P5028, $P5027
  if1221_end2586:
    unless_null $P5028, vivi_12222588
    nqp_get_sc_object $P5029, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5028, $P5029
  vivi_12222588:
    set $S5002, $P5028
    iseq $I5005, $S5002, "token"
    set $I5009, $I5005
    if $I5005 goto unless1220_end2584 
    find_lex $P5030, "$/"
    unless_null $P5030, fallback2591
    nqp_get_sc_object $P5031, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5030, $P5031
  fallback2591:
    set fb_tmp_152, $P5030
    repr_defined $I5008, fb_tmp_152
    unless $I5008 goto if1223_else2589 
    set $P5032, fb_tmp_152["sym"]
    set $P5034, $P5032
    goto if1223_end2590
  if1223_else2589:
    null $P5033
    set $P5034, $P5033
  if1223_end2590:
    unless_null $P5034, vivi_12242592
    nqp_get_sc_object $P5035, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5034, $P5035
  vivi_12242592:
    set $S5003, $P5034
    iseq $I5007, $S5003, "rule"
    set $I5009, $I5007
  unless1220_end2584:
    box $P5036, $I5009
    set $P5016["r"], $P5036
    find_dynamic_lex $P5037, "%*RX"
    unless_null $P5037, fallback2593
    nqp_get_sc_object $P5039, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5038, $P5039
    set pkg_viv_tmp_26, $P5038
    set fb_tmp_153, pkg_viv_tmp_26
    repr_defined $I5010, fb_tmp_153
    unless $I5010 goto if1225_else2594 
    set $P5040, fb_tmp_153["%RX"]
    set $P5042, $P5040
    goto if1225_end2595
  if1225_else2594:
    null $P5041
    set $P5042, $P5041
  if1225_end2595:
    unless_null $P5042, vivi_12262596
    new $P5043, 'Hash'
    set pkg_viv_tmp_26["%RX"], $P5043
    set $P5042, $P5043
  vivi_12262596:
    unless_null $P5042, vivi_12272597
    die "Contextual %*RX not found"
    box $P5044, "Contextual %*RX not found"
    set $P5042, $P5044
  vivi_12272597:
    set $P5037, $P5042
  fallback2593:
    find_lex $P5045, "$/"
    unless_null $P5045, fallback2602
    nqp_get_sc_object $P5046, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5045, $P5046
  fallback2602:
    set fb_tmp_154, $P5045
    repr_defined $I5011, fb_tmp_154
    unless $I5011 goto if1229_else2600 
    set $P5047, fb_tmp_154["deflongname"]
    set $P5049, $P5047
    goto if1229_end2601
  if1229_else2600:
    null $P5048
    set $P5049, $P5048
  if1229_end2601:
    unless_null $P5049, vivi_12302603
    nqp_get_sc_object $P5050, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5049, $P5050
  vivi_12302603:
    unless $P5049 goto if1228_else2598 
.annotate 'line', 1189
    find_lex $P5051, "$/"
    unless_null $P5051, fallback2606
    nqp_get_sc_object $P5052, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5051, $P5052
  fallback2606:
    set fb_tmp_155, $P5051
    repr_defined $I5012, fb_tmp_155
    unless $I5012 goto if1231_else2604 
    set $P5053, fb_tmp_155["deflongname"]
    set $P5055, $P5053
    goto if1231_end2605
  if1231_else2604:
    null $P5054
    set $P5055, $P5054
  if1231_end2605:
    unless_null $P5055, vivi_12322607
    nqp_get_sc_object $P5056, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5055, $P5056
  vivi_12322607:
    $P5057 = $P5055."ast"()
    set $P5064, $P5057
    goto if1228_end2599
  if1228_else2598:
    find_lex $P5058, "$/"
    unless_null $P5058, fallback2610
    nqp_get_sc_object $P5059, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5058, $P5059
  fallback2610:
    set fb_tmp_156, $P5058
    repr_defined $I5013, fb_tmp_156
    unless $I5013 goto if1233_else2608 
    set $P5060, fb_tmp_156["latename"]
    set $P5062, $P5060
    goto if1233_end2609
  if1233_else2608:
    null $P5061
    set $P5062, $P5061
  if1233_end2609:
    unless_null $P5062, vivi_12342611
    nqp_get_sc_object $P5063, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5062, $P5063
  vivi_12342611:
    set $S5005, $P5062
    concat $S5004, "!!LATENAME!!", $S5005
    box $P5065, $S5004
    set $P5064, $P5065
  if1228_end2599:
    set $P5037["name"], $P5064
    find_dynamic_lex $P5066, "%*RX"
    unless_null $P5066, fallback2612
    nqp_get_sc_object $P5068, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5067, $P5068
    set pkg_viv_tmp_27, $P5067
    set fb_tmp_157, pkg_viv_tmp_27
    repr_defined $I5014, fb_tmp_157
    unless $I5014 goto if1235_else2613 
    set $P5069, fb_tmp_157["%RX"]
    set $P5071, $P5069
    goto if1235_end2614
  if1235_else2613:
    null $P5070
    set $P5071, $P5070
  if1235_end2614:
    unless_null $P5071, vivi_12362615
    new $P5072, 'Hash'
    set pkg_viv_tmp_27["%RX"], $P5072
    set $P5071, $P5072
  vivi_12362615:
    unless_null $P5071, vivi_12372616
    die "Contextual %*RX not found"
    box $P5073, "Contextual %*RX not found"
    set $P5071, $P5073
  vivi_12372616:
    set $P5066, $P5071
  fallback2612:
.annotate 'line', 1190
    find_dynamic_lex $P5074, "$*W"
    unless_null $P5074, fallback2617
    nqp_get_sc_object $P5076, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5075, $P5076
    set fb_tmp_158, $P5075
    repr_defined $I5015, fb_tmp_158
    unless $I5015 goto if1238_else2618 
    set $P5077, fb_tmp_158["$W"]
    set $P5079, $P5077
    goto if1238_end2619
  if1238_else2618:
    null $P5078
    set $P5079, $P5078
  if1238_end2619:
    unless_null $P5079, vivi_12392620
    nqp_get_sc_object $P5080, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5079, $P5080
  vivi_12392620:
    unless_null $P5079, vivi_12402621
    die "Contextual $*W not found"
    box $P5081, "Contextual $*W not found"
    set $P5079, $P5081
  vivi_12402621:
    set $P5074, $P5079
  fallback2617:
    find_dynamic_lex $P5082, "$*W"
    unless_null $P5082, fallback2622
    nqp_get_sc_object $P5084, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5083, $P5084
    set fb_tmp_159, $P5083
    repr_defined $I5016, fb_tmp_159
    unless $I5016 goto if1241_else2623 
    set $P5085, fb_tmp_159["$W"]
    set $P5087, $P5085
    goto if1241_end2624
  if1241_else2623:
    null $P5086
    set $P5087, $P5086
  if1241_end2624:
    unless_null $P5087, vivi_12422625
    nqp_get_sc_object $P5088, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5087, $P5088
  vivi_12422625:
    unless_null $P5087, vivi_12432626
    die "Contextual $*W not found"
    box $P5089, "Contextual $*W not found"
    set $P5087, $P5089
  vivi_12432626:
    set $P5082, $P5087
  fallback2622:
    $P5090 = $P5082."cur_lexpad"()
    find_dynamic_lex $P5091, "%*RX"
    unless_null $P5091, fallback2629
    nqp_get_sc_object $P5093, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5092, $P5093
    set pkg_viv_tmp_28, $P5092
    set fb_tmp_161, pkg_viv_tmp_28
    repr_defined $I5018, fb_tmp_161
    unless $I5018 goto if1245_else2630 
    set $P5094, fb_tmp_161["%RX"]
    set $P5096, $P5094
    goto if1245_end2631
  if1245_else2630:
    null $P5095
    set $P5096, $P5095
  if1245_end2631:
    unless_null $P5096, vivi_12462632
    new $P5097, 'Hash'
    set pkg_viv_tmp_28["%RX"], $P5097
    set $P5096, $P5097
  vivi_12462632:
    unless_null $P5096, vivi_12472633
    die "Contextual %*RX not found"
    box $P5098, "Contextual %*RX not found"
    set $P5096, $P5098
  vivi_12472633:
    set $P5091, $P5096
  fallback2629:
    set fb_tmp_160, $P5091
    repr_defined $I5017, fb_tmp_160
    unless $I5017 goto if1244_else2627 
    set $P5099, fb_tmp_160["name"]
    set $P5101, $P5099
    goto if1244_end2628
  if1244_else2627:
    null $P5100
    set $P5101, $P5100
  if1244_end2628:
    unless_null $P5101, vivi_12482634
    nqp_get_sc_object $P5102, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5101, $P5102
  vivi_12482634:
    $P5103 = $P5074."create_code"($P5090, $P5101, 0, "NQPRegex" :named("code_type_name"))
    set $P5066["code"], $P5103
    .return ($P5103) 
.end
.HLL "nqp"
.namespace []
.sub "dotty" :subid("cuid_139_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1196
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1252_start
    .local string rx1252_tgt
    .local int rx1252_pos
    .local int rx1252_off
    .local int rx1252_eos
    .local int rx1252_rep
    .local pmc rx1252_cur
    .local pmc rx1252_curclass
    .local pmc rx1252_bstack
    .local pmc rx1252_cstack
    rx1252_start = self."!cursor_start_all"()
    set rx1252_cur, rx1252_start[0]
    set rx1252_tgt, rx1252_start[1]
    set rx1252_pos, rx1252_start[2]
    set rx1252_curclass, rx1252_start[3]
    set rx1252_bstack, rx1252_start[4]
    set $I19, rx1252_start[5]
    store_lex unicode:"$\x{a2}", rx1252_cur
    length rx1252_eos, rx1252_tgt
    eq $I19, 1, rx1252_restart2640
    gt rx1252_pos, rx1252_eos, rx1252_fail2641
    repr_get_attr_int $I11, self, rx1252_curclass, "$!from"
    ne $I11, -1, rxscan1253_done2647
    goto rxscan1253_scan2646
  rxscan1253_loop2645:
    inc rx1252_pos
    gt rx1252_pos, rx1252_eos, rx1252_fail2641
    repr_bind_attr_int rx1252_cur, rx1252_curclass, "$!from", rx1252_pos
  rxscan1253_scan2646:
    nqp_rxmark rx1252_bstack, rxscan1253_loop2645, rx1252_pos, 0
  rxscan1253_done2647:
    add $I11, rx1252_pos, 1
    gt $I11, rx1252_eos, rx1252_fail2641
    substr $S10, rx1252_tgt, rx1252_pos, 1
    ne $S10, ucs4:".", rx1252_fail2641
    add rx1252_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1254_02649
    nqp_push_label $P11, alt1254_12651
    nqp_rxmark rx1252_bstack, alt1254_end2648, -1, 0
    rx1252_cur."!alt"(rx1252_pos, "alt_nfa__34_1365879997.998", $P11)
    goto rx1252_fail2641
  alt1254_02649:
    repr_bind_attr_int rx1252_cur, rx1252_curclass, "$!pos", rx1252_pos
    $P11 = rx1252_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1252_curclass, "$!pos"
    lt $I11, 0, rx1252_fail2641
    nqp_rxmark rx1252_bstack, rxsubrule1255_pass2650, -1, 0
  rxsubrule1255_pass2650:
    rx1252_cstack = rx1252_cur."!cursor_capture"($P11, "longname=deflongname")
    repr_get_attr_int rx1252_pos, $P11, rx1252_curclass, "$!pos"
    goto alt1254_end2648
  alt1254_12651:
    ge rx1252_pos, rx1252_eos, rx1252_fail2641
    substr $S11, rx1252_tgt, rx1252_pos, 1
    index $I11, ucs4:"'\"", $S11
    lt $I11, 0, rx1252_fail2641
    repr_bind_attr_int rx1252_cur, rx1252_curclass, "$!pos", rx1252_pos
    $P11 = rx1252_cur."quote"()
    repr_get_attr_int $I11, $P11, rx1252_curclass, "$!pos"
    lt $I11, 0, rx1252_fail2641
    nqp_rxmark rx1252_bstack, rxsubrule1256_pass2652, -1, 0
  rxsubrule1256_pass2652:
    rx1252_cstack = rx1252_cur."!cursor_capture"($P11, "quote")
    repr_get_attr_int rx1252_pos, $P11, rx1252_curclass, "$!pos"
  alt1257_02654:
    nqp_rxmark rx1252_bstack, alt1257_12655, rx1252_pos, 0
    ge rx1252_pos, rx1252_eos, rx1252_fail2641
    substr $S11, rx1252_tgt, rx1252_pos, 1
    index $I11, ucs4:"(", $S11
    lt $I11, 0, rx1252_fail2641
    goto alt1257_end2653
  alt1257_12655:
    repr_bind_attr_int rx1252_cur, rx1252_curclass, "$!pos", rx1252_pos
    $P11 = rx1252_cur."panic"("Quoted method name requires parenthesized arguments")
    repr_get_attr_int $I11, $P11, rx1252_curclass, "$!pos"
    lt $I11, 0, rx1252_fail2641
    repr_get_attr_int rx1252_pos, $P11, rx1252_curclass, "$!pos"
  alt1257_end2653:
    goto alt1254_end2648
  alt1254_end2648:
    nqp_rxcommit rx1252_bstack, alt1254_end2648
    nqp_rxmark rx1252_bstack, rxquantr1259_done2658, rx1252_pos, 0
  rxquantr1259_loop2657:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1260_02660
    nqp_push_label $P11, alt1260_12662
    nqp_rxmark rx1252_bstack, alt1260_end2659, -1, 0
    rx1252_cur."!alt"(rx1252_pos, "alt_nfa__35_1365879997.999", $P11)
    goto rx1252_fail2641
  alt1260_02660:
    ge rx1252_pos, rx1252_eos, rx1252_fail2641
    substr $S11, rx1252_tgt, rx1252_pos, 1
    index $I11, ucs4:"(", $S11
    lt $I11, 0, rx1252_fail2641
    repr_bind_attr_int rx1252_cur, rx1252_curclass, "$!pos", rx1252_pos
    $P11 = rx1252_cur."args"()
    repr_get_attr_int $I11, $P11, rx1252_curclass, "$!pos"
    lt $I11, 0, rx1252_fail2641
    nqp_rxmark rx1252_bstack, rxsubrule1261_pass2661, -1, 0
  rxsubrule1261_pass2661:
    rx1252_cstack = rx1252_cur."!cursor_capture"($P11, "args")
    repr_get_attr_int rx1252_pos, $P11, rx1252_curclass, "$!pos"
    goto alt1260_end2659
  alt1260_12662:
    add $I11, rx1252_pos, 1
    gt $I11, rx1252_eos, rx1252_fail2641
    substr $S10, rx1252_tgt, rx1252_pos, 1
    ne $S10, ucs4:":", rx1252_fail2641
    add rx1252_pos, 1
    ge rx1252_pos, rx1252_eos, rx1252_fail2641
    is_cclass $I11, .CCLASS_WHITESPACE, rx1252_tgt, rx1252_pos
    unless $I11, rx1252_fail2641
    add rx1252_pos, 1
    repr_bind_attr_int rx1252_cur, rx1252_curclass, "$!pos", rx1252_pos
    $P11 = rx1252_cur."arglist"()
    repr_get_attr_int $I11, $P11, rx1252_curclass, "$!pos"
    lt $I11, 0, rx1252_fail2641
    nqp_rxmark rx1252_bstack, rxsubrule1262_pass2663, -1, 0
  rxsubrule1262_pass2663:
    rx1252_cstack = rx1252_cur."!cursor_capture"($P11, "args")
    repr_get_attr_int rx1252_pos, $P11, rx1252_curclass, "$!pos"
    goto alt1260_end2659
  alt1260_end2659:
    nqp_rxpeek $I19, rx1252_bstack, rxquantr1259_done2658
    inc $I19
    inc $I19
    set rx1252_rep, rx1252_bstack[$I19]
    nqp_rxcommit rx1252_bstack, rxquantr1259_done2658
    inc rx1252_rep
  rxquantr1259_done2658:
    rx1252_cur."!cursor_pass"(rx1252_pos, "dotty", 'backtrack'=>1)
    .return (rx1252_cur)
  rx1252_restart2640:
    repr_get_attr_obj rx1252_cstack, rx1252_cur, rx1252_curclass, "$!cstack"
  rx1252_fail2641:
    unless rx1252_bstack, rx1252_done2639
    pop $I19, rx1252_bstack
    if_null rx1252_cstack, rx1252_cstack_done2644
    unless rx1252_cstack, rx1252_cstack_done2644
    dec $I19
    set $P11, rx1252_cstack[$I19]
  rx1252_cstack_done2644:
    pop rx1252_rep, rx1252_bstack
    pop rx1252_pos, rx1252_bstack
    pop $I19, rx1252_bstack
    lt rx1252_pos, -1, rx1252_done2639
    lt rx1252_pos, 0, rx1252_fail2641
    eq $I19, 0, rx1252_fail2641
    nqp_islist $I20, rx1252_cstack
    unless $I20, rx1252_jump2642
    elements $I18, rx1252_bstack
    le $I18, 0, rx1252_cut2643
    dec $I18
    set $I18, rx1252_bstack[$I18]
  rx1252_cut2643:
    assign rx1252_cstack, $I18
  rx1252_jump2642:
    jump $I19
  rx1252_done2639:
    rx1252_cur."!cursor_fail"()
    .return (rx1252_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<self>" :subid("cuid_140_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1209
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1263_start
    .local string rx1263_tgt
    .local int rx1263_pos
    .local int rx1263_off
    .local int rx1263_eos
    .local int rx1263_rep
    .local pmc rx1263_cur
    .local pmc rx1263_curclass
    .local pmc rx1263_bstack
    .local pmc rx1263_cstack
    rx1263_start = self."!cursor_start_all"()
    set rx1263_cur, rx1263_start[0]
    set rx1263_tgt, rx1263_start[1]
    set rx1263_pos, rx1263_start[2]
    set rx1263_curclass, rx1263_start[3]
    set rx1263_bstack, rx1263_start[4]
    set $I19, rx1263_start[5]
    store_lex unicode:"$\x{a2}", rx1263_cur
    length rx1263_eos, rx1263_tgt
    eq $I19, 1, rx1263_restart2666
    gt rx1263_pos, rx1263_eos, rx1263_fail2667
    repr_get_attr_int $I11, self, rx1263_curclass, "$!from"
    ne $I11, -1, rxscan1264_done2673
    goto rxscan1264_scan2672
  rxscan1264_loop2671:
    inc rx1263_pos
    gt rx1263_pos, rx1263_eos, rx1263_fail2667
    repr_bind_attr_int rx1263_cur, rx1263_curclass, "$!from", rx1263_pos
  rxscan1264_scan2672:
    nqp_rxmark rx1263_bstack, rxscan1264_loop2671, rx1263_pos, 0
  rxscan1264_done2673:
    nqp_rxmark rx1263_bstack, rxcap1265_fail2675, rx1263_pos, 0
    add $I11, rx1263_pos, 4
    gt $I11, rx1263_eos, rx1263_fail2667
    substr $S10, rx1263_tgt, rx1263_pos, 4
    ne $S10, ucs4:"self", rx1263_fail2667
    add rx1263_pos, 4
    nqp_rxpeek $I19, rx1263_bstack, rxcap1265_fail2675
    inc $I19
    set $I11, rx1263_bstack[$I19]
    repr_bind_attr_int rx1263_cur, rx1263_curclass, "$!pos", rx1263_pos
    $P11 = rx1263_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1263_pos)
    rx1263_cstack = rx1263_cur."!cursor_capture"($P11, "sym")
    goto rxcap1265_done2674
  rxcap1265_fail2675:
    goto rx1263_fail2667
  rxcap1265_done2674:
    le rx1263_pos, 0, rx1263_fail2667
    is_cclass $I11, .CCLASS_WORD, rx1263_tgt, rx1263_pos
    if $I11, rx1263_fail2667
    sub $I11, rx1263_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx1263_tgt, $I11
    unless $I11, rx1263_fail2667
    rx1263_cur."!cursor_pass"(rx1263_pos, "term:sym<self>", 'backtrack'=>1)
    .return (rx1263_cur)
  rx1263_restart2666:
    repr_get_attr_obj rx1263_cstack, rx1263_cur, rx1263_curclass, "$!cstack"
  rx1263_fail2667:
    unless rx1263_bstack, rx1263_done2665
    pop $I19, rx1263_bstack
    if_null rx1263_cstack, rx1263_cstack_done2670
    unless rx1263_cstack, rx1263_cstack_done2670
    dec $I19
    set $P11, rx1263_cstack[$I19]
  rx1263_cstack_done2670:
    pop rx1263_rep, rx1263_bstack
    pop rx1263_pos, rx1263_bstack
    pop $I19, rx1263_bstack
    lt rx1263_pos, -1, rx1263_done2665
    lt rx1263_pos, 0, rx1263_fail2667
    eq $I19, 0, rx1263_fail2667
    nqp_islist $I20, rx1263_cstack
    unless $I20, rx1263_jump2668
    elements $I18, rx1263_bstack
    le $I18, 0, rx1263_cut2669
    dec $I18
    set $I18, rx1263_bstack[$I18]
  rx1263_cut2669:
    assign rx1263_cstack, $I18
  rx1263_jump2668:
    jump $I19
  rx1263_done2665:
    rx1263_cur."!cursor_fail"()
    .return (rx1263_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<identifier>" :subid("cuid_141_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1211
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1267_start
    .local string rx1267_tgt
    .local int rx1267_pos
    .local int rx1267_off
    .local int rx1267_eos
    .local int rx1267_rep
    .local pmc rx1267_cur
    .local pmc rx1267_curclass
    .local pmc rx1267_bstack
    .local pmc rx1267_cstack
    rx1267_start = self."!cursor_start_all"()
    set rx1267_cur, rx1267_start[0]
    set rx1267_tgt, rx1267_start[1]
    set rx1267_pos, rx1267_start[2]
    set rx1267_curclass, rx1267_start[3]
    set rx1267_bstack, rx1267_start[4]
    set $I19, rx1267_start[5]
    store_lex unicode:"$\x{a2}", rx1267_cur
    length rx1267_eos, rx1267_tgt
    eq $I19, 1, rx1267_restart2679
    gt rx1267_pos, rx1267_eos, rx1267_fail2680
    repr_get_attr_int $I11, self, rx1267_curclass, "$!from"
    ne $I11, -1, rxscan1268_done2686
    goto rxscan1268_scan2685
  rxscan1268_loop2684:
    inc rx1267_pos
    gt rx1267_pos, rx1267_eos, rx1267_fail2680
    repr_bind_attr_int rx1267_cur, rx1267_curclass, "$!from", rx1267_pos
  rxscan1268_scan2685:
    nqp_rxmark rx1267_bstack, rxscan1268_loop2684, rx1267_pos, 0
  rxscan1268_done2686:
    repr_bind_attr_int rx1267_cur, rx1267_curclass, "$!pos", rx1267_pos
    $P11 = rx1267_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1267_curclass, "$!pos"
    lt $I11, 0, rx1267_fail2680
    nqp_rxmark rx1267_bstack, rxsubrule1269_pass2687, -1, 0
  rxsubrule1269_pass2687:
    rx1267_cstack = rx1267_cur."!cursor_capture"($P11, "deflongname")
    repr_get_attr_int rx1267_pos, $P11, rx1267_curclass, "$!pos"
    ge rx1267_pos, rx1267_eos, rx1267_fail2680
    substr $S11, rx1267_tgt, rx1267_pos, 1
    index $I11, ucs4:"(", $S11
    lt $I11, 0, rx1267_fail2680
    repr_bind_attr_int rx1267_cur, rx1267_curclass, "$!pos", rx1267_pos
    $P11 = rx1267_cur."args"()
    repr_get_attr_int $I11, $P11, rx1267_curclass, "$!pos"
    lt $I11, 0, rx1267_fail2680
    nqp_rxmark rx1267_bstack, rxsubrule1270_pass2688, -1, 0
  rxsubrule1270_pass2688:
    rx1267_cstack = rx1267_cur."!cursor_capture"($P11, "args")
    repr_get_attr_int rx1267_pos, $P11, rx1267_curclass, "$!pos"
    rx1267_cur."!cursor_pass"(rx1267_pos, "term:sym<identifier>", 'backtrack'=>1)
    .return (rx1267_cur)
  rx1267_restart2679:
    repr_get_attr_obj rx1267_cstack, rx1267_cur, rx1267_curclass, "$!cstack"
  rx1267_fail2680:
    unless rx1267_bstack, rx1267_done2678
    pop $I19, rx1267_bstack
    if_null rx1267_cstack, rx1267_cstack_done2683
    unless rx1267_cstack, rx1267_cstack_done2683
    dec $I19
    set $P11, rx1267_cstack[$I19]
  rx1267_cstack_done2683:
    pop rx1267_rep, rx1267_bstack
    pop rx1267_pos, rx1267_bstack
    pop $I19, rx1267_bstack
    lt rx1267_pos, -1, rx1267_done2678
    lt rx1267_pos, 0, rx1267_fail2680
    eq $I19, 0, rx1267_fail2680
    nqp_islist $I20, rx1267_cstack
    unless $I20, rx1267_jump2681
    elements $I18, rx1267_bstack
    le $I18, 0, rx1267_cut2682
    dec $I18
    set $I18, rx1267_bstack[$I18]
  rx1267_cut2682:
    assign rx1267_cstack, $I18
  rx1267_jump2681:
    jump $I19
  rx1267_done2678:
    rx1267_cur."!cursor_fail"()
    .return (rx1267_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<name>" :subid("cuid_142_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1215
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1271_start
    .local string rx1271_tgt
    .local int rx1271_pos
    .local int rx1271_off
    .local int rx1271_eos
    .local int rx1271_rep
    .local pmc rx1271_cur
    .local pmc rx1271_curclass
    .local pmc rx1271_bstack
    .local pmc rx1271_cstack
    rx1271_start = self."!cursor_start_all"()
    set rx1271_cur, rx1271_start[0]
    set rx1271_tgt, rx1271_start[1]
    set rx1271_pos, rx1271_start[2]
    set rx1271_curclass, rx1271_start[3]
    set rx1271_bstack, rx1271_start[4]
    set $I19, rx1271_start[5]
    store_lex unicode:"$\x{a2}", rx1271_cur
    length rx1271_eos, rx1271_tgt
    eq $I19, 1, rx1271_restart2691
    gt rx1271_pos, rx1271_eos, rx1271_fail2692
    repr_get_attr_int $I11, self, rx1271_curclass, "$!from"
    ne $I11, -1, rxscan1272_done2698
    goto rxscan1272_scan2697
  rxscan1272_loop2696:
    inc rx1271_pos
    gt rx1271_pos, rx1271_eos, rx1271_fail2692
    repr_bind_attr_int rx1271_cur, rx1271_curclass, "$!from", rx1271_pos
  rxscan1272_scan2697:
    nqp_rxmark rx1271_bstack, rxscan1272_loop2696, rx1271_pos, 0
  rxscan1272_done2698:
    repr_bind_attr_int rx1271_cur, rx1271_curclass, "$!pos", rx1271_pos
    $P11 = rx1271_cur."name"()
    repr_get_attr_int $I11, $P11, rx1271_curclass, "$!pos"
    lt $I11, 0, rx1271_fail2692
    nqp_rxmark rx1271_bstack, rxsubrule1273_pass2699, -1, 0
  rxsubrule1273_pass2699:
    rx1271_cstack = rx1271_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx1271_pos, $P11, rx1271_curclass, "$!pos"
    nqp_rxmark rx1271_bstack, rxquantr1274_done2701, rx1271_pos, 0
  rxquantr1274_loop2700:
    repr_bind_attr_int rx1271_cur, rx1271_curclass, "$!pos", rx1271_pos
    $P11 = rx1271_cur."args"()
    repr_get_attr_int $I11, $P11, rx1271_curclass, "$!pos"
    lt $I11, 0, rx1271_fail2692
    goto rxsubrule1275_pass2702
  rxsubrule1275_back2703:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1271_curclass, "$!pos"
    lt $I11, 0, rx1271_fail2692
  rxsubrule1275_pass2702:
    rx1271_cstack = rx1271_cur."!cursor_capture"($P11, "args")
    set_addr $I11, rxsubrule1275_back2703
    push rx1271_bstack, $I11
    push rx1271_bstack, 0
    push rx1271_bstack, rx1271_pos
    elements $I11, rx1271_cstack
    push rx1271_bstack, $I11
    repr_get_attr_int rx1271_pos, $P11, rx1271_curclass, "$!pos"
    nqp_rxpeek $I19, rx1271_bstack, rxquantr1274_done2701
    inc $I19
    inc $I19
    set rx1271_rep, rx1271_bstack[$I19]
    nqp_rxcommit rx1271_bstack, rxquantr1274_done2701
    inc rx1271_rep
  rxquantr1274_done2701:
    rx1271_cur."!cursor_pass"(rx1271_pos, "term:sym<name>", 'backtrack'=>1)
    .return (rx1271_cur)
  rx1271_restart2691:
    repr_get_attr_obj rx1271_cstack, rx1271_cur, rx1271_curclass, "$!cstack"
  rx1271_fail2692:
    unless rx1271_bstack, rx1271_done2690
    pop $I19, rx1271_bstack
    if_null rx1271_cstack, rx1271_cstack_done2695
    unless rx1271_cstack, rx1271_cstack_done2695
    dec $I19
    set $P11, rx1271_cstack[$I19]
  rx1271_cstack_done2695:
    pop rx1271_rep, rx1271_bstack
    pop rx1271_pos, rx1271_bstack
    pop $I19, rx1271_bstack
    lt rx1271_pos, -1, rx1271_done2690
    lt rx1271_pos, 0, rx1271_fail2692
    eq $I19, 0, rx1271_fail2692
    nqp_islist $I20, rx1271_cstack
    unless $I20, rx1271_jump2693
    elements $I18, rx1271_bstack
    le $I18, 0, rx1271_cut2694
    dec $I18
    set $I18, rx1271_bstack[$I18]
  rx1271_cut2694:
    assign rx1271_cstack, $I18
  rx1271_jump2693:
    jump $I19
  rx1271_done2690:
    rx1271_cur."!cursor_fail"()
    .return (rx1271_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<pir::op>" :subid("cuid_143_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1219
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1276_start
    .local string rx1276_tgt
    .local int rx1276_pos
    .local int rx1276_off
    .local int rx1276_eos
    .local int rx1276_rep
    .local pmc rx1276_cur
    .local pmc rx1276_curclass
    .local pmc rx1276_bstack
    .local pmc rx1276_cstack
    rx1276_start = self."!cursor_start_all"()
    set rx1276_cur, rx1276_start[0]
    set rx1276_tgt, rx1276_start[1]
    set rx1276_pos, rx1276_start[2]
    set rx1276_curclass, rx1276_start[3]
    set rx1276_bstack, rx1276_start[4]
    set $I19, rx1276_start[5]
    store_lex unicode:"$\x{a2}", rx1276_cur
    length rx1276_eos, rx1276_tgt
    eq $I19, 1, rx1276_restart2706
    gt rx1276_pos, rx1276_eos, rx1276_fail2707
    repr_get_attr_int $I11, self, rx1276_curclass, "$!from"
    ne $I11, -1, rxscan1277_done2713
    goto rxscan1277_scan2712
  rxscan1277_loop2711:
    inc rx1276_pos
    gt rx1276_pos, rx1276_eos, rx1276_fail2707
    repr_bind_attr_int rx1276_cur, rx1276_curclass, "$!from", rx1276_pos
  rxscan1277_scan2712:
    nqp_rxmark rx1276_bstack, rxscan1277_loop2711, rx1276_pos, 0
  rxscan1277_done2713:
    add $I11, rx1276_pos, 5
    gt $I11, rx1276_eos, rx1276_fail2707
    substr $S10, rx1276_tgt, rx1276_pos, 5
    ne $S10, ucs4:"pir::", rx1276_fail2707
    add rx1276_pos, 5
    nqp_rxmark rx1276_bstack, rxcap1278_fail2715, rx1276_pos, 0
    nqp_rxmark rx1276_bstack, rxquantr1279_done2717, -1, 0
  rxquantr1279_loop2716:
    ge rx1276_pos, rx1276_eos, rx1276_fail2707
    is_cclass $I11, .CCLASS_WORD, rx1276_tgt, rx1276_pos
    unless $I11, rx1276_fail2707
    add rx1276_pos, 1
    nqp_rxpeek $I19, rx1276_bstack, rxquantr1279_done2717
    inc $I19
    inc $I19
    set rx1276_rep, rx1276_bstack[$I19]
    nqp_rxcommit rx1276_bstack, rxquantr1279_done2717
    inc rx1276_rep
    nqp_rxmark rx1276_bstack, rxquantr1279_done2717, rx1276_pos, rx1276_rep
    goto rxquantr1279_loop2716
  rxquantr1279_done2717:
    nqp_rxpeek $I19, rx1276_bstack, rxcap1278_fail2715
    inc $I19
    set $I11, rx1276_bstack[$I19]
    repr_bind_attr_int rx1276_cur, rx1276_curclass, "$!pos", rx1276_pos
    $P11 = rx1276_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1276_pos)
    rx1276_cstack = rx1276_cur."!cursor_capture"($P11, "op")
    goto rxcap1278_done2714
  rxcap1278_fail2715:
    goto rx1276_fail2707
  rxcap1278_done2714:
    nqp_rxmark rx1276_bstack, rxquantr1280_done2719, rx1276_pos, 0
  rxquantr1280_loop2718:
    repr_bind_attr_int rx1276_cur, rx1276_curclass, "$!pos", rx1276_pos
    $P11 = rx1276_cur."args"()
    repr_get_attr_int $I11, $P11, rx1276_curclass, "$!pos"
    lt $I11, 0, rx1276_fail2707
    goto rxsubrule1281_pass2720
  rxsubrule1281_back2721:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1276_curclass, "$!pos"
    lt $I11, 0, rx1276_fail2707
  rxsubrule1281_pass2720:
    rx1276_cstack = rx1276_cur."!cursor_capture"($P11, "args")
    set_addr $I11, rxsubrule1281_back2721
    push rx1276_bstack, $I11
    push rx1276_bstack, 0
    push rx1276_bstack, rx1276_pos
    elements $I11, rx1276_cstack
    push rx1276_bstack, $I11
    repr_get_attr_int rx1276_pos, $P11, rx1276_curclass, "$!pos"
    nqp_rxpeek $I19, rx1276_bstack, rxquantr1280_done2719
    inc $I19
    inc $I19
    set rx1276_rep, rx1276_bstack[$I19]
    nqp_rxcommit rx1276_bstack, rxquantr1280_done2719
    inc rx1276_rep
  rxquantr1280_done2719:
    rx1276_cur."!cursor_pass"(rx1276_pos, "term:sym<pir::op>", 'backtrack'=>1)
    .return (rx1276_cur)
  rx1276_restart2706:
    repr_get_attr_obj rx1276_cstack, rx1276_cur, rx1276_curclass, "$!cstack"
  rx1276_fail2707:
    unless rx1276_bstack, rx1276_done2705
    pop $I19, rx1276_bstack
    if_null rx1276_cstack, rx1276_cstack_done2710
    unless rx1276_cstack, rx1276_cstack_done2710
    dec $I19
    set $P11, rx1276_cstack[$I19]
  rx1276_cstack_done2710:
    pop rx1276_rep, rx1276_bstack
    pop rx1276_pos, rx1276_bstack
    pop $I19, rx1276_bstack
    lt rx1276_pos, -1, rx1276_done2705
    lt rx1276_pos, 0, rx1276_fail2707
    eq $I19, 0, rx1276_fail2707
    nqp_islist $I20, rx1276_cstack
    unless $I20, rx1276_jump2708
    elements $I18, rx1276_bstack
    le $I18, 0, rx1276_cut2709
    dec $I18
    set $I18, rx1276_bstack[$I18]
  rx1276_cut2709:
    assign rx1276_cstack, $I18
  rx1276_jump2708:
    jump $I19
  rx1276_done2705:
    rx1276_cur."!cursor_fail"()
    .return (rx1276_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<pir::const>" :subid("cuid_144_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1223
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1282_start
    .local string rx1282_tgt
    .local int rx1282_pos
    .local int rx1282_off
    .local int rx1282_eos
    .local int rx1282_rep
    .local pmc rx1282_cur
    .local pmc rx1282_curclass
    .local pmc rx1282_bstack
    .local pmc rx1282_cstack
    rx1282_start = self."!cursor_start_all"()
    set rx1282_cur, rx1282_start[0]
    set rx1282_tgt, rx1282_start[1]
    set rx1282_pos, rx1282_start[2]
    set rx1282_curclass, rx1282_start[3]
    set rx1282_bstack, rx1282_start[4]
    set $I19, rx1282_start[5]
    store_lex unicode:"$\x{a2}", rx1282_cur
    length rx1282_eos, rx1282_tgt
    eq $I19, 1, rx1282_restart2724
    gt rx1282_pos, rx1282_eos, rx1282_fail2725
    repr_get_attr_int $I11, self, rx1282_curclass, "$!from"
    ne $I11, -1, rxscan1283_done2731
    goto rxscan1283_scan2730
  rxscan1283_loop2729:
    inc rx1282_pos
    gt rx1282_pos, rx1282_eos, rx1282_fail2725
    repr_bind_attr_int rx1282_cur, rx1282_curclass, "$!from", rx1282_pos
  rxscan1283_scan2730:
    nqp_rxmark rx1282_bstack, rxscan1283_loop2729, rx1282_pos, 0
  rxscan1283_done2731:
    add $I11, rx1282_pos, 12
    gt $I11, rx1282_eos, rx1282_fail2725
    substr $S10, rx1282_tgt, rx1282_pos, 12
    ne $S10, ucs4:"pir::const::", rx1282_fail2725
    add rx1282_pos, 12
    nqp_rxmark rx1282_bstack, rxcap1284_fail2733, rx1282_pos, 0
    nqp_rxmark rx1282_bstack, rxquantr1285_done2735, -1, 0
  rxquantr1285_loop2734:
    ge rx1282_pos, rx1282_eos, rx1282_fail2725
    is_cclass $I11, .CCLASS_WORD, rx1282_tgt, rx1282_pos
    unless $I11, rx1282_fail2725
    add rx1282_pos, 1
    nqp_rxpeek $I19, rx1282_bstack, rxquantr1285_done2735
    inc $I19
    inc $I19
    set rx1282_rep, rx1282_bstack[$I19]
    nqp_rxcommit rx1282_bstack, rxquantr1285_done2735
    inc rx1282_rep
    nqp_rxmark rx1282_bstack, rxquantr1285_done2735, rx1282_pos, rx1282_rep
    goto rxquantr1285_loop2734
  rxquantr1285_done2735:
    nqp_rxpeek $I19, rx1282_bstack, rxcap1284_fail2733
    inc $I19
    set $I11, rx1282_bstack[$I19]
    repr_bind_attr_int rx1282_cur, rx1282_curclass, "$!pos", rx1282_pos
    $P11 = rx1282_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1282_pos)
    rx1282_cstack = rx1282_cur."!cursor_capture"($P11, "const")
    goto rxcap1284_done2732
  rxcap1284_fail2733:
    goto rx1282_fail2725
  rxcap1284_done2732:
    rx1282_cur."!cursor_pass"(rx1282_pos, "term:sym<pir::const>", 'backtrack'=>1)
    .return (rx1282_cur)
  rx1282_restart2724:
    repr_get_attr_obj rx1282_cstack, rx1282_cur, rx1282_curclass, "$!cstack"
  rx1282_fail2725:
    unless rx1282_bstack, rx1282_done2723
    pop $I19, rx1282_bstack
    if_null rx1282_cstack, rx1282_cstack_done2728
    unless rx1282_cstack, rx1282_cstack_done2728
    dec $I19
    set $P11, rx1282_cstack[$I19]
  rx1282_cstack_done2728:
    pop rx1282_rep, rx1282_bstack
    pop rx1282_pos, rx1282_bstack
    pop $I19, rx1282_bstack
    lt rx1282_pos, -1, rx1282_done2723
    lt rx1282_pos, 0, rx1282_fail2725
    eq $I19, 0, rx1282_fail2725
    nqp_islist $I20, rx1282_cstack
    unless $I20, rx1282_jump2726
    elements $I18, rx1282_bstack
    le $I18, 0, rx1282_cut2727
    dec $I18
    set $I18, rx1282_bstack[$I18]
  rx1282_cut2727:
    assign rx1282_cstack, $I18
  rx1282_jump2726:
    jump $I19
  rx1282_done2723:
    rx1282_cur."!cursor_fail"()
    .return (rx1282_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<nqp::op>" :subid("cuid_145_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1227
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1286_start
    .local string rx1286_tgt
    .local int rx1286_pos
    .local int rx1286_off
    .local int rx1286_eos
    .local int rx1286_rep
    .local pmc rx1286_cur
    .local pmc rx1286_curclass
    .local pmc rx1286_bstack
    .local pmc rx1286_cstack
    rx1286_start = self."!cursor_start_all"()
    set rx1286_cur, rx1286_start[0]
    set rx1286_tgt, rx1286_start[1]
    set rx1286_pos, rx1286_start[2]
    set rx1286_curclass, rx1286_start[3]
    set rx1286_bstack, rx1286_start[4]
    set $I19, rx1286_start[5]
    store_lex unicode:"$\x{a2}", rx1286_cur
    length rx1286_eos, rx1286_tgt
    eq $I19, 1, rx1286_restart2738
    gt rx1286_pos, rx1286_eos, rx1286_fail2739
    repr_get_attr_int $I11, self, rx1286_curclass, "$!from"
    ne $I11, -1, rxscan1287_done2745
    goto rxscan1287_scan2744
  rxscan1287_loop2743:
    inc rx1286_pos
    gt rx1286_pos, rx1286_eos, rx1286_fail2739
    repr_bind_attr_int rx1286_cur, rx1286_curclass, "$!from", rx1286_pos
  rxscan1287_scan2744:
    nqp_rxmark rx1286_bstack, rxscan1287_loop2743, rx1286_pos, 0
  rxscan1287_done2745:
    add $I11, rx1286_pos, 5
    gt $I11, rx1286_eos, rx1286_fail2739
    substr $S10, rx1286_tgt, rx1286_pos, 5
    ne $S10, ucs4:"nqp::", rx1286_fail2739
    add rx1286_pos, 5
    nqp_rxmark rx1286_bstack, rxcap1288_fail2747, rx1286_pos, 0
    nqp_rxmark rx1286_bstack, rxquantr1289_done2749, -1, 0
  rxquantr1289_loop2748:
    ge rx1286_pos, rx1286_eos, rx1286_fail2739
    is_cclass $I11, .CCLASS_WORD, rx1286_tgt, rx1286_pos
    unless $I11, rx1286_fail2739
    add rx1286_pos, 1
    nqp_rxpeek $I19, rx1286_bstack, rxquantr1289_done2749
    inc $I19
    inc $I19
    set rx1286_rep, rx1286_bstack[$I19]
    nqp_rxcommit rx1286_bstack, rxquantr1289_done2749
    inc rx1286_rep
    nqp_rxmark rx1286_bstack, rxquantr1289_done2749, rx1286_pos, rx1286_rep
    goto rxquantr1289_loop2748
  rxquantr1289_done2749:
    nqp_rxpeek $I19, rx1286_bstack, rxcap1288_fail2747
    inc $I19
    set $I11, rx1286_bstack[$I19]
    repr_bind_attr_int rx1286_cur, rx1286_curclass, "$!pos", rx1286_pos
    $P11 = rx1286_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1286_pos)
    rx1286_cstack = rx1286_cur."!cursor_capture"($P11, "op")
    goto rxcap1288_done2746
  rxcap1288_fail2747:
    goto rx1286_fail2739
  rxcap1288_done2746:
    nqp_rxmark rx1286_bstack, rxquantr1290_done2751, rx1286_pos, 0
  rxquantr1290_loop2750:
    repr_bind_attr_int rx1286_cur, rx1286_curclass, "$!pos", rx1286_pos
    $P11 = rx1286_cur."args"()
    repr_get_attr_int $I11, $P11, rx1286_curclass, "$!pos"
    lt $I11, 0, rx1286_fail2739
    goto rxsubrule1291_pass2752
  rxsubrule1291_back2753:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1286_curclass, "$!pos"
    lt $I11, 0, rx1286_fail2739
  rxsubrule1291_pass2752:
    rx1286_cstack = rx1286_cur."!cursor_capture"($P11, "args")
    set_addr $I11, rxsubrule1291_back2753
    push rx1286_bstack, $I11
    push rx1286_bstack, 0
    push rx1286_bstack, rx1286_pos
    elements $I11, rx1286_cstack
    push rx1286_bstack, $I11
    repr_get_attr_int rx1286_pos, $P11, rx1286_curclass, "$!pos"
    nqp_rxpeek $I19, rx1286_bstack, rxquantr1290_done2751
    inc $I19
    inc $I19
    set rx1286_rep, rx1286_bstack[$I19]
    nqp_rxcommit rx1286_bstack, rxquantr1290_done2751
    inc rx1286_rep
  rxquantr1290_done2751:
    rx1286_cur."!cursor_pass"(rx1286_pos, "term:sym<nqp::op>", 'backtrack'=>1)
    .return (rx1286_cur)
  rx1286_restart2738:
    repr_get_attr_obj rx1286_cstack, rx1286_cur, rx1286_curclass, "$!cstack"
  rx1286_fail2739:
    unless rx1286_bstack, rx1286_done2737
    pop $I19, rx1286_bstack
    if_null rx1286_cstack, rx1286_cstack_done2742
    unless rx1286_cstack, rx1286_cstack_done2742
    dec $I19
    set $P11, rx1286_cstack[$I19]
  rx1286_cstack_done2742:
    pop rx1286_rep, rx1286_bstack
    pop rx1286_pos, rx1286_bstack
    pop $I19, rx1286_bstack
    lt rx1286_pos, -1, rx1286_done2737
    lt rx1286_pos, 0, rx1286_fail2739
    eq $I19, 0, rx1286_fail2739
    nqp_islist $I20, rx1286_cstack
    unless $I20, rx1286_jump2740
    elements $I18, rx1286_bstack
    le $I18, 0, rx1286_cut2741
    dec $I18
    set $I18, rx1286_bstack[$I18]
  rx1286_cut2741:
    assign rx1286_cstack, $I18
  rx1286_jump2740:
    jump $I19
  rx1286_done2737:
    rx1286_cur."!cursor_fail"()
    .return (rx1286_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<nqp::const>" :subid("cuid_146_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1231
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1292_start
    .local string rx1292_tgt
    .local int rx1292_pos
    .local int rx1292_off
    .local int rx1292_eos
    .local int rx1292_rep
    .local pmc rx1292_cur
    .local pmc rx1292_curclass
    .local pmc rx1292_bstack
    .local pmc rx1292_cstack
    rx1292_start = self."!cursor_start_all"()
    set rx1292_cur, rx1292_start[0]
    set rx1292_tgt, rx1292_start[1]
    set rx1292_pos, rx1292_start[2]
    set rx1292_curclass, rx1292_start[3]
    set rx1292_bstack, rx1292_start[4]
    set $I19, rx1292_start[5]
    store_lex unicode:"$\x{a2}", rx1292_cur
    length rx1292_eos, rx1292_tgt
    eq $I19, 1, rx1292_restart2756
    gt rx1292_pos, rx1292_eos, rx1292_fail2757
    repr_get_attr_int $I11, self, rx1292_curclass, "$!from"
    ne $I11, -1, rxscan1293_done2763
    goto rxscan1293_scan2762
  rxscan1293_loop2761:
    inc rx1292_pos
    gt rx1292_pos, rx1292_eos, rx1292_fail2757
    repr_bind_attr_int rx1292_cur, rx1292_curclass, "$!from", rx1292_pos
  rxscan1293_scan2762:
    nqp_rxmark rx1292_bstack, rxscan1293_loop2761, rx1292_pos, 0
  rxscan1293_done2763:
    add $I11, rx1292_pos, 12
    gt $I11, rx1292_eos, rx1292_fail2757
    substr $S10, rx1292_tgt, rx1292_pos, 12
    ne $S10, ucs4:"nqp::const::", rx1292_fail2757
    add rx1292_pos, 12
    nqp_rxmark rx1292_bstack, rxcap1294_fail2765, rx1292_pos, 0
    nqp_rxmark rx1292_bstack, rxquantr1295_done2767, -1, 0
  rxquantr1295_loop2766:
    ge rx1292_pos, rx1292_eos, rx1292_fail2757
    is_cclass $I11, .CCLASS_WORD, rx1292_tgt, rx1292_pos
    unless $I11, rx1292_fail2757
    add rx1292_pos, 1
    nqp_rxpeek $I19, rx1292_bstack, rxquantr1295_done2767
    inc $I19
    inc $I19
    set rx1292_rep, rx1292_bstack[$I19]
    nqp_rxcommit rx1292_bstack, rxquantr1295_done2767
    inc rx1292_rep
    nqp_rxmark rx1292_bstack, rxquantr1295_done2767, rx1292_pos, rx1292_rep
    goto rxquantr1295_loop2766
  rxquantr1295_done2767:
    nqp_rxpeek $I19, rx1292_bstack, rxcap1294_fail2765
    inc $I19
    set $I11, rx1292_bstack[$I19]
    repr_bind_attr_int rx1292_cur, rx1292_curclass, "$!pos", rx1292_pos
    $P11 = rx1292_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1292_pos)
    rx1292_cstack = rx1292_cur."!cursor_capture"($P11, "const")
    goto rxcap1294_done2764
  rxcap1294_fail2765:
    goto rx1292_fail2757
  rxcap1294_done2764:
    rx1292_cur."!cursor_pass"(rx1292_pos, "term:sym<nqp::const>", 'backtrack'=>1)
    .return (rx1292_cur)
  rx1292_restart2756:
    repr_get_attr_obj rx1292_cstack, rx1292_cur, rx1292_curclass, "$!cstack"
  rx1292_fail2757:
    unless rx1292_bstack, rx1292_done2755
    pop $I19, rx1292_bstack
    if_null rx1292_cstack, rx1292_cstack_done2760
    unless rx1292_cstack, rx1292_cstack_done2760
    dec $I19
    set $P11, rx1292_cstack[$I19]
  rx1292_cstack_done2760:
    pop rx1292_rep, rx1292_bstack
    pop rx1292_pos, rx1292_bstack
    pop $I19, rx1292_bstack
    lt rx1292_pos, -1, rx1292_done2755
    lt rx1292_pos, 0, rx1292_fail2757
    eq $I19, 0, rx1292_fail2757
    nqp_islist $I20, rx1292_cstack
    unless $I20, rx1292_jump2758
    elements $I18, rx1292_bstack
    le $I18, 0, rx1292_cut2759
    dec $I18
    set $I18, rx1292_bstack[$I18]
  rx1292_cut2759:
    assign rx1292_cstack, $I18
  rx1292_jump2758:
    jump $I19
  rx1292_done2755:
    rx1292_cur."!cursor_fail"()
    .return (rx1292_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<onlystar>" :subid("cuid_147_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1235
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_411_1365879995.227' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1296_start
    .local string rx1296_tgt
    .local int rx1296_pos
    .local int rx1296_off
    .local int rx1296_eos
    .local int rx1296_rep
    .local pmc rx1296_cur
    .local pmc rx1296_curclass
    .local pmc rx1296_bstack
    .local pmc rx1296_cstack
    rx1296_start = self."!cursor_start_all"()
    set rx1296_cur, rx1296_start[0]
    set rx1296_tgt, rx1296_start[1]
    set rx1296_pos, rx1296_start[2]
    set rx1296_curclass, rx1296_start[3]
    set rx1296_bstack, rx1296_start[4]
    set $I19, rx1296_start[5]
    store_lex unicode:"$\x{a2}", rx1296_cur
    length rx1296_eos, rx1296_tgt
    eq $I19, 1, rx1296_restart2770
    gt rx1296_pos, rx1296_eos, rx1296_fail2771
    repr_get_attr_int $I11, self, rx1296_curclass, "$!from"
    ne $I11, -1, rxscan1297_done2777
    goto rxscan1297_scan2776
  rxscan1297_loop2775:
    inc rx1296_pos
    gt rx1296_pos, rx1296_eos, rx1296_fail2771
    repr_bind_attr_int rx1296_cur, rx1296_curclass, "$!from", rx1296_pos
  rxscan1297_scan2776:
    nqp_rxmark rx1296_bstack, rxscan1297_loop2775, rx1296_pos, 0
  rxscan1297_done2777:
    add $I11, rx1296_pos, 3
    gt $I11, rx1296_eos, rx1296_fail2771
    substr $S10, rx1296_tgt, rx1296_pos, 3
    ne $S10, ucs4:"{*}", rx1296_fail2771
    add rx1296_pos, 3
    repr_bind_attr_int rx1296_cur, rx1296_curclass, "$!pos", rx1296_pos
    $P11 = rx1296_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1296_curclass, "$!pos"
    lt $I11, 0, rx1296_fail2771
  alt1298_02779:
    nqp_rxmark rx1296_bstack, alt1298_12785, rx1296_pos, 0
    repr_bind_attr_int rx1296_cur, rx1296_curclass, "$!pos", rx1296_pos
    store_lex unicode:"$\x{a2}", rx1296_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_411_1365879995.227' 
    capture_lex $P5002
    $P5003 = $P5002()
    unless $P5003, rx1296_fail2771
    goto alt1298_end2778
  alt1298_12785:
    repr_bind_attr_int rx1296_cur, rx1296_curclass, "$!pos", rx1296_pos
    $P11 = rx1296_cur."panic"("{*} may only appear in proto")
    repr_get_attr_int $I11, $P11, rx1296_curclass, "$!pos"
    lt $I11, 0, rx1296_fail2771
    repr_get_attr_int rx1296_pos, $P11, rx1296_curclass, "$!pos"
  alt1298_end2778:
    rx1296_cur."!cursor_pass"(rx1296_pos, "term:sym<onlystar>", 'backtrack'=>1)
    .return (rx1296_cur)
  rx1296_restart2770:
    repr_get_attr_obj rx1296_cstack, rx1296_cur, rx1296_curclass, "$!cstack"
  rx1296_fail2771:
    unless rx1296_bstack, rx1296_done2769
    pop $I19, rx1296_bstack
    if_null rx1296_cstack, rx1296_cstack_done2774
    unless rx1296_cstack, rx1296_cstack_done2774
    dec $I19
    set $P11, rx1296_cstack[$I19]
  rx1296_cstack_done2774:
    pop rx1296_rep, rx1296_bstack
    pop rx1296_pos, rx1296_bstack
    pop $I19, rx1296_bstack
    lt rx1296_pos, -1, rx1296_done2769
    lt rx1296_pos, 0, rx1296_fail2771
    eq $I19, 0, rx1296_fail2771
    nqp_islist $I20, rx1296_cstack
    unless $I20, rx1296_jump2772
    elements $I18, rx1296_bstack
    le $I18, 0, rx1296_cut2773
    dec $I18
    set $I18, rx1296_bstack[$I18]
  rx1296_cut2773:
    assign rx1296_cstack, $I18
  rx1296_jump2772:
    jump $I19
  rx1296_done2769:
    rx1296_cur."!cursor_fail"()
    .return (rx1296_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_411_1365879995.227") :anon :lex :outer("cuid_147_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1237
    .local pmc fb_tmp_162 
    find_dynamic_lex $P5001, "$*MULTINESS"
    unless_null $P5001, fallback2780
    nqp_get_sc_object $P5003, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5002, $P5003
    set fb_tmp_162, $P5002
    repr_defined $I5002, fb_tmp_162
    unless $I5002 goto if1299_else2781 
    set $P5004, fb_tmp_162["$MULTINESS"]
    set $P5006, $P5004
    goto if1299_end2782
  if1299_else2781:
    null $P5005
    set $P5006, $P5005
  if1299_end2782:
    unless_null $P5006, vivi_13002783
    nqp_get_sc_object $P5007, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5006, $P5007
  vivi_13002783:
    unless_null $P5006, vivi_13012784
    die "Contextual $*MULTINESS not found"
    box $P5008, "Contextual $*MULTINESS not found"
    set $P5006, $P5008
  vivi_13012784:
    set $P5001, $P5006
  fallback2780:
    set $S5001, $P5001
    iseq $I5001, $S5001, "proto"
    .return ($I5001) 
.end
.HLL "nqp"
.namespace []
.sub "args" :subid("cuid_148_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1240
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1303_start
    .local string rx1303_tgt
    .local int rx1303_pos
    .local int rx1303_off
    .local int rx1303_eos
    .local int rx1303_rep
    .local pmc rx1303_cur
    .local pmc rx1303_curclass
    .local pmc rx1303_bstack
    .local pmc rx1303_cstack
    rx1303_start = self."!cursor_start_all"()
    set rx1303_cur, rx1303_start[0]
    set rx1303_tgt, rx1303_start[1]
    set rx1303_pos, rx1303_start[2]
    set rx1303_curclass, rx1303_start[3]
    set rx1303_bstack, rx1303_start[4]
    set $I19, rx1303_start[5]
    store_lex unicode:"$\x{a2}", rx1303_cur
    length rx1303_eos, rx1303_tgt
    eq $I19, 1, rx1303_restart2789
    gt rx1303_pos, rx1303_eos, rx1303_fail2790
    repr_get_attr_int $I11, self, rx1303_curclass, "$!from"
    ne $I11, -1, rxscan1304_done2796
    goto rxscan1304_scan2795
  rxscan1304_loop2794:
    inc rx1303_pos
    gt rx1303_pos, rx1303_eos, rx1303_fail2790
    repr_bind_attr_int rx1303_cur, rx1303_curclass, "$!from", rx1303_pos
  rxscan1304_scan2795:
    nqp_rxmark rx1303_bstack, rxscan1304_loop2794, rx1303_pos, 0
  rxscan1304_done2796:
    add $I11, rx1303_pos, 1
    gt $I11, rx1303_eos, rx1303_fail2790
    substr $S10, rx1303_tgt, rx1303_pos, 1
    ne $S10, ucs4:"(", rx1303_fail2790
    add rx1303_pos, 1
    repr_bind_attr_int rx1303_cur, rx1303_curclass, "$!pos", rx1303_pos
    $P11 = rx1303_cur."arglist"()
    repr_get_attr_int $I11, $P11, rx1303_curclass, "$!pos"
    lt $I11, 0, rx1303_fail2790
    nqp_rxmark rx1303_bstack, rxsubrule1305_pass2797, -1, 0
  rxsubrule1305_pass2797:
    rx1303_cstack = rx1303_cur."!cursor_capture"($P11, "arglist")
    repr_get_attr_int rx1303_pos, $P11, rx1303_curclass, "$!pos"
    add $I11, rx1303_pos, 1
    gt $I11, rx1303_eos, rx1303_fail2790
    substr $S10, rx1303_tgt, rx1303_pos, 1
    ne $S10, ucs4:")", rx1303_fail2790
    add rx1303_pos, 1
    rx1303_cur."!cursor_pass"(rx1303_pos, "args", 'backtrack'=>1)
    .return (rx1303_cur)
  rx1303_restart2789:
    repr_get_attr_obj rx1303_cstack, rx1303_cur, rx1303_curclass, "$!cstack"
  rx1303_fail2790:
    unless rx1303_bstack, rx1303_done2788
    pop $I19, rx1303_bstack
    if_null rx1303_cstack, rx1303_cstack_done2793
    unless rx1303_cstack, rx1303_cstack_done2793
    dec $I19
    set $P11, rx1303_cstack[$I19]
  rx1303_cstack_done2793:
    pop rx1303_rep, rx1303_bstack
    pop rx1303_pos, rx1303_bstack
    pop $I19, rx1303_bstack
    lt rx1303_pos, -1, rx1303_done2788
    lt rx1303_pos, 0, rx1303_fail2790
    eq $I19, 0, rx1303_fail2790
    nqp_islist $I20, rx1303_cstack
    unless $I20, rx1303_jump2791
    elements $I18, rx1303_bstack
    le $I18, 0, rx1303_cut2792
    dec $I18
    set $I18, rx1303_bstack[$I18]
  rx1303_cut2792:
    assign rx1303_cstack, $I18
  rx1303_jump2791:
    jump $I19
  rx1303_done2788:
    rx1303_cur."!cursor_fail"()
    .return (rx1303_cur) 
.end
.HLL "nqp"
.namespace []
.sub "arglist" :subid("cuid_149_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1244
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1306_start
    .local string rx1306_tgt
    .local int rx1306_pos
    .local int rx1306_off
    .local int rx1306_eos
    .local int rx1306_rep
    .local pmc rx1306_cur
    .local pmc rx1306_curclass
    .local pmc rx1306_bstack
    .local pmc rx1306_cstack
    rx1306_start = self."!cursor_start_all"()
    set rx1306_cur, rx1306_start[0]
    set rx1306_tgt, rx1306_start[1]
    set rx1306_pos, rx1306_start[2]
    set rx1306_curclass, rx1306_start[3]
    set rx1306_bstack, rx1306_start[4]
    set $I19, rx1306_start[5]
    store_lex unicode:"$\x{a2}", rx1306_cur
    length rx1306_eos, rx1306_tgt
    eq $I19, 1, rx1306_restart2800
    gt rx1306_pos, rx1306_eos, rx1306_fail2801
    repr_get_attr_int $I11, self, rx1306_curclass, "$!from"
    ne $I11, -1, rxscan1307_done2807
    goto rxscan1307_scan2806
  rxscan1307_loop2805:
    inc rx1306_pos
    gt rx1306_pos, rx1306_eos, rx1306_fail2801
    repr_bind_attr_int rx1306_cur, rx1306_curclass, "$!from", rx1306_pos
  rxscan1307_scan2806:
    nqp_rxmark rx1306_bstack, rxscan1307_loop2805, rx1306_pos, 0
  rxscan1307_done2807:
    repr_bind_attr_int rx1306_cur, rx1306_curclass, "$!pos", rx1306_pos
    $P11 = rx1306_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1306_curclass, "$!pos"
    lt $I11, 0, rx1306_fail2801
    repr_get_attr_int rx1306_pos, $P11, rx1306_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1309_02810
    nqp_push_label $P11, alt1309_12812
    nqp_rxmark rx1306_bstack, alt1309_end2809, -1, 0
    rx1306_cur."!alt"(rx1306_pos, "alt_nfa__36_1365879998.083", $P11)
    goto rx1306_fail2801
  alt1309_02810:
    repr_bind_attr_int rx1306_cur, rx1306_curclass, "$!pos", rx1306_pos
    $P11 = rx1306_cur."EXPR"("f=")
    repr_get_attr_int $I11, $P11, rx1306_curclass, "$!pos"
    lt $I11, 0, rx1306_fail2801
    nqp_rxmark rx1306_bstack, rxsubrule1310_pass2811, -1, 0
  rxsubrule1310_pass2811:
    rx1306_cstack = rx1306_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx1306_pos, $P11, rx1306_curclass, "$!pos"
    goto alt1309_end2809
  alt1309_12812:
    goto alt1309_end2809
  alt1309_end2809:
    nqp_rxcommit rx1306_bstack, alt1309_end2809
    rx1306_cur."!cursor_pass"(rx1306_pos, "arglist", 'backtrack'=>1)
    .return (rx1306_cur)
  rx1306_restart2800:
    repr_get_attr_obj rx1306_cstack, rx1306_cur, rx1306_curclass, "$!cstack"
  rx1306_fail2801:
    unless rx1306_bstack, rx1306_done2799
    pop $I19, rx1306_bstack
    if_null rx1306_cstack, rx1306_cstack_done2804
    unless rx1306_cstack, rx1306_cstack_done2804
    dec $I19
    set $P11, rx1306_cstack[$I19]
  rx1306_cstack_done2804:
    pop rx1306_rep, rx1306_bstack
    pop rx1306_pos, rx1306_bstack
    pop $I19, rx1306_bstack
    lt rx1306_pos, -1, rx1306_done2799
    lt rx1306_pos, 0, rx1306_fail2801
    eq $I19, 0, rx1306_fail2801
    nqp_islist $I20, rx1306_cstack
    unless $I20, rx1306_jump2802
    elements $I18, rx1306_bstack
    le $I18, 0, rx1306_cut2803
    dec $I18
    set $I18, rx1306_bstack[$I18]
  rx1306_cut2803:
    assign rx1306_cstack, $I18
  rx1306_jump2802:
    jump $I19
  rx1306_done2799:
    rx1306_cur."!cursor_fail"()
    .return (rx1306_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<value>" :subid("cuid_150_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1253
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1312_start
    .local string rx1312_tgt
    .local int rx1312_pos
    .local int rx1312_off
    .local int rx1312_eos
    .local int rx1312_rep
    .local pmc rx1312_cur
    .local pmc rx1312_curclass
    .local pmc rx1312_bstack
    .local pmc rx1312_cstack
    rx1312_start = self."!cursor_start_all"()
    set rx1312_cur, rx1312_start[0]
    set rx1312_tgt, rx1312_start[1]
    set rx1312_pos, rx1312_start[2]
    set rx1312_curclass, rx1312_start[3]
    set rx1312_bstack, rx1312_start[4]
    set $I19, rx1312_start[5]
    store_lex unicode:"$\x{a2}", rx1312_cur
    length rx1312_eos, rx1312_tgt
    eq $I19, 1, rx1312_restart2816
    gt rx1312_pos, rx1312_eos, rx1312_fail2817
    repr_get_attr_int $I11, self, rx1312_curclass, "$!from"
    ne $I11, -1, rxscan1313_done2823
    goto rxscan1313_scan2822
  rxscan1313_loop2821:
    inc rx1312_pos
    gt rx1312_pos, rx1312_eos, rx1312_fail2817
    repr_bind_attr_int rx1312_cur, rx1312_curclass, "$!from", rx1312_pos
  rxscan1313_scan2822:
    nqp_rxmark rx1312_bstack, rxscan1313_loop2821, rx1312_pos, 0
  rxscan1313_done2823:
    repr_bind_attr_int rx1312_cur, rx1312_curclass, "$!pos", rx1312_pos
    $P11 = rx1312_cur."value"()
    repr_get_attr_int $I11, $P11, rx1312_curclass, "$!pos"
    lt $I11, 0, rx1312_fail2817
    nqp_rxmark rx1312_bstack, rxsubrule1314_pass2824, -1, 0
  rxsubrule1314_pass2824:
    rx1312_cstack = rx1312_cur."!cursor_capture"($P11, "value")
    repr_get_attr_int rx1312_pos, $P11, rx1312_curclass, "$!pos"
    rx1312_cur."!cursor_pass"(rx1312_pos, "term:sym<value>", 'backtrack'=>1)
    .return (rx1312_cur)
  rx1312_restart2816:
    repr_get_attr_obj rx1312_cstack, rx1312_cur, rx1312_curclass, "$!cstack"
  rx1312_fail2817:
    unless rx1312_bstack, rx1312_done2815
    pop $I19, rx1312_bstack
    if_null rx1312_cstack, rx1312_cstack_done2820
    unless rx1312_cstack, rx1312_cstack_done2820
    dec $I19
    set $P11, rx1312_cstack[$I19]
  rx1312_cstack_done2820:
    pop rx1312_rep, rx1312_bstack
    pop rx1312_pos, rx1312_bstack
    pop $I19, rx1312_bstack
    lt rx1312_pos, -1, rx1312_done2815
    lt rx1312_pos, 0, rx1312_fail2817
    eq $I19, 0, rx1312_fail2817
    nqp_islist $I20, rx1312_cstack
    unless $I20, rx1312_jump2818
    elements $I18, rx1312_bstack
    le $I18, 0, rx1312_cut2819
    dec $I18
    set $I18, rx1312_bstack[$I18]
  rx1312_cut2819:
    assign rx1312_cstack, $I18
  rx1312_jump2818:
    jump $I19
  rx1312_done2815:
    rx1312_cur."!cursor_fail"()
    .return (rx1312_cur) 
.end
.HLL "nqp"
.namespace []
.sub "value" :subid("cuid_151_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1255
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1315_start
    .local string rx1315_tgt
    .local int rx1315_pos
    .local int rx1315_off
    .local int rx1315_eos
    .local int rx1315_rep
    .local pmc rx1315_cur
    .local pmc rx1315_curclass
    .local pmc rx1315_bstack
    .local pmc rx1315_cstack
    rx1315_start = self."!cursor_start_all"()
    set rx1315_cur, rx1315_start[0]
    set rx1315_tgt, rx1315_start[1]
    set rx1315_pos, rx1315_start[2]
    set rx1315_curclass, rx1315_start[3]
    set rx1315_bstack, rx1315_start[4]
    set $I19, rx1315_start[5]
    store_lex unicode:"$\x{a2}", rx1315_cur
    length rx1315_eos, rx1315_tgt
    eq $I19, 1, rx1315_restart2827
    gt rx1315_pos, rx1315_eos, rx1315_fail2828
    repr_get_attr_int $I11, self, rx1315_curclass, "$!from"
    ne $I11, -1, rxscan1316_done2834
    goto rxscan1316_scan2833
  rxscan1316_loop2832:
    inc rx1315_pos
    gt rx1315_pos, rx1315_eos, rx1315_fail2828
    repr_bind_attr_int rx1315_cur, rx1315_curclass, "$!from", rx1315_pos
  rxscan1316_scan2833:
    nqp_rxmark rx1315_bstack, rxscan1316_loop2832, rx1315_pos, 0
  rxscan1316_done2834:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1317_02836
    nqp_push_label $P11, alt1317_12838
    nqp_rxmark rx1315_bstack, alt1317_end2835, -1, 0
    rx1315_cur."!alt"(rx1315_pos, "alt_nfa__37_1365879998.093", $P11)
    goto rx1315_fail2828
  alt1317_02836:
    repr_bind_attr_int rx1315_cur, rx1315_curclass, "$!pos", rx1315_pos
    $P11 = rx1315_cur."quote"()
    repr_get_attr_int $I11, $P11, rx1315_curclass, "$!pos"
    lt $I11, 0, rx1315_fail2828
    nqp_rxmark rx1315_bstack, rxsubrule1318_pass2837, -1, 0
  rxsubrule1318_pass2837:
    rx1315_cstack = rx1315_cur."!cursor_capture"($P11, "quote")
    repr_get_attr_int rx1315_pos, $P11, rx1315_curclass, "$!pos"
    goto alt1317_end2835
  alt1317_12838:
    repr_bind_attr_int rx1315_cur, rx1315_curclass, "$!pos", rx1315_pos
    $P11 = rx1315_cur."number"()
    repr_get_attr_int $I11, $P11, rx1315_curclass, "$!pos"
    lt $I11, 0, rx1315_fail2828
    nqp_rxmark rx1315_bstack, rxsubrule1319_pass2839, -1, 0
  rxsubrule1319_pass2839:
    rx1315_cstack = rx1315_cur."!cursor_capture"($P11, "number")
    repr_get_attr_int rx1315_pos, $P11, rx1315_curclass, "$!pos"
    goto alt1317_end2835
  alt1317_end2835:
    rx1315_cur."!cursor_pass"(rx1315_pos, "value", 'backtrack'=>1)
    .return (rx1315_cur)
  rx1315_restart2827:
    repr_get_attr_obj rx1315_cstack, rx1315_cur, rx1315_curclass, "$!cstack"
  rx1315_fail2828:
    unless rx1315_bstack, rx1315_done2826
    pop $I19, rx1315_bstack
    if_null rx1315_cstack, rx1315_cstack_done2831
    unless rx1315_cstack, rx1315_cstack_done2831
    dec $I19
    set $P11, rx1315_cstack[$I19]
  rx1315_cstack_done2831:
    pop rx1315_rep, rx1315_bstack
    pop rx1315_pos, rx1315_bstack
    pop $I19, rx1315_bstack
    lt rx1315_pos, -1, rx1315_done2826
    lt rx1315_pos, 0, rx1315_fail2828
    eq $I19, 0, rx1315_fail2828
    nqp_islist $I20, rx1315_cstack
    unless $I20, rx1315_jump2829
    elements $I18, rx1315_bstack
    le $I18, 0, rx1315_cut2830
    dec $I18
    set $I18, rx1315_bstack[$I18]
  rx1315_cut2830:
    assign rx1315_cstack, $I18
  rx1315_jump2829:
    jump $I19
  rx1315_done2826:
    rx1315_cur."!cursor_fail"()
    .return (rx1315_cur) 
.end
.HLL "nqp"
.namespace []
.sub "number" :subid("cuid_152_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1260
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1320_start
    .local string rx1320_tgt
    .local int rx1320_pos
    .local int rx1320_off
    .local int rx1320_eos
    .local int rx1320_rep
    .local pmc rx1320_cur
    .local pmc rx1320_curclass
    .local pmc rx1320_bstack
    .local pmc rx1320_cstack
    rx1320_start = self."!cursor_start_all"()
    set rx1320_cur, rx1320_start[0]
    set rx1320_tgt, rx1320_start[1]
    set rx1320_pos, rx1320_start[2]
    set rx1320_curclass, rx1320_start[3]
    set rx1320_bstack, rx1320_start[4]
    set $I19, rx1320_start[5]
    store_lex unicode:"$\x{a2}", rx1320_cur
    length rx1320_eos, rx1320_tgt
    eq $I19, 1, rx1320_restart2842
    gt rx1320_pos, rx1320_eos, rx1320_fail2843
    repr_get_attr_int $I11, self, rx1320_curclass, "$!from"
    ne $I11, -1, rxscan1321_done2849
    goto rxscan1321_scan2848
  rxscan1321_loop2847:
    inc rx1320_pos
    gt rx1320_pos, rx1320_eos, rx1320_fail2843
    repr_bind_attr_int rx1320_cur, rx1320_curclass, "$!from", rx1320_pos
  rxscan1321_scan2848:
    nqp_rxmark rx1320_bstack, rxscan1321_loop2847, rx1320_pos, 0
  rxscan1321_done2849:
    nqp_rxmark rx1320_bstack, rxcap1322_fail2851, rx1320_pos, 0
    nqp_rxmark rx1320_bstack, rxquantr1323_done2853, rx1320_pos, 0
  rxquantr1323_loop2852:
  alt1324_02855:
    nqp_rxmark rx1320_bstack, alt1324_12856, rx1320_pos, 0
    add $I11, rx1320_pos, 1
    gt $I11, rx1320_eos, rx1320_fail2843
    substr $S10, rx1320_tgt, rx1320_pos, 1
    ne $S10, ucs4:"-", rx1320_fail2843
    add rx1320_pos, 1
    goto alt1324_end2854
  alt1324_12856:
    ge rx1320_pos, rx1320_eos, rx1320_fail2843
    substr $S11, rx1320_tgt, rx1320_pos, 1
    index $I11, ucs4:"+", $S11
    lt $I11, 0, rx1320_fail2843
    inc rx1320_pos
  alt1324_end2854:
    nqp_rxpeek $I19, rx1320_bstack, rxquantr1323_done2853
    inc $I19
    inc $I19
    set rx1320_rep, rx1320_bstack[$I19]
    nqp_rxcommit rx1320_bstack, rxquantr1323_done2853
    inc rx1320_rep
  rxquantr1323_done2853:
    nqp_rxpeek $I19, rx1320_bstack, rxcap1322_fail2851
    inc $I19
    set $I11, rx1320_bstack[$I19]
    repr_bind_attr_int rx1320_cur, rx1320_curclass, "$!pos", rx1320_pos
    $P11 = rx1320_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1320_pos)
    rx1320_cstack = rx1320_cur."!cursor_capture"($P11, "sign")
    goto rxcap1322_done2850
  rxcap1322_fail2851:
    goto rx1320_fail2843
  rxcap1322_done2850:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1325_02858
    nqp_push_label $P11, alt1325_12860
    nqp_rxmark rx1320_bstack, alt1325_end2857, -1, 0
    rx1320_cur."!alt"(rx1320_pos, "alt_nfa__38_1365879998.103", $P11)
    goto rx1320_fail2843
  alt1325_02858:
    repr_bind_attr_int rx1320_cur, rx1320_curclass, "$!pos", rx1320_pos
    $P11 = rx1320_cur."dec_number"()
    repr_get_attr_int $I11, $P11, rx1320_curclass, "$!pos"
    lt $I11, 0, rx1320_fail2843
    nqp_rxmark rx1320_bstack, rxsubrule1326_pass2859, -1, 0
  rxsubrule1326_pass2859:
    rx1320_cstack = rx1320_cur."!cursor_capture"($P11, "dec_number")
    repr_get_attr_int rx1320_pos, $P11, rx1320_curclass, "$!pos"
    goto alt1325_end2857
  alt1325_12860:
    repr_bind_attr_int rx1320_cur, rx1320_curclass, "$!pos", rx1320_pos
    $P11 = rx1320_cur."integer"()
    repr_get_attr_int $I11, $P11, rx1320_curclass, "$!pos"
    lt $I11, 0, rx1320_fail2843
    nqp_rxmark rx1320_bstack, rxsubrule1327_pass2861, -1, 0
  rxsubrule1327_pass2861:
    rx1320_cstack = rx1320_cur."!cursor_capture"($P11, "integer")
    repr_get_attr_int rx1320_pos, $P11, rx1320_curclass, "$!pos"
    goto alt1325_end2857
  alt1325_end2857:
    nqp_rxcommit rx1320_bstack, alt1325_end2857
    rx1320_cur."!cursor_pass"(rx1320_pos, "number", 'backtrack'=>1)
    .return (rx1320_cur)
  rx1320_restart2842:
    repr_get_attr_obj rx1320_cstack, rx1320_cur, rx1320_curclass, "$!cstack"
  rx1320_fail2843:
    unless rx1320_bstack, rx1320_done2841
    pop $I19, rx1320_bstack
    if_null rx1320_cstack, rx1320_cstack_done2846
    unless rx1320_cstack, rx1320_cstack_done2846
    dec $I19
    set $P11, rx1320_cstack[$I19]
  rx1320_cstack_done2846:
    pop rx1320_rep, rx1320_bstack
    pop rx1320_pos, rx1320_bstack
    pop $I19, rx1320_bstack
    lt rx1320_pos, -1, rx1320_done2841
    lt rx1320_pos, 0, rx1320_fail2843
    eq $I19, 0, rx1320_fail2843
    nqp_islist $I20, rx1320_cstack
    unless $I20, rx1320_jump2844
    elements $I18, rx1320_bstack
    le $I18, 0, rx1320_cut2845
    dec $I18
    set $I18, rx1320_bstack[$I18]
  rx1320_cut2845:
    assign rx1320_cstack, $I18
  rx1320_jump2844:
    jump $I19
  rx1320_done2841:
    rx1320_cur."!cursor_fail"()
    .return (rx1320_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote" :subid("cuid_153_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1265
    .param pmc self 
    $P5001 = self."!protoregex"("quote")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<apos>" :subid("cuid_154_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1266
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1328_start
    .local string rx1328_tgt
    .local int rx1328_pos
    .local int rx1328_off
    .local int rx1328_eos
    .local int rx1328_rep
    .local pmc rx1328_cur
    .local pmc rx1328_curclass
    .local pmc rx1328_bstack
    .local pmc rx1328_cstack
    rx1328_start = self."!cursor_start_all"()
    set rx1328_cur, rx1328_start[0]
    set rx1328_tgt, rx1328_start[1]
    set rx1328_pos, rx1328_start[2]
    set rx1328_curclass, rx1328_start[3]
    set rx1328_bstack, rx1328_start[4]
    set $I19, rx1328_start[5]
    store_lex unicode:"$\x{a2}", rx1328_cur
    length rx1328_eos, rx1328_tgt
    eq $I19, 1, rx1328_restart2864
    gt rx1328_pos, rx1328_eos, rx1328_fail2865
    repr_get_attr_int $I11, self, rx1328_curclass, "$!from"
    ne $I11, -1, rxscan1329_done2871
    goto rxscan1329_scan2870
  rxscan1329_loop2869:
    inc rx1328_pos
    gt rx1328_pos, rx1328_eos, rx1328_fail2865
    repr_bind_attr_int rx1328_cur, rx1328_curclass, "$!from", rx1328_pos
  rxscan1329_scan2870:
    nqp_rxmark rx1328_bstack, rxscan1329_loop2869, rx1328_pos, 0
  rxscan1329_done2871:
    ge rx1328_pos, rx1328_eos, rx1328_fail2865
    substr $S11, rx1328_tgt, rx1328_pos, 1
    index $I11, ucs4:"'", $S11
    lt $I11, 0, rx1328_fail2865
    repr_bind_attr_int rx1328_cur, rx1328_curclass, "$!pos", rx1328_pos
    $P11 = rx1328_cur."quote_EXPR"(":q")
    repr_get_attr_int $I11, $P11, rx1328_curclass, "$!pos"
    lt $I11, 0, rx1328_fail2865
    nqp_rxmark rx1328_bstack, rxsubrule1330_pass2872, -1, 0
  rxsubrule1330_pass2872:
    rx1328_cstack = rx1328_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1328_pos, $P11, rx1328_curclass, "$!pos"
    rx1328_cur."!cursor_pass"(rx1328_pos, "quote:sym<apos>", 'backtrack'=>1)
    .return (rx1328_cur)
  rx1328_restart2864:
    repr_get_attr_obj rx1328_cstack, rx1328_cur, rx1328_curclass, "$!cstack"
  rx1328_fail2865:
    unless rx1328_bstack, rx1328_done2863
    pop $I19, rx1328_bstack
    if_null rx1328_cstack, rx1328_cstack_done2868
    unless rx1328_cstack, rx1328_cstack_done2868
    dec $I19
    set $P11, rx1328_cstack[$I19]
  rx1328_cstack_done2868:
    pop rx1328_rep, rx1328_bstack
    pop rx1328_pos, rx1328_bstack
    pop $I19, rx1328_bstack
    lt rx1328_pos, -1, rx1328_done2863
    lt rx1328_pos, 0, rx1328_fail2865
    eq $I19, 0, rx1328_fail2865
    nqp_islist $I20, rx1328_cstack
    unless $I20, rx1328_jump2866
    elements $I18, rx1328_bstack
    le $I18, 0, rx1328_cut2867
    dec $I18
    set $I18, rx1328_bstack[$I18]
  rx1328_cut2867:
    assign rx1328_cstack, $I18
  rx1328_jump2866:
    jump $I19
  rx1328_done2863:
    rx1328_cur."!cursor_fail"()
    .return (rx1328_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<dblq>" :subid("cuid_155_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1267
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1331_start
    .local string rx1331_tgt
    .local int rx1331_pos
    .local int rx1331_off
    .local int rx1331_eos
    .local int rx1331_rep
    .local pmc rx1331_cur
    .local pmc rx1331_curclass
    .local pmc rx1331_bstack
    .local pmc rx1331_cstack
    rx1331_start = self."!cursor_start_all"()
    set rx1331_cur, rx1331_start[0]
    set rx1331_tgt, rx1331_start[1]
    set rx1331_pos, rx1331_start[2]
    set rx1331_curclass, rx1331_start[3]
    set rx1331_bstack, rx1331_start[4]
    set $I19, rx1331_start[5]
    store_lex unicode:"$\x{a2}", rx1331_cur
    length rx1331_eos, rx1331_tgt
    eq $I19, 1, rx1331_restart2875
    gt rx1331_pos, rx1331_eos, rx1331_fail2876
    repr_get_attr_int $I11, self, rx1331_curclass, "$!from"
    ne $I11, -1, rxscan1332_done2882
    goto rxscan1332_scan2881
  rxscan1332_loop2880:
    inc rx1331_pos
    gt rx1331_pos, rx1331_eos, rx1331_fail2876
    repr_bind_attr_int rx1331_cur, rx1331_curclass, "$!from", rx1331_pos
  rxscan1332_scan2881:
    nqp_rxmark rx1331_bstack, rxscan1332_loop2880, rx1331_pos, 0
  rxscan1332_done2882:
    ge rx1331_pos, rx1331_eos, rx1331_fail2876
    substr $S11, rx1331_tgt, rx1331_pos, 1
    index $I11, ucs4:"\"", $S11
    lt $I11, 0, rx1331_fail2876
    repr_bind_attr_int rx1331_cur, rx1331_curclass, "$!pos", rx1331_pos
    $P11 = rx1331_cur."quote_EXPR"(":qq")
    repr_get_attr_int $I11, $P11, rx1331_curclass, "$!pos"
    lt $I11, 0, rx1331_fail2876
    nqp_rxmark rx1331_bstack, rxsubrule1333_pass2883, -1, 0
  rxsubrule1333_pass2883:
    rx1331_cstack = rx1331_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1331_pos, $P11, rx1331_curclass, "$!pos"
    rx1331_cur."!cursor_pass"(rx1331_pos, "quote:sym<dblq>", 'backtrack'=>1)
    .return (rx1331_cur)
  rx1331_restart2875:
    repr_get_attr_obj rx1331_cstack, rx1331_cur, rx1331_curclass, "$!cstack"
  rx1331_fail2876:
    unless rx1331_bstack, rx1331_done2874
    pop $I19, rx1331_bstack
    if_null rx1331_cstack, rx1331_cstack_done2879
    unless rx1331_cstack, rx1331_cstack_done2879
    dec $I19
    set $P11, rx1331_cstack[$I19]
  rx1331_cstack_done2879:
    pop rx1331_rep, rx1331_bstack
    pop rx1331_pos, rx1331_bstack
    pop $I19, rx1331_bstack
    lt rx1331_pos, -1, rx1331_done2874
    lt rx1331_pos, 0, rx1331_fail2876
    eq $I19, 0, rx1331_fail2876
    nqp_islist $I20, rx1331_cstack
    unless $I20, rx1331_jump2877
    elements $I18, rx1331_bstack
    le $I18, 0, rx1331_cut2878
    dec $I18
    set $I18, rx1331_bstack[$I18]
  rx1331_cut2878:
    assign rx1331_cstack, $I18
  rx1331_jump2877:
    jump $I19
  rx1331_done2874:
    rx1331_cur."!cursor_fail"()
    .return (rx1331_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<q>" :subid("cuid_156_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1268
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1334_start
    .local string rx1334_tgt
    .local int rx1334_pos
    .local int rx1334_off
    .local int rx1334_eos
    .local int rx1334_rep
    .local pmc rx1334_cur
    .local pmc rx1334_curclass
    .local pmc rx1334_bstack
    .local pmc rx1334_cstack
    rx1334_start = self."!cursor_start_all"()
    set rx1334_cur, rx1334_start[0]
    set rx1334_tgt, rx1334_start[1]
    set rx1334_pos, rx1334_start[2]
    set rx1334_curclass, rx1334_start[3]
    set rx1334_bstack, rx1334_start[4]
    set $I19, rx1334_start[5]
    store_lex unicode:"$\x{a2}", rx1334_cur
    length rx1334_eos, rx1334_tgt
    eq $I19, 1, rx1334_restart2886
    gt rx1334_pos, rx1334_eos, rx1334_fail2887
    repr_get_attr_int $I11, self, rx1334_curclass, "$!from"
    ne $I11, -1, rxscan1335_done2893
    goto rxscan1335_scan2892
  rxscan1335_loop2891:
    inc rx1334_pos
    gt rx1334_pos, rx1334_eos, rx1334_fail2887
    repr_bind_attr_int rx1334_cur, rx1334_curclass, "$!from", rx1334_pos
  rxscan1335_scan2892:
    nqp_rxmark rx1334_bstack, rxscan1335_loop2891, rx1334_pos, 0
  rxscan1335_done2893:
    nqp_rxmark rx1334_bstack, rxcap1336_fail2895, rx1334_pos, 0
    add $I11, rx1334_pos, 1
    gt $I11, rx1334_eos, rx1334_fail2887
    substr $S10, rx1334_tgt, rx1334_pos, 1
    ne $S10, ucs4:"q", rx1334_fail2887
    add rx1334_pos, 1
    nqp_rxpeek $I19, rx1334_bstack, rxcap1336_fail2895
    inc $I19
    set $I11, rx1334_bstack[$I19]
    repr_bind_attr_int rx1334_cur, rx1334_curclass, "$!pos", rx1334_pos
    $P11 = rx1334_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1334_pos)
    rx1334_cstack = rx1334_cur."!cursor_capture"($P11, "sym")
    goto rxcap1336_done2894
  rxcap1336_fail2895:
    goto rx1334_fail2887
  rxcap1336_done2894:
    le rx1334_pos, 0, rx1334_fail2887
    is_cclass $I11, .CCLASS_WORD, rx1334_tgt, rx1334_pos
    if $I11, rx1334_fail2887
    sub $I11, rx1334_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx1334_tgt, $I11
    unless $I11, rx1334_fail2887
    ge rx1334_pos, rx1334_eos, rx1334_fail2887
    substr $S11, rx1334_tgt, rx1334_pos, 1
    index $I11, ucs4:"(", $S11
    ge $I11, 0, rx1334_fail2887
    repr_bind_attr_int rx1334_cur, rx1334_curclass, "$!pos", rx1334_pos
    $P11 = rx1334_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1334_curclass, "$!pos"
    lt $I11, 0, rx1334_fail2887
    repr_get_attr_int rx1334_pos, $P11, rx1334_curclass, "$!pos"
    repr_bind_attr_int rx1334_cur, rx1334_curclass, "$!pos", rx1334_pos
    $P11 = rx1334_cur."quote_EXPR"(":q")
    repr_get_attr_int $I11, $P11, rx1334_curclass, "$!pos"
    lt $I11, 0, rx1334_fail2887
    nqp_rxmark rx1334_bstack, rxsubrule1339_pass2898, -1, 0
  rxsubrule1339_pass2898:
    rx1334_cstack = rx1334_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1334_pos, $P11, rx1334_curclass, "$!pos"
    rx1334_cur."!cursor_pass"(rx1334_pos, "quote:sym<q>", 'backtrack'=>1)
    .return (rx1334_cur)
  rx1334_restart2886:
    repr_get_attr_obj rx1334_cstack, rx1334_cur, rx1334_curclass, "$!cstack"
  rx1334_fail2887:
    unless rx1334_bstack, rx1334_done2885
    pop $I19, rx1334_bstack
    if_null rx1334_cstack, rx1334_cstack_done2890
    unless rx1334_cstack, rx1334_cstack_done2890
    dec $I19
    set $P11, rx1334_cstack[$I19]
  rx1334_cstack_done2890:
    pop rx1334_rep, rx1334_bstack
    pop rx1334_pos, rx1334_bstack
    pop $I19, rx1334_bstack
    lt rx1334_pos, -1, rx1334_done2885
    lt rx1334_pos, 0, rx1334_fail2887
    eq $I19, 0, rx1334_fail2887
    nqp_islist $I20, rx1334_cstack
    unless $I20, rx1334_jump2888
    elements $I18, rx1334_bstack
    le $I18, 0, rx1334_cut2889
    dec $I18
    set $I18, rx1334_bstack[$I18]
  rx1334_cut2889:
    assign rx1334_cstack, $I18
  rx1334_jump2888:
    jump $I19
  rx1334_done2885:
    rx1334_cur."!cursor_fail"()
    .return (rx1334_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<qq>" :subid("cuid_157_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1269
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1340_start
    .local string rx1340_tgt
    .local int rx1340_pos
    .local int rx1340_off
    .local int rx1340_eos
    .local int rx1340_rep
    .local pmc rx1340_cur
    .local pmc rx1340_curclass
    .local pmc rx1340_bstack
    .local pmc rx1340_cstack
    rx1340_start = self."!cursor_start_all"()
    set rx1340_cur, rx1340_start[0]
    set rx1340_tgt, rx1340_start[1]
    set rx1340_pos, rx1340_start[2]
    set rx1340_curclass, rx1340_start[3]
    set rx1340_bstack, rx1340_start[4]
    set $I19, rx1340_start[5]
    store_lex unicode:"$\x{a2}", rx1340_cur
    length rx1340_eos, rx1340_tgt
    eq $I19, 1, rx1340_restart2901
    gt rx1340_pos, rx1340_eos, rx1340_fail2902
    repr_get_attr_int $I11, self, rx1340_curclass, "$!from"
    ne $I11, -1, rxscan1341_done2908
    goto rxscan1341_scan2907
  rxscan1341_loop2906:
    inc rx1340_pos
    gt rx1340_pos, rx1340_eos, rx1340_fail2902
    repr_bind_attr_int rx1340_cur, rx1340_curclass, "$!from", rx1340_pos
  rxscan1341_scan2907:
    nqp_rxmark rx1340_bstack, rxscan1341_loop2906, rx1340_pos, 0
  rxscan1341_done2908:
    nqp_rxmark rx1340_bstack, rxcap1342_fail2910, rx1340_pos, 0
    add $I11, rx1340_pos, 2
    gt $I11, rx1340_eos, rx1340_fail2902
    substr $S10, rx1340_tgt, rx1340_pos, 2
    ne $S10, ucs4:"qq", rx1340_fail2902
    add rx1340_pos, 2
    nqp_rxpeek $I19, rx1340_bstack, rxcap1342_fail2910
    inc $I19
    set $I11, rx1340_bstack[$I19]
    repr_bind_attr_int rx1340_cur, rx1340_curclass, "$!pos", rx1340_pos
    $P11 = rx1340_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1340_pos)
    rx1340_cstack = rx1340_cur."!cursor_capture"($P11, "sym")
    goto rxcap1342_done2909
  rxcap1342_fail2910:
    goto rx1340_fail2902
  rxcap1342_done2909:
    le rx1340_pos, 0, rx1340_fail2902
    is_cclass $I11, .CCLASS_WORD, rx1340_tgt, rx1340_pos
    if $I11, rx1340_fail2902
    sub $I11, rx1340_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx1340_tgt, $I11
    unless $I11, rx1340_fail2902
    ge rx1340_pos, rx1340_eos, rx1340_fail2902
    substr $S11, rx1340_tgt, rx1340_pos, 1
    index $I11, ucs4:"(", $S11
    ge $I11, 0, rx1340_fail2902
    repr_bind_attr_int rx1340_cur, rx1340_curclass, "$!pos", rx1340_pos
    $P11 = rx1340_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1340_curclass, "$!pos"
    lt $I11, 0, rx1340_fail2902
    repr_get_attr_int rx1340_pos, $P11, rx1340_curclass, "$!pos"
    repr_bind_attr_int rx1340_cur, rx1340_curclass, "$!pos", rx1340_pos
    $P11 = rx1340_cur."quote_EXPR"(":qq")
    repr_get_attr_int $I11, $P11, rx1340_curclass, "$!pos"
    lt $I11, 0, rx1340_fail2902
    nqp_rxmark rx1340_bstack, rxsubrule1345_pass2913, -1, 0
  rxsubrule1345_pass2913:
    rx1340_cstack = rx1340_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1340_pos, $P11, rx1340_curclass, "$!pos"
    rx1340_cur."!cursor_pass"(rx1340_pos, "quote:sym<qq>", 'backtrack'=>1)
    .return (rx1340_cur)
  rx1340_restart2901:
    repr_get_attr_obj rx1340_cstack, rx1340_cur, rx1340_curclass, "$!cstack"
  rx1340_fail2902:
    unless rx1340_bstack, rx1340_done2900
    pop $I19, rx1340_bstack
    if_null rx1340_cstack, rx1340_cstack_done2905
    unless rx1340_cstack, rx1340_cstack_done2905
    dec $I19
    set $P11, rx1340_cstack[$I19]
  rx1340_cstack_done2905:
    pop rx1340_rep, rx1340_bstack
    pop rx1340_pos, rx1340_bstack
    pop $I19, rx1340_bstack
    lt rx1340_pos, -1, rx1340_done2900
    lt rx1340_pos, 0, rx1340_fail2902
    eq $I19, 0, rx1340_fail2902
    nqp_islist $I20, rx1340_cstack
    unless $I20, rx1340_jump2903
    elements $I18, rx1340_bstack
    le $I18, 0, rx1340_cut2904
    dec $I18
    set $I18, rx1340_bstack[$I18]
  rx1340_cut2904:
    assign rx1340_cstack, $I18
  rx1340_jump2903:
    jump $I19
  rx1340_done2900:
    rx1340_cur."!cursor_fail"()
    .return (rx1340_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<Q>" :subid("cuid_158_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1270
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1346_start
    .local string rx1346_tgt
    .local int rx1346_pos
    .local int rx1346_off
    .local int rx1346_eos
    .local int rx1346_rep
    .local pmc rx1346_cur
    .local pmc rx1346_curclass
    .local pmc rx1346_bstack
    .local pmc rx1346_cstack
    rx1346_start = self."!cursor_start_all"()
    set rx1346_cur, rx1346_start[0]
    set rx1346_tgt, rx1346_start[1]
    set rx1346_pos, rx1346_start[2]
    set rx1346_curclass, rx1346_start[3]
    set rx1346_bstack, rx1346_start[4]
    set $I19, rx1346_start[5]
    store_lex unicode:"$\x{a2}", rx1346_cur
    length rx1346_eos, rx1346_tgt
    eq $I19, 1, rx1346_restart2916
    gt rx1346_pos, rx1346_eos, rx1346_fail2917
    repr_get_attr_int $I11, self, rx1346_curclass, "$!from"
    ne $I11, -1, rxscan1347_done2923
    goto rxscan1347_scan2922
  rxscan1347_loop2921:
    inc rx1346_pos
    gt rx1346_pos, rx1346_eos, rx1346_fail2917
    repr_bind_attr_int rx1346_cur, rx1346_curclass, "$!from", rx1346_pos
  rxscan1347_scan2922:
    nqp_rxmark rx1346_bstack, rxscan1347_loop2921, rx1346_pos, 0
  rxscan1347_done2923:
    nqp_rxmark rx1346_bstack, rxcap1348_fail2925, rx1346_pos, 0
    add $I11, rx1346_pos, 1
    gt $I11, rx1346_eos, rx1346_fail2917
    substr $S10, rx1346_tgt, rx1346_pos, 1
    ne $S10, ucs4:"Q", rx1346_fail2917
    add rx1346_pos, 1
    nqp_rxpeek $I19, rx1346_bstack, rxcap1348_fail2925
    inc $I19
    set $I11, rx1346_bstack[$I19]
    repr_bind_attr_int rx1346_cur, rx1346_curclass, "$!pos", rx1346_pos
    $P11 = rx1346_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1346_pos)
    rx1346_cstack = rx1346_cur."!cursor_capture"($P11, "sym")
    goto rxcap1348_done2924
  rxcap1348_fail2925:
    goto rx1346_fail2917
  rxcap1348_done2924:
    le rx1346_pos, 0, rx1346_fail2917
    is_cclass $I11, .CCLASS_WORD, rx1346_tgt, rx1346_pos
    if $I11, rx1346_fail2917
    sub $I11, rx1346_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx1346_tgt, $I11
    unless $I11, rx1346_fail2917
    ge rx1346_pos, rx1346_eos, rx1346_fail2917
    substr $S11, rx1346_tgt, rx1346_pos, 1
    index $I11, ucs4:"(", $S11
    ge $I11, 0, rx1346_fail2917
    repr_bind_attr_int rx1346_cur, rx1346_curclass, "$!pos", rx1346_pos
    $P11 = rx1346_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1346_curclass, "$!pos"
    lt $I11, 0, rx1346_fail2917
    repr_get_attr_int rx1346_pos, $P11, rx1346_curclass, "$!pos"
    repr_bind_attr_int rx1346_cur, rx1346_curclass, "$!pos", rx1346_pos
    $P11 = rx1346_cur."quote_EXPR"()
    repr_get_attr_int $I11, $P11, rx1346_curclass, "$!pos"
    lt $I11, 0, rx1346_fail2917
    nqp_rxmark rx1346_bstack, rxsubrule1351_pass2928, -1, 0
  rxsubrule1351_pass2928:
    rx1346_cstack = rx1346_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1346_pos, $P11, rx1346_curclass, "$!pos"
    rx1346_cur."!cursor_pass"(rx1346_pos, "quote:sym<Q>", 'backtrack'=>1)
    .return (rx1346_cur)
  rx1346_restart2916:
    repr_get_attr_obj rx1346_cstack, rx1346_cur, rx1346_curclass, "$!cstack"
  rx1346_fail2917:
    unless rx1346_bstack, rx1346_done2915
    pop $I19, rx1346_bstack
    if_null rx1346_cstack, rx1346_cstack_done2920
    unless rx1346_cstack, rx1346_cstack_done2920
    dec $I19
    set $P11, rx1346_cstack[$I19]
  rx1346_cstack_done2920:
    pop rx1346_rep, rx1346_bstack
    pop rx1346_pos, rx1346_bstack
    pop $I19, rx1346_bstack
    lt rx1346_pos, -1, rx1346_done2915
    lt rx1346_pos, 0, rx1346_fail2917
    eq $I19, 0, rx1346_fail2917
    nqp_islist $I20, rx1346_cstack
    unless $I20, rx1346_jump2918
    elements $I18, rx1346_bstack
    le $I18, 0, rx1346_cut2919
    dec $I18
    set $I18, rx1346_bstack[$I18]
  rx1346_cut2919:
    assign rx1346_cstack, $I18
  rx1346_jump2918:
    jump $I19
  rx1346_done2915:
    rx1346_cur."!cursor_fail"()
    .return (rx1346_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<Q:PIR>" :subid("cuid_159_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1271
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1352_start
    .local string rx1352_tgt
    .local int rx1352_pos
    .local int rx1352_off
    .local int rx1352_eos
    .local int rx1352_rep
    .local pmc rx1352_cur
    .local pmc rx1352_curclass
    .local pmc rx1352_bstack
    .local pmc rx1352_cstack
    rx1352_start = self."!cursor_start_all"()
    set rx1352_cur, rx1352_start[0]
    set rx1352_tgt, rx1352_start[1]
    set rx1352_pos, rx1352_start[2]
    set rx1352_curclass, rx1352_start[3]
    set rx1352_bstack, rx1352_start[4]
    set $I19, rx1352_start[5]
    store_lex unicode:"$\x{a2}", rx1352_cur
    length rx1352_eos, rx1352_tgt
    eq $I19, 1, rx1352_restart2931
    gt rx1352_pos, rx1352_eos, rx1352_fail2932
    repr_get_attr_int $I11, self, rx1352_curclass, "$!from"
    ne $I11, -1, rxscan1353_done2938
    goto rxscan1353_scan2937
  rxscan1353_loop2936:
    inc rx1352_pos
    gt rx1352_pos, rx1352_eos, rx1352_fail2932
    repr_bind_attr_int rx1352_cur, rx1352_curclass, "$!from", rx1352_pos
  rxscan1353_scan2937:
    nqp_rxmark rx1352_bstack, rxscan1353_loop2936, rx1352_pos, 0
  rxscan1353_done2938:
    nqp_rxmark rx1352_bstack, rxcap1354_fail2940, rx1352_pos, 0
    add $I11, rx1352_pos, 5
    gt $I11, rx1352_eos, rx1352_fail2932
    substr $S10, rx1352_tgt, rx1352_pos, 5
    ne $S10, ucs4:"Q:PIR", rx1352_fail2932
    add rx1352_pos, 5
    nqp_rxpeek $I19, rx1352_bstack, rxcap1354_fail2940
    inc $I19
    set $I11, rx1352_bstack[$I19]
    repr_bind_attr_int rx1352_cur, rx1352_curclass, "$!pos", rx1352_pos
    $P11 = rx1352_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1352_pos)
    rx1352_cstack = rx1352_cur."!cursor_capture"($P11, "sym")
    goto rxcap1354_done2939
  rxcap1354_fail2940:
    goto rx1352_fail2932
  rxcap1354_done2939:
    repr_bind_attr_int rx1352_cur, rx1352_curclass, "$!pos", rx1352_pos
    $P11 = rx1352_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1352_curclass, "$!pos"
    lt $I11, 0, rx1352_fail2932
    repr_get_attr_int rx1352_pos, $P11, rx1352_curclass, "$!pos"
    repr_bind_attr_int rx1352_cur, rx1352_curclass, "$!pos", rx1352_pos
    $P11 = rx1352_cur."quote_EXPR"()
    repr_get_attr_int $I11, $P11, rx1352_curclass, "$!pos"
    lt $I11, 0, rx1352_fail2932
    nqp_rxmark rx1352_bstack, rxsubrule1356_pass2942, -1, 0
  rxsubrule1356_pass2942:
    rx1352_cstack = rx1352_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1352_pos, $P11, rx1352_curclass, "$!pos"
    rx1352_cur."!cursor_pass"(rx1352_pos, "quote:sym<Q:PIR>", 'backtrack'=>1)
    .return (rx1352_cur)
  rx1352_restart2931:
    repr_get_attr_obj rx1352_cstack, rx1352_cur, rx1352_curclass, "$!cstack"
  rx1352_fail2932:
    unless rx1352_bstack, rx1352_done2930
    pop $I19, rx1352_bstack
    if_null rx1352_cstack, rx1352_cstack_done2935
    unless rx1352_cstack, rx1352_cstack_done2935
    dec $I19
    set $P11, rx1352_cstack[$I19]
  rx1352_cstack_done2935:
    pop rx1352_rep, rx1352_bstack
    pop rx1352_pos, rx1352_bstack
    pop $I19, rx1352_bstack
    lt rx1352_pos, -1, rx1352_done2930
    lt rx1352_pos, 0, rx1352_fail2932
    eq $I19, 0, rx1352_fail2932
    nqp_islist $I20, rx1352_cstack
    unless $I20, rx1352_jump2933
    elements $I18, rx1352_bstack
    le $I18, 0, rx1352_cut2934
    dec $I18
    set $I18, rx1352_bstack[$I18]
  rx1352_cut2934:
    assign rx1352_cstack, $I18
  rx1352_jump2933:
    jump $I19
  rx1352_done2930:
    rx1352_cur."!cursor_fail"()
    .return (rx1352_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym</ />" :subid("cuid_160_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1272
    .param pmc _lex_param_0 
    .lex "%*RX", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_163 
    .local pmc pkg_viv_tmp_29 
    new $P5001, 'Hash'
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1357_start
    .local string rx1357_tgt
    .local int rx1357_pos
    .local int rx1357_off
    .local int rx1357_eos
    .local int rx1357_rep
    .local pmc rx1357_cur
    .local pmc rx1357_curclass
    .local pmc rx1357_bstack
    .local pmc rx1357_cstack
    rx1357_start = self."!cursor_start_all"()
    set rx1357_cur, rx1357_start[0]
    set rx1357_tgt, rx1357_start[1]
    set rx1357_pos, rx1357_start[2]
    set rx1357_curclass, rx1357_start[3]
    set rx1357_bstack, rx1357_start[4]
    set $I19, rx1357_start[5]
    store_lex unicode:"$\x{a2}", rx1357_cur
    length rx1357_eos, rx1357_tgt
    eq $I19, 1, rx1357_restart2945
    gt rx1357_pos, rx1357_eos, rx1357_fail2946
    repr_get_attr_int $I11, self, rx1357_curclass, "$!from"
    ne $I11, -1, rxscan1358_done2952
    goto rxscan1358_scan2951
  rxscan1358_loop2950:
    inc rx1357_pos
    gt rx1357_pos, rx1357_eos, rx1357_fail2946
    repr_bind_attr_int rx1357_cur, rx1357_curclass, "$!from", rx1357_pos
  rxscan1358_scan2951:
    nqp_rxmark rx1357_bstack, rxscan1358_loop2950, rx1357_pos, 0
  rxscan1358_done2952:
    add $I11, rx1357_pos, 1
    gt $I11, rx1357_eos, rx1357_fail2946
    substr $S10, rx1357_tgt, rx1357_pos, 1
    ne $S10, ucs4:"/", rx1357_fail2946
    add rx1357_pos, 1
    repr_bind_attr_int rx1357_cur, rx1357_curclass, "$!pos", rx1357_pos
    $P11 = rx1357_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx1357_curclass, "$!pos"
    lt $I11, 0, rx1357_fail2946
    repr_get_attr_int rx1357_pos, $P11, rx1357_curclass, "$!pos"
    repr_bind_attr_int rx1357_cur, rx1357_curclass, "$!pos", rx1357_pos
    store_lex unicode:"$\x{a2}", rx1357_cur
    unless_null $P101, fallback2954
    nqp_get_sc_object $P5003, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_29, $P5002
    set fb_tmp_163, pkg_viv_tmp_29
    repr_defined $I5001, fb_tmp_163
    unless $I5001 goto if1360_else2955 
    set $P5004, fb_tmp_163["%RX"]
    set $P5006, $P5004
    goto if1360_end2956
  if1360_else2955:
    null $P5005
    set $P5006, $P5005
  if1360_end2956:
    unless_null $P5006, vivi_13612957
    new $P5007, 'Hash'
    set pkg_viv_tmp_29["%RX"], $P5007
    set $P5006, $P5007
  vivi_13612957:
    unless_null $P5006, vivi_13622958
    die "Contextual %*RX not found"
    box $P5008, "Contextual %*RX not found"
    set $P5006, $P5008
  vivi_13622958:
    set $P101, $P5006
  fallback2954:
    repr_bind_attr_int rx1357_cur, rx1357_curclass, "$!pos", rx1357_pos
    $P11 = rx1357_cur."LANG"("Regex", "nibbler")
    repr_get_attr_int $I11, $P11, rx1357_curclass, "$!pos"
    lt $I11, 0, rx1357_fail2946
    nqp_rxmark rx1357_bstack, rxsubrule1363_pass2959, -1, 0
  rxsubrule1363_pass2959:
    rx1357_cstack = rx1357_cur."!cursor_capture"($P11, "p6regex")
    repr_get_attr_int rx1357_pos, $P11, rx1357_curclass, "$!pos"
    add $I11, rx1357_pos, 1
    gt $I11, rx1357_eos, rx1357_fail2946
    substr $S10, rx1357_tgt, rx1357_pos, 1
    ne $S10, ucs4:"/", rx1357_fail2946
    add rx1357_pos, 1
    rx1357_cur."!cursor_pass"(rx1357_pos, "quote:sym</ />", 'backtrack'=>1)
    .return (rx1357_cur)
  rx1357_restart2945:
    repr_get_attr_obj rx1357_cstack, rx1357_cur, rx1357_curclass, "$!cstack"
  rx1357_fail2946:
    unless rx1357_bstack, rx1357_done2944
    pop $I19, rx1357_bstack
    if_null rx1357_cstack, rx1357_cstack_done2949
    unless rx1357_cstack, rx1357_cstack_done2949
    dec $I19
    set $P11, rx1357_cstack[$I19]
  rx1357_cstack_done2949:
    pop rx1357_rep, rx1357_bstack
    pop rx1357_pos, rx1357_bstack
    pop $I19, rx1357_bstack
    lt rx1357_pos, -1, rx1357_done2944
    lt rx1357_pos, 0, rx1357_fail2946
    eq $I19, 0, rx1357_fail2946
    nqp_islist $I20, rx1357_cstack
    unless $I20, rx1357_jump2947
    elements $I18, rx1357_bstack
    le $I18, 0, rx1357_cut2948
    dec $I18
    set $I18, rx1357_bstack[$I18]
  rx1357_cut2948:
    assign rx1357_cstack, $I18
  rx1357_jump2947:
    jump $I19
  rx1357_done2944:
    rx1357_cur."!cursor_fail"()
    .return (rx1357_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<$>" :subid("cuid_161_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1280
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1364_start
    .local string rx1364_tgt
    .local int rx1364_pos
    .local int rx1364_off
    .local int rx1364_eos
    .local int rx1364_rep
    .local pmc rx1364_cur
    .local pmc rx1364_curclass
    .local pmc rx1364_bstack
    .local pmc rx1364_cstack
    rx1364_start = self."!cursor_start_all"()
    set rx1364_cur, rx1364_start[0]
    set rx1364_tgt, rx1364_start[1]
    set rx1364_pos, rx1364_start[2]
    set rx1364_curclass, rx1364_start[3]
    set rx1364_bstack, rx1364_start[4]
    set $I19, rx1364_start[5]
    store_lex unicode:"$\x{a2}", rx1364_cur
    length rx1364_eos, rx1364_tgt
    eq $I19, 1, rx1364_restart2962
    gt rx1364_pos, rx1364_eos, rx1364_fail2963
    repr_get_attr_int $I11, self, rx1364_curclass, "$!from"
    ne $I11, -1, rxscan1365_done2969
    goto rxscan1365_scan2968
  rxscan1365_loop2967:
    inc rx1364_pos
    gt rx1364_pos, rx1364_eos, rx1364_fail2963
    repr_bind_attr_int rx1364_cur, rx1364_curclass, "$!from", rx1364_pos
  rxscan1365_scan2968:
    nqp_rxmark rx1364_bstack, rxscan1365_loop2967, rx1364_pos, 0
  rxscan1365_done2969:
    ge rx1364_pos, rx1364_eos, rx1364_fail2963
    substr $S11, rx1364_tgt, rx1364_pos, 1
    index $I11, ucs4:"$", $S11
    lt $I11, 0, rx1364_fail2963
    repr_bind_attr_int rx1364_cur, rx1364_curclass, "$!pos", rx1364_pos
    $P11 = rx1364_cur."quotemod_check"("s")
    repr_get_attr_int $I11, $P11, rx1364_curclass, "$!pos"
    lt $I11, 0, rx1364_fail2963
    repr_bind_attr_int rx1364_cur, rx1364_curclass, "$!pos", rx1364_pos
    $P11 = rx1364_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1364_curclass, "$!pos"
    lt $I11, 0, rx1364_fail2963
    nqp_rxmark rx1364_bstack, rxsubrule1366_pass2970, -1, 0
  rxsubrule1366_pass2970:
    rx1364_cstack = rx1364_cur."!cursor_capture"($P11, "variable")
    repr_get_attr_int rx1364_pos, $P11, rx1364_curclass, "$!pos"
    rx1364_cur."!cursor_pass"(rx1364_pos, "quote_escape:sym<$>", 'backtrack'=>1)
    .return (rx1364_cur)
  rx1364_restart2962:
    repr_get_attr_obj rx1364_cstack, rx1364_cur, rx1364_curclass, "$!cstack"
  rx1364_fail2963:
    unless rx1364_bstack, rx1364_done2961
    pop $I19, rx1364_bstack
    if_null rx1364_cstack, rx1364_cstack_done2966
    unless rx1364_cstack, rx1364_cstack_done2966
    dec $I19
    set $P11, rx1364_cstack[$I19]
  rx1364_cstack_done2966:
    pop rx1364_rep, rx1364_bstack
    pop rx1364_pos, rx1364_bstack
    pop $I19, rx1364_bstack
    lt rx1364_pos, -1, rx1364_done2961
    lt rx1364_pos, 0, rx1364_fail2963
    eq $I19, 0, rx1364_fail2963
    nqp_islist $I20, rx1364_cstack
    unless $I20, rx1364_jump2964
    elements $I18, rx1364_bstack
    le $I18, 0, rx1364_cut2965
    dec $I18
    set $I18, rx1364_bstack[$I18]
  rx1364_cut2965:
    assign rx1364_cstack, $I18
  rx1364_jump2964:
    jump $I19
  rx1364_done2961:
    rx1364_cur."!cursor_fail"()
    .return (rx1364_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<{ }>" :subid("cuid_162_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1281
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1367_start
    .local string rx1367_tgt
    .local int rx1367_pos
    .local int rx1367_off
    .local int rx1367_eos
    .local int rx1367_rep
    .local pmc rx1367_cur
    .local pmc rx1367_curclass
    .local pmc rx1367_bstack
    .local pmc rx1367_cstack
    rx1367_start = self."!cursor_start_all"()
    set rx1367_cur, rx1367_start[0]
    set rx1367_tgt, rx1367_start[1]
    set rx1367_pos, rx1367_start[2]
    set rx1367_curclass, rx1367_start[3]
    set rx1367_bstack, rx1367_start[4]
    set $I19, rx1367_start[5]
    store_lex unicode:"$\x{a2}", rx1367_cur
    length rx1367_eos, rx1367_tgt
    eq $I19, 1, rx1367_restart2973
    gt rx1367_pos, rx1367_eos, rx1367_fail2974
    repr_get_attr_int $I11, self, rx1367_curclass, "$!from"
    ne $I11, -1, rxscan1368_done2980
    goto rxscan1368_scan2979
  rxscan1368_loop2978:
    inc rx1367_pos
    gt rx1367_pos, rx1367_eos, rx1367_fail2974
    repr_bind_attr_int rx1367_cur, rx1367_curclass, "$!from", rx1367_pos
  rxscan1368_scan2979:
    nqp_rxmark rx1367_bstack, rxscan1368_loop2978, rx1367_pos, 0
  rxscan1368_done2980:
    ge rx1367_pos, rx1367_eos, rx1367_fail2974
    substr $S11, rx1367_tgt, rx1367_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx1367_fail2974
    repr_bind_attr_int rx1367_cur, rx1367_curclass, "$!pos", rx1367_pos
    $P11 = rx1367_cur."quotemod_check"("c")
    repr_get_attr_int $I11, $P11, rx1367_curclass, "$!pos"
    lt $I11, 0, rx1367_fail2974
    repr_bind_attr_int rx1367_cur, rx1367_curclass, "$!pos", rx1367_pos
    $P11 = rx1367_cur."block"()
    repr_get_attr_int $I11, $P11, rx1367_curclass, "$!pos"
    lt $I11, 0, rx1367_fail2974
    nqp_rxmark rx1367_bstack, rxsubrule1369_pass2981, -1, 0
  rxsubrule1369_pass2981:
    rx1367_cstack = rx1367_cur."!cursor_capture"($P11, "block")
    repr_get_attr_int rx1367_pos, $P11, rx1367_curclass, "$!pos"
    rx1367_cur."!cursor_pass"(rx1367_pos, "quote_escape:sym<{ }>", 'backtrack'=>1)
    .return (rx1367_cur)
  rx1367_restart2973:
    repr_get_attr_obj rx1367_cstack, rx1367_cur, rx1367_curclass, "$!cstack"
  rx1367_fail2974:
    unless rx1367_bstack, rx1367_done2972
    pop $I19, rx1367_bstack
    if_null rx1367_cstack, rx1367_cstack_done2977
    unless rx1367_cstack, rx1367_cstack_done2977
    dec $I19
    set $P11, rx1367_cstack[$I19]
  rx1367_cstack_done2977:
    pop rx1367_rep, rx1367_bstack
    pop rx1367_pos, rx1367_bstack
    pop $I19, rx1367_bstack
    lt rx1367_pos, -1, rx1367_done2972
    lt rx1367_pos, 0, rx1367_fail2974
    eq $I19, 0, rx1367_fail2974
    nqp_islist $I20, rx1367_cstack
    unless $I20, rx1367_jump2975
    elements $I18, rx1367_bstack
    le $I18, 0, rx1367_cut2976
    dec $I18
    set $I18, rx1367_bstack[$I18]
  rx1367_cut2976:
    assign rx1367_cstack, $I18
  rx1367_jump2975:
    jump $I19
  rx1367_done2972:
    rx1367_cur."!cursor_fail"()
    .return (rx1367_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<esc>" :subid("cuid_163_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1282
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1370_start
    .local string rx1370_tgt
    .local int rx1370_pos
    .local int rx1370_off
    .local int rx1370_eos
    .local int rx1370_rep
    .local pmc rx1370_cur
    .local pmc rx1370_curclass
    .local pmc rx1370_bstack
    .local pmc rx1370_cstack
    rx1370_start = self."!cursor_start_all"()
    set rx1370_cur, rx1370_start[0]
    set rx1370_tgt, rx1370_start[1]
    set rx1370_pos, rx1370_start[2]
    set rx1370_curclass, rx1370_start[3]
    set rx1370_bstack, rx1370_start[4]
    set $I19, rx1370_start[5]
    store_lex unicode:"$\x{a2}", rx1370_cur
    length rx1370_eos, rx1370_tgt
    eq $I19, 1, rx1370_restart2984
    gt rx1370_pos, rx1370_eos, rx1370_fail2985
    repr_get_attr_int $I11, self, rx1370_curclass, "$!from"
    ne $I11, -1, rxscan1371_done2991
    goto rxscan1371_scan2990
  rxscan1371_loop2989:
    inc rx1370_pos
    gt rx1370_pos, rx1370_eos, rx1370_fail2985
    repr_bind_attr_int rx1370_cur, rx1370_curclass, "$!from", rx1370_pos
  rxscan1371_scan2990:
    nqp_rxmark rx1370_bstack, rxscan1371_loop2989, rx1370_pos, 0
  rxscan1371_done2991:
    add $I11, rx1370_pos, 2
    gt $I11, rx1370_eos, rx1370_fail2985
    substr $S10, rx1370_tgt, rx1370_pos, 2
    ne $S10, ucs4:"\\e", rx1370_fail2985
    add rx1370_pos, 2
    repr_bind_attr_int rx1370_cur, rx1370_curclass, "$!pos", rx1370_pos
    $P11 = rx1370_cur."quotemod_check"("b")
    repr_get_attr_int $I11, $P11, rx1370_curclass, "$!pos"
    lt $I11, 0, rx1370_fail2985
    rx1370_cur."!cursor_pass"(rx1370_pos, "quote_escape:sym<esc>", 'backtrack'=>1)
    .return (rx1370_cur)
  rx1370_restart2984:
    repr_get_attr_obj rx1370_cstack, rx1370_cur, rx1370_curclass, "$!cstack"
  rx1370_fail2985:
    unless rx1370_bstack, rx1370_done2983
    pop $I19, rx1370_bstack
    if_null rx1370_cstack, rx1370_cstack_done2988
    unless rx1370_cstack, rx1370_cstack_done2988
    dec $I19
    set $P11, rx1370_cstack[$I19]
  rx1370_cstack_done2988:
    pop rx1370_rep, rx1370_bstack
    pop rx1370_pos, rx1370_bstack
    pop $I19, rx1370_bstack
    lt rx1370_pos, -1, rx1370_done2983
    lt rx1370_pos, 0, rx1370_fail2985
    eq $I19, 0, rx1370_fail2985
    nqp_islist $I20, rx1370_cstack
    unless $I20, rx1370_jump2986
    elements $I18, rx1370_bstack
    le $I18, 0, rx1370_cut2987
    dec $I18
    set $I18, rx1370_bstack[$I18]
  rx1370_cut2987:
    assign rx1370_cstack, $I18
  rx1370_jump2986:
    jump $I19
  rx1370_done2983:
    rx1370_cur."!cursor_fail"()
    .return (rx1370_cur) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<( )>" :subid("cuid_164_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1284
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1372_start
    .local string rx1372_tgt
    .local int rx1372_pos
    .local int rx1372_off
    .local int rx1372_eos
    .local int rx1372_rep
    .local pmc rx1372_cur
    .local pmc rx1372_curclass
    .local pmc rx1372_bstack
    .local pmc rx1372_cstack
    rx1372_start = self."!cursor_start_all"()
    set rx1372_cur, rx1372_start[0]
    set rx1372_tgt, rx1372_start[1]
    set rx1372_pos, rx1372_start[2]
    set rx1372_curclass, rx1372_start[3]
    set rx1372_bstack, rx1372_start[4]
    set $I19, rx1372_start[5]
    store_lex unicode:"$\x{a2}", rx1372_cur
    length rx1372_eos, rx1372_tgt
    eq $I19, 1, rx1372_restart2994
    gt rx1372_pos, rx1372_eos, rx1372_fail2995
    repr_get_attr_int $I11, self, rx1372_curclass, "$!from"
    ne $I11, -1, rxscan1373_done3001
    goto rxscan1373_scan3000
  rxscan1373_loop2999:
    inc rx1372_pos
    gt rx1372_pos, rx1372_eos, rx1372_fail2995
    repr_bind_attr_int rx1372_cur, rx1372_curclass, "$!from", rx1372_pos
  rxscan1373_scan3000:
    nqp_rxmark rx1372_bstack, rxscan1373_loop2999, rx1372_pos, 0
  rxscan1373_done3001:
    add $I11, rx1372_pos, 1
    gt $I11, rx1372_eos, rx1372_fail2995
    substr $S10, rx1372_tgt, rx1372_pos, 1
    ne $S10, ucs4:"(", rx1372_fail2995
    add rx1372_pos, 1
    repr_bind_attr_int rx1372_cur, rx1372_curclass, "$!pos", rx1372_pos
    $P11 = rx1372_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1372_curclass, "$!pos"
    lt $I11, 0, rx1372_fail2995
    repr_get_attr_int rx1372_pos, $P11, rx1372_curclass, "$!pos"
    nqp_rxmark rx1372_bstack, rxquantr1375_done3004, rx1372_pos, 0
  rxquantr1375_loop3003:
    repr_bind_attr_int rx1372_cur, rx1372_curclass, "$!pos", rx1372_pos
    $P11 = rx1372_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx1372_curclass, "$!pos"
    lt $I11, 0, rx1372_fail2995
    goto rxsubrule1376_pass3005
  rxsubrule1376_back3006:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1372_curclass, "$!pos"
    lt $I11, 0, rx1372_fail2995
  rxsubrule1376_pass3005:
    rx1372_cstack = rx1372_cur."!cursor_capture"($P11, "EXPR")
    set_addr $I11, rxsubrule1376_back3006
    push rx1372_bstack, $I11
    push rx1372_bstack, 0
    push rx1372_bstack, rx1372_pos
    elements $I11, rx1372_cstack
    push rx1372_bstack, $I11
    repr_get_attr_int rx1372_pos, $P11, rx1372_curclass, "$!pos"
    nqp_rxpeek $I19, rx1372_bstack, rxquantr1375_done3004
    inc $I19
    inc $I19
    set rx1372_rep, rx1372_bstack[$I19]
    nqp_rxcommit rx1372_bstack, rxquantr1375_done3004
    inc rx1372_rep
  rxquantr1375_done3004:
    add $I11, rx1372_pos, 1
    gt $I11, rx1372_eos, rx1372_fail2995
    substr $S10, rx1372_tgt, rx1372_pos, 1
    ne $S10, ucs4:")", rx1372_fail2995
    add rx1372_pos, 1
    rx1372_cur."!cursor_pass"(rx1372_pos, "circumfix:sym<( )>", 'backtrack'=>1)
    .return (rx1372_cur)
  rx1372_restart2994:
    repr_get_attr_obj rx1372_cstack, rx1372_cur, rx1372_curclass, "$!cstack"
  rx1372_fail2995:
    unless rx1372_bstack, rx1372_done2993
    pop $I19, rx1372_bstack
    if_null rx1372_cstack, rx1372_cstack_done2998
    unless rx1372_cstack, rx1372_cstack_done2998
    dec $I19
    set $P11, rx1372_cstack[$I19]
  rx1372_cstack_done2998:
    pop rx1372_rep, rx1372_bstack
    pop rx1372_pos, rx1372_bstack
    pop $I19, rx1372_bstack
    lt rx1372_pos, -1, rx1372_done2993
    lt rx1372_pos, 0, rx1372_fail2995
    eq $I19, 0, rx1372_fail2995
    nqp_islist $I20, rx1372_cstack
    unless $I20, rx1372_jump2996
    elements $I18, rx1372_bstack
    le $I18, 0, rx1372_cut2997
    dec $I18
    set $I18, rx1372_bstack[$I18]
  rx1372_cut2997:
    assign rx1372_cstack, $I18
  rx1372_jump2996:
    jump $I19
  rx1372_done2993:
    rx1372_cur."!cursor_fail"()
    .return (rx1372_cur) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<[ ]>" :subid("cuid_165_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1285
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1377_start
    .local string rx1377_tgt
    .local int rx1377_pos
    .local int rx1377_off
    .local int rx1377_eos
    .local int rx1377_rep
    .local pmc rx1377_cur
    .local pmc rx1377_curclass
    .local pmc rx1377_bstack
    .local pmc rx1377_cstack
    rx1377_start = self."!cursor_start_all"()
    set rx1377_cur, rx1377_start[0]
    set rx1377_tgt, rx1377_start[1]
    set rx1377_pos, rx1377_start[2]
    set rx1377_curclass, rx1377_start[3]
    set rx1377_bstack, rx1377_start[4]
    set $I19, rx1377_start[5]
    store_lex unicode:"$\x{a2}", rx1377_cur
    length rx1377_eos, rx1377_tgt
    eq $I19, 1, rx1377_restart3009
    gt rx1377_pos, rx1377_eos, rx1377_fail3010
    repr_get_attr_int $I11, self, rx1377_curclass, "$!from"
    ne $I11, -1, rxscan1378_done3016
    goto rxscan1378_scan3015
  rxscan1378_loop3014:
    inc rx1377_pos
    gt rx1377_pos, rx1377_eos, rx1377_fail3010
    repr_bind_attr_int rx1377_cur, rx1377_curclass, "$!from", rx1377_pos
  rxscan1378_scan3015:
    nqp_rxmark rx1377_bstack, rxscan1378_loop3014, rx1377_pos, 0
  rxscan1378_done3016:
    add $I11, rx1377_pos, 1
    gt $I11, rx1377_eos, rx1377_fail3010
    substr $S10, rx1377_tgt, rx1377_pos, 1
    ne $S10, ucs4:"[", rx1377_fail3010
    add rx1377_pos, 1
    repr_bind_attr_int rx1377_cur, rx1377_curclass, "$!pos", rx1377_pos
    $P11 = rx1377_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1377_curclass, "$!pos"
    lt $I11, 0, rx1377_fail3010
    repr_get_attr_int rx1377_pos, $P11, rx1377_curclass, "$!pos"
    nqp_rxmark rx1377_bstack, rxquantr1380_done3019, rx1377_pos, 0
  rxquantr1380_loop3018:
    repr_bind_attr_int rx1377_cur, rx1377_curclass, "$!pos", rx1377_pos
    $P11 = rx1377_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx1377_curclass, "$!pos"
    lt $I11, 0, rx1377_fail3010
    goto rxsubrule1381_pass3020
  rxsubrule1381_back3021:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1377_curclass, "$!pos"
    lt $I11, 0, rx1377_fail3010
  rxsubrule1381_pass3020:
    rx1377_cstack = rx1377_cur."!cursor_capture"($P11, "EXPR")
    set_addr $I11, rxsubrule1381_back3021
    push rx1377_bstack, $I11
    push rx1377_bstack, 0
    push rx1377_bstack, rx1377_pos
    elements $I11, rx1377_cstack
    push rx1377_bstack, $I11
    repr_get_attr_int rx1377_pos, $P11, rx1377_curclass, "$!pos"
    nqp_rxpeek $I19, rx1377_bstack, rxquantr1380_done3019
    inc $I19
    inc $I19
    set rx1377_rep, rx1377_bstack[$I19]
    nqp_rxcommit rx1377_bstack, rxquantr1380_done3019
    inc rx1377_rep
  rxquantr1380_done3019:
    add $I11, rx1377_pos, 1
    gt $I11, rx1377_eos, rx1377_fail3010
    substr $S10, rx1377_tgt, rx1377_pos, 1
    ne $S10, ucs4:"]", rx1377_fail3010
    add rx1377_pos, 1
    rx1377_cur."!cursor_pass"(rx1377_pos, "circumfix:sym<[ ]>", 'backtrack'=>1)
    .return (rx1377_cur)
  rx1377_restart3009:
    repr_get_attr_obj rx1377_cstack, rx1377_cur, rx1377_curclass, "$!cstack"
  rx1377_fail3010:
    unless rx1377_bstack, rx1377_done3008
    pop $I19, rx1377_bstack
    if_null rx1377_cstack, rx1377_cstack_done3013
    unless rx1377_cstack, rx1377_cstack_done3013
    dec $I19
    set $P11, rx1377_cstack[$I19]
  rx1377_cstack_done3013:
    pop rx1377_rep, rx1377_bstack
    pop rx1377_pos, rx1377_bstack
    pop $I19, rx1377_bstack
    lt rx1377_pos, -1, rx1377_done3008
    lt rx1377_pos, 0, rx1377_fail3010
    eq $I19, 0, rx1377_fail3010
    nqp_islist $I20, rx1377_cstack
    unless $I20, rx1377_jump3011
    elements $I18, rx1377_bstack
    le $I18, 0, rx1377_cut3012
    dec $I18
    set $I18, rx1377_bstack[$I18]
  rx1377_cut3012:
    assign rx1377_cstack, $I18
  rx1377_jump3011:
    jump $I19
  rx1377_done3008:
    rx1377_cur."!cursor_fail"()
    .return (rx1377_cur) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<ang>" :subid("cuid_166_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1286
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1382_start
    .local string rx1382_tgt
    .local int rx1382_pos
    .local int rx1382_off
    .local int rx1382_eos
    .local int rx1382_rep
    .local pmc rx1382_cur
    .local pmc rx1382_curclass
    .local pmc rx1382_bstack
    .local pmc rx1382_cstack
    rx1382_start = self."!cursor_start_all"()
    set rx1382_cur, rx1382_start[0]
    set rx1382_tgt, rx1382_start[1]
    set rx1382_pos, rx1382_start[2]
    set rx1382_curclass, rx1382_start[3]
    set rx1382_bstack, rx1382_start[4]
    set $I19, rx1382_start[5]
    store_lex unicode:"$\x{a2}", rx1382_cur
    length rx1382_eos, rx1382_tgt
    eq $I19, 1, rx1382_restart3024
    gt rx1382_pos, rx1382_eos, rx1382_fail3025
    repr_get_attr_int $I11, self, rx1382_curclass, "$!from"
    ne $I11, -1, rxscan1383_done3031
    goto rxscan1383_scan3030
  rxscan1383_loop3029:
    inc rx1382_pos
    gt rx1382_pos, rx1382_eos, rx1382_fail3025
    repr_bind_attr_int rx1382_cur, rx1382_curclass, "$!from", rx1382_pos
  rxscan1383_scan3030:
    nqp_rxmark rx1382_bstack, rxscan1383_loop3029, rx1382_pos, 0
  rxscan1383_done3031:
    ge rx1382_pos, rx1382_eos, rx1382_fail3025
    substr $S11, rx1382_tgt, rx1382_pos, 1
    index $I11, ucs4:"<", $S11
    lt $I11, 0, rx1382_fail3025
    repr_bind_attr_int rx1382_cur, rx1382_curclass, "$!pos", rx1382_pos
    $P11 = rx1382_cur."quote_EXPR"(":q", ":w")
    repr_get_attr_int $I11, $P11, rx1382_curclass, "$!pos"
    lt $I11, 0, rx1382_fail3025
    nqp_rxmark rx1382_bstack, rxsubrule1384_pass3032, -1, 0
  rxsubrule1384_pass3032:
    rx1382_cstack = rx1382_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1382_pos, $P11, rx1382_curclass, "$!pos"
    rx1382_cur."!cursor_pass"(rx1382_pos, "circumfix:sym<ang>", 'backtrack'=>1)
    .return (rx1382_cur)
  rx1382_restart3024:
    repr_get_attr_obj rx1382_cstack, rx1382_cur, rx1382_curclass, "$!cstack"
  rx1382_fail3025:
    unless rx1382_bstack, rx1382_done3023
    pop $I19, rx1382_bstack
    if_null rx1382_cstack, rx1382_cstack_done3028
    unless rx1382_cstack, rx1382_cstack_done3028
    dec $I19
    set $P11, rx1382_cstack[$I19]
  rx1382_cstack_done3028:
    pop rx1382_rep, rx1382_bstack
    pop rx1382_pos, rx1382_bstack
    pop $I19, rx1382_bstack
    lt rx1382_pos, -1, rx1382_done3023
    lt rx1382_pos, 0, rx1382_fail3025
    eq $I19, 0, rx1382_fail3025
    nqp_islist $I20, rx1382_cstack
    unless $I20, rx1382_jump3026
    elements $I18, rx1382_bstack
    le $I18, 0, rx1382_cut3027
    dec $I18
    set $I18, rx1382_bstack[$I18]
  rx1382_cut3027:
    assign rx1382_cstack, $I18
  rx1382_jump3026:
    jump $I19
  rx1382_done3023:
    rx1382_cur."!cursor_fail"()
    .return (rx1382_cur) 
.end
.HLL "nqp"
.namespace []
.sub utf8:"circumfix:sym<\x{ab} \x{bb}>" :subid("cuid_167_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1287
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1385_start
    .local string rx1385_tgt
    .local int rx1385_pos
    .local int rx1385_off
    .local int rx1385_eos
    .local int rx1385_rep
    .local pmc rx1385_cur
    .local pmc rx1385_curclass
    .local pmc rx1385_bstack
    .local pmc rx1385_cstack
    rx1385_start = self."!cursor_start_all"()
    set rx1385_cur, rx1385_start[0]
    set rx1385_tgt, rx1385_start[1]
    set rx1385_pos, rx1385_start[2]
    set rx1385_curclass, rx1385_start[3]
    set rx1385_bstack, rx1385_start[4]
    set $I19, rx1385_start[5]
    store_lex unicode:"$\x{a2}", rx1385_cur
    length rx1385_eos, rx1385_tgt
    eq $I19, 1, rx1385_restart3035
    gt rx1385_pos, rx1385_eos, rx1385_fail3036
    repr_get_attr_int $I11, self, rx1385_curclass, "$!from"
    ne $I11, -1, rxscan1386_done3042
    goto rxscan1386_scan3041
  rxscan1386_loop3040:
    inc rx1385_pos
    gt rx1385_pos, rx1385_eos, rx1385_fail3036
    repr_bind_attr_int rx1385_cur, rx1385_curclass, "$!from", rx1385_pos
  rxscan1386_scan3041:
    nqp_rxmark rx1385_bstack, rxscan1386_loop3040, rx1385_pos, 0
  rxscan1386_done3042:
    ge rx1385_pos, rx1385_eos, rx1385_fail3036
    substr $S11, rx1385_tgt, rx1385_pos, 1
    index $I11, ucs4:"\x{ab}", $S11
    lt $I11, 0, rx1385_fail3036
    repr_bind_attr_int rx1385_cur, rx1385_curclass, "$!pos", rx1385_pos
    $P11 = rx1385_cur."quote_EXPR"(":qq", ":w")
    repr_get_attr_int $I11, $P11, rx1385_curclass, "$!pos"
    lt $I11, 0, rx1385_fail3036
    nqp_rxmark rx1385_bstack, rxsubrule1387_pass3043, -1, 0
  rxsubrule1387_pass3043:
    rx1385_cstack = rx1385_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1385_pos, $P11, rx1385_curclass, "$!pos"
    rx1385_cur."!cursor_pass"(rx1385_pos, utf8:"circumfix:sym<\x{ab} \x{bb}>", 'backtrack'=>1)
    .return (rx1385_cur)
  rx1385_restart3035:
    repr_get_attr_obj rx1385_cstack, rx1385_cur, rx1385_curclass, "$!cstack"
  rx1385_fail3036:
    unless rx1385_bstack, rx1385_done3034
    pop $I19, rx1385_bstack
    if_null rx1385_cstack, rx1385_cstack_done3039
    unless rx1385_cstack, rx1385_cstack_done3039
    dec $I19
    set $P11, rx1385_cstack[$I19]
  rx1385_cstack_done3039:
    pop rx1385_rep, rx1385_bstack
    pop rx1385_pos, rx1385_bstack
    pop $I19, rx1385_bstack
    lt rx1385_pos, -1, rx1385_done3034
    lt rx1385_pos, 0, rx1385_fail3036
    eq $I19, 0, rx1385_fail3036
    nqp_islist $I20, rx1385_cstack
    unless $I20, rx1385_jump3037
    elements $I18, rx1385_bstack
    le $I18, 0, rx1385_cut3038
    dec $I18
    set $I18, rx1385_bstack[$I18]
  rx1385_cut3038:
    assign rx1385_cstack, $I18
  rx1385_jump3037:
    jump $I19
  rx1385_done3034:
    rx1385_cur."!cursor_fail"()
    .return (rx1385_cur) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<{ }>" :subid("cuid_168_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1288
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1388_start
    .local string rx1388_tgt
    .local int rx1388_pos
    .local int rx1388_off
    .local int rx1388_eos
    .local int rx1388_rep
    .local pmc rx1388_cur
    .local pmc rx1388_curclass
    .local pmc rx1388_bstack
    .local pmc rx1388_cstack
    rx1388_start = self."!cursor_start_all"()
    set rx1388_cur, rx1388_start[0]
    set rx1388_tgt, rx1388_start[1]
    set rx1388_pos, rx1388_start[2]
    set rx1388_curclass, rx1388_start[3]
    set rx1388_bstack, rx1388_start[4]
    set $I19, rx1388_start[5]
    store_lex unicode:"$\x{a2}", rx1388_cur
    length rx1388_eos, rx1388_tgt
    eq $I19, 1, rx1388_restart3046
    gt rx1388_pos, rx1388_eos, rx1388_fail3047
    repr_get_attr_int $I11, self, rx1388_curclass, "$!from"
    ne $I11, -1, rxscan1389_done3053
    goto rxscan1389_scan3052
  rxscan1389_loop3051:
    inc rx1388_pos
    gt rx1388_pos, rx1388_eos, rx1388_fail3047
    repr_bind_attr_int rx1388_cur, rx1388_curclass, "$!from", rx1388_pos
  rxscan1389_scan3052:
    nqp_rxmark rx1388_bstack, rxscan1389_loop3051, rx1388_pos, 0
  rxscan1389_done3053:
    ge rx1388_pos, rx1388_eos, rx1388_fail3047
    substr $S11, rx1388_tgt, rx1388_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx1388_fail3047
    repr_bind_attr_int rx1388_cur, rx1388_curclass, "$!pos", rx1388_pos
    $P11 = rx1388_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx1388_curclass, "$!pos"
    lt $I11, 0, rx1388_fail3047
    nqp_rxmark rx1388_bstack, rxsubrule1390_pass3054, -1, 0
  rxsubrule1390_pass3054:
    rx1388_cstack = rx1388_cur."!cursor_capture"($P11, "pblock")
    repr_get_attr_int rx1388_pos, $P11, rx1388_curclass, "$!pos"
    rx1388_cur."!cursor_pass"(rx1388_pos, "circumfix:sym<{ }>", 'backtrack'=>1)
    .return (rx1388_cur)
  rx1388_restart3046:
    repr_get_attr_obj rx1388_cstack, rx1388_cur, rx1388_curclass, "$!cstack"
  rx1388_fail3047:
    unless rx1388_bstack, rx1388_done3045
    pop $I19, rx1388_bstack
    if_null rx1388_cstack, rx1388_cstack_done3050
    unless rx1388_cstack, rx1388_cstack_done3050
    dec $I19
    set $P11, rx1388_cstack[$I19]
  rx1388_cstack_done3050:
    pop rx1388_rep, rx1388_bstack
    pop rx1388_pos, rx1388_bstack
    pop $I19, rx1388_bstack
    lt rx1388_pos, -1, rx1388_done3045
    lt rx1388_pos, 0, rx1388_fail3047
    eq $I19, 0, rx1388_fail3047
    nqp_islist $I20, rx1388_cstack
    unless $I20, rx1388_jump3048
    elements $I18, rx1388_bstack
    le $I18, 0, rx1388_cut3049
    dec $I18
    set $I18, rx1388_bstack[$I18]
  rx1388_cut3049:
    assign rx1388_cstack, $I18
  rx1388_jump3048:
    jump $I19
  rx1388_done3045:
    rx1388_cur."!cursor_fail"()
    .return (rx1388_cur) 
.end
.HLL "nqp"
.namespace []
.sub "semilist" :subid("cuid_169_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1290
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1391_start
    .local string rx1391_tgt
    .local int rx1391_pos
    .local int rx1391_off
    .local int rx1391_eos
    .local int rx1391_rep
    .local pmc rx1391_cur
    .local pmc rx1391_curclass
    .local pmc rx1391_bstack
    .local pmc rx1391_cstack
    rx1391_start = self."!cursor_start_all"()
    set rx1391_cur, rx1391_start[0]
    set rx1391_tgt, rx1391_start[1]
    set rx1391_pos, rx1391_start[2]
    set rx1391_curclass, rx1391_start[3]
    set rx1391_bstack, rx1391_start[4]
    set $I19, rx1391_start[5]
    store_lex unicode:"$\x{a2}", rx1391_cur
    length rx1391_eos, rx1391_tgt
    eq $I19, 1, rx1391_restart3057
    gt rx1391_pos, rx1391_eos, rx1391_fail3058
    repr_get_attr_int $I11, self, rx1391_curclass, "$!from"
    ne $I11, -1, rxscan1392_done3064
    goto rxscan1392_scan3063
  rxscan1392_loop3062:
    inc rx1391_pos
    gt rx1391_pos, rx1391_eos, rx1391_fail3058
    repr_bind_attr_int rx1391_cur, rx1391_curclass, "$!from", rx1391_pos
  rxscan1392_scan3063:
    nqp_rxmark rx1391_bstack, rxscan1392_loop3062, rx1391_pos, 0
  rxscan1392_done3064:
    repr_bind_attr_int rx1391_cur, rx1391_curclass, "$!pos", rx1391_pos
    $P11 = rx1391_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1391_curclass, "$!pos"
    lt $I11, 0, rx1391_fail3058
    repr_get_attr_int rx1391_pos, $P11, rx1391_curclass, "$!pos"
    repr_bind_attr_int rx1391_cur, rx1391_curclass, "$!pos", rx1391_pos
    $P11 = rx1391_cur."statement"()
    repr_get_attr_int $I11, $P11, rx1391_curclass, "$!pos"
    lt $I11, 0, rx1391_fail3058
    nqp_rxmark rx1391_bstack, rxsubrule1394_pass3066, -1, 0
  rxsubrule1394_pass3066:
    rx1391_cstack = rx1391_cur."!cursor_capture"($P11, "statement")
    repr_get_attr_int rx1391_pos, $P11, rx1391_curclass, "$!pos"
    repr_bind_attr_int rx1391_cur, rx1391_curclass, "$!pos", rx1391_pos
    $P11 = rx1391_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1391_curclass, "$!pos"
    lt $I11, 0, rx1391_fail3058
    repr_get_attr_int rx1391_pos, $P11, rx1391_curclass, "$!pos"
    rx1391_cur."!cursor_pass"(rx1391_pos, "semilist", 'backtrack'=>1)
    .return (rx1391_cur)
  rx1391_restart3057:
    repr_get_attr_obj rx1391_cstack, rx1391_cur, rx1391_curclass, "$!cstack"
  rx1391_fail3058:
    unless rx1391_bstack, rx1391_done3056
    pop $I19, rx1391_bstack
    if_null rx1391_cstack, rx1391_cstack_done3061
    unless rx1391_cstack, rx1391_cstack_done3061
    dec $I19
    set $P11, rx1391_cstack[$I19]
  rx1391_cstack_done3061:
    pop rx1391_rep, rx1391_bstack
    pop rx1391_pos, rx1391_bstack
    pop $I19, rx1391_bstack
    lt rx1391_pos, -1, rx1391_done3056
    lt rx1391_pos, 0, rx1391_fail3058
    eq $I19, 0, rx1391_fail3058
    nqp_islist $I20, rx1391_cstack
    unless $I20, rx1391_jump3059
    elements $I18, rx1391_bstack
    le $I18, 0, rx1391_cut3060
    dec $I18
    set $I18, rx1391_bstack[$I18]
  rx1391_cut3060:
    assign rx1391_cstack, $I18
  rx1391_jump3059:
    jump $I19
  rx1391_done3056:
    rx1391_cur."!cursor_fail"()
    .return (rx1391_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infixish" :subid("cuid_170_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1313
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1396_start
    .local string rx1396_tgt
    .local int rx1396_pos
    .local int rx1396_off
    .local int rx1396_eos
    .local int rx1396_rep
    .local pmc rx1396_cur
    .local pmc rx1396_curclass
    .local pmc rx1396_bstack
    .local pmc rx1396_cstack
    rx1396_start = self."!cursor_start_all"()
    set rx1396_cur, rx1396_start[0]
    set rx1396_tgt, rx1396_start[1]
    set rx1396_pos, rx1396_start[2]
    set rx1396_curclass, rx1396_start[3]
    set rx1396_bstack, rx1396_start[4]
    set $I19, rx1396_start[5]
    store_lex unicode:"$\x{a2}", rx1396_cur
    length rx1396_eos, rx1396_tgt
    eq $I19, 1, rx1396_restart3070
    gt rx1396_pos, rx1396_eos, rx1396_fail3071
    repr_get_attr_int $I11, self, rx1396_curclass, "$!from"
    ne $I11, -1, rxscan1397_done3077
    goto rxscan1397_scan3076
  rxscan1397_loop3075:
    inc rx1396_pos
    gt rx1396_pos, rx1396_eos, rx1396_fail3071
    repr_bind_attr_int rx1396_cur, rx1396_curclass, "$!from", rx1396_pos
  rxscan1397_scan3076:
    nqp_rxmark rx1396_bstack, rxscan1397_loop3075, rx1396_pos, 0
  rxscan1397_done3077:
    repr_bind_attr_int rx1396_cur, rx1396_curclass, "$!pos", rx1396_pos
    $P11 = rx1396_cur."infixstopper"()
    repr_get_attr_int $I11, $P11, rx1396_curclass, "$!pos"
    ge $I11, 0, rx1396_fail3071
    repr_bind_attr_int rx1396_cur, rx1396_curclass, "$!pos", rx1396_pos
    $P11 = rx1396_cur."infix"()
    repr_get_attr_int $I11, $P11, rx1396_curclass, "$!pos"
    lt $I11, 0, rx1396_fail3071
    nqp_rxmark rx1396_bstack, rxsubrule1398_pass3078, -1, 0
  rxsubrule1398_pass3078:
    rx1396_cstack = rx1396_cur."!cursor_capture"($P11, "OPER=infix")
    repr_get_attr_int rx1396_pos, $P11, rx1396_curclass, "$!pos"
    rx1396_cur."!cursor_pass"(rx1396_pos, "infixish", 'backtrack'=>1)
    .return (rx1396_cur)
  rx1396_restart3070:
    repr_get_attr_obj rx1396_cstack, rx1396_cur, rx1396_curclass, "$!cstack"
  rx1396_fail3071:
    unless rx1396_bstack, rx1396_done3069
    pop $I19, rx1396_bstack
    if_null rx1396_cstack, rx1396_cstack_done3074
    unless rx1396_cstack, rx1396_cstack_done3074
    dec $I19
    set $P11, rx1396_cstack[$I19]
  rx1396_cstack_done3074:
    pop rx1396_rep, rx1396_bstack
    pop rx1396_pos, rx1396_bstack
    pop $I19, rx1396_bstack
    lt rx1396_pos, -1, rx1396_done3069
    lt rx1396_pos, 0, rx1396_fail3071
    eq $I19, 0, rx1396_fail3071
    nqp_islist $I20, rx1396_cstack
    unless $I20, rx1396_jump3072
    elements $I18, rx1396_bstack
    le $I18, 0, rx1396_cut3073
    dec $I18
    set $I18, rx1396_bstack[$I18]
  rx1396_cut3073:
    assign rx1396_cstack, $I18
  rx1396_jump3072:
    jump $I19
  rx1396_done3069:
    rx1396_cur."!cursor_fail"()
    .return (rx1396_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infixstopper" :subid("cuid_171_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1314
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1399_start
    .local string rx1399_tgt
    .local int rx1399_pos
    .local int rx1399_off
    .local int rx1399_eos
    .local int rx1399_rep
    .local pmc rx1399_cur
    .local pmc rx1399_curclass
    .local pmc rx1399_bstack
    .local pmc rx1399_cstack
    rx1399_start = self."!cursor_start_all"()
    set rx1399_cur, rx1399_start[0]
    set rx1399_tgt, rx1399_start[1]
    set rx1399_pos, rx1399_start[2]
    set rx1399_curclass, rx1399_start[3]
    set rx1399_bstack, rx1399_start[4]
    set $I19, rx1399_start[5]
    store_lex unicode:"$\x{a2}", rx1399_cur
    length rx1399_eos, rx1399_tgt
    eq $I19, 1, rx1399_restart3081
    gt rx1399_pos, rx1399_eos, rx1399_fail3082
    repr_get_attr_int $I11, self, rx1399_curclass, "$!from"
    ne $I11, -1, rxscan1400_done3088
    goto rxscan1400_scan3087
  rxscan1400_loop3086:
    inc rx1399_pos
    gt rx1399_pos, rx1399_eos, rx1399_fail3082
    repr_bind_attr_int rx1399_cur, rx1399_curclass, "$!from", rx1399_pos
  rxscan1400_scan3087:
    nqp_rxmark rx1399_bstack, rxscan1400_loop3086, rx1399_pos, 0
  rxscan1400_done3088:
    repr_bind_attr_int rx1399_cur, rx1399_curclass, "$!pos", rx1399_pos
    $P11 = rx1399_cur."lambda"()
    repr_get_attr_int $I11, $P11, rx1399_curclass, "$!pos"
    lt $I11, 0, rx1399_fail3082
    rx1399_cur."!cursor_pass"(rx1399_pos, "infixstopper", 'backtrack'=>1)
    .return (rx1399_cur)
  rx1399_restart3081:
    repr_get_attr_obj rx1399_cstack, rx1399_cur, rx1399_curclass, "$!cstack"
  rx1399_fail3082:
    unless rx1399_bstack, rx1399_done3080
    pop $I19, rx1399_bstack
    if_null rx1399_cstack, rx1399_cstack_done3085
    unless rx1399_cstack, rx1399_cstack_done3085
    dec $I19
    set $P11, rx1399_cstack[$I19]
  rx1399_cstack_done3085:
    pop rx1399_rep, rx1399_bstack
    pop rx1399_pos, rx1399_bstack
    pop $I19, rx1399_bstack
    lt rx1399_pos, -1, rx1399_done3080
    lt rx1399_pos, 0, rx1399_fail3082
    eq $I19, 0, rx1399_fail3082
    nqp_islist $I20, rx1399_cstack
    unless $I20, rx1399_jump3083
    elements $I18, rx1399_bstack
    le $I18, 0, rx1399_cut3084
    dec $I18
    set $I18, rx1399_bstack[$I18]
  rx1399_cut3084:
    assign rx1399_cstack, $I18
  rx1399_jump3083:
    jump $I19
  rx1399_done3080:
    rx1399_cur."!cursor_fail"()
    .return (rx1399_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<[ ]>" :subid("cuid_172_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1316
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1401_start
    .local string rx1401_tgt
    .local int rx1401_pos
    .local int rx1401_off
    .local int rx1401_eos
    .local int rx1401_rep
    .local pmc rx1401_cur
    .local pmc rx1401_curclass
    .local pmc rx1401_bstack
    .local pmc rx1401_cstack
    rx1401_start = self."!cursor_start_all"()
    set rx1401_cur, rx1401_start[0]
    set rx1401_tgt, rx1401_start[1]
    set rx1401_pos, rx1401_start[2]
    set rx1401_curclass, rx1401_start[3]
    set rx1401_bstack, rx1401_start[4]
    set $I19, rx1401_start[5]
    store_lex unicode:"$\x{a2}", rx1401_cur
    length rx1401_eos, rx1401_tgt
    eq $I19, 1, rx1401_restart3091
    gt rx1401_pos, rx1401_eos, rx1401_fail3092
    repr_get_attr_int $I11, self, rx1401_curclass, "$!from"
    ne $I11, -1, rxscan1402_done3098
    goto rxscan1402_scan3097
  rxscan1402_loop3096:
    inc rx1401_pos
    gt rx1401_pos, rx1401_eos, rx1401_fail3092
    repr_bind_attr_int rx1401_cur, rx1401_curclass, "$!from", rx1401_pos
  rxscan1402_scan3097:
    nqp_rxmark rx1401_bstack, rxscan1402_loop3096, rx1401_pos, 0
  rxscan1402_done3098:
    add $I11, rx1401_pos, 1
    gt $I11, rx1401_eos, rx1401_fail3092
    substr $S10, rx1401_tgt, rx1401_pos, 1
    ne $S10, ucs4:"[", rx1401_fail3092
    add rx1401_pos, 1
    repr_bind_attr_int rx1401_cur, rx1401_curclass, "$!pos", rx1401_pos
    $P11 = rx1401_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1401_curclass, "$!pos"
    lt $I11, 0, rx1401_fail3092
    repr_get_attr_int rx1401_pos, $P11, rx1401_curclass, "$!pos"
    repr_bind_attr_int rx1401_cur, rx1401_curclass, "$!pos", rx1401_pos
    $P11 = rx1401_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx1401_curclass, "$!pos"
    lt $I11, 0, rx1401_fail3092
    nqp_rxmark rx1401_bstack, rxsubrule1404_pass3100, -1, 0
  rxsubrule1404_pass3100:
    rx1401_cstack = rx1401_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx1401_pos, $P11, rx1401_curclass, "$!pos"
    add $I11, rx1401_pos, 1
    gt $I11, rx1401_eos, rx1401_fail3092
    substr $S10, rx1401_tgt, rx1401_pos, 1
    ne $S10, ucs4:"]", rx1401_fail3092
    add rx1401_pos, 1
    repr_bind_attr_int rx1401_cur, rx1401_curclass, "$!pos", rx1401_pos
    $P11 = rx1401_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1401_curclass, "$!pos"
    lt $I11, 0, rx1401_fail3092
    nqp_rxmark rx1401_bstack, rxsubrule1405_pass3101, -1, 0
  rxsubrule1405_pass3101:
    rx1401_cstack = rx1401_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1401_pos, $P11, rx1401_curclass, "$!pos"
    rx1401_cur."!cursor_pass"(rx1401_pos, "postcircumfix:sym<[ ]>", 'backtrack'=>1)
    .return (rx1401_cur)
  rx1401_restart3091:
    repr_get_attr_obj rx1401_cstack, rx1401_cur, rx1401_curclass, "$!cstack"
  rx1401_fail3092:
    unless rx1401_bstack, rx1401_done3090
    pop $I19, rx1401_bstack
    if_null rx1401_cstack, rx1401_cstack_done3095
    unless rx1401_cstack, rx1401_cstack_done3095
    dec $I19
    set $P11, rx1401_cstack[$I19]
  rx1401_cstack_done3095:
    pop rx1401_rep, rx1401_bstack
    pop rx1401_pos, rx1401_bstack
    pop $I19, rx1401_bstack
    lt rx1401_pos, -1, rx1401_done3090
    lt rx1401_pos, 0, rx1401_fail3092
    eq $I19, 0, rx1401_fail3092
    nqp_islist $I20, rx1401_cstack
    unless $I20, rx1401_jump3093
    elements $I18, rx1401_bstack
    le $I18, 0, rx1401_cut3094
    dec $I18
    set $I18, rx1401_bstack[$I18]
  rx1401_cut3094:
    assign rx1401_cstack, $I18
  rx1401_jump3093:
    jump $I19
  rx1401_done3090:
    rx1401_cur."!cursor_fail"()
    .return (rx1401_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<{ }>" :subid("cuid_173_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1321
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1406_start
    .local string rx1406_tgt
    .local int rx1406_pos
    .local int rx1406_off
    .local int rx1406_eos
    .local int rx1406_rep
    .local pmc rx1406_cur
    .local pmc rx1406_curclass
    .local pmc rx1406_bstack
    .local pmc rx1406_cstack
    rx1406_start = self."!cursor_start_all"()
    set rx1406_cur, rx1406_start[0]
    set rx1406_tgt, rx1406_start[1]
    set rx1406_pos, rx1406_start[2]
    set rx1406_curclass, rx1406_start[3]
    set rx1406_bstack, rx1406_start[4]
    set $I19, rx1406_start[5]
    store_lex unicode:"$\x{a2}", rx1406_cur
    length rx1406_eos, rx1406_tgt
    eq $I19, 1, rx1406_restart3104
    gt rx1406_pos, rx1406_eos, rx1406_fail3105
    repr_get_attr_int $I11, self, rx1406_curclass, "$!from"
    ne $I11, -1, rxscan1407_done3111
    goto rxscan1407_scan3110
  rxscan1407_loop3109:
    inc rx1406_pos
    gt rx1406_pos, rx1406_eos, rx1406_fail3105
    repr_bind_attr_int rx1406_cur, rx1406_curclass, "$!from", rx1406_pos
  rxscan1407_scan3110:
    nqp_rxmark rx1406_bstack, rxscan1407_loop3109, rx1406_pos, 0
  rxscan1407_done3111:
    add $I11, rx1406_pos, 1
    gt $I11, rx1406_eos, rx1406_fail3105
    substr $S10, rx1406_tgt, rx1406_pos, 1
    ne $S10, ucs4:"{", rx1406_fail3105
    add rx1406_pos, 1
    repr_bind_attr_int rx1406_cur, rx1406_curclass, "$!pos", rx1406_pos
    $P11 = rx1406_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1406_curclass, "$!pos"
    lt $I11, 0, rx1406_fail3105
    repr_get_attr_int rx1406_pos, $P11, rx1406_curclass, "$!pos"
    repr_bind_attr_int rx1406_cur, rx1406_curclass, "$!pos", rx1406_pos
    $P11 = rx1406_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx1406_curclass, "$!pos"
    lt $I11, 0, rx1406_fail3105
    nqp_rxmark rx1406_bstack, rxsubrule1409_pass3113, -1, 0
  rxsubrule1409_pass3113:
    rx1406_cstack = rx1406_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx1406_pos, $P11, rx1406_curclass, "$!pos"
    add $I11, rx1406_pos, 1
    gt $I11, rx1406_eos, rx1406_fail3105
    substr $S10, rx1406_tgt, rx1406_pos, 1
    ne $S10, ucs4:"}", rx1406_fail3105
    add rx1406_pos, 1
    repr_bind_attr_int rx1406_cur, rx1406_curclass, "$!pos", rx1406_pos
    $P11 = rx1406_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1406_curclass, "$!pos"
    lt $I11, 0, rx1406_fail3105
    nqp_rxmark rx1406_bstack, rxsubrule1410_pass3114, -1, 0
  rxsubrule1410_pass3114:
    rx1406_cstack = rx1406_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1406_pos, $P11, rx1406_curclass, "$!pos"
    rx1406_cur."!cursor_pass"(rx1406_pos, "postcircumfix:sym<{ }>", 'backtrack'=>1)
    .return (rx1406_cur)
  rx1406_restart3104:
    repr_get_attr_obj rx1406_cstack, rx1406_cur, rx1406_curclass, "$!cstack"
  rx1406_fail3105:
    unless rx1406_bstack, rx1406_done3103
    pop $I19, rx1406_bstack
    if_null rx1406_cstack, rx1406_cstack_done3108
    unless rx1406_cstack, rx1406_cstack_done3108
    dec $I19
    set $P11, rx1406_cstack[$I19]
  rx1406_cstack_done3108:
    pop rx1406_rep, rx1406_bstack
    pop rx1406_pos, rx1406_bstack
    pop $I19, rx1406_bstack
    lt rx1406_pos, -1, rx1406_done3103
    lt rx1406_pos, 0, rx1406_fail3105
    eq $I19, 0, rx1406_fail3105
    nqp_islist $I20, rx1406_cstack
    unless $I20, rx1406_jump3106
    elements $I18, rx1406_bstack
    le $I18, 0, rx1406_cut3107
    dec $I18
    set $I18, rx1406_bstack[$I18]
  rx1406_cut3107:
    assign rx1406_cstack, $I18
  rx1406_jump3106:
    jump $I19
  rx1406_done3103:
    rx1406_cur."!cursor_fail"()
    .return (rx1406_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<ang>" :subid("cuid_174_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1326
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1411_start
    .local string rx1411_tgt
    .local int rx1411_pos
    .local int rx1411_off
    .local int rx1411_eos
    .local int rx1411_rep
    .local pmc rx1411_cur
    .local pmc rx1411_curclass
    .local pmc rx1411_bstack
    .local pmc rx1411_cstack
    rx1411_start = self."!cursor_start_all"()
    set rx1411_cur, rx1411_start[0]
    set rx1411_tgt, rx1411_start[1]
    set rx1411_pos, rx1411_start[2]
    set rx1411_curclass, rx1411_start[3]
    set rx1411_bstack, rx1411_start[4]
    set $I19, rx1411_start[5]
    store_lex unicode:"$\x{a2}", rx1411_cur
    length rx1411_eos, rx1411_tgt
    eq $I19, 1, rx1411_restart3117
    gt rx1411_pos, rx1411_eos, rx1411_fail3118
    repr_get_attr_int $I11, self, rx1411_curclass, "$!from"
    ne $I11, -1, rxscan1412_done3124
    goto rxscan1412_scan3123
  rxscan1412_loop3122:
    inc rx1411_pos
    gt rx1411_pos, rx1411_eos, rx1411_fail3118
    repr_bind_attr_int rx1411_cur, rx1411_curclass, "$!from", rx1411_pos
  rxscan1412_scan3123:
    nqp_rxmark rx1411_bstack, rxscan1412_loop3122, rx1411_pos, 0
  rxscan1412_done3124:
    ge rx1411_pos, rx1411_eos, rx1411_fail3118
    substr $S11, rx1411_tgt, rx1411_pos, 1
    index $I11, ucs4:"<", $S11
    lt $I11, 0, rx1411_fail3118
    repr_bind_attr_int rx1411_cur, rx1411_curclass, "$!pos", rx1411_pos
    $P11 = rx1411_cur."quote_EXPR"(":q")
    repr_get_attr_int $I11, $P11, rx1411_curclass, "$!pos"
    lt $I11, 0, rx1411_fail3118
    nqp_rxmark rx1411_bstack, rxsubrule1413_pass3125, -1, 0
  rxsubrule1413_pass3125:
    rx1411_cstack = rx1411_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1411_pos, $P11, rx1411_curclass, "$!pos"
    repr_bind_attr_int rx1411_cur, rx1411_curclass, "$!pos", rx1411_pos
    $P11 = rx1411_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1411_curclass, "$!pos"
    lt $I11, 0, rx1411_fail3118
    nqp_rxmark rx1411_bstack, rxsubrule1414_pass3126, -1, 0
  rxsubrule1414_pass3126:
    rx1411_cstack = rx1411_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1411_pos, $P11, rx1411_curclass, "$!pos"
    rx1411_cur."!cursor_pass"(rx1411_pos, "postcircumfix:sym<ang>", 'backtrack'=>1)
    .return (rx1411_cur)
  rx1411_restart3117:
    repr_get_attr_obj rx1411_cstack, rx1411_cur, rx1411_curclass, "$!cstack"
  rx1411_fail3118:
    unless rx1411_bstack, rx1411_done3116
    pop $I19, rx1411_bstack
    if_null rx1411_cstack, rx1411_cstack_done3121
    unless rx1411_cstack, rx1411_cstack_done3121
    dec $I19
    set $P11, rx1411_cstack[$I19]
  rx1411_cstack_done3121:
    pop rx1411_rep, rx1411_bstack
    pop rx1411_pos, rx1411_bstack
    pop $I19, rx1411_bstack
    lt rx1411_pos, -1, rx1411_done3116
    lt rx1411_pos, 0, rx1411_fail3118
    eq $I19, 0, rx1411_fail3118
    nqp_islist $I20, rx1411_cstack
    unless $I20, rx1411_jump3119
    elements $I18, rx1411_bstack
    le $I18, 0, rx1411_cut3120
    dec $I18
    set $I18, rx1411_bstack[$I18]
  rx1411_cut3120:
    assign rx1411_cstack, $I18
  rx1411_jump3119:
    jump $I19
  rx1411_done3116:
    rx1411_cur."!cursor_fail"()
    .return (rx1411_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<( )>" :subid("cuid_175_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1331
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1415_start
    .local string rx1415_tgt
    .local int rx1415_pos
    .local int rx1415_off
    .local int rx1415_eos
    .local int rx1415_rep
    .local pmc rx1415_cur
    .local pmc rx1415_curclass
    .local pmc rx1415_bstack
    .local pmc rx1415_cstack
    rx1415_start = self."!cursor_start_all"()
    set rx1415_cur, rx1415_start[0]
    set rx1415_tgt, rx1415_start[1]
    set rx1415_pos, rx1415_start[2]
    set rx1415_curclass, rx1415_start[3]
    set rx1415_bstack, rx1415_start[4]
    set $I19, rx1415_start[5]
    store_lex unicode:"$\x{a2}", rx1415_cur
    length rx1415_eos, rx1415_tgt
    eq $I19, 1, rx1415_restart3129
    gt rx1415_pos, rx1415_eos, rx1415_fail3130
    repr_get_attr_int $I11, self, rx1415_curclass, "$!from"
    ne $I11, -1, rxscan1416_done3136
    goto rxscan1416_scan3135
  rxscan1416_loop3134:
    inc rx1415_pos
    gt rx1415_pos, rx1415_eos, rx1415_fail3130
    repr_bind_attr_int rx1415_cur, rx1415_curclass, "$!from", rx1415_pos
  rxscan1416_scan3135:
    nqp_rxmark rx1415_bstack, rxscan1416_loop3134, rx1415_pos, 0
  rxscan1416_done3136:
    add $I11, rx1415_pos, 1
    gt $I11, rx1415_eos, rx1415_fail3130
    substr $S10, rx1415_tgt, rx1415_pos, 1
    ne $S10, ucs4:"(", rx1415_fail3130
    add rx1415_pos, 1
    repr_bind_attr_int rx1415_cur, rx1415_curclass, "$!pos", rx1415_pos
    $P11 = rx1415_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1415_curclass, "$!pos"
    lt $I11, 0, rx1415_fail3130
    repr_get_attr_int rx1415_pos, $P11, rx1415_curclass, "$!pos"
    repr_bind_attr_int rx1415_cur, rx1415_curclass, "$!pos", rx1415_pos
    $P11 = rx1415_cur."arglist"()
    repr_get_attr_int $I11, $P11, rx1415_curclass, "$!pos"
    lt $I11, 0, rx1415_fail3130
    nqp_rxmark rx1415_bstack, rxsubrule1418_pass3138, -1, 0
  rxsubrule1418_pass3138:
    rx1415_cstack = rx1415_cur."!cursor_capture"($P11, "arglist")
    repr_get_attr_int rx1415_pos, $P11, rx1415_curclass, "$!pos"
    add $I11, rx1415_pos, 1
    gt $I11, rx1415_eos, rx1415_fail3130
    substr $S10, rx1415_tgt, rx1415_pos, 1
    ne $S10, ucs4:")", rx1415_fail3130
    add rx1415_pos, 1
    repr_bind_attr_int rx1415_cur, rx1415_curclass, "$!pos", rx1415_pos
    $P11 = rx1415_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1415_curclass, "$!pos"
    lt $I11, 0, rx1415_fail3130
    nqp_rxmark rx1415_bstack, rxsubrule1419_pass3139, -1, 0
  rxsubrule1419_pass3139:
    rx1415_cstack = rx1415_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1415_pos, $P11, rx1415_curclass, "$!pos"
    rx1415_cur."!cursor_pass"(rx1415_pos, "postcircumfix:sym<( )>", 'backtrack'=>1)
    .return (rx1415_cur)
  rx1415_restart3129:
    repr_get_attr_obj rx1415_cstack, rx1415_cur, rx1415_curclass, "$!cstack"
  rx1415_fail3130:
    unless rx1415_bstack, rx1415_done3128
    pop $I19, rx1415_bstack
    if_null rx1415_cstack, rx1415_cstack_done3133
    unless rx1415_cstack, rx1415_cstack_done3133
    dec $I19
    set $P11, rx1415_cstack[$I19]
  rx1415_cstack_done3133:
    pop rx1415_rep, rx1415_bstack
    pop rx1415_pos, rx1415_bstack
    pop $I19, rx1415_bstack
    lt rx1415_pos, -1, rx1415_done3128
    lt rx1415_pos, 0, rx1415_fail3130
    eq $I19, 0, rx1415_fail3130
    nqp_islist $I20, rx1415_cstack
    unless $I20, rx1415_jump3131
    elements $I18, rx1415_bstack
    le $I18, 0, rx1415_cut3132
    dec $I18
    set $I18, rx1415_bstack[$I18]
  rx1415_cut3132:
    assign rx1415_cstack, $I18
  rx1415_jump3131:
    jump $I19
  rx1415_done3128:
    rx1415_cur."!cursor_fail"()
    .return (rx1415_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postfix:sym<.>" :subid("cuid_176_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1336
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1420_start
    .local string rx1420_tgt
    .local int rx1420_pos
    .local int rx1420_off
    .local int rx1420_eos
    .local int rx1420_rep
    .local pmc rx1420_cur
    .local pmc rx1420_curclass
    .local pmc rx1420_bstack
    .local pmc rx1420_cstack
    rx1420_start = self."!cursor_start_all"()
    set rx1420_cur, rx1420_start[0]
    set rx1420_tgt, rx1420_start[1]
    set rx1420_pos, rx1420_start[2]
    set rx1420_curclass, rx1420_start[3]
    set rx1420_bstack, rx1420_start[4]
    set $I19, rx1420_start[5]
    store_lex unicode:"$\x{a2}", rx1420_cur
    length rx1420_eos, rx1420_tgt
    eq $I19, 1, rx1420_restart3142
    gt rx1420_pos, rx1420_eos, rx1420_fail3143
    repr_get_attr_int $I11, self, rx1420_curclass, "$!from"
    ne $I11, -1, rxscan1421_done3149
    goto rxscan1421_scan3148
  rxscan1421_loop3147:
    inc rx1420_pos
    gt rx1420_pos, rx1420_eos, rx1420_fail3143
    repr_bind_attr_int rx1420_cur, rx1420_curclass, "$!from", rx1420_pos
  rxscan1421_scan3148:
    nqp_rxmark rx1420_bstack, rxscan1421_loop3147, rx1420_pos, 0
  rxscan1421_done3149:
    repr_bind_attr_int rx1420_cur, rx1420_curclass, "$!pos", rx1420_pos
    $P11 = rx1420_cur."dotty"()
    repr_get_attr_int $I11, $P11, rx1420_curclass, "$!pos"
    lt $I11, 0, rx1420_fail3143
    nqp_rxmark rx1420_bstack, rxsubrule1422_pass3150, -1, 0
  rxsubrule1422_pass3150:
    rx1420_cstack = rx1420_cur."!cursor_capture"($P11, "dotty")
    repr_get_attr_int rx1420_pos, $P11, rx1420_curclass, "$!pos"
    repr_bind_attr_int rx1420_cur, rx1420_curclass, "$!pos", rx1420_pos
    $P11 = rx1420_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1420_curclass, "$!pos"
    lt $I11, 0, rx1420_fail3143
    nqp_rxmark rx1420_bstack, rxsubrule1423_pass3151, -1, 0
  rxsubrule1423_pass3151:
    rx1420_cstack = rx1420_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1420_pos, $P11, rx1420_curclass, "$!pos"
    rx1420_cur."!cursor_pass"(rx1420_pos, "postfix:sym<.>", 'backtrack'=>1)
    .return (rx1420_cur)
  rx1420_restart3142:
    repr_get_attr_obj rx1420_cstack, rx1420_cur, rx1420_curclass, "$!cstack"
  rx1420_fail3143:
    unless rx1420_bstack, rx1420_done3141
    pop $I19, rx1420_bstack
    if_null rx1420_cstack, rx1420_cstack_done3146
    unless rx1420_cstack, rx1420_cstack_done3146
    dec $I19
    set $P11, rx1420_cstack[$I19]
  rx1420_cstack_done3146:
    pop rx1420_rep, rx1420_bstack
    pop rx1420_pos, rx1420_bstack
    pop $I19, rx1420_bstack
    lt rx1420_pos, -1, rx1420_done3141
    lt rx1420_pos, 0, rx1420_fail3143
    eq $I19, 0, rx1420_fail3143
    nqp_islist $I20, rx1420_cstack
    unless $I20, rx1420_jump3144
    elements $I18, rx1420_bstack
    le $I18, 0, rx1420_cut3145
    dec $I18
    set $I18, rx1420_bstack[$I18]
  rx1420_cut3145:
    assign rx1420_cstack, $I18
  rx1420_jump3144:
    jump $I19
  rx1420_done3141:
    rx1420_cur."!cursor_fail"()
    .return (rx1420_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<++>" :subid("cuid_177_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1338
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1424_start
    .local string rx1424_tgt
    .local int rx1424_pos
    .local int rx1424_off
    .local int rx1424_eos
    .local int rx1424_rep
    .local pmc rx1424_cur
    .local pmc rx1424_curclass
    .local pmc rx1424_bstack
    .local pmc rx1424_cstack
    rx1424_start = self."!cursor_start_all"()
    set rx1424_cur, rx1424_start[0]
    set rx1424_tgt, rx1424_start[1]
    set rx1424_pos, rx1424_start[2]
    set rx1424_curclass, rx1424_start[3]
    set rx1424_bstack, rx1424_start[4]
    set $I19, rx1424_start[5]
    store_lex unicode:"$\x{a2}", rx1424_cur
    length rx1424_eos, rx1424_tgt
    eq $I19, 1, rx1424_restart3154
    gt rx1424_pos, rx1424_eos, rx1424_fail3155
    repr_get_attr_int $I11, self, rx1424_curclass, "$!from"
    ne $I11, -1, rxscan1425_done3161
    goto rxscan1425_scan3160
  rxscan1425_loop3159:
    inc rx1424_pos
    gt rx1424_pos, rx1424_eos, rx1424_fail3155
    repr_bind_attr_int rx1424_cur, rx1424_curclass, "$!from", rx1424_pos
  rxscan1425_scan3160:
    nqp_rxmark rx1424_bstack, rxscan1425_loop3159, rx1424_pos, 0
  rxscan1425_done3161:
    nqp_rxmark rx1424_bstack, rxcap1426_fail3163, rx1424_pos, 0
    add $I11, rx1424_pos, 2
    gt $I11, rx1424_eos, rx1424_fail3155
    substr $S10, rx1424_tgt, rx1424_pos, 2
    ne $S10, ucs4:"++", rx1424_fail3155
    add rx1424_pos, 2
    nqp_rxpeek $I19, rx1424_bstack, rxcap1426_fail3163
    inc $I19
    set $I11, rx1424_bstack[$I19]
    repr_bind_attr_int rx1424_cur, rx1424_curclass, "$!pos", rx1424_pos
    $P11 = rx1424_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1424_pos)
    rx1424_cstack = rx1424_cur."!cursor_capture"($P11, "sym")
    goto rxcap1426_done3162
  rxcap1426_fail3163:
    goto rx1424_fail3155
  rxcap1426_done3162:
    repr_bind_attr_int rx1424_cur, rx1424_curclass, "$!pos", rx1424_pos
    $P11 = rx1424_cur."O"("%autoincrement, :op<preinc>")
    repr_get_attr_int $I11, $P11, rx1424_curclass, "$!pos"
    lt $I11, 0, rx1424_fail3155
    nqp_rxmark rx1424_bstack, rxsubrule1427_pass3164, -1, 0
  rxsubrule1427_pass3164:
    rx1424_cstack = rx1424_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1424_pos, $P11, rx1424_curclass, "$!pos"
    rx1424_cur."!cursor_pass"(rx1424_pos, "prefix:sym<++>", 'backtrack'=>1)
    .return (rx1424_cur)
  rx1424_restart3154:
    repr_get_attr_obj rx1424_cstack, rx1424_cur, rx1424_curclass, "$!cstack"
  rx1424_fail3155:
    unless rx1424_bstack, rx1424_done3153
    pop $I19, rx1424_bstack
    if_null rx1424_cstack, rx1424_cstack_done3158
    unless rx1424_cstack, rx1424_cstack_done3158
    dec $I19
    set $P11, rx1424_cstack[$I19]
  rx1424_cstack_done3158:
    pop rx1424_rep, rx1424_bstack
    pop rx1424_pos, rx1424_bstack
    pop $I19, rx1424_bstack
    lt rx1424_pos, -1, rx1424_done3153
    lt rx1424_pos, 0, rx1424_fail3155
    eq $I19, 0, rx1424_fail3155
    nqp_islist $I20, rx1424_cstack
    unless $I20, rx1424_jump3156
    elements $I18, rx1424_bstack
    le $I18, 0, rx1424_cut3157
    dec $I18
    set $I18, rx1424_bstack[$I18]
  rx1424_cut3157:
    assign rx1424_cstack, $I18
  rx1424_jump3156:
    jump $I19
  rx1424_done3153:
    rx1424_cur."!cursor_fail"()
    .return (rx1424_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<-->" :subid("cuid_178_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1339
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1428_start
    .local string rx1428_tgt
    .local int rx1428_pos
    .local int rx1428_off
    .local int rx1428_eos
    .local int rx1428_rep
    .local pmc rx1428_cur
    .local pmc rx1428_curclass
    .local pmc rx1428_bstack
    .local pmc rx1428_cstack
    rx1428_start = self."!cursor_start_all"()
    set rx1428_cur, rx1428_start[0]
    set rx1428_tgt, rx1428_start[1]
    set rx1428_pos, rx1428_start[2]
    set rx1428_curclass, rx1428_start[3]
    set rx1428_bstack, rx1428_start[4]
    set $I19, rx1428_start[5]
    store_lex unicode:"$\x{a2}", rx1428_cur
    length rx1428_eos, rx1428_tgt
    eq $I19, 1, rx1428_restart3167
    gt rx1428_pos, rx1428_eos, rx1428_fail3168
    repr_get_attr_int $I11, self, rx1428_curclass, "$!from"
    ne $I11, -1, rxscan1429_done3174
    goto rxscan1429_scan3173
  rxscan1429_loop3172:
    inc rx1428_pos
    gt rx1428_pos, rx1428_eos, rx1428_fail3168
    repr_bind_attr_int rx1428_cur, rx1428_curclass, "$!from", rx1428_pos
  rxscan1429_scan3173:
    nqp_rxmark rx1428_bstack, rxscan1429_loop3172, rx1428_pos, 0
  rxscan1429_done3174:
    nqp_rxmark rx1428_bstack, rxcap1430_fail3176, rx1428_pos, 0
    add $I11, rx1428_pos, 2
    gt $I11, rx1428_eos, rx1428_fail3168
    substr $S10, rx1428_tgt, rx1428_pos, 2
    ne $S10, ucs4:"--", rx1428_fail3168
    add rx1428_pos, 2
    nqp_rxpeek $I19, rx1428_bstack, rxcap1430_fail3176
    inc $I19
    set $I11, rx1428_bstack[$I19]
    repr_bind_attr_int rx1428_cur, rx1428_curclass, "$!pos", rx1428_pos
    $P11 = rx1428_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1428_pos)
    rx1428_cstack = rx1428_cur."!cursor_capture"($P11, "sym")
    goto rxcap1430_done3175
  rxcap1430_fail3176:
    goto rx1428_fail3168
  rxcap1430_done3175:
    repr_bind_attr_int rx1428_cur, rx1428_curclass, "$!pos", rx1428_pos
    $P11 = rx1428_cur."O"("%autoincrement, :op<predec>")
    repr_get_attr_int $I11, $P11, rx1428_curclass, "$!pos"
    lt $I11, 0, rx1428_fail3168
    nqp_rxmark rx1428_bstack, rxsubrule1431_pass3177, -1, 0
  rxsubrule1431_pass3177:
    rx1428_cstack = rx1428_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1428_pos, $P11, rx1428_curclass, "$!pos"
    rx1428_cur."!cursor_pass"(rx1428_pos, "prefix:sym<-->", 'backtrack'=>1)
    .return (rx1428_cur)
  rx1428_restart3167:
    repr_get_attr_obj rx1428_cstack, rx1428_cur, rx1428_curclass, "$!cstack"
  rx1428_fail3168:
    unless rx1428_bstack, rx1428_done3166
    pop $I19, rx1428_bstack
    if_null rx1428_cstack, rx1428_cstack_done3171
    unless rx1428_cstack, rx1428_cstack_done3171
    dec $I19
    set $P11, rx1428_cstack[$I19]
  rx1428_cstack_done3171:
    pop rx1428_rep, rx1428_bstack
    pop rx1428_pos, rx1428_bstack
    pop $I19, rx1428_bstack
    lt rx1428_pos, -1, rx1428_done3166
    lt rx1428_pos, 0, rx1428_fail3168
    eq $I19, 0, rx1428_fail3168
    nqp_islist $I20, rx1428_cstack
    unless $I20, rx1428_jump3169
    elements $I18, rx1428_bstack
    le $I18, 0, rx1428_cut3170
    dec $I18
    set $I18, rx1428_bstack[$I18]
  rx1428_cut3170:
    assign rx1428_cstack, $I18
  rx1428_jump3169:
    jump $I19
  rx1428_done3166:
    rx1428_cur."!cursor_fail"()
    .return (rx1428_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postfix:sym<++>" :subid("cuid_179_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1341
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1432_start
    .local string rx1432_tgt
    .local int rx1432_pos
    .local int rx1432_off
    .local int rx1432_eos
    .local int rx1432_rep
    .local pmc rx1432_cur
    .local pmc rx1432_curclass
    .local pmc rx1432_bstack
    .local pmc rx1432_cstack
    rx1432_start = self."!cursor_start_all"()
    set rx1432_cur, rx1432_start[0]
    set rx1432_tgt, rx1432_start[1]
    set rx1432_pos, rx1432_start[2]
    set rx1432_curclass, rx1432_start[3]
    set rx1432_bstack, rx1432_start[4]
    set $I19, rx1432_start[5]
    store_lex unicode:"$\x{a2}", rx1432_cur
    length rx1432_eos, rx1432_tgt
    eq $I19, 1, rx1432_restart3180
    gt rx1432_pos, rx1432_eos, rx1432_fail3181
    repr_get_attr_int $I11, self, rx1432_curclass, "$!from"
    ne $I11, -1, rxscan1433_done3187
    goto rxscan1433_scan3186
  rxscan1433_loop3185:
    inc rx1432_pos
    gt rx1432_pos, rx1432_eos, rx1432_fail3181
    repr_bind_attr_int rx1432_cur, rx1432_curclass, "$!from", rx1432_pos
  rxscan1433_scan3186:
    nqp_rxmark rx1432_bstack, rxscan1433_loop3185, rx1432_pos, 0
  rxscan1433_done3187:
    nqp_rxmark rx1432_bstack, rxcap1434_fail3189, rx1432_pos, 0
    add $I11, rx1432_pos, 2
    gt $I11, rx1432_eos, rx1432_fail3181
    substr $S10, rx1432_tgt, rx1432_pos, 2
    ne $S10, ucs4:"++", rx1432_fail3181
    add rx1432_pos, 2
    nqp_rxpeek $I19, rx1432_bstack, rxcap1434_fail3189
    inc $I19
    set $I11, rx1432_bstack[$I19]
    repr_bind_attr_int rx1432_cur, rx1432_curclass, "$!pos", rx1432_pos
    $P11 = rx1432_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1432_pos)
    rx1432_cstack = rx1432_cur."!cursor_capture"($P11, "sym")
    goto rxcap1434_done3188
  rxcap1434_fail3189:
    goto rx1432_fail3181
  rxcap1434_done3188:
    repr_bind_attr_int rx1432_cur, rx1432_curclass, "$!pos", rx1432_pos
    $P11 = rx1432_cur."O"("%autoincrement, :op<postinc>")
    repr_get_attr_int $I11, $P11, rx1432_curclass, "$!pos"
    lt $I11, 0, rx1432_fail3181
    nqp_rxmark rx1432_bstack, rxsubrule1435_pass3190, -1, 0
  rxsubrule1435_pass3190:
    rx1432_cstack = rx1432_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1432_pos, $P11, rx1432_curclass, "$!pos"
    rx1432_cur."!cursor_pass"(rx1432_pos, "postfix:sym<++>", 'backtrack'=>1)
    .return (rx1432_cur)
  rx1432_restart3180:
    repr_get_attr_obj rx1432_cstack, rx1432_cur, rx1432_curclass, "$!cstack"
  rx1432_fail3181:
    unless rx1432_bstack, rx1432_done3179
    pop $I19, rx1432_bstack
    if_null rx1432_cstack, rx1432_cstack_done3184
    unless rx1432_cstack, rx1432_cstack_done3184
    dec $I19
    set $P11, rx1432_cstack[$I19]
  rx1432_cstack_done3184:
    pop rx1432_rep, rx1432_bstack
    pop rx1432_pos, rx1432_bstack
    pop $I19, rx1432_bstack
    lt rx1432_pos, -1, rx1432_done3179
    lt rx1432_pos, 0, rx1432_fail3181
    eq $I19, 0, rx1432_fail3181
    nqp_islist $I20, rx1432_cstack
    unless $I20, rx1432_jump3182
    elements $I18, rx1432_bstack
    le $I18, 0, rx1432_cut3183
    dec $I18
    set $I18, rx1432_bstack[$I18]
  rx1432_cut3183:
    assign rx1432_cstack, $I18
  rx1432_jump3182:
    jump $I19
  rx1432_done3179:
    rx1432_cur."!cursor_fail"()
    .return (rx1432_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postfix:sym<-->" :subid("cuid_180_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1342
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1436_start
    .local string rx1436_tgt
    .local int rx1436_pos
    .local int rx1436_off
    .local int rx1436_eos
    .local int rx1436_rep
    .local pmc rx1436_cur
    .local pmc rx1436_curclass
    .local pmc rx1436_bstack
    .local pmc rx1436_cstack
    rx1436_start = self."!cursor_start_all"()
    set rx1436_cur, rx1436_start[0]
    set rx1436_tgt, rx1436_start[1]
    set rx1436_pos, rx1436_start[2]
    set rx1436_curclass, rx1436_start[3]
    set rx1436_bstack, rx1436_start[4]
    set $I19, rx1436_start[5]
    store_lex unicode:"$\x{a2}", rx1436_cur
    length rx1436_eos, rx1436_tgt
    eq $I19, 1, rx1436_restart3193
    gt rx1436_pos, rx1436_eos, rx1436_fail3194
    repr_get_attr_int $I11, self, rx1436_curclass, "$!from"
    ne $I11, -1, rxscan1437_done3200
    goto rxscan1437_scan3199
  rxscan1437_loop3198:
    inc rx1436_pos
    gt rx1436_pos, rx1436_eos, rx1436_fail3194
    repr_bind_attr_int rx1436_cur, rx1436_curclass, "$!from", rx1436_pos
  rxscan1437_scan3199:
    nqp_rxmark rx1436_bstack, rxscan1437_loop3198, rx1436_pos, 0
  rxscan1437_done3200:
    nqp_rxmark rx1436_bstack, rxcap1438_fail3202, rx1436_pos, 0
    add $I11, rx1436_pos, 2
    gt $I11, rx1436_eos, rx1436_fail3194
    substr $S10, rx1436_tgt, rx1436_pos, 2
    ne $S10, ucs4:"--", rx1436_fail3194
    add rx1436_pos, 2
    nqp_rxpeek $I19, rx1436_bstack, rxcap1438_fail3202
    inc $I19
    set $I11, rx1436_bstack[$I19]
    repr_bind_attr_int rx1436_cur, rx1436_curclass, "$!pos", rx1436_pos
    $P11 = rx1436_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1436_pos)
    rx1436_cstack = rx1436_cur."!cursor_capture"($P11, "sym")
    goto rxcap1438_done3201
  rxcap1438_fail3202:
    goto rx1436_fail3194
  rxcap1438_done3201:
    repr_bind_attr_int rx1436_cur, rx1436_curclass, "$!pos", rx1436_pos
    $P11 = rx1436_cur."O"("%autoincrement, :op<postdec>")
    repr_get_attr_int $I11, $P11, rx1436_curclass, "$!pos"
    lt $I11, 0, rx1436_fail3194
    nqp_rxmark rx1436_bstack, rxsubrule1439_pass3203, -1, 0
  rxsubrule1439_pass3203:
    rx1436_cstack = rx1436_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1436_pos, $P11, rx1436_curclass, "$!pos"
    rx1436_cur."!cursor_pass"(rx1436_pos, "postfix:sym<-->", 'backtrack'=>1)
    .return (rx1436_cur)
  rx1436_restart3193:
    repr_get_attr_obj rx1436_cstack, rx1436_cur, rx1436_curclass, "$!cstack"
  rx1436_fail3194:
    unless rx1436_bstack, rx1436_done3192
    pop $I19, rx1436_bstack
    if_null rx1436_cstack, rx1436_cstack_done3197
    unless rx1436_cstack, rx1436_cstack_done3197
    dec $I19
    set $P11, rx1436_cstack[$I19]
  rx1436_cstack_done3197:
    pop rx1436_rep, rx1436_bstack
    pop rx1436_pos, rx1436_bstack
    pop $I19, rx1436_bstack
    lt rx1436_pos, -1, rx1436_done3192
    lt rx1436_pos, 0, rx1436_fail3194
    eq $I19, 0, rx1436_fail3194
    nqp_islist $I20, rx1436_cstack
    unless $I20, rx1436_jump3195
    elements $I18, rx1436_bstack
    le $I18, 0, rx1436_cut3196
    dec $I18
    set $I18, rx1436_bstack[$I18]
  rx1436_cut3196:
    assign rx1436_cstack, $I18
  rx1436_jump3195:
    jump $I19
  rx1436_done3192:
    rx1436_cur."!cursor_fail"()
    .return (rx1436_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<**>" :subid("cuid_181_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1344
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1440_start
    .local string rx1440_tgt
    .local int rx1440_pos
    .local int rx1440_off
    .local int rx1440_eos
    .local int rx1440_rep
    .local pmc rx1440_cur
    .local pmc rx1440_curclass
    .local pmc rx1440_bstack
    .local pmc rx1440_cstack
    rx1440_start = self."!cursor_start_all"()
    set rx1440_cur, rx1440_start[0]
    set rx1440_tgt, rx1440_start[1]
    set rx1440_pos, rx1440_start[2]
    set rx1440_curclass, rx1440_start[3]
    set rx1440_bstack, rx1440_start[4]
    set $I19, rx1440_start[5]
    store_lex unicode:"$\x{a2}", rx1440_cur
    length rx1440_eos, rx1440_tgt
    eq $I19, 1, rx1440_restart3206
    gt rx1440_pos, rx1440_eos, rx1440_fail3207
    repr_get_attr_int $I11, self, rx1440_curclass, "$!from"
    ne $I11, -1, rxscan1441_done3213
    goto rxscan1441_scan3212
  rxscan1441_loop3211:
    inc rx1440_pos
    gt rx1440_pos, rx1440_eos, rx1440_fail3207
    repr_bind_attr_int rx1440_cur, rx1440_curclass, "$!from", rx1440_pos
  rxscan1441_scan3212:
    nqp_rxmark rx1440_bstack, rxscan1441_loop3211, rx1440_pos, 0
  rxscan1441_done3213:
    nqp_rxmark rx1440_bstack, rxcap1442_fail3215, rx1440_pos, 0
    add $I11, rx1440_pos, 2
    gt $I11, rx1440_eos, rx1440_fail3207
    substr $S10, rx1440_tgt, rx1440_pos, 2
    ne $S10, ucs4:"**", rx1440_fail3207
    add rx1440_pos, 2
    nqp_rxpeek $I19, rx1440_bstack, rxcap1442_fail3215
    inc $I19
    set $I11, rx1440_bstack[$I19]
    repr_bind_attr_int rx1440_cur, rx1440_curclass, "$!pos", rx1440_pos
    $P11 = rx1440_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1440_pos)
    rx1440_cstack = rx1440_cur."!cursor_capture"($P11, "sym")
    goto rxcap1442_done3214
  rxcap1442_fail3215:
    goto rx1440_fail3207
  rxcap1442_done3214:
    repr_bind_attr_int rx1440_cur, rx1440_curclass, "$!pos", rx1440_pos
    $P11 = rx1440_cur."O"("%exponentiation, :op<pow_n>")
    repr_get_attr_int $I11, $P11, rx1440_curclass, "$!pos"
    lt $I11, 0, rx1440_fail3207
    nqp_rxmark rx1440_bstack, rxsubrule1443_pass3216, -1, 0
  rxsubrule1443_pass3216:
    rx1440_cstack = rx1440_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1440_pos, $P11, rx1440_curclass, "$!pos"
    rx1440_cur."!cursor_pass"(rx1440_pos, "infix:sym<**>", 'backtrack'=>1)
    .return (rx1440_cur)
  rx1440_restart3206:
    repr_get_attr_obj rx1440_cstack, rx1440_cur, rx1440_curclass, "$!cstack"
  rx1440_fail3207:
    unless rx1440_bstack, rx1440_done3205
    pop $I19, rx1440_bstack
    if_null rx1440_cstack, rx1440_cstack_done3210
    unless rx1440_cstack, rx1440_cstack_done3210
    dec $I19
    set $P11, rx1440_cstack[$I19]
  rx1440_cstack_done3210:
    pop rx1440_rep, rx1440_bstack
    pop rx1440_pos, rx1440_bstack
    pop $I19, rx1440_bstack
    lt rx1440_pos, -1, rx1440_done3205
    lt rx1440_pos, 0, rx1440_fail3207
    eq $I19, 0, rx1440_fail3207
    nqp_islist $I20, rx1440_cstack
    unless $I20, rx1440_jump3208
    elements $I18, rx1440_bstack
    le $I18, 0, rx1440_cut3209
    dec $I18
    set $I18, rx1440_bstack[$I18]
  rx1440_cut3209:
    assign rx1440_cstack, $I18
  rx1440_jump3208:
    jump $I19
  rx1440_done3205:
    rx1440_cur."!cursor_fail"()
    .return (rx1440_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<+>" :subid("cuid_182_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1346
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1444_start
    .local string rx1444_tgt
    .local int rx1444_pos
    .local int rx1444_off
    .local int rx1444_eos
    .local int rx1444_rep
    .local pmc rx1444_cur
    .local pmc rx1444_curclass
    .local pmc rx1444_bstack
    .local pmc rx1444_cstack
    rx1444_start = self."!cursor_start_all"()
    set rx1444_cur, rx1444_start[0]
    set rx1444_tgt, rx1444_start[1]
    set rx1444_pos, rx1444_start[2]
    set rx1444_curclass, rx1444_start[3]
    set rx1444_bstack, rx1444_start[4]
    set $I19, rx1444_start[5]
    store_lex unicode:"$\x{a2}", rx1444_cur
    length rx1444_eos, rx1444_tgt
    eq $I19, 1, rx1444_restart3219
    gt rx1444_pos, rx1444_eos, rx1444_fail3220
    repr_get_attr_int $I11, self, rx1444_curclass, "$!from"
    ne $I11, -1, rxscan1445_done3226
    goto rxscan1445_scan3225
  rxscan1445_loop3224:
    inc rx1444_pos
    gt rx1444_pos, rx1444_eos, rx1444_fail3220
    repr_bind_attr_int rx1444_cur, rx1444_curclass, "$!from", rx1444_pos
  rxscan1445_scan3225:
    nqp_rxmark rx1444_bstack, rxscan1445_loop3224, rx1444_pos, 0
  rxscan1445_done3226:
    nqp_rxmark rx1444_bstack, rxcap1446_fail3228, rx1444_pos, 0
    add $I11, rx1444_pos, 1
    gt $I11, rx1444_eos, rx1444_fail3220
    substr $S10, rx1444_tgt, rx1444_pos, 1
    ne $S10, ucs4:"+", rx1444_fail3220
    add rx1444_pos, 1
    nqp_rxpeek $I19, rx1444_bstack, rxcap1446_fail3228
    inc $I19
    set $I11, rx1444_bstack[$I19]
    repr_bind_attr_int rx1444_cur, rx1444_curclass, "$!pos", rx1444_pos
    $P11 = rx1444_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1444_pos)
    rx1444_cstack = rx1444_cur."!cursor_capture"($P11, "sym")
    goto rxcap1446_done3227
  rxcap1446_fail3228:
    goto rx1444_fail3220
  rxcap1446_done3227:
    repr_bind_attr_int rx1444_cur, rx1444_curclass, "$!pos", rx1444_pos
    $P11 = rx1444_cur."O"("%symbolic_unary, :op<numify>")
    repr_get_attr_int $I11, $P11, rx1444_curclass, "$!pos"
    lt $I11, 0, rx1444_fail3220
    nqp_rxmark rx1444_bstack, rxsubrule1447_pass3229, -1, 0
  rxsubrule1447_pass3229:
    rx1444_cstack = rx1444_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1444_pos, $P11, rx1444_curclass, "$!pos"
    rx1444_cur."!cursor_pass"(rx1444_pos, "prefix:sym<+>", 'backtrack'=>1)
    .return (rx1444_cur)
  rx1444_restart3219:
    repr_get_attr_obj rx1444_cstack, rx1444_cur, rx1444_curclass, "$!cstack"
  rx1444_fail3220:
    unless rx1444_bstack, rx1444_done3218
    pop $I19, rx1444_bstack
    if_null rx1444_cstack, rx1444_cstack_done3223
    unless rx1444_cstack, rx1444_cstack_done3223
    dec $I19
    set $P11, rx1444_cstack[$I19]
  rx1444_cstack_done3223:
    pop rx1444_rep, rx1444_bstack
    pop rx1444_pos, rx1444_bstack
    pop $I19, rx1444_bstack
    lt rx1444_pos, -1, rx1444_done3218
    lt rx1444_pos, 0, rx1444_fail3220
    eq $I19, 0, rx1444_fail3220
    nqp_islist $I20, rx1444_cstack
    unless $I20, rx1444_jump3221
    elements $I18, rx1444_bstack
    le $I18, 0, rx1444_cut3222
    dec $I18
    set $I18, rx1444_bstack[$I18]
  rx1444_cut3222:
    assign rx1444_cstack, $I18
  rx1444_jump3221:
    jump $I19
  rx1444_done3218:
    rx1444_cur."!cursor_fail"()
    .return (rx1444_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<~>" :subid("cuid_183_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1347
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1448_start
    .local string rx1448_tgt
    .local int rx1448_pos
    .local int rx1448_off
    .local int rx1448_eos
    .local int rx1448_rep
    .local pmc rx1448_cur
    .local pmc rx1448_curclass
    .local pmc rx1448_bstack
    .local pmc rx1448_cstack
    rx1448_start = self."!cursor_start_all"()
    set rx1448_cur, rx1448_start[0]
    set rx1448_tgt, rx1448_start[1]
    set rx1448_pos, rx1448_start[2]
    set rx1448_curclass, rx1448_start[3]
    set rx1448_bstack, rx1448_start[4]
    set $I19, rx1448_start[5]
    store_lex unicode:"$\x{a2}", rx1448_cur
    length rx1448_eos, rx1448_tgt
    eq $I19, 1, rx1448_restart3232
    gt rx1448_pos, rx1448_eos, rx1448_fail3233
    repr_get_attr_int $I11, self, rx1448_curclass, "$!from"
    ne $I11, -1, rxscan1449_done3239
    goto rxscan1449_scan3238
  rxscan1449_loop3237:
    inc rx1448_pos
    gt rx1448_pos, rx1448_eos, rx1448_fail3233
    repr_bind_attr_int rx1448_cur, rx1448_curclass, "$!from", rx1448_pos
  rxscan1449_scan3238:
    nqp_rxmark rx1448_bstack, rxscan1449_loop3237, rx1448_pos, 0
  rxscan1449_done3239:
    nqp_rxmark rx1448_bstack, rxcap1450_fail3241, rx1448_pos, 0
    add $I11, rx1448_pos, 1
    gt $I11, rx1448_eos, rx1448_fail3233
    substr $S10, rx1448_tgt, rx1448_pos, 1
    ne $S10, ucs4:"~", rx1448_fail3233
    add rx1448_pos, 1
    nqp_rxpeek $I19, rx1448_bstack, rxcap1450_fail3241
    inc $I19
    set $I11, rx1448_bstack[$I19]
    repr_bind_attr_int rx1448_cur, rx1448_curclass, "$!pos", rx1448_pos
    $P11 = rx1448_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1448_pos)
    rx1448_cstack = rx1448_cur."!cursor_capture"($P11, "sym")
    goto rxcap1450_done3240
  rxcap1450_fail3241:
    goto rx1448_fail3233
  rxcap1450_done3240:
    repr_bind_attr_int rx1448_cur, rx1448_curclass, "$!pos", rx1448_pos
    $P11 = rx1448_cur."O"("%symbolic_unary, :op<stringify>")
    repr_get_attr_int $I11, $P11, rx1448_curclass, "$!pos"
    lt $I11, 0, rx1448_fail3233
    nqp_rxmark rx1448_bstack, rxsubrule1451_pass3242, -1, 0
  rxsubrule1451_pass3242:
    rx1448_cstack = rx1448_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1448_pos, $P11, rx1448_curclass, "$!pos"
    rx1448_cur."!cursor_pass"(rx1448_pos, "prefix:sym<~>", 'backtrack'=>1)
    .return (rx1448_cur)
  rx1448_restart3232:
    repr_get_attr_obj rx1448_cstack, rx1448_cur, rx1448_curclass, "$!cstack"
  rx1448_fail3233:
    unless rx1448_bstack, rx1448_done3231
    pop $I19, rx1448_bstack
    if_null rx1448_cstack, rx1448_cstack_done3236
    unless rx1448_cstack, rx1448_cstack_done3236
    dec $I19
    set $P11, rx1448_cstack[$I19]
  rx1448_cstack_done3236:
    pop rx1448_rep, rx1448_bstack
    pop rx1448_pos, rx1448_bstack
    pop $I19, rx1448_bstack
    lt rx1448_pos, -1, rx1448_done3231
    lt rx1448_pos, 0, rx1448_fail3233
    eq $I19, 0, rx1448_fail3233
    nqp_islist $I20, rx1448_cstack
    unless $I20, rx1448_jump3234
    elements $I18, rx1448_bstack
    le $I18, 0, rx1448_cut3235
    dec $I18
    set $I18, rx1448_bstack[$I18]
  rx1448_cut3235:
    assign rx1448_cstack, $I18
  rx1448_jump3234:
    jump $I19
  rx1448_done3231:
    rx1448_cur."!cursor_fail"()
    .return (rx1448_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<->" :subid("cuid_184_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1348
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1452_start
    .local string rx1452_tgt
    .local int rx1452_pos
    .local int rx1452_off
    .local int rx1452_eos
    .local int rx1452_rep
    .local pmc rx1452_cur
    .local pmc rx1452_curclass
    .local pmc rx1452_bstack
    .local pmc rx1452_cstack
    rx1452_start = self."!cursor_start_all"()
    set rx1452_cur, rx1452_start[0]
    set rx1452_tgt, rx1452_start[1]
    set rx1452_pos, rx1452_start[2]
    set rx1452_curclass, rx1452_start[3]
    set rx1452_bstack, rx1452_start[4]
    set $I19, rx1452_start[5]
    store_lex unicode:"$\x{a2}", rx1452_cur
    length rx1452_eos, rx1452_tgt
    eq $I19, 1, rx1452_restart3245
    gt rx1452_pos, rx1452_eos, rx1452_fail3246
    repr_get_attr_int $I11, self, rx1452_curclass, "$!from"
    ne $I11, -1, rxscan1453_done3252
    goto rxscan1453_scan3251
  rxscan1453_loop3250:
    inc rx1452_pos
    gt rx1452_pos, rx1452_eos, rx1452_fail3246
    repr_bind_attr_int rx1452_cur, rx1452_curclass, "$!from", rx1452_pos
  rxscan1453_scan3251:
    nqp_rxmark rx1452_bstack, rxscan1453_loop3250, rx1452_pos, 0
  rxscan1453_done3252:
    nqp_rxmark rx1452_bstack, rxcap1454_fail3254, rx1452_pos, 0
    add $I11, rx1452_pos, 1
    gt $I11, rx1452_eos, rx1452_fail3246
    substr $S10, rx1452_tgt, rx1452_pos, 1
    ne $S10, ucs4:"-", rx1452_fail3246
    add rx1452_pos, 1
    nqp_rxpeek $I19, rx1452_bstack, rxcap1454_fail3254
    inc $I19
    set $I11, rx1452_bstack[$I19]
    repr_bind_attr_int rx1452_cur, rx1452_curclass, "$!pos", rx1452_pos
    $P11 = rx1452_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1452_pos)
    rx1452_cstack = rx1452_cur."!cursor_capture"($P11, "sym")
    goto rxcap1454_done3253
  rxcap1454_fail3254:
    goto rx1452_fail3246
  rxcap1454_done3253:
    ge rx1452_pos, rx1452_eos, rx1452_fail3246
    substr $S11, rx1452_tgt, rx1452_pos, 1
    index $I11, ucs4:">", $S11
    ge $I11, 0, rx1452_fail3246
    repr_bind_attr_int rx1452_cur, rx1452_curclass, "$!pos", rx1452_pos
    $P11 = rx1452_cur."number"()
    repr_get_attr_int $I11, $P11, rx1452_curclass, "$!pos"
    ge $I11, 0, rx1452_fail3246
    repr_bind_attr_int rx1452_cur, rx1452_curclass, "$!pos", rx1452_pos
    $P11 = rx1452_cur."O"("%symbolic_unary, :op<neg_n>")
    repr_get_attr_int $I11, $P11, rx1452_curclass, "$!pos"
    lt $I11, 0, rx1452_fail3246
    nqp_rxmark rx1452_bstack, rxsubrule1455_pass3255, -1, 0
  rxsubrule1455_pass3255:
    rx1452_cstack = rx1452_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1452_pos, $P11, rx1452_curclass, "$!pos"
    rx1452_cur."!cursor_pass"(rx1452_pos, "prefix:sym<->", 'backtrack'=>1)
    .return (rx1452_cur)
  rx1452_restart3245:
    repr_get_attr_obj rx1452_cstack, rx1452_cur, rx1452_curclass, "$!cstack"
  rx1452_fail3246:
    unless rx1452_bstack, rx1452_done3244
    pop $I19, rx1452_bstack
    if_null rx1452_cstack, rx1452_cstack_done3249
    unless rx1452_cstack, rx1452_cstack_done3249
    dec $I19
    set $P11, rx1452_cstack[$I19]
  rx1452_cstack_done3249:
    pop rx1452_rep, rx1452_bstack
    pop rx1452_pos, rx1452_bstack
    pop $I19, rx1452_bstack
    lt rx1452_pos, -1, rx1452_done3244
    lt rx1452_pos, 0, rx1452_fail3246
    eq $I19, 0, rx1452_fail3246
    nqp_islist $I20, rx1452_cstack
    unless $I20, rx1452_jump3247
    elements $I18, rx1452_bstack
    le $I18, 0, rx1452_cut3248
    dec $I18
    set $I18, rx1452_bstack[$I18]
  rx1452_cut3248:
    assign rx1452_cstack, $I18
  rx1452_jump3247:
    jump $I19
  rx1452_done3244:
    rx1452_cur."!cursor_fail"()
    .return (rx1452_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<?>" :subid("cuid_185_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1349
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1456_start
    .local string rx1456_tgt
    .local int rx1456_pos
    .local int rx1456_off
    .local int rx1456_eos
    .local int rx1456_rep
    .local pmc rx1456_cur
    .local pmc rx1456_curclass
    .local pmc rx1456_bstack
    .local pmc rx1456_cstack
    rx1456_start = self."!cursor_start_all"()
    set rx1456_cur, rx1456_start[0]
    set rx1456_tgt, rx1456_start[1]
    set rx1456_pos, rx1456_start[2]
    set rx1456_curclass, rx1456_start[3]
    set rx1456_bstack, rx1456_start[4]
    set $I19, rx1456_start[5]
    store_lex unicode:"$\x{a2}", rx1456_cur
    length rx1456_eos, rx1456_tgt
    eq $I19, 1, rx1456_restart3258
    gt rx1456_pos, rx1456_eos, rx1456_fail3259
    repr_get_attr_int $I11, self, rx1456_curclass, "$!from"
    ne $I11, -1, rxscan1457_done3265
    goto rxscan1457_scan3264
  rxscan1457_loop3263:
    inc rx1456_pos
    gt rx1456_pos, rx1456_eos, rx1456_fail3259
    repr_bind_attr_int rx1456_cur, rx1456_curclass, "$!from", rx1456_pos
  rxscan1457_scan3264:
    nqp_rxmark rx1456_bstack, rxscan1457_loop3263, rx1456_pos, 0
  rxscan1457_done3265:
    nqp_rxmark rx1456_bstack, rxcap1458_fail3267, rx1456_pos, 0
    add $I11, rx1456_pos, 1
    gt $I11, rx1456_eos, rx1456_fail3259
    substr $S10, rx1456_tgt, rx1456_pos, 1
    ne $S10, ucs4:"?", rx1456_fail3259
    add rx1456_pos, 1
    nqp_rxpeek $I19, rx1456_bstack, rxcap1458_fail3267
    inc $I19
    set $I11, rx1456_bstack[$I19]
    repr_bind_attr_int rx1456_cur, rx1456_curclass, "$!pos", rx1456_pos
    $P11 = rx1456_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1456_pos)
    rx1456_cstack = rx1456_cur."!cursor_capture"($P11, "sym")
    goto rxcap1458_done3266
  rxcap1458_fail3267:
    goto rx1456_fail3259
  rxcap1458_done3266:
    repr_bind_attr_int rx1456_cur, rx1456_curclass, "$!pos", rx1456_pos
    $P11 = rx1456_cur."O"("%symbolic_unary, :op<istrue>")
    repr_get_attr_int $I11, $P11, rx1456_curclass, "$!pos"
    lt $I11, 0, rx1456_fail3259
    nqp_rxmark rx1456_bstack, rxsubrule1459_pass3268, -1, 0
  rxsubrule1459_pass3268:
    rx1456_cstack = rx1456_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1456_pos, $P11, rx1456_curclass, "$!pos"
    rx1456_cur."!cursor_pass"(rx1456_pos, "prefix:sym<?>", 'backtrack'=>1)
    .return (rx1456_cur)
  rx1456_restart3258:
    repr_get_attr_obj rx1456_cstack, rx1456_cur, rx1456_curclass, "$!cstack"
  rx1456_fail3259:
    unless rx1456_bstack, rx1456_done3257
    pop $I19, rx1456_bstack
    if_null rx1456_cstack, rx1456_cstack_done3262
    unless rx1456_cstack, rx1456_cstack_done3262
    dec $I19
    set $P11, rx1456_cstack[$I19]
  rx1456_cstack_done3262:
    pop rx1456_rep, rx1456_bstack
    pop rx1456_pos, rx1456_bstack
    pop $I19, rx1456_bstack
    lt rx1456_pos, -1, rx1456_done3257
    lt rx1456_pos, 0, rx1456_fail3259
    eq $I19, 0, rx1456_fail3259
    nqp_islist $I20, rx1456_cstack
    unless $I20, rx1456_jump3260
    elements $I18, rx1456_bstack
    le $I18, 0, rx1456_cut3261
    dec $I18
    set $I18, rx1456_bstack[$I18]
  rx1456_cut3261:
    assign rx1456_cstack, $I18
  rx1456_jump3260:
    jump $I19
  rx1456_done3257:
    rx1456_cur."!cursor_fail"()
    .return (rx1456_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<!>" :subid("cuid_186_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1350
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1460_start
    .local string rx1460_tgt
    .local int rx1460_pos
    .local int rx1460_off
    .local int rx1460_eos
    .local int rx1460_rep
    .local pmc rx1460_cur
    .local pmc rx1460_curclass
    .local pmc rx1460_bstack
    .local pmc rx1460_cstack
    rx1460_start = self."!cursor_start_all"()
    set rx1460_cur, rx1460_start[0]
    set rx1460_tgt, rx1460_start[1]
    set rx1460_pos, rx1460_start[2]
    set rx1460_curclass, rx1460_start[3]
    set rx1460_bstack, rx1460_start[4]
    set $I19, rx1460_start[5]
    store_lex unicode:"$\x{a2}", rx1460_cur
    length rx1460_eos, rx1460_tgt
    eq $I19, 1, rx1460_restart3271
    gt rx1460_pos, rx1460_eos, rx1460_fail3272
    repr_get_attr_int $I11, self, rx1460_curclass, "$!from"
    ne $I11, -1, rxscan1461_done3278
    goto rxscan1461_scan3277
  rxscan1461_loop3276:
    inc rx1460_pos
    gt rx1460_pos, rx1460_eos, rx1460_fail3272
    repr_bind_attr_int rx1460_cur, rx1460_curclass, "$!from", rx1460_pos
  rxscan1461_scan3277:
    nqp_rxmark rx1460_bstack, rxscan1461_loop3276, rx1460_pos, 0
  rxscan1461_done3278:
    nqp_rxmark rx1460_bstack, rxcap1462_fail3280, rx1460_pos, 0
    add $I11, rx1460_pos, 1
    gt $I11, rx1460_eos, rx1460_fail3272
    substr $S10, rx1460_tgt, rx1460_pos, 1
    ne $S10, ucs4:"!", rx1460_fail3272
    add rx1460_pos, 1
    nqp_rxpeek $I19, rx1460_bstack, rxcap1462_fail3280
    inc $I19
    set $I11, rx1460_bstack[$I19]
    repr_bind_attr_int rx1460_cur, rx1460_curclass, "$!pos", rx1460_pos
    $P11 = rx1460_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1460_pos)
    rx1460_cstack = rx1460_cur."!cursor_capture"($P11, "sym")
    goto rxcap1462_done3279
  rxcap1462_fail3280:
    goto rx1460_fail3272
  rxcap1462_done3279:
    repr_bind_attr_int rx1460_cur, rx1460_curclass, "$!pos", rx1460_pos
    $P11 = rx1460_cur."O"("%symbolic_unary, :op<falsey>")
    repr_get_attr_int $I11, $P11, rx1460_curclass, "$!pos"
    lt $I11, 0, rx1460_fail3272
    nqp_rxmark rx1460_bstack, rxsubrule1463_pass3281, -1, 0
  rxsubrule1463_pass3281:
    rx1460_cstack = rx1460_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1460_pos, $P11, rx1460_curclass, "$!pos"
    rx1460_cur."!cursor_pass"(rx1460_pos, "prefix:sym<!>", 'backtrack'=>1)
    .return (rx1460_cur)
  rx1460_restart3271:
    repr_get_attr_obj rx1460_cstack, rx1460_cur, rx1460_curclass, "$!cstack"
  rx1460_fail3272:
    unless rx1460_bstack, rx1460_done3270
    pop $I19, rx1460_bstack
    if_null rx1460_cstack, rx1460_cstack_done3275
    unless rx1460_cstack, rx1460_cstack_done3275
    dec $I19
    set $P11, rx1460_cstack[$I19]
  rx1460_cstack_done3275:
    pop rx1460_rep, rx1460_bstack
    pop rx1460_pos, rx1460_bstack
    pop $I19, rx1460_bstack
    lt rx1460_pos, -1, rx1460_done3270
    lt rx1460_pos, 0, rx1460_fail3272
    eq $I19, 0, rx1460_fail3272
    nqp_islist $I20, rx1460_cstack
    unless $I20, rx1460_jump3273
    elements $I18, rx1460_bstack
    le $I18, 0, rx1460_cut3274
    dec $I18
    set $I18, rx1460_bstack[$I18]
  rx1460_cut3274:
    assign rx1460_cstack, $I18
  rx1460_jump3273:
    jump $I19
  rx1460_done3270:
    rx1460_cur."!cursor_fail"()
    .return (rx1460_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<|>" :subid("cuid_187_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1351
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1464_start
    .local string rx1464_tgt
    .local int rx1464_pos
    .local int rx1464_off
    .local int rx1464_eos
    .local int rx1464_rep
    .local pmc rx1464_cur
    .local pmc rx1464_curclass
    .local pmc rx1464_bstack
    .local pmc rx1464_cstack
    rx1464_start = self."!cursor_start_all"()
    set rx1464_cur, rx1464_start[0]
    set rx1464_tgt, rx1464_start[1]
    set rx1464_pos, rx1464_start[2]
    set rx1464_curclass, rx1464_start[3]
    set rx1464_bstack, rx1464_start[4]
    set $I19, rx1464_start[5]
    store_lex unicode:"$\x{a2}", rx1464_cur
    length rx1464_eos, rx1464_tgt
    eq $I19, 1, rx1464_restart3284
    gt rx1464_pos, rx1464_eos, rx1464_fail3285
    repr_get_attr_int $I11, self, rx1464_curclass, "$!from"
    ne $I11, -1, rxscan1465_done3291
    goto rxscan1465_scan3290
  rxscan1465_loop3289:
    inc rx1464_pos
    gt rx1464_pos, rx1464_eos, rx1464_fail3285
    repr_bind_attr_int rx1464_cur, rx1464_curclass, "$!from", rx1464_pos
  rxscan1465_scan3290:
    nqp_rxmark rx1464_bstack, rxscan1465_loop3289, rx1464_pos, 0
  rxscan1465_done3291:
    nqp_rxmark rx1464_bstack, rxcap1466_fail3293, rx1464_pos, 0
    add $I11, rx1464_pos, 1
    gt $I11, rx1464_eos, rx1464_fail3285
    substr $S10, rx1464_tgt, rx1464_pos, 1
    ne $S10, ucs4:"|", rx1464_fail3285
    add rx1464_pos, 1
    nqp_rxpeek $I19, rx1464_bstack, rxcap1466_fail3293
    inc $I19
    set $I11, rx1464_bstack[$I19]
    repr_bind_attr_int rx1464_cur, rx1464_curclass, "$!pos", rx1464_pos
    $P11 = rx1464_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1464_pos)
    rx1464_cstack = rx1464_cur."!cursor_capture"($P11, "sym")
    goto rxcap1466_done3292
  rxcap1466_fail3293:
    goto rx1464_fail3285
  rxcap1466_done3292:
    repr_bind_attr_int rx1464_cur, rx1464_curclass, "$!pos", rx1464_pos
    $P11 = rx1464_cur."O"("%symbolic_unary")
    repr_get_attr_int $I11, $P11, rx1464_curclass, "$!pos"
    lt $I11, 0, rx1464_fail3285
    nqp_rxmark rx1464_bstack, rxsubrule1467_pass3294, -1, 0
  rxsubrule1467_pass3294:
    rx1464_cstack = rx1464_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1464_pos, $P11, rx1464_curclass, "$!pos"
    rx1464_cur."!cursor_pass"(rx1464_pos, "prefix:sym<|>", 'backtrack'=>1)
    .return (rx1464_cur)
  rx1464_restart3284:
    repr_get_attr_obj rx1464_cstack, rx1464_cur, rx1464_curclass, "$!cstack"
  rx1464_fail3285:
    unless rx1464_bstack, rx1464_done3283
    pop $I19, rx1464_bstack
    if_null rx1464_cstack, rx1464_cstack_done3288
    unless rx1464_cstack, rx1464_cstack_done3288
    dec $I19
    set $P11, rx1464_cstack[$I19]
  rx1464_cstack_done3288:
    pop rx1464_rep, rx1464_bstack
    pop rx1464_pos, rx1464_bstack
    pop $I19, rx1464_bstack
    lt rx1464_pos, -1, rx1464_done3283
    lt rx1464_pos, 0, rx1464_fail3285
    eq $I19, 0, rx1464_fail3285
    nqp_islist $I20, rx1464_cstack
    unless $I20, rx1464_jump3286
    elements $I18, rx1464_bstack
    le $I18, 0, rx1464_cut3287
    dec $I18
    set $I18, rx1464_bstack[$I18]
  rx1464_cut3287:
    assign rx1464_cstack, $I18
  rx1464_jump3286:
    jump $I19
  rx1464_done3283:
    rx1464_cur."!cursor_fail"()
    .return (rx1464_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<*>" :subid("cuid_188_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1353
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1468_start
    .local string rx1468_tgt
    .local int rx1468_pos
    .local int rx1468_off
    .local int rx1468_eos
    .local int rx1468_rep
    .local pmc rx1468_cur
    .local pmc rx1468_curclass
    .local pmc rx1468_bstack
    .local pmc rx1468_cstack
    rx1468_start = self."!cursor_start_all"()
    set rx1468_cur, rx1468_start[0]
    set rx1468_tgt, rx1468_start[1]
    set rx1468_pos, rx1468_start[2]
    set rx1468_curclass, rx1468_start[3]
    set rx1468_bstack, rx1468_start[4]
    set $I19, rx1468_start[5]
    store_lex unicode:"$\x{a2}", rx1468_cur
    length rx1468_eos, rx1468_tgt
    eq $I19, 1, rx1468_restart3297
    gt rx1468_pos, rx1468_eos, rx1468_fail3298
    repr_get_attr_int $I11, self, rx1468_curclass, "$!from"
    ne $I11, -1, rxscan1469_done3304
    goto rxscan1469_scan3303
  rxscan1469_loop3302:
    inc rx1468_pos
    gt rx1468_pos, rx1468_eos, rx1468_fail3298
    repr_bind_attr_int rx1468_cur, rx1468_curclass, "$!from", rx1468_pos
  rxscan1469_scan3303:
    nqp_rxmark rx1468_bstack, rxscan1469_loop3302, rx1468_pos, 0
  rxscan1469_done3304:
    nqp_rxmark rx1468_bstack, rxcap1470_fail3306, rx1468_pos, 0
    add $I11, rx1468_pos, 1
    gt $I11, rx1468_eos, rx1468_fail3298
    substr $S10, rx1468_tgt, rx1468_pos, 1
    ne $S10, ucs4:"*", rx1468_fail3298
    add rx1468_pos, 1
    nqp_rxpeek $I19, rx1468_bstack, rxcap1470_fail3306
    inc $I19
    set $I11, rx1468_bstack[$I19]
    repr_bind_attr_int rx1468_cur, rx1468_curclass, "$!pos", rx1468_pos
    $P11 = rx1468_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1468_pos)
    rx1468_cstack = rx1468_cur."!cursor_capture"($P11, "sym")
    goto rxcap1470_done3305
  rxcap1470_fail3306:
    goto rx1468_fail3298
  rxcap1470_done3305:
    repr_bind_attr_int rx1468_cur, rx1468_curclass, "$!pos", rx1468_pos
    $P11 = rx1468_cur."O"("%multiplicative, :op<mul_n>")
    repr_get_attr_int $I11, $P11, rx1468_curclass, "$!pos"
    lt $I11, 0, rx1468_fail3298
    nqp_rxmark rx1468_bstack, rxsubrule1471_pass3307, -1, 0
  rxsubrule1471_pass3307:
    rx1468_cstack = rx1468_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1468_pos, $P11, rx1468_curclass, "$!pos"
    rx1468_cur."!cursor_pass"(rx1468_pos, "infix:sym<*>", 'backtrack'=>1)
    .return (rx1468_cur)
  rx1468_restart3297:
    repr_get_attr_obj rx1468_cstack, rx1468_cur, rx1468_curclass, "$!cstack"
  rx1468_fail3298:
    unless rx1468_bstack, rx1468_done3296
    pop $I19, rx1468_bstack
    if_null rx1468_cstack, rx1468_cstack_done3301
    unless rx1468_cstack, rx1468_cstack_done3301
    dec $I19
    set $P11, rx1468_cstack[$I19]
  rx1468_cstack_done3301:
    pop rx1468_rep, rx1468_bstack
    pop rx1468_pos, rx1468_bstack
    pop $I19, rx1468_bstack
    lt rx1468_pos, -1, rx1468_done3296
    lt rx1468_pos, 0, rx1468_fail3298
    eq $I19, 0, rx1468_fail3298
    nqp_islist $I20, rx1468_cstack
    unless $I20, rx1468_jump3299
    elements $I18, rx1468_bstack
    le $I18, 0, rx1468_cut3300
    dec $I18
    set $I18, rx1468_bstack[$I18]
  rx1468_cut3300:
    assign rx1468_cstack, $I18
  rx1468_jump3299:
    jump $I19
  rx1468_done3296:
    rx1468_cur."!cursor_fail"()
    .return (rx1468_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym</>" :subid("cuid_189_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1354
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1472_start
    .local string rx1472_tgt
    .local int rx1472_pos
    .local int rx1472_off
    .local int rx1472_eos
    .local int rx1472_rep
    .local pmc rx1472_cur
    .local pmc rx1472_curclass
    .local pmc rx1472_bstack
    .local pmc rx1472_cstack
    rx1472_start = self."!cursor_start_all"()
    set rx1472_cur, rx1472_start[0]
    set rx1472_tgt, rx1472_start[1]
    set rx1472_pos, rx1472_start[2]
    set rx1472_curclass, rx1472_start[3]
    set rx1472_bstack, rx1472_start[4]
    set $I19, rx1472_start[5]
    store_lex unicode:"$\x{a2}", rx1472_cur
    length rx1472_eos, rx1472_tgt
    eq $I19, 1, rx1472_restart3310
    gt rx1472_pos, rx1472_eos, rx1472_fail3311
    repr_get_attr_int $I11, self, rx1472_curclass, "$!from"
    ne $I11, -1, rxscan1473_done3317
    goto rxscan1473_scan3316
  rxscan1473_loop3315:
    inc rx1472_pos
    gt rx1472_pos, rx1472_eos, rx1472_fail3311
    repr_bind_attr_int rx1472_cur, rx1472_curclass, "$!from", rx1472_pos
  rxscan1473_scan3316:
    nqp_rxmark rx1472_bstack, rxscan1473_loop3315, rx1472_pos, 0
  rxscan1473_done3317:
    nqp_rxmark rx1472_bstack, rxcap1474_fail3319, rx1472_pos, 0
    add $I11, rx1472_pos, 1
    gt $I11, rx1472_eos, rx1472_fail3311
    substr $S10, rx1472_tgt, rx1472_pos, 1
    ne $S10, ucs4:"/", rx1472_fail3311
    add rx1472_pos, 1
    nqp_rxpeek $I19, rx1472_bstack, rxcap1474_fail3319
    inc $I19
    set $I11, rx1472_bstack[$I19]
    repr_bind_attr_int rx1472_cur, rx1472_curclass, "$!pos", rx1472_pos
    $P11 = rx1472_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1472_pos)
    rx1472_cstack = rx1472_cur."!cursor_capture"($P11, "sym")
    goto rxcap1474_done3318
  rxcap1474_fail3319:
    goto rx1472_fail3311
  rxcap1474_done3318:
    repr_bind_attr_int rx1472_cur, rx1472_curclass, "$!pos", rx1472_pos
    $P11 = rx1472_cur."O"("%multiplicative, :op<div_n>")
    repr_get_attr_int $I11, $P11, rx1472_curclass, "$!pos"
    lt $I11, 0, rx1472_fail3311
    nqp_rxmark rx1472_bstack, rxsubrule1475_pass3320, -1, 0
  rxsubrule1475_pass3320:
    rx1472_cstack = rx1472_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1472_pos, $P11, rx1472_curclass, "$!pos"
    rx1472_cur."!cursor_pass"(rx1472_pos, "infix:sym</>", 'backtrack'=>1)
    .return (rx1472_cur)
  rx1472_restart3310:
    repr_get_attr_obj rx1472_cstack, rx1472_cur, rx1472_curclass, "$!cstack"
  rx1472_fail3311:
    unless rx1472_bstack, rx1472_done3309
    pop $I19, rx1472_bstack
    if_null rx1472_cstack, rx1472_cstack_done3314
    unless rx1472_cstack, rx1472_cstack_done3314
    dec $I19
    set $P11, rx1472_cstack[$I19]
  rx1472_cstack_done3314:
    pop rx1472_rep, rx1472_bstack
    pop rx1472_pos, rx1472_bstack
    pop $I19, rx1472_bstack
    lt rx1472_pos, -1, rx1472_done3309
    lt rx1472_pos, 0, rx1472_fail3311
    eq $I19, 0, rx1472_fail3311
    nqp_islist $I20, rx1472_cstack
    unless $I20, rx1472_jump3312
    elements $I18, rx1472_bstack
    le $I18, 0, rx1472_cut3313
    dec $I18
    set $I18, rx1472_bstack[$I18]
  rx1472_cut3313:
    assign rx1472_cstack, $I18
  rx1472_jump3312:
    jump $I19
  rx1472_done3309:
    rx1472_cur."!cursor_fail"()
    .return (rx1472_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<%>" :subid("cuid_190_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1355
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1476_start
    .local string rx1476_tgt
    .local int rx1476_pos
    .local int rx1476_off
    .local int rx1476_eos
    .local int rx1476_rep
    .local pmc rx1476_cur
    .local pmc rx1476_curclass
    .local pmc rx1476_bstack
    .local pmc rx1476_cstack
    rx1476_start = self."!cursor_start_all"()
    set rx1476_cur, rx1476_start[0]
    set rx1476_tgt, rx1476_start[1]
    set rx1476_pos, rx1476_start[2]
    set rx1476_curclass, rx1476_start[3]
    set rx1476_bstack, rx1476_start[4]
    set $I19, rx1476_start[5]
    store_lex unicode:"$\x{a2}", rx1476_cur
    length rx1476_eos, rx1476_tgt
    eq $I19, 1, rx1476_restart3323
    gt rx1476_pos, rx1476_eos, rx1476_fail3324
    repr_get_attr_int $I11, self, rx1476_curclass, "$!from"
    ne $I11, -1, rxscan1477_done3330
    goto rxscan1477_scan3329
  rxscan1477_loop3328:
    inc rx1476_pos
    gt rx1476_pos, rx1476_eos, rx1476_fail3324
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!from", rx1476_pos
  rxscan1477_scan3329:
    nqp_rxmark rx1476_bstack, rxscan1477_loop3328, rx1476_pos, 0
  rxscan1477_done3330:
    nqp_rxmark rx1476_bstack, rxcap1478_fail3332, rx1476_pos, 0
    add $I11, rx1476_pos, 1
    gt $I11, rx1476_eos, rx1476_fail3324
    substr $S10, rx1476_tgt, rx1476_pos, 1
    ne $S10, ucs4:"%", rx1476_fail3324
    add rx1476_pos, 1
    nqp_rxpeek $I19, rx1476_bstack, rxcap1478_fail3332
    inc $I19
    set $I11, rx1476_bstack[$I19]
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1476_pos)
    rx1476_cstack = rx1476_cur."!cursor_capture"($P11, "sym")
    goto rxcap1478_done3331
  rxcap1478_fail3332:
    goto rx1476_fail3324
  rxcap1478_done3331:
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."O"("%multiplicative, :op<mod_n>")
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3324
    nqp_rxmark rx1476_bstack, rxsubrule1479_pass3333, -1, 0
  rxsubrule1479_pass3333:
    rx1476_cstack = rx1476_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
    rx1476_cur."!cursor_pass"(rx1476_pos, "infix:sym<%>", 'backtrack'=>1)
    .return (rx1476_cur)
  rx1476_restart3323:
    repr_get_attr_obj rx1476_cstack, rx1476_cur, rx1476_curclass, "$!cstack"
  rx1476_fail3324:
    unless rx1476_bstack, rx1476_done3322
    pop $I19, rx1476_bstack
    if_null rx1476_cstack, rx1476_cstack_done3327
    unless rx1476_cstack, rx1476_cstack_done3327
    dec $I19
    set $P11, rx1476_cstack[$I19]
  rx1476_cstack_done3327:
    pop rx1476_rep, rx1476_bstack
    pop rx1476_pos, rx1476_bstack
    pop $I19, rx1476_bstack
    lt rx1476_pos, -1, rx1476_done3322
    lt rx1476_pos, 0, rx1476_fail3324
    eq $I19, 0, rx1476_fail3324
    nqp_islist $I20, rx1476_cstack
    unless $I20, rx1476_jump3325
    elements $I18, rx1476_bstack
    le $I18, 0, rx1476_cut3326
    dec $I18
    set $I18, rx1476_bstack[$I18]
  rx1476_cut3326:
    assign rx1476_cstack, $I18
  rx1476_jump3325:
    jump $I19
  rx1476_done3322:
    rx1476_cur."!cursor_fail"()
    .return (rx1476_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<+&>" :subid("cuid_191_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1356
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1480_start
    .local string rx1480_tgt
    .local int rx1480_pos
    .local int rx1480_off
    .local int rx1480_eos
    .local int rx1480_rep
    .local pmc rx1480_cur
    .local pmc rx1480_curclass
    .local pmc rx1480_bstack
    .local pmc rx1480_cstack
    rx1480_start = self."!cursor_start_all"()
    set rx1480_cur, rx1480_start[0]
    set rx1480_tgt, rx1480_start[1]
    set rx1480_pos, rx1480_start[2]
    set rx1480_curclass, rx1480_start[3]
    set rx1480_bstack, rx1480_start[4]
    set $I19, rx1480_start[5]
    store_lex unicode:"$\x{a2}", rx1480_cur
    length rx1480_eos, rx1480_tgt
    eq $I19, 1, rx1480_restart3336
    gt rx1480_pos, rx1480_eos, rx1480_fail3337
    repr_get_attr_int $I11, self, rx1480_curclass, "$!from"
    ne $I11, -1, rxscan1481_done3343
    goto rxscan1481_scan3342
  rxscan1481_loop3341:
    inc rx1480_pos
    gt rx1480_pos, rx1480_eos, rx1480_fail3337
    repr_bind_attr_int rx1480_cur, rx1480_curclass, "$!from", rx1480_pos
  rxscan1481_scan3342:
    nqp_rxmark rx1480_bstack, rxscan1481_loop3341, rx1480_pos, 0
  rxscan1481_done3343:
    nqp_rxmark rx1480_bstack, rxcap1482_fail3345, rx1480_pos, 0
    add $I11, rx1480_pos, 2
    gt $I11, rx1480_eos, rx1480_fail3337
    substr $S10, rx1480_tgt, rx1480_pos, 2
    ne $S10, ucs4:"+&", rx1480_fail3337
    add rx1480_pos, 2
    nqp_rxpeek $I19, rx1480_bstack, rxcap1482_fail3345
    inc $I19
    set $I11, rx1480_bstack[$I19]
    repr_bind_attr_int rx1480_cur, rx1480_curclass, "$!pos", rx1480_pos
    $P11 = rx1480_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1480_pos)
    rx1480_cstack = rx1480_cur."!cursor_capture"($P11, "sym")
    goto rxcap1482_done3344
  rxcap1482_fail3345:
    goto rx1480_fail3337
  rxcap1482_done3344:
    repr_bind_attr_int rx1480_cur, rx1480_curclass, "$!pos", rx1480_pos
    $P11 = rx1480_cur."O"("%multiplicative, :op<bitand_i>")
    repr_get_attr_int $I11, $P11, rx1480_curclass, "$!pos"
    lt $I11, 0, rx1480_fail3337
    nqp_rxmark rx1480_bstack, rxsubrule1483_pass3346, -1, 0
  rxsubrule1483_pass3346:
    rx1480_cstack = rx1480_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1480_pos, $P11, rx1480_curclass, "$!pos"
    rx1480_cur."!cursor_pass"(rx1480_pos, "infix:sym<+&>", 'backtrack'=>1)
    .return (rx1480_cur)
  rx1480_restart3336:
    repr_get_attr_obj rx1480_cstack, rx1480_cur, rx1480_curclass, "$!cstack"
  rx1480_fail3337:
    unless rx1480_bstack, rx1480_done3335
    pop $I19, rx1480_bstack
    if_null rx1480_cstack, rx1480_cstack_done3340
    unless rx1480_cstack, rx1480_cstack_done3340
    dec $I19
    set $P11, rx1480_cstack[$I19]
  rx1480_cstack_done3340:
    pop rx1480_rep, rx1480_bstack
    pop rx1480_pos, rx1480_bstack
    pop $I19, rx1480_bstack
    lt rx1480_pos, -1, rx1480_done3335
    lt rx1480_pos, 0, rx1480_fail3337
    eq $I19, 0, rx1480_fail3337
    nqp_islist $I20, rx1480_cstack
    unless $I20, rx1480_jump3338
    elements $I18, rx1480_bstack
    le $I18, 0, rx1480_cut3339
    dec $I18
    set $I18, rx1480_bstack[$I18]
  rx1480_cut3339:
    assign rx1480_cstack, $I18
  rx1480_jump3338:
    jump $I19
  rx1480_done3335:
    rx1480_cur."!cursor_fail"()
    .return (rx1480_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<+>" :subid("cuid_192_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1358
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1484_start
    .local string rx1484_tgt
    .local int rx1484_pos
    .local int rx1484_off
    .local int rx1484_eos
    .local int rx1484_rep
    .local pmc rx1484_cur
    .local pmc rx1484_curclass
    .local pmc rx1484_bstack
    .local pmc rx1484_cstack
    rx1484_start = self."!cursor_start_all"()
    set rx1484_cur, rx1484_start[0]
    set rx1484_tgt, rx1484_start[1]
    set rx1484_pos, rx1484_start[2]
    set rx1484_curclass, rx1484_start[3]
    set rx1484_bstack, rx1484_start[4]
    set $I19, rx1484_start[5]
    store_lex unicode:"$\x{a2}", rx1484_cur
    length rx1484_eos, rx1484_tgt
    eq $I19, 1, rx1484_restart3349
    gt rx1484_pos, rx1484_eos, rx1484_fail3350
    repr_get_attr_int $I11, self, rx1484_curclass, "$!from"
    ne $I11, -1, rxscan1485_done3356
    goto rxscan1485_scan3355
  rxscan1485_loop3354:
    inc rx1484_pos
    gt rx1484_pos, rx1484_eos, rx1484_fail3350
    repr_bind_attr_int rx1484_cur, rx1484_curclass, "$!from", rx1484_pos
  rxscan1485_scan3355:
    nqp_rxmark rx1484_bstack, rxscan1485_loop3354, rx1484_pos, 0
  rxscan1485_done3356:
    nqp_rxmark rx1484_bstack, rxcap1486_fail3358, rx1484_pos, 0
    add $I11, rx1484_pos, 1
    gt $I11, rx1484_eos, rx1484_fail3350
    substr $S10, rx1484_tgt, rx1484_pos, 1
    ne $S10, ucs4:"+", rx1484_fail3350
    add rx1484_pos, 1
    nqp_rxpeek $I19, rx1484_bstack, rxcap1486_fail3358
    inc $I19
    set $I11, rx1484_bstack[$I19]
    repr_bind_attr_int rx1484_cur, rx1484_curclass, "$!pos", rx1484_pos
    $P11 = rx1484_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1484_pos)
    rx1484_cstack = rx1484_cur."!cursor_capture"($P11, "sym")
    goto rxcap1486_done3357
  rxcap1486_fail3358:
    goto rx1484_fail3350
  rxcap1486_done3357:
    repr_bind_attr_int rx1484_cur, rx1484_curclass, "$!pos", rx1484_pos
    $P11 = rx1484_cur."O"("%additive, :op<add_n>")
    repr_get_attr_int $I11, $P11, rx1484_curclass, "$!pos"
    lt $I11, 0, rx1484_fail3350
    nqp_rxmark rx1484_bstack, rxsubrule1487_pass3359, -1, 0
  rxsubrule1487_pass3359:
    rx1484_cstack = rx1484_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1484_pos, $P11, rx1484_curclass, "$!pos"
    rx1484_cur."!cursor_pass"(rx1484_pos, "infix:sym<+>", 'backtrack'=>1)
    .return (rx1484_cur)
  rx1484_restart3349:
    repr_get_attr_obj rx1484_cstack, rx1484_cur, rx1484_curclass, "$!cstack"
  rx1484_fail3350:
    unless rx1484_bstack, rx1484_done3348
    pop $I19, rx1484_bstack
    if_null rx1484_cstack, rx1484_cstack_done3353
    unless rx1484_cstack, rx1484_cstack_done3353
    dec $I19
    set $P11, rx1484_cstack[$I19]
  rx1484_cstack_done3353:
    pop rx1484_rep, rx1484_bstack
    pop rx1484_pos, rx1484_bstack
    pop $I19, rx1484_bstack
    lt rx1484_pos, -1, rx1484_done3348
    lt rx1484_pos, 0, rx1484_fail3350
    eq $I19, 0, rx1484_fail3350
    nqp_islist $I20, rx1484_cstack
    unless $I20, rx1484_jump3351
    elements $I18, rx1484_bstack
    le $I18, 0, rx1484_cut3352
    dec $I18
    set $I18, rx1484_bstack[$I18]
  rx1484_cut3352:
    assign rx1484_cstack, $I18
  rx1484_jump3351:
    jump $I19
  rx1484_done3348:
    rx1484_cur."!cursor_fail"()
    .return (rx1484_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<->" :subid("cuid_193_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1359
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1488_start
    .local string rx1488_tgt
    .local int rx1488_pos
    .local int rx1488_off
    .local int rx1488_eos
    .local int rx1488_rep
    .local pmc rx1488_cur
    .local pmc rx1488_curclass
    .local pmc rx1488_bstack
    .local pmc rx1488_cstack
    rx1488_start = self."!cursor_start_all"()
    set rx1488_cur, rx1488_start[0]
    set rx1488_tgt, rx1488_start[1]
    set rx1488_pos, rx1488_start[2]
    set rx1488_curclass, rx1488_start[3]
    set rx1488_bstack, rx1488_start[4]
    set $I19, rx1488_start[5]
    store_lex unicode:"$\x{a2}", rx1488_cur
    length rx1488_eos, rx1488_tgt
    eq $I19, 1, rx1488_restart3362
    gt rx1488_pos, rx1488_eos, rx1488_fail3363
    repr_get_attr_int $I11, self, rx1488_curclass, "$!from"
    ne $I11, -1, rxscan1489_done3369
    goto rxscan1489_scan3368
  rxscan1489_loop3367:
    inc rx1488_pos
    gt rx1488_pos, rx1488_eos, rx1488_fail3363
    repr_bind_attr_int rx1488_cur, rx1488_curclass, "$!from", rx1488_pos
  rxscan1489_scan3368:
    nqp_rxmark rx1488_bstack, rxscan1489_loop3367, rx1488_pos, 0
  rxscan1489_done3369:
    nqp_rxmark rx1488_bstack, rxcap1490_fail3371, rx1488_pos, 0
    add $I11, rx1488_pos, 1
    gt $I11, rx1488_eos, rx1488_fail3363
    substr $S10, rx1488_tgt, rx1488_pos, 1
    ne $S10, ucs4:"-", rx1488_fail3363
    add rx1488_pos, 1
    nqp_rxpeek $I19, rx1488_bstack, rxcap1490_fail3371
    inc $I19
    set $I11, rx1488_bstack[$I19]
    repr_bind_attr_int rx1488_cur, rx1488_curclass, "$!pos", rx1488_pos
    $P11 = rx1488_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1488_pos)
    rx1488_cstack = rx1488_cur."!cursor_capture"($P11, "sym")
    goto rxcap1490_done3370
  rxcap1490_fail3371:
    goto rx1488_fail3363
  rxcap1490_done3370:
    repr_bind_attr_int rx1488_cur, rx1488_curclass, "$!pos", rx1488_pos
    $P11 = rx1488_cur."O"("%additive, :op<sub_n>")
    repr_get_attr_int $I11, $P11, rx1488_curclass, "$!pos"
    lt $I11, 0, rx1488_fail3363
    nqp_rxmark rx1488_bstack, rxsubrule1491_pass3372, -1, 0
  rxsubrule1491_pass3372:
    rx1488_cstack = rx1488_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1488_pos, $P11, rx1488_curclass, "$!pos"
    rx1488_cur."!cursor_pass"(rx1488_pos, "infix:sym<->", 'backtrack'=>1)
    .return (rx1488_cur)
  rx1488_restart3362:
    repr_get_attr_obj rx1488_cstack, rx1488_cur, rx1488_curclass, "$!cstack"
  rx1488_fail3363:
    unless rx1488_bstack, rx1488_done3361
    pop $I19, rx1488_bstack
    if_null rx1488_cstack, rx1488_cstack_done3366
    unless rx1488_cstack, rx1488_cstack_done3366
    dec $I19
    set $P11, rx1488_cstack[$I19]
  rx1488_cstack_done3366:
    pop rx1488_rep, rx1488_bstack
    pop rx1488_pos, rx1488_bstack
    pop $I19, rx1488_bstack
    lt rx1488_pos, -1, rx1488_done3361
    lt rx1488_pos, 0, rx1488_fail3363
    eq $I19, 0, rx1488_fail3363
    nqp_islist $I20, rx1488_cstack
    unless $I20, rx1488_jump3364
    elements $I18, rx1488_bstack
    le $I18, 0, rx1488_cut3365
    dec $I18
    set $I18, rx1488_bstack[$I18]
  rx1488_cut3365:
    assign rx1488_cstack, $I18
  rx1488_jump3364:
    jump $I19
  rx1488_done3361:
    rx1488_cur."!cursor_fail"()
    .return (rx1488_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<+|>" :subid("cuid_194_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1360
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1492_start
    .local string rx1492_tgt
    .local int rx1492_pos
    .local int rx1492_off
    .local int rx1492_eos
    .local int rx1492_rep
    .local pmc rx1492_cur
    .local pmc rx1492_curclass
    .local pmc rx1492_bstack
    .local pmc rx1492_cstack
    rx1492_start = self."!cursor_start_all"()
    set rx1492_cur, rx1492_start[0]
    set rx1492_tgt, rx1492_start[1]
    set rx1492_pos, rx1492_start[2]
    set rx1492_curclass, rx1492_start[3]
    set rx1492_bstack, rx1492_start[4]
    set $I19, rx1492_start[5]
    store_lex unicode:"$\x{a2}", rx1492_cur
    length rx1492_eos, rx1492_tgt
    eq $I19, 1, rx1492_restart3375
    gt rx1492_pos, rx1492_eos, rx1492_fail3376
    repr_get_attr_int $I11, self, rx1492_curclass, "$!from"
    ne $I11, -1, rxscan1493_done3382
    goto rxscan1493_scan3381
  rxscan1493_loop3380:
    inc rx1492_pos
    gt rx1492_pos, rx1492_eos, rx1492_fail3376
    repr_bind_attr_int rx1492_cur, rx1492_curclass, "$!from", rx1492_pos
  rxscan1493_scan3381:
    nqp_rxmark rx1492_bstack, rxscan1493_loop3380, rx1492_pos, 0
  rxscan1493_done3382:
    nqp_rxmark rx1492_bstack, rxcap1494_fail3384, rx1492_pos, 0
    add $I11, rx1492_pos, 2
    gt $I11, rx1492_eos, rx1492_fail3376
    substr $S10, rx1492_tgt, rx1492_pos, 2
    ne $S10, ucs4:"+|", rx1492_fail3376
    add rx1492_pos, 2
    nqp_rxpeek $I19, rx1492_bstack, rxcap1494_fail3384
    inc $I19
    set $I11, rx1492_bstack[$I19]
    repr_bind_attr_int rx1492_cur, rx1492_curclass, "$!pos", rx1492_pos
    $P11 = rx1492_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1492_pos)
    rx1492_cstack = rx1492_cur."!cursor_capture"($P11, "sym")
    goto rxcap1494_done3383
  rxcap1494_fail3384:
    goto rx1492_fail3376
  rxcap1494_done3383:
    repr_bind_attr_int rx1492_cur, rx1492_curclass, "$!pos", rx1492_pos
    $P11 = rx1492_cur."O"("%additive, :op<bitor_i>")
    repr_get_attr_int $I11, $P11, rx1492_curclass, "$!pos"
    lt $I11, 0, rx1492_fail3376
    nqp_rxmark rx1492_bstack, rxsubrule1495_pass3385, -1, 0
  rxsubrule1495_pass3385:
    rx1492_cstack = rx1492_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1492_pos, $P11, rx1492_curclass, "$!pos"
    rx1492_cur."!cursor_pass"(rx1492_pos, "infix:sym<+|>", 'backtrack'=>1)
    .return (rx1492_cur)
  rx1492_restart3375:
    repr_get_attr_obj rx1492_cstack, rx1492_cur, rx1492_curclass, "$!cstack"
  rx1492_fail3376:
    unless rx1492_bstack, rx1492_done3374
    pop $I19, rx1492_bstack
    if_null rx1492_cstack, rx1492_cstack_done3379
    unless rx1492_cstack, rx1492_cstack_done3379
    dec $I19
    set $P11, rx1492_cstack[$I19]
  rx1492_cstack_done3379:
    pop rx1492_rep, rx1492_bstack
    pop rx1492_pos, rx1492_bstack
    pop $I19, rx1492_bstack
    lt rx1492_pos, -1, rx1492_done3374
    lt rx1492_pos, 0, rx1492_fail3376
    eq $I19, 0, rx1492_fail3376
    nqp_islist $I20, rx1492_cstack
    unless $I20, rx1492_jump3377
    elements $I18, rx1492_bstack
    le $I18, 0, rx1492_cut3378
    dec $I18
    set $I18, rx1492_bstack[$I18]
  rx1492_cut3378:
    assign rx1492_cstack, $I18
  rx1492_jump3377:
    jump $I19
  rx1492_done3374:
    rx1492_cur."!cursor_fail"()
    .return (rx1492_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<+^>" :subid("cuid_195_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1361
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1496_start
    .local string rx1496_tgt
    .local int rx1496_pos
    .local int rx1496_off
    .local int rx1496_eos
    .local int rx1496_rep
    .local pmc rx1496_cur
    .local pmc rx1496_curclass
    .local pmc rx1496_bstack
    .local pmc rx1496_cstack
    rx1496_start = self."!cursor_start_all"()
    set rx1496_cur, rx1496_start[0]
    set rx1496_tgt, rx1496_start[1]
    set rx1496_pos, rx1496_start[2]
    set rx1496_curclass, rx1496_start[3]
    set rx1496_bstack, rx1496_start[4]
    set $I19, rx1496_start[5]
    store_lex unicode:"$\x{a2}", rx1496_cur
    length rx1496_eos, rx1496_tgt
    eq $I19, 1, rx1496_restart3388
    gt rx1496_pos, rx1496_eos, rx1496_fail3389
    repr_get_attr_int $I11, self, rx1496_curclass, "$!from"
    ne $I11, -1, rxscan1497_done3395
    goto rxscan1497_scan3394
  rxscan1497_loop3393:
    inc rx1496_pos
    gt rx1496_pos, rx1496_eos, rx1496_fail3389
    repr_bind_attr_int rx1496_cur, rx1496_curclass, "$!from", rx1496_pos
  rxscan1497_scan3394:
    nqp_rxmark rx1496_bstack, rxscan1497_loop3393, rx1496_pos, 0
  rxscan1497_done3395:
    nqp_rxmark rx1496_bstack, rxcap1498_fail3397, rx1496_pos, 0
    add $I11, rx1496_pos, 2
    gt $I11, rx1496_eos, rx1496_fail3389
    substr $S10, rx1496_tgt, rx1496_pos, 2
    ne $S10, ucs4:"+^", rx1496_fail3389
    add rx1496_pos, 2
    nqp_rxpeek $I19, rx1496_bstack, rxcap1498_fail3397
    inc $I19
    set $I11, rx1496_bstack[$I19]
    repr_bind_attr_int rx1496_cur, rx1496_curclass, "$!pos", rx1496_pos
    $P11 = rx1496_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1496_pos)
    rx1496_cstack = rx1496_cur."!cursor_capture"($P11, "sym")
    goto rxcap1498_done3396
  rxcap1498_fail3397:
    goto rx1496_fail3389
  rxcap1498_done3396:
    repr_bind_attr_int rx1496_cur, rx1496_curclass, "$!pos", rx1496_pos
    $P11 = rx1496_cur."O"("%additive, :op<bitxor_i>")
    repr_get_attr_int $I11, $P11, rx1496_curclass, "$!pos"
    lt $I11, 0, rx1496_fail3389
    nqp_rxmark rx1496_bstack, rxsubrule1499_pass3398, -1, 0
  rxsubrule1499_pass3398:
    rx1496_cstack = rx1496_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1496_pos, $P11, rx1496_curclass, "$!pos"
    rx1496_cur."!cursor_pass"(rx1496_pos, "infix:sym<+^>", 'backtrack'=>1)
    .return (rx1496_cur)
  rx1496_restart3388:
    repr_get_attr_obj rx1496_cstack, rx1496_cur, rx1496_curclass, "$!cstack"
  rx1496_fail3389:
    unless rx1496_bstack, rx1496_done3387
    pop $I19, rx1496_bstack
    if_null rx1496_cstack, rx1496_cstack_done3392
    unless rx1496_cstack, rx1496_cstack_done3392
    dec $I19
    set $P11, rx1496_cstack[$I19]
  rx1496_cstack_done3392:
    pop rx1496_rep, rx1496_bstack
    pop rx1496_pos, rx1496_bstack
    pop $I19, rx1496_bstack
    lt rx1496_pos, -1, rx1496_done3387
    lt rx1496_pos, 0, rx1496_fail3389
    eq $I19, 0, rx1496_fail3389
    nqp_islist $I20, rx1496_cstack
    unless $I20, rx1496_jump3390
    elements $I18, rx1496_bstack
    le $I18, 0, rx1496_cut3391
    dec $I18
    set $I18, rx1496_bstack[$I18]
  rx1496_cut3391:
    assign rx1496_cstack, $I18
  rx1496_jump3390:
    jump $I19
  rx1496_done3387:
    rx1496_cur."!cursor_fail"()
    .return (rx1496_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<~>" :subid("cuid_196_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1363
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1500_start
    .local string rx1500_tgt
    .local int rx1500_pos
    .local int rx1500_off
    .local int rx1500_eos
    .local int rx1500_rep
    .local pmc rx1500_cur
    .local pmc rx1500_curclass
    .local pmc rx1500_bstack
    .local pmc rx1500_cstack
    rx1500_start = self."!cursor_start_all"()
    set rx1500_cur, rx1500_start[0]
    set rx1500_tgt, rx1500_start[1]
    set rx1500_pos, rx1500_start[2]
    set rx1500_curclass, rx1500_start[3]
    set rx1500_bstack, rx1500_start[4]
    set $I19, rx1500_start[5]
    store_lex unicode:"$\x{a2}", rx1500_cur
    length rx1500_eos, rx1500_tgt
    eq $I19, 1, rx1500_restart3401
    gt rx1500_pos, rx1500_eos, rx1500_fail3402
    repr_get_attr_int $I11, self, rx1500_curclass, "$!from"
    ne $I11, -1, rxscan1501_done3408
    goto rxscan1501_scan3407
  rxscan1501_loop3406:
    inc rx1500_pos
    gt rx1500_pos, rx1500_eos, rx1500_fail3402
    repr_bind_attr_int rx1500_cur, rx1500_curclass, "$!from", rx1500_pos
  rxscan1501_scan3407:
    nqp_rxmark rx1500_bstack, rxscan1501_loop3406, rx1500_pos, 0
  rxscan1501_done3408:
    nqp_rxmark rx1500_bstack, rxcap1502_fail3410, rx1500_pos, 0
    add $I11, rx1500_pos, 1
    gt $I11, rx1500_eos, rx1500_fail3402
    substr $S10, rx1500_tgt, rx1500_pos, 1
    ne $S10, ucs4:"~", rx1500_fail3402
    add rx1500_pos, 1
    nqp_rxpeek $I19, rx1500_bstack, rxcap1502_fail3410
    inc $I19
    set $I11, rx1500_bstack[$I19]
    repr_bind_attr_int rx1500_cur, rx1500_curclass, "$!pos", rx1500_pos
    $P11 = rx1500_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1500_pos)
    rx1500_cstack = rx1500_cur."!cursor_capture"($P11, "sym")
    goto rxcap1502_done3409
  rxcap1502_fail3410:
    goto rx1500_fail3402
  rxcap1502_done3409:
    repr_bind_attr_int rx1500_cur, rx1500_curclass, "$!pos", rx1500_pos
    $P11 = rx1500_cur."O"("%concatenation , :op<concat>")
    repr_get_attr_int $I11, $P11, rx1500_curclass, "$!pos"
    lt $I11, 0, rx1500_fail3402
    nqp_rxmark rx1500_bstack, rxsubrule1503_pass3411, -1, 0
  rxsubrule1503_pass3411:
    rx1500_cstack = rx1500_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1500_pos, $P11, rx1500_curclass, "$!pos"
    rx1500_cur."!cursor_pass"(rx1500_pos, "infix:sym<~>", 'backtrack'=>1)
    .return (rx1500_cur)
  rx1500_restart3401:
    repr_get_attr_obj rx1500_cstack, rx1500_cur, rx1500_curclass, "$!cstack"
  rx1500_fail3402:
    unless rx1500_bstack, rx1500_done3400
    pop $I19, rx1500_bstack
    if_null rx1500_cstack, rx1500_cstack_done3405
    unless rx1500_cstack, rx1500_cstack_done3405
    dec $I19
    set $P11, rx1500_cstack[$I19]
  rx1500_cstack_done3405:
    pop rx1500_rep, rx1500_bstack
    pop rx1500_pos, rx1500_bstack
    pop $I19, rx1500_bstack
    lt rx1500_pos, -1, rx1500_done3400
    lt rx1500_pos, 0, rx1500_fail3402
    eq $I19, 0, rx1500_fail3402
    nqp_islist $I20, rx1500_cstack
    unless $I20, rx1500_jump3403
    elements $I18, rx1500_bstack
    le $I18, 0, rx1500_cut3404
    dec $I18
    set $I18, rx1500_bstack[$I18]
  rx1500_cut3404:
    assign rx1500_cstack, $I18
  rx1500_jump3403:
    jump $I19
  rx1500_done3400:
    rx1500_cur."!cursor_fail"()
    .return (rx1500_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<==>" :subid("cuid_197_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1365
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1504_start
    .local string rx1504_tgt
    .local int rx1504_pos
    .local int rx1504_off
    .local int rx1504_eos
    .local int rx1504_rep
    .local pmc rx1504_cur
    .local pmc rx1504_curclass
    .local pmc rx1504_bstack
    .local pmc rx1504_cstack
    rx1504_start = self."!cursor_start_all"()
    set rx1504_cur, rx1504_start[0]
    set rx1504_tgt, rx1504_start[1]
    set rx1504_pos, rx1504_start[2]
    set rx1504_curclass, rx1504_start[3]
    set rx1504_bstack, rx1504_start[4]
    set $I19, rx1504_start[5]
    store_lex unicode:"$\x{a2}", rx1504_cur
    length rx1504_eos, rx1504_tgt
    eq $I19, 1, rx1504_restart3414
    gt rx1504_pos, rx1504_eos, rx1504_fail3415
    repr_get_attr_int $I11, self, rx1504_curclass, "$!from"
    ne $I11, -1, rxscan1505_done3421
    goto rxscan1505_scan3420
  rxscan1505_loop3419:
    inc rx1504_pos
    gt rx1504_pos, rx1504_eos, rx1504_fail3415
    repr_bind_attr_int rx1504_cur, rx1504_curclass, "$!from", rx1504_pos
  rxscan1505_scan3420:
    nqp_rxmark rx1504_bstack, rxscan1505_loop3419, rx1504_pos, 0
  rxscan1505_done3421:
    nqp_rxmark rx1504_bstack, rxcap1506_fail3423, rx1504_pos, 0
    add $I11, rx1504_pos, 2
    gt $I11, rx1504_eos, rx1504_fail3415
    substr $S10, rx1504_tgt, rx1504_pos, 2
    ne $S10, ucs4:"==", rx1504_fail3415
    add rx1504_pos, 2
    nqp_rxpeek $I19, rx1504_bstack, rxcap1506_fail3423
    inc $I19
    set $I11, rx1504_bstack[$I19]
    repr_bind_attr_int rx1504_cur, rx1504_curclass, "$!pos", rx1504_pos
    $P11 = rx1504_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1504_pos)
    rx1504_cstack = rx1504_cur."!cursor_capture"($P11, "sym")
    goto rxcap1506_done3422
  rxcap1506_fail3423:
    goto rx1504_fail3415
  rxcap1506_done3422:
    repr_bind_attr_int rx1504_cur, rx1504_curclass, "$!pos", rx1504_pos
    $P11 = rx1504_cur."O"("%relational, :op<iseq_n>")
    repr_get_attr_int $I11, $P11, rx1504_curclass, "$!pos"
    lt $I11, 0, rx1504_fail3415
    nqp_rxmark rx1504_bstack, rxsubrule1507_pass3424, -1, 0
  rxsubrule1507_pass3424:
    rx1504_cstack = rx1504_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1504_pos, $P11, rx1504_curclass, "$!pos"
    rx1504_cur."!cursor_pass"(rx1504_pos, "infix:sym<==>", 'backtrack'=>1)
    .return (rx1504_cur)
  rx1504_restart3414:
    repr_get_attr_obj rx1504_cstack, rx1504_cur, rx1504_curclass, "$!cstack"
  rx1504_fail3415:
    unless rx1504_bstack, rx1504_done3413
    pop $I19, rx1504_bstack
    if_null rx1504_cstack, rx1504_cstack_done3418
    unless rx1504_cstack, rx1504_cstack_done3418
    dec $I19
    set $P11, rx1504_cstack[$I19]
  rx1504_cstack_done3418:
    pop rx1504_rep, rx1504_bstack
    pop rx1504_pos, rx1504_bstack
    pop $I19, rx1504_bstack
    lt rx1504_pos, -1, rx1504_done3413
    lt rx1504_pos, 0, rx1504_fail3415
    eq $I19, 0, rx1504_fail3415
    nqp_islist $I20, rx1504_cstack
    unless $I20, rx1504_jump3416
    elements $I18, rx1504_bstack
    le $I18, 0, rx1504_cut3417
    dec $I18
    set $I18, rx1504_bstack[$I18]
  rx1504_cut3417:
    assign rx1504_cstack, $I18
  rx1504_jump3416:
    jump $I19
  rx1504_done3413:
    rx1504_cur."!cursor_fail"()
    .return (rx1504_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<!=>" :subid("cuid_198_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1366
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1508_start
    .local string rx1508_tgt
    .local int rx1508_pos
    .local int rx1508_off
    .local int rx1508_eos
    .local int rx1508_rep
    .local pmc rx1508_cur
    .local pmc rx1508_curclass
    .local pmc rx1508_bstack
    .local pmc rx1508_cstack
    rx1508_start = self."!cursor_start_all"()
    set rx1508_cur, rx1508_start[0]
    set rx1508_tgt, rx1508_start[1]
    set rx1508_pos, rx1508_start[2]
    set rx1508_curclass, rx1508_start[3]
    set rx1508_bstack, rx1508_start[4]
    set $I19, rx1508_start[5]
    store_lex unicode:"$\x{a2}", rx1508_cur
    length rx1508_eos, rx1508_tgt
    eq $I19, 1, rx1508_restart3427
    gt rx1508_pos, rx1508_eos, rx1508_fail3428
    repr_get_attr_int $I11, self, rx1508_curclass, "$!from"
    ne $I11, -1, rxscan1509_done3434
    goto rxscan1509_scan3433
  rxscan1509_loop3432:
    inc rx1508_pos
    gt rx1508_pos, rx1508_eos, rx1508_fail3428
    repr_bind_attr_int rx1508_cur, rx1508_curclass, "$!from", rx1508_pos
  rxscan1509_scan3433:
    nqp_rxmark rx1508_bstack, rxscan1509_loop3432, rx1508_pos, 0
  rxscan1509_done3434:
    nqp_rxmark rx1508_bstack, rxcap1510_fail3436, rx1508_pos, 0
    add $I11, rx1508_pos, 2
    gt $I11, rx1508_eos, rx1508_fail3428
    substr $S10, rx1508_tgt, rx1508_pos, 2
    ne $S10, ucs4:"!=", rx1508_fail3428
    add rx1508_pos, 2
    nqp_rxpeek $I19, rx1508_bstack, rxcap1510_fail3436
    inc $I19
    set $I11, rx1508_bstack[$I19]
    repr_bind_attr_int rx1508_cur, rx1508_curclass, "$!pos", rx1508_pos
    $P11 = rx1508_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1508_pos)
    rx1508_cstack = rx1508_cur."!cursor_capture"($P11, "sym")
    goto rxcap1510_done3435
  rxcap1510_fail3436:
    goto rx1508_fail3428
  rxcap1510_done3435:
    repr_bind_attr_int rx1508_cur, rx1508_curclass, "$!pos", rx1508_pos
    $P11 = rx1508_cur."O"("%relational, :op<isne_n>")
    repr_get_attr_int $I11, $P11, rx1508_curclass, "$!pos"
    lt $I11, 0, rx1508_fail3428
    nqp_rxmark rx1508_bstack, rxsubrule1511_pass3437, -1, 0
  rxsubrule1511_pass3437:
    rx1508_cstack = rx1508_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1508_pos, $P11, rx1508_curclass, "$!pos"
    rx1508_cur."!cursor_pass"(rx1508_pos, "infix:sym<!=>", 'backtrack'=>1)
    .return (rx1508_cur)
  rx1508_restart3427:
    repr_get_attr_obj rx1508_cstack, rx1508_cur, rx1508_curclass, "$!cstack"
  rx1508_fail3428:
    unless rx1508_bstack, rx1508_done3426
    pop $I19, rx1508_bstack
    if_null rx1508_cstack, rx1508_cstack_done3431
    unless rx1508_cstack, rx1508_cstack_done3431
    dec $I19
    set $P11, rx1508_cstack[$I19]
  rx1508_cstack_done3431:
    pop rx1508_rep, rx1508_bstack
    pop rx1508_pos, rx1508_bstack
    pop $I19, rx1508_bstack
    lt rx1508_pos, -1, rx1508_done3426
    lt rx1508_pos, 0, rx1508_fail3428
    eq $I19, 0, rx1508_fail3428
    nqp_islist $I20, rx1508_cstack
    unless $I20, rx1508_jump3429
    elements $I18, rx1508_bstack
    le $I18, 0, rx1508_cut3430
    dec $I18
    set $I18, rx1508_bstack[$I18]
  rx1508_cut3430:
    assign rx1508_cstack, $I18
  rx1508_jump3429:
    jump $I19
  rx1508_done3426:
    rx1508_cur."!cursor_fail"()
    .return (rx1508_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<<=>" :subid("cuid_199_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1367
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1512_start
    .local string rx1512_tgt
    .local int rx1512_pos
    .local int rx1512_off
    .local int rx1512_eos
    .local int rx1512_rep
    .local pmc rx1512_cur
    .local pmc rx1512_curclass
    .local pmc rx1512_bstack
    .local pmc rx1512_cstack
    rx1512_start = self."!cursor_start_all"()
    set rx1512_cur, rx1512_start[0]
    set rx1512_tgt, rx1512_start[1]
    set rx1512_pos, rx1512_start[2]
    set rx1512_curclass, rx1512_start[3]
    set rx1512_bstack, rx1512_start[4]
    set $I19, rx1512_start[5]
    store_lex unicode:"$\x{a2}", rx1512_cur
    length rx1512_eos, rx1512_tgt
    eq $I19, 1, rx1512_restart3440
    gt rx1512_pos, rx1512_eos, rx1512_fail3441
    repr_get_attr_int $I11, self, rx1512_curclass, "$!from"
    ne $I11, -1, rxscan1513_done3447
    goto rxscan1513_scan3446
  rxscan1513_loop3445:
    inc rx1512_pos
    gt rx1512_pos, rx1512_eos, rx1512_fail3441
    repr_bind_attr_int rx1512_cur, rx1512_curclass, "$!from", rx1512_pos
  rxscan1513_scan3446:
    nqp_rxmark rx1512_bstack, rxscan1513_loop3445, rx1512_pos, 0
  rxscan1513_done3447:
    nqp_rxmark rx1512_bstack, rxcap1514_fail3449, rx1512_pos, 0
    add $I11, rx1512_pos, 2
    gt $I11, rx1512_eos, rx1512_fail3441
    substr $S10, rx1512_tgt, rx1512_pos, 2
    ne $S10, ucs4:"<=", rx1512_fail3441
    add rx1512_pos, 2
    nqp_rxpeek $I19, rx1512_bstack, rxcap1514_fail3449
    inc $I19
    set $I11, rx1512_bstack[$I19]
    repr_bind_attr_int rx1512_cur, rx1512_curclass, "$!pos", rx1512_pos
    $P11 = rx1512_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1512_pos)
    rx1512_cstack = rx1512_cur."!cursor_capture"($P11, "sym")
    goto rxcap1514_done3448
  rxcap1514_fail3449:
    goto rx1512_fail3441
  rxcap1514_done3448:
    repr_bind_attr_int rx1512_cur, rx1512_curclass, "$!pos", rx1512_pos
    $P11 = rx1512_cur."O"("%relational, :op<isle_n>")
    repr_get_attr_int $I11, $P11, rx1512_curclass, "$!pos"
    lt $I11, 0, rx1512_fail3441
    nqp_rxmark rx1512_bstack, rxsubrule1515_pass3450, -1, 0
  rxsubrule1515_pass3450:
    rx1512_cstack = rx1512_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1512_pos, $P11, rx1512_curclass, "$!pos"
    rx1512_cur."!cursor_pass"(rx1512_pos, "infix:sym<<=>", 'backtrack'=>1)
    .return (rx1512_cur)
  rx1512_restart3440:
    repr_get_attr_obj rx1512_cstack, rx1512_cur, rx1512_curclass, "$!cstack"
  rx1512_fail3441:
    unless rx1512_bstack, rx1512_done3439
    pop $I19, rx1512_bstack
    if_null rx1512_cstack, rx1512_cstack_done3444
    unless rx1512_cstack, rx1512_cstack_done3444
    dec $I19
    set $P11, rx1512_cstack[$I19]
  rx1512_cstack_done3444:
    pop rx1512_rep, rx1512_bstack
    pop rx1512_pos, rx1512_bstack
    pop $I19, rx1512_bstack
    lt rx1512_pos, -1, rx1512_done3439
    lt rx1512_pos, 0, rx1512_fail3441
    eq $I19, 0, rx1512_fail3441
    nqp_islist $I20, rx1512_cstack
    unless $I20, rx1512_jump3442
    elements $I18, rx1512_bstack
    le $I18, 0, rx1512_cut3443
    dec $I18
    set $I18, rx1512_bstack[$I18]
  rx1512_cut3443:
    assign rx1512_cstack, $I18
  rx1512_jump3442:
    jump $I19
  rx1512_done3439:
    rx1512_cur."!cursor_fail"()
    .return (rx1512_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<>=>" :subid("cuid_200_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1368
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1516_start
    .local string rx1516_tgt
    .local int rx1516_pos
    .local int rx1516_off
    .local int rx1516_eos
    .local int rx1516_rep
    .local pmc rx1516_cur
    .local pmc rx1516_curclass
    .local pmc rx1516_bstack
    .local pmc rx1516_cstack
    rx1516_start = self."!cursor_start_all"()
    set rx1516_cur, rx1516_start[0]
    set rx1516_tgt, rx1516_start[1]
    set rx1516_pos, rx1516_start[2]
    set rx1516_curclass, rx1516_start[3]
    set rx1516_bstack, rx1516_start[4]
    set $I19, rx1516_start[5]
    store_lex unicode:"$\x{a2}", rx1516_cur
    length rx1516_eos, rx1516_tgt
    eq $I19, 1, rx1516_restart3453
    gt rx1516_pos, rx1516_eos, rx1516_fail3454
    repr_get_attr_int $I11, self, rx1516_curclass, "$!from"
    ne $I11, -1, rxscan1517_done3460
    goto rxscan1517_scan3459
  rxscan1517_loop3458:
    inc rx1516_pos
    gt rx1516_pos, rx1516_eos, rx1516_fail3454
    repr_bind_attr_int rx1516_cur, rx1516_curclass, "$!from", rx1516_pos
  rxscan1517_scan3459:
    nqp_rxmark rx1516_bstack, rxscan1517_loop3458, rx1516_pos, 0
  rxscan1517_done3460:
    nqp_rxmark rx1516_bstack, rxcap1518_fail3462, rx1516_pos, 0
    add $I11, rx1516_pos, 2
    gt $I11, rx1516_eos, rx1516_fail3454
    substr $S10, rx1516_tgt, rx1516_pos, 2
    ne $S10, ucs4:">=", rx1516_fail3454
    add rx1516_pos, 2
    nqp_rxpeek $I19, rx1516_bstack, rxcap1518_fail3462
    inc $I19
    set $I11, rx1516_bstack[$I19]
    repr_bind_attr_int rx1516_cur, rx1516_curclass, "$!pos", rx1516_pos
    $P11 = rx1516_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1516_pos)
    rx1516_cstack = rx1516_cur."!cursor_capture"($P11, "sym")
    goto rxcap1518_done3461
  rxcap1518_fail3462:
    goto rx1516_fail3454
  rxcap1518_done3461:
    repr_bind_attr_int rx1516_cur, rx1516_curclass, "$!pos", rx1516_pos
    $P11 = rx1516_cur."O"("%relational, :op<isge_n>")
    repr_get_attr_int $I11, $P11, rx1516_curclass, "$!pos"
    lt $I11, 0, rx1516_fail3454
    nqp_rxmark rx1516_bstack, rxsubrule1519_pass3463, -1, 0
  rxsubrule1519_pass3463:
    rx1516_cstack = rx1516_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1516_pos, $P11, rx1516_curclass, "$!pos"
    rx1516_cur."!cursor_pass"(rx1516_pos, "infix:sym<>=>", 'backtrack'=>1)
    .return (rx1516_cur)
  rx1516_restart3453:
    repr_get_attr_obj rx1516_cstack, rx1516_cur, rx1516_curclass, "$!cstack"
  rx1516_fail3454:
    unless rx1516_bstack, rx1516_done3452
    pop $I19, rx1516_bstack
    if_null rx1516_cstack, rx1516_cstack_done3457
    unless rx1516_cstack, rx1516_cstack_done3457
    dec $I19
    set $P11, rx1516_cstack[$I19]
  rx1516_cstack_done3457:
    pop rx1516_rep, rx1516_bstack
    pop rx1516_pos, rx1516_bstack
    pop $I19, rx1516_bstack
    lt rx1516_pos, -1, rx1516_done3452
    lt rx1516_pos, 0, rx1516_fail3454
    eq $I19, 0, rx1516_fail3454
    nqp_islist $I20, rx1516_cstack
    unless $I20, rx1516_jump3455
    elements $I18, rx1516_bstack
    le $I18, 0, rx1516_cut3456
    dec $I18
    set $I18, rx1516_bstack[$I18]
  rx1516_cut3456:
    assign rx1516_cstack, $I18
  rx1516_jump3455:
    jump $I19
  rx1516_done3452:
    rx1516_cur."!cursor_fail"()
    .return (rx1516_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<<>" :subid("cuid_201_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1369
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1520_start
    .local string rx1520_tgt
    .local int rx1520_pos
    .local int rx1520_off
    .local int rx1520_eos
    .local int rx1520_rep
    .local pmc rx1520_cur
    .local pmc rx1520_curclass
    .local pmc rx1520_bstack
    .local pmc rx1520_cstack
    rx1520_start = self."!cursor_start_all"()
    set rx1520_cur, rx1520_start[0]
    set rx1520_tgt, rx1520_start[1]
    set rx1520_pos, rx1520_start[2]
    set rx1520_curclass, rx1520_start[3]
    set rx1520_bstack, rx1520_start[4]
    set $I19, rx1520_start[5]
    store_lex unicode:"$\x{a2}", rx1520_cur
    length rx1520_eos, rx1520_tgt
    eq $I19, 1, rx1520_restart3466
    gt rx1520_pos, rx1520_eos, rx1520_fail3467
    repr_get_attr_int $I11, self, rx1520_curclass, "$!from"
    ne $I11, -1, rxscan1521_done3473
    goto rxscan1521_scan3472
  rxscan1521_loop3471:
    inc rx1520_pos
    gt rx1520_pos, rx1520_eos, rx1520_fail3467
    repr_bind_attr_int rx1520_cur, rx1520_curclass, "$!from", rx1520_pos
  rxscan1521_scan3472:
    nqp_rxmark rx1520_bstack, rxscan1521_loop3471, rx1520_pos, 0
  rxscan1521_done3473:
    nqp_rxmark rx1520_bstack, rxcap1522_fail3475, rx1520_pos, 0
    add $I11, rx1520_pos, 1
    gt $I11, rx1520_eos, rx1520_fail3467
    substr $S10, rx1520_tgt, rx1520_pos, 1
    ne $S10, ucs4:"<", rx1520_fail3467
    add rx1520_pos, 1
    nqp_rxpeek $I19, rx1520_bstack, rxcap1522_fail3475
    inc $I19
    set $I11, rx1520_bstack[$I19]
    repr_bind_attr_int rx1520_cur, rx1520_curclass, "$!pos", rx1520_pos
    $P11 = rx1520_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1520_pos)
    rx1520_cstack = rx1520_cur."!cursor_capture"($P11, "sym")
    goto rxcap1522_done3474
  rxcap1522_fail3475:
    goto rx1520_fail3467
  rxcap1522_done3474:
    repr_bind_attr_int rx1520_cur, rx1520_curclass, "$!pos", rx1520_pos
    $P11 = rx1520_cur."O"("%relational, :op<islt_n>")
    repr_get_attr_int $I11, $P11, rx1520_curclass, "$!pos"
    lt $I11, 0, rx1520_fail3467
    nqp_rxmark rx1520_bstack, rxsubrule1523_pass3476, -1, 0
  rxsubrule1523_pass3476:
    rx1520_cstack = rx1520_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1520_pos, $P11, rx1520_curclass, "$!pos"
    rx1520_cur."!cursor_pass"(rx1520_pos, "infix:sym<<>", 'backtrack'=>1)
    .return (rx1520_cur)
  rx1520_restart3466:
    repr_get_attr_obj rx1520_cstack, rx1520_cur, rx1520_curclass, "$!cstack"
  rx1520_fail3467:
    unless rx1520_bstack, rx1520_done3465
    pop $I19, rx1520_bstack
    if_null rx1520_cstack, rx1520_cstack_done3470
    unless rx1520_cstack, rx1520_cstack_done3470
    dec $I19
    set $P11, rx1520_cstack[$I19]
  rx1520_cstack_done3470:
    pop rx1520_rep, rx1520_bstack
    pop rx1520_pos, rx1520_bstack
    pop $I19, rx1520_bstack
    lt rx1520_pos, -1, rx1520_done3465
    lt rx1520_pos, 0, rx1520_fail3467
    eq $I19, 0, rx1520_fail3467
    nqp_islist $I20, rx1520_cstack
    unless $I20, rx1520_jump3468
    elements $I18, rx1520_bstack
    le $I18, 0, rx1520_cut3469
    dec $I18
    set $I18, rx1520_bstack[$I18]
  rx1520_cut3469:
    assign rx1520_cstack, $I18
  rx1520_jump3468:
    jump $I19
  rx1520_done3465:
    rx1520_cur."!cursor_fail"()
    .return (rx1520_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<>>" :subid("cuid_202_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1370
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1524_start
    .local string rx1524_tgt
    .local int rx1524_pos
    .local int rx1524_off
    .local int rx1524_eos
    .local int rx1524_rep
    .local pmc rx1524_cur
    .local pmc rx1524_curclass
    .local pmc rx1524_bstack
    .local pmc rx1524_cstack
    rx1524_start = self."!cursor_start_all"()
    set rx1524_cur, rx1524_start[0]
    set rx1524_tgt, rx1524_start[1]
    set rx1524_pos, rx1524_start[2]
    set rx1524_curclass, rx1524_start[3]
    set rx1524_bstack, rx1524_start[4]
    set $I19, rx1524_start[5]
    store_lex unicode:"$\x{a2}", rx1524_cur
    length rx1524_eos, rx1524_tgt
    eq $I19, 1, rx1524_restart3479
    gt rx1524_pos, rx1524_eos, rx1524_fail3480
    repr_get_attr_int $I11, self, rx1524_curclass, "$!from"
    ne $I11, -1, rxscan1525_done3486
    goto rxscan1525_scan3485
  rxscan1525_loop3484:
    inc rx1524_pos
    gt rx1524_pos, rx1524_eos, rx1524_fail3480
    repr_bind_attr_int rx1524_cur, rx1524_curclass, "$!from", rx1524_pos
  rxscan1525_scan3485:
    nqp_rxmark rx1524_bstack, rxscan1525_loop3484, rx1524_pos, 0
  rxscan1525_done3486:
    nqp_rxmark rx1524_bstack, rxcap1526_fail3488, rx1524_pos, 0
    add $I11, rx1524_pos, 1
    gt $I11, rx1524_eos, rx1524_fail3480
    substr $S10, rx1524_tgt, rx1524_pos, 1
    ne $S10, ucs4:">", rx1524_fail3480
    add rx1524_pos, 1
    nqp_rxpeek $I19, rx1524_bstack, rxcap1526_fail3488
    inc $I19
    set $I11, rx1524_bstack[$I19]
    repr_bind_attr_int rx1524_cur, rx1524_curclass, "$!pos", rx1524_pos
    $P11 = rx1524_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1524_pos)
    rx1524_cstack = rx1524_cur."!cursor_capture"($P11, "sym")
    goto rxcap1526_done3487
  rxcap1526_fail3488:
    goto rx1524_fail3480
  rxcap1526_done3487:
    repr_bind_attr_int rx1524_cur, rx1524_curclass, "$!pos", rx1524_pos
    $P11 = rx1524_cur."O"("%relational, :op<isgt_n>")
    repr_get_attr_int $I11, $P11, rx1524_curclass, "$!pos"
    lt $I11, 0, rx1524_fail3480
    nqp_rxmark rx1524_bstack, rxsubrule1527_pass3489, -1, 0
  rxsubrule1527_pass3489:
    rx1524_cstack = rx1524_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1524_pos, $P11, rx1524_curclass, "$!pos"
    rx1524_cur."!cursor_pass"(rx1524_pos, "infix:sym<>>", 'backtrack'=>1)
    .return (rx1524_cur)
  rx1524_restart3479:
    repr_get_attr_obj rx1524_cstack, rx1524_cur, rx1524_curclass, "$!cstack"
  rx1524_fail3480:
    unless rx1524_bstack, rx1524_done3478
    pop $I19, rx1524_bstack
    if_null rx1524_cstack, rx1524_cstack_done3483
    unless rx1524_cstack, rx1524_cstack_done3483
    dec $I19
    set $P11, rx1524_cstack[$I19]
  rx1524_cstack_done3483:
    pop rx1524_rep, rx1524_bstack
    pop rx1524_pos, rx1524_bstack
    pop $I19, rx1524_bstack
    lt rx1524_pos, -1, rx1524_done3478
    lt rx1524_pos, 0, rx1524_fail3480
    eq $I19, 0, rx1524_fail3480
    nqp_islist $I20, rx1524_cstack
    unless $I20, rx1524_jump3481
    elements $I18, rx1524_bstack
    le $I18, 0, rx1524_cut3482
    dec $I18
    set $I18, rx1524_bstack[$I18]
  rx1524_cut3482:
    assign rx1524_cstack, $I18
  rx1524_jump3481:
    jump $I19
  rx1524_done3478:
    rx1524_cur."!cursor_fail"()
    .return (rx1524_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<eq>" :subid("cuid_203_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1371
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1528_start
    .local string rx1528_tgt
    .local int rx1528_pos
    .local int rx1528_off
    .local int rx1528_eos
    .local int rx1528_rep
    .local pmc rx1528_cur
    .local pmc rx1528_curclass
    .local pmc rx1528_bstack
    .local pmc rx1528_cstack
    rx1528_start = self."!cursor_start_all"()
    set rx1528_cur, rx1528_start[0]
    set rx1528_tgt, rx1528_start[1]
    set rx1528_pos, rx1528_start[2]
    set rx1528_curclass, rx1528_start[3]
    set rx1528_bstack, rx1528_start[4]
    set $I19, rx1528_start[5]
    store_lex unicode:"$\x{a2}", rx1528_cur
    length rx1528_eos, rx1528_tgt
    eq $I19, 1, rx1528_restart3492
    gt rx1528_pos, rx1528_eos, rx1528_fail3493
    repr_get_attr_int $I11, self, rx1528_curclass, "$!from"
    ne $I11, -1, rxscan1529_done3499
    goto rxscan1529_scan3498
  rxscan1529_loop3497:
    inc rx1528_pos
    gt rx1528_pos, rx1528_eos, rx1528_fail3493
    repr_bind_attr_int rx1528_cur, rx1528_curclass, "$!from", rx1528_pos
  rxscan1529_scan3498:
    nqp_rxmark rx1528_bstack, rxscan1529_loop3497, rx1528_pos, 0
  rxscan1529_done3499:
    nqp_rxmark rx1528_bstack, rxcap1530_fail3501, rx1528_pos, 0
    add $I11, rx1528_pos, 2
    gt $I11, rx1528_eos, rx1528_fail3493
    substr $S10, rx1528_tgt, rx1528_pos, 2
    ne $S10, ucs4:"eq", rx1528_fail3493
    add rx1528_pos, 2
    nqp_rxpeek $I19, rx1528_bstack, rxcap1530_fail3501
    inc $I19
    set $I11, rx1528_bstack[$I19]
    repr_bind_attr_int rx1528_cur, rx1528_curclass, "$!pos", rx1528_pos
    $P11 = rx1528_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1528_pos)
    rx1528_cstack = rx1528_cur."!cursor_capture"($P11, "sym")
    goto rxcap1530_done3500
  rxcap1530_fail3501:
    goto rx1528_fail3493
  rxcap1530_done3500:
    repr_bind_attr_int rx1528_cur, rx1528_curclass, "$!pos", rx1528_pos
    $P11 = rx1528_cur."O"("%relational, :op<iseq_s>")
    repr_get_attr_int $I11, $P11, rx1528_curclass, "$!pos"
    lt $I11, 0, rx1528_fail3493
    nqp_rxmark rx1528_bstack, rxsubrule1531_pass3502, -1, 0
  rxsubrule1531_pass3502:
    rx1528_cstack = rx1528_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1528_pos, $P11, rx1528_curclass, "$!pos"
    rx1528_cur."!cursor_pass"(rx1528_pos, "infix:sym<eq>", 'backtrack'=>1)
    .return (rx1528_cur)
  rx1528_restart3492:
    repr_get_attr_obj rx1528_cstack, rx1528_cur, rx1528_curclass, "$!cstack"
  rx1528_fail3493:
    unless rx1528_bstack, rx1528_done3491
    pop $I19, rx1528_bstack
    if_null rx1528_cstack, rx1528_cstack_done3496
    unless rx1528_cstack, rx1528_cstack_done3496
    dec $I19
    set $P11, rx1528_cstack[$I19]
  rx1528_cstack_done3496:
    pop rx1528_rep, rx1528_bstack
    pop rx1528_pos, rx1528_bstack
    pop $I19, rx1528_bstack
    lt rx1528_pos, -1, rx1528_done3491
    lt rx1528_pos, 0, rx1528_fail3493
    eq $I19, 0, rx1528_fail3493
    nqp_islist $I20, rx1528_cstack
    unless $I20, rx1528_jump3494
    elements $I18, rx1528_bstack
    le $I18, 0, rx1528_cut3495
    dec $I18
    set $I18, rx1528_bstack[$I18]
  rx1528_cut3495:
    assign rx1528_cstack, $I18
  rx1528_jump3494:
    jump $I19
  rx1528_done3491:
    rx1528_cur."!cursor_fail"()
    .return (rx1528_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<ne>" :subid("cuid_204_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1372
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1532_start
    .local string rx1532_tgt
    .local int rx1532_pos
    .local int rx1532_off
    .local int rx1532_eos
    .local int rx1532_rep
    .local pmc rx1532_cur
    .local pmc rx1532_curclass
    .local pmc rx1532_bstack
    .local pmc rx1532_cstack
    rx1532_start = self."!cursor_start_all"()
    set rx1532_cur, rx1532_start[0]
    set rx1532_tgt, rx1532_start[1]
    set rx1532_pos, rx1532_start[2]
    set rx1532_curclass, rx1532_start[3]
    set rx1532_bstack, rx1532_start[4]
    set $I19, rx1532_start[5]
    store_lex unicode:"$\x{a2}", rx1532_cur
    length rx1532_eos, rx1532_tgt
    eq $I19, 1, rx1532_restart3505
    gt rx1532_pos, rx1532_eos, rx1532_fail3506
    repr_get_attr_int $I11, self, rx1532_curclass, "$!from"
    ne $I11, -1, rxscan1533_done3512
    goto rxscan1533_scan3511
  rxscan1533_loop3510:
    inc rx1532_pos
    gt rx1532_pos, rx1532_eos, rx1532_fail3506
    repr_bind_attr_int rx1532_cur, rx1532_curclass, "$!from", rx1532_pos
  rxscan1533_scan3511:
    nqp_rxmark rx1532_bstack, rxscan1533_loop3510, rx1532_pos, 0
  rxscan1533_done3512:
    nqp_rxmark rx1532_bstack, rxcap1534_fail3514, rx1532_pos, 0
    add $I11, rx1532_pos, 2
    gt $I11, rx1532_eos, rx1532_fail3506
    substr $S10, rx1532_tgt, rx1532_pos, 2
    ne $S10, ucs4:"ne", rx1532_fail3506
    add rx1532_pos, 2
    nqp_rxpeek $I19, rx1532_bstack, rxcap1534_fail3514
    inc $I19
    set $I11, rx1532_bstack[$I19]
    repr_bind_attr_int rx1532_cur, rx1532_curclass, "$!pos", rx1532_pos
    $P11 = rx1532_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1532_pos)
    rx1532_cstack = rx1532_cur."!cursor_capture"($P11, "sym")
    goto rxcap1534_done3513
  rxcap1534_fail3514:
    goto rx1532_fail3506
  rxcap1534_done3513:
    repr_bind_attr_int rx1532_cur, rx1532_curclass, "$!pos", rx1532_pos
    $P11 = rx1532_cur."O"("%relational, :op<isne_s>")
    repr_get_attr_int $I11, $P11, rx1532_curclass, "$!pos"
    lt $I11, 0, rx1532_fail3506
    nqp_rxmark rx1532_bstack, rxsubrule1535_pass3515, -1, 0
  rxsubrule1535_pass3515:
    rx1532_cstack = rx1532_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1532_pos, $P11, rx1532_curclass, "$!pos"
    rx1532_cur."!cursor_pass"(rx1532_pos, "infix:sym<ne>", 'backtrack'=>1)
    .return (rx1532_cur)
  rx1532_restart3505:
    repr_get_attr_obj rx1532_cstack, rx1532_cur, rx1532_curclass, "$!cstack"
  rx1532_fail3506:
    unless rx1532_bstack, rx1532_done3504
    pop $I19, rx1532_bstack
    if_null rx1532_cstack, rx1532_cstack_done3509
    unless rx1532_cstack, rx1532_cstack_done3509
    dec $I19
    set $P11, rx1532_cstack[$I19]
  rx1532_cstack_done3509:
    pop rx1532_rep, rx1532_bstack
    pop rx1532_pos, rx1532_bstack
    pop $I19, rx1532_bstack
    lt rx1532_pos, -1, rx1532_done3504
    lt rx1532_pos, 0, rx1532_fail3506
    eq $I19, 0, rx1532_fail3506
    nqp_islist $I20, rx1532_cstack
    unless $I20, rx1532_jump3507
    elements $I18, rx1532_bstack
    le $I18, 0, rx1532_cut3508
    dec $I18
    set $I18, rx1532_bstack[$I18]
  rx1532_cut3508:
    assign rx1532_cstack, $I18
  rx1532_jump3507:
    jump $I19
  rx1532_done3504:
    rx1532_cur."!cursor_fail"()
    .return (rx1532_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<le>" :subid("cuid_205_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1373
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1536_start
    .local string rx1536_tgt
    .local int rx1536_pos
    .local int rx1536_off
    .local int rx1536_eos
    .local int rx1536_rep
    .local pmc rx1536_cur
    .local pmc rx1536_curclass
    .local pmc rx1536_bstack
    .local pmc rx1536_cstack
    rx1536_start = self."!cursor_start_all"()
    set rx1536_cur, rx1536_start[0]
    set rx1536_tgt, rx1536_start[1]
    set rx1536_pos, rx1536_start[2]
    set rx1536_curclass, rx1536_start[3]
    set rx1536_bstack, rx1536_start[4]
    set $I19, rx1536_start[5]
    store_lex unicode:"$\x{a2}", rx1536_cur
    length rx1536_eos, rx1536_tgt
    eq $I19, 1, rx1536_restart3518
    gt rx1536_pos, rx1536_eos, rx1536_fail3519
    repr_get_attr_int $I11, self, rx1536_curclass, "$!from"
    ne $I11, -1, rxscan1537_done3525
    goto rxscan1537_scan3524
  rxscan1537_loop3523:
    inc rx1536_pos
    gt rx1536_pos, rx1536_eos, rx1536_fail3519
    repr_bind_attr_int rx1536_cur, rx1536_curclass, "$!from", rx1536_pos
  rxscan1537_scan3524:
    nqp_rxmark rx1536_bstack, rxscan1537_loop3523, rx1536_pos, 0
  rxscan1537_done3525:
    nqp_rxmark rx1536_bstack, rxcap1538_fail3527, rx1536_pos, 0
    add $I11, rx1536_pos, 2
    gt $I11, rx1536_eos, rx1536_fail3519
    substr $S10, rx1536_tgt, rx1536_pos, 2
    ne $S10, ucs4:"le", rx1536_fail3519
    add rx1536_pos, 2
    nqp_rxpeek $I19, rx1536_bstack, rxcap1538_fail3527
    inc $I19
    set $I11, rx1536_bstack[$I19]
    repr_bind_attr_int rx1536_cur, rx1536_curclass, "$!pos", rx1536_pos
    $P11 = rx1536_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1536_pos)
    rx1536_cstack = rx1536_cur."!cursor_capture"($P11, "sym")
    goto rxcap1538_done3526
  rxcap1538_fail3527:
    goto rx1536_fail3519
  rxcap1538_done3526:
    repr_bind_attr_int rx1536_cur, rx1536_curclass, "$!pos", rx1536_pos
    $P11 = rx1536_cur."O"("%relational, :op<isle_s>")
    repr_get_attr_int $I11, $P11, rx1536_curclass, "$!pos"
    lt $I11, 0, rx1536_fail3519
    nqp_rxmark rx1536_bstack, rxsubrule1539_pass3528, -1, 0
  rxsubrule1539_pass3528:
    rx1536_cstack = rx1536_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1536_pos, $P11, rx1536_curclass, "$!pos"
    rx1536_cur."!cursor_pass"(rx1536_pos, "infix:sym<le>", 'backtrack'=>1)
    .return (rx1536_cur)
  rx1536_restart3518:
    repr_get_attr_obj rx1536_cstack, rx1536_cur, rx1536_curclass, "$!cstack"
  rx1536_fail3519:
    unless rx1536_bstack, rx1536_done3517
    pop $I19, rx1536_bstack
    if_null rx1536_cstack, rx1536_cstack_done3522
    unless rx1536_cstack, rx1536_cstack_done3522
    dec $I19
    set $P11, rx1536_cstack[$I19]
  rx1536_cstack_done3522:
    pop rx1536_rep, rx1536_bstack
    pop rx1536_pos, rx1536_bstack
    pop $I19, rx1536_bstack
    lt rx1536_pos, -1, rx1536_done3517
    lt rx1536_pos, 0, rx1536_fail3519
    eq $I19, 0, rx1536_fail3519
    nqp_islist $I20, rx1536_cstack
    unless $I20, rx1536_jump3520
    elements $I18, rx1536_bstack
    le $I18, 0, rx1536_cut3521
    dec $I18
    set $I18, rx1536_bstack[$I18]
  rx1536_cut3521:
    assign rx1536_cstack, $I18
  rx1536_jump3520:
    jump $I19
  rx1536_done3517:
    rx1536_cur."!cursor_fail"()
    .return (rx1536_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<ge>" :subid("cuid_206_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1374
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1540_start
    .local string rx1540_tgt
    .local int rx1540_pos
    .local int rx1540_off
    .local int rx1540_eos
    .local int rx1540_rep
    .local pmc rx1540_cur
    .local pmc rx1540_curclass
    .local pmc rx1540_bstack
    .local pmc rx1540_cstack
    rx1540_start = self."!cursor_start_all"()
    set rx1540_cur, rx1540_start[0]
    set rx1540_tgt, rx1540_start[1]
    set rx1540_pos, rx1540_start[2]
    set rx1540_curclass, rx1540_start[3]
    set rx1540_bstack, rx1540_start[4]
    set $I19, rx1540_start[5]
    store_lex unicode:"$\x{a2}", rx1540_cur
    length rx1540_eos, rx1540_tgt
    eq $I19, 1, rx1540_restart3531
    gt rx1540_pos, rx1540_eos, rx1540_fail3532
    repr_get_attr_int $I11, self, rx1540_curclass, "$!from"
    ne $I11, -1, rxscan1541_done3538
    goto rxscan1541_scan3537
  rxscan1541_loop3536:
    inc rx1540_pos
    gt rx1540_pos, rx1540_eos, rx1540_fail3532
    repr_bind_attr_int rx1540_cur, rx1540_curclass, "$!from", rx1540_pos
  rxscan1541_scan3537:
    nqp_rxmark rx1540_bstack, rxscan1541_loop3536, rx1540_pos, 0
  rxscan1541_done3538:
    nqp_rxmark rx1540_bstack, rxcap1542_fail3540, rx1540_pos, 0
    add $I11, rx1540_pos, 2
    gt $I11, rx1540_eos, rx1540_fail3532
    substr $S10, rx1540_tgt, rx1540_pos, 2
    ne $S10, ucs4:"ge", rx1540_fail3532
    add rx1540_pos, 2
    nqp_rxpeek $I19, rx1540_bstack, rxcap1542_fail3540
    inc $I19
    set $I11, rx1540_bstack[$I19]
    repr_bind_attr_int rx1540_cur, rx1540_curclass, "$!pos", rx1540_pos
    $P11 = rx1540_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1540_pos)
    rx1540_cstack = rx1540_cur."!cursor_capture"($P11, "sym")
    goto rxcap1542_done3539
  rxcap1542_fail3540:
    goto rx1540_fail3532
  rxcap1542_done3539:
    repr_bind_attr_int rx1540_cur, rx1540_curclass, "$!pos", rx1540_pos
    $P11 = rx1540_cur."O"("%relational, :op<isge_s>")
    repr_get_attr_int $I11, $P11, rx1540_curclass, "$!pos"
    lt $I11, 0, rx1540_fail3532
    nqp_rxmark rx1540_bstack, rxsubrule1543_pass3541, -1, 0
  rxsubrule1543_pass3541:
    rx1540_cstack = rx1540_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1540_pos, $P11, rx1540_curclass, "$!pos"
    rx1540_cur."!cursor_pass"(rx1540_pos, "infix:sym<ge>", 'backtrack'=>1)
    .return (rx1540_cur)
  rx1540_restart3531:
    repr_get_attr_obj rx1540_cstack, rx1540_cur, rx1540_curclass, "$!cstack"
  rx1540_fail3532:
    unless rx1540_bstack, rx1540_done3530
    pop $I19, rx1540_bstack
    if_null rx1540_cstack, rx1540_cstack_done3535
    unless rx1540_cstack, rx1540_cstack_done3535
    dec $I19
    set $P11, rx1540_cstack[$I19]
  rx1540_cstack_done3535:
    pop rx1540_rep, rx1540_bstack
    pop rx1540_pos, rx1540_bstack
    pop $I19, rx1540_bstack
    lt rx1540_pos, -1, rx1540_done3530
    lt rx1540_pos, 0, rx1540_fail3532
    eq $I19, 0, rx1540_fail3532
    nqp_islist $I20, rx1540_cstack
    unless $I20, rx1540_jump3533
    elements $I18, rx1540_bstack
    le $I18, 0, rx1540_cut3534
    dec $I18
    set $I18, rx1540_bstack[$I18]
  rx1540_cut3534:
    assign rx1540_cstack, $I18
  rx1540_jump3533:
    jump $I19
  rx1540_done3530:
    rx1540_cur."!cursor_fail"()
    .return (rx1540_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<lt>" :subid("cuid_207_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1375
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1544_start
    .local string rx1544_tgt
    .local int rx1544_pos
    .local int rx1544_off
    .local int rx1544_eos
    .local int rx1544_rep
    .local pmc rx1544_cur
    .local pmc rx1544_curclass
    .local pmc rx1544_bstack
    .local pmc rx1544_cstack
    rx1544_start = self."!cursor_start_all"()
    set rx1544_cur, rx1544_start[0]
    set rx1544_tgt, rx1544_start[1]
    set rx1544_pos, rx1544_start[2]
    set rx1544_curclass, rx1544_start[3]
    set rx1544_bstack, rx1544_start[4]
    set $I19, rx1544_start[5]
    store_lex unicode:"$\x{a2}", rx1544_cur
    length rx1544_eos, rx1544_tgt
    eq $I19, 1, rx1544_restart3544
    gt rx1544_pos, rx1544_eos, rx1544_fail3545
    repr_get_attr_int $I11, self, rx1544_curclass, "$!from"
    ne $I11, -1, rxscan1545_done3551
    goto rxscan1545_scan3550
  rxscan1545_loop3549:
    inc rx1544_pos
    gt rx1544_pos, rx1544_eos, rx1544_fail3545
    repr_bind_attr_int rx1544_cur, rx1544_curclass, "$!from", rx1544_pos
  rxscan1545_scan3550:
    nqp_rxmark rx1544_bstack, rxscan1545_loop3549, rx1544_pos, 0
  rxscan1545_done3551:
    nqp_rxmark rx1544_bstack, rxcap1546_fail3553, rx1544_pos, 0
    add $I11, rx1544_pos, 2
    gt $I11, rx1544_eos, rx1544_fail3545
    substr $S10, rx1544_tgt, rx1544_pos, 2
    ne $S10, ucs4:"lt", rx1544_fail3545
    add rx1544_pos, 2
    nqp_rxpeek $I19, rx1544_bstack, rxcap1546_fail3553
    inc $I19
    set $I11, rx1544_bstack[$I19]
    repr_bind_attr_int rx1544_cur, rx1544_curclass, "$!pos", rx1544_pos
    $P11 = rx1544_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1544_pos)
    rx1544_cstack = rx1544_cur."!cursor_capture"($P11, "sym")
    goto rxcap1546_done3552
  rxcap1546_fail3553:
    goto rx1544_fail3545
  rxcap1546_done3552:
    repr_bind_attr_int rx1544_cur, rx1544_curclass, "$!pos", rx1544_pos
    $P11 = rx1544_cur."O"("%relational, :op<islt_s>")
    repr_get_attr_int $I11, $P11, rx1544_curclass, "$!pos"
    lt $I11, 0, rx1544_fail3545
    nqp_rxmark rx1544_bstack, rxsubrule1547_pass3554, -1, 0
  rxsubrule1547_pass3554:
    rx1544_cstack = rx1544_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1544_pos, $P11, rx1544_curclass, "$!pos"
    rx1544_cur."!cursor_pass"(rx1544_pos, "infix:sym<lt>", 'backtrack'=>1)
    .return (rx1544_cur)
  rx1544_restart3544:
    repr_get_attr_obj rx1544_cstack, rx1544_cur, rx1544_curclass, "$!cstack"
  rx1544_fail3545:
    unless rx1544_bstack, rx1544_done3543
    pop $I19, rx1544_bstack
    if_null rx1544_cstack, rx1544_cstack_done3548
    unless rx1544_cstack, rx1544_cstack_done3548
    dec $I19
    set $P11, rx1544_cstack[$I19]
  rx1544_cstack_done3548:
    pop rx1544_rep, rx1544_bstack
    pop rx1544_pos, rx1544_bstack
    pop $I19, rx1544_bstack
    lt rx1544_pos, -1, rx1544_done3543
    lt rx1544_pos, 0, rx1544_fail3545
    eq $I19, 0, rx1544_fail3545
    nqp_islist $I20, rx1544_cstack
    unless $I20, rx1544_jump3546
    elements $I18, rx1544_bstack
    le $I18, 0, rx1544_cut3547
    dec $I18
    set $I18, rx1544_bstack[$I18]
  rx1544_cut3547:
    assign rx1544_cstack, $I18
  rx1544_jump3546:
    jump $I19
  rx1544_done3543:
    rx1544_cur."!cursor_fail"()
    .return (rx1544_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<gt>" :subid("cuid_208_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1376
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1548_start
    .local string rx1548_tgt
    .local int rx1548_pos
    .local int rx1548_off
    .local int rx1548_eos
    .local int rx1548_rep
    .local pmc rx1548_cur
    .local pmc rx1548_curclass
    .local pmc rx1548_bstack
    .local pmc rx1548_cstack
    rx1548_start = self."!cursor_start_all"()
    set rx1548_cur, rx1548_start[0]
    set rx1548_tgt, rx1548_start[1]
    set rx1548_pos, rx1548_start[2]
    set rx1548_curclass, rx1548_start[3]
    set rx1548_bstack, rx1548_start[4]
    set $I19, rx1548_start[5]
    store_lex unicode:"$\x{a2}", rx1548_cur
    length rx1548_eos, rx1548_tgt
    eq $I19, 1, rx1548_restart3557
    gt rx1548_pos, rx1548_eos, rx1548_fail3558
    repr_get_attr_int $I11, self, rx1548_curclass, "$!from"
    ne $I11, -1, rxscan1549_done3564
    goto rxscan1549_scan3563
  rxscan1549_loop3562:
    inc rx1548_pos
    gt rx1548_pos, rx1548_eos, rx1548_fail3558
    repr_bind_attr_int rx1548_cur, rx1548_curclass, "$!from", rx1548_pos
  rxscan1549_scan3563:
    nqp_rxmark rx1548_bstack, rxscan1549_loop3562, rx1548_pos, 0
  rxscan1549_done3564:
    nqp_rxmark rx1548_bstack, rxcap1550_fail3566, rx1548_pos, 0
    add $I11, rx1548_pos, 2
    gt $I11, rx1548_eos, rx1548_fail3558
    substr $S10, rx1548_tgt, rx1548_pos, 2
    ne $S10, ucs4:"gt", rx1548_fail3558
    add rx1548_pos, 2
    nqp_rxpeek $I19, rx1548_bstack, rxcap1550_fail3566
    inc $I19
    set $I11, rx1548_bstack[$I19]
    repr_bind_attr_int rx1548_cur, rx1548_curclass, "$!pos", rx1548_pos
    $P11 = rx1548_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1548_pos)
    rx1548_cstack = rx1548_cur."!cursor_capture"($P11, "sym")
    goto rxcap1550_done3565
  rxcap1550_fail3566:
    goto rx1548_fail3558
  rxcap1550_done3565:
    repr_bind_attr_int rx1548_cur, rx1548_curclass, "$!pos", rx1548_pos
    $P11 = rx1548_cur."O"("%relational, :op<isgt_s>")
    repr_get_attr_int $I11, $P11, rx1548_curclass, "$!pos"
    lt $I11, 0, rx1548_fail3558
    nqp_rxmark rx1548_bstack, rxsubrule1551_pass3567, -1, 0
  rxsubrule1551_pass3567:
    rx1548_cstack = rx1548_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1548_pos, $P11, rx1548_curclass, "$!pos"
    rx1548_cur."!cursor_pass"(rx1548_pos, "infix:sym<gt>", 'backtrack'=>1)
    .return (rx1548_cur)
  rx1548_restart3557:
    repr_get_attr_obj rx1548_cstack, rx1548_cur, rx1548_curclass, "$!cstack"
  rx1548_fail3558:
    unless rx1548_bstack, rx1548_done3556
    pop $I19, rx1548_bstack
    if_null rx1548_cstack, rx1548_cstack_done3561
    unless rx1548_cstack, rx1548_cstack_done3561
    dec $I19
    set $P11, rx1548_cstack[$I19]
  rx1548_cstack_done3561:
    pop rx1548_rep, rx1548_bstack
    pop rx1548_pos, rx1548_bstack
    pop $I19, rx1548_bstack
    lt rx1548_pos, -1, rx1548_done3556
    lt rx1548_pos, 0, rx1548_fail3558
    eq $I19, 0, rx1548_fail3558
    nqp_islist $I20, rx1548_cstack
    unless $I20, rx1548_jump3559
    elements $I18, rx1548_bstack
    le $I18, 0, rx1548_cut3560
    dec $I18
    set $I18, rx1548_bstack[$I18]
  rx1548_cut3560:
    assign rx1548_cstack, $I18
  rx1548_jump3559:
    jump $I19
  rx1548_done3556:
    rx1548_cur."!cursor_fail"()
    .return (rx1548_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<=:=>" :subid("cuid_209_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1377
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1552_start
    .local string rx1552_tgt
    .local int rx1552_pos
    .local int rx1552_off
    .local int rx1552_eos
    .local int rx1552_rep
    .local pmc rx1552_cur
    .local pmc rx1552_curclass
    .local pmc rx1552_bstack
    .local pmc rx1552_cstack
    rx1552_start = self."!cursor_start_all"()
    set rx1552_cur, rx1552_start[0]
    set rx1552_tgt, rx1552_start[1]
    set rx1552_pos, rx1552_start[2]
    set rx1552_curclass, rx1552_start[3]
    set rx1552_bstack, rx1552_start[4]
    set $I19, rx1552_start[5]
    store_lex unicode:"$\x{a2}", rx1552_cur
    length rx1552_eos, rx1552_tgt
    eq $I19, 1, rx1552_restart3570
    gt rx1552_pos, rx1552_eos, rx1552_fail3571
    repr_get_attr_int $I11, self, rx1552_curclass, "$!from"
    ne $I11, -1, rxscan1553_done3577
    goto rxscan1553_scan3576
  rxscan1553_loop3575:
    inc rx1552_pos
    gt rx1552_pos, rx1552_eos, rx1552_fail3571
    repr_bind_attr_int rx1552_cur, rx1552_curclass, "$!from", rx1552_pos
  rxscan1553_scan3576:
    nqp_rxmark rx1552_bstack, rxscan1553_loop3575, rx1552_pos, 0
  rxscan1553_done3577:
    nqp_rxmark rx1552_bstack, rxcap1554_fail3579, rx1552_pos, 0
    add $I11, rx1552_pos, 3
    gt $I11, rx1552_eos, rx1552_fail3571
    substr $S10, rx1552_tgt, rx1552_pos, 3
    ne $S10, ucs4:"=:=", rx1552_fail3571
    add rx1552_pos, 3
    nqp_rxpeek $I19, rx1552_bstack, rxcap1554_fail3579
    inc $I19
    set $I11, rx1552_bstack[$I19]
    repr_bind_attr_int rx1552_cur, rx1552_curclass, "$!pos", rx1552_pos
    $P11 = rx1552_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1552_pos)
    rx1552_cstack = rx1552_cur."!cursor_capture"($P11, "sym")
    goto rxcap1554_done3578
  rxcap1554_fail3579:
    goto rx1552_fail3571
  rxcap1554_done3578:
    repr_bind_attr_int rx1552_cur, rx1552_curclass, "$!pos", rx1552_pos
    $P11 = rx1552_cur."O"("%relational, :op<eqaddr>")
    repr_get_attr_int $I11, $P11, rx1552_curclass, "$!pos"
    lt $I11, 0, rx1552_fail3571
    nqp_rxmark rx1552_bstack, rxsubrule1555_pass3580, -1, 0
  rxsubrule1555_pass3580:
    rx1552_cstack = rx1552_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1552_pos, $P11, rx1552_curclass, "$!pos"
    rx1552_cur."!cursor_pass"(rx1552_pos, "infix:sym<=:=>", 'backtrack'=>1)
    .return (rx1552_cur)
  rx1552_restart3570:
    repr_get_attr_obj rx1552_cstack, rx1552_cur, rx1552_curclass, "$!cstack"
  rx1552_fail3571:
    unless rx1552_bstack, rx1552_done3569
    pop $I19, rx1552_bstack
    if_null rx1552_cstack, rx1552_cstack_done3574
    unless rx1552_cstack, rx1552_cstack_done3574
    dec $I19
    set $P11, rx1552_cstack[$I19]
  rx1552_cstack_done3574:
    pop rx1552_rep, rx1552_bstack
    pop rx1552_pos, rx1552_bstack
    pop $I19, rx1552_bstack
    lt rx1552_pos, -1, rx1552_done3569
    lt rx1552_pos, 0, rx1552_fail3571
    eq $I19, 0, rx1552_fail3571
    nqp_islist $I20, rx1552_cstack
    unless $I20, rx1552_jump3572
    elements $I18, rx1552_bstack
    le $I18, 0, rx1552_cut3573
    dec $I18
    set $I18, rx1552_bstack[$I18]
  rx1552_cut3573:
    assign rx1552_cstack, $I18
  rx1552_jump3572:
    jump $I19
  rx1552_done3569:
    rx1552_cur."!cursor_fail"()
    .return (rx1552_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<~~>" :subid("cuid_210_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1378
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1556_start
    .local string rx1556_tgt
    .local int rx1556_pos
    .local int rx1556_off
    .local int rx1556_eos
    .local int rx1556_rep
    .local pmc rx1556_cur
    .local pmc rx1556_curclass
    .local pmc rx1556_bstack
    .local pmc rx1556_cstack
    rx1556_start = self."!cursor_start_all"()
    set rx1556_cur, rx1556_start[0]
    set rx1556_tgt, rx1556_start[1]
    set rx1556_pos, rx1556_start[2]
    set rx1556_curclass, rx1556_start[3]
    set rx1556_bstack, rx1556_start[4]
    set $I19, rx1556_start[5]
    store_lex unicode:"$\x{a2}", rx1556_cur
    length rx1556_eos, rx1556_tgt
    eq $I19, 1, rx1556_restart3583
    gt rx1556_pos, rx1556_eos, rx1556_fail3584
    repr_get_attr_int $I11, self, rx1556_curclass, "$!from"
    ne $I11, -1, rxscan1557_done3590
    goto rxscan1557_scan3589
  rxscan1557_loop3588:
    inc rx1556_pos
    gt rx1556_pos, rx1556_eos, rx1556_fail3584
    repr_bind_attr_int rx1556_cur, rx1556_curclass, "$!from", rx1556_pos
  rxscan1557_scan3589:
    nqp_rxmark rx1556_bstack, rxscan1557_loop3588, rx1556_pos, 0
  rxscan1557_done3590:
    nqp_rxmark rx1556_bstack, rxcap1558_fail3592, rx1556_pos, 0
    add $I11, rx1556_pos, 2
    gt $I11, rx1556_eos, rx1556_fail3584
    substr $S10, rx1556_tgt, rx1556_pos, 2
    ne $S10, ucs4:"~~", rx1556_fail3584
    add rx1556_pos, 2
    nqp_rxpeek $I19, rx1556_bstack, rxcap1558_fail3592
    inc $I19
    set $I11, rx1556_bstack[$I19]
    repr_bind_attr_int rx1556_cur, rx1556_curclass, "$!pos", rx1556_pos
    $P11 = rx1556_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1556_pos)
    rx1556_cstack = rx1556_cur."!cursor_capture"($P11, "sym")
    goto rxcap1558_done3591
  rxcap1558_fail3592:
    goto rx1556_fail3584
  rxcap1558_done3591:
    repr_bind_attr_int rx1556_cur, rx1556_curclass, "$!pos", rx1556_pos
    $P11 = rx1556_cur."O"("%relational, :reducecheck<smartmatch>")
    repr_get_attr_int $I11, $P11, rx1556_curclass, "$!pos"
    lt $I11, 0, rx1556_fail3584
    nqp_rxmark rx1556_bstack, rxsubrule1559_pass3593, -1, 0
  rxsubrule1559_pass3593:
    rx1556_cstack = rx1556_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1556_pos, $P11, rx1556_curclass, "$!pos"
    rx1556_cur."!cursor_pass"(rx1556_pos, "infix:sym<~~>", 'backtrack'=>1)
    .return (rx1556_cur)
  rx1556_restart3583:
    repr_get_attr_obj rx1556_cstack, rx1556_cur, rx1556_curclass, "$!cstack"
  rx1556_fail3584:
    unless rx1556_bstack, rx1556_done3582
    pop $I19, rx1556_bstack
    if_null rx1556_cstack, rx1556_cstack_done3587
    unless rx1556_cstack, rx1556_cstack_done3587
    dec $I19
    set $P11, rx1556_cstack[$I19]
  rx1556_cstack_done3587:
    pop rx1556_rep, rx1556_bstack
    pop rx1556_pos, rx1556_bstack
    pop $I19, rx1556_bstack
    lt rx1556_pos, -1, rx1556_done3582
    lt rx1556_pos, 0, rx1556_fail3584
    eq $I19, 0, rx1556_fail3584
    nqp_islist $I20, rx1556_cstack
    unless $I20, rx1556_jump3585
    elements $I18, rx1556_bstack
    le $I18, 0, rx1556_cut3586
    dec $I18
    set $I18, rx1556_bstack[$I18]
  rx1556_cut3586:
    assign rx1556_cstack, $I18
  rx1556_jump3585:
    jump $I19
  rx1556_done3582:
    rx1556_cur."!cursor_fail"()
    .return (rx1556_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<&&>" :subid("cuid_211_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1380
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1560_start
    .local string rx1560_tgt
    .local int rx1560_pos
    .local int rx1560_off
    .local int rx1560_eos
    .local int rx1560_rep
    .local pmc rx1560_cur
    .local pmc rx1560_curclass
    .local pmc rx1560_bstack
    .local pmc rx1560_cstack
    rx1560_start = self."!cursor_start_all"()
    set rx1560_cur, rx1560_start[0]
    set rx1560_tgt, rx1560_start[1]
    set rx1560_pos, rx1560_start[2]
    set rx1560_curclass, rx1560_start[3]
    set rx1560_bstack, rx1560_start[4]
    set $I19, rx1560_start[5]
    store_lex unicode:"$\x{a2}", rx1560_cur
    length rx1560_eos, rx1560_tgt
    eq $I19, 1, rx1560_restart3596
    gt rx1560_pos, rx1560_eos, rx1560_fail3597
    repr_get_attr_int $I11, self, rx1560_curclass, "$!from"
    ne $I11, -1, rxscan1561_done3603
    goto rxscan1561_scan3602
  rxscan1561_loop3601:
    inc rx1560_pos
    gt rx1560_pos, rx1560_eos, rx1560_fail3597
    repr_bind_attr_int rx1560_cur, rx1560_curclass, "$!from", rx1560_pos
  rxscan1561_scan3602:
    nqp_rxmark rx1560_bstack, rxscan1561_loop3601, rx1560_pos, 0
  rxscan1561_done3603:
    nqp_rxmark rx1560_bstack, rxcap1562_fail3605, rx1560_pos, 0
    add $I11, rx1560_pos, 2
    gt $I11, rx1560_eos, rx1560_fail3597
    substr $S10, rx1560_tgt, rx1560_pos, 2
    ne $S10, ucs4:"&&", rx1560_fail3597
    add rx1560_pos, 2
    nqp_rxpeek $I19, rx1560_bstack, rxcap1562_fail3605
    inc $I19
    set $I11, rx1560_bstack[$I19]
    repr_bind_attr_int rx1560_cur, rx1560_curclass, "$!pos", rx1560_pos
    $P11 = rx1560_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1560_pos)
    rx1560_cstack = rx1560_cur."!cursor_capture"($P11, "sym")
    goto rxcap1562_done3604
  rxcap1562_fail3605:
    goto rx1560_fail3597
  rxcap1562_done3604:
    repr_bind_attr_int rx1560_cur, rx1560_curclass, "$!pos", rx1560_pos
    $P11 = rx1560_cur."O"("%tight_and, :op<if>")
    repr_get_attr_int $I11, $P11, rx1560_curclass, "$!pos"
    lt $I11, 0, rx1560_fail3597
    nqp_rxmark rx1560_bstack, rxsubrule1563_pass3606, -1, 0
  rxsubrule1563_pass3606:
    rx1560_cstack = rx1560_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1560_pos, $P11, rx1560_curclass, "$!pos"
    rx1560_cur."!cursor_pass"(rx1560_pos, "infix:sym<&&>", 'backtrack'=>1)
    .return (rx1560_cur)
  rx1560_restart3596:
    repr_get_attr_obj rx1560_cstack, rx1560_cur, rx1560_curclass, "$!cstack"
  rx1560_fail3597:
    unless rx1560_bstack, rx1560_done3595
    pop $I19, rx1560_bstack
    if_null rx1560_cstack, rx1560_cstack_done3600
    unless rx1560_cstack, rx1560_cstack_done3600
    dec $I19
    set $P11, rx1560_cstack[$I19]
  rx1560_cstack_done3600:
    pop rx1560_rep, rx1560_bstack
    pop rx1560_pos, rx1560_bstack
    pop $I19, rx1560_bstack
    lt rx1560_pos, -1, rx1560_done3595
    lt rx1560_pos, 0, rx1560_fail3597
    eq $I19, 0, rx1560_fail3597
    nqp_islist $I20, rx1560_cstack
    unless $I20, rx1560_jump3598
    elements $I18, rx1560_bstack
    le $I18, 0, rx1560_cut3599
    dec $I18
    set $I18, rx1560_bstack[$I18]
  rx1560_cut3599:
    assign rx1560_cstack, $I18
  rx1560_jump3598:
    jump $I19
  rx1560_done3595:
    rx1560_cur."!cursor_fail"()
    .return (rx1560_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<||>" :subid("cuid_212_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1382
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1564_start
    .local string rx1564_tgt
    .local int rx1564_pos
    .local int rx1564_off
    .local int rx1564_eos
    .local int rx1564_rep
    .local pmc rx1564_cur
    .local pmc rx1564_curclass
    .local pmc rx1564_bstack
    .local pmc rx1564_cstack
    rx1564_start = self."!cursor_start_all"()
    set rx1564_cur, rx1564_start[0]
    set rx1564_tgt, rx1564_start[1]
    set rx1564_pos, rx1564_start[2]
    set rx1564_curclass, rx1564_start[3]
    set rx1564_bstack, rx1564_start[4]
    set $I19, rx1564_start[5]
    store_lex unicode:"$\x{a2}", rx1564_cur
    length rx1564_eos, rx1564_tgt
    eq $I19, 1, rx1564_restart3609
    gt rx1564_pos, rx1564_eos, rx1564_fail3610
    repr_get_attr_int $I11, self, rx1564_curclass, "$!from"
    ne $I11, -1, rxscan1565_done3616
    goto rxscan1565_scan3615
  rxscan1565_loop3614:
    inc rx1564_pos
    gt rx1564_pos, rx1564_eos, rx1564_fail3610
    repr_bind_attr_int rx1564_cur, rx1564_curclass, "$!from", rx1564_pos
  rxscan1565_scan3615:
    nqp_rxmark rx1564_bstack, rxscan1565_loop3614, rx1564_pos, 0
  rxscan1565_done3616:
    nqp_rxmark rx1564_bstack, rxcap1566_fail3618, rx1564_pos, 0
    add $I11, rx1564_pos, 2
    gt $I11, rx1564_eos, rx1564_fail3610
    substr $S10, rx1564_tgt, rx1564_pos, 2
    ne $S10, ucs4:"||", rx1564_fail3610
    add rx1564_pos, 2
    nqp_rxpeek $I19, rx1564_bstack, rxcap1566_fail3618
    inc $I19
    set $I11, rx1564_bstack[$I19]
    repr_bind_attr_int rx1564_cur, rx1564_curclass, "$!pos", rx1564_pos
    $P11 = rx1564_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1564_pos)
    rx1564_cstack = rx1564_cur."!cursor_capture"($P11, "sym")
    goto rxcap1566_done3617
  rxcap1566_fail3618:
    goto rx1564_fail3610
  rxcap1566_done3617:
    repr_bind_attr_int rx1564_cur, rx1564_curclass, "$!pos", rx1564_pos
    $P11 = rx1564_cur."O"("%tight_or, :op<unless>")
    repr_get_attr_int $I11, $P11, rx1564_curclass, "$!pos"
    lt $I11, 0, rx1564_fail3610
    nqp_rxmark rx1564_bstack, rxsubrule1567_pass3619, -1, 0
  rxsubrule1567_pass3619:
    rx1564_cstack = rx1564_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1564_pos, $P11, rx1564_curclass, "$!pos"
    rx1564_cur."!cursor_pass"(rx1564_pos, "infix:sym<||>", 'backtrack'=>1)
    .return (rx1564_cur)
  rx1564_restart3609:
    repr_get_attr_obj rx1564_cstack, rx1564_cur, rx1564_curclass, "$!cstack"
  rx1564_fail3610:
    unless rx1564_bstack, rx1564_done3608
    pop $I19, rx1564_bstack
    if_null rx1564_cstack, rx1564_cstack_done3613
    unless rx1564_cstack, rx1564_cstack_done3613
    dec $I19
    set $P11, rx1564_cstack[$I19]
  rx1564_cstack_done3613:
    pop rx1564_rep, rx1564_bstack
    pop rx1564_pos, rx1564_bstack
    pop $I19, rx1564_bstack
    lt rx1564_pos, -1, rx1564_done3608
    lt rx1564_pos, 0, rx1564_fail3610
    eq $I19, 0, rx1564_fail3610
    nqp_islist $I20, rx1564_cstack
    unless $I20, rx1564_jump3611
    elements $I18, rx1564_bstack
    le $I18, 0, rx1564_cut3612
    dec $I18
    set $I18, rx1564_bstack[$I18]
  rx1564_cut3612:
    assign rx1564_cstack, $I18
  rx1564_jump3611:
    jump $I19
  rx1564_done3608:
    rx1564_cur."!cursor_fail"()
    .return (rx1564_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<//>" :subid("cuid_213_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1383
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1568_start
    .local string rx1568_tgt
    .local int rx1568_pos
    .local int rx1568_off
    .local int rx1568_eos
    .local int rx1568_rep
    .local pmc rx1568_cur
    .local pmc rx1568_curclass
    .local pmc rx1568_bstack
    .local pmc rx1568_cstack
    rx1568_start = self."!cursor_start_all"()
    set rx1568_cur, rx1568_start[0]
    set rx1568_tgt, rx1568_start[1]
    set rx1568_pos, rx1568_start[2]
    set rx1568_curclass, rx1568_start[3]
    set rx1568_bstack, rx1568_start[4]
    set $I19, rx1568_start[5]
    store_lex unicode:"$\x{a2}", rx1568_cur
    length rx1568_eos, rx1568_tgt
    eq $I19, 1, rx1568_restart3622
    gt rx1568_pos, rx1568_eos, rx1568_fail3623
    repr_get_attr_int $I11, self, rx1568_curclass, "$!from"
    ne $I11, -1, rxscan1569_done3629
    goto rxscan1569_scan3628
  rxscan1569_loop3627:
    inc rx1568_pos
    gt rx1568_pos, rx1568_eos, rx1568_fail3623
    repr_bind_attr_int rx1568_cur, rx1568_curclass, "$!from", rx1568_pos
  rxscan1569_scan3628:
    nqp_rxmark rx1568_bstack, rxscan1569_loop3627, rx1568_pos, 0
  rxscan1569_done3629:
    nqp_rxmark rx1568_bstack, rxcap1570_fail3631, rx1568_pos, 0
    add $I11, rx1568_pos, 2
    gt $I11, rx1568_eos, rx1568_fail3623
    substr $S10, rx1568_tgt, rx1568_pos, 2
    ne $S10, ucs4:"//", rx1568_fail3623
    add rx1568_pos, 2
    nqp_rxpeek $I19, rx1568_bstack, rxcap1570_fail3631
    inc $I19
    set $I11, rx1568_bstack[$I19]
    repr_bind_attr_int rx1568_cur, rx1568_curclass, "$!pos", rx1568_pos
    $P11 = rx1568_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1568_pos)
    rx1568_cstack = rx1568_cur."!cursor_capture"($P11, "sym")
    goto rxcap1570_done3630
  rxcap1570_fail3631:
    goto rx1568_fail3623
  rxcap1570_done3630:
    repr_bind_attr_int rx1568_cur, rx1568_curclass, "$!pos", rx1568_pos
    $P11 = rx1568_cur."O"("%tight_or, :op<defor>")
    repr_get_attr_int $I11, $P11, rx1568_curclass, "$!pos"
    lt $I11, 0, rx1568_fail3623
    nqp_rxmark rx1568_bstack, rxsubrule1571_pass3632, -1, 0
  rxsubrule1571_pass3632:
    rx1568_cstack = rx1568_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1568_pos, $P11, rx1568_curclass, "$!pos"
    rx1568_cur."!cursor_pass"(rx1568_pos, "infix:sym<//>", 'backtrack'=>1)
    .return (rx1568_cur)
  rx1568_restart3622:
    repr_get_attr_obj rx1568_cstack, rx1568_cur, rx1568_curclass, "$!cstack"
  rx1568_fail3623:
    unless rx1568_bstack, rx1568_done3621
    pop $I19, rx1568_bstack
    if_null rx1568_cstack, rx1568_cstack_done3626
    unless rx1568_cstack, rx1568_cstack_done3626
    dec $I19
    set $P11, rx1568_cstack[$I19]
  rx1568_cstack_done3626:
    pop rx1568_rep, rx1568_bstack
    pop rx1568_pos, rx1568_bstack
    pop $I19, rx1568_bstack
    lt rx1568_pos, -1, rx1568_done3621
    lt rx1568_pos, 0, rx1568_fail3623
    eq $I19, 0, rx1568_fail3623
    nqp_islist $I20, rx1568_cstack
    unless $I20, rx1568_jump3624
    elements $I18, rx1568_bstack
    le $I18, 0, rx1568_cut3625
    dec $I18
    set $I18, rx1568_bstack[$I18]
  rx1568_cut3625:
    assign rx1568_cstack, $I18
  rx1568_jump3624:
    jump $I19
  rx1568_done3621:
    rx1568_cur."!cursor_fail"()
    .return (rx1568_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<?? !!>" :subid("cuid_214_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1385
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1572_start
    .local string rx1572_tgt
    .local int rx1572_pos
    .local int rx1572_off
    .local int rx1572_eos
    .local int rx1572_rep
    .local pmc rx1572_cur
    .local pmc rx1572_curclass
    .local pmc rx1572_bstack
    .local pmc rx1572_cstack
    rx1572_start = self."!cursor_start_all"()
    set rx1572_cur, rx1572_start[0]
    set rx1572_tgt, rx1572_start[1]
    set rx1572_pos, rx1572_start[2]
    set rx1572_curclass, rx1572_start[3]
    set rx1572_bstack, rx1572_start[4]
    set $I19, rx1572_start[5]
    store_lex unicode:"$\x{a2}", rx1572_cur
    length rx1572_eos, rx1572_tgt
    eq $I19, 1, rx1572_restart3635
    gt rx1572_pos, rx1572_eos, rx1572_fail3636
    repr_get_attr_int $I11, self, rx1572_curclass, "$!from"
    ne $I11, -1, rxscan1573_done3642
    goto rxscan1573_scan3641
  rxscan1573_loop3640:
    inc rx1572_pos
    gt rx1572_pos, rx1572_eos, rx1572_fail3636
    repr_bind_attr_int rx1572_cur, rx1572_curclass, "$!from", rx1572_pos
  rxscan1573_scan3641:
    nqp_rxmark rx1572_bstack, rxscan1573_loop3640, rx1572_pos, 0
  rxscan1573_done3642:
    add $I11, rx1572_pos, 2
    gt $I11, rx1572_eos, rx1572_fail3636
    substr $S10, rx1572_tgt, rx1572_pos, 2
    ne $S10, ucs4:"??", rx1572_fail3636
    add rx1572_pos, 2
    repr_bind_attr_int rx1572_cur, rx1572_curclass, "$!pos", rx1572_pos
    $P11 = rx1572_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1572_curclass, "$!pos"
    lt $I11, 0, rx1572_fail3636
    repr_get_attr_int rx1572_pos, $P11, rx1572_curclass, "$!pos"
    repr_bind_attr_int rx1572_cur, rx1572_curclass, "$!pos", rx1572_pos
    $P11 = rx1572_cur."EXPR"("i=")
    repr_get_attr_int $I11, $P11, rx1572_curclass, "$!pos"
    lt $I11, 0, rx1572_fail3636
    nqp_rxmark rx1572_bstack, rxsubrule1575_pass3644, -1, 0
  rxsubrule1575_pass3644:
    rx1572_cstack = rx1572_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx1572_pos, $P11, rx1572_curclass, "$!pos"
    add $I11, rx1572_pos, 2
    gt $I11, rx1572_eos, rx1572_fail3636
    substr $S10, rx1572_tgt, rx1572_pos, 2
    ne $S10, ucs4:"!!", rx1572_fail3636
    add rx1572_pos, 2
    repr_bind_attr_int rx1572_cur, rx1572_curclass, "$!pos", rx1572_pos
    $P11 = rx1572_cur."O"("%conditional, :reducecheck<ternary>, :op<if>")
    repr_get_attr_int $I11, $P11, rx1572_curclass, "$!pos"
    lt $I11, 0, rx1572_fail3636
    nqp_rxmark rx1572_bstack, rxsubrule1576_pass3645, -1, 0
  rxsubrule1576_pass3645:
    rx1572_cstack = rx1572_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1572_pos, $P11, rx1572_curclass, "$!pos"
    rx1572_cur."!cursor_pass"(rx1572_pos, "infix:sym<?? !!>", 'backtrack'=>1)
    .return (rx1572_cur)
  rx1572_restart3635:
    repr_get_attr_obj rx1572_cstack, rx1572_cur, rx1572_curclass, "$!cstack"
  rx1572_fail3636:
    unless rx1572_bstack, rx1572_done3634
    pop $I19, rx1572_bstack
    if_null rx1572_cstack, rx1572_cstack_done3639
    unless rx1572_cstack, rx1572_cstack_done3639
    dec $I19
    set $P11, rx1572_cstack[$I19]
  rx1572_cstack_done3639:
    pop rx1572_rep, rx1572_bstack
    pop rx1572_pos, rx1572_bstack
    pop $I19, rx1572_bstack
    lt rx1572_pos, -1, rx1572_done3634
    lt rx1572_pos, 0, rx1572_fail3636
    eq $I19, 0, rx1572_fail3636
    nqp_islist $I20, rx1572_cstack
    unless $I20, rx1572_jump3637
    elements $I18, rx1572_bstack
    le $I18, 0, rx1572_cut3638
    dec $I18
    set $I18, rx1572_bstack[$I18]
  rx1572_cut3638:
    assign rx1572_cstack, $I18
  rx1572_jump3637:
    jump $I19
  rx1572_done3634:
    rx1572_cur."!cursor_fail"()
    .return (rx1572_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<=>" :subid("cuid_215_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1393
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1577_start
    .local string rx1577_tgt
    .local int rx1577_pos
    .local int rx1577_off
    .local int rx1577_eos
    .local int rx1577_rep
    .local pmc rx1577_cur
    .local pmc rx1577_curclass
    .local pmc rx1577_bstack
    .local pmc rx1577_cstack
    rx1577_start = self."!cursor_start_all"()
    set rx1577_cur, rx1577_start[0]
    set rx1577_tgt, rx1577_start[1]
    set rx1577_pos, rx1577_start[2]
    set rx1577_curclass, rx1577_start[3]
    set rx1577_bstack, rx1577_start[4]
    set $I19, rx1577_start[5]
    store_lex unicode:"$\x{a2}", rx1577_cur
    length rx1577_eos, rx1577_tgt
    eq $I19, 1, rx1577_restart3648
    gt rx1577_pos, rx1577_eos, rx1577_fail3649
    repr_get_attr_int $I11, self, rx1577_curclass, "$!from"
    ne $I11, -1, rxscan1578_done3655
    goto rxscan1578_scan3654
  rxscan1578_loop3653:
    inc rx1577_pos
    gt rx1577_pos, rx1577_eos, rx1577_fail3649
    repr_bind_attr_int rx1577_cur, rx1577_curclass, "$!from", rx1577_pos
  rxscan1578_scan3654:
    nqp_rxmark rx1577_bstack, rxscan1578_loop3653, rx1577_pos, 0
  rxscan1578_done3655:
    nqp_rxmark rx1577_bstack, rxcap1579_fail3657, rx1577_pos, 0
    add $I11, rx1577_pos, 1
    gt $I11, rx1577_eos, rx1577_fail3649
    substr $S10, rx1577_tgt, rx1577_pos, 1
    ne $S10, ucs4:"=", rx1577_fail3649
    add rx1577_pos, 1
    nqp_rxpeek $I19, rx1577_bstack, rxcap1579_fail3657
    inc $I19
    set $I11, rx1577_bstack[$I19]
    repr_bind_attr_int rx1577_cur, rx1577_curclass, "$!pos", rx1577_pos
    $P11 = rx1577_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1577_pos)
    rx1577_cstack = rx1577_cur."!cursor_capture"($P11, "sym")
    goto rxcap1579_done3656
  rxcap1579_fail3657:
    goto rx1577_fail3649
  rxcap1579_done3656:
    repr_bind_attr_int rx1577_cur, rx1577_curclass, "$!pos", rx1577_pos
    $P11 = rx1577_cur."panic"("Assignment (\"=\") not supported in NQP, use \":=\" instead")
    repr_get_attr_int $I11, $P11, rx1577_curclass, "$!pos"
    lt $I11, 0, rx1577_fail3649
    repr_get_attr_int rx1577_pos, $P11, rx1577_curclass, "$!pos"
    rx1577_cur."!cursor_pass"(rx1577_pos, "infix:sym<=>", 'backtrack'=>1)
    .return (rx1577_cur)
  rx1577_restart3648:
    repr_get_attr_obj rx1577_cstack, rx1577_cur, rx1577_curclass, "$!cstack"
  rx1577_fail3649:
    unless rx1577_bstack, rx1577_done3647
    pop $I19, rx1577_bstack
    if_null rx1577_cstack, rx1577_cstack_done3652
    unless rx1577_cstack, rx1577_cstack_done3652
    dec $I19
    set $P11, rx1577_cstack[$I19]
  rx1577_cstack_done3652:
    pop rx1577_rep, rx1577_bstack
    pop rx1577_pos, rx1577_bstack
    pop $I19, rx1577_bstack
    lt rx1577_pos, -1, rx1577_done3647
    lt rx1577_pos, 0, rx1577_fail3649
    eq $I19, 0, rx1577_fail3649
    nqp_islist $I20, rx1577_cstack
    unless $I20, rx1577_jump3650
    elements $I18, rx1577_bstack
    le $I18, 0, rx1577_cut3651
    dec $I18
    set $I18, rx1577_bstack[$I18]
  rx1577_cut3651:
    assign rx1577_cstack, $I18
  rx1577_jump3650:
    jump $I19
  rx1577_done3647:
    rx1577_cur."!cursor_fail"()
    .return (rx1577_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<:=>" :subid("cuid_216_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1396
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1581_start
    .local string rx1581_tgt
    .local int rx1581_pos
    .local int rx1581_off
    .local int rx1581_eos
    .local int rx1581_rep
    .local pmc rx1581_cur
    .local pmc rx1581_curclass
    .local pmc rx1581_bstack
    .local pmc rx1581_cstack
    rx1581_start = self."!cursor_start_all"()
    set rx1581_cur, rx1581_start[0]
    set rx1581_tgt, rx1581_start[1]
    set rx1581_pos, rx1581_start[2]
    set rx1581_curclass, rx1581_start[3]
    set rx1581_bstack, rx1581_start[4]
    set $I19, rx1581_start[5]
    store_lex unicode:"$\x{a2}", rx1581_cur
    length rx1581_eos, rx1581_tgt
    eq $I19, 1, rx1581_restart3661
    gt rx1581_pos, rx1581_eos, rx1581_fail3662
    repr_get_attr_int $I11, self, rx1581_curclass, "$!from"
    ne $I11, -1, rxscan1582_done3668
    goto rxscan1582_scan3667
  rxscan1582_loop3666:
    inc rx1581_pos
    gt rx1581_pos, rx1581_eos, rx1581_fail3662
    repr_bind_attr_int rx1581_cur, rx1581_curclass, "$!from", rx1581_pos
  rxscan1582_scan3667:
    nqp_rxmark rx1581_bstack, rxscan1582_loop3666, rx1581_pos, 0
  rxscan1582_done3668:
    nqp_rxmark rx1581_bstack, rxcap1583_fail3670, rx1581_pos, 0
    add $I11, rx1581_pos, 2
    gt $I11, rx1581_eos, rx1581_fail3662
    substr $S10, rx1581_tgt, rx1581_pos, 2
    ne $S10, ucs4:":=", rx1581_fail3662
    add rx1581_pos, 2
    nqp_rxpeek $I19, rx1581_bstack, rxcap1583_fail3670
    inc $I19
    set $I11, rx1581_bstack[$I19]
    repr_bind_attr_int rx1581_cur, rx1581_curclass, "$!pos", rx1581_pos
    $P11 = rx1581_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1581_pos)
    rx1581_cstack = rx1581_cur."!cursor_capture"($P11, "sym")
    goto rxcap1583_done3669
  rxcap1583_fail3670:
    goto rx1581_fail3662
  rxcap1583_done3669:
    repr_bind_attr_int rx1581_cur, rx1581_curclass, "$!pos", rx1581_pos
    $P11 = rx1581_cur."O"("%assignment, :op<bind>")
    repr_get_attr_int $I11, $P11, rx1581_curclass, "$!pos"
    lt $I11, 0, rx1581_fail3662
    nqp_rxmark rx1581_bstack, rxsubrule1584_pass3671, -1, 0
  rxsubrule1584_pass3671:
    rx1581_cstack = rx1581_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1581_pos, $P11, rx1581_curclass, "$!pos"
    rx1581_cur."!cursor_pass"(rx1581_pos, "infix:sym<:=>", 'backtrack'=>1)
    .return (rx1581_cur)
  rx1581_restart3661:
    repr_get_attr_obj rx1581_cstack, rx1581_cur, rx1581_curclass, "$!cstack"
  rx1581_fail3662:
    unless rx1581_bstack, rx1581_done3660
    pop $I19, rx1581_bstack
    if_null rx1581_cstack, rx1581_cstack_done3665
    unless rx1581_cstack, rx1581_cstack_done3665
    dec $I19
    set $P11, rx1581_cstack[$I19]
  rx1581_cstack_done3665:
    pop rx1581_rep, rx1581_bstack
    pop rx1581_pos, rx1581_bstack
    pop $I19, rx1581_bstack
    lt rx1581_pos, -1, rx1581_done3660
    lt rx1581_pos, 0, rx1581_fail3662
    eq $I19, 0, rx1581_fail3662
    nqp_islist $I20, rx1581_cstack
    unless $I20, rx1581_jump3663
    elements $I18, rx1581_bstack
    le $I18, 0, rx1581_cut3664
    dec $I18
    set $I18, rx1581_bstack[$I18]
  rx1581_cut3664:
    assign rx1581_cstack, $I18
  rx1581_jump3663:
    jump $I19
  rx1581_done3660:
    rx1581_cur."!cursor_fail"()
    .return (rx1581_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<::=>" :subid("cuid_217_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1397
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1585_start
    .local string rx1585_tgt
    .local int rx1585_pos
    .local int rx1585_off
    .local int rx1585_eos
    .local int rx1585_rep
    .local pmc rx1585_cur
    .local pmc rx1585_curclass
    .local pmc rx1585_bstack
    .local pmc rx1585_cstack
    rx1585_start = self."!cursor_start_all"()
    set rx1585_cur, rx1585_start[0]
    set rx1585_tgt, rx1585_start[1]
    set rx1585_pos, rx1585_start[2]
    set rx1585_curclass, rx1585_start[3]
    set rx1585_bstack, rx1585_start[4]
    set $I19, rx1585_start[5]
    store_lex unicode:"$\x{a2}", rx1585_cur
    length rx1585_eos, rx1585_tgt
    eq $I19, 1, rx1585_restart3674
    gt rx1585_pos, rx1585_eos, rx1585_fail3675
    repr_get_attr_int $I11, self, rx1585_curclass, "$!from"
    ne $I11, -1, rxscan1586_done3681
    goto rxscan1586_scan3680
  rxscan1586_loop3679:
    inc rx1585_pos
    gt rx1585_pos, rx1585_eos, rx1585_fail3675
    repr_bind_attr_int rx1585_cur, rx1585_curclass, "$!from", rx1585_pos
  rxscan1586_scan3680:
    nqp_rxmark rx1585_bstack, rxscan1586_loop3679, rx1585_pos, 0
  rxscan1586_done3681:
    nqp_rxmark rx1585_bstack, rxcap1587_fail3683, rx1585_pos, 0
    add $I11, rx1585_pos, 3
    gt $I11, rx1585_eos, rx1585_fail3675
    substr $S10, rx1585_tgt, rx1585_pos, 3
    ne $S10, ucs4:"::=", rx1585_fail3675
    add rx1585_pos, 3
    nqp_rxpeek $I19, rx1585_bstack, rxcap1587_fail3683
    inc $I19
    set $I11, rx1585_bstack[$I19]
    repr_bind_attr_int rx1585_cur, rx1585_curclass, "$!pos", rx1585_pos
    $P11 = rx1585_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1585_pos)
    rx1585_cstack = rx1585_cur."!cursor_capture"($P11, "sym")
    goto rxcap1587_done3682
  rxcap1587_fail3683:
    goto rx1585_fail3675
  rxcap1587_done3682:
    repr_bind_attr_int rx1585_cur, rx1585_curclass, "$!pos", rx1585_pos
    $P11 = rx1585_cur."O"("%assignment, :op<bind>")
    repr_get_attr_int $I11, $P11, rx1585_curclass, "$!pos"
    lt $I11, 0, rx1585_fail3675
    nqp_rxmark rx1585_bstack, rxsubrule1588_pass3684, -1, 0
  rxsubrule1588_pass3684:
    rx1585_cstack = rx1585_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1585_pos, $P11, rx1585_curclass, "$!pos"
    rx1585_cur."!cursor_pass"(rx1585_pos, "infix:sym<::=>", 'backtrack'=>1)
    .return (rx1585_cur)
  rx1585_restart3674:
    repr_get_attr_obj rx1585_cstack, rx1585_cur, rx1585_curclass, "$!cstack"
  rx1585_fail3675:
    unless rx1585_bstack, rx1585_done3673
    pop $I19, rx1585_bstack
    if_null rx1585_cstack, rx1585_cstack_done3678
    unless rx1585_cstack, rx1585_cstack_done3678
    dec $I19
    set $P11, rx1585_cstack[$I19]
  rx1585_cstack_done3678:
    pop rx1585_rep, rx1585_bstack
    pop rx1585_pos, rx1585_bstack
    pop $I19, rx1585_bstack
    lt rx1585_pos, -1, rx1585_done3673
    lt rx1585_pos, 0, rx1585_fail3675
    eq $I19, 0, rx1585_fail3675
    nqp_islist $I20, rx1585_cstack
    unless $I20, rx1585_jump3676
    elements $I18, rx1585_bstack
    le $I18, 0, rx1585_cut3677
    dec $I18
    set $I18, rx1585_bstack[$I18]
  rx1585_cut3677:
    assign rx1585_cstack, $I18
  rx1585_jump3676:
    jump $I19
  rx1585_done3673:
    rx1585_cur."!cursor_fail"()
    .return (rx1585_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<,>" :subid("cuid_218_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1399
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1589_start
    .local string rx1589_tgt
    .local int rx1589_pos
    .local int rx1589_off
    .local int rx1589_eos
    .local int rx1589_rep
    .local pmc rx1589_cur
    .local pmc rx1589_curclass
    .local pmc rx1589_bstack
    .local pmc rx1589_cstack
    rx1589_start = self."!cursor_start_all"()
    set rx1589_cur, rx1589_start[0]
    set rx1589_tgt, rx1589_start[1]
    set rx1589_pos, rx1589_start[2]
    set rx1589_curclass, rx1589_start[3]
    set rx1589_bstack, rx1589_start[4]
    set $I19, rx1589_start[5]
    store_lex unicode:"$\x{a2}", rx1589_cur
    length rx1589_eos, rx1589_tgt
    eq $I19, 1, rx1589_restart3687
    gt rx1589_pos, rx1589_eos, rx1589_fail3688
    repr_get_attr_int $I11, self, rx1589_curclass, "$!from"
    ne $I11, -1, rxscan1590_done3694
    goto rxscan1590_scan3693
  rxscan1590_loop3692:
    inc rx1589_pos
    gt rx1589_pos, rx1589_eos, rx1589_fail3688
    repr_bind_attr_int rx1589_cur, rx1589_curclass, "$!from", rx1589_pos
  rxscan1590_scan3693:
    nqp_rxmark rx1589_bstack, rxscan1590_loop3692, rx1589_pos, 0
  rxscan1590_done3694:
    nqp_rxmark rx1589_bstack, rxcap1591_fail3696, rx1589_pos, 0
    add $I11, rx1589_pos, 1
    gt $I11, rx1589_eos, rx1589_fail3688
    substr $S10, rx1589_tgt, rx1589_pos, 1
    ne $S10, ucs4:",", rx1589_fail3688
    add rx1589_pos, 1
    nqp_rxpeek $I19, rx1589_bstack, rxcap1591_fail3696
    inc $I19
    set $I11, rx1589_bstack[$I19]
    repr_bind_attr_int rx1589_cur, rx1589_curclass, "$!pos", rx1589_pos
    $P11 = rx1589_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1589_pos)
    rx1589_cstack = rx1589_cur."!cursor_capture"($P11, "sym")
    goto rxcap1591_done3695
  rxcap1591_fail3696:
    goto rx1589_fail3688
  rxcap1591_done3695:
    repr_bind_attr_int rx1589_cur, rx1589_curclass, "$!pos", rx1589_pos
    $P11 = rx1589_cur."O"("%comma, :op<list>")
    repr_get_attr_int $I11, $P11, rx1589_curclass, "$!pos"
    lt $I11, 0, rx1589_fail3688
    nqp_rxmark rx1589_bstack, rxsubrule1592_pass3697, -1, 0
  rxsubrule1592_pass3697:
    rx1589_cstack = rx1589_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1589_pos, $P11, rx1589_curclass, "$!pos"
    rx1589_cur."!cursor_pass"(rx1589_pos, "infix:sym<,>", 'backtrack'=>1)
    .return (rx1589_cur)
  rx1589_restart3687:
    repr_get_attr_obj rx1589_cstack, rx1589_cur, rx1589_curclass, "$!cstack"
  rx1589_fail3688:
    unless rx1589_bstack, rx1589_done3686
    pop $I19, rx1589_bstack
    if_null rx1589_cstack, rx1589_cstack_done3691
    unless rx1589_cstack, rx1589_cstack_done3691
    dec $I19
    set $P11, rx1589_cstack[$I19]
  rx1589_cstack_done3691:
    pop rx1589_rep, rx1589_bstack
    pop rx1589_pos, rx1589_bstack
    pop $I19, rx1589_bstack
    lt rx1589_pos, -1, rx1589_done3686
    lt rx1589_pos, 0, rx1589_fail3688
    eq $I19, 0, rx1589_fail3688
    nqp_islist $I20, rx1589_cstack
    unless $I20, rx1589_jump3689
    elements $I18, rx1589_bstack
    le $I18, 0, rx1589_cut3690
    dec $I18
    set $I18, rx1589_bstack[$I18]
  rx1589_cut3690:
    assign rx1589_cstack, $I18
  rx1589_jump3689:
    jump $I19
  rx1589_done3686:
    rx1589_cur."!cursor_fail"()
    .return (rx1589_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<return>" :subid("cuid_219_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1401
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_412_1365879995.227' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1593_start
    .local string rx1593_tgt
    .local int rx1593_pos
    .local int rx1593_off
    .local int rx1593_eos
    .local int rx1593_rep
    .local pmc rx1593_cur
    .local pmc rx1593_curclass
    .local pmc rx1593_bstack
    .local pmc rx1593_cstack
    rx1593_start = self."!cursor_start_all"()
    set rx1593_cur, rx1593_start[0]
    set rx1593_tgt, rx1593_start[1]
    set rx1593_pos, rx1593_start[2]
    set rx1593_curclass, rx1593_start[3]
    set rx1593_bstack, rx1593_start[4]
    set $I19, rx1593_start[5]
    store_lex unicode:"$\x{a2}", rx1593_cur
    length rx1593_eos, rx1593_tgt
    eq $I19, 1, rx1593_restart3700
    gt rx1593_pos, rx1593_eos, rx1593_fail3701
    repr_get_attr_int $I11, self, rx1593_curclass, "$!from"
    ne $I11, -1, rxscan1594_done3707
    goto rxscan1594_scan3706
  rxscan1594_loop3705:
    inc rx1593_pos
    gt rx1593_pos, rx1593_eos, rx1593_fail3701
    repr_bind_attr_int rx1593_cur, rx1593_curclass, "$!from", rx1593_pos
  rxscan1594_scan3706:
    nqp_rxmark rx1593_bstack, rxscan1594_loop3705, rx1593_pos, 0
  rxscan1594_done3707:
    nqp_rxmark rx1593_bstack, rxcap1595_fail3709, rx1593_pos, 0
    add $I11, rx1593_pos, 6
    gt $I11, rx1593_eos, rx1593_fail3701
    substr $S10, rx1593_tgt, rx1593_pos, 6
    ne $S10, ucs4:"return", rx1593_fail3701
    add rx1593_pos, 6
    nqp_rxpeek $I19, rx1593_bstack, rxcap1595_fail3709
    inc $I19
    set $I11, rx1593_bstack[$I19]
    repr_bind_attr_int rx1593_cur, rx1593_curclass, "$!pos", rx1593_pos
    $P11 = rx1593_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1593_pos)
    rx1593_cstack = rx1593_cur."!cursor_capture"($P11, "sym")
    goto rxcap1595_done3708
  rxcap1595_fail3709:
    goto rx1593_fail3701
  rxcap1595_done3708:
    ge rx1593_pos, rx1593_eos, rx1593_fail3701
    is_cclass $I11, .CCLASS_WHITESPACE, rx1593_tgt, rx1593_pos
    unless $I11, rx1593_fail3701
    add rx1593_pos, 1
    repr_bind_attr_int rx1593_cur, rx1593_curclass, "$!pos", rx1593_pos
    $P11 = rx1593_cur."O"("%list_prefix")
    repr_get_attr_int $I11, $P11, rx1593_curclass, "$!pos"
    lt $I11, 0, rx1593_fail3701
    nqp_rxmark rx1593_bstack, rxsubrule1596_pass3710, -1, 0
  rxsubrule1596_pass3710:
    rx1593_cstack = rx1593_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1593_pos, $P11, rx1593_curclass, "$!pos"
    repr_bind_attr_int rx1593_cur, rx1593_curclass, "$!pos", rx1593_pos
    store_lex unicode:"$\x{a2}", rx1593_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_412_1365879995.227' 
    capture_lex $P5002
    $P5003 = $P5002()
    rx1593_cur."!cursor_pass"(rx1593_pos, "prefix:sym<return>", 'backtrack'=>1)
    .return (rx1593_cur)
  rx1593_restart3700:
    repr_get_attr_obj rx1593_cstack, rx1593_cur, rx1593_curclass, "$!cstack"
  rx1593_fail3701:
    unless rx1593_bstack, rx1593_done3699
    pop $I19, rx1593_bstack
    if_null rx1593_cstack, rx1593_cstack_done3704
    unless rx1593_cstack, rx1593_cstack_done3704
    dec $I19
    set $P11, rx1593_cstack[$I19]
  rx1593_cstack_done3704:
    pop rx1593_rep, rx1593_bstack
    pop rx1593_pos, rx1593_bstack
    pop $I19, rx1593_bstack
    lt rx1593_pos, -1, rx1593_done3699
    lt rx1593_pos, 0, rx1593_fail3701
    eq $I19, 0, rx1593_fail3701
    nqp_islist $I20, rx1593_cstack
    unless $I20, rx1593_jump3702
    elements $I18, rx1593_bstack
    le $I18, 0, rx1593_cut3703
    dec $I18
    set $I18, rx1593_bstack[$I18]
  rx1593_cut3703:
    assign rx1593_cstack, $I18
  rx1593_jump3702:
    jump $I19
  rx1593_done3699:
    rx1593_cur."!cursor_fail"()
    .return (rx1593_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_412_1365879995.227") :anon :lex :outer("cuid_219_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1401

    box $P5001, 1
    store_dynamic_lex "$*RETURN_USED", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<make>" :subid("cuid_220_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1402
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1597_start
    .local string rx1597_tgt
    .local int rx1597_pos
    .local int rx1597_off
    .local int rx1597_eos
    .local int rx1597_rep
    .local pmc rx1597_cur
    .local pmc rx1597_curclass
    .local pmc rx1597_bstack
    .local pmc rx1597_cstack
    rx1597_start = self."!cursor_start_all"()
    set rx1597_cur, rx1597_start[0]
    set rx1597_tgt, rx1597_start[1]
    set rx1597_pos, rx1597_start[2]
    set rx1597_curclass, rx1597_start[3]
    set rx1597_bstack, rx1597_start[4]
    set $I19, rx1597_start[5]
    store_lex unicode:"$\x{a2}", rx1597_cur
    length rx1597_eos, rx1597_tgt
    eq $I19, 1, rx1597_restart3713
    gt rx1597_pos, rx1597_eos, rx1597_fail3714
    repr_get_attr_int $I11, self, rx1597_curclass, "$!from"
    ne $I11, -1, rxscan1598_done3720
    goto rxscan1598_scan3719
  rxscan1598_loop3718:
    inc rx1597_pos
    gt rx1597_pos, rx1597_eos, rx1597_fail3714
    repr_bind_attr_int rx1597_cur, rx1597_curclass, "$!from", rx1597_pos
  rxscan1598_scan3719:
    nqp_rxmark rx1597_bstack, rxscan1598_loop3718, rx1597_pos, 0
  rxscan1598_done3720:
    nqp_rxmark rx1597_bstack, rxcap1599_fail3722, rx1597_pos, 0
    add $I11, rx1597_pos, 4
    gt $I11, rx1597_eos, rx1597_fail3714
    substr $S10, rx1597_tgt, rx1597_pos, 4
    ne $S10, ucs4:"make", rx1597_fail3714
    add rx1597_pos, 4
    nqp_rxpeek $I19, rx1597_bstack, rxcap1599_fail3722
    inc $I19
    set $I11, rx1597_bstack[$I19]
    repr_bind_attr_int rx1597_cur, rx1597_curclass, "$!pos", rx1597_pos
    $P11 = rx1597_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1597_pos)
    rx1597_cstack = rx1597_cur."!cursor_capture"($P11, "sym")
    goto rxcap1599_done3721
  rxcap1599_fail3722:
    goto rx1597_fail3714
  rxcap1599_done3721:
    ge rx1597_pos, rx1597_eos, rx1597_fail3714
    is_cclass $I11, .CCLASS_WHITESPACE, rx1597_tgt, rx1597_pos
    unless $I11, rx1597_fail3714
    add rx1597_pos, 1
    repr_bind_attr_int rx1597_cur, rx1597_curclass, "$!pos", rx1597_pos
    $P11 = rx1597_cur."O"("%list_prefix")
    repr_get_attr_int $I11, $P11, rx1597_curclass, "$!pos"
    lt $I11, 0, rx1597_fail3714
    nqp_rxmark rx1597_bstack, rxsubrule1600_pass3723, -1, 0
  rxsubrule1600_pass3723:
    rx1597_cstack = rx1597_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1597_pos, $P11, rx1597_curclass, "$!pos"
    rx1597_cur."!cursor_pass"(rx1597_pos, "prefix:sym<make>", 'backtrack'=>1)
    .return (rx1597_cur)
  rx1597_restart3713:
    repr_get_attr_obj rx1597_cstack, rx1597_cur, rx1597_curclass, "$!cstack"
  rx1597_fail3714:
    unless rx1597_bstack, rx1597_done3712
    pop $I19, rx1597_bstack
    if_null rx1597_cstack, rx1597_cstack_done3717
    unless rx1597_cstack, rx1597_cstack_done3717
    dec $I19
    set $P11, rx1597_cstack[$I19]
  rx1597_cstack_done3717:
    pop rx1597_rep, rx1597_bstack
    pop rx1597_pos, rx1597_bstack
    pop $I19, rx1597_bstack
    lt rx1597_pos, -1, rx1597_done3712
    lt rx1597_pos, 0, rx1597_fail3714
    eq $I19, 0, rx1597_fail3714
    nqp_islist $I20, rx1597_cstack
    unless $I20, rx1597_jump3715
    elements $I18, rx1597_bstack
    le $I18, 0, rx1597_cut3716
    dec $I18
    set $I18, rx1597_bstack[$I18]
  rx1597_cut3716:
    assign rx1597_cstack, $I18
  rx1597_jump3715:
    jump $I19
  rx1597_done3712:
    rx1597_cur."!cursor_fail"()
    .return (rx1597_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<last>" :subid("cuid_221_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1403
    .param pmc _lex_param_0 
    .const 'Sub' $P5005 = 'cuid_222_1365879995.227' 
    capture_lex $P5005 
    .const 'Sub' $P5005 = 'cuid_413_1365879995.227' 
    capture_lex $P5005 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1601_start
    .local string rx1601_tgt
    .local int rx1601_pos
    .local int rx1601_off
    .local int rx1601_eos
    .local int rx1601_rep
    .local pmc rx1601_cur
    .local pmc rx1601_curclass
    .local pmc rx1601_bstack
    .local pmc rx1601_cstack
    rx1601_start = self."!cursor_start_all"()
    set rx1601_cur, rx1601_start[0]
    set rx1601_tgt, rx1601_start[1]
    set rx1601_pos, rx1601_start[2]
    set rx1601_curclass, rx1601_start[3]
    set rx1601_bstack, rx1601_start[4]
    set $I19, rx1601_start[5]
    store_lex unicode:"$\x{a2}", rx1601_cur
    length rx1601_eos, rx1601_tgt
    eq $I19, 1, rx1601_restart3726
    gt rx1601_pos, rx1601_eos, rx1601_fail3727
    repr_get_attr_int $I11, self, rx1601_curclass, "$!from"
    ne $I11, -1, rxscan1602_done3733
    goto rxscan1602_scan3732
  rxscan1602_loop3731:
    inc rx1601_pos
    gt rx1601_pos, rx1601_eos, rx1601_fail3727
    repr_bind_attr_int rx1601_cur, rx1601_curclass, "$!from", rx1601_pos
  rxscan1602_scan3732:
    nqp_rxmark rx1601_bstack, rxscan1602_loop3731, rx1601_pos, 0
  rxscan1602_done3733:
    nqp_rxmark rx1601_bstack, rxcap1603_fail3735, rx1601_pos, 0
    add $I11, rx1601_pos, 4
    gt $I11, rx1601_eos, rx1601_fail3727
    substr $S10, rx1601_tgt, rx1601_pos, 4
    ne $S10, ucs4:"last", rx1601_fail3727
    add rx1601_pos, 4
    nqp_rxpeek $I19, rx1601_bstack, rxcap1603_fail3735
    inc $I19
    set $I11, rx1601_bstack[$I19]
    repr_bind_attr_int rx1601_cur, rx1601_curclass, "$!pos", rx1601_pos
    $P11 = rx1601_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1601_pos)
    rx1601_cstack = rx1601_cur."!cursor_capture"($P11, "sym")
    goto rxcap1603_done3734
  rxcap1603_fail3735:
    goto rx1601_fail3727
  rxcap1603_done3734:
    .const 'Sub' $P5001 = 'cuid_222_1365879995.227' 
    capture_lex $P5001
    repr_bind_attr_int rx1601_cur, rx1601_curclass, "$!pos", rx1601_pos
    $P11 = rx1601_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1601_curclass, "$!pos"
    ge $I11, 0, rx1601_fail3727
    repr_bind_attr_int rx1601_cur, rx1601_curclass, "$!pos", rx1601_pos
    store_lex unicode:"$\x{a2}", rx1601_cur
    $P5002 = $P101."MATCH"()
    set $P102, $P5002
    .const 'Sub' $P5003 = 'cuid_413_1365879995.227' 
    capture_lex $P5003
    $P5004 = $P5003()
    rx1601_cur."!cursor_pass"(rx1601_pos, "term:sym<last>", 'backtrack'=>1)
    .return (rx1601_cur)
  rx1601_restart3726:
    repr_get_attr_obj rx1601_cstack, rx1601_cur, rx1601_curclass, "$!cstack"
  rx1601_fail3727:
    unless rx1601_bstack, rx1601_done3725
    pop $I19, rx1601_bstack
    if_null rx1601_cstack, rx1601_cstack_done3730
    unless rx1601_cstack, rx1601_cstack_done3730
    dec $I19
    set $P11, rx1601_cstack[$I19]
  rx1601_cstack_done3730:
    pop rx1601_rep, rx1601_bstack
    pop rx1601_pos, rx1601_bstack
    pop $I19, rx1601_bstack
    lt rx1601_pos, -1, rx1601_done3725
    lt rx1601_pos, 0, rx1601_fail3727
    eq $I19, 0, rx1601_fail3727
    nqp_islist $I20, rx1601_cstack
    unless $I20, rx1601_jump3728
    elements $I18, rx1601_bstack
    le $I18, 0, rx1601_cut3729
    dec $I18
    set $I18, rx1601_bstack[$I18]
  rx1601_cut3729:
    assign rx1601_cstack, $I18
  rx1601_jump3728:
    jump $I19
  rx1601_done3725:
    rx1601_cur."!cursor_fail"()
    .return (rx1601_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_222_1365879995.227") :anon :lex :outer("cuid_221_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1604_start
    .local string rx1604_tgt
    .local int rx1604_pos
    .local int rx1604_off
    .local int rx1604_eos
    .local int rx1604_rep
    .local pmc rx1604_cur
    .local pmc rx1604_curclass
    .local pmc rx1604_bstack
    .local pmc rx1604_cstack
    rx1604_start = self."!cursor_start_all"()
    set rx1604_cur, rx1604_start[0]
    set rx1604_tgt, rx1604_start[1]
    set rx1604_pos, rx1604_start[2]
    set rx1604_curclass, rx1604_start[3]
    set rx1604_bstack, rx1604_start[4]
    set $I19, rx1604_start[5]
    store_lex unicode:"$\x{a2}", rx1604_cur
    length rx1604_eos, rx1604_tgt
    eq $I19, 1, rx1604_restart3738
    gt rx1604_pos, rx1604_eos, rx1604_fail3739
    repr_get_attr_int $I11, self, rx1604_curclass, "$!from"
    ne $I11, -1, rxscan1605_done3745
    goto rxscan1605_scan3744
  rxscan1605_loop3743:
    inc rx1604_pos
    gt rx1604_pos, rx1604_eos, rx1604_fail3739
    repr_bind_attr_int rx1604_cur, rx1604_curclass, "$!from", rx1604_pos
  rxscan1605_scan3744:
    nqp_rxmark rx1604_bstack, rxscan1605_loop3743, rx1604_pos, 0
  rxscan1605_done3745:
    repr_bind_attr_int rx1604_cur, rx1604_curclass, "$!pos", rx1604_pos
    $P11 = rx1604_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx1604_curclass, "$!pos"
    lt $I11, 0, rx1604_fail3739
    nqp_rxmark rx1604_bstack, rxsubrule1606_pass3746, -1, 0
  rxsubrule1606_pass3746:
    rx1604_cstack = rx1604_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx1604_pos, $P11, rx1604_curclass, "$!pos"
    rx1604_cur."!cursor_pass"(rx1604_pos, 'backtrack'=>1)
    .return (rx1604_cur)
  rx1604_restart3738:
    repr_get_attr_obj rx1604_cstack, rx1604_cur, rx1604_curclass, "$!cstack"
  rx1604_fail3739:
    unless rx1604_bstack, rx1604_done3737
    pop $I19, rx1604_bstack
    if_null rx1604_cstack, rx1604_cstack_done3742
    unless rx1604_cstack, rx1604_cstack_done3742
    dec $I19
    set $P11, rx1604_cstack[$I19]
  rx1604_cstack_done3742:
    pop rx1604_rep, rx1604_bstack
    pop rx1604_pos, rx1604_bstack
    pop $I19, rx1604_bstack
    lt rx1604_pos, -1, rx1604_done3737
    lt rx1604_pos, 0, rx1604_fail3739
    eq $I19, 0, rx1604_fail3739
    nqp_islist $I20, rx1604_cstack
    unless $I20, rx1604_jump3740
    elements $I18, rx1604_bstack
    le $I18, 0, rx1604_cut3741
    dec $I18
    set $I18, rx1604_bstack[$I18]
  rx1604_cut3741:
    assign rx1604_cstack, $I18
  rx1604_jump3740:
    jump $I19
  rx1604_done3737:
    rx1604_cur."!cursor_fail"()
    .return (rx1604_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_413_1365879995.227") :anon :lex :outer("cuid_221_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1403

    box $P5001, 1
    store_dynamic_lex "$*CONTROL_USED", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<next>" :subid("cuid_223_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1404
    .param pmc _lex_param_0 
    .const 'Sub' $P5005 = 'cuid_224_1365879995.227' 
    capture_lex $P5005 
    .const 'Sub' $P5005 = 'cuid_414_1365879995.227' 
    capture_lex $P5005 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1607_start
    .local string rx1607_tgt
    .local int rx1607_pos
    .local int rx1607_off
    .local int rx1607_eos
    .local int rx1607_rep
    .local pmc rx1607_cur
    .local pmc rx1607_curclass
    .local pmc rx1607_bstack
    .local pmc rx1607_cstack
    rx1607_start = self."!cursor_start_all"()
    set rx1607_cur, rx1607_start[0]
    set rx1607_tgt, rx1607_start[1]
    set rx1607_pos, rx1607_start[2]
    set rx1607_curclass, rx1607_start[3]
    set rx1607_bstack, rx1607_start[4]
    set $I19, rx1607_start[5]
    store_lex unicode:"$\x{a2}", rx1607_cur
    length rx1607_eos, rx1607_tgt
    eq $I19, 1, rx1607_restart3749
    gt rx1607_pos, rx1607_eos, rx1607_fail3750
    repr_get_attr_int $I11, self, rx1607_curclass, "$!from"
    ne $I11, -1, rxscan1608_done3756
    goto rxscan1608_scan3755
  rxscan1608_loop3754:
    inc rx1607_pos
    gt rx1607_pos, rx1607_eos, rx1607_fail3750
    repr_bind_attr_int rx1607_cur, rx1607_curclass, "$!from", rx1607_pos
  rxscan1608_scan3755:
    nqp_rxmark rx1607_bstack, rxscan1608_loop3754, rx1607_pos, 0
  rxscan1608_done3756:
    nqp_rxmark rx1607_bstack, rxcap1609_fail3758, rx1607_pos, 0
    add $I11, rx1607_pos, 4
    gt $I11, rx1607_eos, rx1607_fail3750
    substr $S10, rx1607_tgt, rx1607_pos, 4
    ne $S10, ucs4:"next", rx1607_fail3750
    add rx1607_pos, 4
    nqp_rxpeek $I19, rx1607_bstack, rxcap1609_fail3758
    inc $I19
    set $I11, rx1607_bstack[$I19]
    repr_bind_attr_int rx1607_cur, rx1607_curclass, "$!pos", rx1607_pos
    $P11 = rx1607_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1607_pos)
    rx1607_cstack = rx1607_cur."!cursor_capture"($P11, "sym")
    goto rxcap1609_done3757
  rxcap1609_fail3758:
    goto rx1607_fail3750
  rxcap1609_done3757:
    .const 'Sub' $P5001 = 'cuid_224_1365879995.227' 
    capture_lex $P5001
    repr_bind_attr_int rx1607_cur, rx1607_curclass, "$!pos", rx1607_pos
    $P11 = rx1607_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1607_curclass, "$!pos"
    ge $I11, 0, rx1607_fail3750
    repr_bind_attr_int rx1607_cur, rx1607_curclass, "$!pos", rx1607_pos
    store_lex unicode:"$\x{a2}", rx1607_cur
    $P5002 = $P101."MATCH"()
    set $P102, $P5002
    .const 'Sub' $P5003 = 'cuid_414_1365879995.227' 
    capture_lex $P5003
    $P5004 = $P5003()
    rx1607_cur."!cursor_pass"(rx1607_pos, "term:sym<next>", 'backtrack'=>1)
    .return (rx1607_cur)
  rx1607_restart3749:
    repr_get_attr_obj rx1607_cstack, rx1607_cur, rx1607_curclass, "$!cstack"
  rx1607_fail3750:
    unless rx1607_bstack, rx1607_done3748
    pop $I19, rx1607_bstack
    if_null rx1607_cstack, rx1607_cstack_done3753
    unless rx1607_cstack, rx1607_cstack_done3753
    dec $I19
    set $P11, rx1607_cstack[$I19]
  rx1607_cstack_done3753:
    pop rx1607_rep, rx1607_bstack
    pop rx1607_pos, rx1607_bstack
    pop $I19, rx1607_bstack
    lt rx1607_pos, -1, rx1607_done3748
    lt rx1607_pos, 0, rx1607_fail3750
    eq $I19, 0, rx1607_fail3750
    nqp_islist $I20, rx1607_cstack
    unless $I20, rx1607_jump3751
    elements $I18, rx1607_bstack
    le $I18, 0, rx1607_cut3752
    dec $I18
    set $I18, rx1607_bstack[$I18]
  rx1607_cut3752:
    assign rx1607_cstack, $I18
  rx1607_jump3751:
    jump $I19
  rx1607_done3748:
    rx1607_cur."!cursor_fail"()
    .return (rx1607_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_224_1365879995.227") :anon :lex :outer("cuid_223_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1610_start
    .local string rx1610_tgt
    .local int rx1610_pos
    .local int rx1610_off
    .local int rx1610_eos
    .local int rx1610_rep
    .local pmc rx1610_cur
    .local pmc rx1610_curclass
    .local pmc rx1610_bstack
    .local pmc rx1610_cstack
    rx1610_start = self."!cursor_start_all"()
    set rx1610_cur, rx1610_start[0]
    set rx1610_tgt, rx1610_start[1]
    set rx1610_pos, rx1610_start[2]
    set rx1610_curclass, rx1610_start[3]
    set rx1610_bstack, rx1610_start[4]
    set $I19, rx1610_start[5]
    store_lex unicode:"$\x{a2}", rx1610_cur
    length rx1610_eos, rx1610_tgt
    eq $I19, 1, rx1610_restart3761
    gt rx1610_pos, rx1610_eos, rx1610_fail3762
    repr_get_attr_int $I11, self, rx1610_curclass, "$!from"
    ne $I11, -1, rxscan1611_done3768
    goto rxscan1611_scan3767
  rxscan1611_loop3766:
    inc rx1610_pos
    gt rx1610_pos, rx1610_eos, rx1610_fail3762
    repr_bind_attr_int rx1610_cur, rx1610_curclass, "$!from", rx1610_pos
  rxscan1611_scan3767:
    nqp_rxmark rx1610_bstack, rxscan1611_loop3766, rx1610_pos, 0
  rxscan1611_done3768:
    repr_bind_attr_int rx1610_cur, rx1610_curclass, "$!pos", rx1610_pos
    $P11 = rx1610_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx1610_curclass, "$!pos"
    lt $I11, 0, rx1610_fail3762
    nqp_rxmark rx1610_bstack, rxsubrule1612_pass3769, -1, 0
  rxsubrule1612_pass3769:
    rx1610_cstack = rx1610_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx1610_pos, $P11, rx1610_curclass, "$!pos"
    rx1610_cur."!cursor_pass"(rx1610_pos, 'backtrack'=>1)
    .return (rx1610_cur)
  rx1610_restart3761:
    repr_get_attr_obj rx1610_cstack, rx1610_cur, rx1610_curclass, "$!cstack"
  rx1610_fail3762:
    unless rx1610_bstack, rx1610_done3760
    pop $I19, rx1610_bstack
    if_null rx1610_cstack, rx1610_cstack_done3765
    unless rx1610_cstack, rx1610_cstack_done3765
    dec $I19
    set $P11, rx1610_cstack[$I19]
  rx1610_cstack_done3765:
    pop rx1610_rep, rx1610_bstack
    pop rx1610_pos, rx1610_bstack
    pop $I19, rx1610_bstack
    lt rx1610_pos, -1, rx1610_done3760
    lt rx1610_pos, 0, rx1610_fail3762
    eq $I19, 0, rx1610_fail3762
    nqp_islist $I20, rx1610_cstack
    unless $I20, rx1610_jump3763
    elements $I18, rx1610_bstack
    le $I18, 0, rx1610_cut3764
    dec $I18
    set $I18, rx1610_bstack[$I18]
  rx1610_cut3764:
    assign rx1610_cstack, $I18
  rx1610_jump3763:
    jump $I19
  rx1610_done3760:
    rx1610_cur."!cursor_fail"()
    .return (rx1610_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_414_1365879995.227") :anon :lex :outer("cuid_223_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1404

    box $P5001, 1
    store_dynamic_lex "$*CONTROL_USED", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<redo>" :subid("cuid_225_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1405
    .param pmc _lex_param_0 
    .const 'Sub' $P5005 = 'cuid_226_1365879995.227' 
    capture_lex $P5005 
    .const 'Sub' $P5005 = 'cuid_415_1365879995.227' 
    capture_lex $P5005 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1613_start
    .local string rx1613_tgt
    .local int rx1613_pos
    .local int rx1613_off
    .local int rx1613_eos
    .local int rx1613_rep
    .local pmc rx1613_cur
    .local pmc rx1613_curclass
    .local pmc rx1613_bstack
    .local pmc rx1613_cstack
    rx1613_start = self."!cursor_start_all"()
    set rx1613_cur, rx1613_start[0]
    set rx1613_tgt, rx1613_start[1]
    set rx1613_pos, rx1613_start[2]
    set rx1613_curclass, rx1613_start[3]
    set rx1613_bstack, rx1613_start[4]
    set $I19, rx1613_start[5]
    store_lex unicode:"$\x{a2}", rx1613_cur
    length rx1613_eos, rx1613_tgt
    eq $I19, 1, rx1613_restart3772
    gt rx1613_pos, rx1613_eos, rx1613_fail3773
    repr_get_attr_int $I11, self, rx1613_curclass, "$!from"
    ne $I11, -1, rxscan1614_done3779
    goto rxscan1614_scan3778
  rxscan1614_loop3777:
    inc rx1613_pos
    gt rx1613_pos, rx1613_eos, rx1613_fail3773
    repr_bind_attr_int rx1613_cur, rx1613_curclass, "$!from", rx1613_pos
  rxscan1614_scan3778:
    nqp_rxmark rx1613_bstack, rxscan1614_loop3777, rx1613_pos, 0
  rxscan1614_done3779:
    nqp_rxmark rx1613_bstack, rxcap1615_fail3781, rx1613_pos, 0
    add $I11, rx1613_pos, 4
    gt $I11, rx1613_eos, rx1613_fail3773
    substr $S10, rx1613_tgt, rx1613_pos, 4
    ne $S10, ucs4:"redo", rx1613_fail3773
    add rx1613_pos, 4
    nqp_rxpeek $I19, rx1613_bstack, rxcap1615_fail3781
    inc $I19
    set $I11, rx1613_bstack[$I19]
    repr_bind_attr_int rx1613_cur, rx1613_curclass, "$!pos", rx1613_pos
    $P11 = rx1613_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1613_pos)
    rx1613_cstack = rx1613_cur."!cursor_capture"($P11, "sym")
    goto rxcap1615_done3780
  rxcap1615_fail3781:
    goto rx1613_fail3773
  rxcap1615_done3780:
    .const 'Sub' $P5001 = 'cuid_226_1365879995.227' 
    capture_lex $P5001
    repr_bind_attr_int rx1613_cur, rx1613_curclass, "$!pos", rx1613_pos
    $P11 = rx1613_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1613_curclass, "$!pos"
    ge $I11, 0, rx1613_fail3773
    repr_bind_attr_int rx1613_cur, rx1613_curclass, "$!pos", rx1613_pos
    store_lex unicode:"$\x{a2}", rx1613_cur
    $P5002 = $P101."MATCH"()
    set $P102, $P5002
    .const 'Sub' $P5003 = 'cuid_415_1365879995.227' 
    capture_lex $P5003
    $P5004 = $P5003()
    rx1613_cur."!cursor_pass"(rx1613_pos, "term:sym<redo>", 'backtrack'=>1)
    .return (rx1613_cur)
  rx1613_restart3772:
    repr_get_attr_obj rx1613_cstack, rx1613_cur, rx1613_curclass, "$!cstack"
  rx1613_fail3773:
    unless rx1613_bstack, rx1613_done3771
    pop $I19, rx1613_bstack
    if_null rx1613_cstack, rx1613_cstack_done3776
    unless rx1613_cstack, rx1613_cstack_done3776
    dec $I19
    set $P11, rx1613_cstack[$I19]
  rx1613_cstack_done3776:
    pop rx1613_rep, rx1613_bstack
    pop rx1613_pos, rx1613_bstack
    pop $I19, rx1613_bstack
    lt rx1613_pos, -1, rx1613_done3771
    lt rx1613_pos, 0, rx1613_fail3773
    eq $I19, 0, rx1613_fail3773
    nqp_islist $I20, rx1613_cstack
    unless $I20, rx1613_jump3774
    elements $I18, rx1613_bstack
    le $I18, 0, rx1613_cut3775
    dec $I18
    set $I18, rx1613_bstack[$I18]
  rx1613_cut3775:
    assign rx1613_cstack, $I18
  rx1613_jump3774:
    jump $I19
  rx1613_done3771:
    rx1613_cur."!cursor_fail"()
    .return (rx1613_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_226_1365879995.227") :anon :lex :outer("cuid_225_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1616_start
    .local string rx1616_tgt
    .local int rx1616_pos
    .local int rx1616_off
    .local int rx1616_eos
    .local int rx1616_rep
    .local pmc rx1616_cur
    .local pmc rx1616_curclass
    .local pmc rx1616_bstack
    .local pmc rx1616_cstack
    rx1616_start = self."!cursor_start_all"()
    set rx1616_cur, rx1616_start[0]
    set rx1616_tgt, rx1616_start[1]
    set rx1616_pos, rx1616_start[2]
    set rx1616_curclass, rx1616_start[3]
    set rx1616_bstack, rx1616_start[4]
    set $I19, rx1616_start[5]
    store_lex unicode:"$\x{a2}", rx1616_cur
    length rx1616_eos, rx1616_tgt
    eq $I19, 1, rx1616_restart3784
    gt rx1616_pos, rx1616_eos, rx1616_fail3785
    repr_get_attr_int $I11, self, rx1616_curclass, "$!from"
    ne $I11, -1, rxscan1617_done3791
    goto rxscan1617_scan3790
  rxscan1617_loop3789:
    inc rx1616_pos
    gt rx1616_pos, rx1616_eos, rx1616_fail3785
    repr_bind_attr_int rx1616_cur, rx1616_curclass, "$!from", rx1616_pos
  rxscan1617_scan3790:
    nqp_rxmark rx1616_bstack, rxscan1617_loop3789, rx1616_pos, 0
  rxscan1617_done3791:
    repr_bind_attr_int rx1616_cur, rx1616_curclass, "$!pos", rx1616_pos
    $P11 = rx1616_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx1616_curclass, "$!pos"
    lt $I11, 0, rx1616_fail3785
    nqp_rxmark rx1616_bstack, rxsubrule1618_pass3792, -1, 0
  rxsubrule1618_pass3792:
    rx1616_cstack = rx1616_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx1616_pos, $P11, rx1616_curclass, "$!pos"
    rx1616_cur."!cursor_pass"(rx1616_pos, 'backtrack'=>1)
    .return (rx1616_cur)
  rx1616_restart3784:
    repr_get_attr_obj rx1616_cstack, rx1616_cur, rx1616_curclass, "$!cstack"
  rx1616_fail3785:
    unless rx1616_bstack, rx1616_done3783
    pop $I19, rx1616_bstack
    if_null rx1616_cstack, rx1616_cstack_done3788
    unless rx1616_cstack, rx1616_cstack_done3788
    dec $I19
    set $P11, rx1616_cstack[$I19]
  rx1616_cstack_done3788:
    pop rx1616_rep, rx1616_bstack
    pop rx1616_pos, rx1616_bstack
    pop $I19, rx1616_bstack
    lt rx1616_pos, -1, rx1616_done3783
    lt rx1616_pos, 0, rx1616_fail3785
    eq $I19, 0, rx1616_fail3785
    nqp_islist $I20, rx1616_cstack
    unless $I20, rx1616_jump3786
    elements $I18, rx1616_bstack
    le $I18, 0, rx1616_cut3787
    dec $I18
    set $I18, rx1616_bstack[$I18]
  rx1616_cut3787:
    assign rx1616_cstack, $I18
  rx1616_jump3786:
    jump $I19
  rx1616_done3783:
    rx1616_cur."!cursor_fail"()
    .return (rx1616_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_415_1365879995.227") :anon :lex :outer("cuid_225_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1405

    box $P5001, 1
    store_dynamic_lex "$*CONTROL_USED", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "smartmatch" :subid("cuid_227_1365879995.227") :anon :lex :outer("cuid_397_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1407
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$t", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_164 
    .local pmc fb_tmp_165 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    set fb_tmp_164, _lex_param_1
    repr_defined $I5001, fb_tmp_164
    unless $I5001 goto if1619_else3793 
    set $P5002, fb_tmp_164[0]
    set $P5004, $P5002
    goto if1619_end3794
  if1619_else3793:
    null $P5003
    set $P5004, $P5003
  if1619_end3794:
    unless_null $P5004, vivi_16203795
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_16203795:
    set $P101, $P5004
    set fb_tmp_165, _lex_param_1
    repr_defined $I5002, fb_tmp_165
    unless $I5002 goto if1621_else3796 
    set $P5006, fb_tmp_165[1]
    set $P5008, $P5006
    goto if1621_end3797
  if1621_else3796:
    null $P5007
    set $P5008, $P5007
  if1621_end3797:
    unless_null $P5008, vivi_16223798
    nqp_get_sc_object $P5009, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5008, $P5009
  vivi_16223798:
    set _lex_param_1[0], $P5008
    set _lex_param_1[1], $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_416_1365879995.227") :anon :lex :outer("cuid_374_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1413
    .const 'Sub' $P5013 = 'cuid_228_1365879995.227' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_229_1365879995.227' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_231_1365879995.227' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_232_1365879995.227' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_234_1365879995.227' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_235_1365879995.227' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_238_1365879995.227' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_241_1365879995.227' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_243_1365879995.227' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_245_1365879995.227' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_246_1365879995.227' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_247_1365879995.227' 
    capture_lex $P5013 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .const 'Sub' $P5001 = 'cuid_228_1365879995.227' 
    capture_lex $P5001
    .const 'Sub' $P5002 = 'cuid_229_1365879995.227' 
    capture_lex $P5002
    .const 'Sub' $P5003 = 'cuid_231_1365879995.227' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_232_1365879995.227' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_234_1365879995.227' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_235_1365879995.227' 
    capture_lex $P5006
    .const 'Sub' $P5007 = 'cuid_238_1365879995.227' 
    capture_lex $P5007
    .const 'Sub' $P5008 = 'cuid_241_1365879995.227' 
    capture_lex $P5008
    .const 'Sub' $P5009 = 'cuid_243_1365879995.227' 
    capture_lex $P5009
    .const 'Sub' $P5010 = 'cuid_245_1365879995.227' 
    capture_lex $P5010
    .const 'Sub' $P5011 = 'cuid_246_1365879995.227' 
    capture_lex $P5011
    .const 'Sub' $P5012 = 'cuid_247_1365879995.227' 
    capture_lex $P5012
    .return ($P5012) 
.end
.HLL "nqp"
.namespace []
.sub "rxstopper" :subid("cuid_228_1365879995.227") :anon :lex :outer("cuid_416_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1414
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1623_start
    .local string rx1623_tgt
    .local int rx1623_pos
    .local int rx1623_off
    .local int rx1623_eos
    .local int rx1623_rep
    .local pmc rx1623_cur
    .local pmc rx1623_curclass
    .local pmc rx1623_bstack
    .local pmc rx1623_cstack
    rx1623_start = self."!cursor_start_all"()
    set rx1623_cur, rx1623_start[0]
    set rx1623_tgt, rx1623_start[1]
    set rx1623_pos, rx1623_start[2]
    set rx1623_curclass, rx1623_start[3]
    set rx1623_bstack, rx1623_start[4]
    set $I19, rx1623_start[5]
    store_lex unicode:"$\x{a2}", rx1623_cur
    length rx1623_eos, rx1623_tgt
    eq $I19, 1, rx1623_restart3801
    gt rx1623_pos, rx1623_eos, rx1623_fail3802
    repr_get_attr_int $I11, self, rx1623_curclass, "$!from"
    ne $I11, -1, rxscan1624_done3808
    goto rxscan1624_scan3807
  rxscan1624_loop3806:
    inc rx1623_pos
    gt rx1623_pos, rx1623_eos, rx1623_fail3802
    repr_bind_attr_int rx1623_cur, rx1623_curclass, "$!from", rx1623_pos
  rxscan1624_scan3807:
    nqp_rxmark rx1623_bstack, rxscan1624_loop3806, rx1623_pos, 0
  rxscan1624_done3808:
    ge rx1623_pos, rx1623_eos, rx1623_fail3802
    substr $S11, rx1623_tgt, rx1623_pos, 1
    index $I11, ucs4:"}/", $S11
    lt $I11, 0, rx1623_fail3802
    inc rx1623_pos
    rx1623_cur."!cursor_pass"(rx1623_pos, "rxstopper", 'backtrack'=>1)
    .return (rx1623_cur)
  rx1623_restart3801:
    repr_get_attr_obj rx1623_cstack, rx1623_cur, rx1623_curclass, "$!cstack"
  rx1623_fail3802:
    unless rx1623_bstack, rx1623_done3800
    pop $I19, rx1623_bstack
    if_null rx1623_cstack, rx1623_cstack_done3805
    unless rx1623_cstack, rx1623_cstack_done3805
    dec $I19
    set $P11, rx1623_cstack[$I19]
  rx1623_cstack_done3805:
    pop rx1623_rep, rx1623_bstack
    pop rx1623_pos, rx1623_bstack
    pop $I19, rx1623_bstack
    lt rx1623_pos, -1, rx1623_done3800
    lt rx1623_pos, 0, rx1623_fail3802
    eq $I19, 0, rx1623_fail3802
    nqp_islist $I20, rx1623_cstack
    unless $I20, rx1623_jump3803
    elements $I18, rx1623_bstack
    le $I18, 0, rx1623_cut3804
    dec $I18
    set $I18, rx1623_bstack[$I18]
  rx1623_cut3804:
    assign rx1623_cstack, $I18
  rx1623_jump3803:
    jump $I19
  rx1623_done3800:
    rx1623_cur."!cursor_fail"()
    .return (rx1623_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<:my>" :subid("cuid_229_1365879995.227") :anon :lex :outer("cuid_416_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1418
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_230_1365879995.227' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1625_start
    .local string rx1625_tgt
    .local int rx1625_pos
    .local int rx1625_off
    .local int rx1625_eos
    .local int rx1625_rep
    .local pmc rx1625_cur
    .local pmc rx1625_curclass
    .local pmc rx1625_bstack
    .local pmc rx1625_cstack
    rx1625_start = self."!cursor_start_all"()
    set rx1625_cur, rx1625_start[0]
    set rx1625_tgt, rx1625_start[1]
    set rx1625_pos, rx1625_start[2]
    set rx1625_curclass, rx1625_start[3]
    set rx1625_bstack, rx1625_start[4]
    set $I19, rx1625_start[5]
    store_lex unicode:"$\x{a2}", rx1625_cur
    length rx1625_eos, rx1625_tgt
    eq $I19, 1, rx1625_restart3811
    gt rx1625_pos, rx1625_eos, rx1625_fail3812
    repr_get_attr_int $I11, self, rx1625_curclass, "$!from"
    ne $I11, -1, rxscan1626_done3818
    goto rxscan1626_scan3817
  rxscan1626_loop3816:
    inc rx1625_pos
    gt rx1625_pos, rx1625_eos, rx1625_fail3812
    repr_bind_attr_int rx1625_cur, rx1625_curclass, "$!from", rx1625_pos
  rxscan1626_scan3817:
    nqp_rxmark rx1625_bstack, rxscan1626_loop3816, rx1625_pos, 0
  rxscan1626_done3818:
    add $I11, rx1625_pos, 1
    gt $I11, rx1625_eos, rx1625_fail3812
    substr $S10, rx1625_tgt, rx1625_pos, 1
    ne $S10, ucs4:":", rx1625_fail3812
    add rx1625_pos, 1
    .const 'Sub' $P5001 = 'cuid_230_1365879995.227' 
    capture_lex $P5001
    repr_bind_attr_int rx1625_cur, rx1625_curclass, "$!pos", rx1625_pos
    $P11 = rx1625_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1625_curclass, "$!pos"
    lt $I11, 0, rx1625_fail3812
    repr_bind_attr_int rx1625_cur, rx1625_curclass, "$!pos", rx1625_pos
    $P11 = rx1625_cur."LANG"("MAIN", "statement")
    repr_get_attr_int $I11, $P11, rx1625_curclass, "$!pos"
    lt $I11, 0, rx1625_fail3812
    nqp_rxmark rx1625_bstack, rxsubrule1629_pass3829, -1, 0
  rxsubrule1629_pass3829:
    rx1625_cstack = rx1625_cur."!cursor_capture"($P11, "statement")
    repr_get_attr_int rx1625_pos, $P11, rx1625_curclass, "$!pos"
    repr_bind_attr_int rx1625_cur, rx1625_curclass, "$!pos", rx1625_pos
    $P11 = rx1625_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1625_curclass, "$!pos"
    lt $I11, 0, rx1625_fail3812
    repr_get_attr_int rx1625_pos, $P11, rx1625_curclass, "$!pos"
    add $I11, rx1625_pos, 1
    gt $I11, rx1625_eos, rx1625_fail3812
    substr $S10, rx1625_tgt, rx1625_pos, 1
    ne $S10, ucs4:";", rx1625_fail3812
    add rx1625_pos, 1
    rx1625_cur."!cursor_pass"(rx1625_pos, "metachar:sym<:my>", 'backtrack'=>1)
    .return (rx1625_cur)
  rx1625_restart3811:
    repr_get_attr_obj rx1625_cstack, rx1625_cur, rx1625_curclass, "$!cstack"
  rx1625_fail3812:
    unless rx1625_bstack, rx1625_done3810
    pop $I19, rx1625_bstack
    if_null rx1625_cstack, rx1625_cstack_done3815
    unless rx1625_cstack, rx1625_cstack_done3815
    dec $I19
    set $P11, rx1625_cstack[$I19]
  rx1625_cstack_done3815:
    pop rx1625_rep, rx1625_bstack
    pop rx1625_pos, rx1625_bstack
    pop $I19, rx1625_bstack
    lt rx1625_pos, -1, rx1625_done3810
    lt rx1625_pos, 0, rx1625_fail3812
    eq $I19, 0, rx1625_fail3812
    nqp_islist $I20, rx1625_cstack
    unless $I20, rx1625_jump3813
    elements $I18, rx1625_bstack
    le $I18, 0, rx1625_cut3814
    dec $I18
    set $I18, rx1625_bstack[$I18]
  rx1625_cut3814:
    assign rx1625_cstack, $I18
  rx1625_jump3813:
    jump $I19
  rx1625_done3810:
    rx1625_cur."!cursor_fail"()
    .return (rx1625_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_230_1365879995.227") :anon :lex :outer("cuid_229_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1627_start
    .local string rx1627_tgt
    .local int rx1627_pos
    .local int rx1627_off
    .local int rx1627_eos
    .local int rx1627_rep
    .local pmc rx1627_cur
    .local pmc rx1627_curclass
    .local pmc rx1627_bstack
    .local pmc rx1627_cstack
    rx1627_start = self."!cursor_start_all"()
    set rx1627_cur, rx1627_start[0]
    set rx1627_tgt, rx1627_start[1]
    set rx1627_pos, rx1627_start[2]
    set rx1627_curclass, rx1627_start[3]
    set rx1627_bstack, rx1627_start[4]
    set $I19, rx1627_start[5]
    store_lex unicode:"$\x{a2}", rx1627_cur
    length rx1627_eos, rx1627_tgt
    eq $I19, 1, rx1627_restart3821
    gt rx1627_pos, rx1627_eos, rx1627_fail3822
    repr_get_attr_int $I11, self, rx1627_curclass, "$!from"
    ne $I11, -1, rxscan1628_done3828
    goto rxscan1628_scan3827
  rxscan1628_loop3826:
    inc rx1627_pos
    gt rx1627_pos, rx1627_eos, rx1627_fail3822
    repr_bind_attr_int rx1627_cur, rx1627_curclass, "$!from", rx1627_pos
  rxscan1628_scan3827:
    nqp_rxmark rx1627_bstack, rxscan1628_loop3826, rx1627_pos, 0
  rxscan1628_done3828:
    add $I11, rx1627_pos, 2
    gt $I11, rx1627_eos, rx1627_fail3822
    substr $S10, rx1627_tgt, rx1627_pos, 2
    ne $S10, ucs4:"my", rx1627_fail3822
    add rx1627_pos, 2
    rx1627_cur."!cursor_pass"(rx1627_pos, 'backtrack'=>1)
    .return (rx1627_cur)
  rx1627_restart3821:
    repr_get_attr_obj rx1627_cstack, rx1627_cur, rx1627_curclass, "$!cstack"
  rx1627_fail3822:
    unless rx1627_bstack, rx1627_done3820
    pop $I19, rx1627_bstack
    if_null rx1627_cstack, rx1627_cstack_done3825
    unless rx1627_cstack, rx1627_cstack_done3825
    dec $I19
    set $P11, rx1627_cstack[$I19]
  rx1627_cstack_done3825:
    pop rx1627_rep, rx1627_bstack
    pop rx1627_pos, rx1627_bstack
    pop $I19, rx1627_bstack
    lt rx1627_pos, -1, rx1627_done3820
    lt rx1627_pos, 0, rx1627_fail3822
    eq $I19, 0, rx1627_fail3822
    nqp_islist $I20, rx1627_cstack
    unless $I20, rx1627_jump3823
    elements $I18, rx1627_bstack
    le $I18, 0, rx1627_cut3824
    dec $I18
    set $I18, rx1627_bstack[$I18]
  rx1627_cut3824:
    assign rx1627_cstack, $I18
  rx1627_jump3823:
    jump $I19
  rx1627_done3820:
    rx1627_cur."!cursor_fail"()
    .return (rx1627_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<{ }>" :subid("cuid_231_1365879995.227") :anon :lex :outer("cuid_416_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1422
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1631_start
    .local string rx1631_tgt
    .local int rx1631_pos
    .local int rx1631_off
    .local int rx1631_eos
    .local int rx1631_rep
    .local pmc rx1631_cur
    .local pmc rx1631_curclass
    .local pmc rx1631_bstack
    .local pmc rx1631_cstack
    rx1631_start = self."!cursor_start_all"()
    set rx1631_cur, rx1631_start[0]
    set rx1631_tgt, rx1631_start[1]
    set rx1631_pos, rx1631_start[2]
    set rx1631_curclass, rx1631_start[3]
    set rx1631_bstack, rx1631_start[4]
    set $I19, rx1631_start[5]
    store_lex unicode:"$\x{a2}", rx1631_cur
    length rx1631_eos, rx1631_tgt
    eq $I19, 1, rx1631_restart3833
    gt rx1631_pos, rx1631_eos, rx1631_fail3834
    repr_get_attr_int $I11, self, rx1631_curclass, "$!from"
    ne $I11, -1, rxscan1632_done3840
    goto rxscan1632_scan3839
  rxscan1632_loop3838:
    inc rx1631_pos
    gt rx1631_pos, rx1631_eos, rx1631_fail3834
    repr_bind_attr_int rx1631_cur, rx1631_curclass, "$!from", rx1631_pos
  rxscan1632_scan3839:
    nqp_rxmark rx1631_bstack, rxscan1632_loop3838, rx1631_pos, 0
  rxscan1632_done3840:
    ge rx1631_pos, rx1631_eos, rx1631_fail3834
    substr $S11, rx1631_tgt, rx1631_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx1631_fail3834
    repr_bind_attr_int rx1631_cur, rx1631_curclass, "$!pos", rx1631_pos
    $P11 = rx1631_cur."codeblock"()
    repr_get_attr_int $I11, $P11, rx1631_curclass, "$!pos"
    lt $I11, 0, rx1631_fail3834
    nqp_rxmark rx1631_bstack, rxsubrule1633_pass3841, -1, 0
  rxsubrule1633_pass3841:
    rx1631_cstack = rx1631_cur."!cursor_capture"($P11, "codeblock")
    repr_get_attr_int rx1631_pos, $P11, rx1631_curclass, "$!pos"
    rx1631_cur."!cursor_pass"(rx1631_pos, "metachar:sym<{ }>", 'backtrack'=>1)
    .return (rx1631_cur)
  rx1631_restart3833:
    repr_get_attr_obj rx1631_cstack, rx1631_cur, rx1631_curclass, "$!cstack"
  rx1631_fail3834:
    unless rx1631_bstack, rx1631_done3832
    pop $I19, rx1631_bstack
    if_null rx1631_cstack, rx1631_cstack_done3837
    unless rx1631_cstack, rx1631_cstack_done3837
    dec $I19
    set $P11, rx1631_cstack[$I19]
  rx1631_cstack_done3837:
    pop rx1631_rep, rx1631_bstack
    pop rx1631_pos, rx1631_bstack
    pop $I19, rx1631_bstack
    lt rx1631_pos, -1, rx1631_done3832
    lt rx1631_pos, 0, rx1631_fail3834
    eq $I19, 0, rx1631_fail3834
    nqp_islist $I20, rx1631_cstack
    unless $I20, rx1631_jump3835
    elements $I18, rx1631_bstack
    le $I18, 0, rx1631_cut3836
    dec $I18
    set $I18, rx1631_bstack[$I18]
  rx1631_cut3836:
    assign rx1631_cstack, $I18
  rx1631_jump3835:
    jump $I19
  rx1631_done3832:
    rx1631_cur."!cursor_fail"()
    .return (rx1631_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<nqpvar>" :subid("cuid_232_1365879995.227") :anon :lex :outer("cuid_416_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1426
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_233_1365879995.227' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1634_start
    .local string rx1634_tgt
    .local int rx1634_pos
    .local int rx1634_off
    .local int rx1634_eos
    .local int rx1634_rep
    .local pmc rx1634_cur
    .local pmc rx1634_curclass
    .local pmc rx1634_bstack
    .local pmc rx1634_cstack
    rx1634_start = self."!cursor_start_all"()
    set rx1634_cur, rx1634_start[0]
    set rx1634_tgt, rx1634_start[1]
    set rx1634_pos, rx1634_start[2]
    set rx1634_curclass, rx1634_start[3]
    set rx1634_bstack, rx1634_start[4]
    set $I19, rx1634_start[5]
    store_lex unicode:"$\x{a2}", rx1634_cur
    length rx1634_eos, rx1634_tgt
    eq $I19, 1, rx1634_restart3844
    gt rx1634_pos, rx1634_eos, rx1634_fail3845
    repr_get_attr_int $I11, self, rx1634_curclass, "$!from"
    ne $I11, -1, rxscan1635_done3851
    goto rxscan1635_scan3850
  rxscan1635_loop3849:
    inc rx1634_pos
    gt rx1634_pos, rx1634_eos, rx1634_fail3845
    repr_bind_attr_int rx1634_cur, rx1634_curclass, "$!from", rx1634_pos
  rxscan1635_scan3850:
    nqp_rxmark rx1634_bstack, rxscan1635_loop3849, rx1634_pos, 0
  rxscan1635_done3851:
    .const 'Sub' $P5001 = 'cuid_233_1365879995.227' 
    capture_lex $P5001
    repr_bind_attr_int rx1634_cur, rx1634_curclass, "$!pos", rx1634_pos
    $P11 = rx1634_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1634_curclass, "$!pos"
    lt $I11, 0, rx1634_fail3845
    repr_bind_attr_int rx1634_cur, rx1634_curclass, "$!pos", rx1634_pos
    $P11 = rx1634_cur."LANG"("MAIN", "variable")
    repr_get_attr_int $I11, $P11, rx1634_curclass, "$!pos"
    lt $I11, 0, rx1634_fail3845
    nqp_rxmark rx1634_bstack, rxsubrule1640_pass3866, -1, 0
  rxsubrule1640_pass3866:
    rx1634_cstack = rx1634_cur."!cursor_capture"($P11, "var")
    repr_get_attr_int rx1634_pos, $P11, rx1634_curclass, "$!pos"
    rx1634_cur."!cursor_pass"(rx1634_pos, "metachar:sym<nqpvar>", 'backtrack'=>1)
    .return (rx1634_cur)
  rx1634_restart3844:
    repr_get_attr_obj rx1634_cstack, rx1634_cur, rx1634_curclass, "$!cstack"
  rx1634_fail3845:
    unless rx1634_bstack, rx1634_done3843
    pop $I19, rx1634_bstack
    if_null rx1634_cstack, rx1634_cstack_done3848
    unless rx1634_cstack, rx1634_cstack_done3848
    dec $I19
    set $P11, rx1634_cstack[$I19]
  rx1634_cstack_done3848:
    pop rx1634_rep, rx1634_bstack
    pop rx1634_pos, rx1634_bstack
    pop $I19, rx1634_bstack
    lt rx1634_pos, -1, rx1634_done3843
    lt rx1634_pos, 0, rx1634_fail3845
    eq $I19, 0, rx1634_fail3845
    nqp_islist $I20, rx1634_cstack
    unless $I20, rx1634_jump3846
    elements $I18, rx1634_bstack
    le $I18, 0, rx1634_cut3847
    dec $I18
    set $I18, rx1634_bstack[$I18]
  rx1634_cut3847:
    assign rx1634_cstack, $I18
  rx1634_jump3846:
    jump $I19
  rx1634_done3843:
    rx1634_cur."!cursor_fail"()
    .return (rx1634_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_233_1365879995.227") :anon :lex :outer("cuid_232_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1636_start
    .local string rx1636_tgt
    .local int rx1636_pos
    .local int rx1636_off
    .local int rx1636_eos
    .local int rx1636_rep
    .local pmc rx1636_cur
    .local pmc rx1636_curclass
    .local pmc rx1636_bstack
    .local pmc rx1636_cstack
    rx1636_start = self."!cursor_start_all"()
    set rx1636_cur, rx1636_start[0]
    set rx1636_tgt, rx1636_start[1]
    set rx1636_pos, rx1636_start[2]
    set rx1636_curclass, rx1636_start[3]
    set rx1636_bstack, rx1636_start[4]
    set $I19, rx1636_start[5]
    store_lex unicode:"$\x{a2}", rx1636_cur
    length rx1636_eos, rx1636_tgt
    eq $I19, 1, rx1636_restart3854
    gt rx1636_pos, rx1636_eos, rx1636_fail3855
    repr_get_attr_int $I11, self, rx1636_curclass, "$!from"
    ne $I11, -1, rxscan1637_done3861
    goto rxscan1637_scan3860
  rxscan1637_loop3859:
    inc rx1636_pos
    gt rx1636_pos, rx1636_eos, rx1636_fail3855
    repr_bind_attr_int rx1636_cur, rx1636_curclass, "$!from", rx1636_pos
  rxscan1637_scan3860:
    nqp_rxmark rx1636_bstack, rxscan1637_loop3859, rx1636_pos, 0
  rxscan1637_done3861:
    repr_bind_attr_int rx1636_cur, rx1636_curclass, "$!pos", rx1636_pos
    $P11 = rx1636_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx1636_curclass, "$!pos"
    lt $I11, 0, rx1636_fail3855
    nqp_rxmark rx1636_bstack, rxsubrule1638_pass3862, -1, 0
  rxsubrule1638_pass3862:
    rx1636_cstack = rx1636_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx1636_pos, $P11, rx1636_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1639_03864
    nqp_push_label $P11, alt1639_13865
    nqp_rxmark rx1636_bstack, alt1639_end3863, -1, 0
    rx1636_cur."!alt"(rx1636_pos, "alt_nfa__39_1365879998.959", $P11)
    goto rx1636_fail3855
  alt1639_03864:
    ge rx1636_pos, rx1636_eos, rx1636_fail3855
    is_cclass $I11, .CCLASS_WORD, rx1636_tgt, rx1636_pos
    if $I11, rx1636_fail3855
    add rx1636_pos, 1
    ge rx1636_pos, rx1636_eos, rx1636_fail3855
    is_cclass $I11, .CCLASS_WORD, rx1636_tgt, rx1636_pos
    unless $I11, rx1636_fail3855
    add rx1636_pos, 1
    goto alt1639_end3863
  alt1639_13865:
    ge rx1636_pos, rx1636_eos, rx1636_fail3855
    is_cclass $I11, .CCLASS_WORD, rx1636_tgt, rx1636_pos
    unless $I11, rx1636_fail3855
    add rx1636_pos, 1
    goto alt1639_end3863
  alt1639_end3863:
    nqp_rxcommit rx1636_bstack, alt1639_end3863
    rx1636_cur."!cursor_pass"(rx1636_pos, 'backtrack'=>1)
    .return (rx1636_cur)
  rx1636_restart3854:
    repr_get_attr_obj rx1636_cstack, rx1636_cur, rx1636_curclass, "$!cstack"
  rx1636_fail3855:
    unless rx1636_bstack, rx1636_done3853
    pop $I19, rx1636_bstack
    if_null rx1636_cstack, rx1636_cstack_done3858
    unless rx1636_cstack, rx1636_cstack_done3858
    dec $I19
    set $P11, rx1636_cstack[$I19]
  rx1636_cstack_done3858:
    pop rx1636_rep, rx1636_bstack
    pop rx1636_pos, rx1636_bstack
    pop $I19, rx1636_bstack
    lt rx1636_pos, -1, rx1636_done3853
    lt rx1636_pos, 0, rx1636_fail3855
    eq $I19, 0, rx1636_fail3855
    nqp_islist $I20, rx1636_cstack
    unless $I20, rx1636_jump3856
    elements $I18, rx1636_bstack
    le $I18, 0, rx1636_cut3857
    dec $I18
    set $I18, rx1636_bstack[$I18]
  rx1636_cut3857:
    assign rx1636_cstack, $I18
  rx1636_jump3856:
    jump $I19
  rx1636_done3853:
    rx1636_cur."!cursor_fail"()
    .return (rx1636_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<{ }>" :subid("cuid_234_1365879995.227") :anon :lex :outer("cuid_416_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1430
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1641_start
    .local string rx1641_tgt
    .local int rx1641_pos
    .local int rx1641_off
    .local int rx1641_eos
    .local int rx1641_rep
    .local pmc rx1641_cur
    .local pmc rx1641_curclass
    .local pmc rx1641_bstack
    .local pmc rx1641_cstack
    rx1641_start = self."!cursor_start_all"()
    set rx1641_cur, rx1641_start[0]
    set rx1641_tgt, rx1641_start[1]
    set rx1641_pos, rx1641_start[2]
    set rx1641_curclass, rx1641_start[3]
    set rx1641_bstack, rx1641_start[4]
    set $I19, rx1641_start[5]
    store_lex unicode:"$\x{a2}", rx1641_cur
    length rx1641_eos, rx1641_tgt
    eq $I19, 1, rx1641_restart3869
    gt rx1641_pos, rx1641_eos, rx1641_fail3870
    repr_get_attr_int $I11, self, rx1641_curclass, "$!from"
    ne $I11, -1, rxscan1642_done3876
    goto rxscan1642_scan3875
  rxscan1642_loop3874:
    inc rx1641_pos
    gt rx1641_pos, rx1641_eos, rx1641_fail3870
    repr_bind_attr_int rx1641_cur, rx1641_curclass, "$!from", rx1641_pos
  rxscan1642_scan3875:
    nqp_rxmark rx1641_bstack, rxscan1642_loop3874, rx1641_pos, 0
  rxscan1642_done3876:
    ge rx1641_pos, rx1641_eos, rx1641_fail3870
    substr $S11, rx1641_tgt, rx1641_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx1641_fail3870
    repr_bind_attr_int rx1641_cur, rx1641_curclass, "$!pos", rx1641_pos
    $P11 = rx1641_cur."codeblock"()
    repr_get_attr_int $I11, $P11, rx1641_curclass, "$!pos"
    lt $I11, 0, rx1641_fail3870
    nqp_rxmark rx1641_bstack, rxsubrule1643_pass3877, -1, 0
  rxsubrule1643_pass3877:
    rx1641_cstack = rx1641_cur."!cursor_capture"($P11, "codeblock")
    repr_get_attr_int rx1641_pos, $P11, rx1641_curclass, "$!pos"
    rx1641_cur."!cursor_pass"(rx1641_pos, "assertion:sym<{ }>", 'backtrack'=>1)
    .return (rx1641_cur)
  rx1641_restart3869:
    repr_get_attr_obj rx1641_cstack, rx1641_cur, rx1641_curclass, "$!cstack"
  rx1641_fail3870:
    unless rx1641_bstack, rx1641_done3868
    pop $I19, rx1641_bstack
    if_null rx1641_cstack, rx1641_cstack_done3873
    unless rx1641_cstack, rx1641_cstack_done3873
    dec $I19
    set $P11, rx1641_cstack[$I19]
  rx1641_cstack_done3873:
    pop rx1641_rep, rx1641_bstack
    pop rx1641_pos, rx1641_bstack
    pop $I19, rx1641_bstack
    lt rx1641_pos, -1, rx1641_done3868
    lt rx1641_pos, 0, rx1641_fail3870
    eq $I19, 0, rx1641_fail3870
    nqp_islist $I20, rx1641_cstack
    unless $I20, rx1641_jump3871
    elements $I18, rx1641_bstack
    le $I18, 0, rx1641_cut3872
    dec $I18
    set $I18, rx1641_bstack[$I18]
  rx1641_cut3872:
    assign rx1641_cstack, $I18
  rx1641_jump3871:
    jump $I19
  rx1641_done3868:
    rx1641_cur."!cursor_fail"()
    .return (rx1641_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<?>" :subid("cuid_235_1365879995.227") :anon :lex :outer("cuid_416_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1434
    .param pmc _lex_param_0 
    .const 'Sub' $P5003 = 'cuid_236_1365879995.227' 
    capture_lex $P5003 
    .const 'Sub' $P5003 = 'cuid_237_1365879995.227' 
    capture_lex $P5003 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1644_start
    .local string rx1644_tgt
    .local int rx1644_pos
    .local int rx1644_off
    .local int rx1644_eos
    .local int rx1644_rep
    .local pmc rx1644_cur
    .local pmc rx1644_curclass
    .local pmc rx1644_bstack
    .local pmc rx1644_cstack
    rx1644_start = self."!cursor_start_all"()
    set rx1644_cur, rx1644_start[0]
    set rx1644_tgt, rx1644_start[1]
    set rx1644_pos, rx1644_start[2]
    set rx1644_curclass, rx1644_start[3]
    set rx1644_bstack, rx1644_start[4]
    set $I19, rx1644_start[5]
    store_lex unicode:"$\x{a2}", rx1644_cur
    length rx1644_eos, rx1644_tgt
    eq $I19, 1, rx1644_restart3880
    gt rx1644_pos, rx1644_eos, rx1644_fail3881
    repr_get_attr_int $I11, self, rx1644_curclass, "$!from"
    ne $I11, -1, rxscan1645_done3887
    goto rxscan1645_scan3886
  rxscan1645_loop3885:
    inc rx1644_pos
    gt rx1644_pos, rx1644_eos, rx1644_fail3881
    repr_bind_attr_int rx1644_cur, rx1644_curclass, "$!from", rx1644_pos
  rxscan1645_scan3886:
    nqp_rxmark rx1644_bstack, rxscan1645_loop3885, rx1644_pos, 0
  rxscan1645_done3887:
    add $I11, rx1644_pos, 1
    gt $I11, rx1644_eos, rx1644_fail3881
    substr $S10, rx1644_tgt, rx1644_pos, 1
    ne $S10, ucs4:"?", rx1644_fail3881
    add rx1644_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1646_03889
    nqp_push_label $P11, alt1646_13900
    nqp_rxmark rx1644_bstack, alt1646_end3888, -1, 0
    rx1644_cur."!alt"(rx1644_pos, "alt_nfa__40_1365879998.985", $P11)
    goto rx1644_fail3881
  alt1646_03889:
    .const 'Sub' $P5001 = 'cuid_236_1365879995.227' 
    capture_lex $P5001
    repr_bind_attr_int rx1644_cur, rx1644_curclass, "$!pos", rx1644_pos
    $P11 = rx1644_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1644_curclass, "$!pos"
    lt $I11, 0, rx1644_fail3881
    goto alt1646_end3888
  alt1646_13900:
    .const 'Sub' $P5002 = 'cuid_237_1365879995.227' 
    capture_lex $P5002
    repr_bind_attr_int rx1644_cur, rx1644_curclass, "$!pos", rx1644_pos
    $P11 = rx1644_cur."before"($P5002)
    repr_get_attr_int $I11, $P11, rx1644_curclass, "$!pos"
    ge $I11, 0, rx1644_fail3881
    repr_bind_attr_int rx1644_cur, rx1644_curclass, "$!pos", rx1644_pos
    $P11 = rx1644_cur."assertion"()
    repr_get_attr_int $I11, $P11, rx1644_curclass, "$!pos"
    lt $I11, 0, rx1644_fail3881
    nqp_rxmark rx1644_bstack, rxsubrule1651_pass3911, -1, 0
  rxsubrule1651_pass3911:
    rx1644_cstack = rx1644_cur."!cursor_capture"($P11, "assertion")
    repr_get_attr_int rx1644_pos, $P11, rx1644_curclass, "$!pos"
    goto alt1646_end3888
  alt1646_end3888:
    nqp_rxcommit rx1644_bstack, alt1646_end3888
    rx1644_cur."!cursor_pass"(rx1644_pos, "assertion:sym<?>", 'backtrack'=>1)
    .return (rx1644_cur)
  rx1644_restart3880:
    repr_get_attr_obj rx1644_cstack, rx1644_cur, rx1644_curclass, "$!cstack"
  rx1644_fail3881:
    unless rx1644_bstack, rx1644_done3879
    pop $I19, rx1644_bstack
    if_null rx1644_cstack, rx1644_cstack_done3884
    unless rx1644_cstack, rx1644_cstack_done3884
    dec $I19
    set $P11, rx1644_cstack[$I19]
  rx1644_cstack_done3884:
    pop rx1644_rep, rx1644_bstack
    pop rx1644_pos, rx1644_bstack
    pop $I19, rx1644_bstack
    lt rx1644_pos, -1, rx1644_done3879
    lt rx1644_pos, 0, rx1644_fail3881
    eq $I19, 0, rx1644_fail3881
    nqp_islist $I20, rx1644_cstack
    unless $I20, rx1644_jump3882
    elements $I18, rx1644_bstack
    le $I18, 0, rx1644_cut3883
    dec $I18
    set $I18, rx1644_bstack[$I18]
  rx1644_cut3883:
    assign rx1644_cstack, $I18
  rx1644_jump3882:
    jump $I19
  rx1644_done3879:
    rx1644_cur."!cursor_fail"()
    .return (rx1644_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_236_1365879995.227") :anon :lex :outer("cuid_235_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1647_start
    .local string rx1647_tgt
    .local int rx1647_pos
    .local int rx1647_off
    .local int rx1647_eos
    .local int rx1647_rep
    .local pmc rx1647_cur
    .local pmc rx1647_curclass
    .local pmc rx1647_bstack
    .local pmc rx1647_cstack
    rx1647_start = self."!cursor_start_all"()
    set rx1647_cur, rx1647_start[0]
    set rx1647_tgt, rx1647_start[1]
    set rx1647_pos, rx1647_start[2]
    set rx1647_curclass, rx1647_start[3]
    set rx1647_bstack, rx1647_start[4]
    set $I19, rx1647_start[5]
    store_lex unicode:"$\x{a2}", rx1647_cur
    length rx1647_eos, rx1647_tgt
    eq $I19, 1, rx1647_restart3892
    gt rx1647_pos, rx1647_eos, rx1647_fail3893
    repr_get_attr_int $I11, self, rx1647_curclass, "$!from"
    ne $I11, -1, rxscan1648_done3899
    goto rxscan1648_scan3898
  rxscan1648_loop3897:
    inc rx1647_pos
    gt rx1647_pos, rx1647_eos, rx1647_fail3893
    repr_bind_attr_int rx1647_cur, rx1647_curclass, "$!from", rx1647_pos
  rxscan1648_scan3898:
    nqp_rxmark rx1647_bstack, rxscan1648_loop3897, rx1647_pos, 0
  rxscan1648_done3899:
    add $I11, rx1647_pos, 1
    gt $I11, rx1647_eos, rx1647_fail3893
    substr $S10, rx1647_tgt, rx1647_pos, 1
    ne $S10, ucs4:">", rx1647_fail3893
    add rx1647_pos, 1
    rx1647_cur."!cursor_pass"(rx1647_pos, 'backtrack'=>1)
    .return (rx1647_cur)
  rx1647_restart3892:
    repr_get_attr_obj rx1647_cstack, rx1647_cur, rx1647_curclass, "$!cstack"
  rx1647_fail3893:
    unless rx1647_bstack, rx1647_done3891
    pop $I19, rx1647_bstack
    if_null rx1647_cstack, rx1647_cstack_done3896
    unless rx1647_cstack, rx1647_cstack_done3896
    dec $I19
    set $P11, rx1647_cstack[$I19]
  rx1647_cstack_done3896:
    pop rx1647_rep, rx1647_bstack
    pop rx1647_pos, rx1647_bstack
    pop $I19, rx1647_bstack
    lt rx1647_pos, -1, rx1647_done3891
    lt rx1647_pos, 0, rx1647_fail3893
    eq $I19, 0, rx1647_fail3893
    nqp_islist $I20, rx1647_cstack
    unless $I20, rx1647_jump3894
    elements $I18, rx1647_bstack
    le $I18, 0, rx1647_cut3895
    dec $I18
    set $I18, rx1647_bstack[$I18]
  rx1647_cut3895:
    assign rx1647_cstack, $I18
  rx1647_jump3894:
    jump $I19
  rx1647_done3891:
    rx1647_cur."!cursor_fail"()
    .return (rx1647_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_237_1365879995.227") :anon :lex :outer("cuid_235_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1649_start
    .local string rx1649_tgt
    .local int rx1649_pos
    .local int rx1649_off
    .local int rx1649_eos
    .local int rx1649_rep
    .local pmc rx1649_cur
    .local pmc rx1649_curclass
    .local pmc rx1649_bstack
    .local pmc rx1649_cstack
    rx1649_start = self."!cursor_start_all"()
    set rx1649_cur, rx1649_start[0]
    set rx1649_tgt, rx1649_start[1]
    set rx1649_pos, rx1649_start[2]
    set rx1649_curclass, rx1649_start[3]
    set rx1649_bstack, rx1649_start[4]
    set $I19, rx1649_start[5]
    store_lex unicode:"$\x{a2}", rx1649_cur
    length rx1649_eos, rx1649_tgt
    eq $I19, 1, rx1649_restart3903
    gt rx1649_pos, rx1649_eos, rx1649_fail3904
    repr_get_attr_int $I11, self, rx1649_curclass, "$!from"
    ne $I11, -1, rxscan1650_done3910
    goto rxscan1650_scan3909
  rxscan1650_loop3908:
    inc rx1649_pos
    gt rx1649_pos, rx1649_eos, rx1649_fail3904
    repr_bind_attr_int rx1649_cur, rx1649_curclass, "$!from", rx1649_pos
  rxscan1650_scan3909:
    nqp_rxmark rx1649_bstack, rxscan1650_loop3908, rx1649_pos, 0
  rxscan1650_done3910:
    add $I11, rx1649_pos, 1
    gt $I11, rx1649_eos, rx1649_fail3904
    substr $S10, rx1649_tgt, rx1649_pos, 1
    ne $S10, ucs4:"{", rx1649_fail3904
    add rx1649_pos, 1
    rx1649_cur."!cursor_pass"(rx1649_pos, 'backtrack'=>1)
    .return (rx1649_cur)
  rx1649_restart3903:
    repr_get_attr_obj rx1649_cstack, rx1649_cur, rx1649_curclass, "$!cstack"
  rx1649_fail3904:
    unless rx1649_bstack, rx1649_done3902
    pop $I19, rx1649_bstack
    if_null rx1649_cstack, rx1649_cstack_done3907
    unless rx1649_cstack, rx1649_cstack_done3907
    dec $I19
    set $P11, rx1649_cstack[$I19]
  rx1649_cstack_done3907:
    pop rx1649_rep, rx1649_bstack
    pop rx1649_pos, rx1649_bstack
    pop $I19, rx1649_bstack
    lt rx1649_pos, -1, rx1649_done3902
    lt rx1649_pos, 0, rx1649_fail3904
    eq $I19, 0, rx1649_fail3904
    nqp_islist $I20, rx1649_cstack
    unless $I20, rx1649_jump3905
    elements $I18, rx1649_bstack
    le $I18, 0, rx1649_cut3906
    dec $I18
    set $I18, rx1649_bstack[$I18]
  rx1649_cut3906:
    assign rx1649_cstack, $I18
  rx1649_jump3905:
    jump $I19
  rx1649_done3902:
    rx1649_cur."!cursor_fail"()
    .return (rx1649_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<!>" :subid("cuid_238_1365879995.227") :anon :lex :outer("cuid_416_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1435
    .param pmc _lex_param_0 
    .const 'Sub' $P5003 = 'cuid_239_1365879995.227' 
    capture_lex $P5003 
    .const 'Sub' $P5003 = 'cuid_240_1365879995.227' 
    capture_lex $P5003 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1652_start
    .local string rx1652_tgt
    .local int rx1652_pos
    .local int rx1652_off
    .local int rx1652_eos
    .local int rx1652_rep
    .local pmc rx1652_cur
    .local pmc rx1652_curclass
    .local pmc rx1652_bstack
    .local pmc rx1652_cstack
    rx1652_start = self."!cursor_start_all"()
    set rx1652_cur, rx1652_start[0]
    set rx1652_tgt, rx1652_start[1]
    set rx1652_pos, rx1652_start[2]
    set rx1652_curclass, rx1652_start[3]
    set rx1652_bstack, rx1652_start[4]
    set $I19, rx1652_start[5]
    store_lex unicode:"$\x{a2}", rx1652_cur
    length rx1652_eos, rx1652_tgt
    eq $I19, 1, rx1652_restart3914
    gt rx1652_pos, rx1652_eos, rx1652_fail3915
    repr_get_attr_int $I11, self, rx1652_curclass, "$!from"
    ne $I11, -1, rxscan1653_done3921
    goto rxscan1653_scan3920
  rxscan1653_loop3919:
    inc rx1652_pos
    gt rx1652_pos, rx1652_eos, rx1652_fail3915
    repr_bind_attr_int rx1652_cur, rx1652_curclass, "$!from", rx1652_pos
  rxscan1653_scan3920:
    nqp_rxmark rx1652_bstack, rxscan1653_loop3919, rx1652_pos, 0
  rxscan1653_done3921:
    add $I11, rx1652_pos, 1
    gt $I11, rx1652_eos, rx1652_fail3915
    substr $S10, rx1652_tgt, rx1652_pos, 1
    ne $S10, ucs4:"!", rx1652_fail3915
    add rx1652_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1654_03923
    nqp_push_label $P11, alt1654_13934
    nqp_rxmark rx1652_bstack, alt1654_end3922, -1, 0
    rx1652_cur."!alt"(rx1652_pos, "alt_nfa__41_1365879998.999", $P11)
    goto rx1652_fail3915
  alt1654_03923:
    .const 'Sub' $P5001 = 'cuid_239_1365879995.227' 
    capture_lex $P5001
    repr_bind_attr_int rx1652_cur, rx1652_curclass, "$!pos", rx1652_pos
    $P11 = rx1652_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1652_curclass, "$!pos"
    lt $I11, 0, rx1652_fail3915
    goto alt1654_end3922
  alt1654_13934:
    .const 'Sub' $P5002 = 'cuid_240_1365879995.227' 
    capture_lex $P5002
    repr_bind_attr_int rx1652_cur, rx1652_curclass, "$!pos", rx1652_pos
    $P11 = rx1652_cur."before"($P5002)
    repr_get_attr_int $I11, $P11, rx1652_curclass, "$!pos"
    ge $I11, 0, rx1652_fail3915
    repr_bind_attr_int rx1652_cur, rx1652_curclass, "$!pos", rx1652_pos
    $P11 = rx1652_cur."assertion"()
    repr_get_attr_int $I11, $P11, rx1652_curclass, "$!pos"
    lt $I11, 0, rx1652_fail3915
    nqp_rxmark rx1652_bstack, rxsubrule1659_pass3945, -1, 0
  rxsubrule1659_pass3945:
    rx1652_cstack = rx1652_cur."!cursor_capture"($P11, "assertion")
    repr_get_attr_int rx1652_pos, $P11, rx1652_curclass, "$!pos"
    goto alt1654_end3922
  alt1654_end3922:
    nqp_rxcommit rx1652_bstack, alt1654_end3922
    rx1652_cur."!cursor_pass"(rx1652_pos, "assertion:sym<!>", 'backtrack'=>1)
    .return (rx1652_cur)
  rx1652_restart3914:
    repr_get_attr_obj rx1652_cstack, rx1652_cur, rx1652_curclass, "$!cstack"
  rx1652_fail3915:
    unless rx1652_bstack, rx1652_done3913
    pop $I19, rx1652_bstack
    if_null rx1652_cstack, rx1652_cstack_done3918
    unless rx1652_cstack, rx1652_cstack_done3918
    dec $I19
    set $P11, rx1652_cstack[$I19]
  rx1652_cstack_done3918:
    pop rx1652_rep, rx1652_bstack
    pop rx1652_pos, rx1652_bstack
    pop $I19, rx1652_bstack
    lt rx1652_pos, -1, rx1652_done3913
    lt rx1652_pos, 0, rx1652_fail3915
    eq $I19, 0, rx1652_fail3915
    nqp_islist $I20, rx1652_cstack
    unless $I20, rx1652_jump3916
    elements $I18, rx1652_bstack
    le $I18, 0, rx1652_cut3917
    dec $I18
    set $I18, rx1652_bstack[$I18]
  rx1652_cut3917:
    assign rx1652_cstack, $I18
  rx1652_jump3916:
    jump $I19
  rx1652_done3913:
    rx1652_cur."!cursor_fail"()
    .return (rx1652_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_239_1365879995.227") :anon :lex :outer("cuid_238_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1655_start
    .local string rx1655_tgt
    .local int rx1655_pos
    .local int rx1655_off
    .local int rx1655_eos
    .local int rx1655_rep
    .local pmc rx1655_cur
    .local pmc rx1655_curclass
    .local pmc rx1655_bstack
    .local pmc rx1655_cstack
    rx1655_start = self."!cursor_start_all"()
    set rx1655_cur, rx1655_start[0]
    set rx1655_tgt, rx1655_start[1]
    set rx1655_pos, rx1655_start[2]
    set rx1655_curclass, rx1655_start[3]
    set rx1655_bstack, rx1655_start[4]
    set $I19, rx1655_start[5]
    store_lex unicode:"$\x{a2}", rx1655_cur
    length rx1655_eos, rx1655_tgt
    eq $I19, 1, rx1655_restart3926
    gt rx1655_pos, rx1655_eos, rx1655_fail3927
    repr_get_attr_int $I11, self, rx1655_curclass, "$!from"
    ne $I11, -1, rxscan1656_done3933
    goto rxscan1656_scan3932
  rxscan1656_loop3931:
    inc rx1655_pos
    gt rx1655_pos, rx1655_eos, rx1655_fail3927
    repr_bind_attr_int rx1655_cur, rx1655_curclass, "$!from", rx1655_pos
  rxscan1656_scan3932:
    nqp_rxmark rx1655_bstack, rxscan1656_loop3931, rx1655_pos, 0
  rxscan1656_done3933:
    add $I11, rx1655_pos, 1
    gt $I11, rx1655_eos, rx1655_fail3927
    substr $S10, rx1655_tgt, rx1655_pos, 1
    ne $S10, ucs4:">", rx1655_fail3927
    add rx1655_pos, 1
    rx1655_cur."!cursor_pass"(rx1655_pos, 'backtrack'=>1)
    .return (rx1655_cur)
  rx1655_restart3926:
    repr_get_attr_obj rx1655_cstack, rx1655_cur, rx1655_curclass, "$!cstack"
  rx1655_fail3927:
    unless rx1655_bstack, rx1655_done3925
    pop $I19, rx1655_bstack
    if_null rx1655_cstack, rx1655_cstack_done3930
    unless rx1655_cstack, rx1655_cstack_done3930
    dec $I19
    set $P11, rx1655_cstack[$I19]
  rx1655_cstack_done3930:
    pop rx1655_rep, rx1655_bstack
    pop rx1655_pos, rx1655_bstack
    pop $I19, rx1655_bstack
    lt rx1655_pos, -1, rx1655_done3925
    lt rx1655_pos, 0, rx1655_fail3927
    eq $I19, 0, rx1655_fail3927
    nqp_islist $I20, rx1655_cstack
    unless $I20, rx1655_jump3928
    elements $I18, rx1655_bstack
    le $I18, 0, rx1655_cut3929
    dec $I18
    set $I18, rx1655_bstack[$I18]
  rx1655_cut3929:
    assign rx1655_cstack, $I18
  rx1655_jump3928:
    jump $I19
  rx1655_done3925:
    rx1655_cur."!cursor_fail"()
    .return (rx1655_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_240_1365879995.227") :anon :lex :outer("cuid_238_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1657_start
    .local string rx1657_tgt
    .local int rx1657_pos
    .local int rx1657_off
    .local int rx1657_eos
    .local int rx1657_rep
    .local pmc rx1657_cur
    .local pmc rx1657_curclass
    .local pmc rx1657_bstack
    .local pmc rx1657_cstack
    rx1657_start = self."!cursor_start_all"()
    set rx1657_cur, rx1657_start[0]
    set rx1657_tgt, rx1657_start[1]
    set rx1657_pos, rx1657_start[2]
    set rx1657_curclass, rx1657_start[3]
    set rx1657_bstack, rx1657_start[4]
    set $I19, rx1657_start[5]
    store_lex unicode:"$\x{a2}", rx1657_cur
    length rx1657_eos, rx1657_tgt
    eq $I19, 1, rx1657_restart3937
    gt rx1657_pos, rx1657_eos, rx1657_fail3938
    repr_get_attr_int $I11, self, rx1657_curclass, "$!from"
    ne $I11, -1, rxscan1658_done3944
    goto rxscan1658_scan3943
  rxscan1658_loop3942:
    inc rx1657_pos
    gt rx1657_pos, rx1657_eos, rx1657_fail3938
    repr_bind_attr_int rx1657_cur, rx1657_curclass, "$!from", rx1657_pos
  rxscan1658_scan3943:
    nqp_rxmark rx1657_bstack, rxscan1658_loop3942, rx1657_pos, 0
  rxscan1658_done3944:
    add $I11, rx1657_pos, 1
    gt $I11, rx1657_eos, rx1657_fail3938
    substr $S10, rx1657_tgt, rx1657_pos, 1
    ne $S10, ucs4:"{", rx1657_fail3938
    add rx1657_pos, 1
    rx1657_cur."!cursor_pass"(rx1657_pos, 'backtrack'=>1)
    .return (rx1657_cur)
  rx1657_restart3937:
    repr_get_attr_obj rx1657_cstack, rx1657_cur, rx1657_curclass, "$!cstack"
  rx1657_fail3938:
    unless rx1657_bstack, rx1657_done3936
    pop $I19, rx1657_bstack
    if_null rx1657_cstack, rx1657_cstack_done3941
    unless rx1657_cstack, rx1657_cstack_done3941
    dec $I19
    set $P11, rx1657_cstack[$I19]
  rx1657_cstack_done3941:
    pop rx1657_rep, rx1657_bstack
    pop rx1657_pos, rx1657_bstack
    pop $I19, rx1657_bstack
    lt rx1657_pos, -1, rx1657_done3936
    lt rx1657_pos, 0, rx1657_fail3938
    eq $I19, 0, rx1657_fail3938
    nqp_islist $I20, rx1657_cstack
    unless $I20, rx1657_jump3939
    elements $I18, rx1657_bstack
    le $I18, 0, rx1657_cut3940
    dec $I18
    set $I18, rx1657_bstack[$I18]
  rx1657_cut3940:
    assign rx1657_cstack, $I18
  rx1657_jump3939:
    jump $I19
  rx1657_done3936:
    rx1657_cur."!cursor_fail"()
    .return (rx1657_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<?{ }>" :subid("cuid_241_1365879995.227") :anon :lex :outer("cuid_416_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1437
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_242_1365879995.227' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1660_start
    .local string rx1660_tgt
    .local int rx1660_pos
    .local int rx1660_off
    .local int rx1660_eos
    .local int rx1660_rep
    .local pmc rx1660_cur
    .local pmc rx1660_curclass
    .local pmc rx1660_bstack
    .local pmc rx1660_cstack
    rx1660_start = self."!cursor_start_all"()
    set rx1660_cur, rx1660_start[0]
    set rx1660_tgt, rx1660_start[1]
    set rx1660_pos, rx1660_start[2]
    set rx1660_curclass, rx1660_start[3]
    set rx1660_bstack, rx1660_start[4]
    set $I19, rx1660_start[5]
    store_lex unicode:"$\x{a2}", rx1660_cur
    length rx1660_eos, rx1660_tgt
    eq $I19, 1, rx1660_restart3948
    gt rx1660_pos, rx1660_eos, rx1660_fail3949
    repr_get_attr_int $I11, self, rx1660_curclass, "$!from"
    ne $I11, -1, rxscan1661_done3955
    goto rxscan1661_scan3954
  rxscan1661_loop3953:
    inc rx1660_pos
    gt rx1660_pos, rx1660_eos, rx1660_fail3949
    repr_bind_attr_int rx1660_cur, rx1660_curclass, "$!from", rx1660_pos
  rxscan1661_scan3954:
    nqp_rxmark rx1660_bstack, rxscan1661_loop3953, rx1660_pos, 0
  rxscan1661_done3955:
    nqp_rxmark rx1660_bstack, rxcap1662_fail3957, rx1660_pos, 0
    ge rx1660_pos, rx1660_eos, rx1660_fail3949
    substr $S11, rx1660_tgt, rx1660_pos, 1
    index $I11, ucs4:"?!", $S11
    lt $I11, 0, rx1660_fail3949
    inc rx1660_pos
    .const 'Sub' $P5001 = 'cuid_242_1365879995.227' 
    capture_lex $P5001
    repr_bind_attr_int rx1660_cur, rx1660_curclass, "$!pos", rx1660_pos
    $P11 = rx1660_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1660_curclass, "$!pos"
    lt $I11, 0, rx1660_fail3949
    nqp_rxpeek $I19, rx1660_bstack, rxcap1662_fail3957
    inc $I19
    set $I11, rx1660_bstack[$I19]
    repr_bind_attr_int rx1660_cur, rx1660_curclass, "$!pos", rx1660_pos
    $P11 = rx1660_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1660_pos)
    rx1660_cstack = rx1660_cur."!cursor_capture"($P11, "zw")
    goto rxcap1662_done3956
  rxcap1662_fail3957:
    goto rx1660_fail3949
  rxcap1662_done3956:
    repr_bind_attr_int rx1660_cur, rx1660_curclass, "$!pos", rx1660_pos
    $P11 = rx1660_cur."codeblock"()
    repr_get_attr_int $I11, $P11, rx1660_curclass, "$!pos"
    lt $I11, 0, rx1660_fail3949
    nqp_rxmark rx1660_bstack, rxsubrule1665_pass3968, -1, 0
  rxsubrule1665_pass3968:
    rx1660_cstack = rx1660_cur."!cursor_capture"($P11, "codeblock")
    repr_get_attr_int rx1660_pos, $P11, rx1660_curclass, "$!pos"
    rx1660_cur."!cursor_pass"(rx1660_pos, "assertion:sym<?{ }>", 'backtrack'=>1)
    .return (rx1660_cur)
  rx1660_restart3948:
    repr_get_attr_obj rx1660_cstack, rx1660_cur, rx1660_curclass, "$!cstack"
  rx1660_fail3949:
    unless rx1660_bstack, rx1660_done3947
    pop $I19, rx1660_bstack
    if_null rx1660_cstack, rx1660_cstack_done3952
    unless rx1660_cstack, rx1660_cstack_done3952
    dec $I19
    set $P11, rx1660_cstack[$I19]
  rx1660_cstack_done3952:
    pop rx1660_rep, rx1660_bstack
    pop rx1660_pos, rx1660_bstack
    pop $I19, rx1660_bstack
    lt rx1660_pos, -1, rx1660_done3947
    lt rx1660_pos, 0, rx1660_fail3949
    eq $I19, 0, rx1660_fail3949
    nqp_islist $I20, rx1660_cstack
    unless $I20, rx1660_jump3950
    elements $I18, rx1660_bstack
    le $I18, 0, rx1660_cut3951
    dec $I18
    set $I18, rx1660_bstack[$I18]
  rx1660_cut3951:
    assign rx1660_cstack, $I18
  rx1660_jump3950:
    jump $I19
  rx1660_done3947:
    rx1660_cur."!cursor_fail"()
    .return (rx1660_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_242_1365879995.227") :anon :lex :outer("cuid_241_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1663_start
    .local string rx1663_tgt
    .local int rx1663_pos
    .local int rx1663_off
    .local int rx1663_eos
    .local int rx1663_rep
    .local pmc rx1663_cur
    .local pmc rx1663_curclass
    .local pmc rx1663_bstack
    .local pmc rx1663_cstack
    rx1663_start = self."!cursor_start_all"()
    set rx1663_cur, rx1663_start[0]
    set rx1663_tgt, rx1663_start[1]
    set rx1663_pos, rx1663_start[2]
    set rx1663_curclass, rx1663_start[3]
    set rx1663_bstack, rx1663_start[4]
    set $I19, rx1663_start[5]
    store_lex unicode:"$\x{a2}", rx1663_cur
    length rx1663_eos, rx1663_tgt
    eq $I19, 1, rx1663_restart3960
    gt rx1663_pos, rx1663_eos, rx1663_fail3961
    repr_get_attr_int $I11, self, rx1663_curclass, "$!from"
    ne $I11, -1, rxscan1664_done3967
    goto rxscan1664_scan3966
  rxscan1664_loop3965:
    inc rx1663_pos
    gt rx1663_pos, rx1663_eos, rx1663_fail3961
    repr_bind_attr_int rx1663_cur, rx1663_curclass, "$!from", rx1663_pos
  rxscan1664_scan3966:
    nqp_rxmark rx1663_bstack, rxscan1664_loop3965, rx1663_pos, 0
  rxscan1664_done3967:
    add $I11, rx1663_pos, 1
    gt $I11, rx1663_eos, rx1663_fail3961
    substr $S10, rx1663_tgt, rx1663_pos, 1
    ne $S10, ucs4:"{", rx1663_fail3961
    add rx1663_pos, 1
    rx1663_cur."!cursor_pass"(rx1663_pos, 'backtrack'=>1)
    .return (rx1663_cur)
  rx1663_restart3960:
    repr_get_attr_obj rx1663_cstack, rx1663_cur, rx1663_curclass, "$!cstack"
  rx1663_fail3961:
    unless rx1663_bstack, rx1663_done3959
    pop $I19, rx1663_bstack
    if_null rx1663_cstack, rx1663_cstack_done3964
    unless rx1663_cstack, rx1663_cstack_done3964
    dec $I19
    set $P11, rx1663_cstack[$I19]
  rx1663_cstack_done3964:
    pop rx1663_rep, rx1663_bstack
    pop rx1663_pos, rx1663_bstack
    pop $I19, rx1663_bstack
    lt rx1663_pos, -1, rx1663_done3959
    lt rx1663_pos, 0, rx1663_fail3961
    eq $I19, 0, rx1663_fail3961
    nqp_islist $I20, rx1663_cstack
    unless $I20, rx1663_jump3962
    elements $I18, rx1663_bstack
    le $I18, 0, rx1663_cut3963
    dec $I18
    set $I18, rx1663_bstack[$I18]
  rx1663_cut3963:
    assign rx1663_cstack, $I18
  rx1663_jump3962:
    jump $I19
  rx1663_done3959:
    rx1663_cur."!cursor_fail"()
    .return (rx1663_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<name>" :subid("cuid_243_1365879995.227") :anon :lex :outer("cuid_416_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1441
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_244_1365879995.227' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1666_start
    .local string rx1666_tgt
    .local int rx1666_pos
    .local int rx1666_off
    .local int rx1666_eos
    .local int rx1666_rep
    .local pmc rx1666_cur
    .local pmc rx1666_curclass
    .local pmc rx1666_bstack
    .local pmc rx1666_cstack
    rx1666_start = self."!cursor_start_all"()
    set rx1666_cur, rx1666_start[0]
    set rx1666_tgt, rx1666_start[1]
    set rx1666_pos, rx1666_start[2]
    set rx1666_curclass, rx1666_start[3]
    set rx1666_bstack, rx1666_start[4]
    set $I19, rx1666_start[5]
    store_lex unicode:"$\x{a2}", rx1666_cur
    length rx1666_eos, rx1666_tgt
    eq $I19, 1, rx1666_restart3971
    gt rx1666_pos, rx1666_eos, rx1666_fail3972
    repr_get_attr_int $I11, self, rx1666_curclass, "$!from"
    ne $I11, -1, rxscan1667_done3978
    goto rxscan1667_scan3977
  rxscan1667_loop3976:
    inc rx1666_pos
    gt rx1666_pos, rx1666_eos, rx1666_fail3972
    repr_bind_attr_int rx1666_cur, rx1666_curclass, "$!from", rx1666_pos
  rxscan1667_scan3977:
    nqp_rxmark rx1666_bstack, rxscan1667_loop3976, rx1666_pos, 0
  rxscan1667_done3978:
    repr_bind_attr_int rx1666_cur, rx1666_curclass, "$!pos", rx1666_pos
    $P11 = rx1666_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx1666_curclass, "$!pos"
    lt $I11, 0, rx1666_fail3972
    nqp_rxmark rx1666_bstack, rxsubrule1668_pass3979, -1, 0
  rxsubrule1668_pass3979:
    rx1666_cstack = rx1666_cur."!cursor_capture"($P11, "longname")
    repr_get_attr_int rx1666_pos, $P11, rx1666_curclass, "$!pos"
    nqp_rxmark rx1666_bstack, rxquantr1669_done3981, rx1666_pos, 0
  rxquantr1669_loop3980:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1670_03983
    nqp_push_label $P11, alt1670_13994
    nqp_push_label $P11, alt1670_23996
    nqp_push_label $P11, alt1670_33998
    nqp_push_label $P11, alt1670_44000
    nqp_rxmark rx1666_bstack, alt1670_end3982, -1, 0
    rx1666_cur."!alt"(rx1666_pos, "alt_nfa__42_1365879999.036", $P11)
    goto rx1666_fail3972
  alt1670_03983:
    .const 'Sub' $P5001 = 'cuid_244_1365879995.227' 
    capture_lex $P5001
    repr_bind_attr_int rx1666_cur, rx1666_curclass, "$!pos", rx1666_pos
    $P11 = rx1666_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1666_curclass, "$!pos"
    lt $I11, 0, rx1666_fail3972
    goto alt1670_end3982
  alt1670_13994:
    add $I11, rx1666_pos, 1
    gt $I11, rx1666_eos, rx1666_fail3972
    substr $S10, rx1666_tgt, rx1666_pos, 1
    ne $S10, ucs4:"=", rx1666_fail3972
    add rx1666_pos, 1
    repr_bind_attr_int rx1666_cur, rx1666_curclass, "$!pos", rx1666_pos
    $P11 = rx1666_cur."assertion"()
    repr_get_attr_int $I11, $P11, rx1666_curclass, "$!pos"
    lt $I11, 0, rx1666_fail3972
    nqp_rxmark rx1666_bstack, rxsubrule1673_pass3995, -1, 0
  rxsubrule1673_pass3995:
    rx1666_cstack = rx1666_cur."!cursor_capture"($P11, "assertion")
    repr_get_attr_int rx1666_pos, $P11, rx1666_curclass, "$!pos"
    goto alt1670_end3982
  alt1670_23996:
    add $I11, rx1666_pos, 1
    gt $I11, rx1666_eos, rx1666_fail3972
    substr $S10, rx1666_tgt, rx1666_pos, 1
    ne $S10, ucs4:":", rx1666_fail3972
    add rx1666_pos, 1
    repr_bind_attr_int rx1666_cur, rx1666_curclass, "$!pos", rx1666_pos
    $P11 = rx1666_cur."arglist"()
    repr_get_attr_int $I11, $P11, rx1666_curclass, "$!pos"
    lt $I11, 0, rx1666_fail3972
    nqp_rxmark rx1666_bstack, rxsubrule1674_pass3997, -1, 0
  rxsubrule1674_pass3997:
    rx1666_cstack = rx1666_cur."!cursor_capture"($P11, "arglist")
    repr_get_attr_int rx1666_pos, $P11, rx1666_curclass, "$!pos"
    goto alt1670_end3982
  alt1670_33998:
    add $I11, rx1666_pos, 1
    gt $I11, rx1666_eos, rx1666_fail3972
    substr $S10, rx1666_tgt, rx1666_pos, 1
    ne $S10, ucs4:"(", rx1666_fail3972
    add rx1666_pos, 1
    repr_bind_attr_int rx1666_cur, rx1666_curclass, "$!pos", rx1666_pos
    $P11 = rx1666_cur."LANG"("MAIN", "arglist")
    repr_get_attr_int $I11, $P11, rx1666_curclass, "$!pos"
    lt $I11, 0, rx1666_fail3972
    nqp_rxmark rx1666_bstack, rxsubrule1675_pass3999, -1, 0
  rxsubrule1675_pass3999:
    rx1666_cstack = rx1666_cur."!cursor_capture"($P11, "arglist")
    repr_get_attr_int rx1666_pos, $P11, rx1666_curclass, "$!pos"
    add $I11, rx1666_pos, 1
    gt $I11, rx1666_eos, rx1666_fail3972
    substr $S10, rx1666_tgt, rx1666_pos, 1
    ne $S10, ucs4:")", rx1666_fail3972
    add rx1666_pos, 1
    goto alt1670_end3982
  alt1670_44000:
    repr_bind_attr_int rx1666_cur, rx1666_curclass, "$!pos", rx1666_pos
    $P11 = rx1666_cur."normspace"()
    repr_get_attr_int $I11, $P11, rx1666_curclass, "$!pos"
    lt $I11, 0, rx1666_fail3972
    repr_get_attr_int rx1666_pos, $P11, rx1666_curclass, "$!pos"
    repr_bind_attr_int rx1666_cur, rx1666_curclass, "$!pos", rx1666_pos
    $P11 = rx1666_cur."nibbler"()
    repr_get_attr_int $I11, $P11, rx1666_curclass, "$!pos"
    lt $I11, 0, rx1666_fail3972
    nqp_rxmark rx1666_bstack, rxsubrule1677_pass4002, -1, 0
  rxsubrule1677_pass4002:
    rx1666_cstack = rx1666_cur."!cursor_capture"($P11, "nibbler")
    repr_get_attr_int rx1666_pos, $P11, rx1666_curclass, "$!pos"
    goto alt1670_end3982
  alt1670_end3982:
    nqp_rxpeek $I19, rx1666_bstack, rxquantr1669_done3981
    inc $I19
    inc $I19
    set rx1666_rep, rx1666_bstack[$I19]
    nqp_rxcommit rx1666_bstack, rxquantr1669_done3981
    inc rx1666_rep
  rxquantr1669_done3981:
    rx1666_cur."!cursor_pass"(rx1666_pos, "assertion:sym<name>", 'backtrack'=>1)
    .return (rx1666_cur)
  rx1666_restart3971:
    repr_get_attr_obj rx1666_cstack, rx1666_cur, rx1666_curclass, "$!cstack"
  rx1666_fail3972:
    unless rx1666_bstack, rx1666_done3970
    pop $I19, rx1666_bstack
    if_null rx1666_cstack, rx1666_cstack_done3975
    unless rx1666_cstack, rx1666_cstack_done3975
    dec $I19
    set $P11, rx1666_cstack[$I19]
  rx1666_cstack_done3975:
    pop rx1666_rep, rx1666_bstack
    pop rx1666_pos, rx1666_bstack
    pop $I19, rx1666_bstack
    lt rx1666_pos, -1, rx1666_done3970
    lt rx1666_pos, 0, rx1666_fail3972
    eq $I19, 0, rx1666_fail3972
    nqp_islist $I20, rx1666_cstack
    unless $I20, rx1666_jump3973
    elements $I18, rx1666_bstack
    le $I18, 0, rx1666_cut3974
    dec $I18
    set $I18, rx1666_bstack[$I18]
  rx1666_cut3974:
    assign rx1666_cstack, $I18
  rx1666_jump3973:
    jump $I19
  rx1666_done3970:
    rx1666_cur."!cursor_fail"()
    .return (rx1666_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_244_1365879995.227") :anon :lex :outer("cuid_243_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1671_start
    .local string rx1671_tgt
    .local int rx1671_pos
    .local int rx1671_off
    .local int rx1671_eos
    .local int rx1671_rep
    .local pmc rx1671_cur
    .local pmc rx1671_curclass
    .local pmc rx1671_bstack
    .local pmc rx1671_cstack
    rx1671_start = self."!cursor_start_all"()
    set rx1671_cur, rx1671_start[0]
    set rx1671_tgt, rx1671_start[1]
    set rx1671_pos, rx1671_start[2]
    set rx1671_curclass, rx1671_start[3]
    set rx1671_bstack, rx1671_start[4]
    set $I19, rx1671_start[5]
    store_lex unicode:"$\x{a2}", rx1671_cur
    length rx1671_eos, rx1671_tgt
    eq $I19, 1, rx1671_restart3986
    gt rx1671_pos, rx1671_eos, rx1671_fail3987
    repr_get_attr_int $I11, self, rx1671_curclass, "$!from"
    ne $I11, -1, rxscan1672_done3993
    goto rxscan1672_scan3992
  rxscan1672_loop3991:
    inc rx1671_pos
    gt rx1671_pos, rx1671_eos, rx1671_fail3987
    repr_bind_attr_int rx1671_cur, rx1671_curclass, "$!from", rx1671_pos
  rxscan1672_scan3992:
    nqp_rxmark rx1671_bstack, rxscan1672_loop3991, rx1671_pos, 0
  rxscan1672_done3993:
    add $I11, rx1671_pos, 1
    gt $I11, rx1671_eos, rx1671_fail3987
    substr $S10, rx1671_tgt, rx1671_pos, 1
    ne $S10, ucs4:">", rx1671_fail3987
    add rx1671_pos, 1
    rx1671_cur."!cursor_pass"(rx1671_pos, 'backtrack'=>1)
    .return (rx1671_cur)
  rx1671_restart3986:
    repr_get_attr_obj rx1671_cstack, rx1671_cur, rx1671_curclass, "$!cstack"
  rx1671_fail3987:
    unless rx1671_bstack, rx1671_done3985
    pop $I19, rx1671_bstack
    if_null rx1671_cstack, rx1671_cstack_done3990
    unless rx1671_cstack, rx1671_cstack_done3990
    dec $I19
    set $P11, rx1671_cstack[$I19]
  rx1671_cstack_done3990:
    pop rx1671_rep, rx1671_bstack
    pop rx1671_pos, rx1671_bstack
    pop $I19, rx1671_bstack
    lt rx1671_pos, -1, rx1671_done3985
    lt rx1671_pos, 0, rx1671_fail3987
    eq $I19, 0, rx1671_fail3987
    nqp_islist $I20, rx1671_cstack
    unless $I20, rx1671_jump3988
    elements $I18, rx1671_bstack
    le $I18, 0, rx1671_cut3989
    dec $I18
    set $I18, rx1671_bstack[$I18]
  rx1671_cut3989:
    assign rx1671_cstack, $I18
  rx1671_jump3988:
    jump $I19
  rx1671_done3985:
    rx1671_cur."!cursor_fail"()
    .return (rx1671_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<var>" :subid("cuid_245_1365879995.227") :anon :lex :outer("cuid_416_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1452
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1678_start
    .local string rx1678_tgt
    .local int rx1678_pos
    .local int rx1678_off
    .local int rx1678_eos
    .local int rx1678_rep
    .local pmc rx1678_cur
    .local pmc rx1678_curclass
    .local pmc rx1678_bstack
    .local pmc rx1678_cstack
    rx1678_start = self."!cursor_start_all"()
    set rx1678_cur, rx1678_start[0]
    set rx1678_tgt, rx1678_start[1]
    set rx1678_pos, rx1678_start[2]
    set rx1678_curclass, rx1678_start[3]
    set rx1678_bstack, rx1678_start[4]
    set $I19, rx1678_start[5]
    store_lex unicode:"$\x{a2}", rx1678_cur
    length rx1678_eos, rx1678_tgt
    eq $I19, 1, rx1678_restart4005
    gt rx1678_pos, rx1678_eos, rx1678_fail4006
    repr_get_attr_int $I11, self, rx1678_curclass, "$!from"
    ne $I11, -1, rxscan1679_done4012
    goto rxscan1679_scan4011
  rxscan1679_loop4010:
    inc rx1678_pos
    gt rx1678_pos, rx1678_eos, rx1678_fail4006
    repr_bind_attr_int rx1678_cur, rx1678_curclass, "$!from", rx1678_pos
  rxscan1679_scan4011:
    nqp_rxmark rx1678_bstack, rxscan1679_loop4010, rx1678_pos, 0
  rxscan1679_done4012:
    ge rx1678_pos, rx1678_eos, rx1678_fail4006
    substr $S11, rx1678_tgt, rx1678_pos, 1
    index $I11, ucs4:"$@", $S11
    lt $I11, 0, rx1678_fail4006
    repr_bind_attr_int rx1678_cur, rx1678_curclass, "$!pos", rx1678_pos
    $P11 = rx1678_cur."LANG"("MAIN", "variable")
    repr_get_attr_int $I11, $P11, rx1678_curclass, "$!pos"
    lt $I11, 0, rx1678_fail4006
    nqp_rxmark rx1678_bstack, rxsubrule1680_pass4013, -1, 0
  rxsubrule1680_pass4013:
    rx1678_cstack = rx1678_cur."!cursor_capture"($P11, "var")
    repr_get_attr_int rx1678_pos, $P11, rx1678_curclass, "$!pos"
    rx1678_cur."!cursor_pass"(rx1678_pos, "assertion:sym<var>", 'backtrack'=>1)
    .return (rx1678_cur)
  rx1678_restart4005:
    repr_get_attr_obj rx1678_cstack, rx1678_cur, rx1678_curclass, "$!cstack"
  rx1678_fail4006:
    unless rx1678_bstack, rx1678_done4004
    pop $I19, rx1678_bstack
    if_null rx1678_cstack, rx1678_cstack_done4009
    unless rx1678_cstack, rx1678_cstack_done4009
    dec $I19
    set $P11, rx1678_cstack[$I19]
  rx1678_cstack_done4009:
    pop rx1678_rep, rx1678_bstack
    pop rx1678_pos, rx1678_bstack
    pop $I19, rx1678_bstack
    lt rx1678_pos, -1, rx1678_done4004
    lt rx1678_pos, 0, rx1678_fail4006
    eq $I19, 0, rx1678_fail4006
    nqp_islist $I20, rx1678_cstack
    unless $I20, rx1678_jump4007
    elements $I18, rx1678_bstack
    le $I18, 0, rx1678_cut4008
    dec $I18
    set $I18, rx1678_bstack[$I18]
  rx1678_cut4008:
    assign rx1678_cstack, $I18
  rx1678_jump4007:
    jump $I19
  rx1678_done4004:
    rx1678_cur."!cursor_fail"()
    .return (rx1678_cur) 
.end
.HLL "nqp"
.namespace []
.sub "codeblock" :subid("cuid_246_1365879995.227") :anon :lex :outer("cuid_416_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1456
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1681_start
    .local string rx1681_tgt
    .local int rx1681_pos
    .local int rx1681_off
    .local int rx1681_eos
    .local int rx1681_rep
    .local pmc rx1681_cur
    .local pmc rx1681_curclass
    .local pmc rx1681_bstack
    .local pmc rx1681_cstack
    rx1681_start = self."!cursor_start_all"()
    set rx1681_cur, rx1681_start[0]
    set rx1681_tgt, rx1681_start[1]
    set rx1681_pos, rx1681_start[2]
    set rx1681_curclass, rx1681_start[3]
    set rx1681_bstack, rx1681_start[4]
    set $I19, rx1681_start[5]
    store_lex unicode:"$\x{a2}", rx1681_cur
    length rx1681_eos, rx1681_tgt
    eq $I19, 1, rx1681_restart4016
    gt rx1681_pos, rx1681_eos, rx1681_fail4017
    repr_get_attr_int $I11, self, rx1681_curclass, "$!from"
    ne $I11, -1, rxscan1682_done4023
    goto rxscan1682_scan4022
  rxscan1682_loop4021:
    inc rx1681_pos
    gt rx1681_pos, rx1681_eos, rx1681_fail4017
    repr_bind_attr_int rx1681_cur, rx1681_curclass, "$!from", rx1681_pos
  rxscan1682_scan4022:
    nqp_rxmark rx1681_bstack, rxscan1682_loop4021, rx1681_pos, 0
  rxscan1682_done4023:
    repr_bind_attr_int rx1681_cur, rx1681_curclass, "$!pos", rx1681_pos
    $P11 = rx1681_cur."LANG"("MAIN", "pblock")
    repr_get_attr_int $I11, $P11, rx1681_curclass, "$!pos"
    lt $I11, 0, rx1681_fail4017
    nqp_rxmark rx1681_bstack, rxsubrule1683_pass4024, -1, 0
  rxsubrule1683_pass4024:
    rx1681_cstack = rx1681_cur."!cursor_capture"($P11, "block")
    repr_get_attr_int rx1681_pos, $P11, rx1681_curclass, "$!pos"
    rx1681_cur."!cursor_pass"(rx1681_pos, "codeblock", 'backtrack'=>1)
    .return (rx1681_cur)
  rx1681_restart4016:
    repr_get_attr_obj rx1681_cstack, rx1681_cur, rx1681_curclass, "$!cstack"
  rx1681_fail4017:
    unless rx1681_bstack, rx1681_done4015
    pop $I19, rx1681_bstack
    if_null rx1681_cstack, rx1681_cstack_done4020
    unless rx1681_cstack, rx1681_cstack_done4020
    dec $I19
    set $P11, rx1681_cstack[$I19]
  rx1681_cstack_done4020:
    pop rx1681_rep, rx1681_bstack
    pop rx1681_pos, rx1681_bstack
    pop $I19, rx1681_bstack
    lt rx1681_pos, -1, rx1681_done4015
    lt rx1681_pos, 0, rx1681_fail4017
    eq $I19, 0, rx1681_fail4017
    nqp_islist $I20, rx1681_cstack
    unless $I20, rx1681_jump4018
    elements $I18, rx1681_bstack
    le $I18, 0, rx1681_cut4019
    dec $I18
    set $I18, rx1681_bstack[$I18]
  rx1681_cut4019:
    assign rx1681_cstack, $I18
  rx1681_jump4018:
    jump $I19
  rx1681_done4015:
    rx1681_cur."!cursor_fail"()
    .return (rx1681_cur) 
.end
.HLL "nqp"
.namespace []
.sub "arg" :subid("cuid_247_1365879995.227") :anon :lex :outer("cuid_416_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1460
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1684_start
    .local string rx1684_tgt
    .local int rx1684_pos
    .local int rx1684_off
    .local int rx1684_eos
    .local int rx1684_rep
    .local pmc rx1684_cur
    .local pmc rx1684_curclass
    .local pmc rx1684_bstack
    .local pmc rx1684_cstack
    rx1684_start = self."!cursor_start_all"()
    set rx1684_cur, rx1684_start[0]
    set rx1684_tgt, rx1684_start[1]
    set rx1684_pos, rx1684_start[2]
    set rx1684_curclass, rx1684_start[3]
    set rx1684_bstack, rx1684_start[4]
    set $I19, rx1684_start[5]
    store_lex unicode:"$\x{a2}", rx1684_cur
    length rx1684_eos, rx1684_tgt
    eq $I19, 1, rx1684_restart4027
    gt rx1684_pos, rx1684_eos, rx1684_fail4028
    repr_get_attr_int $I11, self, rx1684_curclass, "$!from"
    ne $I11, -1, rxscan1685_done4034
    goto rxscan1685_scan4033
  rxscan1685_loop4032:
    inc rx1684_pos
    gt rx1684_pos, rx1684_eos, rx1684_fail4028
    repr_bind_attr_int rx1684_cur, rx1684_curclass, "$!from", rx1684_pos
  rxscan1685_scan4033:
    nqp_rxmark rx1684_bstack, rxscan1685_loop4032, rx1684_pos, 0
  rxscan1685_done4034:
    repr_bind_attr_int rx1684_cur, rx1684_curclass, "$!pos", rx1684_pos
    $P11 = rx1684_cur."LANG"("MAIN", "quote_EXPR")
    repr_get_attr_int $I11, $P11, rx1684_curclass, "$!pos"
    lt $I11, 0, rx1684_fail4028
    nqp_rxmark rx1684_bstack, rxsubrule1686_pass4035, -1, 0
  rxsubrule1686_pass4035:
    rx1684_cstack = rx1684_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1684_pos, $P11, rx1684_curclass, "$!pos"
    rx1684_cur."!cursor_pass"(rx1684_pos, "arg", 'backtrack'=>1)
    .return (rx1684_cur)
  rx1684_restart4027:
    repr_get_attr_obj rx1684_cstack, rx1684_cur, rx1684_curclass, "$!cstack"
  rx1684_fail4028:
    unless rx1684_bstack, rx1684_done4026
    pop $I19, rx1684_bstack
    if_null rx1684_cstack, rx1684_cstack_done4031
    unless rx1684_cstack, rx1684_cstack_done4031
    dec $I19
    set $P11, rx1684_cstack[$I19]
  rx1684_cstack_done4031:
    pop rx1684_rep, rx1684_bstack
    pop rx1684_pos, rx1684_bstack
    pop $I19, rx1684_bstack
    lt rx1684_pos, -1, rx1684_done4026
    lt rx1684_pos, 0, rx1684_fail4028
    eq $I19, 0, rx1684_fail4028
    nqp_islist $I20, rx1684_cstack
    unless $I20, rx1684_jump4029
    elements $I18, rx1684_bstack
    le $I18, 0, rx1684_cut4030
    dec $I18
    set $I18, rx1684_bstack[$I18]
  rx1684_cut4030:
    assign rx1684_cstack, $I18
  rx1684_jump4029:
    jump $I19
  rx1684_done4026:
    rx1684_cur."!cursor_fail"()
    .return (rx1684_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_417_1365879995.227") :anon :lex :outer("cuid_374_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1469
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$var", $P101 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_166 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    set fb_tmp_166, _lex_param_1
    repr_defined $I5001, fb_tmp_166
    unless $I5001 goto if1687_else4036 
    set $P5002, fb_tmp_166[0]
    set $P5004, $P5002
    goto if1687_end4037
  if1687_else4036:
    null $P5003
    set $P5004, $P5003
  if1687_end4037:
    unless_null $P5004, vivi_16884038
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_16884038:
    set $P101, $P5004
    nqp_get_sc_object $P5006, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    type_check $I5002, $P101, $P5006
    if $I5002 goto unless1689_end4040 
.annotate 'line', 1471
    box $P5007, "Pre-increment can only work on a variable"
    die $P5007
  unless1689_end4040:
.annotate 'line', 1474
    nqp_get_sc_object $P5008, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 1477
    nqp_get_sc_object $P5009, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 1480
    nqp_get_sc_object $P5010, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 42
    $P5011 = $P5010."new"(1 :named("value"))
    $P5012 = $P5009."new"($P101, $P5011, "add_n" :named("op"))
    $P5013 = $P5008."new"($P101, $P5012, "bind" :named("op"))
    $P5014 = _lex_param_0."as_post"($P5013)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_418_1365879995.227") :anon :lex :outer("cuid_374_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1484
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$var", $P101 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_167 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    set fb_tmp_167, _lex_param_1
    repr_defined $I5001, fb_tmp_167
    unless $I5001 goto if1690_else4041 
    set $P5002, fb_tmp_167[0]
    set $P5004, $P5002
    goto if1690_end4042
  if1690_else4041:
    null $P5003
    set $P5004, $P5003
  if1690_end4042:
    unless_null $P5004, vivi_16914043
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_16914043:
    set $P101, $P5004
    nqp_get_sc_object $P5006, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    type_check $I5002, $P101, $P5006
    if $I5002 goto unless1692_end4045 
.annotate 'line', 1486
    box $P5007, "Pre-decrement can only work on a variable"
    die $P5007
  unless1692_end4045:
.annotate 'line', 1489
    nqp_get_sc_object $P5008, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 1492
    nqp_get_sc_object $P5009, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 1495
    nqp_get_sc_object $P5010, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 42
    $P5011 = $P5010."new"(1 :named("value"))
    $P5012 = $P5009."new"($P101, $P5011, "sub_n" :named("op"))
    $P5013 = $P5008."new"($P101, $P5012, "bind" :named("op"))
    $P5014 = _lex_param_0."as_post"($P5013)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_419_1365879995.227") :anon :lex :outer("cuid_374_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1499
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$var", $P101 
    .lex "$tmp", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_168 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
    set fb_tmp_168, _lex_param_1
    repr_defined $I5001, fb_tmp_168
    unless $I5001 goto if1693_else4046 
    set $P5003, fb_tmp_168[0]
    set $P5005, $P5003
    goto if1693_end4047
  if1693_else4046:
    null $P5004
    set $P5005, $P5004
  if1693_end4047:
    unless_null $P5005, vivi_16944048
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5005, $P5006
  vivi_16944048:
    set $P101, $P5005
.annotate 'line', 1501
    nqp_get_sc_object $P5007, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    $P5008 = $P5007."unique"("tmp")
    set $P102, $P5008
    nqp_get_sc_object $P5009, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    type_check $I5002, $P101, $P5009
    if $I5002 goto unless1695_end4050 
.annotate 'line', 1502
    box $P5010, "Post-increment can only work on a variable"
    die $P5010
  unless1695_end4050:
.annotate 'line', 1505
    nqp_get_sc_object $P5011, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 98
.annotate 'line', 1507
    nqp_get_sc_object $P5012, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 1509
    nqp_get_sc_object $P5013, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5014 = $P101."returns"()
    $P5015 = $P5013."new"($P102 :named("name"), "local" :named("scope"), "var" :named("decl"), $P5014 :named("returns"))
    $P5016 = $P5012."new"($P5015, $P101, "bind" :named("op"))
.annotate 'line', 1512
    nqp_get_sc_object $P5017, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 1515
    nqp_get_sc_object $P5018, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 1517
    nqp_get_sc_object $P5019, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5020 = $P101."returns"()
    $P5021 = $P5019."new"($P102 :named("name"), "local" :named("scope"), $P5020 :named("returns"))
.annotate 'line', 1518
    nqp_get_sc_object $P5022, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 42
    $P5023 = $P5022."new"(1 :named("value"))
    $P5024 = $P5018."new"($P5021, $P5023, "add_n" :named("op"))
    $P5025 = $P5017."new"($P101, $P5024, "bind" :named("op"))
    $P5026 = $P5011."new"($P5016, $P5025, 0 :named("resultchild"))
    $P5027 = _lex_param_0."as_post"($P5026)
    .return ($P5027) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_420_1365879995.227") :anon :lex :outer("cuid_374_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1523
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$var", $P101 
    .lex "$tmp", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_169 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
    set fb_tmp_169, _lex_param_1
    repr_defined $I5001, fb_tmp_169
    unless $I5001 goto if1696_else4051 
    set $P5003, fb_tmp_169[0]
    set $P5005, $P5003
    goto if1696_end4052
  if1696_else4051:
    null $P5004
    set $P5005, $P5004
  if1696_end4052:
    unless_null $P5005, vivi_16974053
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5005, $P5006
  vivi_16974053:
    set $P101, $P5005
.annotate 'line', 1525
    nqp_get_sc_object $P5007, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    $P5008 = $P5007."unique"("tmp")
    set $P102, $P5008
    nqp_get_sc_object $P5009, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    type_check $I5002, $P101, $P5009
    if $I5002 goto unless1698_end4055 
.annotate 'line', 1526
    box $P5010, "Post-decrement can only work on a variable"
    die $P5010
  unless1698_end4055:
.annotate 'line', 1529
    nqp_get_sc_object $P5011, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 98
.annotate 'line', 1531
    nqp_get_sc_object $P5012, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 1533
    nqp_get_sc_object $P5013, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5014 = $P5013."new"($P102 :named("name"), "local" :named("scope"), "var" :named("decl"))
    $P5015 = $P5012."new"($P5014, $P101, "bind" :named("op"))
.annotate 'line', 1536
    nqp_get_sc_object $P5016, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 1539
    nqp_get_sc_object $P5017, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 1541
    nqp_get_sc_object $P5018, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5019 = $P5018."new"($P102 :named("name"), "local" :named("scope"))
.annotate 'line', 1542
    nqp_get_sc_object $P5020, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 42
    $P5021 = $P5020."new"(1 :named("value"))
    $P5022 = $P5017."new"($P5019, $P5021, "sub_n" :named("op"))
    $P5023 = $P5016."new"($P101, $P5022, "bind" :named("op"))
    $P5024 = $P5011."new"($P5015, $P5023, 0 :named("resultchild"))
    $P5025 = _lex_param_0."as_post"($P5024)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_421_1365879995.227") :anon :lex :outer("cuid_374_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1547
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_170 
.annotate 'line', 1548
    set fb_tmp_170, _lex_param_1
    repr_defined $I5001, fb_tmp_170
    unless $I5001 goto if1699_else4056 
    set $P5001, fb_tmp_170[0]
    set $P5003, $P5001
    goto if1699_end4057
  if1699_else4056:
    null $P5002
    set $P5003, $P5002
  if1699_end4057:
    unless_null $P5003, vivi_17004058
    nqp_get_sc_object $P5004, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5003, $P5004
  vivi_17004058:
    $P5005 = _lex_param_0."as_post"($P5003, "n" :named("want"))
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_422_1365879995.227") :anon :lex :outer("cuid_374_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1551
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_171 
.annotate 'line', 1552
    set fb_tmp_171, _lex_param_1
    repr_defined $I5001, fb_tmp_171
    unless $I5001 goto if1701_else4059 
    set $P5001, fb_tmp_171[0]
    set $P5003, $P5001
    goto if1701_end4060
  if1701_else4059:
    null $P5002
    set $P5003, $P5002
  if1701_end4060:
    unless_null $P5003, vivi_17024061
    nqp_get_sc_object $P5004, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5003, $P5004
  vivi_17024061:
    $P5005 = _lex_param_0."as_post"($P5003, "s" :named("want"))
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_423_1365879995.227") :anon :lex :outer("cuid_374_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1555
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_172 
    .local pmc fb_tmp_173 
.annotate 'line', 1556
    nqp_get_sc_object $P5001, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 1558
    nqp_get_sc_object $P5002, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    set fb_tmp_172, _lex_param_1
    repr_defined $I5001, fb_tmp_172
    unless $I5001 goto if1703_else4062 
    set $P5003, fb_tmp_172[0]
    set $P5005, $P5003
    goto if1703_end4063
  if1703_else4062:
    null $P5004
    set $P5005, $P5004
  if1703_end4063:
    unless_null $P5005, vivi_17044064
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5005, $P5006
  vivi_17044064:
    $P5007 = $P5002."new"($P5005, "where" :named("op"))
.annotate 'line', 1559
    nqp_get_sc_object $P5008, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    set fb_tmp_173, _lex_param_1
    repr_defined $I5002, fb_tmp_173
    unless $I5002 goto if1705_else4065 
    set $P5009, fb_tmp_173[1]
    set $P5011, $P5009
    goto if1705_end4066
  if1705_else4065:
    null $P5010
    set $P5011, $P5010
  if1705_end4066:
    unless_null $P5011, vivi_17064067
    nqp_get_sc_object $P5012, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5011, $P5012
  vivi_17064067:
    $P5013 = $P5008."new"($P5011, "where" :named("op"))
    $P5014 = $P5001."new"($P5007, $P5013, "iseq_i" :named("op"))
    $P5015 = _lex_param_0."as_post"($P5014)
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_424_1365879995.227") :anon :lex :outer("cuid_374_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1563
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$res", $P101 
    .lex "$ops", $P102 
    .lex "$arg_post", $P103 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_174 
    .local pmc fb_tmp_175 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P103, $P5003
.annotate 'line', 1564
    find_dynamic_lex $P5004, "$*REGALLOC"
    unless_null $P5004, fallback4068
    nqp_get_sc_object $P5006, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5005, $P5006
    set fb_tmp_174, $P5005
    repr_defined $I5001, fb_tmp_174
    unless $I5001 goto if1707_else4069 
    set $P5007, fb_tmp_174["$REGALLOC"]
    set $P5009, $P5007
    goto if1707_end4070
  if1707_else4069:
    null $P5008
    set $P5009, $P5008
  if1707_end4070:
    unless_null $P5009, vivi_17084071
    nqp_get_sc_object $P5010, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5009, $P5010
  vivi_17084071:
    unless_null $P5009, vivi_17094072
    die "Contextual $*REGALLOC not found"
    box $P5011, "Contextual $*REGALLOC not found"
    set $P5009, $P5011
  vivi_17094072:
    set $P5004, $P5009
  fallback4068:
    $P5012 = $P5004."fresh_i"()
    set $P101, $P5012
.annotate 'line', 1565
    nqp_get_sc_object $P5013, "1BD2754E13656C3F57411A23AD0833C5FE250812-1365879974.339", 31
    $P5014 = $P5013."new"($P101 :named("result"))
    set $P102, $P5014
.annotate 'line', 1566
    set fb_tmp_175, _lex_param_1
    repr_defined $I5002, fb_tmp_175
    unless $I5002 goto if1710_else4073 
    set $P5015, fb_tmp_175[0]
    set $P5017, $P5015
    goto if1710_end4074
  if1710_else4073:
    null $P5016
    set $P5017, $P5016
  if1710_end4074:
    unless_null $P5017, vivi_17114075
    nqp_get_sc_object $P5018, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5017, $P5018
  vivi_17114075:
    $P5019 = _lex_param_0."as_post"($P5017)
    set $P103, $P5019
.annotate 'line', 1567
    $P5020 = $P103."result"()
    $P5021 = _lex_param_0."infer_type"($P5020)
    set $S5002, $P5021
    downcase $S5001, $S5002
    iseq $I5003, $S5001, "i"
    unless $I5003 goto if1712_else4076 
.annotate 'line', 1568
    $P102."push"($P103)
.annotate 'line', 1569
    $P5022 = $P102."push_pirop"("not", $P101, $P103)
    goto if1712_end4077
  if1712_else4076:
.annotate 'line', 1571
.annotate 'line', 1572
    $P5023 = _lex_param_0."coerce"($P103, "P")
    set $P103, $P5023
.annotate 'line', 1573
    $P102."push"($P103)
.annotate 'line', 1574
    $P5024 = $P102."push_pirop"("isfalse", $P101, $P103)
  if1712_end4077:
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_426_1365879995.227") :anon :lex :outer("cuid_374_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1580
    .const 'Sub' $P5124 = 'cuid_425_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_429_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_432_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_433_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_436_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_438_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_439_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_440_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_442_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_443_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_449_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_248_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_249_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_250_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_251_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_252_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_253_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_254_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_255_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_256_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_257_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_258_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_259_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_260_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_261_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_262_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_263_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_264_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_265_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_266_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_267_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_268_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_269_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_270_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_271_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_272_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_273_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_274_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_275_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_276_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_277_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_278_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_279_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_280_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_281_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_282_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_283_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_284_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_285_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_286_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_287_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_288_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_289_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_290_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_291_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_292_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_293_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_294_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_295_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_296_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_297_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_298_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_299_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_300_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_301_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_302_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_303_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_304_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_305_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_306_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_307_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_308_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_309_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_310_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_311_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_312_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_313_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_314_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_315_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_316_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_317_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_318_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_319_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_320_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_321_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_322_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_323_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_324_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_325_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_326_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_327_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_328_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_329_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_330_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_331_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_332_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_333_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_334_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_335_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_336_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_337_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_338_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_339_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_340_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_341_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_342_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_343_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_344_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_345_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_346_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_347_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_348_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_349_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_350_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_351_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_352_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_353_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_354_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_355_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_356_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_357_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_358_1365879995.227' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_359_1365879995.227' 
    capture_lex $P5124 
    .lex "&xblock_immediate", $P101 
    .lex "&block_immediate", $P102 
    .lex "&default_for", $P103 
    .lex "&default_value_for_prim", $P104 
    .lex "&colonpair_str", $P105 
    .lex "&import_HOW_exports", $P106 
    .lex "&set_block_handler", $P107 
    .lex "&only_star_block", $P108 
    .lex "&attach_multi_signature", $P109 
    .lex "&wrap_return_handler", $P110 
    .lex "&lexical_package_lookup", $P111 
    .lex "$?PACKAGE", $P112 
    .lex "$?CLASS", $P113 
    .const 'Sub' $P5001 = 'cuid_425_1365879995.227' 
    capture_lex $P5001
    set $P101, $P5001
    .const 'Sub' $P5002 = 'cuid_429_1365879995.227' 
    capture_lex $P5002
    set $P102, $P5002
    .const 'Sub' $P5003 = 'cuid_432_1365879995.227' 
    capture_lex $P5003
    set $P103, $P5003
    .const 'Sub' $P5004 = 'cuid_433_1365879995.227' 
    capture_lex $P5004
    set $P104, $P5004
    .const 'Sub' $P5005 = 'cuid_436_1365879995.227' 
    capture_lex $P5005
    set $P105, $P5005
    .const 'Sub' $P5006 = 'cuid_438_1365879995.227' 
    capture_lex $P5006
    set $P106, $P5006
    .const 'Sub' $P5007 = 'cuid_439_1365879995.227' 
    capture_lex $P5007
    set $P107, $P5007
    .const 'Sub' $P5008 = 'cuid_440_1365879995.227' 
    capture_lex $P5008
    set $P108, $P5008
    .const 'Sub' $P5009 = 'cuid_442_1365879995.227' 
    capture_lex $P5009
    set $P109, $P5009
    .const 'Sub' $P5010 = 'cuid_443_1365879995.227' 
    capture_lex $P5010
    set $P110, $P5010
    .const 'Sub' $P5011 = 'cuid_449_1365879995.227' 
    capture_lex $P5011
    set $P111, $P5011
    .const 'Sub' $P5012 = 'cuid_248_1365879995.227' 
    capture_lex $P5012
    .const 'Sub' $P5013 = 'cuid_249_1365879995.227' 
    capture_lex $P5013
    .const 'Sub' $P5014 = 'cuid_250_1365879995.227' 
    capture_lex $P5014
    .const 'Sub' $P5015 = 'cuid_251_1365879995.227' 
    capture_lex $P5015
    .const 'Sub' $P5016 = 'cuid_252_1365879995.227' 
    capture_lex $P5016
    .const 'Sub' $P5017 = 'cuid_253_1365879995.227' 
    capture_lex $P5017
    .const 'Sub' $P5018 = 'cuid_254_1365879995.227' 
    capture_lex $P5018
    .const 'Sub' $P5019 = 'cuid_255_1365879995.227' 
    capture_lex $P5019
    .const 'Sub' $P5020 = 'cuid_256_1365879995.227' 
    capture_lex $P5020
    .const 'Sub' $P5021 = 'cuid_257_1365879995.227' 
    capture_lex $P5021
    .const 'Sub' $P5022 = 'cuid_258_1365879995.227' 
    capture_lex $P5022
    .const 'Sub' $P5023 = 'cuid_259_1365879995.227' 
    capture_lex $P5023
    .const 'Sub' $P5024 = 'cuid_260_1365879995.227' 
    capture_lex $P5024
    .const 'Sub' $P5025 = 'cuid_261_1365879995.227' 
    capture_lex $P5025
    .const 'Sub' $P5026 = 'cuid_262_1365879995.227' 
    capture_lex $P5026
    .const 'Sub' $P5027 = 'cuid_263_1365879995.227' 
    capture_lex $P5027
    .const 'Sub' $P5028 = 'cuid_264_1365879995.227' 
    capture_lex $P5028
    .const 'Sub' $P5029 = 'cuid_265_1365879995.227' 
    capture_lex $P5029
    .const 'Sub' $P5030 = 'cuid_266_1365879995.227' 
    capture_lex $P5030
    .const 'Sub' $P5031 = 'cuid_267_1365879995.227' 
    capture_lex $P5031
    .const 'Sub' $P5032 = 'cuid_268_1365879995.227' 
    capture_lex $P5032
    .const 'Sub' $P5033 = 'cuid_269_1365879995.227' 
    capture_lex $P5033
    .const 'Sub' $P5034 = 'cuid_270_1365879995.227' 
    capture_lex $P5034
    .const 'Sub' $P5035 = 'cuid_271_1365879995.227' 
    capture_lex $P5035
    .const 'Sub' $P5036 = 'cuid_272_1365879995.227' 
    capture_lex $P5036
    .const 'Sub' $P5037 = 'cuid_273_1365879995.227' 
    capture_lex $P5037
    .const 'Sub' $P5038 = 'cuid_274_1365879995.227' 
    capture_lex $P5038
    .const 'Sub' $P5039 = 'cuid_275_1365879995.227' 
    capture_lex $P5039
    .const 'Sub' $P5040 = 'cuid_276_1365879995.227' 
    capture_lex $P5040
    .const 'Sub' $P5041 = 'cuid_277_1365879995.227' 
    capture_lex $P5041
    .const 'Sub' $P5042 = 'cuid_278_1365879995.227' 
    capture_lex $P5042
    .const 'Sub' $P5043 = 'cuid_279_1365879995.227' 
    capture_lex $P5043
    .const 'Sub' $P5044 = 'cuid_280_1365879995.227' 
    capture_lex $P5044
    .const 'Sub' $P5045 = 'cuid_281_1365879995.227' 
    capture_lex $P5045
    .const 'Sub' $P5046 = 'cuid_282_1365879995.227' 
    capture_lex $P5046
    .const 'Sub' $P5047 = 'cuid_283_1365879995.227' 
    capture_lex $P5047
    .const 'Sub' $P5048 = 'cuid_284_1365879995.227' 
    capture_lex $P5048
    .const 'Sub' $P5049 = 'cuid_285_1365879995.227' 
    capture_lex $P5049
    .const 'Sub' $P5050 = 'cuid_286_1365879995.227' 
    capture_lex $P5050
    .const 'Sub' $P5051 = 'cuid_287_1365879995.227' 
    capture_lex $P5051
    .const 'Sub' $P5052 = 'cuid_288_1365879995.227' 
    capture_lex $P5052
    .const 'Sub' $P5053 = 'cuid_289_1365879995.227' 
    capture_lex $P5053
    .const 'Sub' $P5054 = 'cuid_290_1365879995.227' 
    capture_lex $P5054
    .const 'Sub' $P5055 = 'cuid_291_1365879995.227' 
    capture_lex $P5055
    .const 'Sub' $P5056 = 'cuid_292_1365879995.227' 
    capture_lex $P5056
    .const 'Sub' $P5057 = 'cuid_293_1365879995.227' 
    capture_lex $P5057
    .const 'Sub' $P5058 = 'cuid_294_1365879995.227' 
    capture_lex $P5058
    .const 'Sub' $P5059 = 'cuid_295_1365879995.227' 
    capture_lex $P5059
    .const 'Sub' $P5060 = 'cuid_296_1365879995.227' 
    capture_lex $P5060
    .const 'Sub' $P5061 = 'cuid_297_1365879995.227' 
    capture_lex $P5061
    .const 'Sub' $P5062 = 'cuid_298_1365879995.227' 
    capture_lex $P5062
    .const 'Sub' $P5063 = 'cuid_299_1365879995.227' 
    capture_lex $P5063
    .const 'Sub' $P5064 = 'cuid_300_1365879995.227' 
    capture_lex $P5064
    .const 'Sub' $P5065 = 'cuid_301_1365879995.227' 
    capture_lex $P5065
    .const 'Sub' $P5066 = 'cuid_302_1365879995.227' 
    capture_lex $P5066
    .const 'Sub' $P5067 = 'cuid_303_1365879995.227' 
    capture_lex $P5067
    .const 'Sub' $P5068 = 'cuid_304_1365879995.227' 
    capture_lex $P5068
    .const 'Sub' $P5069 = 'cuid_305_1365879995.227' 
    capture_lex $P5069
    .const 'Sub' $P5070 = 'cuid_306_1365879995.227' 
    capture_lex $P5070
    .const 'Sub' $P5071 = 'cuid_307_1365879995.227' 
    capture_lex $P5071
    .const 'Sub' $P5072 = 'cuid_308_1365879995.227' 
    capture_lex $P5072
    .const 'Sub' $P5073 = 'cuid_309_1365879995.227' 
    capture_lex $P5073
    .const 'Sub' $P5074 = 'cuid_310_1365879995.227' 
    capture_lex $P5074
    .const 'Sub' $P5075 = 'cuid_311_1365879995.227' 
    capture_lex $P5075
    .const 'Sub' $P5076 = 'cuid_312_1365879995.227' 
    capture_lex $P5076
    .const 'Sub' $P5077 = 'cuid_313_1365879995.227' 
    capture_lex $P5077
    .const 'Sub' $P5078 = 'cuid_314_1365879995.227' 
    capture_lex $P5078
    .const 'Sub' $P5079 = 'cuid_315_1365879995.227' 
    capture_lex $P5079
    .const 'Sub' $P5080 = 'cuid_316_1365879995.227' 
    capture_lex $P5080
    .const 'Sub' $P5081 = 'cuid_317_1365879995.227' 
    capture_lex $P5081
    .const 'Sub' $P5082 = 'cuid_318_1365879995.227' 
    capture_lex $P5082
    .const 'Sub' $P5083 = 'cuid_319_1365879995.227' 
    capture_lex $P5083
    .const 'Sub' $P5084 = 'cuid_320_1365879995.227' 
    capture_lex $P5084
    .const 'Sub' $P5085 = 'cuid_321_1365879995.227' 
    capture_lex $P5085
    .const 'Sub' $P5086 = 'cuid_322_1365879995.227' 
    capture_lex $P5086
    .const 'Sub' $P5087 = 'cuid_323_1365879995.227' 
    capture_lex $P5087
    .const 'Sub' $P5088 = 'cuid_324_1365879995.227' 
    capture_lex $P5088
    .const 'Sub' $P5089 = 'cuid_325_1365879995.227' 
    capture_lex $P5089
    .const 'Sub' $P5090 = 'cuid_326_1365879995.227' 
    capture_lex $P5090
    .const 'Sub' $P5091 = 'cuid_327_1365879995.227' 
    capture_lex $P5091
    .const 'Sub' $P5092 = 'cuid_328_1365879995.227' 
    capture_lex $P5092
    .const 'Sub' $P5093 = 'cuid_329_1365879995.227' 
    capture_lex $P5093
    .const 'Sub' $P5094 = 'cuid_330_1365879995.227' 
    capture_lex $P5094
    .const 'Sub' $P5095 = 'cuid_331_1365879995.227' 
    capture_lex $P5095
    .const 'Sub' $P5096 = 'cuid_332_1365879995.227' 
    capture_lex $P5096
    .const 'Sub' $P5097 = 'cuid_333_1365879995.227' 
    capture_lex $P5097
    .const 'Sub' $P5098 = 'cuid_334_1365879995.227' 
    capture_lex $P5098
    .const 'Sub' $P5099 = 'cuid_335_1365879995.227' 
    capture_lex $P5099
    .const 'Sub' $P5100 = 'cuid_336_1365879995.227' 
    capture_lex $P5100
    .const 'Sub' $P5101 = 'cuid_337_1365879995.227' 
    capture_lex $P5101
    .const 'Sub' $P5102 = 'cuid_338_1365879995.227' 
    capture_lex $P5102
    .const 'Sub' $P5103 = 'cuid_339_1365879995.227' 
    capture_lex $P5103
    .const 'Sub' $P5104 = 'cuid_340_1365879995.227' 
    capture_lex $P5104
    .const 'Sub' $P5105 = 'cuid_341_1365879995.227' 
    capture_lex $P5105
    .const 'Sub' $P5106 = 'cuid_342_1365879995.227' 
    capture_lex $P5106
    .const 'Sub' $P5107 = 'cuid_343_1365879995.227' 
    capture_lex $P5107
    .const 'Sub' $P5108 = 'cuid_344_1365879995.227' 
    capture_lex $P5108
    .const 'Sub' $P5109 = 'cuid_345_1365879995.227' 
    capture_lex $P5109
    .const 'Sub' $P5110 = 'cuid_346_1365879995.227' 
    capture_lex $P5110
    .const 'Sub' $P5111 = 'cuid_347_1365879995.227' 
    capture_lex $P5111
    .const 'Sub' $P5112 = 'cuid_348_1365879995.227' 
    capture_lex $P5112
    .const 'Sub' $P5113 = 'cuid_349_1365879995.227' 
    capture_lex $P5113
    .const 'Sub' $P5114 = 'cuid_350_1365879995.227' 
    capture_lex $P5114
    .const 'Sub' $P5115 = 'cuid_351_1365879995.227' 
    capture_lex $P5115
    .const 'Sub' $P5116 = 'cuid_352_1365879995.227' 
    capture_lex $P5116
    .const 'Sub' $P5117 = 'cuid_353_1365879995.227' 
    capture_lex $P5117
    .const 'Sub' $P5118 = 'cuid_354_1365879995.227' 
    capture_lex $P5118
    .const 'Sub' $P5119 = 'cuid_355_1365879995.227' 
    capture_lex $P5119
    .const 'Sub' $P5120 = 'cuid_356_1365879995.227' 
    capture_lex $P5120
    .const 'Sub' $P5121 = 'cuid_357_1365879995.227' 
    capture_lex $P5121
    .const 'Sub' $P5122 = 'cuid_358_1365879995.227' 
    capture_lex $P5122
    .const 'Sub' $P5123 = 'cuid_359_1365879995.227' 
    capture_lex $P5123
    .return ($P111) 
.end
.HLL "nqp"
.namespace []
.sub "xblock_immediate" :subid("cuid_425_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1581
    .param pmc _lex_param_0 
    .lex "$xblock", _lex_param_0 
    .local pmc fb_tmp_176 
.annotate 'line', 1582
    set fb_tmp_176, _lex_param_0
    repr_defined $I5001, fb_tmp_176
    unless $I5001 goto if1713_else4078 
    set $P5001, fb_tmp_176[1]
    set $P5003, $P5001
    goto if1713_end4079
  if1713_else4078:
    null $P5002
    set $P5003, $P5002
  if1713_end4079:
    unless_null $P5003, vivi_17144080
    nqp_get_sc_object $P5004, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5003, $P5004
  vivi_17144080:
    $P5005 = "&block_immediate"($P5003)
    set _lex_param_0[1], $P5005
    .return (_lex_param_0) 
.end
.HLL "nqp"
.namespace []
.sub "block_immediate" :subid("cuid_429_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1586
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_428_1365879995.227' 
    capture_lex $P5004 
    .lex "$block", _lex_param_0 
.annotate 'line', 1587
    _lex_param_0."blocktype"("immediate")
.annotate 'line', 1588
    $P5001 = _lex_param_0."symtable"()
    if $P5001 goto unless1715_end4082 
    .const 'Sub' $P5002 = 'cuid_428_1365879995.227' 
    capture_lex $P5002
    $P5003 = $P5002()
  unless1715_end4082:
    .return (_lex_param_0) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_428_1365879995.227") :anon :lex :outer("cuid_429_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1588
    .const 'Sub' $P5013 = 'cuid_427_1365879995.227' 
    capture_lex $P5013 
    .lex "$stmts", $P101 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
.annotate 'line', 1589
    nqp_get_sc_object $P5002, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 93
    find_lex $P5003, "$block"
    $P5004 = $P5003."node"()
    $P5005 = $P5002."new"($P5004 :named("node"))
    set $P101, $P5005
.annotate 'line', 1590
    find_lex $P5009, "$block"
    $P5010 = $P5009."list"()
    set $P5006, $P5010
    iter $P5008, $P5010
  for_next4083:
    unless $P5008, for_done4085
    shift $P5012, $P5008
  for_redo4084:
    .const 'Sub' $P5011 = 'cuid_427_1365879995.227' 
    capture_lex $P5011
    $P5006 = $P5011($P5012)
    goto for_next4083
  for_done4085:
    store_lex "$block", $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_427_1365879995.227") :anon :lex :outer("cuid_428_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1590
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "$stmts"
    $P5002 = $P5001."push"(_lex_param_0)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "default_for" :subid("cuid_432_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1596
    .param pmc _lex_param_0 
    .const 'Sub' $P5009 = 'cuid_431_1365879995.227' 
    capture_lex $P5009 
    .lex "$sigil", _lex_param_0 
    set $S5001, _lex_param_0
    iseq $I5001, $S5001, "@"
    unless $I5001 goto if1716_else4086 
.annotate 'line', 1597
.annotate 'line', 1598
    nqp_get_sc_object $P5001, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    $P5002 = $P5001."new"("list" :named("op"))
    set $P5008, $P5002
    goto if1716_end4087
  if1716_else4086:
    set $S5002, _lex_param_0
    iseq $I5002, $S5002, "%"
    unless $I5002 goto if1717_else4088 
.annotate 'line', 1600
.annotate 'line', 1601
    nqp_get_sc_object $P5003, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    $P5004 = $P5003."new"("hash" :named("op"))
    set $P5007, $P5004
    goto if1717_end4089
  if1717_else4088:
    .const 'Sub' $P5005 = 'cuid_431_1365879995.227' 
    capture_lex $P5005
    $P5006 = $P5005()
    set $P5007, $P5006
  if1717_end4089:
    set $P5008, $P5007
  if1716_end4087:
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_431_1365879995.227") :anon :lex :outer("cuid_432_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1603
    .const 'Sub' $P5020 = 'cuid_430_1365879995.227' 
    capture_lex $P5020 
    .lex "$default", $P101 
    .local pmc fb_tmp_177 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    new $P5018, 'ExceptionHandler'
    set_label $P5018, catch_handler_17244098
    $P5018.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5018
.annotate 'line', 1605
    new $P5016, 'ExceptionHandler'
    set_label $P5016, catch_handler_17224096
    $P5016.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5016
.annotate 'line', 1606
    nqp_get_sc_object $P5002, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 61
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback4090
    nqp_get_sc_object $P5005, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5004, $P5005
    set fb_tmp_177, $P5004
    repr_defined $I5001, fb_tmp_177
    unless $I5001 goto if1718_else4091 
    set $P5006, fb_tmp_177["$W"]
    set $P5008, $P5006
    goto if1718_end4092
  if1718_else4091:
    null $P5007
    set $P5008, $P5007
  if1718_end4092:
    unless_null $P5008, vivi_17194093
    nqp_get_sc_object $P5009, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5008, $P5009
  vivi_17194093:
    unless_null $P5008, vivi_17204094
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_17204094:
    set $P5003, $P5008
  fallback4090:
    new $P5011, 'QRPA'
    box $P5012, "NQPMu"
    push $P5011, $P5012
    $P5013 = $P5003."find_sym"($P5011)
    $P5014 = $P5002."new"($P5013 :named("value"))
    set $P101, $P5014
    nqp_get_sc_object $P5015, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5017, $P5015
    pop_eh 
    goto skip_handler_17214095
  catch_handler_17224096:
    .get_results ($P5016) 
    .const 'Sub' $P10001 = 'cuid_430_1365879995.227' 
    capture_lex $P10001
    $P10001($P5016)
    set $I10001, 1
    set $P5016["handled"], $I10001
    nqp_get_sc_object $P10002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    finalize $P5016
    pop_upto_eh $P5016
    pop_eh 
    set $P5017, $P10002
    goto skip_handler_17214095
  skip_handler_17214095:
    set $P5019, $P5017
    pop_eh 
    goto skip_handler_17234097
  catch_handler_17244098:
    .get_results ($P5018) 
    set $I10001, 1
    set $P5018["handled"], $I10001
    nqp_get_sc_object $P10001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    finalize $P5018
    pop_upto_eh $P5018
    pop_eh 
    set $P5019, $P10001
    goto skip_handler_17234097
  skip_handler_17234097:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_430_1365879995.227") :anon :lex :outer("cuid_431_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1607
    .param pmc _lex_param_0 
    .lex "$!", $P101 
    .lex "$_", _lex_param_0 
    set $P101, _lex_param_0
    nqp_get_sc_object $P5001, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    $P5002 = $P5001."new"("null" :named("op"))
    store_lex "$default", $P5002
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "default_value_for_prim" :subid("cuid_433_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1613
    .param pmc _lex_param_0 
    .lex "$prim", _lex_param_0 
    set $N5001, _lex_param_0
    set $N5002, 1
    iseq $I5001, $N5001, $N5002
    unless $I5001 goto if1725_else4099 
.annotate 'line', 1614
    nqp_get_sc_object $P5001, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 42
    $P5002 = $P5001."new"(0 :named("value"))
    set $P5008, $P5002
    goto if1725_end4100
  if1725_else4099:
    set $N5003, _lex_param_0
    set $N5004, 2
    iseq $I5002, $N5003, $N5004
    unless $I5002 goto if1726_else4101 
.annotate 'line', 1615
    nqp_get_sc_object $P5003, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 47
    $P5004 = $P5003."new"(0.0 :named("value"))
    set $P5007, $P5004
    goto if1726_end4102
  if1726_else4101:
.annotate 'line', 1616
    nqp_get_sc_object $P5005, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 52
    $P5006 = $P5005."new"("" :named("value"))
    set $P5007, $P5006
  if1726_end4102:
    set $P5008, $P5007
  if1725_end4100:
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "colonpair_str" :subid("cuid_436_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1628
    .param pmc _lex_param_0 
    .const 'Sub' $P5006 = 'cuid_435_1365879995.227' 
    capture_lex $P5006 
    .lex "$ast", _lex_param_0 
    nqp_get_sc_object $P5001, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    type_check $I5001, _lex_param_0, $P5001
    unless $I5001 goto if1727_else4103 
    .const 'Sub' $P5002 = 'cuid_435_1365879995.227' 
    capture_lex $P5002
    $P5003 = $P5002()
    set $P5005, $P5003
    goto if1727_end4104
  if1727_else4103:
.annotate 'line', 1633
.annotate 'line', 1634
    $P5004 = _lex_param_0."value"()
    set $P5005, $P5004
  if1727_end4104:
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_435_1365879995.227") :anon :lex :outer("cuid_436_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1629
    .const 'Sub' $P5009 = 'cuid_434_1365879995.227' 
    capture_lex $P5009 
    .lex "@parts", $P101 
    new $P5001, 'QRPA'
    set $P101, $P5001
.annotate 'line', 1631
    find_lex $P5005, "$ast"
    $P5006 = $P5005."list"()
    set $P5002, $P5006
    iter $P5004, $P5006
  for_next4105:
    unless $P5004, for_done4107
    shift $P5008, $P5004
  for_redo4106:
    .const 'Sub' $P5007 = 'cuid_434_1365879995.227' 
    capture_lex $P5007
    $P5002 = $P5007($P5008)
    goto for_next4105
  for_done4107:
    join $S5001, " ", $P101
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_434_1365879995.227") :anon :lex :outer("cuid_435_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1631
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "@parts"
    $P5002 = _lex_param_0."value"()
    $P5003 = $P5001."push"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "import_HOW_exports" :subid("cuid_438_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1820
    .param pmc _lex_param_0 
    .const 'Sub' $P5013 = 'cuid_437_1365879995.227' 
    capture_lex $P5013 
    .lex "$UNIT", _lex_param_0 
    .local pmc fb_tmp_178 
    exists $I5001, _lex_param_0["EXPORTHOW"]
    box $P5012, $I5001
    set $P5011, $P5012
    unless $I5001 goto if1728_end4109 
.annotate 'line', 1822
    set fb_tmp_178, _lex_param_0
    repr_defined $I5002, fb_tmp_178
    unless $I5002 goto if1729_else4110 
    set $P5005, fb_tmp_178["EXPORTHOW"]
    set $P5007, $P5005
    goto if1729_end4111
  if1729_else4110:
    null $P5006
    set $P5007, $P5006
  if1729_end4111:
    unless_null $P5007, vivi_17304112
    nqp_get_sc_object $P5008, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5007, $P5008
  vivi_17304112:
    get_who $P5004, $P5007
    set $P5001, $P5004
    iter $P5003, $P5004
  for_next4118:
    unless $P5003, for_done4120
    shift $P5010, $P5003
  for_redo4119:
    .const 'Sub' $P5009 = 'cuid_437_1365879995.227' 
    capture_lex $P5009
    $P5001 = $P5009($P5010)
    goto for_next4118
  for_done4120:
    set $P5011, $P5001
  if1728_end4109:
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_437_1365879995.227") :anon :lex :outer("cuid_438_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1823
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_179 
    .local pmc pkg_viv_tmp_39 
    find_dynamic_lex $P5001, "%*HOW"
    unless_null $P5001, fallback4113
    nqp_get_sc_object $P5003, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_39, $P5002
    set fb_tmp_179, pkg_viv_tmp_39
    repr_defined $I5001, fb_tmp_179
    unless $I5001 goto if1731_else4114 
    set $P5004, fb_tmp_179["%HOW"]
    set $P5006, $P5004
    goto if1731_end4115
  if1731_else4114:
    null $P5005
    set $P5006, $P5005
  if1731_end4115:
    unless_null $P5006, vivi_17324116
    new $P5007, 'Hash'
    set pkg_viv_tmp_39["%HOW"], $P5007
    set $P5006, $P5007
  vivi_17324116:
    unless_null $P5006, vivi_17334117
    die "Contextual %*HOW not found"
    box $P5008, "Contextual %*HOW not found"
    set $P5006, $P5008
  vivi_17334117:
    set $P5001, $P5006
  fallback4113:
.annotate 'line', 1824
    $P5009 = _lex_param_0."key"()
    set $S5001, $P5009
    $P5010 = _lex_param_0."value"()
    set $P5001[$S5001], $P5010
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "set_block_handler" :subid("cuid_439_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1922
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$/", _lex_param_0 
    .lex "$block", _lex_param_1 
    .lex "$type", _lex_param_2 
    .local pmc fb_tmp_180 
    .local pmc pkg_viv_tmp_40 
    .local pmc fb_tmp_181 
    .local pmc pkg_viv_tmp_41 
    find_dynamic_lex $P5001, "%*HANDLERS"
    unless_null $P5001, fallback4123
    nqp_get_sc_object $P5003, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_40, $P5002
    set fb_tmp_180, pkg_viv_tmp_40
    repr_defined $I5002, fb_tmp_180
    unless $I5002 goto if1735_else4124 
    set $P5004, fb_tmp_180["%HANDLERS"]
    set $P5006, $P5004
    goto if1735_end4125
  if1735_else4124:
    null $P5005
    set $P5006, $P5005
  if1735_end4125:
    unless_null $P5006, vivi_17364126
    new $P5007, 'Hash'
    set pkg_viv_tmp_40["%HANDLERS"], $P5007
    set $P5006, $P5007
  vivi_17364126:
    unless_null $P5006, vivi_17374127
    die "Contextual %*HANDLERS not found"
    box $P5008, "Contextual %*HANDLERS not found"
    set $P5006, $P5008
  vivi_17374127:
    set $P5001, $P5006
  fallback4123:
    set $S5001, _lex_param_2
    exists $I5001, $P5001[$S5001]
    unless $I5001 goto if1734_end4122 
.annotate 'line', 1923
    set $S5004, _lex_param_2
    concat $S5003, "Duplicate ", $S5004
    concat $S5002, $S5003, " handler in block"
    box $P5009, $S5002
    die $P5009
  if1734_end4122:
.annotate 'line', 1926
    $P5010 = _lex_param_1."arity"()
    if $P5010 goto unless1738_end4129 
.annotate 'line', 1927
.annotate 'line', 1928
    nqp_get_sc_object $P5011, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 1929
    nqp_get_sc_object $P5012, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5013 = $P5012."new"("lexical" :named("scope"), "$!" :named("name"), "var" :named("decl"))
.annotate 'line', 1930
    nqp_get_sc_object $P5014, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5015 = $P5014."new"("lexical" :named("scope"), "$_" :named("name"))
    $P5016 = $P5011."new"($P5013, $P5015, "bind" :named("op"))
    _lex_param_1."unshift"($P5016)
.annotate 'line', 1933
    nqp_get_sc_object $P5017, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5018 = $P5017."new"("$_" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    _lex_param_1."unshift"($P5018)
.annotate 'line', 1934
    _lex_param_1."symbol"("$_", "lexical" :named("scope"))
.annotate 'line', 1935
    _lex_param_1."symbol"("$!", "lexical" :named("scope"))
.annotate 'line', 1936
    $P5019 = _lex_param_1."arity"(1)
  unless1738_end4129:
.annotate 'line', 1938
    _lex_param_1."blocktype"("declaration")
    find_dynamic_lex $P5020, "%*HANDLERS"
    unless_null $P5020, fallback4130
    nqp_get_sc_object $P5022, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5021, $P5022
    set pkg_viv_tmp_41, $P5021
    set fb_tmp_181, pkg_viv_tmp_41
    repr_defined $I5003, fb_tmp_181
    unless $I5003 goto if1739_else4131 
    set $P5023, fb_tmp_181["%HANDLERS"]
    set $P5025, $P5023
    goto if1739_end4132
  if1739_else4131:
    null $P5024
    set $P5025, $P5024
  if1739_end4132:
    unless_null $P5025, vivi_17404133
    new $P5026, 'Hash'
    set pkg_viv_tmp_41["%HANDLERS"], $P5026
    set $P5025, $P5026
  vivi_17404133:
    unless_null $P5025, vivi_17414134
    die "Contextual %*HANDLERS not found"
    box $P5027, "Contextual %*HANDLERS not found"
    set $P5025, $P5027
  vivi_17414134:
    set $P5020, $P5025
  fallback4130:
    set $S5005, _lex_param_2
.annotate 'line', 1939
    nqp_get_sc_object $P5028, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 93
.annotate 'line', 1940
    nqp_get_sc_object $P5029, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 1942
    nqp_get_sc_object $P5030, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    $P5031 = $P5030."new"("exception" :named("op"))
    $P5032 = $P5029."new"(_lex_param_1, $P5031, "call" :named("op"))
.annotate 'line', 1944
    nqp_get_sc_object $P5033, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 89
.annotate 'line', 1945
    nqp_get_sc_object $P5034, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 1947
    nqp_get_sc_object $P5035, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    $P5036 = $P5035."new"("exception" :named("op"))
.annotate 'line', 1948
    nqp_get_sc_object $P5037, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 52
    $P5038 = $P5037."new"("handled" :named("value"))
.annotate 'line', 1949
    nqp_get_sc_object $P5039, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 42
    $P5040 = $P5039."new"(1 :named("value"))
    $P5041 = $P5034."new"($P5036, $P5038, $P5040, "bindkey_i" :named("op"))
.annotate 'line', 1951
    nqp_get_sc_object $P5042, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    $P5043 = $P5042."new"("null" :named("op"))
    $P5044 = $P5033."new"($P5041 :named("parrot"), $P5043 :named("jvm"))
.annotate 'line', 1953
    $P5045 = "&default_for"("$")
    $P5046 = $P5028."new"($P5032, $P5044, $P5045)
    set $P5020[$S5005], $P5046
    .return ($P5046) 
.end
.HLL "nqp"
.namespace []
.sub "only_star_block" :subid("cuid_440_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2593
    .lex "$past", $P101 
    .local pmc fb_tmp_182 
    .local pmc fb_tmp_183 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
.annotate 'line', 2594
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback4135
    nqp_get_sc_object $P5004, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5003, $P5004
    set fb_tmp_182, $P5003
    repr_defined $I5001, fb_tmp_182
    unless $I5001 goto if1742_else4136 
    set $P5005, fb_tmp_182["$W"]
    set $P5007, $P5005
    goto if1742_end4137
  if1742_else4136:
    null $P5006
    set $P5007, $P5006
  if1742_end4137:
    unless_null $P5007, vivi_17434138
    nqp_get_sc_object $P5008, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5007, $P5008
  vivi_17434138:
    unless_null $P5007, vivi_17444139
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_17444139:
    set $P5002, $P5007
  fallback4135:
    $P5010 = $P5002."pop_lexpad"()
    set $P101, $P5010
.annotate 'line', 2595
    nqp_get_sc_object $P5011, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 2597
    nqp_get_sc_object $P5012, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 2599
    nqp_get_sc_object $P5013, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 2601
    nqp_get_sc_object $P5014, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
.annotate 'line', 2603
    nqp_get_sc_object $P5015, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    nqp_get_sc_object $P5016, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    $P5017 = $P5016."new"("curcode" :named("op"))
    $P5018 = $P5015."new"($P5017, "getcodeobj" :named("op"))
.annotate 'line', 2604
    nqp_get_sc_object $P5019, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 61
    find_dynamic_lex $P5020, "$*W"
    unless_null $P5020, fallback4140
    nqp_get_sc_object $P5022, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5021, $P5022
    set fb_tmp_183, $P5021
    repr_defined $I5002, fb_tmp_183
    unless $I5002 goto if1745_else4141 
    set $P5023, fb_tmp_183["$W"]
    set $P5025, $P5023
    goto if1745_end4142
  if1745_else4141:
    null $P5024
    set $P5025, $P5024
  if1745_end4142:
    unless_null $P5025, vivi_17464143
    nqp_get_sc_object $P5026, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5025, $P5026
  vivi_17464143:
    unless_null $P5025, vivi_17474144
    die "Contextual $*W not found"
    box $P5027, "Contextual $*W not found"
    set $P5025, $P5027
  vivi_17474144:
    set $P5020, $P5025
  fallback4140:
    new $P5028, 'QRPA'
    box $P5029, "NQPRoutine"
    push $P5028, $P5029
    $P5030 = $P5020."find_sym"($P5028)
    $P5031 = $P5019."new"($P5030 :named("value"))
    $P5032 = $P5014."new"($P5018, $P5031, "$!dispatch_cache" :named("name"), "attribute" :named("scope"))
.annotate 'line', 2606
    nqp_get_sc_object $P5033, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    $P5034 = $P5033."new"("usecapture" :named("op"))
    $P5035 = $P5013."new"($P5032, $P5034, "multicachefind" :named("op"))
.annotate 'line', 2608
    nqp_get_sc_object $P5036, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 2610
    nqp_get_sc_object $P5037, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    nqp_get_sc_object $P5038, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    $P5039 = $P5038."new"("curcode" :named("op"))
    $P5040 = $P5037."new"($P5039, "getcodeobj" :named("op"))
.annotate 'line', 2611
    nqp_get_sc_object $P5041, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    $P5042 = $P5041."new"("usecapture" :named("op"))
    $P5043 = $P5036."new"($P5040, $P5042, "callmethod" :named("op"), "dispatch" :named("name"))
    $P5044 = $P5012."new"($P5035, $P5043, "ifnull" :named("op"))
.annotate 'line', 2614
    nqp_get_sc_object $P5045, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    $P5046 = $P5045."new"("usecapture" :named("op"))
    $P5047 = $P5011."new"($P5044, $P5046, "invokewithcapture" :named("op"))
    $P101."push"($P5047)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "attach_multi_signature" :subid("cuid_442_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2619
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5024 = 'cuid_441_1365879995.227' 
    capture_lex $P5024 
    .lex "$types", $P101 
    .lex "$definednesses", $P102 
    .lex "$code_obj", _lex_param_0 
    .lex "$routine", _lex_param_1 
    .local pmc fb_tmp_184 
    .local pmc fb_tmp_187 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
    new $P5003, 'QRPA'
    set $P101, $P5003
    new $P5004, 'QRPA'
    set $P102, $P5004
    set fb_tmp_184, _lex_param_1
    repr_defined $I5001, fb_tmp_184
    unless $I5001 goto if1748_else4145 
    set $P5008, fb_tmp_184[0]
    set $P5010, $P5008
    goto if1748_end4146
  if1748_else4145:
    null $P5009
    set $P5010, $P5009
  if1748_end4146:
    unless_null $P5010, vivi_17494147
    nqp_get_sc_object $P5011, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5010, $P5011
  vivi_17494147:
    $P5012 = $P5010."list"()
    set $P5005, $P5012
    iter $P5007, $P5012
  for_next4166:
    unless $P5007, for_done4168
    shift $P5014, $P5007
  for_redo4167:
    .const 'Sub' $P5013 = 'cuid_441_1365879995.227' 
    capture_lex $P5013
    $P5005 = $P5013($P5014)
    goto for_next4166
  for_done4168:
.annotate 'line', 2631
    find_dynamic_lex $P5015, "$*W"
    unless_null $P5015, fallback4169
    nqp_get_sc_object $P5017, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5016, $P5017
    set fb_tmp_187, $P5016
    repr_defined $I5002, fb_tmp_187
    unless $I5002 goto if1760_else4170 
    set $P5018, fb_tmp_187["$W"]
    set $P5020, $P5018
    goto if1760_end4171
  if1760_else4170:
    null $P5019
    set $P5020, $P5019
  if1760_end4171:
    unless_null $P5020, vivi_17614172
    nqp_get_sc_object $P5021, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5020, $P5021
  vivi_17614172:
    unless_null $P5020, vivi_17624173
    die "Contextual $*W not found"
    box $P5022, "Contextual $*W not found"
    set $P5020, $P5022
  vivi_17624173:
    set $P5015, $P5020
  fallback4169:
    $P5023 = $P5015."set_routine_signature"(_lex_param_0, $P101, $P102)
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_441_1365879995.227") :anon :lex :outer("cuid_442_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2622
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_185 
    .local pmc fb_tmp_186 
    nqp_get_sc_object $P5001, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    type_check $I5001, _lex_param_0, $P5001
    set $I5003, $I5001
    unless $I5001 goto if1752_end4153 
.annotate 'line', 2623
    $P5002 = _lex_param_0."decl"()
    set $S5001, $P5002
    iseq $I5002, $S5001, "param"
    set $I5003, $I5002
  if1752_end4153:
    set $I5005, $I5003
    unless $I5003 goto if1751_end4151 
    $P5003 = _lex_param_0."named"()
    isfalse $I5004, $P5003
    set $I5005, $I5004
  if1751_end4151:
    box $P5021, $I5005
    set $P5020, $P5021
    unless $I5005 goto if1750_end4149 
.annotate 'line', 2624
    find_lex $P5004, "$types"
    $P5005 = _lex_param_0."returns"()
    get_id $I5007, $P5005
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    get_id $I5008, $P5006
    iseq $I5006, $I5007, $I5008
    unless $I5006 goto if1753_else4154 
    null $P5007
    set $P5009, $P5007
    goto if1753_end4155
  if1753_else4154:
.annotate 'line', 2626
    $P5008 = _lex_param_0."returns"()
    set $P5009, $P5008
  if1753_end4155:
    $P5004."push"($P5009)
.annotate 'line', 2627
    find_lex $P5010, "$definednesses"
    set fb_tmp_185, _lex_param_0
    repr_defined $I5010, fb_tmp_185
    unless $I5010 goto if1755_else4158 
    set $P5011, fb_tmp_185["definedness"]
    set $P5013, $P5011
    goto if1755_end4159
  if1755_else4158:
    null $P5012
    set $P5013, $P5012
  if1755_end4159:
    unless_null $P5013, vivi_17564160
    nqp_get_sc_object $P5014, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5013, $P5014
  vivi_17564160:
    set $S5002, $P5013
    iseq $I5009, $S5002, "D"
    unless $I5009 goto if1754_else4156 
    set $I5014, 1
    goto if1754_end4157
  if1754_else4156:
    set fb_tmp_186, _lex_param_0
    repr_defined $I5012, fb_tmp_186
    unless $I5012 goto if1758_else4163 
    set $P5015, fb_tmp_186["definedness"]
    set $P5017, $P5015
    goto if1758_end4164
  if1758_else4163:
    null $P5016
    set $P5017, $P5016
  if1758_end4164:
    unless_null $P5017, vivi_17594165
    nqp_get_sc_object $P5018, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5017, $P5018
  vivi_17594165:
    set $S5003, $P5017
    iseq $I5011, $S5003, "U"
    unless $I5011 goto if1757_else4161 
    set $I5013, 2
    goto if1757_end4162
  if1757_else4161:
    set $I5013, 0
  if1757_end4162:
    set $I5014, $I5013
  if1754_end4157:
    $P5019 = $P5010."push"($I5014)
    set $P5020, $P5019
  if1750_end4149:
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "wrap_return_handler" :subid("cuid_443_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2634
    .param pmc _lex_param_0 
    .lex "$past", _lex_param_0 
.annotate 'line', 2635
    nqp_get_sc_object $P5001, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    $P5002 = $P5001."new"(_lex_param_0, "lexotic" :named("op"), "RETURN" :named("name"))
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "lexical_package_lookup" :subid("cuid_449_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3152
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5038 = 'cuid_446_1365879995.227' 
    capture_lex $P5038 
    .lex "$final_name", $P101 
    .lex "$lookup", $P102 
    .lex "@name", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_188 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
    root_new $P103, ['parrot';'Continuation']
    set_label $P103, lexotic_4174
    .lex "RETURN", $P103
    set $N5001, _lex_param_0
    set $N5002, 0
    iseq $I5001, $N5001, $N5002
    unless $I5001 goto if1763_end4177 
.annotate 'line', 3154
    $P5003 = _lex_param_1."CURSOR"()
    $P5004 = $P5003."panic"("Cannot compile empty name")
  if1763_end4177:
.annotate 'line', 3158
    $P5005 = _lex_param_0."pop"()
    set $P101, $P5005
.annotate 'line', 3159
    nqp_get_sc_object $P5006, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 80
.annotate 'line', 3161
    nqp_get_sc_object $P5007, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 52
    set $S5001, $P101
    $P5008 = $P5007."new"($S5001 :named("value"))
    $P5009 = $P5006."new"($P5008, "associative" :named("scope"))
    set $P102, $P5009
    set $N5003, _lex_param_0
    set $N5004, 0
    iseq $I5002, $N5003, $N5004
    unless $I5002 goto if1764_else4178 
.annotate 'line', 3166
.annotate 'line', 3167
    nqp_get_sc_object $P5010, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 3169
    nqp_get_sc_object $P5011, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5012 = $P5011."new"("$?PACKAGE" :named("name"), "lexical" :named("scope"))
    $P5013 = $P5010."new"($P5012, "who" :named("op"))
    $P102."unshift"($P5013)
.annotate 'line', 3171
    nqp_get_sc_object $P5014, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 3173
    nqp_get_sc_object $P5015, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 3175
    nqp_get_sc_object $P5016, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 3177
    nqp_get_sc_object $P5017, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 61
    find_dynamic_lex $P5018, "$*GLOBALish"
    unless_null $P5018, fallback4180
    nqp_get_sc_object $P5020, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5019, $P5020
    set fb_tmp_188, $P5019
    repr_defined $I5003, fb_tmp_188
    unless $I5003 goto if1765_else4181 
    set $P5021, fb_tmp_188["$GLOBALish"]
    set $P5023, $P5021
    goto if1765_end4182
  if1765_else4181:
    null $P5022
    set $P5023, $P5022
  if1765_end4182:
    unless_null $P5023, vivi_17664183
    nqp_get_sc_object $P5024, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5023, $P5024
  vivi_17664183:
    unless_null $P5023, vivi_17674184
    die "Contextual $*GLOBALish not found"
    box $P5025, "Contextual $*GLOBALish not found"
    set $P5023, $P5025
  vivi_17674184:
    set $P5018, $P5023
  fallback4180:
    $P5026 = $P5017."new"($P5018 :named("value"))
    $P5027 = $P5016."new"($P5026, "who" :named("op"))
.annotate 'line', 3179
    nqp_get_sc_object $P5028, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 52
    set $S5002, $P101
    $P5029 = $P5028."new"($S5002 :named("value"))
    $P5030 = $P5015."new"($P5027, $P5029, "atkey" :named("op"))
.annotate 'line', 3181
    set $S5004, $P101
    substr $S5003, $S5004, 0, 1
    $P5031 = "&default_for"($S5003)
    $P5032 = $P5014."new"($P5030, $P5031, "ifnull" :named("op"))
    $P5033 = $P102."fallback"($P5032)
    goto if1764_end4179
  if1764_else4178:
    .const 'Sub' $P5034 = 'cuid_446_1365879995.227' 
    capture_lex $P5034
    $P5035 = $P5034()
  if1764_end4179:
    find_lex $P5036, "RETURN"
    $P5037 = $P5036($P102)
    goto lexotic_4175
  lexotic_4174:
    .get_results ($P5037)
  lexotic_4175:
    .return ($P5037) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_446_1365879995.227") :anon :lex :outer("cuid_449_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3187
    .const 'Sub' $P5053 = 'cuid_445_1365879995.227' 
    capture_lex $P5053 
    .const 'Sub' $P5053 = 'cuid_447_1365879995.227' 
    capture_lex $P5053 
    .const 'Sub' $P5053 = 'cuid_448_1365879995.227' 
    capture_lex $P5053 
    .lex "$path", $P101 
    .lex "$sigil", $P102 
    .local pmc fb_tmp_189 
    .local pmc fb_tmp_190 
    .local pmc fb_tmp_192 
    .local pmc fb_tmp_193 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
.annotate 'line', 3189
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback4187
    nqp_get_sc_object $P5005, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5004, $P5005
    set fb_tmp_189, $P5004
    repr_defined $I5001, fb_tmp_189
    unless $I5001 goto if1769_else4188 
    set $P5006, fb_tmp_189["$W"]
    set $P5008, $P5006
    goto if1769_end4189
  if1769_else4188:
    null $P5007
    set $P5008, $P5007
  if1769_end4189:
    unless_null $P5008, vivi_17704190
    nqp_get_sc_object $P5009, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5008, $P5009
  vivi_17704190:
    unless_null $P5008, vivi_17714191
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_17714191:
    set $P5003, $P5008
  fallback4187:
    find_lex $P5011, "@name"
    set fb_tmp_190, $P5011
    repr_defined $I5002, fb_tmp_190
    unless $I5002 goto if1772_else4192 
    set $P5012, fb_tmp_190[0]
    set $P5014, $P5012
    goto if1772_end4193
  if1772_else4192:
    null $P5013
    set $P5014, $P5013
  if1772_end4193:
    unless_null $P5014, vivi_17734194
    nqp_get_sc_object $P5015, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5014, $P5015
  vivi_17734194:
    $P5016 = $P5003."is_lexical"($P5014)
    unless $P5016 goto if1768_else4185 
    .const 'Sub' $P5017 = 'cuid_445_1365879995.227' 
    capture_lex $P5017
    $P5018 = $P5017()
    goto if1768_end4186
  if1768_else4185:
.annotate 'line', 3198
.annotate 'line', 3199
    nqp_get_sc_object $P5019, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 61
    find_dynamic_lex $P5020, "$*GLOBALish"
    unless_null $P5020, fallback4202
    nqp_get_sc_object $P5022, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5021, $P5022
    set fb_tmp_192, $P5021
    repr_defined $I5003, fb_tmp_192
    unless $I5003 goto if1779_else4203 
    set $P5023, fb_tmp_192["$GLOBALish"]
    set $P5025, $P5023
    goto if1779_end4204
  if1779_else4203:
    null $P5024
    set $P5025, $P5024
  if1779_end4204:
    unless_null $P5025, vivi_17804205
    nqp_get_sc_object $P5026, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5025, $P5026
  vivi_17804205:
    unless_null $P5025, vivi_17814206
    die "Contextual $*GLOBALish not found"
    box $P5027, "Contextual $*GLOBALish not found"
    set $P5025, $P5027
  vivi_17814206:
    set $P5020, $P5025
  fallback4202:
    $P5028 = $P5019."new"($P5020 :named("value"))
    set $P101, $P5028
  if1768_end4186:
    find_lex $P5029, "@name"
    set fb_tmp_193, $P5029
    repr_defined $I5005, fb_tmp_193
    unless $I5005 goto if1783_else4209 
    set $P5030, fb_tmp_193[0]
    set $P5032, $P5030
    goto if1783_end4210
  if1783_else4209:
    null $P5031
    set $P5032, $P5031
  if1783_end4210:
    unless_null $P5032, vivi_17844211
    nqp_get_sc_object $P5033, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5032, $P5033
  vivi_17844211:
    set $S5001, $P5032
    iseq $I5004, $S5001, "GLOBAL"
    unless $I5004 goto if1782_end4208 
.annotate 'line', 3201
.annotate 'line', 3202
    find_lex $P5034, "@name"
    $P5035 = $P5034."shift"()
  if1782_end4208:
    find_lex $P5039, "@name"
    set $P5036, $P5039
    iter $P5038, $P5039
  for_next4212:
    unless $P5038, for_done4214
    shift $P5041, $P5038
  for_redo4213:
    .const 'Sub' $P5040 = 'cuid_447_1365879995.227' 
    capture_lex $P5040
    $P5036 = $P5040($P5041)
    goto for_next4212
  for_done4214:
.annotate 'line', 3227
    find_lex $P5042, "$lookup"
    nqp_get_sc_object $P5043, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    $P5044 = $P5043."new"($P101, "who" :named("op"))
    $P5042."unshift"($P5044)
    find_lex $P5045, "$final_name"
    set $S5003, $P5045
    substr $S5002, $S5003, 0, 1
    box $P5046, $S5002
    set $P102, $P5046
    set $S5004, $P102
    iseq $I5006, $S5004, "@"
    set $I5008, $I5006
    if $I5006 goto unless1786_end4218 
    set $S5005, $P102
    iseq $I5007, $S5005, "%"
    set $I5008, $I5007
  unless1786_end4218:
    unless $I5008 goto if1785_else4215 
    .const 'Sub' $P5047 = 'cuid_448_1365879995.227' 
    capture_lex $P5047
    $P5048 = $P5047()
    set $P5052, $P5048
    goto if1785_end4216
  if1785_else4215:
.annotate 'line', 3242
.annotate 'line', 3243
    find_lex $P5049, "$lookup"
    $P5050 = "&default_for"($P102)
    $P5051 = $P5049."fallback"($P5050)
    set $P5052, $P5051
  if1785_end4216:
    .return ($P5052) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_445_1365879995.227") :anon :lex :outer("cuid_446_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3190
    .const 'Sub' $P5019 = 'cuid_444_1365879995.227' 
    capture_lex $P5019 
    .lex "$first", $P101 
    .local pmc fb_tmp_191 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    new $P5017, 'ExceptionHandler'
    set_label $P5017, catch_handler_17784201
    $P5017.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5017
.annotate 'line', 3191
    find_lex $P5002, "@name"
    $P5003 = $P5002."shift"()
    set $P101, $P5003
.annotate 'line', 3192
    nqp_get_sc_object $P5004, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 61
    find_dynamic_lex $P5005, "$*W"
    unless_null $P5005, fallback4195
    nqp_get_sc_object $P5007, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5006, $P5007
    set fb_tmp_191, $P5006
    repr_defined $I5001, fb_tmp_191
    unless $I5001 goto if1774_else4196 
    set $P5008, fb_tmp_191["$W"]
    set $P5010, $P5008
    goto if1774_end4197
  if1774_else4196:
    null $P5009
    set $P5010, $P5009
  if1774_end4197:
    unless_null $P5010, vivi_17754198
    nqp_get_sc_object $P5011, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5010, $P5011
  vivi_17754198:
    unless_null $P5010, vivi_17764199
    die "Contextual $*W not found"
    box $P5012, "Contextual $*W not found"
    set $P5010, $P5012
  vivi_17764199:
    set $P5005, $P5010
  fallback4195:
    new $P5013, 'QRPA'
    push $P5013, $P101
    $P5014 = $P5005."find_sym"($P5013)
    $P5015 = $P5004."new"($P5014 :named("value"))
    store_lex "$path", $P5015
    nqp_get_sc_object $P5016, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5018, $P5016
    pop_eh 
    goto skip_handler_17774200
  catch_handler_17784201:
    .get_results ($P5017) 
    .const 'Sub' $P10001 = 'cuid_444_1365879995.227' 
    capture_lex $P10001
    $P10001($P5017)
    set $I10001, 1
    set $P5017["handled"], $I10001
    nqp_get_sc_object $P10002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    finalize $P5017
    pop_upto_eh $P5017
    pop_eh 
    set $P5018, $P10002
    goto skip_handler_17774200
  skip_handler_17774200:
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_444_1365879995.227") :anon :lex :outer("cuid_445_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3193
    .param pmc _lex_param_0 
    .lex "$!", $P101 
    .lex "$_", _lex_param_0 
    set $P101, _lex_param_0
.annotate 'line', 3194
    nqp_get_sc_object $P5001, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    find_lex $P5002, "$first"
    $P5003 = $P5001."new"($P5002 :named("name"), "lexical" :named("scope"))
    store_lex "$path", $P5003
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_447_1365879995.227") :anon :lex :outer("cuid_446_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3204
    .param pmc _lex_param_0 
    .lex "$path_temp", $P101 
    .lex "$_", _lex_param_0 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
.annotate 'line', 3205
    nqp_get_sc_object $P5002, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 12
    $P5003 = $P5002."unique"("pkg_lookup_tmp")
    set $P101, $P5003
.annotate 'line', 3206
    nqp_get_sc_object $P5004, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 93
.annotate 'line', 3207
    nqp_get_sc_object $P5005, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 3209
    nqp_get_sc_object $P5006, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5007 = $P5006."new"($P101 :named("name"), "local" :named("scope"), "var" :named("decl"))
    find_lex $P5008, "$path"
    $P5009 = $P5005."new"($P5007, $P5008, "bind" :named("op"))
.annotate 'line', 3212
    nqp_get_sc_object $P5010, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 3214
    nqp_get_sc_object $P5011, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 3216
    nqp_get_sc_object $P5012, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    nqp_get_sc_object $P5013, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5014 = $P5013."new"($P101 :named("name"), "local" :named("scope"))
    $P5015 = $P5012."new"($P5014, "who" :named("op"))
.annotate 'line', 3217
    nqp_get_sc_object $P5016, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 52
    set $S5001, _lex_param_0
    $P5017 = $P5016."new"($S5001 :named("value"))
    $P5018 = $P5011."new"($P5015, $P5017, "existskey" :named("op"))
.annotate 'line', 3219
    nqp_get_sc_object $P5019, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 3221
    nqp_get_sc_object $P5020, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    nqp_get_sc_object $P5021, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5022 = $P5021."new"($P101 :named("name"), "local" :named("scope"))
    $P5023 = $P5020."new"($P5022, "who" :named("op"))
.annotate 'line', 3222
    nqp_get_sc_object $P5024, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 52
    set $S5002, _lex_param_0
    $P5025 = $P5024."new"($S5002 :named("value"))
    $P5026 = $P5019."new"($P5023, $P5025, "atkey" :named("op"))
.annotate 'line', 3224
    $P5027 = "&default_for"("$")
    $P5028 = $P5010."new"($P5018, $P5026, $P5027, "if" :named("op"))
    $P5029 = $P5004."new"($P5009, $P5028)
    store_lex "$path", $P5029
    .return ($P5029) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_448_1365879995.227") :anon :lex :outer("cuid_446_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3229
    .lex "$viv_temp", $P101 
    .local pmc fb_tmp_194 
    .local pmc fb_tmp_195 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
.annotate 'line', 3230
    nqp_get_sc_object $P5002, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 12
    $P5003 = $P5002."unique"("pkg_viv_tmp")
    set $P101, $P5003
    find_lex $P5004, "$lookup"
.annotate 'line', 3231
    nqp_get_sc_object $P5005, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 3233
    nqp_get_sc_object $P5006, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5007 = $P5006."new"($P101 :named("name"), "local" :named("scope"), "var" :named("decl"))
    find_lex $P5008, "$lookup"
    set fb_tmp_194, $P5008
    repr_defined $I5001, fb_tmp_194
    unless $I5001 goto if1787_else4219 
    set $P5009, fb_tmp_194[0]
    set $P5011, $P5009
    goto if1787_end4220
  if1787_else4219:
    null $P5010
    set $P5011, $P5010
  if1787_end4220:
    unless_null $P5011, vivi_17884221
    nqp_get_sc_object $P5012, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5011, $P5012
  vivi_17884221:
    $P5013 = $P5005."new"($P5007, $P5011, "bind" :named("op"))
    set $P5004[0], $P5013
.annotate 'line', 3235
    find_lex $P5014, "$lookup"
    nqp_get_sc_object $P5015, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 3237
    nqp_get_sc_object $P5016, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5017 = $P5016."new"($P101 :named("name"), "local" :named("scope"))
    find_lex $P5018, "$lookup"
    set fb_tmp_195, $P5018
    repr_defined $I5002, fb_tmp_195
    unless $I5002 goto if1789_else4222 
    set $P5019, fb_tmp_195[1]
    set $P5021, $P5019
    goto if1789_end4223
  if1789_else4222:
    null $P5020
    set $P5021, $P5020
  if1789_end4223:
    unless_null $P5021, vivi_17904224
    nqp_get_sc_object $P5022, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5021, $P5022
  vivi_17904224:
.annotate 'line', 3239
    find_lex $P5023, "$sigil"
    $P5024 = "&default_for"($P5023)
    $P5025 = $P5015."new"($P5017, $P5021, $P5024, "bindkey" :named("op"))
    $P5026 = $P5014."fallback"($P5025)
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "TOP" :subid("cuid_248_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1619
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_196 
    unless_null _lex_param_1, fallback4227
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback4227:
    set fb_tmp_196, _lex_param_1
    repr_defined $I5001, fb_tmp_196
    unless $I5001 goto if1791_else4225 
    set $P5002, fb_tmp_196["comp_unit"]
    set $P5004, $P5002
    goto if1791_end4226
  if1791_else4225:
    null $P5003
    set $P5004, $P5003
  if1791_end4226:
    unless_null $P5004, vivi_17924228
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_17924228:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "deflongname" :subid("cuid_249_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1621
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_197 
    .local pmc fb_tmp_198 
    .local pmc fb_tmp_199 
    .local pmc fb_tmp_200 
    .local pmc fb_tmp_201 
    .local pmc fb_tmp_202 
.annotate 'line', 1622
    unless_null _lex_param_1, fallback4233
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback4233:
    set fb_tmp_197, _lex_param_1
    repr_defined $I5001, fb_tmp_197
    unless $I5001 goto if1794_else4231 
    set $P5002, fb_tmp_197["colonpair"]
    set $P5004, $P5002
    goto if1794_end4232
  if1794_else4231:
    null $P5003
    set $P5004, $P5003
  if1794_end4232:
    unless_null $P5004, vivi_17954234
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_17954234:
    unless $P5004 goto if1793_else4229 
    unless_null _lex_param_1, fallback4237
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5006
  fallback4237:
    set fb_tmp_198, _lex_param_1
    repr_defined $I5002, fb_tmp_198
    unless $I5002 goto if1796_else4235 
    set $P5007, fb_tmp_198["identifier"]
    set $P5009, $P5007
    goto if1796_end4236
  if1796_else4235:
    null $P5008
    set $P5009, $P5008
  if1796_end4236:
    unless_null $P5009, vivi_17974238
    nqp_get_sc_object $P5010, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5009, $P5010
  vivi_17974238:
    set $S5006, $P5009
    concat $S5005, $S5006, ":"
.annotate 'line', 1623
    unless_null _lex_param_1, fallback4243
    nqp_get_sc_object $P5011, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5011
  fallback4243:
    set fb_tmp_200, _lex_param_1
    repr_defined $I5004, fb_tmp_200
    unless $I5004 goto if1799_else4241 
    set $P5012, fb_tmp_200["colonpair"]
    set $P5014, $P5012
    goto if1799_end4242
  if1799_else4241:
    null $P5013
    set $P5014, $P5013
  if1799_end4242:
    unless_null $P5014, vivi_18004244
    nqp_get_sc_object $P5015, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5014, $P5015
  vivi_18004244:
    set fb_tmp_199, $P5014
    repr_defined $I5003, fb_tmp_199
    unless $I5003 goto if1798_else4239 
    set $P5016, fb_tmp_199[0]
    set $P5018, $P5016
    goto if1798_end4240
  if1798_else4239:
    null $P5017
    set $P5018, $P5017
  if1798_end4240:
    unless_null $P5018, vivi_18014245
    nqp_get_sc_object $P5019, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5018, $P5019
  vivi_18014245:
    $P5020 = $P5018."ast"()
    $P5021 = $P5020."named"()
    set $S5007, $P5021
    concat $S5004, $S5005, $S5007
    concat $S5003, $S5004, "<"
.annotate 'line', 1624
    unless_null _lex_param_1, fallback4250
    nqp_get_sc_object $P5022, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5022
  fallback4250:
    set fb_tmp_202, _lex_param_1
    repr_defined $I5006, fb_tmp_202
    unless $I5006 goto if1803_else4248 
    set $P5023, fb_tmp_202["colonpair"]
    set $P5025, $P5023
    goto if1803_end4249
  if1803_else4248:
    null $P5024
    set $P5025, $P5024
  if1803_end4249:
    unless_null $P5025, vivi_18044251
    nqp_get_sc_object $P5026, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5025, $P5026
  vivi_18044251:
    set fb_tmp_201, $P5025
    repr_defined $I5005, fb_tmp_201
    unless $I5005 goto if1802_else4246 
    set $P5027, fb_tmp_201[0]
    set $P5029, $P5027
    goto if1802_end4247
  if1802_else4246:
    null $P5028
    set $P5029, $P5028
  if1802_end4247:
    unless_null $P5029, vivi_18054252
    nqp_get_sc_object $P5030, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5029, $P5030
  vivi_18054252:
    $P5031 = $P5029."ast"()
    $P5032 = "&colonpair_str"($P5031)
    set $S5008, $P5032
    concat $S5002, $S5003, $S5008
    concat $S5001, $S5002, ">"
    set $S5010, $S5001
    goto if1793_end4230
  if1793_else4229:
    set $S5009, _lex_param_1
    set $S5010, $S5009
  if1793_end4230:
    $P5033 = _lex_param_1."!make"($S5010)
    .return ($P5033) 
.end
.HLL "nqp"
.namespace []
.sub "comp_unit" :subid("cuid_250_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1638
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$mainline", $P101 
    .lex "$unit", $P102 
    .lex "$compunit", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_203 
    .local pmc fb_tmp_204 
    .local pmc fb_tmp_205 
    .local pmc fb_tmp_206 
    .local pmc fb_tmp_207 
    .local pmc fb_tmp_208 
    .local pmc fb_tmp_209 
    .local pmc fb_tmp_210 
    .local pmc fb_tmp_211 
    .local pmc fb_tmp_212 
    .local pmc fb_tmp_213 
    .local pmc fb_tmp_214 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P103, $P5003
.annotate 'line', 1639
    unless_null _lex_param_1, fallback4255
    nqp_get_sc_object $P5004, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5004
  fallback4255:
    set fb_tmp_203, _lex_param_1
    repr_defined $I5001, fb_tmp_203
    unless $I5001 goto if1806_else4253 
    set $P5005, fb_tmp_203["statementlist"]
    set $P5007, $P5005
    goto if1806_end4254
  if1806_else4253:
    null $P5006
    set $P5007, $P5006
  if1806_end4254:
    unless_null $P5007, vivi_18074256
    nqp_get_sc_object $P5008, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5007, $P5008
  vivi_18074256:
    $P5009 = $P5007."ast"()
    set $P101, $P5009
.annotate 'line', 1640
    find_dynamic_lex $P5010, "$*W"
    unless_null $P5010, fallback4257
    nqp_get_sc_object $P5012, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5011, $P5012
    set fb_tmp_204, $P5011
    repr_defined $I5002, fb_tmp_204
    unless $I5002 goto if1808_else4258 
    set $P5013, fb_tmp_204["$W"]
    set $P5015, $P5013
    goto if1808_end4259
  if1808_else4258:
    null $P5014
    set $P5015, $P5014
  if1808_end4259:
    unless_null $P5015, vivi_18094260
    nqp_get_sc_object $P5016, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5015, $P5016
  vivi_18094260:
    unless_null $P5015, vivi_18104261
    die "Contextual $*W not found"
    box $P5017, "Contextual $*W not found"
    set $P5015, $P5017
  vivi_18104261:
    set $P5010, $P5015
  fallback4257:
    $P5018 = $P5010."pop_lexpad"()
    set $P102, $P5018
    find_dynamic_lex $P5019, "$*HAS_YOU_ARE_HERE"
    unless_null $P5019, fallback4264
    nqp_get_sc_object $P5021, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5020, $P5021
    set fb_tmp_205, $P5020
    repr_defined $I5003, fb_tmp_205
    unless $I5003 goto if1812_else4265 
    set $P5022, fb_tmp_205["$HAS_YOU_ARE_HERE"]
    set $P5024, $P5022
    goto if1812_end4266
  if1812_else4265:
    null $P5023
    set $P5024, $P5023
  if1812_end4266:
    unless_null $P5024, vivi_18134267
    nqp_get_sc_object $P5025, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5024, $P5025
  vivi_18134267:
    unless_null $P5024, vivi_18144268
    die "Contextual $*HAS_YOU_ARE_HERE not found"
    box $P5026, "Contextual $*HAS_YOU_ARE_HERE not found"
    set $P5024, $P5026
  vivi_18144268:
    set $P5019, $P5024
  fallback4264:
    if $P5019 goto unless1811_end4263 
.annotate 'line', 1645
.annotate 'line', 1646
    nqp_decontainerize $P5027, _lex_param_0
    $P5028 = $P5027."CTXSAVE"()
    $P5029 = $P102."push"($P5028)
  unless1811_end4263:
.annotate 'line', 1653
    nqp_get_sc_object $P5030, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5031 = $P5030."new"("lexical" :named("scope"), "@ARGS" :named("name"), "param" :named("decl"), 1 :named("slurpy"))
    $P102."unshift"($P5031)
    find_dynamic_lex $P5032, "$*MAIN_SUB"
    unless_null $P5032, fallback4271
    nqp_get_sc_object $P5034, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5033, $P5034
    set fb_tmp_206, $P5033
    repr_defined $I5004, fb_tmp_206
    unless $I5004 goto if1816_else4272 
    set $P5035, fb_tmp_206["$MAIN_SUB"]
    set $P5037, $P5035
    goto if1816_end4273
  if1816_else4272:
    null $P5036
    set $P5037, $P5036
  if1816_end4273:
    unless_null $P5037, vivi_18174274
    nqp_get_sc_object $P5038, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5037, $P5038
  vivi_18174274:
    unless_null $P5037, vivi_18184275
    die "Contextual $*MAIN_SUB not found"
    box $P5039, "Contextual $*MAIN_SUB not found"
    set $P5037, $P5039
  vivi_18184275:
    set $P5032, $P5037
  fallback4271:
    unless $P5032 goto if1815_end4270 
.annotate 'line', 1654
.annotate 'line', 1655
    nqp_get_sc_object $P5040, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 1657
    nqp_get_sc_object $P5041, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5042 = $P5041."new"("lexical" :named("scope"), "@ARGS" :named("name"))
.annotate 'line', 1658
    nqp_get_sc_object $P5043, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 1659
    nqp_get_sc_object $P5044, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 57
    find_dynamic_lex $P5045, "$*MAIN_SUB"
    unless_null $P5045, fallback4276
    nqp_get_sc_object $P5047, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5046, $P5047
    set fb_tmp_207, $P5046
    repr_defined $I5005, fb_tmp_207
    unless $I5005 goto if1819_else4277 
    set $P5048, fb_tmp_207["$MAIN_SUB"]
    set $P5050, $P5048
    goto if1819_end4278
  if1819_else4277:
    null $P5049
    set $P5050, $P5049
  if1819_end4278:
    unless_null $P5050, vivi_18204279
    nqp_get_sc_object $P5051, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5050, $P5051
  vivi_18204279:
    unless_null $P5050, vivi_18214280
    die "Contextual $*MAIN_SUB not found"
    box $P5052, "Contextual $*MAIN_SUB not found"
    set $P5050, $P5052
  vivi_18214280:
    set $P5045, $P5050
  fallback4276:
    $P5053 = $P5044."new"($P5045 :named("value"))
.annotate 'line', 1660
    nqp_get_sc_object $P5054, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5055 = $P5054."new"("lexical" :named("scope"), "@ARGS" :named("name"), 1 :named("flat"))
    $P5056 = $P5043."new"($P5053, $P5055, "call" :named("op"))
    $P5057 = $P5040."new"($P5042, $P5056, "if" :named("op"))
    $P5058 = $P101."push"($P5057)
  if1815_end4270:
.annotate 'line', 1666
    $P102."push"($P101)
.annotate 'line', 1669
    find_dynamic_lex $P5059, "$*W"
    unless_null $P5059, fallback4281
    nqp_get_sc_object $P5061, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5060, $P5061
    set fb_tmp_208, $P5060
    repr_defined $I5006, fb_tmp_208
    unless $I5006 goto if1822_else4282 
    set $P5062, fb_tmp_208["$W"]
    set $P5064, $P5062
    goto if1822_end4283
  if1822_else4282:
    null $P5063
    set $P5064, $P5063
  if1822_end4283:
    unless_null $P5064, vivi_18234284
    nqp_get_sc_object $P5065, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5064, $P5065
  vivi_18234284:
    unless_null $P5064, vivi_18244285
    die "Contextual $*W not found"
    box $P5066, "Contextual $*W not found"
    set $P5064, $P5066
  vivi_18244285:
    set $P5059, $P5064
  fallback4281:
    $P5067 = $P5059."libs"()
    $P102."push"($P5067)
.annotate 'line', 1672
    nqp_get_sc_object $P5068, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 114
.annotate 'line', 1676
    find_dynamic_lex $P5069, "$*W"
    unless_null $P5069, fallback4286
    nqp_get_sc_object $P5071, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5070, $P5071
    set fb_tmp_209, $P5070
    repr_defined $I5007, fb_tmp_209
    unless $I5007 goto if1825_else4287 
    set $P5072, fb_tmp_209["$W"]
    set $P5074, $P5072
    goto if1825_end4288
  if1825_else4287:
    null $P5073
    set $P5074, $P5073
  if1825_end4288:
    unless_null $P5074, vivi_18264289
    nqp_get_sc_object $P5075, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5074, $P5075
  vivi_18264289:
    unless_null $P5074, vivi_18274290
    die "Contextual $*W not found"
    box $P5076, "Contextual $*W not found"
    set $P5074, $P5076
  vivi_18274290:
    set $P5069, $P5074
  fallback4286:
    $P5077 = $P5069."sc"()
.annotate 'line', 1677
    find_dynamic_lex $P5078, "$*W"
    unless_null $P5078, fallback4291
    nqp_get_sc_object $P5080, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5079, $P5080
    set fb_tmp_210, $P5079
    repr_defined $I5008, fb_tmp_210
    unless $I5008 goto if1828_else4292 
    set $P5081, fb_tmp_210["$W"]
    set $P5083, $P5081
    goto if1828_end4293
  if1828_else4292:
    null $P5082
    set $P5083, $P5082
  if1828_end4293:
    unless_null $P5083, vivi_18294294
    nqp_get_sc_object $P5084, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5083, $P5084
  vivi_18294294:
    unless_null $P5083, vivi_18304295
    die "Contextual $*W not found"
    box $P5085, "Contextual $*W not found"
    set $P5083, $P5085
  vivi_18304295:
    set $P5078, $P5083
  fallback4291:
    $P5086 = $P5078."code_ref_blocks"()
.annotate 'line', 1678
    find_dynamic_lex $P5087, "$*W"
    unless_null $P5087, fallback4296
    nqp_get_sc_object $P5089, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5088, $P5089
    set fb_tmp_211, $P5088
    repr_defined $I5009, fb_tmp_211
    unless $I5009 goto if1831_else4297 
    set $P5090, fb_tmp_211["$W"]
    set $P5092, $P5090
    goto if1831_end4298
  if1831_else4297:
    null $P5091
    set $P5092, $P5091
  if1831_end4298:
    unless_null $P5092, vivi_18324299
    nqp_get_sc_object $P5093, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5092, $P5093
  vivi_18324299:
    unless_null $P5092, vivi_18334300
    die "Contextual $*W not found"
    box $P5094, "Contextual $*W not found"
    set $P5092, $P5094
  vivi_18334300:
    set $P5087, $P5092
  fallback4296:
    $P5095 = $P5087."is_precompilation_mode"()
.annotate 'line', 1679
    find_dynamic_lex $P5096, "$*W"
    unless_null $P5096, fallback4301
    nqp_get_sc_object $P5098, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5097, $P5098
    set fb_tmp_212, $P5097
    repr_defined $I5010, fb_tmp_212
    unless $I5010 goto if1834_else4302 
    set $P5099, fb_tmp_212["$W"]
    set $P5101, $P5099
    goto if1834_end4303
  if1834_else4302:
    null $P5100
    set $P5101, $P5100
  if1834_end4303:
    unless_null $P5101, vivi_18354304
    nqp_get_sc_object $P5102, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5101, $P5102
  vivi_18354304:
    unless_null $P5101, vivi_18364305
    die "Contextual $*W not found"
    box $P5103, "Contextual $*W not found"
    set $P5101, $P5103
  vivi_18364305:
    set $P5096, $P5101
  fallback4301:
    $P5104 = $P5096."load_dependency_tasks"()
.annotate 'line', 1680
    find_dynamic_lex $P5105, "$*W"
    unless_null $P5105, fallback4306
    nqp_get_sc_object $P5107, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5106, $P5107
    set fb_tmp_213, $P5106
    repr_defined $I5011, fb_tmp_213
    unless $I5011 goto if1837_else4307 
    set $P5108, fb_tmp_213["$W"]
    set $P5110, $P5108
    goto if1837_end4308
  if1837_else4307:
    null $P5109
    set $P5110, $P5109
  if1837_end4308:
    unless_null $P5110, vivi_18384309
    nqp_get_sc_object $P5111, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5110, $P5111
  vivi_18384309:
    unless_null $P5110, vivi_18394310
    die "Contextual $*W not found"
    box $P5112, "Contextual $*W not found"
    set $P5110, $P5112
  vivi_18394310:
    set $P5105, $P5110
  fallback4306:
    $P5113 = $P5105."fixup_tasks"()
.annotate 'line', 1685
    nqp_get_sc_object $P5114, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 1687
    nqp_get_sc_object $P5115, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 57
    $P5116 = $P5115."new"($P102 :named("value"))
    $P5117 = $P5114."new"($P5116, "call" :named("op"))
.annotate 'line', 1692
    nqp_get_sc_object $P5118, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 93
.annotate 'line', 1693
    nqp_get_sc_object $P5119, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 1695
    nqp_get_sc_object $P5120, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 57
    $P5121 = $P5120."new"($P102 :named("value"))
.annotate 'line', 1696
    nqp_get_sc_object $P5122, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5123 = $P5122."new"("ARGS" :named("name"), "local" :named("scope"), "param" :named("decl"), 1 :named("slurpy"), 1 :named("flat"))
    $P5124 = $P5119."new"($P5121, $P5123, "call" :named("op"))
    $P5125 = $P5118."new"($P5124)
    $P5126 = $P5068."new"($P102, "nqp" :named("hll"), $P5077 :named("sc"), $P5086 :named("code_ref_blocks"), $P5095 :named("compilation_mode"), $P5104 :named("pre_deserialize"), $P5113 :named("post_deserialize"), $P5117 :named("load"), $P5125 :named("main"))
    set $P103, $P5126
.annotate 'line', 1705
    find_dynamic_lex $P5127, "$*W"
    unless_null $P5127, fallback4311
    nqp_get_sc_object $P5129, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5128, $P5129
    set fb_tmp_214, $P5128
    repr_defined $I5012, fb_tmp_214
    unless $I5012 goto if1840_else4312 
    set $P5130, fb_tmp_214["$W"]
    set $P5132, $P5130
    goto if1840_end4313
  if1840_else4312:
    null $P5131
    set $P5132, $P5131
  if1840_end4313:
    unless_null $P5132, vivi_18414314
    nqp_get_sc_object $P5133, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5132, $P5133
  vivi_18414314:
    unless_null $P5132, vivi_18424315
    die "Contextual $*W not found"
    box $P5134, "Contextual $*W not found"
    set $P5132, $P5134
  vivi_18424315:
    set $P5127, $P5132
  fallback4311:
    $P5127."cleanup"()
.annotate 'line', 1707
    $P5135 = _lex_param_1."!make"($P103)
    .return ($P5135) 
.end
.HLL "nqp"
.namespace []
.sub "statementlist" :subid("cuid_251_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1710
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5022 = 'cuid_450_1365879995.227' 
    capture_lex $P5022 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_215 
    .local pmc fb_tmp_216 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
.annotate 'line', 1711
    nqp_get_sc_object $P5002, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 93
    $P5003 = $P5002."new"(_lex_param_1 :named("node"))
    set $P101, $P5003
    unless_null _lex_param_1, fallback4320
    nqp_get_sc_object $P5004, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5004
  fallback4320:
    set fb_tmp_215, _lex_param_1
    repr_defined $I5001, fb_tmp_215
    unless $I5001 goto if1844_else4318 
    set $P5005, fb_tmp_215["statement"]
    set $P5007, $P5005
    goto if1844_end4319
  if1844_else4318:
    null $P5006
    set $P5007, $P5006
  if1844_end4319:
    unless_null $P5007, vivi_18454321
    nqp_get_sc_object $P5008, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5007, $P5008
  vivi_18454321:
    unless $P5007 goto if1843_else4316 
.annotate 'line', 1712
    unless_null _lex_param_1, fallback4324
    nqp_get_sc_object $P5012, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5012
  fallback4324:
    set fb_tmp_216, _lex_param_1
    repr_defined $I5002, fb_tmp_216
    unless $I5002 goto if1846_else4322 
    set $P5013, fb_tmp_216["statement"]
    set $P5015, $P5013
    goto if1846_end4323
  if1846_else4322:
    null $P5014
    set $P5015, $P5014
  if1846_end4323:
    unless_null $P5015, vivi_18474325
    nqp_get_sc_object $P5016, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5015, $P5016
  vivi_18474325:
    set $P5009, $P5015
    iter $P5011, $P5015
  for_next4344:
    unless $P5011, for_done4346
    shift $P5018, $P5011
  for_redo4345:
    .const 'Sub' $P5017 = 'cuid_450_1365879995.227' 
    capture_lex $P5017
    $P5009 = $P5017($P5018)
    goto for_next4344
  for_done4346:
    goto if1843_end4317
  if1843_else4316:
.annotate 'line', 1721
.annotate 'line', 1722
    $P5019 = "&default_for"("$")
    $P5020 = $P101."push"($P5019)
  if1843_end4317:
.annotate 'line', 1724
    $P5021 = _lex_param_1."!make"($P101)
    .return ($P5021) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_450_1365879995.227") :anon :lex :outer("cuid_251_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1713
    .param pmc _lex_param_0 
    .lex "$ast", $P101 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_217 
    .local pmc fb_tmp_218 
    .local pmc fb_tmp_219 
    .local pmc fb_tmp_220 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
.annotate 'line', 1714
    $P5002 = _lex_param_0."ast"()
    set $P101, $P5002
    set fb_tmp_217, $P101
    repr_defined $I5002, fb_tmp_217
    unless $I5002 goto if1849_else4328 
    set $P5003, fb_tmp_217["sink"]
    set $P5005, $P5003
    goto if1849_end4329
  if1849_else4328:
    null $P5004
    set $P5005, $P5004
  if1849_end4329:
    unless_null $P5005, vivi_18504330
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5005, $P5006
  vivi_18504330:
    defined $I5001, $P5005
    unless $I5001 goto if1848_end4327 
    set fb_tmp_218, $P101
    repr_defined $I5003, fb_tmp_218
    unless $I5003 goto if1851_else4331 
    set $P5007, fb_tmp_218["sink"]
    set $P5009, $P5007
    goto if1851_end4332
  if1851_else4331:
    null $P5008
    set $P5009, $P5008
  if1851_end4332:
    unless_null $P5009, vivi_18524333
    nqp_get_sc_object $P5010, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5009, $P5010
  vivi_18524333:
    set $P101, $P5009
  if1848_end4327:
    set fb_tmp_219, $P101
    repr_defined $I5004, fb_tmp_219
    unless $I5004 goto if1854_else4336 
    set $P5011, fb_tmp_219["bareblock"]
    set $P5013, $P5011
    goto if1854_end4337
  if1854_else4336:
    null $P5012
    set $P5013, $P5012
  if1854_end4337:
    unless_null $P5013, vivi_18554338
    nqp_get_sc_object $P5014, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5013, $P5014
  vivi_18554338:
    unless $P5013 goto if1853_end4335 
.annotate 'line', 1716
    set fb_tmp_220, $P101
    repr_defined $I5005, fb_tmp_220
    unless $I5005 goto if1856_else4339 
    set $P5015, fb_tmp_220[0]
    set $P5017, $P5015
    goto if1856_end4340
  if1856_else4339:
    null $P5016
    set $P5017, $P5016
  if1856_end4340:
    unless_null $P5017, vivi_18574341
    nqp_get_sc_object $P5018, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5017, $P5018
  vivi_18574341:
    $P5019 = "&block_immediate"($P5017)
    set $P101, $P5019
  if1853_end4335:
    nqp_get_sc_object $P5020, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 12
    type_check $I5006, $P101, $P5020
    unless $I5006 goto if1858_end4343 
.annotate 'line', 1717
    nqp_get_sc_object $P5021, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 93
    $P5022 = $P5021."new"($P101)
    set $P101, $P5022
  if1858_end4343:
.annotate 'line', 1718
    find_lex $P5023, "$past"
    $P5024 = $P5023."push"($P101)
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "statement" :subid("cuid_252_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1727
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :optional 
    .param int haz_param_4 :opt_flag 
    .const 'Sub' $P5024 = 'cuid_451_1365879995.227' 
    capture_lex $P5024 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .lex "$key", _lex_param_2 
    .local pmc fb_tmp_221 
    .local pmc fb_tmp_234 
    .local pmc fb_tmp_235 
    if haz_param_4, default4408
    nqp_get_sc_object $P5023, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_2, $P5023
  default4408:
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    unless_null _lex_param_1, fallback4351
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5002
  fallback4351:
    set fb_tmp_221, _lex_param_1
    repr_defined $I5001, fb_tmp_221
    unless $I5001 goto if1860_else4349 
    set $P5003, fb_tmp_221["EXPR"]
    set $P5005, $P5003
    goto if1860_end4350
  if1860_else4349:
    null $P5004
    set $P5005, $P5004
  if1860_end4350:
    unless_null $P5005, vivi_18614352
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5005, $P5006
  vivi_18614352:
    unless $P5005 goto if1859_else4347 
    .const 'Sub' $P5007 = 'cuid_451_1365879995.227' 
    capture_lex $P5007
    $P5008 = $P5007()
    goto if1859_end4348
  if1859_else4347:
    unless_null _lex_param_1, fallback4402
    nqp_get_sc_object $P5009, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5009
  fallback4402:
    set fb_tmp_234, _lex_param_1
    repr_defined $I5002, fb_tmp_234
    unless $I5002 goto if1890_else4400 
    set $P5010, fb_tmp_234["statement_control"]
    set $P5012, $P5010
    goto if1890_end4401
  if1890_else4400:
    null $P5011
    set $P5012, $P5011
  if1890_end4401:
    unless_null $P5012, vivi_18914403
    nqp_get_sc_object $P5013, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5012, $P5013
  vivi_18914403:
    unless $P5012 goto if1889_else4398 
.annotate 'line', 1750
    unless_null _lex_param_1, fallback4406
    nqp_get_sc_object $P5014, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5014
  fallback4406:
    set fb_tmp_235, _lex_param_1
    repr_defined $I5003, fb_tmp_235
    unless $I5003 goto if1892_else4404 
    set $P5015, fb_tmp_235["statement_control"]
    set $P5017, $P5015
    goto if1892_end4405
  if1892_else4404:
    null $P5016
    set $P5017, $P5016
  if1892_end4405:
    unless_null $P5017, vivi_18934407
    nqp_get_sc_object $P5018, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5017, $P5018
  vivi_18934407:
    $P5019 = $P5017."ast"()
    set $P101, $P5019
    set $P5021, $P101
    goto if1889_end4399
  if1889_else4398:
.annotate 'line', 1751
    box $P5020, 0
    set $P101, $P5020
    set $P5021, $P101
  if1889_end4399:
  if1859_end4348:
.annotate 'line', 1752
    $P5022 = _lex_param_1."!make"($P101)
    .return ($P5022) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_451_1365879995.227") :anon :lex :outer("cuid_252_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1729
    .lex "$mc", $P101 
    .lex "$ml", $P102 
    .local pmc fb_tmp_222 
    .local pmc fb_tmp_223 
    .local pmc fb_tmp_224 
    .local pmc fb_tmp_225 
    .local pmc fb_tmp_226 
    .local pmc fb_tmp_227 
    .local pmc fb_tmp_228 
    .local pmc fb_tmp_229 
    .local pmc fb_tmp_230 
    .local pmc fb_tmp_231 
    .local pmc fb_tmp_232 
    .local pmc fb_tmp_233 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
    find_lex $P5003, "$/"
    unless_null $P5003, fallback4357
    nqp_get_sc_object $P5004, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5003, $P5004
  fallback4357:
    set fb_tmp_223, $P5003
    repr_defined $I5002, fb_tmp_223
    unless $I5002 goto if1863_else4355 
    set $P5005, fb_tmp_223["statement_mod_cond"]
    set $P5007, $P5005
    goto if1863_end4356
  if1863_else4355:
    null $P5006
    set $P5007, $P5006
  if1863_end4356:
    unless_null $P5007, vivi_18644358
    nqp_get_sc_object $P5008, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5007, $P5008
  vivi_18644358:
    set fb_tmp_222, $P5007
    repr_defined $I5001, fb_tmp_222
    unless $I5001 goto if1862_else4353 
    set $P5009, fb_tmp_222[0]
    set $P5011, $P5009
    goto if1862_end4354
  if1862_else4353:
    null $P5010
    set $P5011, $P5010
  if1862_end4354:
    unless_null $P5011, vivi_18654359
    nqp_get_sc_object $P5012, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5011, $P5012
  vivi_18654359:
    set $P101, $P5011
    find_lex $P5013, "$/"
    unless_null $P5013, fallback4364
    nqp_get_sc_object $P5014, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5013, $P5014
  fallback4364:
    set fb_tmp_225, $P5013
    repr_defined $I5004, fb_tmp_225
    unless $I5004 goto if1867_else4362 
    set $P5015, fb_tmp_225["statement_mod_loop"]
    set $P5017, $P5015
    goto if1867_end4363
  if1867_else4362:
    null $P5016
    set $P5017, $P5016
  if1867_end4363:
    unless_null $P5017, vivi_18684365
    nqp_get_sc_object $P5018, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5017, $P5018
  vivi_18684365:
    set fb_tmp_224, $P5017
    repr_defined $I5003, fb_tmp_224
    unless $I5003 goto if1866_else4360 
    set $P5019, fb_tmp_224[0]
    set $P5021, $P5019
    goto if1866_end4361
  if1866_else4360:
    null $P5020
    set $P5021, $P5020
  if1866_end4361:
    unless_null $P5021, vivi_18694366
    nqp_get_sc_object $P5022, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5021, $P5022
  vivi_18694366:
    set $P102, $P5021
.annotate 'line', 1732
    find_lex $P5023, "$/"
    unless_null $P5023, fallback4369
    nqp_get_sc_object $P5024, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5023, $P5024
  fallback4369:
    set fb_tmp_226, $P5023
    repr_defined $I5005, fb_tmp_226
    unless $I5005 goto if1870_else4367 
    set $P5025, fb_tmp_226["EXPR"]
    set $P5027, $P5025
    goto if1870_end4368
  if1870_else4367:
    null $P5026
    set $P5027, $P5026
  if1870_end4368:
    unless_null $P5027, vivi_18714370
    nqp_get_sc_object $P5028, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5027, $P5028
  vivi_18714370:
    $P5029 = $P5027."ast"()
    store_lex "$past", $P5029
    unless $P101 goto if1872_end4372 
.annotate 'line', 1733
.annotate 'line', 1734
    nqp_get_sc_object $P5030, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    set fb_tmp_227, $P101
    repr_defined $I5006, fb_tmp_227
    unless $I5006 goto if1873_else4373 
    set $P5031, fb_tmp_227["cond"]
    set $P5033, $P5031
    goto if1873_end4374
  if1873_else4373:
    null $P5032
    set $P5033, $P5032
  if1873_end4374:
    unless_null $P5033, vivi_18744375
    nqp_get_sc_object $P5034, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5033, $P5034
  vivi_18744375:
    $P5035 = $P5033."ast"()
    find_lex $P5036, "$past"
    set fb_tmp_228, $P101
    repr_defined $I5007, fb_tmp_228
    unless $I5007 goto if1875_else4376 
    set $P5037, fb_tmp_228["sym"]
    set $P5039, $P5037
    goto if1875_end4377
  if1875_else4376:
    null $P5038
    set $P5039, $P5038
  if1875_end4377:
    unless_null $P5039, vivi_18764378
    nqp_get_sc_object $P5040, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5039, $P5040
  vivi_18764378:
    set $S5001, $P5039
    find_lex $P5041, "$/"
    $P5042 = $P5030."new"($P5035, $P5036, $S5001 :named("op"), $P5041 :named("node"))
    store_lex "$past", $P5042
  if1872_end4372:
    set $P5081, $P102
    unless $P102 goto if1877_end4380 
.annotate 'line', 1736
    set fb_tmp_229, $P102
    repr_defined $I5009, fb_tmp_229
    unless $I5009 goto if1879_else4383 
    set $P5043, fb_tmp_229["sym"]
    set $P5045, $P5043
    goto if1879_end4384
  if1879_else4383:
    null $P5044
    set $P5045, $P5044
  if1879_end4384:
    unless_null $P5045, vivi_18804385
    nqp_get_sc_object $P5046, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5045, $P5046
  vivi_18804385:
    set $S5002, $P5045
    iseq $I5008, $S5002, "for"
    unless $I5008 goto if1878_else4381 
.annotate 'line', 1737
.annotate 'line', 1738
    nqp_get_sc_object $P5047, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 103
.annotate 'line', 1739
    nqp_get_sc_object $P5048, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5049 = $P5048."new"("$_" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    find_lex $P5050, "$past"
    $P5051 = $P5047."new"($P5049, $P5050, "immediate" :named("blocktype"))
    store_lex "$past", $P5051
.annotate 'line', 1741
    find_lex $P5052, "$past"
    $P5052."symbol"("$_", "lexical" :named("scope"))
.annotate 'line', 1742
    find_lex $P5053, "$past"
    $P5053."arity"(1)
.annotate 'line', 1743
    nqp_get_sc_object $P5054, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    set fb_tmp_230, $P102
    repr_defined $I5010, fb_tmp_230
    unless $I5010 goto if1881_else4386 
    set $P5055, fb_tmp_230["cond"]
    set $P5057, $P5055
    goto if1881_end4387
  if1881_else4386:
    null $P5056
    set $P5057, $P5056
  if1881_end4387:
    unless_null $P5057, vivi_18824388
    nqp_get_sc_object $P5058, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5057, $P5058
  vivi_18824388:
    $P5059 = $P5057."ast"()
    find_lex $P5060, "$past"
    set fb_tmp_231, $P102
    repr_defined $I5011, fb_tmp_231
    unless $I5011 goto if1883_else4389 
    set $P5061, fb_tmp_231["sym"]
    set $P5063, $P5061
    goto if1883_end4390
  if1883_else4389:
    null $P5062
    set $P5063, $P5062
  if1883_end4390:
    unless_null $P5063, vivi_18844391
    nqp_get_sc_object $P5064, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5063, $P5064
  vivi_18844391:
    set $S5003, $P5063
    find_lex $P5065, "$/"
    $P5066 = $P5054."new"($P5059, $P5060, $S5003 :named("op"), $P5065 :named("node"))
    store_lex "$past", $P5066
    set $P5080, $P5066
    goto if1878_end4382
  if1878_else4381:
.annotate 'line', 1745
.annotate 'line', 1746
    nqp_get_sc_object $P5067, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    set fb_tmp_232, $P102
    repr_defined $I5012, fb_tmp_232
    unless $I5012 goto if1885_else4392 
    set $P5068, fb_tmp_232["cond"]
    set $P5070, $P5068
    goto if1885_end4393
  if1885_else4392:
    null $P5069
    set $P5070, $P5069
  if1885_end4393:
    unless_null $P5070, vivi_18864394
    nqp_get_sc_object $P5071, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5070, $P5071
  vivi_18864394:
    $P5072 = $P5070."ast"()
    find_lex $P5073, "$past"
    set fb_tmp_233, $P102
    repr_defined $I5013, fb_tmp_233
    unless $I5013 goto if1887_else4395 
    set $P5074, fb_tmp_233["sym"]
    set $P5076, $P5074
    goto if1887_end4396
  if1887_else4395:
    null $P5075
    set $P5076, $P5075
  if1887_end4396:
    unless_null $P5076, vivi_18884397
    nqp_get_sc_object $P5077, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5076, $P5077
  vivi_18884397:
    set $S5004, $P5076
    find_lex $P5078, "$/"
    $P5079 = $P5067."new"($P5072, $P5073, $S5004 :named("op"), $P5078 :named("node"))
    store_lex "$past", $P5079
    set $P5080, $P5079
  if1878_end4382:
    set $P5081, $P5080
  if1877_end4380:
    .return ($P5081) 
.end
.HLL "nqp"
.namespace []
.sub "xblock" :subid("cuid_253_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1755
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_236 
    .local pmc fb_tmp_237 
.annotate 'line', 1756
    nqp_get_sc_object $P5001, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    unless_null _lex_param_1, fallback4411
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5002
  fallback4411:
    set fb_tmp_236, _lex_param_1
    repr_defined $I5001, fb_tmp_236
    unless $I5001 goto if1894_else4409 
    set $P5003, fb_tmp_236["EXPR"]
    set $P5005, $P5003
    goto if1894_end4410
  if1894_else4409:
    null $P5004
    set $P5005, $P5004
  if1894_end4410:
    unless_null $P5005, vivi_18954412
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5005, $P5006
  vivi_18954412:
    $P5007 = $P5005."ast"()
    unless_null _lex_param_1, fallback4415
    nqp_get_sc_object $P5008, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5008
  fallback4415:
    set fb_tmp_237, _lex_param_1
    repr_defined $I5002, fb_tmp_237
    unless $I5002 goto if1896_else4413 
    set $P5009, fb_tmp_237["pblock"]
    set $P5011, $P5009
    goto if1896_end4414
  if1896_else4413:
    null $P5010
    set $P5011, $P5010
  if1896_end4414:
    unless_null $P5011, vivi_18974416
    nqp_get_sc_object $P5012, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5011, $P5012
  vivi_18974416:
    $P5013 = $P5011."ast"()
    $P5014 = $P5001."new"($P5007, $P5013, "if" :named("op"), _lex_param_1 :named("node"))
    $P5015 = _lex_param_1."!make"($P5014)
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "pblock" :subid("cuid_254_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1759
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_238 
.annotate 'line', 1760
    unless_null _lex_param_1, fallback4419
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback4419:
    set fb_tmp_238, _lex_param_1
    repr_defined $I5001, fb_tmp_238
    unless $I5001 goto if1898_else4417 
    set $P5002, fb_tmp_238["blockoid"]
    set $P5004, $P5002
    goto if1898_end4418
  if1898_else4417:
    null $P5003
    set $P5004, $P5003
  if1898_end4418:
    unless_null $P5004, vivi_18994420
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_18994420:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "block" :subid("cuid_255_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1763
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_239 
.annotate 'line', 1764
    unless_null _lex_param_1, fallback4423
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback4423:
    set fb_tmp_239, _lex_param_1
    repr_defined $I5001, fb_tmp_239
    unless $I5001 goto if1900_else4421 
    set $P5002, fb_tmp_239["blockoid"]
    set $P5004, $P5002
    goto if1900_end4422
  if1900_else4421:
    null $P5003
    set $P5004, $P5003
  if1900_end4422:
    unless_null $P5004, vivi_19014424
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_19014424:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "blockoid" :subid("cuid_256_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1767
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5037 = 'cuid_453_1365879995.227' 
    capture_lex $P5037 
    .lex "$BLOCK", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_240 
    .local pmc fb_tmp_241 
    .local pmc fb_tmp_247 
    .local pmc fb_tmp_248 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
.annotate 'line', 1768
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback4425
    nqp_get_sc_object $P5004, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5003, $P5004
    set fb_tmp_240, $P5003
    repr_defined $I5001, fb_tmp_240
    unless $I5001 goto if1902_else4426 
    set $P5005, fb_tmp_240["$W"]
    set $P5007, $P5005
    goto if1902_end4427
  if1902_else4426:
    null $P5006
    set $P5007, $P5006
  if1902_end4427:
    unless_null $P5007, vivi_19034428
    nqp_get_sc_object $P5008, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5007, $P5008
  vivi_19034428:
    unless_null $P5007, vivi_19044429
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_19044429:
    set $P5002, $P5007
  fallback4425:
    $P5010 = $P5002."pop_lexpad"()
    set $P101, $P5010
    unless_null _lex_param_1, fallback4434
    nqp_get_sc_object $P5011, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5011
  fallback4434:
    set fb_tmp_241, _lex_param_1
    repr_defined $I5002, fb_tmp_241
    unless $I5002 goto if1906_else4432 
    set $P5012, fb_tmp_241["statementlist"]
    set $P5014, $P5012
    goto if1906_end4433
  if1906_else4432:
    null $P5013
    set $P5014, $P5013
  if1906_end4433:
    unless_null $P5014, vivi_19074435
    nqp_get_sc_object $P5015, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5014, $P5015
  vivi_19074435:
    unless $P5014 goto if1905_else4430 
    .const 'Sub' $P5016 = 'cuid_453_1365879995.227' 
    capture_lex $P5016
    $P5017 = $P5016()
    set $P5036, $P5017
    goto if1905_end4431
  if1905_else4430:
.annotate 'line', 1783
    find_dynamic_lex $P5018, "$*HAS_YOU_ARE_HERE"
    unless_null $P5018, fallback4469
    nqp_get_sc_object $P5020, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5019, $P5020
    set fb_tmp_247, $P5019
    repr_defined $I5003, fb_tmp_247
    unless $I5003 goto if1925_else4470 
    set $P5021, fb_tmp_247["$HAS_YOU_ARE_HERE"]
    set $P5023, $P5021
    goto if1925_end4471
  if1925_else4470:
    null $P5022
    set $P5023, $P5022
  if1925_end4471:
    unless_null $P5023, vivi_19264472
    nqp_get_sc_object $P5024, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5023, $P5024
  vivi_19264472:
    unless_null $P5023, vivi_19274473
    die "Contextual $*HAS_YOU_ARE_HERE not found"
    box $P5025, "Contextual $*HAS_YOU_ARE_HERE not found"
    set $P5023, $P5025
  vivi_19274473:
    set $P5018, $P5023
  fallback4469:
    unless $P5018 goto if1924_end4468 
.annotate 'line', 1784
.annotate 'line', 1785
    $P5026 = _lex_param_1."CURSOR"()
    $P5027 = $P5026."panic"("{YOU_ARE_HERE} may only appear once in a setting")
  if1924_end4468:
    box $P5028, 1
    store_dynamic_lex "$*HAS_YOU_ARE_HERE", $P5028
.annotate 'line', 1788
    unless_null _lex_param_1, fallback4476
    nqp_get_sc_object $P5029, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5029
  fallback4476:
    set fb_tmp_248, _lex_param_1
    repr_defined $I5004, fb_tmp_248
    unless $I5004 goto if1928_else4474 
    set $P5030, fb_tmp_248["you_are_here"]
    set $P5032, $P5030
    goto if1928_end4475
  if1928_else4474:
    null $P5031
    set $P5032, $P5031
  if1928_end4475:
    unless_null $P5032, vivi_19294477
    nqp_get_sc_object $P5033, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5032, $P5033
  vivi_19294477:
    $P5034 = $P5032."ast"()
    $P5035 = _lex_param_1."!make"($P5034)
    set $P5036, $P5035
  if1905_end4431:
    .return ($P5036) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_453_1365879995.227") :anon :lex :outer("cuid_256_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1769
    .const 'Sub' $P5055 = 'cuid_452_1365879995.227' 
    capture_lex $P5055 
    .lex "$past", $P101 
    .local pmc fb_tmp_242 
    .local pmc fb_tmp_243 
    .local pmc pkg_viv_tmp_30 
    .local pmc fb_tmp_244 
    .local pmc pkg_viv_tmp_31 
    .local pmc fb_tmp_245 
    .local pmc pkg_viv_tmp_33 
    .local pmc fb_tmp_246 
    .local pmc pkg_viv_tmp_32 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
.annotate 'line', 1770
    find_lex $P5002, "$/"
    unless_null $P5002, fallback4438
    nqp_get_sc_object $P5003, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5002, $P5003
  fallback4438:
    set fb_tmp_242, $P5002
    repr_defined $I5001, fb_tmp_242
    unless $I5001 goto if1908_else4436 
    set $P5004, fb_tmp_242["statementlist"]
    set $P5006, $P5004
    goto if1908_end4437
  if1908_else4436:
    null $P5005
    set $P5006, $P5005
  if1908_end4437:
    unless_null $P5006, vivi_19094439
    nqp_get_sc_object $P5007, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5006, $P5007
  vivi_19094439:
    $P5008 = $P5006."ast"()
    set $P101, $P5008
    find_dynamic_lex $P5009, "%*HANDLERS"
    unless_null $P5009, fallback4442
    nqp_get_sc_object $P5011, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5010, $P5011
    set pkg_viv_tmp_30, $P5010
    set fb_tmp_243, pkg_viv_tmp_30
    repr_defined $I5002, fb_tmp_243
    unless $I5002 goto if1911_else4443 
    set $P5012, fb_tmp_243["%HANDLERS"]
    set $P5014, $P5012
    goto if1911_end4444
  if1911_else4443:
    null $P5013
    set $P5014, $P5013
  if1911_end4444:
    unless_null $P5014, vivi_19124445
    new $P5015, 'Hash'
    set pkg_viv_tmp_30["%HANDLERS"], $P5015
    set $P5014, $P5015
  vivi_19124445:
    unless_null $P5014, vivi_19134446
    die "Contextual %*HANDLERS not found"
    box $P5016, "Contextual %*HANDLERS not found"
    set $P5014, $P5016
  vivi_19134446:
    set $P5009, $P5014
  fallback4442:
    unless $P5009 goto if1910_end4441 
.annotate 'line', 1771
.annotate 'line', 1772
    nqp_get_sc_object $P5017, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    $P5018 = $P5017."new"($P101, "handle" :named("op"))
    set $P101, $P5018
    find_dynamic_lex $P5022, "%*HANDLERS"
    unless_null $P5022, fallback4447
    nqp_get_sc_object $P5024, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5023, $P5024
    set pkg_viv_tmp_31, $P5023
    set fb_tmp_244, pkg_viv_tmp_31
    repr_defined $I5003, fb_tmp_244
    unless $I5003 goto if1914_else4448 
    set $P5025, fb_tmp_244["%HANDLERS"]
    set $P5027, $P5025
    goto if1914_end4449
  if1914_else4448:
    null $P5026
    set $P5027, $P5026
  if1914_end4449:
    unless_null $P5027, vivi_19154450
    new $P5028, 'Hash'
    set pkg_viv_tmp_31["%HANDLERS"], $P5028
    set $P5027, $P5028
  vivi_19154450:
    unless_null $P5027, vivi_19164451
    die "Contextual %*HANDLERS not found"
    box $P5029, "Contextual %*HANDLERS not found"
    set $P5027, $P5029
  vivi_19164451:
    set $P5022, $P5027
  fallback4447:
    set $P5019, $P5022
    iter $P5021, $P5022
  for_next4452:
    unless $P5021, for_done4454
    shift $P5031, $P5021
  for_redo4453:
    .const 'Sub' $P5030 = 'cuid_452_1365879995.227' 
    capture_lex $P5030
    $P5019 = $P5030($P5031)
    goto for_next4452
  for_done4454:
  if1910_end4441:
.annotate 'line', 1778
    find_lex $P5032, "$BLOCK"
    $P5032."push"($P101)
.annotate 'line', 1779
    find_lex $P5033, "$BLOCK"
    find_lex $P5034, "$/"
    $P5033."node"($P5034)
    find_dynamic_lex $P5035, "%*HANDLERS"
    unless_null $P5035, fallback4457
    nqp_get_sc_object $P5037, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5036, $P5037
    set pkg_viv_tmp_33, $P5036
    set fb_tmp_245, pkg_viv_tmp_33
    repr_defined $I5004, fb_tmp_245
    unless $I5004 goto if1918_else4458 
    set $P5038, fb_tmp_245["%HANDLERS"]
    set $P5040, $P5038
    goto if1918_end4459
  if1918_else4458:
    null $P5039
    set $P5040, $P5039
  if1918_end4459:
    unless_null $P5040, vivi_19194460
    new $P5041, 'Hash'
    set pkg_viv_tmp_33["%HANDLERS"], $P5041
    set $P5040, $P5041
  vivi_19194460:
    unless_null $P5040, vivi_19204461
    die "Contextual %*HANDLERS not found"
    box $P5042, "Contextual %*HANDLERS not found"
    set $P5040, $P5042
  vivi_19204461:
    set $P5035, $P5040
  fallback4457:
    unless $P5035 goto if1917_end4456 
    find_lex $P5043, "$BLOCK"
    find_dynamic_lex $P5044, "%*HANDLERS"
    unless_null $P5044, fallback4462
    nqp_get_sc_object $P5046, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5045, $P5046
    set pkg_viv_tmp_32, $P5045
    set fb_tmp_246, pkg_viv_tmp_32
    repr_defined $I5005, fb_tmp_246
    unless $I5005 goto if1921_else4463 
    set $P5047, fb_tmp_246["%HANDLERS"]
    set $P5049, $P5047
    goto if1921_end4464
  if1921_else4463:
    null $P5048
    set $P5049, $P5048
  if1921_end4464:
    unless_null $P5049, vivi_19224465
    new $P5050, 'Hash'
    set pkg_viv_tmp_32["%HANDLERS"], $P5050
    set $P5049, $P5050
  vivi_19224465:
    unless_null $P5049, vivi_19234466
    die "Contextual %*HANDLERS not found"
    box $P5051, "Contextual %*HANDLERS not found"
    set $P5049, $P5051
  vivi_19234466:
    set $P5044, $P5049
  fallback4462:
    set $P5043["handlers"], $P5044
  if1917_end4456:
.annotate 'line', 1781
    find_dynamic_lex $P5052, "$/"
    find_lex $P5053, "$BLOCK"
    $P5054 = $P5052."!make"($P5053)
    .return ($P5054) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_452_1365879995.227") :anon :lex :outer("cuid_453_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1773
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 1774
    find_lex $P5001, "$past"
    $P5002 = _lex_param_0."key"()
    $P5001."push"($P5002)
.annotate 'line', 1775
    find_lex $P5003, "$past"
    $P5004 = _lex_param_0."value"()
    $P5005 = $P5003."push"($P5004)
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "newpad" :subid("cuid_257_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1792
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_249 
.annotate 'line', 1793
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback4478
    nqp_get_sc_object $P5003, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5002, $P5003
    set fb_tmp_249, $P5002
    repr_defined $I5001, fb_tmp_249
    unless $I5001 goto if1930_else4479 
    set $P5004, fb_tmp_249["$W"]
    set $P5006, $P5004
    goto if1930_end4480
  if1930_else4479:
    null $P5005
    set $P5006, $P5005
  if1930_end4480:
    unless_null $P5006, vivi_19314481
    nqp_get_sc_object $P5007, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5006, $P5007
  vivi_19314481:
    unless_null $P5006, vivi_19324482
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_19324482:
    set $P5001, $P5006
  fallback4478:
    $P5009 = $P5001."push_lexpad"(_lex_param_1)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "outerctx" :subid("cuid_258_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1796
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5030 = 'cuid_455_1365879995.227' 
    capture_lex $P5030 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_250 
    .local pmc fb_tmp_251 
    .local pmc fb_tmp_252 
    .local pmc pkg_viv_tmp_34 
    .local pmc fb_tmp_270 
    find_dynamic_lex $P5001, "%*COMPILING"
    unless_null $P5001, fallback4489
    nqp_get_sc_object $P5003, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_34, $P5002
    set fb_tmp_252, pkg_viv_tmp_34
    repr_defined $I5004, fb_tmp_252
    unless $I5004 goto if1936_else4490 
    set $P5004, fb_tmp_252["%COMPILING"]
    set $P5006, $P5004
    goto if1936_end4491
  if1936_else4490:
    null $P5005
    set $P5006, $P5005
  if1936_end4491:
    unless_null $P5006, vivi_19374492
    new $P5007, 'Hash'
    set pkg_viv_tmp_34["%COMPILING"], $P5007
    set $P5006, $P5007
  vivi_19374492:
    unless_null $P5006, vivi_19384493
    die "Contextual %*COMPILING not found"
    box $P5008, "Contextual %*COMPILING not found"
    set $P5006, $P5008
  vivi_19384493:
    set $P5001, $P5006
  fallback4489:
    set fb_tmp_251, $P5001
    repr_defined $I5003, fb_tmp_251
    unless $I5003 goto if1935_else4487 
    set $P5009, fb_tmp_251["%?OPTIONS"]
    set $P5011, $P5009
    goto if1935_end4488
  if1935_else4487:
    null $P5010
    set $P5011, $P5010
  if1935_end4488:
    unless_null $P5011, vivi_19394494
    nqp_get_sc_object $P5012, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5011, $P5012
  vivi_19394494:
    set fb_tmp_250, $P5011
    repr_defined $I5002, fb_tmp_250
    unless $I5002 goto if1934_else4485 
    set $P5013, fb_tmp_250["outer_ctx"]
    set $P5015, $P5013
    goto if1934_end4486
  if1934_else4485:
    null $P5014
    set $P5015, $P5014
  if1934_end4486:
    unless_null $P5015, vivi_19404495
    nqp_get_sc_object $P5016, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5015, $P5016
  vivi_19404495:
    defined $I5001, $P5015
    if $I5001 goto unless1933_end4484 
    .const 'Sub' $P5017 = 'cuid_455_1365879995.227' 
    capture_lex $P5017
    $P5018 = $P5017()
  unless1933_end4484:
.annotate 'line', 1817
    nqp_decontainerize $P5019, _lex_param_0
    find_dynamic_lex $P5020, "$*W"
    unless_null $P5020, fallback4572
    nqp_get_sc_object $P5022, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5021, $P5022
    set fb_tmp_270, $P5021
    repr_defined $I5005, fb_tmp_270
    unless $I5005 goto if1987_else4573 
    set $P5023, fb_tmp_270["$W"]
    set $P5025, $P5023
    goto if1987_end4574
  if1987_else4573:
    null $P5024
    set $P5025, $P5024
  if1987_end4574:
    unless_null $P5025, vivi_19884575
    nqp_get_sc_object $P5026, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5025, $P5026
  vivi_19884575:
    unless_null $P5025, vivi_19894576
    die "Contextual $*W not found"
    box $P5027, "Contextual $*W not found"
    set $P5025, $P5027
  vivi_19894576:
    set $P5020, $P5025
  fallback4572:
    $P5028 = $P5020."cur_lexpad"()
    $P5029 = $P5019."SET_BLOCK_OUTER_CTX"($P5028)
    .return ($P5029) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_455_1365879995.227") :anon :lex :outer("cuid_258_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1797
    .const 'Sub' $P5100 = 'cuid_454_1365879995.227' 
    capture_lex $P5100 
    .lex "$SETTING", $P101 
    .local pmc fb_tmp_253 
    .local pmc fb_tmp_254 
    .local pmc fb_tmp_255 
    .local pmc fb_tmp_256 
    .local pmc pkg_viv_tmp_35 
    .local pmc fb_tmp_257 
    .local pmc fb_tmp_258 
    .local pmc fb_tmp_259 
    .local pmc pkg_viv_tmp_36 
    .local pmc fb_tmp_260 
    .local pmc fb_tmp_261 
    .local pmc fb_tmp_262 
    .local pmc pkg_viv_tmp_37 
    .local pmc fb_tmp_263 
    .local pmc fb_tmp_264 
    .local pmc fb_tmp_265 
    .local pmc pkg_viv_tmp_38 
    .local pmc fb_tmp_268 
    .local pmc fb_tmp_269 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
.annotate 'line', 1800
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback4496
    nqp_get_sc_object $P5004, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5003, $P5004
    set fb_tmp_253, $P5003
    repr_defined $I5001, fb_tmp_253
    unless $I5001 goto if1941_else4497 
    set $P5005, fb_tmp_253["$W"]
    set $P5007, $P5005
    goto if1941_end4498
  if1941_else4497:
    null $P5006
    set $P5007, $P5006
  if1941_end4498:
    unless_null $P5007, vivi_19424499
    nqp_get_sc_object $P5008, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5007, $P5008
  vivi_19424499:
    unless_null $P5007, vivi_19434500
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_19434500:
    set $P5002, $P5007
  fallback4496:
    find_dynamic_lex $P5011, "%*COMPILING"
    unless_null $P5011, fallback4506
    nqp_get_sc_object $P5013, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5012, $P5013
    set pkg_viv_tmp_35, $P5012
    set fb_tmp_256, pkg_viv_tmp_35
    repr_defined $I5005, fb_tmp_256
    unless $I5005 goto if1946_else4507 
    set $P5014, fb_tmp_256["%COMPILING"]
    set $P5016, $P5014
    goto if1946_end4508
  if1946_else4507:
    null $P5015
    set $P5016, $P5015
  if1946_end4508:
    unless_null $P5016, vivi_19474509
    new $P5017, 'Hash'
    set pkg_viv_tmp_35["%COMPILING"], $P5017
    set $P5016, $P5017
  vivi_19474509:
    unless_null $P5016, vivi_19484510
    die "Contextual %*COMPILING not found"
    box $P5018, "Contextual %*COMPILING not found"
    set $P5016, $P5018
  vivi_19484510:
    set $P5011, $P5016
  fallback4506:
    set fb_tmp_255, $P5011
    repr_defined $I5004, fb_tmp_255
    unless $I5004 goto if1945_else4504 
    set $P5019, fb_tmp_255["%?OPTIONS"]
    set $P5021, $P5019
    goto if1945_end4505
  if1945_else4504:
    null $P5020
    set $P5021, $P5020
  if1945_end4505:
    unless_null $P5021, vivi_19494511
    nqp_get_sc_object $P5022, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5021, $P5022
  vivi_19494511:
    set fb_tmp_254, $P5021
    repr_defined $I5003, fb_tmp_254
    unless $I5003 goto if1944_else4502 
    set $P5023, fb_tmp_254["setting"]
    set $P5025, $P5023
    goto if1944_end4503
  if1944_else4502:
    null $P5024
    set $P5025, $P5024
  if1944_end4503:
    unless_null $P5025, vivi_19504512
    nqp_get_sc_object $P5026, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5025, $P5026
  vivi_19504512:
    set $P5010, $P5025
    defined $I5002, $P5010
    if $I5002, defor4501
    box $P5027, "NQPCORE"
    set $P5010, $P5027
  defor4501:
    $P5028 = $P5002."load_setting"($P5010)
    set $P101, $P5028
    find_dynamic_lex $P5029, "%*COMPILING"
    unless_null $P5029, fallback4519
    nqp_get_sc_object $P5031, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5030, $P5031
    set pkg_viv_tmp_36, $P5030
    set fb_tmp_259, pkg_viv_tmp_36
    repr_defined $I5009, fb_tmp_259
    unless $I5009 goto if1954_else4520 
    set $P5032, fb_tmp_259["%COMPILING"]
    set $P5034, $P5032
    goto if1954_end4521
  if1954_else4520:
    null $P5033
    set $P5034, $P5033
  if1954_end4521:
    unless_null $P5034, vivi_19554522
    new $P5035, 'Hash'
    set pkg_viv_tmp_36["%COMPILING"], $P5035
    set $P5034, $P5035
  vivi_19554522:
    unless_null $P5034, vivi_19564523
    die "Contextual %*COMPILING not found"
    box $P5036, "Contextual %*COMPILING not found"
    set $P5034, $P5036
  vivi_19564523:
    set $P5029, $P5034
  fallback4519:
    set fb_tmp_258, $P5029
    repr_defined $I5008, fb_tmp_258
    unless $I5008 goto if1953_else4517 
    set $P5037, fb_tmp_258["%?OPTIONS"]
    set $P5039, $P5037
    goto if1953_end4518
  if1953_else4517:
    null $P5038
    set $P5039, $P5038
  if1953_end4518:
    unless_null $P5039, vivi_19574524
    nqp_get_sc_object $P5040, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5039, $P5040
  vivi_19574524:
    set fb_tmp_257, $P5039
    repr_defined $I5007, fb_tmp_257
    unless $I5007 goto if1952_else4515 
    set $P5041, fb_tmp_257["setting"]
    set $P5043, $P5041
    goto if1952_end4516
  if1952_else4515:
    null $P5042
    set $P5043, $P5042
  if1952_end4516:
    unless_null $P5043, vivi_19584525
    nqp_get_sc_object $P5044, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5043, $P5044
  vivi_19584525:
    set $S5001, $P5043
    iseq $I5006, $S5001, "NULL"
    box $P5099, $I5006
    set $P5098, $P5099
    if $I5006 goto unless1951_end4514 
.annotate 'line', 1805
.annotate 'line', 1806
    "&import_HOW_exports"($P101)
    find_dynamic_lex $P5045, "%*COMPILING"
    unless_null $P5045, fallback4532
    nqp_get_sc_object $P5047, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5046, $P5047
    set pkg_viv_tmp_37, $P5046
    set fb_tmp_262, pkg_viv_tmp_37
    repr_defined $I5012, fb_tmp_262
    unless $I5012 goto if1962_else4533 
    set $P5048, fb_tmp_262["%COMPILING"]
    set $P5050, $P5048
    goto if1962_end4534
  if1962_else4533:
    null $P5049
    set $P5050, $P5049
  if1962_end4534:
    unless_null $P5050, vivi_19634535
    new $P5051, 'Hash'
    set pkg_viv_tmp_37["%COMPILING"], $P5051
    set $P5050, $P5051
  vivi_19634535:
    unless_null $P5050, vivi_19644536
    die "Contextual %*COMPILING not found"
    box $P5052, "Contextual %*COMPILING not found"
    set $P5050, $P5052
  vivi_19644536:
    set $P5045, $P5050
  fallback4532:
    set fb_tmp_261, $P5045
    repr_defined $I5011, fb_tmp_261
    unless $I5011 goto if1961_else4530 
    set $P5053, fb_tmp_261["%?OPTIONS"]
    set $P5055, $P5053
    goto if1961_end4531
  if1961_else4530:
    null $P5054
    set $P5055, $P5054
  if1961_end4531:
    unless_null $P5055, vivi_19654537
    nqp_get_sc_object $P5056, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5055, $P5056
  vivi_19654537:
    set fb_tmp_260, $P5055
    repr_defined $I5010, fb_tmp_260
    unless $I5010 goto if1960_else4528 
    set $P5057, fb_tmp_260["no-regex-lib"]
    set $P5059, $P5057
    goto if1960_end4529
  if1960_else4528:
    null $P5058
    set $P5059, $P5058
  if1960_end4529:
    unless_null $P5059, vivi_19664538
    nqp_get_sc_object $P5060, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5059, $P5060
  vivi_19664538:
    set $P5097, $P5059
    if $P5059 goto unless1959_end4527 
.annotate 'line', 1807
    find_dynamic_lex $P5061, "%*COMPILING"
    unless_null $P5061, fallback4545
    nqp_get_sc_object $P5063, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5062, $P5063
    set pkg_viv_tmp_38, $P5062
    set fb_tmp_265, pkg_viv_tmp_38
    repr_defined $I5015, fb_tmp_265
    unless $I5015 goto if1970_else4546 
    set $P5064, fb_tmp_265["%COMPILING"]
    set $P5066, $P5064
    goto if1970_end4547
  if1970_else4546:
    null $P5065
    set $P5066, $P5065
  if1970_end4547:
    unless_null $P5066, vivi_19714548
    new $P5067, 'Hash'
    set pkg_viv_tmp_38["%COMPILING"], $P5067
    set $P5066, $P5067
  vivi_19714548:
    unless_null $P5066, vivi_19724549
    die "Contextual %*COMPILING not found"
    box $P5068, "Contextual %*COMPILING not found"
    set $P5066, $P5068
  vivi_19724549:
    set $P5061, $P5066
  fallback4545:
    set fb_tmp_264, $P5061
    repr_defined $I5014, fb_tmp_264
    unless $I5014 goto if1969_else4543 
    set $P5069, fb_tmp_264["%?OPTIONS"]
    set $P5071, $P5069
    goto if1969_end4544
  if1969_else4543:
    null $P5070
    set $P5071, $P5070
  if1969_end4544:
    unless_null $P5071, vivi_19734550
    nqp_get_sc_object $P5072, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5071, $P5072
  vivi_19734550:
    set fb_tmp_263, $P5071
    repr_defined $I5013, fb_tmp_263
    unless $I5013 goto if1968_else4541 
    set $P5073, fb_tmp_263["custom-regex-lib"]
    set $P5075, $P5073
    goto if1968_end4542
  if1968_else4541:
    null $P5074
    set $P5075, $P5074
  if1968_end4542:
    unless_null $P5075, vivi_19744551
    nqp_get_sc_object $P5076, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5075, $P5076
  vivi_19744551:
    unless $P5075 goto if1967_else4539 
    .const 'Sub' $P5077 = 'cuid_454_1365879995.227' 
    capture_lex $P5077
    $P5078 = $P5077($P5075)
    set $P5096, $P5078
    goto if1967_end4540
  if1967_else4539:
.annotate 'line', 1811
.annotate 'line', 1812
    find_dynamic_lex $P5079, "$*W"
    unless_null $P5079, fallback4562
    nqp_get_sc_object $P5081, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5080, $P5081
    set fb_tmp_268, $P5080
    repr_defined $I5016, fb_tmp_268
    unless $I5016 goto if1981_else4563 
    set $P5082, fb_tmp_268["$W"]
    set $P5084, $P5082
    goto if1981_end4564
  if1981_else4563:
    null $P5083
    set $P5084, $P5083
  if1981_end4564:
    unless_null $P5084, vivi_19824565
    nqp_get_sc_object $P5085, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5084, $P5085
  vivi_19824565:
    unless_null $P5084, vivi_19834566
    die "Contextual $*W not found"
    box $P5086, "Contextual $*W not found"
    set $P5084, $P5086
  vivi_19834566:
    set $P5079, $P5084
  fallback4562:
    find_dynamic_lex $P5087, "$*GLOBALish"
    unless_null $P5087, fallback4567
    nqp_get_sc_object $P5089, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5088, $P5089
    set fb_tmp_269, $P5088
    repr_defined $I5017, fb_tmp_269
    unless $I5017 goto if1984_else4568 
    set $P5090, fb_tmp_269["$GLOBALish"]
    set $P5092, $P5090
    goto if1984_end4569
  if1984_else4568:
    null $P5091
    set $P5092, $P5091
  if1984_end4569:
    unless_null $P5092, vivi_19854570
    nqp_get_sc_object $P5093, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5092, $P5093
  vivi_19854570:
    unless_null $P5092, vivi_19864571
    die "Contextual $*GLOBALish not found"
    box $P5094, "Contextual $*GLOBALish not found"
    set $P5092, $P5094
  vivi_19864571:
    set $P5087, $P5092
  fallback4567:
    $P5095 = $P5079."load_module"("NQPP6QRegex", $P5087)
    set $P5096, $P5095
  if1967_end4540:
    set $P5097, $P5096
  unless1959_end4527:
    set $P5098, $P5097
  unless1951_end4514:
    .return ($P5098) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_454_1365879995.227") :anon :lex :outer("cuid_455_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1808
    .param pmc _lex_param_0 
    .lex "$lib", _lex_param_0 
    .local pmc fb_tmp_266 
    .local pmc fb_tmp_267 
.annotate 'line', 1809
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback4552
    nqp_get_sc_object $P5003, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5002, $P5003
    set fb_tmp_266, $P5002
    repr_defined $I5001, fb_tmp_266
    unless $I5001 goto if1975_else4553 
    set $P5004, fb_tmp_266["$W"]
    set $P5006, $P5004
    goto if1975_end4554
  if1975_else4553:
    null $P5005
    set $P5006, $P5005
  if1975_end4554:
    unless_null $P5006, vivi_19764555
    nqp_get_sc_object $P5007, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5006, $P5007
  vivi_19764555:
    unless_null $P5006, vivi_19774556
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_19774556:
    set $P5001, $P5006
  fallback4552:
    find_dynamic_lex $P5009, "$*GLOBALish"
    unless_null $P5009, fallback4557
    nqp_get_sc_object $P5011, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5010, $P5011
    set fb_tmp_267, $P5010
    repr_defined $I5002, fb_tmp_267
    unless $I5002 goto if1978_else4558 
    set $P5012, fb_tmp_267["$GLOBALish"]
    set $P5014, $P5012
    goto if1978_end4559
  if1978_else4558:
    null $P5013
    set $P5014, $P5013
  if1978_end4559:
    unless_null $P5014, vivi_19794560
    nqp_get_sc_object $P5015, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5014, $P5015
  vivi_19794560:
    unless_null $P5014, vivi_19804561
    die "Contextual $*GLOBALish not found"
    box $P5016, "Contextual $*GLOBALish not found"
    set $P5014, $P5016
  vivi_19804561:
    set $P5009, $P5014
  fallback4557:
    $P5017 = $P5001."load_module"(_lex_param_0, $P5009)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "you_are_here" :subid("cuid_259_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1829
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
.annotate 'line', 1830
    nqp_decontainerize $P5001, _lex_param_0
    $P5002 = $P5001."CTXSAVE"()
    $P5003 = _lex_param_1."!make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<use>" :subid("cuid_260_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1835
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$module", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_271 
    .local pmc fb_tmp_272 
    .local pmc fb_tmp_273 
    .local pmc fb_tmp_274 
    .local pmc fb_tmp_275 
    .local pmc fb_tmp_276 
    .local pmc fb_tmp_277 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
.annotate 'line', 1836
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback4577
    nqp_get_sc_object $P5004, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5003, $P5004
    set fb_tmp_271, $P5003
    repr_defined $I5001, fb_tmp_271
    unless $I5001 goto if1990_else4578 
    set $P5005, fb_tmp_271["$W"]
    set $P5007, $P5005
    goto if1990_end4579
  if1990_else4578:
    null $P5006
    set $P5007, $P5006
  if1990_end4579:
    unless_null $P5007, vivi_19914580
    nqp_get_sc_object $P5008, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5007, $P5008
  vivi_19914580:
    unless_null $P5007, vivi_19924581
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_19924581:
    set $P5002, $P5007
  fallback4577:
    unless_null _lex_param_1, fallback4584
    nqp_get_sc_object $P5010, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5010
  fallback4584:
    set fb_tmp_272, _lex_param_1
    repr_defined $I5002, fb_tmp_272
    unless $I5002 goto if1993_else4582 
    set $P5011, fb_tmp_272["name"]
    set $P5013, $P5011
    goto if1993_end4583
  if1993_else4582:
    null $P5012
    set $P5013, $P5012
  if1993_end4583:
    unless_null $P5013, vivi_19944585
    nqp_get_sc_object $P5014, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5013, $P5014
  vivi_19944585:
    set $S5001, $P5013
    find_dynamic_lex $P5015, "$*GLOBALish"
    unless_null $P5015, fallback4586
    nqp_get_sc_object $P5017, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5016, $P5017
    set fb_tmp_273, $P5016
    repr_defined $I5003, fb_tmp_273
    unless $I5003 goto if1995_else4587 
    set $P5018, fb_tmp_273["$GLOBALish"]
    set $P5020, $P5018
    goto if1995_end4588
  if1995_else4587:
    null $P5019
    set $P5020, $P5019
  if1995_end4588:
    unless_null $P5020, vivi_19964589
    nqp_get_sc_object $P5021, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5020, $P5021
  vivi_19964589:
    unless_null $P5020, vivi_19974590
    die "Contextual $*GLOBALish not found"
    box $P5022, "Contextual $*GLOBALish not found"
    set $P5020, $P5022
  vivi_19974590:
    set $P5015, $P5020
  fallback4586:
    $P5023 = $P5002."load_module"($S5001, $P5015)
    set $P101, $P5023
    defined $I5004, $P101
    unless $I5004 goto if1998_end4592 
.annotate 'line', 1837
    exists $I5005, $P101["EXPORT"]
    set $I5008, $I5005
    unless $I5005 goto if2000_end4596 
    set fb_tmp_274, $P101
    repr_defined $I5007, fb_tmp_274
    unless $I5007 goto if2001_else4597 
    set $P5025, fb_tmp_274["EXPORT"]
    set $P5027, $P5025
    goto if2001_end4598
  if2001_else4597:
    null $P5026
    set $P5027, $P5026
  if2001_end4598:
    unless_null $P5027, vivi_20024599
    nqp_get_sc_object $P5028, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5027, $P5028
  vivi_20024599:
    get_who $P5024, $P5027
    exists $I5006, $P5024["DEFAULT"]
    set $I5008, $I5006
  if2000_end4596:
    unless $I5008 goto if1999_end4594 
.annotate 'line', 1838
    find_dynamic_lex $P5029, "$*W"
    unless_null $P5029, fallback4600
    nqp_get_sc_object $P5031, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5030, $P5031
    set fb_tmp_275, $P5030
    repr_defined $I5009, fb_tmp_275
    unless $I5009 goto if2003_else4601 
    set $P5032, fb_tmp_275["$W"]
    set $P5034, $P5032
    goto if2003_end4602
  if2003_else4601:
    null $P5033
    set $P5034, $P5033
  if2003_end4602:
    unless_null $P5034, vivi_20044603
    nqp_get_sc_object $P5035, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5034, $P5035
  vivi_20044603:
    unless_null $P5034, vivi_20054604
    die "Contextual $*W not found"
    box $P5036, "Contextual $*W not found"
    set $P5034, $P5036
  vivi_20054604:
    set $P5029, $P5034
  fallback4600:
    set fb_tmp_277, $P101
    repr_defined $I5011, fb_tmp_277
    unless $I5011 goto if2007_else4607 
    set $P5039, fb_tmp_277["EXPORT"]
    set $P5041, $P5039
    goto if2007_end4608
  if2007_else4607:
    null $P5040
    set $P5041, $P5040
  if2007_end4608:
    unless_null $P5041, vivi_20084609
    nqp_get_sc_object $P5042, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5041, $P5042
  vivi_20084609:
    get_who $P5038, $P5041
    set fb_tmp_276, $P5038
    repr_defined $I5010, fb_tmp_276
    unless $I5010 goto if2006_else4605 
    set $P5043, fb_tmp_276["DEFAULT"]
    set $P5045, $P5043
    goto if2006_end4606
  if2006_else4605:
    null $P5044
    set $P5045, $P5044
  if2006_end4606:
    unless_null $P5045, vivi_20094610
    nqp_get_sc_object $P5046, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5045, $P5046
  vivi_20094610:
    get_who $P5037, $P5045
    $P5047 = $P5029."import"($P5037)
  if1999_end4594:
.annotate 'line', 1841
    $P5048 = "&import_HOW_exports"($P101)
  if1998_end4592:
.annotate 'line', 1843
    nqp_get_sc_object $P5049, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 93
    $P5050 = $P5049."new"()
    $P5051 = _lex_param_1."!make"($P5050)
    .return ($P5051) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<if>" :subid("cuid_261_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1846
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5042 = 'cuid_456_1365879995.227' 
    capture_lex $P5042 
    .lex "$count", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_278 
    .local pmc fb_tmp_279 
    .local pmc fb_tmp_280 
    .local pmc fb_tmp_281 
    .local pmc fb_tmp_282 
    .local pmc fb_tmp_283 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
    unless_null _lex_param_1, fallback4613
    nqp_get_sc_object $P5003, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5003
  fallback4613:
    set fb_tmp_278, _lex_param_1
    repr_defined $I5001, fb_tmp_278
    unless $I5001 goto if2010_else4611 
    set $P5004, fb_tmp_278["xblock"]
    set $P5006, $P5004
    goto if2010_end4612
  if2010_else4611:
    null $P5005
    set $P5006, $P5005
  if2010_end4612:
    unless_null $P5006, vivi_20114614
    nqp_get_sc_object $P5007, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5006, $P5007
  vivi_20114614:
    set $N5002, $P5006
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5008, $N5001
    set $P101, $P5008
.annotate 'line', 1848
    unless_null _lex_param_1, fallback4619
    nqp_get_sc_object $P5009, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5009
  fallback4619:
    set fb_tmp_280, _lex_param_1
    repr_defined $I5003, fb_tmp_280
    unless $I5003 goto if2013_else4617 
    set $P5010, fb_tmp_280["xblock"]
    set $P5012, $P5010
    goto if2013_end4618
  if2013_else4617:
    null $P5011
    set $P5012, $P5011
  if2013_end4618:
    unless_null $P5012, vivi_20144620
    nqp_get_sc_object $P5013, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5012, $P5013
  vivi_20144620:
    set fb_tmp_279, $P5012
    repr_defined $I5002, fb_tmp_279
    unless $I5002 goto if2012_else4615 
    set $I5004, $P101
    set $P5014, fb_tmp_279[$I5004]
    set $P5016, $P5014
    goto if2012_end4616
  if2012_else4615:
    null $P5015
    set $P5016, $P5015
  if2012_end4616:
    unless_null $P5016, vivi_20154621
    nqp_get_sc_object $P5017, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5016, $P5017
  vivi_20154621:
    $P5018 = $P5016."ast"()
    $P5019 = "&xblock_immediate"($P5018)
    set $P102, $P5019
    unless_null _lex_param_1, fallback4626
    nqp_get_sc_object $P5020, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5020
  fallback4626:
    set fb_tmp_281, _lex_param_1
    repr_defined $I5005, fb_tmp_281
    unless $I5005 goto if2017_else4624 
    set $P5021, fb_tmp_281["else"]
    set $P5023, $P5021
    goto if2017_end4625
  if2017_else4624:
    null $P5022
    set $P5023, $P5022
  if2017_end4625:
    unless_null $P5023, vivi_20184627
    nqp_get_sc_object $P5024, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5023, $P5024
  vivi_20184627:
    unless $P5023 goto if2016_end4623 
.annotate 'line', 1849
.annotate 'line', 1850
    unless_null _lex_param_1, fallback4632
    nqp_get_sc_object $P5025, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5025
  fallback4632:
    set fb_tmp_283, _lex_param_1
    repr_defined $I5007, fb_tmp_283
    unless $I5007 goto if2020_else4630 
    set $P5026, fb_tmp_283["else"]
    set $P5028, $P5026
    goto if2020_end4631
  if2020_else4630:
    null $P5027
    set $P5028, $P5027
  if2020_end4631:
    unless_null $P5028, vivi_20214633
    nqp_get_sc_object $P5029, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5028, $P5029
  vivi_20214633:
    set fb_tmp_282, $P5028
    repr_defined $I5006, fb_tmp_282
    unless $I5006 goto if2019_else4628 
    set $P5030, fb_tmp_282[0]
    set $P5032, $P5030
    goto if2019_end4629
  if2019_else4628:
    null $P5031
    set $P5032, $P5031
  if2019_end4629:
    unless_null $P5032, vivi_20224634
    nqp_get_sc_object $P5033, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5032, $P5033
  vivi_20224634:
    $P5034 = $P5032."ast"()
    $P5035 = "&block_immediate"($P5034)
    $P5036 = $P102."push"($P5035)
  if2016_end4623:
  while2023_test4635:
    set $N5004, $P101
    set $N5005, 0
    isgt $I5008, $N5004, $N5005
    box $P5040, $I5008
    set $P5039, $P5040
    unless $I5008 goto while2023_done4639 
  while2023_redo4637:
    .const 'Sub' $P5037 = 'cuid_456_1365879995.227' 
    capture_lex $P5037
    $P5038 = $P5037()
    set $P5039, $P5038
    goto while2023_test4635 
  while2023_done4639:
.annotate 'line', 1859
    $P5041 = _lex_param_1."!make"($P102)
    .return ($P5041) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_456_1365879995.227") :anon :lex :outer("cuid_261_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1853
    .lex "$else", $P101 
    .local pmc tmp_1 
    .local pmc fb_tmp_284 
    .local pmc fb_tmp_285 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    find_lex $P5002, "$count"
    set tmp_1, $P5002
    set $N5002, tmp_1
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$count", $P5003
    find_lex $P5002, "$past"
    set $P101, $P5002
.annotate 'line', 1856
    find_lex $P5003, "$/"
    unless_null $P5003, fallback4644
    nqp_get_sc_object $P5004, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5003, $P5004
  fallback4644:
    set fb_tmp_285, $P5003
    repr_defined $I5002, fb_tmp_285
    unless $I5002 goto if2025_else4642 
    set $P5005, fb_tmp_285["xblock"]
    set $P5007, $P5005
    goto if2025_end4643
  if2025_else4642:
    null $P5006
    set $P5007, $P5006
  if2025_end4643:
    unless_null $P5007, vivi_20264645
    nqp_get_sc_object $P5008, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5007, $P5008
  vivi_20264645:
    set fb_tmp_284, $P5007
    repr_defined $I5001, fb_tmp_284
    unless $I5001 goto if2024_else4640 
    find_lex $P5010, "$count"
    set $I5003, $P5010
    set $P5009, fb_tmp_284[$I5003]
    set $P5012, $P5009
    goto if2024_end4641
  if2024_else4640:
    null $P5011
    set $P5012, $P5011
  if2024_end4641:
    unless_null $P5012, vivi_20274646
    nqp_get_sc_object $P5013, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5012, $P5013
  vivi_20274646:
    $P5014 = $P5012."ast"()
    $P5015 = "&xblock_immediate"($P5014)
    store_lex "$past", $P5015
.annotate 'line', 1857
    find_lex $P5016, "$past"
    $P5017 = $P5016."push"($P101)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<unless>" :subid("cuid_262_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1862
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_286 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
.annotate 'line', 1863
    unless_null _lex_param_1, fallback4649
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5002
  fallback4649:
    set fb_tmp_286, _lex_param_1
    repr_defined $I5001, fb_tmp_286
    unless $I5001 goto if2028_else4647 
    set $P5003, fb_tmp_286["xblock"]
    set $P5005, $P5003
    goto if2028_end4648
  if2028_else4647:
    null $P5004
    set $P5005, $P5004
  if2028_end4648:
    unless_null $P5005, vivi_20294650
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5005, $P5006
  vivi_20294650:
    $P5007 = $P5005."ast"()
    $P5008 = "&xblock_immediate"($P5007)
    set $P101, $P5008
.annotate 'line', 1864
    $P101."op"("unless")
.annotate 'line', 1865
    $P5009 = _lex_param_1."!make"($P101)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<while>" :subid("cuid_263_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1868
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_287 
    .local pmc fb_tmp_288 
    .local pmc fb_tmp_289 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
.annotate 'line', 1869
    unless_null _lex_param_1, fallback4653
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5002
  fallback4653:
    set fb_tmp_287, _lex_param_1
    repr_defined $I5001, fb_tmp_287
    unless $I5001 goto if2030_else4651 
    set $P5003, fb_tmp_287["xblock"]
    set $P5005, $P5003
    goto if2030_end4652
  if2030_else4651:
    null $P5004
    set $P5005, $P5004
  if2030_end4652:
    unless_null $P5005, vivi_20314654
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5005, $P5006
  vivi_20314654:
    $P5007 = $P5005."ast"()
    $P5008 = "&xblock_immediate"($P5007)
    set $P101, $P5008
.annotate 'line', 1870
    unless_null _lex_param_1, fallback4657
    nqp_get_sc_object $P5009, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5009
  fallback4657:
    set fb_tmp_288, _lex_param_1
    repr_defined $I5002, fb_tmp_288
    unless $I5002 goto if2032_else4655 
    set $P5010, fb_tmp_288["sym"]
    set $P5012, $P5010
    goto if2032_end4656
  if2032_else4655:
    null $P5011
    set $P5012, $P5011
  if2032_end4656:
    unless_null $P5012, vivi_20334658
    nqp_get_sc_object $P5013, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5012, $P5013
  vivi_20334658:
    set $S5001, $P5012
    $P101."op"($S5001)
    find_dynamic_lex $P5014, "$*CONTROL_USED"
    unless_null $P5014, fallback4661
    nqp_get_sc_object $P5016, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5015, $P5016
    set fb_tmp_289, $P5015
    repr_defined $I5003, fb_tmp_289
    unless $I5003 goto if2035_else4662 
    set $P5017, fb_tmp_289["$CONTROL_USED"]
    set $P5019, $P5017
    goto if2035_end4663
  if2035_else4662:
    null $P5018
    set $P5019, $P5018
  if2035_end4663:
    unless_null $P5019, vivi_20364664
    nqp_get_sc_object $P5020, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5019, $P5020
  vivi_20364664:
    unless_null $P5019, vivi_20374665
    die "Contextual $*CONTROL_USED not found"
    box $P5021, "Contextual $*CONTROL_USED not found"
    set $P5019, $P5021
  vivi_20374665:
    set $P5014, $P5019
  fallback4661:
    if $P5014 goto unless2034_end4660 
.annotate 'line', 1871
.annotate 'line', 1872
    nqp_get_sc_object $P5022, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 42
    $P5023 = $P5022."new"(1 :named("value"), "nohandler" :named("named"))
    $P5024 = $P101."push"($P5023)
  unless2034_end4660:
.annotate 'line', 1874
    $P5025 = _lex_param_1."!make"($P101)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<repeat>" :subid("cuid_264_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1877
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$op", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_290 
    .local pmc fb_tmp_291 
    .local pmc fb_tmp_292 
    .local pmc fb_tmp_293 
    .local pmc fb_tmp_294 
    .local pmc fb_tmp_295 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
    unless_null _lex_param_1, fallback4668
    nqp_get_sc_object $P5003, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5003
  fallback4668:
    set fb_tmp_290, _lex_param_1
    repr_defined $I5001, fb_tmp_290
    unless $I5001 goto if2038_else4666 
    set $P5004, fb_tmp_290["wu"]
    set $P5006, $P5004
    goto if2038_end4667
  if2038_else4666:
    null $P5005
    set $P5006, $P5005
  if2038_end4667:
    unless_null $P5006, vivi_20394669
    nqp_get_sc_object $P5007, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5006, $P5007
  vivi_20394669:
    set $S5002, $P5006
    concat $S5001, "repeat_", $S5002
    box $P5008, $S5001
    set $P101, $P5008
    unless_null _lex_param_1, fallback4674
    nqp_get_sc_object $P5009, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5009
  fallback4674:
    set fb_tmp_291, _lex_param_1
    repr_defined $I5002, fb_tmp_291
    unless $I5002 goto if2041_else4672 
    set $P5010, fb_tmp_291["xblock"]
    set $P5012, $P5010
    goto if2041_end4673
  if2041_else4672:
    null $P5011
    set $P5012, $P5011
  if2041_end4673:
    unless_null $P5012, vivi_20424675
    nqp_get_sc_object $P5013, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5012, $P5013
  vivi_20424675:
    unless $P5012 goto if2040_else4670 
.annotate 'line', 1880
.annotate 'line', 1881
    unless_null _lex_param_1, fallback4678
    nqp_get_sc_object $P5014, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5014
  fallback4678:
    set fb_tmp_292, _lex_param_1
    repr_defined $I5003, fb_tmp_292
    unless $I5003 goto if2043_else4676 
    set $P5015, fb_tmp_292["xblock"]
    set $P5017, $P5015
    goto if2043_end4677
  if2043_else4676:
    null $P5016
    set $P5017, $P5016
  if2043_end4677:
    unless_null $P5017, vivi_20444679
    nqp_get_sc_object $P5018, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5017, $P5018
  vivi_20444679:
    $P5019 = $P5017."ast"()
    $P5020 = "&xblock_immediate"($P5019)
    set $P102, $P5020
.annotate 'line', 1882
    $P5021 = $P102."op"($P101)
    goto if2040_end4671
  if2040_else4670:
.annotate 'line', 1884
.annotate 'line', 1885
    nqp_get_sc_object $P5022, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    unless_null _lex_param_1, fallback4682
    nqp_get_sc_object $P5023, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5023
  fallback4682:
    set fb_tmp_293, _lex_param_1
    repr_defined $I5004, fb_tmp_293
    unless $I5004 goto if2045_else4680 
    set $P5024, fb_tmp_293["EXPR"]
    set $P5026, $P5024
    goto if2045_end4681
  if2045_else4680:
    null $P5025
    set $P5026, $P5025
  if2045_end4681:
    unless_null $P5026, vivi_20464683
    nqp_get_sc_object $P5027, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5026, $P5027
  vivi_20464683:
    $P5028 = $P5026."ast"()
    unless_null _lex_param_1, fallback4686
    nqp_get_sc_object $P5029, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5029
  fallback4686:
    set fb_tmp_294, _lex_param_1
    repr_defined $I5005, fb_tmp_294
    unless $I5005 goto if2047_else4684 
    set $P5030, fb_tmp_294["pblock"]
    set $P5032, $P5030
    goto if2047_end4685
  if2047_else4684:
    null $P5031
    set $P5032, $P5031
  if2047_end4685:
    unless_null $P5032, vivi_20484687
    nqp_get_sc_object $P5033, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5032, $P5033
  vivi_20484687:
    $P5034 = $P5032."ast"()
    $P5035 = "&block_immediate"($P5034)
    $P5036 = $P5022."new"($P5028, $P5035, $P101 :named("op"), _lex_param_1 :named("node"))
    set $P102, $P5036
  if2040_end4671:
    find_dynamic_lex $P5037, "$*CONTROL_USED"
    unless_null $P5037, fallback4690
    nqp_get_sc_object $P5039, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5038, $P5039
    set fb_tmp_295, $P5038
    repr_defined $I5006, fb_tmp_295
    unless $I5006 goto if2050_else4691 
    set $P5040, fb_tmp_295["$CONTROL_USED"]
    set $P5042, $P5040
    goto if2050_end4692
  if2050_else4691:
    null $P5041
    set $P5042, $P5041
  if2050_end4692:
    unless_null $P5042, vivi_20514693
    nqp_get_sc_object $P5043, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5042, $P5043
  vivi_20514693:
    unless_null $P5042, vivi_20524694
    die "Contextual $*CONTROL_USED not found"
    box $P5044, "Contextual $*CONTROL_USED not found"
    set $P5042, $P5044
  vivi_20524694:
    set $P5037, $P5042
  fallback4690:
    if $P5037 goto unless2049_end4689 
.annotate 'line', 1888
.annotate 'line', 1889
    nqp_get_sc_object $P5045, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 42
    $P5046 = $P5045."new"(1 :named("value"), "nohandler" :named("named"))
    $P5047 = $P102."push"($P5046)
  unless2049_end4689:
.annotate 'line', 1891
    $P5048 = _lex_param_1."!make"($P102)
    .return ($P5048) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<for>" :subid("cuid_265_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1894
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "$block", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_296 
    .local pmc fb_tmp_297 
    .local pmc fb_tmp_298 
    .local pmc fb_tmp_299 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
.annotate 'line', 1895
    unless_null _lex_param_1, fallback4697
    nqp_get_sc_object $P5003, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5003
  fallback4697:
    set fb_tmp_296, _lex_param_1
    repr_defined $I5001, fb_tmp_296
    unless $I5001 goto if2053_else4695 
    set $P5004, fb_tmp_296["xblock"]
    set $P5006, $P5004
    goto if2053_end4696
  if2053_else4695:
    null $P5005
    set $P5006, $P5005
  if2053_end4696:
    unless_null $P5006, vivi_20544698
    nqp_get_sc_object $P5007, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5006, $P5007
  vivi_20544698:
    $P5008 = $P5006."ast"()
    set $P101, $P5008
.annotate 'line', 1896
    $P101."op"("for")
    set fb_tmp_297, $P101
    repr_defined $I5002, fb_tmp_297
    unless $I5002 goto if2055_else4699 
    set $P5009, fb_tmp_297[1]
    set $P5011, $P5009
    goto if2055_end4700
  if2055_else4699:
    null $P5010
    set $P5011, $P5010
  if2055_end4700:
    unless_null $P5011, vivi_20564701
    nqp_get_sc_object $P5012, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5011, $P5012
  vivi_20564701:
    set $P102, $P5011
.annotate 'line', 1898
    $P5013 = $P102."arity"()
    if $P5013 goto unless2057_end4703 
.annotate 'line', 1899
    set fb_tmp_298, $P102
    repr_defined $I5003, fb_tmp_298
    unless $I5003 goto if2058_else4704 
    set $P5014, fb_tmp_298[0]
    set $P5016, $P5014
    goto if2058_end4705
  if2058_else4704:
    null $P5015
    set $P5016, $P5015
  if2058_end4705:
    unless_null $P5016, vivi_20594706
    nqp_get_sc_object $P5017, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5016, $P5017
  vivi_20594706:
    nqp_get_sc_object $P5018, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5019 = $P5018."new"("$_" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    $P5016."push"($P5019)
.annotate 'line', 1900
    $P102."symbol"("$_", "lexical" :named("scope"))
.annotate 'line', 1901
    $P5020 = $P102."arity"(1)
  unless2057_end4703:
.annotate 'line', 1903
    $P102."blocktype"("immediate")
    find_dynamic_lex $P5021, "$*CONTROL_USED"
    unless_null $P5021, fallback4709
    nqp_get_sc_object $P5023, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5022, $P5023
    set fb_tmp_299, $P5022
    repr_defined $I5004, fb_tmp_299
    unless $I5004 goto if2061_else4710 
    set $P5024, fb_tmp_299["$CONTROL_USED"]
    set $P5026, $P5024
    goto if2061_end4711
  if2061_else4710:
    null $P5025
    set $P5026, $P5025
  if2061_end4711:
    unless_null $P5026, vivi_20624712
    nqp_get_sc_object $P5027, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5026, $P5027
  vivi_20624712:
    unless_null $P5026, vivi_20634713
    die "Contextual $*CONTROL_USED not found"
    box $P5028, "Contextual $*CONTROL_USED not found"
    set $P5026, $P5028
  vivi_20634713:
    set $P5021, $P5026
  fallback4709:
    if $P5021 goto unless2060_end4708 
.annotate 'line', 1904
.annotate 'line', 1905
    nqp_get_sc_object $P5029, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 42
    $P5030 = $P5029."new"(1 :named("value"), "nohandler" :named("named"))
    $P5031 = $P101."push"($P5030)
  unless2060_end4708:
.annotate 'line', 1907
    $P5032 = _lex_param_1."!make"($P101)
    .return ($P5032) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<CATCH>" :subid("cuid_266_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1910
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$block", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_300 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
.annotate 'line', 1911
    unless_null _lex_param_1, fallback4716
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5002
  fallback4716:
    set fb_tmp_300, _lex_param_1
    repr_defined $I5001, fb_tmp_300
    unless $I5001 goto if2064_else4714 
    set $P5003, fb_tmp_300["block"]
    set $P5005, $P5003
    goto if2064_end4715
  if2064_else4714:
    null $P5004
    set $P5005, $P5004
  if2064_end4715:
    unless_null $P5005, vivi_20654717
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5005, $P5006
  vivi_20654717:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 1912
    "&set_block_handler"(_lex_param_1, $P101, "CATCH")
.annotate 'line', 1913
    $P5008 = "&default_for"("$")
    $P5009 = _lex_param_1."!make"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<CONTROL>" :subid("cuid_267_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1916
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$block", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_301 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
.annotate 'line', 1917
    unless_null _lex_param_1, fallback4720
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5002
  fallback4720:
    set fb_tmp_301, _lex_param_1
    repr_defined $I5001, fb_tmp_301
    unless $I5001 goto if2066_else4718 
    set $P5003, fb_tmp_301["block"]
    set $P5005, $P5003
    goto if2066_end4719
  if2066_else4718:
    null $P5004
    set $P5005, $P5004
  if2066_end4719:
    unless_null $P5005, vivi_20674721
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5005, $P5006
  vivi_20674721:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 1918
    "&set_block_handler"(_lex_param_1, $P101, "CONTROL")
.annotate 'line', 1919
    $P5008 = "&default_for"("$")
    $P5009 = _lex_param_1."!make"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<BEGIN>" :subid("cuid_268_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1956
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_302 
    .local pmc fb_tmp_303 
.annotate 'line', 1957
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback4722
    nqp_get_sc_object $P5003, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5002, $P5003
    set fb_tmp_302, $P5002
    repr_defined $I5001, fb_tmp_302
    unless $I5001 goto if2068_else4723 
    set $P5004, fb_tmp_302["$W"]
    set $P5006, $P5004
    goto if2068_end4724
  if2068_else4723:
    null $P5005
    set $P5006, $P5005
  if2068_end4724:
    unless_null $P5006, vivi_20694725
    nqp_get_sc_object $P5007, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5006, $P5007
  vivi_20694725:
    unless_null $P5006, vivi_20704726
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_20704726:
    set $P5001, $P5006
  fallback4722:
    unless_null _lex_param_1, fallback4729
    nqp_get_sc_object $P5009, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5009
  fallback4729:
    set fb_tmp_303, _lex_param_1
    repr_defined $I5002, fb_tmp_303
    unless $I5002 goto if2071_else4727 
    set $P5010, fb_tmp_303["blorst"]
    set $P5012, $P5010
    goto if2071_end4728
  if2071_else4727:
    null $P5011
    set $P5012, $P5011
  if2071_end4728:
    unless_null $P5012, vivi_20724730
    nqp_get_sc_object $P5013, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5012, $P5013
  vivi_20724730:
    $P5014 = $P5012."ast"()
    $P5015 = $P5001."run_begin_block"($P5014)
    $P5016 = _lex_param_1."!make"($P5015)
    .return ($P5016) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<INIT>" :subid("cuid_269_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1960
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_304 
    .local pmc fb_tmp_305 
.annotate 'line', 1961
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback4731
    nqp_get_sc_object $P5003, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5002, $P5003
    set fb_tmp_304, $P5002
    repr_defined $I5001, fb_tmp_304
    unless $I5001 goto if2073_else4732 
    set $P5004, fb_tmp_304["$W"]
    set $P5006, $P5004
    goto if2073_end4733
  if2073_else4732:
    null $P5005
    set $P5006, $P5005
  if2073_end4733:
    unless_null $P5006, vivi_20744734
    nqp_get_sc_object $P5007, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5006, $P5007
  vivi_20744734:
    unless_null $P5006, vivi_20754735
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_20754735:
    set $P5001, $P5006
  fallback4731:
    $P5009 = $P5001."cur_lexpad"()
    unless_null _lex_param_1, fallback4738
    nqp_get_sc_object $P5010, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5010
  fallback4738:
    set fb_tmp_305, _lex_param_1
    repr_defined $I5002, fb_tmp_305
    unless $I5002 goto if2076_else4736 
    set $P5011, fb_tmp_305["blorst"]
    set $P5013, $P5011
    goto if2076_end4737
  if2076_else4736:
    null $P5012
    set $P5013, $P5012
  if2076_end4737:
    unless_null $P5013, vivi_20774739
    nqp_get_sc_object $P5014, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5013, $P5014
  vivi_20774739:
    $P5015 = $P5013."ast"()
    $P5009."push"($P5015)
.annotate 'line', 1962
    nqp_get_sc_object $P5016, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 93
    $P5017 = $P5016."new"()
    $P5018 = _lex_param_1."!make"($P5017)
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<try>" :subid("cuid_270_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1965
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_306 
    .local pmc fb_tmp_307 
    .local pmc fb_tmp_308 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_4740
    .lex "RETURN", $P102
.annotate 'line', 1966
    unless_null _lex_param_1, fallback4744
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5002
  fallback4744:
    set fb_tmp_306, _lex_param_1
    repr_defined $I5001, fb_tmp_306
    unless $I5001 goto if2078_else4742 
    set $P5003, fb_tmp_306["blorst"]
    set $P5005, $P5003
    goto if2078_end4743
  if2078_else4742:
    null $P5004
    set $P5005, $P5004
  if2078_end4743:
    unless_null $P5005, vivi_20794745
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5005, $P5006
  vivi_20794745:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
    nqp_get_sc_object $P5008, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 103
    type_check $I5002, $P101, $P5008
    unless $I5002 goto if2080_end4747 
.annotate 'line', 1967
    set fb_tmp_307, $P101
    repr_defined $I5003, fb_tmp_307
    unless $I5003 goto if2083_else4752 
    set $P5009, fb_tmp_307["handlers"]
    set $P5011, $P5009
    goto if2083_end4753
  if2083_else4752:
    null $P5010
    set $P5011, $P5010
  if2083_end4753:
    unless_null $P5011, vivi_20844754
    nqp_get_sc_object $P5012, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5011, $P5012
  vivi_20844754:
    set $P5017, $P5011
    unless $P5011 goto if2082_end4751 
    set fb_tmp_308, $P101
    repr_defined $I5005, fb_tmp_308
    unless $I5005 goto if2085_else4755 
    set $P5013, fb_tmp_308["handlers"]
    set $P5015, $P5013
    goto if2085_end4756
  if2085_else4755:
    null $P5014
    set $P5015, $P5014
  if2085_end4756:
    unless_null $P5015, vivi_20864757
    nqp_get_sc_object $P5016, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5015, $P5016
  vivi_20864757:
    exists $I5004, $P5015["CATCH"]
    box $P5018, $I5004
    set $P5017, $P5018
  if2082_end4751:
    unless $P5017 goto if2081_else4748 
.annotate 'line', 1968
.annotate 'line', 1969
    _lex_param_1."!make"($P101)
    find_lex $P5019, "RETURN"
    $P5020 = $P5019(1)
    set $P5022, $P5020
    goto if2081_end4749
  if2081_else4748:
.annotate 'line', 1972
.annotate 'line', 1973
    $P5021 = $P101."blocktype"("immediate")
    set $P5022, $P5021
  if2081_end4749:
  if2080_end4747:
.annotate 'line', 1976
    nqp_get_sc_object $P5023, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 1980
    nqp_get_sc_object $P5024, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 93
.annotate 'line', 1981
    nqp_get_sc_object $P5025, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 89
.annotate 'line', 1982
    nqp_get_sc_object $P5026, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 1984
    nqp_get_sc_object $P5027, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    $P5028 = $P5027."new"("exception" :named("op"))
.annotate 'line', 1985
    nqp_get_sc_object $P5029, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 52
    $P5030 = $P5029."new"("handled" :named("value"))
.annotate 'line', 1986
    nqp_get_sc_object $P5031, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 42
    $P5032 = $P5031."new"(1 :named("value"))
    $P5033 = $P5026."new"($P5028, $P5030, $P5032, "bindkey_i" :named("op"))
.annotate 'line', 1988
    nqp_get_sc_object $P5034, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    $P5035 = $P5034."new"("null" :named("op"))
    $P5036 = $P5025."new"($P5033 :named("parrot"), $P5035 :named("jvm"))
.annotate 'line', 1990
    $P5037 = "&default_for"("$")
    $P5038 = $P5024."new"($P5036, $P5037)
    $P5039 = $P5023."new"($P101, "CATCH", $P5038, "handle" :named("op"))
    $P5040 = _lex_param_1."!make"($P5039)
    goto lexotic_4741
  lexotic_4740:
    .get_results ($P5040)
  lexotic_4741:
    .return ($P5040) 
.end
.HLL "nqp"
.namespace []
.sub "blorst" :subid("cuid_271_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 1994
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_309 
    .local pmc fb_tmp_310 
    .local pmc fb_tmp_311 
.annotate 'line', 1995
    unless_null _lex_param_1, fallback4762
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback4762:
    set fb_tmp_309, _lex_param_1
    repr_defined $I5001, fb_tmp_309
    unless $I5001 goto if2088_else4760 
    set $P5002, fb_tmp_309["block"]
    set $P5004, $P5002
    goto if2088_end4761
  if2088_else4760:
    null $P5003
    set $P5004, $P5003
  if2088_end4761:
    unless_null $P5004, vivi_20894763
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_20894763:
    unless $P5004 goto if2087_else4758 
.annotate 'line', 1996
    unless_null _lex_param_1, fallback4766
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5006
  fallback4766:
    set fb_tmp_310, _lex_param_1
    repr_defined $I5002, fb_tmp_310
    unless $I5002 goto if2090_else4764 
    set $P5007, fb_tmp_310["block"]
    set $P5009, $P5007
    goto if2090_end4765
  if2090_else4764:
    null $P5008
    set $P5009, $P5008
  if2090_end4765:
    unless_null $P5009, vivi_20914767
    nqp_get_sc_object $P5010, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5009, $P5010
  vivi_20914767:
    $P5011 = $P5009."ast"()
    $P5012 = "&block_immediate"($P5011)
    set $P5019, $P5012
    goto if2087_end4759
  if2087_else4758:
.annotate 'line', 1997
    unless_null _lex_param_1, fallback4770
    nqp_get_sc_object $P5013, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5013
  fallback4770:
    set fb_tmp_311, _lex_param_1
    repr_defined $I5003, fb_tmp_311
    unless $I5003 goto if2092_else4768 
    set $P5014, fb_tmp_311["statement"]
    set $P5016, $P5014
    goto if2092_end4769
  if2092_else4768:
    null $P5015
    set $P5016, $P5015
  if2092_end4769:
    unless_null $P5016, vivi_20934771
    nqp_get_sc_object $P5017, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5016, $P5017
  vivi_20934771:
    $P5018 = $P5016."ast"()
    set $P5019, $P5018
  if2087_end4759:
    $P5020 = _lex_param_1."!make"($P5019)
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond:sym<if>" :subid("cuid_272_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2002
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_312 
    unless_null _lex_param_1, fallback4774
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback4774:
    set fb_tmp_312, _lex_param_1
    repr_defined $I5001, fb_tmp_312
    unless $I5001 goto if2094_else4772 
    set $P5002, fb_tmp_312["cond"]
    set $P5004, $P5002
    goto if2094_end4773
  if2094_else4772:
    null $P5003
    set $P5004, $P5003
  if2094_end4773:
    unless_null $P5004, vivi_20954775
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_20954775:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond:sym<unless>" :subid("cuid_273_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2003
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_313 
    unless_null _lex_param_1, fallback4778
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback4778:
    set fb_tmp_313, _lex_param_1
    repr_defined $I5001, fb_tmp_313
    unless $I5001 goto if2096_else4776 
    set $P5002, fb_tmp_313["cond"]
    set $P5004, $P5002
    goto if2096_end4777
  if2096_else4776:
    null $P5003
    set $P5004, $P5003
  if2096_end4777:
    unless_null $P5004, vivi_20974779
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_20974779:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<while>" :subid("cuid_274_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2005
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_314 
    unless_null _lex_param_1, fallback4782
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback4782:
    set fb_tmp_314, _lex_param_1
    repr_defined $I5001, fb_tmp_314
    unless $I5001 goto if2098_else4780 
    set $P5002, fb_tmp_314["cond"]
    set $P5004, $P5002
    goto if2098_end4781
  if2098_else4780:
    null $P5003
    set $P5004, $P5003
  if2098_end4781:
    unless_null $P5004, vivi_20994783
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_20994783:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<until>" :subid("cuid_275_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2006
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_315 
    unless_null _lex_param_1, fallback4786
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback4786:
    set fb_tmp_315, _lex_param_1
    repr_defined $I5001, fb_tmp_315
    unless $I5001 goto if2100_else4784 
    set $P5002, fb_tmp_315["cond"]
    set $P5004, $P5002
    goto if2100_end4785
  if2100_else4784:
    null $P5003
    set $P5004, $P5003
  if2100_end4785:
    unless_null $P5004, vivi_21014787
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_21014787:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<fatarrow>" :subid("cuid_276_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2010
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_316 
    unless_null _lex_param_1, fallback4790
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback4790:
    set fb_tmp_316, _lex_param_1
    repr_defined $I5001, fb_tmp_316
    unless $I5001 goto if2102_else4788 
    set $P5002, fb_tmp_316["fatarrow"]
    set $P5004, $P5002
    goto if2102_end4789
  if2102_else4788:
    null $P5003
    set $P5004, $P5003
  if2102_end4789:
    unless_null $P5004, vivi_21034791
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_21034791:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<colonpair>" :subid("cuid_277_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2011
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_317 
    unless_null _lex_param_1, fallback4794
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback4794:
    set fb_tmp_317, _lex_param_1
    repr_defined $I5001, fb_tmp_317
    unless $I5001 goto if2104_else4792 
    set $P5002, fb_tmp_317["colonpair"]
    set $P5004, $P5002
    goto if2104_end4793
  if2104_else4792:
    null $P5003
    set $P5004, $P5003
  if2104_end4793:
    unless_null $P5004, vivi_21054795
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_21054795:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<variable>" :subid("cuid_278_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2012
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_318 
    unless_null _lex_param_1, fallback4798
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback4798:
    set fb_tmp_318, _lex_param_1
    repr_defined $I5001, fb_tmp_318
    unless $I5001 goto if2106_else4796 
    set $P5002, fb_tmp_318["variable"]
    set $P5004, $P5002
    goto if2106_end4797
  if2106_else4796:
    null $P5003
    set $P5004, $P5003
  if2106_end4797:
    unless_null $P5004, vivi_21074799
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_21074799:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<package_declarator>" :subid("cuid_279_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2013
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_319 
    unless_null _lex_param_1, fallback4802
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback4802:
    set fb_tmp_319, _lex_param_1
    repr_defined $I5001, fb_tmp_319
    unless $I5001 goto if2108_else4800 
    set $P5002, fb_tmp_319["package_declarator"]
    set $P5004, $P5002
    goto if2108_end4801
  if2108_else4800:
    null $P5003
    set $P5004, $P5003
  if2108_end4801:
    unless_null $P5004, vivi_21094803
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_21094803:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<scope_declarator>" :subid("cuid_280_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2014
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_320 
    unless_null _lex_param_1, fallback4806
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback4806:
    set fb_tmp_320, _lex_param_1
    repr_defined $I5001, fb_tmp_320
    unless $I5001 goto if2110_else4804 
    set $P5002, fb_tmp_320["scope_declarator"]
    set $P5004, $P5002
    goto if2110_end4805
  if2110_else4804:
    null $P5003
    set $P5004, $P5003
  if2110_end4805:
    unless_null $P5004, vivi_21114807
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_21114807:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<routine_declarator>" :subid("cuid_281_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2015
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_321 
    unless_null _lex_param_1, fallback4810
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback4810:
    set fb_tmp_321, _lex_param_1
    repr_defined $I5001, fb_tmp_321
    unless $I5001 goto if2112_else4808 
    set $P5002, fb_tmp_321["routine_declarator"]
    set $P5004, $P5002
    goto if2112_end4809
  if2112_else4808:
    null $P5003
    set $P5004, $P5003
  if2112_end4809:
    unless_null $P5004, vivi_21134811
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_21134811:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<regex_declarator>" :subid("cuid_282_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2016
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_322 
    unless_null _lex_param_1, fallback4814
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback4814:
    set fb_tmp_322, _lex_param_1
    repr_defined $I5001, fb_tmp_322
    unless $I5001 goto if2114_else4812 
    set $P5002, fb_tmp_322["regex_declarator"]
    set $P5004, $P5002
    goto if2114_end4813
  if2114_else4812:
    null $P5003
    set $P5004, $P5003
  if2114_end4813:
    unless_null $P5004, vivi_21154815
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_21154815:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<statement_prefix>" :subid("cuid_283_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2017
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_323 
    unless_null _lex_param_1, fallback4818
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback4818:
    set fb_tmp_323, _lex_param_1
    repr_defined $I5001, fb_tmp_323
    unless $I5001 goto if2116_else4816 
    set $P5002, fb_tmp_323["statement_prefix"]
    set $P5004, $P5002
    goto if2116_end4817
  if2116_else4816:
    null $P5003
    set $P5004, $P5003
  if2116_end4817:
    unless_null $P5004, vivi_21174819
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_21174819:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<lambda>" :subid("cuid_284_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2018
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_324 
.annotate 'line', 2019
    nqp_get_sc_object $P5001, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    unless_null _lex_param_1, fallback4822
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5002
  fallback4822:
    set fb_tmp_324, _lex_param_1
    repr_defined $I5001, fb_tmp_324
    unless $I5001 goto if2118_else4820 
    set $P5003, fb_tmp_324["pblock"]
    set $P5005, $P5003
    goto if2118_end4821
  if2118_else4820:
    null $P5004
    set $P5005, $P5004
  if2118_end4821:
    unless_null $P5005, vivi_21194823
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5005, $P5006
  vivi_21194823:
    $P5007 = $P5005."ast"()
    $P5008 = $P5001."new"($P5007, "takeclosure" :named("op"))
    $P5009 = _lex_param_1."!make"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "fatarrow" :subid("cuid_285_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2022
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_325 
    .local pmc fb_tmp_326 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
.annotate 'line', 2023
    unless_null _lex_param_1, fallback4826
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5002
  fallback4826:
    set fb_tmp_325, _lex_param_1
    repr_defined $I5001, fb_tmp_325
    unless $I5001 goto if2120_else4824 
    set $P5003, fb_tmp_325["val"]
    set $P5005, $P5003
    goto if2120_end4825
  if2120_else4824:
    null $P5004
    set $P5005, $P5004
  if2120_end4825:
    unless_null $P5005, vivi_21214827
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5005, $P5006
  vivi_21214827:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 2024
    unless_null _lex_param_1, fallback4830
    nqp_get_sc_object $P5008, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5008
  fallback4830:
    set fb_tmp_326, _lex_param_1
    repr_defined $I5002, fb_tmp_326
    unless $I5002 goto if2122_else4828 
    set $P5009, fb_tmp_326["key"]
    set $P5011, $P5009
    goto if2122_end4829
  if2122_else4828:
    null $P5010
    set $P5011, $P5010
  if2122_end4829:
    unless_null $P5011, vivi_21234831
    nqp_get_sc_object $P5012, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5011, $P5012
  vivi_21234831:
    $P5013 = $P5011."Str"()
    $P101."named"($P5013)
.annotate 'line', 2025
    $P5014 = _lex_param_1."!make"($P101)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "colonpair" :subid("cuid_286_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2028
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5031 = 'cuid_457_1365879995.227' 
    capture_lex $P5031 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_327 
    .local pmc fb_tmp_328 
    .local pmc fb_tmp_329 
    .local pmc fb_tmp_330 
    .local pmc fb_tmp_331 
    unless_null _lex_param_1, fallback4836
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback4836:
    set fb_tmp_327, _lex_param_1
    repr_defined $I5001, fb_tmp_327
    unless $I5001 goto if2125_else4834 
    set $P5002, fb_tmp_327["variable"]
    set $P5004, $P5002
    goto if2125_end4835
  if2125_else4834:
    null $P5003
    set $P5004, $P5003
  if2125_end4835:
    unless_null $P5004, vivi_21264837
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_21264837:
    unless $P5004 goto if2124_else4832 
.annotate 'line', 2029
.annotate 'line', 2030
    unless_null _lex_param_1, fallback4840
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5006
  fallback4840:
    set fb_tmp_328, _lex_param_1
    repr_defined $I5002, fb_tmp_328
    unless $I5002 goto if2127_else4838 
    set $P5007, fb_tmp_328["variable"]
    set $P5009, $P5007
    goto if2127_end4839
  if2127_else4838:
    null $P5008
    set $P5009, $P5008
  if2127_end4839:
    unless_null $P5009, vivi_21284841
    nqp_get_sc_object $P5010, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5009, $P5010
  vivi_21284841:
    $P5011 = $P5009."ast"()
    unless_null _lex_param_1, fallback4846
    nqp_get_sc_object $P5012, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5012
  fallback4846:
    set fb_tmp_330, _lex_param_1
    repr_defined $I5004, fb_tmp_330
    unless $I5004 goto if2130_else4844 
    set $P5013, fb_tmp_330["variable"]
    set $P5015, $P5013
    goto if2130_end4845
  if2130_else4844:
    null $P5014
    set $P5015, $P5014
  if2130_end4845:
    unless_null $P5015, vivi_21314847
    nqp_get_sc_object $P5016, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5015, $P5016
  vivi_21314847:
    set fb_tmp_329, $P5015
    repr_defined $I5003, fb_tmp_329
    unless $I5003 goto if2129_else4842 
    set $P5017, fb_tmp_329["desigilname"]
    set $P5019, $P5017
    goto if2129_end4843
  if2129_else4842:
    null $P5018
    set $P5019, $P5018
  if2129_end4843:
    unless_null $P5019, vivi_21324848
    nqp_get_sc_object $P5020, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5019, $P5020
  vivi_21324848:
    set $S5001, $P5019
    $P5011."named"($S5001)
.annotate 'line', 2031
    unless_null _lex_param_1, fallback4851
    nqp_get_sc_object $P5021, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5021
  fallback4851:
    set fb_tmp_331, _lex_param_1
    repr_defined $I5005, fb_tmp_331
    unless $I5005 goto if2133_else4849 
    set $P5022, fb_tmp_331["variable"]
    set $P5024, $P5022
    goto if2133_end4850
  if2133_else4849:
    null $P5023
    set $P5024, $P5023
  if2133_end4850:
    unless_null $P5024, vivi_21344852
    nqp_get_sc_object $P5025, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5024, $P5025
  vivi_21344852:
    $P5026 = $P5024."ast"()
    $P5027 = _lex_param_1."!make"($P5026)
    set $P5030, $P5027
    goto if2124_end4833
  if2124_else4832:
    .const 'Sub' $P5028 = 'cuid_457_1365879995.227' 
    capture_lex $P5028
    $P5029 = $P5028()
    set $P5030, $P5029
  if2124_end4833:
    .return ($P5030) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_457_1365879995.227") :anon :lex :outer("cuid_286_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2032
    .lex "$past", $P101 
    .local pmc fb_tmp_332 
    .local pmc fb_tmp_333 
    .local pmc fb_tmp_334 
    .local pmc fb_tmp_335 
    .local pmc fb_tmp_336 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    find_lex $P5002, "$/"
    unless_null $P5002, fallback4857
    nqp_get_sc_object $P5003, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5002, $P5003
  fallback4857:
    set fb_tmp_332, $P5002
    repr_defined $I5001, fb_tmp_332
    unless $I5001 goto if2136_else4855 
    set $P5004, fb_tmp_332["circumfix"]
    set $P5006, $P5004
    goto if2136_end4856
  if2136_else4855:
    null $P5005
    set $P5006, $P5005
  if2136_end4856:
    unless_null $P5006, vivi_21374858
    nqp_get_sc_object $P5007, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5006, $P5007
  vivi_21374858:
    unless $P5006 goto if2135_else4853 
.annotate 'line', 2034
    find_lex $P5008, "$/"
    unless_null $P5008, fallback4863
    nqp_get_sc_object $P5009, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5008, $P5009
  fallback4863:
    set fb_tmp_334, $P5008
    repr_defined $I5003, fb_tmp_334
    unless $I5003 goto if2139_else4861 
    set $P5010, fb_tmp_334["circumfix"]
    set $P5012, $P5010
    goto if2139_end4862
  if2139_else4861:
    null $P5011
    set $P5012, $P5011
  if2139_end4862:
    unless_null $P5012, vivi_21404864
    nqp_get_sc_object $P5013, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5012, $P5013
  vivi_21404864:
    set fb_tmp_333, $P5012
    repr_defined $I5002, fb_tmp_333
    unless $I5002 goto if2138_else4859 
    set $P5014, fb_tmp_333[0]
    set $P5016, $P5014
    goto if2138_end4860
  if2138_else4859:
    null $P5015
    set $P5016, $P5015
  if2138_end4860:
    unless_null $P5016, vivi_21414865
    nqp_get_sc_object $P5017, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5016, $P5017
  vivi_21414865:
    $P5018 = $P5016."ast"()
    set $P5027, $P5018
    goto if2135_end4854
  if2135_else4853:
.annotate 'line', 2035
    nqp_get_sc_object $P5019, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 42
    find_lex $P5020, "$/"
    unless_null $P5020, fallback4868
    nqp_get_sc_object $P5021, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5020, $P5021
  fallback4868:
    set fb_tmp_335, $P5020
    repr_defined $I5005, fb_tmp_335
    unless $I5005 goto if2142_else4866 
    set $P5022, fb_tmp_335["not"]
    set $P5024, $P5022
    goto if2142_end4867
  if2142_else4866:
    null $P5023
    set $P5024, $P5023
  if2142_end4867:
    unless_null $P5024, vivi_21434869
    nqp_get_sc_object $P5025, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5024, $P5025
  vivi_21434869:
    isfalse $I5004, $P5024
    $P5026 = $P5019."new"($I5004 :named("value"))
    set $P5027, $P5026
  if2135_end4854:
    set $P101, $P5027
.annotate 'line', 2036
    find_lex $P5028, "$/"
    unless_null $P5028, fallback4872
    nqp_get_sc_object $P5029, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5028, $P5029
  fallback4872:
    set fb_tmp_336, $P5028
    repr_defined $I5006, fb_tmp_336
    unless $I5006 goto if2144_else4870 
    set $P5030, fb_tmp_336["identifier"]
    set $P5032, $P5030
    goto if2144_end4871
  if2144_else4870:
    null $P5031
    set $P5032, $P5031
  if2144_end4871:
    unless_null $P5032, vivi_21454873
    nqp_get_sc_object $P5033, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5032, $P5033
  vivi_21454873:
    set $S5001, $P5032
    $P101."named"($S5001)
.annotate 'line', 2037
    find_dynamic_lex $P5034, "$/"
    $P5035 = $P5034."!make"($P101)
    .return ($P5035) 
.end
.HLL "nqp"
.namespace []
.sub "variable" :subid("cuid_287_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2041
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5020 = 'cuid_459_1365879995.227' 
    capture_lex $P5020 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_337 
    .local pmc fb_tmp_338 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    unless_null _lex_param_1, fallback4878
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5002
  fallback4878:
    set fb_tmp_337, _lex_param_1
    repr_defined $I5001, fb_tmp_337
    unless $I5001 goto if2147_else4876 
    set $P5003, fb_tmp_337["postcircumfix"]
    set $P5005, $P5003
    goto if2147_end4877
  if2147_else4876:
    null $P5004
    set $P5005, $P5004
  if2147_end4877:
    unless_null $P5005, vivi_21484879
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5005, $P5006
  vivi_21484879:
    unless $P5005 goto if2146_else4874 
.annotate 'line', 2043
.annotate 'line', 2044
    unless_null _lex_param_1, fallback4882
    nqp_get_sc_object $P5007, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5007
  fallback4882:
    set fb_tmp_338, _lex_param_1
    repr_defined $I5002, fb_tmp_338
    unless $I5002 goto if2149_else4880 
    set $P5008, fb_tmp_338["postcircumfix"]
    set $P5010, $P5008
    goto if2149_end4881
  if2149_else4880:
    null $P5009
    set $P5010, $P5009
  if2149_end4881:
    unless_null $P5010, vivi_21504883
    nqp_get_sc_object $P5011, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5010, $P5011
  vivi_21504883:
    $P5012 = $P5010."ast"()
    set $P101, $P5012
.annotate 'line', 2045
    nqp_get_sc_object $P5013, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 80
.annotate 'line', 2046
    $P5014 = "&default_for"("$")
    $P5015 = $P5013."new"("$/" :named("name"), "lexical" :named("scope"), $P5014 :named("fallback"))
    $P5016 = $P101."unshift"($P5015)
    goto if2146_end4875
  if2146_else4874:
    .const 'Sub' $P5017 = 'cuid_459_1365879995.227' 
    capture_lex $P5017
    $P5018 = $P5017()
  if2146_end4875:
.annotate 'line', 2127
    $P5019 = _lex_param_1."!make"($P101)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_459_1365879995.227") :anon :lex :outer("cuid_287_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2049
    .const 'Sub' $P5089 = 'cuid_458_1365879995.227' 
    capture_lex $P5089 
    .const 'Sub' $P5089 = 'cuid_462_1365879995.227' 
    capture_lex $P5089 
    .const 'Sub' $P5089 = 'cuid_463_1365879995.227' 
    capture_lex $P5089 
    .const 'Sub' $P5089 = 'cuid_464_1365879995.227' 
    capture_lex $P5089 
    .lex "@name", $P101 
    .local pmc fb_tmp_339 
    .local pmc pkg_lookup_tmp_4 
    .local pmc fb_tmp_340 
    .local pmc fb_tmp_341 
    .local pmc fb_tmp_342 
    .local pmc fb_tmp_345 
    .local pmc fb_tmp_346 
    .local pmc fb_tmp_353 
    .local pmc fb_tmp_357 
    .local pmc fb_tmp_358 
    .local pmc fb_tmp_359 
    new $P5001, 'QRPA'
    set $P101, $P5001
.annotate 'line', 2050
    nqp_get_sc_object $P5003, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    set pkg_lookup_tmp_4, $P5003
    get_who $P5004, pkg_lookup_tmp_4
    exists $I5002, $P5004["NQP"]
    unless $I5002 goto if2152_else4886 
    get_who $P5006, pkg_lookup_tmp_4
    set $P5005, $P5006["NQP"]
    set $P5008, $P5005
    goto if2152_end4887
  if2152_else4886:
    nqp_get_sc_object $P5007, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5008, $P5007
  if2152_end4887:
    get_who $P5002, $P5008
    set fb_tmp_339, $P5002
    repr_defined $I5001, fb_tmp_339
    unless $I5001 goto if2151_else4884 
    set $P5009, fb_tmp_339["Compiler"]
    set $P5011, $P5009
    goto if2151_end4885
  if2151_else4884:
    null $P5010
    set $P5011, $P5010
  if2151_end4885:
    unless_null $P5011, vivi_21534888
    nqp_get_sc_object $P5012, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5011, $P5012
  vivi_21534888:
    find_lex $P5013, "$/"
    set $S5001, $P5013
    $P5014 = $P5011."parse_name"($S5001)
    set $P101, $P5014
    set $N5001, $P101
    set $N5002, 1
    isgt $I5003, $N5001, $N5002
    unless $I5003 goto if2154_else4889 
.annotate 'line', 2051
    find_lex $P5015, "$/"
    unless_null $P5015, fallback4895
    nqp_get_sc_object $P5016, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5015, $P5016
  fallback4895:
    set fb_tmp_340, $P5015
    repr_defined $I5004, fb_tmp_340
    unless $I5004 goto if2156_else4893 
    set $P5017, fb_tmp_340["twigil"]
    set $P5019, $P5017
    goto if2156_end4894
  if2156_else4893:
    null $P5018
    set $P5019, $P5018
  if2156_end4894:
    unless_null $P5019, vivi_21574896
    nqp_get_sc_object $P5020, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5019, $P5020
  vivi_21574896:
    unless $P5019 goto if2155_end4892 
.annotate 'line', 2052
.annotate 'line', 2053
    find_lex $P5021, "$/"
    $P5022 = $P5021."CURSOR"()
    $P5023 = $P5022."panic"("Twigil not allowed on multi-part name")
  if2155_end4892:
.annotate 'line', 2055
    find_lex $P5024, "$/"
    $P5025 = "&lexical_package_lookup"($P101, $P5024)
    store_lex "$past", $P5025
    set $P5088, $P5025
    goto if2154_end4890
  if2154_else4889:
    find_lex $P5026, "$/"
    unless_null $P5026, fallback4903
    nqp_get_sc_object $P5027, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5026, $P5027
  fallback4903:
    set fb_tmp_342, $P5026
    repr_defined $I5007, fb_tmp_342
    unless $I5007 goto if2160_else4901 
    set $P5028, fb_tmp_342["twigil"]
    set $P5030, $P5028
    goto if2160_end4902
  if2160_else4901:
    null $P5029
    set $P5030, $P5029
  if2160_end4902:
    unless_null $P5030, vivi_21614904
    nqp_get_sc_object $P5031, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5030, $P5031
  vivi_21614904:
    set fb_tmp_341, $P5030
    repr_defined $I5006, fb_tmp_341
    unless $I5006 goto if2159_else4899 
    set $P5032, fb_tmp_341[0]
    set $P5034, $P5032
    goto if2159_end4900
  if2159_else4899:
    null $P5033
    set $P5034, $P5033
  if2159_end4900:
    unless_null $P5034, vivi_21624905
    nqp_get_sc_object $P5035, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5034, $P5035
  vivi_21624905:
    set $S5002, $P5034
    iseq $I5005, $S5002, "*"
    unless $I5005 goto if2158_else4897 
    .const 'Sub' $P5036 = 'cuid_458_1365879995.227' 
    capture_lex $P5036
    $P5037 = $P5036()
    set $P5087, $P5037
    goto if2158_end4898
  if2158_else4897:
    find_lex $P5038, "$/"
    unless_null $P5038, fallback4920
    nqp_get_sc_object $P5039, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5038, $P5039
  fallback4920:
    set fb_tmp_346, $P5038
    repr_defined $I5010, fb_tmp_346
    unless $I5010 goto if2169_else4918 
    set $P5040, fb_tmp_346["twigil"]
    set $P5042, $P5040
    goto if2169_end4919
  if2169_else4918:
    null $P5041
    set $P5042, $P5041
  if2169_end4919:
    unless_null $P5042, vivi_21704921
    nqp_get_sc_object $P5043, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5042, $P5043
  vivi_21704921:
    set fb_tmp_345, $P5042
    repr_defined $I5009, fb_tmp_345
    unless $I5009 goto if2168_else4916 
    set $P5044, fb_tmp_345[0]
    set $P5046, $P5044
    goto if2168_end4917
  if2168_else4916:
    null $P5045
    set $P5046, $P5045
  if2168_end4917:
    unless_null $P5046, vivi_21714922
    nqp_get_sc_object $P5047, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5046, $P5047
  vivi_21714922:
    set $S5003, $P5046
    iseq $I5008, $S5003, "!"
    unless $I5008 goto if2167_else4914 
    .const 'Sub' $P5048 = 'cuid_462_1365879995.227' 
    capture_lex $P5048
    $P5049 = $P5048()
    set $P5086, $P5049
    goto if2167_end4915
  if2167_else4914:
    find_lex $P5050, "$/"
    unless_null $P5050, fallback4971
    nqp_get_sc_object $P5051, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5050, $P5051
  fallback4971:
    set fb_tmp_353, $P5050
    repr_defined $I5011, fb_tmp_353
    unless $I5011 goto if2196_else4969 
    set $P5052, fb_tmp_353["semilist"]
    set $P5054, $P5052
    goto if2196_end4970
  if2196_else4969:
    null $P5053
    set $P5054, $P5053
  if2196_end4970:
    unless_null $P5054, vivi_21974972
    nqp_get_sc_object $P5055, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5054, $P5055
  vivi_21974972:
    unless $P5054 goto if2195_else4967 
    .const 'Sub' $P5056 = 'cuid_463_1365879995.227' 
    capture_lex $P5056
    $P5057 = $P5056()
    set $P5085, $P5057
    goto if2195_end4968
  if2195_else4967:
.annotate 'line', 2112
    find_dynamic_lex $P5058, "$*W"
    unless_null $P5058, fallback4991
    nqp_get_sc_object $P5060, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5059, $P5060
    set fb_tmp_357, $P5059
    repr_defined $I5012, fb_tmp_357
    unless $I5012 goto if2207_else4992 
    set $P5061, fb_tmp_357["$W"]
    set $P5063, $P5061
    goto if2207_end4993
  if2207_else4992:
    null $P5062
    set $P5063, $P5062
  if2207_end4993:
    unless_null $P5063, vivi_22084994
    nqp_get_sc_object $P5064, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5063, $P5064
  vivi_22084994:
    unless_null $P5063, vivi_22094995
    die "Contextual $*W not found"
    box $P5065, "Contextual $*W not found"
    set $P5063, $P5065
  vivi_22094995:
    set $P5058, $P5063
  fallback4991:
    set fb_tmp_358, $P101
    repr_defined $I5013, fb_tmp_358
    unless $I5013 goto if2210_else4996 
    set $P5066, fb_tmp_358[0]
    set $P5068, $P5066
    goto if2210_end4997
  if2210_else4996:
    null $P5067
    set $P5068, $P5067
  if2210_end4997:
    unless_null $P5068, vivi_22114998
    nqp_get_sc_object $P5069, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5068, $P5069
  vivi_22114998:
    set $S5004, $P5068
    $P5070 = $P5058."is_package"($S5004)
    unless $P5070 goto if2206_else4989 
.annotate 'line', 2113
    find_lex $P5071, "$/"
    $P5072 = "&lexical_package_lookup"($P101, $P5071)
    store_lex "$past", $P5072
.annotate 'line', 2114
    find_lex $P5073, "$past"
    find_lex $P5074, "$/"
    unless_null $P5074, fallback5001
    nqp_get_sc_object $P5075, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5074, $P5075
  fallback5001:
    set fb_tmp_359, $P5074
    repr_defined $I5014, fb_tmp_359
    unless $I5014 goto if2212_else4999 
    set $P5076, fb_tmp_359["sigil"]
    set $P5078, $P5076
    goto if2212_end5000
  if2212_else4999:
    null $P5077
    set $P5078, $P5077
  if2212_end5000:
    unless_null $P5078, vivi_22135002
    nqp_get_sc_object $P5079, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5078, $P5079
  vivi_22135002:
    $P5080 = "&default_for"($P5078)
    $P5081 = $P5073."fallback"($P5080)
    set $P5084, $P5081
    goto if2206_end4990
  if2206_else4989:
    .const 'Sub' $P5082 = 'cuid_464_1365879995.227' 
    capture_lex $P5082
    $P5083 = $P5082()
    set $P5084, $P5083
  if2206_end4990:
    set $P5085, $P5084
  if2195_end4968:
    set $P5086, $P5085
  if2167_end4915:
    set $P5087, $P5086
  if2158_end4898:
    set $P5088, $P5087
  if2154_end4890:
    .return ($P5088) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_458_1365879995.227") :anon :lex :outer("cuid_459_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2057
    .lex "$global_fallback", $P101 
    .local pmc fb_tmp_343 
    .local pmc fb_tmp_344 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
.annotate 'line', 2058
    nqp_get_sc_object $P5002, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 2060
    new $P5003, 'QRPA'
    box $P5004, "GLOBAL"
    push $P5003, $P5004
    find_lex $P5005, "$/"
    unless_null $P5005, fallback4908
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5005, $P5006
  fallback4908:
    set fb_tmp_343, $P5005
    repr_defined $I5001, fb_tmp_343
    unless $I5001 goto if2163_else4906 
    set $P5007, fb_tmp_343["sigil"]
    set $P5009, $P5007
    goto if2163_end4907
  if2163_else4906:
    null $P5008
    set $P5009, $P5008
  if2163_end4907:
    unless_null $P5009, vivi_21644909
    nqp_get_sc_object $P5010, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5009, $P5010
  vivi_21644909:
    set $S5002, $P5009
    find_lex $P5011, "$/"
    unless_null $P5011, fallback4912
    nqp_get_sc_object $P5012, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5011, $P5012
  fallback4912:
    set fb_tmp_344, $P5011
    repr_defined $I5002, fb_tmp_344
    unless $I5002 goto if2165_else4910 
    set $P5013, fb_tmp_344["desigilname"]
    set $P5015, $P5013
    goto if2165_end4911
  if2165_else4910:
    null $P5014
    set $P5015, $P5014
  if2165_end4911:
    unless_null $P5015, vivi_21664913
    nqp_get_sc_object $P5016, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5015, $P5016
  vivi_21664913:
    set $S5003, $P5015
    concat $S5001, $S5002, $S5003
    box $P5017, $S5001
    push $P5003, $P5017
    find_lex $P5018, "$/"
    $P5019 = "&lexical_package_lookup"($P5003, $P5018)
.annotate 'line', 2061
    nqp_get_sc_object $P5020, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 2063
    nqp_get_sc_object $P5021, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 52
    find_lex $P5022, "$/"
    set $S5006, $P5022
    concat $S5005, "Contextual ", $S5006
    concat $S5004, $S5005, " not found"
    $P5023 = $P5021."new"($S5004 :named("value"))
    $P5024 = $P5020."new"($P5023, "die_s" :named("op"))
    $P5025 = $P5002."new"($P5019, $P5024, "ifnull" :named("op"))
    set $P101, $P5025
.annotate 'line', 2065
    nqp_get_sc_object $P5026, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 80
.annotate 'line', 2066
    find_lex $P5027, "@name"
    $P5028 = $P5027."pop"()
    set $S5007, $P5028
    $P5029 = $P5026."new"($S5007 :named("name"), "contextual" :named("scope"), $P101 :named("fallback"))
    store_lex "$past", $P5029
    .return ($P5029) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_462_1365879995.227") :anon :lex :outer("cuid_459_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2070
    .const 'Sub' $P5052 = 'cuid_461_1365879995.227' 
    capture_lex $P5052 
    .lex "$name", $P101 
    .lex "$ch", $P102 
    .local pmc fb_tmp_347 
    .local pmc fb_tmp_348 
    .local pmc fb_tmp_349 
    .local pmc fb_tmp_350 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
.annotate 'line', 2071
    find_lex $P5003, "@name"
    $P5004 = $P5003."pop"()
    set $S5001, $P5004
    box $P5005, $S5001
    set $P101, $P5005
    find_dynamic_lex $P5006, "$*PKGDECL"
    unless_null $P5006, fallback4925
    nqp_get_sc_object $P5008, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5007, $P5008
    set fb_tmp_347, $P5007
    repr_defined $I5002, fb_tmp_347
    unless $I5002 goto if2173_else4926 
    set $P5009, fb_tmp_347["$PKGDECL"]
    set $P5011, $P5009
    goto if2173_end4927
  if2173_else4926:
    null $P5010
    set $P5011, $P5010
  if2173_end4927:
    unless_null $P5011, vivi_21744928
    nqp_get_sc_object $P5012, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5011, $P5012
  vivi_21744928:
    unless_null $P5011, vivi_21754929
    die "Contextual $*PKGDECL not found"
    box $P5013, "Contextual $*PKGDECL not found"
    set $P5011, $P5013
  vivi_21754929:
    set $P5006, $P5011
  fallback4925:
    set $S5002, $P5006
    iseq $I5001, $S5002, "role"
    unless $I5001 goto if2172_else4923 
.annotate 'line', 2073
.annotate 'line', 2074
    nqp_get_sc_object $P5014, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5015 = $P5014."new"("$?CLASS" :named("name"), "lexical" :named("scope"))
    set $P102, $P5015
.annotate 'line', 2075
    find_dynamic_lex $P5016, "$*PACKAGE"
    unless_null $P5016, fallback4930
    nqp_get_sc_object $P5018, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5017, $P5018
    set fb_tmp_348, $P5017
    repr_defined $I5003, fb_tmp_348
    unless $I5003 goto if2176_else4931 
    set $P5019, fb_tmp_348["$PACKAGE"]
    set $P5021, $P5019
    goto if2176_end4932
  if2176_else4931:
    null $P5020
    set $P5021, $P5020
  if2176_end4932:
    unless_null $P5021, vivi_21774933
    nqp_get_sc_object $P5022, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5021, $P5022
  vivi_21774933:
    unless_null $P5021, vivi_21784934
    die "Contextual $*PACKAGE not found"
    box $P5023, "Contextual $*PACKAGE not found"
    set $P5021, $P5023
  vivi_21784934:
    set $P5016, $P5021
  fallback4930:
    $P5024 = $P102."set_compile_time_value"($P5016)
    goto if2172_end4924
  if2172_else4923:
.annotate 'line', 2077
.annotate 'line', 2078
    nqp_get_sc_object $P5025, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 61
    find_dynamic_lex $P5026, "$*PACKAGE"
    unless_null $P5026, fallback4935
    nqp_get_sc_object $P5028, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5027, $P5028
    set fb_tmp_349, $P5027
    repr_defined $I5004, fb_tmp_349
    unless $I5004 goto if2179_else4936 
    set $P5029, fb_tmp_349["$PACKAGE"]
    set $P5031, $P5029
    goto if2179_end4937
  if2179_else4936:
    null $P5030
    set $P5031, $P5030
  if2179_end4937:
    unless_null $P5031, vivi_21804938
    nqp_get_sc_object $P5032, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5031, $P5032
  vivi_21804938:
    unless_null $P5031, vivi_21814939
    die "Contextual $*PACKAGE not found"
    box $P5033, "Contextual $*PACKAGE not found"
    set $P5031, $P5033
  vivi_21814939:
    set $P5026, $P5031
  fallback4935:
    $P5034 = $P5025."new"($P5026 :named("value"))
    set $P102, $P5034
  if2172_end4924:
.annotate 'line', 2080
    nqp_get_sc_object $P5035, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
.annotate 'line', 2082
    nqp_get_sc_object $P5036, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 2083
    nqp_get_sc_object $P5037, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5038 = $P5037."new"("self" :named("name"), "lexical" :named("scope"))
    $P5039 = $P5036."new"($P5038, "decont" :named("op"))
    $P5040 = $P5035."new"($P5039, $P102, $P101 :named("name"), "attribute" :named("scope"))
    store_lex "$past", $P5040
    find_dynamic_lex $P5041, "$*IN_DECL"
    unless_null $P5041, fallback4942
    nqp_get_sc_object $P5043, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5042, $P5043
    set fb_tmp_350, $P5042
    repr_defined $I5005, fb_tmp_350
    unless $I5005 goto if2183_else4943 
    set $P5044, fb_tmp_350["$IN_DECL"]
    set $P5046, $P5044
    goto if2183_end4944
  if2183_else4943:
    null $P5045
    set $P5046, $P5045
  if2183_end4944:
    unless_null $P5046, vivi_21844945
    nqp_get_sc_object $P5047, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5046, $P5047
  vivi_21844945:
    unless_null $P5046, vivi_21854946
    die "Contextual $*IN_DECL not found"
    box $P5048, "Contextual $*IN_DECL not found"
    set $P5046, $P5048
  vivi_21854946:
    set $P5041, $P5046
  fallback4942:
    set $P5051, $P5041
    if $P5041 goto unless2182_end4941 
    .const 'Sub' $P5049 = 'cuid_461_1365879995.227' 
    capture_lex $P5049
    $P5050 = $P5049()
    set $P5051, $P5050
  unless2182_end4941:
    .return ($P5051) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_461_1365879995.227") :anon :lex :outer("cuid_462_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2088
    .const 'Sub' $P5036 = 'cuid_460_1365879995.227' 
    capture_lex $P5036 
    .lex "$attr", $P101 
    .local pmc fb_tmp_351 
    .local pmc fb_tmp_352 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
.annotate 'line', 2090
    find_dynamic_lex $P5006, "$*PACKAGE"
    unless_null $P5006, fallback4947
    nqp_get_sc_object $P5008, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5007, $P5008
    set fb_tmp_351, $P5007
    repr_defined $I5001, fb_tmp_351
    unless $I5001 goto if2186_else4948 
    set $P5009, fb_tmp_351["$PACKAGE"]
    set $P5011, $P5009
    goto if2186_end4949
  if2186_else4948:
    null $P5010
    set $P5011, $P5010
  if2186_end4949:
    unless_null $P5011, vivi_21874950
    nqp_get_sc_object $P5012, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5011, $P5012
  vivi_21874950:
    unless_null $P5011, vivi_21884951
    die "Contextual $*PACKAGE not found"
    box $P5013, "Contextual $*PACKAGE not found"
    set $P5011, $P5013
  vivi_21884951:
    set $P5006, $P5011
  fallback4947:
    get_how $P5005, $P5006
    find_dynamic_lex $P5014, "$*PACKAGE"
    unless_null $P5014, fallback4952
    nqp_get_sc_object $P5016, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5015, $P5016
    set fb_tmp_352, $P5015
    repr_defined $I5002, fb_tmp_352
    unless $I5002 goto if2189_else4953 
    set $P5017, fb_tmp_352["$PACKAGE"]
    set $P5019, $P5017
    goto if2189_end4954
  if2189_else4953:
    null $P5018
    set $P5019, $P5018
  if2189_end4954:
    unless_null $P5019, vivi_21904955
    nqp_get_sc_object $P5020, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5019, $P5020
  vivi_21904955:
    unless_null $P5019, vivi_21914956
    die "Contextual $*PACKAGE not found"
    box $P5021, "Contextual $*PACKAGE not found"
    set $P5019, $P5021
  vivi_21914956:
    set $P5014, $P5019
  fallback4952:
    $P5022 = $P5005."attributes"($P5014, 1 :named("local"))
    set $P5002, $P5022
    iter $P5004, $P5022
    new $P5024, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5024, for_handlers4959
    push_eh $P5024
  for_next4960:
    unless $P5004, for_done4962
    shift $P5025, $P5004
  for_redo4961:
    .const 'Sub' $P5023 = 'cuid_460_1365879995.227' 
    capture_lex $P5023
    $P5002 = $P5023($P5025)
    goto for_next4960
  for_handlers4959:
    .get_results ($P5024)
    pop_upto_eh $P5024
    getattribute $P5024, $P5024, 'type'
    eq $P5024, .CONTROL_LOOP_NEXT, for_next4960
    eq $P5024, .CONTROL_LOOP_REDO, for_redo4961
  for_done4962:
    pop_eh 
    defined $I5003, $P101
    unless $I5003 goto if2193_else4963 
.annotate 'line', 2096
    can $I5004, $P101, "type"
    box $P5030, $I5004
    set $P5029, $P5030
    unless $I5004 goto if2194_end4966 
.annotate 'line', 2097
.annotate 'line', 2098
    find_lex $P5026, "$past"
    $P5027 = $P101."type"()
    $P5028 = $P5026."returns"($P5027)
    set $P5029, $P5028
  if2194_end4966:
    set $P5035, $P5029
    goto if2193_end4964
  if2193_else4963:
.annotate 'line', 2101
.annotate 'line', 2102
    find_lex $P5031, "$/"
    $P5032 = $P5031."CURSOR"()
    find_lex $P5033, "$name"
    set $S5003, $P5033
    concat $S5002, "Attribute '", $S5003
    concat $S5001, $S5002, "' not declared"
    $P5034 = $P5032."panic"($S5001)
    set $P5035, $P5034
  if2193_end4964:
    .return ($P5035) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_460_1365879995.227") :anon :lex :outer("cuid_461_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2090
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 2091
    $P5001 = _lex_param_0."name"()
    set $S5001, $P5001
    find_lex $P5002, "$name"
    set $S5002, $P5002
    iseq $I5001, $S5001, $S5002
    set $I5002, $I5001
    unless $I5001 goto if2192_end4958 
    store_lex "$attr", _lex_param_0
    die 0, .CONTROL_LOOP_LAST
    set $I5002, 0
  if2192_end4958:
    .return ($I5002) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_463_1365879995.227") :anon :lex :outer("cuid_459_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2106
    .lex "$name", $P101 
    .local pmc fb_tmp_354 
    .local pmc fb_tmp_355 
    .local pmc fb_tmp_356 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    find_lex $P5002, "$/"
    unless_null $P5002, fallback4977
    nqp_get_sc_object $P5003, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5002, $P5003
  fallback4977:
    set fb_tmp_354, $P5002
    repr_defined $I5002, fb_tmp_354
    unless $I5002 goto if2199_else4975 
    set $P5004, fb_tmp_354["sigil"]
    set $P5006, $P5004
    goto if2199_end4976
  if2199_else4975:
    null $P5005
    set $P5006, $P5005
  if2199_end4976:
    unless_null $P5006, vivi_22004978
    nqp_get_sc_object $P5007, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5006, $P5007
  vivi_22004978:
    set $S5001, $P5006
    iseq $I5001, $S5001, "@"
    unless $I5001 goto if2198_else4973 
    set $S5004, "list"
    goto if2198_end4974
  if2198_else4973:
    find_lex $P5008, "$/"
    unless_null $P5008, fallback4983
    nqp_get_sc_object $P5009, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5008, $P5009
  fallback4983:
    set fb_tmp_355, $P5008
    repr_defined $I5004, fb_tmp_355
    unless $I5004 goto if2202_else4981 
    set $P5010, fb_tmp_355["sigil"]
    set $P5012, $P5010
    goto if2202_end4982
  if2202_else4981:
    null $P5011
    set $P5012, $P5011
  if2202_end4982:
    unless_null $P5012, vivi_22034984
    nqp_get_sc_object $P5013, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5012, $P5013
  vivi_22034984:
    set $S5002, $P5012
    iseq $I5003, $S5002, "%"
    unless $I5003 goto if2201_else4979 
    set $S5003, "hash"
    goto if2201_end4980
  if2201_else4979:
    set $S5003, "item"
  if2201_end4980:
    set $S5004, $S5003
  if2198_end4974:
    box $P5014, $S5004
    set $P101, $P5014
.annotate 'line', 2110
    nqp_get_sc_object $P5015, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    find_lex $P5016, "$/"
    unless_null $P5016, fallback4987
    nqp_get_sc_object $P5017, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5016, $P5017
  fallback4987:
    set fb_tmp_356, $P5016
    repr_defined $I5005, fb_tmp_356
    unless $I5005 goto if2204_else4985 
    set $P5018, fb_tmp_356["semilist"]
    set $P5020, $P5018
    goto if2204_end4986
  if2204_else4985:
    null $P5019
    set $P5020, $P5019
  if2204_end4986:
    unless_null $P5020, vivi_22054988
    nqp_get_sc_object $P5021, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5020, $P5021
  vivi_22054988:
    $P5022 = $P5020."ast"()
    $P5023 = $P5015."new"($P5022, "callmethod" :named("op"), $P101 :named("name"))
    store_lex "$past", $P5023
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_464_1365879995.227") :anon :lex :outer("cuid_459_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2116
    .lex "$name", $P101 
    .local pmc fb_tmp_360 
    .local pmc fb_tmp_361 
    .local pmc fb_tmp_362 
    .local pmc fb_tmp_363 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
.annotate 'line', 2117
    find_lex $P5002, "@name"
    $P5003 = $P5002."pop"()
    set $S5001, $P5003
    box $P5004, $S5001
    set $P101, $P5004
    find_dynamic_lex $P5005, "$*IN_DECL"
    unless_null $P5005, fallback5015
    nqp_get_sc_object $P5007, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5006, $P5007
    set fb_tmp_360, $P5006
    repr_defined $I5002, fb_tmp_360
    unless $I5002 goto if2220_else5016 
    set $P5008, fb_tmp_360["$IN_DECL"]
    set $P5010, $P5008
    goto if2220_end5017
  if2220_else5016:
    null $P5009
    set $P5010, $P5009
  if2220_end5017:
    unless_null $P5010, vivi_22215018
    nqp_get_sc_object $P5011, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5010, $P5011
  vivi_22215018:
    unless_null $P5010, vivi_22225019
    die "Contextual $*IN_DECL not found"
    box $P5012, "Contextual $*IN_DECL not found"
    set $P5010, $P5012
  vivi_22225019:
    set $P5005, $P5010
  fallback5015:
    set $S5002, $P5005
    iseq $I5001, $S5002, "variable"
    set $I5004, $I5001
    if $I5001 goto unless2219_end5014 
    set $S5003, $P101
    iseq $I5003, $S5003, "$_"
    set $I5004, $I5003
  unless2219_end5014:
    set $I5006, $I5004
    if $I5004 goto unless2218_end5012 
    set $S5004, $P101
    iseq $I5005, $S5004, "$/"
    set $I5006, $I5005
  unless2218_end5012:
    set $I5008, $I5006
    if $I5006 goto unless2217_end5010 
    set $S5005, $P101
    iseq $I5007, $S5005, "$!"
    set $I5008, $I5007
  unless2217_end5010:
    set $I5012, $I5008
    if $I5008 goto unless2216_end5008 
    find_lex $P5013, "$/"
    unless_null $P5013, fallback5024
    nqp_get_sc_object $P5014, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5013, $P5014
  fallback5024:
    set fb_tmp_362, $P5013
    repr_defined $I5011, fb_tmp_362
    unless $I5011 goto if2224_else5022 
    set $P5015, fb_tmp_362["twigil"]
    set $P5017, $P5015
    goto if2224_end5023
  if2224_else5022:
    null $P5016
    set $P5017, $P5016
  if2224_end5023:
    unless_null $P5017, vivi_22255025
    nqp_get_sc_object $P5018, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5017, $P5018
  vivi_22255025:
    set fb_tmp_361, $P5017
    repr_defined $I5010, fb_tmp_361
    unless $I5010 goto if2223_else5020 
    set $P5019, fb_tmp_361[0]
    set $P5021, $P5019
    goto if2223_end5021
  if2223_else5020:
    null $P5020
    set $P5021, $P5020
  if2223_end5021:
    unless_null $P5021, vivi_22265026
    nqp_get_sc_object $P5022, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5021, $P5022
  vivi_22265026:
    set $S5006, $P5021
    iseq $I5009, $S5006, "?"
    set $I5012, $I5009
  unless2216_end5008:
    box $P5033, $I5012
    set $P5032, $P5033
    if $I5012 goto unless2215_end5006 
.annotate 'line', 2119
    find_dynamic_lex $P5023, "$*W"
    unless_null $P5023, fallback5027
    nqp_get_sc_object $P5025, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5024, $P5025
    set fb_tmp_363, $P5024
    repr_defined $I5013, fb_tmp_363
    unless $I5013 goto if2227_else5028 
    set $P5026, fb_tmp_363["$W"]
    set $P5028, $P5026
    goto if2227_end5029
  if2227_else5028:
    null $P5027
    set $P5028, $P5027
  if2227_end5029:
    unless_null $P5028, vivi_22285030
    nqp_get_sc_object $P5029, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5028, $P5029
  vivi_22285030:
    unless_null $P5028, vivi_22295031
    die "Contextual $*W not found"
    box $P5030, "Contextual $*W not found"
    set $P5028, $P5030
  vivi_22295031:
    set $P5023, $P5028
  fallback5027:
    $P5031 = $P5023."is_lexical"($P101)
    set $P5032, $P5031
  unless2215_end5006:
    unless $P5032 goto if2214_else5003 
.annotate 'line', 2120
    nqp_get_sc_object $P5034, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5035 = $P5034."new"($P101 :named("name"), "lexical" :named("scope"))
    store_lex "$past", $P5035
    set $P5039, $P5035
    goto if2214_end5004
  if2214_else5003:
.annotate 'line', 2122
.annotate 'line', 2123
    find_lex $P5036, "$/"
    $P5037 = $P5036."CURSOR"()
    set $S5009, $P101
    concat $S5008, "Use of undeclared variable '", $S5009
    concat $S5007, $S5008, "'"
    $P5038 = $P5037."panic"($S5007)
    set $P5039, $P5038
  if2214_end5004:
    .return ($P5039) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<module>" :subid("cuid_288_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2130
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_364 
    unless_null _lex_param_1, fallback5034
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback5034:
    set fb_tmp_364, _lex_param_1
    repr_defined $I5001, fb_tmp_364
    unless $I5001 goto if2230_else5032 
    set $P5002, fb_tmp_364["package_def"]
    set $P5004, $P5002
    goto if2230_end5033
  if2230_else5032:
    null $P5003
    set $P5004, $P5003
  if2230_end5033:
    unless_null $P5004, vivi_22315035
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_22315035:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<knowhow>" :subid("cuid_289_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2131
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_365 
    unless_null _lex_param_1, fallback5038
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback5038:
    set fb_tmp_365, _lex_param_1
    repr_defined $I5001, fb_tmp_365
    unless $I5001 goto if2232_else5036 
    set $P5002, fb_tmp_365["package_def"]
    set $P5004, $P5002
    goto if2232_end5037
  if2232_else5036:
    null $P5003
    set $P5004, $P5003
  if2232_end5037:
    unless_null $P5004, vivi_22335039
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_22335039:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<class>" :subid("cuid_290_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2132
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_366 
    unless_null _lex_param_1, fallback5042
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback5042:
    set fb_tmp_366, _lex_param_1
    repr_defined $I5001, fb_tmp_366
    unless $I5001 goto if2234_else5040 
    set $P5002, fb_tmp_366["package_def"]
    set $P5004, $P5002
    goto if2234_end5041
  if2234_else5040:
    null $P5003
    set $P5004, $P5003
  if2234_end5041:
    unless_null $P5004, vivi_22355043
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_22355043:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<grammar>" :subid("cuid_291_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2133
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_367 
    unless_null _lex_param_1, fallback5046
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback5046:
    set fb_tmp_367, _lex_param_1
    repr_defined $I5001, fb_tmp_367
    unless $I5001 goto if2236_else5044 
    set $P5002, fb_tmp_367["package_def"]
    set $P5004, $P5002
    goto if2236_end5045
  if2236_else5044:
    null $P5003
    set $P5004, $P5003
  if2236_end5045:
    unless_null $P5004, vivi_22375047
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_22375047:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<role>" :subid("cuid_292_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2134
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_368 
    unless_null _lex_param_1, fallback5050
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback5050:
    set fb_tmp_368, _lex_param_1
    repr_defined $I5001, fb_tmp_368
    unless $I5001 goto if2238_else5048 
    set $P5002, fb_tmp_368["package_def"]
    set $P5004, $P5002
    goto if2238_end5049
  if2238_else5048:
    null $P5003
    set $P5004, $P5003
  if2238_end5049:
    unless_null $P5004, vivi_22395051
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_22395051:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<native>" :subid("cuid_293_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2135
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_369 
    unless_null _lex_param_1, fallback5054
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback5054:
    set fb_tmp_369, _lex_param_1
    repr_defined $I5001, fb_tmp_369
    unless $I5001 goto if2240_else5052 
    set $P5002, fb_tmp_369["package_def"]
    set $P5004, $P5002
    goto if2240_end5053
  if2240_else5052:
    null $P5003
    set $P5004, $P5003
  if2240_end5053:
    unless_null $P5004, vivi_22415055
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_22415055:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<stub>" :subid("cuid_294_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2137
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$HOW", $P101 
    .lex "$PACKAGE", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_370 
    .local pmc fb_tmp_371 
    .local pmc fb_tmp_372 
    .local pmc fb_tmp_373 
    .local pmc fb_tmp_374 
    .local pmc fb_tmp_375 
    .local pmc fb_tmp_376 
    .local pmc fb_tmp_377 
    .local pmc fb_tmp_378 
    .local pmc fb_tmp_379 
    .local pmc fb_tmp_380 
    .local pmc fb_tmp_381 
    .local pmc fb_tmp_382 
    .local pmc fb_tmp_383 
    .local pmc fb_tmp_384 
    .local pmc fb_tmp_385 
    .local pmc fb_tmp_386 
    .local pmc fb_tmp_387 
    .local pmc fb_tmp_388 
    .local pmc fb_tmp_389 
    .local pmc fb_tmp_390 
    .local pmc fb_tmp_391 
    .local pmc fb_tmp_392 
    .local pmc fb_tmp_393 
    .local pmc fb_tmp_394 
    .local pmc fb_tmp_395 
    .local pmc fb_tmp_396 
    .local pmc fb_tmp_397 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
.annotate 'line', 2140
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback5056
    nqp_get_sc_object $P5005, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5004, $P5005
    set fb_tmp_370, $P5004
    repr_defined $I5001, fb_tmp_370
    unless $I5001 goto if2242_else5057 
    set $P5006, fb_tmp_370["$W"]
    set $P5008, $P5006
    goto if2242_end5058
  if2242_else5057:
    null $P5007
    set $P5008, $P5007
  if2242_end5058:
    unless_null $P5008, vivi_22435059
    nqp_get_sc_object $P5009, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5008, $P5009
  vivi_22435059:
    unless_null $P5008, vivi_22445060
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_22445060:
    set $P5003, $P5008
  fallback5056:
    unless_null _lex_param_1, fallback5065
    nqp_get_sc_object $P5011, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5011
  fallback5065:
    set fb_tmp_372, _lex_param_1
    repr_defined $I5003, fb_tmp_372
    unless $I5003 goto if2246_else5063 
    set $P5012, fb_tmp_372["metaclass"]
    set $P5014, $P5012
    goto if2246_end5064
  if2246_else5063:
    null $P5013
    set $P5014, $P5013
  if2246_end5064:
    unless_null $P5014, vivi_22475066
    nqp_get_sc_object $P5015, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5014, $P5015
  vivi_22475066:
    set fb_tmp_371, $P5014
    repr_defined $I5002, fb_tmp_371
    unless $I5002 goto if2245_else5061 
    set $P5016, fb_tmp_371["identifier"]
    set $P5018, $P5016
    goto if2245_end5062
  if2245_else5061:
    null $P5017
    set $P5018, $P5017
  if2245_end5062:
    unless_null $P5018, vivi_22485067
    nqp_get_sc_object $P5019, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5018, $P5019
  vivi_22485067:
    $P5020 = $P5003."find_sym"($P5018)
    set $P101, $P5020
.annotate 'line', 2141
    find_dynamic_lex $P5021, "$*W"
    unless_null $P5021, fallback5068
    nqp_get_sc_object $P5023, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5022, $P5023
    set fb_tmp_373, $P5022
    repr_defined $I5004, fb_tmp_373
    unless $I5004 goto if2249_else5069 
    set $P5024, fb_tmp_373["$W"]
    set $P5026, $P5024
    goto if2249_end5070
  if2249_else5069:
    null $P5025
    set $P5026, $P5025
  if2249_end5070:
    unless_null $P5026, vivi_22505071
    nqp_get_sc_object $P5027, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5026, $P5027
  vivi_22505071:
    unless_null $P5026, vivi_22515072
    die "Contextual $*W not found"
    box $P5028, "Contextual $*W not found"
    set $P5026, $P5028
  vivi_22515072:
    set $P5021, $P5026
  fallback5068:
    unless_null _lex_param_1, fallback5075
    nqp_get_sc_object $P5029, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5029
  fallback5075:
    set fb_tmp_374, _lex_param_1
    repr_defined $I5005, fb_tmp_374
    unless $I5005 goto if2252_else5073 
    set $P5030, fb_tmp_374["name"]
    set $P5032, $P5030
    goto if2252_end5074
  if2252_else5073:
    null $P5031
    set $P5032, $P5031
  if2252_end5074:
    unless_null $P5032, vivi_22535076
    nqp_get_sc_object $P5033, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5032, $P5033
  vivi_22535076:
    set $S5001, $P5032
    $P5034 = $P5021."pkg_create_mo"($P101, $S5001 :named("name"))
    set $P102, $P5034
    find_dynamic_lex $P5035, "$*SCOPE"
    unless_null $P5035, fallback5081
    nqp_get_sc_object $P5037, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5036, $P5037
    set fb_tmp_375, $P5036
    repr_defined $I5007, fb_tmp_375
    unless $I5007 goto if2256_else5082 
    set $P5038, fb_tmp_375["$SCOPE"]
    set $P5040, $P5038
    goto if2256_end5083
  if2256_else5082:
    null $P5039
    set $P5040, $P5039
  if2256_end5083:
    unless_null $P5040, vivi_22575084
    nqp_get_sc_object $P5041, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5040, $P5041
  vivi_22575084:
    unless_null $P5040, vivi_22585085
    die "Contextual $*SCOPE not found"
    box $P5042, "Contextual $*SCOPE not found"
    set $P5040, $P5042
  vivi_22585085:
    set $P5035, $P5040
  fallback5081:
    set $S5002, $P5035
    iseq $I5006, $S5002, "our"
    set $I5010, $I5006
    if $I5006 goto unless2255_end5080 
    find_dynamic_lex $P5043, "$*SCOPE"
    unless_null $P5043, fallback5086
    nqp_get_sc_object $P5045, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5044, $P5045
    set fb_tmp_376, $P5044
    repr_defined $I5009, fb_tmp_376
    unless $I5009 goto if2259_else5087 
    set $P5046, fb_tmp_376["$SCOPE"]
    set $P5048, $P5046
    goto if2259_end5088
  if2259_else5087:
    null $P5047
    set $P5048, $P5047
  if2259_end5088:
    unless_null $P5048, vivi_22605089
    nqp_get_sc_object $P5049, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5048, $P5049
  vivi_22605089:
    unless_null $P5048, vivi_22615090
    die "Contextual $*SCOPE not found"
    box $P5050, "Contextual $*SCOPE not found"
    set $P5048, $P5050
  vivi_22615090:
    set $P5043, $P5048
  fallback5086:
    set $S5003, $P5043
    iseq $I5008, $S5003, ""
    set $I5010, $I5008
  unless2255_end5080:
    unless $I5010 goto if2254_else5077 
.annotate 'line', 2144
.annotate 'line', 2145
    find_dynamic_lex $P5051, "$*W"
    unless_null $P5051, fallback5091
    nqp_get_sc_object $P5053, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5052, $P5053
    set fb_tmp_377, $P5052
    repr_defined $I5011, fb_tmp_377
    unless $I5011 goto if2262_else5092 
    set $P5054, fb_tmp_377["$W"]
    set $P5056, $P5054
    goto if2262_end5093
  if2262_else5092:
    null $P5055
    set $P5056, $P5055
  if2262_end5093:
    unless_null $P5056, vivi_22635094
    nqp_get_sc_object $P5057, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5056, $P5057
  vivi_22635094:
    unless_null $P5056, vivi_22645095
    die "Contextual $*W not found"
    box $P5058, "Contextual $*W not found"
    set $P5056, $P5058
  vivi_22645095:
    set $P5051, $P5056
  fallback5091:
    find_dynamic_lex $P5059, "$*OUTERPACKAGE"
    unless_null $P5059, fallback5096
    nqp_get_sc_object $P5061, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5060, $P5061
    set fb_tmp_378, $P5060
    repr_defined $I5012, fb_tmp_378
    unless $I5012 goto if2265_else5097 
    set $P5062, fb_tmp_378["$OUTERPACKAGE"]
    set $P5064, $P5062
    goto if2265_end5098
  if2265_else5097:
    null $P5063
    set $P5064, $P5063
  if2265_end5098:
    unless_null $P5064, vivi_22665099
    nqp_get_sc_object $P5065, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5064, $P5065
  vivi_22665099:
    unless_null $P5064, vivi_22675100
    die "Contextual $*OUTERPACKAGE not found"
    box $P5066, "Contextual $*OUTERPACKAGE not found"
    set $P5064, $P5066
  vivi_22675100:
    set $P5059, $P5064
  fallback5096:
    unless_null _lex_param_1, fallback5105
    nqp_get_sc_object $P5067, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5067
  fallback5105:
    set fb_tmp_380, _lex_param_1
    repr_defined $I5014, fb_tmp_380
    unless $I5014 goto if2269_else5103 
    set $P5068, fb_tmp_380["name"]
    set $P5070, $P5068
    goto if2269_end5104
  if2269_else5103:
    null $P5069
    set $P5070, $P5069
  if2269_end5104:
    unless_null $P5070, vivi_22705106
    nqp_get_sc_object $P5071, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5070, $P5071
  vivi_22705106:
    set fb_tmp_379, $P5070
    repr_defined $I5013, fb_tmp_379
    unless $I5013 goto if2268_else5101 
    set $P5072, fb_tmp_379["identifier"]
    set $P5074, $P5072
    goto if2268_end5102
  if2268_else5101:
    null $P5073
    set $P5074, $P5073
  if2268_end5102:
    unless_null $P5074, vivi_22715107
    nqp_get_sc_object $P5075, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5074, $P5075
  vivi_22715107:
    $P5051."install_package_symbol"($P5059, $P5074, $P102)
    unless_null _lex_param_1, fallback5114
    nqp_get_sc_object $P5076, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5076
  fallback5114:
    set fb_tmp_382, _lex_param_1
    repr_defined $I5017, fb_tmp_382
    unless $I5017 goto if2274_else5112 
    set $P5077, fb_tmp_382["name"]
    set $P5079, $P5077
    goto if2274_end5113
  if2274_else5112:
    null $P5078
    set $P5079, $P5078
  if2274_end5113:
    unless_null $P5079, vivi_22755115
    nqp_get_sc_object $P5080, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5079, $P5080
  vivi_22755115:
    set fb_tmp_381, $P5079
    repr_defined $I5016, fb_tmp_381
    unless $I5016 goto if2273_else5110 
    set $P5081, fb_tmp_381["identifier"]
    set $P5083, $P5081
    goto if2273_end5111
  if2273_else5110:
    null $P5082
    set $P5083, $P5082
  if2273_end5111:
    unless_null $P5083, vivi_22765116
    nqp_get_sc_object $P5084, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5083, $P5084
  vivi_22765116:
    set $N5001, $P5083
    set $N5002, 1
    iseq $I5015, $N5001, $N5002
    box $P5117, $I5015
    set $P5116, $P5117
    unless $I5015 goto if2272_end5109 
.annotate 'line', 2146
.annotate 'line', 2147
    find_dynamic_lex $P5085, "$*W"
    unless_null $P5085, fallback5117
    nqp_get_sc_object $P5087, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5086, $P5087
    set fb_tmp_383, $P5086
    repr_defined $I5018, fb_tmp_383
    unless $I5018 goto if2277_else5118 
    set $P5088, fb_tmp_383["$W"]
    set $P5090, $P5088
    goto if2277_end5119
  if2277_else5118:
    null $P5089
    set $P5090, $P5089
  if2277_end5119:
    unless_null $P5090, vivi_22785120
    nqp_get_sc_object $P5091, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5090, $P5091
  vivi_22785120:
    unless_null $P5090, vivi_22795121
    die "Contextual $*W not found"
    box $P5092, "Contextual $*W not found"
    set $P5090, $P5092
  vivi_22795121:
    set $P5085, $P5090
  fallback5117:
    find_dynamic_lex $P5093, "$*W"
    unless_null $P5093, fallback5122
    nqp_get_sc_object $P5095, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5094, $P5095
    set fb_tmp_384, $P5094
    repr_defined $I5019, fb_tmp_384
    unless $I5019 goto if2280_else5123 
    set $P5096, fb_tmp_384["$W"]
    set $P5098, $P5096
    goto if2280_end5124
  if2280_else5123:
    null $P5097
    set $P5098, $P5097
  if2280_end5124:
    unless_null $P5098, vivi_22815125
    nqp_get_sc_object $P5099, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5098, $P5099
  vivi_22815125:
    unless_null $P5098, vivi_22825126
    die "Contextual $*W not found"
    box $P5100, "Contextual $*W not found"
    set $P5098, $P5100
  vivi_22825126:
    set $P5093, $P5098
  fallback5122:
    $P5101 = $P5093."cur_lexpad"()
    unless_null _lex_param_1, fallback5133
    nqp_get_sc_object $P5102, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5102
  fallback5133:
    set fb_tmp_387, _lex_param_1
    repr_defined $I5022, fb_tmp_387
    unless $I5022 goto if2285_else5131 
    set $P5103, fb_tmp_387["name"]
    set $P5105, $P5103
    goto if2285_end5132
  if2285_else5131:
    null $P5104
    set $P5105, $P5104
  if2285_end5132:
    unless_null $P5105, vivi_22865134
    nqp_get_sc_object $P5106, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5105, $P5106
  vivi_22865134:
    set fb_tmp_386, $P5105
    repr_defined $I5021, fb_tmp_386
    unless $I5021 goto if2284_else5129 
    set $P5107, fb_tmp_386["identifier"]
    set $P5109, $P5107
    goto if2284_end5130
  if2284_else5129:
    null $P5108
    set $P5109, $P5108
  if2284_end5130:
    unless_null $P5109, vivi_22875135
    nqp_get_sc_object $P5110, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5109, $P5110
  vivi_22875135:
    set fb_tmp_385, $P5109
    repr_defined $I5020, fb_tmp_385
    unless $I5020 goto if2283_else5127 
    set $P5111, fb_tmp_385[0]
    set $P5113, $P5111
    goto if2283_end5128
  if2283_else5127:
    null $P5112
    set $P5113, $P5112
  if2283_end5128:
    unless_null $P5113, vivi_22885136
    nqp_get_sc_object $P5114, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5113, $P5114
  vivi_22885136:
    $P5115 = $P5085."install_lexical_symbol"($P5101, $P5113, $P102)
    set $P5116, $P5115
  if2272_end5109:
    goto if2254_end5078
  if2254_else5077:
    find_dynamic_lex $P5118, "$*SCOPE"
    unless_null $P5118, fallback5139
    nqp_get_sc_object $P5120, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5119, $P5120
    set fb_tmp_388, $P5119
    repr_defined $I5024, fb_tmp_388
    unless $I5024 goto if2290_else5140 
    set $P5121, fb_tmp_388["$SCOPE"]
    set $P5123, $P5121
    goto if2290_end5141
  if2290_else5140:
    null $P5122
    set $P5123, $P5122
  if2290_end5141:
    unless_null $P5123, vivi_22915142
    nqp_get_sc_object $P5124, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5123, $P5124
  vivi_22915142:
    unless_null $P5123, vivi_22925143
    die "Contextual $*SCOPE not found"
    box $P5125, "Contextual $*SCOPE not found"
    set $P5123, $P5125
  vivi_22925143:
    set $P5118, $P5123
  fallback5139:
    set $S5004, $P5118
    iseq $I5023, $S5004, "my"
    unless $I5023 goto if2289_else5137 
.annotate 'line', 2150
    unless_null _lex_param_1, fallback5150
    nqp_get_sc_object $P5126, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5126
  fallback5150:
    set fb_tmp_390, _lex_param_1
    repr_defined $I5027, fb_tmp_390
    unless $I5027 goto if2295_else5148 
    set $P5127, fb_tmp_390["name"]
    set $P5129, $P5127
    goto if2295_end5149
  if2295_else5148:
    null $P5128
    set $P5129, $P5128
  if2295_end5149:
    unless_null $P5129, vivi_22965151
    nqp_get_sc_object $P5130, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5129, $P5130
  vivi_22965151:
    set fb_tmp_389, $P5129
    repr_defined $I5026, fb_tmp_389
    unless $I5026 goto if2294_else5146 
    set $P5131, fb_tmp_389["identifier"]
    set $P5133, $P5131
    goto if2294_end5147
  if2294_else5146:
    null $P5132
    set $P5133, $P5132
  if2294_end5147:
    unless_null $P5133, vivi_22975152
    nqp_get_sc_object $P5134, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5133, $P5134
  vivi_22975152:
    set $N5003, $P5133
    set $N5004, 1
    isne $I5025, $N5003, $N5004
    unless $I5025 goto if2293_end5145 
.annotate 'line', 2151
.annotate 'line', 2152
    unless_null _lex_param_1, fallback5155
    nqp_get_sc_object $P5135, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5135
  fallback5155:
    set fb_tmp_391, _lex_param_1
    repr_defined $I5028, fb_tmp_391
    unless $I5028 goto if2298_else5153 
    set $P5136, fb_tmp_391["name"]
    set $P5138, $P5136
    goto if2298_end5154
  if2298_else5153:
    null $P5137
    set $P5138, $P5137
  if2298_end5154:
    unless_null $P5138, vivi_22995156
    nqp_get_sc_object $P5139, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5138, $P5139
  vivi_22995156:
    $P5140 = $P5138."CURSOR"()
    $P5141 = $P5140."panic"("A my scoped package cannot have a multi-part name yet")
  if2293_end5145:
.annotate 'line', 2154
    find_dynamic_lex $P5142, "$*W"
    unless_null $P5142, fallback5157
    nqp_get_sc_object $P5144, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5143, $P5144
    set fb_tmp_392, $P5143
    repr_defined $I5029, fb_tmp_392
    unless $I5029 goto if2300_else5158 
    set $P5145, fb_tmp_392["$W"]
    set $P5147, $P5145
    goto if2300_end5159
  if2300_else5158:
    null $P5146
    set $P5147, $P5146
  if2300_end5159:
    unless_null $P5147, vivi_23015160
    nqp_get_sc_object $P5148, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5147, $P5148
  vivi_23015160:
    unless_null $P5147, vivi_23025161
    die "Contextual $*W not found"
    box $P5149, "Contextual $*W not found"
    set $P5147, $P5149
  vivi_23025161:
    set $P5142, $P5147
  fallback5157:
    find_dynamic_lex $P5150, "$*W"
    unless_null $P5150, fallback5162
    nqp_get_sc_object $P5152, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5151, $P5152
    set fb_tmp_393, $P5151
    repr_defined $I5030, fb_tmp_393
    unless $I5030 goto if2303_else5163 
    set $P5153, fb_tmp_393["$W"]
    set $P5155, $P5153
    goto if2303_end5164
  if2303_else5163:
    null $P5154
    set $P5155, $P5154
  if2303_end5164:
    unless_null $P5155, vivi_23045165
    nqp_get_sc_object $P5156, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5155, $P5156
  vivi_23045165:
    unless_null $P5155, vivi_23055166
    die "Contextual $*W not found"
    box $P5157, "Contextual $*W not found"
    set $P5155, $P5157
  vivi_23055166:
    set $P5150, $P5155
  fallback5162:
    $P5158 = $P5150."cur_lexpad"()
    unless_null _lex_param_1, fallback5173
    nqp_get_sc_object $P5159, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5159
  fallback5173:
    set fb_tmp_396, _lex_param_1
    repr_defined $I5033, fb_tmp_396
    unless $I5033 goto if2308_else5171 
    set $P5160, fb_tmp_396["name"]
    set $P5162, $P5160
    goto if2308_end5172
  if2308_else5171:
    null $P5161
    set $P5162, $P5161
  if2308_end5172:
    unless_null $P5162, vivi_23095174
    nqp_get_sc_object $P5163, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5162, $P5163
  vivi_23095174:
    set fb_tmp_395, $P5162
    repr_defined $I5032, fb_tmp_395
    unless $I5032 goto if2307_else5169 
    set $P5164, fb_tmp_395["identifier"]
    set $P5166, $P5164
    goto if2307_end5170
  if2307_else5169:
    null $P5165
    set $P5166, $P5165
  if2307_end5170:
    unless_null $P5166, vivi_23105175
    nqp_get_sc_object $P5167, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5166, $P5167
  vivi_23105175:
    set fb_tmp_394, $P5166
    repr_defined $I5031, fb_tmp_394
    unless $I5031 goto if2306_else5167 
    set $P5168, fb_tmp_394[0]
    set $P5170, $P5168
    goto if2306_end5168
  if2306_else5167:
    null $P5169
    set $P5170, $P5169
  if2306_end5168:
    unless_null $P5170, vivi_23115176
    nqp_get_sc_object $P5171, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5170, $P5171
  vivi_23115176:
    $P5172 = $P5142."install_lexical_symbol"($P5158, $P5170, $P102)
    set $P5183, $P5172
    goto if2289_end5138
  if2289_else5137:
.annotate 'line', 2156
.annotate 'line', 2157
    $P5173 = _lex_param_1."CURSOR"()
    find_dynamic_lex $P5174, "$*SCOPE"
    unless_null $P5174, fallback5177
    nqp_get_sc_object $P5176, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5175, $P5176
    set fb_tmp_397, $P5175
    repr_defined $I5034, fb_tmp_397
    unless $I5034 goto if2312_else5178 
    set $P5177, fb_tmp_397["$SCOPE"]
    set $P5179, $P5177
    goto if2312_end5179
  if2312_else5178:
    null $P5178
    set $P5179, $P5178
  if2312_end5179:
    unless_null $P5179, vivi_23135180
    nqp_get_sc_object $P5180, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5179, $P5180
  vivi_23135180:
    unless_null $P5179, vivi_23145181
    die "Contextual $*SCOPE not found"
    box $P5181, "Contextual $*SCOPE not found"
    set $P5179, $P5181
  vivi_23145181:
    set $P5174, $P5179
  fallback5177:
    set $S5006, $P5174
    concat $S5005, $S5006, " scoped packages are not supported"
    $P5182 = $P5173."panic"($S5005)
    set $P5183, $P5182
  if2289_end5138:
  if2254_end5078:
.annotate 'line', 2160
    nqp_get_sc_object $P5184, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 93
    $P5185 = $P5184."new"()
    $P5186 = _lex_param_1."!make"($P5185)
    .return ($P5186) 
.end
.HLL "nqp"
.namespace []
.sub "package_def" :subid("cuid_295_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2163
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5197 = 'cuid_466_1365879995.227' 
    capture_lex $P5197 
    .const 'Sub' $P5197 = 'cuid_467_1365879995.227' 
    capture_lex $P5197 
    .const 'Sub' $P5197 = 'cuid_468_1365879995.227' 
    capture_lex $P5197 
    .const 'Sub' $P5197 = 'cuid_469_1365879995.227' 
    capture_lex $P5197 
    .lex "@ns", $P101 
    .lex "$name", $P102 
    .lex "$how", $P103 
    .lex "$past", $P104 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_398 
    .local pmc fb_tmp_399 
    .local pmc fb_tmp_400 
    .local pmc fb_tmp_401 
    .local pmc pkg_viv_tmp_42 
    .local pmc fb_tmp_402 
    .local pmc fb_tmp_403 
    .local pmc fb_tmp_404 
    .local pmc fb_tmp_405 
    .local pmc fb_tmp_406 
    .local pmc fb_tmp_417 
    .local pmc fb_tmp_418 
    .local pmc fb_tmp_419 
    .local pmc fb_tmp_420 
    .local pmc fb_tmp_421 
    .local pmc fb_tmp_434 
    .local pmc fb_tmp_435 
    .local pmc fb_tmp_440 
    .local pmc fb_tmp_441 
    .local pmc fb_tmp_442 
    .local pmc fb_tmp_443 
    .local pmc fb_tmp_444 
    .local pmc fb_tmp_445 
    .local pmc fb_tmp_446 
    .local pmc fb_tmp_447 
    .local pmc fb_tmp_448 
    new $P5001, 'QRPA'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P104, $P5004
    unless_null _lex_param_1, fallback5186
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5006
  fallback5186:
    set fb_tmp_399, _lex_param_1
    repr_defined $I5002, fb_tmp_399
    unless $I5002 goto if2316_else5184 
    set $P5007, fb_tmp_399["name"]
    set $P5009, $P5007
    goto if2316_end5185
  if2316_else5184:
    null $P5008
    set $P5009, $P5008
  if2316_end5185:
    unless_null $P5009, vivi_23175187
    nqp_get_sc_object $P5010, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5009, $P5010
  vivi_23175187:
    set fb_tmp_398, $P5009
    repr_defined $I5001, fb_tmp_398
    unless $I5001 goto if2315_else5182 
    set $P5011, fb_tmp_398["identifier"]
    set $P5013, $P5011
    goto if2315_end5183
  if2315_else5182:
    null $P5012
    set $P5013, $P5012
  if2315_end5183:
    unless_null $P5013, vivi_23185188
    nqp_get_sc_object $P5014, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5013, $P5014
  vivi_23185188:
    repr_clone $P5005, $P5013
    set $P101, $P5005
.annotate 'line', 2166
    $P5015 = $P101."pop"()
    set $S5001, $P5015
    box $P5016, $S5001
    set $P102, $P5016
    find_dynamic_lex $P5017, "%*HOW"
    unless_null $P5017, fallback5191
    nqp_get_sc_object $P5019, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5018, $P5019
    set pkg_viv_tmp_42, $P5018
    set fb_tmp_401, pkg_viv_tmp_42
    repr_defined $I5004, fb_tmp_401
    unless $I5004 goto if2320_else5192 
    set $P5020, fb_tmp_401["%HOW"]
    set $P5022, $P5020
    goto if2320_end5193
  if2320_else5192:
    null $P5021
    set $P5022, $P5021
  if2320_end5193:
    unless_null $P5022, vivi_23215194
    new $P5023, 'Hash'
    set pkg_viv_tmp_42["%HOW"], $P5023
    set $P5022, $P5023
  vivi_23215194:
    unless_null $P5022, vivi_23225195
    die "Contextual %*HOW not found"
    box $P5024, "Contextual %*HOW not found"
    set $P5022, $P5024
  vivi_23225195:
    set $P5017, $P5022
  fallback5191:
    set fb_tmp_400, $P5017
    repr_defined $I5003, fb_tmp_400
    unless $I5003 goto if2319_else5189 
    find_dynamic_lex $P5026, "$*PKGDECL"
    unless_null $P5026, fallback5196
    nqp_get_sc_object $P5028, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5027, $P5028
    set fb_tmp_402, $P5027
    repr_defined $I5005, fb_tmp_402
    unless $I5005 goto if2323_else5197 
    set $P5029, fb_tmp_402["$PKGDECL"]
    set $P5031, $P5029
    goto if2323_end5198
  if2323_else5197:
    null $P5030
    set $P5031, $P5030
  if2323_end5198:
    unless_null $P5031, vivi_23245199
    nqp_get_sc_object $P5032, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5031, $P5032
  vivi_23245199:
    unless_null $P5031, vivi_23255200
    die "Contextual $*PKGDECL not found"
    box $P5033, "Contextual $*PKGDECL not found"
    set $P5031, $P5033
  vivi_23255200:
    set $P5026, $P5031
  fallback5196:
    set $S5002, $P5026
    set $P5025, fb_tmp_400[$S5002]
    set $P5035, $P5025
    goto if2319_end5190
  if2319_else5189:
    null $P5034
    set $P5035, $P5034
  if2319_end5190:
    unless_null $P5035, vivi_23265201
    nqp_get_sc_object $P5036, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5035, $P5036
  vivi_23265201:
    set $P103, $P5035
    unless_null _lex_param_1, fallback5206
    nqp_get_sc_object $P5037, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5037
  fallback5206:
    set fb_tmp_403, _lex_param_1
    repr_defined $I5006, fb_tmp_403
    unless $I5006 goto if2328_else5204 
    set $P5038, fb_tmp_403["blockoid"]
    set $P5040, $P5038
    goto if2328_end5205
  if2328_else5204:
    null $P5039
    set $P5040, $P5039
  if2328_end5205:
    unless_null $P5040, vivi_23295207
    nqp_get_sc_object $P5041, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5040, $P5041
  vivi_23295207:
    unless $P5040 goto if2327_else5202 
.annotate 'line', 2171
.annotate 'line', 2172
    unless_null _lex_param_1, fallback5210
    nqp_get_sc_object $P5042, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5042
  fallback5210:
    set fb_tmp_404, _lex_param_1
    repr_defined $I5007, fb_tmp_404
    unless $I5007 goto if2330_else5208 
    set $P5043, fb_tmp_404["blockoid"]
    set $P5045, $P5043
    goto if2330_end5209
  if2330_else5208:
    null $P5044
    set $P5045, $P5044
  if2330_end5209:
    unless_null $P5045, vivi_23315211
    nqp_get_sc_object $P5046, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5045, $P5046
  vivi_23315211:
    $P5047 = $P5045."ast"()
    set $P104, $P5047
    goto if2327_end5203
  if2327_else5202:
.annotate 'line', 2174
.annotate 'line', 2175
    find_dynamic_lex $P5048, "$*W"
    unless_null $P5048, fallback5212
    nqp_get_sc_object $P5050, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5049, $P5050
    set fb_tmp_405, $P5049
    repr_defined $I5008, fb_tmp_405
    unless $I5008 goto if2332_else5213 
    set $P5051, fb_tmp_405["$W"]
    set $P5053, $P5051
    goto if2332_end5214
  if2332_else5213:
    null $P5052
    set $P5053, $P5052
  if2332_end5214:
    unless_null $P5053, vivi_23335215
    nqp_get_sc_object $P5054, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5053, $P5054
  vivi_23335215:
    unless_null $P5053, vivi_23345216
    die "Contextual $*W not found"
    box $P5055, "Contextual $*W not found"
    set $P5053, $P5055
  vivi_23345216:
    set $P5048, $P5053
  fallback5212:
    $P5056 = $P5048."pop_lexpad"()
    set $P104, $P5056
.annotate 'line', 2176
    unless_null _lex_param_1, fallback5219
    nqp_get_sc_object $P5057, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5057
  fallback5219:
    set fb_tmp_406, _lex_param_1
    repr_defined $I5009, fb_tmp_406
    unless $I5009 goto if2335_else5217 
    set $P5058, fb_tmp_406["statementlist"]
    set $P5060, $P5058
    goto if2335_end5218
  if2335_else5217:
    null $P5059
    set $P5060, $P5059
  if2335_end5218:
    unless_null $P5060, vivi_23365220
    nqp_get_sc_object $P5061, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5060, $P5061
  vivi_23365220:
    $P5062 = $P5060."ast"()
    $P5063 = $P104."push"($P5062)
  if2327_end5203:
    can $I5010, $P103, "parametric"
    box $P5066, $I5010
    set $P5065, $P5066
    unless $I5010 goto if2338_end5224 
.annotate 'line', 2183
    $P5064 = $P103."parametric"($P103)
    set $P5065, $P5064
  if2338_end5224:
    unless $P5065 goto if2337_else5221 
    .const 'Sub' $P5067 = 'cuid_466_1365879995.227' 
    capture_lex $P5067
    $P5068 = $P5067()
    goto if2337_end5222
  if2337_else5221:
.annotate 'line', 2200
.annotate 'line', 2201
    $P104."blocktype"("immediate")
.annotate 'line', 2202
    find_dynamic_lex $P5069, "$*W"
    unless_null $P5069, fallback5274
    nqp_get_sc_object $P5071, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5070, $P5071
    set fb_tmp_417, $P5070
    repr_defined $I5011, fb_tmp_417
    unless $I5011 goto if2366_else5275 
    set $P5072, fb_tmp_417["$W"]
    set $P5074, $P5072
    goto if2366_end5276
  if2366_else5275:
    null $P5073
    set $P5074, $P5073
  if2366_end5276:
    unless_null $P5074, vivi_23675277
    nqp_get_sc_object $P5075, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5074, $P5075
  vivi_23675277:
    unless_null $P5074, vivi_23685278
    die "Contextual $*W not found"
    box $P5076, "Contextual $*W not found"
    set $P5074, $P5076
  vivi_23685278:
    set $P5069, $P5074
  fallback5274:
    find_dynamic_lex $P5077, "$*PACKAGE"
    unless_null $P5077, fallback5279
    nqp_get_sc_object $P5079, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5078, $P5079
    set fb_tmp_418, $P5078
    repr_defined $I5012, fb_tmp_418
    unless $I5012 goto if2369_else5280 
    set $P5080, fb_tmp_418["$PACKAGE"]
    set $P5082, $P5080
    goto if2369_end5281
  if2369_else5280:
    null $P5081
    set $P5082, $P5081
  if2369_end5281:
    unless_null $P5082, vivi_23705282
    nqp_get_sc_object $P5083, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5082, $P5083
  vivi_23705282:
    unless_null $P5082, vivi_23715283
    die "Contextual $*PACKAGE not found"
    box $P5084, "Contextual $*PACKAGE not found"
    set $P5082, $P5084
  vivi_23715283:
    set $P5077, $P5082
  fallback5279:
    $P5069."install_lexical_symbol"($P104, "$?PACKAGE", $P5077)
.annotate 'line', 2203
    find_dynamic_lex $P5085, "$*W"
    unless_null $P5085, fallback5284
    nqp_get_sc_object $P5087, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5086, $P5087
    set fb_tmp_419, $P5086
    repr_defined $I5013, fb_tmp_419
    unless $I5013 goto if2372_else5285 
    set $P5088, fb_tmp_419["$W"]
    set $P5090, $P5088
    goto if2372_end5286
  if2372_else5285:
    null $P5089
    set $P5090, $P5089
  if2372_end5286:
    unless_null $P5090, vivi_23735287
    nqp_get_sc_object $P5091, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5090, $P5091
  vivi_23735287:
    unless_null $P5090, vivi_23745288
    die "Contextual $*W not found"
    box $P5092, "Contextual $*W not found"
    set $P5090, $P5092
  vivi_23745288:
    set $P5085, $P5090
  fallback5284:
    find_dynamic_lex $P5093, "$*PACKAGE"
    unless_null $P5093, fallback5289
    nqp_get_sc_object $P5095, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5094, $P5095
    set fb_tmp_420, $P5094
    repr_defined $I5014, fb_tmp_420
    unless $I5014 goto if2375_else5290 
    set $P5096, fb_tmp_420["$PACKAGE"]
    set $P5098, $P5096
    goto if2375_end5291
  if2375_else5290:
    null $P5097
    set $P5098, $P5097
  if2375_end5291:
    unless_null $P5098, vivi_23765292
    nqp_get_sc_object $P5099, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5098, $P5099
  vivi_23765292:
    unless_null $P5098, vivi_23775293
    die "Contextual $*PACKAGE not found"
    box $P5100, "Contextual $*PACKAGE not found"
    set $P5098, $P5100
  vivi_23775293:
    set $P5093, $P5098
  fallback5289:
    $P5101 = $P5085."install_lexical_symbol"($P104, "$?CLASS", $P5093)
  if2337_end5222:
    unless_null _lex_param_1, fallback5298
    nqp_get_sc_object $P5102, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5102
  fallback5298:
    set fb_tmp_421, _lex_param_1
    repr_defined $I5015, fb_tmp_421
    unless $I5015 goto if2379_else5296 
    set $P5103, fb_tmp_421["parent"]
    set $P5105, $P5103
    goto if2379_end5297
  if2379_else5296:
    null $P5104
    set $P5105, $P5104
  if2379_end5297:
    unless_null $P5105, vivi_23805299
    nqp_get_sc_object $P5106, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5105, $P5106
  vivi_23805299:
    unless $P5105 goto if2378_else5294 
    .const 'Sub' $P5107 = 'cuid_467_1365879995.227' 
    capture_lex $P5107
    $P5108 = $P5107()
    goto if2378_end5295
  if2378_else5294:
    can $I5016, $P103, "set_default_parent"
    box $P5112, $I5016
    set $P5111, $P5112
    unless $I5016 goto if2403_end5337 
    .const 'Sub' $P5109 = 'cuid_468_1365879995.227' 
    capture_lex $P5109
    $P5110 = $P5109()
    set $P5111, $P5110
  if2403_end5337:
  if2378_end5295:
    unless_null _lex_param_1, fallback5364
    nqp_get_sc_object $P5113, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5113
  fallback5364:
    set fb_tmp_434, _lex_param_1
    repr_defined $I5017, fb_tmp_434
    unless $I5017 goto if2418_else5362 
    set $P5114, fb_tmp_434["role"]
    set $P5116, $P5114
    goto if2418_end5363
  if2418_else5362:
    null $P5115
    set $P5116, $P5115
  if2418_end5363:
    unless_null $P5116, vivi_24195365
    nqp_get_sc_object $P5117, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5116, $P5117
  vivi_24195365:
    unless $P5116 goto if2417_end5361 
.annotate 'line', 2228
    unless_null _lex_param_1, fallback5368
    nqp_get_sc_object $P5121, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5121
  fallback5368:
    set fb_tmp_435, _lex_param_1
    repr_defined $I5018, fb_tmp_435
    unless $I5018 goto if2420_else5366 
    set $P5122, fb_tmp_435["role"]
    set $P5124, $P5122
    goto if2420_end5367
  if2420_else5366:
    null $P5123
    set $P5124, $P5123
  if2420_end5367:
    unless_null $P5124, vivi_24215369
    nqp_get_sc_object $P5125, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5124, $P5125
  vivi_24215369:
    set $P5118, $P5124
    iter $P5120, $P5124
  for_next5392:
    unless $P5120, for_done5394
    shift $P5127, $P5120
  for_redo5393:
    .const 'Sub' $P5126 = 'cuid_469_1365879995.227' 
    capture_lex $P5126
    $P5118 = $P5126($P5127)
    goto for_next5392
  for_done5394:
  if2417_end5361:
.annotate 'line', 2246
    find_dynamic_lex $P5128, "$*W"
    unless_null $P5128, fallback5395
    nqp_get_sc_object $P5130, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5129, $P5130
    set fb_tmp_440, $P5129
    repr_defined $I5019, fb_tmp_440
    unless $I5019 goto if2436_else5396 
    set $P5131, fb_tmp_440["$W"]
    set $P5133, $P5131
    goto if2436_end5397
  if2436_else5396:
    null $P5132
    set $P5133, $P5132
  if2436_end5397:
    unless_null $P5133, vivi_24375398
    nqp_get_sc_object $P5134, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5133, $P5134
  vivi_24375398:
    unless_null $P5133, vivi_24385399
    die "Contextual $*W not found"
    box $P5135, "Contextual $*W not found"
    set $P5133, $P5135
  vivi_24385399:
    set $P5128, $P5133
  fallback5395:
    find_dynamic_lex $P5136, "$*PACKAGE"
    unless_null $P5136, fallback5400
    nqp_get_sc_object $P5138, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5137, $P5138
    set fb_tmp_441, $P5137
    repr_defined $I5020, fb_tmp_441
    unless $I5020 goto if2439_else5401 
    set $P5139, fb_tmp_441["$PACKAGE"]
    set $P5141, $P5139
    goto if2439_end5402
  if2439_else5401:
    null $P5140
    set $P5141, $P5140
  if2439_end5402:
    unless_null $P5141, vivi_24405403
    nqp_get_sc_object $P5142, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5141, $P5142
  vivi_24405403:
    unless_null $P5141, vivi_24415404
    die "Contextual $*PACKAGE not found"
    box $P5143, "Contextual $*PACKAGE not found"
    set $P5141, $P5143
  vivi_24415404:
    set $P5136, $P5141
  fallback5400:
    $P5128."pkg_compose"($P5136)
    find_dynamic_lex $P5144, "$*PKGDECL"
    unless_null $P5144, fallback5409
    nqp_get_sc_object $P5146, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5145, $P5146
    set fb_tmp_442, $P5145
    repr_defined $I5022, fb_tmp_442
    unless $I5022 goto if2444_else5410 
    set $P5147, fb_tmp_442["$PKGDECL"]
    set $P5149, $P5147
    goto if2444_end5411
  if2444_else5410:
    null $P5148
    set $P5149, $P5148
  if2444_end5411:
    unless_null $P5149, vivi_24455412
    nqp_get_sc_object $P5150, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5149, $P5150
  vivi_24455412:
    unless_null $P5149, vivi_24465413
    die "Contextual $*PKGDECL not found"
    box $P5151, "Contextual $*PKGDECL not found"
    set $P5149, $P5151
  vivi_24465413:
    set $P5144, $P5149
  fallback5409:
    set $S5003, $P5144
    iseq $I5021, $S5003, "grammar"
    set $I5025, $I5021
    unless $I5021 goto if2443_end5408 
    find_dynamic_lex $P5152, "$*PACKAGE"
    unless_null $P5152, fallback5414
    nqp_get_sc_object $P5154, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5153, $P5154
    set fb_tmp_443, $P5153
    repr_defined $I5024, fb_tmp_443
    unless $I5024 goto if2447_else5415 
    set $P5155, fb_tmp_443["$PACKAGE"]
    set $P5157, $P5155
    goto if2447_end5416
  if2447_else5415:
    null $P5156
    set $P5157, $P5156
  if2447_end5416:
    unless_null $P5157, vivi_24485417
    nqp_get_sc_object $P5158, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5157, $P5158
  vivi_24485417:
    unless_null $P5157, vivi_24495418
    die "Contextual $*PACKAGE not found"
    box $P5159, "Contextual $*PACKAGE not found"
    set $P5157, $P5159
  vivi_24495418:
    set $P5152, $P5157
  fallback5414:
    can $I5023, $P5152, "!precompute_nfas"
    set $I5025, $I5023
  if2443_end5408:
    unless $I5025 goto if2442_end5406 
.annotate 'line', 2249
.annotate 'line', 2250
    find_dynamic_lex $P5160, "$*PACKAGE"
    unless_null $P5160, fallback5419
    nqp_get_sc_object $P5162, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5161, $P5162
    set fb_tmp_444, $P5161
    repr_defined $I5026, fb_tmp_444
    unless $I5026 goto if2450_else5420 
    set $P5163, fb_tmp_444["$PACKAGE"]
    set $P5165, $P5163
    goto if2450_end5421
  if2450_else5420:
    null $P5164
    set $P5165, $P5164
  if2450_end5421:
    unless_null $P5165, vivi_24515422
    nqp_get_sc_object $P5166, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5165, $P5166
  vivi_24515422:
    unless_null $P5165, vivi_24525423
    die "Contextual $*PACKAGE not found"
    box $P5167, "Contextual $*PACKAGE not found"
    set $P5165, $P5167
  vivi_24525423:
    set $P5160, $P5165
  fallback5419:
    $P5168 = $P5160."!precompute_nfas"()
  if2442_end5406:
    unless_null _lex_param_1, fallback5428
    nqp_get_sc_object $P5169, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5169
  fallback5428:
    set fb_tmp_445, _lex_param_1
    repr_defined $I5027, fb_tmp_445
    unless $I5027 goto if2454_else5426 
    set $P5170, fb_tmp_445["export"]
    set $P5172, $P5170
    goto if2454_end5427
  if2454_else5426:
    null $P5171
    set $P5172, $P5171
  if2454_end5427:
    unless_null $P5172, vivi_24555429
    nqp_get_sc_object $P5173, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5172, $P5173
  vivi_24555429:
    unless $P5172 goto if2453_end5425 
.annotate 'line', 2254
    find_dynamic_lex $P5176, "$*EXPORT"
    unless_null $P5176, fallback5432
    nqp_get_sc_object $P5178, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5177, $P5178
    set fb_tmp_447, $P5177
    repr_defined $I5029, fb_tmp_447
    unless $I5029 goto if2457_else5433 
    set $P5179, fb_tmp_447["$EXPORT"]
    set $P5181, $P5179
    goto if2457_end5434
  if2457_else5433:
    null $P5180
    set $P5181, $P5180
  if2457_end5434:
    unless_null $P5181, vivi_24585435
    nqp_get_sc_object $P5182, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5181, $P5182
  vivi_24585435:
    unless_null $P5181, vivi_24595436
    die "Contextual $*EXPORT not found"
    box $P5183, "Contextual $*EXPORT not found"
    set $P5181, $P5183
  vivi_24595436:
    set $P5176, $P5181
  fallback5432:
    get_who $P5175, $P5176
    set fb_tmp_446, $P5175
    repr_defined $I5028, fb_tmp_446
    unless $I5028 goto if2456_else5430 
    set $P5184, fb_tmp_446["DEFAULT"]
    set $P5186, $P5184
    goto if2456_end5431
  if2456_else5430:
    null $P5185
    set $P5186, $P5185
  if2456_end5431:
    unless_null $P5186, vivi_24605437
    nqp_get_sc_object $P5187, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5186, $P5187
  vivi_24605437:
    get_who $P5174, $P5186
    set $S5004, $P102
    find_dynamic_lex $P5188, "$*PACKAGE"
    unless_null $P5188, fallback5438
    nqp_get_sc_object $P5190, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5189, $P5190
    set fb_tmp_448, $P5189
    repr_defined $I5030, fb_tmp_448
    unless $I5030 goto if2461_else5439 
    set $P5191, fb_tmp_448["$PACKAGE"]
    set $P5193, $P5191
    goto if2461_end5440
  if2461_else5439:
    null $P5192
    set $P5193, $P5192
  if2461_end5440:
    unless_null $P5193, vivi_24625441
    nqp_get_sc_object $P5194, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5193, $P5194
  vivi_24625441:
    unless_null $P5193, vivi_24635442
    die "Contextual $*PACKAGE not found"
    box $P5195, "Contextual $*PACKAGE not found"
    set $P5193, $P5195
  vivi_24635442:
    set $P5188, $P5193
  fallback5438:
    set $P5174[$S5004], $P5188
  if2453_end5425:
.annotate 'line', 2258
    $P5196 = _lex_param_1."!make"($P104)
    .return ($P5196) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_466_1365879995.227") :anon :lex :outer("cuid_295_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2183
    .const 'Sub' $P5089 = 'cuid_465_1365879995.227' 
    capture_lex $P5089 
    .lex "$params", $P101 
    .local pmc fb_tmp_407 
    .local pmc fb_tmp_408 
    .local pmc fb_tmp_409 
    .local pmc fb_tmp_410 
    .local pmc fb_tmp_411 
    .local pmc fb_tmp_412 
    .local pmc fb_tmp_413 
    .local pmc fb_tmp_414 
    .local pmc fb_tmp_415 
    .local pmc fb_tmp_416 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
.annotate 'line', 2184
    find_lex $P5002, "$past"
    $P5002."blocktype"("declaration")
.annotate 'line', 2185
    nqp_get_sc_object $P5003, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 93
.annotate 'line', 2186
    nqp_get_sc_object $P5004, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5005 = $P5004."new"("$?CLASS" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    $P5006 = $P5003."new"($P5005)
    set $P101, $P5006
    find_lex $P5007, "$/"
    unless_null $P5007, fallback5229
    nqp_get_sc_object $P5008, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5007, $P5008
  fallback5229:
    set fb_tmp_407, $P5007
    repr_defined $I5001, fb_tmp_407
    unless $I5001 goto if2340_else5227 
    set $P5009, fb_tmp_407["role_params"]
    set $P5011, $P5009
    goto if2340_end5228
  if2340_else5227:
    null $P5010
    set $P5011, $P5010
  if2340_end5228:
    unless_null $P5011, vivi_23415230
    nqp_get_sc_object $P5012, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5011, $P5012
  vivi_23415230:
    unless $P5011 goto if2339_end5226 
.annotate 'line', 2188
    find_lex $P5016, "$/"
    unless_null $P5016, fallback5237
    nqp_get_sc_object $P5017, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5016, $P5017
  fallback5237:
    set fb_tmp_410, $P5016
    repr_defined $I5004, fb_tmp_410
    unless $I5004 goto if2344_else5235 
    set $P5018, fb_tmp_410["role_params"]
    set $P5020, $P5018
    goto if2344_end5236
  if2344_else5235:
    null $P5019
    set $P5020, $P5019
  if2344_end5236:
    unless_null $P5020, vivi_23455238
    nqp_get_sc_object $P5021, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5020, $P5021
  vivi_23455238:
    set fb_tmp_409, $P5020
    repr_defined $I5003, fb_tmp_409
    unless $I5003 goto if2343_else5233 
    set $P5022, fb_tmp_409[0]
    set $P5024, $P5022
    goto if2343_end5234
  if2343_else5233:
    null $P5023
    set $P5024, $P5023
  if2343_end5234:
    unless_null $P5024, vivi_23465239
    nqp_get_sc_object $P5025, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5024, $P5025
  vivi_23465239:
    set fb_tmp_408, $P5024
    repr_defined $I5002, fb_tmp_408
    unless $I5002 goto if2342_else5231 
    set $P5026, fb_tmp_408["variable"]
    set $P5028, $P5026
    goto if2342_end5232
  if2342_else5231:
    null $P5027
    set $P5028, $P5027
  if2342_end5232:
    unless_null $P5028, vivi_23475240
    nqp_get_sc_object $P5029, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5028, $P5029
  vivi_23475240:
    set $P5013, $P5028
    iter $P5015, $P5028
  for_next5241:
    unless $P5015, for_done5243
    shift $P5031, $P5015
  for_redo5242:
    .const 'Sub' $P5030 = 'cuid_465_1365879995.227' 
    capture_lex $P5030
    $P5013 = $P5030($P5031)
    goto for_next5241
  for_done5243:
  if2339_end5226:
.annotate 'line', 2193
    find_lex $P5032, "$past"
    $P5032."unshift"($P101)
.annotate 'line', 2194
    find_lex $P5033, "$past"
    nqp_get_sc_object $P5034, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    $P5035 = $P5034."new"("curlexpad" :named("op"))
    $P5033."push"($P5035)
.annotate 'line', 2195
    find_lex $P5036, "$past"
    $P5036."symbol"("$?CLASS", "lexical" :named("scope"))
.annotate 'line', 2196
    find_dynamic_lex $P5037, "$*W"
    unless_null $P5037, fallback5244
    nqp_get_sc_object $P5039, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5038, $P5039
    set fb_tmp_411, $P5038
    repr_defined $I5005, fb_tmp_411
    unless $I5005 goto if2348_else5245 
    set $P5040, fb_tmp_411["$W"]
    set $P5042, $P5040
    goto if2348_end5246
  if2348_else5245:
    null $P5041
    set $P5042, $P5041
  if2348_end5246:
    unless_null $P5042, vivi_23495247
    nqp_get_sc_object $P5043, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5042, $P5043
  vivi_23495247:
    unless_null $P5042, vivi_23505248
    die "Contextual $*W not found"
    box $P5044, "Contextual $*W not found"
    set $P5042, $P5044
  vivi_23505248:
    set $P5037, $P5042
  fallback5244:
    find_dynamic_lex $P5045, "$*PACKAGE"
    unless_null $P5045, fallback5249
    nqp_get_sc_object $P5047, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5046, $P5047
    set fb_tmp_412, $P5046
    repr_defined $I5006, fb_tmp_412
    unless $I5006 goto if2351_else5250 
    set $P5048, fb_tmp_412["$PACKAGE"]
    set $P5050, $P5048
    goto if2351_end5251
  if2351_else5250:
    null $P5049
    set $P5050, $P5049
  if2351_end5251:
    unless_null $P5050, vivi_23525252
    nqp_get_sc_object $P5051, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5050, $P5051
  vivi_23525252:
    unless_null $P5050, vivi_23535253
    die "Contextual $*PACKAGE not found"
    box $P5052, "Contextual $*PACKAGE not found"
    set $P5050, $P5052
  vivi_23535253:
    set $P5045, $P5050
  fallback5249:
    find_lex $P5053, "$past"
    $P5037."pkg_set_body_block"($P5045, $P5053)
.annotate 'line', 2197
    find_dynamic_lex $P5054, "$*W"
    unless_null $P5054, fallback5254
    nqp_get_sc_object $P5056, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5055, $P5056
    set fb_tmp_413, $P5055
    repr_defined $I5007, fb_tmp_413
    unless $I5007 goto if2354_else5255 
    set $P5057, fb_tmp_413["$W"]
    set $P5059, $P5057
    goto if2354_end5256
  if2354_else5255:
    null $P5058
    set $P5059, $P5058
  if2354_end5256:
    unless_null $P5059, vivi_23555257
    nqp_get_sc_object $P5060, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5059, $P5060
  vivi_23555257:
    unless_null $P5059, vivi_23565258
    die "Contextual $*W not found"
    box $P5061, "Contextual $*W not found"
    set $P5059, $P5061
  vivi_23565258:
    set $P5054, $P5059
  fallback5254:
    find_lex $P5062, "$past"
    find_dynamic_lex $P5063, "$*PACKAGE"
    unless_null $P5063, fallback5259
    nqp_get_sc_object $P5065, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5064, $P5065
    set fb_tmp_414, $P5064
    repr_defined $I5008, fb_tmp_414
    unless $I5008 goto if2357_else5260 
    set $P5066, fb_tmp_414["$PACKAGE"]
    set $P5068, $P5066
    goto if2357_end5261
  if2357_else5260:
    null $P5067
    set $P5068, $P5067
  if2357_end5261:
    unless_null $P5068, vivi_23585262
    nqp_get_sc_object $P5069, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5068, $P5069
  vivi_23585262:
    unless_null $P5068, vivi_23595263
    die "Contextual $*PACKAGE not found"
    box $P5070, "Contextual $*PACKAGE not found"
    set $P5068, $P5070
  vivi_23595263:
    set $P5063, $P5068
  fallback5259:
    $P5054."install_lexical_symbol"($P5062, "$?PACKAGE", $P5063)
.annotate 'line', 2198
    find_dynamic_lex $P5071, "$*W"
    unless_null $P5071, fallback5264
    nqp_get_sc_object $P5073, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5072, $P5073
    set fb_tmp_415, $P5072
    repr_defined $I5009, fb_tmp_415
    unless $I5009 goto if2360_else5265 
    set $P5074, fb_tmp_415["$W"]
    set $P5076, $P5074
    goto if2360_end5266
  if2360_else5265:
    null $P5075
    set $P5076, $P5075
  if2360_end5266:
    unless_null $P5076, vivi_23615267
    nqp_get_sc_object $P5077, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5076, $P5077
  vivi_23615267:
    unless_null $P5076, vivi_23625268
    die "Contextual $*W not found"
    box $P5078, "Contextual $*W not found"
    set $P5076, $P5078
  vivi_23625268:
    set $P5071, $P5076
  fallback5264:
    find_lex $P5079, "$past"
    find_dynamic_lex $P5080, "$*PACKAGE"
    unless_null $P5080, fallback5269
    nqp_get_sc_object $P5082, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5081, $P5082
    set fb_tmp_416, $P5081
    repr_defined $I5010, fb_tmp_416
    unless $I5010 goto if2363_else5270 
    set $P5083, fb_tmp_416["$PACKAGE"]
    set $P5085, $P5083
    goto if2363_end5271
  if2363_else5270:
    null $P5084
    set $P5085, $P5084
  if2363_end5271:
    unless_null $P5085, vivi_23645272
    nqp_get_sc_object $P5086, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5085, $P5086
  vivi_23645272:
    unless_null $P5085, vivi_23655273
    die "Contextual $*PACKAGE not found"
    box $P5087, "Contextual $*PACKAGE not found"
    set $P5085, $P5087
  vivi_23655273:
    set $P5080, $P5085
  fallback5269:
    $P5088 = $P5071."install_lexical_symbol"($P5079, "$?ROLE", $P5080)
    .return ($P5088) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_465_1365879995.227") :anon :lex :outer("cuid_466_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2189
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 2190
    find_lex $P5001, "$params"
    $P5002 = _lex_param_0."ast"()
    $P5003 = $P5001."push"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_467_1365879995.227") :anon :lex :outer("cuid_295_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2207
    .lex "$parent", $P101 
    .lex "$parent_found", $P102 
    .local pmc fb_tmp_422 
    .local pmc fb_tmp_423 
    .local pmc fb_tmp_424 
    .local pmc fb_tmp_425 
    .local pmc fb_tmp_426 
    .local pmc fb_tmp_427 
    .local pmc fb_tmp_428 
    .local pmc fb_tmp_429 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
    new $P5028, 'ExceptionHandler'
    set_label $P5028, catch_handler_23915316
    $P5028.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5028
.annotate 'line', 2210
.annotate 'line', 2211
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback5300
    nqp_get_sc_object $P5005, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5004, $P5005
    set fb_tmp_422, $P5004
    repr_defined $I5001, fb_tmp_422
    unless $I5001 goto if2381_else5301 
    set $P5006, fb_tmp_422["$W"]
    set $P5008, $P5006
    goto if2381_end5302
  if2381_else5301:
    null $P5007
    set $P5008, $P5007
  if2381_end5302:
    unless_null $P5008, vivi_23825303
    nqp_get_sc_object $P5009, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5008, $P5009
  vivi_23825303:
    unless_null $P5008, vivi_23835304
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_23835304:
    set $P5003, $P5008
  fallback5300:
    find_lex $P5012, "$/"
    unless_null $P5012, fallback5311
    nqp_get_sc_object $P5013, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5012, $P5013
  fallback5311:
    set fb_tmp_425, $P5012
    repr_defined $I5004, fb_tmp_425
    unless $I5004 goto if2386_else5309 
    set $P5014, fb_tmp_425["parent"]
    set $P5016, $P5014
    goto if2386_end5310
  if2386_else5309:
    null $P5015
    set $P5016, $P5015
  if2386_end5310:
    unless_null $P5016, vivi_23875312
    nqp_get_sc_object $P5017, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5016, $P5017
  vivi_23875312:
    set fb_tmp_424, $P5016
    repr_defined $I5003, fb_tmp_424
    unless $I5003 goto if2385_else5307 
    set $P5018, fb_tmp_424[0]
    set $P5020, $P5018
    goto if2385_end5308
  if2385_else5307:
    null $P5019
    set $P5020, $P5019
  if2385_end5308:
    unless_null $P5020, vivi_23885313
    nqp_get_sc_object $P5021, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5020, $P5021
  vivi_23885313:
    set fb_tmp_423, $P5020
    repr_defined $I5002, fb_tmp_423
    unless $I5002 goto if2384_else5305 
    set $P5022, fb_tmp_423["identifier"]
    set $P5024, $P5022
    goto if2384_end5306
  if2384_else5305:
    null $P5023
    set $P5024, $P5023
  if2384_end5306:
    unless_null $P5024, vivi_23895314
    nqp_get_sc_object $P5025, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5024, $P5025
  vivi_23895314:
    repr_clone $P5011, $P5024
    $P5026 = $P5003."find_sym"($P5011)
    set $P101, $P5026
    box $P5027, 1
    set $P102, $P5027
    set $P5029, $P102
    pop_eh 
    goto skip_handler_23905315
  catch_handler_23915316:
    .get_results ($P5028) 
    set $I10001, 1
    set $P5028["handled"], $I10001
    nqp_get_sc_object $P10001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    finalize $P5028
    pop_upto_eh $P5028
    pop_eh 
    set $P5029, $P10001
    goto skip_handler_23905315
  skip_handler_23905315:
    unless $P102 goto if2392_else5317 
.annotate 'line', 2214
.annotate 'line', 2215
    find_dynamic_lex $P5030, "$*W"
    unless_null $P5030, fallback5319
    nqp_get_sc_object $P5032, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5031, $P5032
    set fb_tmp_426, $P5031
    repr_defined $I5005, fb_tmp_426
    unless $I5005 goto if2393_else5320 
    set $P5033, fb_tmp_426["$W"]
    set $P5035, $P5033
    goto if2393_end5321
  if2393_else5320:
    null $P5034
    set $P5035, $P5034
  if2393_end5321:
    unless_null $P5035, vivi_23945322
    nqp_get_sc_object $P5036, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5035, $P5036
  vivi_23945322:
    unless_null $P5035, vivi_23955323
    die "Contextual $*W not found"
    box $P5037, "Contextual $*W not found"
    set $P5035, $P5037
  vivi_23955323:
    set $P5030, $P5035
  fallback5319:
    find_dynamic_lex $P5038, "$*PACKAGE"
    unless_null $P5038, fallback5324
    nqp_get_sc_object $P5040, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5039, $P5040
    set fb_tmp_427, $P5039
    repr_defined $I5006, fb_tmp_427
    unless $I5006 goto if2396_else5325 
    set $P5041, fb_tmp_427["$PACKAGE"]
    set $P5043, $P5041
    goto if2396_end5326
  if2396_else5325:
    null $P5042
    set $P5043, $P5042
  if2396_end5326:
    unless_null $P5043, vivi_23975327
    nqp_get_sc_object $P5044, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5043, $P5044
  vivi_23975327:
    unless_null $P5043, vivi_23985328
    die "Contextual $*PACKAGE not found"
    box $P5045, "Contextual $*PACKAGE not found"
    set $P5043, $P5045
  vivi_23985328:
    set $P5038, $P5043
  fallback5324:
    $P5046 = $P5030."pkg_add_parent_or_role"($P5038, "add_parent", $P101)
    set $P5060, $P5046
    goto if2392_end5318
  if2392_else5317:
.annotate 'line', 2217
.annotate 'line', 2218
    find_lex $P5047, "$/"
    $P5048 = $P5047."CURSOR"()
    find_lex $P5049, "$/"
    unless_null $P5049, fallback5333
    nqp_get_sc_object $P5050, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5049, $P5050
  fallback5333:
    set fb_tmp_429, $P5049
    repr_defined $I5008, fb_tmp_429
    unless $I5008 goto if2400_else5331 
    set $P5051, fb_tmp_429["parent"]
    set $P5053, $P5051
    goto if2400_end5332
  if2400_else5331:
    null $P5052
    set $P5053, $P5052
  if2400_end5332:
    unless_null $P5053, vivi_24015334
    nqp_get_sc_object $P5054, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5053, $P5054
  vivi_24015334:
    set fb_tmp_428, $P5053
    repr_defined $I5007, fb_tmp_428
    unless $I5007 goto if2399_else5329 
    set $P5055, fb_tmp_428[0]
    set $P5057, $P5055
    goto if2399_end5330
  if2399_else5329:
    null $P5056
    set $P5057, $P5056
  if2399_end5330:
    unless_null $P5057, vivi_24025335
    nqp_get_sc_object $P5058, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5057, $P5058
  vivi_24025335:
    set $S5003, $P5057
    concat $S5002, "Could not find parent class '", $S5003
    concat $S5001, $S5002, "'"
    $P5059 = $P5048."panic"($S5001)
    set $P5060, $P5059
  if2392_end5318:
    .return ($P5060) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_468_1365879995.227") :anon :lex :outer("cuid_295_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2221
    .lex "$default", $P101 
    .local pmc fb_tmp_430 
    .local pmc fb_tmp_431 
    .local pmc fb_tmp_432 
    .local pmc fb_tmp_433 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    find_dynamic_lex $P5002, "$*PKGDECL"
    unless_null $P5002, fallback5340
    nqp_get_sc_object $P5004, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5003, $P5004
    set fb_tmp_430, $P5003
    repr_defined $I5002, fb_tmp_430
    unless $I5002 goto if2405_else5341 
    set $P5005, fb_tmp_430["$PKGDECL"]
    set $P5007, $P5005
    goto if2405_end5342
  if2405_else5341:
    null $P5006
    set $P5007, $P5006
  if2405_end5342:
    unless_null $P5007, vivi_24065343
    nqp_get_sc_object $P5008, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5007, $P5008
  vivi_24065343:
    unless_null $P5007, vivi_24075344
    die "Contextual $*PKGDECL not found"
    box $P5009, "Contextual $*PKGDECL not found"
    set $P5007, $P5009
  vivi_24075344:
    set $P5002, $P5007
  fallback5340:
    set $S5001, $P5002
    iseq $I5001, $S5001, "grammar"
    unless $I5001 goto if2404_else5338 
    new $P5010, 'QRPA'
    box $P5011, "NQPCursor"
    push $P5010, $P5011
    set $P5014, $P5010
    goto if2404_end5339
  if2404_else5338:
    new $P5012, 'QRPA'
    box $P5013, "NQPMu"
    push $P5012, $P5013
    set $P5014, $P5012
  if2404_end5339:
    set $P101, $P5014
.annotate 'line', 2223
    find_dynamic_lex $P5015, "$*W"
    unless_null $P5015, fallback5345
    nqp_get_sc_object $P5017, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5016, $P5017
    set fb_tmp_431, $P5016
    repr_defined $I5003, fb_tmp_431
    unless $I5003 goto if2408_else5346 
    set $P5018, fb_tmp_431["$W"]
    set $P5020, $P5018
    goto if2408_end5347
  if2408_else5346:
    null $P5019
    set $P5020, $P5019
  if2408_end5347:
    unless_null $P5020, vivi_24095348
    nqp_get_sc_object $P5021, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5020, $P5021
  vivi_24095348:
    unless_null $P5020, vivi_24105349
    die "Contextual $*W not found"
    box $P5022, "Contextual $*W not found"
    set $P5020, $P5022
  vivi_24105349:
    set $P5015, $P5020
  fallback5345:
    find_dynamic_lex $P5023, "$*PACKAGE"
    unless_null $P5023, fallback5350
    nqp_get_sc_object $P5025, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5024, $P5025
    set fb_tmp_432, $P5024
    repr_defined $I5004, fb_tmp_432
    unless $I5004 goto if2411_else5351 
    set $P5026, fb_tmp_432["$PACKAGE"]
    set $P5028, $P5026
    goto if2411_end5352
  if2411_else5351:
    null $P5027
    set $P5028, $P5027
  if2411_end5352:
    unless_null $P5028, vivi_24125353
    nqp_get_sc_object $P5029, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5028, $P5029
  vivi_24125353:
    unless_null $P5028, vivi_24135354
    die "Contextual $*PACKAGE not found"
    box $P5030, "Contextual $*PACKAGE not found"
    set $P5028, $P5030
  vivi_24135354:
    set $P5023, $P5028
  fallback5350:
.annotate 'line', 2224
    find_dynamic_lex $P5031, "$*W"
    unless_null $P5031, fallback5355
    nqp_get_sc_object $P5033, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5032, $P5033
    set fb_tmp_433, $P5032
    repr_defined $I5005, fb_tmp_433
    unless $I5005 goto if2414_else5356 
    set $P5034, fb_tmp_433["$W"]
    set $P5036, $P5034
    goto if2414_end5357
  if2414_else5356:
    null $P5035
    set $P5036, $P5035
  if2414_end5357:
    unless_null $P5036, vivi_24155358
    nqp_get_sc_object $P5037, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5036, $P5037
  vivi_24155358:
    unless_null $P5036, vivi_24165359
    die "Contextual $*W not found"
    box $P5038, "Contextual $*W not found"
    set $P5036, $P5038
  vivi_24165359:
    set $P5031, $P5036
  fallback5355:
    $P5039 = $P5031."find_sym"($P101)
    $P5040 = $P5015."pkg_add_parent_or_role"($P5023, "set_default_parent", $P5039)
    .return ($P5040) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_469_1365879995.227") :anon :lex :outer("cuid_295_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2229
    .param pmc _lex_param_0 
    .lex "$role", $P101 
    .lex "$role_found", $P102 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_436 
    .local pmc fb_tmp_437 
    .local pmc fb_tmp_438 
    .local pmc fb_tmp_439 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
    new $P5018, 'ExceptionHandler'
    set_label $P5018, catch_handler_24285379
    $P5018.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5018
.annotate 'line', 2232
.annotate 'line', 2233
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback5370
    nqp_get_sc_object $P5005, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5004, $P5005
    set fb_tmp_436, $P5004
    repr_defined $I5001, fb_tmp_436
    unless $I5001 goto if2422_else5371 
    set $P5006, fb_tmp_436["$W"]
    set $P5008, $P5006
    goto if2422_end5372
  if2422_else5371:
    null $P5007
    set $P5008, $P5007
  if2422_end5372:
    unless_null $P5008, vivi_24235373
    nqp_get_sc_object $P5009, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5008, $P5009
  vivi_24235373:
    unless_null $P5008, vivi_24245374
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_24245374:
    set $P5003, $P5008
  fallback5370:
    set fb_tmp_437, _lex_param_0
    repr_defined $I5002, fb_tmp_437
    unless $I5002 goto if2425_else5375 
    set $P5012, fb_tmp_437["identifier"]
    set $P5014, $P5012
    goto if2425_end5376
  if2425_else5375:
    null $P5013
    set $P5014, $P5013
  if2425_end5376:
    unless_null $P5014, vivi_24265377
    nqp_get_sc_object $P5015, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5014, $P5015
  vivi_24265377:
    repr_clone $P5011, $P5014
    $P5016 = $P5003."find_sym"($P5011)
    set $P101, $P5016
    box $P5017, 1
    set $P102, $P5017
    set $P5019, $P102
    pop_eh 
    goto skip_handler_24275378
  catch_handler_24285379:
    .get_results ($P5018) 
    set $I10001, 1
    set $P5018["handled"], $I10001
    nqp_get_sc_object $P10001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    finalize $P5018
    pop_upto_eh $P5018
    pop_eh 
    set $P5019, $P10001
    goto skip_handler_24275378
  skip_handler_24275378:
    unless $P102 goto if2429_else5380 
.annotate 'line', 2236
.annotate 'line', 2237
    find_dynamic_lex $P5020, "$*W"
    unless_null $P5020, fallback5382
    nqp_get_sc_object $P5022, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5021, $P5022
    set fb_tmp_438, $P5021
    repr_defined $I5003, fb_tmp_438
    unless $I5003 goto if2430_else5383 
    set $P5023, fb_tmp_438["$W"]
    set $P5025, $P5023
    goto if2430_end5384
  if2430_else5383:
    null $P5024
    set $P5025, $P5024
  if2430_end5384:
    unless_null $P5025, vivi_24315385
    nqp_get_sc_object $P5026, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5025, $P5026
  vivi_24315385:
    unless_null $P5025, vivi_24325386
    die "Contextual $*W not found"
    box $P5027, "Contextual $*W not found"
    set $P5025, $P5027
  vivi_24325386:
    set $P5020, $P5025
  fallback5382:
    find_dynamic_lex $P5028, "$*PACKAGE"
    unless_null $P5028, fallback5387
    nqp_get_sc_object $P5030, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5029, $P5030
    set fb_tmp_439, $P5029
    repr_defined $I5004, fb_tmp_439
    unless $I5004 goto if2433_else5388 
    set $P5031, fb_tmp_439["$PACKAGE"]
    set $P5033, $P5031
    goto if2433_end5389
  if2433_else5388:
    null $P5032
    set $P5033, $P5032
  if2433_end5389:
    unless_null $P5033, vivi_24345390
    nqp_get_sc_object $P5034, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5033, $P5034
  vivi_24345390:
    unless_null $P5033, vivi_24355391
    die "Contextual $*PACKAGE not found"
    box $P5035, "Contextual $*PACKAGE not found"
    set $P5033, $P5035
  vivi_24355391:
    set $P5028, $P5033
  fallback5387:
    $P5036 = $P5020."pkg_add_parent_or_role"($P5028, "add_role", $P101)
    set $P5040, $P5036
    goto if2429_end5381
  if2429_else5380:
.annotate 'line', 2239
.annotate 'line', 2240
    find_lex $P5037, "$/"
    $P5038 = $P5037."CURSOR"()
    set $S5003, _lex_param_0
    concat $S5002, "Could not find role '", $S5003
    concat $S5001, $S5002, "'"
    $P5039 = $P5038."panic"($S5001)
    set $P5040, $P5039
  if2429_end5381:
    .return ($P5040) 
.end
.HLL "nqp"
.namespace []
.sub "role_params" :subid("cuid_296_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2261
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5011 = 'cuid_470_1365879995.227' 
    capture_lex $P5011 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_449 
    unless_null _lex_param_1, fallback5445
    nqp_get_sc_object $P5004, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5004
  fallback5445:
    set fb_tmp_449, _lex_param_1
    repr_defined $I5001, fb_tmp_449
    unless $I5001 goto if2464_else5443 
    set $P5005, fb_tmp_449["variable"]
    set $P5007, $P5005
    goto if2464_end5444
  if2464_else5443:
    null $P5006
    set $P5007, $P5006
  if2464_end5444:
    unless_null $P5007, vivi_24655446
    nqp_get_sc_object $P5008, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5007, $P5008
  vivi_24655446:
    set $P5001, $P5007
    iter $P5003, $P5007
  for_next5452:
    unless $P5003, for_done5454
    shift $P5010, $P5003
  for_redo5453:
    .const 'Sub' $P5009 = 'cuid_470_1365879995.227' 
    capture_lex $P5009
    $P5001 = $P5009($P5010)
    goto for_next5452
  for_done5454:
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_470_1365879995.227") :anon :lex :outer("cuid_296_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2262
    .param pmc _lex_param_0 
    .lex "$var", $P101 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_450 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
.annotate 'line', 2263
    $P5002 = _lex_param_0."ast"()
    set $P101, $P5002
.annotate 'line', 2264
    $P101."scope"("lexical")
.annotate 'line', 2265
    $P101."decl"("param")
.annotate 'line', 2266
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback5447
    nqp_get_sc_object $P5005, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5004, $P5005
    set fb_tmp_450, $P5004
    repr_defined $I5001, fb_tmp_450
    unless $I5001 goto if2466_else5448 
    set $P5006, fb_tmp_450["$W"]
    set $P5008, $P5006
    goto if2466_end5449
  if2466_else5448:
    null $P5007
    set $P5008, $P5007
  if2466_end5449:
    unless_null $P5008, vivi_24675450
    nqp_get_sc_object $P5009, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5008, $P5009
  vivi_24675450:
    unless_null $P5008, vivi_24685451
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_24685451:
    set $P5003, $P5008
  fallback5447:
    $P5011 = $P5003."cur_lexpad"()
    $P5012 = $P101."name"()
    $P5013 = $P5011."symbol"($P5012, "lexical" :named("scope"))
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<my>" :subid("cuid_297_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2270
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_451 
    unless_null _lex_param_1, fallback5457
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback5457:
    set fb_tmp_451, _lex_param_1
    repr_defined $I5001, fb_tmp_451
    unless $I5001 goto if2469_else5455 
    set $P5002, fb_tmp_451["scoped"]
    set $P5004, $P5002
    goto if2469_end5456
  if2469_else5455:
    null $P5003
    set $P5004, $P5003
  if2469_end5456:
    unless_null $P5004, vivi_24705458
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_24705458:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<our>" :subid("cuid_298_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2271
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_452 
    unless_null _lex_param_1, fallback5461
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback5461:
    set fb_tmp_452, _lex_param_1
    repr_defined $I5001, fb_tmp_452
    unless $I5001 goto if2471_else5459 
    set $P5002, fb_tmp_452["scoped"]
    set $P5004, $P5002
    goto if2471_end5460
  if2471_else5459:
    null $P5003
    set $P5004, $P5003
  if2471_end5460:
    unless_null $P5004, vivi_24725462
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_24725462:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<has>" :subid("cuid_299_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2272
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_453 
    unless_null _lex_param_1, fallback5465
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback5465:
    set fb_tmp_453, _lex_param_1
    repr_defined $I5001, fb_tmp_453
    unless $I5001 goto if2473_else5463 
    set $P5002, fb_tmp_453["scoped"]
    set $P5004, $P5002
    goto if2473_end5464
  if2473_else5463:
    null $P5003
    set $P5004, $P5003
  if2473_end5464:
    unless_null $P5004, vivi_24745466
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_24745466:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "scoped" :subid("cuid_300_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2274
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_454 
    .local pmc fb_tmp_455 
    .local pmc fb_tmp_456 
    .local pmc fb_tmp_457 
    .local pmc fb_tmp_458 
.annotate 'line', 2275
    unless_null _lex_param_1, fallback5471
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback5471:
    set fb_tmp_454, _lex_param_1
    repr_defined $I5001, fb_tmp_454
    unless $I5001 goto if2476_else5469 
    set $P5002, fb_tmp_454["declarator"]
    set $P5004, $P5002
    goto if2476_end5470
  if2476_else5469:
    null $P5003
    set $P5004, $P5003
  if2476_end5470:
    unless_null $P5004, vivi_24775472
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_24775472:
    unless $P5004 goto if2475_else5467 
    unless_null _lex_param_1, fallback5475
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5006
  fallback5475:
    set fb_tmp_455, _lex_param_1
    repr_defined $I5002, fb_tmp_455
    unless $I5002 goto if2478_else5473 
    set $P5007, fb_tmp_455["declarator"]
    set $P5009, $P5007
    goto if2478_end5474
  if2478_else5473:
    null $P5008
    set $P5009, $P5008
  if2478_end5474:
    unless_null $P5009, vivi_24795476
    nqp_get_sc_object $P5010, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5009, $P5010
  vivi_24795476:
    $P5011 = $P5009."ast"()
    set $P5030, $P5011
    goto if2475_end5468
  if2475_else5467:
    unless_null _lex_param_1, fallback5481
    nqp_get_sc_object $P5012, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5012
  fallback5481:
    set fb_tmp_456, _lex_param_1
    repr_defined $I5003, fb_tmp_456
    unless $I5003 goto if2481_else5479 
    set $P5013, fb_tmp_456["multi_declarator"]
    set $P5015, $P5013
    goto if2481_end5480
  if2481_else5479:
    null $P5014
    set $P5015, $P5014
  if2481_end5480:
    unless_null $P5015, vivi_24825482
    nqp_get_sc_object $P5016, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5015, $P5016
  vivi_24825482:
    unless $P5015 goto if2480_else5477 
.annotate 'line', 2276
    unless_null _lex_param_1, fallback5485
    nqp_get_sc_object $P5017, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5017
  fallback5485:
    set fb_tmp_457, _lex_param_1
    repr_defined $I5004, fb_tmp_457
    unless $I5004 goto if2483_else5483 
    set $P5018, fb_tmp_457["multi_declarator"]
    set $P5020, $P5018
    goto if2483_end5484
  if2483_else5483:
    null $P5019
    set $P5020, $P5019
  if2483_end5484:
    unless_null $P5020, vivi_24845486
    nqp_get_sc_object $P5021, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5020, $P5021
  vivi_24845486:
    $P5022 = $P5020."ast"()
    set $P5029, $P5022
    goto if2480_end5478
  if2480_else5477:
.annotate 'line', 2277
    unless_null _lex_param_1, fallback5489
    nqp_get_sc_object $P5023, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5023
  fallback5489:
    set fb_tmp_458, _lex_param_1
    repr_defined $I5005, fb_tmp_458
    unless $I5005 goto if2485_else5487 
    set $P5024, fb_tmp_458["package_declarator"]
    set $P5026, $P5024
    goto if2485_end5488
  if2485_else5487:
    null $P5025
    set $P5026, $P5025
  if2485_end5488:
    unless_null $P5026, vivi_24865490
    nqp_get_sc_object $P5027, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5026, $P5027
  vivi_24865490:
    $P5028 = $P5026."ast"()
    set $P5029, $P5028
  if2480_end5478:
    set $P5030, $P5029
  if2475_end5468:
    $P5031 = _lex_param_1."!make"($P5030)
    .return ($P5031) 
.end
.HLL "nqp"
.namespace []
.sub "declarator" :subid("cuid_301_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2280
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_459 
    .local pmc fb_tmp_460 
    .local pmc fb_tmp_461 
.annotate 'line', 2281
    unless_null _lex_param_1, fallback5495
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback5495:
    set fb_tmp_459, _lex_param_1
    repr_defined $I5001, fb_tmp_459
    unless $I5001 goto if2488_else5493 
    set $P5002, fb_tmp_459["routine_declarator"]
    set $P5004, $P5002
    goto if2488_end5494
  if2488_else5493:
    null $P5003
    set $P5004, $P5003
  if2488_end5494:
    unless_null $P5004, vivi_24895496
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_24895496:
    unless $P5004 goto if2487_else5491 
.annotate 'line', 2282
    unless_null _lex_param_1, fallback5499
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5006
  fallback5499:
    set fb_tmp_460, _lex_param_1
    repr_defined $I5002, fb_tmp_460
    unless $I5002 goto if2490_else5497 
    set $P5007, fb_tmp_460["routine_declarator"]
    set $P5009, $P5007
    goto if2490_end5498
  if2490_else5497:
    null $P5008
    set $P5009, $P5008
  if2490_end5498:
    unless_null $P5009, vivi_24915500
    nqp_get_sc_object $P5010, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5009, $P5010
  vivi_24915500:
    $P5011 = $P5009."ast"()
    set $P5018, $P5011
    goto if2487_end5492
  if2487_else5491:
.annotate 'line', 2283
    unless_null _lex_param_1, fallback5503
    nqp_get_sc_object $P5012, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5012
  fallback5503:
    set fb_tmp_461, _lex_param_1
    repr_defined $I5003, fb_tmp_461
    unless $I5003 goto if2492_else5501 
    set $P5013, fb_tmp_461["variable_declarator"]
    set $P5015, $P5013
    goto if2492_end5502
  if2492_else5501:
    null $P5014
    set $P5015, $P5014
  if2492_end5502:
    unless_null $P5015, vivi_24935504
    nqp_get_sc_object $P5016, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5015, $P5016
  vivi_24935504:
    $P5017 = $P5015."ast"()
    set $P5018, $P5017
  if2487_end5492:
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<multi>" :subid("cuid_302_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2286
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_462 
    .local pmc fb_tmp_463 
    .local pmc fb_tmp_464 
    unless_null _lex_param_1, fallback5509
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback5509:
    set fb_tmp_462, _lex_param_1
    repr_defined $I5001, fb_tmp_462
    unless $I5001 goto if2495_else5507 
    set $P5002, fb_tmp_462["declarator"]
    set $P5004, $P5002
    goto if2495_end5508
  if2495_else5507:
    null $P5003
    set $P5004, $P5003
  if2495_end5508:
    unless_null $P5004, vivi_24965510
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_24965510:
    unless $P5004 goto if2494_else5505 
    unless_null _lex_param_1, fallback5513
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5006
  fallback5513:
    set fb_tmp_463, _lex_param_1
    repr_defined $I5002, fb_tmp_463
    unless $I5002 goto if2497_else5511 
    set $P5007, fb_tmp_463["declarator"]
    set $P5009, $P5007
    goto if2497_end5512
  if2497_else5511:
    null $P5008
    set $P5009, $P5008
  if2497_end5512:
    unless_null $P5009, vivi_24985514
    nqp_get_sc_object $P5010, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5009, $P5010
  vivi_24985514:
    $P5011 = $P5009."ast"()
    set $P5018, $P5011
    goto if2494_end5506
  if2494_else5505:
    unless_null _lex_param_1, fallback5517
    nqp_get_sc_object $P5012, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5012
  fallback5517:
    set fb_tmp_464, _lex_param_1
    repr_defined $I5003, fb_tmp_464
    unless $I5003 goto if2499_else5515 
    set $P5013, fb_tmp_464["routine_def"]
    set $P5015, $P5013
    goto if2499_end5516
  if2499_else5515:
    null $P5014
    set $P5015, $P5014
  if2499_end5516:
    unless_null $P5015, vivi_25005518
    nqp_get_sc_object $P5016, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5015, $P5016
  vivi_25005518:
    $P5017 = $P5015."ast"()
    set $P5018, $P5017
  if2494_end5506:
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<proto>" :subid("cuid_303_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2287
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_465 
    .local pmc fb_tmp_466 
    .local pmc fb_tmp_467 
    unless_null _lex_param_1, fallback5523
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback5523:
    set fb_tmp_465, _lex_param_1
    repr_defined $I5001, fb_tmp_465
    unless $I5001 goto if2502_else5521 
    set $P5002, fb_tmp_465["declarator"]
    set $P5004, $P5002
    goto if2502_end5522
  if2502_else5521:
    null $P5003
    set $P5004, $P5003
  if2502_end5522:
    unless_null $P5004, vivi_25035524
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_25035524:
    unless $P5004 goto if2501_else5519 
    unless_null _lex_param_1, fallback5527
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5006
  fallback5527:
    set fb_tmp_466, _lex_param_1
    repr_defined $I5002, fb_tmp_466
    unless $I5002 goto if2504_else5525 
    set $P5007, fb_tmp_466["declarator"]
    set $P5009, $P5007
    goto if2504_end5526
  if2504_else5525:
    null $P5008
    set $P5009, $P5008
  if2504_end5526:
    unless_null $P5009, vivi_25055528
    nqp_get_sc_object $P5010, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5009, $P5010
  vivi_25055528:
    $P5011 = $P5009."ast"()
    set $P5018, $P5011
    goto if2501_end5520
  if2501_else5519:
    unless_null _lex_param_1, fallback5531
    nqp_get_sc_object $P5012, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5012
  fallback5531:
    set fb_tmp_467, _lex_param_1
    repr_defined $I5003, fb_tmp_467
    unless $I5003 goto if2506_else5529 
    set $P5013, fb_tmp_467["routine_def"]
    set $P5015, $P5013
    goto if2506_end5530
  if2506_else5529:
    null $P5014
    set $P5015, $P5014
  if2506_end5530:
    unless_null $P5015, vivi_25075532
    nqp_get_sc_object $P5016, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5015, $P5016
  vivi_25075532:
    $P5017 = $P5015."ast"()
    set $P5018, $P5017
  if2501_end5520:
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<null>" :subid("cuid_304_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2288
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_468 
    unless_null _lex_param_1, fallback5535
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback5535:
    set fb_tmp_468, _lex_param_1
    repr_defined $I5001, fb_tmp_468
    unless $I5001 goto if2508_else5533 
    set $P5002, fb_tmp_468["declarator"]
    set $P5004, $P5002
    goto if2508_end5534
  if2508_else5533:
    null $P5003
    set $P5004, $P5003
  if2508_end5534:
    unless_null $P5004, vivi_25095536
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_25095536:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "variable_declarator" :subid("cuid_305_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2291
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5095 = 'cuid_471_1365879995.227' 
    capture_lex $P5095 
    .const 'Sub' $P5095 = 'cuid_473_1365879995.227' 
    capture_lex $P5095 
    .const 'Sub' $P5095 = 'cuid_474_1365879995.227' 
    capture_lex $P5095 
    .lex "$past", $P101 
    .lex "$sigil", $P102 
    .lex "$name", $P103 
    .lex "$BLOCK", $P104 
    .lex "$*DECLARAND_ATTR", $P105 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_469 
    .local pmc fb_tmp_470 
    .local pmc fb_tmp_471 
    .local pmc fb_tmp_472 
    .local pmc fb_tmp_473 
    .local pmc fb_tmp_474 
    .local pmc fb_tmp_490 
    .local pmc fb_tmp_491 
    .local pmc fb_tmp_492 
    .local pmc fb_tmp_498 
    .local pmc fb_tmp_499 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P105, $P5005
.annotate 'line', 2292
    unless_null _lex_param_1, fallback5539
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5006
  fallback5539:
    set fb_tmp_469, _lex_param_1
    repr_defined $I5001, fb_tmp_469
    unless $I5001 goto if2510_else5537 
    set $P5007, fb_tmp_469["variable"]
    set $P5009, $P5007
    goto if2510_end5538
  if2510_else5537:
    null $P5008
    set $P5009, $P5008
  if2510_end5538:
    unless_null $P5009, vivi_25115540
    nqp_get_sc_object $P5010, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5009, $P5010
  vivi_25115540:
    $P5011 = $P5009."ast"()
    set $P101, $P5011
    unless_null _lex_param_1, fallback5545
    nqp_get_sc_object $P5012, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5012
  fallback5545:
    set fb_tmp_471, _lex_param_1
    repr_defined $I5003, fb_tmp_471
    unless $I5003 goto if2513_else5543 
    set $P5013, fb_tmp_471["variable"]
    set $P5015, $P5013
    goto if2513_end5544
  if2513_else5543:
    null $P5014
    set $P5015, $P5014
  if2513_end5544:
    unless_null $P5015, vivi_25145546
    nqp_get_sc_object $P5016, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5015, $P5016
  vivi_25145546:
    set fb_tmp_470, $P5015
    repr_defined $I5002, fb_tmp_470
    unless $I5002 goto if2512_else5541 
    set $P5017, fb_tmp_470["sigil"]
    set $P5019, $P5017
    goto if2512_end5542
  if2512_else5541:
    null $P5018
    set $P5019, $P5018
  if2512_end5542:
    unless_null $P5019, vivi_25155547
    nqp_get_sc_object $P5020, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5019, $P5020
  vivi_25155547:
    set $P102, $P5019
.annotate 'line', 2294
    $P5021 = $P101."name"()
    set $P103, $P5021
.annotate 'line', 2295
    find_dynamic_lex $P5022, "$*W"
    unless_null $P5022, fallback5548
    nqp_get_sc_object $P5024, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5023, $P5024
    set fb_tmp_472, $P5023
    repr_defined $I5004, fb_tmp_472
    unless $I5004 goto if2516_else5549 
    set $P5025, fb_tmp_472["$W"]
    set $P5027, $P5025
    goto if2516_end5550
  if2516_else5549:
    null $P5026
    set $P5027, $P5026
  if2516_end5550:
    unless_null $P5027, vivi_25175551
    nqp_get_sc_object $P5028, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5027, $P5028
  vivi_25175551:
    unless_null $P5027, vivi_25185552
    die "Contextual $*W not found"
    box $P5029, "Contextual $*W not found"
    set $P5027, $P5029
  vivi_25185552:
    set $P5022, $P5027
  fallback5548:
    $P5030 = $P5022."cur_lexpad"()
    set $P104, $P5030
    set $P5039, $P103
    unless $P103 goto if2523_end5561 
.annotate 'line', 2297
    $P5038 = $P104."symbol"($P103)
    set $P5039, $P5038
  if2523_end5561:
    unless $P5039 goto if2522_end5559 
.annotate 'line', 2298
    $P5040 = _lex_param_1."CURSOR"()
    $P5041 = $P5040."panic"("Redeclaration of symbol ", $P103)
  if2522_end5559:
    find_dynamic_lex $P5042, "$*SCOPE"
    unless_null $P5042, fallback5564
    nqp_get_sc_object $P5044, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5043, $P5044
    set fb_tmp_474, $P5043
    repr_defined $I5007, fb_tmp_474
    unless $I5007 goto if2525_else5565 
    set $P5045, fb_tmp_474["$SCOPE"]
    set $P5047, $P5045
    goto if2525_end5566
  if2525_else5565:
    null $P5046
    set $P5047, $P5046
  if2525_end5566:
    unless_null $P5047, vivi_25265567
    nqp_get_sc_object $P5048, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5047, $P5048
  vivi_25265567:
    unless_null $P5047, vivi_25275568
    die "Contextual $*SCOPE not found"
    box $P5049, "Contextual $*SCOPE not found"
    set $P5047, $P5049
  vivi_25275568:
    set $P5042, $P5047
  fallback5564:
    set $S5001, $P5042
    iseq $I5006, $S5001, "has"
    unless $I5006 goto if2524_else5562 
    .const 'Sub' $P5050 = 'cuid_471_1365879995.227' 
    capture_lex $P5050
    $P5051 = $P5050()
    goto if2524_end5563
  if2524_else5562:
    find_dynamic_lex $P5052, "$*SCOPE"
    unless_null $P5052, fallback5649
    nqp_get_sc_object $P5054, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5053, $P5054
    set fb_tmp_490, $P5053
    repr_defined $I5009, fb_tmp_490
    unless $I5009 goto if2575_else5650 
    set $P5055, fb_tmp_490["$SCOPE"]
    set $P5057, $P5055
    goto if2575_end5651
  if2575_else5650:
    null $P5056
    set $P5057, $P5056
  if2575_end5651:
    unless_null $P5057, vivi_25765652
    nqp_get_sc_object $P5058, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5057, $P5058
  vivi_25765652:
    unless_null $P5057, vivi_25775653
    die "Contextual $*SCOPE not found"
    box $P5059, "Contextual $*SCOPE not found"
    set $P5057, $P5059
  vivi_25775653:
    set $P5052, $P5057
  fallback5649:
    set $S5002, $P5052
    iseq $I5008, $S5002, "our"
    unless $I5008 goto if2574_else5647 
.annotate 'line', 2328
    unless_null _lex_param_1, fallback5658
    nqp_get_sc_object $P5060, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5060
  fallback5658:
    set fb_tmp_491, _lex_param_1
    repr_defined $I5010, fb_tmp_491
    unless $I5010 goto if2579_else5656 
    set $P5061, fb_tmp_491["typename"]
    set $P5063, $P5061
    goto if2579_end5657
  if2579_else5656:
    null $P5062
    set $P5063, $P5062
  if2579_end5657:
    unless_null $P5063, vivi_25805659
    nqp_get_sc_object $P5064, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5063, $P5064
  vivi_25805659:
    unless $P5063 goto if2578_end5655 
.annotate 'line', 2332
.annotate 'line', 2333
    $P5065 = _lex_param_1."CURSOR"()
    $P5066 = $P5065."panic"("Cannot put types on our-scoped variables")
  if2578_end5655:
    unless_null _lex_param_1, fallback5662
    nqp_get_sc_object $P5067, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5067
  fallback5662:
    set fb_tmp_492, _lex_param_1
    repr_defined $I5011, fb_tmp_492
    unless $I5011 goto if2581_else5660 
    set $P5068, fb_tmp_492["variable"]
    set $P5070, $P5068
    goto if2581_end5661
  if2581_else5660:
    null $P5069
    set $P5070, $P5069
  if2581_end5661:
    unless_null $P5070, vivi_25825663
    nqp_get_sc_object $P5071, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5070, $P5071
  vivi_25825663:
    set $S5003, $P5070
    box $P5072, $S5003
    set $P103, $P5072
.annotate 'line', 2336
    new $P5073, 'QRPA'
    push $P5073, $P103
    $P5074 = "&lexical_package_lookup"($P5073, _lex_param_1)
    set $P101, $P5074
.annotate 'line', 2337
    $P5075 = $P104."symbol"($P103, "package" :named("scope"))
    set $P5078, $P5075
    goto if2574_end5648
  if2574_else5647:
    .const 'Sub' $P5076 = 'cuid_473_1365879995.227' 
    capture_lex $P5076
    $P5077 = $P5076()
    set $P5078, $P5077
  if2574_end5648:
  if2524_end5563:
    unless_null _lex_param_1, fallback5693
    nqp_get_sc_object $P5079, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5079
  fallback5693:
    set fb_tmp_498, _lex_param_1
    repr_defined $I5012, fb_tmp_498
    unless $I5012 goto if2598_else5691 
    set $P5080, fb_tmp_498["trait"]
    set $P5082, $P5080
    goto if2598_end5692
  if2598_else5691:
    null $P5081
    set $P5082, $P5081
  if2598_end5692:
    unless_null $P5082, vivi_25995694
    nqp_get_sc_object $P5083, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5082, $P5083
  vivi_25995694:
    unless $P5082 goto if2597_end5690 
.annotate 'line', 2366
    unless_null _lex_param_1, fallback5697
    nqp_get_sc_object $P5087, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5087
  fallback5697:
    set fb_tmp_499, _lex_param_1
    repr_defined $I5013, fb_tmp_499
    unless $I5013 goto if2600_else5695 
    set $P5088, fb_tmp_499["trait"]
    set $P5090, $P5088
    goto if2600_end5696
  if2600_else5695:
    null $P5089
    set $P5090, $P5089
  if2600_end5696:
    unless_null $P5090, vivi_26015698
    nqp_get_sc_object $P5091, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5090, $P5091
  vivi_26015698:
    set $P5084, $P5090
    iter $P5086, $P5090
  for_next5699:
    unless $P5086, for_done5701
    shift $P5093, $P5086
  for_redo5700:
    .const 'Sub' $P5092 = 'cuid_474_1365879995.227' 
    capture_lex $P5092
    $P5084 = $P5092($P5093)
    goto for_next5699
  for_done5701:
  if2597_end5690:
.annotate 'line', 2370
    $P5094 = _lex_param_1."!make"($P101)
    .return ($P5094) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_471_1365879995.227") :anon :lex :outer("cuid_305_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2300
    .lex "%lit_args", $P101 
    .lex "%obj_args", $P102 
    .local pmc fb_tmp_475 
    .local pmc pkg_viv_tmp_43 
    .local pmc fb_tmp_476 
    .local pmc fb_tmp_477 
    .local pmc fb_tmp_478 
    .local pmc fb_tmp_479 
    .local pmc fb_tmp_480 
    .local pmc fb_tmp_481 
    .local pmc fb_tmp_482 
    .local pmc fb_tmp_483 
    .local pmc fb_tmp_484 
    .local pmc fb_tmp_485 
    .local pmc fb_tmp_486 
    .local pmc fb_tmp_487 
    .local pmc fb_tmp_488 
    .local pmc pkg_viv_tmp_44 
    .local pmc fb_tmp_489 
    new $P5001, 'Hash'
    set $P101, $P5001
    new $P5002, 'Hash'
    set $P102, $P5002
    find_dynamic_lex $P5003, "%*HOW"
    unless_null $P5003, fallback5571
    nqp_get_sc_object $P5005, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5004, $P5005
    set pkg_viv_tmp_43, $P5004
    set fb_tmp_475, pkg_viv_tmp_43
    repr_defined $I5002, fb_tmp_475
    unless $I5002 goto if2529_else5572 
    set $P5006, fb_tmp_475["%HOW"]
    set $P5008, $P5006
    goto if2529_end5573
  if2529_else5572:
    null $P5007
    set $P5008, $P5007
  if2529_end5573:
    unless_null $P5008, vivi_25305574
    new $P5009, 'Hash'
    set pkg_viv_tmp_43["%HOW"], $P5009
    set $P5008, $P5009
  vivi_25305574:
    unless_null $P5008, vivi_25315575
    die "Contextual %*HOW not found"
    box $P5010, "Contextual %*HOW not found"
    set $P5008, $P5010
  vivi_25315575:
    set $P5003, $P5008
  fallback5571:
    find_dynamic_lex $P5011, "$*PKGDECL"
    unless_null $P5011, fallback5576
    nqp_get_sc_object $P5013, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5012, $P5013
    set fb_tmp_476, $P5012
    repr_defined $I5003, fb_tmp_476
    unless $I5003 goto if2532_else5577 
    set $P5014, fb_tmp_476["$PKGDECL"]
    set $P5016, $P5014
    goto if2532_end5578
  if2532_else5577:
    null $P5015
    set $P5016, $P5015
  if2532_end5578:
    unless_null $P5016, vivi_25335579
    nqp_get_sc_object $P5017, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5016, $P5017
  vivi_25335579:
    unless_null $P5016, vivi_25345580
    die "Contextual $*PKGDECL not found"
    box $P5018, "Contextual $*PKGDECL not found"
    set $P5016, $P5018
  vivi_25345580:
    set $P5011, $P5016
  fallback5576:
    set $S5002, $P5011
    concat $S5001, $S5002, "-attr"
    exists $I5001, $P5003[$S5001]
    if $I5001 goto unless2528_end5570 
.annotate 'line', 2302
.annotate 'line', 2303
    find_lex $P5019, "$/"
    $P5020 = $P5019."CURSOR"()
    find_dynamic_lex $P5021, "$*PKGDECL"
    unless_null $P5021, fallback5581
    nqp_get_sc_object $P5023, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5022, $P5023
    set fb_tmp_477, $P5022
    repr_defined $I5004, fb_tmp_477
    unless $I5004 goto if2535_else5582 
    set $P5024, fb_tmp_477["$PKGDECL"]
    set $P5026, $P5024
    goto if2535_end5583
  if2535_else5582:
    null $P5025
    set $P5026, $P5025
  if2535_end5583:
    unless_null $P5026, vivi_25365584
    nqp_get_sc_object $P5027, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5026, $P5027
  vivi_25365584:
    unless_null $P5026, vivi_25375585
    die "Contextual $*PKGDECL not found"
    box $P5028, "Contextual $*PKGDECL not found"
    set $P5026, $P5028
  vivi_25375585:
    set $P5021, $P5026
  fallback5581:
    set $S5004, $P5021
    concat $S5003, $S5004, " packages do not support attributes"
    $P5029 = $P5020."panic"($S5003)
  unless2528_end5570:
    find_lex $P5030, "$name"
    set $P101["name"], $P5030
    find_lex $P5031, "$/"
    unless_null $P5031, fallback5590
    nqp_get_sc_object $P5032, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5031, $P5032
  fallback5590:
    set fb_tmp_478, $P5031
    repr_defined $I5005, fb_tmp_478
    unless $I5005 goto if2539_else5588 
    set $P5033, fb_tmp_478["typename"]
    set $P5035, $P5033
    goto if2539_end5589
  if2539_else5588:
    null $P5034
    set $P5035, $P5034
  if2539_end5589:
    unless_null $P5035, vivi_25405591
    nqp_get_sc_object $P5036, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5035, $P5036
  vivi_25405591:
    unless $P5035 goto if2538_end5587 
.annotate 'line', 2310
.annotate 'line', 2311
    find_dynamic_lex $P5037, "$*W"
    unless_null $P5037, fallback5592
    nqp_get_sc_object $P5039, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5038, $P5039
    set fb_tmp_479, $P5038
    repr_defined $I5006, fb_tmp_479
    unless $I5006 goto if2541_else5593 
    set $P5040, fb_tmp_479["$W"]
    set $P5042, $P5040
    goto if2541_end5594
  if2541_else5593:
    null $P5041
    set $P5042, $P5041
  if2541_end5594:
    unless_null $P5042, vivi_25425595
    nqp_get_sc_object $P5043, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5042, $P5043
  vivi_25425595:
    unless_null $P5042, vivi_25435596
    die "Contextual $*W not found"
    box $P5044, "Contextual $*W not found"
    set $P5042, $P5044
  vivi_25435596:
    set $P5037, $P5042
  fallback5592:
    new $P5045, 'QRPA'
    find_lex $P5046, "$/"
    unless_null $P5046, fallback5601
    nqp_get_sc_object $P5047, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5046, $P5047
  fallback5601:
    set fb_tmp_481, $P5046
    repr_defined $I5008, fb_tmp_481
    unless $I5008 goto if2545_else5599 
    set $P5048, fb_tmp_481["typename"]
    set $P5050, $P5048
    goto if2545_end5600
  if2545_else5599:
    null $P5049
    set $P5050, $P5049
  if2545_end5600:
    unless_null $P5050, vivi_25465602
    nqp_get_sc_object $P5051, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5050, $P5051
  vivi_25465602:
    set fb_tmp_480, $P5050
    repr_defined $I5007, fb_tmp_480
    unless $I5007 goto if2544_else5597 
    set $P5052, fb_tmp_480[0]
    set $P5054, $P5052
    goto if2544_end5598
  if2544_else5597:
    null $P5053
    set $P5054, $P5053
  if2544_end5598:
    unless_null $P5054, vivi_25475603
    nqp_get_sc_object $P5055, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5054, $P5055
  vivi_25475603:
    set $S5005, $P5054
    box $P5056, $S5005
    push $P5045, $P5056
    $P5057 = $P5037."find_sym"($P5045)
    set $P102["type"], $P5057
  if2538_end5587:
    find_lex $P5058, "$sigil"
    set $S5006, $P5058
    iseq $I5009, $S5006, "$"
    set $I5011, $I5009
    if $I5009 goto unless2549_end5607 
    find_lex $P5059, "$sigil"
    set $S5007, $P5059
    iseq $I5010, $S5007, "&"
    set $I5011, $I5010
  unless2549_end5607:
    unless $I5011 goto if2548_end5605 
.annotate 'line', 2313
    find_lex $P5060, "$/"
    unless_null $P5060, fallback5612
    nqp_get_sc_object $P5061, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5060, $P5061
  fallback5612:
    set fb_tmp_482, $P5060
    repr_defined $I5012, fb_tmp_482
    unless $I5012 goto if2551_else5610 
    set $P5062, fb_tmp_482["typename"]
    set $P5064, $P5062
    goto if2551_end5611
  if2551_else5610:
    null $P5063
    set $P5064, $P5063
  if2551_end5611:
    unless_null $P5064, vivi_25525613
    nqp_get_sc_object $P5065, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5064, $P5065
  vivi_25525613:
    unless $P5064 goto if2550_else5608 
.annotate 'line', 2314
    set fb_tmp_483, $P102
    repr_defined $I5013, fb_tmp_483
    unless $I5013 goto if2553_else5614 
    set $P5066, fb_tmp_483["type"]
    set $P5068, $P5066
    goto if2553_end5615
  if2553_else5614:
    null $P5067
    set $P5068, $P5067
  if2553_end5615:
    unless_null $P5068, vivi_25545616
    nqp_get_sc_object $P5069, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5068, $P5069
  vivi_25545616:
    set $P102["default"], $P5068
    set $P5083, $P5068
    goto if2550_end5609
  if2550_else5608:
.annotate 'line', 2317
    new $P5081, 'ExceptionHandler'
    set_label $P5081, catch_handler_25595623
    $P5081.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5081
.annotate 'line', 2318
    find_dynamic_lex $P5070, "$*W"
    unless_null $P5070, fallback5617
    nqp_get_sc_object $P5072, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5071, $P5072
    set fb_tmp_484, $P5071
    repr_defined $I5014, fb_tmp_484
    unless $I5014 goto if2555_else5618 
    set $P5073, fb_tmp_484["$W"]
    set $P5075, $P5073
    goto if2555_end5619
  if2555_else5618:
    null $P5074
    set $P5075, $P5074
  if2555_end5619:
    unless_null $P5075, vivi_25565620
    nqp_get_sc_object $P5076, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5075, $P5076
  vivi_25565620:
    unless_null $P5075, vivi_25575621
    die "Contextual $*W not found"
    box $P5077, "Contextual $*W not found"
    set $P5075, $P5077
  vivi_25575621:
    set $P5070, $P5075
  fallback5617:
    new $P5078, 'QRPA'
    box $P5079, "NQPMu"
    push $P5078, $P5079
    $P5080 = $P5070."find_sym"($P5078)
    set $P102["default"], $P5080
    set $P5082, $P5080
    pop_eh 
    goto skip_handler_25585622
  catch_handler_25595623:
    .get_results ($P5081) 
    set $I10001, 1
    set $P5081["handled"], $I10001
    nqp_get_sc_object $P10001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    finalize $P5081
    pop_upto_eh $P5081
    pop_eh 
    set $P5082, $P10001
    goto skip_handler_25585622
  skip_handler_25585622:
    set $P5083, $P5082
  if2550_end5609:
  if2548_end5605:
.annotate 'line', 2323
    find_dynamic_lex $P5084, "$*W"
    unless_null $P5084, fallback5624
    nqp_get_sc_object $P5086, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5085, $P5086
    set fb_tmp_485, $P5085
    repr_defined $I5015, fb_tmp_485
    unless $I5015 goto if2560_else5625 
    set $P5087, fb_tmp_485["$W"]
    set $P5089, $P5087
    goto if2560_end5626
  if2560_else5625:
    null $P5088
    set $P5089, $P5088
  if2560_end5626:
    unless_null $P5089, vivi_25615627
    nqp_get_sc_object $P5090, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5089, $P5090
  vivi_25615627:
    unless_null $P5089, vivi_25625628
    die "Contextual $*W not found"
    box $P5091, "Contextual $*W not found"
    set $P5089, $P5091
  vivi_25625628:
    set $P5084, $P5089
  fallback5624:
    find_dynamic_lex $P5092, "$*PACKAGE"
    unless_null $P5092, fallback5629
    nqp_get_sc_object $P5094, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5093, $P5094
    set fb_tmp_486, $P5093
    repr_defined $I5016, fb_tmp_486
    unless $I5016 goto if2563_else5630 
    set $P5095, fb_tmp_486["$PACKAGE"]
    set $P5097, $P5095
    goto if2563_end5631
  if2563_else5630:
    null $P5096
    set $P5097, $P5096
  if2563_end5631:
    unless_null $P5097, vivi_25645632
    nqp_get_sc_object $P5098, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5097, $P5098
  vivi_25645632:
    unless_null $P5097, vivi_25655633
    die "Contextual $*PACKAGE not found"
    box $P5099, "Contextual $*PACKAGE not found"
    set $P5097, $P5099
  vivi_25655633:
    set $P5092, $P5097
  fallback5629:
    find_dynamic_lex $P5100, "%*HOW"
    unless_null $P5100, fallback5636
    nqp_get_sc_object $P5102, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5101, $P5102
    set pkg_viv_tmp_44, $P5101
    set fb_tmp_488, pkg_viv_tmp_44
    repr_defined $I5018, fb_tmp_488
    unless $I5018 goto if2567_else5637 
    set $P5103, fb_tmp_488["%HOW"]
    set $P5105, $P5103
    goto if2567_end5638
  if2567_else5637:
    null $P5104
    set $P5105, $P5104
  if2567_end5638:
    unless_null $P5105, vivi_25685639
    new $P5106, 'Hash'
    set pkg_viv_tmp_44["%HOW"], $P5106
    set $P5105, $P5106
  vivi_25685639:
    unless_null $P5105, vivi_25695640
    die "Contextual %*HOW not found"
    box $P5107, "Contextual %*HOW not found"
    set $P5105, $P5107
  vivi_25695640:
    set $P5100, $P5105
  fallback5636:
    set fb_tmp_487, $P5100
    repr_defined $I5017, fb_tmp_487
    unless $I5017 goto if2566_else5634 
    find_dynamic_lex $P5109, "$*PKGDECL"
    unless_null $P5109, fallback5641
    nqp_get_sc_object $P5111, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5110, $P5111
    set fb_tmp_489, $P5110
    repr_defined $I5019, fb_tmp_489
    unless $I5019 goto if2570_else5642 
    set $P5112, fb_tmp_489["$PKGDECL"]
    set $P5114, $P5112
    goto if2570_end5643
  if2570_else5642:
    null $P5113
    set $P5114, $P5113
  if2570_end5643:
    unless_null $P5114, vivi_25715644
    nqp_get_sc_object $P5115, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5114, $P5115
  vivi_25715644:
    unless_null $P5114, vivi_25725645
    die "Contextual $*PKGDECL not found"
    box $P5116, "Contextual $*PKGDECL not found"
    set $P5114, $P5116
  vivi_25725645:
    set $P5109, $P5114
  fallback5641:
    set $S5009, $P5109
    concat $S5008, $S5009, "-attr"
    set $P5108, fb_tmp_487[$S5008]
    set $P5118, $P5108
    goto if2566_end5635
  if2566_else5634:
    null $P5117
    set $P5118, $P5117
  if2566_end5635:
    unless_null $P5118, vivi_25735646
    nqp_get_sc_object $P5119, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5118, $P5119
  vivi_25735646:
    $P5120 = $P5084."pkg_add_attribute"($P5092, $P5118, $P101, $P102)
    store_dynamic_lex "$*DECLARAND_ATTR", $P5120
.annotate 'line', 2326
    nqp_get_sc_object $P5121, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 93
    $P5122 = $P5121."new"()
    store_lex "$past", $P5122
    .return ($P5122) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_473_1365879995.227") :anon :lex :outer("cuid_305_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2339
    .const 'Sub' $P5056 = 'cuid_472_1365879995.227' 
    capture_lex $P5056 
    .lex "$type", $P101 
    .lex "$default", $P102 
    .local pmc fb_tmp_493 
    .local pmc fb_tmp_494 
    .local pmc fb_tmp_495 
    .local pmc fb_tmp_496 
    .local pmc fb_tmp_497 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
    find_lex $P5003, "$/"
    unless_null $P5003, fallback5668
    nqp_get_sc_object $P5004, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5003, $P5004
  fallback5668:
    set fb_tmp_493, $P5003
    repr_defined $I5001, fb_tmp_493
    unless $I5001 goto if2584_else5666 
    set $P5005, fb_tmp_493["typename"]
    set $P5007, $P5005
    goto if2584_end5667
  if2584_else5666:
    null $P5006
    set $P5007, $P5006
  if2584_end5667:
    unless_null $P5007, vivi_25855669
    nqp_get_sc_object $P5008, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5007, $P5008
  vivi_25855669:
    unless $P5007 goto if2583_else5664 
.annotate 'line', 2342
    find_lex $P5009, "$sigil"
    set $S5001, $P5009
    iseq $I5002, $S5001, "$"
    if $I5002 goto unless2586_end5671 
.annotate 'line', 2343
.annotate 'line', 2344
    find_lex $P5010, "$/"
    $P5011 = $P5010."CURSOR"()
    $P5012 = $P5011."panic"("Only typed scalars are currently supported in NQP")
  unless2586_end5671:
.annotate 'line', 2346
    find_dynamic_lex $P5013, "$*W"
    unless_null $P5013, fallback5672
    nqp_get_sc_object $P5015, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5014, $P5015
    set fb_tmp_494, $P5014
    repr_defined $I5003, fb_tmp_494
    unless $I5003 goto if2587_else5673 
    set $P5016, fb_tmp_494["$W"]
    set $P5018, $P5016
    goto if2587_end5674
  if2587_else5673:
    null $P5017
    set $P5018, $P5017
  if2587_end5674:
    unless_null $P5018, vivi_25885675
    nqp_get_sc_object $P5019, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5018, $P5019
  vivi_25885675:
    unless_null $P5018, vivi_25895676
    die "Contextual $*W not found"
    box $P5020, "Contextual $*W not found"
    set $P5018, $P5020
  vivi_25895676:
    set $P5013, $P5018
  fallback5672:
    new $P5021, 'QRPA'
    find_lex $P5022, "$/"
    unless_null $P5022, fallback5681
    nqp_get_sc_object $P5023, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5022, $P5023
  fallback5681:
    set fb_tmp_496, $P5022
    repr_defined $I5005, fb_tmp_496
    unless $I5005 goto if2591_else5679 
    set $P5024, fb_tmp_496["typename"]
    set $P5026, $P5024
    goto if2591_end5680
  if2591_else5679:
    null $P5025
    set $P5026, $P5025
  if2591_end5680:
    unless_null $P5026, vivi_25925682
    nqp_get_sc_object $P5027, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5026, $P5027
  vivi_25925682:
    set fb_tmp_495, $P5026
    repr_defined $I5004, fb_tmp_495
    unless $I5004 goto if2590_else5677 
    set $P5028, fb_tmp_495[0]
    set $P5030, $P5028
    goto if2590_end5678
  if2590_else5677:
    null $P5029
    set $P5030, $P5029
  if2590_end5678:
    unless_null $P5030, vivi_25935683
    nqp_get_sc_object $P5031, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5030, $P5031
  vivi_25935683:
    set $S5002, $P5030
    box $P5032, $S5002
    push $P5021, $P5032
    $P5033 = $P5013."find_sym"($P5021)
    set $P101, $P5033
    repr_get_primitive_type_spec $I5006, $P101
    unless $I5006 goto if2594_else5684 
    .const 'Sub' $P5034 = 'cuid_472_1365879995.227' 
    capture_lex $P5034
    $P5035 = $P5034($I5006)
    set $P5039, $P5035
    goto if2594_end5685
  if2594_else5684:
.annotate 'line', 2350
.annotate 'line', 2351
    find_lex $P5036, "$/"
    $P5037 = $P5036."CURSOR"()
    $P5038 = $P5037."panic"("Only native types are currently supported/checked")
    set $P5039, $P5038
  if2594_end5685:
    goto if2583_end5665
  if2583_else5664:
.annotate 'line', 2354
.annotate 'line', 2355
    find_lex $P5040, "$sigil"
    $P5041 = "&default_for"($P5040)
    set $P102, $P5041
  if2583_end5665:
.annotate 'line', 2357
    find_lex $P5042, "$BLOCK"
    set fb_tmp_497, $P5042
    repr_defined $I5007, fb_tmp_497
    unless $I5007 goto if2595_else5686 
    set $P5043, fb_tmp_497[0]
    set $P5045, $P5043
    goto if2595_end5687
  if2595_else5686:
    null $P5044
    set $P5045, $P5044
  if2595_end5687:
    unless_null $P5045, vivi_25965688
    nqp_get_sc_object $P5046, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5045, $P5046
  vivi_25965688:
    nqp_get_sc_object $P5047, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    find_lex $P5048, "$/"
.annotate 'line', 2359
    nqp_get_sc_object $P5049, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    find_lex $P5050, "$name"
    $P5051 = $P5049."new"($P5050 :named("name"), "lexical" :named("scope"), "var" :named("decl"), $P101 :named("returns"))
    $P5052 = $P5047."new"($P5051, $P102, "bind" :named("op"), $P5048 :named("node"))
    $P5045."push"($P5052)
.annotate 'line', 2362
    find_lex $P5053, "$BLOCK"
    find_lex $P5054, "$name"
    $P5055 = $P5053."symbol"($P5054, "lexical" :named("scope"), $P101 :named("type"))
    .return ($P5055) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_472_1365879995.227") :anon :lex :outer("cuid_473_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2347
    .param pmc _lex_param_0 
    .lex "$prim_spec", _lex_param_0 
.annotate 'line', 2348
    $P5001 = "&default_value_for_prim"(_lex_param_0)
    store_lex "$default", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_474_1365879995.227") :anon :lex :outer("cuid_305_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2367
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5002, "$/"
    $P5001 = _lex_param_0."ast"()
    $P5003 = $P5001($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator:sym<sub>" :subid("cuid_306_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2373
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_500 
    unless_null _lex_param_1, fallback5704
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback5704:
    set fb_tmp_500, _lex_param_1
    repr_defined $I5001, fb_tmp_500
    unless $I5001 goto if2602_else5702 
    set $P5002, fb_tmp_500["routine_def"]
    set $P5004, $P5002
    goto if2602_end5703
  if2602_else5702:
    null $P5003
    set $P5004, $P5003
  if2602_end5703:
    unless_null $P5004, vivi_26035705
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_26035705:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator:sym<method>" :subid("cuid_307_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2374
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_501 
    unless_null _lex_param_1, fallback5708
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback5708:
    set fb_tmp_501, _lex_param_1
    repr_defined $I5001, fb_tmp_501
    unless $I5001 goto if2604_else5706 
    set $P5002, fb_tmp_501["method_def"]
    set $P5004, $P5002
    goto if2604_end5707
  if2604_else5706:
    null $P5003
    set $P5004, $P5003
  if2604_end5707:
    unless_null $P5004, vivi_26055709
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_26055709:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "routine_def" :subid("cuid_308_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2376
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5074 = 'cuid_478_1365879995.227' 
    capture_lex $P5074 
    .const 'Sub' $P5074 = 'cuid_481_1365879995.227' 
    capture_lex $P5074 
    .lex "$past", $P101 
    .lex "$block", $P102 
    .lex "$lexpast", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_502 
    .local pmc fb_tmp_503 
    .local pmc fb_tmp_504 
    .local pmc fb_tmp_505 
    .local pmc fb_tmp_506 
    .local pmc fb_tmp_540 
    .local pmc fb_tmp_541 
    .local pmc fb_tmp_542 
    .local pmc fb_tmp_543 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P103, $P5003
    unless_null _lex_param_1, fallback5714
    nqp_get_sc_object $P5004, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5004
  fallback5714:
    set fb_tmp_502, _lex_param_1
    repr_defined $I5001, fb_tmp_502
    unless $I5001 goto if2607_else5712 
    set $P5005, fb_tmp_502["onlystar"]
    set $P5007, $P5005
    goto if2607_end5713
  if2607_else5712:
    null $P5006
    set $P5007, $P5006
  if2607_end5713:
    unless_null $P5007, vivi_26085715
    nqp_get_sc_object $P5008, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5007, $P5008
  vivi_26085715:
    unless $P5007 goto if2606_else5710 
.annotate 'line', 2380
.annotate 'line', 2381
    $P5009 = "&only_star_block"()
    set $P101, $P5009
    goto if2606_end5711
  if2606_else5710:
.annotate 'line', 2383
.annotate 'line', 2384
    unless_null _lex_param_1, fallback5718
    nqp_get_sc_object $P5010, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5010
  fallback5718:
    set fb_tmp_503, _lex_param_1
    repr_defined $I5002, fb_tmp_503
    unless $I5002 goto if2609_else5716 
    set $P5011, fb_tmp_503["blockoid"]
    set $P5013, $P5011
    goto if2609_end5717
  if2609_else5716:
    null $P5012
    set $P5013, $P5012
  if2609_end5717:
    unless_null $P5013, vivi_26105719
    nqp_get_sc_object $P5014, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5013, $P5014
  vivi_26105719:
    $P5015 = $P5013."ast"()
    set $P101, $P5015
.annotate 'line', 2385
    $P101."blocktype"("declaration")
    find_dynamic_lex $P5016, "$*RETURN_USED"
    unless_null $P5016, fallback5722
    nqp_get_sc_object $P5018, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5017, $P5018
    set fb_tmp_504, $P5017
    repr_defined $I5003, fb_tmp_504
    unless $I5003 goto if2612_else5723 
    set $P5019, fb_tmp_504["$RETURN_USED"]
    set $P5021, $P5019
    goto if2612_end5724
  if2612_else5723:
    null $P5020
    set $P5021, $P5020
  if2612_end5724:
    unless_null $P5021, vivi_26135725
    nqp_get_sc_object $P5022, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5021, $P5022
  vivi_26135725:
    unless_null $P5021, vivi_26145726
    die "Contextual $*RETURN_USED not found"
    box $P5023, "Contextual $*RETURN_USED not found"
    set $P5021, $P5023
  vivi_26145726:
    set $P5016, $P5021
  fallback5722:
    set $P5029, $P5016
    unless $P5016 goto if2611_end5721 
.annotate 'line', 2386
.annotate 'line', 2387
    set fb_tmp_505, $P101
    repr_defined $I5004, fb_tmp_505
    unless $I5004 goto if2615_else5727 
    set $P5024, fb_tmp_505[1]
    set $P5026, $P5024
    goto if2615_end5728
  if2615_else5727:
    null $P5025
    set $P5026, $P5025
  if2615_end5728:
    unless_null $P5026, vivi_26165729
    nqp_get_sc_object $P5027, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5026, $P5027
  vivi_26165729:
    $P5028 = "&wrap_return_handler"($P5026)
    set $P101[1], $P5028
    set $P5029, $P5028
  if2611_end5721:
  if2606_end5711:
    set $P102, $P101
    unless_null _lex_param_1, fallback5734
    nqp_get_sc_object $P5030, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5030
  fallback5734:
    set fb_tmp_506, _lex_param_1
    repr_defined $I5005, fb_tmp_506
    unless $I5005 goto if2618_else5732 
    set $P5031, fb_tmp_506["deflongname"]
    set $P5033, $P5031
    goto if2618_end5733
  if2618_else5732:
    null $P5032
    set $P5033, $P5032
  if2618_end5733:
    unless_null $P5033, vivi_26195735
    nqp_get_sc_object $P5034, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5033, $P5034
  vivi_26195735:
    unless $P5033 goto if2617_else5730 
    .const 'Sub' $P5035 = 'cuid_478_1365879995.227' 
    capture_lex $P5035
    $P5036 = $P5035()
    goto if2617_end5731
  if2617_else5730:
.annotate 'line', 2497
.annotate 'line', 2498
    find_dynamic_lex $P5037, "$*W"
    unless_null $P5037, fallback5908
    nqp_get_sc_object $P5039, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5038, $P5039
    set fb_tmp_540, $P5038
    repr_defined $I5006, fb_tmp_540
    unless $I5006 goto if2720_else5909 
    set $P5040, fb_tmp_540["$W"]
    set $P5042, $P5040
    goto if2720_end5910
  if2720_else5909:
    null $P5041
    set $P5042, $P5041
  if2720_end5910:
    unless_null $P5042, vivi_27215911
    nqp_get_sc_object $P5043, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5042, $P5043
  vivi_27215911:
    unless_null $P5042, vivi_27225912
    die "Contextual $*W not found"
    box $P5044, "Contextual $*W not found"
    set $P5042, $P5044
  vivi_27225912:
    set $P5037, $P5042
  fallback5908:
    $P5045 = $P5037."is_precompilation_mode"()
    set $P5055, $P5045
    unless $P5045 goto if2719_end5907 
.annotate 'line', 2499
    find_dynamic_lex $P5046, "$*W"
    unless_null $P5046, fallback5913
    nqp_get_sc_object $P5048, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5047, $P5048
    set fb_tmp_541, $P5047
    repr_defined $I5007, fb_tmp_541
    unless $I5007 goto if2723_else5914 
    set $P5049, fb_tmp_541["$W"]
    set $P5051, $P5049
    goto if2723_end5915
  if2723_else5914:
    null $P5050
    set $P5051, $P5050
  if2723_end5915:
    unless_null $P5051, vivi_27245916
    nqp_get_sc_object $P5052, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5051, $P5052
  vivi_27245916:
    unless_null $P5051, vivi_27255917
    die "Contextual $*W not found"
    box $P5053, "Contextual $*W not found"
    set $P5051, $P5053
  vivi_27255917:
    set $P5046, $P5051
  fallback5913:
    $P5054 = $P5046."create_code"($P101, "<anon>", 0)
    set $P5055, $P5054
  if2719_end5907:
  if2617_end5731:
.annotate 'line', 2503
    nqp_get_sc_object $P5056, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    $P5057 = $P5056."new"($P101, "takeclosure" :named("op"))
    set $P103, $P5057
    set $P103["sink"], $P101
    set $P103["block_past"], $P102
.annotate 'line', 2506
    _lex_param_1."!make"($P103)
    unless_null _lex_param_1, fallback5922
    nqp_get_sc_object $P5058, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5058
  fallback5922:
    set fb_tmp_542, _lex_param_1
    repr_defined $I5008, fb_tmp_542
    unless $I5008 goto if2727_else5920 
    set $P5059, fb_tmp_542["trait"]
    set $P5061, $P5059
    goto if2727_end5921
  if2727_else5920:
    null $P5060
    set $P5061, $P5060
  if2727_end5921:
    unless_null $P5061, vivi_27285923
    nqp_get_sc_object $P5062, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5061, $P5062
  vivi_27285923:
    set $P5073, $P5061
    unless $P5061 goto if2726_end5919 
.annotate 'line', 2509
    unless_null _lex_param_1, fallback5926
    nqp_get_sc_object $P5066, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5066
  fallback5926:
    set fb_tmp_543, _lex_param_1
    repr_defined $I5009, fb_tmp_543
    unless $I5009 goto if2729_else5924 
    set $P5067, fb_tmp_543["trait"]
    set $P5069, $P5067
    goto if2729_end5925
  if2729_else5924:
    null $P5068
    set $P5069, $P5068
  if2729_end5925:
    unless_null $P5069, vivi_27305927
    nqp_get_sc_object $P5070, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5069, $P5070
  vivi_27305927:
    set $P5063, $P5069
    iter $P5065, $P5069
  for_next5928:
    unless $P5065, for_done5930
    shift $P5072, $P5065
  for_redo5929:
    .const 'Sub' $P5071 = 'cuid_481_1365879995.227' 
    capture_lex $P5071
    $P5063 = $P5071($P5072)
    goto for_next5928
  for_done5930:
    set $P5073, $P5063
  if2726_end5919:
    .return ($P5073) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_478_1365879995.227") :anon :lex :outer("cuid_308_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2392
    .const 'Sub' $P5096 = 'cuid_477_1365879995.227' 
    capture_lex $P5096 
    .const 'Sub' $P5096 = 'cuid_479_1365879995.227' 
    capture_lex $P5096 
    .const 'Sub' $P5096 = 'cuid_480_1365879995.227' 
    capture_lex $P5096 
    .lex "$name", $P101 
    .local pmc fb_tmp_507 
    .local pmc fb_tmp_508 
    .local pmc fb_tmp_509 
    .local pmc fb_tmp_510 
    .local pmc fb_tmp_511 
    .local pmc fb_tmp_512 
    .local pmc fb_tmp_513 
    .local pmc fb_tmp_514 
    .local pmc fb_tmp_525 
    .local pmc fb_tmp_538 
    .local pmc fb_tmp_539 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    find_lex $P5002, "$/"
    unless_null $P5002, fallback5740
    nqp_get_sc_object $P5003, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5002, $P5003
  fallback5740:
    set fb_tmp_508, $P5002
    repr_defined $I5002, fb_tmp_508
    unless $I5002 goto if2621_else5738 
    set $P5004, fb_tmp_508["sigil"]
    set $P5006, $P5004
    goto if2621_end5739
  if2621_else5738:
    null $P5005
    set $P5006, $P5005
  if2621_end5739:
    unless_null $P5006, vivi_26225741
    nqp_get_sc_object $P5007, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5006, $P5007
  vivi_26225741:
    set fb_tmp_507, $P5006
    repr_defined $I5001, fb_tmp_507
    unless $I5001 goto if2620_else5736 
    set $P5008, fb_tmp_507[0]
    set $P5010, $P5008
    goto if2620_end5737
  if2620_else5736:
    null $P5009
    set $P5010, $P5009
  if2620_end5737:
    unless_null $P5010, vivi_26235742
    nqp_get_sc_object $P5011, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5010, $P5011
  vivi_26235742:
    set $S5002, $P5010
.annotate 'line', 2393
    find_lex $P5012, "$/"
    unless_null $P5012, fallback5747
    nqp_get_sc_object $P5013, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5012, $P5013
  fallback5747:
    set fb_tmp_510, $P5012
    repr_defined $I5004, fb_tmp_510
    unless $I5004 goto if2625_else5745 
    set $P5014, fb_tmp_510["deflongname"]
    set $P5016, $P5014
    goto if2625_end5746
  if2625_else5745:
    null $P5015
    set $P5016, $P5015
  if2625_end5746:
    unless_null $P5016, vivi_26265748
    nqp_get_sc_object $P5017, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5016, $P5017
  vivi_26265748:
    set fb_tmp_509, $P5016
    repr_defined $I5003, fb_tmp_509
    unless $I5003 goto if2624_else5743 
    set $P5018, fb_tmp_509[0]
    set $P5020, $P5018
    goto if2624_end5744
  if2624_else5743:
    null $P5019
    set $P5020, $P5019
  if2624_end5744:
    unless_null $P5020, vivi_26275749
    nqp_get_sc_object $P5021, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5020, $P5021
  vivi_26275749:
    $P5022 = $P5020."ast"()
    set $S5003, $P5022
    concat $S5001, $S5002, $S5003
    box $P5023, $S5001
    set $P101, $P5023
.annotate 'line', 2394
    find_lex $P5024, "$past"
    $P5024."name"($P101)
    find_dynamic_lex $P5025, "$*SCOPE"
    unless_null $P5025, fallback5756
    nqp_get_sc_object $P5027, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5026, $P5027
    set fb_tmp_511, $P5026
    repr_defined $I5006, fb_tmp_511
    unless $I5006 goto if2631_else5757 
    set $P5028, fb_tmp_511["$SCOPE"]
    set $P5030, $P5028
    goto if2631_end5758
  if2631_else5757:
    null $P5029
    set $P5030, $P5029
  if2631_end5758:
    unless_null $P5030, vivi_26325759
    nqp_get_sc_object $P5031, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5030, $P5031
  vivi_26325759:
    unless_null $P5030, vivi_26335760
    die "Contextual $*SCOPE not found"
    box $P5032, "Contextual $*SCOPE not found"
    set $P5030, $P5032
  vivi_26335760:
    set $P5025, $P5030
  fallback5756:
    set $S5004, $P5025
    iseq $I5005, $S5004, ""
    set $I5009, $I5005
    if $I5005 goto unless2630_end5755 
    find_dynamic_lex $P5033, "$*SCOPE"
    unless_null $P5033, fallback5761
    nqp_get_sc_object $P5035, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5034, $P5035
    set fb_tmp_512, $P5034
    repr_defined $I5008, fb_tmp_512
    unless $I5008 goto if2634_else5762 
    set $P5036, fb_tmp_512["$SCOPE"]
    set $P5038, $P5036
    goto if2634_end5763
  if2634_else5762:
    null $P5037
    set $P5038, $P5037
  if2634_end5763:
    unless_null $P5038, vivi_26355764
    nqp_get_sc_object $P5039, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5038, $P5039
  vivi_26355764:
    unless_null $P5038, vivi_26365765
    die "Contextual $*SCOPE not found"
    box $P5040, "Contextual $*SCOPE not found"
    set $P5038, $P5040
  vivi_26365765:
    set $P5033, $P5038
  fallback5761:
    set $S5005, $P5033
    iseq $I5007, $S5005, "my"
    set $I5009, $I5007
  unless2630_end5755:
    set $I5012, $I5009
    if $I5009 goto unless2629_end5753 
    find_dynamic_lex $P5041, "$*SCOPE"
    unless_null $P5041, fallback5766
    nqp_get_sc_object $P5043, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5042, $P5043
    set fb_tmp_513, $P5042
    repr_defined $I5011, fb_tmp_513
    unless $I5011 goto if2637_else5767 
    set $P5044, fb_tmp_513["$SCOPE"]
    set $P5046, $P5044
    goto if2637_end5768
  if2637_else5767:
    null $P5045
    set $P5046, $P5045
  if2637_end5768:
    unless_null $P5046, vivi_26385769
    nqp_get_sc_object $P5047, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5046, $P5047
  vivi_26385769:
    unless_null $P5046, vivi_26395770
    die "Contextual $*SCOPE not found"
    box $P5048, "Contextual $*SCOPE not found"
    set $P5046, $P5048
  vivi_26395770:
    set $P5041, $P5046
  fallback5766:
    set $S5006, $P5041
    iseq $I5010, $S5006, "our"
    set $I5012, $I5010
  unless2629_end5753:
    unless $I5012 goto if2628_else5750 
.annotate 'line', 2395
    find_dynamic_lex $P5049, "$*MULTINESS"
    unless_null $P5049, fallback5773
    nqp_get_sc_object $P5051, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5050, $P5051
    set fb_tmp_514, $P5050
    repr_defined $I5014, fb_tmp_514
    unless $I5014 goto if2641_else5774 
    set $P5052, fb_tmp_514["$MULTINESS"]
    set $P5054, $P5052
    goto if2641_end5775
  if2641_else5774:
    null $P5053
    set $P5054, $P5053
  if2641_end5775:
    unless_null $P5054, vivi_26425776
    nqp_get_sc_object $P5055, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5054, $P5055
  vivi_26425776:
    unless_null $P5054, vivi_26435777
    die "Contextual $*MULTINESS not found"
    box $P5056, "Contextual $*MULTINESS not found"
    set $P5054, $P5056
  vivi_26435777:
    set $P5049, $P5054
  fallback5773:
    set $S5007, $P5049
    iseq $I5013, $S5007, "multi"
    unless $I5013 goto if2640_else5771 
    .const 'Sub' $P5057 = 'cuid_477_1365879995.227' 
    capture_lex $P5057
    $P5058 = $P5057()
    goto if2640_end5772
  if2640_else5771:
    find_dynamic_lex $P5059, "$*MULTINESS"
    unless_null $P5059, fallback5833
    nqp_get_sc_object $P5061, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5060, $P5061
    set fb_tmp_525, $P5060
    repr_defined $I5016, fb_tmp_525
    unless $I5016 goto if2675_else5834 
    set $P5062, fb_tmp_525["$MULTINESS"]
    set $P5064, $P5062
    goto if2675_end5835
  if2675_else5834:
    null $P5063
    set $P5064, $P5063
  if2675_end5835:
    unless_null $P5064, vivi_26765836
    nqp_get_sc_object $P5065, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5064, $P5065
  vivi_26765836:
    unless_null $P5064, vivi_26775837
    die "Contextual $*MULTINESS not found"
    box $P5066, "Contextual $*MULTINESS not found"
    set $P5064, $P5066
  vivi_26775837:
    set $P5059, $P5064
  fallback5833:
    set $S5008, $P5059
    iseq $I5015, $S5008, "proto"
    unless $I5015 goto if2674_else5831 
    .const 'Sub' $P5067 = 'cuid_479_1365879995.227' 
    capture_lex $P5067
    $P5068 = $P5067()
    set $P5071, $P5068
    goto if2674_end5832
  if2674_else5831:
    .const 'Sub' $P5069 = 'cuid_480_1365879995.227' 
    capture_lex $P5069
    $P5070 = $P5069()
    set $P5071, $P5070
  if2674_end5832:
  if2640_end5772:
.annotate 'line', 2486
    nqp_get_sc_object $P5072, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    set $S5010, $P101
    concat $S5009, "&", $S5010
    $P5073 = $P5072."new"($S5009 :named("name"), "lexical" :named("scope"))
    store_lex "$past", $P5073
    goto if2628_end5751
  if2628_else5750:
.annotate 'line', 2488
.annotate 'line', 2489
    find_lex $P5074, "$/"
    $P5075 = $P5074."CURSOR"()
    find_dynamic_lex $P5076, "$*SCOPE"
    unless_null $P5076, fallback5892
    nqp_get_sc_object $P5078, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5077, $P5078
    set fb_tmp_538, $P5077
    repr_defined $I5017, fb_tmp_538
    unless $I5017 goto if2711_else5893 
    set $P5079, fb_tmp_538["$SCOPE"]
    set $P5081, $P5079
    goto if2711_end5894
  if2711_else5893:
    null $P5080
    set $P5081, $P5080
  if2711_end5894:
    unless_null $P5081, vivi_27125895
    nqp_get_sc_object $P5082, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5081, $P5082
  vivi_27125895:
    unless_null $P5081, vivi_27135896
    die "Contextual $*SCOPE not found"
    box $P5083, "Contextual $*SCOPE not found"
    set $P5081, $P5083
  vivi_27135896:
    set $P5076, $P5081
  fallback5892:
    set $S5012, $P5076
    concat $S5011, $S5012, " scoped routines are not supported yet"
    $P5084 = $P5075."panic"($S5011)
  if2628_end5751:
    set $S5013, $P101
    iseq $I5018, $S5013, "MAIN"
    set $I5021, $I5018
    unless $I5018 goto if2715_end5900 
    find_dynamic_lex $P5085, "$*MULTINESS"
    unless_null $P5085, fallback5901
    nqp_get_sc_object $P5087, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5086, $P5087
    set fb_tmp_539, $P5086
    repr_defined $I5020, fb_tmp_539
    unless $I5020 goto if2716_else5902 
    set $P5088, fb_tmp_539["$MULTINESS"]
    set $P5090, $P5088
    goto if2716_end5903
  if2716_else5902:
    null $P5089
    set $P5090, $P5089
  if2716_end5903:
    unless_null $P5090, vivi_27175904
    nqp_get_sc_object $P5091, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5090, $P5091
  vivi_27175904:
    unless_null $P5090, vivi_27185905
    die "Contextual $*MULTINESS not found"
    box $P5092, "Contextual $*MULTINESS not found"
    set $P5090, $P5092
  vivi_27185905:
    set $P5085, $P5090
  fallback5901:
    set $S5014, $P5085
    isne $I5019, $S5014, "multi"
    set $I5021, $I5019
  if2715_end5900:
    box $P5095, $I5021
    set $P5094, $P5095
    unless $I5021 goto if2714_end5898 
.annotate 'line', 2493
    find_lex $P5093, "$block"
    store_dynamic_lex "$*MAIN_SUB", $P5093
    set $P5094, $P5093
  if2714_end5898:
    .return ($P5094) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_477_1365879995.227") :anon :lex :outer("cuid_478_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2396
    .const 'Sub' $P5062 = 'cuid_476_1365879995.227' 
    capture_lex $P5062 
    .lex "$proto", $P101 
    .lex "%sym", $P102 
    .lex "$code", $P103 
    .lex "$BLOCK", $P104 
    .local pmc fb_tmp_515 
    .local pmc fb_tmp_516 
    .local pmc fb_tmp_517 
    .local pmc fb_tmp_518 
    .local pmc fb_tmp_522 
    .local pmc fb_tmp_523 
    .local pmc fb_tmp_524 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    new $P5002, 'Hash'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P104, $P5004
    find_dynamic_lex $P5005, "$*SCOPE"
    unless_null $P5005, fallback5780
    nqp_get_sc_object $P5007, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5006, $P5007
    set fb_tmp_515, $P5006
    repr_defined $I5002, fb_tmp_515
    unless $I5002 goto if2645_else5781 
    set $P5008, fb_tmp_515["$SCOPE"]
    set $P5010, $P5008
    goto if2645_end5782
  if2645_else5781:
    null $P5009
    set $P5010, $P5009
  if2645_end5782:
    unless_null $P5010, vivi_26465783
    nqp_get_sc_object $P5011, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5010, $P5011
  vivi_26465783:
    unless_null $P5010, vivi_26475784
    die "Contextual $*SCOPE not found"
    box $P5012, "Contextual $*SCOPE not found"
    set $P5010, $P5012
  vivi_26475784:
    set $P5005, $P5010
  fallback5780:
    set $S5001, $P5005
    iseq $I5001, $S5001, "our"
    unless $I5001 goto if2644_end5779 
.annotate 'line', 2398
    box $P5013, "a multi can not be our-scoped"
    die $P5013
  if2644_end5779:
.annotate 'line', 2400
    find_dynamic_lex $P5014, "$*W"
    unless_null $P5014, fallback5785
    nqp_get_sc_object $P5016, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5015, $P5016
    set fb_tmp_516, $P5015
    repr_defined $I5003, fb_tmp_516
    unless $I5003 goto if2648_else5786 
    set $P5017, fb_tmp_516["$W"]
    set $P5019, $P5017
    goto if2648_end5787
  if2648_else5786:
    null $P5018
    set $P5019, $P5018
  if2648_end5787:
    unless_null $P5019, vivi_26495788
    nqp_get_sc_object $P5020, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5019, $P5020
  vivi_26495788:
    unless_null $P5019, vivi_26505789
    die "Contextual $*W not found"
    box $P5021, "Contextual $*W not found"
    set $P5019, $P5021
  vivi_26505789:
    set $P5014, $P5019
  fallback5785:
    $P5022 = $P5014."cur_lexpad"()
    find_lex $P5023, "$name"
    set $S5003, $P5023
    concat $S5002, "&", $S5003
    $P5024 = $P5022."symbol"($S5002)
    set $P102, $P5024
    set fb_tmp_517, $P102
    repr_defined $I5004, fb_tmp_517
    unless $I5004 goto if2652_else5792 
    set $P5025, fb_tmp_517["proto"]
    set $P5027, $P5025
    goto if2652_end5793
  if2652_else5792:
    null $P5026
    set $P5027, $P5026
  if2652_end5793:
    unless_null $P5027, vivi_26535794
    nqp_get_sc_object $P5028, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5027, $P5028
  vivi_26535794:
    unless $P5027 goto if2651_else5790 
.annotate 'line', 2401
    set fb_tmp_518, $P102
    repr_defined $I5005, fb_tmp_518
    unless $I5005 goto if2654_else5795 
    set $P5029, fb_tmp_518["value"]
    set $P5031, $P5029
    goto if2654_end5796
  if2654_else5795:
    null $P5030
    set $P5031, $P5030
  if2654_end5796:
    unless_null $P5031, vivi_26555797
    nqp_get_sc_object $P5032, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5031, $P5032
  vivi_26555797:
    set $P101, $P5031
    goto if2651_end5791
  if2651_else5790:
    .const 'Sub' $P5033 = 'cuid_476_1365879995.227' 
    capture_lex $P5033
    $P5034 = $P5033()
  if2651_end5791:
.annotate 'line', 2430
    find_dynamic_lex $P5035, "$*W"
    unless_null $P5035, fallback5818
    nqp_get_sc_object $P5037, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5036, $P5037
    set fb_tmp_522, $P5036
    repr_defined $I5006, fb_tmp_522
    unless $I5006 goto if2666_else5819 
    set $P5038, fb_tmp_522["$W"]
    set $P5040, $P5038
    goto if2666_end5820
  if2666_else5819:
    null $P5039
    set $P5040, $P5039
  if2666_end5820:
    unless_null $P5040, vivi_26675821
    nqp_get_sc_object $P5041, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5040, $P5041
  vivi_26675821:
    unless_null $P5040, vivi_26685822
    die "Contextual $*W not found"
    box $P5042, "Contextual $*W not found"
    set $P5040, $P5042
  vivi_26685822:
    set $P5035, $P5040
  fallback5818:
    find_lex $P5043, "$past"
    find_lex $P5044, "$name"
    $P5045 = $P5035."create_code"($P5043, $P5044, 0)
    set $P103, $P5045
.annotate 'line', 2431
    find_lex $P5046, "$past"
    "&attach_multi_signature"($P103, $P5046)
.annotate 'line', 2434
    $P101."add_dispatchee"($P103)
.annotate 'line', 2437
    find_dynamic_lex $P5047, "$*W"
    unless_null $P5047, fallback5823
    nqp_get_sc_object $P5049, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5048, $P5049
    set fb_tmp_523, $P5048
    repr_defined $I5007, fb_tmp_523
    unless $I5007 goto if2669_else5824 
    set $P5050, fb_tmp_523["$W"]
    set $P5052, $P5050
    goto if2669_end5825
  if2669_else5824:
    null $P5051
    set $P5052, $P5051
  if2669_end5825:
    unless_null $P5052, vivi_26705826
    nqp_get_sc_object $P5053, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5052, $P5053
  vivi_26705826:
    unless_null $P5052, vivi_26715827
    die "Contextual $*W not found"
    box $P5054, "Contextual $*W not found"
    set $P5052, $P5054
  vivi_26715827:
    set $P5047, $P5052
  fallback5823:
    $P5055 = $P5047."cur_lexpad"()
    set $P104, $P5055
.annotate 'line', 2438
    set fb_tmp_524, $P104
    repr_defined $I5008, fb_tmp_524
    unless $I5008 goto if2672_else5828 
    set $P5056, fb_tmp_524[0]
    set $P5058, $P5056
    goto if2672_end5829
  if2672_else5828:
    null $P5057
    set $P5058, $P5057
  if2672_end5829:
    unless_null $P5058, vivi_26735830
    nqp_get_sc_object $P5059, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5058, $P5059
  vivi_26735830:
    find_lex $P5060, "$past"
    $P5061 = $P5058."push"($P5060)
    .return ($P5061) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_476_1365879995.227") :anon :lex :outer("cuid_477_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2406
    .const 'Sub' $P5020 = 'cuid_475_1365879995.227' 
    capture_lex $P5020 
    .lex "$found_proto", $P101 
    .local pmc fb_tmp_519 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
.annotate 'line', 2409
    find_dynamic_lex $P5005, "$*W"
    unless_null $P5005, fallback5798
    nqp_get_sc_object $P5007, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5006, $P5007
    set fb_tmp_519, $P5006
    repr_defined $I5001, fb_tmp_519
    unless $I5001 goto if2656_else5799 
    set $P5008, fb_tmp_519["$W"]
    set $P5010, $P5008
    goto if2656_end5800
  if2656_else5799:
    null $P5009
    set $P5010, $P5009
  if2656_end5800:
    unless_null $P5010, vivi_26575801
    nqp_get_sc_object $P5011, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5010, $P5011
  vivi_26575801:
    unless_null $P5010, vivi_26585802
    die "Contextual $*W not found"
    box $P5012, "Contextual $*W not found"
    set $P5010, $P5012
  vivi_26585802:
    set $P5005, $P5010
  fallback5798:
    $P5013 = $P5005."get_legacy_block_list"()
    set $P5002, $P5013
    iter $P5004, $P5013
  for_next5813:
    unless $P5004, for_done5815
    shift $P5015, $P5004
  for_redo5814:
    .const 'Sub' $P5014 = 'cuid_475_1365879995.227' 
    capture_lex $P5014
    $P5002 = $P5014($P5015)
    goto for_next5813
  for_done5815:
    if $P101 goto unless2665_end5817 
.annotate 'line', 2421
.annotate 'line', 2422
    find_lex $P5016, "$/"
    $P5017 = $P5016."CURSOR"()
    $P5018 = $P5017."panic"("Sorry, no proto sub in scope, and auto-generation of protos is not yet implemented.")
  unless2665_end5817:
    box $P5019, "Dispatcher derivation NYI"
    die $P5019
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_475_1365879995.227") :anon :lex :outer("cuid_476_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2409
    .param pmc _lex_param_0 
    .lex "%sym", $P101 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_520 
    .local pmc fb_tmp_521 
    new $P5001, 'Hash'
    set $P101, $P5001
.annotate 'line', 2410
    find_lex $P5002, "$name"
    set $S5002, $P5002
    concat $S5001, "&", $S5002
    $P5003 = _lex_param_0."symbol"($S5001)
    set $P101, $P5003
    set fb_tmp_520, $P101
    repr_defined $I5001, fb_tmp_520
    unless $I5001 goto if2660_else5805 
    set $P5004, fb_tmp_520["proto"]
    set $P5006, $P5004
    goto if2660_end5806
  if2660_else5805:
    null $P5005
    set $P5006, $P5005
  if2660_end5806:
    unless_null $P5006, vivi_26615807
    nqp_get_sc_object $P5007, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5006, $P5007
  vivi_26615807:
    unless $P5006 goto if2659_else5803 
.annotate 'line', 2411
    set fb_tmp_521, $P101
    repr_defined $I5002, fb_tmp_521
    unless $I5002 goto if2662_else5808 
    set $P5008, fb_tmp_521["value"]
    set $P5010, $P5008
    goto if2662_end5809
  if2662_else5808:
    null $P5009
    set $P5010, $P5009
  if2662_end5809:
    unless_null $P5010, vivi_26635810
    nqp_get_sc_object $P5011, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5010, $P5011
  vivi_26635810:
    store_lex "$proto", $P5010
    box $P5012, 1
    store_lex "$found_proto", $P5012
    set $P5017, $P5012
    goto if2659_end5804
  if2659_else5803:
    set $P5016, $P101
    unless $P101 goto if2664_end5812 
.annotate 'line', 2415
.annotate 'line', 2416
    find_lex $P5013, "$/"
    $P5014 = $P5013."CURSOR"()
    $P5015 = $P5014."panic"("Cannot declare a multi when an only is already in scope.")
    set $P5016, $P5015
  if2664_end5812:
    set $P5017, $P5016
  if2659_end5804:
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_479_1365879995.227") :anon :lex :outer("cuid_478_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2440
    .lex "$code", $P101 
    .lex "$BLOCK", $P102 
    .local pmc fb_tmp_526 
    .local pmc fb_tmp_527 
    .local pmc fb_tmp_528 
    .local pmc fb_tmp_529 
    .local pmc fb_tmp_530 
    .local pmc fb_tmp_531 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
    find_dynamic_lex $P5003, "$*SCOPE"
    unless_null $P5003, fallback5840
    nqp_get_sc_object $P5005, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5004, $P5005
    set fb_tmp_526, $P5004
    repr_defined $I5002, fb_tmp_526
    unless $I5002 goto if2679_else5841 
    set $P5006, fb_tmp_526["$SCOPE"]
    set $P5008, $P5006
    goto if2679_end5842
  if2679_else5841:
    null $P5007
    set $P5008, $P5007
  if2679_end5842:
    unless_null $P5008, vivi_26805843
    nqp_get_sc_object $P5009, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5008, $P5009
  vivi_26805843:
    unless_null $P5008, vivi_26815844
    die "Contextual $*SCOPE not found"
    box $P5010, "Contextual $*SCOPE not found"
    set $P5008, $P5010
  vivi_26815844:
    set $P5003, $P5008
  fallback5840:
    set $S5001, $P5003
    iseq $I5001, $S5001, "our"
    unless $I5001 goto if2678_end5839 
.annotate 'line', 2444
    box $P5011, "our-scoped protos not yet implemented"
    die $P5011
  if2678_end5839:
.annotate 'line', 2445
    find_dynamic_lex $P5012, "$*W"
    unless_null $P5012, fallback5845
    nqp_get_sc_object $P5014, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5013, $P5014
    set fb_tmp_527, $P5013
    repr_defined $I5003, fb_tmp_527
    unless $I5003 goto if2682_else5846 
    set $P5015, fb_tmp_527["$W"]
    set $P5017, $P5015
    goto if2682_end5847
  if2682_else5846:
    null $P5016
    set $P5017, $P5016
  if2682_end5847:
    unless_null $P5017, vivi_26835848
    nqp_get_sc_object $P5018, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5017, $P5018
  vivi_26835848:
    unless_null $P5017, vivi_26845849
    die "Contextual $*W not found"
    box $P5019, "Contextual $*W not found"
    set $P5017, $P5019
  vivi_26845849:
    set $P5012, $P5017
  fallback5845:
    find_lex $P5020, "$past"
    find_lex $P5021, "$name"
    $P5022 = $P5012."create_code"($P5020, $P5021, 1)
    set $P101, $P5022
.annotate 'line', 2446
    find_dynamic_lex $P5023, "$*W"
    unless_null $P5023, fallback5850
    nqp_get_sc_object $P5025, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5024, $P5025
    set fb_tmp_528, $P5024
    repr_defined $I5004, fb_tmp_528
    unless $I5004 goto if2685_else5851 
    set $P5026, fb_tmp_528["$W"]
    set $P5028, $P5026
    goto if2685_end5852
  if2685_else5851:
    null $P5027
    set $P5028, $P5027
  if2685_end5852:
    unless_null $P5028, vivi_26865853
    nqp_get_sc_object $P5029, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5028, $P5029
  vivi_26865853:
    unless_null $P5028, vivi_26875854
    die "Contextual $*W not found"
    box $P5030, "Contextual $*W not found"
    set $P5028, $P5030
  vivi_26875854:
    set $P5023, $P5028
  fallback5850:
    $P5031 = $P5023."cur_lexpad"()
    set $P102, $P5031
.annotate 'line', 2447
    set fb_tmp_529, $P102
    repr_defined $I5005, fb_tmp_529
    unless $I5005 goto if2688_else5855 
    set $P5032, fb_tmp_529[0]
    set $P5034, $P5032
    goto if2688_end5856
  if2688_else5855:
    null $P5033
    set $P5034, $P5033
  if2688_end5856:
    unless_null $P5034, vivi_26895857
    nqp_get_sc_object $P5035, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5034, $P5035
  vivi_26895857:
    nqp_get_sc_object $P5036, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 2449
    nqp_get_sc_object $P5037, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    find_lex $P5038, "$name"
    set $S5003, $P5038
    concat $S5002, "&", $S5003
    $P5039 = $P5037."new"($S5002 :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    find_lex $P5040, "$past"
    $P5041 = $P5036."new"($P5039, $P5040, "bind" :named("op"))
    $P5034."push"($P5041)
.annotate 'line', 2452
    find_lex $P5042, "$name"
    set $S5005, $P5042
    concat $S5004, "&", $S5005
    $P102."symbol"($S5004, "lexical" :named("scope"), 1 :named("proto"), $P101 :named("value"))
.annotate 'line', 2456
    find_lex $P5043, "$block"
    set fb_tmp_530, $P5043
    repr_defined $I5006, fb_tmp_530
    unless $I5006 goto if2690_else5858 
    set $P5044, fb_tmp_530[0]
    set $P5046, $P5044
    goto if2690_end5859
  if2690_else5858:
    null $P5045
    set $P5046, $P5045
  if2690_end5859:
    unless_null $P5046, vivi_26915860
    nqp_get_sc_object $P5047, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5046, $P5047
  vivi_26915860:
    nqp_get_sc_object $P5048, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 2458
    nqp_get_sc_object $P5049, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5050 = $P5049."new"("CURRENT_DISPATCH_CAPTURE" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2459
    nqp_get_sc_object $P5051, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    $P5052 = $P5051."new"("savecapture" :named("op"))
    $P5053 = $P5048."new"($P5050, $P5052, "bind" :named("op"))
    $P5046."push"($P5053)
.annotate 'line', 2461
    find_lex $P5054, "$block"
    set fb_tmp_531, $P5054
    repr_defined $I5007, fb_tmp_531
    unless $I5007 goto if2692_else5861 
    set $P5055, fb_tmp_531[0]
    set $P5057, $P5055
    goto if2692_end5862
  if2692_else5861:
    null $P5056
    set $P5057, $P5056
  if2692_end5862:
    unless_null $P5057, vivi_26935863
    nqp_get_sc_object $P5058, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5057, $P5058
  vivi_26935863:
    nqp_get_sc_object $P5059, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 2463
    nqp_get_sc_object $P5060, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5061 = $P5060."new"("&*CURRENT_DISPATCHER" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2464
    nqp_get_sc_object $P5062, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    nqp_get_sc_object $P5063, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    $P5064 = $P5063."new"("curcode" :named("op"))
    $P5065 = $P5062."new"($P5064, "getcodeobj" :named("op"))
    $P5066 = $P5059."new"($P5061, $P5065, "bind" :named("op"))
    $P5067 = $P5057."push"($P5066)
    .return ($P5067) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_480_1365879995.227") :anon :lex :outer("cuid_478_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2467
    .lex "$BLOCK", $P101 
    .local pmc fb_tmp_532 
    .local pmc fb_tmp_533 
    .local pmc fb_tmp_534 
    .local pmc fb_tmp_535 
    .local pmc fb_tmp_536 
    .local pmc fb_tmp_537 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
.annotate 'line', 2468
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback5864
    nqp_get_sc_object $P5004, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5003, $P5004
    set fb_tmp_532, $P5003
    repr_defined $I5001, fb_tmp_532
    unless $I5001 goto if2694_else5865 
    set $P5005, fb_tmp_532["$W"]
    set $P5007, $P5005
    goto if2694_end5866
  if2694_else5865:
    null $P5006
    set $P5007, $P5006
  if2694_end5866:
    unless_null $P5007, vivi_26955867
    nqp_get_sc_object $P5008, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5007, $P5008
  vivi_26955867:
    unless_null $P5007, vivi_26965868
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_26965868:
    set $P5002, $P5007
  fallback5864:
    $P5010 = $P5002."cur_lexpad"()
    set $P101, $P5010
.annotate 'line', 2469
    set fb_tmp_533, $P101
    repr_defined $I5002, fb_tmp_533
    unless $I5002 goto if2697_else5869 
    set $P5011, fb_tmp_533[0]
    set $P5013, $P5011
    goto if2697_end5870
  if2697_else5869:
    null $P5012
    set $P5013, $P5012
  if2697_end5870:
    unless_null $P5013, vivi_26985871
    nqp_get_sc_object $P5014, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5013, $P5014
  vivi_26985871:
    nqp_get_sc_object $P5015, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 2471
    nqp_get_sc_object $P5016, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    find_lex $P5017, "$name"
    set $S5002, $P5017
    concat $S5001, "&", $S5002
    $P5018 = $P5016."new"($S5001 :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    find_lex $P5019, "$past"
    $P5020 = $P5015."new"($P5018, $P5019, "bind" :named("op"))
    $P5013."push"($P5020)
.annotate 'line', 2474
    find_lex $P5021, "$name"
    set $S5004, $P5021
    concat $S5003, "&", $S5004
    $P101."symbol"($S5003, "lexical" :named("scope"))
    find_dynamic_lex $P5022, "$*SCOPE"
    unless_null $P5022, fallback5874
    nqp_get_sc_object $P5024, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5023, $P5024
    set fb_tmp_534, $P5023
    repr_defined $I5004, fb_tmp_534
    unless $I5004 goto if2700_else5875 
    set $P5025, fb_tmp_534["$SCOPE"]
    set $P5027, $P5025
    goto if2700_end5876
  if2700_else5875:
    null $P5026
    set $P5027, $P5026
  if2700_end5876:
    unless_null $P5027, vivi_27015877
    nqp_get_sc_object $P5028, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5027, $P5028
  vivi_27015877:
    unless_null $P5027, vivi_27025878
    die "Contextual $*SCOPE not found"
    box $P5029, "Contextual $*SCOPE not found"
    set $P5027, $P5029
  vivi_27025878:
    set $P5022, $P5027
  fallback5874:
    set $S5005, $P5022
    iseq $I5003, $S5005, "our"
    box $P5063, $I5003
    set $P5062, $P5063
    unless $I5003 goto if2699_end5873 
.annotate 'line', 2475
.annotate 'line', 2478
    find_dynamic_lex $P5030, "$*W"
    unless_null $P5030, fallback5879
    nqp_get_sc_object $P5032, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5031, $P5032
    set fb_tmp_535, $P5031
    repr_defined $I5005, fb_tmp_535
    unless $I5005 goto if2703_else5880 
    set $P5033, fb_tmp_535["$W"]
    set $P5035, $P5033
    goto if2703_end5881
  if2703_else5880:
    null $P5034
    set $P5035, $P5034
  if2703_end5881:
    unless_null $P5035, vivi_27045882
    nqp_get_sc_object $P5036, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5035, $P5036
  vivi_27045882:
    unless_null $P5035, vivi_27055883
    die "Contextual $*W not found"
    box $P5037, "Contextual $*W not found"
    set $P5035, $P5037
  vivi_27055883:
    set $P5030, $P5035
  fallback5879:
    find_dynamic_lex $P5038, "$*PACKAGE"
    unless_null $P5038, fallback5884
    nqp_get_sc_object $P5040, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5039, $P5040
    set fb_tmp_536, $P5039
    repr_defined $I5006, fb_tmp_536
    unless $I5006 goto if2706_else5885 
    set $P5041, fb_tmp_536["$PACKAGE"]
    set $P5043, $P5041
    goto if2706_end5886
  if2706_else5885:
    null $P5042
    set $P5043, $P5042
  if2706_end5886:
    unless_null $P5043, vivi_27075887
    nqp_get_sc_object $P5044, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5043, $P5044
  vivi_27075887:
    unless_null $P5043, vivi_27085888
    die "Contextual $*PACKAGE not found"
    box $P5045, "Contextual $*PACKAGE not found"
    set $P5043, $P5045
  vivi_27085888:
    set $P5038, $P5043
  fallback5884:
    find_lex $P5046, "$name"
    find_lex $P5047, "$past"
    $P5030."install_package_routine"($P5038, $P5046, $P5047)
.annotate 'line', 2479
    set fb_tmp_537, $P101
    repr_defined $I5007, fb_tmp_537
    unless $I5007 goto if2709_else5889 
    set $P5048, fb_tmp_537[0]
    set $P5050, $P5048
    goto if2709_end5890
  if2709_else5889:
    null $P5049
    set $P5050, $P5049
  if2709_end5890:
    unless_null $P5050, vivi_27105891
    nqp_get_sc_object $P5051, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5050, $P5051
  vivi_27105891:
    nqp_get_sc_object $P5052, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 2481
    new $P5053, 'QRPA'
    find_lex $P5054, "$name"
    push $P5053, $P5054
    find_lex $P5055, "$/"
    $P5056 = "&lexical_package_lookup"($P5053, $P5055)
.annotate 'line', 2482
    nqp_get_sc_object $P5057, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    find_lex $P5058, "$name"
    set $S5007, $P5058
    concat $S5006, "&", $S5007
    $P5059 = $P5057."new"($S5006 :named("name"), "lexical" :named("scope"))
    $P5060 = $P5052."new"($P5056, $P5059, "bind" :named("op"))
    $P5061 = $P5050."push"($P5060)
    set $P5062, $P5061
  if2699_end5873:
    .return ($P5062) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_481_1365879995.227") :anon :lex :outer("cuid_308_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2510
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5002, "$/"
    $P5001 = _lex_param_0."ast"()
    $P5003 = $P5001($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "method_def" :subid("cuid_309_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2514
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5117 = 'cuid_482_1365879995.227' 
    capture_lex $P5117 
    .const 'Sub' $P5117 = 'cuid_483_1365879995.227' 
    capture_lex $P5117 
    .lex "$past", $P101 
    .lex "$name", $P102 
    .lex "$lexpast", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_544 
    .local pmc fb_tmp_545 
    .local pmc fb_tmp_546 
    .local pmc fb_tmp_547 
    .local pmc fb_tmp_548 
    .local pmc fb_tmp_549 
    .local pmc fb_tmp_550 
    .local pmc fb_tmp_551 
    .local pmc fb_tmp_552 
    .local pmc fb_tmp_553 
    .local pmc fb_tmp_554 
    .local pmc fb_tmp_555 
    .local pmc fb_tmp_556 
    .local pmc fb_tmp_557 
    .local pmc fb_tmp_569 
    .local pmc fb_tmp_570 
    .local pmc fb_tmp_571 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P103, $P5003
    unless_null _lex_param_1, fallback5935
    nqp_get_sc_object $P5004, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5004
  fallback5935:
    set fb_tmp_544, _lex_param_1
    repr_defined $I5001, fb_tmp_544
    unless $I5001 goto if2732_else5933 
    set $P5005, fb_tmp_544["onlystar"]
    set $P5007, $P5005
    goto if2732_end5934
  if2732_else5933:
    null $P5006
    set $P5007, $P5006
  if2732_end5934:
    unless_null $P5007, vivi_27335936
    nqp_get_sc_object $P5008, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5007, $P5008
  vivi_27335936:
    unless $P5007 goto if2731_else5931 
.annotate 'line', 2518
.annotate 'line', 2519
    $P5009 = "&only_star_block"()
    set $P101, $P5009
    goto if2731_end5932
  if2731_else5931:
.annotate 'line', 2521
.annotate 'line', 2522
    unless_null _lex_param_1, fallback5939
    nqp_get_sc_object $P5010, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5010
  fallback5939:
    set fb_tmp_545, _lex_param_1
    repr_defined $I5002, fb_tmp_545
    unless $I5002 goto if2734_else5937 
    set $P5011, fb_tmp_545["blockoid"]
    set $P5013, $P5011
    goto if2734_end5938
  if2734_else5937:
    null $P5012
    set $P5013, $P5012
  if2734_end5938:
    unless_null $P5013, vivi_27355940
    nqp_get_sc_object $P5014, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5013, $P5014
  vivi_27355940:
    $P5015 = $P5013."ast"()
    set $P101, $P5015
.annotate 'line', 2523
    $P101."blocktype"("declaration")
    find_dynamic_lex $P5016, "$*RETURN_USED"
    unless_null $P5016, fallback5943
    nqp_get_sc_object $P5018, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5017, $P5018
    set fb_tmp_546, $P5017
    repr_defined $I5003, fb_tmp_546
    unless $I5003 goto if2737_else5944 
    set $P5019, fb_tmp_546["$RETURN_USED"]
    set $P5021, $P5019
    goto if2737_end5945
  if2737_else5944:
    null $P5020
    set $P5021, $P5020
  if2737_end5945:
    unless_null $P5021, vivi_27385946
    nqp_get_sc_object $P5022, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5021, $P5022
  vivi_27385946:
    unless_null $P5021, vivi_27395947
    die "Contextual $*RETURN_USED not found"
    box $P5023, "Contextual $*RETURN_USED not found"
    set $P5021, $P5023
  vivi_27395947:
    set $P5016, $P5021
  fallback5943:
    set $P5029, $P5016
    unless $P5016 goto if2736_end5942 
.annotate 'line', 2524
.annotate 'line', 2525
    set fb_tmp_547, $P101
    repr_defined $I5004, fb_tmp_547
    unless $I5004 goto if2740_else5948 
    set $P5024, fb_tmp_547[1]
    set $P5026, $P5024
    goto if2740_end5949
  if2740_else5948:
    null $P5025
    set $P5026, $P5025
  if2740_end5949:
    unless_null $P5026, vivi_27415950
    nqp_get_sc_object $P5027, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5026, $P5027
  vivi_27415950:
    $P5028 = "&wrap_return_handler"($P5026)
    set $P101[1], $P5028
    set $P5029, $P5028
  if2736_end5942:
  if2731_end5932:
    set fb_tmp_548, $P101
    repr_defined $I5005, fb_tmp_548
    unless $I5005 goto if2743_else5953 
    set $P5030, fb_tmp_548["signature_has_invocant"]
    set $P5032, $P5030
    goto if2743_end5954
  if2743_else5953:
    null $P5031
    set $P5032, $P5031
  if2743_end5954:
    unless_null $P5032, vivi_27445955
    nqp_get_sc_object $P5033, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5032, $P5033
  vivi_27445955:
    if $P5032 goto unless2742_end5952 
.annotate 'line', 2530
.annotate 'line', 2531
    set fb_tmp_549, $P101
    repr_defined $I5006, fb_tmp_549
    unless $I5006 goto if2745_else5956 
    set $P5034, fb_tmp_549[0]
    set $P5036, $P5034
    goto if2745_end5957
  if2745_else5956:
    null $P5035
    set $P5036, $P5035
  if2745_end5957:
    unless_null $P5036, vivi_27465958
    nqp_get_sc_object $P5037, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5036, $P5037
  vivi_27465958:
    nqp_get_sc_object $P5038, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    find_dynamic_lex $P5039, "$*PACKAGE"
    unless_null $P5039, fallback5959
    nqp_get_sc_object $P5041, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5040, $P5041
    set fb_tmp_550, $P5040
    repr_defined $I5007, fb_tmp_550
    unless $I5007 goto if2747_else5960 
    set $P5042, fb_tmp_550["$PACKAGE"]
    set $P5044, $P5042
    goto if2747_end5961
  if2747_else5960:
    null $P5043
    set $P5044, $P5043
  if2747_end5961:
    unless_null $P5044, vivi_27485962
    nqp_get_sc_object $P5045, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5044, $P5045
  vivi_27485962:
    unless_null $P5044, vivi_27495963
    die "Contextual $*PACKAGE not found"
    box $P5046, "Contextual $*PACKAGE not found"
    set $P5044, $P5046
  vivi_27495963:
    set $P5039, $P5044
  fallback5959:
    $P5047 = $P5038."new"("self" :named("name"), "lexical" :named("scope"), "param" :named("decl"), $P5039 :named("returns"))
    $P5048 = $P5036."unshift"($P5047)
  unless2742_end5952:
.annotate 'line', 2536
    $P101."symbol"("self", "lexical" :named("scope"))
    box $P5049, ""
    set $P102, $P5049
    unless_null _lex_param_1, fallback5968
    nqp_get_sc_object $P5050, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5050
  fallback5968:
    set fb_tmp_551, _lex_param_1
    repr_defined $I5008, fb_tmp_551
    unless $I5008 goto if2751_else5966 
    set $P5051, fb_tmp_551["deflongname"]
    set $P5053, $P5051
    goto if2751_end5967
  if2751_else5966:
    null $P5052
    set $P5053, $P5052
  if2751_end5967:
    unless_null $P5053, vivi_27525969
    nqp_get_sc_object $P5054, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5053, $P5054
  vivi_27525969:
    unless $P5053 goto if2750_else5964 
.annotate 'line', 2540
    unless_null _lex_param_1, fallback5972
    nqp_get_sc_object $P5055, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5055
  fallback5972:
    set fb_tmp_552, _lex_param_1
    repr_defined $I5009, fb_tmp_552
    unless $I5009 goto if2753_else5970 
    set $P5056, fb_tmp_552["private"]
    set $P5058, $P5056
    goto if2753_end5971
  if2753_else5970:
    null $P5057
    set $P5058, $P5057
  if2753_end5971:
    unless_null $P5058, vivi_27545973
    nqp_get_sc_object $P5059, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5058, $P5059
  vivi_27545973:
    set $S5002, $P5058
.annotate 'line', 2541
    unless_null _lex_param_1, fallback5978
    nqp_get_sc_object $P5060, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5060
  fallback5978:
    set fb_tmp_554, _lex_param_1
    repr_defined $I5011, fb_tmp_554
    unless $I5011 goto if2756_else5976 
    set $P5061, fb_tmp_554["deflongname"]
    set $P5063, $P5061
    goto if2756_end5977
  if2756_else5976:
    null $P5062
    set $P5063, $P5062
  if2756_end5977:
    unless_null $P5063, vivi_27575979
    nqp_get_sc_object $P5064, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5063, $P5064
  vivi_27575979:
    set fb_tmp_553, $P5063
    repr_defined $I5010, fb_tmp_553
    unless $I5010 goto if2755_else5974 
    set $P5065, fb_tmp_553[0]
    set $P5067, $P5065
    goto if2755_end5975
  if2755_else5974:
    null $P5066
    set $P5067, $P5066
  if2755_end5975:
    unless_null $P5067, vivi_27585980
    nqp_get_sc_object $P5068, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5067, $P5068
  vivi_27585980:
    $P5069 = $P5067."ast"()
    set $S5003, $P5069
    concat $S5001, $S5002, $S5003
    box $P5070, $S5001
    set $P102, $P5070
    goto if2750_end5965
  if2750_else5964:
    unless_null _lex_param_1, fallback5985
    nqp_get_sc_object $P5071, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5071
  fallback5985:
    set fb_tmp_555, _lex_param_1
    repr_defined $I5012, fb_tmp_555
    unless $I5012 goto if2760_else5983 
    set $P5072, fb_tmp_555["latename"]
    set $P5074, $P5072
    goto if2760_end5984
  if2760_else5983:
    null $P5073
    set $P5074, $P5073
  if2760_end5984:
    unless_null $P5074, vivi_27615986
    nqp_get_sc_object $P5075, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5074, $P5075
  vivi_27615986:
    set $P5092, $P5074
    unless $P5074 goto if2759_end5982 
.annotate 'line', 2543
    find_dynamic_lex $P5076, "$*PKGDECL"
    unless_null $P5076, fallback5989
    nqp_get_sc_object $P5078, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5077, $P5078
    set fb_tmp_556, $P5077
    repr_defined $I5014, fb_tmp_556
    unless $I5014 goto if2763_else5990 
    set $P5079, fb_tmp_556["$PKGDECL"]
    set $P5081, $P5079
    goto if2763_end5991
  if2763_else5990:
    null $P5080
    set $P5081, $P5080
  if2763_end5991:
    unless_null $P5081, vivi_27645992
    nqp_get_sc_object $P5082, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5081, $P5082
  vivi_27645992:
    unless_null $P5081, vivi_27655993
    die "Contextual $*PKGDECL not found"
    box $P5083, "Contextual $*PKGDECL not found"
    set $P5081, $P5083
  vivi_27655993:
    set $P5076, $P5081
  fallback5989:
    set $S5004, $P5076
    isne $I5013, $S5004, "role"
    unless $I5013 goto if2762_end5988 
.annotate 'line', 2544
.annotate 'line', 2545
    $P5084 = _lex_param_1."CURSOR"()
    $P5085 = $P5084."panic"("Late-bound method name only valid in role")
  if2762_end5988:
    unless_null _lex_param_1, fallback5996
    nqp_get_sc_object $P5086, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5086
  fallback5996:
    set fb_tmp_557, _lex_param_1
    repr_defined $I5015, fb_tmp_557
    unless $I5015 goto if2766_else5994 
    set $P5087, fb_tmp_557["latename"]
    set $P5089, $P5087
    goto if2766_end5995
  if2766_else5994:
    null $P5088
    set $P5089, $P5088
  if2766_end5995:
    unless_null $P5089, vivi_27675997
    nqp_get_sc_object $P5090, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5089, $P5090
  vivi_27675997:
    set $S5006, $P5089
    concat $S5005, "!!LATENAME!!", $S5006
    box $P5091, $S5005
    set $P102, $P5091
    set $P5092, $P102
  if2759_end5982:
  if2750_end5965:
    set $S5007, $P102
    isne $I5016, $S5007, ""
    unless $I5016 goto if2768_end5999 
    .const 'Sub' $P5093 = 'cuid_482_1365879995.227' 
    capture_lex $P5093
    $P5094 = $P5093()
  if2768_end5999:
.annotate 'line', 2583
    nqp_get_sc_object $P5095, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    $P5096 = $P5095."new"($P101, "takeclosure" :named("op"))
    set $P103, $P5096
    set $P103["sink"], $P101
    set $P103["block_past"], $P101
    set fb_tmp_569, $P101
    repr_defined $I5017, fb_tmp_569
    unless $I5017 goto if2804_else6059 
    set $P5097, fb_tmp_569["code_obj"]
    set $P5099, $P5097
    goto if2804_end6060
  if2804_else6059:
    null $P5098
    set $P5099, $P5098
  if2804_end6060:
    unless_null $P5099, vivi_28056061
    nqp_get_sc_object $P5100, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5099, $P5100
  vivi_28056061:
    set $P103["code_obj"], $P5099
.annotate 'line', 2587
    _lex_param_1."!make"($P103)
    unless_null _lex_param_1, fallback6066
    nqp_get_sc_object $P5101, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5101
  fallback6066:
    set fb_tmp_570, _lex_param_1
    repr_defined $I5018, fb_tmp_570
    unless $I5018 goto if2807_else6064 
    set $P5102, fb_tmp_570["trait"]
    set $P5104, $P5102
    goto if2807_end6065
  if2807_else6064:
    null $P5103
    set $P5104, $P5103
  if2807_end6065:
    unless_null $P5104, vivi_28086067
    nqp_get_sc_object $P5105, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5104, $P5105
  vivi_28086067:
    set $P5116, $P5104
    unless $P5104 goto if2806_end6063 
.annotate 'line', 2588
    unless_null _lex_param_1, fallback6070
    nqp_get_sc_object $P5109, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5109
  fallback6070:
    set fb_tmp_571, _lex_param_1
    repr_defined $I5019, fb_tmp_571
    unless $I5019 goto if2809_else6068 
    set $P5110, fb_tmp_571["trait"]
    set $P5112, $P5110
    goto if2809_end6069
  if2809_else6068:
    null $P5111
    set $P5112, $P5111
  if2809_end6069:
    unless_null $P5112, vivi_28106071
    nqp_get_sc_object $P5113, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5112, $P5113
  vivi_28106071:
    set $P5106, $P5112
    iter $P5108, $P5112
  for_next6072:
    unless $P5108, for_done6074
    shift $P5115, $P5108
  for_redo6073:
    .const 'Sub' $P5114 = 'cuid_483_1365879995.227' 
    capture_lex $P5114
    $P5106 = $P5114($P5115)
    goto for_next6072
  for_done6074:
    set $P5116, $P5106
  if2806_end6063:
    .return ($P5116) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_482_1365879995.227") :anon :lex :outer("cuid_309_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2549
    .lex "$meta_meth", $P101 
    .lex "$is_dispatcher", $P102 
    .lex "$code", $P103 
    .local pmc fb_tmp_558 
    .local pmc fb_tmp_559 
    .local pmc fb_tmp_560 
    .local pmc fb_tmp_561 
    .local pmc fb_tmp_562 
    .local pmc fb_tmp_563 
    .local pmc fb_tmp_564 
    .local pmc fb_tmp_565 
    .local pmc fb_tmp_566 
    .local pmc fb_tmp_567 
    .local pmc fb_tmp_568 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P103, $P5003
.annotate 'line', 2551
    find_lex $P5004, "$past"
    find_lex $P5005, "$name"
    $P5004."name"($P5005)
    find_dynamic_lex $P5006, "$*MULTINESS"
    unless_null $P5006, fallback6002
    nqp_get_sc_object $P5008, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5007, $P5008
    set fb_tmp_558, $P5007
    repr_defined $I5002, fb_tmp_558
    unless $I5002 goto if2770_else6003 
    set $P5009, fb_tmp_558["$MULTINESS"]
    set $P5011, $P5009
    goto if2770_end6004
  if2770_else6003:
    null $P5010
    set $P5011, $P5010
  if2770_end6004:
    unless_null $P5011, vivi_27716005
    nqp_get_sc_object $P5012, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5011, $P5012
  vivi_27716005:
    unless_null $P5011, vivi_27726006
    die "Contextual $*MULTINESS not found"
    box $P5013, "Contextual $*MULTINESS not found"
    set $P5011, $P5013
  vivi_27726006:
    set $P5006, $P5011
  fallback6002:
    set $S5001, $P5006
    iseq $I5001, $S5001, "multi"
    unless $I5001 goto if2769_else6000 
    set $S5002, "add_multi_method"
    goto if2769_end6001
  if2769_else6000:
    set $S5002, "add_method"
  if2769_end6001:
    box $P5014, $S5002
    set $P101, $P5014
    find_dynamic_lex $P5015, "$*MULTINESS"
    unless_null $P5015, fallback6007
    nqp_get_sc_object $P5017, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5016, $P5017
    set fb_tmp_559, $P5016
    repr_defined $I5004, fb_tmp_559
    unless $I5004 goto if2773_else6008 
    set $P5018, fb_tmp_559["$MULTINESS"]
    set $P5020, $P5018
    goto if2773_end6009
  if2773_else6008:
    null $P5019
    set $P5020, $P5019
  if2773_end6009:
    unless_null $P5020, vivi_27746010
    nqp_get_sc_object $P5021, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5020, $P5021
  vivi_27746010:
    unless_null $P5020, vivi_27756011
    die "Contextual $*MULTINESS not found"
    box $P5022, "Contextual $*MULTINESS not found"
    set $P5020, $P5022
  vivi_27756011:
    set $P5015, $P5020
  fallback6007:
    set $S5003, $P5015
    iseq $I5003, $S5003, "proto"
    box $P5023, $I5003
    set $P102, $P5023
.annotate 'line', 2556
    find_dynamic_lex $P5024, "$*W"
    unless_null $P5024, fallback6012
    nqp_get_sc_object $P5026, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5025, $P5026
    set fb_tmp_560, $P5025
    repr_defined $I5005, fb_tmp_560
    unless $I5005 goto if2776_else6013 
    set $P5027, fb_tmp_560["$W"]
    set $P5029, $P5027
    goto if2776_end6014
  if2776_else6013:
    null $P5028
    set $P5029, $P5028
  if2776_end6014:
    unless_null $P5029, vivi_27776015
    nqp_get_sc_object $P5030, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5029, $P5030
  vivi_27776015:
    unless_null $P5029, vivi_27786016
    die "Contextual $*W not found"
    box $P5031, "Contextual $*W not found"
    set $P5029, $P5031
  vivi_27786016:
    set $P5024, $P5029
  fallback6012:
    find_lex $P5032, "$past"
    find_lex $P5033, "$name"
    $P5034 = $P5024."create_code"($P5032, $P5033, $P102)
    set $P103, $P5034
    find_dynamic_lex $P5035, "$*MULTINESS"
    unless_null $P5035, fallback6019
    nqp_get_sc_object $P5037, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5036, $P5037
    set fb_tmp_561, $P5036
    repr_defined $I5007, fb_tmp_561
    unless $I5007 goto if2780_else6020 
    set $P5038, fb_tmp_561["$MULTINESS"]
    set $P5040, $P5038
    goto if2780_end6021
  if2780_else6020:
    null $P5039
    set $P5040, $P5039
  if2780_end6021:
    unless_null $P5040, vivi_27816022
    nqp_get_sc_object $P5041, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5040, $P5041
  vivi_27816022:
    unless_null $P5040, vivi_27826023
    die "Contextual $*MULTINESS not found"
    box $P5042, "Contextual $*MULTINESS not found"
    set $P5040, $P5042
  vivi_27826023:
    set $P5035, $P5040
  fallback6019:
    set $S5004, $P5035
    iseq $I5006, $S5004, "multi"
    unless $I5006 goto if2779_end6018 
.annotate 'line', 2557
    find_lex $P5043, "$past"
    $P5044 = "&attach_multi_signature"($P103, $P5043)
  if2779_end6018:
.annotate 'line', 2558
    find_dynamic_lex $P5045, "$*W"
    unless_null $P5045, fallback6024
    nqp_get_sc_object $P5047, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5046, $P5047
    set fb_tmp_562, $P5046
    repr_defined $I5008, fb_tmp_562
    unless $I5008 goto if2783_else6025 
    set $P5048, fb_tmp_562["$W"]
    set $P5050, $P5048
    goto if2783_end6026
  if2783_else6025:
    null $P5049
    set $P5050, $P5049
  if2783_end6026:
    unless_null $P5050, vivi_27846027
    nqp_get_sc_object $P5051, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5050, $P5051
  vivi_27846027:
    unless_null $P5050, vivi_27856028
    die "Contextual $*W not found"
    box $P5052, "Contextual $*W not found"
    set $P5050, $P5052
  vivi_27856028:
    set $P5045, $P5050
  fallback6024:
    find_dynamic_lex $P5053, "$*PACKAGE"
    unless_null $P5053, fallback6029
    nqp_get_sc_object $P5055, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5054, $P5055
    set fb_tmp_563, $P5054
    repr_defined $I5009, fb_tmp_563
    unless $I5009 goto if2786_else6030 
    set $P5056, fb_tmp_563["$PACKAGE"]
    set $P5058, $P5056
    goto if2786_end6031
  if2786_else6030:
    null $P5057
    set $P5058, $P5057
  if2786_end6031:
    unless_null $P5058, vivi_27876032
    nqp_get_sc_object $P5059, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5058, $P5059
  vivi_27876032:
    unless_null $P5058, vivi_27886033
    die "Contextual $*PACKAGE not found"
    box $P5060, "Contextual $*PACKAGE not found"
    set $P5058, $P5060
  vivi_27886033:
    set $P5053, $P5058
  fallback6029:
    find_lex $P5061, "$name"
    $P5045."pkg_add_method"($P5053, $P101, $P5061, $P103)
    find_lex $P5062, "$past"
    set $P5062["code_obj"], $P103
    find_dynamic_lex $P5063, "$*SCOPE"
    unless_null $P5063, fallback6036
    nqp_get_sc_object $P5065, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5064, $P5065
    set fb_tmp_564, $P5064
    repr_defined $I5011, fb_tmp_564
    unless $I5011 goto if2790_else6037 
    set $P5066, fb_tmp_564["$SCOPE"]
    set $P5068, $P5066
    goto if2790_end6038
  if2790_else6037:
    null $P5067
    set $P5068, $P5067
  if2790_end6038:
    unless_null $P5068, vivi_27916039
    nqp_get_sc_object $P5069, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5068, $P5069
  vivi_27916039:
    unless_null $P5068, vivi_27926040
    die "Contextual $*SCOPE not found"
    box $P5070, "Contextual $*SCOPE not found"
    set $P5068, $P5070
  vivi_27926040:
    set $P5063, $P5068
  fallback6036:
    set $S5005, $P5063
    iseq $I5010, $S5005, "our"
    unless $I5010 goto if2789_end6035 
.annotate 'line', 2562
.annotate 'line', 2563
    find_dynamic_lex $P5071, "$*W"
    unless_null $P5071, fallback6041
    nqp_get_sc_object $P5073, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5072, $P5073
    set fb_tmp_565, $P5072
    repr_defined $I5012, fb_tmp_565
    unless $I5012 goto if2793_else6042 
    set $P5074, fb_tmp_565["$W"]
    set $P5076, $P5074
    goto if2793_end6043
  if2793_else6042:
    null $P5075
    set $P5076, $P5075
  if2793_end6043:
    unless_null $P5076, vivi_27946044
    nqp_get_sc_object $P5077, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5076, $P5077
  vivi_27946044:
    unless_null $P5076, vivi_27956045
    die "Contextual $*W not found"
    box $P5078, "Contextual $*W not found"
    set $P5076, $P5078
  vivi_27956045:
    set $P5071, $P5076
  fallback6041:
    find_dynamic_lex $P5079, "$*PACKAGE"
    unless_null $P5079, fallback6046
    nqp_get_sc_object $P5081, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5080, $P5081
    set fb_tmp_566, $P5080
    repr_defined $I5013, fb_tmp_566
    unless $I5013 goto if2796_else6047 
    set $P5082, fb_tmp_566["$PACKAGE"]
    set $P5084, $P5082
    goto if2796_end6048
  if2796_else6047:
    null $P5083
    set $P5084, $P5083
  if2796_end6048:
    unless_null $P5084, vivi_27976049
    nqp_get_sc_object $P5085, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5084, $P5085
  vivi_27976049:
    unless_null $P5084, vivi_27986050
    die "Contextual $*PACKAGE not found"
    box $P5086, "Contextual $*PACKAGE not found"
    set $P5084, $P5086
  vivi_27986050:
    set $P5079, $P5084
  fallback6046:
    find_lex $P5087, "$name"
    find_lex $P5088, "$past"
    $P5089 = $P5071."install_package_routine"($P5079, $P5087, $P5088)
  if2789_end6035:
    set $P5115, $P102
    unless $P102 goto if2799_end6052 
.annotate 'line', 2568
.annotate 'line', 2569
    find_lex $P5090, "$past"
    set fb_tmp_567, $P5090
    repr_defined $I5014, fb_tmp_567
    unless $I5014 goto if2800_else6053 
    set $P5091, fb_tmp_567[0]
    set $P5093, $P5091
    goto if2800_end6054
  if2800_else6053:
    null $P5092
    set $P5093, $P5092
  if2800_end6054:
    unless_null $P5093, vivi_28016055
    nqp_get_sc_object $P5094, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5093, $P5094
  vivi_28016055:
    nqp_get_sc_object $P5095, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 2571
    nqp_get_sc_object $P5096, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5097 = $P5096."new"("CURRENT_DISPATCH_CAPTURE" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2572
    nqp_get_sc_object $P5098, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    $P5099 = $P5098."new"("savecapture" :named("op"))
    $P5100 = $P5095."new"($P5097, $P5099, "bind" :named("op"))
    $P5093."push"($P5100)
.annotate 'line', 2574
    find_lex $P5101, "$past"
    set fb_tmp_568, $P5101
    repr_defined $I5015, fb_tmp_568
    unless $I5015 goto if2802_else6056 
    set $P5102, fb_tmp_568[0]
    set $P5104, $P5102
    goto if2802_end6057
  if2802_else6056:
    null $P5103
    set $P5104, $P5103
  if2802_end6057:
    unless_null $P5104, vivi_28036058
    nqp_get_sc_object $P5105, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5104, $P5105
  vivi_28036058:
    nqp_get_sc_object $P5106, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 2576
    nqp_get_sc_object $P5107, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5108 = $P5107."new"("&*CURRENT_DISPATCHER" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2577
    nqp_get_sc_object $P5109, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    nqp_get_sc_object $P5110, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    $P5111 = $P5110."new"("curcode" :named("op"))
    $P5112 = $P5109."new"($P5111, "getcodeobj" :named("op"))
    $P5113 = $P5106."new"($P5108, $P5112, "bind" :named("op"))
    $P5114 = $P5104."push"($P5113)
    set $P5115, $P5114
  if2799_end6052:
    .return ($P5115) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_483_1365879995.227") :anon :lex :outer("cuid_309_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2589
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5002, "$/"
    $P5001 = _lex_param_0."ast"()
    $P5003 = $P5001($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "signature" :subid("cuid_310_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2641
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5033 = 'cuid_484_1365879995.227' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_485_1365879995.227' 
    capture_lex $P5033 
    .lex "$BLOCK", $P101 
    .lex "$BLOCKINIT", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_572 
    .local pmc fb_tmp_573 
    .local pmc fb_tmp_574 
    .local pmc fb_tmp_577 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
.annotate 'line', 2642
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback6075
    nqp_get_sc_object $P5005, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5004, $P5005
    set fb_tmp_572, $P5004
    repr_defined $I5001, fb_tmp_572
    unless $I5001 goto if2811_else6076 
    set $P5006, fb_tmp_572["$W"]
    set $P5008, $P5006
    goto if2811_end6077
  if2811_else6076:
    null $P5007
    set $P5008, $P5007
  if2811_end6077:
    unless_null $P5008, vivi_28126078
    nqp_get_sc_object $P5009, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5008, $P5009
  vivi_28126078:
    unless_null $P5008, vivi_28136079
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_28136079:
    set $P5003, $P5008
  fallback6075:
    $P5011 = $P5003."cur_lexpad"()
    set $P101, $P5011
    set fb_tmp_573, $P101
    repr_defined $I5002, fb_tmp_573
    unless $I5002 goto if2814_else6080 
    set $P5012, fb_tmp_573[0]
    set $P5014, $P5012
    goto if2814_end6081
  if2814_else6080:
    null $P5013
    set $P5014, $P5013
  if2814_end6081:
    unless_null $P5014, vivi_28156082
    nqp_get_sc_object $P5015, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5014, $P5015
  vivi_28156082:
    set $P102, $P5014
    unless_null _lex_param_1, fallback6087
    nqp_get_sc_object $P5016, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5016
  fallback6087:
    set fb_tmp_574, _lex_param_1
    repr_defined $I5003, fb_tmp_574
    unless $I5003 goto if2817_else6085 
    set $P5017, fb_tmp_574["invocant"]
    set $P5019, $P5017
    goto if2817_end6086
  if2817_else6085:
    null $P5018
    set $P5019, $P5018
  if2817_end6086:
    unless_null $P5019, vivi_28186088
    nqp_get_sc_object $P5020, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5019, $P5020
  vivi_28186088:
    unless $P5019 goto if2816_end6084 
    .const 'Sub' $P5021 = 'cuid_484_1365879995.227' 
    capture_lex $P5021
    $P5022 = $P5021()
  if2816_end6084:
    unless_null _lex_param_1, fallback6098
    nqp_get_sc_object $P5026, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5026
  fallback6098:
    set fb_tmp_577, _lex_param_1
    repr_defined $I5004, fb_tmp_577
    unless $I5004 goto if2823_else6096 
    set $P5027, fb_tmp_577["parameter"]
    set $P5029, $P5027
    goto if2823_end6097
  if2823_else6096:
    null $P5028
    set $P5029, $P5028
  if2823_end6097:
    unless_null $P5029, vivi_28246099
    nqp_get_sc_object $P5030, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5029, $P5030
  vivi_28246099:
    set $P5023, $P5029
    iter $P5025, $P5029
  for_next6100:
    unless $P5025, for_done6102
    shift $P5032, $P5025
  for_redo6101:
    .const 'Sub' $P5031 = 'cuid_485_1365879995.227' 
    capture_lex $P5031
    $P5023 = $P5031($P5032)
    goto for_next6100
  for_done6102:
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_484_1365879995.227") :anon :lex :outer("cuid_310_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2644
    .lex "$inv", $P101 
    .local pmc fb_tmp_575 
    .local pmc fb_tmp_576 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
.annotate 'line', 2645
    find_lex $P5002, "$/"
    unless_null $P5002, fallback6093
    nqp_get_sc_object $P5003, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5002, $P5003
  fallback6093:
    set fb_tmp_576, $P5002
    repr_defined $I5002, fb_tmp_576
    unless $I5002 goto if2820_else6091 
    set $P5004, fb_tmp_576["invocant"]
    set $P5006, $P5004
    goto if2820_end6092
  if2820_else6091:
    null $P5005
    set $P5006, $P5005
  if2820_end6092:
    unless_null $P5006, vivi_28216094
    nqp_get_sc_object $P5007, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5006, $P5007
  vivi_28216094:
    set fb_tmp_575, $P5006
    repr_defined $I5001, fb_tmp_575
    unless $I5001 goto if2819_else6089 
    set $P5008, fb_tmp_575[0]
    set $P5010, $P5008
    goto if2819_end6090
  if2819_else6089:
    null $P5009
    set $P5010, $P5009
  if2819_end6090:
    unless_null $P5010, vivi_28226095
    nqp_get_sc_object $P5011, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5010, $P5011
  vivi_28226095:
    $P5012 = $P5010."ast"()
    set $P101, $P5012
.annotate 'line', 2646
    find_lex $P5013, "$BLOCKINIT"
    $P5013."push"($P101)
.annotate 'line', 2647
    find_lex $P5014, "$BLOCKINIT"
    nqp_get_sc_object $P5015, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 2649
    nqp_get_sc_object $P5016, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5017 = $P5016."new"("self" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2650
    nqp_get_sc_object $P5018, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5019 = $P101."name"()
    $P5020 = $P5018."new"("lexical" :named("scope"), $P5019 :named("name"))
    $P5021 = $P5015."new"($P5017, $P5020, "bind" :named("op"))
    $P5014."push"($P5021)
    find_lex $P5022, "$BLOCK"
    box $P5023, 1
    set $P5022["signature_has_invocant"], $P5023
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_485_1365879995.227") :anon :lex :outer("cuid_310_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2654
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "$BLOCKINIT"
    $P5002 = _lex_param_0."ast"()
    $P5003 = $P5001."push"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "parameter" :subid("cuid_311_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2657
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5134 = 'cuid_487_1365879995.227' 
    capture_lex $P5134 
    .lex "$quant", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_578 
    .local pmc fb_tmp_579 
    .local pmc fb_tmp_580 
    .local pmc fb_tmp_581 
    .local pmc fb_tmp_582 
    .local pmc fb_tmp_583 
    .local pmc fb_tmp_584 
    .local pmc fb_tmp_585 
    .local pmc fb_tmp_586 
    .local pmc fb_tmp_587 
    .local pmc fb_tmp_588 
    .local pmc fb_tmp_589 
    .local pmc fb_tmp_590 
    .local pmc fb_tmp_591 
    .local pmc fb_tmp_592 
    .local pmc fb_tmp_593 
    .local pmc fb_tmp_594 
    .local pmc fb_tmp_595 
    .local pmc fb_tmp_600 
    .local pmc fb_tmp_601 
    .local pmc fb_tmp_602 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
    unless_null _lex_param_1, fallback6105
    nqp_get_sc_object $P5003, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5003
  fallback6105:
    set fb_tmp_578, _lex_param_1
    repr_defined $I5001, fb_tmp_578
    unless $I5001 goto if2825_else6103 
    set $P5004, fb_tmp_578["quant"]
    set $P5006, $P5004
    goto if2825_end6104
  if2825_else6103:
    null $P5005
    set $P5006, $P5005
  if2825_end6104:
    unless_null $P5006, vivi_28266106
    nqp_get_sc_object $P5007, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5006, $P5007
  vivi_28266106:
    set $P101, $P5006
    unless_null _lex_param_1, fallback6111
    nqp_get_sc_object $P5008, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5008
  fallback6111:
    set fb_tmp_579, _lex_param_1
    repr_defined $I5002, fb_tmp_579
    unless $I5002 goto if2828_else6109 
    set $P5009, fb_tmp_579["named_param"]
    set $P5011, $P5009
    goto if2828_end6110
  if2828_else6109:
    null $P5010
    set $P5011, $P5010
  if2828_end6110:
    unless_null $P5011, vivi_28296112
    nqp_get_sc_object $P5012, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5011, $P5012
  vivi_28296112:
    unless $P5011 goto if2827_else6107 
.annotate 'line', 2660
.annotate 'line', 2661
    unless_null _lex_param_1, fallback6115
    nqp_get_sc_object $P5013, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5013
  fallback6115:
    set fb_tmp_580, _lex_param_1
    repr_defined $I5003, fb_tmp_580
    unless $I5003 goto if2830_else6113 
    set $P5014, fb_tmp_580["named_param"]
    set $P5016, $P5014
    goto if2830_end6114
  if2830_else6113:
    null $P5015
    set $P5016, $P5015
  if2830_end6114:
    unless_null $P5016, vivi_28316116
    nqp_get_sc_object $P5017, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5016, $P5017
  vivi_28316116:
    $P5018 = $P5016."ast"()
    set $P102, $P5018
    set $S5001, $P101
    isne $I5004, $S5001, "!"
    box $P5035, $I5004
    set $P5034, $P5035
    unless $I5004 goto if2832_end6118 
.annotate 'line', 2662
.annotate 'line', 2663
    unless_null _lex_param_1, fallback6125
    nqp_get_sc_object $P5019, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5019
  fallback6125:
    set fb_tmp_583, _lex_param_1
    repr_defined $I5007, fb_tmp_583
    unless $I5007 goto if2835_else6123 
    set $P5020, fb_tmp_583["named_param"]
    set $P5022, $P5020
    goto if2835_end6124
  if2835_else6123:
    null $P5021
    set $P5022, $P5021
  if2835_end6124:
    unless_null $P5022, vivi_28366126
    nqp_get_sc_object $P5023, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5022, $P5023
  vivi_28366126:
    set fb_tmp_582, $P5022
    repr_defined $I5006, fb_tmp_582
    unless $I5006 goto if2834_else6121 
    set $P5024, fb_tmp_582["param_var"]
    set $P5026, $P5024
    goto if2834_end6122
  if2834_else6121:
    null $P5025
    set $P5026, $P5025
  if2834_end6122:
    unless_null $P5026, vivi_28376127
    nqp_get_sc_object $P5027, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5026, $P5027
  vivi_28376127:
    set fb_tmp_581, $P5026
    repr_defined $I5005, fb_tmp_581
    unless $I5005 goto if2833_else6119 
    set $P5028, fb_tmp_581["sigil"]
    set $P5030, $P5028
    goto if2833_end6120
  if2833_else6119:
    null $P5029
    set $P5030, $P5029
  if2833_end6120:
    unless_null $P5030, vivi_28386128
    nqp_get_sc_object $P5031, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5030, $P5031
  vivi_28386128:
    $P5032 = "&default_for"($P5030)
    $P5033 = $P102."default"($P5032)
    set $P5034, $P5033
  if2832_end6118:
    goto if2827_end6108
  if2827_else6107:
.annotate 'line', 2666
.annotate 'line', 2667
    unless_null _lex_param_1, fallback6131
    nqp_get_sc_object $P5036, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5036
  fallback6131:
    set fb_tmp_584, _lex_param_1
    repr_defined $I5008, fb_tmp_584
    unless $I5008 goto if2839_else6129 
    set $P5037, fb_tmp_584["param_var"]
    set $P5039, $P5037
    goto if2839_end6130
  if2839_else6129:
    null $P5038
    set $P5039, $P5038
  if2839_end6130:
    unless_null $P5039, vivi_28406132
    nqp_get_sc_object $P5040, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5039, $P5040
  vivi_28406132:
    $P5041 = $P5039."ast"()
    set $P102, $P5041
    set $S5002, $P101
    iseq $I5009, $S5002, "*"
    unless $I5009 goto if2841_else6133 
.annotate 'line', 2668
.annotate 'line', 2669
    $P102."slurpy"(1)
.annotate 'line', 2670
    unless_null _lex_param_1, fallback6139
    nqp_get_sc_object $P5042, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5042
  fallback6139:
    set fb_tmp_586, _lex_param_1
    repr_defined $I5012, fb_tmp_586
    unless $I5012 goto if2843_else6137 
    set $P5043, fb_tmp_586["param_var"]
    set $P5045, $P5043
    goto if2843_end6138
  if2843_else6137:
    null $P5044
    set $P5045, $P5044
  if2843_end6138:
    unless_null $P5045, vivi_28446140
    nqp_get_sc_object $P5046, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5045, $P5046
  vivi_28446140:
    set fb_tmp_585, $P5045
    repr_defined $I5011, fb_tmp_585
    unless $I5011 goto if2842_else6135 
    set $P5047, fb_tmp_585["sigil"]
    set $P5049, $P5047
    goto if2842_end6136
  if2842_else6135:
    null $P5048
    set $P5049, $P5048
  if2842_end6136:
    unless_null $P5049, vivi_28456141
    nqp_get_sc_object $P5050, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5049, $P5050
  vivi_28456141:
    set $S5003, $P5049
    iseq $I5010, $S5003, "%"
    $P5051 = $P102."named"($I5010)
    set $P5065, $P5051
    goto if2841_end6134
  if2841_else6133:
    set $S5004, $P101
    iseq $I5013, $S5004, "?"
    box $P5064, $I5013
    set $P5063, $P5064
    unless $I5013 goto if2846_end6143 
.annotate 'line', 2672
.annotate 'line', 2673
    unless_null _lex_param_1, fallback6148
    nqp_get_sc_object $P5052, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5052
  fallback6148:
    set fb_tmp_588, _lex_param_1
    repr_defined $I5015, fb_tmp_588
    unless $I5015 goto if2848_else6146 
    set $P5053, fb_tmp_588["param_var"]
    set $P5055, $P5053
    goto if2848_end6147
  if2848_else6146:
    null $P5054
    set $P5055, $P5054
  if2848_end6147:
    unless_null $P5055, vivi_28496149
    nqp_get_sc_object $P5056, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5055, $P5056
  vivi_28496149:
    set fb_tmp_587, $P5055
    repr_defined $I5014, fb_tmp_587
    unless $I5014 goto if2847_else6144 
    set $P5057, fb_tmp_587["sigil"]
    set $P5059, $P5057
    goto if2847_end6145
  if2847_else6144:
    null $P5058
    set $P5059, $P5058
  if2847_end6145:
    unless_null $P5059, vivi_28506150
    nqp_get_sc_object $P5060, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5059, $P5060
  vivi_28506150:
    $P5061 = "&default_for"($P5059)
    $P5062 = $P102."default"($P5061)
    set $P5063, $P5062
  if2846_end6143:
    set $P5065, $P5063
  if2841_end6134:
  if2827_end6108:
    unless_null _lex_param_1, fallback6155
    nqp_get_sc_object $P5066, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5066
  fallback6155:
    set fb_tmp_589, _lex_param_1
    repr_defined $I5016, fb_tmp_589
    unless $I5016 goto if2852_else6153 
    set $P5067, fb_tmp_589["default_value"]
    set $P5069, $P5067
    goto if2852_end6154
  if2852_else6153:
    null $P5068
    set $P5069, $P5068
  if2852_end6154:
    unless_null $P5069, vivi_28536156
    nqp_get_sc_object $P5070, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5069, $P5070
  vivi_28536156:
    unless $P5069 goto if2851_end6152 
.annotate 'line', 2676
    set $S5005, $P101
    iseq $I5017, $S5005, "*"
    unless $I5017 goto if2854_end6158 
.annotate 'line', 2677
.annotate 'line', 2678
    $P5071 = _lex_param_1."CURSOR"()
    $P5072 = $P5071."panic"("Can't put default on slurpy parameter")
  if2854_end6158:
    set $S5006, $P101
    iseq $I5018, $S5006, "!"
    unless $I5018 goto if2855_end6160 
.annotate 'line', 2680
.annotate 'line', 2681
    $P5073 = _lex_param_1."CURSOR"()
    $P5074 = $P5073."panic"("Can't put default on required parameter")
  if2855_end6160:
.annotate 'line', 2683
    unless_null _lex_param_1, fallback6167
    nqp_get_sc_object $P5075, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5075
  fallback6167:
    set fb_tmp_592, _lex_param_1
    repr_defined $I5021, fb_tmp_592
    unless $I5021 goto if2858_else6165 
    set $P5076, fb_tmp_592["default_value"]
    set $P5078, $P5076
    goto if2858_end6166
  if2858_else6165:
    null $P5077
    set $P5078, $P5077
  if2858_end6166:
    unless_null $P5078, vivi_28596168
    nqp_get_sc_object $P5079, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5078, $P5079
  vivi_28596168:
    set fb_tmp_591, $P5078
    repr_defined $I5020, fb_tmp_591
    unless $I5020 goto if2857_else6163 
    set $P5080, fb_tmp_591[0]
    set $P5082, $P5080
    goto if2857_end6164
  if2857_else6163:
    null $P5081
    set $P5082, $P5081
  if2857_end6164:
    unless_null $P5082, vivi_28606169
    nqp_get_sc_object $P5083, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5082, $P5083
  vivi_28606169:
    set fb_tmp_590, $P5082
    repr_defined $I5019, fb_tmp_590
    unless $I5019 goto if2856_else6161 
    set $P5084, fb_tmp_590["EXPR"]
    set $P5086, $P5084
    goto if2856_end6162
  if2856_else6161:
    null $P5085
    set $P5086, $P5085
  if2856_end6162:
    unless_null $P5086, vivi_28616170
    nqp_get_sc_object $P5087, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5086, $P5087
  vivi_28616170:
    $P5088 = $P5086."ast"()
    $P5089 = $P102."default"($P5088)
  if2851_end6152:
.annotate 'line', 2685
    $P5090 = $P102."default"()
    if $P5090 goto unless2862_end6172 
    find_dynamic_lex $P5091, "$*W"
    unless_null $P5091, fallback6173
    nqp_get_sc_object $P5093, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5092, $P5093
    set fb_tmp_593, $P5092
    repr_defined $I5022, fb_tmp_593
    unless $I5022 goto if2863_else6174 
    set $P5094, fb_tmp_593["$W"]
    set $P5096, $P5094
    goto if2863_end6175
  if2863_else6174:
    null $P5095
    set $P5096, $P5095
  if2863_end6175:
    unless_null $P5096, vivi_28646176
    nqp_get_sc_object $P5097, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5096, $P5097
  vivi_28646176:
    unless_null $P5096, vivi_28656177
    die "Contextual $*W not found"
    box $P5098, "Contextual $*W not found"
    set $P5096, $P5098
  vivi_28656177:
    set $P5091, $P5096
  fallback6173:
    $P5099 = $P5091."cur_lexpad"()
    find_dynamic_lex $P5100, "$*W"
    unless_null $P5100, fallback6178
    nqp_get_sc_object $P5102, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5101, $P5102
    set fb_tmp_594, $P5101
    repr_defined $I5023, fb_tmp_594
    unless $I5023 goto if2866_else6179 
    set $P5103, fb_tmp_594["$W"]
    set $P5105, $P5103
    goto if2866_end6180
  if2866_else6179:
    null $P5104
    set $P5105, $P5104
  if2866_end6180:
    unless_null $P5105, vivi_28676181
    nqp_get_sc_object $P5106, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5105, $P5106
  vivi_28676181:
    unless_null $P5105, vivi_28686182
    die "Contextual $*W not found"
    box $P5107, "Contextual $*W not found"
    set $P5105, $P5107
  vivi_28686182:
    set $P5100, $P5105
  fallback6178:
    $P5108 = $P5100."cur_lexpad"()
    $P5109 = $P5108."arity"()
    set $N5002, $P5109
    set $N5003, 1
    add $N5001, $N5002, $N5003
    $P5110 = $P5099."arity"($N5001)
  unless2862_end6172:
    unless_null _lex_param_1, fallback6187
    nqp_get_sc_object $P5111, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5111
  fallback6187:
    set fb_tmp_595, _lex_param_1
    repr_defined $I5024, fb_tmp_595
    unless $I5024 goto if2870_else6185 
    set $P5112, fb_tmp_595["typename"]
    set $P5114, $P5112
    goto if2870_end6186
  if2870_else6185:
    null $P5113
    set $P5114, $P5113
  if2870_end6186:
    unless_null $P5114, vivi_28716188
    nqp_get_sc_object $P5115, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5114, $P5115
  vivi_28716188:
    unless $P5114 goto if2869_end6184 
    .const 'Sub' $P5116 = 'cuid_487_1365879995.227' 
    capture_lex $P5116
    $P5117 = $P5116()
  if2869_end6184:
    unless_null _lex_param_1, fallback6215
    nqp_get_sc_object $P5118, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5118
  fallback6215:
    set fb_tmp_600, _lex_param_1
    repr_defined $I5025, fb_tmp_600
    unless $I5025 goto if2885_else6213 
    set $P5119, fb_tmp_600["definedness"]
    set $P5121, $P5119
    goto if2885_end6214
  if2885_else6213:
    null $P5120
    set $P5121, $P5120
  if2885_end6214:
    unless_null $P5121, vivi_28866216
    nqp_get_sc_object $P5122, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5121, $P5122
  vivi_28866216:
    unless $P5121 goto if2884_end6212 
.annotate 'line', 2700
    unless_null _lex_param_1, fallback6221
    nqp_get_sc_object $P5123, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5123
  fallback6221:
    set fb_tmp_602, _lex_param_1
    repr_defined $I5027, fb_tmp_602
    unless $I5027 goto if2888_else6219 
    set $P5124, fb_tmp_602["definedness"]
    set $P5126, $P5124
    goto if2888_end6220
  if2888_else6219:
    null $P5125
    set $P5126, $P5125
  if2888_end6220:
    unless_null $P5126, vivi_28896222
    nqp_get_sc_object $P5127, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5126, $P5127
  vivi_28896222:
    set fb_tmp_601, $P5126
    repr_defined $I5026, fb_tmp_601
    unless $I5026 goto if2887_else6217 
    set $P5128, fb_tmp_601[0]
    set $P5130, $P5128
    goto if2887_end6218
  if2887_else6217:
    null $P5129
    set $P5130, $P5129
  if2887_end6218:
    unless_null $P5130, vivi_28906223
    nqp_get_sc_object $P5131, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5130, $P5131
  vivi_28906223:
    set $S5007, $P5130
    box $P5132, $S5007
    set $P102["definedness"], $P5132
  if2884_end6212:
.annotate 'line', 2704
    $P5133 = _lex_param_1."!make"($P102)
    .return ($P5133) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_487_1365879995.227") :anon :lex :outer("cuid_311_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2688
    .const 'Sub' $P5019 = 'cuid_486_1365879995.227' 
    capture_lex $P5019 
    .lex "$type", $P101 
    .local pmc fb_tmp_596 
    .local pmc fb_tmp_597 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
.annotate 'line', 2689
    find_lex $P5002, "$/"
    unless_null $P5002, fallback6193
    nqp_get_sc_object $P5003, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5002, $P5003
  fallback6193:
    set fb_tmp_597, $P5002
    repr_defined $I5002, fb_tmp_597
    unless $I5002 goto if2873_else6191 
    set $P5004, fb_tmp_597["typename"]
    set $P5006, $P5004
    goto if2873_end6192
  if2873_else6191:
    null $P5005
    set $P5006, $P5005
  if2873_end6192:
    unless_null $P5006, vivi_28746194
    nqp_get_sc_object $P5007, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5006, $P5007
  vivi_28746194:
    set fb_tmp_596, $P5006
    repr_defined $I5001, fb_tmp_596
    unless $I5001 goto if2872_else6189 
    set $P5008, fb_tmp_596[0]
    set $P5010, $P5008
    goto if2872_end6190
  if2872_else6189:
    null $P5009
    set $P5010, $P5009
  if2872_end6190:
    unless_null $P5010, vivi_28756195
    nqp_get_sc_object $P5011, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5010, $P5011
  vivi_28756195:
    $P5012 = $P5010."ast"()
    $P5013 = $P5012."value"()
    set $P101, $P5013
.annotate 'line', 2690
    find_lex $P5014, "$past"
    $P5014."returns"($P101)
    repr_get_primitive_type_spec $I5003, $P101
    box $P5018, $I5003
    set $P5017, $P5018
    unless $I5003 goto if2876_end6197 
    .const 'Sub' $P5015 = 'cuid_486_1365879995.227' 
    capture_lex $P5015
    $P5016 = $P5015($P5018)
    set $P5017, $P5016
  if2876_end6197:
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_486_1365879995.227") :anon :lex :outer("cuid_487_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2691
    .param pmc _lex_param_0 
    .lex "$prim", _lex_param_0 
    .local pmc fb_tmp_598 
    .local pmc fb_tmp_599 
.annotate 'line', 2692
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback6198
    nqp_get_sc_object $P5003, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5002, $P5003
    set fb_tmp_598, $P5002
    repr_defined $I5001, fb_tmp_598
    unless $I5001 goto if2877_else6199 
    set $P5004, fb_tmp_598["$W"]
    set $P5006, $P5004
    goto if2877_end6200
  if2877_else6199:
    null $P5005
    set $P5006, $P5005
  if2877_end6200:
    unless_null $P5006, vivi_28786201
    nqp_get_sc_object $P5007, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5006, $P5007
  vivi_28786201:
    unless_null $P5006, vivi_28796202
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_28796202:
    set $P5001, $P5006
  fallback6198:
    $P5009 = $P5001."cur_lexpad"()
    find_lex $P5010, "$past"
    $P5011 = $P5010."name"()
    find_lex $P5012, "$type"
    $P5009."symbol"($P5011, $P5012 :named("type"))
.annotate 'line', 2693
    find_lex $P5013, "$past"
    $P5014 = $P5013."default"()
    set $P5021, $P5014
    unless $P5014 goto if2881_end6206 
    find_lex $P5015, "$/"
    unless_null $P5015, fallback6209
    nqp_get_sc_object $P5016, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5015, $P5016
  fallback6209:
    set fb_tmp_599, $P5015
    repr_defined $I5003, fb_tmp_599
    unless $I5003 goto if2882_else6207 
    set $P5017, fb_tmp_599["default_value"]
    set $P5019, $P5017
    goto if2882_end6208
  if2882_else6207:
    null $P5018
    set $P5019, $P5018
  if2882_end6208:
    unless_null $P5019, vivi_28836210
    nqp_get_sc_object $P5020, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5019, $P5020
  vivi_28836210:
    isfalse $I5002, $P5019
    box $P5022, $I5002
    set $P5021, $P5022
  if2881_end6206:
    set $P5026, $P5021
    unless $P5021 goto if2880_end6204 
.annotate 'line', 2694
    find_lex $P5023, "$past"
    $P5024 = "&default_value_for_prim"(_lex_param_0)
    $P5025 = $P5023."default"($P5024)
    set $P5026, $P5025
  if2880_end6204:
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "param_var" :subid("cuid_312_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2707
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$name", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_603 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
    set $S5001, _lex_param_1
    box $P5003, $S5001
    set $P101, $P5003
.annotate 'line', 2709
    nqp_get_sc_object $P5004, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5005 = $P5004."new"($P101 :named("name"), "lexical" :named("scope"), "param" :named("decl"), _lex_param_1 :named("node"))
    set $P102, $P5005
.annotate 'line', 2711
    find_dynamic_lex $P5006, "$*W"
    unless_null $P5006, fallback6224
    nqp_get_sc_object $P5008, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5007, $P5008
    set fb_tmp_603, $P5007
    repr_defined $I5001, fb_tmp_603
    unless $I5001 goto if2891_else6225 
    set $P5009, fb_tmp_603["$W"]
    set $P5011, $P5009
    goto if2891_end6226
  if2891_else6225:
    null $P5010
    set $P5011, $P5010
  if2891_end6226:
    unless_null $P5011, vivi_28926227
    nqp_get_sc_object $P5012, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5011, $P5012
  vivi_28926227:
    unless_null $P5011, vivi_28936228
    die "Contextual $*W not found"
    box $P5013, "Contextual $*W not found"
    set $P5011, $P5013
  vivi_28936228:
    set $P5006, $P5011
  fallback6224:
    $P5014 = $P5006."cur_lexpad"()
    $P5014."symbol"($P101, "lexical" :named("scope"))
.annotate 'line', 2712
    $P5015 = _lex_param_1."!make"($P102)
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "named_param" :subid("cuid_313_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2715
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_604 
    .local pmc fb_tmp_605 
    .local pmc fb_tmp_606 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
.annotate 'line', 2716
    unless_null _lex_param_1, fallback6231
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5002
  fallback6231:
    set fb_tmp_604, _lex_param_1
    repr_defined $I5001, fb_tmp_604
    unless $I5001 goto if2894_else6229 
    set $P5003, fb_tmp_604["param_var"]
    set $P5005, $P5003
    goto if2894_end6230
  if2894_else6229:
    null $P5004
    set $P5005, $P5004
  if2894_end6230:
    unless_null $P5005, vivi_28956232
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5005, $P5006
  vivi_28956232:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 2717
    unless_null _lex_param_1, fallback6237
    nqp_get_sc_object $P5008, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5008
  fallback6237:
    set fb_tmp_606, _lex_param_1
    repr_defined $I5003, fb_tmp_606
    unless $I5003 goto if2897_else6235 
    set $P5009, fb_tmp_606["param_var"]
    set $P5011, $P5009
    goto if2897_end6236
  if2897_else6235:
    null $P5010
    set $P5011, $P5010
  if2897_end6236:
    unless_null $P5011, vivi_28986238
    nqp_get_sc_object $P5012, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5011, $P5012
  vivi_28986238:
    set fb_tmp_605, $P5011
    repr_defined $I5002, fb_tmp_605
    unless $I5002 goto if2896_else6233 
    set $P5013, fb_tmp_605["name"]
    set $P5015, $P5013
    goto if2896_end6234
  if2896_else6233:
    null $P5014
    set $P5015, $P5014
  if2896_end6234:
    unless_null $P5015, vivi_28996239
    nqp_get_sc_object $P5016, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5015, $P5016
  vivi_28996239:
    set $S5001, $P5015
    $P101."named"($S5001)
.annotate 'line', 2718
    $P5017 = _lex_param_1."!make"($P101)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "typename" :subid("cuid_314_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2721
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5013 = 'cuid_488_1365879995.227' 
    capture_lex $P5013 
    .lex "@name", $P101 
    .lex "$found", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    new $P5001, 'QRPA'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
.annotate 'line', 2725
    nqp_get_sc_object $P5003, "B80449D644E1050F26DF9E69AE32428A32785A12-1365879968.656", 125
    set $S5001, _lex_param_1
    $P5004 = $P5003."parse_name"($S5001)
    set $P101, $P5004
    box $P5005, 0
    set $P102, $P5005
    new $P5008, 'ExceptionHandler'
    set_label $P5008, catch_handler_29046246
    $P5008.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5008
    .const 'Sub' $P5006 = 'cuid_488_1365879995.227' 
    capture_lex $P5006
    $P5007 = $P5006()
    set $P5009, $P5007
    pop_eh 
    goto skip_handler_29036245
  catch_handler_29046246:
    .get_results ($P5008) 
    set $I10001, 1
    set $P5008["handled"], $I10001
    nqp_get_sc_object $P10001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    finalize $P5008
    pop_upto_eh $P5008
    pop_eh 
    set $P5009, $P10001
    goto skip_handler_29036245
  skip_handler_29036245:
    set $P5012, $P102
    if $P102 goto unless2905_end6248 
.annotate 'line', 2732
.annotate 'line', 2733
    $P5010 = _lex_param_1."CURSOR"()
    set $S5004, _lex_param_1
    concat $S5003, "Use of undeclared type '", $S5004
    concat $S5002, $S5003, "'"
    $P5011 = $P5010."panic"($S5002)
    set $P5012, $P5011
  unless2905_end6248:
    .return ($P5012) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_488_1365879995.227") :anon :lex :outer("cuid_314_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2727
    .lex "$sym", $P101 
    .local pmc fb_tmp_607 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
.annotate 'line', 2728
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback6240
    nqp_get_sc_object $P5004, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5003, $P5004
    set fb_tmp_607, $P5003
    repr_defined $I5001, fb_tmp_607
    unless $I5001 goto if2900_else6241 
    set $P5005, fb_tmp_607["$W"]
    set $P5007, $P5005
    goto if2900_end6242
  if2900_else6241:
    null $P5006
    set $P5007, $P5006
  if2900_end6242:
    unless_null $P5007, vivi_29016243
    nqp_get_sc_object $P5008, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5007, $P5008
  vivi_29016243:
    unless_null $P5007, vivi_29026244
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_29026244:
    set $P5002, $P5007
  fallback6240:
    find_lex $P5010, "@name"
    $P5011 = $P5002."find_sym"($P5010)
    set $P101, $P5011
.annotate 'line', 2729
    find_dynamic_lex $P5012, "$/"
    nqp_get_sc_object $P5013, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 61
    $P5014 = $P5013."new"($P101 :named("value"))
    $P5012."!make"($P5014)
    box $P5015, 1
    store_lex "$found", $P5015
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "trait" :subid("cuid_315_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2737
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_608 
.annotate 'line', 2738
    unless_null _lex_param_1, fallback6251
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback6251:
    set fb_tmp_608, _lex_param_1
    repr_defined $I5001, fb_tmp_608
    unless $I5001 goto if2906_else6249 
    set $P5002, fb_tmp_608["trait_mod"]
    set $P5004, $P5002
    goto if2906_end6250
  if2906_else6249:
    null $P5003
    set $P5004, $P5003
  if2906_end6250:
    unless_null $P5004, vivi_29076252
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_29076252:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "trait_mod:sym<is>" :subid("cuid_316_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2741
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5051 = 'cuid_490_1365879995.227' 
    capture_lex $P5051 
    .const 'Sub' $P5051 = 'cuid_492_1365879995.227' 
    capture_lex $P5051 
    .const 'Sub' $P5051 = 'cuid_493_1365879995.227' 
    capture_lex $P5051 
    .const 'Sub' $P5051 = 'cuid_494_1365879995.227' 
    capture_lex $P5051 
    .const 'Sub' $P5051 = 'cuid_495_1365879995.227' 
    capture_lex $P5051 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_609 
    .local pmc fb_tmp_618 
    .local pmc fb_tmp_624 
    .local pmc fb_tmp_626 
    .local pmc fb_tmp_628 
    .local pmc fb_tmp_635 
    unless_null _lex_param_1, fallback6257
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback6257:
    set fb_tmp_609, _lex_param_1
    repr_defined $I5002, fb_tmp_609
    unless $I5002 goto if2909_else6255 
    set $P5002, fb_tmp_609["longname"]
    set $P5004, $P5002
    goto if2909_end6256
  if2909_else6255:
    null $P5003
    set $P5004, $P5003
  if2909_end6256:
    unless_null $P5004, vivi_29106258
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_29106258:
    set $S5001, $P5004
    iseq $I5001, $S5001, "parrot_vtable"
    unless $I5001 goto if2908_else6253 
    .const 'Sub' $P5006 = 'cuid_490_1365879995.227' 
    capture_lex $P5006
    $P5007 = $P5006()
    set $P5050, $P5007
    goto if2908_end6254
  if2908_else6253:
    unless_null _lex_param_1, fallback6299
    nqp_get_sc_object $P5008, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5008
  fallback6299:
    set fb_tmp_618, _lex_param_1
    repr_defined $I5004, fb_tmp_618
    unless $I5004 goto if2933_else6297 
    set $P5009, fb_tmp_618["longname"]
    set $P5011, $P5009
    goto if2933_end6298
  if2933_else6297:
    null $P5010
    set $P5011, $P5010
  if2933_end6298:
    unless_null $P5011, vivi_29346300
    nqp_get_sc_object $P5012, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5011, $P5012
  vivi_29346300:
    set $S5002, $P5011
    iseq $I5003, $S5002, "parrot_vtable_handler"
    unless $I5003 goto if2932_else6295 
    .const 'Sub' $P5013 = 'cuid_492_1365879995.227' 
    capture_lex $P5013
    $P5014 = $P5013()
    set $P5049, $P5014
    goto if2932_end6296
  if2932_else6295:
    unless_null _lex_param_1, fallback6327
    nqp_get_sc_object $P5015, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5015
  fallback6327:
    set fb_tmp_624, _lex_param_1
    repr_defined $I5006, fb_tmp_624
    unless $I5006 goto if2949_else6325 
    set $P5016, fb_tmp_624["longname"]
    set $P5018, $P5016
    goto if2949_end6326
  if2949_else6325:
    null $P5017
    set $P5018, $P5017
  if2949_end6326:
    unless_null $P5018, vivi_29506328
    nqp_get_sc_object $P5019, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5018, $P5019
  vivi_29506328:
    set $S5003, $P5018
    iseq $I5005, $S5003, "positional_delegate"
    unless $I5005 goto if2948_else6323 
.annotate 'line', 2767
.annotate 'line', 2768
    .const 'Sub' $P5021 = 'cuid_493_1365879995.227' 
    capture_lex $P5021
    newclosure $P5020, $P5021
    $P5022 = _lex_param_1."!make"($P5020)
    set $P5048, $P5022
    goto if2948_end6324
  if2948_else6323:
    unless_null _lex_param_1, fallback6338
    nqp_get_sc_object $P5023, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5023
  fallback6338:
    set fb_tmp_626, _lex_param_1
    repr_defined $I5008, fb_tmp_626
    unless $I5008 goto if2955_else6336 
    set $P5024, fb_tmp_626["longname"]
    set $P5026, $P5024
    goto if2955_end6337
  if2955_else6336:
    null $P5025
    set $P5026, $P5025
  if2955_end6337:
    unless_null $P5026, vivi_29566339
    nqp_get_sc_object $P5027, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5026, $P5027
  vivi_29566339:
    set $S5004, $P5026
    iseq $I5007, $S5004, "associative_delegate"
    unless $I5007 goto if2954_else6334 
.annotate 'line', 2770
.annotate 'line', 2771
    .const 'Sub' $P5029 = 'cuid_494_1365879995.227' 
    capture_lex $P5029
    newclosure $P5028, $P5029
    $P5030 = _lex_param_1."!make"($P5028)
    set $P5047, $P5030
    goto if2954_end6335
  if2954_else6334:
    unless_null _lex_param_1, fallback6349
    nqp_get_sc_object $P5031, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5031
  fallback6349:
    set fb_tmp_628, _lex_param_1
    repr_defined $I5010, fb_tmp_628
    unless $I5010 goto if2961_else6347 
    set $P5032, fb_tmp_628["longname"]
    set $P5034, $P5032
    goto if2961_end6348
  if2961_else6347:
    null $P5033
    set $P5034, $P5033
  if2961_end6348:
    unless_null $P5034, vivi_29626350
    nqp_get_sc_object $P5035, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5034, $P5035
  vivi_29626350:
    set $S5005, $P5034
    iseq $I5009, $S5005, "export"
    unless $I5009 goto if2960_else6345 
.annotate 'line', 2773
.annotate 'line', 2774
    .const 'Sub' $P5037 = 'cuid_495_1365879995.227' 
    capture_lex $P5037
    newclosure $P5036, $P5037
    $P5038 = _lex_param_1."!make"($P5036)
    set $P5046, $P5038
    goto if2960_end6346
  if2960_else6345:
.annotate 'line', 2781
.annotate 'line', 2782
    $P5039 = _lex_param_1."CURSOR"()
    unless_null _lex_param_1, fallback6376
    nqp_get_sc_object $P5040, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5040
  fallback6376:
    set fb_tmp_635, _lex_param_1
    repr_defined $I5011, fb_tmp_635
    unless $I5011 goto if2977_else6374 
    set $P5041, fb_tmp_635["longname"]
    set $P5043, $P5041
    goto if2977_end6375
  if2977_else6374:
    null $P5042
    set $P5043, $P5042
  if2977_end6375:
    unless_null $P5043, vivi_29786377
    nqp_get_sc_object $P5044, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5043, $P5044
  vivi_29786377:
    set $S5008, $P5043
    concat $S5007, "Trait '", $S5008
    concat $S5006, $S5007, "' not implemented"
    $P5045 = $P5039."panic"($S5006)
    set $P5046, $P5045
  if2960_end6346:
    set $P5047, $P5046
  if2954_end6335:
    set $P5048, $P5047
  if2948_end6324:
    set $P5049, $P5048
  if2932_end6296:
    set $P5050, $P5049
  if2908_end6254:
    .return ($P5050) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_490_1365879995.227") :anon :lex :outer("cuid_316_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2742
    .const 'Sub' $P5043 = 'cuid_489_1365879995.227' 
    capture_lex $P5043 
    .lex "$cpast", $P101 
    .lex "$name", $P102 
    .lex "$package", $P103 
    .lex "$is_dispatcher", $P104 
    .local pmc fb_tmp_610 
    .local pmc fb_tmp_611 
    .local pmc fb_tmp_612 
    .local pmc fb_tmp_613 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P104, $P5004
.annotate 'line', 2744
    find_lex $P5005, "$/"
    unless_null $P5005, fallback6263
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5005, $P5006
  fallback6263:
    set fb_tmp_611, $P5005
    repr_defined $I5002, fb_tmp_611
    unless $I5002 goto if2912_else6261 
    set $P5007, fb_tmp_611["circumfix"]
    set $P5009, $P5007
    goto if2912_end6262
  if2912_else6261:
    null $P5008
    set $P5009, $P5008
  if2912_end6262:
    unless_null $P5009, vivi_29136264
    nqp_get_sc_object $P5010, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5009, $P5010
  vivi_29136264:
    set fb_tmp_610, $P5009
    repr_defined $I5001, fb_tmp_610
    unless $I5001 goto if2911_else6259 
    set $P5011, fb_tmp_610[0]
    set $P5013, $P5011
    goto if2911_end6260
  if2911_else6259:
    null $P5012
    set $P5013, $P5012
  if2911_end6260:
    unless_null $P5013, vivi_29146265
    nqp_get_sc_object $P5014, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5013, $P5014
  vivi_29146265:
    $P5015 = $P5013."ast"()
    set $P101, $P5015
.annotate 'line', 2746
    nqp_get_sc_object $P5016, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 52
    $P5017 = $P5016."ACCEPTS"($P101)
    if $P5017 goto unless2915_end6267 
.annotate 'line', 2745
    find_lex $P5018, "$/"
    $P5019 = $P5018."CURSOR"()
    $P5020 = $P5019."panic"("Trait 'parrot_vtable' requires constant scalar argument")
  unless2915_end6267:
.annotate 'line', 2747
    $P5021 = $P101."value"()
    set $P102, $P5021
    find_dynamic_lex $P5022, "$*PACKAGE"
    unless_null $P5022, fallback6268
    nqp_get_sc_object $P5024, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5023, $P5024
    set fb_tmp_612, $P5023
    repr_defined $I5003, fb_tmp_612
    unless $I5003 goto if2916_else6269 
    set $P5025, fb_tmp_612["$PACKAGE"]
    set $P5027, $P5025
    goto if2916_end6270
  if2916_else6269:
    null $P5026
    set $P5027, $P5026
  if2916_end6270:
    unless_null $P5027, vivi_29176271
    nqp_get_sc_object $P5028, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5027, $P5028
  vivi_29176271:
    unless_null $P5027, vivi_29186272
    die "Contextual $*PACKAGE not found"
    box $P5029, "Contextual $*PACKAGE not found"
    set $P5027, $P5029
  vivi_29186272:
    set $P5022, $P5027
  fallback6268:
    set $P103, $P5022
    find_dynamic_lex $P5030, "$*SCOPE"
    unless_null $P5030, fallback6273
    nqp_get_sc_object $P5032, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5031, $P5032
    set fb_tmp_613, $P5031
    repr_defined $I5005, fb_tmp_613
    unless $I5005 goto if2919_else6274 
    set $P5033, fb_tmp_613["$SCOPE"]
    set $P5035, $P5033
    goto if2919_end6275
  if2919_else6274:
    null $P5034
    set $P5035, $P5034
  if2919_end6275:
    unless_null $P5035, vivi_29206276
    nqp_get_sc_object $P5036, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5035, $P5036
  vivi_29206276:
    unless_null $P5035, vivi_29216277
    die "Contextual $*SCOPE not found"
    box $P5037, "Contextual $*SCOPE not found"
    set $P5035, $P5037
  vivi_29216277:
    set $P5030, $P5035
  fallback6273:
    set $S5001, $P5030
    iseq $I5004, $S5001, "proto"
    box $P5038, $I5004
    set $P104, $P5038
.annotate 'line', 2750
    find_dynamic_lex $P5039, "$/"
    .const 'Sub' $P5041 = 'cuid_489_1365879995.227' 
    capture_lex $P5041
    newclosure $P5040, $P5041
    $P5042 = $P5039."!make"($P5040)
    .return ($P5042) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_489_1365879995.227") :anon :lex :outer("cuid_490_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2750
    .param pmc _lex_param_0 
    .lex "$match", _lex_param_0 
    .local pmc fb_tmp_614 
    .local pmc fb_tmp_615 
    .local pmc fb_tmp_616 
    .local pmc fb_tmp_617 
.annotate 'line', 2751
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback6278
    nqp_get_sc_object $P5003, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5002, $P5003
    set fb_tmp_614, $P5002
    repr_defined $I5001, fb_tmp_614
    unless $I5001 goto if2922_else6279 
    set $P5004, fb_tmp_614["$W"]
    set $P5006, $P5004
    goto if2922_end6280
  if2922_else6279:
    null $P5005
    set $P5006, $P5005
  if2922_end6280:
    unless_null $P5006, vivi_29236281
    nqp_get_sc_object $P5007, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5006, $P5007
  vivi_29236281:
    unless_null $P5006, vivi_29246282
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_29246282:
    set $P5001, $P5006
  fallback6278:
    find_lex $P5009, "$package"
    find_lex $P5010, "$name"
.annotate 'line', 2752
    $P5012 = _lex_param_0."ast"()
    set fb_tmp_615, $P5012
    repr_defined $I5003, fb_tmp_615
    unless $I5003 goto if2925_else6284 
    set $P5013, fb_tmp_615["code_obj"]
    set $P5015, $P5013
    goto if2925_end6285
  if2925_else6284:
    null $P5014
    set $P5015, $P5014
  if2925_end6285:
    unless_null $P5015, vivi_29266286
    nqp_get_sc_object $P5016, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5015, $P5016
  vivi_29266286:
    set $P5011, $P5015
    defined $I5002, $P5011
    if $I5002, defor6283
.annotate 'line', 2753
    find_dynamic_lex $P5017, "$*W"
    unless_null $P5017, fallback6287
    nqp_get_sc_object $P5019, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5018, $P5019
    set fb_tmp_616, $P5018
    repr_defined $I5004, fb_tmp_616
    unless $I5004 goto if2927_else6288 
    set $P5020, fb_tmp_616["$W"]
    set $P5022, $P5020
    goto if2927_end6289
  if2927_else6288:
    null $P5021
    set $P5022, $P5021
  if2927_end6289:
    unless_null $P5022, vivi_29286290
    nqp_get_sc_object $P5023, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5022, $P5023
  vivi_29286290:
    unless_null $P5022, vivi_29296291
    die "Contextual $*W not found"
    box $P5024, "Contextual $*W not found"
    set $P5022, $P5024
  vivi_29296291:
    set $P5017, $P5022
  fallback6287:
    $P5025 = _lex_param_0."ast"()
    set fb_tmp_617, $P5025
    repr_defined $I5005, fb_tmp_617
    unless $I5005 goto if2930_else6292 
    set $P5026, fb_tmp_617["block_past"]
    set $P5028, $P5026
    goto if2930_end6293
  if2930_else6292:
    null $P5027
    set $P5028, $P5027
  if2930_end6293:
    unless_null $P5028, vivi_29316294
    nqp_get_sc_object $P5029, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5028, $P5029
  vivi_29316294:
    find_lex $P5030, "$name"
    find_lex $P5031, "$is_dispatcher"
    $P5032 = $P5017."create_code"($P5028, $P5030, $P5031)
    set $P5011, $P5032
  defor6283:
    $P5033 = $P5001."pkg_add_method"($P5009, "add_parrot_vtable_mapping", $P5010, $P5011)
    .return ($P5033) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_492_1365879995.227") :anon :lex :outer("cuid_316_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2756
    .const 'Sub' $P5033 = 'cuid_491_1365879995.227' 
    capture_lex $P5033 
    .lex "$cpast", $P101 
    .lex "$name", $P102 
    .lex "$package", $P103 
    .local pmc fb_tmp_619 
    .local pmc fb_tmp_620 
    .local pmc fb_tmp_621 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P103, $P5003
.annotate 'line', 2758
    find_lex $P5004, "$/"
    unless_null $P5004, fallback6305
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  fallback6305:
    set fb_tmp_620, $P5004
    repr_defined $I5002, fb_tmp_620
    unless $I5002 goto if2936_else6303 
    set $P5006, fb_tmp_620["circumfix"]
    set $P5008, $P5006
    goto if2936_end6304
  if2936_else6303:
    null $P5007
    set $P5008, $P5007
  if2936_end6304:
    unless_null $P5008, vivi_29376306
    nqp_get_sc_object $P5009, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5008, $P5009
  vivi_29376306:
    set fb_tmp_619, $P5008
    repr_defined $I5001, fb_tmp_619
    unless $I5001 goto if2935_else6301 
    set $P5010, fb_tmp_619[0]
    set $P5012, $P5010
    goto if2935_end6302
  if2935_else6301:
    null $P5011
    set $P5012, $P5011
  if2935_end6302:
    unless_null $P5012, vivi_29386307
    nqp_get_sc_object $P5013, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5012, $P5013
  vivi_29386307:
    $P5014 = $P5012."ast"()
    set $P101, $P5014
.annotate 'line', 2760
    nqp_get_sc_object $P5015, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 52
    $P5016 = $P5015."ACCEPTS"($P101)
    if $P5016 goto unless2939_end6309 
.annotate 'line', 2759
    find_lex $P5017, "$/"
    $P5018 = $P5017."CURSOR"()
    $P5019 = $P5018."panic"("Trait 'parrot_vtable_handler' requires constant scalar argument")
  unless2939_end6309:
.annotate 'line', 2761
    $P5020 = $P101."value"()
    set $P102, $P5020
    find_dynamic_lex $P5021, "$*PACKAGE"
    unless_null $P5021, fallback6310
    nqp_get_sc_object $P5023, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5022, $P5023
    set fb_tmp_621, $P5022
    repr_defined $I5003, fb_tmp_621
    unless $I5003 goto if2940_else6311 
    set $P5024, fb_tmp_621["$PACKAGE"]
    set $P5026, $P5024
    goto if2940_end6312
  if2940_else6311:
    null $P5025
    set $P5026, $P5025
  if2940_end6312:
    unless_null $P5026, vivi_29416313
    nqp_get_sc_object $P5027, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5026, $P5027
  vivi_29416313:
    unless_null $P5026, vivi_29426314
    die "Contextual $*PACKAGE not found"
    box $P5028, "Contextual $*PACKAGE not found"
    set $P5026, $P5028
  vivi_29426314:
    set $P5021, $P5026
  fallback6310:
    set $P103, $P5021
.annotate 'line', 2763
    find_dynamic_lex $P5029, "$/"
    .const 'Sub' $P5031 = 'cuid_491_1365879995.227' 
    capture_lex $P5031
    newclosure $P5030, $P5031
    $P5032 = $P5029."!make"($P5030)
    .return ($P5032) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_491_1365879995.227") :anon :lex :outer("cuid_492_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2763
    .param pmc _lex_param_0 
    .lex "$match", _lex_param_0 
    .local pmc fb_tmp_622 
    .local pmc fb_tmp_623 
.annotate 'line', 2764
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback6315
    nqp_get_sc_object $P5003, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5002, $P5003
    set fb_tmp_622, $P5002
    repr_defined $I5001, fb_tmp_622
    unless $I5001 goto if2943_else6316 
    set $P5004, fb_tmp_622["$W"]
    set $P5006, $P5004
    goto if2943_end6317
  if2943_else6316:
    null $P5005
    set $P5006, $P5005
  if2943_end6317:
    unless_null $P5006, vivi_29446318
    nqp_get_sc_object $P5007, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5006, $P5007
  vivi_29446318:
    unless_null $P5006, vivi_29456319
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_29456319:
    set $P5001, $P5006
  fallback6315:
    find_lex $P5009, "$package"
    find_lex $P5010, "$name"
    set fb_tmp_623, _lex_param_0
    repr_defined $I5002, fb_tmp_623
    unless $I5002 goto if2946_else6320 
    set $P5011, fb_tmp_623["variable"]
    set $P5013, $P5011
    goto if2946_end6321
  if2946_else6320:
    null $P5012
    set $P5013, $P5012
  if2946_end6321:
    unless_null $P5013, vivi_29476322
    nqp_get_sc_object $P5014, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5013, $P5014
  vivi_29476322:
    set $S5001, $P5013
    $P5015 = $P5001."pkg_add_parrot_vtable_handler_mapping"($P5009, $P5010, $S5001)
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_493_1365879995.227") :anon :lex :outer("cuid_316_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2768
    .param pmc _lex_param_0 
    .lex "$m", _lex_param_0 
    .local pmc fb_tmp_625 
    find_dynamic_lex $P5001, "$*DECLARAND_ATTR"
    unless_null $P5001, fallback6329
    nqp_get_sc_object $P5003, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5002, $P5003
    set fb_tmp_625, $P5002
    repr_defined $I5001, fb_tmp_625
    unless $I5001 goto if2951_else6330 
    set $P5004, fb_tmp_625["$DECLARAND_ATTR"]
    set $P5006, $P5004
    goto if2951_end6331
  if2951_else6330:
    null $P5005
    set $P5006, $P5005
  if2951_end6331:
    unless_null $P5006, vivi_29526332
    nqp_get_sc_object $P5007, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5006, $P5007
  vivi_29526332:
    unless_null $P5006, vivi_29536333
    die "Contextual $*DECLARAND_ATTR not found"
    box $P5008, "Contextual $*DECLARAND_ATTR not found"
    set $P5006, $P5008
  vivi_29536333:
    set $P5001, $P5006
  fallback6329:
    $P5009 = $P5001."set_positional_delegate"(1)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_494_1365879995.227") :anon :lex :outer("cuid_316_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2771
    .param pmc _lex_param_0 
    .lex "$m", _lex_param_0 
    .local pmc fb_tmp_627 
    find_dynamic_lex $P5001, "$*DECLARAND_ATTR"
    unless_null $P5001, fallback6340
    nqp_get_sc_object $P5003, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5002, $P5003
    set fb_tmp_627, $P5002
    repr_defined $I5001, fb_tmp_627
    unless $I5001 goto if2957_else6341 
    set $P5004, fb_tmp_627["$DECLARAND_ATTR"]
    set $P5006, $P5004
    goto if2957_end6342
  if2957_else6341:
    null $P5005
    set $P5006, $P5005
  if2957_end6342:
    unless_null $P5006, vivi_29586343
    nqp_get_sc_object $P5007, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5006, $P5007
  vivi_29586343:
    unless_null $P5006, vivi_29596344
    die "Contextual $*DECLARAND_ATTR not found"
    box $P5008, "Contextual $*DECLARAND_ATTR not found"
    set $P5006, $P5008
  vivi_29596344:
    set $P5001, $P5006
  fallback6340:
    $P5009 = $P5001."set_associative_delegate"(1)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_495_1365879995.227") :anon :lex :outer("cuid_316_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2774
    .param pmc _lex_param_0 
    .lex "$ast", $P101 
    .lex "$name", $P102 
    .lex "$match", _lex_param_0 
    .local pmc fb_tmp_629 
    .local pmc fb_tmp_630 
    .local pmc fb_tmp_631 
    .local pmc fb_tmp_632 
    .local pmc fb_tmp_633 
    .local pmc fb_tmp_634 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
.annotate 'line', 2775
    $P5003 = _lex_param_0."ast"()
    set $P101, $P5003
.annotate 'line', 2776
    set fb_tmp_629, $P101
    repr_defined $I5001, fb_tmp_629
    unless $I5001 goto if2963_else6351 
    set $P5004, fb_tmp_629["block_past"]
    set $P5006, $P5004
    goto if2963_end6352
  if2963_else6351:
    null $P5005
    set $P5006, $P5005
  if2963_end6352:
    unless_null $P5006, vivi_29646353
    nqp_get_sc_object $P5007, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5006, $P5007
  vivi_29646353:
    $P5008 = $P5006."name"()
    set $P102, $P5008
    find_dynamic_lex $P5011, "$*EXPORT"
    unless_null $P5011, fallback6356
    nqp_get_sc_object $P5013, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5012, $P5013
    set fb_tmp_631, $P5012
    repr_defined $I5003, fb_tmp_631
    unless $I5003 goto if2966_else6357 
    set $P5014, fb_tmp_631["$EXPORT"]
    set $P5016, $P5014
    goto if2966_end6358
  if2966_else6357:
    null $P5015
    set $P5016, $P5015
  if2966_end6358:
    unless_null $P5016, vivi_29676359
    nqp_get_sc_object $P5017, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5016, $P5017
  vivi_29676359:
    unless_null $P5016, vivi_29686360
    die "Contextual $*EXPORT not found"
    box $P5018, "Contextual $*EXPORT not found"
    set $P5016, $P5018
  vivi_29686360:
    set $P5011, $P5016
  fallback6356:
    get_who $P5010, $P5011
    set fb_tmp_630, $P5010
    repr_defined $I5002, fb_tmp_630
    unless $I5002 goto if2965_else6354 
    set $P5019, fb_tmp_630["DEFAULT"]
    set $P5021, $P5019
    goto if2965_end6355
  if2965_else6354:
    null $P5020
    set $P5021, $P5020
  if2965_end6355:
    unless_null $P5021, vivi_29696361
    nqp_get_sc_object $P5022, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5021, $P5022
  vivi_29696361:
    get_who $P5009, $P5021
    set $S5002, $P102
    concat $S5001, "&", $S5002
    set fb_tmp_632, $P101
    repr_defined $I5005, fb_tmp_632
    unless $I5005 goto if2970_else6363 
    set $P5024, fb_tmp_632["code_obj"]
    set $P5026, $P5024
    goto if2970_end6364
  if2970_else6363:
    null $P5025
    set $P5026, $P5025
  if2970_end6364:
    unless_null $P5026, vivi_29716365
    nqp_get_sc_object $P5027, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5026, $P5027
  vivi_29716365:
    set $P5023, $P5026
    defined $I5004, $P5023
    if $I5004, defor6362
.annotate 'line', 2778
    find_dynamic_lex $P5028, "$*W"
    unless_null $P5028, fallback6366
    nqp_get_sc_object $P5030, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5029, $P5030
    set fb_tmp_633, $P5029
    repr_defined $I5006, fb_tmp_633
    unless $I5006 goto if2972_else6367 
    set $P5031, fb_tmp_633["$W"]
    set $P5033, $P5031
    goto if2972_end6368
  if2972_else6367:
    null $P5032
    set $P5033, $P5032
  if2972_end6368:
    unless_null $P5033, vivi_29736369
    nqp_get_sc_object $P5034, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5033, $P5034
  vivi_29736369:
    unless_null $P5033, vivi_29746370
    die "Contextual $*W not found"
    box $P5035, "Contextual $*W not found"
    set $P5033, $P5035
  vivi_29746370:
    set $P5028, $P5033
  fallback6366:
    set fb_tmp_634, $P101
    repr_defined $I5007, fb_tmp_634
    unless $I5007 goto if2975_else6371 
    set $P5036, fb_tmp_634["block_past"]
    set $P5038, $P5036
    goto if2975_end6372
  if2975_else6371:
    null $P5037
    set $P5038, $P5037
  if2975_end6372:
    unless_null $P5038, vivi_29766373
    nqp_get_sc_object $P5039, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5038, $P5039
  vivi_29766373:
    $P5040 = $P5028."create_code"($P5038, $P102, 0)
    set $P5023, $P5040
  defor6362:
    set $P5009[$S5001], $P5023
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "regex_declarator" :subid("cuid_317_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2786
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :optional 
    .param int haz_param_5 :opt_flag 
    .const 'Sub' $P5074 = 'cuid_497_1365879995.227' 
    capture_lex $P5074 
    .lex "$name", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .lex "$key", _lex_param_2 
    .local pmc fb_tmp_636 
    .local pmc fb_tmp_637 
    .local pmc fb_tmp_638 
    .local pmc fb_tmp_639 
    .local pmc fb_tmp_640 
    .local pmc fb_tmp_641 
    .local pmc fb_tmp_642 
    .local pmc fb_tmp_643 
    if haz_param_5, default6494
    nqp_get_sc_object $P5073, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_2, $P5073
  default6494:
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
    unless_null _lex_param_1, fallback6382
    nqp_get_sc_object $P5003, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5003
  fallback6382:
    set fb_tmp_636, _lex_param_1
    repr_defined $I5001, fb_tmp_636
    unless $I5001 goto if2980_else6380 
    set $P5004, fb_tmp_636["deflongname"]
    set $P5006, $P5004
    goto if2980_end6381
  if2980_else6380:
    null $P5005
    set $P5006, $P5005
  if2980_end6381:
    unless_null $P5006, vivi_29816383
    nqp_get_sc_object $P5007, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5006, $P5007
  vivi_29816383:
    unless $P5006 goto if2979_else6378 
.annotate 'line', 2788
.annotate 'line', 2789
    unless_null _lex_param_1, fallback6386
    nqp_get_sc_object $P5008, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5008
  fallback6386:
    set fb_tmp_637, _lex_param_1
    repr_defined $I5002, fb_tmp_637
    unless $I5002 goto if2982_else6384 
    set $P5009, fb_tmp_637["deflongname"]
    set $P5011, $P5009
    goto if2982_end6385
  if2982_else6384:
    null $P5010
    set $P5011, $P5010
  if2982_end6385:
    unless_null $P5011, vivi_29836387
    nqp_get_sc_object $P5012, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5011, $P5012
  vivi_29836387:
    $P5013 = $P5011."ast"()
    set $S5001, $P5013
    box $P5014, $S5001
    set $P101, $P5014
    goto if2979_end6379
  if2979_else6378:
.annotate 'line', 2791
    find_dynamic_lex $P5015, "$*PKGDECL"
    unless_null $P5015, fallback6390
    nqp_get_sc_object $P5017, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5016, $P5017
    set fb_tmp_638, $P5016
    repr_defined $I5004, fb_tmp_638
    unless $I5004 goto if2985_else6391 
    set $P5018, fb_tmp_638["$PKGDECL"]
    set $P5020, $P5018
    goto if2985_end6392
  if2985_else6391:
    null $P5019
    set $P5020, $P5019
  if2985_end6392:
    unless_null $P5020, vivi_29866393
    nqp_get_sc_object $P5021, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5020, $P5021
  vivi_29866393:
    unless_null $P5020, vivi_29876394
    die "Contextual $*PKGDECL not found"
    box $P5022, "Contextual $*PKGDECL not found"
    set $P5020, $P5022
  vivi_29876394:
    set $P5015, $P5020
  fallback6390:
    set $S5002, $P5015
    isne $I5003, $S5002, "role"
    unless $I5003 goto if2984_end6389 
.annotate 'line', 2792
.annotate 'line', 2793
    $P5023 = _lex_param_1."CURSOR"()
    $P5024 = $P5023."panic"("Late-bound method name only valid in role")
  if2984_end6389:
    unless_null _lex_param_1, fallback6397
    nqp_get_sc_object $P5025, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5025
  fallback6397:
    set fb_tmp_639, _lex_param_1
    repr_defined $I5005, fb_tmp_639
    unless $I5005 goto if2988_else6395 
    set $P5026, fb_tmp_639["latename"]
    set $P5028, $P5026
    goto if2988_end6396
  if2988_else6395:
    null $P5027
    set $P5028, $P5027
  if2988_end6396:
    unless_null $P5028, vivi_29896398
    nqp_get_sc_object $P5029, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5028, $P5029
  vivi_29896398:
    set $S5004, $P5028
    concat $S5003, "!!LATENAME!!", $S5004
    box $P5030, $S5003
    set $P101, $P5030
  if2979_end6379:
    unless_null _lex_param_1, fallback6403
    nqp_get_sc_object $P5031, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5031
  fallback6403:
    set fb_tmp_640, _lex_param_1
    repr_defined $I5006, fb_tmp_640
    unless $I5006 goto if2991_else6401 
    set $P5032, fb_tmp_640["proto"]
    set $P5034, $P5032
    goto if2991_end6402
  if2991_else6401:
    null $P5033
    set $P5034, $P5033
  if2991_end6402:
    unless_null $P5034, vivi_29926404
    nqp_get_sc_object $P5035, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5034, $P5035
  vivi_29926404:
    unless $P5034 goto if2990_else6399 
.annotate 'line', 2798
.annotate 'line', 2799
    nqp_get_sc_object $P5036, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 103
.annotate 'line', 2801
    nqp_get_sc_object $P5037, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 2802
    nqp_get_sc_object $P5038, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5039 = $P5038."new"("self" :named("name"), "local" :named("scope"), "param" :named("decl"))
.annotate 'line', 2803
    nqp_get_sc_object $P5040, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 52
    $P5041 = $P5040."new"($P101 :named("value"))
    $P5042 = $P5037."new"($P5039, $P5041, "!protoregex" :named("name"), "callmethod" :named("op"))
    $P5043 = $P5036."new"($P5042, $P101 :named("name"), "declaration" :named("blocktype"), _lex_param_1 :named("node"))
    set $P102, $P5043
.annotate 'line', 2810
    find_dynamic_lex $P5044, "$*W"
    unless_null $P5044, fallback6405
    nqp_get_sc_object $P5046, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5045, $P5046
    set fb_tmp_641, $P5045
    repr_defined $I5007, fb_tmp_641
    unless $I5007 goto if2993_else6406 
    set $P5047, fb_tmp_641["$W"]
    set $P5049, $P5047
    goto if2993_end6407
  if2993_else6406:
    null $P5048
    set $P5049, $P5048
  if2993_end6407:
    unless_null $P5049, vivi_29946408
    nqp_get_sc_object $P5050, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5049, $P5050
  vivi_29946408:
    unless_null $P5049, vivi_29956409
    die "Contextual $*W not found"
    box $P5051, "Contextual $*W not found"
    set $P5049, $P5051
  vivi_29956409:
    set $P5044, $P5049
  fallback6405:
    find_dynamic_lex $P5052, "$*PACKAGE"
    unless_null $P5052, fallback6410
    nqp_get_sc_object $P5054, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5053, $P5054
    set fb_tmp_642, $P5053
    repr_defined $I5008, fb_tmp_642
    unless $I5008 goto if2996_else6411 
    set $P5055, fb_tmp_642["$PACKAGE"]
    set $P5057, $P5055
    goto if2996_end6412
  if2996_else6411:
    null $P5056
    set $P5057, $P5056
  if2996_end6412:
    unless_null $P5057, vivi_29976413
    nqp_get_sc_object $P5058, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5057, $P5058
  vivi_29976413:
    unless_null $P5057, vivi_29986414
    die "Contextual $*PACKAGE not found"
    box $P5059, "Contextual $*PACKAGE not found"
    set $P5057, $P5059
  vivi_29986414:
    set $P5052, $P5057
  fallback6410:
.annotate 'line', 2811
    find_dynamic_lex $P5060, "$*W"
    unless_null $P5060, fallback6415
    nqp_get_sc_object $P5062, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5061, $P5062
    set fb_tmp_643, $P5061
    repr_defined $I5009, fb_tmp_643
    unless $I5009 goto if2999_else6416 
    set $P5063, fb_tmp_643["$W"]
    set $P5065, $P5063
    goto if2999_end6417
  if2999_else6416:
    null $P5064
    set $P5065, $P5064
  if2999_end6417:
    unless_null $P5065, vivi_30006418
    nqp_get_sc_object $P5066, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5065, $P5066
  vivi_30006418:
    unless_null $P5065, vivi_30016419
    die "Contextual $*W not found"
    box $P5067, "Contextual $*W not found"
    set $P5065, $P5067
  vivi_30016419:
    set $P5060, $P5065
  fallback6415:
    $P5068 = $P5060."create_code"($P102, $P101, 0, "NQPRegex" :named("code_type_name"))
    $P5069 = $P5044."pkg_add_method"($P5052, "add_method", $P101, $P5068)
    goto if2990_end6400
  if2990_else6399:
    .const 'Sub' $P5070 = 'cuid_497_1365879995.227' 
    capture_lex $P5070
    $P5071 = $P5070()
  if2990_end6400:
.annotate 'line', 2850
    $P5072 = _lex_param_1."!make"($P102)
    .return ($P5072) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_497_1365879995.227") :anon :lex :outer("cuid_317_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2813
    .const 'Sub' $P5128 = 'cuid_496_1365879995.227' 
    capture_lex $P5128 
    .lex "$block", $P101 
    .lex "$code", $P102 
    .lex "$regex", $P103 
    .local pmc fb_tmp_644 
    .local pmc fb_tmp_645 
    .local pmc fb_tmp_646 
    .local pmc fb_tmp_647 
    .local pmc fb_tmp_648 
    .local pmc fb_tmp_649 
    .local pmc fb_tmp_650 
    .local pmc pkg_viv_tmp_45 
    .local pmc fb_tmp_651 
    .local pmc fb_tmp_652 
    .local pmc pkg_viv_tmp_46 
    .local pmc fb_tmp_653 
    .local pmc fb_tmp_654 
    .local pmc fb_tmp_655 
    .local pmc fb_tmp_656 
    .local pmc fb_tmp_657 
    .local pmc fb_tmp_658 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P103, $P5003
.annotate 'line', 2814
    find_dynamic_lex $P5004, "$*W"
    unless_null $P5004, fallback6420
    nqp_get_sc_object $P5006, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5005, $P5006
    set fb_tmp_644, $P5005
    repr_defined $I5001, fb_tmp_644
    unless $I5001 goto if3002_else6421 
    set $P5007, fb_tmp_644["$W"]
    set $P5009, $P5007
    goto if3002_end6422
  if3002_else6421:
    null $P5008
    set $P5009, $P5008
  if3002_end6422:
    unless_null $P5009, vivi_30036423
    nqp_get_sc_object $P5010, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5009, $P5010
  vivi_30036423:
    unless_null $P5009, vivi_30046424
    die "Contextual $*W not found"
    box $P5011, "Contextual $*W not found"
    set $P5009, $P5011
  vivi_30046424:
    set $P5004, $P5009
  fallback6420:
    $P5012 = $P5004."pop_lexpad"()
    set $P101, $P5012
.annotate 'line', 2815
    set fb_tmp_645, $P101
    repr_defined $I5002, fb_tmp_645
    unless $I5002 goto if3005_else6425 
    set $P5013, fb_tmp_645[0]
    set $P5015, $P5013
    goto if3005_end6426
  if3005_else6425:
    null $P5014
    set $P5015, $P5014
  if3005_end6426:
    unless_null $P5015, vivi_30066427
    nqp_get_sc_object $P5016, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5015, $P5016
  vivi_30066427:
    nqp_get_sc_object $P5017, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5018 = $P5017."new"("self" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    $P5015."unshift"($P5018)
.annotate 'line', 2816
    set fb_tmp_646, $P101
    repr_defined $I5003, fb_tmp_646
    unless $I5003 goto if3007_else6428 
    set $P5019, fb_tmp_646[0]
    set $P5021, $P5019
    goto if3007_end6429
  if3007_else6428:
    null $P5020
    set $P5021, $P5020
  if3007_end6429:
    unless_null $P5021, vivi_30086430
    nqp_get_sc_object $P5022, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5021, $P5022
  vivi_30086430:
    nqp_get_sc_object $P5023, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 2818
    nqp_get_sc_object $P5024, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5025 = $P5024."new"("self" :named("name"), "local" :named("scope"), "var" :named("decl"))
.annotate 'line', 2819
    nqp_get_sc_object $P5026, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5027 = $P5026."new"("self" :named("name"), "lexical" :named("scope"))
    $P5028 = $P5023."new"($P5025, $P5027, "bind" :named("op"))
    $P5021."push"($P5028)
.annotate 'line', 2820
    set fb_tmp_647, $P101
    repr_defined $I5004, fb_tmp_647
    unless $I5004 goto if3009_else6431 
    set $P5029, fb_tmp_647[0]
    set $P5031, $P5029
    goto if3009_end6432
  if3009_else6431:
    null $P5030
    set $P5031, $P5030
  if3009_end6432:
    unless_null $P5031, vivi_30106433
    nqp_get_sc_object $P5032, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5031, $P5032
  vivi_30106433:
    nqp_get_sc_object $P5033, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5034 = $P5033."new"(utf8:"$\x{a2}" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    $P5031."push"($P5034)
.annotate 'line', 2821
    set fb_tmp_648, $P101
    repr_defined $I5005, fb_tmp_648
    unless $I5005 goto if3011_else6434 
    set $P5035, fb_tmp_648[0]
    set $P5037, $P5035
    goto if3011_end6435
  if3011_else6434:
    null $P5036
    set $P5037, $P5036
  if3011_end6435:
    unless_null $P5037, vivi_30126436
    nqp_get_sc_object $P5038, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5037, $P5038
  vivi_30126436:
    nqp_get_sc_object $P5039, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5040 = $P5039."new"("$/" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    $P5037."push"($P5040)
.annotate 'line', 2822
    $P101."symbol"(utf8:"$\x{a2}", "lexical" :named("scope"))
.annotate 'line', 2823
    $P101."symbol"("$/", "lexical" :named("scope"))
    find_dynamic_lex $P5041, "%*RX"
    unless_null $P5041, fallback6439
    nqp_get_sc_object $P5043, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5042, $P5043
    set pkg_viv_tmp_45, $P5042
    set fb_tmp_650, pkg_viv_tmp_45
    repr_defined $I5007, fb_tmp_650
    unless $I5007 goto if3014_else6440 
    set $P5044, fb_tmp_650["%RX"]
    set $P5046, $P5044
    goto if3014_end6441
  if3014_else6440:
    null $P5045
    set $P5046, $P5045
  if3014_end6441:
    unless_null $P5046, vivi_30156442
    new $P5047, 'Hash'
    set pkg_viv_tmp_45["%RX"], $P5047
    set $P5046, $P5047
  vivi_30156442:
    unless_null $P5046, vivi_30166443
    die "Contextual %*RX not found"
    box $P5048, "Contextual %*RX not found"
    set $P5046, $P5048
  vivi_30166443:
    set $P5041, $P5046
  fallback6439:
    set fb_tmp_649, $P5041
    repr_defined $I5006, fb_tmp_649
    unless $I5006 goto if3013_else6437 
    set $P5049, fb_tmp_649["code"]
    set $P5051, $P5049
    goto if3013_end6438
  if3013_else6437:
    null $P5050
    set $P5051, $P5050
  if3013_end6438:
    unless_null $P5051, vivi_30176444
    nqp_get_sc_object $P5052, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5051, $P5052
  vivi_30176444:
    set $P102, $P5051
.annotate 'line', 2825
    find_dynamic_lex $P5053, "%*LANG"
    unless_null $P5053, fallback6447
    nqp_get_sc_object $P5055, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5054, $P5055
    set pkg_viv_tmp_46, $P5054
    set fb_tmp_652, pkg_viv_tmp_46
    repr_defined $I5009, fb_tmp_652
    unless $I5009 goto if3019_else6448 
    set $P5056, fb_tmp_652["%LANG"]
    set $P5058, $P5056
    goto if3019_end6449
  if3019_else6448:
    null $P5057
    set $P5058, $P5057
  if3019_end6449:
    unless_null $P5058, vivi_30206450
    new $P5059, 'Hash'
    set pkg_viv_tmp_46["%LANG"], $P5059
    set $P5058, $P5059
  vivi_30206450:
    unless_null $P5058, vivi_30216451
    die "Contextual %*LANG not found"
    box $P5060, "Contextual %*LANG not found"
    set $P5058, $P5060
  vivi_30216451:
    set $P5053, $P5058
  fallback6447:
    set fb_tmp_651, $P5053
    repr_defined $I5008, fb_tmp_651
    unless $I5008 goto if3018_else6445 
    set $P5061, fb_tmp_651["Regex-actions"]
    set $P5063, $P5061
    goto if3018_end6446
  if3018_else6445:
    null $P5062
    set $P5063, $P5062
  if3018_end6446:
    unless_null $P5063, vivi_30226452
    nqp_get_sc_object $P5064, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5063, $P5064
  vivi_30226452:
    find_lex $P5065, "$/"
    unless_null $P5065, fallback6455
    nqp_get_sc_object $P5066, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5065, $P5066
  fallback6455:
    set fb_tmp_653, $P5065
    repr_defined $I5010, fb_tmp_653
    unless $I5010 goto if3023_else6453 
    set $P5067, fb_tmp_653["p6regex"]
    set $P5069, $P5067
    goto if3023_end6454
  if3023_else6453:
    null $P5068
    set $P5069, $P5068
  if3023_end6454:
    unless_null $P5069, vivi_30246456
    nqp_get_sc_object $P5070, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5069, $P5070
  vivi_30246456:
    $P5071 = $P5069."ast"()
    $P5072 = $P5063."qbuildsub"($P5071, $P101, $P102 :named("code_obj"))
    set $P103, $P5072
.annotate 'line', 2826
    find_lex $P5073, "$name"
    $P103."name"($P5073)
    find_dynamic_lex $P5074, "$*PKGDECL"
    unless_null $P5074, fallback6461
    nqp_get_sc_object $P5076, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5075, $P5076
    set fb_tmp_654, $P5075
    repr_defined $I5011, fb_tmp_654
    unless $I5011 goto if3027_else6462 
    set $P5077, fb_tmp_654["$PKGDECL"]
    set $P5079, $P5077
    goto if3027_end6463
  if3027_else6462:
    null $P5078
    set $P5079, $P5078
  if3027_end6463:
    unless_null $P5079, vivi_30286464
    nqp_get_sc_object $P5080, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5079, $P5080
  vivi_30286464:
    unless_null $P5079, vivi_30296465
    die "Contextual $*PKGDECL not found"
    box $P5081, "Contextual $*PKGDECL not found"
    set $P5079, $P5081
  vivi_30296465:
    set $P5074, $P5079
  fallback6461:
    set $P5091, $P5074
    unless $P5074 goto if3026_end6460 
    find_dynamic_lex $P5083, "$*PACKAGE"
    unless_null $P5083, fallback6466
    nqp_get_sc_object $P5085, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5084, $P5085
    set fb_tmp_655, $P5084
    repr_defined $I5013, fb_tmp_655
    unless $I5013 goto if3030_else6467 
    set $P5086, fb_tmp_655["$PACKAGE"]
    set $P5088, $P5086
    goto if3030_end6468
  if3030_else6467:
    null $P5087
    set $P5088, $P5087
  if3030_end6468:
    unless_null $P5088, vivi_30316469
    nqp_get_sc_object $P5089, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5088, $P5089
  vivi_30316469:
    unless_null $P5088, vivi_30326470
    die "Contextual $*PACKAGE not found"
    box $P5090, "Contextual $*PACKAGE not found"
    set $P5088, $P5090
  vivi_30326470:
    set $P5083, $P5088
  fallback6466:
    get_how $P5082, $P5083
    can $I5012, $P5082, "add_method"
    box $P5092, $I5012
    set $P5091, $P5092
  if3026_end6460:
    unless $P5091 goto if3025_end6458 
.annotate 'line', 2828
.annotate 'line', 2830
    find_dynamic_lex $P5093, "$*W"
    unless_null $P5093, fallback6471
    nqp_get_sc_object $P5095, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5094, $P5095
    set fb_tmp_656, $P5094
    repr_defined $I5014, fb_tmp_656
    unless $I5014 goto if3033_else6472 
    set $P5096, fb_tmp_656["$W"]
    set $P5098, $P5096
    goto if3033_end6473
  if3033_else6472:
    null $P5097
    set $P5098, $P5097
  if3033_end6473:
    unless_null $P5098, vivi_30346474
    nqp_get_sc_object $P5099, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5098, $P5099
  vivi_30346474:
    unless_null $P5098, vivi_30356475
    die "Contextual $*W not found"
    box $P5100, "Contextual $*W not found"
    set $P5098, $P5100
  vivi_30356475:
    set $P5093, $P5098
  fallback6471:
    find_dynamic_lex $P5101, "$*PACKAGE"
    unless_null $P5101, fallback6476
    nqp_get_sc_object $P5103, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5102, $P5103
    set fb_tmp_657, $P5102
    repr_defined $I5015, fb_tmp_657
    unless $I5015 goto if3036_else6477 
    set $P5104, fb_tmp_657["$PACKAGE"]
    set $P5106, $P5104
    goto if3036_end6478
  if3036_else6477:
    null $P5105
    set $P5106, $P5105
  if3036_end6478:
    unless_null $P5106, vivi_30376479
    nqp_get_sc_object $P5107, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5106, $P5107
  vivi_30376479:
    unless_null $P5106, vivi_30386480
    die "Contextual $*PACKAGE not found"
    box $P5108, "Contextual $*PACKAGE not found"
    set $P5106, $P5108
  vivi_30386480:
    set $P5101, $P5106
  fallback6476:
    find_lex $P5109, "$name"
    $P5110 = $P5093."pkg_add_method"($P5101, "add_method", $P5109, $P102)
  if3025_end6458:
    find_dynamic_lex $P5111, "$*PKGDECL"
    unless_null $P5111, fallback6483
    nqp_get_sc_object $P5113, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5112, $P5113
    set fb_tmp_658, $P5112
    repr_defined $I5017, fb_tmp_658
    unless $I5017 goto if3040_else6484 
    set $P5114, fb_tmp_658["$PKGDECL"]
    set $P5116, $P5114
    goto if3040_end6485
  if3040_else6484:
    null $P5115
    set $P5116, $P5115
  if3040_end6485:
    unless_null $P5116, vivi_30416486
    nqp_get_sc_object $P5117, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5116, $P5117
  vivi_30416486:
    unless_null $P5116, vivi_30426487
    die "Contextual $*PKGDECL not found"
    box $P5118, "Contextual $*PKGDECL not found"
    set $P5116, $P5118
  vivi_30426487:
    set $P5111, $P5116
  fallback6483:
    set $S5001, $P5111
    iseq $I5016, $S5001, "role"
    unless $I5016 goto if3039_end6482 
    .const 'Sub' $P5119 = 'cuid_496_1365879995.227' 
    capture_lex $P5119
    $P5120 = $P5119()
  if3039_end6482:
.annotate 'line', 2844
    nqp_get_sc_object $P5121, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 2846
    new $P5122, 'QRPA'
    box $P5123, "NQPRegexMethod"
    push $P5122, $P5123
    find_lex $P5124, "$/"
    $P5125 = "&lexical_package_lookup"($P5122, $P5124)
    $P5126 = $P5121."new"($P5125, $P103, "callmethod" :named("op"), "new" :named("name"))
    store_lex "$past", $P5126
    find_lex $P5127, "$past"
    set $P5127["sink"], $P103
    .return ($P103) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_496_1365879995.227") :anon :lex :outer("cuid_497_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2835
    .lex "$gen_nfa", $P101 
    .local pmc fb_tmp_659 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
.annotate 'line', 2836
    nqp_get_sc_object $P5002, "CB6D7C261AAF0D8B4B26A009A161E31DD17426AF-1365879963.875", 3
    $P5003 = $P5002."new"()
    set $P101, $P5003
.annotate 'line', 2837
    find_lex $P5004, "$/"
    unless_null $P5004, fallback6490
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  fallback6490:
    set fb_tmp_659, $P5004
    repr_defined $I5001, fb_tmp_659
    unless $I5001 goto if3043_else6488 
    set $P5006, fb_tmp_659["p6regex"]
    set $P5008, $P5006
    goto if3043_end6489
  if3043_else6488:
    null $P5007
    set $P5008, $P5007
  if3043_end6489:
    unless_null $P5008, vivi_30446491
    nqp_get_sc_object $P5009, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5008, $P5009
  vivi_30446491:
    $P5010 = $P5008."ast"()
    $P101."addnode"($P5010, 1 :named("vars_as_generic"))
.annotate 'line', 2838
    $P5011 = $P101."generic"()
    set $P5014, $P5011
    unless $P5011 goto if3045_end6493 
.annotate 'line', 2839
    find_lex $P5012, "$code"
    $P5013 = $P5012."SET_GENERIC_NFA"($P101)
    set $P5014, $P5013
  if3045_end6493:
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "dotty" :subid("cuid_318_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2854
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_660 
    .local pmc fb_tmp_661 
    .local pmc fb_tmp_662 
    .local pmc fb_tmp_663 
    .local pmc fb_tmp_664 
    .local pmc fb_tmp_665 
    .local pmc fb_tmp_666 
    .local pmc fb_tmp_667 
    .local pmc fb_tmp_668 
    .local pmc fb_tmp_669 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    unless_null _lex_param_1, fallback6499
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5002
  fallback6499:
    set fb_tmp_660, _lex_param_1
    repr_defined $I5001, fb_tmp_660
    unless $I5001 goto if3047_else6497 
    set $P5003, fb_tmp_660["args"]
    set $P5005, $P5003
    goto if3047_end6498
  if3047_else6497:
    null $P5004
    set $P5005, $P5004
  if3047_end6498:
    unless_null $P5005, vivi_30486500
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5005, $P5006
  vivi_30486500:
    unless $P5005 goto if3046_else6495 
.annotate 'line', 2855
    unless_null _lex_param_1, fallback6505
    nqp_get_sc_object $P5007, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5007
  fallback6505:
    set fb_tmp_662, _lex_param_1
    repr_defined $I5003, fb_tmp_662
    unless $I5003 goto if3050_else6503 
    set $P5008, fb_tmp_662["args"]
    set $P5010, $P5008
    goto if3050_end6504
  if3050_else6503:
    null $P5009
    set $P5010, $P5009
  if3050_end6504:
    unless_null $P5010, vivi_30516506
    nqp_get_sc_object $P5011, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5010, $P5011
  vivi_30516506:
    set fb_tmp_661, $P5010
    repr_defined $I5002, fb_tmp_661
    unless $I5002 goto if3049_else6501 
    set $P5012, fb_tmp_661[0]
    set $P5014, $P5012
    goto if3049_end6502
  if3049_else6501:
    null $P5013
    set $P5014, $P5013
  if3049_end6502:
    unless_null $P5014, vivi_30526507
    nqp_get_sc_object $P5015, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5014, $P5015
  vivi_30526507:
    $P5016 = $P5014."ast"()
    set $P5019, $P5016
    goto if3046_end6496
  if3046_else6495:
    nqp_get_sc_object $P5017, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    $P5018 = $P5017."new"(_lex_param_1 :named("node"))
    set $P5019, $P5018
  if3046_end6496:
    set $P101, $P5019
    unless_null _lex_param_1, fallback6512
    nqp_get_sc_object $P5020, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5020
  fallback6512:
    set fb_tmp_663, _lex_param_1
    repr_defined $I5004, fb_tmp_663
    unless $I5004 goto if3054_else6510 
    set $P5021, fb_tmp_663["quote"]
    set $P5023, $P5021
    goto if3054_end6511
  if3054_else6510:
    null $P5022
    set $P5023, $P5022
  if3054_end6511:
    unless_null $P5023, vivi_30556513
    nqp_get_sc_object $P5024, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5023, $P5024
  vivi_30556513:
    unless $P5023 goto if3053_else6508 
.annotate 'line', 2856
.annotate 'line', 2857
    unless_null _lex_param_1, fallback6516
    nqp_get_sc_object $P5025, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5025
  fallback6516:
    set fb_tmp_664, _lex_param_1
    repr_defined $I5005, fb_tmp_664
    unless $I5005 goto if3056_else6514 
    set $P5026, fb_tmp_664["quote"]
    set $P5028, $P5026
    goto if3056_end6515
  if3056_else6514:
    null $P5027
    set $P5028, $P5027
  if3056_end6515:
    unless_null $P5028, vivi_30576517
    nqp_get_sc_object $P5029, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5028, $P5029
  vivi_30576517:
    $P5030 = $P5028."ast"()
    $P101."unshift"($P5030)
.annotate 'line', 2858
    $P5031 = $P101."op"("callmethod")
    goto if3053_end6509
  if3053_else6508:
    unless_null _lex_param_1, fallback6522
    nqp_get_sc_object $P5032, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5032
  fallback6522:
    set fb_tmp_665, _lex_param_1
    repr_defined $I5007, fb_tmp_665
    unless $I5007 goto if3059_else6520 
    set $P5033, fb_tmp_665["longname"]
    set $P5035, $P5033
    goto if3059_end6521
  if3059_else6520:
    null $P5034
    set $P5035, $P5034
  if3059_end6521:
    unless_null $P5035, vivi_30606523
    nqp_get_sc_object $P5036, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5035, $P5036
  vivi_30606523:
    set $S5001, $P5035
    iseq $I5006, $S5001, "HOW"
    unless $I5006 goto if3058_else6518 
.annotate 'line', 2860
.annotate 'line', 2861
    $P5037 = $P101."op"("how")
    set $P5065, $P5037
    goto if3058_end6519
  if3058_else6518:
    unless_null _lex_param_1, fallback6528
    nqp_get_sc_object $P5038, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5038
  fallback6528:
    set fb_tmp_666, _lex_param_1
    repr_defined $I5009, fb_tmp_666
    unless $I5009 goto if3062_else6526 
    set $P5039, fb_tmp_666["longname"]
    set $P5041, $P5039
    goto if3062_end6527
  if3062_else6526:
    null $P5040
    set $P5041, $P5040
  if3062_end6527:
    unless_null $P5041, vivi_30636529
    nqp_get_sc_object $P5042, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5041, $P5042
  vivi_30636529:
    set $S5002, $P5041
    iseq $I5008, $S5002, "WHAT"
    unless $I5008 goto if3061_else6524 
.annotate 'line', 2863
.annotate 'line', 2864
    $P5043 = $P101."op"("what")
    set $P5064, $P5043
    goto if3061_end6525
  if3061_else6524:
    unless_null _lex_param_1, fallback6534
    nqp_get_sc_object $P5044, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5044
  fallback6534:
    set fb_tmp_667, _lex_param_1
    repr_defined $I5011, fb_tmp_667
    unless $I5011 goto if3065_else6532 
    set $P5045, fb_tmp_667["longname"]
    set $P5047, $P5045
    goto if3065_end6533
  if3065_else6532:
    null $P5046
    set $P5047, $P5046
  if3065_end6533:
    unless_null $P5047, vivi_30666535
    nqp_get_sc_object $P5048, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5047, $P5048
  vivi_30666535:
    set $S5003, $P5047
    iseq $I5010, $S5003, "WHO"
    unless $I5010 goto if3064_else6530 
.annotate 'line', 2866
.annotate 'line', 2867
    $P5049 = $P101."op"("who")
    set $P5063, $P5049
    goto if3064_end6531
  if3064_else6530:
    unless_null _lex_param_1, fallback6540
    nqp_get_sc_object $P5050, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5050
  fallback6540:
    set fb_tmp_668, _lex_param_1
    repr_defined $I5013, fb_tmp_668
    unless $I5013 goto if3068_else6538 
    set $P5051, fb_tmp_668["longname"]
    set $P5053, $P5051
    goto if3068_end6539
  if3068_else6538:
    null $P5052
    set $P5053, $P5052
  if3068_end6539:
    unless_null $P5053, vivi_30696541
    nqp_get_sc_object $P5054, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5053, $P5054
  vivi_30696541:
    set $S5004, $P5053
    iseq $I5012, $S5004, "REPR"
    unless $I5012 goto if3067_else6536 
.annotate 'line', 2869
.annotate 'line', 2870
    $P5055 = $P101."op"("reprname")
    set $P5062, $P5055
    goto if3067_end6537
  if3067_else6536:
.annotate 'line', 2872
.annotate 'line', 2873
    unless_null _lex_param_1, fallback6544
    nqp_get_sc_object $P5056, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5056
  fallback6544:
    set fb_tmp_669, _lex_param_1
    repr_defined $I5014, fb_tmp_669
    unless $I5014 goto if3070_else6542 
    set $P5057, fb_tmp_669["longname"]
    set $P5059, $P5057
    goto if3070_end6543
  if3070_else6542:
    null $P5058
    set $P5059, $P5058
  if3070_end6543:
    unless_null $P5059, vivi_30716545
    nqp_get_sc_object $P5060, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5059, $P5060
  vivi_30716545:
    set $S5005, $P5059
    $P101."name"($S5005)
.annotate 'line', 2874
    $P5061 = $P101."op"("callmethod")
    set $P5062, $P5061
  if3067_end6537:
    set $P5063, $P5062
  if3064_end6531:
    set $P5064, $P5063
  if3061_end6525:
    set $P5065, $P5064
  if3058_end6519:
  if3053_end6509:
.annotate 'line', 2876
    $P5066 = _lex_param_1."!make"($P101)
    .return ($P5066) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<self>" :subid("cuid_319_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2881
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
.annotate 'line', 2882
    nqp_get_sc_object $P5001, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 2883
    nqp_get_sc_object $P5002, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5003 = $P5002."new"("self" :named("name"), "lexical" :named("scope"))
    $P5004 = $P5001."new"($P5003, "decont" :named("op"))
    $P5005 = _lex_param_1."!make"($P5004)
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<identifier>" :subid("cuid_320_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2886
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_670 
    .local pmc fb_tmp_671 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
.annotate 'line', 2887
    unless_null _lex_param_1, fallback6548
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5002
  fallback6548:
    set fb_tmp_670, _lex_param_1
    repr_defined $I5001, fb_tmp_670
    unless $I5001 goto if3072_else6546 
    set $P5003, fb_tmp_670["args"]
    set $P5005, $P5003
    goto if3072_end6547
  if3072_else6546:
    null $P5004
    set $P5005, $P5004
  if3072_end6547:
    unless_null $P5005, vivi_30736549
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5005, $P5006
  vivi_30736549:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 2888
    unless_null _lex_param_1, fallback6552
    nqp_get_sc_object $P5008, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5008
  fallback6552:
    set fb_tmp_671, _lex_param_1
    repr_defined $I5002, fb_tmp_671
    unless $I5002 goto if3074_else6550 
    set $P5009, fb_tmp_671["deflongname"]
    set $P5011, $P5009
    goto if3074_end6551
  if3074_else6550:
    null $P5010
    set $P5011, $P5010
  if3074_end6551:
    unless_null $P5011, vivi_30756553
    nqp_get_sc_object $P5012, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5011, $P5012
  vivi_30756553:
    set $S5002, $P5011
    concat $S5001, "&", $S5002
    $P101."name"($S5001)
.annotate 'line', 2889
    $P5013 = _lex_param_1."!make"($P101)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<name>" :subid("cuid_321_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2892
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5053 = 'cuid_498_1365879995.227' 
    capture_lex $P5053 
    .const 'Sub' $P5053 = 'cuid_500_1365879995.227' 
    capture_lex $P5053 
    .lex "$var", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_672 
    .local pmc fb_tmp_673 
    .local pmc fb_tmp_674 
    .local pmc fb_tmp_677 
    .local pmc fb_tmp_682 
    .local pmc fb_tmp_683 
    .local pmc fb_tmp_684 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
.annotate 'line', 2895
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback6556
    nqp_get_sc_object $P5005, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5004, $P5005
    set fb_tmp_672, $P5004
    repr_defined $I5001, fb_tmp_672
    unless $I5001 goto if3077_else6557 
    set $P5006, fb_tmp_672["$W"]
    set $P5008, $P5006
    goto if3077_end6558
  if3077_else6557:
    null $P5007
    set $P5008, $P5007
  if3077_end6558:
    unless_null $P5008, vivi_30786559
    nqp_get_sc_object $P5009, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5008, $P5009
  vivi_30786559:
    unless_null $P5008, vivi_30796560
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_30796560:
    set $P5003, $P5008
  fallback6556:
    unless_null _lex_param_1, fallback6563
    nqp_get_sc_object $P5011, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5011
  fallback6563:
    set fb_tmp_673, _lex_param_1
    repr_defined $I5002, fb_tmp_673
    unless $I5002 goto if3080_else6561 
    set $P5012, fb_tmp_673["name"]
    set $P5014, $P5012
    goto if3080_end6562
  if3080_else6561:
    null $P5013
    set $P5014, $P5013
  if3080_end6562:
    unless_null $P5014, vivi_30816564
    nqp_get_sc_object $P5015, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5014, $P5015
  vivi_30816564:
    set $S5001, $P5014
    $P5016 = $P5003."is_lexical"($S5001)
    unless $P5016 goto if3076_else6554 
    unless_null _lex_param_1, fallback6569
    nqp_get_sc_object $P5017, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5017
  fallback6569:
    set fb_tmp_674, _lex_param_1
    repr_defined $I5003, fb_tmp_674
    unless $I5003 goto if3083_else6567 
    set $P5018, fb_tmp_674["args"]
    set $P5020, $P5018
    goto if3083_end6568
  if3083_else6567:
    null $P5019
    set $P5020, $P5019
  if3083_end6568:
    unless_null $P5020, vivi_30846570
    nqp_get_sc_object $P5021, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5020, $P5021
  vivi_30846570:
    if $P5020 goto unless3082_end6566 
.annotate 'line', 2896
    new $P5024, 'ExceptionHandler'
    set_label $P5024, catch_handler_30926583
    $P5024.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5024
    .const 'Sub' $P5022 = 'cuid_498_1365879995.227' 
    capture_lex $P5022
    $P5023 = $P5022()
    set $P5025, $P5023
    pop_eh 
    goto skip_handler_30916582
  catch_handler_30926583:
    .get_results ($P5024) 
    set $I10001, 1
    set $P5024["handled"], $I10001
    nqp_get_sc_object $P10001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    finalize $P5024
    pop_upto_eh $P5024
    pop_eh 
    set $P5025, $P10001
    goto skip_handler_30916582
  skip_handler_30916582:
  unless3082_end6566:
    set $P5033, $P101
    if $P101 goto unless3093_end6585 
.annotate 'line', 2904
.annotate 'line', 2905
    nqp_get_sc_object $P5026, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    unless_null _lex_param_1, fallback6588
    nqp_get_sc_object $P5027, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5027
  fallback6588:
    set fb_tmp_677, _lex_param_1
    repr_defined $I5004, fb_tmp_677
    unless $I5004 goto if3094_else6586 
    set $P5028, fb_tmp_677["name"]
    set $P5030, $P5028
    goto if3094_end6587
  if3094_else6586:
    null $P5029
    set $P5030, $P5029
  if3094_end6587:
    unless_null $P5030, vivi_30956589
    nqp_get_sc_object $P5031, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5030, $P5031
  vivi_30956589:
    set $S5002, $P5030
    $P5032 = $P5026."new"($S5002 :named("name"), "lexical" :named("scope"))
    set $P101, $P5032
    set $P5033, $P101
  unless3093_end6585:
    goto if3076_end6555
  if3076_else6554:
    .const 'Sub' $P5034 = 'cuid_500_1365879995.227' 
    capture_lex $P5034
    $P5035 = $P5034()
  if3076_end6555:
    set $P102, $P101
    unless_null _lex_param_1, fallback6618
    nqp_get_sc_object $P5036, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5036
  fallback6618:
    set fb_tmp_682, _lex_param_1
    repr_defined $I5005, fb_tmp_682
    unless $I5005 goto if3111_else6616 
    set $P5037, fb_tmp_682["args"]
    set $P5039, $P5037
    goto if3111_end6617
  if3111_else6616:
    null $P5038
    set $P5039, $P5038
  if3111_end6617:
    unless_null $P5039, vivi_31126619
    nqp_get_sc_object $P5040, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5039, $P5040
  vivi_31126619:
    unless $P5039 goto if3110_end6615 
.annotate 'line', 2925
.annotate 'line', 2926
    unless_null _lex_param_1, fallback6624
    nqp_get_sc_object $P5041, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5041
  fallback6624:
    set fb_tmp_684, _lex_param_1
    repr_defined $I5007, fb_tmp_684
    unless $I5007 goto if3114_else6622 
    set $P5042, fb_tmp_684["args"]
    set $P5044, $P5042
    goto if3114_end6623
  if3114_else6622:
    null $P5043
    set $P5044, $P5043
  if3114_end6623:
    unless_null $P5044, vivi_31156625
    nqp_get_sc_object $P5045, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5044, $P5045
  vivi_31156625:
    set fb_tmp_683, $P5044
    repr_defined $I5006, fb_tmp_683
    unless $I5006 goto if3113_else6620 
    set $P5046, fb_tmp_683[0]
    set $P5048, $P5046
    goto if3113_end6621
  if3113_else6620:
    null $P5047
    set $P5048, $P5047
  if3113_end6621:
    unless_null $P5048, vivi_31166626
    nqp_get_sc_object $P5049, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5048, $P5049
  vivi_31166626:
    $P5050 = $P5048."ast"()
    set $P102, $P5050
.annotate 'line', 2927
    $P5051 = $P102."unshift"($P101)
  if3110_end6615:
.annotate 'line', 2929
    $P5052 = _lex_param_1."!make"($P102)
    .return ($P5052) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_498_1365879995.227") :anon :lex :outer("cuid_321_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2897
    .lex "$sym", $P101 
    .local pmc fb_tmp_675 
    .local pmc fb_tmp_676 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
.annotate 'line', 2898
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback6571
    nqp_get_sc_object $P5004, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5003, $P5004
    set fb_tmp_675, $P5003
    repr_defined $I5001, fb_tmp_675
    unless $I5001 goto if3085_else6572 
    set $P5005, fb_tmp_675["$W"]
    set $P5007, $P5005
    goto if3085_end6573
  if3085_else6572:
    null $P5006
    set $P5007, $P5006
  if3085_end6573:
    unless_null $P5007, vivi_30866574
    nqp_get_sc_object $P5008, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5007, $P5008
  vivi_30866574:
    unless_null $P5007, vivi_30876575
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_30876575:
    set $P5002, $P5007
  fallback6571:
    new $P5010, 'QRPA'
    find_lex $P5011, "$/"
    unless_null $P5011, fallback6578
    nqp_get_sc_object $P5012, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5011, $P5012
  fallback6578:
    set fb_tmp_676, $P5011
    repr_defined $I5002, fb_tmp_676
    unless $I5002 goto if3088_else6576 
    set $P5013, fb_tmp_676["name"]
    set $P5015, $P5013
    goto if3088_end6577
  if3088_else6576:
    null $P5014
    set $P5015, $P5014
  if3088_end6577:
    unless_null $P5015, vivi_30896579
    nqp_get_sc_object $P5016, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5015, $P5016
  vivi_30896579:
    set $S5001, $P5015
    box $P5017, $S5001
    push $P5010, $P5017
    $P5018 = $P5002."find_sym"($P5010)
    set $P101, $P5018
    nqp_get_sc_for_object $P5019, $P101
    isnull $I5003, $P5019
    box $P5023, $I5003
    set $P5022, $P5023
    if $I5003 goto unless3090_end6581 
.annotate 'line', 2899
.annotate 'line', 2900
    nqp_get_sc_object $P5020, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 61
    $P5021 = $P5020."new"($P101 :named("value"))
    store_lex "$var", $P5021
    set $P5022, $P5021
  unless3090_end6581:
    .return ($P5022) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_500_1365879995.227") :anon :lex :outer("cuid_321_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2908
    .const 'Sub' $P5027 = 'cuid_499_1365879995.227' 
    capture_lex $P5027 
    .lex "@ns", $P101 
    .local pmc fb_tmp_678 
    .local pmc fb_tmp_679 
    .local pmc fb_tmp_680 
    new $P5001, 'QRPA'
    set $P101, $P5001
    find_lex $P5003, "$/"
    unless_null $P5003, fallback6594
    nqp_get_sc_object $P5004, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5003, $P5004
  fallback6594:
    set fb_tmp_679, $P5003
    repr_defined $I5002, fb_tmp_679
    unless $I5002 goto if3097_else6592 
    set $P5005, fb_tmp_679["name"]
    set $P5007, $P5005
    goto if3097_end6593
  if3097_else6592:
    null $P5006
    set $P5007, $P5006
  if3097_end6593:
    unless_null $P5007, vivi_30986595
    nqp_get_sc_object $P5008, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5007, $P5008
  vivi_30986595:
    set fb_tmp_678, $P5007
    repr_defined $I5001, fb_tmp_678
    unless $I5001 goto if3096_else6590 
    set $P5009, fb_tmp_678["identifier"]
    set $P5011, $P5009
    goto if3096_end6591
  if3096_else6590:
    null $P5010
    set $P5011, $P5010
  if3096_end6591:
    unless_null $P5011, vivi_30996596
    nqp_get_sc_object $P5012, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5011, $P5012
  vivi_30996596:
    repr_clone $P5002, $P5011
    set $P101, $P5002
    find_lex $P5013, "$/"
    unless_null $P5013, fallback6601
    nqp_get_sc_object $P5014, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5013, $P5014
  fallback6601:
    set fb_tmp_680, $P5013
    repr_defined $I5003, fb_tmp_680
    unless $I5003 goto if3101_else6599 
    set $P5015, fb_tmp_680["args"]
    set $P5017, $P5015
    goto if3101_end6600
  if3101_else6599:
    null $P5016
    set $P5017, $P5016
  if3101_end6600:
    unless_null $P5017, vivi_31026602
    nqp_get_sc_object $P5018, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5017, $P5018
  vivi_31026602:
    if $P5017 goto unless3100_end6598 
.annotate 'line', 2910
    new $P5021, 'ExceptionHandler'
    set_label $P5021, catch_handler_31086611
    $P5021.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5021
    .const 'Sub' $P5019 = 'cuid_499_1365879995.227' 
    capture_lex $P5019
    $P5020 = $P5019()
    set $P5022, $P5020
    pop_eh 
    goto skip_handler_31076610
  catch_handler_31086611:
    .get_results ($P5021) 
    set $I10001, 1
    set $P5021["handled"], $I10001
    nqp_get_sc_object $P10001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    finalize $P5021
    pop_upto_eh $P5021
    pop_eh 
    set $P5022, $P10001
    goto skip_handler_31076610
  skip_handler_31076610:
  unless3100_end6598:
    find_lex $P5023, "$var"
    set $P5026, $P5023
    if $P5023 goto unless3109_end6613 
.annotate 'line', 2918
.annotate 'line', 2919
    find_lex $P5024, "$/"
    $P5025 = "&lexical_package_lookup"($P101, $P5024)
    store_lex "$var", $P5025
    set $P5026, $P5025
  unless3109_end6613:
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_499_1365879995.227") :anon :lex :outer("cuid_500_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2911
    .lex "$sym", $P101 
    .local pmc fb_tmp_681 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
.annotate 'line', 2912
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback6603
    nqp_get_sc_object $P5004, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5003, $P5004
    set fb_tmp_681, $P5003
    repr_defined $I5001, fb_tmp_681
    unless $I5001 goto if3103_else6604 
    set $P5005, fb_tmp_681["$W"]
    set $P5007, $P5005
    goto if3103_end6605
  if3103_else6604:
    null $P5006
    set $P5007, $P5006
  if3103_end6605:
    unless_null $P5007, vivi_31046606
    nqp_get_sc_object $P5008, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5007, $P5008
  vivi_31046606:
    unless_null $P5007, vivi_31056607
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_31056607:
    set $P5002, $P5007
  fallback6603:
    find_lex $P5010, "@ns"
    $P5011 = $P5002."find_sym"($P5010)
    set $P101, $P5011
    nqp_get_sc_for_object $P5012, $P101
    isnull $I5002, $P5012
    box $P5016, $I5002
    set $P5015, $P5016
    if $I5002 goto unless3106_end6609 
.annotate 'line', 2913
.annotate 'line', 2914
    nqp_get_sc_object $P5013, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 61
    $P5014 = $P5013."new"($P101 :named("value"))
    store_lex "$var", $P5014
    set $P5015, $P5014
  unless3106_end6609:
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<pir::op>" :subid("cuid_322_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2932
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "@args", $P101 
    .lex "$pirop", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_685 
    .local pmc fb_tmp_686 
    .local pmc fb_tmp_687 
    .local pmc fb_tmp_688 
    new $P5001, 'QRPA'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
    unless_null _lex_param_1, fallback6631
    nqp_get_sc_object $P5003, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5003
  fallback6631:
    set fb_tmp_685, _lex_param_1
    repr_defined $I5001, fb_tmp_685
    unless $I5001 goto if3118_else6629 
    set $P5004, fb_tmp_685["args"]
    set $P5006, $P5004
    goto if3118_end6630
  if3118_else6629:
    null $P5005
    set $P5006, $P5005
  if3118_end6630:
    unless_null $P5006, vivi_31196632
    nqp_get_sc_object $P5007, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5006, $P5007
  vivi_31196632:
    unless $P5006 goto if3117_else6627 
.annotate 'line', 2933
    unless_null _lex_param_1, fallback6637
    nqp_get_sc_object $P5008, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5008
  fallback6637:
    set fb_tmp_687, _lex_param_1
    repr_defined $I5003, fb_tmp_687
    unless $I5003 goto if3121_else6635 
    set $P5009, fb_tmp_687["args"]
    set $P5011, $P5009
    goto if3121_end6636
  if3121_else6635:
    null $P5010
    set $P5011, $P5010
  if3121_end6636:
    unless_null $P5011, vivi_31226638
    nqp_get_sc_object $P5012, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5011, $P5012
  vivi_31226638:
    set fb_tmp_686, $P5011
    repr_defined $I5002, fb_tmp_686
    unless $I5002 goto if3120_else6633 
    set $P5013, fb_tmp_686[0]
    set $P5015, $P5013
    goto if3120_end6634
  if3120_else6633:
    null $P5014
    set $P5015, $P5014
  if3120_end6634:
    unless_null $P5015, vivi_31236639
    nqp_get_sc_object $P5016, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5015, $P5016
  vivi_31236639:
    $P5017 = $P5015."ast"()
    $P5018 = $P5017."list"()
    set $P5020, $P5018
    goto if3117_end6628
  if3117_else6627:
    new $P5019, 'QRPA'
    set $P5020, $P5019
  if3117_end6628:
    set $P101, $P5020
    unless_null _lex_param_1, fallback6642
    nqp_get_sc_object $P5021, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5021
  fallback6642:
    set fb_tmp_688, _lex_param_1
    repr_defined $I5004, fb_tmp_688
    unless $I5004 goto if3124_else6640 
    set $P5022, fb_tmp_688["op"]
    set $P5024, $P5022
    goto if3124_end6641
  if3124_else6640:
    null $P5023
    set $P5024, $P5023
  if3124_end6641:
    unless_null $P5024, vivi_31256643
    nqp_get_sc_object $P5025, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5024, $P5025
  vivi_31256643:
    set $S5001, $P5024
    box $P5026, $S5001
    set $P102, $P5026
    set $S5003, $P102
    split $P5027, "__", $S5003
    join $S5002, " ", $P5027
    box $P5028, $S5002
    set $P102, $P5028
.annotate 'line', 2936
    nqp_get_sc_object $P5029, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 89
    $P5030 = $P5029."new"($P101 :flat, $P102 :named("pirop"), _lex_param_1 :named("node"))
    $P5031 = _lex_param_1."!make"($P5030)
    .return ($P5031) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<pir::const>" :subid("cuid_323_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2939
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_689 
.annotate 'line', 2940
    nqp_get_sc_object $P5001, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 89
    unless_null _lex_param_1, fallback6646
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5002
  fallback6646:
    set fb_tmp_689, _lex_param_1
    repr_defined $I5001, fb_tmp_689
    unless $I5001 goto if3126_else6644 
    set $P5003, fb_tmp_689["const"]
    set $P5005, $P5003
    goto if3126_end6645
  if3126_else6644:
    null $P5004
    set $P5005, $P5004
  if3126_end6645:
    unless_null $P5005, vivi_31276647
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5005, $P5006
  vivi_31276647:
    set $S5001, $P5005
    $P5007 = $P5001."new"($S5001 :named("pirconst"))
    $P5008 = _lex_param_1."!make"($P5007)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<nqp::op>" :subid("cuid_324_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2943
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$op", $P101 
    .lex "@args", $P102 
    .lex "$past", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_690 
    .local pmc fb_tmp_691 
    .local pmc fb_tmp_692 
    .local pmc fb_tmp_693 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    new $P5002, 'QRPA'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P103, $P5003
    unless_null _lex_param_1, fallback6650
    nqp_get_sc_object $P5004, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5004
  fallback6650:
    set fb_tmp_690, _lex_param_1
    repr_defined $I5001, fb_tmp_690
    unless $I5001 goto if3128_else6648 
    set $P5005, fb_tmp_690["op"]
    set $P5007, $P5005
    goto if3128_end6649
  if3128_else6648:
    null $P5006
    set $P5007, $P5006
  if3128_end6649:
    unless_null $P5007, vivi_31296651
    nqp_get_sc_object $P5008, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5007, $P5008
  vivi_31296651:
    set $S5001, $P5007
    box $P5009, $S5001
    set $P101, $P5009
    unless_null _lex_param_1, fallback6656
    nqp_get_sc_object $P5010, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5010
  fallback6656:
    set fb_tmp_691, _lex_param_1
    repr_defined $I5002, fb_tmp_691
    unless $I5002 goto if3131_else6654 
    set $P5011, fb_tmp_691["args"]
    set $P5013, $P5011
    goto if3131_end6655
  if3131_else6654:
    null $P5012
    set $P5013, $P5012
  if3131_end6655:
    unless_null $P5013, vivi_31326657
    nqp_get_sc_object $P5014, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5013, $P5014
  vivi_31326657:
    unless $P5013 goto if3130_else6652 
.annotate 'line', 2945
    unless_null _lex_param_1, fallback6662
    nqp_get_sc_object $P5015, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5015
  fallback6662:
    set fb_tmp_693, _lex_param_1
    repr_defined $I5004, fb_tmp_693
    unless $I5004 goto if3134_else6660 
    set $P5016, fb_tmp_693["args"]
    set $P5018, $P5016
    goto if3134_end6661
  if3134_else6660:
    null $P5017
    set $P5018, $P5017
  if3134_end6661:
    unless_null $P5018, vivi_31356663
    nqp_get_sc_object $P5019, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5018, $P5019
  vivi_31356663:
    set fb_tmp_692, $P5018
    repr_defined $I5003, fb_tmp_692
    unless $I5003 goto if3133_else6658 
    set $P5020, fb_tmp_692[0]
    set $P5022, $P5020
    goto if3133_end6659
  if3133_else6658:
    null $P5021
    set $P5022, $P5021
  if3133_end6659:
    unless_null $P5022, vivi_31366664
    nqp_get_sc_object $P5023, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5022, $P5023
  vivi_31366664:
    $P5024 = $P5022."ast"()
    $P5025 = $P5024."list"()
    set $P5027, $P5025
    goto if3130_end6653
  if3130_else6652:
    new $P5026, 'QRPA'
    set $P5027, $P5026
  if3130_end6653:
    set $P102, $P5027
.annotate 'line', 2946
    nqp_get_sc_object $P5028, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    $P5029 = $P5028."new"($P102 :flat, $P101 :named("op"), _lex_param_1 :named("node"))
    set $P103, $P5029
.annotate 'line', 2947
    $P5030 = _lex_param_1."!make"($P103)
    .return ($P5030) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<nqp::const>" :subid("cuid_325_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2950
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_694 
.annotate 'line', 2951
    nqp_get_sc_object $P5001, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    unless_null _lex_param_1, fallback6667
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5002
  fallback6667:
    set fb_tmp_694, _lex_param_1
    repr_defined $I5001, fb_tmp_694
    unless $I5001 goto if3137_else6665 
    set $P5003, fb_tmp_694["const"]
    set $P5005, $P5003
    goto if3137_end6666
  if3137_else6665:
    null $P5004
    set $P5005, $P5004
  if3137_end6666:
    unless_null $P5005, vivi_31386668
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5005, $P5006
  vivi_31386668:
    set $S5001, $P5005
    $P5007 = $P5001."new"("const" :named("op"), $S5001 :named("name"))
    $P5008 = _lex_param_1."!make"($P5007)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<onlystar>" :subid("cuid_326_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2954
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$dc_name", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_695 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
.annotate 'line', 2955
    nqp_get_sc_object $P5002, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 12
    $P5003 = $P5002."unique"("dispatch_cap")
    set $P101, $P5003
.annotate 'line', 2956
    nqp_get_sc_object $P5004, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 93
.annotate 'line', 2957
    nqp_get_sc_object $P5005, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 2959
    nqp_get_sc_object $P5006, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5007 = $P5006."new"($P101 :named("name"), "local" :named("scope"), "var" :named("decl"))
.annotate 'line', 2960
    nqp_get_sc_object $P5008, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5009 = $P5008."new"("CURRENT_DISPATCH_CAPTURE" :named("name"), "lexical" :named("scope"))
    $P5010 = $P5005."new"($P5007, $P5009, "bind" :named("op"))
.annotate 'line', 2962
    nqp_get_sc_object $P5011, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 2964
    nqp_get_sc_object $P5012, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 2966
    nqp_get_sc_object $P5013, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 2968
    nqp_get_sc_object $P5014, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
.annotate 'line', 2970
    nqp_get_sc_object $P5015, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5016 = $P5015."new"("&*CURRENT_DISPATCHER" :named("name"), "lexical" :named("scope"))
.annotate 'line', 2971
    nqp_get_sc_object $P5017, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 61
    find_dynamic_lex $P5018, "$*W"
    unless_null $P5018, fallback6669
    nqp_get_sc_object $P5020, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5019, $P5020
    set fb_tmp_695, $P5019
    repr_defined $I5001, fb_tmp_695
    unless $I5001 goto if3139_else6670 
    set $P5021, fb_tmp_695["$W"]
    set $P5023, $P5021
    goto if3139_end6671
  if3139_else6670:
    null $P5022
    set $P5023, $P5022
  if3139_end6671:
    unless_null $P5023, vivi_31406672
    nqp_get_sc_object $P5024, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5023, $P5024
  vivi_31406672:
    unless_null $P5023, vivi_31416673
    die "Contextual $*W not found"
    box $P5025, "Contextual $*W not found"
    set $P5023, $P5025
  vivi_31416673:
    set $P5018, $P5023
  fallback6669:
    new $P5026, 'QRPA'
    box $P5027, "NQPRoutine"
    push $P5026, $P5027
    $P5028 = $P5018."find_sym"($P5026)
    $P5029 = $P5017."new"($P5028 :named("value"))
    $P5030 = $P5014."new"($P5016, $P5029, "$!dispatch_cache" :named("name"), "attribute" :named("scope"))
.annotate 'line', 2973
    nqp_get_sc_object $P5031, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5032 = $P5031."new"($P101 :named("name"), "local" :named("scope"))
    $P5033 = $P5013."new"($P5030, $P5032, "multicachefind" :named("op"))
.annotate 'line', 2975
    nqp_get_sc_object $P5034, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 2977
    nqp_get_sc_object $P5035, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5036 = $P5035."new"("&*CURRENT_DISPATCHER" :named("name"), "lexical" :named("scope"))
.annotate 'line', 2978
    nqp_get_sc_object $P5037, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5038 = $P5037."new"($P101 :named("name"), "local" :named("scope"))
    $P5039 = $P5034."new"($P5036, $P5038, "callmethod" :named("op"), "dispatch" :named("name"))
    $P5040 = $P5012."new"($P5033, $P5039, "ifnull" :named("op"))
.annotate 'line', 2981
    nqp_get_sc_object $P5041, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5042 = $P5041."new"($P101 :named("name"), "local" :named("scope"))
    $P5043 = $P5011."new"($P5040, $P5042, "invokewithcapture" :named("op"))
    $P5044 = $P5004."new"($P5010, $P5043)
    $P5045 = _lex_param_1."!make"($P5044)
    .return ($P5045) 
.end
.HLL "nqp"
.namespace []
.sub "args" :subid("cuid_327_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2985
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_696 
    unless_null _lex_param_1, fallback6676
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback6676:
    set fb_tmp_696, _lex_param_1
    repr_defined $I5001, fb_tmp_696
    unless $I5001 goto if3142_else6674 
    set $P5002, fb_tmp_696["arglist"]
    set $P5004, $P5002
    goto if3142_end6675
  if3142_else6674:
    null $P5003
    set $P5004, $P5003
  if3142_end6675:
    unless_null $P5004, vivi_31436677
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_31436677:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "arglist" :subid("cuid_328_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2987
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5058 = 'cuid_502_1365879995.227' 
    capture_lex $P5058 
    .lex "$past", $P101 
    .lex "$i", $P102 
    .lex "$n", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_697 
    .local pmc fb_tmp_699 
    .local pmc fb_tmp_700 
    .local pmc fb_tmp_701 
    .local pmc fb_tmp_702 
    .local pmc fb_tmp_703 
    .local pmc fb_tmp_704 
    .local pmc fb_tmp_705 
    .local pmc fb_tmp_706 
    .local pmc tmp_2 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P103, $P5003
.annotate 'line', 2988
    nqp_get_sc_object $P5004, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    $P5005 = $P5004."new"("call" :named("op"), _lex_param_1 :named("node"))
    set $P101, $P5005
    unless_null _lex_param_1, fallback6682
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5006
  fallback6682:
    set fb_tmp_697, _lex_param_1
    repr_defined $I5001, fb_tmp_697
    unless $I5001 goto if3145_else6680 
    set $P5007, fb_tmp_697["EXPR"]
    set $P5009, $P5007
    goto if3145_end6681
  if3145_else6680:
    null $P5008
    set $P5009, $P5008
  if3145_end6681:
    unless_null $P5009, vivi_31466683
    nqp_get_sc_object $P5010, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5009, $P5010
  vivi_31466683:
    unless $P5009 goto if3144_end6679 
    .const 'Sub' $P5011 = 'cuid_502_1365879995.227' 
    capture_lex $P5011
    $P5012 = $P5011()
  if3144_end6679:
    box $P5013, 0
    set $P102, $P5013
.annotate 'line', 2997
    $P5014 = $P101."list"()
    set $N5001, $P5014
    box $P5015, $N5001
    set $P103, $P5015
  while3152_test6697:
    set $N5002, $P102
    set $N5003, $P103
    islt $I5002, $N5002, $N5003
    box $P5056, $I5002
    set $P5055, $P5056
    unless $I5002 goto while3152_done6701 
  while3152_redo6699:
.annotate 'line', 2998
    set fb_tmp_699, $P101
    repr_defined $I5004, fb_tmp_699
    unless $I5004 goto if3155_else6706 
    set $I5005, $P102
    set $P5016, fb_tmp_699[$I5005]
    set $P5018, $P5016
    goto if3155_end6707
  if3155_else6706:
    null $P5017
    set $P5018, $P5017
  if3155_end6707:
    unless_null $P5018, vivi_31566708
    nqp_get_sc_object $P5019, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5018, $P5019
  vivi_31566708:
    nqp_get_sc_object $P5020, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    type_check $I5003, $P5018, $P5020
    set $I5009, $I5003
    unless $I5003 goto if3154_end6705 
.annotate 'line', 2999
    set fb_tmp_700, $P101
    repr_defined $I5007, fb_tmp_700
    unless $I5007 goto if3157_else6709 
    set $I5008, $P102
    set $P5021, fb_tmp_700[$I5008]
    set $P5023, $P5021
    goto if3157_end6710
  if3157_else6709:
    null $P5022
    set $P5023, $P5022
  if3157_end6710:
    unless_null $P5023, vivi_31586711
    nqp_get_sc_object $P5024, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5023, $P5024
  vivi_31586711:
    $P5025 = $P5023."name"()
    set $S5001, $P5025
    iseq $I5006, $S5001, "&prefix:<|>"
    set $I5009, $I5006
  if3154_end6705:
    unless $I5009 goto if3153_end6703 
    set $I5010, $P102
    set fb_tmp_702, $P101
    repr_defined $I5012, fb_tmp_702
    unless $I5012 goto if3160_else6714 
    set $I5013, $P102
    set $P5026, fb_tmp_702[$I5013]
    set $P5028, $P5026
    goto if3160_end6715
  if3160_else6714:
    null $P5027
    set $P5028, $P5027
  if3160_end6715:
    unless_null $P5028, vivi_31616716
    nqp_get_sc_object $P5029, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5028, $P5029
  vivi_31616716:
    set fb_tmp_701, $P5028
    repr_defined $I5011, fb_tmp_701
    unless $I5011 goto if3159_else6712 
    set $P5030, fb_tmp_701[0]
    set $P5032, $P5030
    goto if3159_end6713
  if3159_else6712:
    null $P5031
    set $P5032, $P5031
  if3159_end6713:
    unless_null $P5032, vivi_31626717
    nqp_get_sc_object $P5033, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5032, $P5033
  vivi_31626717:
    set $P101[$I5010], $P5032
.annotate 'line', 3001
    set fb_tmp_703, $P101
    repr_defined $I5014, fb_tmp_703
    unless $I5014 goto if3163_else6718 
    set $I5015, $P102
    set $P5034, fb_tmp_703[$I5015]
    set $P5036, $P5034
    goto if3163_end6719
  if3163_else6718:
    null $P5035
    set $P5036, $P5035
  if3163_end6719:
    unless_null $P5036, vivi_31646720
    nqp_get_sc_object $P5037, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5036, $P5037
  vivi_31646720:
    $P5036."flat"(1)
    set fb_tmp_704, $P101
    repr_defined $I5017, fb_tmp_704
    unless $I5017 goto if3167_else6725 
    set $I5018, $P102
    set $P5038, fb_tmp_704[$I5018]
    set $P5040, $P5038
    goto if3167_end6726
  if3167_else6725:
    null $P5039
    set $P5040, $P5039
  if3167_end6726:
    unless_null $P5040, vivi_31686727
    nqp_get_sc_object $P5041, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5040, $P5041
  vivi_31686727:
    nqp_get_sc_object $P5042, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    type_check $I5016, $P5040, $P5042
    set $I5022, $I5016
    unless $I5016 goto if3166_end6724 
.annotate 'line', 3003
    set fb_tmp_705, $P101
    repr_defined $I5020, fb_tmp_705
    unless $I5020 goto if3169_else6728 
    set $I5021, $P102
    set $P5043, fb_tmp_705[$I5021]
    set $P5045, $P5043
    goto if3169_end6729
  if3169_else6728:
    null $P5044
    set $P5045, $P5044
  if3169_end6729:
    unless_null $P5045, vivi_31706730
    nqp_get_sc_object $P5046, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5045, $P5046
  vivi_31706730:
    $P5047 = $P5045."name"()
    set $S5003, $P5047
    substr $S5002, $S5003, 0, 1
    iseq $I5019, $S5002, "%"
    set $I5022, $I5019
  if3166_end6724:
    box $P5054, $I5022
    set $P5053, $P5054
    unless $I5022 goto if3165_end6722 
.annotate 'line', 3002
    set fb_tmp_706, $P101
    repr_defined $I5023, fb_tmp_706
    unless $I5023 goto if3171_else6731 
    set $I5024, $P102
    set $P5048, fb_tmp_706[$I5024]
    set $P5050, $P5048
    goto if3171_end6732
  if3171_else6731:
    null $P5049
    set $P5050, $P5049
  if3171_end6732:
    unless_null $P5050, vivi_31726733
    nqp_get_sc_object $P5051, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5050, $P5051
  vivi_31726733:
    $P5052 = $P5050."named"(1)
    set $P5053, $P5052
  if3165_end6722:
  if3153_end6703:
    set tmp_2, $P102
    set $N5005, tmp_2
    set $N5006, 1
    add $N5004, $N5005, $N5006
    box $P5055, $N5004
    set $P102, $P5055
    set $P5055, tmp_2
    goto while3152_test6697 
  while3152_done6701:
.annotate 'line', 3007
    $P5057 = _lex_param_1."!make"($P101)
    .return ($P5057) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_502_1365879995.227") :anon :lex :outer("cuid_328_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2989
    .const 'Sub' $P5021 = 'cuid_501_1365879995.227' 
    capture_lex $P5021 
    .lex "$expr", $P101 
    .local pmc fb_tmp_698 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
.annotate 'line', 2990
    find_lex $P5002, "$/"
    unless_null $P5002, fallback6686
    nqp_get_sc_object $P5003, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5002, $P5003
  fallback6686:
    set fb_tmp_698, $P5002
    repr_defined $I5001, fb_tmp_698
    unless $I5001 goto if3147_else6684 
    set $P5004, fb_tmp_698["EXPR"]
    set $P5006, $P5004
    goto if3147_end6685
  if3147_else6684:
    null $P5005
    set $P5006, $P5005
  if3147_end6685:
    unless_null $P5006, vivi_31486687
    nqp_get_sc_object $P5007, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5006, $P5007
  vivi_31486687:
    $P5008 = $P5006."ast"()
    set $P101, $P5008
    nqp_get_sc_object $P5009, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    type_check $I5002, $P101, $P5009
    set $I5004, $I5002
    unless $I5002 goto if3151_end6693 
.annotate 'line', 2991
    $P5010 = $P101."name"()
    set $S5001, $P5010
    iseq $I5003, $S5001, "&infix:<,>"
    set $I5004, $I5003
  if3151_end6693:
    set $I5006, $I5004
    unless $I5004 goto if3150_end6691 
    $P5011 = $P101."named"()
    isfalse $I5005, $P5011
    set $I5006, $I5005
  if3150_end6691:
    unless $I5006 goto if3149_else6688 
.annotate 'line', 2992
    $P5015 = $P101."list"()
    set $P5012, $P5015
    iter $P5014, $P5015
  for_next6694:
    unless $P5014, for_done6696
    shift $P5017, $P5014
  for_redo6695:
    .const 'Sub' $P5016 = 'cuid_501_1365879995.227' 
    capture_lex $P5016
    $P5012 = $P5016($P5017)
    goto for_next6694
  for_done6696:
    set $P5020, $P5012
    goto if3149_end6689
  if3149_else6688:
.annotate 'line', 2994
    find_lex $P5018, "$past"
    $P5019 = $P5018."push"($P101)
    set $P5020, $P5019
  if3149_end6689:
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_501_1365879995.227") :anon :lex :outer("cuid_502_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 2992
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "$past"
    $P5002 = $P5001."push"(_lex_param_0)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<multi_declarator>" :subid("cuid_329_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3010
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_707 
    unless_null _lex_param_1, fallback6736
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback6736:
    set fb_tmp_707, _lex_param_1
    repr_defined $I5001, fb_tmp_707
    unless $I5001 goto if3173_else6734 
    set $P5002, fb_tmp_707["multi_declarator"]
    set $P5004, $P5002
    goto if3173_end6735
  if3173_else6734:
    null $P5003
    set $P5004, $P5003
  if3173_end6735:
    unless_null $P5004, vivi_31746737
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_31746737:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<value>" :subid("cuid_330_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3012
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_708 
    unless_null _lex_param_1, fallback6740
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback6740:
    set fb_tmp_708, _lex_param_1
    repr_defined $I5001, fb_tmp_708
    unless $I5001 goto if3175_else6738 
    set $P5002, fb_tmp_708["value"]
    set $P5004, $P5002
    goto if3175_end6739
  if3175_else6738:
    null $P5003
    set $P5004, $P5003
  if3175_end6739:
    unless_null $P5004, vivi_31766741
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_31766741:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<( )>" :subid("cuid_331_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3014
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_709 
    .local pmc fb_tmp_710 
    .local pmc fb_tmp_711 
.annotate 'line', 3015
    unless_null _lex_param_1, fallback6746
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback6746:
    set fb_tmp_709, _lex_param_1
    repr_defined $I5001, fb_tmp_709
    unless $I5001 goto if3178_else6744 
    set $P5002, fb_tmp_709["EXPR"]
    set $P5004, $P5002
    goto if3178_end6745
  if3178_else6744:
    null $P5003
    set $P5004, $P5003
  if3178_end6745:
    unless_null $P5004, vivi_31796747
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_31796747:
    unless $P5004 goto if3177_else6742 
.annotate 'line', 3016
    unless_null _lex_param_1, fallback6752
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5006
  fallback6752:
    set fb_tmp_711, _lex_param_1
    repr_defined $I5003, fb_tmp_711
    unless $I5003 goto if3181_else6750 
    set $P5007, fb_tmp_711["EXPR"]
    set $P5009, $P5007
    goto if3181_end6751
  if3181_else6750:
    null $P5008
    set $P5009, $P5008
  if3181_end6751:
    unless_null $P5009, vivi_31826753
    nqp_get_sc_object $P5010, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5009, $P5010
  vivi_31826753:
    set fb_tmp_710, $P5009
    repr_defined $I5002, fb_tmp_710
    unless $I5002 goto if3180_else6748 
    set $P5011, fb_tmp_710[0]
    set $P5013, $P5011
    goto if3180_end6749
  if3180_else6748:
    null $P5012
    set $P5013, $P5012
  if3180_end6749:
    unless_null $P5013, vivi_31836754
    nqp_get_sc_object $P5014, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5013, $P5014
  vivi_31836754:
    $P5015 = $P5013."ast"()
    set $P5018, $P5015
    goto if3177_end6743
  if3177_else6742:
.annotate 'line', 3017
    nqp_get_sc_object $P5016, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    $P5017 = $P5016."new"("list" :named("op"), _lex_param_1 :named("node"))
    set $P5018, $P5017
  if3177_end6743:
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<[ ]>" :subid("cuid_332_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3020
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_712 
    .local pmc fb_tmp_713 
    .local pmc fb_tmp_714 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    unless_null _lex_param_1, fallback6759
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5002
  fallback6759:
    set fb_tmp_712, _lex_param_1
    repr_defined $I5001, fb_tmp_712
    unless $I5001 goto if3185_else6757 
    set $P5003, fb_tmp_712["EXPR"]
    set $P5005, $P5003
    goto if3185_end6758
  if3185_else6757:
    null $P5004
    set $P5005, $P5004
  if3185_end6758:
    unless_null $P5005, vivi_31866760
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5005, $P5006
  vivi_31866760:
    unless $P5005 goto if3184_else6755 
.annotate 'line', 3022
.annotate 'line', 3023
    unless_null _lex_param_1, fallback6765
    nqp_get_sc_object $P5007, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5007
  fallback6765:
    set fb_tmp_714, _lex_param_1
    repr_defined $I5003, fb_tmp_714
    unless $I5003 goto if3188_else6763 
    set $P5008, fb_tmp_714["EXPR"]
    set $P5010, $P5008
    goto if3188_end6764
  if3188_else6763:
    null $P5009
    set $P5010, $P5009
  if3188_end6764:
    unless_null $P5010, vivi_31896766
    nqp_get_sc_object $P5011, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5010, $P5011
  vivi_31896766:
    set fb_tmp_713, $P5010
    repr_defined $I5002, fb_tmp_713
    unless $I5002 goto if3187_else6761 
    set $P5012, fb_tmp_713[0]
    set $P5014, $P5012
    goto if3187_end6762
  if3187_else6761:
    null $P5013
    set $P5014, $P5013
  if3187_end6762:
    unless_null $P5014, vivi_31906767
    nqp_get_sc_object $P5015, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5014, $P5015
  vivi_31906767:
    $P5016 = $P5014."ast"()
    set $P101, $P5016
    nqp_get_sc_object $P5017, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    type_check $I5004, $P101, $P5017
    set $I5006, $I5004
    unless $I5004 goto if3192_end6771 
.annotate 'line', 3024
    $P5018 = $P101."name"()
    set $S5001, $P5018
    iseq $I5005, $S5001, "&infix:<,>"
    set $I5006, $I5005
  if3192_end6771:
    box $P5022, $I5006
    set $P5021, $P5022
    if $I5006 goto unless3191_end6769 
.annotate 'line', 3025
    nqp_get_sc_object $P5019, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    $P5020 = $P5019."new"($P101, "list" :named("op"))
    set $P101, $P5020
    set $P5021, $P101
  unless3191_end6769:
    goto if3184_end6756
  if3184_else6755:
.annotate 'line', 3028
.annotate 'line', 3029
    nqp_get_sc_object $P5023, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    $P5024 = $P5023."new"("list" :named("op"))
    set $P101, $P5024
  if3184_end6756:
.annotate 'line', 3031
    $P101."name"("&circumfix:<[ ]>")
.annotate 'line', 3032
    $P5025 = _lex_param_1."!make"($P101)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<ang>" :subid("cuid_333_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3035
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_715 
    unless_null _lex_param_1, fallback6774
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback6774:
    set fb_tmp_715, _lex_param_1
    repr_defined $I5001, fb_tmp_715
    unless $I5001 goto if3193_else6772 
    set $P5002, fb_tmp_715["quote_EXPR"]
    set $P5004, $P5002
    goto if3193_end6773
  if3193_else6772:
    null $P5003
    set $P5004, $P5003
  if3193_end6773:
    unless_null $P5004, vivi_31946775
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_31946775:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub utf8:"circumfix:sym<\x{ab} \x{bb}>" :subid("cuid_334_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3036
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_716 
    unless_null _lex_param_1, fallback6778
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback6778:
    set fb_tmp_716, _lex_param_1
    repr_defined $I5001, fb_tmp_716
    unless $I5001 goto if3195_else6776 
    set $P5002, fb_tmp_716["quote_EXPR"]
    set $P5004, $P5002
    goto if3195_end6777
  if3195_else6776:
    null $P5003
    set $P5004, $P5003
  if3195_end6777:
    unless_null $P5004, vivi_31966779
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_31966779:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<{ }>" :subid("cuid_335_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3038
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5044 = 'cuid_503_1365879995.227' 
    capture_lex $P5044 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_717 
    .local pmc fb_tmp_718 
    .local pmc fb_tmp_719 
    .local pmc fb_tmp_720 
    .local pmc fb_tmp_722 
    .local pmc fb_tmp_723 
    .local pmc fb_tmp_724 
    .local pmc fb_tmp_725 
    unless_null _lex_param_1, fallback6790
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback6790:
    set fb_tmp_720, _lex_param_1
    repr_defined $I5005, fb_tmp_720
    unless $I5005 goto if3201_else6788 
    set $P5002, fb_tmp_720["pblock"]
    set $P5004, $P5002
    goto if3201_end6789
  if3201_else6788:
    null $P5003
    set $P5004, $P5003
  if3201_end6789:
    unless_null $P5004, vivi_32026791
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_32026791:
    set fb_tmp_719, $P5004
    repr_defined $I5004, fb_tmp_719
    unless $I5004 goto if3200_else6786 
    set $P5006, fb_tmp_719["blockoid"]
    set $P5008, $P5006
    goto if3200_end6787
  if3200_else6786:
    null $P5007
    set $P5008, $P5007
  if3200_end6787:
    unless_null $P5008, vivi_32036792
    nqp_get_sc_object $P5009, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5008, $P5009
  vivi_32036792:
    set fb_tmp_718, $P5008
    repr_defined $I5003, fb_tmp_718
    unless $I5003 goto if3199_else6784 
    set $P5010, fb_tmp_718["statementlist"]
    set $P5012, $P5010
    goto if3199_end6785
  if3199_else6784:
    null $P5011
    set $P5012, $P5011
  if3199_end6785:
    unless_null $P5012, vivi_32046793
    nqp_get_sc_object $P5013, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5012, $P5013
  vivi_32046793:
    set fb_tmp_717, $P5012
    repr_defined $I5002, fb_tmp_717
    unless $I5002 goto if3198_else6782 
    set $P5014, fb_tmp_717["statement"]
    set $P5016, $P5014
    goto if3198_end6783
  if3198_else6782:
    null $P5015
    set $P5016, $P5015
  if3198_end6783:
    unless_null $P5016, vivi_32056794
    nqp_get_sc_object $P5017, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5016, $P5017
  vivi_32056794:
    set $N5001, $P5016
    set $N5002, 0
    isgt $I5001, $N5001, $N5002
    unless $I5001 goto if3197_else6780 
    .const 'Sub' $P5018 = 'cuid_503_1365879995.227' 
    capture_lex $P5018
    $P5019 = $P5018()
    set $P5043, $P5019
    goto if3197_end6781
  if3197_else6780:
    unless_null _lex_param_1, fallback6807
    nqp_get_sc_object $P5020, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5020
  fallback6807:
    set fb_tmp_724, _lex_param_1
    repr_defined $I5008, fb_tmp_724
    unless $I5008 goto if3211_else6805 
    set $P5021, fb_tmp_724["pblock"]
    set $P5023, $P5021
    goto if3211_end6806
  if3211_else6805:
    null $P5022
    set $P5023, $P5022
  if3211_end6806:
    unless_null $P5023, vivi_32126808
    nqp_get_sc_object $P5024, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5023, $P5024
  vivi_32126808:
    set fb_tmp_723, $P5023
    repr_defined $I5007, fb_tmp_723
    unless $I5007 goto if3210_else6803 
    set $P5025, fb_tmp_723["blockoid"]
    set $P5027, $P5025
    goto if3210_end6804
  if3210_else6803:
    null $P5026
    set $P5027, $P5026
  if3210_end6804:
    unless_null $P5027, vivi_32136809
    nqp_get_sc_object $P5028, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5027, $P5028
  vivi_32136809:
    set fb_tmp_722, $P5027
    repr_defined $I5006, fb_tmp_722
    unless $I5006 goto if3209_else6801 
    set $P5029, fb_tmp_722["you_are_here"]
    set $P5031, $P5029
    goto if3209_end6802
  if3209_else6801:
    null $P5030
    set $P5031, $P5030
  if3209_end6802:
    unless_null $P5031, vivi_32146810
    nqp_get_sc_object $P5032, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5031, $P5032
  vivi_32146810:
    unless $P5031 goto if3208_else6799 
.annotate 'line', 3044
.annotate 'line', 3045
    unless_null _lex_param_1, fallback6813
    nqp_get_sc_object $P5033, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5033
  fallback6813:
    set fb_tmp_725, _lex_param_1
    repr_defined $I5009, fb_tmp_725
    unless $I5009 goto if3215_else6811 
    set $P5034, fb_tmp_725["pblock"]
    set $P5036, $P5034
    goto if3215_end6812
  if3215_else6811:
    null $P5035
    set $P5036, $P5035
  if3215_end6812:
    unless_null $P5036, vivi_32166814
    nqp_get_sc_object $P5037, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5036, $P5037
  vivi_32166814:
    $P5038 = $P5036."ast"()
    $P5039 = _lex_param_1."!make"($P5038)
    set $P5042, $P5039
    goto if3208_end6800
  if3208_else6799:
.annotate 'line', 3047
.annotate 'line', 3048
    $P5040 = "&default_for"("%")
    $P5041 = _lex_param_1."!make"($P5040)
    set $P5042, $P5041
  if3208_end6800:
    set $P5043, $P5042
  if3197_end6781:
    .return ($P5043) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_503_1365879995.227") :anon :lex :outer("cuid_335_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3039
    .lex "$past", $P101 
    .local pmc fb_tmp_721 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
.annotate 'line', 3040
    nqp_get_sc_object $P5002, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    find_lex $P5003, "$/"
    unless_null $P5003, fallback6797
    nqp_get_sc_object $P5004, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5003, $P5004
  fallback6797:
    set fb_tmp_721, $P5003
    repr_defined $I5001, fb_tmp_721
    unless $I5001 goto if3206_else6795 
    set $P5005, fb_tmp_721["pblock"]
    set $P5007, $P5005
    goto if3206_end6796
  if3206_else6795:
    null $P5006
    set $P5007, $P5006
  if3206_end6796:
    unless_null $P5007, vivi_32076798
    nqp_get_sc_object $P5008, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5007, $P5008
  vivi_32076798:
    $P5009 = $P5007."ast"()
    $P5010 = $P5002."new"($P5009, "takeclosure" :named("op"))
    set $P101, $P5010
    box $P5011, 1
    set $P101["bareblock"], $P5011
.annotate 'line', 3042
    find_dynamic_lex $P5012, "$/"
    $P5013 = $P5012."!make"($P101)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "semilist" :subid("cuid_336_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3052
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_726 
    unless_null _lex_param_1, fallback6817
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback6817:
    set fb_tmp_726, _lex_param_1
    repr_defined $I5001, fb_tmp_726
    unless $I5001 goto if3217_else6815 
    set $P5002, fb_tmp_726["statement"]
    set $P5004, $P5002
    goto if3217_end6816
  if3217_else6815:
    null $P5003
    set $P5004, $P5003
  if3217_end6816:
    unless_null $P5004, vivi_32186818
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_32186818:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<[ ]>" :subid("cuid_337_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3054
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_727 
.annotate 'line', 3055
    nqp_get_sc_object $P5001, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 80
    unless_null _lex_param_1, fallback6821
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5002
  fallback6821:
    set fb_tmp_727, _lex_param_1
    repr_defined $I5001, fb_tmp_727
    unless $I5001 goto if3219_else6819 
    set $P5003, fb_tmp_727["EXPR"]
    set $P5005, $P5003
    goto if3219_end6820
  if3219_else6819:
    null $P5004
    set $P5005, $P5004
  if3219_end6820:
    unless_null $P5005, vivi_32206822
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5005, $P5006
  vivi_32206822:
    $P5007 = $P5005."ast"()
    $P5008 = "&default_for"("$")
    $P5009 = $P5001."new"($P5007, "positional" :named("scope"), $P5008 :named("fallback"))
    $P5010 = _lex_param_1."!make"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<{ }>" :subid("cuid_338_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3058
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_728 
.annotate 'line', 3059
    nqp_get_sc_object $P5001, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 80
    unless_null _lex_param_1, fallback6825
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5002
  fallback6825:
    set fb_tmp_728, _lex_param_1
    repr_defined $I5001, fb_tmp_728
    unless $I5001 goto if3221_else6823 
    set $P5003, fb_tmp_728["EXPR"]
    set $P5005, $P5003
    goto if3221_end6824
  if3221_else6823:
    null $P5004
    set $P5005, $P5004
  if3221_end6824:
    unless_null $P5005, vivi_32226826
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5005, $P5006
  vivi_32226826:
    $P5007 = $P5005."ast"()
    $P5008 = "&default_for"("$")
    $P5009 = $P5001."new"($P5007, "associative" :named("scope"), $P5008 :named("fallback"))
    $P5010 = _lex_param_1."!make"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<ang>" :subid("cuid_339_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3062
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_729 
.annotate 'line', 3063
    nqp_get_sc_object $P5001, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 80
    unless_null _lex_param_1, fallback6829
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5002
  fallback6829:
    set fb_tmp_729, _lex_param_1
    repr_defined $I5001, fb_tmp_729
    unless $I5001 goto if3223_else6827 
    set $P5003, fb_tmp_729["quote_EXPR"]
    set $P5005, $P5003
    goto if3223_end6828
  if3223_else6827:
    null $P5004
    set $P5005, $P5004
  if3223_end6828:
    unless_null $P5005, vivi_32246830
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5005, $P5006
  vivi_32246830:
    $P5007 = $P5005."ast"()
    $P5008 = "&default_for"("$")
    $P5009 = $P5001."new"($P5007, "associative" :named("scope"), $P5008 :named("fallback"))
    $P5010 = _lex_param_1."!make"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<( )>" :subid("cuid_340_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3066
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_730 
.annotate 'line', 3067
    unless_null _lex_param_1, fallback6833
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback6833:
    set fb_tmp_730, _lex_param_1
    repr_defined $I5001, fb_tmp_730
    unless $I5001 goto if3225_else6831 
    set $P5002, fb_tmp_730["arglist"]
    set $P5004, $P5002
    goto if3225_end6832
  if3225_else6831:
    null $P5003
    set $P5004, $P5003
  if3225_end6832:
    unless_null $P5004, vivi_32266834
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_32266834:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "value" :subid("cuid_341_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3070
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_731 
    .local pmc fb_tmp_732 
    .local pmc fb_tmp_733 
.annotate 'line', 3071
    unless_null _lex_param_1, fallback6839
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback6839:
    set fb_tmp_731, _lex_param_1
    repr_defined $I5001, fb_tmp_731
    unless $I5001 goto if3228_else6837 
    set $P5002, fb_tmp_731["quote"]
    set $P5004, $P5002
    goto if3228_end6838
  if3228_else6837:
    null $P5003
    set $P5004, $P5003
  if3228_end6838:
    unless_null $P5004, vivi_32296840
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_32296840:
    unless $P5004 goto if3227_else6835 
    unless_null _lex_param_1, fallback6843
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5006
  fallback6843:
    set fb_tmp_732, _lex_param_1
    repr_defined $I5002, fb_tmp_732
    unless $I5002 goto if3230_else6841 
    set $P5007, fb_tmp_732["quote"]
    set $P5009, $P5007
    goto if3230_end6842
  if3230_else6841:
    null $P5008
    set $P5009, $P5008
  if3230_end6842:
    unless_null $P5009, vivi_32316844
    nqp_get_sc_object $P5010, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5009, $P5010
  vivi_32316844:
    $P5011 = $P5009."ast"()
    set $P5018, $P5011
    goto if3227_end6836
  if3227_else6835:
    unless_null _lex_param_1, fallback6847
    nqp_get_sc_object $P5012, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5012
  fallback6847:
    set fb_tmp_733, _lex_param_1
    repr_defined $I5003, fb_tmp_733
    unless $I5003 goto if3232_else6845 
    set $P5013, fb_tmp_733["number"]
    set $P5015, $P5013
    goto if3232_end6846
  if3232_else6845:
    null $P5014
    set $P5015, $P5014
  if3232_end6846:
    unless_null $P5015, vivi_32336848
    nqp_get_sc_object $P5016, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5015, $P5016
  vivi_32336848:
    $P5017 = $P5015."ast"()
    set $P5018, $P5017
  if3227_end6836:
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "number" :subid("cuid_342_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3074
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$value", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_734 
    .local pmc fb_tmp_735 
    .local pmc fb_tmp_736 
    .local pmc fb_tmp_737 
    .local pmc fb_tmp_738 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    unless_null _lex_param_1, fallback6853
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5002
  fallback6853:
    set fb_tmp_734, _lex_param_1
    repr_defined $I5001, fb_tmp_734
    unless $I5001 goto if3235_else6851 
    set $P5003, fb_tmp_734["dec_number"]
    set $P5005, $P5003
    goto if3235_end6852
  if3235_else6851:
    null $P5004
    set $P5005, $P5004
  if3235_end6852:
    unless_null $P5005, vivi_32366854
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5005, $P5006
  vivi_32366854:
    unless $P5005 goto if3234_else6849 
.annotate 'line', 3075
    unless_null _lex_param_1, fallback6857
    nqp_get_sc_object $P5007, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5007
  fallback6857:
    set fb_tmp_735, _lex_param_1
    repr_defined $I5002, fb_tmp_735
    unless $I5002 goto if3237_else6855 
    set $P5008, fb_tmp_735["dec_number"]
    set $P5010, $P5008
    goto if3237_end6856
  if3237_else6855:
    null $P5009
    set $P5010, $P5009
  if3237_end6856:
    unless_null $P5010, vivi_32386858
    nqp_get_sc_object $P5011, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5010, $P5011
  vivi_32386858:
    $P5012 = $P5010."ast"()
    set $P5019, $P5012
    goto if3234_end6850
  if3234_else6849:
    unless_null _lex_param_1, fallback6861
    nqp_get_sc_object $P5013, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5013
  fallback6861:
    set fb_tmp_736, _lex_param_1
    repr_defined $I5003, fb_tmp_736
    unless $I5003 goto if3239_else6859 
    set $P5014, fb_tmp_736["integer"]
    set $P5016, $P5014
    goto if3239_end6860
  if3239_else6859:
    null $P5015
    set $P5016, $P5015
  if3239_end6860:
    unless_null $P5016, vivi_32406862
    nqp_get_sc_object $P5017, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5016, $P5017
  vivi_32406862:
    $P5018 = $P5016."ast"()
    set $P5019, $P5018
  if3234_end6850:
    set $P101, $P5019
    unless_null _lex_param_1, fallback6867
    nqp_get_sc_object $P5020, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5020
  fallback6867:
    set fb_tmp_737, _lex_param_1
    repr_defined $I5005, fb_tmp_737
    unless $I5005 goto if3242_else6865 
    set $P5021, fb_tmp_737["sign"]
    set $P5023, $P5021
    goto if3242_end6866
  if3242_else6865:
    null $P5022
    set $P5023, $P5022
  if3242_end6866:
    unless_null $P5023, vivi_32436868
    nqp_get_sc_object $P5024, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5023, $P5024
  vivi_32436868:
    set $S5001, $P5023
    iseq $I5004, $S5001, "-"
    unless $I5004 goto if3241_end6864 
.annotate 'line', 3076
    set $N5002, $P101
    neg $N5001, $N5002
    box $P5025, $N5001
    set $P101, $P5025
  if3241_end6864:
.annotate 'line', 3077
    unless_null _lex_param_1, fallback6873
    nqp_get_sc_object $P5026, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5026
  fallback6873:
    set fb_tmp_738, _lex_param_1
    repr_defined $I5006, fb_tmp_738
    unless $I5006 goto if3245_else6871 
    set $P5027, fb_tmp_738["dec_number"]
    set $P5029, $P5027
    goto if3245_end6872
  if3245_else6871:
    null $P5028
    set $P5029, $P5028
  if3245_end6872:
    unless_null $P5029, vivi_32466874
    nqp_get_sc_object $P5030, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5029, $P5030
  vivi_32466874:
    unless $P5029 goto if3244_else6869 
.annotate 'line', 3078
    nqp_get_sc_object $P5031, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 47
    $P5032 = $P5031."new"($P101 :named("value"))
    set $P5035, $P5032
    goto if3244_end6870
  if3244_else6869:
.annotate 'line', 3079
    nqp_get_sc_object $P5033, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 42
    $P5034 = $P5033."new"($P101 :named("value"))
    set $P5035, $P5034
  if3244_end6870:
    $P5036 = _lex_param_1."!make"($P5035)
    .return ($P5036) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<apos>" :subid("cuid_343_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3082
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_739 
    unless_null _lex_param_1, fallback6877
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback6877:
    set fb_tmp_739, _lex_param_1
    repr_defined $I5001, fb_tmp_739
    unless $I5001 goto if3247_else6875 
    set $P5002, fb_tmp_739["quote_EXPR"]
    set $P5004, $P5002
    goto if3247_end6876
  if3247_else6875:
    null $P5003
    set $P5004, $P5003
  if3247_end6876:
    unless_null $P5004, vivi_32486878
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_32486878:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<dblq>" :subid("cuid_344_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3083
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_740 
    unless_null _lex_param_1, fallback6881
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback6881:
    set fb_tmp_740, _lex_param_1
    repr_defined $I5001, fb_tmp_740
    unless $I5001 goto if3249_else6879 
    set $P5002, fb_tmp_740["quote_EXPR"]
    set $P5004, $P5002
    goto if3249_end6880
  if3249_else6879:
    null $P5003
    set $P5004, $P5003
  if3249_end6880:
    unless_null $P5004, vivi_32506882
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_32506882:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<qq>" :subid("cuid_345_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3084
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_741 
    unless_null _lex_param_1, fallback6885
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback6885:
    set fb_tmp_741, _lex_param_1
    repr_defined $I5001, fb_tmp_741
    unless $I5001 goto if3251_else6883 
    set $P5002, fb_tmp_741["quote_EXPR"]
    set $P5004, $P5002
    goto if3251_end6884
  if3251_else6883:
    null $P5003
    set $P5004, $P5003
  if3251_end6884:
    unless_null $P5004, vivi_32526886
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_32526886:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<q>" :subid("cuid_346_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3085
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_742 
    unless_null _lex_param_1, fallback6889
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback6889:
    set fb_tmp_742, _lex_param_1
    repr_defined $I5001, fb_tmp_742
    unless $I5001 goto if3253_else6887 
    set $P5002, fb_tmp_742["quote_EXPR"]
    set $P5004, $P5002
    goto if3253_end6888
  if3253_else6887:
    null $P5003
    set $P5004, $P5003
  if3253_end6888:
    unless_null $P5004, vivi_32546890
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_32546890:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<Q>" :subid("cuid_347_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3086
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_743 
    unless_null _lex_param_1, fallback6893
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback6893:
    set fb_tmp_743, _lex_param_1
    repr_defined $I5001, fb_tmp_743
    unless $I5001 goto if3255_else6891 
    set $P5002, fb_tmp_743["quote_EXPR"]
    set $P5004, $P5002
    goto if3255_end6892
  if3255_else6891:
    null $P5003
    set $P5004, $P5003
  if3255_end6892:
    unless_null $P5004, vivi_32566894
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_32566894:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<Q:PIR>" :subid("cuid_348_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3087
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_744 
.annotate 'line', 3088
    nqp_get_sc_object $P5001, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 89
    unless_null _lex_param_1, fallback6897
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5002
  fallback6897:
    set fb_tmp_744, _lex_param_1
    repr_defined $I5001, fb_tmp_744
    unless $I5001 goto if3257_else6895 
    set $P5003, fb_tmp_744["quote_EXPR"]
    set $P5005, $P5003
    goto if3257_end6896
  if3257_else6895:
    null $P5004
    set $P5005, $P5004
  if3257_end6896:
    unless_null $P5005, vivi_32586898
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5005, $P5006
  vivi_32586898:
    $P5007 = $P5005."ast"()
    $P5008 = $P5007."value"()
    $P5009 = $P5001."new"($P5008 :named("pir"), _lex_param_1 :named("node"))
    $P5010 = _lex_param_1."!make"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym</ />" :subid("cuid_349_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3091
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$block", $P101 
    .lex "$regex", $P102 
    .lex "$past", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_745 
    .local pmc fb_tmp_746 
    .local pmc fb_tmp_747 
    .local pmc fb_tmp_748 
    .local pmc fb_tmp_749 
    .local pmc fb_tmp_750 
    .local pmc fb_tmp_751 
    .local pmc pkg_viv_tmp_47 
    .local pmc fb_tmp_752 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P103, $P5003
.annotate 'line', 3092
    find_dynamic_lex $P5004, "$*W"
    unless_null $P5004, fallback6899
    nqp_get_sc_object $P5006, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5005, $P5006
    set fb_tmp_745, $P5005
    repr_defined $I5001, fb_tmp_745
    unless $I5001 goto if3259_else6900 
    set $P5007, fb_tmp_745["$W"]
    set $P5009, $P5007
    goto if3259_end6901
  if3259_else6900:
    null $P5008
    set $P5009, $P5008
  if3259_end6901:
    unless_null $P5009, vivi_32606902
    nqp_get_sc_object $P5010, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5009, $P5010
  vivi_32606902:
    unless_null $P5009, vivi_32616903
    die "Contextual $*W not found"
    box $P5011, "Contextual $*W not found"
    set $P5009, $P5011
  vivi_32616903:
    set $P5004, $P5009
  fallback6899:
    $P5012 = $P5004."pop_lexpad"()
    set $P101, $P5012
.annotate 'line', 3093
    set fb_tmp_746, $P101
    repr_defined $I5002, fb_tmp_746
    unless $I5002 goto if3262_else6904 
    set $P5013, fb_tmp_746[0]
    set $P5015, $P5013
    goto if3262_end6905
  if3262_else6904:
    null $P5014
    set $P5015, $P5014
  if3262_end6905:
    unless_null $P5015, vivi_32636906
    nqp_get_sc_object $P5016, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5015, $P5016
  vivi_32636906:
    nqp_get_sc_object $P5017, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5018 = $P5017."new"("self" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    $P5015."push"($P5018)
.annotate 'line', 3094
    set fb_tmp_747, $P101
    repr_defined $I5003, fb_tmp_747
    unless $I5003 goto if3264_else6907 
    set $P5019, fb_tmp_747[0]
    set $P5021, $P5019
    goto if3264_end6908
  if3264_else6907:
    null $P5020
    set $P5021, $P5020
  if3264_end6908:
    unless_null $P5021, vivi_32656909
    nqp_get_sc_object $P5022, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5021, $P5022
  vivi_32656909:
    nqp_get_sc_object $P5023, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 3096
    nqp_get_sc_object $P5024, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5025 = $P5024."new"("self" :named("name"), "local" :named("scope"), "var" :named("decl"))
.annotate 'line', 3097
    nqp_get_sc_object $P5026, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5027 = $P5026."new"("self" :named("name"), "lexical" :named("scope"))
    $P5028 = $P5023."new"($P5025, $P5027, "bind" :named("op"))
    $P5021."push"($P5028)
.annotate 'line', 3098
    set fb_tmp_748, $P101
    repr_defined $I5004, fb_tmp_748
    unless $I5004 goto if3266_else6910 
    set $P5029, fb_tmp_748[0]
    set $P5031, $P5029
    goto if3266_end6911
  if3266_else6910:
    null $P5030
    set $P5031, $P5030
  if3266_end6911:
    unless_null $P5031, vivi_32676912
    nqp_get_sc_object $P5032, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5031, $P5032
  vivi_32676912:
    nqp_get_sc_object $P5033, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5034 = $P5033."new"(utf8:"$\x{a2}" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    $P5031."push"($P5034)
.annotate 'line', 3099
    set fb_tmp_749, $P101
    repr_defined $I5005, fb_tmp_749
    unless $I5005 goto if3268_else6913 
    set $P5035, fb_tmp_749[0]
    set $P5037, $P5035
    goto if3268_end6914
  if3268_else6913:
    null $P5036
    set $P5037, $P5036
  if3268_end6914:
    unless_null $P5037, vivi_32696915
    nqp_get_sc_object $P5038, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5037, $P5038
  vivi_32696915:
    nqp_get_sc_object $P5039, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5040 = $P5039."new"("$/" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    $P5037."push"($P5040)
.annotate 'line', 3100
    $P101."symbol"(utf8:"$\x{a2}", "lexical" :named("scope"))
.annotate 'line', 3101
    $P101."symbol"("$/", "lexical" :named("scope"))
.annotate 'line', 3103
    find_dynamic_lex $P5041, "%*LANG"
    unless_null $P5041, fallback6918
    nqp_get_sc_object $P5043, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5042, $P5043
    set pkg_viv_tmp_47, $P5042
    set fb_tmp_751, pkg_viv_tmp_47
    repr_defined $I5007, fb_tmp_751
    unless $I5007 goto if3271_else6919 
    set $P5044, fb_tmp_751["%LANG"]
    set $P5046, $P5044
    goto if3271_end6920
  if3271_else6919:
    null $P5045
    set $P5046, $P5045
  if3271_end6920:
    unless_null $P5046, vivi_32726921
    new $P5047, 'Hash'
    set pkg_viv_tmp_47["%LANG"], $P5047
    set $P5046, $P5047
  vivi_32726921:
    unless_null $P5046, vivi_32736922
    die "Contextual %*LANG not found"
    box $P5048, "Contextual %*LANG not found"
    set $P5046, $P5048
  vivi_32736922:
    set $P5041, $P5046
  fallback6918:
    set fb_tmp_750, $P5041
    repr_defined $I5006, fb_tmp_750
    unless $I5006 goto if3270_else6916 
    set $P5049, fb_tmp_750["Regex-actions"]
    set $P5051, $P5049
    goto if3270_end6917
  if3270_else6916:
    null $P5050
    set $P5051, $P5050
  if3270_end6917:
    unless_null $P5051, vivi_32746923
    nqp_get_sc_object $P5052, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5051, $P5052
  vivi_32746923:
    unless_null _lex_param_1, fallback6926
    nqp_get_sc_object $P5053, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5053
  fallback6926:
    set fb_tmp_752, _lex_param_1
    repr_defined $I5008, fb_tmp_752
    unless $I5008 goto if3275_else6924 
    set $P5054, fb_tmp_752["p6regex"]
    set $P5056, $P5054
    goto if3275_end6925
  if3275_else6924:
    null $P5055
    set $P5056, $P5055
  if3275_end6925:
    unless_null $P5056, vivi_32766927
    nqp_get_sc_object $P5057, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5056, $P5057
  vivi_32766927:
    $P5058 = $P5056."ast"()
    $P5059 = $P5051."qbuildsub"($P5058, $P101)
    set $P102, $P5059
.annotate 'line', 3104
    nqp_get_sc_object $P5060, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 3106
    new $P5061, 'QRPA'
    box $P5062, "NQPRegex"
    push $P5061, $P5062
    $P5063 = "&lexical_package_lookup"($P5061, _lex_param_1)
    $P5064 = $P5060."new"($P5063, $P102, "callmethod" :named("op"), "new" :named("name"))
    set $P103, $P5064
    set $P103["sink"], $P102
.annotate 'line', 3111
    $P5065 = _lex_param_1."!make"($P103)
    .return ($P5065) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<$>" :subid("cuid_350_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3114
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_753 
    unless_null _lex_param_1, fallback6930
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback6930:
    set fb_tmp_753, _lex_param_1
    repr_defined $I5001, fb_tmp_753
    unless $I5001 goto if3277_else6928 
    set $P5002, fb_tmp_753["variable"]
    set $P5004, $P5002
    goto if3277_end6929
  if3277_else6928:
    null $P5003
    set $P5004, $P5003
  if3277_end6929:
    unless_null $P5004, vivi_32786931
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_32786931:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<{ }>" :subid("cuid_351_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3115
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_754 
.annotate 'line', 3116
    nqp_get_sc_object $P5001, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 3117
    unless_null _lex_param_1, fallback6934
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5002
  fallback6934:
    set fb_tmp_754, _lex_param_1
    repr_defined $I5001, fb_tmp_754
    unless $I5001 goto if3279_else6932 
    set $P5003, fb_tmp_754["block"]
    set $P5005, $P5003
    goto if3279_end6933
  if3279_else6932:
    null $P5004
    set $P5005, $P5004
  if3279_end6933:
    unless_null $P5005, vivi_32806935
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5005, $P5006
  vivi_32806935:
    $P5007 = $P5005."ast"()
    $P5008 = "&block_immediate"($P5007)
    $P5009 = $P5001."new"($P5008, "stringify" :named("op"), _lex_param_1 :named("node"))
    $P5010 = _lex_param_1."!make"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<esc>" :subid("cuid_352_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3120
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    $P5001 = _lex_param_1."!make"("\e")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "postfix:sym<.>" :subid("cuid_353_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3124
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_755 
    unless_null _lex_param_1, fallback6938
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback6938:
    set fb_tmp_755, _lex_param_1
    repr_defined $I5001, fb_tmp_755
    unless $I5001 goto if3281_else6936 
    set $P5002, fb_tmp_755["dotty"]
    set $P5004, $P5002
    goto if3281_end6937
  if3281_else6936:
    null $P5003
    set $P5004, $P5003
  if3281_end6937:
    unless_null $P5004, vivi_32826939
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_32826939:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<return>" :subid("cuid_354_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3126
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
.annotate 'line', 3127
    nqp_get_sc_object $P5001, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 3129
    nqp_get_sc_object $P5002, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5003 = $P5002."new"("RETURN" :named("name"), "lexical" :named("scope"))
    $P5004 = $P5001."new"($P5003, "call" :named("op"))
    $P5005 = _lex_param_1."!make"($P5004)
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<make>" :subid("cuid_355_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3133
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
.annotate 'line', 3134
    nqp_get_sc_object $P5001, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 3135
    nqp_get_sc_object $P5002, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5003 = $P5002."new"("$/" :named("name"), "contextual" :named("scope"))
    $P5004 = $P5001."new"($P5003, "callmethod" :named("op"), "!make" :named("name"), _lex_param_1 :named("node"))
    $P5005 = _lex_param_1."!make"($P5004)
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<next>" :subid("cuid_356_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3142
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    nqp_get_sc_object $P5001, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    $P5002 = $P5001."new"("control" :named("op"), "next" :named("name"))
    $P5003 = _lex_param_1."!make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<last>" :subid("cuid_357_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3143
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    nqp_get_sc_object $P5001, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    $P5002 = $P5001."new"("control" :named("op"), "last" :named("name"))
    $P5003 = _lex_param_1."!make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<redo>" :subid("cuid_358_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3144
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    nqp_get_sc_object $P5001, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    $P5002 = $P5001."new"("control" :named("op"), "redo" :named("name"))
    $P5003 = _lex_param_1."!make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<~~>" :subid("cuid_359_1365879995.227") :anon :lex :outer("cuid_426_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3146
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
.annotate 'line', 3147
    nqp_get_sc_object $P5001, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
    $P5002 = $P5001."new"("callmethod" :named("op"), "ACCEPTS" :named("name"), _lex_param_1 :named("node"))
    $P5003 = _lex_param_1."!make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_504_1365879995.227") :anon :lex :outer("cuid_374_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3251
    .const 'Sub' $P5014 = 'cuid_360_1365879995.227' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_361_1365879995.227' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_362_1365879995.227' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_363_1365879995.227' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_364_1365879995.227' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_365_1365879995.227' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_366_1365879995.227' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_367_1365879995.227' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_368_1365879995.227' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_369_1365879995.227' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_370_1365879995.227' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_371_1365879995.227' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_372_1365879995.227' 
    capture_lex $P5014 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .const 'Sub' $P5001 = 'cuid_360_1365879995.227' 
    capture_lex $P5001
    .const 'Sub' $P5002 = 'cuid_361_1365879995.227' 
    capture_lex $P5002
    .const 'Sub' $P5003 = 'cuid_362_1365879995.227' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_363_1365879995.227' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_364_1365879995.227' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_365_1365879995.227' 
    capture_lex $P5006
    .const 'Sub' $P5007 = 'cuid_366_1365879995.227' 
    capture_lex $P5007
    .const 'Sub' $P5008 = 'cuid_367_1365879995.227' 
    capture_lex $P5008
    .const 'Sub' $P5009 = 'cuid_368_1365879995.227' 
    capture_lex $P5009
    .const 'Sub' $P5010 = 'cuid_369_1365879995.227' 
    capture_lex $P5010
    .const 'Sub' $P5011 = 'cuid_370_1365879995.227' 
    capture_lex $P5011
    .const 'Sub' $P5012 = 'cuid_371_1365879995.227' 
    capture_lex $P5012
    .const 'Sub' $P5013 = 'cuid_372_1365879995.227' 
    capture_lex $P5013
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<:my>" :subid("cuid_360_1365879995.227") :anon :lex :outer("cuid_504_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3253
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_756 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
.annotate 'line', 3254
    unless_null _lex_param_1, fallback6942
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5002
  fallback6942:
    set fb_tmp_756, _lex_param_1
    repr_defined $I5001, fb_tmp_756
    unless $I5001 goto if3283_else6940 
    set $P5003, fb_tmp_756["statement"]
    set $P5005, $P5003
    goto if3283_end6941
  if3283_else6940:
    null $P5004
    set $P5005, $P5004
  if3283_end6941:
    unless_null $P5005, vivi_32846943
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5005, $P5006
  vivi_32846943:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 3255
    nqp_get_sc_object $P5008, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 34
    $P5009 = $P5008."new"($P101, "qastnode" :named("rxtype"), "declarative" :named("subtype"), _lex_param_1 :named("node"))
    $P5010 = _lex_param_1."!make"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<{ }>" :subid("cuid_361_1365879995.227") :anon :lex :outer("cuid_504_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3259
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_757 
.annotate 'line', 3260
    nqp_get_sc_object $P5001, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 34
    unless_null _lex_param_1, fallback6946
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5002
  fallback6946:
    set fb_tmp_757, _lex_param_1
    repr_defined $I5001, fb_tmp_757
    unless $I5001 goto if3285_else6944 
    set $P5003, fb_tmp_757["codeblock"]
    set $P5005, $P5003
    goto if3285_end6945
  if3285_else6944:
    null $P5004
    set $P5005, $P5004
  if3285_end6945:
    unless_null $P5005, vivi_32866947
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5005, $P5006
  vivi_32866947:
    $P5007 = $P5005."ast"()
    $P5008 = $P5001."new"($P5007, "qastnode" :named("rxtype"), _lex_param_1 :named("node"))
    $P5009 = _lex_param_1."!make"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<nqpvar>" :subid("cuid_362_1365879995.227") :anon :lex :outer("cuid_504_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3264
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_758 
    .local pmc fb_tmp_759 
.annotate 'line', 3265
    nqp_get_sc_object $P5001, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 34
    nqp_get_sc_object $P5002, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 12
.annotate 'line', 3266
    nqp_get_sc_object $P5003, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 52
    $P5004 = $P5003."new"("!INTERPOLATE" :named("value"))
.annotate 'line', 3267
    unless_null _lex_param_1, fallback6950
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5005
  fallback6950:
    set fb_tmp_758, _lex_param_1
    repr_defined $I5001, fb_tmp_758
    unless $I5001 goto if3287_else6948 
    set $P5006, fb_tmp_758["var"]
    set $P5008, $P5006
    goto if3287_end6949
  if3287_else6948:
    null $P5007
    set $P5008, $P5007
  if3287_end6949:
    unless_null $P5008, vivi_32886951
    nqp_get_sc_object $P5009, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5008, $P5009
  vivi_32886951:
    $P5010 = $P5008."ast"()
.annotate 'line', 3268
    nqp_get_sc_object $P5011, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 42
    find_dynamic_lex $P5012, "$*SEQ"
    unless_null $P5012, fallback6954
    nqp_get_sc_object $P5014, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5013, $P5014
    set fb_tmp_759, $P5013
    repr_defined $I5002, fb_tmp_759
    unless $I5002 goto if3290_else6955 
    set $P5015, fb_tmp_759["$SEQ"]
    set $P5017, $P5015
    goto if3290_end6956
  if3290_else6955:
    null $P5016
    set $P5017, $P5016
  if3290_end6956:
    unless_null $P5017, vivi_32916957
    nqp_get_sc_object $P5018, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5017, $P5018
  vivi_32916957:
    unless_null $P5017, vivi_32926958
    die "Contextual $*SEQ not found"
    box $P5019, "Contextual $*SEQ not found"
    set $P5017, $P5019
  vivi_32926958:
    set $P5012, $P5017
  fallback6954:
    unless $P5012 goto if3289_else6952 
    set $I5003, 1
    goto if3289_end6953
  if3289_else6952:
    set $I5003, 0
  if3289_end6953:
    $P5020 = $P5011."new"($I5003 :named("value"))
    $P5021 = $P5002."new"($P5004, $P5010, $P5020)
    $P5022 = $P5001."new"($P5021, "subrule" :named("rxtype"), "method" :named("subtype"), _lex_param_1 :named("node"))
    $P5023 = _lex_param_1."!make"($P5022)
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<{ }>" :subid("cuid_363_1365879995.227") :anon :lex :outer("cuid_504_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3272
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_760 
.annotate 'line', 3273
    nqp_get_sc_object $P5001, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 34
    nqp_get_sc_object $P5002, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 12
.annotate 'line', 3274
    nqp_get_sc_object $P5003, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 52
    $P5004 = $P5003."new"("!INTERPOLATE_REGEX" :named("value"))
.annotate 'line', 3275
    unless_null _lex_param_1, fallback6961
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5005
  fallback6961:
    set fb_tmp_760, _lex_param_1
    repr_defined $I5001, fb_tmp_760
    unless $I5001 goto if3293_else6959 
    set $P5006, fb_tmp_760["codeblock"]
    set $P5008, $P5006
    goto if3293_end6960
  if3293_else6959:
    null $P5007
    set $P5008, $P5007
  if3293_end6960:
    unless_null $P5008, vivi_32946962
    nqp_get_sc_object $P5009, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5008, $P5009
  vivi_32946962:
    $P5010 = $P5008."ast"()
    $P5011 = $P5002."new"($P5004, $P5010)
    $P5012 = $P5001."new"($P5011, "subrule" :named("rxtype"), "method" :named("subtype"), _lex_param_1 :named("node"))
    $P5013 = _lex_param_1."!make"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<?{ }>" :subid("cuid_364_1365879995.227") :anon :lex :outer("cuid_504_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3279
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_761 
    .local pmc fb_tmp_762 
.annotate 'line', 3280
    nqp_get_sc_object $P5001, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 34
    unless_null _lex_param_1, fallback6965
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5002
  fallback6965:
    set fb_tmp_761, _lex_param_1
    repr_defined $I5001, fb_tmp_761
    unless $I5001 goto if3295_else6963 
    set $P5003, fb_tmp_761["codeblock"]
    set $P5005, $P5003
    goto if3295_end6964
  if3295_else6963:
    null $P5004
    set $P5005, $P5004
  if3295_end6964:
    unless_null $P5005, vivi_32966966
    nqp_get_sc_object $P5006, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5005, $P5006
  vivi_32966966:
    $P5007 = $P5005."ast"()
    unless_null _lex_param_1, fallback6969
    nqp_get_sc_object $P5008, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5008
  fallback6969:
    set fb_tmp_762, _lex_param_1
    repr_defined $I5003, fb_tmp_762
    unless $I5003 goto if3297_else6967 
    set $P5009, fb_tmp_762["zw"]
    set $P5011, $P5009
    goto if3297_end6968
  if3297_else6967:
    null $P5010
    set $P5011, $P5010
  if3297_end6968:
    unless_null $P5011, vivi_32986970
    nqp_get_sc_object $P5012, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5011, $P5012
  vivi_32986970:
    set $S5001, $P5011
    iseq $I5002, $S5001, "!"
    $P5013 = $P5001."new"($P5007, "zerowidth" :named("subtype"), $I5002 :named("negate"), "qastnode" :named("rxtype"), _lex_param_1 :named("node"))
    $P5014 = _lex_param_1."!make"($P5013)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<var>" :subid("cuid_365_1365879995.227") :anon :lex :outer("cuid_504_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3285
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_763 
.annotate 'line', 3286
    nqp_get_sc_object $P5001, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 34
    nqp_get_sc_object $P5002, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 12
.annotate 'line', 3287
    nqp_get_sc_object $P5003, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 52
    $P5004 = $P5003."new"("!INTERPOLATE_REGEX" :named("value"))
.annotate 'line', 3288
    unless_null _lex_param_1, fallback6973
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5005
  fallback6973:
    set fb_tmp_763, _lex_param_1
    repr_defined $I5001, fb_tmp_763
    unless $I5001 goto if3299_else6971 
    set $P5006, fb_tmp_763["var"]
    set $P5008, $P5006
    goto if3299_end6972
  if3299_else6971:
    null $P5007
    set $P5008, $P5007
  if3299_end6972:
    unless_null $P5008, vivi_33006974
    nqp_get_sc_object $P5009, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5008, $P5009
  vivi_33006974:
    $P5010 = $P5008."ast"()
    $P5011 = $P5002."new"($P5004, $P5010)
    $P5012 = $P5001."new"($P5011, "subrule" :named("rxtype"), "method" :named("subtype"), _lex_param_1 :named("node"))
    $P5013 = _lex_param_1."!make"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "codeblock" :subid("cuid_366_1365879995.227") :anon :lex :outer("cuid_504_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3292
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$block", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_764 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
.annotate 'line', 3293
    unless_null _lex_param_1, fallback6977
    nqp_get_sc_object $P5003, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5003
  fallback6977:
    set fb_tmp_764, _lex_param_1
    repr_defined $I5001, fb_tmp_764
    unless $I5001 goto if3301_else6975 
    set $P5004, fb_tmp_764["block"]
    set $P5006, $P5004
    goto if3301_end6976
  if3301_else6975:
    null $P5005
    set $P5006, $P5005
  if3301_end6976:
    unless_null $P5006, vivi_33026978
    nqp_get_sc_object $P5007, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5006, $P5007
  vivi_33026978:
    $P5008 = $P5006."ast"()
    set $P101, $P5008
.annotate 'line', 3294
    $P101."blocktype"("immediate")
.annotate 'line', 3296
    nqp_get_sc_object $P5009, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 93
.annotate 'line', 3297
    nqp_get_sc_object $P5010, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 3299
    nqp_get_sc_object $P5011, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5012 = $P5011."new"("$/" :named("name"), "contextual" :named("scope"))
.annotate 'line', 3300
    nqp_get_sc_object $P5013, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 82
.annotate 'line', 3301
    nqp_get_sc_object $P5014, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 71
    $P5015 = $P5014."new"(utf8:"$\x{a2}" :named("name"), "contextual" :named("scope"))
    $P5016 = $P5013."new"($P5015, "MATCH" :named("name"), "callmethod" :named("op"))
    $P5017 = $P5010."new"($P5012, $P5016, "bind" :named("op"))
    $P5018 = $P5009."new"($P5017, $P101)
    set $P102, $P5018
.annotate 'line', 3308
    $P5019 = _lex_param_1."!make"($P102)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<name>" :subid("cuid_367_1365879995.227") :anon :lex :outer("cuid_504_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3311
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5101 = 'cuid_505_1365879995.227' 
    capture_lex $P5101 
    .const 'Sub' $P5101 = 'cuid_506_1365879995.227' 
    capture_lex $P5101 
    .lex "$name", $P101 
    .lex "$qast", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_765 
    .local pmc fb_tmp_766 
    .local pmc fb_tmp_767 
    .local pmc fb_tmp_768 
    .local pmc fb_tmp_771 
    .local pmc fb_tmp_772 
    .local pmc fb_tmp_773 
    .local pmc fb_tmp_775 
    .local pmc fb_tmp_776 
    .local pmc fb_tmp_777 
    .local pmc fb_tmp_778 
    .local pmc fb_tmp_779 
    .local pmc fb_tmp_780 
    .local pmc fb_tmp_781 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P102, $P5002
    unless_null _lex_param_1, fallback6981
    nqp_get_sc_object $P5003, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5003
  fallback6981:
    set fb_tmp_765, _lex_param_1
    repr_defined $I5001, fb_tmp_765
    unless $I5001 goto if3303_else6979 
    set $P5004, fb_tmp_765["longname"]
    set $P5006, $P5004
    goto if3303_end6980
  if3303_else6979:
    null $P5005
    set $P5006, $P5005
  if3303_end6980:
    unless_null $P5006, vivi_33046982
    nqp_get_sc_object $P5007, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5006, $P5007
  vivi_33046982:
    set $S5001, $P5006
    box $P5008, $S5001
    set $P101, $P5008
    unless_null _lex_param_1, fallback6987
    nqp_get_sc_object $P5009, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5009
  fallback6987:
    set fb_tmp_766, _lex_param_1
    repr_defined $I5002, fb_tmp_766
    unless $I5002 goto if3306_else6985 
    set $P5010, fb_tmp_766["assertion"]
    set $P5012, $P5010
    goto if3306_end6986
  if3306_else6985:
    null $P5011
    set $P5012, $P5011
  if3306_end6986:
    unless_null $P5012, vivi_33076988
    nqp_get_sc_object $P5013, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5012, $P5013
  vivi_33076988:
    unless $P5012 goto if3305_else6983 
.annotate 'line', 3314
.annotate 'line', 3315
    unless_null _lex_param_1, fallback6993
    nqp_get_sc_object $P5014, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5014
  fallback6993:
    set fb_tmp_768, _lex_param_1
    repr_defined $I5004, fb_tmp_768
    unless $I5004 goto if3309_else6991 
    set $P5015, fb_tmp_768["assertion"]
    set $P5017, $P5015
    goto if3309_end6992
  if3309_else6991:
    null $P5016
    set $P5017, $P5016
  if3309_end6992:
    unless_null $P5017, vivi_33106994
    nqp_get_sc_object $P5018, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5017, $P5018
  vivi_33106994:
    set fb_tmp_767, $P5017
    repr_defined $I5003, fb_tmp_767
    unless $I5003 goto if3308_else6989 
    set $P5019, fb_tmp_767[0]
    set $P5021, $P5019
    goto if3308_end6990
  if3308_else6989:
    null $P5020
    set $P5021, $P5020
  if3308_end6990:
    unless_null $P5021, vivi_33116995
    nqp_get_sc_object $P5022, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5021, $P5022
  vivi_33116995:
    $P5023 = $P5021."ast"()
    set $P102, $P5023
.annotate 'line', 3316
    nqp_decontainerize $P5024, _lex_param_0
    $P5025 = $P5024."subrule_alias"($P102, $P101)
    goto if3305_end6984
  if3305_else6983:
    set $S5002, $P101
    iseq $I5005, $S5002, "sym"
    unless $I5005 goto if3312_else6996 
    .const 'Sub' $P5026 = 'cuid_505_1365879995.227' 
    capture_lex $P5026
    $P5027 = $P5026()
    set $P5099, $P5027
    goto if3312_end6997
  if3312_else6996:
.annotate 'line', 3327
.annotate 'line', 3328
    nqp_get_sc_object $P5028, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 34
.annotate 'line', 3330
    nqp_get_sc_object $P5029, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 12
    nqp_get_sc_object $P5030, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 52
    $P5031 = $P5030."new"($P101 :named("value"))
    $P5032 = $P5029."new"($P5031)
    $P5033 = $P5028."new"($P5032, "subrule" :named("rxtype"), "capture" :named("subtype"), _lex_param_1 :named("node"), $P101 :named("name"))
    set $P102, $P5033
    unless_null _lex_param_1, fallback7012
    nqp_get_sc_object $P5034, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5034
  fallback7012:
    set fb_tmp_771, _lex_param_1
    repr_defined $I5006, fb_tmp_771
    unless $I5006 goto if3320_else7010 
    set $P5035, fb_tmp_771["arglist"]
    set $P5037, $P5035
    goto if3320_end7011
  if3320_else7010:
    null $P5036
    set $P5037, $P5036
  if3320_end7011:
    unless_null $P5037, vivi_33217013
    nqp_get_sc_object $P5038, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5037, $P5038
  vivi_33217013:
    unless $P5037 goto if3319_else7008 
.annotate 'line', 3331
.annotate 'line', 3332
    unless_null _lex_param_1, fallback7018
    nqp_get_sc_object $P5042, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5042
  fallback7018:
    set fb_tmp_773, _lex_param_1
    repr_defined $I5008, fb_tmp_773
    unless $I5008 goto if3323_else7016 
    set $P5043, fb_tmp_773["arglist"]
    set $P5045, $P5043
    goto if3323_end7017
  if3323_else7016:
    null $P5044
    set $P5045, $P5044
  if3323_end7017:
    unless_null $P5045, vivi_33247019
    nqp_get_sc_object $P5046, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5045, $P5046
  vivi_33247019:
    set fb_tmp_772, $P5045
    repr_defined $I5007, fb_tmp_772
    unless $I5007 goto if3322_else7014 
    set $P5047, fb_tmp_772[0]
    set $P5049, $P5047
    goto if3322_end7015
  if3322_else7014:
    null $P5048
    set $P5049, $P5048
  if3322_end7015:
    unless_null $P5049, vivi_33257020
    nqp_get_sc_object $P5050, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5049, $P5050
  vivi_33257020:
    $P5051 = $P5049."ast"()
    $P5052 = $P5051."list"()
    set $P5039, $P5052
    iter $P5041, $P5052
  for_next7024:
    unless $P5041, for_done7026
    shift $P5054, $P5041
  for_redo7025:
    .const 'Sub' $P5053 = 'cuid_506_1365879995.227' 
    capture_lex $P5053
    $P5039 = $P5053($P5054)
    goto for_next7024
  for_done7026:
    set $P5098, $P5039
    goto if3319_end7009
  if3319_else7008:
    unless_null _lex_param_1, fallback7031
    nqp_get_sc_object $P5055, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5055
  fallback7031:
    set fb_tmp_775, _lex_param_1
    repr_defined $I5009, fb_tmp_775
    unless $I5009 goto if3329_else7029 
    set $P5056, fb_tmp_775["nibbler"]
    set $P5058, $P5056
    goto if3329_end7030
  if3329_else7029:
    null $P5057
    set $P5058, $P5057
  if3329_end7030:
    unless_null $P5058, vivi_33307032
    nqp_get_sc_object $P5059, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5058, $P5059
  vivi_33307032:
    set $P5097, $P5058
    unless $P5058 goto if3328_end7028 
.annotate 'line', 3334
    set $S5003, $P101
    iseq $I5010, $S5003, "after"
    unless $I5010 goto if3331_else7033 
.annotate 'line', 3336
    set fb_tmp_776, $P102
    repr_defined $I5011, fb_tmp_776
    unless $I5011 goto if3332_else7035 
    set $P5060, fb_tmp_776[0]
    set $P5062, $P5060
    goto if3332_end7036
  if3332_else7035:
    null $P5061
    set $P5062, $P5061
  if3332_end7036:
    unless_null $P5062, vivi_33337037
    nqp_get_sc_object $P5063, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5062, $P5063
  vivi_33337037:
    nqp_decontainerize $P5064, _lex_param_0
    nqp_decontainerize $P5065, _lex_param_0
    unless_null _lex_param_1, fallback7042
    nqp_get_sc_object $P5066, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5066
  fallback7042:
    set fb_tmp_778, _lex_param_1
    repr_defined $I5013, fb_tmp_778
    unless $I5013 goto if3335_else7040 
    set $P5067, fb_tmp_778["nibbler"]
    set $P5069, $P5067
    goto if3335_end7041
  if3335_else7040:
    null $P5068
    set $P5069, $P5068
  if3335_end7041:
    unless_null $P5069, vivi_33367043
    nqp_get_sc_object $P5070, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5069, $P5070
  vivi_33367043:
    set fb_tmp_777, $P5069
    repr_defined $I5012, fb_tmp_777
    unless $I5012 goto if3334_else7038 
    set $P5071, fb_tmp_777[0]
    set $P5073, $P5071
    goto if3334_end7039
  if3334_else7038:
    null $P5072
    set $P5073, $P5072
  if3334_end7039:
    unless_null $P5073, vivi_33377044
    nqp_get_sc_object $P5074, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5073, $P5074
  vivi_33377044:
    $P5075 = $P5073."ast"()
    $P5076 = $P5065."flip_ast"($P5075)
    $P5077 = $P5064."qbuildsub"($P5076, 1 :named("anon"), 1 :named("addself"))
    $P5078 = $P5062."push"($P5077)
    set $P5096, $P5078
    goto if3331_end7034
  if3331_else7033:
.annotate 'line', 3337
    set fb_tmp_779, $P102
    repr_defined $I5014, fb_tmp_779
    unless $I5014 goto if3338_else7045 
    set $P5079, fb_tmp_779[0]
    set $P5081, $P5079
    goto if3338_end7046
  if3338_else7045:
    null $P5080
    set $P5081, $P5080
  if3338_end7046:
    unless_null $P5081, vivi_33397047
    nqp_get_sc_object $P5082, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5081, $P5082
  vivi_33397047:
    nqp_decontainerize $P5083, _lex_param_0
    unless_null _lex_param_1, fallback7052
    nqp_get_sc_object $P5084, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5084
  fallback7052:
    set fb_tmp_781, _lex_param_1
    repr_defined $I5016, fb_tmp_781
    unless $I5016 goto if3341_else7050 
    set $P5085, fb_tmp_781["nibbler"]
    set $P5087, $P5085
    goto if3341_end7051
  if3341_else7050:
    null $P5086
    set $P5087, $P5086
  if3341_end7051:
    unless_null $P5087, vivi_33427053
    nqp_get_sc_object $P5088, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5087, $P5088
  vivi_33427053:
    set fb_tmp_780, $P5087
    repr_defined $I5015, fb_tmp_780
    unless $I5015 goto if3340_else7048 
    set $P5089, fb_tmp_780[0]
    set $P5091, $P5089
    goto if3340_end7049
  if3340_else7048:
    null $P5090
    set $P5091, $P5090
  if3340_end7049:
    unless_null $P5091, vivi_33437054
    nqp_get_sc_object $P5092, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5091, $P5092
  vivi_33437054:
    $P5093 = $P5091."ast"()
    $P5094 = $P5083."qbuildsub"($P5093, 1 :named("anon"), 1 :named("addself"))
    $P5095 = $P5081."push"($P5094)
    set $P5096, $P5095
  if3331_end7034:
    set $P5097, $P5096
  if3328_end7028:
    set $P5098, $P5097
  if3319_end7009:
    set $P5099, $P5098
  if3312_end6997:
  if3305_end6984:
.annotate 'line', 3340
    $P5100 = _lex_param_1."!make"($P102)
    .return ($P5100) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_505_1365879995.227") :anon :lex :outer("cuid_367_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3318
    .lex "$fullrxname", $S101 
    .lex "$loc", $I101 
    .lex "$rxname", $S102 
    .local pmc fb_tmp_769 
    .local pmc fb_tmp_770 
    .local pmc pkg_viv_tmp_48 
    set $S101, ""
    set $I101, 0
    set $S102, ""
    find_dynamic_lex $P5001, "%*RX"
    unless_null $P5001, fallback7000
    nqp_get_sc_object $P5003, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_48, $P5002
    set fb_tmp_770, pkg_viv_tmp_48
    repr_defined $I5002, fb_tmp_770
    unless $I5002 goto if3314_else7001 
    set $P5004, fb_tmp_770["%RX"]
    set $P5006, $P5004
    goto if3314_end7002
  if3314_else7001:
    null $P5005
    set $P5006, $P5005
  if3314_end7002:
    unless_null $P5006, vivi_33157003
    new $P5007, 'Hash'
    set pkg_viv_tmp_48["%RX"], $P5007
    set $P5006, $P5007
  vivi_33157003:
    unless_null $P5006, vivi_33167004
    die "Contextual %*RX not found"
    box $P5008, "Contextual %*RX not found"
    set $P5006, $P5008
  vivi_33167004:
    set $P5001, $P5006
  fallback7000:
    set fb_tmp_769, $P5001
    repr_defined $I5001, fb_tmp_769
    unless $I5001 goto if3313_else6998 
    set $P5009, fb_tmp_769["name"]
    set $P5011, $P5009
    goto if3313_end6999
  if3313_else6998:
    null $P5010
    set $P5011, $P5010
  if3313_end6999:
    unless_null $P5011, vivi_33177005
    nqp_get_sc_object $P5012, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5011, $P5012
  vivi_33177005:
    set $S5001, $P5011
    set $S101, $S5001
    index $I5003, $S101, ":sym<", 0
    set $I101, $I5003
    set $N5001, $I101
    set $N5002, 0
    islt $I5004, $N5001, $N5002
    unless $I5004 goto if3318_end7007 
    index $I5005, $S101, utf8:":sym\x{ab}", 0
    set $I101, $I5005
  if3318_end7007:
    set $N5004, $I101
    set $N5005, 5
    add $N5003, $N5004, $N5005
    set $I5006, $N5003
    length $I5007, $S101
    set $N5008, $I5007
    set $N5009, $I101
    sub $N5007, $N5008, $N5009
    set $N5010, 6
    sub $N5006, $N5007, $N5010
    set $I5008, $N5006
    substr $S5002, $S101, $I5006, $I5008
    set $S102, $S5002
.annotate 'line', 3324
    nqp_get_sc_object $P5013, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 34
    find_lex $P5014, "$/"
.annotate 'line', 3325
    nqp_get_sc_object $P5015, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93", 34
    find_lex $P5016, "$/"
    $P5017 = $P5015."new"($S102, "literal" :named("rxtype"), $P5016 :named("node"))
    $P5018 = $P5013."new"($P5017, "sym" :named("name"), "subcapture" :named("rxtype"), $P5014 :named("node"))
    store_lex "$qast", $P5018
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_506_1365879995.227") :anon :lex :outer("cuid_367_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3332
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_774 
    find_lex $P5001, "$qast"
    set fb_tmp_774, $P5001
    repr_defined $I5001, fb_tmp_774
    unless $I5001 goto if3326_else7021 
    set $P5002, fb_tmp_774[0]
    set $P5004, $P5002
    goto if3326_end7022
  if3326_else7021:
    null $P5003
    set $P5004, $P5003
  if3326_end7022:
    unless_null $P5004, vivi_33277023
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_33277023:
    $P5006 = $P5004."push"(_lex_param_0)
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "arg" :subid("cuid_368_1365879995.227") :anon :lex :outer("cuid_504_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3343
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_782 
.annotate 'line', 3344
    unless_null _lex_param_1, fallback7057
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set _lex_param_1, $P5001
  fallback7057:
    set fb_tmp_782, _lex_param_1
    repr_defined $I5001, fb_tmp_782
    unless $I5001 goto if3344_else7055 
    set $P5002, fb_tmp_782["quote_EXPR"]
    set $P5004, $P5002
    goto if3344_end7056
  if3344_else7055:
    null $P5003
    set $P5004, $P5003
  if3344_end7056:
    unless_null $P5004, vivi_33457058
    nqp_get_sc_object $P5005, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5004, $P5005
  vivi_33457058:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "create_regex_code_object" :subid("cuid_369_1365879995.227") :anon :lex :outer("cuid_504_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3347
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$code", $P101 
    .lex "self", _lex_param_0 
    .lex "$block", _lex_param_1 
    .local pmc fb_tmp_783 
    .local pmc fb_tmp_784 
    .local pmc pkg_viv_tmp_49 
    .local pmc fb_tmp_785 
    .local pmc fb_tmp_786 
    .local pmc pkg_viv_tmp_50 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P101, $P5001
.annotate 'line', 3348
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback7059
    nqp_get_sc_object $P5004, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5003, $P5004
    set fb_tmp_783, $P5003
    repr_defined $I5001, fb_tmp_783
    unless $I5001 goto if3346_else7060 
    set $P5005, fb_tmp_783["$W"]
    set $P5007, $P5005
    goto if3346_end7061
  if3346_else7060:
    null $P5006
    set $P5007, $P5006
  if3346_end7061:
    unless_null $P5007, vivi_33477062
    nqp_get_sc_object $P5008, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5007, $P5008
  vivi_33477062:
    unless_null $P5007, vivi_33487063
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_33487063:
    set $P5002, $P5007
  fallback7059:
    $P5010 = $P5002."create_code"(_lex_param_1, "", 0, "NQPRegex" :named("code_type_name"))
    set $P101, $P5010
    find_dynamic_lex $P5011, "%*RX"
    unless_null $P5011, fallback7066
    nqp_get_sc_object $P5013, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5012, $P5013
    set pkg_viv_tmp_49, $P5012
    set fb_tmp_784, pkg_viv_tmp_49
    repr_defined $I5003, fb_tmp_784
    unless $I5003 goto if3350_else7067 
    set $P5014, fb_tmp_784["%RX"]
    set $P5016, $P5014
    goto if3350_end7068
  if3350_else7067:
    null $P5015
    set $P5016, $P5015
  if3350_end7068:
    unless_null $P5016, vivi_33517069
    new $P5017, 'Hash'
    set pkg_viv_tmp_49["%RX"], $P5017
    set $P5016, $P5017
  vivi_33517069:
    unless_null $P5016, vivi_33527070
    die "Contextual %*RX not found"
    box $P5018, "Contextual %*RX not found"
    set $P5016, $P5018
  vivi_33527070:
    set $P5011, $P5016
  fallback7066:
    exists $I5002, $P5011["code"]
    unless $I5002 goto if3349_end7065 
.annotate 'line', 3349
.annotate 'line', 3350
    find_dynamic_lex $P5019, "%*RX"
    unless_null $P5019, fallback7073
    nqp_get_sc_object $P5021, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    get_who $P5020, $P5021
    set pkg_viv_tmp_50, $P5020
    set fb_tmp_786, pkg_viv_tmp_50
    repr_defined $I5005, fb_tmp_786
    unless $I5005 goto if3354_else7074 
    set $P5022, fb_tmp_786["%RX"]
    set $P5024, $P5022
    goto if3354_end7075
  if3354_else7074:
    null $P5023
    set $P5024, $P5023
  if3354_end7075:
    unless_null $P5024, vivi_33557076
    new $P5025, 'Hash'
    set pkg_viv_tmp_50["%RX"], $P5025
    set $P5024, $P5025
  vivi_33557076:
    unless_null $P5024, vivi_33567077
    die "Contextual %*RX not found"
    box $P5026, "Contextual %*RX not found"
    set $P5024, $P5026
  vivi_33567077:
    set $P5019, $P5024
  fallback7073:
    set fb_tmp_785, $P5019
    repr_defined $I5004, fb_tmp_785
    unless $I5004 goto if3353_else7071 
    set $P5027, fb_tmp_785["code"]
    set $P5029, $P5027
    goto if3353_end7072
  if3353_else7071:
    null $P5028
    set $P5029, $P5028
  if3353_end7072:
    unless_null $P5029, vivi_33577078
    nqp_get_sc_object $P5030, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    set $P5029, $P5030
  vivi_33577078:
    $P5031 = $P5029."ADD_NESTED_CODE"($P101)
  if3349_end7065:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "store_regex_nfa" :subid("cuid_370_1365879995.227") :anon :lex :outer("cuid_504_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3355
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$code_obj", _lex_param_1 
    .lex "$block", _lex_param_2 
    .lex "$nfa", _lex_param_3 
.annotate 'line', 3356
    $P5001 = _lex_param_3."save"()
    $P5002 = _lex_param_1."SET_NFA"($P5001)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "store_regex_caps" :subid("cuid_371_1365879995.227") :anon :lex :outer("cuid_504_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3359
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$code_obj", _lex_param_1 
    .lex "$block", _lex_param_2 
    .lex "%caps", _lex_param_3 
.annotate 'line', 3360
    $P5001 = _lex_param_1."SET_CAPS"(_lex_param_3)
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "store_regex_alt_nfa" :subid("cuid_372_1365879995.227") :anon :lex :outer("cuid_504_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3363
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 
    .const 'Sub' $P5008 = 'cuid_507_1365879995.227' 
    capture_lex $P5008 
    .lex "@saved", $P101 
    .lex "self", _lex_param_0 
    .lex "$code_obj", _lex_param_1 
    .lex "$block", _lex_param_2 
    .lex "$key", _lex_param_3 
    .lex "@alternatives", _lex_param_4 
    new $P5001, 'QRPA'
    set $P101, $P5001
    set $P5002, _lex_param_4
    iter $P5004, _lex_param_4
  for_next7079:
    unless $P5004, for_done7081
    shift $P5006, $P5004
  for_redo7080:
    .const 'Sub' $P5005 = 'cuid_507_1365879995.227' 
    capture_lex $P5005
    $P5002 = $P5005($P5006)
    goto for_next7079
  for_done7081:
.annotate 'line', 3368
    $P5007 = _lex_param_1."SET_ALT_NFA"(_lex_param_3, $P101)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_507_1365879995.227") :anon :lex :outer("cuid_372_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3365
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 3366
    find_lex $P5001, "@saved"
    $P5002 = _lex_param_0."save"(1 :named("non_empty"))
    $P5003 = $P5001."push"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_508_1365879995.227") :anon :lex :outer("cuid_374_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
.annotate 'line', 3373
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    nqp_get_sc_object $P5001, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979", 25
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_510_1365879995.227") :load :init
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .const 'Sub' $P5001 = 'cuid_509_1365879995.227' 
    capture_lex $P5001 
    .local pmc cur_sc 
    .local pmc conflicts 
    nqp_dynop_setup 
    nqp_bigint_setup 
    getinterp $P5001
    get_class $P5002, "LexPad"
    get_class $P5003, "NQPLexPad"
    $P5004 = $P5001."hll_map"($P5002, $P5003)
    load_bytecode "ModuleLoader.pbc"
    .const 'Sub' $P5001 = "cuid_374_1365879995.227" 
    get_hll_global $P5002, "ModuleLoader"
    $P5003 = $P5002."load_setting"("NQPCORE")
    $P5004 = $P5001."set_outer_ctx"($P5003)
    load_bytecode "ModuleLoader.pbc"
    get_hll_global $P5001, "ModuleLoader"
    $P5001."load_module"("NQPP6QRegex")
    load_bytecode "ModuleLoader.pbc"
    get_hll_global $P5001, "ModuleLoader"
    $P5001."load_module"("NQPP6QRegex")
    load_bytecode "ModuleLoader.pbc"
    get_hll_global $P5001, "ModuleLoader"
    $P5001."load_module"("QAST")
    nqp_create_sc $P5001, "744C7ED774769C466927C755238AD24292064564-1365879995.253"
    set cur_sc, $P5001
    $P5002 = cur_sc."set_description"("src\\stage2\\gen\\NQP.pm")
    new $P5003, 'QRPA'
    set conflicts, $P5003
    new $P5004, 'ResizableStringArray'
    null $S5001
    push $P5004, $S5001
    push $P5004, "P6opaque"
    push $P5004, "QAST"
    push $P5004, "QRegex"
    push $P5004, "NQPCursorRole"
    push $P5004, "CB6D7C261AAF0D8B4B26A009A161E31DD17426AF-1365879963.875"
    push $P5004, "src\\stage2\\QRegex.nqp"
    push $P5004, "NQPMatch"
    push $P5004, "NQPCursor"
    push $P5004, "NQPRegexMethod"
    push $P5004, "NQPRegex"
    push $P5004, "HLL"
    push $P5004, "PIRT"
    push $P5004, "NQP"
    push $P5004, "DEFAULT"
    push $P5004, "CREATE"
    push $P5004, "D36D7A49EFB8A9F0BFC5D1E2F9B2F549157B62F8-1365879959.979"
    push $P5004, "src\\stage2\\NQPCORE.setting"
    push $P5004, "bless"
    push $P5004, "BUILDALL"
    push $P5004, "new"
    push $P5004, "Str"
    push $P5004, "Numeric"
    push $P5004, "Int"
    push $P5004, "defined"
    push $P5004, "ACCEPTS"
    push $P5004, "isa"
    push $P5004, "BUILD"
    push $P5004, "slot_for_object"
    push $P5004, "B80449D644E1050F26DF9E69AE32428A32785A12-1365879968.656"
    push $P5004, "src\\stage2\\gen\\NQPHLL.pm"
    push $P5004, "add_object"
    push $P5004, "add_root_code_ref"
    push $P5004, "update_root_code_ref"
    push $P5004, "is_precompilation_mode"
    push $P5004, "add_load_dependency_task"
    push $P5004, "add_fixup_task"
    push $P5004, "sc"
    push $P5004, "handle"
    push $P5004, "code_ref_blocks"
    push $P5004, "load_dependency_tasks"
    push $P5004, "fixup_tasks"
    push $P5004, "push_lexpad"
    push $P5004, "pop_lexpad"
    push $P5004, "cur_lexpad"
    push $P5004, "get_legacy_block_list"
    push $P5004, "load_setting"
    push $P5004, "load_module"
    push $P5004, "import"
    push $P5004, "install_package_symbol"
    push $P5004, "install_lexical_symbol"
    push $P5004, "install_package_routine"
    push $P5004, "create_code"
    push $P5004, "pkg_create_mo"
    push $P5004, "pkg_add_attribute"
    push $P5004, "pkg_add_method"
    push $P5004, "set_routine_signature"
    push $P5004, "pkg_set_body_block"
    push $P5004, "pkg_add_parent_or_role"
    push $P5004, "pkg_add_parrot_vtable_handler_mapping"
    push $P5004, "pkg_compose"
    push $P5004, "run_begin_block"
    push $P5004, "libs"
    push $P5004, "add_initializations"
    push $P5004, "cleanup"
    push $P5004, "is_lexical"
    push $P5004, "is_package"
    push $P5004, "is_scope"
    push $P5004, "known_sym"
    push $P5004, "find_sym"
    push $P5004, "$!sc"
    push $P5004, "$!handle"
    push $P5004, "$!precomp_mode"
    push $P5004, "$!num_code_refs"
    push $P5004, "$!code_ref_blocks"
    push $P5004, "@!load_dependency_tasks"
    push $P5004, "@!fixup_tasks"
    push $P5004, "%!addr_to_slot"
    push $P5004, "@!BLOCKS"
    push $P5004, "%!code_objects_to_fix_up"
    push $P5004, "%!code_object_types"
    push $P5004, "%!code_object_fixup_list"
    push $P5004, "%!code_stub_sc_idx"
    push $P5004, "@!clearup_tasks"
    push $P5004, "MATCH"
    push $P5004, "Bool"
    push $P5004, "parse"
    push $P5004, "!INTERPOLATE"
    push $P5004, "!INTERPOLATE_REGEX"
    push $P5004, "orig"
    push $P5004, "target"
    push $P5004, "from"
    push $P5004, "pos"
    push $P5004, "CAPHASH"
    push $P5004, "!cursor_init"
    push $P5004, "!cursor_start_all"
    push $P5004, "!cursor_start_cur"
    push $P5004, "!cursor_start_subcapture"
    push $P5004, "!cursor_capture"
    push $P5004, "!cursor_push_cstack"
    push $P5004, "!cursor_pass"
    push $P5004, "!cursor_fail"
    push $P5004, "!cursor_pos"
    push $P5004, "!cursor_next"
    push $P5004, "!cursor_more"
    push $P5004, "!reduce"
    push $P5004, "!reduce_with_match"
    push $P5004, "!shared"
    push $P5004, "!protoregex"
    push $P5004, "!protoregex_nfa"
    push $P5004, "!protoregex_table"
    push $P5004, "!alt"
    push $P5004, "!alt_nfa"
    push $P5004, "!precompute_nfas"
    push $P5004, "!dba"
    push $P5004, "!highwater"
    push $P5004, "!highexpect"
    push $P5004, "!fresh_highexpect"
    push $P5004, "!set_highexpect"
    push $P5004, "!clear_highwater"
    push $P5004, "!BACKREF"
    push $P5004, "!LITERAL"
    push $P5004, "at"
    push $P5004, "before"
    push $P5004, "after"
    push $P5004, "ws"
    push $P5004, "ww"
    push $P5004, "wb"
    push $P5004, "ident"
    push $P5004, "alpha"
    push $P5004, "alnum"
    push $P5004, "upper"
    push $P5004, "lower"
    push $P5004, "digit"
    push $P5004, "xdigit"
    push $P5004, "space"
    push $P5004, "blank"
    push $P5004, "cntrl"
    push $P5004, "punct"
    push $P5004, "FAILGOAL"
    push $P5004, "throw_unrecog_backslash_seq"
    push $P5004, "termish"
    push $P5004, "term"
    push $P5004, "infix"
    push $P5004, "prefix"
    push $P5004, "postfix"
    push $P5004, "circumfix"
    push $P5004, "postcircumfix"
    push $P5004, "term:sym<circumfix>"
    push $P5004, "infixish"
    push $P5004, "prefixish"
    push $P5004, "postfixish"
    push $P5004, "nullterm"
    push $P5004, "nullterm_alt"
    push $P5004, "nulltermish"
    push $P5004, "quote_delimited"
    push $P5004, "quote_atom"
    push $P5004, "decint"
    push $P5004, "decints"
    push $P5004, "hexint"
    push $P5004, "hexints"
    push $P5004, "octint"
    push $P5004, "octints"
    push $P5004, "binint"
    push $P5004, "binints"
    push $P5004, "integer"
    push $P5004, "dec_number"
    push $P5004, "escale"
    push $P5004, "quote_escape"
    push $P5004, "quote_escape:sym<backslash>"
    push $P5004, "quote_escape:sym<stopper>"
    push $P5004, "quote_escape:sym<bs>"
    push $P5004, "quote_escape:sym<nl>"
    push $P5004, "quote_escape:sym<cr>"
    push $P5004, "quote_escape:sym<tab>"
    push $P5004, "quote_escape:sym<ff>"
    push $P5004, "quote_escape:sym<esc>"
    push $P5004, "quote_escape:sym<hex>"
    push $P5004, "quote_escape:sym<oct>"
    push $P5004, "quote_escape:sym<chr>"
    push $P5004, "quote_escape:sym<0>"
    push $P5004, "quote_escape:sym<misc>"
    push $P5004, "charname"
    push $P5004, "charnames"
    push $P5004, "charspec"
    push $P5004, "O"
    push $P5004, "panic"
    push $P5004, "peek_delimiters"
    push $P5004, "quote_EXPR"
    push $P5004, "quotemod_check"
    push $P5004, "starter"
    push $P5004, "stopper"
    push $P5004, "split_words"
    push $P5004, "EXPR"
    push $P5004, "EXPR_reduce"
    push $P5004, "EXPR_nonassoc"
    push $P5004, "ternary"
    push $P5004, "MARKER"
    push $P5004, "MARKED"
    push $P5004, "LANG"
    push $P5004, "TOP"
    push $P5004, "identifier"
    push $P5004, "name"
    push $P5004, "deflongname"
    push $P5004, "ENDSTMT"
    push $P5004, "unv"
    push $P5004, "pod_comment"
    push $P5004, "comp_unit"
    push $P5004, "statementlist"
    push $P5004, "statement"
    push $P5004, "eat_terminator"
    push $P5004, "xblock"
    push $P5004, "pblock"
    push $P5004, "lambda"
    push $P5004, "block"
    push $P5004, "blockoid"
    push $P5004, "newpad"
    push $P5004, "outerctx"
    push $P5004, "finishpad"
    push $P5004, "you_are_here"
    push $P5004, "terminator"
    push $P5004, "terminator:sym<;>"
    push $P5004, "terminator:sym<}>"
    push $P5004, "statement_control"
    push $P5004, "statement_control:sym<use>"
    push $P5004, "statement_control:sym<if>"
    push $P5004, "statement_control:sym<unless>"
    push $P5004, "statement_control:sym<while>"
    push $P5004, "statement_control:sym<repeat>"
    push $P5004, "statement_control:sym<for>"
    push $P5004, "statement_control:sym<CATCH>"
    push $P5004, "statement_control:sym<CONTROL>"
    push $P5004, "statement_prefix"
    push $P5004, "statement_prefix:sym<BEGIN>"
    push $P5004, "statement_prefix:sym<INIT>"
    push $P5004, "statement_prefix:sym<try>"
    push $P5004, "blorst"
    push $P5004, "statement_mod_cond"
    push $P5004, "statement_mod_cond:sym<if>"
    push $P5004, "statement_mod_cond:sym<unless>"
    push $P5004, "statement_mod_loop"
    push $P5004, "statement_mod_loop:sym<while>"
    push $P5004, "statement_mod_loop:sym<until>"
    push $P5004, "statement_mod_loop:sym<for>"
    push $P5004, "term:sym<fatarrow>"
    push $P5004, "term:sym<colonpair>"
    push $P5004, "term:sym<variable>"
    push $P5004, "term:sym<package_declarator>"
    push $P5004, "term:sym<scope_declarator>"
    push $P5004, "term:sym<routine_declarator>"
    push $P5004, "term:sym<multi_declarator>"
    push $P5004, "term:sym<regex_declarator>"
    push $P5004, "term:sym<statement_prefix>"
    push $P5004, "term:sym<lambda>"
    push $P5004, "fatarrow"
    push $P5004, "colonpair"
    push $P5004, "variable"
    push $P5004, "sigil"
    push $P5004, "twigil"
    push $P5004, "package_declarator"
    push $P5004, "package_declarator:sym<module>"
    push $P5004, "package_declarator:sym<knowhow>"
    push $P5004, "package_declarator:sym<class>"
    push $P5004, "package_declarator:sym<grammar>"
    push $P5004, "package_declarator:sym<role>"
    push $P5004, "package_declarator:sym<native>"
    push $P5004, "package_declarator:sym<stub>"
    push $P5004, "package_def"
    push $P5004, "role_params"
    push $P5004, "scope_declarator"
    push $P5004, "scope_declarator:sym<my>"
    push $P5004, "scope_declarator:sym<our>"
    push $P5004, "scope_declarator:sym<has>"
    push $P5004, "scoped"
    push $P5004, "typename"
    push $P5004, "declarator"
    push $P5004, "variable_declarator"
    push $P5004, "routine_declarator"
    push $P5004, "routine_declarator:sym<sub>"
    push $P5004, "routine_declarator:sym<method>"
    push $P5004, "routine_def"
    push $P5004, "method_def"
    push $P5004, "onlystar"
    push $P5004, "multi_declarator"
    push $P5004, "multi_declarator:sym<multi>"
    push $P5004, "multi_declarator:sym<proto>"
    push $P5004, "multi_declarator:sym<null>"
    push $P5004, "signature"
    push $P5004, "parameter"
    push $P5004, "param_var"
    push $P5004, "named_param"
    push $P5004, "default_value"
    push $P5004, "trait"
    push $P5004, "trait_mod"
    push $P5004, "trait_mod:sym<is>"
    push $P5004, "regex_declarator"
    push $P5004, "dotty"
    push $P5004, "term:sym<self>"
    push $P5004, "term:sym<identifier>"
    push $P5004, "term:sym<name>"
    push $P5004, "term:sym<pir::op>"
    push $P5004, "term:sym<pir::const>"
    push $P5004, "term:sym<nqp::op>"
    push $P5004, "term:sym<nqp::const>"
    push $P5004, "term:sym<onlystar>"
    push $P5004, "args"
    push $P5004, "arglist"
    push $P5004, "term:sym<value>"
    push $P5004, "value"
    push $P5004, "number"
    push $P5004, "quote"
    push $P5004, "quote:sym<apos>"
    push $P5004, "quote:sym<dblq>"
    push $P5004, "quote:sym<q>"
    push $P5004, "quote:sym<qq>"
    push $P5004, "quote:sym<Q>"
    push $P5004, "quote:sym<Q:PIR>"
    push $P5004, "quote:sym</ />"
    push $P5004, "quote_escape:sym<$>"
    push $P5004, "quote_escape:sym<{ }>"
    push $P5004, "circumfix:sym<( )>"
    push $P5004, "circumfix:sym<[ ]>"
    push $P5004, "circumfix:sym<ang>"
    push $P5004, utf8:"circumfix:sym<\x{ab} \x{bb}>"
    push $P5004, "circumfix:sym<{ }>"
    push $P5004, "semilist"
    push $P5004, "infixstopper"
    push $P5004, "postcircumfix:sym<[ ]>"
    push $P5004, "postcircumfix:sym<{ }>"
    push $P5004, "postcircumfix:sym<ang>"
    push $P5004, "postcircumfix:sym<( )>"
    push $P5004, "postfix:sym<.>"
    push $P5004, "prefix:sym<++>"
    push $P5004, "prefix:sym<-->"
    push $P5004, "postfix:sym<++>"
    push $P5004, "postfix:sym<-->"
    push $P5004, "infix:sym<**>"
    push $P5004, "prefix:sym<+>"
    push $P5004, "prefix:sym<~>"
    push $P5004, "prefix:sym<->"
    push $P5004, "prefix:sym<?>"
    push $P5004, "prefix:sym<!>"
    push $P5004, "prefix:sym<|>"
    push $P5004, "infix:sym<*>"
    push $P5004, "infix:sym</>"
    push $P5004, "infix:sym<%>"
    push $P5004, "infix:sym<+&>"
    push $P5004, "infix:sym<+>"
    push $P5004, "infix:sym<->"
    push $P5004, "infix:sym<+|>"
    push $P5004, "infix:sym<+^>"
    push $P5004, "infix:sym<~>"
    push $P5004, "infix:sym<==>"
    push $P5004, "infix:sym<!=>"
    push $P5004, "infix:sym<<=>"
    push $P5004, "infix:sym<>=>"
    push $P5004, "infix:sym<<>"
    push $P5004, "infix:sym<>>"
    push $P5004, "infix:sym<eq>"
    push $P5004, "infix:sym<ne>"
    push $P5004, "infix:sym<le>"
    push $P5004, "infix:sym<ge>"
    push $P5004, "infix:sym<lt>"
    push $P5004, "infix:sym<gt>"
    push $P5004, "infix:sym<=:=>"
    push $P5004, "infix:sym<~~>"
    push $P5004, "infix:sym<&&>"
    push $P5004, "infix:sym<||>"
    push $P5004, "infix:sym<//>"
    push $P5004, "infix:sym<?? !!>"
    push $P5004, "infix:sym<=>"
    push $P5004, "infix:sym<:=>"
    push $P5004, "infix:sym<::=>"
    push $P5004, "infix:sym<,>"
    push $P5004, "prefix:sym<return>"
    push $P5004, "prefix:sym<make>"
    push $P5004, "term:sym<last>"
    push $P5004, "term:sym<next>"
    push $P5004, "term:sym<redo>"
    push $P5004, "smartmatch"
    push $P5004, "$!shared"
    push $P5004, "$!from"
    push $P5004, "$!pos"
    push $P5004, "$!match"
    push $P5004, "$!name"
    push $P5004, "$!bstack"
    push $P5004, "$!cstack"
    push $P5004, "$!regexsub"
    push $P5004, "$!restart"
    push $P5004, "9695343AB2BEC3801FF399D28AAA45968E1B1970-1365879990.406"
    push $P5004, "src\\stage2\\gen\\NQPP6QRegex.pm"
    push $P5004, "obs"
    push $P5004, "throw_unrecognized_metachar"
    push $P5004, "throw_null_pattern"
    push $P5004, "normspace"
    push $P5004, "arg"
    push $P5004, "nibbler"
    push $P5004, "rxstopper"
    push $P5004, "termaltseq"
    push $P5004, "termconjseq"
    push $P5004, "termalt"
    push $P5004, "termconj"
    push $P5004, "quantified_atom"
    push $P5004, "separator"
    push $P5004, "atom"
    push $P5004, "quantifier"
    push $P5004, "quantifier:sym<*>"
    push $P5004, "quantifier:sym<+>"
    push $P5004, "quantifier:sym<?>"
    push $P5004, "quantifier:sym<{N,M}>"
    push $P5004, "quantifier:sym<**>"
    push $P5004, "backmod"
    push $P5004, "metachar"
    push $P5004, "metachar:sym<ws>"
    push $P5004, "metachar:sym<[ ]>"
    push $P5004, "metachar:sym<( )>"
    push $P5004, "metachar:sym<'>"
    push $P5004, "metachar:sym<\">"
    push $P5004, "metachar:sym<.>"
    push $P5004, "metachar:sym<^>"
    push $P5004, "metachar:sym<^^>"
    push $P5004, "metachar:sym<$>"
    push $P5004, "metachar:sym<$$>"
    push $P5004, "metachar:sym<:::>"
    push $P5004, "metachar:sym<::>"
    push $P5004, "metachar:sym<lwb>"
    push $P5004, "metachar:sym<rwb>"
    push $P5004, "metachar:sym<from>"
    push $P5004, "metachar:sym<to>"
    push $P5004, "metachar:sym<bs>"
    push $P5004, "metachar:sym<mod>"
    push $P5004, "metachar:sym<quantifier>"
    push $P5004, "metachar:sym<~>"
    push $P5004, "metachar:sym<{*}>"
    push $P5004, "metachar:sym<assert>"
    push $P5004, "metachar:sym<var>"
    push $P5004, "backslash"
    push $P5004, "backslash:sym<s>"
    push $P5004, "backslash:sym<b>"
    push $P5004, "backslash:sym<e>"
    push $P5004, "backslash:sym<f>"
    push $P5004, "backslash:sym<h>"
    push $P5004, "backslash:sym<r>"
    push $P5004, "backslash:sym<t>"
    push $P5004, "backslash:sym<v>"
    push $P5004, "backslash:sym<o>"
    push $P5004, "backslash:sym<x>"
    push $P5004, "backslash:sym<c>"
    push $P5004, "backslash:sym<A>"
    push $P5004, "backslash:sym<z>"
    push $P5004, "backslash:sym<Z>"
    push $P5004, "backslash:sym<Q>"
    push $P5004, "backslash:sym<unrec>"
    push $P5004, "backslash:sym<misc>"
    push $P5004, "assertion"
    push $P5004, "assertion:sym<?>"
    push $P5004, "assertion:sym<!>"
    push $P5004, "assertion:sym<|>"
    push $P5004, "assertion:sym<method>"
    push $P5004, "assertion:sym<name>"
    push $P5004, "assertion:sym<[>"
    push $P5004, "cclass_elem"
    push $P5004, "mod_internal"
    push $P5004, "mod_ident"
    push $P5004, "mod_ident:sym<ignorecase>"
    push $P5004, "mod_ident:sym<ratchet>"
    push $P5004, "mod_ident:sym<sigspace>"
    push $P5004, "mod_ident:sym<dba>"
    push $P5004, "mod_ident:sym<oops>"
    push $P5004, "metachar:sym<:my>"
    push $P5004, "metachar:sym<{ }>"
    push $P5004, "metachar:sym<nqpvar>"
    push $P5004, "assertion:sym<{ }>"
    push $P5004, "assertion:sym<?{ }>"
    push $P5004, "assertion:sym<var>"
    push $P5004, "codeblock"
    push $P5004, "ints_to_string"
    push $P5004, "CTXSAVE"
    push $P5004, "SET_BLOCK_OUTER_CTX"
    push $P5004, "qbuildsub"
    push $P5004, "alt_nfas"
    push $P5004, "subrule_alias"
    push $P5004, "flip_ast"
    push $P5004, "create_regex_code_object"
    push $P5004, "store_regex_caps"
    push $P5004, "store_regex_nfa"
    push $P5004, "store_regex_alt_nfa"
    push $P5004, "backend"
    push $P5004, "language"
    push $P5004, "compiler"
    push $P5004, "config"
    push $P5004, "autoprint"
    push $P5004, "interactive"
    push $P5004, "interactive_result"
    push $P5004, "interactive_exception"
    push $P5004, "eval"
    push $P5004, "ctxsave"
    push $P5004, "stages"
    push $P5004, "parsegrammar"
    push $P5004, "parseactions"
    push $P5004, "interactive_banner"
    push $P5004, "interactive_prompt"
    push $P5004, "compiler_progname"
    push $P5004, "commandline_options"
    push $P5004, "command_line"
    push $P5004, "command_eval"
    push $P5004, "process_args"
    push $P5004, "evalfiles"
    push $P5004, "exists_stage"
    push $P5004, "compile"
    push $P5004, "start"
    push $P5004, "ast"
    push $P5004, "dumper"
    push $P5004, "usage"
    push $P5004, "version"
    push $P5004, "show-config"
    push $P5004, "verbose-config"
    push $P5004, "nqpevent"
    push $P5004, "removestage"
    push $P5004, "addstage"
    push $P5004, "parse_name"
    push $P5004, "lineof"
    push $P5004, "user-progname"
    push $P5004, "cli-options"
    push $P5004, "cli-arguments"
    push $P5004, "default_backend"
    push $P5004, "@!stages"
    push $P5004, "$!parsegrammar"
    push $P5004, "$!parseactions"
    push $P5004, "@!cmdoptions"
    push $P5004, "$!usage"
    push $P5004, "$!compiler_progname"
    push $P5004, "$!language"
    push $P5004, "%!config"
    push $P5004, "$!user_progname"
    push $P5004, "@!cli-arguments"
    push $P5004, "%!cli-options"
    push $P5004, "$!backend"
    push $P5004, ""
    push $P5004, utf8:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000"
    push $P5004, "alt_nfa__1_1365879996.59"
    push $P5004, "alt_nfa__2_1365879996.609"
    push $P5004, utf8:"\n\x{b}\f\r\x{85}\u2028\u2029"
    push $P5004, "alt_nfa__4_1365879996.63"
    push $P5004, "alt_nfa__3_1365879996.62"
    push $P5004, "alt_nfa__6_1365879996.724"
    push $P5004, "alt_nfa__5_1365879996.71"
    push $P5004, "alt_nfa__7_1365879996.823"
    push $P5004, "alt_nfa__9_1365879996.845"
    push $P5004, "alt_nfa__8_1365879996.829"
    push $P5004, "{"
    push $P5004, "alt_nfa__10_1365879996.876"
    push $P5004, "alt_nfa__11_1365879996.882"
    push $P5004, ";"
    push $P5004, "}"
    push $P5004, "sym"
    push $P5004, "else"
    push $P5004, "alt_nfa__12_1365879996.995"
    push $P5004, "wu"
    push $P5004, "alt_nfa__13_1365879997.018"
    push $P5004, "alt_nfa__14_1365879997.018"
    push $P5004, "alt_nfa__15_1365879997.018"
    push $P5004, "alt_nfa__16_1365879997.074"
    push $P5004, "cond"
    push $P5004, "alt_nfa__17_1365879997.153"
    push $P5004, "alt_nfa__18_1365879997.162"
    push $P5004, "key"
    push $P5004, "val"
    push $P5004, "not"
    push $P5004, "alt_nfa__19_1365879997.207"
    push $P5004, "desigilname"
    push $P5004, "<"
    push $P5004, "/_!"
    push $P5004, "alt_nfa__20_1365879997.228"
    push $P5004, "$@%&"
    push $P5004, "*!?"
    push $P5004, "metaclass"
    push $P5004, "repr"
    push $P5004, "export"
    push $P5004, "parent"
    push $P5004, "role"
    push $P5004, "alt_nfa__21_1365879997.613"
    push $P5004, "alt_nfa__22_1365879997.629"
    push $P5004, "alt_nfa__23_1365879997.683"
    push $P5004, "latename"
    push $P5004, "private"
    push $P5004, "alt_nfa__24_1365879997.723"
    push $P5004, "invocant"
    push $P5004, "alt_nfa__26_1365879997.807"
    push $P5004, "alt_nfa__25_1365879997.802"
    push $P5004, "definedness"
    push $P5004, "quant"
    push $P5004, "_DU"
    push $P5004, "alt_nfa__27_1365879997.835"
    push $P5004, "alt_nfa__28_1365879997.835"
    push $P5004, "alt_nfa__29_1365879997.835"
    push $P5004, "/!"
    push $P5004, "alt_nfa__30_1365879997.847"
    push $P5004, "longname"
    push $P5004, "proto"
    push $P5004, "p6regex"
    push $P5004, "alt_nfa__31_1365879997.971"
    push $P5004, "alt_nfa__32_1365879997.972"
    push $P5004, "alt_nfa__33_1365879997.972"
    push $P5004, "'\""
    push $P5004, "("
    push $P5004, "alt_nfa__34_1365879997.998"
    push $P5004, "alt_nfa__35_1365879997.999"
    push $P5004, "op"
    push $P5004, "const"
    push $P5004, "alt_nfa__36_1365879998.083"
    push $P5004, "alt_nfa__37_1365879998.093"
    push $P5004, "sign"
    push $P5004, "alt_nfa__38_1365879998.103"
    push $P5004, "'"
    push $P5004, "\""
    push $P5004, "$"
    push $P5004, utf8:"\x{ab}"
    push $P5004, "OPER"
    push $P5004, ">"
    push $P5004, "}/"
    push $P5004, "var"
    push $P5004, "alt_nfa__39_1365879998.959"
    push $P5004, "alt_nfa__40_1365879998.985"
    push $P5004, "alt_nfa__41_1365879998.999"
    push $P5004, "zw"
    push $P5004, "?!"
    push $P5004, "alt_nfa__42_1365879999.036"
    push $P5004, "$@"
    push $P5004, "__6MODEL_CORE__"
    push $P5004, "GLOBALish"
    push $P5004, "EXPORT"
    push $P5004, "240369A269C8B2F7269F4921670E12E13C5F801B-1365879956.051"
    push $P5004, "src\\stage2\\gen\\nqp-mo.pm"
    push $P5004, "NQP::World"
    push $P5004, "NQP::Grammar"
    push $P5004, "alt_nfa__1_1365879968.77"
    push $P5004, "alt_nfa__2_1365879968.804"
    push $P5004, "alt_nfa__3_1365879968.878"
    push $P5004, "alt_nfa__4_1365879968.878"
    push $P5004, "alt_nfa__5_1365879968.899"
    push $P5004, "alt_nfa__6_1365879968.982"
    push $P5004, "alt_nfa__7_1365879968.997"
    push $P5004, "alt_nfa__8_1365879969.039"
    push $P5004, "alt_nfa__9_1365879969.082"
    push $P5004, "shared"
    push $P5004, "match"
    push $P5004, "bstack"
    push $P5004, "cstack"
    push $P5004, "regexsub"
    push $P5004, "restart"
    push $P5004, "NQP::Regex"
    push $P5004, "alt_nfa__1_1365879990.541"
    push $P5004, "alt_nfa__2_1365879990.548"
    push $P5004, "alt_nfa__3_1365879990.573"
    push $P5004, "alt_nfa__4_1365879990.657"
    push $P5004, "alt_nfa__5_1365879990.677"
    push $P5004, "alt_nfa__6_1365879990.752"
    push $P5004, "alt_nfa__7_1365879990.782"
    push $P5004, "alt_nfa__8_1365879990.805"
    push $P5004, "alt_nfa__9_1365879990.898"
    push $P5004, "alt_nfa__10_1365879990.982"
    push $P5004, "alt_nfa__11_1365879990.989"
    push $P5004, "alt_nfa__12_1365879991.086"
    push $P5004, "alt_nfa__13_1365879991.154"
    push $P5004, "alt_nfa__14_1365879991.168"
    push $P5004, "alt_nfa__15_1365879991.245"
    push $P5004, "alt_nfa__16_1365879991.257"
    push $P5004, "alt_nfa__17_1365879991.293"
    push $P5004, "alt_nfa__18_1365879991.301"
    push $P5004, "alt_nfa__19_1365879991.469"
    push $P5004, "alt_nfa__20_1365879991.47"
    push $P5004, "alt_nfa__21_1365879991.47"
    push $P5004, "alt_nfa__23_1365879991.501"
    push $P5004, "alt_nfa__24_1365879991.501"
    push $P5004, "alt_nfa__22_1365879991.478"
    push $P5004, "NQP::Actions"
    push $P5004, "NQP::RegexActions"
    push $P5004, "NQP::Compiler"
    push $P5004, "CompileTimeValue"
    push $P5004, "F054B153354B5DBC27BD80BD112E1D4B6145EB63-1365879961.93"
    push $P5004, "src\\stage2\\QASTNode.nqp"
    push $P5004, "SpecialArg"
    push $P5004, "Node"
    push $P5004, "Regex"
    push $P5004, "IVal"
    push $P5004, "NVal"
    push $P5004, "SVal"
    push $P5004, "BVal"
    push $P5004, "WVal"
    push $P5004, "Want"
    push $P5004, "Var"
    push $P5004, "VarWithFallback"
    push $P5004, "Op"
    push $P5004, "VM"
    push $P5004, "Stmts"
    push $P5004, "Stmt"
    push $P5004, "Block"
    push $P5004, "Unquote"
    push $P5004, "CompUnit"
    push $P5004, "InlinePlaceholder"
    push $P5004, "Operations"
    push $P5004, "1BD2754E13656C3F57411A23AD0833C5FE250812-1365879974.339"
    push $P5004, "src\\stage2\\QAST.nqp"
    push $P5004, "Compiler"
    push $P5004, "NFA"
    push $P5004, "P6Regex"
    push $P5004, "Grammar"
    push $P5004, "Actions"
    push $P5004, "Backend"
    push $P5004, "CommandLine"
    push $P5004, "World"
    push $P5004, "CallResult"
    push $P5004, "Sub"
    push $P5004, "Ops"
    push $P5004, "Label"
    push $P5004, "RegexActions"
    push $P5004, "Ee"
    push $P5004, "01"
    push $P5004, "01234567"
    push $P5004, "0123456789abcdefABCDEF"
    push $P5004, "?@ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    push $P5004, "dDnNsSwW"
    push $P5004, "bB"
    push $P5004, "eE"
    push $P5004, "fF"
    push $P5004, "hH"
    push $P5004, "rR"
    push $P5004, "tT"
    push $P5004, "vV"
    push $P5004, "oO"
    push $P5004, "xX"
    push $P5004, "cC"
    push $P5004, "&|~"
    .const 'Sub' $P5005 = 'cuid_509_1365879995.227' 
    capture_lex $P5005
    $P5006 = $P5005()
    nqp_deserialize_sc "", cur_sc, $P5004, $P5006, conflicts
    unless conflicts goto if3359_end7085 
    die "Repossession conflicts occurred during deserialization"
  if3359_end7085:
    .const "LexInfo" $P5001 = "cuid_374_1365879995.227"
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    $P5001."set_static_lexpad_value"("GLOBALish", $P5002)
    .const "LexInfo" $P5003 = "cuid_374_1365879995.227"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_374_1365879995.227"
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 0
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_374_1365879995.227"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_374_1365879995.227"
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 1
    $P5001."set_static_lexpad_value"("EXPORT", $P5002)
    .const "LexInfo" $P5003 = "cuid_374_1365879995.227"
    $P5004 = $P5003."finish_static_lexpad"()
    .const 'Sub' $P5001 = "cuid_1_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 4
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_2_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 5
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_3_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 6
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_4_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 7
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_5_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 8
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_6_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 9
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_7_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 10
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_8_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 11
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_9_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 12
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_10_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 13
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_11_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 14
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_12_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 15
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_13_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 16
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_14_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 17
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_15_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 18
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_16_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 19
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_17_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 20
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_18_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 21
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_19_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 22
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_20_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 23
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_21_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 24
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_22_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 25
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_23_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 26
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_24_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 27
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_25_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 28
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_26_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 29
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_27_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 30
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_28_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 31
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_29_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 32
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_30_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 33
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_31_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 34
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_32_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 35
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_33_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 36
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_34_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 37
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_376_1365879995.227"
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 3
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_376_1365879995.227"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_376_1365879995.227"
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 3
    $P5001."set_static_lexpad_value"("$?CLASS", $P5002)
    .const "LexInfo" $P5003 = "cuid_376_1365879995.227"
    $P5004 = $P5003."finish_static_lexpad"()
    .const 'Sub' $P5001 = "cuid_35_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 39
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_36_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 40
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_37_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 41
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_38_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 42
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_39_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 43
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_40_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 44
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_41_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 45
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_42_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 46
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_43_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 47
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_44_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 48
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_45_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 49
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_46_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 50
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_47_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 51
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_48_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 52
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_49_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 53
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_50_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 54
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_51_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 55
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_52_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 56
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_53_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 57
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_54_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 58
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_55_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 59
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_56_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 60
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_57_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 61
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_58_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 62
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_59_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 63
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_60_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 64
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_61_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 65
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_62_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 66
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_63_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 67
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_64_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 68
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_65_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 69
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_66_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 70
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_67_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 71
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_68_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 72
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_69_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 73
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_70_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 74
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_71_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 75
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_72_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 76
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_73_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 77
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_74_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 78
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_75_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 79
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_76_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 80
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_77_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 81
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_78_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 82
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_79_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 83
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_80_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 84
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_81_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 85
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_82_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 86
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_83_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 87
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_84_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 88
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_85_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 89
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_86_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 90
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_87_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 91
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_88_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 92
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_89_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 93
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_90_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 94
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_91_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 95
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_92_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 96
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_93_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 97
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_94_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 98
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_95_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 99
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_96_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 100
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_97_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 101
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_98_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 102
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_99_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 103
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_100_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 104
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_101_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 105
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_102_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 106
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_103_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 107
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_104_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 108
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_105_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 109
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_106_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 110
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_107_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 111
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_108_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 112
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_109_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 113
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_110_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 114
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_111_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 115
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_112_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 116
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_113_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 117
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_114_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 118
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_115_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 119
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_116_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 120
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_117_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 121
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_118_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 122
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_119_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 123
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_120_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 124
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_121_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 125
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_122_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 126
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_123_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 127
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_124_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 128
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_125_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 129
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_126_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 130
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_127_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 131
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_128_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 132
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_129_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 133
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_130_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 134
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_131_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 135
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_132_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 136
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_133_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 137
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_134_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 138
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_135_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 139
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_136_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 140
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_137_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 141
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_138_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 142
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_139_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 143
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_140_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 144
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_141_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 145
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_142_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 146
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_143_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 147
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_144_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 148
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_145_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 149
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_146_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 150
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_147_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 151
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_148_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 152
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_149_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 153
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_150_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 154
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_151_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 155
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_152_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 156
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_153_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 157
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_154_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 158
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_155_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 159
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_156_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 160
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_157_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 161
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_158_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 162
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_159_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 163
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_160_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 164
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_161_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 165
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_162_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 166
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_163_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 167
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_164_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 168
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_165_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 169
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_166_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 170
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_167_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 171
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_168_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 172
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_169_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 173
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_170_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 174
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_171_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 175
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_172_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 176
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_173_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 177
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_174_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 178
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_175_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 179
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_176_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 180
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_177_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 181
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_178_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 182
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_179_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 183
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_180_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 184
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_181_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 185
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_182_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 186
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_183_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 187
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_184_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 188
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_185_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 189
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_186_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 190
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_187_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 191
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_188_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 192
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_189_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 193
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_190_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 194
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_191_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 195
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_192_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 196
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_193_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 197
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_194_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 198
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_195_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 199
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_196_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 200
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_197_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 201
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_198_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 202
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_199_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 203
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_200_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 204
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_201_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 205
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_202_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 206
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_203_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 207
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_204_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 208
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_205_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 209
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_206_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 210
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_207_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 211
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_208_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 212
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_209_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 213
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_210_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 214
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_211_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 215
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_212_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 216
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_213_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 217
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_214_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 218
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_215_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 219
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_216_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 220
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_217_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 221
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_218_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 222
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_219_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 223
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_220_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 224
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_221_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 225
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_222_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 226
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_223_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 227
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_224_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 228
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_225_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 229
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_226_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 230
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_227_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 231
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_397_1365879995.227"
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 38
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_397_1365879995.227"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_397_1365879995.227"
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 38
    $P5001."set_static_lexpad_value"("$?CLASS", $P5002)
    .const "LexInfo" $P5003 = "cuid_397_1365879995.227"
    $P5004 = $P5003."finish_static_lexpad"()
    .const 'Sub' $P5001 = "cuid_228_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 233
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_229_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 234
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_230_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 235
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_231_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 236
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_232_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 237
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_233_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 238
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_234_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 239
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_235_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 240
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_236_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 241
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_237_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 242
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_238_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 243
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_239_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 244
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_240_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 245
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_241_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 246
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_242_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 247
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_243_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 248
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_244_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 249
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_245_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 250
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_246_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 251
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_247_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 252
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_416_1365879995.227"
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 232
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_416_1365879995.227"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_416_1365879995.227"
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 232
    $P5001."set_static_lexpad_value"("$?CLASS", $P5002)
    .const "LexInfo" $P5003 = "cuid_416_1365879995.227"
    $P5004 = $P5003."finish_static_lexpad"()
    .const 'Sub' $P5001 = "cuid_248_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 254
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_249_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 255
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_250_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 256
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_251_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 257
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_252_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 258
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_253_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 259
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_254_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 260
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_255_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 261
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_256_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 262
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_257_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 263
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_258_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 264
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_259_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 265
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_260_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 266
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_261_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 267
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_262_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 268
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_263_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 269
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_264_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 270
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_265_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 271
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_266_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 272
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_267_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 273
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_268_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 274
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_269_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 275
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_270_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 276
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_271_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 277
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_272_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 278
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_273_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 279
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_274_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 280
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_275_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 281
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_276_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 282
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_277_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 283
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_278_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 284
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_279_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 285
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_280_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 286
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_281_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 287
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_282_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 288
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_283_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 289
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_284_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 290
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_285_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 291
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_286_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 292
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_287_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 293
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_288_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 294
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_289_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 295
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_290_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 296
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_291_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 297
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_292_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 298
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_293_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 299
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_294_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 300
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_295_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 301
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_296_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 302
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_297_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 303
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_298_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 304
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_299_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 305
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_300_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 306
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_301_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 307
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_302_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 308
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_303_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 309
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_304_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 310
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_305_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 311
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_306_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 312
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_307_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 313
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_308_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 314
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_309_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 315
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_310_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 316
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_311_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 317
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_312_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 318
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_313_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 319
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_314_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 320
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_315_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 321
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_316_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 322
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_317_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 323
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_318_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 324
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_319_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 325
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_320_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 326
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_321_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 327
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_322_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 328
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_323_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 329
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_324_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 330
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_325_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 331
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_326_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 332
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_327_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 333
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_328_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 334
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_329_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 335
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_330_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 336
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_331_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 337
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_332_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 338
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_333_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 339
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_334_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 340
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_335_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 341
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_336_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 342
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_337_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 343
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_338_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 344
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_339_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 345
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_340_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 346
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_341_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 347
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_342_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 348
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_343_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 349
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_344_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 350
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_345_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 351
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_346_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 352
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_347_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 353
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_348_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 354
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_349_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 355
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_350_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 356
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_351_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 357
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_352_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 358
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_353_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 359
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_354_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 360
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_355_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 361
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_356_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 362
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_357_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 363
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_358_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 364
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_359_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 365
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_426_1365879995.227"
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 253
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_426_1365879995.227"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_426_1365879995.227"
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 253
    $P5001."set_static_lexpad_value"("$?CLASS", $P5002)
    .const "LexInfo" $P5003 = "cuid_426_1365879995.227"
    $P5004 = $P5003."finish_static_lexpad"()
    .const 'Sub' $P5001 = "cuid_360_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 367
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_361_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 368
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_362_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 369
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_363_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 370
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_364_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 371
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_365_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 372
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_366_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 373
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_367_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 374
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_368_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 375
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_369_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 376
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_370_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 377
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_371_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 378
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_372_1365879995.227" 
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 379
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_504_1365879995.227"
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 366
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_504_1365879995.227"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_504_1365879995.227"
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 366
    $P5001."set_static_lexpad_value"("$?CLASS", $P5002)
    .const "LexInfo" $P5003 = "cuid_504_1365879995.227"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_508_1365879995.227"
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 380
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_508_1365879995.227"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_508_1365879995.227"
    nqp_get_sc_object $P5002, "744C7ED774769C466927C755238AD24292064564-1365879995.253", 380
    $P5001."set_static_lexpad_value"("$?CLASS", $P5002)
    .const "LexInfo" $P5003 = "cuid_508_1365879995.227"
    $P5004 = $P5003."finish_static_lexpad"()
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_509_1365879995.227") :anon :lex :outer("cuid_510_1365879995.227")
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    new $P5001, 'QRPA'
    .const 'Sub' $P5002 = "cuid_1_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_2_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_3_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_4_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_5_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_6_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_7_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_8_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_9_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_10_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_11_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_12_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_13_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_14_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_15_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_16_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_17_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_18_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_19_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_20_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_21_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_22_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_23_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_24_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_25_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_26_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_27_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_28_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_29_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_30_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_31_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_32_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_33_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_34_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_35_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_36_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_37_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_38_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_39_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_40_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_41_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_42_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_43_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_44_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_45_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_46_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_47_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_48_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_49_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_50_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_51_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_52_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_53_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_54_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_55_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_56_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_57_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_58_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_59_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_60_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_61_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_62_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_63_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_64_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_65_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_66_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_67_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_68_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_69_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_70_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_71_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_72_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_73_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_74_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_75_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_76_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_77_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_78_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_79_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_80_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_81_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_82_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_83_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_84_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_85_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_86_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_87_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_88_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_89_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_90_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_91_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_92_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_93_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_94_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_95_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_96_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_97_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_98_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_99_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_100_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_101_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_102_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_103_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_104_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_105_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_106_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_107_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_108_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_109_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_110_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_111_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_112_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_113_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_114_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_115_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_116_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_117_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_118_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_119_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_120_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_121_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_122_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_123_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_124_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_125_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_126_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_127_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_128_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_129_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_130_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_131_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_132_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_133_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_134_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_135_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_136_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_137_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_138_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_139_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_140_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_141_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_142_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_143_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_144_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_145_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_146_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_147_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_148_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_149_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_150_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_151_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_152_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_153_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_154_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_155_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_156_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_157_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_158_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_159_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_160_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_161_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_162_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_163_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_164_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_165_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_166_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_167_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_168_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_169_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_170_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_171_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_172_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_173_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_174_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_175_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_176_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_177_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_178_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_179_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_180_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_181_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_182_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_183_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_184_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_185_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_186_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_187_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_188_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_189_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_190_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_191_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_192_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_193_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_194_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_195_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_196_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_197_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_198_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_199_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_200_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_201_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_202_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_203_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_204_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_205_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_206_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_207_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_208_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_209_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_210_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_211_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_212_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_213_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_214_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_215_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_216_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_217_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_218_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_219_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_220_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_221_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_222_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_223_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_224_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_225_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_226_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_227_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_228_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_229_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_230_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_231_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_232_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_233_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_234_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_235_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_236_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_237_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_238_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_239_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_240_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_241_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_242_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_243_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_244_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_245_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_246_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_247_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_248_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_249_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_250_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_251_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_252_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_253_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_254_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_255_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_256_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_257_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_258_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_259_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_260_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_261_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_262_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_263_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_264_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_265_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_266_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_267_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_268_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_269_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_270_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_271_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_272_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_273_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_274_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_275_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_276_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_277_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_278_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_279_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_280_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_281_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_282_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_283_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_284_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_285_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_286_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_287_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_288_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_289_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_290_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_291_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_292_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_293_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_294_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_295_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_296_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_297_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_298_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_299_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_300_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_301_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_302_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_303_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_304_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_305_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_306_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_307_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_308_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_309_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_310_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_311_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_312_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_313_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_314_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_315_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_316_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_317_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_318_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_319_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_320_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_321_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_322_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_323_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_324_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_325_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_326_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_327_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_328_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_329_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_330_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_331_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_332_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_333_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_334_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_335_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_336_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_337_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_338_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_339_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_340_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_341_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_342_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_343_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_344_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_345_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_346_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_347_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_348_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_349_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_350_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_351_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_352_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_353_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_354_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_355_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_356_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_357_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_358_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_359_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_360_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_361_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_362_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_363_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_364_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_365_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_366_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_367_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_368_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_369_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_370_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_371_1365879995.227" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_372_1365879995.227" 
    push $P5001, $P5002
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_511_1365879995.227") :load
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .const 'Sub' $P5001 = "cuid_374_1365879995.227" 
    $P5002 = $P5001()
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_512_1365879995.227") :main
.annotate 'file', "src\\stage2\\gen\\NQP.pm"
    .param pmc ARGS :slurpy 
    .const 'Sub' $P5001 = "cuid_374_1365879995.227" 
    $P5002 = $P5001(ARGS :flat)
    .return ($P5002) 
.end