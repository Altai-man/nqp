.include 'cclass.pasm'
.include 'except_severity.pasm'
.include 'except_types.pasm'
.include 'iglobals.pasm'
.include 'interpinfo.pasm'
.include 'iterator.pasm'
.include 'sysinfo.pasm'
.include 'stat.pasm'
.include 'datatypes.pasm'
.include 'libpaths.pasm'
.include 'nqp_const.pir'
.loadlib "nqp_group"
.loadlib "nqp_ops"
.loadlib "nqp_bigint_ops"
.loadlib "trans_ops"
.loadlib "io_ops"
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_145_1366375329.52446") :anon :lex
.annotate 'file', "src/stage2/QAST.nqp"
    .param pmc _lex_param_0 :slurpy 
    .const 'Sub' $P5668 = 'cuid_144_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_146_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_147_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_153_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_158_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_161_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_170_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_177_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_179_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_181_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_183_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_185_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_187_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_189_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_190_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_197_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_198_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_203_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_205_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_207_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_209_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_213_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_215_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_218_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_221_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_222_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_223_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_224_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_225_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_226_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_227_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_228_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_229_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_230_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_231_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_232_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_233_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_235_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_243_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_244_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_245_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_246_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_247_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_248_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_249_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_250_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_252_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_254_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_255_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_256_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_257_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_258_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_259_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_260_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_261_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_262_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_263_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_264_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_265_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_266_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_267_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_268_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_269_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_270_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_271_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_272_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_273_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_274_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_275_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_276_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_277_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_278_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_279_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_280_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_281_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_282_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_283_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_284_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_285_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_286_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_287_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_288_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_289_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_290_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_291_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_292_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_293_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_294_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_295_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_296_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_297_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_298_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_299_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_300_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_301_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_302_1366375329.52446' 
    capture_lex $P5668 
    .const 'Sub' $P5668 = 'cuid_304_1366375329.52446' 
    capture_lex $P5668 
    .lex "GLOBALish", $P101 
    .lex "$?PACKAGE", $P102 
    .lex "EXPORT", $P103 
    .lex "&handle_arg", $P104 
    .lex "%const_map", $P105 
    .lex "$exc_exclude", $P106 
    .lex "$exc_include", $P107 
    .lex "%handler_names", $P108 
    .lex "%control_map", $P109 
    .lex "@ARGS", _lex_param_0 
    .local pmc ctxsave 
    .const 'Sub' $P5001 = 'cuid_144_1366375329.52446' 
    capture_lex $P5001
    set $P104, $P5001
    new $P5002, 'Hash'
    set $P105, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P106, $P5003
    nqp_get_sc_object $P5004, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P107, $P5004
    new $P5005, 'Hash'
    set $P108, $P5005
    new $P5006, 'Hash'
    set $P109, $P5006
    find_dynamic_lex $P5007, "$*CTXSAVE"
    set ctxsave, $P5007
    isnull $I5001, ctxsave
    if $I5001 goto unless15_end22 
    can $I5002, ctxsave, "ctxsave"
    box $P5010, $I5002
    set $P5009, $P5010
    unless $I5002 goto if16_end24 
    $P5008 = ctxsave."ctxsave"()
    set $P5009, $P5008
  if16_end24:
  unless15_end22:
.annotate 'line', 1
    .const 'Sub' $P5011 = 'cuid_146_1366375329.52446' 
    capture_lex $P5011
    $P5012 = $P5011()
    .const 'Sub' $P5013 = 'cuid_147_1366375329.52446' 
    capture_lex $P5013
    $P5014 = $P5013()
    .const 'Sub' $P5015 = 'cuid_153_1366375329.52446' 
    capture_lex $P5015
    $P5016 = $P5015()
    .const 'Sub' $P5017 = 'cuid_158_1366375329.52446' 
    capture_lex $P5017
    $P5018 = $P5017()
    .const 'Sub' $P5019 = 'cuid_161_1366375329.52446' 
    capture_lex $P5019
    $P5020 = $P5019()
    .const 'Sub' $P5021 = 'cuid_170_1366375329.52446' 
    capture_lex $P5021
    $P5022 = $P5021()
.annotate 'line', 597
    nqp_get_sc_object $P5023, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5025 = 'cuid_177_1366375329.52446' 
    capture_lex $P5025
    newclosure $P5024, $P5025
    $P5023."add_core_op"("list", $P5024, 1 :named("inlinable"))
.annotate 'line', 613
    nqp_get_sc_object $P5026, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5028 = 'cuid_179_1366375329.52446' 
    capture_lex $P5028
    newclosure $P5027, $P5028
    $P5026."add_core_op"("qlist", $P5027, 1 :named("inlinable"))
.annotate 'line', 629
    nqp_get_sc_object $P5029, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5031 = 'cuid_181_1366375329.52446' 
    capture_lex $P5031
    newclosure $P5030, $P5031
    $P5029."add_core_op"("list_i", $P5030, 1 :named("inlinable"))
.annotate 'line', 645
    nqp_get_sc_object $P5032, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5034 = 'cuid_183_1366375329.52446' 
    capture_lex $P5034
    newclosure $P5033, $P5034
    $P5032."add_core_op"("list_s", $P5033, 1 :named("inlinable"))
.annotate 'line', 661
    nqp_get_sc_object $P5035, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5037 = 'cuid_185_1366375329.52446' 
    capture_lex $P5037
    newclosure $P5036, $P5037
    $P5035."add_core_op"("list_b", $P5036, 1 :named("inlinable"))
.annotate 'line', 678
    nqp_get_sc_object $P5038, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5040 = 'cuid_187_1366375329.52446' 
    capture_lex $P5040
    newclosure $P5039, $P5040
    $P5038."add_core_op"("hash", $P5039, 1 :named("inlinable"))
.annotate 'line', 703
    nqp_get_sc_object $P5041, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5043 = 'cuid_189_1366375329.52446' 
    capture_lex $P5043
    newclosure $P5042, $P5043
    $P5041."add_core_op"("chain", $P5042, 1 :named("inlinable"))
.annotate 'line', 745
    nqp_get_sc_object $P5044, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5046 = 'cuid_190_1366375329.52446' 
    capture_lex $P5046
    newclosure $P5045, $P5046
    $P5044."add_core_op"("stmts", $P5045, 1 :named("inlinable"))
    new $P5050, 'QRPA'
    box $P5051, "if"
    push $P5050, $P5051
    box $P5052, "unless"
    push $P5050, $P5052
    set $P5047, $P5050
    iter $P5049, $P5050
  for_next650:
    unless $P5049, for_done652
    shift $P5054, $P5049
  for_redo651:
    .const 'Sub' $P5053 = 'cuid_197_1366375329.52446' 
    capture_lex $P5053
    $P5047 = $P5053($P5054)
    goto for_next650
  for_done652:
.annotate 'line', 847
    nqp_get_sc_object $P5055, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5057 = 'cuid_198_1366375329.52446' 
    capture_lex $P5057
    newclosure $P5056, $P5057
    $P5055."add_core_op"("ifnull", $P5056, 1 :named("inlinable"))
    new $P5061, 'QRPA'
    box $P5062, ""
    push $P5061, $P5062
    box $P5063, "repeat_"
    push $P5061, $P5063
    set $P5058, $P5061
    iter $P5060, $P5061
  for_next758:
    unless $P5060, for_done760
    shift $P5065, $P5060
  for_redo759:
    .const 'Sub' $P5064 = 'cuid_203_1366375329.52446' 
    capture_lex $P5064
    $P5058 = $P5064($P5065)
    goto for_next758
  for_done760:
.annotate 'line', 981
    nqp_get_sc_object $P5066, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5068 = 'cuid_205_1366375329.52446' 
    capture_lex $P5068
    newclosure $P5067, $P5068
    $P5066."add_core_op"("for", $P5067, 1 :named("inlinable"))
.annotate 'line', 1069
    nqp_get_sc_object $P5069, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5071 = 'cuid_207_1366375329.52446' 
    capture_lex $P5071
    newclosure $P5070, $P5071
    $P5069."add_core_op"("defor", $P5070, 1 :named("inlinable"))
.annotate 'line', 1090
    nqp_get_sc_object $P5072, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5074 = 'cuid_209_1366375329.52446' 
    capture_lex $P5074
    newclosure $P5073, $P5074
    $P5072."add_core_op"("xor", $P5073, 1 :named("inlinable"))
.annotate 'line', 1159
    nqp_get_sc_object $P5075, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5077 = 'cuid_213_1366375329.52446' 
    capture_lex $P5077
    newclosure $P5076, $P5077
    $P5075."add_core_op"("bind", $P5076, 1 :named("inlinable"))
.annotate 'line', 1200
    nqp_get_sc_object $P5078, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5080 = 'cuid_215_1366375329.52446' 
    capture_lex $P5080
    newclosure $P5079, $P5080
    $P5078."add_core_op"("call", $P5079)
.annotate 'line', 1236
    nqp_get_sc_object $P5081, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5083 = 'cuid_218_1366375329.52446' 
    capture_lex $P5083
    newclosure $P5082, $P5083
    $P5081."add_core_op"("callmethod", $P5082, 1 :named("inlinable"))
.annotate 'line', 1288
    nqp_get_sc_object $P5084, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5086 = 'cuid_221_1366375329.52446' 
    capture_lex $P5086
    newclosure $P5085, $P5086
    $P5084."add_core_op"("lexotic", $P5085)
.annotate 'line', 1312
    nqp_get_sc_object $P5087, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5089 = 'cuid_222_1366375329.52446' 
    capture_lex $P5089
    newclosure $P5088, $P5089
    $P5087."add_core_op"("ctx", $P5088)
.annotate 'line', 1320
    nqp_get_sc_object $P5090, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5092 = 'cuid_223_1366375329.52446' 
    capture_lex $P5092
    newclosure $P5091, $P5092
    $P5090."add_core_op"("ctxouter", $P5091)
.annotate 'line', 1329
    nqp_get_sc_object $P5093, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5095 = 'cuid_224_1366375329.52446' 
    capture_lex $P5095
    newclosure $P5094, $P5095
    $P5093."add_core_op"("ctxcaller", $P5094)
.annotate 'line', 1338
    nqp_get_sc_object $P5096, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5098 = 'cuid_225_1366375329.52446' 
    capture_lex $P5098
    newclosure $P5097, $P5098
    $P5096."add_core_op"("ctxlexpad", $P5097)
.annotate 'line', 1347
    nqp_get_sc_object $P5099, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5101 = 'cuid_226_1366375329.52446' 
    capture_lex $P5101
    newclosure $P5100, $P5101
    $P5099."add_core_op"("curlexpad", $P5100)
.annotate 'line', 1355
    nqp_get_sc_object $P5102, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5104 = 'cuid_227_1366375329.52446' 
    capture_lex $P5104
    newclosure $P5103, $P5104
    $P5102."add_core_op"("curcode", $P5103)
.annotate 'line', 1363
    nqp_get_sc_object $P5105, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5107 = 'cuid_228_1366375329.52446' 
    capture_lex $P5107
    newclosure $P5106, $P5107
    $P5105."add_core_op"("callercode", $P5106)
.annotate 'line', 1371
    nqp_get_sc_object $P5108, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5110 = 'cuid_229_1366375329.52446' 
    capture_lex $P5110
    newclosure $P5109, $P5110
    $P5108."add_core_op"("lexprimspec", $P5109)
.annotate 'line', 1383
    nqp_get_sc_object $P5111, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5113 = 'cuid_230_1366375329.52446' 
    capture_lex $P5113
    newclosure $P5112, $P5113
    $P5111."add_core_op"("usecapture", $P5112)
.annotate 'line', 1392
    nqp_get_sc_object $P5114, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5116 = 'cuid_231_1366375329.52446' 
    capture_lex $P5116
    newclosure $P5115, $P5116
    $P5114."add_core_op"("savecapture", $P5115)
.annotate 'line', 1403
    nqp_get_sc_object $P5117, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5117."add_core_pirop_mapping"("captureposelems", "elements", "IP")
.annotate 'line', 1404
    nqp_get_sc_object $P5118, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5118."add_core_pirop_mapping"("captureposarg", "set", "PQi")
.annotate 'line', 1405
    nqp_get_sc_object $P5119, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5119."add_core_pirop_mapping"("captureposarg_i", "set", "IQi")
.annotate 'line', 1406
    nqp_get_sc_object $P5120, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5120."add_core_pirop_mapping"("captureposarg_n", "set", "NQi")
.annotate 'line', 1407
    nqp_get_sc_object $P5121, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5121."add_core_pirop_mapping"("captureposarg_s", "set", "SQi")
.annotate 'line', 1408
    nqp_get_sc_object $P5122, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5122."add_core_pirop_mapping"("captureexistsnamed", "exists", "IQs")
.annotate 'line', 1409
    nqp_get_sc_object $P5123, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5123."add_core_pirop_mapping"("captureposprimspec", "captureposprimspec", "IPi")
.annotate 'line', 1412
    nqp_get_sc_object $P5124, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5126 = 'cuid_232_1366375329.52446' 
    capture_lex $P5126
    newclosure $P5125, $P5126
    $P5124."add_core_op"("invokewithcapture", $P5125)
.annotate 'line', 1430
    nqp_get_sc_object $P5127, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5127."add_core_pirop_mapping"("multicacheadd", "multi_cache_add", "PPPP")
.annotate 'line', 1431
    nqp_get_sc_object $P5128, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5128."add_core_pirop_mapping"("multicachefind", "multi_cache_find", "PPP")
    new $P5129, 'Hash'
    box $P5130, .CCLASS_ANY
    set $P5129["CCLASS_ANY"], $P5130
    box $P5131, .CCLASS_NUMERIC
    set $P5129["CCLASS_NUMERIC"], $P5131
    box $P5132, .CCLASS_WHITESPACE
    set $P5129["CCLASS_WHITESPACE"], $P5132
    box $P5133, .CCLASS_PRINTING
    set $P5129["CCLASS_PRINTING"], $P5133
    box $P5134, .CCLASS_GRAPHICAL
    set $P5129["CCLASS_GRAPHICAL"], $P5134
    box $P5135, .CCLASS_WORD
    set $P5129["CCLASS_WORD"], $P5135
    box $P5136, .CCLASS_NEWLINE
    set $P5129["CCLASS_NEWLINE"], $P5136
    box $P5137, .CCLASS_ALPHABETIC
    set $P5129["CCLASS_ALPHABETIC"], $P5137
    box $P5138, .CCLASS_UPPERCASE
    set $P5129["CCLASS_UPPERCASE"], $P5138
    box $P5139, .CCLASS_LOWERCASE
    set $P5129["CCLASS_LOWERCASE"], $P5139
    box $P5140, .CCLASS_NUMERIC
    set $P5129["CCLASS_NUMERIC"], $P5140
    box $P5141, .CCLASS_HEXADECIMAL
    set $P5129["CCLASS_HEXADECIMAL"], $P5141
    box $P5142, .CCLASS_BLANK
    set $P5129["CCLASS_BLANK"], $P5142
    box $P5143, .CCLASS_CONTROL
    set $P5129["CCLASS_CONTROL"], $P5143
    box $P5144, .CCLASS_PUNCTUATION
    set $P5129["CCLASS_PUNCTUATION"], $P5144
    box $P5145, .CCLASS_ALPHANUMERIC
    set $P5129["CCLASS_ALPHANUMERIC"], $P5145
    box $P5146, 0
    set $P5129["HLL_ROLE_NONE"], $P5146
    box $P5147, 1
    set $P5129["HLL_ROLE_INT"], $P5147
    box $P5148, 2
    set $P5129["HLL_ROLE_NUM"], $P5148
    box $P5149, 3
    set $P5129["HLL_ROLE_STR"], $P5149
    box $P5150, 4
    set $P5129["HLL_ROLE_ARRAY"], $P5150
    box $P5151, 5
    set $P5129["HLL_ROLE_HASH"], $P5151
    box $P5152, 6
    set $P5129["HLL_ROLE_CODE"], $P5152
    box $P5153, .STAT_EXISTS
    set $P5129["STAT_EXISTS"], $P5153
    box $P5154, .STAT_FILESIZE
    set $P5129["STAT_FILESIZE"], $P5154
    box $P5155, .STAT_ISDIR
    set $P5129["STAT_ISDIR"], $P5155
    box $P5156, .STAT_ISREG
    set $P5129["STAT_ISREG"], $P5156
    box $P5157, .STAT_ISDEV
    set $P5129["STAT_ISDEV"], $P5157
    box $P5158, .STAT_CREATETIME
    set $P5129["STAT_CREATETIME"], $P5158
    box $P5159, .STAT_ACCESSTIME
    set $P5129["STAT_ACCESSTIME"], $P5159
    box $P5160, .STAT_MODIFYTIME
    set $P5129["STAT_MODIFYTIME"], $P5160
    box $P5161, .STAT_CHANGETIME
    set $P5129["STAT_CHANGETIME"], $P5161
    box $P5162, .STAT_BACKUPTIME
    set $P5129["STAT_BACKUPTIME"], $P5162
    box $P5163, .STAT_PLATFORM_DEV
    set $P5129["STAT_PLATFORM_DEV"], $P5163
    box $P5164, .STAT_PLATFORM_INODE
    set $P5129["STAT_PLATFORM_INODE"], $P5164
    box $P5165, .STAT_PLATFORM_MODE
    set $P5129["STAT_PLATFORM_MODE"], $P5165
    box $P5166, .STAT_PLATFORM_NLINKS
    set $P5129["STAT_PLATFORM_NLINKS"], $P5166
    box $P5167, .STAT_PLATFORM_DEVTYPE
    set $P5129["STAT_PLATFORM_DEVTYPE"], $P5167
    box $P5168, .STAT_PLATFORM_BLOCKSIZE
    set $P5129["STAT_PLATFORM_BLOCKSIZE"], $P5168
    box $P5169, .STAT_PLATFORM_BLOCKS
    set $P5129["STAT_PLATFORM_BLOCKS"], $P5169
    box $P5170, .STAT_TYPE_UNKNOWN
    set $P5129["STAT_TYPE_UNKNOWN"], $P5170
    box $P5171, .STAT_TYPE_FILE
    set $P5129["STAT_TYPE_FILE"], $P5171
    box $P5172, .STAT_TYPE_DIRECTORY
    set $P5129["STAT_TYPE_DIRECTORY"], $P5172
    box $P5173, .STAT_TYPE_PIPE
    set $P5129["STAT_TYPE_PIPE"], $P5173
    box $P5174, .STAT_TYPE_LINK
    set $P5129["STAT_TYPE_LINK"], $P5174
    box $P5175, .STAT_TYPE_DEVICE
    set $P5129["STAT_TYPE_DEVICE"], $P5175
    set $P105, $P5129
.annotate 'line', 1484
    nqp_get_sc_object $P5176, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5178 = 'cuid_233_1366375329.52446' 
    capture_lex $P5178
    newclosure $P5177, $P5178
    $P5176."add_core_op"("const", $P5177)
    box $P5179, 0
    set $P106, $P5179
    box $P5180, 1
    set $P107, $P5180
    new $P5181, 'Hash'
    box $P5182, ".CONTROL_ALL"
    set $P5181["CATCH"], $P5182
    box $P5183, ".CONTROL_ALL"
    set $P5181["CONTROL"], $P5183
    box $P5184, ".CONTROL_LOOP_NEXT"
    set $P5181["NEXT"], $P5184
    box $P5185, ".CONTROL_LOOP_LAST"
    set $P5181["LAST"], $P5185
    box $P5186, ".CONTROL_LOOP_REDO"
    set $P5181["REDO"], $P5186
    box $P5187, ".CONTROL_TAKE"
    set $P5181["TAKE"], $P5187
    box $P5188, ".CONTROL_BREAK"
    set $P5181["SUCCEED"], $P5188
    box $P5189, ".CONTROL_CONTINUE"
    set $P5181["PROCEED"], $P5189
    set $P108, $P5181
.annotate 'line', 1506
    nqp_get_sc_object $P5190, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5192 = 'cuid_235_1366375329.52446' 
    capture_lex $P5192
    newclosure $P5191, $P5192
    $P5190."add_core_op"("handle", $P5191)
.annotate 'line', 1647
    nqp_get_sc_object $P5193, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5195 = 'cuid_243_1366375329.52446' 
    capture_lex $P5195
    newclosure $P5194, $P5195
    $P5193."add_core_op"("exception", $P5194)
.annotate 'line', 1656
    nqp_get_sc_object $P5196, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5198 = 'cuid_244_1366375329.52446' 
    capture_lex $P5198
    newclosure $P5197, $P5198
    $P5196."add_core_op"("getpayload", $P5197)
.annotate 'line', 1668
    nqp_get_sc_object $P5199, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5201 = 'cuid_245_1366375329.52446' 
    capture_lex $P5201
    newclosure $P5200, $P5201
    $P5199."add_core_op"("setpayload", $P5200)
.annotate 'line', 1679
    nqp_get_sc_object $P5202, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5204 = 'cuid_246_1366375329.52446' 
    capture_lex $P5204
    newclosure $P5203, $P5204
    $P5202."add_core_op"("getmessage", $P5203)
.annotate 'line', 1693
    nqp_get_sc_object $P5205, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5207 = 'cuid_247_1366375329.52446' 
    capture_lex $P5207
    newclosure $P5206, $P5207
    $P5205."add_core_op"("setmessage", $P5206)
.annotate 'line', 1708
    nqp_get_sc_object $P5208, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5210 = 'cuid_248_1366375329.52446' 
    capture_lex $P5210
    newclosure $P5209, $P5210
    $P5208."add_core_op"("backtracestrings", $P5209)
.annotate 'line', 1717
    nqp_get_sc_object $P5211, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5213 = 'cuid_249_1366375329.52446' 
    capture_lex $P5213
    newclosure $P5212, $P5213
    $P5211."add_core_op"("newexception", $P5212)
.annotate 'line', 1727
    nqp_get_sc_object $P5214, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5214."add_core_pirop_mapping"("die_s", "die", "0s")
.annotate 'line', 1728
    nqp_get_sc_object $P5215, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5215."add_core_pirop_mapping"("die", "die", "0P")
.annotate 'line', 1729
    nqp_get_sc_object $P5216, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5216."add_core_pirop_mapping"("throw", "throw", "0P")
.annotate 'line', 1730
    nqp_get_sc_object $P5217, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5217."add_core_pirop_mapping"("rethrow", "rethrow", "0P")
.annotate 'line', 1731
    nqp_get_sc_object $P5218, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5220 = 'cuid_250_1366375329.52446' 
    capture_lex $P5220
    newclosure $P5219, $P5220
    $P5218."add_core_op"("resume", $P5219)
    new $P5221, 'Hash'
    box $P5222, ".CONTROL_LOOP_NEXT"
    set $P5221["next"], $P5222
    box $P5223, ".CONTROL_LOOP_LAST"
    set $P5221["last"], $P5223
    box $P5224, ".CONTROL_LOOP_REDO"
    set $P5221["redo"], $P5224
    set $P109, $P5221
.annotate 'line', 1750
    nqp_get_sc_object $P5225, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5227 = 'cuid_252_1366375329.52446' 
    capture_lex $P5227
    newclosure $P5226, $P5227
    $P5225."add_core_op"("control", $P5226)
    new $P5231, 'QRPA'
    box $P5232, "i"
    push $P5231, $P5232
    box $P5233, "n"
    push $P5231, $P5233
    box $P5234, "s"
    push $P5231, $P5234
    set $P5228, $P5231
    iter $P5230, $P5231
  for_next1193:
    unless $P5230, for_done1195
    shift $P5236, $P5230
  for_redo1194:
    .const 'Sub' $P5235 = 'cuid_254_1366375329.52446' 
    capture_lex $P5235
    $P5228 = $P5235($P5236)
    goto for_next1193
  for_done1195:
.annotate 'line', 1773
    nqp_get_sc_object $P5237, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5239 = 'cuid_255_1366375329.52446' 
    capture_lex $P5239
    newclosure $P5238, $P5239
    $P5237."add_hll_unbox"("nqp", "i", $P5238)
.annotate 'line', 1781
    nqp_get_sc_object $P5240, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5242 = 'cuid_256_1366375329.52446' 
    capture_lex $P5242
    newclosure $P5241, $P5242
    $P5240."add_hll_unbox"("nqp", "n", $P5241)
.annotate 'line', 1789
    nqp_get_sc_object $P5243, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5245 = 'cuid_257_1366375329.52446' 
    capture_lex $P5245
    newclosure $P5244, $P5245
    $P5243."add_hll_unbox"("nqp", "s", $P5244)
.annotate 'line', 1799
    nqp_get_sc_object $P5246, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5246."add_core_pirop_mapping"("positional_get", "set", "PQi", 1 :named("inlinable"))
.annotate 'line', 1800
    nqp_get_sc_object $P5247, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5247."add_core_pirop_mapping"("positional_bind", "set", "1QiP", 1 :named("inlinable"))
.annotate 'line', 1801
    nqp_get_sc_object $P5248, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5248."add_core_pirop_mapping"("associative_get", "set", "PQs", 1 :named("inlinable"))
.annotate 'line', 1802
    nqp_get_sc_object $P5249, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5249."add_core_pirop_mapping"("associative_bind", "set", "1QsP", 1 :named("inlinable"))
.annotate 'line', 1805
    nqp_get_sc_object $P5250, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5250."add_core_pirop_mapping"("print", "print", "0s", 1 :named("inlinable"))
.annotate 'line', 1806
    nqp_get_sc_object $P5251, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5251."add_core_pirop_mapping"("say", "say", "0s", 1 :named("inlinable"))
.annotate 'line', 1807
    nqp_get_sc_object $P5252, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5252."add_core_pirop_mapping"("stat", "stat", "Isi", 1 :named("inlinable"))
.annotate 'line', 1808
    nqp_get_sc_object $P5253, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5253."add_core_pirop_mapping"("open", "open", "Pss", 1 :named("inlinable"))
.annotate 'line', 1809
    nqp_get_sc_object $P5254, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5256 = 'cuid_258_1366375329.52446' 
    capture_lex $P5256
    newclosure $P5255, $P5256
    $P5254."add_core_op"("getstdin", $P5255)
.annotate 'line', 1818
    nqp_get_sc_object $P5257, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5259 = 'cuid_259_1366375329.52446' 
    capture_lex $P5259
    newclosure $P5258, $P5259
    $P5257."add_core_op"("getstdout", $P5258)
.annotate 'line', 1827
    nqp_get_sc_object $P5260, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5262 = 'cuid_260_1366375329.52446' 
    capture_lex $P5262
    newclosure $P5261, $P5262
    $P5260."add_core_op"("getstderr", $P5261)
.annotate 'line', 1836
    nqp_get_sc_object $P5263, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5265 = 'cuid_261_1366375329.52446' 
    capture_lex $P5265
    newclosure $P5264, $P5265
    $P5263."add_core_op"("setencoding", $P5264)
.annotate 'line', 1845
    nqp_get_sc_object $P5266, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5268 = 'cuid_262_1366375329.52446' 
    capture_lex $P5268
    newclosure $P5267, $P5268
    $P5266."add_core_op"("tellfh", $P5267)
.annotate 'line', 1854
    nqp_get_sc_object $P5269, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5271 = 'cuid_263_1366375329.52446' 
    capture_lex $P5271
    newclosure $P5270, $P5271
    $P5269."add_core_op"("printfh", $P5270)
.annotate 'line', 1863
    nqp_get_sc_object $P5272, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5274 = 'cuid_264_1366375329.52446' 
    capture_lex $P5274
    newclosure $P5273, $P5274
    $P5272."add_core_op"("sayfh", $P5273)
.annotate 'line', 1872
    nqp_get_sc_object $P5275, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5277 = 'cuid_265_1366375329.52446' 
    capture_lex $P5277
    newclosure $P5276, $P5277
    $P5275."add_core_op"("readlinefh", $P5276)
.annotate 'line', 1881
    nqp_get_sc_object $P5278, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5280 = 'cuid_266_1366375329.52446' 
    capture_lex $P5280
    newclosure $P5279, $P5280
    $P5278."add_core_op"("readlineintfh", $P5279)
.annotate 'line', 1890
    nqp_get_sc_object $P5281, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5283 = 'cuid_267_1366375329.52446' 
    capture_lex $P5283
    newclosure $P5282, $P5283
    $P5281."add_core_op"("readallfh", $P5282)
.annotate 'line', 1899
    nqp_get_sc_object $P5284, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5286 = 'cuid_268_1366375329.52446' 
    capture_lex $P5286
    newclosure $P5285, $P5286
    $P5284."add_core_op"("eoffh", $P5285)
.annotate 'line', 1905
    nqp_get_sc_object $P5287, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5289 = 'cuid_269_1366375329.52446' 
    capture_lex $P5289
    newclosure $P5288, $P5289
    $P5287."add_core_op"("closefh", $P5288)
.annotate 'line', 1915
    nqp_get_sc_object $P5290, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5292 = 'cuid_270_1366375329.52446' 
    capture_lex $P5292
    newclosure $P5291, $P5292
    $P5290."add_core_op"("chmod", $P5291)
.annotate 'line', 1927
    nqp_get_sc_object $P5293, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5295 = 'cuid_271_1366375329.52446' 
    capture_lex $P5295
    newclosure $P5294, $P5295
    $P5293."add_core_op"("unlink", $P5294)
.annotate 'line', 1938
    nqp_get_sc_object $P5296, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5298 = 'cuid_272_1366375329.52446' 
    capture_lex $P5298
    newclosure $P5297, $P5298
    $P5296."add_core_op"("rmdir", $P5297)
.annotate 'line', 1949
    nqp_get_sc_object $P5299, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5301 = 'cuid_273_1366375329.52446' 
    capture_lex $P5301
    newclosure $P5300, $P5301
    $P5299."add_core_op"("cwd", $P5300)
.annotate 'line', 1959
    nqp_get_sc_object $P5302, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5304 = 'cuid_274_1366375329.52446' 
    capture_lex $P5304
    newclosure $P5303, $P5304
    $P5302."add_core_op"("chdir", $P5303)
.annotate 'line', 1970
    nqp_get_sc_object $P5305, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5307 = 'cuid_275_1366375329.52446' 
    capture_lex $P5307
    newclosure $P5306, $P5307
    $P5305."add_core_op"("mkdir", $P5306)
.annotate 'line', 1982
    nqp_get_sc_object $P5308, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5310 = 'cuid_276_1366375329.52446' 
    capture_lex $P5310
    newclosure $P5309, $P5310
    $P5308."add_core_op"("rename", $P5309)
.annotate 'line', 1994
    nqp_get_sc_object $P5311, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5313 = 'cuid_277_1366375329.52446' 
    capture_lex $P5313
    newclosure $P5312, $P5313
    $P5311."add_core_op"("copy", $P5312)
.annotate 'line', 2006
    nqp_get_sc_object $P5314, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5316 = 'cuid_278_1366375329.52446' 
    capture_lex $P5316
    newclosure $P5315, $P5316
    $P5314."add_core_op"("symlink", $P5315)
.annotate 'line', 2018
    nqp_get_sc_object $P5317, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5319 = 'cuid_279_1366375329.52446' 
    capture_lex $P5319
    newclosure $P5318, $P5319
    $P5317."add_core_op"("link", $P5318)
.annotate 'line', 2032
    nqp_get_sc_object $P5320, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5320."add_core_pirop_mapping"("time_i", "time", "I", 1 :named("inlinable"))
.annotate 'line', 2033
    nqp_get_sc_object $P5321, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5321."add_core_pirop_mapping"("time_n", "time", "N", 1 :named("inlinable"))
.annotate 'line', 2036
    nqp_get_sc_object $P5322, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5322."add_core_pirop_mapping"("add_i", "add", "Iii", 1 :named("inlinable"))
.annotate 'line', 2037
    nqp_get_sc_object $P5323, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5323."add_core_pirop_mapping"("add_I", "nqp_bigint_add", "PPPP", 1 :named("inlinable"))
.annotate 'line', 2038
    nqp_get_sc_object $P5324, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5324."add_core_pirop_mapping"("add_n", "add", "Nnn", 1 :named("inlinable"))
.annotate 'line', 2039
    nqp_get_sc_object $P5325, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5325."add_core_pirop_mapping"("sub_i", "sub", "Iii", 1 :named("inlinable"))
.annotate 'line', 2040
    nqp_get_sc_object $P5326, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5326."add_core_pirop_mapping"("sub_I", "nqp_bigint_sub", "PPPP", 1 :named("inlinable"))
.annotate 'line', 2041
    nqp_get_sc_object $P5327, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5327."add_core_pirop_mapping"("sub_n", "sub", "Nnn", 1 :named("inlinable"))
.annotate 'line', 2042
    nqp_get_sc_object $P5328, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5328."add_core_pirop_mapping"("mul_i", "mul", "Iii", 1 :named("inlinable"))
.annotate 'line', 2043
    nqp_get_sc_object $P5329, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5329."add_core_pirop_mapping"("mul_I", "nqp_bigint_mul", "PPPP", 1 :named("inlinable"))
.annotate 'line', 2044
    nqp_get_sc_object $P5330, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5330."add_core_pirop_mapping"("mul_n", "mul", "Nnn", 1 :named("inlinable"))
.annotate 'line', 2045
    nqp_get_sc_object $P5331, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5331."add_core_pirop_mapping"("div_i", "div", "Iii", 1 :named("inlinable"))
.annotate 'line', 2046
    nqp_get_sc_object $P5332, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5332."add_core_pirop_mapping"("div_I", "nqp_bigint_div", "PPPP", 1 :named("inlinable"))
.annotate 'line', 2047
    nqp_get_sc_object $P5333, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5333."add_core_pirop_mapping"("div_In", "nqp_bigint_div_num", "NPP", 1 :named("inlinable"))
.annotate 'line', 2048
    nqp_get_sc_object $P5334, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5334."add_core_pirop_mapping"("div_n", "div", "Nnn", 1 :named("inlinable"))
.annotate 'line', 2049
    nqp_get_sc_object $P5335, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5335."add_core_pirop_mapping"("mod_i", "mod", "Iii", 1 :named("inlinable"))
.annotate 'line', 2050
    nqp_get_sc_object $P5336, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5336."add_core_pirop_mapping"("mod_I", "nqp_bigint_mod", "PPPP", 1 :named("inlinable"))
.annotate 'line', 2051
    nqp_get_sc_object $P5337, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5337."add_core_pirop_mapping"("expmod_I", "nqp_bigint_exp_mod", "PPPPP", 1 :named("inlinable"))
.annotate 'line', 2052
    nqp_get_sc_object $P5338, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5338."add_core_pirop_mapping"("isprime_I", "nqp_bigint_is_prime", "IPi", 1 :named("inlinable"))
.annotate 'line', 2053
    nqp_get_sc_object $P5339, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5339."add_core_pirop_mapping"("rand_I", "nqp_bigint_rand", "PPP", 1 :named("inlinable"))
.annotate 'line', 2054
    nqp_get_sc_object $P5340, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5340."add_core_pirop_mapping"("mod_n", "mod", "Nnn", 1 :named("inlinable"))
.annotate 'line', 2055
    nqp_get_sc_object $P5341, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5341."add_core_pirop_mapping"("pow_n", "pow", "Nnn", 1 :named("inlinable"))
.annotate 'line', 2056
    nqp_get_sc_object $P5342, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5342."add_core_pirop_mapping"("pow_I", "nqp_bigint_pow", "PPPPP", 1 :named("inlinable"))
.annotate 'line', 2057
    nqp_get_sc_object $P5343, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5343."add_core_pirop_mapping"("neg_i", "neg", "Ii", 1 :named("inlinable"))
.annotate 'line', 2058
    nqp_get_sc_object $P5344, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5344."add_core_pirop_mapping"("neg_I", "nqp_bigint_neg", "PPP", 1 :named("inlinable"))
.annotate 'line', 2059
    nqp_get_sc_object $P5345, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5345."add_core_pirop_mapping"("neg_n", "neg", "Nn", 1 :named("inlinable"))
.annotate 'line', 2060
    nqp_get_sc_object $P5346, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5346."add_core_pirop_mapping"("abs_i", "abs", "Ii", 1 :named("inlinable"))
.annotate 'line', 2061
    nqp_get_sc_object $P5347, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5347."add_core_pirop_mapping"("abs_I", "nqp_bigint_abs", "PPP", 1 :named("inlinable"))
.annotate 'line', 2062
    nqp_get_sc_object $P5348, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5348."add_core_pirop_mapping"("abs_n", "abs", "Nn", 1 :named("inlinable"))
.annotate 'line', 2064
    nqp_get_sc_object $P5349, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5349."add_core_pirop_mapping"("gcd_i", "gcd", "Iii", 1 :named("inlinable"))
.annotate 'line', 2065
    nqp_get_sc_object $P5350, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5350."add_core_pirop_mapping"("gcd_I", "nqp_bigint_gcd", "PPPP", 1 :named("inlinable"))
.annotate 'line', 2066
    nqp_get_sc_object $P5351, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5351."add_core_pirop_mapping"("lcm_i", "lcm", "Iii", 1 :named("inlinable"))
.annotate 'line', 2067
    nqp_get_sc_object $P5352, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5352."add_core_pirop_mapping"("lcm_I", "nqp_bigint_lcm", "PPPP", 1 :named("inlinable"))
.annotate 'line', 2069
    nqp_get_sc_object $P5353, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5353."add_core_pirop_mapping"("ceil_n", "ceil", "Nn", 1 :named("inlinable"))
.annotate 'line', 2070
    nqp_get_sc_object $P5354, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5354."add_core_pirop_mapping"("floor_n", "floor", "NN", 1 :named("inlinable"))
.annotate 'line', 2071
    nqp_get_sc_object $P5355, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5355."add_core_pirop_mapping"("ln_n", "ln", "Nn", 1 :named("inlinable"))
.annotate 'line', 2072
    nqp_get_sc_object $P5356, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5356."add_core_pirop_mapping"("sqrt_n", "sqrt", "Nn", 1 :named("inlinable"))
.annotate 'line', 2073
    nqp_get_sc_object $P5357, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5357."add_core_pirop_mapping"("radix", "nqp_radix", "Pisii", 1 :named("inlinable"))
.annotate 'line', 2074
    nqp_get_sc_object $P5358, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5358."add_core_pirop_mapping"("radix_I", "nqp_bigint_radix", "PisiiP", 1 :named("inlinable"))
.annotate 'line', 2075
    nqp_get_sc_object $P5359, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5359."add_core_pirop_mapping"("log_n", "ln", "NN", 1 :named("inlinable"))
.annotate 'line', 2076
    nqp_get_sc_object $P5360, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5360."add_core_pirop_mapping"("exp_n", "exp", "Nn", 1 :named("inlinable"))
.annotate 'line', 2077
    nqp_get_sc_object $P5361, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5361."add_core_pirop_mapping"("isnanorinf", "is_inf_or_nan", "In", 1 :named("inlinable"))
.annotate 'line', 2080
    nqp_get_sc_object $P5362, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5362."add_core_pirop_mapping"("sin_n", "sin", "NN", 1 :named("inlinable"))
.annotate 'line', 2081
    nqp_get_sc_object $P5363, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5363."add_core_pirop_mapping"("asin_n", "asin", "NN", 1 :named("inlinable"))
.annotate 'line', 2082
    nqp_get_sc_object $P5364, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5364."add_core_pirop_mapping"("cos_n", "cos", "NN", 1 :named("inlinable"))
.annotate 'line', 2083
    nqp_get_sc_object $P5365, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5365."add_core_pirop_mapping"("acos_n", "acos", "NN", 1 :named("inlinable"))
.annotate 'line', 2084
    nqp_get_sc_object $P5366, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5366."add_core_pirop_mapping"("tan_n", "tan", "NN", 1 :named("inlinable"))
.annotate 'line', 2085
    nqp_get_sc_object $P5367, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5367."add_core_pirop_mapping"("atan_n", "atan", "NN", 1 :named("inlinable"))
.annotate 'line', 2086
    nqp_get_sc_object $P5368, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5368."add_core_pirop_mapping"("atan2_n", "atan", "NNN", 1 :named("inlinable"))
.annotate 'line', 2087
    nqp_get_sc_object $P5369, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5369."add_core_pirop_mapping"("sec_n", "sec", "NN", 1 :named("inlinable"))
.annotate 'line', 2088
    nqp_get_sc_object $P5370, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5370."add_core_pirop_mapping"("asec_n", "asec", "NN", 1 :named("inlinable"))
.annotate 'line', 2089
    nqp_get_sc_object $P5371, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5371."add_core_pirop_mapping"("sin_n", "sin", "NN", 1 :named("inlinable"))
.annotate 'line', 2090
    nqp_get_sc_object $P5372, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5372."add_core_pirop_mapping"("asin_n", "asin", "NN", 1 :named("inlinable"))
.annotate 'line', 2091
    nqp_get_sc_object $P5373, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5373."add_core_pirop_mapping"("sinh_n", "sinh", "NN", 1 :named("inlinable"))
.annotate 'line', 2092
    nqp_get_sc_object $P5374, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5374."add_core_pirop_mapping"("cosh_n", "cosh", "NN", 1 :named("inlinable"))
.annotate 'line', 2093
    nqp_get_sc_object $P5375, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5375."add_core_pirop_mapping"("tanh_n", "tanh", "NN", 1 :named("inlinable"))
.annotate 'line', 2094
    nqp_get_sc_object $P5376, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5376."add_core_pirop_mapping"("sech_n", "sech", "NN", 1 :named("inlinable"))
.annotate 'line', 2097
    nqp_get_sc_object $P5377, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5377."add_core_pirop_mapping"("bitor_i", "bor", "Iii", 1 :named("inlinable"))
.annotate 'line', 2098
    nqp_get_sc_object $P5378, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5378."add_core_pirop_mapping"("bitor_I", "nqp_bigint_bor", "PPPP", 1 :named("inlinable"))
.annotate 'line', 2099
    nqp_get_sc_object $P5379, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5379."add_core_pirop_mapping"("bitxor_i", "bxor", "Iii", 1 :named("inlinable"))
.annotate 'line', 2100
    nqp_get_sc_object $P5380, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5380."add_core_pirop_mapping"("bitxor_I", "nqp_bigint_bxor", "PPPP", 1 :named("inlinable"))
.annotate 'line', 2101
    nqp_get_sc_object $P5381, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5381."add_core_pirop_mapping"("bitand_i", "band", "Iii", 1 :named("inlinable"))
.annotate 'line', 2102
    nqp_get_sc_object $P5382, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5382."add_core_pirop_mapping"("bitand_I", "nqp_bigint_band", "PPPP", 1 :named("inlinable"))
.annotate 'line', 2103
    nqp_get_sc_object $P5383, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5383."add_core_pirop_mapping"("bitneg_i", "bnot", "Ii", 1 :named("inlinable"))
.annotate 'line', 2104
    nqp_get_sc_object $P5384, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5384."add_core_pirop_mapping"("bitneg_I", "nqp_bigint_bnot", "PPP", 1 :named("inlinable"))
.annotate 'line', 2105
    nqp_get_sc_object $P5385, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5385."add_core_pirop_mapping"("bitshiftl_i", "shl", "Iii", 1 :named("inlinable"))
.annotate 'line', 2106
    nqp_get_sc_object $P5386, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5386."add_core_pirop_mapping"("bitshiftl_I", "nqp_bigint_shl", "PPIP", 1 :named("inlinable"))
.annotate 'line', 2107
    nqp_get_sc_object $P5387, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5387."add_core_pirop_mapping"("bitshiftr_i", "shr", "Iii", 1 :named("inlinable"))
.annotate 'line', 2108
    nqp_get_sc_object $P5388, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5388."add_core_pirop_mapping"("bitshiftr_I", "nqp_bigint_shr", "PPIP", 1 :named("inlinable"))
.annotate 'line', 2111
    nqp_get_sc_object $P5389, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5389."add_core_pirop_mapping"("bitor_s", "bors", "Sss", 1 :named("inlinable"))
.annotate 'line', 2112
    nqp_get_sc_object $P5390, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5390."add_core_pirop_mapping"("bitxor_s", "bxors", "Sss", 1 :named("inlinable"))
.annotate 'line', 2113
    nqp_get_sc_object $P5391, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5391."add_core_pirop_mapping"("bitand_s", "bands", "Sss", 1 :named("inlinable"))
.annotate 'line', 2116
    nqp_get_sc_object $P5392, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5392."add_core_pirop_mapping"("chars", "length", "Is", 1 :named("inlinable"))
.annotate 'line', 2117
    nqp_get_sc_object $P5393, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5393."add_core_pirop_mapping"("concat", "concat", "Sss", 1 :named("inlinable"))
.annotate 'line', 2118
    nqp_get_sc_object $P5394, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5394."add_core_pirop_mapping"("concat_s", "concat", "Sss", 1 :named("inlinable"))
.annotate 'line', 2119
    nqp_get_sc_object $P5395, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5395."add_core_pirop_mapping"("join", "join", "SsP", 1 :named("inlinable"))
.annotate 'line', 2120
    nqp_get_sc_object $P5396, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5396."add_core_pirop_mapping"("split", "split", "Pss", 1 :named("inlinable"))
.annotate 'line', 2121
    nqp_get_sc_object $P5397, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5397."add_core_pirop_mapping"("chr", "chr", "Si", 1 :named("inlinable"))
.annotate 'line', 2122
    nqp_get_sc_object $P5398, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5398."add_core_pirop_mapping"("lc", "downcase", "Ss", 1 :named("inlinable"))
.annotate 'line', 2123
    nqp_get_sc_object $P5399, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5399."add_core_pirop_mapping"("uc", "upcase", "Ss", 1 :named("inlinable"))
.annotate 'line', 2124
    nqp_get_sc_object $P5400, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5400."add_core_pirop_mapping"("x", "repeat", "Ssi", 1 :named("inlinable"))
.annotate 'line', 2125
    nqp_get_sc_object $P5401, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5401."add_core_pirop_mapping"("iscclass", "is_cclass", "Iisi", 1 :named("inlinable"))
.annotate 'line', 2126
    nqp_get_sc_object $P5402, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5402."add_core_pirop_mapping"("findcclass", "find_cclass", "Iisii", 1 :named("inlinable"))
.annotate 'line', 2127
    nqp_get_sc_object $P5403, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5403."add_core_pirop_mapping"("findnotcclass", "find_not_cclass", "Iisii", 1 :named("inlinable"))
.annotate 'line', 2128
    nqp_get_sc_object $P5404, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5404."add_core_pirop_mapping"("sprintf", "sprintf", "SsP", 1 :named("inlinable"))
.annotate 'line', 2129
    nqp_get_sc_object $P5405, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5405."add_core_pirop_mapping"("escape", "escape", "Ss", 1 :named("inlinable"))
.annotate 'line', 2131
    nqp_get_sc_object $P5406, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5408 = 'cuid_280_1366375329.52446' 
    capture_lex $P5408
    newclosure $P5407, $P5408
    $P5406."add_core_op"("flip", $P5407, 1 :named("inlinable"))
.annotate 'line', 2145
    nqp_get_sc_object $P5409, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5409."add_core_pirop_mapping"("substr2", "substr", "Ssi", 1 :named("inlinable"))
.annotate 'line', 2146
    nqp_get_sc_object $P5410, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5410."add_core_pirop_mapping"("substr3", "substr", "Ssii", 1 :named("inlinable"))
.annotate 'line', 2147
    nqp_get_sc_object $P5411, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5413 = 'cuid_281_1366375329.52446' 
    capture_lex $P5413
    newclosure $P5412, $P5413
    $P5411."add_core_op"("substr", $P5412, 1 :named("inlinable"))
.annotate 'line', 2155
    nqp_get_sc_object $P5414, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5414."add_core_pirop_mapping"("ordfirst", "ord", "Is", 1 :named("inlinable"))
.annotate 'line', 2156
    nqp_get_sc_object $P5415, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5415."add_core_pirop_mapping"("ordat", "ord", "Isi", 1 :named("inlinable"))
.annotate 'line', 2157
    nqp_get_sc_object $P5416, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5418 = 'cuid_282_1366375329.52446' 
    capture_lex $P5418
    newclosure $P5417, $P5418
    $P5416."add_core_op"("ord", $P5417, 1 :named("inlinable"))
.annotate 'line', 2165
    nqp_get_sc_object $P5419, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5419."add_core_pirop_mapping"("indexfrom", "index", "Issi", 1 :named("inlinable"))
.annotate 'line', 2166
    nqp_get_sc_object $P5420, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5422 = 'cuid_283_1366375329.52446' 
    capture_lex $P5422
    newclosure $P5421, $P5422
    $P5420."add_core_op"("index", $P5421, 1 :named("inlinable"))
.annotate 'line', 2172
    nqp_get_sc_object $P5423, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5423."add_core_pirop_mapping"("rindexfrom", "rindex", "Issi", 1 :named("inlinable"))
.annotate 'line', 2173
    nqp_get_sc_object $P5424, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5424."add_core_pirop_mapping"("rindexfromend", "rindex", "Iss", 1 :named("inlinable"))
.annotate 'line', 2174
    nqp_get_sc_object $P5425, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5427 = 'cuid_284_1366375329.52446' 
    capture_lex $P5427
    newclosure $P5426, $P5427
    $P5425."add_core_op"("rindex", $P5426, 1 :named("inlinable"))
.annotate 'line', 2181
    nqp_get_sc_object $P5428, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5430 = 'cuid_285_1366375329.52446' 
    capture_lex $P5430
    newclosure $P5429, $P5430
    $P5428."add_core_op"("codepointfromname", $P5429, 1 :named("inlinable"))
.annotate 'line', 2197
    nqp_get_sc_object $P5431, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5431."add_core_pirop_mapping"("cmp_i", "cmp", "Iii", 1 :named("inlinable"))
.annotate 'line', 2198
    nqp_get_sc_object $P5432, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5432."add_core_pirop_mapping"("iseq_i", "iseq", "Iii", 1 :named("inlinable"))
.annotate 'line', 2199
    nqp_get_sc_object $P5433, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5433."add_core_pirop_mapping"("isne_i", "isne", "Iii", 1 :named("inlinable"))
.annotate 'line', 2200
    nqp_get_sc_object $P5434, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5434."add_core_pirop_mapping"("islt_i", "islt", "Iii", 1 :named("inlinable"))
.annotate 'line', 2201
    nqp_get_sc_object $P5435, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5435."add_core_pirop_mapping"("isle_i", "isle", "Iii", 1 :named("inlinable"))
.annotate 'line', 2202
    nqp_get_sc_object $P5436, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5436."add_core_pirop_mapping"("isgt_i", "isgt", "Iii", 1 :named("inlinable"))
.annotate 'line', 2203
    nqp_get_sc_object $P5437, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5437."add_core_pirop_mapping"("isge_i", "isge", "Iii", 1 :named("inlinable"))
.annotate 'line', 2205
    nqp_get_sc_object $P5438, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5438."add_core_pirop_mapping"("bool_I", "nqp_bigint_bool", "IP", 1 :named("inlinable"))
.annotate 'line', 2206
    nqp_get_sc_object $P5439, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5439."add_core_pirop_mapping"("cmp_I", "nqp_bigint_cmp", "IPP", 1 :named("inlinable"))
.annotate 'line', 2207
    nqp_get_sc_object $P5440, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5440."add_core_pirop_mapping"("iseq_I", "nqp_bigint_eq", "IPP", 1 :named("inlinable"))
.annotate 'line', 2208
    nqp_get_sc_object $P5441, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5441."add_core_pirop_mapping"("isne_I", "nqp_bigint_ne", "IPP", 1 :named("inlinable"))
.annotate 'line', 2209
    nqp_get_sc_object $P5442, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5442."add_core_pirop_mapping"("islt_I", "nqp_bigint_lt", "IPP", 1 :named("inlinable"))
.annotate 'line', 2210
    nqp_get_sc_object $P5443, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5443."add_core_pirop_mapping"("isle_I", "nqp_bigint_le", "IPP", 1 :named("inlinable"))
.annotate 'line', 2211
    nqp_get_sc_object $P5444, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5444."add_core_pirop_mapping"("isgt_I", "nqp_bigint_gt", "IPP", 1 :named("inlinable"))
.annotate 'line', 2212
    nqp_get_sc_object $P5445, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5445."add_core_pirop_mapping"("isge_I", "nqp_bigint_ge", "IPP", 1 :named("inlinable"))
.annotate 'line', 2214
    nqp_get_sc_object $P5446, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5446."add_core_pirop_mapping"("cmp_n", "cmp", "Inn", 1 :named("inlinable"))
.annotate 'line', 2215
    nqp_get_sc_object $P5447, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5447."add_core_pirop_mapping"("iseq_n", "iseq", "Inn", 1 :named("inlinable"))
.annotate 'line', 2216
    nqp_get_sc_object $P5448, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5448."add_core_pirop_mapping"("isne_n", "isne", "Inn", 1 :named("inlinable"))
.annotate 'line', 2217
    nqp_get_sc_object $P5449, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5449."add_core_pirop_mapping"("islt_n", "islt", "Inn", 1 :named("inlinable"))
.annotate 'line', 2218
    nqp_get_sc_object $P5450, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5450."add_core_pirop_mapping"("isle_n", "isle", "Inn", 1 :named("inlinable"))
.annotate 'line', 2219
    nqp_get_sc_object $P5451, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5451."add_core_pirop_mapping"("isgt_n", "isgt", "Inn", 1 :named("inlinable"))
.annotate 'line', 2220
    nqp_get_sc_object $P5452, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5452."add_core_pirop_mapping"("isge_n", "isge", "Inn", 1 :named("inlinable"))
.annotate 'line', 2222
    nqp_get_sc_object $P5453, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5453."add_core_pirop_mapping"("cmp_s", "cmp", "Iss", 1 :named("inlinable"))
.annotate 'line', 2223
    nqp_get_sc_object $P5454, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5454."add_core_pirop_mapping"("iseq_s", "iseq", "Iss", 1 :named("inlinable"))
.annotate 'line', 2224
    nqp_get_sc_object $P5455, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5455."add_core_pirop_mapping"("isne_s", "isne", "Iss", 1 :named("inlinable"))
.annotate 'line', 2225
    nqp_get_sc_object $P5456, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5456."add_core_pirop_mapping"("islt_s", "islt", "Iss", 1 :named("inlinable"))
.annotate 'line', 2226
    nqp_get_sc_object $P5457, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5457."add_core_pirop_mapping"("isle_s", "isle", "Iss", 1 :named("inlinable"))
.annotate 'line', 2227
    nqp_get_sc_object $P5458, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5458."add_core_pirop_mapping"("isgt_s", "isgt", "Iss", 1 :named("inlinable"))
.annotate 'line', 2228
    nqp_get_sc_object $P5459, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5459."add_core_pirop_mapping"("isge_s", "isge", "Iss", 1 :named("inlinable"))
.annotate 'line', 2231
    nqp_get_sc_object $P5460, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5460."add_core_pirop_mapping"("fromstr_I", "nqp_bigint_from_str", "PsP", 1 :named("inlinable"))
.annotate 'line', 2232
    nqp_get_sc_object $P5461, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5461."add_core_pirop_mapping"("tostr_I", "nqp_bigint_to_str", "SP", 1 :named("inlinable"))
.annotate 'line', 2233
    nqp_get_sc_object $P5462, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5462."add_core_pirop_mapping"("base_I", "nqp_bigint_to_str_base", "SPI", 1 :named("inlinable"))
.annotate 'line', 2234
    nqp_get_sc_object $P5463, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5463."add_core_pirop_mapping"("isbig_I", "nqp_bigint_is_big", "IP", 1 :named("inlinable"))
.annotate 'line', 2235
    nqp_get_sc_object $P5464, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5464."add_core_pirop_mapping"("fromnum_I", "nqp_bigint_from_num", "PNP", 1 :named("inlinable"))
.annotate 'line', 2236
    nqp_get_sc_object $P5465, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5465."add_core_pirop_mapping"("tonum_I", "nqp_bigint_to_num", "NP", 1 :named("inlinable"))
.annotate 'line', 2239
    nqp_get_sc_object $P5466, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5466."add_core_pirop_mapping"("buildnativecall", "nqp_native_call_build", "vPsssPP")
.annotate 'line', 2240
    nqp_get_sc_object $P5467, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5467."add_core_pirop_mapping"("nativecall", "nqp_native_call", "PPPP")
.annotate 'line', 2241
    nqp_get_sc_object $P5468, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5468."add_core_pirop_mapping"("nativecallrefresh", "nqp_native_call_wb", "vP")
.annotate 'line', 2242
    nqp_get_sc_object $P5469, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5469."add_core_pirop_mapping"("x_posixerrno", "nqp_posixerrno", "I")
.annotate 'line', 2245
    nqp_get_sc_object $P5470, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5470."add_core_pirop_mapping"("not_i", "not", "Ii", 1 :named("inlinable"))
.annotate 'line', 2248
    nqp_get_sc_object $P5471, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5471."add_core_pirop_mapping"("atkey", "set", "PQs", 1 :named("inlinable"))
.annotate 'line', 2249
    nqp_get_sc_object $P5472, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5472."add_core_pirop_mapping"("atkey_i", "set", "IQs", 1 :named("inlinable"))
.annotate 'line', 2250
    nqp_get_sc_object $P5473, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5473."add_core_pirop_mapping"("atkey_n", "set", "NQs", 1 :named("inlinable"))
.annotate 'line', 2251
    nqp_get_sc_object $P5474, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5474."add_core_pirop_mapping"("atkey_s", "set", "SQs", 1 :named("inlinable"))
.annotate 'line', 2252
    nqp_get_sc_object $P5475, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5475."add_core_pirop_mapping"("atpos", "set", "PQi", 1 :named("inlinable"))
.annotate 'line', 2253
    nqp_get_sc_object $P5476, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5476."add_core_pirop_mapping"("atpos_i", "set", "IQi", 1 :named("inlinable"))
.annotate 'line', 2254
    nqp_get_sc_object $P5477, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5477."add_core_pirop_mapping"("atpos_n", "set", "NQi", 1 :named("inlinable"))
.annotate 'line', 2255
    nqp_get_sc_object $P5478, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5478."add_core_pirop_mapping"("atpos_s", "set", "SQi", 1 :named("inlinable"))
.annotate 'line', 2256
    nqp_get_sc_object $P5479, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5479."add_core_pirop_mapping"("bindkey", "set", "1QsP", 1 :named("inlinable"))
.annotate 'line', 2257
    nqp_get_sc_object $P5480, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5480."add_core_pirop_mapping"("bindkey_i", "set", "1QsI", 1 :named("inlinable"))
.annotate 'line', 2258
    nqp_get_sc_object $P5481, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5481."add_core_pirop_mapping"("bindkey_n", "set", "1QsN", 1 :named("inlinable"))
.annotate 'line', 2259
    nqp_get_sc_object $P5482, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5482."add_core_pirop_mapping"("bindkey_s", "set", "1QsS", 1 :named("inlinable"))
.annotate 'line', 2260
    nqp_get_sc_object $P5483, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5483."add_core_pirop_mapping"("bindpos", "set", "1QiP", 1 :named("inlinable"))
.annotate 'line', 2261
    nqp_get_sc_object $P5484, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5484."add_core_pirop_mapping"("bindpos_i", "set", "1Qii", 1 :named("inlinable"))
.annotate 'line', 2262
    nqp_get_sc_object $P5485, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5485."add_core_pirop_mapping"("bindpos_n", "set", "1Qin", 1 :named("inlinable"))
.annotate 'line', 2263
    nqp_get_sc_object $P5486, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5486."add_core_pirop_mapping"("bindpos_s", "set", "1Qis", 1 :named("inlinable"))
.annotate 'line', 2264
    nqp_get_sc_object $P5487, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5487."add_core_pirop_mapping"("deletekey", "delete", "0Qs", 1 :named("inlinable"))
.annotate 'line', 2265
    nqp_get_sc_object $P5488, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5488."add_core_pirop_mapping"("deletepos", "delete", "0Qi", 1 :named("inlinable"))
.annotate 'line', 2266
    nqp_get_sc_object $P5489, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5489."add_core_pirop_mapping"("existskey", "exists", "IQs", 1 :named("inlinable"))
.annotate 'line', 2267
    nqp_get_sc_object $P5490, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5490."add_core_pirop_mapping"("existspos", "exists", "IQi", 1 :named("inlinable"))
.annotate 'line', 2268
    nqp_get_sc_object $P5491, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5491."add_core_pirop_mapping"("elems", "elements", "IP", 1 :named("inlinable"))
.annotate 'line', 2269
    nqp_get_sc_object $P5492, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5492."add_core_pirop_mapping"("setelems", "assign", "0Pi", 1 :named("inlinable"))
.annotate 'line', 2270
    nqp_get_sc_object $P5493, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5493."add_core_pirop_mapping"("push", "push", "0PP", 1 :named("inlinable"))
.annotate 'line', 2271
    nqp_get_sc_object $P5494, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5494."add_core_pirop_mapping"("push_s", "push", "0Ps", 1 :named("inlinable"))
.annotate 'line', 2272
    nqp_get_sc_object $P5495, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5495."add_core_pirop_mapping"("push_i", "push", "0Pi", 1 :named("inlinable"))
.annotate 'line', 2273
    nqp_get_sc_object $P5496, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5496."add_core_pirop_mapping"("push_n", "push", "0Pn", 1 :named("inlinable"))
.annotate 'line', 2274
    nqp_get_sc_object $P5497, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5497."add_core_pirop_mapping"("pop", "pop", "PP", 1 :named("inlinable"))
.annotate 'line', 2275
    nqp_get_sc_object $P5498, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5498."add_core_pirop_mapping"("pop_s", "pop", "SP", 1 :named("inlinable"))
.annotate 'line', 2276
    nqp_get_sc_object $P5499, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5499."add_core_pirop_mapping"("pop_i", "pop", "IP", 1 :named("inlinable"))
.annotate 'line', 2277
    nqp_get_sc_object $P5500, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5500."add_core_pirop_mapping"("pop_n", "pop", "NP", 1 :named("inlinable"))
.annotate 'line', 2278
    nqp_get_sc_object $P5501, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5501."add_core_pirop_mapping"("shift", "shift", "PP", 1 :named("inlinable"))
.annotate 'line', 2279
    nqp_get_sc_object $P5502, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5502."add_core_pirop_mapping"("shift_s", "shift", "SP", 1 :named("inlinable"))
.annotate 'line', 2280
    nqp_get_sc_object $P5503, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5503."add_core_pirop_mapping"("shift_i", "shift", "IP", 1 :named("inlinable"))
.annotate 'line', 2281
    nqp_get_sc_object $P5504, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5504."add_core_pirop_mapping"("shift_n", "shift", "NP", 1 :named("inlinable"))
.annotate 'line', 2282
    nqp_get_sc_object $P5505, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5505."add_core_pirop_mapping"("unshift", "unshift", "0PP", 1 :named("inlinable"))
.annotate 'line', 2283
    nqp_get_sc_object $P5506, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5506."add_core_pirop_mapping"("unshift_s", "unshift", "0Ps", 1 :named("inlinable"))
.annotate 'line', 2284
    nqp_get_sc_object $P5507, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5507."add_core_pirop_mapping"("unshift_i", "unshift", "0Pi", 1 :named("inlinable"))
.annotate 'line', 2285
    nqp_get_sc_object $P5508, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5508."add_core_pirop_mapping"("unshift_n", "unshift", "0Pn", 1 :named("inlinable"))
.annotate 'line', 2286
    nqp_get_sc_object $P5509, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5509."add_core_pirop_mapping"("splice", "splice", "0PPii", 1 :named("inlinable"))
.annotate 'line', 2287
    nqp_get_sc_object $P5510, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5510."add_core_pirop_mapping"("islist", "nqp_islist", "IP", 1 :named("inlinable"))
.annotate 'line', 2288
    nqp_get_sc_object $P5511, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5511."add_core_pirop_mapping"("ishash", "nqp_ishash", "IP", 1 :named("inlinable"))
.annotate 'line', 2289
    nqp_get_sc_object $P5512, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5512."add_core_pirop_mapping"("isinvokable", "is_invokable", "IP", 1 :named("inlinable"))
.annotate 'line', 2290
    nqp_get_sc_object $P5513, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5513."add_core_pirop_mapping"("iterator", "iter", "PP", 1 :named("inlinable"))
.annotate 'line', 2291
    nqp_get_sc_object $P5514, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5516 = 'cuid_286_1366375329.52446' 
    capture_lex $P5516
    newclosure $P5515, $P5516
    $P5514."add_core_op"("iterkey_s", $P5515)
.annotate 'line', 2294
    nqp_get_sc_object $P5517, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5519 = 'cuid_287_1366375329.52446' 
    capture_lex $P5519
    newclosure $P5518, $P5519
    $P5517."add_core_op"("iterval", $P5518)
.annotate 'line', 2299
    nqp_get_sc_object $P5520, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5520."add_core_pirop_mapping"("r_atpos", "repr_at_pos_obj", "PPi", 1 :named("inlinable"))
.annotate 'line', 2300
    nqp_get_sc_object $P5521, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5521."add_core_pirop_mapping"("r_atpos_i", "repr_at_pos_int", "IPi", 1 :named("inlinable"))
.annotate 'line', 2301
    nqp_get_sc_object $P5522, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5522."add_core_pirop_mapping"("r_atpos_n", "repr_at_pos_num", "NPi", 1 :named("inlinable"))
.annotate 'line', 2302
    nqp_get_sc_object $P5523, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5523."add_core_pirop_mapping"("r_bindpos", "repr_bind_pos_obj", "2PiP", 1 :named("inlinable"))
.annotate 'line', 2303
    nqp_get_sc_object $P5524, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5524."add_core_pirop_mapping"("r_bindpos_i", "repr_bind_pos_int", "2Pii", 1 :named("inlinable"))
.annotate 'line', 2304
    nqp_get_sc_object $P5525, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5525."add_core_pirop_mapping"("r_bindpos_n", "repr_bind_pos_num", "2Pin", 1 :named("inlinable"))
.annotate 'line', 2305
    nqp_get_sc_object $P5526, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5526."add_core_pirop_mapping"("r_elems", "repr_elems", "IP", 1 :named("inlinable"))
.annotate 'line', 2308
    nqp_get_sc_object $P5527, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5527."add_core_pirop_mapping"("bindattr", "setattribute", "3PPsP", 1 :named("inlinable"))
.annotate 'line', 2309
    nqp_get_sc_object $P5528, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5528."add_core_pirop_mapping"("bindattr_i", "repr_bind_attr_int", "3PPsi", 1 :named("inlinable"))
.annotate 'line', 2310
    nqp_get_sc_object $P5529, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5529."add_core_pirop_mapping"("bindattr_n", "repr_bind_attr_num", "3PPsn", 1 :named("inlinable"))
.annotate 'line', 2311
    nqp_get_sc_object $P5530, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5530."add_core_pirop_mapping"("bindattr_s", "repr_bind_attr_str", "3PPss", 1 :named("inlinable"))
.annotate 'line', 2312
    nqp_get_sc_object $P5531, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5531."add_core_pirop_mapping"("getattr", "getattribute", "PPPs", 1 :named("inlinable"))
.annotate 'line', 2313
    nqp_get_sc_object $P5532, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5532."add_core_pirop_mapping"("getattr_i", "repr_get_attr_int", "IPPs", 1 :named("inlinable"))
.annotate 'line', 2314
    nqp_get_sc_object $P5533, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5533."add_core_pirop_mapping"("getattr_n", "repr_get_attr_num", "NPPs", 1 :named("inlinable"))
.annotate 'line', 2315
    nqp_get_sc_object $P5534, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5534."add_core_pirop_mapping"("getattr_s", "repr_get_attr_str", "SPPs", 1 :named("inlinable"))
.annotate 'line', 2316
    nqp_get_sc_object $P5535, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5535."add_core_pirop_mapping"("attrinited", "repr_is_attr_initialized", "IPPs", 1 :named("inlinable"))
.annotate 'line', 2317
    nqp_get_sc_object $P5536, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5536."add_core_pirop_mapping"("create", "repr_instance_of", "PP", 1 :named("inlinable"))
.annotate 'line', 2318
    nqp_get_sc_object $P5537, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5537."add_core_pirop_mapping"("clone", "repr_clone", "PP", 1 :named("inlinable"))
.annotate 'line', 2319
    nqp_get_sc_object $P5538, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5538."add_core_pirop_mapping"("isconcrete", "repr_defined", "IP", 1 :named("inlinable"))
.annotate 'line', 2320
    nqp_get_sc_object $P5539, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5539."add_core_pirop_mapping"("iscont", "is_container", "IP", 1 :named("inlinable"))
.annotate 'line', 2321
    nqp_get_sc_object $P5540, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5540."add_core_pirop_mapping"("decont", "nqp_decontainerize", "PP", 1 :named("inlinable"))
.annotate 'line', 2322
    nqp_get_sc_object $P5541, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5541."add_core_pirop_mapping"("isnull", "isnull", "IP", 1 :named("inlinable"))
.annotate 'line', 2323
    nqp_get_sc_object $P5542, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5542."add_core_pirop_mapping"("isnull_s", "isnull", "IS", 1 :named("inlinable"))
.annotate 'line', 2324
    nqp_get_sc_object $P5543, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5543."add_core_pirop_mapping"("istrue", "istrue", "IP", 1 :named("inlinable"))
.annotate 'line', 2325
    nqp_get_sc_object $P5544, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5544."add_core_pirop_mapping"("isfalse", "isfalse", "IP", 1 :named("inlinable"))
.annotate 'line', 2326
    nqp_get_sc_object $P5545, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5545."add_core_pirop_mapping"("istype", "type_check", "IPP", 1 :named("inlinable"))
.annotate 'line', 2327
    nqp_get_sc_object $P5546, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5546."add_core_pirop_mapping"("null", "null", "P", 1 :named("inlinable"))
.annotate 'line', 2328
    nqp_get_sc_object $P5547, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5547."add_core_pirop_mapping"("null_s", "null", "S", 1 :named("inlinable"))
.annotate 'line', 2329
    nqp_get_sc_object $P5548, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5548."add_core_pirop_mapping"("unbox_i", "repr_unbox_int", "IP", 1 :named("inlinable"))
.annotate 'line', 2330
    nqp_get_sc_object $P5549, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5549."add_core_pirop_mapping"("unbox_n", "repr_unbox_num", "NP", 1 :named("inlinable"))
.annotate 'line', 2331
    nqp_get_sc_object $P5550, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5550."add_core_pirop_mapping"("unbox_s", "repr_unbox_str", "SP", 1 :named("inlinable"))
.annotate 'line', 2332
    nqp_get_sc_object $P5551, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5551."add_core_pirop_mapping"("box_i", "repr_box_int", "PiP", 1 :named("inlinable"))
.annotate 'line', 2333
    nqp_get_sc_object $P5552, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5552."add_core_pirop_mapping"("box_n", "repr_box_num", "PnP", 1 :named("inlinable"))
.annotate 'line', 2334
    nqp_get_sc_object $P5553, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5553."add_core_pirop_mapping"("box_s", "repr_box_str", "PsP", 1 :named("inlinable"))
.annotate 'line', 2335
    nqp_get_sc_object $P5554, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5554."add_core_pirop_mapping"("what", "get_what", "PP", 1 :named("inlinable"))
.annotate 'line', 2336
    nqp_get_sc_object $P5555, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5555."add_core_pirop_mapping"("how", "get_how", "PP", 1 :named("inlinable"))
.annotate 'line', 2337
    nqp_get_sc_object $P5556, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5556."add_core_pirop_mapping"("who", "get_who", "PP", 1 :named("inlinable"))
.annotate 'line', 2338
    nqp_get_sc_object $P5557, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5557."add_core_pirop_mapping"("where", "get_id", "IP", 1 :named("inlinable"))
.annotate 'line', 2339
    nqp_get_sc_object $P5558, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5558."add_core_pirop_mapping"("findmethod", "find_method", "PPs", 1 :named("inlinable"))
.annotate 'line', 2340
    nqp_get_sc_object $P5559, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5559."add_core_pirop_mapping"("defined", "defined", "IP", 1 :named("inlinable"))
.annotate 'line', 2341
    nqp_get_sc_object $P5560, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5560."add_core_pirop_mapping"("can", "can", "IPs", 1 :named("inlinable"))
.annotate 'line', 2342
    nqp_get_sc_object $P5561, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5561."add_core_pirop_mapping"("reprname", "repr_name", "SP", 1 :named("inlinable"))
.annotate 'line', 2343
    nqp_get_sc_object $P5562, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5562."add_core_pirop_mapping"("newtype", "repr_type_object_for", "PPs", 1 :named("inlinable"))
.annotate 'line', 2344
    nqp_get_sc_object $P5563, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5563."add_core_pirop_mapping"("composetype", "repr_compose", "0PP", 1 :named("inlinable"))
.annotate 'line', 2345
    nqp_get_sc_object $P5564, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5564."add_core_pirop_mapping"("setwho", "set_who", "0PP", 1 :named("inlinable"))
.annotate 'line', 2346
    nqp_get_sc_object $P5565, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5565."add_core_pirop_mapping"("rebless", "repr_change_type", "0PP", 1 :named("inlinable"))
.annotate 'line', 2347
    nqp_get_sc_object $P5566, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5566."add_core_pirop_mapping"("knowhow", "get_knowhow", "P", 1 :named("inlinable"))
.annotate 'line', 2348
    nqp_get_sc_object $P5567, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5567."add_core_pirop_mapping"("knowhowattr", "get_knowhow_attribute", "P", 1 :named("inlinable"))
.annotate 'line', 2349
    nqp_get_sc_object $P5568, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5568."add_core_pirop_mapping"("setboolspec", "set_boolification_spec", "0PiP", 1 :named("inlinable"))
.annotate 'line', 2350
    nqp_get_sc_object $P5569, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5569."add_core_pirop_mapping"("setmethcache", "publish_method_cache", "0PP", 1 :named("inlinable"))
.annotate 'line', 2351
    nqp_get_sc_object $P5570, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5570."add_core_pirop_mapping"("setmethcacheauth", "set_method_cache_authoritativeness", "0Pi", 1 :named("inlinable"))
.annotate 'line', 2352
    nqp_get_sc_object $P5571, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5571."add_core_pirop_mapping"("settypecache", "publish_type_check_cache", "0PP", 1 :named("inlinable"))
.annotate 'line', 2353
    nqp_get_sc_object $P5572, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5572."add_core_pirop_mapping"("objprimspec", "repr_get_primitive_type_spec", "IP", 1 :named("inlinable"))
.annotate 'line', 2354
    nqp_get_sc_object $P5573, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5573."add_core_pirop_mapping"("setcontspec", "set_container_spec", "0PPsP", 1 :named("inlinable"))
.annotate 'line', 2355
    nqp_get_sc_object $P5574, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5574."add_core_pirop_mapping"("setinvokespec", "set_invocation_spec", "0PPsP", 1 :named("inlinable"))
.annotate 'line', 2358
    nqp_get_sc_object $P5575, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5575."add_core_pirop_mapping"("getlex", "find_lex", "Ps")
.annotate 'line', 2359
    nqp_get_sc_object $P5576, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5576."add_core_pirop_mapping"("getlex_i", "find_lex", "Is")
.annotate 'line', 2360
    nqp_get_sc_object $P5577, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5577."add_core_pirop_mapping"("getlex_n", "find_lex", "Ns")
.annotate 'line', 2361
    nqp_get_sc_object $P5578, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5578."add_core_pirop_mapping"("getlex_s", "find_lex", "Ss")
.annotate 'line', 2362
    nqp_get_sc_object $P5579, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5579."add_core_pirop_mapping"("bindlex", "store_lex", "1sP")
.annotate 'line', 2363
    nqp_get_sc_object $P5580, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5580."add_core_pirop_mapping"("bindlex_i", "store_lex", "1si")
.annotate 'line', 2364
    nqp_get_sc_object $P5581, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5581."add_core_pirop_mapping"("bindlex_n", "store_lex", "1sn")
.annotate 'line', 2365
    nqp_get_sc_object $P5582, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5582."add_core_pirop_mapping"("bindlex_s", "store_lex", "1ss")
.annotate 'line', 2366
    nqp_get_sc_object $P5583, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5583."add_core_pirop_mapping"("getlexdyn", "find_dynamic_lex", "Ps")
.annotate 'line', 2367
    nqp_get_sc_object $P5584, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5584."add_core_pirop_mapping"("bindlexdyn", "store_dynamic_lex", "1sP")
.annotate 'line', 2368
    nqp_get_sc_object $P5585, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5585."add_core_pirop_mapping"("getlexcaller", "find_caller_lex", "Ps")
.annotate 'line', 2371
    nqp_get_sc_object $P5586, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5586."add_core_pirop_mapping"("takeclosure", "newclosure", "PP")
.annotate 'line', 2372
    nqp_get_sc_object $P5587, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5587."add_core_pirop_mapping"("getcodeobj", "get_sub_code_object", "PP")
.annotate 'line', 2373
    nqp_get_sc_object $P5588, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5588."add_core_pirop_mapping"("setcodeobj", "set_sub_code_object", "1PP")
.annotate 'line', 2374
    nqp_get_sc_object $P5589, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5589."add_core_pirop_mapping"("getcodename", "set", "SP")
.annotate 'line', 2375
    nqp_get_sc_object $P5590, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5590."add_core_pirop_mapping"("setcodename", "assign", "1Ps")
.annotate 'line', 2376
    nqp_get_sc_object $P5591, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5593 = 'cuid_288_1366375329.52446' 
    capture_lex $P5593
    newclosure $P5592, $P5593
    $P5591."add_core_op"("getcodecuid", $P5592)
.annotate 'line', 2385
    nqp_get_sc_object $P5594, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5596 = 'cuid_289_1366375329.52446' 
    capture_lex $P5596
    newclosure $P5595, $P5596
    $P5594."add_core_op"("setstaticlex", $P5595)
.annotate 'line', 2412
    nqp_get_sc_object $P5597, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5599 = 'cuid_290_1366375329.52446' 
    capture_lex $P5599
    newclosure $P5598, $P5599
    $P5597."add_core_op"("forceouterctx", $P5598)
.annotate 'line', 2421
    nqp_get_sc_object $P5600, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5600."add_core_pirop_mapping"("freshcoderef", "nqp_fresh_stub", "PP")
.annotate 'line', 2422
    nqp_get_sc_object $P5601, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5601."add_core_pirop_mapping"("replacecoderef", "assign", "0PP")
.annotate 'line', 2423
    nqp_get_sc_object $P5602, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5604 = 'cuid_291_1366375329.52446' 
    capture_lex $P5604
    newclosure $P5603, $P5604
    $P5602."add_core_op"("markcodestatic", $P5603)
.annotate 'line', 2434
    nqp_get_sc_object $P5605, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5607 = 'cuid_292_1366375329.52446' 
    capture_lex $P5607
    newclosure $P5606, $P5607
    $P5605."add_core_op"("markcodestub", $P5606)
.annotate 'line', 2445
    nqp_get_sc_object $P5608, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5610 = 'cuid_293_1366375329.52446' 
    capture_lex $P5610
    newclosure $P5609, $P5610
    $P5608."add_core_op"("getstaticcode", $P5609)
.annotate 'line', 2458
    nqp_get_sc_object $P5611, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5611."add_core_pirop_mapping"("sha1", "nqp_sha1", "Ss")
.annotate 'line', 2459
    nqp_get_sc_object $P5612, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5612."add_core_pirop_mapping"("createsc", "nqp_create_sc", "Ps")
.annotate 'line', 2460
    nqp_get_sc_object $P5613, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5613."add_core_pirop_mapping"("scsetobj", "set", "1QiP")
.annotate 'line', 2461
    nqp_get_sc_object $P5614, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5614."add_core_pirop_mapping"("scsetcode", "nqp_add_code_ref_to_sc", "2PiP")
.annotate 'line', 2462
    nqp_get_sc_object $P5615, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5615."add_core_pirop_mapping"("scgetobj", "set", "PQi")
.annotate 'line', 2463
    nqp_get_sc_object $P5616, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5616."add_core_pirop_mapping"("scgetcode", "nqp_get_sc_code_ref", "Psi")
.annotate 'line', 2464
    nqp_get_sc_object $P5617, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5619 = 'cuid_294_1366375329.52446' 
    capture_lex $P5619
    newclosure $P5618, $P5619
    $P5617."add_core_op"("scgethandle", $P5618)
.annotate 'line', 2470
    nqp_get_sc_object $P5620, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5622 = 'cuid_295_1366375329.52446' 
    capture_lex $P5622
    newclosure $P5621, $P5622
    $P5620."add_core_op"("scgetobjidx", $P5621)
.annotate 'line', 2476
    nqp_get_sc_object $P5623, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5625 = 'cuid_296_1366375329.52446' 
    capture_lex $P5625
    newclosure $P5624, $P5625
    $P5623."add_core_op"("scsetdesc", $P5624)
.annotate 'line', 2482
    nqp_get_sc_object $P5626, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5628 = 'cuid_297_1366375329.52446' 
    capture_lex $P5628
    newclosure $P5627, $P5628
    $P5626."add_core_op"("scobjcount", $P5627)
.annotate 'line', 2488
    nqp_get_sc_object $P5629, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5629."add_core_pirop_mapping"("setobjsc", "nqp_set_sc_for_object", "0PP")
.annotate 'line', 2489
    nqp_get_sc_object $P5630, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5630."add_core_pirop_mapping"("getobjsc", "nqp_get_sc_for_object", "PP")
.annotate 'line', 2490
    nqp_get_sc_object $P5631, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5631."add_core_pirop_mapping"("serialize", "nqp_serialize_sc", "SPP")
.annotate 'line', 2491
    nqp_get_sc_object $P5632, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5632."add_core_pirop_mapping"("deserialize", "nqp_deserialize_sc", "0sPPPP")
.annotate 'line', 2492
    nqp_get_sc_object $P5633, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5633."add_core_pirop_mapping"("wval", "nqp_get_sc_object", "Psi")
.annotate 'line', 2493
    nqp_get_sc_object $P5634, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5636 = 'cuid_298_1366375329.52446' 
    capture_lex $P5636
    newclosure $P5635, $P5636
    $P5634."add_core_op"("scwbdisable", $P5635)
.annotate 'line', 2499
    nqp_get_sc_object $P5637, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5639 = 'cuid_299_1366375329.52446' 
    capture_lex $P5639
    newclosure $P5638, $P5639
    $P5637."add_core_op"("scwbenable", $P5638)
.annotate 'line', 2505
    nqp_get_sc_object $P5640, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5640."add_core_pirop_mapping"("pushcompsc", "nqp_push_compiling_sc", "0P")
.annotate 'line', 2506
    nqp_get_sc_object $P5641, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5643 = 'cuid_300_1366375329.52446' 
    capture_lex $P5643
    newclosure $P5642, $P5643
    $P5641."add_core_op"("popcompsc", $P5642)
.annotate 'line', 2514
    nqp_get_sc_object $P5644, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5644."add_core_pirop_mapping"("getcomp", "compreg", "Ps")
.annotate 'line', 2515
    nqp_get_sc_object $P5645, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5645."add_core_pirop_mapping"("bindcomp", "compreg", "1sP")
.annotate 'line', 2516
    nqp_get_sc_object $P5646, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5646."add_core_pirop_mapping"("getcurhllsym", "get_hll_global", "Ps")
.annotate 'line', 2517
    nqp_get_sc_object $P5647, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5647."add_core_pirop_mapping"("bindcurhllsym", "set_hll_global", "1sP")
.annotate 'line', 2518
    nqp_get_sc_object $P5648, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5648."add_core_pirop_mapping"("loadbytecode", "load_bytecode", "0s")
.annotate 'line', 2519
    nqp_get_sc_object $P5649, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5651 = 'cuid_301_1366375329.52446' 
    capture_lex $P5651
    newclosure $P5650, $P5651
    $P5649."add_core_op"("gethllsym", $P5650)
.annotate 'line', 2529
    nqp_get_sc_object $P5652, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5654 = 'cuid_302_1366375329.52446' 
    capture_lex $P5654
    newclosure $P5653, $P5654
    $P5652."add_core_op"("bindhllsym", $P5653)
.annotate 'line', 2540
    nqp_get_sc_object $P5655, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5655."add_core_pirop_mapping"("sethllconfig", "nqp_sethllconfig", "PsP")
.annotate 'line', 2541
    nqp_get_sc_object $P5656, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5656."add_core_pirop_mapping"("settypehll", "nqp_settypehll", "0Ps")
.annotate 'line', 2542
    nqp_get_sc_object $P5657, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5657."add_core_pirop_mapping"("settypehllrole", "nqp_settypehllrole", "0Pi")
.annotate 'line', 2543
    nqp_get_sc_object $P5658, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5658."add_core_pirop_mapping"("hllize", "nqp_hllize", "PP")
.annotate 'line', 2544
    nqp_get_sc_object $P5659, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5659."add_core_pirop_mapping"("hllizefor", "nqp_hllizefor", "PPs")
.annotate 'line', 2547
    nqp_get_sc_object $P5660, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5660."add_core_pirop_mapping"("nfafromstatelist", "nqp_nfa_from_statelist", "PPP")
.annotate 'line', 2548
    nqp_get_sc_object $P5661, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5661."add_core_pirop_mapping"("nfatostatelist", "nqp_nfa_to_statelist", "PP")
.annotate 'line', 2549
    nqp_get_sc_object $P5662, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5662."add_core_pirop_mapping"("nfarunproto", "nqp_nfa_run_proto", "PPsi")
.annotate 'line', 2550
    nqp_get_sc_object $P5663, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5663."add_core_pirop_mapping"("nfarunalt", "nqp_nfa_run_alt", "0PsiPPP")
.annotate 'line', 2553
    nqp_get_sc_object $P5664, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5664."add_core_pirop_mapping"("exit", "exit", "0i", 1 :named("inlinable"))
.annotate 'line', 2554
    nqp_get_sc_object $P5665, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5665."add_core_pirop_mapping"("sleep", "sleep", "0n", 1 :named("inlinable"))
    .const 'Sub' $P5666 = 'cuid_304_1366375329.52446' 
    capture_lex $P5666
    $P5667 = $P5666()
    .return () 
.end
.HLL "nqp"
.namespace []
.sub "handle_arg" :subid("cuid_144_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1176
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 
    .param pmc _lex_param_5 :named("coerce") :optional 
    .param int haz_param_1 :opt_flag 
    .const 'Sub' $P5018 = 'cuid_143_1366375329.52446' 
    capture_lex $P5018 
    .lex "$arg_post", $P101 
    .lex "$result", $P102 
    .lex "$arg", _lex_param_0 
    .lex "$qastcomp", _lex_param_1 
    .lex "$ops", _lex_param_2 
    .lex "@pos_arg_results", _lex_param_3 
    .lex "@named_arg_results", _lex_param_4 
    .lex "$coerce", _lex_param_5 
    if haz_param_1, default20
    nqp_get_sc_object $P5017, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set _lex_param_5, $P5017
  default20:
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
.annotate 'line', 1177
    $P5003 = _lex_param_1."as_post"(_lex_param_0)
    set $P101, $P5003
    unless _lex_param_5 goto if10_end11 
.annotate 'line', 1178
.annotate 'line', 1179
    $P5004 = _lex_param_1."coerce"($P101, _lex_param_5)
    set $P101, $P5004
  if10_end11:
.annotate 'line', 1181
    _lex_param_2."push"($P101)
.annotate 'line', 1182
    $P5005 = $P101."result"()
    set $P102, $P5005
.annotate 'line', 1183
    $P5006 = _lex_param_0."flat"()
    unless $P5006 goto if11_else12 
    set $S5002, $P102
    concat $S5001, $S5002, " :flat"
    box $P5007, $S5001
    set $P102, $P5007
.annotate 'line', 1185
    $P5008 = _lex_param_0."named"()
    set $P5010, $P5008
    unless $P5008 goto if12_end15 
    set $S5004, $P102
    concat $S5003, $S5004, " :named"
    box $P5009, $S5003
    set $P102, $P5009
    set $P5010, $P102
  if12_end15:
    goto if11_end13
  if11_else12:
.annotate 'line', 1189
    $P5011 = _lex_param_0."named"()
    set $P5014, $P5011
    unless $P5011 goto if13_end17 
    .const 'Sub' $P5012 = 'cuid_143_1366375329.52446' 
    capture_lex $P5012
    $P5013 = $P5012($P5011)
    set $P5014, $P5013
  if13_end17:
  if11_end13:
.annotate 'line', 1192
    $P5015 = _lex_param_0."named"()
    unless $P5015 goto if14_else18 
    push _lex_param_4, $P102
    set $P5016, _lex_param_4
    goto if14_end19
  if14_else18:
.annotate 'line', 1195
    push _lex_param_3, $P102
    set $P5016, _lex_param_3
  if14_end19:
    .return ($P5016) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_143_1366375329.52446") :anon :lex :outer("cuid_144_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1189
    .param pmc _lex_param_0 
    .lex "$name", _lex_param_0 
    find_lex $P5001, "$result"
    set $S5004, $P5001
    concat $S5003, $S5004, " :named("
.annotate 'line', 1190
    find_lex $P5002, "$qastcomp"
    $P5003 = $P5002."escape"(_lex_param_0)
    set $S5005, $P5003
    concat $S5002, $S5003, $S5005
    concat $S5001, $S5002, ")"
    box $P5004, $S5001
    store_lex "$result", $P5004
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_146_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 10
    .const 'Sub' $P5003 = 'cuid_1_1366375329.52446' 
    capture_lex $P5003 
    .const 'Sub' $P5003 = 'cuid_2_1366375329.52446' 
    capture_lex $P5003 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .const 'Sub' $P5001 = 'cuid_1_1366375329.52446' 
    capture_lex $P5001
    .const 'Sub' $P5002 = 'cuid_2_1366375329.52446' 
    capture_lex $P5002
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "new" :subid("cuid_1_1366375329.52446") :anon :lex :outer("cuid_146_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 13
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :named("result") 
    .lex "$obj", $P101 
    .lex "self", _lex_param_0 
    .lex "$result", _lex_param_1 
    .local pmc fb_tmp_1 
    .local pmc pkg_lookup_tmp_1 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_decontainerize $P5003, _lex_param_0
    repr_instance_of $P5002, $P5003
    set $P101, $P5002
    nqp_get_sc_object $P5004, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 3
    nqp_get_sc_object $P5006, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    set pkg_lookup_tmp_1, $P5006
    get_who $P5007, pkg_lookup_tmp_1
    exists $I5003, $P5007["PIRT"]
    unless $I5003 goto if19_else29 
    get_who $P5009, pkg_lookup_tmp_1
    set $P5008, $P5009["PIRT"]
    set $P5011, $P5008
    goto if19_end30
  if19_else29:
    nqp_get_sc_object $P5010, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5011, $P5010
  if19_end30:
    get_who $P5005, $P5011
    set fb_tmp_1, $P5005
    repr_defined $I5002, fb_tmp_1
    unless $I5002 goto if18_else27 
    set $P5012, fb_tmp_1["Node"]
    set $P5014, $P5012
    goto if18_end28
  if18_else27:
    null $P5013
    set $P5014, $P5013
  if18_end28:
    unless_null $P5014, vivi_2031
    nqp_get_sc_object $P5015, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5014, $P5015
  vivi_2031:
    type_check $I5001, _lex_param_1, $P5014
    unless $I5001 goto if17_else25 
.annotate 'line', 16
    $P5016 = _lex_param_1."result"()
    set $P5017, $P5016
    goto if17_end26
  if17_else25:
    set $P5017, _lex_param_1
  if17_end26:
    set $S5001, $P5017
    repr_bind_attr_str $P101, $P5004, "$!result", $S5001
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "result" :subid("cuid_2_1366375329.52446") :anon :lex :outer("cuid_146_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 20
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 3
    repr_get_attr_str $S5001, $P5001, $P5002, "$!result"
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_147_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 25
    .const 'Sub' $P5016 = 'cuid_3_1366375329.52446' 
    capture_lex $P5016 
    .const 'Sub' $P5016 = 'cuid_4_1366375329.52446' 
    capture_lex $P5016 
    .const 'Sub' $P5016 = 'cuid_5_1366375329.52446' 
    capture_lex $P5016 
    .const 'Sub' $P5016 = 'cuid_6_1366375329.52446' 
    capture_lex $P5016 
    .const 'Sub' $P5016 = 'cuid_7_1366375329.52446' 
    capture_lex $P5016 
    .const 'Sub' $P5016 = 'cuid_10_1366375329.52446' 
    capture_lex $P5016 
    .const 'Sub' $P5016 = 'cuid_11_1366375329.52446' 
    capture_lex $P5016 
    .lex "%op_compilers", $P101 
    .lex "$?PACKAGE", $P102 
    .lex "$?CLASS", $P103 
    new $P5001, 'Hash'
    set $P101, $P5001
    new $P5002, 'Hash'
    .const 'Sub' $P5004 = 'cuid_3_1366375329.52446' 
    capture_lex $P5004
    newclosure $P5003, $P5004
    set $P5002["call"], $P5003
    .const 'Sub' $P5006 = 'cuid_4_1366375329.52446' 
    capture_lex $P5006
    newclosure $P5005, $P5006
    set $P5002["callmethod"], $P5005
    .const 'Sub' $P5008 = 'cuid_5_1366375329.52446' 
    capture_lex $P5008
    newclosure $P5007, $P5008
    set $P5002["return"], $P5007
    .const 'Sub' $P5010 = 'cuid_6_1366375329.52446' 
    capture_lex $P5010
    newclosure $P5009, $P5010
    set $P5002["yield"], $P5009
    .const 'Sub' $P5012 = 'cuid_7_1366375329.52446' 
    capture_lex $P5012
    newclosure $P5011, $P5012
    set $P5002["tailcall"], $P5011
    .const 'Sub' $P5014 = 'cuid_10_1366375329.52446' 
    capture_lex $P5014
    newclosure $P5013, $P5014
    set $P5002["inline"], $P5013
    set $P101, $P5002
    .const 'Sub' $P5015 = 'cuid_11_1366375329.52446' 
    capture_lex $P5015
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_3_1366375329.52446") :anon :lex :outer("cuid_147_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 27
    .param pmc _lex_param_0 
    .lex "@args", _lex_param_0 
    .local pmc fb_tmp_2 
    find_dynamic_lex $P5001, "$*HAS_RESULT"
    unless_null $P5001, fallback34
    nqp_get_sc_object $P5003, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5002, $P5003
    set fb_tmp_2, $P5002
    repr_defined $I5001, fb_tmp_2
    unless $I5001 goto if22_else35 
    set $P5004, fb_tmp_2["$HAS_RESULT"]
    set $P5006, $P5004
    goto if22_end36
  if22_else35:
    null $P5005
    set $P5006, $P5005
  if22_end36:
    unless_null $P5006, vivi_2337
    nqp_get_sc_object $P5007, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5006, $P5007
  vivi_2337:
    unless_null $P5006, vivi_2438
    die "Contextual $*HAS_RESULT not found"
    box $P5008, "Contextual $*HAS_RESULT not found"
    set $P5006, $P5008
  vivi_2438:
    set $P5001, $P5006
  fallback34:
    unless $P5001 goto if21_else32 
    shift $P5009, _lex_param_0
    set $S5007, $P5009
    concat $S5006, $S5007, " = "
    set $S5008, $S5006
    goto if21_end33
  if21_else32:
    set $S5008, ""
  if21_end33:
    concat $S5005, "    ", $S5008
    shift $P5010, _lex_param_0
    set $S5009, $P5010
    concat $S5004, $S5005, $S5009
    concat $S5003, $S5004, "("
    join $S5010, ", ", _lex_param_0
    concat $S5002, $S5003, $S5010
    concat $S5001, $S5002, ")"
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_4_1366375329.52446") :anon :lex :outer("cuid_147_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 32
    .param pmc _lex_param_0 
    .lex "$pir", $P101 
    .lex "$name", $P102 
    .lex "$invocant", $P103 
    .lex "@args", _lex_param_0 
    .local pmc fb_tmp_3 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
    find_dynamic_lex $P5004, "$*HAS_RESULT"
    unless_null $P5004, fallback41
    nqp_get_sc_object $P5006, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5005, $P5006
    set fb_tmp_3, $P5005
    repr_defined $I5001, fb_tmp_3
    unless $I5001 goto if26_else42 
    set $P5007, fb_tmp_3["$HAS_RESULT"]
    set $P5009, $P5007
    goto if26_end43
  if26_else42:
    null $P5008
    set $P5009, $P5008
  if26_end43:
    unless_null $P5009, vivi_2744
    nqp_get_sc_object $P5010, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5009, $P5010
  vivi_2744:
    unless_null $P5009, vivi_2845
    die "Contextual $*HAS_RESULT not found"
    box $P5011, "Contextual $*HAS_RESULT not found"
    set $P5009, $P5011
  vivi_2845:
    set $P5004, $P5009
  fallback41:
    unless $P5004 goto if25_else39 
    shift $P5012, _lex_param_0
    set $S5003, $P5012
    concat $S5002, $S5003, " = "
    set $S5004, $S5002
    goto if25_end40
  if25_else39:
    set $S5004, ""
  if25_end40:
    concat $S5001, "    ", $S5004
    box $P5013, $S5001
    set $P101, $P5013
    shift $P5014, _lex_param_0
    set $P102, $P5014
    shift $P5015, _lex_param_0
    set $P103, $P5015
    set $S5011, $P101
    set $S5012, $P103
    concat $S5010, $S5011, $S5012
    concat $S5009, $S5010, "."
    set $S5013, $P102
    concat $S5008, $S5009, $S5013
    concat $S5007, $S5008, "("
    join $S5014, ", ", _lex_param_0
    concat $S5006, $S5007, $S5014
    concat $S5005, $S5006, ")"
    .return ($S5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_5_1366375329.52446") :anon :lex :outer("cuid_147_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 38
    .param pmc _lex_param_0 
    .lex "@args", _lex_param_0 
    join $S5003, ", ", _lex_param_0
    concat $S5002, "    .return (", $S5003
    concat $S5001, $S5002, ")"
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_6_1366375329.52446") :anon :lex :outer("cuid_147_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 41
    .param pmc _lex_param_0 
    .lex "@args", _lex_param_0 
    box $P5001, "yield compilation NYI"
    die $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_7_1366375329.52446") :anon :lex :outer("cuid_147_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 44
    .param pmc _lex_param_0 
    .lex "@args", _lex_param_0 
    box $P5001, "tailcall compilation NYI"
    die $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_10_1366375329.52446") :anon :lex :outer("cuid_147_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 47
    .param pmc _lex_param_0 
    .const 'Sub' $P5020 = 'cuid_148_1366375329.52446' 
    capture_lex $P5020 
    .const 'Sub' $P5020 = 'cuid_149_1366375329.52446' 
    capture_lex $P5020 
    .lex "$pir", $P101 
    .lex "$i", $P102 
    .lex "@args", _lex_param_0 
    .local pmc fb_tmp_4 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    find_dynamic_lex $P5003, "$*HAS_RESULT"
    unless_null $P5003, fallback48
    nqp_get_sc_object $P5005, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5004, $P5005
    set fb_tmp_4, $P5004
    repr_defined $I5001, fb_tmp_4
    unless $I5001 goto if30_else49 
    set $P5006, fb_tmp_4["$HAS_RESULT"]
    set $P5008, $P5006
    goto if30_end50
  if30_else49:
    null $P5007
    set $P5008, $P5007
  if30_end50:
    unless_null $P5008, vivi_3151
    nqp_get_sc_object $P5009, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5008, $P5009
  vivi_3151:
    unless_null $P5008, vivi_3252
    die "Contextual $*HAS_RESULT not found"
    box $P5010, "Contextual $*HAS_RESULT not found"
    set $P5008, $P5010
  vivi_3252:
    set $P5003, $P5008
  fallback48:
    unless $P5003 goto if29_else46 
    .const 'Sub' $P5011 = 'cuid_148_1366375329.52446' 
    capture_lex $P5011
    $P5012 = $P5011()
    goto if29_end47
  if29_else46:
.annotate 'line', 53
    shift $P5013, _lex_param_0
    set $P101, $P5013
  if29_end47:
    box $P5014, 0
    set $P102, $P5014
    set $P5015, _lex_param_0
    iter $P5017, _lex_param_0
  for_next83:
    unless $P5017, for_done85
    shift $P5019, $P5017
  for_redo84:
    .const 'Sub' $P5018 = 'cuid_149_1366375329.52446' 
    capture_lex $P5018
    $P5015 = $P5018($P5019)
    goto for_next83
  for_done85:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_148_1366375329.52446") :anon :lex :outer("cuid_10_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 49
    .const 'Sub' $P5018 = 'cuid_8_1366375329.52446' 
    capture_lex $P5018 
    .lex "$result", $P101 
    .local pmc fb_tmp_5 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    find_lex $P5003, "@args"
    shift $P5002, $P5003
    set $P101, $P5002
.annotate 'line', 51
    find_lex $P5005, "@args"
    shift $P5004, $P5005
    find_lex $P5007, "$?PACKAGE"
    get_who $P5006, $P5007
    set fb_tmp_5, $P5006
    repr_defined $I5001, fb_tmp_5
    unless $I5001 goto if33_else53 
    set $P5008, fb_tmp_5["NQPRegex"]
    set $P5010, $P5008
    goto if33_end54
  if33_else53:
    null $P5009
    set $P5010, $P5009
  if33_end54:
    unless_null $P5010, vivi_3556
    nqp_get_sc_object $P5013, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5012, $P5013
    set $P5011, $P5012["NQPRegex"]
    unless_null $P5011, vivi_3455
    nqp_get_sc_object $P5014, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5011, $P5014
  vivi_3455:
    set $P5010, $P5011
  vivi_3556:
    .const 'Sub' $P5015 = 'cuid_8_1366375329.52446' 
    capture_lex $P5015
    $P5016 = $P5010."new"($P5015)
    $P5017 = "&subst"($P5004, $P5016, $P101, 1 :named("global"))
    store_lex "$pir", $P5017
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_8_1366375329.52446") :anon :lex :outer("cuid_148_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 51
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx36_start
    .local string rx36_tgt
    .local int rx36_pos
    .local int rx36_off
    .local int rx36_eos
    .local int rx36_rep
    .local pmc rx36_cur
    .local pmc rx36_curclass
    .local pmc rx36_bstack
    .local pmc rx36_cstack
    rx36_start = self."!cursor_start_all"()
    set rx36_cur, rx36_start[0]
    set rx36_tgt, rx36_start[1]
    set rx36_pos, rx36_start[2]
    set rx36_curclass, rx36_start[3]
    set rx36_bstack, rx36_start[4]
    set $I19, rx36_start[5]
    store_lex unicode:"$\x{a2}", rx36_cur
    length rx36_eos, rx36_tgt
    eq $I19, 1, rx36_restart59
    gt rx36_pos, rx36_eos, rx36_fail60
    repr_get_attr_int $I11, self, rx36_curclass, "$!from"
    ne $I11, -1, rxscan37_done66
    goto rxscan37_scan65
  rxscan37_loop64:
    inc rx36_pos
    gt rx36_pos, rx36_eos, rx36_fail60
    repr_bind_attr_int rx36_cur, rx36_curclass, "$!from", rx36_pos
  rxscan37_scan65:
    nqp_rxmark rx36_bstack, rxscan37_loop64, rx36_pos, 0
  rxscan37_done66:
    add $I11, rx36_pos, 2
    gt $I11, rx36_eos, rx36_fail60
    substr $S10, rx36_tgt, rx36_pos, 2
    ne $S10, ucs4:"%r", rx36_fail60
    add rx36_pos, 2
    rx36_cur."!cursor_pass"(rx36_pos, 'backtrack'=>1)
    .return (rx36_cur)
  rx36_restart59:
    repr_get_attr_obj rx36_cstack, rx36_cur, rx36_curclass, "$!cstack"
  rx36_fail60:
    unless rx36_bstack, rx36_done58
    pop $I19, rx36_bstack
    if_null rx36_cstack, rx36_cstack_done63
    unless rx36_cstack, rx36_cstack_done63
    dec $I19
    set $P11, rx36_cstack[$I19]
  rx36_cstack_done63:
    pop rx36_rep, rx36_bstack
    pop rx36_pos, rx36_bstack
    pop $I19, rx36_bstack
    lt rx36_pos, -1, rx36_done58
    lt rx36_pos, 0, rx36_fail60
    eq $I19, 0, rx36_fail60
    nqp_islist $I20, rx36_cstack
    unless $I20, rx36_jump61
    elements $I18, rx36_bstack
    le $I18, 0, rx36_cut62
    dec $I18
    set $I18, rx36_bstack[$I18]
  rx36_cut62:
    assign rx36_cstack, $I18
  rx36_jump61:
    jump $I19
  rx36_done58:
    rx36_cur."!cursor_fail"()
    .return (rx36_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_149_1366375329.52446") :anon :lex :outer("cuid_10_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 57
    .param pmc _lex_param_0 
    .const 'Sub' $P5016 = 'cuid_9_1366375329.52446' 
    capture_lex $P5016 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_6 
.annotate 'line', 58
    find_lex $P5001, "$pir"
    find_lex $P5003, "$?PACKAGE"
    get_who $P5002, $P5003
    set fb_tmp_6, $P5002
    repr_defined $I5001, fb_tmp_6
    unless $I5001 goto if38_else67 
    set $P5004, fb_tmp_6["NQPRegex"]
    set $P5006, $P5004
    goto if38_end68
  if38_else67:
    null $P5005
    set $P5006, $P5005
  if38_end68:
    unless_null $P5006, vivi_4070
    nqp_get_sc_object $P5009, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5008, $P5009
    set $P5007, $P5008["NQPRegex"]
    unless_null $P5007, vivi_3969
    nqp_get_sc_object $P5010, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5007, $P5010
  vivi_3969:
    set $P5006, $P5007
  vivi_4070:
    .const 'Sub' $P5011 = 'cuid_9_1366375329.52446' 
    capture_lex $P5011
    $P5012 = $P5006."new"($P5011)
    $P5013 = "&subst"($P5001, $P5012, _lex_param_0, 1 :named("global"))
    store_lex "$pir", $P5013
    find_lex $P5014, "$i"
    set $N5002, $P5014
    set $N5003, 1
    add $N5001, $N5002, $N5003
    box $P5015, $N5001
    store_lex "$i", $P5015
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_9_1366375329.52446") :anon :lex :outer("cuid_149_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 58
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx41_start
    .local string rx41_tgt
    .local int rx41_pos
    .local int rx41_off
    .local int rx41_eos
    .local int rx41_rep
    .local pmc rx41_cur
    .local pmc rx41_curclass
    .local pmc rx41_bstack
    .local pmc rx41_cstack
    rx41_start = self."!cursor_start_all"()
    set rx41_cur, rx41_start[0]
    set rx41_tgt, rx41_start[1]
    set rx41_pos, rx41_start[2]
    set rx41_curclass, rx41_start[3]
    set rx41_bstack, rx41_start[4]
    set $I19, rx41_start[5]
    store_lex unicode:"$\x{a2}", rx41_cur
    length rx41_eos, rx41_tgt
    eq $I19, 1, rx41_restart73
    gt rx41_pos, rx41_eos, rx41_fail74
    repr_get_attr_int $I11, self, rx41_curclass, "$!from"
    ne $I11, -1, rxscan42_done80
    goto rxscan42_scan79
  rxscan42_loop78:
    inc rx41_pos
    gt rx41_pos, rx41_eos, rx41_fail74
    repr_bind_attr_int rx41_cur, rx41_curclass, "$!from", rx41_pos
  rxscan42_scan79:
    nqp_rxmark rx41_bstack, rxscan42_loop78, rx41_pos, 0
  rxscan42_done80:
    add $I11, rx41_pos, 1
    gt $I11, rx41_eos, rx41_fail74
    substr $S10, rx41_tgt, rx41_pos, 1
    ne $S10, ucs4:"%", rx41_fail74
    add rx41_pos, 1
    find_lex $P5001, "$i"
    repr_bind_attr_int rx41_cur, rx41_curclass, "$!pos", rx41_pos
    $P11 = rx41_cur."!INTERPOLATE"($P5001, 0)
    repr_get_attr_int $I11, $P11, rx41_curclass, "$!pos"
    lt $I11, 0, rx41_fail74
    goto rxsubrule43_pass81
  rxsubrule43_back82:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx41_curclass, "$!pos"
    lt $I11, 0, rx41_fail74
  rxsubrule43_pass81:
    rx41_cstack = rx41_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule43_back82
    push rx41_bstack, $I11
    push rx41_bstack, 0
    push rx41_bstack, rx41_pos
    elements $I11, rx41_cstack
    push rx41_bstack, $I11
    repr_get_attr_int rx41_pos, $P11, rx41_curclass, "$!pos"
    rx41_cur."!cursor_pass"(rx41_pos, 'backtrack'=>1)
    .return (rx41_cur)
  rx41_restart73:
    repr_get_attr_obj rx41_cstack, rx41_cur, rx41_curclass, "$!cstack"
  rx41_fail74:
    unless rx41_bstack, rx41_done72
    pop $I19, rx41_bstack
    if_null rx41_cstack, rx41_cstack_done77
    unless rx41_cstack, rx41_cstack_done77
    dec $I19
    set $P11, rx41_cstack[$I19]
  rx41_cstack_done77:
    pop rx41_rep, rx41_bstack
    pop rx41_pos, rx41_bstack
    pop $I19, rx41_bstack
    lt rx41_pos, -1, rx41_done72
    lt rx41_pos, 0, rx41_fail74
    eq $I19, 0, rx41_fail74
    nqp_islist $I20, rx41_cstack
    unless $I20, rx41_jump75
    elements $I18, rx41_bstack
    le $I18, 0, rx41_cut76
    dec $I18
    set $I18, rx41_bstack[$I18]
  rx41_cut76:
    assign rx41_cstack, $I18
  rx41_jump75:
    jump $I19
  rx41_done72:
    rx41_cur."!cursor_fail"()
    .return (rx41_cur) 
.end
.HLL "nqp"
.namespace []
.sub "children_pir" :subid("cuid_11_1366375329.52446") :anon :lex :outer("cuid_147_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 64
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5007 = 'cuid_151_1366375329.52446' 
    capture_lex $P5007 
    .lex "@parts", $P101 
    .lex "self", _lex_param_0 
    .lex "@children", _lex_param_1 
    new $P5001, 'QRPA'
    set $P101, $P5001
    set $P5002, _lex_param_1
    iter $P5004, _lex_param_1
  for_next131:
    unless $P5004, for_done133
    shift $P5006, $P5004
  for_redo132:
    .const 'Sub' $P5005 = 'cuid_151_1366375329.52446' 
    capture_lex $P5005
    $P5002 = $P5005($P5006)
    goto for_next131
  for_done133:
    join $S5001, "\n", $P101
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_151_1366375329.52446") :anon :lex :outer("cuid_11_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 66
    .param pmc _lex_param_0 
    .const 'Sub' $P5029 = 'cuid_150_1366375329.52446' 
    capture_lex $P5029 
    .const 'Sub' $P5029 = 'cuid_152_1366375329.52446' 
    capture_lex $P5029 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_11 
    .local pmc pkg_lookup_tmp_2 
    .local pmc fb_tmp_12 
    .local pmc pkg_viv_tmp_1 
    nqp_islist $I5001, _lex_param_0
    unless $I5001 goto if44_else86 
    .const 'Sub' $P5001 = 'cuid_150_1366375329.52446' 
    capture_lex $P5001
    $P5002 = $P5001()
    set $P5028, $P5002
    goto if44_end87
  if44_else86:
    nqp_get_sc_object $P5004, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    set pkg_lookup_tmp_2, $P5004
    get_who $P5005, pkg_lookup_tmp_2
    exists $I5004, $P5005["PIRT"]
    unless $I5004 goto if61_else119 
    get_who $P5007, pkg_lookup_tmp_2
    set $P5006, $P5007["PIRT"]
    set $P5009, $P5006
    goto if61_end120
  if61_else119:
    nqp_get_sc_object $P5008, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5009, $P5008
  if61_end120:
    get_who $P5003, $P5009
    set fb_tmp_11, $P5003
    repr_defined $I5003, fb_tmp_11
    unless $I5003 goto if60_else117 
    set $P5010, fb_tmp_11["Sub"]
    set $P5012, $P5010
    goto if60_end118
  if60_else117:
    null $P5011
    set $P5012, $P5011
  if60_end118:
    unless_null $P5012, vivi_62121
    nqp_get_sc_object $P5013, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5012, $P5013
  vivi_62121:
    type_check $I5002, _lex_param_0, $P5012
    unless $I5002 goto if59_else115 
.annotate 'line', 99
    find_dynamic_lex $P5014, "@*PIRT_BLOCKS"
    unless_null $P5014, fallback122
    nqp_get_sc_object $P5016, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5015, $P5016
    set pkg_viv_tmp_1, $P5015
    set fb_tmp_12, pkg_viv_tmp_1
    repr_defined $I5005, fb_tmp_12
    unless $I5005 goto if63_else123 
    set $P5017, fb_tmp_12["@PIRT_BLOCKS"]
    set $P5019, $P5017
    goto if63_end124
  if63_else123:
    null $P5018
    set $P5019, $P5018
  if63_end124:
    unless_null $P5019, vivi_64125
    new $P5020, 'QRPA'
    set pkg_viv_tmp_1["@PIRT_BLOCKS"], $P5020
    set $P5019, $P5020
  vivi_64125:
    unless_null $P5019, vivi_65126
    die "Contextual @*PIRT_BLOCKS not found"
    box $P5021, "Contextual @*PIRT_BLOCKS not found"
    set $P5019, $P5021
  vivi_65126:
    set $P5014, $P5019
  fallback122:
    push $P5014, _lex_param_0
    set $P5027, $P5014
    goto if59_end116
  if59_else115:
    nqp_get_sc_object $P5022, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 6
    type_check $I5006, _lex_param_0, $P5022
    unless $I5006 goto if66_else127 
    .const 'Sub' $P5023 = 'cuid_152_1366375329.52446' 
    capture_lex $P5023
    $P5024 = $P5023()
    set $P5026, $P5024
    goto if66_end128
  if66_else127:
.annotate 'line', 106
    box $P5025, "Unexpected object in PIRT tree"
    die $P5025
    set $P5026, $P5025
  if66_end128:
    set $P5027, $P5026
  if59_end116:
    set $P5028, $P5027
  if44_end87:
    .return ($P5028) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_150_1366375329.52446") :anon :lex :outer("cuid_151_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 67
    .lex "$op_name", $P101 
    .lex "@op_args", $P102 
    .lex "$i", $P103 
    .lex "$c", $P104 
    .lex "$arg", $P105 
    .lex "$*HAS_RESULT", $P106 
    .lex "$result", $P107 
    .local pmc fb_tmp_7 
    .local pmc fb_tmp_8 
    .local pmc fb_tmp_9 
    .local pmc fb_tmp_10 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    new $P5002, 'QRPA'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P105, $P5005
    nqp_get_sc_object $P5006, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P106, $P5006
    nqp_get_sc_object $P5007, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P107, $P5007
    find_lex $P5008, "$_"
    set fb_tmp_7, $P5008
    repr_defined $I5001, fb_tmp_7
    unless $I5001 goto if45_else88 
    set $P5009, fb_tmp_7[0]
    set $P5011, $P5009
    goto if45_end89
  if45_else88:
    null $P5010
    set $P5011, $P5010
  if45_end89:
    unless_null $P5011, vivi_4690
    nqp_get_sc_object $P5012, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5011, $P5012
  vivi_4690:
    set $P101, $P5011
    box $P5013, 1
    set $P103, $P5013
    find_lex $P5014, "$_"
    elements $I5002, $P5014
    box $P5015, $I5002
    set $P104, $P5015
    box $P5016, 0
    set $P106, $P5016
  while47_test91:
    set $N5001, $P103
    set $N5002, $P104
    islt $I5003, $N5001, $N5002
    box $P5030, $I5003
    set $P5029, $P5030
    unless $I5003 goto while47_done95 
  while47_redo93:
.annotate 'line', 75
    find_lex $P5017, "$_"
    set fb_tmp_8, $P5017
    repr_defined $I5004, fb_tmp_8
    unless $I5004 goto if48_else96 
    set $I5005, $P103
    set $P5018, fb_tmp_8[$I5005]
    set $P5020, $P5018
    goto if48_end97
  if48_else96:
    null $P5019
    set $P5020, $P5019
  if48_end97:
    unless_null $P5020, vivi_4998
    nqp_get_sc_object $P5021, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5020, $P5021
  vivi_4998:
    set $P105, $P5020
    nqp_get_sc_object $P5022, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 6
    type_check $I5006, $P105, $P5022
    unless $I5006 goto if50_else99 
.annotate 'line', 77
.annotate 'line', 78
    $P5023 = $P105."result"()
    push $P102, $P5023
    goto if50_end100
  if50_else99:
    nqp_get_sc_object $P5024, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 3
    type_check $I5007, $P105, $P5024
    unless $I5007 goto if51_else101 
.annotate 'line', 80
.annotate 'line', 81
    $P5025 = $P105."result"()
    set $P107, $P5025
    box $P5026, 1
    set $P106, $P5026
    set $P5027, $P106
    goto if51_end102
  if51_else101:
.annotate 'line', 84
    push $P102, $P105
    set $P5027, $P102
  if51_end102:
  if50_end100:
    set $N5004, $P103
    set $N5005, 1
    add $N5003, $N5004, $N5005
    box $P5028, $N5003
    set $P103, $P5028
    set $P5029, $P103
    goto while47_test91 
  while47_done95:
    unless_null $P106, fallback105
    nqp_get_sc_object $P5032, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5031, $P5032
    set fb_tmp_9, $P5031
    repr_defined $I5008, fb_tmp_9
    unless $I5008 goto if53_else106 
    set $P5033, fb_tmp_9["$HAS_RESULT"]
    set $P5035, $P5033
    goto if53_end107
  if53_else106:
    null $P5034
    set $P5035, $P5034
  if53_end107:
    unless_null $P5035, vivi_54108
    nqp_get_sc_object $P5036, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5035, $P5036
  vivi_54108:
    unless_null $P5035, vivi_55109
    die "Contextual $*HAS_RESULT not found"
    box $P5037, "Contextual $*HAS_RESULT not found"
    set $P5035, $P5037
  vivi_55109:
    set $P106, $P5035
  fallback105:
    unless $P106 goto if52_end104 
.annotate 'line', 89
    unshift $P102, $P107
  if52_end104:
    find_lex $P5038, "%op_compilers"
    set $S5001, $P101
    exists $I5009, $P5038[$S5001]
    unless $I5009 goto if56_else110 
.annotate 'line', 92
    find_lex $P5039, "@parts"
.annotate 'line', 93
    find_lex $P5040, "%op_compilers"
    set fb_tmp_10, $P5040
    repr_defined $I5010, fb_tmp_10
    unless $I5010 goto if57_else112 
    set $S5002, $P101
    set $P5041, fb_tmp_10[$S5002]
    set $P5043, $P5041
    goto if57_end113
  if57_else112:
    null $P5042
    set $P5043, $P5042
  if57_end113:
    unless_null $P5043, vivi_58114
    nqp_get_sc_object $P5044, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5043, $P5044
  vivi_58114:
    $P5045 = $P5043($P102)
    push $P5039, $P5045
    set $P5048, $P5039
    goto if56_end111
  if56_else110:
.annotate 'line', 95
    find_lex $P5046, "@parts"
    set $S5006, $P101
    concat $S5005, "    ", $S5006
    concat $S5004, $S5005, " "
    join $S5007, ", ", $P102
    concat $S5003, $S5004, $S5007
    box $P5047, $S5003
    push $P5046, $P5047
    set $P5048, $P5046
  if56_end111:
    .return ($P5048) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_152_1366375329.52446") :anon :lex :outer("cuid_151_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 102
    .lex "$pir", $P101 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 103
    find_lex $P5002, "$_"
    $P5003 = $P5002."pir"()
    set $P101, $P5003
    set $S5001, $P101
    iseq $I5001, $S5001, ""
    box $P5006, $I5001
    set $P5005, $P5006
    if $I5001 goto unless67_end130 
    find_lex $P5004, "@parts"
    push $P5004, $P101
    set $P5005, $P5004
  unless67_end130:
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_153_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 114
    .const 'Sub' $P5015 = 'cuid_12_1366375329.52446' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_13_1366375329.52446' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_14_1366375329.52446' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_15_1366375329.52446' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_16_1366375329.52446' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_17_1366375329.52446' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_18_1366375329.52446' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_19_1366375329.52446' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_20_1366375329.52446' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_21_1366375329.52446' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_22_1366375329.52446' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_23_1366375329.52446' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_24_1366375329.52446' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_25_1366375329.52446' 
    capture_lex $P5015 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .const 'Sub' $P5001 = 'cuid_12_1366375329.52446' 
    capture_lex $P5001
    .const 'Sub' $P5002 = 'cuid_13_1366375329.52446' 
    capture_lex $P5002
    .const 'Sub' $P5003 = 'cuid_14_1366375329.52446' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_15_1366375329.52446' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_16_1366375329.52446' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_17_1366375329.52446' 
    capture_lex $P5006
    .const 'Sub' $P5007 = 'cuid_18_1366375329.52446' 
    capture_lex $P5007
    .const 'Sub' $P5008 = 'cuid_19_1366375329.52446' 
    capture_lex $P5008
    .const 'Sub' $P5009 = 'cuid_20_1366375329.52446' 
    capture_lex $P5009
    .const 'Sub' $P5010 = 'cuid_21_1366375329.52446' 
    capture_lex $P5010
    .const 'Sub' $P5011 = 'cuid_22_1366375329.52446' 
    capture_lex $P5011
    .const 'Sub' $P5012 = 'cuid_23_1366375329.52446' 
    capture_lex $P5012
    .const 'Sub' $P5013 = 'cuid_24_1366375329.52446' 
    capture_lex $P5013
    .const 'Sub' $P5014 = 'cuid_25_1366375329.52446' 
    capture_lex $P5014
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "escape" :subid("cuid_12_1366375329.52446") :anon :lex :outer("cuid_153_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 126
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$esc", $P101 
    .lex "self", _lex_param_0 
    .lex "$str", _lex_param_1 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    set $S5002, _lex_param_1
    escape $S5001, $S5002
    box $P5002, $S5001
    set $P101, $P5002
    set $S5003, $P101
    index $I5002, $S5003, utf8:"\\x", 0
    set $N5001, $I5002
    set $N5002, 0
    isge $I5001, $N5001, $N5002
    unless $I5001 goto if68_else134 
    set $S5006, $P101
    concat $S5005, "utf8:\"", $S5006
    concat $S5004, $S5005, "\""
    set $S5015, $S5004
    goto if68_end135
  if68_else134:
    set $S5007, $P101
    index $I5004, $S5007, unicode:"\\u", 0
    set $N5003, $I5004
    set $N5004, 0
    isge $I5003, $N5003, $N5004
    unless $I5003 goto if69_else136 
    set $S5010, $P101
    concat $S5009, "unicode:\"", $S5010
    concat $S5008, $S5009, "\""
    set $S5014, $S5008
    goto if69_end137
  if69_else136:
    set $S5013, $P101
    concat $S5012, "\"", $S5013
    concat $S5011, $S5012, "\""
    set $S5014, $S5011
  if69_end137:
    set $S5015, $S5014
  if68_end135:
    .return ($S5015) 
.end
.HLL "nqp"
.namespace []
.sub "new" :subid("cuid_13_1366375329.52446") :anon :lex :outer("cuid_153_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 135
    .param pmc _lex_param_0 
    .lex "$obj", $P101 
    .lex "self", _lex_param_0 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_decontainerize $P5003, _lex_param_0
    repr_instance_of $P5002, $P5003
    set $P101, $P5002
    nqp_get_sc_object $P5004, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 16
    new $P5005, 'QRPA'
    setattribute $P101, $P5004, "@!children", $P5005
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "push" :subid("cuid_14_1366375329.52446") :anon :lex :outer("cuid_153_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 141
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 16
    repr_get_attr_obj $P5003, $P5001, $P5002, "@!children"
    push $P5003, _lex_param_1
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "push_pirop" :subid("cuid_15_1366375329.52446") :anon :lex :outer("cuid_153_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 145
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :slurpy 
    .param pmc _lex_param_2 :named("result") :optional 
    .param int haz_param_2 :opt_flag 
    .lex "self", _lex_param_0 
    .lex "@opbits", _lex_param_1 
    .lex "$result", _lex_param_2 
    if haz_param_2, default140
    nqp_get_sc_object $P5006, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set _lex_param_2, $P5006
  default140:
    unless _lex_param_2 goto if70_end139 
.annotate 'line', 146
.annotate 'line', 147
    nqp_get_sc_object $P5001, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 3
    $P5002 = $P5001."new"(_lex_param_2)
    push _lex_param_1, $P5002
  if70_end139:
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 16
    repr_get_attr_obj $P5005, $P5003, $P5004, "@!children"
    push $P5005, _lex_param_1
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "subid" :subid("cuid_16_1366375329.52446") :anon :lex :outer("cuid_153_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 152
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :slurpy 
    .lex "self", _lex_param_0 
    .lex "@value", _lex_param_1 
    .local pmc fb_tmp_13 
    unless _lex_param_1 goto if71_else141 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 16
    set fb_tmp_13, _lex_param_1
    repr_defined $I5001, fb_tmp_13
    unless $I5001 goto if72_else143 
    set $P5003, fb_tmp_13[0]
    set $P5005, $P5003
    goto if72_end144
  if72_else143:
    null $P5004
    set $P5005, $P5004
  if72_end144:
    unless_null $P5005, vivi_73145
    nqp_get_sc_object $P5006, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5005, $P5006
  vivi_73145:
    set $S5001, $P5005
    repr_bind_attr_str $P5001, $P5002, "$!subid", $S5001
    set $S5003, $S5001
    goto if71_end142
  if71_else141:
    nqp_decontainerize $P5007, _lex_param_0
    nqp_get_sc_object $P5008, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 16
    repr_get_attr_str $S5002, $P5007, $P5008, "$!subid"
    set $S5003, $S5002
  if71_end142:
    .return ($S5003) 
.end
.HLL "nqp"
.namespace []
.sub "pirflags" :subid("cuid_17_1366375329.52446") :anon :lex :outer("cuid_153_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 156
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :slurpy 
    .lex "self", _lex_param_0 
    .lex "@value", _lex_param_1 
    .local pmc fb_tmp_14 
    unless _lex_param_1 goto if74_else146 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 16
    set fb_tmp_14, _lex_param_1
    repr_defined $I5001, fb_tmp_14
    unless $I5001 goto if75_else148 
    set $P5003, fb_tmp_14[0]
    set $P5005, $P5003
    goto if75_end149
  if75_else148:
    null $P5004
    set $P5005, $P5004
  if75_end149:
    unless_null $P5005, vivi_76150
    nqp_get_sc_object $P5006, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5005, $P5006
  vivi_76150:
    set $S5001, $P5005
    repr_bind_attr_str $P5001, $P5002, "$!pirflags", $S5001
    set $S5003, $S5001
    goto if74_end147
  if74_else146:
    nqp_decontainerize $P5007, _lex_param_0
    nqp_get_sc_object $P5008, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 16
    repr_get_attr_str $S5002, $P5007, $P5008, "$!pirflags"
    set $S5003, $S5002
  if74_end147:
    .return ($S5003) 
.end
.HLL "nqp"
.namespace []
.sub "name" :subid("cuid_18_1366375329.52446") :anon :lex :outer("cuid_153_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 160
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :slurpy 
    .lex "self", _lex_param_0 
    .lex "@value", _lex_param_1 
    .local pmc fb_tmp_15 
    unless _lex_param_1 goto if77_else151 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 16
    set fb_tmp_15, _lex_param_1
    repr_defined $I5001, fb_tmp_15
    unless $I5001 goto if78_else153 
    set $P5003, fb_tmp_15[0]
    set $P5005, $P5003
    goto if78_end154
  if78_else153:
    null $P5004
    set $P5005, $P5004
  if78_end154:
    unless_null $P5005, vivi_79155
    nqp_get_sc_object $P5006, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5005, $P5006
  vivi_79155:
    set $S5001, $P5005
    repr_bind_attr_str $P5001, $P5002, "$!name", $S5001
    set $S5003, $S5001
    goto if77_end152
  if77_else151:
    nqp_decontainerize $P5007, _lex_param_0
    nqp_get_sc_object $P5008, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 16
    repr_get_attr_str $S5002, $P5007, $P5008, "$!name"
    set $S5003, $S5002
  if77_end152:
    .return ($S5003) 
.end
.HLL "nqp"
.namespace []
.sub "loadlibs" :subid("cuid_19_1366375329.52446") :anon :lex :outer("cuid_153_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 164
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :optional 
    .param int haz_param_3 :opt_flag 
    .lex "self", _lex_param_0 
    .lex "@libs", _lex_param_1 
    if haz_param_3, default158
    new $P5007, 'QRPA'
    set _lex_param_1, $P5007
  default158:
    unless _lex_param_1 goto if80_else156 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 16
    repr_bind_attr_obj $P5001, $P5002, "@!loadlibs", _lex_param_1
    set $P5006, _lex_param_1
    goto if80_end157
  if80_else156:
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 16
    repr_get_attr_obj $P5005, $P5003, $P5004, "@!loadlibs"
    set $P5006, $P5005
  if80_end157:
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "hll" :subid("cuid_20_1366375329.52446") :anon :lex :outer("cuid_153_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 168
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :slurpy 
    .lex "self", _lex_param_0 
    .lex "@value", _lex_param_1 
    .local pmc fb_tmp_16 
    unless _lex_param_1 goto if81_else159 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 16
    set fb_tmp_16, _lex_param_1
    repr_defined $I5001, fb_tmp_16
    unless $I5001 goto if82_else161 
    set $P5003, fb_tmp_16[0]
    set $P5005, $P5003
    goto if82_end162
  if82_else161:
    null $P5004
    set $P5005, $P5004
  if82_end162:
    unless_null $P5005, vivi_83163
    nqp_get_sc_object $P5006, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5005, $P5006
  vivi_83163:
    set $S5001, $P5005
    repr_bind_attr_str $P5001, $P5002, "$!hll", $S5001
    set $S5003, $S5001
    goto if81_end160
  if81_else159:
    nqp_decontainerize $P5007, _lex_param_0
    nqp_get_sc_object $P5008, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 16
    repr_get_attr_str $S5002, $P5007, $P5008, "$!hll"
    set $S5003, $S5002
  if81_end160:
    .return ($S5003) 
.end
.HLL "nqp"
.namespace []
.sub "namespace" :subid("cuid_21_1366375329.52446") :anon :lex :outer("cuid_153_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 172
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :optional 
    .param int haz_param_4 :opt_flag 
    .lex "self", _lex_param_0 
    .lex "@namespace", _lex_param_1 
    if haz_param_4, default166
    new $P5007, 'QRPA'
    set _lex_param_1, $P5007
  default166:
    unless _lex_param_1 goto if84_else164 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 16
    repr_bind_attr_obj $P5001, $P5002, "@!namespace", _lex_param_1
    set $P5006, _lex_param_1
    goto if84_end165
  if84_else164:
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 16
    repr_get_attr_obj $P5005, $P5003, $P5004, "@!namespace"
    set $P5006, $P5005
  if84_end165:
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "result" :subid("cuid_22_1366375329.52446") :anon :lex :outer("cuid_153_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 176
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    .return ("") 
.end
.HLL "nqp"
.namespace []
.sub "close_sub" :subid("cuid_23_1366375329.52446") :anon :lex :outer("cuid_153_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 180
    .param pmc _lex_param_0 
    .const 'Sub' $P5080 = 'cuid_154_1366375329.52446' 
    capture_lex $P5080 
    .const 'Sub' $P5080 = 'cuid_156_1366375329.52446' 
    capture_lex $P5080 
    .lex "@parts", $P101 
    .lex "$sub_decl", $P102 
    .lex "$file", $P103 
    .lex "@*PIRT_BLOCKS", $P104 
    .lex "$*SUB_LINE", $P105 
    .lex "self", _lex_param_0 
    .local pmc fb_tmp_17 
    .local pmc pkg_viv_tmp_2 
    .local pmc fb_tmp_18 
    .local pmc pkg_viv_tmp_3 
    new $P5001, 'QRPA'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
    new $P5004, 'QRPA'
    set $P104, $P5004
    nqp_get_sc_object $P5005, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P105, $P5005
    nqp_decontainerize $P5006, _lex_param_0
    nqp_get_sc_object $P5007, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 16
    repr_get_attr_obj $P5008, $P5006, $P5007, "@!loadlibs"
    isnull $I5001, $P5008
    if $I5001 goto unless85_end168 
.annotate 'line', 184
    nqp_decontainerize $P5012, _lex_param_0
    nqp_get_sc_object $P5013, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 16
    repr_get_attr_obj $P5014, $P5012, $P5013, "@!loadlibs"
    set $P5009, $P5014
    iter $P5011, $P5014
  for_next169:
    unless $P5011, for_done171
    shift $P5016, $P5011
  for_redo170:
    .const 'Sub' $P5015 = 'cuid_154_1366375329.52446' 
    capture_lex $P5015
    $P5009 = $P5015($P5016)
    goto for_next169
  for_done171:
  unless85_end168:
    nqp_decontainerize $P5017, _lex_param_0
    nqp_get_sc_object $P5018, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 16
    repr_get_attr_str $S5001, $P5017, $P5018, "$!hll"
    unless_null $S5001, vivi_87174
    set $S5002, ""
    set $S5001, $S5002
  vivi_87174:
    unless $S5001 goto if86_end173 
.annotate 'line', 189
.annotate 'line', 190
    nqp_decontainerize $P5019, _lex_param_0
    nqp_decontainerize $P5020, _lex_param_0
    nqp_get_sc_object $P5021, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 16
    repr_get_attr_str $S5004, $P5020, $P5021, "$!hll"
    $P5022 = $P5019."escape"($S5004)
    set $S5005, $P5022
    concat $S5003, ".HLL ", $S5005
    box $P5023, $S5003
    push $P101, $P5023
  if86_end173:
    nqp_decontainerize $P5024, _lex_param_0
    nqp_get_sc_object $P5025, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 16
    repr_get_attr_obj $P5026, $P5024, $P5025, "@!namespace"
    isnull $I5002, $P5026
    unless $I5002 goto if88_else175 
.annotate 'line', 192
    box $P5027, ".namespace []"
    push $P101, $P5027
    goto if88_end176
  if88_else175:
    .const 'Sub' $P5028 = 'cuid_156_1366375329.52446' 
    capture_lex $P5028
    $P5029 = $P5028()
  if88_end176:
.annotate 'line', 202
    nqp_decontainerize $P5030, _lex_param_0
    nqp_decontainerize $P5031, _lex_param_0
    nqp_get_sc_object $P5032, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 16
    repr_get_attr_str $S5007, $P5031, $P5032, "$!name"
    set $S5008, $S5007
    if $S5007 goto unless89_end181 
    set $S5008, ""
  unless89_end181:
    $P5033 = $P5030."escape"($S5008)
    set $S5009, $P5033
    concat $S5006, ".sub ", $S5009
    box $P5034, $S5006
    set $P102, $P5034
    nqp_decontainerize $P5035, _lex_param_0
    nqp_get_sc_object $P5036, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 16
    repr_get_attr_str $S5010, $P5035, $P5036, "$!subid"
    unless_null $S5010, vivi_91184
    set $S5011, ""
    set $S5010, $S5011
  vivi_91184:
    unless $S5010 goto if90_end183 
.annotate 'line', 203
    set $S5015, $P102
    concat $S5014, $S5015, " :subid("
.annotate 'line', 204
    nqp_decontainerize $P5037, _lex_param_0
    nqp_decontainerize $P5038, _lex_param_0
    nqp_get_sc_object $P5039, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 16
    repr_get_attr_str $S5016, $P5038, $P5039, "$!subid"
    $P5040 = $P5037."escape"($S5016)
    set $S5017, $P5040
    concat $S5013, $S5014, $S5017
    concat $S5012, $S5013, ")"
    box $P5041, $S5012
    set $P102, $P5041
  if90_end183:
    nqp_decontainerize $P5042, _lex_param_0
    nqp_get_sc_object $P5043, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 16
    repr_get_attr_str $S5018, $P5042, $P5043, "$!pirflags"
    unless_null $S5018, vivi_93187
    set $S5019, ""
    set $S5018, $S5019
  vivi_93187:
    unless $S5018 goto if92_end186 
.annotate 'line', 206
    set $S5022, $P102
    concat $S5021, $S5022, " "
    nqp_decontainerize $P5044, _lex_param_0
    nqp_get_sc_object $P5045, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 16
    repr_get_attr_str $S5023, $P5044, $P5045, "$!pirflags"
    concat $S5020, $S5021, $S5023
    box $P5046, $S5020
    set $P102, $P5046
  if92_end186:
    push $P101, $P102
    find_dynamic_lex $P5047, "$?FILES"
    set $P103, $P5047
    unless_null $P103, vivi_95190
    box $P5048, ""
    set $P103, $P5048
  vivi_95190:
    unless $P103 goto if94_end189 
.annotate 'line', 213
.annotate 'line', 214
    nqp_decontainerize $P5049, _lex_param_0
    $P5050 = $P5049."escape"($P103)
    set $S5025, $P5050
    concat $S5024, ".annotate 'file', ", $S5025
    box $P5051, $S5024
    push $P101, $P5051
  if94_end189:
    box $P5059, -1
    set $P105, $P5059
.annotate 'line', 220
    nqp_decontainerize $P5060, _lex_param_0
    nqp_decontainerize $P5061, _lex_param_0
    nqp_get_sc_object $P5062, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 16
    repr_get_attr_obj $P5063, $P5061, $P5062, "@!children"
    $P5064 = $P5060."children_pir"($P5063)
    push $P101, $P5064
    box $P5065, ".end"
    push $P101, $P5065
    nqp_decontainerize $P5066, _lex_param_0
    nqp_get_sc_object $P5067, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 16
    join $S5026, "\n", $P101
    repr_bind_attr_str $P5066, $P5067, "$!cached_pir", $S5026
    nqp_decontainerize $P5068, _lex_param_0
    nqp_get_sc_object $P5069, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 16
    unless_null $P104, fallback196
    nqp_get_sc_object $P5071, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5070, $P5071
    set pkg_viv_tmp_3, $P5070
    set fb_tmp_18, pkg_viv_tmp_3
    repr_defined $I5004, fb_tmp_18
    unless $I5004 goto if99_else197 
    set $P5072, fb_tmp_18["@PIRT_BLOCKS"]
    set $P5074, $P5072
    goto if99_end198
  if99_else197:
    null $P5073
    set $P5074, $P5073
  if99_end198:
    unless_null $P5074, vivi_100199
    new $P5075, 'QRPA'
    set pkg_viv_tmp_3["@PIRT_BLOCKS"], $P5075
    set $P5074, $P5075
  vivi_100199:
    unless_null $P5074, vivi_101200
    die "Contextual @*PIRT_BLOCKS not found"
    box $P5076, "Contextual @*PIRT_BLOCKS not found"
    set $P5074, $P5076
  vivi_101200:
    set $P104, $P5074
  fallback196:
    repr_bind_attr_obj $P5068, $P5069, "@!nested_blocks", $P104
    nqp_decontainerize $P5077, _lex_param_0
    nqp_get_sc_object $P5078, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 16
    null $P5079
    repr_bind_attr_obj $P5077, $P5078, "@!children", $P5079
    .return ($P5079) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_154_1366375329.52446") :anon :lex :outer("cuid_23_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 185
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "@parts"
.annotate 'line', 186
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    $P5004 = $P5002."escape"(_lex_param_0)
    set $S5002, $P5004
    concat $S5001, ".loadlib ", $S5002
    box $P5005, $S5001
    push $P5001, $P5005
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_156_1366375329.52446") :anon :lex :outer("cuid_23_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 195
    .const 'Sub' $P5013 = 'cuid_155_1366375329.52446' 
    capture_lex $P5013 
    .lex "@ns", $P101 
    new $P5001, 'QRPA'
    set $P101, $P5001
    find_lex $P5006, "self"
    nqp_decontainerize $P5005, $P5006
    nqp_get_sc_object $P5007, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 16
    repr_get_attr_obj $P5008, $P5005, $P5007, "@!namespace"
    set $P5002, $P5008
    iter $P5004, $P5008
  for_next177:
    unless $P5004, for_done179
    shift $P5010, $P5004
  for_redo178:
    .const 'Sub' $P5009 = 'cuid_155_1366375329.52446' 
    capture_lex $P5009
    $P5002 = $P5009($P5010)
    goto for_next177
  for_done179:
    find_lex $P5011, "@parts"
    join $S5003, ";", $P101
    concat $S5002, ".namespace [", $S5003
    concat $S5001, $S5002, "]"
    box $P5012, $S5001
    push $P5011, $P5012
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_155_1366375329.52446") :anon :lex :outer("cuid_156_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 197
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "@ns"
.annotate 'line', 198
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    $P5004 = $P5002."escape"(_lex_param_0)
    push $P5001, $P5004
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "pir" :subid("cuid_24_1366375329.52446") :anon :lex :outer("cuid_153_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 232
    .param pmc _lex_param_0 
    .lex "@parts", $P101 
    .lex "self", _lex_param_0 
    new $P5001, 'QRPA'
    set $P101, $P5001
.annotate 'line', 234
    nqp_decontainerize $P5002, _lex_param_0
    $P5002."collect_sub_pir_into"($P101)
    join $S5001, "\n", $P101
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "collect_sub_pir_into" :subid("cuid_25_1366375329.52446") :anon :lex :outer("cuid_153_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 238
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5016 = 'cuid_157_1366375329.52446' 
    capture_lex $P5016 
    .lex "self", _lex_param_0 
    .lex "@result", _lex_param_1 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 16
    repr_get_attr_str $S5001, $P5001, $P5002, "$!cached_pir"
    if $S5001 goto unless102_end202 
.annotate 'line', 240
.annotate 'line', 241
    nqp_decontainerize $P5003, _lex_param_0
    $P5004 = $P5003."close_sub"()
  unless102_end202:
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 16
    repr_get_attr_str $S5002, $P5005, $P5006, "$!cached_pir"
    box $P5007, $S5002
    push _lex_param_1, $P5007
    nqp_decontainerize $P5011, _lex_param_0
    nqp_get_sc_object $P5012, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 16
    repr_get_attr_obj $P5013, $P5011, $P5012, "@!nested_blocks"
    set $P5008, $P5013
    iter $P5010, $P5013
  for_next203:
    unless $P5010, for_done205
    shift $P5015, $P5010
  for_redo204:
    .const 'Sub' $P5014 = 'cuid_157_1366375329.52446' 
    capture_lex $P5014
    $P5008 = $P5014($P5015)
    goto for_next203
  for_done205:
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_157_1366375329.52446") :anon :lex :outer("cuid_25_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 246
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 247
    find_lex $P5001, "@result"
    $P5002 = _lex_param_0."collect_sub_pir_into"($P5001)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_158_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 252
    .const 'Sub' $P5007 = 'cuid_26_1366375329.52446' 
    capture_lex $P5007 
    .const 'Sub' $P5007 = 'cuid_27_1366375329.52446' 
    capture_lex $P5007 
    .const 'Sub' $P5007 = 'cuid_28_1366375329.52446' 
    capture_lex $P5007 
    .const 'Sub' $P5007 = 'cuid_29_1366375329.52446' 
    capture_lex $P5007 
    .const 'Sub' $P5007 = 'cuid_30_1366375329.52446' 
    capture_lex $P5007 
    .const 'Sub' $P5007 = 'cuid_31_1366375329.52446' 
    capture_lex $P5007 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .const 'Sub' $P5001 = 'cuid_26_1366375329.52446' 
    capture_lex $P5001
    .const 'Sub' $P5002 = 'cuid_27_1366375329.52446' 
    capture_lex $P5002
    .const 'Sub' $P5003 = 'cuid_28_1366375329.52446' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_29_1366375329.52446' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_30_1366375329.52446' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_31_1366375329.52446' 
    capture_lex $P5006
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "new" :subid("cuid_26_1366375329.52446") :anon :lex :outer("cuid_158_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 257
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :named("result") :optional 
    .param int haz_param_5 :opt_flag 
    .lex "$obj", $P101 
    .lex "self", _lex_param_0 
    .lex "$result", _lex_param_1 
    if haz_param_5, default208
    box $P5010, ""
    set _lex_param_1, $P5010
  default208:
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_decontainerize $P5003, _lex_param_0
    repr_instance_of $P5002, $P5003
    set $P101, $P5002
    nqp_get_sc_object $P5004, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    new $P5005, 'QRPA'
    setattribute $P101, $P5004, "@!children", $P5005
    nqp_get_sc_object $P5006, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    nqp_get_sc_object $P5007, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 6
    type_check $I5001, _lex_param_1, $P5007
    unless $I5001 goto if103_else206 
.annotate 'line', 261
    $P5008 = _lex_param_1."result"()
    set $P5009, $P5008
    goto if103_end207
  if103_else206:
    set $P5009, _lex_param_1
  if103_end207:
    set $S5001, $P5009
    repr_bind_attr_str $P101, $P5006, "$!result", $S5001
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "push" :subid("cuid_27_1366375329.52446") :anon :lex :outer("cuid_158_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 265
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    repr_get_attr_obj $P5003, $P5001, $P5002, "@!children"
    push $P5003, _lex_param_1
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "push_pirop" :subid("cuid_28_1366375329.52446") :anon :lex :outer("cuid_158_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 269
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :slurpy 
    .param pmc _lex_param_2 :named("result") :optional 
    .param int haz_param_6 :opt_flag 
    .lex "self", _lex_param_0 
    .lex "@opbits", _lex_param_1 
    .lex "$result", _lex_param_2 
    if haz_param_6, default211
    nqp_get_sc_object $P5006, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set _lex_param_2, $P5006
  default211:
    unless _lex_param_2 goto if104_end210 
.annotate 'line', 270
.annotate 'line', 271
    nqp_get_sc_object $P5001, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 3
    $P5002 = $P5001."new"(_lex_param_2)
    push _lex_param_1, $P5002
  if104_end210:
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    repr_get_attr_obj $P5005, $P5003, $P5004, "@!children"
    push $P5005, _lex_param_1
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "result" :subid("cuid_29_1366375329.52446") :anon :lex :outer("cuid_158_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 276
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :slurpy 
    .lex "self", _lex_param_0 
    .lex "@value", _lex_param_1 
    .local pmc fb_tmp_19 
    .local pmc fb_tmp_20 
    .local pmc fb_tmp_21 
    unless _lex_param_1 goto if105_else212 
.annotate 'line', 277
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    set fb_tmp_19, _lex_param_1
    repr_defined $I5002, fb_tmp_19
    unless $I5002 goto if107_else216 
    set $P5003, fb_tmp_19[0]
    set $P5005, $P5003
    goto if107_end217
  if107_else216:
    null $P5004
    set $P5005, $P5004
  if107_end217:
    unless_null $P5005, vivi_108218
    nqp_get_sc_object $P5006, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5005, $P5006
  vivi_108218:
    nqp_get_sc_object $P5007, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 6
    type_check $I5001, $P5005, $P5007
    unless $I5001 goto if106_else214 
.annotate 'line', 278
    set fb_tmp_20, _lex_param_1
    repr_defined $I5003, fb_tmp_20
    unless $I5003 goto if109_else219 
    set $P5008, fb_tmp_20[0]
    set $P5010, $P5008
    goto if109_end220
  if109_else219:
    null $P5009
    set $P5010, $P5009
  if109_end220:
    unless_null $P5010, vivi_110221
    nqp_get_sc_object $P5011, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5010, $P5011
  vivi_110221:
    $P5012 = $P5010."result"()
    set $P5017, $P5012
    goto if106_end215
  if106_else214:
    set fb_tmp_21, _lex_param_1
    repr_defined $I5004, fb_tmp_21
    unless $I5004 goto if111_else222 
    set $P5013, fb_tmp_21[0]
    set $P5015, $P5013
    goto if111_end223
  if111_else222:
    null $P5014
    set $P5015, $P5014
  if111_end223:
    unless_null $P5015, vivi_112224
    nqp_get_sc_object $P5016, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5015, $P5016
  vivi_112224:
    set $P5017, $P5015
  if106_end215:
    set $S5001, $P5017
    repr_bind_attr_str $P5001, $P5002, "$!result", $S5001
    set $S5003, $S5001
    goto if105_end213
  if105_else212:
.annotate 'line', 280
    nqp_decontainerize $P5018, _lex_param_0
    nqp_get_sc_object $P5019, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    repr_get_attr_str $S5002, $P5018, $P5019, "$!result"
    set $S5003, $S5002
  if105_end213:
    .return ($S5003) 
.end
.HLL "nqp"
.namespace []
.sub "node" :subid("cuid_30_1366375329.52446") :anon :lex :outer("cuid_158_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 285
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :slurpy 
    .lex "self", _lex_param_0 
    .lex "@value", _lex_param_1 
    .local pmc fb_tmp_22 
    unless _lex_param_1 goto if113_else225 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    set fb_tmp_22, _lex_param_1
    repr_defined $I5001, fb_tmp_22
    unless $I5001 goto if114_else227 
    set $P5003, fb_tmp_22[0]
    set $P5005, $P5003
    goto if114_end228
  if114_else227:
    null $P5004
    set $P5005, $P5004
  if114_end228:
    unless_null $P5005, vivi_115229
    nqp_get_sc_object $P5006, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5005, $P5006
  vivi_115229:
    repr_bind_attr_obj $P5001, $P5002, "$!node", $P5005
    set $P5010, $P5005
    goto if113_end226
  if113_else225:
    nqp_decontainerize $P5007, _lex_param_0
    nqp_get_sc_object $P5008, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    repr_get_attr_obj $P5009, $P5007, $P5008, "$!node"
    set $P5010, $P5009
  if113_end226:
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "pir" :subid("cuid_31_1366375329.52446") :anon :lex :outer("cuid_158_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 289
    .param pmc _lex_param_0 
    .const 'Sub' $P5013 = 'cuid_159_1366375329.52446' 
    capture_lex $P5013 
    .lex "$ann", $P101 
    .lex "self", _lex_param_0 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    box $P5002, ""
    set $P101, $P5002
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    repr_get_attr_obj $P5005, $P5003, $P5004, "$!node"
    unless $P5005 goto if116_end231 
    .const 'Sub' $P5006 = 'cuid_159_1366375329.52446' 
    capture_lex $P5006
    $P5007 = $P5006()
  if116_end231:
    set $S5002, $P101
.annotate 'line', 298
    nqp_decontainerize $P5008, _lex_param_0
    nqp_decontainerize $P5009, _lex_param_0
    nqp_get_sc_object $P5010, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    repr_get_attr_obj $P5011, $P5009, $P5010, "@!children"
    $P5012 = $P5008."children_pir"($P5011)
    set $S5003, $P5012
    concat $S5001, $S5002, $S5003
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_159_1366375329.52446") :anon :lex :outer("cuid_31_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 291
    .lex "$line", $P101 
    .local pmc fb_tmp_23 
    .local pmc pkg_lookup_tmp_3 
    .local pmc fb_tmp_24 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 292
    nqp_get_sc_object $P5003, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    set pkg_lookup_tmp_3, $P5003
    get_who $P5004, pkg_lookup_tmp_3
    exists $I5002, $P5004["HLL"]
    unless $I5002 goto if118_else234 
    get_who $P5006, pkg_lookup_tmp_3
    set $P5005, $P5006["HLL"]
    set $P5008, $P5005
    goto if118_end235
  if118_else234:
    nqp_get_sc_object $P5007, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5008, $P5007
  if118_end235:
    get_who $P5002, $P5008
    set fb_tmp_23, $P5002
    repr_defined $I5001, fb_tmp_23
    unless $I5001 goto if117_else232 
    set $P5009, fb_tmp_23["Compiler"]
    set $P5011, $P5009
    goto if117_end233
  if117_else232:
    null $P5010
    set $P5011, $P5010
  if117_end233:
    unless_null $P5011, vivi_119236
    nqp_get_sc_object $P5012, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5011, $P5012
  vivi_119236:
    find_lex $P5014, "self"
    nqp_decontainerize $P5013, $P5014
    nqp_get_sc_object $P5015, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    repr_get_attr_obj $P5016, $P5013, $P5015, "$!node"
    $P5017 = $P5016."orig"()
    find_lex $P5019, "self"
    nqp_decontainerize $P5018, $P5019
    nqp_get_sc_object $P5020, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    repr_get_attr_obj $P5021, $P5018, $P5020, "$!node"
    $P5022 = $P5021."from"()
    $P5023 = $P5011."lineof"($P5017, $P5022, 1 :named("cache"))
    set $P101, $P5023
    set $N5001, $P101
    find_dynamic_lex $P5024, "$*SUB_LINE"
    unless_null $P5024, fallback239
    nqp_get_sc_object $P5026, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5025, $P5026
    set fb_tmp_24, $P5025
    repr_defined $I5004, fb_tmp_24
    unless $I5004 goto if121_else240 
    set $P5027, fb_tmp_24["$SUB_LINE"]
    set $P5029, $P5027
    goto if121_end241
  if121_else240:
    null $P5028
    set $P5029, $P5028
  if121_end241:
    unless_null $P5029, vivi_122242
    nqp_get_sc_object $P5030, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5029, $P5030
  vivi_122242:
    unless_null $P5029, vivi_123243
    die "Contextual $*SUB_LINE not found"
    box $P5031, "Contextual $*SUB_LINE not found"
    set $P5029, $P5031
  vivi_123243:
    set $P5024, $P5029
  fallback239:
    set $N5002, $P5024
    isne $I5003, $N5001, $N5002
    box $P5034, $I5003
    set $P5033, $P5034
    unless $I5003 goto if120_end238 
.annotate 'line', 293
    set $S5003, $P101
    concat $S5002, ".annotate 'line', ", $S5003
    concat $S5001, $S5002, "\n"
    box $P5032, $S5001
    store_lex "$ann", $P5032
    store_dynamic_lex "$*SUB_LINE", $P101
    set $P5033, $P101
  if120_end238:
    .return ($P5033) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_161_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 302
    .const 'Sub' $P5008 = 'cuid_160_1366375329.52446' 
    capture_lex $P5008 
    .const 'Sub' $P5008 = 'cuid_32_1366375329.52446' 
    capture_lex $P5008 
    .const 'Sub' $P5008 = 'cuid_33_1366375329.52446' 
    capture_lex $P5008 
    .const 'Sub' $P5008 = 'cuid_34_1366375329.52446' 
    capture_lex $P5008 
    .const 'Sub' $P5008 = 'cuid_35_1366375329.52446' 
    capture_lex $P5008 
    .lex "$serno", $P101 
    .lex "&unique", $P102 
    .lex "$?PACKAGE", $P103 
    .lex "$?CLASS", $P104 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    .const 'Sub' $P5002 = 'cuid_160_1366375329.52446' 
    capture_lex $P5002
    set $P102, $P5002
    box $P5003, 10
    set $P101, $P5003
    .const 'Sub' $P5004 = 'cuid_32_1366375329.52446' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_33_1366375329.52446' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_34_1366375329.52446' 
    capture_lex $P5006
    .const 'Sub' $P5007 = 'cuid_35_1366375329.52446' 
    capture_lex $P5007
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "unique" :subid("cuid_160_1366375329.52446") :anon :lex :outer("cuid_161_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 306
    .param pmc _lex_param_0 
    .lex "$prefix", _lex_param_0 
    .local pmc tmp_1 
    set $S5002, _lex_param_0
    find_lex $P5001, "$serno"
    set tmp_1, $P5001
    set $N5002, tmp_1
    set $N5003, 1
    add $N5001, $N5002, $N5003
    box $P5002, $N5001
    store_lex "$serno", $P5002
    set $S5003, tmp_1
    concat $S5001, $S5002, $S5003
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "new" :subid("cuid_32_1366375329.52446") :anon :lex :outer("cuid_161_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 308
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :named("name") 
    .lex "$obj", $P101 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_decontainerize $P5003, _lex_param_0
    repr_instance_of $P5002, $P5003
    set $P101, $P5002
    nqp_get_sc_object $P5004, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 38
.annotate 'line', 310
    $P5005 = "&unique"(_lex_param_1)
    set $S5001, $P5005
    repr_bind_attr_str $P101, $P5004, "$!name", $S5001
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "name" :subid("cuid_33_1366375329.52446") :anon :lex :outer("cuid_161_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 314
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :slurpy 
    .lex "self", _lex_param_0 
    .lex "@value", _lex_param_1 
    .local pmc fb_tmp_25 
    unless _lex_param_1 goto if124_else244 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 38
.annotate 'line', 315
    set fb_tmp_25, _lex_param_1
    repr_defined $I5001, fb_tmp_25
    unless $I5001 goto if125_else246 
    set $P5003, fb_tmp_25[0]
    set $P5005, $P5003
    goto if125_end247
  if125_else246:
    null $P5004
    set $P5005, $P5004
  if125_end247:
    unless_null $P5005, vivi_126248
    nqp_get_sc_object $P5006, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5005, $P5006
  vivi_126248:
    $P5007 = "&unique"($P5005)
    set $S5001, $P5007
    repr_bind_attr_str $P5001, $P5002, "$!name", $S5001
    set $S5003, $S5001
    goto if124_end245
  if124_else244:
    nqp_decontainerize $P5008, _lex_param_0
    nqp_get_sc_object $P5009, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 38
    repr_get_attr_str $S5002, $P5008, $P5009, "$!name"
    set $S5003, $S5002
  if124_end245:
    .return ($S5003) 
.end
.HLL "nqp"
.namespace []
.sub "result" :subid("cuid_34_1366375329.52446") :anon :lex :outer("cuid_161_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 318
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 38
    repr_get_attr_str $S5001, $P5001, $P5002, "$!name"
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "pir" :subid("cuid_35_1366375329.52446") :anon :lex :outer("cuid_161_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 322
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 38
    repr_get_attr_str $S5003, $P5001, $P5002, "$!name"
    concat $S5002, "  ", $S5003
    concat $S5001, $S5002, ":"
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_170_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 330
    .const 'Sub' $P5027 = 'cuid_169_1366375329.52446' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_36_1366375329.52446' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_37_1366375329.52446' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_38_1366375329.52446' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_39_1366375329.52446' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_40_1366375329.52446' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_41_1366375329.52446' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_42_1366375329.52446' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_43_1366375329.52446' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_44_1366375329.52446' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_45_1366375329.52446' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_46_1366375329.52446' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_47_1366375329.52446' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_48_1366375329.52446' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_49_1366375329.52446' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_50_1366375329.52446' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_51_1366375329.52446' 
    capture_lex $P5027 
    .lex "%core_ops", $P101 
    .lex "%hll_ops", $P102 
    .lex "%cached_pirops", $P103 
    .lex "%hll_box", $P104 
    .lex "%hll_unbox", $P105 
    .lex "%core_inlinability", $P106 
    .lex "%hll_inlinability", $P107 
    .lex "%core_result_type", $P108 
    .lex "%hll_result_type", $P109 
    .lex "&pirop_mapper", $P110 
    .lex "$?PACKAGE", $P111 
    .lex "$?CLASS", $P112 
    new $P5001, 'Hash'
    set $P101, $P5001
    new $P5002, 'Hash'
    set $P102, $P5002
    new $P5003, 'Hash'
    set $P103, $P5003
    new $P5004, 'Hash'
    set $P104, $P5004
    new $P5005, 'Hash'
    set $P105, $P5005
    new $P5006, 'Hash'
    set $P106, $P5006
    new $P5007, 'Hash'
    set $P107, $P5007
    new $P5008, 'Hash'
    set $P108, $P5008
    new $P5009, 'Hash'
    set $P109, $P5009
    .const 'Sub' $P5010 = 'cuid_169_1366375329.52446' 
    capture_lex $P5010
    set $P110, $P5010
    .const 'Sub' $P5011 = 'cuid_36_1366375329.52446' 
    capture_lex $P5011
    .const 'Sub' $P5012 = 'cuid_37_1366375329.52446' 
    capture_lex $P5012
    .const 'Sub' $P5013 = 'cuid_38_1366375329.52446' 
    capture_lex $P5013
    .const 'Sub' $P5014 = 'cuid_39_1366375329.52446' 
    capture_lex $P5014
    .const 'Sub' $P5015 = 'cuid_40_1366375329.52446' 
    capture_lex $P5015
    .const 'Sub' $P5016 = 'cuid_41_1366375329.52446' 
    capture_lex $P5016
    .const 'Sub' $P5017 = 'cuid_42_1366375329.52446' 
    capture_lex $P5017
    .const 'Sub' $P5018 = 'cuid_43_1366375329.52446' 
    capture_lex $P5018
    .const 'Sub' $P5019 = 'cuid_44_1366375329.52446' 
    capture_lex $P5019
    .const 'Sub' $P5020 = 'cuid_45_1366375329.52446' 
    capture_lex $P5020
    .const 'Sub' $P5021 = 'cuid_46_1366375329.52446' 
    capture_lex $P5021
    .const 'Sub' $P5022 = 'cuid_47_1366375329.52446' 
    capture_lex $P5022
    .const 'Sub' $P5023 = 'cuid_48_1366375329.52446' 
    capture_lex $P5023
    .const 'Sub' $P5024 = 'cuid_49_1366375329.52446' 
    capture_lex $P5024
    .const 'Sub' $P5025 = 'cuid_50_1366375329.52446' 
    capture_lex $P5025
    .const 'Sub' $P5026 = 'cuid_51_1366375329.52446' 
    capture_lex $P5026
    .return ($P110) 
.end
.HLL "nqp"
.namespace []
.sub "pirop_mapper" :subid("cuid_169_1366375329.52446") :anon :lex :outer("cuid_170_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 516
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5016 = 'cuid_163_1366375329.52446' 
    capture_lex $P5016 
    .lex "@arg_types", $P101 
    .lex "$ret_type", $P102 
    .lex "$ret_meth", $P103 
    .lex "$pirop", _lex_param_0 
    .lex "$sig", _lex_param_1 
    new $P5001, 'QRPA'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
    set $S5001, _lex_param_1
    split $P5004, "", $S5001
    set $P101, $P5004
    shift $P5005, $P101
    set $P102, $P5005
    set $S5002, $P102
    iseq $I5001, $S5002, "P"
    unless $I5001 goto if127_else249 
.annotate 'line', 523
    box $P5006, "fresh_p"
    set $P103, $P5006
    goto if127_end250
  if127_else249:
    set $S5003, $P102
    iseq $I5002, $S5003, "S"
    unless $I5002 goto if128_else251 
.annotate 'line', 524
    box $P5007, "fresh_s"
    set $P103, $P5007
    set $P5013, $P103
    goto if128_end252
  if128_else251:
    set $S5004, $P102
    iseq $I5003, $S5004, "I"
    unless $I5003 goto if129_else253 
.annotate 'line', 525
    box $P5008, "fresh_i"
    set $P103, $P5008
    set $P5012, $P103
    goto if129_end254
  if129_else253:
    set $S5005, $P102
    iseq $I5004, $S5005, "N"
    box $P5011, $I5004
    set $P5010, $P5011
    unless $I5004 goto if130_end256 
.annotate 'line', 526
    box $P5009, "fresh_n"
    set $P103, $P5009
    set $P5010, $P103
  if130_end256:
    set $P5012, $P5010
  if129_end254:
    set $P5013, $P5012
  if128_end252:
  if127_end250:
    .const 'Sub' $P5015 = 'cuid_163_1366375329.52446' 
    capture_lex $P5015
    newclosure $P5014, $P5015
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_163_1366375329.52446") :anon :lex :outer("cuid_169_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 528
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .const 'Sub' $P5030 = 'cuid_162_1366375329.52446' 
    capture_lex $P5030 
    .const 'Sub' $P5030 = 'cuid_165_1366375329.52446' 
    capture_lex $P5030 
    .const 'Sub' $P5030 = 'cuid_168_1366375329.52446' 
    capture_lex $P5030 
    .lex "$ops", $P101 
    .lex "@args", $P102 
    .lex "$num_args", $P103 
    .lex "$i", $P104 
    .lex "$last_argtype_was_Q", $P105 
    .lex "$aggregate", $P106 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op_name", _lex_param_1 
    .lex "@op_args", _lex_param_2 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    new $P5002, 'QRPA'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P105, $P5005
    nqp_get_sc_object $P5006, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P106, $P5006
.annotate 'line', 529
    nqp_get_sc_object $P5007, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5008 = $P5007."new"()
    set $P101, $P5008
    find_lex $P5009, "$ret_meth"
    unless $P5009 goto if131_end258 
    .const 'Sub' $P5010 = 'cuid_162_1366375329.52446' 
    capture_lex $P5010
    $P5011 = $P5010()
  if131_end258:
    set $N5001, _lex_param_2
    box $P5012, $N5001
    set $P103, $P5012
    find_lex $P5013, "@arg_types"
    set $N5002, $P5013
    set $N5003, $P103
    isne $I5001, $N5002, $N5003
    unless $I5001 goto if135_end265 
.annotate 'line', 542
    set $S5005, _lex_param_1
    concat $S5004, "Operation '", $S5005
    concat $S5003, $S5004, "' requires "
    find_lex $P5014, "@arg_types"
    set $N5004, $P5014
    set $S5006, $N5004
    concat $S5002, $S5003, $S5006
    set $S5008, $P103
    concat $S5007, " operands, but got ", $S5008
    concat $S5001, $S5002, $S5007
    box $P5015, $S5001
    die $P5015
  if135_end265:
    box $P5016, 0
    set $P104, $P5016
    box $P5017, 0
    set $P105, $P5017
    box $P5018, ""
    set $P106, $P5018
  while136_test266:
    set $N5005, $P104
    set $N5006, $P103
    islt $I5002, $N5005, $N5006
    box $P5022, $I5002
    set $P5021, $P5022
    unless $I5002 goto while136_done270 
  while136_redo268:
    .const 'Sub' $P5019 = 'cuid_165_1366375329.52446' 
    capture_lex $P5019
    $P5020 = $P5019()
    set $P5021, $P5020
    goto while136_test266 
  while136_done270:
    find_lex $P5023, "$ret_meth"
    isfalse $I5003, $P5023
    set $I5005, $I5003
    unless $I5003 goto if147_end290 
    find_lex $P5024, "$ret_type"
    set $S5009, $P5024
    isne $I5004, $S5009, "v"
    set $I5005, $I5004
  if147_end290:
    set $I5007, $I5005
    unless $I5005 goto if146_end288 
    find_lex $P5025, "$ret_type"
    set $N5007, $P5025
    set $S5010, $N5007
    find_lex $P5026, "$ret_type"
    set $S5011, $P5026
    iseq $I5006, $S5010, $S5011
    set $I5007, $I5006
  if146_end288:
    unless $I5007 goto if145_end286 
    .const 'Sub' $P5027 = 'cuid_168_1366375329.52446' 
    capture_lex $P5027
    $P5028 = $P5027()
  if145_end286:
.annotate 'line', 590
    find_lex $P5029, "$pirop"
    $P101."push_pirop"($P5029, $P102 :flat)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_162_1366375329.52446") :anon :lex :outer("cuid_163_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 534
    .lex "$reg", $P101 
    .local pmc fb_tmp_26 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 535
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback259
    nqp_get_sc_object $P5005, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5004, $P5005
    set fb_tmp_26, $P5004
    repr_defined $I5001, fb_tmp_26
    unless $I5001 goto if132_else260 
    set $P5006, fb_tmp_26["$REGALLOC"]
    set $P5008, $P5006
    goto if132_end261
  if132_else260:
    null $P5007
    set $P5008, $P5007
  if132_end261:
    unless_null $P5008, vivi_133262
    nqp_get_sc_object $P5009, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5008, $P5009
  vivi_133262:
    unless_null $P5008, vivi_134263
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_134263:
    set $P5003, $P5008
  fallback259:
    find_lex $P5002, "$ret_meth"
    set $S5001, $P5002
    $P5011 = $P5003.$S5001()
    set $P101, $P5011
    find_lex $P5012, "@args"
    push $P5012, $P101
.annotate 'line', 537
    find_lex $P5013, "$ops"
    $P5014 = $P5013."result"($P101)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_165_1366375329.52446") :anon :lex :outer("cuid_163_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 549
    .const 'Sub' $P5025 = 'cuid_164_1366375329.52446' 
    capture_lex $P5025 
    .const 'Sub' $P5025 = 'cuid_166_1366375329.52446' 
    capture_lex $P5025 
    .const 'Sub' $P5025 = 'cuid_167_1366375329.52446' 
    capture_lex $P5025 
    .lex "$arg_type", $P101 
    .lex "$operand", $P102 
    .local pmc fb_tmp_27 
    .local pmc fb_tmp_28 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    find_lex $P5003, "@arg_types"
    set fb_tmp_27, $P5003
    repr_defined $I5001, fb_tmp_27
    unless $I5001 goto if137_else271 
    find_lex $P5005, "$i"
    set $I5002, $P5005
    set $P5004, fb_tmp_27[$I5002]
    set $P5007, $P5004
    goto if137_end272
  if137_else271:
    null $P5006
    set $P5007, $P5006
  if137_end272:
    unless_null $P5007, vivi_138273
    nqp_get_sc_object $P5008, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5007, $P5008
  vivi_138273:
    set $P101, $P5007
    find_lex $P5009, "@op_args"
    set fb_tmp_28, $P5009
    repr_defined $I5003, fb_tmp_28
    unless $I5003 goto if139_else274 
    find_lex $P5011, "$i"
    set $I5004, $P5011
    set $P5010, fb_tmp_28[$I5004]
    set $P5013, $P5010
    goto if139_end275
  if139_else274:
    null $P5012
    set $P5013, $P5012
  if139_end275:
    unless_null $P5013, vivi_140276
    nqp_get_sc_object $P5014, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5013, $P5014
  vivi_140276:
    set $P102, $P5013
    set $S5001, $P101
    iseq $I5005, $S5001, "Q"
    unless $I5005 goto if141_else277 
    .const 'Sub' $P5015 = 'cuid_164_1366375329.52446' 
    capture_lex $P5015
    $P5016 = $P5015()
    goto if141_end278
  if141_else277:
    find_lex $P5017, "$last_argtype_was_Q"
    unless $P5017 goto if142_else279 
    .const 'Sub' $P5018 = 'cuid_166_1366375329.52446' 
    capture_lex $P5018
    $P5019 = $P5018()
    set $P5022, $P5019
    goto if142_end280
  if142_else279:
    .const 'Sub' $P5020 = 'cuid_167_1366375329.52446' 
    capture_lex $P5020
    $P5021 = $P5020()
    set $P5022, $P5021
  if142_end280:
  if141_end278:
    find_lex $P5023, "$i"
    set $N5002, $P5023
    set $N5003, 1
    add $N5001, $N5002, $N5003
    box $P5024, $N5001
    store_lex "$i", $P5024
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_164_1366375329.52446") :anon :lex :outer("cuid_165_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 552
    .lex "$post", $P101 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 553
    find_lex $P5002, "$qastcomp"
    find_lex $P5003, "$qastcomp"
    find_lex $P5004, "$operand"
    $P5005 = $P5003."as_post"($P5004)
    $P5006 = $P5002."coerce"($P5005, "P")
    set $P101, $P5006
.annotate 'line', 554
    find_lex $P5007, "$ops"
    $P5007."push"($P101)
.annotate 'line', 555
    $P5008 = $P101."result"()
    store_lex "$aggregate", $P5008
    box $P5009, 1
    store_lex "$last_argtype_was_Q", $P5009
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_166_1366375329.52446") :anon :lex :outer("cuid_165_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 558
    .lex "$post", $P101 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    find_lex $P5002, "$arg_type"
    set $S5001, $P5002
    isne $I5001, $S5001, "P"
    unless $I5001 goto if143_end282 
.annotate 'line', 559
.annotate 'line', 560
    find_lex $P5003, "$qastcomp"
    find_lex $P5004, "$operand"
    find_lex $P5005, "$arg_type"
    $P5006 = $P5003."apply_context"($P5004, $P5005)
    store_lex "$operand", $P5006
  if143_end282:
.annotate 'line', 562
    find_lex $P5007, "$qastcomp"
    find_lex $P5008, "$qastcomp"
    find_lex $P5009, "$operand"
    $P5010 = $P5008."as_post"($P5009)
    find_lex $P5011, "$arg_type"
    $P5012 = $P5007."coerce"($P5010, $P5011)
    set $P101, $P5012
.annotate 'line', 563
    find_lex $P5013, "$ops"
    $P5013."push"($P101)
    find_lex $P5014, "@args"
    find_lex $P5015, "$aggregate"
    set $S5005, $P5015
    concat $S5004, $S5005, "["
.annotate 'line', 564
    $P5016 = $P101."result"()
    set $S5006, $P5016
    concat $S5003, $S5004, $S5006
    concat $S5002, $S5003, "]"
    box $P5017, $S5002
    push $P5014, $P5017
    box $P5018, 0
    store_lex "$last_argtype_was_Q", $P5018
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_167_1366375329.52446") :anon :lex :outer("cuid_165_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 567
    .lex "$post", $P101 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    find_lex $P5002, "$arg_type"
    set $S5001, $P5002
    isne $I5001, $S5001, "P"
    unless $I5001 goto if144_end284 
.annotate 'line', 568
.annotate 'line', 569
    find_lex $P5003, "$qastcomp"
    find_lex $P5004, "$operand"
    find_lex $P5005, "$arg_type"
    $P5006 = $P5003."apply_context"($P5004, $P5005)
    store_lex "$operand", $P5006
  if144_end284:
.annotate 'line', 571
    find_lex $P5007, "$qastcomp"
    find_lex $P5008, "$qastcomp"
    find_lex $P5009, "$operand"
    $P5010 = $P5008."as_post"($P5009)
    find_lex $P5011, "$arg_type"
    $P5012 = $P5007."coerce"($P5010, $P5011)
    set $P101, $P5012
.annotate 'line', 572
    find_lex $P5013, "$ops"
    $P5013."push"($P101)
    find_lex $P5014, "@args"
.annotate 'line', 573
    $P5015 = $P101."result"()
    push $P5014, $P5015
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_168_1366375329.52446") :anon :lex :outer("cuid_163_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 580
    .lex "$rreg", $P101 
    .lex "$brak", $P102 
    .local pmc fb_tmp_29 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    find_lex $P5003, "@args"
    set fb_tmp_29, $P5003
    repr_defined $I5001, fb_tmp_29
    unless $I5001 goto if148_else291 
    find_lex $P5005, "$ret_type"
    set $N5001, $P5005
    set $I5002, $N5001
    set $P5004, fb_tmp_29[$I5002]
    set $P5007, $P5004
    goto if148_end292
  if148_else291:
    null $P5006
    set $P5007, $P5006
  if148_end292:
    unless_null $P5007, vivi_149293
    nqp_get_sc_object $P5008, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5007, $P5008
  vivi_149293:
    set $P101, $P5007
    set $S5001, $P101
    index $I5003, $S5001, "[", 0
    box $P5009, $I5003
    set $P102, $P5009
    set $N5002, $P102
    set $N5003, 0
    isgt $I5004, $N5002, $N5003
    unless $I5004 goto if150_end295 
.annotate 'line', 583
    set $S5003, $P101
    set $N5005, $P102
    set $N5006, 1
    add $N5004, $N5005, $N5006
    set $I5005, $N5004
    set $S5004, $P101
    length $I5006, $S5004
    set $N5008, $I5006
    set $N5010, $P102
    set $N5011, 2
    add $N5009, $N5010, $N5011
    sub $N5007, $N5008, $N5009
    set $I5007, $N5007
    substr $S5002, $S5003, $I5005, $I5007
    box $P5010, $S5002
    set $P101, $P5010
  if150_end295:
.annotate 'line', 586
    find_lex $P5011, "$ops"
    $P5012 = $P5011."result"($P101)
    .return ($P5012) 
.end
.HLL "nqp"
.namespace []
.sub "compile_op" :subid("cuid_36_1366375329.52446") :anon :lex :outer("cuid_170_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 354
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .const 'Sub' $P5029 = 'cuid_171_1366375329.52446' 
    capture_lex $P5029 
    .const 'Sub' $P5029 = 'cuid_172_1366375329.52446' 
    capture_lex $P5029 
    .lex "$name", $P101 
    .lex "self", _lex_param_0 
    .lex "$qastcomp", _lex_param_1 
    .lex "$hll", _lex_param_2 
    .lex "$op", _lex_param_3 
    .local pmc fb_tmp_30 
    .local pmc fb_tmp_31 
    .local pmc fb_tmp_32 
    .local pmc fb_tmp_33 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_296
    .lex "RETURN", $P102
.annotate 'line', 355
    $P5002 = _lex_param_3."op"()
    set $P101, $P5002
    unless _lex_param_2 goto if151_end299 
.annotate 'line', 356
    find_lex $P5003, "%hll_ops"
    set fb_tmp_30, $P5003
    repr_defined $I5001, fb_tmp_30
    unless $I5001 goto if154_else304 
    set $S5001, _lex_param_2
    set $P5004, fb_tmp_30[$S5001]
    set $P5006, $P5004
    goto if154_end305
  if154_else304:
    null $P5005
    set $P5006, $P5005
  if154_end305:
    unless_null $P5006, vivi_155306
    nqp_get_sc_object $P5007, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5006, $P5007
  vivi_155306:
    set $P5017, $P5006
    unless $P5006 goto if153_end303 
    find_lex $P5008, "%hll_ops"
    set fb_tmp_32, $P5008
    repr_defined $I5003, fb_tmp_32
    unless $I5003 goto if157_else309 
    set $S5002, _lex_param_2
    set $P5009, fb_tmp_32[$S5002]
    set $P5011, $P5009
    goto if157_end310
  if157_else309:
    null $P5010
    set $P5011, $P5010
  if157_end310:
    unless_null $P5011, vivi_158311
    nqp_get_sc_object $P5012, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5011, $P5012
  vivi_158311:
    set fb_tmp_31, $P5011
    repr_defined $I5002, fb_tmp_31
    unless $I5002 goto if156_else307 
    set $S5003, $P101
    set $P5013, fb_tmp_31[$S5003]
    set $P5015, $P5013
    goto if156_end308
  if156_else307:
    null $P5014
    set $P5015, $P5014
  if156_end308:
    unless_null $P5015, vivi_159312
    nqp_get_sc_object $P5016, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5015, $P5016
  vivi_159312:
    set $P5017, $P5015
  if153_end303:
    set $P5020, $P5017
    unless $P5017 goto if152_end301 
    .const 'Sub' $P5018 = 'cuid_171_1366375329.52446' 
    capture_lex $P5018
    $P5019 = $P5018($P5017)
    set $P5020, $P5019
  if152_end301:
  if151_end299:
    find_lex $P5021, "%core_ops"
    set fb_tmp_33, $P5021
    repr_defined $I5004, fb_tmp_33
    unless $I5004 goto if161_else315 
    set $S5004, $P101
    set $P5022, fb_tmp_33[$S5004]
    set $P5024, $P5022
    goto if161_end316
  if161_else315:
    null $P5023
    set $P5024, $P5023
  if161_end316:
    unless_null $P5024, vivi_162317
    nqp_get_sc_object $P5025, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5024, $P5025
  vivi_162317:
    unless $P5024 goto if160_end314 
    .const 'Sub' $P5026 = 'cuid_172_1366375329.52446' 
    capture_lex $P5026
    $P5027 = $P5026($P5024)
  if160_end314:
    set $S5007, $P101
    concat $S5006, "No registered operation handler for '", $S5007
    concat $S5005, $S5006, "'"
    box $P5028, $S5005
    die $P5028
    goto lexotic_297
  lexotic_296:
    .get_results ($P5028)
  lexotic_297:
    .return ($P5028) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_171_1366375329.52446") :anon :lex :outer("cuid_36_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 357
    .param pmc _lex_param_0 
    .lex "$mapper", _lex_param_0 
.annotate 'line', 358
    find_lex $P5002, "$qastcomp"
    find_lex $P5003, "$op"
    $P5004 = _lex_param_0($P5002, $P5003)
    find_lex $P5001, "RETURN"
    $P5005 = $P5001($P5004)
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_172_1366375329.52446") :anon :lex :outer("cuid_36_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 361
    .param pmc _lex_param_0 
    .lex "$mapper", _lex_param_0 
.annotate 'line', 362
    find_lex $P5002, "$qastcomp"
    find_lex $P5003, "$op"
    $P5004 = _lex_param_0($P5002, $P5003)
    find_lex $P5001, "RETURN"
    $P5005 = $P5001($P5004)
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "compile_pirop" :subid("cuid_37_1366375329.52446") :anon :lex :outer("cuid_170_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 368
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .const 'Sub' $P5012 = 'cuid_173_1366375329.52446' 
    capture_lex $P5012 
    .lex "self", _lex_param_0 
    .lex "$qastcomp", _lex_param_1 
    .lex "$op_name", _lex_param_2 
    .lex "@op_args", _lex_param_3 
    .local pmc fb_tmp_36 
    set $S5001, _lex_param_2
    index $I5001, $S5001, " ", 0
    unless $I5001 goto if163_end319 
.annotate 'line', 369
    set $S5003, _lex_param_2
    split $P5001, " ", $S5003
    join $S5002, "__", $P5001
    box $P5002, $S5002
    set _lex_param_2, $P5002
  if163_end319:
    find_lex $P5003, "%cached_pirops"
    set $S5004, _lex_param_2
    exists $I5002, $P5003[$S5004]
    if $I5002 goto unless164_end321 
    .const 'Sub' $P5004 = 'cuid_173_1366375329.52446' 
    capture_lex $P5004
    $P5005 = $P5004()
  unless164_end321:
.annotate 'line', 376
    find_lex $P5006, "%cached_pirops"
    set fb_tmp_36, $P5006
    repr_defined $I5003, fb_tmp_36
    unless $I5003 goto if169_else328 
    set $S5005, _lex_param_2
    set $P5007, fb_tmp_36[$S5005]
    set $P5009, $P5007
    goto if169_end329
  if169_else328:
    null $P5008
    set $P5009, $P5008
  if169_end329:
    unless_null $P5009, vivi_170330
    nqp_get_sc_object $P5010, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5009, $P5010
  vivi_170330:
    $P5011 = $P5009(_lex_param_1, _lex_param_2, _lex_param_3)
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_173_1366375329.52446") :anon :lex :outer("cuid_37_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 372
    .lex "@pieces", $P101 
    .local pmc fb_tmp_34 
    .local pmc fb_tmp_35 
    new $P5001, 'QRPA'
    set $P101, $P5001
    find_lex $P5003, "$op_name"
    set $S5001, $P5003
    split $P5002, "__", $S5001
    set $P101, $P5002
    find_lex $P5004, "%cached_pirops"
    find_lex $P5005, "$op_name"
    set $S5002, $P5005
.annotate 'line', 374
    set fb_tmp_34, $P101
    repr_defined $I5001, fb_tmp_34
    unless $I5001 goto if165_else322 
    set $P5006, fb_tmp_34[0]
    set $P5008, $P5006
    goto if165_end323
  if165_else322:
    null $P5007
    set $P5008, $P5007
  if165_end323:
    unless_null $P5008, vivi_166324
    nqp_get_sc_object $P5009, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5008, $P5009
  vivi_166324:
    set fb_tmp_35, $P101
    repr_defined $I5002, fb_tmp_35
    unless $I5002 goto if167_else325 
    set $P5010, fb_tmp_35[1]
    set $P5012, $P5010
    goto if167_end326
  if167_else325:
    null $P5011
    set $P5012, $P5011
  if167_end326:
    unless_null $P5012, vivi_168327
    nqp_get_sc_object $P5013, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5012, $P5013
  vivi_168327:
    $P5014 = "&pirop_mapper"($P5008, $P5012)
    set $P5004[$S5002], $P5014
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "add_core_op" :subid("cuid_38_1366375329.52446") :anon :lex :outer("cuid_170_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 380
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 :named("inlinable") :optional 
    .param int haz_param_7 :opt_flag 
    .lex "self", _lex_param_0 
    .lex "$op", _lex_param_1 
    .lex "$handler", _lex_param_2 
    .lex "$inlinable", _lex_param_3 
    if haz_param_7, default331
    box $P5004, 0
    set _lex_param_3, $P5004
  default331:
    find_lex $P5001, "%core_ops"
    set $S5001, _lex_param_1
    set $P5001[$S5001], _lex_param_2
.annotate 'line', 382
    nqp_decontainerize $P5002, _lex_param_0
    $P5003 = $P5002."set_core_op_inlinability"(_lex_param_1, _lex_param_3)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "add_hll_op" :subid("cuid_39_1366375329.52446") :anon :lex :outer("cuid_170_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 386
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 :named("inlinable") :optional 
    .param int haz_param_8 :opt_flag 
    .lex "self", _lex_param_0 
    .lex "$hll", _lex_param_1 
    .lex "$op", _lex_param_2 
    .lex "$handler", _lex_param_3 
    .lex "$inlinable", _lex_param_4 
    .local pmc fb_tmp_37 
    if haz_param_8, default337
    box $P5011, 0
    set _lex_param_4, $P5011
  default337:
    find_lex $P5001, "%hll_ops"
    set $S5001, _lex_param_1
    exists $I5001, $P5001[$S5001]
    if $I5001 goto unless171_end333 
    find_lex $P5002, "%hll_ops"
    set $S5002, _lex_param_1
    new $P5003, 'Hash'
    set $P5002[$S5002], $P5003
  unless171_end333:
    find_lex $P5004, "%hll_ops"
    set fb_tmp_37, $P5004
    repr_defined $I5002, fb_tmp_37
    unless $I5002 goto if172_else334 
    set $S5003, _lex_param_1
    set $P5005, fb_tmp_37[$S5003]
    set $P5007, $P5005
    goto if172_end335
  if172_else334:
    null $P5006
    set $P5007, $P5006
  if172_end335:
    unless_null $P5007, vivi_173336
    nqp_get_sc_object $P5008, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5007, $P5008
  vivi_173336:
    set $S5004, _lex_param_2
    set $P5007[$S5004], _lex_param_3
.annotate 'line', 389
    nqp_decontainerize $P5009, _lex_param_0
    $P5010 = $P5009."set_hll_op_inlinability"(_lex_param_1, _lex_param_2, _lex_param_4)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "add_core_pirop_mapping" :subid("cuid_40_1366375329.52446") :anon :lex :outer("cuid_170_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 393
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 :named("inlinable") :optional 
    .param int haz_param_9 :opt_flag 
    .const 'Sub' $P5010 = 'cuid_174_1366375329.52446' 
    capture_lex $P5010 
    .lex "$pirop_mapper", $P101 
    .lex "self", _lex_param_0 
    .lex "$op", _lex_param_1 
    .lex "$pirop", _lex_param_2 
    .lex "$sig", _lex_param_3 
    .lex "$inlinable", _lex_param_4 
    if haz_param_9, default338
    box $P5009, 0
    set _lex_param_4, $P5009
  default338:
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 394
    $P5002 = "&pirop_mapper"(_lex_param_2, _lex_param_3)
    set $P101, $P5002
    find_lex $P5003, "%core_ops"
    set $S5001, _lex_param_1
    .const 'Sub' $P5005 = 'cuid_174_1366375329.52446' 
    capture_lex $P5005
    newclosure $P5004, $P5005
    set $P5003[$S5001], $P5004
.annotate 'line', 398
    nqp_decontainerize $P5006, _lex_param_0
    $P5006."set_core_op_inlinability"(_lex_param_1, _lex_param_4)
.annotate 'line', 399
    nqp_decontainerize $P5007, _lex_param_0
    set $S5003, _lex_param_3
    substr $S5002, $S5003, 0, 1
    $P5008 = $P5007."set_core_op_result_type"(_lex_param_1, $S5002)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_174_1366375329.52446") :anon :lex :outer("cuid_40_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 395
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
.annotate 'line', 396
    $P5002 = _lex_param_1."op"()
    $P5003 = _lex_param_1."list"()
    find_lex $P5001, "$pirop_mapper"
    $P5004 = $P5001(_lex_param_0, $P5002, $P5003)
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "add_hll_pirop_mapping" :subid("cuid_41_1366375329.52446") :anon :lex :outer("cuid_170_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 403
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 
    .param pmc _lex_param_5 :named("inlinable") :optional 
    .param int haz_param_10 :opt_flag 
    .const 'Sub' $P5017 = 'cuid_175_1366375329.52446' 
    capture_lex $P5017 
    .lex "$pirop_mapper", $P101 
    .lex "self", _lex_param_0 
    .lex "$hll", _lex_param_1 
    .lex "$op", _lex_param_2 
    .lex "$pirop", _lex_param_3 
    .lex "$sig", _lex_param_4 
    .lex "$inlinable", _lex_param_5 
    .local pmc fb_tmp_38 
    if haz_param_10, default344
    box $P5016, 0
    set _lex_param_5, $P5016
  default344:
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 404
    $P5002 = "&pirop_mapper"(_lex_param_3, _lex_param_4)
    set $P101, $P5002
    find_lex $P5003, "%hll_ops"
    set $S5001, _lex_param_1
    exists $I5001, $P5003[$S5001]
    if $I5001 goto unless174_end340 
    find_lex $P5004, "%hll_ops"
    set $S5002, _lex_param_1
    new $P5005, 'Hash'
    set $P5004[$S5002], $P5005
  unless174_end340:
    find_lex $P5006, "%hll_ops"
    set fb_tmp_38, $P5006
    repr_defined $I5002, fb_tmp_38
    unless $I5002 goto if175_else341 
    set $S5003, _lex_param_1
    set $P5007, fb_tmp_38[$S5003]
    set $P5009, $P5007
    goto if175_end342
  if175_else341:
    null $P5008
    set $P5009, $P5008
  if175_end342:
    unless_null $P5009, vivi_176343
    nqp_get_sc_object $P5010, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5009, $P5010
  vivi_176343:
    set $S5004, _lex_param_2
    .const 'Sub' $P5012 = 'cuid_175_1366375329.52446' 
    capture_lex $P5012
    newclosure $P5011, $P5012
    set $P5009[$S5004], $P5011
.annotate 'line', 409
    nqp_decontainerize $P5013, _lex_param_0
    $P5013."set_hll_op_inlinability"(_lex_param_1, _lex_param_2, _lex_param_5)
.annotate 'line', 410
    nqp_decontainerize $P5014, _lex_param_0
    set $S5006, _lex_param_4
    substr $S5005, $S5006, 0, 1
    $P5015 = $P5014."set_hll_op_result_type"(_lex_param_1, _lex_param_2, $S5005)
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_175_1366375329.52446") :anon :lex :outer("cuid_41_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 406
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
.annotate 'line', 407
    $P5002 = _lex_param_1."op"()
    $P5003 = _lex_param_1."list"()
    find_lex $P5001, "$pirop_mapper"
    $P5004 = $P5001(_lex_param_0, $P5002, $P5003)
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "set_core_op_inlinability" :subid("cuid_42_1366375329.52446") :anon :lex :outer("cuid_170_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 414
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "self", _lex_param_0 
    .lex "$op", _lex_param_1 
    .lex "$inlinable", _lex_param_2 
    find_lex $P5001, "%core_inlinability"
    set $S5001, _lex_param_1
    set $P5001[$S5001], _lex_param_2
    .return (_lex_param_2) 
.end
.HLL "nqp"
.namespace []
.sub "set_hll_op_inlinability" :subid("cuid_43_1366375329.52446") :anon :lex :outer("cuid_170_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 420
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$hll", _lex_param_1 
    .lex "$op", _lex_param_2 
    .lex "$inlinable", _lex_param_3 
    .local pmc fb_tmp_39 
    find_lex $P5001, "%hll_inlinability"
    set $S5001, _lex_param_1
    exists $I5001, $P5001[$S5001]
    if $I5001 goto unless177_end346 
    find_lex $P5002, "%hll_inlinability"
    set $S5002, _lex_param_1
    new $P5003, 'Hash'
    set $P5002[$S5002], $P5003
  unless177_end346:
    find_lex $P5004, "%hll_inlinability"
    set fb_tmp_39, $P5004
    repr_defined $I5002, fb_tmp_39
    unless $I5002 goto if178_else347 
    set $S5003, _lex_param_1
    set $P5005, fb_tmp_39[$S5003]
    set $P5007, $P5005
    goto if178_end348
  if178_else347:
    null $P5006
    set $P5007, $P5006
  if178_end348:
    unless_null $P5007, vivi_179349
    nqp_get_sc_object $P5008, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5007, $P5008
  vivi_179349:
    set $S5004, _lex_param_2
    set $P5007[$S5004], _lex_param_3
    .return (_lex_param_3) 
.end
.HLL "nqp"
.namespace []
.sub "is_inlinable" :subid("cuid_44_1366375329.52446") :anon :lex :outer("cuid_170_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 426
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "self", _lex_param_0 
    .lex "$hll", _lex_param_1 
    .lex "$op", _lex_param_2 
    .local pmc fb_tmp_40 
    .local pmc fb_tmp_41 
    .local pmc fb_tmp_42 
    .local pmc fb_tmp_43 
    root_new $P101, ['parrot';'Continuation']
    set_label $P101, lexotic_350
    .lex "RETURN", $P101
    find_lex $P5001, "%hll_inlinability"
    set $S5001, _lex_param_1
    exists $I5001, $P5001[$S5001]
    unless $I5001 goto if180_end353 
.annotate 'line', 427
    find_lex $P5002, "%hll_inlinability"
    set fb_tmp_40, $P5002
    repr_defined $I5003, fb_tmp_40
    unless $I5003 goto if182_else356 
    set $S5002, _lex_param_1
    set $P5003, fb_tmp_40[$S5002]
    set $P5005, $P5003
    goto if182_end357
  if182_else356:
    null $P5004
    set $P5005, $P5004
  if182_end357:
    unless_null $P5005, vivi_183358
    nqp_get_sc_object $P5006, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5005, $P5006
  vivi_183358:
    set $S5003, _lex_param_2
    exists $I5002, $P5005[$S5003]
    box $P5019, $I5002
    set $P5018, $P5019
    unless $I5002 goto if181_end355 
.annotate 'line', 428
    find_lex $P5008, "%hll_inlinability"
    set fb_tmp_42, $P5008
    repr_defined $I5005, fb_tmp_42
    unless $I5005 goto if185_else361 
    set $S5004, _lex_param_1
    set $P5009, fb_tmp_42[$S5004]
    set $P5011, $P5009
    goto if185_end362
  if185_else361:
    null $P5010
    set $P5011, $P5010
  if185_end362:
    unless_null $P5011, vivi_186363
    nqp_get_sc_object $P5012, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5011, $P5012
  vivi_186363:
    set fb_tmp_41, $P5011
    repr_defined $I5004, fb_tmp_41
    unless $I5004 goto if184_else359 
    set $S5005, _lex_param_2
    set $P5013, fb_tmp_41[$S5005]
    set $P5015, $P5013
    goto if184_end360
  if184_else359:
    null $P5014
    set $P5015, $P5014
  if184_end360:
    unless_null $P5015, vivi_187364
    nqp_get_sc_object $P5016, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5015, $P5016
  vivi_187364:
    find_lex $P5007, "RETURN"
    $P5017 = $P5007($P5015)
    set $P5018, $P5017
  if181_end355:
  if180_end353:
    find_lex $P5022, "%core_inlinability"
    set fb_tmp_43, $P5022
    repr_defined $I5007, fb_tmp_43
    unless $I5007 goto if188_else366 
    set $S5006, _lex_param_2
    set $P5023, fb_tmp_43[$S5006]
    set $P5025, $P5023
    goto if188_end367
  if188_else366:
    null $P5024
    set $P5025, $P5024
  if188_end367:
    unless_null $P5025, vivi_189368
    nqp_get_sc_object $P5026, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5025, $P5026
  vivi_189368:
    set $P5021, $P5025
    defined $I5006, $P5021
    if $I5006, defor365
    box $P5027, 0
    set $P5021, $P5027
  defor365:
    find_lex $P5020, "RETURN"
    $P5028 = $P5020($P5021)
    goto lexotic_351
  lexotic_350:
    .get_results ($P5028)
  lexotic_351:
    .return ($P5028) 
.end
.HLL "nqp"
.namespace []
.sub "set_core_op_result_type" :subid("cuid_45_1366375329.52446") :anon :lex :outer("cuid_170_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 436
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "self", _lex_param_0 
    .lex "$op", _lex_param_1 
    .lex "$type_char", _lex_param_2 
    set $S5001, _lex_param_2
    iseq $I5001, $S5001, "I"
    unless $I5001 goto if190_else369 
.annotate 'line', 437
    find_lex $P5001, "%core_result_type"
    set $S5002, _lex_param_1
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 2
    set $P5001[$S5002], $P5002
    set $P5010, $P5002
    goto if190_end370
  if190_else369:
    set $S5003, _lex_param_2
    iseq $I5002, $S5003, "N"
    unless $I5002 goto if191_else371 
.annotate 'line', 440
    find_lex $P5003, "%core_result_type"
    set $S5004, _lex_param_1
    nqp_get_sc_object $P5004, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 3
    set $P5003[$S5004], $P5004
    set $P5009, $P5004
    goto if191_end372
  if191_else371:
    set $S5005, _lex_param_2
    iseq $I5003, $S5005, "S"
    box $P5008, $I5003
    set $P5007, $P5008
    unless $I5003 goto if192_end374 
.annotate 'line', 443
    find_lex $P5005, "%core_result_type"
    set $S5006, _lex_param_1
    nqp_get_sc_object $P5006, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 4
    set $P5005[$S5006], $P5006
    set $P5007, $P5006
  if192_end374:
    set $P5009, $P5007
  if191_end372:
    set $P5010, $P5009
  if190_end370:
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "set_hll_op_result_type" :subid("cuid_46_1366375329.52446") :anon :lex :outer("cuid_170_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 450
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$hll", _lex_param_1 
    .lex "$op", _lex_param_2 
    .lex "$type_char", _lex_param_3 
    .local pmc fb_tmp_44 
    .local pmc fb_tmp_45 
    .local pmc fb_tmp_46 
    find_lex $P5001, "%hll_result_type"
    set $S5001, _lex_param_1
    exists $I5001, $P5001[$S5001]
    if $I5001 goto unless193_end376 
    find_lex $P5002, "%hll_result_type"
    set $S5002, _lex_param_1
    new $P5003, 'Hash'
    set $P5002[$S5002], $P5003
  unless193_end376:
    set $S5003, _lex_param_3
    iseq $I5002, $S5003, "I"
    unless $I5002 goto if194_else377 
.annotate 'line', 452
    find_lex $P5004, "%hll_result_type"
    set fb_tmp_44, $P5004
    repr_defined $I5003, fb_tmp_44
    unless $I5003 goto if195_else379 
    set $S5004, _lex_param_1
    set $P5005, fb_tmp_44[$S5004]
    set $P5007, $P5005
    goto if195_end380
  if195_else379:
    null $P5006
    set $P5007, $P5006
  if195_end380:
    unless_null $P5007, vivi_196381
    nqp_get_sc_object $P5008, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5007, $P5008
  vivi_196381:
    set $S5005, _lex_param_2
    nqp_get_sc_object $P5009, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 2
    set $P5007[$S5005], $P5009
    set $P5025, $P5009
    goto if194_end378
  if194_else377:
    set $S5006, _lex_param_3
    iseq $I5004, $S5006, "N"
    unless $I5004 goto if197_else382 
.annotate 'line', 455
    find_lex $P5010, "%hll_result_type"
    set fb_tmp_45, $P5010
    repr_defined $I5005, fb_tmp_45
    unless $I5005 goto if198_else384 
    set $S5007, _lex_param_1
    set $P5011, fb_tmp_45[$S5007]
    set $P5013, $P5011
    goto if198_end385
  if198_else384:
    null $P5012
    set $P5013, $P5012
  if198_end385:
    unless_null $P5013, vivi_199386
    nqp_get_sc_object $P5014, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5013, $P5014
  vivi_199386:
    set $S5008, _lex_param_2
    nqp_get_sc_object $P5015, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 3
    set $P5013[$S5008], $P5015
    set $P5024, $P5015
    goto if197_end383
  if197_else382:
    set $S5009, _lex_param_3
    iseq $I5006, $S5009, "S"
    box $P5023, $I5006
    set $P5022, $P5023
    unless $I5006 goto if200_end388 
.annotate 'line', 458
    find_lex $P5016, "%hll_result_type"
    set fb_tmp_46, $P5016
    repr_defined $I5007, fb_tmp_46
    unless $I5007 goto if201_else389 
    set $S5010, _lex_param_1
    set $P5017, fb_tmp_46[$S5010]
    set $P5019, $P5017
    goto if201_end390
  if201_else389:
    null $P5018
    set $P5019, $P5018
  if201_end390:
    unless_null $P5019, vivi_202391
    nqp_get_sc_object $P5020, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5019, $P5020
  vivi_202391:
    set $S5011, _lex_param_2
    nqp_get_sc_object $P5021, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 4
    set $P5019[$S5011], $P5021
    set $P5022, $P5021
  if200_end388:
    set $P5024, $P5022
  if197_end383:
    set $P5025, $P5024
  if194_end378:
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "attach_result_type" :subid("cuid_47_1366375329.52446") :anon :lex :outer("cuid_170_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 464
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$op", $P101 
    .lex "self", _lex_param_0 
    .lex "$hll", _lex_param_1 
    .lex "$node", _lex_param_2 
    .local pmc fb_tmp_47 
    .local pmc fb_tmp_48 
    .local pmc fb_tmp_49 
    .local pmc fb_tmp_50 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_392
    .lex "RETURN", $P102
.annotate 'line', 465
    $P5002 = _lex_param_2."op"()
    set $P101, $P5002
    find_lex $P5003, "%hll_result_type"
    set $S5001, _lex_param_1
    exists $I5001, $P5003[$S5001]
    unless $I5001 goto if203_end395 
.annotate 'line', 466
    find_lex $P5004, "%hll_result_type"
    set fb_tmp_47, $P5004
    repr_defined $I5003, fb_tmp_47
    unless $I5003 goto if205_else398 
    set $S5002, _lex_param_1
    set $P5005, fb_tmp_47[$S5002]
    set $P5007, $P5005
    goto if205_end399
  if205_else398:
    null $P5006
    set $P5007, $P5006
  if205_end399:
    unless_null $P5007, vivi_206400
    nqp_get_sc_object $P5008, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5007, $P5008
  vivi_206400:
    set $S5003, $P101
    exists $I5002, $P5007[$S5003]
    box $P5021, $I5002
    set $P5020, $P5021
    unless $I5002 goto if204_end397 
.annotate 'line', 467
.annotate 'line', 468
    find_lex $P5009, "%hll_result_type"
    set fb_tmp_49, $P5009
    repr_defined $I5005, fb_tmp_49
    unless $I5005 goto if208_else403 
    set $S5004, _lex_param_1
    set $P5010, fb_tmp_49[$S5004]
    set $P5012, $P5010
    goto if208_end404
  if208_else403:
    null $P5011
    set $P5012, $P5011
  if208_end404:
    unless_null $P5012, vivi_209405
    nqp_get_sc_object $P5013, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5012, $P5013
  vivi_209405:
    set fb_tmp_48, $P5012
    repr_defined $I5004, fb_tmp_48
    unless $I5004 goto if207_else401 
    set $S5005, $P101
    set $P5014, fb_tmp_48[$S5005]
    set $P5016, $P5014
    goto if207_end402
  if207_else401:
    null $P5015
    set $P5016, $P5015
  if207_end402:
    unless_null $P5016, vivi_210406
    nqp_get_sc_object $P5017, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5016, $P5017
  vivi_210406:
    _lex_param_2."returns"($P5016)
    find_lex $P5018, "RETURN"
    $P5019 = $P5018(1)
    set $P5020, $P5019
  if204_end397:
  if203_end395:
    find_lex $P5022, "%core_result_type"
    set $S5006, $P101
    exists $I5006, $P5022[$S5006]
    box $P5030, $I5006
    set $P5029, $P5030
    unless $I5006 goto if211_end408 
.annotate 'line', 472
.annotate 'line', 473
    find_lex $P5023, "%core_result_type"
    set fb_tmp_50, $P5023
    repr_defined $I5007, fb_tmp_50
    unless $I5007 goto if212_else409 
    set $S5007, $P101
    set $P5024, fb_tmp_50[$S5007]
    set $P5026, $P5024
    goto if212_end410
  if212_else409:
    null $P5025
    set $P5026, $P5025
  if212_end410:
    unless_null $P5026, vivi_213411
    nqp_get_sc_object $P5027, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5026, $P5027
  vivi_213411:
    $P5028 = _lex_param_2."returns"($P5026)
    set $P5029, $P5028
  if211_end408:
    goto lexotic_393
  lexotic_392:
    .get_results ($P5029)
  lexotic_393:
    .return ($P5029) 
.end
.HLL "nqp"
.namespace []
.sub "add_hll_box" :subid("cuid_48_1366375329.52446") :anon :lex :outer("cuid_170_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 478
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$hll", _lex_param_1 
    .lex "$type", _lex_param_2 
    .lex "$handler", _lex_param_3 
    .local pmc fb_tmp_51 
    set $S5001, _lex_param_2
    iseq $I5001, $S5001, "i"
    set $I5003, $I5001
    if $I5001 goto unless216_end417 
    set $S5002, _lex_param_2
    iseq $I5002, $S5002, "n"
    set $I5003, $I5002
  unless216_end417:
    set $I5005, $I5003
    if $I5003 goto unless215_end415 
    set $S5003, _lex_param_2
    iseq $I5004, $S5003, "s"
    set $I5005, $I5004
  unless215_end415:
    if $I5005 goto unless214_end413 
.annotate 'line', 479
    set $S5006, _lex_param_2
    concat $S5005, "Unknown box type '", $S5006
    concat $S5004, $S5005, "'"
    box $P5001, $S5004
    die $P5001
  unless214_end413:
    find_lex $P5002, "%hll_box"
    set $S5007, _lex_param_1
    exists $I5006, $P5002[$S5007]
    if $I5006 goto unless217_end419 
    find_lex $P5003, "%hll_box"
    set $S5008, _lex_param_1
    new $P5004, 'Hash'
    set $P5003[$S5008], $P5004
  unless217_end419:
    find_lex $P5005, "%hll_box"
    set fb_tmp_51, $P5005
    repr_defined $I5007, fb_tmp_51
    unless $I5007 goto if218_else420 
    set $S5009, _lex_param_1
    set $P5006, fb_tmp_51[$S5009]
    set $P5008, $P5006
    goto if218_end421
  if218_else420:
    null $P5007
    set $P5008, $P5007
  if218_end421:
    unless_null $P5008, vivi_219422
    nqp_get_sc_object $P5009, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5008, $P5009
  vivi_219422:
    set $S5010, _lex_param_2
    set $P5008[$S5010], _lex_param_3
    .return (_lex_param_3) 
.end
.HLL "nqp"
.namespace []
.sub "add_hll_unbox" :subid("cuid_49_1366375329.52446") :anon :lex :outer("cuid_170_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 487
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$hll", _lex_param_1 
    .lex "$type", _lex_param_2 
    .lex "$handler", _lex_param_3 
    .local pmc fb_tmp_52 
    set $S5001, _lex_param_2
    iseq $I5001, $S5001, "i"
    set $I5003, $I5001
    if $I5001 goto unless222_end428 
    set $S5002, _lex_param_2
    iseq $I5002, $S5002, "n"
    set $I5003, $I5002
  unless222_end428:
    set $I5005, $I5003
    if $I5003 goto unless221_end426 
    set $S5003, _lex_param_2
    iseq $I5004, $S5003, "s"
    set $I5005, $I5004
  unless221_end426:
    if $I5005 goto unless220_end424 
.annotate 'line', 488
    set $S5006, _lex_param_2
    concat $S5005, "Unknown unbox type '", $S5006
    concat $S5004, $S5005, "'"
    box $P5001, $S5004
    die $P5001
  unless220_end424:
    find_lex $P5002, "%hll_unbox"
    set $S5007, _lex_param_1
    exists $I5006, $P5002[$S5007]
    if $I5006 goto unless223_end430 
    find_lex $P5003, "%hll_unbox"
    set $S5008, _lex_param_1
    new $P5004, 'Hash'
    set $P5003[$S5008], $P5004
  unless223_end430:
    find_lex $P5005, "%hll_unbox"
    set fb_tmp_52, $P5005
    repr_defined $I5007, fb_tmp_52
    unless $I5007 goto if224_else431 
    set $S5009, _lex_param_1
    set $P5006, fb_tmp_52[$S5009]
    set $P5008, $P5006
    goto if224_end432
  if224_else431:
    null $P5007
    set $P5008, $P5007
  if224_end432:
    unless_null $P5008, vivi_225433
    nqp_get_sc_object $P5009, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5008, $P5009
  vivi_225433:
    set $S5010, _lex_param_2
    set $P5008[$S5010], _lex_param_3
    .return (_lex_param_3) 
.end
.HLL "nqp"
.namespace []
.sub "box" :subid("cuid_50_1366375329.52446") :anon :lex :outer("cuid_170_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 496
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 
    .lex "self", _lex_param_0 
    .lex "$qastcomp", _lex_param_1 
    .lex "$hll", _lex_param_2 
    .lex "$type", _lex_param_3 
    .lex "$post", _lex_param_4 
    .local pmc fb_tmp_53 
    .local pmc fb_tmp_54 
.annotate 'line', 497
    find_lex $P5001, "%hll_box"
    set fb_tmp_54, $P5001
    repr_defined $I5002, fb_tmp_54
    unless $I5002 goto if227_else436 
    set $S5001, _lex_param_2
    set $P5002, fb_tmp_54[$S5001]
    set $P5004, $P5002
    goto if227_end437
  if227_else436:
    null $P5003
    set $P5004, $P5003
  if227_end437:
    unless_null $P5004, vivi_228438
    nqp_get_sc_object $P5005, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5004, $P5005
  vivi_228438:
    set fb_tmp_53, $P5004
    repr_defined $I5001, fb_tmp_53
    unless $I5001 goto if226_else434 
    set $S5002, _lex_param_3
    set $P5006, fb_tmp_53[$S5002]
    set $P5008, $P5006
    goto if226_end435
  if226_else434:
    null $P5007
    set $P5008, $P5007
  if226_end435:
    unless_null $P5008, vivi_229439
    nqp_get_sc_object $P5009, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5008, $P5009
  vivi_229439:
    $P5010 = $P5008(_lex_param_1, _lex_param_4)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "unbox" :subid("cuid_51_1366375329.52446") :anon :lex :outer("cuid_170_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 501
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 
    .lex "self", _lex_param_0 
    .lex "$qastcomp", _lex_param_1 
    .lex "$hll", _lex_param_2 
    .lex "$type", _lex_param_3 
    .lex "$post", _lex_param_4 
    .local pmc fb_tmp_55 
    .local pmc fb_tmp_56 
.annotate 'line', 502
    find_lex $P5001, "%hll_unbox"
    set fb_tmp_56, $P5001
    repr_defined $I5002, fb_tmp_56
    unless $I5002 goto if231_else442 
    set $S5001, _lex_param_2
    set $P5002, fb_tmp_56[$S5001]
    set $P5004, $P5002
    goto if231_end443
  if231_else442:
    null $P5003
    set $P5004, $P5003
  if231_end443:
    unless_null $P5004, vivi_232444
    nqp_get_sc_object $P5005, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5004, $P5005
  vivi_232444:
    set fb_tmp_55, $P5004
    repr_defined $I5001, fb_tmp_55
    unless $I5001 goto if230_else440 
    set $S5002, _lex_param_3
    set $P5006, fb_tmp_55[$S5002]
    set $P5008, $P5006
    goto if230_end441
  if230_else440:
    null $P5007
    set $P5008, $P5007
  if230_end441:
    unless_null $P5008, vivi_233445
    nqp_get_sc_object $P5009, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5008, $P5009
  vivi_233445:
    $P5010 = $P5008(_lex_param_1, _lex_param_4)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_177_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 597
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5020 = 'cuid_176_1366375329.52446' 
    capture_lex $P5020 
    .lex "$list_reg", $P101 
    .lex "$ops", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_57 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
.annotate 'line', 599
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback446
    nqp_get_sc_object $P5005, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5004, $P5005
    set fb_tmp_57, $P5004
    repr_defined $I5001, fb_tmp_57
    unless $I5001 goto if234_else447 
    set $P5006, fb_tmp_57["$REGALLOC"]
    set $P5008, $P5006
    goto if234_end448
  if234_else447:
    null $P5007
    set $P5008, $P5007
  if234_end448:
    unless_null $P5008, vivi_235449
    nqp_get_sc_object $P5009, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5008, $P5009
  vivi_235449:
    unless_null $P5008, vivi_236450
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_236450:
    set $P5003, $P5008
  fallback446:
    $P5011 = $P5003."fresh_p"()
    set $P101, $P5011
.annotate 'line', 600
    nqp_get_sc_object $P5012, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5013 = $P5012."new"($P101 :named("result"))
    set $P102, $P5013
.annotate 'line', 601
    $P102."push_pirop"("new", $P101, "'QRPA'")
.annotate 'line', 604
    $P5017 = _lex_param_1."list"()
    set $P5014, $P5017
    iter $P5016, $P5017
  for_next451:
    unless $P5016, for_done453
    shift $P5019, $P5016
  for_redo452:
    .const 'Sub' $P5018 = 'cuid_176_1366375329.52446' 
    capture_lex $P5018
    $P5014 = $P5018($P5019)
    goto for_next451
  for_done453:
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_176_1366375329.52446") :anon :lex :outer("cuid_177_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 604
    .param pmc _lex_param_0 
    .lex "$post", $P101 
    .lex "$_", _lex_param_0 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 605
    find_lex $P5002, "$qastcomp"
    find_lex $P5003, "$qastcomp"
    $P5004 = $P5003."as_post"(_lex_param_0)
    $P5005 = $P5002."coerce"($P5004, "P")
    set $P101, $P5005
.annotate 'line', 606
    find_lex $P5006, "$ops"
    $P5006."push"($P101)
.annotate 'line', 607
    find_lex $P5007, "$ops"
    find_lex $P5008, "$list_reg"
    $P5009 = $P101."result"()
    $P5010 = $P5007."push_pirop"("push", $P5008, $P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_179_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 613
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5020 = 'cuid_178_1366375329.52446' 
    capture_lex $P5020 
    .lex "$list_reg", $P101 
    .lex "$ops", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_58 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
.annotate 'line', 615
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback454
    nqp_get_sc_object $P5005, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5004, $P5005
    set fb_tmp_58, $P5004
    repr_defined $I5001, fb_tmp_58
    unless $I5001 goto if237_else455 
    set $P5006, fb_tmp_58["$REGALLOC"]
    set $P5008, $P5006
    goto if237_end456
  if237_else455:
    null $P5007
    set $P5008, $P5007
  if237_end456:
    unless_null $P5008, vivi_238457
    nqp_get_sc_object $P5009, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5008, $P5009
  vivi_238457:
    unless_null $P5008, vivi_239458
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_239458:
    set $P5003, $P5008
  fallback454:
    $P5011 = $P5003."fresh_p"()
    set $P101, $P5011
.annotate 'line', 616
    nqp_get_sc_object $P5012, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5013 = $P5012."new"($P101 :named("result"))
    set $P102, $P5013
.annotate 'line', 617
    $P102."push_pirop"("new", $P101, "'QRPA'")
.annotate 'line', 620
    $P5017 = _lex_param_1."list"()
    set $P5014, $P5017
    iter $P5016, $P5017
  for_next459:
    unless $P5016, for_done461
    shift $P5019, $P5016
  for_redo460:
    .const 'Sub' $P5018 = 'cuid_178_1366375329.52446' 
    capture_lex $P5018
    $P5014 = $P5018($P5019)
    goto for_next459
  for_done461:
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_178_1366375329.52446") :anon :lex :outer("cuid_179_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 620
    .param pmc _lex_param_0 
    .lex "$post", $P101 
    .lex "$_", _lex_param_0 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 621
    find_lex $P5002, "$qastcomp"
    find_lex $P5003, "$qastcomp"
    $P5004 = $P5003."as_post"(_lex_param_0)
    $P5005 = $P5002."coerce"($P5004, "P")
    set $P101, $P5005
.annotate 'line', 622
    find_lex $P5006, "$ops"
    $P5006."push"($P101)
.annotate 'line', 623
    find_lex $P5007, "$ops"
    find_lex $P5008, "$list_reg"
    $P5009 = $P101."result"()
    $P5010 = $P5007."push_pirop"("push", $P5008, $P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_181_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 629
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5020 = 'cuid_180_1366375329.52446' 
    capture_lex $P5020 
    .lex "$list_reg", $P101 
    .lex "$ops", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_59 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
.annotate 'line', 631
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback462
    nqp_get_sc_object $P5005, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5004, $P5005
    set fb_tmp_59, $P5004
    repr_defined $I5001, fb_tmp_59
    unless $I5001 goto if240_else463 
    set $P5006, fb_tmp_59["$REGALLOC"]
    set $P5008, $P5006
    goto if240_end464
  if240_else463:
    null $P5007
    set $P5008, $P5007
  if240_end464:
    unless_null $P5008, vivi_241465
    nqp_get_sc_object $P5009, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5008, $P5009
  vivi_241465:
    unless_null $P5008, vivi_242466
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_242466:
    set $P5003, $P5008
  fallback462:
    $P5011 = $P5003."fresh_p"()
    set $P101, $P5011
.annotate 'line', 632
    nqp_get_sc_object $P5012, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5013 = $P5012."new"($P101 :named("result"))
    set $P102, $P5013
.annotate 'line', 633
    $P102."push_pirop"("new", $P101, "'ResizableIntegerArray'")
.annotate 'line', 636
    $P5017 = _lex_param_1."list"()
    set $P5014, $P5017
    iter $P5016, $P5017
  for_next467:
    unless $P5016, for_done469
    shift $P5019, $P5016
  for_redo468:
    .const 'Sub' $P5018 = 'cuid_180_1366375329.52446' 
    capture_lex $P5018
    $P5014 = $P5018($P5019)
    goto for_next467
  for_done469:
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_180_1366375329.52446") :anon :lex :outer("cuid_181_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 636
    .param pmc _lex_param_0 
    .lex "$post", $P101 
    .lex "$_", _lex_param_0 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 637
    find_lex $P5002, "$qastcomp"
    find_lex $P5003, "$qastcomp"
    $P5004 = $P5003."as_post"(_lex_param_0)
    $P5005 = $P5002."coerce"($P5004, "i")
    set $P101, $P5005
.annotate 'line', 638
    find_lex $P5006, "$ops"
    $P5006."push"($P101)
.annotate 'line', 639
    find_lex $P5007, "$ops"
    find_lex $P5008, "$list_reg"
    $P5009 = $P101."result"()
    $P5010 = $P5007."push_pirop"("push", $P5008, $P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_183_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 645
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5020 = 'cuid_182_1366375329.52446' 
    capture_lex $P5020 
    .lex "$list_reg", $P101 
    .lex "$ops", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_60 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
.annotate 'line', 647
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback470
    nqp_get_sc_object $P5005, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5004, $P5005
    set fb_tmp_60, $P5004
    repr_defined $I5001, fb_tmp_60
    unless $I5001 goto if243_else471 
    set $P5006, fb_tmp_60["$REGALLOC"]
    set $P5008, $P5006
    goto if243_end472
  if243_else471:
    null $P5007
    set $P5008, $P5007
  if243_end472:
    unless_null $P5008, vivi_244473
    nqp_get_sc_object $P5009, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5008, $P5009
  vivi_244473:
    unless_null $P5008, vivi_245474
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_245474:
    set $P5003, $P5008
  fallback470:
    $P5011 = $P5003."fresh_p"()
    set $P101, $P5011
.annotate 'line', 648
    nqp_get_sc_object $P5012, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5013 = $P5012."new"($P101 :named("result"))
    set $P102, $P5013
.annotate 'line', 649
    $P102."push_pirop"("new", $P101, "'ResizableStringArray'")
.annotate 'line', 652
    $P5017 = _lex_param_1."list"()
    set $P5014, $P5017
    iter $P5016, $P5017
  for_next475:
    unless $P5016, for_done477
    shift $P5019, $P5016
  for_redo476:
    .const 'Sub' $P5018 = 'cuid_182_1366375329.52446' 
    capture_lex $P5018
    $P5014 = $P5018($P5019)
    goto for_next475
  for_done477:
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_182_1366375329.52446") :anon :lex :outer("cuid_183_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 652
    .param pmc _lex_param_0 
    .lex "$post", $P101 
    .lex "$_", _lex_param_0 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 653
    find_lex $P5002, "$qastcomp"
    find_lex $P5003, "$qastcomp"
    $P5004 = $P5003."as_post"(_lex_param_0)
    $P5005 = $P5002."coerce"($P5004, "s")
    set $P101, $P5005
.annotate 'line', 654
    find_lex $P5006, "$ops"
    $P5006."push"($P101)
.annotate 'line', 655
    find_lex $P5007, "$ops"
    find_lex $P5008, "$list_reg"
    $P5009 = $P101."result"()
    $P5010 = $P5007."push_pirop"("push", $P5008, $P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_185_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 661
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5030 = 'cuid_184_1366375329.52446' 
    capture_lex $P5030 
    .lex "$list_reg", $P101 
    .lex "$ops", $P102 
    .lex "$block_reg", $P103 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_61 
    .local pmc fb_tmp_62 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
.annotate 'line', 663
    find_dynamic_lex $P5004, "$*REGALLOC"
    unless_null $P5004, fallback478
    nqp_get_sc_object $P5006, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5005, $P5006
    set fb_tmp_61, $P5005
    repr_defined $I5001, fb_tmp_61
    unless $I5001 goto if246_else479 
    set $P5007, fb_tmp_61["$REGALLOC"]
    set $P5009, $P5007
    goto if246_end480
  if246_else479:
    null $P5008
    set $P5009, $P5008
  if246_end480:
    unless_null $P5009, vivi_247481
    nqp_get_sc_object $P5010, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5009, $P5010
  vivi_247481:
    unless_null $P5009, vivi_248482
    die "Contextual $*REGALLOC not found"
    box $P5011, "Contextual $*REGALLOC not found"
    set $P5009, $P5011
  vivi_248482:
    set $P5004, $P5009
  fallback478:
    $P5012 = $P5004."fresh_p"()
    set $P101, $P5012
.annotate 'line', 664
    nqp_get_sc_object $P5013, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5014 = $P5013."new"($P101 :named("result"))
    set $P102, $P5014
.annotate 'line', 665
    $P102."push_pirop"("new", $P101, "'QRPA'")
.annotate 'line', 668
    find_dynamic_lex $P5015, "$*REGALLOC"
    unless_null $P5015, fallback483
    nqp_get_sc_object $P5017, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5016, $P5017
    set fb_tmp_62, $P5016
    repr_defined $I5002, fb_tmp_62
    unless $I5002 goto if249_else484 
    set $P5018, fb_tmp_62["$REGALLOC"]
    set $P5020, $P5018
    goto if249_end485
  if249_else484:
    null $P5019
    set $P5020, $P5019
  if249_end485:
    unless_null $P5020, vivi_250486
    nqp_get_sc_object $P5021, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5020, $P5021
  vivi_250486:
    unless_null $P5020, vivi_251487
    die "Contextual $*REGALLOC not found"
    box $P5022, "Contextual $*REGALLOC not found"
    set $P5020, $P5022
  vivi_251487:
    set $P5015, $P5020
  fallback483:
    $P5023 = $P5015."fresh_p"()
    set $P103, $P5023
.annotate 'line', 669
    $P5027 = _lex_param_1."list"()
    set $P5024, $P5027
    iter $P5026, $P5027
  for_next488:
    unless $P5026, for_done490
    shift $P5029, $P5026
  for_redo489:
    .const 'Sub' $P5028 = 'cuid_184_1366375329.52446' 
    capture_lex $P5028
    $P5024 = $P5028($P5029)
    goto for_next488
  for_done490:
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_184_1366375329.52446") :anon :lex :outer("cuid_185_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 669
    .param pmc _lex_param_0 
    .lex "$cuid", $P101 
    .lex "$_", _lex_param_0 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 670
    $P5002 = _lex_param_0."cuid"()
    set $P101, $P5002
.annotate 'line', 671
    find_lex $P5003, "$ops"
    find_lex $P5004, "$block_reg"
    set $S5005, $P5004
    concat $S5004, ".const 'Sub' ", $S5005
    concat $S5003, $S5004, " = \""
    set $S5006, $P101
    concat $S5002, $S5003, $S5006
    concat $S5001, $S5002, "\""
    $P5003."push_pirop"($S5001)
.annotate 'line', 672
    find_lex $P5005, "$ops"
    find_lex $P5006, "$list_reg"
    find_lex $P5007, "$block_reg"
    $P5008 = $P5005."push_pirop"("push", $P5006, $P5007)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_187_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 678
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5022 = 'cuid_186_1366375329.52446' 
    capture_lex $P5022 
    .lex "$hash_reg", $P101 
    .lex "$ops", $P102 
    .lex "$i", $P103 
    .lex "@op_list", $P104 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_63 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
    new $P5004, 'QRPA'
    set $P104, $P5004
.annotate 'line', 680
    find_dynamic_lex $P5005, "$*REGALLOC"
    unless_null $P5005, fallback491
    nqp_get_sc_object $P5007, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5006, $P5007
    set fb_tmp_63, $P5006
    repr_defined $I5001, fb_tmp_63
    unless $I5001 goto if252_else492 
    set $P5008, fb_tmp_63["$REGALLOC"]
    set $P5010, $P5008
    goto if252_end493
  if252_else492:
    null $P5009
    set $P5010, $P5009
  if252_end493:
    unless_null $P5010, vivi_253494
    nqp_get_sc_object $P5011, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5010, $P5011
  vivi_253494:
    unless_null $P5010, vivi_254495
    die "Contextual $*REGALLOC not found"
    box $P5012, "Contextual $*REGALLOC not found"
    set $P5010, $P5012
  vivi_254495:
    set $P5005, $P5010
  fallback491:
    $P5013 = $P5005."fresh_p"()
    set $P101, $P5013
.annotate 'line', 681
    nqp_get_sc_object $P5014, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5015 = $P5014."new"($P101 :named("result"))
    set $P102, $P5015
.annotate 'line', 682
    $P102."push_pirop"("new", $P101, "'Hash'")
    box $P5016, 0
    set $P103, $P5016
.annotate 'line', 686
    $P5017 = _lex_param_1."list"()
    set $P104, $P5017
  while255_test496:
    set $N5001, $P103
    set $N5002, $P104
    islt $I5002, $N5001, $N5002
    box $P5021, $I5002
    set $P5020, $P5021
    unless $I5002 goto while255_done500 
  while255_redo498:
    .const 'Sub' $P5018 = 'cuid_186_1366375329.52446' 
    capture_lex $P5018
    $P5019 = $P5018()
    set $P5020, $P5019
    goto while255_test496 
  while255_done500:
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_186_1366375329.52446") :anon :lex :outer("cuid_187_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 687
    .lex "$kpost", $P101 
    .lex "$vpost", $P102 
    .local pmc fb_tmp_64 
    .local pmc fb_tmp_65 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
.annotate 'line', 688
    find_lex $P5003, "$qastcomp"
    find_lex $P5004, "$qastcomp"
    find_lex $P5005, "@op_list"
    set fb_tmp_64, $P5005
    repr_defined $I5001, fb_tmp_64
    unless $I5001 goto if256_else501 
    find_lex $P5007, "$i"
    set $I5002, $P5007
    set $P5006, fb_tmp_64[$I5002]
    set $P5009, $P5006
    goto if256_end502
  if256_else501:
    null $P5008
    set $P5009, $P5008
  if256_end502:
    unless_null $P5009, vivi_257503
    nqp_get_sc_object $P5010, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5009, $P5010
  vivi_257503:
    $P5011 = $P5004."as_post"($P5009)
    $P5012 = $P5003."coerce"($P5011, "s")
    set $P101, $P5012
.annotate 'line', 689
    find_lex $P5013, "$ops"
    $P5013."push"($P101)
    find_lex $P5014, "$i"
    set $N5002, $P5014
    set $N5003, 1
    add $N5001, $N5002, $N5003
    box $P5015, $N5001
    store_lex "$i", $P5015
.annotate 'line', 692
    find_lex $P5016, "$qastcomp"
    find_lex $P5017, "$qastcomp"
    find_lex $P5018, "@op_list"
    set fb_tmp_65, $P5018
    repr_defined $I5003, fb_tmp_65
    unless $I5003 goto if258_else504 
    find_lex $P5020, "$i"
    set $I5004, $P5020
    set $P5019, fb_tmp_65[$I5004]
    set $P5022, $P5019
    goto if258_end505
  if258_else504:
    null $P5021
    set $P5022, $P5021
  if258_end505:
    unless_null $P5022, vivi_259506
    nqp_get_sc_object $P5023, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5022, $P5023
  vivi_259506:
    $P5024 = $P5017."as_post"($P5022)
    $P5025 = $P5016."coerce"($P5024, "P")
    set $P102, $P5025
.annotate 'line', 693
    find_lex $P5026, "$ops"
    $P5026."push"($P102)
    find_lex $P5027, "$i"
    set $N5005, $P5027
    set $N5006, 1
    add $N5004, $N5005, $N5006
    box $P5028, $N5004
    store_lex "$i", $P5028
.annotate 'line', 696
    find_lex $P5029, "$ops"
    find_lex $P5030, "$hash_reg"
    set $S5004, $P5030
    concat $S5003, $S5004, "["
    $P5031 = $P101."result"()
    set $S5005, $P5031
    concat $S5002, $S5003, $S5005
    concat $S5001, $S5002, "]"
    $P5032 = $P102."result"()
    $P5033 = $P5029."push_pirop"("set", $S5001, $P5032)
    .return ($P5033) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_189_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 703
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5043 = 'cuid_188_1366375329.52446' 
    capture_lex $P5043 
    .lex "@clist", $P101 
    .lex "$cpast", $P102 
    .lex "$ops", $P103 
    .lex "$endlabel", $P104 
    .lex "$apast", $P105 
    .lex "$apost", $P106 
    .lex "$more", $P107 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_66 
    .local pmc fb_tmp_67 
    .local pmc fb_tmp_68 
    new $P5001, 'QRPA'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P105, $P5005
    nqp_get_sc_object $P5006, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P106, $P5006
    nqp_get_sc_object $P5007, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P107, $P5007
    set $P102, _lex_param_1
  while260_test507:
.annotate 'line', 707
    nqp_get_sc_object $P5008, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
    $P5009 = $P5008."ACCEPTS"($P102)
    set $P5011, $P5009
    unless $P5009 goto if261_end513 
    $P5010 = $P102."op"()
    set $S5001, $P5010
    iseq $I5001, $S5001, "chain"
    box $P5012, $I5001
    set $P5011, $P5012
  if261_end513:
    set $P5017, $P5011
    unless $P5011 goto while260_done511 
  while260_redo509:
    push $P101, $P102
    set fb_tmp_66, $P102
    repr_defined $I5002, fb_tmp_66
    unless $I5002 goto if262_else514 
    set $P5013, fb_tmp_66[0]
    set $P5015, $P5013
    goto if262_end515
  if262_else514:
    null $P5014
    set $P5015, $P5014
  if262_end515:
    unless_null $P5015, vivi_263516
    nqp_get_sc_object $P5016, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5015, $P5016
  vivi_263516:
    set $P102, $P5015
    set $P5017, $P102
    goto while260_test507 
  while260_done511:
.annotate 'line', 712
    nqp_get_sc_object $P5018, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    find_dynamic_lex $P5019, "$*REGALLOC"
    unless_null $P5019, fallback517
    nqp_get_sc_object $P5021, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5020, $P5021
    set fb_tmp_67, $P5020
    repr_defined $I5003, fb_tmp_67
    unless $I5003 goto if264_else518 
    set $P5022, fb_tmp_67["$REGALLOC"]
    set $P5024, $P5022
    goto if264_end519
  if264_else518:
    null $P5023
    set $P5024, $P5023
  if264_end519:
    unless_null $P5024, vivi_265520
    nqp_get_sc_object $P5025, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5024, $P5025
  vivi_265520:
    unless_null $P5024, vivi_266521
    die "Contextual $*REGALLOC not found"
    box $P5026, "Contextual $*REGALLOC not found"
    set $P5024, $P5026
  vivi_266521:
    set $P5019, $P5024
  fallback517:
    $P5027 = $P5019."fresh_p"()
    $P5028 = $P5018."new"($P5027 :named("result"))
    set $P103, $P5028
.annotate 'line', 713
    nqp_get_sc_object $P5029, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 38
    $P5030 = _lex_param_0."unique"("chain_end_")
    $P5031 = $P5029."new"($P5030 :named("name"))
    set $P104, $P5031
    pop $P5032, $P101
    set $P102, $P5032
    set fb_tmp_68, $P102
    repr_defined $I5004, fb_tmp_68
    unless $I5004 goto if267_else522 
    set $P5033, fb_tmp_68[0]
    set $P5035, $P5033
    goto if267_end523
  if267_else522:
    null $P5034
    set $P5035, $P5034
  if267_end523:
    unless_null $P5035, vivi_268524
    nqp_get_sc_object $P5036, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5035, $P5036
  vivi_268524:
    set $P105, $P5035
.annotate 'line', 717
    $P5037 = _lex_param_0."as_post"($P105)
    $P5038 = _lex_param_0."coerce"($P5037, "P")
    set $P106, $P5038
.annotate 'line', 718
    $P103."push"($P106)
    box $P5039, 1
    set $P107, $P5039
  while269_test525:
    set $P5042, $P107
    unless $P107 goto while269_done529 
  while269_redo527:
    .const 'Sub' $P5040 = 'cuid_188_1366375329.52446' 
    capture_lex $P5040
    $P5041 = $P5040()
    set $P5042, $P5041
    goto while269_test525 
  while269_done529:
.annotate 'line', 739
    $P103."push"($P104)
    .return ($P103) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_188_1366375329.52446") :anon :lex :outer("cuid_189_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 721
    .lex "$bpast", $P101 
    .lex "$bpost", $P102 
    .lex "$name", $P103 
    .local pmc fb_tmp_69 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
    find_lex $P5004, "$cpast"
    set fb_tmp_69, $P5004
    repr_defined $I5001, fb_tmp_69
    unless $I5001 goto if270_else530 
    set $P5005, fb_tmp_69[1]
    set $P5007, $P5005
    goto if270_end531
  if270_else530:
    null $P5006
    set $P5007, $P5006
  if270_end531:
    unless_null $P5007, vivi_271532
    nqp_get_sc_object $P5008, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5007, $P5008
  vivi_271532:
    set $P101, $P5007
.annotate 'line', 723
    find_lex $P5009, "$qastcomp"
    find_lex $P5010, "$qastcomp"
    $P5011 = $P5010."as_post"($P101)
    $P5012 = $P5009."coerce"($P5011, "P")
    set $P102, $P5012
.annotate 'line', 724
    find_lex $P5013, "$ops"
    $P5013."push"($P102)
.annotate 'line', 726
    find_lex $P5014, "$qastcomp"
    find_lex $P5015, "$cpast"
    $P5016 = $P5015."name"()
    $P5017 = $P5014."escape"($P5016)
    set $P103, $P5017
.annotate 'line', 727
    find_lex $P5018, "$ops"
    find_lex $P5019, "$apost"
    find_lex $P5020, "$ops"
    $P5018."push_pirop"("call", $P103, $P5019, $P102, $P5020 :named("result"))
    find_lex $P5021, "@clist"
    unless $P5021 goto if272_else533 
.annotate 'line', 729
.annotate 'line', 730
    find_lex $P5022, "$ops"
    find_lex $P5023, "$ops"
    find_lex $P5024, "$endlabel"
    $P5022."push_pirop"("unless", $P5023, $P5024)
    find_lex $P5026, "@clist"
    pop $P5025, $P5026
    store_lex "$cpast", $P5025
    store_lex "$apost", $P102
    set $P5028, $P102
    goto if272_end534
  if272_else533:
.annotate 'line', 734
    box $P5027, 0
    store_lex "$more", $P5027
    set $P5028, $P5027
  if272_end534:
    .return ($P5028) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_190_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 745
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
.annotate 'line', 746
    nqp_get_sc_object $P5001, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 93
    $P5002 = _lex_param_1."list"()
    $P5003 = $P5001."new"($P5002 :flat)
    $P5004 = _lex_param_0."as_post"($P5003)
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_197_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 750
    .param pmc _lex_param_0 
    .const 'Sub' $P5005 = 'cuid_192_1366375329.52446' 
    capture_lex $P5005 
    .lex "$op_name", _lex_param_0 
.annotate 'line', 751
    nqp_get_sc_object $P5001, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5003 = 'cuid_192_1366375329.52446' 
    capture_lex $P5003
    newclosure $P5002, $P5003
    $P5004 = $P5001."add_core_op"(_lex_param_0, $P5002, 1 :named("inlinable"))
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_192_1366375329.52446") :anon :lex :outer("cuid_197_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 751
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5116 = 'cuid_191_1366375329.52446' 
    capture_lex $P5116 
    .const 'Sub' $P5116 = 'cuid_193_1366375329.52446' 
    capture_lex $P5116 
    .const 'Sub' $P5116 = 'cuid_194_1366375329.52446' 
    capture_lex $P5116 
    .const 'Sub' $P5116 = 'cuid_195_1366375329.52446' 
    capture_lex $P5116 
    .const 'Sub' $P5116 = 'cuid_196_1366375329.52446' 
    capture_lex $P5116 
    .lex "$operands", $P101 
    .lex "$if_id", $P102 
    .lex "$else_lbl", $P103 
    .lex "$end_lbl", $P104 
    .lex "@comp_ops", $P105 
    .lex "@op_types", $P106 
    .lex "@im_args", $P107 
    .lex "$res_type", $P108 
    .lex "$res_reg", $P109 
    .lex "$ops", $P110 
    .lex "$cond_result", $P111 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_75 
    .local pmc fb_tmp_76 
    .local pmc fb_tmp_77 
    .local pmc fb_tmp_78 
    .local pmc fb_tmp_79 
    .local pmc fb_tmp_80 
    .local pmc fb_tmp_81 
    .local pmc fb_tmp_82 
    .local pmc fb_tmp_84 
    .local pmc fb_tmp_85 
    .local pmc fb_tmp_86 
    .local pmc fb_tmp_88 
    .local pmc fb_tmp_90 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P104, $P5004
    new $P5005, 'QRPA'
    set $P105, $P5005
    new $P5006, 'QRPA'
    set $P106, $P5006
    new $P5007, 'QRPA'
    set $P107, $P5007
    nqp_get_sc_object $P5008, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P108, $P5008
    nqp_get_sc_object $P5009, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P109, $P5009
    nqp_get_sc_object $P5010, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P110, $P5010
    nqp_get_sc_object $P5011, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P111, $P5011
.annotate 'line', 753
    $P5012 = _lex_param_1."list"()
    set $N5001, $P5012
    box $P5013, $N5001
    set $P101, $P5013
    set $N5002, $P101
    set $N5003, 2
    islt $I5001, $N5002, $N5003
    set $I5003, $I5001
    if $I5001 goto unless274_end538 
    set $N5004, $P101
    set $N5005, 3
    isgt $I5002, $N5004, $N5005
    set $I5003, $I5002
  unless274_end538:
    unless $I5003 goto if273_end536 
    find_lex $P5014, "$op_name"
    set $S5003, $P5014
    concat $S5002, "Operation '", $S5003
    concat $S5001, $S5002, "' needs either 2 or 3 operands"
    box $P5015, $S5001
    die $P5015
  if273_end536:
.annotate 'line', 758
    find_lex $P5016, "$op_name"
    $P5017 = _lex_param_0."unique"($P5016)
    set $P102, $P5017
.annotate 'line', 759
    nqp_get_sc_object $P5018, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 38
    set $S5005, $P102
    concat $S5004, $S5005, "_else"
    $P5019 = $P5018."new"($S5004 :named("name"))
    set $P103, $P5019
.annotate 'line', 760
    nqp_get_sc_object $P5020, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 38
    set $S5007, $P102
    concat $S5006, $S5007, "_end"
    $P5021 = $P5020."new"($S5006 :named("name"))
    set $P104, $P5021
.annotate 'line', 767
    $P5025 = _lex_param_1."list"()
    set $P5022, $P5025
    iter $P5024, $P5025
  for_next568:
    unless $P5024, for_done570
    shift $P5027, $P5024
  for_redo569:
    .const 'Sub' $P5026 = 'cuid_191_1366375329.52446' 
    capture_lex $P5026
    $P5022 = $P5026($P5027)
    goto for_next568
  for_done570:
    find_dynamic_lex $P5028, "$*WANT"
    unless_null $P5028, fallback573
    nqp_get_sc_object $P5030, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5029, $P5030
    set fb_tmp_75, $P5029
    repr_defined $I5005, fb_tmp_75
    unless $I5005 goto if293_else574 
    set $P5031, fb_tmp_75["$WANT"]
    set $P5033, $P5031
    goto if293_end575
  if293_else574:
    null $P5032
    set $P5033, $P5032
  if293_end575:
    unless_null $P5033, vivi_294576
    nqp_get_sc_object $P5034, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5033, $P5034
  vivi_294576:
    unless_null $P5033, vivi_295577
    die "Contextual $*WANT not found"
    box $P5035, "Contextual $*WANT not found"
    set $P5033, $P5035
  vivi_295577:
    set $P5028, $P5033
  fallback573:
    set $S5008, $P5028
    isne $I5004, $S5008, "v"
    unless $I5004 goto if292_end572 
.annotate 'line', 784
    set $N5006, $P101
    set $N5007, 3
    iseq $I5006, $N5006, $N5007
    unless $I5006 goto if296_else578 
    set fb_tmp_76, $P106
    repr_defined $I5008, fb_tmp_76
    unless $I5008 goto if298_else582 
    set $P5036, fb_tmp_76[1]
    set $P5038, $P5036
    goto if298_end583
  if298_else582:
    null $P5037
    set $P5038, $P5037
  if298_end583:
    unless_null $P5038, vivi_299584
    nqp_get_sc_object $P5039, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5038, $P5039
  vivi_299584:
    set $S5009, $P5038
    set fb_tmp_77, $P106
    repr_defined $I5009, fb_tmp_77
    unless $I5009 goto if300_else585 
    set $P5040, fb_tmp_77[2]
    set $P5042, $P5040
    goto if300_end586
  if300_else585:
    null $P5041
    set $P5042, $P5041
  if300_end586:
    unless_null $P5042, vivi_301587
    nqp_get_sc_object $P5043, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5042, $P5043
  vivi_301587:
    set $S5010, $P5042
    iseq $I5007, $S5009, $S5010
    unless $I5007 goto if297_else580 
    set fb_tmp_78, $P106
    repr_defined $I5010, fb_tmp_78
    unless $I5010 goto if302_else588 
    set $P5044, fb_tmp_78[1]
    set $P5046, $P5044
    goto if302_end589
  if302_else588:
    null $P5045
    set $P5046, $P5045
  if302_end589:
    unless_null $P5046, vivi_303590
    nqp_get_sc_object $P5047, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5046, $P5047
  vivi_303590:
    set $S5012, $P5046
    downcase $S5011, $S5012
    set $S5013, $S5011
    goto if297_end581
  if297_else580:
    set $S5013, "p"
  if297_end581:
    set $S5019, $S5013
    goto if296_end579
  if296_else578:
    set fb_tmp_79, $P106
    repr_defined $I5012, fb_tmp_79
    unless $I5012 goto if305_else593 
    set $P5048, fb_tmp_79[0]
    set $P5050, $P5048
    goto if305_end594
  if305_else593:
    null $P5049
    set $P5050, $P5049
  if305_end594:
    unless_null $P5050, vivi_306595
    nqp_get_sc_object $P5051, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5050, $P5051
  vivi_306595:
    set $S5014, $P5050
    set fb_tmp_80, $P106
    repr_defined $I5013, fb_tmp_80
    unless $I5013 goto if307_else596 
    set $P5052, fb_tmp_80[1]
    set $P5054, $P5052
    goto if307_end597
  if307_else596:
    null $P5053
    set $P5054, $P5053
  if307_end597:
    unless_null $P5054, vivi_308598
    nqp_get_sc_object $P5055, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5054, $P5055
  vivi_308598:
    set $S5015, $P5054
    iseq $I5011, $S5014, $S5015
    unless $I5011 goto if304_else591 
    set fb_tmp_81, $P106
    repr_defined $I5014, fb_tmp_81
    unless $I5014 goto if309_else599 
    set $P5056, fb_tmp_81[0]
    set $P5058, $P5056
    goto if309_end600
  if309_else599:
    null $P5057
    set $P5058, $P5057
  if309_end600:
    unless_null $P5058, vivi_310601
    nqp_get_sc_object $P5059, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5058, $P5059
  vivi_310601:
    set $S5017, $P5058
    downcase $S5016, $S5017
    set $S5018, $S5016
    goto if304_end592
  if304_else591:
    set $S5018, "p"
  if304_end592:
    set $S5019, $S5018
  if296_end579:
    box $P5060, $S5019
    set $P108, $P5060
.annotate 'line', 788
    find_dynamic_lex $P5061, "$*REGALLOC"
    unless_null $P5061, fallback602
    nqp_get_sc_object $P5063, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5062, $P5063
    set fb_tmp_82, $P5062
    repr_defined $I5015, fb_tmp_82
    unless $I5015 goto if311_else603 
    set $P5064, fb_tmp_82["$REGALLOC"]
    set $P5066, $P5064
    goto if311_end604
  if311_else603:
    null $P5065
    set $P5066, $P5065
  if311_end604:
    unless_null $P5066, vivi_312605
    nqp_get_sc_object $P5067, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5066, $P5067
  vivi_312605:
    unless_null $P5066, vivi_313606
    die "Contextual $*REGALLOC not found"
    box $P5068, "Contextual $*REGALLOC not found"
    set $P5066, $P5068
  vivi_313606:
    set $P5061, $P5066
  fallback602:
    set $S5021, $P108
    concat $S5020, "fresh_", $S5021
    $P5069 = $P5061.$S5020()
    set $P109, $P5069
  if292_end572:
.annotate 'line', 792
    nqp_get_sc_object $P5070, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5071 = $P5070."new"()
    set $P110, $P5071
    set $P5072, $P109
    unless $P109 goto if315_end610 
    set $N5008, $P101
    set $N5009, 2
    iseq $I5016, $N5008, $N5009
    box $P5073, $I5016
    set $P5072, $P5073
  if315_end610:
    unless $P5072 goto if314_else607 
    .const 'Sub' $P5074 = 'cuid_193_1366375329.52446' 
    capture_lex $P5074
    $P5075 = $P5074()
    goto if314_end608
  if314_else607:
.annotate 'line', 800
.annotate 'line', 801
    set fb_tmp_84, $P105
    repr_defined $I5017, fb_tmp_84
    unless $I5017 goto if318_else614 
    set $P5076, fb_tmp_84[0]
    set $P5078, $P5076
    goto if318_end615
  if318_else614:
    null $P5077
    set $P5078, $P5077
  if318_end615:
    unless_null $P5078, vivi_319616
    nqp_get_sc_object $P5079, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5078, $P5079
  vivi_319616:
    $P110."push"($P5078)
    set fb_tmp_85, $P105
    repr_defined $I5018, fb_tmp_85
    unless $I5018 goto if320_else617 
    set $P5080, fb_tmp_85[0]
    set $P5082, $P5080
    goto if320_end618
  if320_else617:
    null $P5081
    set $P5082, $P5081
  if320_end618:
    unless_null $P5082, vivi_321619
    nqp_get_sc_object $P5083, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5082, $P5083
  vivi_321619:
    set $P111, $P5082
  if314_end608:
    set $P5084, $P107
    iter $P5086, $P107
  for_next620:
    unless $P5086, for_done622
    shift $P5088, $P5086
  for_redo621:
    .const 'Sub' $P5087 = 'cuid_194_1366375329.52446' 
    capture_lex $P5087
    $P5084 = $P5087($P5088)
    goto for_next620
  for_done622:
.annotate 'line', 811
    find_lex $P5089, "$op_name"
    set $S5025, $P5089
    iseq $I5019, $S5025, "if"
    unless $I5019 goto if322_else623 
    set $S5026, "unless "
    goto if322_end624
  if322_else623:
    set $S5026, "if "
  if322_end624:
.annotate 'line', 812
    set fb_tmp_86, $P105
    repr_defined $I5020, fb_tmp_86
    unless $I5020 goto if323_else625 
    set $P5090, fb_tmp_86[0]
    set $P5092, $P5090
    goto if323_end626
  if323_else625:
    null $P5091
    set $P5092, $P5091
  if323_end626:
    unless_null $P5092, vivi_324627
    nqp_get_sc_object $P5093, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5092, $P5093
  vivi_324627:
    $P5094 = $P5092."result"()
    set $S5027, $P5094
    concat $S5024, $S5026, $S5027
    concat $S5023, $S5024, " goto "
    set $N5010, $P101
    set $N5011, 2
    iseq $I5021, $N5010, $N5011
    unless $I5021 goto if325_else628 
.annotate 'line', 813
    $P5095 = $P104."result"()
    set $P5097, $P5095
    goto if325_end629
  if325_else628:
    $P5096 = $P103."result"()
    set $P5097, $P5096
  if325_end629:
    set $S5028, $P5097
    concat $S5022, $S5023, $S5028
    $P110."push_pirop"($S5022)
    unless $P109 goto if326_else630 
    .const 'Sub' $P5098 = 'cuid_195_1366375329.52446' 
    capture_lex $P5098
    $P5099 = $P5098()
    goto if326_end631
  if326_else630:
.annotate 'line', 821
.annotate 'line', 822
    set fb_tmp_88, $P105
    repr_defined $I5022, fb_tmp_88
    unless $I5022 goto if329_else635 
    set $P5100, fb_tmp_88[1]
    set $P5102, $P5100
    goto if329_end636
  if329_else635:
    null $P5101
    set $P5102, $P5101
  if329_end636:
    unless_null $P5102, vivi_330637
    nqp_get_sc_object $P5103, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5102, $P5103
  vivi_330637:
    $P5104 = $P110."push"($P5102)
  if326_end631:
    set $N5012, $P101
    set $N5013, 3
    iseq $I5023, $N5012, $N5013
    unless $I5023 goto if331_end639 
.annotate 'line', 826
.annotate 'line', 827
    $P5105 = $P104."result"()
    $P110."push_pirop"("goto", $P5105)
.annotate 'line', 828
    $P110."push"($P103)
    unless $P109 goto if332_else640 
    .const 'Sub' $P5106 = 'cuid_196_1366375329.52446' 
    capture_lex $P5106
    $P5107 = $P5106()
    set $P5113, $P5107
    goto if332_end641
  if332_else640:
.annotate 'line', 834
.annotate 'line', 835
    set fb_tmp_90, $P105
    repr_defined $I5024, fb_tmp_90
    unless $I5024 goto if335_else645 
    set $P5108, fb_tmp_90[2]
    set $P5110, $P5108
    goto if335_end646
  if335_else645:
    null $P5109
    set $P5110, $P5109
  if335_end646:
    unless_null $P5110, vivi_336647
    nqp_get_sc_object $P5111, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5110, $P5111
  vivi_336647:
    $P5112 = $P110."push"($P5110)
    set $P5113, $P5112
  if332_end641:
  if331_end639:
.annotate 'line', 840
    $P110."push"($P104)
.annotate 'line', 841
    set $P5114, $P109
    if $P109 goto unless337_end649 
    box $P5115, "null"
    set $P5114, $P5115
  unless337_end649:
    $P110."result"($P5114)
    .return ($P110) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_191_1366375329.52446") :anon :lex :outer("cuid_192_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 767
    .param pmc _lex_param_0 
    .lex "$*HAVE_IMM_ARG", $P101 
    .lex "$*IMM_ARG", $P102 
    .lex "$comp", $P103 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_70 
    .local pmc fb_tmp_71 
    .local pmc fb_tmp_72 
    .local pmc fb_tmp_73 
    .local pmc fb_tmp_74 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
.annotate 'line', 768
    $P5004 = _lex_param_0."arity"()
    set $N5001, $P5004
    set $N5002, 0
    isgt $I5001, $N5001, $N5002
    set $I5007, $I5001
    unless $I5001 goto if275_end540 
    get_id $I5004, _lex_param_0
    find_lex $P5005, "$op"
    set fb_tmp_70, $P5005
    repr_defined $I5006, fb_tmp_70
    unless $I5006 goto if276_else541 
    set $P5006, fb_tmp_70[0]
    set $P5008, $P5006
    goto if276_end542
  if276_else541:
    null $P5007
    set $P5008, $P5007
  if276_end542:
    unless_null $P5008, vivi_277543
    nqp_get_sc_object $P5009, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5008, $P5009
  vivi_277543:
    get_id $I5005, $P5008
    iseq $I5003, $I5004, $I5005
    not $I5002, $I5003
    set $I5007, $I5002
  if275_end540:
    box $P5010, $I5007
    set $P101, $P5010
.annotate 'line', 770
    find_lex $P5018, "$qastcomp"
    $P5019 = $P5018."as_post"(_lex_param_0)
    set $P103, $P5019
    find_lex $P5020, "@comp_ops"
    push $P5020, $P103
    find_lex $P5021, "@op_types"
.annotate 'line', 772
    find_lex $P5022, "$qastcomp"
    $P5023 = $P103."result"()
    $P5024 = $P5022."infer_type"($P5023)
    set $S5002, $P5024
    upcase $S5001, $S5002
    box $P5025, $S5001
    push $P5021, $P5025
    unless_null $P101, fallback551
    nqp_get_sc_object $P5027, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5026, $P5027
    set fb_tmp_72, $P5026
    repr_defined $I5009, fb_tmp_72
    unless $I5009 goto if282_else552 
    set $P5028, fb_tmp_72["$HAVE_IMM_ARG"]
    set $P5030, $P5028
    goto if282_end553
  if282_else552:
    null $P5029
    set $P5030, $P5029
  if282_end553:
    unless_null $P5030, vivi_283554
    nqp_get_sc_object $P5031, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5030, $P5031
  vivi_283554:
    unless_null $P5030, vivi_284555
    die "Contextual $*HAVE_IMM_ARG not found"
    box $P5032, "Contextual $*HAVE_IMM_ARG not found"
    set $P5030, $P5032
  vivi_284555:
    set $P101, $P5030
  fallback551:
    set $P5051, $P101
    unless $P101 goto if281_end550 
.annotate 'line', 773
    unless_null $P102, fallback558
    nqp_get_sc_object $P5034, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5033, $P5034
    set fb_tmp_73, $P5033
    repr_defined $I5010, fb_tmp_73
    unless $I5010 goto if286_else559 
    set $P5035, fb_tmp_73["$IMM_ARG"]
    set $P5037, $P5035
    goto if286_end560
  if286_else559:
    null $P5036
    set $P5037, $P5036
  if286_end560:
    unless_null $P5037, vivi_287561
    nqp_get_sc_object $P5038, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5037, $P5038
  vivi_287561:
    unless_null $P5037, vivi_288562
    die "Contextual $*IMM_ARG not found"
    box $P5039, "Contextual $*IMM_ARG not found"
    set $P5037, $P5039
  vivi_288562:
    set $P102, $P5037
  fallback558:
    unless $P102 goto if285_else556 
.annotate 'line', 774
    find_lex $P5040, "@im_args"
    unless_null $P102, fallback563
    nqp_get_sc_object $P5042, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5041, $P5042
    set fb_tmp_74, $P5041
    repr_defined $I5011, fb_tmp_74
    unless $I5011 goto if289_else564 
    set $P5043, fb_tmp_74["$IMM_ARG"]
    set $P5045, $P5043
    goto if289_end565
  if289_else564:
    null $P5044
    set $P5045, $P5044
  if289_end565:
    unless_null $P5045, vivi_290566
    nqp_get_sc_object $P5046, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5045, $P5046
  vivi_290566:
    unless_null $P5045, vivi_291567
    die "Contextual $*IMM_ARG not found"
    box $P5047, "Contextual $*IMM_ARG not found"
    set $P5045, $P5047
  vivi_291567:
    set $P102, $P5045
  fallback563:
    push $P5040, $P102
    set $P5050, $P5040
    goto if285_end557
  if285_else556:
.annotate 'line', 777
    find_lex $P5048, "$op_name"
    set $S5004, $P5048
    concat $S5003, $S5004, " block expects an argument, but there's no immediate block to take it"
    box $P5049, $S5003
    die $P5049
    set $P5050, $P5049
  if285_end557:
    set $P5051, $P5050
  if281_end550:
    .return ($P5051) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_193_1366375329.52446") :anon :lex :outer("cuid_192_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 794
    .lex "$coerced", $P101 
    .local pmc fb_tmp_83 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 795
    find_lex $P5002, "$qastcomp"
    find_lex $P5003, "@comp_ops"
    set fb_tmp_83, $P5003
    repr_defined $I5001, fb_tmp_83
    unless $I5001 goto if316_else611 
    set $P5004, fb_tmp_83[0]
    set $P5006, $P5004
    goto if316_end612
  if316_else611:
    null $P5005
    set $P5006, $P5005
  if316_end612:
    unless_null $P5006, vivi_317613
    nqp_get_sc_object $P5007, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5006, $P5007
  vivi_317613:
    find_lex $P5008, "$res_type"
    $P5009 = $P5002."coerce"($P5006, $P5008)
    set $P101, $P5009
.annotate 'line', 796
    find_lex $P5010, "$ops"
    $P5010."push"($P101)
.annotate 'line', 797
    find_lex $P5011, "$ops"
    find_lex $P5012, "$res_reg"
    $P5013 = $P101."result"()
    $P5011."push_pirop"("set", $P5012, $P5013)
    store_lex "$cond_result", $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_194_1366375329.52446") :anon :lex :outer("cuid_192_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 806
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 807
    find_lex $P5001, "$cond_result"
    $P5002 = $P5001."result"()
    $P5003 = _lex_param_0($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_195_1366375329.52446") :anon :lex :outer("cuid_192_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 816
    .lex "$then", $P101 
    .local pmc fb_tmp_87 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 817
    find_lex $P5002, "$qastcomp"
    find_lex $P5003, "@comp_ops"
    set fb_tmp_87, $P5003
    repr_defined $I5001, fb_tmp_87
    unless $I5001 goto if327_else632 
    set $P5004, fb_tmp_87[1]
    set $P5006, $P5004
    goto if327_end633
  if327_else632:
    null $P5005
    set $P5006, $P5005
  if327_end633:
    unless_null $P5006, vivi_328634
    nqp_get_sc_object $P5007, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5006, $P5007
  vivi_328634:
    find_lex $P5008, "$res_type"
    $P5009 = $P5002."coerce"($P5006, $P5008)
    set $P101, $P5009
.annotate 'line', 818
    find_lex $P5010, "$ops"
    $P5010."push"($P101)
.annotate 'line', 819
    find_lex $P5011, "$ops"
    find_lex $P5012, "$res_reg"
    $P5013 = $P101."result"()
    $P5014 = $P5011."push_pirop"("set", $P5012, $P5013)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_196_1366375329.52446") :anon :lex :outer("cuid_192_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 829
    .lex "$else", $P101 
    .local pmc fb_tmp_89 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 830
    find_lex $P5002, "$qastcomp"
    find_lex $P5003, "@comp_ops"
    set fb_tmp_89, $P5003
    repr_defined $I5001, fb_tmp_89
    unless $I5001 goto if333_else642 
    set $P5004, fb_tmp_89[2]
    set $P5006, $P5004
    goto if333_end643
  if333_else642:
    null $P5005
    set $P5006, $P5005
  if333_end643:
    unless_null $P5006, vivi_334644
    nqp_get_sc_object $P5007, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5006, $P5007
  vivi_334644:
    find_lex $P5008, "$res_type"
    $P5009 = $P5002."coerce"($P5006, $P5008)
    set $P101, $P5009
.annotate 'line', 831
    find_lex $P5010, "$ops"
    $P5010."push"($P101)
.annotate 'line', 832
    find_lex $P5011, "$ops"
    find_lex $P5012, "$res_reg"
    $P5013 = $P101."result"()
    $P5014 = $P5011."push_pirop"("set", $P5012, $P5013)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_198_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 847
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$exprpost", $P101 
    .lex "$vivipost", $P102 
    .lex "$vivlabel", $P103 
    .lex "$ops", $P104 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_91 
    .local pmc fb_tmp_92 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P104, $P5004
.annotate 'line', 848
    $P5005 = _lex_param_1."list"()
    set $N5001, $P5005
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if338_end654 
    box $P5006, "The 'ifnull' op expects two children"
    die $P5006
  if338_end654:
.annotate 'line', 852
    set fb_tmp_91, _lex_param_1
    repr_defined $I5002, fb_tmp_91
    unless $I5002 goto if339_else655 
    set $P5007, fb_tmp_91[0]
    set $P5009, $P5007
    goto if339_end656
  if339_else655:
    null $P5008
    set $P5009, $P5008
  if339_end656:
    unless_null $P5009, vivi_340657
    nqp_get_sc_object $P5010, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5009, $P5010
  vivi_340657:
    $P5011 = _lex_param_0."as_post"($P5009)
    set $P101, $P5011
.annotate 'line', 853
    set fb_tmp_92, _lex_param_1
    repr_defined $I5003, fb_tmp_92
    unless $I5003 goto if341_else658 
    set $P5012, fb_tmp_92[1]
    set $P5014, $P5012
    goto if341_end659
  if341_else658:
    null $P5013
    set $P5014, $P5013
  if341_end659:
    unless_null $P5014, vivi_342660
    nqp_get_sc_object $P5015, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5014, $P5015
  vivi_342660:
    $P5016 = _lex_param_0."as_post"($P5014)
.annotate 'line', 854
    $P5017 = $P101."result"()
    $P5018 = _lex_param_0."infer_type"($P5017)
    $P5019 = _lex_param_0."coerce"($P5016, $P5018)
    set $P102, $P5019
.annotate 'line', 855
    nqp_get_sc_object $P5020, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 38
    $P5021 = _lex_param_0."unique"("vivi_")
    $P5022 = $P5020."new"($P5021 :named("name"))
    set $P103, $P5022
.annotate 'line', 857
    nqp_get_sc_object $P5023, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5024 = $P5023."new"()
    set $P104, $P5024
.annotate 'line', 858
    $P104."push"($P101)
.annotate 'line', 859
    $P104."push_pirop"("unless_null", $P101, $P103)
.annotate 'line', 860
    $P104."push"($P102)
.annotate 'line', 861
    $P104."push_pirop"("set", $P101, $P102)
.annotate 'line', 862
    $P104."push"($P103)
.annotate 'line', 863
    $P5025 = $P101."result"()
    $P104."result"($P5025)
    .return ($P104) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_203_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 868
    .param pmc _lex_param_0 
    .const 'Sub' $P5009 = 'cuid_202_1366375329.52446' 
    capture_lex $P5009 
    .lex "$repness", _lex_param_0 
    new $P5004, 'QRPA'
    box $P5005, "while"
    push $P5004, $P5005
    box $P5006, "until"
    push $P5004, $P5006
    set $P5001, $P5004
    iter $P5003, $P5004
  for_next755:
    unless $P5003, for_done757
    shift $P5008, $P5003
  for_redo756:
    .const 'Sub' $P5007 = 'cuid_202_1366375329.52446' 
    capture_lex $P5007
    $P5001 = $P5007($P5008)
    goto for_next755
  for_done757:
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_202_1366375329.52446") :anon :lex :outer("cuid_203_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 869
    .param pmc _lex_param_0 
    .const 'Sub' $P5006 = 'cuid_201_1366375329.52446' 
    capture_lex $P5006 
    .lex "$op_name", _lex_param_0 
.annotate 'line', 870
    nqp_get_sc_object $P5001, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    find_lex $P5002, "$repness"
    set $S5002, $P5002
    set $S5003, _lex_param_0
    concat $S5001, $S5002, $S5003
    .const 'Sub' $P5004 = 'cuid_201_1366375329.52446' 
    capture_lex $P5004
    newclosure $P5003, $P5004
    $P5005 = $P5001."add_core_op"($S5001, $P5003, 1 :named("inlinable"))
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_201_1366375329.52446") :anon :lex :outer("cuid_202_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 870
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5129 = 'cuid_200_1366375329.52446' 
    capture_lex $P5129 
    .lex "$while_id", $P101 
    .lex "$test_lbl", $P102 
    .lex "$next_lbl", $P103 
    .lex "$redo_lbl", $P104 
    .lex "$hand_lbl", $P105 
    .lex "$done_lbl", $P106 
    .lex "@comp_ops", $P107 
    .lex "@comp_types", $P108 
    .lex "$handler", $P109 
    .lex "$*IMM_ARG", $P110 
    .lex "$res_type", $P111 
    .lex "$res_reg", $P112 
    .lex "$operands", $P113 
    .lex "$ops", $P114 
    .lex "$exc_reg", $P115 
    .lex "$coerced", $P116 
    .lex "$body", $P117 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_93 
    .local pmc fb_tmp_97 
    .local pmc fb_tmp_98 
    .local pmc fb_tmp_99 
    .local pmc fb_tmp_100 
    .local pmc fb_tmp_101 
    .local pmc fb_tmp_102 
    .local pmc fb_tmp_103 
    .local pmc fb_tmp_104 
    .local pmc fb_tmp_105 
    .local pmc fb_tmp_106 
    .local pmc fb_tmp_107 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P105, $P5005
    nqp_get_sc_object $P5006, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P106, $P5006
    new $P5007, 'QRPA'
    set $P107, $P5007
    new $P5008, 'QRPA'
    set $P108, $P5008
    nqp_get_sc_object $P5009, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P109, $P5009
    nqp_get_sc_object $P5010, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P110, $P5010
    nqp_get_sc_object $P5011, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P111, $P5011
    nqp_get_sc_object $P5012, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P112, $P5012
    nqp_get_sc_object $P5013, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P113, $P5013
    nqp_get_sc_object $P5014, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P114, $P5014
    nqp_get_sc_object $P5015, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P115, $P5015
    nqp_get_sc_object $P5016, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P116, $P5016
    nqp_get_sc_object $P5017, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P117, $P5017
.annotate 'line', 872
    find_lex $P5018, "$op_name"
    $P5019 = _lex_param_0."unique"($P5018)
    set $P101, $P5019
.annotate 'line', 873
    nqp_get_sc_object $P5020, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 38
    set $S5002, $P101
    concat $S5001, $S5002, "_test"
    $P5021 = $P5020."new"($S5001 :named("name"))
    set $P102, $P5021
.annotate 'line', 874
    nqp_get_sc_object $P5022, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 38
    set $S5004, $P101
    concat $S5003, $S5004, "_next"
    $P5023 = $P5022."new"($S5003 :named("name"))
    set $P103, $P5023
.annotate 'line', 875
    nqp_get_sc_object $P5024, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 38
    set $S5006, $P101
    concat $S5005, $S5006, "_redo"
    $P5025 = $P5024."new"($S5005 :named("name"))
    set $P104, $P5025
.annotate 'line', 876
    nqp_get_sc_object $P5026, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 38
    set $S5008, $P101
    concat $S5007, $S5008, "_handlers"
    $P5027 = $P5026."new"($S5007 :named("name"))
    set $P105, $P5027
.annotate 'line', 877
    nqp_get_sc_object $P5028, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 38
    set $S5010, $P101
    concat $S5009, $S5010, "_done"
    $P5029 = $P5028."new"($S5009 :named("name"))
    set $P106, $P5029
    box $P5030, 1
    set $P109, $P5030
.annotate 'line', 885
    $P5041 = _lex_param_1."list"()
    set $P5038, $P5041
    iter $P5040, $P5041
  for_next687:
    unless $P5040, for_done689
    shift $P5043, $P5040
  for_redo688:
    .const 'Sub' $P5042 = 'cuid_200_1366375329.52446' 
    capture_lex $P5042
    $P5038 = $P5042($P5043)
    goto for_next687
  for_done689:
    set fb_tmp_97, $P108
    repr_defined $I5003, fb_tmp_97
    unless $I5003 goto if359_else692 
    set $P5044, fb_tmp_97[0]
    set $P5046, $P5044
    goto if359_end693
  if359_else692:
    null $P5045
    set $P5046, $P5045
  if359_end693:
    unless_null $P5046, vivi_360694
    nqp_get_sc_object $P5047, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5046, $P5047
  vivi_360694:
    set $S5011, $P5046
    set fb_tmp_98, $P108
    repr_defined $I5004, fb_tmp_98
    unless $I5004 goto if361_else695 
    set $P5048, fb_tmp_98[1]
    set $P5050, $P5048
    goto if361_end696
  if361_else695:
    null $P5049
    set $P5050, $P5049
  if361_end696:
    unless_null $P5050, vivi_362697
    nqp_get_sc_object $P5051, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5050, $P5051
  vivi_362697:
    set $S5012, $P5050
    iseq $I5002, $S5011, $S5012
    unless $I5002 goto if358_else690 
    set fb_tmp_99, $P108
    repr_defined $I5005, fb_tmp_99
    unless $I5005 goto if363_else698 
    set $P5052, fb_tmp_99[0]
    set $P5054, $P5052
    goto if363_end699
  if363_else698:
    null $P5053
    set $P5054, $P5053
  if363_end699:
    unless_null $P5054, vivi_364700
    nqp_get_sc_object $P5055, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5054, $P5055
  vivi_364700:
    set $S5014, $P5054
    downcase $S5013, $S5014
    set $S5015, $S5013
    goto if358_end691
  if358_else690:
    set $S5015, "p"
  if358_end691:
    box $P5056, $S5015
    set $P111, $P5056
.annotate 'line', 898
    find_dynamic_lex $P5057, "$*REGALLOC"
    unless_null $P5057, fallback701
    nqp_get_sc_object $P5059, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5058, $P5059
    set fb_tmp_100, $P5058
    repr_defined $I5006, fb_tmp_100
    unless $I5006 goto if365_else702 
    set $P5060, fb_tmp_100["$REGALLOC"]
    set $P5062, $P5060
    goto if365_end703
  if365_else702:
    null $P5061
    set $P5062, $P5061
  if365_end703:
    unless_null $P5062, vivi_366704
    nqp_get_sc_object $P5063, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5062, $P5063
  vivi_366704:
    unless_null $P5062, vivi_367705
    die "Contextual $*REGALLOC not found"
    box $P5064, "Contextual $*REGALLOC not found"
    set $P5062, $P5064
  vivi_367705:
    set $P5057, $P5062
  fallback701:
    set $S5017, $P111
    concat $S5016, "fresh_", $S5017
    $P5065 = $P5057.$S5016()
    set $P112, $P5065
    set $N5001, $P107
    box $P5066, $N5001
    set $P113, $P5066
    set $N5002, $P113
    set $N5003, 2
    isne $I5007, $N5002, $N5003
    set $I5009, $I5007
    unless $I5007 goto if369_end709 
    set $N5004, $P113
    set $N5005, 3
    isne $I5008, $N5004, $N5005
    set $I5009, $I5008
  if369_end709:
    unless $I5009 goto if368_end707 
    find_lex $P5067, "$repness"
    set $S5021, $P5067
    concat $S5020, "Operation '", $S5021
    find_lex $P5068, "$op_name"
    set $S5022, $P5068
    concat $S5019, $S5020, $S5022
    concat $S5018, $S5019, "' needs 2 or 3 operands"
    box $P5069, $S5018
    die $P5069
  if368_end707:
.annotate 'line', 906
    nqp_get_sc_object $P5070, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5071 = $P5070."new"()
    set $P114, $P5071
.annotate 'line', 907
    $P114."result"($P112)
    unless $P109 goto if370_end711 
.annotate 'line', 910
.annotate 'line', 911
    find_dynamic_lex $P5072, "$*REGALLOC"
    unless_null $P5072, fallback712
    nqp_get_sc_object $P5074, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5073, $P5074
    set fb_tmp_101, $P5073
    repr_defined $I5010, fb_tmp_101
    unless $I5010 goto if371_else713 
    set $P5075, fb_tmp_101["$REGALLOC"]
    set $P5077, $P5075
    goto if371_end714
  if371_else713:
    null $P5076
    set $P5077, $P5076
  if371_end714:
    unless_null $P5077, vivi_372715
    nqp_get_sc_object $P5078, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5077, $P5078
  vivi_372715:
    unless_null $P5077, vivi_373716
    die "Contextual $*REGALLOC not found"
    box $P5079, "Contextual $*REGALLOC not found"
    set $P5077, $P5079
  vivi_373716:
    set $P5072, $P5077
  fallback712:
    $P5080 = $P5072."fresh_p"()
    set $P115, $P5080
.annotate 'line', 912
    $P114."push_pirop"("new", $P115, "'ExceptionHandler'", "[.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]")
.annotate 'line', 914
    $P114."push_pirop"("set_label", $P115, $P105)
.annotate 'line', 915
    $P5081 = $P114."push_pirop"("push_eh", $P115)
  if370_end711:
.annotate 'line', 920
    set fb_tmp_102, $P107
    repr_defined $I5011, fb_tmp_102
    unless $I5011 goto if374_else717 
    set $P5082, fb_tmp_102[0]
    set $P5084, $P5082
    goto if374_end718
  if374_else717:
    null $P5083
    set $P5084, $P5083
  if374_end718:
    unless_null $P5084, vivi_375719
    nqp_get_sc_object $P5085, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5084, $P5085
  vivi_375719:
    $P5086 = _lex_param_0."coerce"($P5084, $P111)
    set $P116, $P5086
    find_lex $P5087, "$repness"
    unless $P5087 goto if376_end721 
.annotate 'line', 921
    set $S5023, $P111
    iseq $I5012, $S5023, "p"
    set $I5014, $I5012
    if $I5012 goto unless378_end725 
    set $S5024, $P111
    iseq $I5013, $S5024, "s"
    set $I5014, $I5013
  unless378_end725:
    unless $I5014 goto if377_else722 
.annotate 'line', 925
.annotate 'line', 926
    $P5088 = $P114."push_pirop"("null", $P112)
    goto if377_end723
  if377_else722:
.annotate 'line', 928
.annotate 'line', 929
    $P5089 = $P114."push_pirop"("set", $P112, "0")
  if377_end723:
.annotate 'line', 931
    $P5090 = $P114."push_pirop"("goto", $P104)
  if376_end721:
.annotate 'line', 933
    $P114."push"($P102)
.annotate 'line', 934
    $P114."push"($P116)
.annotate 'line', 935
    $P5091 = $P116."result"()
    $P114."push_pirop"("set", $P112, $P5091)
.annotate 'line', 936
    find_lex $P5092, "$op_name"
    set $S5028, $P5092
    iseq $I5015, $S5028, "while"
    unless $I5015 goto if379_else726 
    set $S5029, "unless "
    goto if379_end727
  if379_else726:
    set $S5029, "if "
  if379_end727:
.annotate 'line', 937
    set fb_tmp_103, $P107
    repr_defined $I5016, fb_tmp_103
    unless $I5016 goto if380_else728 
    set $P5093, fb_tmp_103[0]
    set $P5095, $P5093
    goto if380_end729
  if380_else728:
    null $P5094
    set $P5095, $P5094
  if380_end729:
    unless_null $P5095, vivi_381730
    nqp_get_sc_object $P5096, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5095, $P5096
  vivi_381730:
    $P5097 = $P5095."result"()
    set $S5030, $P5097
    concat $S5027, $S5029, $S5030
    concat $S5026, $S5027, " goto "
    $P5098 = $P106."result"()
    set $S5031, $P5098
    concat $S5025, $S5026, $S5031
    $P114."push_pirop"($S5025)
    unless_null $P110, fallback733
    nqp_get_sc_object $P5100, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5099, $P5100
    set fb_tmp_104, $P5099
    repr_defined $I5017, fb_tmp_104
    unless $I5017 goto if383_else734 
    set $P5101, fb_tmp_104["$IMM_ARG"]
    set $P5103, $P5101
    goto if383_end735
  if383_else734:
    null $P5102
    set $P5103, $P5102
  if383_end735:
    unless_null $P5103, vivi_384736
    nqp_get_sc_object $P5104, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5103, $P5104
  vivi_384736:
    unless_null $P5103, vivi_385737
    die "Contextual $*IMM_ARG not found"
    box $P5105, "Contextual $*IMM_ARG not found"
    set $P5103, $P5105
  vivi_385737:
    set $P110, $P5103
  fallback733:
    unless $P110 goto if382_end732 
.annotate 'line', 940
.annotate 'line', 941
    unless_null $P110, fallback738
    nqp_get_sc_object $P5107, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5106, $P5107
    set fb_tmp_105, $P5106
    repr_defined $I5018, fb_tmp_105
    unless $I5018 goto if386_else739 
    set $P5108, fb_tmp_105["$IMM_ARG"]
    set $P5110, $P5108
    goto if386_end740
  if386_else739:
    null $P5109
    set $P5110, $P5109
  if386_end740:
    unless_null $P5110, vivi_387741
    nqp_get_sc_object $P5111, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5110, $P5111
  vivi_387741:
    unless_null $P5110, vivi_388742
    die "Contextual $*IMM_ARG not found"
    box $P5112, "Contextual $*IMM_ARG not found"
    set $P5110, $P5112
  vivi_388742:
    set $P110, $P5110
  fallback738:
    $P5113 = $P110($P112)
  if382_end732:
.annotate 'line', 945
    set fb_tmp_106, $P107
    repr_defined $I5019, fb_tmp_106
    unless $I5019 goto if389_else743 
    set $P5114, fb_tmp_106[1]
    set $P5116, $P5114
    goto if389_end744
  if389_else743:
    null $P5115
    set $P5116, $P5115
  if389_end744:
    unless_null $P5116, vivi_390745
    nqp_get_sc_object $P5117, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5116, $P5117
  vivi_390745:
    $P5118 = _lex_param_0."coerce"($P5116, $P111)
    set $P117, $P5118
.annotate 'line', 946
    $P114."push"($P104)
.annotate 'line', 947
    $P114."push"($P117)
.annotate 'line', 948
    $P5119 = $P117."result"()
    $P114."push_pirop"("set", $P112, $P5119)
    set $N5006, $P113
    set $N5007, 3
    iseq $I5020, $N5006, $N5007
    unless $I5020 goto if391_end747 
.annotate 'line', 952
.annotate 'line', 953
    $P114."push"($P103)
.annotate 'line', 954
    set fb_tmp_107, $P107
    repr_defined $I5021, fb_tmp_107
    unless $I5021 goto if392_else748 
    set $P5120, fb_tmp_107[2]
    set $P5122, $P5120
    goto if392_end749
  if392_else748:
    null $P5121
    set $P5122, $P5121
  if392_end749:
    unless_null $P5122, vivi_393750
    nqp_get_sc_object $P5123, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5122, $P5123
  vivi_393750:
    $P5124 = $P114."push"($P5122)
  if391_end747:
.annotate 'line', 958
    $P5125 = $P102."result"()
    set $S5033, $P5125
    concat $S5032, "goto ", $S5033
    $P114."push_pirop"($S5032)
    unless $P109 goto if394_else751 
.annotate 'line', 961
.annotate 'line', 962
    $P114."push"($P105)
.annotate 'line', 963
    set $S5036, $P115
    concat $S5035, "(", $S5036
    concat $S5034, $S5035, ")"
    $P114."push_pirop"(".get_results", $S5034)
.annotate 'line', 964
    $P114."push_pirop"("pop_upto_eh", $P115)
.annotate 'line', 965
    $P114."push_pirop"("getattribute", $P115, $P115, "'type'")
.annotate 'line', 966
    set $N5008, $P113
    set $N5009, 3
    iseq $I5022, $N5008, $N5009
    unless $I5022 goto if395_else753 
    set $P5126, $P103
    goto if395_end754
  if395_else753:
    set $P5126, $P102
  if395_end754:
    $P114."push_pirop"("eq", $P115, ".CONTROL_LOOP_NEXT", $P5126)
.annotate 'line', 968
    $P114."push_pirop"("eq", $P115, ".CONTROL_LOOP_REDO", $P104)
.annotate 'line', 969
    $P114."push"($P106)
.annotate 'line', 970
    $P5127 = $P114."push_pirop"("pop_eh")
    goto if394_end752
  if394_else751:
.annotate 'line', 972
.annotate 'line', 973
    $P5128 = $P114."push"($P106)
  if394_end752:
    .return ($P114) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_200_1366375329.52446") :anon :lex :outer("cuid_201_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 885
    .param pmc _lex_param_0 
    .const 'Sub' $P5006 = 'cuid_199_1366375329.52446' 
    capture_lex $P5006 
    .lex "$_", _lex_param_0 
.annotate 'line', 886
    $P5001 = _lex_param_0."named"()
    set $S5001, $P5001
    iseq $I5001, $S5001, "nohandler"
    unless $I5001 goto if346_else666 
    box $P5002, 0
    store_lex "$handler", $P5002
    set $P5005, $P5002
    goto if346_end667
  if346_else666:
    .const 'Sub' $P5003 = 'cuid_199_1366375329.52446' 
    capture_lex $P5003
    $P5004 = $P5003()
    set $P5005, $P5004
  if346_end667:
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_199_1366375329.52446") :anon :lex :outer("cuid_200_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 887
    .lex "$*HAVE_IMM_ARG", $P101 
    .lex "$comp", $P102 
    .local pmc fb_tmp_94 
    .local pmc fb_tmp_95 
    .local pmc fb_tmp_96 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
.annotate 'line', 888
    find_lex $P5003, "$_"
    $P5004 = $P5003."arity"()
    set $N5001, $P5004
    set $N5002, 0
    isgt $I5001, $N5001, $N5002
    set $I5006, $I5001
    unless $I5001 goto if347_end669 
    find_lex $P5005, "$_"
    get_id $I5003, $P5005
    find_lex $P5006, "$op"
    $P5007 = $P5006."list"()
    set fb_tmp_94, $P5007
    repr_defined $I5005, fb_tmp_94
    unless $I5005 goto if348_else670 
    set $P5008, fb_tmp_94[1]
    set $P5010, $P5008
    goto if348_end671
  if348_else670:
    null $P5009
    set $P5010, $P5009
  if348_end671:
    unless_null $P5010, vivi_349672
    nqp_get_sc_object $P5011, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5010, $P5011
  vivi_349672:
    get_id $I5004, $P5010
    iseq $I5002, $I5003, $I5004
    set $I5006, $I5002
  if347_end669:
    box $P5012, $I5006
    set $P101, $P5012
.annotate 'line', 889
    find_lex $P5013, "$qastcomp"
    find_lex $P5014, "$_"
    $P5015 = $P5013."as_post"($P5014)
    set $P102, $P5015
    find_lex $P5016, "@comp_ops"
    push $P5016, $P102
    find_lex $P5017, "@comp_types"
.annotate 'line', 891
    find_lex $P5018, "$qastcomp"
    $P5019 = $P102."result"()
    $P5020 = $P5018."infer_type"($P5019)
    push $P5017, $P5020
    unless_null $P101, fallback677
    nqp_get_sc_object $P5022, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5021, $P5022
    set fb_tmp_95, $P5021
    repr_defined $I5007, fb_tmp_95
    unless $I5007 goto if352_else678 
    set $P5023, fb_tmp_95["$HAVE_IMM_ARG"]
    set $P5025, $P5023
    goto if352_end679
  if352_else678:
    null $P5024
    set $P5025, $P5024
  if352_end679:
    unless_null $P5025, vivi_353680
    nqp_get_sc_object $P5026, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5025, $P5026
  vivi_353680:
    unless_null $P5025, vivi_354681
    die "Contextual $*HAVE_IMM_ARG not found"
    box $P5027, "Contextual $*HAVE_IMM_ARG not found"
    set $P5025, $P5027
  vivi_354681:
    set $P101, $P5025
  fallback677:
    set $P5036, $P101
    unless $P101 goto if351_end676 
    find_dynamic_lex $P5028, "$*IMM_ARG"
    unless_null $P5028, fallback682
    nqp_get_sc_object $P5030, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5029, $P5030
    set fb_tmp_96, $P5029
    repr_defined $I5009, fb_tmp_96
    unless $I5009 goto if355_else683 
    set $P5031, fb_tmp_96["$IMM_ARG"]
    set $P5033, $P5031
    goto if355_end684
  if355_else683:
    null $P5032
    set $P5033, $P5032
  if355_end684:
    unless_null $P5033, vivi_356685
    nqp_get_sc_object $P5034, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5033, $P5034
  vivi_356685:
    unless_null $P5033, vivi_357686
    die "Contextual $*IMM_ARG not found"
    box $P5035, "Contextual $*IMM_ARG not found"
    set $P5033, $P5035
  vivi_357686:
    set $P5028, $P5033
  fallback682:
    isfalse $I5008, $P5028
    box $P5037, $I5008
    set $P5036, $P5037
  if351_end676:
    set $P5040, $P5036
    unless $P5036 goto if350_end674 
.annotate 'line', 892
    find_lex $P5038, "$op_name"
    set $S5002, $P5038
    concat $S5001, $S5002, " block expects an argument, but there's no immediate block to take it"
    box $P5039, $S5001
    die $P5039
    set $P5040, $P5039
  if350_end674:
    .return ($P5040) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_205_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 981
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5112 = 'cuid_204_1366375329.52446' 
    capture_lex $P5112 
    .const 'Sub' $P5112 = 'cuid_206_1366375329.52446' 
    capture_lex $P5112 
    .lex "$handler", $P101 
    .lex "@operands", $P102 
    .lex "$res", $P103 
    .lex "$curval", $P104 
    .lex "$iter", $P105 
    .lex "$ops", $P106 
    .lex "$listpost", $P107 
    .lex "$blockpost", $P108 
    .lex "$exc_reg", $P109 
    .lex "$hand_lbl", $P110 
    .lex "$lbl_next", $P111 
    .lex "$lbl_redo", $P112 
    .lex "$lbl_done", $P113 
    .lex "@valreg", $P114 
    .lex "$arity", $P115 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_108 
    .local pmc fb_tmp_109 
    .local pmc fb_tmp_110 
    .local pmc fb_tmp_111 
    .local pmc fb_tmp_112 
    .local pmc fb_tmp_113 
    .local pmc fb_tmp_114 
    .local pmc fb_tmp_115 
    .local pmc fb_tmp_116 
    .local pmc fb_tmp_117 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    new $P5002, 'QRPA'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P105, $P5005
    nqp_get_sc_object $P5006, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P106, $P5006
    nqp_get_sc_object $P5007, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P107, $P5007
    nqp_get_sc_object $P5008, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P108, $P5008
    nqp_get_sc_object $P5009, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P109, $P5009
    nqp_get_sc_object $P5010, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P110, $P5010
    nqp_get_sc_object $P5011, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P111, $P5011
    nqp_get_sc_object $P5012, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P112, $P5012
    nqp_get_sc_object $P5013, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P113, $P5013
    new $P5014, 'QRPA'
    set $P114, $P5014
    nqp_get_sc_object $P5015, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P115, $P5015
    box $P5016, 1
    set $P101, $P5016
.annotate 'line', 984
    $P5020 = _lex_param_1."list"()
    set $P5017, $P5020
    iter $P5019, $P5020
  for_next763:
    unless $P5019, for_done765
    shift $P5022, $P5019
  for_redo764:
    .const 'Sub' $P5021 = 'cuid_204_1366375329.52446' 
    capture_lex $P5021
    $P5017 = $P5021($P5022)
    goto for_next763
  for_done765:
    set $N5001, $P102
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if397_end767 
.annotate 'line', 989
    box $P5023, "Operation 'for' needs 2 operands"
    die $P5023
  if397_end767:
    set fb_tmp_108, $P102
    repr_defined $I5003, fb_tmp_108
    unless $I5003 goto if399_else770 
    set $P5024, fb_tmp_108[1]
    set $P5026, $P5024
    goto if399_end771
  if399_else770:
    null $P5025
    set $P5026, $P5025
  if399_end771:
    unless_null $P5026, vivi_400772
    nqp_get_sc_object $P5027, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5026, $P5027
  vivi_400772:
    nqp_get_sc_object $P5028, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 103
    type_check $I5002, $P5026, $P5028
    if $I5002 goto unless398_end769 
.annotate 'line', 992
    box $P5029, "Operation 'for' expects a block as its second operand"
    die $P5029
  unless398_end769:
.annotate 'line', 995
    set fb_tmp_109, $P102
    repr_defined $I5005, fb_tmp_109
    unless $I5005 goto if402_else775 
    set $P5030, fb_tmp_109[1]
    set $P5032, $P5030
    goto if402_end776
  if402_else775:
    null $P5031
    set $P5032, $P5031
  if402_end776:
    unless_null $P5032, vivi_403777
    nqp_get_sc_object $P5033, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5032, $P5033
  vivi_403777:
    $P5034 = $P5032."blocktype"()
    set $S5001, $P5034
    iseq $I5004, $S5001, "immediate"
    unless $I5004 goto if401_end774 
.annotate 'line', 996
    set fb_tmp_110, $P102
    repr_defined $I5006, fb_tmp_110
    unless $I5006 goto if404_else778 
    set $P5035, fb_tmp_110[1]
    set $P5037, $P5035
    goto if404_end779
  if404_else778:
    null $P5036
    set $P5037, $P5036
  if404_end779:
    unless_null $P5037, vivi_405780
    nqp_get_sc_object $P5038, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5037, $P5038
  vivi_405780:
    $P5039 = $P5037."blocktype"("declaration")
  if401_end774:
.annotate 'line', 1000
    find_dynamic_lex $P5040, "$*REGALLOC"
    unless_null $P5040, fallback781
    nqp_get_sc_object $P5042, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5041, $P5042
    set fb_tmp_111, $P5041
    repr_defined $I5007, fb_tmp_111
    unless $I5007 goto if406_else782 
    set $P5043, fb_tmp_111["$REGALLOC"]
    set $P5045, $P5043
    goto if406_end783
  if406_else782:
    null $P5044
    set $P5045, $P5044
  if406_end783:
    unless_null $P5045, vivi_407784
    nqp_get_sc_object $P5046, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5045, $P5046
  vivi_407784:
    unless_null $P5045, vivi_408785
    die "Contextual $*REGALLOC not found"
    box $P5047, "Contextual $*REGALLOC not found"
    set $P5045, $P5047
  vivi_408785:
    set $P5040, $P5045
  fallback781:
    $P5048 = $P5040."fresh_p"()
    set $P103, $P5048
.annotate 'line', 1001
    find_dynamic_lex $P5049, "$*REGALLOC"
    unless_null $P5049, fallback786
    nqp_get_sc_object $P5051, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5050, $P5051
    set fb_tmp_112, $P5050
    repr_defined $I5008, fb_tmp_112
    unless $I5008 goto if409_else787 
    set $P5052, fb_tmp_112["$REGALLOC"]
    set $P5054, $P5052
    goto if409_end788
  if409_else787:
    null $P5053
    set $P5054, $P5053
  if409_end788:
    unless_null $P5054, vivi_410789
    nqp_get_sc_object $P5055, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5054, $P5055
  vivi_410789:
    unless_null $P5054, vivi_411790
    die "Contextual $*REGALLOC not found"
    box $P5056, "Contextual $*REGALLOC not found"
    set $P5054, $P5056
  vivi_411790:
    set $P5049, $P5054
  fallback786:
    $P5057 = $P5049."fresh_p"()
    set $P104, $P5057
.annotate 'line', 1002
    find_dynamic_lex $P5058, "$*REGALLOC"
    unless_null $P5058, fallback791
    nqp_get_sc_object $P5060, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5059, $P5060
    set fb_tmp_113, $P5059
    repr_defined $I5009, fb_tmp_113
    unless $I5009 goto if412_else792 
    set $P5061, fb_tmp_113["$REGALLOC"]
    set $P5063, $P5061
    goto if412_end793
  if412_else792:
    null $P5062
    set $P5063, $P5062
  if412_end793:
    unless_null $P5063, vivi_413794
    nqp_get_sc_object $P5064, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5063, $P5064
  vivi_413794:
    unless_null $P5063, vivi_414795
    die "Contextual $*REGALLOC not found"
    box $P5065, "Contextual $*REGALLOC not found"
    set $P5063, $P5065
  vivi_414795:
    set $P5058, $P5063
  fallback791:
    $P5066 = $P5058."fresh_p"()
    set $P105, $P5066
.annotate 'line', 1003
    nqp_get_sc_object $P5067, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5068 = $P5067."new"()
    set $P106, $P5068
.annotate 'line', 1004
    set fb_tmp_114, $P102
    repr_defined $I5010, fb_tmp_114
    unless $I5010 goto if415_else796 
    set $P5069, fb_tmp_114[0]
    set $P5071, $P5069
    goto if415_end797
  if415_else796:
    null $P5070
    set $P5071, $P5070
  if415_end797:
    unless_null $P5071, vivi_416798
    nqp_get_sc_object $P5072, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5071, $P5072
  vivi_416798:
    $P5073 = _lex_param_0."as_post"($P5071)
    $P5074 = _lex_param_0."coerce"($P5073, "P")
    set $P107, $P5074
.annotate 'line', 1005
    set fb_tmp_115, $P102
    repr_defined $I5011, fb_tmp_115
    unless $I5011 goto if417_else799 
    set $P5075, fb_tmp_115[1]
    set $P5077, $P5075
    goto if417_end800
  if417_else799:
    null $P5076
    set $P5077, $P5076
  if417_end800:
    unless_null $P5077, vivi_418801
    nqp_get_sc_object $P5078, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5077, $P5078
  vivi_418801:
    $P5079 = _lex_param_0."as_post"($P5077)
    $P5080 = _lex_param_0."coerce"($P5079, "P")
    set $P108, $P5080
.annotate 'line', 1006
    $P106."push"($P107)
.annotate 'line', 1009
    $P106."push_pirop"("set", $P103, $P107)
.annotate 'line', 1010
    $P106."push_pirop"("iter", $P105, $P107)
    unless $P101 goto if419_end803 
.annotate 'line', 1015
.annotate 'line', 1016
    find_dynamic_lex $P5081, "$*REGALLOC"
    unless_null $P5081, fallback804
    nqp_get_sc_object $P5083, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5082, $P5083
    set fb_tmp_116, $P5082
    repr_defined $I5012, fb_tmp_116
    unless $I5012 goto if420_else805 
    set $P5084, fb_tmp_116["$REGALLOC"]
    set $P5086, $P5084
    goto if420_end806
  if420_else805:
    null $P5085
    set $P5086, $P5085
  if420_end806:
    unless_null $P5086, vivi_421807
    nqp_get_sc_object $P5087, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5086, $P5087
  vivi_421807:
    unless_null $P5086, vivi_422808
    die "Contextual $*REGALLOC not found"
    box $P5088, "Contextual $*REGALLOC not found"
    set $P5086, $P5088
  vivi_422808:
    set $P5081, $P5086
  fallback804:
    $P5089 = $P5081."fresh_p"()
    set $P109, $P5089
.annotate 'line', 1017
    nqp_get_sc_object $P5090, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 38
    $P5091 = $P5090."new"("for_handlers" :named("name"))
    set $P110, $P5091
.annotate 'line', 1018
    $P106."push_pirop"("new", $P109, "'ExceptionHandler'", "[.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]")
.annotate 'line', 1020
    $P106."push_pirop"("set_label", $P109, $P110)
.annotate 'line', 1021
    $P5092 = $P106."push_pirop"("push_eh", $P109)
  if419_end803:
.annotate 'line', 1025
    nqp_get_sc_object $P5093, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 38
    $P5094 = $P5093."new"("for_next" :named("name"))
    set $P111, $P5094
.annotate 'line', 1026
    nqp_get_sc_object $P5095, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 38
    $P5096 = $P5095."new"("for_redo" :named("name"))
    set $P112, $P5096
.annotate 'line', 1027
    nqp_get_sc_object $P5097, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 38
    $P5098 = $P5097."new"("for_done" :named("name"))
    set $P113, $P5098
.annotate 'line', 1028
    $P106."push"($P111)
.annotate 'line', 1029
    $P106."push_pirop"("unless", $P105, $P113)
.annotate 'line', 1033
    set fb_tmp_117, $P102
    repr_defined $I5013, fb_tmp_117
    unless $I5013 goto if424_else811 
    set $P5099, fb_tmp_117[1]
    set $P5101, $P5099
    goto if424_end812
  if424_else811:
    null $P5100
    set $P5101, $P5100
  if424_end812:
    unless_null $P5101, vivi_425813
    nqp_get_sc_object $P5102, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5101, $P5102
  vivi_425813:
    $P5103 = $P5101."arity"()
    set $P5104, $P5103
    if $P5103 goto unless423_end810 
    box $P5105, 1
    set $P5104, $P5105
  unless423_end810:
    set $P115, $P5104
  while426_test814:
    set $N5003, $P115
    set $N5004, 0
    isgt $I5014, $N5003, $N5004
    box $P5109, $I5014
    set $P5108, $P5109
    unless $I5014 goto while426_done818 
  while426_redo816:
    .const 'Sub' $P5106 = 'cuid_206_1366375329.52446' 
    capture_lex $P5106
    $P5107 = $P5106()
    set $P5108, $P5107
    goto while426_test814 
  while426_done818:
.annotate 'line', 1042
    $P106."push"($P112)
.annotate 'line', 1043
    $P106."push"($P108)
.annotate 'line', 1044
    $P106."push_pirop"("call", $P108, $P114 :flat, $P103 :named("result"))
.annotate 'line', 1047
    $P106."push_pirop"("goto", $P111)
    unless $P101 goto if430_else824 
.annotate 'line', 1050
.annotate 'line', 1051
    $P106."push"($P110)
.annotate 'line', 1052
    set $S5004, $P109
    concat $S5003, "(", $S5004
    concat $S5002, $S5003, ")"
    $P106."push_pirop"(".get_results", $S5002)
.annotate 'line', 1053
    $P106."push_pirop"("pop_upto_eh", $P109)
.annotate 'line', 1054
    $P106."push_pirop"("getattribute", $P109, $P109, "'type'")
.annotate 'line', 1055
    $P106."push_pirop"("eq", $P109, ".CONTROL_LOOP_NEXT", $P111)
.annotate 'line', 1056
    $P106."push_pirop"("eq", $P109, ".CONTROL_LOOP_REDO", $P112)
.annotate 'line', 1057
    $P106."push"($P113)
.annotate 'line', 1058
    $P5110 = $P106."push_pirop"("pop_eh")
    goto if430_end825
  if430_else824:
.annotate 'line', 1060
.annotate 'line', 1061
    $P5111 = $P106."push"($P113)
  if430_end825:
.annotate 'line', 1065
    $P106."result"($P103)
    .return ($P106) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_204_1366375329.52446") :anon :lex :outer("cuid_205_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 984
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 985
    $P5001 = _lex_param_0."named"()
    set $S5001, $P5001
    iseq $I5001, $S5001, "nohandler"
    unless $I5001 goto if396_else761 
    box $P5002, 0
    store_lex "$handler", $P5002
    set $P5004, $P5002
    goto if396_end762
  if396_else761:
.annotate 'line', 986
    find_lex $P5003, "@operands"
    push $P5003, _lex_param_0
    set $P5004, $P5003
  if396_end762:
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_206_1366375329.52446") :anon :lex :outer("cuid_205_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1034
    .lex "$reg", $P101 
    .local pmc fb_tmp_118 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 1035
    find_dynamic_lex $P5002, "$*REGALLOC"
    unless_null $P5002, fallback819
    nqp_get_sc_object $P5004, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5003, $P5004
    set fb_tmp_118, $P5003
    repr_defined $I5001, fb_tmp_118
    unless $I5001 goto if427_else820 
    set $P5005, fb_tmp_118["$REGALLOC"]
    set $P5007, $P5005
    goto if427_end821
  if427_else820:
    null $P5006
    set $P5007, $P5006
  if427_end821:
    unless_null $P5007, vivi_428822
    nqp_get_sc_object $P5008, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5007, $P5008
  vivi_428822:
    unless_null $P5007, vivi_429823
    die "Contextual $*REGALLOC not found"
    box $P5009, "Contextual $*REGALLOC not found"
    set $P5007, $P5009
  vivi_429823:
    set $P5002, $P5007
  fallback819:
    $P5010 = $P5002."fresh_p"()
    set $P101, $P5010
.annotate 'line', 1036
    find_lex $P5011, "$ops"
    find_lex $P5012, "$iter"
    $P5011."push_pirop"("shift", $P101, $P5012)
    find_lex $P5013, "@valreg"
    push $P5013, $P101
    find_lex $P5014, "$arity"
    set $N5002, $P5014
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5015, $N5001
    store_lex "$arity", $P5015
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_207_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1069
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "$lbl", $P102 
    .lex "$dreg", $P103 
    .lex "$rreg", $P104 
    .lex "$test", $P105 
    .lex "$then", $P106 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_119 
    .local pmc fb_tmp_120 
    .local pmc fb_tmp_121 
    .local pmc fb_tmp_122 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P105, $P5005
    nqp_get_sc_object $P5006, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P106, $P5006
.annotate 'line', 1070
    $P5007 = _lex_param_1."list"()
    set $N5001, $P5007
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if431_end827 
    box $P5008, "Operation 'defor' needs 2 operands"
    die $P5008
  if431_end827:
.annotate 'line', 1073
    nqp_get_sc_object $P5009, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5010 = $P5009."new"()
    set $P101, $P5010
.annotate 'line', 1074
    nqp_get_sc_object $P5011, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 38
    $P5012 = $P5011."new"("defor" :named("name"))
    set $P102, $P5012
.annotate 'line', 1075
    find_dynamic_lex $P5013, "$*REGALLOC"
    unless_null $P5013, fallback828
    nqp_get_sc_object $P5015, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5014, $P5015
    set fb_tmp_119, $P5014
    repr_defined $I5002, fb_tmp_119
    unless $I5002 goto if432_else829 
    set $P5016, fb_tmp_119["$REGALLOC"]
    set $P5018, $P5016
    goto if432_end830
  if432_else829:
    null $P5017
    set $P5018, $P5017
  if432_end830:
    unless_null $P5018, vivi_433831
    nqp_get_sc_object $P5019, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5018, $P5019
  vivi_433831:
    unless_null $P5018, vivi_434832
    die "Contextual $*REGALLOC not found"
    box $P5020, "Contextual $*REGALLOC not found"
    set $P5018, $P5020
  vivi_434832:
    set $P5013, $P5018
  fallback828:
    $P5021 = $P5013."fresh_i"()
    set $P103, $P5021
.annotate 'line', 1076
    find_dynamic_lex $P5022, "$*REGALLOC"
    unless_null $P5022, fallback833
    nqp_get_sc_object $P5024, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5023, $P5024
    set fb_tmp_120, $P5023
    repr_defined $I5003, fb_tmp_120
    unless $I5003 goto if435_else834 
    set $P5025, fb_tmp_120["$REGALLOC"]
    set $P5027, $P5025
    goto if435_end835
  if435_else834:
    null $P5026
    set $P5027, $P5026
  if435_end835:
    unless_null $P5027, vivi_436836
    nqp_get_sc_object $P5028, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5027, $P5028
  vivi_436836:
    unless_null $P5027, vivi_437837
    die "Contextual $*REGALLOC not found"
    box $P5029, "Contextual $*REGALLOC not found"
    set $P5027, $P5029
  vivi_437837:
    set $P5022, $P5027
  fallback833:
    $P5030 = $P5022."fresh_p"()
    set $P104, $P5030
.annotate 'line', 1077
    set fb_tmp_121, _lex_param_1
    repr_defined $I5004, fb_tmp_121
    unless $I5004 goto if438_else838 
    set $P5031, fb_tmp_121[0]
    set $P5033, $P5031
    goto if438_end839
  if438_else838:
    null $P5032
    set $P5033, $P5032
  if438_end839:
    unless_null $P5033, vivi_439840
    nqp_get_sc_object $P5034, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5033, $P5034
  vivi_439840:
    $P5035 = _lex_param_0."as_post"($P5033)
    $P5036 = _lex_param_0."coerce"($P5035, "P")
    set $P105, $P5036
.annotate 'line', 1078
    set fb_tmp_122, _lex_param_1
    repr_defined $I5005, fb_tmp_122
    unless $I5005 goto if440_else841 
    set $P5037, fb_tmp_122[1]
    set $P5039, $P5037
    goto if440_end842
  if440_else841:
    null $P5038
    set $P5039, $P5038
  if440_end842:
    unless_null $P5039, vivi_441843
    nqp_get_sc_object $P5040, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5039, $P5040
  vivi_441843:
    $P5041 = _lex_param_0."as_post"($P5039)
    $P5042 = _lex_param_0."coerce"($P5041, "P")
    set $P106, $P5042
.annotate 'line', 1079
    $P101."push"($P105)
.annotate 'line', 1080
    $P101."push_pirop"("set", $P104, $P105)
.annotate 'line', 1081
    $P101."push_pirop"("defined", $P103, $P104)
.annotate 'line', 1082
    $P101."push_pirop"("if", $P103, $P102)
.annotate 'line', 1083
    $P101."push"($P106)
.annotate 'line', 1084
    $P101."push_pirop"("set", $P104, $P106)
.annotate 'line', 1085
    $P101."push"($P102)
.annotate 'line', 1086
    $P101."result"($P104)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_209_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1090
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5071 = 'cuid_208_1366375329.52446' 
    capture_lex $P5071 
    .const 'Sub' $P5071 = 'cuid_211_1366375329.52446' 
    capture_lex $P5071 
    .const 'Sub' $P5071 = 'cuid_212_1366375329.52446' 
    capture_lex $P5071 
    .lex "$ops", $P101 
    .lex "$falselabel", $P102 
    .lex "$endlabel", $P103 
    .lex "@childlist", $P104 
    .lex "$fpast", $P105 
    .lex "$i", $P106 
    .lex "$t", $P107 
    .lex "$u", $P108 
    .lex "$apast", $P109 
    .lex "$apost", $P110 
    .lex "$have_middle_child", $P111 
    .lex "$bpost", $P112 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_123 
    .local pmc fb_tmp_124 
    .local pmc fb_tmp_125 
    .local pmc fb_tmp_126 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
    new $P5004, 'QRPA'
    set $P104, $P5004
    nqp_get_sc_object $P5005, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P105, $P5005
    nqp_get_sc_object $P5006, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P106, $P5006
    nqp_get_sc_object $P5007, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P107, $P5007
    nqp_get_sc_object $P5008, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P108, $P5008
    nqp_get_sc_object $P5009, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P109, $P5009
    nqp_get_sc_object $P5010, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P110, $P5010
    nqp_get_sc_object $P5011, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P111, $P5011
    nqp_get_sc_object $P5012, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P112, $P5012
.annotate 'line', 1091
    nqp_get_sc_object $P5013, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5014 = $P5013."new"()
    set $P101, $P5014
.annotate 'line', 1092
    find_dynamic_lex $P5015, "$*REGALLOC"
    unless_null $P5015, fallback844
    nqp_get_sc_object $P5017, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5016, $P5017
    set fb_tmp_123, $P5016
    repr_defined $I5001, fb_tmp_123
    unless $I5001 goto if442_else845 
    set $P5018, fb_tmp_123["$REGALLOC"]
    set $P5020, $P5018
    goto if442_end846
  if442_else845:
    null $P5019
    set $P5020, $P5019
  if442_end846:
    unless_null $P5020, vivi_443847
    nqp_get_sc_object $P5021, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5020, $P5021
  vivi_443847:
    unless_null $P5020, vivi_444848
    die "Contextual $*REGALLOC not found"
    box $P5022, "Contextual $*REGALLOC not found"
    set $P5020, $P5022
  vivi_444848:
    set $P5015, $P5020
  fallback844:
    $P5023 = $P5015."fresh_p"()
    $P101."result"($P5023)
.annotate 'line', 1094
    nqp_get_sc_object $P5024, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 38
    $P5025 = $P5024."new"("xor_false" :named("name"))
    set $P102, $P5025
.annotate 'line', 1095
    nqp_get_sc_object $P5026, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 38
    $P5027 = $P5026."new"("xor_end" :named("name"))
    set $P103, $P5027
.annotate 'line', 1099
    $P5031 = _lex_param_1."list"()
    set $P5028, $P5031
    iter $P5030, $P5031
  for_next851:
    unless $P5030, for_done853
    shift $P5033, $P5030
  for_redo852:
    .const 'Sub' $P5032 = 'cuid_208_1366375329.52446' 
    capture_lex $P5032
    $P5028 = $P5032($P5033)
    goto for_next851
  for_done853:
.annotate 'line', 1108
    find_dynamic_lex $P5034, "$*REGALLOC"
    unless_null $P5034, fallback854
    nqp_get_sc_object $P5036, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5035, $P5036
    set fb_tmp_124, $P5035
    repr_defined $I5002, fb_tmp_124
    unless $I5002 goto if446_else855 
    set $P5037, fb_tmp_124["$REGALLOC"]
    set $P5039, $P5037
    goto if446_end856
  if446_else855:
    null $P5038
    set $P5039, $P5038
  if446_end856:
    unless_null $P5039, vivi_447857
    nqp_get_sc_object $P5040, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5039, $P5040
  vivi_447857:
    unless_null $P5039, vivi_448858
    die "Contextual $*REGALLOC not found"
    box $P5041, "Contextual $*REGALLOC not found"
    set $P5039, $P5041
  vivi_448858:
    set $P5034, $P5039
  fallback854:
    $P5042 = $P5034."fresh_i"()
    set $P106, $P5042
.annotate 'line', 1109
    find_dynamic_lex $P5043, "$*REGALLOC"
    unless_null $P5043, fallback859
    nqp_get_sc_object $P5045, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5044, $P5045
    set fb_tmp_125, $P5044
    repr_defined $I5003, fb_tmp_125
    unless $I5003 goto if449_else860 
    set $P5046, fb_tmp_125["$REGALLOC"]
    set $P5048, $P5046
    goto if449_end861
  if449_else860:
    null $P5047
    set $P5048, $P5047
  if449_end861:
    unless_null $P5048, vivi_450862
    nqp_get_sc_object $P5049, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5048, $P5049
  vivi_450862:
    unless_null $P5048, vivi_451863
    die "Contextual $*REGALLOC not found"
    box $P5050, "Contextual $*REGALLOC not found"
    set $P5048, $P5050
  vivi_451863:
    set $P5043, $P5048
  fallback859:
    $P5051 = $P5043."fresh_i"()
    set $P107, $P5051
.annotate 'line', 1110
    find_dynamic_lex $P5052, "$*REGALLOC"
    unless_null $P5052, fallback864
    nqp_get_sc_object $P5054, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5053, $P5054
    set fb_tmp_126, $P5053
    repr_defined $I5004, fb_tmp_126
    unless $I5004 goto if452_else865 
    set $P5055, fb_tmp_126["$REGALLOC"]
    set $P5057, $P5055
    goto if452_end866
  if452_else865:
    null $P5056
    set $P5057, $P5056
  if452_end866:
    unless_null $P5057, vivi_453867
    nqp_get_sc_object $P5058, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5057, $P5058
  vivi_453867:
    unless_null $P5057, vivi_454868
    die "Contextual $*REGALLOC not found"
    box $P5059, "Contextual $*REGALLOC not found"
    set $P5057, $P5059
  vivi_454868:
    set $P5052, $P5057
  fallback864:
    $P5060 = $P5052."fresh_i"()
    set $P108, $P5060
    shift $P5061, $P104
    set $P109, $P5061
.annotate 'line', 1113
    $P5062 = _lex_param_0."as_post"($P109)
    $P5063 = _lex_param_0."coerce"($P5062, "P")
    set $P110, $P5063
.annotate 'line', 1114
    $P101."push"($P110)
.annotate 'line', 1115
    $P101."push_pirop"("set", $P101, $P110)
.annotate 'line', 1116
    $P101."push_pirop"("istrue", $P107, $P110)
    box $P5064, 1
    set $P111, $P5064
  while455_test869:
    set $P5067, $P111
    unless $P111 goto while455_done873 
  while455_redo871:
    .const 'Sub' $P5065 = 'cuid_211_1366375329.52446' 
    capture_lex $P5065
    $P5066 = $P5065()
    set $P5067, $P5066
    goto while455_test869 
  while455_done873:
.annotate 'line', 1139
    $P101."push_pirop"("if", $P107, $P103)
.annotate 'line', 1140
    $P101."push_pirop"("set", $P101, $P112)
.annotate 'line', 1141
    $P101."push_pirop"("goto", $P103)
.annotate 'line', 1142
    $P101."push"($P102)
    unless $P105 goto if457_else876 
    .const 'Sub' $P5068 = 'cuid_212_1366375329.52446' 
    capture_lex $P5068
    $P5069 = $P5068()
    goto if457_end877
  if457_else876:
.annotate 'line', 1149
.annotate 'line', 1150
    $P5070 = $P101."push_pirop"("new", $P101, "[\"Undef\"]")
  if457_end877:
.annotate 'line', 1153
    $P101."push"($P103)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_208_1366375329.52446") :anon :lex :outer("cuid_209_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1099
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 1100
    $P5001 = _lex_param_0."named"()
    set $S5001, $P5001
    iseq $I5001, $S5001, "false"
    unless $I5001 goto if445_else849 
    store_lex "$fpast", _lex_param_0
    set $P5003, _lex_param_0
    goto if445_end850
  if445_else849:
.annotate 'line', 1103
    find_lex $P5002, "@childlist"
    push $P5002, _lex_param_0
    set $P5003, $P5002
  if445_end850:
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_211_1366375329.52446") :anon :lex :outer("cuid_209_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1120
    .const 'Sub' $P5025 = 'cuid_210_1366375329.52446' 
    capture_lex $P5025 
    .lex "$bpast", $P101 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    find_lex $P5003, "@childlist"
    shift $P5002, $P5003
    set $P101, $P5002
.annotate 'line', 1122
    find_lex $P5004, "$qastcomp"
    find_lex $P5005, "$qastcomp"
    $P5006 = $P5005."as_post"($P101)
    $P5007 = $P5004."coerce"($P5006, "P")
    store_lex "$bpost", $P5007
.annotate 'line', 1123
    find_lex $P5008, "$ops"
    find_lex $P5009, "$bpost"
    $P5008."push"($P5009)
.annotate 'line', 1124
    find_lex $P5010, "$ops"
    find_lex $P5011, "$u"
    find_lex $P5012, "$bpost"
    $P5010."push_pirop"("istrue", $P5011, $P5012)
.annotate 'line', 1125
    find_lex $P5013, "$ops"
    find_lex $P5014, "$i"
    find_lex $P5015, "$t"
    find_lex $P5016, "$u"
    $P5013."push_pirop"("and", $P5014, $P5015, $P5016)
.annotate 'line', 1126
    find_lex $P5017, "$ops"
    find_lex $P5018, "$i"
    find_lex $P5019, "$falselabel"
    $P5017."push_pirop"("if", $P5018, $P5019)
    find_lex $P5020, "@childlist"
    unless $P5020 goto if456_else874 
    .const 'Sub' $P5021 = 'cuid_210_1366375329.52446' 
    capture_lex $P5021
    $P5022 = $P5021()
    set $P5024, $P5022
    goto if456_end875
  if456_else874:
.annotate 'line', 1134
    box $P5023, 0
    store_lex "$have_middle_child", $P5023
    set $P5024, $P5023
  if456_end875:
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_210_1366375329.52446") :anon :lex :outer("cuid_211_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1127
    .lex "$truelabel", $P101 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 1128
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 38
    $P5003 = $P5002."new"("xor_true" :named("name"))
    set $P101, $P5003
.annotate 'line', 1129
    find_lex $P5004, "$ops"
    find_lex $P5005, "$t"
    $P5004."push_pirop"("if", $P5005, $P101)
.annotate 'line', 1130
    find_lex $P5006, "$ops"
    find_lex $P5007, "$ops"
    find_lex $P5008, "$bpost"
    $P5006."push_pirop"("set", $P5007, $P5008)
.annotate 'line', 1131
    find_lex $P5009, "$ops"
    find_lex $P5010, "$t"
    find_lex $P5011, "$u"
    $P5009."push_pirop"("set", $P5010, $P5011)
.annotate 'line', 1132
    find_lex $P5012, "$ops"
    $P5013 = $P5012."push"($P101)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_212_1366375329.52446") :anon :lex :outer("cuid_209_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1144
    .lex "$fpost", $P101 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 1145
    find_lex $P5002, "$qastcomp"
    find_lex $P5003, "$qastcomp"
    find_lex $P5004, "$fpast"
    $P5005 = $P5003."as_post"($P5004)
    $P5006 = $P5002."coerce"($P5005, "P")
    set $P101, $P5006
.annotate 'line', 1146
    find_lex $P5007, "$ops"
    $P5007."push"($P101)
.annotate 'line', 1147
    find_lex $P5008, "$ops"
    find_lex $P5009, "$ops"
    $P5010 = $P5008."push_pirop"("set", $P5009, $P101)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_213_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1159
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "@children", $P101 
    .lex "$*BINDVAL", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_127 
    .local pmc fb_tmp_128 
    .local pmc fb_tmp_129 
    new $P5001, 'QRPA'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
.annotate 'line', 1161
    $P5003 = _lex_param_1."list"()
    set $P101, $P5003
    set $N5001, $P101
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if458_end879 
.annotate 'line', 1162
    box $P5004, "A 'bind' op must have exactly two children"
    die $P5004
  if458_end879:
    set fb_tmp_127, $P101
    repr_defined $I5003, fb_tmp_127
    unless $I5003 goto if460_else882 
    set $P5005, fb_tmp_127[0]
    set $P5007, $P5005
    goto if460_end883
  if460_else882:
    null $P5006
    set $P5007, $P5006
  if460_end883:
    unless_null $P5007, vivi_461884
    nqp_get_sc_object $P5008, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5007, $P5008
  vivi_461884:
    nqp_get_sc_object $P5009, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 71
    type_check $I5002, $P5007, $P5009
    if $I5002 goto unless459_end881 
.annotate 'line', 1165
    box $P5010, "First child of a 'bind' op must be a QAST::Var"
    die $P5010
  unless459_end881:
    set fb_tmp_128, $P101
    repr_defined $I5004, fb_tmp_128
    unless $I5004 goto if462_else885 
    set $P5011, fb_tmp_128[1]
    set $P5013, $P5011
    goto if462_end886
  if462_else885:
    null $P5012
    set $P5013, $P5012
  if462_end886:
    unless_null $P5013, vivi_463887
    nqp_get_sc_object $P5014, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5013, $P5014
  vivi_463887:
    set $P102, $P5013
.annotate 'line', 1172
    set fb_tmp_129, $P101
    repr_defined $I5005, fb_tmp_129
    unless $I5005 goto if464_else888 
    set $P5015, fb_tmp_129[0]
    set $P5017, $P5015
    goto if464_end889
  if464_else888:
    null $P5016
    set $P5017, $P5016
  if464_end889:
    unless_null $P5017, vivi_465890
    nqp_get_sc_object $P5018, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5017, $P5018
  vivi_465890:
    $P5019 = _lex_param_0."as_post"($P5017)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_215_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1200
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5039 = 'cuid_214_1366375329.52446' 
    capture_lex $P5039 
    .const 'Sub' $P5039 = 'cuid_216_1366375329.52446' 
    capture_lex $P5039 
    .lex "$callee", $P101 
    .lex "@args", $P102 
    .lex "$ops", $P103 
    .lex "@pos_arg_results", $P104 
    .lex "@named_arg_results", $P105 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_130 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    new $P5002, 'QRPA'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
    new $P5004, 'QRPA'
    set $P104, $P5004
    new $P5005, 'QRPA'
    set $P105, $P5005
.annotate 'line', 1203
    $P5007 = _lex_param_1."list"()
    repr_clone $P5006, $P5007
    set $P102, $P5006
.annotate 'line', 1204
    $P5008 = _lex_param_1."name"()
    unless $P5008 goto if466_else891 
.annotate 'line', 1205
    nqp_get_sc_object $P5009, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5010 = _lex_param_1."name"()
    $P5011 = _lex_param_0."escape"($P5010)
    $P5012 = $P5009."new"($P5011 :named("result"))
    set $P101, $P5012
    goto if466_end892
  if466_else891:
    set $N5001, $P102
    unless $N5001 goto if467_else893 
.annotate 'line', 1207
.annotate 'line', 1208
    shift $P5013, $P102
    $P5014 = _lex_param_0."as_post"($P5013)
    set $P101, $P5014
    set $P5016, $P101
    goto if467_end894
  if467_else893:
.annotate 'line', 1210
    box $P5015, "No name for call and empty children list"
    die $P5015
    set $P5016, $P5015
  if467_end894:
  if466_end892:
.annotate 'line', 1215
    nqp_get_sc_object $P5017, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5018 = $P5017."new"()
    set $P103, $P5018
.annotate 'line', 1216
    $P5019 = _lex_param_1."node"()
    unless $P5019 goto if468_end896 
    $P5020 = _lex_param_1."node"()
    $P5021 = $P103."node"($P5020)
  if468_end896:
    set $P5022, $P102
    iter $P5024, $P102
  for_next897:
    unless $P5024, for_done899
    shift $P5026, $P5024
  for_redo898:
    .const 'Sub' $P5025 = 'cuid_214_1366375329.52446' 
    capture_lex $P5025
    $P5022 = $P5025($P5026)
    goto for_next897
  for_done899:
.annotate 'line', 1224
    $P103."push"($P101)
    find_dynamic_lex $P5027, "$*WANT"
    unless_null $P5027, fallback902
    nqp_get_sc_object $P5029, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5028, $P5029
    set fb_tmp_130, $P5028
    repr_defined $I5002, fb_tmp_130
    unless $I5002 goto if470_else903 
    set $P5030, fb_tmp_130["$WANT"]
    set $P5032, $P5030
    goto if470_end904
  if470_else903:
    null $P5031
    set $P5032, $P5031
  if470_end904:
    unless_null $P5032, vivi_471905
    nqp_get_sc_object $P5033, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5032, $P5033
  vivi_471905:
    unless_null $P5032, vivi_472906
    die "Contextual $*WANT not found"
    box $P5034, "Contextual $*WANT not found"
    set $P5032, $P5034
  vivi_472906:
    set $P5027, $P5032
  fallback902:
    set $S5001, $P5027
    iseq $I5001, $S5001, "v"
    unless $I5001 goto if469_else900 
.annotate 'line', 1225
.annotate 'line', 1226
    $P5035 = $P101."result"()
    $P5036 = $P103."push_pirop"("call", $P5035, $P104 :flat, $P105 :flat)
    goto if469_end901
  if469_else900:
    .const 'Sub' $P5037 = 'cuid_216_1366375329.52446' 
    capture_lex $P5037
    $P5038 = $P5037()
  if469_end901:
    .return ($P103) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_214_1366375329.52446") :anon :lex :outer("cuid_215_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1219
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 1220
    find_lex $P5001, "$qastcomp"
    find_lex $P5002, "$ops"
    find_lex $P5003, "@pos_arg_results"
    find_lex $P5004, "@named_arg_results"
    $P5005 = "&handle_arg"(_lex_param_0, $P5001, $P5002, $P5003, $P5004)
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_216_1366375329.52446") :anon :lex :outer("cuid_215_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1228
    .lex "$res_type", $P101 
    .lex "$res_reg", $P102 
    .local pmc fb_tmp_131 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
.annotate 'line', 1229
    find_lex $P5003, "$qastcomp"
    find_lex $P5004, "$op"
    $P5005 = $P5004."returns"()
    $P5006 = $P5003."type_to_register_type"($P5005)
    set $P101, $P5006
.annotate 'line', 1230
    find_dynamic_lex $P5007, "$*REGALLOC"
    unless_null $P5007, fallback907
    nqp_get_sc_object $P5009, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5008, $P5009
    set fb_tmp_131, $P5008
    repr_defined $I5001, fb_tmp_131
    unless $I5001 goto if473_else908 
    set $P5010, fb_tmp_131["$REGALLOC"]
    set $P5012, $P5010
    goto if473_end909
  if473_else908:
    null $P5011
    set $P5012, $P5011
  if473_end909:
    unless_null $P5012, vivi_474910
    nqp_get_sc_object $P5013, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5012, $P5013
  vivi_474910:
    unless_null $P5012, vivi_475911
    die "Contextual $*REGALLOC not found"
    box $P5014, "Contextual $*REGALLOC not found"
    set $P5012, $P5014
  vivi_475911:
    set $P5007, $P5012
  fallback907:
    set $S5003, $P101
    downcase $S5002, $S5003
    concat $S5001, "fresh_", $S5002
    $P5015 = $P5007.$S5001()
    set $P102, $P5015
.annotate 'line', 1231
    find_lex $P5016, "$ops"
    find_lex $P5017, "$callee"
    $P5018 = $P5017."result"()
    find_lex $P5019, "@pos_arg_results"
    find_lex $P5020, "@named_arg_results"
    $P5016."push_pirop"("call", $P5018, $P5019 :flat, $P5020 :flat, $P102 :named("result"))
.annotate 'line', 1232
    find_lex $P5021, "$ops"
    $P5022 = $P5021."result"($P102)
    .return ($P5022) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_218_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1236
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5042 = 'cuid_217_1366375329.52446' 
    capture_lex $P5042 
    .const 'Sub' $P5042 = 'cuid_219_1366375329.52446' 
    capture_lex $P5042 
    .const 'Sub' $P5042 = 'cuid_220_1366375329.52446' 
    capture_lex $P5042 
    .lex "@args", $P101 
    .lex "$name", $P102 
    .lex "$ops", $P103 
    .lex "@pos_arg_results", $P104 
    .lex "@named_arg_results", $P105 
    .lex "$inv", $P106 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_132 
    new $P5001, 'QRPA'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
    new $P5004, 'QRPA'
    set $P104, $P5004
    new $P5005, 'QRPA'
    set $P105, $P5005
    nqp_get_sc_object $P5006, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P106, $P5006
.annotate 'line', 1238
    $P5008 = _lex_param_1."list"()
    repr_clone $P5007, $P5008
    set $P101, $P5007
    set $N5001, $P101
    set $N5002, 0
    iseq $I5001, $N5001, $N5002
    unless $I5001 goto if476_end913 
.annotate 'line', 1239
    box $P5009, "Method call node requires at least one child"
    die $P5009
  if476_end913:
.annotate 'line', 1245
    $P5010 = _lex_param_1."name"()
    unless $P5010 goto if477_else914 
.annotate 'line', 1246
    nqp_get_sc_object $P5011, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5012 = _lex_param_1."name"()
    $P5013 = _lex_param_0."escape"($P5012)
    $P5014 = $P5011."new"($P5013 :named("result"))
    set $P102, $P5014
    goto if477_end915
  if477_else914:
    set $N5003, $P101
    set $N5004, 2
    isge $I5002, $N5003, $N5004
    unless $I5002 goto if478_else916 
    .const 'Sub' $P5015 = 'cuid_217_1366375329.52446' 
    capture_lex $P5015
    $P5016 = $P5015()
    set $P5018, $P5016
    goto if478_end917
  if478_else916:
.annotate 'line', 1253
    box $P5017, "Method call must either supply a name or have a child node that evaluates to the name"
    die $P5017
    set $P5018, $P5017
  if478_end917:
  if477_end915:
.annotate 'line', 1258
    nqp_get_sc_object $P5019, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5020 = $P5019."new"()
    set $P103, $P5020
.annotate 'line', 1259
    $P5021 = _lex_param_1."node"()
    unless $P5021 goto if479_end919 
    $P5022 = _lex_param_1."node"()
    $P5023 = $P103."node"($P5022)
  if479_end919:
    box $P5024, 1
    set $P106, $P5024
    set $P5025, $P101
    iter $P5027, $P101
  for_next922:
    unless $P5027, for_done924
    shift $P5029, $P5027
  for_redo923:
    .const 'Sub' $P5028 = 'cuid_219_1366375329.52446' 
    capture_lex $P5028
    $P5025 = $P5028($P5029)
    goto for_next922
  for_done924:
.annotate 'line', 1274
    $P103."push"($P102)
    find_dynamic_lex $P5030, "$*WANT"
    unless_null $P5030, fallback927
    nqp_get_sc_object $P5032, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5031, $P5032
    set fb_tmp_132, $P5031
    repr_defined $I5004, fb_tmp_132
    unless $I5004 goto if482_else928 
    set $P5033, fb_tmp_132["$WANT"]
    set $P5035, $P5033
    goto if482_end929
  if482_else928:
    null $P5034
    set $P5035, $P5034
  if482_end929:
    unless_null $P5035, vivi_483930
    nqp_get_sc_object $P5036, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5035, $P5036
  vivi_483930:
    unless_null $P5035, vivi_484931
    die "Contextual $*WANT not found"
    box $P5037, "Contextual $*WANT not found"
    set $P5035, $P5037
  vivi_484931:
    set $P5030, $P5035
  fallback927:
    set $S5001, $P5030
    iseq $I5003, $S5001, "v"
    unless $I5003 goto if481_else925 
.annotate 'line', 1275
.annotate 'line', 1276
    $P5038 = $P102."result"()
    $P5039 = $P103."push_pirop"("callmethod", $P5038, $P104 :flat, $P105 :flat)
    goto if481_end926
  if481_else925:
    .const 'Sub' $P5040 = 'cuid_220_1366375329.52446' 
    capture_lex $P5040
    $P5041 = $P5040()
  if481_end926:
    .return ($P103) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_217_1366375329.52446") :anon :lex :outer("cuid_218_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1248
    .lex "$invocant", $P101 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    find_lex $P5003, "@args"
    shift $P5002, $P5003
    set $P101, $P5002
.annotate 'line', 1250
    find_lex $P5004, "$qastcomp"
    find_lex $P5005, "$qastcomp"
    find_lex $P5007, "@args"
    shift $P5006, $P5007
    $P5008 = $P5005."as_post"($P5006)
    $P5009 = $P5004."coerce"($P5008, "s")
    store_lex "$name", $P5009
    find_lex $P5010, "@args"
    unshift $P5010, $P101
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_219_1366375329.52446") :anon :lex :outer("cuid_218_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1263
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "$inv"
    unless $P5001 goto if480_else920 
.annotate 'line', 1264
.annotate 'line', 1265
    find_lex $P5002, "$qastcomp"
    find_lex $P5003, "$ops"
    find_lex $P5004, "@pos_arg_results"
    find_lex $P5005, "@named_arg_results"
    "&handle_arg"(_lex_param_0, $P5002, $P5003, $P5004, $P5005, "P" :named("coerce"))
    box $P5006, 0
    store_lex "$inv", $P5006
    set $P5012, $P5006
    goto if480_end921
  if480_else920:
.annotate 'line', 1268
.annotate 'line', 1269
    find_lex $P5007, "$qastcomp"
    find_lex $P5008, "$ops"
    find_lex $P5009, "@pos_arg_results"
    find_lex $P5010, "@named_arg_results"
    $P5011 = "&handle_arg"(_lex_param_0, $P5007, $P5008, $P5009, $P5010)
    set $P5012, $P5011
  if480_end921:
    .return ($P5012) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_220_1366375329.52446") :anon :lex :outer("cuid_218_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1278
    .lex "$res_type", $P101 
    .lex "$res_reg", $P102 
    .local pmc fb_tmp_133 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
.annotate 'line', 1279
    find_lex $P5003, "$qastcomp"
    find_lex $P5004, "$op"
    $P5005 = $P5004."returns"()
    $P5006 = $P5003."type_to_register_type"($P5005)
    set $P101, $P5006
.annotate 'line', 1280
    find_dynamic_lex $P5007, "$*REGALLOC"
    unless_null $P5007, fallback932
    nqp_get_sc_object $P5009, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5008, $P5009
    set fb_tmp_133, $P5008
    repr_defined $I5001, fb_tmp_133
    unless $I5001 goto if485_else933 
    set $P5010, fb_tmp_133["$REGALLOC"]
    set $P5012, $P5010
    goto if485_end934
  if485_else933:
    null $P5011
    set $P5012, $P5011
  if485_end934:
    unless_null $P5012, vivi_486935
    nqp_get_sc_object $P5013, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5012, $P5013
  vivi_486935:
    unless_null $P5012, vivi_487936
    die "Contextual $*REGALLOC not found"
    box $P5014, "Contextual $*REGALLOC not found"
    set $P5012, $P5014
  vivi_487936:
    set $P5007, $P5012
  fallback932:
    set $S5003, $P101
    downcase $S5002, $S5003
    concat $S5001, "fresh_", $S5002
    $P5015 = $P5007.$S5001()
    set $P102, $P5015
.annotate 'line', 1281
    find_lex $P5016, "$ops"
    find_lex $P5017, "$name"
    $P5018 = $P5017."result"()
    find_lex $P5019, "@pos_arg_results"
    find_lex $P5020, "@named_arg_results"
    $P5016."push_pirop"("callmethod", $P5018, $P5019 :flat, $P5020 :flat, $P102 :named("result"))
.annotate 'line', 1282
    find_lex $P5021, "$ops"
    $P5022 = $P5021."result"($P102)
    .return ($P5022) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_221_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1288
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$label1", $P101 
    .lex "$label2", $P102 
    .lex "$lexname", $P103 
    .lex "$ops", $P104 
    .lex "$handler", $P105 
    .lex "$cpost", $P106 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_134 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P105, $P5005
    nqp_get_sc_object $P5006, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P106, $P5006
.annotate 'line', 1289
    nqp_get_sc_object $P5007, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 38
    $P5008 = $P5007."new"("lexotic_" :named("name"))
    set $P101, $P5008
.annotate 'line', 1290
    nqp_get_sc_object $P5009, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 38
    $P5010 = $P5009."new"("lexotic_" :named("name"))
    set $P102, $P5010
.annotate 'line', 1291
    $P5011 = _lex_param_1."name"()
    $P5012 = _lex_param_0."escape"($P5011)
    set $P103, $P5012
.annotate 'line', 1293
    nqp_get_sc_object $P5013, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5014 = $P5013."new"()
    set $P104, $P5014
.annotate 'line', 1294
    find_dynamic_lex $P5015, "$*BLOCK"
    unless_null $P5015, fallback937
    nqp_get_sc_object $P5017, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5016, $P5017
    set fb_tmp_134, $P5016
    repr_defined $I5001, fb_tmp_134
    unless $I5001 goto if488_else938 
    set $P5018, fb_tmp_134["$BLOCK"]
    set $P5020, $P5018
    goto if488_end939
  if488_else938:
    null $P5019
    set $P5020, $P5019
  if488_end939:
    unless_null $P5020, vivi_489940
    nqp_get_sc_object $P5021, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5020, $P5021
  vivi_489940:
    unless_null $P5020, vivi_490941
    die "Contextual $*BLOCK not found"
    box $P5022, "Contextual $*BLOCK not found"
    set $P5020, $P5022
  vivi_490941:
    set $P5015, $P5020
  fallback937:
    $P5023 = $P5015."fresh_lex_p"()
    set $P105, $P5023
.annotate 'line', 1295
    $P104."push_pirop"("root_new", $P105, "['parrot';'Continuation']")
.annotate 'line', 1296
    $P104."push_pirop"("set_label", $P105, $P101)
.annotate 'line', 1297
    $P104."push_pirop"(".lex", $P103, $P105)
.annotate 'line', 1299
    $P5024 = _lex_param_1."list"()
    $P5025 = _lex_param_0."compile_all_the_stmts"($P5024)
    $P5026 = _lex_param_0."coerce"($P5025, "P")
    set $P106, $P5026
.annotate 'line', 1300
    $P104."push"($P106)
.annotate 'line', 1301
    $P104."result"($P106)
.annotate 'line', 1303
    $P104."push_pirop"("goto", $P102)
.annotate 'line', 1304
    $P104."push"($P101)
.annotate 'line', 1305
    $P5027 = $P104."result"()
    set $S5003, $P5027
    concat $S5002, "(", $S5003
    concat $S5001, $S5002, ")"
    $P104."push_pirop"(".get_results", $S5001)
.annotate 'line', 1306
    $P104."push"($P102)
    .return ($P104) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_222_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1312
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$reg", $P101 
    .lex "$ops", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_135 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
.annotate 'line', 1313
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback942
    nqp_get_sc_object $P5005, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5004, $P5005
    set fb_tmp_135, $P5004
    repr_defined $I5001, fb_tmp_135
    unless $I5001 goto if491_else943 
    set $P5006, fb_tmp_135["$REGALLOC"]
    set $P5008, $P5006
    goto if491_end944
  if491_else943:
    null $P5007
    set $P5008, $P5007
  if491_end944:
    unless_null $P5008, vivi_492945
    nqp_get_sc_object $P5009, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5008, $P5009
  vivi_492945:
    unless_null $P5008, vivi_493946
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_493946:
    set $P5003, $P5008
  fallback942:
    $P5011 = $P5003."fresh_p"()
    set $P101, $P5011
.annotate 'line', 1314
    nqp_get_sc_object $P5012, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5013 = $P5012."new"()
    set $P102, $P5013
.annotate 'line', 1315
    $P102."push_pirop"("getinterp", $P101)
.annotate 'line', 1316
    set $S5002, $P101
    concat $S5001, $S5002, "['context']"
    $P102."push_pirop"("set", $P101, $S5001)
.annotate 'line', 1317
    $P102."result"($P101)
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_223_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1320
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$reg", $P101 
    .lex "$ops", $P102 
    .lex "$ctxpost", $P103 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_136 
    .local pmc fb_tmp_137 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
.annotate 'line', 1321
    find_dynamic_lex $P5004, "$*REGALLOC"
    unless_null $P5004, fallback947
    nqp_get_sc_object $P5006, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5005, $P5006
    set fb_tmp_136, $P5005
    repr_defined $I5001, fb_tmp_136
    unless $I5001 goto if494_else948 
    set $P5007, fb_tmp_136["$REGALLOC"]
    set $P5009, $P5007
    goto if494_end949
  if494_else948:
    null $P5008
    set $P5009, $P5008
  if494_end949:
    unless_null $P5009, vivi_495950
    nqp_get_sc_object $P5010, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5009, $P5010
  vivi_495950:
    unless_null $P5009, vivi_496951
    die "Contextual $*REGALLOC not found"
    box $P5011, "Contextual $*REGALLOC not found"
    set $P5009, $P5011
  vivi_496951:
    set $P5004, $P5009
  fallback947:
    $P5012 = $P5004."fresh_p"()
    set $P101, $P5012
.annotate 'line', 1322
    nqp_get_sc_object $P5013, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5014 = $P5013."new"()
    set $P102, $P5014
.annotate 'line', 1323
    set fb_tmp_137, _lex_param_1
    repr_defined $I5002, fb_tmp_137
    unless $I5002 goto if497_else952 
    set $P5015, fb_tmp_137[0]
    set $P5017, $P5015
    goto if497_end953
  if497_else952:
    null $P5016
    set $P5017, $P5016
  if497_end953:
    unless_null $P5017, vivi_498954
    nqp_get_sc_object $P5018, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5017, $P5018
  vivi_498954:
    $P5019 = _lex_param_0."as_post"($P5017)
    $P5020 = _lex_param_0."coerce"($P5019, "P")
    set $P103, $P5020
.annotate 'line', 1324
    $P102."push"($P103)
.annotate 'line', 1325
    $P102."push_pirop"("getattribute", $P101, $P103, "'outer_ctx'")
.annotate 'line', 1326
    $P102."result"($P101)
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_224_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1329
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$reg", $P101 
    .lex "$ops", $P102 
    .lex "$ctxpost", $P103 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_138 
    .local pmc fb_tmp_139 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
.annotate 'line', 1330
    find_dynamic_lex $P5004, "$*REGALLOC"
    unless_null $P5004, fallback955
    nqp_get_sc_object $P5006, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5005, $P5006
    set fb_tmp_138, $P5005
    repr_defined $I5001, fb_tmp_138
    unless $I5001 goto if499_else956 
    set $P5007, fb_tmp_138["$REGALLOC"]
    set $P5009, $P5007
    goto if499_end957
  if499_else956:
    null $P5008
    set $P5009, $P5008
  if499_end957:
    unless_null $P5009, vivi_500958
    nqp_get_sc_object $P5010, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5009, $P5010
  vivi_500958:
    unless_null $P5009, vivi_501959
    die "Contextual $*REGALLOC not found"
    box $P5011, "Contextual $*REGALLOC not found"
    set $P5009, $P5011
  vivi_501959:
    set $P5004, $P5009
  fallback955:
    $P5012 = $P5004."fresh_p"()
    set $P101, $P5012
.annotate 'line', 1331
    nqp_get_sc_object $P5013, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5014 = $P5013."new"()
    set $P102, $P5014
.annotate 'line', 1332
    set fb_tmp_139, _lex_param_1
    repr_defined $I5002, fb_tmp_139
    unless $I5002 goto if502_else960 
    set $P5015, fb_tmp_139[0]
    set $P5017, $P5015
    goto if502_end961
  if502_else960:
    null $P5016
    set $P5017, $P5016
  if502_end961:
    unless_null $P5017, vivi_503962
    nqp_get_sc_object $P5018, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5017, $P5018
  vivi_503962:
    $P5019 = _lex_param_0."as_post"($P5017)
    $P5020 = _lex_param_0."coerce"($P5019, "P")
    set $P103, $P5020
.annotate 'line', 1333
    $P102."push"($P103)
.annotate 'line', 1334
    $P102."push_pirop"("getattribute", $P101, $P103, "'caller_ctx'")
.annotate 'line', 1335
    $P102."result"($P101)
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_225_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1338
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$reg", $P101 
    .lex "$ops", $P102 
    .lex "$ctxpost", $P103 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_140 
    .local pmc fb_tmp_141 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
.annotate 'line', 1339
    find_dynamic_lex $P5004, "$*REGALLOC"
    unless_null $P5004, fallback963
    nqp_get_sc_object $P5006, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5005, $P5006
    set fb_tmp_140, $P5005
    repr_defined $I5001, fb_tmp_140
    unless $I5001 goto if504_else964 
    set $P5007, fb_tmp_140["$REGALLOC"]
    set $P5009, $P5007
    goto if504_end965
  if504_else964:
    null $P5008
    set $P5009, $P5008
  if504_end965:
    unless_null $P5009, vivi_505966
    nqp_get_sc_object $P5010, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5009, $P5010
  vivi_505966:
    unless_null $P5009, vivi_506967
    die "Contextual $*REGALLOC not found"
    box $P5011, "Contextual $*REGALLOC not found"
    set $P5009, $P5011
  vivi_506967:
    set $P5004, $P5009
  fallback963:
    $P5012 = $P5004."fresh_p"()
    set $P101, $P5012
.annotate 'line', 1340
    nqp_get_sc_object $P5013, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5014 = $P5013."new"()
    set $P102, $P5014
.annotate 'line', 1341
    set fb_tmp_141, _lex_param_1
    repr_defined $I5002, fb_tmp_141
    unless $I5002 goto if507_else968 
    set $P5015, fb_tmp_141[0]
    set $P5017, $P5015
    goto if507_end969
  if507_else968:
    null $P5016
    set $P5017, $P5016
  if507_end969:
    unless_null $P5017, vivi_508970
    nqp_get_sc_object $P5018, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5017, $P5018
  vivi_508970:
    $P5019 = _lex_param_0."as_post"($P5017)
    $P5020 = _lex_param_0."coerce"($P5019, "P")
    set $P103, $P5020
.annotate 'line', 1342
    $P102."push"($P103)
.annotate 'line', 1343
    $P102."push_pirop"("getattribute", $P101, $P103, "'lex_pad'")
.annotate 'line', 1344
    $P102."result"($P101)
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_226_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1347
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$reg", $P101 
    .lex "$ops", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_142 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
.annotate 'line', 1348
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback971
    nqp_get_sc_object $P5005, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5004, $P5005
    set fb_tmp_142, $P5004
    repr_defined $I5001, fb_tmp_142
    unless $I5001 goto if509_else972 
    set $P5006, fb_tmp_142["$REGALLOC"]
    set $P5008, $P5006
    goto if509_end973
  if509_else972:
    null $P5007
    set $P5008, $P5007
  if509_end973:
    unless_null $P5008, vivi_510974
    nqp_get_sc_object $P5009, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5008, $P5009
  vivi_510974:
    unless_null $P5008, vivi_511975
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_511975:
    set $P5003, $P5008
  fallback971:
    $P5011 = $P5003."fresh_p"()
    set $P101, $P5011
.annotate 'line', 1349
    nqp_get_sc_object $P5012, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5013 = $P5012."new"()
    set $P102, $P5013
.annotate 'line', 1350
    $P102."push_pirop"("getinterp", $P101)
.annotate 'line', 1351
    set $S5002, $P101
    concat $S5001, $S5002, "['lexpad']"
    $P102."push_pirop"("set", $P101, $S5001)
.annotate 'line', 1352
    $P102."result"($P101)
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_227_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1355
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$reg", $P101 
    .lex "$ops", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_143 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
.annotate 'line', 1356
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback976
    nqp_get_sc_object $P5005, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5004, $P5005
    set fb_tmp_143, $P5004
    repr_defined $I5001, fb_tmp_143
    unless $I5001 goto if512_else977 
    set $P5006, fb_tmp_143["$REGALLOC"]
    set $P5008, $P5006
    goto if512_end978
  if512_else977:
    null $P5007
    set $P5008, $P5007
  if512_end978:
    unless_null $P5008, vivi_513979
    nqp_get_sc_object $P5009, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5008, $P5009
  vivi_513979:
    unless_null $P5008, vivi_514980
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_514980:
    set $P5003, $P5008
  fallback976:
    $P5011 = $P5003."fresh_p"()
    set $P101, $P5011
.annotate 'line', 1357
    nqp_get_sc_object $P5012, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5013 = $P5012."new"()
    set $P102, $P5013
.annotate 'line', 1358
    $P102."push_pirop"("getinterp", $P101)
.annotate 'line', 1359
    set $S5002, $P101
    concat $S5001, $S5002, "['sub']"
    $P102."push_pirop"("set", $P101, $S5001)
.annotate 'line', 1360
    $P102."result"($P101)
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_228_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1363
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$reg", $P101 
    .lex "$ops", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_144 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
.annotate 'line', 1364
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback981
    nqp_get_sc_object $P5005, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5004, $P5005
    set fb_tmp_144, $P5004
    repr_defined $I5001, fb_tmp_144
    unless $I5001 goto if515_else982 
    set $P5006, fb_tmp_144["$REGALLOC"]
    set $P5008, $P5006
    goto if515_end983
  if515_else982:
    null $P5007
    set $P5008, $P5007
  if515_end983:
    unless_null $P5008, vivi_516984
    nqp_get_sc_object $P5009, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5008, $P5009
  vivi_516984:
    unless_null $P5008, vivi_517985
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_517985:
    set $P5003, $P5008
  fallback981:
    $P5011 = $P5003."fresh_p"()
    set $P101, $P5011
.annotate 'line', 1365
    nqp_get_sc_object $P5012, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5013 = $P5012."new"()
    set $P102, $P5013
.annotate 'line', 1366
    $P102."push_pirop"("getinterp", $P101)
.annotate 'line', 1367
    set $S5002, $P101
    concat $S5001, $S5002, "['sub';1]"
    $P102."push_pirop"("set", $P101, $S5001)
.annotate 'line', 1368
    $P102."result"($P101)
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_229_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1371
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_145 
    .local pmc fb_tmp_146 
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 2
    iseq $I5001, $N5001, $N5002
    if $I5001 goto unless518_end987 
.annotate 'line', 1372
    box $P5002, "Operation 'lexprimspec' expects two operands"
    die $P5002
  unless518_end987:
.annotate 'line', 1375
    nqp_get_sc_object $P5003, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
    nqp_get_sc_object $P5004, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 2
    set fb_tmp_145, _lex_param_1
    repr_defined $I5002, fb_tmp_145
    unless $I5002 goto if519_else988 
    set $P5005, fb_tmp_145[0]
    set $P5007, $P5005
    goto if519_end989
  if519_else988:
    null $P5006
    set $P5007, $P5006
  if519_end989:
    unless_null $P5007, vivi_520990
    nqp_get_sc_object $P5008, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5007, $P5008
  vivi_520990:
    set fb_tmp_146, _lex_param_1
    repr_defined $I5003, fb_tmp_146
    unless $I5003 goto if521_else991 
    set $P5009, fb_tmp_146[1]
    set $P5011, $P5009
    goto if521_end992
  if521_else991:
    null $P5010
    set $P5011, $P5010
  if521_end992:
    unless_null $P5011, vivi_522993
    nqp_get_sc_object $P5012, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5011, $P5012
  vivi_522993:
    $P5013 = $P5003."new"($P5007, $P5011, "callmethod" :named("op"), "get_lex_type" :named("name"), $P5004 :named("returns"))
    $P5014 = _lex_param_0."as_post"($P5013)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_230_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1383
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$reg", $P101 
    .lex "$ops", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_147 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
.annotate 'line', 1385
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback994
    nqp_get_sc_object $P5005, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5004, $P5005
    set fb_tmp_147, $P5004
    repr_defined $I5001, fb_tmp_147
    unless $I5001 goto if523_else995 
    set $P5006, fb_tmp_147["$REGALLOC"]
    set $P5008, $P5006
    goto if523_end996
  if523_else995:
    null $P5007
    set $P5008, $P5007
  if523_end996:
    unless_null $P5008, vivi_524997
    nqp_get_sc_object $P5009, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5008, $P5009
  vivi_524997:
    unless_null $P5008, vivi_525998
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_525998:
    set $P5003, $P5008
  fallback994:
    $P5011 = $P5003."fresh_p"()
    set $P101, $P5011
.annotate 'line', 1386
    nqp_get_sc_object $P5012, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5013 = $P5012."new"()
    set $P102, $P5013
.annotate 'line', 1387
    $P102."push_pirop"("getinterp", $P101)
.annotate 'line', 1388
    set $S5002, $P101
    concat $S5001, $S5002, "['context']"
    $P102."push_pirop"("set", $P101, $S5001)
.annotate 'line', 1389
    $P102."result"($P101)
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_231_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1392
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$reg", $P101 
    .lex "$ops", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_148 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
.annotate 'line', 1396
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback999
    nqp_get_sc_object $P5005, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5004, $P5005
    set fb_tmp_148, $P5004
    repr_defined $I5001, fb_tmp_148
    unless $I5001 goto if526_else1000 
    set $P5006, fb_tmp_148["$REGALLOC"]
    set $P5008, $P5006
    goto if526_end1001
  if526_else1000:
    null $P5007
    set $P5008, $P5007
  if526_end1001:
    unless_null $P5008, vivi_5271002
    nqp_get_sc_object $P5009, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5008, $P5009
  vivi_5271002:
    unless_null $P5008, vivi_5281003
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_5281003:
    set $P5003, $P5008
  fallback999:
    $P5011 = $P5003."fresh_p"()
    set $P101, $P5011
.annotate 'line', 1397
    nqp_get_sc_object $P5012, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5013 = $P5012."new"()
    set $P102, $P5013
.annotate 'line', 1398
    $P102."push_pirop"("getinterp", $P101)
.annotate 'line', 1399
    set $S5002, $P101
    concat $S5001, $S5002, "['context']"
    $P102."push_pirop"("set", $P101, $S5001)
.annotate 'line', 1400
    $P102."result"($P101)
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_232_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1412
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$pos_reg", $P101 
    .lex "$nam_reg", $P102 
    .lex "$res_reg", $P103 
    .lex "$inv_post", $P104 
    .lex "$cap_post", $P105 
    .lex "$ops", $P106 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_149 
    .local pmc fb_tmp_150 
    .local pmc fb_tmp_151 
    .local pmc fb_tmp_152 
    .local pmc fb_tmp_153 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P105, $P5005
    nqp_get_sc_object $P5006, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P106, $P5006
.annotate 'line', 1413
    $P5007 = _lex_param_1."list"()
    set $N5001, $P5007
    set $N5002, 2
    iseq $I5001, $N5001, $N5002
    if $I5001 goto unless529_end1005 
    box $P5008, "The 'invokewithcapture' op requires two children"
    die $P5008
  unless529_end1005:
.annotate 'line', 1416
    find_dynamic_lex $P5009, "$*REGALLOC"
    unless_null $P5009, fallback1006
    nqp_get_sc_object $P5011, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5010, $P5011
    set fb_tmp_149, $P5010
    repr_defined $I5002, fb_tmp_149
    unless $I5002 goto if530_else1007 
    set $P5012, fb_tmp_149["$REGALLOC"]
    set $P5014, $P5012
    goto if530_end1008
  if530_else1007:
    null $P5013
    set $P5014, $P5013
  if530_end1008:
    unless_null $P5014, vivi_5311009
    nqp_get_sc_object $P5015, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5014, $P5015
  vivi_5311009:
    unless_null $P5014, vivi_5321010
    die "Contextual $*REGALLOC not found"
    box $P5016, "Contextual $*REGALLOC not found"
    set $P5014, $P5016
  vivi_5321010:
    set $P5009, $P5014
  fallback1006:
    $P5017 = $P5009."fresh_p"()
    set $P101, $P5017
.annotate 'line', 1417
    find_dynamic_lex $P5018, "$*REGALLOC"
    unless_null $P5018, fallback1011
    nqp_get_sc_object $P5020, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5019, $P5020
    set fb_tmp_150, $P5019
    repr_defined $I5003, fb_tmp_150
    unless $I5003 goto if533_else1012 
    set $P5021, fb_tmp_150["$REGALLOC"]
    set $P5023, $P5021
    goto if533_end1013
  if533_else1012:
    null $P5022
    set $P5023, $P5022
  if533_end1013:
    unless_null $P5023, vivi_5341014
    nqp_get_sc_object $P5024, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5023, $P5024
  vivi_5341014:
    unless_null $P5023, vivi_5351015
    die "Contextual $*REGALLOC not found"
    box $P5025, "Contextual $*REGALLOC not found"
    set $P5023, $P5025
  vivi_5351015:
    set $P5018, $P5023
  fallback1011:
    $P5026 = $P5018."fresh_p"()
    set $P102, $P5026
.annotate 'line', 1418
    find_dynamic_lex $P5027, "$*REGALLOC"
    unless_null $P5027, fallback1016
    nqp_get_sc_object $P5029, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5028, $P5029
    set fb_tmp_151, $P5028
    repr_defined $I5004, fb_tmp_151
    unless $I5004 goto if536_else1017 
    set $P5030, fb_tmp_151["$REGALLOC"]
    set $P5032, $P5030
    goto if536_end1018
  if536_else1017:
    null $P5031
    set $P5032, $P5031
  if536_end1018:
    unless_null $P5032, vivi_5371019
    nqp_get_sc_object $P5033, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5032, $P5033
  vivi_5371019:
    unless_null $P5032, vivi_5381020
    die "Contextual $*REGALLOC not found"
    box $P5034, "Contextual $*REGALLOC not found"
    set $P5032, $P5034
  vivi_5381020:
    set $P5027, $P5032
  fallback1016:
    $P5035 = $P5027."fresh_p"()
    set $P103, $P5035
.annotate 'line', 1419
    set fb_tmp_152, _lex_param_1
    repr_defined $I5005, fb_tmp_152
    unless $I5005 goto if539_else1021 
    set $P5036, fb_tmp_152[0]
    set $P5038, $P5036
    goto if539_end1022
  if539_else1021:
    null $P5037
    set $P5038, $P5037
  if539_end1022:
    unless_null $P5038, vivi_5401023
    nqp_get_sc_object $P5039, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5038, $P5039
  vivi_5401023:
    $P5040 = _lex_param_0."as_post"($P5038)
    $P5041 = _lex_param_0."coerce"($P5040, "P")
    set $P104, $P5041
.annotate 'line', 1420
    set fb_tmp_153, _lex_param_1
    repr_defined $I5006, fb_tmp_153
    unless $I5006 goto if541_else1024 
    set $P5042, fb_tmp_153[1]
    set $P5044, $P5042
    goto if541_end1025
  if541_else1024:
    null $P5043
    set $P5044, $P5043
  if541_end1025:
    unless_null $P5044, vivi_5421026
    nqp_get_sc_object $P5045, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5044, $P5045
  vivi_5421026:
    $P5046 = _lex_param_0."as_post"($P5044)
    $P5047 = _lex_param_0."coerce"($P5046, "P")
    set $P105, $P5047
.annotate 'line', 1421
    nqp_get_sc_object $P5048, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5049 = $P5048."new"()
    set $P106, $P5049
.annotate 'line', 1422
    $P106."push"($P104)
.annotate 'line', 1423
    $P106."push"($P105)
.annotate 'line', 1424
    $P5050 = $P105."result"()
    $P106."push_pirop"("deconstruct_capture", $P5050, $P101, $P102)
.annotate 'line', 1425
    $P5051 = $P104."result"()
    set $S5002, $P101
    concat $S5001, $S5002, " :flat"
    set $S5004, $P102
    concat $S5003, $S5004, " :flat :named"
    $P106."push_pirop"("call", $P5051, $S5001, $S5003, $P103 :named("result"))
.annotate 'line', 1427
    $P106."result"($P103)
    .return ($P106) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_233_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1484
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_154 
    find_lex $P5001, "%const_map"
.annotate 'line', 1485
    $P5002 = _lex_param_1."name"()
    set $S5001, $P5002
    exists $I5001, $P5001[$S5001]
    unless $I5001 goto if543_else1027 
.annotate 'line', 1486
    nqp_get_sc_object $P5003, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 42
    find_lex $P5004, "%const_map"
    set fb_tmp_154, $P5004
    repr_defined $I5002, fb_tmp_154
    unless $I5002 goto if544_else1029 
    $P5006 = _lex_param_1."name"()
    set $S5002, $P5006
    set $P5005, fb_tmp_154[$S5002]
    set $P5008, $P5005
    goto if544_end1030
  if544_else1029:
    null $P5007
    set $P5008, $P5007
  if544_end1030:
    unless_null $P5008, vivi_5451031
    nqp_get_sc_object $P5009, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5008, $P5009
  vivi_5451031:
    $P5010 = $P5003."new"($P5008 :named("value"))
    $P5011 = _lex_param_0."as_post"($P5010)
    set $P5014, $P5011
    goto if543_end1028
  if543_else1027:
.annotate 'line', 1488
.annotate 'line', 1489
    $P5012 = _lex_param_1."name"()
    set $S5005, $P5012
    concat $S5004, "Unknown constant '", $S5005
    concat $S5003, $S5004, "'"
    box $P5013, $S5003
    die $P5013
    set $P5014, $P5013
  if543_end1028:
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_235_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1506
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5082 = 'cuid_234_1366375329.52446' 
    capture_lex $P5082 
    .const 'Sub' $P5082 = 'cuid_237_1366375329.52446' 
    capture_lex $P5082 
    .const 'Sub' $P5082 = 'cuid_239_1366375329.52446' 
    capture_lex $P5082 
    .lex "@children", $P101 
    .lex "$protected", $P102 
    .lex "$procpost", $P103 
    .lex "%handlers", $P104 
    .lex "$catch", $P105 
    .lex "$control", $P106 
    .lex "@other", $P107 
    .lex "$catch_label", $P108 
    .lex "$control_label", $P109 
    .lex "$other_label", $P110 
    .lex "$num_pops", $P111 
    .lex "$skip_handler_label", $P112 
    .lex "$ops", $P113 
    .lex "$reg", $P114 
    .lex "$res_type", $P115 
    .lex "$res_reg", $P116 
    .lex "$orig_alloc", $P117 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_155 
    .local pmc fb_tmp_157 
    .local pmc fb_tmp_158 
    new $P5001, 'QRPA'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
    new $P5004, 'Hash'
    set $P104, $P5004
    nqp_get_sc_object $P5005, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P105, $P5005
    nqp_get_sc_object $P5006, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P106, $P5006
    new $P5007, 'QRPA'
    set $P107, $P5007
    nqp_get_sc_object $P5008, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P108, $P5008
    nqp_get_sc_object $P5009, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P109, $P5009
    nqp_get_sc_object $P5010, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P110, $P5010
    nqp_get_sc_object $P5011, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P111, $P5011
    nqp_get_sc_object $P5012, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P112, $P5012
    nqp_get_sc_object $P5013, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P113, $P5013
    nqp_get_sc_object $P5014, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P114, $P5014
    nqp_get_sc_object $P5015, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P115, $P5015
    nqp_get_sc_object $P5016, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P116, $P5016
    nqp_get_sc_object $P5017, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P117, $P5017
.annotate 'line', 1507
    $P5019 = _lex_param_1."list"()
    repr_clone $P5018, $P5019
    set $P101, $P5018
    set $N5001, $P101
    set $N5002, 0
    iseq $I5001, $N5001, $N5002
    unless $I5001 goto if546_end1033 
.annotate 'line', 1508
    box $P5020, "The 'handle' op requires at least one child"
    die $P5020
  if546_end1033:
    shift $P5021, $P101
    set $P102, $P5021
.annotate 'line', 1515
    $P5022 = _lex_param_0."as_post"($P102)
    $P5023 = _lex_param_0."coerce"($P5022, "P")
    set $P103, $P5023
    if $P101 goto unless547_end1035 
.annotate 'line', 1516
    find_lex $P5024, "RETURN"
    $P5025 = $P5024($P103)
  unless547_end1035:
    set $P5026, $P101
    iter $P5028, $P101
  for_next1044:
    unless $P5028, for_done1046
    shift $P5030, $P5028
    shift $P5031, $P5028
  for_redo1045:
    .const 'Sub' $P5029 = 'cuid_234_1366375329.52446' 
    capture_lex $P5029
    $P5026 = $P5029($P5030, $P5031)
    goto for_next1044
  for_done1046:
    box $P5032, 0
    set $P111, $P5032
.annotate 'line', 1551
    nqp_get_sc_object $P5033, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 38
    $P5034 = _lex_param_0."unique"("skip_handler_")
    $P5035 = $P5033."new"($P5034 :named("name"))
    set $P112, $P5035
.annotate 'line', 1552
    nqp_get_sc_object $P5036, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5037 = $P5036."new"()
    set $P113, $P5037
.annotate 'line', 1553
    find_dynamic_lex $P5038, "$*REGALLOC"
    unless_null $P5038, fallback1047
    nqp_get_sc_object $P5040, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5039, $P5040
    set fb_tmp_155, $P5039
    repr_defined $I5002, fb_tmp_155
    unless $I5002 goto if552_else1048 
    set $P5041, fb_tmp_155["$REGALLOC"]
    set $P5043, $P5041
    goto if552_end1049
  if552_else1048:
    null $P5042
    set $P5043, $P5042
  if552_end1049:
    unless_null $P5043, vivi_5531050
    nqp_get_sc_object $P5044, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5043, $P5044
  vivi_5531050:
    unless_null $P5043, vivi_5541051
    die "Contextual $*REGALLOC not found"
    box $P5045, "Contextual $*REGALLOC not found"
    set $P5043, $P5045
  vivi_5541051:
    set $P5038, $P5043
  fallback1047:
    $P5046 = $P5038."fresh_p"()
    set $P114, $P5046
    unless $P105 goto if555_end1053 
.annotate 'line', 1554
.annotate 'line', 1555
    nqp_get_sc_object $P5047, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 38
    $P5048 = _lex_param_0."unique"("catch_handler_")
    $P5049 = $P5047."new"($P5048 :named("name"))
    set $P108, $P5049
.annotate 'line', 1556
    $P113."push_pirop"("new", $P114, "'ExceptionHandler'")
.annotate 'line', 1557
    $P113."push_pirop"("set_label", $P114, $P108)
.annotate 'line', 1558
    $P113."push_pirop"("callmethod", "'handle_types_except'", $P114, ".CONTROL_ALL")
.annotate 'line', 1559
    $P113."push_pirop"("push_eh", $P114)
    set $N5004, $P111
    set $N5005, 1
    add $N5003, $N5004, $N5005
    box $P5050, $N5003
    set $P111, $P5050
  if555_end1053:
    unless $P106 goto if556_end1055 
.annotate 'line', 1562
.annotate 'line', 1563
    nqp_get_sc_object $P5051, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 38
    $P5052 = _lex_param_0."unique"("catch_handler_")
    $P5053 = $P5051."new"($P5052 :named("name"))
    set $P109, $P5053
.annotate 'line', 1564
    $P113."push_pirop"("new", $P114, "'ExceptionHandler'", "[.CONTROL_ALL]")
.annotate 'line', 1565
    $P113."push_pirop"("set_label", $P114, $P109)
.annotate 'line', 1566
    $P113."push_pirop"("push_eh", $P114)
    set $N5007, $P111
    set $N5008, 1
    add $N5006, $N5007, $N5008
    box $P5054, $N5006
    set $P111, $P5054
  if556_end1055:
    unless $P107 goto if557_end1057 
    .const 'Sub' $P5055 = 'cuid_237_1366375329.52446' 
    capture_lex $P5055
    $P5056 = $P5055()
  if557_end1057:
.annotate 'line', 1581
    $P5057 = $P103."result"()
    $P5058 = _lex_param_0."infer_type"($P5057)
    set $S5002, $P5058
    downcase $S5001, $S5002
    box $P5059, $S5001
    set $P115, $P5059
.annotate 'line', 1582
    find_dynamic_lex $P5060, "$*REGALLOC"
    unless_null $P5060, fallback1064
    nqp_get_sc_object $P5062, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5061, $P5062
    set fb_tmp_157, $P5061
    repr_defined $I5003, fb_tmp_157
    unless $I5003 goto if560_else1065 
    set $P5063, fb_tmp_157["$REGALLOC"]
    set $P5065, $P5063
    goto if560_end1066
  if560_else1065:
    null $P5064
    set $P5065, $P5064
  if560_end1066:
    unless_null $P5065, vivi_5611067
    nqp_get_sc_object $P5066, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5065, $P5066
  vivi_5611067:
    unless_null $P5065, vivi_5621068
    die "Contextual $*REGALLOC not found"
    box $P5067, "Contextual $*REGALLOC not found"
    set $P5065, $P5067
  vivi_5621068:
    set $P5060, $P5065
  fallback1064:
    set $S5004, $P115
    concat $S5003, "fresh_", $S5004
    $P5068 = $P5060.$S5003()
    set $P116, $P5068
.annotate 'line', 1583
    $P113."push"($P103)
.annotate 'line', 1584
    $P5069 = $P103."result"()
    $P113."push_pirop"("set", $P116, $P5069)
  while563_test1069:
    set $P5071, $P111
    unless $P111 goto while563_done1073 
  while563_redo1071:
.annotate 'line', 1585
.annotate 'line', 1586
    $P113."push_pirop"("pop_eh")
    set $N5010, $P111
    set $N5011, 1
    sub $N5009, $N5010, $N5011
    box $P5070, $N5009
    set $P111, $P5070
    set $P5071, $P111
    goto while563_test1069 
  while563_done1073:
.annotate 'line', 1589
    $P113."push_pirop"("goto", $P112)
    find_dynamic_lex $P5072, "$*REGALLOC"
    unless_null $P5072, fallback1074
    nqp_get_sc_object $P5074, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5073, $P5074
    set fb_tmp_158, $P5073
    repr_defined $I5004, fb_tmp_158
    unless $I5004 goto if564_else1075 
    set $P5075, fb_tmp_158["$REGALLOC"]
    set $P5077, $P5075
    goto if564_end1076
  if564_else1075:
    null $P5076
    set $P5077, $P5076
  if564_end1076:
    unless_null $P5077, vivi_5651077
    nqp_get_sc_object $P5078, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5077, $P5078
  vivi_5651077:
    unless_null $P5077, vivi_5661078
    die "Contextual $*REGALLOC not found"
    box $P5079, "Contextual $*REGALLOC not found"
    set $P5077, $P5079
  vivi_5661078:
    set $P5072, $P5077
  fallback1074:
    set $P117, $P5072
    .const 'Sub' $P5080 = 'cuid_239_1366375329.52446' 
    capture_lex $P5080
    $P5081 = $P5080()
.annotate 'line', 1642
    $P113."push"($P112)
.annotate 'line', 1643
    $P113."result"($P116)
    .return ($P113) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_234_1366375329.52446") :anon :lex :outer("cuid_235_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1525
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$name", _lex_param_0 
    .lex "$handler_code", _lex_param_1 
    find_lex $P5001, "%handler_names"
    set $S5001, _lex_param_0
    exists $I5001, $P5001[$S5001]
    unless $I5001 goto if548_else1036 
.annotate 'line', 1526
    find_lex $P5002, "%handlers"
    set $S5002, _lex_param_0
    exists $I5002, $P5002[$S5002]
    unless $I5002 goto if549_end1039 
.annotate 'line', 1527
    set $S5004, _lex_param_0
    concat $S5003, "Multiple handlers for ", $S5004
    box $P5003, $S5003
    die $P5003
  if549_end1039:
    find_lex $P5004, "%handlers"
    set $S5005, _lex_param_0
    set $P5004[$S5005], _lex_param_1
    set $S5006, _lex_param_0
    iseq $I5003, $S5006, "CATCH"
    unless $I5003 goto if550_else1040 
.annotate 'line', 1531
    box $P5005, 1
    store_lex "$catch", $P5005
    set $P5009, $P5005
    goto if550_end1041
  if550_else1040:
    set $S5007, _lex_param_0
    iseq $I5004, $S5007, "CONTROL"
    unless $I5004 goto if551_else1042 
.annotate 'line', 1534
    box $P5006, 1
    store_lex "$control", $P5006
    set $P5008, $P5006
    goto if551_end1043
  if551_else1042:
.annotate 'line', 1537
    find_lex $P5007, "@other"
    push $P5007, _lex_param_0
    set $P5008, $P5007
  if551_end1043:
    set $P5009, $P5008
  if550_end1041:
    set $P5011, $P5009
    goto if548_end1037
  if548_else1036:
.annotate 'line', 1541
    set $S5010, _lex_param_0
    concat $S5009, "Invalid handler type '", $S5010
    concat $S5008, $S5009, "'"
    box $P5010, $S5008
    die $P5010
    set $P5011, $P5010
  if548_end1037:
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_237_1366375329.52446") :anon :lex :outer("cuid_235_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1569
    .const 'Sub' $P5021 = 'cuid_236_1366375329.52446' 
    capture_lex $P5021 
    .lex "@hnames", $P101 
    new $P5001, 'QRPA'
    set $P101, $P5001
    find_lex $P5005, "@other"
    set $P5002, $P5005
    iter $P5004, $P5005
  for_next1061:
    unless $P5004, for_done1063
    shift $P5007, $P5004
  for_redo1062:
    .const 'Sub' $P5006 = 'cuid_236_1366375329.52446' 
    capture_lex $P5006
    $P5002 = $P5006($P5007)
    goto for_next1061
  for_done1063:
.annotate 'line', 1572
    nqp_get_sc_object $P5008, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 38
    find_lex $P5009, "$qastcomp"
    $P5010 = $P5009."unique"("catch_handler_")
    $P5011 = $P5008."new"($P5010 :named("name"))
    store_lex "$other_label", $P5011
.annotate 'line', 1573
    find_lex $P5012, "$ops"
    find_lex $P5013, "$reg"
    join $S5003, ", ", $P101
    concat $S5002, "[", $S5003
    concat $S5001, $S5002, "]"
    $P5012."push_pirop"("new", $P5013, "'ExceptionHandler'", $S5001)
.annotate 'line', 1575
    find_lex $P5014, "$ops"
    find_lex $P5015, "$reg"
    find_lex $P5016, "$other_label"
    $P5014."push_pirop"("set_label", $P5015, $P5016)
.annotate 'line', 1576
    find_lex $P5017, "$ops"
    find_lex $P5018, "$reg"
    $P5017."push_pirop"("push_eh", $P5018)
    find_lex $P5019, "$num_pops"
    set $N5002, $P5019
    set $N5003, 1
    add $N5001, $N5002, $N5003
    box $P5020, $N5001
    store_lex "$num_pops", $P5020
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_236_1366375329.52446") :anon :lex :outer("cuid_237_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1571
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_156 
    find_lex $P5001, "@hnames"
    find_lex $P5002, "%handler_names"
    set fb_tmp_156, $P5002
    repr_defined $I5001, fb_tmp_156
    unless $I5001 goto if558_else1058 
    set $S5001, _lex_param_0
    set $P5003, fb_tmp_156[$S5001]
    set $P5005, $P5003
    goto if558_end1059
  if558_else1058:
    null $P5004
    set $P5005, $P5004
  if558_end1059:
    unless_null $P5005, vivi_5591060
    nqp_get_sc_object $P5006, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5005, $P5006
  vivi_5591060:
    push $P5001, $P5005
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_239_1366375329.52446") :anon :lex :outer("cuid_235_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1593
    .const 'Sub' $P5027 = 'cuid_238_1366375329.52446' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_241_1366375329.52446' 
    capture_lex $P5027 
    .lex "$*CUR_EXCEPTION", $P101 
    .lex "$*REGALLOC", $P102 
    .lex "&simple_handler", $P103 
    .local pmc fb_tmp_159 
    .local pmc fb_tmp_160 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    .const 'Sub' $P5003 = 'cuid_238_1366375329.52446' 
    capture_lex $P5003
    set $P103, $P5003
    find_lex $P5004, "$reg"
    set $P101, $P5004
.annotate 'line', 1595
    find_lex $P5005, "$orig_alloc"
    $P5006 = $P5005."handler_allocator"()
    set $P102, $P5006
    find_lex $P5007, "$catch"
    unless $P5007 goto if567_end1080 
.annotate 'line', 1607
.annotate 'line', 1608
    find_lex $P5008, "$catch_label"
    find_lex $P5009, "%handlers"
    set fb_tmp_159, $P5009
    repr_defined $I5001, fb_tmp_159
    unless $I5001 goto if568_else1081 
    set $P5010, fb_tmp_159["CATCH"]
    set $P5012, $P5010
    goto if568_end1082
  if568_else1081:
    null $P5011
    set $P5012, $P5011
  if568_end1082:
    unless_null $P5012, vivi_5691083
    nqp_get_sc_object $P5013, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5012, $P5013
  vivi_5691083:
    $P5014 = "&simple_handler"($P5008, $P5012)
  if567_end1080:
    find_lex $P5015, "$control"
    unless $P5015 goto if570_end1085 
.annotate 'line', 1610
.annotate 'line', 1611
    find_lex $P5016, "$control_label"
    find_lex $P5017, "%handlers"
    set fb_tmp_160, $P5017
    repr_defined $I5002, fb_tmp_160
    unless $I5002 goto if571_else1086 
    set $P5018, fb_tmp_160["CONTROL"]
    set $P5020, $P5018
    goto if571_end1087
  if571_else1086:
    null $P5019
    set $P5020, $P5019
  if571_end1087:
    unless_null $P5020, vivi_5721088
    nqp_get_sc_object $P5021, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5020, $P5021
  vivi_5721088:
    $P5022 = "&simple_handler"($P5016, $P5020)
  if570_end1085:
    find_lex $P5023, "@other"
    set $P5026, $P5023
    unless $P5023 goto if573_end1090 
    .const 'Sub' $P5024 = 'cuid_241_1366375329.52446' 
    capture_lex $P5024
    $P5025 = $P5024()
    set $P5026, $P5025
  if573_end1090:
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "simple_handler" :subid("cuid_238_1366375329.52446") :anon :lex :outer("cuid_239_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1596
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$handler_post", $P101 
    .lex "$label", _lex_param_0 
    .lex "$handler_qast", _lex_param_1 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 1597
    find_lex $P5002, "$qastcomp"
    find_lex $P5003, "$qastcomp"
    $P5004 = $P5003."as_post"(_lex_param_1)
    $P5005 = $P5002."coerce"($P5004, "P")
    set $P101, $P5005
.annotate 'line', 1598
    find_lex $P5006, "$ops"
    $P5006."push"(_lex_param_0)
.annotate 'line', 1599
    find_lex $P5007, "$ops"
    find_lex $P5008, "$reg"
    set $S5003, $P5008
    concat $S5002, ".get_results (", $S5003
    concat $S5001, $S5002, ")"
    $P5007."push_pirop"($S5001)
.annotate 'line', 1600
    find_lex $P5009, "$ops"
    $P5009."push"($P101)
.annotate 'line', 1601
    find_lex $P5010, "$ops"
    find_lex $P5011, "$reg"
    $P5010."push_pirop"("finalize", $P5011)
.annotate 'line', 1602
    find_lex $P5012, "$ops"
    find_lex $P5013, "$reg"
    $P5012."push_pirop"("pop_upto_eh", $P5013)
.annotate 'line', 1603
    find_lex $P5014, "$ops"
    $P5014."push_pirop"("pop_eh")
.annotate 'line', 1604
    find_lex $P5015, "$ops"
    find_lex $P5016, "$res_reg"
    $P5017 = $P101."result"()
    $P5015."push_pirop"("set", $P5016, $P5017)
.annotate 'line', 1605
    find_lex $P5018, "$ops"
    find_lex $P5019, "$skip_handler_label"
    $P5020 = $P5018."push_pirop"("goto", $P5019)
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_241_1366375329.52446") :anon :lex :outer("cuid_239_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1613
    .const 'Sub' $P5030 = 'cuid_240_1366375329.52446' 
    capture_lex $P5030 
    .const 'Sub' $P5030 = 'cuid_242_1366375329.52446' 
    capture_lex $P5030 
    .lex "$type_reg", $P101 
    .lex "%type_labels", $P102 
    .local pmc fb_tmp_161 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    new $P5002, 'Hash'
    set $P102, $P5002
.annotate 'line', 1614
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback1091
    nqp_get_sc_object $P5005, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5004, $P5005
    set fb_tmp_161, $P5004
    repr_defined $I5001, fb_tmp_161
    unless $I5001 goto if574_else1092 
    set $P5006, fb_tmp_161["$REGALLOC"]
    set $P5008, $P5006
    goto if574_end1093
  if574_else1092:
    null $P5007
    set $P5008, $P5007
  if574_end1093:
    unless_null $P5008, vivi_5751094
    nqp_get_sc_object $P5009, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5008, $P5009
  vivi_5751094:
    unless_null $P5008, vivi_5761095
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_5761095:
    set $P5003, $P5008
  fallback1091:
    $P5011 = $P5003."fresh_i"()
    set $P101, $P5011
.annotate 'line', 1615
    find_lex $P5012, "$ops"
    find_lex $P5013, "$other_label"
    $P5012."push"($P5013)
.annotate 'line', 1616
    find_lex $P5014, "$ops"
    find_lex $P5015, "$reg"
    set $S5003, $P5015
    concat $S5002, ".get_results (", $S5003
    concat $S5001, $S5002, ")"
    $P5014."push_pirop"($S5001)
.annotate 'line', 1620
    find_lex $P5016, "$ops"
    find_lex $P5017, "$reg"
    set $S5005, $P5017
    concat $S5004, $S5005, "[\"type\"]"
    $P5016."push_pirop"("set", $P101, $S5004)
    find_lex $P5021, "@other"
    set $P5018, $P5021
    iter $P5020, $P5021
  for_next1099:
    unless $P5020, for_done1101
    shift $P5023, $P5020
  for_redo1100:
    .const 'Sub' $P5022 = 'cuid_240_1366375329.52446' 
    capture_lex $P5022
    $P5018 = $P5022($P5023)
    goto for_next1099
  for_done1101:
    find_lex $P5027, "@other"
    set $P5024, $P5027
    iter $P5026, $P5027
  for_next1108:
    unless $P5026, for_done1110
    shift $P5029, $P5026
  for_redo1109:
    .const 'Sub' $P5028 = 'cuid_242_1366375329.52446' 
    capture_lex $P5028
    $P5024 = $P5028($P5029)
    goto for_next1108
  for_done1110:
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_240_1366375329.52446") :anon :lex :outer("cuid_241_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1621
    .param pmc _lex_param_0 
    .lex "$lbl", $P101 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_162 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 1622
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 38
    find_lex $P5003, "$qastcomp"
    $P5004 = $P5003."unique"("handle_type_")
    $P5005 = $P5002."new"($P5004 :named("name"))
    set $P101, $P5005
.annotate 'line', 1623
    find_lex $P5006, "$ops"
    find_lex $P5007, "$type_reg"
    find_lex $P5008, "%handler_names"
    set fb_tmp_162, $P5008
    repr_defined $I5001, fb_tmp_162
    unless $I5001 goto if577_else1096 
    set $S5001, _lex_param_0
    set $P5009, fb_tmp_162[$S5001]
    set $P5011, $P5009
    goto if577_end1097
  if577_else1096:
    null $P5010
    set $P5011, $P5010
  if577_end1097:
    unless_null $P5011, vivi_5781098
    nqp_get_sc_object $P5012, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5011, $P5012
  vivi_5781098:
    $P5006."push_pirop"("eq", $P5007, $P5011, $P101)
    find_lex $P5013, "%type_labels"
    set $S5002, _lex_param_0
    set $P5013[$S5002], $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_242_1366375329.52446") :anon :lex :outer("cuid_241_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1628
    .param pmc _lex_param_0 
    .lex "$handler_post", $P101 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_163 
    .local pmc fb_tmp_164 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 1629
    find_lex $P5002, "$qastcomp"
    find_lex $P5003, "$qastcomp"
    find_lex $P5004, "%handlers"
    set fb_tmp_163, $P5004
    repr_defined $I5001, fb_tmp_163
    unless $I5001 goto if579_else1102 
    set $S5001, _lex_param_0
    set $P5005, fb_tmp_163[$S5001]
    set $P5007, $P5005
    goto if579_end1103
  if579_else1102:
    null $P5006
    set $P5007, $P5006
  if579_end1103:
    unless_null $P5007, vivi_5801104
    nqp_get_sc_object $P5008, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5007, $P5008
  vivi_5801104:
    $P5009 = $P5003."as_post"($P5007)
    $P5010 = $P5002."coerce"($P5009, "P")
    set $P101, $P5010
.annotate 'line', 1630
    find_lex $P5011, "$ops"
    find_lex $P5012, "%type_labels"
    set fb_tmp_164, $P5012
    repr_defined $I5002, fb_tmp_164
    unless $I5002 goto if581_else1105 
    set $S5002, _lex_param_0
    set $P5013, fb_tmp_164[$S5002]
    set $P5015, $P5013
    goto if581_end1106
  if581_else1105:
    null $P5014
    set $P5015, $P5014
  if581_end1106:
    unless_null $P5015, vivi_5821107
    nqp_get_sc_object $P5016, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5015, $P5016
  vivi_5821107:
    $P5011."push"($P5015)
.annotate 'line', 1631
    find_lex $P5017, "$ops"
    $P5017."push"($P101)
.annotate 'line', 1632
    find_lex $P5018, "$ops"
    find_lex $P5019, "$reg"
    $P5018."push_pirop"("finalize", $P5019)
.annotate 'line', 1633
    find_lex $P5020, "$ops"
    find_lex $P5021, "$reg"
    $P5020."push_pirop"("pop_upto_eh", $P5021)
.annotate 'line', 1634
    find_lex $P5022, "$ops"
    $P5022."push_pirop"("pop_eh")
.annotate 'line', 1635
    find_lex $P5023, "$ops"
    find_lex $P5024, "$res_reg"
    $P5025 = $P101."result"()
    $P5023."push_pirop"("set", $P5024, $P5025)
.annotate 'line', 1636
    find_lex $P5026, "$ops"
    find_lex $P5027, "$skip_handler_label"
    $P5028 = $P5026."push_pirop"("goto", $P5027)
    .return ($P5028) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_243_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1647
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$exc_reg", $P101 
    .lex "$ops", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_165 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    new $P5011, 'ExceptionHandler'
    set_label $P5011, catch_handler_5871117
    $P5011.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5011
    find_dynamic_lex $P5003, "$*CUR_EXCEPTION"
    unless_null $P5003, fallback1111
    nqp_get_sc_object $P5005, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5004, $P5005
    set fb_tmp_165, $P5004
    repr_defined $I5001, fb_tmp_165
    unless $I5001 goto if583_else1112 
    set $P5006, fb_tmp_165["$CUR_EXCEPTION"]
    set $P5008, $P5006
    goto if583_end1113
  if583_else1112:
    null $P5007
    set $P5008, $P5007
  if583_end1113:
    unless_null $P5008, vivi_5841114
    nqp_get_sc_object $P5009, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5008, $P5009
  vivi_5841114:
    unless_null $P5008, vivi_5851115
    die "Contextual $*CUR_EXCEPTION not found"
    box $P5010, "Contextual $*CUR_EXCEPTION not found"
    set $P5008, $P5010
  vivi_5851115:
    set $P5003, $P5008
  fallback1111:
    set $P5012, $P5003
    pop_eh 
    goto skip_handler_5861116
  catch_handler_5871117:
    .get_results ($P5011) 
    set $I10001, 1
    set $P5011["handled"], $I10001
    nqp_get_sc_object $P10001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    finalize $P5011
    pop_upto_eh $P5011
    pop_eh 
    set $P5012, $P10001
    goto skip_handler_5861116
  skip_handler_5861116:
    set $P101, $P5012
    if $P101 goto unless588_end1119 
.annotate 'line', 1649
    box $P5013, "Can only use 'exception' op in the context of an exception handler"
    die $P5013
  unless588_end1119:
.annotate 'line', 1652
    nqp_get_sc_object $P5014, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5015 = $P5014."new"()
    set $P102, $P5015
.annotate 'line', 1653
    $P102."result"($P101)
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_244_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1656
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$exc", $P101 
    .lex "$reg", $P102 
    .lex "$ops", $P103 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_166 
    .local pmc fb_tmp_167 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
.annotate 'line', 1657
    $P5004 = _lex_param_1."list"()
    set $N5001, $P5004
    set $N5002, 1
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if589_end1121 
    box $P5005, "The 'getpayload' op expects one child"
    die $P5005
  if589_end1121:
.annotate 'line', 1660
    set fb_tmp_166, _lex_param_1
    repr_defined $I5002, fb_tmp_166
    unless $I5002 goto if590_else1122 
    set $P5006, fb_tmp_166[0]
    set $P5008, $P5006
    goto if590_end1123
  if590_else1122:
    null $P5007
    set $P5008, $P5007
  if590_end1123:
    unless_null $P5008, vivi_5911124
    nqp_get_sc_object $P5009, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5008, $P5009
  vivi_5911124:
    $P5010 = _lex_param_0."as_post"($P5008)
    $P5011 = _lex_param_0."coerce"($P5010, "P")
    set $P101, $P5011
.annotate 'line', 1661
    find_dynamic_lex $P5012, "$*REGALLOC"
    unless_null $P5012, fallback1125
    nqp_get_sc_object $P5014, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5013, $P5014
    set fb_tmp_167, $P5013
    repr_defined $I5003, fb_tmp_167
    unless $I5003 goto if592_else1126 
    set $P5015, fb_tmp_167["$REGALLOC"]
    set $P5017, $P5015
    goto if592_end1127
  if592_else1126:
    null $P5016
    set $P5017, $P5016
  if592_end1127:
    unless_null $P5017, vivi_5931128
    nqp_get_sc_object $P5018, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5017, $P5018
  vivi_5931128:
    unless_null $P5017, vivi_5941129
    die "Contextual $*REGALLOC not found"
    box $P5019, "Contextual $*REGALLOC not found"
    set $P5017, $P5019
  vivi_5941129:
    set $P5012, $P5017
  fallback1125:
    $P5020 = $P5012."fresh_p"()
    set $P102, $P5020
.annotate 'line', 1662
    nqp_get_sc_object $P5021, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5022 = $P5021."new"()
    set $P103, $P5022
.annotate 'line', 1663
    $P103."push"($P101)
.annotate 'line', 1664
    $P5023 = $P101."result"()
    $P103."push_pirop"("getattribute", $P102, $P5023, "\"payload\"")
.annotate 'line', 1665
    $P103."result"($P102)
    .return ($P103) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_245_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1668
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$exc", $P101 
    .lex "$payload", $P102 
    .lex "$ops", $P103 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_168 
    .local pmc fb_tmp_169 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
.annotate 'line', 1669
    $P5004 = _lex_param_1."list"()
    set $N5001, $P5004
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if595_end1131 
    box $P5005, "The 'setpayload' op expects two children"
    die $P5005
  if595_end1131:
.annotate 'line', 1672
    set fb_tmp_168, _lex_param_1
    repr_defined $I5002, fb_tmp_168
    unless $I5002 goto if596_else1132 
    set $P5006, fb_tmp_168[0]
    set $P5008, $P5006
    goto if596_end1133
  if596_else1132:
    null $P5007
    set $P5008, $P5007
  if596_end1133:
    unless_null $P5008, vivi_5971134
    nqp_get_sc_object $P5009, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5008, $P5009
  vivi_5971134:
    $P5010 = _lex_param_0."as_post"($P5008)
    $P5011 = _lex_param_0."coerce"($P5010, "P")
    set $P101, $P5011
.annotate 'line', 1673
    set fb_tmp_169, _lex_param_1
    repr_defined $I5003, fb_tmp_169
    unless $I5003 goto if598_else1135 
    set $P5012, fb_tmp_169[1]
    set $P5014, $P5012
    goto if598_end1136
  if598_else1135:
    null $P5013
    set $P5014, $P5013
  if598_end1136:
    unless_null $P5014, vivi_5991137
    nqp_get_sc_object $P5015, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5014, $P5015
  vivi_5991137:
    $P5016 = _lex_param_0."as_post"($P5014)
    $P5017 = _lex_param_0."coerce"($P5016, "P")
    set $P102, $P5017
.annotate 'line', 1674
    nqp_get_sc_object $P5018, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5019 = $P5018."new"()
    set $P103, $P5019
.annotate 'line', 1675
    $P103."push_pirop"("setattribute", $P101, "\"payload\"", $P102)
.annotate 'line', 1676
    $P5020 = $P102."result"()
    $P103."result"($P5020)
    .return ($P103) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_246_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1679
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$exc", $P101 
    .lex "$pmc", $P102 
    .lex "$reg", $P103 
    .lex "$ops", $P104 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_170 
    .local pmc fb_tmp_171 
    .local pmc fb_tmp_172 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P104, $P5004
.annotate 'line', 1680
    $P5005 = _lex_param_1."list"()
    set $N5001, $P5005
    set $N5002, 1
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if600_end1139 
    box $P5006, "The 'getmessage' op expects one child"
    die $P5006
  if600_end1139:
.annotate 'line', 1683
    set fb_tmp_170, _lex_param_1
    repr_defined $I5002, fb_tmp_170
    unless $I5002 goto if601_else1140 
    set $P5007, fb_tmp_170[0]
    set $P5009, $P5007
    goto if601_end1141
  if601_else1140:
    null $P5008
    set $P5009, $P5008
  if601_end1141:
    unless_null $P5009, vivi_6021142
    nqp_get_sc_object $P5010, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5009, $P5010
  vivi_6021142:
    $P5011 = _lex_param_0."as_post"($P5009)
    $P5012 = _lex_param_0."coerce"($P5011, "P")
    set $P101, $P5012
.annotate 'line', 1684
    find_dynamic_lex $P5013, "$*REGALLOC"
    unless_null $P5013, fallback1143
    nqp_get_sc_object $P5015, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5014, $P5015
    set fb_tmp_171, $P5014
    repr_defined $I5003, fb_tmp_171
    unless $I5003 goto if603_else1144 
    set $P5016, fb_tmp_171["$REGALLOC"]
    set $P5018, $P5016
    goto if603_end1145
  if603_else1144:
    null $P5017
    set $P5018, $P5017
  if603_end1145:
    unless_null $P5018, vivi_6041146
    nqp_get_sc_object $P5019, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5018, $P5019
  vivi_6041146:
    unless_null $P5018, vivi_6051147
    die "Contextual $*REGALLOC not found"
    box $P5020, "Contextual $*REGALLOC not found"
    set $P5018, $P5020
  vivi_6051147:
    set $P5013, $P5018
  fallback1143:
    $P5021 = $P5013."fresh_p"()
    set $P102, $P5021
.annotate 'line', 1685
    find_dynamic_lex $P5022, "$*REGALLOC"
    unless_null $P5022, fallback1148
    nqp_get_sc_object $P5024, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5023, $P5024
    set fb_tmp_172, $P5023
    repr_defined $I5004, fb_tmp_172
    unless $I5004 goto if606_else1149 
    set $P5025, fb_tmp_172["$REGALLOC"]
    set $P5027, $P5025
    goto if606_end1150
  if606_else1149:
    null $P5026
    set $P5027, $P5026
  if606_end1150:
    unless_null $P5027, vivi_6071151
    nqp_get_sc_object $P5028, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5027, $P5028
  vivi_6071151:
    unless_null $P5027, vivi_6081152
    die "Contextual $*REGALLOC not found"
    box $P5029, "Contextual $*REGALLOC not found"
    set $P5027, $P5029
  vivi_6081152:
    set $P5022, $P5027
  fallback1148:
    $P5030 = $P5022."fresh_s"()
    set $P103, $P5030
.annotate 'line', 1686
    nqp_get_sc_object $P5031, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5032 = $P5031."new"()
    set $P104, $P5032
.annotate 'line', 1687
    $P104."push"($P101)
.annotate 'line', 1688
    $P5033 = $P101."result"()
    $P104."push_pirop"("getattribute", $P102, $P5033, "\"message\"")
.annotate 'line', 1689
    $P104."push_pirop"("set", $P103, $P102)
.annotate 'line', 1690
    $P104."result"($P103)
    .return ($P104) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_247_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1693
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$exc", $P101 
    .lex "$message", $P102 
    .lex "$pmc", $P103 
    .lex "$ops", $P104 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_173 
    .local pmc fb_tmp_174 
    .local pmc fb_tmp_175 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P104, $P5004
.annotate 'line', 1694
    $P5005 = _lex_param_1."list"()
    set $N5001, $P5005
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if609_end1154 
    box $P5006, "The 'setmessage' op expects two children"
    die $P5006
  if609_end1154:
.annotate 'line', 1697
    set fb_tmp_173, _lex_param_1
    repr_defined $I5002, fb_tmp_173
    unless $I5002 goto if610_else1155 
    set $P5007, fb_tmp_173[0]
    set $P5009, $P5007
    goto if610_end1156
  if610_else1155:
    null $P5008
    set $P5009, $P5008
  if610_end1156:
    unless_null $P5009, vivi_6111157
    nqp_get_sc_object $P5010, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5009, $P5010
  vivi_6111157:
    $P5011 = _lex_param_0."as_post"($P5009)
    $P5012 = _lex_param_0."coerce"($P5011, "P")
    set $P101, $P5012
.annotate 'line', 1698
    set fb_tmp_174, _lex_param_1
    repr_defined $I5003, fb_tmp_174
    unless $I5003 goto if612_else1158 
    set $P5013, fb_tmp_174[1]
    set $P5015, $P5013
    goto if612_end1159
  if612_else1158:
    null $P5014
    set $P5015, $P5014
  if612_end1159:
    unless_null $P5015, vivi_6131160
    nqp_get_sc_object $P5016, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5015, $P5016
  vivi_6131160:
    $P5017 = _lex_param_0."as_post"($P5015)
    $P5018 = _lex_param_0."coerce"($P5017, "S")
    set $P102, $P5018
.annotate 'line', 1699
    find_dynamic_lex $P5019, "$*REGALLOC"
    unless_null $P5019, fallback1161
    nqp_get_sc_object $P5021, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5020, $P5021
    set fb_tmp_175, $P5020
    repr_defined $I5004, fb_tmp_175
    unless $I5004 goto if614_else1162 
    set $P5022, fb_tmp_175["$REGALLOC"]
    set $P5024, $P5022
    goto if614_end1163
  if614_else1162:
    null $P5023
    set $P5024, $P5023
  if614_end1163:
    unless_null $P5024, vivi_6151164
    nqp_get_sc_object $P5025, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5024, $P5025
  vivi_6151164:
    unless_null $P5024, vivi_6161165
    die "Contextual $*REGALLOC not found"
    box $P5026, "Contextual $*REGALLOC not found"
    set $P5024, $P5026
  vivi_6161165:
    set $P5019, $P5024
  fallback1161:
    $P5027 = $P5019."fresh_p"()
    set $P103, $P5027
.annotate 'line', 1700
    nqp_get_sc_object $P5028, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5029 = $P5028."new"()
    set $P104, $P5029
.annotate 'line', 1701
    $P104."push"($P101)
.annotate 'line', 1702
    $P104."push"($P102)
.annotate 'line', 1703
    $P104."push_pirop"("box", $P103, $P102)
.annotate 'line', 1704
    $P104."push_pirop"("setattribute", $P101, "\"message\"", $P103)
.annotate 'line', 1705
    $P5030 = $P102."result"()
    $P104."result"($P5030)
    .return ($P104) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_248_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1708
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_176 
.annotate 'line', 1709
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 1
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if617_end1167 
    box $P5002, "The 'backtracestrings' op expects one child"
    die $P5002
  if617_end1167:
.annotate 'line', 1712
    nqp_get_sc_object $P5003, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
    set fb_tmp_176, _lex_param_1
    repr_defined $I5002, fb_tmp_176
    unless $I5002 goto if618_else1168 
    set $P5004, fb_tmp_176[0]
    set $P5006, $P5004
    goto if618_end1169
  if618_else1168:
    null $P5005
    set $P5006, $P5005
  if618_end1169:
    unless_null $P5006, vivi_6191170
    nqp_get_sc_object $P5007, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5006, $P5007
  vivi_6191170:
    $P5008 = $P5003."new"($P5006, "callmethod" :named("op"), "backtrace_strings" :named("name"))
    $P5009 = _lex_param_0."as_post"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_249_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1717
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$reg", $P101 
    .lex "$ops", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_177 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
.annotate 'line', 1718
    $P5003 = _lex_param_1."list"()
    set $N5001, $P5003
    set $N5002, 0
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if620_end1172 
    box $P5004, "The 'newexception' op expects no children"
    die $P5004
  if620_end1172:
.annotate 'line', 1721
    find_dynamic_lex $P5005, "$*REGALLOC"
    unless_null $P5005, fallback1173
    nqp_get_sc_object $P5007, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5006, $P5007
    set fb_tmp_177, $P5006
    repr_defined $I5002, fb_tmp_177
    unless $I5002 goto if621_else1174 
    set $P5008, fb_tmp_177["$REGALLOC"]
    set $P5010, $P5008
    goto if621_end1175
  if621_else1174:
    null $P5009
    set $P5010, $P5009
  if621_end1175:
    unless_null $P5010, vivi_6221176
    nqp_get_sc_object $P5011, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5010, $P5011
  vivi_6221176:
    unless_null $P5010, vivi_6231177
    die "Contextual $*REGALLOC not found"
    box $P5012, "Contextual $*REGALLOC not found"
    set $P5010, $P5012
  vivi_6231177:
    set $P5005, $P5010
  fallback1173:
    $P5013 = $P5005."fresh_p"()
    set $P101, $P5013
.annotate 'line', 1722
    nqp_get_sc_object $P5014, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5015 = $P5014."new"()
    set $P102, $P5015
.annotate 'line', 1723
    $P102."push_pirop"("new", $P101, "[\"Exception\"]")
.annotate 'line', 1724
    $P102."result"($P101)
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_250_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1731
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_178 
.annotate 'line', 1732
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 1
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if624_end1179 
    box $P5002, "The 'resume' op expects 1 child"
    die $P5002
  if624_end1179:
.annotate 'line', 1735
    nqp_get_sc_object $P5003, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
.annotate 'line', 1737
    nqp_get_sc_object $P5004, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
    set fb_tmp_178, _lex_param_1
    repr_defined $I5002, fb_tmp_178
    unless $I5002 goto if625_else1180 
    set $P5005, fb_tmp_178[0]
    set $P5007, $P5005
    goto if625_end1181
  if625_else1180:
    null $P5006
    set $P5007, $P5006
  if625_end1181:
    unless_null $P5007, vivi_6261182
    nqp_get_sc_object $P5008, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5007, $P5008
  vivi_6261182:
.annotate 'line', 1740
    nqp_get_sc_object $P5009, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 52
    $P5010 = $P5009."new"("resume" :named("value"))
    $P5011 = $P5004."new"($P5007, $P5010, "atkey" :named("op"))
    $P5012 = $P5003."new"($P5011, "call" :named("op"))
    $P5013 = _lex_param_0."as_post"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_252_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1750
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5008 = 'cuid_251_1366375329.52446' 
    capture_lex $P5008 
    .lex "$name", $P101 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 1751
    $P5002 = _lex_param_1."name"()
    set $P101, $P5002
    find_lex $P5003, "%control_map"
    set $S5001, $P101
    exists $I5001, $P5003[$S5001]
    unless $I5001 goto if627_else1183 
    .const 'Sub' $P5004 = 'cuid_251_1366375329.52446' 
    capture_lex $P5004
    $P5005 = $P5004()
    set $P5007, $P5005
    goto if627_end1184
  if627_else1183:
.annotate 'line', 1757
    set $S5004, $P101
    concat $S5003, "Unknown control exception type '", $S5004
    concat $S5002, $S5003, "'"
    box $P5006, $S5002
    die $P5006
    set $P5007, $P5006
  if627_end1184:
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_251_1366375329.52446") :anon :lex :outer("cuid_252_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1752
    .lex "$ops", $P101 
    .local pmc fb_tmp_179 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 1753
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5003 = $P5002."new"("0" :named("result"))
    set $P101, $P5003
.annotate 'line', 1754
    find_lex $P5004, "%control_map"
    set fb_tmp_179, $P5004
    repr_defined $I5001, fb_tmp_179
    unless $I5001 goto if628_else1185 
    find_lex $P5006, "$name"
    set $S5001, $P5006
    set $P5005, fb_tmp_179[$S5001]
    set $P5008, $P5005
    goto if628_end1186
  if628_else1185:
    null $P5007
    set $P5008, $P5007
  if628_end1186:
    unless_null $P5008, vivi_6291187
    nqp_get_sc_object $P5009, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5008, $P5009
  vivi_6291187:
    $P101."push_pirop"("die", "0", $P5008)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_254_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1763
    .param pmc _lex_param_0 
    .const 'Sub' $P5005 = 'cuid_253_1366375329.52446' 
    capture_lex $P5005 
    .lex "$_", _lex_param_0 
.annotate 'line', 1764
    nqp_get_sc_object $P5001, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .const 'Sub' $P5003 = 'cuid_253_1366375329.52446' 
    capture_lex $P5003
    newclosure $P5002, $P5003
    $P5004 = $P5001."add_hll_box"("nqp", _lex_param_0, $P5002)
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_253_1366375329.52446") :anon :lex :outer("cuid_254_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1764
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$reg", $P101 
    .lex "$ops", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$post", _lex_param_1 
    .local pmc fb_tmp_180 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
.annotate 'line', 1765
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback1188
    nqp_get_sc_object $P5005, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5004, $P5005
    set fb_tmp_180, $P5004
    repr_defined $I5001, fb_tmp_180
    unless $I5001 goto if630_else1189 
    set $P5006, fb_tmp_180["$REGALLOC"]
    set $P5008, $P5006
    goto if630_end1190
  if630_else1189:
    null $P5007
    set $P5008, $P5007
  if630_end1190:
    unless_null $P5008, vivi_6311191
    nqp_get_sc_object $P5009, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5008, $P5009
  vivi_6311191:
    unless_null $P5008, vivi_6321192
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_6321192:
    set $P5003, $P5008
  fallback1188:
    $P5011 = $P5003."fresh_p"()
    set $P101, $P5011
.annotate 'line', 1766
    nqp_get_sc_object $P5012, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5013 = $P5012."new"()
    set $P102, $P5013
.annotate 'line', 1767
    $P102."push"(_lex_param_1)
.annotate 'line', 1768
    $P102."push_pirop"("box", $P101, _lex_param_1)
.annotate 'line', 1769
    $P102."result"($P101)
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_255_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1773
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$reg", $P101 
    .lex "$ops", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$post", _lex_param_1 
    .local pmc fb_tmp_181 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
.annotate 'line', 1774
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback1196
    nqp_get_sc_object $P5005, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5004, $P5005
    set fb_tmp_181, $P5004
    repr_defined $I5001, fb_tmp_181
    unless $I5001 goto if633_else1197 
    set $P5006, fb_tmp_181["$REGALLOC"]
    set $P5008, $P5006
    goto if633_end1198
  if633_else1197:
    null $P5007
    set $P5008, $P5007
  if633_end1198:
    unless_null $P5008, vivi_6341199
    nqp_get_sc_object $P5009, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5008, $P5009
  vivi_6341199:
    unless_null $P5008, vivi_6351200
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_6351200:
    set $P5003, $P5008
  fallback1196:
    $P5011 = $P5003."fresh_i"()
    set $P101, $P5011
.annotate 'line', 1775
    nqp_get_sc_object $P5012, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5013 = $P5012."new"()
    set $P102, $P5013
.annotate 'line', 1776
    $P102."push"(_lex_param_1)
.annotate 'line', 1777
    $P102."push_pirop"("set", $P101, _lex_param_1)
.annotate 'line', 1778
    $P102."result"($P101)
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_256_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1781
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$reg", $P101 
    .lex "$ops", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$post", _lex_param_1 
    .local pmc fb_tmp_182 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
.annotate 'line', 1782
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback1201
    nqp_get_sc_object $P5005, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5004, $P5005
    set fb_tmp_182, $P5004
    repr_defined $I5001, fb_tmp_182
    unless $I5001 goto if636_else1202 
    set $P5006, fb_tmp_182["$REGALLOC"]
    set $P5008, $P5006
    goto if636_end1203
  if636_else1202:
    null $P5007
    set $P5008, $P5007
  if636_end1203:
    unless_null $P5008, vivi_6371204
    nqp_get_sc_object $P5009, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5008, $P5009
  vivi_6371204:
    unless_null $P5008, vivi_6381205
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_6381205:
    set $P5003, $P5008
  fallback1201:
    $P5011 = $P5003."fresh_n"()
    set $P101, $P5011
.annotate 'line', 1783
    nqp_get_sc_object $P5012, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5013 = $P5012."new"()
    set $P102, $P5013
.annotate 'line', 1784
    $P102."push"(_lex_param_1)
.annotate 'line', 1785
    $P102."push_pirop"("set", $P101, _lex_param_1)
.annotate 'line', 1786
    $P102."result"($P101)
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_257_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1789
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$reg", $P101 
    .lex "$ops", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$post", _lex_param_1 
    .local pmc fb_tmp_183 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
.annotate 'line', 1790
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback1206
    nqp_get_sc_object $P5005, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5004, $P5005
    set fb_tmp_183, $P5004
    repr_defined $I5001, fb_tmp_183
    unless $I5001 goto if639_else1207 
    set $P5006, fb_tmp_183["$REGALLOC"]
    set $P5008, $P5006
    goto if639_end1208
  if639_else1207:
    null $P5007
    set $P5008, $P5007
  if639_end1208:
    unless_null $P5008, vivi_6401209
    nqp_get_sc_object $P5009, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5008, $P5009
  vivi_6401209:
    unless_null $P5008, vivi_6411210
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_6411210:
    set $P5003, $P5008
  fallback1206:
    $P5011 = $P5003."fresh_s"()
    set $P101, $P5011
.annotate 'line', 1791
    nqp_get_sc_object $P5012, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5013 = $P5012."new"()
    set $P102, $P5013
.annotate 'line', 1792
    $P102."push"(_lex_param_1)
.annotate 'line', 1793
    $P102."push_pirop"("set", $P101, _lex_param_1)
.annotate 'line', 1794
    $P102."result"($P101)
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_258_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1809
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
.annotate 'line', 1810
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 0
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if642_end1212 
    box $P5002, "The 'getstdin' op expects no operands"
    die $P5002
  if642_end1212:
.annotate 'line', 1813
    nqp_get_sc_object $P5003, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
.annotate 'line', 1815
    nqp_get_sc_object $P5004, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 89
    $P5005 = $P5004."new"("getinterp__P" :named("pirop"))
    $P5006 = $P5003."new"($P5005, "callmethod" :named("op"), "stdin_handle" :named("name"))
    $P5007 = _lex_param_0."as_post"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_259_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1818
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
.annotate 'line', 1819
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 0
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if643_end1214 
    box $P5002, "The 'getstdout' op expects no operands"
    die $P5002
  if643_end1214:
.annotate 'line', 1822
    nqp_get_sc_object $P5003, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
.annotate 'line', 1824
    nqp_get_sc_object $P5004, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 89
    $P5005 = $P5004."new"("getinterp__P" :named("pirop"))
    $P5006 = $P5003."new"($P5005, "callmethod" :named("op"), "stdout_handle" :named("name"))
    $P5007 = _lex_param_0."as_post"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_260_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1827
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
.annotate 'line', 1828
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 0
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if644_end1216 
    box $P5002, "The 'getstderr' op expects no operands"
    die $P5002
  if644_end1216:
.annotate 'line', 1831
    nqp_get_sc_object $P5003, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
.annotate 'line', 1833
    nqp_get_sc_object $P5004, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 89
    $P5005 = $P5004."new"("getinterp__P" :named("pirop"))
    $P5006 = $P5003."new"($P5005, "callmethod" :named("op"), "stderr_handle" :named("name"))
    $P5007 = _lex_param_0."as_post"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_261_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1836
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_184 
    .local pmc fb_tmp_185 
.annotate 'line', 1837
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if645_end1218 
    box $P5002, "The 'setencoding' op expects two operands"
    die $P5002
  if645_end1218:
.annotate 'line', 1840
    nqp_get_sc_object $P5003, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
    set fb_tmp_184, _lex_param_1
    repr_defined $I5002, fb_tmp_184
    unless $I5002 goto if646_else1219 
    set $P5004, fb_tmp_184[0]
    set $P5006, $P5004
    goto if646_end1220
  if646_else1219:
    null $P5005
    set $P5006, $P5005
  if646_end1220:
    unless_null $P5006, vivi_6471221
    nqp_get_sc_object $P5007, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5006, $P5007
  vivi_6471221:
    set fb_tmp_185, _lex_param_1
    repr_defined $I5003, fb_tmp_185
    unless $I5003 goto if648_else1222 
    set $P5008, fb_tmp_185[1]
    set $P5010, $P5008
    goto if648_end1223
  if648_else1222:
    null $P5009
    set $P5010, $P5009
  if648_end1223:
    unless_null $P5010, vivi_6491224
    nqp_get_sc_object $P5011, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5010, $P5011
  vivi_6491224:
    $P5012 = $P5003."new"($P5006, $P5010, "callmethod" :named("op"), "encoding" :named("name"))
    $P5013 = _lex_param_0."as_post"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_262_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1845
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_186 
.annotate 'line', 1846
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 1
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if650_end1226 
    box $P5002, "The 'tellfh' op expects one operand"
    die $P5002
  if650_end1226:
.annotate 'line', 1849
    nqp_get_sc_object $P5003, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
    set fb_tmp_186, _lex_param_1
    repr_defined $I5002, fb_tmp_186
    unless $I5002 goto if651_else1227 
    set $P5004, fb_tmp_186[0]
    set $P5006, $P5004
    goto if651_end1228
  if651_else1227:
    null $P5005
    set $P5006, $P5005
  if651_end1228:
    unless_null $P5006, vivi_6521229
    nqp_get_sc_object $P5007, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5006, $P5007
  vivi_6521229:
    $P5008 = $P5003."new"($P5006, "callmethod" :named("op"), "tell" :named("name"))
    $P5009 = _lex_param_0."as_post"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_263_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1854
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_187 
    .local pmc fb_tmp_188 
.annotate 'line', 1855
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if653_end1231 
    box $P5002, "The 'printfh' op expects two operands"
    die $P5002
  if653_end1231:
.annotate 'line', 1858
    nqp_get_sc_object $P5003, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
    set fb_tmp_187, _lex_param_1
    repr_defined $I5002, fb_tmp_187
    unless $I5002 goto if654_else1232 
    set $P5004, fb_tmp_187[0]
    set $P5006, $P5004
    goto if654_end1233
  if654_else1232:
    null $P5005
    set $P5006, $P5005
  if654_end1233:
    unless_null $P5006, vivi_6551234
    nqp_get_sc_object $P5007, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5006, $P5007
  vivi_6551234:
    set fb_tmp_188, _lex_param_1
    repr_defined $I5003, fb_tmp_188
    unless $I5003 goto if656_else1235 
    set $P5008, fb_tmp_188[1]
    set $P5010, $P5008
    goto if656_end1236
  if656_else1235:
    null $P5009
    set $P5010, $P5009
  if656_end1236:
    unless_null $P5010, vivi_6571237
    nqp_get_sc_object $P5011, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5010, $P5011
  vivi_6571237:
    $P5012 = $P5003."new"($P5006, $P5010, "callmethod" :named("op"), "print" :named("name"))
    $P5013 = _lex_param_0."as_post"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_264_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1863
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_189 
    .local pmc fb_tmp_190 
.annotate 'line', 1864
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if658_end1239 
    box $P5002, "The 'printfh' op expects two operands"
    die $P5002
  if658_end1239:
.annotate 'line', 1867
    nqp_get_sc_object $P5003, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
    set fb_tmp_189, _lex_param_1
    repr_defined $I5002, fb_tmp_189
    unless $I5002 goto if659_else1240 
    set $P5004, fb_tmp_189[0]
    set $P5006, $P5004
    goto if659_end1241
  if659_else1240:
    null $P5005
    set $P5006, $P5005
  if659_end1241:
    unless_null $P5006, vivi_6601242
    nqp_get_sc_object $P5007, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5006, $P5007
  vivi_6601242:
    set fb_tmp_190, _lex_param_1
    repr_defined $I5003, fb_tmp_190
    unless $I5003 goto if661_else1243 
    set $P5008, fb_tmp_190[1]
    set $P5010, $P5008
    goto if661_end1244
  if661_else1243:
    null $P5009
    set $P5010, $P5009
  if661_end1244:
    unless_null $P5010, vivi_6621245
    nqp_get_sc_object $P5011, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5010, $P5011
  vivi_6621245:
    $P5012 = $P5003."new"($P5006, $P5010, "callmethod" :named("op"), "print" :named("name"))
    $P5013 = _lex_param_0."as_post"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_265_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1872
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_191 
.annotate 'line', 1873
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 1
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if663_end1247 
    box $P5002, "The 'readlinefh' op expects one operand"
    die $P5002
  if663_end1247:
.annotate 'line', 1876
    nqp_get_sc_object $P5003, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
    set fb_tmp_191, _lex_param_1
    repr_defined $I5002, fb_tmp_191
    unless $I5002 goto if664_else1248 
    set $P5004, fb_tmp_191[0]
    set $P5006, $P5004
    goto if664_end1249
  if664_else1248:
    null $P5005
    set $P5006, $P5005
  if664_end1249:
    unless_null $P5006, vivi_6651250
    nqp_get_sc_object $P5007, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5006, $P5007
  vivi_6651250:
    $P5008 = $P5003."new"($P5006, "callmethod" :named("op"), "readline" :named("name"))
    $P5009 = _lex_param_0."as_post"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_266_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1881
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_192 
    .local pmc fb_tmp_193 
.annotate 'line', 1882
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if666_end1252 
    box $P5002, "The 'readlineintfh' op expects two operands"
    die $P5002
  if666_end1252:
.annotate 'line', 1885
    nqp_get_sc_object $P5003, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
    set fb_tmp_192, _lex_param_1
    repr_defined $I5002, fb_tmp_192
    unless $I5002 goto if667_else1253 
    set $P5004, fb_tmp_192[0]
    set $P5006, $P5004
    goto if667_end1254
  if667_else1253:
    null $P5005
    set $P5006, $P5005
  if667_end1254:
    unless_null $P5006, vivi_6681255
    nqp_get_sc_object $P5007, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5006, $P5007
  vivi_6681255:
    set fb_tmp_193, _lex_param_1
    repr_defined $I5003, fb_tmp_193
    unless $I5003 goto if669_else1256 
    set $P5008, fb_tmp_193[1]
    set $P5010, $P5008
    goto if669_end1257
  if669_else1256:
    null $P5009
    set $P5010, $P5009
  if669_end1257:
    unless_null $P5010, vivi_6701258
    nqp_get_sc_object $P5011, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5010, $P5011
  vivi_6701258:
    $P5012 = $P5003."new"($P5006, $P5010, "callmethod" :named("op"), "readline_interactive" :named("name"))
    $P5013 = _lex_param_0."as_post"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_267_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1890
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_194 
.annotate 'line', 1891
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 1
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if671_end1260 
    box $P5002, "The 'readallfh' op expects one operand"
    die $P5002
  if671_end1260:
.annotate 'line', 1894
    nqp_get_sc_object $P5003, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
    set fb_tmp_194, _lex_param_1
    repr_defined $I5002, fb_tmp_194
    unless $I5002 goto if672_else1261 
    set $P5004, fb_tmp_194[0]
    set $P5006, $P5004
    goto if672_end1262
  if672_else1261:
    null $P5005
    set $P5006, $P5005
  if672_end1262:
    unless_null $P5006, vivi_6731263
    nqp_get_sc_object $P5007, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5006, $P5007
  vivi_6731263:
    $P5008 = $P5003."new"($P5006, "callmethod" :named("op"), "readall" :named("name"))
    $P5009 = _lex_param_0."as_post"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_268_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1899
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_195 
.annotate 'line', 1900
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 1
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if674_end1265 
    box $P5002, "The 'eoffh' op expects one operand"
    die $P5002
  if674_end1265:
.annotate 'line', 1903
    nqp_get_sc_object $P5003, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
    set fb_tmp_195, _lex_param_1
    repr_defined $I5002, fb_tmp_195
    unless $I5002 goto if675_else1266 
    set $P5004, fb_tmp_195[0]
    set $P5006, $P5004
    goto if675_end1267
  if675_else1266:
    null $P5005
    set $P5006, $P5005
  if675_end1267:
    unless_null $P5006, vivi_6761268
    nqp_get_sc_object $P5007, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5006, $P5007
  vivi_6761268:
    $P5008 = $P5003."new"($P5006, "isfalse" :named("op"))
    $P5009 = _lex_param_0."as_post"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_269_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1905
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_196 
.annotate 'line', 1906
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 1
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if677_end1270 
    box $P5002, "The 'closefh' op expects one operand"
    die $P5002
  if677_end1270:
.annotate 'line', 1909
    nqp_get_sc_object $P5003, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
    set fb_tmp_196, _lex_param_1
    repr_defined $I5002, fb_tmp_196
    unless $I5002 goto if678_else1271 
    set $P5004, fb_tmp_196[0]
    set $P5006, $P5004
    goto if678_end1272
  if678_else1271:
    null $P5005
    set $P5006, $P5005
  if678_end1272:
    unless_null $P5006, vivi_6791273
    nqp_get_sc_object $P5007, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5006, $P5007
  vivi_6791273:
    $P5008 = $P5003."new"($P5006, "callmethod" :named("op"), "close" :named("name"))
    $P5009 = _lex_param_0."as_post"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_270_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1915
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_197 
    .local pmc fb_tmp_198 
.annotate 'line', 1916
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if680_end1275 
    box $P5002, "The 'chmod' op expects two operands"
    die $P5002
  if680_end1275:
.annotate 'line', 1919
    nqp_get_sc_object $P5003, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
.annotate 'line', 1922
    nqp_get_sc_object $P5004, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 89
.annotate 'line', 1923
    nqp_get_sc_object $P5005, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 52
    $P5006 = $P5005."new"("OS" :named("value"))
    $P5007 = $P5004."new"($P5006, "new__Ps" :named("pirop"))
    set fb_tmp_197, _lex_param_1
    repr_defined $I5002, fb_tmp_197
    unless $I5002 goto if681_else1276 
    set $P5008, fb_tmp_197[0]
    set $P5010, $P5008
    goto if681_end1277
  if681_else1276:
    null $P5009
    set $P5010, $P5009
  if681_end1277:
    unless_null $P5010, vivi_6821278
    nqp_get_sc_object $P5011, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5010, $P5011
  vivi_6821278:
    set fb_tmp_198, _lex_param_1
    repr_defined $I5003, fb_tmp_198
    unless $I5003 goto if683_else1279 
    set $P5012, fb_tmp_198[1]
    set $P5014, $P5012
    goto if683_end1280
  if683_else1279:
    null $P5013
    set $P5014, $P5013
  if683_end1280:
    unless_null $P5014, vivi_6841281
    nqp_get_sc_object $P5015, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5014, $P5015
  vivi_6841281:
    $P5016 = $P5003."new"($P5007, $P5010, $P5014, "callmethod" :named("op"), "chmod" :named("name"))
    $P5017 = _lex_param_0."as_post"($P5016)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_271_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1927
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_199 
.annotate 'line', 1928
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 1
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if685_end1283 
    box $P5002, "The 'unlink' op expects one operand"
    die $P5002
  if685_end1283:
.annotate 'line', 1931
    nqp_get_sc_object $P5003, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
.annotate 'line', 1934
    nqp_get_sc_object $P5004, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 89
.annotate 'line', 1935
    nqp_get_sc_object $P5005, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 52
    $P5006 = $P5005."new"("OS" :named("value"))
    $P5007 = $P5004."new"($P5006, "new__Ps" :named("pirop"))
    set fb_tmp_199, _lex_param_1
    repr_defined $I5002, fb_tmp_199
    unless $I5002 goto if686_else1284 
    set $P5008, fb_tmp_199[0]
    set $P5010, $P5008
    goto if686_end1285
  if686_else1284:
    null $P5009
    set $P5010, $P5009
  if686_end1285:
    unless_null $P5010, vivi_6871286
    nqp_get_sc_object $P5011, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5010, $P5011
  vivi_6871286:
    $P5012 = $P5003."new"($P5007, $P5010, "callmethod" :named("op"), "unlink" :named("name"))
    $P5013 = _lex_param_0."as_post"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_272_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1938
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_200 
.annotate 'line', 1939
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 1
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if688_end1288 
    box $P5002, "The 'rmdir' op expects one operand"
    die $P5002
  if688_end1288:
.annotate 'line', 1942
    nqp_get_sc_object $P5003, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
.annotate 'line', 1945
    nqp_get_sc_object $P5004, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 89
.annotate 'line', 1946
    nqp_get_sc_object $P5005, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 52
    $P5006 = $P5005."new"("OS" :named("value"))
    $P5007 = $P5004."new"($P5006, "new__Ps" :named("pirop"))
    set fb_tmp_200, _lex_param_1
    repr_defined $I5002, fb_tmp_200
    unless $I5002 goto if689_else1289 
    set $P5008, fb_tmp_200[0]
    set $P5010, $P5008
    goto if689_end1290
  if689_else1289:
    null $P5009
    set $P5010, $P5009
  if689_end1290:
    unless_null $P5010, vivi_6901291
    nqp_get_sc_object $P5011, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5010, $P5011
  vivi_6901291:
    $P5012 = $P5003."new"($P5007, $P5010, "callmethod" :named("op"), "rmdir" :named("name"))
    $P5013 = _lex_param_0."as_post"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_273_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1949
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
.annotate 'line', 1950
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 0
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if691_end1293 
    box $P5002, "The 'cwd' op expects no operands"
    die $P5002
  if691_end1293:
.annotate 'line', 1953
    nqp_get_sc_object $P5003, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
.annotate 'line', 1956
    nqp_get_sc_object $P5004, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 89
.annotate 'line', 1957
    nqp_get_sc_object $P5005, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 52
    $P5006 = $P5005."new"("OS" :named("value"))
    $P5007 = $P5004."new"($P5006, "new__Ps" :named("pirop"))
    $P5008 = $P5003."new"($P5007, "callmethod" :named("op"), "cwd" :named("name"))
    $P5009 = _lex_param_0."as_post"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_274_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1959
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_201 
.annotate 'line', 1960
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 1
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if692_end1295 
    box $P5002, "The 'chdir' op expects one operand"
    die $P5002
  if692_end1295:
.annotate 'line', 1963
    nqp_get_sc_object $P5003, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
.annotate 'line', 1966
    nqp_get_sc_object $P5004, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 89
.annotate 'line', 1967
    nqp_get_sc_object $P5005, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 52
    $P5006 = $P5005."new"("OS" :named("value"))
    $P5007 = $P5004."new"($P5006, "new__Ps" :named("pirop"))
    set fb_tmp_201, _lex_param_1
    repr_defined $I5002, fb_tmp_201
    unless $I5002 goto if693_else1296 
    set $P5008, fb_tmp_201[0]
    set $P5010, $P5008
    goto if693_end1297
  if693_else1296:
    null $P5009
    set $P5010, $P5009
  if693_end1297:
    unless_null $P5010, vivi_6941298
    nqp_get_sc_object $P5011, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5010, $P5011
  vivi_6941298:
    $P5012 = $P5003."new"($P5007, $P5010, "callmethod" :named("op"), "chdir" :named("name"))
    $P5013 = _lex_param_0."as_post"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_275_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1970
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_202 
    .local pmc fb_tmp_203 
.annotate 'line', 1971
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if695_end1300 
    box $P5002, "The 'mkdir' op expects two operands"
    die $P5002
  if695_end1300:
.annotate 'line', 1974
    nqp_get_sc_object $P5003, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
.annotate 'line', 1977
    nqp_get_sc_object $P5004, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 89
.annotate 'line', 1978
    nqp_get_sc_object $P5005, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 52
    $P5006 = $P5005."new"("OS" :named("value"))
    $P5007 = $P5004."new"($P5006, "new__Ps" :named("pirop"))
    set fb_tmp_202, _lex_param_1
    repr_defined $I5002, fb_tmp_202
    unless $I5002 goto if696_else1301 
    set $P5008, fb_tmp_202[0]
    set $P5010, $P5008
    goto if696_end1302
  if696_else1301:
    null $P5009
    set $P5010, $P5009
  if696_end1302:
    unless_null $P5010, vivi_6971303
    nqp_get_sc_object $P5011, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5010, $P5011
  vivi_6971303:
    set fb_tmp_203, _lex_param_1
    repr_defined $I5003, fb_tmp_203
    unless $I5003 goto if698_else1304 
    set $P5012, fb_tmp_203[1]
    set $P5014, $P5012
    goto if698_end1305
  if698_else1304:
    null $P5013
    set $P5014, $P5013
  if698_end1305:
    unless_null $P5014, vivi_6991306
    nqp_get_sc_object $P5015, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5014, $P5015
  vivi_6991306:
    $P5016 = $P5003."new"($P5007, $P5010, $P5014, "callmethod" :named("op"), "mkdir" :named("name"))
    $P5017 = _lex_param_0."as_post"($P5016)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_276_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1982
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_204 
    .local pmc fb_tmp_205 
.annotate 'line', 1983
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if700_end1308 
    box $P5002, "The 'rename' op expects two operands"
    die $P5002
  if700_end1308:
.annotate 'line', 1986
    nqp_get_sc_object $P5003, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
.annotate 'line', 1989
    nqp_get_sc_object $P5004, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 89
.annotate 'line', 1990
    nqp_get_sc_object $P5005, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 52
    $P5006 = $P5005."new"("OS" :named("value"))
    $P5007 = $P5004."new"($P5006, "new__Ps" :named("pirop"))
    set fb_tmp_204, _lex_param_1
    repr_defined $I5002, fb_tmp_204
    unless $I5002 goto if701_else1309 
    set $P5008, fb_tmp_204[0]
    set $P5010, $P5008
    goto if701_end1310
  if701_else1309:
    null $P5009
    set $P5010, $P5009
  if701_end1310:
    unless_null $P5010, vivi_7021311
    nqp_get_sc_object $P5011, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5010, $P5011
  vivi_7021311:
    set fb_tmp_205, _lex_param_1
    repr_defined $I5003, fb_tmp_205
    unless $I5003 goto if703_else1312 
    set $P5012, fb_tmp_205[1]
    set $P5014, $P5012
    goto if703_end1313
  if703_else1312:
    null $P5013
    set $P5014, $P5013
  if703_end1313:
    unless_null $P5014, vivi_7041314
    nqp_get_sc_object $P5015, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5014, $P5015
  vivi_7041314:
    $P5016 = $P5003."new"($P5007, $P5010, $P5014, "callmethod" :named("op"), "rename" :named("name"))
    $P5017 = _lex_param_0."as_post"($P5016)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_277_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 1994
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_206 
    .local pmc fb_tmp_207 
.annotate 'line', 1995
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if705_end1316 
    box $P5002, "The 'copy' op expects two operands"
    die $P5002
  if705_end1316:
.annotate 'line', 1998
    nqp_get_sc_object $P5003, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
.annotate 'line', 2001
    nqp_get_sc_object $P5004, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 89
.annotate 'line', 2002
    nqp_get_sc_object $P5005, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 52
    $P5006 = $P5005."new"("File" :named("value"))
    $P5007 = $P5004."new"($P5006, "new__Ps" :named("pirop"))
    set fb_tmp_206, _lex_param_1
    repr_defined $I5002, fb_tmp_206
    unless $I5002 goto if706_else1317 
    set $P5008, fb_tmp_206[0]
    set $P5010, $P5008
    goto if706_end1318
  if706_else1317:
    null $P5009
    set $P5010, $P5009
  if706_end1318:
    unless_null $P5010, vivi_7071319
    nqp_get_sc_object $P5011, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5010, $P5011
  vivi_7071319:
    set fb_tmp_207, _lex_param_1
    repr_defined $I5003, fb_tmp_207
    unless $I5003 goto if708_else1320 
    set $P5012, fb_tmp_207[1]
    set $P5014, $P5012
    goto if708_end1321
  if708_else1320:
    null $P5013
    set $P5014, $P5013
  if708_end1321:
    unless_null $P5014, vivi_7091322
    nqp_get_sc_object $P5015, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5014, $P5015
  vivi_7091322:
    $P5016 = $P5003."new"($P5007, $P5010, $P5014, "callmethod" :named("op"), "copy" :named("name"))
    $P5017 = _lex_param_0."as_post"($P5016)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_278_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2006
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_208 
    .local pmc fb_tmp_209 
.annotate 'line', 2007
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if710_end1324 
    box $P5002, "The 'symlink' op expects two operands"
    die $P5002
  if710_end1324:
.annotate 'line', 2010
    nqp_get_sc_object $P5003, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
.annotate 'line', 2013
    nqp_get_sc_object $P5004, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 89
.annotate 'line', 2014
    nqp_get_sc_object $P5005, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 52
    $P5006 = $P5005."new"("OS" :named("value"))
    $P5007 = $P5004."new"($P5006, "new__Ps" :named("pirop"))
    set fb_tmp_208, _lex_param_1
    repr_defined $I5002, fb_tmp_208
    unless $I5002 goto if711_else1325 
    set $P5008, fb_tmp_208[0]
    set $P5010, $P5008
    goto if711_end1326
  if711_else1325:
    null $P5009
    set $P5010, $P5009
  if711_end1326:
    unless_null $P5010, vivi_7121327
    nqp_get_sc_object $P5011, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5010, $P5011
  vivi_7121327:
    set fb_tmp_209, _lex_param_1
    repr_defined $I5003, fb_tmp_209
    unless $I5003 goto if713_else1328 
    set $P5012, fb_tmp_209[1]
    set $P5014, $P5012
    goto if713_end1329
  if713_else1328:
    null $P5013
    set $P5014, $P5013
  if713_end1329:
    unless_null $P5014, vivi_7141330
    nqp_get_sc_object $P5015, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5014, $P5015
  vivi_7141330:
    $P5016 = $P5003."new"($P5007, $P5010, $P5014, "callmethod" :named("op"), "symlink" :named("name"))
    $P5017 = _lex_param_0."as_post"($P5016)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_279_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2018
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_210 
    .local pmc fb_tmp_211 
.annotate 'line', 2019
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if715_end1332 
    box $P5002, "The 'link' op expects two operands"
    die $P5002
  if715_end1332:
.annotate 'line', 2022
    nqp_get_sc_object $P5003, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
.annotate 'line', 2025
    nqp_get_sc_object $P5004, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 89
.annotate 'line', 2026
    nqp_get_sc_object $P5005, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 52
    $P5006 = $P5005."new"("OS" :named("value"))
    $P5007 = $P5004."new"($P5006, "new__Ps" :named("pirop"))
    set fb_tmp_210, _lex_param_1
    repr_defined $I5002, fb_tmp_210
    unless $I5002 goto if716_else1333 
    set $P5008, fb_tmp_210[0]
    set $P5010, $P5008
    goto if716_end1334
  if716_else1333:
    null $P5009
    set $P5010, $P5009
  if716_end1334:
    unless_null $P5010, vivi_7171335
    nqp_get_sc_object $P5011, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5010, $P5011
  vivi_7171335:
    set fb_tmp_211, _lex_param_1
    repr_defined $I5003, fb_tmp_211
    unless $I5003 goto if718_else1336 
    set $P5012, fb_tmp_211[1]
    set $P5014, $P5012
    goto if718_end1337
  if718_else1336:
    null $P5013
    set $P5014, $P5013
  if718_end1337:
    unless_null $P5014, vivi_7191338
    nqp_get_sc_object $P5015, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5014, $P5015
  vivi_7191338:
    $P5016 = $P5003."new"($P5007, $P5010, $P5014, "callmethod" :named("op"), "link" :named("name"))
    $P5017 = _lex_param_0."as_post"($P5016)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_280_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2131
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_212 
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 1
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if720_end1340 
.annotate 'line', 2132
    box $P5002, "flip requires one operand"
    die $P5002
  if720_end1340:
.annotate 'line', 2135
.annotate 'line', 2136
    nqp_get_sc_object $P5003, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 89
.annotate 'line', 2137
    nqp_get_sc_object $P5004, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
.annotate 'line', 2139
    nqp_get_sc_object $P5005, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 89
    set fb_tmp_212, _lex_param_1
    repr_defined $I5002, fb_tmp_212
    unless $I5002 goto if721_else1341 
    set $P5006, fb_tmp_212[0]
    set $P5008, $P5006
    goto if721_end1342
  if721_else1341:
    null $P5007
    set $P5008, $P5007
  if721_end1342:
    unless_null $P5008, vivi_7221343
    nqp_get_sc_object $P5009, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5008, $P5009
  vivi_7221343:
    $P5010 = $P5005."new"($P5008, "box__PS" :named("pirop"))
    $P5011 = $P5004."new"($P5010, "callmethod" :named("op"), "reverse" :named("name"))
    $P5012 = $P5003."new"($P5011, "set__SP" :named("pirop"))
    $P5013 = _lex_param_0."as_post"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_281_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2147
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "@operands", $P101 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    new $P5001, 'QRPA'
    set $P101, $P5001
.annotate 'line', 2148
    $P5002 = _lex_param_1."list"()
    set $P101, $P5002
.annotate 'line', 2149
    set $N5001, $P101
    set $N5002, 2
    iseq $I5001, $N5001, $N5002
    unless $I5001 goto if723_else1344 
.annotate 'line', 2150
    nqp_get_sc_object $P5003, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
    $P5004 = $P5003."new"($P101 :flat, "substr2" :named("op"))
    set $P5007, $P5004
    goto if723_end1345
  if723_else1344:
.annotate 'line', 2151
    nqp_get_sc_object $P5005, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
    $P5006 = $P5005."new"($P101 :flat, "substr3" :named("op"))
    set $P5007, $P5006
  if723_end1345:
    $P5008 = _lex_param_0."as_post"($P5007)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_282_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2157
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "@operands", $P101 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    new $P5001, 'QRPA'
    set $P101, $P5001
.annotate 'line', 2158
    $P5002 = _lex_param_1."list"()
    set $P101, $P5002
.annotate 'line', 2159
    set $N5001, $P101
    set $N5002, 1
    iseq $I5001, $N5001, $N5002
    unless $I5001 goto if724_else1346 
.annotate 'line', 2160
    nqp_get_sc_object $P5003, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
    $P5004 = $P5003."new"($P101 :flat, "ordfirst" :named("op"))
    set $P5007, $P5004
    goto if724_end1347
  if724_else1346:
.annotate 'line', 2161
    nqp_get_sc_object $P5005, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
    $P5006 = $P5005."new"($P101 :flat, "ordat" :named("op"))
    set $P5007, $P5006
  if724_end1347:
    $P5008 = _lex_param_0."as_post"($P5007)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_283_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2166
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "@operands", $P101 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    new $P5001, 'QRPA'
    set $P101, $P5001
.annotate 'line', 2167
    $P5002 = _lex_param_1."list"()
    set $P101, $P5002
.annotate 'line', 2168
    set $N5001, $P101
    set $N5002, 2
    iseq $I5001, $N5001, $N5002
    unless $I5001 goto if725_else1348 
.annotate 'line', 2169
    nqp_get_sc_object $P5003, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
    nqp_get_sc_object $P5004, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 42
    $P5005 = $P5004."new"(0 :named("value"))
    $P5006 = $P5003."new"($P101 :flat, $P5005, "indexfrom" :named("op"))
    set $P5009, $P5006
    goto if725_end1349
  if725_else1348:
.annotate 'line', 2170
    nqp_get_sc_object $P5007, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
    $P5008 = $P5007."new"($P101 :flat, "indexfrom" :named("op"))
    set $P5009, $P5008
  if725_end1349:
    $P5010 = _lex_param_0."as_post"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_284_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2174
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "@operands", $P101 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    new $P5001, 'QRPA'
    set $P101, $P5001
.annotate 'line', 2175
    $P5002 = _lex_param_1."list"()
    set $P101, $P5002
.annotate 'line', 2176
    set $N5001, $P101
    set $N5002, 2
    iseq $I5001, $N5001, $N5002
    unless $I5001 goto if726_else1350 
.annotate 'line', 2177
    nqp_get_sc_object $P5003, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
    $P5004 = $P5003."new"($P101 :flat, "rindexfromend" :named("op"))
    set $P5007, $P5004
    goto if726_end1351
  if726_else1350:
.annotate 'line', 2178
    nqp_get_sc_object $P5005, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
    $P5006 = $P5005."new"($P101 :flat, "rindexfrom" :named("op"))
    set $P5007, $P5006
  if726_end1351:
    $P5008 = _lex_param_0."as_post"($P5007)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_285_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2181
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "@operands", $P101 
    .lex "$i_reg", $P102 
    .lex "$s_reg", $P103 
    .lex "$ops", $P104 
    .lex "$name", $P105 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_213 
    .local pmc fb_tmp_214 
    .local pmc fb_tmp_215 
    new $P5001, 'QRPA'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P105, $P5005
.annotate 'line', 2182
    $P5006 = _lex_param_1."list"()
    set $P101, $P5006
    set $N5001, $P101
    set $N5002, 1
    iseq $I5001, $N5001, $N5002
    if $I5001 goto unless727_end1353 
    box $P5007, "codepointfromname expects a single child"
    die $P5007
  unless727_end1353:
.annotate 'line', 2184
    find_dynamic_lex $P5008, "$*REGALLOC"
    unless_null $P5008, fallback1354
    nqp_get_sc_object $P5010, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5009, $P5010
    set fb_tmp_213, $P5009
    repr_defined $I5002, fb_tmp_213
    unless $I5002 goto if728_else1355 
    set $P5011, fb_tmp_213["$REGALLOC"]
    set $P5013, $P5011
    goto if728_end1356
  if728_else1355:
    null $P5012
    set $P5013, $P5012
  if728_end1356:
    unless_null $P5013, vivi_7291357
    nqp_get_sc_object $P5014, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5013, $P5014
  vivi_7291357:
    unless_null $P5013, vivi_7301358
    die "Contextual $*REGALLOC not found"
    box $P5015, "Contextual $*REGALLOC not found"
    set $P5013, $P5015
  vivi_7301358:
    set $P5008, $P5013
  fallback1354:
    $P5016 = $P5008."fresh_i"()
    set $P102, $P5016
.annotate 'line', 2185
    find_dynamic_lex $P5017, "$*REGALLOC"
    unless_null $P5017, fallback1359
    nqp_get_sc_object $P5019, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5018, $P5019
    set fb_tmp_214, $P5018
    repr_defined $I5003, fb_tmp_214
    unless $I5003 goto if731_else1360 
    set $P5020, fb_tmp_214["$REGALLOC"]
    set $P5022, $P5020
    goto if731_end1361
  if731_else1360:
    null $P5021
    set $P5022, $P5021
  if731_end1361:
    unless_null $P5022, vivi_7321362
    nqp_get_sc_object $P5023, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5022, $P5023
  vivi_7321362:
    unless_null $P5022, vivi_7331363
    die "Contextual $*REGALLOC not found"
    box $P5024, "Contextual $*REGALLOC not found"
    set $P5022, $P5024
  vivi_7331363:
    set $P5017, $P5022
  fallback1359:
    $P5025 = $P5017."fresh_s"()
    set $P103, $P5025
.annotate 'line', 2186
    nqp_get_sc_object $P5026, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5027 = $P5026."new"()
    set $P104, $P5027
.annotate 'line', 2187
    set fb_tmp_215, _lex_param_1
    repr_defined $I5004, fb_tmp_215
    unless $I5004 goto if734_else1364 
    set $P5028, fb_tmp_215[0]
    set $P5030, $P5028
    goto if734_end1365
  if734_else1364:
    null $P5029
    set $P5030, $P5029
  if734_end1365:
    unless_null $P5030, vivi_7351366
    nqp_get_sc_object $P5031, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5030, $P5031
  vivi_7351366:
    $P5032 = _lex_param_0."as_post"($P5030)
    $P5033 = _lex_param_0."coerce"($P5032, "S")
    set $P105, $P5033
.annotate 'line', 2188
    $P104."push"($P105)
.annotate 'line', 2189
    $P104."push_pirop"("find_encoding", $P102, "'utf8'")
.annotate 'line', 2190
    $P104."push_pirop"("trans_encoding", $P103, $P105, $P102)
.annotate 'line', 2191
    $P104."push_pirop"("find_codepoint", $P102, $P103)
.annotate 'line', 2192
    $P104."result"($P102)
    .return ($P104) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_286_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2291
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_216 
.annotate 'line', 2292
    nqp_get_sc_object $P5001, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
    set fb_tmp_216, _lex_param_1
    repr_defined $I5001, fb_tmp_216
    unless $I5001 goto if736_else1367 
    set $P5002, fb_tmp_216[0]
    set $P5004, $P5002
    goto if736_end1368
  if736_else1367:
    null $P5003
    set $P5004, $P5003
  if736_end1368:
    unless_null $P5004, vivi_7371369
    nqp_get_sc_object $P5005, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5004, $P5005
  vivi_7371369:
    $P5006 = $P5001."new"($P5004, "callmethod" :named("op"), "key" :named("name"))
    $P5007 = _lex_param_0."as_post"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_287_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2294
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_217 
.annotate 'line', 2295
    nqp_get_sc_object $P5001, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
    set fb_tmp_217, _lex_param_1
    repr_defined $I5001, fb_tmp_217
    unless $I5001 goto if738_else1370 
    set $P5002, fb_tmp_217[0]
    set $P5004, $P5002
    goto if738_end1371
  if738_else1370:
    null $P5003
    set $P5004, $P5003
  if738_end1371:
    unless_null $P5004, vivi_7391372
    nqp_get_sc_object $P5005, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5004, $P5005
  vivi_7391372:
    $P5006 = $P5001."new"($P5004, "callmethod" :named("op"), "value" :named("name"))
    $P5007 = _lex_param_0."as_post"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_288_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2376
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_218 
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 1
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if740_end1374 
.annotate 'line', 2377
    box $P5002, "getcodecuid requires one operand"
    die $P5002
  if740_end1374:
.annotate 'line', 2380
    nqp_get_sc_object $P5003, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
    set fb_tmp_218, _lex_param_1
    repr_defined $I5002, fb_tmp_218
    unless $I5002 goto if741_else1375 
    set $P5004, fb_tmp_218[0]
    set $P5006, $P5004
    goto if741_end1376
  if741_else1375:
    null $P5005
    set $P5006, $P5005
  if741_end1376:
    unless_null $P5006, vivi_7421377
    nqp_get_sc_object $P5007, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5006, $P5007
  vivi_7421377:
    $P5008 = $P5003."new"($P5006, "callmethod" :named("op"), "get_subid" :named("name"))
    $P5009 = _lex_param_0."as_post"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_289_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2385
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$cuid", $P101 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_219 
    .local pmc fb_tmp_220 
    .local pmc fb_tmp_221 
    .local pmc fb_tmp_222 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    $P5002 = _lex_param_1."list"()
    set $N5001, $P5002
    set $N5002, 3
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if743_end1379 
.annotate 'line', 2386
    box $P5003, "setstaticlex requires three operands"
    die $P5003
  if743_end1379:
    set fb_tmp_219, _lex_param_1
    repr_defined $I5003, fb_tmp_219
    unless $I5003 goto if745_else1382 
    set $P5004, fb_tmp_219[0]
    set $P5006, $P5004
    goto if745_end1383
  if745_else1382:
    null $P5005
    set $P5006, $P5005
  if745_end1383:
    unless_null $P5006, vivi_7461384
    nqp_get_sc_object $P5007, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5006, $P5007
  vivi_7461384:
    nqp_get_sc_object $P5008, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 103
    type_check $I5002, $P5006, $P5008
    if $I5002 goto unless744_end1381 
.annotate 'line', 2389
    box $P5009, "First operand to setstaticlex must be a QAST::Block"
    die $P5009
  unless744_end1381:
.annotate 'line', 2392
    set fb_tmp_220, _lex_param_1
    repr_defined $I5004, fb_tmp_220
    unless $I5004 goto if747_else1385 
    set $P5010, fb_tmp_220[0]
    set $P5012, $P5010
    goto if747_end1386
  if747_else1385:
    null $P5011
    set $P5012, $P5011
  if747_end1386:
    unless_null $P5012, vivi_7481387
    nqp_get_sc_object $P5013, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5012, $P5013
  vivi_7481387:
    $P5014 = $P5012."cuid"()
    set $P101, $P5014
.annotate 'line', 2393
    nqp_get_sc_object $P5015, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 93
.annotate 'line', 2394
    nqp_get_sc_object $P5016, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
.annotate 'line', 2396
    nqp_get_sc_object $P5017, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 89
    set $S5003, $P101
    concat $S5002, "    .const \"LexInfo\" %r = \"", $S5003
    concat $S5001, $S5002, "\""
    $P5018 = $P5017."new"($S5001 :named("pir"))
    set fb_tmp_221, _lex_param_1
    repr_defined $I5005, fb_tmp_221
    unless $I5005 goto if749_else1388 
    set $P5019, fb_tmp_221[1]
    set $P5021, $P5019
    goto if749_end1389
  if749_else1388:
    null $P5020
    set $P5021, $P5020
  if749_end1389:
    unless_null $P5021, vivi_7501390
    nqp_get_sc_object $P5022, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5021, $P5022
  vivi_7501390:
    set fb_tmp_222, _lex_param_1
    repr_defined $I5006, fb_tmp_222
    unless $I5006 goto if751_else1391 
    set $P5023, fb_tmp_222[2]
    set $P5025, $P5023
    goto if751_end1392
  if751_else1391:
    null $P5024
    set $P5025, $P5024
  if751_end1392:
    unless_null $P5025, vivi_7521393
    nqp_get_sc_object $P5026, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5025, $P5026
  vivi_7521393:
    $P5027 = $P5016."new"($P5018, $P5021, $P5025, "callmethod" :named("op"), "set_static_lexpad_value" :named("name"))
.annotate 'line', 2404
    nqp_get_sc_object $P5028, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
.annotate 'line', 2406
    nqp_get_sc_object $P5029, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 89
    set $S5006, $P101
    concat $S5005, "    .const \"LexInfo\" %r = \"", $S5006
    concat $S5004, $S5005, "\""
    $P5030 = $P5029."new"($S5004 :named("pir"))
    $P5031 = $P5028."new"($P5030, "callmethod" :named("op"), "finish_static_lexpad" :named("name"))
    $P5032 = $P5015."new"($P5027, $P5031)
    $P5033 = _lex_param_0."as_post"($P5032)
    .return ($P5033) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_290_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2412
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_223 
    .local pmc fb_tmp_224 
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if753_end1395 
.annotate 'line', 2413
    box $P5002, "forceouterctx requires two operands"
    die $P5002
  if753_end1395:
.annotate 'line', 2416
    nqp_get_sc_object $P5003, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
    set fb_tmp_223, _lex_param_1
    repr_defined $I5002, fb_tmp_223
    unless $I5002 goto if754_else1396 
    set $P5004, fb_tmp_223[0]
    set $P5006, $P5004
    goto if754_end1397
  if754_else1396:
    null $P5005
    set $P5006, $P5005
  if754_end1397:
    unless_null $P5006, vivi_7551398
    nqp_get_sc_object $P5007, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5006, $P5007
  vivi_7551398:
    set fb_tmp_224, _lex_param_1
    repr_defined $I5003, fb_tmp_224
    unless $I5003 goto if756_else1399 
    set $P5008, fb_tmp_224[1]
    set $P5010, $P5008
    goto if756_end1400
  if756_else1399:
    null $P5009
    set $P5010, $P5009
  if756_end1400:
    unless_null $P5010, vivi_7571401
    nqp_get_sc_object $P5011, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5010, $P5011
  vivi_7571401:
    $P5012 = $P5003."new"($P5006, $P5010, "callmethod" :named("op"), "set_outer_ctx" :named("name"))
    $P5013 = _lex_param_0."as_post"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_291_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2423
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "$code", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_225 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    $P5003 = _lex_param_1."list"()
    set $N5001, $P5003
    set $N5002, 1
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if758_end1403 
.annotate 'line', 2424
    box $P5004, "markcodestatic requires one operand"
    die $P5004
  if758_end1403:
.annotate 'line', 2427
    nqp_get_sc_object $P5005, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5006 = $P5005."new"()
    set $P101, $P5006
.annotate 'line', 2428
    set fb_tmp_225, _lex_param_1
    repr_defined $I5002, fb_tmp_225
    unless $I5002 goto if759_else1404 
    set $P5007, fb_tmp_225[0]
    set $P5009, $P5007
    goto if759_end1405
  if759_else1404:
    null $P5008
    set $P5009, $P5008
  if759_end1405:
    unless_null $P5009, vivi_7601406
    nqp_get_sc_object $P5010, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5009, $P5010
  vivi_7601406:
    $P5011 = _lex_param_0."as_post"($P5009)
    $P5012 = _lex_param_0."coerce"($P5011, "P")
    set $P102, $P5012
.annotate 'line', 2429
    $P101."push"($P102)
.annotate 'line', 2430
    $P101."push_pirop"("setprop", $P102, "'STATIC_CODE_REF'", $P102)
.annotate 'line', 2431
    $P101."result"($P102)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_292_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2434
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "$code", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_226 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    $P5003 = _lex_param_1."list"()
    set $N5001, $P5003
    set $N5002, 1
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if761_end1408 
.annotate 'line', 2435
    box $P5004, "markcodestatic requires one operand"
    die $P5004
  if761_end1408:
.annotate 'line', 2438
    nqp_get_sc_object $P5005, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5006 = $P5005."new"()
    set $P101, $P5006
.annotate 'line', 2439
    set fb_tmp_226, _lex_param_1
    repr_defined $I5002, fb_tmp_226
    unless $I5002 goto if762_else1409 
    set $P5007, fb_tmp_226[0]
    set $P5009, $P5007
    goto if762_end1410
  if762_else1409:
    null $P5008
    set $P5009, $P5008
  if762_end1410:
    unless_null $P5009, vivi_7631411
    nqp_get_sc_object $P5010, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5009, $P5010
  vivi_7631411:
    $P5011 = _lex_param_0."as_post"($P5009)
    $P5012 = _lex_param_0."coerce"($P5011, "P")
    set $P102, $P5012
.annotate 'line', 2440
    $P101."push"($P102)
.annotate 'line', 2441
    $P101."push_pirop"("setprop", $P102, "'COMPILER_STUB'", $P102)
.annotate 'line', 2442
    $P101."result"($P102)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_293_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2445
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_227 
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 1
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if764_end1413 
.annotate 'line', 2446
    box $P5002, "getcodecuid requires one operand"
    die $P5002
  if764_end1413:
.annotate 'line', 2449
    nqp_get_sc_object $P5003, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
.annotate 'line', 2451
    nqp_get_sc_object $P5004, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
    set fb_tmp_227, _lex_param_1
    repr_defined $I5002, fb_tmp_227
    unless $I5002 goto if765_else1414 
    set $P5005, fb_tmp_227[0]
    set $P5007, $P5005
    goto if765_end1415
  if765_else1414:
    null $P5006
    set $P5007, $P5006
  if765_end1415:
    unless_null $P5007, vivi_7661416
    nqp_get_sc_object $P5008, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5007, $P5008
  vivi_7661416:
    $P5009 = $P5004."new"($P5007, "callmethod" :named("op"), "get_lexinfo" :named("name"))
    $P5010 = $P5003."new"($P5009, "callmethod" :named("op"), "get_static_code" :named("name"))
    $P5011 = _lex_param_0."as_post"($P5010)
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_294_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2464
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_228 
.annotate 'line', 2465
    nqp_get_sc_object $P5001, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 4
    set fb_tmp_228, _lex_param_1
    repr_defined $I5001, fb_tmp_228
    unless $I5001 goto if767_else1417 
    set $P5003, fb_tmp_228[0]
    set $P5005, $P5003
    goto if767_end1418
  if767_else1417:
    null $P5004
    set $P5005, $P5004
  if767_end1418:
    unless_null $P5005, vivi_7681419
    nqp_get_sc_object $P5006, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5005, $P5006
  vivi_7681419:
    $P5007 = $P5001."new"($P5005, "callmethod" :named("op"), "handle" :named("name"), $P5002 :named("returns"))
    $P5008 = _lex_param_0."as_post"($P5007)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_295_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2470
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_229 
    .local pmc fb_tmp_230 
.annotate 'line', 2471
    nqp_get_sc_object $P5001, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 2
    set fb_tmp_229, _lex_param_1
    repr_defined $I5001, fb_tmp_229
    unless $I5001 goto if769_else1420 
    set $P5003, fb_tmp_229[0]
    set $P5005, $P5003
    goto if769_end1421
  if769_else1420:
    null $P5004
    set $P5005, $P5004
  if769_end1421:
    unless_null $P5005, vivi_7701422
    nqp_get_sc_object $P5006, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5005, $P5006
  vivi_7701422:
    set fb_tmp_230, _lex_param_1
    repr_defined $I5002, fb_tmp_230
    unless $I5002 goto if771_else1423 
    set $P5007, fb_tmp_230[1]
    set $P5009, $P5007
    goto if771_end1424
  if771_else1423:
    null $P5008
    set $P5009, $P5008
  if771_end1424:
    unless_null $P5009, vivi_7721425
    nqp_get_sc_object $P5010, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5009, $P5010
  vivi_7721425:
    $P5011 = $P5001."new"($P5005, $P5009, "callmethod" :named("op"), "slot_index_for" :named("name"), $P5002 :named("returns"))
    $P5012 = _lex_param_0."as_post"($P5011)
    .return ($P5012) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_296_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2476
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_231 
    .local pmc fb_tmp_232 
.annotate 'line', 2477
    nqp_get_sc_object $P5001, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
    set fb_tmp_231, _lex_param_1
    repr_defined $I5001, fb_tmp_231
    unless $I5001 goto if773_else1426 
    set $P5002, fb_tmp_231[0]
    set $P5004, $P5002
    goto if773_end1427
  if773_else1426:
    null $P5003
    set $P5004, $P5003
  if773_end1427:
    unless_null $P5004, vivi_7741428
    nqp_get_sc_object $P5005, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5004, $P5005
  vivi_7741428:
    set fb_tmp_232, _lex_param_1
    repr_defined $I5002, fb_tmp_232
    unless $I5002 goto if775_else1429 
    set $P5006, fb_tmp_232[1]
    set $P5008, $P5006
    goto if775_end1430
  if775_else1429:
    null $P5007
    set $P5008, $P5007
  if775_end1430:
    unless_null $P5008, vivi_7761431
    nqp_get_sc_object $P5009, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5008, $P5009
  vivi_7761431:
    $P5010 = $P5001."new"($P5004, $P5008, "callmethod" :named("op"), "set_description" :named("name"))
    $P5011 = _lex_param_0."as_post"($P5010)
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_297_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2482
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_233 
.annotate 'line', 2483
    nqp_get_sc_object $P5001, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
    set fb_tmp_233, _lex_param_1
    repr_defined $I5001, fb_tmp_233
    unless $I5001 goto if777_else1432 
    set $P5002, fb_tmp_233[0]
    set $P5004, $P5002
    goto if777_end1433
  if777_else1432:
    null $P5003
    set $P5004, $P5003
  if777_end1433:
    unless_null $P5004, vivi_7781434
    nqp_get_sc_object $P5005, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5004, $P5005
  vivi_7781434:
    $P5006 = $P5001."new"($P5004, "callmethod" :named("op"), "elems" :named("name"))
    $P5007 = _lex_param_0."as_post"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_298_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2493
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 2494
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5003 = $P5002."new"()
    set $P101, $P5003
.annotate 'line', 2495
    $P101."push_pirop"("nqp_disable_sc_write_barrier")
.annotate 'line', 2496
    $P101."result"("0")
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_299_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2499
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 2500
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5003 = $P5002."new"()
    set $P101, $P5003
.annotate 'line', 2501
    $P101."push_pirop"("nqp_enable_sc_write_barrier")
.annotate 'line', 2502
    $P101."result"("0")
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_300_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2506
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 2507
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5003 = $P5002."new"()
    set $P101, $P5003
.annotate 'line', 2508
    $P101."push_pirop"("nqp_pop_compiling_sc")
.annotate 'line', 2509
    $P101."result"("0")
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_301_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2519
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_234 
    .local pmc fb_tmp_235 
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if779_end1436 
.annotate 'line', 2520
    box $P5002, "gethllsym requires two operands"
    die $P5002
  if779_end1436:
.annotate 'line', 2523
    nqp_get_sc_object $P5003, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 89
.annotate 'line', 2525
    nqp_get_sc_object $P5004, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
    set fb_tmp_234, _lex_param_1
    repr_defined $I5002, fb_tmp_234
    unless $I5002 goto if780_else1437 
    set $P5005, fb_tmp_234[0]
    set $P5007, $P5005
    goto if780_end1438
  if780_else1437:
    null $P5006
    set $P5007, $P5006
  if780_end1438:
    unless_null $P5007, vivi_7811439
    nqp_get_sc_object $P5008, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5007, $P5008
  vivi_7811439:
    $P5009 = $P5004."new"($P5007, "list_s" :named("op"))
    set fb_tmp_235, _lex_param_1
    repr_defined $I5003, fb_tmp_235
    unless $I5003 goto if782_else1440 
    set $P5010, fb_tmp_235[1]
    set $P5012, $P5010
    goto if782_end1441
  if782_else1440:
    null $P5011
    set $P5012, $P5011
  if782_end1441:
    unless_null $P5012, vivi_7831442
    nqp_get_sc_object $P5013, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5012, $P5013
  vivi_7831442:
    $P5014 = $P5003."new"($P5009, $P5012, "get_root_global__PPs" :named("pirop"))
    $P5015 = _lex_param_0."as_post"($P5014)
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_302_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2529
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_236 
    .local pmc fb_tmp_237 
    .local pmc fb_tmp_238 
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 3
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if784_end1444 
.annotate 'line', 2530
    box $P5002, "bindhllsym requires three operands"
    die $P5002
  if784_end1444:
.annotate 'line', 2533
    nqp_get_sc_object $P5003, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 89
.annotate 'line', 2535
    nqp_get_sc_object $P5004, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
    set fb_tmp_236, _lex_param_1
    repr_defined $I5002, fb_tmp_236
    unless $I5002 goto if785_else1445 
    set $P5005, fb_tmp_236[0]
    set $P5007, $P5005
    goto if785_end1446
  if785_else1445:
    null $P5006
    set $P5007, $P5006
  if785_end1446:
    unless_null $P5007, vivi_7861447
    nqp_get_sc_object $P5008, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5007, $P5008
  vivi_7861447:
    $P5009 = $P5004."new"($P5007, "list_s" :named("op"))
    set fb_tmp_237, _lex_param_1
    repr_defined $I5003, fb_tmp_237
    unless $I5003 goto if787_else1448 
    set $P5010, fb_tmp_237[1]
    set $P5012, $P5010
    goto if787_end1449
  if787_else1448:
    null $P5011
    set $P5012, $P5011
  if787_end1449:
    unless_null $P5012, vivi_7881450
    nqp_get_sc_object $P5013, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5012, $P5013
  vivi_7881450:
    set fb_tmp_238, _lex_param_1
    repr_defined $I5004, fb_tmp_238
    unless $I5004 goto if789_else1451 
    set $P5014, fb_tmp_238[2]
    set $P5016, $P5014
    goto if789_end1452
  if789_else1451:
    null $P5015
    set $P5016, $P5015
  if789_end1452:
    unless_null $P5016, vivi_7901453
    nqp_get_sc_object $P5017, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5016, $P5017
  vivi_7901453:
    $P5018 = $P5003."new"($P5009, $P5012, $P5016, "set_root_global__2PsP" :named("pirop"))
    $P5019 = _lex_param_0."as_post"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_304_1366375329.52446") :anon :lex :outer("cuid_145_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2557
    .const 'Sub' $P5093 = 'cuid_303_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_305_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_307_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_308_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_309_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_87_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_88_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_89_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_90_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_91_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_92_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_93_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_94_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_95_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_96_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_97_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_98_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_99_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_100_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_101_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_102_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_103_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_104_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_105_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_106_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_107_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_108_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_109_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_110_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_111_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_112_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_113_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_114_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_115_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_116_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_117_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_118_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_119_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_120_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_121_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_122_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_123_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_124_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_125_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_126_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_127_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_128_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_129_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_130_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_131_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_132_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_133_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_134_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_135_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_136_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_137_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_138_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_139_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_140_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_141_1366375329.52446' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_142_1366375329.52446' 
    capture_lex $P5093 
    .lex "RegAlloc", $P101 
    .lex "BlockInfo", $P102 
    .lex "@prim_to_reg", $P103 
    .lex "&type_to_register_type", $P104 
    .lex "@prim_to_lookup_name", $P105 
    .lex "&type_to_lookup_name", $P106 
    .lex "%hll_force_return_boxing", $P107 
    .lex "&want", $P108 
    .lex "%cclass_code", $P109 
    .lex "$?PACKAGE", $P110 
    .lex "$?CLASS", $P111 
    .local pmc fb_tmp_252 
    new $P5001, 'QRPA'
    set $P103, $P5001
    .const 'Sub' $P5002 = 'cuid_303_1366375329.52446' 
    capture_lex $P5002
    set $P104, $P5002
    new $P5003, 'QRPA'
    set $P105, $P5003
    .const 'Sub' $P5004 = 'cuid_305_1366375329.52446' 
    capture_lex $P5004
    set $P106, $P5004
    new $P5005, 'Hash'
    set $P107, $P5005
    .const 'Sub' $P5006 = 'cuid_307_1366375329.52446' 
    capture_lex $P5006
    set $P108, $P5006
    new $P5007, 'Hash'
    set $P109, $P5007
.annotate 'line', 2736
    get_who $P5008, $P110
    box $P5009, 10
    set $P5008["$serno"], $P5009

            $P0 = get_root_global ['parrot';'QAST'], 'Compiler'
            unless null $P0 goto have_qastcomp
            $P0 = find_lex '$?CLASS'
            set_root_global ['parrot';'QAST'], 'Compiler', $P0
            compreg 'QAST', $P0
          have_qastcomp:
        
.annotate 'line', 3842
    box $P5010, ".CCLASS_ANY"
    set $P109["."], $P5010
    box $P5011, ".CCLASS_NUMERIC"
    set $P109["d"], $P5011
    box $P5012, ".CCLASS_WHITESPACE"
    set $P109["s"], $P5012
    box $P5013, ".CCLASS_WORD"
    set $P109["w"], $P5013
    box $P5014, ".CCLASS_NEWLINE"
    set $P109["n"], $P5014
.annotate 'line', 2557
    .const 'Sub' $P5015 = 'cuid_308_1366375329.52446' 
    capture_lex $P5015
    $P5016 = $P5015()
    .const 'Sub' $P5017 = 'cuid_309_1366375329.52446' 
    capture_lex $P5017
    $P5018 = $P5017()
    .const 'Sub' $P5027 = 'cuid_87_1366375329.52446' 
    capture_lex $P5027
    .const 'Sub' $P5028 = 'cuid_88_1366375329.52446' 
    capture_lex $P5028
    new $P5029, 'QRPA'
    box $P5030, "P"
    push $P5029, $P5030
    box $P5031, "I"
    push $P5029, $P5031
    box $P5032, "N"
    push $P5029, $P5032
    box $P5033, "S"
    push $P5029, $P5033
    set $P103, $P5029
    .const 'Sub' $P5034 = 'cuid_89_1366375329.52446' 
    capture_lex $P5034
    new $P5035, 'QRPA'
    box $P5036, "obj"
    push $P5035, $P5036
    box $P5037, "int"
    push $P5035, $P5037
    box $P5038, "num"
    push $P5035, $P5038
    box $P5039, "str"
    push $P5035, $P5039
    set $P105, $P5035
    .const 'Sub' $P5040 = 'cuid_90_1366375329.52446' 
    capture_lex $P5040
    .const 'Sub' $P5041 = 'cuid_91_1366375329.52446' 
    capture_lex $P5041
    .const 'Sub' $P5042 = 'cuid_92_1366375329.52446' 
    capture_lex $P5042
    .const 'Sub' $P5043 = 'cuid_93_1366375329.52446' 
    capture_lex $P5043
    .const 'Sub' $P5044 = 'cuid_94_1366375329.52446' 
    capture_lex $P5044
    .const 'Sub' $P5045 = 'cuid_95_1366375329.52446' 
    capture_lex $P5045
    .const 'Sub' $P5046 = 'cuid_96_1366375329.52446' 
    capture_lex $P5046
    .const 'Sub' $P5047 = 'cuid_97_1366375329.52446' 
    capture_lex $P5047
    .const 'Sub' $P5048 = 'cuid_98_1366375329.52446' 
    capture_lex $P5048
    .const 'Sub' $P5049 = 'cuid_99_1366375329.52446' 
    capture_lex $P5049
    .const 'Sub' $P5050 = 'cuid_100_1366375329.52446' 
    capture_lex $P5050
    .const 'Sub' $P5051 = 'cuid_101_1366375329.52446' 
    capture_lex $P5051
    .const 'Sub' $P5052 = 'cuid_102_1366375329.52446' 
    capture_lex $P5052
    .const 'Sub' $P5053 = 'cuid_103_1366375329.52446' 
    capture_lex $P5053
    .const 'Sub' $P5054 = 'cuid_104_1366375329.52446' 
    capture_lex $P5054
    .const 'Sub' $P5055 = 'cuid_105_1366375329.52446' 
    capture_lex $P5055
    .const 'Sub' $P5056 = 'cuid_106_1366375329.52446' 
    capture_lex $P5056
    .const 'Sub' $P5057 = 'cuid_107_1366375329.52446' 
    capture_lex $P5057
    .const 'Sub' $P5058 = 'cuid_108_1366375329.52446' 
    capture_lex $P5058
    .const 'Sub' $P5059 = 'cuid_109_1366375329.52446' 
    capture_lex $P5059
    .const 'Sub' $P5060 = 'cuid_110_1366375329.52446' 
    capture_lex $P5060
    .const 'Sub' $P5061 = 'cuid_111_1366375329.52446' 
    capture_lex $P5061
    .const 'Sub' $P5062 = 'cuid_112_1366375329.52446' 
    capture_lex $P5062
    .const 'Sub' $P5063 = 'cuid_113_1366375329.52446' 
    capture_lex $P5063
    .const 'Sub' $P5064 = 'cuid_114_1366375329.52446' 
    capture_lex $P5064
    .const 'Sub' $P5065 = 'cuid_115_1366375329.52446' 
    capture_lex $P5065
    .const 'Sub' $P5066 = 'cuid_116_1366375329.52446' 
    capture_lex $P5066
    .const 'Sub' $P5067 = 'cuid_117_1366375329.52446' 
    capture_lex $P5067
    .const 'Sub' $P5068 = 'cuid_118_1366375329.52446' 
    capture_lex $P5068
    .const 'Sub' $P5069 = 'cuid_119_1366375329.52446' 
    capture_lex $P5069
    .const 'Sub' $P5070 = 'cuid_120_1366375329.52446' 
    capture_lex $P5070
    .const 'Sub' $P5071 = 'cuid_121_1366375329.52446' 
    capture_lex $P5071
    .const 'Sub' $P5072 = 'cuid_122_1366375329.52446' 
    capture_lex $P5072
    .const 'Sub' $P5073 = 'cuid_123_1366375329.52446' 
    capture_lex $P5073
    .const 'Sub' $P5074 = 'cuid_124_1366375329.52446' 
    capture_lex $P5074
    .const 'Sub' $P5075 = 'cuid_125_1366375329.52446' 
    capture_lex $P5075
    .const 'Sub' $P5076 = 'cuid_126_1366375329.52446' 
    capture_lex $P5076
    .const 'Sub' $P5077 = 'cuid_127_1366375329.52446' 
    capture_lex $P5077
    .const 'Sub' $P5078 = 'cuid_128_1366375329.52446' 
    capture_lex $P5078
    .const 'Sub' $P5079 = 'cuid_129_1366375329.52446' 
    capture_lex $P5079
    .const 'Sub' $P5080 = 'cuid_130_1366375329.52446' 
    capture_lex $P5080
    .const 'Sub' $P5081 = 'cuid_131_1366375329.52446' 
    capture_lex $P5081
    .const 'Sub' $P5082 = 'cuid_132_1366375329.52446' 
    capture_lex $P5082
    .const 'Sub' $P5083 = 'cuid_133_1366375329.52446' 
    capture_lex $P5083
    .const 'Sub' $P5084 = 'cuid_134_1366375329.52446' 
    capture_lex $P5084
    .const 'Sub' $P5085 = 'cuid_135_1366375329.52446' 
    capture_lex $P5085
    .const 'Sub' $P5086 = 'cuid_136_1366375329.52446' 
    capture_lex $P5086
    .const 'Sub' $P5087 = 'cuid_137_1366375329.52446' 
    capture_lex $P5087
    .const 'Sub' $P5088 = 'cuid_138_1366375329.52446' 
    capture_lex $P5088
    .const 'Sub' $P5089 = 'cuid_139_1366375329.52446' 
    capture_lex $P5089
    .const 'Sub' $P5090 = 'cuid_140_1366375329.52446' 
    capture_lex $P5090
    .const 'Sub' $P5091 = 'cuid_141_1366375329.52446' 
    capture_lex $P5091
    .const 'Sub' $P5092 = 'cuid_142_1366375329.52446' 
    capture_lex $P5092
    .return ($P5092) 
.end
.HLL "nqp"
.namespace []
.sub "type_to_register_type" :subid("cuid_303_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2770
    .param pmc _lex_param_0 
    .lex "$type", _lex_param_0 
    .local pmc fb_tmp_239 
    find_lex $P5001, "@prim_to_reg"
    set fb_tmp_239, $P5001
    repr_defined $I5001, fb_tmp_239
    unless $I5001 goto if791_else1454 
    repr_get_primitive_type_spec $I5002, _lex_param_0
    set $P5002, fb_tmp_239[$I5002]
    set $P5004, $P5002
    goto if791_end1455
  if791_else1454:
    null $P5003
    set $P5004, $P5003
  if791_end1455:
    unless_null $P5004, vivi_7921456
    nqp_get_sc_object $P5005, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5004, $P5005
  vivi_7921456:
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "type_to_lookup_name" :subid("cuid_305_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2778
    .param pmc _lex_param_0 
    .lex "$type", _lex_param_0 
    .local pmc fb_tmp_240 
    find_lex $P5001, "@prim_to_lookup_name"
    set fb_tmp_240, $P5001
    repr_defined $I5001, fb_tmp_240
    unless $I5001 goto if793_else1457 
    repr_get_primitive_type_spec $I5002, _lex_param_0
    set $P5002, fb_tmp_240[$I5002]
    set $P5004, $P5002
    goto if793_end1458
  if793_else1457:
    null $P5003
    set $P5004, $P5003
  if793_end1458:
    unless_null $P5004, vivi_7941459
    nqp_get_sc_object $P5005, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5004, $P5005
  vivi_7941459:
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "want" :subid("cuid_307_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3223
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5021 = 'cuid_306_1366375329.52446' 
    capture_lex $P5021 
    .lex "@possibles", $P101 
    .lex "$best", $P102 
    .lex "$node", _lex_param_0 
    .lex "$type", _lex_param_1 
    .local pmc fb_tmp_241 
    new $P5001, 'QRPA'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
.annotate 'line', 3224
    $P5004 = _lex_param_0."list"()
    repr_clone $P5003, $P5004
    set $P101, $P5003
    find_lex $P5007, "$?PACKAGE"
    get_who $P5006, $P5007
    set fb_tmp_241, $P5006
    repr_defined $I5001, fb_tmp_241
    unless $I5001 goto if795_else1460 
    set $P5008, fb_tmp_241["possibles"]
    set $P5010, $P5008
    goto if795_end1461
  if795_else1460:
    null $P5009
    set $P5010, $P5009
  if795_end1461:
    unless_null $P5010, vivi_7971463
    nqp_get_sc_object $P5013, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5012, $P5013
    set $P5011, $P5012["possibles"]
    unless_null $P5011, vivi_7961462
    nqp_get_sc_object $P5014, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5011, $P5014
  vivi_7961462:
    set $P5010, $P5011
  vivi_7971463:
    shift $P5005, $P5010
    set $P102, $P5005
    set $P5015, $P101
    iter $P5017, $P101
  for_next1466:
    unless $P5017, for_done1468
    shift $P5019, $P5017
    shift $P5020, $P5017
  for_redo1467:
    .const 'Sub' $P5018 = 'cuid_306_1366375329.52446' 
    capture_lex $P5018
    $P5015 = $P5018($P5019, $P5020)
    goto for_next1466
  for_done1468:
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_306_1366375329.52446") :anon :lex :outer("cuid_307_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3226
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$sel", _lex_param_0 
    .lex "$ast", _lex_param_1 
    set $S5001, _lex_param_0
    find_lex $P5001, "$type"
    set $S5002, $P5001
    index $I5002, $S5001, $S5002, 0
    set $N5001, $I5002
    set $N5002, 0
    isge $I5001, $N5001, $N5002
    box $P5003, $I5001
    set $P5002, $P5003
    unless $I5001 goto if798_end1465 
.annotate 'line', 3227
    store_lex "$best", _lex_param_1
    set $P5002, _lex_param_1
  if798_end1465:
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_308_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2560
    .const 'Sub' $P5012 = 'cuid_52_1366375329.52446' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_53_1366375329.52446' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_54_1366375329.52446' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_55_1366375329.52446' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_56_1366375329.52446' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_57_1366375329.52446' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_58_1366375329.52446' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_59_1366375329.52446' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_60_1366375329.52446' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_61_1366375329.52446' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_62_1366375329.52446' 
    capture_lex $P5012 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .const 'Sub' $P5001 = 'cuid_52_1366375329.52446' 
    capture_lex $P5001
    .const 'Sub' $P5002 = 'cuid_53_1366375329.52446' 
    capture_lex $P5002
    .const 'Sub' $P5003 = 'cuid_54_1366375329.52446' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_55_1366375329.52446' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_56_1366375329.52446' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_57_1366375329.52446' 
    capture_lex $P5006
    .const 'Sub' $P5007 = 'cuid_58_1366375329.52446' 
    capture_lex $P5007
    .const 'Sub' $P5008 = 'cuid_59_1366375329.52446' 
    capture_lex $P5008
    .const 'Sub' $P5009 = 'cuid_60_1366375329.52446' 
    capture_lex $P5009
    .const 'Sub' $P5010 = 'cuid_61_1366375329.52446' 
    capture_lex $P5010
    .const 'Sub' $P5011 = 'cuid_62_1366375329.52446' 
    capture_lex $P5011
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "new" :subid("cuid_52_1366375329.52446") :anon :lex :outer("cuid_308_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2566
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :optional 
    .param int haz_param_11 :opt_flag 
    .lex "$obj", $P101 
    .lex "self", _lex_param_0 
    .lex "$cur", _lex_param_1 
    if haz_param_11, default1471
    nqp_get_sc_object $P5010, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set _lex_param_1, $P5010
  default1471:
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_decontainerize $P5003, _lex_param_0
    repr_instance_of $P5002, $P5003
    set $P101, $P5002
    unless _lex_param_1 goto if799_else1469 
.annotate 'line', 2569
    $P5004 = _lex_param_1."cur_p"()
    $P5005 = _lex_param_1."cur_s"()
    $P5006 = _lex_param_1."cur_i"()
    $P5007 = _lex_param_1."cur_n"()
    $P5008 = $P101."BUILD"($P5004, $P5005, $P5006, $P5007)
    goto if799_end1470
  if799_else1469:
.annotate 'line', 2570
    $P5009 = $P101."BUILD"(5000, 5000, 5000, 5000)
  if799_end1470:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "handler_allocator" :subid("cuid_53_1366375329.52446") :anon :lex :outer("cuid_308_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2574
    .param pmc _lex_param_0 
    .lex "$obj", $P101 
    .lex "self", _lex_param_0 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_decontainerize $P5003, _lex_param_0
    repr_instance_of $P5002, $P5003
    set $P101, $P5002
.annotate 'line', 2576
    $P101."BUILD"(10000, 10000, 10000, 10000)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "BUILD" :subid("cuid_54_1366375329.52446") :anon :lex :outer("cuid_308_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2580
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 
    .lex "self", _lex_param_0 
    .lex "$p", _lex_param_1 
    .lex "$s", _lex_param_2 
    .lex "$i", _lex_param_3 
    .lex "$n", _lex_param_4 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 61
    set $I5001, _lex_param_1
    repr_bind_attr_int $P5001, $P5002, "$!cur_p", $I5001
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 61
    set $I5002, _lex_param_2
    repr_bind_attr_int $P5003, $P5004, "$!cur_s", $I5002
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 61
    set $I5003, _lex_param_3
    repr_bind_attr_int $P5005, $P5006, "$!cur_i", $I5003
    nqp_decontainerize $P5007, _lex_param_0
    nqp_get_sc_object $P5008, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 61
    set $I5004, _lex_param_4
    repr_bind_attr_int $P5007, $P5008, "$!cur_n", $I5004
    .return ($I5004) 
.end
.HLL "nqp"
.namespace []
.sub "fresh_p" :subid("cuid_55_1366375329.52446") :anon :lex :outer("cuid_308_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2587
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 61
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 61
    repr_get_attr_int $I5001, $P5003, $P5004, "$!cur_p"
    set $N5002, $I5001
    set $N5003, 1
    add $N5001, $N5002, $N5003
    set $I5002, $N5001
    repr_bind_attr_int $P5001, $P5002, "$!cur_p", $I5002
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 61
    repr_get_attr_int $I5003, $P5005, $P5006, "$!cur_p"
    set $S5002, $I5003
    concat $S5001, "$P", $S5002
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "fresh_s" :subid("cuid_56_1366375329.52446") :anon :lex :outer("cuid_308_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2591
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 61
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 61
    repr_get_attr_int $I5001, $P5003, $P5004, "$!cur_s"
    set $N5002, $I5001
    set $N5003, 1
    add $N5001, $N5002, $N5003
    set $I5002, $N5001
    repr_bind_attr_int $P5001, $P5002, "$!cur_s", $I5002
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 61
    repr_get_attr_int $I5003, $P5005, $P5006, "$!cur_s"
    set $S5002, $I5003
    concat $S5001, "$S", $S5002
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "fresh_i" :subid("cuid_57_1366375329.52446") :anon :lex :outer("cuid_308_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2595
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 61
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 61
    repr_get_attr_int $I5001, $P5003, $P5004, "$!cur_i"
    set $N5002, $I5001
    set $N5003, 1
    add $N5001, $N5002, $N5003
    set $I5002, $N5001
    repr_bind_attr_int $P5001, $P5002, "$!cur_i", $I5002
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 61
    repr_get_attr_int $I5003, $P5005, $P5006, "$!cur_i"
    set $S5002, $I5003
    concat $S5001, "$I", $S5002
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "fresh_n" :subid("cuid_58_1366375329.52446") :anon :lex :outer("cuid_308_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2599
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 61
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 61
    repr_get_attr_int $I5001, $P5003, $P5004, "$!cur_n"
    set $N5002, $I5001
    set $N5003, 1
    add $N5001, $N5002, $N5003
    set $I5002, $N5001
    repr_bind_attr_int $P5001, $P5002, "$!cur_n", $I5002
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 61
    repr_get_attr_int $I5003, $P5005, $P5006, "$!cur_n"
    set $S5002, $I5003
    concat $S5001, "$N", $S5002
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "cur_p" :subid("cuid_59_1366375329.52446") :anon :lex :outer("cuid_308_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2604
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 61
    repr_get_attr_int $I5001, $P5001, $P5002, "$!cur_p"
    .return ($I5001) 
.end
.HLL "nqp"
.namespace []
.sub "cur_s" :subid("cuid_60_1366375329.52446") :anon :lex :outer("cuid_308_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2605
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 61
    repr_get_attr_int $I5001, $P5001, $P5002, "$!cur_s"
    .return ($I5001) 
.end
.HLL "nqp"
.namespace []
.sub "cur_i" :subid("cuid_61_1366375329.52446") :anon :lex :outer("cuid_308_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2606
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 61
    repr_get_attr_int $I5001, $P5001, $P5002, "$!cur_i"
    .return ($I5001) 
.end
.HLL "nqp"
.namespace []
.sub "cur_n" :subid("cuid_62_1366375329.52446") :anon :lex :outer("cuid_308_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2607
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 61
    repr_get_attr_int $I5001, $P5001, $P5002, "$!cur_n"
    .return ($I5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_309_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2611
    .const 'Sub' $P5031 = 'cuid_63_1366375329.52446' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_64_1366375329.52446' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_65_1366375329.52446' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_66_1366375329.52446' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_67_1366375329.52446' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_68_1366375329.52446' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_69_1366375329.52446' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_70_1366375329.52446' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_71_1366375329.52446' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_72_1366375329.52446' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_73_1366375329.52446' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_74_1366375329.52446' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_75_1366375329.52446' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_76_1366375329.52446' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_77_1366375329.52446' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_78_1366375329.52446' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_79_1366375329.52446' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_80_1366375329.52446' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_81_1366375329.52446' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_82_1366375329.52446' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_83_1366375329.52446' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_84_1366375329.52446' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_85_1366375329.52446' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_86_1366375329.52446' 
    capture_lex $P5031 
    .lex "%longnames", $P101 
    .lex "$?PACKAGE", $P102 
    .lex "$?CLASS", $P103 
    new $P5001, 'Hash'
    set $P101, $P5001
    .const 'Sub' $P5002 = 'cuid_63_1366375329.52446' 
    capture_lex $P5002
    .const 'Sub' $P5003 = 'cuid_64_1366375329.52446' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_65_1366375329.52446' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_66_1366375329.52446' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_67_1366375329.52446' 
    capture_lex $P5006
    .const 'Sub' $P5007 = 'cuid_68_1366375329.52446' 
    capture_lex $P5007
    .const 'Sub' $P5008 = 'cuid_69_1366375329.52446' 
    capture_lex $P5008
    .const 'Sub' $P5009 = 'cuid_70_1366375329.52446' 
    capture_lex $P5009
    .const 'Sub' $P5010 = 'cuid_71_1366375329.52446' 
    capture_lex $P5010
    .const 'Sub' $P5011 = 'cuid_72_1366375329.52446' 
    capture_lex $P5011
    .const 'Sub' $P5012 = 'cuid_73_1366375329.52446' 
    capture_lex $P5012
    .const 'Sub' $P5013 = 'cuid_74_1366375329.52446' 
    capture_lex $P5013
    .const 'Sub' $P5014 = 'cuid_75_1366375329.52446' 
    capture_lex $P5014
    new $P5015, 'Hash'
    box $P5016, "pmc"
    set $P5015["P"], $P5016
    box $P5017, "int"
    set $P5015["I"], $P5017
    box $P5018, "num"
    set $P5015["N"], $P5018
    box $P5019, "string"
    set $P5015["S"], $P5019
    set $P101, $P5015
    .const 'Sub' $P5020 = 'cuid_76_1366375329.52446' 
    capture_lex $P5020
    .const 'Sub' $P5021 = 'cuid_77_1366375329.52446' 
    capture_lex $P5021
    .const 'Sub' $P5022 = 'cuid_78_1366375329.52446' 
    capture_lex $P5022
    .const 'Sub' $P5023 = 'cuid_79_1366375329.52446' 
    capture_lex $P5023
    .const 'Sub' $P5024 = 'cuid_80_1366375329.52446' 
    capture_lex $P5024
    .const 'Sub' $P5025 = 'cuid_81_1366375329.52446' 
    capture_lex $P5025
    .const 'Sub' $P5026 = 'cuid_82_1366375329.52446' 
    capture_lex $P5026
    .const 'Sub' $P5027 = 'cuid_83_1366375329.52446' 
    capture_lex $P5027
    .const 'Sub' $P5028 = 'cuid_84_1366375329.52446' 
    capture_lex $P5028
    .const 'Sub' $P5029 = 'cuid_85_1366375329.52446' 
    capture_lex $P5029
    .const 'Sub' $P5030 = 'cuid_86_1366375329.52446' 
    capture_lex $P5030
    .return ($P5030) 
.end
.HLL "nqp"
.namespace []
.sub "new" :subid("cuid_63_1366375329.52446") :anon :lex :outer("cuid_309_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2628
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$obj", $P101 
    .lex "self", _lex_param_0 
    .lex "$qast", _lex_param_1 
    .lex "$outer", _lex_param_2 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_decontainerize $P5003, _lex_param_0
    repr_instance_of $P5002, $P5003
    set $P101, $P5002
.annotate 'line', 2630
    $P101."BUILD"(_lex_param_1, _lex_param_2)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "BUILD" :subid("cuid_64_1366375329.52446") :anon :lex :outer("cuid_309_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2634
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "self", _lex_param_0 
    .lex "$qast", _lex_param_1 
    .lex "$outer", _lex_param_2 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    repr_bind_attr_obj $P5001, $P5002, "$!qast", _lex_param_1
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    repr_bind_attr_obj $P5003, $P5004, "$!outer", _lex_param_2
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    new $P5007, 'QRPA'
    repr_bind_attr_obj $P5005, $P5006, "@!params", $P5007
    nqp_decontainerize $P5008, _lex_param_0
    nqp_get_sc_object $P5009, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    new $P5010, 'QRPA'
    repr_bind_attr_obj $P5008, $P5009, "@!locals", $P5010
    nqp_decontainerize $P5011, _lex_param_0
    nqp_get_sc_object $P5012, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    new $P5013, 'QRPA'
    repr_bind_attr_obj $P5011, $P5012, "@!lexicals", $P5013
    nqp_decontainerize $P5014, _lex_param_0
    nqp_get_sc_object $P5015, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    new $P5016, 'Hash'
    repr_bind_attr_obj $P5014, $P5015, "%!local_types", $P5016
    nqp_decontainerize $P5017, _lex_param_0
    nqp_get_sc_object $P5018, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    new $P5019, 'Hash'
    repr_bind_attr_obj $P5017, $P5018, "%!lexical_types", $P5019
    nqp_decontainerize $P5020, _lex_param_0
    nqp_get_sc_object $P5021, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    new $P5022, 'Hash'
    repr_bind_attr_obj $P5020, $P5021, "%!lexical_regs", $P5022
    nqp_decontainerize $P5023, _lex_param_0
    nqp_get_sc_object $P5024, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    new $P5025, 'Hash'
    repr_bind_attr_obj $P5023, $P5024, "%!reg_types", $P5025
    nqp_decontainerize $P5026, _lex_param_0
    nqp_get_sc_object $P5027, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    new $P5028, 'QRPA'
    repr_bind_attr_obj $P5026, $P5027, "@!loadlibs", $P5028
    nqp_decontainerize $P5029, _lex_param_0
    nqp_get_sc_object $P5030, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    repr_bind_attr_int $P5029, $P5030, "$!cur_lex_p", 100
    nqp_decontainerize $P5031, _lex_param_0
    nqp_get_sc_object $P5032, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    repr_bind_attr_int $P5031, $P5032, "$!cur_lex_s", 100
    nqp_decontainerize $P5033, _lex_param_0
    nqp_get_sc_object $P5034, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    repr_bind_attr_int $P5033, $P5034, "$!cur_lex_i", 100
    nqp_decontainerize $P5035, _lex_param_0
    nqp_get_sc_object $P5036, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    repr_bind_attr_int $P5035, $P5036, "$!cur_lex_n", 100
    .return (100) 
.end
.HLL "nqp"
.namespace []
.sub "add_param" :subid("cuid_65_1366375329.52446") :anon :lex :outer("cuid_309_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2651
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5012 = 'cuid_310_1366375329.52446' 
    capture_lex $P5012 
    .lex "self", _lex_param_0 
    .lex "$var", _lex_param_1 
.annotate 'line', 2652
    $P5001 = _lex_param_1."scope"()
    set $S5001, $P5001
    iseq $I5001, $S5001, "local"
    unless $I5001 goto if800_else1472 
.annotate 'line', 2653
    nqp_decontainerize $P5002, _lex_param_0
    $P5003 = $P5002."register_local"(_lex_param_1)
    goto if800_end1473
  if800_else1472:
    .const 'Sub' $P5004 = 'cuid_310_1366375329.52446' 
    capture_lex $P5004
    $P5005 = $P5004()
  if800_end1473:
    nqp_decontainerize $P5006, _lex_param_0
    nqp_get_sc_object $P5007, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    repr_get_attr_obj $P5008, $P5006, $P5007, "@!params"
    nqp_decontainerize $P5009, _lex_param_0
    nqp_get_sc_object $P5010, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    repr_get_attr_obj $P5011, $P5009, $P5010, "@!params"
    set $N5001, $P5011
    set $I5002, $N5001
    set $P5008[$I5002], _lex_param_1
    .return (_lex_param_1) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_310_1366375329.52446") :anon :lex :outer("cuid_65_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2655
    .lex "$reg", $P101 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    nqp_get_sc_object $P5004, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    repr_get_attr_int $I5001, $P5002, $P5004, "$!param_idx"
    set $S5002, $I5001
    concat $S5001, "_lex_param_", $S5002
    box $P5005, $S5001
    set $P101, $P5005
    find_lex $P5007, "self"
    nqp_decontainerize $P5006, $P5007
    nqp_get_sc_object $P5008, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    find_lex $P5010, "self"
    nqp_decontainerize $P5009, $P5010
    nqp_get_sc_object $P5011, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    repr_get_attr_int $I5002, $P5009, $P5011, "$!param_idx"
    set $N5002, $I5002
    set $N5003, 1
    add $N5001, $N5002, $N5003
    set $I5003, $N5001
    repr_bind_attr_int $P5006, $P5008, "$!param_idx", $I5003
.annotate 'line', 2658
    find_lex $P5013, "self"
    nqp_decontainerize $P5012, $P5013
    find_lex $P5014, "$var"
    $P5015 = $P5012."register_lexical"($P5014, $P101)
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "add_lexical" :subid("cuid_66_1366375329.52446") :anon :lex :outer("cuid_309_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2663
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$var", _lex_param_1 
.annotate 'line', 2664
    nqp_decontainerize $P5001, _lex_param_0
    $P5001."register_lexical"(_lex_param_1)
    nqp_decontainerize $P5002, _lex_param_0
    nqp_get_sc_object $P5003, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    repr_get_attr_obj $P5004, $P5002, $P5003, "@!lexicals"
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    repr_get_attr_obj $P5007, $P5005, $P5006, "@!lexicals"
    set $N5001, $P5007
    set $I5001, $N5001
    set $P5004[$I5001], _lex_param_1
    .return (_lex_param_1) 
.end
.HLL "nqp"
.namespace []
.sub "add_local" :subid("cuid_67_1366375329.52446") :anon :lex :outer("cuid_309_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2668
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$var", _lex_param_1 
.annotate 'line', 2669
    nqp_decontainerize $P5001, _lex_param_0
    $P5001."register_local"(_lex_param_1)
    nqp_decontainerize $P5002, _lex_param_0
    nqp_get_sc_object $P5003, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    repr_get_attr_obj $P5004, $P5002, $P5003, "@!locals"
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    repr_get_attr_obj $P5007, $P5005, $P5006, "@!locals"
    set $N5001, $P5007
    set $I5001, $N5001
    set $P5004[$I5001], _lex_param_1
    .return (_lex_param_1) 
.end
.HLL "nqp"
.namespace []
.sub "register_lexical" :subid("cuid_68_1366375329.52446") :anon :lex :outer("cuid_309_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2673
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :optional 
    .param int haz_param_12 :opt_flag 
    .lex "$name", $P101 
    .lex "$type", $P102 
    .lex "self", _lex_param_0 
    .lex "$var", _lex_param_1 
    .lex "$reg", _lex_param_2 
    .local pmc fb_tmp_242 
    if haz_param_12, default1481
    nqp_get_sc_object $P5029, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set _lex_param_2, $P5029
  default1481:
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
.annotate 'line', 2674
    $P5003 = _lex_param_1."name"()
    set $P101, $P5003
.annotate 'line', 2675
    $P5004 = _lex_param_1."returns"()
    $P5005 = "&type_to_register_type"($P5004)
    set $P102, $P5005
    nqp_decontainerize $P5006, _lex_param_0
    nqp_get_sc_object $P5007, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    repr_get_attr_obj $P5008, $P5006, $P5007, "%!lexical_types"
    set $S5001, $P101
    exists $I5001, $P5008[$S5001]
    unless $I5001 goto if801_end1475 
.annotate 'line', 2676
    set $S5004, $P101
    concat $S5003, "Lexical '", $S5004
    concat $S5002, $S5003, "' already declared"
    box $P5009, $S5002
    die $P5009
  if801_end1475:
    nqp_decontainerize $P5010, _lex_param_0
    nqp_get_sc_object $P5011, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    repr_get_attr_obj $P5012, $P5010, $P5011, "%!lexical_types"
    set $S5005, $P101
    set $P5012[$S5005], $P102
    nqp_decontainerize $P5013, _lex_param_0
    nqp_get_sc_object $P5014, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    repr_get_attr_obj $P5015, $P5013, $P5014, "%!lexical_regs"
    set $S5006, $P101
    unless _lex_param_2 goto if802_else1476 
    set $P5018, _lex_param_2
    goto if802_end1477
  if802_else1476:
.annotate 'line', 2680
    nqp_decontainerize $P5016, _lex_param_0
    set $S5009, $P102
    downcase $S5008, $S5009
    concat $S5007, "fresh_lex_", $S5008
    $P5017 = $P5016.$S5007()
    set $P5018, $P5017
  if802_end1477:
    set $P5015[$S5006], $P5018
    nqp_decontainerize $P5019, _lex_param_0
    nqp_get_sc_object $P5020, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    repr_get_attr_obj $P5021, $P5019, $P5020, "%!reg_types"
    nqp_decontainerize $P5022, _lex_param_0
    nqp_get_sc_object $P5023, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    repr_get_attr_obj $P5024, $P5022, $P5023, "%!lexical_regs"
    set fb_tmp_242, $P5024
    repr_defined $I5002, fb_tmp_242
    unless $I5002 goto if803_else1478 
    set $S5010, $P101
    set $P5025, fb_tmp_242[$S5010]
    set $P5027, $P5025
    goto if803_end1479
  if803_else1478:
    null $P5026
    set $P5027, $P5026
  if803_end1479:
    unless_null $P5027, vivi_8041480
    nqp_get_sc_object $P5028, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5027, $P5028
  vivi_8041480:
    set $S5011, $P5027
    set $P5021[$S5011], $P102
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "register_local" :subid("cuid_69_1366375329.52446") :anon :lex :outer("cuid_309_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2684
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$name", $P101 
    .lex "self", _lex_param_0 
    .lex "$var", _lex_param_1 
    .local pmc fb_tmp_243 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 2685
    $P5002 = _lex_param_1."name"()
    set $P101, $P5002
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    repr_get_attr_obj $P5005, $P5003, $P5004, "%!local_types"
    set $S5001, $P101
    exists $I5001, $P5005[$S5001]
    unless $I5001 goto if805_end1483 
.annotate 'line', 2686
    set $S5004, $P101
    concat $S5003, "Local '", $S5004
    concat $S5002, $S5003, "' already declared"
    box $P5006, $S5002
    die $P5006
  if805_end1483:
    nqp_decontainerize $P5007, _lex_param_0
    nqp_get_sc_object $P5008, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    repr_get_attr_obj $P5009, $P5007, $P5008, "%!local_types"
    set $S5005, $P101
.annotate 'line', 2689
    $P5010 = _lex_param_1."returns"()
    $P5011 = "&type_to_register_type"($P5010)
    set $P5009[$S5005], $P5011
    nqp_decontainerize $P5012, _lex_param_0
    nqp_get_sc_object $P5013, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    repr_get_attr_obj $P5014, $P5012, $P5013, "%!reg_types"
    set $S5006, $P101
    nqp_decontainerize $P5015, _lex_param_0
    nqp_get_sc_object $P5016, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    repr_get_attr_obj $P5017, $P5015, $P5016, "%!local_types"
    set fb_tmp_243, $P5017
    repr_defined $I5002, fb_tmp_243
    unless $I5002 goto if806_else1484 
    set $S5007, $P101
    set $P5018, fb_tmp_243[$S5007]
    set $P5020, $P5018
    goto if806_end1485
  if806_else1484:
    null $P5019
    set $P5020, $P5019
  if806_end1485:
    unless_null $P5020, vivi_8071486
    nqp_get_sc_object $P5021, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5020, $P5021
  vivi_8071486:
    set $P5014[$S5006], $P5020
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "qast" :subid("cuid_70_1366375329.52446") :anon :lex :outer("cuid_309_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2693
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    repr_get_attr_obj $P5003, $P5001, $P5002, "$!qast"
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "outer" :subid("cuid_71_1366375329.52446") :anon :lex :outer("cuid_309_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2694
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    repr_get_attr_obj $P5003, $P5001, $P5002, "$!outer"
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "params" :subid("cuid_72_1366375329.52446") :anon :lex :outer("cuid_309_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2695
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    repr_get_attr_obj $P5003, $P5001, $P5002, "@!params"
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "lexicals" :subid("cuid_73_1366375329.52446") :anon :lex :outer("cuid_309_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2696
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    repr_get_attr_obj $P5003, $P5001, $P5002, "@!lexicals"
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "locals" :subid("cuid_74_1366375329.52446") :anon :lex :outer("cuid_309_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2697
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    repr_get_attr_obj $P5003, $P5001, $P5002, "@!locals"
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "lex_reg" :subid("cuid_75_1366375329.52446") :anon :lex :outer("cuid_309_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2699
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
    .local pmc fb_tmp_244 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    repr_get_attr_obj $P5003, $P5001, $P5002, "%!lexical_regs"
    set fb_tmp_244, $P5003
    repr_defined $I5001, fb_tmp_244
    unless $I5001 goto if808_else1487 
    set $S5001, _lex_param_1
    set $P5004, fb_tmp_244[$S5001]
    set $P5006, $P5004
    goto if808_end1488
  if808_else1487:
    null $P5005
    set $P5006, $P5005
  if808_end1488:
    unless_null $P5006, vivi_8091489
    nqp_get_sc_object $P5007, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5006, $P5007
  vivi_8091489:
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "local_type" :subid("cuid_76_1366375329.52446") :anon :lex :outer("cuid_309_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2702
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
    .local pmc fb_tmp_245 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    repr_get_attr_obj $P5003, $P5001, $P5002, "%!local_types"
    set fb_tmp_245, $P5003
    repr_defined $I5001, fb_tmp_245
    unless $I5001 goto if810_else1490 
    set $S5001, _lex_param_1
    set $P5004, fb_tmp_245[$S5001]
    set $P5006, $P5004
    goto if810_end1491
  if810_else1490:
    null $P5005
    set $P5006, $P5005
  if810_end1491:
    unless_null $P5006, vivi_8111492
    nqp_get_sc_object $P5007, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5006, $P5007
  vivi_8111492:
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "local_type_long" :subid("cuid_77_1366375329.52446") :anon :lex :outer("cuid_309_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2703
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
    .local pmc fb_tmp_246 
    .local pmc fb_tmp_247 
    find_lex $P5001, "%longnames"
    set fb_tmp_246, $P5001
    repr_defined $I5001, fb_tmp_246
    unless $I5001 goto if812_else1493 
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    repr_get_attr_obj $P5005, $P5003, $P5004, "%!local_types"
    set fb_tmp_247, $P5005
    repr_defined $I5002, fb_tmp_247
    unless $I5002 goto if813_else1495 
    set $S5001, _lex_param_1
    set $P5006, fb_tmp_247[$S5001]
    set $P5008, $P5006
    goto if813_end1496
  if813_else1495:
    null $P5007
    set $P5008, $P5007
  if813_end1496:
    unless_null $P5008, vivi_8141497
    nqp_get_sc_object $P5009, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5008, $P5009
  vivi_8141497:
    set $S5002, $P5008
    set $P5002, fb_tmp_246[$S5002]
    set $P5011, $P5002
    goto if812_end1494
  if812_else1493:
    null $P5010
    set $P5011, $P5010
  if812_end1494:
    unless_null $P5011, vivi_8151498
    nqp_get_sc_object $P5012, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5011, $P5012
  vivi_8151498:
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "lexical_type" :subid("cuid_78_1366375329.52446") :anon :lex :outer("cuid_309_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2704
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
    .local pmc fb_tmp_248 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    repr_get_attr_obj $P5003, $P5001, $P5002, "%!lexical_types"
    set fb_tmp_248, $P5003
    repr_defined $I5001, fb_tmp_248
    unless $I5001 goto if816_else1499 
    set $S5001, _lex_param_1
    set $P5004, fb_tmp_248[$S5001]
    set $P5006, $P5004
    goto if816_end1500
  if816_else1499:
    null $P5005
    set $P5006, $P5005
  if816_end1500:
    unless_null $P5006, vivi_8171501
    nqp_get_sc_object $P5007, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5006, $P5007
  vivi_8171501:
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "lexical_type_long" :subid("cuid_79_1366375329.52446") :anon :lex :outer("cuid_309_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2705
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
    .local pmc fb_tmp_249 
    .local pmc fb_tmp_250 
    find_lex $P5001, "%longnames"
    set fb_tmp_249, $P5001
    repr_defined $I5001, fb_tmp_249
    unless $I5001 goto if818_else1502 
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    repr_get_attr_obj $P5005, $P5003, $P5004, "%!lexical_types"
    set fb_tmp_250, $P5005
    repr_defined $I5002, fb_tmp_250
    unless $I5002 goto if819_else1504 
    set $S5001, _lex_param_1
    set $P5006, fb_tmp_250[$S5001]
    set $P5008, $P5006
    goto if819_end1505
  if819_else1504:
    null $P5007
    set $P5008, $P5007
  if819_end1505:
    unless_null $P5008, vivi_8201506
    nqp_get_sc_object $P5009, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5008, $P5009
  vivi_8201506:
    set $S5002, $P5008
    set $P5002, fb_tmp_249[$S5002]
    set $P5011, $P5002
    goto if818_end1503
  if818_else1502:
    null $P5010
    set $P5011, $P5010
  if818_end1503:
    unless_null $P5011, vivi_8211507
    nqp_get_sc_object $P5012, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5011, $P5012
  vivi_8211507:
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "reg_type" :subid("cuid_80_1366375329.52446") :anon :lex :outer("cuid_309_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2706
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
    .local pmc fb_tmp_251 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    repr_get_attr_obj $P5003, $P5001, $P5002, "%!reg_types"
    set fb_tmp_251, $P5003
    repr_defined $I5001, fb_tmp_251
    unless $I5001 goto if822_else1508 
    set $S5001, _lex_param_1
    set $P5004, fb_tmp_251[$S5001]
    set $P5006, $P5004
    goto if822_end1509
  if822_else1508:
    null $P5005
    set $P5006, $P5005
  if822_end1509:
    unless_null $P5006, vivi_8231510
    nqp_get_sc_object $P5007, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5006, $P5007
  vivi_8231510:
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "add_loadlibs" :subid("cuid_81_1366375329.52446") :anon :lex :outer("cuid_309_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2708
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5006 = 'cuid_311_1366375329.52446' 
    capture_lex $P5006 
    .lex "self", _lex_param_0 
    .lex "@libs", _lex_param_1 
    set $P5001, _lex_param_1
    iter $P5003, _lex_param_1
  for_next1511:
    unless $P5003, for_done1513
    shift $P5005, $P5003
  for_redo1512:
    .const 'Sub' $P5004 = 'cuid_311_1366375329.52446' 
    capture_lex $P5004
    $P5001 = $P5004($P5005)
    goto for_next1511
  for_done1513:
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_311_1366375329.52446") :anon :lex :outer("cuid_81_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2709
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5002, "self"
    nqp_decontainerize $P5001, $P5002
    nqp_get_sc_object $P5003, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    repr_get_attr_obj $P5004, $P5001, $P5003, "@!loadlibs"
    find_lex $P5006, "self"
    nqp_decontainerize $P5005, $P5006
    nqp_get_sc_object $P5007, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    repr_get_attr_obj $P5008, $P5005, $P5007, "@!loadlibs"
    set $N5001, $P5008
    set $I5001, $N5001
    set $P5004[$I5001], _lex_param_0
    .return (_lex_param_0) 
.end
.HLL "nqp"
.namespace []
.sub "loadlibs" :subid("cuid_82_1366375329.52446") :anon :lex :outer("cuid_309_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2713
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    repr_get_attr_obj $P5003, $P5001, $P5002, "@!loadlibs"
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "fresh_lex_p" :subid("cuid_83_1366375329.52446") :anon :lex :outer("cuid_309_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2717
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    repr_get_attr_int $I5001, $P5003, $P5004, "$!cur_lex_p"
    set $N5002, $I5001
    set $N5003, 1
    add $N5001, $N5002, $N5003
    set $I5002, $N5001
    repr_bind_attr_int $P5001, $P5002, "$!cur_lex_p", $I5002
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    repr_get_attr_int $I5003, $P5005, $P5006, "$!cur_lex_p"
    set $S5002, $I5003
    concat $S5001, "$P", $S5002
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "fresh_lex_s" :subid("cuid_84_1366375329.52446") :anon :lex :outer("cuid_309_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2721
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    repr_get_attr_int $I5001, $P5003, $P5004, "$!cur_lex_s"
    set $N5002, $I5001
    set $N5003, 1
    add $N5001, $N5002, $N5003
    set $I5002, $N5001
    repr_bind_attr_int $P5001, $P5002, "$!cur_lex_s", $I5002
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    repr_get_attr_int $I5003, $P5005, $P5006, "$!cur_lex_s"
    set $S5002, $I5003
    concat $S5001, "$S", $S5002
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "fresh_lex_i" :subid("cuid_85_1366375329.52446") :anon :lex :outer("cuid_309_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2725
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    repr_get_attr_int $I5001, $P5003, $P5004, "$!cur_lex_i"
    set $N5002, $I5001
    set $N5003, 1
    add $N5001, $N5002, $N5003
    set $I5002, $N5001
    repr_bind_attr_int $P5001, $P5002, "$!cur_lex_i", $I5002
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    repr_get_attr_int $I5003, $P5005, $P5006, "$!cur_lex_i"
    set $S5002, $I5003
    concat $S5001, "$I", $S5002
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "fresh_lex_n" :subid("cuid_86_1366375329.52446") :anon :lex :outer("cuid_309_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2729
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    repr_get_attr_int $I5001, $P5003, $P5004, "$!cur_lex_n"
    set $N5002, $I5001
    set $N5003, 1
    add $N5001, $N5002, $N5003
    set $I5002, $N5001
    repr_bind_attr_int $P5001, $P5002, "$!cur_lex_n", $I5002
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    repr_get_attr_int $I5003, $P5005, $P5006, "$!cur_lex_n"
    set $S5002, $I5003
    concat $S5001, "$N", $S5002
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "source_for_node" :subid("cuid_87_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2748
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$source", $P101 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 2749
    $P5002 = _lex_param_1."node"()
    unless $P5002 goto if827_else1518 
.annotate 'line', 2750
    $P5003 = _lex_param_1."node"()
    $P5004 = $P5003."Str"()
    set $S5002, $P5004
    escape $S5001, $S5002
    set $S5003, $S5001
    goto if827_end1519
  if827_else1518:
    set $S5003, ""
  if827_end1519:
    box $P5005, $S5003
    set $P101, $P5005
    set $S5004, $P101
    length $I5002, $S5004
    set $N5001, $I5002
    set $N5002, 103
    isgt $I5001, $N5001, $N5002
    unless $I5001 goto if828_end1521 
.annotate 'line', 2752
    set $S5007, $P101
    substr $S5006, $S5007, 0, 100
    concat $S5005, $S5006, "..."
    box $P5006, $S5005
    set $P101, $P5006
  if828_end1521:
    set $S5008, $P101
    length $I5003, $S5008
    unless $I5003 goto if829_end1523 
.annotate 'line', 2755
    set $S5011, $P101
    concat $S5010, " (source text: \"", $S5011
    concat $S5009, $S5010, "\")"
    box $P5007, $S5009
    set $P101, $P5007
  if829_end1523:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "post" :subid("cuid_88_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2761
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :slurpy :named 
    .lex "self", _lex_param_0 
    .lex "$source", _lex_param_1 
    .lex "%adverbs", _lex_param_2 
    nqp_get_sc_object $P5001, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 114
    type_check $I5001, _lex_param_1, $P5001
    set $I5003, $I5001
    if $I5001 goto unless831_end1527 
    nqp_get_sc_object $P5002, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 103
    type_check $I5002, _lex_param_1, $P5002
    set $I5003, $I5002
  unless831_end1527:
    if $I5003 goto unless830_end1525 
.annotate 'line', 2763
    nqp_get_sc_object $P5003, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 103
    $P5004 = $P5003."new"(_lex_param_1)
    set _lex_param_1, $P5004
  unless830_end1525:
.annotate 'line', 2766
    nqp_decontainerize $P5005, _lex_param_0
    $P5006 = $P5005."as_post"(_lex_param_1)
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "type_to_register_type" :subid("cuid_89_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2773
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$type", _lex_param_1 
.annotate 'line', 2774
    $P5001 = "&type_to_register_type"(_lex_param_1)
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "force_return_boxing_for_hll" :subid("cuid_90_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2783
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$hll", _lex_param_1 
    find_lex $P5001, "%hll_force_return_boxing"
    set $S5001, _lex_param_1
    box $P5002, 1
    set $P5001[$S5001], $P5002
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "unique" :subid("cuid_91_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2787
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :optional 
    .param int haz_param_13 :opt_flag 
    .lex "self", _lex_param_0 
    .lex "$prefix", _lex_param_1 
    .local pmc tmp_2 
    .local pmc fb_tmp_253 
    if haz_param_13, default1531
    box $P5001, ""
    set _lex_param_1, $P5001
  default1531:
    set $S5002, _lex_param_1
    find_lex $P5002, "$?PACKAGE"
    get_who $P5001, $P5002
    set fb_tmp_253, $P5001
    repr_defined $I5001, fb_tmp_253
    unless $I5001 goto if832_else1528 
    set $P5003, fb_tmp_253["$serno"]
    set $P5005, $P5003
    goto if832_end1529
  if832_else1528:
    null $P5004
    set $P5005, $P5004
  if832_end1529:
    unless_null $P5005, vivi_8331530
    nqp_get_sc_object $P5006, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5005, $P5006
  vivi_8331530:
    set tmp_2, $P5005
    find_lex $P5008, "$?PACKAGE"
    get_who $P5007, $P5008
    set $N5002, tmp_2
    set $N5003, 1
    add $N5001, $N5002, $N5003
    box $P5009, $N5001
    set $P5007["$serno"], $P5009
    set $S5003, tmp_2
    concat $S5001, $S5002, $S5003
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "escape" :subid("cuid_92_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2788
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$esc", $P101 
    .lex "self", _lex_param_0 
    .lex "$str", _lex_param_1 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    set $S5002, _lex_param_1
    escape $S5001, $S5002
    box $P5002, $S5001
    set $P101, $P5002
    set $S5003, $P101
    index $I5002, $S5003, utf8:"\\x", 0
    set $N5001, $I5002
    set $N5002, 0
    isge $I5001, $N5001, $N5002
    unless $I5001 goto if834_else1532 
    set $S5006, $P101
    concat $S5005, "utf8:\"", $S5006
    concat $S5004, $S5005, "\""
    set $S5015, $S5004
    goto if834_end1533
  if834_else1532:
    set $S5007, $P101
    index $I5004, $S5007, unicode:"\\u", 0
    set $N5003, $I5004
    set $N5004, 0
    isge $I5003, $N5003, $N5004
    unless $I5003 goto if835_else1534 
    set $S5010, $P101
    concat $S5009, "unicode:\"", $S5010
    concat $S5008, $S5009, "\""
    set $S5014, $S5008
    goto if835_end1535
  if835_else1534:
    set $S5013, $P101
    concat $S5012, "\"", $S5013
    concat $S5011, $S5012, "\""
    set $S5014, $S5011
  if835_end1535:
    set $S5015, $S5014
  if834_end1533:
    .return ($S5015) 
.end
.HLL "nqp"
.namespace []
.sub "rxescape" :subid("cuid_93_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2796
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$str", _lex_param_1 
    set $S5004, _lex_param_1
    escape $S5003, $S5004
    concat $S5002, "ucs4:\"", $S5003
    concat $S5001, $S5002, "\""
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_94_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2798
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_14 :opt_flag 
    .lex "$*WANT", $P101 
    .lex "CURRENT_DISPATCH_CAPTURE", $P102 
    .lex "&*CURRENT_DISPATCHER", $P103 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$want", _lex_param_2 
    .local pmc dispatch_cap_1 
    .local pmc dispatch_cap_2 
    if haz_param_14, default1542
    nqp_get_sc_object $P5029, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set _lex_param_2, $P5029
  default1542:
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    getinterp $P5002
    set $P5002, $P5002['context']
    set $P102, $P5002
    getinterp $P5004
    set $P5004, $P5004['sub']
    get_sub_code_object $P5003, $P5004
    set $P103, $P5003
    set $P101, _lex_param_2
    unless _lex_param_2 goto if836_else1536 
.annotate 'line', 2800
    nqp_get_sc_object $P5005, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 66
    type_check $I5001, _lex_param_1, $P5005
    unless $I5001 goto if837_else1538 
.annotate 'line', 2801
.annotate 'line', 2802
    nqp_decontainerize $P5006, _lex_param_0
    nqp_decontainerize $P5007, _lex_param_0
    $P5008 = "&want"(_lex_param_1, _lex_param_2)
    $P5009 = $P5007."as_post"($P5008)
    $P5010 = $P5006."coerce"($P5009, _lex_param_2)
    set $P5020, $P5010
    goto if837_end1539
  if837_else1538:
.annotate 'line', 2804
.annotate 'line', 2805
    nqp_decontainerize $P5011, _lex_param_0
    set dispatch_cap_1, $P102
    nqp_get_sc_object $P5016, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 5
    repr_get_attr_obj $P5017, $P103, $P5016, "$!dispatch_cache"
    multi_cache_find $P5015, $P5017, dispatch_cap_1
    unless_null $P5015, vivi_8381540
    $P5018 = $P103."dispatch"(dispatch_cap_1)
    set $P5015, $P5018
  vivi_8381540:
    deconstruct_capture dispatch_cap_1, $P5012, $P5013
    $P5014 = $P5015($P5012 :flat, $P5013 :flat :named)
    $P5019 = $P5011."coerce"($P5014, _lex_param_2)
    set $P5020, $P5019
  if837_end1539:
    set $P5028, $P5020
    goto if836_end1537
  if836_else1536:
.annotate 'line', 2808
    set dispatch_cap_2, $P102
    nqp_get_sc_object $P5025, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 5
    repr_get_attr_obj $P5026, $P103, $P5025, "$!dispatch_cache"
    multi_cache_find $P5024, $P5026, dispatch_cap_2
    unless_null $P5024, vivi_8391541
    $P5027 = $P103."dispatch"(dispatch_cap_2)
    set $P5024, $P5027
  vivi_8391541:
    deconstruct_capture dispatch_cap_2, $P5021, $P5022
    $P5023 = $P5024($P5021 :flat, $P5022 :flat :named)
    set $P5028, $P5023
  if836_end1537:
    .return ($P5028) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_95_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2813
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_15 :opt_flag 
    .const 'Sub' $P5038 = 'cuid_313_1366375329.52446' 
    capture_lex $P5038 
    .const 'Sub' $P5038 = 'cuid_315_1366375329.52446' 
    capture_lex $P5038 
    .const 'Sub' $P5038 = 'cuid_316_1366375329.52446' 
    capture_lex $P5038 
    .lex "$*HLL", $P101 
    .lex "$*QAST_BLOCK_NO_CLOSE", $P102 
    .lex "$block_post", $P103 
    .lex "$comp_mode", $P104 
    .lex "@pre_des", $P105 
    .lex "@post_des", $P106 
    .lex "self", _lex_param_0 
    .lex "$cu", _lex_param_1 
    .lex "$want", _lex_param_2 
    .local pmc fb_tmp_254 
    .local pmc fb_tmp_255 
    if haz_param_15, default1573
    nqp_get_sc_object $P5037, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set _lex_param_2, $P5037
  default1573:
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P104, $P5004
    new $P5005, 'QRPA'
    set $P105, $P5005
    new $P5006, 'QRPA'
    set $P106, $P5006
    box $P5007, ""
    set $P101, $P5007
.annotate 'line', 2816
    $P5008 = _lex_param_1."hll"()
    unless $P5008 goto if840_end1544 
.annotate 'line', 2817
    $P5009 = _lex_param_1."hll"()
    set $P101, $P5009
  if840_end1544:
    $P5010 = _lex_param_1."list"()
    set $N5001, $P5010
    set $N5002, 1
    isne $I5001, $N5001, $N5002
    set $I5005, $I5001
    if $I5001 goto unless842_end1548 
    set fb_tmp_254, _lex_param_1
    repr_defined $I5004, fb_tmp_254
    unless $I5004 goto if843_else1549 
    set $P5011, fb_tmp_254[0]
    set $P5013, $P5011
    goto if843_end1550
  if843_else1549:
    null $P5012
    set $P5013, $P5012
  if843_end1550:
    unless_null $P5013, vivi_8441551
    nqp_get_sc_object $P5014, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5013, $P5014
  vivi_8441551:
    nqp_get_sc_object $P5015, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 103
    type_check $I5003, $P5013, $P5015
    not $I5002, $I5003
    set $I5005, $I5002
  unless842_end1548:
    unless $I5005 goto if841_end1546 
.annotate 'line', 2821
    box $P5016, "QAST::CompUnit should have one child that is a QAST::Block"
    die $P5016
  if841_end1546:
    box $P5017, 1
    set $P102, $P5017
.annotate 'line', 2827
    nqp_decontainerize $P5018, _lex_param_0
    set fb_tmp_255, _lex_param_1
    repr_defined $I5006, fb_tmp_255
    unless $I5006 goto if845_else1552 
    set $P5019, fb_tmp_255[0]
    set $P5021, $P5019
    goto if845_end1553
  if845_else1552:
    null $P5020
    set $P5021, $P5020
  if845_end1553:
    unless_null $P5021, vivi_8461554
    nqp_get_sc_object $P5022, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5021, $P5022
  vivi_8461554:
    $P5023 = $P5018."as_post"($P5021)
    set $P103, $P5023
.annotate 'line', 2832
    $P5024 = _lex_param_1."compilation_mode"()
    set $P104, $P5024
.annotate 'line', 2833
    $P5025 = _lex_param_1."pre_deserialize"()
    set $P105, $P5025
.annotate 'line', 2834
    $P5026 = _lex_param_1."post_deserialize"()
    set $P106, $P5026
    set $P5027, $P104
    if $P104 goto unless849_end1560 
    set $P5027, $P105
  unless849_end1560:
    set $P5028, $P5027
    if $P5027 goto unless848_end1558 
    set $P5028, $P106
  unless848_end1558:
    unless $P5028 goto if847_end1556 
    .const 'Sub' $P5029 = 'cuid_313_1366375329.52446' 
    capture_lex $P5029
    $P5030 = $P5029()
  if847_end1556:
.annotate 'line', 2863
    $P5031 = _lex_param_1."load"()
    defined $I5007, $P5031
    unless $I5007 goto if851_end1570 
    .const 'Sub' $P5032 = 'cuid_315_1366375329.52446' 
    capture_lex $P5032
    $P5033 = $P5032()
  if851_end1570:
.annotate 'line', 2870
    $P5034 = _lex_param_1."main"()
    defined $I5008, $P5034
    unless $I5008 goto if852_end1572 
    .const 'Sub' $P5035 = 'cuid_316_1366375329.52446' 
    capture_lex $P5035
    $P5036 = $P5035()
  if852_end1572:
    .return ($P103) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_313_1366375329.52446") :anon :lex :outer("cuid_95_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2835
    .const 'Sub' $P5033 = 'cuid_312_1366375329.52446' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_314_1366375329.52446' 
    capture_lex $P5033 
    .lex "$block", $P101 
    .lex "$sc_post", $P102 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
.annotate 'line', 2838
    nqp_get_sc_object $P5003, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 103
    $P5004 = $P5003."new"("raw" :named("blocktype"))
    set $P101, $P5004
    find_lex $P5008, "@pre_des"
    set $P5005, $P5008
    iter $P5007, $P5008
  for_next1561:
    unless $P5007, for_done1563
    shift $P5010, $P5007
  for_redo1562:
    .const 'Sub' $P5009 = 'cuid_312_1366375329.52446' 
    capture_lex $P5009
    $P5005 = $P5009($P5010)
    goto for_next1561
  for_done1563:
    find_lex $P5011, "$comp_mode"
    unless $P5011 goto if850_end1565 
.annotate 'line', 2846
.annotate 'line', 2847
    find_lex $P5013, "self"
    nqp_decontainerize $P5012, $P5013
    find_lex $P5014, "$cu"
    $P5015 = $P5014."sc"()
    find_lex $P5016, "$cu"
    $P5017 = $P5016."code_ref_blocks"()
.annotate 'line', 2848
    find_lex $P5018, "$cu"
    $P5019 = $P5018."repo_conflict_resolver"()
    $P5020 = $P5012."deserialization_code"($P5015, $P5017, $P5019)
    $P5021 = $P101."push"($P5020)
  if850_end1565:
    find_lex $P5025, "@post_des"
    set $P5022, $P5025
    iter $P5024, $P5025
  for_next1566:
    unless $P5024, for_done1568
    shift $P5027, $P5024
  for_redo1567:
    .const 'Sub' $P5026 = 'cuid_314_1366375329.52446' 
    capture_lex $P5026
    $P5022 = $P5026($P5027)
    goto for_next1566
  for_done1568:
.annotate 'line', 2857
    find_lex $P5029, "self"
    nqp_decontainerize $P5028, $P5029
    $P5030 = $P5028."as_post"($P101)
    set $P102, $P5030
.annotate 'line', 2858
    $P102."pirflags"(":load :init")
.annotate 'line', 2859
    find_lex $P5031, "$block_post"
    $P5032 = $P5031."push"($P102)
    .return ($P5032) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_312_1366375329.52446") :anon :lex :outer("cuid_313_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2841
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 2842
    find_lex $P5001, "$block"
    nqp_get_sc_object $P5002, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 98
    $P5003 = $P5002."new"(_lex_param_0)
    $P5004 = $P5001."push"($P5003)
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_314_1366375329.52446") :anon :lex :outer("cuid_313_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2852
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 2853
    find_lex $P5001, "$block"
    nqp_get_sc_object $P5002, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 98
    $P5003 = $P5002."new"(_lex_param_0)
    $P5004 = $P5001."push"($P5003)
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_315_1366375329.52446") :anon :lex :outer("cuid_95_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2863
    .lex "$load_post", $P101 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 2864
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    nqp_get_sc_object $P5004, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 103
    find_lex $P5005, "$cu"
    $P5006 = $P5005."load"()
    $P5007 = $P5004."new"($P5006, "raw" :named("blocktype"))
    $P5008 = $P5002."as_post"($P5007)
    set $P101, $P5008
.annotate 'line', 2865
    $P101."pirflags"(":load")
.annotate 'line', 2866
    find_lex $P5009, "$block_post"
    $P5010 = $P5009."push"($P101)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_316_1366375329.52446") :anon :lex :outer("cuid_95_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2870
    .lex "$main_post", $P101 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 2871
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    nqp_get_sc_object $P5004, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 103
    find_lex $P5005, "$cu"
    $P5006 = $P5005."main"()
    $P5007 = $P5004."new"($P5006, "raw" :named("blocktype"))
    $P5008 = $P5002."as_post"($P5007)
    set $P101, $P5008
.annotate 'line', 2872
    $P101."pirflags"(":main")
.annotate 'line', 2873
    find_lex $P5009, "$block_post"
    $P5010 = $P5009."push"($P101)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "deserialization_code" :subid("cuid_96_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2879
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "$sh", $P101 
    .lex "$serialized", $P102 
    .lex "$sh_ast", $P103 
    .lex "$sh_elems", $P104 
    .lex "$i", $P105 
    .lex "$cr_past", $P106 
    .lex "self", _lex_param_0 
    .lex "$sc", _lex_param_1 
    .lex "@code_ref_blocks", _lex_param_2 
    .lex "$repo_conf_res", _lex_param_3 
    .local pmc fb_tmp_256 
    .local pmc fb_tmp_257 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P105, $P5005
    nqp_get_sc_object $P5006, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P106, $P5006
    new $P5007, 'ResizableStringArray'
    set $P101, $P5007
    nqp_serialize_sc $S5001, _lex_param_1, $P101
    box $P5008, $S5001
    set $P102, $P5008
    nqp_pop_compiling_sc 
.annotate 'line', 2888
    nqp_get_sc_object $P5009, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
    $P5010 = $P5009."new"("list_s" :named("op"))
    set $P103, $P5010
    elements $I5001, $P101
    box $P5011, $I5001
    set $P104, $P5011
    box $P5012, 0
    set $P105, $P5012
  while853_test1574:
    set $N5001, $P105
    set $N5002, $P104
    islt $I5002, $N5001, $N5002
    box $P5028, $I5002
    set $P5027, $P5028
    unless $I5002 goto while853_done1578 
  while853_redo1576:
.annotate 'line', 2891
.annotate 'line', 2892
    set fb_tmp_256, $P101
    repr_defined $I5004, fb_tmp_256
    unless $I5004 goto if855_else1581 
    set $I5005, $P105
    set $P5013, fb_tmp_256[$I5005]
    set $P5015, $P5013
    goto if855_end1582
  if855_else1581:
    null $P5014
    set $P5015, $P5014
  if855_end1582:
    unless_null $P5015, vivi_8561583
    nqp_get_sc_object $P5016, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5015, $P5016
  vivi_8561583:
    set $S5002, $P5015
    isnull $I5003, $S5002
    unless $I5003 goto if854_else1579 
.annotate 'line', 2893
    nqp_get_sc_object $P5017, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
    $P5018 = $P5017."new"("null_s" :named("op"))
    set $P5025, $P5018
    goto if854_end1580
  if854_else1579:
.annotate 'line', 2894
    nqp_get_sc_object $P5019, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 52
    set fb_tmp_257, $P101
    repr_defined $I5006, fb_tmp_257
    unless $I5006 goto if857_else1584 
    set $I5007, $P105
    set $P5020, fb_tmp_257[$I5007]
    set $P5022, $P5020
    goto if857_end1585
  if857_else1584:
    null $P5021
    set $P5022, $P5021
  if857_end1585:
    unless_null $P5022, vivi_8581586
    nqp_get_sc_object $P5023, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5022, $P5023
  vivi_8581586:
    $P5024 = $P5019."new"($P5022 :named("value"))
    set $P5025, $P5024
  if854_end1580:
    $P103."push"($P5025)
    set $N5004, $P105
    set $N5005, 1
    add $N5003, $N5004, $N5005
    box $P5026, $N5003
    set $P105, $P5026
    set $P5027, $P105
    goto while853_test1574 
  while853_done1578:
.annotate 'line', 2899
    nqp_get_sc_object $P5029, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
    $P5030 = $P5029."new"(_lex_param_2 :flat, "list_b" :named("op"))
    set $P106, $P5030
    unless _lex_param_3 goto if859_else1587 
.annotate 'line', 2902
.annotate 'line', 2903
    nqp_get_sc_object $P5031, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 71
    $P5032 = $P5031."new"("conflicts" :named("name"), "local" :named("scope"))
    $P5033 = _lex_param_3."push"($P5032)
    goto if859_end1588
  if859_else1587:
.annotate 'line', 2905
.annotate 'line', 2906
    nqp_get_sc_object $P5034, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
.annotate 'line', 2908
    nqp_get_sc_object $P5035, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 52
    $P5036 = $P5035."new"("Repossession conflicts occurred during deserialization" :named("value"))
    $P5037 = $P5034."new"($P5036, "die_s" :named("op"))
    set _lex_param_3, $P5037
  if859_end1588:
.annotate 'line', 2913
    nqp_get_sc_object $P5038, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 98
.annotate 'line', 2914
    nqp_get_sc_object $P5039, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
.annotate 'line', 2916
    nqp_get_sc_object $P5040, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 71
    $P5041 = $P5040."new"("cur_sc" :named("name"), "local" :named("scope"), "var" :named("decl"))
.annotate 'line', 2917
    nqp_get_sc_object $P5042, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
    nqp_get_sc_object $P5043, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 52
    $P5044 = _lex_param_1."handle"()
    $P5045 = $P5043."new"($P5044 :named("value"))
    $P5046 = $P5042."new"($P5045, "createsc" :named("op"))
    $P5047 = $P5039."new"($P5041, $P5046, "bind" :named("op"))
.annotate 'line', 2919
    nqp_get_sc_object $P5048, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
.annotate 'line', 2921
    nqp_get_sc_object $P5049, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 71
    $P5050 = $P5049."new"("cur_sc" :named("name"), "local" :named("scope"))
.annotate 'line', 2922
    nqp_get_sc_object $P5051, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 52
    $P5052 = _lex_param_1."description"()
    $P5053 = $P5051."new"($P5052 :named("value"))
    $P5054 = $P5048."new"($P5050, $P5053, "scsetdesc" :named("op"))
.annotate 'line', 2924
    nqp_get_sc_object $P5055, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
.annotate 'line', 2926
    nqp_get_sc_object $P5056, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 71
    $P5057 = $P5056."new"("conflicts" :named("name"), "local" :named("scope"), "var" :named("decl"))
.annotate 'line', 2927
    nqp_get_sc_object $P5058, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
    $P5059 = $P5058."new"("list" :named("op"))
    $P5060 = $P5055."new"($P5057, $P5059, "bind" :named("op"))
.annotate 'line', 2929
    nqp_get_sc_object $P5061, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
.annotate 'line', 2931
    nqp_get_sc_object $P5062, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 52
    $P5063 = $P5062."new"($P102 :named("value"))
.annotate 'line', 2932
    nqp_get_sc_object $P5064, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 71
    $P5065 = $P5064."new"("cur_sc" :named("name"), "local" :named("scope"))
.annotate 'line', 2934
    nqp_get_sc_object $P5066, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 103
    $P5067 = $P5066."new"($P106, "immediate" :named("blocktype"))
.annotate 'line', 2935
    nqp_get_sc_object $P5068, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 71
    $P5069 = $P5068."new"("conflicts" :named("name"), "local" :named("scope"))
    $P5070 = $P5061."new"($P5063, $P5065, $P103, $P5067, $P5069, "deserialize" :named("op"))
.annotate 'line', 2937
    nqp_get_sc_object $P5071, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
.annotate 'line', 2939
    nqp_get_sc_object $P5072, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 71
    $P5073 = $P5072."new"("conflicts" :named("name"), "local" :named("scope"))
    $P5074 = $P5071."new"($P5073, _lex_param_3, "if" :named("op"))
    $P5075 = $P5038."new"($P5047, $P5054, $P5060, $P5070, $P5074)
    .return ($P5075) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_97_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2945
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_16 :opt_flag 
    .const 'Sub' $P5029 = 'cuid_320_1366375329.52446' 
    capture_lex $P5029 
    .const 'Sub' $P5029 = 'cuid_336_1366375329.52446' 
    capture_lex $P5029 
    .const 'Sub' $P5029 = 'cuid_337_1366375329.52446' 
    capture_lex $P5029 
    .lex "$sub", $P101 
    .lex "$ops", $P102 
    .lex "$blocktype", $P103 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$want", _lex_param_2 
    .local pmc fb_tmp_266 
    if haz_param_16, default1756
    nqp_get_sc_object $P5028, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set _lex_param_2, $P5028
  default1756:
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
    root_new $P104, ['parrot';'Continuation']
    set_label $P104, lexotic_1589
    .lex "RETURN", $P104
    .const 'Sub' $P5004 = 'cuid_320_1366375329.52446' 
    capture_lex $P5004
    $P5005 = $P5004()
    new $P5014, 'ExceptionHandler'
    set_label $P5014, catch_handler_9171711
    $P5014.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5014
    find_dynamic_lex $P5006, "$*BLOCK"
    unless_null $P5006, fallback1705
    nqp_get_sc_object $P5008, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5007, $P5008
    set fb_tmp_266, $P5007
    repr_defined $I5002, fb_tmp_266
    unless $I5002 goto if913_else1706 
    set $P5009, fb_tmp_266["$BLOCK"]
    set $P5011, $P5009
    goto if913_end1707
  if913_else1706:
    null $P5010
    set $P5011, $P5010
  if913_end1707:
    unless_null $P5011, vivi_9141708
    nqp_get_sc_object $P5012, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5011, $P5012
  vivi_9141708:
    unless_null $P5011, vivi_9151709
    die "Contextual $*BLOCK not found"
    box $P5013, "Contextual $*BLOCK not found"
    set $P5011, $P5013
  vivi_9151709:
    set $P5006, $P5011
  fallback1705:
    set $P5015, $P5006
    pop_eh 
    goto skip_handler_9161710
  catch_handler_9171711:
    .get_results ($P5014) 
    set $I10001, 1
    set $P5014["handled"], $I10001
    nqp_get_sc_object $P10001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    finalize $P5014
    pop_upto_eh $P5014
    pop_eh 
    set $P5015, $P10001
    goto skip_handler_9161710
  skip_handler_9161710:
    nqp_get_sc_object $P5016, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    type_check $I5001, $P5015, $P5016
    if $I5001 goto unless912_end1704 
.annotate 'line', 3129
    find_lex $P5017, "RETURN"
    $P5018 = $P5017($P101)
  unless912_end1704:
.annotate 'line', 3135
    nqp_get_sc_object $P5019, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5020 = $P5019."new"()
    set $P102, $P5020
.annotate 'line', 3136
    $P102."push"($P101)
.annotate 'line', 3137
    $P5021 = _lex_param_1."blocktype"()
    set $P103, $P5021
    set $S5001, $P103
    iseq $I5003, $S5001, "immediate"
    unless $I5003 goto if918_else1712 
    .const 'Sub' $P5022 = 'cuid_336_1366375329.52446' 
    capture_lex $P5022
    $P5023 = $P5022()
    goto if918_end1713
  if918_else1712:
    set $S5002, $P103
    iseq $I5004, $S5002, "declaration"
    set $I5006, $I5004
    if $I5004 goto unless937_end1743 
    set $S5003, $P103
    iseq $I5005, $S5003, ""
    set $I5006, $I5005
  unless937_end1743:
    box $P5027, $I5006
    set $P5026, $P5027
    unless $I5006 goto if936_end1741 
    .const 'Sub' $P5024 = 'cuid_337_1366375329.52446' 
    capture_lex $P5024
    $P5025 = $P5024()
    set $P5026, $P5025
  if936_end1741:
  if918_end1713:
    goto lexotic_1590
  lexotic_1589:
    .get_results ($P102)
  lexotic_1590:
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_320_1366375329.52446") :anon :lex :outer("cuid_97_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2948
    .const 'Sub' $P5133 = 'cuid_318_1366375329.52446' 
    capture_lex $P5133 
    .const 'Sub' $P5133 = 'cuid_322_1366375329.52446' 
    capture_lex $P5133 
    .const 'Sub' $P5133 = 'cuid_329_1366375329.52446' 
    capture_lex $P5133 
    .const 'Sub' $P5133 = 'cuid_330_1366375329.52446' 
    capture_lex $P5133 
    .const 'Sub' $P5133 = 'cuid_331_1366375329.52446' 
    capture_lex $P5133 
    .const 'Sub' $P5133 = 'cuid_332_1366375329.52446' 
    capture_lex $P5133 
    .const 'Sub' $P5133 = 'cuid_334_1366375329.52446' 
    capture_lex $P5133 
    .lex "$*REGALLOC", $P101 
    .lex "$*BLOCKRA", $P102 
    .lex "$*BINDVAL", $P103 
    .lex "$outer", $P104 
    .lex "$block", $P105 
    .lex "@inners", $P106 
    .lex "$stmts", $P107 
    .lex "$decls", $P108 
    .lex "$opts", $P109 
    .lex "%lex_params", $P110 
    .lex "$cap_lex_reg", $P111 
    .lex "$hll", $P112 
    .lex "@loadlibs", $P113 
    .local pmc fb_tmp_258 
    .local pmc fb_tmp_259 
    .local pmc fb_tmp_262 
    .local pmc fb_tmp_263 
    .local pmc fb_tmp_265 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P105, $P5005
    new $P5006, 'QRPA'
    set $P106, $P5006
    nqp_get_sc_object $P5007, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P107, $P5007
    nqp_get_sc_object $P5008, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P108, $P5008
    nqp_get_sc_object $P5009, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P109, $P5009
    new $P5010, 'Hash'
    set $P110, $P5010
    nqp_get_sc_object $P5011, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P111, $P5011
    nqp_get_sc_object $P5012, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P112, $P5012
    new $P5013, 'QRPA'
    set $P113, $P5013
.annotate 'line', 2950
    nqp_get_sc_object $P5014, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 61
    $P5015 = $P5014."new"()
    set $P101, $P5015
    unless_null $P101, fallback1591
    nqp_get_sc_object $P5017, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5016, $P5017
    set fb_tmp_258, $P5016
    repr_defined $I5001, fb_tmp_258
    unless $I5001 goto if860_else1592 
    set $P5018, fb_tmp_258["$REGALLOC"]
    set $P5020, $P5018
    goto if860_end1593
  if860_else1592:
    null $P5019
    set $P5020, $P5019
  if860_end1593:
    unless_null $P5020, vivi_8611594
    nqp_get_sc_object $P5021, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5020, $P5021
  vivi_8611594:
    unless_null $P5020, vivi_8621595
    die "Contextual $*REGALLOC not found"
    box $P5022, "Contextual $*REGALLOC not found"
    set $P5020, $P5022
  vivi_8621595:
    set $P101, $P5020
  fallback1591:
    set $P102, $P101
    box $P5023, 0
    set $P103, $P5023
    new $P5032, 'ExceptionHandler'
    set_label $P5032, catch_handler_8671602
    $P5032.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5032
    find_dynamic_lex $P5024, "$*BLOCK"
    unless_null $P5024, fallback1596
    nqp_get_sc_object $P5026, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5025, $P5026
    set fb_tmp_259, $P5025
    repr_defined $I5002, fb_tmp_259
    unless $I5002 goto if863_else1597 
    set $P5027, fb_tmp_259["$BLOCK"]
    set $P5029, $P5027
    goto if863_end1598
  if863_else1597:
    null $P5028
    set $P5029, $P5028
  if863_end1598:
    unless_null $P5029, vivi_8641599
    nqp_get_sc_object $P5030, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5029, $P5030
  vivi_8641599:
    unless_null $P5029, vivi_8651600
    die "Contextual $*BLOCK not found"
    box $P5031, "Contextual $*BLOCK not found"
    set $P5029, $P5031
  vivi_8651600:
    set $P5024, $P5029
  fallback1596:
    set $P5033, $P5024
    pop_eh 
    goto skip_handler_8661601
  catch_handler_8671602:
    .get_results ($P5032) 
    set $I10001, 1
    set $P5032["handled"], $I10001
    nqp_get_sc_object $P10001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    finalize $P5032
    pop_upto_eh $P5032
    pop_eh 
    set $P5033, $P10001
    goto skip_handler_8661601
  skip_handler_8661601:
    set $P104, $P5033
.annotate 'line', 2954
    nqp_get_sc_object $P5034, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    find_lex $P5035, "$node"
    $P5036 = $P5034."new"($P5035, $P104)
    set $P105, $P5036
    .const 'Sub' $P5037 = 'cuid_318_1366375329.52446' 
    capture_lex $P5037
    $P5038 = $P5037()
.annotate 'line', 2977
    nqp_get_sc_object $P5039, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5040 = $P5039."new"()
    set $P108, $P5040
.annotate 'line', 2978
    nqp_get_sc_object $P5041, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5042 = $P5041."new"()
    set $P109, $P5042
.annotate 'line', 2979
    find_lex $P5043, "$node"
    $P5044 = $P5043."node"()
    unless $P5044 goto if876_end1615 
    find_lex $P5045, "$node"
    $P5046 = $P5045."node"()
    $P5047 = $P108."node"($P5046)
  if876_end1615:
.annotate 'line', 2981
    find_lex $P5048, "$node"
    $P5049 = $P5048."custom_args"()
    unless $P5049 goto if877_else1616 
.annotate 'line', 2982
    $P5050 = $P108."push_pirop"(".param pmc CALL_SIG :call_sig")
    goto if877_end1617
  if877_else1616:
    .const 'Sub' $P5051 = 'cuid_322_1366375329.52446' 
    capture_lex $P5051
    $P5052 = $P5051()
  if877_end1617:
.annotate 'line', 3063
    unless_null $P101, fallback1657
    nqp_get_sc_object $P5054, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5053, $P5054
    set fb_tmp_262, $P5053
    repr_defined $I5003, fb_tmp_262
    unless $I5003 goto if891_else1658 
    set $P5055, fb_tmp_262["$REGALLOC"]
    set $P5057, $P5055
    goto if891_end1659
  if891_else1658:
    null $P5056
    set $P5057, $P5056
  if891_end1659:
    unless_null $P5057, vivi_8921660
    nqp_get_sc_object $P5058, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5057, $P5058
  vivi_8921660:
    unless_null $P5057, vivi_8931661
    die "Contextual $*REGALLOC not found"
    box $P5059, "Contextual $*REGALLOC not found"
    set $P5057, $P5059
  vivi_8931661:
    set $P101, $P5057
  fallback1657:
    $P5060 = $P101."fresh_p"()
    set $P111, $P5060
    set $P5061, $P106
    iter $P5063, $P106
  for_next1662:
    unless $P5063, for_done1664
    shift $P5065, $P5063
  for_redo1663:
    .const 'Sub' $P5064 = 'cuid_329_1366375329.52446' 
    capture_lex $P5064
    $P5061 = $P5064($P5065)
    goto for_next1662
  for_done1664:
.annotate 'line', 3070
    $P5069 = $P105."lexicals"()
    set $P5066, $P5069
    iter $P5068, $P5069
  for_next1665:
    unless $P5068, for_done1667
    shift $P5071, $P5068
  for_redo1666:
    .const 'Sub' $P5070 = 'cuid_330_1366375329.52446' 
    capture_lex $P5070
    $P5066 = $P5070($P5071)
    goto for_next1665
  for_done1667:
    set $P5072, $P110
    iter $P5074, $P110
  for_next1668:
    unless $P5074, for_done1670
    shift $P5076, $P5074
  for_redo1669:
    .const 'Sub' $P5075 = 'cuid_331_1366375329.52446' 
    capture_lex $P5075
    $P5072 = $P5075($P5076)
    goto for_next1668
  for_done1670:
.annotate 'line', 3076
    $P5080 = $P105."locals"()
    set $P5077, $P5080
    iter $P5079, $P5080
  for_next1671:
    unless $P5079, for_done1673
    shift $P5082, $P5079
  for_redo1672:
    .const 'Sub' $P5081 = 'cuid_332_1366375329.52446' 
    capture_lex $P5081
    $P5077 = $P5081($P5082)
    goto for_next1671
  for_done1673:
.annotate 'line', 3081
    $P108."push"($P109)
.annotate 'line', 3084
    nqp_get_sc_object $P5083, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 16
    $P5084 = $P5083."new"()
    store_lex "$sub", $P5084
    box $P5085, ""
    set $P112, $P5085
    new $P5094, 'ExceptionHandler'
    set_label $P5094, catch_handler_8981680
    $P5094.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5094
    find_dynamic_lex $P5086, "$*HLL"
    unless_null $P5086, fallback1674
    nqp_get_sc_object $P5088, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5087, $P5088
    set fb_tmp_263, $P5087
    repr_defined $I5004, fb_tmp_263
    unless $I5004 goto if894_else1675 
    set $P5089, fb_tmp_263["$HLL"]
    set $P5091, $P5089
    goto if894_end1676
  if894_else1675:
    null $P5090
    set $P5091, $P5090
  if894_end1676:
    unless_null $P5091, vivi_8951677
    nqp_get_sc_object $P5092, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5091, $P5092
  vivi_8951677:
    unless_null $P5091, vivi_8961678
    die "Contextual $*HLL not found"
    box $P5093, "Contextual $*HLL not found"
    set $P5091, $P5093
  vivi_8961678:
    set $P5086, $P5091
  fallback1674:
    set $P112, $P5086
    set $P5095, $P112
    pop_eh 
    goto skip_handler_8971679
  catch_handler_8981680:
    .get_results ($P5094) 
    set $I10001, 1
    set $P5094["handled"], $I10001
    nqp_get_sc_object $P10001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    finalize $P5094
    pop_upto_eh $P5094
    pop_eh 
    set $P5095, $P10001
    goto skip_handler_8971679
  skip_handler_8971679:
    unless $P112 goto if899_end1682 
.annotate 'line', 3087
.annotate 'line', 3088
    find_lex $P5096, "$sub"
    $P5097 = $P5096."hll"($P112)
  if899_end1682:
.annotate 'line', 3092
    find_lex $P5098, "$sub"
    $P5098."push"($P108)
    .const 'Sub' $P5099 = 'cuid_334_1366375329.52446' 
    capture_lex $P5099
    $P5100 = $P5099()
.annotate 'line', 3109
    find_lex $P5101, "$sub"
    find_lex $P5102, "$node"
    $P5103 = $P5102."cuid"()
    $P5101."subid"($P5103)
.annotate 'line', 3110
    $P5104 = $P105."outer"()
    nqp_get_sc_object $P5105, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    type_check $I5005, $P5104, $P5105
    unless $I5005 goto if906_else1692 
.annotate 'line', 3111
    find_lex $P5106, "$sub"
    find_lex $P5108, "self"
    nqp_decontainerize $P5107, $P5108
    $P5109 = $P105."outer"()
    $P5110 = $P5109."qast"()
    $P5111 = $P5110."cuid"()
    $P5112 = $P5107."escape"($P5111)
    set $S5003, $P5112
    concat $S5002, ":anon :lex :outer(", $S5003
    concat $S5001, $S5002, ")"
    $P5113 = $P5106."pirflags"($S5001)
    goto if906_end1693
  if906_else1692:
.annotate 'line', 3113
.annotate 'line', 3114
    find_lex $P5114, "$sub"
    $P5115 = $P5114."pirflags"(":anon :lex")
  if906_end1693:
.annotate 'line', 3116
    find_lex $P5116, "$sub"
    find_lex $P5117, "$node"
    $P5118 = $P5117."name"()
    $P5116."name"($P5118)
.annotate 'line', 3119
    $P5119 = $P105."loadlibs"()
    set $P113, $P5119
    unless $P113 goto if907_end1695 
.annotate 'line', 3120
    find_lex $P5120, "$sub"
    $P5121 = $P5120."loadlibs"($P113)
  if907_end1695:
    find_dynamic_lex $P5122, "$*QAST_BLOCK_NO_CLOSE"
    unless_null $P5122, fallback1698
    nqp_get_sc_object $P5124, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5123, $P5124
    set fb_tmp_265, $P5123
    repr_defined $I5006, fb_tmp_265
    unless $I5006 goto if909_else1699 
    set $P5125, fb_tmp_265["$QAST_BLOCK_NO_CLOSE"]
    set $P5127, $P5125
    goto if909_end1700
  if909_else1699:
    null $P5126
    set $P5127, $P5126
  if909_end1700:
    unless_null $P5127, vivi_9101701
    nqp_get_sc_object $P5128, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5127, $P5128
  vivi_9101701:
    unless_null $P5127, vivi_9111702
    die "Contextual $*QAST_BLOCK_NO_CLOSE not found"
    box $P5129, "Contextual $*QAST_BLOCK_NO_CLOSE not found"
    set $P5127, $P5129
  vivi_9111702:
    set $P5122, $P5127
  fallback1698:
    set $P5132, $P5122
    if $P5122 goto unless908_end1697 
.annotate 'line', 3123
.annotate 'line', 3124
    find_lex $P5130, "$sub"
    $P5131 = $P5130."close_sub"()
    set $P5132, $P5131
  unless908_end1697:
    .return ($P5132) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_318_1366375329.52446") :anon :lex :outer("cuid_320_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2959
    .const 'Sub' $P5031 = 'cuid_317_1366375329.52446' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_319_1366375329.52446' 
    capture_lex $P5031 
    .lex "$*BLOCK", $P101 
    .lex "@*INNERS", $P102 
    .lex "$*HAVE_IMM_ARG", $P103 
    .lex "$*QAST_BLOCK_NO_CLOSE", $P104 
    .lex "$*WANT", $P105 
    .lex "$err", $P106 
    .local pmc fb_tmp_260 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    new $P5002, 'QRPA'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P105, $P5005
    nqp_get_sc_object $P5006, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P106, $P5006
    find_lex $P5007, "$block"
    set $P101, $P5007
    find_lex $P5008, "@inners"
    set $P102, $P5008
    box $P5009, 0
    set $P103, $P5009
    box $P5010, 0
    set $P104, $P5010
    new $P5026, 'ExceptionHandler'
    set_label $P5026, catch_handler_8741611
    $P5026.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5026
.annotate 'line', 2966
    new $P5024, 'ExceptionHandler'
    set_label $P5024, catch_handler_8721609
    $P5024.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5024
.annotate 'line', 2967
    find_lex $P5019, "self"
    nqp_decontainerize $P5018, $P5019
    find_lex $P5020, "$node"
    $P5021 = $P5020."list"()
    $P5022 = $P5018."compile_all_the_stmts"($P5021)
    store_lex "$stmts", $P5022
    nqp_get_sc_object $P5023, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5025, $P5023
    pop_eh 
    goto skip_handler_8711608
  catch_handler_8721609:
    .get_results ($P5024) 
    .const 'Sub' $P10001 = 'cuid_317_1366375329.52446' 
    capture_lex $P10001
    $P10001($P5024)
    set $I10001, 1
    set $P5024["handled"], $I10001
    nqp_get_sc_object $P10002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    finalize $P5024
    pop_upto_eh $P5024
    pop_eh 
    set $P5025, $P10002
    goto skip_handler_8711608
  skip_handler_8711608:
    set $P5027, $P5025
    pop_eh 
    goto skip_handler_8731610
  catch_handler_8741611:
    .get_results ($P5026) 
    set $I10001, 1
    set $P5026["handled"], $I10001
    nqp_get_sc_object $P10001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    finalize $P5026
    pop_upto_eh $P5026
    pop_eh 
    set $P5027, $P10001
    goto skip_handler_8731610
  skip_handler_8731610:
    set $P5030, $P106
    unless $P106 goto if875_end1613 
    .const 'Sub' $P5028 = 'cuid_319_1366375329.52446' 
    capture_lex $P5028
    $P5029 = $P5028()
    set $P5030, $P5029
  if875_end1613:
    .return ($P5030) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_317_1366375329.52446") :anon :lex :outer("cuid_318_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2968
    .param pmc _lex_param_0 
    .lex "$!", $P101 
    .lex "$_", _lex_param_0 
    set $P101, _lex_param_0
    store_lex "$err", $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_319_1366375329.52446") :anon :lex :outer("cuid_318_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2970
    .lex "$source", $P101 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 2971
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    find_lex $P5004, "$node"
    $P5005 = $P5002."source_for_node"($P5004)
    set $P101, $P5005
.annotate 'line', 2972
    find_lex $P5006, "$node"
    $P5007 = $P5006."name"()
    set $S5003, $P5007
    concat $S5002, "Error while compiling block ", $S5003
    set $S5006, $P101
    concat $S5005, $S5006, ": "
    find_lex $P5008, "$err"
    set $S5007, $P5008
    concat $S5004, $S5005, $S5007
    concat $S5001, $S5002, $S5004
    box $P5009, $S5001
    die $P5009
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_322_1366375329.52446") :anon :lex :outer("cuid_320_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2984
    .const 'Sub' $P5030 = 'cuid_321_1366375329.52446' 
    capture_lex $P5030 
    .const 'Sub' $P5030 = 'cuid_323_1366375329.52446' 
    capture_lex $P5030 
    .const 'Sub' $P5030 = 'cuid_324_1366375329.52446' 
    capture_lex $P5030 
    .const 'Sub' $P5030 = 'cuid_326_1366375329.52446' 
    capture_lex $P5030 
    .lex "@pos_params", $P101 
    .lex "@named_params", $P102 
    .lex "$slurpy_pos", $P103 
    .lex "$slurpy_named", $P104 
    .lex "@sorted_params", $P105 
    new $P5001, 'QRPA'
    set $P101, $P5001
    new $P5002, 'QRPA'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P104, $P5004
    new $P5005, 'QRPA'
    set $P105, $P5005
.annotate 'line', 2989
    find_lex $P5009, "$block"
    $P5010 = $P5009."params"()
    set $P5006, $P5010
    iter $P5008, $P5010
  for_next1626:
    unless $P5008, for_done1628
    shift $P5012, $P5008
  for_redo1627:
    .const 'Sub' $P5011 = 'cuid_321_1366375329.52446' 
    capture_lex $P5011
    $P5006 = $P5011($P5012)
    goto for_next1626
  for_done1628:
    set $P5013, $P101
    iter $P5015, $P101
    new $P5017, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5017, for_handlers1629
    push_eh $P5017
  for_next1630:
    unless $P5015, for_done1632
    shift $P5018, $P5015
  for_redo1631:
    .const 'Sub' $P5016 = 'cuid_323_1366375329.52446' 
    capture_lex $P5016
    $P5013 = $P5016($P5018)
    goto for_next1630
  for_handlers1629:
    .get_results ($P5017)
    pop_upto_eh $P5017
    getattribute $P5017, $P5017, 'type'
    eq $P5017, .CONTROL_LOOP_NEXT, for_next1630
    eq $P5017, .CONTROL_LOOP_REDO, for_redo1631
  for_done1632:
    pop_eh 
    unless $P103 goto if882_end1634 
    push $P105, $P103
  if882_end1634:
    set $P5019, $P102
    iter $P5021, $P102
    new $P5023, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5023, for_handlers1635
    push_eh $P5023
  for_next1636:
    unless $P5021, for_done1638
    shift $P5024, $P5021
  for_redo1637:
    .const 'Sub' $P5022 = 'cuid_324_1366375329.52446' 
    capture_lex $P5022
    $P5019 = $P5022($P5024)
    goto for_next1636
  for_handlers1635:
    .get_results ($P5023)
    pop_upto_eh $P5023
    getattribute $P5023, $P5023, 'type'
    eq $P5023, .CONTROL_LOOP_NEXT, for_next1636
    eq $P5023, .CONTROL_LOOP_REDO, for_redo1637
  for_done1638:
    pop_eh 
    unless $P104 goto if883_end1640 
    push $P105, $P104
  if883_end1640:
    set $P5025, $P105
    iter $P5027, $P105
  for_next1654:
    unless $P5027, for_done1656
    shift $P5029, $P5027
  for_redo1655:
    .const 'Sub' $P5028 = 'cuid_326_1366375329.52446' 
    capture_lex $P5028
    $P5025 = $P5028($P5029)
    goto for_next1654
  for_done1656:
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_321_1366375329.52446") :anon :lex :outer("cuid_322_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 2989
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 2990
    $P5001 = _lex_param_0."slurpy"()
    set $P5003, $P5001
    unless $P5001 goto if879_end1621 
    $P5002 = _lex_param_0."named"()
    set $P5003, $P5002
  if879_end1621:
    unless $P5003 goto if878_else1618 
    store_lex "$slurpy_named", _lex_param_0
    set $P5010, _lex_param_0
    goto if878_end1619
  if878_else1618:
.annotate 'line', 2993
    $P5004 = _lex_param_0."slurpy"()
    unless $P5004 goto if880_else1622 
    store_lex "$slurpy_pos", _lex_param_0
    set $P5009, _lex_param_0
    goto if880_end1623
  if880_else1622:
.annotate 'line', 2996
    $P5005 = _lex_param_0."named"()
    unless $P5005 goto if881_else1624 
    find_lex $P5006, "@named_params"
    push $P5006, _lex_param_0
    set $P5008, $P5006
    goto if881_end1625
  if881_else1624:
.annotate 'line', 2999
    find_lex $P5007, "@pos_params"
    push $P5007, _lex_param_0
    set $P5008, $P5007
  if881_end1625:
    set $P5009, $P5008
  if880_end1623:
    set $P5010, $P5009
  if878_end1619:
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_323_1366375329.52446") :anon :lex :outer("cuid_322_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "@sorted_params"
    push $P5001, _lex_param_0
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_324_1366375329.52446") :anon :lex :outer("cuid_322_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "@sorted_params"
    push $P5001, _lex_param_0
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_326_1366375329.52446") :anon :lex :outer("cuid_322_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3008
    .param pmc _lex_param_0 
    .const 'Sub' $P5033 = 'cuid_325_1366375329.52446' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_328_1366375329.52446' 
    capture_lex $P5033 
    .lex "@param", $P101 
    .lex "$reg_type", $P102 
    .lex "$_", _lex_param_0 
    new $P5001, 'QRPA'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    new $P5003, 'QRPA'
    box $P5004, ".param"
    push $P5003, $P5004
    set $P101, $P5003
.annotate 'line', 3012
    $P5005 = _lex_param_0."scope"()
    set $S5001, $P5005
    iseq $I5001, $S5001, "local"
    unless $I5001 goto if884_else1641 
.annotate 'line', 3013
    find_lex $P5006, "$block"
    $P5007 = _lex_param_0."name"()
    $P5008 = $P5006."local_type_long"($P5007)
    push $P101, $P5008
.annotate 'line', 3014
    $P5009 = _lex_param_0."name"()
    push $P101, $P5009
.annotate 'line', 3015
    find_lex $P5010, "$block"
    $P5011 = _lex_param_0."name"()
    $P5012 = $P5010."local_type"($P5011)
    set $P102, $P5012
    goto if884_end1642
  if884_else1641:
    .const 'Sub' $P5013 = 'cuid_325_1366375329.52446' 
    capture_lex $P5013
    $P5014 = $P5013()
  if884_end1642:
.annotate 'line', 3025
    $P5015 = _lex_param_0."slurpy"()
    unless $P5015 goto if885_else1643 
    box $P5016, ":slurpy"
    push $P101, $P5016
.annotate 'line', 3027
    $P5017 = _lex_param_0."named"()
    set $P5019, $P5017
    unless $P5017 goto if886_end1646 
    box $P5018, ":named"
    push $P101, $P5018
    set $P5019, $P101
  if886_end1646:
    goto if885_end1644
  if885_else1643:
.annotate 'line', 3031
    $P5020 = _lex_param_0."named"()
    set $P5026, $P5020
    unless $P5020 goto if887_end1648 
.annotate 'line', 3032
    find_lex $P5022, "self"
    nqp_decontainerize $P5021, $P5022
    $P5023 = _lex_param_0."named"()
    $P5024 = $P5021."escape"($P5023)
    set $S5004, $P5024
    concat $S5003, ":named(", $S5004
    concat $S5002, $S5003, ")"
    box $P5025, $S5002
    push $P101, $P5025
    set $P5026, $P101
  if887_end1648:
  if885_end1644:
.annotate 'line', 3035
    $P5027 = _lex_param_0."default"()
    unless $P5027 goto if888_else1649 
    .const 'Sub' $P5028 = 'cuid_328_1366375329.52446' 
    capture_lex $P5028
    $P5029 = $P5028()
    set $P5032, $P5029
    goto if888_end1650
  if888_else1649:
.annotate 'line', 3056
.annotate 'line', 3057
    find_lex $P5030, "$decls"
    join $S5005, " ", $P101
    $P5031 = $P5030."push_pirop"($S5005)
    set $P5032, $P5031
  if888_end1650:
    .return ($P5032) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_325_1366375329.52446") :anon :lex :outer("cuid_326_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3017
    .lex "$reg", $P101 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 3018
    find_lex $P5002, "$block"
    find_lex $P5003, "$_"
    $P5004 = $P5003."name"()
    $P5005 = $P5002."lex_reg"($P5004)
    set $P101, $P5005
    find_lex $P5006, "@param"
.annotate 'line', 3019
    find_lex $P5007, "$block"
    find_lex $P5008, "$_"
    $P5009 = $P5008."name"()
    $P5010 = $P5007."lexical_type_long"($P5009)
    push $P5006, $P5010
    find_lex $P5011, "@param"
    push $P5011, $P101
    find_lex $P5012, "%lex_params"
.annotate 'line', 3021
    find_lex $P5013, "$_"
    $P5014 = $P5013."name"()
    set $S5001, $P5014
    set $P5012[$S5001], $P101
.annotate 'line', 3022
    find_lex $P5015, "$block"
    find_lex $P5016, "$_"
    $P5017 = $P5016."name"()
    $P5018 = $P5015."lexical_type"($P5017)
    store_lex "$reg_type", $P5018
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_328_1366375329.52446") :anon :lex :outer("cuid_326_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3035
    .const 'Sub' $P5026 = 'cuid_327_1366375329.52446' 
    capture_lex $P5026 
    .lex "$o_flag", $P101 
    .lex "$lbl", $P102 
    .lex "$def", $P103 
    .local pmc fb_tmp_261 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
    find_lex $P5004, "@param"
    box $P5005, ":optional"
    push $P5004, $P5005
.annotate 'line', 3038
    find_lex $P5006, "$decls"
    find_lex $P5007, "@param"
    join $S5001, " ", $P5007
    $P5006."push_pirop"($S5001)
.annotate 'line', 3041
    nqp_get_sc_object $P5008, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 12
    $P5009 = $P5008."unique"("haz_param")
    set $P101, $P5009
.annotate 'line', 3042
    find_lex $P5010, "$decls"
    set $S5004, $P101
    concat $S5003, ".param int ", $S5004
    concat $S5002, $S5003, " :opt_flag"
    $P5010."push_pirop"($S5002)
.annotate 'line', 3045
    nqp_get_sc_object $P5011, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 38
    $P5012 = $P5011."new"("default" :named("name"))
    set $P102, $P5012
    .const 'Sub' $P5013 = 'cuid_327_1366375329.52446' 
    capture_lex $P5013
    $P5014 = $P5013()
.annotate 'line', 3051
    find_lex $P5015, "$opts"
    $P5015."push_pirop"("if", $P101, $P102)
.annotate 'line', 3052
    find_lex $P5016, "$opts"
    $P5016."push"($P103)
.annotate 'line', 3053
    find_lex $P5017, "$opts"
    find_lex $P5018, "@param"
    set fb_tmp_261, $P5018
    repr_defined $I5001, fb_tmp_261
    unless $I5001 goto if889_else1651 
    set $P5019, fb_tmp_261[2]
    set $P5021, $P5019
    goto if889_end1652
  if889_else1651:
    null $P5020
    set $P5021, $P5020
  if889_end1652:
    unless_null $P5021, vivi_8901653
    nqp_get_sc_object $P5022, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5021, $P5022
  vivi_8901653:
    $P5023 = $P103."result"()
    $P5017."push_pirop"("set", $P5021, $P5023)
.annotate 'line', 3054
    find_lex $P5024, "$opts"
    $P5025 = $P5024."push"($P102)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_327_1366375329.52446") :anon :lex :outer("cuid_328_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3047
    .lex "$*BLOCK", $P101 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    find_lex $P5002, "$block"
    set $P101, $P5002
.annotate 'line', 3049
    find_lex $P5004, "self"
    nqp_decontainerize $P5003, $P5004
    find_lex $P5005, "$_"
    $P5006 = $P5005."default"()
    find_lex $P5007, "$reg_type"
    $P5008 = $P5003."as_post"($P5006, $P5007 :named("want"))
    store_lex "$def", $P5008
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_329_1366375329.52446") :anon :lex :outer("cuid_320_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3064
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 3065
    find_lex $P5001, "$decls"
    find_lex $P5002, "$cap_lex_reg"
    set $S5005, $P5002
    concat $S5004, ".const 'Sub' ", $S5005
    concat $S5003, $S5004, " = '"
    set $S5006, _lex_param_0
    concat $S5002, $S5003, $S5006
    concat $S5001, $S5002, "'"
    $P5001."push_pirop"($S5001)
.annotate 'line', 3066
    find_lex $P5003, "$decls"
    find_lex $P5004, "$cap_lex_reg"
    set $S5008, $P5004
    concat $S5007, "capture_lex ", $S5008
    $P5005 = $P5003."push_pirop"($S5007)
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_330_1366375329.52446") :anon :lex :outer("cuid_320_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3070
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 3071
    find_lex $P5001, "$decls"
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    $P5004 = _lex_param_0."name"()
    $P5005 = $P5002."escape"($P5004)
    set $S5004, $P5005
    concat $S5003, ".lex ", $S5004
    concat $S5002, $S5003, ", "
    find_lex $P5006, "$block"
    $P5007 = _lex_param_0."name"()
    $P5008 = $P5006."lex_reg"($P5007)
    set $S5005, $P5008
    concat $S5001, $S5002, $S5005
    $P5009 = $P5001."push_pirop"($S5001)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_331_1366375329.52446") :anon :lex :outer("cuid_320_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3073
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 3074
    find_lex $P5001, "$decls"
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    $P5004 = _lex_param_0."key"()
    $P5005 = $P5002."escape"($P5004)
    set $S5004, $P5005
    concat $S5003, ".lex ", $S5004
    concat $S5002, $S5003, ", "
    $P5006 = _lex_param_0."value"()
    set $S5005, $P5006
    concat $S5001, $S5002, $S5005
    $P5007 = $P5001."push_pirop"($S5001)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_332_1366375329.52446") :anon :lex :outer("cuid_320_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3076
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 3077
    find_lex $P5001, "$decls"
    find_lex $P5002, "$block"
    $P5003 = _lex_param_0."name"()
    $P5004 = $P5002."local_type_long"($P5003)
    set $S5004, $P5004
    concat $S5003, ".local ", $S5004
    concat $S5002, $S5003, " "
    $P5005 = _lex_param_0."name"()
    set $S5005, $P5005
    concat $S5001, $S5002, $S5005
    $P5006 = $P5001."push_pirop"($S5001)
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_334_1366375329.52446") :anon :lex :outer("cuid_320_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3093
    .const 'Sub' $P5029 = 'cuid_333_1366375329.52446' 
    capture_lex $P5029 
    .lex "$*BLOCK", $P101 
    .lex "$ret_type", $P102 
    .local pmc fb_tmp_264 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    find_lex $P5003, "$block"
    set $P101, $P5003
    box $P5004, "P"
    set $P102, $P5004
    new $P5010, 'ExceptionHandler'
    set_label $P5010, catch_handler_9011684
    $P5010.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5010
.annotate 'line', 3096
    find_lex $P5006, "self"
    nqp_decontainerize $P5005, $P5006
    find_lex $P5007, "$stmts"
    $P5008 = $P5007."result"()
    $P5009 = $P5005."infer_type"($P5008)
    set $P102, $P5009
    set $P5011, $P102
    pop_eh 
    goto skip_handler_9001683
  catch_handler_9011684:
    .get_results ($P5010) 
    set $I10001, 1
    set $P5010["handled"], $I10001
    nqp_get_sc_object $P10001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    finalize $P5010
    pop_upto_eh $P5010
    pop_eh 
    set $P5011, $P10001
    goto skip_handler_9001683
  skip_handler_9001683:
    set $S5001, $P102
    isne $I5001, $S5001, "P"
    box $P5019, $I5001
    set $P5018, $P5019
    unless $I5001 goto if903_end1688 
    find_lex $P5012, "%hll_force_return_boxing"
    set fb_tmp_264, $P5012
    repr_defined $I5002, fb_tmp_264
    unless $I5002 goto if904_else1689 
    find_lex $P5014, "$hll"
    set $S5002, $P5014
    set $P5013, fb_tmp_264[$S5002]
    set $P5016, $P5013
    goto if904_end1690
  if904_else1689:
    null $P5015
    set $P5016, $P5015
  if904_end1690:
    unless_null $P5016, vivi_9051691
    nqp_get_sc_object $P5017, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5016, $P5017
  vivi_9051691:
    set $P5018, $P5016
  if903_end1688:
    unless $P5018 goto if902_else1685 
    .const 'Sub' $P5020 = 'cuid_333_1366375329.52446' 
    capture_lex $P5020
    $P5021 = $P5020()
    set $P5028, $P5021
    goto if902_end1686
  if902_else1685:
.annotate 'line', 3102
.annotate 'line', 3103
    find_lex $P5022, "$sub"
    find_lex $P5023, "$stmts"
    $P5022."push"($P5023)
.annotate 'line', 3104
    find_lex $P5024, "$sub"
    find_lex $P5025, "$stmts"
    $P5026 = $P5025."result"()
    set $S5005, $P5026
    concat $S5004, ".return (", $S5005
    concat $S5003, $S5004, ")"
    $P5027 = $P5024."push_pirop"($S5003)
    set $P5028, $P5027
  if902_end1686:
    .return ($P5028) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_333_1366375329.52446") :anon :lex :outer("cuid_334_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3097
    .lex "$boxed", $P101 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 3098
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    find_lex $P5004, "$stmts"
    $P5005 = $P5002."coerce"($P5004, "P")
    set $P101, $P5005
.annotate 'line', 3099
    find_lex $P5006, "$sub"
    $P5006."push"($P101)
.annotate 'line', 3100
    find_lex $P5007, "$sub"
    $P5008 = $P101."result"()
    set $S5003, $P5008
    concat $S5002, ".return (", $S5003
    concat $S5001, $S5002, ")"
    $P5009 = $P5007."push_pirop"($S5001)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_336_1366375329.52446") :anon :lex :outer("cuid_97_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3138
    .const 'Sub' $P5060 = 'cuid_335_1366375329.52446' 
    capture_lex $P5060 
    .lex "$breg", $P101 
    .lex "$rtype", $P102 
    .lex "$rreg", $P103 
    .lex "$im_arg", $P104 
    .local pmc fb_tmp_267 
    .local pmc pkg_viv_tmp_5 
    .local pmc fb_tmp_268 
    .local pmc fb_tmp_269 
    .local pmc fb_tmp_270 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P104, $P5004
    new $P5015, 'ExceptionHandler'
    set_label $P5015, catch_handler_9231720
    $P5015.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5015
    find_dynamic_lex $P5005, "@*INNERS"
    unless_null $P5005, fallback1714
    nqp_get_sc_object $P5007, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5006, $P5007
    set pkg_viv_tmp_5, $P5006
    set fb_tmp_267, pkg_viv_tmp_5
    repr_defined $I5001, fb_tmp_267
    unless $I5001 goto if919_else1715 
    set $P5008, fb_tmp_267["@INNERS"]
    set $P5010, $P5008
    goto if919_end1716
  if919_else1715:
    null $P5009
    set $P5010, $P5009
  if919_end1716:
    unless_null $P5010, vivi_9201717
    new $P5011, 'QRPA'
    set pkg_viv_tmp_5["@INNERS"], $P5011
    set $P5010, $P5011
  vivi_9201717:
    unless_null $P5010, vivi_9211718
    die "Contextual @*INNERS not found"
    box $P5012, "Contextual @*INNERS not found"
    set $P5010, $P5012
  vivi_9211718:
    set $P5005, $P5010
  fallback1714:
.annotate 'line', 3140
    find_lex $P5013, "$node"
    $P5014 = $P5013."cuid"()
    push $P5005, $P5014
    set $P5016, $P5005
    pop_eh 
    goto skip_handler_9221719
  catch_handler_9231720:
    .get_results ($P5015) 
    set $I10001, 1
    set $P5015["handled"], $I10001
    nqp_get_sc_object $P10001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    finalize $P5015
    pop_upto_eh $P5015
    pop_eh 
    set $P5016, $P10001
    goto skip_handler_9221719
  skip_handler_9221719:
.annotate 'line', 3141
    find_dynamic_lex $P5017, "$*REGALLOC"
    unless_null $P5017, fallback1721
    nqp_get_sc_object $P5019, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5018, $P5019
    set fb_tmp_268, $P5018
    repr_defined $I5002, fb_tmp_268
    unless $I5002 goto if924_else1722 
    set $P5020, fb_tmp_268["$REGALLOC"]
    set $P5022, $P5020
    goto if924_end1723
  if924_else1722:
    null $P5021
    set $P5022, $P5021
  if924_end1723:
    unless_null $P5022, vivi_9251724
    nqp_get_sc_object $P5023, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5022, $P5023
  vivi_9251724:
    unless_null $P5022, vivi_9261725
    die "Contextual $*REGALLOC not found"
    box $P5024, "Contextual $*REGALLOC not found"
    set $P5022, $P5024
  vivi_9261725:
    set $P5017, $P5022
  fallback1721:
    $P5025 = $P5017."fresh_p"()
    set $P101, $P5025
.annotate 'line', 3142
    find_lex $P5026, "$ops"
    set $S5005, $P101
    concat $S5004, ".const 'Sub' ", $S5005
    concat $S5003, $S5004, " = '"
    find_lex $P5027, "$node"
    $P5028 = $P5027."cuid"()
    set $S5006, $P5028
    concat $S5002, $S5003, $S5006
    concat $S5001, $S5002, "'"
    $P5026."push_pirop"($S5001)
.annotate 'line', 3143
    find_lex $P5029, "$ops"
    $P5029."push_pirop"("capture_lex", $P101)
.annotate 'line', 3146
    find_lex $P5030, "$node"
    $P5031 = $P5030."returns"()
    $P5032 = "&type_to_register_type"($P5031)
    set $S5008, $P5032
    downcase $S5007, $S5008
    box $P5033, $S5007
    set $P102, $P5033
.annotate 'line', 3147
    find_dynamic_lex $P5034, "$*REGALLOC"
    unless_null $P5034, fallback1726
    nqp_get_sc_object $P5036, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5035, $P5036
    set fb_tmp_269, $P5035
    repr_defined $I5003, fb_tmp_269
    unless $I5003 goto if927_else1727 
    set $P5037, fb_tmp_269["$REGALLOC"]
    set $P5039, $P5037
    goto if927_end1728
  if927_else1727:
    null $P5038
    set $P5039, $P5038
  if927_end1728:
    unless_null $P5039, vivi_9281729
    nqp_get_sc_object $P5040, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5039, $P5040
  vivi_9281729:
    unless_null $P5039, vivi_9291730
    die "Contextual $*REGALLOC not found"
    box $P5041, "Contextual $*REGALLOC not found"
    set $P5039, $P5041
  vivi_9291730:
    set $P5034, $P5039
  fallback1726:
    set $S5010, $P102
    concat $S5009, "fresh_", $S5010
    $P5042 = $P5034.$S5009()
    set $P103, $P5042
    box $P5043, 0
    set $P104, $P5043
    new $P5052, 'ExceptionHandler'
    set_label $P5052, catch_handler_9341737
    $P5052.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5052
    find_dynamic_lex $P5044, "$*HAVE_IMM_ARG"
    unless_null $P5044, fallback1731
    nqp_get_sc_object $P5046, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5045, $P5046
    set fb_tmp_270, $P5045
    repr_defined $I5004, fb_tmp_270
    unless $I5004 goto if930_else1732 
    set $P5047, fb_tmp_270["$HAVE_IMM_ARG"]
    set $P5049, $P5047
    goto if930_end1733
  if930_else1732:
    null $P5048
    set $P5049, $P5048
  if930_end1733:
    unless_null $P5049, vivi_9311734
    nqp_get_sc_object $P5050, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5049, $P5050
  vivi_9311734:
    unless_null $P5049, vivi_9321735
    die "Contextual $*HAVE_IMM_ARG not found"
    box $P5051, "Contextual $*HAVE_IMM_ARG not found"
    set $P5049, $P5051
  vivi_9321735:
    set $P5044, $P5049
  fallback1731:
    set $P104, $P5044
    set $P5053, $P104
    pop_eh 
    goto skip_handler_9331736
  catch_handler_9341737:
    .get_results ($P5052) 
    set $I10001, 1
    set $P5052["handled"], $I10001
    nqp_get_sc_object $P10001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    finalize $P5052
    pop_upto_eh $P5052
    pop_eh 
    set $P5053, $P10001
    goto skip_handler_9331736
  skip_handler_9331736:
    unless $P104 goto if935_else1738 
.annotate 'line', 3153
    .const 'Sub' $P5055 = 'cuid_335_1366375329.52446' 
    capture_lex $P5055
    newclosure $P5054, $P5055
    store_dynamic_lex "$*IMM_ARG", $P5054
    goto if935_end1739
  if935_else1738:
.annotate 'line', 3158
.annotate 'line', 3159
    find_lex $P5056, "$ops"
    $P5057 = $P5056."push_pirop"("call", $P101, $P103 :named("result"))
  if935_end1739:
.annotate 'line', 3161
    find_lex $P5058, "$ops"
    $P5059 = $P5058."result"($P103)
    .return ($P5059) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_335_1366375329.52446") :anon :lex :outer("cuid_336_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3154
    .param pmc _lex_param_0 
    .lex "$arg", _lex_param_0 
.annotate 'line', 3155
    find_lex $P5001, "$ops"
    find_lex $P5002, "$breg"
    find_lex $P5003, "$rreg"
    $P5004 = $P5001."push_pirop"("call", $P5002, _lex_param_0, $P5003 :named("result"))
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_337_1366375329.52446") :anon :lex :outer("cuid_97_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3163
    .lex "$breg", $P101 
    .local pmc fb_tmp_271 
    .local pmc pkg_viv_tmp_6 
    .local pmc fb_tmp_272 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    new $P5012, 'ExceptionHandler'
    set_label $P5012, catch_handler_9421750
    $P5012.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5012
    find_dynamic_lex $P5002, "@*INNERS"
    unless_null $P5002, fallback1744
    nqp_get_sc_object $P5004, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5003, $P5004
    set pkg_viv_tmp_6, $P5003
    set fb_tmp_271, pkg_viv_tmp_6
    repr_defined $I5001, fb_tmp_271
    unless $I5001 goto if938_else1745 
    set $P5005, fb_tmp_271["@INNERS"]
    set $P5007, $P5005
    goto if938_end1746
  if938_else1745:
    null $P5006
    set $P5007, $P5006
  if938_end1746:
    unless_null $P5007, vivi_9391747
    new $P5008, 'QRPA'
    set pkg_viv_tmp_6["@INNERS"], $P5008
    set $P5007, $P5008
  vivi_9391747:
    unless_null $P5007, vivi_9401748
    die "Contextual @*INNERS not found"
    box $P5009, "Contextual @*INNERS not found"
    set $P5007, $P5009
  vivi_9401748:
    set $P5002, $P5007
  fallback1744:
.annotate 'line', 3165
    find_lex $P5010, "$node"
    $P5011 = $P5010."cuid"()
    push $P5002, $P5011
    set $P5013, $P5002
    pop_eh 
    goto skip_handler_9411749
  catch_handler_9421750:
    .get_results ($P5012) 
    set $I10001, 1
    set $P5012["handled"], $I10001
    nqp_get_sc_object $P10001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    finalize $P5012
    pop_upto_eh $P5012
    pop_eh 
    set $P5013, $P10001
    goto skip_handler_9411749
  skip_handler_9411749:
.annotate 'line', 3166
    find_dynamic_lex $P5014, "$*REGALLOC"
    unless_null $P5014, fallback1751
    nqp_get_sc_object $P5016, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5015, $P5016
    set fb_tmp_272, $P5015
    repr_defined $I5002, fb_tmp_272
    unless $I5002 goto if943_else1752 
    set $P5017, fb_tmp_272["$REGALLOC"]
    set $P5019, $P5017
    goto if943_end1753
  if943_else1752:
    null $P5018
    set $P5019, $P5018
  if943_end1753:
    unless_null $P5019, vivi_9441754
    nqp_get_sc_object $P5020, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5019, $P5020
  vivi_9441754:
    unless_null $P5019, vivi_9451755
    die "Contextual $*REGALLOC not found"
    box $P5021, "Contextual $*REGALLOC not found"
    set $P5019, $P5021
  vivi_9451755:
    set $P5014, $P5019
  fallback1751:
    $P5022 = $P5014."fresh_p"()
    set $P101, $P5022
.annotate 'line', 3167
    find_lex $P5023, "$ops"
    set $S5005, $P101
    concat $S5004, ".const 'Sub' ", $S5005
    concat $S5003, $S5004, " = '"
    find_lex $P5024, "$node"
    $P5025 = $P5024."cuid"()
    set $S5006, $P5025
    concat $S5002, $S5003, $S5006
    concat $S5001, $S5002, "'"
    $P5023."push_pirop"($S5001)
.annotate 'line', 3168
    find_lex $P5026, "$ops"
    $P5026."push_pirop"("capture_lex", $P101)
.annotate 'line', 3169
    find_lex $P5027, "$ops"
    $P5028 = $P5027."result"($P101)
    .return ($P5028) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_98_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3174
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_17 :opt_flag 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$want", _lex_param_2 
    if haz_param_17, default1757
    nqp_get_sc_object $P5006, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set _lex_param_2, $P5006
  default1757:
.annotate 'line', 3175
    nqp_decontainerize $P5001, _lex_param_0
    $P5002 = _lex_param_1."list"()
    $P5003 = _lex_param_1."resultchild"()
    $P5004 = _lex_param_1."node"()
    $P5005 = $P5001."compile_all_the_stmts"($P5002, $P5003, $P5004 :named("node"))
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_99_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3178
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_18 :opt_flag 
    .const 'Sub' $P5013 = 'cuid_338_1366375329.52446' 
    capture_lex $P5013 
    .lex "$orig_reg", $P101 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$want", _lex_param_2 
    .local pmc fb_tmp_273 
    if haz_param_18, default1763
    nqp_get_sc_object $P5012, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set _lex_param_2, $P5012
  default1763:
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    find_dynamic_lex $P5002, "$*REGALLOC"
    unless_null $P5002, fallback1758
    nqp_get_sc_object $P5004, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5003, $P5004
    set fb_tmp_273, $P5003
    repr_defined $I5001, fb_tmp_273
    unless $I5001 goto if946_else1759 
    set $P5005, fb_tmp_273["$REGALLOC"]
    set $P5007, $P5005
    goto if946_end1760
  if946_else1759:
    null $P5006
    set $P5007, $P5006
  if946_end1760:
    unless_null $P5007, vivi_9471761
    nqp_get_sc_object $P5008, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5007, $P5008
  vivi_9471761:
    unless_null $P5007, vivi_9481762
    die "Contextual $*REGALLOC not found"
    box $P5009, "Contextual $*REGALLOC not found"
    set $P5007, $P5009
  vivi_9481762:
    set $P5002, $P5007
  fallback1758:
    set $P101, $P5002
    .const 'Sub' $P5010 = 'cuid_338_1366375329.52446' 
    capture_lex $P5010
    $P5011 = $P5010()
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_338_1366375329.52446") :anon :lex :outer("cuid_99_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3180
    .lex "$*REGALLOC", $P101 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 3181
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 61
    find_lex $P5003, "$orig_reg"
    $P5004 = $P5002."new"($P5003)
    set $P101, $P5004
.annotate 'line', 3182
    find_lex $P5006, "self"
    nqp_decontainerize $P5005, $P5006
    find_lex $P5007, "$node"
    $P5008 = $P5007."list"()
    find_lex $P5009, "$node"
    $P5010 = $P5009."resultchild"()
    find_lex $P5011, "$node"
    $P5012 = $P5011."node"()
    $P5013 = $P5005."compile_all_the_stmts"($P5008, $P5010, $P5012 :named("node"))
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "compile_all_the_stmts" :subid("cuid_100_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3186
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :optional 
    .param int haz_param_19 :opt_flag 
    .param pmc _lex_param_3 :named("node") :optional 
    .param int haz_param_20 :opt_flag 
    .const 'Sub' $P5024 = 'cuid_339_1366375329.52446' 
    capture_lex $P5024 
    .lex "$last", $P101 
    .lex "$ops", $P102 
    .lex "$i", $I101 
    .lex "$n", $I102 
    .lex "$all_void", $P103 
    .lex "self", _lex_param_0 
    .lex "@stmts", _lex_param_1 
    .lex "$resultchild", _lex_param_2 
    .lex "$node", _lex_param_3 
    .local pmc fb_tmp_274 
    if haz_param_19, default1788
    nqp_get_sc_object $P5022, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set _lex_param_2, $P5022
  default1788:
    if haz_param_20, default1789
    nqp_get_sc_object $P5023, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set _lex_param_3, $P5023
  default1789:
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    set $I101, 0
    set $I102, 0
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
.annotate 'line', 3188
    nqp_get_sc_object $P5004, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5005 = $P5004."new"()
    set $P102, $P5005
    unless _lex_param_3 goto if949_end1765 
.annotate 'line', 3189
    $P5006 = $P102."node"(_lex_param_3)
  if949_end1765:
    set $I101, 0
    set $N5001, _lex_param_1
    set $I5001, $N5001
    set $I102, $I5001
    find_dynamic_lex $P5007, "$*WANT"
    unless_null $P5007, fallback1766
    nqp_get_sc_object $P5009, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5008, $P5009
    set fb_tmp_274, $P5008
    repr_defined $I5003, fb_tmp_274
    unless $I5003 goto if950_else1767 
    set $P5010, fb_tmp_274["$WANT"]
    set $P5012, $P5010
    goto if950_end1768
  if950_else1767:
    null $P5011
    set $P5012, $P5011
  if950_end1768:
    unless_null $P5012, vivi_9511769
    nqp_get_sc_object $P5013, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5012, $P5013
  vivi_9511769:
    unless_null $P5012, vivi_9521770
    die "Contextual $*WANT not found"
    box $P5014, "Contextual $*WANT not found"
    set $P5012, $P5014
  vivi_9521770:
    set $P5007, $P5012
  fallback1766:
    set $S5001, $P5007
    iseq $I5002, $S5001, "v"
    box $P5015, $I5002
    set $P103, $P5015
    defined $I5004, _lex_param_2
    if $I5004 goto unless953_end1772 
.annotate 'line', 3193
    set $N5003, $I102
    set $N5004, 1
    sub $N5002, $N5003, $N5004
    box $P5016, $N5002
    set _lex_param_2, $P5016
  unless953_end1772:
    set $P5017, _lex_param_1
    iter $P5019, _lex_param_1
  for_next1785:
    unless $P5019, for_done1787
    shift $P5021, $P5019
  for_redo1786:
    .const 'Sub' $P5020 = 'cuid_339_1366375329.52446' 
    capture_lex $P5020
    $P5017 = $P5020($P5021)
    goto for_next1785
  for_done1787:
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_339_1366375329.52446") :anon :lex :outer("cuid_100_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3196
    .param pmc _lex_param_0 
    .lex "$void", $P101 
    .lex "$_", _lex_param_0 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    find_lex $P5002, "$all_void"
    set $P5004, $P5002
    if $P5002 goto unless954_end1774 
    find_lex $I5002, "$i"
    set $N5001, $I5002
    find_lex $P5003, "$resultchild"
    set $N5002, $P5003
    isne $I5001, $N5001, $N5002
    box $P5005, $I5001
    set $P5004, $P5005
  unless954_end1774:
    set $P101, $P5004
    unless $P101 goto if955_else1775 
.annotate 'line', 3198
    nqp_get_sc_object $P5006, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 66
    type_check $I5003, _lex_param_0, $P5006
    unless $I5003 goto if956_end1778 
.annotate 'line', 3199
.annotate 'line', 3200
    $P5007 = "&want"(_lex_param_0, "v")
    set _lex_param_0, $P5007
  if956_end1778:
.annotate 'line', 3202
    find_lex $P5009, "self"
    nqp_decontainerize $P5008, $P5009
    $P5010 = $P5008."as_post"(_lex_param_0, "v" :named("want"))
    store_lex "$last", $P5010
    goto if955_end1776
  if955_else1775:
.annotate 'line', 3204
.annotate 'line', 3205
    find_lex $P5012, "self"
    nqp_decontainerize $P5011, $P5012
    $P5013 = $P5011."as_post"(_lex_param_0)
    store_lex "$last", $P5013
  if955_end1776:
    set $P5015, $P101
    unless $P101 goto if958_end1782 
    nqp_get_sc_object $P5014, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 71
    type_check $I5004, _lex_param_0, $P5014
    box $P5016, $I5004
    set $P5015, $P5016
  if958_end1782:
    if $P5015 goto unless957_end1780 
.annotate 'line', 3207
    find_lex $P5017, "$ops"
    find_lex $P5018, "$last"
    $P5019 = $P5017."push"($P5018)
  unless957_end1780:
    find_lex $P5020, "$resultchild"
    set $N5003, $P5020
    find_lex $I5006, "$i"
    set $N5004, $I5006
    iseq $I5005, $N5003, $N5004
    unless $I5005 goto if959_end1784 
.annotate 'line', 3209
.annotate 'line', 3210
    find_lex $P5021, "$ops"
    find_lex $P5022, "$last"
    $P5023 = $P5022."result"()
    $P5024 = $P5021."result"($P5023)
  if959_end1784:
    find_lex $I5007, "$i"
    set $N5006, $I5007
    set $N5007, 1
    add $N5005, $N5006, $N5007
    set $I5008, $N5005
    store_lex "$i", $I5008
    .return ($I5008) 
.end
.HLL "nqp"
.namespace []
.sub "apply_context" :subid("cuid_101_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3217
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$type", _lex_param_2 
    nqp_get_sc_object $P5001, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 66
    type_check $I5001, _lex_param_1, $P5001
    unless $I5001 goto if960_else1790 
.annotate 'line', 3219
    $P5002 = "&want"(_lex_param_1, _lex_param_2)
    set $P5003, $P5002
    goto if960_end1791
  if960_else1790:
    set $P5003, _lex_param_1
  if960_end1791:
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_102_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3234
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_21 :opt_flag 
    .const 'Sub' $P5026 = 'cuid_340_1366375329.52446' 
    capture_lex $P5026 
    .const 'Sub' $P5026 = 'cuid_341_1366375329.52446' 
    capture_lex $P5026 
    .lex "$hll", $P101 
    .lex "$result", $P102 
    .lex "$err", $P103 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$want", _lex_param_2 
    .local pmc fb_tmp_275 
    if haz_param_21, default1805
    nqp_get_sc_object $P5025, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set _lex_param_2, $P5025
  default1805:
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
    box $P5004, ""
    set $P101, $P5004
    new $P5013, 'ExceptionHandler'
    set_label $P5013, catch_handler_9651798
    $P5013.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5013
    find_dynamic_lex $P5005, "$*HLL"
    unless_null $P5005, fallback1792
    nqp_get_sc_object $P5007, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5006, $P5007
    set fb_tmp_275, $P5006
    repr_defined $I5001, fb_tmp_275
    unless $I5001 goto if961_else1793 
    set $P5008, fb_tmp_275["$HLL"]
    set $P5010, $P5008
    goto if961_end1794
  if961_else1793:
    null $P5009
    set $P5010, $P5009
  if961_end1794:
    unless_null $P5010, vivi_9621795
    nqp_get_sc_object $P5011, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5010, $P5011
  vivi_9621795:
    unless_null $P5010, vivi_9631796
    die "Contextual $*HLL not found"
    box $P5012, "Contextual $*HLL not found"
    set $P5010, $P5012
  vivi_9631796:
    set $P5005, $P5010
  fallback1792:
    set $P101, $P5005
    set $P5014, $P101
    pop_eh 
    goto skip_handler_9641797
  catch_handler_9651798:
    .get_results ($P5013) 
    set $I10001, 1
    set $P5013["handled"], $I10001
    nqp_get_sc_object $P10001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    finalize $P5013
    pop_upto_eh $P5013
    pop_eh 
    set $P5014, $P10001
    goto skip_handler_9641797
  skip_handler_9641797:
    new $P5021, 'ExceptionHandler'
    set_label $P5021, catch_handler_9691802
    $P5021.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5021
.annotate 'line', 3239
    new $P5019, 'ExceptionHandler'
    set_label $P5019, catch_handler_9671800
    $P5019.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5019
.annotate 'line', 3240
    nqp_get_sc_object $P5015, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    nqp_decontainerize $P5016, _lex_param_0
    $P5017 = $P5015."compile_op"($P5016, $P101, _lex_param_1)
    set $P102, $P5017
    nqp_get_sc_object $P5018, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5020, $P5018
    pop_eh 
    goto skip_handler_9661799
  catch_handler_9671800:
    .get_results ($P5019) 
    .const 'Sub' $P10001 = 'cuid_340_1366375329.52446' 
    capture_lex $P10001
    $P10001($P5019)
    set $I10001, 1
    set $P5019["handled"], $I10001
    nqp_get_sc_object $P10002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    finalize $P5019
    pop_upto_eh $P5019
    pop_eh 
    set $P5020, $P10002
    goto skip_handler_9661799
  skip_handler_9661799:
    set $P5022, $P5020
    pop_eh 
    goto skip_handler_9681801
  catch_handler_9691802:
    .get_results ($P5021) 
    set $I10001, 1
    set $P5021["handled"], $I10001
    nqp_get_sc_object $P10001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    finalize $P5021
    pop_upto_eh $P5021
    pop_eh 
    set $P5022, $P10001
    goto skip_handler_9681801
  skip_handler_9681801:
    unless $P103 goto if970_end1804 
    .const 'Sub' $P5023 = 'cuid_341_1366375329.52446' 
    capture_lex $P5023
    $P5024 = $P5023()
  if970_end1804:
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_340_1366375329.52446") :anon :lex :outer("cuid_102_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3241
    .param pmc _lex_param_0 
    .lex "$!", $P101 
    .lex "$_", _lex_param_0 
    set $P101, _lex_param_0
    store_lex "$err", $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_341_1366375329.52446") :anon :lex :outer("cuid_102_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3243
    .lex "$source", $P101 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 3244
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    find_lex $P5004, "$node"
    $P5005 = $P5002."source_for_node"($P5004)
    set $P101, $P5005
.annotate 'line', 3245
    find_lex $P5006, "$node"
    $P5007 = $P5006."op"()
    set $S5003, $P5007
    concat $S5002, "Error while compiling op ", $S5003
    set $S5006, $P101
    concat $S5005, $S5006, ": "
    find_lex $P5008, "$err"
    set $S5007, $P5008
    concat $S5004, $S5005, $S5007
    concat $S5001, $S5002, $S5004
    box $P5009, $S5001
    die $P5009
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_103_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3250
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_22 :opt_flag 
    .const 'Sub' $P5038 = 'cuid_343_1366375329.52446' 
    capture_lex $P5038 
    .const 'Sub' $P5038 = 'cuid_344_1366375329.52446' 
    capture_lex $P5038 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$want", _lex_param_2 
    .local pmc fb_tmp_277 
    if haz_param_22, default1834
    nqp_get_sc_object $P5037, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set _lex_param_2, $P5037
  default1834:
    root_new $P101, ['parrot';'Continuation']
    set_label $P101, lexotic_1806
    .lex "RETURN", $P101
.annotate 'line', 3251
    $P5001 = _lex_param_1."supports"("parrot")
    unless $P5001 goto if971_else1808 
.annotate 'line', 3252
    nqp_decontainerize $P5003, _lex_param_0
    $P5004 = _lex_param_1."alternative"("parrot")
    $P5005 = $P5003."as_post"($P5004)
    find_lex $P5002, "RETURN"
    $P5006 = $P5002($P5005)
    set $P5036, $P5006
    goto if971_end1809
  if971_else1808:
.annotate 'line', 3254
    $P5007 = _lex_param_1."supports"("pirop")
    unless $P5007 goto if972_else1810 
.annotate 'line', 3255
    nqp_get_sc_object $P5008, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    nqp_decontainerize $P5009, _lex_param_0
    $P5010 = _lex_param_1."alternative"("pirop")
    $P5011 = _lex_param_1."list"()
    $P5012 = $P5008."compile_pirop"($P5009, $P5010, $P5011)
    set $P5035, $P5012
    goto if972_end1811
  if972_else1810:
.annotate 'line', 3257
    $P5013 = _lex_param_1."supports"("pir")
    unless $P5013 goto if973_else1812 
    .const 'Sub' $P5014 = 'cuid_343_1366375329.52446' 
    capture_lex $P5014
    $P5015 = $P5014()
    set $P5034, $P5015
    goto if973_end1813
  if973_else1812:
.annotate 'line', 3271
    $P5016 = _lex_param_1."supports"("pirconst")
    unless $P5016 goto if979_else1823 
    .const 'Sub' $P5017 = 'cuid_344_1366375329.52446' 
    capture_lex $P5017
    $P5018 = $P5017()
    set $P5033, $P5018
    goto if979_end1824
  if979_else1823:
.annotate 'line', 3278
    $P5019 = _lex_param_1."supports"("loadlibs")
    unless $P5019 goto if981_else1827 
.annotate 'line', 3279
    find_dynamic_lex $P5020, "$*BLOCK"
    unless_null $P5020, fallback1829
    nqp_get_sc_object $P5022, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5021, $P5022
    set fb_tmp_277, $P5021
    repr_defined $I5001, fb_tmp_277
    unless $I5001 goto if982_else1830 
    set $P5023, fb_tmp_277["$BLOCK"]
    set $P5025, $P5023
    goto if982_end1831
  if982_else1830:
    null $P5024
    set $P5025, $P5024
  if982_end1831:
    unless_null $P5025, vivi_9831832
    nqp_get_sc_object $P5026, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5025, $P5026
  vivi_9831832:
    unless_null $P5025, vivi_9841833
    die "Contextual $*BLOCK not found"
    box $P5027, "Contextual $*BLOCK not found"
    set $P5025, $P5027
  vivi_9841833:
    set $P5020, $P5025
  fallback1829:
    $P5028 = _lex_param_1."alternative"("loadlibs")
    $P5020."add_loadlibs"($P5028)
.annotate 'line', 3280
    nqp_get_sc_object $P5029, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5030 = $P5029."new"()
    set $P5032, $P5030
    goto if981_end1828
  if981_else1827:
.annotate 'line', 3282
    box $P5031, "To compile on the Parrot backend, QAST::VM must have an alternative 'parrot', 'pirop', 'pir', 'pircosnt' or 'loadlibs'"
    die $P5031
    set $P5032, $P5031
  if981_end1828:
    set $P5033, $P5032
  if979_end1824:
    set $P5034, $P5033
  if973_end1813:
    set $P5035, $P5034
  if972_end1811:
    set $P5036, $P5035
  if971_end1809:
    goto lexotic_1807
  lexotic_1806:
    .get_results ($P5036)
  lexotic_1807:
    .return ($P5036) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_343_1366375329.52446") :anon :lex :outer("cuid_103_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3257
    .const 'Sub' $P5017 = 'cuid_342_1366375329.52446' 
    capture_lex $P5017 
    .lex "$ops", $P101 
    .lex "$pir", $P102 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
.annotate 'line', 3258
    nqp_get_sc_object $P5003, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5004 = $P5003."new"()
    set $P101, $P5004
.annotate 'line', 3259
    find_lex $P5005, "$node"
    $P5006 = $P5005."node"()
    unless $P5006 goto if974_end1815 
    find_lex $P5007, "$node"
    $P5008 = $P5007."node"()
    $P5009 = $P101."node"($P5008)
  if974_end1815:
.annotate 'line', 3260
    find_lex $P5010, "$node"
    $P5011 = $P5010."alternative"("pir")
    set $P102, $P5011
    set $S5001, $P102
    index $I5002, $S5001, "%r", 0
    set $N5001, $I5002
    set $N5002, 0
    isge $I5001, $N5001, $N5002
    unless $I5001 goto if975_else1816 
    .const 'Sub' $P5012 = 'cuid_342_1366375329.52446' 
    capture_lex $P5012
    $P5013 = $P5012()
    goto if975_end1817
  if975_else1816:
.annotate 'line', 3266
.annotate 'line', 3267
    $P5014 = $P101."push_pirop"("inline", $P102)
  if975_end1817:
    find_lex $P5015, "RETURN"
    $P5016 = $P5015($P101)
    .return ($P5016) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_342_1366375329.52446") :anon :lex :outer("cuid_343_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3261
    .lex "$reg", $P101 
    .local pmc fb_tmp_276 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 3262
    find_dynamic_lex $P5002, "$*REGALLOC"
    unless_null $P5002, fallback1818
    nqp_get_sc_object $P5004, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5003, $P5004
    set fb_tmp_276, $P5003
    repr_defined $I5001, fb_tmp_276
    unless $I5001 goto if976_else1819 
    set $P5005, fb_tmp_276["$REGALLOC"]
    set $P5007, $P5005
    goto if976_end1820
  if976_else1819:
    null $P5006
    set $P5007, $P5006
  if976_end1820:
    unless_null $P5007, vivi_9771821
    nqp_get_sc_object $P5008, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5007, $P5008
  vivi_9771821:
    unless_null $P5007, vivi_9781822
    die "Contextual $*REGALLOC not found"
    box $P5009, "Contextual $*REGALLOC not found"
    set $P5007, $P5009
  vivi_9781822:
    set $P5002, $P5007
  fallback1818:
    $P5010 = $P5002."fresh_p"()
    set $P101, $P5010
.annotate 'line', 3263
    find_lex $P5011, "$ops"
    find_lex $P5012, "$pir"
    $P5011."push_pirop"("inline", $P5012, $P101 :named("result"))
.annotate 'line', 3264
    find_lex $P5013, "$ops"
    $P5014 = $P5013."result"($P101)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_344_1366375329.52446") :anon :lex :outer("cuid_103_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3271
    .lex "$ops", $P101 
    .lex "$name", $P102 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
.annotate 'line', 3272
    nqp_get_sc_object $P5003, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5004 = $P5003."new"()
    set $P101, $P5004
.annotate 'line', 3273
    find_lex $P5005, "$node"
    $P5006 = $P5005."node"()
    unless $P5006 goto if980_end1826 
    find_lex $P5007, "$node"
    $P5008 = $P5007."node"()
    $P5009 = $P101."node"($P5008)
  if980_end1826:
.annotate 'line', 3274
    find_lex $P5010, "$node"
    $P5011 = $P5010."alternative"("pirconst")
    set $P102, $P5011
.annotate 'line', 3275
    set $S5002, $P102
    concat $S5001, ".", $S5002
    $P101."result"($S5001)
    find_lex $P5012, "RETURN"
    $P5013 = $P5012($P101)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_104_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3287
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_23 :opt_flag 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$want", _lex_param_2 
    if haz_param_23, default1835
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set _lex_param_2, $P5003
  default1835:
.annotate 'line', 3288
    nqp_decontainerize $P5001, _lex_param_0
    $P5002 = $P5001."compile_var"(_lex_param_1)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_105_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3291
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_24 :opt_flag 
    .const 'Sub' $P5020 = 'cuid_346_1366375329.52446' 
    capture_lex $P5020 
    .const 'Sub' $P5020 = 'cuid_347_1366375329.52446' 
    capture_lex $P5020 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$want", _lex_param_2 
    .local pmc fb_tmp_278 
    if haz_param_24, default1855
    nqp_get_sc_object $P5019, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set _lex_param_2, $P5019
  default1855:
    find_dynamic_lex $P5001, "$*BINDVAL"
    unless_null $P5001, fallback1838
    nqp_get_sc_object $P5003, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5002, $P5003
    set fb_tmp_278, $P5002
    repr_defined $I5001, fb_tmp_278
    unless $I5001 goto if986_else1839 
    set $P5004, fb_tmp_278["$BINDVAL"]
    set $P5006, $P5004
    goto if986_end1840
  if986_else1839:
    null $P5005
    set $P5006, $P5005
  if986_end1840:
    unless_null $P5006, vivi_9871841
    nqp_get_sc_object $P5007, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5006, $P5007
  vivi_9871841:
    unless_null $P5006, vivi_9881842
    die "Contextual $*BINDVAL not found"
    box $P5008, "Contextual $*BINDVAL not found"
    set $P5006, $P5008
  vivi_9881842:
    set $P5001, $P5006
  fallback1838:
    unless $P5001 goto if985_else1836 
.annotate 'line', 3292
.annotate 'line', 3293
    nqp_decontainerize $P5009, _lex_param_0
    $P5010 = $P5009."compile_var"(_lex_param_1)
    set $P5018, $P5010
    goto if985_end1837
  if985_else1836:
.annotate 'line', 3295
    $P5011 = _lex_param_1."scope"()
    set $S5001, $P5011
    isne $I5002, $S5001, "positional"
    set $I5004, $I5002
    unless $I5002 goto if990_end1846 
    $P5012 = _lex_param_1."scope"()
    set $S5002, $P5012
    isne $I5003, $S5002, "associative"
    set $I5004, $I5003
  if990_end1846:
    unless $I5004 goto if989_else1843 
    .const 'Sub' $P5013 = 'cuid_346_1366375329.52446' 
    capture_lex $P5013
    $P5014 = $P5013()
    set $P5017, $P5014
    goto if989_end1844
  if989_else1843:
    .const 'Sub' $P5015 = 'cuid_347_1366375329.52446' 
    capture_lex $P5015
    $P5016 = $P5015()
    set $P5017, $P5016
  if989_end1844:
    set $P5018, $P5017
  if985_end1837:
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_346_1366375329.52446") :anon :lex :outer("cuid_105_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3295
    .const 'Sub' $P5017 = 'cuid_345_1366375329.52446' 
    capture_lex $P5017 
    .lex "$post", $P101 
    .lex "$lbl", $P102 
    .lex "$result", $P103 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
.annotate 'line', 3296
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    find_lex $P5006, "$node"
    $P5007 = $P5004."compile_var"($P5006)
    set $P101, $P5007
.annotate 'line', 3297
    nqp_get_sc_object $P5008, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 38
    $P5009 = $P5008."new"("fallback" :named("name"))
    set $P102, $P5009
.annotate 'line', 3298
    nqp_get_sc_object $P5010, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5011 = $P5010."new"($P101 :named("result"))
    set $P103, $P5011
.annotate 'line', 3299
    $P103."push"($P101)
.annotate 'line', 3300
    find_lex $P5013, "self"
    nqp_decontainerize $P5012, $P5013
    $P5014 = $P5012."infer_type"($P101)
    set $S5002, $P5014
    downcase $S5001, $S5002
    iseq $I5001, $S5001, "p"
    unless $I5001 goto if991_end1848 
    .const 'Sub' $P5015 = 'cuid_345_1366375329.52446' 
    capture_lex $P5015
    $P5016 = $P5015()
  if991_end1848:
    .return ($P103) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_345_1366375329.52446") :anon :lex :outer("cuid_346_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3300
    .lex "$fbpost", $P101 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 3301
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    find_lex $P5004, "$node"
    $P5005 = $P5004."fallback"()
    $P5006 = $P5002."as_post"($P5005, "P" :named("want"))
    set $P101, $P5006
.annotate 'line', 3302
    find_lex $P5007, "$result"
    find_lex $P5008, "$post"
    find_lex $P5009, "$lbl"
    $P5007."push_pirop"("unless_null", $P5008, $P5009)
.annotate 'line', 3303
    find_lex $P5010, "$result"
    $P5010."push"($P101)
.annotate 'line', 3304
    find_lex $P5011, "$result"
    find_lex $P5012, "$post"
    $P5011."push_pirop"("set", $P5012, $P101)
.annotate 'line', 3305
    find_lex $P5013, "$result"
    find_lex $P5014, "$lbl"
    $P5015 = $P5013."push"($P5014)
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_347_1366375329.52446") :anon :lex :outer("cuid_105_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3309
    .lex "$fb_temp", $P101 
    .local pmc fb_tmp_279 
    .local pmc fb_tmp_280 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 3310
    find_lex $P5002, "$node"
    $P5003 = $P5002."unique"("fb_tmp")
    set $P101, $P5003
.annotate 'line', 3311
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    nqp_get_sc_object $P5006, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
.annotate 'line', 3313
    nqp_get_sc_object $P5007, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
.annotate 'line', 3315
    nqp_get_sc_object $P5008, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
.annotate 'line', 3317
    nqp_get_sc_object $P5009, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
.annotate 'line', 3319
    nqp_get_sc_object $P5010, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 71
    $P5011 = $P5010."new"($P101 :named("name"), "local" :named("scope"), "var" :named("decl"))
    find_lex $P5012, "$node"
    set fb_tmp_279, $P5012
    repr_defined $I5001, fb_tmp_279
    unless $I5001 goto if992_else1849 
    set $P5013, fb_tmp_279[0]
    set $P5015, $P5013
    goto if992_end1850
  if992_else1849:
    null $P5014
    set $P5015, $P5014
  if992_end1850:
    unless_null $P5015, vivi_9931851
    nqp_get_sc_object $P5016, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5015, $P5016
  vivi_9931851:
    $P5017 = $P5009."new"($P5011, $P5015, "bind" :named("op"))
    $P5018 = $P5008."new"($P5017, "isconcrete" :named("op"))
.annotate 'line', 3323
    nqp_get_sc_object $P5019, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 71
.annotate 'line', 3324
    find_lex $P5020, "$node"
    $P5021 = $P5020."scope"()
.annotate 'line', 3325
    nqp_get_sc_object $P5022, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 71
    $P5023 = $P5022."new"($P101 :named("name"), "local" :named("scope"))
    find_lex $P5024, "$node"
    set fb_tmp_280, $P5024
    repr_defined $I5002, fb_tmp_280
    unless $I5002 goto if994_else1852 
    set $P5025, fb_tmp_280[1]
    set $P5027, $P5025
    goto if994_end1853
  if994_else1852:
    null $P5026
    set $P5027, $P5026
  if994_end1853:
    unless_null $P5027, vivi_9951854
    nqp_get_sc_object $P5028, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5027, $P5028
  vivi_9951854:
    $P5029 = $P5019."new"($P5023, $P5027, $P5021 :named("scope"))
.annotate 'line', 3328
    nqp_get_sc_object $P5030, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
    $P5031 = $P5030."new"("null" :named("op"))
    $P5032 = $P5007."new"($P5018, $P5029, $P5031, "if" :named("op"))
.annotate 'line', 3330
    find_lex $P5033, "$node"
    $P5034 = $P5033."fallback"()
    $P5035 = $P5006."new"($P5032, $P5034, "ifnull" :named("op"))
    $P5036 = $P5004."as_post"($P5035)
    .return ($P5036) 
.end
.HLL "nqp"
.namespace []
.sub "compile_var" :subid("cuid_106_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3335
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5122 = 'cuid_349_1366375329.52446' 
    capture_lex $P5122 
    .const 'Sub' $P5122 = 'cuid_351_1366375329.52446' 
    capture_lex $P5122 
    .const 'Sub' $P5122 = 'cuid_354_1366375329.52446' 
    capture_lex $P5122 
    .const 'Sub' $P5122 = 'cuid_363_1366375329.52446' 
    capture_lex $P5122 
    .lex "$scope", $P101 
    .lex "$decl", $P102 
    .lex "$name", $P103 
    .lex "$ops", $P104 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_281 
    .local pmc fb_tmp_282 
    .local pmc fb_tmp_283 
    .local pmc fb_tmp_286 
    .local pmc fb_tmp_308 
    .local pmc fb_tmp_309 
    .local pmc fb_tmp_310 
    .local pmc fb_tmp_311 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P104, $P5004
.annotate 'line', 3336
    $P5005 = _lex_param_1."scope"()
    set $P101, $P5005
.annotate 'line', 3337
    $P5006 = _lex_param_1."decl"()
    set $P102, $P5006
    unless $P102 goto if996_end1857 
.annotate 'line', 3341
    set $S5001, $P102
    iseq $I5001, $S5001, "param"
    unless $I5001 goto if997_else1858 
.annotate 'line', 3344
    set $S5002, $P101
    iseq $I5002, $S5002, "local"
    set $I5004, $I5002
    if $I5002 goto unless999_end1863 
    set $S5003, $P101
    iseq $I5003, $S5003, "lexical"
    set $I5004, $I5003
  unless999_end1863:
    unless $I5004 goto if998_else1860 
.annotate 'line', 3345
.annotate 'line', 3346
    find_dynamic_lex $P5007, "$*BLOCK"
    unless_null $P5007, fallback1864
    nqp_get_sc_object $P5009, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5008, $P5009
    set fb_tmp_281, $P5008
    repr_defined $I5005, fb_tmp_281
    unless $I5005 goto if1000_else1865 
    set $P5010, fb_tmp_281["$BLOCK"]
    set $P5012, $P5010
    goto if1000_end1866
  if1000_else1865:
    null $P5011
    set $P5012, $P5011
  if1000_end1866:
    unless_null $P5012, vivi_10011867
    nqp_get_sc_object $P5013, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5012, $P5013
  vivi_10011867:
    unless_null $P5012, vivi_10021868
    die "Contextual $*BLOCK not found"
    box $P5014, "Contextual $*BLOCK not found"
    set $P5012, $P5014
  vivi_10021868:
    set $P5007, $P5012
  fallback1864:
    $P5015 = $P5007."add_param"(_lex_param_1)
    set $P5017, $P5015
    goto if998_end1861
  if998_else1860:
.annotate 'line', 3348
    set $S5006, $P101
    concat $S5005, "Parameter cannot have scope '", $S5006
    concat $S5004, $S5005, "'; use 'local' or 'lexical'"
    box $P5016, $S5004
    die $P5016
    set $P5017, $P5016
  if998_end1861:
    set $P5041, $P5017
    goto if997_end1859
  if997_else1858:
    set $S5007, $P102
    iseq $I5006, $S5007, "var"
    unless $I5006 goto if1003_else1869 
.annotate 'line', 3352
    set $S5008, $P101
    iseq $I5007, $S5008, "local"
    unless $I5007 goto if1004_else1871 
.annotate 'line', 3353
.annotate 'line', 3354
    find_dynamic_lex $P5018, "$*BLOCK"
    unless_null $P5018, fallback1873
    nqp_get_sc_object $P5020, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5019, $P5020
    set fb_tmp_282, $P5019
    repr_defined $I5008, fb_tmp_282
    unless $I5008 goto if1005_else1874 
    set $P5021, fb_tmp_282["$BLOCK"]
    set $P5023, $P5021
    goto if1005_end1875
  if1005_else1874:
    null $P5022
    set $P5023, $P5022
  if1005_end1875:
    unless_null $P5023, vivi_10061876
    nqp_get_sc_object $P5024, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5023, $P5024
  vivi_10061876:
    unless_null $P5023, vivi_10071877
    die "Contextual $*BLOCK not found"
    box $P5025, "Contextual $*BLOCK not found"
    set $P5023, $P5025
  vivi_10071877:
    set $P5018, $P5023
  fallback1873:
    $P5026 = $P5018."add_local"(_lex_param_1)
    set $P5038, $P5026
    goto if1004_end1872
  if1004_else1871:
    set $S5009, $P101
    iseq $I5009, $S5009, "lexical"
    unless $I5009 goto if1008_else1878 
.annotate 'line', 3356
.annotate 'line', 3357
    find_dynamic_lex $P5027, "$*BLOCK"
    unless_null $P5027, fallback1880
    nqp_get_sc_object $P5029, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5028, $P5029
    set fb_tmp_283, $P5028
    repr_defined $I5010, fb_tmp_283
    unless $I5010 goto if1009_else1881 
    set $P5030, fb_tmp_283["$BLOCK"]
    set $P5032, $P5030
    goto if1009_end1882
  if1009_else1881:
    null $P5031
    set $P5032, $P5031
  if1009_end1882:
    unless_null $P5032, vivi_10101883
    nqp_get_sc_object $P5033, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5032, $P5033
  vivi_10101883:
    unless_null $P5032, vivi_10111884
    die "Contextual $*BLOCK not found"
    box $P5034, "Contextual $*BLOCK not found"
    set $P5032, $P5034
  vivi_10111884:
    set $P5027, $P5032
  fallback1880:
    $P5035 = $P5027."add_lexical"(_lex_param_1)
    set $P5037, $P5035
    goto if1008_end1879
  if1008_else1878:
.annotate 'line', 3359
    set $S5012, $P101
    concat $S5011, "Cannot declare variable with scope '", $S5012
    concat $S5010, $S5011, "'; use 'local' or 'lexical'"
    box $P5036, $S5010
    die $P5036
    set $P5037, $P5036
  if1008_end1879:
    set $P5038, $P5037
  if1004_end1872:
    set $P5040, $P5038
    goto if1003_end1870
  if1003_else1869:
.annotate 'line', 3363
    set $S5015, $P102
    concat $S5014, "Don't understand declaration type '", $S5015
    concat $S5013, $S5014, "'"
    box $P5039, $S5013
    die $P5039
    set $P5040, $P5039
  if1003_end1870:
    set $P5041, $P5040
  if997_end1859:
  if996_end1857:
.annotate 'line', 3370
    $P5042 = _lex_param_1."name"()
    set $P103, $P5042
    set $S5016, $P101
    iseq $I5011, $S5016, ""
    unless $I5011 goto if1012_end1886 
    .const 'Sub' $P5043 = 'cuid_349_1366375329.52446' 
    capture_lex $P5043
    $P5044 = $P5043()
  if1012_end1886:
.annotate 'line', 3389
    nqp_get_sc_object $P5045, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5046 = $P5045."new"()
    set $P104, $P5046
.annotate 'line', 3390
    $P5047 = _lex_param_1."node"()
    unless $P5047 goto if1021_end1905 
    $P5048 = _lex_param_1."node"()
    $P5049 = $P104."node"($P5048)
  if1021_end1905:
    set $S5017, $P101
    iseq $I5012, $S5017, "local"
    unless $I5012 goto if1022_else1906 
.annotate 'line', 3391
.annotate 'line', 3392
    find_dynamic_lex $P5050, "$*BLOCK"
    unless_null $P5050, fallback1910
    nqp_get_sc_object $P5052, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5051, $P5052
    set fb_tmp_286, $P5051
    repr_defined $I5013, fb_tmp_286
    unless $I5013 goto if1024_else1911 
    set $P5053, fb_tmp_286["$BLOCK"]
    set $P5055, $P5053
    goto if1024_end1912
  if1024_else1911:
    null $P5054
    set $P5055, $P5054
  if1024_end1912:
    unless_null $P5055, vivi_10251913
    nqp_get_sc_object $P5056, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5055, $P5056
  vivi_10251913:
    unless_null $P5055, vivi_10261914
    die "Contextual $*BLOCK not found"
    box $P5057, "Contextual $*BLOCK not found"
    set $P5055, $P5057
  vivi_10261914:
    set $P5050, $P5055
  fallback1910:
    $P5058 = $P5050."local_type"($P103)
    unless $P5058 goto if1023_else1908 
    .const 'Sub' $P5059 = 'cuid_351_1366375329.52446' 
    capture_lex $P5059
    $P5060 = $P5059($P5058)
    set $P5062, $P5060
    goto if1023_end1909
  if1023_else1908:
.annotate 'line', 3400
    set $S5020, $P103
    concat $S5019, "Cannot reference undeclared local '", $S5020
    concat $S5018, $S5019, "'"
    box $P5061, $S5018
    die $P5061
    set $P5062, $P5061
  if1023_end1909:
    goto if1022_end1907
  if1022_else1906:
    set $S5021, $P101
    iseq $I5014, $S5021, "lexical"
    set $I5016, $I5014
    if $I5014 goto unless1035_end1930 
    set $S5022, $P101
    iseq $I5015, $S5022, "contextual"
    set $I5016, $I5015
  unless1035_end1930:
    unless $I5016 goto if1034_else1927 
    .const 'Sub' $P5063 = 'cuid_354_1366375329.52446' 
    capture_lex $P5063
    $P5064 = $P5063()
    set $P5121, $P5064
    goto if1034_end1928
  if1034_else1927:
    set $S5023, $P101
    iseq $I5017, $S5023, "attribute"
    unless $I5017 goto if1086_else2020 
    .const 'Sub' $P5065 = 'cuid_363_1366375329.52446' 
    capture_lex $P5065
    $P5066 = $P5065()
    set $P5120, $P5066
    goto if1086_end2021
  if1086_else2020:
    set $S5024, $P101
    iseq $I5018, $S5024, "positional"
    unless $I5018 goto if1102_else2047 
.annotate 'line', 3494
.annotate 'line', 3495
    nqp_decontainerize $P5067, _lex_param_0
    find_dynamic_lex $P5068, "$*BINDVAL"
    unless_null $P5068, fallback2051
    nqp_get_sc_object $P5070, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5069, $P5070
    set fb_tmp_308, $P5069
    repr_defined $I5019, fb_tmp_308
    unless $I5019 goto if1104_else2052 
    set $P5071, fb_tmp_308["$BINDVAL"]
    set $P5073, $P5071
    goto if1104_end2053
  if1104_else2052:
    null $P5072
    set $P5073, $P5072
  if1104_end2053:
    unless_null $P5073, vivi_11052054
    nqp_get_sc_object $P5074, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5073, $P5074
  vivi_11052054:
    unless_null $P5073, vivi_11062055
    die "Contextual $*BINDVAL not found"
    box $P5075, "Contextual $*BINDVAL not found"
    set $P5073, $P5075
  vivi_11062055:
    set $P5068, $P5073
  fallback2051:
    unless $P5068 goto if1103_else2049 
.annotate 'line', 3496
    nqp_get_sc_object $P5076, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
    $P5077 = _lex_param_1."list"()
    find_dynamic_lex $P5078, "$*BINDVAL"
    unless_null $P5078, fallback2056
    nqp_get_sc_object $P5080, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5079, $P5080
    set fb_tmp_309, $P5079
    repr_defined $I5020, fb_tmp_309
    unless $I5020 goto if1107_else2057 
    set $P5081, fb_tmp_309["$BINDVAL"]
    set $P5083, $P5081
    goto if1107_end2058
  if1107_else2057:
    null $P5082
    set $P5083, $P5082
  if1107_end2058:
    unless_null $P5083, vivi_11082059
    nqp_get_sc_object $P5084, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5083, $P5084
  vivi_11082059:
    unless_null $P5083, vivi_11092060
    die "Contextual $*BINDVAL not found"
    box $P5085, "Contextual $*BINDVAL not found"
    set $P5083, $P5085
  vivi_11092060:
    set $P5078, $P5083
  fallback2056:
    $P5086 = $P5076."new"($P5077 :flat, $P5078, "positional_bind" :named("op"))
    set $P5090, $P5086
    goto if1103_end2050
  if1103_else2049:
.annotate 'line', 3497
    nqp_get_sc_object $P5087, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
    $P5088 = _lex_param_1."list"()
    $P5089 = $P5087."new"($P5088 :flat, "positional_get" :named("op"))
    set $P5090, $P5089
  if1103_end2050:
    $P5091 = $P5067."as_post_clear_bindval"($P5090)
    set $P104, $P5091
    set $P5119, $P104
    goto if1102_end2048
  if1102_else2047:
    set $S5025, $P101
    iseq $I5021, $S5025, "associative"
    unless $I5021 goto if1110_else2061 
.annotate 'line', 3499
.annotate 'line', 3500
    nqp_decontainerize $P5092, _lex_param_0
    find_dynamic_lex $P5093, "$*BINDVAL"
    unless_null $P5093, fallback2065
    nqp_get_sc_object $P5095, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5094, $P5095
    set fb_tmp_310, $P5094
    repr_defined $I5022, fb_tmp_310
    unless $I5022 goto if1112_else2066 
    set $P5096, fb_tmp_310["$BINDVAL"]
    set $P5098, $P5096
    goto if1112_end2067
  if1112_else2066:
    null $P5097
    set $P5098, $P5097
  if1112_end2067:
    unless_null $P5098, vivi_11132068
    nqp_get_sc_object $P5099, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5098, $P5099
  vivi_11132068:
    unless_null $P5098, vivi_11142069
    die "Contextual $*BINDVAL not found"
    box $P5100, "Contextual $*BINDVAL not found"
    set $P5098, $P5100
  vivi_11142069:
    set $P5093, $P5098
  fallback2065:
    unless $P5093 goto if1111_else2063 
.annotate 'line', 3501
    nqp_get_sc_object $P5101, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
    $P5102 = _lex_param_1."list"()
    find_dynamic_lex $P5103, "$*BINDVAL"
    unless_null $P5103, fallback2070
    nqp_get_sc_object $P5105, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5104, $P5105
    set fb_tmp_311, $P5104
    repr_defined $I5023, fb_tmp_311
    unless $I5023 goto if1115_else2071 
    set $P5106, fb_tmp_311["$BINDVAL"]
    set $P5108, $P5106
    goto if1115_end2072
  if1115_else2071:
    null $P5107
    set $P5108, $P5107
  if1115_end2072:
    unless_null $P5108, vivi_11162073
    nqp_get_sc_object $P5109, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5108, $P5109
  vivi_11162073:
    unless_null $P5108, vivi_11172074
    die "Contextual $*BINDVAL not found"
    box $P5110, "Contextual $*BINDVAL not found"
    set $P5108, $P5110
  vivi_11172074:
    set $P5103, $P5108
  fallback2070:
    $P5111 = $P5101."new"($P5102 :flat, $P5103, "associative_bind" :named("op"))
    set $P5115, $P5111
    goto if1111_end2064
  if1111_else2063:
.annotate 'line', 3502
    nqp_get_sc_object $P5112, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176", 82
    $P5113 = _lex_param_1."list"()
    $P5114 = $P5112."new"($P5113 :flat, "associative_get" :named("op"))
    set $P5115, $P5114
  if1111_end2064:
    $P5116 = $P5092."as_post_clear_bindval"($P5115)
    set $P104, $P5116
    set $P5118, $P104
    goto if1110_end2062
  if1110_else2061:
.annotate 'line', 3504
    set $S5028, $P101
    concat $S5027, "QAST::Var with scope '", $S5028
    concat $S5026, $S5027, "' NYI"
    box $P5117, $S5026
    die $P5117
    set $P5118, $P5117
  if1110_end2062:
    set $P5119, $P5118
  if1102_end2048:
    set $P5120, $P5119
  if1086_end2021:
    set $P5121, $P5120
  if1034_end1928:
  if1022_end1907:
    .return ($P104) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_349_1366375329.52446") :anon :lex :outer("cuid_106_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3371
    .const 'Sub' $P5020 = 'cuid_348_1366375329.52446' 
    capture_lex $P5020 
    .lex "$cur_block", $P101 
    .local pmc fb_tmp_284 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    find_dynamic_lex $P5002, "$*BLOCK"
    unless_null $P5002, fallback1887
    nqp_get_sc_object $P5004, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5003, $P5004
    set fb_tmp_284, $P5003
    repr_defined $I5001, fb_tmp_284
    unless $I5001 goto if1013_else1888 
    set $P5005, fb_tmp_284["$BLOCK"]
    set $P5007, $P5005
    goto if1013_end1889
  if1013_else1888:
    null $P5006
    set $P5007, $P5006
  if1013_end1889:
    unless_null $P5007, vivi_10141890
    nqp_get_sc_object $P5008, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5007, $P5008
  vivi_10141890:
    unless_null $P5007, vivi_10151891
    die "Contextual $*BLOCK not found"
    box $P5009, "Contextual $*BLOCK not found"
    set $P5007, $P5009
  vivi_10151891:
    set $P5002, $P5007
  fallback1887:
    set $P101, $P5002
  while1016_test1892:
    nqp_get_sc_object $P5010, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    type_check $I5002, $P101, $P5010
    box $P5014, $I5002
    set $P5013, $P5014
    unless $I5002 goto while1016_done1896 
  while1016_redo1894:
    .const 'Sub' $P5011 = 'cuid_348_1366375329.52446' 
    capture_lex $P5011
    $P5012 = $P5011()
    set $P5013, $P5012
    goto while1016_test1892 
  while1016_done1896:
    find_lex $P5015, "$scope"
    set $S5001, $P5015
    iseq $I5003, $S5001, ""
    box $P5019, $I5003
    set $P5018, $P5019
    unless $I5003 goto if1020_end1903 
.annotate 'line', 3383
    find_lex $P5016, "$name"
    set $S5004, $P5016
    concat $S5003, "No scope specified or locatable in the symbol table for '", $S5004
    concat $S5002, $S5003, "'"
    box $P5017, $S5002
    die $P5017
    set $P5018, $P5017
  if1020_end1903:
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_348_1366375329.52446") :anon :lex :outer("cuid_349_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3373
    .lex "%sym", $P101 
    .local pmc fb_tmp_285 
    new $P5001, 'Hash'
    set $P101, $P5001
.annotate 'line', 3374
    find_lex $P5002, "$cur_block"
    $P5003 = $P5002."qast"()
    find_lex $P5004, "$name"
    $P5005 = $P5003."symbol"($P5004)
    set $P101, $P5005
    unless $P101 goto if1017_else1897 
.annotate 'line', 3375
    set fb_tmp_285, $P101
    repr_defined $I5001, fb_tmp_285
    unless $I5001 goto if1018_else1899 
    set $P5006, fb_tmp_285["scope"]
    set $P5008, $P5006
    goto if1018_end1900
  if1018_else1899:
    null $P5007
    set $P5008, $P5007
  if1018_end1900:
    unless_null $P5008, vivi_10191901
    nqp_get_sc_object $P5009, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5008, $P5009
  vivi_10191901:
    store_lex "$scope", $P5008
    nqp_get_sc_object $P5010, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    store_lex "$cur_block", $P5010
    set $P5013, $P5010
    goto if1017_end1898
  if1017_else1897:
.annotate 'line', 3379
.annotate 'line', 3380
    find_lex $P5011, "$cur_block"
    $P5012 = $P5011."outer"()
    store_lex "$cur_block", $P5012
    set $P5013, $P5012
  if1017_end1898:
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_351_1366375329.52446") :anon :lex :outer("cuid_106_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3392
    .param pmc _lex_param_0 
    .const 'Sub' $P5014 = 'cuid_350_1366375329.52446' 
    capture_lex $P5014 
    .lex "$type", _lex_param_0 
    .local pmc fb_tmp_287 
    find_dynamic_lex $P5001, "$*BINDVAL"
    unless_null $P5001, fallback1917
    nqp_get_sc_object $P5003, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5002, $P5003
    set fb_tmp_287, $P5002
    repr_defined $I5001, fb_tmp_287
    unless $I5001 goto if1028_else1918 
    set $P5004, fb_tmp_287["$BINDVAL"]
    set $P5006, $P5004
    goto if1028_end1919
  if1028_else1918:
    null $P5005
    set $P5006, $P5005
  if1028_end1919:
    unless_null $P5006, vivi_10291920
    nqp_get_sc_object $P5007, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5006, $P5007
  vivi_10291920:
    unless_null $P5006, vivi_10301921
    die "Contextual $*BINDVAL not found"
    box $P5008, "Contextual $*BINDVAL not found"
    set $P5006, $P5008
  vivi_10301921:
    set $P5001, $P5006
  fallback1917:
    unless $P5001 goto if1027_end1916 
    .const 'Sub' $P5009 = 'cuid_350_1366375329.52446' 
    capture_lex $P5009
    $P5010 = $P5009()
  if1027_end1916:
.annotate 'line', 3398
    find_lex $P5011, "$ops"
    find_lex $P5012, "$name"
    $P5013 = $P5011."result"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_350_1366375329.52446") :anon :lex :outer("cuid_351_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3393
    .lex "$valpost", $P101 
    .local pmc fb_tmp_288 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 3394
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    find_dynamic_lex $P5004, "$*BINDVAL"
    unless_null $P5004, fallback1922
    nqp_get_sc_object $P5006, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5005, $P5006
    set fb_tmp_288, $P5005
    repr_defined $I5001, fb_tmp_288
    unless $I5001 goto if1031_else1923 
    set $P5007, fb_tmp_288["$BINDVAL"]
    set $P5009, $P5007
    goto if1031_end1924
  if1031_else1923:
    null $P5008
    set $P5009, $P5008
  if1031_end1924:
    unless_null $P5009, vivi_10321925
    nqp_get_sc_object $P5010, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5009, $P5010
  vivi_10321925:
    unless_null $P5009, vivi_10331926
    die "Contextual $*BINDVAL not found"
    box $P5011, "Contextual $*BINDVAL not found"
    set $P5009, $P5011
  vivi_10331926:
    set $P5004, $P5009
  fallback1922:
    find_lex $P5012, "$type"
    set $S5002, $P5012
    downcase $S5001, $S5002
    $P5013 = $P5002."as_post_clear_bindval"($P5004, $S5001 :named("want"))
    set $P101, $P5013
.annotate 'line', 3395
    find_lex $P5014, "$ops"
    $P5014."push"($P101)
.annotate 'line', 3396
    find_lex $P5015, "$ops"
    find_lex $P5016, "$name"
    $P5017 = $P101."result"()
    $P5018 = $P5015."push_pirop"("set", $P5016, $P5017)
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_354_1366375329.52446") :anon :lex :outer("cuid_106_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3404
    .const 'Sub' $P5034 = 'cuid_353_1366375329.52446' 
    capture_lex $P5034 
    .const 'Sub' $P5034 = 'cuid_357_1366375329.52446' 
    capture_lex $P5034 
    .lex "%sym", $P101 
    .local pmc fb_tmp_289 
    .local pmc fb_tmp_290 
    .local pmc fb_tmp_291 
    new $P5001, 'Hash'
    set $P101, $P5001
.annotate 'line', 3407
    find_dynamic_lex $P5002, "$*BLOCK"
    unless_null $P5002, fallback1931
    nqp_get_sc_object $P5004, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5003, $P5004
    set fb_tmp_289, $P5003
    repr_defined $I5001, fb_tmp_289
    unless $I5001 goto if1036_else1932 
    set $P5005, fb_tmp_289["$BLOCK"]
    set $P5007, $P5005
    goto if1036_end1933
  if1036_else1932:
    null $P5006
    set $P5007, $P5006
  if1036_end1933:
    unless_null $P5007, vivi_10371934
    nqp_get_sc_object $P5008, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5007, $P5008
  vivi_10371934:
    unless_null $P5007, vivi_10381935
    die "Contextual $*BLOCK not found"
    box $P5009, "Contextual $*BLOCK not found"
    set $P5007, $P5009
  vivi_10381935:
    set $P5002, $P5007
  fallback1931:
    $P5010 = $P5002."qast"()
    find_lex $P5011, "$name"
    $P5012 = $P5010."symbol"($P5011)
    set $P101, $P5012
    isfalse $I5002, $P101
    set $I5005, $I5002
    if $I5002 goto unless1041_end1941 
    set fb_tmp_290, $P101
    repr_defined $I5004, fb_tmp_290
    unless $I5004 goto if1042_else1942 
    set $P5013, fb_tmp_290["lazyinit"]
    set $P5015, $P5013
    goto if1042_end1943
  if1042_else1942:
    null $P5014
    set $P5015, $P5014
  if1042_end1943:
    unless_null $P5015, vivi_10431944
    nqp_get_sc_object $P5016, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5015, $P5016
  vivi_10431944:
    isfalse $I5003, $P5015
    set $I5005, $I5003
  unless1041_end1941:
    box $P5028, $I5005
    set $P5027, $P5028
    unless $I5005 goto if1040_end1939 
.annotate 'line', 3408
    find_dynamic_lex $P5017, "$*BLOCK"
    unless_null $P5017, fallback1945
    nqp_get_sc_object $P5019, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5018, $P5019
    set fb_tmp_291, $P5018
    repr_defined $I5006, fb_tmp_291
    unless $I5006 goto if1044_else1946 
    set $P5020, fb_tmp_291["$BLOCK"]
    set $P5022, $P5020
    goto if1044_end1947
  if1044_else1946:
    null $P5021
    set $P5022, $P5021
  if1044_end1947:
    unless_null $P5022, vivi_10451948
    nqp_get_sc_object $P5023, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5022, $P5023
  vivi_10451948:
    unless_null $P5022, vivi_10461949
    die "Contextual $*BLOCK not found"
    box $P5024, "Contextual $*BLOCK not found"
    set $P5022, $P5024
  vivi_10461949:
    set $P5017, $P5022
  fallback1945:
    find_lex $P5025, "$name"
    $P5026 = $P5017."lexical_type"($P5025)
    set $P5027, $P5026
  if1040_end1939:
    unless $P5027 goto if1039_else1936 
    .const 'Sub' $P5029 = 'cuid_353_1366375329.52446' 
    capture_lex $P5029
    $P5030 = $P5029($P5027)
    set $P5033, $P5030
    goto if1039_end1937
  if1039_else1936:
    .const 'Sub' $P5031 = 'cuid_357_1366375329.52446' 
    capture_lex $P5031
    $P5032 = $P5031()
    set $P5033, $P5032
  if1039_end1937:
    .return ($P5033) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_353_1366375329.52446") :anon :lex :outer("cuid_354_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3408
    .param pmc _lex_param_0 
    .const 'Sub' $P5024 = 'cuid_352_1366375329.52446' 
    capture_lex $P5024 
    .lex "$reg", $P101 
    .lex "$type", _lex_param_0 
    .local pmc fb_tmp_292 
    .local pmc fb_tmp_293 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 3409
    find_dynamic_lex $P5002, "$*BLOCK"
    unless_null $P5002, fallback1950
    nqp_get_sc_object $P5004, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5003, $P5004
    set fb_tmp_292, $P5003
    repr_defined $I5001, fb_tmp_292
    unless $I5001 goto if1047_else1951 
    set $P5005, fb_tmp_292["$BLOCK"]
    set $P5007, $P5005
    goto if1047_end1952
  if1047_else1951:
    null $P5006
    set $P5007, $P5006
  if1047_end1952:
    unless_null $P5007, vivi_10481953
    nqp_get_sc_object $P5008, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5007, $P5008
  vivi_10481953:
    unless_null $P5007, vivi_10491954
    die "Contextual $*BLOCK not found"
    box $P5009, "Contextual $*BLOCK not found"
    set $P5007, $P5009
  vivi_10491954:
    set $P5002, $P5007
  fallback1950:
    find_lex $P5010, "$name"
    $P5011 = $P5002."lex_reg"($P5010)
    set $P101, $P5011
    find_dynamic_lex $P5012, "$*BINDVAL"
    unless_null $P5012, fallback1957
    nqp_get_sc_object $P5014, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5013, $P5014
    set fb_tmp_293, $P5013
    repr_defined $I5002, fb_tmp_293
    unless $I5002 goto if1051_else1958 
    set $P5015, fb_tmp_293["$BINDVAL"]
    set $P5017, $P5015
    goto if1051_end1959
  if1051_else1958:
    null $P5016
    set $P5017, $P5016
  if1051_end1959:
    unless_null $P5017, vivi_10521960
    nqp_get_sc_object $P5018, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5017, $P5018
  vivi_10521960:
    unless_null $P5017, vivi_10531961
    die "Contextual $*BINDVAL not found"
    box $P5019, "Contextual $*BINDVAL not found"
    set $P5017, $P5019
  vivi_10531961:
    set $P5012, $P5017
  fallback1957:
    unless $P5012 goto if1050_end1956 
    .const 'Sub' $P5020 = 'cuid_352_1366375329.52446' 
    capture_lex $P5020
    $P5021 = $P5020()
  if1050_end1956:
.annotate 'line', 3415
    find_lex $P5022, "$ops"
    $P5023 = $P5022."result"($P101)
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_352_1366375329.52446") :anon :lex :outer("cuid_353_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3410
    .lex "$valpost", $P101 
    .local pmc fb_tmp_294 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 3411
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    find_dynamic_lex $P5004, "$*BINDVAL"
    unless_null $P5004, fallback1962
    nqp_get_sc_object $P5006, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5005, $P5006
    set fb_tmp_294, $P5005
    repr_defined $I5001, fb_tmp_294
    unless $I5001 goto if1054_else1963 
    set $P5007, fb_tmp_294["$BINDVAL"]
    set $P5009, $P5007
    goto if1054_end1964
  if1054_else1963:
    null $P5008
    set $P5009, $P5008
  if1054_end1964:
    unless_null $P5009, vivi_10551965
    nqp_get_sc_object $P5010, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5009, $P5010
  vivi_10551965:
    unless_null $P5009, vivi_10561966
    die "Contextual $*BINDVAL not found"
    box $P5011, "Contextual $*BINDVAL not found"
    set $P5009, $P5011
  vivi_10561966:
    set $P5004, $P5009
  fallback1962:
    find_lex $P5012, "$type"
    set $S5002, $P5012
    downcase $S5001, $S5002
    $P5013 = $P5002."as_post_clear_bindval"($P5004, $S5001 :named("want"))
    set $P101, $P5013
.annotate 'line', 3412
    find_lex $P5014, "$ops"
    $P5014."push"($P101)
.annotate 'line', 3413
    find_lex $P5015, "$ops"
    find_lex $P5016, "$reg"
    $P5017 = $P101."result"()
    $P5018 = $P5015."push_pirop"("set", $P5016, $P5017)
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_357_1366375329.52446") :anon :lex :outer("cuid_354_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3417
    .const 'Sub' $P5035 = 'cuid_356_1366375329.52446' 
    capture_lex $P5035 
    .const 'Sub' $P5035 = 'cuid_358_1366375329.52446' 
    capture_lex $P5035 
    .const 'Sub' $P5035 = 'cuid_359_1366375329.52446' 
    capture_lex $P5035 
    .const 'Sub' $P5035 = 'cuid_360_1366375329.52446' 
    capture_lex $P5035 
    .const 'Sub' $P5035 = 'cuid_361_1366375329.52446' 
    capture_lex $P5035 
    .lex "$type", $P101 
    .local pmc fb_tmp_297 
    .local pmc fb_tmp_300 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 3419
    find_lex $P5002, "$node"
    $P5003 = $P5002."returns"()
    $P5004 = "&type_to_register_type"($P5003)
    set $P101, $P5004
    set $S5001, $P101
    iseq $I5001, $S5001, "P"
    unless $I5001 goto if1057_end1968 
    .const 'Sub' $P5005 = 'cuid_356_1366375329.52446' 
    capture_lex $P5005
    $P5006 = $P5005()
  if1057_end1968:
    find_lex $P5007, "$scope"
    set $S5002, $P5007
    iseq $I5002, $S5002, "lexical"
    unless $I5002 goto if1065_else1984 
.annotate 'line', 3436
    find_dynamic_lex $P5008, "$*BINDVAL"
    unless_null $P5008, fallback1988
    nqp_get_sc_object $P5010, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5009, $P5010
    set fb_tmp_297, $P5009
    repr_defined $I5003, fb_tmp_297
    unless $I5003 goto if1067_else1989 
    set $P5011, fb_tmp_297["$BINDVAL"]
    set $P5013, $P5011
    goto if1067_end1990
  if1067_else1989:
    null $P5012
    set $P5013, $P5012
  if1067_end1990:
    unless_null $P5013, vivi_10681991
    nqp_get_sc_object $P5014, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5013, $P5014
  vivi_10681991:
    unless_null $P5013, vivi_10691992
    die "Contextual $*BINDVAL not found"
    box $P5015, "Contextual $*BINDVAL not found"
    set $P5013, $P5015
  vivi_10691992:
    set $P5008, $P5013
  fallback1988:
    unless $P5008 goto if1066_else1986 
    .const 'Sub' $P5016 = 'cuid_358_1366375329.52446' 
    capture_lex $P5016
    $P5017 = $P5016()
    set $P5020, $P5017
    goto if1066_end1987
  if1066_else1986:
    .const 'Sub' $P5018 = 'cuid_359_1366375329.52446' 
    capture_lex $P5018
    $P5019 = $P5018()
    set $P5020, $P5019
  if1066_end1987:
    set $P5034, $P5020
    goto if1065_end1985
  if1065_else1984:
.annotate 'line', 3449
    find_dynamic_lex $P5021, "$*BINDVAL"
    unless_null $P5021, fallback2005
    nqp_get_sc_object $P5023, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5022, $P5023
    set fb_tmp_300, $P5022
    repr_defined $I5004, fb_tmp_300
    unless $I5004 goto if1077_else2006 
    set $P5024, fb_tmp_300["$BINDVAL"]
    set $P5026, $P5024
    goto if1077_end2007
  if1077_else2006:
    null $P5025
    set $P5026, $P5025
  if1077_end2007:
    unless_null $P5026, vivi_10782008
    nqp_get_sc_object $P5027, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5026, $P5027
  vivi_10782008:
    unless_null $P5026, vivi_10792009
    die "Contextual $*BINDVAL not found"
    box $P5028, "Contextual $*BINDVAL not found"
    set $P5026, $P5028
  vivi_10792009:
    set $P5021, $P5026
  fallback2005:
    unless $P5021 goto if1076_else2003 
    .const 'Sub' $P5029 = 'cuid_360_1366375329.52446' 
    capture_lex $P5029
    $P5030 = $P5029()
    set $P5033, $P5030
    goto if1076_end2004
  if1076_else2003:
    .const 'Sub' $P5031 = 'cuid_361_1366375329.52446' 
    capture_lex $P5031
    $P5032 = $P5031()
    set $P5033, $P5032
  if1076_end2004:
    set $P5034, $P5033
  if1065_end1985:
    .return ($P5034) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_356_1366375329.52446") :anon :lex :outer("cuid_357_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3420
    .const 'Sub' $P5015 = 'cuid_355_1366375329.52446' 
    capture_lex $P5015 
    .lex "$cur_block", $P101 
    .local pmc fb_tmp_295 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    find_dynamic_lex $P5002, "$*BLOCK"
    unless_null $P5002, fallback1969
    nqp_get_sc_object $P5004, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5003, $P5004
    set fb_tmp_295, $P5003
    repr_defined $I5001, fb_tmp_295
    unless $I5001 goto if1058_else1970 
    set $P5005, fb_tmp_295["$BLOCK"]
    set $P5007, $P5005
    goto if1058_end1971
  if1058_else1970:
    null $P5006
    set $P5007, $P5006
  if1058_end1971:
    unless_null $P5007, vivi_10591972
    nqp_get_sc_object $P5008, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5007, $P5008
  vivi_10591972:
    unless_null $P5007, vivi_10601973
    die "Contextual $*BLOCK not found"
    box $P5009, "Contextual $*BLOCK not found"
    set $P5007, $P5009
  vivi_10601973:
    set $P5002, $P5007
  fallback1969:
    set $P101, $P5002
  while1061_test1974:
    nqp_get_sc_object $P5010, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    type_check $I5002, $P101, $P5010
    box $P5014, $I5002
    set $P5013, $P5014
    unless $I5002 goto while1061_done1978 
  while1061_redo1976:
    .const 'Sub' $P5011 = 'cuid_355_1366375329.52446' 
    capture_lex $P5011
    $P5012 = $P5011()
    set $P5013, $P5012
    goto while1061_test1974 
  while1061_done1978:
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_355_1366375329.52446") :anon :lex :outer("cuid_356_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3423
    .lex "%sym", $P101 
    .local pmc fb_tmp_296 
    new $P5001, 'Hash'
    set $P101, $P5001
.annotate 'line', 3424
    find_lex $P5002, "$cur_block"
    $P5003 = $P5002."qast"()
    find_lex $P5004, "$name"
    $P5005 = $P5003."symbol"($P5004)
    set $P101, $P5005
    unless $P101 goto if1062_else1979 
.annotate 'line', 3425
.annotate 'line', 3426
    set fb_tmp_296, $P101
    repr_defined $I5001, fb_tmp_296
    unless $I5001 goto if1063_else1981 
    set $P5006, fb_tmp_296["type"]
    set $P5008, $P5006
    goto if1063_end1982
  if1063_else1981:
    null $P5007
    set $P5008, $P5007
  if1063_end1982:
    unless_null $P5008, vivi_10641983
    nqp_get_sc_object $P5009, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5008, $P5009
  vivi_10641983:
    $P5010 = "&type_to_register_type"($P5008)
    store_lex "$type", $P5010
    nqp_get_sc_object $P5011, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    store_lex "$cur_block", $P5011
    set $P5014, $P5011
    goto if1062_end1980
  if1062_else1979:
.annotate 'line', 3429
.annotate 'line', 3430
    find_lex $P5012, "$cur_block"
    $P5013 = $P5012."outer"()
    store_lex "$cur_block", $P5013
    set $P5014, $P5013
  if1062_end1980:
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_358_1366375329.52446") :anon :lex :outer("cuid_357_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3437
    .lex "$valpost", $P101 
    .local pmc fb_tmp_298 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 3438
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    find_dynamic_lex $P5004, "$*BINDVAL"
    unless_null $P5004, fallback1993
    nqp_get_sc_object $P5006, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5005, $P5006
    set fb_tmp_298, $P5005
    repr_defined $I5001, fb_tmp_298
    unless $I5001 goto if1070_else1994 
    set $P5007, fb_tmp_298["$BINDVAL"]
    set $P5009, $P5007
    goto if1070_end1995
  if1070_else1994:
    null $P5008
    set $P5009, $P5008
  if1070_end1995:
    unless_null $P5009, vivi_10711996
    nqp_get_sc_object $P5010, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5009, $P5010
  vivi_10711996:
    unless_null $P5009, vivi_10721997
    die "Contextual $*BINDVAL not found"
    box $P5011, "Contextual $*BINDVAL not found"
    set $P5009, $P5011
  vivi_10721997:
    set $P5004, $P5009
  fallback1993:
    find_lex $P5012, "$type"
    set $S5002, $P5012
    downcase $S5001, $S5002
    $P5013 = $P5002."as_post_clear_bindval"($P5004, $S5001 :named("want"))
    set $P101, $P5013
.annotate 'line', 3439
    find_lex $P5014, "$ops"
    $P5014."push"($P101)
.annotate 'line', 3440
    find_lex $P5015, "$ops"
    find_lex $P5017, "self"
    nqp_decontainerize $P5016, $P5017
    find_lex $P5018, "$node"
    $P5019 = $P5018."name"()
    $P5020 = $P5016."escape"($P5019)
    $P5021 = $P101."result"()
    $P5015."push_pirop"("store_lex", $P5020, $P5021)
.annotate 'line', 3441
    find_lex $P5022, "$ops"
    $P5023 = $P101."result"()
    $P5024 = $P5022."result"($P5023)
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_359_1366375329.52446") :anon :lex :outer("cuid_357_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3443
    .lex "$res_reg", $P101 
    .local pmc fb_tmp_299 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 3444
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback1998
    nqp_get_sc_object $P5005, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5004, $P5005
    set fb_tmp_299, $P5004
    repr_defined $I5001, fb_tmp_299
    unless $I5001 goto if1073_else1999 
    set $P5006, fb_tmp_299["$REGALLOC"]
    set $P5008, $P5006
    goto if1073_end2000
  if1073_else1999:
    null $P5007
    set $P5008, $P5007
  if1073_end2000:
    unless_null $P5008, vivi_10742001
    nqp_get_sc_object $P5009, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5008, $P5009
  vivi_10742001:
    unless_null $P5008, vivi_10752002
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_10752002:
    set $P5003, $P5008
  fallback1998:
    find_lex $P5002, "$type"
    set $S5003, $P5002
    downcase $S5002, $S5003
    concat $S5001, "fresh_", $S5002
    $P5011 = $P5003.$S5001()
    set $P101, $P5011
.annotate 'line', 3445
    find_lex $P5012, "$ops"
    find_lex $P5014, "self"
    nqp_decontainerize $P5013, $P5014
    find_lex $P5015, "$node"
    $P5016 = $P5015."name"()
    $P5017 = $P5013."escape"($P5016)
    $P5012."push_pirop"("find_lex", $P101, $P5017)
.annotate 'line', 3446
    find_lex $P5018, "$ops"
    $P5019 = $P5018."result"($P101)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_360_1366375329.52446") :anon :lex :outer("cuid_357_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3450
    .lex "$valpost", $P101 
    .local pmc fb_tmp_301 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 3451
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    find_dynamic_lex $P5004, "$*BINDVAL"
    unless_null $P5004, fallback2010
    nqp_get_sc_object $P5006, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5005, $P5006
    set fb_tmp_301, $P5005
    repr_defined $I5001, fb_tmp_301
    unless $I5001 goto if1080_else2011 
    set $P5007, fb_tmp_301["$BINDVAL"]
    set $P5009, $P5007
    goto if1080_end2012
  if1080_else2011:
    null $P5008
    set $P5009, $P5008
  if1080_end2012:
    unless_null $P5009, vivi_10812013
    nqp_get_sc_object $P5010, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5009, $P5010
  vivi_10812013:
    unless_null $P5009, vivi_10822014
    die "Contextual $*BINDVAL not found"
    box $P5011, "Contextual $*BINDVAL not found"
    set $P5009, $P5011
  vivi_10822014:
    set $P5004, $P5009
  fallback2010:
    $P5012 = $P5002."as_post_clear_bindval"($P5004, "P" :named("want"))
    set $P101, $P5012
.annotate 'line', 3452
    find_lex $P5013, "$ops"
    $P5013."push"($P101)
.annotate 'line', 3453
    find_lex $P5014, "$ops"
    find_lex $P5016, "self"
    nqp_decontainerize $P5015, $P5016
    find_lex $P5017, "$name"
    $P5018 = $P5015."escape"($P5017)
    $P5019 = $P101."result"()
    $P5014."push_pirop"("store_dynamic_lex", $P5018, $P5019)
.annotate 'line', 3454
    find_lex $P5020, "$ops"
    $P5021 = $P101."result"()
    $P5022 = $P5020."result"($P5021)
    .return ($P5022) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_361_1366375329.52446") :anon :lex :outer("cuid_357_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3456
    .lex "$res_reg", $P101 
    .local pmc fb_tmp_302 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 3457
    find_dynamic_lex $P5002, "$*REGALLOC"
    unless_null $P5002, fallback2015
    nqp_get_sc_object $P5004, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5003, $P5004
    set fb_tmp_302, $P5003
    repr_defined $I5001, fb_tmp_302
    unless $I5001 goto if1083_else2016 
    set $P5005, fb_tmp_302["$REGALLOC"]
    set $P5007, $P5005
    goto if1083_end2017
  if1083_else2016:
    null $P5006
    set $P5007, $P5006
  if1083_end2017:
    unless_null $P5007, vivi_10842018
    nqp_get_sc_object $P5008, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5007, $P5008
  vivi_10842018:
    unless_null $P5007, vivi_10852019
    die "Contextual $*REGALLOC not found"
    box $P5009, "Contextual $*REGALLOC not found"
    set $P5007, $P5009
  vivi_10852019:
    set $P5002, $P5007
  fallback2015:
    $P5010 = $P5002."fresh_p"()
    set $P101, $P5010
.annotate 'line', 3458
    find_lex $P5011, "$ops"
    find_lex $P5013, "self"
    nqp_decontainerize $P5012, $P5013
    find_lex $P5014, "$name"
    $P5015 = $P5012."escape"($P5014)
    $P5011."push_pirop"("find_dynamic_lex", $P101, $P5015)
.annotate 'line', 3459
    find_lex $P5016, "$ops"
    $P5017 = $P5016."result"($P101)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_363_1366375329.52446") :anon :lex :outer("cuid_106_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3464
    .const 'Sub' $P5044 = 'cuid_362_1366375329.52446' 
    capture_lex $P5044 
    .const 'Sub' $P5044 = 'cuid_364_1366375329.52446' 
    capture_lex $P5044 
    .lex "@args", $P101 
    .lex "$obj", $P102 
    .lex "$han", $P103 
    .lex "$type", $P104 
    .lex "$op_type", $P105 
    .local pmc fb_tmp_303 
    .local pmc fb_tmp_304 
    .local pmc fb_tmp_305 
    new $P5001, 'QRPA'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P105, $P5005
.annotate 'line', 3466
    find_lex $P5006, "$node"
    $P5007 = $P5006."list"()
    set $P101, $P5007
    set $N5001, $P101
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if1087_end2023 
.annotate 'line', 3467
    box $P5008, "An attribute lookup needs an object and a class handle"
    die $P5008
  if1087_end2023:
.annotate 'line', 3472
    find_lex $P5010, "self"
    nqp_decontainerize $P5009, $P5010
    set fb_tmp_303, $P101
    repr_defined $I5002, fb_tmp_303
    unless $I5002 goto if1088_else2024 
    set $P5011, fb_tmp_303[0]
    set $P5013, $P5011
    goto if1088_end2025
  if1088_else2024:
    null $P5012
    set $P5013, $P5012
  if1088_end2025:
    unless_null $P5013, vivi_10892026
    nqp_get_sc_object $P5014, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5013, $P5014
  vivi_10892026:
    $P5015 = $P5009."as_post_clear_bindval"($P5013, "P" :named("want"))
    set $P102, $P5015
.annotate 'line', 3473
    find_lex $P5017, "self"
    nqp_decontainerize $P5016, $P5017
    set fb_tmp_304, $P101
    repr_defined $I5003, fb_tmp_304
    unless $I5003 goto if1090_else2027 
    set $P5018, fb_tmp_304[1]
    set $P5020, $P5018
    goto if1090_end2028
  if1090_else2027:
    null $P5019
    set $P5020, $P5019
  if1090_end2028:
    unless_null $P5020, vivi_10912029
    nqp_get_sc_object $P5021, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5020, $P5021
  vivi_10912029:
    $P5022 = $P5016."as_post_clear_bindval"($P5020, "P" :named("want"))
    set $P103, $P5022
.annotate 'line', 3474
    find_lex $P5023, "$ops"
    $P5023."push"($P102)
.annotate 'line', 3475
    find_lex $P5024, "$ops"
    $P5024."push"($P103)
.annotate 'line', 3478
    find_lex $P5025, "$node"
    $P5026 = $P5025."returns"()
    $P5027 = "&type_to_register_type"($P5026)
    set $P104, $P5027
.annotate 'line', 3479
    find_lex $P5028, "$node"
    $P5029 = $P5028."returns"()
    $P5030 = "&type_to_lookup_name"($P5029)
    set $P105, $P5030
    find_dynamic_lex $P5031, "$*BINDVAL"
    unless_null $P5031, fallback2032
    nqp_get_sc_object $P5033, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5032, $P5033
    set fb_tmp_305, $P5032
    repr_defined $I5004, fb_tmp_305
    unless $I5004 goto if1093_else2033 
    set $P5034, fb_tmp_305["$BINDVAL"]
    set $P5036, $P5034
    goto if1093_end2034
  if1093_else2033:
    null $P5035
    set $P5036, $P5035
  if1093_end2034:
    unless_null $P5036, vivi_10942035
    nqp_get_sc_object $P5037, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5036, $P5037
  vivi_10942035:
    unless_null $P5036, vivi_10952036
    die "Contextual $*BINDVAL not found"
    box $P5038, "Contextual $*BINDVAL not found"
    set $P5036, $P5038
  vivi_10952036:
    set $P5031, $P5036
  fallback2032:
    unless $P5031 goto if1092_else2030 
    .const 'Sub' $P5039 = 'cuid_362_1366375329.52446' 
    capture_lex $P5039
    $P5040 = $P5039()
    set $P5043, $P5040
    goto if1092_end2031
  if1092_else2030:
    .const 'Sub' $P5041 = 'cuid_364_1366375329.52446' 
    capture_lex $P5041
    $P5042 = $P5041()
    set $P5043, $P5042
  if1092_end2031:
    .return ($P5043) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_362_1366375329.52446") :anon :lex :outer("cuid_363_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3480
    .lex "$valpost", $P101 
    .local pmc fb_tmp_306 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 3481
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    find_dynamic_lex $P5004, "$*BINDVAL"
    unless_null $P5004, fallback2037
    nqp_get_sc_object $P5006, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5005, $P5006
    set fb_tmp_306, $P5005
    repr_defined $I5001, fb_tmp_306
    unless $I5001 goto if1096_else2038 
    set $P5007, fb_tmp_306["$BINDVAL"]
    set $P5009, $P5007
    goto if1096_end2039
  if1096_else2038:
    null $P5008
    set $P5009, $P5008
  if1096_end2039:
    unless_null $P5009, vivi_10972040
    nqp_get_sc_object $P5010, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5009, $P5010
  vivi_10972040:
    unless_null $P5009, vivi_10982041
    die "Contextual $*BINDVAL not found"
    box $P5011, "Contextual $*BINDVAL not found"
    set $P5009, $P5011
  vivi_10982041:
    set $P5004, $P5009
  fallback2037:
    find_lex $P5012, "$type"
    set $S5002, $P5012
    downcase $S5001, $S5002
    $P5013 = $P5002."as_post_clear_bindval"($P5004, $S5001 :named("want"))
    set $P101, $P5013
.annotate 'line', 3482
    find_lex $P5014, "$ops"
    $P5014."push"($P101)
.annotate 'line', 3483
    find_lex $P5015, "$ops"
    find_lex $P5016, "$op_type"
    set $S5004, $P5016
    concat $S5003, "repr_bind_attr_", $S5004
    find_lex $P5017, "$obj"
    $P5018 = $P5017."result"()
    find_lex $P5019, "$han"
    $P5020 = $P5019."result"()
.annotate 'line', 3484
    find_lex $P5022, "self"
    nqp_decontainerize $P5021, $P5022
    find_lex $P5023, "$name"
    $P5024 = $P5021."escape"($P5023)
    $P5025 = $P101."result"()
    $P5015."push_pirop"($S5003, $P5018, $P5020, $P5024, $P5025)
.annotate 'line', 3485
    find_lex $P5026, "$ops"
    $P5027 = $P101."result"()
    $P5028 = $P5026."result"($P5027)
    .return ($P5028) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_364_1366375329.52446") :anon :lex :outer("cuid_363_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3487
    .lex "$res_reg", $P101 
    .local pmc fb_tmp_307 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 3488
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback2042
    nqp_get_sc_object $P5005, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5004, $P5005
    set fb_tmp_307, $P5004
    repr_defined $I5001, fb_tmp_307
    unless $I5001 goto if1099_else2043 
    set $P5006, fb_tmp_307["$REGALLOC"]
    set $P5008, $P5006
    goto if1099_end2044
  if1099_else2043:
    null $P5007
    set $P5008, $P5007
  if1099_end2044:
    unless_null $P5008, vivi_11002045
    nqp_get_sc_object $P5009, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5008, $P5009
  vivi_11002045:
    unless_null $P5008, vivi_11012046
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_11012046:
    set $P5003, $P5008
  fallback2042:
    find_lex $P5002, "$type"
    set $S5003, $P5002
    downcase $S5002, $S5003
    concat $S5001, "fresh_", $S5002
    $P5011 = $P5003.$S5001()
    set $P101, $P5011
.annotate 'line', 3489
    find_lex $P5012, "$ops"
    find_lex $P5013, "$op_type"
    set $S5005, $P5013
    concat $S5004, "repr_get_attr_", $S5005
    find_lex $P5014, "$obj"
    $P5015 = $P5014."result"()
    find_lex $P5016, "$han"
    $P5017 = $P5016."result"()
.annotate 'line', 3490
    find_lex $P5019, "self"
    nqp_decontainerize $P5018, $P5019
    find_lex $P5020, "$name"
    $P5021 = $P5018."escape"($P5020)
    $P5012."push_pirop"($S5004, $P101, $P5015, $P5017, $P5021)
.annotate 'line', 3491
    find_lex $P5022, "$ops"
    $P5023 = $P5022."result"($P101)
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "as_post_clear_bindval" :subid("cuid_107_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3511
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_25 :opt_flag 
    .lex "$*BINDVAL", $P101 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$want", _lex_param_2 
    if haz_param_25, default2077
    nqp_get_sc_object $P5008, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set _lex_param_2, $P5008
  default2077:
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    box $P5002, 0
    set $P101, $P5002
    unless _lex_param_2 goto if1118_else2075 
.annotate 'line', 3513
    nqp_decontainerize $P5003, _lex_param_0
    $P5004 = $P5003."as_post"(_lex_param_1, _lex_param_2 :named("want"))
    set $P5007, $P5004
    goto if1118_end2076
  if1118_else2075:
    nqp_decontainerize $P5005, _lex_param_0
    $P5006 = $P5005."as_post"(_lex_param_1)
    set $P5007, $P5006
  if1118_end2076:
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_108_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3516
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_26 :opt_flag 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$want", _lex_param_2 
    .local pmc fb_tmp_312 
    if haz_param_26, default2081
    nqp_get_sc_object $P5007, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set _lex_param_2, $P5007
  default2081:
.annotate 'line', 3518
    nqp_decontainerize $P5001, _lex_param_0
    set fb_tmp_312, _lex_param_1
    repr_defined $I5001, fb_tmp_312
    unless $I5001 goto if1119_else2078 
    set $P5002, fb_tmp_312[0]
    set $P5004, $P5002
    goto if1119_end2079
  if1119_else2078:
    null $P5003
    set $P5004, $P5003
  if1119_end2079:
    unless_null $P5004, vivi_11202080
    nqp_get_sc_object $P5005, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5004, $P5005
  vivi_11202080:
    $P5006 = $P5001."as_post"($P5004)
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_109_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3521
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_27 :opt_flag 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$want", _lex_param_2 
    if haz_param_27, default2082
    nqp_get_sc_object $P5004, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set _lex_param_2, $P5004
  default2082:
.annotate 'line', 3522
    nqp_get_sc_object $P5001, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5002 = _lex_param_1."value"()
    set $S5001, $P5002
    $P5003 = $P5001."new"($S5001 :named("result"))
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_110_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3525
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_28 :opt_flag 
    .lex "$val", $P101 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$want", _lex_param_2 
    if haz_param_28, default2087
    nqp_get_sc_object $P5007, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set _lex_param_2, $P5007
  default2087:
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 3526
    $P5002 = _lex_param_1."value"()
    set $S5001, $P5002
    box $P5003, $S5001
    set $P101, $P5003
    set $S5002, $P101
    index $I5002, $S5002, ".", 0
    set $N5001, $I5002
    set $N5002, 0
    isge $I5001, $N5001, $N5002
    set $I5005, $I5001
    if $I5001 goto unless1122_end2086 
    set $S5003, $P101
    index $I5004, $S5003, "e", 0
    set $N5003, $I5004
    set $N5004, 0
    isgt $I5003, $N5003, $N5004
    set $I5005, $I5003
  unless1122_end2086:
    if $I5005 goto unless1121_end2084 
    set $S5005, $P101
    concat $S5004, $S5005, ".0"
    box $P5004, $S5004
    set $P101, $P5004
  unless1121_end2084:
.annotate 'line', 3529
    nqp_get_sc_object $P5005, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5006 = $P5005."new"($P101 :named("result"))
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_111_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3532
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_29 :opt_flag 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$want", _lex_param_2 
    if haz_param_29, default2088
    nqp_get_sc_object $P5006, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set _lex_param_2, $P5006
  default2088:
.annotate 'line', 3533
    nqp_get_sc_object $P5001, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    nqp_decontainerize $P5002, _lex_param_0
    $P5003 = _lex_param_1."value"()
    $P5004 = $P5002."escape"($P5003)
    $P5005 = $P5001."new"($P5004 :named("result"))
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_112_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3536
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_30 :opt_flag 
    .lex "$cuid", $P101 
    .lex "$reg", $P102 
    .lex "$ops", $P103 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$want", _lex_param_2 
    .local pmc fb_tmp_313 
    if haz_param_30, default2094
    nqp_get_sc_object $P5019, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set _lex_param_2, $P5019
  default2094:
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
.annotate 'line', 3537
    nqp_decontainerize $P5004, _lex_param_0
    $P5005 = _lex_param_1."value"()
    $P5006 = $P5005."cuid"()
    $P5007 = $P5004."escape"($P5006)
    set $P101, $P5007
.annotate 'line', 3538
    find_dynamic_lex $P5008, "$*REGALLOC"
    unless_null $P5008, fallback2089
    nqp_get_sc_object $P5010, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5009, $P5010
    set fb_tmp_313, $P5009
    repr_defined $I5001, fb_tmp_313
    unless $I5001 goto if1123_else2090 
    set $P5011, fb_tmp_313["$REGALLOC"]
    set $P5013, $P5011
    goto if1123_end2091
  if1123_else2090:
    null $P5012
    set $P5013, $P5012
  if1123_end2091:
    unless_null $P5013, vivi_11242092
    nqp_get_sc_object $P5014, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5013, $P5014
  vivi_11242092:
    unless_null $P5013, vivi_11252093
    die "Contextual $*REGALLOC not found"
    box $P5015, "Contextual $*REGALLOC not found"
    set $P5013, $P5015
  vivi_11252093:
    set $P5008, $P5013
  fallback2089:
    $P5016 = $P5008."fresh_p"()
    set $P102, $P5016
.annotate 'line', 3539
    nqp_get_sc_object $P5017, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5018 = $P5017."new"($P102 :named("result"))
    set $P103, $P5018
.annotate 'line', 3540
    set $S5004, $P102
    concat $S5003, ".const 'Sub' ", $S5004
    concat $S5002, $S5003, " = "
    set $S5005, $P101
    concat $S5001, $S5002, $S5005
    $P103."push_pirop"($S5001)
    .return ($P103) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_113_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3544
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_31 :opt_flag 
    .lex "$val", $P101 
    .lex "$sc", $P102 
    .lex "$handle", $P103 
    .lex "$idx", $P104 
    .lex "$reg", $P105 
    .lex "$ops", $P106 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$want", _lex_param_2 
    .local pmc fb_tmp_314 
    if haz_param_31, default2100
    nqp_get_sc_object $P5024, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set _lex_param_2, $P5024
  default2100:
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P105, $P5005
    nqp_get_sc_object $P5006, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P106, $P5006
.annotate 'line', 3545
    $P5007 = _lex_param_1."value"()
    set $P101, $P5007
    nqp_get_sc_for_object $P5008, $P101
    set $P102, $P5008
    $S5001 = $P102."handle"()
    box $P5009, $S5001
    set $P103, $P5009
    $I5001 = $P102."slot_index_for"($P101)
    box $P5010, $I5001
    set $P104, $P5010
.annotate 'line', 3549
    find_dynamic_lex $P5011, "$*REGALLOC"
    unless_null $P5011, fallback2095
    nqp_get_sc_object $P5013, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5012, $P5013
    set fb_tmp_314, $P5012
    repr_defined $I5002, fb_tmp_314
    unless $I5002 goto if1126_else2096 
    set $P5014, fb_tmp_314["$REGALLOC"]
    set $P5016, $P5014
    goto if1126_end2097
  if1126_else2096:
    null $P5015
    set $P5016, $P5015
  if1126_end2097:
    unless_null $P5016, vivi_11272098
    nqp_get_sc_object $P5017, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5016, $P5017
  vivi_11272098:
    unless_null $P5016, vivi_11282099
    die "Contextual $*REGALLOC not found"
    box $P5018, "Contextual $*REGALLOC not found"
    set $P5016, $P5018
  vivi_11282099:
    set $P5011, $P5016
  fallback2095:
    $P5019 = $P5011."fresh_p"()
    set $P105, $P5019
.annotate 'line', 3550
    nqp_get_sc_object $P5020, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5021 = $P5020."new"($P105 :named("result"))
    set $P106, $P5021
.annotate 'line', 3551
    nqp_decontainerize $P5022, _lex_param_0
    $P5023 = $P5022."escape"($P103)
    set $S5002, $P104
    $P106."push_pirop"("nqp_get_sc_object", $P105, $P5023, $S5002)
    .return ($P106) 
.end
.HLL "nqp"
.namespace []
.sub "coerce" :subid("cuid_114_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3555
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .const 'Sub' $P5029 = 'cuid_365_1366375329.52446' 
    capture_lex $P5029 
    .const 'Sub' $P5029 = 'cuid_366_1366375329.52446' 
    capture_lex $P5029 
    .const 'Sub' $P5029 = 'cuid_367_1366375329.52446' 
    capture_lex $P5029 
    .const 'Sub' $P5029 = 'cuid_368_1366375329.52446' 
    capture_lex $P5029 
    .lex "$result", $P101 
    .lex "self", _lex_param_0 
    .lex "$post", _lex_param_1 
    .lex "$desired", _lex_param_2 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_2101
    .lex "RETURN", $P102
    set $S5001, _lex_param_2
    iseq $I5001, $S5001, "v"
    unless $I5001 goto if1129_end2104 
    find_lex $P5002, "RETURN"
    $P5003 = $P5002(_lex_param_1)
  if1129_end2104:
.annotate 'line', 3557
    nqp_decontainerize $P5004, _lex_param_0
    $P5005 = _lex_param_1."result"()
    $P5006 = $P5004."infer_type"($P5005)
    set $P101, $P5006
    set $S5002, $P101
    set $S5003, _lex_param_2
    iseq $I5002, $S5002, $S5003
    unless $I5002 goto if1130_else2105 
.annotate 'line', 3558
    find_lex $P5007, "RETURN"
    $P5008 = $P5007(_lex_param_1)
    set $P5028, $P5008
    goto if1130_end2106
  if1130_else2105:
    set $S5005, $P101
    downcase $S5004, $S5005
    set $S5006, _lex_param_2
    iseq $I5003, $S5004, $S5006
    unless $I5003 goto if1131_else2107 
.annotate 'line', 3562
    find_lex $P5009, "RETURN"
    $P5010 = $P5009(_lex_param_1)
    set $P5027, $P5010
    goto if1131_end2108
  if1131_else2107:
    set $S5007, $P101
    iseq $I5004, $S5007, "p"
    set $I5006, $I5004
    unless $I5004 goto if1133_end2112 
    set $S5008, _lex_param_2
    iseq $I5005, $S5008, "P"
    set $I5006, $I5005
  if1133_end2112:
    unless $I5006 goto if1132_else2109 
.annotate 'line', 3567
    find_lex $P5011, "RETURN"
    $P5012 = $P5011(_lex_param_1)
    set $P5026, $P5012
    goto if1132_end2110
  if1132_else2109:
    set $S5009, $P101
    set $S5011, _lex_param_2
    downcase $S5010, $S5011
    iseq $I5007, $S5009, $S5010
    unless $I5007 goto if1134_else2113 
    .const 'Sub' $P5013 = 'cuid_365_1366375329.52446' 
    capture_lex $P5013
    $P5014 = $P5013()
    set $P5025, $P5014
    goto if1134_end2114
  if1134_else2113:
    set $S5012, _lex_param_2
    iseq $I5008, $S5012, "P"
    set $I5010, $I5008
    if $I5008 goto unless1139_end2123 
    set $S5013, _lex_param_2
    iseq $I5009, $S5013, "p"
    set $I5010, $I5009
  unless1139_end2123:
    unless $I5010 goto if1138_else2120 
    .const 'Sub' $P5015 = 'cuid_366_1366375329.52446' 
    capture_lex $P5015
    $P5016 = $P5015()
    set $P5024, $P5016
    goto if1138_end2121
  if1138_else2120:
    set $S5014, $P101
    iseq $I5011, $S5014, "P"
    set $I5013, $I5011
    if $I5011 goto unless1146_end2134 
    set $S5015, $P101
    iseq $I5012, $S5015, "p"
    set $I5013, $I5012
  unless1146_end2134:
    unless $I5013 goto if1145_else2131 
    .const 'Sub' $P5017 = 'cuid_367_1366375329.52446' 
    capture_lex $P5017
    $P5018 = $P5017()
    set $P5023, $P5018
    goto if1145_end2132
  if1145_else2131:
    set $S5016, $P101
    index $I5015, "IiNnSs", $S5016, 0
    set $N5001, $I5015
    set $N5002, 0
    isge $I5014, $N5001, $N5002
    set $I5018, $I5014
    unless $I5014 goto if1153_end2145 
    set $S5017, _lex_param_2
    index $I5017, "IiNnSs", $S5017, 0
    set $N5003, $I5017
    set $N5004, 0
    isge $I5016, $N5003, $N5004
    set $I5018, $I5016
  if1153_end2145:
    unless $I5018 goto if1152_else2142 
    .const 'Sub' $P5019 = 'cuid_368_1366375329.52446' 
    capture_lex $P5019
    $P5020 = $P5019()
    set $P5022, $P5020
    goto if1152_end2143
  if1152_else2142:
.annotate 'line', 3600
    set $S5022, $P101
    concat $S5021, "Coercion from '", $S5022
    concat $S5020, $S5021, "' to '"
    set $S5023, _lex_param_2
    concat $S5019, $S5020, $S5023
    concat $S5018, $S5019, "' NYI"
    box $P5021, $S5018
    die $P5021
    set $P5022, $P5021
  if1152_end2143:
    set $P5023, $P5022
  if1145_end2132:
    set $P5024, $P5023
  if1138_end2121:
    set $P5025, $P5024
  if1134_end2114:
    set $P5026, $P5025
  if1132_end2110:
    set $P5027, $P5026
  if1131_end2108:
    set $P5028, $P5027
  if1130_end2106:
    goto lexotic_2102
  lexotic_2101:
    .get_results ($P5028)
  lexotic_2102:
    .return ($P5028) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_365_1366375329.52446") :anon :lex :outer("cuid_114_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3571
    .lex "$ops", $P101 
    .lex "$reg", $P102 
    .local pmc fb_tmp_315 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
.annotate 'line', 3573
    nqp_get_sc_object $P5003, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5004 = $P5003."new"()
    set $P101, $P5004
.annotate 'line', 3574
    find_dynamic_lex $P5006, "$*REGALLOC"
    unless_null $P5006, fallback2115
    nqp_get_sc_object $P5008, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5007, $P5008
    set fb_tmp_315, $P5007
    repr_defined $I5001, fb_tmp_315
    unless $I5001 goto if1135_else2116 
    set $P5009, fb_tmp_315["$REGALLOC"]
    set $P5011, $P5009
    goto if1135_end2117
  if1135_else2116:
    null $P5010
    set $P5011, $P5010
  if1135_end2117:
    unless_null $P5011, vivi_11362118
    nqp_get_sc_object $P5012, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5011, $P5012
  vivi_11362118:
    unless_null $P5011, vivi_11372119
    die "Contextual $*REGALLOC not found"
    box $P5013, "Contextual $*REGALLOC not found"
    set $P5011, $P5013
  vivi_11372119:
    set $P5006, $P5011
  fallback2115:
    find_lex $P5005, "$result"
    set $S5002, $P5005
    concat $S5001, "fresh_", $S5002
    $P5014 = $P5006.$S5001()
    set $P102, $P5014
.annotate 'line', 3575
    find_lex $P5015, "$post"
    $P101."push"($P5015)
.annotate 'line', 3576
    find_lex $P5016, "$post"
    $P101."push_pirop"("set", $P102, $P5016)
.annotate 'line', 3577
    $P101."result"($P102)
    find_lex $P5017, "RETURN"
    $P5018 = $P5017($P101)
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_366_1366375329.52446") :anon :lex :outer("cuid_114_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3580
    .lex "$hll", $P101 
    .local pmc fb_tmp_316 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    box $P5002, ""
    set $P101, $P5002
    new $P5011, 'ExceptionHandler'
    set_label $P5011, catch_handler_11442130
    $P5011.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5011
    find_dynamic_lex $P5003, "$*HLL"
    unless_null $P5003, fallback2124
    nqp_get_sc_object $P5005, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5004, $P5005
    set fb_tmp_316, $P5004
    repr_defined $I5001, fb_tmp_316
    unless $I5001 goto if1140_else2125 
    set $P5006, fb_tmp_316["$HLL"]
    set $P5008, $P5006
    goto if1140_end2126
  if1140_else2125:
    null $P5007
    set $P5008, $P5007
  if1140_end2126:
    unless_null $P5008, vivi_11412127
    nqp_get_sc_object $P5009, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5008, $P5009
  vivi_11412127:
    unless_null $P5008, vivi_11422128
    die "Contextual $*HLL not found"
    box $P5010, "Contextual $*HLL not found"
    set $P5008, $P5010
  vivi_11422128:
    set $P5003, $P5008
  fallback2124:
    set $P101, $P5003
    set $P5012, $P101
    pop_eh 
    goto skip_handler_11432129
  catch_handler_11442130:
    .get_results ($P5011) 
    set $I10001, 1
    set $P5011["handled"], $I10001
    nqp_get_sc_object $P10001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    finalize $P5011
    pop_upto_eh $P5011
    pop_eh 
    set $P5012, $P10001
    goto skip_handler_11432129
  skip_handler_11432129:
.annotate 'line', 3583
    nqp_get_sc_object $P5014, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    find_lex $P5016, "self"
    nqp_decontainerize $P5015, $P5016
    find_lex $P5017, "$result"
    set $S5002, $P5017
    downcase $S5001, $S5002
    find_lex $P5018, "$post"
    $P5019 = $P5014."box"($P5015, $P101, $S5001, $P5018)
    find_lex $P5013, "RETURN"
    $P5020 = $P5013($P5019)
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_367_1366375329.52446") :anon :lex :outer("cuid_114_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3585
    .lex "$hll", $P101 
    .local pmc fb_tmp_317 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    box $P5002, ""
    set $P101, $P5002
    new $P5011, 'ExceptionHandler'
    set_label $P5011, catch_handler_11512141
    $P5011.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5011
    find_dynamic_lex $P5003, "$*HLL"
    unless_null $P5003, fallback2135
    nqp_get_sc_object $P5005, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5004, $P5005
    set fb_tmp_317, $P5004
    repr_defined $I5001, fb_tmp_317
    unless $I5001 goto if1147_else2136 
    set $P5006, fb_tmp_317["$HLL"]
    set $P5008, $P5006
    goto if1147_end2137
  if1147_else2136:
    null $P5007
    set $P5008, $P5007
  if1147_end2137:
    unless_null $P5008, vivi_11482138
    nqp_get_sc_object $P5009, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5008, $P5009
  vivi_11482138:
    unless_null $P5008, vivi_11492139
    die "Contextual $*HLL not found"
    box $P5010, "Contextual $*HLL not found"
    set $P5008, $P5010
  vivi_11492139:
    set $P5003, $P5008
  fallback2135:
    set $P101, $P5003
    set $P5012, $P101
    pop_eh 
    goto skip_handler_11502140
  catch_handler_11512141:
    .get_results ($P5011) 
    set $I10001, 1
    set $P5011["handled"], $I10001
    nqp_get_sc_object $P10001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    finalize $P5011
    pop_upto_eh $P5011
    pop_eh 
    set $P5012, $P10001
    goto skip_handler_11502140
  skip_handler_11502140:
.annotate 'line', 3588
    nqp_get_sc_object $P5014, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    find_lex $P5016, "self"
    nqp_decontainerize $P5015, $P5016
    find_lex $P5017, "$desired"
    set $S5002, $P5017
    downcase $S5001, $S5002
    find_lex $P5018, "$post"
    $P5019 = $P5014."unbox"($P5015, $P101, $S5001, $P5018)
    find_lex $P5013, "RETURN"
    $P5020 = $P5013($P5019)
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_368_1366375329.52446") :anon :lex :outer("cuid_114_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3590
    .lex "$ops", $P101 
    .lex "$rtype", $P102 
    .lex "$reg", $P103 
    .local pmc fb_tmp_318 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
.annotate 'line', 3592
    nqp_get_sc_object $P5004, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5005 = $P5004."new"()
    set $P101, $P5005
    find_lex $P5006, "$desired"
    set $S5002, $P5006
    downcase $S5001, $S5002
    box $P5007, $S5001
    set $P102, $P5007
.annotate 'line', 3594
    find_dynamic_lex $P5008, "$*REGALLOC"
    unless_null $P5008, fallback2146
    nqp_get_sc_object $P5010, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5009, $P5010
    set fb_tmp_318, $P5009
    repr_defined $I5001, fb_tmp_318
    unless $I5001 goto if1154_else2147 
    set $P5011, fb_tmp_318["$REGALLOC"]
    set $P5013, $P5011
    goto if1154_end2148
  if1154_else2147:
    null $P5012
    set $P5013, $P5012
  if1154_end2148:
    unless_null $P5013, vivi_11552149
    nqp_get_sc_object $P5014, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5013, $P5014
  vivi_11552149:
    unless_null $P5013, vivi_11562150
    die "Contextual $*REGALLOC not found"
    box $P5015, "Contextual $*REGALLOC not found"
    set $P5013, $P5015
  vivi_11562150:
    set $P5008, $P5013
  fallback2146:
    set $S5004, $P102
    concat $S5003, "fresh_", $S5004
    $P5016 = $P5008.$S5003()
    set $P103, $P5016
.annotate 'line', 3595
    find_lex $P5017, "$post"
    $P101."push"($P5017)
.annotate 'line', 3596
    find_lex $P5018, "$post"
    $P101."push_pirop"("set", $P103, $P5018)
.annotate 'line', 3597
    $P101."result"($P103)
    find_lex $P5019, "RETURN"
    $P5020 = $P5019($P101)
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "infer_type" :subid("cuid_115_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3605
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5026 = 'cuid_369_1366375329.52446' 
    capture_lex $P5026 
    .lex "self", _lex_param_0 
    .lex "$inferee", _lex_param_1 
    .local pmc fb_tmp_319 
    set $S5002, _lex_param_1
    substr $S5001, $S5002, 0, 1
    iseq $I5001, $S5001, "$"
    unless $I5001 goto if1157_else2151 
.annotate 'line', 3606
    set $S5004, _lex_param_1
    substr $S5003, $S5004, 1, 1
    box $P5025, $S5003
    set $P5024, $P5025
    goto if1157_end2152
  if1157_else2151:
.annotate 'line', 3609
    find_dynamic_lex $P5001, "$*BLOCK"
    unless_null $P5001, fallback2155
    nqp_get_sc_object $P5003, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5002, $P5003
    set fb_tmp_319, $P5002
    repr_defined $I5002, fb_tmp_319
    unless $I5002 goto if1159_else2156 
    set $P5004, fb_tmp_319["$BLOCK"]
    set $P5006, $P5004
    goto if1159_end2157
  if1159_else2156:
    null $P5005
    set $P5006, $P5005
  if1159_end2157:
    unless_null $P5006, vivi_11602158
    nqp_get_sc_object $P5007, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5006, $P5007
  vivi_11602158:
    unless_null $P5006, vivi_11612159
    die "Contextual $*BLOCK not found"
    box $P5008, "Contextual $*BLOCK not found"
    set $P5006, $P5008
  vivi_11612159:
    set $P5001, $P5006
  fallback2155:
    $P5009 = $P5001."reg_type"(_lex_param_1)
    unless $P5009 goto if1158_else2153 
    .const 'Sub' $P5010 = 'cuid_369_1366375329.52446' 
    capture_lex $P5010
    $P5011 = $P5010($P5009)
    set $P5023, $P5011
    goto if1158_end2154
  if1158_else2153:
    set $S5006, _lex_param_1
    substr $S5005, $S5006, 0, 1
    iseq $I5003, $S5005, "\""
    set $I5005, $I5003
    if $I5003 goto unless1165_end2167 
    set $S5008, _lex_param_1
    substr $S5007, $S5008, 0, 6
    iseq $I5004, $S5007, "utf8:\""
    set $I5005, $I5004
  unless1165_end2167:
    set $I5007, $I5005
    if $I5005 goto unless1164_end2165 
    set $S5010, _lex_param_1
    substr $S5009, $S5010, 0, 6
    iseq $I5006, $S5009, "ucs4:\""
    set $I5007, $I5006
  unless1164_end2165:
    set $I5009, $I5007
    if $I5007 goto unless1163_end2163 
    set $S5012, _lex_param_1
    substr $S5011, $S5012, 0, 9
    iseq $I5008, $S5011, "unicode:\""
    set $I5009, $I5008
  unless1163_end2163:
    unless $I5009 goto if1162_else2160 
.annotate 'line', 3615

    box $P5022, "s"
    set $P5021, $P5022
    goto if1162_end2161
  if1162_else2160:
    set $S5014, _lex_param_1
    substr $S5013, $S5014, 0, 6
    iseq $I5010, $S5013, ".const"
    unless $I5010 goto if1166_else2168 
.annotate 'line', 3618

    box $P5020, "P"
    set $P5019, $P5020
    goto if1166_end2169
  if1166_else2168:
    set $S5016, _lex_param_1
    substr $S5015, $S5016, 0, 1
    iseq $I5011, $S5015, "."
    unless $I5011 goto if1167_else2170 
.annotate 'line', 3621

    box $P5018, "i"
    set $P5017, $P5018
    goto if1167_end2171
  if1167_else2170:
    set $S5017, _lex_param_1
    index $I5013, $S5017, ".", 0
    set $N5001, $I5013
    set $N5002, 0
    isgt $I5012, $N5001, $N5002
    unless $I5012 goto if1168_else2172 
.annotate 'line', 3624

    box $P5016, "n"
    set $P5015, $P5016
    goto if1168_end2173
  if1168_else2172:
    set $N5003, _lex_param_1
    set $S5018, $N5003
    set $S5019, _lex_param_1
    iseq $I5014, $S5018, $S5019
    unless $I5014 goto if1169_else2174 
.annotate 'line', 3627

    box $P5014, "i"
    set $P5013, $P5014
    goto if1169_end2175
  if1169_else2174:
.annotate 'line', 3630
    set $S5022, _lex_param_1
    concat $S5021, "Cannot infer type from '", $S5022
    concat $S5020, $S5021, "'"
    box $P5012, $S5020
    die $P5012
    set $P5013, $P5012
  if1169_end2175:
    set $P5015, $P5013
  if1168_end2173:
    set $P5017, $P5015
  if1167_end2171:
    set $P5019, $P5017
  if1166_end2169:
    set $P5021, $P5019
  if1162_end2161:
    set $P5023, $P5021
  if1158_end2154:
    set $P5024, $P5023
  if1157_end2152:
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_369_1366375329.52446") :anon :lex :outer("cuid_115_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3609
    .param pmc _lex_param_0 
    .lex "$type", _lex_param_0 
    set $S5002, _lex_param_0
    downcase $S5001, $S5002
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_116_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3635
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_32 :opt_flag 
    .const 'Sub' $P5484 = 'cuid_370_1366375329.52446' 
    capture_lex $P5484 
    .lex "$ops", $P101 
    .lex "$prefix", $P102 
    .lex "%*REG", $P103 
    .lex "$reglist", $P104 
    .lex "$startlabel", $P105 
    .lex "$donelabel", $P106 
    .lex "$restartlabel", $P107 
    .lex "$faillabel", $P108 
    .lex "$jumplabel", $P109 
    .lex "$cutlabel", $P110 
    .lex "$cstacklabel", $P111 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$want", _lex_param_2 
    .local pmc fb_tmp_320 
    .local pmc pkg_viv_tmp_7 
    .local pmc fb_tmp_322 
    .local pmc pkg_viv_tmp_9 
    .local pmc fb_tmp_323 
    .local pmc fb_tmp_324 
    .local pmc pkg_viv_tmp_10 
    .local pmc fb_tmp_325 
    .local pmc fb_tmp_326 
    .local pmc pkg_viv_tmp_11 
    .local pmc fb_tmp_327 
    .local pmc fb_tmp_328 
    .local pmc pkg_viv_tmp_12 
    .local pmc fb_tmp_329 
    .local pmc fb_tmp_330 
    .local pmc pkg_viv_tmp_13 
    .local pmc fb_tmp_331 
    .local pmc fb_tmp_332 
    .local pmc pkg_viv_tmp_14 
    .local pmc fb_tmp_333 
    .local pmc fb_tmp_334 
    .local pmc pkg_viv_tmp_15 
    .local pmc fb_tmp_335 
    .local pmc fb_tmp_336 
    .local pmc pkg_viv_tmp_16 
    .local pmc fb_tmp_337 
    .local pmc fb_tmp_338 
    .local pmc pkg_viv_tmp_17 
    .local pmc fb_tmp_339 
    .local pmc fb_tmp_340 
    .local pmc pkg_viv_tmp_18 
    .local pmc fb_tmp_341 
    .local pmc fb_tmp_342 
    .local pmc pkg_viv_tmp_19 
    .local pmc fb_tmp_343 
    .local pmc fb_tmp_344 
    .local pmc pkg_viv_tmp_20 
    .local pmc fb_tmp_345 
    .local pmc fb_tmp_346 
    .local pmc pkg_viv_tmp_21 
    .local pmc fb_tmp_347 
    .local pmc fb_tmp_348 
    .local pmc pkg_viv_tmp_22 
    .local pmc fb_tmp_349 
    .local pmc fb_tmp_350 
    .local pmc pkg_viv_tmp_23 
    .local pmc fb_tmp_351 
    .local pmc fb_tmp_352 
    .local pmc pkg_viv_tmp_24 
    .local pmc fb_tmp_353 
    .local pmc fb_tmp_354 
    .local pmc pkg_viv_tmp_25 
    .local pmc fb_tmp_355 
    .local pmc fb_tmp_356 
    .local pmc pkg_viv_tmp_26 
    .local pmc fb_tmp_357 
    .local pmc fb_tmp_358 
    .local pmc pkg_viv_tmp_27 
    .local pmc fb_tmp_359 
    .local pmc fb_tmp_360 
    .local pmc pkg_viv_tmp_28 
    .local pmc fb_tmp_361 
    .local pmc fb_tmp_362 
    .local pmc pkg_viv_tmp_29 
    .local pmc fb_tmp_363 
    .local pmc fb_tmp_364 
    .local pmc pkg_viv_tmp_30 
    .local pmc fb_tmp_365 
    .local pmc fb_tmp_366 
    .local pmc pkg_viv_tmp_31 
    .local pmc fb_tmp_367 
    .local pmc fb_tmp_368 
    .local pmc pkg_viv_tmp_32 
    .local pmc fb_tmp_369 
    .local pmc fb_tmp_370 
    .local pmc pkg_viv_tmp_33 
    .local pmc fb_tmp_371 
    .local pmc fb_tmp_372 
    .local pmc pkg_viv_tmp_34 
    .local pmc fb_tmp_373 
    .local pmc fb_tmp_374 
    .local pmc pkg_viv_tmp_35 
    .local pmc fb_tmp_375 
    .local pmc fb_tmp_376 
    .local pmc pkg_viv_tmp_36 
    .local pmc fb_tmp_377 
    .local pmc fb_tmp_378 
    .local pmc pkg_viv_tmp_37 
    .local pmc fb_tmp_379 
    .local pmc fb_tmp_380 
    .local pmc pkg_viv_tmp_38 
    .local pmc fb_tmp_381 
    .local pmc fb_tmp_382 
    .local pmc pkg_viv_tmp_39 
    .local pmc fb_tmp_383 
    .local pmc fb_tmp_384 
    .local pmc pkg_viv_tmp_40 
    .local pmc fb_tmp_385 
    .local pmc fb_tmp_386 
    .local pmc pkg_viv_tmp_41 
    .local pmc fb_tmp_387 
    .local pmc fb_tmp_388 
    .local pmc pkg_viv_tmp_42 
    .local pmc fb_tmp_389 
    .local pmc fb_tmp_390 
    .local pmc pkg_viv_tmp_43 
    .local pmc fb_tmp_391 
    .local pmc fb_tmp_392 
    .local pmc pkg_viv_tmp_44 
    .local pmc fb_tmp_393 
    .local pmc fb_tmp_394 
    .local pmc pkg_viv_tmp_45 
    .local pmc fb_tmp_395 
    .local pmc fb_tmp_396 
    .local pmc pkg_viv_tmp_46 
    .local pmc fb_tmp_397 
    .local pmc fb_tmp_398 
    .local pmc pkg_viv_tmp_47 
    .local pmc fb_tmp_399 
    .local pmc fb_tmp_400 
    .local pmc pkg_viv_tmp_48 
    if haz_param_32, default2510
    nqp_get_sc_object $P5483, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set _lex_param_2, $P5483
  default2510:
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    new $P5003, 'Hash'
    set $P103, $P5003
    nqp_get_sc_object $P5004, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P105, $P5005
    nqp_get_sc_object $P5006, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P106, $P5006
    nqp_get_sc_object $P5007, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P107, $P5007
    nqp_get_sc_object $P5008, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P108, $P5008
    nqp_get_sc_object $P5009, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P109, $P5009
    nqp_get_sc_object $P5010, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P110, $P5010
    nqp_get_sc_object $P5011, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P111, $P5011
.annotate 'line', 3636
    nqp_decontainerize $P5012, _lex_param_0
    $P5013 = $P5012."post_new"("Ops")
    set $P101, $P5013
.annotate 'line', 3637
    $P5014 = _lex_param_1."node"()
    unless $P5014 goto if1170_end2177 
    $P5015 = _lex_param_1."node"()
    $P5016 = $P101."node"($P5015)
  if1170_end2177:
.annotate 'line', 3638
    nqp_decontainerize $P5017, _lex_param_0
    $P5018 = $P5017."unique"("rx")
    set $S5002, $P5018
    concat $S5001, $S5002, "_"
    box $P5019, $S5001
    set $P102, $P5019
    split $P5027, " ", "start pmc tgt string pos int off int eos int rep int cur pmc curclass pmc bstack pmc cstack pmc"
    set $P104, $P5027
  while1174_test2183:
    set $P5030, $P104
    unless $P104 goto while1174_done2187 
  while1174_redo2185:
    .const 'Sub' $P5028 = 'cuid_370_1366375329.52446' 
    capture_lex $P5028
    $P5029 = $P5028()
    set $P5030, $P5029
    goto while1174_test2183 
  while1174_done2187:
.annotate 'line', 3650
    nqp_decontainerize $P5031, _lex_param_0
    set $S5004, $P102
    concat $S5003, $S5004, "start"
    $P5032 = $P5031."post_new"("Label", $S5003 :named("name"))
    set $P105, $P5032
.annotate 'line', 3651
    nqp_decontainerize $P5033, _lex_param_0
    set $S5006, $P102
    concat $S5005, $S5006, "done"
    $P5034 = $P5033."post_new"("Label", $S5005 :named("name"))
    set $P106, $P5034
.annotate 'line', 3652
    nqp_decontainerize $P5035, _lex_param_0
    set $S5008, $P102
    concat $S5007, $S5008, "restart"
    $P5036 = $P5035."post_new"("Label", $S5007 :named("name"))
    set $P107, $P5036
.annotate 'line', 3653
    nqp_decontainerize $P5037, _lex_param_0
    set $S5010, $P102
    concat $S5009, $S5010, "fail"
    $P5038 = $P5037."post_new"("Label", $S5009 :named("name"))
    set $P108, $P5038
.annotate 'line', 3654
    nqp_decontainerize $P5039, _lex_param_0
    set $S5012, $P102
    concat $S5011, $S5012, "jump"
    $P5040 = $P5039."post_new"("Label", $S5011 :named("name"))
    set $P109, $P5040
.annotate 'line', 3655
    nqp_decontainerize $P5041, _lex_param_0
    set $S5014, $P102
    concat $S5013, $S5014, "cut"
    $P5042 = $P5041."post_new"("Label", $S5013 :named("name"))
    set $P110, $P5042
.annotate 'line', 3656
    nqp_decontainerize $P5043, _lex_param_0
    set $S5016, $P102
    concat $S5015, $S5016, "cstack_done"
    $P5044 = $P5043."post_new"("Label", $S5015 :named("name"))
    set $P111, $P5044
    unless_null $P103, fallback2193
    nqp_get_sc_object $P5046, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5045, $P5046
    set pkg_viv_tmp_9, $P5045
    set fb_tmp_322, pkg_viv_tmp_9
    repr_defined $I5002, fb_tmp_322
    unless $I5002 goto if1178_else2194 
    set $P5047, fb_tmp_322["%REG"]
    set $P5049, $P5047
    goto if1178_end2195
  if1178_else2194:
    null $P5048
    set $P5049, $P5048
  if1178_end2195:
    unless_null $P5049, vivi_11792196
    new $P5050, 'Hash'
    set pkg_viv_tmp_9["%REG"], $P5050
    set $P5049, $P5050
  vivi_11792196:
    unless_null $P5049, vivi_11802197
    die "Contextual %*REG not found"
    box $P5051, "Contextual %*REG not found"
    set $P5049, $P5051
  vivi_11802197:
    set $P103, $P5049
  fallback2193:
    set $P103["fail"], $P108
.annotate 'line', 3660
    unless_null $P103, fallback2200
    nqp_get_sc_object $P5053, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5052, $P5053
    set pkg_viv_tmp_10, $P5052
    set fb_tmp_324, pkg_viv_tmp_10
    repr_defined $I5004, fb_tmp_324
    unless $I5004 goto if1182_else2201 
    set $P5054, fb_tmp_324["%REG"]
    set $P5056, $P5054
    goto if1182_end2202
  if1182_else2201:
    null $P5055
    set $P5056, $P5055
  if1182_end2202:
    unless_null $P5056, vivi_11832203
    new $P5057, 'Hash'
    set pkg_viv_tmp_10["%REG"], $P5057
    set $P5056, $P5057
  vivi_11832203:
    unless_null $P5056, vivi_11842204
    die "Contextual %*REG not found"
    box $P5058, "Contextual %*REG not found"
    set $P5056, $P5058
  vivi_11842204:
    set $P103, $P5056
  fallback2200:
    set fb_tmp_323, $P103
    repr_defined $I5003, fb_tmp_323
    unless $I5003 goto if1181_else2198 
    set $P5059, fb_tmp_323["start"]
    set $P5061, $P5059
    goto if1181_end2199
  if1181_else2198:
    null $P5060
    set $P5061, $P5060
  if1181_end2199:
    unless_null $P5061, vivi_11852205
    nqp_get_sc_object $P5062, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5061, $P5062
  vivi_11852205:
    $P101."push_pirop"("callmethod", "\"!cursor_start_all\"", "self", $P5061 :named("result"))
.annotate 'line', 3661
    unless_null $P103, fallback2208
    nqp_get_sc_object $P5064, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5063, $P5064
    set pkg_viv_tmp_11, $P5063
    set fb_tmp_326, pkg_viv_tmp_11
    repr_defined $I5006, fb_tmp_326
    unless $I5006 goto if1187_else2209 
    set $P5065, fb_tmp_326["%REG"]
    set $P5067, $P5065
    goto if1187_end2210
  if1187_else2209:
    null $P5066
    set $P5067, $P5066
  if1187_end2210:
    unless_null $P5067, vivi_11882211
    new $P5068, 'Hash'
    set pkg_viv_tmp_11["%REG"], $P5068
    set $P5067, $P5068
  vivi_11882211:
    unless_null $P5067, vivi_11892212
    die "Contextual %*REG not found"
    box $P5069, "Contextual %*REG not found"
    set $P5067, $P5069
  vivi_11892212:
    set $P103, $P5067
  fallback2208:
    set fb_tmp_325, $P103
    repr_defined $I5005, fb_tmp_325
    unless $I5005 goto if1186_else2206 
    set $P5070, fb_tmp_325["cur"]
    set $P5072, $P5070
    goto if1186_end2207
  if1186_else2206:
    null $P5071
    set $P5072, $P5071
  if1186_end2207:
    unless_null $P5072, vivi_11902213
    nqp_get_sc_object $P5073, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5072, $P5073
  vivi_11902213:
    unless_null $P103, fallback2216
    nqp_get_sc_object $P5075, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5074, $P5075
    set pkg_viv_tmp_12, $P5074
    set fb_tmp_328, pkg_viv_tmp_12
    repr_defined $I5008, fb_tmp_328
    unless $I5008 goto if1192_else2217 
    set $P5076, fb_tmp_328["%REG"]
    set $P5078, $P5076
    goto if1192_end2218
  if1192_else2217:
    null $P5077
    set $P5078, $P5077
  if1192_end2218:
    unless_null $P5078, vivi_11932219
    new $P5079, 'Hash'
    set pkg_viv_tmp_12["%REG"], $P5079
    set $P5078, $P5079
  vivi_11932219:
    unless_null $P5078, vivi_11942220
    die "Contextual %*REG not found"
    box $P5080, "Contextual %*REG not found"
    set $P5078, $P5080
  vivi_11942220:
    set $P103, $P5078
  fallback2216:
    set fb_tmp_327, $P103
    repr_defined $I5007, fb_tmp_327
    unless $I5007 goto if1191_else2214 
    set $P5081, fb_tmp_327["start"]
    set $P5083, $P5081
    goto if1191_end2215
  if1191_else2214:
    null $P5082
    set $P5083, $P5082
  if1191_end2215:
    unless_null $P5083, vivi_11952221
    nqp_get_sc_object $P5084, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5083, $P5084
  vivi_11952221:
    set $S5018, $P5083
    concat $S5017, $S5018, "[0]"
    $P101."push_pirop"("set", $P5072, $S5017)
.annotate 'line', 3662
    unless_null $P103, fallback2224
    nqp_get_sc_object $P5086, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5085, $P5086
    set pkg_viv_tmp_13, $P5085
    set fb_tmp_330, pkg_viv_tmp_13
    repr_defined $I5010, fb_tmp_330
    unless $I5010 goto if1197_else2225 
    set $P5087, fb_tmp_330["%REG"]
    set $P5089, $P5087
    goto if1197_end2226
  if1197_else2225:
    null $P5088
    set $P5089, $P5088
  if1197_end2226:
    unless_null $P5089, vivi_11982227
    new $P5090, 'Hash'
    set pkg_viv_tmp_13["%REG"], $P5090
    set $P5089, $P5090
  vivi_11982227:
    unless_null $P5089, vivi_11992228
    die "Contextual %*REG not found"
    box $P5091, "Contextual %*REG not found"
    set $P5089, $P5091
  vivi_11992228:
    set $P103, $P5089
  fallback2224:
    set fb_tmp_329, $P103
    repr_defined $I5009, fb_tmp_329
    unless $I5009 goto if1196_else2222 
    set $P5092, fb_tmp_329["tgt"]
    set $P5094, $P5092
    goto if1196_end2223
  if1196_else2222:
    null $P5093
    set $P5094, $P5093
  if1196_end2223:
    unless_null $P5094, vivi_12002229
    nqp_get_sc_object $P5095, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5094, $P5095
  vivi_12002229:
    unless_null $P103, fallback2232
    nqp_get_sc_object $P5097, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5096, $P5097
    set pkg_viv_tmp_14, $P5096
    set fb_tmp_332, pkg_viv_tmp_14
    repr_defined $I5012, fb_tmp_332
    unless $I5012 goto if1202_else2233 
    set $P5098, fb_tmp_332["%REG"]
    set $P5100, $P5098
    goto if1202_end2234
  if1202_else2233:
    null $P5099
    set $P5100, $P5099
  if1202_end2234:
    unless_null $P5100, vivi_12032235
    new $P5101, 'Hash'
    set pkg_viv_tmp_14["%REG"], $P5101
    set $P5100, $P5101
  vivi_12032235:
    unless_null $P5100, vivi_12042236
    die "Contextual %*REG not found"
    box $P5102, "Contextual %*REG not found"
    set $P5100, $P5102
  vivi_12042236:
    set $P103, $P5100
  fallback2232:
    set fb_tmp_331, $P103
    repr_defined $I5011, fb_tmp_331
    unless $I5011 goto if1201_else2230 
    set $P5103, fb_tmp_331["start"]
    set $P5105, $P5103
    goto if1201_end2231
  if1201_else2230:
    null $P5104
    set $P5105, $P5104
  if1201_end2231:
    unless_null $P5105, vivi_12052237
    nqp_get_sc_object $P5106, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5105, $P5106
  vivi_12052237:
    set $S5020, $P5105
    concat $S5019, $S5020, "[1]"
    $P101."push_pirop"("set", $P5094, $S5019)
.annotate 'line', 3663
    unless_null $P103, fallback2240
    nqp_get_sc_object $P5108, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5107, $P5108
    set pkg_viv_tmp_15, $P5107
    set fb_tmp_334, pkg_viv_tmp_15
    repr_defined $I5014, fb_tmp_334
    unless $I5014 goto if1207_else2241 
    set $P5109, fb_tmp_334["%REG"]
    set $P5111, $P5109
    goto if1207_end2242
  if1207_else2241:
    null $P5110
    set $P5111, $P5110
  if1207_end2242:
    unless_null $P5111, vivi_12082243
    new $P5112, 'Hash'
    set pkg_viv_tmp_15["%REG"], $P5112
    set $P5111, $P5112
  vivi_12082243:
    unless_null $P5111, vivi_12092244
    die "Contextual %*REG not found"
    box $P5113, "Contextual %*REG not found"
    set $P5111, $P5113
  vivi_12092244:
    set $P103, $P5111
  fallback2240:
    set fb_tmp_333, $P103
    repr_defined $I5013, fb_tmp_333
    unless $I5013 goto if1206_else2238 
    set $P5114, fb_tmp_333["pos"]
    set $P5116, $P5114
    goto if1206_end2239
  if1206_else2238:
    null $P5115
    set $P5116, $P5115
  if1206_end2239:
    unless_null $P5116, vivi_12102245
    nqp_get_sc_object $P5117, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5116, $P5117
  vivi_12102245:
    unless_null $P103, fallback2248
    nqp_get_sc_object $P5119, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5118, $P5119
    set pkg_viv_tmp_16, $P5118
    set fb_tmp_336, pkg_viv_tmp_16
    repr_defined $I5016, fb_tmp_336
    unless $I5016 goto if1212_else2249 
    set $P5120, fb_tmp_336["%REG"]
    set $P5122, $P5120
    goto if1212_end2250
  if1212_else2249:
    null $P5121
    set $P5122, $P5121
  if1212_end2250:
    unless_null $P5122, vivi_12132251
    new $P5123, 'Hash'
    set pkg_viv_tmp_16["%REG"], $P5123
    set $P5122, $P5123
  vivi_12132251:
    unless_null $P5122, vivi_12142252
    die "Contextual %*REG not found"
    box $P5124, "Contextual %*REG not found"
    set $P5122, $P5124
  vivi_12142252:
    set $P103, $P5122
  fallback2248:
    set fb_tmp_335, $P103
    repr_defined $I5015, fb_tmp_335
    unless $I5015 goto if1211_else2246 
    set $P5125, fb_tmp_335["start"]
    set $P5127, $P5125
    goto if1211_end2247
  if1211_else2246:
    null $P5126
    set $P5127, $P5126
  if1211_end2247:
    unless_null $P5127, vivi_12152253
    nqp_get_sc_object $P5128, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5127, $P5128
  vivi_12152253:
    set $S5022, $P5127
    concat $S5021, $S5022, "[2]"
    $P101."push_pirop"("set", $P5116, $S5021)
.annotate 'line', 3664
    unless_null $P103, fallback2256
    nqp_get_sc_object $P5130, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5129, $P5130
    set pkg_viv_tmp_17, $P5129
    set fb_tmp_338, pkg_viv_tmp_17
    repr_defined $I5018, fb_tmp_338
    unless $I5018 goto if1217_else2257 
    set $P5131, fb_tmp_338["%REG"]
    set $P5133, $P5131
    goto if1217_end2258
  if1217_else2257:
    null $P5132
    set $P5133, $P5132
  if1217_end2258:
    unless_null $P5133, vivi_12182259
    new $P5134, 'Hash'
    set pkg_viv_tmp_17["%REG"], $P5134
    set $P5133, $P5134
  vivi_12182259:
    unless_null $P5133, vivi_12192260
    die "Contextual %*REG not found"
    box $P5135, "Contextual %*REG not found"
    set $P5133, $P5135
  vivi_12192260:
    set $P103, $P5133
  fallback2256:
    set fb_tmp_337, $P103
    repr_defined $I5017, fb_tmp_337
    unless $I5017 goto if1216_else2254 
    set $P5136, fb_tmp_337["curclass"]
    set $P5138, $P5136
    goto if1216_end2255
  if1216_else2254:
    null $P5137
    set $P5138, $P5137
  if1216_end2255:
    unless_null $P5138, vivi_12202261
    nqp_get_sc_object $P5139, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5138, $P5139
  vivi_12202261:
    unless_null $P103, fallback2264
    nqp_get_sc_object $P5141, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5140, $P5141
    set pkg_viv_tmp_18, $P5140
    set fb_tmp_340, pkg_viv_tmp_18
    repr_defined $I5020, fb_tmp_340
    unless $I5020 goto if1222_else2265 
    set $P5142, fb_tmp_340["%REG"]
    set $P5144, $P5142
    goto if1222_end2266
  if1222_else2265:
    null $P5143
    set $P5144, $P5143
  if1222_end2266:
    unless_null $P5144, vivi_12232267
    new $P5145, 'Hash'
    set pkg_viv_tmp_18["%REG"], $P5145
    set $P5144, $P5145
  vivi_12232267:
    unless_null $P5144, vivi_12242268
    die "Contextual %*REG not found"
    box $P5146, "Contextual %*REG not found"
    set $P5144, $P5146
  vivi_12242268:
    set $P103, $P5144
  fallback2264:
    set fb_tmp_339, $P103
    repr_defined $I5019, fb_tmp_339
    unless $I5019 goto if1221_else2262 
    set $P5147, fb_tmp_339["start"]
    set $P5149, $P5147
    goto if1221_end2263
  if1221_else2262:
    null $P5148
    set $P5149, $P5148
  if1221_end2263:
    unless_null $P5149, vivi_12252269
    nqp_get_sc_object $P5150, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5149, $P5150
  vivi_12252269:
    set $S5024, $P5149
    concat $S5023, $S5024, "[3]"
    $P101."push_pirop"("set", $P5138, $S5023)
.annotate 'line', 3665
    unless_null $P103, fallback2272
    nqp_get_sc_object $P5152, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5151, $P5152
    set pkg_viv_tmp_19, $P5151
    set fb_tmp_342, pkg_viv_tmp_19
    repr_defined $I5022, fb_tmp_342
    unless $I5022 goto if1227_else2273 
    set $P5153, fb_tmp_342["%REG"]
    set $P5155, $P5153
    goto if1227_end2274
  if1227_else2273:
    null $P5154
    set $P5155, $P5154
  if1227_end2274:
    unless_null $P5155, vivi_12282275
    new $P5156, 'Hash'
    set pkg_viv_tmp_19["%REG"], $P5156
    set $P5155, $P5156
  vivi_12282275:
    unless_null $P5155, vivi_12292276
    die "Contextual %*REG not found"
    box $P5157, "Contextual %*REG not found"
    set $P5155, $P5157
  vivi_12292276:
    set $P103, $P5155
  fallback2272:
    set fb_tmp_341, $P103
    repr_defined $I5021, fb_tmp_341
    unless $I5021 goto if1226_else2270 
    set $P5158, fb_tmp_341["bstack"]
    set $P5160, $P5158
    goto if1226_end2271
  if1226_else2270:
    null $P5159
    set $P5160, $P5159
  if1226_end2271:
    unless_null $P5160, vivi_12302277
    nqp_get_sc_object $P5161, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5160, $P5161
  vivi_12302277:
    unless_null $P103, fallback2280
    nqp_get_sc_object $P5163, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5162, $P5163
    set pkg_viv_tmp_20, $P5162
    set fb_tmp_344, pkg_viv_tmp_20
    repr_defined $I5024, fb_tmp_344
    unless $I5024 goto if1232_else2281 
    set $P5164, fb_tmp_344["%REG"]
    set $P5166, $P5164
    goto if1232_end2282
  if1232_else2281:
    null $P5165
    set $P5166, $P5165
  if1232_end2282:
    unless_null $P5166, vivi_12332283
    new $P5167, 'Hash'
    set pkg_viv_tmp_20["%REG"], $P5167
    set $P5166, $P5167
  vivi_12332283:
    unless_null $P5166, vivi_12342284
    die "Contextual %*REG not found"
    box $P5168, "Contextual %*REG not found"
    set $P5166, $P5168
  vivi_12342284:
    set $P103, $P5166
  fallback2280:
    set fb_tmp_343, $P103
    repr_defined $I5023, fb_tmp_343
    unless $I5023 goto if1231_else2278 
    set $P5169, fb_tmp_343["start"]
    set $P5171, $P5169
    goto if1231_end2279
  if1231_else2278:
    null $P5170
    set $P5171, $P5170
  if1231_end2279:
    unless_null $P5171, vivi_12352285
    nqp_get_sc_object $P5172, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5171, $P5172
  vivi_12352285:
    set $S5026, $P5171
    concat $S5025, $S5026, "[4]"
    $P101."push_pirop"("set", $P5160, $S5025)
.annotate 'line', 3666
    unless_null $P103, fallback2288
    nqp_get_sc_object $P5174, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5173, $P5174
    set pkg_viv_tmp_21, $P5173
    set fb_tmp_346, pkg_viv_tmp_21
    repr_defined $I5026, fb_tmp_346
    unless $I5026 goto if1237_else2289 
    set $P5175, fb_tmp_346["%REG"]
    set $P5177, $P5175
    goto if1237_end2290
  if1237_else2289:
    null $P5176
    set $P5177, $P5176
  if1237_end2290:
    unless_null $P5177, vivi_12382291
    new $P5178, 'Hash'
    set pkg_viv_tmp_21["%REG"], $P5178
    set $P5177, $P5178
  vivi_12382291:
    unless_null $P5177, vivi_12392292
    die "Contextual %*REG not found"
    box $P5179, "Contextual %*REG not found"
    set $P5177, $P5179
  vivi_12392292:
    set $P103, $P5177
  fallback2288:
    set fb_tmp_345, $P103
    repr_defined $I5025, fb_tmp_345
    unless $I5025 goto if1236_else2286 
    set $P5180, fb_tmp_345["start"]
    set $P5182, $P5180
    goto if1236_end2287
  if1236_else2286:
    null $P5181
    set $P5182, $P5181
  if1236_end2287:
    unless_null $P5182, vivi_12402293
    nqp_get_sc_object $P5183, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5182, $P5183
  vivi_12402293:
    set $S5028, $P5182
    concat $S5027, $S5028, "[5]"
    $P101."push_pirop"("set", "$I19", $S5027)
.annotate 'line', 3667
    unless_null $P103, fallback2296
    nqp_get_sc_object $P5185, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5184, $P5185
    set pkg_viv_tmp_22, $P5184
    set fb_tmp_348, pkg_viv_tmp_22
    repr_defined $I5028, fb_tmp_348
    unless $I5028 goto if1242_else2297 
    set $P5186, fb_tmp_348["%REG"]
    set $P5188, $P5186
    goto if1242_end2298
  if1242_else2297:
    null $P5187
    set $P5188, $P5187
  if1242_end2298:
    unless_null $P5188, vivi_12432299
    new $P5189, 'Hash'
    set pkg_viv_tmp_22["%REG"], $P5189
    set $P5188, $P5189
  vivi_12432299:
    unless_null $P5188, vivi_12442300
    die "Contextual %*REG not found"
    box $P5190, "Contextual %*REG not found"
    set $P5188, $P5190
  vivi_12442300:
    set $P103, $P5188
  fallback2296:
    set fb_tmp_347, $P103
    repr_defined $I5027, fb_tmp_347
    unless $I5027 goto if1241_else2294 
    set $P5191, fb_tmp_347["cur"]
    set $P5193, $P5191
    goto if1241_end2295
  if1241_else2294:
    null $P5192
    set $P5193, $P5192
  if1241_end2295:
    unless_null $P5193, vivi_12452301
    nqp_get_sc_object $P5194, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5193, $P5194
  vivi_12452301:
    $P101."push_pirop"("store_lex", utf8:"unicode:\"$\\x{a2}\"", $P5193)
.annotate 'line', 3668
    unless_null $P103, fallback2304
    nqp_get_sc_object $P5196, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5195, $P5196
    set pkg_viv_tmp_23, $P5195
    set fb_tmp_350, pkg_viv_tmp_23
    repr_defined $I5030, fb_tmp_350
    unless $I5030 goto if1247_else2305 
    set $P5197, fb_tmp_350["%REG"]
    set $P5199, $P5197
    goto if1247_end2306
  if1247_else2305:
    null $P5198
    set $P5199, $P5198
  if1247_end2306:
    unless_null $P5199, vivi_12482307
    new $P5200, 'Hash'
    set pkg_viv_tmp_23["%REG"], $P5200
    set $P5199, $P5200
  vivi_12482307:
    unless_null $P5199, vivi_12492308
    die "Contextual %*REG not found"
    box $P5201, "Contextual %*REG not found"
    set $P5199, $P5201
  vivi_12492308:
    set $P103, $P5199
  fallback2304:
    set fb_tmp_349, $P103
    repr_defined $I5029, fb_tmp_349
    unless $I5029 goto if1246_else2302 
    set $P5202, fb_tmp_349["eos"]
    set $P5204, $P5202
    goto if1246_end2303
  if1246_else2302:
    null $P5203
    set $P5204, $P5203
  if1246_end2303:
    unless_null $P5204, vivi_12502309
    nqp_get_sc_object $P5205, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5204, $P5205
  vivi_12502309:
    unless_null $P103, fallback2312
    nqp_get_sc_object $P5207, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5206, $P5207
    set pkg_viv_tmp_24, $P5206
    set fb_tmp_352, pkg_viv_tmp_24
    repr_defined $I5032, fb_tmp_352
    unless $I5032 goto if1252_else2313 
    set $P5208, fb_tmp_352["%REG"]
    set $P5210, $P5208
    goto if1252_end2314
  if1252_else2313:
    null $P5209
    set $P5210, $P5209
  if1252_end2314:
    unless_null $P5210, vivi_12532315
    new $P5211, 'Hash'
    set pkg_viv_tmp_24["%REG"], $P5211
    set $P5210, $P5211
  vivi_12532315:
    unless_null $P5210, vivi_12542316
    die "Contextual %*REG not found"
    box $P5212, "Contextual %*REG not found"
    set $P5210, $P5212
  vivi_12542316:
    set $P103, $P5210
  fallback2312:
    set fb_tmp_351, $P103
    repr_defined $I5031, fb_tmp_351
    unless $I5031 goto if1251_else2310 
    set $P5213, fb_tmp_351["tgt"]
    set $P5215, $P5213
    goto if1251_end2311
  if1251_else2310:
    null $P5214
    set $P5215, $P5214
  if1251_end2311:
    unless_null $P5215, vivi_12552317
    nqp_get_sc_object $P5216, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5215, $P5216
  vivi_12552317:
    $P101."push_pirop"("length", $P5204, $P5215)
.annotate 'line', 3669
    $P101."push_pirop"("eq", "$I19", 1, $P107)
.annotate 'line', 3670
    unless_null $P103, fallback2320
    nqp_get_sc_object $P5218, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5217, $P5218
    set pkg_viv_tmp_25, $P5217
    set fb_tmp_354, pkg_viv_tmp_25
    repr_defined $I5034, fb_tmp_354
    unless $I5034 goto if1257_else2321 
    set $P5219, fb_tmp_354["%REG"]
    set $P5221, $P5219
    goto if1257_end2322
  if1257_else2321:
    null $P5220
    set $P5221, $P5220
  if1257_end2322:
    unless_null $P5221, vivi_12582323
    new $P5222, 'Hash'
    set pkg_viv_tmp_25["%REG"], $P5222
    set $P5221, $P5222
  vivi_12582323:
    unless_null $P5221, vivi_12592324
    die "Contextual %*REG not found"
    box $P5223, "Contextual %*REG not found"
    set $P5221, $P5223
  vivi_12592324:
    set $P103, $P5221
  fallback2320:
    set fb_tmp_353, $P103
    repr_defined $I5033, fb_tmp_353
    unless $I5033 goto if1256_else2318 
    set $P5224, fb_tmp_353["pos"]
    set $P5226, $P5224
    goto if1256_end2319
  if1256_else2318:
    null $P5225
    set $P5226, $P5225
  if1256_end2319:
    unless_null $P5226, vivi_12602325
    nqp_get_sc_object $P5227, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5226, $P5227
  vivi_12602325:
    unless_null $P103, fallback2328
    nqp_get_sc_object $P5229, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5228, $P5229
    set pkg_viv_tmp_26, $P5228
    set fb_tmp_356, pkg_viv_tmp_26
    repr_defined $I5036, fb_tmp_356
    unless $I5036 goto if1262_else2329 
    set $P5230, fb_tmp_356["%REG"]
    set $P5232, $P5230
    goto if1262_end2330
  if1262_else2329:
    null $P5231
    set $P5232, $P5231
  if1262_end2330:
    unless_null $P5232, vivi_12632331
    new $P5233, 'Hash'
    set pkg_viv_tmp_26["%REG"], $P5233
    set $P5232, $P5233
  vivi_12632331:
    unless_null $P5232, vivi_12642332
    die "Contextual %*REG not found"
    box $P5234, "Contextual %*REG not found"
    set $P5232, $P5234
  vivi_12642332:
    set $P103, $P5232
  fallback2328:
    set fb_tmp_355, $P103
    repr_defined $I5035, fb_tmp_355
    unless $I5035 goto if1261_else2326 
    set $P5235, fb_tmp_355["eos"]
    set $P5237, $P5235
    goto if1261_end2327
  if1261_else2326:
    null $P5236
    set $P5237, $P5236
  if1261_end2327:
    unless_null $P5237, vivi_12652333
    nqp_get_sc_object $P5238, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5237, $P5238
  vivi_12652333:
    unless_null $P103, fallback2336
    nqp_get_sc_object $P5240, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5239, $P5240
    set pkg_viv_tmp_27, $P5239
    set fb_tmp_358, pkg_viv_tmp_27
    repr_defined $I5038, fb_tmp_358
    unless $I5038 goto if1267_else2337 
    set $P5241, fb_tmp_358["%REG"]
    set $P5243, $P5241
    goto if1267_end2338
  if1267_else2337:
    null $P5242
    set $P5243, $P5242
  if1267_end2338:
    unless_null $P5243, vivi_12682339
    new $P5244, 'Hash'
    set pkg_viv_tmp_27["%REG"], $P5244
    set $P5243, $P5244
  vivi_12682339:
    unless_null $P5243, vivi_12692340
    die "Contextual %*REG not found"
    box $P5245, "Contextual %*REG not found"
    set $P5243, $P5245
  vivi_12692340:
    set $P103, $P5243
  fallback2336:
    set fb_tmp_357, $P103
    repr_defined $I5037, fb_tmp_357
    unless $I5037 goto if1266_else2334 
    set $P5246, fb_tmp_357["fail"]
    set $P5248, $P5246
    goto if1266_end2335
  if1266_else2334:
    null $P5247
    set $P5248, $P5247
  if1266_end2335:
    unless_null $P5248, vivi_12702341
    nqp_get_sc_object $P5249, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5248, $P5249
  vivi_12702341:
    $P101."push_pirop"("gt", $P5226, $P5237, $P5248)
.annotate 'line', 3671
    nqp_decontainerize $P5250, _lex_param_0
    $P5251 = $P5250."regex_post"(_lex_param_1)
    $P101."push"($P5251)
.annotate 'line', 3672
    $P101."push"($P107)
.annotate 'line', 3673
    unless_null $P103, fallback2344
    nqp_get_sc_object $P5253, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5252, $P5253
    set pkg_viv_tmp_28, $P5252
    set fb_tmp_360, pkg_viv_tmp_28
    repr_defined $I5040, fb_tmp_360
    unless $I5040 goto if1272_else2345 
    set $P5254, fb_tmp_360["%REG"]
    set $P5256, $P5254
    goto if1272_end2346
  if1272_else2345:
    null $P5255
    set $P5256, $P5255
  if1272_end2346:
    unless_null $P5256, vivi_12732347
    new $P5257, 'Hash'
    set pkg_viv_tmp_28["%REG"], $P5257
    set $P5256, $P5257
  vivi_12732347:
    unless_null $P5256, vivi_12742348
    die "Contextual %*REG not found"
    box $P5258, "Contextual %*REG not found"
    set $P5256, $P5258
  vivi_12742348:
    set $P103, $P5256
  fallback2344:
    set fb_tmp_359, $P103
    repr_defined $I5039, fb_tmp_359
    unless $I5039 goto if1271_else2342 
    set $P5259, fb_tmp_359["cstack"]
    set $P5261, $P5259
    goto if1271_end2343
  if1271_else2342:
    null $P5260
    set $P5261, $P5260
  if1271_end2343:
    unless_null $P5261, vivi_12752349
    nqp_get_sc_object $P5262, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5261, $P5262
  vivi_12752349:
    unless_null $P103, fallback2352
    nqp_get_sc_object $P5264, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5263, $P5264
    set pkg_viv_tmp_29, $P5263
    set fb_tmp_362, pkg_viv_tmp_29
    repr_defined $I5042, fb_tmp_362
    unless $I5042 goto if1277_else2353 
    set $P5265, fb_tmp_362["%REG"]
    set $P5267, $P5265
    goto if1277_end2354
  if1277_else2353:
    null $P5266
    set $P5267, $P5266
  if1277_end2354:
    unless_null $P5267, vivi_12782355
    new $P5268, 'Hash'
    set pkg_viv_tmp_29["%REG"], $P5268
    set $P5267, $P5268
  vivi_12782355:
    unless_null $P5267, vivi_12792356
    die "Contextual %*REG not found"
    box $P5269, "Contextual %*REG not found"
    set $P5267, $P5269
  vivi_12792356:
    set $P103, $P5267
  fallback2352:
    set fb_tmp_361, $P103
    repr_defined $I5041, fb_tmp_361
    unless $I5041 goto if1276_else2350 
    set $P5270, fb_tmp_361["cur"]
    set $P5272, $P5270
    goto if1276_end2351
  if1276_else2350:
    null $P5271
    set $P5272, $P5271
  if1276_end2351:
    unless_null $P5272, vivi_12802357
    nqp_get_sc_object $P5273, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5272, $P5273
  vivi_12802357:
    unless_null $P103, fallback2360
    nqp_get_sc_object $P5275, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5274, $P5275
    set pkg_viv_tmp_30, $P5274
    set fb_tmp_364, pkg_viv_tmp_30
    repr_defined $I5044, fb_tmp_364
    unless $I5044 goto if1282_else2361 
    set $P5276, fb_tmp_364["%REG"]
    set $P5278, $P5276
    goto if1282_end2362
  if1282_else2361:
    null $P5277
    set $P5278, $P5277
  if1282_end2362:
    unless_null $P5278, vivi_12832363
    new $P5279, 'Hash'
    set pkg_viv_tmp_30["%REG"], $P5279
    set $P5278, $P5279
  vivi_12832363:
    unless_null $P5278, vivi_12842364
    die "Contextual %*REG not found"
    box $P5280, "Contextual %*REG not found"
    set $P5278, $P5280
  vivi_12842364:
    set $P103, $P5278
  fallback2360:
    set fb_tmp_363, $P103
    repr_defined $I5043, fb_tmp_363
    unless $I5043 goto if1281_else2358 
    set $P5281, fb_tmp_363["curclass"]
    set $P5283, $P5281
    goto if1281_end2359
  if1281_else2358:
    null $P5282
    set $P5283, $P5282
  if1281_end2359:
    unless_null $P5283, vivi_12852365
    nqp_get_sc_object $P5284, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5283, $P5284
  vivi_12852365:
    $P101."push_pirop"("repr_get_attr_obj", $P5261, $P5272, $P5283, "\"$!cstack\"")
.annotate 'line', 3674
    $P101."push"($P108)
.annotate 'line', 3675
    unless_null $P103, fallback2368
    nqp_get_sc_object $P5286, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5285, $P5286
    set pkg_viv_tmp_31, $P5285
    set fb_tmp_366, pkg_viv_tmp_31
    repr_defined $I5046, fb_tmp_366
    unless $I5046 goto if1287_else2369 
    set $P5287, fb_tmp_366["%REG"]
    set $P5289, $P5287
    goto if1287_end2370
  if1287_else2369:
    null $P5288
    set $P5289, $P5288
  if1287_end2370:
    unless_null $P5289, vivi_12882371
    new $P5290, 'Hash'
    set pkg_viv_tmp_31["%REG"], $P5290
    set $P5289, $P5290
  vivi_12882371:
    unless_null $P5289, vivi_12892372
    die "Contextual %*REG not found"
    box $P5291, "Contextual %*REG not found"
    set $P5289, $P5291
  vivi_12892372:
    set $P103, $P5289
  fallback2368:
    set fb_tmp_365, $P103
    repr_defined $I5045, fb_tmp_365
    unless $I5045 goto if1286_else2366 
    set $P5292, fb_tmp_365["bstack"]
    set $P5294, $P5292
    goto if1286_end2367
  if1286_else2366:
    null $P5293
    set $P5294, $P5293
  if1286_end2367:
    unless_null $P5294, vivi_12902373
    nqp_get_sc_object $P5295, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5294, $P5295
  vivi_12902373:
    $P101."push_pirop"("unless", $P5294, $P106)
.annotate 'line', 3676
    unless_null $P103, fallback2376
    nqp_get_sc_object $P5297, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5296, $P5297
    set pkg_viv_tmp_32, $P5296
    set fb_tmp_368, pkg_viv_tmp_32
    repr_defined $I5048, fb_tmp_368
    unless $I5048 goto if1292_else2377 
    set $P5298, fb_tmp_368["%REG"]
    set $P5300, $P5298
    goto if1292_end2378
  if1292_else2377:
    null $P5299
    set $P5300, $P5299
  if1292_end2378:
    unless_null $P5300, vivi_12932379
    new $P5301, 'Hash'
    set pkg_viv_tmp_32["%REG"], $P5301
    set $P5300, $P5301
  vivi_12932379:
    unless_null $P5300, vivi_12942380
    die "Contextual %*REG not found"
    box $P5302, "Contextual %*REG not found"
    set $P5300, $P5302
  vivi_12942380:
    set $P103, $P5300
  fallback2376:
    set fb_tmp_367, $P103
    repr_defined $I5047, fb_tmp_367
    unless $I5047 goto if1291_else2374 
    set $P5303, fb_tmp_367["bstack"]
    set $P5305, $P5303
    goto if1291_end2375
  if1291_else2374:
    null $P5304
    set $P5305, $P5304
  if1291_end2375:
    unless_null $P5305, vivi_12952381
    nqp_get_sc_object $P5306, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5305, $P5306
  vivi_12952381:
    $P101."push_pirop"("pop", "$I19", $P5305)
.annotate 'line', 3677
    unless_null $P103, fallback2384
    nqp_get_sc_object $P5308, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5307, $P5308
    set pkg_viv_tmp_33, $P5307
    set fb_tmp_370, pkg_viv_tmp_33
    repr_defined $I5050, fb_tmp_370
    unless $I5050 goto if1297_else2385 
    set $P5309, fb_tmp_370["%REG"]
    set $P5311, $P5309
    goto if1297_end2386
  if1297_else2385:
    null $P5310
    set $P5311, $P5310
  if1297_end2386:
    unless_null $P5311, vivi_12982387
    new $P5312, 'Hash'
    set pkg_viv_tmp_33["%REG"], $P5312
    set $P5311, $P5312
  vivi_12982387:
    unless_null $P5311, vivi_12992388
    die "Contextual %*REG not found"
    box $P5313, "Contextual %*REG not found"
    set $P5311, $P5313
  vivi_12992388:
    set $P103, $P5311
  fallback2384:
    set fb_tmp_369, $P103
    repr_defined $I5049, fb_tmp_369
    unless $I5049 goto if1296_else2382 
    set $P5314, fb_tmp_369["cstack"]
    set $P5316, $P5314
    goto if1296_end2383
  if1296_else2382:
    null $P5315
    set $P5316, $P5315
  if1296_end2383:
    unless_null $P5316, vivi_13002389
    nqp_get_sc_object $P5317, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5316, $P5317
  vivi_13002389:
    $P101."push_pirop"("if_null", $P5316, $P111)
.annotate 'line', 3678
    unless_null $P103, fallback2392
    nqp_get_sc_object $P5319, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5318, $P5319
    set pkg_viv_tmp_34, $P5318
    set fb_tmp_372, pkg_viv_tmp_34
    repr_defined $I5052, fb_tmp_372
    unless $I5052 goto if1302_else2393 
    set $P5320, fb_tmp_372["%REG"]
    set $P5322, $P5320
    goto if1302_end2394
  if1302_else2393:
    null $P5321
    set $P5322, $P5321
  if1302_end2394:
    unless_null $P5322, vivi_13032395
    new $P5323, 'Hash'
    set pkg_viv_tmp_34["%REG"], $P5323
    set $P5322, $P5323
  vivi_13032395:
    unless_null $P5322, vivi_13042396
    die "Contextual %*REG not found"
    box $P5324, "Contextual %*REG not found"
    set $P5322, $P5324
  vivi_13042396:
    set $P103, $P5322
  fallback2392:
    set fb_tmp_371, $P103
    repr_defined $I5051, fb_tmp_371
    unless $I5051 goto if1301_else2390 
    set $P5325, fb_tmp_371["cstack"]
    set $P5327, $P5325
    goto if1301_end2391
  if1301_else2390:
    null $P5326
    set $P5327, $P5326
  if1301_end2391:
    unless_null $P5327, vivi_13052397
    nqp_get_sc_object $P5328, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5327, $P5328
  vivi_13052397:
    $P101."push_pirop"("unless", $P5327, $P111)
.annotate 'line', 3679
    $P101."push_pirop"("dec", "$I19")
.annotate 'line', 3680
    unless_null $P103, fallback2400
    nqp_get_sc_object $P5330, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5329, $P5330
    set pkg_viv_tmp_35, $P5329
    set fb_tmp_374, pkg_viv_tmp_35
    repr_defined $I5054, fb_tmp_374
    unless $I5054 goto if1307_else2401 
    set $P5331, fb_tmp_374["%REG"]
    set $P5333, $P5331
    goto if1307_end2402
  if1307_else2401:
    null $P5332
    set $P5333, $P5332
  if1307_end2402:
    unless_null $P5333, vivi_13082403
    new $P5334, 'Hash'
    set pkg_viv_tmp_35["%REG"], $P5334
    set $P5333, $P5334
  vivi_13082403:
    unless_null $P5333, vivi_13092404
    die "Contextual %*REG not found"
    box $P5335, "Contextual %*REG not found"
    set $P5333, $P5335
  vivi_13092404:
    set $P103, $P5333
  fallback2400:
    set fb_tmp_373, $P103
    repr_defined $I5053, fb_tmp_373
    unless $I5053 goto if1306_else2398 
    set $P5336, fb_tmp_373["cstack"]
    set $P5338, $P5336
    goto if1306_end2399
  if1306_else2398:
    null $P5337
    set $P5338, $P5337
  if1306_end2399:
    unless_null $P5338, vivi_13102405
    nqp_get_sc_object $P5339, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5338, $P5339
  vivi_13102405:
    set $S5030, $P5338
    concat $S5029, $S5030, "[$I19]"
    $P101."push_pirop"("set", "$P11", $S5029)
.annotate 'line', 3681
    $P101."push"($P111)
.annotate 'line', 3682
    unless_null $P103, fallback2408
    nqp_get_sc_object $P5341, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5340, $P5341
    set pkg_viv_tmp_36, $P5340
    set fb_tmp_376, pkg_viv_tmp_36
    repr_defined $I5056, fb_tmp_376
    unless $I5056 goto if1312_else2409 
    set $P5342, fb_tmp_376["%REG"]
    set $P5344, $P5342
    goto if1312_end2410
  if1312_else2409:
    null $P5343
    set $P5344, $P5343
  if1312_end2410:
    unless_null $P5344, vivi_13132411
    new $P5345, 'Hash'
    set pkg_viv_tmp_36["%REG"], $P5345
    set $P5344, $P5345
  vivi_13132411:
    unless_null $P5344, vivi_13142412
    die "Contextual %*REG not found"
    box $P5346, "Contextual %*REG not found"
    set $P5344, $P5346
  vivi_13142412:
    set $P103, $P5344
  fallback2408:
    set fb_tmp_375, $P103
    repr_defined $I5055, fb_tmp_375
    unless $I5055 goto if1311_else2406 
    set $P5347, fb_tmp_375["rep"]
    set $P5349, $P5347
    goto if1311_end2407
  if1311_else2406:
    null $P5348
    set $P5349, $P5348
  if1311_end2407:
    unless_null $P5349, vivi_13152413
    nqp_get_sc_object $P5350, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5349, $P5350
  vivi_13152413:
    unless_null $P103, fallback2416
    nqp_get_sc_object $P5352, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5351, $P5352
    set pkg_viv_tmp_37, $P5351
    set fb_tmp_378, pkg_viv_tmp_37
    repr_defined $I5058, fb_tmp_378
    unless $I5058 goto if1317_else2417 
    set $P5353, fb_tmp_378["%REG"]
    set $P5355, $P5353
    goto if1317_end2418
  if1317_else2417:
    null $P5354
    set $P5355, $P5354
  if1317_end2418:
    unless_null $P5355, vivi_13182419
    new $P5356, 'Hash'
    set pkg_viv_tmp_37["%REG"], $P5356
    set $P5355, $P5356
  vivi_13182419:
    unless_null $P5355, vivi_13192420
    die "Contextual %*REG not found"
    box $P5357, "Contextual %*REG not found"
    set $P5355, $P5357
  vivi_13192420:
    set $P103, $P5355
  fallback2416:
    set fb_tmp_377, $P103
    repr_defined $I5057, fb_tmp_377
    unless $I5057 goto if1316_else2414 
    set $P5358, fb_tmp_377["bstack"]
    set $P5360, $P5358
    goto if1316_end2415
  if1316_else2414:
    null $P5359
    set $P5360, $P5359
  if1316_end2415:
    unless_null $P5360, vivi_13202421
    nqp_get_sc_object $P5361, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5360, $P5361
  vivi_13202421:
    $P101."push_pirop"("pop", $P5349, $P5360)
.annotate 'line', 3683
    unless_null $P103, fallback2424
    nqp_get_sc_object $P5363, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5362, $P5363
    set pkg_viv_tmp_38, $P5362
    set fb_tmp_380, pkg_viv_tmp_38
    repr_defined $I5060, fb_tmp_380
    unless $I5060 goto if1322_else2425 
    set $P5364, fb_tmp_380["%REG"]
    set $P5366, $P5364
    goto if1322_end2426
  if1322_else2425:
    null $P5365
    set $P5366, $P5365
  if1322_end2426:
    unless_null $P5366, vivi_13232427
    new $P5367, 'Hash'
    set pkg_viv_tmp_38["%REG"], $P5367
    set $P5366, $P5367
  vivi_13232427:
    unless_null $P5366, vivi_13242428
    die "Contextual %*REG not found"
    box $P5368, "Contextual %*REG not found"
    set $P5366, $P5368
  vivi_13242428:
    set $P103, $P5366
  fallback2424:
    set fb_tmp_379, $P103
    repr_defined $I5059, fb_tmp_379
    unless $I5059 goto if1321_else2422 
    set $P5369, fb_tmp_379["pos"]
    set $P5371, $P5369
    goto if1321_end2423
  if1321_else2422:
    null $P5370
    set $P5371, $P5370
  if1321_end2423:
    unless_null $P5371, vivi_13252429
    nqp_get_sc_object $P5372, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5371, $P5372
  vivi_13252429:
    unless_null $P103, fallback2432
    nqp_get_sc_object $P5374, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5373, $P5374
    set pkg_viv_tmp_39, $P5373
    set fb_tmp_382, pkg_viv_tmp_39
    repr_defined $I5062, fb_tmp_382
    unless $I5062 goto if1327_else2433 
    set $P5375, fb_tmp_382["%REG"]
    set $P5377, $P5375
    goto if1327_end2434
  if1327_else2433:
    null $P5376
    set $P5377, $P5376
  if1327_end2434:
    unless_null $P5377, vivi_13282435
    new $P5378, 'Hash'
    set pkg_viv_tmp_39["%REG"], $P5378
    set $P5377, $P5378
  vivi_13282435:
    unless_null $P5377, vivi_13292436
    die "Contextual %*REG not found"
    box $P5379, "Contextual %*REG not found"
    set $P5377, $P5379
  vivi_13292436:
    set $P103, $P5377
  fallback2432:
    set fb_tmp_381, $P103
    repr_defined $I5061, fb_tmp_381
    unless $I5061 goto if1326_else2430 
    set $P5380, fb_tmp_381["bstack"]
    set $P5382, $P5380
    goto if1326_end2431
  if1326_else2430:
    null $P5381
    set $P5382, $P5381
  if1326_end2431:
    unless_null $P5382, vivi_13302437
    nqp_get_sc_object $P5383, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5382, $P5383
  vivi_13302437:
    $P101."push_pirop"("pop", $P5371, $P5382)
.annotate 'line', 3684
    unless_null $P103, fallback2440
    nqp_get_sc_object $P5385, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5384, $P5385
    set pkg_viv_tmp_40, $P5384
    set fb_tmp_384, pkg_viv_tmp_40
    repr_defined $I5064, fb_tmp_384
    unless $I5064 goto if1332_else2441 
    set $P5386, fb_tmp_384["%REG"]
    set $P5388, $P5386
    goto if1332_end2442
  if1332_else2441:
    null $P5387
    set $P5388, $P5387
  if1332_end2442:
    unless_null $P5388, vivi_13332443
    new $P5389, 'Hash'
    set pkg_viv_tmp_40["%REG"], $P5389
    set $P5388, $P5389
  vivi_13332443:
    unless_null $P5388, vivi_13342444
    die "Contextual %*REG not found"
    box $P5390, "Contextual %*REG not found"
    set $P5388, $P5390
  vivi_13342444:
    set $P103, $P5388
  fallback2440:
    set fb_tmp_383, $P103
    repr_defined $I5063, fb_tmp_383
    unless $I5063 goto if1331_else2438 
    set $P5391, fb_tmp_383["bstack"]
    set $P5393, $P5391
    goto if1331_end2439
  if1331_else2438:
    null $P5392
    set $P5393, $P5392
  if1331_end2439:
    unless_null $P5393, vivi_13352445
    nqp_get_sc_object $P5394, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5393, $P5394
  vivi_13352445:
    $P101."push_pirop"("pop", "$I19", $P5393)
.annotate 'line', 3685
    unless_null $P103, fallback2448
    nqp_get_sc_object $P5396, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5395, $P5396
    set pkg_viv_tmp_41, $P5395
    set fb_tmp_386, pkg_viv_tmp_41
    repr_defined $I5066, fb_tmp_386
    unless $I5066 goto if1337_else2449 
    set $P5397, fb_tmp_386["%REG"]
    set $P5399, $P5397
    goto if1337_end2450
  if1337_else2449:
    null $P5398
    set $P5399, $P5398
  if1337_end2450:
    unless_null $P5399, vivi_13382451
    new $P5400, 'Hash'
    set pkg_viv_tmp_41["%REG"], $P5400
    set $P5399, $P5400
  vivi_13382451:
    unless_null $P5399, vivi_13392452
    die "Contextual %*REG not found"
    box $P5401, "Contextual %*REG not found"
    set $P5399, $P5401
  vivi_13392452:
    set $P103, $P5399
  fallback2448:
    set fb_tmp_385, $P103
    repr_defined $I5065, fb_tmp_385
    unless $I5065 goto if1336_else2446 
    set $P5402, fb_tmp_385["pos"]
    set $P5404, $P5402
    goto if1336_end2447
  if1336_else2446:
    null $P5403
    set $P5404, $P5403
  if1336_end2447:
    unless_null $P5404, vivi_13402453
    nqp_get_sc_object $P5405, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5404, $P5405
  vivi_13402453:
    $P101."push_pirop"("lt", $P5404, -1, $P106)
.annotate 'line', 3686
    unless_null $P103, fallback2456
    nqp_get_sc_object $P5407, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5406, $P5407
    set pkg_viv_tmp_42, $P5406
    set fb_tmp_388, pkg_viv_tmp_42
    repr_defined $I5068, fb_tmp_388
    unless $I5068 goto if1342_else2457 
    set $P5408, fb_tmp_388["%REG"]
    set $P5410, $P5408
    goto if1342_end2458
  if1342_else2457:
    null $P5409
    set $P5410, $P5409
  if1342_end2458:
    unless_null $P5410, vivi_13432459
    new $P5411, 'Hash'
    set pkg_viv_tmp_42["%REG"], $P5411
    set $P5410, $P5411
  vivi_13432459:
    unless_null $P5410, vivi_13442460
    die "Contextual %*REG not found"
    box $P5412, "Contextual %*REG not found"
    set $P5410, $P5412
  vivi_13442460:
    set $P103, $P5410
  fallback2456:
    set fb_tmp_387, $P103
    repr_defined $I5067, fb_tmp_387
    unless $I5067 goto if1341_else2454 
    set $P5413, fb_tmp_387["pos"]
    set $P5415, $P5413
    goto if1341_end2455
  if1341_else2454:
    null $P5414
    set $P5415, $P5414
  if1341_end2455:
    unless_null $P5415, vivi_13452461
    nqp_get_sc_object $P5416, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5415, $P5416
  vivi_13452461:
    $P101."push_pirop"("lt", $P5415, 0, $P108)
.annotate 'line', 3687
    $P101."push_pirop"("eq", "$I19", 0, $P108)
.annotate 'line', 3689
    unless_null $P103, fallback2464
    nqp_get_sc_object $P5418, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5417, $P5418
    set pkg_viv_tmp_43, $P5417
    set fb_tmp_390, pkg_viv_tmp_43
    repr_defined $I5070, fb_tmp_390
    unless $I5070 goto if1347_else2465 
    set $P5419, fb_tmp_390["%REG"]
    set $P5421, $P5419
    goto if1347_end2466
  if1347_else2465:
    null $P5420
    set $P5421, $P5420
  if1347_end2466:
    unless_null $P5421, vivi_13482467
    new $P5422, 'Hash'
    set pkg_viv_tmp_43["%REG"], $P5422
    set $P5421, $P5422
  vivi_13482467:
    unless_null $P5421, vivi_13492468
    die "Contextual %*REG not found"
    box $P5423, "Contextual %*REG not found"
    set $P5421, $P5423
  vivi_13492468:
    set $P103, $P5421
  fallback2464:
    set fb_tmp_389, $P103
    repr_defined $I5069, fb_tmp_389
    unless $I5069 goto if1346_else2462 
    set $P5424, fb_tmp_389["cstack"]
    set $P5426, $P5424
    goto if1346_end2463
  if1346_else2462:
    null $P5425
    set $P5426, $P5425
  if1346_end2463:
    unless_null $P5426, vivi_13502469
    nqp_get_sc_object $P5427, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5426, $P5427
  vivi_13502469:
    $P101."push_pirop"("nqp_islist", "$I20", $P5426)
.annotate 'line', 3690
    $P101."push_pirop"("unless", "$I20", $P109)
.annotate 'line', 3691
    unless_null $P103, fallback2472
    nqp_get_sc_object $P5429, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5428, $P5429
    set pkg_viv_tmp_44, $P5428
    set fb_tmp_392, pkg_viv_tmp_44
    repr_defined $I5072, fb_tmp_392
    unless $I5072 goto if1352_else2473 
    set $P5430, fb_tmp_392["%REG"]
    set $P5432, $P5430
    goto if1352_end2474
  if1352_else2473:
    null $P5431
    set $P5432, $P5431
  if1352_end2474:
    unless_null $P5432, vivi_13532475
    new $P5433, 'Hash'
    set pkg_viv_tmp_44["%REG"], $P5433
    set $P5432, $P5433
  vivi_13532475:
    unless_null $P5432, vivi_13542476
    die "Contextual %*REG not found"
    box $P5434, "Contextual %*REG not found"
    set $P5432, $P5434
  vivi_13542476:
    set $P103, $P5432
  fallback2472:
    set fb_tmp_391, $P103
    repr_defined $I5071, fb_tmp_391
    unless $I5071 goto if1351_else2470 
    set $P5435, fb_tmp_391["bstack"]
    set $P5437, $P5435
    goto if1351_end2471
  if1351_else2470:
    null $P5436
    set $P5437, $P5436
  if1351_end2471:
    unless_null $P5437, vivi_13552477
    nqp_get_sc_object $P5438, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5437, $P5438
  vivi_13552477:
    $P101."push_pirop"("elements", "$I18", $P5437)
.annotate 'line', 3692
    $P101."push_pirop"("le", "$I18", 0, $P110)
.annotate 'line', 3693
    $P101."push_pirop"("dec", "$I18")
.annotate 'line', 3694
    unless_null $P103, fallback2480
    nqp_get_sc_object $P5440, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5439, $P5440
    set pkg_viv_tmp_45, $P5439
    set fb_tmp_394, pkg_viv_tmp_45
    repr_defined $I5074, fb_tmp_394
    unless $I5074 goto if1357_else2481 
    set $P5441, fb_tmp_394["%REG"]
    set $P5443, $P5441
    goto if1357_end2482
  if1357_else2481:
    null $P5442
    set $P5443, $P5442
  if1357_end2482:
    unless_null $P5443, vivi_13582483
    new $P5444, 'Hash'
    set pkg_viv_tmp_45["%REG"], $P5444
    set $P5443, $P5444
  vivi_13582483:
    unless_null $P5443, vivi_13592484
    die "Contextual %*REG not found"
    box $P5445, "Contextual %*REG not found"
    set $P5443, $P5445
  vivi_13592484:
    set $P103, $P5443
  fallback2480:
    set fb_tmp_393, $P103
    repr_defined $I5073, fb_tmp_393
    unless $I5073 goto if1356_else2478 
    set $P5446, fb_tmp_393["bstack"]
    set $P5448, $P5446
    goto if1356_end2479
  if1356_else2478:
    null $P5447
    set $P5448, $P5447
  if1356_end2479:
    unless_null $P5448, vivi_13602485
    nqp_get_sc_object $P5449, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5448, $P5449
  vivi_13602485:
    set $S5032, $P5448
    concat $S5031, $S5032, "[$I18]"
    $P101."push_pirop"("set", "$I18", $S5031)
.annotate 'line', 3695
    $P101."push"($P110)
.annotate 'line', 3696
    unless_null $P103, fallback2488
    nqp_get_sc_object $P5451, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5450, $P5451
    set pkg_viv_tmp_46, $P5450
    set fb_tmp_396, pkg_viv_tmp_46
    repr_defined $I5076, fb_tmp_396
    unless $I5076 goto if1362_else2489 
    set $P5452, fb_tmp_396["%REG"]
    set $P5454, $P5452
    goto if1362_end2490
  if1362_else2489:
    null $P5453
    set $P5454, $P5453
  if1362_end2490:
    unless_null $P5454, vivi_13632491
    new $P5455, 'Hash'
    set pkg_viv_tmp_46["%REG"], $P5455
    set $P5454, $P5455
  vivi_13632491:
    unless_null $P5454, vivi_13642492
    die "Contextual %*REG not found"
    box $P5456, "Contextual %*REG not found"
    set $P5454, $P5456
  vivi_13642492:
    set $P103, $P5454
  fallback2488:
    set fb_tmp_395, $P103
    repr_defined $I5075, fb_tmp_395
    unless $I5075 goto if1361_else2486 
    set $P5457, fb_tmp_395["cstack"]
    set $P5459, $P5457
    goto if1361_end2487
  if1361_else2486:
    null $P5458
    set $P5459, $P5458
  if1361_end2487:
    unless_null $P5459, vivi_13652493
    nqp_get_sc_object $P5460, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5459, $P5460
  vivi_13652493:
    $P101."push_pirop"("assign", $P5459, "$I18")
.annotate 'line', 3697
    $P101."push"($P109)
.annotate 'line', 3698
    $P101."push_pirop"("jump", "$I19")
.annotate 'line', 3699
    $P101."push"($P106)
.annotate 'line', 3700
    unless_null $P103, fallback2496
    nqp_get_sc_object $P5462, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5461, $P5462
    set pkg_viv_tmp_47, $P5461
    set fb_tmp_398, pkg_viv_tmp_47
    repr_defined $I5078, fb_tmp_398
    unless $I5078 goto if1367_else2497 
    set $P5463, fb_tmp_398["%REG"]
    set $P5465, $P5463
    goto if1367_end2498
  if1367_else2497:
    null $P5464
    set $P5465, $P5464
  if1367_end2498:
    unless_null $P5465, vivi_13682499
    new $P5466, 'Hash'
    set pkg_viv_tmp_47["%REG"], $P5466
    set $P5465, $P5466
  vivi_13682499:
    unless_null $P5465, vivi_13692500
    die "Contextual %*REG not found"
    box $P5467, "Contextual %*REG not found"
    set $P5465, $P5467
  vivi_13692500:
    set $P103, $P5465
  fallback2496:
    set fb_tmp_397, $P103
    repr_defined $I5077, fb_tmp_397
    unless $I5077 goto if1366_else2494 
    set $P5468, fb_tmp_397["cur"]
    set $P5470, $P5468
    goto if1366_end2495
  if1366_else2494:
    null $P5469
    set $P5470, $P5469
  if1366_end2495:
    unless_null $P5470, vivi_13702501
    nqp_get_sc_object $P5471, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5470, $P5471
  vivi_13702501:
    $P101."push_pirop"("callmethod", "\"!cursor_fail\"", $P5470)
.annotate 'line', 3702
    unless_null $P103, fallback2504
    nqp_get_sc_object $P5473, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5472, $P5473
    set pkg_viv_tmp_48, $P5472
    set fb_tmp_400, pkg_viv_tmp_48
    repr_defined $I5080, fb_tmp_400
    unless $I5080 goto if1372_else2505 
    set $P5474, fb_tmp_400["%REG"]
    set $P5476, $P5474
    goto if1372_end2506
  if1372_else2505:
    null $P5475
    set $P5476, $P5475
  if1372_end2506:
    unless_null $P5476, vivi_13732507
    new $P5477, 'Hash'
    set pkg_viv_tmp_48["%REG"], $P5477
    set $P5476, $P5477
  vivi_13732507:
    unless_null $P5476, vivi_13742508
    die "Contextual %*REG not found"
    box $P5478, "Contextual %*REG not found"
    set $P5476, $P5478
  vivi_13742508:
    set $P103, $P5476
  fallback2504:
    set fb_tmp_399, $P103
    repr_defined $I5079, fb_tmp_399
    unless $I5079 goto if1371_else2502 
    set $P5479, fb_tmp_399["cur"]
    set $P5481, $P5479
    goto if1371_end2503
  if1371_else2502:
    null $P5480
    set $P5481, $P5480
  if1371_end2503:
    unless_null $P5481, vivi_13752509
    nqp_get_sc_object $P5482, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5481, $P5482
  vivi_13752509:
    $P101."result"($P5481)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_370_1366375329.52446") :anon :lex :outer("cuid_116_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3643
    .lex "$reg", $P101 
    .lex "$name", $P102 
    .local pmc fb_tmp_321 
    .local pmc pkg_viv_tmp_8 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    find_lex $P5004, "$reglist"
    shift $P5003, $P5004
    set $P101, $P5003
    find_dynamic_lex $P5005, "%*REG"
    unless_null $P5005, fallback2188
    nqp_get_sc_object $P5007, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5006, $P5007
    set pkg_viv_tmp_8, $P5006
    set fb_tmp_321, pkg_viv_tmp_8
    repr_defined $I5001, fb_tmp_321
    unless $I5001 goto if1175_else2189 
    set $P5008, fb_tmp_321["%REG"]
    set $P5010, $P5008
    goto if1175_end2190
  if1175_else2189:
    null $P5009
    set $P5010, $P5009
  if1175_end2190:
    unless_null $P5010, vivi_11762191
    new $P5011, 'Hash'
    set pkg_viv_tmp_8["%REG"], $P5011
    set $P5010, $P5011
  vivi_11762191:
    unless_null $P5010, vivi_11772192
    die "Contextual %*REG not found"
    box $P5012, "Contextual %*REG not found"
    set $P5010, $P5012
  vivi_11772192:
    set $P5005, $P5010
  fallback2188:
    set $S5001, $P101
    find_lex $P5013, "$prefix"
    set $S5003, $P5013
    set $S5004, $P101
    concat $S5002, $S5003, $S5004
    box $P5014, $S5002
    set $P5005[$S5001], $P5014
    set $P102, $P5014
.annotate 'line', 3646
    find_lex $P5015, "$ops"
    find_lex $P5017, "$reglist"
    shift $P5016, $P5017
    set $S5006, $P5016
    concat $S5005, ".local ", $S5006
    $P5018 = $P5015."push_pirop"($S5005, $P102)
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "children" :subid("cuid_117_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3706
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5013 = 'cuid_371_1366375329.52446' 
    capture_lex $P5013 
    .lex "$posts", $P101 
    .lex "@results", $P102 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    new $P5002, 'QRPA'
    set $P102, $P5002
.annotate 'line', 3707
    nqp_get_sc_object $P5003, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5004 = $P5003."new"()
    set $P101, $P5004
    $P5008 = _lex_param_1."list"()
    set $P5005, $P5008
    iter $P5007, $P5008
  for_next2511:
    unless $P5007, for_done2513
    shift $P5010, $P5007
  for_redo2512:
    .const 'Sub' $P5009 = 'cuid_371_1366375329.52446' 
    capture_lex $P5009
    $P5005 = $P5009($P5010)
    goto for_next2511
  for_done2513:
    new $P5011, 'QRPA'
    push $P5011, $P101
    push $P5011, $P102
    new $P5012, 'QRPA'
    push $P5011, $P5012
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_371_1366375329.52446") :anon :lex :outer("cuid_117_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3709
    .param pmc _lex_param_0 
    .lex "$post", $P101 
    .lex "$_", _lex_param_0 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 3710
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    $P5004 = $P5002."as_post"(_lex_param_0)
    set $P101, $P5004
.annotate 'line', 3711
    find_lex $P5005, "$posts"
    $P5005."push"($P101)
    find_lex $P5006, "@results"
.annotate 'line', 3712
    $P5007 = $P101."result"()
    push $P5006, $P5007
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "regex_post" :subid("cuid_118_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3717
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$rxtype", $P101 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 3718
    $P5002 = _lex_param_1."rxtype"()
    set $P5003, $P5002
    if $P5002 goto unless1376_end2515 
    box $P5004, "concat"
    set $P5003, $P5004
  unless1376_end2515:
    set $P101, $P5003
.annotate 'line', 3719
    nqp_decontainerize $P5005, _lex_param_0
    set $S5001, $P101
    $P5006 = $P5005.$S5001(_lex_param_1)
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "post_new" :subid("cuid_119_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3722
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :slurpy 
    .param pmc _lex_param_3 :slurpy :named 
    .lex "self", _lex_param_0 
    .lex "$type", _lex_param_1 
    .lex "@args", _lex_param_2 
    .lex "%options", _lex_param_3 
    .local pmc fb_tmp_401 
    .local pmc fb_tmp_402 
.annotate 'line', 3723
    find_lex $P5003, "$?PACKAGE"
    get_who $P5002, $P5003
    set fb_tmp_402, $P5002
    repr_defined $I5002, fb_tmp_402
    unless $I5002 goto if1378_else2518 
    set $P5004, fb_tmp_402["PIRT"]
    set $P5006, $P5004
    goto if1378_end2519
  if1378_else2518:
    null $P5005
    set $P5006, $P5005
  if1378_end2519:
    unless_null $P5006, vivi_13802521
    nqp_get_sc_object $P5009, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5008, $P5009
    set $P5007, $P5008["PIRT"]
    unless_null $P5007, vivi_13792520
    nqp_get_sc_object $P5010, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5007, $P5010
  vivi_13792520:
    set $P5006, $P5007
  vivi_13802521:
    get_who $P5001, $P5006
    set fb_tmp_401, $P5001
    repr_defined $I5001, fb_tmp_401
    unless $I5001 goto if1377_else2516 
    set $S5001, _lex_param_1
    set $P5011, fb_tmp_401[$S5001]
    set $P5013, $P5011
    goto if1377_end2517
  if1377_else2516:
    null $P5012
    set $P5013, $P5012
  if1377_end2517:
    unless_null $P5013, vivi_13812522
    nqp_get_sc_object $P5014, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5013, $P5014
  vivi_13812522:
    $P5015 = $P5013."new"(_lex_param_2 :flat, _lex_param_3 :flat :named)
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "alt" :subid("cuid_120_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3726
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5083 = 'cuid_372_1366375329.52446' 
    capture_lex $P5083 
    .lex "$prefix", $P101 
    .lex "$endlabel", $P102 
    .lex "$label_list_ops", $P103 
    .lex "$ops", $P104 
    .lex "$altcount", $P105 
    .lex "$iter", $P106 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_403 
    .local pmc fb_tmp_404 
    .local pmc pkg_viv_tmp_49 
    .local pmc fb_tmp_405 
    .local pmc fb_tmp_406 
    .local pmc pkg_viv_tmp_50 
    .local pmc fb_tmp_407 
    .local pmc fb_tmp_408 
    .local pmc pkg_viv_tmp_51 
    .local pmc fb_tmp_409 
    .local pmc fb_tmp_410 
    .local pmc pkg_viv_tmp_52 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P105, $P5005
    nqp_get_sc_object $P5006, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P106, $P5006
    root_new $P107, ['parrot';'Continuation']
    set_label $P107, lexotic_2523
    .lex "RETURN", $P107
.annotate 'line', 3727
    $P5007 = _lex_param_1."name"()
    if $P5007 goto unless1382_end2526 
.annotate 'line', 3728
    nqp_decontainerize $P5009, _lex_param_0
    $P5010 = $P5009."altseq"(_lex_param_1)
    find_lex $P5008, "RETURN"
    $P5011 = $P5008($P5010)
  unless1382_end2526:
.annotate 'line', 3733
    nqp_decontainerize $P5012, _lex_param_0
    $P5013 = $P5012."unique"("alt")
    set $S5002, $P5013
    concat $S5001, $S5002, "_"
    box $P5014, $S5001
    set $P101, $P5014
.annotate 'line', 3734
    nqp_decontainerize $P5015, _lex_param_0
    set $S5004, $P101
    concat $S5003, $S5004, "end"
    $P5016 = $P5015."post_new"("Label", $S5003 :named("name"))
    set $P102, $P5016
.annotate 'line', 3735
    nqp_decontainerize $P5017, _lex_param_0
    $P5018 = $P5017."post_new"("Ops", "$P11" :named("result"))
    set $P103, $P5018
.annotate 'line', 3736
    $P103."push_pirop"("new", "$P11", "\"ResizableIntegerArray\"")
.annotate 'line', 3737
    nqp_decontainerize $P5019, _lex_param_0
    find_dynamic_lex $P5020, "%*REG"
    unless_null $P5020, fallback2529
    nqp_get_sc_object $P5022, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5021, $P5022
    set pkg_viv_tmp_49, $P5021
    set fb_tmp_404, pkg_viv_tmp_49
    repr_defined $I5002, fb_tmp_404
    unless $I5002 goto if1384_else2530 
    set $P5023, fb_tmp_404["%REG"]
    set $P5025, $P5023
    goto if1384_end2531
  if1384_else2530:
    null $P5024
    set $P5025, $P5024
  if1384_end2531:
    unless_null $P5025, vivi_13852532
    new $P5026, 'Hash'
    set pkg_viv_tmp_49["%REG"], $P5026
    set $P5025, $P5026
  vivi_13852532:
    unless_null $P5025, vivi_13862533
    die "Contextual %*REG not found"
    box $P5027, "Contextual %*REG not found"
    set $P5025, $P5027
  vivi_13862533:
    set $P5020, $P5025
  fallback2529:
    set fb_tmp_403, $P5020
    repr_defined $I5001, fb_tmp_403
    unless $I5001 goto if1383_else2527 
    set $P5028, fb_tmp_403["cur"]
    set $P5030, $P5028
    goto if1383_end2528
  if1383_else2527:
    null $P5029
    set $P5030, $P5029
  if1383_end2528:
    unless_null $P5030, vivi_13872534
    nqp_get_sc_object $P5031, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5030, $P5031
  vivi_13872534:
    $P5032 = $P5019."post_new"("Ops", $P5030 :named("result"))
    set $P104, $P5032
.annotate 'line', 3738
    $P104."push"($P103)
.annotate 'line', 3739
    nqp_decontainerize $P5033, _lex_param_0
    $P5033."regex_mark"($P104, $P102, -1, 0)
.annotate 'line', 3740
    find_dynamic_lex $P5034, "%*REG"
    unless_null $P5034, fallback2537
    nqp_get_sc_object $P5036, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5035, $P5036
    set pkg_viv_tmp_50, $P5035
    set fb_tmp_406, pkg_viv_tmp_50
    repr_defined $I5004, fb_tmp_406
    unless $I5004 goto if1389_else2538 
    set $P5037, fb_tmp_406["%REG"]
    set $P5039, $P5037
    goto if1389_end2539
  if1389_else2538:
    null $P5038
    set $P5039, $P5038
  if1389_end2539:
    unless_null $P5039, vivi_13902540
    new $P5040, 'Hash'
    set pkg_viv_tmp_50["%REG"], $P5040
    set $P5039, $P5040
  vivi_13902540:
    unless_null $P5039, vivi_13912541
    die "Contextual %*REG not found"
    box $P5041, "Contextual %*REG not found"
    set $P5039, $P5041
  vivi_13912541:
    set $P5034, $P5039
  fallback2537:
    set fb_tmp_405, $P5034
    repr_defined $I5003, fb_tmp_405
    unless $I5003 goto if1388_else2535 
    set $P5042, fb_tmp_405["cur"]
    set $P5044, $P5042
    goto if1388_end2536
  if1388_else2535:
    null $P5043
    set $P5044, $P5043
  if1388_end2536:
    unless_null $P5044, vivi_13922542
    nqp_get_sc_object $P5045, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5044, $P5045
  vivi_13922542:
    find_dynamic_lex $P5046, "%*REG"
    unless_null $P5046, fallback2545
    nqp_get_sc_object $P5048, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5047, $P5048
    set pkg_viv_tmp_51, $P5047
    set fb_tmp_408, pkg_viv_tmp_51
    repr_defined $I5006, fb_tmp_408
    unless $I5006 goto if1394_else2546 
    set $P5049, fb_tmp_408["%REG"]
    set $P5051, $P5049
    goto if1394_end2547
  if1394_else2546:
    null $P5050
    set $P5051, $P5050
  if1394_end2547:
    unless_null $P5051, vivi_13952548
    new $P5052, 'Hash'
    set pkg_viv_tmp_51["%REG"], $P5052
    set $P5051, $P5052
  vivi_13952548:
    unless_null $P5051, vivi_13962549
    die "Contextual %*REG not found"
    box $P5053, "Contextual %*REG not found"
    set $P5051, $P5053
  vivi_13962549:
    set $P5046, $P5051
  fallback2545:
    set fb_tmp_407, $P5046
    repr_defined $I5005, fb_tmp_407
    unless $I5005 goto if1393_else2543 
    set $P5054, fb_tmp_407["pos"]
    set $P5056, $P5054
    goto if1393_end2544
  if1393_else2543:
    null $P5055
    set $P5056, $P5055
  if1393_end2544:
    unless_null $P5056, vivi_13972550
    nqp_get_sc_object $P5057, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5056, $P5057
  vivi_13972550:
.annotate 'line', 3741
    nqp_decontainerize $P5058, _lex_param_0
    $P5059 = _lex_param_1."name"()
    $P5060 = $P5058."escape"($P5059)
    $P5061 = $P103."result"()
    $P104."push_pirop"("callmethod", "\"!alt\"", $P5044, $P5056, $P5060, $P5061)
.annotate 'line', 3742
    find_dynamic_lex $P5062, "%*REG"
    unless_null $P5062, fallback2553
    nqp_get_sc_object $P5064, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5063, $P5064
    set pkg_viv_tmp_52, $P5063
    set fb_tmp_410, pkg_viv_tmp_52
    repr_defined $I5008, fb_tmp_410
    unless $I5008 goto if1399_else2554 
    set $P5065, fb_tmp_410["%REG"]
    set $P5067, $P5065
    goto if1399_end2555
  if1399_else2554:
    null $P5066
    set $P5067, $P5066
  if1399_end2555:
    unless_null $P5067, vivi_14002556
    new $P5068, 'Hash'
    set pkg_viv_tmp_52["%REG"], $P5068
    set $P5067, $P5068
  vivi_14002556:
    unless_null $P5067, vivi_14012557
    die "Contextual %*REG not found"
    box $P5069, "Contextual %*REG not found"
    set $P5067, $P5069
  vivi_14012557:
    set $P5062, $P5067
  fallback2553:
    set fb_tmp_409, $P5062
    repr_defined $I5007, fb_tmp_409
    unless $I5007 goto if1398_else2551 
    set $P5070, fb_tmp_409["fail"]
    set $P5072, $P5070
    goto if1398_end2552
  if1398_else2551:
    null $P5071
    set $P5072, $P5071
  if1398_end2552:
    unless_null $P5072, vivi_14022558
    nqp_get_sc_object $P5073, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5072, $P5073
  vivi_14022558:
    $P104."push_pirop"("goto", $P5072)
    box $P5074, 0
    set $P105, $P5074
.annotate 'line', 3746
    $P5076 = _lex_param_1."list"()
    iter $P5075, $P5076
    set $P106, $P5075
  while1403_test2559:
    set $P5079, $P106
    unless $P106 goto while1403_done2563 
  while1403_redo2561:
    .const 'Sub' $P5077 = 'cuid_372_1366375329.52446' 
    capture_lex $P5077
    $P5078 = $P5077()
    set $P5079, $P5078
    goto while1403_test2559 
  while1403_done2563:
.annotate 'line', 3756
    $P104."push"($P102)
.annotate 'line', 3757
    $P5080 = _lex_param_1."backtrack"()
    set $S5005, $P5080
    iseq $I5009, $S5005, "r"
    unless $I5009 goto if1404_end2565 
    nqp_decontainerize $P5081, _lex_param_0
    $P5082 = $P5081."regex_commit"($P104, $P102)
  if1404_end2565:
    goto lexotic_2524
  lexotic_2523:
    .get_results ($P104)
  lexotic_2524:
    .return ($P104) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_372_1366375329.52446") :anon :lex :outer("cuid_120_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3747
    .lex "$altlabel", $P101 
    .lex "$apost", $P102 
    .local pmc tmp_3 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
.annotate 'line', 3748
    find_lex $P5004, "self"
    nqp_decontainerize $P5003, $P5004
    find_lex $P5005, "$prefix"
    set $S5002, $P5005
    find_lex $P5006, "$altcount"
    set $S5003, $P5006
    concat $S5001, $S5002, $S5003
    $P5007 = $P5003."post_new"("Label", $S5001 :named("name"))
    set $P101, $P5007
.annotate 'line', 3749
    find_lex $P5009, "self"
    nqp_decontainerize $P5008, $P5009
    find_lex $P5011, "$iter"
    shift $P5010, $P5011
    $P5012 = $P5008."regex_post"($P5010)
    set $P102, $P5012
.annotate 'line', 3750
    find_lex $P5013, "$ops"
    $P5013."push"($P101)
.annotate 'line', 3751
    find_lex $P5014, "$ops"
    $P5014."push"($P102)
.annotate 'line', 3752
    find_lex $P5015, "$ops"
    find_lex $P5016, "$endlabel"
    $P5015."push_pirop"("goto", $P5016)
.annotate 'line', 3753
    find_lex $P5017, "$label_list_ops"
    find_lex $P5018, "$label_list_ops"
    $P5019 = $P5018."result"()
    $P5020 = $P101."result"()
    $P5017."push_pirop"("nqp_push_label", $P5019, $P5020)
    find_lex $P5021, "$altcount"
    set tmp_3, $P5021
    set $N5002, tmp_3
    set $N5003, 1
    add $N5001, $N5002, $N5003
    box $P5022, $N5001
    store_lex "$altcount", $P5022
    .return (tmp_3) 
.end
.HLL "nqp"
.namespace []
.sub "altseq" :subid("cuid_121_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3761
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "$prefix", $P102 
    .lex "$altcount", $P103 
    .lex "$iter", $P104 
    .lex "$endlabel", $P105 
    .lex "$altlabel", $P106 
    .lex "$apost", $P107 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_411 
    .local pmc fb_tmp_412 
    .local pmc pkg_viv_tmp_53 
    .local pmc tmp_4 
    .local pmc fb_tmp_413 
    .local pmc fb_tmp_414 
    .local pmc pkg_viv_tmp_54 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P105, $P5005
    nqp_get_sc_object $P5006, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P106, $P5006
    nqp_get_sc_object $P5007, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P107, $P5007
.annotate 'line', 3762
    nqp_decontainerize $P5008, _lex_param_0
    find_dynamic_lex $P5009, "%*REG"
    unless_null $P5009, fallback2568
    nqp_get_sc_object $P5011, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5010, $P5011
    set pkg_viv_tmp_53, $P5010
    set fb_tmp_412, pkg_viv_tmp_53
    repr_defined $I5002, fb_tmp_412
    unless $I5002 goto if1406_else2569 
    set $P5012, fb_tmp_412["%REG"]
    set $P5014, $P5012
    goto if1406_end2570
  if1406_else2569:
    null $P5013
    set $P5014, $P5013
  if1406_end2570:
    unless_null $P5014, vivi_14072571
    new $P5015, 'Hash'
    set pkg_viv_tmp_53["%REG"], $P5015
    set $P5014, $P5015
  vivi_14072571:
    unless_null $P5014, vivi_14082572
    die "Contextual %*REG not found"
    box $P5016, "Contextual %*REG not found"
    set $P5014, $P5016
  vivi_14082572:
    set $P5009, $P5014
  fallback2568:
    set fb_tmp_411, $P5009
    repr_defined $I5001, fb_tmp_411
    unless $I5001 goto if1405_else2566 
    set $P5017, fb_tmp_411["cur"]
    set $P5019, $P5017
    goto if1405_end2567
  if1405_else2566:
    null $P5018
    set $P5019, $P5018
  if1405_end2567:
    unless_null $P5019, vivi_14092573
    nqp_get_sc_object $P5020, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5019, $P5020
  vivi_14092573:
    $P5021 = $P5008."post_new"("Ops", $P5019 :named("result"))
    set $P101, $P5021
.annotate 'line', 3763
    nqp_decontainerize $P5022, _lex_param_0
    $P5023 = $P5022."unique"("alt")
    set $S5002, $P5023
    concat $S5001, $S5002, "_"
    box $P5024, $S5001
    set $P102, $P5024
    box $P5025, 0
    set $P103, $P5025
.annotate 'line', 3765
    $P5027 = _lex_param_1."list"()
    iter $P5026, $P5027
    set $P104, $P5026
.annotate 'line', 3766
    nqp_decontainerize $P5028, _lex_param_0
    set $S5004, $P102
    concat $S5003, $S5004, "end"
    $P5029 = $P5028."post_new"("Label", $S5003 :named("name"))
    set $P105, $P5029
.annotate 'line', 3767
    nqp_decontainerize $P5030, _lex_param_0
    set $S5006, $P102
    set $S5007, $P103
    concat $S5005, $S5006, $S5007
    $P5031 = $P5030."post_new"("Label", $S5005 :named("name"))
    set $P106, $P5031
.annotate 'line', 3768
    nqp_decontainerize $P5032, _lex_param_0
    shift $P5033, $P104
    $P5034 = $P5032."regex_post"($P5033)
    set $P107, $P5034
  while1410_test2574:
    set $P5053, $P104
    unless $P104 goto while1410_done2578 
  while1410_redo2576:
.annotate 'line', 3769
.annotate 'line', 3770
    $P101."push"($P106)
    set tmp_4, $P103
    set $N5002, tmp_4
    set $N5003, 1
    add $N5001, $N5002, $N5003
    box $P5035, $N5001
    set $P103, $P5035
.annotate 'line', 3772
    nqp_decontainerize $P5035, _lex_param_0
    set $S5009, $P102
    set $S5010, $P103
    concat $S5008, $S5009, $S5010
    $P5036 = $P5035."post_new"("Label", $S5008 :named("name"))
    set $P106, $P5036
.annotate 'line', 3773
    nqp_decontainerize $P5037, _lex_param_0
    find_dynamic_lex $P5038, "%*REG"
    unless_null $P5038, fallback2581
    nqp_get_sc_object $P5040, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5039, $P5040
    set pkg_viv_tmp_54, $P5039
    set fb_tmp_414, pkg_viv_tmp_54
    repr_defined $I5004, fb_tmp_414
    unless $I5004 goto if1412_else2582 
    set $P5041, fb_tmp_414["%REG"]
    set $P5043, $P5041
    goto if1412_end2583
  if1412_else2582:
    null $P5042
    set $P5043, $P5042
  if1412_end2583:
    unless_null $P5043, vivi_14132584
    new $P5044, 'Hash'
    set pkg_viv_tmp_54["%REG"], $P5044
    set $P5043, $P5044
  vivi_14132584:
    unless_null $P5043, vivi_14142585
    die "Contextual %*REG not found"
    box $P5045, "Contextual %*REG not found"
    set $P5043, $P5045
  vivi_14142585:
    set $P5038, $P5043
  fallback2581:
    set fb_tmp_413, $P5038
    repr_defined $I5003, fb_tmp_413
    unless $I5003 goto if1411_else2579 
    set $P5046, fb_tmp_413["pos"]
    set $P5048, $P5046
    goto if1411_end2580
  if1411_else2579:
    null $P5047
    set $P5048, $P5047
  if1411_end2580:
    unless_null $P5048, vivi_14152586
    nqp_get_sc_object $P5049, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5048, $P5049
  vivi_14152586:
    $P5037."regex_mark"($P101, $P106, $P5048, 0)
.annotate 'line', 3774
    $P101."push"($P107)
.annotate 'line', 3775
    $P101."push_pirop"("goto", $P105)
.annotate 'line', 3776
    nqp_decontainerize $P5050, _lex_param_0
    shift $P5051, $P104
    $P5052 = $P5050."regex_post"($P5051)
    set $P107, $P5052
    set $P5053, $P107
    goto while1410_test2574 
  while1410_done2578:
.annotate 'line', 3778
    $P101."push"($P106)
.annotate 'line', 3779
    $P101."push"($P107)
.annotate 'line', 3780
    $P101."push"($P105)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "anchor" :subid("cuid_122_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3784
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "$subtype", $P102 
    .lex "$donelabel", $P103 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_415 
    .local pmc fb_tmp_416 
    .local pmc pkg_viv_tmp_55 
    .local pmc fb_tmp_417 
    .local pmc fb_tmp_418 
    .local pmc pkg_viv_tmp_56 
    .local pmc fb_tmp_419 
    .local pmc fb_tmp_420 
    .local pmc pkg_viv_tmp_57 
    .local pmc fb_tmp_421 
    .local pmc fb_tmp_422 
    .local pmc pkg_viv_tmp_58 
    .local pmc fb_tmp_423 
    .local pmc fb_tmp_424 
    .local pmc pkg_viv_tmp_59 
    .local pmc fb_tmp_425 
    .local pmc fb_tmp_426 
    .local pmc pkg_viv_tmp_60 
    .local pmc fb_tmp_427 
    .local pmc fb_tmp_428 
    .local pmc pkg_viv_tmp_61 
    .local pmc fb_tmp_429 
    .local pmc fb_tmp_430 
    .local pmc pkg_viv_tmp_62 
    .local pmc fb_tmp_431 
    .local pmc fb_tmp_432 
    .local pmc pkg_viv_tmp_63 
    .local pmc fb_tmp_433 
    .local pmc fb_tmp_434 
    .local pmc pkg_viv_tmp_64 
    .local pmc fb_tmp_435 
    .local pmc fb_tmp_436 
    .local pmc pkg_viv_tmp_65 
    .local pmc fb_tmp_437 
    .local pmc fb_tmp_438 
    .local pmc pkg_viv_tmp_66 
    .local pmc fb_tmp_439 
    .local pmc fb_tmp_440 
    .local pmc pkg_viv_tmp_67 
    .local pmc fb_tmp_441 
    .local pmc fb_tmp_442 
    .local pmc pkg_viv_tmp_68 
    .local pmc fb_tmp_443 
    .local pmc fb_tmp_444 
    .local pmc pkg_viv_tmp_69 
    .local pmc fb_tmp_445 
    .local pmc fb_tmp_446 
    .local pmc pkg_viv_tmp_70 
    .local pmc fb_tmp_447 
    .local pmc fb_tmp_448 
    .local pmc pkg_viv_tmp_71 
    .local pmc fb_tmp_449 
    .local pmc fb_tmp_450 
    .local pmc pkg_viv_tmp_72 
    .local pmc fb_tmp_451 
    .local pmc fb_tmp_452 
    .local pmc pkg_viv_tmp_73 
    .local pmc fb_tmp_453 
    .local pmc fb_tmp_454 
    .local pmc pkg_viv_tmp_74 
    .local pmc fb_tmp_455 
    .local pmc fb_tmp_456 
    .local pmc pkg_viv_tmp_75 
    .local pmc fb_tmp_457 
    .local pmc fb_tmp_458 
    .local pmc pkg_viv_tmp_76 
    .local pmc fb_tmp_459 
    .local pmc fb_tmp_460 
    .local pmc pkg_viv_tmp_77 
    .local pmc fb_tmp_461 
    .local pmc fb_tmp_462 
    .local pmc pkg_viv_tmp_78 
    .local pmc fb_tmp_463 
    .local pmc fb_tmp_464 
    .local pmc pkg_viv_tmp_79 
    .local pmc fb_tmp_465 
    .local pmc fb_tmp_466 
    .local pmc pkg_viv_tmp_80 
    .local pmc fb_tmp_467 
    .local pmc fb_tmp_468 
    .local pmc pkg_viv_tmp_81 
    .local pmc fb_tmp_469 
    .local pmc fb_tmp_470 
    .local pmc pkg_viv_tmp_82 
    .local pmc fb_tmp_471 
    .local pmc fb_tmp_472 
    .local pmc pkg_viv_tmp_83 
    .local pmc fb_tmp_473 
    .local pmc fb_tmp_474 
    .local pmc pkg_viv_tmp_84 
    .local pmc fb_tmp_475 
    .local pmc fb_tmp_476 
    .local pmc pkg_viv_tmp_85 
    .local pmc fb_tmp_477 
    .local pmc fb_tmp_478 
    .local pmc pkg_viv_tmp_86 
    .local pmc fb_tmp_479 
    .local pmc fb_tmp_480 
    .local pmc pkg_viv_tmp_87 
    .local pmc fb_tmp_481 
    .local pmc fb_tmp_482 
    .local pmc pkg_viv_tmp_88 
    .local pmc fb_tmp_483 
    .local pmc fb_tmp_484 
    .local pmc pkg_viv_tmp_89 
    .local pmc fb_tmp_485 
    .local pmc fb_tmp_486 
    .local pmc pkg_viv_tmp_90 
    .local pmc fb_tmp_487 
    .local pmc fb_tmp_488 
    .local pmc pkg_viv_tmp_91 
    .local pmc fb_tmp_489 
    .local pmc fb_tmp_490 
    .local pmc pkg_viv_tmp_92 
    .local pmc fb_tmp_491 
    .local pmc fb_tmp_492 
    .local pmc pkg_viv_tmp_93 
    .local pmc fb_tmp_493 
    .local pmc fb_tmp_494 
    .local pmc pkg_viv_tmp_94 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
.annotate 'line', 3785
    nqp_decontainerize $P5004, _lex_param_0
    find_dynamic_lex $P5005, "%*REG"
    unless_null $P5005, fallback2589
    nqp_get_sc_object $P5007, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5006, $P5007
    set pkg_viv_tmp_55, $P5006
    set fb_tmp_416, pkg_viv_tmp_55
    repr_defined $I5002, fb_tmp_416
    unless $I5002 goto if1417_else2590 
    set $P5008, fb_tmp_416["%REG"]
    set $P5010, $P5008
    goto if1417_end2591
  if1417_else2590:
    null $P5009
    set $P5010, $P5009
  if1417_end2591:
    unless_null $P5010, vivi_14182592
    new $P5011, 'Hash'
    set pkg_viv_tmp_55["%REG"], $P5011
    set $P5010, $P5011
  vivi_14182592:
    unless_null $P5010, vivi_14192593
    die "Contextual %*REG not found"
    box $P5012, "Contextual %*REG not found"
    set $P5010, $P5012
  vivi_14192593:
    set $P5005, $P5010
  fallback2589:
    set fb_tmp_415, $P5005
    repr_defined $I5001, fb_tmp_415
    unless $I5001 goto if1416_else2587 
    set $P5013, fb_tmp_415["cur"]
    set $P5015, $P5013
    goto if1416_end2588
  if1416_else2587:
    null $P5014
    set $P5015, $P5014
  if1416_end2588:
    unless_null $P5015, vivi_14202594
    nqp_get_sc_object $P5016, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5015, $P5016
  vivi_14202594:
    $P5017 = $P5004."post_new"("Ops", $P5015 :named("result"))
    set $P101, $P5017
.annotate 'line', 3786
    $P5018 = _lex_param_1."subtype"()
    set $P102, $P5018
.annotate 'line', 3787
    nqp_decontainerize $P5019, _lex_param_0
    nqp_decontainerize $P5020, _lex_param_0
    $P5021 = $P5020."unique"("rxanchor")
    set $S5002, $P5021
    concat $S5001, $S5002, "_done"
    $P5022 = $P5019."post_new"("Label", $S5001 :named("name"))
    set $P103, $P5022
    set $S5003, $P102
    iseq $I5003, $S5003, "bos"
    unless $I5003 goto if1421_else2595 
.annotate 'line', 3788
.annotate 'line', 3789
    find_dynamic_lex $P5023, "%*REG"
    unless_null $P5023, fallback2599
    nqp_get_sc_object $P5025, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5024, $P5025
    set pkg_viv_tmp_56, $P5024
    set fb_tmp_418, pkg_viv_tmp_56
    repr_defined $I5005, fb_tmp_418
    unless $I5005 goto if1423_else2600 
    set $P5026, fb_tmp_418["%REG"]
    set $P5028, $P5026
    goto if1423_end2601
  if1423_else2600:
    null $P5027
    set $P5028, $P5027
  if1423_end2601:
    unless_null $P5028, vivi_14242602
    new $P5029, 'Hash'
    set pkg_viv_tmp_56["%REG"], $P5029
    set $P5028, $P5029
  vivi_14242602:
    unless_null $P5028, vivi_14252603
    die "Contextual %*REG not found"
    box $P5030, "Contextual %*REG not found"
    set $P5028, $P5030
  vivi_14252603:
    set $P5023, $P5028
  fallback2599:
    set fb_tmp_417, $P5023
    repr_defined $I5004, fb_tmp_417
    unless $I5004 goto if1422_else2597 
    set $P5031, fb_tmp_417["pos"]
    set $P5033, $P5031
    goto if1422_end2598
  if1422_else2597:
    null $P5032
    set $P5033, $P5032
  if1422_end2598:
    unless_null $P5033, vivi_14262604
    nqp_get_sc_object $P5034, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5033, $P5034
  vivi_14262604:
    find_dynamic_lex $P5035, "%*REG"
    unless_null $P5035, fallback2607
    nqp_get_sc_object $P5037, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5036, $P5037
    set pkg_viv_tmp_57, $P5036
    set fb_tmp_420, pkg_viv_tmp_57
    repr_defined $I5007, fb_tmp_420
    unless $I5007 goto if1428_else2608 
    set $P5038, fb_tmp_420["%REG"]
    set $P5040, $P5038
    goto if1428_end2609
  if1428_else2608:
    null $P5039
    set $P5040, $P5039
  if1428_end2609:
    unless_null $P5040, vivi_14292610
    new $P5041, 'Hash'
    set pkg_viv_tmp_57["%REG"], $P5041
    set $P5040, $P5041
  vivi_14292610:
    unless_null $P5040, vivi_14302611
    die "Contextual %*REG not found"
    box $P5042, "Contextual %*REG not found"
    set $P5040, $P5042
  vivi_14302611:
    set $P5035, $P5040
  fallback2607:
    set fb_tmp_419, $P5035
    repr_defined $I5006, fb_tmp_419
    unless $I5006 goto if1427_else2605 
    set $P5043, fb_tmp_419["fail"]
    set $P5045, $P5043
    goto if1427_end2606
  if1427_else2605:
    null $P5044
    set $P5045, $P5044
  if1427_end2606:
    unless_null $P5045, vivi_14312612
    nqp_get_sc_object $P5046, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5045, $P5046
  vivi_14312612:
    $P5047 = $P101."push_pirop"("ne", $P5033, 0, $P5045)
    goto if1421_end2596
  if1421_else2595:
    set $S5004, $P102
    iseq $I5008, $S5004, "eos"
    unless $I5008 goto if1432_else2613 
.annotate 'line', 3791
.annotate 'line', 3792
    find_dynamic_lex $P5048, "%*REG"
    unless_null $P5048, fallback2617
    nqp_get_sc_object $P5050, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5049, $P5050
    set pkg_viv_tmp_58, $P5049
    set fb_tmp_422, pkg_viv_tmp_58
    repr_defined $I5010, fb_tmp_422
    unless $I5010 goto if1434_else2618 
    set $P5051, fb_tmp_422["%REG"]
    set $P5053, $P5051
    goto if1434_end2619
  if1434_else2618:
    null $P5052
    set $P5053, $P5052
  if1434_end2619:
    unless_null $P5053, vivi_14352620
    new $P5054, 'Hash'
    set pkg_viv_tmp_58["%REG"], $P5054
    set $P5053, $P5054
  vivi_14352620:
    unless_null $P5053, vivi_14362621
    die "Contextual %*REG not found"
    box $P5055, "Contextual %*REG not found"
    set $P5053, $P5055
  vivi_14362621:
    set $P5048, $P5053
  fallback2617:
    set fb_tmp_421, $P5048
    repr_defined $I5009, fb_tmp_421
    unless $I5009 goto if1433_else2615 
    set $P5056, fb_tmp_421["pos"]
    set $P5058, $P5056
    goto if1433_end2616
  if1433_else2615:
    null $P5057
    set $P5058, $P5057
  if1433_end2616:
    unless_null $P5058, vivi_14372622
    nqp_get_sc_object $P5059, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5058, $P5059
  vivi_14372622:
    find_dynamic_lex $P5060, "%*REG"
    unless_null $P5060, fallback2625
    nqp_get_sc_object $P5062, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5061, $P5062
    set pkg_viv_tmp_59, $P5061
    set fb_tmp_424, pkg_viv_tmp_59
    repr_defined $I5012, fb_tmp_424
    unless $I5012 goto if1439_else2626 
    set $P5063, fb_tmp_424["%REG"]
    set $P5065, $P5063
    goto if1439_end2627
  if1439_else2626:
    null $P5064
    set $P5065, $P5064
  if1439_end2627:
    unless_null $P5065, vivi_14402628
    new $P5066, 'Hash'
    set pkg_viv_tmp_59["%REG"], $P5066
    set $P5065, $P5066
  vivi_14402628:
    unless_null $P5065, vivi_14412629
    die "Contextual %*REG not found"
    box $P5067, "Contextual %*REG not found"
    set $P5065, $P5067
  vivi_14412629:
    set $P5060, $P5065
  fallback2625:
    set fb_tmp_423, $P5060
    repr_defined $I5011, fb_tmp_423
    unless $I5011 goto if1438_else2623 
    set $P5068, fb_tmp_423["eos"]
    set $P5070, $P5068
    goto if1438_end2624
  if1438_else2623:
    null $P5069
    set $P5070, $P5069
  if1438_end2624:
    unless_null $P5070, vivi_14422630
    nqp_get_sc_object $P5071, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5070, $P5071
  vivi_14422630:
    find_dynamic_lex $P5072, "%*REG"
    unless_null $P5072, fallback2633
    nqp_get_sc_object $P5074, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5073, $P5074
    set pkg_viv_tmp_60, $P5073
    set fb_tmp_426, pkg_viv_tmp_60
    repr_defined $I5014, fb_tmp_426
    unless $I5014 goto if1444_else2634 
    set $P5075, fb_tmp_426["%REG"]
    set $P5077, $P5075
    goto if1444_end2635
  if1444_else2634:
    null $P5076
    set $P5077, $P5076
  if1444_end2635:
    unless_null $P5077, vivi_14452636
    new $P5078, 'Hash'
    set pkg_viv_tmp_60["%REG"], $P5078
    set $P5077, $P5078
  vivi_14452636:
    unless_null $P5077, vivi_14462637
    die "Contextual %*REG not found"
    box $P5079, "Contextual %*REG not found"
    set $P5077, $P5079
  vivi_14462637:
    set $P5072, $P5077
  fallback2633:
    set fb_tmp_425, $P5072
    repr_defined $I5013, fb_tmp_425
    unless $I5013 goto if1443_else2631 
    set $P5080, fb_tmp_425["fail"]
    set $P5082, $P5080
    goto if1443_end2632
  if1443_else2631:
    null $P5081
    set $P5082, $P5081
  if1443_end2632:
    unless_null $P5082, vivi_14472638
    nqp_get_sc_object $P5083, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5082, $P5083
  vivi_14472638:
    $P5084 = $P101."push_pirop"("lt", $P5058, $P5070, $P5082)
    set $P5504, $P5084
    goto if1432_end2614
  if1432_else2613:
    set $S5005, $P102
    iseq $I5015, $S5005, "lwb"
    unless $I5015 goto if1448_else2639 
.annotate 'line', 3794
.annotate 'line', 3795
    find_dynamic_lex $P5085, "%*REG"
    unless_null $P5085, fallback2643
    nqp_get_sc_object $P5087, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5086, $P5087
    set pkg_viv_tmp_61, $P5086
    set fb_tmp_428, pkg_viv_tmp_61
    repr_defined $I5017, fb_tmp_428
    unless $I5017 goto if1450_else2644 
    set $P5088, fb_tmp_428["%REG"]
    set $P5090, $P5088
    goto if1450_end2645
  if1450_else2644:
    null $P5089
    set $P5090, $P5089
  if1450_end2645:
    unless_null $P5090, vivi_14512646
    new $P5091, 'Hash'
    set pkg_viv_tmp_61["%REG"], $P5091
    set $P5090, $P5091
  vivi_14512646:
    unless_null $P5090, vivi_14522647
    die "Contextual %*REG not found"
    box $P5092, "Contextual %*REG not found"
    set $P5090, $P5092
  vivi_14522647:
    set $P5085, $P5090
  fallback2643:
    set fb_tmp_427, $P5085
    repr_defined $I5016, fb_tmp_427
    unless $I5016 goto if1449_else2641 
    set $P5093, fb_tmp_427["pos"]
    set $P5095, $P5093
    goto if1449_end2642
  if1449_else2641:
    null $P5094
    set $P5095, $P5094
  if1449_end2642:
    unless_null $P5095, vivi_14532648
    nqp_get_sc_object $P5096, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5095, $P5096
  vivi_14532648:
    find_dynamic_lex $P5097, "%*REG"
    unless_null $P5097, fallback2651
    nqp_get_sc_object $P5099, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5098, $P5099
    set pkg_viv_tmp_62, $P5098
    set fb_tmp_430, pkg_viv_tmp_62
    repr_defined $I5019, fb_tmp_430
    unless $I5019 goto if1455_else2652 
    set $P5100, fb_tmp_430["%REG"]
    set $P5102, $P5100
    goto if1455_end2653
  if1455_else2652:
    null $P5101
    set $P5102, $P5101
  if1455_end2653:
    unless_null $P5102, vivi_14562654
    new $P5103, 'Hash'
    set pkg_viv_tmp_62["%REG"], $P5103
    set $P5102, $P5103
  vivi_14562654:
    unless_null $P5102, vivi_14572655
    die "Contextual %*REG not found"
    box $P5104, "Contextual %*REG not found"
    set $P5102, $P5104
  vivi_14572655:
    set $P5097, $P5102
  fallback2651:
    set fb_tmp_429, $P5097
    repr_defined $I5018, fb_tmp_429
    unless $I5018 goto if1454_else2649 
    set $P5105, fb_tmp_429["eos"]
    set $P5107, $P5105
    goto if1454_end2650
  if1454_else2649:
    null $P5106
    set $P5107, $P5106
  if1454_end2650:
    unless_null $P5107, vivi_14582656
    nqp_get_sc_object $P5108, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5107, $P5108
  vivi_14582656:
    find_dynamic_lex $P5109, "%*REG"
    unless_null $P5109, fallback2659
    nqp_get_sc_object $P5111, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5110, $P5111
    set pkg_viv_tmp_63, $P5110
    set fb_tmp_432, pkg_viv_tmp_63
    repr_defined $I5021, fb_tmp_432
    unless $I5021 goto if1460_else2660 
    set $P5112, fb_tmp_432["%REG"]
    set $P5114, $P5112
    goto if1460_end2661
  if1460_else2660:
    null $P5113
    set $P5114, $P5113
  if1460_end2661:
    unless_null $P5114, vivi_14612662
    new $P5115, 'Hash'
    set pkg_viv_tmp_63["%REG"], $P5115
    set $P5114, $P5115
  vivi_14612662:
    unless_null $P5114, vivi_14622663
    die "Contextual %*REG not found"
    box $P5116, "Contextual %*REG not found"
    set $P5114, $P5116
  vivi_14622663:
    set $P5109, $P5114
  fallback2659:
    set fb_tmp_431, $P5109
    repr_defined $I5020, fb_tmp_431
    unless $I5020 goto if1459_else2657 
    set $P5117, fb_tmp_431["fail"]
    set $P5119, $P5117
    goto if1459_end2658
  if1459_else2657:
    null $P5118
    set $P5119, $P5118
  if1459_end2658:
    unless_null $P5119, vivi_14632664
    nqp_get_sc_object $P5120, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5119, $P5120
  vivi_14632664:
    $P101."push_pirop"("ge", $P5095, $P5107, $P5119)
.annotate 'line', 3796
    find_dynamic_lex $P5121, "%*REG"
    unless_null $P5121, fallback2667
    nqp_get_sc_object $P5123, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5122, $P5123
    set pkg_viv_tmp_64, $P5122
    set fb_tmp_434, pkg_viv_tmp_64
    repr_defined $I5023, fb_tmp_434
    unless $I5023 goto if1465_else2668 
    set $P5124, fb_tmp_434["%REG"]
    set $P5126, $P5124
    goto if1465_end2669
  if1465_else2668:
    null $P5125
    set $P5126, $P5125
  if1465_end2669:
    unless_null $P5126, vivi_14662670
    new $P5127, 'Hash'
    set pkg_viv_tmp_64["%REG"], $P5127
    set $P5126, $P5127
  vivi_14662670:
    unless_null $P5126, vivi_14672671
    die "Contextual %*REG not found"
    box $P5128, "Contextual %*REG not found"
    set $P5126, $P5128
  vivi_14672671:
    set $P5121, $P5126
  fallback2667:
    set fb_tmp_433, $P5121
    repr_defined $I5022, fb_tmp_433
    unless $I5022 goto if1464_else2665 
    set $P5129, fb_tmp_433["tgt"]
    set $P5131, $P5129
    goto if1464_end2666
  if1464_else2665:
    null $P5130
    set $P5131, $P5130
  if1464_end2666:
    unless_null $P5131, vivi_14682672
    nqp_get_sc_object $P5132, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5131, $P5132
  vivi_14682672:
    find_dynamic_lex $P5133, "%*REG"
    unless_null $P5133, fallback2675
    nqp_get_sc_object $P5135, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5134, $P5135
    set pkg_viv_tmp_65, $P5134
    set fb_tmp_436, pkg_viv_tmp_65
    repr_defined $I5025, fb_tmp_436
    unless $I5025 goto if1470_else2676 
    set $P5136, fb_tmp_436["%REG"]
    set $P5138, $P5136
    goto if1470_end2677
  if1470_else2676:
    null $P5137
    set $P5138, $P5137
  if1470_end2677:
    unless_null $P5138, vivi_14712678
    new $P5139, 'Hash'
    set pkg_viv_tmp_65["%REG"], $P5139
    set $P5138, $P5139
  vivi_14712678:
    unless_null $P5138, vivi_14722679
    die "Contextual %*REG not found"
    box $P5140, "Contextual %*REG not found"
    set $P5138, $P5140
  vivi_14722679:
    set $P5133, $P5138
  fallback2675:
    set fb_tmp_435, $P5133
    repr_defined $I5024, fb_tmp_435
    unless $I5024 goto if1469_else2673 
    set $P5141, fb_tmp_435["pos"]
    set $P5143, $P5141
    goto if1469_end2674
  if1469_else2673:
    null $P5142
    set $P5143, $P5142
  if1469_end2674:
    unless_null $P5143, vivi_14732680
    nqp_get_sc_object $P5144, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5143, $P5144
  vivi_14732680:
    $P101."push_pirop"("is_cclass", "$I11", ".CCLASS_WORD", $P5131, $P5143)
.annotate 'line', 3797
    find_dynamic_lex $P5145, "%*REG"
    unless_null $P5145, fallback2683
    nqp_get_sc_object $P5147, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5146, $P5147
    set pkg_viv_tmp_66, $P5146
    set fb_tmp_438, pkg_viv_tmp_66
    repr_defined $I5027, fb_tmp_438
    unless $I5027 goto if1475_else2684 
    set $P5148, fb_tmp_438["%REG"]
    set $P5150, $P5148
    goto if1475_end2685
  if1475_else2684:
    null $P5149
    set $P5150, $P5149
  if1475_end2685:
    unless_null $P5150, vivi_14762686
    new $P5151, 'Hash'
    set pkg_viv_tmp_66["%REG"], $P5151
    set $P5150, $P5151
  vivi_14762686:
    unless_null $P5150, vivi_14772687
    die "Contextual %*REG not found"
    box $P5152, "Contextual %*REG not found"
    set $P5150, $P5152
  vivi_14772687:
    set $P5145, $P5150
  fallback2683:
    set fb_tmp_437, $P5145
    repr_defined $I5026, fb_tmp_437
    unless $I5026 goto if1474_else2681 
    set $P5153, fb_tmp_437["fail"]
    set $P5155, $P5153
    goto if1474_end2682
  if1474_else2681:
    null $P5154
    set $P5155, $P5154
  if1474_end2682:
    unless_null $P5155, vivi_14782688
    nqp_get_sc_object $P5156, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5155, $P5156
  vivi_14782688:
    $P101."push_pirop"("unless", "$I11", $P5155)
.annotate 'line', 3798
    find_dynamic_lex $P5157, "%*REG"
    unless_null $P5157, fallback2691
    nqp_get_sc_object $P5159, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5158, $P5159
    set pkg_viv_tmp_67, $P5158
    set fb_tmp_440, pkg_viv_tmp_67
    repr_defined $I5029, fb_tmp_440
    unless $I5029 goto if1480_else2692 
    set $P5160, fb_tmp_440["%REG"]
    set $P5162, $P5160
    goto if1480_end2693
  if1480_else2692:
    null $P5161
    set $P5162, $P5161
  if1480_end2693:
    unless_null $P5162, vivi_14812694
    new $P5163, 'Hash'
    set pkg_viv_tmp_67["%REG"], $P5163
    set $P5162, $P5163
  vivi_14812694:
    unless_null $P5162, vivi_14822695
    die "Contextual %*REG not found"
    box $P5164, "Contextual %*REG not found"
    set $P5162, $P5164
  vivi_14822695:
    set $P5157, $P5162
  fallback2691:
    set fb_tmp_439, $P5157
    repr_defined $I5028, fb_tmp_439
    unless $I5028 goto if1479_else2689 
    set $P5165, fb_tmp_439["pos"]
    set $P5167, $P5165
    goto if1479_end2690
  if1479_else2689:
    null $P5166
    set $P5167, $P5166
  if1479_end2690:
    unless_null $P5167, vivi_14832696
    nqp_get_sc_object $P5168, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5167, $P5168
  vivi_14832696:
    $P101."push_pirop"("sub", "$I11", $P5167, 1)
.annotate 'line', 3799
    find_dynamic_lex $P5169, "%*REG"
    unless_null $P5169, fallback2699
    nqp_get_sc_object $P5171, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5170, $P5171
    set pkg_viv_tmp_68, $P5170
    set fb_tmp_442, pkg_viv_tmp_68
    repr_defined $I5031, fb_tmp_442
    unless $I5031 goto if1485_else2700 
    set $P5172, fb_tmp_442["%REG"]
    set $P5174, $P5172
    goto if1485_end2701
  if1485_else2700:
    null $P5173
    set $P5174, $P5173
  if1485_end2701:
    unless_null $P5174, vivi_14862702
    new $P5175, 'Hash'
    set pkg_viv_tmp_68["%REG"], $P5175
    set $P5174, $P5175
  vivi_14862702:
    unless_null $P5174, vivi_14872703
    die "Contextual %*REG not found"
    box $P5176, "Contextual %*REG not found"
    set $P5174, $P5176
  vivi_14872703:
    set $P5169, $P5174
  fallback2699:
    set fb_tmp_441, $P5169
    repr_defined $I5030, fb_tmp_441
    unless $I5030 goto if1484_else2697 
    set $P5177, fb_tmp_441["tgt"]
    set $P5179, $P5177
    goto if1484_end2698
  if1484_else2697:
    null $P5178
    set $P5179, $P5178
  if1484_end2698:
    unless_null $P5179, vivi_14882704
    nqp_get_sc_object $P5180, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5179, $P5180
  vivi_14882704:
    $P101."push_pirop"("is_cclass", "$I11", ".CCLASS_WORD", $P5179, "$I11")
.annotate 'line', 3800
    find_dynamic_lex $P5181, "%*REG"
    unless_null $P5181, fallback2707
    nqp_get_sc_object $P5183, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5182, $P5183
    set pkg_viv_tmp_69, $P5182
    set fb_tmp_444, pkg_viv_tmp_69
    repr_defined $I5033, fb_tmp_444
    unless $I5033 goto if1490_else2708 
    set $P5184, fb_tmp_444["%REG"]
    set $P5186, $P5184
    goto if1490_end2709
  if1490_else2708:
    null $P5185
    set $P5186, $P5185
  if1490_end2709:
    unless_null $P5186, vivi_14912710
    new $P5187, 'Hash'
    set pkg_viv_tmp_69["%REG"], $P5187
    set $P5186, $P5187
  vivi_14912710:
    unless_null $P5186, vivi_14922711
    die "Contextual %*REG not found"
    box $P5188, "Contextual %*REG not found"
    set $P5186, $P5188
  vivi_14922711:
    set $P5181, $P5186
  fallback2707:
    set fb_tmp_443, $P5181
    repr_defined $I5032, fb_tmp_443
    unless $I5032 goto if1489_else2705 
    set $P5189, fb_tmp_443["fail"]
    set $P5191, $P5189
    goto if1489_end2706
  if1489_else2705:
    null $P5190
    set $P5191, $P5190
  if1489_end2706:
    unless_null $P5191, vivi_14932712
    nqp_get_sc_object $P5192, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5191, $P5192
  vivi_14932712:
    $P5193 = $P101."push_pirop"("if", "$I11", $P5191)
    set $P5503, $P5193
    goto if1448_end2640
  if1448_else2639:
    set $S5006, $P102
    iseq $I5034, $S5006, "rwb"
    unless $I5034 goto if1494_else2713 
.annotate 'line', 3802
.annotate 'line', 3803
    find_dynamic_lex $P5194, "%*REG"
    unless_null $P5194, fallback2717
    nqp_get_sc_object $P5196, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5195, $P5196
    set pkg_viv_tmp_70, $P5195
    set fb_tmp_446, pkg_viv_tmp_70
    repr_defined $I5036, fb_tmp_446
    unless $I5036 goto if1496_else2718 
    set $P5197, fb_tmp_446["%REG"]
    set $P5199, $P5197
    goto if1496_end2719
  if1496_else2718:
    null $P5198
    set $P5199, $P5198
  if1496_end2719:
    unless_null $P5199, vivi_14972720
    new $P5200, 'Hash'
    set pkg_viv_tmp_70["%REG"], $P5200
    set $P5199, $P5200
  vivi_14972720:
    unless_null $P5199, vivi_14982721
    die "Contextual %*REG not found"
    box $P5201, "Contextual %*REG not found"
    set $P5199, $P5201
  vivi_14982721:
    set $P5194, $P5199
  fallback2717:
    set fb_tmp_445, $P5194
    repr_defined $I5035, fb_tmp_445
    unless $I5035 goto if1495_else2715 
    set $P5202, fb_tmp_445["pos"]
    set $P5204, $P5202
    goto if1495_end2716
  if1495_else2715:
    null $P5203
    set $P5204, $P5203
  if1495_end2716:
    unless_null $P5204, vivi_14992722
    nqp_get_sc_object $P5205, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5204, $P5205
  vivi_14992722:
    find_dynamic_lex $P5206, "%*REG"
    unless_null $P5206, fallback2725
    nqp_get_sc_object $P5208, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5207, $P5208
    set pkg_viv_tmp_71, $P5207
    set fb_tmp_448, pkg_viv_tmp_71
    repr_defined $I5038, fb_tmp_448
    unless $I5038 goto if1501_else2726 
    set $P5209, fb_tmp_448["%REG"]
    set $P5211, $P5209
    goto if1501_end2727
  if1501_else2726:
    null $P5210
    set $P5211, $P5210
  if1501_end2727:
    unless_null $P5211, vivi_15022728
    new $P5212, 'Hash'
    set pkg_viv_tmp_71["%REG"], $P5212
    set $P5211, $P5212
  vivi_15022728:
    unless_null $P5211, vivi_15032729
    die "Contextual %*REG not found"
    box $P5213, "Contextual %*REG not found"
    set $P5211, $P5213
  vivi_15032729:
    set $P5206, $P5211
  fallback2725:
    set fb_tmp_447, $P5206
    repr_defined $I5037, fb_tmp_447
    unless $I5037 goto if1500_else2723 
    set $P5214, fb_tmp_447["fail"]
    set $P5216, $P5214
    goto if1500_end2724
  if1500_else2723:
    null $P5215
    set $P5216, $P5215
  if1500_end2724:
    unless_null $P5216, vivi_15042730
    nqp_get_sc_object $P5217, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5216, $P5217
  vivi_15042730:
    $P101."push_pirop"("le", $P5204, 0, $P5216)
.annotate 'line', 3804
    find_dynamic_lex $P5218, "%*REG"
    unless_null $P5218, fallback2733
    nqp_get_sc_object $P5220, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5219, $P5220
    set pkg_viv_tmp_72, $P5219
    set fb_tmp_450, pkg_viv_tmp_72
    repr_defined $I5040, fb_tmp_450
    unless $I5040 goto if1506_else2734 
    set $P5221, fb_tmp_450["%REG"]
    set $P5223, $P5221
    goto if1506_end2735
  if1506_else2734:
    null $P5222
    set $P5223, $P5222
  if1506_end2735:
    unless_null $P5223, vivi_15072736
    new $P5224, 'Hash'
    set pkg_viv_tmp_72["%REG"], $P5224
    set $P5223, $P5224
  vivi_15072736:
    unless_null $P5223, vivi_15082737
    die "Contextual %*REG not found"
    box $P5225, "Contextual %*REG not found"
    set $P5223, $P5225
  vivi_15082737:
    set $P5218, $P5223
  fallback2733:
    set fb_tmp_449, $P5218
    repr_defined $I5039, fb_tmp_449
    unless $I5039 goto if1505_else2731 
    set $P5226, fb_tmp_449["tgt"]
    set $P5228, $P5226
    goto if1505_end2732
  if1505_else2731:
    null $P5227
    set $P5228, $P5227
  if1505_end2732:
    unless_null $P5228, vivi_15092738
    nqp_get_sc_object $P5229, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5228, $P5229
  vivi_15092738:
    find_dynamic_lex $P5230, "%*REG"
    unless_null $P5230, fallback2741
    nqp_get_sc_object $P5232, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5231, $P5232
    set pkg_viv_tmp_73, $P5231
    set fb_tmp_452, pkg_viv_tmp_73
    repr_defined $I5042, fb_tmp_452
    unless $I5042 goto if1511_else2742 
    set $P5233, fb_tmp_452["%REG"]
    set $P5235, $P5233
    goto if1511_end2743
  if1511_else2742:
    null $P5234
    set $P5235, $P5234
  if1511_end2743:
    unless_null $P5235, vivi_15122744
    new $P5236, 'Hash'
    set pkg_viv_tmp_73["%REG"], $P5236
    set $P5235, $P5236
  vivi_15122744:
    unless_null $P5235, vivi_15132745
    die "Contextual %*REG not found"
    box $P5237, "Contextual %*REG not found"
    set $P5235, $P5237
  vivi_15132745:
    set $P5230, $P5235
  fallback2741:
    set fb_tmp_451, $P5230
    repr_defined $I5041, fb_tmp_451
    unless $I5041 goto if1510_else2739 
    set $P5238, fb_tmp_451["pos"]
    set $P5240, $P5238
    goto if1510_end2740
  if1510_else2739:
    null $P5239
    set $P5240, $P5239
  if1510_end2740:
    unless_null $P5240, vivi_15142746
    nqp_get_sc_object $P5241, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5240, $P5241
  vivi_15142746:
    $P101."push_pirop"("is_cclass", "$I11", ".CCLASS_WORD", $P5228, $P5240)
.annotate 'line', 3805
    find_dynamic_lex $P5242, "%*REG"
    unless_null $P5242, fallback2749
    nqp_get_sc_object $P5244, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5243, $P5244
    set pkg_viv_tmp_74, $P5243
    set fb_tmp_454, pkg_viv_tmp_74
    repr_defined $I5044, fb_tmp_454
    unless $I5044 goto if1516_else2750 
    set $P5245, fb_tmp_454["%REG"]
    set $P5247, $P5245
    goto if1516_end2751
  if1516_else2750:
    null $P5246
    set $P5247, $P5246
  if1516_end2751:
    unless_null $P5247, vivi_15172752
    new $P5248, 'Hash'
    set pkg_viv_tmp_74["%REG"], $P5248
    set $P5247, $P5248
  vivi_15172752:
    unless_null $P5247, vivi_15182753
    die "Contextual %*REG not found"
    box $P5249, "Contextual %*REG not found"
    set $P5247, $P5249
  vivi_15182753:
    set $P5242, $P5247
  fallback2749:
    set fb_tmp_453, $P5242
    repr_defined $I5043, fb_tmp_453
    unless $I5043 goto if1515_else2747 
    set $P5250, fb_tmp_453["fail"]
    set $P5252, $P5250
    goto if1515_end2748
  if1515_else2747:
    null $P5251
    set $P5252, $P5251
  if1515_end2748:
    unless_null $P5252, vivi_15192754
    nqp_get_sc_object $P5253, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5252, $P5253
  vivi_15192754:
    $P101."push_pirop"("if", "$I11", $P5252)
.annotate 'line', 3806
    find_dynamic_lex $P5254, "%*REG"
    unless_null $P5254, fallback2757
    nqp_get_sc_object $P5256, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5255, $P5256
    set pkg_viv_tmp_75, $P5255
    set fb_tmp_456, pkg_viv_tmp_75
    repr_defined $I5046, fb_tmp_456
    unless $I5046 goto if1521_else2758 
    set $P5257, fb_tmp_456["%REG"]
    set $P5259, $P5257
    goto if1521_end2759
  if1521_else2758:
    null $P5258
    set $P5259, $P5258
  if1521_end2759:
    unless_null $P5259, vivi_15222760
    new $P5260, 'Hash'
    set pkg_viv_tmp_75["%REG"], $P5260
    set $P5259, $P5260
  vivi_15222760:
    unless_null $P5259, vivi_15232761
    die "Contextual %*REG not found"
    box $P5261, "Contextual %*REG not found"
    set $P5259, $P5261
  vivi_15232761:
    set $P5254, $P5259
  fallback2757:
    set fb_tmp_455, $P5254
    repr_defined $I5045, fb_tmp_455
    unless $I5045 goto if1520_else2755 
    set $P5262, fb_tmp_455["pos"]
    set $P5264, $P5262
    goto if1520_end2756
  if1520_else2755:
    null $P5263
    set $P5264, $P5263
  if1520_end2756:
    unless_null $P5264, vivi_15242762
    nqp_get_sc_object $P5265, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5264, $P5265
  vivi_15242762:
    $P101."push_pirop"("sub", "$I11", $P5264, 1)
.annotate 'line', 3807
    find_dynamic_lex $P5266, "%*REG"
    unless_null $P5266, fallback2765
    nqp_get_sc_object $P5268, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5267, $P5268
    set pkg_viv_tmp_76, $P5267
    set fb_tmp_458, pkg_viv_tmp_76
    repr_defined $I5048, fb_tmp_458
    unless $I5048 goto if1526_else2766 
    set $P5269, fb_tmp_458["%REG"]
    set $P5271, $P5269
    goto if1526_end2767
  if1526_else2766:
    null $P5270
    set $P5271, $P5270
  if1526_end2767:
    unless_null $P5271, vivi_15272768
    new $P5272, 'Hash'
    set pkg_viv_tmp_76["%REG"], $P5272
    set $P5271, $P5272
  vivi_15272768:
    unless_null $P5271, vivi_15282769
    die "Contextual %*REG not found"
    box $P5273, "Contextual %*REG not found"
    set $P5271, $P5273
  vivi_15282769:
    set $P5266, $P5271
  fallback2765:
    set fb_tmp_457, $P5266
    repr_defined $I5047, fb_tmp_457
    unless $I5047 goto if1525_else2763 
    set $P5274, fb_tmp_457["tgt"]
    set $P5276, $P5274
    goto if1525_end2764
  if1525_else2763:
    null $P5275
    set $P5276, $P5275
  if1525_end2764:
    unless_null $P5276, vivi_15292770
    nqp_get_sc_object $P5277, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5276, $P5277
  vivi_15292770:
    $P101."push_pirop"("is_cclass", "$I11", ".CCLASS_WORD", $P5276, "$I11")
.annotate 'line', 3808
    find_dynamic_lex $P5278, "%*REG"
    unless_null $P5278, fallback2773
    nqp_get_sc_object $P5280, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5279, $P5280
    set pkg_viv_tmp_77, $P5279
    set fb_tmp_460, pkg_viv_tmp_77
    repr_defined $I5050, fb_tmp_460
    unless $I5050 goto if1531_else2774 
    set $P5281, fb_tmp_460["%REG"]
    set $P5283, $P5281
    goto if1531_end2775
  if1531_else2774:
    null $P5282
    set $P5283, $P5282
  if1531_end2775:
    unless_null $P5283, vivi_15322776
    new $P5284, 'Hash'
    set pkg_viv_tmp_77["%REG"], $P5284
    set $P5283, $P5284
  vivi_15322776:
    unless_null $P5283, vivi_15332777
    die "Contextual %*REG not found"
    box $P5285, "Contextual %*REG not found"
    set $P5283, $P5285
  vivi_15332777:
    set $P5278, $P5283
  fallback2773:
    set fb_tmp_459, $P5278
    repr_defined $I5049, fb_tmp_459
    unless $I5049 goto if1530_else2771 
    set $P5286, fb_tmp_459["fail"]
    set $P5288, $P5286
    goto if1530_end2772
  if1530_else2771:
    null $P5287
    set $P5288, $P5287
  if1530_end2772:
    unless_null $P5288, vivi_15342778
    nqp_get_sc_object $P5289, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5288, $P5289
  vivi_15342778:
    $P5290 = $P101."push_pirop"("unless", "$I11", $P5288)
    set $P5502, $P5290
    goto if1494_end2714
  if1494_else2713:
    set $S5007, $P102
    iseq $I5051, $S5007, "bol"
    unless $I5051 goto if1535_else2779 
.annotate 'line', 3810
.annotate 'line', 3811
    find_dynamic_lex $P5291, "%*REG"
    unless_null $P5291, fallback2783
    nqp_get_sc_object $P5293, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5292, $P5293
    set pkg_viv_tmp_78, $P5292
    set fb_tmp_462, pkg_viv_tmp_78
    repr_defined $I5053, fb_tmp_462
    unless $I5053 goto if1537_else2784 
    set $P5294, fb_tmp_462["%REG"]
    set $P5296, $P5294
    goto if1537_end2785
  if1537_else2784:
    null $P5295
    set $P5296, $P5295
  if1537_end2785:
    unless_null $P5296, vivi_15382786
    new $P5297, 'Hash'
    set pkg_viv_tmp_78["%REG"], $P5297
    set $P5296, $P5297
  vivi_15382786:
    unless_null $P5296, vivi_15392787
    die "Contextual %*REG not found"
    box $P5298, "Contextual %*REG not found"
    set $P5296, $P5298
  vivi_15392787:
    set $P5291, $P5296
  fallback2783:
    set fb_tmp_461, $P5291
    repr_defined $I5052, fb_tmp_461
    unless $I5052 goto if1536_else2781 
    set $P5299, fb_tmp_461["pos"]
    set $P5301, $P5299
    goto if1536_end2782
  if1536_else2781:
    null $P5300
    set $P5301, $P5300
  if1536_end2782:
    unless_null $P5301, vivi_15402788
    nqp_get_sc_object $P5302, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5301, $P5302
  vivi_15402788:
    $P101."push_pirop"("eq", $P5301, 0, $P103)
.annotate 'line', 3812
    find_dynamic_lex $P5303, "%*REG"
    unless_null $P5303, fallback2791
    nqp_get_sc_object $P5305, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5304, $P5305
    set pkg_viv_tmp_79, $P5304
    set fb_tmp_464, pkg_viv_tmp_79
    repr_defined $I5055, fb_tmp_464
    unless $I5055 goto if1542_else2792 
    set $P5306, fb_tmp_464["%REG"]
    set $P5308, $P5306
    goto if1542_end2793
  if1542_else2792:
    null $P5307
    set $P5308, $P5307
  if1542_end2793:
    unless_null $P5308, vivi_15432794
    new $P5309, 'Hash'
    set pkg_viv_tmp_79["%REG"], $P5309
    set $P5308, $P5309
  vivi_15432794:
    unless_null $P5308, vivi_15442795
    die "Contextual %*REG not found"
    box $P5310, "Contextual %*REG not found"
    set $P5308, $P5310
  vivi_15442795:
    set $P5303, $P5308
  fallback2791:
    set fb_tmp_463, $P5303
    repr_defined $I5054, fb_tmp_463
    unless $I5054 goto if1541_else2789 
    set $P5311, fb_tmp_463["pos"]
    set $P5313, $P5311
    goto if1541_end2790
  if1541_else2789:
    null $P5312
    set $P5313, $P5312
  if1541_end2790:
    unless_null $P5313, vivi_15452796
    nqp_get_sc_object $P5314, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5313, $P5314
  vivi_15452796:
    find_dynamic_lex $P5315, "%*REG"
    unless_null $P5315, fallback2799
    nqp_get_sc_object $P5317, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5316, $P5317
    set pkg_viv_tmp_80, $P5316
    set fb_tmp_466, pkg_viv_tmp_80
    repr_defined $I5057, fb_tmp_466
    unless $I5057 goto if1547_else2800 
    set $P5318, fb_tmp_466["%REG"]
    set $P5320, $P5318
    goto if1547_end2801
  if1547_else2800:
    null $P5319
    set $P5320, $P5319
  if1547_end2801:
    unless_null $P5320, vivi_15482802
    new $P5321, 'Hash'
    set pkg_viv_tmp_80["%REG"], $P5321
    set $P5320, $P5321
  vivi_15482802:
    unless_null $P5320, vivi_15492803
    die "Contextual %*REG not found"
    box $P5322, "Contextual %*REG not found"
    set $P5320, $P5322
  vivi_15492803:
    set $P5315, $P5320
  fallback2799:
    set fb_tmp_465, $P5315
    repr_defined $I5056, fb_tmp_465
    unless $I5056 goto if1546_else2797 
    set $P5323, fb_tmp_465["eos"]
    set $P5325, $P5323
    goto if1546_end2798
  if1546_else2797:
    null $P5324
    set $P5325, $P5324
  if1546_end2798:
    unless_null $P5325, vivi_15502804
    nqp_get_sc_object $P5326, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5325, $P5326
  vivi_15502804:
    find_dynamic_lex $P5327, "%*REG"
    unless_null $P5327, fallback2807
    nqp_get_sc_object $P5329, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5328, $P5329
    set pkg_viv_tmp_81, $P5328
    set fb_tmp_468, pkg_viv_tmp_81
    repr_defined $I5059, fb_tmp_468
    unless $I5059 goto if1552_else2808 
    set $P5330, fb_tmp_468["%REG"]
    set $P5332, $P5330
    goto if1552_end2809
  if1552_else2808:
    null $P5331
    set $P5332, $P5331
  if1552_end2809:
    unless_null $P5332, vivi_15532810
    new $P5333, 'Hash'
    set pkg_viv_tmp_81["%REG"], $P5333
    set $P5332, $P5333
  vivi_15532810:
    unless_null $P5332, vivi_15542811
    die "Contextual %*REG not found"
    box $P5334, "Contextual %*REG not found"
    set $P5332, $P5334
  vivi_15542811:
    set $P5327, $P5332
  fallback2807:
    set fb_tmp_467, $P5327
    repr_defined $I5058, fb_tmp_467
    unless $I5058 goto if1551_else2805 
    set $P5335, fb_tmp_467["fail"]
    set $P5337, $P5335
    goto if1551_end2806
  if1551_else2805:
    null $P5336
    set $P5337, $P5336
  if1551_end2806:
    unless_null $P5337, vivi_15552812
    nqp_get_sc_object $P5338, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5337, $P5338
  vivi_15552812:
    $P101."push_pirop"("ge", $P5313, $P5325, $P5337)
.annotate 'line', 3813
    find_dynamic_lex $P5339, "%*REG"
    unless_null $P5339, fallback2815
    nqp_get_sc_object $P5341, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5340, $P5341
    set pkg_viv_tmp_82, $P5340
    set fb_tmp_470, pkg_viv_tmp_82
    repr_defined $I5061, fb_tmp_470
    unless $I5061 goto if1557_else2816 
    set $P5342, fb_tmp_470["%REG"]
    set $P5344, $P5342
    goto if1557_end2817
  if1557_else2816:
    null $P5343
    set $P5344, $P5343
  if1557_end2817:
    unless_null $P5344, vivi_15582818
    new $P5345, 'Hash'
    set pkg_viv_tmp_82["%REG"], $P5345
    set $P5344, $P5345
  vivi_15582818:
    unless_null $P5344, vivi_15592819
    die "Contextual %*REG not found"
    box $P5346, "Contextual %*REG not found"
    set $P5344, $P5346
  vivi_15592819:
    set $P5339, $P5344
  fallback2815:
    set fb_tmp_469, $P5339
    repr_defined $I5060, fb_tmp_469
    unless $I5060 goto if1556_else2813 
    set $P5347, fb_tmp_469["pos"]
    set $P5349, $P5347
    goto if1556_end2814
  if1556_else2813:
    null $P5348
    set $P5349, $P5348
  if1556_end2814:
    unless_null $P5349, vivi_15602820
    nqp_get_sc_object $P5350, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5349, $P5350
  vivi_15602820:
    $P101."push_pirop"("sub", "$I11", $P5349, 1)
.annotate 'line', 3814
    find_dynamic_lex $P5351, "%*REG"
    unless_null $P5351, fallback2823
    nqp_get_sc_object $P5353, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5352, $P5353
    set pkg_viv_tmp_83, $P5352
    set fb_tmp_472, pkg_viv_tmp_83
    repr_defined $I5063, fb_tmp_472
    unless $I5063 goto if1562_else2824 
    set $P5354, fb_tmp_472["%REG"]
    set $P5356, $P5354
    goto if1562_end2825
  if1562_else2824:
    null $P5355
    set $P5356, $P5355
  if1562_end2825:
    unless_null $P5356, vivi_15632826
    new $P5357, 'Hash'
    set pkg_viv_tmp_83["%REG"], $P5357
    set $P5356, $P5357
  vivi_15632826:
    unless_null $P5356, vivi_15642827
    die "Contextual %*REG not found"
    box $P5358, "Contextual %*REG not found"
    set $P5356, $P5358
  vivi_15642827:
    set $P5351, $P5356
  fallback2823:
    set fb_tmp_471, $P5351
    repr_defined $I5062, fb_tmp_471
    unless $I5062 goto if1561_else2821 
    set $P5359, fb_tmp_471["tgt"]
    set $P5361, $P5359
    goto if1561_end2822
  if1561_else2821:
    null $P5360
    set $P5361, $P5360
  if1561_end2822:
    unless_null $P5361, vivi_15652828
    nqp_get_sc_object $P5362, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5361, $P5362
  vivi_15652828:
    $P101."push_pirop"("is_cclass", "$I11", ".CCLASS_NEWLINE", $P5361, "$I11")
.annotate 'line', 3815
    find_dynamic_lex $P5363, "%*REG"
    unless_null $P5363, fallback2831
    nqp_get_sc_object $P5365, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5364, $P5365
    set pkg_viv_tmp_84, $P5364
    set fb_tmp_474, pkg_viv_tmp_84
    repr_defined $I5065, fb_tmp_474
    unless $I5065 goto if1567_else2832 
    set $P5366, fb_tmp_474["%REG"]
    set $P5368, $P5366
    goto if1567_end2833
  if1567_else2832:
    null $P5367
    set $P5368, $P5367
  if1567_end2833:
    unless_null $P5368, vivi_15682834
    new $P5369, 'Hash'
    set pkg_viv_tmp_84["%REG"], $P5369
    set $P5368, $P5369
  vivi_15682834:
    unless_null $P5368, vivi_15692835
    die "Contextual %*REG not found"
    box $P5370, "Contextual %*REG not found"
    set $P5368, $P5370
  vivi_15692835:
    set $P5363, $P5368
  fallback2831:
    set fb_tmp_473, $P5363
    repr_defined $I5064, fb_tmp_473
    unless $I5064 goto if1566_else2829 
    set $P5371, fb_tmp_473["fail"]
    set $P5373, $P5371
    goto if1566_end2830
  if1566_else2829:
    null $P5372
    set $P5373, $P5372
  if1566_end2830:
    unless_null $P5373, vivi_15702836
    nqp_get_sc_object $P5374, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5373, $P5374
  vivi_15702836:
    $P101."push_pirop"("unless", "$I11", $P5373)
.annotate 'line', 3816
    $P5375 = $P101."push"($P103)
    set $P5501, $P5375
    goto if1535_end2780
  if1535_else2779:
    set $S5008, $P102
    iseq $I5066, $S5008, "eol"
    unless $I5066 goto if1571_else2837 
.annotate 'line', 3818
.annotate 'line', 3819
    find_dynamic_lex $P5376, "%*REG"
    unless_null $P5376, fallback2841
    nqp_get_sc_object $P5378, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5377, $P5378
    set pkg_viv_tmp_85, $P5377
    set fb_tmp_476, pkg_viv_tmp_85
    repr_defined $I5068, fb_tmp_476
    unless $I5068 goto if1573_else2842 
    set $P5379, fb_tmp_476["%REG"]
    set $P5381, $P5379
    goto if1573_end2843
  if1573_else2842:
    null $P5380
    set $P5381, $P5380
  if1573_end2843:
    unless_null $P5381, vivi_15742844
    new $P5382, 'Hash'
    set pkg_viv_tmp_85["%REG"], $P5382
    set $P5381, $P5382
  vivi_15742844:
    unless_null $P5381, vivi_15752845
    die "Contextual %*REG not found"
    box $P5383, "Contextual %*REG not found"
    set $P5381, $P5383
  vivi_15752845:
    set $P5376, $P5381
  fallback2841:
    set fb_tmp_475, $P5376
    repr_defined $I5067, fb_tmp_475
    unless $I5067 goto if1572_else2839 
    set $P5384, fb_tmp_475["tgt"]
    set $P5386, $P5384
    goto if1572_end2840
  if1572_else2839:
    null $P5385
    set $P5386, $P5385
  if1572_end2840:
    unless_null $P5386, vivi_15762846
    nqp_get_sc_object $P5387, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5386, $P5387
  vivi_15762846:
    find_dynamic_lex $P5388, "%*REG"
    unless_null $P5388, fallback2849
    nqp_get_sc_object $P5390, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5389, $P5390
    set pkg_viv_tmp_86, $P5389
    set fb_tmp_478, pkg_viv_tmp_86
    repr_defined $I5070, fb_tmp_478
    unless $I5070 goto if1578_else2850 
    set $P5391, fb_tmp_478["%REG"]
    set $P5393, $P5391
    goto if1578_end2851
  if1578_else2850:
    null $P5392
    set $P5393, $P5392
  if1578_end2851:
    unless_null $P5393, vivi_15792852
    new $P5394, 'Hash'
    set pkg_viv_tmp_86["%REG"], $P5394
    set $P5393, $P5394
  vivi_15792852:
    unless_null $P5393, vivi_15802853
    die "Contextual %*REG not found"
    box $P5395, "Contextual %*REG not found"
    set $P5393, $P5395
  vivi_15802853:
    set $P5388, $P5393
  fallback2849:
    set fb_tmp_477, $P5388
    repr_defined $I5069, fb_tmp_477
    unless $I5069 goto if1577_else2847 
    set $P5396, fb_tmp_477["pos"]
    set $P5398, $P5396
    goto if1577_end2848
  if1577_else2847:
    null $P5397
    set $P5398, $P5397
  if1577_end2848:
    unless_null $P5398, vivi_15812854
    nqp_get_sc_object $P5399, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5398, $P5399
  vivi_15812854:
    $P101."push_pirop"("is_cclass", "$I11", ".CCLASS_NEWLINE", $P5386, $P5398)
.annotate 'line', 3820
    $P101."push_pirop"("if", "$I11", $P103)
.annotate 'line', 3821
    find_dynamic_lex $P5400, "%*REG"
    unless_null $P5400, fallback2857
    nqp_get_sc_object $P5402, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5401, $P5402
    set pkg_viv_tmp_87, $P5401
    set fb_tmp_480, pkg_viv_tmp_87
    repr_defined $I5072, fb_tmp_480
    unless $I5072 goto if1583_else2858 
    set $P5403, fb_tmp_480["%REG"]
    set $P5405, $P5403
    goto if1583_end2859
  if1583_else2858:
    null $P5404
    set $P5405, $P5404
  if1583_end2859:
    unless_null $P5405, vivi_15842860
    new $P5406, 'Hash'
    set pkg_viv_tmp_87["%REG"], $P5406
    set $P5405, $P5406
  vivi_15842860:
    unless_null $P5405, vivi_15852861
    die "Contextual %*REG not found"
    box $P5407, "Contextual %*REG not found"
    set $P5405, $P5407
  vivi_15852861:
    set $P5400, $P5405
  fallback2857:
    set fb_tmp_479, $P5400
    repr_defined $I5071, fb_tmp_479
    unless $I5071 goto if1582_else2855 
    set $P5408, fb_tmp_479["pos"]
    set $P5410, $P5408
    goto if1582_end2856
  if1582_else2855:
    null $P5409
    set $P5410, $P5409
  if1582_end2856:
    unless_null $P5410, vivi_15862862
    nqp_get_sc_object $P5411, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5410, $P5411
  vivi_15862862:
    find_dynamic_lex $P5412, "%*REG"
    unless_null $P5412, fallback2865
    nqp_get_sc_object $P5414, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5413, $P5414
    set pkg_viv_tmp_88, $P5413
    set fb_tmp_482, pkg_viv_tmp_88
    repr_defined $I5074, fb_tmp_482
    unless $I5074 goto if1588_else2866 
    set $P5415, fb_tmp_482["%REG"]
    set $P5417, $P5415
    goto if1588_end2867
  if1588_else2866:
    null $P5416
    set $P5417, $P5416
  if1588_end2867:
    unless_null $P5417, vivi_15892868
    new $P5418, 'Hash'
    set pkg_viv_tmp_88["%REG"], $P5418
    set $P5417, $P5418
  vivi_15892868:
    unless_null $P5417, vivi_15902869
    die "Contextual %*REG not found"
    box $P5419, "Contextual %*REG not found"
    set $P5417, $P5419
  vivi_15902869:
    set $P5412, $P5417
  fallback2865:
    set fb_tmp_481, $P5412
    repr_defined $I5073, fb_tmp_481
    unless $I5073 goto if1587_else2863 
    set $P5420, fb_tmp_481["eos"]
    set $P5422, $P5420
    goto if1587_end2864
  if1587_else2863:
    null $P5421
    set $P5422, $P5421
  if1587_end2864:
    unless_null $P5422, vivi_15912870
    nqp_get_sc_object $P5423, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5422, $P5423
  vivi_15912870:
    find_dynamic_lex $P5424, "%*REG"
    unless_null $P5424, fallback2873
    nqp_get_sc_object $P5426, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5425, $P5426
    set pkg_viv_tmp_89, $P5425
    set fb_tmp_484, pkg_viv_tmp_89
    repr_defined $I5076, fb_tmp_484
    unless $I5076 goto if1593_else2874 
    set $P5427, fb_tmp_484["%REG"]
    set $P5429, $P5427
    goto if1593_end2875
  if1593_else2874:
    null $P5428
    set $P5429, $P5428
  if1593_end2875:
    unless_null $P5429, vivi_15942876
    new $P5430, 'Hash'
    set pkg_viv_tmp_89["%REG"], $P5430
    set $P5429, $P5430
  vivi_15942876:
    unless_null $P5429, vivi_15952877
    die "Contextual %*REG not found"
    box $P5431, "Contextual %*REG not found"
    set $P5429, $P5431
  vivi_15952877:
    set $P5424, $P5429
  fallback2873:
    set fb_tmp_483, $P5424
    repr_defined $I5075, fb_tmp_483
    unless $I5075 goto if1592_else2871 
    set $P5432, fb_tmp_483["fail"]
    set $P5434, $P5432
    goto if1592_end2872
  if1592_else2871:
    null $P5433
    set $P5434, $P5433
  if1592_end2872:
    unless_null $P5434, vivi_15962878
    nqp_get_sc_object $P5435, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5434, $P5435
  vivi_15962878:
    $P101."push_pirop"("ne", $P5410, $P5422, $P5434)
.annotate 'line', 3822
    find_dynamic_lex $P5436, "%*REG"
    unless_null $P5436, fallback2881
    nqp_get_sc_object $P5438, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5437, $P5438
    set pkg_viv_tmp_90, $P5437
    set fb_tmp_486, pkg_viv_tmp_90
    repr_defined $I5078, fb_tmp_486
    unless $I5078 goto if1598_else2882 
    set $P5439, fb_tmp_486["%REG"]
    set $P5441, $P5439
    goto if1598_end2883
  if1598_else2882:
    null $P5440
    set $P5441, $P5440
  if1598_end2883:
    unless_null $P5441, vivi_15992884
    new $P5442, 'Hash'
    set pkg_viv_tmp_90["%REG"], $P5442
    set $P5441, $P5442
  vivi_15992884:
    unless_null $P5441, vivi_16002885
    die "Contextual %*REG not found"
    box $P5443, "Contextual %*REG not found"
    set $P5441, $P5443
  vivi_16002885:
    set $P5436, $P5441
  fallback2881:
    set fb_tmp_485, $P5436
    repr_defined $I5077, fb_tmp_485
    unless $I5077 goto if1597_else2879 
    set $P5444, fb_tmp_485["pos"]
    set $P5446, $P5444
    goto if1597_end2880
  if1597_else2879:
    null $P5445
    set $P5446, $P5445
  if1597_end2880:
    unless_null $P5446, vivi_16012886
    nqp_get_sc_object $P5447, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5446, $P5447
  vivi_16012886:
    $P101."push_pirop"("eq", $P5446, 0, $P103)
.annotate 'line', 3823
    find_dynamic_lex $P5448, "%*REG"
    unless_null $P5448, fallback2889
    nqp_get_sc_object $P5450, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5449, $P5450
    set pkg_viv_tmp_91, $P5449
    set fb_tmp_488, pkg_viv_tmp_91
    repr_defined $I5080, fb_tmp_488
    unless $I5080 goto if1603_else2890 
    set $P5451, fb_tmp_488["%REG"]
    set $P5453, $P5451
    goto if1603_end2891
  if1603_else2890:
    null $P5452
    set $P5453, $P5452
  if1603_end2891:
    unless_null $P5453, vivi_16042892
    new $P5454, 'Hash'
    set pkg_viv_tmp_91["%REG"], $P5454
    set $P5453, $P5454
  vivi_16042892:
    unless_null $P5453, vivi_16052893
    die "Contextual %*REG not found"
    box $P5455, "Contextual %*REG not found"
    set $P5453, $P5455
  vivi_16052893:
    set $P5448, $P5453
  fallback2889:
    set fb_tmp_487, $P5448
    repr_defined $I5079, fb_tmp_487
    unless $I5079 goto if1602_else2887 
    set $P5456, fb_tmp_487["pos"]
    set $P5458, $P5456
    goto if1602_end2888
  if1602_else2887:
    null $P5457
    set $P5458, $P5457
  if1602_end2888:
    unless_null $P5458, vivi_16062894
    nqp_get_sc_object $P5459, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5458, $P5459
  vivi_16062894:
    $P101."push_pirop"("sub", "$I11", $P5458, 1)
.annotate 'line', 3824
    find_dynamic_lex $P5460, "%*REG"
    unless_null $P5460, fallback2897
    nqp_get_sc_object $P5462, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5461, $P5462
    set pkg_viv_tmp_92, $P5461
    set fb_tmp_490, pkg_viv_tmp_92
    repr_defined $I5082, fb_tmp_490
    unless $I5082 goto if1608_else2898 
    set $P5463, fb_tmp_490["%REG"]
    set $P5465, $P5463
    goto if1608_end2899
  if1608_else2898:
    null $P5464
    set $P5465, $P5464
  if1608_end2899:
    unless_null $P5465, vivi_16092900
    new $P5466, 'Hash'
    set pkg_viv_tmp_92["%REG"], $P5466
    set $P5465, $P5466
  vivi_16092900:
    unless_null $P5465, vivi_16102901
    die "Contextual %*REG not found"
    box $P5467, "Contextual %*REG not found"
    set $P5465, $P5467
  vivi_16102901:
    set $P5460, $P5465
  fallback2897:
    set fb_tmp_489, $P5460
    repr_defined $I5081, fb_tmp_489
    unless $I5081 goto if1607_else2895 
    set $P5468, fb_tmp_489["tgt"]
    set $P5470, $P5468
    goto if1607_end2896
  if1607_else2895:
    null $P5469
    set $P5470, $P5469
  if1607_end2896:
    unless_null $P5470, vivi_16112902
    nqp_get_sc_object $P5471, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5470, $P5471
  vivi_16112902:
    $P101."push_pirop"("is_cclass", "$I11", ".CCLASS_NEWLINE", $P5470, "$I11")
.annotate 'line', 3825
    find_dynamic_lex $P5472, "%*REG"
    unless_null $P5472, fallback2905
    nqp_get_sc_object $P5474, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5473, $P5474
    set pkg_viv_tmp_93, $P5473
    set fb_tmp_492, pkg_viv_tmp_93
    repr_defined $I5084, fb_tmp_492
    unless $I5084 goto if1613_else2906 
    set $P5475, fb_tmp_492["%REG"]
    set $P5477, $P5475
    goto if1613_end2907
  if1613_else2906:
    null $P5476
    set $P5477, $P5476
  if1613_end2907:
    unless_null $P5477, vivi_16142908
    new $P5478, 'Hash'
    set pkg_viv_tmp_93["%REG"], $P5478
    set $P5477, $P5478
  vivi_16142908:
    unless_null $P5477, vivi_16152909
    die "Contextual %*REG not found"
    box $P5479, "Contextual %*REG not found"
    set $P5477, $P5479
  vivi_16152909:
    set $P5472, $P5477
  fallback2905:
    set fb_tmp_491, $P5472
    repr_defined $I5083, fb_tmp_491
    unless $I5083 goto if1612_else2903 
    set $P5480, fb_tmp_491["fail"]
    set $P5482, $P5480
    goto if1612_end2904
  if1612_else2903:
    null $P5481
    set $P5482, $P5481
  if1612_end2904:
    unless_null $P5482, vivi_16162910
    nqp_get_sc_object $P5483, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5482, $P5483
  vivi_16162910:
    $P101."push_pirop"("if", "$I11", $P5482)
.annotate 'line', 3826
    $P5484 = $P101."push"($P103)
    set $P5500, $P5484
    goto if1571_end2838
  if1571_else2837:
    set $S5009, $P102
    iseq $I5085, $S5009, "fail"
    box $P5499, $I5085
    set $P5498, $P5499
    unless $I5085 goto if1617_end2912 
.annotate 'line', 3828
.annotate 'line', 3829
    find_dynamic_lex $P5485, "%*REG"
    unless_null $P5485, fallback2915
    nqp_get_sc_object $P5487, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5486, $P5487
    set pkg_viv_tmp_94, $P5486
    set fb_tmp_494, pkg_viv_tmp_94
    repr_defined $I5087, fb_tmp_494
    unless $I5087 goto if1619_else2916 
    set $P5488, fb_tmp_494["%REG"]
    set $P5490, $P5488
    goto if1619_end2917
  if1619_else2916:
    null $P5489
    set $P5490, $P5489
  if1619_end2917:
    unless_null $P5490, vivi_16202918
    new $P5491, 'Hash'
    set pkg_viv_tmp_94["%REG"], $P5491
    set $P5490, $P5491
  vivi_16202918:
    unless_null $P5490, vivi_16212919
    die "Contextual %*REG not found"
    box $P5492, "Contextual %*REG not found"
    set $P5490, $P5492
  vivi_16212919:
    set $P5485, $P5490
  fallback2915:
    set fb_tmp_493, $P5485
    repr_defined $I5086, fb_tmp_493
    unless $I5086 goto if1618_else2913 
    set $P5493, fb_tmp_493["fail"]
    set $P5495, $P5493
    goto if1618_end2914
  if1618_else2913:
    null $P5494
    set $P5495, $P5494
  if1618_end2914:
    unless_null $P5495, vivi_16222920
    nqp_get_sc_object $P5496, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5495, $P5496
  vivi_16222920:
    $P5497 = $P101."push_pirop"("goto", $P5495)
    set $P5498, $P5497
  if1617_end2912:
    set $P5500, $P5498
  if1571_end2838:
    set $P5501, $P5500
  if1535_end2780:
    set $P5502, $P5501
  if1494_end2714:
    set $P5503, $P5502
  if1448_end2640:
    set $P5504, $P5503
  if1432_end2614:
  if1421_end2596:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "dba" :subid("cuid_123_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3835
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_495 
    .local pmc fb_tmp_496 
    .local pmc pkg_viv_tmp_95 
    .local pmc fb_tmp_497 
    .local pmc fb_tmp_498 
    .local pmc pkg_viv_tmp_96 
    .local pmc fb_tmp_499 
    .local pmc fb_tmp_500 
    .local pmc pkg_viv_tmp_97 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 3836
    nqp_decontainerize $P5002, _lex_param_0
    find_dynamic_lex $P5003, "%*REG"
    unless_null $P5003, fallback2923
    nqp_get_sc_object $P5005, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5004, $P5005
    set pkg_viv_tmp_95, $P5004
    set fb_tmp_496, pkg_viv_tmp_95
    repr_defined $I5002, fb_tmp_496
    unless $I5002 goto if1624_else2924 
    set $P5006, fb_tmp_496["%REG"]
    set $P5008, $P5006
    goto if1624_end2925
  if1624_else2924:
    null $P5007
    set $P5008, $P5007
  if1624_end2925:
    unless_null $P5008, vivi_16252926
    new $P5009, 'Hash'
    set pkg_viv_tmp_95["%REG"], $P5009
    set $P5008, $P5009
  vivi_16252926:
    unless_null $P5008, vivi_16262927
    die "Contextual %*REG not found"
    box $P5010, "Contextual %*REG not found"
    set $P5008, $P5010
  vivi_16262927:
    set $P5003, $P5008
  fallback2923:
    set fb_tmp_495, $P5003
    repr_defined $I5001, fb_tmp_495
    unless $I5001 goto if1623_else2921 
    set $P5011, fb_tmp_495["cur"]
    set $P5013, $P5011
    goto if1623_end2922
  if1623_else2921:
    null $P5012
    set $P5013, $P5012
  if1623_end2922:
    unless_null $P5013, vivi_16272928
    nqp_get_sc_object $P5014, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5013, $P5014
  vivi_16272928:
    $P5015 = $P5002."post_new"("Ops", $P5013 :named("result"))
    set $P101, $P5015
.annotate 'line', 3837
    find_dynamic_lex $P5016, "%*REG"
    unless_null $P5016, fallback2931
    nqp_get_sc_object $P5018, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5017, $P5018
    set pkg_viv_tmp_96, $P5017
    set fb_tmp_498, pkg_viv_tmp_96
    repr_defined $I5004, fb_tmp_498
    unless $I5004 goto if1629_else2932 
    set $P5019, fb_tmp_498["%REG"]
    set $P5021, $P5019
    goto if1629_end2933
  if1629_else2932:
    null $P5020
    set $P5021, $P5020
  if1629_end2933:
    unless_null $P5021, vivi_16302934
    new $P5022, 'Hash'
    set pkg_viv_tmp_96["%REG"], $P5022
    set $P5021, $P5022
  vivi_16302934:
    unless_null $P5021, vivi_16312935
    die "Contextual %*REG not found"
    box $P5023, "Contextual %*REG not found"
    set $P5021, $P5023
  vivi_16312935:
    set $P5016, $P5021
  fallback2931:
    set fb_tmp_497, $P5016
    repr_defined $I5003, fb_tmp_497
    unless $I5003 goto if1628_else2929 
    set $P5024, fb_tmp_497["cur"]
    set $P5026, $P5024
    goto if1628_end2930
  if1628_else2929:
    null $P5025
    set $P5026, $P5025
  if1628_end2930:
    unless_null $P5026, vivi_16322936
    nqp_get_sc_object $P5027, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5026, $P5027
  vivi_16322936:
    find_dynamic_lex $P5028, "%*REG"
    unless_null $P5028, fallback2939
    nqp_get_sc_object $P5030, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5029, $P5030
    set pkg_viv_tmp_97, $P5029
    set fb_tmp_500, pkg_viv_tmp_97
    repr_defined $I5006, fb_tmp_500
    unless $I5006 goto if1634_else2940 
    set $P5031, fb_tmp_500["%REG"]
    set $P5033, $P5031
    goto if1634_end2941
  if1634_else2940:
    null $P5032
    set $P5033, $P5032
  if1634_end2941:
    unless_null $P5033, vivi_16352942
    new $P5034, 'Hash'
    set pkg_viv_tmp_97["%REG"], $P5034
    set $P5033, $P5034
  vivi_16352942:
    unless_null $P5033, vivi_16362943
    die "Contextual %*REG not found"
    box $P5035, "Contextual %*REG not found"
    set $P5033, $P5035
  vivi_16362943:
    set $P5028, $P5033
  fallback2939:
    set fb_tmp_499, $P5028
    repr_defined $I5005, fb_tmp_499
    unless $I5005 goto if1633_else2937 
    set $P5036, fb_tmp_499["pos"]
    set $P5038, $P5036
    goto if1633_end2938
  if1633_else2937:
    null $P5037
    set $P5038, $P5037
  if1633_end2938:
    unless_null $P5038, vivi_16372944
    nqp_get_sc_object $P5039, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5038, $P5039
  vivi_16372944:
    nqp_decontainerize $P5040, _lex_param_0
    $P5041 = _lex_param_1."name"()
    $P5042 = $P5040."escape"($P5041)
    $P101."push_pirop"("callmethod", "\"!dba\"", $P5026, $P5038, $P5042)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "cclass" :subid("cuid_124_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3850
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5076 = 'cuid_373_1366375329.52446' 
    capture_lex $P5076 
    .lex "$ops", $P101 
    .lex "$subtype", $P102 
    .lex "$cclass", $P103 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_501 
    .local pmc fb_tmp_502 
    .local pmc pkg_viv_tmp_98 
    .local pmc fb_tmp_503 
    .local pmc fb_tmp_504 
    .local pmc pkg_viv_tmp_99 
    .local pmc fb_tmp_505 
    .local pmc fb_tmp_506 
    .local pmc pkg_viv_tmp_100 
    .local pmc fb_tmp_507 
    .local pmc fb_tmp_508 
    .local pmc pkg_viv_tmp_101 
    .local pmc fb_tmp_509 
    .local pmc fb_tmp_522 
    .local pmc fb_tmp_523 
    .local pmc pkg_viv_tmp_108 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
.annotate 'line', 3851
    nqp_decontainerize $P5004, _lex_param_0
    find_dynamic_lex $P5005, "%*REG"
    unless_null $P5005, fallback2947
    nqp_get_sc_object $P5007, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5006, $P5007
    set pkg_viv_tmp_98, $P5006
    set fb_tmp_502, pkg_viv_tmp_98
    repr_defined $I5002, fb_tmp_502
    unless $I5002 goto if1639_else2948 
    set $P5008, fb_tmp_502["%REG"]
    set $P5010, $P5008
    goto if1639_end2949
  if1639_else2948:
    null $P5009
    set $P5010, $P5009
  if1639_end2949:
    unless_null $P5010, vivi_16402950
    new $P5011, 'Hash'
    set pkg_viv_tmp_98["%REG"], $P5011
    set $P5010, $P5011
  vivi_16402950:
    unless_null $P5010, vivi_16412951
    die "Contextual %*REG not found"
    box $P5012, "Contextual %*REG not found"
    set $P5010, $P5012
  vivi_16412951:
    set $P5005, $P5010
  fallback2947:
    set fb_tmp_501, $P5005
    repr_defined $I5001, fb_tmp_501
    unless $I5001 goto if1638_else2945 
    set $P5013, fb_tmp_501["cur"]
    set $P5015, $P5013
    goto if1638_end2946
  if1638_else2945:
    null $P5014
    set $P5015, $P5014
  if1638_end2946:
    unless_null $P5015, vivi_16422952
    nqp_get_sc_object $P5016, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5015, $P5016
  vivi_16422952:
    $P5017 = $P5004."post_new"("Ops", $P5015 :named("result"))
    set $P101, $P5017
.annotate 'line', 3852
    $P5018 = _lex_param_1."name"()
    set $P102, $P5018
.annotate 'line', 3853
    find_dynamic_lex $P5019, "%*REG"
    unless_null $P5019, fallback2955
    nqp_get_sc_object $P5021, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5020, $P5021
    set pkg_viv_tmp_99, $P5020
    set fb_tmp_504, pkg_viv_tmp_99
    repr_defined $I5004, fb_tmp_504
    unless $I5004 goto if1644_else2956 
    set $P5022, fb_tmp_504["%REG"]
    set $P5024, $P5022
    goto if1644_end2957
  if1644_else2956:
    null $P5023
    set $P5024, $P5023
  if1644_end2957:
    unless_null $P5024, vivi_16452958
    new $P5025, 'Hash'
    set pkg_viv_tmp_99["%REG"], $P5025
    set $P5024, $P5025
  vivi_16452958:
    unless_null $P5024, vivi_16462959
    die "Contextual %*REG not found"
    box $P5026, "Contextual %*REG not found"
    set $P5024, $P5026
  vivi_16462959:
    set $P5019, $P5024
  fallback2955:
    set fb_tmp_503, $P5019
    repr_defined $I5003, fb_tmp_503
    unless $I5003 goto if1643_else2953 
    set $P5027, fb_tmp_503["pos"]
    set $P5029, $P5027
    goto if1643_end2954
  if1643_else2953:
    null $P5028
    set $P5029, $P5028
  if1643_end2954:
    unless_null $P5029, vivi_16472960
    nqp_get_sc_object $P5030, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5029, $P5030
  vivi_16472960:
    find_dynamic_lex $P5031, "%*REG"
    unless_null $P5031, fallback2963
    nqp_get_sc_object $P5033, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5032, $P5033
    set pkg_viv_tmp_100, $P5032
    set fb_tmp_506, pkg_viv_tmp_100
    repr_defined $I5006, fb_tmp_506
    unless $I5006 goto if1649_else2964 
    set $P5034, fb_tmp_506["%REG"]
    set $P5036, $P5034
    goto if1649_end2965
  if1649_else2964:
    null $P5035
    set $P5036, $P5035
  if1649_end2965:
    unless_null $P5036, vivi_16502966
    new $P5037, 'Hash'
    set pkg_viv_tmp_100["%REG"], $P5037
    set $P5036, $P5037
  vivi_16502966:
    unless_null $P5036, vivi_16512967
    die "Contextual %*REG not found"
    box $P5038, "Contextual %*REG not found"
    set $P5036, $P5038
  vivi_16512967:
    set $P5031, $P5036
  fallback2963:
    set fb_tmp_505, $P5031
    repr_defined $I5005, fb_tmp_505
    unless $I5005 goto if1648_else2961 
    set $P5039, fb_tmp_505["eos"]
    set $P5041, $P5039
    goto if1648_end2962
  if1648_else2961:
    null $P5040
    set $P5041, $P5040
  if1648_end2962:
    unless_null $P5041, vivi_16522968
    nqp_get_sc_object $P5042, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5041, $P5042
  vivi_16522968:
    find_dynamic_lex $P5043, "%*REG"
    unless_null $P5043, fallback2971
    nqp_get_sc_object $P5045, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5044, $P5045
    set pkg_viv_tmp_101, $P5044
    set fb_tmp_508, pkg_viv_tmp_101
    repr_defined $I5008, fb_tmp_508
    unless $I5008 goto if1654_else2972 
    set $P5046, fb_tmp_508["%REG"]
    set $P5048, $P5046
    goto if1654_end2973
  if1654_else2972:
    null $P5047
    set $P5048, $P5047
  if1654_end2973:
    unless_null $P5048, vivi_16552974
    new $P5049, 'Hash'
    set pkg_viv_tmp_101["%REG"], $P5049
    set $P5048, $P5049
  vivi_16552974:
    unless_null $P5048, vivi_16562975
    die "Contextual %*REG not found"
    box $P5050, "Contextual %*REG not found"
    set $P5048, $P5050
  vivi_16562975:
    set $P5043, $P5048
  fallback2971:
    set fb_tmp_507, $P5043
    repr_defined $I5007, fb_tmp_507
    unless $I5007 goto if1653_else2969 
    set $P5051, fb_tmp_507["fail"]
    set $P5053, $P5051
    goto if1653_end2970
  if1653_else2969:
    null $P5052
    set $P5053, $P5052
  if1653_end2970:
    unless_null $P5053, vivi_16572976
    nqp_get_sc_object $P5054, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5053, $P5054
  vivi_16572976:
    $P101."push_pirop"("ge", $P5029, $P5041, $P5053)
    find_lex $P5055, "%cclass_code"
    set fb_tmp_509, $P5055
    repr_defined $I5009, fb_tmp_509
    unless $I5009 goto if1658_else2977 
    set $S5001, $P102
    set $P5056, fb_tmp_509[$S5001]
    set $P5058, $P5056
    goto if1658_end2978
  if1658_else2977:
    null $P5057
    set $P5058, $P5057
  if1658_end2978:
    unless_null $P5058, vivi_16592979
    nqp_get_sc_object $P5059, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5058, $P5059
  vivi_16592979:
    set $P103, $P5058
    if $P103 goto unless1660_end2981 
.annotate 'line', 3855
    nqp_decontainerize $P5060, _lex_param_0
    set $S5004, $P102
    concat $S5003, "Unrecognized subtype '", $S5004
    concat $S5002, $S5003, "' in QAST::Regex cclass"
    $P5061 = $P5060."panic"($S5002)
  unless1660_end2981:
    set $S5005, $P103
    isne $I5010, $S5005, ".CCLASS_ANY"
    unless $I5010 goto if1661_end2983 
    .const 'Sub' $P5062 = 'cuid_373_1366375329.52446' 
    capture_lex $P5062
    $P5063 = $P5062()
  if1661_end2983:
.annotate 'line', 3867
    find_dynamic_lex $P5064, "%*REG"
    unless_null $P5064, fallback3038
    nqp_get_sc_object $P5066, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5065, $P5066
    set pkg_viv_tmp_108, $P5065
    set fb_tmp_523, pkg_viv_tmp_108
    repr_defined $I5012, fb_tmp_523
    unless $I5012 goto if1695_else3039 
    set $P5067, fb_tmp_523["%REG"]
    set $P5069, $P5067
    goto if1695_end3040
  if1695_else3039:
    null $P5068
    set $P5069, $P5068
  if1695_end3040:
    unless_null $P5069, vivi_16963041
    new $P5070, 'Hash'
    set pkg_viv_tmp_108["%REG"], $P5070
    set $P5069, $P5070
  vivi_16963041:
    unless_null $P5069, vivi_16973042
    die "Contextual %*REG not found"
    box $P5071, "Contextual %*REG not found"
    set $P5069, $P5071
  vivi_16973042:
    set $P5064, $P5069
  fallback3038:
    set fb_tmp_522, $P5064
    repr_defined $I5011, fb_tmp_522
    unless $I5011 goto if1694_else3036 
    set $P5072, fb_tmp_522["pos"]
    set $P5074, $P5072
    goto if1694_end3037
  if1694_else3036:
    null $P5073
    set $P5074, $P5073
  if1694_end3037:
    unless_null $P5074, vivi_16983043
    nqp_get_sc_object $P5075, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5074, $P5075
  vivi_16983043:
    $P101."push_pirop"("add", $P5074, 1)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_373_1366375329.52446") :anon :lex :outer("cuid_124_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3857
    .lex "$testop", $P101 
    .local pmc fb_tmp_510 
    .local pmc fb_tmp_511 
    .local pmc pkg_viv_tmp_102 
    .local pmc fb_tmp_512 
    .local pmc fb_tmp_513 
    .local pmc pkg_viv_tmp_103 
    .local pmc fb_tmp_514 
    .local pmc fb_tmp_515 
    .local pmc pkg_viv_tmp_104 
    .local pmc fb_tmp_516 
    .local pmc fb_tmp_517 
    .local pmc pkg_viv_tmp_105 
    .local pmc fb_tmp_518 
    .local pmc fb_tmp_519 
    .local pmc pkg_viv_tmp_106 
    .local pmc fb_tmp_520 
    .local pmc fb_tmp_521 
    .local pmc pkg_viv_tmp_107 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 3858
    find_lex $P5002, "$node"
    $P5003 = $P5002."negate"()
    unless $P5003 goto if1662_else2984 
    set $S5001, "if"
    goto if1662_end2985
  if1662_else2984:
    set $S5001, "unless"
  if1662_end2985:
    box $P5004, $S5001
    set $P101, $P5004
.annotate 'line', 3859
    find_lex $P5005, "$ops"
    find_lex $P5006, "$cclass"
    find_dynamic_lex $P5007, "%*REG"
    unless_null $P5007, fallback2988
    nqp_get_sc_object $P5009, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5008, $P5009
    set pkg_viv_tmp_102, $P5008
    set fb_tmp_511, pkg_viv_tmp_102
    repr_defined $I5002, fb_tmp_511
    unless $I5002 goto if1664_else2989 
    set $P5010, fb_tmp_511["%REG"]
    set $P5012, $P5010
    goto if1664_end2990
  if1664_else2989:
    null $P5011
    set $P5012, $P5011
  if1664_end2990:
    unless_null $P5012, vivi_16652991
    new $P5013, 'Hash'
    set pkg_viv_tmp_102["%REG"], $P5013
    set $P5012, $P5013
  vivi_16652991:
    unless_null $P5012, vivi_16662992
    die "Contextual %*REG not found"
    box $P5014, "Contextual %*REG not found"
    set $P5012, $P5014
  vivi_16662992:
    set $P5007, $P5012
  fallback2988:
    set fb_tmp_510, $P5007
    repr_defined $I5001, fb_tmp_510
    unless $I5001 goto if1663_else2986 
    set $P5015, fb_tmp_510["tgt"]
    set $P5017, $P5015
    goto if1663_end2987
  if1663_else2986:
    null $P5016
    set $P5017, $P5016
  if1663_end2987:
    unless_null $P5017, vivi_16672993
    nqp_get_sc_object $P5018, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5017, $P5018
  vivi_16672993:
    find_dynamic_lex $P5019, "%*REG"
    unless_null $P5019, fallback2996
    nqp_get_sc_object $P5021, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5020, $P5021
    set pkg_viv_tmp_103, $P5020
    set fb_tmp_513, pkg_viv_tmp_103
    repr_defined $I5004, fb_tmp_513
    unless $I5004 goto if1669_else2997 
    set $P5022, fb_tmp_513["%REG"]
    set $P5024, $P5022
    goto if1669_end2998
  if1669_else2997:
    null $P5023
    set $P5024, $P5023
  if1669_end2998:
    unless_null $P5024, vivi_16702999
    new $P5025, 'Hash'
    set pkg_viv_tmp_103["%REG"], $P5025
    set $P5024, $P5025
  vivi_16702999:
    unless_null $P5024, vivi_16713000
    die "Contextual %*REG not found"
    box $P5026, "Contextual %*REG not found"
    set $P5024, $P5026
  vivi_16713000:
    set $P5019, $P5024
  fallback2996:
    set fb_tmp_512, $P5019
    repr_defined $I5003, fb_tmp_512
    unless $I5003 goto if1668_else2994 
    set $P5027, fb_tmp_512["pos"]
    set $P5029, $P5027
    goto if1668_end2995
  if1668_else2994:
    null $P5028
    set $P5029, $P5028
  if1668_end2995:
    unless_null $P5029, vivi_16723001
    nqp_get_sc_object $P5030, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5029, $P5030
  vivi_16723001:
    $P5005."push_pirop"("is_cclass", "$I11", $P5006, $P5017, $P5029)
.annotate 'line', 3860
    find_lex $P5031, "$ops"
    find_dynamic_lex $P5032, "%*REG"
    unless_null $P5032, fallback3004
    nqp_get_sc_object $P5034, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5033, $P5034
    set pkg_viv_tmp_104, $P5033
    set fb_tmp_515, pkg_viv_tmp_104
    repr_defined $I5006, fb_tmp_515
    unless $I5006 goto if1674_else3005 
    set $P5035, fb_tmp_515["%REG"]
    set $P5037, $P5035
    goto if1674_end3006
  if1674_else3005:
    null $P5036
    set $P5037, $P5036
  if1674_end3006:
    unless_null $P5037, vivi_16753007
    new $P5038, 'Hash'
    set pkg_viv_tmp_104["%REG"], $P5038
    set $P5037, $P5038
  vivi_16753007:
    unless_null $P5037, vivi_16763008
    die "Contextual %*REG not found"
    box $P5039, "Contextual %*REG not found"
    set $P5037, $P5039
  vivi_16763008:
    set $P5032, $P5037
  fallback3004:
    set fb_tmp_514, $P5032
    repr_defined $I5005, fb_tmp_514
    unless $I5005 goto if1673_else3002 
    set $P5040, fb_tmp_514["fail"]
    set $P5042, $P5040
    goto if1673_end3003
  if1673_else3002:
    null $P5041
    set $P5042, $P5041
  if1673_end3003:
    unless_null $P5042, vivi_16773009
    nqp_get_sc_object $P5043, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5042, $P5043
  vivi_16773009:
    $P5031."push_pirop"($P101, "$I11", $P5042)
    find_lex $P5044, "$cclass"
    set $S5002, $P5044
    iseq $I5007, $S5002, ".CCLASS_NEWLINE"
    box $P5086, $I5007
    set $P5085, $P5086
    unless $I5007 goto if1678_end3011 
.annotate 'line', 3861
.annotate 'line', 3862
    find_lex $P5045, "$ops"
    find_dynamic_lex $P5046, "%*REG"
    unless_null $P5046, fallback3014
    nqp_get_sc_object $P5048, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5047, $P5048
    set pkg_viv_tmp_105, $P5047
    set fb_tmp_517, pkg_viv_tmp_105
    repr_defined $I5009, fb_tmp_517
    unless $I5009 goto if1680_else3015 
    set $P5049, fb_tmp_517["%REG"]
    set $P5051, $P5049
    goto if1680_end3016
  if1680_else3015:
    null $P5050
    set $P5051, $P5050
  if1680_end3016:
    unless_null $P5051, vivi_16813017
    new $P5052, 'Hash'
    set pkg_viv_tmp_105["%REG"], $P5052
    set $P5051, $P5052
  vivi_16813017:
    unless_null $P5051, vivi_16823018
    die "Contextual %*REG not found"
    box $P5053, "Contextual %*REG not found"
    set $P5051, $P5053
  vivi_16823018:
    set $P5046, $P5051
  fallback3014:
    set fb_tmp_516, $P5046
    repr_defined $I5008, fb_tmp_516
    unless $I5008 goto if1679_else3012 
    set $P5054, fb_tmp_516["tgt"]
    set $P5056, $P5054
    goto if1679_end3013
  if1679_else3012:
    null $P5055
    set $P5056, $P5055
  if1679_end3013:
    unless_null $P5056, vivi_16833019
    nqp_get_sc_object $P5057, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5056, $P5057
  vivi_16833019:
    find_dynamic_lex $P5058, "%*REG"
    unless_null $P5058, fallback3022
    nqp_get_sc_object $P5060, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5059, $P5060
    set pkg_viv_tmp_106, $P5059
    set fb_tmp_519, pkg_viv_tmp_106
    repr_defined $I5011, fb_tmp_519
    unless $I5011 goto if1685_else3023 
    set $P5061, fb_tmp_519["%REG"]
    set $P5063, $P5061
    goto if1685_end3024
  if1685_else3023:
    null $P5062
    set $P5063, $P5062
  if1685_end3024:
    unless_null $P5063, vivi_16863025
    new $P5064, 'Hash'
    set pkg_viv_tmp_106["%REG"], $P5064
    set $P5063, $P5064
  vivi_16863025:
    unless_null $P5063, vivi_16873026
    die "Contextual %*REG not found"
    box $P5065, "Contextual %*REG not found"
    set $P5063, $P5065
  vivi_16873026:
    set $P5058, $P5063
  fallback3022:
    set fb_tmp_518, $P5058
    repr_defined $I5010, fb_tmp_518
    unless $I5010 goto if1684_else3020 
    set $P5066, fb_tmp_518["pos"]
    set $P5068, $P5066
    goto if1684_end3021
  if1684_else3020:
    null $P5067
    set $P5068, $P5067
  if1684_end3021:
    unless_null $P5068, vivi_16883027
    nqp_get_sc_object $P5069, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5068, $P5069
  vivi_16883027:
    $P5045."push_pirop"("substr", "$S10", $P5056, $P5068, 2)
.annotate 'line', 3863
    find_lex $P5070, "$ops"
    $P5070."push_pirop"("iseq", "$I11", "$S10", "\"\\r\\n\"")
.annotate 'line', 3864
    find_lex $P5071, "$ops"
    find_dynamic_lex $P5072, "%*REG"
    unless_null $P5072, fallback3030
    nqp_get_sc_object $P5074, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5073, $P5074
    set pkg_viv_tmp_107, $P5073
    set fb_tmp_521, pkg_viv_tmp_107
    repr_defined $I5013, fb_tmp_521
    unless $I5013 goto if1690_else3031 
    set $P5075, fb_tmp_521["%REG"]
    set $P5077, $P5075
    goto if1690_end3032
  if1690_else3031:
    null $P5076
    set $P5077, $P5076
  if1690_end3032:
    unless_null $P5077, vivi_16913033
    new $P5078, 'Hash'
    set pkg_viv_tmp_107["%REG"], $P5078
    set $P5077, $P5078
  vivi_16913033:
    unless_null $P5077, vivi_16923034
    die "Contextual %*REG not found"
    box $P5079, "Contextual %*REG not found"
    set $P5077, $P5079
  vivi_16923034:
    set $P5072, $P5077
  fallback3030:
    set fb_tmp_520, $P5072
    repr_defined $I5012, fb_tmp_520
    unless $I5012 goto if1689_else3028 
    set $P5080, fb_tmp_520["pos"]
    set $P5082, $P5080
    goto if1689_end3029
  if1689_else3028:
    null $P5081
    set $P5082, $P5081
  if1689_end3029:
    unless_null $P5082, vivi_16933035
    nqp_get_sc_object $P5083, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5082, $P5083
  vivi_16933035:
    $P5084 = $P5071."push_pirop"("add", $P5082, "$I11")
    set $P5085, $P5084
  if1678_end3011:
    .return ($P5085) 
.end
.HLL "nqp"
.namespace []
.sub "concat" :subid("cuid_125_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3871
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5022 = 'cuid_374_1366375329.52446' 
    capture_lex $P5022 
    .lex "$ops", $P101 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_524 
    .local pmc fb_tmp_525 
    .local pmc pkg_viv_tmp_109 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 3872
    nqp_decontainerize $P5002, _lex_param_0
    find_dynamic_lex $P5003, "%*REG"
    unless_null $P5003, fallback3046
    nqp_get_sc_object $P5005, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5004, $P5005
    set pkg_viv_tmp_109, $P5004
    set fb_tmp_525, pkg_viv_tmp_109
    repr_defined $I5002, fb_tmp_525
    unless $I5002 goto if1700_else3047 
    set $P5006, fb_tmp_525["%REG"]
    set $P5008, $P5006
    goto if1700_end3048
  if1700_else3047:
    null $P5007
    set $P5008, $P5007
  if1700_end3048:
    unless_null $P5008, vivi_17013049
    new $P5009, 'Hash'
    set pkg_viv_tmp_109["%REG"], $P5009
    set $P5008, $P5009
  vivi_17013049:
    unless_null $P5008, vivi_17023050
    die "Contextual %*REG not found"
    box $P5010, "Contextual %*REG not found"
    set $P5008, $P5010
  vivi_17023050:
    set $P5003, $P5008
  fallback3046:
    set fb_tmp_524, $P5003
    repr_defined $I5001, fb_tmp_524
    unless $I5001 goto if1699_else3044 
    set $P5011, fb_tmp_524["cur"]
    set $P5013, $P5011
    goto if1699_end3045
  if1699_else3044:
    null $P5012
    set $P5013, $P5012
  if1699_end3045:
    unless_null $P5013, vivi_17033051
    nqp_get_sc_object $P5014, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5013, $P5014
  vivi_17033051:
    $P5015 = $P5002."post_new"("Ops", $P5013 :named("result"))
    set $P101, $P5015
.annotate 'line', 3873
    $P5019 = _lex_param_1."list"()
    set $P5016, $P5019
    iter $P5018, $P5019
  for_next3052:
    unless $P5018, for_done3054
    shift $P5021, $P5018
  for_redo3053:
    .const 'Sub' $P5020 = 'cuid_374_1366375329.52446' 
    capture_lex $P5020
    $P5016 = $P5020($P5021)
    goto for_next3052
  for_done3054:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_374_1366375329.52446") :anon :lex :outer("cuid_125_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3873
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "$ops"
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    $P5004 = $P5002."regex_post"(_lex_param_0)
    $P5005 = $P5001."push"($P5004)
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "conj" :subid("cuid_126_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3877
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    nqp_decontainerize $P5001, _lex_param_0
    $P5002 = $P5001."conjseq"(_lex_param_1)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "conjseq" :subid("cuid_127_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3879
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "$prefix", $P102 
    .lex "$conjlabel", $P103 
    .lex "$firstlabel", $P104 
    .lex "$iter", $P105 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_526 
    .local pmc fb_tmp_527 
    .local pmc pkg_viv_tmp_110 
    .local pmc fb_tmp_528 
    .local pmc fb_tmp_529 
    .local pmc pkg_viv_tmp_111 
    .local pmc fb_tmp_530 
    .local pmc fb_tmp_531 
    .local pmc pkg_viv_tmp_112 
    .local pmc fb_tmp_532 
    .local pmc fb_tmp_533 
    .local pmc pkg_viv_tmp_113 
    .local pmc fb_tmp_534 
    .local pmc fb_tmp_535 
    .local pmc pkg_viv_tmp_114 
    .local pmc fb_tmp_536 
    .local pmc fb_tmp_537 
    .local pmc pkg_viv_tmp_115 
    .local pmc fb_tmp_538 
    .local pmc fb_tmp_539 
    .local pmc pkg_viv_tmp_116 
    .local pmc fb_tmp_540 
    .local pmc fb_tmp_541 
    .local pmc pkg_viv_tmp_117 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P105, $P5005
.annotate 'line', 3880
    nqp_decontainerize $P5006, _lex_param_0
    find_dynamic_lex $P5007, "%*REG"
    unless_null $P5007, fallback3057
    nqp_get_sc_object $P5009, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5008, $P5009
    set pkg_viv_tmp_110, $P5008
    set fb_tmp_527, pkg_viv_tmp_110
    repr_defined $I5002, fb_tmp_527
    unless $I5002 goto if1705_else3058 
    set $P5010, fb_tmp_527["%REG"]
    set $P5012, $P5010
    goto if1705_end3059
  if1705_else3058:
    null $P5011
    set $P5012, $P5011
  if1705_end3059:
    unless_null $P5012, vivi_17063060
    new $P5013, 'Hash'
    set pkg_viv_tmp_110["%REG"], $P5013
    set $P5012, $P5013
  vivi_17063060:
    unless_null $P5012, vivi_17073061
    die "Contextual %*REG not found"
    box $P5014, "Contextual %*REG not found"
    set $P5012, $P5014
  vivi_17073061:
    set $P5007, $P5012
  fallback3057:
    set fb_tmp_526, $P5007
    repr_defined $I5001, fb_tmp_526
    unless $I5001 goto if1704_else3055 
    set $P5015, fb_tmp_526["cur"]
    set $P5017, $P5015
    goto if1704_end3056
  if1704_else3055:
    null $P5016
    set $P5017, $P5016
  if1704_end3056:
    unless_null $P5017, vivi_17083062
    nqp_get_sc_object $P5018, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5017, $P5018
  vivi_17083062:
    $P5019 = $P5006."post_new"("Ops", $P5017 :named("result"))
    set $P101, $P5019
.annotate 'line', 3881
    nqp_decontainerize $P5020, _lex_param_0
    $P5021 = $P5020."unique"("rxconj")
    set $S5002, $P5021
    concat $S5001, $S5002, "_"
    box $P5022, $S5001
    set $P102, $P5022
.annotate 'line', 3882
    nqp_decontainerize $P5023, _lex_param_0
    set $S5004, $P102
    concat $S5003, $S5004, "fail"
    $P5024 = $P5023."post_new"("Label", $S5003 :named("name"))
    set $P103, $P5024
.annotate 'line', 3883
    nqp_decontainerize $P5025, _lex_param_0
    set $S5006, $P102
    concat $S5005, $S5006, "first"
    $P5026 = $P5025."post_new"("Label", $S5005 :named("name"))
    set $P104, $P5026
.annotate 'line', 3884
    $P5028 = _lex_param_1."list"()
    iter $P5027, $P5028
    set $P105, $P5027
.annotate 'line', 3886
    nqp_decontainerize $P5029, _lex_param_0
    find_dynamic_lex $P5030, "%*REG"
    unless_null $P5030, fallback3065
    nqp_get_sc_object $P5032, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5031, $P5032
    set pkg_viv_tmp_111, $P5031
    set fb_tmp_529, pkg_viv_tmp_111
    repr_defined $I5004, fb_tmp_529
    unless $I5004 goto if1710_else3066 
    set $P5033, fb_tmp_529["%REG"]
    set $P5035, $P5033
    goto if1710_end3067
  if1710_else3066:
    null $P5034
    set $P5035, $P5034
  if1710_end3067:
    unless_null $P5035, vivi_17113068
    new $P5036, 'Hash'
    set pkg_viv_tmp_111["%REG"], $P5036
    set $P5035, $P5036
  vivi_17113068:
    unless_null $P5035, vivi_17123069
    die "Contextual %*REG not found"
    box $P5037, "Contextual %*REG not found"
    set $P5035, $P5037
  vivi_17123069:
    set $P5030, $P5035
  fallback3065:
    set fb_tmp_528, $P5030
    repr_defined $I5003, fb_tmp_528
    unless $I5003 goto if1709_else3063 
    set $P5038, fb_tmp_528["pos"]
    set $P5040, $P5038
    goto if1709_end3064
  if1709_else3063:
    null $P5039
    set $P5040, $P5039
  if1709_end3064:
    unless_null $P5040, vivi_17133070
    nqp_get_sc_object $P5041, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5040, $P5041
  vivi_17133070:
    $P5029."regex_mark"($P101, $P103, $P5040, 0)
.annotate 'line', 3887
    $P101."push_pirop"("goto", $P104)
.annotate 'line', 3888
    $P101."push"($P103)
.annotate 'line', 3889
    find_dynamic_lex $P5042, "%*REG"
    unless_null $P5042, fallback3073
    nqp_get_sc_object $P5044, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5043, $P5044
    set pkg_viv_tmp_112, $P5043
    set fb_tmp_531, pkg_viv_tmp_112
    repr_defined $I5006, fb_tmp_531
    unless $I5006 goto if1715_else3074 
    set $P5045, fb_tmp_531["%REG"]
    set $P5047, $P5045
    goto if1715_end3075
  if1715_else3074:
    null $P5046
    set $P5047, $P5046
  if1715_end3075:
    unless_null $P5047, vivi_17163076
    new $P5048, 'Hash'
    set pkg_viv_tmp_112["%REG"], $P5048
    set $P5047, $P5048
  vivi_17163076:
    unless_null $P5047, vivi_17173077
    die "Contextual %*REG not found"
    box $P5049, "Contextual %*REG not found"
    set $P5047, $P5049
  vivi_17173077:
    set $P5042, $P5047
  fallback3073:
    set fb_tmp_530, $P5042
    repr_defined $I5005, fb_tmp_530
    unless $I5005 goto if1714_else3071 
    set $P5050, fb_tmp_530["fail"]
    set $P5052, $P5050
    goto if1714_end3072
  if1714_else3071:
    null $P5051
    set $P5052, $P5051
  if1714_end3072:
    unless_null $P5052, vivi_17183078
    nqp_get_sc_object $P5053, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5052, $P5053
  vivi_17183078:
    $P101."push_pirop"("goto", $P5052)
.annotate 'line', 3891
    $P101."push"($P104)
.annotate 'line', 3892
    nqp_decontainerize $P5054, _lex_param_0
    shift $P5055, $P105
    $P5056 = $P5054."regex_post"($P5055)
    $P101."push"($P5056)
.annotate 'line', 3894
    nqp_decontainerize $P5057, _lex_param_0
    $P5057."regex_peek"($P101, $P103, "$I11")
.annotate 'line', 3895
    nqp_decontainerize $P5058, _lex_param_0
    find_dynamic_lex $P5059, "%*REG"
    unless_null $P5059, fallback3081
    nqp_get_sc_object $P5061, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5060, $P5061
    set pkg_viv_tmp_113, $P5060
    set fb_tmp_533, pkg_viv_tmp_113
    repr_defined $I5008, fb_tmp_533
    unless $I5008 goto if1720_else3082 
    set $P5062, fb_tmp_533["%REG"]
    set $P5064, $P5062
    goto if1720_end3083
  if1720_else3082:
    null $P5063
    set $P5064, $P5063
  if1720_end3083:
    unless_null $P5064, vivi_17213084
    new $P5065, 'Hash'
    set pkg_viv_tmp_113["%REG"], $P5065
    set $P5064, $P5065
  vivi_17213084:
    unless_null $P5064, vivi_17223085
    die "Contextual %*REG not found"
    box $P5066, "Contextual %*REG not found"
    set $P5064, $P5066
  vivi_17223085:
    set $P5059, $P5064
  fallback3081:
    set fb_tmp_532, $P5059
    repr_defined $I5007, fb_tmp_532
    unless $I5007 goto if1719_else3079 
    set $P5067, fb_tmp_532["pos"]
    set $P5069, $P5067
    goto if1719_end3080
  if1719_else3079:
    null $P5068
    set $P5069, $P5068
  if1719_end3080:
    unless_null $P5069, vivi_17233086
    nqp_get_sc_object $P5070, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5069, $P5070
  vivi_17233086:
    $P5058."regex_mark"($P101, $P103, "$I11", $P5069)
  while1724_test3087:
    set $P5112, $P105
    unless $P105 goto while1724_done3091 
  while1724_redo3089:
.annotate 'line', 3897
.annotate 'line', 3898
    find_dynamic_lex $P5071, "%*REG"
    unless_null $P5071, fallback3094
    nqp_get_sc_object $P5073, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5072, $P5073
    set pkg_viv_tmp_114, $P5072
    set fb_tmp_535, pkg_viv_tmp_114
    repr_defined $I5010, fb_tmp_535
    unless $I5010 goto if1726_else3095 
    set $P5074, fb_tmp_535["%REG"]
    set $P5076, $P5074
    goto if1726_end3096
  if1726_else3095:
    null $P5075
    set $P5076, $P5075
  if1726_end3096:
    unless_null $P5076, vivi_17273097
    new $P5077, 'Hash'
    set pkg_viv_tmp_114["%REG"], $P5077
    set $P5076, $P5077
  vivi_17273097:
    unless_null $P5076, vivi_17283098
    die "Contextual %*REG not found"
    box $P5078, "Contextual %*REG not found"
    set $P5076, $P5078
  vivi_17283098:
    set $P5071, $P5076
  fallback3094:
    set fb_tmp_534, $P5071
    repr_defined $I5009, fb_tmp_534
    unless $I5009 goto if1725_else3092 
    set $P5079, fb_tmp_534["pos"]
    set $P5081, $P5079
    goto if1725_end3093
  if1725_else3092:
    null $P5080
    set $P5081, $P5080
  if1725_end3093:
    unless_null $P5081, vivi_17293099
    nqp_get_sc_object $P5082, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5081, $P5082
  vivi_17293099:
    $P101."push_pirop"("set", $P5081, "$I11")
.annotate 'line', 3899
    nqp_decontainerize $P5083, _lex_param_0
    shift $P5084, $P105
    $P5085 = $P5083."regex_post"($P5084)
    $P101."push"($P5085)
.annotate 'line', 3900
    nqp_decontainerize $P5086, _lex_param_0
    $P5086."regex_peek"($P101, $P103, "$I11", "$I12")
.annotate 'line', 3901
    find_dynamic_lex $P5087, "%*REG"
    unless_null $P5087, fallback3102
    nqp_get_sc_object $P5089, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5088, $P5089
    set pkg_viv_tmp_115, $P5088
    set fb_tmp_537, pkg_viv_tmp_115
    repr_defined $I5012, fb_tmp_537
    unless $I5012 goto if1731_else3103 
    set $P5090, fb_tmp_537["%REG"]
    set $P5092, $P5090
    goto if1731_end3104
  if1731_else3103:
    null $P5091
    set $P5092, $P5091
  if1731_end3104:
    unless_null $P5092, vivi_17323105
    new $P5093, 'Hash'
    set pkg_viv_tmp_115["%REG"], $P5093
    set $P5092, $P5093
  vivi_17323105:
    unless_null $P5092, vivi_17333106
    die "Contextual %*REG not found"
    box $P5094, "Contextual %*REG not found"
    set $P5092, $P5094
  vivi_17333106:
    set $P5087, $P5092
  fallback3102:
    set fb_tmp_536, $P5087
    repr_defined $I5011, fb_tmp_536
    unless $I5011 goto if1730_else3100 
    set $P5095, fb_tmp_536["pos"]
    set $P5097, $P5095
    goto if1730_end3101
  if1730_else3100:
    null $P5096
    set $P5097, $P5096
  if1730_end3101:
    unless_null $P5097, vivi_17343107
    nqp_get_sc_object $P5098, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5097, $P5098
  vivi_17343107:
    find_dynamic_lex $P5099, "%*REG"
    unless_null $P5099, fallback3110
    nqp_get_sc_object $P5101, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5100, $P5101
    set pkg_viv_tmp_116, $P5100
    set fb_tmp_539, pkg_viv_tmp_116
    repr_defined $I5014, fb_tmp_539
    unless $I5014 goto if1736_else3111 
    set $P5102, fb_tmp_539["%REG"]
    set $P5104, $P5102
    goto if1736_end3112
  if1736_else3111:
    null $P5103
    set $P5104, $P5103
  if1736_end3112:
    unless_null $P5104, vivi_17373113
    new $P5105, 'Hash'
    set pkg_viv_tmp_116["%REG"], $P5105
    set $P5104, $P5105
  vivi_17373113:
    unless_null $P5104, vivi_17383114
    die "Contextual %*REG not found"
    box $P5106, "Contextual %*REG not found"
    set $P5104, $P5106
  vivi_17383114:
    set $P5099, $P5104
  fallback3110:
    set fb_tmp_538, $P5099
    repr_defined $I5013, fb_tmp_538
    unless $I5013 goto if1735_else3108 
    set $P5107, fb_tmp_538["fail"]
    set $P5109, $P5107
    goto if1735_end3109
  if1735_else3108:
    null $P5108
    set $P5109, $P5108
  if1735_end3109:
    unless_null $P5109, vivi_17393115
    nqp_get_sc_object $P5110, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5109, $P5110
  vivi_17393115:
    $P5111 = $P101."push_pirop"("ne", $P5097, "$I12", $P5109)
    set $P5112, $P5111
    goto while1724_test3087 
  while1724_done3091:
.annotate 'line', 3903
    $P5113 = _lex_param_1."subtype"()
    set $S5007, $P5113
    iseq $I5015, $S5007, "zerowidth"
    unless $I5015 goto if1740_end3117 
    find_dynamic_lex $P5114, "%*REG"
    unless_null $P5114, fallback3120
    nqp_get_sc_object $P5116, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5115, $P5116
    set pkg_viv_tmp_117, $P5115
    set fb_tmp_541, pkg_viv_tmp_117
    repr_defined $I5017, fb_tmp_541
    unless $I5017 goto if1742_else3121 
    set $P5117, fb_tmp_541["%REG"]
    set $P5119, $P5117
    goto if1742_end3122
  if1742_else3121:
    null $P5118
    set $P5119, $P5118
  if1742_end3122:
    unless_null $P5119, vivi_17433123
    new $P5120, 'Hash'
    set pkg_viv_tmp_117["%REG"], $P5120
    set $P5119, $P5120
  vivi_17433123:
    unless_null $P5119, vivi_17443124
    die "Contextual %*REG not found"
    box $P5121, "Contextual %*REG not found"
    set $P5119, $P5121
  vivi_17443124:
    set $P5114, $P5119
  fallback3120:
    set fb_tmp_540, $P5114
    repr_defined $I5016, fb_tmp_540
    unless $I5016 goto if1741_else3118 
    set $P5122, fb_tmp_540["pos"]
    set $P5124, $P5122
    goto if1741_end3119
  if1741_else3118:
    null $P5123
    set $P5124, $P5123
  if1741_end3119:
    unless_null $P5124, vivi_17453125
    nqp_get_sc_object $P5125, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5124, $P5125
  vivi_17453125:
    $P5126 = $P101."push_pirop"("set", $P5124, "$I11")
  if1740_end3117:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "enumcharlist" :subid("cuid_128_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3907
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "$charlist", $P102 
    .lex "$testop", $P103 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_542 
    .local pmc fb_tmp_543 
    .local pmc pkg_viv_tmp_118 
    .local pmc fb_tmp_544 
    .local pmc fb_tmp_545 
    .local pmc fb_tmp_546 
    .local pmc pkg_viv_tmp_119 
    .local pmc fb_tmp_547 
    .local pmc fb_tmp_548 
    .local pmc pkg_viv_tmp_120 
    .local pmc fb_tmp_549 
    .local pmc fb_tmp_550 
    .local pmc pkg_viv_tmp_121 
    .local pmc fb_tmp_551 
    .local pmc fb_tmp_552 
    .local pmc pkg_viv_tmp_122 
    .local pmc fb_tmp_553 
    .local pmc fb_tmp_554 
    .local pmc pkg_viv_tmp_123 
    .local pmc fb_tmp_555 
    .local pmc fb_tmp_556 
    .local pmc pkg_viv_tmp_124 
    .local pmc fb_tmp_557 
    .local pmc fb_tmp_558 
    .local pmc pkg_viv_tmp_125 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
.annotate 'line', 3908
    nqp_decontainerize $P5004, _lex_param_0
    find_dynamic_lex $P5005, "%*REG"
    unless_null $P5005, fallback3128
    nqp_get_sc_object $P5007, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5006, $P5007
    set pkg_viv_tmp_118, $P5006
    set fb_tmp_543, pkg_viv_tmp_118
    repr_defined $I5002, fb_tmp_543
    unless $I5002 goto if1747_else3129 
    set $P5008, fb_tmp_543["%REG"]
    set $P5010, $P5008
    goto if1747_end3130
  if1747_else3129:
    null $P5009
    set $P5010, $P5009
  if1747_end3130:
    unless_null $P5010, vivi_17483131
    new $P5011, 'Hash'
    set pkg_viv_tmp_118["%REG"], $P5011
    set $P5010, $P5011
  vivi_17483131:
    unless_null $P5010, vivi_17493132
    die "Contextual %*REG not found"
    box $P5012, "Contextual %*REG not found"
    set $P5010, $P5012
  vivi_17493132:
    set $P5005, $P5010
  fallback3128:
    set fb_tmp_542, $P5005
    repr_defined $I5001, fb_tmp_542
    unless $I5001 goto if1746_else3126 
    set $P5013, fb_tmp_542["cur"]
    set $P5015, $P5013
    goto if1746_end3127
  if1746_else3126:
    null $P5014
    set $P5015, $P5014
  if1746_end3127:
    unless_null $P5015, vivi_17503133
    nqp_get_sc_object $P5016, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5015, $P5016
  vivi_17503133:
    $P5017 = $P5004."post_new"("Ops", $P5015 :named("result"))
    set $P101, $P5017
.annotate 'line', 3909
    nqp_decontainerize $P5018, _lex_param_0
    set fb_tmp_544, _lex_param_1
    repr_defined $I5003, fb_tmp_544
    unless $I5003 goto if1751_else3134 
    set $P5019, fb_tmp_544[0]
    set $P5021, $P5019
    goto if1751_end3135
  if1751_else3134:
    null $P5020
    set $P5021, $P5020
  if1751_end3135:
    unless_null $P5021, vivi_17523136
    nqp_get_sc_object $P5022, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5021, $P5022
  vivi_17523136:
    $P5023 = $P5018."rxescape"($P5021)
    set $P102, $P5023
.annotate 'line', 3910
    $P5024 = _lex_param_1."negate"()
    unless $P5024 goto if1753_else3137 
    set $S5001, "ge"
    goto if1753_end3138
  if1753_else3137:
    set $S5001, "lt"
  if1753_end3138:
    box $P5025, $S5001
    set $P103, $P5025
.annotate 'line', 3911
    find_dynamic_lex $P5026, "%*REG"
    unless_null $P5026, fallback3141
    nqp_get_sc_object $P5028, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5027, $P5028
    set pkg_viv_tmp_119, $P5027
    set fb_tmp_546, pkg_viv_tmp_119
    repr_defined $I5005, fb_tmp_546
    unless $I5005 goto if1755_else3142 
    set $P5029, fb_tmp_546["%REG"]
    set $P5031, $P5029
    goto if1755_end3143
  if1755_else3142:
    null $P5030
    set $P5031, $P5030
  if1755_end3143:
    unless_null $P5031, vivi_17563144
    new $P5032, 'Hash'
    set pkg_viv_tmp_119["%REG"], $P5032
    set $P5031, $P5032
  vivi_17563144:
    unless_null $P5031, vivi_17573145
    die "Contextual %*REG not found"
    box $P5033, "Contextual %*REG not found"
    set $P5031, $P5033
  vivi_17573145:
    set $P5026, $P5031
  fallback3141:
    set fb_tmp_545, $P5026
    repr_defined $I5004, fb_tmp_545
    unless $I5004 goto if1754_else3139 
    set $P5034, fb_tmp_545["pos"]
    set $P5036, $P5034
    goto if1754_end3140
  if1754_else3139:
    null $P5035
    set $P5036, $P5035
  if1754_end3140:
    unless_null $P5036, vivi_17583146
    nqp_get_sc_object $P5037, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5036, $P5037
  vivi_17583146:
    find_dynamic_lex $P5038, "%*REG"
    unless_null $P5038, fallback3149
    nqp_get_sc_object $P5040, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5039, $P5040
    set pkg_viv_tmp_120, $P5039
    set fb_tmp_548, pkg_viv_tmp_120
    repr_defined $I5007, fb_tmp_548
    unless $I5007 goto if1760_else3150 
    set $P5041, fb_tmp_548["%REG"]
    set $P5043, $P5041
    goto if1760_end3151
  if1760_else3150:
    null $P5042
    set $P5043, $P5042
  if1760_end3151:
    unless_null $P5043, vivi_17613152
    new $P5044, 'Hash'
    set pkg_viv_tmp_120["%REG"], $P5044
    set $P5043, $P5044
  vivi_17613152:
    unless_null $P5043, vivi_17623153
    die "Contextual %*REG not found"
    box $P5045, "Contextual %*REG not found"
    set $P5043, $P5045
  vivi_17623153:
    set $P5038, $P5043
  fallback3149:
    set fb_tmp_547, $P5038
    repr_defined $I5006, fb_tmp_547
    unless $I5006 goto if1759_else3147 
    set $P5046, fb_tmp_547["eos"]
    set $P5048, $P5046
    goto if1759_end3148
  if1759_else3147:
    null $P5047
    set $P5048, $P5047
  if1759_end3148:
    unless_null $P5048, vivi_17633154
    nqp_get_sc_object $P5049, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5048, $P5049
  vivi_17633154:
    find_dynamic_lex $P5050, "%*REG"
    unless_null $P5050, fallback3157
    nqp_get_sc_object $P5052, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5051, $P5052
    set pkg_viv_tmp_121, $P5051
    set fb_tmp_550, pkg_viv_tmp_121
    repr_defined $I5009, fb_tmp_550
    unless $I5009 goto if1765_else3158 
    set $P5053, fb_tmp_550["%REG"]
    set $P5055, $P5053
    goto if1765_end3159
  if1765_else3158:
    null $P5054
    set $P5055, $P5054
  if1765_end3159:
    unless_null $P5055, vivi_17663160
    new $P5056, 'Hash'
    set pkg_viv_tmp_121["%REG"], $P5056
    set $P5055, $P5056
  vivi_17663160:
    unless_null $P5055, vivi_17673161
    die "Contextual %*REG not found"
    box $P5057, "Contextual %*REG not found"
    set $P5055, $P5057
  vivi_17673161:
    set $P5050, $P5055
  fallback3157:
    set fb_tmp_549, $P5050
    repr_defined $I5008, fb_tmp_549
    unless $I5008 goto if1764_else3155 
    set $P5058, fb_tmp_549["fail"]
    set $P5060, $P5058
    goto if1764_end3156
  if1764_else3155:
    null $P5059
    set $P5060, $P5059
  if1764_end3156:
    unless_null $P5060, vivi_17683162
    nqp_get_sc_object $P5061, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5060, $P5061
  vivi_17683162:
    $P101."push_pirop"("ge", $P5036, $P5048, $P5060)
.annotate 'line', 3912
    find_dynamic_lex $P5062, "%*REG"
    unless_null $P5062, fallback3165
    nqp_get_sc_object $P5064, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5063, $P5064
    set pkg_viv_tmp_122, $P5063
    set fb_tmp_552, pkg_viv_tmp_122
    repr_defined $I5011, fb_tmp_552
    unless $I5011 goto if1770_else3166 
    set $P5065, fb_tmp_552["%REG"]
    set $P5067, $P5065
    goto if1770_end3167
  if1770_else3166:
    null $P5066
    set $P5067, $P5066
  if1770_end3167:
    unless_null $P5067, vivi_17713168
    new $P5068, 'Hash'
    set pkg_viv_tmp_122["%REG"], $P5068
    set $P5067, $P5068
  vivi_17713168:
    unless_null $P5067, vivi_17723169
    die "Contextual %*REG not found"
    box $P5069, "Contextual %*REG not found"
    set $P5067, $P5069
  vivi_17723169:
    set $P5062, $P5067
  fallback3165:
    set fb_tmp_551, $P5062
    repr_defined $I5010, fb_tmp_551
    unless $I5010 goto if1769_else3163 
    set $P5070, fb_tmp_551["tgt"]
    set $P5072, $P5070
    goto if1769_end3164
  if1769_else3163:
    null $P5071
    set $P5072, $P5071
  if1769_end3164:
    unless_null $P5072, vivi_17733170
    nqp_get_sc_object $P5073, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5072, $P5073
  vivi_17733170:
    find_dynamic_lex $P5074, "%*REG"
    unless_null $P5074, fallback3173
    nqp_get_sc_object $P5076, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5075, $P5076
    set pkg_viv_tmp_123, $P5075
    set fb_tmp_554, pkg_viv_tmp_123
    repr_defined $I5013, fb_tmp_554
    unless $I5013 goto if1775_else3174 
    set $P5077, fb_tmp_554["%REG"]
    set $P5079, $P5077
    goto if1775_end3175
  if1775_else3174:
    null $P5078
    set $P5079, $P5078
  if1775_end3175:
    unless_null $P5079, vivi_17763176
    new $P5080, 'Hash'
    set pkg_viv_tmp_123["%REG"], $P5080
    set $P5079, $P5080
  vivi_17763176:
    unless_null $P5079, vivi_17773177
    die "Contextual %*REG not found"
    box $P5081, "Contextual %*REG not found"
    set $P5079, $P5081
  vivi_17773177:
    set $P5074, $P5079
  fallback3173:
    set fb_tmp_553, $P5074
    repr_defined $I5012, fb_tmp_553
    unless $I5012 goto if1774_else3171 
    set $P5082, fb_tmp_553["pos"]
    set $P5084, $P5082
    goto if1774_end3172
  if1774_else3171:
    null $P5083
    set $P5084, $P5083
  if1774_end3172:
    unless_null $P5084, vivi_17783178
    nqp_get_sc_object $P5085, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5084, $P5085
  vivi_17783178:
    $P101."push_pirop"("substr", "$S11", $P5072, $P5084, 1)
.annotate 'line', 3913
    $P101."push_pirop"("index", "$I11", $P102, "$S11")
.annotate 'line', 3914
    find_dynamic_lex $P5086, "%*REG"
    unless_null $P5086, fallback3181
    nqp_get_sc_object $P5088, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5087, $P5088
    set pkg_viv_tmp_124, $P5087
    set fb_tmp_556, pkg_viv_tmp_124
    repr_defined $I5015, fb_tmp_556
    unless $I5015 goto if1780_else3182 
    set $P5089, fb_tmp_556["%REG"]
    set $P5091, $P5089
    goto if1780_end3183
  if1780_else3182:
    null $P5090
    set $P5091, $P5090
  if1780_end3183:
    unless_null $P5091, vivi_17813184
    new $P5092, 'Hash'
    set pkg_viv_tmp_124["%REG"], $P5092
    set $P5091, $P5092
  vivi_17813184:
    unless_null $P5091, vivi_17823185
    die "Contextual %*REG not found"
    box $P5093, "Contextual %*REG not found"
    set $P5091, $P5093
  vivi_17823185:
    set $P5086, $P5091
  fallback3181:
    set fb_tmp_555, $P5086
    repr_defined $I5014, fb_tmp_555
    unless $I5014 goto if1779_else3179 
    set $P5094, fb_tmp_555["fail"]
    set $P5096, $P5094
    goto if1779_end3180
  if1779_else3179:
    null $P5095
    set $P5096, $P5095
  if1779_end3180:
    unless_null $P5096, vivi_17833186
    nqp_get_sc_object $P5097, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5096, $P5097
  vivi_17833186:
    $P101."push_pirop"($P103, "$I11", 0, $P5096)
.annotate 'line', 3915
    $P5098 = _lex_param_1."subtype"()
    set $S5002, $P5098
    iseq $I5016, $S5002, "zerowidth"
    if $I5016 goto unless1784_end3188 
    find_dynamic_lex $P5099, "%*REG"
    unless_null $P5099, fallback3191
    nqp_get_sc_object $P5101, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5100, $P5101
    set pkg_viv_tmp_125, $P5100
    set fb_tmp_558, pkg_viv_tmp_125
    repr_defined $I5018, fb_tmp_558
    unless $I5018 goto if1786_else3192 
    set $P5102, fb_tmp_558["%REG"]
    set $P5104, $P5102
    goto if1786_end3193
  if1786_else3192:
    null $P5103
    set $P5104, $P5103
  if1786_end3193:
    unless_null $P5104, vivi_17873194
    new $P5105, 'Hash'
    set pkg_viv_tmp_125["%REG"], $P5105
    set $P5104, $P5105
  vivi_17873194:
    unless_null $P5104, vivi_17883195
    die "Contextual %*REG not found"
    box $P5106, "Contextual %*REG not found"
    set $P5104, $P5106
  vivi_17883195:
    set $P5099, $P5104
  fallback3191:
    set fb_tmp_557, $P5099
    repr_defined $I5017, fb_tmp_557
    unless $I5017 goto if1785_else3189 
    set $P5107, fb_tmp_557["pos"]
    set $P5109, $P5107
    goto if1785_end3190
  if1785_else3189:
    null $P5108
    set $P5109, $P5108
  if1785_end3190:
    unless_null $P5109, vivi_17893196
    nqp_get_sc_object $P5110, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5109, $P5110
  vivi_17893196:
    $P5111 = $P101."push_pirop"("inc", $P5109)
  unless1784_end3188:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "literal" :subid("cuid_129_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3919
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "$litconst", $P102 
    .lex "$litlen", $P103 
    .lex "$litpost", $P104 
    .lex "$cmpop", $P105 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_559 
    .local pmc fb_tmp_560 
    .local pmc fb_tmp_561 
    .local pmc pkg_viv_tmp_126 
    .local pmc fb_tmp_562 
    .local pmc fb_tmp_563 
    .local pmc pkg_viv_tmp_127 
    .local pmc fb_tmp_564 
    .local pmc fb_tmp_565 
    .local pmc pkg_viv_tmp_128 
    .local pmc fb_tmp_566 
    .local pmc fb_tmp_567 
    .local pmc pkg_viv_tmp_129 
    .local pmc fb_tmp_568 
    .local pmc fb_tmp_569 
    .local pmc pkg_viv_tmp_130 
    .local pmc fb_tmp_570 
    .local pmc fb_tmp_571 
    .local pmc pkg_viv_tmp_131 
    .local pmc fb_tmp_572 
    .local pmc fb_tmp_573 
    .local pmc pkg_viv_tmp_132 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P105, $P5005
.annotate 'line', 3920
    nqp_decontainerize $P5006, _lex_param_0
    $P5007 = $P5006."post_new"("Ops")
    set $P101, $P5007
    set fb_tmp_559, _lex_param_1
    repr_defined $I5001, fb_tmp_559
    unless $I5001 goto if1790_else3197 
    set $P5008, fb_tmp_559[0]
    set $P5010, $P5008
    goto if1790_end3198
  if1790_else3197:
    null $P5009
    set $P5010, $P5009
  if1790_end3198:
    unless_null $P5010, vivi_17913199
    nqp_get_sc_object $P5011, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5010, $P5011
  vivi_17913199:
    set $P102, $P5010
.annotate 'line', 3923
    $P5012 = _lex_param_1."subtype"()
    set $S5001, $P5012
    iseq $I5002, $S5001, "ignorecase"
    unless $I5002 goto if1792_end3201 
    set $S5003, $P102
    downcase $S5002, $S5003
    box $P5013, $S5002
    set $P102, $P5013
  if1792_end3201:
    set $S5004, $P102
    length $I5003, $S5004
    box $P5014, $I5003
    set $P103, $P5014
.annotate 'line', 3925
    nqp_decontainerize $P5015, _lex_param_0
    $P5016 = $P5015."rxescape"($P102)
    set $P104, $P5016
.annotate 'line', 3926
    $P5017 = _lex_param_1."negate"()
    unless $P5017 goto if1793_else3202 
    set $S5005, "eq"
    goto if1793_end3203
  if1793_else3202:
    set $S5005, "ne"
  if1793_end3203:
    box $P5018, $S5005
    set $P105, $P5018
.annotate 'line', 3927
    find_dynamic_lex $P5019, "%*REG"
    unless_null $P5019, fallback3206
    nqp_get_sc_object $P5021, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5020, $P5021
    set pkg_viv_tmp_126, $P5020
    set fb_tmp_561, pkg_viv_tmp_126
    repr_defined $I5005, fb_tmp_561
    unless $I5005 goto if1795_else3207 
    set $P5022, fb_tmp_561["%REG"]
    set $P5024, $P5022
    goto if1795_end3208
  if1795_else3207:
    null $P5023
    set $P5024, $P5023
  if1795_end3208:
    unless_null $P5024, vivi_17963209
    new $P5025, 'Hash'
    set pkg_viv_tmp_126["%REG"], $P5025
    set $P5024, $P5025
  vivi_17963209:
    unless_null $P5024, vivi_17973210
    die "Contextual %*REG not found"
    box $P5026, "Contextual %*REG not found"
    set $P5024, $P5026
  vivi_17973210:
    set $P5019, $P5024
  fallback3206:
    set fb_tmp_560, $P5019
    repr_defined $I5004, fb_tmp_560
    unless $I5004 goto if1794_else3204 
    set $P5027, fb_tmp_560["pos"]
    set $P5029, $P5027
    goto if1794_end3205
  if1794_else3204:
    null $P5028
    set $P5029, $P5028
  if1794_end3205:
    unless_null $P5029, vivi_17983211
    nqp_get_sc_object $P5030, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5029, $P5030
  vivi_17983211:
    $P101."push_pirop"("add", "$I11", $P5029, $P103)
.annotate 'line', 3928
    find_dynamic_lex $P5031, "%*REG"
    unless_null $P5031, fallback3214
    nqp_get_sc_object $P5033, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5032, $P5033
    set pkg_viv_tmp_127, $P5032
    set fb_tmp_563, pkg_viv_tmp_127
    repr_defined $I5007, fb_tmp_563
    unless $I5007 goto if1800_else3215 
    set $P5034, fb_tmp_563["%REG"]
    set $P5036, $P5034
    goto if1800_end3216
  if1800_else3215:
    null $P5035
    set $P5036, $P5035
  if1800_end3216:
    unless_null $P5036, vivi_18013217
    new $P5037, 'Hash'
    set pkg_viv_tmp_127["%REG"], $P5037
    set $P5036, $P5037
  vivi_18013217:
    unless_null $P5036, vivi_18023218
    die "Contextual %*REG not found"
    box $P5038, "Contextual %*REG not found"
    set $P5036, $P5038
  vivi_18023218:
    set $P5031, $P5036
  fallback3214:
    set fb_tmp_562, $P5031
    repr_defined $I5006, fb_tmp_562
    unless $I5006 goto if1799_else3212 
    set $P5039, fb_tmp_562["eos"]
    set $P5041, $P5039
    goto if1799_end3213
  if1799_else3212:
    null $P5040
    set $P5041, $P5040
  if1799_end3213:
    unless_null $P5041, vivi_18033219
    nqp_get_sc_object $P5042, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5041, $P5042
  vivi_18033219:
    find_dynamic_lex $P5043, "%*REG"
    unless_null $P5043, fallback3222
    nqp_get_sc_object $P5045, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5044, $P5045
    set pkg_viv_tmp_128, $P5044
    set fb_tmp_565, pkg_viv_tmp_128
    repr_defined $I5009, fb_tmp_565
    unless $I5009 goto if1805_else3223 
    set $P5046, fb_tmp_565["%REG"]
    set $P5048, $P5046
    goto if1805_end3224
  if1805_else3223:
    null $P5047
    set $P5048, $P5047
  if1805_end3224:
    unless_null $P5048, vivi_18063225
    new $P5049, 'Hash'
    set pkg_viv_tmp_128["%REG"], $P5049
    set $P5048, $P5049
  vivi_18063225:
    unless_null $P5048, vivi_18073226
    die "Contextual %*REG not found"
    box $P5050, "Contextual %*REG not found"
    set $P5048, $P5050
  vivi_18073226:
    set $P5043, $P5048
  fallback3222:
    set fb_tmp_564, $P5043
    repr_defined $I5008, fb_tmp_564
    unless $I5008 goto if1804_else3220 
    set $P5051, fb_tmp_564["fail"]
    set $P5053, $P5051
    goto if1804_end3221
  if1804_else3220:
    null $P5052
    set $P5053, $P5052
  if1804_end3221:
    unless_null $P5053, vivi_18083227
    nqp_get_sc_object $P5054, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5053, $P5054
  vivi_18083227:
    $P101."push_pirop"("gt", "$I11", $P5041, $P5053)
.annotate 'line', 3929
    find_dynamic_lex $P5055, "%*REG"
    unless_null $P5055, fallback3230
    nqp_get_sc_object $P5057, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5056, $P5057
    set pkg_viv_tmp_129, $P5056
    set fb_tmp_567, pkg_viv_tmp_129
    repr_defined $I5011, fb_tmp_567
    unless $I5011 goto if1810_else3231 
    set $P5058, fb_tmp_567["%REG"]
    set $P5060, $P5058
    goto if1810_end3232
  if1810_else3231:
    null $P5059
    set $P5060, $P5059
  if1810_end3232:
    unless_null $P5060, vivi_18113233
    new $P5061, 'Hash'
    set pkg_viv_tmp_129["%REG"], $P5061
    set $P5060, $P5061
  vivi_18113233:
    unless_null $P5060, vivi_18123234
    die "Contextual %*REG not found"
    box $P5062, "Contextual %*REG not found"
    set $P5060, $P5062
  vivi_18123234:
    set $P5055, $P5060
  fallback3230:
    set fb_tmp_566, $P5055
    repr_defined $I5010, fb_tmp_566
    unless $I5010 goto if1809_else3228 
    set $P5063, fb_tmp_566["tgt"]
    set $P5065, $P5063
    goto if1809_end3229
  if1809_else3228:
    null $P5064
    set $P5065, $P5064
  if1809_end3229:
    unless_null $P5065, vivi_18133235
    nqp_get_sc_object $P5066, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5065, $P5066
  vivi_18133235:
    find_dynamic_lex $P5067, "%*REG"
    unless_null $P5067, fallback3238
    nqp_get_sc_object $P5069, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5068, $P5069
    set pkg_viv_tmp_130, $P5068
    set fb_tmp_569, pkg_viv_tmp_130
    repr_defined $I5013, fb_tmp_569
    unless $I5013 goto if1815_else3239 
    set $P5070, fb_tmp_569["%REG"]
    set $P5072, $P5070
    goto if1815_end3240
  if1815_else3239:
    null $P5071
    set $P5072, $P5071
  if1815_end3240:
    unless_null $P5072, vivi_18163241
    new $P5073, 'Hash'
    set pkg_viv_tmp_130["%REG"], $P5073
    set $P5072, $P5073
  vivi_18163241:
    unless_null $P5072, vivi_18173242
    die "Contextual %*REG not found"
    box $P5074, "Contextual %*REG not found"
    set $P5072, $P5074
  vivi_18173242:
    set $P5067, $P5072
  fallback3238:
    set fb_tmp_568, $P5067
    repr_defined $I5012, fb_tmp_568
    unless $I5012 goto if1814_else3236 
    set $P5075, fb_tmp_568["pos"]
    set $P5077, $P5075
    goto if1814_end3237
  if1814_else3236:
    null $P5076
    set $P5077, $P5076
  if1814_end3237:
    unless_null $P5077, vivi_18183243
    nqp_get_sc_object $P5078, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5077, $P5078
  vivi_18183243:
    $P101."push_pirop"("substr", "$S10", $P5065, $P5077, $P103)
.annotate 'line', 3931
    $P5079 = _lex_param_1."subtype"()
    set $S5006, $P5079
    iseq $I5014, $S5006, "ignorecase"
    unless $I5014 goto if1819_end3245 
.annotate 'line', 3930
    $P5080 = $P101."push_pirop"("downcase", "$S10", "$S10")
  if1819_end3245:
.annotate 'line', 3932
    find_dynamic_lex $P5081, "%*REG"
    unless_null $P5081, fallback3248
    nqp_get_sc_object $P5083, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5082, $P5083
    set pkg_viv_tmp_131, $P5082
    set fb_tmp_571, pkg_viv_tmp_131
    repr_defined $I5016, fb_tmp_571
    unless $I5016 goto if1821_else3249 
    set $P5084, fb_tmp_571["%REG"]
    set $P5086, $P5084
    goto if1821_end3250
  if1821_else3249:
    null $P5085
    set $P5086, $P5085
  if1821_end3250:
    unless_null $P5086, vivi_18223251
    new $P5087, 'Hash'
    set pkg_viv_tmp_131["%REG"], $P5087
    set $P5086, $P5087
  vivi_18223251:
    unless_null $P5086, vivi_18233252
    die "Contextual %*REG not found"
    box $P5088, "Contextual %*REG not found"
    set $P5086, $P5088
  vivi_18233252:
    set $P5081, $P5086
  fallback3248:
    set fb_tmp_570, $P5081
    repr_defined $I5015, fb_tmp_570
    unless $I5015 goto if1820_else3246 
    set $P5089, fb_tmp_570["fail"]
    set $P5091, $P5089
    goto if1820_end3247
  if1820_else3246:
    null $P5090
    set $P5091, $P5090
  if1820_end3247:
    unless_null $P5091, vivi_18243253
    nqp_get_sc_object $P5092, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5091, $P5092
  vivi_18243253:
    $P101."push_pirop"($P105, "$S10", $P104, $P5091)
.annotate 'line', 3933
    find_dynamic_lex $P5093, "%*REG"
    unless_null $P5093, fallback3256
    nqp_get_sc_object $P5095, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5094, $P5095
    set pkg_viv_tmp_132, $P5094
    set fb_tmp_573, pkg_viv_tmp_132
    repr_defined $I5018, fb_tmp_573
    unless $I5018 goto if1826_else3257 
    set $P5096, fb_tmp_573["%REG"]
    set $P5098, $P5096
    goto if1826_end3258
  if1826_else3257:
    null $P5097
    set $P5098, $P5097
  if1826_end3258:
    unless_null $P5098, vivi_18273259
    new $P5099, 'Hash'
    set pkg_viv_tmp_132["%REG"], $P5099
    set $P5098, $P5099
  vivi_18273259:
    unless_null $P5098, vivi_18283260
    die "Contextual %*REG not found"
    box $P5100, "Contextual %*REG not found"
    set $P5098, $P5100
  vivi_18283260:
    set $P5093, $P5098
  fallback3256:
    set fb_tmp_572, $P5093
    repr_defined $I5017, fb_tmp_572
    unless $I5017 goto if1825_else3254 
    set $P5101, fb_tmp_572["pos"]
    set $P5103, $P5101
    goto if1825_end3255
  if1825_else3254:
    null $P5102
    set $P5103, $P5102
  if1825_end3255:
    unless_null $P5103, vivi_18293261
    nqp_get_sc_object $P5104, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5103, $P5104
  vivi_18293261:
    $P101."push_pirop"("add", $P5103, $P103)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "pass" :subid("cuid_130_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3937
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5064 = 'cuid_375_1366375329.52446' 
    capture_lex $P5064 
    .const 'Sub' $P5064 = 'cuid_376_1366375329.52446' 
    capture_lex $P5064 
    .lex "$ops", $P101 
    .lex "@backtrack", $P102 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_574 
    .local pmc fb_tmp_575 
    .local pmc pkg_viv_tmp_133 
    .local pmc fb_tmp_585 
    .local pmc fb_tmp_586 
    .local pmc pkg_viv_tmp_138 
    .local pmc fb_tmp_587 
    .local pmc fb_tmp_588 
    .local pmc pkg_viv_tmp_139 
    .local pmc fb_tmp_589 
    .local pmc fb_tmp_590 
    .local pmc pkg_viv_tmp_140 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    new $P5002, 'QRPA'
    set $P102, $P5002
.annotate 'line', 3938
    nqp_decontainerize $P5003, _lex_param_0
    find_dynamic_lex $P5004, "%*REG"
    unless_null $P5004, fallback3264
    nqp_get_sc_object $P5006, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5005, $P5006
    set pkg_viv_tmp_133, $P5005
    set fb_tmp_575, pkg_viv_tmp_133
    repr_defined $I5002, fb_tmp_575
    unless $I5002 goto if1831_else3265 
    set $P5007, fb_tmp_575["%REG"]
    set $P5009, $P5007
    goto if1831_end3266
  if1831_else3265:
    null $P5008
    set $P5009, $P5008
  if1831_end3266:
    unless_null $P5009, vivi_18323267
    new $P5010, 'Hash'
    set pkg_viv_tmp_133["%REG"], $P5010
    set $P5009, $P5010
  vivi_18323267:
    unless_null $P5009, vivi_18333268
    die "Contextual %*REG not found"
    box $P5011, "Contextual %*REG not found"
    set $P5009, $P5011
  vivi_18333268:
    set $P5004, $P5009
  fallback3264:
    set fb_tmp_574, $P5004
    repr_defined $I5001, fb_tmp_574
    unless $I5001 goto if1830_else3262 
    set $P5012, fb_tmp_574["cur"]
    set $P5014, $P5012
    goto if1830_end3263
  if1830_else3262:
    null $P5013
    set $P5014, $P5013
  if1830_end3263:
    unless_null $P5014, vivi_18343269
    nqp_get_sc_object $P5015, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5014, $P5015
  vivi_18343269:
    $P5016 = $P5003."post_new"("Ops", $P5014 :named("result"))
    set $P101, $P5016
.annotate 'line', 3940
    $P5017 = _lex_param_1."backtrack"()
    set $S5001, $P5017
    isne $I5003, $S5001, "r"
    unless $I5003 goto if1835_end3271 
    new $P5018, 'QRPA'
    box $P5019, "'backtrack'=>1"
    push $P5018, $P5019
    set $P102, $P5018
  if1835_end3271:
.annotate 'line', 3941
    $P5020 = _lex_param_1."name"()
    unless $P5020 goto if1836_else3272 
    .const 'Sub' $P5021 = 'cuid_375_1366375329.52446' 
    capture_lex $P5021
    $P5022 = $P5021()
    goto if1836_end3273
  if1836_else3272:
    $P5023 = _lex_param_1."list"()
    set $N5001, $P5023
    set $N5002, 1
    iseq $I5004, $N5001, $N5002
    unless $I5004 goto if1847_else3290 
    .const 'Sub' $P5024 = 'cuid_376_1366375329.52446' 
    capture_lex $P5024
    $P5025 = $P5024()
    set $P5051, $P5025
    goto if1847_end3291
  if1847_else3290:
.annotate 'line', 3950
.annotate 'line', 3951
    find_dynamic_lex $P5026, "%*REG"
    unless_null $P5026, fallback3313
    nqp_get_sc_object $P5028, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5027, $P5028
    set pkg_viv_tmp_138, $P5027
    set fb_tmp_586, pkg_viv_tmp_138
    repr_defined $I5006, fb_tmp_586
    unless $I5006 goto if1861_else3314 
    set $P5029, fb_tmp_586["%REG"]
    set $P5031, $P5029
    goto if1861_end3315
  if1861_else3314:
    null $P5030
    set $P5031, $P5030
  if1861_end3315:
    unless_null $P5031, vivi_18623316
    new $P5032, 'Hash'
    set pkg_viv_tmp_138["%REG"], $P5032
    set $P5031, $P5032
  vivi_18623316:
    unless_null $P5031, vivi_18633317
    die "Contextual %*REG not found"
    box $P5033, "Contextual %*REG not found"
    set $P5031, $P5033
  vivi_18633317:
    set $P5026, $P5031
  fallback3313:
    set fb_tmp_585, $P5026
    repr_defined $I5005, fb_tmp_585
    unless $I5005 goto if1860_else3311 
    set $P5034, fb_tmp_585["cur"]
    set $P5036, $P5034
    goto if1860_end3312
  if1860_else3311:
    null $P5035
    set $P5036, $P5035
  if1860_end3312:
    unless_null $P5036, vivi_18643318
    nqp_get_sc_object $P5037, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5036, $P5037
  vivi_18643318:
    find_dynamic_lex $P5038, "%*REG"
    unless_null $P5038, fallback3321
    nqp_get_sc_object $P5040, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5039, $P5040
    set pkg_viv_tmp_139, $P5039
    set fb_tmp_588, pkg_viv_tmp_139
    repr_defined $I5008, fb_tmp_588
    unless $I5008 goto if1866_else3322 
    set $P5041, fb_tmp_588["%REG"]
    set $P5043, $P5041
    goto if1866_end3323
  if1866_else3322:
    null $P5042
    set $P5043, $P5042
  if1866_end3323:
    unless_null $P5043, vivi_18673324
    new $P5044, 'Hash'
    set pkg_viv_tmp_139["%REG"], $P5044
    set $P5043, $P5044
  vivi_18673324:
    unless_null $P5043, vivi_18683325
    die "Contextual %*REG not found"
    box $P5045, "Contextual %*REG not found"
    set $P5043, $P5045
  vivi_18683325:
    set $P5038, $P5043
  fallback3321:
    set fb_tmp_587, $P5038
    repr_defined $I5007, fb_tmp_587
    unless $I5007 goto if1865_else3319 
    set $P5046, fb_tmp_587["pos"]
    set $P5048, $P5046
    goto if1865_end3320
  if1865_else3319:
    null $P5047
    set $P5048, $P5047
  if1865_end3320:
    unless_null $P5048, vivi_18693326
    nqp_get_sc_object $P5049, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5048, $P5049
  vivi_18693326:
    $P5050 = $P101."push_pirop"("callmethod", "\"!cursor_pass\"", $P5036, $P5048, $P102 :flat)
    set $P5051, $P5050
  if1847_end3291:
  if1836_end3273:
.annotate 'line', 3953
    find_dynamic_lex $P5052, "%*REG"
    unless_null $P5052, fallback3329
    nqp_get_sc_object $P5054, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5053, $P5054
    set pkg_viv_tmp_140, $P5053
    set fb_tmp_590, pkg_viv_tmp_140
    repr_defined $I5010, fb_tmp_590
    unless $I5010 goto if1871_else3330 
    set $P5055, fb_tmp_590["%REG"]
    set $P5057, $P5055
    goto if1871_end3331
  if1871_else3330:
    null $P5056
    set $P5057, $P5056
  if1871_end3331:
    unless_null $P5057, vivi_18723332
    new $P5058, 'Hash'
    set pkg_viv_tmp_140["%REG"], $P5058
    set $P5057, $P5058
  vivi_18723332:
    unless_null $P5057, vivi_18733333
    die "Contextual %*REG not found"
    box $P5059, "Contextual %*REG not found"
    set $P5057, $P5059
  vivi_18733333:
    set $P5052, $P5057
  fallback3329:
    set fb_tmp_589, $P5052
    repr_defined $I5009, fb_tmp_589
    unless $I5009 goto if1870_else3327 
    set $P5060, fb_tmp_589["cur"]
    set $P5062, $P5060
    goto if1870_end3328
  if1870_else3327:
    null $P5061
    set $P5062, $P5061
  if1870_end3328:
    unless_null $P5062, vivi_18743334
    nqp_get_sc_object $P5063, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5062, $P5063
  vivi_18743334:
    $P101."push_pirop"("return", $P5062)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_375_1366375329.52446") :anon :lex :outer("cuid_130_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3941
    .lex "$name", $P101 
    .local pmc fb_tmp_576 
    .local pmc fb_tmp_577 
    .local pmc pkg_viv_tmp_134 
    .local pmc fb_tmp_578 
    .local pmc fb_tmp_579 
    .local pmc pkg_viv_tmp_135 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 3942
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    find_lex $P5004, "$node"
    $P5005 = $P5004."name"()
    $P5006 = $P5002."escape"($P5005)
    set $P101, $P5006
.annotate 'line', 3943
    find_lex $P5007, "$ops"
    find_dynamic_lex $P5008, "%*REG"
    unless_null $P5008, fallback3276
    nqp_get_sc_object $P5010, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5009, $P5010
    set pkg_viv_tmp_134, $P5009
    set fb_tmp_577, pkg_viv_tmp_134
    repr_defined $I5002, fb_tmp_577
    unless $I5002 goto if1838_else3277 
    set $P5011, fb_tmp_577["%REG"]
    set $P5013, $P5011
    goto if1838_end3278
  if1838_else3277:
    null $P5012
    set $P5013, $P5012
  if1838_end3278:
    unless_null $P5013, vivi_18393279
    new $P5014, 'Hash'
    set pkg_viv_tmp_134["%REG"], $P5014
    set $P5013, $P5014
  vivi_18393279:
    unless_null $P5013, vivi_18403280
    die "Contextual %*REG not found"
    box $P5015, "Contextual %*REG not found"
    set $P5013, $P5015
  vivi_18403280:
    set $P5008, $P5013
  fallback3276:
    set fb_tmp_576, $P5008
    repr_defined $I5001, fb_tmp_576
    unless $I5001 goto if1837_else3274 
    set $P5016, fb_tmp_576["cur"]
    set $P5018, $P5016
    goto if1837_end3275
  if1837_else3274:
    null $P5017
    set $P5018, $P5017
  if1837_end3275:
    unless_null $P5018, vivi_18413281
    nqp_get_sc_object $P5019, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5018, $P5019
  vivi_18413281:
    find_dynamic_lex $P5020, "%*REG"
    unless_null $P5020, fallback3284
    nqp_get_sc_object $P5022, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5021, $P5022
    set pkg_viv_tmp_135, $P5021
    set fb_tmp_579, pkg_viv_tmp_135
    repr_defined $I5004, fb_tmp_579
    unless $I5004 goto if1843_else3285 
    set $P5023, fb_tmp_579["%REG"]
    set $P5025, $P5023
    goto if1843_end3286
  if1843_else3285:
    null $P5024
    set $P5025, $P5024
  if1843_end3286:
    unless_null $P5025, vivi_18443287
    new $P5026, 'Hash'
    set pkg_viv_tmp_135["%REG"], $P5026
    set $P5025, $P5026
  vivi_18443287:
    unless_null $P5025, vivi_18453288
    die "Contextual %*REG not found"
    box $P5027, "Contextual %*REG not found"
    set $P5025, $P5027
  vivi_18453288:
    set $P5020, $P5025
  fallback3284:
    set fb_tmp_578, $P5020
    repr_defined $I5003, fb_tmp_578
    unless $I5003 goto if1842_else3282 
    set $P5028, fb_tmp_578["pos"]
    set $P5030, $P5028
    goto if1842_end3283
  if1842_else3282:
    null $P5029
    set $P5030, $P5029
  if1842_end3283:
    unless_null $P5030, vivi_18463289
    nqp_get_sc_object $P5031, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5030, $P5031
  vivi_18463289:
    find_lex $P5032, "@backtrack"
    $P5033 = $P5007."push_pirop"("callmethod", "\"!cursor_pass\"", $P5018, $P5030, $P101, $P5032 :flat)
    .return ($P5033) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_376_1366375329.52446") :anon :lex :outer("cuid_130_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3945
    .lex "$dynname", $P101 
    .local pmc fb_tmp_580 
    .local pmc fb_tmp_581 
    .local pmc fb_tmp_582 
    .local pmc pkg_viv_tmp_136 
    .local pmc fb_tmp_583 
    .local pmc fb_tmp_584 
    .local pmc pkg_viv_tmp_137 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 3946
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    find_lex $P5006, "$node"
    set fb_tmp_580, $P5006
    repr_defined $I5001, fb_tmp_580
    unless $I5001 goto if1848_else3292 
    set $P5007, fb_tmp_580[0]
    set $P5009, $P5007
    goto if1848_end3293
  if1848_else3292:
    null $P5008
    set $P5009, $P5008
  if1848_end3293:
    unless_null $P5009, vivi_18493294
    nqp_get_sc_object $P5010, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5009, $P5010
  vivi_18493294:
    $P5011 = $P5004."as_post"($P5009)
    $P5012 = $P5002."coerce"($P5011, "S")
    set $P101, $P5012
.annotate 'line', 3947
    find_lex $P5013, "$ops"
    $P5013."push"($P101)
.annotate 'line', 3948
    find_lex $P5014, "$ops"
    find_dynamic_lex $P5015, "%*REG"
    unless_null $P5015, fallback3297
    nqp_get_sc_object $P5017, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5016, $P5017
    set pkg_viv_tmp_136, $P5016
    set fb_tmp_582, pkg_viv_tmp_136
    repr_defined $I5003, fb_tmp_582
    unless $I5003 goto if1851_else3298 
    set $P5018, fb_tmp_582["%REG"]
    set $P5020, $P5018
    goto if1851_end3299
  if1851_else3298:
    null $P5019
    set $P5020, $P5019
  if1851_end3299:
    unless_null $P5020, vivi_18523300
    new $P5021, 'Hash'
    set pkg_viv_tmp_136["%REG"], $P5021
    set $P5020, $P5021
  vivi_18523300:
    unless_null $P5020, vivi_18533301
    die "Contextual %*REG not found"
    box $P5022, "Contextual %*REG not found"
    set $P5020, $P5022
  vivi_18533301:
    set $P5015, $P5020
  fallback3297:
    set fb_tmp_581, $P5015
    repr_defined $I5002, fb_tmp_581
    unless $I5002 goto if1850_else3295 
    set $P5023, fb_tmp_581["cur"]
    set $P5025, $P5023
    goto if1850_end3296
  if1850_else3295:
    null $P5024
    set $P5025, $P5024
  if1850_end3296:
    unless_null $P5025, vivi_18543302
    nqp_get_sc_object $P5026, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5025, $P5026
  vivi_18543302:
    find_dynamic_lex $P5027, "%*REG"
    unless_null $P5027, fallback3305
    nqp_get_sc_object $P5029, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5028, $P5029
    set pkg_viv_tmp_137, $P5028
    set fb_tmp_584, pkg_viv_tmp_137
    repr_defined $I5005, fb_tmp_584
    unless $I5005 goto if1856_else3306 
    set $P5030, fb_tmp_584["%REG"]
    set $P5032, $P5030
    goto if1856_end3307
  if1856_else3306:
    null $P5031
    set $P5032, $P5031
  if1856_end3307:
    unless_null $P5032, vivi_18573308
    new $P5033, 'Hash'
    set pkg_viv_tmp_137["%REG"], $P5033
    set $P5032, $P5033
  vivi_18573308:
    unless_null $P5032, vivi_18583309
    die "Contextual %*REG not found"
    box $P5034, "Contextual %*REG not found"
    set $P5032, $P5034
  vivi_18583309:
    set $P5027, $P5032
  fallback3305:
    set fb_tmp_583, $P5027
    repr_defined $I5004, fb_tmp_583
    unless $I5004 goto if1855_else3303 
    set $P5035, fb_tmp_583["pos"]
    set $P5037, $P5035
    goto if1855_end3304
  if1855_else3303:
    null $P5036
    set $P5037, $P5036
  if1855_end3304:
    unless_null $P5037, vivi_18593310
    nqp_get_sc_object $P5038, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5037, $P5038
  vivi_18593310:
    find_lex $P5039, "@backtrack"
    $P5040 = $P5014."push_pirop"("callmethod", "\"!cursor_pass\"", $P5025, $P5037, $P101, $P5039 :flat)
    .return ($P5040) 
.end
.HLL "nqp"
.namespace []
.sub "qastnode" :subid("cuid_131_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3957
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "$cpost", $P102 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_591 
    .local pmc fb_tmp_592 
    .local pmc pkg_viv_tmp_141 
    .local pmc fb_tmp_593 
    .local pmc fb_tmp_594 
    .local pmc pkg_viv_tmp_142 
    .local pmc fb_tmp_595 
    .local pmc fb_tmp_596 
    .local pmc pkg_viv_tmp_143 
    .local pmc fb_tmp_597 
    .local pmc fb_tmp_598 
    .local pmc pkg_viv_tmp_144 
    .local pmc fb_tmp_599 
    .local pmc fb_tmp_600 
    .local pmc pkg_viv_tmp_145 
    .local pmc fb_tmp_601 
    .local pmc fb_tmp_602 
    .local pmc fb_tmp_603 
    .local pmc pkg_viv_tmp_146 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
.annotate 'line', 3958
    nqp_decontainerize $P5003, _lex_param_0
    find_dynamic_lex $P5004, "%*REG"
    unless_null $P5004, fallback3337
    nqp_get_sc_object $P5006, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5005, $P5006
    set pkg_viv_tmp_141, $P5005
    set fb_tmp_592, pkg_viv_tmp_141
    repr_defined $I5002, fb_tmp_592
    unless $I5002 goto if1876_else3338 
    set $P5007, fb_tmp_592["%REG"]
    set $P5009, $P5007
    goto if1876_end3339
  if1876_else3338:
    null $P5008
    set $P5009, $P5008
  if1876_end3339:
    unless_null $P5009, vivi_18773340
    new $P5010, 'Hash'
    set pkg_viv_tmp_141["%REG"], $P5010
    set $P5009, $P5010
  vivi_18773340:
    unless_null $P5009, vivi_18783341
    die "Contextual %*REG not found"
    box $P5011, "Contextual %*REG not found"
    set $P5009, $P5011
  vivi_18783341:
    set $P5004, $P5009
  fallback3337:
    set fb_tmp_591, $P5004
    repr_defined $I5001, fb_tmp_591
    unless $I5001 goto if1875_else3335 
    set $P5012, fb_tmp_591["cur"]
    set $P5014, $P5012
    goto if1875_end3336
  if1875_else3335:
    null $P5013
    set $P5014, $P5013
  if1875_end3336:
    unless_null $P5014, vivi_18793342
    nqp_get_sc_object $P5015, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5014, $P5015
  vivi_18793342:
    $P5016 = $P5003."post_new"("Ops", $P5014 :named("result"))
    set $P101, $P5016
.annotate 'line', 3959
    find_dynamic_lex $P5017, "%*REG"
    unless_null $P5017, fallback3345
    nqp_get_sc_object $P5019, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5018, $P5019
    set pkg_viv_tmp_142, $P5018
    set fb_tmp_594, pkg_viv_tmp_142
    repr_defined $I5004, fb_tmp_594
    unless $I5004 goto if1881_else3346 
    set $P5020, fb_tmp_594["%REG"]
    set $P5022, $P5020
    goto if1881_end3347
  if1881_else3346:
    null $P5021
    set $P5022, $P5021
  if1881_end3347:
    unless_null $P5022, vivi_18823348
    new $P5023, 'Hash'
    set pkg_viv_tmp_142["%REG"], $P5023
    set $P5022, $P5023
  vivi_18823348:
    unless_null $P5022, vivi_18833349
    die "Contextual %*REG not found"
    box $P5024, "Contextual %*REG not found"
    set $P5022, $P5024
  vivi_18833349:
    set $P5017, $P5022
  fallback3345:
    set fb_tmp_593, $P5017
    repr_defined $I5003, fb_tmp_593
    unless $I5003 goto if1880_else3343 
    set $P5025, fb_tmp_593["cur"]
    set $P5027, $P5025
    goto if1880_end3344
  if1880_else3343:
    null $P5026
    set $P5027, $P5026
  if1880_end3344:
    unless_null $P5027, vivi_18843350
    nqp_get_sc_object $P5028, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5027, $P5028
  vivi_18843350:
    find_dynamic_lex $P5029, "%*REG"
    unless_null $P5029, fallback3353
    nqp_get_sc_object $P5031, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5030, $P5031
    set pkg_viv_tmp_143, $P5030
    set fb_tmp_596, pkg_viv_tmp_143
    repr_defined $I5006, fb_tmp_596
    unless $I5006 goto if1886_else3354 
    set $P5032, fb_tmp_596["%REG"]
    set $P5034, $P5032
    goto if1886_end3355
  if1886_else3354:
    null $P5033
    set $P5034, $P5033
  if1886_end3355:
    unless_null $P5034, vivi_18873356
    new $P5035, 'Hash'
    set pkg_viv_tmp_143["%REG"], $P5035
    set $P5034, $P5035
  vivi_18873356:
    unless_null $P5034, vivi_18883357
    die "Contextual %*REG not found"
    box $P5036, "Contextual %*REG not found"
    set $P5034, $P5036
  vivi_18883357:
    set $P5029, $P5034
  fallback3353:
    set fb_tmp_595, $P5029
    repr_defined $I5005, fb_tmp_595
    unless $I5005 goto if1885_else3351 
    set $P5037, fb_tmp_595["curclass"]
    set $P5039, $P5037
    goto if1885_end3352
  if1885_else3351:
    null $P5038
    set $P5039, $P5038
  if1885_end3352:
    unless_null $P5039, vivi_18893358
    nqp_get_sc_object $P5040, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5039, $P5040
  vivi_18893358:
    find_dynamic_lex $P5041, "%*REG"
    unless_null $P5041, fallback3361
    nqp_get_sc_object $P5043, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5042, $P5043
    set pkg_viv_tmp_144, $P5042
    set fb_tmp_598, pkg_viv_tmp_144
    repr_defined $I5008, fb_tmp_598
    unless $I5008 goto if1891_else3362 
    set $P5044, fb_tmp_598["%REG"]
    set $P5046, $P5044
    goto if1891_end3363
  if1891_else3362:
    null $P5045
    set $P5046, $P5045
  if1891_end3363:
    unless_null $P5046, vivi_18923364
    new $P5047, 'Hash'
    set pkg_viv_tmp_144["%REG"], $P5047
    set $P5046, $P5047
  vivi_18923364:
    unless_null $P5046, vivi_18933365
    die "Contextual %*REG not found"
    box $P5048, "Contextual %*REG not found"
    set $P5046, $P5048
  vivi_18933365:
    set $P5041, $P5046
  fallback3361:
    set fb_tmp_597, $P5041
    repr_defined $I5007, fb_tmp_597
    unless $I5007 goto if1890_else3359 
    set $P5049, fb_tmp_597["pos"]
    set $P5051, $P5049
    goto if1890_end3360
  if1890_else3359:
    null $P5050
    set $P5051, $P5050
  if1890_end3360:
    unless_null $P5051, vivi_18943366
    nqp_get_sc_object $P5052, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5051, $P5052
  vivi_18943366:
    $P101."push_pirop"("repr_bind_attr_int", $P5027, $P5039, "\"$!pos\"", $P5051)
.annotate 'line', 3960
    find_dynamic_lex $P5053, "%*REG"
    unless_null $P5053, fallback3369
    nqp_get_sc_object $P5055, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5054, $P5055
    set pkg_viv_tmp_145, $P5054
    set fb_tmp_600, pkg_viv_tmp_145
    repr_defined $I5010, fb_tmp_600
    unless $I5010 goto if1896_else3370 
    set $P5056, fb_tmp_600["%REG"]
    set $P5058, $P5056
    goto if1896_end3371
  if1896_else3370:
    null $P5057
    set $P5058, $P5057
  if1896_end3371:
    unless_null $P5058, vivi_18973372
    new $P5059, 'Hash'
    set pkg_viv_tmp_145["%REG"], $P5059
    set $P5058, $P5059
  vivi_18973372:
    unless_null $P5058, vivi_18983373
    die "Contextual %*REG not found"
    box $P5060, "Contextual %*REG not found"
    set $P5058, $P5060
  vivi_18983373:
    set $P5053, $P5058
  fallback3369:
    set fb_tmp_599, $P5053
    repr_defined $I5009, fb_tmp_599
    unless $I5009 goto if1895_else3367 
    set $P5061, fb_tmp_599["cur"]
    set $P5063, $P5061
    goto if1895_end3368
  if1895_else3367:
    null $P5062
    set $P5063, $P5062
  if1895_end3368:
    unless_null $P5063, vivi_18993374
    nqp_get_sc_object $P5064, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5063, $P5064
  vivi_18993374:
    $P101."push_pirop"("store_lex", utf8:"unicode:\"$\\x{a2}\"", $P5063)
.annotate 'line', 3961
    nqp_decontainerize $P5065, _lex_param_0
    nqp_decontainerize $P5066, _lex_param_0
    set fb_tmp_601, _lex_param_1
    repr_defined $I5011, fb_tmp_601
    unless $I5011 goto if1900_else3375 
    set $P5067, fb_tmp_601[0]
    set $P5069, $P5067
    goto if1900_end3376
  if1900_else3375:
    null $P5068
    set $P5069, $P5068
  if1900_end3376:
    unless_null $P5069, vivi_19013377
    nqp_get_sc_object $P5070, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5069, $P5070
  vivi_19013377:
    $P5071 = $P5066."as_post"($P5069)
    $P5072 = $P5065."coerce"($P5071, "P")
    set $P102, $P5072
.annotate 'line', 3962
    $P101."push"($P102)
.annotate 'line', 3963
    $P5073 = _lex_param_1."subtype"()
    set $S5001, $P5073
    iseq $I5012, $S5001, "zerowidth"
    unless $I5012 goto if1902_end3379 
.annotate 'line', 3964
    $P5074 = _lex_param_1."negate"()
    unless $P5074 goto if1903_else3380 
    set $S5002, "if"
    goto if1903_end3381
  if1903_else3380:
    set $S5002, "unless"
  if1903_end3381:
    find_dynamic_lex $P5075, "%*REG"
    unless_null $P5075, fallback3384
    nqp_get_sc_object $P5077, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5076, $P5077
    set pkg_viv_tmp_146, $P5076
    set fb_tmp_603, pkg_viv_tmp_146
    repr_defined $I5014, fb_tmp_603
    unless $I5014 goto if1905_else3385 
    set $P5078, fb_tmp_603["%REG"]
    set $P5080, $P5078
    goto if1905_end3386
  if1905_else3385:
    null $P5079
    set $P5080, $P5079
  if1905_end3386:
    unless_null $P5080, vivi_19063387
    new $P5081, 'Hash'
    set pkg_viv_tmp_146["%REG"], $P5081
    set $P5080, $P5081
  vivi_19063387:
    unless_null $P5080, vivi_19073388
    die "Contextual %*REG not found"
    box $P5082, "Contextual %*REG not found"
    set $P5080, $P5082
  vivi_19073388:
    set $P5075, $P5080
  fallback3384:
    set fb_tmp_602, $P5075
    repr_defined $I5013, fb_tmp_602
    unless $I5013 goto if1904_else3382 
    set $P5083, fb_tmp_602["fail"]
    set $P5085, $P5083
    goto if1904_end3383
  if1904_else3382:
    null $P5084
    set $P5085, $P5084
  if1904_end3383:
    unless_null $P5085, vivi_19083389
    nqp_get_sc_object $P5086, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5085, $P5086
  vivi_19083389:
    $P5087 = $P101."push_pirop"($S5002, $P102, $P5085)
  if1902_end3379:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "quant" :subid("cuid_132_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3969
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5170 = 'cuid_377_1366375329.52446' 
    capture_lex $P5170 
    .lex "$ops", $P101 
    .lex "$backtrack", $P102 
    .lex "$sep", $P103 
    .lex "$prefix", $P104 
    .lex "$looplabel", $P105 
    .lex "$donelabel", $P106 
    .lex "$min", $P107 
    .lex "$max", $P108 
    .lex "$needrep", $P109 
    .lex "$needmark", $P110 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_604 
    .local pmc fb_tmp_605 
    .local pmc pkg_viv_tmp_147 
    .local pmc fb_tmp_606 
    .local pmc fb_tmp_628 
    .local pmc fb_tmp_629 
    .local pmc pkg_viv_tmp_158 
    .local pmc fb_tmp_630 
    .local pmc fb_tmp_631 
    .local pmc fb_tmp_632 
    .local pmc pkg_viv_tmp_159 
    .local pmc fb_tmp_633 
    .local pmc fb_tmp_634 
    .local pmc pkg_viv_tmp_160 
    .local pmc fb_tmp_635 
    .local pmc fb_tmp_636 
    .local pmc pkg_viv_tmp_161 
    .local pmc fb_tmp_637 
    .local pmc fb_tmp_638 
    .local pmc pkg_viv_tmp_162 
    .local pmc fb_tmp_639 
    .local pmc fb_tmp_640 
    .local pmc pkg_viv_tmp_163 
    .local pmc fb_tmp_641 
    .local pmc fb_tmp_642 
    .local pmc pkg_viv_tmp_164 
    .local pmc fb_tmp_643 
    .local pmc fb_tmp_644 
    .local pmc pkg_viv_tmp_165 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P105, $P5005
    nqp_get_sc_object $P5006, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P106, $P5006
    nqp_get_sc_object $P5007, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P107, $P5007
    nqp_get_sc_object $P5008, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P108, $P5008
    nqp_get_sc_object $P5009, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P109, $P5009
    nqp_get_sc_object $P5010, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P110, $P5010
.annotate 'line', 3970
    nqp_decontainerize $P5011, _lex_param_0
    find_dynamic_lex $P5012, "%*REG"
    unless_null $P5012, fallback3392
    nqp_get_sc_object $P5014, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5013, $P5014
    set pkg_viv_tmp_147, $P5013
    set fb_tmp_605, pkg_viv_tmp_147
    repr_defined $I5002, fb_tmp_605
    unless $I5002 goto if1910_else3393 
    set $P5015, fb_tmp_605["%REG"]
    set $P5017, $P5015
    goto if1910_end3394
  if1910_else3393:
    null $P5016
    set $P5017, $P5016
  if1910_end3394:
    unless_null $P5017, vivi_19113395
    new $P5018, 'Hash'
    set pkg_viv_tmp_147["%REG"], $P5018
    set $P5017, $P5018
  vivi_19113395:
    unless_null $P5017, vivi_19123396
    die "Contextual %*REG not found"
    box $P5019, "Contextual %*REG not found"
    set $P5017, $P5019
  vivi_19123396:
    set $P5012, $P5017
  fallback3392:
    set fb_tmp_604, $P5012
    repr_defined $I5001, fb_tmp_604
    unless $I5001 goto if1909_else3390 
    set $P5020, fb_tmp_604["cur"]
    set $P5022, $P5020
    goto if1909_end3391
  if1909_else3390:
    null $P5021
    set $P5022, $P5021
  if1909_end3391:
    unless_null $P5022, vivi_19133397
    nqp_get_sc_object $P5023, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5022, $P5023
  vivi_19133397:
    $P5024 = $P5011."post_new"("Ops", $P5022 :named("result"))
    set $P101, $P5024
.annotate 'line', 3971
    $P5025 = _lex_param_1."backtrack"()
    set $P5026, $P5025
    if $P5025 goto unless1914_end3399 
    box $P5027, "g"
    set $P5026, $P5027
  unless1914_end3399:
    set $P102, $P5026
    set fb_tmp_606, _lex_param_1
    repr_defined $I5003, fb_tmp_606
    unless $I5003 goto if1915_else3400 
    set $P5028, fb_tmp_606[1]
    set $P5030, $P5028
    goto if1915_end3401
  if1915_else3400:
    null $P5029
    set $P5030, $P5029
  if1915_end3401:
    unless_null $P5030, vivi_19163402
    nqp_get_sc_object $P5031, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5030, $P5031
  vivi_19163402:
    set $P103, $P5030
.annotate 'line', 3973
    nqp_decontainerize $P5032, _lex_param_0
    set $S5002, $P102
    concat $S5001, "rxquant", $S5002
    $P5033 = $P5032."unique"($S5001)
    set $P104, $P5033
.annotate 'line', 3974
    nqp_decontainerize $P5034, _lex_param_0
    set $S5004, $P104
    concat $S5003, $S5004, "_loop"
    $P5035 = $P5034."post_new"("Label", $S5003 :named("name"))
    set $P105, $P5035
.annotate 'line', 3975
    nqp_decontainerize $P5036, _lex_param_0
    set $S5006, $P104
    concat $S5005, $S5006, "_done"
    $P5037 = $P5036."post_new"("Label", $S5005 :named("name"))
    set $P106, $P5037
.annotate 'line', 3976
    $P5038 = _lex_param_1."min"()
    set $P107, $P5038
.annotate 'line', 3977
    $P5039 = _lex_param_1."max"()
    set $P108, $P5039
    set $N5001, $P107
    set $N5002, 1
    isgt $I5004, $N5001, $N5002
    set $I5006, $I5004
    if $I5004 goto unless1917_end3404 
    set $N5003, $P108
    set $N5004, 1
    isgt $I5005, $N5003, $N5004
    set $I5006, $I5005
  unless1917_end3404:
    box $P5040, $I5006
    set $P109, $P5040
    set $P5041, $P109
    if $P109 goto unless1918_end3406 
    set $S5007, $P102
    iseq $I5007, $S5007, "r"
    box $P5042, $I5007
    set $P5041, $P5042
  unless1918_end3406:
    set $P110, $P5041
    set $N5005, $P107
    set $N5006, 0
    iseq $I5008, $N5005, $N5006
    set $I5010, $I5008
    unless $I5008 goto if1920_end3410 
    set $N5007, $P108
    set $N5008, 0
    iseq $I5009, $N5007, $N5008
    set $I5010, $I5009
  if1920_end3410:
    unless $I5010 goto if1919_else3407 
.annotate 'line', 3983
    nqp_get_sc_object $P5043, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    goto if1919_end3408
  if1919_else3407:
    set $S5008, $P102
    iseq $I5011, $S5008, "f"
    unless $I5011 goto if1921_else3411 
    .const 'Sub' $P5044 = 'cuid_377_1366375329.52446' 
    capture_lex $P5044
    $P5045 = $P5044()
    set $P5169, $P5045
    goto if1921_end3412
  if1921_else3411:
.annotate 'line', 4007
    set $N5009, $P107
    set $N5010, 0
    iseq $I5012, $N5009, $N5010
    unless $I5012 goto if1981_else3510 
.annotate 'line', 4008
    nqp_decontainerize $P5046, _lex_param_0
    find_dynamic_lex $P5047, "%*REG"
    unless_null $P5047, fallback3514
    nqp_get_sc_object $P5049, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5048, $P5049
    set pkg_viv_tmp_158, $P5048
    set fb_tmp_629, pkg_viv_tmp_158
    repr_defined $I5014, fb_tmp_629
    unless $I5014 goto if1983_else3515 
    set $P5050, fb_tmp_629["%REG"]
    set $P5052, $P5050
    goto if1983_end3516
  if1983_else3515:
    null $P5051
    set $P5052, $P5051
  if1983_end3516:
    unless_null $P5052, vivi_19843517
    new $P5053, 'Hash'
    set pkg_viv_tmp_158["%REG"], $P5053
    set $P5052, $P5053
  vivi_19843517:
    unless_null $P5052, vivi_19853518
    die "Contextual %*REG not found"
    box $P5054, "Contextual %*REG not found"
    set $P5052, $P5054
  vivi_19853518:
    set $P5047, $P5052
  fallback3514:
    set fb_tmp_628, $P5047
    repr_defined $I5013, fb_tmp_628
    unless $I5013 goto if1982_else3512 
    set $P5055, fb_tmp_628["pos"]
    set $P5057, $P5055
    goto if1982_end3513
  if1982_else3512:
    null $P5056
    set $P5057, $P5056
  if1982_end3513:
    unless_null $P5057, vivi_19863519
    nqp_get_sc_object $P5058, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5057, $P5058
  vivi_19863519:
    $P5059 = $P5046."regex_mark"($P101, $P106, $P5057, 0)
    goto if1981_end3511
  if1981_else3510:
    set $P5062, $P110
    unless $P110 goto if1987_end3521 
.annotate 'line', 4009
    nqp_decontainerize $P5060, _lex_param_0
    $P5061 = $P5060."regex_mark"($P101, $P106, -1, 0)
    set $P5062, $P5061
  if1987_end3521:
  if1981_end3511:
.annotate 'line', 4010
    $P101."push"($P105)
.annotate 'line', 4011
    nqp_decontainerize $P5063, _lex_param_0
    set fb_tmp_630, _lex_param_1
    repr_defined $I5015, fb_tmp_630
    unless $I5015 goto if1988_else3522 
    set $P5064, fb_tmp_630[0]
    set $P5066, $P5064
    goto if1988_end3523
  if1988_else3522:
    null $P5065
    set $P5066, $P5065
  if1988_end3523:
    unless_null $P5066, vivi_19893524
    nqp_get_sc_object $P5067, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5066, $P5067
  vivi_19893524:
    $P5068 = $P5063."regex_post"($P5066)
    $P101."push"($P5068)
    unless $P110 goto if1990_end3526 
.annotate 'line', 4012
.annotate 'line', 4013
    nqp_decontainerize $P5069, _lex_param_0
    find_dynamic_lex $P5070, "%*REG"
    unless_null $P5070, fallback3529
    nqp_get_sc_object $P5072, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5071, $P5072
    set pkg_viv_tmp_159, $P5071
    set fb_tmp_632, pkg_viv_tmp_159
    repr_defined $I5017, fb_tmp_632
    unless $I5017 goto if1992_else3530 
    set $P5073, fb_tmp_632["%REG"]
    set $P5075, $P5073
    goto if1992_end3531
  if1992_else3530:
    null $P5074
    set $P5075, $P5074
  if1992_end3531:
    unless_null $P5075, vivi_19933532
    new $P5076, 'Hash'
    set pkg_viv_tmp_159["%REG"], $P5076
    set $P5075, $P5076
  vivi_19933532:
    unless_null $P5075, vivi_19943533
    die "Contextual %*REG not found"
    box $P5077, "Contextual %*REG not found"
    set $P5075, $P5077
  vivi_19943533:
    set $P5070, $P5075
  fallback3529:
    set fb_tmp_631, $P5070
    repr_defined $I5016, fb_tmp_631
    unless $I5016 goto if1991_else3527 
    set $P5078, fb_tmp_631["rep"]
    set $P5080, $P5078
    goto if1991_end3528
  if1991_else3527:
    null $P5079
    set $P5080, $P5079
  if1991_end3528:
    unless_null $P5080, vivi_19953534
    nqp_get_sc_object $P5081, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5080, $P5081
  vivi_19953534:
    $P5069."regex_peek"($P101, $P106, "*", $P5080)
    set $S5009, $P102
    iseq $I5018, $S5009, "r"
    unless $I5018 goto if1996_end3536 
.annotate 'line', 4014
    nqp_decontainerize $P5082, _lex_param_0
    $P5083 = $P5082."regex_commit"($P101, $P106)
  if1996_end3536:
.annotate 'line', 4015
    find_dynamic_lex $P5084, "%*REG"
    unless_null $P5084, fallback3539
    nqp_get_sc_object $P5086, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5085, $P5086
    set pkg_viv_tmp_160, $P5085
    set fb_tmp_634, pkg_viv_tmp_160
    repr_defined $I5020, fb_tmp_634
    unless $I5020 goto if1998_else3540 
    set $P5087, fb_tmp_634["%REG"]
    set $P5089, $P5087
    goto if1998_end3541
  if1998_else3540:
    null $P5088
    set $P5089, $P5088
  if1998_end3541:
    unless_null $P5089, vivi_19993542
    new $P5090, 'Hash'
    set pkg_viv_tmp_160["%REG"], $P5090
    set $P5089, $P5090
  vivi_19993542:
    unless_null $P5089, vivi_20003543
    die "Contextual %*REG not found"
    box $P5091, "Contextual %*REG not found"
    set $P5089, $P5091
  vivi_20003543:
    set $P5084, $P5089
  fallback3539:
    set fb_tmp_633, $P5084
    repr_defined $I5019, fb_tmp_633
    unless $I5019 goto if1997_else3537 
    set $P5092, fb_tmp_633["rep"]
    set $P5094, $P5092
    goto if1997_end3538
  if1997_else3537:
    null $P5093
    set $P5094, $P5093
  if1997_end3538:
    unless_null $P5094, vivi_20013544
    nqp_get_sc_object $P5095, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5094, $P5095
  vivi_20013544:
    $P101."push_pirop"("inc", $P5094)
    set $N5011, $P108
    set $N5012, 1
    isgt $I5021, $N5011, $N5012
    box $P5111, $I5021
    set $P5110, $P5111
    unless $I5021 goto if2002_end3546 
.annotate 'line', 4016
    find_dynamic_lex $P5096, "%*REG"
    unless_null $P5096, fallback3549
    nqp_get_sc_object $P5098, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5097, $P5098
    set pkg_viv_tmp_161, $P5097
    set fb_tmp_636, pkg_viv_tmp_161
    repr_defined $I5023, fb_tmp_636
    unless $I5023 goto if2004_else3550 
    set $P5099, fb_tmp_636["%REG"]
    set $P5101, $P5099
    goto if2004_end3551
  if2004_else3550:
    null $P5100
    set $P5101, $P5100
  if2004_end3551:
    unless_null $P5101, vivi_20053552
    new $P5102, 'Hash'
    set pkg_viv_tmp_161["%REG"], $P5102
    set $P5101, $P5102
  vivi_20053552:
    unless_null $P5101, vivi_20063553
    die "Contextual %*REG not found"
    box $P5103, "Contextual %*REG not found"
    set $P5101, $P5103
  vivi_20063553:
    set $P5096, $P5101
  fallback3549:
    set fb_tmp_635, $P5096
    repr_defined $I5022, fb_tmp_635
    unless $I5022 goto if2003_else3547 
    set $P5104, fb_tmp_635["rep"]
    set $P5106, $P5104
    goto if2003_end3548
  if2003_else3547:
    null $P5105
    set $P5106, $P5105
  if2003_end3548:
    unless_null $P5106, vivi_20073554
    nqp_get_sc_object $P5107, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5106, $P5107
  vivi_20073554:
    $P5108 = _lex_param_1."max"()
    $P5109 = $P101."push_pirop"("ge", $P5106, $P5108, $P106)
    set $P5110, $P5109
  if2002_end3546:
  if1990_end3526:
    set $N5013, $P108
    set $N5014, 1
    iseq $I5024, $N5013, $N5014
    if $I5024 goto unless2008_end3556 
.annotate 'line', 4019
.annotate 'line', 4020
    nqp_decontainerize $P5112, _lex_param_0
    find_dynamic_lex $P5113, "%*REG"
    unless_null $P5113, fallback3559
    nqp_get_sc_object $P5115, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5114, $P5115
    set pkg_viv_tmp_162, $P5114
    set fb_tmp_638, pkg_viv_tmp_162
    repr_defined $I5026, fb_tmp_638
    unless $I5026 goto if2010_else3560 
    set $P5116, fb_tmp_638["%REG"]
    set $P5118, $P5116
    goto if2010_end3561
  if2010_else3560:
    null $P5117
    set $P5118, $P5117
  if2010_end3561:
    unless_null $P5118, vivi_20113562
    new $P5119, 'Hash'
    set pkg_viv_tmp_162["%REG"], $P5119
    set $P5118, $P5119
  vivi_20113562:
    unless_null $P5118, vivi_20123563
    die "Contextual %*REG not found"
    box $P5120, "Contextual %*REG not found"
    set $P5118, $P5120
  vivi_20123563:
    set $P5113, $P5118
  fallback3559:
    set fb_tmp_637, $P5113
    repr_defined $I5025, fb_tmp_637
    unless $I5025 goto if2009_else3557 
    set $P5121, fb_tmp_637["pos"]
    set $P5123, $P5121
    goto if2009_end3558
  if2009_else3557:
    null $P5122
    set $P5123, $P5122
  if2009_end3558:
    unless_null $P5123, vivi_20133564
    nqp_get_sc_object $P5124, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5123, $P5124
  vivi_20133564:
    find_dynamic_lex $P5125, "%*REG"
    unless_null $P5125, fallback3567
    nqp_get_sc_object $P5127, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5126, $P5127
    set pkg_viv_tmp_163, $P5126
    set fb_tmp_640, pkg_viv_tmp_163
    repr_defined $I5028, fb_tmp_640
    unless $I5028 goto if2015_else3568 
    set $P5128, fb_tmp_640["%REG"]
    set $P5130, $P5128
    goto if2015_end3569
  if2015_else3568:
    null $P5129
    set $P5130, $P5129
  if2015_end3569:
    unless_null $P5130, vivi_20163570
    new $P5131, 'Hash'
    set pkg_viv_tmp_163["%REG"], $P5131
    set $P5130, $P5131
  vivi_20163570:
    unless_null $P5130, vivi_20173571
    die "Contextual %*REG not found"
    box $P5132, "Contextual %*REG not found"
    set $P5130, $P5132
  vivi_20173571:
    set $P5125, $P5130
  fallback3567:
    set fb_tmp_639, $P5125
    repr_defined $I5027, fb_tmp_639
    unless $I5027 goto if2014_else3565 
    set $P5133, fb_tmp_639["rep"]
    set $P5135, $P5133
    goto if2014_end3566
  if2014_else3565:
    null $P5134
    set $P5135, $P5134
  if2014_end3566:
    unless_null $P5135, vivi_20183572
    nqp_get_sc_object $P5136, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5135, $P5136
  vivi_20183572:
    $P5112."regex_mark"($P101, $P106, $P5123, $P5135)
    unless $P103 goto if2019_end3574 
.annotate 'line', 4021
    nqp_decontainerize $P5137, _lex_param_0
    $P5138 = $P5137."regex_post"($P103)
    $P5139 = $P101."push"($P5138)
  if2019_end3574:
.annotate 'line', 4022
    $P5140 = $P101."push_pirop"("goto", $P105)
  unless2008_end3556:
.annotate 'line', 4024
    $P101."push"($P106)
    set $N5015, $P107
    set $N5016, 1
    isgt $I5029, $N5015, $N5016
    box $P5168, $I5029
    set $P5167, $P5168
    unless $I5029 goto if2020_end3576 
.annotate 'line', 4025
    find_dynamic_lex $P5141, "%*REG"
    unless_null $P5141, fallback3579
    nqp_get_sc_object $P5143, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5142, $P5143
    set pkg_viv_tmp_164, $P5142
    set fb_tmp_642, pkg_viv_tmp_164
    repr_defined $I5031, fb_tmp_642
    unless $I5031 goto if2022_else3580 
    set $P5144, fb_tmp_642["%REG"]
    set $P5146, $P5144
    goto if2022_end3581
  if2022_else3580:
    null $P5145
    set $P5146, $P5145
  if2022_end3581:
    unless_null $P5146, vivi_20233582
    new $P5147, 'Hash'
    set pkg_viv_tmp_164["%REG"], $P5147
    set $P5146, $P5147
  vivi_20233582:
    unless_null $P5146, vivi_20243583
    die "Contextual %*REG not found"
    box $P5148, "Contextual %*REG not found"
    set $P5146, $P5148
  vivi_20243583:
    set $P5141, $P5146
  fallback3579:
    set fb_tmp_641, $P5141
    repr_defined $I5030, fb_tmp_641
    unless $I5030 goto if2021_else3577 
    set $P5149, fb_tmp_641["rep"]
    set $P5151, $P5149
    goto if2021_end3578
  if2021_else3577:
    null $P5150
    set $P5151, $P5150
  if2021_end3578:
    unless_null $P5151, vivi_20253584
    nqp_get_sc_object $P5152, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5151, $P5152
  vivi_20253584:
    $P5153 = _lex_param_1."min"()
    set $N5017, $P5153
    find_dynamic_lex $P5154, "%*REG"
    unless_null $P5154, fallback3587
    nqp_get_sc_object $P5156, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5155, $P5156
    set pkg_viv_tmp_165, $P5155
    set fb_tmp_644, pkg_viv_tmp_165
    repr_defined $I5033, fb_tmp_644
    unless $I5033 goto if2027_else3588 
    set $P5157, fb_tmp_644["%REG"]
    set $P5159, $P5157
    goto if2027_end3589
  if2027_else3588:
    null $P5158
    set $P5159, $P5158
  if2027_end3589:
    unless_null $P5159, vivi_20283590
    new $P5160, 'Hash'
    set pkg_viv_tmp_165["%REG"], $P5160
    set $P5159, $P5160
  vivi_20283590:
    unless_null $P5159, vivi_20293591
    die "Contextual %*REG not found"
    box $P5161, "Contextual %*REG not found"
    set $P5159, $P5161
  vivi_20293591:
    set $P5154, $P5159
  fallback3587:
    set fb_tmp_643, $P5154
    repr_defined $I5032, fb_tmp_643
    unless $I5032 goto if2026_else3585 
    set $P5162, fb_tmp_643["fail"]
    set $P5164, $P5162
    goto if2026_end3586
  if2026_else3585:
    null $P5163
    set $P5164, $P5163
  if2026_end3586:
    unless_null $P5164, vivi_20303592
    nqp_get_sc_object $P5165, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5164, $P5165
  vivi_20303592:
    $P5166 = $P101."push_pirop"("lt", $P5151, $N5017, $P5164)
    set $P5167, $P5166
  if2020_end3576:
    set $P5169, $P5167
  if1921_end3412:
  if1919_end3408:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_377_1366375329.52446") :anon :lex :outer("cuid_132_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 3986
    .lex "$seplabel", $P101 
    .lex "$ireg", $P102 
    .local pmc fb_tmp_607 
    .local pmc fb_tmp_608 
    .local pmc pkg_viv_tmp_148 
    .local pmc fb_tmp_609 
    .local pmc fb_tmp_610 
    .local pmc pkg_viv_tmp_149 
    .local pmc fb_tmp_611 
    .local pmc fb_tmp_612 
    .local pmc pkg_viv_tmp_150 
    .local pmc fb_tmp_613 
    .local pmc fb_tmp_614 
    .local pmc pkg_viv_tmp_151 
    .local pmc fb_tmp_615 
    .local pmc fb_tmp_616 
    .local pmc fb_tmp_617 
    .local pmc pkg_viv_tmp_152 
    .local pmc fb_tmp_618 
    .local pmc fb_tmp_619 
    .local pmc pkg_viv_tmp_153 
    .local pmc fb_tmp_620 
    .local pmc fb_tmp_621 
    .local pmc pkg_viv_tmp_154 
    .local pmc fb_tmp_622 
    .local pmc fb_tmp_623 
    .local pmc pkg_viv_tmp_155 
    .local pmc fb_tmp_624 
    .local pmc fb_tmp_625 
    .local pmc pkg_viv_tmp_156 
    .local pmc fb_tmp_626 
    .local pmc fb_tmp_627 
    .local pmc pkg_viv_tmp_157 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
.annotate 'line', 3987
    find_lex $P5004, "self"
    nqp_decontainerize $P5003, $P5004
    find_lex $P5005, "$prefix"
    set $S5002, $P5005
    concat $S5001, $S5002, "_sep"
    $P5006 = $P5003."post_new"("Label", $S5001 :named("name"))
    set $P101, $P5006
    box $P5007, "$I12"
    set $P102, $P5007
.annotate 'line', 3989
    find_lex $P5008, "$ops"
    find_dynamic_lex $P5009, "%*REG"
    unless_null $P5009, fallback3415
    nqp_get_sc_object $P5011, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5010, $P5011
    set pkg_viv_tmp_148, $P5010
    set fb_tmp_608, pkg_viv_tmp_148
    repr_defined $I5002, fb_tmp_608
    unless $I5002 goto if1923_else3416 
    set $P5012, fb_tmp_608["%REG"]
    set $P5014, $P5012
    goto if1923_end3417
  if1923_else3416:
    null $P5013
    set $P5014, $P5013
  if1923_end3417:
    unless_null $P5014, vivi_19243418
    new $P5015, 'Hash'
    set pkg_viv_tmp_148["%REG"], $P5015
    set $P5014, $P5015
  vivi_19243418:
    unless_null $P5014, vivi_19253419
    die "Contextual %*REG not found"
    box $P5016, "Contextual %*REG not found"
    set $P5014, $P5016
  vivi_19253419:
    set $P5009, $P5014
  fallback3415:
    set fb_tmp_607, $P5009
    repr_defined $I5001, fb_tmp_607
    unless $I5001 goto if1922_else3413 
    set $P5017, fb_tmp_607["rep"]
    set $P5019, $P5017
    goto if1922_end3414
  if1922_else3413:
    null $P5018
    set $P5019, $P5018
  if1922_end3414:
    unless_null $P5019, vivi_19263420
    nqp_get_sc_object $P5020, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5019, $P5020
  vivi_19263420:
    $P5008."push_pirop"("set", $P5019, 0)
    find_lex $P5021, "$min"
    set $N5001, $P5021
    set $N5002, 1
    islt $I5003, $N5001, $N5002
    unless $I5003 goto if1927_end3422 
.annotate 'line', 3990
.annotate 'line', 3991
    find_lex $P5023, "self"
    nqp_decontainerize $P5022, $P5023
    find_lex $P5024, "$ops"
    find_lex $P5025, "$looplabel"
    find_dynamic_lex $P5026, "%*REG"
    unless_null $P5026, fallback3425
    nqp_get_sc_object $P5028, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5027, $P5028
    set pkg_viv_tmp_149, $P5027
    set fb_tmp_610, pkg_viv_tmp_149
    repr_defined $I5005, fb_tmp_610
    unless $I5005 goto if1929_else3426 
    set $P5029, fb_tmp_610["%REG"]
    set $P5031, $P5029
    goto if1929_end3427
  if1929_else3426:
    null $P5030
    set $P5031, $P5030
  if1929_end3427:
    unless_null $P5031, vivi_19303428
    new $P5032, 'Hash'
    set pkg_viv_tmp_149["%REG"], $P5032
    set $P5031, $P5032
  vivi_19303428:
    unless_null $P5031, vivi_19313429
    die "Contextual %*REG not found"
    box $P5033, "Contextual %*REG not found"
    set $P5031, $P5033
  vivi_19313429:
    set $P5026, $P5031
  fallback3425:
    set fb_tmp_609, $P5026
    repr_defined $I5004, fb_tmp_609
    unless $I5004 goto if1928_else3423 
    set $P5034, fb_tmp_609["pos"]
    set $P5036, $P5034
    goto if1928_end3424
  if1928_else3423:
    null $P5035
    set $P5036, $P5035
  if1928_end3424:
    unless_null $P5036, vivi_19323430
    nqp_get_sc_object $P5037, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5036, $P5037
  vivi_19323430:
    find_dynamic_lex $P5038, "%*REG"
    unless_null $P5038, fallback3433
    nqp_get_sc_object $P5040, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5039, $P5040
    set pkg_viv_tmp_150, $P5039
    set fb_tmp_612, pkg_viv_tmp_150
    repr_defined $I5007, fb_tmp_612
    unless $I5007 goto if1934_else3434 
    set $P5041, fb_tmp_612["%REG"]
    set $P5043, $P5041
    goto if1934_end3435
  if1934_else3434:
    null $P5042
    set $P5043, $P5042
  if1934_end3435:
    unless_null $P5043, vivi_19353436
    new $P5044, 'Hash'
    set pkg_viv_tmp_150["%REG"], $P5044
    set $P5043, $P5044
  vivi_19353436:
    unless_null $P5043, vivi_19363437
    die "Contextual %*REG not found"
    box $P5045, "Contextual %*REG not found"
    set $P5043, $P5045
  vivi_19363437:
    set $P5038, $P5043
  fallback3433:
    set fb_tmp_611, $P5038
    repr_defined $I5006, fb_tmp_611
    unless $I5006 goto if1933_else3431 
    set $P5046, fb_tmp_611["rep"]
    set $P5048, $P5046
    goto if1933_end3432
  if1933_else3431:
    null $P5047
    set $P5048, $P5047
  if1933_end3432:
    unless_null $P5048, vivi_19373438
    nqp_get_sc_object $P5049, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5048, $P5049
  vivi_19373438:
    $P5022."regex_mark"($P5024, $P5025, $P5036, $P5048)
.annotate 'line', 3992
    find_lex $P5050, "$ops"
    find_lex $P5051, "$donelabel"
    $P5052 = $P5050."push_pirop"("goto", $P5051)
  if1927_end3422:
    find_lex $P5053, "$sep"
    unless $P5053 goto if1938_end3440 
.annotate 'line', 3994
    find_lex $P5054, "$ops"
    $P5055 = $P5054."push_pirop"("goto", $P101)
  if1938_end3440:
.annotate 'line', 3995
    find_lex $P5056, "$ops"
    find_lex $P5057, "$looplabel"
    $P5056."push"($P5057)
.annotate 'line', 3996
    find_lex $P5058, "$ops"
    find_dynamic_lex $P5059, "%*REG"
    unless_null $P5059, fallback3443
    nqp_get_sc_object $P5061, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5060, $P5061
    set pkg_viv_tmp_151, $P5060
    set fb_tmp_614, pkg_viv_tmp_151
    repr_defined $I5009, fb_tmp_614
    unless $I5009 goto if1940_else3444 
    set $P5062, fb_tmp_614["%REG"]
    set $P5064, $P5062
    goto if1940_end3445
  if1940_else3444:
    null $P5063
    set $P5064, $P5063
  if1940_end3445:
    unless_null $P5064, vivi_19413446
    new $P5065, 'Hash'
    set pkg_viv_tmp_151["%REG"], $P5065
    set $P5064, $P5065
  vivi_19413446:
    unless_null $P5064, vivi_19423447
    die "Contextual %*REG not found"
    box $P5066, "Contextual %*REG not found"
    set $P5064, $P5066
  vivi_19423447:
    set $P5059, $P5064
  fallback3443:
    set fb_tmp_613, $P5059
    repr_defined $I5008, fb_tmp_613
    unless $I5008 goto if1939_else3441 
    set $P5067, fb_tmp_613["rep"]
    set $P5069, $P5067
    goto if1939_end3442
  if1939_else3441:
    null $P5068
    set $P5069, $P5068
  if1939_end3442:
    unless_null $P5069, vivi_19433448
    nqp_get_sc_object $P5070, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5069, $P5070
  vivi_19433448:
    $P5058."push_pirop"("set", $P102, $P5069)
    find_lex $P5071, "$sep"
    unless $P5071 goto if1944_end3450 
.annotate 'line', 3997
    find_lex $P5072, "$ops"
    find_lex $P5074, "self"
    nqp_decontainerize $P5073, $P5074
    find_lex $P5075, "$sep"
    $P5076 = $P5073."regex_post"($P5075)
    $P5077 = $P5072."push"($P5076)
  if1944_end3450:
    find_lex $P5078, "$sep"
    unless $P5078 goto if1945_end3452 
.annotate 'line', 3998
    find_lex $P5079, "$ops"
    $P5080 = $P5079."push"($P101)
  if1945_end3452:
.annotate 'line', 3999
    find_lex $P5081, "$ops"
    find_lex $P5083, "self"
    nqp_decontainerize $P5082, $P5083
    find_lex $P5084, "$node"
    set fb_tmp_615, $P5084
    repr_defined $I5010, fb_tmp_615
    unless $I5010 goto if1946_else3453 
    set $P5085, fb_tmp_615[0]
    set $P5087, $P5085
    goto if1946_end3454
  if1946_else3453:
    null $P5086
    set $P5087, $P5086
  if1946_end3454:
    unless_null $P5087, vivi_19473455
    nqp_get_sc_object $P5088, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5087, $P5088
  vivi_19473455:
    $P5089 = $P5082."regex_post"($P5087)
    $P5081."push"($P5089)
.annotate 'line', 4000
    find_lex $P5090, "$ops"
    find_dynamic_lex $P5091, "%*REG"
    unless_null $P5091, fallback3458
    nqp_get_sc_object $P5093, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5092, $P5093
    set pkg_viv_tmp_152, $P5092
    set fb_tmp_617, pkg_viv_tmp_152
    repr_defined $I5012, fb_tmp_617
    unless $I5012 goto if1949_else3459 
    set $P5094, fb_tmp_617["%REG"]
    set $P5096, $P5094
    goto if1949_end3460
  if1949_else3459:
    null $P5095
    set $P5096, $P5095
  if1949_end3460:
    unless_null $P5096, vivi_19503461
    new $P5097, 'Hash'
    set pkg_viv_tmp_152["%REG"], $P5097
    set $P5096, $P5097
  vivi_19503461:
    unless_null $P5096, vivi_19513462
    die "Contextual %*REG not found"
    box $P5098, "Contextual %*REG not found"
    set $P5096, $P5098
  vivi_19513462:
    set $P5091, $P5096
  fallback3458:
    set fb_tmp_616, $P5091
    repr_defined $I5011, fb_tmp_616
    unless $I5011 goto if1948_else3456 
    set $P5099, fb_tmp_616["rep"]
    set $P5101, $P5099
    goto if1948_end3457
  if1948_else3456:
    null $P5100
    set $P5101, $P5100
  if1948_end3457:
    unless_null $P5101, vivi_19523463
    nqp_get_sc_object $P5102, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5101, $P5102
  vivi_19523463:
    $P5090."push_pirop"("set", $P5101, $P102)
.annotate 'line', 4001
    find_lex $P5103, "$ops"
    find_dynamic_lex $P5104, "%*REG"
    unless_null $P5104, fallback3466
    nqp_get_sc_object $P5106, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5105, $P5106
    set pkg_viv_tmp_153, $P5105
    set fb_tmp_619, pkg_viv_tmp_153
    repr_defined $I5014, fb_tmp_619
    unless $I5014 goto if1954_else3467 
    set $P5107, fb_tmp_619["%REG"]
    set $P5109, $P5107
    goto if1954_end3468
  if1954_else3467:
    null $P5108
    set $P5109, $P5108
  if1954_end3468:
    unless_null $P5109, vivi_19553469
    new $P5110, 'Hash'
    set pkg_viv_tmp_153["%REG"], $P5110
    set $P5109, $P5110
  vivi_19553469:
    unless_null $P5109, vivi_19563470
    die "Contextual %*REG not found"
    box $P5111, "Contextual %*REG not found"
    set $P5109, $P5111
  vivi_19563470:
    set $P5104, $P5109
  fallback3466:
    set fb_tmp_618, $P5104
    repr_defined $I5013, fb_tmp_618
    unless $I5013 goto if1953_else3464 
    set $P5112, fb_tmp_618["rep"]
    set $P5114, $P5112
    goto if1953_end3465
  if1953_else3464:
    null $P5113
    set $P5114, $P5113
  if1953_end3465:
    unless_null $P5114, vivi_19573471
    nqp_get_sc_object $P5115, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5114, $P5115
  vivi_19573471:
    $P5103."push_pirop"("inc", $P5114)
    find_lex $P5116, "$min"
    set $N5003, $P5116
    set $N5004, 1
    isgt $I5015, $N5003, $N5004
    unless $I5015 goto if1958_end3473 
.annotate 'line', 4002
    find_lex $P5117, "$ops"
    find_dynamic_lex $P5118, "%*REG"
    unless_null $P5118, fallback3476
    nqp_get_sc_object $P5120, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5119, $P5120
    set pkg_viv_tmp_154, $P5119
    set fb_tmp_621, pkg_viv_tmp_154
    repr_defined $I5017, fb_tmp_621
    unless $I5017 goto if1960_else3477 
    set $P5121, fb_tmp_621["%REG"]
    set $P5123, $P5121
    goto if1960_end3478
  if1960_else3477:
    null $P5122
    set $P5123, $P5122
  if1960_end3478:
    unless_null $P5123, vivi_19613479
    new $P5124, 'Hash'
    set pkg_viv_tmp_154["%REG"], $P5124
    set $P5123, $P5124
  vivi_19613479:
    unless_null $P5123, vivi_19623480
    die "Contextual %*REG not found"
    box $P5125, "Contextual %*REG not found"
    set $P5123, $P5125
  vivi_19623480:
    set $P5118, $P5123
  fallback3476:
    set fb_tmp_620, $P5118
    repr_defined $I5016, fb_tmp_620
    unless $I5016 goto if1959_else3474 
    set $P5126, fb_tmp_620["rep"]
    set $P5128, $P5126
    goto if1959_end3475
  if1959_else3474:
    null $P5127
    set $P5128, $P5127
  if1959_end3475:
    unless_null $P5128, vivi_19633481
    nqp_get_sc_object $P5129, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5128, $P5129
  vivi_19633481:
    find_lex $P5130, "$min"
    find_lex $P5131, "$looplabel"
    $P5132 = $P5117."push_pirop"("lt", $P5128, $P5130, $P5131)
  if1958_end3473:
    find_lex $P5133, "$max"
    set $N5005, $P5133
    set $N5006, 1
    isgt $I5018, $N5005, $N5006
    unless $I5018 goto if1964_end3483 
.annotate 'line', 4003
    find_lex $P5134, "$ops"
    find_dynamic_lex $P5135, "%*REG"
    unless_null $P5135, fallback3486
    nqp_get_sc_object $P5137, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5136, $P5137
    set pkg_viv_tmp_155, $P5136
    set fb_tmp_623, pkg_viv_tmp_155
    repr_defined $I5020, fb_tmp_623
    unless $I5020 goto if1966_else3487 
    set $P5138, fb_tmp_623["%REG"]
    set $P5140, $P5138
    goto if1966_end3488
  if1966_else3487:
    null $P5139
    set $P5140, $P5139
  if1966_end3488:
    unless_null $P5140, vivi_19673489
    new $P5141, 'Hash'
    set pkg_viv_tmp_155["%REG"], $P5141
    set $P5140, $P5141
  vivi_19673489:
    unless_null $P5140, vivi_19683490
    die "Contextual %*REG not found"
    box $P5142, "Contextual %*REG not found"
    set $P5140, $P5142
  vivi_19683490:
    set $P5135, $P5140
  fallback3486:
    set fb_tmp_622, $P5135
    repr_defined $I5019, fb_tmp_622
    unless $I5019 goto if1965_else3484 
    set $P5143, fb_tmp_622["rep"]
    set $P5145, $P5143
    goto if1965_end3485
  if1965_else3484:
    null $P5144
    set $P5145, $P5144
  if1965_end3485:
    unless_null $P5145, vivi_19693491
    nqp_get_sc_object $P5146, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5145, $P5146
  vivi_19693491:
    find_lex $P5147, "$max"
    find_lex $P5148, "$donelabel"
    $P5149 = $P5134."push_pirop"("ge", $P5145, $P5147, $P5148)
  if1964_end3483:
    find_lex $P5150, "$max"
    set $N5007, $P5150
    set $N5008, 1
    isne $I5021, $N5007, $N5008
    unless $I5021 goto if1970_end3493 
.annotate 'line', 4004
    find_lex $P5152, "self"
    nqp_decontainerize $P5151, $P5152
    find_lex $P5153, "$ops"
    find_lex $P5154, "$looplabel"
    find_dynamic_lex $P5155, "%*REG"
    unless_null $P5155, fallback3496
    nqp_get_sc_object $P5157, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5156, $P5157
    set pkg_viv_tmp_156, $P5156
    set fb_tmp_625, pkg_viv_tmp_156
    repr_defined $I5023, fb_tmp_625
    unless $I5023 goto if1972_else3497 
    set $P5158, fb_tmp_625["%REG"]
    set $P5160, $P5158
    goto if1972_end3498
  if1972_else3497:
    null $P5159
    set $P5160, $P5159
  if1972_end3498:
    unless_null $P5160, vivi_19733499
    new $P5161, 'Hash'
    set pkg_viv_tmp_156["%REG"], $P5161
    set $P5160, $P5161
  vivi_19733499:
    unless_null $P5160, vivi_19743500
    die "Contextual %*REG not found"
    box $P5162, "Contextual %*REG not found"
    set $P5160, $P5162
  vivi_19743500:
    set $P5155, $P5160
  fallback3496:
    set fb_tmp_624, $P5155
    repr_defined $I5022, fb_tmp_624
    unless $I5022 goto if1971_else3494 
    set $P5163, fb_tmp_624["pos"]
    set $P5165, $P5163
    goto if1971_end3495
  if1971_else3494:
    null $P5164
    set $P5165, $P5164
  if1971_end3495:
    unless_null $P5165, vivi_19753501
    nqp_get_sc_object $P5166, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5165, $P5166
  vivi_19753501:
    find_dynamic_lex $P5167, "%*REG"
    unless_null $P5167, fallback3504
    nqp_get_sc_object $P5169, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5168, $P5169
    set pkg_viv_tmp_157, $P5168
    set fb_tmp_627, pkg_viv_tmp_157
    repr_defined $I5025, fb_tmp_627
    unless $I5025 goto if1977_else3505 
    set $P5170, fb_tmp_627["%REG"]
    set $P5172, $P5170
    goto if1977_end3506
  if1977_else3505:
    null $P5171
    set $P5172, $P5171
  if1977_end3506:
    unless_null $P5172, vivi_19783507
    new $P5173, 'Hash'
    set pkg_viv_tmp_157["%REG"], $P5173
    set $P5172, $P5173
  vivi_19783507:
    unless_null $P5172, vivi_19793508
    die "Contextual %*REG not found"
    box $P5174, "Contextual %*REG not found"
    set $P5172, $P5174
  vivi_19793508:
    set $P5167, $P5172
  fallback3504:
    set fb_tmp_626, $P5167
    repr_defined $I5024, fb_tmp_626
    unless $I5024 goto if1976_else3502 
    set $P5175, fb_tmp_626["rep"]
    set $P5177, $P5175
    goto if1976_end3503
  if1976_else3502:
    null $P5176
    set $P5177, $P5176
  if1976_end3503:
    unless_null $P5177, vivi_19803509
    nqp_get_sc_object $P5178, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5177, $P5178
  vivi_19803509:
    $P5179 = $P5151."regex_mark"($P5153, $P5154, $P5165, $P5177)
  if1970_end3493:
.annotate 'line', 4005
    find_lex $P5180, "$ops"
    find_lex $P5181, "$donelabel"
    $P5182 = $P5180."push"($P5181)
    .return ($P5182) 
.end
.HLL "nqp"
.namespace []
.sub "scan" :subid("cuid_133_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 4031
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "$prefix", $P102 
    .lex "$looplabel", $P103 
    .lex "$scanlabel", $P104 
    .lex "$donelabel", $P105 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_645 
    .local pmc fb_tmp_646 
    .local pmc pkg_viv_tmp_166 
    .local pmc fb_tmp_647 
    .local pmc fb_tmp_648 
    .local pmc pkg_viv_tmp_167 
    .local pmc fb_tmp_649 
    .local pmc fb_tmp_650 
    .local pmc pkg_viv_tmp_168 
    .local pmc fb_tmp_651 
    .local pmc fb_tmp_652 
    .local pmc pkg_viv_tmp_169 
    .local pmc fb_tmp_653 
    .local pmc fb_tmp_654 
    .local pmc pkg_viv_tmp_170 
    .local pmc fb_tmp_655 
    .local pmc fb_tmp_656 
    .local pmc pkg_viv_tmp_171 
    .local pmc fb_tmp_657 
    .local pmc fb_tmp_658 
    .local pmc pkg_viv_tmp_172 
    .local pmc fb_tmp_659 
    .local pmc fb_tmp_660 
    .local pmc pkg_viv_tmp_173 
    .local pmc fb_tmp_661 
    .local pmc fb_tmp_662 
    .local pmc pkg_viv_tmp_174 
    .local pmc fb_tmp_663 
    .local pmc fb_tmp_664 
    .local pmc pkg_viv_tmp_175 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P105, $P5005
.annotate 'line', 4032
    nqp_decontainerize $P5006, _lex_param_0
    find_dynamic_lex $P5007, "%*REG"
    unless_null $P5007, fallback3595
    nqp_get_sc_object $P5009, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5008, $P5009
    set pkg_viv_tmp_166, $P5008
    set fb_tmp_646, pkg_viv_tmp_166
    repr_defined $I5002, fb_tmp_646
    unless $I5002 goto if2032_else3596 
    set $P5010, fb_tmp_646["%REG"]
    set $P5012, $P5010
    goto if2032_end3597
  if2032_else3596:
    null $P5011
    set $P5012, $P5011
  if2032_end3597:
    unless_null $P5012, vivi_20333598
    new $P5013, 'Hash'
    set pkg_viv_tmp_166["%REG"], $P5013
    set $P5012, $P5013
  vivi_20333598:
    unless_null $P5012, vivi_20343599
    die "Contextual %*REG not found"
    box $P5014, "Contextual %*REG not found"
    set $P5012, $P5014
  vivi_20343599:
    set $P5007, $P5012
  fallback3595:
    set fb_tmp_645, $P5007
    repr_defined $I5001, fb_tmp_645
    unless $I5001 goto if2031_else3593 
    set $P5015, fb_tmp_645["cur"]
    set $P5017, $P5015
    goto if2031_end3594
  if2031_else3593:
    null $P5016
    set $P5017, $P5016
  if2031_end3594:
    unless_null $P5017, vivi_20353600
    nqp_get_sc_object $P5018, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5017, $P5018
  vivi_20353600:
    $P5019 = $P5006."post_new"("Ops", $P5017 :named("result"))
    set $P101, $P5019
.annotate 'line', 4033
    nqp_decontainerize $P5020, _lex_param_0
    $P5021 = $P5020."unique"("rxscan")
    set $P102, $P5021
.annotate 'line', 4034
    nqp_decontainerize $P5022, _lex_param_0
    set $S5002, $P102
    concat $S5001, $S5002, "_loop"
    $P5023 = $P5022."post_new"("Label", $S5001 :named("name"))
    set $P103, $P5023
.annotate 'line', 4035
    nqp_decontainerize $P5024, _lex_param_0
    set $S5004, $P102
    concat $S5003, $S5004, "_scan"
    $P5025 = $P5024."post_new"("Label", $S5003 :named("name"))
    set $P104, $P5025
.annotate 'line', 4036
    nqp_decontainerize $P5026, _lex_param_0
    set $S5006, $P102
    concat $S5005, $S5006, "_done"
    $P5027 = $P5026."post_new"("Label", $S5005 :named("name"))
    set $P105, $P5027
.annotate 'line', 4037
    find_dynamic_lex $P5028, "%*REG"
    unless_null $P5028, fallback3603
    nqp_get_sc_object $P5030, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5029, $P5030
    set pkg_viv_tmp_167, $P5029
    set fb_tmp_648, pkg_viv_tmp_167
    repr_defined $I5004, fb_tmp_648
    unless $I5004 goto if2037_else3604 
    set $P5031, fb_tmp_648["%REG"]
    set $P5033, $P5031
    goto if2037_end3605
  if2037_else3604:
    null $P5032
    set $P5033, $P5032
  if2037_end3605:
    unless_null $P5033, vivi_20383606
    new $P5034, 'Hash'
    set pkg_viv_tmp_167["%REG"], $P5034
    set $P5033, $P5034
  vivi_20383606:
    unless_null $P5033, vivi_20393607
    die "Contextual %*REG not found"
    box $P5035, "Contextual %*REG not found"
    set $P5033, $P5035
  vivi_20393607:
    set $P5028, $P5033
  fallback3603:
    set fb_tmp_647, $P5028
    repr_defined $I5003, fb_tmp_647
    unless $I5003 goto if2036_else3601 
    set $P5036, fb_tmp_647["curclass"]
    set $P5038, $P5036
    goto if2036_end3602
  if2036_else3601:
    null $P5037
    set $P5038, $P5037
  if2036_end3602:
    unless_null $P5038, vivi_20403608
    nqp_get_sc_object $P5039, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5038, $P5039
  vivi_20403608:
    $P101."push_pirop"("repr_get_attr_int", "$I11", "self", $P5038, "\"$!from\"")
.annotate 'line', 4038
    $P101."push_pirop"("ne", "$I11", -1, $P105)
.annotate 'line', 4039
    $P101."push_pirop"("goto", $P104)
.annotate 'line', 4040
    $P101."push"($P103)
.annotate 'line', 4041
    find_dynamic_lex $P5040, "%*REG"
    unless_null $P5040, fallback3611
    nqp_get_sc_object $P5042, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5041, $P5042
    set pkg_viv_tmp_168, $P5041
    set fb_tmp_650, pkg_viv_tmp_168
    repr_defined $I5006, fb_tmp_650
    unless $I5006 goto if2042_else3612 
    set $P5043, fb_tmp_650["%REG"]
    set $P5045, $P5043
    goto if2042_end3613
  if2042_else3612:
    null $P5044
    set $P5045, $P5044
  if2042_end3613:
    unless_null $P5045, vivi_20433614
    new $P5046, 'Hash'
    set pkg_viv_tmp_168["%REG"], $P5046
    set $P5045, $P5046
  vivi_20433614:
    unless_null $P5045, vivi_20443615
    die "Contextual %*REG not found"
    box $P5047, "Contextual %*REG not found"
    set $P5045, $P5047
  vivi_20443615:
    set $P5040, $P5045
  fallback3611:
    set fb_tmp_649, $P5040
    repr_defined $I5005, fb_tmp_649
    unless $I5005 goto if2041_else3609 
    set $P5048, fb_tmp_649["pos"]
    set $P5050, $P5048
    goto if2041_end3610
  if2041_else3609:
    null $P5049
    set $P5050, $P5049
  if2041_end3610:
    unless_null $P5050, vivi_20453616
    nqp_get_sc_object $P5051, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5050, $P5051
  vivi_20453616:
    $P101."push_pirop"("inc", $P5050)
.annotate 'line', 4042
    find_dynamic_lex $P5052, "%*REG"
    unless_null $P5052, fallback3619
    nqp_get_sc_object $P5054, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5053, $P5054
    set pkg_viv_tmp_169, $P5053
    set fb_tmp_652, pkg_viv_tmp_169
    repr_defined $I5008, fb_tmp_652
    unless $I5008 goto if2047_else3620 
    set $P5055, fb_tmp_652["%REG"]
    set $P5057, $P5055
    goto if2047_end3621
  if2047_else3620:
    null $P5056
    set $P5057, $P5056
  if2047_end3621:
    unless_null $P5057, vivi_20483622
    new $P5058, 'Hash'
    set pkg_viv_tmp_169["%REG"], $P5058
    set $P5057, $P5058
  vivi_20483622:
    unless_null $P5057, vivi_20493623
    die "Contextual %*REG not found"
    box $P5059, "Contextual %*REG not found"
    set $P5057, $P5059
  vivi_20493623:
    set $P5052, $P5057
  fallback3619:
    set fb_tmp_651, $P5052
    repr_defined $I5007, fb_tmp_651
    unless $I5007 goto if2046_else3617 
    set $P5060, fb_tmp_651["pos"]
    set $P5062, $P5060
    goto if2046_end3618
  if2046_else3617:
    null $P5061
    set $P5062, $P5061
  if2046_end3618:
    unless_null $P5062, vivi_20503624
    nqp_get_sc_object $P5063, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5062, $P5063
  vivi_20503624:
    find_dynamic_lex $P5064, "%*REG"
    unless_null $P5064, fallback3627
    nqp_get_sc_object $P5066, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5065, $P5066
    set pkg_viv_tmp_170, $P5065
    set fb_tmp_654, pkg_viv_tmp_170
    repr_defined $I5010, fb_tmp_654
    unless $I5010 goto if2052_else3628 
    set $P5067, fb_tmp_654["%REG"]
    set $P5069, $P5067
    goto if2052_end3629
  if2052_else3628:
    null $P5068
    set $P5069, $P5068
  if2052_end3629:
    unless_null $P5069, vivi_20533630
    new $P5070, 'Hash'
    set pkg_viv_tmp_170["%REG"], $P5070
    set $P5069, $P5070
  vivi_20533630:
    unless_null $P5069, vivi_20543631
    die "Contextual %*REG not found"
    box $P5071, "Contextual %*REG not found"
    set $P5069, $P5071
  vivi_20543631:
    set $P5064, $P5069
  fallback3627:
    set fb_tmp_653, $P5064
    repr_defined $I5009, fb_tmp_653
    unless $I5009 goto if2051_else3625 
    set $P5072, fb_tmp_653["eos"]
    set $P5074, $P5072
    goto if2051_end3626
  if2051_else3625:
    null $P5073
    set $P5074, $P5073
  if2051_end3626:
    unless_null $P5074, vivi_20553632
    nqp_get_sc_object $P5075, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5074, $P5075
  vivi_20553632:
    find_dynamic_lex $P5076, "%*REG"
    unless_null $P5076, fallback3635
    nqp_get_sc_object $P5078, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5077, $P5078
    set pkg_viv_tmp_171, $P5077
    set fb_tmp_656, pkg_viv_tmp_171
    repr_defined $I5012, fb_tmp_656
    unless $I5012 goto if2057_else3636 
    set $P5079, fb_tmp_656["%REG"]
    set $P5081, $P5079
    goto if2057_end3637
  if2057_else3636:
    null $P5080
    set $P5081, $P5080
  if2057_end3637:
    unless_null $P5081, vivi_20583638
    new $P5082, 'Hash'
    set pkg_viv_tmp_171["%REG"], $P5082
    set $P5081, $P5082
  vivi_20583638:
    unless_null $P5081, vivi_20593639
    die "Contextual %*REG not found"
    box $P5083, "Contextual %*REG not found"
    set $P5081, $P5083
  vivi_20593639:
    set $P5076, $P5081
  fallback3635:
    set fb_tmp_655, $P5076
    repr_defined $I5011, fb_tmp_655
    unless $I5011 goto if2056_else3633 
    set $P5084, fb_tmp_655["fail"]
    set $P5086, $P5084
    goto if2056_end3634
  if2056_else3633:
    null $P5085
    set $P5086, $P5085
  if2056_end3634:
    unless_null $P5086, vivi_20603640
    nqp_get_sc_object $P5087, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5086, $P5087
  vivi_20603640:
    $P101."push_pirop"("gt", $P5062, $P5074, $P5086)
.annotate 'line', 4043
    find_dynamic_lex $P5088, "%*REG"
    unless_null $P5088, fallback3643
    nqp_get_sc_object $P5090, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5089, $P5090
    set pkg_viv_tmp_172, $P5089
    set fb_tmp_658, pkg_viv_tmp_172
    repr_defined $I5014, fb_tmp_658
    unless $I5014 goto if2062_else3644 
    set $P5091, fb_tmp_658["%REG"]
    set $P5093, $P5091
    goto if2062_end3645
  if2062_else3644:
    null $P5092
    set $P5093, $P5092
  if2062_end3645:
    unless_null $P5093, vivi_20633646
    new $P5094, 'Hash'
    set pkg_viv_tmp_172["%REG"], $P5094
    set $P5093, $P5094
  vivi_20633646:
    unless_null $P5093, vivi_20643647
    die "Contextual %*REG not found"
    box $P5095, "Contextual %*REG not found"
    set $P5093, $P5095
  vivi_20643647:
    set $P5088, $P5093
  fallback3643:
    set fb_tmp_657, $P5088
    repr_defined $I5013, fb_tmp_657
    unless $I5013 goto if2061_else3641 
    set $P5096, fb_tmp_657["cur"]
    set $P5098, $P5096
    goto if2061_end3642
  if2061_else3641:
    null $P5097
    set $P5098, $P5097
  if2061_end3642:
    unless_null $P5098, vivi_20653648
    nqp_get_sc_object $P5099, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5098, $P5099
  vivi_20653648:
    find_dynamic_lex $P5100, "%*REG"
    unless_null $P5100, fallback3651
    nqp_get_sc_object $P5102, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5101, $P5102
    set pkg_viv_tmp_173, $P5101
    set fb_tmp_660, pkg_viv_tmp_173
    repr_defined $I5016, fb_tmp_660
    unless $I5016 goto if2067_else3652 
    set $P5103, fb_tmp_660["%REG"]
    set $P5105, $P5103
    goto if2067_end3653
  if2067_else3652:
    null $P5104
    set $P5105, $P5104
  if2067_end3653:
    unless_null $P5105, vivi_20683654
    new $P5106, 'Hash'
    set pkg_viv_tmp_173["%REG"], $P5106
    set $P5105, $P5106
  vivi_20683654:
    unless_null $P5105, vivi_20693655
    die "Contextual %*REG not found"
    box $P5107, "Contextual %*REG not found"
    set $P5105, $P5107
  vivi_20693655:
    set $P5100, $P5105
  fallback3651:
    set fb_tmp_659, $P5100
    repr_defined $I5015, fb_tmp_659
    unless $I5015 goto if2066_else3649 
    set $P5108, fb_tmp_659["curclass"]
    set $P5110, $P5108
    goto if2066_end3650
  if2066_else3649:
    null $P5109
    set $P5110, $P5109
  if2066_end3650:
    unless_null $P5110, vivi_20703656
    nqp_get_sc_object $P5111, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5110, $P5111
  vivi_20703656:
    find_dynamic_lex $P5112, "%*REG"
    unless_null $P5112, fallback3659
    nqp_get_sc_object $P5114, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5113, $P5114
    set pkg_viv_tmp_174, $P5113
    set fb_tmp_662, pkg_viv_tmp_174
    repr_defined $I5018, fb_tmp_662
    unless $I5018 goto if2072_else3660 
    set $P5115, fb_tmp_662["%REG"]
    set $P5117, $P5115
    goto if2072_end3661
  if2072_else3660:
    null $P5116
    set $P5117, $P5116
  if2072_end3661:
    unless_null $P5117, vivi_20733662
    new $P5118, 'Hash'
    set pkg_viv_tmp_174["%REG"], $P5118
    set $P5117, $P5118
  vivi_20733662:
    unless_null $P5117, vivi_20743663
    die "Contextual %*REG not found"
    box $P5119, "Contextual %*REG not found"
    set $P5117, $P5119
  vivi_20743663:
    set $P5112, $P5117
  fallback3659:
    set fb_tmp_661, $P5112
    repr_defined $I5017, fb_tmp_661
    unless $I5017 goto if2071_else3657 
    set $P5120, fb_tmp_661["pos"]
    set $P5122, $P5120
    goto if2071_end3658
  if2071_else3657:
    null $P5121
    set $P5122, $P5121
  if2071_end3658:
    unless_null $P5122, vivi_20753664
    nqp_get_sc_object $P5123, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5122, $P5123
  vivi_20753664:
    $P101."push_pirop"("repr_bind_attr_int", $P5098, $P5110, "\"$!from\"", $P5122)
.annotate 'line', 4044
    $P101."push"($P104)
.annotate 'line', 4045
    nqp_decontainerize $P5124, _lex_param_0
    find_dynamic_lex $P5125, "%*REG"
    unless_null $P5125, fallback3667
    nqp_get_sc_object $P5127, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5126, $P5127
    set pkg_viv_tmp_175, $P5126
    set fb_tmp_664, pkg_viv_tmp_175
    repr_defined $I5020, fb_tmp_664
    unless $I5020 goto if2077_else3668 
    set $P5128, fb_tmp_664["%REG"]
    set $P5130, $P5128
    goto if2077_end3669
  if2077_else3668:
    null $P5129
    set $P5130, $P5129
  if2077_end3669:
    unless_null $P5130, vivi_20783670
    new $P5131, 'Hash'
    set pkg_viv_tmp_175["%REG"], $P5131
    set $P5130, $P5131
  vivi_20783670:
    unless_null $P5130, vivi_20793671
    die "Contextual %*REG not found"
    box $P5132, "Contextual %*REG not found"
    set $P5130, $P5132
  vivi_20793671:
    set $P5125, $P5130
  fallback3667:
    set fb_tmp_663, $P5125
    repr_defined $I5019, fb_tmp_663
    unless $I5019 goto if2076_else3665 
    set $P5133, fb_tmp_663["pos"]
    set $P5135, $P5133
    goto if2076_end3666
  if2076_else3665:
    null $P5134
    set $P5135, $P5134
  if2076_end3666:
    unless_null $P5135, vivi_20803672
    nqp_get_sc_object $P5136, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5135, $P5136
  vivi_20803672:
    $P5124."regex_mark"($P101, $P103, $P5135, 0)
.annotate 'line', 4046
    $P101."push"($P105)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "subcapture" :subid("cuid_134_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 4050
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "$prefix", $P102 
    .lex "$donelabel", $P103 
    .lex "$faillabel", $P104 
    .lex "$name", $P105 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_665 
    .local pmc fb_tmp_666 
    .local pmc pkg_viv_tmp_176 
    .local pmc fb_tmp_667 
    .local pmc fb_tmp_668 
    .local pmc pkg_viv_tmp_177 
    .local pmc fb_tmp_669 
    .local pmc fb_tmp_670 
    .local pmc fb_tmp_671 
    .local pmc pkg_viv_tmp_178 
    .local pmc fb_tmp_672 
    .local pmc fb_tmp_673 
    .local pmc pkg_viv_tmp_179 
    .local pmc fb_tmp_674 
    .local pmc fb_tmp_675 
    .local pmc pkg_viv_tmp_180 
    .local pmc fb_tmp_676 
    .local pmc fb_tmp_677 
    .local pmc pkg_viv_tmp_181 
    .local pmc fb_tmp_678 
    .local pmc fb_tmp_679 
    .local pmc pkg_viv_tmp_182 
    .local pmc fb_tmp_680 
    .local pmc fb_tmp_681 
    .local pmc pkg_viv_tmp_183 
    .local pmc fb_tmp_682 
    .local pmc fb_tmp_683 
    .local pmc pkg_viv_tmp_184 
    .local pmc fb_tmp_684 
    .local pmc fb_tmp_685 
    .local pmc pkg_viv_tmp_185 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P105, $P5005
.annotate 'line', 4051
    nqp_decontainerize $P5006, _lex_param_0
    find_dynamic_lex $P5007, "%*REG"
    unless_null $P5007, fallback3675
    nqp_get_sc_object $P5009, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5008, $P5009
    set pkg_viv_tmp_176, $P5008
    set fb_tmp_666, pkg_viv_tmp_176
    repr_defined $I5002, fb_tmp_666
    unless $I5002 goto if2082_else3676 
    set $P5010, fb_tmp_666["%REG"]
    set $P5012, $P5010
    goto if2082_end3677
  if2082_else3676:
    null $P5011
    set $P5012, $P5011
  if2082_end3677:
    unless_null $P5012, vivi_20833678
    new $P5013, 'Hash'
    set pkg_viv_tmp_176["%REG"], $P5013
    set $P5012, $P5013
  vivi_20833678:
    unless_null $P5012, vivi_20843679
    die "Contextual %*REG not found"
    box $P5014, "Contextual %*REG not found"
    set $P5012, $P5014
  vivi_20843679:
    set $P5007, $P5012
  fallback3675:
    set fb_tmp_665, $P5007
    repr_defined $I5001, fb_tmp_665
    unless $I5001 goto if2081_else3673 
    set $P5015, fb_tmp_665["cur"]
    set $P5017, $P5015
    goto if2081_end3674
  if2081_else3673:
    null $P5016
    set $P5017, $P5016
  if2081_end3674:
    unless_null $P5017, vivi_20853680
    nqp_get_sc_object $P5018, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5017, $P5018
  vivi_20853680:
    $P5019 = $P5006."post_new"("Ops", $P5017 :named("result"))
    set $P101, $P5019
.annotate 'line', 4052
    nqp_decontainerize $P5020, _lex_param_0
    $P5021 = $P5020."unique"("rxcap")
    set $P102, $P5021
.annotate 'line', 4053
    nqp_decontainerize $P5022, _lex_param_0
    set $S5002, $P102
    concat $S5001, $S5002, "_done"
    $P5023 = $P5022."post_new"("Label", $S5001 :named("name"))
    set $P103, $P5023
.annotate 'line', 4054
    nqp_decontainerize $P5024, _lex_param_0
    set $S5004, $P102
    concat $S5003, $S5004, "_fail"
    $P5025 = $P5024."post_new"("Label", $S5003 :named("name"))
    set $P104, $P5025
.annotate 'line', 4055
    nqp_decontainerize $P5026, _lex_param_0
    $P5027 = _lex_param_1."name"()
    $P5028 = $P5026."escape"($P5027)
    set $P105, $P5028
.annotate 'line', 4056
    nqp_decontainerize $P5029, _lex_param_0
    find_dynamic_lex $P5030, "%*REG"
    unless_null $P5030, fallback3683
    nqp_get_sc_object $P5032, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5031, $P5032
    set pkg_viv_tmp_177, $P5031
    set fb_tmp_668, pkg_viv_tmp_177
    repr_defined $I5004, fb_tmp_668
    unless $I5004 goto if2087_else3684 
    set $P5033, fb_tmp_668["%REG"]
    set $P5035, $P5033
    goto if2087_end3685
  if2087_else3684:
    null $P5034
    set $P5035, $P5034
  if2087_end3685:
    unless_null $P5035, vivi_20883686
    new $P5036, 'Hash'
    set pkg_viv_tmp_177["%REG"], $P5036
    set $P5035, $P5036
  vivi_20883686:
    unless_null $P5035, vivi_20893687
    die "Contextual %*REG not found"
    box $P5037, "Contextual %*REG not found"
    set $P5035, $P5037
  vivi_20893687:
    set $P5030, $P5035
  fallback3683:
    set fb_tmp_667, $P5030
    repr_defined $I5003, fb_tmp_667
    unless $I5003 goto if2086_else3681 
    set $P5038, fb_tmp_667["pos"]
    set $P5040, $P5038
    goto if2086_end3682
  if2086_else3681:
    null $P5039
    set $P5040, $P5039
  if2086_end3682:
    unless_null $P5040, vivi_20903688
    nqp_get_sc_object $P5041, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5040, $P5041
  vivi_20903688:
    $P5029."regex_mark"($P101, $P104, $P5040, 0)
.annotate 'line', 4057
    nqp_decontainerize $P5042, _lex_param_0
    set fb_tmp_669, _lex_param_1
    repr_defined $I5005, fb_tmp_669
    unless $I5005 goto if2091_else3689 
    set $P5043, fb_tmp_669[0]
    set $P5045, $P5043
    goto if2091_end3690
  if2091_else3689:
    null $P5044
    set $P5045, $P5044
  if2091_end3690:
    unless_null $P5045, vivi_20923691
    nqp_get_sc_object $P5046, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5045, $P5046
  vivi_20923691:
    $P5047 = $P5042."regex_post"($P5045)
    $P101."push"($P5047)
.annotate 'line', 4058
    nqp_decontainerize $P5048, _lex_param_0
    $P5048."regex_peek"($P101, $P104, "$I11")
.annotate 'line', 4059
    find_dynamic_lex $P5049, "%*REG"
    unless_null $P5049, fallback3694
    nqp_get_sc_object $P5051, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5050, $P5051
    set pkg_viv_tmp_178, $P5050
    set fb_tmp_671, pkg_viv_tmp_178
    repr_defined $I5007, fb_tmp_671
    unless $I5007 goto if2094_else3695 
    set $P5052, fb_tmp_671["%REG"]
    set $P5054, $P5052
    goto if2094_end3696
  if2094_else3695:
    null $P5053
    set $P5054, $P5053
  if2094_end3696:
    unless_null $P5054, vivi_20953697
    new $P5055, 'Hash'
    set pkg_viv_tmp_178["%REG"], $P5055
    set $P5054, $P5055
  vivi_20953697:
    unless_null $P5054, vivi_20963698
    die "Contextual %*REG not found"
    box $P5056, "Contextual %*REG not found"
    set $P5054, $P5056
  vivi_20963698:
    set $P5049, $P5054
  fallback3694:
    set fb_tmp_670, $P5049
    repr_defined $I5006, fb_tmp_670
    unless $I5006 goto if2093_else3692 
    set $P5057, fb_tmp_670["cur"]
    set $P5059, $P5057
    goto if2093_end3693
  if2093_else3692:
    null $P5058
    set $P5059, $P5058
  if2093_end3693:
    unless_null $P5059, vivi_20973699
    nqp_get_sc_object $P5060, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5059, $P5060
  vivi_20973699:
    find_dynamic_lex $P5061, "%*REG"
    unless_null $P5061, fallback3702
    nqp_get_sc_object $P5063, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5062, $P5063
    set pkg_viv_tmp_179, $P5062
    set fb_tmp_673, pkg_viv_tmp_179
    repr_defined $I5009, fb_tmp_673
    unless $I5009 goto if2099_else3703 
    set $P5064, fb_tmp_673["%REG"]
    set $P5066, $P5064
    goto if2099_end3704
  if2099_else3703:
    null $P5065
    set $P5066, $P5065
  if2099_end3704:
    unless_null $P5066, vivi_21003705
    new $P5067, 'Hash'
    set pkg_viv_tmp_179["%REG"], $P5067
    set $P5066, $P5067
  vivi_21003705:
    unless_null $P5066, vivi_21013706
    die "Contextual %*REG not found"
    box $P5068, "Contextual %*REG not found"
    set $P5066, $P5068
  vivi_21013706:
    set $P5061, $P5066
  fallback3702:
    set fb_tmp_672, $P5061
    repr_defined $I5008, fb_tmp_672
    unless $I5008 goto if2098_else3700 
    set $P5069, fb_tmp_672["curclass"]
    set $P5071, $P5069
    goto if2098_end3701
  if2098_else3700:
    null $P5070
    set $P5071, $P5070
  if2098_end3701:
    unless_null $P5071, vivi_21023707
    nqp_get_sc_object $P5072, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5071, $P5072
  vivi_21023707:
    find_dynamic_lex $P5073, "%*REG"
    unless_null $P5073, fallback3710
    nqp_get_sc_object $P5075, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5074, $P5075
    set pkg_viv_tmp_180, $P5074
    set fb_tmp_675, pkg_viv_tmp_180
    repr_defined $I5011, fb_tmp_675
    unless $I5011 goto if2104_else3711 
    set $P5076, fb_tmp_675["%REG"]
    set $P5078, $P5076
    goto if2104_end3712
  if2104_else3711:
    null $P5077
    set $P5078, $P5077
  if2104_end3712:
    unless_null $P5078, vivi_21053713
    new $P5079, 'Hash'
    set pkg_viv_tmp_180["%REG"], $P5079
    set $P5078, $P5079
  vivi_21053713:
    unless_null $P5078, vivi_21063714
    die "Contextual %*REG not found"
    box $P5080, "Contextual %*REG not found"
    set $P5078, $P5080
  vivi_21063714:
    set $P5073, $P5078
  fallback3710:
    set fb_tmp_674, $P5073
    repr_defined $I5010, fb_tmp_674
    unless $I5010 goto if2103_else3708 
    set $P5081, fb_tmp_674["pos"]
    set $P5083, $P5081
    goto if2103_end3709
  if2103_else3708:
    null $P5082
    set $P5083, $P5082
  if2103_end3709:
    unless_null $P5083, vivi_21073715
    nqp_get_sc_object $P5084, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5083, $P5084
  vivi_21073715:
    $P101."push_pirop"("repr_bind_attr_int", $P5059, $P5071, "\"$!pos\"", $P5083)
.annotate 'line', 4060
    find_dynamic_lex $P5085, "%*REG"
    unless_null $P5085, fallback3718
    nqp_get_sc_object $P5087, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5086, $P5087
    set pkg_viv_tmp_181, $P5086
    set fb_tmp_677, pkg_viv_tmp_181
    repr_defined $I5013, fb_tmp_677
    unless $I5013 goto if2109_else3719 
    set $P5088, fb_tmp_677["%REG"]
    set $P5090, $P5088
    goto if2109_end3720
  if2109_else3719:
    null $P5089
    set $P5090, $P5089
  if2109_end3720:
    unless_null $P5090, vivi_21103721
    new $P5091, 'Hash'
    set pkg_viv_tmp_181["%REG"], $P5091
    set $P5090, $P5091
  vivi_21103721:
    unless_null $P5090, vivi_21113722
    die "Contextual %*REG not found"
    box $P5092, "Contextual %*REG not found"
    set $P5090, $P5092
  vivi_21113722:
    set $P5085, $P5090
  fallback3718:
    set fb_tmp_676, $P5085
    repr_defined $I5012, fb_tmp_676
    unless $I5012 goto if2108_else3716 
    set $P5093, fb_tmp_676["cur"]
    set $P5095, $P5093
    goto if2108_end3717
  if2108_else3716:
    null $P5094
    set $P5095, $P5094
  if2108_end3717:
    unless_null $P5095, vivi_21123723
    nqp_get_sc_object $P5096, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5095, $P5096
  vivi_21123723:
    $P101."push_pirop"("callmethod", "\"!cursor_start_subcapture\"", $P5095, "$I11", "$P11" :named("result"))
.annotate 'line', 4061
    find_dynamic_lex $P5097, "%*REG"
    unless_null $P5097, fallback3726
    nqp_get_sc_object $P5099, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5098, $P5099
    set pkg_viv_tmp_182, $P5098
    set fb_tmp_679, pkg_viv_tmp_182
    repr_defined $I5015, fb_tmp_679
    unless $I5015 goto if2114_else3727 
    set $P5100, fb_tmp_679["%REG"]
    set $P5102, $P5100
    goto if2114_end3728
  if2114_else3727:
    null $P5101
    set $P5102, $P5101
  if2114_end3728:
    unless_null $P5102, vivi_21153729
    new $P5103, 'Hash'
    set pkg_viv_tmp_182["%REG"], $P5103
    set $P5102, $P5103
  vivi_21153729:
    unless_null $P5102, vivi_21163730
    die "Contextual %*REG not found"
    box $P5104, "Contextual %*REG not found"
    set $P5102, $P5104
  vivi_21163730:
    set $P5097, $P5102
  fallback3726:
    set fb_tmp_678, $P5097
    repr_defined $I5014, fb_tmp_678
    unless $I5014 goto if2113_else3724 
    set $P5105, fb_tmp_678["pos"]
    set $P5107, $P5105
    goto if2113_end3725
  if2113_else3724:
    null $P5106
    set $P5107, $P5106
  if2113_end3725:
    unless_null $P5107, vivi_21173731
    nqp_get_sc_object $P5108, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5107, $P5108
  vivi_21173731:
    $P101."push_pirop"("callmethod", "\"!cursor_pass\"", "$P11", $P5107)
.annotate 'line', 4062
    find_dynamic_lex $P5109, "%*REG"
    unless_null $P5109, fallback3734
    nqp_get_sc_object $P5111, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5110, $P5111
    set pkg_viv_tmp_183, $P5110
    set fb_tmp_681, pkg_viv_tmp_183
    repr_defined $I5017, fb_tmp_681
    unless $I5017 goto if2119_else3735 
    set $P5112, fb_tmp_681["%REG"]
    set $P5114, $P5112
    goto if2119_end3736
  if2119_else3735:
    null $P5113
    set $P5114, $P5113
  if2119_end3736:
    unless_null $P5114, vivi_21203737
    new $P5115, 'Hash'
    set pkg_viv_tmp_183["%REG"], $P5115
    set $P5114, $P5115
  vivi_21203737:
    unless_null $P5114, vivi_21213738
    die "Contextual %*REG not found"
    box $P5116, "Contextual %*REG not found"
    set $P5114, $P5116
  vivi_21213738:
    set $P5109, $P5114
  fallback3734:
    set fb_tmp_680, $P5109
    repr_defined $I5016, fb_tmp_680
    unless $I5016 goto if2118_else3732 
    set $P5117, fb_tmp_680["cur"]
    set $P5119, $P5117
    goto if2118_end3733
  if2118_else3732:
    null $P5118
    set $P5119, $P5118
  if2118_end3733:
    unless_null $P5119, vivi_21223739
    nqp_get_sc_object $P5120, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5119, $P5120
  vivi_21223739:
    find_dynamic_lex $P5121, "%*REG"
    unless_null $P5121, fallback3742
    nqp_get_sc_object $P5123, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5122, $P5123
    set pkg_viv_tmp_184, $P5122
    set fb_tmp_683, pkg_viv_tmp_184
    repr_defined $I5019, fb_tmp_683
    unless $I5019 goto if2124_else3743 
    set $P5124, fb_tmp_683["%REG"]
    set $P5126, $P5124
    goto if2124_end3744
  if2124_else3743:
    null $P5125
    set $P5126, $P5125
  if2124_end3744:
    unless_null $P5126, vivi_21253745
    new $P5127, 'Hash'
    set pkg_viv_tmp_184["%REG"], $P5127
    set $P5126, $P5127
  vivi_21253745:
    unless_null $P5126, vivi_21263746
    die "Contextual %*REG not found"
    box $P5128, "Contextual %*REG not found"
    set $P5126, $P5128
  vivi_21263746:
    set $P5121, $P5126
  fallback3742:
    set fb_tmp_682, $P5121
    repr_defined $I5018, fb_tmp_682
    unless $I5018 goto if2123_else3740 
    set $P5129, fb_tmp_682["cstack"]
    set $P5131, $P5129
    goto if2123_end3741
  if2123_else3740:
    null $P5130
    set $P5131, $P5130
  if2123_end3741:
    unless_null $P5131, vivi_21273747
    nqp_get_sc_object $P5132, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5131, $P5132
  vivi_21273747:
    $P101."push_pirop"("callmethod", "\"!cursor_capture\"", $P5119, "$P11", $P105, $P5131 :named("result"))
.annotate 'line', 4064
    $P101."push_pirop"("goto", $P103)
.annotate 'line', 4065
    $P101."push"($P104)
.annotate 'line', 4066
    find_dynamic_lex $P5133, "%*REG"
    unless_null $P5133, fallback3750
    nqp_get_sc_object $P5135, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5134, $P5135
    set pkg_viv_tmp_185, $P5134
    set fb_tmp_685, pkg_viv_tmp_185
    repr_defined $I5021, fb_tmp_685
    unless $I5021 goto if2129_else3751 
    set $P5136, fb_tmp_685["%REG"]
    set $P5138, $P5136
    goto if2129_end3752
  if2129_else3751:
    null $P5137
    set $P5138, $P5137
  if2129_end3752:
    unless_null $P5138, vivi_21303753
    new $P5139, 'Hash'
    set pkg_viv_tmp_185["%REG"], $P5139
    set $P5138, $P5139
  vivi_21303753:
    unless_null $P5138, vivi_21313754
    die "Contextual %*REG not found"
    box $P5140, "Contextual %*REG not found"
    set $P5138, $P5140
  vivi_21313754:
    set $P5133, $P5138
  fallback3750:
    set fb_tmp_684, $P5133
    repr_defined $I5020, fb_tmp_684
    unless $I5020 goto if2128_else3748 
    set $P5141, fb_tmp_684["fail"]
    set $P5143, $P5141
    goto if2128_end3749
  if2128_else3748:
    null $P5142
    set $P5143, $P5142
  if2128_end3749:
    unless_null $P5143, vivi_21323755
    nqp_get_sc_object $P5144, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5143, $P5144
  vivi_21323755:
    $P101."push_pirop"("goto", $P5143)
.annotate 'line', 4067
    $P101."push"($P103)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "subrule" :subid("cuid_135_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 4071
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5181 = 'cuid_379_1366375329.52446' 
    capture_lex $P5181 
    .lex "$ops", $P101 
    .lex "$name", $P102 
    .lex "$subtype", $P103 
    .lex "$cpn", $P104 
    .lex "@pargs", $P105 
    .lex "@nargs", $P106 
    .lex "$subpost", $P107 
    .lex "$testop", $P108 
    .lex "$captured", $P109 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_686 
    .local pmc fb_tmp_687 
    .local pmc pkg_viv_tmp_186 
    .local pmc fb_tmp_688 
    .local pmc fb_tmp_689 
    .local pmc fb_tmp_690 
    .local pmc fb_tmp_691 
    .local pmc fb_tmp_692 
    .local pmc fb_tmp_693 
    .local pmc pkg_viv_tmp_187 
    .local pmc fb_tmp_694 
    .local pmc fb_tmp_695 
    .local pmc pkg_viv_tmp_188 
    .local pmc fb_tmp_696 
    .local pmc fb_tmp_697 
    .local pmc pkg_viv_tmp_189 
    .local pmc fb_tmp_698 
    .local pmc fb_tmp_699 
    .local pmc pkg_viv_tmp_190 
    .local pmc fb_tmp_700 
    .local pmc fb_tmp_701 
    .local pmc pkg_viv_tmp_191 
    .local pmc fb_tmp_702 
    .local pmc fb_tmp_703 
    .local pmc pkg_viv_tmp_192 
    .local pmc fb_tmp_728 
    .local pmc fb_tmp_729 
    .local pmc pkg_viv_tmp_205 
    .local pmc fb_tmp_730 
    .local pmc fb_tmp_731 
    .local pmc pkg_viv_tmp_206 
    .local pmc fb_tmp_732 
    .local pmc fb_tmp_733 
    .local pmc pkg_viv_tmp_207 
    .local pmc fb_tmp_734 
    .local pmc fb_tmp_735 
    .local pmc pkg_viv_tmp_208 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P104, $P5004
    new $P5005, 'QRPA'
    set $P105, $P5005
    new $P5006, 'QRPA'
    set $P106, $P5006
    nqp_get_sc_object $P5007, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P107, $P5007
    nqp_get_sc_object $P5008, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P108, $P5008
    nqp_get_sc_object $P5009, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P109, $P5009
.annotate 'line', 4072
    nqp_decontainerize $P5010, _lex_param_0
    find_dynamic_lex $P5011, "%*REG"
    unless_null $P5011, fallback3758
    nqp_get_sc_object $P5013, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5012, $P5013
    set pkg_viv_tmp_186, $P5012
    set fb_tmp_687, pkg_viv_tmp_186
    repr_defined $I5002, fb_tmp_687
    unless $I5002 goto if2134_else3759 
    set $P5014, fb_tmp_687["%REG"]
    set $P5016, $P5014
    goto if2134_end3760
  if2134_else3759:
    null $P5015
    set $P5016, $P5015
  if2134_end3760:
    unless_null $P5016, vivi_21353761
    new $P5017, 'Hash'
    set pkg_viv_tmp_186["%REG"], $P5017
    set $P5016, $P5017
  vivi_21353761:
    unless_null $P5016, vivi_21363762
    die "Contextual %*REG not found"
    box $P5018, "Contextual %*REG not found"
    set $P5016, $P5018
  vivi_21363762:
    set $P5011, $P5016
  fallback3758:
    set fb_tmp_686, $P5011
    repr_defined $I5001, fb_tmp_686
    unless $I5001 goto if2133_else3756 
    set $P5019, fb_tmp_686["cur"]
    set $P5021, $P5019
    goto if2133_end3757
  if2133_else3756:
    null $P5020
    set $P5021, $P5020
  if2133_end3757:
    unless_null $P5021, vivi_21373763
    nqp_get_sc_object $P5022, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5021, $P5022
  vivi_21373763:
    $P5023 = $P5010."post_new"("Ops", $P5021 :named("result"))
    set $P101, $P5023
.annotate 'line', 4073
    $P5024 = _lex_param_1."name"()
    defined $I5003, $P5024
    unless $I5003 goto if2138_else3764 
    nqp_decontainerize $P5025, _lex_param_0
    $P5026 = _lex_param_1."name"()
    $P5027 = $P5025."escape"($P5026)
    set $P5028, $P5027
    goto if2138_end3765
  if2138_else3764:
    box $P5029, ""
    set $P5028, $P5029
  if2138_end3765:
    set $P102, $P5028
.annotate 'line', 4074
    $P5030 = _lex_param_1."subtype"()
    set $P103, $P5030
.annotate 'line', 4075
    nqp_decontainerize $P5031, _lex_param_0
    set fb_tmp_688, _lex_param_1
    repr_defined $I5004, fb_tmp_688
    unless $I5004 goto if2139_else3766 
    set $P5032, fb_tmp_688[0]
    set $P5034, $P5032
    goto if2139_end3767
  if2139_else3766:
    null $P5033
    set $P5034, $P5033
  if2139_end3767:
    unless_null $P5034, vivi_21403768
    nqp_get_sc_object $P5035, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5034, $P5035
  vivi_21403768:
    $P5036 = $P5031."children"($P5034)
    set $P104, $P5036
    set fb_tmp_689, $P104
    repr_defined $I5006, fb_tmp_689
    unless $I5006 goto if2141_else3770 
    set $P5038, fb_tmp_689[1]
    set $P5040, $P5038
    goto if2141_end3771
  if2141_else3770:
    null $P5039
    set $P5040, $P5039
  if2141_end3771:
    unless_null $P5040, vivi_21423772
    nqp_get_sc_object $P5041, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5040, $P5041
  vivi_21423772:
    set $P5037, $P5040
    defined $I5005, $P5037
    if $I5005, defor3769
    new $P5042, 'QRPA'
    set $P5037, $P5042
  defor3769:
    set $P105, $P5037
    set fb_tmp_690, $P104
    repr_defined $I5008, fb_tmp_690
    unless $I5008 goto if2143_else3774 
    set $P5044, fb_tmp_690[2]
    set $P5046, $P5044
    goto if2143_end3775
  if2143_else3774:
    null $P5045
    set $P5046, $P5045
  if2143_end3775:
    unless_null $P5046, vivi_21443776
    nqp_get_sc_object $P5047, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5046, $P5047
  vivi_21443776:
    set $P5043, $P5046
    defined $I5007, $P5043
    if $I5007, defor3773
    new $P5048, 'QRPA'
    set $P5043, $P5048
  defor3773:
    set $P106, $P5043
    shift $P5049, $P105
    set $P107, $P5049
.annotate 'line', 4079
    $P5050 = _lex_param_1."negate"()
    unless $P5050 goto if2145_else3777 
    set $S5001, "ge"
    goto if2145_end3778
  if2145_else3777:
    set $S5001, "lt"
  if2145_end3778:
    box $P5051, $S5001
    set $P108, $P5051
    box $P5052, 0
    set $P109, $P5052
.annotate 'line', 4081
    set fb_tmp_691, $P104
    repr_defined $I5009, fb_tmp_691
    unless $I5009 goto if2146_else3779 
    set $P5053, fb_tmp_691[0]
    set $P5055, $P5053
    goto if2146_end3780
  if2146_else3779:
    null $P5054
    set $P5055, $P5054
  if2146_end3780:
    unless_null $P5055, vivi_21473781
    nqp_get_sc_object $P5056, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5055, $P5056
  vivi_21473781:
    $P101."push"($P5055)
.annotate 'line', 4082
    find_dynamic_lex $P5057, "%*REG"
    unless_null $P5057, fallback3784
    nqp_get_sc_object $P5059, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5058, $P5059
    set pkg_viv_tmp_187, $P5058
    set fb_tmp_693, pkg_viv_tmp_187
    repr_defined $I5011, fb_tmp_693
    unless $I5011 goto if2149_else3785 
    set $P5060, fb_tmp_693["%REG"]
    set $P5062, $P5060
    goto if2149_end3786
  if2149_else3785:
    null $P5061
    set $P5062, $P5061
  if2149_end3786:
    unless_null $P5062, vivi_21503787
    new $P5063, 'Hash'
    set pkg_viv_tmp_187["%REG"], $P5063
    set $P5062, $P5063
  vivi_21503787:
    unless_null $P5062, vivi_21513788
    die "Contextual %*REG not found"
    box $P5064, "Contextual %*REG not found"
    set $P5062, $P5064
  vivi_21513788:
    set $P5057, $P5062
  fallback3784:
    set fb_tmp_692, $P5057
    repr_defined $I5010, fb_tmp_692
    unless $I5010 goto if2148_else3782 
    set $P5065, fb_tmp_692["cur"]
    set $P5067, $P5065
    goto if2148_end3783
  if2148_else3782:
    null $P5066
    set $P5067, $P5066
  if2148_end3783:
    unless_null $P5067, vivi_21523789
    nqp_get_sc_object $P5068, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5067, $P5068
  vivi_21523789:
    find_dynamic_lex $P5069, "%*REG"
    unless_null $P5069, fallback3792
    nqp_get_sc_object $P5071, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5070, $P5071
    set pkg_viv_tmp_188, $P5070
    set fb_tmp_695, pkg_viv_tmp_188
    repr_defined $I5013, fb_tmp_695
    unless $I5013 goto if2154_else3793 
    set $P5072, fb_tmp_695["%REG"]
    set $P5074, $P5072
    goto if2154_end3794
  if2154_else3793:
    null $P5073
    set $P5074, $P5073
  if2154_end3794:
    unless_null $P5074, vivi_21553795
    new $P5075, 'Hash'
    set pkg_viv_tmp_188["%REG"], $P5075
    set $P5074, $P5075
  vivi_21553795:
    unless_null $P5074, vivi_21563796
    die "Contextual %*REG not found"
    box $P5076, "Contextual %*REG not found"
    set $P5074, $P5076
  vivi_21563796:
    set $P5069, $P5074
  fallback3792:
    set fb_tmp_694, $P5069
    repr_defined $I5012, fb_tmp_694
    unless $I5012 goto if2153_else3790 
    set $P5077, fb_tmp_694["curclass"]
    set $P5079, $P5077
    goto if2153_end3791
  if2153_else3790:
    null $P5078
    set $P5079, $P5078
  if2153_end3791:
    unless_null $P5079, vivi_21573797
    nqp_get_sc_object $P5080, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5079, $P5080
  vivi_21573797:
    find_dynamic_lex $P5081, "%*REG"
    unless_null $P5081, fallback3800
    nqp_get_sc_object $P5083, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5082, $P5083
    set pkg_viv_tmp_189, $P5082
    set fb_tmp_697, pkg_viv_tmp_189
    repr_defined $I5015, fb_tmp_697
    unless $I5015 goto if2159_else3801 
    set $P5084, fb_tmp_697["%REG"]
    set $P5086, $P5084
    goto if2159_end3802
  if2159_else3801:
    null $P5085
    set $P5086, $P5085
  if2159_end3802:
    unless_null $P5086, vivi_21603803
    new $P5087, 'Hash'
    set pkg_viv_tmp_189["%REG"], $P5087
    set $P5086, $P5087
  vivi_21603803:
    unless_null $P5086, vivi_21613804
    die "Contextual %*REG not found"
    box $P5088, "Contextual %*REG not found"
    set $P5086, $P5088
  vivi_21613804:
    set $P5081, $P5086
  fallback3800:
    set fb_tmp_696, $P5081
    repr_defined $I5014, fb_tmp_696
    unless $I5014 goto if2158_else3798 
    set $P5089, fb_tmp_696["pos"]
    set $P5091, $P5089
    goto if2158_end3799
  if2158_else3798:
    null $P5090
    set $P5091, $P5090
  if2158_end3799:
    unless_null $P5091, vivi_21623805
    nqp_get_sc_object $P5092, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5091, $P5092
  vivi_21623805:
    $P101."push_pirop"("repr_bind_attr_int", $P5067, $P5079, "\"$!pos\"", $P5091)
.annotate 'line', 4083
    find_dynamic_lex $P5093, "%*REG"
    unless_null $P5093, fallback3808
    nqp_get_sc_object $P5095, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5094, $P5095
    set pkg_viv_tmp_190, $P5094
    set fb_tmp_699, pkg_viv_tmp_190
    repr_defined $I5017, fb_tmp_699
    unless $I5017 goto if2164_else3809 
    set $P5096, fb_tmp_699["%REG"]
    set $P5098, $P5096
    goto if2164_end3810
  if2164_else3809:
    null $P5097
    set $P5098, $P5097
  if2164_end3810:
    unless_null $P5098, vivi_21653811
    new $P5099, 'Hash'
    set pkg_viv_tmp_190["%REG"], $P5099
    set $P5098, $P5099
  vivi_21653811:
    unless_null $P5098, vivi_21663812
    die "Contextual %*REG not found"
    box $P5100, "Contextual %*REG not found"
    set $P5098, $P5100
  vivi_21663812:
    set $P5093, $P5098
  fallback3808:
    set fb_tmp_698, $P5093
    repr_defined $I5016, fb_tmp_698
    unless $I5016 goto if2163_else3806 
    set $P5101, fb_tmp_698["cur"]
    set $P5103, $P5101
    goto if2163_end3807
  if2163_else3806:
    null $P5102
    set $P5103, $P5102
  if2163_end3807:
    unless_null $P5103, vivi_21673813
    nqp_get_sc_object $P5104, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5103, $P5104
  vivi_21673813:
    $P101."push_pirop"("callmethod", $P107, $P5103, $P105 :flat, $P106 :flat, "$P11" :named("result"))
.annotate 'line', 4084
    find_dynamic_lex $P5105, "%*REG"
    unless_null $P5105, fallback3816
    nqp_get_sc_object $P5107, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5106, $P5107
    set pkg_viv_tmp_191, $P5106
    set fb_tmp_701, pkg_viv_tmp_191
    repr_defined $I5019, fb_tmp_701
    unless $I5019 goto if2169_else3817 
    set $P5108, fb_tmp_701["%REG"]
    set $P5110, $P5108
    goto if2169_end3818
  if2169_else3817:
    null $P5109
    set $P5110, $P5109
  if2169_end3818:
    unless_null $P5110, vivi_21703819
    new $P5111, 'Hash'
    set pkg_viv_tmp_191["%REG"], $P5111
    set $P5110, $P5111
  vivi_21703819:
    unless_null $P5110, vivi_21713820
    die "Contextual %*REG not found"
    box $P5112, "Contextual %*REG not found"
    set $P5110, $P5112
  vivi_21713820:
    set $P5105, $P5110
  fallback3816:
    set fb_tmp_700, $P5105
    repr_defined $I5018, fb_tmp_700
    unless $I5018 goto if2168_else3814 
    set $P5113, fb_tmp_700["curclass"]
    set $P5115, $P5113
    goto if2168_end3815
  if2168_else3814:
    null $P5114
    set $P5115, $P5114
  if2168_end3815:
    unless_null $P5115, vivi_21723821
    nqp_get_sc_object $P5116, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5115, $P5116
  vivi_21723821:
    $P101."push_pirop"("repr_get_attr_int", "$I11", "$P11", $P5115, "\"$!pos\"")
.annotate 'line', 4085
    find_dynamic_lex $P5117, "%*REG"
    unless_null $P5117, fallback3824
    nqp_get_sc_object $P5119, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5118, $P5119
    set pkg_viv_tmp_192, $P5118
    set fb_tmp_703, pkg_viv_tmp_192
    repr_defined $I5021, fb_tmp_703
    unless $I5021 goto if2174_else3825 
    set $P5120, fb_tmp_703["%REG"]
    set $P5122, $P5120
    goto if2174_end3826
  if2174_else3825:
    null $P5121
    set $P5122, $P5121
  if2174_end3826:
    unless_null $P5122, vivi_21753827
    new $P5123, 'Hash'
    set pkg_viv_tmp_192["%REG"], $P5123
    set $P5122, $P5123
  vivi_21753827:
    unless_null $P5122, vivi_21763828
    die "Contextual %*REG not found"
    box $P5124, "Contextual %*REG not found"
    set $P5122, $P5124
  vivi_21763828:
    set $P5117, $P5122
  fallback3824:
    set fb_tmp_702, $P5117
    repr_defined $I5020, fb_tmp_702
    unless $I5020 goto if2173_else3822 
    set $P5125, fb_tmp_702["fail"]
    set $P5127, $P5125
    goto if2173_end3823
  if2173_else3822:
    null $P5126
    set $P5127, $P5126
  if2173_end3823:
    unless_null $P5127, vivi_21773829
    nqp_get_sc_object $P5128, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5127, $P5128
  vivi_21773829:
    $P101."push_pirop"($P108, "$I11", "0", $P5127)
    set $S5002, $P103
    isne $I5022, $S5002, "zerowidth"
    unless $I5022 goto if2178_end3831 
    .const 'Sub' $P5129 = 'cuid_379_1366375329.52446' 
    capture_lex $P5129
    $P5130 = $P5129()
  if2178_end3831:
    isfalse $I5023, $P109
    set $I5025, $I5023
    unless $I5023 goto if2243_end3937 
    set $S5003, $P103
    iseq $I5024, $S5003, "capture"
    set $I5025, $I5024
  if2243_end3937:
    unless $I5025 goto if2242_end3935 
.annotate 'line', 4120
    find_dynamic_lex $P5131, "%*REG"
    unless_null $P5131, fallback3940
    nqp_get_sc_object $P5133, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5132, $P5133
    set pkg_viv_tmp_205, $P5132
    set fb_tmp_729, pkg_viv_tmp_205
    repr_defined $I5027, fb_tmp_729
    unless $I5027 goto if2245_else3941 
    set $P5134, fb_tmp_729["%REG"]
    set $P5136, $P5134
    goto if2245_end3942
  if2245_else3941:
    null $P5135
    set $P5136, $P5135
  if2245_end3942:
    unless_null $P5136, vivi_22463943
    new $P5137, 'Hash'
    set pkg_viv_tmp_205["%REG"], $P5137
    set $P5136, $P5137
  vivi_22463943:
    unless_null $P5136, vivi_22473944
    die "Contextual %*REG not found"
    box $P5138, "Contextual %*REG not found"
    set $P5136, $P5138
  vivi_22473944:
    set $P5131, $P5136
  fallback3940:
    set fb_tmp_728, $P5131
    repr_defined $I5026, fb_tmp_728
    unless $I5026 goto if2244_else3938 
    set $P5139, fb_tmp_728["cur"]
    set $P5141, $P5139
    goto if2244_end3939
  if2244_else3938:
    null $P5140
    set $P5141, $P5140
  if2244_end3939:
    unless_null $P5141, vivi_22483945
    nqp_get_sc_object $P5142, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5141, $P5142
  vivi_22483945:
    find_dynamic_lex $P5143, "%*REG"
    unless_null $P5143, fallback3948
    nqp_get_sc_object $P5145, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5144, $P5145
    set pkg_viv_tmp_206, $P5144
    set fb_tmp_731, pkg_viv_tmp_206
    repr_defined $I5029, fb_tmp_731
    unless $I5029 goto if2250_else3949 
    set $P5146, fb_tmp_731["%REG"]
    set $P5148, $P5146
    goto if2250_end3950
  if2250_else3949:
    null $P5147
    set $P5148, $P5147
  if2250_end3950:
    unless_null $P5148, vivi_22513951
    new $P5149, 'Hash'
    set pkg_viv_tmp_206["%REG"], $P5149
    set $P5148, $P5149
  vivi_22513951:
    unless_null $P5148, vivi_22523952
    die "Contextual %*REG not found"
    box $P5150, "Contextual %*REG not found"
    set $P5148, $P5150
  vivi_22523952:
    set $P5143, $P5148
  fallback3948:
    set fb_tmp_730, $P5143
    repr_defined $I5028, fb_tmp_730
    unless $I5028 goto if2249_else3946 
    set $P5151, fb_tmp_730["cstack"]
    set $P5153, $P5151
    goto if2249_end3947
  if2249_else3946:
    null $P5152
    set $P5153, $P5152
  if2249_end3947:
    unless_null $P5153, vivi_22533953
    nqp_get_sc_object $P5154, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5153, $P5154
  vivi_22533953:
    $P5155 = $P101."push_pirop"("callmethod", "\"!cursor_capture\"", $P5141, "$P11", $P102, $P5153 :named("result"))
  if2242_end3935:
    set $S5004, $P103
    iseq $I5030, $S5004, "zerowidth"
    if $I5030 goto unless2254_end3955 
.annotate 'line', 4123
    find_dynamic_lex $P5156, "%*REG"
    unless_null $P5156, fallback3958
    nqp_get_sc_object $P5158, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5157, $P5158
    set pkg_viv_tmp_207, $P5157
    set fb_tmp_733, pkg_viv_tmp_207
    repr_defined $I5032, fb_tmp_733
    unless $I5032 goto if2256_else3959 
    set $P5159, fb_tmp_733["%REG"]
    set $P5161, $P5159
    goto if2256_end3960
  if2256_else3959:
    null $P5160
    set $P5161, $P5160
  if2256_end3960:
    unless_null $P5161, vivi_22573961
    new $P5162, 'Hash'
    set pkg_viv_tmp_207["%REG"], $P5162
    set $P5161, $P5162
  vivi_22573961:
    unless_null $P5161, vivi_22583962
    die "Contextual %*REG not found"
    box $P5163, "Contextual %*REG not found"
    set $P5161, $P5163
  vivi_22583962:
    set $P5156, $P5161
  fallback3958:
    set fb_tmp_732, $P5156
    repr_defined $I5031, fb_tmp_732
    unless $I5031 goto if2255_else3956 
    set $P5164, fb_tmp_732["pos"]
    set $P5166, $P5164
    goto if2255_end3957
  if2255_else3956:
    null $P5165
    set $P5166, $P5165
  if2255_end3957:
    unless_null $P5166, vivi_22593963
    nqp_get_sc_object $P5167, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5166, $P5167
  vivi_22593963:
    find_dynamic_lex $P5168, "%*REG"
    unless_null $P5168, fallback3966
    nqp_get_sc_object $P5170, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5169, $P5170
    set pkg_viv_tmp_208, $P5169
    set fb_tmp_735, pkg_viv_tmp_208
    repr_defined $I5034, fb_tmp_735
    unless $I5034 goto if2261_else3967 
    set $P5171, fb_tmp_735["%REG"]
    set $P5173, $P5171
    goto if2261_end3968
  if2261_else3967:
    null $P5172
    set $P5173, $P5172
  if2261_end3968:
    unless_null $P5173, vivi_22623969
    new $P5174, 'Hash'
    set pkg_viv_tmp_208["%REG"], $P5174
    set $P5173, $P5174
  vivi_22623969:
    unless_null $P5173, vivi_22633970
    die "Contextual %*REG not found"
    box $P5175, "Contextual %*REG not found"
    set $P5173, $P5175
  vivi_22633970:
    set $P5168, $P5173
  fallback3966:
    set fb_tmp_734, $P5168
    repr_defined $I5033, fb_tmp_734
    unless $I5033 goto if2260_else3964 
    set $P5176, fb_tmp_734["curclass"]
    set $P5178, $P5176
    goto if2260_end3965
  if2260_else3964:
    null $P5177
    set $P5178, $P5177
  if2260_end3965:
    unless_null $P5178, vivi_22643971
    nqp_get_sc_object $P5179, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5178, $P5179
  vivi_22643971:
    $P5180 = $P101."push_pirop"("repr_get_attr_int", $P5166, "$P11", $P5178, "\"$!pos\"")
  unless2254_end3955:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_379_1366375329.52446") :anon :lex :outer("cuid_135_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 4086
    .const 'Sub' $P5022 = 'cuid_378_1366375329.52446' 
    capture_lex $P5022 
    .lex "$rxname", $P101 
    .lex "$passlabel", $P102 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
.annotate 'line', 4087
    find_lex $P5004, "self"
    nqp_decontainerize $P5003, $P5004
    $P5005 = $P5003."unique"("rxsubrule")
    set $P101, $P5005
.annotate 'line', 4088
    find_lex $P5007, "self"
    nqp_decontainerize $P5006, $P5007
    set $S5002, $P101
    concat $S5001, $S5002, "_pass"
    $P5008 = $P5006."post_new"("Label", $S5001 :named("name"))
    set $P102, $P5008
.annotate 'line', 4089
    find_lex $P5009, "$node"
    $P5010 = $P5009."backtrack"()
    set $S5003, $P5010
    iseq $I5001, $S5003, "r"
    unless $I5001 goto if2179_else3832 
    find_lex $P5011, "$subtype"
    set $S5004, $P5011
    iseq $I5002, $S5004, "method"
    box $P5018, $I5002
    set $P5017, $P5018
    if $I5002 goto unless2180_end3835 
.annotate 'line', 4090
.annotate 'line', 4091
    find_lex $P5013, "self"
    nqp_decontainerize $P5012, $P5013
    find_lex $P5014, "$ops"
    $P5012."regex_mark"($P5014, $P102, -1, 0)
.annotate 'line', 4092
    find_lex $P5015, "$ops"
    $P5016 = $P5015."push"($P102)
    set $P5017, $P5016
  unless2180_end3835:
    set $P5021, $P5017
    goto if2179_end3833
  if2179_else3832:
    .const 'Sub' $P5019 = 'cuid_378_1366375329.52446' 
    capture_lex $P5019
    $P5020 = $P5019()
    set $P5021, $P5020
  if2179_end3833:
    .return ($P5021) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_378_1366375329.52446") :anon :lex :outer("cuid_379_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 4095
    .lex "$backlabel", $P101 
    .local pmc fb_tmp_704 
    .local pmc fb_tmp_705 
    .local pmc pkg_viv_tmp_193 
    .local pmc fb_tmp_706 
    .local pmc fb_tmp_707 
    .local pmc pkg_viv_tmp_194 
    .local pmc fb_tmp_708 
    .local pmc fb_tmp_709 
    .local pmc pkg_viv_tmp_195 
    .local pmc fb_tmp_710 
    .local pmc fb_tmp_711 
    .local pmc pkg_viv_tmp_196 
    .local pmc fb_tmp_712 
    .local pmc fb_tmp_713 
    .local pmc pkg_viv_tmp_197 
    .local pmc fb_tmp_714 
    .local pmc fb_tmp_715 
    .local pmc pkg_viv_tmp_198 
    .local pmc fb_tmp_716 
    .local pmc fb_tmp_717 
    .local pmc pkg_viv_tmp_199 
    .local pmc fb_tmp_718 
    .local pmc fb_tmp_719 
    .local pmc pkg_viv_tmp_200 
    .local pmc fb_tmp_720 
    .local pmc fb_tmp_721 
    .local pmc pkg_viv_tmp_201 
    .local pmc fb_tmp_722 
    .local pmc fb_tmp_723 
    .local pmc pkg_viv_tmp_202 
    .local pmc fb_tmp_724 
    .local pmc fb_tmp_725 
    .local pmc pkg_viv_tmp_203 
    .local pmc fb_tmp_726 
    .local pmc fb_tmp_727 
    .local pmc pkg_viv_tmp_204 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
.annotate 'line', 4096
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    find_lex $P5004, "$rxname"
    set $S5002, $P5004
    concat $S5001, $S5002, "_back"
    $P5005 = $P5002."post_new"("Label", $S5001 :named("name"))
    set $P101, $P5005
.annotate 'line', 4097
    find_lex $P5006, "$ops"
    find_lex $P5007, "$passlabel"
    $P5006."push_pirop"("goto", $P5007)
.annotate 'line', 4098
    find_lex $P5008, "$ops"
    $P5008."push"($P101)
.annotate 'line', 4099
    find_lex $P5009, "$ops"
    $P5009."push_pirop"("callmethod", "\"!cursor_next\"", "$P11", "$P11" :named("result"))
.annotate 'line', 4100
    find_lex $P5010, "$ops"
    find_dynamic_lex $P5011, "%*REG"
    unless_null $P5011, fallback3838
    nqp_get_sc_object $P5013, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5012, $P5013
    set pkg_viv_tmp_193, $P5012
    set fb_tmp_705, pkg_viv_tmp_193
    repr_defined $I5002, fb_tmp_705
    unless $I5002 goto if2182_else3839 
    set $P5014, fb_tmp_705["%REG"]
    set $P5016, $P5014
    goto if2182_end3840
  if2182_else3839:
    null $P5015
    set $P5016, $P5015
  if2182_end3840:
    unless_null $P5016, vivi_21833841
    new $P5017, 'Hash'
    set pkg_viv_tmp_193["%REG"], $P5017
    set $P5016, $P5017
  vivi_21833841:
    unless_null $P5016, vivi_21843842
    die "Contextual %*REG not found"
    box $P5018, "Contextual %*REG not found"
    set $P5016, $P5018
  vivi_21843842:
    set $P5011, $P5016
  fallback3838:
    set fb_tmp_704, $P5011
    repr_defined $I5001, fb_tmp_704
    unless $I5001 goto if2181_else3836 
    set $P5019, fb_tmp_704["curclass"]
    set $P5021, $P5019
    goto if2181_end3837
  if2181_else3836:
    null $P5020
    set $P5021, $P5020
  if2181_end3837:
    unless_null $P5021, vivi_21853843
    nqp_get_sc_object $P5022, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5021, $P5022
  vivi_21853843:
    $P5010."push_pirop"("repr_get_attr_int", "$I11", "$P11", $P5021, "\"$!pos\"")
.annotate 'line', 4101
    find_lex $P5023, "$ops"
    find_lex $P5024, "$testop"
    find_dynamic_lex $P5025, "%*REG"
    unless_null $P5025, fallback3846
    nqp_get_sc_object $P5027, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5026, $P5027
    set pkg_viv_tmp_194, $P5026
    set fb_tmp_707, pkg_viv_tmp_194
    repr_defined $I5004, fb_tmp_707
    unless $I5004 goto if2187_else3847 
    set $P5028, fb_tmp_707["%REG"]
    set $P5030, $P5028
    goto if2187_end3848
  if2187_else3847:
    null $P5029
    set $P5030, $P5029
  if2187_end3848:
    unless_null $P5030, vivi_21883849
    new $P5031, 'Hash'
    set pkg_viv_tmp_194["%REG"], $P5031
    set $P5030, $P5031
  vivi_21883849:
    unless_null $P5030, vivi_21893850
    die "Contextual %*REG not found"
    box $P5032, "Contextual %*REG not found"
    set $P5030, $P5032
  vivi_21893850:
    set $P5025, $P5030
  fallback3846:
    set fb_tmp_706, $P5025
    repr_defined $I5003, fb_tmp_706
    unless $I5003 goto if2186_else3844 
    set $P5033, fb_tmp_706["fail"]
    set $P5035, $P5033
    goto if2186_end3845
  if2186_else3844:
    null $P5034
    set $P5035, $P5034
  if2186_end3845:
    unless_null $P5035, vivi_21903851
    nqp_get_sc_object $P5036, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5035, $P5036
  vivi_21903851:
    $P5023."push_pirop"($P5024, "$I11", "0", $P5035)
.annotate 'line', 4102
    find_lex $P5037, "$ops"
    find_lex $P5038, "$passlabel"
    $P5037."push"($P5038)
    find_lex $P5039, "$subtype"
    set $S5003, $P5039
    iseq $I5005, $S5003, "capture"
    unless $I5005 goto if2191_else3852 
.annotate 'line', 4103
.annotate 'line', 4104
    find_lex $P5040, "$ops"
    find_dynamic_lex $P5041, "%*REG"
    unless_null $P5041, fallback3856
    nqp_get_sc_object $P5043, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5042, $P5043
    set pkg_viv_tmp_195, $P5042
    set fb_tmp_709, pkg_viv_tmp_195
    repr_defined $I5007, fb_tmp_709
    unless $I5007 goto if2193_else3857 
    set $P5044, fb_tmp_709["%REG"]
    set $P5046, $P5044
    goto if2193_end3858
  if2193_else3857:
    null $P5045
    set $P5046, $P5045
  if2193_end3858:
    unless_null $P5046, vivi_21943859
    new $P5047, 'Hash'
    set pkg_viv_tmp_195["%REG"], $P5047
    set $P5046, $P5047
  vivi_21943859:
    unless_null $P5046, vivi_21953860
    die "Contextual %*REG not found"
    box $P5048, "Contextual %*REG not found"
    set $P5046, $P5048
  vivi_21953860:
    set $P5041, $P5046
  fallback3856:
    set fb_tmp_708, $P5041
    repr_defined $I5006, fb_tmp_708
    unless $I5006 goto if2192_else3854 
    set $P5049, fb_tmp_708["cur"]
    set $P5051, $P5049
    goto if2192_end3855
  if2192_else3854:
    null $P5050
    set $P5051, $P5050
  if2192_end3855:
    unless_null $P5051, vivi_21963861
    nqp_get_sc_object $P5052, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5051, $P5052
  vivi_21963861:
    find_lex $P5053, "$name"
    find_dynamic_lex $P5054, "%*REG"
    unless_null $P5054, fallback3864
    nqp_get_sc_object $P5056, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5055, $P5056
    set pkg_viv_tmp_196, $P5055
    set fb_tmp_711, pkg_viv_tmp_196
    repr_defined $I5009, fb_tmp_711
    unless $I5009 goto if2198_else3865 
    set $P5057, fb_tmp_711["%REG"]
    set $P5059, $P5057
    goto if2198_end3866
  if2198_else3865:
    null $P5058
    set $P5059, $P5058
  if2198_end3866:
    unless_null $P5059, vivi_21993867
    new $P5060, 'Hash'
    set pkg_viv_tmp_196["%REG"], $P5060
    set $P5059, $P5060
  vivi_21993867:
    unless_null $P5059, vivi_22003868
    die "Contextual %*REG not found"
    box $P5061, "Contextual %*REG not found"
    set $P5059, $P5061
  vivi_22003868:
    set $P5054, $P5059
  fallback3864:
    set fb_tmp_710, $P5054
    repr_defined $I5008, fb_tmp_710
    unless $I5008 goto if2197_else3862 
    set $P5062, fb_tmp_710["cstack"]
    set $P5064, $P5062
    goto if2197_end3863
  if2197_else3862:
    null $P5063
    set $P5064, $P5063
  if2197_end3863:
    unless_null $P5064, vivi_22013869
    nqp_get_sc_object $P5065, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5064, $P5065
  vivi_22013869:
    $P5040."push_pirop"("callmethod", "\"!cursor_capture\"", $P5051, "$P11", $P5053, $P5064 :named("result"))
    box $P5066, 1
    store_lex "$captured", $P5066
    goto if2191_end3853
  if2191_else3852:
.annotate 'line', 4108
.annotate 'line', 4109
    find_lex $P5067, "$ops"
    find_dynamic_lex $P5068, "%*REG"
    unless_null $P5068, fallback3872
    nqp_get_sc_object $P5070, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5069, $P5070
    set pkg_viv_tmp_197, $P5069
    set fb_tmp_713, pkg_viv_tmp_197
    repr_defined $I5011, fb_tmp_713
    unless $I5011 goto if2203_else3873 
    set $P5071, fb_tmp_713["%REG"]
    set $P5073, $P5071
    goto if2203_end3874
  if2203_else3873:
    null $P5072
    set $P5073, $P5072
  if2203_end3874:
    unless_null $P5073, vivi_22043875
    new $P5074, 'Hash'
    set pkg_viv_tmp_197["%REG"], $P5074
    set $P5073, $P5074
  vivi_22043875:
    unless_null $P5073, vivi_22053876
    die "Contextual %*REG not found"
    box $P5075, "Contextual %*REG not found"
    set $P5073, $P5075
  vivi_22053876:
    set $P5068, $P5073
  fallback3872:
    set fb_tmp_712, $P5068
    repr_defined $I5010, fb_tmp_712
    unless $I5010 goto if2202_else3870 
    set $P5076, fb_tmp_712["cur"]
    set $P5078, $P5076
    goto if2202_end3871
  if2202_else3870:
    null $P5077
    set $P5078, $P5077
  if2202_end3871:
    unless_null $P5078, vivi_22063877
    nqp_get_sc_object $P5079, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5078, $P5079
  vivi_22063877:
    find_dynamic_lex $P5080, "%*REG"
    unless_null $P5080, fallback3880
    nqp_get_sc_object $P5082, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5081, $P5082
    set pkg_viv_tmp_198, $P5081
    set fb_tmp_715, pkg_viv_tmp_198
    repr_defined $I5013, fb_tmp_715
    unless $I5013 goto if2208_else3881 
    set $P5083, fb_tmp_715["%REG"]
    set $P5085, $P5083
    goto if2208_end3882
  if2208_else3881:
    null $P5084
    set $P5085, $P5084
  if2208_end3882:
    unless_null $P5085, vivi_22093883
    new $P5086, 'Hash'
    set pkg_viv_tmp_198["%REG"], $P5086
    set $P5085, $P5086
  vivi_22093883:
    unless_null $P5085, vivi_22103884
    die "Contextual %*REG not found"
    box $P5087, "Contextual %*REG not found"
    set $P5085, $P5087
  vivi_22103884:
    set $P5080, $P5085
  fallback3880:
    set fb_tmp_714, $P5080
    repr_defined $I5012, fb_tmp_714
    unless $I5012 goto if2207_else3878 
    set $P5088, fb_tmp_714["cstack"]
    set $P5090, $P5088
    goto if2207_end3879
  if2207_else3878:
    null $P5089
    set $P5090, $P5089
  if2207_end3879:
    unless_null $P5090, vivi_22113885
    nqp_get_sc_object $P5091, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5090, $P5091
  vivi_22113885:
    $P5092 = $P5067."push_pirop"("callmethod", "\"!cursor_push_cstack\"", $P5078, "$P11", $P5090 :named("result"))
  if2191_end3853:
.annotate 'line', 4112
    find_lex $P5093, "$ops"
    $P5093."push_pirop"("set_addr", "$I11", $P101)
.annotate 'line', 4113
    find_lex $P5094, "$ops"
    find_dynamic_lex $P5095, "%*REG"
    unless_null $P5095, fallback3888
    nqp_get_sc_object $P5097, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5096, $P5097
    set pkg_viv_tmp_199, $P5096
    set fb_tmp_717, pkg_viv_tmp_199
    repr_defined $I5015, fb_tmp_717
    unless $I5015 goto if2213_else3889 
    set $P5098, fb_tmp_717["%REG"]
    set $P5100, $P5098
    goto if2213_end3890
  if2213_else3889:
    null $P5099
    set $P5100, $P5099
  if2213_end3890:
    unless_null $P5100, vivi_22143891
    new $P5101, 'Hash'
    set pkg_viv_tmp_199["%REG"], $P5101
    set $P5100, $P5101
  vivi_22143891:
    unless_null $P5100, vivi_22153892
    die "Contextual %*REG not found"
    box $P5102, "Contextual %*REG not found"
    set $P5100, $P5102
  vivi_22153892:
    set $P5095, $P5100
  fallback3888:
    set fb_tmp_716, $P5095
    repr_defined $I5014, fb_tmp_716
    unless $I5014 goto if2212_else3886 
    set $P5103, fb_tmp_716["bstack"]
    set $P5105, $P5103
    goto if2212_end3887
  if2212_else3886:
    null $P5104
    set $P5105, $P5104
  if2212_end3887:
    unless_null $P5105, vivi_22163893
    nqp_get_sc_object $P5106, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5105, $P5106
  vivi_22163893:
    $P5094."push_pirop"("push", $P5105, "$I11")
.annotate 'line', 4114
    find_lex $P5107, "$ops"
    find_dynamic_lex $P5108, "%*REG"
    unless_null $P5108, fallback3896
    nqp_get_sc_object $P5110, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5109, $P5110
    set pkg_viv_tmp_200, $P5109
    set fb_tmp_719, pkg_viv_tmp_200
    repr_defined $I5017, fb_tmp_719
    unless $I5017 goto if2218_else3897 
    set $P5111, fb_tmp_719["%REG"]
    set $P5113, $P5111
    goto if2218_end3898
  if2218_else3897:
    null $P5112
    set $P5113, $P5112
  if2218_end3898:
    unless_null $P5113, vivi_22193899
    new $P5114, 'Hash'
    set pkg_viv_tmp_200["%REG"], $P5114
    set $P5113, $P5114
  vivi_22193899:
    unless_null $P5113, vivi_22203900
    die "Contextual %*REG not found"
    box $P5115, "Contextual %*REG not found"
    set $P5113, $P5115
  vivi_22203900:
    set $P5108, $P5113
  fallback3896:
    set fb_tmp_718, $P5108
    repr_defined $I5016, fb_tmp_718
    unless $I5016 goto if2217_else3894 
    set $P5116, fb_tmp_718["bstack"]
    set $P5118, $P5116
    goto if2217_end3895
  if2217_else3894:
    null $P5117
    set $P5118, $P5117
  if2217_end3895:
    unless_null $P5118, vivi_22213901
    nqp_get_sc_object $P5119, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5118, $P5119
  vivi_22213901:
    $P5107."push_pirop"("push", $P5118, 0)
.annotate 'line', 4115
    find_lex $P5120, "$ops"
    find_dynamic_lex $P5121, "%*REG"
    unless_null $P5121, fallback3904
    nqp_get_sc_object $P5123, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5122, $P5123
    set pkg_viv_tmp_201, $P5122
    set fb_tmp_721, pkg_viv_tmp_201
    repr_defined $I5019, fb_tmp_721
    unless $I5019 goto if2223_else3905 
    set $P5124, fb_tmp_721["%REG"]
    set $P5126, $P5124
    goto if2223_end3906
  if2223_else3905:
    null $P5125
    set $P5126, $P5125
  if2223_end3906:
    unless_null $P5126, vivi_22243907
    new $P5127, 'Hash'
    set pkg_viv_tmp_201["%REG"], $P5127
    set $P5126, $P5127
  vivi_22243907:
    unless_null $P5126, vivi_22253908
    die "Contextual %*REG not found"
    box $P5128, "Contextual %*REG not found"
    set $P5126, $P5128
  vivi_22253908:
    set $P5121, $P5126
  fallback3904:
    set fb_tmp_720, $P5121
    repr_defined $I5018, fb_tmp_720
    unless $I5018 goto if2222_else3902 
    set $P5129, fb_tmp_720["bstack"]
    set $P5131, $P5129
    goto if2222_end3903
  if2222_else3902:
    null $P5130
    set $P5131, $P5130
  if2222_end3903:
    unless_null $P5131, vivi_22263909
    nqp_get_sc_object $P5132, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5131, $P5132
  vivi_22263909:
    find_dynamic_lex $P5133, "%*REG"
    unless_null $P5133, fallback3912
    nqp_get_sc_object $P5135, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5134, $P5135
    set pkg_viv_tmp_202, $P5134
    set fb_tmp_723, pkg_viv_tmp_202
    repr_defined $I5021, fb_tmp_723
    unless $I5021 goto if2228_else3913 
    set $P5136, fb_tmp_723["%REG"]
    set $P5138, $P5136
    goto if2228_end3914
  if2228_else3913:
    null $P5137
    set $P5138, $P5137
  if2228_end3914:
    unless_null $P5138, vivi_22293915
    new $P5139, 'Hash'
    set pkg_viv_tmp_202["%REG"], $P5139
    set $P5138, $P5139
  vivi_22293915:
    unless_null $P5138, vivi_22303916
    die "Contextual %*REG not found"
    box $P5140, "Contextual %*REG not found"
    set $P5138, $P5140
  vivi_22303916:
    set $P5133, $P5138
  fallback3912:
    set fb_tmp_722, $P5133
    repr_defined $I5020, fb_tmp_722
    unless $I5020 goto if2227_else3910 
    set $P5141, fb_tmp_722["pos"]
    set $P5143, $P5141
    goto if2227_end3911
  if2227_else3910:
    null $P5142
    set $P5143, $P5142
  if2227_end3911:
    unless_null $P5143, vivi_22313917
    nqp_get_sc_object $P5144, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5143, $P5144
  vivi_22313917:
    $P5120."push_pirop"("push", $P5131, $P5143)
.annotate 'line', 4116
    find_lex $P5145, "$ops"
    find_dynamic_lex $P5146, "%*REG"
    unless_null $P5146, fallback3920
    nqp_get_sc_object $P5148, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5147, $P5148
    set pkg_viv_tmp_203, $P5147
    set fb_tmp_725, pkg_viv_tmp_203
    repr_defined $I5023, fb_tmp_725
    unless $I5023 goto if2233_else3921 
    set $P5149, fb_tmp_725["%REG"]
    set $P5151, $P5149
    goto if2233_end3922
  if2233_else3921:
    null $P5150
    set $P5151, $P5150
  if2233_end3922:
    unless_null $P5151, vivi_22343923
    new $P5152, 'Hash'
    set pkg_viv_tmp_203["%REG"], $P5152
    set $P5151, $P5152
  vivi_22343923:
    unless_null $P5151, vivi_22353924
    die "Contextual %*REG not found"
    box $P5153, "Contextual %*REG not found"
    set $P5151, $P5153
  vivi_22353924:
    set $P5146, $P5151
  fallback3920:
    set fb_tmp_724, $P5146
    repr_defined $I5022, fb_tmp_724
    unless $I5022 goto if2232_else3918 
    set $P5154, fb_tmp_724["cstack"]
    set $P5156, $P5154
    goto if2232_end3919
  if2232_else3918:
    null $P5155
    set $P5156, $P5155
  if2232_end3919:
    unless_null $P5156, vivi_22363925
    nqp_get_sc_object $P5157, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5156, $P5157
  vivi_22363925:
    $P5145."push_pirop"("elements", "$I11", $P5156)
.annotate 'line', 4117
    find_lex $P5158, "$ops"
    find_dynamic_lex $P5159, "%*REG"
    unless_null $P5159, fallback3928
    nqp_get_sc_object $P5161, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5160, $P5161
    set pkg_viv_tmp_204, $P5160
    set fb_tmp_727, pkg_viv_tmp_204
    repr_defined $I5025, fb_tmp_727
    unless $I5025 goto if2238_else3929 
    set $P5162, fb_tmp_727["%REG"]
    set $P5164, $P5162
    goto if2238_end3930
  if2238_else3929:
    null $P5163
    set $P5164, $P5163
  if2238_end3930:
    unless_null $P5164, vivi_22393931
    new $P5165, 'Hash'
    set pkg_viv_tmp_204["%REG"], $P5165
    set $P5164, $P5165
  vivi_22393931:
    unless_null $P5164, vivi_22403932
    die "Contextual %*REG not found"
    box $P5166, "Contextual %*REG not found"
    set $P5164, $P5166
  vivi_22403932:
    set $P5159, $P5164
  fallback3928:
    set fb_tmp_726, $P5159
    repr_defined $I5024, fb_tmp_726
    unless $I5024 goto if2237_else3926 
    set $P5167, fb_tmp_726["bstack"]
    set $P5169, $P5167
    goto if2237_end3927
  if2237_else3926:
    null $P5168
    set $P5169, $P5168
  if2237_end3927:
    unless_null $P5169, vivi_22413933
    nqp_get_sc_object $P5170, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5169, $P5170
  vivi_22413933:
    $P5171 = $P5158."push_pirop"("push", $P5169, "$I11")
    .return ($P5171) 
.end
.HLL "nqp"
.namespace []
.sub "uniprop" :subid("cuid_136_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 4128
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "$cmpop", $P102 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_736 
    .local pmc fb_tmp_737 
    .local pmc pkg_viv_tmp_209 
    .local pmc fb_tmp_738 
    .local pmc fb_tmp_739 
    .local pmc fb_tmp_740 
    .local pmc pkg_viv_tmp_210 
    .local pmc fb_tmp_741 
    .local pmc fb_tmp_742 
    .local pmc pkg_viv_tmp_211 
    .local pmc fb_tmp_743 
    .local pmc fb_tmp_744 
    .local pmc pkg_viv_tmp_212 
    .local pmc fb_tmp_745 
    .local pmc fb_tmp_746 
    .local pmc pkg_viv_tmp_213 
    nqp_get_sc_object $P5001, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P102, $P5002
.annotate 'line', 4129
    nqp_decontainerize $P5003, _lex_param_0
    find_dynamic_lex $P5004, "%*REG"
    unless_null $P5004, fallback3974
    nqp_get_sc_object $P5006, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5005, $P5006
    set pkg_viv_tmp_209, $P5005
    set fb_tmp_737, pkg_viv_tmp_209
    repr_defined $I5002, fb_tmp_737
    unless $I5002 goto if2266_else3975 
    set $P5007, fb_tmp_737["%REG"]
    set $P5009, $P5007
    goto if2266_end3976
  if2266_else3975:
    null $P5008
    set $P5009, $P5008
  if2266_end3976:
    unless_null $P5009, vivi_22673977
    new $P5010, 'Hash'
    set pkg_viv_tmp_209["%REG"], $P5010
    set $P5009, $P5010
  vivi_22673977:
    unless_null $P5009, vivi_22683978
    die "Contextual %*REG not found"
    box $P5011, "Contextual %*REG not found"
    set $P5009, $P5011
  vivi_22683978:
    set $P5004, $P5009
  fallback3974:
    set fb_tmp_736, $P5004
    repr_defined $I5001, fb_tmp_736
    unless $I5001 goto if2265_else3972 
    set $P5012, fb_tmp_736["cur"]
    set $P5014, $P5012
    goto if2265_end3973
  if2265_else3972:
    null $P5013
    set $P5014, $P5013
  if2265_end3973:
    unless_null $P5014, vivi_22693979
    nqp_get_sc_object $P5015, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5014, $P5015
  vivi_22693979:
    $P5016 = $P5003."post_new"("Ops", $P5014 :named("result"))
    set $P101, $P5016
.annotate 'line', 4130
    $P5017 = _lex_param_1."negate"()
    unless $P5017 goto if2270_else3980 
    set $S5001, "ne"
    goto if2270_end3981
  if2270_else3980:
    set $S5001, "eq"
  if2270_end3981:
    box $P5018, $S5001
    set $P102, $P5018
.annotate 'line', 4131
    set fb_tmp_738, _lex_param_1
    repr_defined $I5003, fb_tmp_738
    unless $I5003 goto if2271_else3982 
    set $P5019, fb_tmp_738[0]
    set $P5021, $P5019
    goto if2271_end3983
  if2271_else3982:
    null $P5020
    set $P5021, $P5020
  if2271_end3983:
    unless_null $P5021, vivi_22723984
    nqp_get_sc_object $P5022, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5021, $P5022
  vivi_22723984:
    set $S5004, $P5021
    concat $S5003, "\"", $S5004
    concat $S5002, $S5003, "\""
    $P101."push_pirop"("assign", "$S10", $S5002)
.annotate 'line', 4132
    find_dynamic_lex $P5023, "%*REG"
    unless_null $P5023, fallback3987
    nqp_get_sc_object $P5025, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5024, $P5025
    set pkg_viv_tmp_210, $P5024
    set fb_tmp_740, pkg_viv_tmp_210
    repr_defined $I5005, fb_tmp_740
    unless $I5005 goto if2274_else3988 
    set $P5026, fb_tmp_740["%REG"]
    set $P5028, $P5026
    goto if2274_end3989
  if2274_else3988:
    null $P5027
    set $P5028, $P5027
  if2274_end3989:
    unless_null $P5028, vivi_22753990
    new $P5029, 'Hash'
    set pkg_viv_tmp_210["%REG"], $P5029
    set $P5028, $P5029
  vivi_22753990:
    unless_null $P5028, vivi_22763991
    die "Contextual %*REG not found"
    box $P5030, "Contextual %*REG not found"
    set $P5028, $P5030
  vivi_22763991:
    set $P5023, $P5028
  fallback3987:
    set fb_tmp_739, $P5023
    repr_defined $I5004, fb_tmp_739
    unless $I5004 goto if2273_else3985 
    set $P5031, fb_tmp_739["tgt"]
    set $P5033, $P5031
    goto if2273_end3986
  if2273_else3985:
    null $P5032
    set $P5033, $P5032
  if2273_end3986:
    unless_null $P5033, vivi_22773992
    nqp_get_sc_object $P5034, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5033, $P5034
  vivi_22773992:
    find_dynamic_lex $P5035, "%*REG"
    unless_null $P5035, fallback3995
    nqp_get_sc_object $P5037, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5036, $P5037
    set pkg_viv_tmp_211, $P5036
    set fb_tmp_742, pkg_viv_tmp_211
    repr_defined $I5007, fb_tmp_742
    unless $I5007 goto if2279_else3996 
    set $P5038, fb_tmp_742["%REG"]
    set $P5040, $P5038
    goto if2279_end3997
  if2279_else3996:
    null $P5039
    set $P5040, $P5039
  if2279_end3997:
    unless_null $P5040, vivi_22803998
    new $P5041, 'Hash'
    set pkg_viv_tmp_211["%REG"], $P5041
    set $P5040, $P5041
  vivi_22803998:
    unless_null $P5040, vivi_22813999
    die "Contextual %*REG not found"
    box $P5042, "Contextual %*REG not found"
    set $P5040, $P5042
  vivi_22813999:
    set $P5035, $P5040
  fallback3995:
    set fb_tmp_741, $P5035
    repr_defined $I5006, fb_tmp_741
    unless $I5006 goto if2278_else3993 
    set $P5043, fb_tmp_741["pos"]
    set $P5045, $P5043
    goto if2278_end3994
  if2278_else3993:
    null $P5044
    set $P5045, $P5044
  if2278_end3994:
    unless_null $P5045, vivi_22824000
    nqp_get_sc_object $P5046, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5045, $P5046
  vivi_22824000:
    $P101."push_pirop"("is_uprop", "$I11", "$S10", $P5033, $P5045)
.annotate 'line', 4133
    find_dynamic_lex $P5047, "%*REG"
    unless_null $P5047, fallback4003
    nqp_get_sc_object $P5049, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5048, $P5049
    set pkg_viv_tmp_212, $P5048
    set fb_tmp_744, pkg_viv_tmp_212
    repr_defined $I5009, fb_tmp_744
    unless $I5009 goto if2284_else4004 
    set $P5050, fb_tmp_744["%REG"]
    set $P5052, $P5050
    goto if2284_end4005
  if2284_else4004:
    null $P5051
    set $P5052, $P5051
  if2284_end4005:
    unless_null $P5052, vivi_22854006
    new $P5053, 'Hash'
    set pkg_viv_tmp_212["%REG"], $P5053
    set $P5052, $P5053
  vivi_22854006:
    unless_null $P5052, vivi_22864007
    die "Contextual %*REG not found"
    box $P5054, "Contextual %*REG not found"
    set $P5052, $P5054
  vivi_22864007:
    set $P5047, $P5052
  fallback4003:
    set fb_tmp_743, $P5047
    repr_defined $I5008, fb_tmp_743
    unless $I5008 goto if2283_else4001 
    set $P5055, fb_tmp_743["fail"]
    set $P5057, $P5055
    goto if2283_end4002
  if2283_else4001:
    null $P5056
    set $P5057, $P5056
  if2283_end4002:
    unless_null $P5057, vivi_22874008
    nqp_get_sc_object $P5058, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5057, $P5058
  vivi_22874008:
    $P101."push_pirop"($P102, "$I11", 0, $P5057)
.annotate 'line', 4134
    $P5059 = _lex_param_1."subtype"()
    set $S5005, $P5059
    iseq $I5010, $S5005, "zerowidth"
    if $I5010 goto unless2288_end4010 
    find_dynamic_lex $P5060, "%*REG"
    unless_null $P5060, fallback4013
    nqp_get_sc_object $P5062, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5061, $P5062
    set pkg_viv_tmp_213, $P5061
    set fb_tmp_746, pkg_viv_tmp_213
    repr_defined $I5012, fb_tmp_746
    unless $I5012 goto if2290_else4014 
    set $P5063, fb_tmp_746["%REG"]
    set $P5065, $P5063
    goto if2290_end4015
  if2290_else4014:
    null $P5064
    set $P5065, $P5064
  if2290_end4015:
    unless_null $P5065, vivi_22914016
    new $P5066, 'Hash'
    set pkg_viv_tmp_213["%REG"], $P5066
    set $P5065, $P5066
  vivi_22914016:
    unless_null $P5065, vivi_22924017
    die "Contextual %*REG not found"
    box $P5067, "Contextual %*REG not found"
    set $P5065, $P5067
  vivi_22924017:
    set $P5060, $P5065
  fallback4013:
    set fb_tmp_745, $P5060
    repr_defined $I5011, fb_tmp_745
    unless $I5011 goto if2289_else4011 
    set $P5068, fb_tmp_745["pos"]
    set $P5070, $P5068
    goto if2289_end4012
  if2289_else4011:
    null $P5069
    set $P5070, $P5069
  if2289_end4012:
    unless_null $P5070, vivi_22934018
    nqp_get_sc_object $P5071, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5070, $P5071
  vivi_22934018:
    $P5072 = $P101."push_pirop"("inc", $P5070)
  unless2288_end4010:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "ws" :subid("cuid_137_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 4139
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    nqp_decontainerize $P5001, _lex_param_0
    $P5002 = $P5001."subrule"(_lex_param_1)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "regex_mark" :subid("cuid_138_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 4141
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 
    .lex "self", _lex_param_0 
    .lex "$ops", _lex_param_1 
    .lex "$mark", _lex_param_2 
    .lex "$pos", _lex_param_3 
    .lex "$rep", _lex_param_4 
    .local pmc fb_tmp_747 
    .local pmc fb_tmp_748 
    .local pmc pkg_viv_tmp_214 
.annotate 'line', 4142
    find_dynamic_lex $P5001, "%*REG"
    unless_null $P5001, fallback4021
    nqp_get_sc_object $P5003, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_214, $P5002
    set fb_tmp_748, pkg_viv_tmp_214
    repr_defined $I5002, fb_tmp_748
    unless $I5002 goto if2295_else4022 
    set $P5004, fb_tmp_748["%REG"]
    set $P5006, $P5004
    goto if2295_end4023
  if2295_else4022:
    null $P5005
    set $P5006, $P5005
  if2295_end4023:
    unless_null $P5006, vivi_22964024
    new $P5007, 'Hash'
    set pkg_viv_tmp_214["%REG"], $P5007
    set $P5006, $P5007
  vivi_22964024:
    unless_null $P5006, vivi_22974025
    die "Contextual %*REG not found"
    box $P5008, "Contextual %*REG not found"
    set $P5006, $P5008
  vivi_22974025:
    set $P5001, $P5006
  fallback4021:
    set fb_tmp_747, $P5001
    repr_defined $I5001, fb_tmp_747
    unless $I5001 goto if2294_else4019 
    set $P5009, fb_tmp_747["bstack"]
    set $P5011, $P5009
    goto if2294_end4020
  if2294_else4019:
    null $P5010
    set $P5011, $P5010
  if2294_end4020:
    unless_null $P5011, vivi_22984026
    nqp_get_sc_object $P5012, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5011, $P5012
  vivi_22984026:
    $P5013 = _lex_param_1."push_pirop"("nqp_rxmark", $P5011, _lex_param_2, _lex_param_3, _lex_param_4)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "regex_peek" :subid("cuid_139_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 4145
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 :slurpy 
    .const 'Sub' $P5018 = 'cuid_380_1366375329.52446' 
    capture_lex $P5018 
    .lex "self", _lex_param_0 
    .lex "$ops", _lex_param_1 
    .lex "$mark", _lex_param_2 
    .lex "@regs", _lex_param_3 
    .local pmc fb_tmp_749 
    .local pmc fb_tmp_750 
    .local pmc pkg_viv_tmp_215 
.annotate 'line', 4146
    find_dynamic_lex $P5001, "%*REG"
    unless_null $P5001, fallback4029
    nqp_get_sc_object $P5003, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_215, $P5002
    set fb_tmp_750, pkg_viv_tmp_215
    repr_defined $I5002, fb_tmp_750
    unless $I5002 goto if2300_else4030 
    set $P5004, fb_tmp_750["%REG"]
    set $P5006, $P5004
    goto if2300_end4031
  if2300_else4030:
    null $P5005
    set $P5006, $P5005
  if2300_end4031:
    unless_null $P5006, vivi_23014032
    new $P5007, 'Hash'
    set pkg_viv_tmp_215["%REG"], $P5007
    set $P5006, $P5007
  vivi_23014032:
    unless_null $P5006, vivi_23024033
    die "Contextual %*REG not found"
    box $P5008, "Contextual %*REG not found"
    set $P5006, $P5008
  vivi_23024033:
    set $P5001, $P5006
  fallback4029:
    set fb_tmp_749, $P5001
    repr_defined $I5001, fb_tmp_749
    unless $I5001 goto if2299_else4027 
    set $P5009, fb_tmp_749["bstack"]
    set $P5011, $P5009
    goto if2299_end4028
  if2299_else4027:
    null $P5010
    set $P5011, $P5010
  if2299_end4028:
    unless_null $P5011, vivi_23034034
    nqp_get_sc_object $P5012, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5011, $P5012
  vivi_23034034:
    _lex_param_1."push_pirop"("nqp_rxpeek", "$I19", $P5011, _lex_param_2)
    set $P5013, _lex_param_3
    iter $P5015, _lex_param_3
  for_next4045:
    unless $P5015, for_done4047
    shift $P5017, $P5015
  for_redo4046:
    .const 'Sub' $P5016 = 'cuid_380_1366375329.52446' 
    capture_lex $P5016
    $P5013 = $P5016($P5017)
    goto for_next4045
  for_done4047:
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_380_1366375329.52446") :anon :lex :outer("cuid_139_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 4147
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_751 
    .local pmc fb_tmp_752 
    .local pmc pkg_viv_tmp_216 
.annotate 'line', 4148
    find_lex $P5001, "$ops"
    $P5001."push_pirop"("inc", "$I19")
    set $S5001, _lex_param_0
    isne $I5001, $S5001, "*"
    box $P5017, $I5001
    set $P5016, $P5017
    unless $I5001 goto if2304_end4036 
.annotate 'line', 4149
    find_lex $P5002, "$ops"
    find_dynamic_lex $P5003, "%*REG"
    unless_null $P5003, fallback4039
    nqp_get_sc_object $P5005, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5004, $P5005
    set pkg_viv_tmp_216, $P5004
    set fb_tmp_752, pkg_viv_tmp_216
    repr_defined $I5003, fb_tmp_752
    unless $I5003 goto if2306_else4040 
    set $P5006, fb_tmp_752["%REG"]
    set $P5008, $P5006
    goto if2306_end4041
  if2306_else4040:
    null $P5007
    set $P5008, $P5007
  if2306_end4041:
    unless_null $P5008, vivi_23074042
    new $P5009, 'Hash'
    set pkg_viv_tmp_216["%REG"], $P5009
    set $P5008, $P5009
  vivi_23074042:
    unless_null $P5008, vivi_23084043
    die "Contextual %*REG not found"
    box $P5010, "Contextual %*REG not found"
    set $P5008, $P5010
  vivi_23084043:
    set $P5003, $P5008
  fallback4039:
    set fb_tmp_751, $P5003
    repr_defined $I5002, fb_tmp_751
    unless $I5002 goto if2305_else4037 
    set $P5011, fb_tmp_751["bstack"]
    set $P5013, $P5011
    goto if2305_end4038
  if2305_else4037:
    null $P5012
    set $P5013, $P5012
  if2305_end4038:
    unless_null $P5013, vivi_23094044
    nqp_get_sc_object $P5014, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5013, $P5014
  vivi_23094044:
    set $S5003, $P5013
    concat $S5002, $S5003, "[$I19]"
    $P5015 = $P5002."push_pirop"("set", _lex_param_0, $S5002)
    set $P5016, $P5015
  if2304_end4036:
    .return ($P5016) 
.end
.HLL "nqp"
.namespace []
.sub "regex_commit" :subid("cuid_140_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 4153
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "self", _lex_param_0 
    .lex "$ops", _lex_param_1 
    .lex "$mark", _lex_param_2 
    .local pmc fb_tmp_753 
    .local pmc fb_tmp_754 
    .local pmc pkg_viv_tmp_217 
.annotate 'line', 4154
    find_dynamic_lex $P5001, "%*REG"
    unless_null $P5001, fallback4050
    nqp_get_sc_object $P5003, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_217, $P5002
    set fb_tmp_754, pkg_viv_tmp_217
    repr_defined $I5002, fb_tmp_754
    unless $I5002 goto if2311_else4051 
    set $P5004, fb_tmp_754["%REG"]
    set $P5006, $P5004
    goto if2311_end4052
  if2311_else4051:
    null $P5005
    set $P5006, $P5005
  if2311_end4052:
    unless_null $P5006, vivi_23124053
    new $P5007, 'Hash'
    set pkg_viv_tmp_217["%REG"], $P5007
    set $P5006, $P5007
  vivi_23124053:
    unless_null $P5006, vivi_23134054
    die "Contextual %*REG not found"
    box $P5008, "Contextual %*REG not found"
    set $P5006, $P5008
  vivi_23134054:
    set $P5001, $P5006
  fallback4050:
    set fb_tmp_753, $P5001
    repr_defined $I5001, fb_tmp_753
    unless $I5001 goto if2310_else4048 
    set $P5009, fb_tmp_753["bstack"]
    set $P5011, $P5009
    goto if2310_end4049
  if2310_else4048:
    null $P5010
    set $P5011, $P5010
  if2310_end4049:
    unless_null $P5011, vivi_23144055
    nqp_get_sc_object $P5012, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set $P5011, $P5012
  vivi_23144055:
    $P5013 = _lex_param_1."push_pirop"("nqp_rxcommit", $P5011, _lex_param_2)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_141_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 4157
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_33 :opt_flag 
    .lex "self", _lex_param_0 
    .lex "$unknown", _lex_param_1 
    .lex "$want", _lex_param_2 
    if haz_param_33, default4056
    nqp_get_sc_object $P5004, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459", 25
    set _lex_param_2, $P5004
  default4056:
.annotate 'line', 4158
    get_how $P5001, _lex_param_1
    $P5002 = $P5001."name"(_lex_param_1)
    set $S5002, $P5002
    concat $S5001, "Unknown QAST node type ", $S5002
    box $P5003, $S5001
    die $P5003
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "operations" :subid("cuid_142_1366375329.52446") :anon :lex :outer("cuid_304_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
.annotate 'line', 4161
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_get_sc_object $P5001, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_382_1366375329.52446") :load :init
.annotate 'file', "src/stage2/QAST.nqp"
    .const 'Sub' $P5001 = 'cuid_381_1366375329.52446' 
    capture_lex $P5001 
    .local pmc cur_sc 
    .local pmc conflicts 
    nqp_dynop_setup 
    nqp_bigint_setup 
    getinterp $P5001
    get_class $P5002, "LexPad"
    get_class $P5003, "NQPLexPad"
    $P5004 = $P5001."hll_map"($P5002, $P5003)
    load_bytecode "ModuleLoader.pbc"
    .const 'Sub' $P5001 = "cuid_145_1366375329.52446" 
    get_hll_global $P5002, "ModuleLoader"
    $P5003 = $P5002."load_setting"("NQPCORE")
    $P5004 = $P5001."set_outer_ctx"($P5003)
    load_bytecode "ModuleLoader.pbc"
    get_hll_global $P5001, "ModuleLoader"
    $P5001."load_module"("NQPHLL")
    nqp_create_sc $P5001, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675"
    set cur_sc, $P5001
    $P5002 = cur_sc."set_description"("src/stage2/QAST.nqp")
    new $P5003, 'QRPA'
    set conflicts, $P5003
    new $P5004, 'ResizableStringArray'
    null $S5001
    push $P5004, $S5001
    push $P5004, "P6opaque"
    push $P5004, "PIRT"
    push $P5004, "QAST"
    push $P5004, "QRegex"
    push $P5004, "NQPCursorRole"
    push $P5004, "17557A4BF9D79163D1673BC4A1E863C878435BF4-1366375320.03982"
    push $P5004, "src/stage2/QRegex.nqp"
    push $P5004, "NQPMatch"
    push $P5004, "NQPCursor"
    push $P5004, "NQPRegexMethod"
    push $P5004, "NQPRegex"
    push $P5004, "HLL"
    push $P5004, "DEFAULT"
    push $P5004, "CREATE"
    push $P5004, "C1551CDFE97585F388CE084B59E3F76005129174-1366375316.4459"
    push $P5004, "src/stage2/NQPCORE.setting"
    push $P5004, "bless"
    push $P5004, "BUILDALL"
    push $P5004, "new"
    push $P5004, "Str"
    push $P5004, "Numeric"
    push $P5004, "Int"
    push $P5004, "defined"
    push $P5004, "ACCEPTS"
    push $P5004, "isa"
    push $P5004, "result"
    push $P5004, "$!result"
    push $P5004, "children_pir"
    push $P5004, "escape"
    push $P5004, "push"
    push $P5004, "push_pirop"
    push $P5004, "subid"
    push $P5004, "pirflags"
    push $P5004, "name"
    push $P5004, "loadlibs"
    push $P5004, "hll"
    push $P5004, "namespace"
    push $P5004, "close_sub"
    push $P5004, "pir"
    push $P5004, "collect_sub_pir_into"
    push $P5004, "@!children"
    push $P5004, "$!subid"
    push $P5004, "$!pirflags"
    push $P5004, "$!name"
    push $P5004, "$!hll"
    push $P5004, "@!namespace"
    push $P5004, "@!loadlibs"
    push $P5004, "@!nested_blocks"
    push $P5004, "$!cached_pir"
    push $P5004, "node"
    push $P5004, "$!node"
    push $P5004, "compile_op"
    push $P5004, "compile_pirop"
    push $P5004, "add_core_op"
    push $P5004, "add_hll_op"
    push $P5004, "add_core_pirop_mapping"
    push $P5004, "add_hll_pirop_mapping"
    push $P5004, "set_core_op_inlinability"
    push $P5004, "set_hll_op_inlinability"
    push $P5004, "is_inlinable"
    push $P5004, "set_core_op_result_type"
    push $P5004, "set_hll_op_result_type"
    push $P5004, "attach_result_type"
    push $P5004, "add_hll_box"
    push $P5004, "add_hll_unbox"
    push $P5004, "box"
    push $P5004, "unbox"
    push $P5004, "BUILD"
    push $P5004, "D6C43C6D5551ABE2C3BB5A1D8D41F8B3ADC3CF08-1366375324.50773"
    push $P5004, "src/stage2/gen/NQPHLL.pm"
    push $P5004, "backend"
    push $P5004, "language"
    push $P5004, "compiler"
    push $P5004, "config"
    push $P5004, "autoprint"
    push $P5004, "interactive"
    push $P5004, "interactive_result"
    push $P5004, "interactive_exception"
    push $P5004, "eval"
    push $P5004, "ctxsave"
    push $P5004, "panic"
    push $P5004, "stages"
    push $P5004, "parsegrammar"
    push $P5004, "parseactions"
    push $P5004, "interactive_banner"
    push $P5004, "interactive_prompt"
    push $P5004, "compiler_progname"
    push $P5004, "commandline_options"
    push $P5004, "command_line"
    push $P5004, "command_eval"
    push $P5004, "process_args"
    push $P5004, "evalfiles"
    push $P5004, "exists_stage"
    push $P5004, "compile"
    push $P5004, "start"
    push $P5004, "parse"
    push $P5004, "ast"
    push $P5004, "dumper"
    push $P5004, "usage"
    push $P5004, "version"
    push $P5004, "show-config"
    push $P5004, "verbose-config"
    push $P5004, "nqpevent"
    push $P5004, "removestage"
    push $P5004, "addstage"
    push $P5004, "parse_name"
    push $P5004, "lineof"
    push $P5004, "user-progname"
    push $P5004, "cli-options"
    push $P5004, "cli-arguments"
    push $P5004, "default_backend"
    push $P5004, "source_for_node"
    push $P5004, "post"
    push $P5004, "type_to_register_type"
    push $P5004, "force_return_boxing_for_hll"
    push $P5004, "unique"
    push $P5004, "rxescape"
    push $P5004, "as_post"
    push $P5004, "deserialization_code"
    push $P5004, "compile_all_the_stmts"
    push $P5004, "apply_context"
    push $P5004, "compile_var"
    push $P5004, "as_post_clear_bindval"
    push $P5004, "coerce"
    push $P5004, "infer_type"
    push $P5004, "children"
    push $P5004, "regex_post"
    push $P5004, "post_new"
    push $P5004, "alt"
    push $P5004, "altseq"
    push $P5004, "anchor"
    push $P5004, "dba"
    push $P5004, "cclass"
    push $P5004, "concat"
    push $P5004, "conj"
    push $P5004, "conjseq"
    push $P5004, "enumcharlist"
    push $P5004, "literal"
    push $P5004, "pass"
    push $P5004, "qastnode"
    push $P5004, "quant"
    push $P5004, "scan"
    push $P5004, "subcapture"
    push $P5004, "subrule"
    push $P5004, "uniprop"
    push $P5004, "ws"
    push $P5004, "regex_mark"
    push $P5004, "regex_peek"
    push $P5004, "regex_commit"
    push $P5004, "operations"
    push $P5004, "@!stages"
    push $P5004, "$!parsegrammar"
    push $P5004, "$!parseactions"
    push $P5004, "@!cmdoptions"
    push $P5004, "$!usage"
    push $P5004, "$!compiler_progname"
    push $P5004, "$!language"
    push $P5004, "%!config"
    push $P5004, "$!user_progname"
    push $P5004, "@!cli-arguments"
    push $P5004, "%!cli-options"
    push $P5004, "$!backend"
    push $P5004, "handler_allocator"
    push $P5004, "fresh_p"
    push $P5004, "fresh_s"
    push $P5004, "fresh_i"
    push $P5004, "fresh_n"
    push $P5004, "cur_p"
    push $P5004, "cur_s"
    push $P5004, "cur_i"
    push $P5004, "cur_n"
    push $P5004, "$!cur_p"
    push $P5004, "$!cur_s"
    push $P5004, "$!cur_i"
    push $P5004, "$!cur_n"
    push $P5004, "add_param"
    push $P5004, "add_lexical"
    push $P5004, "add_local"
    push $P5004, "register_lexical"
    push $P5004, "register_local"
    push $P5004, "qast"
    push $P5004, "outer"
    push $P5004, "params"
    push $P5004, "lexicals"
    push $P5004, "locals"
    push $P5004, "lex_reg"
    push $P5004, "local_type"
    push $P5004, "local_type_long"
    push $P5004, "lexical_type"
    push $P5004, "lexical_type_long"
    push $P5004, "reg_type"
    push $P5004, "add_loadlibs"
    push $P5004, "fresh_lex_p"
    push $P5004, "fresh_lex_s"
    push $P5004, "fresh_lex_i"
    push $P5004, "fresh_lex_n"
    push $P5004, "$!qast"
    push $P5004, "$!outer"
    push $P5004, "@!params"
    push $P5004, "@!locals"
    push $P5004, "@!lexicals"
    push $P5004, "%!local_types"
    push $P5004, "%!lexical_types"
    push $P5004, "%!lexical_regs"
    push $P5004, "%!reg_types"
    push $P5004, "$!param_idx"
    push $P5004, "$!cur_lex_p"
    push $P5004, "$!cur_lex_s"
    push $P5004, "$!cur_lex_i"
    push $P5004, "$!cur_lex_n"
    push $P5004, ""
    push $P5004, "!INTERPOLATE"
    push $P5004, "__6MODEL_CORE__"
    push $P5004, "GLOBALish"
    push $P5004, "EXPORT"
    push $P5004, "6F214FD4A6984F7B796452FAC8924B10965001E5-1366375312.91878"
    push $P5004, "src/stage2/gen/nqp-mo.pm"
    push $P5004, "PIRT::CallResult"
    push $P5004, "get_string"
    push $P5004, "PIRT::Node"
    push $P5004, "PIRT::Sub"
    push $P5004, "nested_blocks"
    push $P5004, "cached_pir"
    push $P5004, "PIRT::Ops"
    push $P5004, "PIRT::Label"
    push $P5004, "QAST::Operations"
    push $P5004, "QAST::Compiler"
    push $P5004, "code"
    push $P5004, "RegAlloc"
    push $P5004, "BlockInfo"
    push $P5004, "6F03D67C6A0A511F6F9FDA0C4D1E063D61830D12-1366375318.27176"
    push $P5004, "src/stage2/QASTNode.nqp"
    push $P5004, "CallResult"
    push $P5004, "Node"
    push $P5004, "Sub"
    push $P5004, "Ops"
    push $P5004, "Label"
    push $P5004, "CompileTimeValue"
    push $P5004, "SpecialArg"
    push $P5004, "Regex"
    push $P5004, "IVal"
    push $P5004, "NVal"
    push $P5004, "SVal"
    push $P5004, "BVal"
    push $P5004, "WVal"
    push $P5004, "Want"
    push $P5004, "Var"
    push $P5004, "VarWithFallback"
    push $P5004, "Op"
    push $P5004, "VM"
    push $P5004, "Stmts"
    push $P5004, "Stmt"
    push $P5004, "Block"
    push $P5004, "Unquote"
    push $P5004, "CompUnit"
    push $P5004, "InlinePlaceholder"
    push $P5004, "Operations"
    push $P5004, "Compiler"
    push $P5004, "NFA"
    push $P5004, "Grammar"
    push $P5004, "Actions"
    push $P5004, "Backend"
    push $P5004, "CommandLine"
    push $P5004, "World"
    .const 'Sub' $P5005 = 'cuid_381_1366375329.52446' 
    capture_lex $P5005
    $P5006 = $P5005()
    nqp_deserialize_sc "", cur_sc, $P5004, $P5006, conflicts
    unless conflicts goto if2315_end4058 
    die "Repossession conflicts occurred during deserialization"
  if2315_end4058:
    .const "LexInfo" $P5001 = "cuid_145_1366375329.52446"
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    $P5001."set_static_lexpad_value"("GLOBALish", $P5002)
    .const "LexInfo" $P5003 = "cuid_145_1366375329.52446"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_145_1366375329.52446"
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 0
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_145_1366375329.52446"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_145_1366375329.52446"
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 1
    $P5001."set_static_lexpad_value"("EXPORT", $P5002)
    .const "LexInfo" $P5003 = "cuid_145_1366375329.52446"
    $P5004 = $P5003."finish_static_lexpad"()
    .const 'Sub' $P5001 = "cuid_1_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 4
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_2_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 5
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_146_1366375329.52446"
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 3
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_146_1366375329.52446"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_146_1366375329.52446"
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 3
    $P5001."set_static_lexpad_value"("$?CLASS", $P5002)
    .const "LexInfo" $P5003 = "cuid_146_1366375329.52446"
    $P5004 = $P5003."finish_static_lexpad"()
    .const 'Sub' $P5001 = "cuid_3_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 7
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_4_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 8
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_5_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 9
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_6_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 10
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_7_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 11
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_8_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 12
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_9_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 13
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_10_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 14
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_11_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 15
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_147_1366375329.52446"
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 6
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_147_1366375329.52446"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_147_1366375329.52446"
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 6
    $P5001."set_static_lexpad_value"("$?CLASS", $P5002)
    .const "LexInfo" $P5003 = "cuid_147_1366375329.52446"
    $P5004 = $P5003."finish_static_lexpad"()
    .const 'Sub' $P5001 = "cuid_12_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 17
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_13_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 18
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_14_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 19
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_15_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 20
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_16_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 21
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_17_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 22
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_18_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 23
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_19_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 24
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_20_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 25
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_21_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 26
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_22_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 27
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_23_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 28
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_24_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 29
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_25_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 30
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_153_1366375329.52446"
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 16
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_153_1366375329.52446"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_153_1366375329.52446"
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 16
    $P5001."set_static_lexpad_value"("$?CLASS", $P5002)
    .const "LexInfo" $P5003 = "cuid_153_1366375329.52446"
    $P5004 = $P5003."finish_static_lexpad"()
    .const 'Sub' $P5001 = "cuid_26_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 32
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_27_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 33
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_28_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 34
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_29_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 35
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_30_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 36
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_31_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 37
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_158_1366375329.52446"
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_158_1366375329.52446"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_158_1366375329.52446"
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 31
    $P5001."set_static_lexpad_value"("$?CLASS", $P5002)
    .const "LexInfo" $P5003 = "cuid_158_1366375329.52446"
    $P5004 = $P5003."finish_static_lexpad"()
    .const 'Sub' $P5001 = "cuid_32_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 39
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_33_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 40
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_34_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 41
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_35_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 42
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_161_1366375329.52446"
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 38
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_161_1366375329.52446"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_161_1366375329.52446"
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 38
    $P5001."set_static_lexpad_value"("$?CLASS", $P5002)
    .const "LexInfo" $P5003 = "cuid_161_1366375329.52446"
    $P5004 = $P5003."finish_static_lexpad"()
    .const 'Sub' $P5001 = "cuid_36_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 44
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_37_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 45
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_38_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 46
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_39_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 47
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_40_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 48
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_41_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 49
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_42_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 50
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_43_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 51
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_44_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 52
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_45_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 53
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_46_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 54
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_47_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 55
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_48_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 56
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_49_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 57
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_50_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 58
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_51_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 59
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_170_1366375329.52446"
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_170_1366375329.52446"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_170_1366375329.52446"
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 43
    $P5001."set_static_lexpad_value"("$?CLASS", $P5002)
    .const "LexInfo" $P5003 = "cuid_170_1366375329.52446"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_304_1366375329.52446"
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 61
    $P5001."set_static_lexpad_value"("RegAlloc", $P5002)
    .const "LexInfo" $P5003 = "cuid_304_1366375329.52446"
    $P5004 = $P5003."finish_static_lexpad"()
    .const 'Sub' $P5001 = "cuid_52_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 62
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_53_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 63
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_54_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 64
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_55_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 65
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_56_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 66
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_57_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 67
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_58_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 68
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_59_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 69
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_60_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 70
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_61_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 71
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_62_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 72
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_308_1366375329.52446"
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 61
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_308_1366375329.52446"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_308_1366375329.52446"
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 61
    $P5001."set_static_lexpad_value"("$?CLASS", $P5002)
    .const "LexInfo" $P5003 = "cuid_308_1366375329.52446"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_304_1366375329.52446"
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    $P5001."set_static_lexpad_value"("BlockInfo", $P5002)
    .const "LexInfo" $P5003 = "cuid_304_1366375329.52446"
    $P5004 = $P5003."finish_static_lexpad"()
    .const 'Sub' $P5001 = "cuid_63_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 74
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_64_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 75
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_65_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 76
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_66_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 77
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_67_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 78
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_68_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 79
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_69_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 80
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_70_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 81
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_71_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 82
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_72_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 83
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_73_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 84
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_74_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 85
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_75_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 86
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_76_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 87
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_77_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 88
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_78_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 89
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_79_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 90
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_80_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 91
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_81_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 92
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_82_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 93
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_83_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 94
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_84_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 95
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_85_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 96
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_86_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 97
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_309_1366375329.52446"
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_309_1366375329.52446"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_309_1366375329.52446"
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 73
    $P5001."set_static_lexpad_value"("$?CLASS", $P5002)
    .const "LexInfo" $P5003 = "cuid_309_1366375329.52446"
    $P5004 = $P5003."finish_static_lexpad"()
    .const 'Sub' $P5001 = "cuid_87_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 98
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_88_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 99
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_89_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 100
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_90_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 101
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_91_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 102
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_92_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 103
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_93_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 104
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_94_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 105
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_95_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 106
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_96_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 107
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_97_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 108
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_98_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 109
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_99_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 110
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_100_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 111
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_101_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 112
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_102_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 113
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_103_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 114
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_104_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 115
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_105_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 116
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_106_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 117
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_107_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 118
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_108_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 119
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_109_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 120
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_110_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 121
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_111_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 122
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_112_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 123
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_113_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 124
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_114_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 125
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_115_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 126
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_116_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 127
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_117_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 128
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_118_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 129
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_119_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 130
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_120_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 131
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_121_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 132
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_122_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 133
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_123_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 134
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_124_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 135
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_125_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 136
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_126_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 137
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_127_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 138
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_128_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 139
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_129_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 140
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_130_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 141
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_131_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 142
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_132_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 143
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_133_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 144
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_134_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 145
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_135_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 146
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_136_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 147
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_137_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 148
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_138_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 149
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_139_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 150
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_140_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 151
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_141_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 152
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_142_1366375329.52446" 
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 153
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_304_1366375329.52446"
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 60
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_304_1366375329.52446"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_304_1366375329.52446"
    nqp_get_sc_object $P5002, "A4849A84979AD86CAAEE16155C01DC6F44AF3096-1366375329.57675", 60
    $P5001."set_static_lexpad_value"("$?CLASS", $P5002)
    .const "LexInfo" $P5003 = "cuid_304_1366375329.52446"
    $P5004 = $P5003."finish_static_lexpad"()
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_381_1366375329.52446") :anon :lex :outer("cuid_382_1366375329.52446")
.annotate 'file', "src/stage2/QAST.nqp"
    new $P5001, 'QRPA'
    .const 'Sub' $P5002 = "cuid_1_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_2_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_3_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_4_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_5_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_6_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_7_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_8_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_9_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_10_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_11_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_12_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_13_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_14_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_15_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_16_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_17_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_18_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_19_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_20_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_21_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_22_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_23_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_24_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_25_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_26_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_27_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_28_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_29_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_30_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_31_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_32_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_33_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_34_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_35_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_36_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_37_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_38_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_39_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_40_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_41_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_42_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_43_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_44_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_45_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_46_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_47_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_48_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_49_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_50_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_51_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_52_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_53_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_54_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_55_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_56_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_57_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_58_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_59_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_60_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_61_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_62_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_63_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_64_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_65_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_66_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_67_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_68_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_69_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_70_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_71_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_72_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_73_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_74_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_75_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_76_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_77_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_78_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_79_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_80_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_81_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_82_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_83_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_84_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_85_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_86_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_87_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_88_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_89_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_90_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_91_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_92_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_93_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_94_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_95_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_96_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_97_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_98_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_99_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_100_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_101_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_102_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_103_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_104_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_105_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_106_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_107_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_108_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_109_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_110_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_111_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_112_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_113_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_114_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_115_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_116_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_117_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_118_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_119_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_120_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_121_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_122_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_123_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_124_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_125_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_126_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_127_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_128_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_129_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_130_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_131_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_132_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_133_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_134_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_135_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_136_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_137_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_138_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_139_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_140_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_141_1366375329.52446" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_142_1366375329.52446" 
    push $P5001, $P5002
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_383_1366375329.52446") :load
.annotate 'file', "src/stage2/QAST.nqp"
    .const 'Sub' $P5001 = "cuid_145_1366375329.52446" 
    $P5002 = $P5001()
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_384_1366375329.52446") :main
.annotate 'file', "src/stage2/QAST.nqp"
    .param pmc ARGS :slurpy 
    .const 'Sub' $P5001 = "cuid_145_1366375329.52446" 
    $P5002 = $P5001(ARGS :flat)
    .return ($P5002) 
.end